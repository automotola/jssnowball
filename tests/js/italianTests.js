QUnit.config.hidepassed = true;
var Stem = snowballFactory.newStemmer('italian').stem;
test("a -> a", function() {deepEqual( Stem("a"), "a");});
test("à -> à", function() {deepEqual( Stem("à"), "à");});
test("aa -> aa", function() {deepEqual( Stem("aa"), "aa");});
test("aalst -> aalst", function() {deepEqual( Stem("aalst"), "aalst");});
test("ab -> ab", function() {deepEqual( Stem("ab"), "ab");});
test("abakoumova -> abakoumov", function() {deepEqual( Stem("abakoumova"), "abakoumov");});
test("abano -> aban", function() {deepEqual( Stem("abano"), "aban");});
test("abate -> abat", function() {deepEqual( Stem("abate"), "abat");});
test("abati -> abat", function() {deepEqual( Stem("abati"), "abat");});
test("abbacinare -> abbacin", function() {deepEqual( Stem("abbacinare"), "abbacin");});
test("abbacinati -> abbacin", function() {deepEqual( Stem("abbacinati"), "abbacin");});
test("abbadia -> abbad", function() {deepEqual( Stem("abbadia"), "abbad");});
test("abbado -> abbad", function() {deepEqual( Stem("abbado"), "abbad");});
test("abbagliaron -> abbagliaron", function() {deepEqual( Stem("abbagliaron"), "abbagliaron");});
test("abbagliato -> abbagl", function() {deepEqual( Stem("abbagliato"), "abbagl");});
test("abbaia -> abbai", function() {deepEqual( Stem("abbaia"), "abbai");});
test("abbaiano -> abbai", function() {deepEqual( Stem("abbaiano"), "abbai");});
test("abbaiar -> abbai", function() {deepEqual( Stem("abbaiar"), "abbai");});
test("abbaini -> abbain", function() {deepEqual( Stem("abbaini"), "abbain");});
test("abbandona -> abbandon", function() {deepEqual( Stem("abbandona"), "abbandon");});
test("abbandonando -> abbandon", function() {deepEqual( Stem("abbandonando"), "abbandon");});
test("abbandonano -> abbandon", function() {deepEqual( Stem("abbandonano"), "abbandon");});
test("abbandonar -> abbandon", function() {deepEqual( Stem("abbandonar"), "abbandon");});
test("abbandonare -> abbandon", function() {deepEqual( Stem("abbandonare"), "abbandon");});
test("abbandonarla -> abbandon", function() {deepEqual( Stem("abbandonarla"), "abbandon");});
test("abbandonarlo -> abbandon", function() {deepEqual( Stem("abbandonarlo"), "abbandon");});
test("abbandonarsi -> abbandon", function() {deepEqual( Stem("abbandonarsi"), "abbandon");});
test("abbandonarvi -> abbandon", function() {deepEqual( Stem("abbandonarvi"), "abbandon");});
test("abbandonasse -> abbandon", function() {deepEqual( Stem("abbandonasse"), "abbandon");});
test("abbandonata -> abbandon", function() {deepEqual( Stem("abbandonata"), "abbandon");});
test("abbandonate -> abbandon", function() {deepEqual( Stem("abbandonate"), "abbandon");});
test("abbandonati -> abbandon", function() {deepEqual( Stem("abbandonati"), "abbandon");});
test("abbandonato -> abbandon", function() {deepEqual( Stem("abbandonato"), "abbandon");});
test("abbandonava -> abbandon", function() {deepEqual( Stem("abbandonava"), "abbandon");});
test("abbandonerà -> abbandon", function() {deepEqual( Stem("abbandonerà"), "abbandon");});
test("abbandoneranno -> abbandon", function() {deepEqual( Stem("abbandoneranno"), "abbandon");});
test("abbandonerò -> abbandon", function() {deepEqual( Stem("abbandonerò"), "abbandon");});
test("abbandono -> abband", function() {deepEqual( Stem("abbandono"), "abband");});
test("abbandonò -> abbandon", function() {deepEqual( Stem("abbandonò"), "abbandon");});
test("abbaruffato -> abbaruff", function() {deepEqual( Stem("abbaruffato"), "abbaruff");});
test("abbassamento -> abbass", function() {deepEqual( Stem("abbassamento"), "abbass");});
test("abbassando -> abbass", function() {deepEqual( Stem("abbassando"), "abbass");});
test("abbassandola -> abbass", function() {deepEqual( Stem("abbassandola"), "abbass");});
test("abbassandole -> abbass", function() {deepEqual( Stem("abbassandole"), "abbass");});
test("abbassar -> abbass", function() {deepEqual( Stem("abbassar"), "abbass");});
test("abbassare -> abbass", function() {deepEqual( Stem("abbassare"), "abbass");});
test("abbassarono -> abbass", function() {deepEqual( Stem("abbassarono"), "abbass");});
test("abbassarsi -> abbass", function() {deepEqual( Stem("abbassarsi"), "abbass");});
test("abbassassero -> abbass", function() {deepEqual( Stem("abbassassero"), "abbass");});
test("abbassato -> abbass", function() {deepEqual( Stem("abbassato"), "abbass");});
test("abbassava -> abbass", function() {deepEqual( Stem("abbassava"), "abbass");});
test("abbassi -> abbass", function() {deepEqual( Stem("abbassi"), "abbass");});
test("abbassò -> abbass", function() {deepEqual( Stem("abbassò"), "abbass");});
test("abbastanza -> abbast", function() {deepEqual( Stem("abbastanza"), "abbast");});
test("abbatté -> abbatt", function() {deepEqual( Stem("abbatté"), "abbatt");});
test("abbattendo -> abbatt", function() {deepEqual( Stem("abbattendo"), "abbatt");});
test("abbattere -> abbatt", function() {deepEqual( Stem("abbattere"), "abbatt");});
test("abbattersi -> abbatt", function() {deepEqual( Stem("abbattersi"), "abbatt");});
test("abbattesse -> abbattess", function() {deepEqual( Stem("abbattesse"), "abbattess");});
test("abbatteva -> abbatt", function() {deepEqual( Stem("abbatteva"), "abbatt");});
test("abbattevamo -> abbatt", function() {deepEqual( Stem("abbattevamo"), "abbatt");});
test("abbattevano -> abbatt", function() {deepEqual( Stem("abbattevano"), "abbatt");});
test("abbattimento -> abbatt", function() {deepEqual( Stem("abbattimento"), "abbatt");});
test("abbattuta -> abbatt", function() {deepEqual( Stem("abbattuta"), "abbatt");});
test("abbattuti -> abbatt", function() {deepEqual( Stem("abbattuti"), "abbatt");});
test("abbattuto -> abbatt", function() {deepEqual( Stem("abbattuto"), "abbatt");});
test("abbellita -> abbell", function() {deepEqual( Stem("abbellita"), "abbell");});
test("abbenché -> abbenc", function() {deepEqual( Stem("abbenché"), "abbenc");});
test("abbi -> abbi", function() {deepEqual( Stem("abbi"), "abbi");});
test("abbia -> abbi", function() {deepEqual( Stem("abbia"), "abbi");});
test("abbiam -> abbiam", function() {deepEqual( Stem("abbiam"), "abbiam");});
test("abbiamo -> abbiam", function() {deepEqual( Stem("abbiamo"), "abbiam");});
test("abbian -> abbian", function() {deepEqual( Stem("abbian"), "abbian");});
test("abbiano -> abbi", function() {deepEqual( Stem("abbiano"), "abbi");});
test("abbiate -> abbi", function() {deepEqual( Stem("abbiate"), "abbi");});
test("abbiccì -> abbicc", function() {deepEqual( Stem("abbiccì"), "abbicc");});
test("abbietti -> abbiett", function() {deepEqual( Stem("abbietti"), "abbiett");});
test("abbigliamento -> abbigl", function() {deepEqual( Stem("abbigliamento"), "abbigl");});
test("abbinamento -> abbin", function() {deepEqual( Stem("abbinamento"), "abbin");});
test("abbinano -> abbin", function() {deepEqual( Stem("abbinano"), "abbin");});
test("abbinata -> abbin", function() {deepEqual( Stem("abbinata"), "abbin");});
test("abbinato -> abbin", function() {deepEqual( Stem("abbinato"), "abbin");});
test("abboccamenti -> abbocc", function() {deepEqual( Stem("abboccamenti"), "abbocc");});
test("abboccamento -> abbocc", function() {deepEqual( Stem("abboccamento"), "abbocc");});
test("abbominata -> abbomin", function() {deepEqual( Stem("abbominata"), "abbomin");});
test("abbominazione -> abbomin", function() {deepEqual( Stem("abbominazione"), "abbomin");});
test("abbominevole -> abbominevol", function() {deepEqual( Stem("abbominevole"), "abbominevol");});
test("abbominevoli -> abbominevol", function() {deepEqual( Stem("abbominevoli"), "abbominevol");});
test("abbominio -> abbomin", function() {deepEqual( Stem("abbominio"), "abbomin");});
test("abbonati -> abbon", function() {deepEqual( Stem("abbonati"), "abbon");});
test("abbonato -> abbon", function() {deepEqual( Stem("abbonato"), "abbon");});
test("abbonda -> abbond", function() {deepEqual( Stem("abbonda"), "abbond");});
test("abbondano -> abbond", function() {deepEqual( Stem("abbondano"), "abbond");});
test("abbondante -> abbond", function() {deepEqual( Stem("abbondante"), "abbond");});
test("abbondantemente -> abbondant", function() {deepEqual( Stem("abbondantemente"), "abbondant");});
test("abbondanti -> abbond", function() {deepEqual( Stem("abbondanti"), "abbond");});
test("abbondanza -> abbond", function() {deepEqual( Stem("abbondanza"), "abbond");});
test("abbondare -> abbond", function() {deepEqual( Stem("abbondare"), "abbond");});
test("abbondio -> abbond", function() {deepEqual( Stem("abbondio"), "abbond");});
test("abbonire -> abbon", function() {deepEqual( Stem("abbonire"), "abbon");});
test("abbordarne -> abbord", function() {deepEqual( Stem("abbordarne"), "abbord");});
test("abbordo -> abbord", function() {deepEqual( Stem("abbordo"), "abbord");});
test("abborracciata -> abborracc", function() {deepEqual( Stem("abborracciata"), "abborracc");});
test("abborrimento -> abborr", function() {deepEqual( Stem("abborrimento"), "abborr");});
test("abborrito -> abborr", function() {deepEqual( Stem("abborrito"), "abborr");});
test("abbott -> abbott", function() {deepEqual( Stem("abbott"), "abbott");});
test("abbozzata -> abbozz", function() {deepEqual( Stem("abbozzata"), "abbozz");});
test("abbozzato -> abbozz", function() {deepEqual( Stem("abbozzato"), "abbozz");});
test("abbracci -> abbracc", function() {deepEqual( Stem("abbracci"), "abbracc");});
test("abbraccia -> abbracc", function() {deepEqual( Stem("abbraccia"), "abbracc");});
test("abbracciamenti -> abbracc", function() {deepEqual( Stem("abbracciamenti"), "abbracc");});
test("abbracciar -> abbracc", function() {deepEqual( Stem("abbracciar"), "abbracc");});
test("abbracciare -> abbracc", function() {deepEqual( Stem("abbracciare"), "abbracc");});
test("abbracciarne -> abbracc", function() {deepEqual( Stem("abbracciarne"), "abbracc");});
test("abbracciaron -> abbracciaron", function() {deepEqual( Stem("abbracciaron"), "abbracciaron");});
test("abbracciata -> abbracc", function() {deepEqual( Stem("abbracciata"), "abbracc");});
test("abbracciate -> abbracc", function() {deepEqual( Stem("abbracciate"), "abbracc");});
test("abbracciati -> abbracc", function() {deepEqual( Stem("abbracciati"), "abbracc");});
test("abbracciato -> abbracc", function() {deepEqual( Stem("abbracciato"), "abbracc");});
test("abbracciavano -> abbracc", function() {deepEqual( Stem("abbracciavano"), "abbracc");});
test("abbraccio -> abbracc", function() {deepEqual( Stem("abbraccio"), "abbracc");});
test("abbracciò -> abbracc", function() {deepEqual( Stem("abbracciò"), "abbracc");});
test("abbreviarli -> abbrev", function() {deepEqual( Stem("abbreviarli"), "abbrev");});
test("abbreviata -> abbrev", function() {deepEqual( Stem("abbreviata"), "abbrev");});
test("abbreviati -> abbrev", function() {deepEqual( Stem("abbreviati"), "abbrev");});
test("abbronzate -> abbronz", function() {deepEqual( Stem("abbronzate"), "abbronz");});
test("abbronzati -> abbronz", function() {deepEqual( Stem("abbronzati"), "abbronz");});
test("abbruciacchiato -> abbruciacc", function() {deepEqual( Stem("abbruciacchiato"), "abbruciacc");});
test("abbruciacchiavano -> abbruciacc", function() {deepEqual( Stem("abbruciacchiavano"), "abbruciacc");});
test("abbrunati -> abbrun", function() {deepEqual( Stem("abbrunati"), "abbrun");});
test("abbuffata -> abbuff", function() {deepEqual( Stem("abbuffata"), "abbuff");});
test("abburattavan -> abburattavan", function() {deepEqual( Stem("abburattavan"), "abburattavan");});
test("abc -> abc", function() {deepEqual( Stem("abc"), "abc");});
test("abdel -> abdel", function() {deepEqual( Stem("abdel"), "abdel");});
test("abdic -> abdic", function() {deepEqual( Stem("abdic"), "abdic");});
test("abdica -> abdic", function() {deepEqual( Stem("abdica"), "abdic");});
test("abdul -> abdul", function() {deepEqual( Stem("abdul"), "abdul");});
test("abeille -> abeill", function() {deepEqual( Stem("abeille"), "abeill");});
test("abel -> abel", function() {deepEqual( Stem("abel"), "abel");});
test("aberdeen -> aberdeen", function() {deepEqual( Stem("aberdeen"), "aberdeen");});
test("abergele -> abergel", function() {deepEqual( Stem("abergele"), "abergel");});
test("abete -> abet", function() {deepEqual( Stem("abete"), "abet");});
test("abietto -> abiett", function() {deepEqual( Stem("abietto"), "abiett");});
test("abile -> abil", function() {deepEqual( Stem("abile"), "abil");});
test("abili -> abil", function() {deepEqual( Stem("abili"), "abil");});
test("abilità -> abil", function() {deepEqual( Stem("abilità"), "abil");});
test("abilitante -> abilit", function() {deepEqual( Stem("abilitante"), "abilit");});
test("abilitate -> abilit", function() {deepEqual( Stem("abilitate"), "abilit");});
test("abilitazione -> abilit", function() {deepEqual( Stem("abilitazione"), "abilit");});
test("abiliterà -> abilit", function() {deepEqual( Stem("abiliterà"), "abilit");});
test("abisso -> abiss", function() {deepEqual( Stem("abisso"), "abiss");});
test("abita -> abit", function() {deepEqual( Stem("abita"), "abit");});
test("abitacolo -> abitacol", function() {deepEqual( Stem("abitacolo"), "abitacol");});
test("abitante -> abit", function() {deepEqual( Stem("abitante"), "abit");});
test("abitanti -> abit", function() {deepEqual( Stem("abitanti"), "abit");});
test("abitare -> abit", function() {deepEqual( Stem("abitare"), "abit");});
test("abitata -> abit", function() {deepEqual( Stem("abitata"), "abit");});
test("abitate -> abit", function() {deepEqual( Stem("abitate"), "abit");});
test("abitati -> abit", function() {deepEqual( Stem("abitati"), "abit");});
test("abitato -> abit", function() {deepEqual( Stem("abitato"), "abit");});
test("abitator -> abitator", function() {deepEqual( Stem("abitator"), "abitator");});
test("abitatori -> abit", function() {deepEqual( Stem("abitatori"), "abit");});
test("abitava -> abit", function() {deepEqual( Stem("abitava"), "abit");});
test("abitavano -> abit", function() {deepEqual( Stem("abitavano"), "abit");});
test("abitazione -> abit", function() {deepEqual( Stem("abitazione"), "abit");});
test("abitazioni -> abit", function() {deepEqual( Stem("abitazioni"), "abit");});
test("abiti -> abit", function() {deepEqual( Stem("abiti"), "abit");});
test("abito -> abit", function() {deepEqual( Stem("abito"), "abit");});
test("abituale -> abitual", function() {deepEqual( Stem("abituale"), "abitual");});
test("abituali -> abitual", function() {deepEqual( Stem("abituali"), "abitual");});
test("abitualmente -> abitual", function() {deepEqual( Stem("abitualmente"), "abitual");});
test("abituarci -> abitu", function() {deepEqual( Stem("abituarci"), "abitu");});
test("abituato -> abitu", function() {deepEqual( Stem("abituato"), "abitu");});
test("abitudine -> abitudin", function() {deepEqual( Stem("abitudine"), "abitudin");});
test("abitudini -> abitudin", function() {deepEqual( Stem("abitudini"), "abitudin");});
test("abituro -> abitur", function() {deepEqual( Stem("abituro"), "abitur");});
test("ablandarlos -> ablandarlos", function() {deepEqual( Stem("ablandarlos"), "ablandarlos");});
test("abolendo -> abol", function() {deepEqual( Stem("abolendo"), "abol");});
test("abolire -> abol", function() {deepEqual( Stem("abolire"), "abol");});
test("abolirli -> abol", function() {deepEqual( Stem("abolirli"), "abol");});
test("abolisce -> abol", function() {deepEqual( Stem("abolisce"), "abol");});
test("abolita -> abol", function() {deepEqual( Stem("abolita"), "abol");});
test("abolizione -> abolizion", function() {deepEqual( Stem("abolizione"), "abolizion");});
test("aborto -> abort", function() {deepEqual( Stem("aborto"), "abort");});
test("abruzzesi -> abruzzes", function() {deepEqual( Stem("abruzzesi"), "abruzzes");});
test("abruzzo -> abruzz", function() {deepEqual( Stem("abruzzo"), "abruzz");});
test("abulia -> abul", function() {deepEqual( Stem("abulia"), "abul");});
test("abusare -> abus", function() {deepEqual( Stem("abusare"), "abus");});
test("abuso -> abus", function() {deepEqual( Stem("abuso"), "abus");});
test("ac -> ac", function() {deepEqual( Stem("ac"), "ac");});
test("accada -> accad", function() {deepEqual( Stem("accada"), "accad");});
test("accadde -> accadd", function() {deepEqual( Stem("accadde"), "accadd");});
test("accaddero -> accadder", function() {deepEqual( Stem("accaddero"), "accadder");});
test("accade -> accad", function() {deepEqual( Stem("accade"), "accad");});
test("accademia -> accadem", function() {deepEqual( Stem("accademia"), "accadem");});
test("accademica -> accadem", function() {deepEqual( Stem("accademica"), "accadem");});
test("accademicamente -> accadem", function() {deepEqual( Stem("accademicamente"), "accadem");});
test("accademici -> accadem", function() {deepEqual( Stem("accademici"), "accadem");});
test("accademico -> accadem", function() {deepEqual( Stem("accademico"), "accadem");});
test("accademie -> accadem", function() {deepEqual( Stem("accademie"), "accadem");});
test("accadendo -> accad", function() {deepEqual( Stem("accadendo"), "accad");});
test("accader -> accader", function() {deepEqual( Stem("accader"), "accader");});
test("accaderà -> accad", function() {deepEqual( Stem("accaderà"), "accad");});
test("accadere -> accad", function() {deepEqual( Stem("accadere"), "accad");});
test("accadesse -> accadess", function() {deepEqual( Stem("accadesse"), "accadess");});
test("accadeva -> accad", function() {deepEqual( Stem("accadeva"), "accad");});
test("accadevan -> accadevan", function() {deepEqual( Stem("accadevan"), "accadevan");});
test("accadon -> accadon", function() {deepEqual( Stem("accadon"), "accadon");});
test("accadono -> accad", function() {deepEqual( Stem("accadono"), "accad");});
test("accaduta -> accad", function() {deepEqual( Stem("accaduta"), "accad");});
test("accadute -> accad", function() {deepEqual( Stem("accadute"), "accad");});
test("accaduto -> accad", function() {deepEqual( Stem("accaduto"), "accad");});
test("accalappino -> accalappin", function() {deepEqual( Stem("accalappino"), "accalappin");});
test("accame -> accam", function() {deepEqual( Stem("accame"), "accam");});
test("accampamento -> accamp", function() {deepEqual( Stem("accampamento"), "accamp");});
test("accampati -> accamp", function() {deepEqual( Stem("accampati"), "accamp");});
test("accando -> accand", function() {deepEqual( Stem("accando"), "accand");});
test("accanimento -> accan", function() {deepEqual( Stem("accanimento"), "accan");});
test("accanite -> accan", function() {deepEqual( Stem("accanite"), "accan");});
test("accanito -> accan", function() {deepEqual( Stem("accanito"), "accan");});
test("accanto -> accant", function() {deepEqual( Stem("accanto"), "accant");});
test("accantonamenti -> accanton", function() {deepEqual( Stem("accantonamenti"), "accanton");});
test("accantonamento -> accanton", function() {deepEqual( Stem("accantonamento"), "accanton");});
test("accantonando -> accanton", function() {deepEqual( Stem("accantonando"), "accanton");});
test("accarezza -> accarezz", function() {deepEqual( Stem("accarezza"), "accarezz");});
test("accarezzando -> accarezz", function() {deepEqual( Stem("accarezzando"), "accarezz");});
test("accarezzandolo -> accarezz", function() {deepEqual( Stem("accarezzandolo"), "accarezz");});
test("accarezzar -> accarezz", function() {deepEqual( Stem("accarezzar"), "accarezz");});
test("accarezzare -> accarezz", function() {deepEqual( Stem("accarezzare"), "accarezz");});
test("accarezzarla -> accarezz", function() {deepEqual( Stem("accarezzarla"), "accarezz");});
test("accarezzarlo -> accarezz", function() {deepEqual( Stem("accarezzarlo"), "accarezz");});
test("accarezzato -> accarezz", function() {deepEqual( Stem("accarezzato"), "accarezz");});
test("accarezzavan -> accarezzavan", function() {deepEqual( Stem("accarezzavan"), "accarezzavan");});
test("accarezzò -> accarezz", function() {deepEqual( Stem("accarezzò"), "accarezz");});
test("accartocciava -> accartocc", function() {deepEqual( Stem("accartocciava"), "accartocc");});
test("accasato -> accas", function() {deepEqual( Stem("accasato"), "accas");});
test("accatastata -> accatast", function() {deepEqual( Stem("accatastata"), "accatast");});
test("accattabrighe -> accattabrig", function() {deepEqual( Stem("accattabrighe"), "accattabrig");});
test("accattando -> accatt", function() {deepEqual( Stem("accattando"), "accatt");});
test("accattar -> accatt", function() {deepEqual( Stem("accattar"), "accatt");});
test("accattarlo -> accatt", function() {deepEqual( Stem("accattarlo"), "accatt");});
test("accattato -> accatt", function() {deepEqual( Stem("accattato"), "accatt");});
test("accattivanti -> accattiv", function() {deepEqual( Stem("accattivanti"), "accattiv");});
test("accatto -> accatt", function() {deepEqual( Stem("accatto"), "accatt");});
test("accattoni -> accatton", function() {deepEqual( Stem("accattoni"), "accatton");});
test("accavallata -> accavall", function() {deepEqual( Stem("accavallata"), "accavall");});
test("acccordi -> acccord", function() {deepEqual( Stem("acccordi"), "acccord");});
test("accecato -> accec", function() {deepEqual( Stem("accecato"), "accec");});
test("accedatis -> accedatis", function() {deepEqual( Stem("accedatis"), "accedatis");});
test("accedere -> acced", function() {deepEqual( Stem("accedere"), "acced");});
test("accelera -> acceler", function() {deepEqual( Stem("accelera"), "acceler");});
test("accelerando -> acceler", function() {deepEqual( Stem("accelerando"), "acceler");});
test("accelerare -> acceler", function() {deepEqual( Stem("accelerare"), "acceler");});
test("accelerato -> acceler", function() {deepEqual( Stem("accelerato"), "acceler");});
test("acceleratore -> acceler", function() {deepEqual( Stem("acceleratore"), "acceler");});
test("accelerazione -> acceler", function() {deepEqual( Stem("accelerazione"), "acceler");});
test("accellerare -> acceller", function() {deepEqual( Stem("accellerare"), "acceller");});
test("accenda -> accend", function() {deepEqual( Stem("accenda"), "accend");});
test("accende -> accend", function() {deepEqual( Stem("accende"), "accend");});
test("accendere -> accend", function() {deepEqual( Stem("accendere"), "accend");});
test("accenna -> accenn", function() {deepEqual( Stem("accenna"), "accenn");});
test("accennando -> accenn", function() {deepEqual( Stem("accennando"), "accenn");});
test("accennano -> accenn", function() {deepEqual( Stem("accennano"), "accenn");});
test("accennar -> accenn", function() {deepEqual( Stem("accennar"), "accenn");});
test("accennare -> accenn", function() {deepEqual( Stem("accennare"), "accenn");});
test("accennarla -> accenn", function() {deepEqual( Stem("accennarla"), "accenn");});
test("accennarono -> accenn", function() {deepEqual( Stem("accennarono"), "accenn");});
test("accennate -> accenn", function() {deepEqual( Stem("accennate"), "accenn");});
test("accennati -> accenn", function() {deepEqual( Stem("accennati"), "accenn");});
test("accennato -> accenn", function() {deepEqual( Stem("accennato"), "accenn");});
test("accennava -> accenn", function() {deepEqual( Stem("accennava"), "accenn");});
test("accennavano -> accenn", function() {deepEqual( Stem("accennavano"), "accenn");});
test("accenneremo -> accenn", function() {deepEqual( Stem("accenneremo"), "accenn");});
test("accennerò -> accenn", function() {deepEqual( Stem("accennerò"), "accenn");});
test("accenno -> accenn", function() {deepEqual( Stem("accenno"), "accenn");});
test("accennò -> accenn", function() {deepEqual( Stem("accennò"), "accenn");});
test("accenti -> accent", function() {deepEqual( Stem("accenti"), "accent");});
test("accento -> accent", function() {deepEqual( Stem("accento"), "accent");});
test("accentrato -> accentr", function() {deepEqual( Stem("accentrato"), "accentr");});
test("accentua -> accentu", function() {deepEqual( Stem("accentua"), "accentu");});
test("accentuandone -> accentu", function() {deepEqual( Stem("accentuandone"), "accentu");});
test("accentuano -> accentu", function() {deepEqual( Stem("accentuano"), "accentu");});
test("accerchiati -> accerc", function() {deepEqual( Stem("accerchiati"), "accerc");});
test("accertamenti -> accert", function() {deepEqual( Stem("accertamenti"), "accert");});
test("accertamento -> accert", function() {deepEqual( Stem("accertamento"), "accert");});
test("accertare -> accert", function() {deepEqual( Stem("accertare"), "accert");});
test("accertarmi -> accert", function() {deepEqual( Stem("accertarmi"), "accert");});
test("accertarsi -> accert", function() {deepEqual( Stem("accertarsi"), "accert");});
test("accertate -> accert", function() {deepEqual( Stem("accertate"), "accert");});
test("accertato -> accert", function() {deepEqual( Stem("accertato"), "accert");});
test("accertò -> accert", function() {deepEqual( Stem("accertò"), "accert");});
test("accesa -> acces", function() {deepEqual( Stem("accesa"), "acces");});
test("accese -> acces", function() {deepEqual( Stem("accese"), "acces");});
test("accesi -> acces", function() {deepEqual( Stem("accesi"), "acces");});
test("acceso -> acces", function() {deepEqual( Stem("acceso"), "acces");});
test("accessi -> access", function() {deepEqual( Stem("accessi"), "access");});
test("accessibili -> access", function() {deepEqual( Stem("accessibili"), "access");});
test("accesso -> access", function() {deepEqual( Stem("accesso"), "access");});
test("accessòri -> accessòr", function() {deepEqual( Stem("accessòri"), "accessòr");});
test("accessorie -> accessor", function() {deepEqual( Stem("accessorie"), "accessor");});
test("accetta -> accett", function() {deepEqual( Stem("accetta"), "accett");});
test("accettabile -> accett", function() {deepEqual( Stem("accettabile"), "accett");});
test("accettabili -> accett", function() {deepEqual( Stem("accettabili"), "accett");});
test("accettando -> accett", function() {deepEqual( Stem("accettando"), "accett");});
test("accettano -> accett", function() {deepEqual( Stem("accettano"), "accett");});
test("accettare -> accett", function() {deepEqual( Stem("accettare"), "accett");});
test("accettarle -> accett", function() {deepEqual( Stem("accettarle"), "accett");});
test("accettaron -> accettaron", function() {deepEqual( Stem("accettaron"), "accettaron");});
test("accettarsi -> accett", function() {deepEqual( Stem("accettarsi"), "accett");});
test("accettasse -> accett", function() {deepEqual( Stem("accettasse"), "accett");});
test("accettata -> accett", function() {deepEqual( Stem("accettata"), "accett");});
test("accettate -> accett", function() {deepEqual( Stem("accettate"), "accett");});
test("accettati -> accett", function() {deepEqual( Stem("accettati"), "accett");});
test("accettato -> accett", function() {deepEqual( Stem("accettato"), "accett");});
test("accettava -> accett", function() {deepEqual( Stem("accettava"), "accett");});
test("accettazione -> accett", function() {deepEqual( Stem("accettazione"), "accett");});
test("accette -> accett", function() {deepEqual( Stem("accette"), "accett");});
test("accetterà -> accett", function() {deepEqual( Stem("accetterà"), "accett");});
test("accetteresti -> accett", function() {deepEqual( Stem("accetteresti"), "accett");});
test("accetterò -> accett", function() {deepEqual( Stem("accetterò"), "accett");});
test("accetti -> accett", function() {deepEqual( Stem("accetti"), "accett");});
test("accetto -> accett", function() {deepEqual( Stem("accetto"), "accett");});
test("accettò -> accett", function() {deepEqual( Stem("accettò"), "accett");});
test("accezione -> accezion", function() {deepEqual( Stem("accezione"), "accezion");});
test("acchetare -> acchet", function() {deepEqual( Stem("acchetare"), "acchet");});
test("acchiappar -> acchiapp", function() {deepEqual( Stem("acchiappar"), "acchiapp");});
test("acchiappare -> acchiapp", function() {deepEqual( Stem("acchiappare"), "acchiapp");});
test("acchiapparlo -> acchiapp", function() {deepEqual( Stem("acchiapparlo"), "acchiapp");});
test("acchiappato -> acchiapp", function() {deepEqual( Stem("acchiappato"), "acchiapp");});
test("acchiappatolo -> acchiappatol", function() {deepEqual( Stem("acchiappatolo"), "acchiappatol");});
test("acciai -> accia", function() {deepEqual( Stem("acciai"), "accia");});
test("acciarino -> acciarin", function() {deepEqual( Stem("acciarino"), "acciarin");});
test("accidentale -> accidental", function() {deepEqual( Stem("accidentale"), "accidental");});
test("accidentalmente -> accidental", function() {deepEqual( Stem("accidentalmente"), "accidental");});
test("accidente -> accident", function() {deepEqual( Stem("accidente"), "accident");});
test("accidenti -> accident", function() {deepEqual( Stem("accidenti"), "accident");});
test("accieca -> acciec", function() {deepEqual( Stem("accieca"), "acciec");});
test("accigliato -> accigl", function() {deepEqual( Stem("accigliato"), "accigl");});
test("accingo -> accing", function() {deepEqual( Stem("accingo"), "accing");});
test("acciò -> acci", function() {deepEqual( Stem("acciò"), "acci");});
test("acciocché -> acciocc", function() {deepEqual( Stem("acciocché"), "acciocc");});
test("accipigliato -> accipigl", function() {deepEqual( Stem("accipigliato"), "accipigl");});
test("acciuffa -> acciuff", function() {deepEqual( Stem("acciuffa"), "acciuff");});
test("acciughe -> acciug", function() {deepEqual( Stem("acciughe"), "acciug");});
test("acclamazione -> acclam", function() {deepEqual( Stem("acclamazione"), "acclam");});
test("acclamazioni -> acclam", function() {deepEqual( Stem("acclamazioni"), "acclam");});
test("accluder -> accluder", function() {deepEqual( Stem("accluder"), "accluder");});
test("accluderla -> acclud", function() {deepEqual( Stem("accluderla"), "acclud");});
test("accoglie -> accogl", function() {deepEqual( Stem("accoglie"), "accogl");});
test("accogliendo -> accogl", function() {deepEqual( Stem("accogliendo"), "accogl");});
test("accoglienza -> accoglient", function() {deepEqual( Stem("accoglienza"), "accoglient");});
test("accoglienze -> accoglient", function() {deepEqual( Stem("accoglienze"), "accoglient");});
test("accogliere -> accogl", function() {deepEqual( Stem("accogliere"), "accogl");});
test("accoglierli -> accogl", function() {deepEqual( Stem("accoglierli"), "accogl");});
test("accogliervi -> accogl", function() {deepEqual( Stem("accogliervi"), "accogl");});
test("accoglieva -> accogl", function() {deepEqual( Stem("accoglieva"), "accogl");});
test("accoglimento -> accogl", function() {deepEqual( Stem("accoglimento"), "accogl");});
test("accolse -> accols", function() {deepEqual( Stem("accolse"), "accols");});
test("accolta -> accolt", function() {deepEqual( Stem("accolta"), "accolt");});
test("accoltellamento -> accoltell", function() {deepEqual( Stem("accoltellamento"), "accoltell");});
test("accoltellarlo -> accoltell", function() {deepEqual( Stem("accoltellarlo"), "accoltell");});
test("accoltellata -> accoltell", function() {deepEqual( Stem("accoltellata"), "accoltell");});
test("accolti -> accolt", function() {deepEqual( Stem("accolti"), "accolt");});
test("accolto -> accolt", function() {deepEqual( Stem("accolto"), "accolt");});
test("accomiatò -> accomiat", function() {deepEqual( Stem("accomiatò"), "accomiat");});
test("accommiatò -> accommiat", function() {deepEqual( Stem("accommiatò"), "accommiat");});
test("accomoda -> accomod", function() {deepEqual( Stem("accomoda"), "accomod");});
test("accomodamento -> accomod", function() {deepEqual( Stem("accomodamento"), "accomod");});
test("accomodando -> accomod", function() {deepEqual( Stem("accomodando"), "accomod");});
test("accomodandosi -> accomod", function() {deepEqual( Stem("accomodandosi"), "accomod");});
test("accomodano -> accomod", function() {deepEqual( Stem("accomodano"), "accomod");});
test("accomodar -> accomod", function() {deepEqual( Stem("accomodar"), "accomod");});
test("accomodarcisi -> accomodarcis", function() {deepEqual( Stem("accomodarcisi"), "accomodarcis");});
test("accomodare -> accomod", function() {deepEqual( Stem("accomodare"), "accomod");});
test("accomodarla -> accomod", function() {deepEqual( Stem("accomodarla"), "accomod");});
test("accomodarmi -> accomod", function() {deepEqual( Stem("accomodarmi"), "accomod");});
test("accomodarsi -> accomod", function() {deepEqual( Stem("accomodarsi"), "accomod");});
test("accomodata -> accomod", function() {deepEqual( Stem("accomodata"), "accomod");});
test("accomodate -> accomod", function() {deepEqual( Stem("accomodate"), "accomod");});
test("accomodati -> accomod", function() {deepEqual( Stem("accomodati"), "accomod");});
test("accomodato -> accomod", function() {deepEqual( Stem("accomodato"), "accomod");});
test("accomodava -> accomod", function() {deepEqual( Stem("accomodava"), "accomod");});
test("accomodavano -> accomod", function() {deepEqual( Stem("accomodavano"), "accomod");});
test("accomoderemo -> accomod", function() {deepEqual( Stem("accomoderemo"), "accomod");});
test("accomoderò -> accomod", function() {deepEqual( Stem("accomoderò"), "accomod");});
test("accomodo -> accomod", function() {deepEqual( Stem("accomodo"), "accomod");});
test("accomodò -> accomod", function() {deepEqual( Stem("accomodò"), "accomod");});
test("accompagna -> accompagn", function() {deepEqual( Stem("accompagna"), "accompagn");});
test("accompagnamento -> accompagn", function() {deepEqual( Stem("accompagnamento"), "accompagn");});
test("accompagnando -> accompagn", function() {deepEqual( Stem("accompagnando"), "accompagn");});
test("accompagnandolo -> accompagn", function() {deepEqual( Stem("accompagnandolo"), "accompagn");});
test("accompagnano -> accompagn", function() {deepEqual( Stem("accompagnano"), "accompagn");});
test("accompagnar -> accompagn", function() {deepEqual( Stem("accompagnar"), "accompagn");});
test("accompagnare -> accompagn", function() {deepEqual( Stem("accompagnare"), "accompagn");});
test("accompagnarla -> accompagn", function() {deepEqual( Stem("accompagnarla"), "accompagn");});
test("accompagnarlo -> accompagn", function() {deepEqual( Stem("accompagnarlo"), "accompagn");});
test("accompagnaron -> accompagnaron", function() {deepEqual( Stem("accompagnaron"), "accompagnaron");});
test("accompagnata -> accompagn", function() {deepEqual( Stem("accompagnata"), "accompagn");});
test("accompagnate -> accompagn", function() {deepEqual( Stem("accompagnate"), "accompagn");});
test("accompagnati -> accompagn", function() {deepEqual( Stem("accompagnati"), "accompagn");});
test("accompagnato -> accompagn", function() {deepEqual( Stem("accompagnato"), "accompagn");});
test("accompagnatolo -> accompagnatol", function() {deepEqual( Stem("accompagnatolo"), "accompagnatol");});
test("accompagnava -> accompagn", function() {deepEqual( Stem("accompagnava"), "accompagn");});
test("accompagnavano -> accompagn", function() {deepEqual( Stem("accompagnavano"), "accompagn");});
test("accompagnerete -> accompagn", function() {deepEqual( Stem("accompagnerete"), "accompagn");});
test("accompagnerò -> accompagn", function() {deepEqual( Stem("accompagnerò"), "accompagn");});
test("accompagni -> accompagn", function() {deepEqual( Stem("accompagni"), "accompagn");});
test("accompagnò -> accompagn", function() {deepEqual( Stem("accompagnò"), "accompagn");});
test("acconcio -> acconc", function() {deepEqual( Stem("acconcio"), "acconc");});
test("acconsente -> acconsent", function() {deepEqual( Stem("acconsente"), "acconsent");});
test("acconsentì -> acconsent", function() {deepEqual( Stem("acconsentì"), "acconsent");});
test("acconsentire -> acconsent", function() {deepEqual( Stem("acconsentire"), "acconsent");});
test("acconsentirò -> acconsent", function() {deepEqual( Stem("acconsentirò"), "acconsent");});
test("accontentarsi -> accontent", function() {deepEqual( Stem("accontentarsi"), "accontent");});
test("accoppia -> accopp", function() {deepEqual( Stem("accoppia"), "accopp");});
test("accoppiamento -> accopp", function() {deepEqual( Stem("accoppiamento"), "accopp");});
test("accoppiata -> accopp", function() {deepEqual( Stem("accoppiata"), "accopp");});
test("accora -> accor", function() {deepEqual( Stem("accora"), "accor");});
test("accoramento -> accor", function() {deepEqual( Stem("accoramento"), "accor");});
test("accorando -> accor", function() {deepEqual( Stem("accorando"), "accor");});
test("accorata -> accor", function() {deepEqual( Stem("accorata"), "accor");});
test("accorciato -> accorc", function() {deepEqual( Stem("accorciato"), "accorc");});
test("accorda -> accord", function() {deepEqual( Stem("accorda"), "accord");});
test("accordarlo -> accord", function() {deepEqual( Stem("accordarlo"), "accord");});
test("accordarsi -> accord", function() {deepEqual( Stem("accordarsi"), "accord");});
test("accordasse -> accord", function() {deepEqual( Stem("accordasse"), "accord");});
test("accordate -> accord", function() {deepEqual( Stem("accordate"), "accord");});
test("accordato -> accord", function() {deepEqual( Stem("accordato"), "accord");});
test("accordava -> accord", function() {deepEqual( Stem("accordava"), "accord");});
test("accorderebbero -> accord", function() {deepEqual( Stem("accorderebbero"), "accord");});
test("accordi -> accord", function() {deepEqual( Stem("accordi"), "accord");});
test("accordo -> accord", function() {deepEqual( Stem("accordo"), "accord");});
test("accorga -> accorg", function() {deepEqual( Stem("accorga"), "accorg");});
test("accorge -> accorg", function() {deepEqual( Stem("accorge"), "accorg");});
test("accorgendosi -> accorg", function() {deepEqual( Stem("accorgendosi"), "accorg");});
test("accorgerà -> accorg", function() {deepEqual( Stem("accorgerà"), "accorg");});
test("accorgere -> accorg", function() {deepEqual( Stem("accorgere"), "accorg");});
test("accorgermi -> accorg", function() {deepEqual( Stem("accorgermi"), "accorg");});
test("accorgersene -> accorg", function() {deepEqual( Stem("accorgersene"), "accorg");});
test("accorgersi -> accorg", function() {deepEqual( Stem("accorgersi"), "accorg");});
test("accorgesse -> accorgess", function() {deepEqual( Stem("accorgesse"), "accorgess");});
test("accorgeva -> accorg", function() {deepEqual( Stem("accorgeva"), "accorg");});
test("accorgevan -> accorgevan", function() {deepEqual( Stem("accorgevan"), "accorgevan");});
test("accorgo -> accorg", function() {deepEqual( Stem("accorgo"), "accorg");});
test("accorgono -> accorg", function() {deepEqual( Stem("accorgono"), "accorg");});
test("accorpa -> accorp", function() {deepEqual( Stem("accorpa"), "accorp");});
test("accorpamento -> accorp", function() {deepEqual( Stem("accorpamento"), "accorp");});
test("accorpando -> accorp", function() {deepEqual( Stem("accorpando"), "accorp");});
test("accorre -> accorr", function() {deepEqual( Stem("accorre"), "accorr");});
test("accorrere -> accorr", function() {deepEqual( Stem("accorrere"), "accorr");});
test("accorresse -> accorress", function() {deepEqual( Stem("accorresse"), "accorress");});
test("accorreva -> accorr", function() {deepEqual( Stem("accorreva"), "accorr");});
test("accorrevano -> accorr", function() {deepEqual( Stem("accorrevano"), "accorr");});
test("accorrono -> accorr", function() {deepEqual( Stem("accorrono"), "accorr");});
test("accorse -> accors", function() {deepEqual( Stem("accorse"), "accors");});
test("accorsero -> accorser", function() {deepEqual( Stem("accorsero"), "accorser");});
test("accorso -> accors", function() {deepEqual( Stem("accorso"), "accors");});
test("accortamente -> accort", function() {deepEqual( Stem("accortamente"), "accort");});
test("accorti -> accort", function() {deepEqual( Stem("accorti"), "accort");});
test("accorto -> accort", function() {deepEqual( Stem("accorto"), "accort");});
test("accortosi -> accort", function() {deepEqual( Stem("accortosi"), "accort");});
test("accosta -> accost", function() {deepEqual( Stem("accosta"), "accost");});
test("accostamento -> accost", function() {deepEqual( Stem("accostamento"), "accost");});
test("accostandosi -> accost", function() {deepEqual( Stem("accostandosi"), "accost");});
test("accostare -> accost", function() {deepEqual( Stem("accostare"), "accost");});
test("accostarglisi -> accostarglis", function() {deepEqual( Stem("accostarglisi"), "accostarglis");});
test("accostarsele -> accostarsel", function() {deepEqual( Stem("accostarsele"), "accostarsel");});
test("accostarsi -> accost", function() {deepEqual( Stem("accostarsi"), "accost");});
test("accostate -> accost", function() {deepEqual( Stem("accostate"), "accost");});
test("accostatevi -> accostat", function() {deepEqual( Stem("accostatevi"), "accostat");});
test("accostati -> accost", function() {deepEqual( Stem("accostati"), "accost");});
test("accostato -> accost", function() {deepEqual( Stem("accostato"), "accost");});
test("accostatosi -> accostat", function() {deepEqual( Stem("accostatosi"), "accostat");});
test("accostava -> accost", function() {deepEqual( Stem("accostava"), "accost");});
test("accosto -> accost", function() {deepEqual( Stem("accosto"), "accost");});
test("accostò -> accost", function() {deepEqual( Stem("accostò"), "accost");});
test("accostumato -> accostum", function() {deepEqual( Stem("accostumato"), "accostum");});
test("accovacciati -> accovacc", function() {deepEqual( Stem("accovacciati"), "accovacc");});
test("accozzaglia -> accozzagl", function() {deepEqual( Stem("accozzaglia"), "accozzagl");});
test("accozzando -> accozz", function() {deepEqual( Stem("accozzando"), "accozz");});
test("accozzar -> accozz", function() {deepEqual( Stem("accozzar"), "accozz");});
test("accozzarsi -> accozz", function() {deepEqual( Stem("accozzarsi"), "accozz");});
test("accozzati -> accozz", function() {deepEqual( Stem("accozzati"), "accozz");});
test("accrebbe -> accrebb", function() {deepEqual( Stem("accrebbe"), "accrebb");});
test("accreditamento -> accredit", function() {deepEqual( Stem("accreditamento"), "accredit");});
test("accreditati -> accredit", function() {deepEqual( Stem("accreditati"), "accredit");});
test("accrediti -> accred", function() {deepEqual( Stem("accrediti"), "accred");});
test("accresce -> accresc", function() {deepEqual( Stem("accresce"), "accresc");});
test("accrescendo -> accresc", function() {deepEqual( Stem("accrescendo"), "accresc");});
test("accrescer -> accrescer", function() {deepEqual( Stem("accrescer"), "accrescer");});
test("accrescere -> accresc", function() {deepEqual( Stem("accrescere"), "accresc");});
test("accrescerebbe -> accresc", function() {deepEqual( Stem("accrescerebbe"), "accresc");});
test("accrescerle -> accresc", function() {deepEqual( Stem("accrescerle"), "accresc");});
test("accrescerlo -> accresc", function() {deepEqual( Stem("accrescerlo"), "accresc");});
test("accresceva -> accresc", function() {deepEqual( Stem("accresceva"), "accresc");});
test("accrescevano -> accresc", function() {deepEqual( Stem("accrescevano"), "accresc");});
test("accresciuta -> accresc", function() {deepEqual( Stem("accresciuta"), "accresc");});
test("accucciata -> accucc", function() {deepEqual( Stem("accucciata"), "accucc");});
test("accudire -> accud", function() {deepEqual( Stem("accudire"), "accud");});
test("accumulando -> accumul", function() {deepEqual( Stem("accumulando"), "accumul");});
test("accumulato -> accumul", function() {deepEqual( Stem("accumulato"), "accumul");});
test("accurata -> accur", function() {deepEqual( Stem("accurata"), "accur");});
test("accusa -> accus", function() {deepEqual( Stem("accusa"), "accus");});
test("accusando -> accus", function() {deepEqual( Stem("accusando"), "accus");});
test("accusandole -> accus", function() {deepEqual( Stem("accusandole"), "accus");});
test("accusandolo -> accus", function() {deepEqual( Stem("accusandolo"), "accus");});
test("accusar -> accus", function() {deepEqual( Stem("accusar"), "accus");});
test("accusare -> accus", function() {deepEqual( Stem("accusare"), "accus");});
test("accusata -> accus", function() {deepEqual( Stem("accusata"), "accus");});
test("accusate -> accus", function() {deepEqual( Stem("accusate"), "accus");});
test("accusati -> accus", function() {deepEqual( Stem("accusati"), "accus");});
test("accusato -> accus", function() {deepEqual( Stem("accusato"), "accus");});
test("accusatore -> accus", function() {deepEqual( Stem("accusatore"), "accus");});
test("accusava -> accus", function() {deepEqual( Stem("accusava"), "accus");});
test("accusavan -> accusavan", function() {deepEqual( Stem("accusavan"), "accusavan");});
test("accusavano -> accus", function() {deepEqual( Stem("accusavano"), "accus");});
test("accuse -> accus", function() {deepEqual( Stem("accuse"), "accus");});
test("accusò -> accus", function() {deepEqual( Stem("accusò"), "accus");});
test("acerba -> acerb", function() {deepEqual( Stem("acerba"), "acerb");});
test("acerbi -> acerb", function() {deepEqual( Stem("acerbi"), "acerb");});
test("acerra -> acerr", function() {deepEqual( Stem("acerra"), "acerr");});
test("aceti -> acet", function() {deepEqual( Stem("aceti"), "acet");});
test("aceto -> acet", function() {deepEqual( Stem("aceto"), "acet");});
test("acetoselle -> acetosell", function() {deepEqual( Stem("acetoselle"), "acetosell");});
test("acevedo -> aceved", function() {deepEqual( Stem("acevedo"), "aceved");});
test("achille -> achill", function() {deepEqual( Stem("achille"), "achill");});
test("achillini -> achillin", function() {deepEqual( Stem("achillini"), "achillin");});
test("acidi -> acid", function() {deepEqual( Stem("acidi"), "acid");});
test("acireale -> acireal", function() {deepEqual( Stem("acireale"), "acireal");});
test("acklin -> acklin", function() {deepEqual( Stem("acklin"), "acklin");});
test("acli -> acli", function() {deepEqual( Stem("acli"), "acli");});
test("acnur -> acnur", function() {deepEqual( Stem("acnur"), "acnur");});
test("acogliere -> acogl", function() {deepEqual( Stem("acogliere"), "acogl");});
test("acopi -> acop", function() {deepEqual( Stem("acopi"), "acop");});
test("acoteias -> acoteias", function() {deepEqual( Stem("acoteias"), "acoteias");});
test("acq -> acq", function() {deepEqual( Stem("acq"), "acq");});
test("acqua -> acqua", function() {deepEqual( Stem("acqua"), "acqua");});
test("acquarone -> acquaron", function() {deepEqual( Stem("acquarone"), "acquaron");});
test("acquatico -> acquat", function() {deepEqual( Stem("acquatico"), "acquat");});
test("acquattato -> acquatt", function() {deepEqual( Stem("acquattato"), "acquatt");});
test("acque -> acque", function() {deepEqual( Stem("acque"), "acque");});
test("acquea -> acque", function() {deepEqual( Stem("acquea"), "acque");});
test("acquedotti -> acquedott", function() {deepEqual( Stem("acquedotti"), "acquedott");});
test("acquerugiola -> acquerugiol", function() {deepEqual( Stem("acquerugiola"), "acquerugiol");});
test("acqui -> acqui", function() {deepEqual( Stem("acqui"), "acqui");});
test("acquieta -> acquiet", function() {deepEqual( Stem("acquieta"), "acquiet");});
test("acquietamento -> acquiet", function() {deepEqual( Stem("acquietamento"), "acquiet");});
test("acquietando -> acquiet", function() {deepEqual( Stem("acquietando"), "acquiet");});
test("acquietandosele -> acquietandosel", function() {deepEqual( Stem("acquietandosele"), "acquietandosel");});
test("acquietante -> acquiet", function() {deepEqual( Stem("acquietante"), "acquiet");});
test("acquietare -> acquiet", function() {deepEqual( Stem("acquietare"), "acquiet");});
test("acquietarla -> acquiet", function() {deepEqual( Stem("acquietarla"), "acquiet");});
test("acquietarle -> acquiet", function() {deepEqual( Stem("acquietarle"), "acquiet");});
test("acquietarlo -> acquiet", function() {deepEqual( Stem("acquietarlo"), "acquiet");});
test("acquietarono -> acquiet", function() {deepEqual( Stem("acquietarono"), "acquiet");});
test("acquietasse -> acquiet", function() {deepEqual( Stem("acquietasse"), "acquiet");});
test("acquietati -> acquiet", function() {deepEqual( Stem("acquietati"), "acquiet");});
test("acquietava -> acquiet", function() {deepEqual( Stem("acquietava"), "acquiet");});
test("acquietò -> acquiet", function() {deepEqual( Stem("acquietò"), "acquiet");});
test("acquirente -> acquirent", function() {deepEqual( Stem("acquirente"), "acquirent");});
test("acquirenti -> acquirent", function() {deepEqual( Stem("acquirenti"), "acquirent");});
test("acquisire -> acquis", function() {deepEqual( Stem("acquisire"), "acquis");});
test("acquisirlo -> acquis", function() {deepEqual( Stem("acquisirlo"), "acquis");});
test("acquisite -> acquis", function() {deepEqual( Stem("acquisite"), "acquis");});
test("acquisito -> acquis", function() {deepEqual( Stem("acquisito"), "acquis");});
test("acquisizione -> acquisizion", function() {deepEqual( Stem("acquisizione"), "acquisizion");});
test("acquisizioni -> acquisizion", function() {deepEqual( Stem("acquisizioni"), "acquisizion");});
test("acquista -> acquist", function() {deepEqual( Stem("acquista"), "acquist");});
test("acquistandosi -> acquist", function() {deepEqual( Stem("acquistandosi"), "acquist");});
test("acquistar -> acquist", function() {deepEqual( Stem("acquistar"), "acquist");});
test("acquistare -> acquist", function() {deepEqual( Stem("acquistare"), "acquist");});
test("acquistarne -> acquist", function() {deepEqual( Stem("acquistarne"), "acquist");});
test("acquistarsi -> acquist", function() {deepEqual( Stem("acquistarsi"), "acquist");});
test("acquistata -> acquist", function() {deepEqual( Stem("acquistata"), "acquist");});
test("acquistato -> acquist", function() {deepEqual( Stem("acquistato"), "acquist");});
test("acquistavano -> acquist", function() {deepEqual( Stem("acquistavano"), "acquist");});
test("acquisterà -> acquist", function() {deepEqual( Stem("acquisterà"), "acquist");});
test("acquisteranno -> acquist", function() {deepEqual( Stem("acquisteranno"), "acquist");});
test("acquisti -> acquist", function() {deepEqual( Stem("acquisti"), "acquist");});
test("acquisto -> acquist", function() {deepEqual( Stem("acquisto"), "acquist");});
test("acquistò -> acquist", function() {deepEqual( Stem("acquistò"), "acquist");});
test("acquitrinosa -> acquitrin", function() {deepEqual( Stem("acquitrinosa"), "acquitrin");});
test("acquolina -> acquolin", function() {deepEqual( Stem("acquolina"), "acquolin");});
test("act -> act", function() {deepEqual( Stem("act"), "act");});
test("action -> action", function() {deepEqual( Stem("action"), "action");});
test("acuta -> acut", function() {deepEqual( Stem("acuta"), "acut");});
test("acutamente -> acut", function() {deepEqual( Stem("acutamente"), "acut");});
test("acute -> acut", function() {deepEqual( Stem("acute"), "acut");});
test("acuti -> acut", function() {deepEqual( Stem("acuti"), "acut");});
test("acuto -> acut", function() {deepEqual( Stem("acuto"), "acut");});
test("ad -> ad", function() {deepEqual( Stem("ad"), "ad");});
test("adagino -> adagin", function() {deepEqual( Stem("adagino"), "adagin");});
test("adagio -> adag", function() {deepEqual( Stem("adagio"), "adag");});
test("adam -> adam", function() {deepEqual( Stem("adam"), "adam");});
test("adamo -> adam", function() {deepEqual( Stem("adamo"), "adam");});
test("adani -> adan", function() {deepEqual( Stem("adani"), "adan");});
test("adatta -> adatt", function() {deepEqual( Stem("adatta"), "adatt");});
test("adattandole -> adatt", function() {deepEqual( Stem("adattandole"), "adatt");});
test("adattarla -> adatt", function() {deepEqual( Stem("adattarla"), "adatt");});
test("adattarsi -> adatt", function() {deepEqual( Stem("adattarsi"), "adatt");});
test("adattata -> adatt", function() {deepEqual( Stem("adattata"), "adatt");});
test("adattate -> adatt", function() {deepEqual( Stem("adattate"), "adatt");});
test("adattati -> adatt", function() {deepEqual( Stem("adattati"), "adatt");});
test("adattato -> adatt", function() {deepEqual( Stem("adattato"), "adatt");});
test("adattava -> adatt", function() {deepEqual( Stem("adattava"), "adatt");});
test("adattavano -> adatt", function() {deepEqual( Stem("adattavano"), "adatt");});
test("adatti -> adatt", function() {deepEqual( Stem("adatti"), "adatt");});
test("adda -> adda", function() {deepEqual( Stem("adda"), "adda");});
test("addati -> addat", function() {deepEqual( Stem("addati"), "addat");});
test("addebitate -> addebit", function() {deepEqual( Stem("addebitate"), "addebit");});
test("addebito -> addeb", function() {deepEqual( Stem("addebito"), "addeb");});
test("addensa -> addens", function() {deepEqual( Stem("addensa"), "addens");});
test("addensasse -> addens", function() {deepEqual( Stem("addensasse"), "addens");});
test("addensata -> addens", function() {deepEqual( Stem("addensata"), "addens");});
test("addenseranno -> addens", function() {deepEqual( Stem("addenseranno"), "addens");});
test("addenta -> addent", function() {deepEqual( Stem("addenta"), "addent");});
test("addestramento -> addestr", function() {deepEqual( Stem("addestramento"), "addestr");});
test("addestrati -> addestr", function() {deepEqual( Stem("addestrati"), "addestr");});
test("addetta -> addett", function() {deepEqual( Stem("addetta"), "addett");});
test("addette -> addett", function() {deepEqual( Stem("addette"), "addett");});
test("addetti -> addett", function() {deepEqual( Stem("addetti"), "addett");});
test("addetto -> addett", function() {deepEqual( Stem("addetto"), "addett");});
test("addietro -> addietr", function() {deepEqual( Stem("addietro"), "addietr");});
test("addii -> addi", function() {deepEqual( Stem("addii"), "addi");});
test("addio -> addi", function() {deepEqual( Stem("addio"), "addi");});
test("addirittura -> addirittur", function() {deepEqual( Stem("addirittura"), "addirittur");});
test("additò -> addit", function() {deepEqual( Stem("additò"), "addit");});
test("addivenire -> addiven", function() {deepEqual( Stem("addivenire"), "addiven");});
test("addizionali -> addizional", function() {deepEqual( Stem("addizionali"), "addizional");});
test("addobbate -> addobb", function() {deepEqual( Stem("addobbate"), "addobb");});
test("addobbi -> addobb", function() {deepEqual( Stem("addobbi"), "addobb");});
test("addolorata -> addolor", function() {deepEqual( Stem("addolorata"), "addolor");});
test("addolorati -> addolor", function() {deepEqual( Stem("addolorati"), "addolor");});
test("addolorato -> addolor", function() {deepEqual( Stem("addolorato"), "addolor");});
test("addome -> addom", function() {deepEqual( Stem("addome"), "addom");});
test("addormentarlo -> addorment", function() {deepEqual( Stem("addormentarlo"), "addorment");});
test("addormentata -> addorment", function() {deepEqual( Stem("addormentata"), "addorment");});
test("addormentati -> addorment", function() {deepEqual( Stem("addormentati"), "addorment");});
test("addormentato -> addorment", function() {deepEqual( Stem("addormentato"), "addorment");});
test("addormentò -> addorment", function() {deepEqual( Stem("addormentò"), "addorment");});
test("addossando -> addoss", function() {deepEqual( Stem("addossando"), "addoss");});
test("addossare -> addoss", function() {deepEqual( Stem("addossare"), "addoss");});
test("addossarvi -> addoss", function() {deepEqual( Stem("addossarvi"), "addoss");});
test("addosso -> addoss", function() {deepEqual( Stem("addosso"), "addoss");});
test("addottrinato -> addottrin", function() {deepEqual( Stem("addottrinato"), "addottrin");});
test("adduce -> adduc", function() {deepEqual( Stem("adduce"), "adduc");});
test("adducevate -> adduc", function() {deepEqual( Stem("adducevate"), "adduc");});
test("addurre -> addurr", function() {deepEqual( Stem("addurre"), "addurr");});
test("addusse -> adduss", function() {deepEqual( Stem("addusse"), "adduss");});
test("addussero -> addusser", function() {deepEqual( Stem("addussero"), "addusser");});
test("adeguamento -> adegu", function() {deepEqual( Stem("adeguamento"), "adegu");});
test("adeguandosi -> adegu", function() {deepEqual( Stem("adeguandosi"), "adegu");});
test("adeguarsi -> adegu", function() {deepEqual( Stem("adeguarsi"), "adegu");});
test("adeguata -> adegu", function() {deepEqual( Stem("adeguata"), "adegu");});
test("adeguatamente -> adeguat", function() {deepEqual( Stem("adeguatamente"), "adeguat");});
test("adeguate -> adegu", function() {deepEqual( Stem("adeguate"), "adegu");});
test("adeguatezza -> adeguatezz", function() {deepEqual( Stem("adeguatezza"), "adeguatezz");});
test("adeguato -> adegu", function() {deepEqual( Stem("adeguato"), "adegu");});
test("adeguatò -> adeguat", function() {deepEqual( Stem("adeguatò"), "adeguat");});
test("adeguerà -> adegu", function() {deepEqual( Stem("adeguerà"), "adegu");});
test("adelaide -> adelaid", function() {deepEqual( Stem("adelaide"), "adelaid");});
test("adelante -> adel", function() {deepEqual( Stem("adelante"), "adel");});
test("adelboden -> adelboden", function() {deepEqual( Stem("adelboden"), "adelboden");});
test("adempiendo -> ademp", function() {deepEqual( Stem("adempiendo"), "ademp");});
test("adempiere -> ademp", function() {deepEqual( Stem("adempiere"), "ademp");});
test("adempimenti -> ademp", function() {deepEqual( Stem("adempimenti"), "ademp");});
test("adempimento -> ademp", function() {deepEqual( Stem("adempimento"), "ademp");});
test("adempir -> ademp", function() {deepEqual( Stem("adempir"), "ademp");});
test("adempire -> ademp", function() {deepEqual( Stem("adempire"), "ademp");});
test("adempirlo -> ademp", function() {deepEqual( Stem("adempirlo"), "ademp");});
test("adempita -> ademp", function() {deepEqual( Stem("adempita"), "ademp");});
test("adempite -> ademp", function() {deepEqual( Stem("adempite"), "ademp");});
test("adempito -> ademp", function() {deepEqual( Stem("adempito"), "ademp");});
test("adeo -> ade", function() {deepEqual( Stem("adeo"), "ade");});
test("adepa -> adep", function() {deepEqual( Stem("adepa"), "adep");});
test("adepti -> adept", function() {deepEqual( Stem("adepti"), "adept");});
test("aderendo -> ader", function() {deepEqual( Stem("aderendo"), "ader");});
test("aderente -> aderent", function() {deepEqual( Stem("aderente"), "aderent");});
test("aderenti -> aderent", function() {deepEqual( Stem("aderenti"), "aderent");});
test("aderenze -> aderent", function() {deepEqual( Stem("aderenze"), "aderent");});
test("aderiranno -> ader", function() {deepEqual( Stem("aderiranno"), "ader");});
test("aderito -> ader", function() {deepEqual( Stem("aderito"), "ader");});
test("adesca -> adesc", function() {deepEqual( Stem("adesca"), "adesc");});
test("adesione -> adesion", function() {deepEqual( Stem("adesione"), "adesion");});
test("adesioni -> adesion", function() {deepEqual( Stem("adesioni"), "adesion");});
test("adesso -> adess", function() {deepEqual( Stem("adesso"), "adess");});
test("adi -> adi", function() {deepEqual( Stem("adi"), "adi");});
test("adiacenti -> adiacent", function() {deepEqual( Stem("adiacenti"), "adiacent");});
test("adiacenze -> adiacent", function() {deepEqual( Stem("adiacenze"), "adiacent");});
test("adiconsum -> adiconsum", function() {deepEqual( Stem("adiconsum"), "adiconsum");});
test("adige -> adig", function() {deepEqual( Stem("adige"), "adig");});
test("adiranno -> adirann", function() {deepEqual( Stem("adiranno"), "adirann");});
test("adirarsi -> adir", function() {deepEqual( Stem("adirarsi"), "adir");});
test("adirato -> adir", function() {deepEqual( Stem("adirato"), "adir");});
test("adito -> adit", function() {deepEqual( Stem("adito"), "adit");});
test("adocchiò -> adocc", function() {deepEqual( Stem("adocchiò"), "adocc");});
test("adolescente -> adolescent", function() {deepEqual( Stem("adolescente"), "adolescent");});
test("adolescenza -> adolescent", function() {deepEqual( Stem("adolescenza"), "adolescent");});
test("adolf -> adolf", function() {deepEqual( Stem("adolf"), "adolf");});
test("adolfo -> adolf", function() {deepEqual( Stem("adolfo"), "adolf");});
test("adombrano -> adombr", function() {deepEqual( Stem("adombrano"), "adombr");});
test("adombrato -> adombr", function() {deepEqual( Stem("adombrato"), "adombr");});
test("adoperar -> adoper", function() {deepEqual( Stem("adoperar"), "adoper");});
test("adoperarsi -> adoper", function() {deepEqual( Stem("adoperarsi"), "adoper");});
test("adoperate -> adoper", function() {deepEqual( Stem("adoperate"), "adoper");});
test("adoperati -> adoper", function() {deepEqual( Stem("adoperati"), "adoper");});
test("adoperato -> adoper", function() {deepEqual( Stem("adoperato"), "adoper");});
test("adoperavano -> adoper", function() {deepEqual( Stem("adoperavano"), "adoper");});
test("adopererà -> adoper", function() {deepEqual( Stem("adopererà"), "adoper");});
test("adoprano -> adopr", function() {deepEqual( Stem("adoprano"), "adopr");});
test("adoprar -> adopr", function() {deepEqual( Stem("adoprar"), "adopr");});
test("adoprare -> adopr", function() {deepEqual( Stem("adoprare"), "adopr");});
test("adoprarla -> adopr", function() {deepEqual( Stem("adoprarla"), "adopr");});
test("adoprarlo -> adopr", function() {deepEqual( Stem("adoprarlo"), "adopr");});
test("adoprarsi -> adopr", function() {deepEqual( Stem("adoprarsi"), "adopr");});
test("adoprata -> adopr", function() {deepEqual( Stem("adoprata"), "adopr");});
test("adoprati -> adopr", function() {deepEqual( Stem("adoprati"), "adopr");});
test("adoprato -> adopr", function() {deepEqual( Stem("adoprato"), "adopr");});
test("adoprava -> adopr", function() {deepEqual( Stem("adoprava"), "adopr");});
test("adopravano -> adopr", function() {deepEqual( Stem("adopravano"), "adopr");});
test("adoprerebbe -> adopr", function() {deepEqual( Stem("adoprerebbe"), "adopr");});
test("adorando -> ador", function() {deepEqual( Stem("adorando"), "ador");});
test("adorare -> ador", function() {deepEqual( Stem("adorare"), "ador");});
test("adorazione -> ador", function() {deepEqual( Stem("adorazione"), "ador");});
test("adorna -> adorn", function() {deepEqual( Stem("adorna"), "adorn");});
test("adornata -> adorn", function() {deepEqual( Stem("adornata"), "adorn");});
test("adottabili -> adott", function() {deepEqual( Stem("adottabili"), "adott");});
test("adottano -> adott", function() {deepEqual( Stem("adottano"), "adott");});
test("adottare -> adott", function() {deepEqual( Stem("adottare"), "adott");});
test("adottarli -> adott", function() {deepEqual( Stem("adottarli"), "adott");});
test("adottata -> adott", function() {deepEqual( Stem("adottata"), "adott");});
test("adottati -> adott", function() {deepEqual( Stem("adottati"), "adott");});
test("adottato -> adott", function() {deepEqual( Stem("adottato"), "adott");});
test("adottivo -> adott", function() {deepEqual( Stem("adottivo"), "adott");});
test("adozione -> adozion", function() {deepEqual( Stem("adozione"), "adozion");});
test("adrian -> adrian", function() {deepEqual( Stem("adrian"), "adrian");});
test("adriana -> adrian", function() {deepEqual( Stem("adriana"), "adrian");});
test("adriano -> adri", function() {deepEqual( Stem("adriano"), "adri");});
test("adriatic -> adriatic", function() {deepEqual( Stem("adriatic"), "adriatic");});
test("adriatica -> adriat", function() {deepEqual( Stem("adriatica"), "adriat");});
test("adriatiche -> adriat", function() {deepEqual( Stem("adriatiche"), "adriat");});
test("adriatico -> adriat", function() {deepEqual( Stem("adriatico"), "adriat");});
test("adris -> adris", function() {deepEqual( Stem("adris"), "adris");});
test("adspergine -> adspergin", function() {deepEqual( Stem("adspergine"), "adspergin");});
test("adspersisset -> adspersisset", function() {deepEqual( Stem("adspersisset"), "adspersisset");});
test("adulatori -> adul", function() {deepEqual( Stem("adulatori"), "adul");});
test("adulta -> adult", function() {deepEqual( Stem("adulta"), "adult");});
test("adulterio -> adulter", function() {deepEqual( Stem("adulterio"), "adulter");});
test("adulti -> adult", function() {deepEqual( Stem("adulti"), "adult");});
test("adunanza -> adun", function() {deepEqual( Stem("adunanza"), "adun");});
test("adunate -> adun", function() {deepEqual( Stem("adunate"), "adun");});
test("adunco -> adunc", function() {deepEqual( Stem("adunco"), "adunc");});
test("adunque -> adunqu", function() {deepEqual( Stem("adunque"), "adunqu");});
test("aduste -> adust", function() {deepEqual( Stem("aduste"), "adust");});
test("advances -> advances", function() {deepEqual( Stem("advances"), "advances");});
test("adwa -> adwa", function() {deepEqual( Stem("adwa"), "adwa");});
test("ae -> ae", function() {deepEqual( Stem("ae"), "ae");});
test("aedes -> aedes", function() {deepEqual( Stem("aedes"), "aedes");});
test("aedium -> aedium", function() {deepEqual( Stem("aedium"), "aedium");});
test("aequo -> aequ", function() {deepEqual( Stem("aequo"), "aequ");});
test("aerea -> aere", function() {deepEqual( Stem("aerea"), "aere");});
test("aeree -> aere", function() {deepEqual( Stem("aeree"), "aere");});
test("aerei -> aere", function() {deepEqual( Stem("aerei"), "aere");});
test("aereo -> aere", function() {deepEqual( Stem("aereo"), "aere");});
test("aeromobili -> aeromobil", function() {deepEqual( Stem("aeromobili"), "aeromobil");});
test("aeronautica -> aeronaut", function() {deepEqual( Stem("aeronautica"), "aeronaut");});
test("aeronautico -> aeronaut", function() {deepEqual( Stem("aeronautico"), "aeronaut");});
test("aeroporto -> aeroport", function() {deepEqual( Stem("aeroporto"), "aeroport");});
test("aeroportuale -> aeroportual", function() {deepEqual( Stem("aeroportuale"), "aeroportual");});
test("aerosol -> aerosol", function() {deepEqual( Stem("aerosol"), "aerosol");});
test("afa -> afa", function() {deepEqual( Stem("afa"), "afa");});
test("affaccendarsi -> affaccend", function() {deepEqual( Stem("affaccendarsi"), "affaccend");});
test("affaccendata -> affaccend", function() {deepEqual( Stem("affaccendata"), "affaccend");});
test("affaccendato -> affaccend", function() {deepEqual( Stem("affaccendato"), "affaccend");});
test("affaccendava -> affaccend", function() {deepEqual( Stem("affaccendava"), "affaccend");});
test("affaccendò -> affaccend", function() {deepEqual( Stem("affaccendò"), "affaccend");});
test("affacchinarsi -> affacchin", function() {deepEqual( Stem("affacchinarsi"), "affacchin");});
test("affaccia -> affacc", function() {deepEqual( Stem("affaccia"), "affacc");});
test("affacciandosi -> affacc", function() {deepEqual( Stem("affacciandosi"), "affacc");});
test("affacciare -> affacc", function() {deepEqual( Stem("affacciare"), "affacc");});
test("affacciaron -> affacciaron", function() {deepEqual( Stem("affacciaron"), "affacciaron");});
test("affacciarsi -> affacc", function() {deepEqual( Stem("affacciarsi"), "affacc");});
test("affacciassero -> affacc", function() {deepEqual( Stem("affacciassero"), "affacc");});
test("affacciata -> affacc", function() {deepEqual( Stem("affacciata"), "affacc");});
test("affacciati -> affacc", function() {deepEqual( Stem("affacciati"), "affacc");});
test("affacciato -> affacc", function() {deepEqual( Stem("affacciato"), "affacc");});
test("affacciatosi -> affacciat", function() {deepEqual( Stem("affacciatosi"), "affacciat");});
test("affacciava -> affacc", function() {deepEqual( Stem("affacciava"), "affacc");});
test("affacciavano -> affacc", function() {deepEqual( Stem("affacciavano"), "affacc");});
test("affacciò -> affacc", function() {deepEqual( Stem("affacciò"), "affacc");});
test("affacendato -> affacend", function() {deepEqual( Stem("affacendato"), "affacend");});
test("affamata -> affam", function() {deepEqual( Stem("affamata"), "affam");});
test("affamati -> affam", function() {deepEqual( Stem("affamati"), "affam");});
test("affamato -> affam", function() {deepEqual( Stem("affamato"), "affam");});
test("affamatore -> affam", function() {deepEqual( Stem("affamatore"), "affam");});
test("affamatori -> affam", function() {deepEqual( Stem("affamatori"), "affam");});
test("affannarsi -> affann", function() {deepEqual( Stem("affannarsi"), "affann");});
test("affannata -> affann", function() {deepEqual( Stem("affannata"), "affann");});
test("affannato -> affann", function() {deepEqual( Stem("affannato"), "affann");});
test("affannava -> affann", function() {deepEqual( Stem("affannava"), "affann");});
test("affanno -> affann", function() {deepEqual( Stem("affanno"), "affann");});
test("affannosa -> affann", function() {deepEqual( Stem("affannosa"), "affann");});
test("affannosamente -> affann", function() {deepEqual( Stem("affannosamente"), "affann");});
test("affannose -> affann", function() {deepEqual( Stem("affannose"), "affann");});
test("affannoso -> affann", function() {deepEqual( Stem("affannoso"), "affann");});
test("affar -> affar", function() {deepEqual( Stem("affar"), "affar");});
test("affaracci -> affaracc", function() {deepEqual( Stem("affaracci"), "affaracc");});
test("affare -> affar", function() {deepEqual( Stem("affare"), "affar");});
test("affari -> affar", function() {deepEqual( Stem("affari"), "affar");});
test("affaristica -> affarist", function() {deepEqual( Stem("affaristica"), "affarist");});
test("affascinante -> affascin", function() {deepEqual( Stem("affascinante"), "affascin");});
test("affascinanti -> affascin", function() {deepEqual( Stem("affascinanti"), "affascin");});
test("affaticandoci -> affatic", function() {deepEqual( Stem("affaticandoci"), "affatic");});
test("affaticarsi -> affatic", function() {deepEqual( Stem("affaticarsi"), "affatic");});
test("affaticasse -> affatic", function() {deepEqual( Stem("affaticasse"), "affatic");});
test("affaticata -> affatic", function() {deepEqual( Stem("affaticata"), "affatic");});
test("affaticati -> affatic", function() {deepEqual( Stem("affaticati"), "affatic");});
test("affaticato -> affatic", function() {deepEqual( Stem("affaticato"), "affatic");});
test("affatto -> affatt", function() {deepEqual( Stem("affatto"), "affatt");});
test("afferma -> afferm", function() {deepEqual( Stem("afferma"), "afferm");});
test("affermando -> afferm", function() {deepEqual( Stem("affermando"), "afferm");});
test("affermano -> afferm", function() {deepEqual( Stem("affermano"), "afferm");});
test("affermare -> afferm", function() {deepEqual( Stem("affermare"), "afferm");});
test("affermarsi -> afferm", function() {deepEqual( Stem("affermarsi"), "afferm");});
test("affermata -> afferm", function() {deepEqual( Stem("affermata"), "afferm");});
test("affermative -> afferm", function() {deepEqual( Stem("affermative"), "afferm");});
test("affermativo -> afferm", function() {deepEqual( Stem("affermativo"), "afferm");});
test("affermato -> afferm", function() {deepEqual( Stem("affermato"), "afferm");});
test("affermazione -> afferm", function() {deepEqual( Stem("affermazione"), "afferm");});
test("affermazioni -> afferm", function() {deepEqual( Stem("affermazioni"), "afferm");});
test("affermo -> afferm", function() {deepEqual( Stem("affermo"), "afferm");});
test("affermò -> afferm", function() {deepEqual( Stem("affermò"), "afferm");});
test("afferra -> afferr", function() {deepEqual( Stem("afferra"), "afferr");});
test("afferrando -> afferr", function() {deepEqual( Stem("afferrando"), "afferr");});
test("afferrandogli -> afferr", function() {deepEqual( Stem("afferrandogli"), "afferr");});
test("afferrandola -> afferr", function() {deepEqual( Stem("afferrandola"), "afferr");});
test("afferrandolo -> afferr", function() {deepEqual( Stem("afferrandolo"), "afferr");});
test("afferrano -> afferr", function() {deepEqual( Stem("afferrano"), "afferr");});
test("afferrar -> afferr", function() {deepEqual( Stem("afferrar"), "afferr");});
test("afferrarlo -> afferr", function() {deepEqual( Stem("afferrarlo"), "afferr");});
test("afferrata -> afferr", function() {deepEqual( Stem("afferrata"), "afferr");});
test("afferrati -> afferr", function() {deepEqual( Stem("afferrati"), "afferr");});
test("afferrato -> afferr", function() {deepEqual( Stem("afferrato"), "afferr");});
test("afferrò -> afferr", function() {deepEqual( Stem("afferrò"), "afferr");});
test("affettata -> affett", function() {deepEqual( Stem("affettata"), "affett");});
test("affettato -> affett", function() {deepEqual( Stem("affettato"), "affett");});
test("affetti -> affett", function() {deepEqual( Stem("affetti"), "affett");});
test("affettivo -> affett", function() {deepEqual( Stem("affettivo"), "affett");});
test("affetto -> affett", function() {deepEqual( Stem("affetto"), "affett");});
test("affettuosa -> affettu", function() {deepEqual( Stem("affettuosa"), "affettu");});
test("affettuosamente -> affettu", function() {deepEqual( Stem("affettuosamente"), "affettu");});
test("affettuose -> affettu", function() {deepEqual( Stem("affettuose"), "affettu");});
test("affettuosi -> affettu", function() {deepEqual( Stem("affettuosi"), "affettu");});
test("affettuoso -> affettu", function() {deepEqual( Stem("affettuoso"), "affettu");});
test("affezionata -> affezion", function() {deepEqual( Stem("affezionata"), "affezion");});
test("affezionato -> affezion", function() {deepEqual( Stem("affezionato"), "affezion");});
test("affezione -> affezion", function() {deepEqual( Stem("affezione"), "affezion");});
test("affezioni -> affezion", function() {deepEqual( Stem("affezioni"), "affezion");});
test("affianca -> affianc", function() {deepEqual( Stem("affianca"), "affianc");});
test("affiancare -> affianc", function() {deepEqual( Stem("affiancare"), "affianc");});
test("affiancato -> affianc", function() {deepEqual( Stem("affiancato"), "affianc");});
test("affiancherà -> affianc", function() {deepEqual( Stem("affiancherà"), "affianc");});
test("affiancheranno -> affianc", function() {deepEqual( Stem("affiancheranno"), "affianc");});
test("affianchi -> affianc", function() {deepEqual( Stem("affianchi"), "affianc");});
test("affibiargli -> affib", function() {deepEqual( Stem("affibiargli"), "affib");});
test("affichè -> affic", function() {deepEqual( Stem("affichè"), "affic");});
test("affida -> affid", function() {deepEqual( Stem("affida"), "affid");});
test("affidabile -> affid", function() {deepEqual( Stem("affidabile"), "affid");});
test("affidabili -> affid", function() {deepEqual( Stem("affidabili"), "affid");});
test("affidabilità -> affid", function() {deepEqual( Stem("affidabilità"), "affid");});
test("affidamento -> affid", function() {deepEqual( Stem("affidamento"), "affid");});
test("affidano -> affid", function() {deepEqual( Stem("affidano"), "affid");});
test("affidare -> affid", function() {deepEqual( Stem("affidare"), "affid");});
test("affidargli -> affid", function() {deepEqual( Stem("affidargli"), "affid");});
test("affidata -> affid", function() {deepEqual( Stem("affidata"), "affid");});
test("affidate -> affid", function() {deepEqual( Stem("affidate"), "affid");});
test("affidati -> affid", function() {deepEqual( Stem("affidati"), "affid");});
test("affidato -> affid", function() {deepEqual( Stem("affidato"), "affid");});
test("affidatomi -> affidatom", function() {deepEqual( Stem("affidatomi"), "affidatom");});
test("affievoliscano -> affievol", function() {deepEqual( Stem("affievoliscano"), "affievol");});
test("affievolisse -> affievoliss", function() {deepEqual( Stem("affievolisse"), "affievoliss");});
test("affilate -> affil", function() {deepEqual( Stem("affilate"), "affil");});
test("affinamento -> affin", function() {deepEqual( Stem("affinamento"), "affin");});
test("affinché -> affinc", function() {deepEqual( Stem("affinché"), "affinc");});
test("affinchè -> affinc", function() {deepEqual( Stem("affinchè"), "affinc");});
test("affine -> affin", function() {deepEqual( Stem("affine"), "affin");});
test("affini -> affin", function() {deepEqual( Stem("affini"), "affin");});
test("affinis -> affinis", function() {deepEqual( Stem("affinis"), "affinis");});
test("affissa -> affiss", function() {deepEqual( Stem("affissa"), "affiss");});
test("affissi -> affiss", function() {deepEqual( Stem("affissi"), "affiss");});
test("affissione -> affission", function() {deepEqual( Stem("affissione"), "affission");});
test("affissioni -> affission", function() {deepEqual( Stem("affissioni"), "affission");});
test("affisso -> affiss", function() {deepEqual( Stem("affisso"), "affiss");});
test("affittata -> affitt", function() {deepEqual( Stem("affittata"), "affitt");});
test("affittate -> affitt", function() {deepEqual( Stem("affittate"), "affitt");});
test("affittato -> affitt", function() {deepEqual( Stem("affittato"), "affitt");});
test("affitti -> affitt", function() {deepEqual( Stem("affitti"), "affitt");});
test("affitto -> affitt", function() {deepEqual( Stem("affitto"), "affitt");});
test("affittuari -> affittuar", function() {deepEqual( Stem("affittuari"), "affittuar");});
test("affittuario -> affittuar", function() {deepEqual( Stem("affittuario"), "affittuar");});
test("afflato -> afflat", function() {deepEqual( Stem("afflato"), "afflat");});
test("affliggervi -> affligg", function() {deepEqual( Stem("affliggervi"), "affligg");});
test("afflisse -> affliss", function() {deepEqual( Stem("afflisse"), "affliss");});
test("afflitta -> afflitt", function() {deepEqual( Stem("afflitta"), "afflitt");});
test("afflitte -> afflitt", function() {deepEqual( Stem("afflitte"), "afflitt");});
test("afflitti -> afflitt", function() {deepEqual( Stem("afflitti"), "afflitt");});
test("afflitto -> afflitt", function() {deepEqual( Stem("afflitto"), "afflitt");});
test("afflizione -> afflizion", function() {deepEqual( Stem("afflizione"), "afflizion");});
test("afflizioni -> afflizion", function() {deepEqual( Stem("afflizioni"), "afflizion");});
test("affluiscono -> afflu", function() {deepEqual( Stem("affluiscono"), "afflu");});
test("affluiti -> afflu", function() {deepEqual( Stem("affluiti"), "afflu");});
test("afflusso -> affluss", function() {deepEqual( Stem("afflusso"), "affluss");});
test("affoga -> affog", function() {deepEqual( Stem("affoga"), "affog");});
test("affogare -> affog", function() {deepEqual( Stem("affogare"), "affog");});
test("affolla -> affoll", function() {deepEqual( Stem("affolla"), "affoll");});
test("affollamento -> affoll", function() {deepEqual( Stem("affollamento"), "affoll");});
test("affollano -> affoll", function() {deepEqual( Stem("affollano"), "affoll");});
test("affollare -> affoll", function() {deepEqual( Stem("affollare"), "affoll");});
test("affollarsi -> affoll", function() {deepEqual( Stem("affollarsi"), "affoll");});
test("affollata -> affoll", function() {deepEqual( Stem("affollata"), "affoll");});
test("affollati -> affoll", function() {deepEqual( Stem("affollati"), "affoll");});
test("affollato -> affoll", function() {deepEqual( Stem("affollato"), "affoll");});
test("affonda -> affond", function() {deepEqual( Stem("affonda"), "affond");});
test("affondando -> affond", function() {deepEqual( Stem("affondando"), "affond");});
test("affondare -> affond", function() {deepEqual( Stem("affondare"), "affond");});
test("affondata -> affond", function() {deepEqual( Stem("affondata"), "affond");});
test("affondate -> affond", function() {deepEqual( Stem("affondate"), "affond");});
test("affondato -> affond", function() {deepEqual( Stem("affondato"), "affond");});
test("affondo -> affond", function() {deepEqual( Stem("affondo"), "affond");});
test("affossati -> affoss", function() {deepEqual( Stem("affossati"), "affoss");});
test("affresco -> affresc", function() {deepEqual( Stem("affresco"), "affresc");});
test("affretta -> affrett", function() {deepEqual( Stem("affretta"), "affrett");});
test("affrettar -> affrett", function() {deepEqual( Stem("affrettar"), "affrett");});
test("affrettare -> affrett", function() {deepEqual( Stem("affrettare"), "affrett");});
test("affrettato -> affrett", function() {deepEqual( Stem("affrettato"), "affrett");});
test("affrettava -> affrett", function() {deepEqual( Stem("affrettava"), "affrett");});
test("affrettò -> affrett", function() {deepEqual( Stem("affrettò"), "affrett");});
test("affronta -> affront", function() {deepEqual( Stem("affronta"), "affront");});
test("affrontando -> affront", function() {deepEqual( Stem("affrontando"), "affront");});
test("affrontano -> affront", function() {deepEqual( Stem("affrontano"), "affront");});
test("affrontar -> affront", function() {deepEqual( Stem("affrontar"), "affront");});
test("affrontare -> affront", function() {deepEqual( Stem("affrontare"), "affront");});
test("affrontarla -> affront", function() {deepEqual( Stem("affrontarla"), "affront");});
test("affrontarlo -> affront", function() {deepEqual( Stem("affrontarlo"), "affront");});
test("affrontarsi -> affront", function() {deepEqual( Stem("affrontarsi"), "affront");});
test("affrontata -> affront", function() {deepEqual( Stem("affrontata"), "affront");});
test("affrontate -> affront", function() {deepEqual( Stem("affrontate"), "affront");});
test("affrontati -> affront", function() {deepEqual( Stem("affrontati"), "affront");});
test("affrontato -> affront", function() {deepEqual( Stem("affrontato"), "affront");});
test("affronterai -> affront", function() {deepEqual( Stem("affronterai"), "affront");});
test("affronteranno -> affront", function() {deepEqual( Stem("affronteranno"), "affront");});
test("affronteremo -> affront", function() {deepEqual( Stem("affronteremo"), "affront");});
test("affronto -> affront", function() {deepEqual( Stem("affronto"), "affront");});
test("affumicate -> affumic", function() {deepEqual( Stem("affumicate"), "affumic");});
test("afghana -> afghan", function() {deepEqual( Stem("afghana"), "afghan");});
test("afghane -> afghan", function() {deepEqual( Stem("afghane"), "afghan");});
test("afghani -> afghan", function() {deepEqual( Stem("afghani"), "afghan");});
test("afghanistan -> afghanistan", function() {deepEqual( Stem("afghanistan"), "afghanistan");});
test("aflare -> aflar", function() {deepEqual( Stem("aflare"), "aflar");});
test("afp -> afp", function() {deepEqual( Stem("afp"), "afp");});
test("africa -> afric", function() {deepEqual( Stem("africa"), "afric");});
test("africano -> afric", function() {deepEqual( Stem("africano"), "afric");});
test("afrique -> afriqu", function() {deepEqual( Stem("afrique"), "afriqu");});
test("ag -> ag", function() {deepEqual( Stem("ag"), "ag");});
test("aga -> aga", function() {deepEqual( Stem("aga"), "aga");});
test("agapov -> agapov", function() {deepEqual( Stem("agapov"), "agapov");});
test("agassi -> agass", function() {deepEqual( Stem("agassi"), "agass");});
test("agata -> agat", function() {deepEqual( Stem("agata"), "agat");});
test("agazzi -> agazz", function() {deepEqual( Stem("agazzi"), "agazz");});
test("agci -> agci", function() {deepEqual( Stem("agci"), "agci");});
test("age -> age", function() {deepEqual( Stem("age"), "age");});
test("agenda -> agend", function() {deepEqual( Stem("agenda"), "agend");});
test("agennli -> agennl", function() {deepEqual( Stem("agennli"), "agennl");});
test("agensud -> agensud", function() {deepEqual( Stem("agensud"), "agensud");});
test("agente -> agent", function() {deepEqual( Stem("agente"), "agent");});
test("agenti -> agent", function() {deepEqual( Stem("agenti"), "agent");});
test("agenzia -> agenz", function() {deepEqual( Stem("agenzia"), "agenz");});
test("agenzie -> agenz", function() {deepEqual( Stem("agenzie"), "agenz");});
test("agevolare -> agevol", function() {deepEqual( Stem("agevolare"), "agevol");});
test("agevolata -> agevol", function() {deepEqual( Stem("agevolata"), "agevol");});
test("agevolato -> agevol", function() {deepEqual( Stem("agevolato"), "agevol");});
test("agevolazione -> agevol", function() {deepEqual( Stem("agevolazione"), "agevol");});
test("agevolazioni -> agevol", function() {deepEqual( Stem("agevolazioni"), "agevol");});
test("agevole -> agevol", function() {deepEqual( Stem("agevole"), "agevol");});
test("agevolezze -> agevolezz", function() {deepEqual( Stem("agevolezze"), "agevolezz");});
test("agevoli -> agevol", function() {deepEqual( Stem("agevoli"), "agevol");});
test("agganciare -> agganc", function() {deepEqual( Stem("agganciare"), "agganc");});
test("aggettivo -> aggett", function() {deepEqual( Stem("aggettivo"), "aggett");});
test("agghiacciante -> agghiacc", function() {deepEqual( Stem("agghiacciante"), "agghiacc");});
test("agginte -> aggint", function() {deepEqual( Stem("agginte"), "aggint");});
test("aggiorna -> aggiorn", function() {deepEqual( Stem("aggiorna"), "aggiorn");});
test("aggiornamenti -> aggiorn", function() {deepEqual( Stem("aggiornamenti"), "aggiorn");});
test("aggiornamento -> aggiorn", function() {deepEqual( Stem("aggiornamento"), "aggiorn");});
test("aggiornata -> aggiorn", function() {deepEqual( Stem("aggiornata"), "aggiorn");});
test("aggira -> aggir", function() {deepEqual( Stem("aggira"), "aggir");});
test("aggirano -> aggir", function() {deepEqual( Stem("aggirano"), "aggir");});
test("aggirarsi -> aggir", function() {deepEqual( Stem("aggirarsi"), "aggir");});
test("aggirava -> aggir", function() {deepEqual( Stem("aggirava"), "aggir");});
test("aggiudicato -> aggiudic", function() {deepEqual( Stem("aggiudicato"), "aggiudic");});
test("aggiunga -> aggiung", function() {deepEqual( Stem("aggiunga"), "aggiung");});
test("aggiunge -> aggiung", function() {deepEqual( Stem("aggiunge"), "aggiung");});
test("aggiungendo -> aggiung", function() {deepEqual( Stem("aggiungendo"), "aggiung");});
test("aggiunger -> aggiunger", function() {deepEqual( Stem("aggiunger"), "aggiunger");});
test("aggiungeranno -> aggiung", function() {deepEqual( Stem("aggiungeranno"), "aggiung");});
test("aggiungere -> aggiung", function() {deepEqual( Stem("aggiungere"), "aggiung");});
test("aggiungervi -> aggiung", function() {deepEqual( Stem("aggiungervi"), "aggiung");});
test("aggiungeva -> aggiung", function() {deepEqual( Stem("aggiungeva"), "aggiung");});
test("aggiungevano -> aggiung", function() {deepEqual( Stem("aggiungevano"), "aggiung");});
test("aggiungiamo -> aggiung", function() {deepEqual( Stem("aggiungiamo"), "aggiung");});
test("aggiungono -> aggiung", function() {deepEqual( Stem("aggiungono"), "aggiung");});
test("aggiunse -> aggiuns", function() {deepEqual( Stem("aggiunse"), "aggiuns");});
test("aggiunsero -> aggiunser", function() {deepEqual( Stem("aggiunsero"), "aggiunser");});
test("aggiunsi -> aggiuns", function() {deepEqual( Stem("aggiunsi"), "aggiuns");});
test("aggiunta -> aggiunt", function() {deepEqual( Stem("aggiunta"), "aggiunt");});
test("aggiunte -> aggiunt", function() {deepEqual( Stem("aggiunte"), "aggiunt");});
test("aggiunti -> aggiunt", function() {deepEqual( Stem("aggiunti"), "aggiunt");});
test("aggiuntive -> aggiunt", function() {deepEqual( Stem("aggiuntive"), "aggiunt");});
test("aggiuntivi -> aggiunt", function() {deepEqual( Stem("aggiuntivi"), "aggiunt");});
test("aggiunto -> aggiunt", function() {deepEqual( Stem("aggiunto"), "aggiunt");});
test("aggiuntovi -> aggiuntov", function() {deepEqual( Stem("aggiuntovi"), "aggiuntov");});
test("aggiustamenti -> aggiust", function() {deepEqual( Stem("aggiustamenti"), "aggiust");});
test("aggiustamento -> aggiust", function() {deepEqual( Stem("aggiustamento"), "aggiust");});
test("aggiutto -> aggiutt", function() {deepEqual( Stem("aggiutto"), "aggiutt");});
test("aggranchiate -> aggranc", function() {deepEqual( Stem("aggranchiate"), "aggranc");});
test("aggrapparsi -> aggrapp", function() {deepEqual( Stem("aggrapparsi"), "aggrapp");});
test("aggravando -> aggrav", function() {deepEqual( Stem("aggravando"), "aggrav");});
test("aggravare -> aggrav", function() {deepEqual( Stem("aggravare"), "aggrav");});
test("aggravarsi -> aggrav", function() {deepEqual( Stem("aggravarsi"), "aggrav");});
test("aggravata -> aggrav", function() {deepEqual( Stem("aggravata"), "aggrav");});
test("aggravatissima -> aggravatissim", function() {deepEqual( Stem("aggravatissima"), "aggravatissim");});
test("aggravato -> aggrav", function() {deepEqual( Stem("aggravato"), "aggrav");});
test("aggraverebbe -> aggrav", function() {deepEqual( Stem("aggraverebbe"), "aggrav");});
test("aggredisce -> aggred", function() {deepEqual( Stem("aggredisce"), "aggred");});
test("aggredita -> aggred", function() {deepEqual( Stem("aggredita"), "aggred");});
test("aggrediti -> aggred", function() {deepEqual( Stem("aggrediti"), "aggred");});
test("aggredito -> aggred", function() {deepEqual( Stem("aggredito"), "aggred");});
test("aggregare -> aggreg", function() {deepEqual( Stem("aggregare"), "aggreg");});
test("aggregazione -> aggreg", function() {deepEqual( Stem("aggregazione"), "aggreg");});
test("aggregazioni -> aggreg", function() {deepEqual( Stem("aggregazioni"), "aggreg");});
test("aggregherà -> aggreg", function() {deepEqual( Stem("aggregherà"), "aggreg");});
test("aggregrazione -> aggregr", function() {deepEqual( Stem("aggregrazione"), "aggregr");});
test("aggressione -> aggression", function() {deepEqual( Stem("aggressione"), "aggression");});
test("aggressioni -> aggression", function() {deepEqual( Stem("aggressioni"), "aggression");});
test("aggressivi -> aggress", function() {deepEqual( Stem("aggressivi"), "aggress");});
test("aggressività -> aggress", function() {deepEqual( Stem("aggressività"), "aggress");});
test("aggressivo -> aggress", function() {deepEqual( Stem("aggressivo"), "aggress");});
test("aggrinzando -> aggrinz", function() {deepEqual( Stem("aggrinzando"), "aggrinz");});
test("aggrottando -> aggrott", function() {deepEqual( Stem("aggrottando"), "aggrott");});
test("aggrottate -> aggrott", function() {deepEqual( Stem("aggrottate"), "aggrott");});
test("aggruppano -> aggrupp", function() {deepEqual( Stem("aggruppano"), "aggrupp");});
test("aggruppati -> aggrupp", function() {deepEqual( Stem("aggruppati"), "aggrupp");});
test("agguanta -> agguant", function() {deepEqual( Stem("agguanta"), "agguant");});
test("agguantati -> agguant", function() {deepEqual( Stem("agguantati"), "agguant");});
test("agguantò -> agguant", function() {deepEqual( Stem("agguantò"), "agguant");});
test("agguati -> aggu", function() {deepEqual( Stem("agguati"), "aggu");});
test("agguato -> aggu", function() {deepEqual( Stem("agguato"), "aggu");});
test("agguerrita -> agguerr", function() {deepEqual( Stem("agguerrita"), "agguerr");});
test("aghini -> aghin", function() {deepEqual( Stem("aghini"), "aghin");});
test("agi -> agi", function() {deepEqual( Stem("agi"), "agi");});
test("agiata -> agi", function() {deepEqual( Stem("agiata"), "agi");});
test("agiatezza -> agiatezz", function() {deepEqual( Stem("agiatezza"), "agiatezz");});
test("agiati -> agi", function() {deepEqual( Stem("agiati"), "agi");});
test("agiato -> agi", function() {deepEqual( Stem("agiato"), "agi");});
test("agile -> agil", function() {deepEqual( Stem("agile"), "agil");});
test("agio -> agi", function() {deepEqual( Stem("agio"), "agi");});
test("agiranno -> agirann", function() {deepEqual( Stem("agiranno"), "agirann");});
test("agire -> agir", function() {deepEqual( Stem("agire"), "agir");});
test("agiremo -> agirem", function() {deepEqual( Stem("agiremo"), "agirem");});
test("agisca -> agisc", function() {deepEqual( Stem("agisca"), "agisc");});
test("agisce -> agisc", function() {deepEqual( Stem("agisce"), "agisc");});
test("agita -> agit", function() {deepEqual( Stem("agita"), "agit");});
test("agitarlo -> agit", function() {deepEqual( Stem("agitarlo"), "agit");});
test("agitata -> agit", function() {deepEqual( Stem("agitata"), "agit");});
test("agitate -> agit", function() {deepEqual( Stem("agitate"), "agit");});
test("agitati -> agit", function() {deepEqual( Stem("agitati"), "agit");});
test("agitato -> agit", function() {deepEqual( Stem("agitato"), "agit");});
test("agitava -> agit", function() {deepEqual( Stem("agitava"), "agit");});
test("agitazion -> agitazion", function() {deepEqual( Stem("agitazion"), "agitazion");});
test("agitazione -> agit", function() {deepEqual( Stem("agitazione"), "agit");});
test("agitazioni -> agit", function() {deepEqual( Stem("agitazioni"), "agit");});
test("agito -> agit", function() {deepEqual( Stem("agito"), "agit");});
test("agiutto -> agiutt", function() {deepEqual( Stem("agiutto"), "agiutt");});
test("agl -> agl", function() {deepEqual( Stem("agl"), "agl");});
test("agli -> agli", function() {deepEqual( Stem("agli"), "agli");});
test("agnalli -> agnall", function() {deepEqual( Stem("agnalli"), "agnall");});
test("agnelli -> agnell", function() {deepEqual( Stem("agnelli"), "agnell");});
test("agnello -> agnell", function() {deepEqual( Stem("agnello"), "agnell");});
test("agnes -> agnes", function() {deepEqual( Stem("agnes"), "agnes");});
test("agnese -> agnes", function() {deepEqual( Stem("agnese"), "agnes");});
test("ago -> ago", function() {deepEqual( Stem("ago"), "ago");});
test("agonia -> agon", function() {deepEqual( Stem("agonia"), "agon");});
test("agonismo -> agon", function() {deepEqual( Stem("agonismo"), "agon");});
test("agonistica -> agonist", function() {deepEqual( Stem("agonistica"), "agonist");});
test("agonizzante -> agonizz", function() {deepEqual( Stem("agonizzante"), "agonizz");});
test("agos -> agos", function() {deepEqual( Stem("agos"), "agos");});
test("agostina -> agostin", function() {deepEqual( Stem("agostina"), "agostin");});
test("agostini -> agostin", function() {deepEqual( Stem("agostini"), "agostin");});
test("agostino -> agostin", function() {deepEqual( Stem("agostino"), "agostin");});
test("agosto -> agost", function() {deepEqual( Stem("agosto"), "agost");});
test("agr -> agr", function() {deepEqual( Stem("agr"), "agr");});
test("agra -> agra", function() {deepEqual( Stem("agra"), "agra");});
test("agrario -> agrar", function() {deepEqual( Stem("agrario"), "agrar");});
test("agreement -> agreement", function() {deepEqual( Stem("agreement"), "agreement");});
test("agren -> agren", function() {deepEqual( Stem("agren"), "agren");});
test("agric -> agric", function() {deepEqual( Stem("agric"), "agric");});
test("agricola -> agricol", function() {deepEqual( Stem("agricola"), "agricol");});
test("agricole -> agricol", function() {deepEqual( Stem("agricole"), "agricol");});
test("agricoli -> agricol", function() {deepEqual( Stem("agricoli"), "agricol");});
test("agricolo -> agricol", function() {deepEqual( Stem("agricolo"), "agricol");});
test("agricoltori -> agricoltor", function() {deepEqual( Stem("agricoltori"), "agricoltor");});
test("agricoltura -> agricoltur", function() {deepEqual( Stem("agricoltura"), "agricoltur");});
test("agrifoglio -> agrifogl", function() {deepEqual( Stem("agrifoglio"), "agrifogl");});
test("agrifutura -> agrifutur", function() {deepEqual( Stem("agrifutura"), "agrifutur");});
test("agrigento -> agrigent", function() {deepEqual( Stem("agrigento"), "agrigent");});
test("agro -> agro", function() {deepEqual( Stem("agro"), "agro");});
test("aguanta -> aguant", function() {deepEqual( Stem("aguanta"), "aguant");});
test("aguas -> aguas", function() {deepEqual( Stem("aguas"), "aguas");});
test("aguayo -> aguay", function() {deepEqual( Stem("aguayo"), "aguay");});
test("aguzzando -> aguzz", function() {deepEqual( Stem("aguzzando"), "aguzz");});
test("aguzzano -> aguzz", function() {deepEqual( Stem("aguzzano"), "aguzz");});
test("aguzzava -> aguzz", function() {deepEqual( Stem("aguzzava"), "aguzz");});
test("aguzzino -> aguzzin", function() {deepEqual( Stem("aguzzino"), "aguzzin");});
test("ah -> ah", function() {deepEqual( Stem("ah"), "ah");});
test("ahata -> ahat", function() {deepEqual( Stem("ahata"), "ahat");});
test("ahi -> ahi", function() {deepEqual( Stem("ahi"), "ahi");});
test("ahimè -> ahim", function() {deepEqual( Stem("ahimè"), "ahim");});
test("ahmed -> ahmed", function() {deepEqual( Stem("ahmed"), "ahmed");});
test("ahn -> ahn", function() {deepEqual( Stem("ahn"), "ahn");});
test("ahronot -> ahronot", function() {deepEqual( Stem("ahronot"), "ahronot");});
test("ai -> ai", function() {deepEqual( Stem("ai"), "ai");});
test("aia -> aia", function() {deepEqual( Stem("aia"), "aia");});
test("aidid -> aidid", function() {deepEqual( Stem("aidid"), "aidid");});
test("aids -> aids", function() {deepEqual( Stem("aids"), "aids");});
test("aie -> aie", function() {deepEqual( Stem("aie"), "aie");});
test("aiebant -> aiebant", function() {deepEqual( Stem("aiebant"), "aiebant");});
test("aimee -> aime", function() {deepEqual( Stem("aimee"), "aime");});
test("aimone -> aimon", function() {deepEqual( Stem("aimone"), "aimon");});
test("air -> air", function() {deepEqual( Stem("air"), "air");});
test("aires -> aires", function() {deepEqual( Stem("aires"), "aires");});
test("ais -> ais", function() {deepEqual( Stem("ais"), "ais");});
test("aiuta -> aiut", function() {deepEqual( Stem("aiuta"), "aiut");});
test("aiutando -> aiut", function() {deepEqual( Stem("aiutando"), "aiut");});
test("aiutante -> aiut", function() {deepEqual( Stem("aiutante"), "aiut");});
test("aiutanti -> aiut", function() {deepEqual( Stem("aiutanti"), "aiut");});
test("aiutar -> aiut", function() {deepEqual( Stem("aiutar"), "aiut");});
test("aiutarci -> aiut", function() {deepEqual( Stem("aiutarci"), "aiut");});
test("aiutare -> aiut", function() {deepEqual( Stem("aiutare"), "aiut");});
test("aiutarla -> aiut", function() {deepEqual( Stem("aiutarla"), "aiut");});
test("aiutarli -> aiut", function() {deepEqual( Stem("aiutarli"), "aiut");});
test("aiutarlo -> aiut", function() {deepEqual( Stem("aiutarlo"), "aiut");});
test("aiutarmi -> aiut", function() {deepEqual( Stem("aiutarmi"), "aiut");});
test("aiutarono -> aiut", function() {deepEqual( Stem("aiutarono"), "aiut");});
test("aiutarsi -> aiut", function() {deepEqual( Stem("aiutarsi"), "aiut");});
test("aiutarvi -> aiut", function() {deepEqual( Stem("aiutarvi"), "aiut");});
test("aiutasse -> aiut", function() {deepEqual( Stem("aiutasse"), "aiut");});
test("aiutassero -> aiut", function() {deepEqual( Stem("aiutassero"), "aiut");});
test("aiutata -> aiut", function() {deepEqual( Stem("aiutata"), "aiut");});
test("aiutate -> aiut", function() {deepEqual( Stem("aiutate"), "aiut");});
test("aiutateci -> aiutatec", function() {deepEqual( Stem("aiutateci"), "aiutatec");});
test("aiutatemi -> aiutatem", function() {deepEqual( Stem("aiutatemi"), "aiutatem");});
test("aiutati -> aiut", function() {deepEqual( Stem("aiutati"), "aiut");});
test("aiutato -> aiut", function() {deepEqual( Stem("aiutato"), "aiut");});
test("aiutava -> aiut", function() {deepEqual( Stem("aiutava"), "aiut");});
test("aiuterà -> aiut", function() {deepEqual( Stem("aiuterà"), "aiut");});
test("aiuti -> aiut", function() {deepEqual( Stem("aiuti"), "aiut");});
test("aiutino -> aiutin", function() {deepEqual( Stem("aiutino"), "aiutin");});
test("aiuto -> aiut", function() {deepEqual( Stem("aiuto"), "aiut");});
test("aiutò -> aiut", function() {deepEqual( Stem("aiutò"), "aiut");});
test("aix -> aix", function() {deepEqual( Stem("aix"), "aix");});
test("aizzargli -> aizz", function() {deepEqual( Stem("aizzargli"), "aizz");});
test("aizzasse -> aizz", function() {deepEqual( Stem("aizzasse"), "aizz");});
test("aizzata -> aizz", function() {deepEqual( Stem("aizzata"), "aizz");});
test("aizzatori -> aizzator", function() {deepEqual( Stem("aizzatori"), "aizzator");});
test("aizzava -> aizz", function() {deepEqual( Stem("aizzava"), "aizz");});
test("ajaccio -> ajacc", function() {deepEqual( Stem("ajaccio"), "ajacc");});
test("ajello -> ajell", function() {deepEqual( Stem("ajello"), "ajell");});
test("akbar -> akbar", function() {deepEqual( Stem("akbar"), "akbar");});
test("al -> al", function() {deepEqual( Stem("al"), "al");});
test("ala -> ala", function() {deepEqual( Stem("ala"), "ala");});
test("alabarde -> alabard", function() {deepEqual( Stem("alabarde"), "alabard");});
test("alabardieri -> alabardier", function() {deepEqual( Stem("alabardieri"), "alabardier");});
test("alacce -> alacc", function() {deepEqual( Stem("alacce"), "alacc");});
test("alacrità -> alacr", function() {deepEqual( Stem("alacrità"), "alacr");});
test("alain -> alain", function() {deepEqual( Stem("alain"), "alain");});
test("alam -> alam", function() {deepEqual( Stem("alam"), "alam");});
test("alan -> alan", function() {deepEqual( Stem("alan"), "alan");});
test("alard -> alard", function() {deepEqual( Stem("alard"), "alard");});
test("alba -> alba", function() {deepEqual( Stem("alba"), "alba");});
test("albafeira -> albafeir", function() {deepEqual( Stem("albafeira"), "albafeir");});
test("albagìa -> albagì", function() {deepEqual( Stem("albagìa"), "albagì");});
test("albanese -> albanes", function() {deepEqual( Stem("albanese"), "albanes");});
test("albanesè -> albanes", function() {deepEqual( Stem("albanesè"), "albanes");});
test("albanesi -> albanes", function() {deepEqual( Stem("albanesi"), "albanes");});
test("albania -> alban", function() {deepEqual( Stem("albania"), "alban");});
test("albano -> alban", function() {deepEqual( Stem("albano"), "alban");});
test("albanova -> albanov", function() {deepEqual( Stem("albanova"), "albanov");});
test("albeggiare -> albegg", function() {deepEqual( Stem("albeggiare"), "albegg");});
test("alberga -> alberg", function() {deepEqual( Stem("alberga"), "alberg");});
test("albergato -> alberg", function() {deepEqual( Stem("albergato"), "alberg");});
test("alberghi -> alberg", function() {deepEqual( Stem("alberghi"), "alberg");});
test("alberghiero -> alberghier", function() {deepEqual( Stem("alberghiero"), "alberghier");});
test("albergo -> alberg", function() {deepEqual( Stem("albergo"), "alberg");});
test("alberi -> alber", function() {deepEqual( Stem("alberi"), "alber");});
test("albero -> alber", function() {deepEqual( Stem("albero"), "alber");});
test("alberoni -> alberon", function() {deepEqual( Stem("alberoni"), "alberon");});
test("albertini -> albertin", function() {deepEqual( Stem("albertini"), "albertin");});
test("alberto -> albert", function() {deepEqual( Stem("alberto"), "albert");});
test("albino -> albin", function() {deepEqual( Stem("albino"), "albin");});
test("albo -> albo", function() {deepEqual( Stem("albo"), "albo");});
test("album -> album", function() {deepEqual( Stem("album"), "album");});
test("alcabizio -> alcabiz", function() {deepEqual( Stem("alcabizio"), "alcabiz");});
test("alcatel -> alcatel", function() {deepEqual( Stem("alcatel"), "alcatel");});
test("alce -> alce", function() {deepEqual( Stem("alce"), "alce");});
test("alcide -> alcid", function() {deepEqual( Stem("alcide"), "alcid");});
test("alcun -> alcun", function() {deepEqual( Stem("alcun"), "alcun");});
test("alcuna -> alcun", function() {deepEqual( Stem("alcuna"), "alcun");});
test("alcune -> alcun", function() {deepEqual( Stem("alcune"), "alcun");});
test("alcuni -> alcun", function() {deepEqual( Stem("alcuni"), "alcun");});
test("alcuno -> alcun", function() {deepEqual( Stem("alcuno"), "alcun");});
test("aldair -> alda", function() {deepEqual( Stem("aldair"), "alda");});
test("aldebaran -> aldebaran", function() {deepEqual( Stem("aldebaran"), "aldebaran");});
test("aldilà -> aldil", function() {deepEqual( Stem("aldilà"), "aldil");});
test("aldo -> aldo", function() {deepEqual( Stem("aldo"), "aldo");});
test("aldy -> aldy", function() {deepEqual( Stem("aldy"), "aldy");});
test("ale -> ale", function() {deepEqual( Stem("ale"), "ale");});
test("aleksadr -> aleksadr", function() {deepEqual( Stem("aleksadr"), "aleksadr");});
test("aleksander -> aleksander", function() {deepEqual( Stem("aleksander"), "aleksander");});
test("aleksandra -> aleksandr", function() {deepEqual( Stem("aleksandra"), "aleksandr");});
test("alema -> alem", function() {deepEqual( Stem("alema"), "alem");});
test("alemanna -> alemann", function() {deepEqual( Stem("alemanna"), "alemann");});
test("alemanne -> alemann", function() {deepEqual( Stem("alemanne"), "alemann");});
test("alemanni -> alemann", function() {deepEqual( Stem("alemanni"), "alemann");});
test("alemanno -> alemann", function() {deepEqual( Stem("alemanno"), "alemann");});
test("alessandra -> alessandr", function() {deepEqual( Stem("alessandra"), "alessandr");});
test("alessandria -> alessandr", function() {deepEqual( Stem("alessandria"), "alessandr");});
test("alessandrini -> alessandrin", function() {deepEqual( Stem("alessandrini"), "alessandrin");});
test("alessandro -> alessandr", function() {deepEqual( Stem("alessandro"), "alessandr");});
test("alessio -> aless", function() {deepEqual( Stem("alessio"), "aless");});
test("alexander -> alexander", function() {deepEqual( Stem("alexander"), "alexander");});
test("alexandra -> alexandr", function() {deepEqual( Stem("alexandra"), "alexandr");});
test("alexeyev -> alexeyev", function() {deepEqual( Stem("alexeyev"), "alexeyev");});
test("alfa -> alfa", function() {deepEqual( Stem("alfa"), "alfa");});
test("alfabeto -> alfabet", function() {deepEqual( Stem("alfabeto"), "alfabet");});
test("alfiere -> alfi", function() {deepEqual( Stem("alfiere"), "alfi");});
test("alfieri -> alfier", function() {deepEqual( Stem("alfieri"), "alfier");});
test("alfiero -> alfier", function() {deepEqual( Stem("alfiero"), "alfier");});
test("alfine -> alfin", function() {deepEqual( Stem("alfine"), "alfin");});
test("alfonsi -> alfons", function() {deepEqual( Stem("alfonsi"), "alfons");});
test("alfonso -> alfons", function() {deepEqual( Stem("alfonso"), "alfons");});
test("alfonzo -> alfonz", function() {deepEqual( Stem("alfonzo"), "alfonz");});
test("alfredo -> alfred", function() {deepEqual( Stem("alfredo"), "alfred");});
test("alga -> alga", function() {deepEqual( Stem("alga"), "alga");});
test("algeri -> alger", function() {deepEqual( Stem("algeri"), "alger");});
test("algeria -> alger", function() {deepEqual( Stem("algeria"), "alger");});
test("algerina -> algerin", function() {deepEqual( Stem("algerina"), "algerin");});
test("algerine -> algerin", function() {deepEqual( Stem("algerine"), "algerin");});
test("algerini -> algerin", function() {deepEqual( Stem("algerini"), "algerin");});
test("algerino -> algerin", function() {deepEqual( Stem("algerino"), "algerin");});
test("algerstedt -> algerstedt", function() {deepEqual( Stem("algerstedt"), "algerstedt");});
test("alghe -> alghe", function() {deepEqual( Stem("alghe"), "alghe");});
test("alghero -> algher", function() {deepEqual( Stem("alghero"), "algher");});
test("algunos -> algunos", function() {deepEqual( Stem("algunos"), "algunos");});
test("ali -> ali", function() {deepEqual( Stem("ali"), "ali");});
test("alias -> alias", function() {deepEqual( Stem("alias"), "alias");});
test("alienare -> alien", function() {deepEqual( Stem("alienare"), "alien");});
test("alienazione -> alien", function() {deepEqual( Stem("alienazione"), "alien");});
test("alieni -> alien", function() {deepEqual( Stem("alieni"), "alien");});
test("alieno -> alien", function() {deepEqual( Stem("alieno"), "alien");});
test("alienò -> alien", function() {deepEqual( Stem("alienò"), "alien");});
test("aliis -> aliis", function() {deepEqual( Stem("aliis"), "aliis");});
test("alimentano -> aliment", function() {deepEqual( Stem("alimentano"), "aliment");});
test("alimentare -> aliment", function() {deepEqual( Stem("alimentare"), "aliment");});
test("alimentari -> alimentar", function() {deepEqual( Stem("alimentari"), "alimentar");});
test("alimentata -> aliment", function() {deepEqual( Stem("alimentata"), "aliment");});
test("alimentato -> aliment", function() {deepEqual( Stem("alimentato"), "aliment");});
test("alimentazione -> aliment", function() {deepEqual( Stem("alimentazione"), "aliment");});
test("alimenti -> aliment", function() {deepEqual( Stem("alimenti"), "aliment");});
test("alimento -> aliment", function() {deepEqual( Stem("alimento"), "aliment");});
test("aliquota -> aliquot", function() {deepEqual( Stem("aliquota"), "aliquot");});
test("aliquote -> aliquot", function() {deepEqual( Stem("aliquote"), "aliquot");});
test("alitalia -> alital", function() {deepEqual( Stem("alitalia"), "alital");});
test("aliti -> alit", function() {deepEqual( Stem("aliti"), "alit");});
test("alito -> alit", function() {deepEqual( Stem("alito"), "alit");});
test("alive -> aliv", function() {deepEqual( Stem("alive"), "aliv");});
test("alkan -> alkan", function() {deepEqual( Stem("alkan"), "alkan");});
test("alkhan -> alkhan", function() {deepEqual( Stem("alkhan"), "alkhan");});
test("all -> all", function() {deepEqual( Stem("all"), "all");});
test("alla -> alla", function() {deepEqual( Stem("alla"), "alla");});
test("allacciamenti -> allacc", function() {deepEqual( Stem("allacciamenti"), "allacc");});
test("allacciate -> allacc", function() {deepEqual( Stem("allacciate"), "allacc");});
test("allacciò -> allacc", function() {deepEqual( Stem("allacciò"), "allacc");});
test("allagava -> allag", function() {deepEqual( Stem("allagava"), "allag");});
test("allan -> allan", function() {deepEqual( Stem("allan"), "allan");});
test("allargamento -> allarg", function() {deepEqual( Stem("allargamento"), "allarg");});
test("allargando -> allarg", function() {deepEqual( Stem("allargando"), "allarg");});
test("allargar -> allarg", function() {deepEqual( Stem("allargar"), "allarg");});
test("allargare -> allarg", function() {deepEqual( Stem("allargare"), "allarg");});
test("allargarne -> allarg", function() {deepEqual( Stem("allargarne"), "allarg");});
test("allargate -> allarg", function() {deepEqual( Stem("allargate"), "allarg");});
test("allargati -> allarg", function() {deepEqual( Stem("allargati"), "allarg");});
test("allargato -> allarg", function() {deepEqual( Stem("allargato"), "allarg");});
test("allargava -> allarg", function() {deepEqual( Stem("allargava"), "allarg");});
test("allarmante -> allarm", function() {deepEqual( Stem("allarmante"), "allarm");});
test("allarmata -> allarm", function() {deepEqual( Stem("allarmata"), "allarm");});
test("allarmati -> allarm", function() {deepEqual( Stem("allarmati"), "allarm");});
test("allarme -> allarm", function() {deepEqual( Stem("allarme"), "allarm");});
test("allattarne -> allatt", function() {deepEqual( Stem("allattarne"), "allatt");});
test("alle -> alle", function() {deepEqual( Stem("alle"), "alle");});
test("alleanza -> alleanz", function() {deepEqual( Stem("alleanza"), "alleanz");});
test("alleanze -> alleanz", function() {deepEqual( Stem("alleanze"), "alleanz");});
test("alleare -> alle", function() {deepEqual( Stem("alleare"), "alle");});
test("allearmi -> alle", function() {deepEqual( Stem("allearmi"), "alle");});
test("allearono -> alle", function() {deepEqual( Stem("allearono"), "alle");});
test("allearsi -> alle", function() {deepEqual( Stem("allearsi"), "alle");});
test("alleati -> alle", function() {deepEqual( Stem("alleati"), "alle");});
test("alleato -> alle", function() {deepEqual( Stem("alleato"), "alle");});
test("allegava -> alleg", function() {deepEqual( Stem("allegava"), "alleg");});
test("allegazioni -> alleg", function() {deepEqual( Stem("allegazioni"), "alleg");});
test("alleggerimento -> allegger", function() {deepEqual( Stem("alleggerimento"), "allegger");});
test("alleggerire -> allegger", function() {deepEqual( Stem("alleggerire"), "allegger");});
test("alleggiamento -> allegg", function() {deepEqual( Stem("alleggiamento"), "allegg");});
test("alleghe -> alleg", function() {deepEqual( Stem("alleghe"), "alleg");});
test("allegò -> alleg", function() {deepEqual( Stem("allegò"), "alleg");});
test("allegra -> allegr", function() {deepEqual( Stem("allegra"), "allegr");});
test("allegramente -> allegr", function() {deepEqual( Stem("allegramente"), "allegr");});
test("allegre -> allegr", function() {deepEqual( Stem("allegre"), "allegr");});
test("allegrezza -> allegrezz", function() {deepEqual( Stem("allegrezza"), "allegrezz");});
test("allegrezze -> allegrezz", function() {deepEqual( Stem("allegrezze"), "allegrezz");});
test("allegri -> allegr", function() {deepEqual( Stem("allegri"), "allegr");});
test("allegria -> allegr", function() {deepEqual( Stem("allegria"), "allegr");});
test("allegro -> allegr", function() {deepEqual( Stem("allegro"), "allegr");});
test("allenamenti -> allen", function() {deepEqual( Stem("allenamenti"), "allen");});
test("allenamento -> allen", function() {deepEqual( Stem("allenamento"), "allen");});
test("allenarmi -> allen", function() {deepEqual( Stem("allenarmi"), "allen");});
test("allenate -> allen", function() {deepEqual( Stem("allenate"), "allen");});
test("allenato -> allen", function() {deepEqual( Stem("allenato"), "allen");});
test("allenatore -> allen", function() {deepEqual( Stem("allenatore"), "allen");});
test("allenatori -> allen", function() {deepEqual( Stem("allenatori"), "allen");});
test("allende -> allend", function() {deepEqual( Stem("allende"), "allend");});
test("allenta -> allent", function() {deepEqual( Stem("allenta"), "allent");});
test("allentare -> allent", function() {deepEqual( Stem("allentare"), "allent");});
test("allentata -> allent", function() {deepEqual( Stem("allentata"), "allent");});
test("allentate -> allent", function() {deepEqual( Stem("allentate"), "allent");});
test("allentato -> allent", function() {deepEqual( Stem("allentato"), "allent");});
test("allentò -> allent", function() {deepEqual( Stem("allentò"), "allent");});
test("allerta -> allert", function() {deepEqual( Stem("allerta"), "allert");});
test("allestendo -> allest", function() {deepEqual( Stem("allestendo"), "allest");});
test("allestimento -> allest", function() {deepEqual( Stem("allestimento"), "allest");});
test("allestir -> allest", function() {deepEqual( Stem("allestir"), "allest");});
test("allestire -> allest", function() {deepEqual( Stem("allestire"), "allest");});
test("allestita -> allest", function() {deepEqual( Stem("allestita"), "allest");});
test("allestite -> allest", function() {deepEqual( Stem("allestite"), "allest");});
test("allestito -> allest", function() {deepEqual( Stem("allestito"), "allest");});
test("allettamenti -> allett", function() {deepEqual( Stem("allettamenti"), "allett");});
test("allettarla -> allett", function() {deepEqual( Stem("allettarla"), "allett");});
test("allettato -> allett", function() {deepEqual( Stem("allettato"), "allett");});
test("allevamento -> allev", function() {deepEqual( Stem("allevamento"), "allev");});
test("allevarli -> allev", function() {deepEqual( Stem("allevarli"), "allev");});
test("allevata -> allev", function() {deepEqual( Stem("allevata"), "allev");});
test("allevato -> allev", function() {deepEqual( Stem("allevato"), "allev");});
test("alleviare -> allev", function() {deepEqual( Stem("alleviare"), "allev");});
test("alli -> alli", function() {deepEqual( Stem("alli"), "alli");});
test("allieva -> alli", function() {deepEqual( Stem("allieva"), "alli");});
test("allieve -> alliev", function() {deepEqual( Stem("allieve"), "alliev");});
test("allievi -> alli", function() {deepEqual( Stem("allievi"), "alli");});
test("allievo -> alli", function() {deepEqual( Stem("allievo"), "alli");});
test("allison -> allison", function() {deepEqual( Stem("allison"), "allison");});
test("allla -> allla", function() {deepEqual( Stem("allla"), "allla");});
test("allo -> allo", function() {deepEqual( Stem("allo"), "allo");});
test("allocuzione -> allocu", function() {deepEqual( Stem("allocuzione"), "allocu");});
test("allogata -> allog", function() {deepEqual( Stem("allogata"), "allog");});
test("allogate -> allog", function() {deepEqual( Stem("allogate"), "allog");});
test("alloggi -> allogg", function() {deepEqual( Stem("alloggi"), "allogg");});
test("alloggiamenti -> allogg", function() {deepEqual( Stem("alloggiamenti"), "allogg");});
test("alloggiar -> allogg", function() {deepEqual( Stem("alloggiar"), "allogg");});
test("alloggiare -> allogg", function() {deepEqual( Stem("alloggiare"), "allogg");});
test("alloggiata -> allogg", function() {deepEqual( Stem("alloggiata"), "allogg");});
test("alloggiate -> allogg", function() {deepEqual( Stem("alloggiate"), "allogg");});
test("alloggiati -> allogg", function() {deepEqual( Stem("alloggiati"), "allogg");});
test("alloggiato -> allogg", function() {deepEqual( Stem("alloggiato"), "allogg");});
test("alloggiava -> allogg", function() {deepEqual( Stem("alloggiava"), "allogg");});
test("alloggiavano -> allogg", function() {deepEqual( Stem("alloggiavano"), "allogg");});
test("alloggio -> allogg", function() {deepEqual( Stem("alloggio"), "allogg");});
test("allontana -> allontan", function() {deepEqual( Stem("allontana"), "allontan");});
test("allontanando -> allontan", function() {deepEqual( Stem("allontanando"), "allontan");});
test("allontanandoli -> allontan", function() {deepEqual( Stem("allontanandoli"), "allontan");});
test("allontanandosi -> allontan", function() {deepEqual( Stem("allontanandosi"), "allontan");});
test("allontanar -> allontan", function() {deepEqual( Stem("allontanar"), "allontan");});
test("allontanare -> allontan", function() {deepEqual( Stem("allontanare"), "allontan");});
test("allontanarlo -> allontan", function() {deepEqual( Stem("allontanarlo"), "allontan");});
test("allontanarne -> allontan", function() {deepEqual( Stem("allontanarne"), "allontan");});
test("allontanarono -> allontan", function() {deepEqual( Stem("allontanarono"), "allontan");});
test("allontanarsi -> allontan", function() {deepEqual( Stem("allontanarsi"), "allontan");});
test("allontanasse -> allontan", function() {deepEqual( Stem("allontanasse"), "allontan");});
test("allontanata -> allontan", function() {deepEqual( Stem("allontanata"), "allontan");});
test("allontanati -> allontan", function() {deepEqual( Stem("allontanati"), "allontan");});
test("allontanato -> allontan", function() {deepEqual( Stem("allontanato"), "allontan");});
test("allontanava -> allontan", function() {deepEqual( Stem("allontanava"), "allontan");});
test("allontanavano -> allontan", function() {deepEqual( Stem("allontanavano"), "allontan");});
test("allontani -> allontan", function() {deepEqual( Stem("allontani"), "allontan");});
test("allontanò -> allontan", function() {deepEqual( Stem("allontanò"), "allontan");});
test("allor -> allor", function() {deepEqual( Stem("allor"), "allor");});
test("allora -> allor", function() {deepEqual( Stem("allora"), "allor");});
test("allorché -> allorc", function() {deepEqual( Stem("allorché"), "allorc");});
test("allori -> allor", function() {deepEqual( Stem("allori"), "allor");});
test("allucinante -> allucin", function() {deepEqual( Stem("allucinante"), "allucin");});
test("allucinanti -> allucin", function() {deepEqual( Stem("allucinanti"), "allucin");});
test("alluminio -> allumin", function() {deepEqual( Stem("alluminio"), "allumin");});
test("allunga -> allung", function() {deepEqual( Stem("allunga"), "allung");});
test("allungando -> allung", function() {deepEqual( Stem("allungando"), "allung");});
test("allungar -> allung", function() {deepEqual( Stem("allungar"), "allung");});
test("allungare -> allung", function() {deepEqual( Stem("allungare"), "allung");});
test("allungate -> allung", function() {deepEqual( Stem("allungate"), "allung");});
test("allungato -> allung", function() {deepEqual( Stem("allungato"), "allung");});
test("allungava -> allung", function() {deepEqual( Stem("allungava"), "allung");});
test("allungò -> allung", function() {deepEqual( Stem("allungò"), "allung");});
test("allusione -> allusion", function() {deepEqual( Stem("allusione"), "allusion");});
test("allusiva -> allus", function() {deepEqual( Stem("allusiva"), "allus");});
test("alluvionate -> alluvion", function() {deepEqual( Stem("alluvionate"), "alluvion");});
test("alluvionati -> alluvion", function() {deepEqual( Stem("alluvionati"), "alluvion");});
test("alma -> alma", function() {deepEqual( Stem("alma"), "alma");});
test("almanaccar -> almanacc", function() {deepEqual( Stem("almanaccar"), "almanacc");});
test("almanaccare -> almanacc", function() {deepEqual( Stem("almanaccare"), "almanacc");});
test("almanacchi -> almanacc", function() {deepEqual( Stem("almanacchi"), "almanacc");});
test("almaral -> almaral", function() {deepEqual( Stem("almaral"), "almaral");});
test("almen -> almen", function() {deepEqual( Stem("almen"), "almen");});
test("almeno -> almen", function() {deepEqual( Stem("almeno"), "almen");});
test("alo -> alo", function() {deepEqual( Stem("alo"), "alo");});
test("aloisi -> alois", function() {deepEqual( Stem("aloisi"), "alois");});
test("alone -> alon", function() {deepEqual( Stem("alone"), "alon");});
test("alpestre -> alpestr", function() {deepEqual( Stem("alpestre"), "alpestr");});
test("alpi -> alpi", function() {deepEqual( Stem("alpi"), "alpi");});
test("alpigiano -> alpig", function() {deepEqual( Stem("alpigiano"), "alpig");});
test("alpine -> alpin", function() {deepEqual( Stem("alpine"), "alpin");});
test("alpinimo -> alpinim", function() {deepEqual( Stem("alpinimo"), "alpinim");});
test("alpino -> alpin", function() {deepEqual( Stem("alpino"), "alpin");});
test("alquanti -> alquant", function() {deepEqual( Stem("alquanti"), "alquant");});
test("alquanto -> alquant", function() {deepEqual( Stem("alquanto"), "alquant");});
test("alsthom -> alsthom", function() {deepEqual( Stem("alsthom"), "alsthom");});
test("alt -> alt", function() {deepEqual( Stem("alt"), "alt");});
test("alta -> alta", function() {deepEqual( Stem("alta"), "alta");});
test("altafini -> altafin", function() {deepEqual( Stem("altafini"), "altafin");});
test("altalenante -> altalen", function() {deepEqual( Stem("altalenante"), "altalen");});
test("altamente -> alt", function() {deepEqual( Stem("altamente"), "alt");});
test("altamirano -> altamir", function() {deepEqual( Stem("altamirano"), "altamir");});
test("altar -> altar", function() {deepEqual( Stem("altar"), "altar");});
test("altare -> altar", function() {deepEqual( Stem("altare"), "altar");});
test("alte -> alte", function() {deepEqual( Stem("alte"), "alte");});
test("alter -> alter", function() {deepEqual( Stem("alter"), "alter");});
test("altera -> alter", function() {deepEqual( Stem("altera"), "alter");});
test("alterando -> alter", function() {deepEqual( Stem("alterando"), "alter");});
test("alterarsi -> alter", function() {deepEqual( Stem("alterarsi"), "alter");});
test("alterata -> alter", function() {deepEqual( Stem("alterata"), "alter");});
test("alterate -> alter", function() {deepEqual( Stem("alterate"), "alter");});
test("alterati -> alter", function() {deepEqual( Stem("alterati"), "alter");});
test("alterato -> alter", function() {deepEqual( Stem("alterato"), "alter");});
test("alteravan -> alteravan", function() {deepEqual( Stem("alteravan"), "alteravan");});
test("alterazione -> alter", function() {deepEqual( Stem("alterazione"), "alter");});
test("alterigia -> alterig", function() {deepEqual( Stem("alterigia"), "alterig");});
test("alternando -> altern", function() {deepEqual( Stem("alternando"), "altern");});
test("alternanza -> altern", function() {deepEqual( Stem("alternanza"), "altern");});
test("alternate -> altern", function() {deepEqual( Stem("alternate"), "altern");});
test("alternati -> altern", function() {deepEqual( Stem("alternati"), "altern");});
test("alternativa -> altern", function() {deepEqual( Stem("alternativa"), "altern");});
test("alternativamente -> altern", function() {deepEqual( Stem("alternativamente"), "altern");});
test("alternative -> altern", function() {deepEqual( Stem("alternative"), "altern");});
test("alternativi -> altern", function() {deepEqual( Stem("alternativi"), "altern");});
test("alternativo -> altern", function() {deepEqual( Stem("alternativo"), "altern");});
test("altero -> alter", function() {deepEqual( Stem("altero"), "alter");});
test("altezza -> altezz", function() {deepEqual( Stem("altezza"), "altezz");});
test("alti -> alti", function() {deepEqual( Stem("alti"), "alti");});
test("altissimi -> altissim", function() {deepEqual( Stem("altissimi"), "altissim");});
test("altissimo -> altissim", function() {deepEqual( Stem("altissimo"), "altissim");});
test("alto -> alto", function() {deepEqual( Stem("alto"), "alto");});
test("altoatesina -> altoatesin", function() {deepEqual( Stem("altoatesina"), "altoatesin");});
test("altoatesine -> altoatesin", function() {deepEqual( Stem("altoatesine"), "altoatesin");});
test("altoatesini -> altoatesin", function() {deepEqual( Stem("altoatesini"), "altoatesin");});
test("altoatesino -> altoatesin", function() {deepEqual( Stem("altoatesino"), "altoatesin");});
test("altoparlanti -> altoparl", function() {deepEqual( Stem("altoparlanti"), "altoparl");});
test("altopiano -> altop", function() {deepEqual( Stem("altopiano"), "altop");});
test("altos -> altos", function() {deepEqual( Stem("altos"), "altos");});
test("altr -> altr", function() {deepEqual( Stem("altr"), "altr");});
test("altra -> altra", function() {deepEqual( Stem("altra"), "altra");});
test("altre -> altre", function() {deepEqual( Stem("altre"), "altre");});
test("altresì -> altres", function() {deepEqual( Stem("altresì"), "altres");});
test("altrettali -> altrettal", function() {deepEqual( Stem("altrettali"), "altrettal");});
test("altrettanta -> altrettant", function() {deepEqual( Stem("altrettanta"), "altrettant");});
test("altrettante -> altrett", function() {deepEqual( Stem("altrettante"), "altrett");});
test("altrettanti -> altrett", function() {deepEqual( Stem("altrettanti"), "altrett");});
test("altrettanto -> altrettant", function() {deepEqual( Stem("altrettanto"), "altrettant");});
test("altri -> altri", function() {deepEqual( Stem("altri"), "altri");});
test("altrì -> altrì", function() {deepEqual( Stem("altrì"), "altrì");});
test("altrimenti -> altriment", function() {deepEqual( Stem("altrimenti"), "altriment");});
test("altringer -> altringer", function() {deepEqual( Stem("altringer"), "altringer");});
test("altro -> altro", function() {deepEqual( Stem("altro"), "altro");});
test("altrò -> altrò", function() {deepEqual( Stem("altrò"), "altrò");});
test("altroieri -> altroier", function() {deepEqual( Stem("altroieri"), "altroier");});
test("altrove -> altrov", function() {deepEqual( Stem("altrove"), "altrov");});
test("altrui -> altru", function() {deepEqual( Stem("altrui"), "altru");});
test("alture -> altur", function() {deepEqual( Stem("alture"), "altur");});
test("alumix -> alumix", function() {deepEqual( Stem("alumix"), "alumix");});
test("alunne -> alunn", function() {deepEqual( Stem("alunne"), "alunn");});
test("alunni -> alunn", function() {deepEqual( Stem("alunni"), "alunn");});
test("alveare -> alve", function() {deepEqual( Stem("alveare"), "alve");});
test("alvin -> alvin", function() {deepEqual( Stem("alvin"), "alvin");});
test("alza -> alza", function() {deepEqual( Stem("alza"), "alza");});
test("alzan -> alzan", function() {deepEqual( Stem("alzan"), "alzan");});
test("alzando -> alzand", function() {deepEqual( Stem("alzando"), "alzand");});
test("alzandogli -> alzandogl", function() {deepEqual( Stem("alzandogli"), "alzandogl");});
test("alzandosi -> alzand", function() {deepEqual( Stem("alzandosi"), "alzand");});
test("alzano -> alzan", function() {deepEqual( Stem("alzano"), "alzan");});
test("alzar -> alzar", function() {deepEqual( Stem("alzar"), "alzar");});
test("alzare -> alzar", function() {deepEqual( Stem("alzare"), "alzar");});
test("alzargli -> alzargl", function() {deepEqual( Stem("alzargli"), "alzargl");});
test("alzarla -> alzarl", function() {deepEqual( Stem("alzarla"), "alzarl");});
test("alzarsi -> alzars", function() {deepEqual( Stem("alzarsi"), "alzars");});
test("alzasse -> alzass", function() {deepEqual( Stem("alzasse"), "alzass");});
test("alzata -> alzat", function() {deepEqual( Stem("alzata"), "alzat");});
test("alzate -> alzat", function() {deepEqual( Stem("alzate"), "alzat");});
test("alzatevi -> alzat", function() {deepEqual( Stem("alzatevi"), "alzat");});
test("alzati -> alzat", function() {deepEqual( Stem("alzati"), "alzat");});
test("alzato -> alzat", function() {deepEqual( Stem("alzato"), "alzat");});
test("alzatosi -> alzat", function() {deepEqual( Stem("alzatosi"), "alzat");});
test("alzava -> alzav", function() {deepEqual( Stem("alzava"), "alzav");});
test("alzavano -> alzav", function() {deepEqual( Stem("alzavano"), "alzav");});
test("alzi -> alzi", function() {deepEqual( Stem("alzi"), "alzi");});
test("alzo -> alzo", function() {deepEqual( Stem("alzo"), "alzo");});
test("alzò -> alzò", function() {deepEqual( Stem("alzò"), "alzò");});
test("am -> am", function() {deepEqual( Stem("am"), "am");});
test("ama -> ama", function() {deepEqual( Stem("ama"), "ama");});
test("amabile -> amabil", function() {deepEqual( Stem("amabile"), "amabil");});
test("amabili -> amabil", function() {deepEqual( Stem("amabili"), "amabil");});
test("amano -> aman", function() {deepEqual( Stem("amano"), "aman");});
test("amante -> amant", function() {deepEqual( Stem("amante"), "amant");});
test("amanti -> amant", function() {deepEqual( Stem("amanti"), "amant");});
test("amar -> amar", function() {deepEqual( Stem("amar"), "amar");});
test("amara -> amar", function() {deepEqual( Stem("amara"), "amar");});
test("amaramente -> amar", function() {deepEqual( Stem("amaramente"), "amar");});
test("amaranti -> amar", function() {deepEqual( Stem("amaranti"), "amar");});
test("amare -> amar", function() {deepEqual( Stem("amare"), "amar");});
test("amareggiata -> amaregg", function() {deepEqual( Stem("amareggiata"), "amaregg");});
test("amareggiati -> amaregg", function() {deepEqual( Stem("amareggiati"), "amaregg");});
test("amareggiato -> amaregg", function() {deepEqual( Stem("amareggiato"), "amaregg");});
test("amarezza -> amarezz", function() {deepEqual( Stem("amarezza"), "amarezz");});
test("amari -> amar", function() {deepEqual( Stem("amari"), "amar");});
test("amaritudine -> amaritudin", function() {deepEqual( Stem("amaritudine"), "amaritudin");});
test("amarli -> amarl", function() {deepEqual( Stem("amarli"), "amarl");});
test("amaro -> amar", function() {deepEqual( Stem("amaro"), "amar");});
test("amarò -> amar", function() {deepEqual( Stem("amarò"), "amar");});
test("amaru -> amaru", function() {deepEqual( Stem("amaru"), "amaru");});
test("amata -> amat", function() {deepEqual( Stem("amata"), "amat");});
test("amateli -> amatel", function() {deepEqual( Stem("amateli"), "amatel");});
test("amatevi -> amat", function() {deepEqual( Stem("amatevi"), "amat");});
test("amati -> amat", function() {deepEqual( Stem("amati"), "amat");});
test("amato -> amat", function() {deepEqual( Stem("amato"), "amat");});
test("amatore -> amator", function() {deepEqual( Stem("amatore"), "amator");});
test("amatori -> amator", function() {deepEqual( Stem("amatori"), "amator");});
test("amatorio -> amator", function() {deepEqual( Stem("amatorio"), "amator");});
test("amava -> amav", function() {deepEqual( Stem("amava"), "amav");});
test("amavano -> amav", function() {deepEqual( Stem("amavano"), "amav");});
test("amavate -> amav", function() {deepEqual( Stem("amavate"), "amav");});
test("amazzonia -> amazzon", function() {deepEqual( Stem("amazzonia"), "amazzon");});
test("amazzonica -> amazzon", function() {deepEqual( Stem("amazzonica"), "amazzon");});
test("ambasce -> ambasc", function() {deepEqual( Stem("ambasce"), "ambasc");});
test("ambasciata -> ambasc", function() {deepEqual( Stem("ambasciata"), "ambasc");});
test("ambasciator -> ambasciator", function() {deepEqual( Stem("ambasciator"), "ambasciator");});
test("ambasciatore -> ambasc", function() {deepEqual( Stem("ambasciatore"), "ambasc");});
test("ambasciatrice -> ambasc", function() {deepEqual( Stem("ambasciatrice"), "ambasc");});
test("ambedue -> ambedu", function() {deepEqual( Stem("ambedue"), "ambedu");});
test("ambientale -> ambiental", function() {deepEqual( Stem("ambientale"), "ambiental");});
test("ambientali -> ambiental", function() {deepEqual( Stem("ambientali"), "ambiental");});
test("ambientalista -> ambiental", function() {deepEqual( Stem("ambientalista"), "ambiental");});
test("ambientata -> ambient", function() {deepEqual( Stem("ambientata"), "ambient");});
test("ambientato -> ambient", function() {deepEqual( Stem("ambientato"), "ambient");});
test("ambientazioni -> ambient", function() {deepEqual( Stem("ambientazioni"), "ambient");});
test("ambiente -> ambient", function() {deepEqual( Stem("ambiente"), "ambient");});
test("ambienti -> ambient", function() {deepEqual( Stem("ambienti"), "ambient");});
test("ambiete -> ambi", function() {deepEqual( Stem("ambiete"), "ambi");});
test("ambiguo -> ambigu", function() {deepEqual( Stem("ambiguo"), "ambigu");});
test("ambita -> ambit", function() {deepEqual( Stem("ambita"), "ambit");});
test("ambito -> ambit", function() {deepEqual( Stem("ambito"), "ambit");});
test("ambizione -> ambizion", function() {deepEqual( Stem("ambizione"), "ambizion");});
test("ambizioni -> ambizion", function() {deepEqual( Stem("ambizioni"), "ambizion");});
test("ambiziosa -> ambiz", function() {deepEqual( Stem("ambiziosa"), "ambiz");});
test("ambiziose -> ambiz", function() {deepEqual( Stem("ambiziose"), "ambiz");});
test("ambro -> ambro", function() {deepEqual( Stem("ambro"), "ambro");});
test("ambrogio -> ambrog", function() {deepEqual( Stem("ambrogio"), "ambrog");});
test("ambros -> ambros", function() {deepEqual( Stem("ambros"), "ambros");});
test("ambrosetti -> ambrosett", function() {deepEqual( Stem("ambrosetti"), "ambrosett");});
test("ambrosia -> ambros", function() {deepEqual( Stem("ambrosia"), "ambros");});
test("ambrosiana -> ambrosian", function() {deepEqual( Stem("ambrosiana"), "ambrosian");});
test("ambrosio -> ambros", function() {deepEqual( Stem("ambrosio"), "ambros");});
test("ambroveneto -> ambrovenet", function() {deepEqual( Stem("ambroveneto"), "ambrovenet");});
test("ambulanti -> ambul", function() {deepEqual( Stem("ambulanti"), "ambul");});
test("ambulanze -> ambul", function() {deepEqual( Stem("ambulanze"), "ambul");});
test("ambulatori -> ambul", function() {deepEqual( Stem("ambulatori"), "ambul");});
test("amedeo -> amede", function() {deepEqual( Stem("amedeo"), "amede");});
test("amendola -> amendol", function() {deepEqual( Stem("amendola"), "amendol");});
test("amene -> amen", function() {deepEqual( Stem("amene"), "amen");});
test("amenità -> amen", function() {deepEqual( Stem("amenità"), "amen");});
test("ameno -> amen", function() {deepEqual( Stem("ameno"), "amen");});
test("amer -> amer", function() {deepEqual( Stem("amer"), "amer");});
test("america -> amer", function() {deepEqual( Stem("america"), "amer");});
test("american -> american", function() {deepEqual( Stem("american"), "american");});
test("americana -> american", function() {deepEqual( Stem("americana"), "american");});
test("americanbond -> americanbond", function() {deepEqual( Stem("americanbond"), "americanbond");});
test("americane -> american", function() {deepEqual( Stem("americane"), "american");});
test("americani -> american", function() {deepEqual( Stem("americani"), "american");});
test("americano -> americ", function() {deepEqual( Stem("americano"), "americ");});
test("americas -> americas", function() {deepEqual( Stem("americas"), "americas");});
test("amerigo -> amerig", function() {deepEqual( Stem("amerigo"), "amerig");});
test("amerini -> amerin", function() {deepEqual( Stem("amerini"), "amerin");});
test("ametrano -> ametr", function() {deepEqual( Stem("ametrano"), "ametr");});
test("ami -> ami", function() {deepEqual( Stem("ami"), "ami");});
test("amianto -> amiant", function() {deepEqual( Stem("amianto"), "amiant");});
test("amica -> amic", function() {deepEqual( Stem("amica"), "amic");});
test("amiche -> amic", function() {deepEqual( Stem("amiche"), "amic");});
test("amichevole -> amichevol", function() {deepEqual( Stem("amichevole"), "amichevol");});
test("amici -> amic", function() {deepEqual( Stem("amici"), "amic");});
test("amicizia -> amiciz", function() {deepEqual( Stem("amicizia"), "amiciz");});
test("amicizie -> amiciz", function() {deepEqual( Stem("amicizie"), "amiciz");});
test("amico -> amic", function() {deepEqual( Stem("amico"), "amic");});
test("amiram -> amiram", function() {deepEqual( Stem("amiram"), "amiram");});
test("amm -> amm", function() {deepEqual( Stem("amm"), "amm");});
test("ammaccar -> ammacc", function() {deepEqual( Stem("ammaccar"), "ammacc");});
test("ammaccate -> ammacc", function() {deepEqual( Stem("ammaccate"), "ammacc");});
test("ammaccati -> ammacc", function() {deepEqual( Stem("ammaccati"), "ammacc");});
test("ammaccato -> ammacc", function() {deepEqual( Stem("ammaccato"), "ammacc");});
test("ammaestramento -> ammaestr", function() {deepEqual( Stem("ammaestramento"), "ammaestr");});
test("ammaestrata -> ammaestr", function() {deepEqual( Stem("ammaestrata"), "ammaestr");});
test("ammaestrato -> ammaestr", function() {deepEqual( Stem("ammaestrato"), "ammaestr");});
test("ammainato -> ammain", function() {deepEqual( Stem("ammainato"), "ammain");});
test("ammalare -> ammal", function() {deepEqual( Stem("ammalare"), "ammal");});
test("ammalarono -> ammal", function() {deepEqual( Stem("ammalarono"), "ammal");});
test("ammalarsi -> ammal", function() {deepEqual( Stem("ammalarsi"), "ammal");});
test("ammalata -> ammal", function() {deepEqual( Stem("ammalata"), "ammal");});
test("ammalate -> ammal", function() {deepEqual( Stem("ammalate"), "ammal");});
test("ammalati -> ammal", function() {deepEqual( Stem("ammalati"), "ammal");});
test("ammalato -> ammal", function() {deepEqual( Stem("ammalato"), "ammal");});
test("ammalavano -> ammal", function() {deepEqual( Stem("ammalavano"), "ammal");});
test("ammalazzati -> ammalazz", function() {deepEqual( Stem("ammalazzati"), "ammalazz");});
test("ammaliziati -> ammaliz", function() {deepEqual( Stem("ammaliziati"), "ammaliz");});
test("ammalò -> ammal", function() {deepEqual( Stem("ammalò"), "ammal");});
test("amman -> amman", function() {deepEqual( Stem("amman"), "amman");});
test("ammansare -> ammans", function() {deepEqual( Stem("ammansare"), "ammans");});
test("ammansato -> ammans", function() {deepEqual( Stem("ammansato"), "ammans");});
test("ammassa -> ammass", function() {deepEqual( Stem("ammassa"), "ammass");});
test("ammasso -> ammass", function() {deepEqual( Stem("ammasso"), "ammass");});
test("ammazza -> ammazz", function() {deepEqual( Stem("ammazza"), "ammazz");});
test("ammazzar -> ammazz", function() {deepEqual( Stem("ammazzar"), "ammazz");});
test("ammazzare -> ammazz", function() {deepEqual( Stem("ammazzare"), "ammazz");});
test("ammazzarvi -> ammazz", function() {deepEqual( Stem("ammazzarvi"), "ammazz");});
test("ammazzassero -> ammazz", function() {deepEqual( Stem("ammazzassero"), "ammazz");});
test("ammazzati -> ammazz", function() {deepEqual( Stem("ammazzati"), "ammazz");});
test("ammazzato -> ammazz", function() {deepEqual( Stem("ammazzato"), "ammazz");});
test("ammazzeranno -> ammazz", function() {deepEqual( Stem("ammazzeranno"), "ammazz");});
test("ammazzerebbe -> ammazz", function() {deepEqual( Stem("ammazzerebbe"), "ammazz");});
test("ammazzi -> ammazz", function() {deepEqual( Stem("ammazzi"), "ammazz");});
test("ammazzo -> ammazz", function() {deepEqual( Stem("ammazzo"), "ammazz");});
test("ammazzò -> ammazz", function() {deepEqual( Stem("ammazzò"), "ammazz");});
test("ammessa -> ammess", function() {deepEqual( Stem("ammessa"), "ammess");});
test("ammesse -> ammess", function() {deepEqual( Stem("ammesse"), "ammess");});
test("ammessi -> ammess", function() {deepEqual( Stem("ammessi"), "ammess");});
test("ammesso -> ammess", function() {deepEqual( Stem("ammesso"), "ammess");});
test("ammette -> ammett", function() {deepEqual( Stem("ammette"), "ammett");});
test("ammettere -> ammett", function() {deepEqual( Stem("ammettere"), "ammett");});
test("amministrarli -> amministr", function() {deepEqual( Stem("amministrarli"), "amministr");});
test("amministrativa -> amministr", function() {deepEqual( Stem("amministrativa"), "amministr");});
test("amministrative -> amministr", function() {deepEqual( Stem("amministrative"), "amministr");});
test("amministrativi -> amministr", function() {deepEqual( Stem("amministrativi"), "amministr");});
test("amministrativo -> amministr", function() {deepEqual( Stem("amministrativo"), "amministr");});
test("amministrato -> amministr", function() {deepEqual( Stem("amministrato"), "amministr");});
test("amministratore -> amministr", function() {deepEqual( Stem("amministratore"), "amministr");});
test("amministratori -> amministr", function() {deepEqual( Stem("amministratori"), "amministr");});
test("amministrazione -> amministr", function() {deepEqual( Stem("amministrazione"), "amministr");});
test("amministrazioni -> amministr", function() {deepEqual( Stem("amministrazioni"), "amministr");});
test("amministriamo -> amministr", function() {deepEqual( Stem("amministriamo"), "amministr");});
test("amministrtiva -> amministrt", function() {deepEqual( Stem("amministrtiva"), "amministrt");});
test("ammira -> ammir", function() {deepEqual( Stem("ammira"), "ammir");});
test("ammirabile -> ammir", function() {deepEqual( Stem("ammirabile"), "ammir");});
test("ammiraglio -> ammiragl", function() {deepEqual( Stem("ammiraglio"), "ammiragl");});
test("ammirare -> ammir", function() {deepEqual( Stem("ammirare"), "ammir");});
test("ammirati -> ammir", function() {deepEqual( Stem("ammirati"), "ammir");});
test("ammirato -> ammir", function() {deepEqual( Stem("ammirato"), "ammir");});
test("ammirava -> ammir", function() {deepEqual( Stem("ammirava"), "ammir");});
test("ammirazione -> ammir", function() {deepEqual( Stem("ammirazione"), "ammir");});
test("ammirevole -> ammirevol", function() {deepEqual( Stem("ammirevole"), "ammirevol");});
test("ammissione -> ammission", function() {deepEqual( Stem("ammissione"), "ammission");});
test("ammodernata -> ammodern", function() {deepEqual( Stem("ammodernata"), "ammodern");});
test("ammonisce -> ammon", function() {deepEqual( Stem("ammonisce"), "ammon");});
test("ammoniscono -> ammon", function() {deepEqual( Stem("ammoniscono"), "ammon");});
test("ammonissero -> ammon", function() {deepEqual( Stem("ammonissero"), "ammon");});
test("ammoniti -> ammon", function() {deepEqual( Stem("ammoniti"), "ammon");});
test("ammonito -> ammon", function() {deepEqual( Stem("ammonito"), "ammon");});
test("ammoniva -> ammon", function() {deepEqual( Stem("ammoniva"), "ammon");});
test("ammonizione -> ammonizion", function() {deepEqual( Stem("ammonizione"), "ammonizion");});
test("ammonizioni -> ammonizion", function() {deepEqual( Stem("ammonizioni"), "ammonizion");});
test("ammontare -> ammont", function() {deepEqual( Stem("ammontare"), "ammont");});
test("ammontari -> ammontar", function() {deepEqual( Stem("ammontari"), "ammontar");});
test("ammontata -> ammont", function() {deepEqual( Stem("ammontata"), "ammont");});
test("ammontate -> ammont", function() {deepEqual( Stem("ammontate"), "ammont");});
test("ammontati -> ammont", function() {deepEqual( Stem("ammontati"), "ammont");});
test("ammontato -> ammont", function() {deepEqual( Stem("ammontato"), "ammont");});
test("ammontavano -> ammont", function() {deepEqual( Stem("ammontavano"), "ammont");});
test("ammonticchiati -> ammonticc", function() {deepEqual( Stem("ammonticchiati"), "ammonticc");});
test("ammorbato -> ammorb", function() {deepEqual( Stem("ammorbato"), "ammorb");});
test("ammorbidire -> ammorbid", function() {deepEqual( Stem("ammorbidire"), "ammorbid");});
test("ammorbidirè -> ammorbidir", function() {deepEqual( Stem("ammorbidirè"), "ammorbidir");});
test("ammortire -> ammort", function() {deepEqual( Stem("ammortire"), "ammort");});
test("ammortito -> ammort", function() {deepEqual( Stem("ammortito"), "ammort");});
test("ammortizzatore -> ammortizz", function() {deepEqual( Stem("ammortizzatore"), "ammortizz");});
test("ammortizzatori -> ammortizz", function() {deepEqual( Stem("ammortizzatori"), "ammortizz");});
test("ammucchiate -> ammucc", function() {deepEqual( Stem("ammucchiate"), "ammucc");});
test("ammutolisce -> ammutol", function() {deepEqual( Stem("ammutolisce"), "ammutol");});
test("ammutolisco -> ammutol", function() {deepEqual( Stem("ammutolisco"), "ammutol");});
test("amnistia -> amnist", function() {deepEqual( Stem("amnistia"), "amnist");});
test("amnon -> amnon", function() {deepEqual( Stem("amnon"), "amnon");});
test("amo -> amo", function() {deepEqual( Stem("amo"), "amo");});
test("amodeo -> amode", function() {deepEqual( Stem("amodeo"), "amode");});
test("amor -> amor", function() {deepEqual( Stem("amor"), "amor");});
test("amore -> amor", function() {deepEqual( Stem("amore"), "amor");});
test("amorevole -> amorevol", function() {deepEqual( Stem("amorevole"), "amorevol");});
test("amorevolezza -> amorevolezz", function() {deepEqual( Stem("amorevolezza"), "amorevolezz");});
test("amorevoli -> amorevol", function() {deepEqual( Stem("amorevoli"), "amorevol");});
test("amorevolmente -> amorevol", function() {deepEqual( Stem("amorevolmente"), "amorevol");});
test("amori -> amor", function() {deepEqual( Stem("amori"), "amor");});
test("amorore -> amoror", function() {deepEqual( Stem("amorore"), "amoror");});
test("amoroso -> amor", function() {deepEqual( Stem("amoroso"), "amor");});
test("amoruso -> amorus", function() {deepEqual( Stem("amoruso"), "amorus");});
test("amos -> amos", function() {deepEqual( Stem("amos"), "amos");});
test("amparo -> ampar", function() {deepEqual( Stem("amparo"), "ampar");});
test("ampezzo -> ampezz", function() {deepEqual( Stem("ampezzo"), "ampezz");});
test("ampi -> ampi", function() {deepEqual( Stem("ampi"), "ampi");});
test("ampia -> ampi", function() {deepEqual( Stem("ampia"), "ampi");});
test("ampiamente -> ampi", function() {deepEqual( Stem("ampiamente"), "ampi");});
test("ampie -> ampi", function() {deepEqual( Stem("ampie"), "ampi");});
test("ampiezza -> ampiezz", function() {deepEqual( Stem("ampiezza"), "ampiezz");});
test("ampio -> ampi", function() {deepEqual( Stem("ampio"), "ampi");});
test("amplia -> ampli", function() {deepEqual( Stem("amplia"), "ampli");});
test("ampliando -> ampli", function() {deepEqual( Stem("ampliando"), "ampli");});
test("ampliare -> ampli", function() {deepEqual( Stem("ampliare"), "ampli");});
test("ampliata -> ampli", function() {deepEqual( Stem("ampliata"), "ampli");});
test("amplificata -> amplific", function() {deepEqual( Stem("amplificata"), "amplific");});
test("amplificato -> amplific", function() {deepEqual( Stem("amplificato"), "amplific");});
test("amplissimi -> amplissim", function() {deepEqual( Stem("amplissimi"), "amplissim");});
test("ampolla -> ampoll", function() {deepEqual( Stem("ampolla"), "ampoll");});
test("ampollosamente -> ampoll", function() {deepEqual( Stem("ampollosamente"), "ampoll");});
test("ampollose -> ampoll", function() {deepEqual( Stem("ampollose"), "ampoll");});
test("amr -> amr", function() {deepEqual( Stem("amr"), "amr");});
test("amsterdam -> amsterdam", function() {deepEqual( Stem("amsterdam"), "amsterdam");});
test("amy -> amy", function() {deepEqual( Stem("amy"), "amy");});
test("an -> an", function() {deepEqual( Stem("an"), "an");});
test("anac -> anac", function() {deepEqual( Stem("anac"), "anac");});
test("anadolu -> anadolu", function() {deepEqual( Stem("anadolu"), "anadolu");});
test("anafilattico -> anafilatt", function() {deepEqual( Stem("anafilattico"), "anafilatt");});
test("anagrafe -> anagraf", function() {deepEqual( Stem("anagrafe"), "anagraf");});
test("analisi -> analis", function() {deepEqual( Stem("analisi"), "analis");});
test("analisti -> anal", function() {deepEqual( Stem("analisti"), "anal");});
test("analitica -> analit", function() {deepEqual( Stem("analitica"), "analit");});
test("analizza -> analizz", function() {deepEqual( Stem("analizza"), "analizz");});
test("analizzando -> analizz", function() {deepEqual( Stem("analizzando"), "analizz");});
test("analoga -> analog", function() {deepEqual( Stem("analoga"), "analog");});
test("analoghe -> analog", function() {deepEqual( Stem("analoghe"), "analog");});
test("analoghi -> analog", function() {deepEqual( Stem("analoghi"), "analog");});
test("analogia -> analog", function() {deepEqual( Stem("analogia"), "analog");});
test("analogie -> analog", function() {deepEqual( Stem("analogie"), "analog");});
test("analogo -> analog", function() {deepEqual( Stem("analogo"), "analog");});
test("anas -> anas", function() {deepEqual( Stem("anas"), "anas");});
test("anastasia -> anastas", function() {deepEqual( Stem("anastasia"), "anastas");});
test("anatema -> anatem", function() {deepEqual( Stem("anatema"), "anatem");});
test("anatemi -> anatem", function() {deepEqual( Stem("anatemi"), "anatem");});
test("anatoli -> anatol", function() {deepEqual( Stem("anatoli"), "anatol");});
test("anatoly -> anatoly", function() {deepEqual( Stem("anatoly"), "anatoly");});
test("anav -> anav", function() {deepEqual( Stem("anav"), "anav");});
test("anca -> anca", function() {deepEqual( Stem("anca"), "anca");});
test("anch -> anch", function() {deepEqual( Stem("anch"), "anch");});
test("anche -> anche", function() {deepEqual( Stem("anche"), "anche");});
test("anco -> anco", function() {deepEqual( Stem("anco"), "anco");});
test("ancona -> ancon", function() {deepEqual( Stem("ancona"), "ancon");});
test("ancor -> ancor", function() {deepEqual( Stem("ancor"), "ancor");});
test("ancora -> ancor", function() {deepEqual( Stem("ancora"), "ancor");});
test("ancorata -> ancor", function() {deepEqual( Stem("ancorata"), "ancor");});
test("ancorato -> ancor", function() {deepEqual( Stem("ancorato"), "ancor");});
test("ancorché -> ancorc", function() {deepEqual( Stem("ancorché"), "ancorc");});
test("ancudine -> ancudin", function() {deepEqual( Stem("ancudine"), "ancudin");});
test("and -> and", function() {deepEqual( Stem("and"), "and");});
test("andamenti -> andament", function() {deepEqual( Stem("andamenti"), "andament");});
test("andamento -> andament", function() {deepEqual( Stem("andamento"), "andament");});
test("andando -> andand", function() {deepEqual( Stem("andando"), "andand");});
test("andandogli -> andandogl", function() {deepEqual( Stem("andandogli"), "andandogl");});
test("andandole -> andandol", function() {deepEqual( Stem("andandole"), "andandol");});
test("andandomi -> andandom", function() {deepEqual( Stem("andandomi"), "andandom");});
test("andandosene -> andandosen", function() {deepEqual( Stem("andandosene"), "andandosen");});
test("andar -> andar", function() {deepEqual( Stem("andar"), "andar");});
test("andarci -> andarc", function() {deepEqual( Stem("andarci"), "andarc");});
test("andare -> andar", function() {deepEqual( Stem("andare"), "andar");});
test("andargli -> andargl", function() {deepEqual( Stem("andargli"), "andargl");});
test("andarle -> andarl", function() {deepEqual( Stem("andarle"), "andarl");});
test("andarlo -> andarl", function() {deepEqual( Stem("andarlo"), "andarl");});
test("andarmene -> andarmen", function() {deepEqual( Stem("andarmene"), "andarmen");});
test("andarmi -> andarm", function() {deepEqual( Stem("andarmi"), "andarm");});
test("andarne -> andarn", function() {deepEqual( Stem("andarne"), "andarn");});
test("andaron -> andaron", function() {deepEqual( Stem("andaron"), "andaron");});
test("andarono -> andar", function() {deepEqual( Stem("andarono"), "andar");});
test("andarsene -> andarsen", function() {deepEqual( Stem("andarsene"), "andarsen");});
test("andarsi -> andars", function() {deepEqual( Stem("andarsi"), "andars");});
test("andarvene -> andarven", function() {deepEqual( Stem("andarvene"), "andarven");});
test("andarvisi -> andarvis", function() {deepEqual( Stem("andarvisi"), "andarvis");});
test("andasse -> andass", function() {deepEqual( Stem("andasse"), "andass");});
test("andasser -> andasser", function() {deepEqual( Stem("andasser"), "andasser");});
test("andassero -> andasser", function() {deepEqual( Stem("andassero"), "andasser");});
test("andassi -> andass", function() {deepEqual( Stem("andassi"), "andass");});
test("andassimo -> andassim", function() {deepEqual( Stem("andassimo"), "andassim");});
test("andata -> andat", function() {deepEqual( Stem("andata"), "andat");});
test("andatale -> andatal", function() {deepEqual( Stem("andatale"), "andatal");});
test("andate -> andat", function() {deepEqual( Stem("andate"), "andat");});
test("andati -> andat", function() {deepEqual( Stem("andati"), "andat");});
test("andato -> andat", function() {deepEqual( Stem("andato"), "andat");});
test("andatura -> andatur", function() {deepEqual( Stem("andatura"), "andatur");});
test("andava -> andav", function() {deepEqual( Stem("andava"), "andav");});
test("andavamo -> andavam", function() {deepEqual( Stem("andavamo"), "andavam");});
test("andavan -> andavan", function() {deepEqual( Stem("andavan"), "andavan");});
test("andavano -> andav", function() {deepEqual( Stem("andavano"), "andav");});
test("andavi -> andav", function() {deepEqual( Stem("andavi"), "andav");});
test("andavo -> andav", function() {deepEqual( Stem("andavo"), "andav");});
test("andazzo -> andazz", function() {deepEqual( Stem("andazzo"), "andazz");});
test("anderà -> ander", function() {deepEqual( Stem("anderà"), "ander");});
test("anderanno -> anderann", function() {deepEqual( Stem("anderanno"), "anderann");});
test("anderebbe -> anderebb", function() {deepEqual( Stem("anderebbe"), "anderebb");});
test("anderebbero -> anderebber", function() {deepEqual( Stem("anderebbero"), "anderebber");});
test("anderemo -> anderem", function() {deepEqual( Stem("anderemo"), "anderem");});
test("anderete -> ander", function() {deepEqual( Stem("anderete"), "ander");});
test("anderlecht -> anderlecht", function() {deepEqual( Stem("anderlecht"), "anderlecht");});
test("anderò -> ander", function() {deepEqual( Stem("anderò"), "ander");});
test("anderson -> anderson", function() {deepEqual( Stem("anderson"), "anderson");});
test("andersson -> andersson", function() {deepEqual( Stem("andersson"), "andersson");});
test("andiam -> andiam", function() {deepEqual( Stem("andiam"), "andiam");});
test("andiamo -> andiam", function() {deepEqual( Stem("andiamo"), "andiam");});
test("andirivieni -> andirivien", function() {deepEqual( Stem("andirivieni"), "andirivien");});
test("andito -> andit", function() {deepEqual( Stem("andito"), "andit");});
test("ando -> ando", function() {deepEqual( Stem("ando"), "ando");});
test("andò -> andò", function() {deepEqual( Stem("andò"), "andò");});
test("andrà -> andrà", function() {deepEqual( Stem("andrà"), "andrà");});
test("andranno -> andrann", function() {deepEqual( Stem("andranno"), "andrann");});
test("andre -> andre", function() {deepEqual( Stem("andre"), "andre");});
test("andrè -> andrè", function() {deepEqual( Stem("andrè"), "andrè");});
test("andrea -> andre", function() {deepEqual( Stem("andrea"), "andre");});
test("andreas -> andreas", function() {deepEqual( Stem("andreas"), "andreas");});
test("andreatta -> andreatt", function() {deepEqual( Stem("andreatta"), "andreatt");});
test("andrebbe -> andrebb", function() {deepEqual( Stem("andrebbe"), "andrebb");});
test("andrei -> andre", function() {deepEqual( Stem("andrei"), "andre");});
test("andremo -> andrem", function() {deepEqual( Stem("andremo"), "andrem");});
test("andreoli -> andreol", function() {deepEqual( Stem("andreoli"), "andreol");});
test("andreotti -> andreott", function() {deepEqual( Stem("andreotti"), "andreott");});
test("andres -> andres", function() {deepEqual( Stem("andres"), "andres");});
test("andrew -> andrew", function() {deepEqual( Stem("andrew"), "andrew");});
test("andrey -> andrey", function() {deepEqual( Stem("andrey"), "andrey");});
test("andria -> andri", function() {deepEqual( Stem("andria"), "andri");});
test("andrija -> andrij", function() {deepEqual( Stem("andrija"), "andrij");});
test("andrino -> andrin", function() {deepEqual( Stem("andrino"), "andrin");});
test("andrò -> andrò", function() {deepEqual( Stem("andrò"), "andrò");});
test("andromeda -> andromed", function() {deepEqual( Stem("andromeda"), "andromed");});
test("androne -> andron", function() {deepEqual( Stem("androne"), "andron");});
test("andronico -> andron", function() {deepEqual( Stem("andronico"), "andron");});
test("anelli -> anell", function() {deepEqual( Stem("anelli"), "anell");});
test("anello -> anell", function() {deepEqual( Stem("anello"), "anell");});
test("anellò -> anell", function() {deepEqual( Stem("anellò"), "anell");});
test("anfia -> anfi", function() {deepEqual( Stem("anfia"), "anfi");});
test("anfibi -> anfib", function() {deepEqual( Stem("anfibi"), "anfib");});
test("anfibia -> anfib", function() {deepEqual( Stem("anfibia"), "anfib");});
test("anfibio -> anfib", function() {deepEqual( Stem("anfibio"), "anfib");});
test("angela -> angel", function() {deepEqual( Stem("angela"), "angel");});
test("angeles -> angeles", function() {deepEqual( Stem("angeles"), "angeles");});
test("angeliche -> angel", function() {deepEqual( Stem("angeliche"), "angel");});
test("angelini -> angelin", function() {deepEqual( Stem("angelini"), "angelin");});
test("angelis -> angelis", function() {deepEqual( Stem("angelis"), "angelis");});
test("angelo -> angel", function() {deepEqual( Stem("angelo"), "angel");});
test("angelus -> angelus", function() {deepEqual( Stem("angelus"), "angelus");});
test("angesia -> anges", function() {deepEqual( Stem("angesia"), "anges");});
test("angheria -> angher", function() {deepEqual( Stem("angheria"), "angher");});
test("angherie -> angher", function() {deepEqual( Stem("angherie"), "angher");});
test("angioli -> angiol", function() {deepEqual( Stem("angioli"), "angiol");});
test("angiolo -> angiol", function() {deepEqual( Stem("angiolo"), "angiol");});
test("anglicana -> anglican", function() {deepEqual( Stem("anglicana"), "anglican");});
test("anglo -> anglo", function() {deepEqual( Stem("anglo"), "anglo");});
test("angloma -> anglom", function() {deepEqual( Stem("angloma"), "anglom");});
test("angola -> angol", function() {deepEqual( Stem("angola"), "angol");});
test("angolana -> angolan", function() {deepEqual( Stem("angolana"), "angolan");});
test("angoli -> angol", function() {deepEqual( Stem("angoli"), "angol");});
test("angolo -> angol", function() {deepEqual( Stem("angolo"), "angol");});
test("angosce -> angosc", function() {deepEqual( Stem("angosce"), "angosc");});
test("angoscia -> angosc", function() {deepEqual( Stem("angoscia"), "angosc");});
test("angosciosa -> angosc", function() {deepEqual( Stem("angosciosa"), "angosc");});
test("angosciosamente -> angosc", function() {deepEqual( Stem("angosciosamente"), "angosc");});
test("angosciose -> angosc", function() {deepEqual( Stem("angosciose"), "angosc");});
test("angoscioso -> angosc", function() {deepEqual( Stem("angoscioso"), "angosc");});
test("angrisani -> angrisan", function() {deepEqual( Stem("angrisani"), "angrisan");});
test("angusta -> angust", function() {deepEqual( Stem("angusta"), "angust");});
test("angustia -> angust", function() {deepEqual( Stem("angustia"), "angust");});
test("angustiarsi -> angust", function() {deepEqual( Stem("angustiarsi"), "angust");});
test("angustiate -> angust", function() {deepEqual( Stem("angustiate"), "angust");});
test("angustiati -> angust", function() {deepEqual( Stem("angustiati"), "angust");});
test("angustiato -> angust", function() {deepEqual( Stem("angustiato"), "angust");});
test("angustie -> angust", function() {deepEqual( Stem("angustie"), "angust");});
test("angustiosa -> angust", function() {deepEqual( Stem("angustiosa"), "angust");});
test("angusto -> angust", function() {deepEqual( Stem("angusto"), "angust");});
test("anhalt -> anhalt", function() {deepEqual( Stem("anhalt"), "anhalt");});
test("anidride -> anidrid", function() {deepEqual( Stem("anidride"), "anidrid");});
test("anima -> anim", function() {deepEqual( Stem("anima"), "anim");});
test("animale -> animal", function() {deepEqual( Stem("animale"), "animal");});
test("animali -> animal", function() {deepEqual( Stem("animali"), "animal");});
test("animalium -> animalium", function() {deepEqual( Stem("animalium"), "animalium");});
test("animando -> anim", function() {deepEqual( Stem("animando"), "anim");});
test("animare -> anim", function() {deepEqual( Stem("animare"), "anim");});
test("animarla -> anim", function() {deepEqual( Stem("animarla"), "anim");});
test("animarsi -> anim", function() {deepEqual( Stem("animarsi"), "anim");});
test("animarvi -> anim", function() {deepEqual( Stem("animarvi"), "anim");});
test("animata -> anim", function() {deepEqual( Stem("animata"), "anim");});
test("animate -> anim", function() {deepEqual( Stem("animate"), "anim");});
test("animati -> anim", function() {deepEqual( Stem("animati"), "anim");});
test("animato -> anim", function() {deepEqual( Stem("animato"), "anim");});
test("animava -> anim", function() {deepEqual( Stem("animava"), "anim");});
test("animazione -> anim", function() {deepEqual( Stem("animazione"), "anim");});
test("anime -> anim", function() {deepEqual( Stem("anime"), "anim");});
test("animi -> anim", function() {deepEqual( Stem("animi"), "anim");});
test("animo -> anim", function() {deepEqual( Stem("animo"), "anim");});
test("animosa -> anim", function() {deepEqual( Stem("animosa"), "anim");});
test("animosità -> animos", function() {deepEqual( Stem("animosità"), "animos");});
test("animoso -> anim", function() {deepEqual( Stem("animoso"), "anim");});
test("ankara -> ankar", function() {deepEqual( Stem("ankara"), "ankar");});
test("anna -> anna", function() {deepEqual( Stem("anna"), "anna");});
test("annacquarne -> annacqu", function() {deepEqual( Stem("annacquarne"), "annacqu");});
test("annaffiata -> annaff", function() {deepEqual( Stem("annaffiata"), "annaff");});
test("annali -> annal", function() {deepEqual( Stem("annali"), "annal");});
test("annaspare -> annasp", function() {deepEqual( Stem("annaspare"), "annasp");});
test("annata -> annat", function() {deepEqual( Stem("annata"), "annat");});
test("annate -> annat", function() {deepEqual( Stem("annate"), "annat");});
test("anne -> anne", function() {deepEqual( Stem("anne"), "anne");});
test("annebbia -> annebb", function() {deepEqual( Stem("annebbia"), "annebb");});
test("annebbiare -> annebb", function() {deepEqual( Stem("annebbiare"), "annebb");});
test("annebbiava -> annebb", function() {deepEqual( Stem("annebbiava"), "annebb");});
test("annegazione -> anneg", function() {deepEqual( Stem("annegazione"), "anneg");});
test("annelore -> annelor", function() {deepEqual( Stem("annelore"), "annelor");});
test("annerite -> anner", function() {deepEqual( Stem("annerite"), "anner");});
test("annessa -> anness", function() {deepEqual( Stem("annessa"), "anness");});
test("annessi -> anness", function() {deepEqual( Stem("annessi"), "anness");});
test("annesso -> anness", function() {deepEqual( Stem("annesso"), "anness");});
test("anni -> anni", function() {deepEqual( Stem("anni"), "anni");});
test("annibale -> annibal", function() {deepEqual( Stem("annibale"), "annibal");});
test("annichilata -> annichil", function() {deepEqual( Stem("annichilata"), "annichil");});
test("annidati -> annid", function() {deepEqual( Stem("annidati"), "annid");});
test("annientarli -> annient", function() {deepEqual( Stem("annientarli"), "annient");});
test("anniversari -> anniversar", function() {deepEqual( Stem("anniversari"), "anniversar");});
test("anniversario -> anniversar", function() {deepEqual( Stem("anniversario"), "anniversar");});
test("anniversary -> anniversary", function() {deepEqual( Stem("anniversary"), "anniversary");});
test("annni -> annni", function() {deepEqual( Stem("annni"), "annni");});
test("anno -> anno", function() {deepEqual( Stem("anno"), "anno");});
test("annodò -> annod", function() {deepEqual( Stem("annodò"), "annod");});
test("annoiarsi -> annoi", function() {deepEqual( Stem("annoiarsi"), "annoi");});
test("annoiarvi -> annoi", function() {deepEqual( Stem("annoiarvi"), "annoi");});
test("annoiassero -> annoi", function() {deepEqual( Stem("annoiassero"), "annoi");});
test("annoiati -> annoi", function() {deepEqual( Stem("annoiati"), "annoi");});
test("annoiato -> annoi", function() {deepEqual( Stem("annoiato"), "annoi");});
test("annoiava -> annoi", function() {deepEqual( Stem("annoiava"), "annoi");});
test("annona -> annon", function() {deepEqual( Stem("annona"), "annon");});
test("annone -> annon", function() {deepEqual( Stem("annone"), "annon");});
test("annoni -> annon", function() {deepEqual( Stem("annoni"), "annon");});
test("annosa -> annos", function() {deepEqual( Stem("annosa"), "annos");});
test("annotata -> annot", function() {deepEqual( Stem("annotata"), "annot");});
test("annotato -> annot", function() {deepEqual( Stem("annotato"), "annot");});
test("annottar -> annott", function() {deepEqual( Stem("annottar"), "annott");});
test("annovera -> annover", function() {deepEqual( Stem("annovera"), "annover");});
test("annoverare -> annover", function() {deepEqual( Stem("annoverare"), "annover");});
test("annua -> annu", function() {deepEqual( Stem("annua"), "annu");});
test("annuale -> annual", function() {deepEqual( Stem("annuale"), "annual");});
test("annuali -> annual", function() {deepEqual( Stem("annuali"), "annual");});
test("annualmente -> annual", function() {deepEqual( Stem("annualmente"), "annual");});
test("annui -> annu", function() {deepEqual( Stem("annui"), "annu");});
test("annullamento -> annull", function() {deepEqual( Stem("annullamento"), "annull");});
test("annullando -> annull", function() {deepEqual( Stem("annullando"), "annull");});
test("annullare -> annull", function() {deepEqual( Stem("annullare"), "annull");});
test("annullata -> annull", function() {deepEqual( Stem("annullata"), "annull");});
test("annullato -> annull", function() {deepEqual( Stem("annullato"), "annull");});
test("annuncia -> annunc", function() {deepEqual( Stem("annuncia"), "annunc");});
test("annunciando -> annunc", function() {deepEqual( Stem("annunciando"), "annunc");});
test("annunciano -> annunc", function() {deepEqual( Stem("annunciano"), "annunc");});
test("annunciare -> annunc", function() {deepEqual( Stem("annunciare"), "annunc");});
test("annunciarla -> annunc", function() {deepEqual( Stem("annunciarla"), "annunc");});
test("annunciata -> annunc", function() {deepEqual( Stem("annunciata"), "annunc");});
test("annunciati -> annunc", function() {deepEqual( Stem("annunciati"), "annunc");});
test("annunciato -> annunc", function() {deepEqual( Stem("annunciato"), "annunc");});
test("annunciavano -> annunc", function() {deepEqual( Stem("annunciavano"), "annunc");});
test("annuncio -> annunc", function() {deepEqual( Stem("annuncio"), "annunc");});
test("annunzia -> annunz", function() {deepEqual( Stem("annunzia"), "annunz");});
test("annunziando -> annunz", function() {deepEqual( Stem("annunziando"), "annunz");});
test("annunziano -> annunz", function() {deepEqual( Stem("annunziano"), "annunz");});
test("annunziar -> annunz", function() {deepEqual( Stem("annunziar"), "annunz");});
test("annunziare -> annunz", function() {deepEqual( Stem("annunziare"), "annunz");});
test("annunziarle -> annunz", function() {deepEqual( Stem("annunziarle"), "annunz");});
test("annunziarono -> annunz", function() {deepEqual( Stem("annunziarono"), "annunz");});
test("annunziarsi -> annunz", function() {deepEqual( Stem("annunziarsi"), "annunz");});
test("annunziata -> annunz", function() {deepEqual( Stem("annunziata"), "annunz");});
test("annunziate -> annunz", function() {deepEqual( Stem("annunziate"), "annunz");});
test("annunziato -> annunz", function() {deepEqual( Stem("annunziato"), "annunz");});
test("annunziatori -> annunz", function() {deepEqual( Stem("annunziatori"), "annunz");});
test("annunziava -> annunz", function() {deepEqual( Stem("annunziava"), "annunz");});
test("annunzio -> annunz", function() {deepEqual( Stem("annunzio"), "annunz");});
test("annunziò -> annunz", function() {deepEqual( Stem("annunziò"), "annunz");});
test("annuo -> annu", function() {deepEqual( Stem("annuo"), "annu");});
test("anomale -> anomal", function() {deepEqual( Stem("anomale"), "anomal");});
test("anomalia -> anomal", function() {deepEqual( Stem("anomalia"), "anomal");});
test("anonimato -> anonim", function() {deepEqual( Stem("anonimato"), "anonim");});
test("anonimo -> anonim", function() {deepEqual( Stem("anonimo"), "anonim");});
test("anoressia -> anoress", function() {deepEqual( Stem("anoressia"), "anoress");});
test("anoressici -> anoress", function() {deepEqual( Stem("anoressici"), "anoress");});
test("anouk -> anouk", function() {deepEqual( Stem("anouk"), "anouk");});
test("anp -> anp", function() {deepEqual( Stem("anp"), "anp");});
test("anpac -> anpac", function() {deepEqual( Stem("anpac"), "anpac");});
test("anpav -> anpav", function() {deepEqual( Stem("anpav"), "anpav");});
test("anpcat -> anpcat", function() {deepEqual( Stem("anpcat"), "anpcat");});
test("ansa -> ansa", function() {deepEqual( Stem("ansa"), "ansa");});
test("ansaldo -> ansald", function() {deepEqual( Stem("ansaldo"), "ansald");});
test("ansante -> ansant", function() {deepEqual( Stem("ansante"), "ansant");});
test("ansanti -> ansant", function() {deepEqual( Stem("ansanti"), "ansant");});
test("anselmi -> anselm", function() {deepEqual( Stem("anselmi"), "anselm");});
test("anselmo -> anselm", function() {deepEqual( Stem("anselmo"), "anselm");});
test("ansett -> ansett", function() {deepEqual( Stem("ansett"), "ansett");});
test("ansia -> ansi", function() {deepEqual( Stem("ansia"), "ansi");});
test("ansietà -> ansiet", function() {deepEqual( Stem("ansietà"), "ansiet");});
test("ansiosa -> ansios", function() {deepEqual( Stem("ansiosa"), "ansios");});
test("ansiosamente -> ansios", function() {deepEqual( Stem("ansiosamente"), "ansios");});
test("ansioso -> ansios", function() {deepEqual( Stem("ansioso"), "ansios");});
test("antagonisti -> antagon", function() {deepEqual( Stem("antagonisti"), "antagon");});
test("antares -> antares", function() {deepEqual( Stem("antares"), "antares");});
test("antartide -> antartid", function() {deepEqual( Stem("antartide"), "antartid");});
test("ante -> ante", function() {deepEqual( Stem("ante"), "ante");});
test("antecedente -> antecedent", function() {deepEqual( Stem("antecedente"), "antecedent");});
test("antecedenti -> antecedent", function() {deepEqual( Stem("antecedenti"), "antecedent");});
test("antenato -> anten", function() {deepEqual( Stem("antenato"), "anten");});
test("antenne -> antenn", function() {deepEqual( Stem("antenne"), "antenn");});
test("anteponeva -> antepon", function() {deepEqual( Stem("anteponeva"), "antepon");});
test("anteporre -> anteporr", function() {deepEqual( Stem("anteporre"), "anteporr");});
test("anteprima -> anteprim", function() {deepEqual( Stem("anteprima"), "anteprim");});
test("antequam -> antequam", function() {deepEqual( Stem("antequam"), "antequam");});
test("anterselva -> anterselv", function() {deepEqual( Stem("anterselva"), "anterselv");});
test("anthony -> anthony", function() {deepEqual( Stem("anthony"), "anthony");});
test("anti -> anti", function() {deepEqual( Stem("anti"), "anti");});
test("antiallergico -> antiallerg", function() {deepEqual( Stem("antiallergico"), "antiallerg");});
test("antiberlusconi -> antiberluscon", function() {deepEqual( Stem("antiberlusconi"), "antiberluscon");});
test("antibiotici -> antibiot", function() {deepEqual( Stem("antibiotici"), "antibiot");});
test("antibiotico -> antibiot", function() {deepEqual( Stem("antibiotico"), "antibiot");});
test("antica -> antic", function() {deepEqual( Stem("antica"), "antic");});
test("anticaglie -> anticagl", function() {deepEqual( Stem("anticaglie"), "anticagl");});
test("anticamera -> anticamer", function() {deepEqual( Stem("anticamera"), "anticamer");});
test("anticamere -> anticam", function() {deepEqual( Stem("anticamere"), "anticam");});
test("antiche -> antic", function() {deepEqual( Stem("antiche"), "antic");});
test("antichi -> antic", function() {deepEqual( Stem("antichi"), "antic");});
test("antichità -> antic", function() {deepEqual( Stem("antichità"), "antic");});
test("anticipa -> anticip", function() {deepEqual( Stem("anticipa"), "anticip");});
test("anticipare -> anticip", function() {deepEqual( Stem("anticipare"), "anticip");});
test("anticiparlo -> anticip", function() {deepEqual( Stem("anticiparlo"), "anticip");});
test("anticipata -> anticip", function() {deepEqual( Stem("anticipata"), "anticip");});
test("anticipatamente -> anticipat", function() {deepEqual( Stem("anticipatamente"), "anticipat");});
test("anticipate -> anticip", function() {deepEqual( Stem("anticipate"), "anticip");});
test("anticipato -> anticip", function() {deepEqual( Stem("anticipato"), "anticip");});
test("anticipatore -> anticip", function() {deepEqual( Stem("anticipatore"), "anticip");});
test("anticipazione -> anticip", function() {deepEqual( Stem("anticipazione"), "anticip");});
test("anticipazioni -> anticip", function() {deepEqual( Stem("anticipazioni"), "anticip");});
test("anticipi -> anticip", function() {deepEqual( Stem("anticipi"), "anticip");});
test("anticipo -> anticip", function() {deepEqual( Stem("anticipo"), "anticip");});
test("antico -> antic", function() {deepEqual( Stem("antico"), "antic");});
test("anticomunismo -> anticomun", function() {deepEqual( Stem("anticomunismo"), "anticomun");});
test("anticristi -> anticr", function() {deepEqual( Stem("anticristi"), "anticr");});
test("antidemocratico -> antidemocrat", function() {deepEqual( Stem("antidemocratico"), "antidemocrat");});
test("antidemocrazia -> antidemocraz", function() {deepEqual( Stem("antidemocrazia"), "antidemocraz");});
test("antifascismo -> antifasc", function() {deepEqual( Stem("antifascismo"), "antifasc");});
test("antifurto -> antifurt", function() {deepEqual( Stem("antifurto"), "antifurt");});
test("antille -> antill", function() {deepEqual( Stem("antille"), "antill");});
test("antimafia -> antimaf", function() {deepEqual( Stem("antimafia"), "antimaf");});
test("antimo -> antim", function() {deepEqual( Stem("antimo"), "antim");});
test("antipatia -> antipat", function() {deepEqual( Stem("antipatia"), "antipat");});
test("antiperipatetica -> antiperipatet", function() {deepEqual( Stem("antiperipatetica"), "antiperipatet");});
test("antipodi -> antipod", function() {deepEqual( Stem("antipodi"), "antipod");});
test("antiproiettile -> antiproiettil", function() {deepEqual( Stem("antiproiettile"), "antiproiettil");});
test("antistante -> antist", function() {deepEqual( Stem("antistante"), "antist");});
test("antitbc -> antitbc", function() {deepEqual( Stem("antitbc"), "antitbc");});
test("antitetica -> antitet", function() {deepEqual( Stem("antitetica"), "antitet");});
test("antitetico -> antitet", function() {deepEqual( Stem("antitetico"), "antitet");});
test("antitrust -> antitrust", function() {deepEqual( Stem("antitrust"), "antitrust");});
test("antivedendo -> antived", function() {deepEqual( Stem("antivedendo"), "antived");});
test("antognoni -> antognon", function() {deepEqual( Stem("antognoni"), "antognon");});
test("antologie -> antolog", function() {deepEqual( Stem("antologie"), "antolog");});
test("antona -> anton", function() {deepEqual( Stem("antona"), "anton");});
test("antonella -> antonell", function() {deepEqual( Stem("antonella"), "antonell");});
test("antonelli -> antonell", function() {deepEqual( Stem("antonelli"), "antonell");});
test("antoni -> anton", function() {deepEqual( Stem("antoni"), "anton");});
test("antonina -> antonin", function() {deepEqual( Stem("antonina"), "antonin");});
test("antonio -> anton", function() {deepEqual( Stem("antonio"), "anton");});
test("antonioli -> antoniol", function() {deepEqual( Stem("antonioli"), "antoniol");});
test("antonomasia -> antonomas", function() {deepEqual( Stem("antonomasia"), "antonomas");});
test("antonov -> antonov", function() {deepEqual( Stem("antonov"), "antonov");});
test("antonucci -> antonucc", function() {deepEqual( Stem("antonucci"), "antonucc");});
test("antraci -> antrac", function() {deepEqual( Stem("antraci"), "antrac");});
test("antti -> antti", function() {deepEqual( Stem("antti"), "antti");});
test("anulare -> anul", function() {deepEqual( Stem("anulare"), "anul");});
test("anversa -> anvers", function() {deepEqual( Stem("anversa"), "anvers");});
test("anya -> anya", function() {deepEqual( Stem("anya"), "anya");});
test("anzi -> anzi", function() {deepEqual( Stem("anzi"), "anzi");});
test("anziana -> anzian", function() {deepEqual( Stem("anziana"), "anzian");});
test("anziane -> anzian", function() {deepEqual( Stem("anziane"), "anzian");});
test("anziani -> anzian", function() {deepEqual( Stem("anziani"), "anzian");});
test("anzianità -> anzian", function() {deepEqual( Stem("anzianità"), "anzian");});
test("anziano -> anzi", function() {deepEqual( Stem("anziano"), "anzi");});
test("anzichè -> anzic", function() {deepEqual( Stem("anzichè"), "anzic");});
test("anzio -> anzi", function() {deepEqual( Stem("anzio"), "anzi");});
test("anzitutto -> anzitutt", function() {deepEqual( Stem("anzitutto"), "anzitutt");});
test("aosta -> aost", function() {deepEqual( Stem("aosta"), "aost");});
test("aouita -> aou", function() {deepEqual( Stem("aouita"), "aou");});
test("ap -> ap", function() {deepEqual( Stem("ap"), "ap");});
test("aparecido -> aparecid", function() {deepEqual( Stem("aparecido"), "aparecid");});
test("apartheid -> apartheid", function() {deepEqual( Stem("apartheid"), "apartheid");});
test("aperta -> apert", function() {deepEqual( Stem("aperta"), "apert");});
test("apertamente -> apert", function() {deepEqual( Stem("apertamente"), "apert");});
test("aperte -> apert", function() {deepEqual( Stem("aperte"), "apert");});
test("apertè -> apert", function() {deepEqual( Stem("apertè"), "apert");});
test("aperti -> apert", function() {deepEqual( Stem("aperti"), "apert");});
test("aperto -> apert", function() {deepEqual( Stem("aperto"), "apert");});
test("apertura -> apertur", function() {deepEqual( Stem("apertura"), "apertur");});
test("aperture -> apertur", function() {deepEqual( Stem("aperture"), "apertur");});
test("apolloni -> apollon", function() {deepEqual( Stem("apolloni"), "apollon");});
test("apologeta -> apologet", function() {deepEqual( Stem("apologeta"), "apologet");});
test("apologia -> apolog", function() {deepEqual( Stem("apologia"), "apolog");});
test("apologie -> apolog", function() {deepEqual( Stem("apologie"), "apolog");});
test("apostrofe -> apostrof", function() {deepEqual( Stem("apostrofe"), "apostrof");});
test("appagarlo -> appag", function() {deepEqual( Stem("appagarlo"), "appag");});
test("appagato -> appag", function() {deepEqual( Stem("appagato"), "appag");});
test("appagava -> appag", function() {deepEqual( Stem("appagava"), "appag");});
test("appagherò -> appag", function() {deepEqual( Stem("appagherò"), "appag");});
test("appaiono -> appai", function() {deepEqual( Stem("appaiono"), "appai");});
test("appaltato -> appalt", function() {deepEqual( Stem("appaltato"), "appalt");});
test("appaltatore -> appalt", function() {deepEqual( Stem("appaltatore"), "appalt");});
test("appaltatrici -> appalt", function() {deepEqual( Stem("appaltatrici"), "appalt");});
test("appalto -> appalt", function() {deepEqual( Stem("appalto"), "appalt");});
test("appaluditissimi -> appaluditissim", function() {deepEqual( Stem("appaluditissimi"), "appaluditissim");});
test("appannamento -> appann", function() {deepEqual( Stem("appannamento"), "appann");});
test("appannarsi -> appann", function() {deepEqual( Stem("appannarsi"), "appann");});
test("appannò -> appann", function() {deepEqual( Stem("appannò"), "appann");});
test("apparato -> appar", function() {deepEqual( Stem("apparato"), "appar");});
test("appare -> appar", function() {deepEqual( Stem("appare"), "appar");});
test("apparecchi -> apparecc", function() {deepEqual( Stem("apparecchi"), "apparecc");});
test("apparecchiar -> apparecc", function() {deepEqual( Stem("apparecchiar"), "apparecc");});
test("apparecchiare -> apparecc", function() {deepEqual( Stem("apparecchiare"), "apparecc");});
test("apparecchiata -> apparecc", function() {deepEqual( Stem("apparecchiata"), "apparecc");});
test("apparecchiate -> apparecc", function() {deepEqual( Stem("apparecchiate"), "apparecc");});
test("apparecchiati -> apparecc", function() {deepEqual( Stem("apparecchiati"), "apparecc");});
test("apparecchiato -> apparecc", function() {deepEqual( Stem("apparecchiato"), "apparecc");});
test("apparecchio -> apparecc", function() {deepEqual( Stem("apparecchio"), "apparecc");});
test("apparecchiò -> apparecc", function() {deepEqual( Stem("apparecchiò"), "apparecc");});
test("apparendogli -> appar", function() {deepEqual( Stem("apparendogli"), "appar");});
test("apparente -> apparent", function() {deepEqual( Stem("apparente"), "apparent");});
test("apparentemente -> apparent", function() {deepEqual( Stem("apparentemente"), "apparent");});
test("apparenti -> apparent", function() {deepEqual( Stem("apparenti"), "apparent");});
test("apparenza -> apparent", function() {deepEqual( Stem("apparenza"), "apparent");});
test("apparenze -> apparent", function() {deepEqual( Stem("apparenze"), "apparent");});
test("apparir -> appar", function() {deepEqual( Stem("apparir"), "appar");});
test("apparire -> appar", function() {deepEqual( Stem("apparire"), "appar");});
test("apparisca -> appar", function() {deepEqual( Stem("apparisca"), "appar");});
test("apparisse -> appariss", function() {deepEqual( Stem("apparisse"), "appariss");});
test("apparitore -> apparitor", function() {deepEqual( Stem("apparitore"), "apparitor");});
test("apparitori -> apparitor", function() {deepEqual( Stem("apparitori"), "apparitor");});
test("appariva -> appar", function() {deepEqual( Stem("appariva"), "appar");});
test("apparivano -> appar", function() {deepEqual( Stem("apparivano"), "appar");});
test("apparizione -> apparizion", function() {deepEqual( Stem("apparizione"), "apparizion");});
test("apparizioni -> apparizion", function() {deepEqual( Stem("apparizioni"), "apparizion");});
test("apparsa -> appars", function() {deepEqual( Stem("apparsa"), "appars");});
test("apparse -> appars", function() {deepEqual( Stem("apparse"), "appars");});
test("apparsi -> appars", function() {deepEqual( Stem("apparsi"), "appars");});
test("apparso -> appars", function() {deepEqual( Stem("apparso"), "appars");});
test("appartamenti -> appart", function() {deepEqual( Stem("appartamenti"), "appart");});
test("appartamento -> appart", function() {deepEqual( Stem("appartamento"), "appart");});
test("appartato -> appart", function() {deepEqual( Stem("appartato"), "appart");});
test("appartenente -> appartenent", function() {deepEqual( Stem("appartenente"), "appartenent");});
test("appartenenti -> appartenent", function() {deepEqual( Stem("appartenenti"), "appartenent");});
test("appartenenza -> appartenent", function() {deepEqual( Stem("appartenenza"), "appartenent");});
test("appartenenze -> appartenent", function() {deepEqual( Stem("appartenenze"), "appartenent");});
test("appartenere -> apparten", function() {deepEqual( Stem("appartenere"), "apparten");});
test("apparteneva -> apparten", function() {deepEqual( Stem("apparteneva"), "apparten");});
test("appartenevano -> apparten", function() {deepEqual( Stem("appartenevano"), "apparten");});
test("appartengano -> apparteng", function() {deepEqual( Stem("appartengano"), "apparteng");});
test("appartengono -> apparteng", function() {deepEqual( Stem("appartengono"), "apparteng");});
test("appartiene -> appartien", function() {deepEqual( Stem("appartiene"), "appartien");});
test("apparve -> apparv", function() {deepEqual( Stem("apparve"), "apparv");});
test("apparvero -> apparver", function() {deepEqual( Stem("apparvero"), "apparver");});
test("appassionante -> appassion", function() {deepEqual( Stem("appassionante"), "appassion");});
test("appassionata -> appassion", function() {deepEqual( Stem("appassionata"), "appassion");});
test("appassionate -> appassion", function() {deepEqual( Stem("appassionate"), "appassion");});
test("appassionati -> appassion", function() {deepEqual( Stem("appassionati"), "appassion");});
test("appassionato -> appassion", function() {deepEqual( Stem("appassionato"), "appassion");});
test("appassite -> appass", function() {deepEqual( Stem("appassite"), "appass");});
test("appedonatò -> appedonat", function() {deepEqual( Stem("appedonatò"), "appedonat");});
test("appellativi -> appell", function() {deepEqual( Stem("appellativi"), "appell");});
test("appellativo -> appell", function() {deepEqual( Stem("appellativo"), "appell");});
test("appelli -> appell", function() {deepEqual( Stem("appelli"), "appell");});
test("appello -> appell", function() {deepEqual( Stem("appello"), "appell");});
test("appena -> appen", function() {deepEqual( Stem("appena"), "appen");});
test("appenderlo -> append", function() {deepEqual( Stem("appenderlo"), "append");});
test("appesantita -> appesant", function() {deepEqual( Stem("appesantita"), "appesant");});
test("appesi -> appes", function() {deepEqual( Stem("appesi"), "appes");});
test("appeso -> appes", function() {deepEqual( Stem("appeso"), "appes");});
test("appestati -> appest", function() {deepEqual( Stem("appestati"), "appest");});
test("appetito -> appet", function() {deepEqual( Stem("appetito"), "appet");});
test("appezzamenti -> appezz", function() {deepEqual( Stem("appezzamenti"), "appezz");});
test("appiattarsi -> appiatt", function() {deepEqual( Stem("appiattarsi"), "appiatt");});
test("appiattirsi -> appiatt", function() {deepEqual( Stem("appiattirsi"), "appiatt");});
test("appiattisce -> appiatt", function() {deepEqual( Stem("appiattisce"), "appiatt");});
test("appiccicati -> appiccic", function() {deepEqual( Stem("appiccicati"), "appiccic");});
test("appiè -> appi", function() {deepEqual( Stem("appiè"), "appi");});
test("appl -> appl", function() {deepEqual( Stem("appl"), "appl");});
test("applaude -> applaud", function() {deepEqual( Stem("applaude"), "applaud");});
test("applaudendo -> applaud", function() {deepEqual( Stem("applaudendo"), "applaud");});
test("applaudire -> applaud", function() {deepEqual( Stem("applaudire"), "applaud");});
test("applauditi -> applaud", function() {deepEqual( Stem("applauditi"), "applaud");});
test("applauditissimo -> applauditissim", function() {deepEqual( Stem("applauditissimo"), "applauditissim");});
test("applaudito -> applaud", function() {deepEqual( Stem("applaudito"), "applaud");});
test("applaudivano -> applaud", function() {deepEqual( Stem("applaudivano"), "applaud");});
test("applausi -> applaus", function() {deepEqual( Stem("applausi"), "applaus");});
test("applauso -> applaus", function() {deepEqual( Stem("applauso"), "applaus");});
test("apple -> apple", function() {deepEqual( Stem("apple"), "apple");});
test("applicabile -> applic", function() {deepEqual( Stem("applicabile"), "applic");});
test("applicabilità -> applic", function() {deepEqual( Stem("applicabilità"), "applic");});
test("applicandosi -> applic", function() {deepEqual( Stem("applicandosi"), "applic");});
test("applicare -> applic", function() {deepEqual( Stem("applicare"), "applic");});
test("applicargli -> applic", function() {deepEqual( Stem("applicargli"), "applic");});
test("applicarvelo -> applic", function() {deepEqual( Stem("applicarvelo"), "applic");});
test("applicata -> applic", function() {deepEqual( Stem("applicata"), "applic");});
test("applicate -> applic", function() {deepEqual( Stem("applicate"), "applic");});
test("applicati -> applic", function() {deepEqual( Stem("applicati"), "applic");});
test("applicativi -> applic", function() {deepEqual( Stem("applicativi"), "applic");});
test("applicativo -> applic", function() {deepEqual( Stem("applicativo"), "applic");});
test("applicava -> applic", function() {deepEqual( Stem("applicava"), "applic");});
test("applicazione -> applic", function() {deepEqual( Stem("applicazione"), "applic");});
test("applicazioni -> applic", function() {deepEqual( Stem("applicazioni"), "applic");});
test("applichi -> applic", function() {deepEqual( Stem("applichi"), "applic");});
test("appluso -> applus", function() {deepEqual( Stem("appluso"), "applus");});
test("appoggi -> appogg", function() {deepEqual( Stem("appoggi"), "appogg");});
test("appoggia -> appogg", function() {deepEqual( Stem("appoggia"), "appogg");});
test("appoggiando -> appogg", function() {deepEqual( Stem("appoggiando"), "appogg");});
test("appoggiano -> appogg", function() {deepEqual( Stem("appoggiano"), "appogg");});
test("appoggiar -> appogg", function() {deepEqual( Stem("appoggiar"), "appogg");});
test("appoggiare -> appogg", function() {deepEqual( Stem("appoggiare"), "appogg");});
test("appoggiarla -> appogg", function() {deepEqual( Stem("appoggiarla"), "appogg");});
test("appoggiarlo -> appogg", function() {deepEqual( Stem("appoggiarlo"), "appogg");});
test("appoggiata -> appogg", function() {deepEqual( Stem("appoggiata"), "appogg");});
test("appoggiate -> appogg", function() {deepEqual( Stem("appoggiate"), "appogg");});
test("appoggiati -> appogg", function() {deepEqual( Stem("appoggiati"), "appogg");});
test("appoggiato -> appogg", function() {deepEqual( Stem("appoggiato"), "appogg");});
test("appoggino -> appoggin", function() {deepEqual( Stem("appoggino"), "appoggin");});
test("appoggio -> appogg", function() {deepEqual( Stem("appoggio"), "appogg");});
test("appoggiò -> appogg", function() {deepEqual( Stem("appoggiò"), "appogg");});
test("apporti -> apport", function() {deepEqual( Stem("apporti"), "apport");});
test("apporto -> apport", function() {deepEqual( Stem("apporto"), "apport");});
test("appositamente -> apposit", function() {deepEqual( Stem("appositamente"), "apposit");});
test("apposite -> appos", function() {deepEqual( Stem("apposite"), "appos");});
test("appositi -> appos", function() {deepEqual( Stem("appositi"), "appos");});
test("apposito -> appos", function() {deepEqual( Stem("apposito"), "appos");});
test("apposta -> appost", function() {deepEqual( Stem("apposta"), "appost");});
test("appostarlo -> appost", function() {deepEqual( Stem("appostarlo"), "appost");});
test("appostatamente -> appostat", function() {deepEqual( Stem("appostatamente"), "appostat");});
test("appostati -> appost", function() {deepEqual( Stem("appostati"), "appost");});
test("appostato -> appost", function() {deepEqual( Stem("appostato"), "appost");});
test("apposti -> appost", function() {deepEqual( Stem("apposti"), "appost");});
test("appprovato -> appprov", function() {deepEqual( Stem("appprovato"), "appprov");});
test("apprende -> apprend", function() {deepEqual( Stem("apprende"), "apprend");});
test("apprendere -> apprend", function() {deepEqual( Stem("apprendere"), "apprend");});
test("apprendesse -> apprendess", function() {deepEqual( Stem("apprendesse"), "apprendess");});
test("apprendisti -> apprend", function() {deepEqual( Stem("apprendisti"), "apprend");});
test("apprensione -> apprension", function() {deepEqual( Stem("apprensione"), "apprension");});
test("apprensioni -> apprension", function() {deepEqual( Stem("apprensioni"), "apprension");});
test("appresa -> appres", function() {deepEqual( Stem("appresa"), "appres");});
test("appreso -> appres", function() {deepEqual( Stem("appreso"), "appres");});
test("appresta -> apprest", function() {deepEqual( Stem("appresta"), "apprest");});
test("apprestati -> apprest", function() {deepEqual( Stem("apprestati"), "apprest");});
test("apprezzamento -> apprezz", function() {deepEqual( Stem("apprezzamento"), "apprezz");});
test("apprezzato -> apprezz", function() {deepEqual( Stem("apprezzato"), "apprezz");});
test("approccio -> approcc", function() {deepEqual( Stem("approccio"), "approcc");});
test("approda -> approd", function() {deepEqual( Stem("approda"), "approd");});
test("approdati -> approd", function() {deepEqual( Stem("approdati"), "approd");});
test("approderà -> approd", function() {deepEqual( Stem("approderà"), "approd");});
test("approderemo -> approd", function() {deepEqual( Stem("approderemo"), "approd");});
test("approdi -> approd", function() {deepEqual( Stem("approdi"), "approd");});
test("approdò -> approd", function() {deepEqual( Stem("approdò"), "approd");});
test("approfittando -> approfitt", function() {deepEqual( Stem("approfittando"), "approfitt");});
test("approfittandosi -> approfitt", function() {deepEqual( Stem("approfittandosi"), "approfitt");});
test("approfittare -> approfitt", function() {deepEqual( Stem("approfittare"), "approfitt");});
test("approfittarne -> approfitt", function() {deepEqual( Stem("approfittarne"), "approfitt");});
test("approfittato -> approfitt", function() {deepEqual( Stem("approfittato"), "approfitt");});
test("approfittava -> approfitt", function() {deepEqual( Stem("approfittava"), "approfitt");});
test("approfittavano -> approfitt", function() {deepEqual( Stem("approfittavano"), "approfitt");});
test("approfondimento -> approfond", function() {deepEqual( Stem("approfondimento"), "approfond");});
test("approfondire -> approfond", function() {deepEqual( Stem("approfondire"), "approfond");});
test("approfondisce -> approfond", function() {deepEqual( Stem("approfondisce"), "approfond");});
test("approfondita -> approfond", function() {deepEqual( Stem("approfondita"), "approfond");});
test("approfondito -> approfond", function() {deepEqual( Stem("approfondito"), "approfond");});
test("approntate -> appront", function() {deepEqual( Stem("approntate"), "appront");});
test("appropriandosi -> appropr", function() {deepEqual( Stem("appropriandosi"), "appropr");});
test("appropriato -> appropr", function() {deepEqual( Stem("appropriato"), "appropr");});
test("approssimativamente -> approssim", function() {deepEqual( Stem("approssimativamente"), "approssim");});
test("approssimativi -> approssim", function() {deepEqual( Stem("approssimativi"), "approssim");});
test("approssimazioni -> approssim", function() {deepEqual( Stem("approssimazioni"), "approssim");});
test("approva -> approv", function() {deepEqual( Stem("approva"), "approv");});
test("approvando -> approv", function() {deepEqual( Stem("approvando"), "approv");});
test("approvar -> approv", function() {deepEqual( Stem("approvar"), "approv");});
test("approvare -> approv", function() {deepEqual( Stem("approvare"), "approv");});
test("approvarle -> approv", function() {deepEqual( Stem("approvarle"), "approv");});
test("approvata -> approv", function() {deepEqual( Stem("approvata"), "approv");});
test("approvato -> approv", function() {deepEqual( Stem("approvato"), "approv");});
test("approvava -> approv", function() {deepEqual( Stem("approvava"), "approv");});
test("approvazione -> approv", function() {deepEqual( Stem("approvazione"), "approv");});
test("approvazioni -> approv", function() {deepEqual( Stem("approvazioni"), "approv");});
test("approvò -> approv", function() {deepEqual( Stem("approvò"), "approv");});
test("approvviggionamento -> approvviggion", function() {deepEqual( Stem("approvviggionamento"), "approvviggion");});
test("approvvigionamenti -> approvvigion", function() {deepEqual( Stem("approvvigionamenti"), "approvvigion");});
test("appunta -> appunt", function() {deepEqual( Stem("appunta"), "appunt");});
test("appuntamenti -> appunt", function() {deepEqual( Stem("appuntamenti"), "appunt");});
test("appuntamento -> appunt", function() {deepEqual( Stem("appuntamento"), "appunt");});
test("appuntata -> appunt", function() {deepEqual( Stem("appuntata"), "appunt");});
test("appuntate -> appunt", function() {deepEqual( Stem("appuntate"), "appunt");});
test("appuntato -> appunt", function() {deepEqual( Stem("appuntato"), "appunt");});
test("appuntellano -> appuntell", function() {deepEqual( Stem("appuntellano"), "appuntell");});
test("appuntellarsi -> appuntell", function() {deepEqual( Stem("appuntellarsi"), "appuntell");});
test("appuntellata -> appuntell", function() {deepEqual( Stem("appuntellata"), "appuntell");});
test("appuntellati -> appuntell", function() {deepEqual( Stem("appuntellati"), "appuntell");});
test("appuntellato -> appuntell", function() {deepEqual( Stem("appuntellato"), "appuntell");});
test("appuntellavano -> appuntell", function() {deepEqual( Stem("appuntellavano"), "appuntell");});
test("appuntellò -> appuntell", function() {deepEqual( Stem("appuntellò"), "appuntell");});
test("appunti -> appunt", function() {deepEqual( Stem("appunti"), "appunt");});
test("appuntino -> appuntin", function() {deepEqual( Stem("appuntino"), "appuntin");});
test("appunto -> appunt", function() {deepEqual( Stem("appunto"), "appunt");});
test("apra -> apra", function() {deepEqual( Stem("apra"), "apra");});
test("aprano -> apran", function() {deepEqual( Stem("aprano"), "apran");});
test("apre -> apre", function() {deepEqual( Stem("apre"), "apre");});
test("aprendo -> aprend", function() {deepEqual( Stem("aprendo"), "aprend");});
test("aprendosi -> aprend", function() {deepEqual( Stem("aprendosi"), "aprend");});
test("apri -> apri", function() {deepEqual( Stem("apri"), "apri");});
test("aprì -> aprì", function() {deepEqual( Stem("aprì"), "aprì");});
test("apribottiglie -> apribottigl", function() {deepEqual( Stem("apribottiglie"), "apribottigl");});
test("aprile -> april", function() {deepEqual( Stem("aprile"), "april");});
test("aprir -> aprir", function() {deepEqual( Stem("aprir"), "aprir");});
test("aprirà -> aprir", function() {deepEqual( Stem("aprirà"), "aprir");});
test("aprire -> aprir", function() {deepEqual( Stem("aprire"), "aprir");});
test("aprirsene -> aprirsen", function() {deepEqual( Stem("aprirsene"), "aprirsen");});
test("aprirsi -> aprirs", function() {deepEqual( Stem("aprirsi"), "aprirs");});
test("aprirvi -> aprirv", function() {deepEqual( Stem("aprirvi"), "aprirv");});
test("aprisse -> apriss", function() {deepEqual( Stem("aprisse"), "apriss");});
test("aprissero -> aprisser", function() {deepEqual( Stem("aprissero"), "aprisser");});
test("aprite -> aprit", function() {deepEqual( Stem("aprite"), "aprit");});
test("apriva -> apriv", function() {deepEqual( Stem("apriva"), "apriv");});
test("aprivano -> apriv", function() {deepEqual( Stem("aprivano"), "apriv");});
test("aprono -> apron", function() {deepEqual( Stem("aprono"), "apron");});
test("aprte -> aprte", function() {deepEqual( Stem("aprte"), "aprte");});
test("apuano -> apu", function() {deepEqual( Stem("apuano"), "apu");});
test("apud -> apud", function() {deepEqual( Stem("apud"), "apud");});
test("aq -> aq", function() {deepEqual( Stem("aq"), "aq");});
test("aqui -> aqui", function() {deepEqual( Stem("aqui"), "aqui");});
test("aquila -> aquil", function() {deepEqual( Stem("aquila"), "aquil");});
test("ar -> ar", function() {deepEqual( Stem("ar"), "ar");});
test("arà -> arà", function() {deepEqual( Stem("arà"), "arà");});
test("arab -> arab", function() {deepEqual( Stem("arab"), "arab");});
test("arabe -> arab", function() {deepEqual( Stem("arabe"), "arab");});
test("arabi -> arab", function() {deepEqual( Stem("arabi"), "arab");});
test("arabia -> arab", function() {deepEqual( Stem("arabia"), "arab");});
test("arabica -> arab", function() {deepEqual( Stem("arabica"), "arab");});
test("arabo -> arab", function() {deepEqual( Stem("arabo"), "arab");});
test("arafat -> arafat", function() {deepEqual( Stem("arafat"), "arafat");});
test("aragon -> aragon", function() {deepEqual( Stem("aragon"), "aragon");});
test("aragosta -> aragost", function() {deepEqual( Stem("aragosta"), "aragost");});
test("aran -> aran", function() {deepEqual( Stem("aran"), "aran");});
test("arancia -> aranc", function() {deepEqual( Stem("arancia"), "aranc");});
test("arangino -> arangin", function() {deepEqual( Stem("arangino"), "arangin");});
test("arbiter -> arbiter", function() {deepEqual( Stem("arbiter"), "arbiter");});
test("arbitrali -> arbitral", function() {deepEqual( Stem("arbitrali"), "arbitral");});
test("arbitramur -> arbitramur", function() {deepEqual( Stem("arbitramur"), "arbitramur");});
test("arbitraria -> arbitrar", function() {deepEqual( Stem("arbitraria"), "arbitrar");});
test("arbitrario -> arbitrar", function() {deepEqual( Stem("arbitrario"), "arbitrar");});
test("arbitri -> arbitr", function() {deepEqual( Stem("arbitri"), "arbitr");});
test("arbitrio -> arbitr", function() {deepEqual( Stem("arbitrio"), "arbitr");});
test("arbitro -> arbitr", function() {deepEqual( Stem("arbitro"), "arbitr");});
test("arca -> arca", function() {deepEqual( Stem("arca"), "arca");});
test("arcaica -> arcaic", function() {deepEqual( Stem("arcaica"), "arcaic");});
test("arcais -> arcais", function() {deepEqual( Stem("arcais"), "arcais");});
test("arce -> arce", function() {deepEqual( Stem("arce"), "arce");});
test("archeologia -> archeolog", function() {deepEqual( Stem("archeologia"), "archeolog");});
test("archeologica -> archeolog", function() {deepEqual( Stem("archeologica"), "archeolog");});
test("archeologici -> archeolog", function() {deepEqual( Stem("archeologici"), "archeolog");});
test("archeologico -> archeolog", function() {deepEqual( Stem("archeologico"), "archeolog");});
test("archetto -> archett", function() {deepEqual( Stem("archetto"), "archett");});
test("archi -> archi", function() {deepEqual( Stem("archi"), "archi");});
test("archibusi -> archibus", function() {deepEqual( Stem("archibusi"), "archibus");});
test("archimede -> archimed", function() {deepEqual( Stem("archimede"), "archimed");});
test("architettato -> architett", function() {deepEqual( Stem("architettato"), "architett");});
test("architettura -> architettur", function() {deepEqual( Stem("architettura"), "architettur");});
test("archivi -> archiv", function() {deepEqual( Stem("archivi"), "archiv");});
test("archivio -> archiv", function() {deepEqual( Stem("archivio"), "archiv");});
test("arci -> arci", function() {deepEqual( Stem("arci"), "arci");});
test("arcidiacono -> arcidiac", function() {deepEqual( Stem("arcidiacono"), "arcidiac");});
test("arcigni -> arcign", function() {deepEqual( Stem("arcigni"), "arcign");});
test("arcione -> arcion", function() {deepEqual( Stem("arcione"), "arcion");});
test("arciospedale -> arciospedal", function() {deepEqual( Stem("arciospedale"), "arciospedal");});
test("arcipelago -> arcipelag", function() {deepEqual( Stem("arcipelago"), "arcipelag");});
test("arciprete -> arcipr", function() {deepEqual( Stem("arciprete"), "arcipr");});
test("arcivescovado -> arcivescovad", function() {deepEqual( Stem("arcivescovado"), "arcivescovad");});
test("arcivescovile -> arcivescovil", function() {deepEqual( Stem("arcivescovile"), "arcivescovil");});
test("arcivescovo -> arcivescov", function() {deepEqual( Stem("arcivescovo"), "arcivescov");});
test("arco -> arco", function() {deepEqual( Stem("arco"), "arco");});
test("arcobaleno -> arcobalen", function() {deepEqual( Stem("arcobaleno"), "arcobalen");});
test("arcore -> arcor", function() {deepEqual( Stem("arcore"), "arcor");});
test("ard -> ard", function() {deepEqual( Stem("ard"), "ard");});
test("ardant -> ardant", function() {deepEqual( Stem("ardant"), "ardant");});
test("ardente -> ardent", function() {deepEqual( Stem("ardente"), "ardent");});
test("ardentemente -> ardent", function() {deepEqual( Stem("ardentemente"), "ardent");});
test("ardenti -> ardent", function() {deepEqual( Stem("ardenti"), "ardent");});
test("ardeva -> ardev", function() {deepEqual( Stem("ardeva"), "ardev");});
test("ardirà -> ardir", function() {deepEqual( Stem("ardirà"), "ardir");});
test("ardire -> ardir", function() {deepEqual( Stem("ardire"), "ardir");});
test("ardiresti -> ardirest", function() {deepEqual( Stem("ardiresti"), "ardirest");});
test("ardisca -> ardisc", function() {deepEqual( Stem("ardisca"), "ardisc");});
test("ardisce -> ardisc", function() {deepEqual( Stem("ardisce"), "ardisc");});
test("ardiscono -> ardisc", function() {deepEqual( Stem("ardiscono"), "ardisc");});
test("ardisse -> ardiss", function() {deepEqual( Stem("ardisse"), "ardiss");});
test("ardita -> ardit", function() {deepEqual( Stem("ardita"), "ardit");});
test("arditi -> ardit", function() {deepEqual( Stem("arditi"), "ardit");});
test("ardito -> ardit", function() {deepEqual( Stem("ardito"), "ardit");});
test("ardiva -> ardiv", function() {deepEqual( Stem("ardiva"), "ardiv");});
test("ardor -> ardor", function() {deepEqual( Stem("ardor"), "ardor");});
test("ardore -> ardor", function() {deepEqual( Stem("ardore"), "ardor");});
test("ardori -> ardor", function() {deepEqual( Stem("ardori"), "ardor");});
test("ardua -> ardu", function() {deepEqual( Stem("ardua"), "ardu");});
test("arduo -> ardu", function() {deepEqual( Stem("arduo"), "ardu");});
test("area -> are", function() {deepEqual( Stem("area"), "are");});
test("aree -> are", function() {deepEqual( Stem("aree"), "are");});
test("arena -> aren", function() {deepEqual( Stem("arena"), "aren");});
test("arendo -> arend", function() {deepEqual( Stem("arendo"), "arend");});
test("aretina -> aretin", function() {deepEqual( Stem("aretina"), "aretin");});
test("arezzo -> arezz", function() {deepEqual( Stem("arezzo"), "arezz");});
test("argani -> argan", function() {deepEqual( Stem("argani"), "argan");});
test("argante -> argant", function() {deepEqual( Stem("argante"), "argant");});
test("argentei -> argente", function() {deepEqual( Stem("argentei"), "argente");});
test("argenteria -> argenter", function() {deepEqual( Stem("argenteria"), "argenter");});
test("argentina -> argentin", function() {deepEqual( Stem("argentina"), "argentin");});
test("argentine -> argentin", function() {deepEqual( Stem("argentine"), "argentin");});
test("argentini -> argentin", function() {deepEqual( Stem("argentini"), "argentin");});
test("argentino -> argentin", function() {deepEqual( Stem("argentino"), "argentin");});
test("argento -> argent", function() {deepEqual( Stem("argento"), "argent");});
test("argilla -> argill", function() {deepEqual( Stem("argilla"), "argill");});
test("arginare -> argin", function() {deepEqual( Stem("arginare"), "argin");});
test("argine -> argin", function() {deepEqual( Stem("argine"), "argin");});
test("argo -> argo", function() {deepEqual( Stem("argo"), "argo");});
test("argomentando -> argoment", function() {deepEqual( Stem("argomentando"), "argoment");});
test("argomentare -> argoment", function() {deepEqual( Stem("argomentare"), "argoment");});
test("argomentarlo -> argoment", function() {deepEqual( Stem("argomentarlo"), "argoment");});
test("argomentato -> argoment", function() {deepEqual( Stem("argomentato"), "argoment");});
test("argomenti -> argoment", function() {deepEqual( Stem("argomenti"), "argoment");});
test("argomento -> argoment", function() {deepEqual( Stem("argomento"), "argoment");});
test("argomentò -> argoment", function() {deepEqual( Stem("argomentò"), "argoment");});
test("argun -> argun", function() {deepEqual( Stem("argun"), "argun");});
test("arguto -> argut", function() {deepEqual( Stem("arguto"), "argut");});
test("aria -> ari", function() {deepEqual( Stem("aria"), "ari");});
test("ariani -> arian", function() {deepEqual( Stem("ariani"), "arian");});
test("ariano -> ari", function() {deepEqual( Stem("ariano"), "ari");});
test("arias -> arias", function() {deepEqual( Stem("arias"), "arias");});
test("arida -> arid", function() {deepEqual( Stem("arida"), "arid");});
test("aridi -> arid", function() {deepEqual( Stem("aridi"), "arid");});
test("arido -> arid", function() {deepEqual( Stem("arido"), "arid");});
test("arietando -> ariet", function() {deepEqual( Stem("arietando"), "ariet");});
test("ariete -> ari", function() {deepEqual( Stem("ariete"), "ari");});
test("ariglieria -> ariglier", function() {deepEqual( Stem("ariglieria"), "ariglier");});
test("aringa -> aring", function() {deepEqual( Stem("aringa"), "aring");});
test("ariston -> ariston", function() {deepEqual( Stem("ariston"), "ariston");});
test("aristotile -> aristotil", function() {deepEqual( Stem("aristotile"), "aristotil");});
test("aritmetica -> aritmet", function() {deepEqual( Stem("aritmetica"), "aritmet");});
test("arivare -> ariv", function() {deepEqual( Stem("arivare"), "ariv");});
test("arix -> arix", function() {deepEqual( Stem("arix"), "arix");});
test("arlacchi -> arlacc", function() {deepEqual( Stem("arlacchi"), "arlacc");});
test("arlati -> arlat", function() {deepEqual( Stem("arlati"), "arlat");});
test("arlecchino -> arlecchin", function() {deepEqual( Stem("arlecchino"), "arlecchin");});
test("arma -> arma", function() {deepEqual( Stem("arma"), "arma");});
test("armacollo -> armacoll", function() {deepEqual( Stem("armacollo"), "armacoll");});
test("armadi -> armad", function() {deepEqual( Stem("armadi"), "armad");});
test("armadio -> armad", function() {deepEqual( Stem("armadio"), "armad");});
test("armamentario -> armamentar", function() {deepEqual( Stem("armamentario"), "armamentar");});
test("armamenti -> armament", function() {deepEqual( Stem("armamenti"), "armament");});
test("armamento -> armament", function() {deepEqual( Stem("armamento"), "armament");});
test("armando -> armand", function() {deepEqual( Stem("armando"), "armand");});
test("armani -> arman", function() {deepEqual( Stem("armani"), "arman");});
test("armano -> arman", function() {deepEqual( Stem("armano"), "arman");});
test("armare -> armar", function() {deepEqual( Stem("armare"), "armar");});
test("armata -> armat", function() {deepEqual( Stem("armata"), "armat");});
test("armate -> armat", function() {deepEqual( Stem("armate"), "armat");});
test("armati -> armat", function() {deepEqual( Stem("armati"), "armat");});
test("armato -> armat", function() {deepEqual( Stem("armato"), "armat");});
test("armatore -> armator", function() {deepEqual( Stem("armatore"), "armator");});
test("armatoriale -> armatorial", function() {deepEqual( Stem("armatoriale"), "armatorial");});
test("armatura -> armatur", function() {deepEqual( Stem("armatura"), "armatur");});
test("arme -> arme", function() {deepEqual( Stem("arme"), "arme");});
test("armena -> armen", function() {deepEqual( Stem("armena"), "armen");});
test("armeria -> armer", function() {deepEqual( Stem("armeria"), "armer");});
test("armi -> armi", function() {deepEqual( Stem("armi"), "armi");});
test("armin -> armin", function() {deepEqual( Stem("armin"), "armin");});
test("armistizio -> armistiz", function() {deepEqual( Stem("armistizio"), "armistiz");});
test("armonia -> armon", function() {deepEqual( Stem("armonia"), "armon");});
test("armonizzare -> armonizz", function() {deepEqual( Stem("armonizzare"), "armonizz");});
test("armonizzazione -> armonizz", function() {deepEqual( Stem("armonizzazione"), "armonizz");});
test("armstrong -> armstrong", function() {deepEqual( Stem("armstrong"), "armstrong");});
test("arnaro -> arnar", function() {deepEqual( Stem("arnaro"), "arnar");});
test("arnese -> arnes", function() {deepEqual( Stem("arnese"), "arnes");});
test("arnesi -> arnes", function() {deepEqual( Stem("arnesi"), "arnes");});
test("aroldo -> arold", function() {deepEqual( Stem("aroldo"), "arold");});
test("arrabattarsi -> arrabatt", function() {deepEqual( Stem("arrabattarsi"), "arrabatt");});
test("arrabbiata -> arrabb", function() {deepEqual( Stem("arrabbiata"), "arrabb");});
test("arrabbiatamente -> arrabbiat", function() {deepEqual( Stem("arrabbiatamente"), "arrabbiat");});
test("arrabbiato -> arrabb", function() {deepEqual( Stem("arrabbiato"), "arrabb");});
test("arrampicandosi -> arrampic", function() {deepEqual( Stem("arrampicandosi"), "arrampic");});
test("arrampicarci -> arrampic", function() {deepEqual( Stem("arrampicarci"), "arrampic");});
test("arrampicarsi -> arrampic", function() {deepEqual( Stem("arrampicarsi"), "arrampic");});
test("arrampicati -> arrampic", function() {deepEqual( Stem("arrampicati"), "arrampic");});
test("arrampicavano -> arrampic", function() {deepEqual( Stem("arrampicavano"), "arrampic");});
test("arrantolata -> arrantol", function() {deepEqual( Stem("arrantolata"), "arrantol");});
test("arrantolato -> arrantol", function() {deepEqual( Stem("arrantolato"), "arrantol");});
test("arrapinavo -> arrapin", function() {deepEqual( Stem("arrapinavo"), "arrapin");});
test("arrenato -> arren", function() {deepEqual( Stem("arrenato"), "arren");});
test("arrende -> arrend", function() {deepEqual( Stem("arrende"), "arrend");});
test("arrendere -> arrend", function() {deepEqual( Stem("arrendere"), "arrend");});
test("arrendersi -> arrend", function() {deepEqual( Stem("arrendersi"), "arrend");});
test("arrendessero -> arrend", function() {deepEqual( Stem("arrendessero"), "arrend");});
test("arrendo -> arrend", function() {deepEqual( Stem("arrendo"), "arrend");});
test("arrestar -> arrest", function() {deepEqual( Stem("arrestar"), "arrest");});
test("arrestare -> arrest", function() {deepEqual( Stem("arrestare"), "arrest");});
test("arrestata -> arrest", function() {deepEqual( Stem("arrestata"), "arrest");});
test("arrestate -> arrest", function() {deepEqual( Stem("arrestate"), "arrest");});
test("arrestati -> arrest", function() {deepEqual( Stem("arrestati"), "arrest");});
test("arrestato -> arrest", function() {deepEqual( Stem("arrestato"), "arrest");});
test("arrestatori -> arrest", function() {deepEqual( Stem("arrestatori"), "arrest");});
test("arresti -> arrest", function() {deepEqual( Stem("arresti"), "arrest");});
test("arrestino -> arrestin", function() {deepEqual( Stem("arrestino"), "arrestin");});
test("arresto -> arrest", function() {deepEqual( Stem("arresto"), "arrest");});
test("arretra -> arretr", function() {deepEqual( Stem("arretra"), "arretr");});
test("arretramento -> arretr", function() {deepEqual( Stem("arretramento"), "arretr");});
test("arretrato -> arretr", function() {deepEqual( Stem("arretrato"), "arretr");});
test("arretrava -> arretr", function() {deepEqual( Stem("arretrava"), "arretr");});
test("arricchimento -> arricc", function() {deepEqual( Stem("arricchimento"), "arricc");});
test("arricchir -> arricc", function() {deepEqual( Stem("arricchir"), "arricc");});
test("arricchisce -> arricc", function() {deepEqual( Stem("arricchisce"), "arricc");});
test("arricchito -> arricc", function() {deepEqual( Stem("arricchito"), "arricc");});
test("arricciar -> arricc", function() {deepEqual( Stem("arricciar"), "arricc");});
test("arricciare -> arricc", function() {deepEqual( Stem("arricciare"), "arricc");});
test("arricciati -> arricc", function() {deepEqual( Stem("arricciati"), "arricc");});
test("arricciato -> arricc", function() {deepEqual( Stem("arricciato"), "arricc");});
test("arride -> arrid", function() {deepEqual( Stem("arride"), "arrid");});
test("arrigo -> arrig", function() {deepEqual( Stem("arrigo"), "arrig");});
test("arringa -> arring", function() {deepEqual( Stem("arringa"), "arring");});
test("arringo -> arring", function() {deepEqual( Stem("arringo"), "arring");});
test("arrischia -> arrisc", function() {deepEqual( Stem("arrischia"), "arrisc");});
test("arrischiar -> arrisc", function() {deepEqual( Stem("arrischiar"), "arrisc");});
test("arrischiare -> arrisc", function() {deepEqual( Stem("arrischiare"), "arrisc");});
test("arrischiarsi -> arrisc", function() {deepEqual( Stem("arrischiarsi"), "arrisc");});
test("arrischiata -> arrisc", function() {deepEqual( Stem("arrischiata"), "arrisc");});
test("arrischiati -> arrisc", function() {deepEqual( Stem("arrischiati"), "arrisc");});
test("arrischiato -> arrisc", function() {deepEqual( Stem("arrischiato"), "arrisc");});
test("arrischiava -> arrisc", function() {deepEqual( Stem("arrischiava"), "arrisc");});
test("arriva -> arriv", function() {deepEqual( Stem("arriva"), "arriv");});
test("arrivai -> arriva", function() {deepEqual( Stem("arrivai"), "arriva");});
test("arrivando -> arriv", function() {deepEqual( Stem("arrivando"), "arriv");});
test("arrivandogli -> arriv", function() {deepEqual( Stem("arrivandogli"), "arriv");});
test("arrivano -> arriv", function() {deepEqual( Stem("arrivano"), "arriv");});
test("arrivar -> arriv", function() {deepEqual( Stem("arrivar"), "arriv");});
test("arrivarci -> arriv", function() {deepEqual( Stem("arrivarci"), "arriv");});
test("arrivare -> arriv", function() {deepEqual( Stem("arrivare"), "arriv");});
test("arrivaron -> arrivaron", function() {deepEqual( Stem("arrivaron"), "arrivaron");});
test("arrivarono -> arriv", function() {deepEqual( Stem("arrivarono"), "arriv");});
test("arrivarsi -> arriv", function() {deepEqual( Stem("arrivarsi"), "arriv");});
test("arrivasse -> arriv", function() {deepEqual( Stem("arrivasse"), "arriv");});
test("arrivassero -> arriv", function() {deepEqual( Stem("arrivassero"), "arriv");});
test("arrivata -> arriv", function() {deepEqual( Stem("arrivata"), "arriv");});
test("arrivate -> arriv", function() {deepEqual( Stem("arrivate"), "arriv");});
test("arrivati -> arriv", function() {deepEqual( Stem("arrivati"), "arriv");});
test("arrivato -> arriv", function() {deepEqual( Stem("arrivato"), "arriv");});
test("arrivatoci -> arrivatoc", function() {deepEqual( Stem("arrivatoci"), "arrivatoc");});
test("arrivava -> arriv", function() {deepEqual( Stem("arrivava"), "arriv");});
test("arrivavan -> arrivavan", function() {deepEqual( Stem("arrivavan"), "arrivavan");});
test("arrivavano -> arriv", function() {deepEqual( Stem("arrivavano"), "arriv");});
test("arrivederci -> arrived", function() {deepEqual( Stem("arrivederci"), "arrived");});
test("arriverà -> arriv", function() {deepEqual( Stem("arriverà"), "arriv");});
test("arriveranno -> arriv", function() {deepEqual( Stem("arriveranno"), "arriv");});
test("arriverebbe -> arriv", function() {deepEqual( Stem("arriverebbe"), "arriv");});
test("arriverete -> arriv", function() {deepEqual( Stem("arriverete"), "arriv");});
test("arriverò -> arriv", function() {deepEqual( Stem("arriverò"), "arriv");});
test("arrivi -> arriv", function() {deepEqual( Stem("arrivi"), "arriv");});
test("arriviamo -> arriv", function() {deepEqual( Stem("arriviamo"), "arriv");});
test("arrivino -> arrivin", function() {deepEqual( Stem("arrivino"), "arrivin");});
test("arrivo -> arriv", function() {deepEqual( Stem("arrivo"), "arriv");});
test("arrivò -> arriv", function() {deepEqual( Stem("arrivò"), "arriv");});
test("arrocca -> arrocc", function() {deepEqual( Stem("arrocca"), "arrocc");});
test("arroccata -> arrocc", function() {deepEqual( Stem("arroccata"), "arrocc");});
test("arrogante -> arrog", function() {deepEqual( Stem("arrogante"), "arrog");});
test("arroganza -> arrog", function() {deepEqual( Stem("arroganza"), "arrog");});
test("arrolati -> arrol", function() {deepEqual( Stem("arrolati"), "arrol");});
test("arrolato -> arrol", function() {deepEqual( Stem("arrolato"), "arrol");});
test("arrossamento -> arross", function() {deepEqual( Stem("arrossamento"), "arross");});
test("arrossendo -> arross", function() {deepEqual( Stem("arrossendo"), "arross");});
test("arrossì -> arross", function() {deepEqual( Stem("arrossì"), "arross");});
test("arrossire -> arross", function() {deepEqual( Stem("arrossire"), "arross");});
test("arrossirne -> arross", function() {deepEqual( Stem("arrossirne"), "arross");});
test("arrostire -> arrost", function() {deepEqual( Stem("arrostire"), "arrost");});
test("arrosto -> arrost", function() {deepEqual( Stem("arrosto"), "arrost");});
test("arrotar -> arrot", function() {deepEqual( Stem("arrotar"), "arrot");});
test("arrovellava -> arrovell", function() {deepEqual( Stem("arrovellava"), "arrovell");});
test("arrovesciarsi -> arrovesc", function() {deepEqual( Stem("arrovesciarsi"), "arrovesc");});
test("arrovesciata -> arrovesc", function() {deepEqual( Stem("arrovesciata"), "arrovesc");});
test("arrovesciate -> arrovesc", function() {deepEqual( Stem("arrovesciate"), "arrovesc");});
test("arrovesciato -> arrovesc", function() {deepEqual( Stem("arrovesciato"), "arrovesc");});
test("arruffando -> arruff", function() {deepEqual( Stem("arruffando"), "arruff");});
test("arruffata -> arruff", function() {deepEqual( Stem("arruffata"), "arruff");});
test("arruffate -> arruff", function() {deepEqual( Stem("arruffate"), "arruff");});
test("arruffati -> arruff", function() {deepEqual( Stem("arruffati"), "arruff");});
test("arruffato -> arruff", function() {deepEqual( Stem("arruffato"), "arruff");});
test("arruolamento -> arruol", function() {deepEqual( Stem("arruolamento"), "arruol");});
test("arsione -> arsion", function() {deepEqual( Stem("arsione"), "arsion");});
test("art -> art", function() {deepEqual( Stem("art"), "art");});
test("artagnan -> artagnan", function() {deepEqual( Stem("artagnan"), "artagnan");});
test("arte -> arte", function() {deepEqual( Stem("arte"), "arte");});
test("artefice -> artef", function() {deepEqual( Stem("artefice"), "artef");});
test("artefici -> artef", function() {deepEqual( Stem("artefici"), "artef");});
test("artemis -> artemis", function() {deepEqual( Stem("artemis"), "artemis");});
test("arteriosclerosi -> arterioscler", function() {deepEqual( Stem("arteriosclerosi"), "arterioscler");});
test("arti -> arti", function() {deepEqual( Stem("arti"), "arti");});
test("artica -> artic", function() {deepEqual( Stem("artica"), "artic");});
test("articola -> articol", function() {deepEqual( Stem("articola"), "articol");});
test("articolano -> articol", function() {deepEqual( Stem("articolano"), "articol");});
test("articolar -> articol", function() {deepEqual( Stem("articolar"), "articol");});
test("articolata -> articol", function() {deepEqual( Stem("articolata"), "articol");});
test("articolati -> articol", function() {deepEqual( Stem("articolati"), "articol");});
test("articolato -> articol", function() {deepEqual( Stem("articolato"), "articol");});
test("articolazione -> articol", function() {deepEqual( Stem("articolazione"), "articol");});
test("articolerà -> articol", function() {deepEqual( Stem("articolerà"), "articol");});
test("articoli -> articol", function() {deepEqual( Stem("articoli"), "articol");});
test("articolo -> articol", function() {deepEqual( Stem("articolo"), "articol");});
test("articolò -> articol", function() {deepEqual( Stem("articolò"), "articol");});
test("artificiale -> artificial", function() {deepEqual( Stem("artificiale"), "artificial");});
test("artifizi -> artifiz", function() {deepEqual( Stem("artifizi"), "artifiz");});
test("artifiziale -> artifizial", function() {deepEqual( Stem("artifiziale"), "artifizial");});
test("artifizio -> artifiz", function() {deepEqual( Stem("artifizio"), "artifiz");});
test("artigianato -> artigian", function() {deepEqual( Stem("artigianato"), "artigian");});
test("artigiane -> artigian", function() {deepEqual( Stem("artigiane"), "artigian");});
test("artigianello -> artigianell", function() {deepEqual( Stem("artigianello"), "artigianell");});
test("artigiani -> artigian", function() {deepEqual( Stem("artigiani"), "artigian");});
test("artigiano -> artig", function() {deepEqual( Stem("artigiano"), "artig");});
test("artigli -> artigl", function() {deepEqual( Stem("artigli"), "artigl");});
test("artiglieria -> artiglier", function() {deepEqual( Stem("artiglieria"), "artiglier");});
test("artista -> artist", function() {deepEqual( Stem("artista"), "artist");});
test("artisti -> artist", function() {deepEqual( Stem("artisti"), "artist");});
test("artistici -> artist", function() {deepEqual( Stem("artistici"), "artist");});
test("artistico -> artist", function() {deepEqual( Stem("artistico"), "artist");});
test("artium -> artium", function() {deepEqual( Stem("artium"), "artium");});
test("artoni -> arton", function() {deepEqual( Stem("artoni"), "arton");});
test("arturo -> artur", function() {deepEqual( Stem("arturo"), "artur");});
test("arvor -> arvor", function() {deepEqual( Stem("arvor"), "arvor");});
test("as -> as", function() {deepEqual( Stem("as"), "as");});
test("ascella -> ascell", function() {deepEqual( Stem("ascella"), "ascell");});
test("ascendere -> ascend", function() {deepEqual( Stem("ascendere"), "ascend");});
test("ascesa -> asces", function() {deepEqual( Stem("ascesa"), "asces");});
test("asciugandosi -> asciug", function() {deepEqual( Stem("asciugandosi"), "asciug");});
test("asciugare -> asciug", function() {deepEqual( Stem("asciugare"), "asciug");});
test("asciugata -> asciug", function() {deepEqual( Stem("asciugata"), "asciug");});
test("asciugate -> asciug", function() {deepEqual( Stem("asciugate"), "asciug");});
test("asciugava -> asciug", function() {deepEqual( Stem("asciugava"), "asciug");});
test("asciughi -> asciug", function() {deepEqual( Stem("asciughi"), "asciug");});
test("asciugò -> asciug", function() {deepEqual( Stem("asciugò"), "asciug");});
test("asciutta -> asciutt", function() {deepEqual( Stem("asciutta"), "asciutt");});
test("asciutto -> asciutt", function() {deepEqual( Stem("asciutto"), "asciutt");});
test("ascoli -> ascol", function() {deepEqual( Stem("ascoli"), "ascol");});
test("ascolta -> ascolt", function() {deepEqual( Stem("ascolta"), "ascolt");});
test("ascoltan -> ascoltan", function() {deepEqual( Stem("ascoltan"), "ascoltan");});
test("ascoltano -> ascolt", function() {deepEqual( Stem("ascoltano"), "ascolt");});
test("ascoltanti -> ascolt", function() {deepEqual( Stem("ascoltanti"), "ascolt");});
test("ascoltar -> ascolt", function() {deepEqual( Stem("ascoltar"), "ascolt");});
test("ascoltare -> ascolt", function() {deepEqual( Stem("ascoltare"), "ascolt");});
test("ascoltarli -> ascolt", function() {deepEqual( Stem("ascoltarli"), "ascolt");});
test("ascoltarmi -> ascolt", function() {deepEqual( Stem("ascoltarmi"), "ascolt");});
test("ascoltata -> ascolt", function() {deepEqual( Stem("ascoltata"), "ascolt");});
test("ascoltate -> ascolt", function() {deepEqual( Stem("ascoltate"), "ascolt");});
test("ascoltatemi -> ascoltatem", function() {deepEqual( Stem("ascoltatemi"), "ascoltatem");});
test("ascoltati -> ascolt", function() {deepEqual( Stem("ascoltati"), "ascolt");});
test("ascoltato -> ascolt", function() {deepEqual( Stem("ascoltato"), "ascolt");});
test("ascoltatore -> ascolt", function() {deepEqual( Stem("ascoltatore"), "ascolt");});
test("ascoltatori -> ascolt", function() {deepEqual( Stem("ascoltatori"), "ascolt");});
test("ascoltatrice -> ascolt", function() {deepEqual( Stem("ascoltatrice"), "ascolt");});
test("ascoltava -> ascolt", function() {deepEqual( Stem("ascoltava"), "ascolt");});
test("ascolti -> ascolt", function() {deepEqual( Stem("ascolti"), "ascolt");});
test("ascoltiamo -> ascolt", function() {deepEqual( Stem("ascoltiamo"), "ascolt");});
test("ascolto -> ascolt", function() {deepEqual( Stem("ascolto"), "ascolt");});
test("ascoltò -> ascolt", function() {deepEqual( Stem("ascoltò"), "ascolt");});
test("ascritta -> ascritt", function() {deepEqual( Stem("ascritta"), "ascritt");});
test("asher -> asher", function() {deepEqual( Stem("asher"), "asher");});
test("asi -> asi", function() {deepEqual( Stem("asi"), "asi");});
test("asia -> asi", function() {deepEqual( Stem("asia"), "asi");});
test("asiago -> asiag", function() {deepEqual( Stem("asiago"), "asiag");});
test("asiatici -> asiat", function() {deepEqual( Stem("asiatici"), "asiat");});
test("asili -> asil", function() {deepEqual( Stem("asili"), "asil");});
test("asilo -> asil", function() {deepEqual( Stem("asilo"), "asil");});
test("asinelli -> asinell", function() {deepEqual( Stem("asinelli"), "asinell");});
test("asino -> asin", function() {deepEqual( Stem("asino"), "asin");});
test("aslan -> aslan", function() {deepEqual( Stem("aslan"), "aslan");});
test("aspetta -> aspett", function() {deepEqual( Stem("aspetta"), "aspett");});
test("aspettami -> aspettam", function() {deepEqual( Stem("aspettami"), "aspettam");});
test("aspettan -> aspettan", function() {deepEqual( Stem("aspettan"), "aspettan");});
test("aspettando -> aspett", function() {deepEqual( Stem("aspettando"), "aspett");});
test("aspettandola -> aspett", function() {deepEqual( Stem("aspettandola"), "aspett");});
test("aspettano -> aspett", function() {deepEqual( Stem("aspettano"), "aspett");});
test("aspettar -> aspett", function() {deepEqual( Stem("aspettar"), "aspett");});
test("aspettare -> aspett", function() {deepEqual( Stem("aspettare"), "aspett");});
test("aspettarla -> aspett", function() {deepEqual( Stem("aspettarla"), "aspett");});
test("aspettarli -> aspett", function() {deepEqual( Stem("aspettarli"), "aspett");});
test("aspettarlo -> aspett", function() {deepEqual( Stem("aspettarlo"), "aspett");});
test("aspettarmi -> aspett", function() {deepEqual( Stem("aspettarmi"), "aspett");});
test("aspettarsi -> aspett", function() {deepEqual( Stem("aspettarsi"), "aspett");});
test("aspettarvi -> aspett", function() {deepEqual( Stem("aspettarvi"), "aspett");});
test("aspettasse -> aspett", function() {deepEqual( Stem("aspettasse"), "aspett");});
test("aspettata -> aspett", function() {deepEqual( Stem("aspettata"), "aspett");});
test("aspettate -> aspett", function() {deepEqual( Stem("aspettate"), "aspett");});
test("aspettatemi -> aspettatem", function() {deepEqual( Stem("aspettatemi"), "aspettatem");});
test("aspettati -> aspett", function() {deepEqual( Stem("aspettati"), "aspett");});
test("aspettativa -> aspett", function() {deepEqual( Stem("aspettativa"), "aspett");});
test("aspettative -> aspett", function() {deepEqual( Stem("aspettative"), "aspett");});
test("aspettato -> aspett", function() {deepEqual( Stem("aspettato"), "aspett");});
test("aspettava -> aspett", function() {deepEqual( Stem("aspettava"), "aspett");});
test("aspettavamo -> aspett", function() {deepEqual( Stem("aspettavamo"), "aspett");});
test("aspettavan -> aspettavan", function() {deepEqual( Stem("aspettavan"), "aspettavan");});
test("aspettavano -> aspett", function() {deepEqual( Stem("aspettavano"), "aspett");});
test("aspettavo -> aspett", function() {deepEqual( Stem("aspettavo"), "aspett");});
test("aspettazione -> aspett", function() {deepEqual( Stem("aspettazione"), "aspett");});
test("aspetterà -> aspett", function() {deepEqual( Stem("aspetterà"), "aspett");});
test("aspetteranno -> aspett", function() {deepEqual( Stem("aspetteranno"), "aspett");});
test("aspetterebbe -> aspett", function() {deepEqual( Stem("aspetterebbe"), "aspett");});
test("aspetterò -> aspett", function() {deepEqual( Stem("aspetterò"), "aspett");});
test("aspetti -> aspett", function() {deepEqual( Stem("aspetti"), "aspett");});
test("aspettiamo -> aspett", function() {deepEqual( Stem("aspettiamo"), "aspett");});
test("aspetto -> aspett", function() {deepEqual( Stem("aspetto"), "aspett");});
test("aspira -> aspir", function() {deepEqual( Stem("aspira"), "aspir");});
test("aspirano -> aspir", function() {deepEqual( Stem("aspirano"), "aspir");});
test("aspiranti -> aspir", function() {deepEqual( Stem("aspiranti"), "aspir");});
test("aspirare -> aspir", function() {deepEqual( Stem("aspirare"), "aspir");});
test("aspirato -> aspir", function() {deepEqual( Stem("aspirato"), "aspir");});
test("aspirazioni -> aspir", function() {deepEqual( Stem("aspirazioni"), "aspir");});
test("aspo -> aspo", function() {deepEqual( Stem("aspo"), "aspo");});
test("aspra -> aspra", function() {deepEqual( Stem("aspra"), "aspra");});
test("aspramente -> aspr", function() {deepEqual( Stem("aspramente"), "aspr");});
test("aspre -> aspre", function() {deepEqual( Stem("aspre"), "aspre");});
test("asprilla -> asprill", function() {deepEqual( Stem("asprilla"), "asprill");});
test("aspro -> aspro", function() {deepEqual( Stem("aspro"), "aspro");});
test("ass -> ass", function() {deepEqual( Stem("ass"), "ass");});
test("assaggi -> assagg", function() {deepEqual( Stem("assaggi"), "assagg");});
test("assaggiarlo -> assagg", function() {deepEqual( Stem("assaggiarlo"), "assagg");});
test("assaggiarne -> assagg", function() {deepEqual( Stem("assaggiarne"), "assagg");});
test("assaggiate -> assagg", function() {deepEqual( Stem("assaggiate"), "assagg");});
test("assai -> assa", function() {deepEqual( Stem("assai"), "assa");});
test("assalirono -> assal", function() {deepEqual( Stem("assalirono"), "assal");});
test("assalita -> assal", function() {deepEqual( Stem("assalita"), "assal");});
test("assaliti -> assal", function() {deepEqual( Stem("assaliti"), "assal");});
test("assalito -> assal", function() {deepEqual( Stem("assalito"), "assal");});
test("assalitori -> assalitor", function() {deepEqual( Stem("assalitori"), "assalitor");});
test("assalti -> assalt", function() {deepEqual( Stem("assalti"), "assalt");});
test("assalto -> assalt", function() {deepEqual( Stem("assalto"), "assalt");});
test("assaporando -> assapor", function() {deepEqual( Stem("assaporando"), "assapor");});
test("assaporare -> assapor", function() {deepEqual( Stem("assaporare"), "assapor");});
test("assaporato -> assapor", function() {deepEqual( Stem("assaporato"), "assapor");});
test("assassinà -> assassin", function() {deepEqual( Stem("assassinà"), "assassin");});
test("assassinare -> assassin", function() {deepEqual( Stem("assassinare"), "assassin");});
test("assassinata -> assassin", function() {deepEqual( Stem("assassinata"), "assassin");});
test("assassinato -> assassin", function() {deepEqual( Stem("assassinato"), "assassin");});
test("assassini -> assassin", function() {deepEqual( Stem("assassini"), "assassin");});
test("assassinio -> assassin", function() {deepEqual( Stem("assassinio"), "assassin");});
test("assassino -> assassin", function() {deepEqual( Stem("assassino"), "assassin");});
test("asse -> asse", function() {deepEqual( Stem("asse"), "asse");});
test("assecondare -> assecond", function() {deepEqual( Stem("assecondare"), "assecond");});
test("assedia -> assed", function() {deepEqual( Stem("assedia"), "assed");});
test("assediata -> assed", function() {deepEqual( Stem("assediata"), "assed");});
test("assediati -> assed", function() {deepEqual( Stem("assediati"), "assed");});
test("assediato -> assed", function() {deepEqual( Stem("assediato"), "assed");});
test("assediava -> assed", function() {deepEqual( Stem("assediava"), "assed");});
test("assediavano -> assed", function() {deepEqual( Stem("assediavano"), "assed");});
test("assedio -> assed", function() {deepEqual( Stem("assedio"), "assed");});
test("assegna -> assegn", function() {deepEqual( Stem("assegna"), "assegn");});
test("assegnamento -> assegn", function() {deepEqual( Stem("assegnamento"), "assegn");});
test("assegnandone -> assegn", function() {deepEqual( Stem("assegnandone"), "assegn");});
test("assegnar -> assegn", function() {deepEqual( Stem("assegnar"), "assegn");});
test("assegnare -> assegn", function() {deepEqual( Stem("assegnare"), "assegn");});
test("assegnarne -> assegn", function() {deepEqual( Stem("assegnarne"), "assegn");});
test("assegnata -> assegn", function() {deepEqual( Stem("assegnata"), "assegn");});
test("assegnataci -> assegnatac", function() {deepEqual( Stem("assegnataci"), "assegnatac");});
test("assegnatagli -> assegnatagl", function() {deepEqual( Stem("assegnatagli"), "assegnatagl");});
test("assegnate -> assegn", function() {deepEqual( Stem("assegnate"), "assegn");});
test("assegnati -> assegn", function() {deepEqual( Stem("assegnati"), "assegn");});
test("assegnatigli -> assegnatigl", function() {deepEqual( Stem("assegnatigli"), "assegnatigl");});
test("assegnato -> assegn", function() {deepEqual( Stem("assegnato"), "assegn");});
test("assegnazioni -> assegn", function() {deepEqual( Stem("assegnazioni"), "assegn");});
test("assegni -> assegn", function() {deepEqual( Stem("assegni"), "assegn");});
test("assegno -> assegn", function() {deepEqual( Stem("assegno"), "assegn");});
test("assegnò -> assegn", function() {deepEqual( Stem("assegnò"), "assegn");});
test("assembela -> assembel", function() {deepEqual( Stem("assembela"), "assembel");});
test("assemble -> assembl", function() {deepEqual( Stem("assemble"), "assembl");});
test("assemblea -> assemble", function() {deepEqual( Stem("assemblea"), "assemble");});
test("assemblee -> assemble", function() {deepEqual( Stem("assemblee"), "assemble");});
test("assennatezza -> assennatezz", function() {deepEqual( Stem("assennatezza"), "assennatezz");});
test("assennato -> assenn", function() {deepEqual( Stem("assennato"), "assenn");});
test("assenso -> assens", function() {deepEqual( Stem("assenso"), "assens");});
test("assente -> assent", function() {deepEqual( Stem("assente"), "assent");});
test("assenteismo -> assent", function() {deepEqual( Stem("assenteismo"), "assent");});
test("assenteista -> assent", function() {deepEqual( Stem("assenteista"), "assent");});
test("assenteisti -> assent", function() {deepEqual( Stem("assenteisti"), "assent");});
test("assenti -> assent", function() {deepEqual( Stem("assenti"), "assent");});
test("assentimur -> assentimur", function() {deepEqual( Stem("assentimur"), "assentimur");});
test("assenza -> assenz", function() {deepEqual( Stem("assenza"), "assenz");});
test("assenze -> assenz", function() {deepEqual( Stem("assenze"), "assenz");});
test("assenzio -> assenz", function() {deepEqual( Stem("assenzio"), "assenz");});
test("asserire -> asser", function() {deepEqual( Stem("asserire"), "asser");});
test("asserite -> asser", function() {deepEqual( Stem("asserite"), "asser");});
test("assertore -> assertor", function() {deepEqual( Stem("assertore"), "assertor");});
test("assessore -> assessor", function() {deepEqual( Stem("assessore"), "assessor");});
test("assessori -> assessor", function() {deepEqual( Stem("assessori"), "assessor");});
test("assestamento -> assest", function() {deepEqual( Stem("assestamento"), "assest");});
test("assestarci -> assest", function() {deepEqual( Stem("assestarci"), "assest");});
test("assestarsi -> assest", function() {deepEqual( Stem("assestarsi"), "assest");});
test("assestato -> assest", function() {deepEqual( Stem("assestato"), "assest");});
test("assetato -> asset", function() {deepEqual( Stem("assetato"), "asset");});
test("assettandosi -> assett", function() {deepEqual( Stem("assettandosi"), "assett");});
test("assetti -> assett", function() {deepEqual( Stem("assetti"), "assett");});
test("assetto -> assett", function() {deepEqual( Stem("assetto"), "assett");});
test("assicura -> assicur", function() {deepEqual( Stem("assicura"), "assicur");});
test("assicurandosi -> assicur", function() {deepEqual( Stem("assicurandosi"), "assicur");});
test("assicurano -> assicur", function() {deepEqual( Stem("assicurano"), "assicur");});
test("assicurar -> assicur", function() {deepEqual( Stem("assicurar"), "assicur");});
test("assicurarci -> assicur", function() {deepEqual( Stem("assicurarci"), "assicur");});
test("assicurare -> assicur", function() {deepEqual( Stem("assicurare"), "assicur");});
test("assicurarle -> assicur", function() {deepEqual( Stem("assicurarle"), "assicur");});
test("assicurarne -> assicur", function() {deepEqual( Stem("assicurarne"), "assicur");});
test("assicurarsene -> assicur", function() {deepEqual( Stem("assicurarsene"), "assicur");});
test("assicurasse -> assicur", function() {deepEqual( Stem("assicurasse"), "assicur");});
test("assicurata -> assicur", function() {deepEqual( Stem("assicurata"), "assicur");});
test("assicurati -> assicur", function() {deepEqual( Stem("assicurati"), "assicur");});
test("assicurativa -> assicur", function() {deepEqual( Stem("assicurativa"), "assicur");});
test("assicurative -> assicur", function() {deepEqual( Stem("assicurative"), "assicur");});
test("assicurativi -> assicur", function() {deepEqual( Stem("assicurativi"), "assicur");});
test("assicurato -> assicur", function() {deepEqual( Stem("assicurato"), "assicur");});
test("assicurava -> assicur", function() {deepEqual( Stem("assicurava"), "assicur");});
test("assicuravano -> assicur", function() {deepEqual( Stem("assicuravano"), "assicur");});
test("assicuraz -> assicuraz", function() {deepEqual( Stem("assicuraz"), "assicuraz");});
test("assicurazione -> assicur", function() {deepEqual( Stem("assicurazione"), "assicur");});
test("assicurazioni -> assicur", function() {deepEqual( Stem("assicurazioni"), "assicur");});
test("assicuri -> assicur", function() {deepEqual( Stem("assicuri"), "assicur");});
test("assicurò -> assicur", function() {deepEqual( Stem("assicurò"), "assicur");});
test("assidua -> assidu", function() {deepEqual( Stem("assidua"), "assidu");});
test("assiduamente -> assidu", function() {deepEqual( Stem("assiduamente"), "assidu");});
test("assieme -> assiem", function() {deepEqual( Stem("assieme"), "assiem");});
test("assillava -> assill", function() {deepEqual( Stem("assillava"), "assill");});
test("assiri -> assir", function() {deepEqual( Stem("assiri"), "assir");});
test("assise -> assis", function() {deepEqual( Stem("assise"), "assis");});
test("assisi -> assis", function() {deepEqual( Stem("assisi"), "assis");});
test("assist -> assist", function() {deepEqual( Stem("assist"), "assist");});
test("assista -> assist", function() {deepEqual( Stem("assista"), "assist");});
test("assiste -> assist", function() {deepEqual( Stem("assiste"), "assist");});
test("assistendo -> assist", function() {deepEqual( Stem("assistendo"), "assist");});
test("assistente -> assistent", function() {deepEqual( Stem("assistente"), "assistent");});
test("assistenti -> assistent", function() {deepEqual( Stem("assistenti"), "assistent");});
test("assistenza -> assistent", function() {deepEqual( Stem("assistenza"), "assistent");});
test("assistenziale -> assistenzial", function() {deepEqual( Stem("assistenziale"), "assistenzial");});
test("assistenzialismo -> assistenzial", function() {deepEqual( Stem("assistenzialismo"), "assistenzial");});
test("assisterà -> assist", function() {deepEqual( Stem("assisterà"), "assist");});
test("assistere -> assist", function() {deepEqual( Stem("assistere"), "assist");});
test("assistesse -> assistess", function() {deepEqual( Stem("assistesse"), "assistess");});
test("assistette -> assistett", function() {deepEqual( Stem("assistette"), "assistett");});
test("assistevano -> assist", function() {deepEqual( Stem("assistevano"), "assist");});
test("assistita -> assist", function() {deepEqual( Stem("assistita"), "assist");});
test("assistiti -> assist", function() {deepEqual( Stem("assistiti"), "assist");});
test("assistito -> assist", function() {deepEqual( Stem("assistito"), "assist");});
test("assitalia -> assital", function() {deepEqual( Stem("assitalia"), "assital");});
test("assito -> assit", function() {deepEqual( Stem("assito"), "assit");});
test("asso -> asso", function() {deepEqual( Stem("asso"), "asso");});
test("assocalor -> assocalor", function() {deepEqual( Stem("assocalor"), "assocalor");});
test("associare -> assoc", function() {deepEqual( Stem("associare"), "assoc");});
test("associata -> assoc", function() {deepEqual( Stem("associata"), "assoc");});
test("associate -> assoc", function() {deepEqual( Stem("associate"), "assoc");});
test("associated -> associated", function() {deepEqual( Stem("associated"), "associated");});
test("associato -> assoc", function() {deepEqual( Stem("associato"), "assoc");});
test("associazione -> assoc", function() {deepEqual( Stem("associazione"), "assoc");});
test("associazioni -> assoc", function() {deepEqual( Stem("associazioni"), "assoc");});
test("associazionismo -> associazion", function() {deepEqual( Stem("associazionismo"), "associazion");});
test("assoenergia -> assoenerg", function() {deepEqual( Stem("assoenergia"), "assoenerg");});
test("assoggettato -> assoggett", function() {deepEqual( Stem("assoggettato"), "assoggett");});
test("assoggettavano -> assoggett", function() {deepEqual( Stem("assoggettavano"), "assoggett");});
test("assolda -> assold", function() {deepEqual( Stem("assolda"), "assold");});
test("assoldati -> assold", function() {deepEqual( Stem("assoldati"), "assold");});
test("assoldato -> assold", function() {deepEqual( Stem("assoldato"), "assold");});
test("assolti -> assolt", function() {deepEqual( Stem("assolti"), "assolt");});
test("assolto -> assolt", function() {deepEqual( Stem("assolto"), "assolt");});
test("assoluta -> assol", function() {deepEqual( Stem("assoluta"), "assol");});
test("assolutamente -> assolut", function() {deepEqual( Stem("assolutamente"), "assolut");});
test("assolute -> assol", function() {deepEqual( Stem("assolute"), "assol");});
test("assoluti -> assol", function() {deepEqual( Stem("assoluti"), "assol");});
test("assolutizzante -> assolutizz", function() {deepEqual( Stem("assolutizzante"), "assolutizz");});
test("assoluto -> assol", function() {deepEqual( Stem("assoluto"), "assol");});
test("assolutoria -> assolutor", function() {deepEqual( Stem("assolutoria"), "assolutor");});
test("assoluzione -> assolu", function() {deepEqual( Stem("assoluzione"), "assolu");});
test("assolvere -> assolv", function() {deepEqual( Stem("assolvere"), "assolv");});
test("assomiglia -> assomigl", function() {deepEqual( Stem("assomiglia"), "assomigl");});
test("assomigliano -> assomigl", function() {deepEqual( Stem("assomigliano"), "assomigl");});
test("assomigliarsi -> assomigl", function() {deepEqual( Stem("assomigliarsi"), "assomigl");});
test("assonautiche -> assonaut", function() {deepEqual( Stem("assonautiche"), "assonaut");});
test("assopegno -> assopegn", function() {deepEqual( Stem("assopegno"), "assopegn");});
test("assopirono -> assop", function() {deepEqual( Stem("assopirono"), "assop");});
test("assopita -> assop", function() {deepEqual( Stem("assopita"), "assop");});
test("assorbimento -> assorb", function() {deepEqual( Stem("assorbimento"), "assorb");});
test("assorbire -> assorb", function() {deepEqual( Stem("assorbire"), "assorb");});
test("assorbito -> assorb", function() {deepEqual( Stem("assorbito"), "assorb");});
test("assordante -> assord", function() {deepEqual( Stem("assordante"), "assord");});
test("assortiti -> assort", function() {deepEqual( Stem("assortiti"), "assort");});
test("assorto -> assort", function() {deepEqual( Stem("assorto"), "assort");});
test("assottigliar -> assottigl", function() {deepEqual( Stem("assottigliar"), "assottigl");});
test("assottigliato -> assottigl", function() {deepEqual( Stem("assottigliato"), "assottigl");});
test("assuma -> assum", function() {deepEqual( Stem("assuma"), "assum");});
test("assumano -> assum", function() {deepEqual( Stem("assumano"), "assum");});
test("assume -> assum", function() {deepEqual( Stem("assume"), "assum");});
test("assumerà -> assum", function() {deepEqual( Stem("assumerà"), "assum");});
test("assumere -> assum", function() {deepEqual( Stem("assumere"), "assum");});
test("assumesse -> assumess", function() {deepEqual( Stem("assumesse"), "assumess");});
test("assumeva -> assum", function() {deepEqual( Stem("assumeva"), "assum");});
test("assumono -> assum", function() {deepEqual( Stem("assumono"), "assum");});
test("assunse -> assuns", function() {deepEqual( Stem("assunse"), "assuns");});
test("assunsero -> assunser", function() {deepEqual( Stem("assunsero"), "assunser");});
test("assunta -> assunt", function() {deepEqual( Stem("assunta"), "assunt");});
test("assunte -> assunt", function() {deepEqual( Stem("assunte"), "assunt");});
test("assunti -> assunt", function() {deepEqual( Stem("assunti"), "assunt");});
test("assunto -> assunt", function() {deepEqual( Stem("assunto"), "assunt");});
test("assunzione -> assunzion", function() {deepEqual( Stem("assunzione"), "assunzion");});
test("assunzioni -> assunzion", function() {deepEqual( Stem("assunzioni"), "assunzion");});
test("assurdo -> assurd", function() {deepEqual( Stem("assurdo"), "assurd");});
test("asta -> asta", function() {deepEqual( Stem("asta"), "asta");});
test("astanti -> astant", function() {deepEqual( Stem("astanti"), "astant");});
test("aste -> aste", function() {deepEqual( Stem("aste"), "aste");});
test("astenere -> asten", function() {deepEqual( Stem("astenere"), "asten");});
test("astenesse -> asteness", function() {deepEqual( Stem("astenesse"), "asteness");});
test("astenevano -> asten", function() {deepEqual( Stem("astenevano"), "asten");});
test("astensione -> astension", function() {deepEqual( Stem("astensione"), "astension");});
test("astenuta -> asten", function() {deepEqual( Stem("astenuta"), "asten");});
test("astenuti -> asten", function() {deepEqual( Stem("astenuti"), "asten");});
test("aster -> aster", function() {deepEqual( Stem("aster"), "aster");});
test("asterischi -> asterisc", function() {deepEqual( Stem("asterischi"), "asterisc");});
test("asterrà -> asterr", function() {deepEqual( Stem("asterrà"), "asterr");});
test("asterràdal -> asterràdal", function() {deepEqual( Stem("asterràdal"), "asterràdal");});
test("asthom -> asthom", function() {deepEqual( Stem("asthom"), "asthom");});
test("asti -> asti", function() {deepEqual( Stem("asti"), "asti");});
test("astigiano -> astig", function() {deepEqual( Stem("astigiano"), "astig");});
test("astina -> astin", function() {deepEqual( Stem("astina"), "astin");});
test("astinenza -> astinent", function() {deepEqual( Stem("astinenza"), "astinent");});
test("astio -> asti", function() {deepEqual( Stem("astio"), "asti");});
test("astioso -> astios", function() {deepEqual( Stem("astioso"), "astios");});
test("astragalo -> astragal", function() {deepEqual( Stem("astragalo"), "astragal");});
test("astratto -> astratt", function() {deepEqual( Stem("astratto"), "astratt");});
test("astrazione -> astrazion", function() {deepEqual( Stem("astrazione"), "astrazion");});
test("astrea -> astre", function() {deepEqual( Stem("astrea"), "astre");});
test("astri -> astri", function() {deepEqual( Stem("astri"), "astri");});
test("astro -> astro", function() {deepEqual( Stem("astro"), "astro");});
test("astrologi -> astrolog", function() {deepEqual( Stem("astrologi"), "astrolog");});
test("astrologia -> astrolog", function() {deepEqual( Stem("astrologia"), "astrolog");});
test("astuti -> astut", function() {deepEqual( Stem("astuti"), "astut");});
test("astuzia -> astuz", function() {deepEqual( Stem("astuzia"), "astuz");});
test("astuzie -> astuz", function() {deepEqual( Stem("astuzie"), "astuz");});
test("at -> at", function() {deepEqual( Stem("at"), "at");});
test("ata -> ata", function() {deepEqual( Stem("ata"), "ata");});
test("atalanta -> atalant", function() {deepEqual( Stem("atalanta"), "atalant");});
test("atanasio -> atanas", function() {deepEqual( Stem("atanasio"), "atanas");});
test("atene -> aten", function() {deepEqual( Stem("atene"), "aten");});
test("ateneo -> atene", function() {deepEqual( Stem("ateneo"), "atene");});
test("ati -> ati", function() {deepEqual( Stem("ati"), "ati");});
test("atl -> atl", function() {deepEqual( Stem("atl"), "atl");});
test("atlanta -> atlant", function() {deepEqual( Stem("atlanta"), "atlant");});
test("atlante -> atlant", function() {deepEqual( Stem("atlante"), "atlant");});
test("atlantica -> atlant", function() {deepEqual( Stem("atlantica"), "atlant");});
test("atleta -> atlet", function() {deepEqual( Stem("atleta"), "atlet");});
test("atleti -> atlet", function() {deepEqual( Stem("atleti"), "atlet");});
test("atletica -> atlet", function() {deepEqual( Stem("atletica"), "atlet");});
test("atletico -> atlet", function() {deepEqual( Stem("atletico"), "atlet");});
test("atm -> atm", function() {deepEqual( Stem("atm"), "atm");});
test("atmosfera -> atmosfer", function() {deepEqual( Stem("atmosfera"), "atmosfer");});
test("atomica -> atom", function() {deepEqual( Stem("atomica"), "atom");});
test("atonica -> aton", function() {deepEqual( Stem("atonica"), "aton");});
test("atou -> atou", function() {deepEqual( Stem("atou"), "atou");});
test("atp -> atp", function() {deepEqual( Stem("atp"), "atp");});
test("atqui -> atqui", function() {deepEqual( Stem("atqui"), "atqui");});
test("atrio -> atri", function() {deepEqual( Stem("atrio"), "atri");});
test("atroce -> atroc", function() {deepEqual( Stem("atroce"), "atroc");});
test("atroci -> atroc", function() {deepEqual( Stem("atroci"), "atroc");});
test("atrocissimi -> atrocissim", function() {deepEqual( Stem("atrocissimi"), "atrocissim");});
test("atrocità -> atroc", function() {deepEqual( Stem("atrocità"), "atroc");});
test("atta -> atta", function() {deepEqual( Stem("atta"), "atta");});
test("attacante -> attac", function() {deepEqual( Stem("attacante"), "attac");});
test("attacca -> attacc", function() {deepEqual( Stem("attacca"), "attacc");});
test("attaccamento -> attacc", function() {deepEqual( Stem("attaccamento"), "attacc");});
test("attaccando -> attacc", function() {deepEqual( Stem("attaccando"), "attacc");});
test("attaccandoci -> attacc", function() {deepEqual( Stem("attaccandoci"), "attacc");});
test("attaccandosi -> attacc", function() {deepEqual( Stem("attaccandosi"), "attacc");});
test("attaccante -> attacc", function() {deepEqual( Stem("attaccante"), "attacc");});
test("attaccanti -> attacc", function() {deepEqual( Stem("attaccanti"), "attacc");});
test("attaccar -> attacc", function() {deepEqual( Stem("attaccar"), "attacc");});
test("attaccarci -> attacc", function() {deepEqual( Stem("attaccarci"), "attacc");});
test("attaccare -> attacc", function() {deepEqual( Stem("attaccare"), "attacc");});
test("attaccarlo -> attacc", function() {deepEqual( Stem("attaccarlo"), "attacc");});
test("attaccarmi -> attacc", function() {deepEqual( Stem("attaccarmi"), "attacc");});
test("attaccarono -> attacc", function() {deepEqual( Stem("attaccarono"), "attacc");});
test("attaccarsi -> attacc", function() {deepEqual( Stem("attaccarsi"), "attacc");});
test("attaccasse -> attacc", function() {deepEqual( Stem("attaccasse"), "attacc");});
test("attaccata -> attacc", function() {deepEqual( Stem("attaccata"), "attacc");});
test("attaccate -> attacc", function() {deepEqual( Stem("attaccate"), "attacc");});
test("attaccati -> attacc", function() {deepEqual( Stem("attaccati"), "attacc");});
test("attaccato -> attacc", function() {deepEqual( Stem("attaccato"), "attacc");});
test("attaccava -> attacc", function() {deepEqual( Stem("attaccava"), "attacc");});
test("attacchi -> attacc", function() {deepEqual( Stem("attacchi"), "attacc");});
test("attacco -> attacc", function() {deepEqual( Stem("attacco"), "attacc");});
test("attaccò -> attacc", function() {deepEqual( Stem("attaccò"), "attacc");});
test("attarda -> attard", function() {deepEqual( Stem("attarda"), "attard");});
test("atte -> atte", function() {deepEqual( Stem("atte"), "atte");});
test("attecchire -> attecc", function() {deepEqual( Stem("attecchire"), "attecc");});
test("atteggiamenti -> attegg", function() {deepEqual( Stem("atteggiamenti"), "attegg");});
test("atteggiamento -> attegg", function() {deepEqual( Stem("atteggiamento"), "attegg");});
test("atteggiandosi -> attegg", function() {deepEqual( Stem("atteggiandosi"), "attegg");});
test("atteggiato -> attegg", function() {deepEqual( Stem("atteggiato"), "attegg");});
test("atteggiò -> attegg", function() {deepEqual( Stem("atteggiò"), "attegg");});
test("attempata -> attemp", function() {deepEqual( Stem("attempata"), "attemp");});
test("attempate -> attemp", function() {deepEqual( Stem("attempate"), "attemp");});
test("attendati -> attend", function() {deepEqual( Stem("attendati"), "attend");});
test("attende -> attend", function() {deepEqual( Stem("attende"), "attend");});
test("attendendo -> attend", function() {deepEqual( Stem("attendendo"), "attend");});
test("attendere -> attend", function() {deepEqual( Stem("attendere"), "attend");});
test("attenderla -> attend", function() {deepEqual( Stem("attenderla"), "attend");});
test("attenderli -> attend", function() {deepEqual( Stem("attenderli"), "attend");});
test("attenderlo -> attend", function() {deepEqual( Stem("attenderlo"), "attend");});
test("attendessero -> attend", function() {deepEqual( Stem("attendessero"), "attend");});
test("attendeva -> attend", function() {deepEqual( Stem("attendeva"), "attend");});
test("attendevamo -> attend", function() {deepEqual( Stem("attendevamo"), "attend");});
test("attendevano -> attend", function() {deepEqual( Stem("attendevano"), "attend");});
test("attendiamo -> attend", function() {deepEqual( Stem("attendiamo"), "attend");});
test("attendibile -> attend", function() {deepEqual( Stem("attendibile"), "attend");});
test("attendibili -> attend", function() {deepEqual( Stem("attendibili"), "attend");});
test("attendono -> attend", function() {deepEqual( Stem("attendono"), "attend");});
test("attenersi -> atten", function() {deepEqual( Stem("attenersi"), "atten");});
test("attenta -> attent", function() {deepEqual( Stem("attenta"), "attent");});
test("attentamente -> attent", function() {deepEqual( Stem("attentamente"), "attent");});
test("attentar -> attent", function() {deepEqual( Stem("attentar"), "attent");});
test("attentasse -> attent", function() {deepEqual( Stem("attentasse"), "attent");});
test("attentati -> attent", function() {deepEqual( Stem("attentati"), "attent");});
test("attentato -> attent", function() {deepEqual( Stem("attentato"), "attent");});
test("attentatore -> attent", function() {deepEqual( Stem("attentatore"), "attent");});
test("attentava -> attent", function() {deepEqual( Stem("attentava"), "attent");});
test("attente -> attent", function() {deepEqual( Stem("attente"), "attent");});
test("attenti -> attent", function() {deepEqual( Stem("attenti"), "attent");});
test("attento -> attent", function() {deepEqual( Stem("attento"), "attent");});
test("attenuare -> attenu", function() {deepEqual( Stem("attenuare"), "attenu");});
test("attenuato -> attenu", function() {deepEqual( Stem("attenuato"), "attenu");});
test("attenzion -> attenzion", function() {deepEqual( Stem("attenzion"), "attenzion");});
test("attenzione -> attenzion", function() {deepEqual( Stem("attenzione"), "attenzion");});
test("attenzioni -> attenzion", function() {deepEqual( Stem("attenzioni"), "attenzion");});
test("atterra -> atterr", function() {deepEqual( Stem("atterra"), "atterr");});
test("atterraggio -> atterragg", function() {deepEqual( Stem("atterraggio"), "atterragg");});
test("atterramento -> atterr", function() {deepEqual( Stem("atterramento"), "atterr");});
test("atterrano -> atterr", function() {deepEqual( Stem("atterrano"), "atterr");});
test("atterrata -> atterr", function() {deepEqual( Stem("atterrata"), "atterr");});
test("atterrato -> atterr", function() {deepEqual( Stem("atterrato"), "atterr");});
test("atterrava -> atterr", function() {deepEqual( Stem("atterrava"), "atterr");});
test("atterrerà -> atterr", function() {deepEqual( Stem("atterrerà"), "atterr");});
test("atterrire -> atterr", function() {deepEqual( Stem("atterrire"), "atterr");});
test("atterrita -> atterr", function() {deepEqual( Stem("atterrita"), "atterr");});
test("atterrito -> atterr", function() {deepEqual( Stem("atterrito"), "atterr");});
test("atterriva -> atterr", function() {deepEqual( Stem("atterriva"), "atterr");});
test("attesa -> attes", function() {deepEqual( Stem("attesa"), "attes");});
test("attese -> attes", function() {deepEqual( Stem("attese"), "attes");});
test("attesi -> attes", function() {deepEqual( Stem("attesi"), "attes");});
test("attesissimo -> attesissim", function() {deepEqual( Stem("attesissimo"), "attesissim");});
test("atteso -> attes", function() {deepEqual( Stem("atteso"), "attes");});
test("attesoché -> attesoc", function() {deepEqual( Stem("attesoché"), "attesoc");});
test("attesta -> attest", function() {deepEqual( Stem("attesta"), "attest");});
test("attestandosi -> attest", function() {deepEqual( Stem("attestandosi"), "attest");});
test("attestar -> attest", function() {deepEqual( Stem("attestar"), "attest");});
test("attestare -> attest", function() {deepEqual( Stem("attestare"), "attest");});
test("attestarsi -> attest", function() {deepEqual( Stem("attestarsi"), "attest");});
test("attestata -> attest", function() {deepEqual( Stem("attestata"), "attest");});
test("attestate -> attest", function() {deepEqual( Stem("attestate"), "attest");});
test("attestati -> attest", function() {deepEqual( Stem("attestati"), "attest");});
test("attestato -> attest", function() {deepEqual( Stem("attestato"), "attest");});
test("attestava -> attest", function() {deepEqual( Stem("attestava"), "attest");});
test("attestazione -> attest", function() {deepEqual( Stem("attestazione"), "attest");});
test("attesti -> attest", function() {deepEqual( Stem("attesti"), "attest");});
test("atti -> atti", function() {deepEqual( Stem("atti"), "atti");});
test("attiene -> attien", function() {deepEqual( Stem("attiene"), "attien");});
test("attiguo -> attigu", function() {deepEqual( Stem("attiguo"), "attigu");});
test("attilio -> attil", function() {deepEqual( Stem("attilio"), "attil");});
test("attillata -> attill", function() {deepEqual( Stem("attillata"), "attill");});
test("attillati -> attill", function() {deepEqual( Stem("attillati"), "attill");});
test("attillatissimi -> attillatissim", function() {deepEqual( Stem("attillatissimi"), "attillatissim");});
test("attimi -> attim", function() {deepEqual( Stem("attimi"), "attim");});
test("attimo -> attim", function() {deepEqual( Stem("attimo"), "attim");});
test("attinenze -> attinent", function() {deepEqual( Stem("attinenze"), "attinent");});
test("attingendo -> atting", function() {deepEqual( Stem("attingendo"), "atting");});
test("attingere -> atting", function() {deepEqual( Stem("attingere"), "atting");});
test("attinta -> attint", function() {deepEqual( Stem("attinta"), "attint");});
test("attinte -> attint", function() {deepEqual( Stem("attinte"), "attint");});
test("attioni -> attion", function() {deepEqual( Stem("attioni"), "attion");});
test("attira -> attir", function() {deepEqual( Stem("attira"), "attir");});
test("attirare -> attir", function() {deepEqual( Stem("attirare"), "attir");});
test("attirarla -> attir", function() {deepEqual( Stem("attirarla"), "attir");});
test("attirarne -> attir", function() {deepEqual( Stem("attirarne"), "attir");});
test("attirarsi -> attir", function() {deepEqual( Stem("attirarsi"), "attir");});
test("attirata -> attir", function() {deepEqual( Stem("attirata"), "attir");});
test("attirate -> attir", function() {deepEqual( Stem("attirate"), "attir");});
test("attirati -> attir", function() {deepEqual( Stem("attirati"), "attir");});
test("attirato -> attir", function() {deepEqual( Stem("attirato"), "attir");});
test("attirava -> attir", function() {deepEqual( Stem("attirava"), "attir");});
test("attirerebbe -> attir", function() {deepEqual( Stem("attirerebbe"), "attir");});
test("attiriamo -> attir", function() {deepEqual( Stem("attiriamo"), "attir");});
test("attirò -> attir", function() {deepEqual( Stem("attirò"), "attir");});
test("attitudine -> attitudin", function() {deepEqual( Stem("attitudine"), "attitudin");});
test("attiv -> attiv", function() {deepEqual( Stem("attiv"), "attiv");});
test("attiva -> attiv", function() {deepEqual( Stem("attiva"), "attiv");});
test("attivare -> attiv", function() {deepEqual( Stem("attivare"), "attiv");});
test("attive -> attiv", function() {deepEqual( Stem("attive"), "attiv");});
test("attivi -> attiv", function() {deepEqual( Stem("attivi"), "attiv");});
test("attivita -> attiv", function() {deepEqual( Stem("attivita"), "attiv");});
test("attività -> attiv", function() {deepEqual( Stem("attività"), "attiv");});
test("attivo -> attiv", function() {deepEqual( Stem("attivo"), "attiv");});
test("atto -> atto", function() {deepEqual( Stem("atto"), "atto");});
test("attonita -> atton", function() {deepEqual( Stem("attonita"), "atton");});
test("attonito -> atton", function() {deepEqual( Stem("attonito"), "atton");});
test("attore -> attor", function() {deepEqual( Stem("attore"), "attor");});
test("attori -> attor", function() {deepEqual( Stem("attori"), "attor");});
test("attorniato -> attorn", function() {deepEqual( Stem("attorniato"), "attorn");});
test("attorno -> attorn", function() {deepEqual( Stem("attorno"), "attorn");});
test("attortigliata -> attortigl", function() {deepEqual( Stem("attortigliata"), "attortigl");});
test("attraente -> attraent", function() {deepEqual( Stem("attraente"), "attraent");});
test("attraeva -> attra", function() {deepEqual( Stem("attraeva"), "attra");});
test("attrasse -> attrass", function() {deepEqual( Stem("attrasse"), "attrass");});
test("attrattiva -> attratt", function() {deepEqual( Stem("attrattiva"), "attratt");});
test("attratto -> attratt", function() {deepEqual( Stem("attratto"), "attratt");});
test("attraversa -> attravers", function() {deepEqual( Stem("attraversa"), "attravers");});
test("attraversando -> attravers", function() {deepEqual( Stem("attraversando"), "attravers");});
test("attraversar -> attravers", function() {deepEqual( Stem("attraversar"), "attravers");});
test("attraversare -> attravers", function() {deepEqual( Stem("attraversare"), "attravers");});
test("attraversarli -> attravers", function() {deepEqual( Stem("attraversarli"), "attravers");});
test("attraversarlo -> attravers", function() {deepEqual( Stem("attraversarlo"), "attravers");});
test("attraversaron -> attraversaron", function() {deepEqual( Stem("attraversaron"), "attraversaron");});
test("attraversata -> attravers", function() {deepEqual( Stem("attraversata"), "attravers");});
test("attraversati -> attravers", function() {deepEqual( Stem("attraversati"), "attravers");});
test("attraversato -> attravers", function() {deepEqual( Stem("attraversato"), "attravers");});
test("attraversatolo -> attraversatol", function() {deepEqual( Stem("attraversatolo"), "attraversatol");});
test("attraversava -> attravers", function() {deepEqual( Stem("attraversava"), "attravers");});
test("attraverserà -> attravers", function() {deepEqual( Stem("attraverserà"), "attravers");});
test("attraversino -> attraversin", function() {deepEqual( Stem("attraversino"), "attraversin");});
test("attraverso -> attravers", function() {deepEqual( Stem("attraverso"), "attravers");});
test("attraversò -> attravers", function() {deepEqual( Stem("attraversò"), "attravers");});
test("attrezzandosi -> attrezz", function() {deepEqual( Stem("attrezzandosi"), "attrezz");});
test("attrezzata -> attrezz", function() {deepEqual( Stem("attrezzata"), "attrezz");});
test("attrezzate -> attrezz", function() {deepEqual( Stem("attrezzate"), "attrezz");});
test("attrezzato -> attrezz", function() {deepEqual( Stem("attrezzato"), "attrezz");});
test("attrezzature -> attrezzatur", function() {deepEqual( Stem("attrezzature"), "attrezzatur");});
test("attrezzi -> attrezz", function() {deepEqual( Stem("attrezzi"), "attrezz");});
test("attribuendo -> attribu", function() {deepEqual( Stem("attribuendo"), "attribu");});
test("attribuibile -> attribu", function() {deepEqual( Stem("attribuibile"), "attribu");});
test("attribuir -> attribu", function() {deepEqual( Stem("attribuir"), "attribu");});
test("attribuire -> attribu", function() {deepEqual( Stem("attribuire"), "attribu");});
test("attribuirla -> attribu", function() {deepEqual( Stem("attribuirla"), "attribu");});
test("attribuirlo -> attribu", function() {deepEqual( Stem("attribuirlo"), "attribu");});
test("attribuirne -> attribu", function() {deepEqual( Stem("attribuirne"), "attribu");});
test("attribuisce -> attribu", function() {deepEqual( Stem("attribuisce"), "attribu");});
test("attribuiscono -> attribu", function() {deepEqual( Stem("attribuiscono"), "attribu");});
test("attribuisse -> attribuiss", function() {deepEqual( Stem("attribuisse"), "attribuiss");});
test("attribuita -> attribu", function() {deepEqual( Stem("attribuita"), "attribu");});
test("attribuitami -> attribuitam", function() {deepEqual( Stem("attribuitami"), "attribuitam");});
test("attribuite -> attribu", function() {deepEqual( Stem("attribuite"), "attribu");});
test("attribuiti -> attribu", function() {deepEqual( Stem("attribuiti"), "attribu");});
test("attribuito -> attribu", function() {deepEqual( Stem("attribuito"), "attribu");});
test("attribuiva -> attribu", function() {deepEqual( Stem("attribuiva"), "attribu");});
test("attribuivano -> attribu", function() {deepEqual( Stem("attribuivano"), "attribu");});
test("attribuzione -> attribu", function() {deepEqual( Stem("attribuzione"), "attribu");});
test("attribuzioni -> attribu", function() {deepEqual( Stem("attribuzioni"), "attribu");});
test("attrice -> attric", function() {deepEqual( Stem("attrice"), "attric");});
test("attuale -> attual", function() {deepEqual( Stem("attuale"), "attual");});
test("attualente -> attualent", function() {deepEqual( Stem("attualente"), "attualent");});
test("attuali -> attual", function() {deepEqual( Stem("attuali"), "attual");});
test("attualita -> attual", function() {deepEqual( Stem("attualita"), "attual");});
test("attualità -> attual", function() {deepEqual( Stem("attualità"), "attual");});
test("attualmente -> attual", function() {deepEqual( Stem("attualmente"), "attual");});
test("attuando -> attu", function() {deepEqual( Stem("attuando"), "attu");});
test("attuare -> attu", function() {deepEqual( Stem("attuare"), "attu");});
test("attuarlo -> attu", function() {deepEqual( Stem("attuarlo"), "attu");});
test("attuata -> attu", function() {deepEqual( Stem("attuata"), "attu");});
test("attuati -> attu", function() {deepEqual( Stem("attuati"), "attu");});
test("attuato -> attu", function() {deepEqual( Stem("attuato"), "attu");});
test("attuazione -> attuazion", function() {deepEqual( Stem("attuazione"), "attuazion");});
test("atzori -> atzor", function() {deepEqual( Stem("atzori"), "atzor");});
test("auckland -> auckland", function() {deepEqual( Stem("auckland"), "auckland");});
test("audacia -> audac", function() {deepEqual( Stem("audacia"), "audac");});
test("audio -> aud", function() {deepEqual( Stem("audio"), "aud");});
test("audiovisivo -> audiovis", function() {deepEqual( Stem("audiovisivo"), "audiovis");});
test("auditor -> auditor", function() {deepEqual( Stem("auditor"), "auditor");});
test("auditore -> auditor", function() {deepEqual( Stem("auditore"), "auditor");});
test("audizione -> audizion", function() {deepEqual( Stem("audizione"), "audizion");});
test("auferatis -> auferatis", function() {deepEqual( Stem("auferatis"), "auferatis");});
test("aug -> aug", function() {deepEqual( Stem("aug"), "aug");});
test("auge -> aug", function() {deepEqual( Stem("auge"), "aug");});
test("augello -> augell", function() {deepEqual( Stem("augello"), "augell");});
test("augura -> augur", function() {deepEqual( Stem("augura"), "augur");});
test("augurarono -> augur", function() {deepEqual( Stem("augurarono"), "augur");});
test("augurata -> augur", function() {deepEqual( Stem("augurata"), "augur");});
test("augurate -> augur", function() {deepEqual( Stem("augurate"), "augur");});
test("augurato -> augur", function() {deepEqual( Stem("augurato"), "augur");});
test("auguri -> augur", function() {deepEqual( Stem("auguri"), "augur");});
test("augùri -> augùr", function() {deepEqual( Stem("augùri"), "augùr");});
test("auguriamo -> augur", function() {deepEqual( Stem("auguriamo"), "augur");});
test("augurio -> augur", function() {deepEqual( Stem("augurio"), "augur");});
test("auguro -> augur", function() {deepEqual( Stem("auguro"), "augur");});
test("augusta -> august", function() {deepEqual( Stem("augusta"), "august");});
test("auguste -> august", function() {deepEqual( Stem("auguste"), "august");});
test("augusto -> august", function() {deepEqual( Stem("augusto"), "august");});
test("aula -> aul", function() {deepEqual( Stem("aula"), "aul");});
test("auletta -> aulett", function() {deepEqual( Stem("auletta"), "aulett");});
test("aumentabili -> aument", function() {deepEqual( Stem("aumentabili"), "aument");});
test("aumentando -> aument", function() {deepEqual( Stem("aumentando"), "aument");});
test("aumentare -> aument", function() {deepEqual( Stem("aumentare"), "aument");});
test("aumentata -> aument", function() {deepEqual( Stem("aumentata"), "aument");});
test("aumentate -> aument", function() {deepEqual( Stem("aumentate"), "aument");});
test("aumentati -> aument", function() {deepEqual( Stem("aumentati"), "aument");});
test("aumentato -> aument", function() {deepEqual( Stem("aumentato"), "aument");});
test("aumenterà -> aument", function() {deepEqual( Stem("aumenterà"), "aument");});
test("aumenti -> aument", function() {deepEqual( Stem("aumenti"), "aument");});
test("aumentino -> aumentin", function() {deepEqual( Stem("aumentino"), "aumentin");});
test("aumento -> aument", function() {deepEqual( Stem("aumento"), "aument");});
test("aurelio -> aurel", function() {deepEqual( Stem("aurelio"), "aurel");});
test("aureo -> aure", function() {deepEqual( Stem("aureo"), "aure");});
test("aureola -> aureol", function() {deepEqual( Stem("aureola"), "aureol");});
test("auricolare -> auricol", function() {deepEqual( Stem("auricolare"), "auricol");});
test("auriol -> auriol", function() {deepEqual( Stem("auriol"), "auriol");});
test("aurora -> auror", function() {deepEqual( Stem("aurora"), "auror");});
test("aus -> aus", function() {deepEqual( Stem("aus"), "aus");});
test("auschwitz -> auschwitz", function() {deepEqual( Stem("auschwitz"), "auschwitz");});
test("aushwitz -> aushwitz", function() {deepEqual( Stem("aushwitz"), "aushwitz");});
test("ausilia -> ausil", function() {deepEqual( Stem("ausilia"), "ausil");});
test("ausiliare -> ausil", function() {deepEqual( Stem("ausiliare"), "ausil");});
test("ausiliari -> ausiliar", function() {deepEqual( Stem("ausiliari"), "ausiliar");});
test("ausiliarie -> ausiliar", function() {deepEqual( Stem("ausiliarie"), "ausiliar");});
test("ausiliario -> ausiliar", function() {deepEqual( Stem("ausiliario"), "ausiliar");});
test("auspica -> auspic", function() {deepEqual( Stem("auspica"), "auspic");});
test("auspicabile -> auspic", function() {deepEqual( Stem("auspicabile"), "auspic");});
test("auspicato -> auspic", function() {deepEqual( Stem("auspicato"), "auspic");});
test("auspicava -> auspic", function() {deepEqual( Stem("auspicava"), "auspic");});
test("auspicio -> auspic", function() {deepEqual( Stem("auspicio"), "auspic");});
test("austera -> auster", function() {deepEqual( Stem("austera"), "auster");});
test("austero -> auster", function() {deepEqual( Stem("austero"), "auster");});
test("australia -> austral", function() {deepEqual( Stem("australia"), "austral");});
test("australian -> australian", function() {deepEqual( Stem("australian"), "australian");});
test("australiana -> australian", function() {deepEqual( Stem("australiana"), "australian");});
test("australiane -> australian", function() {deepEqual( Stem("australiane"), "australian");});
test("australiani -> australian", function() {deepEqual( Stem("australiani"), "australian");});
test("australiano -> austral", function() {deepEqual( Stem("australiano"), "austral");});
test("austria -> austr", function() {deepEqual( Stem("austria"), "austr");});
test("austriaca -> austriac", function() {deepEqual( Stem("austriaca"), "austriac");});
test("austriaci -> austriac", function() {deepEqual( Stem("austriaci"), "austriac");});
test("austriaco -> austriac", function() {deepEqual( Stem("austriaco"), "austriac");});
test("aut -> aut", function() {deepEqual( Stem("aut"), "aut");});
test("autentica -> autent", function() {deepEqual( Stem("autentica"), "autent");});
test("autenticamente -> autent", function() {deepEqual( Stem("autenticamente"), "autent");});
test("autentici -> autent", function() {deepEqual( Stem("autentici"), "autent");});
test("autenticità -> autent", function() {deepEqual( Stem("autenticità"), "autent");});
test("autentico -> autent", function() {deepEqual( Stem("autentico"), "autent");});
test("authority -> authority", function() {deepEqual( Stem("authority"), "authority");});
test("autista -> autist", function() {deepEqual( Stem("autista"), "autist");});
test("autisti -> autist", function() {deepEqual( Stem("autisti"), "autist");});
test("auto -> aut", function() {deepEqual( Stem("auto"), "aut");});
test("autobianchi -> autobianc", function() {deepEqual( Stem("autobianchi"), "autobianc");});
test("autobotte -> autobott", function() {deepEqual( Stem("autobotte"), "autobott");});
test("autobus -> autobus", function() {deepEqual( Stem("autobus"), "autobus");});
test("autocandidatura -> autocandidatur", function() {deepEqual( Stem("autocandidatura"), "autocandidatur");});
test("autocarri -> autocarr", function() {deepEqual( Stem("autocarri"), "autocarr");});
test("autocarro -> autocarr", function() {deepEqual( Stem("autocarro"), "autocarr");});
test("autocelebrazione -> autocelebr", function() {deepEqual( Stem("autocelebrazione"), "autocelebr");});
test("autocertificato -> autocertific", function() {deepEqual( Stem("autocertificato"), "autocertific");});
test("autodissoluzione -> autodissolu", function() {deepEqual( Stem("autodissoluzione"), "autodissolu");});
test("autodistruttiva -> autodistrutt", function() {deepEqual( Stem("autodistruttiva"), "autodistrutt");});
test("autodistruzione -> autodistru", function() {deepEqual( Stem("autodistruzione"), "autodistru");});
test("autoferrotranvieri -> autoferrotranvier", function() {deepEqual( Stem("autoferrotranvieri"), "autoferrotranvier");});
test("autogol -> autogol", function() {deepEqual( Stem("autogol"), "autogol");});
test("autografo -> autograf", function() {deepEqual( Stem("autografo"), "autograf");});
test("automaticamente -> automat", function() {deepEqual( Stem("automaticamente"), "automat");});
test("automatici -> automat", function() {deepEqual( Stem("automatici"), "automat");});
test("automatizzati -> automatizz", function() {deepEqual( Stem("automatizzati"), "automatizz");});
test("automatizzato -> automatizz", function() {deepEqual( Stem("automatizzato"), "automatizz");});
test("automazione -> autom", function() {deepEqual( Stem("automazione"), "autom");});
test("automobile -> automobil", function() {deepEqual( Stem("automobile"), "automobil");});
test("automobili -> automobil", function() {deepEqual( Stem("automobili"), "automobil");});
test("automobilismo -> automobil", function() {deepEqual( Stem("automobilismo"), "automobil");});
test("automobilista -> automobil", function() {deepEqual( Stem("automobilista"), "automobil");});
test("automobilisti -> automobil", function() {deepEqual( Stem("automobilisti"), "automobil");});
test("automobilistica -> automobilist", function() {deepEqual( Stem("automobilistica"), "automobilist");});
test("automobilistiche -> automobilist", function() {deepEqual( Stem("automobilistiche"), "automobilist");});
test("automobilistico -> automobilist", function() {deepEqual( Stem("automobilistico"), "automobilist");});
test("automoveis -> automoveis", function() {deepEqual( Stem("automoveis"), "automoveis");});
test("autonoma -> autonom", function() {deepEqual( Stem("autonoma"), "autonom");});
test("autonomamente -> autonom", function() {deepEqual( Stem("autonomamente"), "autonom");});
test("autonome -> autonom", function() {deepEqual( Stem("autonome"), "autonom");});
test("autonomi -> autonom", function() {deepEqual( Stem("autonomi"), "autonom");});
test("autonomia -> autonom", function() {deepEqual( Stem("autonomia"), "autonom");});
test("autonomie -> autonom", function() {deepEqual( Stem("autonomie"), "autonom");});
test("autonomista -> autonom", function() {deepEqual( Stem("autonomista"), "autonom");});
test("autonomistà -> autonom", function() {deepEqual( Stem("autonomistà"), "autonom");});
test("autonomisti -> autonom", function() {deepEqual( Stem("autonomisti"), "autonom");});
test("autonomo -> autonom", function() {deepEqual( Stem("autonomo"), "autonom");});
test("autopergamena -> autopergamen", function() {deepEqual( Stem("autopergamena"), "autopergamen");});
test("autoproclamatasi -> autoproclamatas", function() {deepEqual( Stem("autoproclamatasi"), "autoproclamatas");});
test("autoproduttori -> autoproduttor", function() {deepEqual( Stem("autoproduttori"), "autoproduttor");});
test("autopsia -> autops", function() {deepEqual( Stem("autopsia"), "autops");});
test("autoptico -> autopt", function() {deepEqual( Stem("autoptico"), "autopt");});
test("autor -> autor", function() {deepEqual( Stem("autor"), "autor");});
test("autore -> autor", function() {deepEqual( Stem("autore"), "autor");});
test("autoregolamentazione -> autoregolament", function() {deepEqual( Stem("autoregolamentazione"), "autoregolament");});
test("autorete -> autor", function() {deepEqual( Stem("autorete"), "autor");});
test("autorevole -> autorevol", function() {deepEqual( Stem("autorevole"), "autorevol");});
test("autorevolezza -> autorevolezz", function() {deepEqual( Stem("autorevolezza"), "autorevolezz");});
test("autorevoli -> autorevol", function() {deepEqual( Stem("autorevoli"), "autorevol");});
test("autori -> autor", function() {deepEqual( Stem("autori"), "autor");});
test("autorimessa -> autorimess", function() {deepEqual( Stem("autorimessa"), "autorimess");});
test("autorita -> autor", function() {deepEqual( Stem("autorita"), "autor");});
test("autorità -> autor", function() {deepEqual( Stem("autorità"), "autor");});
test("autoritaria -> autoritar", function() {deepEqual( Stem("autoritaria"), "autoritar");});
test("autoritario -> autoritar", function() {deepEqual( Stem("autoritario"), "autoritar");});
test("autorizzata -> autorizz", function() {deepEqual( Stem("autorizzata"), "autorizz");});
test("autorizzativo -> autorizz", function() {deepEqual( Stem("autorizzativo"), "autorizz");});
test("autorizzato -> autorizz", function() {deepEqual( Stem("autorizzato"), "autorizz");});
test("autorizzatorie -> autorizzator", function() {deepEqual( Stem("autorizzatorie"), "autorizzator");});
test("autorizzazione -> autorizz", function() {deepEqual( Stem("autorizzazione"), "autorizz");});
test("autorizzazioni -> autorizz", function() {deepEqual( Stem("autorizzazioni"), "autorizz");});
test("autoscuole -> autoscuol", function() {deepEqual( Stem("autoscuole"), "autoscuol");});
test("autosospesa -> autosospes", function() {deepEqual( Stem("autosospesa"), "autosospes");});
test("autostr -> autostr", function() {deepEqual( Stem("autostr"), "autostr");});
test("autostrada -> autostrad", function() {deepEqual( Stem("autostrada"), "autostrad");});
test("autostradale -> autostradal", function() {deepEqual( Stem("autostradale"), "autostradal");});
test("autostradali -> autostradal", function() {deepEqual( Stem("autostradali"), "autostradal");});
test("autostrade -> autostrad", function() {deepEqual( Stem("autostrade"), "autostrad");});
test("autoveicoli -> autoveicol", function() {deepEqual( Stem("autoveicoli"), "autoveicol");});
test("autovettura -> autovettur", function() {deepEqual( Stem("autovettura"), "autovettur");});
test("autovetture -> autovettur", function() {deepEqual( Stem("autovetture"), "autovettur");});
test("autrice -> autric", function() {deepEqual( Stem("autrice"), "autric");});
test("autunnale -> autunnal", function() {deepEqual( Stem("autunnale"), "autunnal");});
test("autunnali -> autunnal", function() {deepEqual( Stem("autunnali"), "autunnal");});
test("autunno -> autunn", function() {deepEqual( Stem("autunno"), "autunn");});
test("auuenuto -> auuen", function() {deepEqual( Stem("auuenuto"), "auuen");});
test("auxerre -> auxerr", function() {deepEqual( Stem("auxerre"), "auxerr");});
test("av -> av", function() {deepEqual( Stem("av"), "av");});
test("avallato -> avall", function() {deepEqual( Stem("avallato"), "avall");});
test("avana -> avan", function() {deepEqual( Stem("avana"), "avan");});
test("avances -> avances", function() {deepEqual( Stem("avances"), "avances");});
test("avanguardia -> avanguard", function() {deepEqual( Stem("avanguardia"), "avanguard");});
test("avanti -> avant", function() {deepEqual( Stem("avanti"), "avant");});
test("avanza -> avanz", function() {deepEqual( Stem("avanza"), "avanz");});
test("avanzando -> avanz", function() {deepEqual( Stem("avanzando"), "avanz");});
test("avanzandosi -> avanz", function() {deepEqual( Stem("avanzandosi"), "avanz");});
test("avanzare -> avanz", function() {deepEqual( Stem("avanzare"), "avanz");});
test("avanzarsi -> avanz", function() {deepEqual( Stem("avanzarsi"), "avanz");});
test("avanzata -> avanz", function() {deepEqual( Stem("avanzata"), "avanz");});
test("avanzate -> avanz", function() {deepEqual( Stem("avanzate"), "avanz");});
test("avanzati -> avanz", function() {deepEqual( Stem("avanzati"), "avanz");});
test("avanzato -> avanz", function() {deepEqual( Stem("avanzato"), "avanz");});
test("avanzava -> avanz", function() {deepEqual( Stem("avanzava"), "avanz");});
test("avanzerà -> avanz", function() {deepEqual( Stem("avanzerà"), "avanz");});
test("avanzerebbe -> avanz", function() {deepEqual( Stem("avanzerebbe"), "avanz");});
test("avanzi -> avanz", function() {deepEqual( Stem("avanzi"), "avanz");});
test("avanzini -> avanzin", function() {deepEqual( Stem("avanzini"), "avanzin");});
test("avanzo -> avanz", function() {deepEqual( Stem("avanzo"), "avanz");});
test("avanzò -> avanz", function() {deepEqual( Stem("avanzò"), "avanz");});
test("avara -> avar", function() {deepEqual( Stem("avara"), "avar");});
test("avaria -> avar", function() {deepEqual( Stem("avaria"), "avar");});
test("avarizia -> avariz", function() {deepEqual( Stem("avarizia"), "avariz");});
test("avaro -> avar", function() {deepEqual( Stem("avaro"), "avar");});
test("ave -> ave", function() {deepEqual( Stem("ave"), "ave");});
test("avea -> ave", function() {deepEqual( Stem("avea"), "ave");});
test("avean -> avean", function() {deepEqual( Stem("avean"), "avean");});
test("avellino -> avellin", function() {deepEqual( Stem("avellino"), "avellin");});
test("avendo -> avend", function() {deepEqual( Stem("avendo"), "avend");});
test("avendocelo -> avendocel", function() {deepEqual( Stem("avendocelo"), "avendocel");});
test("avendola -> avendol", function() {deepEqual( Stem("avendola"), "avendol");});
test("avendolo -> avendol", function() {deepEqual( Stem("avendolo"), "avendol");});
test("avendone -> avendon", function() {deepEqual( Stem("avendone"), "avendon");});
test("avene -> aven", function() {deepEqual( Stem("avene"), "aven");});
test("aventi -> avent", function() {deepEqual( Stem("aventi"), "avent");});
test("aver -> aver", function() {deepEqual( Stem("aver"), "aver");});
test("averci -> averc", function() {deepEqual( Stem("averci"), "averc");});
test("avere -> aver", function() {deepEqual( Stem("avere"), "aver");});
test("avergli -> avergl", function() {deepEqual( Stem("avergli"), "avergl");});
test("avergliene -> averglien", function() {deepEqual( Stem("avergliene"), "averglien");});
test("averla -> averl", function() {deepEqual( Stem("averla"), "averl");});
test("averle -> averl", function() {deepEqual( Stem("averle"), "averl");});
test("averli -> averl", function() {deepEqual( Stem("averli"), "averl");});
test("averlo -> averl", function() {deepEqual( Stem("averlo"), "averl");});
test("avermi -> averm", function() {deepEqual( Stem("avermi"), "averm");});
test("avermo -> averm", function() {deepEqual( Stem("avermo"), "averm");});
test("averne -> avern", function() {deepEqual( Stem("averne"), "avern");});
test("averselo -> aversel", function() {deepEqual( Stem("averselo"), "aversel");});
test("avervi -> averv", function() {deepEqual( Stem("avervi"), "averv");});
test("avesse -> avess", function() {deepEqual( Stem("avesse"), "avess");});
test("avesser -> avesser", function() {deepEqual( Stem("avesser"), "avesser");});
test("avessero -> avesser", function() {deepEqual( Stem("avessero"), "avesser");});
test("avessi -> avess", function() {deepEqual( Stem("avessi"), "avess");});
test("avessimo -> avessim", function() {deepEqual( Stem("avessimo"), "avessim");});
test("aveste -> avest", function() {deepEqual( Stem("aveste"), "avest");});
test("avete -> avet", function() {deepEqual( Stem("avete"), "avet");});
test("aveva -> avev", function() {deepEqual( Stem("aveva"), "avev");});
test("avevam -> avevam", function() {deepEqual( Stem("avevam"), "avevam");});
test("avevamo -> avevam", function() {deepEqual( Stem("avevamo"), "avevam");});
test("avevan -> avevan", function() {deepEqual( Stem("avevan"), "avevan");});
test("avevano -> avev", function() {deepEqual( Stem("avevano"), "avev");});
test("avevate -> avev", function() {deepEqual( Stem("avevate"), "avev");});
test("avevi -> avev", function() {deepEqual( Stem("avevi"), "avev");});
test("avevo -> avev", function() {deepEqual( Stem("avevo"), "avev");});
test("avezzano -> avezz", function() {deepEqual( Stem("avezzano"), "avezz");});
test("avi -> avi", function() {deepEqual( Stem("avi"), "avi");});
test("aviazione -> aviazion", function() {deepEqual( Stem("aviazione"), "aviazion");});
test("avidamente -> avid", function() {deepEqual( Stem("avidamente"), "avid");});
test("avidi -> avid", function() {deepEqual( Stem("avidi"), "avid");});
test("avidità -> avid", function() {deepEqual( Stem("avidità"), "avid");});
test("avignone -> avignon", function() {deepEqual( Stem("avignone"), "avignon");});
test("avir -> avir", function() {deepEqual( Stem("avir"), "avir");});
test("avis -> avis", function() {deepEqual( Stem("avis"), "avis");});
test("aviv -> aviv", function() {deepEqual( Stem("aviv"), "aviv");});
test("avo -> avo", function() {deepEqual( Stem("avo"), "avo");});
test("avocando -> avoc", function() {deepEqual( Stem("avocando"), "avoc");});
test("avola -> avol", function() {deepEqual( Stem("avola"), "avol");});
test("avoltoi -> avolto", function() {deepEqual( Stem("avoltoi"), "avolto");});
test("avrà -> avrà", function() {deepEqual( Stem("avrà"), "avrà");});
test("avrai -> avra", function() {deepEqual( Stem("avrai"), "avra");});
test("avràil -> avràil", function() {deepEqual( Stem("avràil"), "avràil");});
test("avranno -> avrann", function() {deepEqual( Stem("avranno"), "avrann");});
test("avrebbe -> avrebb", function() {deepEqual( Stem("avrebbe"), "avrebb");});
test("avrebber -> avrebber", function() {deepEqual( Stem("avrebber"), "avrebber");});
test("avrebbero -> avrebber", function() {deepEqual( Stem("avrebbero"), "avrebber");});
test("avrei -> avre", function() {deepEqual( Stem("avrei"), "avre");});
test("avrem -> avrem", function() {deepEqual( Stem("avrem"), "avrem");});
test("avremmo -> avremm", function() {deepEqual( Stem("avremmo"), "avremm");});
test("avremo -> avrem", function() {deepEqual( Stem("avremo"), "avrem");});
test("avreste -> avrest", function() {deepEqual( Stem("avreste"), "avrest");});
test("avresti -> avrest", function() {deepEqual( Stem("avresti"), "avrest");});
test("avrete -> avret", function() {deepEqual( Stem("avrete"), "avret");});
test("avrò -> avrò", function() {deepEqual( Stem("avrò"), "avrò");});
test("avturkhanov -> avturkhanov", function() {deepEqual( Stem("avturkhanov"), "avturkhanov");});
test("avuta -> avut", function() {deepEqual( Stem("avuta"), "avut");});
test("avute -> avut", function() {deepEqual( Stem("avute"), "avut");});
test("avuti -> avut", function() {deepEqual( Stem("avuti"), "avut");});
test("avuto -> avut", function() {deepEqual( Stem("avuto"), "avut");});
test("avutolo -> avutol", function() {deepEqual( Stem("avutolo"), "avutol");});
test("avv -> avv", function() {deepEqual( Stem("avv"), "avv");});
test("avvale -> avval", function() {deepEqual( Stem("avvale"), "avval");});
test("avvalersi -> avval", function() {deepEqual( Stem("avvalersi"), "avval");});
test("avvantaggerebbero -> avvantagg", function() {deepEqual( Stem("avvantaggerebbero"), "avvantagg");});
test("avvantaggiati -> avvantagg", function() {deepEqual( Stem("avvantaggiati"), "avvantagg");});
test("avveda -> avved", function() {deepEqual( Stem("avveda"), "avved");});
test("avvede -> avved", function() {deepEqual( Stem("avvede"), "avved");});
test("avvedendosi -> avved", function() {deepEqual( Stem("avvedendosi"), "avved");});
test("avvedersene -> avved", function() {deepEqual( Stem("avvedersene"), "avved");});
test("avvedesse -> avvedess", function() {deepEqual( Stem("avvedesse"), "avvedess");});
test("avvedeva -> avved", function() {deepEqual( Stem("avvedeva"), "avved");});
test("avvedutezza -> avvedutezz", function() {deepEqual( Stem("avvedutezza"), "avvedutezz");});
test("avveduto -> avved", function() {deepEqual( Stem("avveduto"), "avved");});
test("avvelenata -> avvelen", function() {deepEqual( Stem("avvelenata"), "avvelen");});
test("avvelenava -> avvelen", function() {deepEqual( Stem("avvelenava"), "avvelen");});
test("avvenendo -> avven", function() {deepEqual( Stem("avvenendo"), "avven");});
test("avvenenza -> avvenent", function() {deepEqual( Stem("avvenenza"), "avvenent");});
test("avvenga -> avveng", function() {deepEqual( Stem("avvenga"), "avveng");});
test("avvenimenti -> avven", function() {deepEqual( Stem("avvenimenti"), "avven");});
test("avvenimento -> avven", function() {deepEqual( Stem("avvenimento"), "avven");});
test("avvenire -> avven", function() {deepEqual( Stem("avvenire"), "avven");});
test("avvenirè -> avvenir", function() {deepEqual( Stem("avvenirè"), "avvenir");});
test("avvenisse -> avveniss", function() {deepEqual( Stem("avvenisse"), "avveniss");});
test("avveniva -> avven", function() {deepEqual( Stem("avveniva"), "avven");});
test("avvenne -> avvenn", function() {deepEqual( Stem("avvenne"), "avvenn");});
test("avventa -> avvent", function() {deepEqual( Stem("avventa"), "avvent");});
test("avventarono -> avvent", function() {deepEqual( Stem("avventarono"), "avvent");});
test("avventarsi -> avvent", function() {deepEqual( Stem("avventarsi"), "avvent");});
test("avventò -> avvent", function() {deepEqual( Stem("avventò"), "avvent");});
test("avventore -> avventor", function() {deepEqual( Stem("avventore"), "avventor");});
test("avventori -> avventor", function() {deepEqual( Stem("avventori"), "avventor");});
test("avventura -> avventur", function() {deepEqual( Stem("avventura"), "avventur");});
test("avventure -> avventur", function() {deepEqual( Stem("avventure"), "avventur");});
test("avventuriera -> avventurier", function() {deepEqual( Stem("avventuriera"), "avventurier");});
test("avventurieri -> avventurier", function() {deepEqual( Stem("avventurieri"), "avventurier");});
test("avventurosa -> avventur", function() {deepEqual( Stem("avventurosa"), "avventur");});
test("avvenuta -> avven", function() {deepEqual( Stem("avvenuta"), "avven");});
test("avvenute -> avven", function() {deepEqual( Stem("avvenute"), "avven");});
test("avvenuti -> avven", function() {deepEqual( Stem("avvenuti"), "avven");});
test("avvenuto -> avven", function() {deepEqual( Stem("avvenuto"), "avven");});
test("avverata -> avver", function() {deepEqual( Stem("avverata"), "avver");});
test("avverate -> avver", function() {deepEqual( Stem("avverate"), "avver");});
test("avveri -> avver", function() {deepEqual( Stem("avveri"), "avver");});
test("avverrà -> avverr", function() {deepEqual( Stem("avverrà"), "avverr");});
test("avversa -> avvers", function() {deepEqual( Stem("avversa"), "avvers");});
test("avversari -> avversar", function() {deepEqual( Stem("avversari"), "avversar");});
test("avversaria -> avversar", function() {deepEqual( Stem("avversaria"), "avversar");});
test("avversarie -> avversar", function() {deepEqual( Stem("avversarie"), "avversar");});
test("avversario -> avversar", function() {deepEqual( Stem("avversario"), "avversar");});
test("avversati -> avvers", function() {deepEqual( Stem("avversati"), "avvers");});
test("avverse -> avvers", function() {deepEqual( Stem("avverse"), "avvers");});
test("avversione -> avversion", function() {deepEqual( Stem("avversione"), "avversion");});
test("avversità -> avvers", function() {deepEqual( Stem("avversità"), "avvers");});
test("avverso -> avvers", function() {deepEqual( Stem("avverso"), "avvers");});
test("avverta -> avvert", function() {deepEqual( Stem("avverta"), "avvert");});
test("avverte -> avvert", function() {deepEqual( Stem("avverte"), "avvert");});
test("avvertendo -> avvert", function() {deepEqual( Stem("avvertendo"), "avvert");});
test("avvertì -> avvert", function() {deepEqual( Stem("avvertì"), "avvert");});
test("avvertimenti -> avvert", function() {deepEqual( Stem("avvertimenti"), "avvert");});
test("avvertimento -> avvert", function() {deepEqual( Stem("avvertimento"), "avvert");});
test("avvertio -> avvert", function() {deepEqual( Stem("avvertio"), "avvert");});
test("avvertir -> avvert", function() {deepEqual( Stem("avvertir"), "avvert");});
test("avvertire -> avvert", function() {deepEqual( Stem("avvertire"), "avvert");});
test("avvertirla -> avvert", function() {deepEqual( Stem("avvertirla"), "avvert");});
test("avvertirlo -> avvert", function() {deepEqual( Stem("avvertirlo"), "avvert");});
test("avvertirono -> avvert", function() {deepEqual( Stem("avvertirono"), "avvert");});
test("avvertisse -> avvertiss", function() {deepEqual( Stem("avvertisse"), "avvertiss");});
test("avvertita -> avvert", function() {deepEqual( Stem("avvertita"), "avvert");});
test("avvertite -> avvert", function() {deepEqual( Stem("avvertite"), "avvert");});
test("avvertiti -> avvert", function() {deepEqual( Stem("avvertiti"), "avvert");});
test("avvertito -> avvert", function() {deepEqual( Stem("avvertito"), "avvert");});
test("avvezza -> avvezz", function() {deepEqual( Stem("avvezza"), "avvezz");});
test("avvezzare -> avvezz", function() {deepEqual( Stem("avvezzare"), "avvezz");});
test("avvezzarsi -> avvezz", function() {deepEqual( Stem("avvezzarsi"), "avvezz");});
test("avvezzata -> avvezz", function() {deepEqual( Stem("avvezzata"), "avvezz");});
test("avvezzato -> avvezz", function() {deepEqual( Stem("avvezzato"), "avvezz");});
test("avvezzi -> avvezz", function() {deepEqual( Stem("avvezzi"), "avvezz");});
test("avvezzin -> avvezzin", function() {deepEqual( Stem("avvezzin"), "avvezzin");});
test("avvezzo -> avvezz", function() {deepEqual( Stem("avvezzo"), "avvezz");});
test("avvia -> avvi", function() {deepEqual( Stem("avvia"), "avvi");});
test("avviamento -> avvi", function() {deepEqual( Stem("avviamento"), "avvi");});
test("avviando -> avvi", function() {deepEqual( Stem("avviando"), "avvi");});
test("avviandosi -> avvi", function() {deepEqual( Stem("avviandosi"), "avvi");});
test("avviano -> avvi", function() {deepEqual( Stem("avviano"), "avvi");});
test("avviare -> avvi", function() {deepEqual( Stem("avviare"), "avvi");});
test("avviaron -> avviaron", function() {deepEqual( Stem("avviaron"), "avviaron");});
test("avviarono -> avvi", function() {deepEqual( Stem("avviarono"), "avvi");});
test("avviarsi -> avvi", function() {deepEqual( Stem("avviarsi"), "avvi");});
test("avviarvi -> avvi", function() {deepEqual( Stem("avviarvi"), "avvi");});
test("avviasse -> avvi", function() {deepEqual( Stem("avviasse"), "avvi");});
test("avviata -> avvi", function() {deepEqual( Stem("avviata"), "avvi");});
test("avviate -> avvi", function() {deepEqual( Stem("avviate"), "avvi");});
test("avviati -> avvi", function() {deepEqual( Stem("avviati"), "avvi");});
test("avviato -> avvi", function() {deepEqual( Stem("avviato"), "avvi");});
test("avviava -> avvi", function() {deepEqual( Stem("avviava"), "avvi");});
test("avviavan -> avviavan", function() {deepEqual( Stem("avviavan"), "avviavan");});
test("avviavano -> avvi", function() {deepEqual( Stem("avviavano"), "avvi");});
test("avvicendamenti -> avvicend", function() {deepEqual( Stem("avvicendamenti"), "avvicend");});
test("avvicina -> avvicin", function() {deepEqual( Stem("avvicina"), "avvicin");});
test("avvicinamento -> avvicin", function() {deepEqual( Stem("avvicinamento"), "avvicin");});
test("avvicinando -> avvicin", function() {deepEqual( Stem("avvicinando"), "avvicin");});
test("avvicinandosegli -> avvicinandosegl", function() {deepEqual( Stem("avvicinandosegli"), "avvicinandosegl");});
test("avvicinandosele -> avvicinandosel", function() {deepEqual( Stem("avvicinandosele"), "avvicinandosel");});
test("avvicinandosi -> avvicin", function() {deepEqual( Stem("avvicinandosi"), "avvicin");});
test("avvicinano -> avvicin", function() {deepEqual( Stem("avvicinano"), "avvicin");});
test("avvicinare -> avvicin", function() {deepEqual( Stem("avvicinare"), "avvicin");});
test("avvicinarono -> avvicin", function() {deepEqual( Stem("avvicinarono"), "avvicin");});
test("avvicinarsi -> avvicin", function() {deepEqual( Stem("avvicinarsi"), "avvicin");});
test("avvicinasse -> avvicin", function() {deepEqual( Stem("avvicinasse"), "avvicin");});
test("avvicinata -> avvicin", function() {deepEqual( Stem("avvicinata"), "avvicin");});
test("avvicinati -> avvicin", function() {deepEqual( Stem("avvicinati"), "avvicin");});
test("avvicinato -> avvicin", function() {deepEqual( Stem("avvicinato"), "avvicin");});
test("avvicinatosele -> avvicinatosel", function() {deepEqual( Stem("avvicinatosele"), "avvicinatosel");});
test("avvicinatosi -> avvicinat", function() {deepEqual( Stem("avvicinatosi"), "avvicinat");});
test("avvicinava -> avvicin", function() {deepEqual( Stem("avvicinava"), "avvicin");});
test("avvicinavano -> avvicin", function() {deepEqual( Stem("avvicinavano"), "avvicin");});
test("avvicinino -> avvicinin", function() {deepEqual( Stem("avvicinino"), "avvicinin");});
test("avvicinò -> avvicin", function() {deepEqual( Stem("avvicinò"), "avvicin");});
test("avvide -> avvid", function() {deepEqual( Stem("avvide"), "avvid");});
test("avviene -> avvien", function() {deepEqual( Stem("avviene"), "avvien");});
test("avvierà -> avvi", function() {deepEqual( Stem("avvierà"), "avvi");});
test("avvieranno -> avvi", function() {deepEqual( Stem("avvieranno"), "avvi");});
test("avvilimento -> avvil", function() {deepEqual( Stem("avvilimento"), "avvil");});
test("avvilisse -> avviliss", function() {deepEqual( Stem("avvilisse"), "avviliss");});
test("avvilita -> avvil", function() {deepEqual( Stem("avvilita"), "avvil");});
test("avvilito -> avvil", function() {deepEqual( Stem("avvilito"), "avvil");});
test("avviluppata -> avvilupp", function() {deepEqual( Stem("avviluppata"), "avvilupp");});
test("avviluppate -> avvilupp", function() {deepEqual( Stem("avviluppate"), "avvilupp");});
test("avvio -> avvi", function() {deepEqual( Stem("avvio"), "avvi");});
test("avviò -> avvi", function() {deepEqual( Stem("avviò"), "avvi");});
test("avvisa -> avvis", function() {deepEqual( Stem("avvisa"), "avvis");});
test("avvisaglie -> avvisagl", function() {deepEqual( Stem("avvisaglie"), "avvisagl");});
test("avvisar -> avvis", function() {deepEqual( Stem("avvisar"), "avvis");});
test("avvisarmi -> avvis", function() {deepEqual( Stem("avvisarmi"), "avvis");});
test("avvisatemi -> avvisatem", function() {deepEqual( Stem("avvisatemi"), "avvisatem");});
test("avvisato -> avvis", function() {deepEqual( Stem("avvisato"), "avvis");});
test("avvisi -> avvis", function() {deepEqual( Stem("avvisi"), "avvis");});
test("avviso -> avvis", function() {deepEqual( Stem("avviso"), "avvis");});
test("avvisò -> avvis", function() {deepEqual( Stem("avvisò"), "avvis");});
test("avvista -> avvist", function() {deepEqual( Stem("avvista"), "avvist");});
test("avvistati -> avvist", function() {deepEqual( Stem("avvistati"), "avvist");});
test("avvisti -> avvist", function() {deepEqual( Stem("avvisti"), "avvist");});
test("avvisto -> avvist", function() {deepEqual( Stem("avvisto"), "avvist");});
test("avvitano -> avvit", function() {deepEqual( Stem("avvitano"), "avvit");});
test("avviticchiata -> avviticc", function() {deepEqual( Stem("avviticchiata"), "avviticc");});
test("avvocati -> avvoc", function() {deepEqual( Stem("avvocati"), "avvoc");});
test("avvocato -> avvoc", function() {deepEqual( Stem("avvocato"), "avvoc");});
test("avvocatura -> avvocatur", function() {deepEqual( Stem("avvocatura"), "avvocatur");});
test("avvolgeva -> avvolg", function() {deepEqual( Stem("avvolgeva"), "avvolg");});
test("avvolse -> avvols", function() {deepEqual( Stem("avvolse"), "avvols");});
test("avvolta -> avvolt", function() {deepEqual( Stem("avvolta"), "avvolt");});
test("avvoltati -> avvolt", function() {deepEqual( Stem("avvoltati"), "avvolt");});
test("avvolto -> avvolt", function() {deepEqual( Stem("avvolto"), "avvolt");});
test("axel -> axel", function() {deepEqual( Stem("axel"), "axel");});
test("axo -> axo", function() {deepEqual( Stem("axo"), "axo");});
test("ayamonte -> ayamont", function() {deepEqual( Stem("ayamonte"), "ayamont");});
test("ayatollah -> ayatollah", function() {deepEqual( Stem("ayatollah"), "ayatollah");});
test("ayub -> ayub", function() {deepEqual( Stem("ayub"), "ayub");});
test("az -> az", function() {deepEqual( Stem("az"), "az");});
test("azarashvili -> azarashvil", function() {deepEqual( Stem("azarashvili"), "azarashvil");});
test("azeglio -> azegl", function() {deepEqual( Stem("azeglio"), "azegl");});
test("azerbaigian -> azerbaigian", function() {deepEqual( Stem("azerbaigian"), "azerbaigian");});
test("azienda -> azi", function() {deepEqual( Stem("azienda"), "azi");});
test("aziendale -> aziendal", function() {deepEqual( Stem("aziendale"), "aziendal");});
test("aziendali -> aziendal", function() {deepEqual( Stem("aziendali"), "aziendal");});
test("aziendalistico -> aziendalist", function() {deepEqual( Stem("aziendalistico"), "aziendalist");});
test("aziende -> azi", function() {deepEqual( Stem("aziende"), "azi");});
test("azimut -> azimut", function() {deepEqual( Stem("azimut"), "azimut");});
test("azion -> azion", function() {deepEqual( Stem("azion"), "azion");});
test("azionari -> azionar", function() {deepEqual( Stem("azionari"), "azionar");});
test("azionariato -> azionar", function() {deepEqual( Stem("azionariato"), "azionar");});
test("azionarie -> azionar", function() {deepEqual( Stem("azionarie"), "azionar");});
test("azionario -> azionar", function() {deepEqual( Stem("azionario"), "azionar");});
test("azione -> azion", function() {deepEqual( Stem("azione"), "azion");});
test("azioni -> azion", function() {deepEqual( Stem("azioni"), "azion");});
test("azionista -> azion", function() {deepEqual( Stem("azionista"), "azion");});
test("azionisti -> azion", function() {deepEqual( Stem("azionisti"), "azion");});
test("azov -> azov", function() {deepEqual( Stem("azov"), "azov");});
test("azteca -> aztec", function() {deepEqual( Stem("azteca"), "aztec");});
test("azzano -> azzan", function() {deepEqual( Stem("azzano"), "azzan");});
test("azzardo -> azzard", function() {deepEqual( Stem("azzardo"), "azzard");});
test("azzaretti -> azzarett", function() {deepEqual( Stem("azzaretti"), "azzarett");});
test("azzecca -> azzecc", function() {deepEqual( Stem("azzecca"), "azzecc");});
test("azzeccare -> azzecc", function() {deepEqual( Stem("azzeccare"), "azzecc");});
test("azzerato -> azzer", function() {deepEqual( Stem("azzerato"), "azzer");});
test("azzurra -> azzurr", function() {deepEqual( Stem("azzurra"), "azzurr");});
test("azzurre -> azzurr", function() {deepEqual( Stem("azzurre"), "azzurr");});
test("azzurri -> azzurr", function() {deepEqual( Stem("azzurri"), "azzurr");});
test("azzurro -> azzurr", function() {deepEqual( Stem("azzurro"), "azzurr");});
test("b -> b", function() {deepEqual( Stem("b"), "b");});
test("baackman -> baackman", function() {deepEqual( Stem("baackman"), "baackman");});
test("bab -> bab", function() {deepEqual( Stem("bab"), "bab");});
test("babbini -> babbin", function() {deepEqual( Stem("babbini"), "babbin");});
test("babbo -> babb", function() {deepEqual( Stem("babbo"), "babb");});
test("babilonese -> babilones", function() {deepEqual( Stem("babilonese"), "babilones");});
test("babilonia -> babilon", function() {deepEqual( Stem("babilonia"), "babilon");});
test("baccani -> baccan", function() {deepEqual( Stem("baccani"), "baccan");});
test("baccano -> bacc", function() {deepEqual( Stem("baccano"), "bacc");});
test("bacche -> bacc", function() {deepEqual( Stem("bacche"), "bacc");});
test("bacchetta -> bacchett", function() {deepEqual( Stem("bacchetta"), "bacchett");});
test("bacchettare -> bacchett", function() {deepEqual( Stem("bacchettare"), "bacchett");});
test("bacchettato -> bacchett", function() {deepEqual( Stem("bacchettato"), "bacchett");});
test("bacchiarle -> bacc", function() {deepEqual( Stem("bacchiarle"), "bacc");});
test("bacci -> bacc", function() {deepEqual( Stem("bacci"), "bacc");});
test("bacco -> bacc", function() {deepEqual( Stem("bacco"), "bacc");});
test("bacheca -> bachec", function() {deepEqual( Stem("bacheca"), "bachec");});
test("bacheche -> bachec", function() {deepEqual( Stem("bacheche"), "bachec");});
test("baciare -> bac", function() {deepEqual( Stem("baciare"), "bac");});
test("baciasse -> bac", function() {deepEqual( Stem("baciasse"), "bac");});
test("baciata -> bac", function() {deepEqual( Stem("baciata"), "bac");});
test("baciati -> bac", function() {deepEqual( Stem("baciati"), "bac");});
test("baciatolo -> baciatol", function() {deepEqual( Stem("baciatolo"), "baciatol");});
test("baciava -> bac", function() {deepEqual( Stem("baciava"), "bac");});
test("baciavano -> bac", function() {deepEqual( Stem("baciavano"), "bac");});
test("bacilli -> bacill", function() {deepEqual( Stem("bacilli"), "bacill");});
test("bacio -> bac", function() {deepEqual( Stem("bacio"), "bac");});
test("bacioni -> bacion", function() {deepEqual( Stem("bacioni"), "bacion");});
test("back -> back", function() {deepEqual( Stem("back"), "back");});
test("backlund -> backlund", function() {deepEqual( Stem("backlund"), "backlund");});
test("backman -> backman", function() {deepEqual( Stem("backman"), "backman");});
test("baco -> bac", function() {deepEqual( Stem("baco"), "bac");});
test("bada -> bad", function() {deepEqual( Stem("bada"), "bad");});
test("badando -> bad", function() {deepEqual( Stem("badando"), "bad");});
test("badar -> bad", function() {deepEqual( Stem("badar"), "bad");});
test("badare -> bad", function() {deepEqual( Stem("badare"), "bad");});
test("badasse -> bad", function() {deepEqual( Stem("badasse"), "bad");});
test("badate -> bad", function() {deepEqual( Stem("badate"), "bad");});
test("badato -> bad", function() {deepEqual( Stem("badato"), "bad");});
test("badava -> bad", function() {deepEqual( Stem("badava"), "bad");});
test("badavan -> badavan", function() {deepEqual( Stem("badavan"), "badavan");});
test("badessa -> badess", function() {deepEqual( Stem("badessa"), "badess");});
test("badesse -> badess", function() {deepEqual( Stem("badesse"), "badess");});
test("badi -> bad", function() {deepEqual( Stem("badi"), "bad");});
test("badò -> bad", function() {deepEqual( Stem("badò"), "bad");});
test("baffi -> baff", function() {deepEqual( Stem("baffi"), "baff");});
test("baffie -> baff", function() {deepEqual( Stem("baffie"), "baff");});
test("bagagli -> bagagl", function() {deepEqual( Stem("bagagli"), "bagagl");});
test("bagaglino -> bagaglin", function() {deepEqual( Stem("bagaglino"), "bagaglin");});
test("bagattella -> bagattell", function() {deepEqual( Stem("bagattella"), "bagattell");});
test("baggiana -> baggian", function() {deepEqual( Stem("baggiana"), "baggian");});
test("baggianata -> baggian", function() {deepEqual( Stem("baggianata"), "baggian");});
test("baggianate -> baggian", function() {deepEqual( Stem("baggianate"), "baggian");});
test("baggiani -> baggian", function() {deepEqual( Stem("baggiani"), "baggian");});
test("baggiano -> bagg", function() {deepEqual( Stem("baggiano"), "bagg");});
test("baggino -> baggin", function() {deepEqual( Stem("baggino"), "baggin");});
test("baggio -> bagg", function() {deepEqual( Stem("baggio"), "bagg");});
test("baghdad -> baghdad", function() {deepEqual( Stem("baghdad"), "baghdad");});
test("baglieri -> baglier", function() {deepEqual( Stem("baglieri"), "baglier");});
test("bagm -> bagm", function() {deepEqual( Stem("bagm"), "bagm");});
test("bagna -> bagn", function() {deepEqual( Stem("bagna"), "bagn");});
test("bagnar -> bagn", function() {deepEqual( Stem("bagnar"), "bagn");});
test("bagnato -> bagn", function() {deepEqual( Stem("bagnato"), "bagn");});
test("bagnerebbe -> bagn", function() {deepEqual( Stem("bagnerebbe"), "bagn");});
test("bagno -> bagn", function() {deepEqual( Stem("bagno"), "bagn");});
test("bagnoli -> bagnol", function() {deepEqual( Stem("bagnoli"), "bagnol");});
test("bahrain -> bahrain", function() {deepEqual( Stem("bahrain"), "bahrain");});
test("baia -> bai", function() {deepEqual( Stem("baia"), "bai");});
test("baiano -> bai", function() {deepEqual( Stem("baiano"), "bai");});
test("baigest -> baigest", function() {deepEqual( Stem("baigest"), "baigest");});
test("bain -> bain", function() {deepEqual( Stem("bain"), "bain");});
test("bakirkov -> bakirkov", function() {deepEqual( Stem("bakirkov"), "bakirkov");});
test("bal -> bal", function() {deepEqual( Stem("bal"), "bal");});
test("balabbio -> balabb", function() {deepEqual( Stem("balabbio"), "balabb");});
test("balbettando -> balbett", function() {deepEqual( Stem("balbettando"), "balbett");});
test("balbettar -> balbett", function() {deepEqual( Stem("balbettar"), "balbett");});
test("balbettò -> balbett", function() {deepEqual( Stem("balbettò"), "balbett");});
test("balbo -> balb", function() {deepEqual( Stem("balbo"), "balb");});
test("balcani -> balcan", function() {deepEqual( Stem("balcani"), "balcan");});
test("balcanica -> balcan", function() {deepEqual( Stem("balcanica"), "balcan");});
test("balcaria -> balcar", function() {deepEqual( Stem("balcaria"), "balcar");});
test("baldacchino -> baldacchin", function() {deepEqual( Stem("baldacchino"), "baldacchin");});
test("baldanza -> baldanz", function() {deepEqual( Stem("baldanza"), "baldanz");});
test("baldanzosa -> baldanz", function() {deepEqual( Stem("baldanzosa"), "baldanz");});
test("baldassarri -> baldassarr", function() {deepEqual( Stem("baldassarri"), "baldassarr");});
test("baldi -> bald", function() {deepEqual( Stem("baldi"), "bald");});
test("baldieri -> baldier", function() {deepEqual( Stem("baldieri"), "baldier");});
test("baldini -> baldin", function() {deepEqual( Stem("baldini"), "baldin");});
test("balenar -> balen", function() {deepEqual( Stem("balenar"), "balen");});
test("balenato -> balen", function() {deepEqual( Stem("balenato"), "balen");});
test("baleno -> balen", function() {deepEqual( Stem("baleno"), "balen");});
test("balenò -> balen", function() {deepEqual( Stem("balenò"), "balen");});
test("balere -> bal", function() {deepEqual( Stem("balere"), "bal");});
test("balia -> bal", function() {deepEqual( Stem("balia"), "bal");});
test("balìa -> balì", function() {deepEqual( Stem("balìa"), "balì");});
test("balie -> bal", function() {deepEqual( Stem("balie"), "bal");});
test("balilla -> balill", function() {deepEqual( Stem("balilla"), "balill");});
test("balladur -> balladur", function() {deepEqual( Stem("balladur"), "balladur");});
test("ballar -> ball", function() {deepEqual( Stem("ballar"), "ball");});
test("ballard -> ballard", function() {deepEqual( Stem("ballard"), "ballard");});
test("ballare -> ball", function() {deepEqual( Stem("ballare"), "ball");});
test("ballate -> ball", function() {deepEqual( Stem("ballate"), "ball");});
test("ballavano -> ball", function() {deepEqual( Stem("ballavano"), "ball");});
test("balle -> ball", function() {deepEqual( Stem("balle"), "ball");});
test("ballen -> ballen", function() {deepEqual( Stem("ballen"), "ballen");});
test("balleri -> baller", function() {deepEqual( Stem("balleri"), "baller");});
test("ballerina -> ballerin", function() {deepEqual( Stem("ballerina"), "ballerin");});
test("ballerini -> ballerin", function() {deepEqual( Stem("ballerini"), "ballerin");});
test("ballerino -> ballerin", function() {deepEqual( Stem("ballerino"), "ballerin");});
test("balletta -> ballett", function() {deepEqual( Stem("balletta"), "ballett");});
test("balletto -> ballett", function() {deepEqual( Stem("balletto"), "ballett");});
test("ballo -> ball", function() {deepEqual( Stem("ballo"), "ball");});
test("ballotta -> ballott", function() {deepEqual( Stem("ballotta"), "ballott");});
test("ballottaggio -> ballottagg", function() {deepEqual( Stem("ballottaggio"), "ballottagg");});
test("baloccandosi -> balocc", function() {deepEqual( Stem("baloccandosi"), "balocc");});
test("balocchi -> balocc", function() {deepEqual( Stem("balocchi"), "balocc");});
test("balocco -> balocc", function() {deepEqual( Stem("balocco"), "balocc");});
test("balordo -> balord", function() {deepEqual( Stem("balordo"), "balord");});
test("balsam -> balsam", function() {deepEqual( Stem("balsam"), "balsam");});
test("balsamo -> balsam", function() {deepEqual( Stem("balsamo"), "balsam");});
test("baltimora -> baltimor", function() {deepEqual( Stem("baltimora"), "baltimor");});
test("baluardi -> baluard", function() {deepEqual( Stem("baluardi"), "baluard");});
test("baluardo -> baluard", function() {deepEqual( Stem("baluardo"), "baluard");});
test("balzando -> balz", function() {deepEqual( Stem("balzando"), "balz");});
test("balzano -> balz", function() {deepEqual( Stem("balzano"), "balz");});
test("balzare -> balz", function() {deepEqual( Stem("balzare"), "balz");});
test("balzato -> balz", function() {deepEqual( Stem("balzato"), "balz");});
test("balze -> balz", function() {deepEqual( Stem("balze"), "balz");});
test("balzellare -> balzell", function() {deepEqual( Stem("balzellare"), "balzell");});
test("balzello -> balzell", function() {deepEqual( Stem("balzello"), "balzell");});
test("balzelloni -> balzellon", function() {deepEqual( Stem("balzelloni"), "balzellon");});
test("balzi -> balz", function() {deepEqual( Stem("balzi"), "balz");});
test("balzo -> balz", function() {deepEqual( Stem("balzo"), "balz");});
test("balzò -> balz", function() {deepEqual( Stem("balzò"), "balz");});
test("bam -> bam", function() {deepEqual( Stem("bam"), "bam");});
test("bambina -> bambin", function() {deepEqual( Stem("bambina"), "bambin");});
test("bambine -> bambin", function() {deepEqual( Stem("bambine"), "bambin");});
test("bambinelli -> bambinell", function() {deepEqual( Stem("bambinelli"), "bambinell");});
test("bambinetta -> bambinett", function() {deepEqual( Stem("bambinetta"), "bambinett");});
test("bambinette -> bambinett", function() {deepEqual( Stem("bambinette"), "bambinett");});
test("bambini -> bambin", function() {deepEqual( Stem("bambini"), "bambin");});
test("bambino -> bambin", function() {deepEqual( Stem("bambino"), "bambin");});
test("bambole -> bambol", function() {deepEqual( Stem("bambole"), "bambol");});
test("bampi -> bamp", function() {deepEqual( Stem("bampi"), "bamp");});
test("bampo -> bamp", function() {deepEqual( Stem("bampo"), "bamp");});
test("ban -> ban", function() {deepEqual( Stem("ban"), "ban");});
test("banana -> banan", function() {deepEqual( Stem("banana"), "banan");});
test("banane -> banan", function() {deepEqual( Stem("banane"), "banan");});
test("bananè -> banan", function() {deepEqual( Stem("bananè"), "banan");});
test("banca -> banc", function() {deepEqual( Stem("banca"), "banc");});
test("bancari -> bancar", function() {deepEqual( Stem("bancari"), "bancar");});
test("bancaria -> bancar", function() {deepEqual( Stem("bancaria"), "bancar");});
test("bancarie -> bancar", function() {deepEqual( Stem("bancarie"), "bancar");});
test("bancario -> bancar", function() {deepEqual( Stem("bancario"), "bancar");});
test("bancarotta -> bancarott", function() {deepEqual( Stem("bancarotta"), "bancarott");});
test("banche -> banc", function() {deepEqual( Stem("banche"), "banc");});
test("banchelli -> banchell", function() {deepEqual( Stem("banchelli"), "banchell");});
test("banchetto -> banchett", function() {deepEqual( Stem("banchetto"), "banchett");});
test("banchi -> banc", function() {deepEqual( Stem("banchi"), "banc");});
test("banchina -> banchin", function() {deepEqual( Stem("banchina"), "banchin");});
test("banco -> banc", function() {deepEqual( Stem("banco"), "banc");});
test("bancone -> bancon", function() {deepEqual( Stem("bancone"), "bancon");});
test("banconote -> banconot", function() {deepEqual( Stem("banconote"), "banconot");});
test("band -> band", function() {deepEqual( Stem("band"), "band");});
test("banda -> band", function() {deepEqual( Stem("banda"), "band");});
test("bande -> band", function() {deepEqual( Stem("bande"), "band");});
test("bandera -> bander", function() {deepEqual( Stem("bandera"), "bander");});
test("bandi -> band", function() {deepEqual( Stem("bandi"), "band");});
test("bandiera -> bandier", function() {deepEqual( Stem("bandiera"), "bandier");});
test("bandiere -> band", function() {deepEqual( Stem("bandiere"), "band");});
test("bandierina -> bandierin", function() {deepEqual( Stem("bandierina"), "bandierin");});
test("bandierine -> bandierin", function() {deepEqual( Stem("bandierine"), "bandierin");});
test("bandita -> band", function() {deepEqual( Stem("bandita"), "band");});
test("banditi -> band", function() {deepEqual( Stem("banditi"), "band");});
test("bandito -> band", function() {deepEqual( Stem("bandito"), "band");});
test("bandiva -> band", function() {deepEqual( Stem("bandiva"), "band");});
test("bando -> band", function() {deepEqual( Stem("bando"), "band");});
test("bandolo -> bandol", function() {deepEqual( Stem("bandolo"), "bandol");});
test("bang -> bang", function() {deepEqual( Stem("bang"), "bang");});
test("bangalore -> bangalor", function() {deepEqual( Stem("bangalore"), "bangalor");});
test("bangkok -> bangkok", function() {deepEqual( Stem("bangkok"), "bangkok");});
test("bangladesh -> bangladesh", function() {deepEqual( Stem("bangladesh"), "bangladesh");});
test("bank -> bank", function() {deepEqual( Stem("bank"), "bank");});
test("banker -> banker", function() {deepEqual( Stem("banker"), "banker");});
test("banking -> banking", function() {deepEqual( Stem("banking"), "banking");});
test("bankitalia -> bankital", function() {deepEqual( Stem("bankitalia"), "bankital");});
test("banzato -> banz", function() {deepEqual( Stem("banzato"), "banz");});
test("baptiste -> baptist", function() {deepEqual( Stem("baptiste"), "baptist");});
test("bar -> bar", function() {deepEqual( Stem("bar"), "bar");});
test("bara -> bar", function() {deepEqual( Stem("bara"), "bar");});
test("barabba -> barabb", function() {deepEqual( Stem("barabba"), "barabb");});
test("baracca -> baracc", function() {deepEqual( Stem("baracca"), "baracc");});
test("baracche -> baracc", function() {deepEqual( Stem("baracche"), "baracc");});
test("baraldi -> barald", function() {deepEqual( Stem("baraldi"), "barald");});
test("baramathi -> baramath", function() {deepEqual( Stem("baramathi"), "baramath");});
test("baraòs -> baraòs", function() {deepEqual( Stem("baraòs"), "baraòs");});
test("baratro -> baratr", function() {deepEqual( Stem("baratro"), "baratr");});
test("barattando -> baratt", function() {deepEqual( Stem("barattando"), "baratt");});
test("barattano -> baratt", function() {deepEqual( Stem("barattano"), "baratt");});
test("barattare -> baratt", function() {deepEqual( Stem("barattare"), "baratt");});
test("barattata -> baratt", function() {deepEqual( Stem("barattata"), "baratt");});
test("barattate -> baratt", function() {deepEqual( Stem("barattate"), "baratt");});
test("barattava -> baratt", function() {deepEqual( Stem("barattava"), "baratt");});
test("barattavan -> barattavan", function() {deepEqual( Stem("barattavan"), "barattavan");});
test("baratterei -> baratt", function() {deepEqual( Stem("baratterei"), "baratt");});
test("barattoli -> barattol", function() {deepEqual( Stem("barattoli"), "barattol");});
test("barba -> barb", function() {deepEqual( Stem("barba"), "barb");});
test("barbaccia -> barbacc", function() {deepEqual( Stem("barbaccia"), "barbacc");});
test("barbados -> barbados", function() {deepEqual( Stem("barbados"), "barbados");});
test("barbara -> barbar", function() {deepEqual( Stem("barbara"), "barbar");});
test("barbaramente -> barbar", function() {deepEqual( Stem("barbaramente"), "barbar");});
test("barbaria -> barbar", function() {deepEqual( Stem("barbaria"), "barbar");});
test("barbaricino -> barbaricin", function() {deepEqual( Stem("barbaricino"), "barbaricin");});
test("barbarie -> barbar", function() {deepEqual( Stem("barbarie"), "barbar");});
test("barbaro -> barbar", function() {deepEqual( Stem("barbaro"), "barbar");});
test("barbarossa -> barbaross", function() {deepEqual( Stem("barbarossa"), "barbaross");});
test("barbasso -> barbass", function() {deepEqual( Stem("barbasso"), "barbass");});
test("barbe -> barb", function() {deepEqual( Stem("barbe"), "barb");});
test("barber -> barber", function() {deepEqual( Stem("barber"), "barber");});
test("barberini -> barberin", function() {deepEqual( Stem("barberini"), "barberin");});
test("barbetta -> barbett", function() {deepEqual( Stem("barbetta"), "barbett");});
test("barbieri -> barbier", function() {deepEqual( Stem("barbieri"), "barbier");});
test("barbiero -> barbier", function() {deepEqual( Stem("barbiero"), "barbier");});
test("barbone -> barbon", function() {deepEqual( Stem("barbone"), "barbon");});
test("barbour -> barbour", function() {deepEqual( Stem("barbour"), "barbour");});
test("barca -> barc", function() {deepEqual( Stem("barca"), "barc");});
test("barcaioli -> barcaiol", function() {deepEqual( Stem("barcaioli"), "barcaiol");});
test("barcaiolo -> barcaiol", function() {deepEqual( Stem("barcaiolo"), "barcaiol");});
test("barcellona -> barcellon", function() {deepEqual( Stem("barcellona"), "barcellon");});
test("barche -> barc", function() {deepEqual( Stem("barche"), "barc");});
test("barchetta -> barchett", function() {deepEqual( Stem("barchetta"), "barchett");});
test("barclay -> barclay", function() {deepEqual( Stem("barclay"), "barclay");});
test("barco -> barc", function() {deepEqual( Stem("barco"), "barc");});
test("barcollando -> barcoll", function() {deepEqual( Stem("barcollando"), "barcoll");});
test("barcollò -> barcoll", function() {deepEqual( Stem("barcollò"), "barcoll");});
test("bardature -> bardatur", function() {deepEqual( Stem("bardature"), "bardatur");});
test("barella -> barell", function() {deepEqual( Stem("barella"), "barell");});
test("barese -> bares", function() {deepEqual( Stem("barese"), "bares");});
test("baresi -> bares", function() {deepEqual( Stem("baresi"), "bares");});
test("bargello -> bargell", function() {deepEqual( Stem("bargello"), "bargell");});
test("bari -> bar", function() {deepEqual( Stem("bari"), "bar");});
test("baricentro -> baricentr", function() {deepEqual( Stem("baricentro"), "baricentr");});
test("barili -> baril", function() {deepEqual( Stem("barili"), "baril");});
test("barletta -> barlett", function() {deepEqual( Stem("barletta"), "barlett");});
test("barlume -> barlum", function() {deepEqual( Stem("barlume"), "barlum");});
test("barnabas -> barnabas", function() {deepEqual( Stem("barnabas"), "barnabas");});
test("barocciaio -> barocciai", function() {deepEqual( Stem("barocciaio"), "barocciai");});
test("baroccio -> barocc", function() {deepEqual( Stem("baroccio"), "barocc");});
test("barocco -> barocc", function() {deepEqual( Stem("barocco"), "barocc");});
test("barollo -> baroll", function() {deepEqual( Stem("barollo"), "baroll");});
test("baronchelli -> baronchell", function() {deepEqual( Stem("baronchelli"), "baronchell");});
test("baroni -> baron", function() {deepEqual( Stem("baroni"), "baron");});
test("barricata -> barric", function() {deepEqual( Stem("barricata"), "barric");});
test("barriera -> barrier", function() {deepEqual( Stem("barriera"), "barrier");});
test("barrington -> barrington", function() {deepEqual( Stem("barrington"), "barrington");});
test("barroccio -> barrocc", function() {deepEqual( Stem("barroccio"), "barrocc");});
test("barsio -> bars", function() {deepEqual( Stem("barsio"), "bars");});
test("bart -> bart", function() {deepEqual( Stem("bart"), "bart");});
test("bartholomew -> bartholomew", function() {deepEqual( Stem("bartholomew"), "bartholomew");});
test("bartolomeo -> bartolome", function() {deepEqual( Stem("bartolomeo"), "bartolome");});
test("bartolommeo -> bartolomme", function() {deepEqual( Stem("bartolommeo"), "bartolomme");});
test("baruch -> baruc", function() {deepEqual( Stem("baruch"), "baruc");});
test("baruffe -> baruff", function() {deepEqual( Stem("baruffe"), "baruff");});
test("barzaghi -> barzag", function() {deepEqual( Stem("barzaghi"), "barzag");});
test("basata -> bas", function() {deepEqual( Stem("basata"), "bas");});
test("basato -> bas", function() {deepEqual( Stem("basato"), "bas");});
test("base -> bas", function() {deepEqual( Stem("base"), "bas");});
test("basel -> basel", function() {deepEqual( Stem("basel"), "basel");});
test("baselga -> baselg", function() {deepEqual( Stem("baselga"), "baselg");});
test("basi -> bas", function() {deepEqual( Stem("basi"), "bas");});
test("basilari -> basilar", function() {deepEqual( Stem("basilari"), "basilar");});
test("basile -> basil", function() {deepEqual( Stem("basile"), "basil");});
test("basilea -> basile", function() {deepEqual( Stem("basilea"), "basile");});
test("basilicata -> basilic", function() {deepEqual( Stem("basilicata"), "basilic");});
test("basinger -> basinger", function() {deepEqual( Stem("basinger"), "basinger");});
test("basisce -> bas", function() {deepEqual( Stem("basisce"), "bas");});
test("basket -> basket", function() {deepEqual( Stem("basket"), "basket");});
test("bassa -> bass", function() {deepEqual( Stem("bassa"), "bass");});
test("bassani -> bassan", function() {deepEqual( Stem("bassani"), "bassan");});
test("bassanini -> bassanin", function() {deepEqual( Stem("bassanini"), "bassanin");});
test("bassano -> bass", function() {deepEqual( Stem("bassano"), "bass");});
test("basse -> bass", function() {deepEqual( Stem("basse"), "bass");});
test("bassetti -> bassett", function() {deepEqual( Stem("bassetti"), "bassett");});
test("bassi -> bass", function() {deepEqual( Stem("bassi"), "bass");});
test("bassifondi -> bassifond", function() {deepEqual( Stem("bassifondi"), "bassifond");});
test("bassissimi -> bassissim", function() {deepEqual( Stem("bassissimi"), "bassissim");});
test("basso -> bass", function() {deepEqual( Stem("basso"), "bass");});
test("bassolino -> bassolin", function() {deepEqual( Stem("bassolino"), "bassolin");});
test("basta -> bast", function() {deepEqual( Stem("basta"), "bast");});
test("bastando -> bast", function() {deepEqual( Stem("bastando"), "bast");});
test("bastandoci -> bast", function() {deepEqual( Stem("bastandoci"), "bast");});
test("bastandogli -> bast", function() {deepEqual( Stem("bastandogli"), "bast");});
test("bastano -> bast", function() {deepEqual( Stem("bastano"), "bast");});
test("bastante -> bastant", function() {deepEqual( Stem("bastante"), "bastant");});
test("bastantemente -> bastant", function() {deepEqual( Stem("bastantemente"), "bastant");});
test("bastanti -> bastant", function() {deepEqual( Stem("bastanti"), "bastant");});
test("bastar -> bast", function() {deepEqual( Stem("bastar"), "bast");});
test("bastare -> bast", function() {deepEqual( Stem("bastare"), "bast");});
test("bastasse -> bast", function() {deepEqual( Stem("bastasse"), "bast");});
test("bastassero -> bast", function() {deepEqual( Stem("bastassero"), "bast");});
test("bastata -> bast", function() {deepEqual( Stem("bastata"), "bast");});
test("bastate -> bast", function() {deepEqual( Stem("bastate"), "bast");});
test("bastati -> bast", function() {deepEqual( Stem("bastati"), "bast");});
test("bastato -> bast", function() {deepEqual( Stem("bastato"), "bast");});
test("bastava -> bast", function() {deepEqual( Stem("bastava"), "bast");});
test("basten -> basten", function() {deepEqual( Stem("basten"), "basten");});
test("basterà -> bast", function() {deepEqual( Stem("basterà"), "bast");});
test("basterebbe -> bast", function() {deepEqual( Stem("basterebbe"), "bast");});
test("basti -> bast", function() {deepEqual( Stem("basti"), "bast");});
test("bastia -> bast", function() {deepEqual( Stem("bastia"), "bast");});
test("bastimento -> bast", function() {deepEqual( Stem("bastimento"), "bast");});
test("bastioni -> bastion", function() {deepEqual( Stem("bastioni"), "bastion");});
test("basto -> bast", function() {deepEqual( Stem("basto"), "bast");});
test("bastò -> bast", function() {deepEqual( Stem("bastò"), "bast");});
test("bastogi -> bastog", function() {deepEqual( Stem("bastogi"), "bastog");});
test("bastonabile -> baston", function() {deepEqual( Stem("bastonabile"), "baston");});
test("bastonabilissimo -> bastonabilissim", function() {deepEqual( Stem("bastonabilissimo"), "bastonabilissim");});
test("bastonate -> baston", function() {deepEqual( Stem("bastonate"), "baston");});
test("bastonato -> baston", function() {deepEqual( Stem("bastonato"), "baston");});
test("bastoncino -> bastoncin", function() {deepEqual( Stem("bastoncino"), "bastoncin");});
test("bastone -> baston", function() {deepEqual( Stem("bastone"), "baston");});
test("bastoni -> baston", function() {deepEqual( Stem("bastoni"), "baston");});
test("bastono -> bast", function() {deepEqual( Stem("bastono"), "bast");});
test("bataglione -> bataglion", function() {deepEqual( Stem("bataglione"), "bataglion");});
test("batistuta -> batist", function() {deepEqual( Stem("batistuta"), "batist");});
test("batman -> batman", function() {deepEqual( Stem("batman"), "batman");});
test("battaggia -> battagg", function() {deepEqual( Stem("battaggia"), "battagg");});
test("battaglia -> battagl", function() {deepEqual( Stem("battaglia"), "battagl");});
test("battaglià -> battagl", function() {deepEqual( Stem("battaglià"), "battagl");});
test("battaglie -> battagl", function() {deepEqual( Stem("battaglie"), "battagl");});
test("battaglione -> battaglion", function() {deepEqual( Stem("battaglione"), "battaglion");});
test("battaglioni -> battaglion", function() {deepEqual( Stem("battaglioni"), "battaglion");});
test("batte -> batt", function() {deepEqual( Stem("batte"), "batt");});
test("battello -> battell", function() {deepEqual( Stem("battello"), "battell");});
test("battendo -> batt", function() {deepEqual( Stem("battendo"), "batt");});
test("battendolo -> batt", function() {deepEqual( Stem("battendolo"), "batt");});
test("battente -> battent", function() {deepEqual( Stem("battente"), "battent");});
test("battenti -> battent", function() {deepEqual( Stem("battenti"), "battent");});
test("batter -> batter", function() {deepEqual( Stem("batter"), "batter");});
test("batterà -> batt", function() {deepEqual( Stem("batterà"), "batt");});
test("batterci -> batt", function() {deepEqual( Stem("batterci"), "batt");});
test("battere -> batt", function() {deepEqual( Stem("battere"), "batt");});
test("battermi -> batt", function() {deepEqual( Stem("battermi"), "batt");});
test("batterono -> batt", function() {deepEqual( Stem("batterono"), "batt");});
test("battersi -> batt", function() {deepEqual( Stem("battersi"), "batt");});
test("battesimo -> battesim", function() {deepEqual( Stem("battesimo"), "battesim");});
test("batteva -> batt", function() {deepEqual( Stem("batteva"), "batt");});
test("battezzata -> battezz", function() {deepEqual( Stem("battezzata"), "battezz");});
test("battezzato -> battezz", function() {deepEqual( Stem("battezzato"), "battezz");});
test("battiamo -> batt", function() {deepEqual( Stem("battiamo"), "batt");});
test("battiato -> batt", function() {deepEqual( Stem("battiato"), "batt");});
test("batticuore -> batticuor", function() {deepEqual( Stem("batticuore"), "batticuor");});
test("battigia -> battig", function() {deepEqual( Stem("battigia"), "battig");});
test("battimani -> battiman", function() {deepEqual( Stem("battimani"), "battiman");});
test("battipagliese -> battipaglies", function() {deepEqual( Stem("battipagliese"), "battipaglies");});
test("battista -> battist", function() {deepEqual( Stem("battista"), "battist");});
test("battistini -> battistin", function() {deepEqual( Stem("battistini"), "battistin");});
test("battistrada -> battistrad", function() {deepEqual( Stem("battistrada"), "battistrad");});
test("batto -> batt", function() {deepEqual( Stem("batto"), "batt");});
test("battuta -> batt", function() {deepEqual( Stem("battuta"), "batt");});
test("battute -> batt", function() {deepEqual( Stem("battute"), "batt");});
test("battuto -> batt", function() {deepEqual( Stem("battuto"), "batt");});
test("battutta -> battutt", function() {deepEqual( Stem("battutta"), "battutt");});
test("batuffoletto -> batuffolett", function() {deepEqual( Stem("batuffoletto"), "batuffolett");});
test("baudo -> baud", function() {deepEqual( Stem("baudo"), "baud");});
test("baumann -> baumann", function() {deepEqual( Stem("baumann"), "baumann");});
test("bava -> bav", function() {deepEqual( Stem("bava"), "bav");});
test("bavarese -> bavares", function() {deepEqual( Stem("bavarese"), "bavares");});
test("bavero -> baver", function() {deepEqual( Stem("bavero"), "baver");});
test("baviera -> bavier", function() {deepEqual( Stem("baviera"), "bavier");});
test("bay -> bay", function() {deepEqual( Stem("bay"), "bay");});
test("bayer -> bayer", function() {deepEqual( Stem("bayer"), "bayer");});
test("bayerwerk -> bayerwerk", function() {deepEqual( Stem("bayerwerk"), "bayerwerk");});
test("bazza -> bazz", function() {deepEqual( Stem("bazza"), "bazz");});
test("bazzecole -> bazzecol", function() {deepEqual( Stem("bazzecole"), "bazzecol");});
test("bazzicate -> bazzic", function() {deepEqual( Stem("bazzicate"), "bazzic");});
test("bazzicava -> bazzic", function() {deepEqual( Stem("bazzicava"), "bazzic");});
test("bazzicherebbero -> bazzic", function() {deepEqual( Stem("bazzicherebbero"), "bazzic");});
test("bb -> bb", function() {deepEqual( Stem("bb"), "bb");});
test("bbc -> bbc", function() {deepEqual( Stem("bbc"), "bbc");});
test("bc -> bc", function() {deepEqual( Stem("bc"), "bc");});
test("bca -> bca", function() {deepEqual( Stem("bca"), "bca");});
test("bco -> bco", function() {deepEqual( Stem("bco"), "bco");});
test("bd -> bd", function() {deepEqual( Stem("bd"), "bd");});
test("beach -> beac", function() {deepEqual( Stem("beach"), "beac");});
test("beata -> beat", function() {deepEqual( Stem("beata"), "beat");});
test("beatificazione -> beatif", function() {deepEqual( Stem("beatificazione"), "beatif");});
test("beatle -> beatl", function() {deepEqual( Stem("beatle"), "beatl");});
test("beato -> beat", function() {deepEqual( Stem("beato"), "beat");});
test("beatrice -> beatric", function() {deepEqual( Stem("beatrice"), "beatric");});
test("beautiful -> beautiful", function() {deepEqual( Stem("beautiful"), "beautiful");});
test("bebè -> beb", function() {deepEqual( Stem("bebè"), "beb");});
test("bec -> bec", function() {deepEqual( Stem("bec"), "bec");});
test("beccare -> becc", function() {deepEqual( Stem("beccare"), "becc");});
test("beccarsi -> becc", function() {deepEqual( Stem("beccarsi"), "becc");});
test("beccatò -> beccat", function() {deepEqual( Stem("beccatò"), "beccat");});
test("becchini -> becchin", function() {deepEqual( Stem("becchini"), "becchin");});
test("becchino -> becchin", function() {deepEqual( Stem("becchino"), "becchin");});
test("becchio -> becc", function() {deepEqual( Stem("becchio"), "becc");});
test("becco -> becc", function() {deepEqual( Stem("becco"), "becc");});
test("becker -> becker", function() {deepEqual( Stem("becker"), "becker");});
test("beffa -> beff", function() {deepEqual( Stem("beffa"), "beff");});
test("beffardi -> beffard", function() {deepEqual( Stem("beffardi"), "beffard");});
test("beffe -> beff", function() {deepEqual( Stem("beffe"), "beff");});
test("beghetto -> beghett", function() {deepEqual( Stem("beghetto"), "beghett");});
test("beghin -> beghin", function() {deepEqual( Stem("beghin"), "beghin");});
test("begli -> begl", function() {deepEqual( Stem("begli"), "begl");});
test("beha -> beh", function() {deepEqual( Stem("beha"), "beh");});
test("bei -> bei", function() {deepEqual( Stem("bei"), "bei");});
test("beirut -> beirut", function() {deepEqual( Stem("beirut"), "beirut");});
test("beit -> beit", function() {deepEqual( Stem("beit"), "beit");});
test("bel -> bel", function() {deepEqual( Stem("bel"), "bel");});
test("belar -> bel", function() {deepEqual( Stem("belar"), "bel");});
test("belare -> bel", function() {deepEqual( Stem("belare"), "bel");});
test("belati -> bel", function() {deepEqual( Stem("belati"), "bel");});
test("belfiori -> belfior", function() {deepEqual( Stem("belfiori"), "belfior");});
test("belga -> belg", function() {deepEqual( Stem("belga"), "belg");});
test("belgio -> belg", function() {deepEqual( Stem("belgio"), "belg");});
test("belgrado -> belgrad", function() {deepEqual( Stem("belgrado"), "belgrad");});
test("beliaiev -> beliaiev", function() {deepEqual( Stem("beliaiev"), "beliaiev");});
test("bell -> bell", function() {deepEqual( Stem("bell"), "bell");});
test("bella -> bell", function() {deepEqual( Stem("bella"), "bell");});
test("bellano -> bell", function() {deepEqual( Stem("bellano"), "bell");});
test("bellarditta -> bellarditt", function() {deepEqual( Stem("bellarditta"), "bellarditt");});
test("belle -> bell", function() {deepEqual( Stem("belle"), "bell");});
test("bellerio -> beller", function() {deepEqual( Stem("bellerio"), "beller");});
test("bellezza -> bellezz", function() {deepEqual( Stem("bellezza"), "bellezz");});
test("bellezze -> bellezz", function() {deepEqual( Stem("bellezze"), "bellezz");});
test("belli -> bell", function() {deepEqual( Stem("belli"), "bell");});
test("bellici -> bellic", function() {deepEqual( Stem("bellici"), "bellic");});
test("belligerante -> belliger", function() {deepEqual( Stem("belligerante"), "belliger");});
test("belligeranza -> belliger", function() {deepEqual( Stem("belligeranza"), "belliger");});
test("bellissima -> bellissim", function() {deepEqual( Stem("bellissima"), "bellissim");});
test("bellissime -> bellissim", function() {deepEqual( Stem("bellissime"), "bellissim");});
test("bellissimo -> bellissim", function() {deepEqual( Stem("bellissimo"), "bellissim");});
test("bello -> bell", function() {deepEqual( Stem("bello"), "bell");});
test("bellucci -> bellucc", function() {deepEqual( Stem("bellucci"), "bellucc");});
test("bellunese -> bellunes", function() {deepEqual( Stem("bellunese"), "bellunes");});
test("belluno -> bellun", function() {deepEqual( Stem("belluno"), "bellun");});
test("belmondo -> belmond", function() {deepEqual( Stem("belmondo"), "belmond");});
test("belson -> belson", function() {deepEqual( Stem("belson"), "belson");});
test("beltrami -> beltram", function() {deepEqual( Stem("beltrami"), "beltram");});
test("belzebù -> belzebù", function() {deepEqual( Stem("belzebù"), "belzebù");});
test("bempensante -> bempens", function() {deepEqual( Stem("bempensante"), "bempens");});
test("ben -> ben", function() {deepEqual( Stem("ben"), "ben");});
test("benaivedes -> benaivedes", function() {deepEqual( Stem("benaivedes"), "benaivedes");});
test("benarrivo -> benarr", function() {deepEqual( Stem("benarrivo"), "benarr");});
test("benaugurante -> benaugur", function() {deepEqual( Stem("benaugurante"), "benaugur");});
test("benavides -> benavides", function() {deepEqual( Stem("benavides"), "benavides");});
test("benché -> benc", function() {deepEqual( Stem("benché"), "benc");});
test("benchè -> benc", function() {deepEqual( Stem("benchè"), "benc");});
test("benda -> bend", function() {deepEqual( Stem("benda"), "bend");});
test("bene -> ben", function() {deepEqual( Stem("bene"), "ben");});
test("benedett -> benedett", function() {deepEqual( Stem("benedett"), "benedett");});
test("benedetta -> benedett", function() {deepEqual( Stem("benedetta"), "benedett");});
test("benedette -> benedett", function() {deepEqual( Stem("benedette"), "benedett");});
test("benedetti -> benedett", function() {deepEqual( Stem("benedetti"), "benedett");});
test("benedetto -> benedett", function() {deepEqual( Stem("benedetto"), "benedett");});
test("benedica -> bened", function() {deepEqual( Stem("benedica"), "bened");});
test("benedice -> bened", function() {deepEqual( Stem("benedice"), "bened");});
test("benedicilo -> benedicil", function() {deepEqual( Stem("benedicilo"), "benedicil");});
test("benedico -> bened", function() {deepEqual( Stem("benedico"), "bened");});
test("benedir -> bened", function() {deepEqual( Stem("benedir"), "bened");});
test("benedirà -> bened", function() {deepEqual( Stem("benedirà"), "bened");});
test("benedire -> bened", function() {deepEqual( Stem("benedire"), "bened");});
test("benedisse -> benediss", function() {deepEqual( Stem("benedisse"), "benediss");});
test("benedizione -> benedizion", function() {deepEqual( Stem("benedizione"), "benedizion");});
test("benedizioni -> benedizion", function() {deepEqual( Stem("benedizioni"), "benedizion");});
test("benefattore -> benefattor", function() {deepEqual( Stem("benefattore"), "benefattor");});
test("benefattori -> benefattor", function() {deepEqual( Stem("benefattori"), "benefattor");});
test("benefattrice -> benefattr", function() {deepEqual( Stem("benefattrice"), "benefattr");});
test("benefica -> benef", function() {deepEqual( Stem("benefica"), "benef");});
test("beneficare -> benefic", function() {deepEqual( Stem("beneficare"), "benefic");});
test("beneficati -> benefic", function() {deepEqual( Stem("beneficati"), "benefic");});
test("beneficenza -> beneficent", function() {deepEqual( Stem("beneficenza"), "beneficent");});
test("beneficenze -> beneficent", function() {deepEqual( Stem("beneficenze"), "beneficent");});
test("benefici -> benef", function() {deepEqual( Stem("benefici"), "benef");});
test("beneficiari -> beneficiar", function() {deepEqual( Stem("beneficiari"), "beneficiar");});
test("beneficiato -> benefic", function() {deepEqual( Stem("beneficiato"), "benefic");});
test("beneficienza -> beneficient", function() {deepEqual( Stem("beneficienza"), "beneficient");});
test("beneficio -> benefic", function() {deepEqual( Stem("beneficio"), "benefic");});
test("benefico -> benef", function() {deepEqual( Stem("benefico"), "benef");});
test("benefitio -> benefit", function() {deepEqual( Stem("benefitio"), "benefit");});
test("benefizio -> benefiz", function() {deepEqual( Stem("benefizio"), "benefiz");});
test("benemeriti -> benemer", function() {deepEqual( Stem("benemeriti"), "benemer");});
test("benemerito -> benemer", function() {deepEqual( Stem("benemerito"), "benemer");});
test("benestanti -> benest", function() {deepEqual( Stem("benestanti"), "benest");});
test("benetti -> benett", function() {deepEqual( Stem("benetti"), "benett");});
test("benetton -> benetton", function() {deepEqual( Stem("benetton"), "benetton");});
test("benevento -> benevent", function() {deepEqual( Stem("benevento"), "benevent");});
test("benevolenza -> benevolent", function() {deepEqual( Stem("benevolenza"), "benevolent");});
test("benevoli -> benevol", function() {deepEqual( Stem("benevoli"), "benevol");});
test("benevolo -> benevol", function() {deepEqual( Stem("benevolo"), "benevol");});
test("beni -> ben", function() {deepEqual( Stem("beni"), "ben");});
test("beniamino -> beniamin", function() {deepEqual( Stem("beniamino"), "beniamin");});
test("benigna -> benign", function() {deepEqual( Stem("benigna"), "benign");});
test("benignità -> benign", function() {deepEqual( Stem("benignità"), "benign");});
test("benissimo -> benissim", function() {deepEqual( Stem("benissimo"), "benissim");});
test("benni -> benn", function() {deepEqual( Stem("benni"), "benn");});
test("benny -> benny", function() {deepEqual( Stem("benny"), "benny");});
test("benone -> benon", function() {deepEqual( Stem("benone"), "benon");});
test("benservito -> benserv", function() {deepEqual( Stem("benservito"), "benserv");});
test("bensì -> bens", function() {deepEqual( Stem("bensì"), "bens");});
test("benvenuta -> benven", function() {deepEqual( Stem("benvenuta"), "benven");});
test("benvenuto -> benven", function() {deepEqual( Stem("benvenuto"), "benven");});
test("benzina -> benzin", function() {deepEqual( Stem("benzina"), "benzin");});
test("beppe -> bepp", function() {deepEqual( Stem("beppe"), "bepp");});
test("berbera -> berber", function() {deepEqual( Stem("berbera"), "berber");});
test("berberovic -> berberovic", function() {deepEqual( Stem("berberovic"), "berberovic");});
test("bere -> ber", function() {deepEqual( Stem("bere"), "ber");});
test("berenger -> berenger", function() {deepEqual( Stem("berenger"), "berenger");});
test("beretta -> berett", function() {deepEqual( Stem("beretta"), "berett");});
test("bergamasca -> bergamasc", function() {deepEqual( Stem("bergamasca"), "bergamasc");});
test("bergamasche -> bergamasc", function() {deepEqual( Stem("bergamasche"), "bergamasc");});
test("bergamaschi -> bergamasc", function() {deepEqual( Stem("bergamaschi"), "bergamasc");});
test("bergamasco -> bergamasc", function() {deepEqual( Stem("bergamasco"), "bergamasc");});
test("bergamascone -> bergamascon", function() {deepEqual( Stem("bergamascone"), "bergamascon");});
test("bergamo -> bergam", function() {deepEqual( Stem("bergamo"), "bergam");});
test("bergkamp -> bergkamp", function() {deepEqual( Stem("bergkamp"), "bergkamp");});
test("bergodi -> bergod", function() {deepEqual( Stem("bergodi"), "bergod");});
test("bergomi -> bergom", function() {deepEqual( Stem("bergomi"), "bergom");});
test("berhanu -> berhanu", function() {deepEqual( Stem("berhanu"), "berhanu");});
test("berisha -> berish", function() {deepEqual( Stem("berisha"), "berish");});
test("berlanda -> berland", function() {deepEqual( Stem("berlanda"), "berland");});
test("berlenghi -> berleng", function() {deepEqual( Stem("berlenghi"), "berleng");});
test("berlinga -> berling", function() {deepEqual( Stem("berlinga"), "berling");});
test("berlinghe -> berling", function() {deepEqual( Stem("berlinghe"), "berling");});
test("berlinguer -> berlinguer", function() {deepEqual( Stem("berlinguer"), "berlinguer");});
test("berlino -> berlin", function() {deepEqual( Stem("berlino"), "berlin");});
test("berluscaz -> berluscaz", function() {deepEqual( Stem("berluscaz"), "berluscaz");});
test("berlusconi -> berluscon", function() {deepEqual( Stem("berlusconi"), "berluscon");});
test("berlusconì -> berluscon", function() {deepEqual( Stem("berlusconì"), "berluscon");});
test("berlusconiani -> berlusconian", function() {deepEqual( Stem("berlusconiani"), "berlusconian");});
test("berlusconiano -> berluscon", function() {deepEqual( Stem("berlusconiano"), "berluscon");});
test("berluskaiser -> berluskaiser", function() {deepEqual( Stem("berluskaiser"), "berluskaiser");});
test("bermuda -> bermud", function() {deepEqual( Stem("bermuda"), "bermud");});
test("bernabè -> bernab", function() {deepEqual( Stem("bernabè"), "bernab");});
test("bernard -> bernard", function() {deepEqual( Stem("bernard"), "bernard");});
test("bernardelli -> bernardell", function() {deepEqual( Stem("bernardelli"), "bernardell");});
test("bernardi -> bernard", function() {deepEqual( Stem("bernardi"), "bernard");});
test("bernardini -> bernardin", function() {deepEqual( Stem("bernardini"), "bernardin");});
test("bernardo -> bernard", function() {deepEqual( Stem("bernardo"), "bernard");});
test("bernassola -> bernassol", function() {deepEqual( Stem("bernassola"), "bernassol");});
test("bernoccolo -> bernoccol", function() {deepEqual( Stem("bernoccolo"), "bernoccol");});
test("berretta -> berrett", function() {deepEqual( Stem("berretta"), "berrett");});
test("berretti -> berrett", function() {deepEqual( Stem("berretti"), "berrett");});
test("berrettine -> berrettin", function() {deepEqual( Stem("berrettine"), "berrettin");});
test("berretto -> berrett", function() {deepEqual( Stem("berretto"), "berrett");});
test("bersagliando -> bersagl", function() {deepEqual( Stem("bersagliando"), "bersagl");});
test("bersaglio -> bersagl", function() {deepEqual( Stem("bersaglio"), "bersagl");});
test("bersagliò -> bersagl", function() {deepEqual( Stem("bersagliò"), "bersagl");});
test("bersani -> bersan", function() {deepEqual( Stem("bersani"), "bersan");});
test("berselli -> bersell", function() {deepEqual( Stem("berselli"), "bersell");});
test("bertarelli -> bertarell", function() {deepEqual( Stem("bertarelli"), "bertarell");});
test("bertelli -> bertell", function() {deepEqual( Stem("bertelli"), "bertell");});
test("berti -> bert", function() {deepEqual( Stem("berti"), "bert");});
test("bertinotti -> bertinott", function() {deepEqual( Stem("bertinotti"), "bertinott");});
test("berto -> bert", function() {deepEqual( Stem("berto"), "bert");});
test("bertolucci -> bertolucc", function() {deepEqual( Stem("bertolucci"), "bertolucc");});
test("beruri -> berur", function() {deepEqual( Stem("beruri"), "berur");});
test("besà -> bes", function() {deepEqual( Stem("besà"), "bes");});
test("beschin -> beschin", function() {deepEqual( Stem("beschin"), "beschin");});
test("beso -> bes", function() {deepEqual( Stem("beso"), "bes");});
test("best -> best", function() {deepEqual( Stem("best"), "best");});
test("bestemmia -> bestemm", function() {deepEqual( Stem("bestemmia"), "bestemm");});
test("bestemmiando -> bestemm", function() {deepEqual( Stem("bestemmiando"), "bestemm");});
test("bestemmiato -> bestemm", function() {deepEqual( Stem("bestemmiato"), "bestemm");});
test("bestemmiavano -> bestemm", function() {deepEqual( Stem("bestemmiavano"), "bestemm");});
test("bestemmie -> bestemm", function() {deepEqual( Stem("bestemmie"), "bestemm");});
test("bestia -> best", function() {deepEqual( Stem("bestia"), "best");});
test("bestiale -> bestial", function() {deepEqual( Stem("bestiale"), "bestial");});
test("bestiame -> bestiam", function() {deepEqual( Stem("bestiame"), "bestiam");});
test("bestie -> best", function() {deepEqual( Stem("bestie"), "best");});
test("bestione -> bestion", function() {deepEqual( Stem("bestione"), "bestion");});
test("betis -> betis", function() {deepEqual( Stem("betis"), "betis");});
test("bettin -> bettin", function() {deepEqual( Stem("bettin"), "bettin");});
test("bettina -> bettin", function() {deepEqual( Stem("bettina"), "bettin");});
test("bettino -> bettin", function() {deepEqual( Stem("bettino"), "bettin");});
test("bettinò -> bettin", function() {deepEqual( Stem("bettinò"), "bettin");});
test("bettiol -> bettiol", function() {deepEqual( Stem("bettiol"), "bettiol");});
test("bettola -> bettol", function() {deepEqual( Stem("bettola"), "bettol");});
test("bettole -> bettol", function() {deepEqual( Stem("bettole"), "bettol");});
test("betty -> betty", function() {deepEqual( Stem("betty"), "betty");});
test("bevanda -> bevand", function() {deepEqual( Stem("bevanda"), "bevand");});
test("bevande -> bevand", function() {deepEqual( Stem("bevande"), "bevand");});
test("beve -> bev", function() {deepEqual( Stem("beve"), "bev");});
test("beveren -> beveren", function() {deepEqual( Stem("beveren"), "beveren");});
test("beverly -> beverly", function() {deepEqual( Stem("beverly"), "beverly");});
test("bevette -> bevett", function() {deepEqual( Stem("bevette"), "bevett");});
test("bevi -> bev", function() {deepEqual( Stem("bevi"), "bev");});
test("bevitore -> bevitor", function() {deepEqual( Stem("bevitore"), "bevitor");});
test("bevono -> bev", function() {deepEqual( Stem("bevono"), "bev");});
test("bevuta -> bev", function() {deepEqual( Stem("bevuta"), "bev");});
test("bevuto -> bev", function() {deepEqual( Stem("bevuto"), "bev");});
test("bf -> bf", function() {deepEqual( Stem("bf"), "bf");});
test("bg -> bg", function() {deepEqual( Stem("bg"), "bg");});
test("bharatiya -> bharatiy", function() {deepEqual( Stem("bharatiya"), "bharatiy");});
test("bi -> bi", function() {deepEqual( Stem("bi"), "bi");});
test("bia -> bia", function() {deepEqual( Stem("bia"), "bia");});
test("biagio -> biag", function() {deepEqual( Stem("biagio"), "biag");});
test("biagioni -> biagion", function() {deepEqual( Stem("biagioni"), "biagion");});
test("biamonte -> biamont", function() {deepEqual( Stem("biamonte"), "biamont");});
test("bianca -> bianc", function() {deepEqual( Stem("bianca"), "bianc");});
test("biancacci -> biancacc", function() {deepEqual( Stem("biancacci"), "biancacc");});
test("biancaneve -> biancanev", function() {deepEqual( Stem("biancaneve"), "biancanev");});
test("biancastra -> biancastr", function() {deepEqual( Stem("biancastra"), "biancastr");});
test("biancastre -> biancastr", function() {deepEqual( Stem("biancastre"), "biancastr");});
test("biancastri -> biancastr", function() {deepEqual( Stem("biancastri"), "biancastr");});
test("biancazzurri -> biancazzurr", function() {deepEqual( Stem("biancazzurri"), "biancazzurr");});
test("bianche -> bianc", function() {deepEqual( Stem("bianche"), "bianc");});
test("biancheggianti -> bianchegg", function() {deepEqual( Stem("biancheggianti"), "bianchegg");});
test("biancheria -> biancher", function() {deepEqual( Stem("biancheria"), "biancher");});
test("bianchezza -> bianchezz", function() {deepEqual( Stem("bianchezza"), "bianchezz");});
test("bianchi -> bianc", function() {deepEqual( Stem("bianchi"), "bianc");});
test("bianchini -> bianchin", function() {deepEqual( Stem("bianchini"), "bianchin");});
test("bianchissima -> bianchissim", function() {deepEqual( Stem("bianchissima"), "bianchissim");});
test("bianchissime -> bianchissim", function() {deepEqual( Stem("bianchissime"), "bianchissim");});
test("bianchissimo -> bianchissim", function() {deepEqual( Stem("bianchissimo"), "bianchissim");});
test("bianco -> bianc", function() {deepEqual( Stem("bianco"), "bianc");});
test("biancò -> bianc", function() {deepEqual( Stem("biancò"), "bianc");});
test("bianconera -> bianconer", function() {deepEqual( Stem("bianconera"), "bianconer");});
test("bianconeri -> bianconer", function() {deepEqual( Stem("bianconeri"), "bianconer");});
test("bianconero -> bianconer", function() {deepEqual( Stem("bianconero"), "bianconer");});
test("biar -> biar", function() {deepEqual( Stem("biar"), "biar");});
test("biascicato -> biascic", function() {deepEqual( Stem("biascicato"), "biascic");});
test("biasimata -> biasim", function() {deepEqual( Stem("biasimata"), "biasim");});
test("biasimevole -> biasimevol", function() {deepEqual( Stem("biasimevole"), "biasimevol");});
test("biasimo -> biasim", function() {deepEqual( Stem("biasimo"), "biasim");});
test("biathlon -> biathlon", function() {deepEqual( Stem("biathlon"), "biathlon");});
test("biava -> biav", function() {deepEqual( Stem("biava"), "biav");});
test("biblioteca -> bibliotec", function() {deepEqual( Stem("biblioteca"), "bibliotec");});
test("bibliotecari -> bibliotecar", function() {deepEqual( Stem("bibliotecari"), "bibliotecar");});
test("bibliotecario -> bibliotecar", function() {deepEqual( Stem("bibliotecario"), "bibliotecar");});
test("biblioteche -> bibliotec", function() {deepEqual( Stem("biblioteche"), "bibliotec");});
test("bic -> bic", function() {deepEqual( Stem("bic"), "bic");});
test("bicamerale -> bicameral", function() {deepEqual( Stem("bicamerale"), "bicameral");});
test("bicchier -> bicchier", function() {deepEqual( Stem("bicchier"), "bicchier");});
test("bicchiere -> bicc", function() {deepEqual( Stem("bicchiere"), "bicc");});
test("bicchieri -> bicchier", function() {deepEqual( Stem("bicchieri"), "bicchier");});
test("bicchierino -> bicchierin", function() {deepEqual( Stem("bicchierino"), "bicchierin");});
test("bicicletta -> biciclett", function() {deepEqual( Stem("bicicletta"), "biciclett");});
test("bicocca -> bicocc", function() {deepEqual( Stem("bicocca"), "bicocc");});
test("bidonville -> bidonvill", function() {deepEqual( Stem("bidonville"), "bidonvill");});
test("bieche -> biec", function() {deepEqual( Stem("bieche"), "biec");});
test("bieco -> biec", function() {deepEqual( Stem("bieco"), "biec");});
test("biedenkopf -> biedenkopf", function() {deepEqual( Stem("biedenkopf"), "biedenkopf");});
test("biella -> biell", function() {deepEqual( Stem("biella"), "biell");});
test("bielorussa -> bieloruss", function() {deepEqual( Stem("bielorussa"), "bieloruss");});
test("bielorussia -> bieloruss", function() {deepEqual( Stem("bielorussia"), "bieloruss");});
test("bien -> bien", function() {deepEqual( Stem("bien"), "bien");});
test("biennale -> biennal", function() {deepEqual( Stem("biennale"), "biennal");});
test("biennio -> bienn", function() {deepEqual( Stem("biennio"), "bienn");});
test("bierhoff -> bierhoff", function() {deepEqual( Stem("bierhoff"), "bierhoff");});
test("biffi -> biff", function() {deepEqual( Stem("biffi"), "biff");});
test("big -> big", function() {deepEqual( Stem("big"), "big");});
test("bigia -> big", function() {deepEqual( Stem("bigia"), "big");});
test("bigica -> bigic", function() {deepEqual( Stem("bigica"), "bigic");});
test("bigio -> big", function() {deepEqual( Stem("bigio"), "big");});
test("bigiognolo -> bigiognol", function() {deepEqual( Stem("bigiognolo"), "bigiognol");});
test("biglietti -> bigliett", function() {deepEqual( Stem("biglietti"), "bigliett");});
test("biglietto -> bigliett", function() {deepEqual( Stem("biglietto"), "bigliett");});
test("bignardi -> bignard", function() {deepEqual( Stem("bignardi"), "bignard");});
test("bigon -> bigon", function() {deepEqual( Stem("bigon"), "bigon");});
test("biguzzi -> biguzz", function() {deepEqual( Stem("biguzzi"), "biguzz");});
test("bihac -> bihac", function() {deepEqual( Stem("bihac"), "bihac");});
test("bikini -> bikin", function() {deepEqual( Stem("bikini"), "bikin");});
test("bil -> bil", function() {deepEqual( Stem("bil"), "bil");});
test("bilan -> bilan", function() {deepEqual( Stem("bilan"), "bilan");});
test("bilance -> bilanc", function() {deepEqual( Stem("bilance"), "bilanc");});
test("bilanci -> bilanc", function() {deepEqual( Stem("bilanci"), "bilanc");});
test("bilancia -> bilanc", function() {deepEqual( Stem("bilancia"), "bilanc");});
test("bilanciato -> bilanc", function() {deepEqual( Stem("bilanciato"), "bilanc");});
test("bilanciavano -> bilanc", function() {deepEqual( Stem("bilanciavano"), "bilanc");});
test("bilancino -> bilancin", function() {deepEqual( Stem("bilancino"), "bilancin");});
test("bilancio -> bilanc", function() {deepEqual( Stem("bilancio"), "bilanc");});
test("bilaterali -> bilateral", function() {deepEqual( Stem("bilaterali"), "bilateral");});
test("bilboa -> bilbo", function() {deepEqual( Stem("bilboa"), "bilbo");});
test("bild -> bild", function() {deepEqual( Stem("bild"), "bild");});
test("biliardo -> biliard", function() {deepEqual( Stem("biliardo"), "biliard");});
test("bill -> bill", function() {deepEqual( Stem("bill"), "bill");});
test("billio -> bill", function() {deepEqual( Stem("billio"), "bill");});
test("billy -> billy", function() {deepEqual( Stem("billy"), "billy");});
test("bim -> bim", function() {deepEqual( Stem("bim"), "bim");});
test("bimba -> bimb", function() {deepEqual( Stem("bimba"), "bimb");});
test("bimbi -> bimb", function() {deepEqual( Stem("bimbi"), "bimb");});
test("bimbo -> bimb", function() {deepEqual( Stem("bimbo"), "bimb");});
test("binaghi -> binag", function() {deepEqual( Stem("binaghi"), "binag");});
test("binari -> binar", function() {deepEqual( Stem("binari"), "binar");});
test("binario -> binar", function() {deepEqual( Stem("binario"), "binar");});
test("binda -> bind", function() {deepEqual( Stem("binda"), "bind");});
test("bindi -> bind", function() {deepEqual( Stem("bindi"), "bind");});
test("binelli -> binell", function() {deepEqual( Stem("binelli"), "binell");});
test("binotto -> binott", function() {deepEqual( Stem("binotto"), "binott");});
test("bioetica -> bioetic", function() {deepEqual( Stem("bioetica"), "bioetic");});
test("biografi -> biograf", function() {deepEqual( Stem("biografi"), "biograf");});
test("biografia -> biograf", function() {deepEqual( Stem("biografia"), "biograf");});
test("biologia -> biolog", function() {deepEqual( Stem("biologia"), "biolog");});
test("biologica -> biolog", function() {deepEqual( Stem("biologica"), "biolog");});
test("biologo -> biolog", function() {deepEqual( Stem("biologo"), "biolog");});
test("biomedica -> biomed", function() {deepEqual( Stem("biomedica"), "biomed");});
test("bionda -> biond", function() {deepEqual( Stem("bionda"), "biond");});
test("biondi -> biond", function() {deepEqual( Stem("biondi"), "biond");});
test("biondino -> biondin", function() {deepEqual( Stem("biondino"), "biondin");});
test("biondo -> biond", function() {deepEqual( Stem("biondo"), "biond");});
test("bione -> bion", function() {deepEqual( Stem("bione"), "bion");});
test("biosfere -> biosf", function() {deepEqual( Stem("biosfere"), "biosf");});
test("bipolare -> bipol", function() {deepEqual( Stem("bipolare"), "bipol");});
test("bipolarismo -> bipolar", function() {deepEqual( Stem("bipolarismo"), "bipolar");});
test("bipolarismò -> bipolarism", function() {deepEqual( Stem("bipolarismò"), "bipolarism");});
test("bipolarizza -> bipolarizz", function() {deepEqual( Stem("bipolarizza"), "bipolarizz");});
test("bipolarizzazione -> bipolarizz", function() {deepEqual( Stem("bipolarizzazione"), "bipolarizz");});
test("birago -> birag", function() {deepEqual( Stem("birago"), "birag");});
test("birba -> birb", function() {deepEqual( Stem("birba"), "birb");});
test("birbante -> birbant", function() {deepEqual( Stem("birbante"), "birbant");});
test("birbanti -> birbant", function() {deepEqual( Stem("birbanti"), "birbant");});
test("birberia -> birber", function() {deepEqual( Stem("birberia"), "birber");});
test("birbone -> birbon", function() {deepEqual( Stem("birbone"), "birbon");});
test("birboneggiando -> birbonegg", function() {deepEqual( Stem("birboneggiando"), "birbonegg");});
test("birboni -> birbon", function() {deepEqual( Stem("birboni"), "birbon");});
test("birilli -> birill", function() {deepEqual( Stem("birilli"), "birill");});
test("birkenau -> birkenau", function() {deepEqual( Stem("birkenau"), "birkenau");});
test("birmania -> birman", function() {deepEqual( Stem("birmania"), "birman");});
test("birmano -> birm", function() {deepEqual( Stem("birmano"), "birm");});
test("biron -> biron", function() {deepEqual( Stem("biron"), "biron");});
test("birreria -> birrer", function() {deepEqual( Stem("birreria"), "birrer");});
test("birri -> birr", function() {deepEqual( Stem("birri"), "birr");});
test("birro -> birr", function() {deepEqual( Stem("birro"), "birr");});
test("bis -> bis", function() {deepEqual( Stem("bis"), "bis");});
test("bisacce -> bisacc", function() {deepEqual( Stem("bisacce"), "bisacc");});
test("bisaccia -> bisacc", function() {deepEqual( Stem("bisaccia"), "bisacc");});
test("bisbetica -> bisbet", function() {deepEqual( Stem("bisbetica"), "bisbet");});
test("bisbetiche -> bisbet", function() {deepEqual( Stem("bisbetiche"), "bisbet");});
test("bisbetici -> bisbet", function() {deepEqual( Stem("bisbetici"), "bisbet");});
test("bisbigli -> bisbigl", function() {deepEqual( Stem("bisbigli"), "bisbigl");});
test("bisbigliar -> bisbigl", function() {deepEqual( Stem("bisbigliar"), "bisbigl");});
test("bisbigliare -> bisbigl", function() {deepEqual( Stem("bisbigliare"), "bisbigl");});
test("bisbigliava -> bisbigl", function() {deepEqual( Stem("bisbigliava"), "bisbigl");});
test("bisbiglio -> bisbigl", function() {deepEqual( Stem("bisbiglio"), "bisbigl");});
test("bisbiglìo -> bisbiglì", function() {deepEqual( Stem("bisbiglìo"), "bisbiglì");});
test("bisbigliò -> bisbigl", function() {deepEqual( Stem("bisbigliò"), "bisbigl");});
test("bisbocce -> bisbocc", function() {deepEqual( Stem("bisbocce"), "bisbocc");});
test("bisca -> bisc", function() {deepEqual( Stem("bisca"), "bisc");});
test("biscardi -> biscard", function() {deepEqual( Stem("biscardi"), "biscard");});
test("bisceglie -> biscegl", function() {deepEqual( Stem("bisceglie"), "biscegl");});
test("biscione -> biscion", function() {deepEqual( Stem("biscione"), "biscion");});
test("bisdosso -> bisdoss", function() {deepEqual( Stem("bisdosso"), "bisdoss");});
test("bisessuale -> bisessual", function() {deepEqual( Stem("bisessuale"), "bisessual");});
test("bisogna -> bisogn", function() {deepEqual( Stem("bisogna"), "bisogn");});
test("bisognare -> bisogn", function() {deepEqual( Stem("bisognare"), "bisogn");});
test("bisognasse -> bisogn", function() {deepEqual( Stem("bisognasse"), "bisogn");});
test("bisognati -> bisogn", function() {deepEqual( Stem("bisognati"), "bisogn");});
test("bisognato -> bisogn", function() {deepEqual( Stem("bisognato"), "bisogn");});
test("bisognaua -> bisognau", function() {deepEqual( Stem("bisognaua"), "bisognau");});
test("bisognava -> bisogn", function() {deepEqual( Stem("bisognava"), "bisogn");});
test("bisognerà -> bisogn", function() {deepEqual( Stem("bisognerà"), "bisogn");});
test("bisognerebbe -> bisogn", function() {deepEqual( Stem("bisognerebbe"), "bisogn");});
test("bisognevole -> bisognevol", function() {deepEqual( Stem("bisognevole"), "bisognevol");});
test("bisogni -> bisogn", function() {deepEqual( Stem("bisogni"), "bisogn");});
test("bisogno -> bisogn", function() {deepEqual( Stem("bisogno"), "bisogn");});
test("bisognò -> bisogn", function() {deepEqual( Stem("bisognò"), "bisogn");});
test("bisognosa -> bisogn", function() {deepEqual( Stem("bisognosa"), "bisogn");});
test("bisognose -> bisogn", function() {deepEqual( Stem("bisognose"), "bisogn");});
test("bisognosi -> bisogn", function() {deepEqual( Stem("bisognosi"), "bisogn");});
test("bisoli -> bisol", function() {deepEqual( Stem("bisoli"), "bisol");});
test("bisopgna -> bisopgn", function() {deepEqual( Stem("bisopgna"), "bisopgn");});
test("bissau -> bissau", function() {deepEqual( Stem("bissau"), "bissau");});
test("bisset -> bisset", function() {deepEqual( Stem("bisset"), "bisset");});
test("bisticciar -> bisticc", function() {deepEqual( Stem("bisticciar"), "bisticc");});
test("bistrattava -> bistratt", function() {deepEqual( Stem("bistrattava"), "bistratt");});
test("bitetto -> bitett", function() {deepEqual( Stem("bitetto"), "bitett");});
test("bitonto -> bitont", function() {deepEqual( Stem("bitonto"), "bitont");});
test("bitume -> bitum", function() {deepEqual( Stem("bitume"), "bitum");});
test("bituminosa -> bitumin", function() {deepEqual( Stem("bituminosa"), "bitumin");});
test("bixio -> bix", function() {deepEqual( Stem("bixio"), "bix");});
test("bizantinismi -> bizantin", function() {deepEqual( Stem("bizantinismi"), "bizantin");});
test("bizioli -> biziol", function() {deepEqual( Stem("bizioli"), "biziol");});
test("bizzarre -> bizzarr", function() {deepEqual( Stem("bizzarre"), "bizzarr");});
test("bizzarri -> bizzarr", function() {deepEqual( Stem("bizzarri"), "bizzarr");});
test("bizzarria -> bizzarr", function() {deepEqual( Stem("bizzarria"), "bizzarr");});
test("bizzarro -> bizzarr", function() {deepEqual( Stem("bizzarro"), "bizzarr");});
test("bizzeffe -> bizzeff", function() {deepEqual( Stem("bizzeffe"), "bizzeff");});
test("bjorndalen -> bjorndalen", function() {deepEqual( Stem("bjorndalen"), "bjorndalen");});
test("bka -> bka", function() {deepEqual( Stem("bka"), "bka");});
test("bl -> bl", function() {deepEqual( Stem("bl"), "bl");});
test("black -> black", function() {deepEqual( Stem("black"), "black");});
test("blair -> bla", function() {deepEqual( Stem("blair"), "bla");});
test("blasfemi -> blasfem", function() {deepEqual( Stem("blasfemi"), "blasfem");});
test("blasonata -> blason", function() {deepEqual( Stem("blasonata"), "blason");});
test("blaterando -> blater", function() {deepEqual( Stem("blaterando"), "blater");});
test("blaugrana -> blaugran", function() {deepEqual( Stem("blaugrana"), "blaugran");});
test("blida -> blid", function() {deepEqual( Stem("blida"), "blid");});
test("blindata -> blind", function() {deepEqual( Stem("blindata"), "blind");});
test("blindate -> blind", function() {deepEqual( Stem("blindate"), "blind");});
test("blocca -> blocc", function() {deepEqual( Stem("blocca"), "blocc");});
test("bloccando -> blocc", function() {deepEqual( Stem("bloccando"), "blocc");});
test("bloccare -> blocc", function() {deepEqual( Stem("bloccare"), "blocc");});
test("bloccata -> blocc", function() {deepEqual( Stem("bloccata"), "blocc");});
test("bloccato -> blocc", function() {deepEqual( Stem("bloccato"), "blocc");});
test("bloccherebbe -> blocc", function() {deepEqual( Stem("bloccherebbe"), "blocc");});
test("blocchi -> blocc", function() {deepEqual( Stem("blocchi"), "blocc");});
test("blocco -> blocc", function() {deepEqual( Stem("blocco"), "blocc");});
test("blomqvist -> blomqvist", function() {deepEqual( Stem("blomqvist"), "blomqvist");});
test("bloom -> bloom", function() {deepEqual( Stem("bloom"), "bloom");});
test("blu -> blu", function() {deepEqual( Stem("blu"), "blu");});
test("blù -> blù", function() {deepEqual( Stem("blù"), "blù");});
test("blucerchiata -> blucerc", function() {deepEqual( Stem("blucerchiata"), "blucerc");});
test("blucerchiati -> blucerc", function() {deepEqual( Stem("blucerchiati"), "blucerc");});
test("blucerchiato -> blucerc", function() {deepEqual( Stem("blucerchiato"), "blucerc");});
test("blue -> blu", function() {deepEqual( Stem("blue"), "blu");});
test("blz -> blz", function() {deepEqual( Stem("blz"), "blz");});
test("bm -> bm", function() {deepEqual( Stem("bm"), "bm");});
test("bn -> bn", function() {deepEqual( Stem("bn"), "bn");});
test("bna -> bna", function() {deepEqual( Stem("bna"), "bna");});
test("bnl -> bnl", function() {deepEqual( Stem("bnl"), "bnl");});
test("bo -> bo", function() {deepEqual( Stem("bo"), "bo");});
test("boa -> boa", function() {deepEqual( Stem("boa"), "boa");});
test("boardman -> boardman", function() {deepEqual( Stem("boardman"), "boardman");});
test("boards -> boards", function() {deepEqual( Stem("boards"), "boards");});
test("boati -> boat", function() {deepEqual( Stem("boati"), "boat");});
test("boato -> boat", function() {deepEqual( Stem("boato"), "boat");});
test("bob -> bob", function() {deepEqual( Stem("bob"), "bob");});
test("boban -> boban", function() {deepEqual( Stem("boban"), "boban");});
test("bobbi -> bobb", function() {deepEqual( Stem("bobbi"), "bobb");});
test("bobbie -> bobb", function() {deepEqual( Stem("bobbie"), "bobb");});
test("bobbio -> bobb", function() {deepEqual( Stem("bobbio"), "bobb");});
test("bobek -> bobek", function() {deepEqual( Stem("bobek"), "bobek");});
test("bobo -> bob", function() {deepEqual( Stem("bobo"), "bob");});
test("bobò -> bob", function() {deepEqual( Stem("bobò"), "bob");});
test("boca -> boc", function() {deepEqual( Stem("boca"), "boc");});
test("bocca -> bocc", function() {deepEqual( Stem("bocca"), "bocc");});
test("boccacce -> boccacc", function() {deepEqual( Stem("boccacce"), "boccacc");});
test("boccale -> boccal", function() {deepEqual( Stem("boccale"), "boccal");});
test("boccalini -> boccalin", function() {deepEqual( Stem("boccalini"), "boccalin");});
test("boccetta -> boccett", function() {deepEqual( Stem("boccetta"), "boccett");});
test("bocche -> bocc", function() {deepEqual( Stem("bocche"), "bocc");});
test("bocchino -> bocchin", function() {deepEqual( Stem("bocchino"), "bocchin");});
test("boccia -> bocc", function() {deepEqual( Stem("boccia"), "bocc");});
test("bocciare -> bocc", function() {deepEqual( Stem("bocciare"), "bocc");});
test("bocciata -> bocc", function() {deepEqual( Stem("bocciata"), "bocc");});
test("bocciato -> bocc", function() {deepEqual( Stem("bocciato"), "bocc");});
test("bocciatura -> bocciatur", function() {deepEqual( Stem("bocciatura"), "bocciatur");});
test("boccone -> boccon", function() {deepEqual( Stem("boccone"), "boccon");});
test("bocconi -> boccon", function() {deepEqual( Stem("bocconi"), "boccon");});
test("bodelwyddan -> bodelwyddan", function() {deepEqual( Stem("bodelwyddan"), "bodelwyddan");});
test("bodino -> bodin", function() {deepEqual( Stem("bodino"), "bodin");});
test("bodrato -> bodr", function() {deepEqual( Stem("bodrato"), "bodr");});
test("boeing -> boeing", function() {deepEqual( Stem("boeing"), "boeing");});
test("boero -> boer", function() {deepEqual( Stem("boero"), "boer");});
test("bof -> bof", function() {deepEqual( Stem("bof"), "bof");});
test("bog -> bog", function() {deepEqual( Stem("bog"), "bog");});
test("boghossian -> boghossian", function() {deepEqual( Stem("boghossian"), "boghossian");});
test("bognanco -> bognanc", function() {deepEqual( Stem("bognanco"), "bognanc");});
test("bogo -> bog", function() {deepEqual( Stem("bogo"), "bog");});
test("bogotà -> bogot", function() {deepEqual( Stem("bogotà"), "bogot");});
test("boia -> boi", function() {deepEqual( Stem("boia"), "boi");});
test("boiano -> boi", function() {deepEqual( Stem("boiano"), "boi");});
test("boicottaggio -> boicottagg", function() {deepEqual( Stem("boicottaggio"), "boicottagg");});
test("boicottare -> boicott", function() {deepEqual( Stem("boicottare"), "boicott");});
test("boksic -> boksic", function() {deepEqual( Stem("boksic"), "boksic");});
test("bolgona -> bolgon", function() {deepEqual( Stem("bolgona"), "bolgon");});
test("bolivia -> boliv", function() {deepEqual( Stem("bolivia"), "boliv");});
test("bolla -> boll", function() {deepEqual( Stem("bolla"), "boll");});
test("bollate -> boll", function() {deepEqual( Stem("bollate"), "boll");});
test("bolle -> boll", function() {deepEqual( Stem("bolle"), "boll");});
test("bollettino -> bollettin", function() {deepEqual( Stem("bollettino"), "bollettin");});
test("bolli -> boll", function() {deepEqual( Stem("bolli"), "boll");});
test("bolliva -> boll", function() {deepEqual( Stem("bolliva"), "boll");});
test("bollo -> boll", function() {deepEqual( Stem("bollo"), "boll");});
test("bollor -> bollor", function() {deepEqual( Stem("bollor"), "bollor");});
test("bollore -> bollor", function() {deepEqual( Stem("bollore"), "bollor");});
test("bologna -> bologn", function() {deepEqual( Stem("bologna"), "bologn");});
test("bolognese -> bolognes", function() {deepEqual( Stem("bolognese"), "bolognes");});
test("bolognino -> bolognin", function() {deepEqual( Stem("bolognino"), "bolognin");});
test("bolongaro -> bolongar", function() {deepEqual( Stem("bolongaro"), "bolongar");});
test("bolshoi -> bolsho", function() {deepEqual( Stem("bolshoi"), "bolsho");});
test("bolzano -> bolz", function() {deepEqual( Stem("bolzano"), "bolz");});
test("bomba -> bomb", function() {deepEqual( Stem("bomba"), "bomb");});
test("bombardamenti -> bombard", function() {deepEqual( Stem("bombardamenti"), "bombard");});
test("bombardamento -> bombard", function() {deepEqual( Stem("bombardamento"), "bombard");});
test("bombardare -> bombard", function() {deepEqual( Stem("bombardare"), "bombard");});
test("bombardato -> bombard", function() {deepEqual( Stem("bombardato"), "bombard");});
test("bombardieri -> bombardier", function() {deepEqual( Stem("bombardieri"), "bombardier");});
test("bombay -> bombay", function() {deepEqual( Stem("bombay"), "bombay");});
test("bombe -> bomb", function() {deepEqual( Stem("bombe"), "bomb");});
test("bombole -> bombol", function() {deepEqual( Stem("bombole"), "bombol");});
test("bombolette -> bombolett", function() {deepEqual( Stem("bombolette"), "bombolett");});
test("bommarito -> bommar", function() {deepEqual( Stem("bommarito"), "bommar");});
test("bon -> bon", function() {deepEqual( Stem("bon"), "bon");});
test("bonacci -> bonacc", function() {deepEqual( Stem("bonacci"), "bonacc");});
test("bonacina -> bonacin", function() {deepEqual( Stem("bonacina"), "bonacin");});
test("bonafini -> bonafin", function() {deepEqual( Stem("bonafini"), "bonafin");});
test("bonaiuti -> bonai", function() {deepEqual( Stem("bonaiuti"), "bonai");});
test("bonaldi -> bonald", function() {deepEqual( Stem("bonaldi"), "bonald");});
test("bonaparte -> bonapart", function() {deepEqual( Stem("bonaparte"), "bonapart");});
test("bonariamente -> bonar", function() {deepEqual( Stem("bonariamente"), "bonar");});
test("bonarietà -> bonariet", function() {deepEqual( Stem("bonarietà"), "bonariet");});
test("bonario -> bonar", function() {deepEqual( Stem("bonario"), "bonar");});
test("bonati -> bon", function() {deepEqual( Stem("bonati"), "bon");});
test("bonaventura -> bonaventur", function() {deepEqual( Stem("bonaventura"), "bonaventur");});
test("boncompagni -> boncompagn", function() {deepEqual( Stem("boncompagni"), "boncompagn");});
test("bond -> bond", function() {deepEqual( Stem("bond"), "bond");});
test("bonds -> bonds", function() {deepEqual( Stem("bonds"), "bonds");});
test("bonfrisco -> bonfr", function() {deepEqual( Stem("bonfrisco"), "bonfr");});
test("bongiorno -> bongiorn", function() {deepEqual( Stem("bongiorno"), "bongiorn");});
test("bonham -> bonham", function() {deepEqual( Stem("bonham"), "bonham");});
test("bonifica -> bonif", function() {deepEqual( Stem("bonifica"), "bonif");});
test("bonifiche -> bonif", function() {deepEqual( Stem("bonifiche"), "bonif");});
test("bonino -> bonin", function() {deepEqual( Stem("bonino"), "bonin");});
test("bonissima -> bonissim", function() {deepEqual( Stem("bonissima"), "bonissim");});
test("bonissimo -> bonissim", function() {deepEqual( Stem("bonissimo"), "bonissim");});
test("bonn -> bonn", function() {deepEqual( Stem("bonn"), "bonn");});
test("bonnaire -> bonn", function() {deepEqual( Stem("bonnaire"), "bonn");});
test("bonnard -> bonnard", function() {deepEqual( Stem("bonnard"), "bonnard");});
test("bonometti -> bonomett", function() {deepEqual( Stem("bonometti"), "bonomett");});
test("bonomi -> bonom", function() {deepEqual( Stem("bonomi"), "bonom");});
test("bonsia -> bons", function() {deepEqual( Stem("bonsia"), "bons");});
test("bontà -> bont", function() {deepEqual( Stem("bontà"), "bont");});
test("bor -> bor", function() {deepEqual( Stem("bor"), "bor");});
test("borbonici -> borbon", function() {deepEqual( Stem("borbonici"), "borbon");});
test("borbottando -> borbott", function() {deepEqual( Stem("borbottando"), "borbott");});
test("borbottar -> borbott", function() {deepEqual( Stem("borbottar"), "borbott");});
test("borbottare -> borbott", function() {deepEqual( Stem("borbottare"), "borbott");});
test("borbottava -> borbott", function() {deepEqual( Stem("borbottava"), "borbott");});
test("borchie -> borc", function() {deepEqual( Stem("borchie"), "borc");});
test("bordate -> bord", function() {deepEqual( Stem("bordate"), "bord");});
test("bordeaux -> bordeaux", function() {deepEqual( Stem("bordeaux"), "bordeaux");});
test("bordo -> bord", function() {deepEqual( Stem("bordo"), "bord");});
test("bordocampo -> bordocamp", function() {deepEqual( Stem("bordocampo"), "bordocamp");});
test("bordon -> bordon", function() {deepEqual( Stem("bordon"), "bordon");});
test("bordone -> bordon", function() {deepEqual( Stem("bordone"), "bordon");});
test("bordoni -> bordon", function() {deepEqual( Stem("bordoni"), "bordon");});
test("borghese -> borghes", function() {deepEqual( Stem("borghese"), "borghes");});
test("borghesia -> borghes", function() {deepEqual( Stem("borghesia"), "borghes");});
test("borghetto -> borghett", function() {deepEqual( Stem("borghetto"), "borghett");});
test("borghezio -> borghez", function() {deepEqual( Stem("borghezio"), "borghez");});
test("borghi -> borg", function() {deepEqual( Stem("borghi"), "borg");});
test("borgna -> borgn", function() {deepEqual( Stem("borgna"), "borgn");});
test("borgo -> borg", function() {deepEqual( Stem("borgo"), "borg");});
test("borgosesia -> borgoses", function() {deepEqual( Stem("borgosesia"), "borgoses");});
test("boria -> bor", function() {deepEqual( Stem("boria"), "bor");});
test("borioso -> borios", function() {deepEqual( Stem("borioso"), "borios");});
test("boris -> boris", function() {deepEqual( Stem("boris"), "boris");});
test("borraccina -> borraccin", function() {deepEqual( Stem("borraccina"), "borraccin");});
test("borrelli -> borrell", function() {deepEqual( Stem("borrelli"), "borrell");});
test("borriello -> borriell", function() {deepEqual( Stem("borriello"), "borriell");});
test("borrini -> borrin", function() {deepEqual( Stem("borrini"), "borrin");});
test("borromeo -> borrome", function() {deepEqual( Stem("borromeo"), "borrome");});
test("borsa -> bors", function() {deepEqual( Stem("borsa"), "bors");});
test("borse -> bors", function() {deepEqual( Stem("borse"), "bors");});
test("borsistico -> borsist", function() {deepEqual( Stem("borsistico"), "borsist");});
test("borsitalia -> borsital", function() {deepEqual( Stem("borsitalia"), "borsital");});
test("bortolazzi -> bortolazz", function() {deepEqual( Stem("bortolazzi"), "bortolazz");});
test("bortolo -> bortol", function() {deepEqual( Stem("bortolo"), "bortol");});
test("bortone -> borton", function() {deepEqual( Stem("bortone"), "borton");});
test("bosaglia -> bosagl", function() {deepEqual( Stem("bosaglia"), "bosagl");});
test("bosanksa -> bosanks", function() {deepEqual( Stem("bosanksa"), "bosanks");});
test("bosanska -> bosansk", function() {deepEqual( Stem("bosanska"), "bosansk");});
test("bosaso -> bosas", function() {deepEqual( Stem("bosaso"), "bosas");});
test("bosca -> bosc", function() {deepEqual( Stem("bosca"), "bosc");});
test("boschetto -> boschett", function() {deepEqual( Stem("boschetto"), "boschett");});
test("boschi -> bosc", function() {deepEqual( Stem("boschi"), "bosc");});
test("bosco -> bosc", function() {deepEqual( Stem("bosco"), "bosc");});
test("boscolo -> boscol", function() {deepEqual( Stem("boscolo"), "boscol");});
test("boscosa -> boscos", function() {deepEqual( Stem("boscosa"), "boscos");});
test("bosetti -> bosett", function() {deepEqual( Stem("bosetti"), "bosett");});
test("bosi -> bos", function() {deepEqual( Stem("bosi"), "bos");});
test("boskovic -> boskovic", function() {deepEqual( Stem("boskovic"), "boskovic");});
test("bosnia -> bosn", function() {deepEqual( Stem("bosnia"), "bosn");});
test("bosniaca -> bosniac", function() {deepEqual( Stem("bosniaca"), "bosniac");});
test("bosniache -> bosniac", function() {deepEqual( Stem("bosniache"), "bosniac");});
test("bosniaci -> bosniac", function() {deepEqual( Stem("bosniaci"), "bosniac");});
test("bosniaco -> bosniac", function() {deepEqual( Stem("bosniaco"), "bosniac");});
test("boso -> bos", function() {deepEqual( Stem("boso"), "bos");});
test("boss -> boss", function() {deepEqual( Stem("boss"), "boss");});
test("bossi -> boss", function() {deepEqual( Stem("bossi"), "boss");});
test("bossiana -> bossian", function() {deepEqual( Stem("bossiana"), "bossian");});
test("bossiha -> bossih", function() {deepEqual( Stem("bossiha"), "bossih");});
test("bossolo -> bossol", function() {deepEqual( Stem("bossolo"), "bossol");});
test("boston -> boston", function() {deepEqual( Stem("boston"), "boston");});
test("bot -> bot", function() {deepEqual( Stem("bot"), "bot");});
test("botero -> boter", function() {deepEqual( Stem("botero"), "boter");});
test("botta -> bott", function() {deepEqual( Stem("botta"), "bott");});
test("botte -> bott", function() {deepEqual( Stem("botte"), "bott");});
test("bottega -> botteg", function() {deepEqual( Stem("bottega"), "botteg");});
test("botteghe -> botteg", function() {deepEqual( Stem("botteghe"), "botteg");});
test("botti -> bott", function() {deepEqual( Stem("botti"), "bott");});
test("botticella -> botticell", function() {deepEqual( Stem("botticella"), "botticell");});
test("botticelli -> botticell", function() {deepEqual( Stem("botticelli"), "botticell");});
test("botticina -> botticin", function() {deepEqual( Stem("botticina"), "botticin");});
test("botticine -> botticin", function() {deepEqual( Stem("botticine"), "botticin");});
test("bottiglie -> bottigl", function() {deepEqual( Stem("bottiglie"), "bottigl");});
test("bottino -> bottin", function() {deepEqual( Stem("bottino"), "bottin");});
test("botton -> botton", function() {deepEqual( Stem("botton"), "botton");});
test("bottoni -> botton", function() {deepEqual( Stem("bottoni"), "botton");});
test("boulevard -> boulevard", function() {deepEqual( Stem("boulevard"), "boulevard");});
test("bouliere -> boul", function() {deepEqual( Stem("bouliere"), "boul");});
test("boutros -> boutros", function() {deepEqual( Stem("boutros"), "boutros");});
test("bovo -> bov", function() {deepEqual( Stem("bovo"), "bov");});
test("box -> box", function() {deepEqual( Stem("box"), "box");});
test("boyle -> boyl", function() {deepEqual( Stem("boyle"), "boyl");});
test("boys -> boys", function() {deepEqual( Stem("boys"), "boys");});
test("bozza -> bozz", function() {deepEqual( Stem("bozza"), "bozz");});
test("bpd -> bpd", function() {deepEqual( Stem("bpd"), "bpd");});
test("br -> br", function() {deepEqual( Stem("br"), "br");});
test("bra -> bra", function() {deepEqual( Stem("bra"), "bra");});
test("bracaloni -> bracalon", function() {deepEqual( Stem("bracaloni"), "bracalon");});
test("bracardi -> bracard", function() {deepEqual( Stem("bracardi"), "bracard");});
test("braccano -> bracc", function() {deepEqual( Stem("braccano"), "bracc");});
test("bracchi -> bracc", function() {deepEqual( Stem("bracchi"), "bracc");});
test("braccia -> bracc", function() {deepEqual( Stem("braccia"), "bracc");});
test("bracciali -> braccial", function() {deepEqual( Stem("bracciali"), "braccial");});
test("bracciante -> bracciant", function() {deepEqual( Stem("bracciante"), "bracciant");});
test("braccianti -> bracciant", function() {deepEqual( Stem("braccianti"), "bracciant");});
test("bracciate -> bracc", function() {deepEqual( Stem("bracciate"), "bracc");});
test("bracciere -> bracc", function() {deepEqual( Stem("bracciere"), "bracc");});
test("braccio -> bracc", function() {deepEqual( Stem("braccio"), "bracc");});
test("braccioli -> bracciol", function() {deepEqual( Stem("braccioli"), "bracciol");});
test("bracciolo -> bracciol", function() {deepEqual( Stem("bracciolo"), "bracciol");});
test("braccj -> braccj", function() {deepEqual( Stem("braccj"), "braccj");});
test("brace -> brac", function() {deepEqual( Stem("brace"), "brac");});
test("brache -> brac", function() {deepEqual( Stem("brache"), "brac");});
test("brad -> brad", function() {deepEqual( Stem("brad"), "brad");});
test("braglia -> bragl", function() {deepEqual( Stem("braglia"), "bragl");});
test("bramato -> bram", function() {deepEqual( Stem("bramato"), "bram");});
test("bramava -> bram", function() {deepEqual( Stem("bramava"), "bram");});
test("brambati -> bramb", function() {deepEqual( Stem("brambati"), "bramb");});
test("brambilla -> brambill", function() {deepEqual( Stem("brambilla"), "brambill");});
test("bramerei -> bram", function() {deepEqual( Stem("bramerei"), "bram");});
test("bramieri -> bramier", function() {deepEqual( Stem("bramieri"), "bramier");});
test("bramosi -> bramos", function() {deepEqual( Stem("bramosi"), "bramos");});
test("branca -> branc", function() {deepEqual( Stem("branca"), "branc");});
test("branchi -> branc", function() {deepEqual( Stem("branchi"), "branc");});
test("branco -> branc", function() {deepEqual( Stem("branco"), "branc");});
test("brandeburgo -> brandeburg", function() {deepEqual( Stem("brandeburgo"), "brandeburg");});
test("brandendo -> brand", function() {deepEqual( Stem("brandendo"), "brand");});
test("brandisce -> brand", function() {deepEqual( Stem("brandisce"), "brand");});
test("brandita -> brand", function() {deepEqual( Stem("brandita"), "brand");});
test("brani -> bran", function() {deepEqual( Stem("brani"), "bran");});
test("brano -> bran", function() {deepEqual( Stem("brano"), "bran");});
test("braschi -> brasc", function() {deepEqual( Stem("braschi"), "brasc");});
test("brasile -> brasil", function() {deepEqual( Stem("brasile"), "brasil");});
test("brasilia -> brasil", function() {deepEqual( Stem("brasilia"), "brasil");});
test("brasiliana -> brasilian", function() {deepEqual( Stem("brasiliana"), "brasilian");});
test("brasiliano -> brasil", function() {deepEqual( Stem("brasiliano"), "brasil");});
test("brasseur -> brasseur", function() {deepEqual( Stem("brasseur"), "brasseur");});
test("brassuer -> brassuer", function() {deepEqual( Stem("brassuer"), "brassuer");});
test("bratislava -> bratisl", function() {deepEqual( Stem("bratislava"), "bratisl");});
test("brav -> brav", function() {deepEqual( Stem("brav"), "brav");});
test("brava -> brav", function() {deepEqual( Stem("brava"), "brav");});
test("bravacci -> bravacc", function() {deepEqual( Stem("bravacci"), "bravacc");});
test("bravaccio -> bravacc", function() {deepEqual( Stem("bravaccio"), "bravacc");});
test("bravamente -> brav", function() {deepEqual( Stem("bravamente"), "brav");});
test("bravate -> brav", function() {deepEqual( Stem("bravate"), "brav");});
test("brave -> brav", function() {deepEqual( Stem("brave"), "brav");});
test("braveria -> braver", function() {deepEqual( Stem("braveria"), "braver");});
test("braverìa -> braverì", function() {deepEqual( Stem("braverìa"), "braverì");});
test("braverie -> braver", function() {deepEqual( Stem("braverie"), "braver");});
test("bravi -> brav", function() {deepEqual( Stem("bravi"), "brav");});
test("bravissim -> bravissim", function() {deepEqual( Stem("bravissim"), "bravissim");});
test("bravissima -> bravissim", function() {deepEqual( Stem("bravissima"), "bravissim");});
test("bravissimo -> bravissim", function() {deepEqual( Stem("bravissimo"), "bravissim");});
test("bravo -> brav", function() {deepEqual( Stem("bravo"), "brav");});
test("bravura -> bravur", function() {deepEqual( Stem("bravura"), "bravur");});
test("breccia -> brecc", function() {deepEqual( Stem("breccia"), "brecc");});
test("breda -> bred", function() {deepEqual( Stem("breda"), "bred");});
test("breefing -> breefing", function() {deepEqual( Stem("breefing"), "breefing");});
test("brega -> breg", function() {deepEqual( Stem("brega"), "breg");});
test("brema -> brem", function() {deepEqual( Stem("brema"), "brem");});
test("brenta -> brent", function() {deepEqual( Stem("brenta"), "brent");});
test("brescello -> brescell", function() {deepEqual( Stem("brescello"), "brescell");});
test("brescia -> bresc", function() {deepEqual( Stem("brescia"), "bresc");});
test("bresciana -> brescian", function() {deepEqual( Stem("bresciana"), "brescian");});
test("bresciani -> brescian", function() {deepEqual( Stem("bresciani"), "brescian");});
test("bresciano -> bresc", function() {deepEqual( Stem("bresciano"), "bresc");});
test("breslavia -> breslav", function() {deepEqual( Stem("breslavia"), "breslav");});
test("bressan -> bressan", function() {deepEqual( Stem("bressan"), "bressan");});
test("bretagna -> bretagn", function() {deepEqual( Stem("bretagna"), "bretagn");});
test("breve -> brev", function() {deepEqual( Stem("breve"), "brev");});
test("brevemente -> brevement", function() {deepEqual( Stem("brevemente"), "brevement");});
test("brevettarono -> brevett", function() {deepEqual( Stem("brevettarono"), "brevett");});
test("brevettato -> brevett", function() {deepEqual( Stem("brevettato"), "brevett");});
test("brevi -> brev", function() {deepEqual( Stem("brevi"), "brev");});
test("breviario -> breviar", function() {deepEqual( Stem("breviario"), "breviar");});
test("brevissimi -> brevissim", function() {deepEqual( Stem("brevissimi"), "brevissim");});
test("brevissimo -> brevissim", function() {deepEqual( Stem("brevissimo"), "brevissim");});
test("brevità -> brevit", function() {deepEqual( Stem("brevità"), "brevit");});
test("breviun -> breviun", function() {deepEqual( Stem("breviun"), "breviun");});
test("breweries -> breweries", function() {deepEqual( Stem("breweries"), "breweries");});
test("brezhnev -> brezhnev", function() {deepEqual( Stem("brezhnev"), "brezhnev");});
test("brezza -> brezz", function() {deepEqual( Stem("brezza"), "brezz");});
test("brezzolina -> brezzolin", function() {deepEqual( Stem("brezzolina"), "brezzolin");});
test("bri -> bri", function() {deepEqual( Stem("bri"), "bri");});
test("brian -> brian", function() {deepEqual( Stem("brian"), "brian");});
test("briantea -> briante", function() {deepEqual( Stem("briantea"), "briante");});
test("brianza -> brianz", function() {deepEqual( Stem("brianza"), "brianz");});
test("briareo -> briare", function() {deepEqual( Stem("briareo"), "briare");});
test("bricconate -> briccon", function() {deepEqual( Stem("bricconate"), "briccon");});
test("bricconeria -> bricconer", function() {deepEqual( Stem("bricconeria"), "bricconer");});
test("bricconerie -> bricconer", function() {deepEqual( Stem("bricconerie"), "bricconer");});
test("briciole -> briciol", function() {deepEqual( Stem("briciole"), "briciol");});
test("bridge -> bridg", function() {deepEqual( Stem("bridge"), "bridg");});
test("briefing -> briefing", function() {deepEqual( Stem("briefing"), "briefing");});
test("briga -> brig", function() {deepEqual( Stem("briga"), "brig");});
test("brigata -> brig", function() {deepEqual( Stem("brigata"), "brig");});
test("brigate -> brig", function() {deepEqual( Stem("brigate"), "brig");});
test("brigatella -> brigatell", function() {deepEqual( Stem("brigatella"), "brigatell");});
test("brigatista -> brigat", function() {deepEqual( Stem("brigatista"), "brigat");});
test("brighe -> brig", function() {deepEqual( Stem("brighe"), "brig");});
test("briglia -> brigl", function() {deepEqual( Stem("briglia"), "brigl");});
test("brignano -> brign", function() {deepEqual( Stem("brignano"), "brign");});
test("brignone -> brignon", function() {deepEqual( Stem("brignone"), "brignon");});
test("brilla -> brill", function() {deepEqual( Stem("brilla"), "brill");});
test("brillante -> brillant", function() {deepEqual( Stem("brillante"), "brillant");});
test("brillanti -> brillant", function() {deepEqual( Stem("brillanti"), "brillant");});
test("brillare -> brill", function() {deepEqual( Stem("brillare"), "brill");});
test("brillato -> brill", function() {deepEqual( Stem("brillato"), "brill");});
test("brillavan -> brillavan", function() {deepEqual( Stem("brillavan"), "brillavan");});
test("brina -> brin", function() {deepEqual( Stem("brina"), "brin");});
test("brindato -> brind", function() {deepEqual( Stem("brindato"), "brind");});
test("brindisi -> brindis", function() {deepEqual( Stem("brindisi"), "brindis");});
test("brinner -> brinner", function() {deepEqual( Stem("brinner"), "brinner");});
test("brio -> bri", function() {deepEqual( Stem("brio"), "bri");});
test("brioschi -> briosc", function() {deepEqual( Stem("brioschi"), "briosc");});
test("brisbane -> brisban", function() {deepEqual( Stem("brisbane"), "brisban");});
test("britannica -> britann", function() {deepEqual( Stem("britannica"), "britann");});
test("britanniche -> britann", function() {deepEqual( Stem("britanniche"), "britann");});
test("britannici -> britann", function() {deepEqual( Stem("britannici"), "britann");});
test("britannico -> britann", function() {deepEqual( Stem("britannico"), "britann");});
test("britannnico -> britannn", function() {deepEqual( Stem("britannnico"), "britannn");});
test("british -> british", function() {deepEqual( Stem("british"), "british");});
test("brividi -> brivid", function() {deepEqual( Stem("brividi"), "brivid");});
test("brivido -> brivid", function() {deepEqual( Stem("brivido"), "brivid");});
test("brivio -> briv", function() {deepEqual( Stem("brivio"), "briv");});
test("brm -> brm", function() {deepEqual( Stem("brm"), "brm");});
test("brn -> brn", function() {deepEqual( Stem("brn"), "brn");});
test("broadway -> broadway", function() {deepEqual( Stem("broadway"), "broadway");});
test("broccato -> brocc", function() {deepEqual( Stem("broccato"), "brocc");});
test("brochard -> brochard", function() {deepEqual( Stem("brochard"), "brochard");});
test("brodo -> brod", function() {deepEqual( Stem("brodo"), "brod");});
test("broggi -> brogg", function() {deepEqual( Stem("broggi"), "brogg");});
test("brogioni -> brogion", function() {deepEqual( Stem("brogioni"), "brogion");});
test("brontolando -> brontol", function() {deepEqual( Stem("brontolando"), "brontol");});
test("brontolare -> brontol", function() {deepEqual( Stem("brontolare"), "brontol");});
test("brontolava -> brontol", function() {deepEqual( Stem("brontolava"), "brontol");});
test("brontolavano -> brontol", function() {deepEqual( Stem("brontolavano"), "brontol");});
test("brontolìo -> brontolì", function() {deepEqual( Stem("brontolìo"), "brontolì");});
test("bronx -> bronx", function() {deepEqual( Stem("bronx"), "bronx");});
test("bronzo -> bronz", function() {deepEqual( Stem("bronzo"), "bronz");});
test("brooke -> brook", function() {deepEqual( Stem("brooke"), "brook");});
test("brooklyn -> brooklyn", function() {deepEqual( Stem("brooklyn"), "brooklyn");});
test("bruce -> bruc", function() {deepEqual( Stem("bruce"), "bruc");});
test("brucerebbe -> bruc", function() {deepEqual( Stem("brucerebbe"), "bruc");});
test("brucerete -> bruc", function() {deepEqual( Stem("brucerete"), "bruc");});
test("brucia -> bruc", function() {deepEqual( Stem("brucia"), "bruc");});
test("bruciar -> bruc", function() {deepEqual( Stem("bruciar"), "bruc");});
test("bruciare -> bruc", function() {deepEqual( Stem("bruciare"), "bruc");});
test("bruciata -> bruc", function() {deepEqual( Stem("bruciata"), "bruc");});
test("bruciati -> bruc", function() {deepEqual( Stem("bruciati"), "bruc");});
test("bruciato -> bruc", function() {deepEqual( Stem("bruciato"), "bruc");});
test("bruciatore -> bruciator", function() {deepEqual( Stem("bruciatore"), "bruciator");});
test("bruciavan -> bruciavan", function() {deepEqual( Stem("bruciavan"), "bruciavan");});
test("bruciavano -> bruc", function() {deepEqual( Stem("bruciavano"), "bruc");});
test("bruciò -> bruc", function() {deepEqual( Stem("bruciò"), "bruc");});
test("bruciore -> brucior", function() {deepEqual( Stem("bruciore"), "brucior");});
test("bruges -> bruges", function() {deepEqual( Stem("bruges"), "bruges");});
test("brulica -> brulic", function() {deepEqual( Stem("brulica"), "brulic");});
test("brulicar -> brulic", function() {deepEqual( Stem("brulicar"), "brulic");});
test("brulicava -> brulic", function() {deepEqual( Stem("brulicava"), "brulic");});
test("brulicavano -> brulic", function() {deepEqual( Stem("brulicavano"), "brulic");});
test("brulichìo -> brulichì", function() {deepEqual( Stem("brulichìo"), "brulichì");});
test("bruna -> brun", function() {deepEqual( Stem("bruna"), "brun");});
test("brune -> brun", function() {deepEqual( Stem("brune"), "brun");});
test("brunico -> brunic", function() {deepEqual( Stem("brunico"), "brunic");});
test("brunner -> brunner", function() {deepEqual( Stem("brunner"), "brunner");});
test("bruno -> brun", function() {deepEqual( Stem("bruno"), "brun");});
test("brusca -> brusc", function() {deepEqual( Stem("brusca"), "brusc");});
test("bruscamente -> brusc", function() {deepEqual( Stem("bruscamente"), "brusc");});
test("brusche -> brusc", function() {deepEqual( Stem("brusche"), "brusc");});
test("brusco -> brusc", function() {deepEqual( Stem("brusco"), "brusc");});
test("brutale -> brutal", function() {deepEqual( Stem("brutale"), "brutal");});
test("brutalmente -> brutal", function() {deepEqual( Stem("brutalmente"), "brutal");});
test("bruto -> brut", function() {deepEqual( Stem("bruto"), "brut");});
test("brutta -> brutt", function() {deepEqual( Stem("brutta"), "brutt");});
test("bruttamente -> brutt", function() {deepEqual( Stem("bruttamente"), "brutt");});
test("brutte -> brutt", function() {deepEqual( Stem("brutte"), "brutt");});
test("brutti -> brutt", function() {deepEqual( Stem("brutti"), "brutt");});
test("brutto -> brutt", function() {deepEqual( Stem("brutto"), "brutt");});
test("bruxelles -> bruxelles", function() {deepEqual( Stem("bruxelles"), "bruxelles");});
test("bs -> bs", function() {deepEqual( Stem("bs"), "bs");});
test("bsa -> bsa", function() {deepEqual( Stem("bsa"), "bsa");});
test("btp -> btp", function() {deepEqual( Stem("btp"), "btp");});
test("bu -> bu", function() {deepEqual( Stem("bu"), "bu");});
test("bubbole -> bubbol", function() {deepEqual( Stem("bubbole"), "bubbol");});
test("bubbone -> bubbon", function() {deepEqual( Stem("bubbone"), "bubbon");});
test("bubboni -> bubbon", function() {deepEqual( Stem("bubboni"), "bubbon");});
test("bubolz -> bubolz", function() {deepEqual( Stem("bubolz"), "bubolz");});
test("buca -> buc", function() {deepEqual( Stem("buca"), "buc");});
test("bucarest -> bucarest", function() {deepEqual( Stem("bucarest"), "bucarest");});
test("bucaro -> bucar", function() {deepEqual( Stem("bucaro"), "bucar");});
test("bucatino -> bucatin", function() {deepEqual( Stem("bucatino"), "bucatin");});
test("bucato -> buc", function() {deepEqual( Stem("bucato"), "buc");});
test("bucce -> bucc", function() {deepEqual( Stem("bucce"), "bucc");});
test("bucci -> bucc", function() {deepEqual( Stem("bucci"), "bucc");});
test("bucciarelli -> bucciarell", function() {deepEqual( Stem("bucciarelli"), "bucciarell");});
test("buche -> buch", function() {deepEqual( Stem("buche"), "buch");});
test("buchenwald -> buchenwald", function() {deepEqual( Stem("buchenwald"), "buchenwald");});
test("buchi -> buch", function() {deepEqual( Stem("buchi"), "buch");});
test("buco -> buc", function() {deepEqual( Stem("buco"), "buc");});
test("bucò -> buc", function() {deepEqual( Stem("bucò"), "buc");});
test("budapest -> budapest", function() {deepEqual( Stem("budapest"), "budapest");});
test("budermes -> budermes", function() {deepEqual( Stem("budermes"), "budermes");});
test("buduau -> buduau", function() {deepEqual( Stem("buduau"), "buduau");});
test("bue -> bue", function() {deepEqual( Stem("bue"), "bue");});
test("buenos -> buenos", function() {deepEqual( Stem("buenos"), "buenos");});
test("bufera -> bufer", function() {deepEqual( Stem("bufera"), "bufer");});
test("bufere -> buf", function() {deepEqual( Stem("bufere"), "buf");});
test("buffa -> buff", function() {deepEqual( Stem("buffa"), "buff");});
test("buffet -> buffet", function() {deepEqual( Stem("buffet"), "buffet");});
test("buffetteria -> buffetter", function() {deepEqual( Stem("buffetteria"), "buffetter");});
test("buffone -> buffon", function() {deepEqual( Stem("buffone"), "buffon");});
test("buffoneria -> buffoner", function() {deepEqual( Stem("buffoneria"), "buffoner");});
test("buffoni -> buffon", function() {deepEqual( Stem("buffoni"), "buffon");});
test("bugatti -> bugatt", function() {deepEqual( Stem("bugatti"), "bugatt");});
test("bugia -> bug", function() {deepEqual( Stem("bugia"), "bug");});
test("bugiarda -> bugiard", function() {deepEqual( Stem("bugiarda"), "bugiard");});
test("bugiardo -> bugiard", function() {deepEqual( Stem("bugiardo"), "bugiard");});
test("bugiardona -> bugiardon", function() {deepEqual( Stem("bugiardona"), "bugiardon");});
test("bugie -> bug", function() {deepEqual( Stem("bugie"), "bug");});
test("bugigattoli -> bugigattol", function() {deepEqual( Stem("bugigattoli"), "bugigattol");});
test("bugigattolo -> bugigattol", function() {deepEqual( Stem("bugigattolo"), "bugigattol");});
test("buglione -> buglion", function() {deepEqual( Stem("buglione"), "buglion");});
test("bugno -> bugn", function() {deepEqual( Stem("bugno"), "bugn");});
test("bui -> bui", function() {deepEqual( Stem("bui"), "bui");});
test("building -> building", function() {deepEqual( Stem("building"), "building");});
test("buio -> bui", function() {deepEqual( Stem("buio"), "bui");});
test("bulgara -> bulgar", function() {deepEqual( Stem("bulgara"), "bulgar");});
test("bulgarelli -> bulgarell", function() {deepEqual( Stem("bulgarelli"), "bulgarell");});
test("bulgaria -> bulgar", function() {deepEqual( Stem("bulgaria"), "bulgar");});
test("bull -> bull", function() {deepEqual( Stem("bull"), "bull");});
test("bulletta -> bullett", function() {deepEqual( Stem("bulletta"), "bullett");});
test("bullette -> bullett", function() {deepEqual( Stem("bullette"), "bullett");});
test("bum -> bum", function() {deepEqual( Stem("bum"), "bum");});
test("bundesbank -> bundesbank", function() {deepEqual( Stem("bundesbank"), "bundesbank");});
test("bundesgerichtshof -> bundesgerichtshof", function() {deepEqual( Stem("bundesgerichtshof"), "bundesgerichtshof");});
test("bunkers -> bunkers", function() {deepEqual( Stem("bunkers"), "bunkers");});
test("bunny -> bunny", function() {deepEqual( Stem("bunny"), "bunny");});
test("buon -> buon", function() {deepEqual( Stem("buon"), "buon");});
test("buona -> buon", function() {deepEqual( Stem("buona"), "buon");});
test("buone -> buon", function() {deepEqual( Stem("buone"), "buon");});
test("buoni -> buon", function() {deepEqual( Stem("buoni"), "buon");});
test("buono -> buon", function() {deepEqual( Stem("buono"), "buon");});
test("buontà -> buont", function() {deepEqual( Stem("buontà"), "buont");});
test("burattello -> burattell", function() {deepEqual( Stem("burattello"), "burattell");});
test("burattinaio -> burattinai", function() {deepEqual( Stem("burattinaio"), "burattinai");});
test("burberi -> burber", function() {deepEqual( Stem("burberi"), "burber");});
test("burbero -> burber", function() {deepEqual( Stem("burbero"), "burber");});
test("burgenland -> burgenland", function() {deepEqual( Stem("burgenland"), "burgenland");});
test("burgeto -> burget", function() {deepEqual( Stem("burgeto"), "burget");});
test("burgo -> burg", function() {deepEqual( Stem("burgo"), "burg");});
test("burhanuddin -> burhanuddin", function() {deepEqual( Stem("burhanuddin"), "burhanuddin");});
test("burkina -> burkin", function() {deepEqual( Stem("burkina"), "burkin");});
test("burla -> burl", function() {deepEqual( Stem("burla"), "burl");});
test("burlato -> burl", function() {deepEqual( Stem("burlato"), "burl");});
test("burlesco -> burlesc", function() {deepEqual( Stem("burlesco"), "burlesc");});
test("burns -> burns", function() {deepEqual( Stem("burns"), "burns");});
test("burocratiche -> burocrat", function() {deepEqual( Stem("burocratiche"), "burocrat");});
test("burocratico -> burocrat", function() {deepEqual( Stem("burocratico"), "burocrat");});
test("burocrazia -> burocraz", function() {deepEqual( Stem("burocrazia"), "burocraz");});
test("burrasca -> burrasc", function() {deepEqual( Stem("burrasca"), "burrasc");});
test("burrasche -> burrasc", function() {deepEqual( Stem("burrasche"), "burrasc");});
test("burrascosa -> burrasc", function() {deepEqual( Stem("burrascosa"), "burrasc");});
test("burro -> burr", function() {deepEqual( Stem("burro"), "burr");});
test("burrone -> burron", function() {deepEqual( Stem("burrone"), "burron");});
test("burroni -> burron", function() {deepEqual( Stem("burroni"), "burron");});
test("bus -> bus", function() {deepEqual( Stem("bus"), "bus");});
test("buscar -> busc", function() {deepEqual( Stem("buscar"), "busc");});
test("buscarsi -> busc", function() {deepEqual( Stem("buscarsi"), "busc");});
test("buscarti -> busc", function() {deepEqual( Stem("buscarti"), "busc");});
test("buscato -> busc", function() {deepEqual( Stem("buscato"), "busc");});
test("buscherei -> busc", function() {deepEqual( Stem("buscherei"), "busc");});
test("bush -> bush", function() {deepEqual( Stem("bush"), "bush");});
test("busilis -> busilis", function() {deepEqual( Stem("busilis"), "busilis");});
test("business -> business", function() {deepEqual( Stem("business"), "business");});
test("buso -> bus", function() {deepEqual( Stem("buso"), "bus");});
test("busquets -> busquets", function() {deepEqual( Stem("busquets"), "busquets");});
test("bussano -> buss", function() {deepEqual( Stem("bussano"), "buss");});
test("bussasse -> buss", function() {deepEqual( Stem("bussasse"), "buss");});
test("busse -> buss", function() {deepEqual( Stem("busse"), "buss");});
test("bussola -> bussol", function() {deepEqual( Stem("bussola"), "bussol");});
test("bussolotti -> bussolott", function() {deepEqual( Stem("bussolotti"), "bussolott");});
test("bustine -> bustin", function() {deepEqual( Stem("bustine"), "bustin");});
test("busto -> bust", function() {deepEqual( Stem("busto"), "bust");});
test("butta -> butt", function() {deepEqual( Stem("butta"), "butt");});
test("buttan -> buttan", function() {deepEqual( Stem("buttan"), "buttan");});
test("buttando -> butt", function() {deepEqual( Stem("buttando"), "butt");});
test("buttandosegli -> buttandosegl", function() {deepEqual( Stem("buttandosegli"), "buttandosegl");});
test("buttandosi -> butt", function() {deepEqual( Stem("buttandosi"), "butt");});
test("buttane -> buttan", function() {deepEqual( Stem("buttane"), "buttan");});
test("buttar -> butt", function() {deepEqual( Stem("buttar"), "butt");});
test("buttare -> butt", function() {deepEqual( Stem("buttare"), "butt");});
test("buttarglielo -> butt", function() {deepEqual( Stem("buttarglielo"), "butt");});
test("buttarle -> butt", function() {deepEqual( Stem("buttarle"), "butt");});
test("buttarono -> butt", function() {deepEqual( Stem("buttarono"), "butt");});
test("buttarsi -> butt", function() {deepEqual( Stem("buttarsi"), "butt");});
test("buttasse -> butt", function() {deepEqual( Stem("buttasse"), "butt");});
test("buttassi -> butt", function() {deepEqual( Stem("buttassi"), "butt");});
test("buttata -> butt", function() {deepEqual( Stem("buttata"), "butt");});
test("buttate -> butt", function() {deepEqual( Stem("buttate"), "butt");});
test("buttati -> butt", function() {deepEqual( Stem("buttati"), "butt");});
test("buttato -> butt", function() {deepEqual( Stem("buttato"), "butt");});
test("butterei -> butt", function() {deepEqual( Stem("butterei"), "butt");});
test("butterò -> butt", function() {deepEqual( Stem("butterò"), "butt");});
test("butti -> butt", function() {deepEqual( Stem("butti"), "butt");});
test("buttiglione -> buttiglion", function() {deepEqual( Stem("buttiglione"), "buttiglion");});
test("butto -> butt", function() {deepEqual( Stem("butto"), "butt");});
test("buttò -> butt", function() {deepEqual( Stem("buttò"), "butt");});
test("buy -> buy", function() {deepEqual( Stem("buy"), "buy");});
test("bvb -> bvb", function() {deepEqual( Stem("bvb"), "bvb");});
test("c -> c", function() {deepEqual( Stem("c"), "c");});
test("ca -> ca", function() {deepEqual( Stem("ca"), "ca");});
test("cab -> cab", function() {deepEqual( Stem("cab"), "cab");});
test("cabala -> cabal", function() {deepEqual( Stem("cabala"), "cabal");});
test("cabale -> cabal", function() {deepEqual( Stem("cabale"), "cabal");});
test("cabardino -> cabardin", function() {deepEqual( Stem("cabardino"), "cabardin");});
test("cabina -> cabin", function() {deepEqual( Stem("cabina"), "cabin");});
test("cabinati -> cabin", function() {deepEqual( Stem("cabinati"), "cabin");});
test("cabine -> cabin", function() {deepEqual( Stem("cabine"), "cabin");});
test("cablata -> cabl", function() {deepEqual( Stem("cablata"), "cabl");});
test("cabotaggio -> cabotagg", function() {deepEqual( Stem("cabotaggio"), "cabotagg");});
test("cabrini -> cabrin", function() {deepEqual( Stem("cabrini"), "cabrin");});
test("cac -> cac", function() {deepEqual( Stem("cac"), "cac");});
test("cacce -> cacc", function() {deepEqual( Stem("cacce"), "cacc");});
test("caccia -> cacc", function() {deepEqual( Stem("caccia"), "cacc");});
test("cacciabombardieri -> cacciabombardier", function() {deepEqual( Stem("cacciabombardieri"), "cacciabombardier");});
test("cacciamine -> cacciamin", function() {deepEqual( Stem("cacciamine"), "cacciamin");});
test("caccian -> caccian", function() {deepEqual( Stem("caccian"), "caccian");});
test("cacciando -> cacc", function() {deepEqual( Stem("cacciando"), "cacc");});
test("cacciandosi -> cacc", function() {deepEqual( Stem("cacciandosi"), "cacc");});
test("cacciare -> cacc", function() {deepEqual( Stem("cacciare"), "cacc");});
test("cacciari -> cacciar", function() {deepEqual( Stem("cacciari"), "cacciar");});
test("cacciarli -> cacc", function() {deepEqual( Stem("cacciarli"), "cacc");});
test("cacciarlo -> cacc", function() {deepEqual( Stem("cacciarlo"), "cacc");});
test("cacciarsi -> cacc", function() {deepEqual( Stem("cacciarsi"), "cacc");});
test("cacciassero -> cacc", function() {deepEqual( Stem("cacciassero"), "cacc");});
test("cacciata -> cacc", function() {deepEqual( Stem("cacciata"), "cacc");});
test("cacciate -> cacc", function() {deepEqual( Stem("cacciate"), "cacc");});
test("cacciati -> cacc", function() {deepEqual( Stem("cacciati"), "cacc");});
test("cacciato -> cacc", function() {deepEqual( Stem("cacciato"), "cacc");});
test("cacciatore -> cacciator", function() {deepEqual( Stem("cacciatore"), "cacciator");});
test("cacciatovisi -> cacciatovis", function() {deepEqual( Stem("cacciatovisi"), "cacciatovis");});
test("cacciava -> cacc", function() {deepEqual( Stem("cacciava"), "cacc");});
test("cacciavano -> cacc", function() {deepEqual( Stem("cacciavano"), "cacc");});
test("cacciavite -> cacciav", function() {deepEqual( Stem("cacciavite"), "cacciav");});
test("cacciò -> cacc", function() {deepEqual( Stem("cacciò"), "cacc");});
test("cadaueri -> cadauer", function() {deepEqual( Stem("cadaueri"), "cadauer");});
test("cadavere -> cadav", function() {deepEqual( Stem("cadavere"), "cadav");});
test("cadaveri -> cadaver", function() {deepEqual( Stem("cadaveri"), "cadaver");});
test("cadde -> cadd", function() {deepEqual( Stem("cadde"), "cadd");});
test("caddero -> cadder", function() {deepEqual( Stem("caddero"), "cadder");});
test("cade -> cad", function() {deepEqual( Stem("cade"), "cad");});
test("cadente -> cadent", function() {deepEqual( Stem("cadente"), "cadent");});
test("cadeo -> cade", function() {deepEqual( Stem("cadeo"), "cade");});
test("cader -> cader", function() {deepEqual( Stem("cader"), "cader");});
test("cadere -> cad", function() {deepEqual( Stem("cadere"), "cad");});
test("cadete -> cad", function() {deepEqual( Stem("cadete"), "cad");});
test("cadetti -> cadett", function() {deepEqual( Stem("cadetti"), "cadett");});
test("cadetto -> cadett", function() {deepEqual( Stem("cadetto"), "cadett");});
test("cadeva -> cad", function() {deepEqual( Stem("cadeva"), "cad");});
test("cadevan -> cadevan", function() {deepEqual( Stem("cadevan"), "cadevan");});
test("cadevano -> cad", function() {deepEqual( Stem("cadevano"), "cad");});
test("cadono -> cad", function() {deepEqual( Stem("cadono"), "cad");});
test("cadrebbe -> cadrebb", function() {deepEqual( Stem("cadrebbe"), "cadrebb");});
test("cadsand -> cadsand", function() {deepEqual( Stem("cadsand"), "cadsand");});
test("caduta -> cad", function() {deepEqual( Stem("caduta"), "cad");});
test("cadute -> cad", function() {deepEqual( Stem("cadute"), "cad");});
test("caduti -> cad", function() {deepEqual( Stem("caduti"), "cad");});
test("caduto -> cad", function() {deepEqual( Stem("caduto"), "cad");});
test("caen -> caen", function() {deepEqual( Stem("caen"), "caen");});
test("caf -> caf", function() {deepEqual( Stem("caf"), "caf");});
test("cafè -> caf", function() {deepEqual( Stem("cafè"), "caf");});
test("caffaro -> caffar", function() {deepEqual( Stem("caffaro"), "caffar");});
test("caffe -> caff", function() {deepEqual( Stem("caffe"), "caff");});
test("caffè -> caff", function() {deepEqual( Stem("caffè"), "caff");});
test("caffeina -> caffein", function() {deepEqual( Stem("caffeina"), "caffein");});
test("caffo -> caff", function() {deepEqual( Stem("caffo"), "caff");});
test("cafiero -> cafier", function() {deepEqual( Stem("cafiero"), "cafier");});
test("cagion -> cagion", function() {deepEqual( Stem("cagion"), "cagion");});
test("cagionarono -> cagion", function() {deepEqual( Stem("cagionarono"), "cagion");});
test("cagionata -> cagion", function() {deepEqual( Stem("cagionata"), "cagion");});
test("cagionati -> cagion", function() {deepEqual( Stem("cagionati"), "cagion");});
test("cagionava -> cagion", function() {deepEqual( Stem("cagionava"), "cagion");});
test("cagione -> cagion", function() {deepEqual( Stem("cagione"), "cagion");});
test("cagioni -> cagion", function() {deepEqual( Stem("cagioni"), "cagion");});
test("cagionò -> cagion", function() {deepEqual( Stem("cagionò"), "cagion");});
test("cagiva -> cag", function() {deepEqual( Stem("cagiva"), "cag");});
test("cagliari -> cagliar", function() {deepEqual( Stem("cagliari"), "cagliar");});
test("cagliaritana -> cagliaritan", function() {deepEqual( Stem("cagliaritana"), "cagliaritan");});
test("cagnaccio -> cagnacc", function() {deepEqual( Stem("cagnaccio"), "cagnacc");});
test("cagnesco -> cagnesc", function() {deepEqual( Stem("cagnesco"), "cagnesc");});
test("cagni -> cagn", function() {deepEqual( Stem("cagni"), "cagn");});
test("cagnolini -> cagnolin", function() {deepEqual( Stem("cagnolini"), "cagnolin");});
test("caiazzo -> caiazz", function() {deepEqual( Stem("caiazzo"), "caiazz");});
test("cain -> cain", function() {deepEqual( Stem("cain"), "cain");});
test("caini -> cain", function() {deepEqual( Stem("caini"), "cain");});
test("caio -> cai", function() {deepEqual( Stem("caio"), "cai");});
test("cairo -> cair", function() {deepEqual( Stem("cairo"), "cair");});
test("caiyun -> caiyun", function() {deepEqual( Stem("caiyun"), "caiyun");});
test("cala -> cal", function() {deepEqual( Stem("cala"), "cal");});
test("calà -> cal", function() {deepEqual( Stem("calà"), "cal");});
test("calabria -> calabr", function() {deepEqual( Stem("calabria"), "calabr");});
test("calamaio -> calamai", function() {deepEqual( Stem("calamaio"), "calamai");});
test("calamità -> calam", function() {deepEqual( Stem("calamità"), "calam");});
test("calano -> cal", function() {deepEqual( Stem("calano"), "cal");});
test("calante -> calant", function() {deepEqual( Stem("calante"), "calant");});
test("calar -> cal", function() {deepEqual( Stem("calar"), "cal");});
test("calare -> cal", function() {deepEqual( Stem("calare"), "cal");});
test("calarlo -> cal", function() {deepEqual( Stem("calarlo"), "cal");});
test("calata -> cal", function() {deepEqual( Stem("calata"), "cal");});
test("calate -> cal", function() {deepEqual( Stem("calate"), "cal");});
test("calatemi -> calatem", function() {deepEqual( Stem("calatemi"), "calatem");});
test("calati -> cal", function() {deepEqual( Stem("calati"), "cal");});
test("calato -> cal", function() {deepEqual( Stem("calato"), "cal");});
test("calca -> calc", function() {deepEqual( Stem("calca"), "calc");});
test("calcagni -> calcagn", function() {deepEqual( Stem("calcagni"), "calcagn");});
test("calce -> calc", function() {deepEqual( Stem("calce"), "calc");});
test("calcestruzzi -> calcestruzz", function() {deepEqual( Stem("calcestruzzi"), "calcestruzz");});
test("calche -> calc", function() {deepEqual( Stem("calche"), "calc");});
test("calci -> calc", function() {deepEqual( Stem("calci"), "calc");});
test("calciare -> calc", function() {deepEqual( Stem("calciare"), "calc");});
test("calciasse -> calc", function() {deepEqual( Stem("calciasse"), "calc");});
test("calciato -> calc", function() {deepEqual( Stem("calciato"), "calc");});
test("calciatore -> calciator", function() {deepEqual( Stem("calciatore"), "calciator");});
test("calciatori -> calciator", function() {deepEqual( Stem("calciatori"), "calciator");});
test("calcio -> calc", function() {deepEqual( Stem("calcio"), "calc");});
test("calciò -> calc", function() {deepEqual( Stem("calciò"), "calc");});
test("calcistica -> calcist", function() {deepEqual( Stem("calcistica"), "calcist");});
test("calcistiche -> calcist", function() {deepEqual( Stem("calcistiche"), "calcist");});
test("calcium -> calcium", function() {deepEqual( Stem("calcium"), "calcium");});
test("calcolar -> calcol", function() {deepEqual( Stem("calcolar"), "calcol");});
test("calcolare -> calcol", function() {deepEqual( Stem("calcolare"), "calcol");});
test("calcolata -> calcol", function() {deepEqual( Stem("calcolata"), "calcol");});
test("calcolate -> calcol", function() {deepEqual( Stem("calcolate"), "calcol");});
test("calcolato -> calcol", function() {deepEqual( Stem("calcolato"), "calcol");});
test("calcolava -> calcol", function() {deepEqual( Stem("calcolava"), "calcol");});
test("calcoli -> calcol", function() {deepEqual( Stem("calcoli"), "calcol");});
test("calcolo -> calcol", function() {deepEqual( Stem("calcolo"), "calcol");});
test("calcutta -> calcutt", function() {deepEqual( Stem("calcutta"), "calcutt");});
test("calda -> cald", function() {deepEqual( Stem("calda"), "cald");});
test("caldaia -> caldai", function() {deepEqual( Stem("caldaia"), "caldai");});
test("caldaie -> caldai", function() {deepEqual( Stem("caldaie"), "caldai");});
test("caldamente -> cald", function() {deepEqual( Stem("caldamente"), "cald");});
test("caldarola -> caldarol", function() {deepEqual( Stem("caldarola"), "caldarol");});
test("calde -> cald", function() {deepEqual( Stem("calde"), "cald");});
test("caldea -> calde", function() {deepEqual( Stem("caldea"), "calde");});
test("calderan -> calderan", function() {deepEqual( Stem("calderan"), "calderan");});
test("calderisi -> calderis", function() {deepEqual( Stem("calderisi"), "calderis");});
test("calderotto -> calderott", function() {deepEqual( Stem("calderotto"), "calderott");});
test("caldo -> cald", function() {deepEqual( Stem("caldo"), "cald");});
test("caleffi -> caleff", function() {deepEqual( Stem("caleffi"), "caleff");});
test("calendari -> calendar", function() {deepEqual( Stem("calendari"), "calendar");});
test("calendario -> calendar", function() {deepEqual( Stem("calendario"), "calendar");});
test("calesse -> caless", function() {deepEqual( Stem("calesse"), "caless");});
test("calessino -> calessin", function() {deepEqual( Stem("calessino"), "calessin");});
test("calgary -> calgary", function() {deepEqual( Stem("calgary"), "calgary");});
test("cali -> cal", function() {deepEqual( Stem("cali"), "cal");});
test("calibro -> calibr", function() {deepEqual( Stem("calibro"), "calibr");});
test("calice -> calic", function() {deepEqual( Stem("calice"), "calic");});
test("calici -> calic", function() {deepEqual( Stem("calici"), "calic");});
test("california -> californ", function() {deepEqual( Stem("california"), "californ");});
test("calleri -> caller", function() {deepEqual( Stem("calleri"), "caller");});
test("calma -> calm", function() {deepEqual( Stem("calma"), "calm");});
test("calmare -> calm", function() {deepEqual( Stem("calmare"), "calm");});
test("calo -> cal", function() {deepEqual( Stem("calo"), "cal");});
test("calò -> cal", function() {deepEqual( Stem("calò"), "cal");});
test("calodi -> calod", function() {deepEqual( Stem("calodi"), "calod");});
test("calore -> calor", function() {deepEqual( Stem("calore"), "calor");});
test("calori -> calor", function() {deepEqual( Stem("calori"), "calor");});
test("calorosa -> calor", function() {deepEqual( Stem("calorosa"), "calor");});
test("caloroso -> calor", function() {deepEqual( Stem("caloroso"), "calor");});
test("calp -> calp", function() {deepEqual( Stem("calp"), "calp");});
test("calpestando -> calpest", function() {deepEqual( Stem("calpestando"), "calpest");});
test("calpestarlo -> calpest", function() {deepEqual( Stem("calpestarlo"), "calpest");});
test("calpestato -> calpest", function() {deepEqual( Stem("calpestato"), "calpest");});
test("calpestava -> calpest", function() {deepEqual( Stem("calpestava"), "calpest");});
test("calpestìo -> calpestì", function() {deepEqual( Stem("calpestìo"), "calpestì");});
test("caltagirone -> caltagiron", function() {deepEqual( Stem("caltagirone"), "caltagiron");});
test("caltanissetta -> caltanissett", function() {deepEqual( Stem("caltanissetta"), "caltanissett");});
test("calunnia -> calunn", function() {deepEqual( Stem("calunnia"), "calunn");});
test("calunniato -> calunn", function() {deepEqual( Stem("calunniato"), "calunn");});
test("calvi -> calv", function() {deepEqual( Stem("calvi"), "calv");});
test("calvino -> calvin", function() {deepEqual( Stem("calvino"), "calvin");});
test("calvisano -> calvis", function() {deepEqual( Stem("calvisano"), "calvis");});
test("calvo -> calv", function() {deepEqual( Stem("calvo"), "calv");});
test("calzature -> calzatur", function() {deepEqual( Stem("calzature"), "calzatur");});
test("calzaturif -> calzaturif", function() {deepEqual( Stem("calzaturif"), "calzaturif");});
test("calzaturificio -> calzaturific", function() {deepEqual( Stem("calzaturificio"), "calzaturific");});
test("calze -> calz", function() {deepEqual( Stem("calze"), "calz");});
test("calzia -> calz", function() {deepEqual( Stem("calzia"), "calz");});
test("calzoni -> calzon", function() {deepEqual( Stem("calzoni"), "calzon");});
test("cam -> cam", function() {deepEqual( Stem("cam"), "cam");});
test("camar -> cam", function() {deepEqual( Stem("camar"), "cam");});
test("cambi -> camb", function() {deepEqual( Stem("cambi"), "camb");});
test("cambia -> camb", function() {deepEqual( Stem("cambia"), "camb");});
test("cambiamenti -> camb", function() {deepEqual( Stem("cambiamenti"), "camb");});
test("cambiamento -> camb", function() {deepEqual( Stem("cambiamento"), "camb");});
test("cambiamo -> camb", function() {deepEqual( Stem("cambiamo"), "camb");});
test("cambiando -> camb", function() {deepEqual( Stem("cambiando"), "camb");});
test("cambiandosi -> camb", function() {deepEqual( Stem("cambiandosi"), "camb");});
test("cambiano -> camb", function() {deepEqual( Stem("cambiano"), "camb");});
test("cambiar -> camb", function() {deepEqual( Stem("cambiar"), "camb");});
test("cambiare -> camb", function() {deepEqual( Stem("cambiare"), "camb");});
test("cambiari -> cambiar", function() {deepEqual( Stem("cambiari"), "cambiar");});
test("cambiarsi -> camb", function() {deepEqual( Stem("cambiarsi"), "camb");});
test("cambiasse -> camb", function() {deepEqual( Stem("cambiasse"), "camb");});
test("cambiata -> camb", function() {deepEqual( Stem("cambiata"), "camb");});
test("cambiate -> camb", function() {deepEqual( Stem("cambiate"), "camb");});
test("cambiati -> camb", function() {deepEqual( Stem("cambiati"), "camb");});
test("cambiato -> camb", function() {deepEqual( Stem("cambiato"), "camb");});
test("cambiava -> camb", function() {deepEqual( Stem("cambiava"), "camb");});
test("cambiavano -> camb", function() {deepEqual( Stem("cambiavano"), "camb");});
test("cambierà -> camb", function() {deepEqual( Stem("cambierà"), "camb");});
test("cambierò -> camb", function() {deepEqual( Stem("cambierò"), "camb");});
test("cambio -> camb", function() {deepEqual( Stem("cambio"), "camb");});
test("cambiò -> camb", function() {deepEqual( Stem("cambiò"), "camb");});
test("cambisti -> cambist", function() {deepEqual( Stem("cambisti"), "cambist");});
test("cameleonte -> cameleont", function() {deepEqual( Stem("cameleonte"), "cameleont");});
test("camera -> camer", function() {deepEqual( Stem("camera"), "camer");});
test("camerali -> cameral", function() {deepEqual( Stem("camerali"), "cameral");});
test("cameramam -> cameramam", function() {deepEqual( Stem("cameramam"), "cameramam");});
test("cameraman -> cameraman", function() {deepEqual( Stem("cameraman"), "cameraman");});
test("cameramen -> cameramen", function() {deepEqual( Stem("cameramen"), "cameramen");});
test("camerata -> camer", function() {deepEqual( Stem("camerata"), "camer");});
test("camere -> cam", function() {deepEqual( Stem("camere"), "cam");});
test("cameriera -> camerier", function() {deepEqual( Stem("cameriera"), "camerier");});
test("cameriere -> camer", function() {deepEqual( Stem("cameriere"), "camer");});
test("cameriero -> camerier", function() {deepEqual( Stem("cameriero"), "camerier");});
test("cameroun -> cameroun", function() {deepEqual( Stem("cameroun"), "cameroun");});
test("camfin -> camfin", function() {deepEqual( Stem("camfin"), "camfin");});
test("camice -> camic", function() {deepEqual( Stem("camice"), "camic");});
test("camici -> camic", function() {deepEqual( Stem("camici"), "camic");});
test("camicia -> camic", function() {deepEqual( Stem("camicia"), "camic");});
test("camicie -> camic", function() {deepEqual( Stem("camicie"), "camic");});
test("camion -> camion", function() {deepEqual( Stem("camion"), "camion");});
test("camionette -> camionett", function() {deepEqual( Stem("camionette"), "camionett");});
test("cammarata -> cammar", function() {deepEqual( Stem("cammarata"), "cammar");});
test("cammera -> cammer", function() {deepEqual( Stem("cammera"), "cammer");});
test("cammin -> cammin", function() {deepEqual( Stem("cammin"), "cammin");});
test("cammina -> cammin", function() {deepEqual( Stem("cammina"), "cammin");});
test("camminando -> cammin", function() {deepEqual( Stem("camminando"), "cammin");});
test("camminano -> cammin", function() {deepEqual( Stem("camminano"), "cammin");});
test("camminar -> cammin", function() {deepEqual( Stem("camminar"), "cammin");});
test("camminare -> cammin", function() {deepEqual( Stem("camminare"), "cammin");});
test("camminarono -> cammin", function() {deepEqual( Stem("camminarono"), "cammin");});
test("camminasse -> cammin", function() {deepEqual( Stem("camminasse"), "cammin");});
test("camminata -> cammin", function() {deepEqual( Stem("camminata"), "cammin");});
test("camminato -> cammin", function() {deepEqual( Stem("camminato"), "cammin");});
test("camminava -> cammin", function() {deepEqual( Stem("camminava"), "cammin");});
test("camminavan -> camminavan", function() {deepEqual( Stem("camminavan"), "camminavan");});
test("camminavano -> cammin", function() {deepEqual( Stem("camminavano"), "cammin");});
test("cammino -> cammin", function() {deepEqual( Stem("cammino"), "cammin");});
test("camminò -> cammin", function() {deepEqual( Stem("camminò"), "cammin");});
test("camorra -> camorr", function() {deepEqual( Stem("camorra"), "camorr");});
test("camorristici -> camorrist", function() {deepEqual( Stem("camorristici"), "camorrist");});
test("campa -> camp", function() {deepEqual( Stem("campa"), "camp");});
test("campagna -> campagn", function() {deepEqual( Stem("campagna"), "campagn");});
test("campagne -> campagn", function() {deepEqual( Stem("campagne"), "campagn");});
test("campale -> campal", function() {deepEqual( Stem("campale"), "campal");});
test("campana -> campan", function() {deepEqual( Stem("campana"), "campan");});
test("campane -> campan", function() {deepEqual( Stem("campane"), "campan");});
test("campanelle -> campanell", function() {deepEqual( Stem("campanelle"), "campanell");});
test("campanelli -> campanell", function() {deepEqual( Stem("campanelli"), "campanell");});
test("campanello -> campanell", function() {deepEqual( Stem("campanello"), "campanell");});
test("campanette -> campanett", function() {deepEqual( Stem("campanette"), "campanett");});
test("campani -> campan", function() {deepEqual( Stem("campani"), "campan");});
test("campania -> campan", function() {deepEqual( Stem("campania"), "campan");});
test("campanile -> campanil", function() {deepEqual( Stem("campanile"), "campanil");});
test("campanili -> campanil", function() {deepEqual( Stem("campanili"), "campanil");});
test("campanilistici -> campanilist", function() {deepEqual( Stem("campanilistici"), "campanilist");});
test("campar -> camp", function() {deepEqual( Stem("campar"), "camp");});
test("campare -> camp", function() {deepEqual( Stem("campare"), "camp");});
test("campati -> camp", function() {deepEqual( Stem("campati"), "camp");});
test("campeggia -> campegg", function() {deepEqual( Stem("campeggia"), "campegg");});
test("campeggiava -> campegg", function() {deepEqual( Stem("campeggiava"), "campegg");});
test("camperai -> camp", function() {deepEqual( Stem("camperai"), "camp");});
test("camperebbe -> camp", function() {deepEqual( Stem("camperebbe"), "camp");});
test("camperemo -> camp", function() {deepEqual( Stem("camperemo"), "camp");});
test("campestre -> campestr", function() {deepEqual( Stem("campestre"), "campestr");});
test("campi -> camp", function() {deepEqual( Stem("campi"), "camp");});
test("campiamo -> camp", function() {deepEqual( Stem("campiamo"), "camp");});
test("campicelli -> campicell", function() {deepEqual( Stem("campicelli"), "campicell");});
test("campicello -> campicell", function() {deepEqual( Stem("campicello"), "campicell");});
test("campienza -> campienz", function() {deepEqual( Stem("campienza"), "campienz");});
test("campilongo -> campilong", function() {deepEqual( Stem("campilongo"), "campilong");});
test("campionati -> campion", function() {deepEqual( Stem("campionati"), "campion");});
test("campionato -> campion", function() {deepEqual( Stem("campionato"), "campion");});
test("campione -> campion", function() {deepEqual( Stem("campione"), "campion");});
test("campioni -> campion", function() {deepEqual( Stem("campioni"), "campion");});
test("campo -> camp", function() {deepEqual( Stem("campo"), "camp");});
test("campobasso -> campobass", function() {deepEqual( Stem("campobasso"), "campobass");});
test("campolo -> campol", function() {deepEqual( Stem("campolo"), "campol");});
test("can -> can", function() {deepEqual( Stem("can"), "can");});
test("canada -> canad", function() {deepEqual( Stem("canada"), "canad");});
test("canadese -> canades", function() {deepEqual( Stem("canadese"), "canades");});
test("canadesi -> canades", function() {deepEqual( Stem("canadesi"), "canades");});
test("canaglia -> canagl", function() {deepEqual( Stem("canaglia"), "canagl");});
test("canale -> canal", function() {deepEqual( Stem("canale"), "canal");});
test("canali -> canal", function() {deepEqual( Stem("canali"), "canal");});
test("canalizzazioni -> canalizz", function() {deepEqual( Stem("canalizzazioni"), "canalizz");});
test("cancellar -> cancell", function() {deepEqual( Stem("cancellar"), "cancell");});
test("cancellare -> cancell", function() {deepEqual( Stem("cancellare"), "cancell");});
test("cancellata -> cancell", function() {deepEqual( Stem("cancellata"), "cancell");});
test("cancellati -> cancell", function() {deepEqual( Stem("cancellati"), "cancell");});
test("cancellato -> cancell", function() {deepEqual( Stem("cancellato"), "cancell");});
test("cancellazione -> cancell", function() {deepEqual( Stem("cancellazione"), "cancell");});
test("cancellazioni -> cancell", function() {deepEqual( Stem("cancellazioni"), "cancell");});
test("cancelli -> cancell", function() {deepEqual( Stem("cancelli"), "cancell");});
test("cancellierato -> cancellier", function() {deepEqual( Stem("cancellierato"), "cancellier");});
test("cancelliere -> cancell", function() {deepEqual( Stem("cancelliere"), "cancell");});
test("cancello -> cancell", function() {deepEqual( Stem("cancello"), "cancell");});
test("canchero -> cancher", function() {deepEqual( Stem("canchero"), "cancher");});
test("cancro -> cancr", function() {deepEqual( Stem("cancro"), "cancr");});
test("candela -> candel", function() {deepEqual( Stem("candela"), "candel");});
test("candele -> candel", function() {deepEqual( Stem("candele"), "candel");});
test("candidare -> candid", function() {deepEqual( Stem("candidare"), "candid");});
test("candidarsi -> candid", function() {deepEqual( Stem("candidarsi"), "candid");});
test("candidati -> candid", function() {deepEqual( Stem("candidati"), "candid");});
test("candidato -> candid", function() {deepEqual( Stem("candidato"), "candid");});
test("candidatura -> candidatur", function() {deepEqual( Stem("candidatura"), "candidatur");});
test("candidature -> candidatur", function() {deepEqual( Stem("candidature"), "candidatur");});
test("candide -> candid", function() {deepEqual( Stem("candide"), "candid");});
test("candor -> candor", function() {deepEqual( Stem("candor"), "candor");});
test("candore -> candor", function() {deepEqual( Stem("candore"), "candor");});
test("candy -> candy", function() {deepEqual( Stem("candy"), "candy");});
test("cane -> can", function() {deepEqual( Stem("cane"), "can");});
test("canè -> can", function() {deepEqual( Stem("canè"), "can");});
test("canelli -> canell", function() {deepEqual( Stem("canelli"), "canell");});
test("cangiò -> cang", function() {deepEqual( Stem("cangiò"), "cang");});
test("cani -> can", function() {deepEqual( Stem("cani"), "can");});
test("canins -> canins", function() {deepEqual( Stem("canins"), "canins");});
test("canio -> can", function() {deepEqual( Stem("canio"), "can");});
test("canizie -> caniz", function() {deepEqual( Stem("canizie"), "caniz");});
test("canmore -> canmor", function() {deepEqual( Stem("canmore"), "canmor");});
test("canna -> cann", function() {deepEqual( Stem("canna"), "cann");});
test("cannavaro -> cannavar", function() {deepEqual( Stem("cannavaro"), "cannavar");});
test("canne -> cann", function() {deepEqual( Stem("canne"), "cann");});
test("cannes -> cannes", function() {deepEqual( Stem("cannes"), "cannes");});
test("cannistrà -> cannistr", function() {deepEqual( Stem("cannistrà"), "cannistr");});
test("cannoncini -> cannoncin", function() {deepEqual( Stem("cannoncini"), "cannoncin");});
test("cannoncino -> cannoncin", function() {deepEqual( Stem("cannoncino"), "cannoncin");});
test("cannoniere -> cannon", function() {deepEqual( Stem("cannoniere"), "cannon");});
test("canoe -> cano", function() {deepEqual( Stem("canoe"), "cano");});
test("canoni -> canon", function() {deepEqual( Stem("canoni"), "canon");});
test("canonica -> canon", function() {deepEqual( Stem("canonica"), "canon");});
test("canonici -> canon", function() {deepEqual( Stem("canonici"), "canon");});
test("canonico -> canon", function() {deepEqual( Stem("canonico"), "canon");});
test("canovaccio -> canovacc", function() {deepEqual( Stem("canovaccio"), "canovacc");});
test("canta -> cant", function() {deepEqual( Stem("canta"), "cant");});
test("cantambanchi -> cantambanc", function() {deepEqual( Stem("cantambanchi"), "cantambanc");});
test("cantando -> cant", function() {deepEqual( Stem("cantando"), "cant");});
test("cantante -> cantant", function() {deepEqual( Stem("cantante"), "cantant");});
test("cantanti -> cantant", function() {deepEqual( Stem("cantanti"), "cantant");});
test("cantar -> cant", function() {deepEqual( Stem("cantar"), "cant");});
test("cantare -> cant", function() {deepEqual( Stem("cantare"), "cant");});
test("cantarotti -> cantarott", function() {deepEqual( Stem("cantarotti"), "cantarott");});
test("cantarutti -> cantarutt", function() {deepEqual( Stem("cantarutti"), "cantarutt");});
test("cantautrice -> cantautr", function() {deepEqual( Stem("cantautrice"), "cantautr");});
test("cantava -> cant", function() {deepEqual( Stem("cantava"), "cant");});
test("cantavano -> cant", function() {deepEqual( Stem("cantavano"), "cant");});
test("canterelli -> canterell", function() {deepEqual( Stem("canterelli"), "canterell");});
test("canti -> cant", function() {deepEqual( Stem("canti"), "cant");});
test("cantiere -> cant", function() {deepEqual( Stem("cantiere"), "cant");});
test("cantieri -> cantier", function() {deepEqual( Stem("cantieri"), "cantier");});
test("cantieristica -> cantierist", function() {deepEqual( Stem("cantieristica"), "cantierist");});
test("cantilena -> cantilen", function() {deepEqual( Stem("cantilena"), "cantilen");});
test("cantina -> cantin", function() {deepEqual( Stem("cantina"), "cantin");});
test("canto -> cant", function() {deepEqual( Stem("canto"), "cant");});
test("cantona -> canton", function() {deepEqual( Stem("cantona"), "canton");});
test("cantonata -> canton", function() {deepEqual( Stem("cantonata"), "canton");});
test("cantonate -> canton", function() {deepEqual( Stem("cantonate"), "canton");});
test("cantoni -> canton", function() {deepEqual( Stem("cantoni"), "canton");});
test("cantù -> cantù", function() {deepEqual( Stem("cantù"), "cantù");});
test("cantucci -> cantucc", function() {deepEqual( Stem("cantucci"), "cantucc");});
test("cantuccino -> cantuccin", function() {deepEqual( Stem("cantuccino"), "cantuccin");});
test("cantuccio -> cantucc", function() {deepEqual( Stem("cantuccio"), "cantucc");});
test("canuti -> can", function() {deepEqual( Stem("canuti"), "can");});
test("canyon -> canyon", function() {deepEqual( Stem("canyon"), "canyon");});
test("canzanella -> canzanell", function() {deepEqual( Stem("canzanella"), "canzanell");});
test("canzonaccia -> canzonacc", function() {deepEqual( Stem("canzonaccia"), "canzonacc");});
test("canzonare -> canzon", function() {deepEqual( Stem("canzonare"), "canzon");});
test("canzonarlo -> canzon", function() {deepEqual( Stem("canzonarlo"), "canzon");});
test("canzonatoria -> canzonator", function() {deepEqual( Stem("canzonatoria"), "canzonator");});
test("canzonatorie -> canzonator", function() {deepEqual( Stem("canzonatorie"), "canzonator");});
test("canzonatorio -> canzonator", function() {deepEqual( Stem("canzonatorio"), "canzonator");});
test("canzonature -> canzonatur", function() {deepEqual( Stem("canzonature"), "canzonatur");});
test("canzone -> canzon", function() {deepEqual( Stem("canzone"), "canzon");});
test("canzoni -> canzon", function() {deepEqual( Stem("canzoni"), "canzon");});
test("canzonieri -> canzonier", function() {deepEqual( Stem("canzonieri"), "canzonier");});
test("cao -> cao", function() {deepEqual( Stem("cao"), "cao");});
test("caos -> caos", function() {deepEqual( Stem("caos"), "caos");});
test("cap -> cap", function() {deepEqual( Stem("cap"), "cap");});
test("capa -> cap", function() {deepEqual( Stem("capa"), "cap");});
test("capace -> capac", function() {deepEqual( Stem("capace"), "capac");});
test("capaci -> capac", function() {deepEqual( Stem("capaci"), "capac");});
test("capacità -> capac", function() {deepEqual( Stem("capacità"), "capac");});
test("capacitata -> capacit", function() {deepEqual( Stem("capacitata"), "capacit");});
test("capaciterà -> capacit", function() {deepEqual( Stem("capaciterà"), "capacit");});
test("capanna -> capann", function() {deepEqual( Stem("capanna"), "capann");});
test("capanne -> capann", function() {deepEqual( Stem("capanne"), "capann");});
test("capannuccia -> capannucc", function() {deepEqual( Stem("capannuccia"), "capannucc");});
test("caparbietà -> caparbiet", function() {deepEqual( Stem("caparbietà"), "caparbiet");});
test("caparbio -> caparb", function() {deepEqual( Stem("caparbio"), "caparb");});
test("caparra -> caparr", function() {deepEqual( Stem("caparra"), "caparr");});
test("caparrare -> caparr", function() {deepEqual( Stem("caparrare"), "caparr");});
test("capecchi -> capecc", function() {deepEqual( Stem("capecchi"), "capecc");});
test("capeggiata -> capegg", function() {deepEqual( Stem("capeggiata"), "capegg");});
test("capelli -> capell", function() {deepEqual( Stem("capelli"), "capell");});
test("capello -> capell", function() {deepEqual( Stem("capello"), "capell");});
test("capezzale -> capezzal", function() {deepEqual( Stem("capezzale"), "capezzal");});
test("capi -> cap", function() {deepEqual( Stem("capi"), "cap");});
test("capì -> cap", function() {deepEqual( Stem("capì"), "cap");});
test("capigliatura -> capigliatur", function() {deepEqual( Stem("capigliatura"), "capigliatur");});
test("capigliature -> capigliatur", function() {deepEqual( Stem("capigliature"), "capigliatur");});
test("capigruppo -> capigrupp", function() {deepEqual( Stem("capigruppo"), "capigrupp");});
test("capillare -> capill", function() {deepEqual( Stem("capillare"), "capill");});
test("capir -> cap", function() {deepEqual( Stem("capir"), "cap");});
test("capirà -> cap", function() {deepEqual( Stem("capirà"), "cap");});
test("capiranno -> cap", function() {deepEqual( Stem("capiranno"), "cap");});
test("capire -> cap", function() {deepEqual( Stem("capire"), "cap");});
test("capirlo -> cap", function() {deepEqual( Stem("capirlo"), "cap");});
test("capisaldi -> capisald", function() {deepEqual( Stem("capisaldi"), "capisald");});
test("capisce -> cap", function() {deepEqual( Stem("capisce"), "cap");});
test("capisco -> cap", function() {deepEqual( Stem("capisco"), "cap");});
test("capiscon -> capiscon", function() {deepEqual( Stem("capiscon"), "capiscon");});
test("capiscono -> cap", function() {deepEqual( Stem("capiscono"), "cap");});
test("capita -> cap", function() {deepEqual( Stem("capita"), "cap");});
test("capital -> capital", function() {deepEqual( Stem("capital"), "capital");});
test("capitalcredit -> capitalcredit", function() {deepEqual( Stem("capitalcredit"), "capitalcredit");});
test("capitale -> capital", function() {deepEqual( Stem("capitale"), "capital");});
test("capitalfit -> capitalfit", function() {deepEqual( Stem("capitalfit"), "capitalfit");});
test("capitalfondo -> capitalfond", function() {deepEqual( Stem("capitalfondo"), "capitalfond");});
test("capitalgest -> capitalgest", function() {deepEqual( Stem("capitalgest"), "capitalgest");});
test("capitali -> capital", function() {deepEqual( Stem("capitali"), "capital");});
test("capitalismo -> capital", function() {deepEqual( Stem("capitalismo"), "capital");});
test("capitalizzare -> capitalizz", function() {deepEqual( Stem("capitalizzare"), "capitalizz");});
test("capitalizzazione -> capitalizz", function() {deepEqual( Stem("capitalizzazione"), "capitalizz");});
test("capitalras -> capitalras", function() {deepEqual( Stem("capitalras"), "capitalras");});
test("capitan -> capitan", function() {deepEqual( Stem("capitan"), "capitan");});
test("capitanei -> capitane", function() {deepEqual( Stem("capitanei"), "capitane");});
test("capitaneria -> capitaner", function() {deepEqual( Stem("capitaneria"), "capitaner");});
test("capitanerie -> capitaner", function() {deepEqual( Stem("capitanerie"), "capitaner");});
test("capitani -> capitan", function() {deepEqual( Stem("capitani"), "capitan");});
test("capitano -> capit", function() {deepEqual( Stem("capitano"), "capit");});
test("capitanucci -> capitanucc", function() {deepEqual( Stem("capitanucci"), "capitanucc");});
test("capitar -> capit", function() {deepEqual( Stem("capitar"), "capit");});
test("capitare -> capit", function() {deepEqual( Stem("capitare"), "capit");});
test("capitarono -> capit", function() {deepEqual( Stem("capitarono"), "capit");});
test("capitasse -> capit", function() {deepEqual( Stem("capitasse"), "capit");});
test("capitata -> capit", function() {deepEqual( Stem("capitata"), "capit");});
test("capitate -> capit", function() {deepEqual( Stem("capitate"), "capit");});
test("capitati -> capit", function() {deepEqual( Stem("capitati"), "capit");});
test("capitato -> capit", function() {deepEqual( Stem("capitato"), "capit");});
test("capitava -> capit", function() {deepEqual( Stem("capitava"), "capit");});
test("capite -> cap", function() {deepEqual( Stem("capite"), "cap");});
test("capiti -> cap", function() {deepEqual( Stem("capiti"), "cap");});
test("capito -> cap", function() {deepEqual( Stem("capito"), "cap");});
test("capitò -> capit", function() {deepEqual( Stem("capitò"), "capit");});
test("capitoli -> capitol", function() {deepEqual( Stem("capitoli"), "capitol");});
test("capitolo -> capitol", function() {deepEqual( Stem("capitolo"), "capitol");});
test("capitombolo -> capitombol", function() {deepEqual( Stem("capitombolo"), "capitombol");});
test("capitorno -> capitorn", function() {deepEqual( Stem("capitorno"), "capitorn");});
test("capiva -> cap", function() {deepEqual( Stem("capiva"), "cap");});
test("capivano -> cap", function() {deepEqual( Stem("capivano"), "cap");});
test("capo -> cap", function() {deepEqual( Stem("capo"), "cap");});
test("capò -> cap", function() {deepEqual( Stem("capò"), "cap");});
test("capobanda -> capoband", function() {deepEqual( Stem("capobanda"), "capoband");});
test("capocannoniere -> capocannon", function() {deepEqual( Stem("capocannoniere"), "capocannon");});
test("capocchie -> capocc", function() {deepEqual( Stem("capocchie"), "capocc");});
test("capocomici -> capocom", function() {deepEqual( Stem("capocomici"), "capocom");});
test("capocordata -> capocord", function() {deepEqual( Stem("capocordata"), "capocord");});
test("capodanno -> capodann", function() {deepEqual( Stem("capodanno"), "capodann");});
test("capogruppo -> capogrupp", function() {deepEqual( Stem("capogruppo"), "capogrupp");});
test("capolavoro -> capolavor", function() {deepEqual( Stem("capolavoro"), "capolavor");});
test("capolinea -> capoline", function() {deepEqual( Stem("capolinea"), "capoline");});
test("capolini -> capolin", function() {deepEqual( Stem("capolini"), "capolin");});
test("capolino -> capolin", function() {deepEqual( Stem("capolino"), "capolin");});
test("capoluogo -> capoluog", function() {deepEqual( Stem("capoluogo"), "capoluog");});
test("capopolo -> capopol", function() {deepEqual( Stem("capopolo"), "capopol");});
test("caporalaccio -> caporalacc", function() {deepEqual( Stem("caporalaccio"), "caporalacc");});
test("caporedattori -> caporedattor", function() {deepEqual( Stem("caporedattori"), "caporedattor");});
test("capovolgimento -> capovolg", function() {deepEqual( Stem("capovolgimento"), "capovolg");});
test("capovolti -> capovolt", function() {deepEqual( Stem("capovolti"), "capovolt");});
test("cappa -> capp", function() {deepEqual( Stem("cappa"), "capp");});
test("cappe -> capp", function() {deepEqual( Stem("cappe"), "capp");});
test("cappella -> cappell", function() {deepEqual( Stem("cappella"), "cappell");});
test("cappellaccio -> cappellacc", function() {deepEqual( Stem("cappellaccio"), "cappellacc");});
test("cappellano -> cappell", function() {deepEqual( Stem("cappellano"), "cappell");});
test("cappelletti -> cappellett", function() {deepEqual( Stem("cappelletti"), "cappellett");});
test("cappelli -> cappell", function() {deepEqual( Stem("cappelli"), "cappell");});
test("cappellini -> cappellin", function() {deepEqual( Stem("cappellini"), "cappellin");});
test("cappello -> cappell", function() {deepEqual( Stem("cappello"), "cappell");});
test("cappellotto -> cappellott", function() {deepEqual( Stem("cappellotto"), "cappellott");});
test("cappioli -> cappiol", function() {deepEqual( Stem("cappioli"), "cappiol");});
test("cappone -> cappon", function() {deepEqual( Stem("cappone"), "cappon");});
test("capponi -> cappon", function() {deepEqual( Stem("capponi"), "cappon");});
test("cappucci -> cappucc", function() {deepEqual( Stem("cappucci"), "cappucc");});
test("cappuccinesca -> cappuccinesc", function() {deepEqual( Stem("cappuccinesca"), "cappuccinesc");});
test("cappuccinesco -> cappuccinesc", function() {deepEqual( Stem("cappuccinesco"), "cappuccinesc");});
test("cappuccini -> cappuccin", function() {deepEqual( Stem("cappuccini"), "cappuccin");});
test("cappuccino -> cappuccin", function() {deepEqual( Stem("cappuccino"), "cappuccin");});
test("cappuccio -> cappucc", function() {deepEqual( Stem("cappuccio"), "cappucc");});
test("capra -> capr", function() {deepEqual( Stem("capra"), "capr");});
test("capre -> capr", function() {deepEqual( Stem("capre"), "capr");});
test("capricci -> capricc", function() {deepEqual( Stem("capricci"), "capricc");});
test("capriccio -> capricc", function() {deepEqual( Stem("capriccio"), "capricc");});
test("capricciose -> capricc", function() {deepEqual( Stem("capricciose"), "capricc");});
test("caprioglio -> capriogl", function() {deepEqual( Stem("caprioglio"), "capriogl");});
test("captata -> capt", function() {deepEqual( Stem("captata"), "capt");});
test("capucines -> capucines", function() {deepEqual( Stem("capucines"), "capucines");});
test("caputi -> cap", function() {deepEqual( Stem("caputi"), "cap");});
test("car -> car", function() {deepEqual( Stem("car"), "car");});
test("cara -> car", function() {deepEqual( Stem("cara"), "car");});
test("carabina -> carabin", function() {deepEqual( Stem("carabina"), "carabin");});
test("carabinieri -> carabinier", function() {deepEqual( Stem("carabinieri"), "carabinier");});
test("caracas -> caracas", function() {deepEqual( Stem("caracas"), "caracas");});
test("caramel -> caramel", function() {deepEqual( Stem("caramel"), "caramel");});
test("caramente -> car", function() {deepEqual( Stem("caramente"), "car");});
test("carati -> car", function() {deepEqual( Stem("carati"), "car");});
test("carattere -> caratt", function() {deepEqual( Stem("carattere"), "caratt");});
test("caratteri -> caratter", function() {deepEqual( Stem("caratteri"), "caratter");});
test("caratteriale -> caratterial", function() {deepEqual( Stem("caratteriale"), "caratterial");});
test("caratteriali -> caratterial", function() {deepEqual( Stem("caratteriali"), "caratterial");});
test("caratteristiche -> caratterist", function() {deepEqual( Stem("caratteristiche"), "caratterist");});
test("caratterizza -> caratterizz", function() {deepEqual( Stem("caratterizza"), "caratterizz");});
test("caratterizzata -> caratterizz", function() {deepEqual( Stem("caratterizzata"), "caratterizz");});
test("caratterizzate -> caratterizz", function() {deepEqual( Stem("caratterizzate"), "caratterizz");});
test("caratterizzati -> caratterizz", function() {deepEqual( Stem("caratterizzati"), "caratterizz");});
test("caratterizzato -> caratterizz", function() {deepEqual( Stem("caratterizzato"), "caratterizz");});
test("caravale -> caraval", function() {deepEqual( Stem("caravale"), "caraval");});
test("carbide -> carbid", function() {deepEqual( Stem("carbide"), "carbid");});
test("carbon -> carbon", function() {deepEqual( Stem("carbon"), "carbon");});
test("carbonara -> carbonar", function() {deepEqual( Stem("carbonara"), "carbonar");});
test("carbone -> carbon", function() {deepEqual( Stem("carbone"), "carbon");});
test("carboni -> carbon", function() {deepEqual( Stem("carboni"), "carbon");});
test("carbonica -> carbon", function() {deepEqual( Stem("carbonica"), "carbon");});
test("carbonio -> carbon", function() {deepEqual( Stem("carbonio"), "carbon");});
test("carbotrade -> carbotrad", function() {deepEqual( Stem("carbotrade"), "carbotrad");});
test("carburante -> carbur", function() {deepEqual( Stem("carburante"), "carbur");});
test("carburanti -> carbur", function() {deepEqual( Stem("carburanti"), "carbur");});
test("carcerazione -> carcer", function() {deepEqual( Stem("carcerazione"), "carcer");});
test("carcere -> carc", function() {deepEqual( Stem("carcere"), "carc");});
test("carceri -> carcer", function() {deepEqual( Stem("carceri"), "carcer");});
test("carceriera -> carcerier", function() {deepEqual( Stem("carceriera"), "carcerier");});
test("cardano -> card", function() {deepEqual( Stem("cardano"), "card");});
test("cardarelli -> cardarell", function() {deepEqual( Stem("cardarelli"), "cardarell");});
test("cardenas -> cardenas", function() {deepEqual( Stem("cardenas"), "cardenas");});
test("cardi -> card", function() {deepEqual( Stem("cardi"), "card");});
test("cardia -> card", function() {deepEqual( Stem("cardia"), "card");});
test("cardiaca -> cardiac", function() {deepEqual( Stem("cardiaca"), "cardiac");});
test("cardiache -> cardiac", function() {deepEqual( Stem("cardiache"), "cardiac");});
test("cardiaci -> cardiac", function() {deepEqual( Stem("cardiaci"), "cardiac");});
test("cardillo -> cardill", function() {deepEqual( Stem("cardillo"), "cardill");});
test("cardinal -> cardinal", function() {deepEqual( Stem("cardinal"), "cardinal");});
test("cardinale -> cardinal", function() {deepEqual( Stem("cardinale"), "cardinal");});
test("cardinali -> cardinal", function() {deepEqual( Stem("cardinali"), "cardinal");});
test("cardine -> cardin", function() {deepEqual( Stem("cardine"), "cardin");});
test("cardini -> cardin", function() {deepEqual( Stem("cardini"), "cardin");});
test("cardiopatia -> cardiopat", function() {deepEqual( Stem("cardiopatia"), "cardiopat");});
test("cardolus -> cardolus", function() {deepEqual( Stem("cardolus"), "cardolus");});
test("care -> car", function() {deepEqual( Stem("care"), "car");});
test("carente -> carent", function() {deepEqual( Stem("carente"), "carent");});
test("carenze -> carenz", function() {deepEqual( Stem("carenze"), "carenz");});
test("carestia -> carest", function() {deepEqual( Stem("carestia"), "carest");});
test("carestie -> carest", function() {deepEqual( Stem("carestie"), "carest");});
test("carezze -> carezz", function() {deepEqual( Stem("carezze"), "carezz");});
test("carezzevole -> carezzevol", function() {deepEqual( Stem("carezzevole"), "carezzevol");});
test("cari -> car", function() {deepEqual( Stem("cari"), "car");});
test("cariatide -> cariatid", function() {deepEqual( Stem("cariatide"), "cariatid");});
test("caribe -> carib", function() {deepEqual( Stem("caribe"), "carib");});
test("carica -> caric", function() {deepEqual( Stem("carica"), "caric");});
test("carical -> carical", function() {deepEqual( Stem("carical"), "carical");});
test("carican -> carican", function() {deepEqual( Stem("carican"), "carican");});
test("caricare -> caric", function() {deepEqual( Stem("caricare"), "caric");});
test("caricaron -> caricaron", function() {deepEqual( Stem("caricaron"), "caricaron");});
test("caricati -> caric", function() {deepEqual( Stem("caricati"), "caric");});
test("caricato -> caric", function() {deepEqual( Stem("caricato"), "caric");});
test("caricatura -> caricatur", function() {deepEqual( Stem("caricatura"), "caricatur");});
test("cariche -> caric", function() {deepEqual( Stem("cariche"), "caric");});
test("carichi -> caric", function() {deepEqual( Stem("carichi"), "caric");});
test("carico -> caric", function() {deepEqual( Stem("carico"), "caric");});
test("caricola -> caricol", function() {deepEqual( Stem("caricola"), "caricol");});
test("cariddi -> caridd", function() {deepEqual( Stem("cariddi"), "caridd");});
test("carifondo -> carifond", function() {deepEqual( Stem("carifondo"), "carifond");});
test("carige -> carig", function() {deepEqual( Stem("carige"), "carig");});
test("cariparma -> cariparm", function() {deepEqual( Stem("cariparma"), "cariparm");});
test("cariplo -> caripl", function() {deepEqual( Stem("cariplo"), "caripl");});
test("carisbo -> carisb", function() {deepEqual( Stem("carisbo"), "carisb");});
test("carismatico -> carismat", function() {deepEqual( Stem("carismatico"), "carismat");});
test("carissimi -> carissim", function() {deepEqual( Stem("carissimi"), "carissim");});
test("carissimo -> carissim", function() {deepEqual( Stem("carissimo"), "carissim");});
test("carità -> carit", function() {deepEqual( Stem("carità"), "carit");});
test("caritas -> caritas", function() {deepEqual( Stem("caritas"), "caritas");});
test("caritatevole -> caritatevol", function() {deepEqual( Stem("caritatevole"), "caritatevol");});
test("carla -> carl", function() {deepEqual( Stem("carla"), "carl");});
test("carlandrea -> carlandre", function() {deepEqual( Stem("carlandrea"), "carlandre");});
test("carlo -> carl", function() {deepEqual( Stem("carlo"), "carl");});
test("carlona -> carlon", function() {deepEqual( Stem("carlona"), "carlon");});
test("carlos -> carlos", function() {deepEqual( Stem("carlos"), "carlos");});
test("carlotto -> carlott", function() {deepEqual( Stem("carlotto"), "carlott");});
test("carlucci -> carlucc", function() {deepEqual( Stem("carlucci"), "carlucc");});
test("carmela -> carmel", function() {deepEqual( Stem("carmela"), "carmel");});
test("carmelo -> carmel", function() {deepEqual( Stem("carmelo"), "carmel");});
test("carmen -> carmen", function() {deepEqual( Stem("carmen"), "carmen");});
test("carmine -> carmin", function() {deepEqual( Stem("carmine"), "carmin");});
test("carnascialesche -> carnascialesc", function() {deepEqual( Stem("carnascialesche"), "carnascialesc");});
test("carnasciali -> carnascial", function() {deepEqual( Stem("carnasciali"), "carnascial");});
test("carne -> carn", function() {deepEqual( Stem("carne"), "carn");});
test("carneade -> carnead", function() {deepEqual( Stem("carneade"), "carnead");});
test("carnemolla -> carnemoll", function() {deepEqual( Stem("carnemolla"), "carnemoll");});
test("carnet -> carnet", function() {deepEqual( Stem("carnet"), "carnet");});
test("carnevale -> carneval", function() {deepEqual( Stem("carnevale"), "carneval");});
test("carni -> carn", function() {deepEqual( Stem("carni"), "carn");});
test("carnica -> carnic", function() {deepEqual( Stem("carnica"), "carnic");});
test("carnificine -> carnificin", function() {deepEqual( Stem("carnificine"), "carnificin");});
test("carnpanelli -> carnpanell", function() {deepEqual( Stem("carnpanelli"), "carnpanell");});
test("caro -> car", function() {deepEqual( Stem("caro"), "car");});
test("caroccio -> carocc", function() {deepEqual( Stem("caroccio"), "carocc");});
test("carosi -> caros", function() {deepEqual( Stem("carosi"), "caros");});
test("carovana -> carovan", function() {deepEqual( Stem("carovana"), "carovan");});
test("carpi -> carp", function() {deepEqual( Stem("carpi"), "carp");});
test("carpio -> carp", function() {deepEqual( Stem("carpio"), "carp");});
test("carpon -> carpon", function() {deepEqual( Stem("carpon"), "carpon");});
test("carpone -> carpon", function() {deepEqual( Stem("carpone"), "carpon");});
test("carponi -> carpon", function() {deepEqual( Stem("carponi"), "carpon");});
test("carrara -> carrar", function() {deepEqual( Stem("carrara"), "carrar");});
test("carrarese -> carrares", function() {deepEqual( Stem("carrarese"), "carrares");});
test("carraro -> carrar", function() {deepEqual( Stem("carraro"), "carrar");});
test("carrera -> carrer", function() {deepEqual( Stem("carrera"), "carrer");});
test("carretta -> carrett", function() {deepEqual( Stem("carretta"), "carrett");});
test("carri -> carr", function() {deepEqual( Stem("carri"), "carr");});
test("carriera -> carrier", function() {deepEqual( Stem("carriera"), "carrier");});
test("carriere -> carr", function() {deepEqual( Stem("carriere"), "carr");});
test("carrierismo -> carrier", function() {deepEqual( Stem("carrierismo"), "carrier");});
test("carro -> carr", function() {deepEqual( Stem("carro"), "carr");});
test("carrobi -> carrob", function() {deepEqual( Stem("carrobi"), "carrob");});
test("carrobio -> carrob", function() {deepEqual( Stem("carrobio"), "carrob");});
test("carroccio -> carrocc", function() {deepEqual( Stem("carroccio"), "carrocc");});
test("carrocio -> carroc", function() {deepEqual( Stem("carrocio"), "carroc");});
test("carroll -> carroll", function() {deepEqual( Stem("carroll"), "carroll");});
test("carrozza -> carrozz", function() {deepEqual( Stem("carrozza"), "carrozz");});
test("carrozzata -> carrozz", function() {deepEqual( Stem("carrozzata"), "carrozz");});
test("carrozze -> carrozz", function() {deepEqual( Stem("carrozze"), "carrozz");});
test("carrozzine -> carrozzin", function() {deepEqual( Stem("carrozzine"), "carrozzin");});
test("carruba -> carrub", function() {deepEqual( Stem("carruba"), "carrub");});
test("carrucole -> carrucol", function() {deepEqual( Stem("carrucole"), "carrucol");});
test("cart -> cart", function() {deepEqual( Stem("cart"), "cart");});
test("carta -> cart", function() {deepEqual( Stem("carta"), "cart");});
test("cartagine -> cartagin", function() {deepEqual( Stem("cartagine"), "cartagin");});
test("cartapesta -> cartapest", function() {deepEqual( Stem("cartapesta"), "cartapest");});
test("cartapestai -> cartapesta", function() {deepEqual( Stem("cartapestai"), "cartapesta");});
test("cartarie -> cartar", function() {deepEqual( Stem("cartarie"), "cartar");});
test("carte -> cart", function() {deepEqual( Stem("carte"), "cart");});
test("carteggio -> cartegg", function() {deepEqual( Stem("carteggio"), "cartegg");});
test("cartelli -> cartell", function() {deepEqual( Stem("cartelli"), "cartell");});
test("cartellini -> cartellin", function() {deepEqual( Stem("cartellini"), "cartellin");});
test("cartello -> cartell", function() {deepEqual( Stem("cartello"), "cartell");});
test("cartellone -> cartellon", function() {deepEqual( Stem("cartellone"), "cartellon");});
test("carter -> carter", function() {deepEqual( Stem("carter"), "carter");});
test("cartht -> cartht", function() {deepEqual( Stem("cartht"), "cartht");});
test("cartina -> cartin", function() {deepEqual( Stem("cartina"), "cartin");});
test("cartografia -> cartograf", function() {deepEqual( Stem("cartografia"), "cartograf");});
test("cartone -> carton", function() {deepEqual( Stem("cartone"), "carton");});
test("cartoni -> carton", function() {deepEqual( Stem("cartoni"), "carton");});
test("carulli -> carull", function() {deepEqual( Stem("carulli"), "carull");});
test("cas -> cas", function() {deepEqual( Stem("cas"), "cas");});
test("casa -> cas", function() {deepEqual( Stem("casa"), "cas");});
test("casacca -> casacc", function() {deepEqual( Stem("casacca"), "casacc");});
test("casaccia -> casacc", function() {deepEqual( Stem("casaccia"), "casacc");});
test("casadei -> casade", function() {deepEqual( Stem("casadei"), "casade");});
test("casal -> casal", function() {deepEqual( Stem("casal"), "casal");});
test("casale -> casal", function() {deepEqual( Stem("casale"), "casal");});
test("casalecchio -> casalecc", function() {deepEqual( Stem("casalecchio"), "casalecc");});
test("casali -> casal", function() {deepEqual( Stem("casali"), "casal");});
test("casalinga -> casaling", function() {deepEqual( Stem("casalinga"), "casaling");});
test("casalnuovo -> casalnuov", function() {deepEqual( Stem("casalnuovo"), "casalnuov");});
test("casanovà -> casanov", function() {deepEqual( Stem("casanovà"), "casanov");});
test("casarano -> casar", function() {deepEqual( Stem("casarano"), "casar");});
test("casas -> casas", function() {deepEqual( Stem("casas"), "casas");});
test("casasco -> casasc", function() {deepEqual( Stem("casasco"), "casasc");});
test("casati -> cas", function() {deepEqual( Stem("casati"), "cas");});
test("casato -> cas", function() {deepEqual( Stem("casato"), "cas");});
test("casazza -> casazz", function() {deepEqual( Stem("casazza"), "casazz");});
test("casca -> casc", function() {deepEqual( Stem("casca"), "casc");});
test("cascan -> cascan", function() {deepEqual( Stem("cascan"), "cascan");});
test("cascano -> casc", function() {deepEqual( Stem("cascano"), "casc");});
test("cascante -> cascant", function() {deepEqual( Stem("cascante"), "cascant");});
test("cascanti -> cascant", function() {deepEqual( Stem("cascanti"), "cascant");});
test("cascare -> casc", function() {deepEqual( Stem("cascare"), "casc");});
test("cascata -> casc", function() {deepEqual( Stem("cascata"), "casc");});
test("cascati -> casc", function() {deepEqual( Stem("cascati"), "casc");});
test("cascavano -> casc", function() {deepEqual( Stem("cascavano"), "casc");});
test("caschi -> casc", function() {deepEqual( Stem("caschi"), "casc");});
test("cascia -> casc", function() {deepEqual( Stem("cascia"), "casc");});
test("cascina -> cascin", function() {deepEqual( Stem("cascina"), "cascin");});
test("cascine -> cascin", function() {deepEqual( Stem("cascine"), "cascin");});
test("cascinotto -> cascinott", function() {deepEqual( Stem("cascinotto"), "cascinott");});
test("cascò -> casc", function() {deepEqual( Stem("cascò"), "casc");});
test("cascone -> cascon", function() {deepEqual( Stem("cascone"), "cascon");});
test("case -> cas", function() {deepEqual( Stem("case"), "cas");});
test("caselecchio -> caselecc", function() {deepEqual( Stem("caselecchio"), "caselecc");});
test("casella -> casell", function() {deepEqual( Stem("casella"), "casell");});
test("caselli -> casell", function() {deepEqual( Stem("caselli"), "casell");});
test("caserma -> caserm", function() {deepEqual( Stem("caserma"), "caserm");});
test("casermettè -> casermett", function() {deepEqual( Stem("casermettè"), "casermett");});
test("casermizzazione -> casermizz", function() {deepEqual( Stem("casermizzazione"), "casermizz");});
test("caserta -> casert", function() {deepEqual( Stem("caserta"), "casert");});
test("casertano -> casert", function() {deepEqual( Stem("casertano"), "casert");});
test("casetta -> casett", function() {deepEqual( Stem("casetta"), "casett");});
test("cash -> cash", function() {deepEqual( Stem("cash"), "cash");});
test("casi -> cas", function() {deepEqual( Stem("casi"), "cas");});
test("casillo -> casill", function() {deepEqual( Stem("casillo"), "casill");});
test("casini -> casin", function() {deepEqual( Stem("casini"), "casin");});
test("casino -> casin", function() {deepEqual( Stem("casino"), "casin");});
test("casinò -> casin", function() {deepEqual( Stem("casinò"), "casin");});
test("casipole -> casipol", function() {deepEqual( Stem("casipole"), "casipol");});
test("casiraghi -> casirag", function() {deepEqual( Stem("casiraghi"), "casirag");});
test("caso -> cas", function() {deepEqual( Stem("caso"), "cas");});
test("casolare -> casol", function() {deepEqual( Stem("casolare"), "casol");});
test("casomai -> casoma", function() {deepEqual( Stem("casomai"), "casoma");});
test("casonato -> cason", function() {deepEqual( Stem("casonato"), "cason");});
test("casoria -> casor", function() {deepEqual( Stem("casoria"), "casor");});
test("casotto -> casott", function() {deepEqual( Stem("casotto"), "casott");});
test("caspio -> casp", function() {deepEqual( Stem("caspio"), "casp");});
test("cassa -> cass", function() {deepEqual( Stem("cassa"), "cass");});
test("cassaforte -> cassafort", function() {deepEqual( Stem("cassaforte"), "cassafort");});
test("cassano -> cass", function() {deepEqual( Stem("cassano"), "cass");});
test("cassavetes -> cassavetes", function() {deepEqual( Stem("cassavetes"), "cassavetes");});
test("cassazione -> cassazion", function() {deepEqual( Stem("cassazione"), "cassazion");});
test("casse -> cass", function() {deepEqual( Stem("casse"), "cass");});
test("casseforti -> cassefort", function() {deepEqual( Stem("casseforti"), "cassefort");});
test("cassetta -> cassett", function() {deepEqual( Stem("cassetta"), "cassett");});
test("cassidy -> cassidy", function() {deepEqual( Stem("cassidy"), "cassidy");});
test("cassiere -> cass", function() {deepEqual( Stem("cassiere"), "cass");});
test("cassintegrati -> cassintegr", function() {deepEqual( Stem("cassintegrati"), "cassintegr");});
test("cassintegrazione -> cassintegr", function() {deepEqual( Stem("cassintegrazione"), "cassintegr");});
test("cassone -> casson", function() {deepEqual( Stem("cassone"), "casson");});
test("cassoni -> casson", function() {deepEqual( Stem("cassoni"), "casson");});
test("cast -> cast", function() {deepEqual( Stem("cast"), "cast");});
test("castagna -> castagn", function() {deepEqual( Stem("castagna"), "castagn");});
test("castagne -> castagn", function() {deepEqual( Stem("castagne"), "castagn");});
test("castagneri -> castagner", function() {deepEqual( Stem("castagneri"), "castagner");});
test("castagneto -> castagnet", function() {deepEqual( Stem("castagneto"), "castagnet");});
test("castagnetti -> castagnett", function() {deepEqual( Stem("castagnetti"), "castagnett");});
test("castanova -> castanov", function() {deepEqual( Stem("castanova"), "castanov");});
test("castel -> castel", function() {deepEqual( Stem("castel"), "castel");});
test("castellaccio -> castellacc", function() {deepEqual( Stem("castellaccio"), "castellacc");});
test("castellano -> castell", function() {deepEqual( Stem("castellano"), "castell");});
test("castellari -> castellar", function() {deepEqual( Stem("castellari"), "castellar");});
test("castelli -> castell", function() {deepEqual( Stem("castelli"), "castell");});
test("castellini -> castellin", function() {deepEqual( Stem("castellini"), "castellin");});
test("castello -> castell", function() {deepEqual( Stem("castello"), "castell");});
test("castelnovo -> castelnov", function() {deepEqual( Stem("castelnovo"), "castelnov");});
test("castelvetrano -> castelvetr", function() {deepEqual( Stem("castelvetrano"), "castelvetr");});
test("castiglia -> castigl", function() {deepEqual( Stem("castiglia"), "castigl");});
test("castiglione -> castiglion", function() {deepEqual( Stem("castiglione"), "castiglion");});
test("castro -> castr", function() {deepEqual( Stem("castro"), "castr");});
test("castrovillari -> castrovillar", function() {deepEqual( Stem("castrovillari"), "castrovillar");});
test("castruci -> castruc", function() {deepEqual( Stem("castruci"), "castruc");});
test("casuale -> casual", function() {deepEqual( Stem("casuale"), "casual");});
test("casualmente -> casual", function() {deepEqual( Stem("casualmente"), "casual");});
test("casucce -> casucc", function() {deepEqual( Stem("casucce"), "casucc");});
test("casuccia -> casucc", function() {deepEqual( Stem("casuccia"), "casucc");});
test("casupole -> casupol", function() {deepEqual( Stem("casupole"), "casupol");});
test("cat -> cat", function() {deepEqual( Stem("cat"), "cat");});
test("cataldo -> catald", function() {deepEqual( Stem("cataldo"), "catald");});
test("catalina -> catalin", function() {deepEqual( Stem("catalina"), "catalin");});
test("catalogare -> catalog", function() {deepEqual( Stem("catalogare"), "catalog");});
test("catamarani -> catamaran", function() {deepEqual( Stem("catamarani"), "catamaran");});
test("catanese -> catanes", function() {deepEqual( Stem("catanese"), "catanes");});
test("catania -> catan", function() {deepEqual( Stem("catania"), "catan");});
test("catanzaresi -> catanzares", function() {deepEqual( Stem("catanzaresi"), "catanzares");});
test("catanzaro -> catanzar", function() {deepEqual( Stem("catanzaro"), "catanzar");});
test("catarinussi -> catarinuss", function() {deepEqual( Stem("catarinussi"), "catarinuss");});
test("catastrofe -> catastrof", function() {deepEqual( Stem("catastrofe"), "catastrof");});
test("categoria -> categor", function() {deepEqual( Stem("categoria"), "categor");});
test("categoricamente -> categor", function() {deepEqual( Stem("categoricamente"), "categor");});
test("categorico -> categor", function() {deepEqual( Stem("categorico"), "categor");});
test("categorie -> categor", function() {deepEqual( Stem("categorie"), "categor");});
test("catelli -> catell", function() {deepEqual( Stem("catelli"), "catell");});
test("catena -> caten", function() {deepEqual( Stem("catena"), "caten");});
test("catenacciara -> catenacciar", function() {deepEqual( Stem("catenacciara"), "catenacciar");});
test("catenaccio -> catenacc", function() {deepEqual( Stem("catenaccio"), "catenacc");});
test("catene -> caten", function() {deepEqual( Stem("catene"), "caten");});
test("caterina -> caterin", function() {deepEqual( Stem("caterina"), "caterin");});
test("catherine -> catherin", function() {deepEqual( Stem("catherine"), "catherin");});
test("catholic -> catholic", function() {deepEqual( Stem("catholic"), "catholic");});
test("catilina -> catilin", function() {deepEqual( Stem("catilina"), "catilin");});
test("cattaneo -> cattane", function() {deepEqual( Stem("cattaneo"), "cattane");});
test("cattedra -> cattedr", function() {deepEqual( Stem("cattedra"), "cattedr");});
test("cattedrale -> cattedral", function() {deepEqual( Stem("cattedrale"), "cattedral");});
test("cattedre -> cattedr", function() {deepEqual( Stem("cattedre"), "cattedr");});
test("cattiva -> catt", function() {deepEqual( Stem("cattiva"), "catt");});
test("cattivacci -> cattivacc", function() {deepEqual( Stem("cattivacci"), "cattivacc");});
test("cattivarvi -> cattiv", function() {deepEqual( Stem("cattivarvi"), "cattiv");});
test("cattive -> cattiv", function() {deepEqual( Stem("cattive"), "cattiv");});
test("cattivello -> cattivell", function() {deepEqual( Stem("cattivello"), "cattivell");});
test("cattiveria -> cattiver", function() {deepEqual( Stem("cattiveria"), "cattiver");});
test("cattiverie -> cattiver", function() {deepEqual( Stem("cattiverie"), "cattiver");});
test("cattivi -> catt", function() {deepEqual( Stem("cattivi"), "catt");});
test("cattività -> cattiv", function() {deepEqual( Stem("cattività"), "cattiv");});
test("cattivo -> catt", function() {deepEqual( Stem("cattivo"), "catt");});
test("cattolica -> cattol", function() {deepEqual( Stem("cattolica"), "cattol");});
test("cattolicesimo -> cattolicesim", function() {deepEqual( Stem("cattolicesimo"), "cattolicesim");});
test("cattolici -> cattol", function() {deepEqual( Stem("cattolici"), "cattol");});
test("cattolico -> cattol", function() {deepEqual( Stem("cattolico"), "cattol");});
test("cattura -> cattur", function() {deepEqual( Stem("cattura"), "cattur");});
test("catturaccia -> catturacc", function() {deepEqual( Stem("catturaccia"), "catturacc");});
test("catturando -> cattur", function() {deepEqual( Stem("catturando"), "cattur");});
test("catturare -> cattur", function() {deepEqual( Stem("catturare"), "cattur");});
test("catturati -> cattur", function() {deepEqual( Stem("catturati"), "cattur");});
test("catturato -> cattur", function() {deepEqual( Stem("catturato"), "cattur");});
test("catture -> cattur", function() {deepEqual( Stem("catture"), "cattur");});
test("catwoman -> catwoman", function() {deepEqual( Stem("catwoman"), "catwoman");});
test("cauare -> cau", function() {deepEqual( Stem("cauare"), "cau");});
test("caucasica -> caucas", function() {deepEqual( Stem("caucasica"), "caucas");});
test("caucaso -> caucas", function() {deepEqual( Stem("caucaso"), "caucas");});
test("causa -> caus", function() {deepEqual( Stem("causa"), "caus");});
test("causale -> causal", function() {deepEqual( Stem("causale"), "causal");});
test("causando -> caus", function() {deepEqual( Stem("causando"), "caus");});
test("causare -> caus", function() {deepEqual( Stem("causare"), "caus");});
test("causarne -> caus", function() {deepEqual( Stem("causarne"), "caus");});
test("causata -> caus", function() {deepEqual( Stem("causata"), "caus");});
test("causate -> caus", function() {deepEqual( Stem("causate"), "caus");});
test("causato -> caus", function() {deepEqual( Stem("causato"), "caus");});
test("cause -> caus", function() {deepEqual( Stem("cause"), "caus");});
test("cauta -> caut", function() {deepEqual( Stem("cauta"), "caut");});
test("cautela -> cautel", function() {deepEqual( Stem("cautela"), "cautel");});
test("cautelare -> cautel", function() {deepEqual( Stem("cautelare"), "cautel");});
test("cautelativamente -> cautel", function() {deepEqual( Stem("cautelativamente"), "cautel");});
test("cautele -> cautel", function() {deepEqual( Stem("cautele"), "cautel");});
test("cauto -> caut", function() {deepEqual( Stem("cauto"), "caut");});
test("cav -> cav", function() {deepEqual( Stem("cav"), "cav");});
test("cava -> cav", function() {deepEqual( Stem("cava"), "cav");});
test("cavadenti -> cavadent", function() {deepEqual( Stem("cavadenti"), "cavadent");});
test("cavagna -> cavagn", function() {deepEqual( Stem("cavagna"), "cavagn");});
test("cavalcanti -> cavalc", function() {deepEqual( Stem("cavalcanti"), "cavalc");});
test("cavalcatore -> cavalc", function() {deepEqual( Stem("cavalcatore"), "cavalc");});
test("cavalcatura -> cavalcatur", function() {deepEqual( Stem("cavalcatura"), "cavalcatur");});
test("cavalcature -> cavalcatur", function() {deepEqual( Stem("cavalcature"), "cavalcatur");});
test("cavalcava -> cavalc", function() {deepEqual( Stem("cavalcava"), "cavalc");});
test("cavalcavia -> cavalcav", function() {deepEqual( Stem("cavalcavia"), "cavalcav");});
test("cavalcioni -> cavalcion", function() {deepEqual( Stem("cavalcioni"), "cavalcion");});
test("cavalier -> cavalier", function() {deepEqual( Stem("cavalier"), "cavalier");});
test("cavaliere -> caval", function() {deepEqual( Stem("cavaliere"), "caval");});
test("cavalieri -> cavalier", function() {deepEqual( Stem("cavalieri"), "cavalier");});
test("cavallaccio -> cavallacc", function() {deepEqual( Stem("cavallaccio"), "cavallacc");});
test("cavalleresca -> cavalleresc", function() {deepEqual( Stem("cavalleresca"), "cavalleresc");});
test("cavallereschi -> cavalleresc", function() {deepEqual( Stem("cavallereschi"), "cavalleresc");});
test("cavalleria -> cavaller", function() {deepEqual( Stem("cavalleria"), "cavaller");});
test("cavalli -> cavall", function() {deepEqual( Stem("cavalli"), "cavall");});
test("cavallina -> cavallin", function() {deepEqual( Stem("cavallina"), "cavallin");});
test("cavallo -> cavall", function() {deepEqual( Stem("cavallo"), "cavall");});
test("cavalloni -> cavallon", function() {deepEqual( Stem("cavalloni"), "cavallon");});
test("cavando -> cav", function() {deepEqual( Stem("cavando"), "cav");});
test("cavar -> cav", function() {deepEqual( Stem("cavar"), "cav");});
test("cavare -> cav", function() {deepEqual( Stem("cavare"), "cav");});
test("cavarli -> cav", function() {deepEqual( Stem("cavarli"), "cav");});
test("cavarmi -> cav", function() {deepEqual( Stem("cavarmi"), "cav");});
test("cavarne -> cav", function() {deepEqual( Stem("cavarne"), "cav");});
test("cavarsene -> cav", function() {deepEqual( Stem("cavarsene"), "cav");});
test("cavarsi -> cav", function() {deepEqual( Stem("cavarsi"), "cav");});
test("cavarvi -> cav", function() {deepEqual( Stem("cavarvi"), "cav");});
test("cavata -> cav", function() {deepEqual( Stem("cavata"), "cav");});
test("cavatappi -> cavatapp", function() {deepEqual( Stem("cavatappi"), "cavatapp");});
test("cavate -> cav", function() {deepEqual( Stem("cavate"), "cav");});
test("cavaterra -> cavaterr", function() {deepEqual( Stem("cavaterra"), "cavaterr");});
test("cavatevi -> cavat", function() {deepEqual( Stem("cavatevi"), "cavat");});
test("cavatio -> cavat", function() {deepEqual( Stem("cavatio"), "cavat");});
test("cavato -> cav", function() {deepEqual( Stem("cavato"), "cav");});
test("cavatogli -> cavatogl", function() {deepEqual( Stem("cavatogli"), "cavatogl");});
test("caverebbe -> cav", function() {deepEqual( Stem("caverebbe"), "cav");});
test("cavereste -> cav", function() {deepEqual( Stem("cavereste"), "cav");});
test("caverne -> cav", function() {deepEqual( Stem("caverne"), "cav");});
test("caverzan -> caverzan", function() {deepEqual( Stem("caverzan"), "caverzan");});
test("cavi -> cav", function() {deepEqual( Stem("cavi"), "cav");});
test("cavicchio -> cavicc", function() {deepEqual( Stem("cavicchio"), "cavicc");});
test("caviglia -> cavigl", function() {deepEqual( Stem("caviglia"), "cavigl");});
test("cavo -> cav", function() {deepEqual( Stem("cavo"), "cav");});
test("cavò -> cav", function() {deepEqual( Stem("cavò"), "cav");});
test("cavolo -> cavol", function() {deepEqual( Stem("cavolo"), "cavol");});
test("cazin -> cazin", function() {deepEqual( Stem("cazin"), "cazin");});
test("cb -> cb", function() {deepEqual( Stem("cb"), "cb");});
test("cbm -> cbm", function() {deepEqual( Stem("cbm"), "cbm");});
test("cc -> cc", function() {deepEqual( Stem("cc"), "cc");});
test("ccb -> ccb", function() {deepEqual( Stem("ccb"), "ccb");});
test("ccd -> ccd", function() {deepEqual( Stem("ccd"), "ccd");});
test("cconcordata -> cconcord", function() {deepEqual( Stem("cconcordata"), "cconcord");});
test("cct -> cct", function() {deepEqual( Stem("cct"), "cct");});
test("cd -> cd", function() {deepEqual( Stem("cd"), "cd");});
test("cda -> cda", function() {deepEqual( Stem("cda"), "cda");});
test("cdc -> cdc", function() {deepEqual( Stem("cdc"), "cdc");});
test("cdi -> cdi", function() {deepEqual( Stem("cdi"), "cdi");});
test("cdr -> cdr", function() {deepEqual( Stem("cdr"), "cdr");});
test("cdu -> cdu", function() {deepEqual( Stem("cdu"), "cdu");});
test("ce -> ce", function() {deepEqual( Stem("ce"), "ce");});
test("ceca -> cec", function() {deepEqual( Stem("ceca"), "cec");});
test("cecchi -> cecc", function() {deepEqual( Stem("cecchi"), "cecc");});
test("cecchini -> cecchin", function() {deepEqual( Stem("cecchini"), "cecchin");});
test("cecena -> cecen", function() {deepEqual( Stem("cecena"), "cecen");});
test("cecene -> cecen", function() {deepEqual( Stem("cecene"), "cecen");});
test("ceceni -> cecen", function() {deepEqual( Stem("ceceni"), "cecen");});
test("cecenia -> cecen", function() {deepEqual( Stem("cecenia"), "cecen");});
test("ceceno -> cecen", function() {deepEqual( Stem("ceceno"), "cecen");});
test("cecere -> cec", function() {deepEqual( Stem("cecere"), "cec");});
test("ceche -> cech", function() {deepEqual( Stem("ceche"), "cech");});
test("cechi -> cech", function() {deepEqual( Stem("cechi"), "cech");});
test("cecilia -> cecil", function() {deepEqual( Stem("cecilia"), "cecil");});
test("cecina -> cecin", function() {deepEqual( Stem("cecina"), "cecin");});
test("cecino -> cecin", function() {deepEqual( Stem("cecino"), "cecin");});
test("cecità -> cecit", function() {deepEqual( Stem("cecità"), "cecit");});
test("ceco -> cec", function() {deepEqual( Stem("ceco"), "cec");});
test("cedant -> cedant", function() {deepEqual( Stem("cedant"), "cedant");});
test("cede -> ced", function() {deepEqual( Stem("cede"), "ced");});
test("cedé -> ced", function() {deepEqual( Stem("cedé"), "ced");});
test("cedendo -> ced", function() {deepEqual( Stem("cedendo"), "ced");});
test("ceder -> ceder", function() {deepEqual( Stem("ceder"), "ceder");});
test("cedere -> ced", function() {deepEqual( Stem("cedere"), "ced");});
test("cederlo -> ced", function() {deepEqual( Stem("cederlo"), "ced");});
test("cedette -> cedett", function() {deepEqual( Stem("cedette"), "cedett");});
test("cedimento -> ced", function() {deepEqual( Stem("cedimento"), "ced");});
test("cedola -> cedol", function() {deepEqual( Stem("cedola"), "cedol");});
test("cedono -> ced", function() {deepEqual( Stem("cedono"), "ced");});
test("ceduto -> ced", function() {deepEqual( Stem("ceduto"), "ced");});
test("cefa -> cef", function() {deepEqual( Stem("cefa"), "cef");});
test("ceffo -> ceff", function() {deepEqual( Stem("ceffo"), "ceff");});
test("cei -> cei", function() {deepEqual( Stem("cei"), "cei");});
test("ceko -> cek", function() {deepEqual( Stem("ceko"), "cek");});
test("celate -> cel", function() {deepEqual( Stem("celate"), "cel");});
test("celeberrima -> celeberrim", function() {deepEqual( Stem("celeberrima"), "celeberrim");});
test("celeberrimo -> celeberrim", function() {deepEqual( Stem("celeberrimo"), "celeberrim");});
test("celebra -> celebr", function() {deepEqual( Stem("celebra"), "celebr");});
test("celebrano -> celebr", function() {deepEqual( Stem("celebrano"), "celebr");});
test("celebranti -> celebr", function() {deepEqual( Stem("celebranti"), "celebr");});
test("celebrar -> celebr", function() {deepEqual( Stem("celebrar"), "celebr");});
test("celebrare -> celebr", function() {deepEqual( Stem("celebrare"), "celebr");});
test("celebrata -> celebr", function() {deepEqual( Stem("celebrata"), "celebr");});
test("celebrato -> celebr", function() {deepEqual( Stem("celebrato"), "celebr");});
test("celebrazione -> celebr", function() {deepEqual( Stem("celebrazione"), "celebr");});
test("celebrazioni -> celebr", function() {deepEqual( Stem("celebrazioni"), "celebr");});
test("celebre -> celebr", function() {deepEqual( Stem("celebre"), "celebr");});
test("celebrerà -> celebr", function() {deepEqual( Stem("celebrerà"), "celebr");});
test("celebreranno -> celebr", function() {deepEqual( Stem("celebreranno"), "celebr");});
test("celebri -> celebr", function() {deepEqual( Stem("celebri"), "celebr");});
test("celebrità -> celebr", function() {deepEqual( Stem("celebrità"), "celebr");});
test("celeri -> celer", function() {deepEqual( Stem("celeri"), "celer");});
test("celerità -> celer", function() {deepEqual( Stem("celerità"), "celer");});
test("celesti -> celest", function() {deepEqual( Stem("celesti"), "celest");});
test("celia -> cel", function() {deepEqual( Stem("celia"), "cel");});
test("celibe -> celib", function() {deepEqual( Stem("celibe"), "celib");});
test("celica -> celic", function() {deepEqual( Stem("celica"), "celic");});
test("celie -> cel", function() {deepEqual( Stem("celie"), "cel");});
test("cella -> cell", function() {deepEqual( Stem("cella"), "cell");});
test("cellette -> cellett", function() {deepEqual( Stem("cellette"), "cellett");});
test("cellulare -> cellul", function() {deepEqual( Stem("cellulare"), "cellul");});
test("cellulari -> cellular", function() {deepEqual( Stem("cellulari"), "cellular");});
test("celtic -> celtic", function() {deepEqual( Stem("celtic"), "celtic");});
test("cem -> cem", function() {deepEqual( Stem("cem"), "cem");});
test("cement -> cement", function() {deepEqual( Stem("cement"), "cement");});
test("cementeria -> cementer", function() {deepEqual( Stem("cementeria"), "cementer");});
test("cementerie -> cementer", function() {deepEqual( Stem("cementerie"), "cementer");});
test("cementi -> cement", function() {deepEqual( Stem("cementi"), "cement");});
test("cementir -> cement", function() {deepEqual( Stem("cementir"), "cement");});
test("cena -> cen", function() {deepEqual( Stem("cena"), "cen");});
test("cenato -> cen", function() {deepEqual( Stem("cenato"), "cen");});
test("cenci -> cenc", function() {deepEqual( Stem("cenci"), "cenc");});
test("cencio -> cenc", function() {deepEqual( Stem("cencio"), "cenc");});
test("cenciose -> cencios", function() {deepEqual( Stem("cenciose"), "cencios");});
test("cencioso -> cencios", function() {deepEqual( Stem("cencioso"), "cencios");});
test("cene -> cen", function() {deepEqual( Stem("cene"), "cen");});
test("cenere -> cen", function() {deepEqual( Stem("cenere"), "cen");});
test("ceneri -> cener", function() {deepEqual( Stem("ceneri"), "cener");});
test("cenerognola -> cenerognol", function() {deepEqual( Stem("cenerognola"), "cenerognol");});
test("cenni -> cenn", function() {deepEqual( Stem("cenni"), "cenn");});
test("cenno -> cenn", function() {deepEqual( Stem("cenno"), "cenn");});
test("cenò -> cen", function() {deepEqual( Stem("cenò"), "cen");});
test("censis -> censis", function() {deepEqual( Stem("censis"), "censis");});
test("censore -> censor", function() {deepEqual( Stem("censore"), "censor");});
test("censui -> censu", function() {deepEqual( Stem("censui"), "censu");});
test("censura -> censur", function() {deepEqual( Stem("censura"), "censur");});
test("censurando -> censur", function() {deepEqual( Stem("censurando"), "censur");});
test("censure -> censur", function() {deepEqual( Stem("censure"), "censur");});
test("cent -> cent", function() {deepEqual( Stem("cent"), "cent");});
test("centenari -> centenar", function() {deepEqual( Stem("centenari"), "centenar");});
test("centenario -> centenar", function() {deepEqual( Stem("centenario"), "centenar");});
test("center -> center", function() {deepEqual( Stem("center"), "center");});
test("centese -> centes", function() {deepEqual( Stem("centese"), "centes");});
test("centesimi -> centesim", function() {deepEqual( Stem("centesimi"), "centesim");});
test("centesimo -> centesim", function() {deepEqual( Stem("centesimo"), "centesim");});
test("centi -> cent", function() {deepEqual( Stem("centi"), "cent");});
test("centimetri -> centimetr", function() {deepEqual( Stem("centimetri"), "centimetr");});
test("centimetro -> centimetr", function() {deepEqual( Stem("centimetro"), "centimetr");});
test("centinaia -> centinai", function() {deepEqual( Stem("centinaia"), "centinai");});
test("centinaio -> centinai", function() {deepEqual( Stem("centinaio"), "centinai");});
test("cento -> cent", function() {deepEqual( Stem("cento"), "cent");});
test("centocinquemila -> centocinquemil", function() {deepEqual( Stem("centocinquemila"), "centocinquemil");});
test("centofanti -> centof", function() {deepEqual( Stem("centofanti"), "centof");});
test("centomila -> centomil", function() {deepEqual( Stem("centomila"), "centomil");});
test("central -> central", function() {deepEqual( Stem("central"), "central");});
test("centrale -> central", function() {deepEqual( Stem("centrale"), "central");});
test("centrali -> central", function() {deepEqual( Stem("centrali"), "central");});
test("centralismo -> central", function() {deepEqual( Stem("centralismo"), "central");});
test("centralista -> central", function() {deepEqual( Stem("centralista"), "central");});
test("centralità -> central", function() {deepEqual( Stem("centralità"), "central");});
test("centralizzata -> centralizz", function() {deepEqual( Stem("centralizzata"), "centralizz");});
test("centralizzate -> centralizz", function() {deepEqual( Stem("centralizzate"), "centralizz");});
test("centralizzati -> centralizz", function() {deepEqual( Stem("centralizzati"), "centralizz");});
test("centralizzato -> centralizz", function() {deepEqual( Stem("centralizzato"), "centralizz");});
test("centralizzazione -> centralizz", function() {deepEqual( Stem("centralizzazione"), "centralizz");});
test("centrata -> centr", function() {deepEqual( Stem("centrata"), "centr");});
test("centrato -> centr", function() {deepEqual( Stem("centrato"), "centr");});
test("centravanti -> centrav", function() {deepEqual( Stem("centravanti"), "centrav");});
test("centre -> centr", function() {deepEqual( Stem("centre"), "centr");});
test("centreremo -> centr", function() {deepEqual( Stem("centreremo"), "centr");});
test("centri -> centr", function() {deepEqual( Stem("centri"), "centr");});
test("centrista -> centrist", function() {deepEqual( Stem("centrista"), "centrist");});
test("centro -> centr", function() {deepEqual( Stem("centro"), "centr");});
test("centrò -> centr", function() {deepEqual( Stem("centrò"), "centr");});
test("centrob -> centrob", function() {deepEqual( Stem("centrob"), "centrob");});
test("centrocampista -> centrocamp", function() {deepEqual( Stem("centrocampista"), "centrocamp");});
test("centrocampo -> centrocamp", function() {deepEqual( Stem("centrocampo"), "centrocamp");});
test("centrodestra -> centrodestr", function() {deepEqual( Stem("centrodestra"), "centrodestr");});
test("centrosinistra -> centrosinistr", function() {deepEqual( Stem("centrosinistra"), "centrosinistr");});
test("cents -> cents", function() {deepEqual( Stem("cents"), "cents");});
test("cera -> cer", function() {deepEqual( Stem("cera"), "cer");});
test("ceramiche -> ceram", function() {deepEqual( Stem("ceramiche"), "ceram");});
test("ceramicola -> ceramicol", function() {deepEqual( Stem("ceramicola"), "ceramicol");});
test("cerbone -> cerbon", function() {deepEqual( Stem("cerbone"), "cerbon");});
test("cerbottane -> cerbottan", function() {deepEqual( Stem("cerbottane"), "cerbottan");});
test("cerca -> cerc", function() {deepEqual( Stem("cerca"), "cerc");});
test("cercala -> cercal", function() {deepEqual( Stem("cercala"), "cercal");});
test("cercan -> cercan", function() {deepEqual( Stem("cercan"), "cercan");});
test("cercando -> cerc", function() {deepEqual( Stem("cercando"), "cerc");});
test("cercano -> cerc", function() {deepEqual( Stem("cercano"), "cerc");});
test("cercar -> cerc", function() {deepEqual( Stem("cercar"), "cerc");});
test("cercare -> cerc", function() {deepEqual( Stem("cercare"), "cerc");});
test("cercargli -> cerc", function() {deepEqual( Stem("cercargli"), "cerc");});
test("cercarla -> cerc", function() {deepEqual( Stem("cercarla"), "cerc");});
test("cercarlo -> cerc", function() {deepEqual( Stem("cercarlo"), "cerc");});
test("cercarmi -> cerc", function() {deepEqual( Stem("cercarmi"), "cerc");});
test("cercarne -> cerc", function() {deepEqual( Stem("cercarne"), "cerc");});
test("cercartela -> cerc", function() {deepEqual( Stem("cercartela"), "cerc");});
test("cercarvi -> cerc", function() {deepEqual( Stem("cercarvi"), "cerc");});
test("cercasse -> cerc", function() {deepEqual( Stem("cercasse"), "cerc");});
test("cercassi -> cerc", function() {deepEqual( Stem("cercassi"), "cerc");});
test("cercata -> cerc", function() {deepEqual( Stem("cercata"), "cerc");});
test("cercate -> cerc", function() {deepEqual( Stem("cercate"), "cerc");});
test("cercatele -> cercatel", function() {deepEqual( Stem("cercatele"), "cercatel");});
test("cercato -> cerc", function() {deepEqual( Stem("cercato"), "cerc");});
test("cercatore -> cercator", function() {deepEqual( Stem("cercatore"), "cercator");});
test("cercava -> cerc", function() {deepEqual( Stem("cercava"), "cerc");});
test("cercavan -> cercavan", function() {deepEqual( Stem("cercavan"), "cercavan");});
test("cercavano -> cerc", function() {deepEqual( Stem("cercavano"), "cerc");});
test("cercavi -> cerc", function() {deepEqual( Stem("cercavi"), "cerc");});
test("cercavo -> cerc", function() {deepEqual( Stem("cercavo"), "cerc");});
test("cercherà -> cerc", function() {deepEqual( Stem("cercherà"), "cerc");});
test("cercheranno -> cerc", function() {deepEqual( Stem("cercheranno"), "cerc");});
test("cercherebbe -> cerc", function() {deepEqual( Stem("cercherebbe"), "cerc");});
test("cercherò -> cerc", function() {deepEqual( Stem("cercherò"), "cerc");});
test("cerchi -> cerc", function() {deepEqual( Stem("cerchi"), "cerc");});
test("cerchiamo -> cerc", function() {deepEqual( Stem("cerchiamo"), "cerc");});
test("cerchiata -> cerc", function() {deepEqual( Stem("cerchiata"), "cerc");});
test("cerchio -> cerc", function() {deepEqual( Stem("cerchio"), "cerc");});
test("cerciello -> cerciell", function() {deepEqual( Stem("cerciello"), "cerciell");});
test("cercielo -> cerciel", function() {deepEqual( Stem("cercielo"), "cerciel");});
test("cercle -> cercl", function() {deepEqual( Stem("cercle"), "cercl");});
test("cerco -> cerc", function() {deepEqual( Stem("cerco"), "cerc");});
test("cercò -> cerc", function() {deepEqual( Stem("cercò"), "cerc");});
test("cercolavoro -> cercolavor", function() {deepEqual( Stem("cercolavoro"), "cercolavor");});
test("cereali -> cereal", function() {deepEqual( Stem("cereali"), "cereal");});
test("cerealicoli -> cerealicol", function() {deepEqual( Stem("cerealicoli"), "cerealicol");});
test("ceredi -> cered", function() {deepEqual( Stem("ceredi"), "cered");});
test("ceri -> cer", function() {deepEqual( Stem("ceri"), "cer");});
test("cerimonia -> cerimon", function() {deepEqual( Stem("cerimonia"), "cerimon");});
test("cerimoniale -> cerimonial", function() {deepEqual( Stem("cerimoniale"), "cerimonial");});
test("cerimonie -> cerimon", function() {deepEqual( Stem("cerimonie"), "cerimon");});
test("cerimoniosa -> cerimon", function() {deepEqual( Stem("cerimoniosa"), "cerimon");});
test("cerimonioso -> cerimon", function() {deepEqual( Stem("cerimonioso"), "cerimon");});
test("cerioli -> ceriol", function() {deepEqual( Stem("cerioli"), "ceriol");});
test("cernebantur -> cernebantur", function() {deepEqual( Stem("cernebantur"), "cernebantur");});
test("cerniere -> cern", function() {deepEqual( Stem("cerniere"), "cern");});
test("cernobbio -> cernobb", function() {deepEqual( Stem("cernobbio"), "cernobb");});
test("cernomyrdin -> cernomyrdin", function() {deepEqual( Stem("cernomyrdin"), "cernomyrdin");});
test("cernoriecie -> cernoriec", function() {deepEqual( Stem("cernoriecie"), "cernoriec");});
test("cernusco -> cernusc", function() {deepEqual( Stem("cernusco"), "cernusc");});
test("ceronè -> ceron", function() {deepEqual( Stem("ceronè"), "ceron");});
test("ceroni -> ceron", function() {deepEqual( Stem("ceroni"), "ceron");});
test("cerri -> cerr", function() {deepEqual( Stem("cerri"), "cerr");});
test("cert -> cert", function() {deepEqual( Stem("cert"), "cert");});
test("certa -> cert", function() {deepEqual( Stem("certa"), "cert");});
test("certà -> cert", function() {deepEqual( Stem("certà"), "cert");});
test("certamente -> cert", function() {deepEqual( Stem("certamente"), "cert");});
test("certe -> cert", function() {deepEqual( Stem("certe"), "cert");});
test("certezza -> certezz", function() {deepEqual( Stem("certezza"), "certezz");});
test("certezze -> certezz", function() {deepEqual( Stem("certezze"), "certezz");});
test("certi -> cert", function() {deepEqual( Stem("certi"), "cert");});
test("certificato -> certific", function() {deepEqual( Stem("certificato"), "certific");});
test("certificazione -> certif", function() {deepEqual( Stem("certificazione"), "certif");});
test("certissimamente -> certissim", function() {deepEqual( Stem("certissimamente"), "certissim");});
test("certiusque -> certiusqu", function() {deepEqual( Stem("certiusque"), "certiusqu");});
test("certo -> cert", function() {deepEqual( Stem("certo"), "cert");});
test("certuni -> certun", function() {deepEqual( Stem("certuni"), "certun");});
test("ceruleo -> cerule", function() {deepEqual( Stem("ceruleo"), "cerule");});
test("ceruzzi -> ceruzz", function() {deepEqual( Stem("ceruzzi"), "ceruzz");});
test("cervellacci -> cervellacc", function() {deepEqual( Stem("cervellacci"), "cervellacc");});
test("cervelli -> cervell", function() {deepEqual( Stem("cervelli"), "cervell");});
test("cervellino -> cervellin", function() {deepEqual( Stem("cervellino"), "cervellin");});
test("cervello -> cervell", function() {deepEqual( Stem("cervello"), "cervell");});
test("cervellò -> cervell", function() {deepEqual( Stem("cervellò"), "cervell");});
test("cervone -> cervon", function() {deepEqual( Stem("cervone"), "cervon");});
test("cerziorato -> cerzior", function() {deepEqual( Stem("cerziorato"), "cerzior");});
test("cesalpino -> cesalpin", function() {deepEqual( Stem("cesalpino"), "cesalpin");});
test("cesar -> ces", function() {deepEqual( Stem("cesar"), "ces");});
test("cesare -> ces", function() {deepEqual( Stem("cesare"), "ces");});
test("cesari -> cesar", function() {deepEqual( Stem("cesari"), "cesar");});
test("cesen -> cesen", function() {deepEqual( Stem("cesen"), "cesen");});
test("cesena -> cesen", function() {deepEqual( Stem("cesena"), "cesen");});
test("cespugli -> cespugl", function() {deepEqual( Stem("cespugli"), "cespugl");});
test("cespuglio -> cespugl", function() {deepEqual( Stem("cespuglio"), "cespugl");});
test("cessa -> cess", function() {deepEqual( Stem("cessa"), "cess");});
test("cessan -> cessan", function() {deepEqual( Stem("cessan"), "cessan");});
test("cessar -> cess", function() {deepEqual( Stem("cessar"), "cess");});
test("cessare -> cess", function() {deepEqual( Stem("cessare"), "cess");});
test("cessaron -> cessaron", function() {deepEqual( Stem("cessaron"), "cessaron");});
test("cessarono -> cess", function() {deepEqual( Stem("cessarono"), "cess");});
test("cessasse -> cess", function() {deepEqual( Stem("cessasse"), "cess");});
test("cessata -> cess", function() {deepEqual( Stem("cessata"), "cess");});
test("cessate -> cess", function() {deepEqual( Stem("cessate"), "cess");});
test("cessati -> cess", function() {deepEqual( Stem("cessati"), "cess");});
test("cessato -> cess", function() {deepEqual( Stem("cessato"), "cess");});
test("cessava -> cess", function() {deepEqual( Stem("cessava"), "cess");});
test("cessavano -> cess", function() {deepEqual( Stem("cessavano"), "cess");});
test("cessazione -> cessazion", function() {deepEqual( Stem("cessazione"), "cessazion");});
test("cesserebbe -> cess", function() {deepEqual( Stem("cesserebbe"), "cess");});
test("cessione -> cession", function() {deepEqual( Stem("cessione"), "cession");});
test("cessò -> cess", function() {deepEqual( Stem("cessò"), "cess");});
test("cetacei -> cetace", function() {deepEqual( Stem("cetacei"), "cetace");});
test("ceteris -> ceteris", function() {deepEqual( Stem("ceteris"), "ceteris");});
test("ceti -> cet", function() {deepEqual( Stem("ceti"), "cet");});
test("ceto -> cet", function() {deepEqual( Stem("ceto"), "cet");});
test("cfi -> cfi", function() {deepEqual( Stem("cfi"), "cfi");});
test("cgia -> cgi", function() {deepEqual( Stem("cgia"), "cgi");});
test("cgie -> cgi", function() {deepEqual( Stem("cgie"), "cgi");});
test("cgil -> cgil", function() {deepEqual( Stem("cgil"), "cgil");});
test("ch -> ch", function() {deepEqual( Stem("ch"), "ch");});
test("cha -> cha", function() {deepEqual( Stem("cha"), "cha");});
test("challenge -> challeng", function() {deepEqual( Stem("challenge"), "challeng");});
test("chamot -> chamot", function() {deepEqual( Stem("chamot"), "chamot");});
test("champagne -> champagn", function() {deepEqual( Stem("champagne"), "champagn");});
test("chang -> chang", function() {deepEqual( Stem("chang"), "chang");});
test("chanony -> chanony", function() {deepEqual( Stem("chanony"), "chanony");});
test("chantal -> chantal", function() {deepEqual( Stem("chantal"), "chantal");});
test("charasiab -> charasiab", function() {deepEqual( Stem("charasiab"), "charasiab");});
test("chariello -> chariell", function() {deepEqual( Stem("chariello"), "chariell");});
test("charleroi -> charlero", function() {deepEqual( Stem("charleroi"), "charlero");});
test("charles -> charles", function() {deepEqual( Stem("charles"), "charles");});
test("charron -> charron", function() {deepEqual( Stem("charron"), "charron");});
test("che -> che", function() {deepEqual( Stem("che"), "che");});
test("ché -> chè", function() {deepEqual( Stem("ché"), "chè");});
test("chè -> chè", function() {deepEqual( Stem("chè"), "chè");});
test("check -> check", function() {deepEqual( Stem("check"), "check");});
test("cheltenham -> cheltenham", function() {deepEqual( Stem("cheltenham"), "cheltenham");});
test("cheriche -> cheric", function() {deepEqual( Stem("cheriche"), "cheric");});
test("chermisi -> chermis", function() {deepEqual( Stem("chermisi"), "chermis");});
test("cheta -> chet", function() {deepEqual( Stem("cheta"), "chet");});
test("chetamente -> chet", function() {deepEqual( Stem("chetamente"), "chet");});
test("chetare -> chet", function() {deepEqual( Stem("chetare"), "chet");});
test("chetaron -> chetaron", function() {deepEqual( Stem("chetaron"), "chetaron");});
test("chetatevi -> chetat", function() {deepEqual( Stem("chetatevi"), "chetat");});
test("chetava -> chet", function() {deepEqual( Stem("chetava"), "chet");});
test("cheti -> chet", function() {deepEqual( Stem("cheti"), "chet");});
test("cheto -> chet", function() {deepEqual( Stem("cheto"), "chet");});
test("chi -> chi", function() {deepEqual( Stem("chi"), "chi");});
test("chiacchere -> chiacc", function() {deepEqual( Stem("chiacchere"), "chiacc");});
test("chiacchierando -> chiacchier", function() {deepEqual( Stem("chiacchierando"), "chiacchier");});
test("chiacchierar -> chiacchier", function() {deepEqual( Stem("chiacchierar"), "chiacchier");});
test("chiacchierare -> chiacchier", function() {deepEqual( Stem("chiacchierare"), "chiacchier");});
test("chiacchierata -> chiacchier", function() {deepEqual( Stem("chiacchierata"), "chiacchier");});
test("chiacchierato -> chiacchier", function() {deepEqual( Stem("chiacchierato"), "chiacchier");});
test("chiacchiere -> chiacc", function() {deepEqual( Stem("chiacchiere"), "chiacc");});
test("chiacchierina -> chiacchierin", function() {deepEqual( Stem("chiacchierina"), "chiacchierin");});
test("chiacchierìo -> chiacchierì", function() {deepEqual( Stem("chiacchierìo"), "chiacchierì");});
test("chiacchierone -> chiacchieron", function() {deepEqual( Stem("chiacchierone"), "chiacchieron");});
test("chiama -> chiam", function() {deepEqual( Stem("chiama"), "chiam");});
test("chiamala -> chiamal", function() {deepEqual( Stem("chiamala"), "chiamal");});
test("chiaman -> chiaman", function() {deepEqual( Stem("chiaman"), "chiaman");});
test("chiamando -> chiam", function() {deepEqual( Stem("chiamando"), "chiam");});
test("chiamandoli -> chiam", function() {deepEqual( Stem("chiamandoli"), "chiam");});
test("chiamandolo -> chiam", function() {deepEqual( Stem("chiamandolo"), "chiam");});
test("chiamano -> chiam", function() {deepEqual( Stem("chiamano"), "chiam");});
test("chiamar -> chiam", function() {deepEqual( Stem("chiamar"), "chiam");});
test("chiamare -> chiam", function() {deepEqual( Stem("chiamare"), "chiam");});
test("chiamarli -> chiam", function() {deepEqual( Stem("chiamarli"), "chiam");});
test("chiamarlo -> chiam", function() {deepEqual( Stem("chiamarlo"), "chiam");});
test("chiamarsi -> chiam", function() {deepEqual( Stem("chiamarsi"), "chiam");});
test("chiamasse -> chiam", function() {deepEqual( Stem("chiamasse"), "chiam");});
test("chiamaste -> chiamast", function() {deepEqual( Stem("chiamaste"), "chiamast");});
test("chiamata -> chiam", function() {deepEqual( Stem("chiamata"), "chiam");});
test("chiamate -> chiam", function() {deepEqual( Stem("chiamate"), "chiam");});
test("chiamatemi -> chiamatem", function() {deepEqual( Stem("chiamatemi"), "chiamatem");});
test("chiamati -> chiam", function() {deepEqual( Stem("chiamati"), "chiam");});
test("chiamato -> chiam", function() {deepEqual( Stem("chiamato"), "chiam");});
test("chiamava -> chiam", function() {deepEqual( Stem("chiamava"), "chiam");});
test("chiamavan -> chiamavan", function() {deepEqual( Stem("chiamavan"), "chiamavan");});
test("chiamavano -> chiam", function() {deepEqual( Stem("chiamavano"), "chiam");});
test("chiamavo -> chiam", function() {deepEqual( Stem("chiamavo"), "chiam");});
test("chiamerà -> chiam", function() {deepEqual( Stem("chiamerà"), "chiam");});
test("chiamerò -> chiam", function() {deepEqual( Stem("chiamerò"), "chiam");});
test("chiami -> chiam", function() {deepEqual( Stem("chiami"), "chiam");});
test("chiamo -> chiam", function() {deepEqual( Stem("chiamo"), "chiam");});
test("chiamò -> chiam", function() {deepEqual( Stem("chiamò"), "chiam");});
test("chiana -> chian", function() {deepEqual( Stem("chiana"), "chian");});
test("chianciano -> chianc", function() {deepEqual( Stem("chianciano"), "chianc");});
test("chiapas -> chiapas", function() {deepEqual( Stem("chiapas"), "chiapas");});
test("chiapparlo -> chiapp", function() {deepEqual( Stem("chiapparlo"), "chiapp");});
test("chiappuzzo -> chiappuzz", function() {deepEqual( Stem("chiappuzzo"), "chiappuzz");});
test("chiara -> chiar", function() {deepEqual( Stem("chiara"), "chiar");});
test("chiaramente -> chiar", function() {deepEqual( Stem("chiaramente"), "chiar");});
test("chiare -> chi", function() {deepEqual( Stem("chiare"), "chi");});
test("chiarezza -> chiarezz", function() {deepEqual( Stem("chiarezza"), "chiarezz");});
test("chiari -> chiar", function() {deepEqual( Stem("chiari"), "chiar");});
test("chiariello -> chiariell", function() {deepEqual( Stem("chiariello"), "chiariell");});
test("chiarificazione -> chiarif", function() {deepEqual( Stem("chiarificazione"), "chiarif");});
test("chiarimenti -> chiar", function() {deepEqual( Stem("chiarimenti"), "chiar");});
test("chiarimento -> chiar", function() {deepEqual( Stem("chiarimento"), "chiar");});
test("chiarirci -> chiar", function() {deepEqual( Stem("chiarirci"), "chiar");});
test("chiarire -> chiar", function() {deepEqual( Stem("chiarire"), "chiar");});
test("chiarirsi -> chiar", function() {deepEqual( Stem("chiarirsi"), "chiar");});
test("chiarisce -> chiar", function() {deepEqual( Stem("chiarisce"), "chiar");});
test("chiariscono -> chiar", function() {deepEqual( Stem("chiariscono"), "chiar");});
test("chiarissimi -> chiarissim", function() {deepEqual( Stem("chiarissimi"), "chiarissim");});
test("chiarito -> chiar", function() {deepEqual( Stem("chiarito"), "chiar");});
test("chiaro -> chiar", function() {deepEqual( Stem("chiaro"), "chiar");});
test("chiarore -> chiaror", function() {deepEqual( Stem("chiarore"), "chiaror");});
test("chiasso -> chiass", function() {deepEqual( Stem("chiasso"), "chiass");});
test("chiatta -> chiatt", function() {deepEqual( Stem("chiatta"), "chiatt");});
test("chiavari -> chiavar", function() {deepEqual( Stem("chiavari"), "chiavar");});
test("chiave -> chiav", function() {deepEqual( Stem("chiave"), "chiav");});
test("chiavenna -> chiavenn", function() {deepEqual( Stem("chiavenna"), "chiavenn");});
test("chiavi -> chi", function() {deepEqual( Stem("chiavi"), "chi");});
test("chicago -> chicag", function() {deepEqual( Stem("chicago"), "chicag");});
test("chicche -> chicc", function() {deepEqual( Stem("chicche"), "chicc");});
test("chicchera -> chiccher", function() {deepEqual( Stem("chicchera"), "chiccher");});
test("chicchi -> chicc", function() {deepEqual( Stem("chicchi"), "chicc");});
test("chidambaram -> chidambaram", function() {deepEqual( Stem("chidambaram"), "chidambaram");});
test("chieda -> chied", function() {deepEqual( Stem("chieda"), "chied");});
test("chiede -> chied", function() {deepEqual( Stem("chiede"), "chied");});
test("chiedendo -> chied", function() {deepEqual( Stem("chiedendo"), "chied");});
test("chieder -> chieder", function() {deepEqual( Stem("chieder"), "chieder");});
test("chiederà -> chied", function() {deepEqual( Stem("chiederà"), "chied");});
test("chiederanno -> chied", function() {deepEqual( Stem("chiederanno"), "chied");});
test("chiedere -> chied", function() {deepEqual( Stem("chiedere"), "chied");});
test("chiederebbe -> chied", function() {deepEqual( Stem("chiederebbe"), "chied");});
test("chiederemo -> chied", function() {deepEqual( Stem("chiederemo"), "chied");});
test("chiedergli -> chied", function() {deepEqual( Stem("chiedergli"), "chied");});
test("chiederglielo -> chied", function() {deepEqual( Stem("chiederglielo"), "chied");});
test("chiedergliene -> chied", function() {deepEqual( Stem("chiedergliene"), "chied");});
test("chiederlo -> chied", function() {deepEqual( Stem("chiederlo"), "chied");});
test("chiederne -> chied", function() {deepEqual( Stem("chiederne"), "chied");});
test("chiederò -> chied", function() {deepEqual( Stem("chiederò"), "chied");});
test("chiederti -> chied", function() {deepEqual( Stem("chiederti"), "chied");});
test("chiedesse -> chiedess", function() {deepEqual( Stem("chiedesse"), "chiedess");});
test("chiedessero -> chied", function() {deepEqual( Stem("chiedessero"), "chied");});
test("chiedessimo -> chiedessim", function() {deepEqual( Stem("chiedessimo"), "chiedessim");});
test("chiedete -> chied", function() {deepEqual( Stem("chiedete"), "chied");});
test("chiedeva -> chied", function() {deepEqual( Stem("chiedeva"), "chied");});
test("chiedevan -> chiedevan", function() {deepEqual( Stem("chiedevan"), "chiedevan");});
test("chiedevano -> chied", function() {deepEqual( Stem("chiedevano"), "chied");});
test("chiedevate -> chied", function() {deepEqual( Stem("chiedevate"), "chied");});
test("chiedevi -> chied", function() {deepEqual( Stem("chiedevi"), "chied");});
test("chiedevo -> chied", function() {deepEqual( Stem("chiedevo"), "chied");});
test("chiedi -> chied", function() {deepEqual( Stem("chiedi"), "chied");});
test("chiediamo -> chied", function() {deepEqual( Stem("chiediamo"), "chied");});
test("chiediate -> chied", function() {deepEqual( Stem("chiediate"), "chied");});
test("chiedo -> chied", function() {deepEqual( Stem("chiedo"), "chied");});
test("chiedono -> chied", function() {deepEqual( Stem("chiedono"), "chied");});
test("chiesa -> chies", function() {deepEqual( Stem("chiesa"), "chies");});
test("chiese -> chies", function() {deepEqual( Stem("chiese"), "chies");});
test("chiesi -> chies", function() {deepEqual( Stem("chiesi"), "chies");});
test("chiesta -> chiest", function() {deepEqual( Stem("chiesta"), "chiest");});
test("chiesti -> chiest", function() {deepEqual( Stem("chiesti"), "chiest");});
test("chiesto -> chiest", function() {deepEqual( Stem("chiesto"), "chiest");});
test("chieti -> chiet", function() {deepEqual( Stem("chieti"), "chiet");});
test("chievo -> chi", function() {deepEqual( Stem("chievo"), "chi");});
test("chigi -> chig", function() {deepEqual( Stem("chigi"), "chig");});
test("chiklis -> chiklis", function() {deepEqual( Stem("chiklis"), "chiklis");});
test("chili -> chil", function() {deepEqual( Stem("chili"), "chil");});
test("chilo -> chil", function() {deepEqual( Stem("chilo"), "chil");});
test("chilogrammi -> chilogramm", function() {deepEqual( Stem("chilogrammi"), "chilogramm");});
test("chilometeri -> chilometer", function() {deepEqual( Stem("chilometeri"), "chilometer");});
test("chilometri -> chilometr", function() {deepEqual( Stem("chilometri"), "chilometr");});
test("chilometro -> chilometr", function() {deepEqual( Stem("chilometro"), "chilometr");});
test("chilowattora -> chilowattor", function() {deepEqual( Stem("chilowattora"), "chilowattor");});
test("chimenti -> chiment", function() {deepEqual( Stem("chimenti"), "chiment");});
test("chimera -> chimer", function() {deepEqual( Stem("chimera"), "chimer");});
test("chimiche -> chimic", function() {deepEqual( Stem("chimiche"), "chimic");});
test("chimico -> chimic", function() {deepEqual( Stem("chimico"), "chimic");});
test("chimienti -> chimient", function() {deepEqual( Stem("chimienti"), "chimient");});
test("china -> chin", function() {deepEqual( Stem("china"), "chin");});
test("chinando -> chin", function() {deepEqual( Stem("chinando"), "chin");});
test("chinandola -> chin", function() {deepEqual( Stem("chinandola"), "chin");});
test("chinandosi -> chin", function() {deepEqual( Stem("chinandosi"), "chin");});
test("chinare -> chin", function() {deepEqual( Stem("chinare"), "chin");});
test("chinarsi -> chin", function() {deepEqual( Stem("chinarsi"), "chin");});
test("chinàs -> chinàs", function() {deepEqual( Stem("chinàs"), "chinàs");});
test("chinata -> chin", function() {deepEqual( Stem("chinata"), "chin");});
test("chinati -> chin", function() {deepEqual( Stem("chinati"), "chin");});
test("chinato -> chin", function() {deepEqual( Stem("chinato"), "chin");});
test("chinava -> chin", function() {deepEqual( Stem("chinava"), "chin");});
test("chinavano -> chin", function() {deepEqual( Stem("chinavano"), "chin");});
test("chino -> chin", function() {deepEqual( Stem("chino"), "chin");});
test("chinò -> chin", function() {deepEqual( Stem("chinò"), "chin");});
test("chioccar -> chiocc", function() {deepEqual( Stem("chioccar"), "chiocc");});
test("chiocciola -> chiocciol", function() {deepEqual( Stem("chiocciola"), "chiocciol");});
test("chiodi -> chiod", function() {deepEqual( Stem("chiodi"), "chiod");});
test("chiodo -> chiod", function() {deepEqual( Stem("chiodo"), "chiod");});
test("chioma -> chiom", function() {deepEqual( Stem("chioma"), "chiom");});
test("chiomati -> chiom", function() {deepEqual( Stem("chiomati"), "chiom");});
test("chiome -> chiom", function() {deepEqual( Stem("chiome"), "chiom");});
test("chiostro -> chiostr", function() {deepEqual( Stem("chiostro"), "chiostr");});
test("chip -> chip", function() {deepEqual( Stem("chip"), "chip");});
test("chips -> chips", function() {deepEqual( Stem("chips"), "chips");});
test("chirurghi -> chirurg", function() {deepEqual( Stem("chirurghi"), "chirurg");});
test("chirurgia -> chirurg", function() {deepEqual( Stem("chirurgia"), "chirurg");});
test("chirurgico -> chirurg", function() {deepEqual( Stem("chirurgico"), "chirurg");});
test("chirurgo -> chirurg", function() {deepEqual( Stem("chirurgo"), "chirurg");});
test("chissà -> chiss", function() {deepEqual( Stem("chissà"), "chiss");});
test("chiti -> chit", function() {deepEqual( Stem("chiti"), "chit");});
test("chiude -> chiud", function() {deepEqual( Stem("chiude"), "chiud");});
test("chiudendo -> chiud", function() {deepEqual( Stem("chiudendo"), "chiud");});
test("chiudendosi -> chiud", function() {deepEqual( Stem("chiudendosi"), "chiud");});
test("chiuder -> chiuder", function() {deepEqual( Stem("chiuder"), "chiuder");});
test("chiuderanno -> chiud", function() {deepEqual( Stem("chiuderanno"), "chiud");});
test("chiudere -> chiud", function() {deepEqual( Stem("chiudere"), "chiud");});
test("chiuderle -> chiud", function() {deepEqual( Stem("chiuderle"), "chiud");});
test("chiuderlo -> chiud", function() {deepEqual( Stem("chiuderlo"), "chiud");});
test("chiudermi -> chiud", function() {deepEqual( Stem("chiudermi"), "chiud");});
test("chiuderne -> chiud", function() {deepEqual( Stem("chiuderne"), "chiud");});
test("chiudersi -> chiud", function() {deepEqual( Stem("chiudersi"), "chiud");});
test("chiudete -> chiud", function() {deepEqual( Stem("chiudete"), "chiud");});
test("chiudeva -> chiud", function() {deepEqual( Stem("chiudeva"), "chiud");});
test("chiudevano -> chiud", function() {deepEqual( Stem("chiudevano"), "chiud");});
test("chiudiamo -> chiud", function() {deepEqual( Stem("chiudiamo"), "chiud");});
test("chiudono -> chiud", function() {deepEqual( Stem("chiudono"), "chiud");});
test("chiunque -> chiunqu", function() {deepEqual( Stem("chiunque"), "chiunqu");});
test("chiusa -> chius", function() {deepEqual( Stem("chiusa"), "chius");});
test("chiuse -> chius", function() {deepEqual( Stem("chiuse"), "chius");});
test("chiusi -> chius", function() {deepEqual( Stem("chiusi"), "chius");});
test("chiuso -> chius", function() {deepEqual( Stem("chiuso"), "chius");});
test("chiusura -> chiusur", function() {deepEqual( Stem("chiusura"), "chiusur");});
test("chiusure -> chiusur", function() {deepEqual( Stem("chiusure"), "chiusur");});
test("cho -> cho", function() {deepEqual( Stem("cho"), "cho");});
test("choc -> choc", function() {deepEqual( Stem("choc"), "choc");});
test("choiaravalle -> choiaravall", function() {deepEqual( Stem("choiaravalle"), "choiaravall");});
test("chr -> chr", function() {deepEqual( Stem("chr"), "chr");});
test("chris -> chris", function() {deepEqual( Stem("chris"), "chris");});
test("christiane -> christian", function() {deepEqual( Stem("christiane"), "christian");});
test("christine -> christin", function() {deepEqual( Stem("christine"), "christin");});
test("christoph -> christoph", function() {deepEqual( Stem("christoph"), "christoph");});
test("christopher -> christopher", function() {deepEqual( Stem("christopher"), "christopher");});
test("chronistae -> chronista", function() {deepEqual( Stem("chronistae"), "chronista");});
test("chul -> chul", function() {deepEqual( Stem("chul"), "chul");});
test("ci -> ci", function() {deepEqual( Stem("ci"), "ci");});
test("cia -> cia", function() {deepEqual( Stem("cia"), "cia");});
test("ciabatta -> ciabatt", function() {deepEqual( Stem("ciabatta"), "ciabatt");});
test("ciak -> ciak", function() {deepEqual( Stem("ciak"), "ciak");});
test("cialtroni -> cialtron", function() {deepEqual( Stem("cialtroni"), "cialtron");});
test("ciambella -> ciambell", function() {deepEqual( Stem("ciambella"), "ciambell");});
test("ciampi -> ciamp", function() {deepEqual( Stem("ciampi"), "ciamp");});
test("ciampino -> ciampin", function() {deepEqual( Stem("ciampino"), "ciampin");});
test("ciance -> cianc", function() {deepEqual( Stem("ciance"), "cianc");});
test("ciao -> cia", function() {deepEqual( Stem("ciao"), "cia");});
test("ciarlano -> ciarl", function() {deepEqual( Stem("ciarlano"), "ciarl");});
test("ciarlare -> ciarl", function() {deepEqual( Stem("ciarlare"), "ciarl");});
test("ciarlato -> ciarl", function() {deepEqual( Stem("ciarlato"), "ciarl");});
test("ciarle -> ciarl", function() {deepEqual( Stem("ciarle"), "ciarl");});
test("ciarlerà -> ciarl", function() {deepEqual( Stem("ciarlerà"), "ciarl");});
test("ciarlerebbe -> ciarl", function() {deepEqual( Stem("ciarlerebbe"), "ciarl");});
test("ciarlone -> ciarlon", function() {deepEqual( Stem("ciarlone"), "ciarlon");});
test("ciarloni -> ciarlon", function() {deepEqual( Stem("ciarloni"), "ciarlon");});
test("ciarpume -> ciarpum", function() {deepEqual( Stem("ciarpume"), "ciarpum");});
test("ciascheduna -> ciaschedun", function() {deepEqual( Stem("ciascheduna"), "ciaschedun");});
test("ciascheduno -> ciaschedun", function() {deepEqual( Stem("ciascheduno"), "ciaschedun");});
test("ciascun -> ciascun", function() {deepEqual( Stem("ciascun"), "ciascun");});
test("ciascuna -> ciascun", function() {deepEqual( Stem("ciascuna"), "ciascun");});
test("ciascuno -> ciascun", function() {deepEqual( Stem("ciascuno"), "ciascun");});
test("cibi -> cib", function() {deepEqual( Stem("cibi"), "cib");});
test("cibiemme -> cibiemm", function() {deepEqual( Stem("cibiemme"), "cibiemm");});
test("cibo -> cib", function() {deepEqual( Stem("cibo"), "cib");});
test("cicalar -> cical", function() {deepEqual( Stem("cicalar"), "cical");});
test("cicalare -> cical", function() {deepEqual( Stem("cicalare"), "cical");});
test("cicalìo -> cicalì", function() {deepEqual( Stem("cicalìo"), "cicalì");});
test("cicalone -> cicalon", function() {deepEqual( Stem("cicalone"), "cicalon");});
test("cicaloni -> cicalon", function() {deepEqual( Stem("cicaloni"), "cicalon");});
test("ciccio -> cicc", function() {deepEqual( Stem("ciccio"), "cicc");});
test("ciclismo -> ciclism", function() {deepEqual( Stem("ciclismo"), "ciclism");});
test("ciclista -> ciclist", function() {deepEqual( Stem("ciclista"), "ciclist");});
test("ciclo -> cicl", function() {deepEqual( Stem("ciclo"), "cicl");});
test("ciclomotore -> ciclomotor", function() {deepEqual( Stem("ciclomotore"), "ciclomotor");});
test("cieca -> ciec", function() {deepEqual( Stem("cieca"), "ciec");});
test("cieco -> ciec", function() {deepEqual( Stem("cieco"), "ciec");});
test("ciel -> ciel", function() {deepEqual( Stem("ciel"), "ciel");});
test("cielo -> ciel", function() {deepEqual( Stem("cielo"), "ciel");});
test("cifra -> cifr", function() {deepEqual( Stem("cifra"), "cifr");});
test("cifre -> cifr", function() {deepEqual( Stem("cifre"), "cifr");});
test("ciga -> cig", function() {deepEqual( Stem("ciga"), "cig");});
test("cigli -> cigl", function() {deepEqual( Stem("cigli"), "cigl");});
test("ciglia -> cigl", function() {deepEqual( Stem("ciglia"), "cigl");});
test("ciglio -> cigl", function() {deepEqual( Stem("ciglio"), "cigl");});
test("ciglione -> ciglion", function() {deepEqual( Stem("ciglione"), "ciglion");});
test("ciglioni -> ciglion", function() {deepEqual( Stem("ciglioni"), "ciglion");});
test("cigna -> cign", function() {deepEqual( Stem("cigna"), "cign");});
test("cigne -> cign", function() {deepEqual( Stem("cigne"), "cign");});
test("cigolìo -> cigolì", function() {deepEqual( Stem("cigolìo"), "cigolì");});
test("cigs -> cigs", function() {deepEqual( Stem("cigs"), "cigs");});
test("cii -> cii", function() {deepEqual( Stem("cii"), "cii");});
test("cila -> cil", function() {deepEqual( Stem("cila"), "cil");});
test("cile -> cil", function() {deepEqual( Stem("cile"), "cil");});
test("cilena -> cilen", function() {deepEqual( Stem("cilena"), "cilen");});
test("ciliegi -> cilieg", function() {deepEqual( Stem("ciliegi"), "cilieg");});
test("cilizio -> ciliz", function() {deepEqual( Stem("cilizio"), "ciliz");});
test("cima -> cim", function() {deepEqual( Stem("cima"), "cim");});
test("cime -> cim", function() {deepEqual( Stem("cime"), "cim");});
test("cimento -> ciment", function() {deepEqual( Stem("cimento"), "ciment");});
test("ciments -> ciments", function() {deepEqual( Stem("ciments"), "ciments");});
test("cimitero -> cimiter", function() {deepEqual( Stem("cimitero"), "cimiter");});
test("cina -> cin", function() {deepEqual( Stem("cina"), "cin");});
test("cinema -> cinem", function() {deepEqual( Stem("cinema"), "cinem");});
test("cinematografica -> cinematograf", function() {deepEqual( Stem("cinematografica"), "cinematograf");});
test("cinematografico -> cinematograf", function() {deepEqual( Stem("cinematografico"), "cinematograf");});
test("cinematografo -> cinematograf", function() {deepEqual( Stem("cinematografo"), "cinematograf");});
test("cinematografò -> cinematograf", function() {deepEqual( Stem("cinematografò"), "cinematograf");});
test("cineoperatore -> cineoper", function() {deepEqual( Stem("cineoperatore"), "cineoper");});
test("cinese -> cines", function() {deepEqual( Stem("cinese"), "cines");});
test("cingeva -> cing", function() {deepEqual( Stem("cingeva"), "cing");});
test("cingoli -> cingol", function() {deepEqual( Stem("cingoli"), "cingol");});
test("cinicamente -> cinic", function() {deepEqual( Stem("cinicamente"), "cinic");});
test("cinofile -> cinofil", function() {deepEqual( Stem("cinofile"), "cinofil");});
test("cinquant -> cinquant", function() {deepEqual( Stem("cinquant"), "cinquant");});
test("cinquanta -> cinquant", function() {deepEqual( Stem("cinquanta"), "cinquant");});
test("cinquantamila -> cinquantamil", function() {deepEqual( Stem("cinquantamila"), "cinquantamil");});
test("cinquantatre -> cinquantatr", function() {deepEqual( Stem("cinquantatre"), "cinquantatr");});
test("cinquantenario -> cinquantenar", function() {deepEqual( Stem("cinquantenario"), "cinquantenar");});
test("cinquantesima -> cinquantesim", function() {deepEqual( Stem("cinquantesima"), "cinquantesim");});
test("cinquantesimo -> cinquantesim", function() {deepEqual( Stem("cinquantesimo"), "cinquantesim");});
test("cinque -> cinqu", function() {deepEqual( Stem("cinque"), "cinqu");});
test("cinquecento -> cinquecent", function() {deepEqual( Stem("cinquecento"), "cinquecent");});
test("cinquemila -> cinquemil", function() {deepEqual( Stem("cinquemila"), "cinquemil");});
test("cinse -> cins", function() {deepEqual( Stem("cinse"), "cins");});
test("cinta -> cint", function() {deepEqual( Stem("cinta"), "cint");});
test("cinti -> cint", function() {deepEqual( Stem("cinti"), "cint");});
test("cinto -> cint", function() {deepEqual( Stem("cinto"), "cint");});
test("cintola -> cintol", function() {deepEqual( Stem("cintola"), "cintol");});
test("cintura -> cintur", function() {deepEqual( Stem("cintura"), "cintur");});
test("ciò -> ciò", function() {deepEqual( Stem("ciò"), "ciò");});
test("cioccarelli -> cioccarell", function() {deepEqual( Stem("cioccarelli"), "cioccarell");});
test("ciocche -> ciocc", function() {deepEqual( Stem("ciocche"), "ciocc");});
test("ciocchetti -> ciocchett", function() {deepEqual( Stem("ciocchetti"), "ciocchett");});
test("ciocchettina -> ciocchettin", function() {deepEqual( Stem("ciocchettina"), "ciocchettin");});
test("cioccolata -> cioccol", function() {deepEqual( Stem("cioccolata"), "cioccol");});
test("cioccolato -> cioccol", function() {deepEqual( Stem("cioccolato"), "cioccol");});
test("cioè -> cio", function() {deepEqual( Stem("cioè"), "cio");});
test("cioffarelli -> cioffarell", function() {deepEqual( Stem("cioffarelli"), "cioffarell");});
test("ciondolar -> ciondol", function() {deepEqual( Stem("ciondolar"), "ciondol");});
test("ciondoloni -> ciondolon", function() {deepEqual( Stem("ciondoloni"), "ciondolon");});
test("ciotola -> ciotol", function() {deepEqual( Stem("ciotola"), "ciotol");});
test("ciotole -> ciotol", function() {deepEqual( Stem("ciotole"), "ciotol");});
test("ciottoli -> ciottol", function() {deepEqual( Stem("ciottoli"), "ciottol");});
test("ciottoloni -> ciottolon", function() {deepEqual( Stem("ciottoloni"), "ciottolon");});
test("cipe -> cip", function() {deepEqual( Stem("cipe"), "cip");});
test("cipiglio -> cipigl", function() {deepEqual( Stem("cipiglio"), "cipigl");});
test("cipro -> cipr", function() {deepEqual( Stem("cipro"), "cipr");});
test("cir -> cir", function() {deepEqual( Stem("cir"), "cir");});
test("circa -> circ", function() {deepEqual( Stem("circa"), "circ");});
test("circati -> circ", function() {deepEqual( Stem("circati"), "circ");});
test("circo -> circ", function() {deepEqual( Stem("circo"), "circ");});
test("circola -> circol", function() {deepEqual( Stem("circola"), "circol");});
test("circolare -> circol", function() {deepEqual( Stem("circolare"), "circol");});
test("circolari -> circolar", function() {deepEqual( Stem("circolari"), "circolar");});
test("circolata -> circol", function() {deepEqual( Stem("circolata"), "circol");});
test("circolate -> circol", function() {deepEqual( Stem("circolate"), "circol");});
test("circolazione -> circol", function() {deepEqual( Stem("circolazione"), "circol");});
test("circoli -> circol", function() {deepEqual( Stem("circoli"), "circol");});
test("circolo -> circol", function() {deepEqual( Stem("circolo"), "circol");});
test("circonda -> circond", function() {deepEqual( Stem("circonda"), "circond");});
test("circondare -> circond", function() {deepEqual( Stem("circondare"), "circond");});
test("circondata -> circond", function() {deepEqual( Stem("circondata"), "circond");});
test("circondati -> circond", function() {deepEqual( Stem("circondati"), "circond");});
test("circondato -> circond", function() {deepEqual( Stem("circondato"), "circond");});
test("circondava -> circond", function() {deepEqual( Stem("circondava"), "circond");});
test("circondavano -> circond", function() {deepEqual( Stem("circondavano"), "circond");});
test("circonvallazione -> circonvall", function() {deepEqual( Stem("circonvallazione"), "circonvall");});
test("circonvicini -> circonvicin", function() {deepEqual( Stem("circonvicini"), "circonvicin");});
test("circonvicino -> circonvicin", function() {deepEqual( Stem("circonvicino"), "circonvicin");});
test("circoscritta -> circoscritt", function() {deepEqual( Stem("circoscritta"), "circoscritt");});
test("circoscritte -> circoscritt", function() {deepEqual( Stem("circoscritte"), "circoscritt");});
test("circospetti -> circospett", function() {deepEqual( Stem("circospetti"), "circospett");});
test("circospezione -> circospezion", function() {deepEqual( Stem("circospezione"), "circospezion");});
test("circostante -> circost", function() {deepEqual( Stem("circostante"), "circost");});
test("circostanti -> circost", function() {deepEqual( Stem("circostanti"), "circost");});
test("circostanza -> circost", function() {deepEqual( Stem("circostanza"), "circost");});
test("circostanze -> circost", function() {deepEqual( Stem("circostanze"), "circost");});
test("circostanziare -> circostanz", function() {deepEqual( Stem("circostanziare"), "circostanz");});
test("circostanziati -> circostanz", function() {deepEqual( Stem("circostanziati"), "circostanz");});
test("circuiti -> circu", function() {deepEqual( Stem("circuiti"), "circu");});
test("circuito -> circu", function() {deepEqual( Stem("circuito"), "circu");});
test("ciriaco -> ciriac", function() {deepEqual( Stem("ciriaco"), "ciriac");});
test("cirio -> cir", function() {deepEqual( Stem("cirio"), "cir");});
test("cirm -> cirm", function() {deepEqual( Stem("cirm"), "cirm");});
test("ciro -> cir", function() {deepEqual( Stem("ciro"), "cir");});
test("ciruzzi -> ciruzz", function() {deepEqual( Stem("ciruzzi"), "ciruzz");});
test("cis -> cis", function() {deepEqual( Stem("cis"), "cis");});
test("cisal -> cisal", function() {deepEqual( Stem("cisal"), "cisal");});
test("cisalpino -> cisalpin", function() {deepEqual( Stem("cisalpino"), "cisalpin");});
test("cises -> cises", function() {deepEqual( Stem("cises"), "cises");});
test("cisgiordania -> cisgiordan", function() {deepEqual( Stem("cisgiordania"), "cisgiordan");});
test("cisl -> cisl", function() {deepEqual( Stem("cisl"), "cisl");});
test("cisnal -> cisnal", function() {deepEqual( Stem("cisnal"), "cisnal");});
test("cisp -> cisp", function() {deepEqual( Stem("cisp"), "cisp");});
test("cisterne -> cist", function() {deepEqual( Stem("cisterne"), "cist");});
test("cita -> cit", function() {deepEqual( Stem("cita"), "cit");});
test("citando -> cit", function() {deepEqual( Stem("citando"), "cit");});
test("citano -> cit", function() {deepEqual( Stem("citano"), "cit");});
test("citare -> cit", function() {deepEqual( Stem("citare"), "cit");});
test("citarne -> cit", function() {deepEqual( Stem("citarne"), "cit");});
test("citata -> cit", function() {deepEqual( Stem("citata"), "cit");});
test("citati -> cit", function() {deepEqual( Stem("citati"), "cit");});
test("citato -> cit", function() {deepEqual( Stem("citato"), "cit");});
test("citavano -> cit", function() {deepEqual( Stem("citavano"), "cit");});
test("citazioni -> citazion", function() {deepEqual( Stem("citazioni"), "citazion");});
test("citeremo -> cit", function() {deepEqual( Stem("citeremo"), "cit");});
test("citiamo -> cit", function() {deepEqual( Stem("citiamo"), "cit");});
test("cito -> cit", function() {deepEqual( Stem("cito"), "cit");});
test("citta -> citt", function() {deepEqual( Stem("citta"), "citt");});
test("città -> citt", function() {deepEqual( Stem("città"), "citt");});
test("cittadella -> cittadell", function() {deepEqual( Stem("cittadella"), "cittadell");});
test("cittàdi -> cittàd", function() {deepEqual( Stem("cittàdi"), "cittàd");});
test("cittadina -> cittadin", function() {deepEqual( Stem("cittadina"), "cittadin");});
test("cittadinanza -> cittadin", function() {deepEqual( Stem("cittadinanza"), "cittadin");});
test("cittadine -> cittadin", function() {deepEqual( Stem("cittadine"), "cittadin");});
test("cittadini -> cittadin", function() {deepEqual( Stem("cittadini"), "cittadin");});
test("cittadino -> cittadin", function() {deepEqual( Stem("cittadino"), "cittadin");});
test("cittadinò -> cittadin", function() {deepEqual( Stem("cittadinò"), "cittadin");});
test("citterio -> citter", function() {deepEqual( Stem("citterio"), "citter");});
test("city -> city", function() {deepEqual( Stem("city"), "city");});
test("ciudad -> ciudad", function() {deepEqual( Stem("ciudad"), "ciudad");});
test("ciuffetti -> ciuffett", function() {deepEqual( Stem("ciuffetti"), "ciuffett");});
test("ciuffetto -> ciuffett", function() {deepEqual( Stem("ciuffetto"), "ciuffett");});
test("ciuffi -> ciuff", function() {deepEqual( Stem("ciuffi"), "ciuff");});
test("ciuffo -> ciuff", function() {deepEqual( Stem("ciuffo"), "ciuff");});
test("ciurma -> ciurm", function() {deepEqual( Stem("ciurma"), "ciurm");});
test("cives -> cives", function() {deepEqual( Stem("cives"), "cives");});
test("civetta -> civett", function() {deepEqual( Stem("civetta"), "civett");});
test("civici -> civic", function() {deepEqual( Stem("civici"), "civic");});
test("civile -> civil", function() {deepEqual( Stem("civile"), "civil");});
test("civili -> civil", function() {deepEqual( Stem("civili"), "civil");});
test("civilità -> civil", function() {deepEqual( Stem("civilità"), "civil");});
test("civiltà -> civilt", function() {deepEqual( Stem("civiltà"), "civilt");});
test("civirani -> civiran", function() {deepEqual( Stem("civirani"), "civiran");});
test("civitavecchia -> civitavecc", function() {deepEqual( Stem("civitavecchia"), "civitavecc");});
test("cla -> cla", function() {deepEqual( Stem("cla"), "cla");});
test("claes -> claes", function() {deepEqual( Stem("claes"), "claes");});
test("claire -> cla", function() {deepEqual( Stem("claire"), "cla");});
test("clam -> clam", function() {deepEqual( Stem("clam"), "clam");});
test("clamore -> clamor", function() {deepEqual( Stem("clamore"), "clamor");});
test("clamori -> clamor", function() {deepEqual( Stem("clamori"), "clamor");});
test("clamorosa -> clamor", function() {deepEqual( Stem("clamorosa"), "clamor");});
test("clamorosi -> clamor", function() {deepEqual( Stem("clamorosi"), "clamor");});
test("clamoroso -> clamor", function() {deepEqual( Stem("clamoroso"), "clamor");});
test("clan -> clan", function() {deepEqual( Stem("clan"), "clan");});
test("clandestina -> clandestin", function() {deepEqual( Stem("clandestina"), "clandestin");});
test("clandestinamente -> clandestin", function() {deepEqual( Stem("clandestinamente"), "clandestin");});
test("clandestino -> clandestin", function() {deepEqual( Stem("clandestino"), "clandestin");});
test("clarin -> clarin", function() {deepEqual( Stem("clarin"), "clarin");});
test("clark -> clark", function() {deepEqual( Stem("clark"), "clark");});
test("classe -> class", function() {deepEqual( Stem("classe"), "class");});
test("classi -> class", function() {deepEqual( Stem("classi"), "class");});
test("classica -> classic", function() {deepEqual( Stem("classica"), "classic");});
test("classici -> classic", function() {deepEqual( Stem("classici"), "classic");});
test("classico -> classic", function() {deepEqual( Stem("classico"), "classic");});
test("classifica -> classif", function() {deepEqual( Stem("classifica"), "classif");});
test("classificate -> classific", function() {deepEqual( Stem("classificate"), "classific");});
test("classificati -> classific", function() {deepEqual( Stem("classificati"), "classific");});
test("classificato -> classific", function() {deepEqual( Stem("classificato"), "classific");});
test("classifiche -> classif", function() {deepEqual( Stem("classifiche"), "classif");});
test("claude -> claud", function() {deepEqual( Stem("claude"), "claud");});
test("claudia -> claud", function() {deepEqual( Stem("claudia"), "claud");});
test("claudio -> claud", function() {deepEqual( Stem("claudio"), "claud");});
test("claus -> claus", function() {deepEqual( Stem("claus"), "claus");});
test("claustrale -> claustral", function() {deepEqual( Stem("claustrale"), "claustral");});
test("clausura -> clausur", function() {deepEqual( Stem("clausura"), "clausur");});
test("cle -> cle", function() {deepEqual( Stem("cle"), "cle");});
test("clemente -> clement", function() {deepEqual( Stem("clemente"), "clement");});
test("clemenza -> clemenz", function() {deepEqual( Stem("clemenza"), "clemenz");});
test("clerici -> cleric", function() {deepEqual( Stem("clerici"), "cleric");});
test("clerico -> cleric", function() {deepEqual( Stem("clerico"), "cleric");});
test("clericofascisti -> clericofasc", function() {deepEqual( Stem("clericofascisti"), "clericofasc");});
test("clero -> cler", function() {deepEqual( Stem("clero"), "cler");});
test("clf -> clf", function() {deepEqual( Stem("clf"), "clf");});
test("cliam -> cliam", function() {deepEqual( Stem("cliam"), "cliam");});
test("cliente -> client", function() {deepEqual( Stem("cliente"), "client");});
test("clientela -> clientel", function() {deepEqual( Stem("clientela"), "clientel");});
test("clienti -> client", function() {deepEqual( Stem("clienti"), "client");});
test("cliff -> cliff", function() {deepEqual( Stem("cliff"), "cliff");});
test("clima -> clim", function() {deepEqual( Stem("clima"), "clim");});
test("climaticamente -> climat", function() {deepEqual( Stem("climaticamente"), "climat");});
test("climatiche -> climat", function() {deepEqual( Stem("climatiche"), "climat");});
test("climatologia -> climatolog", function() {deepEqual( Stem("climatologia"), "climatolog");});
test("climi -> clim", function() {deepEqual( Stem("climi"), "clim");});
test("clinica -> clinic", function() {deepEqual( Stem("clinica"), "clinic");});
test("cliniche -> clinic", function() {deepEqual( Stem("cliniche"), "clinic");});
test("clinico -> clinic", function() {deepEqual( Stem("clinico"), "clinic");});
test("clinton -> clinton", function() {deepEqual( Stem("clinton"), "clinton");});
test("cll -> cll", function() {deepEqual( Stem("cll"), "cll");});
test("cln -> cln", function() {deepEqual( Stem("cln"), "cln");});
test("clò -> clò", function() {deepEqual( Stem("clò"), "clò");});
test("clodio -> clod", function() {deepEqual( Stem("clodio"), "clod");});
test("clou -> clou", function() {deepEqual( Stem("clou"), "clou");});
test("clr -> clr", function() {deepEqual( Stem("clr"), "clr");});
test("club -> club", function() {deepEqual( Stem("club"), "club");});
test("clusone -> cluson", function() {deepEqual( Stem("clusone"), "cluson");});
test("clwyd -> clwyd", function() {deepEqual( Stem("clwyd"), "clwyd");});
test("cmos -> cmos", function() {deepEqual( Stem("cmos"), "cmos");});
test("cn -> cn", function() {deepEqual( Stem("cn"), "cn");});
test("cna -> cna", function() {deepEqual( Stem("cna"), "cna");});
test("cnt -> cnt", function() {deepEqual( Stem("cnt"), "cnt");});
test("co -> co", function() {deepEqual( Stem("co"), "co");});
test("coalizaione -> coalizaion", function() {deepEqual( Stem("coalizaione"), "coalizaion");});
test("coalizione -> coalizion", function() {deepEqual( Stem("coalizione"), "coalizion");});
test("coalizioni -> coalizion", function() {deepEqual( Stem("coalizioni"), "coalizion");});
test("coatta -> coatt", function() {deepEqual( Stem("coatta"), "coatt");});
test("cob -> cob", function() {deepEqual( Stem("cob"), "cob");});
test("coblenza -> coblenz", function() {deepEqual( Stem("coblenza"), "coblenz");});
test("cobra -> cobr", function() {deepEqual( Stem("cobra"), "cobr");});
test("cocaina -> cocain", function() {deepEqual( Stem("cocaina"), "cocain");});
test("cocche -> cocc", function() {deepEqual( Stem("cocche"), "cocc");});
test("cocchiere -> cocc", function() {deepEqual( Stem("cocchiere"), "cocc");});
test("cocci -> cocc", function() {deepEqual( Stem("cocci"), "cocc");});
test("coccia -> cocc", function() {deepEqual( Stem("coccia"), "cocc");});
test("coceva -> coc", function() {deepEqual( Stem("coceva"), "coc");});
test("cochin -> cochin", function() {deepEqual( Stem("cochin"), "cochin");});
test("cocuzzoli -> cocuzzol", function() {deepEqual( Stem("cocuzzoli"), "cocuzzol");});
test("cocuzzolo -> cocuzzol", function() {deepEqual( Stem("cocuzzolo"), "cocuzzol");});
test("coda -> cod", function() {deepEqual( Stem("coda"), "cod");});
test("codarde -> codard", function() {deepEqual( Stem("codarde"), "codard");});
test("codazzo -> codazz", function() {deepEqual( Stem("codazzo"), "codazz");});
test("code -> cod", function() {deepEqual( Stem("code"), "cod");});
test("codesta -> codest", function() {deepEqual( Stem("codesta"), "codest");});
test("codeste -> codest", function() {deepEqual( Stem("codeste"), "codest");});
test("codesti -> codest", function() {deepEqual( Stem("codesti"), "codest");});
test("codesto -> codest", function() {deepEqual( Stem("codesto"), "codest");});
test("codice -> codic", function() {deepEqual( Stem("codice"), "codic");});
test("codignoni -> codignon", function() {deepEqual( Stem("codignoni"), "codignon");});
test("coe -> coe", function() {deepEqual( Stem("coe"), "coe");});
test("coefficiente -> coefficient", function() {deepEqual( Stem("coefficiente"), "coefficient");});
test("coelestium -> coelestium", function() {deepEqual( Stem("coelestium"), "coelestium");});
test("coerente -> coerent", function() {deepEqual( Stem("coerente"), "coerent");});
test("coerentemente -> coerent", function() {deepEqual( Stem("coerentemente"), "coerent");});
test("coerenti -> coerent", function() {deepEqual( Stem("coerenti"), "coerent");});
test("coerenza -> coerenz", function() {deepEqual( Stem("coerenza"), "coerenz");});
test("coetaneo -> coetane", function() {deepEqual( Stem("coetaneo"), "coetane");});
test("coevi -> coev", function() {deepEqual( Stem("coevi"), "coev");});
test("coferenze -> coferent", function() {deepEqual( Stem("coferenze"), "coferent");});
test("cofferati -> coffer", function() {deepEqual( Stem("cofferati"), "coffer");});
test("cofide -> cofid", function() {deepEqual( Stem("cofide"), "cofid");});
test("cogenerazione -> cogener", function() {deepEqual( Stem("cogenerazione"), "cogener");});
test("coglie -> cogl", function() {deepEqual( Stem("coglie"), "cogl");});
test("coglierà -> cogl", function() {deepEqual( Stem("coglierà"), "cogl");});
test("coglierci -> cogl", function() {deepEqual( Stem("coglierci"), "cogl");});
test("cogliere -> cogl", function() {deepEqual( Stem("cogliere"), "cogl");});
test("coglierne -> cogl", function() {deepEqual( Stem("coglierne"), "cogl");});
test("cognati -> cogn", function() {deepEqual( Stem("cognati"), "cogn");});
test("cognatio -> cognat", function() {deepEqual( Stem("cognatio"), "cognat");});
test("cogne -> cogn", function() {deepEqual( Stem("cogne"), "cogn");});
test("cognetex -> cognetex", function() {deepEqual( Stem("cognetex"), "cognetex");});
test("cognizion -> cognizion", function() {deepEqual( Stem("cognizion"), "cognizion");});
test("cognizione -> cognizion", function() {deepEqual( Stem("cognizione"), "cognizion");});
test("cognizioni -> cognizion", function() {deepEqual( Stem("cognizioni"), "cognizion");});
test("cognome -> cognom", function() {deepEqual( Stem("cognome"), "cognom");});
test("coi -> coi", function() {deepEqual( Stem("coi"), "coi");});
test("coim -> coim", function() {deepEqual( Stem("coim"), "coim");});
test("coincide -> coincid", function() {deepEqual( Stem("coincide"), "coincid");});
test("coincidenza -> coincident", function() {deepEqual( Stem("coincidenza"), "coincident");});
test("coinciso -> coincis", function() {deepEqual( Stem("coinciso"), "coincis");});
test("coinvolge -> coinvolg", function() {deepEqual( Stem("coinvolge"), "coinvolg");});
test("coinvolgerà -> coinvolg", function() {deepEqual( Stem("coinvolgerà"), "coinvolg");});
test("coinvolgere -> coinvolg", function() {deepEqual( Stem("coinvolgere"), "coinvolg");});
test("coinvolgimento -> coinvolg", function() {deepEqual( Stem("coinvolgimento"), "coinvolg");});
test("coinvolgono -> coinvolg", function() {deepEqual( Stem("coinvolgono"), "coinvolg");});
test("coinvolta -> coinvolt", function() {deepEqual( Stem("coinvolta"), "coinvolt");});
test("coinvolte -> coinvolt", function() {deepEqual( Stem("coinvolte"), "coinvolt");});
test("coinvolti -> coinvolt", function() {deepEqual( Stem("coinvolti"), "coinvolt");});
test("coinvolto -> coinvolt", function() {deepEqual( Stem("coinvolto"), "coinvolt");});
test("coiro -> coir", function() {deepEqual( Stem("coiro"), "coir");});
test("cois -> cois", function() {deepEqual( Stem("cois"), "cois");});
test("col -> col", function() {deepEqual( Stem("col"), "col");});
test("colà -> col", function() {deepEqual( Stem("colà"), "col");});
test("colabrodo -> colabrod", function() {deepEqual( Stem("colabrodo"), "colabrod");});
test("colaiacomo -> colaiacom", function() {deepEqual( Stem("colaiacomo"), "colaiacom");});
test("colalucci -> colalucc", function() {deepEqual( Stem("colalucci"), "colalucc");});
test("colazione -> colazion", function() {deepEqual( Stem("colazione"), "colazion");});
test("colbò -> colb", function() {deepEqual( Stem("colbò"), "colb");});
test("colei -> cole", function() {deepEqual( Stem("colei"), "cole");});
test("colendissimo -> colendissim", function() {deepEqual( Stem("colendissimo"), "colendissim");});
test("coleridge -> coleridg", function() {deepEqual( Stem("coleridge"), "coleridg");});
test("colgono -> colg", function() {deepEqual( Stem("colgono"), "colg");});
test("colico -> colic", function() {deepEqual( Stem("colico"), "colic");});
test("coll -> coll", function() {deepEqual( Stem("coll"), "coll");});
test("colla -> coll", function() {deepEqual( Stem("colla"), "coll");});
test("collabora -> collabor", function() {deepEqual( Stem("collabora"), "collabor");});
test("collaborando -> collabor", function() {deepEqual( Stem("collaborando"), "collabor");});
test("collaborare -> collabor", function() {deepEqual( Stem("collaborare"), "collabor");});
test("collaborato -> collabor", function() {deepEqual( Stem("collaborato"), "collabor");});
test("collaboratore -> collabor", function() {deepEqual( Stem("collaboratore"), "collabor");});
test("collaboratori -> collabor", function() {deepEqual( Stem("collaboratori"), "collabor");});
test("collaboratrici -> collabor", function() {deepEqual( Stem("collaboratrici"), "collabor");});
test("collaborazione -> collabor", function() {deepEqual( Stem("collaborazione"), "collabor");});
test("collaborazioni -> collabor", function() {deepEqual( Stem("collaborazioni"), "collabor");});
test("collalto -> collalt", function() {deepEqual( Stem("collalto"), "collalt");});
test("collana -> collan", function() {deepEqual( Stem("collana"), "collan");});
test("collant -> collant", function() {deepEqual( Stem("collant"), "collant");});
test("collare -> coll", function() {deepEqual( Stem("collare"), "coll");});
test("collaudo -> collaud", function() {deepEqual( Stem("collaudo"), "collaud");});
test("colle -> coll", function() {deepEqual( Stem("colle"), "coll");});
test("colleferro -> colleferr", function() {deepEqual( Stem("colleferro"), "colleferr");});
test("collega -> colleg", function() {deepEqual( Stem("collega"), "colleg");});
test("collegà -> colleg", function() {deepEqual( Stem("collegà"), "colleg");});
test("collegabile -> colleg", function() {deepEqual( Stem("collegabile"), "colleg");});
test("collegamenti -> colleg", function() {deepEqual( Stem("collegamenti"), "colleg");});
test("collegamento -> colleg", function() {deepEqual( Stem("collegamento"), "colleg");});
test("collegare -> colleg", function() {deepEqual( Stem("collegare"), "colleg");});
test("collegata -> colleg", function() {deepEqual( Stem("collegata"), "colleg");});
test("collegate -> colleg", function() {deepEqual( Stem("collegate"), "colleg");});
test("collegati -> colleg", function() {deepEqual( Stem("collegati"), "colleg");});
test("collegato -> colleg", function() {deepEqual( Stem("collegato"), "colleg");});
test("collegava -> colleg", function() {deepEqual( Stem("collegava"), "colleg");});
test("college -> colleg", function() {deepEqual( Stem("college"), "colleg");});
test("colleggiale -> colleggial", function() {deepEqual( Stem("colleggiale"), "colleggial");});
test("colleggialità -> colleggial", function() {deepEqual( Stem("colleggialità"), "colleggial");});
test("collegherà -> colleg", function() {deepEqual( Stem("collegherà"), "colleg");});
test("colleghi -> colleg", function() {deepEqual( Stem("colleghi"), "colleg");});
test("collegi -> colleg", function() {deepEqual( Stem("collegi"), "colleg");});
test("collegiale -> collegial", function() {deepEqual( Stem("collegiale"), "collegial");});
test("collegialità -> collegial", function() {deepEqual( Stem("collegialità"), "collegial");});
test("collegio -> colleg", function() {deepEqual( Stem("collegio"), "colleg");});
test("collera -> coller", function() {deepEqual( Stem("collera"), "coller");});
test("collerico -> coller", function() {deepEqual( Stem("collerico"), "coller");});
test("collettiva -> collett", function() {deepEqual( Stem("collettiva"), "collett");});
test("collettività -> collett", function() {deepEqual( Stem("collettività"), "collett");});
test("collettivo -> collett", function() {deepEqual( Stem("collettivo"), "collett");});
test("collezionato -> collezion", function() {deepEqual( Stem("collezionato"), "collezion");});
test("collezionava -> collezion", function() {deepEqual( Stem("collezionava"), "collezion");});
test("collezione -> collezion", function() {deepEqual( Stem("collezione"), "collezion");});
test("collezioni -> collezion", function() {deepEqual( Stem("collezioni"), "collezion");});
test("colli -> coll", function() {deepEqual( Stem("colli"), "coll");});
test("colline -> collin", function() {deepEqual( Stem("colline"), "collin");});
test("collinetta -> collinett", function() {deepEqual( Stem("collinetta"), "collinett");});
test("collisione -> collision", function() {deepEqual( Stem("collisione"), "collision");});
test("collo -> coll", function() {deepEqual( Stem("collo"), "coll");});
test("colloca -> colloc", function() {deepEqual( Stem("colloca"), "colloc");});
test("collocamenti -> colloc", function() {deepEqual( Stem("collocamenti"), "colloc");});
test("collocamento -> colloc", function() {deepEqual( Stem("collocamento"), "colloc");});
test("collocandolo -> colloc", function() {deepEqual( Stem("collocandolo"), "colloc");});
test("collocare -> colloc", function() {deepEqual( Stem("collocare"), "colloc");});
test("collocarla -> colloc", function() {deepEqual( Stem("collocarla"), "colloc");});
test("collocarsi -> colloc", function() {deepEqual( Stem("collocarsi"), "colloc");});
test("collocarvi -> colloc", function() {deepEqual( Stem("collocarvi"), "colloc");});
test("collocata -> colloc", function() {deepEqual( Stem("collocata"), "colloc");});
test("collocatasi -> collocatas", function() {deepEqual( Stem("collocatasi"), "collocatas");});
test("collocate -> colloc", function() {deepEqual( Stem("collocate"), "colloc");});
test("collocato -> colloc", function() {deepEqual( Stem("collocato"), "colloc");});
test("collocazione -> colloc", function() {deepEqual( Stem("collocazione"), "colloc");});
test("collocazioni -> colloc", function() {deepEqual( Stem("collocazioni"), "colloc");});
test("collocherebbe -> colloc", function() {deepEqual( Stem("collocherebbe"), "colloc");});
test("collochi -> colloc", function() {deepEqual( Stem("collochi"), "colloc");});
test("colloqui -> colloqu", function() {deepEqual( Stem("colloqui"), "colloqu");});
test("colloquio -> colloqu", function() {deepEqual( Stem("colloquio"), "colloqu");});
test("colloredo -> collored", function() {deepEqual( Stem("colloredo"), "collored");});
test("collusione -> collusion", function() {deepEqual( Stem("collusione"), "collusion");});
test("colluttazioni -> collutt", function() {deepEqual( Stem("colluttazioni"), "collutt");});
test("colma -> colm", function() {deepEqual( Stem("colma"), "colm");});
test("colmare -> colm", function() {deepEqual( Stem("colmare"), "colm");});
test("colmata -> colm", function() {deepEqual( Stem("colmata"), "colm");});
test("colme -> colm", function() {deepEqual( Stem("colme"), "colm");});
test("colmi -> colm", function() {deepEqual( Stem("colmi"), "colm");});
test("colmo -> colm", function() {deepEqual( Stem("colmo"), "colm");});
test("colò -> col", function() {deepEqual( Stem("colò"), "col");});
test("colombe -> colomb", function() {deepEqual( Stem("colombe"), "colomb");});
test("colombia -> colomb", function() {deepEqual( Stem("colombia"), "colomb");});
test("colombiana -> colombian", function() {deepEqual( Stem("colombiana"), "colombian");});
test("colombiano -> colomb", function() {deepEqual( Stem("colombiano"), "colomb");});
test("colombo -> colomb", function() {deepEqual( Stem("colombo"), "colomb");});
test("colombotti -> colombott", function() {deepEqual( Stem("colombotti"), "colombott");});
test("colonello -> colonell", function() {deepEqual( Stem("colonello"), "colonell");});
test("coloniale -> colonial", function() {deepEqual( Stem("coloniale"), "colonial");});
test("colonna -> colonn", function() {deepEqual( Stem("colonna"), "colonn");});
test("colonne -> colonn", function() {deepEqual( Stem("colonne"), "colonn");});
test("colonnello -> colonnell", function() {deepEqual( Stem("colonnello"), "colonnell");});
test("colonnese -> colonnes", function() {deepEqual( Stem("colonnese"), "colonnes");});
test("colono -> col", function() {deepEqual( Stem("colono"), "col");});
test("color -> color", function() {deepEqual( Stem("color"), "color");});
test("colorati -> color", function() {deepEqual( Stem("colorati"), "color");});
test("colore -> color", function() {deepEqual( Stem("colore"), "color");});
test("colori -> color", function() {deepEqual( Stem("colori"), "color");});
test("colorito -> color", function() {deepEqual( Stem("colorito"), "color");});
test("colorivano -> color", function() {deepEqual( Stem("colorivano"), "color");});
test("coloro -> color", function() {deepEqual( Stem("coloro"), "color");});
test("colossi -> coloss", function() {deepEqual( Stem("colossi"), "coloss");});
test("colosso -> coloss", function() {deepEqual( Stem("colosso"), "coloss");});
test("colpa -> colp", function() {deepEqual( Stem("colpa"), "colp");});
test("colpe -> colp", function() {deepEqual( Stem("colpe"), "colp");});
test("colpendo -> colp", function() {deepEqual( Stem("colpendo"), "colp");});
test("colpevol -> colpevol", function() {deepEqual( Stem("colpevol"), "colpevol");});
test("colpevole -> colpevol", function() {deepEqual( Stem("colpevole"), "colpevol");});
test("colpevolè -> colpevol", function() {deepEqual( Stem("colpevolè"), "colpevol");});
test("colpevolezza -> colpevolezz", function() {deepEqual( Stem("colpevolezza"), "colpevolezz");});
test("colpevoli -> colpevol", function() {deepEqual( Stem("colpevoli"), "colpevol");});
test("colpevolizzare -> colpevolizz", function() {deepEqual( Stem("colpevolizzare"), "colpevolizz");});
test("colpi -> colp", function() {deepEqual( Stem("colpi"), "colp");});
test("colpì -> colp", function() {deepEqual( Stem("colpì"), "colp");});
test("colpisce -> colp", function() {deepEqual( Stem("colpisce"), "colp");});
test("colpiscono -> colp", function() {deepEqual( Stem("colpiscono"), "colp");});
test("colpisse -> colpiss", function() {deepEqual( Stem("colpisse"), "colpiss");});
test("colpita -> colp", function() {deepEqual( Stem("colpita"), "colp");});
test("colpite -> colp", function() {deepEqual( Stem("colpite"), "colp");});
test("colpiti -> colp", function() {deepEqual( Stem("colpiti"), "colp");});
test("colpito -> colp", function() {deepEqual( Stem("colpito"), "colp");});
test("colpo -> colp", function() {deepEqual( Stem("colpo"), "colp");});
test("colse -> cols", function() {deepEqual( Stem("colse"), "cols");});
test("colsero -> colser", function() {deepEqual( Stem("colsero"), "colser");});
test("colta -> colt", function() {deepEqual( Stem("colta"), "colt");});
test("coltellacci -> coltellacc", function() {deepEqual( Stem("coltellacci"), "coltellacc");});
test("coltellaccio -> coltellacc", function() {deepEqual( Stem("coltellaccio"), "coltellacc");});
test("coltellata -> coltell", function() {deepEqual( Stem("coltellata"), "coltell");});
test("coltellate -> coltell", function() {deepEqual( Stem("coltellate"), "coltell");});
test("coltelli -> coltell", function() {deepEqual( Stem("coltelli"), "coltell");});
test("coltello -> coltell", function() {deepEqual( Stem("coltello"), "coltell");});
test("colti -> colt", function() {deepEqual( Stem("colti"), "colt");});
test("coltivando -> coltiv", function() {deepEqual( Stem("coltivando"), "coltiv");});
test("coltivare -> coltiv", function() {deepEqual( Stem("coltivare"), "coltiv");});
test("coltivasse -> coltiv", function() {deepEqual( Stem("coltivasse"), "coltiv");});
test("coltivata -> coltiv", function() {deepEqual( Stem("coltivata"), "coltiv");});
test("coltivate -> colt", function() {deepEqual( Stem("coltivate"), "colt");});
test("coltivati -> coltiv", function() {deepEqual( Stem("coltivati"), "coltiv");});
test("coltivato -> coltiv", function() {deepEqual( Stem("coltivato"), "coltiv");});
test("coltivava -> coltiv", function() {deepEqual( Stem("coltivava"), "coltiv");});
test("coltivazioni -> coltiv", function() {deepEqual( Stem("coltivazioni"), "coltiv");});
test("colto -> colt", function() {deepEqual( Stem("colto"), "colt");});
test("coltura -> coltur", function() {deepEqual( Stem("coltura"), "coltur");});
test("colui -> colu", function() {deepEqual( Stem("colui"), "colu");});
test("columbia -> columb", function() {deepEqual( Stem("columbia"), "columb");});
test("com -> com", function() {deepEqual( Stem("com"), "com");});
test("comanda -> comand", function() {deepEqual( Stem("comanda"), "comand");});
test("comandamenti -> comand", function() {deepEqual( Stem("comandamenti"), "comand");});
test("comandami -> comandam", function() {deepEqual( Stem("comandami"), "comandam");});
test("comandan -> comandan", function() {deepEqual( Stem("comandan"), "comandan");});
test("comandane -> comandan", function() {deepEqual( Stem("comandane"), "comandan");});
test("comandano -> comand", function() {deepEqual( Stem("comandano"), "comand");});
test("comandante -> comand", function() {deepEqual( Stem("comandante"), "comand");});
test("comandanti -> comand", function() {deepEqual( Stem("comandanti"), "comand");});
test("comandar -> comand", function() {deepEqual( Stem("comandar"), "comand");});
test("comandare -> comand", function() {deepEqual( Stem("comandare"), "comand");});
test("comandargli -> comand", function() {deepEqual( Stem("comandargli"), "comand");});
test("comandarle -> comand", function() {deepEqual( Stem("comandarle"), "comand");});
test("comandarne -> comand", function() {deepEqual( Stem("comandarne"), "comand");});
test("comandasse -> comand", function() {deepEqual( Stem("comandasse"), "comand");});
test("comandassi -> comand", function() {deepEqual( Stem("comandassi"), "comand");});
test("comandata -> comand", function() {deepEqual( Stem("comandata"), "comand");});
test("comandato -> comand", function() {deepEqual( Stem("comandato"), "comand");});
test("comandava -> comand", function() {deepEqual( Stem("comandava"), "comand");});
test("comanderai -> comand", function() {deepEqual( Stem("comanderai"), "comand");});
test("comanderò -> comand", function() {deepEqual( Stem("comanderò"), "comand");});
test("comandi -> comand", function() {deepEqual( Stem("comandi"), "comand");});
test("comando -> com", function() {deepEqual( Stem("comando"), "com");});
test("comandò -> comand", function() {deepEqual( Stem("comandò"), "comand");});
test("comar -> com", function() {deepEqual( Stem("comar"), "com");});
test("comare -> com", function() {deepEqual( Stem("comare"), "com");});
test("comari -> comar", function() {deepEqual( Stem("comari"), "comar");});
test("comaschi -> comasc", function() {deepEqual( Stem("comaschi"), "comasc");});
test("comasco -> comasc", function() {deepEqual( Stem("comasco"), "comasc");});
test("comau -> comau", function() {deepEqual( Stem("comau"), "comau");});
test("combaciano -> combac", function() {deepEqual( Stem("combaciano"), "combac");});
test("combatta -> combatt", function() {deepEqual( Stem("combatta"), "combatt");});
test("combattendo -> combatt", function() {deepEqual( Stem("combattendo"), "combatt");});
test("combattente -> combattent", function() {deepEqual( Stem("combattente"), "combattent");});
test("combattenti -> combattent", function() {deepEqual( Stem("combattenti"), "combattent");});
test("combatter -> combatter", function() {deepEqual( Stem("combatter"), "combatter");});
test("combattere -> combatt", function() {deepEqual( Stem("combattere"), "combatt");});
test("combattesse -> combattess", function() {deepEqual( Stem("combattesse"), "combattess");});
test("combatteva -> combatt", function() {deepEqual( Stem("combatteva"), "combatt");});
test("combattiemnti -> combattiemnt", function() {deepEqual( Stem("combattiemnti"), "combattiemnt");});
test("combattimenti -> combatt", function() {deepEqual( Stem("combattimenti"), "combatt");});
test("combattimento -> combatt", function() {deepEqual( Stem("combattimento"), "combatt");});
test("combattono -> combatt", function() {deepEqual( Stem("combattono"), "combatt");});
test("combattuta -> combatt", function() {deepEqual( Stem("combattuta"), "combatt");});
test("combinata -> combin", function() {deepEqual( Stem("combinata"), "combin");});
test("combinazione -> combin", function() {deepEqual( Stem("combinazione"), "combin");});
test("combinazioni -> combin", function() {deepEqual( Stem("combinazioni"), "combin");});
test("combineranno -> combin", function() {deepEqual( Stem("combineranno"), "combin");});
test("combò -> comb", function() {deepEqual( Stem("combò"), "comb");});
test("combustibile -> combust", function() {deepEqual( Stem("combustibile"), "combust");});
test("combustibili -> combust", function() {deepEqual( Stem("combustibili"), "combust");});
test("come -> com", function() {deepEqual( Stem("come"), "com");});
test("comedy -> comedy", function() {deepEqual( Stem("comedy"), "comedy");});
test("comencini -> comencin", function() {deepEqual( Stem("comencini"), "comencin");});
test("comense -> comens", function() {deepEqual( Stem("comense"), "comens");});
test("comentitiasque -> comentitiasqu", function() {deepEqual( Stem("comentitiasque"), "comentitiasqu");});
test("comercio -> comerc", function() {deepEqual( Stem("comercio"), "comerc");});
test("cometa -> comet", function() {deepEqual( Stem("cometa"), "comet");});
test("comi -> com", function() {deepEqual( Stem("comi"), "com");});
test("comiche -> comic", function() {deepEqual( Stem("comiche"), "comic");});
test("comici -> comic", function() {deepEqual( Stem("comici"), "comic");});
test("comico -> comic", function() {deepEqual( Stem("comico"), "comic");});
test("comignoli -> comignol", function() {deepEqual( Stem("comignoli"), "comignol");});
test("comillas -> comillas", function() {deepEqual( Stem("comillas"), "comillas");});
test("comincerà -> cominc", function() {deepEqual( Stem("comincerà"), "cominc");});
test("comincerann -> comincerann", function() {deepEqual( Stem("comincerann"), "comincerann");});
test("cominceranno -> cominc", function() {deepEqual( Stem("cominceranno"), "cominc");});
test("comincerei -> cominc", function() {deepEqual( Stem("comincerei"), "cominc");});
test("cominci -> cominc", function() {deepEqual( Stem("cominci"), "cominc");});
test("comincia -> cominc", function() {deepEqual( Stem("comincia"), "cominc");});
test("cominciamo -> cominc", function() {deepEqual( Stem("cominciamo"), "cominc");});
test("cominciando -> cominc", function() {deepEqual( Stem("cominciando"), "cominc");});
test("cominciano -> cominc", function() {deepEqual( Stem("cominciano"), "cominc");});
test("cominciar -> cominc", function() {deepEqual( Stem("cominciar"), "cominc");});
test("cominciare -> cominc", function() {deepEqual( Stem("cominciare"), "cominc");});
test("cominciarono -> cominc", function() {deepEqual( Stem("cominciarono"), "cominc");});
test("cominciasse -> cominc", function() {deepEqual( Stem("cominciasse"), "cominc");});
test("cominciata -> cominc", function() {deepEqual( Stem("cominciata"), "cominc");});
test("cominciate -> cominc", function() {deepEqual( Stem("cominciate"), "cominc");});
test("cominciati -> cominc", function() {deepEqual( Stem("cominciati"), "cominc");});
test("cominciato -> cominc", function() {deepEqual( Stem("cominciato"), "cominc");});
test("cominciava -> cominc", function() {deepEqual( Stem("cominciava"), "cominc");});
test("cominciavan -> cominciavan", function() {deepEqual( Stem("cominciavan"), "cominciavan");});
test("cominciavano -> cominc", function() {deepEqual( Stem("cominciavano"), "cominc");});
test("cominciavo -> cominc", function() {deepEqual( Stem("cominciavo"), "cominc");});
test("comincin -> comincin", function() {deepEqual( Stem("comincin"), "comincin");});
test("comincio -> cominc", function() {deepEqual( Stem("comincio"), "cominc");});
test("cominciò -> cominc", function() {deepEqual( Stem("cominciò"), "cominc");});
test("cominica -> comin", function() {deepEqual( Stem("cominica"), "comin");});
test("comino -> comin", function() {deepEqual( Stem("comino"), "comin");});
test("comit -> comit", function() {deepEqual( Stem("comit"), "comit");});
test("comitati -> comit", function() {deepEqual( Stem("comitati"), "comit");});
test("comitato -> comit", function() {deepEqual( Stem("comitato"), "comit");});
test("comites -> comites", function() {deepEqual( Stem("comites"), "comites");});
test("comitiva -> comit", function() {deepEqual( Stem("comitiva"), "comit");});
test("comitive -> comit", function() {deepEqual( Stem("comitive"), "comit");});
test("comizio -> comiz", function() {deepEqual( Stem("comizio"), "comiz");});
test("comma -> comm", function() {deepEqual( Stem("comma"), "comm");});
test("commando -> comm", function() {deepEqual( Stem("commando"), "comm");});
test("commedia -> commed", function() {deepEqual( Stem("commedia"), "commed");});
test("commemorano -> commemor", function() {deepEqual( Stem("commemorano"), "commemor");});
test("commemorare -> commemor", function() {deepEqual( Stem("commemorare"), "commemor");});
test("commemorazione -> commemor", function() {deepEqual( Stem("commemorazione"), "commemor");});
test("commemorazioni -> commemor", function() {deepEqual( Stem("commemorazioni"), "commemor");});
test("commensale -> commensal", function() {deepEqual( Stem("commensale"), "commensal");});
test("commensali -> commensal", function() {deepEqual( Stem("commensali"), "commensal");});
test("comment -> comment", function() {deepEqual( Stem("comment"), "comment");});
test("commenta -> comment", function() {deepEqual( Stem("commenta"), "comment");});
test("commentando -> comment", function() {deepEqual( Stem("commentando"), "comment");});
test("commentare -> comment", function() {deepEqual( Stem("commentare"), "comment");});
test("commentate -> comment", function() {deepEqual( Stem("commentate"), "comment");});
test("commentati -> comment", function() {deepEqual( Stem("commentati"), "comment");});
test("commentato -> comment", function() {deepEqual( Stem("commentato"), "comment");});
test("commentatori -> comment", function() {deepEqual( Stem("commentatori"), "comment");});
test("commenti -> comment", function() {deepEqual( Stem("commenti"), "comment");});
test("commento -> comment", function() {deepEqual( Stem("commento"), "comment");});
test("commerci -> comm", function() {deepEqual( Stem("commerci"), "comm");});
test("commerciabile -> commerc", function() {deepEqual( Stem("commerciabile"), "commerc");});
test("commerciale -> commercial", function() {deepEqual( Stem("commerciale"), "commercial");});
test("commerciali -> commercial", function() {deepEqual( Stem("commerciali"), "commercial");});
test("commercialisti -> commercial", function() {deepEqual( Stem("commercialisti"), "commercial");});
test("commercializzazione -> commercializz", function() {deepEqual( Stem("commercializzazione"), "commercializz");});
test("commerciano -> commerc", function() {deepEqual( Stem("commerciano"), "commerc");});
test("commerciante -> commerc", function() {deepEqual( Stem("commerciante"), "commerc");});
test("commercianti -> commerc", function() {deepEqual( Stem("commercianti"), "commerc");});
test("commercio -> commerc", function() {deepEqual( Stem("commercio"), "commerc");});
test("commerzbank -> commerzbank", function() {deepEqual( Stem("commerzbank"), "commerzbank");});
test("commessa -> commess", function() {deepEqual( Stem("commessa"), "commess");});
test("commesse -> commess", function() {deepEqual( Stem("commesse"), "commess");});
test("commessi -> commess", function() {deepEqual( Stem("commessi"), "commess");});
test("commesso -> commess", function() {deepEqual( Stem("commesso"), "commess");});
test("commestibili -> commest", function() {deepEqual( Stem("commestibili"), "commest");});
test("commette -> commett", function() {deepEqual( Stem("commette"), "commett");});
test("commetter -> commetter", function() {deepEqual( Stem("commetter"), "commetter");});
test("commettere -> commett", function() {deepEqual( Stem("commettere"), "commett");});
test("commetterne -> commett", function() {deepEqual( Stem("commetterne"), "commett");});
test("commettesse -> commettess", function() {deepEqual( Stem("commettesse"), "commettess");});
test("commetteva -> commett", function() {deepEqual( Stem("commetteva"), "commett");});
test("commettevano -> commett", function() {deepEqual( Stem("commettevano"), "commett");});
test("commettiamo -> commett", function() {deepEqual( Stem("commettiamo"), "commett");});
test("commettono -> commett", function() {deepEqual( Stem("commettono"), "commett");});
test("commiato -> comm", function() {deepEqual( Stem("commiato"), "comm");});
test("commilitoni -> commiliton", function() {deepEqual( Stem("commilitoni"), "commiliton");});
test("comminare -> commin", function() {deepEqual( Stem("comminare"), "commin");});
test("comminazioni -> commin", function() {deepEqual( Stem("comminazioni"), "commin");});
test("commisario -> commisar", function() {deepEqual( Stem("commisario"), "commisar");});
test("commisione -> commision", function() {deepEqual( Stem("commisione"), "commision");});
test("commisisone -> commisison", function() {deepEqual( Stem("commisisone"), "commisison");});
test("commissari -> commissar", function() {deepEqual( Stem("commissari"), "commissar");});
test("commissariale -> commissarial", function() {deepEqual( Stem("commissariale"), "commissarial");});
test("commissariamento -> commissar", function() {deepEqual( Stem("commissariamento"), "commissar");});
test("commissariati -> commissar", function() {deepEqual( Stem("commissariati"), "commissar");});
test("commissariato -> commissar", function() {deepEqual( Stem("commissariato"), "commissar");});
test("commissario -> commissar", function() {deepEqual( Stem("commissario"), "commissar");});
test("commission -> commission", function() {deepEqual( Stem("commission"), "commission");});
test("commissiona -> commission", function() {deepEqual( Stem("commissiona"), "commission");});
test("commissionata -> commission", function() {deepEqual( Stem("commissionata"), "commission");});
test("commissionato -> commission", function() {deepEqual( Stem("commissionato"), "commission");});
test("commissione -> commission", function() {deepEqual( Stem("commissione"), "commission");});
test("commissioni -> commission", function() {deepEqual( Stem("commissioni"), "commission");});
test("commistione -> commistion", function() {deepEqual( Stem("commistione"), "commistion");});
test("commossa -> commoss", function() {deepEqual( Stem("commossa"), "commoss");});
test("commosse -> commoss", function() {deepEqual( Stem("commosse"), "commoss");});
test("commossi -> commoss", function() {deepEqual( Stem("commossi"), "commoss");});
test("commosso -> commoss", function() {deepEqual( Stem("commosso"), "commoss");});
test("commovere -> commov", function() {deepEqual( Stem("commovere"), "commov");});
test("commoversi -> commov", function() {deepEqual( Stem("commoversi"), "commov");});
test("commozione -> commozion", function() {deepEqual( Stem("commozione"), "commozion");});
test("commozioni -> commozion", function() {deepEqual( Stem("commozioni"), "commozion");});
test("commutazione -> commut", function() {deepEqual( Stem("commutazione"), "commut");});
test("como -> com", function() {deepEqual( Stem("como"), "com");});
test("comoda -> comod", function() {deepEqual( Stem("comoda"), "comod");});
test("comodamente -> comod", function() {deepEqual( Stem("comodamente"), "comod");});
test("comodi -> comod", function() {deepEqual( Stem("comodi"), "comod");});
test("comodità -> comod", function() {deepEqual( Stem("comodità"), "comod");});
test("comodo -> comod", function() {deepEqual( Stem("comodo"), "comod");});
test("comp -> comp", function() {deepEqual( Stem("comp"), "comp");});
test("compadrone -> compadron", function() {deepEqual( Stem("compadrone"), "compadron");});
test("compagna -> compagn", function() {deepEqual( Stem("compagna"), "compagn");});
test("compagne -> compagn", function() {deepEqual( Stem("compagne"), "compagn");});
test("compagni -> compagn", function() {deepEqual( Stem("compagni"), "compagn");});
test("compagnia -> compagn", function() {deepEqual( Stem("compagnia"), "compagn");});
test("compagnie -> compagn", function() {deepEqual( Stem("compagnie"), "compagn");});
test("compagno -> compagn", function() {deepEqual( Stem("compagno"), "compagn");});
test("compagnone -> compagnon", function() {deepEqual( Stem("compagnone"), "compagnon");});
test("compagnoni -> compagnon", function() {deepEqual( Stem("compagnoni"), "compagnon");});
test("companatico -> companat", function() {deepEqual( Stem("companatico"), "companat");});
test("compania -> compan", function() {deepEqual( Stem("compania"), "compan");});
test("company -> company", function() {deepEqual( Stem("company"), "company");});
test("compare -> comp", function() {deepEqual( Stem("compare"), "comp");});
test("comparendo -> compar", function() {deepEqual( Stem("comparendo"), "compar");});
test("comparir -> compar", function() {deepEqual( Stem("comparir"), "compar");});
test("comparire -> compar", function() {deepEqual( Stem("comparire"), "compar");});
test("comparirle -> compar", function() {deepEqual( Stem("comparirle"), "compar");});
test("comparirvi -> compar", function() {deepEqual( Stem("comparirvi"), "compar");});
test("comparisce -> compar", function() {deepEqual( Stem("comparisce"), "compar");});
test("compariscono -> compar", function() {deepEqual( Stem("compariscono"), "compar");});
test("compariva -> compar", function() {deepEqual( Stem("compariva"), "compar");});
test("comparivan -> comparivan", function() {deepEqual( Stem("comparivan"), "comparivan");});
test("comparivano -> compar", function() {deepEqual( Stem("comparivano"), "compar");});
test("comparsa -> compars", function() {deepEqual( Stem("comparsa"), "compars");});
test("comparse -> compars", function() {deepEqual( Stem("comparse"), "compars");});
test("comparso -> compars", function() {deepEqual( Stem("comparso"), "compars");});
test("comparti -> comp", function() {deepEqual( Stem("comparti"), "comp");});
test("compartimenti -> compart", function() {deepEqual( Stem("compartimenti"), "compart");});
test("compartimento -> compart", function() {deepEqual( Stem("compartimento"), "compart");});
test("comparto -> compart", function() {deepEqual( Stem("comparto"), "compart");});
test("comparve -> comparv", function() {deepEqual( Stem("comparve"), "comparv");});
test("compassion -> compassion", function() {deepEqual( Stem("compassion"), "compassion");});
test("compassione -> compassion", function() {deepEqual( Stem("compassione"), "compassion");});
test("compassionevole -> compassionevol", function() {deepEqual( Stem("compassionevole"), "compassionevol");});
test("compassionevoli -> compassionevol", function() {deepEqual( Stem("compassionevoli"), "compassionevol");});
test("compatibile -> compat", function() {deepEqual( Stem("compatibile"), "compat");});
test("compatibili -> compat", function() {deepEqual( Stem("compatibili"), "compat");});
test("compatibilità -> compatibil", function() {deepEqual( Stem("compatibilità"), "compatibil");});
test("compatibilmente -> compatibil", function() {deepEqual( Stem("compatibilmente"), "compatibil");});
test("compatire -> compat", function() {deepEqual( Stem("compatire"), "compat");});
test("compatirlo -> compat", function() {deepEqual( Stem("compatirlo"), "compat");});
test("compatirsi -> compat", function() {deepEqual( Stem("compatirsi"), "compat");});
test("compatisco -> compat", function() {deepEqual( Stem("compatisco"), "compat");});
test("compatitemi -> compatitem", function() {deepEqual( Stem("compatitemi"), "compatitem");});
test("compatriotti -> compatriott", function() {deepEqual( Stem("compatriotti"), "compatriott");});
test("compatta -> compatt", function() {deepEqual( Stem("compatta"), "compatt");});
test("compattezza -> compattezz", function() {deepEqual( Stem("compattezza"), "compattezz");});
test("compatti -> compatt", function() {deepEqual( Stem("compatti"), "compatt");});
test("compegnie -> compegn", function() {deepEqual( Stem("compegnie"), "compegn");});
test("compendio -> compend", function() {deepEqual( Stem("compendio"), "compend");});
test("compensar -> compens", function() {deepEqual( Stem("compensar"), "compens");});
test("compensarla -> compens", function() {deepEqual( Stem("compensarla"), "compens");});
test("compensativo -> compens", function() {deepEqual( Stem("compensativo"), "compens");});
test("compensava -> compens", function() {deepEqual( Stem("compensava"), "compens");});
test("compensazione -> compens", function() {deepEqual( Stem("compensazione"), "compens");});
test("compenso -> compens", function() {deepEqual( Stem("compenso"), "compens");});
test("comperare -> comper", function() {deepEqual( Stem("comperare"), "comper");});
test("compertum -> compertum", function() {deepEqual( Stem("compertum"), "compertum");});
test("compete -> comp", function() {deepEqual( Stem("compete"), "comp");});
test("competente -> competent", function() {deepEqual( Stem("competente"), "competent");});
test("competenti -> competent", function() {deepEqual( Stem("competenti"), "competent");});
test("competenza -> competent", function() {deepEqual( Stem("competenza"), "competent");});
test("competenze -> competent", function() {deepEqual( Stem("competenze"), "competent");});
test("competer -> competer", function() {deepEqual( Stem("competer"), "competer");});
test("competere -> compet", function() {deepEqual( Stem("competere"), "compet");});
test("competesse -> competess", function() {deepEqual( Stem("competesse"), "competess");});
test("competitito -> competit", function() {deepEqual( Stem("competitito"), "competit");});
test("competitiva -> competit", function() {deepEqual( Stem("competitiva"), "competit");});
test("competitività -> competit", function() {deepEqual( Stem("competitività"), "competit");});
test("competitivo -> competit", function() {deepEqual( Stem("competitivo"), "competit");});
test("competizione -> competizion", function() {deepEqual( Stem("competizione"), "competizion");});
test("competizioni -> competizion", function() {deepEqual( Stem("competizioni"), "competizion");});
test("compiace -> compiac", function() {deepEqual( Stem("compiace"), "compiac");});
test("compiacendosi -> compiac", function() {deepEqual( Stem("compiacendosi"), "compiac");});
test("compiacenza -> compiacent", function() {deepEqual( Stem("compiacenza"), "compiacent");});
test("compiacenze -> compiacent", function() {deepEqual( Stem("compiacenze"), "compiacent");});
test("compiacere -> compiac", function() {deepEqual( Stem("compiacere"), "compiac");});
test("compiacerla -> compiac", function() {deepEqual( Stem("compiacerla"), "compiac");});
test("compiaceva -> compiac", function() {deepEqual( Stem("compiaceva"), "compiac");});
test("compiacimento -> compiac", function() {deepEqual( Stem("compiacimento"), "compiac");});
test("compiacque -> compiacqu", function() {deepEqual( Stem("compiacque"), "compiacqu");});
test("compiangere -> compiang", function() {deepEqual( Stem("compiangere"), "compiang");});
test("compiere -> comp", function() {deepEqual( Stem("compiere"), "comp");});
test("compilata -> compil", function() {deepEqual( Stem("compilata"), "compil");});
test("compilati -> compil", function() {deepEqual( Stem("compilati"), "compil");});
test("compilaua -> compilau", function() {deepEqual( Stem("compilaua"), "compilau");});
test("compilazione -> compil", function() {deepEqual( Stem("compilazione"), "compil");});
test("compimento -> comp", function() {deepEqual( Stem("compimento"), "comp");});
test("compir -> comp", function() {deepEqual( Stem("compir"), "comp");});
test("compirà -> comp", function() {deepEqual( Stem("compirà"), "comp");});
test("compire -> comp", function() {deepEqual( Stem("compire"), "comp");});
test("compisca -> comp", function() {deepEqual( Stem("compisca"), "comp");});
test("compita -> comp", function() {deepEqual( Stem("compita"), "comp");});
test("compitezza -> compitezz", function() {deepEqual( Stem("compitezza"), "compitezz");});
test("compiti -> comp", function() {deepEqual( Stem("compiti"), "comp");});
test("compito -> comp", function() {deepEqual( Stem("compito"), "comp");});
test("compiuta -> comp", function() {deepEqual( Stem("compiuta"), "comp");});
test("compiutamente -> compiut", function() {deepEqual( Stem("compiutamente"), "compiut");});
test("compiuti -> comp", function() {deepEqual( Stem("compiuti"), "comp");});
test("compiuto -> comp", function() {deepEqual( Stem("compiuto"), "comp");});
test("complatamente -> complat", function() {deepEqual( Stem("complatamente"), "complat");});
test("compleanno -> compleann", function() {deepEqual( Stem("compleanno"), "compleann");});
test("complementare -> complement", function() {deepEqual( Stem("complementare"), "complement");});
test("complessa -> compless", function() {deepEqual( Stem("complessa"), "compless");});
test("complesse -> compless", function() {deepEqual( Stem("complesse"), "compless");});
test("complessi -> compless", function() {deepEqual( Stem("complessi"), "compless");});
test("complessione -> complession", function() {deepEqual( Stem("complessione"), "complession");});
test("complessità -> compless", function() {deepEqual( Stem("complessità"), "compless");});
test("complessiva -> compless", function() {deepEqual( Stem("complessiva"), "compless");});
test("complessivamente -> compless", function() {deepEqual( Stem("complessivamente"), "compless");});
test("complessive -> compless", function() {deepEqual( Stem("complessive"), "compless");});
test("complessivo -> compless", function() {deepEqual( Stem("complessivo"), "compless");});
test("complesso -> compless", function() {deepEqual( Stem("complesso"), "compless");});
test("completa -> complet", function() {deepEqual( Stem("completa"), "complet");});
test("completamente -> complet", function() {deepEqual( Stem("completamente"), "complet");});
test("completamento -> complet", function() {deepEqual( Stem("completamento"), "complet");});
test("completare -> complet", function() {deepEqual( Stem("completare"), "complet");});
test("completarla -> complet", function() {deepEqual( Stem("completarla"), "complet");});
test("completata -> complet", function() {deepEqual( Stem("completata"), "complet");});
test("completato -> complet", function() {deepEqual( Stem("completato"), "complet");});
test("completavano -> complet", function() {deepEqual( Stem("completavano"), "complet");});
test("completo -> complet", function() {deepEqual( Stem("completo"), "complet");});
test("complica -> complic", function() {deepEqual( Stem("complica"), "complic");});
test("complicata -> complic", function() {deepEqual( Stem("complicata"), "complic");});
test("complicate -> complic", function() {deepEqual( Stem("complicate"), "complic");});
test("complice -> complic", function() {deepEqual( Stem("complice"), "complic");});
test("complici -> complic", function() {deepEqual( Stem("complici"), "complic");});
test("complicibus -> complicibus", function() {deepEqual( Stem("complicibus"), "complicibus");});
test("complicità -> complic", function() {deepEqual( Stem("complicità"), "complic");});
test("complimentare -> compliment", function() {deepEqual( Stem("complimentare"), "compliment");});
test("complimentavan -> complimentavan", function() {deepEqual( Stem("complimentavan"), "complimentavan");});
test("complimenti -> compl", function() {deepEqual( Stem("complimenti"), "compl");});
test("complimento -> compl", function() {deepEqual( Stem("complimento"), "compl");});
test("complotto -> complott", function() {deepEqual( Stem("complotto"), "complott");});
test("complures -> complures", function() {deepEqual( Stem("complures"), "complures");});
test("compone -> compon", function() {deepEqual( Stem("compone"), "compon");});
test("componente -> component", function() {deepEqual( Stem("componente"), "component");});
test("componenti -> component", function() {deepEqual( Stem("componenti"), "component");});
test("componesse -> componess", function() {deepEqual( Stem("componesse"), "componess");});
test("componeva -> compon", function() {deepEqual( Stem("componeva"), "compon");});
test("componevano -> compon", function() {deepEqual( Stem("componevano"), "compon");});
test("compongono -> compong", function() {deepEqual( Stem("compongono"), "compong");});
test("componi -> compon", function() {deepEqual( Stem("componi"), "compon");});
test("comporne -> comporn", function() {deepEqual( Stem("comporne"), "comporn");});
test("comporranno -> comporrann", function() {deepEqual( Stem("comporranno"), "comporrann");});
test("comporre -> comporr", function() {deepEqual( Stem("comporre"), "comporr");});
test("comporta -> comport", function() {deepEqual( Stem("comporta"), "comport");});
test("comportamenti -> comport", function() {deepEqual( Stem("comportamenti"), "comport");});
test("comportamento -> comport", function() {deepEqual( Stem("comportamento"), "comport");});
test("comportanmento -> comportanment", function() {deepEqual( Stem("comportanmento"), "comportanment");});
test("comportare -> comport", function() {deepEqual( Stem("comportare"), "comport");});
test("comportassero -> comport", function() {deepEqual( Stem("comportassero"), "comport");});
test("comportato -> comport", function() {deepEqual( Stem("comportato"), "comport");});
test("comporti -> comport", function() {deepEqual( Stem("comporti"), "comport");});
test("comportino -> comportin", function() {deepEqual( Stem("comportino"), "comportin");});
test("compose -> compos", function() {deepEqual( Stem("compose"), "compos");});
test("composizione -> composizion", function() {deepEqual( Stem("composizione"), "composizion");});
test("composta -> compost", function() {deepEqual( Stem("composta"), "compost");});
test("composte -> compost", function() {deepEqual( Stem("composte"), "compost");});
test("compostezza -> compostezz", function() {deepEqual( Stem("compostezza"), "compostezz");});
test("composti -> compost", function() {deepEqual( Stem("composti"), "compost");});
test("composto -> compost", function() {deepEqual( Stem("composto"), "compost");});
test("compra -> compr", function() {deepEqual( Stem("compra"), "compr");});
test("comprando -> compr", function() {deepEqual( Stem("comprando"), "compr");});
test("comprandosi -> compr", function() {deepEqual( Stem("comprandosi"), "compr");});
test("comprar -> compr", function() {deepEqual( Stem("comprar"), "compr");});
test("comprare -> compr", function() {deepEqual( Stem("comprare"), "compr");});
test("comprarle -> compr", function() {deepEqual( Stem("comprarle"), "compr");});
test("comprarli -> compr", function() {deepEqual( Stem("comprarli"), "compr");});
test("comprarlo -> compr", function() {deepEqual( Stem("comprarlo"), "compr");});
test("comprarne -> compr", function() {deepEqual( Stem("comprarne"), "compr");});
test("comprarsi -> compr", function() {deepEqual( Stem("comprarsi"), "compr");});
test("comprassero -> compr", function() {deepEqual( Stem("comprassero"), "compr");});
test("comprate -> compr", function() {deepEqual( Stem("comprate"), "compr");});
test("comprato -> compr", function() {deepEqual( Stem("comprato"), "compr");});
test("compratore -> comprator", function() {deepEqual( Stem("compratore"), "comprator");});
test("compratori -> comprator", function() {deepEqual( Stem("compratori"), "comprator");});
test("compravano -> compr", function() {deepEqual( Stem("compravano"), "compr");});
test("compre -> compr", function() {deepEqual( Stem("compre"), "compr");});
test("comprenda -> compr", function() {deepEqual( Stem("comprenda"), "compr");});
test("comprende -> compr", function() {deepEqual( Stem("comprende"), "compr");});
test("comprenderà -> comprend", function() {deepEqual( Stem("comprenderà"), "comprend");});
test("comprendere -> comprend", function() {deepEqual( Stem("comprendere"), "comprend");});
test("comprendiamo -> comprend", function() {deepEqual( Stem("comprendiamo"), "comprend");});
test("comprendo -> compr", function() {deepEqual( Stem("comprendo"), "compr");});
test("comprendono -> comprend", function() {deepEqual( Stem("comprendono"), "comprend");});
test("comprensione -> comprension", function() {deepEqual( Stem("comprensione"), "comprension");});
test("comprensiva -> comprens", function() {deepEqual( Stem("comprensiva"), "comprens");});
test("comprensivi -> comprens", function() {deepEqual( Stem("comprensivi"), "comprens");});
test("comprerà -> compr", function() {deepEqual( Stem("comprerà"), "compr");});
test("comprerebbero -> compr", function() {deepEqual( Stem("comprerebbero"), "compr");});
test("compresa -> compres", function() {deepEqual( Stem("compresa"), "compres");});
test("comprese -> compres", function() {deepEqual( Stem("comprese"), "compres");});
test("compresero -> compreser", function() {deepEqual( Stem("compresero"), "compreser");});
test("compresi -> compres", function() {deepEqual( Stem("compresi"), "compres");});
test("compreso -> compres", function() {deepEqual( Stem("compreso"), "compres");});
test("compressa -> compress", function() {deepEqual( Stem("compressa"), "compress");});
test("compresse -> compress", function() {deepEqual( Stem("compresse"), "compress");});
test("compresso -> compress", function() {deepEqual( Stem("compresso"), "compress");});
test("compri -> compr", function() {deepEqual( Stem("compri"), "compr");});
test("comprimere -> comprim", function() {deepEqual( Stem("comprimere"), "comprim");});
test("compromesse -> compromess", function() {deepEqual( Stem("compromesse"), "compromess");});
test("compromesso -> compromess", function() {deepEqual( Stem("compromesso"), "compromess");});
test("comprometere -> compromet", function() {deepEqual( Stem("comprometere"), "compromet");});
test("compromettere -> compromett", function() {deepEqual( Stem("compromettere"), "compromett");});
test("compromettersi -> compromett", function() {deepEqual( Stem("compromettersi"), "compromett");});
test("compromissione -> compromission", function() {deepEqual( Stem("compromissione"), "compromission");});
test("comptetitive -> comptetit", function() {deepEqual( Stem("comptetitive"), "comptetit");});
test("compunta -> compunt", function() {deepEqual( Stem("compunta"), "compunt");});
test("compunto -> compunt", function() {deepEqual( Stem("compunto"), "compunt");});
test("compunzione -> compunzion", function() {deepEqual( Stem("compunzione"), "compunzion");});
test("computer -> computer", function() {deepEqual( Stem("computer"), "computer");});
test("comu -> comu", function() {deepEqual( Stem("comu"), "comu");});
test("comunale -> comunal", function() {deepEqual( Stem("comunale"), "comunal");});
test("comunali -> comunal", function() {deepEqual( Stem("comunali"), "comunal");});
test("comune -> comun", function() {deepEqual( Stem("comune"), "comun");});
test("comunemente -> comun", function() {deepEqual( Stem("comunemente"), "comun");});
test("comuni -> comun", function() {deepEqual( Stem("comuni"), "comun");});
test("comunica -> comun", function() {deepEqual( Stem("comunica"), "comun");});
test("comunicare -> comunic", function() {deepEqual( Stem("comunicare"), "comunic");});
test("comunicargli -> comunic", function() {deepEqual( Stem("comunicargli"), "comunic");});
test("comunicarle -> comunic", function() {deepEqual( Stem("comunicarle"), "comunic");});
test("comunicata -> comunic", function() {deepEqual( Stem("comunicata"), "comunic");});
test("comunicate -> comunic", function() {deepEqual( Stem("comunicate"), "comunic");});
test("comunicati -> comunic", function() {deepEqual( Stem("comunicati"), "comunic");});
test("comunicatigli -> comunicatigl", function() {deepEqual( Stem("comunicatigli"), "comunicatigl");});
test("comunicativo -> comun", function() {deepEqual( Stem("comunicativo"), "comun");});
test("comunicato -> comunic", function() {deepEqual( Stem("comunicato"), "comunic");});
test("comunicavano -> comunic", function() {deepEqual( Stem("comunicavano"), "comunic");});
test("comunicazione -> comun", function() {deepEqual( Stem("comunicazione"), "comun");});
test("comunicazioni -> comun", function() {deepEqual( Stem("comunicazioni"), "comun");});
test("comunicò -> comunic", function() {deepEqual( Stem("comunicò"), "comunic");});
test("comunismo -> comun", function() {deepEqual( Stem("comunismo"), "comun");});
test("comunista -> comun", function() {deepEqual( Stem("comunista"), "comun");});
test("comuniste -> comun", function() {deepEqual( Stem("comuniste"), "comun");});
test("comunisti -> comun", function() {deepEqual( Stem("comunisti"), "comun");});
test("comunità -> comun", function() {deepEqual( Stem("comunità"), "comun");});
test("comunitari -> comunitar", function() {deepEqual( Stem("comunitari"), "comunitar");});
test("comunitaria -> comunitar", function() {deepEqual( Stem("comunitaria"), "comunitar");});
test("comunitarie -> comunitar", function() {deepEqual( Stem("comunitarie"), "comunitar");});
test("comunitario -> comunitar", function() {deepEqual( Stem("comunitario"), "comunitar");});
test("comunque -> comunqu", function() {deepEqual( Stem("comunque"), "comunqu");});
test("comuntiario -> comuntiar", function() {deepEqual( Stem("comuntiario"), "comuntiar");});
test("comuque -> comuqu", function() {deepEqual( Stem("comuque"), "comuqu");});
test("con -> con", function() {deepEqual( Stem("con"), "con");});
test("conai -> cona", function() {deepEqual( Stem("conai"), "cona");});
test("conakry -> conakry", function() {deepEqual( Stem("conakry"), "conakry");});
test("conan -> conan", function() {deepEqual( Stem("conan"), "conan");});
test("conca -> conc", function() {deepEqual( Stem("conca"), "conc");});
test("concatenata -> concaten", function() {deepEqual( Stem("concatenata"), "concaten");});
test("concatenazione -> concaten", function() {deepEqual( Stem("concatenazione"), "concaten");});
test("concede -> conced", function() {deepEqual( Stem("concede"), "conced");});
test("concedendo -> conced", function() {deepEqual( Stem("concedendo"), "conced");});
test("conceder -> conceder", function() {deepEqual( Stem("conceder"), "conceder");});
test("concederà -> conced", function() {deepEqual( Stem("concederà"), "conced");});
test("concedere -> conced", function() {deepEqual( Stem("concedere"), "conced");});
test("concedergli -> conced", function() {deepEqual( Stem("concedergli"), "conced");});
test("concedete -> conced", function() {deepEqual( Stem("concedete"), "conced");});
test("concedetegli -> concedetegl", function() {deepEqual( Stem("concedetegli"), "concedetegl");});
test("concedo -> conced", function() {deepEqual( Stem("concedo"), "conced");});
test("concento -> concent", function() {deepEqual( Stem("concento"), "concent");});
test("concentramenti -> concentr", function() {deepEqual( Stem("concentramenti"), "concentr");});
test("concentramento -> concentr", function() {deepEqual( Stem("concentramento"), "concentr");});
test("concentrandosi -> concentr", function() {deepEqual( Stem("concentrandosi"), "concentr");});
test("concentrano -> concentr", function() {deepEqual( Stem("concentrano"), "concentr");});
test("concentrarci -> concentr", function() {deepEqual( Stem("concentrarci"), "concentr");});
test("concentrare -> concentr", function() {deepEqual( Stem("concentrare"), "concentr");});
test("concentrarsi -> concentr", function() {deepEqual( Stem("concentrarsi"), "concentr");});
test("concentrata -> concentr", function() {deepEqual( Stem("concentrata"), "concentr");});
test("concentrate -> concentr", function() {deepEqual( Stem("concentrate"), "concentr");});
test("concentratè -> concentrat", function() {deepEqual( Stem("concentratè"), "concentrat");});
test("concentrati -> concentr", function() {deepEqual( Stem("concentrati"), "concentr");});
test("concentrazione -> concentr", function() {deepEqual( Stem("concentrazione"), "concentr");});
test("concentrazioni -> concentr", function() {deepEqual( Stem("concentrazioni"), "concentr");});
test("concenzione -> concenzion", function() {deepEqual( Stem("concenzione"), "concenzion");});
test("concepire -> concep", function() {deepEqual( Stem("concepire"), "concep");});
test("concepirsi -> concep", function() {deepEqual( Stem("concepirsi"), "concep");});
test("concepita -> concep", function() {deepEqual( Stem("concepita"), "concep");});
test("concepite -> concep", function() {deepEqual( Stem("concepite"), "concep");});
test("concepiva -> concep", function() {deepEqual( Stem("concepiva"), "concep");});
test("concerne -> conc", function() {deepEqual( Stem("concerne"), "conc");});
test("concernente -> concernent", function() {deepEqual( Stem("concernente"), "concernent");});
test("concernenti -> concernent", function() {deepEqual( Stem("concernenti"), "concernent");});
test("concertar -> concert", function() {deepEqual( Stem("concertar"), "concert");});
test("concertare -> concert", function() {deepEqual( Stem("concertare"), "concert");});
test("concertaron -> concertaron", function() {deepEqual( Stem("concertaron"), "concertaron");});
test("concertarono -> concert", function() {deepEqual( Stem("concertarono"), "concert");});
test("concertarsi -> concert", function() {deepEqual( Stem("concertarsi"), "concert");});
test("concertata -> concert", function() {deepEqual( Stem("concertata"), "concert");});
test("concertato -> concert", function() {deepEqual( Stem("concertato"), "concert");});
test("concerti -> conc", function() {deepEqual( Stem("concerti"), "conc");});
test("concerto -> concert", function() {deepEqual( Stem("concerto"), "concert");});
test("concertò -> concert", function() {deepEqual( Stem("concertò"), "concert");});
test("concessa -> concess", function() {deepEqual( Stem("concessa"), "concess");});
test("concesse -> concess", function() {deepEqual( Stem("concesse"), "concess");});
test("concessi -> concess", function() {deepEqual( Stem("concessi"), "concess");});
test("concessionari -> concessionar", function() {deepEqual( Stem("concessionari"), "concessionar");});
test("concessionarie -> concessionar", function() {deepEqual( Stem("concessionarie"), "concessionar");});
test("concessionario -> concessionar", function() {deepEqual( Stem("concessionario"), "concessionar");});
test("concessione -> concession", function() {deepEqual( Stem("concessione"), "concession");});
test("concessioni -> concession", function() {deepEqual( Stem("concessioni"), "concession");});
test("concesso -> concess", function() {deepEqual( Stem("concesso"), "concess");});
test("concetti -> concett", function() {deepEqual( Stem("concetti"), "concett");});
test("concettini -> concettin", function() {deepEqual( Stem("concettini"), "concettin");});
test("concetto -> concett", function() {deepEqual( Stem("concetto"), "concett");});
test("concezione -> concezion", function() {deepEqual( Stem("concezione"), "concezion");});
test("conchiglie -> conchigl", function() {deepEqual( Stem("conchiglie"), "conchigl");});
test("conchiude -> conchiud", function() {deepEqual( Stem("conchiude"), "conchiud");});
test("conchiudere -> conchiud", function() {deepEqual( Stem("conchiudere"), "conchiud");});
test("concian -> concian", function() {deepEqual( Stem("concian"), "concian");});
test("conciato -> conc", function() {deepEqual( Stem("conciato"), "conc");});
test("concigliarglieli -> concigl", function() {deepEqual( Stem("concigliarglieli"), "concigl");});
test("conciliare -> concil", function() {deepEqual( Stem("conciliare"), "concil");});
test("conciliari -> conciliar", function() {deepEqual( Stem("conciliari"), "conciliar");});
test("conciliava -> concil", function() {deepEqual( Stem("conciliava"), "concil");});
test("conciliazionè -> conciliazion", function() {deepEqual( Stem("conciliazionè"), "conciliazion");});
test("concio -> conc", function() {deepEqual( Stem("concio"), "conc");});
test("conciò -> conc", function() {deepEqual( Stem("conciò"), "conc");});
test("conciso -> concis", function() {deepEqual( Stem("conciso"), "concis");});
test("concitarsi -> concit", function() {deepEqual( Stem("concitarsi"), "concit");});
test("concitata -> concit", function() {deepEqual( Stem("concitata"), "concit");});
test("concitato -> concit", function() {deepEqual( Stem("concitato"), "concit");});
test("concittadina -> concittadin", function() {deepEqual( Stem("concittadina"), "concittadin");});
test("conclamati -> conclam", function() {deepEqual( Stem("conclamati"), "conclam");});
test("conclavi -> concl", function() {deepEqual( Stem("conclavi"), "concl");});
test("concluda -> conclud", function() {deepEqual( Stem("concluda"), "conclud");});
test("conclude -> conclud", function() {deepEqual( Stem("conclude"), "conclud");});
test("concludendo -> conclud", function() {deepEqual( Stem("concludendo"), "conclud");});
test("concludenti -> concludent", function() {deepEqual( Stem("concludenti"), "concludent");});
test("concluder -> concluder", function() {deepEqual( Stem("concluder"), "concluder");});
test("concluderà -> conclud", function() {deepEqual( Stem("concluderà"), "conclud");});
test("concludere -> conclud", function() {deepEqual( Stem("concludere"), "conclud");});
test("concludeva -> conclud", function() {deepEqual( Stem("concludeva"), "conclud");});
test("concludon -> concludon", function() {deepEqual( Stem("concludon"), "concludon");});
test("concludono -> conclud", function() {deepEqual( Stem("concludono"), "conclud");});
test("conclusa -> conclus", function() {deepEqual( Stem("conclusa"), "conclus");});
test("conclusasi -> conclusas", function() {deepEqual( Stem("conclusasi"), "conclusas");});
test("concluse -> conclus", function() {deepEqual( Stem("concluse"), "conclus");});
test("conclusero -> concluser", function() {deepEqual( Stem("conclusero"), "concluser");});
test("conclusesi -> concluses", function() {deepEqual( Stem("conclusesi"), "concluses");});
test("conclusi -> conclus", function() {deepEqual( Stem("conclusi"), "conclus");});
test("conclusione -> conclusion", function() {deepEqual( Stem("conclusione"), "conclusion");});
test("conclusioni -> conclusion", function() {deepEqual( Stem("conclusioni"), "conclusion");});
test("conclusisi -> conclusis", function() {deepEqual( Stem("conclusisi"), "conclusis");});
test("conclusiva -> conclus", function() {deepEqual( Stem("conclusiva"), "conclus");});
test("conclusivo -> conclus", function() {deepEqual( Stem("conclusivo"), "conclus");});
test("concluso -> conclus", function() {deepEqual( Stem("concluso"), "conclus");});
test("concomitanza -> concomit", function() {deepEqual( Stem("concomitanza"), "concomit");});
test("concordando -> concord", function() {deepEqual( Stem("concordando"), "concord");});
test("concordano -> concord", function() {deepEqual( Stem("concordano"), "concord");});
test("concordare -> concord", function() {deepEqual( Stem("concordare"), "concord");});
test("concordata -> concord", function() {deepEqual( Stem("concordata"), "concord");});
test("concordate -> concord", function() {deepEqual( Stem("concordate"), "concord");});
test("concordati -> concord", function() {deepEqual( Stem("concordati"), "concord");});
test("concordato -> concord", function() {deepEqual( Stem("concordato"), "concord");});
test("concordi -> concord", function() {deepEqual( Stem("concordi"), "concord");});
test("concordiamo -> concord", function() {deepEqual( Stem("concordiamo"), "concord");});
test("concorrendo -> concorr", function() {deepEqual( Stem("concorrendo"), "concorr");});
test("concorrente -> concorrent", function() {deepEqual( Stem("concorrente"), "concorrent");});
test("concorrenti -> concorrent", function() {deepEqual( Stem("concorrenti"), "concorrent");});
test("concorrenza -> concorrent", function() {deepEqual( Stem("concorrenza"), "concorrent");});
test("concorrenziale -> concorrenzial", function() {deepEqual( Stem("concorrenziale"), "concorrenzial");});
test("concorrenzialità -> concorrenzial", function() {deepEqual( Stem("concorrenzialità"), "concorrenzial");});
test("concorrere -> concorr", function() {deepEqual( Stem("concorrere"), "concorr");});
test("concorreva -> concorr", function() {deepEqual( Stem("concorreva"), "concorr");});
test("concorsero -> concorser", function() {deepEqual( Stem("concorsero"), "concorser");});
test("concorsi -> concors", function() {deepEqual( Stem("concorsi"), "concors");});
test("concorso -> concors", function() {deepEqual( Stem("concorso"), "concors");});
test("concorsuale -> concorsual", function() {deepEqual( Stem("concorsuale"), "concorsual");});
test("concreta -> concret", function() {deepEqual( Stem("concreta"), "concret");});
test("concretament -> concretament", function() {deepEqual( Stem("concretament"), "concretament");});
test("concretamente -> concret", function() {deepEqual( Stem("concretamente"), "concret");});
test("concrete -> concr", function() {deepEqual( Stem("concrete"), "concr");});
test("concreti -> concret", function() {deepEqual( Stem("concreti"), "concret");});
test("concretizzare -> concretizz", function() {deepEqual( Stem("concretizzare"), "concretizz");});
test("concretizzato -> concretizz", function() {deepEqual( Stem("concretizzato"), "concretizz");});
test("concretizzazione -> concretizz", function() {deepEqual( Stem("concretizzazione"), "concretizz");});
test("concretizzerà -> concretizz", function() {deepEqual( Stem("concretizzerà"), "concretizz");});
test("concreto -> concret", function() {deepEqual( Stem("concreto"), "concret");});
test("concussione -> concussion", function() {deepEqual( Stem("concussione"), "concussion");});
test("concussioni -> concussion", function() {deepEqual( Stem("concussioni"), "concussion");});
test("cond -> cond", function() {deepEqual( Stem("cond"), "cond");});
test("condanna -> condann", function() {deepEqual( Stem("condanna"), "condann");});
test("condannare -> condann", function() {deepEqual( Stem("condannare"), "condann");});
test("condannarmi -> condann", function() {deepEqual( Stem("condannarmi"), "condann");});
test("condannata -> condann", function() {deepEqual( Stem("condannata"), "condann");});
test("condannati -> condann", function() {deepEqual( Stem("condannati"), "condann");});
test("condannato -> condann", function() {deepEqual( Stem("condannato"), "condann");});
test("condanne -> condann", function() {deepEqual( Stem("condanne"), "condann");});
test("condannerebbe -> condann", function() {deepEqual( Stem("condannerebbe"), "condann");});
test("conde -> cond", function() {deepEqual( Stem("conde"), "cond");});
test("condé -> cond", function() {deepEqual( Stem("condé"), "cond");});
test("condensato -> condens", function() {deepEqual( Stem("condensato"), "condens");});
test("condicio -> condic", function() {deepEqual( Stem("condicio"), "condic");});
test("condiciò -> condic", function() {deepEqual( Stem("condiciò"), "condic");});
test("condirettore -> condirettor", function() {deepEqual( Stem("condirettore"), "condirettor");});
test("condiscendente -> condiscendent", function() {deepEqual( Stem("condiscendente"), "condiscendent");});
test("condiscendenza -> condiscendent", function() {deepEqual( Stem("condiscendenza"), "condiscendent");});
test("condiscendere -> condiscend", function() {deepEqual( Stem("condiscendere"), "condiscend");});
test("condita -> cond", function() {deepEqual( Stem("condita"), "cond");});
test("condite -> cond", function() {deepEqual( Stem("condite"), "cond");});
test("conditi -> cond", function() {deepEqual( Stem("conditi"), "cond");});
test("conditio -> condit", function() {deepEqual( Stem("conditio"), "condit");});
test("condivide -> condivid", function() {deepEqual( Stem("condivide"), "condivid");});
test("condivideranno -> condivid", function() {deepEqual( Stem("condivideranno"), "condivid");});
test("condivido -> condivid", function() {deepEqual( Stem("condivido"), "condivid");});
test("condivisa -> condivis", function() {deepEqual( Stem("condivisa"), "condivis");});
test("condivise -> condivis", function() {deepEqual( Stem("condivise"), "condivis");});
test("condiviso -> condivis", function() {deepEqual( Stem("condiviso"), "condivis");});
test("condizion -> condizion", function() {deepEqual( Stem("condizion"), "condizion");});
test("condiziona -> condizion", function() {deepEqual( Stem("condiziona"), "condizion");});
test("condizionante -> condizion", function() {deepEqual( Stem("condizionante"), "condizion");});
test("condizionare -> condizion", function() {deepEqual( Stem("condizionare"), "condizion");});
test("condizionarla -> condizion", function() {deepEqual( Stem("condizionarla"), "condizion");});
test("condizionata -> condizion", function() {deepEqual( Stem("condizionata"), "condizion");});
test("condizionati -> condizion", function() {deepEqual( Stem("condizionati"), "condizion");});
test("condizionato -> condizion", function() {deepEqual( Stem("condizionato"), "condizion");});
test("condizione -> condizion", function() {deepEqual( Stem("condizione"), "condizion");});
test("condizioni -> condizion", function() {deepEqual( Stem("condizioni"), "condizion");});
test("condoglianze -> condogl", function() {deepEqual( Stem("condoglianze"), "condogl");});
test("condolersi -> condol", function() {deepEqual( Stem("condolersi"), "condol");});
test("condoluto -> condol", function() {deepEqual( Stem("condoluto"), "condol");});
test("condominio -> condomin", function() {deepEqual( Stem("condominio"), "condomin");});
test("condono -> cond", function() {deepEqual( Stem("condono"), "cond");});
test("condor -> condor", function() {deepEqual( Stem("condor"), "condor");});
test("condotta -> condott", function() {deepEqual( Stem("condotta"), "condott");});
test("condotte -> condott", function() {deepEqual( Stem("condotte"), "condott");});
test("condotti -> condott", function() {deepEqual( Stem("condotti"), "condott");});
test("condottiere -> condott", function() {deepEqual( Stem("condottiere"), "condott");});
test("condottieri -> condottier", function() {deepEqual( Stem("condottieri"), "condottier");});
test("condottiero -> condottier", function() {deepEqual( Stem("condottiero"), "condottier");});
test("condotto -> condott", function() {deepEqual( Stem("condotto"), "condott");});
test("conduca -> conduc", function() {deepEqual( Stem("conduca"), "conduc");});
test("conduce -> conduc", function() {deepEqual( Stem("conduce"), "conduc");});
test("conducendo -> conduc", function() {deepEqual( Stem("conducendo"), "conduc");});
test("conducendosi -> conduc", function() {deepEqual( Stem("conducendosi"), "conduc");});
test("conducesse -> conducess", function() {deepEqual( Stem("conducesse"), "conducess");});
test("conducete -> conduc", function() {deepEqual( Stem("conducete"), "conduc");});
test("conduceva -> conduc", function() {deepEqual( Stem("conduceva"), "conduc");});
test("conducevan -> conducevan", function() {deepEqual( Stem("conducevan"), "conducevan");});
test("conducimi -> conducim", function() {deepEqual( Stem("conducimi"), "conducim");});
test("conduco -> conduc", function() {deepEqual( Stem("conduco"), "conduc");});
test("conducono -> conduc", function() {deepEqual( Stem("conducono"), "conduc");});
test("condur -> condur", function() {deepEqual( Stem("condur"), "condur");});
test("condurla -> condurl", function() {deepEqual( Stem("condurla"), "condurl");});
test("condurli -> condurl", function() {deepEqual( Stem("condurli"), "condurl");});
test("condurlo -> condurl", function() {deepEqual( Stem("condurlo"), "condurl");});
test("condurmi -> condurm", function() {deepEqual( Stem("condurmi"), "condurm");});
test("condurne -> condurn", function() {deepEqual( Stem("condurne"), "condurn");});
test("condurrà -> condurr", function() {deepEqual( Stem("condurrà"), "condurr");});
test("condurrai -> condurra", function() {deepEqual( Stem("condurrai"), "condurra");});
test("condurre -> condurr", function() {deepEqual( Stem("condurre"), "condurr");});
test("condurrebbero -> condurrebber", function() {deepEqual( Stem("condurrebbero"), "condurrebber");});
test("condurremo -> condurrem", function() {deepEqual( Stem("condurremo"), "condurrem");});
test("condurrò -> condurr", function() {deepEqual( Stem("condurrò"), "condurr");});
test("condursi -> condurs", function() {deepEqual( Stem("condursi"), "condurs");});
test("condurvi -> condurv", function() {deepEqual( Stem("condurvi"), "condurv");});
test("condusse -> conduss", function() {deepEqual( Stem("condusse"), "conduss");});
test("conduttore -> conduttor", function() {deepEqual( Stem("conduttore"), "conduttor");});
test("conduttori -> conduttor", function() {deepEqual( Stem("conduttori"), "conduttor");});
test("conduzione -> conduzion", function() {deepEqual( Stem("conduzione"), "conduzion");});
test("conegliano -> conegl", function() {deepEqual( Stem("conegliano"), "conegl");});
test("conf -> conf", function() {deepEqual( Stem("conf"), "conf");});
test("confapi -> confap", function() {deepEqual( Stem("confapi"), "confap");});
test("confartigianato -> confartigian", function() {deepEqual( Stem("confartigianato"), "confartigian");});
test("confcooperative -> confcooper", function() {deepEqual( Stem("confcooperative"), "confcooper");});
test("confederale -> confederal", function() {deepEqual( Stem("confederale"), "confederal");});
test("confederali -> confederal", function() {deepEqual( Stem("confederali"), "confederal");});
test("confederalismo -> confederal", function() {deepEqual( Stem("confederalismo"), "confederal");});
test("confederazione -> confeder", function() {deepEqual( Stem("confederazione"), "confeder");});
test("confedilizia -> confediliz", function() {deepEqual( Stem("confedilizia"), "confediliz");});
test("conferenza -> conferent", function() {deepEqual( Stem("conferenza"), "conferent");});
test("conferenze -> conferent", function() {deepEqual( Stem("conferenze"), "conferent");});
test("conferì -> confer", function() {deepEqual( Stem("conferì"), "confer");});
test("conferimento -> confer", function() {deepEqual( Stem("conferimento"), "confer");});
test("conferire -> confer", function() {deepEqual( Stem("conferire"), "confer");});
test("conferito -> confer", function() {deepEqual( Stem("conferito"), "confer");});
test("conferitogli -> conferitogl", function() {deepEqual( Stem("conferitogli"), "conferitogl");});
test("conferma -> conferm", function() {deepEqual( Stem("conferma"), "conferm");});
test("confermando -> conferm", function() {deepEqual( Stem("confermando"), "conferm");});
test("confermandosi -> conferm", function() {deepEqual( Stem("confermandosi"), "conferm");});
test("confermano -> conferm", function() {deepEqual( Stem("confermano"), "conferm");});
test("confermare -> conferm", function() {deepEqual( Stem("confermare"), "conferm");});
test("confermarla -> conferm", function() {deepEqual( Stem("confermarla"), "conferm");});
test("confermarlo -> conferm", function() {deepEqual( Stem("confermarlo"), "conferm");});
test("confermarsi -> conferm", function() {deepEqual( Stem("confermarsi"), "conferm");});
test("confermata -> conferm", function() {deepEqual( Stem("confermata"), "conferm");});
test("confermati -> conferm", function() {deepEqual( Stem("confermati"), "conferm");});
test("confermato -> conferm", function() {deepEqual( Stem("confermato"), "conferm");});
test("confermava -> conferm", function() {deepEqual( Stem("confermava"), "conferm");});
test("conferme -> conferm", function() {deepEqual( Stem("conferme"), "conferm");});
test("confermerà -> conferm", function() {deepEqual( Stem("confermerà"), "conferm");});
test("confermi -> conf", function() {deepEqual( Stem("confermi"), "conf");});
test("confermo -> conferm", function() {deepEqual( Stem("confermo"), "conferm");});
test("confermò -> conferm", function() {deepEqual( Stem("confermò"), "conferm");});
test("confessa -> confess", function() {deepEqual( Stem("confessa"), "confess");});
test("confessar -> confess", function() {deepEqual( Stem("confessar"), "confess");});
test("confessare -> confess", function() {deepEqual( Stem("confessare"), "confess");});
test("confessarla -> confess", function() {deepEqual( Stem("confessarla"), "confess");});
test("confessarle -> confess", function() {deepEqual( Stem("confessarle"), "confess");});
test("confessarmi -> confess", function() {deepEqual( Stem("confessarmi"), "confess");});
test("confessarsi -> confess", function() {deepEqual( Stem("confessarsi"), "confess");});
test("confessata -> confess", function() {deepEqual( Stem("confessata"), "confess");});
test("confessato -> confess", function() {deepEqual( Stem("confessato"), "confess");});
test("confessava -> confess", function() {deepEqual( Stem("confessava"), "confess");});
test("confessi -> confess", function() {deepEqual( Stem("confessi"), "confess");});
test("confessiate -> confess", function() {deepEqual( Stem("confessiate"), "confess");});
test("confessione -> confession", function() {deepEqual( Stem("confessione"), "confession");});
test("confessioni -> confession", function() {deepEqual( Stem("confessioni"), "confession");});
test("confesso -> confess", function() {deepEqual( Stem("confesso"), "confess");});
test("confessore -> confessor", function() {deepEqual( Stem("confessore"), "confessor");});
test("confessori -> confessor", function() {deepEqual( Stem("confessori"), "confessor");});
test("confetti -> confett", function() {deepEqual( Stem("confetti"), "confett");});
test("confezionamento -> confezion", function() {deepEqual( Stem("confezionamento"), "confezion");});
test("confezionano -> confezion", function() {deepEqual( Stem("confezionano"), "confezion");});
test("confezioni -> confezion", function() {deepEqual( Stem("confezioni"), "confezion");});
test("conficcata -> conficc", function() {deepEqual( Stem("conficcata"), "conficc");});
test("conficique -> conficiqu", function() {deepEqual( Stem("conficique"), "conficiqu");});
test("confida -> confid", function() {deepEqual( Stem("confida"), "confid");});
test("confidano -> confid", function() {deepEqual( Stem("confidano"), "confid");});
test("confidare -> confid", function() {deepEqual( Stem("confidare"), "confid");});
test("confidarsi -> confid", function() {deepEqual( Stem("confidarsi"), "confid");});
test("confidarvi -> confid", function() {deepEqual( Stem("confidarvi"), "confid");});
test("confidate -> confid", function() {deepEqual( Stem("confidate"), "confid");});
test("confidati -> confid", function() {deepEqual( Stem("confidati"), "confid");});
test("confidato -> confid", function() {deepEqual( Stem("confidato"), "confid");});
test("confidavano -> confid", function() {deepEqual( Stem("confidavano"), "confid");});
test("confidente -> confident", function() {deepEqual( Stem("confidente"), "confident");});
test("confidenti -> confident", function() {deepEqual( Stem("confidenti"), "confident");});
test("confidenza -> confident", function() {deepEqual( Stem("confidenza"), "confident");});
test("confidenze -> confident", function() {deepEqual( Stem("confidenze"), "confident");});
test("confidi -> confid", function() {deepEqual( Stem("confidi"), "confid");});
test("confido -> confid", function() {deepEqual( Stem("confido"), "confid");});
test("configurare -> configur", function() {deepEqual( Stem("configurare"), "configur");});
test("configurerebbe -> configur", function() {deepEqual( Stem("configurerebbe"), "configur");});
test("confina -> confin", function() {deepEqual( Stem("confina"), "confin");});
test("confinante -> confin", function() {deepEqual( Stem("confinante"), "confin");});
test("confinanti -> confin", function() {deepEqual( Stem("confinanti"), "confin");});
test("confinarie -> confinar", function() {deepEqual( Stem("confinarie"), "confinar");});
test("confinata -> confin", function() {deepEqual( Stem("confinata"), "confin");});
test("confinate -> confin", function() {deepEqual( Stem("confinate"), "confin");});
test("confindustria -> confindustr", function() {deepEqual( Stem("confindustria"), "confindustr");});
test("confine -> confin", function() {deepEqual( Stem("confine"), "confin");});
test("confini -> confin", function() {deepEqual( Stem("confini"), "confin");});
test("confirmata -> confirm", function() {deepEqual( Stem("confirmata"), "confirm");});
test("confisca -> conf", function() {deepEqual( Stem("confisca"), "conf");});
test("conflitti -> conflitt", function() {deepEqual( Stem("conflitti"), "conflitt");});
test("conflitto -> conflitt", function() {deepEqual( Stem("conflitto"), "conflitt");});
test("conflittualità -> conflittual", function() {deepEqual( Stem("conflittualità"), "conflittual");});
test("confluente -> confluent", function() {deepEqual( Stem("confluente"), "confluent");});
test("confluenza -> confluenz", function() {deepEqual( Stem("confluenza"), "confluenz");});
test("confluiscano -> conflu", function() {deepEqual( Stem("confluiscano"), "conflu");});
test("confluiti -> conflu", function() {deepEqual( Stem("confluiti"), "conflu");});
test("confonde -> confond", function() {deepEqual( Stem("confonde"), "confond");});
test("confondendo -> confond", function() {deepEqual( Stem("confondendo"), "confond");});
test("confonder -> confonder", function() {deepEqual( Stem("confonder"), "confonder");});
test("confondere -> confond", function() {deepEqual( Stem("confondere"), "confond");});
test("confondergli -> confond", function() {deepEqual( Stem("confondergli"), "confond");});
test("confondermi -> confond", function() {deepEqual( Stem("confondermi"), "confond");});
test("confondersi -> confond", function() {deepEqual( Stem("confondersi"), "confond");});
test("confondessimo -> confondessim", function() {deepEqual( Stem("confondessimo"), "confondessim");});
test("confondeva -> confond", function() {deepEqual( Stem("confondeva"), "confond");});
test("confondevano -> confond", function() {deepEqual( Stem("confondevano"), "confond");});
test("confondono -> confond", function() {deepEqual( Stem("confondono"), "confond");});
test("conformarci -> conform", function() {deepEqual( Stem("conformarci"), "conform");});
test("conformarsi -> conform", function() {deepEqual( Stem("conformarsi"), "conform");});
test("conforme -> conform", function() {deepEqual( Stem("conforme"), "conform");});
test("conformemente -> conform", function() {deepEqual( Stem("conformemente"), "conform");});
test("conformi -> conform", function() {deepEqual( Stem("conformi"), "conform");});
test("conformità -> conform", function() {deepEqual( Stem("conformità"), "conform");});
test("confortando -> confort", function() {deepEqual( Stem("confortando"), "confort");});
test("confortante -> confort", function() {deepEqual( Stem("confortante"), "confort");});
test("confortarla -> confort", function() {deepEqual( Stem("confortarla"), "confort");});
test("confortava -> confort", function() {deepEqual( Stem("confortava"), "confort");});
test("conforti -> confort", function() {deepEqual( Stem("conforti"), "confort");});
test("conforto -> confort", function() {deepEqual( Stem("conforto"), "confort");});
test("confratelli -> confratell", function() {deepEqual( Stem("confratelli"), "confratell");});
test("confratello -> confratell", function() {deepEqual( Stem("confratello"), "confratell");});
test("confraternite -> confratern", function() {deepEqual( Stem("confraternite"), "confratern");});
test("confrontando -> confront", function() {deepEqual( Stem("confrontando"), "confront");});
test("confrontano -> confront", function() {deepEqual( Stem("confrontano"), "confront");});
test("confrontare -> confront", function() {deepEqual( Stem("confrontare"), "confront");});
test("confrontarsi -> confront", function() {deepEqual( Stem("confrontarsi"), "confront");});
test("confrontata -> confront", function() {deepEqual( Stem("confrontata"), "confront");});
test("confronti -> confront", function() {deepEqual( Stem("confronti"), "confront");});
test("confrontino -> confrontin", function() {deepEqual( Stem("confrontino"), "confrontin");});
test("confronto -> confront", function() {deepEqual( Stem("confronto"), "confront");});
test("confrontò -> confront", function() {deepEqual( Stem("confrontò"), "confront");});
test("confsal -> confsal", function() {deepEqual( Stem("confsal"), "confsal");});
test("confusa -> confus", function() {deepEqual( Stem("confusa"), "confus");});
test("confusamente -> confus", function() {deepEqual( Stem("confusamente"), "confus");});
test("confuse -> confus", function() {deepEqual( Stem("confuse"), "confus");});
test("confusetto -> confusett", function() {deepEqual( Stem("confusetto"), "confusett");});
test("confusi -> confus", function() {deepEqual( Stem("confusi"), "confus");});
test("confusion -> confusion", function() {deepEqual( Stem("confusion"), "confusion");});
test("confusionaria -> confusionar", function() {deepEqual( Stem("confusionaria"), "confusionar");});
test("confusione -> confusion", function() {deepEqual( Stem("confusione"), "confusion");});
test("confusioni -> confusion", function() {deepEqual( Stem("confusioni"), "confusion");});
test("confuso -> confus", function() {deepEqual( Stem("confuso"), "confus");});
test("congedandolo -> conged", function() {deepEqual( Stem("congedandolo"), "conged");});
test("congedare -> conged", function() {deepEqual( Stem("congedare"), "conged");});
test("congedava -> conged", function() {deepEqual( Stem("congedava"), "conged");});
test("congedi -> conged", function() {deepEqual( Stem("congedi"), "conged");});
test("congedo -> conged", function() {deepEqual( Stem("congedo"), "conged");});
test("congegnate -> congegn", function() {deepEqual( Stem("congegnate"), "congegn");});
test("congegni -> congegn", function() {deepEqual( Stem("congegni"), "congegn");});
test("congelando -> congel", function() {deepEqual( Stem("congelando"), "congel");});
test("congelare -> congel", function() {deepEqual( Stem("congelare"), "congel");});
test("congestione -> congestion", function() {deepEqual( Stem("congestione"), "congestion");});
test("congettura -> congettur", function() {deepEqual( Stem("congettura"), "congettur");});
test("congetturali -> congettural", function() {deepEqual( Stem("congetturali"), "congettural");});
test("congetturando -> congettur", function() {deepEqual( Stem("congetturando"), "congettur");});
test("congetturarlo -> congettur", function() {deepEqual( Stem("congetturarlo"), "congettur");});
test("congetturato -> congettur", function() {deepEqual( Stem("congetturato"), "congettur");});
test("congetture -> congettur", function() {deepEqual( Stem("congetture"), "congettur");});
test("congetturò -> congettur", function() {deepEqual( Stem("congetturò"), "congettur");});
test("congiontione -> congiontion", function() {deepEqual( Stem("congiontione"), "congiontion");});
test("congiunge -> congiung", function() {deepEqual( Stem("congiunge"), "congiung");});
test("congiuntamente -> congiunt", function() {deepEqual( Stem("congiuntamente"), "congiunt");});
test("congiunte -> congiunt", function() {deepEqual( Stem("congiunte"), "congiunt");});
test("congiunti -> congiunt", function() {deepEqual( Stem("congiunti"), "congiunt");});
test("congiunto -> congiunt", function() {deepEqual( Stem("congiunto"), "congiunt");});
test("congiuntura -> congiuntur", function() {deepEqual( Stem("congiuntura"), "congiuntur");});
test("congiunturale -> congiuntural", function() {deepEqual( Stem("congiunturale"), "congiuntural");});
test("congiunzione -> congiunzion", function() {deepEqual( Stem("congiunzione"), "congiunzion");});
test("congiunzioni -> congiunzion", function() {deepEqual( Stem("congiunzioni"), "congiunzion");});
test("congiura -> congiur", function() {deepEqual( Stem("congiura"), "congiur");});
test("congiurare -> congiur", function() {deepEqual( Stem("congiurare"), "congiur");});
test("congiurata -> congiur", function() {deepEqual( Stem("congiurata"), "congiur");});
test("congiurate -> congiur", function() {deepEqual( Stem("congiurate"), "congiur");});
test("congolese -> congoles", function() {deepEqual( Stem("congolese"), "congoles");});
test("congratularsi -> congratul", function() {deepEqual( Stem("congratularsi"), "congratul");});
test("congratulato -> congratul", function() {deepEqual( Stem("congratulato"), "congratul");});
test("congratulava -> congratul", function() {deepEqual( Stem("congratulava"), "congratul");});
test("congratulazione -> congratul", function() {deepEqual( Stem("congratulazione"), "congratul");});
test("congratulazioni -> congratul", function() {deepEqual( Stem("congratulazioni"), "congratul");});
test("congratulò -> congratul", function() {deepEqual( Stem("congratulò"), "congratul");});
test("congregati -> congreg", function() {deepEqual( Stem("congregati"), "congreg");});
test("congressi -> congress", function() {deepEqual( Stem("congressi"), "congress");});
test("congressista -> congress", function() {deepEqual( Stem("congressista"), "congress");});
test("congressisti -> congress", function() {deepEqual( Stem("congressisti"), "congress");});
test("congresso -> congress", function() {deepEqual( Stem("congresso"), "congress");});
test("congressuale -> congressual", function() {deepEqual( Stem("congressuale"), "congressual");});
test("congressuali -> congressual", function() {deepEqual( Stem("congressuali"), "congressual");});
test("congrui -> congru", function() {deepEqual( Stem("congrui"), "congru");});
test("congruo -> congru", function() {deepEqual( Stem("congruo"), "congru");});
test("coni -> con", function() {deepEqual( Stem("coni"), "con");});
test("coniate -> con", function() {deepEqual( Stem("coniate"), "con");});
test("coniato -> con", function() {deepEqual( Stem("coniato"), "con");});
test("coniglietta -> conigliett", function() {deepEqual( Stem("coniglietta"), "conigliett");});
test("conigliette -> conigliett", function() {deepEqual( Stem("conigliette"), "conigliett");});
test("coninori -> coninor", function() {deepEqual( Stem("coninori"), "coninor");});
test("conio -> con", function() {deepEqual( Stem("conio"), "con");});
test("coniugare -> coniug", function() {deepEqual( Stem("coniugare"), "coniug");});
test("coniugi -> coniug", function() {deepEqual( Stem("coniugi"), "coniug");});
test("conna -> conn", function() {deepEqual( Stem("conna"), "conn");});
test("connazionale -> connazional", function() {deepEqual( Stem("connazionale"), "connazional");});
test("connazionali -> connazional", function() {deepEqual( Stem("connazionali"), "connazional");});
test("connecticut -> connecticut", function() {deepEqual( Stem("connecticut"), "connecticut");});
test("connery -> connery", function() {deepEqual( Stem("connery"), "connery");});
test("connessi -> conness", function() {deepEqual( Stem("connessi"), "conness");});
test("connessione -> connession", function() {deepEqual( Stem("connessione"), "connession");});
test("connesso -> conness", function() {deepEqual( Stem("connesso"), "conness");});
test("connettere -> connett", function() {deepEqual( Stem("connettere"), "connett");});
test("connettesse -> connettess", function() {deepEqual( Stem("connettesse"), "connettess");});
test("connivenza -> connivent", function() {deepEqual( Stem("connivenza"), "connivent");});
test("connotazione -> connot", function() {deepEqual( Stem("connotazione"), "connot");});
test("cono -> con", function() {deepEqual( Stem("cono"), "con");});
test("conobbe -> conobb", function() {deepEqual( Stem("conobbe"), "conobb");});
test("conosca -> conosc", function() {deepEqual( Stem("conosca"), "conosc");});
test("conosce -> conosc", function() {deepEqual( Stem("conosce"), "conosc");});
test("conoscendo -> conosc", function() {deepEqual( Stem("conoscendo"), "conosc");});
test("conoscente -> conoscent", function() {deepEqual( Stem("conoscente"), "conoscent");});
test("conoscenti -> conoscent", function() {deepEqual( Stem("conoscenti"), "conoscent");});
test("conoscenza -> conoscent", function() {deepEqual( Stem("conoscenza"), "conoscent");});
test("conoscenze -> conoscent", function() {deepEqual( Stem("conoscenze"), "conoscent");});
test("conoscer -> conoscer", function() {deepEqual( Stem("conoscer"), "conoscer");});
test("conoscerà -> conosc", function() {deepEqual( Stem("conoscerà"), "conosc");});
test("conosceranno -> conosc", function() {deepEqual( Stem("conosceranno"), "conosc");});
test("conoscere -> conosc", function() {deepEqual( Stem("conoscere"), "conosc");});
test("conoscerlo -> conosc", function() {deepEqual( Stem("conoscerlo"), "conosc");});
test("conoscerò -> conosc", function() {deepEqual( Stem("conoscerò"), "conosc");});
test("conoscersi -> conosc", function() {deepEqual( Stem("conoscersi"), "conosc");});
test("conoscervi -> conosc", function() {deepEqual( Stem("conoscervi"), "conosc");});
test("conoscesse -> conoscess", function() {deepEqual( Stem("conoscesse"), "conoscess");});
test("conoscessero -> conosc", function() {deepEqual( Stem("conoscessero"), "conosc");});
test("conoscessi -> conoscess", function() {deepEqual( Stem("conoscessi"), "conoscess");});
test("conoscete -> conosc", function() {deepEqual( Stem("conoscete"), "conosc");});
test("conosceva -> conosc", function() {deepEqual( Stem("conosceva"), "conosc");});
test("conoscevan -> conoscevan", function() {deepEqual( Stem("conoscevan"), "conoscevan");});
test("conoscevano -> conosc", function() {deepEqual( Stem("conoscevano"), "conosc");});
test("conosci -> conosc", function() {deepEqual( Stem("conosci"), "conosc");});
test("conosciamo -> conosc", function() {deepEqual( Stem("conosciamo"), "conosc");});
test("conoscitiva -> conoscit", function() {deepEqual( Stem("conoscitiva"), "conoscit");});
test("conosciuta -> conosc", function() {deepEqual( Stem("conosciuta"), "conosc");});
test("conosciute -> conosc", function() {deepEqual( Stem("conosciute"), "conosc");});
test("conosciuti -> conosc", function() {deepEqual( Stem("conosciuti"), "conosc");});
test("conosciuto -> conosc", function() {deepEqual( Stem("conosciuto"), "conosc");});
test("conosco -> conosc", function() {deepEqual( Stem("conosco"), "conosc");});
test("conoscono -> conosc", function() {deepEqual( Stem("conoscono"), "conosc");});
test("conquista -> conquist", function() {deepEqual( Stem("conquista"), "conquist");});
test("conquistando -> conquist", function() {deepEqual( Stem("conquistando"), "conquist");});
test("conquistare -> conquist", function() {deepEqual( Stem("conquistare"), "conquist");});
test("conquistarsi -> conquist", function() {deepEqual( Stem("conquistarsi"), "conquist");});
test("conquistata -> conquist", function() {deepEqual( Stem("conquistata"), "conquist");});
test("conquistati -> conquist", function() {deepEqual( Stem("conquistati"), "conquist");});
test("conquistato -> conquist", function() {deepEqual( Stem("conquistato"), "conquist");});
test("conquistatore -> conquist", function() {deepEqual( Stem("conquistatore"), "conquist");});
test("conquistatori -> conquist", function() {deepEqual( Stem("conquistatori"), "conquist");});
test("conquiste -> conquist", function() {deepEqual( Stem("conquiste"), "conquist");});
test("conquisteremo -> conquist", function() {deepEqual( Stem("conquisteremo"), "conquist");});
test("conquisti -> conquist", function() {deepEqual( Stem("conquisti"), "conquist");});
test("conquistino -> conquistin", function() {deepEqual( Stem("conquistino"), "conquistin");});
test("consacrata -> consacr", function() {deepEqual( Stem("consacrata"), "consacr");});
test("consacrazione -> consacr", function() {deepEqual( Stem("consacrazione"), "consacr");});
test("consapevole -> consapevol", function() {deepEqual( Stem("consapevole"), "consapevol");});
test("consapevolezza -> consapevolezz", function() {deepEqual( Stem("consapevolezza"), "consapevolezz");});
test("consapevolmente -> consapevol", function() {deepEqual( Stem("consapevolmente"), "consapevol");});
test("consci -> consc", function() {deepEqual( Stem("consci"), "consc");});
test("consecutiva -> consecut", function() {deepEqual( Stem("consecutiva"), "consecut");});
test("consecutive -> consecut", function() {deepEqual( Stem("consecutive"), "consecut");});
test("consecutivi -> consecut", function() {deepEqual( Stem("consecutivi"), "consecut");});
test("consecutivo -> consecut", function() {deepEqual( Stem("consecutivo"), "consecut");});
test("consegna -> consegn", function() {deepEqual( Stem("consegna"), "consegn");});
test("consegnando -> consegn", function() {deepEqual( Stem("consegnando"), "consegn");});
test("consegnano -> consegn", function() {deepEqual( Stem("consegnano"), "consegn");});
test("consegnar -> consegn", function() {deepEqual( Stem("consegnar"), "consegn");});
test("consegnare -> consegn", function() {deepEqual( Stem("consegnare"), "consegn");});
test("consegnarle -> consegn", function() {deepEqual( Stem("consegnarle"), "consegn");});
test("consegnarlo -> consegn", function() {deepEqual( Stem("consegnarlo"), "consegn");});
test("consegnata -> consegn", function() {deepEqual( Stem("consegnata"), "consegn");});
test("consegnate -> consegn", function() {deepEqual( Stem("consegnate"), "consegn");});
test("consegnati -> consegn", function() {deepEqual( Stem("consegnati"), "consegn");});
test("consegnato -> consegn", function() {deepEqual( Stem("consegnato"), "consegn");});
test("consegnerò -> consegn", function() {deepEqual( Stem("consegnerò"), "consegn");});
test("consegnò -> consegn", function() {deepEqual( Stem("consegnò"), "consegn");});
test("consegnuenza -> consegnuent", function() {deepEqual( Stem("consegnuenza"), "consegnuent");});
test("conseguente -> conseguent", function() {deepEqual( Stem("conseguente"), "conseguent");});
test("conseguentemente -> conseguent", function() {deepEqual( Stem("conseguentemente"), "conseguent");});
test("conseguenza -> conseguent", function() {deepEqual( Stem("conseguenza"), "conseguent");});
test("conseguenze -> conseguent", function() {deepEqual( Stem("conseguenze"), "conseguent");});
test("conseguimento -> consegu", function() {deepEqual( Stem("conseguimento"), "consegu");});
test("conseguire -> consegu", function() {deepEqual( Stem("conseguire"), "consegu");});
test("conseguiti -> consegu", function() {deepEqual( Stem("conseguiti"), "consegu");});
test("conseguito -> consegu", function() {deepEqual( Stem("conseguito"), "consegu");});
test("consensi -> consens", function() {deepEqual( Stem("consensi"), "consens");});
test("consenso -> consens", function() {deepEqual( Stem("consenso"), "consens");});
test("consenta -> consent", function() {deepEqual( Stem("consenta"), "consent");});
test("consentanei -> consentane", function() {deepEqual( Stem("consentanei"), "consentane");});
test("consentaneo -> consentane", function() {deepEqual( Stem("consentaneo"), "consentane");});
test("consentano -> consent", function() {deepEqual( Stem("consentano"), "consent");});
test("consente -> consent", function() {deepEqual( Stem("consente"), "consent");});
test("consentirà -> consent", function() {deepEqual( Stem("consentirà"), "consent");});
test("consentiranno -> consent", function() {deepEqual( Stem("consentiranno"), "consent");});
test("consentire -> consent", function() {deepEqual( Stem("consentire"), "consent");});
test("consentirebbe -> consent", function() {deepEqual( Stem("consentirebbe"), "consent");});
test("consentita -> consent", function() {deepEqual( Stem("consentita"), "consent");});
test("consentiti -> consent", function() {deepEqual( Stem("consentiti"), "consent");});
test("consentito -> consent", function() {deepEqual( Stem("consentito"), "consent");});
test("consentivano -> consent", function() {deepEqual( Stem("consentivano"), "consent");});
test("consentono -> consent", function() {deepEqual( Stem("consentono"), "consent");});
test("conserte -> consert", function() {deepEqual( Stem("conserte"), "consert");});
test("conserva -> conserv", function() {deepEqual( Stem("conserva"), "conserv");});
test("conservano -> conserv", function() {deepEqual( Stem("conservano"), "conserv");});
test("conservar -> conserv", function() {deepEqual( Stem("conservar"), "conserv");});
test("conservare -> conserv", function() {deepEqual( Stem("conservare"), "conserv");});
test("conservarla -> conserv", function() {deepEqual( Stem("conservarla"), "conserv");});
test("conservarle -> conserv", function() {deepEqual( Stem("conservarle"), "conserv");});
test("conservarsi -> conserv", function() {deepEqual( Stem("conservarsi"), "conserv");});
test("conservata -> conserv", function() {deepEqual( Stem("conservata"), "conserv");});
test("conservate -> conserv", function() {deepEqual( Stem("conservate"), "conserv");});
test("conservati -> conserv", function() {deepEqual( Stem("conservati"), "conserv");});
test("conservative -> conserv", function() {deepEqual( Stem("conservative"), "conserv");});
test("conservato -> conserv", function() {deepEqual( Stem("conservato"), "conserv");});
test("conservatore -> conserv", function() {deepEqual( Stem("conservatore"), "conserv");});
test("conservatori -> conserv", function() {deepEqual( Stem("conservatori"), "conserv");});
test("conservatoria -> conservator", function() {deepEqual( Stem("conservatoria"), "conservator");});
test("conservatrice -> conserv", function() {deepEqual( Stem("conservatrice"), "conserv");});
test("conservazione -> conserv", function() {deepEqual( Stem("conservazione"), "conserv");});
test("conservi -> cons", function() {deepEqual( Stem("conservi"), "cons");});
test("conservò -> conserv", function() {deepEqual( Stem("conservò"), "conserv");});
test("consessi -> consess", function() {deepEqual( Stem("consessi"), "consess");});
test("considera -> consider", function() {deepEqual( Stem("considera"), "consider");});
test("considerabile -> consider", function() {deepEqual( Stem("considerabile"), "consider");});
test("considerabili -> consider", function() {deepEqual( Stem("considerabili"), "consider");});
test("considerando -> consider", function() {deepEqual( Stem("considerando"), "consider");});
test("considerano -> consider", function() {deepEqual( Stem("considerano"), "consider");});
test("considerar -> consider", function() {deepEqual( Stem("considerar"), "consider");});
test("considerare -> consider", function() {deepEqual( Stem("considerare"), "consider");});
test("considerarli -> consider", function() {deepEqual( Stem("considerarli"), "consider");});
test("considerarono -> consider", function() {deepEqual( Stem("considerarono"), "consider");});
test("considerarsi -> consider", function() {deepEqual( Stem("considerarsi"), "consider");});
test("considerata -> consider", function() {deepEqual( Stem("considerata"), "consider");});
test("considerate -> consider", function() {deepEqual( Stem("considerate"), "consider");});
test("considerati -> consider", function() {deepEqual( Stem("considerati"), "consider");});
test("considerato -> consider", function() {deepEqual( Stem("considerato"), "consider");});
test("consideravan -> consideravan", function() {deepEqual( Stem("consideravan"), "consideravan");});
test("considerazion -> considerazion", function() {deepEqual( Stem("considerazion"), "considerazion");});
test("considerazione -> consider", function() {deepEqual( Stem("considerazione"), "consider");});
test("considerazioni -> consider", function() {deepEqual( Stem("considerazioni"), "consider");});
test("considerevole -> considerevol", function() {deepEqual( Stem("considerevole"), "considerevol");});
test("consideri -> consider", function() {deepEqual( Stem("consideri"), "consider");});
test("consideriamo -> consider", function() {deepEqual( Stem("consideriamo"), "consider");});
test("considerino -> considerin", function() {deepEqual( Stem("considerino"), "considerin");});
test("considero -> consider", function() {deepEqual( Stem("considero"), "consider");});
test("consigli -> consigl", function() {deepEqual( Stem("consigli"), "consigl");});
test("consiglia -> consigl", function() {deepEqual( Stem("consiglia"), "consigl");});
test("consigliano -> consigl", function() {deepEqual( Stem("consigliano"), "consigl");});
test("consigliare -> consigl", function() {deepEqual( Stem("consigliare"), "consigl");});
test("consigliarmi -> consigl", function() {deepEqual( Stem("consigliarmi"), "consigl");});
test("consigliaron -> consigliaron", function() {deepEqual( Stem("consigliaron"), "consigliaron");});
test("consigliata -> consigl", function() {deepEqual( Stem("consigliata"), "consigl");});
test("consigliati -> consigl", function() {deepEqual( Stem("consigliati"), "consigl");});
test("consigliato -> consigl", function() {deepEqual( Stem("consigliato"), "consigl");});
test("consigliava -> consigl", function() {deepEqual( Stem("consigliava"), "consigl");});
test("consigliera -> consiglier", function() {deepEqual( Stem("consigliera"), "consiglier");});
test("consigliere -> consigl", function() {deepEqual( Stem("consigliere"), "consigl");});
test("consiglieri -> consiglier", function() {deepEqual( Stem("consiglieri"), "consiglier");});
test("consiglio -> consigl", function() {deepEqual( Stem("consiglio"), "consigl");});
test("consigliò -> consigl", function() {deepEqual( Stem("consigliò"), "consigl");});
test("consigliori -> consiglior", function() {deepEqual( Stem("consigliori"), "consiglior");});
test("consimili -> consimil", function() {deepEqual( Stem("consimili"), "consimil");});
test("consiste -> consist", function() {deepEqual( Stem("consiste"), "consist");});
test("consistente -> consistent", function() {deepEqual( Stem("consistente"), "consistent");});
test("consistenti -> consistent", function() {deepEqual( Stem("consistenti"), "consistent");});
test("consistenza -> consistent", function() {deepEqual( Stem("consistenza"), "consistent");});
test("consisteva -> consist", function() {deepEqual( Stem("consisteva"), "consist");});
test("consistevano -> consist", function() {deepEqual( Stem("consistevano"), "consist");});
test("conso -> cons", function() {deepEqual( Stem("conso"), "cons");});
test("consob -> consob", function() {deepEqual( Stem("consob"), "consob");});
test("consociativi -> consoc", function() {deepEqual( Stem("consociativi"), "consoc");});
test("consociativo -> consoc", function() {deepEqual( Stem("consociativo"), "consoc");});
test("consolando -> consol", function() {deepEqual( Stem("consolando"), "consol");});
test("consolante -> consol", function() {deepEqual( Stem("consolante"), "consol");});
test("consolarci -> consol", function() {deepEqual( Stem("consolarci"), "consol");});
test("consolare -> consol", function() {deepEqual( Stem("consolare"), "consol");});
test("consolarlo -> consol", function() {deepEqual( Stem("consolarlo"), "consol");});
test("consolarti -> consol", function() {deepEqual( Stem("consolarti"), "consol");});
test("consolata -> consol", function() {deepEqual( Stem("consolata"), "consol");});
test("consolatela -> consolatel", function() {deepEqual( Stem("consolatela"), "consolatel");});
test("consolatevi -> consolat", function() {deepEqual( Stem("consolatevi"), "consolat");});
test("consolatione -> consolation", function() {deepEqual( Stem("consolatione"), "consolation");});
test("consolazione -> consol", function() {deepEqual( Stem("consolazione"), "consol");});
test("consolazioni -> consol", function() {deepEqual( Stem("consolazioni"), "consol");});
test("console -> consol", function() {deepEqual( Stem("console"), "consol");});
test("consolidamento -> consolid", function() {deepEqual( Stem("consolidamento"), "consolid");});
test("consolidandosi -> consolid", function() {deepEqual( Stem("consolidandosi"), "consolid");});
test("consolidata -> consolid", function() {deepEqual( Stem("consolidata"), "consolid");});
test("consolidati -> consolid", function() {deepEqual( Stem("consolidati"), "consolid");});
test("consolidato -> consolid", function() {deepEqual( Stem("consolidato"), "consolid");});
test("consolle -> consoll", function() {deepEqual( Stem("consolle"), "consoll");});
test("consolò -> consol", function() {deepEqual( Stem("consolò"), "consol");});
test("consonanti -> conson", function() {deepEqual( Stem("consonanti"), "conson");});
test("consonanza -> conson", function() {deepEqual( Stem("consonanza"), "conson");});
test("consone -> conson", function() {deepEqual( Stem("consone"), "conson");});
test("consono -> cons", function() {deepEqual( Stem("consono"), "cons");});
test("consorte -> consort", function() {deepEqual( Stem("consorte"), "consort");});
test("consorti -> consort", function() {deepEqual( Stem("consorti"), "consort");});
test("consorzi -> consorz", function() {deepEqual( Stem("consorzi"), "consorz");});
test("consorzio -> consorz", function() {deepEqual( Stem("consorzio"), "consorz");});
test("constatare -> constat", function() {deepEqual( Stem("constatare"), "constat");});
test("constatarlo -> constat", function() {deepEqual( Stem("constatarlo"), "constat");});
test("constatazione -> constat", function() {deepEqual( Stem("constatazione"), "constat");});
test("consterà -> const", function() {deepEqual( Stem("consterà"), "const");});
test("consuenze -> consuenz", function() {deepEqual( Stem("consuenze"), "consuenz");});
test("consueta -> consuet", function() {deepEqual( Stem("consueta"), "consuet");});
test("consueti -> consuet", function() {deepEqual( Stem("consueti"), "consuet");});
test("consueto -> consuet", function() {deepEqual( Stem("consueto"), "consuet");});
test("consuetudine -> consuetudin", function() {deepEqual( Stem("consuetudine"), "consuetudin");});
test("consuetudini -> consuetudin", function() {deepEqual( Stem("consuetudini"), "consuetudin");});
test("consulenti -> consulent", function() {deepEqual( Stem("consulenti"), "consulent");});
test("consulenza -> consulent", function() {deepEqual( Stem("consulenza"), "consulent");});
test("consulenze -> consulent", function() {deepEqual( Stem("consulenze"), "consulent");});
test("consulta -> consult", function() {deepEqual( Stem("consulta"), "consult");});
test("consultar -> consult", function() {deepEqual( Stem("consultar"), "consult");});
test("consultare -> consult", function() {deepEqual( Stem("consultare"), "consult");});
test("consultarlo -> consult", function() {deepEqual( Stem("consultarlo"), "consult");});
test("consultata -> consult", function() {deepEqual( Stem("consultata"), "consult");});
test("consultati -> consult", function() {deepEqual( Stem("consultati"), "consult");});
test("consultato -> consult", function() {deepEqual( Stem("consultato"), "consult");});
test("consultazione -> consult", function() {deepEqual( Stem("consultazione"), "consult");});
test("consultazioni -> consult", function() {deepEqual( Stem("consultazioni"), "consult");});
test("consulte -> consult", function() {deepEqual( Stem("consulte"), "consult");});
test("consultivo -> consult", function() {deepEqual( Stem("consultivo"), "consult");});
test("consulto -> consult", function() {deepEqual( Stem("consulto"), "consult");});
test("consuma -> consum", function() {deepEqual( Stem("consuma"), "consum");});
test("consumano -> consum", function() {deepEqual( Stem("consumano"), "consum");});
test("consumare -> consum", function() {deepEqual( Stem("consumare"), "consum");});
test("consumata -> consum", function() {deepEqual( Stem("consumata"), "consum");});
test("consumate -> consum", function() {deepEqual( Stem("consumate"), "consum");});
test("consumati -> consum", function() {deepEqual( Stem("consumati"), "consum");});
test("consumato -> consum", function() {deepEqual( Stem("consumato"), "consum");});
test("consumatore -> consum", function() {deepEqual( Stem("consumatore"), "consum");});
test("consumatori -> consum", function() {deepEqual( Stem("consumatori"), "consum");});
test("consumavano -> consum", function() {deepEqual( Stem("consumavano"), "consum");});
test("consumazioni -> consum", function() {deepEqual( Stem("consumazioni"), "consum");});
test("consumerà -> consum", function() {deepEqual( Stem("consumerà"), "consum");});
test("consumi -> consum", function() {deepEqual( Stem("consumi"), "consum");});
test("consumo -> consum", function() {deepEqual( Stem("consumo"), "consum");});
test("consunta -> consunt", function() {deepEqual( Stem("consunta"), "consunt");});
test("consunte -> consunt", function() {deepEqual( Stem("consunte"), "consunt");});
test("cont -> cont", function() {deepEqual( Stem("cont"), "cont");});
test("conta -> cont", function() {deepEqual( Stem("conta"), "cont");});
test("contabile -> contabil", function() {deepEqual( Stem("contabile"), "contabil");});
test("contadina -> contadin", function() {deepEqual( Stem("contadina"), "contadin");});
test("contadine -> contadin", function() {deepEqual( Stem("contadine"), "contadin");});
test("contadinesca -> contadinesc", function() {deepEqual( Stem("contadinesca"), "contadinesc");});
test("contadini -> contadin", function() {deepEqual( Stem("contadini"), "contadin");});
test("contadino -> contadin", function() {deepEqual( Stem("contadino"), "contadin");});
test("contadinotta -> contadinott", function() {deepEqual( Stem("contadinotta"), "contadinott");});
test("contado -> contad", function() {deepEqual( Stem("contado"), "contad");});
test("contaggioso -> contagg", function() {deepEqual( Stem("contaggioso"), "contagg");});
test("contagi -> contag", function() {deepEqual( Stem("contagi"), "contag");});
test("contagiata -> contag", function() {deepEqual( Stem("contagiata"), "contag");});
test("contagio -> contag", function() {deepEqual( Stem("contagio"), "contag");});
test("contagiosa -> contag", function() {deepEqual( Stem("contagiosa"), "contag");});
test("contagiosi -> contag", function() {deepEqual( Stem("contagiosi"), "contag");});
test("contagioso -> contag", function() {deepEqual( Stem("contagioso"), "contag");});
test("containers -> containers", function() {deepEqual( Stem("containers"), "containers");});
test("contaminata -> contamin", function() {deepEqual( Stem("contaminata"), "contamin");});
test("contan -> contan", function() {deepEqual( Stem("contan"), "contan");});
test("contando -> cont", function() {deepEqual( Stem("contando"), "cont");});
test("contano -> cont", function() {deepEqual( Stem("contano"), "cont");});
test("contante -> contant", function() {deepEqual( Stem("contante"), "contant");});
test("contanti -> contant", function() {deepEqual( Stem("contanti"), "contant");});
test("contar -> cont", function() {deepEqual( Stem("contar"), "cont");});
test("contare -> cont", function() {deepEqual( Stem("contare"), "cont");});
test("contarlo -> cont", function() {deepEqual( Stem("contarlo"), "cont");});
test("contarsi -> cont", function() {deepEqual( Stem("contarsi"), "cont");});
test("contarvi -> cont", function() {deepEqual( Stem("contarvi"), "cont");});
test("contasse -> cont", function() {deepEqual( Stem("contasse"), "cont");});
test("contata -> cont", function() {deepEqual( Stem("contata"), "cont");});
test("contate -> cont", function() {deepEqual( Stem("contate"), "cont");});
test("contato -> cont", function() {deepEqual( Stem("contato"), "cont");});
test("contattare -> contatt", function() {deepEqual( Stem("contattare"), "contatt");});
test("contattarla -> contatt", function() {deepEqual( Stem("contattarla"), "contatt");});
test("contattato -> contatt", function() {deepEqual( Stem("contattato"), "contatt");});
test("contatti -> contatt", function() {deepEqual( Stem("contatti"), "contatt");});
test("contatto -> contatt", function() {deepEqual( Stem("contatto"), "contatt");});
test("contava -> cont", function() {deepEqual( Stem("contava"), "cont");});
test("conte -> cont", function() {deepEqual( Stem("conte"), "cont");});
test("contea -> conte", function() {deepEqual( Stem("contea"), "conte");});
test("contegno -> contegn", function() {deepEqual( Stem("contegno"), "contegn");});
test("contegnosa -> contegn", function() {deepEqual( Stem("contegnosa"), "contegn");});
test("contegnoso -> contegn", function() {deepEqual( Stem("contegnoso"), "contegn");});
test("contemplando -> contempl", function() {deepEqual( Stem("contemplando"), "contempl");});
test("contemplar -> contempl", function() {deepEqual( Stem("contemplar"), "contempl");});
test("contemplare -> contempl", function() {deepEqual( Stem("contemplare"), "contempl");});
test("contemplarlo -> contempl", function() {deepEqual( Stem("contemplarlo"), "contempl");});
test("contemplate -> contempl", function() {deepEqual( Stem("contemplate"), "contempl");});
test("contemplativa -> contempl", function() {deepEqual( Stem("contemplativa"), "contempl");});
test("contemplato -> contempl", function() {deepEqual( Stem("contemplato"), "contempl");});
test("contemplazione -> contempl", function() {deepEqual( Stem("contemplazione"), "contempl");});
test("contemplazioni -> contempl", function() {deepEqual( Stem("contemplazioni"), "contempl");});
test("contempo -> contemp", function() {deepEqual( Stem("contempo"), "contemp");});
test("contemporanea -> contemporane", function() {deepEqual( Stem("contemporanea"), "contemporane");});
test("contemporaneamente -> contemporan", function() {deepEqual( Stem("contemporaneamente"), "contemporan");});
test("contemporanee -> contemporane", function() {deepEqual( Stem("contemporanee"), "contemporane");});
test("contemporanei -> contemporane", function() {deepEqual( Stem("contemporanei"), "contemporane");});
test("contemporaneità -> contemporan", function() {deepEqual( Stem("contemporaneità"), "contemporan");});
test("contemporaneo -> contemporane", function() {deepEqual( Stem("contemporaneo"), "contemporane");});
test("contendenti -> contendent", function() {deepEqual( Stem("contendenti"), "contendent");});
test("contendevano -> contend", function() {deepEqual( Stem("contendevano"), "contend");});
test("contenente -> contenent", function() {deepEqual( Stem("contenente"), "contenent");});
test("contener -> contener", function() {deepEqual( Stem("contener"), "contener");});
test("contenere -> conten", function() {deepEqual( Stem("contenere"), "conten");});
test("contenerla -> conten", function() {deepEqual( Stem("contenerla"), "conten");});
test("contenersi -> conten", function() {deepEqual( Stem("contenersi"), "conten");});
test("conteneva -> conten", function() {deepEqual( Stem("conteneva"), "conten");});
test("contenga -> conteng", function() {deepEqual( Stem("contenga"), "conteng");});
test("contengono -> conteng", function() {deepEqual( Stem("contengono"), "conteng");});
test("contenimento -> conten", function() {deepEqual( Stem("contenimento"), "conten");});
test("contenitore -> contenitor", function() {deepEqual( Stem("contenitore"), "contenitor");});
test("contenitori -> contenitor", function() {deepEqual( Stem("contenitori"), "contenitor");});
test("contenta -> content", function() {deepEqual( Stem("contenta"), "content");});
test("contentare -> content", function() {deepEqual( Stem("contentare"), "content");});
test("contentarli -> content", function() {deepEqual( Stem("contentarli"), "content");});
test("contentarlo -> content", function() {deepEqual( Stem("contentarlo"), "content");});
test("contentassi -> content", function() {deepEqual( Stem("contentassi"), "content");});
test("contentato -> content", function() {deepEqual( Stem("contentato"), "content");});
test("contentava -> content", function() {deepEqual( Stem("contentava"), "content");});
test("contentavano -> content", function() {deepEqual( Stem("contentavano"), "content");});
test("contente -> content", function() {deepEqual( Stem("contente"), "content");});
test("contentezza -> contentezz", function() {deepEqual( Stem("contentezza"), "contentezz");});
test("contenti -> content", function() {deepEqual( Stem("contenti"), "content");});
test("contentino -> contentin", function() {deepEqual( Stem("contentino"), "contentin");});
test("contentissimo -> contentissim", function() {deepEqual( Stem("contentissimo"), "contentissim");});
test("contento -> content", function() {deepEqual( Stem("contento"), "content");});
test("contentò -> content", function() {deepEqual( Stem("contentò"), "content");});
test("contenuta -> conten", function() {deepEqual( Stem("contenuta"), "conten");});
test("contenute -> conten", function() {deepEqual( Stem("contenute"), "conten");});
test("contenuti -> conten", function() {deepEqual( Stem("contenuti"), "conten");});
test("contenuto -> conten", function() {deepEqual( Stem("contenuto"), "conten");});
test("contenzioso -> contenz", function() {deepEqual( Stem("contenzioso"), "contenz");});
test("conterà -> cont", function() {deepEqual( Stem("conterà"), "cont");});
test("conterrà -> conterr", function() {deepEqual( Stem("conterrà"), "conterr");});
test("conterranei -> conterrane", function() {deepEqual( Stem("conterranei"), "conterrane");});
test("contesa -> contes", function() {deepEqual( Stem("contesa"), "contes");});
test("contese -> contes", function() {deepEqual( Stem("contese"), "contes");});
test("contesta -> contest", function() {deepEqual( Stem("contesta"), "contest");});
test("contestabile -> contest", function() {deepEqual( Stem("contestabile"), "contest");});
test("contestando -> contest", function() {deepEqual( Stem("contestando"), "contest");});
test("contestano -> contest", function() {deepEqual( Stem("contestano"), "contest");});
test("contestare -> contest", function() {deepEqual( Stem("contestare"), "contest");});
test("contestata -> contest", function() {deepEqual( Stem("contestata"), "contest");});
test("contestati -> contest", function() {deepEqual( Stem("contestati"), "contest");});
test("contestato -> contest", function() {deepEqual( Stem("contestato"), "contest");});
test("contestatori -> contest", function() {deepEqual( Stem("contestatori"), "contest");});
test("contestatrici -> contest", function() {deepEqual( Stem("contestatrici"), "contest");});
test("contestava -> contest", function() {deepEqual( Stem("contestava"), "contest");});
test("contestazione -> contest", function() {deepEqual( Stem("contestazione"), "contest");});
test("contestazioni -> contest", function() {deepEqual( Stem("contestazioni"), "contest");});
test("contesto -> contest", function() {deepEqual( Stem("contesto"), "contest");});
test("contestualmente -> contestual", function() {deepEqual( Stem("contestualmente"), "contestual");});
test("conti -> cont", function() {deepEqual( Stem("conti"), "cont");});
test("contiamo -> cont", function() {deepEqual( Stem("contiamo"), "cont");});
test("conticello -> conticell", function() {deepEqual( Stem("conticello"), "conticell");});
test("conticino -> conticin", function() {deepEqual( Stem("conticino"), "conticin");});
test("contiene -> contien", function() {deepEqual( Stem("contiene"), "contien");});
test("contigua -> contigu", function() {deepEqual( Stem("contigua"), "contigu");});
test("contigui -> contigu", function() {deepEqual( Stem("contigui"), "contigu");});
test("contiguità -> contigu", function() {deepEqual( Stem("contiguità"), "contigu");});
test("contiguo -> contigu", function() {deepEqual( Stem("contiguo"), "contigu");});
test("continentale -> continental", function() {deepEqual( Stem("continentale"), "continental");});
test("continente -> continent", function() {deepEqual( Stem("continente"), "continent");});
test("continenti -> continent", function() {deepEqual( Stem("continenti"), "continent");});
test("contingente -> contingent", function() {deepEqual( Stem("contingente"), "contingent");});
test("contingenti -> contingent", function() {deepEqual( Stem("contingenti"), "contingent");});
test("continua -> continu", function() {deepEqual( Stem("continua"), "continu");});
test("continuamente -> continu", function() {deepEqual( Stem("continuamente"), "continu");});
test("continuando -> continu", function() {deepEqual( Stem("continuando"), "continu");});
test("continuano -> continu", function() {deepEqual( Stem("continuano"), "continu");});
test("continuar -> continu", function() {deepEqual( Stem("continuar"), "continu");});
test("continuare -> continu", function() {deepEqual( Stem("continuare"), "continu");});
test("continuarla -> continu", function() {deepEqual( Stem("continuarla"), "continu");});
test("continuaron -> continuaron", function() {deepEqual( Stem("continuaron"), "continuaron");});
test("continuarono -> continu", function() {deepEqual( Stem("continuarono"), "continu");});
test("continuassero -> continu", function() {deepEqual( Stem("continuassero"), "continu");});
test("continuata -> continu", function() {deepEqual( Stem("continuata"), "continu");});
test("continuato -> continu", function() {deepEqual( Stem("continuato"), "continu");});
test("continuava -> continu", function() {deepEqual( Stem("continuava"), "continu");});
test("continuavano -> continu", function() {deepEqual( Stem("continuavano"), "continu");});
test("continuazione -> continu", function() {deepEqual( Stem("continuazione"), "continu");});
test("continue -> continu", function() {deepEqual( Stem("continue"), "continu");});
test("continuerà -> continu", function() {deepEqual( Stem("continuerà"), "continu");});
test("continueranno -> continu", function() {deepEqual( Stem("continueranno"), "continu");});
test("continuerebbe -> continu", function() {deepEqual( Stem("continuerebbe"), "continu");});
test("continueremo -> continu", function() {deepEqual( Stem("continueremo"), "continu");});
test("continuerò -> continu", function() {deepEqual( Stem("continuerò"), "continu");});
test("continui -> continu", function() {deepEqual( Stem("continui"), "continu");});
test("continuiamo -> continuiam", function() {deepEqual( Stem("continuiamo"), "continuiam");});
test("continuità -> continu", function() {deepEqual( Stem("continuità"), "continu");});
test("continuo -> continu", function() {deepEqual( Stem("continuo"), "continu");});
test("continuò -> continu", function() {deepEqual( Stem("continuò"), "continu");});
test("conto -> cont", function() {deepEqual( Stem("conto"), "cont");});
test("contò -> cont", function() {deepEqual( Stem("contò"), "cont");});
test("contornandosi -> contorn", function() {deepEqual( Stem("contornandosi"), "contorn");});
test("contorni -> contorn", function() {deepEqual( Stem("contorni"), "contorn");});
test("contorno -> contorn", function() {deepEqual( Stem("contorno"), "contorn");});
test("contorte -> contort", function() {deepEqual( Stem("contorte"), "contort");});
test("contovivo -> contov", function() {deepEqual( Stem("contovivo"), "contov");});
test("contr -> contr", function() {deepEqual( Stem("contr"), "contr");});
test("contra -> contr", function() {deepEqual( Stem("contra"), "contr");});
test("contrabbandieri -> contrabbandier", function() {deepEqual( Stem("contrabbandieri"), "contrabbandier");});
test("contraccambiare -> contraccamb", function() {deepEqual( Stem("contraccambiare"), "contraccamb");});
test("contraccambiava -> contraccamb", function() {deepEqual( Stem("contraccambiava"), "contraccamb");});
test("contraccambio -> contraccamb", function() {deepEqual( Stem("contraccambio"), "contraccamb");});
test("contraccettivi -> contraccett", function() {deepEqual( Stem("contraccettivi"), "contraccett");});
test("contrada -> contrad", function() {deepEqual( Stem("contrada"), "contrad");});
test("contraddette -> contraddett", function() {deepEqual( Stem("contraddette"), "contraddett");});
test("contraddica -> contradd", function() {deepEqual( Stem("contraddica"), "contradd");});
test("contraddice -> contradd", function() {deepEqual( Stem("contraddice"), "contradd");});
test("contraddicesse -> contraddicess", function() {deepEqual( Stem("contraddicesse"), "contraddicess");});
test("contraddire -> contradd", function() {deepEqual( Stem("contraddire"), "contradd");});
test("contraddirgli -> contradd", function() {deepEqual( Stem("contraddirgli"), "contradd");});
test("contraddirlo -> contradd", function() {deepEqual( Stem("contraddirlo"), "contradd");});
test("contraddittori -> contraddittor", function() {deepEqual( Stem("contraddittori"), "contraddittor");});
test("contraddittorie -> contraddittor", function() {deepEqual( Stem("contraddittorie"), "contraddittor");});
test("contraddittorio -> contraddittor", function() {deepEqual( Stem("contraddittorio"), "contraddittor");});
test("contraddizione -> contraddizion", function() {deepEqual( Stem("contraddizione"), "contraddizion");});
test("contraddizioni -> contraddizion", function() {deepEqual( Stem("contraddizioni"), "contraddizion");});
test("contraddote -> contraddot", function() {deepEqual( Stem("contraddote"), "contraddot");});
test("contrae -> contra", function() {deepEqual( Stem("contrae"), "contra");});
test("contraendo -> contr", function() {deepEqual( Stem("contraendo"), "contr");});
test("contraenti -> contraent", function() {deepEqual( Stem("contraenti"), "contraent");});
test("contraesse -> contraess", function() {deepEqual( Stem("contraesse"), "contraess");});
test("contraeva -> contr", function() {deepEqual( Stem("contraeva"), "contr");});
test("contraffaceva -> contraffac", function() {deepEqual( Stem("contraffaceva"), "contraffac");});
test("contraffacienti -> contraffacient", function() {deepEqual( Stem("contraffacienti"), "contraffacient");});
test("contraffanno -> contraffann", function() {deepEqual( Stem("contraffanno"), "contraffann");});
test("contrafforti -> contraffort", function() {deepEqual( Stem("contrafforti"), "contraffort");});
test("contrammina -> contrammin", function() {deepEqual( Stem("contrammina"), "contrammin");});
test("contrappesare -> contrappes", function() {deepEqual( Stem("contrappesare"), "contrappes");});
test("contrappesato -> contrappes", function() {deepEqual( Stem("contrappesato"), "contrappes");});
test("contrappeso -> contrappes", function() {deepEqual( Stem("contrappeso"), "contrappes");});
test("contrappone -> contrappon", function() {deepEqual( Stem("contrappone"), "contrappon");});
test("contrapponevan -> contrapponevan", function() {deepEqual( Stem("contrapponevan"), "contrapponevan");});
test("contrapporci -> contrapporc", function() {deepEqual( Stem("contrapporci"), "contrapporc");});
test("contrapporre -> contrapporr", function() {deepEqual( Stem("contrapporre"), "contrapporr");});
test("contrapposizione -> contrapposizion", function() {deepEqual( Stem("contrapposizione"), "contrapposizion");});
test("contrapposizioni -> contrapposizion", function() {deepEqual( Stem("contrapposizioni"), "contrapposizion");});
test("contrapposta -> contrappost", function() {deepEqual( Stem("contrapposta"), "contrappost");});
test("contrapposti -> contrappost", function() {deepEqual( Stem("contrapposti"), "contrappost");});
test("contrapposto -> contrappost", function() {deepEqual( Stem("contrapposto"), "contrappost");});
test("contrari -> contrar", function() {deepEqual( Stem("contrari"), "contrar");});
test("contraria -> contrar", function() {deepEqual( Stem("contraria"), "contrar");});
test("contrariamente -> contrar", function() {deepEqual( Stem("contrariamente"), "contrar");});
test("contrarie -> contrar", function() {deepEqual( Stem("contrarie"), "contrar");});
test("contrarietà -> contrariet", function() {deepEqual( Stem("contrarietà"), "contrariet");});
test("contrario -> contrar", function() {deepEqual( Stem("contrario"), "contrar");});
test("contrassegni -> contrassegn", function() {deepEqual( Stem("contrassegni"), "contrassegn");});
test("contrassegno -> contrassegn", function() {deepEqual( Stem("contrassegno"), "contrassegn");});
test("contrastando -> contrast", function() {deepEqual( Stem("contrastando"), "contrast");});
test("contrastanti -> contrast", function() {deepEqual( Stem("contrastanti"), "contrast");});
test("contrastar -> contrast", function() {deepEqual( Stem("contrastar"), "contrast");});
test("contrastare -> contrast", function() {deepEqual( Stem("contrastare"), "contrast");});
test("contrastata -> contrast", function() {deepEqual( Stem("contrastata"), "contrast");});
test("contrastate -> contrast", function() {deepEqual( Stem("contrastate"), "contrast");});
test("contrastati -> contrast", function() {deepEqual( Stem("contrastati"), "contrast");});
test("contrastato -> contrast", function() {deepEqual( Stem("contrastato"), "contrast");});
test("contrastavano -> contrast", function() {deepEqual( Stem("contrastavano"), "contrast");});
test("contrasti -> contrast", function() {deepEqual( Stem("contrasti"), "contrast");});
test("contrasto -> contrast", function() {deepEqual( Stem("contrasto"), "contrast");});
test("contratta -> contratt", function() {deepEqual( Stem("contratta"), "contratt");});
test("contrattacco -> contrattacc", function() {deepEqual( Stem("contrattacco"), "contrattacc");});
test("contrattazione -> contratt", function() {deepEqual( Stem("contrattazione"), "contratt");});
test("contrattazioni -> contratt", function() {deepEqual( Stem("contrattazioni"), "contratt");});
test("contratte -> contratt", function() {deepEqual( Stem("contratte"), "contratt");});
test("contrattempi -> contrattemp", function() {deepEqual( Stem("contrattempi"), "contrattemp");});
test("contratti -> contratt", function() {deepEqual( Stem("contratti"), "contratt");});
test("contratto -> contratt", function() {deepEqual( Stem("contratto"), "contratt");});
test("contrattuale -> contrattual", function() {deepEqual( Stem("contrattuale"), "contrattual");});
test("contrattuali -> contrattual", function() {deepEqual( Stem("contrattuali"), "contrattual");});
test("contravvenire -> contravven", function() {deepEqual( Stem("contravvenire"), "contravven");});
test("contravventori -> contravventor", function() {deepEqual( Stem("contravventori"), "contravventor");});
test("contravviene -> contravvien", function() {deepEqual( Stem("contravviene"), "contravvien");});
test("contrazione -> contrazion", function() {deepEqual( Stem("contrazione"), "contrazion");});
test("contrazioni -> contrazion", function() {deepEqual( Stem("contrazioni"), "contrazion");});
test("contribuenti -> contribuent", function() {deepEqual( Stem("contribuenti"), "contribuent");});
test("contribuirà -> contribu", function() {deepEqual( Stem("contribuirà"), "contribu");});
test("contribuire -> contribu", function() {deepEqual( Stem("contribuire"), "contribu");});
test("contribuiscano -> contribu", function() {deepEqual( Stem("contribuiscano"), "contribu");});
test("contribuisce -> contribu", function() {deepEqual( Stem("contribuisce"), "contribu");});
test("contribuito -> contribu", function() {deepEqual( Stem("contribuito"), "contribu");});
test("contribuiva -> contribu", function() {deepEqual( Stem("contribuiva"), "contribu");});
test("contribuivan -> contribuivan", function() {deepEqual( Stem("contribuivan"), "contribuivan");});
test("contributi -> contrib", function() {deepEqual( Stem("contributi"), "contrib");});
test("contributive -> contribut", function() {deepEqual( Stem("contributive"), "contribut");});
test("contributo -> contrib", function() {deepEqual( Stem("contributo"), "contrib");});
test("contrista -> contrist", function() {deepEqual( Stem("contrista"), "contrist");});
test("contristar -> contrist", function() {deepEqual( Stem("contristar"), "contrist");});
test("contristare -> contrist", function() {deepEqual( Stem("contristare"), "contrist");});
test("contristata -> contrist", function() {deepEqual( Stem("contristata"), "contrist");});
test("contristato -> contrist", function() {deepEqual( Stem("contristato"), "contrist");});
test("contrita -> contr", function() {deepEqual( Stem("contrita"), "contr");});
test("contro -> contr", function() {deepEqual( Stem("contro"), "contr");});
test("contrò -> contr", function() {deepEqual( Stem("contrò"), "contr");});
test("controbalzo -> controbalz", function() {deepEqual( Stem("controbalzo"), "controbalz");});
test("controcanto -> controcant", function() {deepEqual( Stem("controcanto"), "controcant");});
test("controcorrente -> controcorrent", function() {deepEqual( Stem("controcorrente"), "controcorrent");});
test("controdomande -> controdomand", function() {deepEqual( Stem("controdomande"), "controdomand");});
test("controlla -> controll", function() {deepEqual( Stem("controlla"), "controll");});
test("controllano -> controll", function() {deepEqual( Stem("controllano"), "controll");});
test("controllare -> controll", function() {deepEqual( Stem("controllare"), "controll");});
test("controllarlo -> controll", function() {deepEqual( Stem("controllarlo"), "controll");});
test("controllata -> controll", function() {deepEqual( Stem("controllata"), "controll");});
test("controllate -> controll", function() {deepEqual( Stem("controllate"), "controll");});
test("controllato -> controll", function() {deepEqual( Stem("controllato"), "controll");});
test("controllava -> controll", function() {deepEqual( Stem("controllava"), "controll");});
test("controllavano -> controll", function() {deepEqual( Stem("controllavano"), "controll");});
test("controllerano -> controller", function() {deepEqual( Stem("controllerano"), "controller");});
test("controlli -> controll", function() {deepEqual( Stem("controlli"), "controll");});
test("controllo -> controll", function() {deepEqual( Stem("controllo"), "controll");});
test("controllori -> controllor", function() {deepEqual( Stem("controllori"), "controllor");});
test("controparte -> contropart", function() {deepEqual( Stem("controparte"), "contropart");});
test("contropiede -> contropied", function() {deepEqual( Stem("contropiede"), "contropied");});
test("controtempo -> controtemp", function() {deepEqual( Stem("controtempo"), "controtemp");});
test("controtendenza -> controtendent", function() {deepEqual( Stem("controtendenza"), "controtendent");});
test("controverifiche -> controverif", function() {deepEqual( Stem("controverifiche"), "controverif");});
test("controversa -> controvers", function() {deepEqual( Stem("controversa"), "controvers");});
test("controverse -> controvers", function() {deepEqual( Stem("controverse"), "controvers");});
test("controversi -> controv", function() {deepEqual( Stem("controversi"), "controv");});
test("controversie -> controvers", function() {deepEqual( Stem("controversie"), "controvers");});
test("controverso -> controvers", function() {deepEqual( Stem("controverso"), "controvers");});
test("controvoglia -> controvogl", function() {deepEqual( Stem("controvoglia"), "controvogl");});
test("conttato -> contt", function() {deepEqual( Stem("conttato"), "contt");});
test("contumacia -> contumac", function() {deepEqual( Stem("contumacia"), "contumac");});
test("conturbata -> conturb", function() {deepEqual( Stem("conturbata"), "conturb");});
test("conturbato -> conturb", function() {deepEqual( Stem("conturbato"), "conturb");});
test("contusione -> contusion", function() {deepEqual( Stem("contusione"), "contusion");});
test("conueniente -> conuenient", function() {deepEqual( Stem("conueniente"), "conuenient");});
test("convalescente -> convalescent", function() {deepEqual( Stem("convalescente"), "convalescent");});
test("convalescenti -> convalescent", function() {deepEqual( Stem("convalescenti"), "convalescent");});
test("convalescenza -> convalescent", function() {deepEqual( Stem("convalescenza"), "convalescent");});
test("convalidato -> convalid", function() {deepEqual( Stem("convalidato"), "convalid");});
test("convalide -> convalid", function() {deepEqual( Stem("convalide"), "convalid");});
test("convegno -> convegn", function() {deepEqual( Stem("convegno"), "convegn");});
test("convenendo -> conven", function() {deepEqual( Stem("convenendo"), "conven");});
test("convenevole -> convenevol", function() {deepEqual( Stem("convenevole"), "convenevol");});
test("convenevolmente -> convenevol", function() {deepEqual( Stem("convenevolmente"), "convenevol");});
test("convenga -> conveng", function() {deepEqual( Stem("convenga"), "conveng");});
test("convengo -> conveng", function() {deepEqual( Stem("convengo"), "conveng");});
test("convengono -> conveng", function() {deepEqual( Stem("convengono"), "conveng");});
test("conveniente -> convenient", function() {deepEqual( Stem("conveniente"), "convenient");});
test("convenienti -> convenient", function() {deepEqual( Stem("convenienti"), "convenient");});
test("convenienza -> convenient", function() {deepEqual( Stem("convenienza"), "convenient");});
test("convenire -> conven", function() {deepEqual( Stem("convenire"), "conven");});
test("convenisse -> conveniss", function() {deepEqual( Stem("convenisse"), "conveniss");});
test("conveniva -> conven", function() {deepEqual( Stem("conveniva"), "conven");});
test("convenivano -> conven", function() {deepEqual( Stem("convenivano"), "conven");});
test("convenne -> convenn", function() {deepEqual( Stem("convenne"), "convenn");});
test("conventi -> convent", function() {deepEqual( Stem("conventi"), "convent");});
test("convention -> convention", function() {deepEqual( Stem("convention"), "convention");});
test("convento -> convent", function() {deepEqual( Stem("convento"), "convent");});
test("convenuta -> conven", function() {deepEqual( Stem("convenuta"), "conven");});
test("convenuti -> conven", function() {deepEqual( Stem("convenuti"), "conven");});
test("convenuto -> conven", function() {deepEqual( Stem("convenuto"), "conven");});
test("convenzionale -> convenzional", function() {deepEqual( Stem("convenzionale"), "convenzional");});
test("convenzionali -> convenzional", function() {deepEqual( Stem("convenzionali"), "convenzional");});
test("convenzione -> convenzion", function() {deepEqual( Stem("convenzione"), "convenzion");});
test("convenzioni -> convenzion", function() {deepEqual( Stem("convenzioni"), "convenzion");});
test("convergenza -> convergent", function() {deepEqual( Stem("convergenza"), "convergent");});
test("convergenze -> convergent", function() {deepEqual( Stem("convergenze"), "convergent");});
test("converrà -> converr", function() {deepEqual( Stem("converrà"), "converr");});
test("conversa -> convers", function() {deepEqual( Stem("conversa"), "convers");});
test("conversando -> convers", function() {deepEqual( Stem("conversando"), "convers");});
test("conversato -> convers", function() {deepEqual( Stem("conversato"), "convers");});
test("conversazione -> convers", function() {deepEqual( Stem("conversazione"), "convers");});
test("conversazioni -> convers", function() {deepEqual( Stem("conversazioni"), "convers");});
test("converse -> convers", function() {deepEqual( Stem("converse"), "convers");});
test("conversione -> conversion", function() {deepEqual( Stem("conversione"), "conversion");});
test("convert -> convert", function() {deepEqual( Stem("convert"), "convert");});
test("convertibilità -> convertibil", function() {deepEqual( Stem("convertibilità"), "convertibil");});
test("convertirono -> convert", function() {deepEqual( Stem("convertirono"), "convert");});
test("convertito -> convert", function() {deepEqual( Stem("convertito"), "convert");});
test("convertono -> convert", function() {deepEqual( Stem("convertono"), "convert");});
test("convesso -> convess", function() {deepEqual( Stem("convesso"), "convess");});
test("convien -> convien", function() {deepEqual( Stem("convien"), "convien");});
test("conviene -> convien", function() {deepEqual( Stem("conviene"), "convien");});
test("convincano -> convinc", function() {deepEqual( Stem("convincano"), "convinc");});
test("convincente -> convincent", function() {deepEqual( Stem("convincente"), "convincent");});
test("convincer -> convincer", function() {deepEqual( Stem("convincer"), "convincer");});
test("convincere -> convinc", function() {deepEqual( Stem("convincere"), "convinc");});
test("convincerla -> convinc", function() {deepEqual( Stem("convincerla"), "convinc");});
test("convincerli -> convinc", function() {deepEqual( Stem("convincerli"), "convinc");});
test("convincerlo -> convinc", function() {deepEqual( Stem("convincerlo"), "convinc");});
test("convincimento -> convinc", function() {deepEqual( Stem("convincimento"), "convinc");});
test("convinta -> convint", function() {deepEqual( Stem("convinta"), "convint");});
test("convinti -> convint", function() {deepEqual( Stem("convinti"), "convint");});
test("convinto -> convint", function() {deepEqual( Stem("convinto"), "convint");});
test("convinzione -> convinzion", function() {deepEqual( Stem("convinzione"), "convinzion");});
test("convinzioni -> convinzion", function() {deepEqual( Stem("convinzioni"), "convinzion");});
test("convitante -> convit", function() {deepEqual( Stem("convitante"), "convit");});
test("convitati -> convit", function() {deepEqual( Stem("convitati"), "convit");});
test("convitato -> convit", function() {deepEqual( Stem("convitato"), "convit");});
test("convito -> conv", function() {deepEqual( Stem("convito"), "conv");});
test("convivere -> conviv", function() {deepEqual( Stem("convivere"), "conviv");});
test("conviviali -> convivial", function() {deepEqual( Stem("conviviali"), "convivial");});
test("convivio -> conviv", function() {deepEqual( Stem("convivio"), "conviv");});
test("convivono -> conviv", function() {deepEqual( Stem("convivono"), "conviv");});
test("convoca -> convoc", function() {deepEqual( Stem("convoca"), "convoc");});
test("convocare -> convoc", function() {deepEqual( Stem("convocare"), "convoc");});
test("convocata -> convoc", function() {deepEqual( Stem("convocata"), "convoc");});
test("convocate -> convoc", function() {deepEqual( Stem("convocate"), "convoc");});
test("convocati -> convoc", function() {deepEqual( Stem("convocati"), "convoc");});
test("convocato -> convoc", function() {deepEqual( Stem("convocato"), "convoc");});
test("convocazione -> convoc", function() {deepEqual( Stem("convocazione"), "convoc");});
test("convocazioni -> convoc", function() {deepEqual( Stem("convocazioni"), "convoc");});
test("convogli -> convogl", function() {deepEqual( Stem("convogli"), "convogl");});
test("convoglio -> convogl", function() {deepEqual( Stem("convoglio"), "convogl");});
test("convulsa -> convuls", function() {deepEqual( Stem("convulsa"), "convuls");});
test("convulsiva -> convuls", function() {deepEqual( Stem("convulsiva"), "convuls");});
test("coodinatori -> coodin", function() {deepEqual( Stem("coodinatori"), "coodin");});
test("cooiperazione -> cooiper", function() {deepEqual( Stem("cooiperazione"), "cooiper");});
test("cooman -> cooman", function() {deepEqual( Stem("cooman"), "cooman");});
test("coonestare -> coonest", function() {deepEqual( Stem("coonestare"), "coonest");});
test("coop -> coop", function() {deepEqual( Stem("coop"), "coop");});
test("cooperare -> cooper", function() {deepEqual( Stem("cooperare"), "cooper");});
test("cooperativa -> cooper", function() {deepEqual( Stem("cooperativa"), "cooper");});
test("cooperative -> cooper", function() {deepEqual( Stem("cooperative"), "cooper");});
test("cooperativo -> cooper", function() {deepEqual( Stem("cooperativo"), "cooper");});
test("cooperato -> cooper", function() {deepEqual( Stem("cooperato"), "cooper");});
test("cooperatore -> cooper", function() {deepEqual( Stem("cooperatore"), "cooper");});
test("cooperazione -> cooper", function() {deepEqual( Stem("cooperazione"), "cooper");});
test("cooperò -> coop", function() {deepEqual( Stem("cooperò"), "coop");});
test("coopi -> coop", function() {deepEqual( Stem("coopi"), "coop");});
test("coopinvest -> coopinvest", function() {deepEqual( Stem("coopinvest"), "coopinvest");});
test("cooprend -> cooprend", function() {deepEqual( Stem("cooprend"), "cooprend");});
test("cooptazione -> cooptazion", function() {deepEqual( Stem("cooptazione"), "cooptazion");});
test("coordina -> coordin", function() {deepEqual( Stem("coordina"), "coordin");});
test("coordinamento -> coordin", function() {deepEqual( Stem("coordinamento"), "coordin");});
test("coordinando -> coordin", function() {deepEqual( Stem("coordinando"), "coordin");});
test("coordinare -> coordin", function() {deepEqual( Stem("coordinare"), "coordin");});
test("coordinata -> coordin", function() {deepEqual( Stem("coordinata"), "coordin");});
test("coordinate -> coordin", function() {deepEqual( Stem("coordinate"), "coordin");});
test("coordinati -> coordin", function() {deepEqual( Stem("coordinati"), "coordin");});
test("coordinatore -> coordin", function() {deepEqual( Stem("coordinatore"), "coordin");});
test("coordinatori -> coordin", function() {deepEqual( Stem("coordinatori"), "coordin");});
test("coordinazione -> coordin", function() {deepEqual( Stem("coordinazione"), "coordin");});
test("copenaghen -> copenaghen", function() {deepEqual( Stem("copenaghen"), "copenaghen");});
test("coperatura -> coperatur", function() {deepEqual( Stem("coperatura"), "coperatur");});
test("coperchi -> coperc", function() {deepEqual( Stem("coperchi"), "coperc");});
test("coperta -> copert", function() {deepEqual( Stem("coperta"), "copert");});
test("copertamente -> copert", function() {deepEqual( Stem("copertamente"), "copert");});
test("coperte -> copert", function() {deepEqual( Stem("coperte"), "copert");});
test("coperti -> cop", function() {deepEqual( Stem("coperti"), "cop");});
test("copertina -> copertin", function() {deepEqual( Stem("copertina"), "copertin");});
test("coperto -> copert", function() {deepEqual( Stem("coperto"), "copert");});
test("copertura -> copertur", function() {deepEqual( Stem("copertura"), "copertur");});
test("coperturà -> copertur", function() {deepEqual( Stem("coperturà"), "copertur");});
test("copia -> cop", function() {deepEqual( Stem("copia"), "cop");});
test("copiare -> cop", function() {deepEqual( Stem("copiare"), "cop");});
test("copiator -> copiator", function() {deepEqual( Stem("copiator"), "copiator");});
test("copie -> cop", function() {deepEqual( Stem("copie"), "cop");});
test("copiò -> cop", function() {deepEqual( Stem("copiò"), "cop");});
test("copione -> copion", function() {deepEqual( Stem("copione"), "copion");});
test("coppa -> copp", function() {deepEqual( Stem("coppa"), "copp");});
test("coppia -> copp", function() {deepEqual( Stem("coppia"), "copp");});
test("coppie -> copp", function() {deepEqual( Stem("coppie"), "copp");});
test("coppola -> coppol", function() {deepEqual( Stem("coppola"), "coppol");});
test("coprano -> copr", function() {deepEqual( Stem("coprano"), "copr");});
test("copre -> copr", function() {deepEqual( Stem("copre"), "copr");});
test("coprete -> copr", function() {deepEqual( Stem("coprete"), "copr");});
test("coprì -> copr", function() {deepEqual( Stem("coprì"), "copr");});
test("coprire -> copr", function() {deepEqual( Stem("coprire"), "copr");});
test("copriremo -> copr", function() {deepEqual( Stem("copriremo"), "copr");});
test("copriva -> copr", function() {deepEqual( Stem("copriva"), "copr");});
test("coproduzione -> coprodu", function() {deepEqual( Stem("coproduzione"), "coprodu");});
test("coprono -> copr", function() {deepEqual( Stem("coprono"), "copr");});
test("cor -> cor", function() {deepEqual( Stem("cor"), "cor");});
test("coraggio -> coragg", function() {deepEqual( Stem("coraggio"), "coragg");});
test("coraggiosa -> coragg", function() {deepEqual( Stem("coraggiosa"), "coragg");});
test("coraggiose -> coragg", function() {deepEqual( Stem("coraggiose"), "coragg");});
test("coraggiosi -> coragg", function() {deepEqual( Stem("coraggiosi"), "coragg");});
test("coraggioso -> coragg", function() {deepEqual( Stem("coraggioso"), "coragg");});
test("corale -> coral", function() {deepEqual( Stem("corale"), "coral");});
test("corato -> cor", function() {deepEqual( Stem("corato"), "cor");});
test("corazza -> corazz", function() {deepEqual( Stem("corazza"), "corazz");});
test("corazzati -> corazz", function() {deepEqual( Stem("corazzati"), "corazz");});
test("corbelleria -> corbeller", function() {deepEqual( Stem("corbelleria"), "corbeller");});
test("corbellerie -> corbeller", function() {deepEqual( Stem("corbellerie"), "corbeller");});
test("corbucci -> corbucc", function() {deepEqual( Stem("corbucci"), "corbucc");});
test("corcione -> corcion", function() {deepEqual( Stem("corcione"), "corcion");});
test("corda -> cord", function() {deepEqual( Stem("corda"), "cord");});
test("cordate -> cord", function() {deepEqual( Stem("cordate"), "cord");});
test("corde -> cord", function() {deepEqual( Stem("corde"), "cord");});
test("cordellina -> cordellin", function() {deepEqual( Stem("cordellina"), "cordellin");});
test("cordiale -> cordial", function() {deepEqual( Stem("cordiale"), "cordial");});
test("cordialità -> cordial", function() {deepEqual( Stem("cordialità"), "cordial");});
test("cordialmente -> cordial", function() {deepEqual( Stem("cordialmente"), "cordial");});
test("cordicella -> cordicell", function() {deepEqual( Stem("cordicella"), "cordicell");});
test("cordigliera -> cordiglier", function() {deepEqual( Stem("cordigliera"), "cordiglier");});
test("cordoglio -> cordogl", function() {deepEqual( Stem("cordoglio"), "cordogl");});
test("cordone -> cordon", function() {deepEqual( Stem("cordone"), "cordon");});
test("cordova -> cordov", function() {deepEqual( Stem("cordova"), "cordov");});
test("cordusio -> cordus", function() {deepEqual( Stem("cordusio"), "cordus");});
test("core -> cor", function() {deepEqual( Stem("core"), "cor");});
test("coreano -> cor", function() {deepEqual( Stem("coreano"), "cor");});
test("coreografie -> coreograf", function() {deepEqual( Stem("coreografie"), "coreograf");});
test("coretto -> corett", function() {deepEqual( Stem("coretto"), "corett");});
test("cori -> cor", function() {deepEqual( Stem("cori"), "cor");});
test("corini -> corin", function() {deepEqual( Stem("corini"), "corin");});
test("corino -> corin", function() {deepEqual( Stem("corino"), "corin");});
test("corleone -> corleon", function() {deepEqual( Stem("corleone"), "corleon");});
test("corna -> corn", function() {deepEqual( Stem("corna"), "corn");});
test("cornacchia -> cornacc", function() {deepEqual( Stem("cornacchia"), "cornacc");});
test("cornacchie -> cornacc", function() {deepEqual( Stem("cornacchie"), "cornacc");});
test("cornacchini -> cornacchin", function() {deepEqual( Stem("cornacchini"), "cornacchin");});
test("corner -> corner", function() {deepEqual( Stem("corner"), "corner");});
test("cornia -> corn", function() {deepEqual( Stem("cornia"), "corn");});
test("cornice -> cornic", function() {deepEqual( Stem("cornice"), "cornic");});
test("corno -> corn", function() {deepEqual( Stem("corno"), "corn");});
test("coro -> cor", function() {deepEqual( Stem("coro"), "cor");});
test("corona -> coron", function() {deepEqual( Stem("corona"), "coron");});
test("coronar -> coron", function() {deepEqual( Stem("coronar"), "coron");});
test("coronarici -> coronar", function() {deepEqual( Stem("coronarici"), "coronar");});
test("coronato -> coron", function() {deepEqual( Stem("coronato"), "coron");});
test("corone -> coron", function() {deepEqual( Stem("corone"), "coron");});
test("corp -> corp", function() {deepEqual( Stem("corp"), "corp");});
test("corpaccio -> corpacc", function() {deepEqual( Stem("corpaccio"), "corpacc");});
test("corpi -> corp", function() {deepEqual( Stem("corpi"), "corp");});
test("corpo -> corp", function() {deepEqual( Stem("corpo"), "corp");});
test("corporale -> corporal", function() {deepEqual( Stem("corporale"), "corporal");});
test("corporali -> corporal", function() {deepEqual( Stem("corporali"), "corporal");});
test("corporate -> corpor", function() {deepEqual( Stem("corporate"), "corpor");});
test("corporation -> corporation", function() {deepEqual( Stem("corporation"), "corporation");});
test("corporazione -> corpor", function() {deepEqual( Stem("corporazione"), "corpor");});
test("corr -> corr", function() {deepEqual( Stem("corr"), "corr");});
test("corra -> corr", function() {deepEqual( Stem("corra"), "corr");});
test("corradini -> corradin", function() {deepEqual( Stem("corradini"), "corradin");});
test("corrado -> corrad", function() {deepEqual( Stem("corrado"), "corrad");});
test("corre -> corr", function() {deepEqual( Stem("corre"), "corr");});
test("corredata -> corred", function() {deepEqual( Stem("corredata"), "corred");});
test("corredate -> corred", function() {deepEqual( Stem("corredate"), "corred");});
test("corredato -> corred", function() {deepEqual( Stem("corredato"), "corred");});
test("corredo -> corred", function() {deepEqual( Stem("corredo"), "corred");});
test("corregga -> corregg", function() {deepEqual( Stem("corregga"), "corregg");});
test("corregge -> corregg", function() {deepEqual( Stem("corregge"), "corregg");});
test("correggendole -> corregg", function() {deepEqual( Stem("correggendole"), "corregg");});
test("correggere -> corregg", function() {deepEqual( Stem("correggere"), "corregg");});
test("correggimi -> correggim", function() {deepEqual( Stem("correggimi"), "correggim");});
test("correndo -> corr", function() {deepEqual( Stem("correndo"), "corr");});
test("corrente -> corrent", function() {deepEqual( Stem("corrente"), "corrent");});
test("correnti -> corrent", function() {deepEqual( Stem("correnti"), "corrent");});
test("correr -> correr", function() {deepEqual( Stem("correr"), "correr");});
test("correranno -> corr", function() {deepEqual( Stem("correranno"), "corr");});
test("correre -> corr", function() {deepEqual( Stem("correre"), "corr");});
test("correrebber -> correrebber", function() {deepEqual( Stem("correrebber"), "correrebber");});
test("corrergli -> corr", function() {deepEqual( Stem("corrergli"), "corr");});
test("correrò -> corr", function() {deepEqual( Stem("correrò"), "corr");});
test("corresponsione -> corresponsion", function() {deepEqual( Stem("corresponsione"), "corresponsion");});
test("corresse -> corress", function() {deepEqual( Stem("corresse"), "corress");});
test("correte -> corr", function() {deepEqual( Stem("correte"), "corr");});
test("corretta -> corrett", function() {deepEqual( Stem("corretta"), "corrett");});
test("corretteza -> correttez", function() {deepEqual( Stem("corretteza"), "correttez");});
test("correttezza -> correttezz", function() {deepEqual( Stem("correttezza"), "correttezz");});
test("corretti -> corrett", function() {deepEqual( Stem("corretti"), "corrett");});
test("correttissimo -> correttissim", function() {deepEqual( Stem("correttissimo"), "correttissim");});
test("correttiva -> corrett", function() {deepEqual( Stem("correttiva"), "corrett");});
test("corretto -> corrett", function() {deepEqual( Stem("corretto"), "corrett");});
test("correttrice -> correttr", function() {deepEqual( Stem("correttrice"), "correttr");});
test("correva -> corr", function() {deepEqual( Stem("correva"), "corr");});
test("correvan -> correvan", function() {deepEqual( Stem("correvan"), "correvan");});
test("correvano -> corr", function() {deepEqual( Stem("correvano"), "corr");});
test("correzione -> correzion", function() {deepEqual( Stem("correzione"), "correzion");});
test("correzioni -> correzion", function() {deepEqual( Stem("correzioni"), "correzion");});
test("corridoi -> corrido", function() {deepEqual( Stem("corridoi"), "corrido");});
test("corridoio -> corridoi", function() {deepEqual( Stem("corridoio"), "corridoi");});
test("corriere -> corr", function() {deepEqual( Stem("corriere"), "corr");});
test("corrierè -> corrier", function() {deepEqual( Stem("corrierè"), "corrier");});
test("corrisopondono -> corrisopond", function() {deepEqual( Stem("corrisopondono"), "corrisopond");});
test("corrispettivo -> corrispett", function() {deepEqual( Stem("corrispettivo"), "corrispett");});
test("corrisponda -> corrispond", function() {deepEqual( Stem("corrisponda"), "corrispond");});
test("corrisponde -> corrispond", function() {deepEqual( Stem("corrisponde"), "corrispond");});
test("corrispondendo -> corrispond", function() {deepEqual( Stem("corrispondendo"), "corrispond");});
test("corrispondente -> corrispondent", function() {deepEqual( Stem("corrispondente"), "corrispondent");});
test("corrispondenti -> corrispondent", function() {deepEqual( Stem("corrispondenti"), "corrispondent");});
test("corrispondenza -> corrispondent", function() {deepEqual( Stem("corrispondenza"), "corrispondent");});
test("corrispondenze -> corrispondent", function() {deepEqual( Stem("corrispondenze"), "corrispondent");});
test("corrispondere -> corrispond", function() {deepEqual( Stem("corrispondere"), "corrispond");});
test("corrispondeva -> corrispond", function() {deepEqual( Stem("corrispondeva"), "corrispond");});
test("corrispondono -> corrispond", function() {deepEqual( Stem("corrispondono"), "corrispond");});
test("corrisposero -> corrisposer", function() {deepEqual( Stem("corrisposero"), "corrisposer");});
test("corrisposta -> corrispost", function() {deepEqual( Stem("corrisposta"), "corrispost");});
test("corrisposto -> corrispost", function() {deepEqual( Stem("corrisposto"), "corrispost");});
test("corro -> corr", function() {deepEqual( Stem("corro"), "corr");});
test("corrompevano -> corromp", function() {deepEqual( Stem("corrompevano"), "corromp");});
test("corron -> corron", function() {deepEqual( Stem("corron"), "corron");});
test("corrono -> corr", function() {deepEqual( Stem("corrono"), "corr");});
test("corrotti -> corrott", function() {deepEqual( Stem("corrotti"), "corrott");});
test("corrusco -> corrusc", function() {deepEqual( Stem("corrusco"), "corrusc");});
test("corruttivi -> corrutt", function() {deepEqual( Stem("corruttivi"), "corrutt");});
test("corruzione -> corruzion", function() {deepEqual( Stem("corruzione"), "corruzion");});
test("corrwezione -> corrwezion", function() {deepEqual( Stem("corrwezione"), "corrwezion");});
test("corsa -> cors", function() {deepEqual( Stem("corsa"), "cors");});
test("corse -> cors", function() {deepEqual( Stem("corse"), "cors");});
test("corserelle -> corserell", function() {deepEqual( Stem("corserelle"), "corserell");});
test("corsero -> corser", function() {deepEqual( Stem("corsero"), "corser");});
test("corsi -> cors", function() {deepEqual( Stem("corsi"), "cors");});
test("corsia -> cors", function() {deepEqual( Stem("corsia"), "cors");});
test("corsìa -> corsì", function() {deepEqual( Stem("corsìa"), "corsì");});
test("corsica -> corsic", function() {deepEqual( Stem("corsica"), "corsic");});
test("corsini -> corsin", function() {deepEqual( Stem("corsini"), "corsin");});
test("corsivo -> cors", function() {deepEqual( Stem("corsivo"), "cors");});
test("corso -> cors", function() {deepEqual( Stem("corso"), "cors");});
test("corta -> cort", function() {deepEqual( Stem("corta"), "cort");});
test("corte -> cort", function() {deepEqual( Stem("corte"), "cort");});
test("cortecce -> cortecc", function() {deepEqual( Stem("cortecce"), "cortecc");});
test("corteggiata -> cortegg", function() {deepEqual( Stem("corteggiata"), "cortegg");});
test("corteggiato -> cortegg", function() {deepEqual( Stem("corteggiato"), "cortegg");});
test("corteggio -> cortegg", function() {deepEqual( Stem("corteggio"), "cortegg");});
test("cortenuova -> cortenuov", function() {deepEqual( Stem("cortenuova"), "cortenuov");});
test("corteo -> corte", function() {deepEqual( Stem("corteo"), "corte");});
test("cortese -> cortes", function() {deepEqual( Stem("cortese"), "cortes");});
test("cortesemente -> cortes", function() {deepEqual( Stem("cortesemente"), "cortes");});
test("cortesia -> cortes", function() {deepEqual( Stem("cortesia"), "cortes");});
test("corti -> cort", function() {deepEqual( Stem("corti"), "cort");});
test("cortigianelli -> cortigianell", function() {deepEqual( Stem("cortigianelli"), "cortigianell");});
test("cortigiani -> cortigian", function() {deepEqual( Stem("cortigiani"), "cortigian");});
test("cortile -> cortil", function() {deepEqual( Stem("cortile"), "cortil");});
test("cortiletto -> cortilett", function() {deepEqual( Stem("cortiletto"), "cortilett");});
test("cortili -> cortil", function() {deepEqual( Stem("cortili"), "cortil");});
test("cortina -> cortin", function() {deepEqual( Stem("cortina"), "cortin");});
test("corto -> cort", function() {deepEqual( Stem("corto"), "cort");});
test("corvaccio -> corvacc", function() {deepEqual( Stem("corvaccio"), "corvacc");});
test("corvetta -> corvett", function() {deepEqual( Stem("corvetta"), "corvett");});
test("corvi -> corv", function() {deepEqual( Stem("corvi"), "corv");});
test("corvo -> corv", function() {deepEqual( Stem("corvo"), "corv");});
test("cos -> cos", function() {deepEqual( Stem("cos"), "cos");});
test("cosa -> cos", function() {deepEqual( Stem("cosa"), "cos");});
test("cosce -> cosc", function() {deepEqual( Stem("cosce"), "cosc");});
test("cosche -> cosc", function() {deepEqual( Stem("cosche"), "cosc");});
test("coscia -> cosc", function() {deepEqual( Stem("coscia"), "cosc");});
test("cosciali -> coscial", function() {deepEqual( Stem("cosciali"), "coscial");});
test("coscienti -> coscient", function() {deepEqual( Stem("coscienti"), "coscient");});
test("coscienza -> coscienz", function() {deepEqual( Stem("coscienza"), "coscienz");});
test("cose -> cos", function() {deepEqual( Stem("cose"), "cos");});
test("cosenza -> cosenz", function() {deepEqual( Stem("cosenza"), "cosenz");});
test("cosette -> cosett", function() {deepEqual( Stem("cosette"), "cosett");});
test("cosi -> cos", function() {deepEqual( Stem("cosi"), "cos");});
test("così -> cos", function() {deepEqual( Stem("così"), "cos");});
test("cosiddetta -> cosiddett", function() {deepEqual( Stem("cosiddetta"), "cosiddett");});
test("cosiddette -> cosiddett", function() {deepEqual( Stem("cosiddette"), "cosiddett");});
test("cosiddetti -> cosiddett", function() {deepEqual( Stem("cosiddetti"), "cosiddett");});
test("cosiddetto -> cosiddett", function() {deepEqual( Stem("cosiddetto"), "cosiddett");});
test("cosimi -> cosim", function() {deepEqual( Stem("cosimi"), "cosim");});
test("cosimo -> cosim", function() {deepEqual( Stem("cosimo"), "cosim");});
test("cospetto -> cospett", function() {deepEqual( Stem("cospetto"), "cospett");});
test("cospicua -> cospicu", function() {deepEqual( Stem("cospicua"), "cospicu");});
test("cospicue -> cospicu", function() {deepEqual( Stem("cospicue"), "cospicu");});
test("cospicui -> cospicu", function() {deepEqual( Stem("cospicui"), "cospicu");});
test("cospicuo -> cospicu", function() {deepEqual( Stem("cospicuo"), "cospicu");});
test("cospiravano -> cospir", function() {deepEqual( Stem("cospiravano"), "cospir");});
test("cossato -> coss", function() {deepEqual( Stem("cossato"), "coss");});
test("cossiga -> cossig", function() {deepEqual( Stem("cossiga"), "cossig");});
test("cossutta -> cossutt", function() {deepEqual( Stem("cossutta"), "cossutt");});
test("costa -> cost", function() {deepEqual( Stem("costa"), "cost");});
test("costacurta -> costacurt", function() {deepEqual( Stem("costacurta"), "costacurt");});
test("costante -> costant", function() {deepEqual( Stem("costante"), "costant");});
test("costantemente -> costant", function() {deepEqual( Stem("costantemente"), "costant");});
test("costanti -> costant", function() {deepEqual( Stem("costanti"), "costant");});
test("costantino -> costantin", function() {deepEqual( Stem("costantino"), "costantin");});
test("costanza -> costanz", function() {deepEqual( Stem("costanza"), "costanz");});
test("costanzo -> costanz", function() {deepEqual( Stem("costanzo"), "costanz");});
test("costare -> cost", function() {deepEqual( Stem("costare"), "cost");});
test("costarica -> costar", function() {deepEqual( Stem("costarica"), "costar");});
test("costaricano -> costaric", function() {deepEqual( Stem("costaricano"), "costaric");});
test("costaron -> costaron", function() {deepEqual( Stem("costaron"), "costaron");});
test("costasse -> cost", function() {deepEqual( Stem("costasse"), "cost");});
test("costata -> cost", function() {deepEqual( Stem("costata"), "cost");});
test("costato -> cost", function() {deepEqual( Stem("costato"), "cost");});
test("coste -> cost", function() {deepEqual( Stem("coste"), "cost");});
test("costeggia -> costegg", function() {deepEqual( Stem("costeggia"), "costegg");});
test("costeggiando -> costegg", function() {deepEqual( Stem("costeggiando"), "costegg");});
test("costeggiare -> costegg", function() {deepEqual( Stem("costeggiare"), "costegg");});
test("costeggiarla -> costegg", function() {deepEqual( Stem("costeggiarla"), "costegg");});
test("costeggiate -> costegg", function() {deepEqual( Stem("costeggiate"), "costegg");});
test("costeggiava -> costegg", function() {deepEqual( Stem("costeggiava"), "costegg");});
test("costei -> coste", function() {deepEqual( Stem("costei"), "coste");});
test("costerebbe -> cost", function() {deepEqual( Stem("costerebbe"), "cost");});
test("costernata -> costern", function() {deepEqual( Stem("costernata"), "costern");});
test("costernati -> costern", function() {deepEqual( Stem("costernati"), "costern");});
test("costernazione -> costern", function() {deepEqual( Stem("costernazione"), "costern");});
test("costi -> cost", function() {deepEqual( Stem("costi"), "cost");});
test("costì -> cost", function() {deepEqual( Stem("costì"), "cost");});
test("costiera -> costier", function() {deepEqual( Stem("costiera"), "costier");});
test("costiere -> cost", function() {deepEqual( Stem("costiere"), "cost");});
test("costiero -> costier", function() {deepEqual( Stem("costiero"), "costier");});
test("costituendo -> costitu", function() {deepEqual( Stem("costituendo"), "costitu");});
test("costituente -> costituent", function() {deepEqual( Stem("costituente"), "costituent");});
test("costituirà -> costitu", function() {deepEqual( Stem("costituirà"), "costitu");});
test("costituiranno -> costitu", function() {deepEqual( Stem("costituiranno"), "costitu");});
test("costituire -> costitu", function() {deepEqual( Stem("costituire"), "costitu");});
test("costituirsi -> costitu", function() {deepEqual( Stem("costituirsi"), "costitu");});
test("costituisca -> costitu", function() {deepEqual( Stem("costituisca"), "costitu");});
test("costituisce -> costitu", function() {deepEqual( Stem("costituisce"), "costitu");});
test("costituiscono -> costitu", function() {deepEqual( Stem("costituiscono"), "costitu");});
test("costituisse -> costituiss", function() {deepEqual( Stem("costituisse"), "costituiss");});
test("costituita -> costitu", function() {deepEqual( Stem("costituita"), "costitu");});
test("costituite -> costitu", function() {deepEqual( Stem("costituite"), "costitu");});
test("costituiti -> costitu", function() {deepEqual( Stem("costituiti"), "costitu");});
test("costituitisi -> costituitis", function() {deepEqual( Stem("costituitisi"), "costituitis");});
test("costituito -> costitu", function() {deepEqual( Stem("costituito"), "costitu");});
test("costitutiva -> costitut", function() {deepEqual( Stem("costitutiva"), "costitut");});
test("costitutivi -> costitut", function() {deepEqual( Stem("costitutivi"), "costitut");});
test("costituzionale -> costituzional", function() {deepEqual( Stem("costituzionale"), "costituzional");});
test("costituzionali -> costituzional", function() {deepEqual( Stem("costituzionali"), "costituzional");});
test("costituzionalisti -> costituzional", function() {deepEqual( Stem("costituzionalisti"), "costituzional");});
test("costituzione -> costitu", function() {deepEqual( Stem("costituzione"), "costitu");});
test("costo -> cost", function() {deepEqual( Stem("costo"), "cost");});
test("costò -> cost", function() {deepEqual( Stem("costò"), "cost");});
test("costola -> costol", function() {deepEqual( Stem("costola"), "costol");});
test("costole -> costol", function() {deepEqual( Stem("costole"), "costol");});
test("costoro -> costor", function() {deepEqual( Stem("costoro"), "costor");});
test("costosa -> costos", function() {deepEqual( Stem("costosa"), "costos");});
test("costosi -> costos", function() {deepEqual( Stem("costosi"), "costos");});
test("costretta -> costrett", function() {deepEqual( Stem("costretta"), "costrett");});
test("costrette -> costrett", function() {deepEqual( Stem("costrette"), "costrett");});
test("costretti -> costrett", function() {deepEqual( Stem("costretti"), "costrett");});
test("costretto -> costrett", function() {deepEqual( Stem("costretto"), "costrett");});
test("costringe -> costring", function() {deepEqual( Stem("costringe"), "costring");});
test("costringendo -> costring", function() {deepEqual( Stem("costringendo"), "costring");});
test("costringendoci -> costring", function() {deepEqual( Stem("costringendoci"), "costring");});
test("costringerà -> costring", function() {deepEqual( Stem("costringerà"), "costring");});
test("costringerci -> costring", function() {deepEqual( Stem("costringerci"), "costring");});
test("costringere -> costring", function() {deepEqual( Stem("costringere"), "costring");});
test("costringerli -> costring", function() {deepEqual( Stem("costringerli"), "costring");});
test("costringerlo -> costring", function() {deepEqual( Stem("costringerlo"), "costring");});
test("costringevano -> costring", function() {deepEqual( Stem("costringevano"), "costring");});
test("costringono -> costring", function() {deepEqual( Stem("costringono"), "costring");});
test("costrinse -> costrins", function() {deepEqual( Stem("costrinse"), "costrins");});
test("costruiranno -> costru", function() {deepEqual( Stem("costruiranno"), "costru");});
test("costruire -> costru", function() {deepEqual( Stem("costruire"), "costru");});
test("costruirlo -> costru", function() {deepEqual( Stem("costruirlo"), "costru");});
test("costruita -> costru", function() {deepEqual( Stem("costruita"), "costru");});
test("costruito -> costru", function() {deepEqual( Stem("costruito"), "costru");});
test("costrutte -> costrutt", function() {deepEqual( Stem("costrutte"), "costrutt");});
test("costruttiva -> costrutt", function() {deepEqual( Stem("costruttiva"), "costrutt");});
test("costruttivo -> costrutt", function() {deepEqual( Stem("costruttivo"), "costrutt");});
test("costrutto -> costrutt", function() {deepEqual( Stem("costrutto"), "costrutt");});
test("costruttori -> costruttor", function() {deepEqual( Stem("costruttori"), "costruttor");});
test("costruzione -> costruzion", function() {deepEqual( Stem("costruzione"), "costruzion");});
test("costruzioni -> costruzion", function() {deepEqual( Stem("costruzioni"), "costruzion");});
test("costui -> costu", function() {deepEqual( Stem("costui"), "costu");});
test("costumato -> costum", function() {deepEqual( Stem("costumato"), "costum");});
test("costumavan -> costumavan", function() {deepEqual( Stem("costumavan"), "costumavan");});
test("costume -> costum", function() {deepEqual( Stem("costume"), "costum");});
test("costumi -> costum", function() {deepEqual( Stem("costumi"), "costum");});
test("cosv -> cosv", function() {deepEqual( Stem("cosv"), "cosv");});
test("cosworth -> cosworth", function() {deepEqual( Stem("cosworth"), "cosworth");});
test("cot -> cot", function() {deepEqual( Stem("cot"), "cot");});
test("cotale -> cotal", function() {deepEqual( Stem("cotale"), "cotal");});
test("cotillon -> cotillon", function() {deepEqual( Stem("cotillon"), "cotillon");});
test("cotone -> coton", function() {deepEqual( Stem("cotone"), "coton");});
test("cotta -> cott", function() {deepEqual( Stem("cotta"), "cott");});
test("council -> council", function() {deepEqual( Stem("council"), "council");});
test("coupon -> coupon", function() {deepEqual( Stem("coupon"), "coupon");});
test("courier -> courier", function() {deepEqual( Stem("courier"), "courier");});
test("courmaosta -> courmaost", function() {deepEqual( Stem("courmaosta"), "courmaost");});
test("courmayeur -> courmayeur", function() {deepEqual( Stem("courmayeur"), "courmayeur");});
test("couto -> cout", function() {deepEqual( Stem("couto"), "cout");});
test("cova -> cov", function() {deepEqual( Stem("cova"), "cov");});
test("covando -> cov", function() {deepEqual( Stem("covando"), "cov");});
test("covano -> cov", function() {deepEqual( Stem("covano"), "cov");});
test("covasse -> cov", function() {deepEqual( Stem("covasse"), "cov");});
test("coventry -> coventry", function() {deepEqual( Stem("coventry"), "coventry");});
test("covile -> covil", function() {deepEqual( Stem("covile"), "covil");});
test("covili -> covil", function() {deepEqual( Stem("covili"), "covil");});
test("covo -> cov", function() {deepEqual( Stem("covo"), "cov");});
test("coyote -> coyot", function() {deepEqual( Stem("coyote"), "coyot");});
test("cozzar -> cozz", function() {deepEqual( Stem("cozzar"), "cozz");});
test("cozzare -> cozz", function() {deepEqual( Stem("cozzare"), "cozz");});
test("cozzava -> cozz", function() {deepEqual( Stem("cozzava"), "cozz");});
test("cozzi -> cozz", function() {deepEqual( Stem("cozzi"), "cozz");});
test("cozzo -> cozz", function() {deepEqual( Stem("cozzo"), "cozz");});
test("cp -> cp", function() {deepEqual( Stem("cp"), "cp");});
test("cpl -> cpl", function() {deepEqual( Stem("cpl"), "cpl");});
test("cr -> cr", function() {deepEqual( Stem("cr"), "cr");});
test("cra -> cra", function() {deepEqual( Stem("cra"), "cra");});
test("crack -> crack", function() {deepEqual( Stem("crack"), "crack");});
test("cravatte -> cravatt", function() {deepEqual( Stem("cravatte"), "cravatt");});
test("cravero -> craver", function() {deepEqual( Stem("cravero"), "craver");});
test("craxi -> crax", function() {deepEqual( Stem("craxi"), "crax");});
test("crea -> cre", function() {deepEqual( Stem("crea"), "cre");});
test("creando -> cre", function() {deepEqual( Stem("creando"), "cre");});
test("creano -> cre", function() {deepEqual( Stem("creano"), "cre");});
test("creanza -> creanz", function() {deepEqual( Stem("creanza"), "creanz");});
test("creanze -> creanz", function() {deepEqual( Stem("creanze"), "creanz");});
test("creare -> cre", function() {deepEqual( Stem("creare"), "cre");});
test("creasse -> cre", function() {deepEqual( Stem("creasse"), "cre");});
test("creata -> cre", function() {deepEqual( Stem("creata"), "cre");});
test("creatasi -> creatas", function() {deepEqual( Stem("creatasi"), "creatas");});
test("create -> cre", function() {deepEqual( Stem("create"), "cre");});
test("creati -> cre", function() {deepEqual( Stem("creati"), "cre");});
test("creato -> cre", function() {deepEqual( Stem("creato"), "cre");});
test("creatore -> creator", function() {deepEqual( Stem("creatore"), "creator");});
test("creatori -> creator", function() {deepEqual( Stem("creatori"), "creator");});
test("creatura -> creatur", function() {deepEqual( Stem("creatura"), "creatur");});
test("creature -> creatur", function() {deepEqual( Stem("creature"), "creatur");});
test("creaturina -> creaturin", function() {deepEqual( Stem("creaturina"), "creaturin");});
test("creazione -> creazion", function() {deepEqual( Stem("creazione"), "creazion");});
test("crebbe -> crebb", function() {deepEqual( Stem("crebbe"), "crebb");});
test("crebbero -> crebber", function() {deepEqual( Stem("crebbero"), "crebber");});
test("cred -> cred", function() {deepEqual( Stem("cred"), "cred");});
test("creda -> cred", function() {deepEqual( Stem("creda"), "cred");});
test("credano -> cred", function() {deepEqual( Stem("credano"), "cred");});
test("crede -> cred", function() {deepEqual( Stem("crede"), "cred");});
test("credé -> cred", function() {deepEqual( Stem("credé"), "cred");});
test("credendo -> cred", function() {deepEqual( Stem("credendo"), "cred");});
test("credenti -> credent", function() {deepEqual( Stem("credenti"), "credent");});
test("credenza -> credenz", function() {deepEqual( Stem("credenza"), "credenz");});
test("creder -> creder", function() {deepEqual( Stem("creder"), "creder");});
test("crederanno -> cred", function() {deepEqual( Stem("crederanno"), "cred");});
test("crederci -> cred", function() {deepEqual( Stem("crederci"), "cred");});
test("credere -> cred", function() {deepEqual( Stem("credere"), "cred");});
test("crederebbe -> cred", function() {deepEqual( Stem("crederebbe"), "cred");});
test("crederei -> cred", function() {deepEqual( Stem("crederei"), "cred");});
test("credereste -> cred", function() {deepEqual( Stem("credereste"), "cred");});
test("crederlo -> cred", function() {deepEqual( Stem("crederlo"), "cred");});
test("crederne -> cred", function() {deepEqual( Stem("crederne"), "cred");});
test("crederti -> cred", function() {deepEqual( Stem("crederti"), "cred");});
test("credesse -> credess", function() {deepEqual( Stem("credesse"), "credess");});
test("credessero -> cred", function() {deepEqual( Stem("credessero"), "cred");});
test("credeste -> credest", function() {deepEqual( Stem("credeste"), "credest");});
test("credete -> cred", function() {deepEqual( Stem("credete"), "cred");});
test("credette -> credett", function() {deepEqual( Stem("credette"), "credett");});
test("credeva -> cred", function() {deepEqual( Stem("credeva"), "cred");});
test("credevan -> credevan", function() {deepEqual( Stem("credevan"), "credevan");});
test("credevano -> cred", function() {deepEqual( Stem("credevano"), "cred");});
test("credevo -> cred", function() {deepEqual( Stem("credevo"), "cred");});
test("credi -> cred", function() {deepEqual( Stem("credi"), "cred");});
test("crediam -> crediam", function() {deepEqual( Stem("crediam"), "crediam");});
test("crediamo -> cred", function() {deepEqual( Stem("crediamo"), "cred");});
test("crediate -> cred", function() {deepEqual( Stem("crediate"), "cred");});
test("credibile -> credibil", function() {deepEqual( Stem("credibile"), "credibil");});
test("credibili -> credibil", function() {deepEqual( Stem("credibili"), "credibil");});
test("credibilità -> credibil", function() {deepEqual( Stem("credibilità"), "credibil");});
test("crediop -> crediop", function() {deepEqual( Stem("crediop"), "crediop");});
test("credit -> credit", function() {deepEqual( Stem("credit"), "credit");});
test("creditanstalt -> creditanstalt", function() {deepEqual( Stem("creditanstalt"), "creditanstalt");});
test("crediti -> cred", function() {deepEqual( Stem("crediti"), "cred");});
test("creditizie -> creditiz", function() {deepEqual( Stem("creditizie"), "creditiz");});
test("creditizio -> creditiz", function() {deepEqual( Stem("creditizio"), "creditiz");});
test("credito -> cred", function() {deepEqual( Stem("credito"), "cred");});
test("creditore -> creditor", function() {deepEqual( Stem("creditore"), "creditor");});
test("creditori -> creditor", function() {deepEqual( Stem("creditori"), "creditor");});
test("creditwest -> creditwest", function() {deepEqual( Stem("creditwest"), "creditwest");});
test("credo -> cred", function() {deepEqual( Stem("credo"), "cred");});
test("credono -> cred", function() {deepEqual( Stem("credono"), "cred");});
test("credula -> credul", function() {deepEqual( Stem("credula"), "credul");});
test("credulità -> credul", function() {deepEqual( Stem("credulità"), "credul");});
test("creduta -> cred", function() {deepEqual( Stem("creduta"), "cred");});
test("credute -> cred", function() {deepEqual( Stem("credute"), "cred");});
test("creduto -> cred", function() {deepEqual( Stem("creduto"), "cred");});
test("creeranno -> cre", function() {deepEqual( Stem("creeranno"), "cre");});
test("crei -> cre", function() {deepEqual( Stem("crei"), "cre");});
test("creino -> crein", function() {deepEqual( Stem("creino"), "crein");});
test("crema -> crem", function() {deepEqual( Stem("crema"), "crem");});
test("cremapergo -> cremaperg", function() {deepEqual( Stem("cremapergo"), "cremaperg");});
test("cremlino -> cremlin", function() {deepEqual( Stem("cremlino"), "cremlin");});
test("cremona -> cremon", function() {deepEqual( Stem("cremona"), "cremon");});
test("cremonese -> cremones", function() {deepEqual( Stem("cremonese"), "cremones");});
test("creò -> cre", function() {deepEqual( Stem("creò"), "cre");});
test("crepacci -> crepacc", function() {deepEqual( Stem("crepacci"), "crepacc");});
test("crepacore -> crepacor", function() {deepEqual( Stem("crepacore"), "crepacor");});
test("crepacuore -> crepacuor", function() {deepEqual( Stem("crepacuore"), "crepacuor");});
test("crepaldi -> crepald", function() {deepEqual( Stem("crepaldi"), "crepald");});
test("crepava -> crep", function() {deepEqual( Stem("crepava"), "crep");});
test("crepi -> crep", function() {deepEqual( Stem("crepi"), "crep");});
test("crepuscolo -> crepuscol", function() {deepEqual( Stem("crepuscolo"), "crepuscol");});
test("crerdibili -> crerdibil", function() {deepEqual( Stem("crerdibili"), "crerdibil");});
test("cresc -> cresc", function() {deepEqual( Stem("cresc"), "cresc");});
test("cresce -> cresc", function() {deepEqual( Stem("cresce"), "cresc");});
test("crescendo -> cresc", function() {deepEqual( Stem("crescendo"), "cresc");});
test("crescente -> crescent", function() {deepEqual( Stem("crescente"), "crescent");});
test("crescenti -> crescent", function() {deepEqual( Stem("crescenti"), "crescent");});
test("crescer -> crescer", function() {deepEqual( Stem("crescer"), "crescer");});
test("crescerà -> cresc", function() {deepEqual( Stem("crescerà"), "cresc");});
test("crescere -> cresc", function() {deepEqual( Stem("crescere"), "cresc");});
test("crescesse -> crescess", function() {deepEqual( Stem("crescesse"), "crescess");});
test("cresceva -> cresc", function() {deepEqual( Stem("cresceva"), "cresc");});
test("crescita -> cresc", function() {deepEqual( Stem("crescita"), "cresc");});
test("cresciuta -> cresc", function() {deepEqual( Stem("cresciuta"), "cresc");});
test("cresciute -> cresc", function() {deepEqual( Stem("cresciute"), "cresc");});
test("cresciuti -> cresc", function() {deepEqual( Stem("cresciuti"), "cresc");});
test("cresciuto -> cresc", function() {deepEqual( Stem("cresciuto"), "cresc");});
test("crescono -> cresc", function() {deepEqual( Stem("crescono"), "cresc");});
test("cresece -> cresec", function() {deepEqual( Stem("cresece"), "cresec");});
test("crespe -> cresp", function() {deepEqual( Stem("crespe"), "cresp");});
test("cresta -> crest", function() {deepEqual( Stem("cresta"), "crest");});
test("creta -> cret", function() {deepEqual( Stem("creta"), "cret");});
test("cretina -> cretin", function() {deepEqual( Stem("cretina"), "cretin");});
test("crevalcore -> crevalcor", function() {deepEqual( Stem("crevalcore"), "crevalcor");});
test("crimen -> crimen", function() {deepEqual( Stem("crimen"), "crimen");});
test("criminale -> criminal", function() {deepEqual( Stem("criminale"), "criminal");});
test("criminalè -> criminal", function() {deepEqual( Stem("criminalè"), "criminal");});
test("criminali -> criminal", function() {deepEqual( Stem("criminali"), "criminal");});
test("criminalità -> criminal", function() {deepEqual( Stem("criminalità"), "criminal");});
test("criminalizzare -> criminalizz", function() {deepEqual( Stem("criminalizzare"), "criminalizz");});
test("criminalpol -> criminalpol", function() {deepEqual( Stem("criminalpol"), "criminalpol");});
test("crimine -> crimin", function() {deepEqual( Stem("crimine"), "crimin");});
test("crimini -> crimin", function() {deepEqual( Stem("crimini"), "crimin");});
test("criniera -> crinier", function() {deepEqual( Stem("criniera"), "crinier");});
test("criniti -> crin", function() {deepEqual( Stem("criniti"), "crin");});
test("crippa -> cripp", function() {deepEqual( Stem("crippa"), "cripp");});
test("crisi -> cris", function() {deepEqual( Stem("crisi"), "cris");});
test("cristalli -> cristall", function() {deepEqual( Stem("cristalli"), "cristall");});
test("cristallini -> cristallin", function() {deepEqual( Stem("cristallini"), "cristallin");});
test("cristallo -> cristall", function() {deepEqual( Stem("cristallo"), "cristall");});
test("cristiana -> cristian", function() {deepEqual( Stem("cristiana"), "cristian");});
test("cristiane -> cristian", function() {deepEqual( Stem("cristiane"), "cristian");});
test("cristianesimo -> cristianesim", function() {deepEqual( Stem("cristianesimo"), "cristianesim");});
test("cristiani -> cristian", function() {deepEqual( Stem("cristiani"), "cristian");});
test("cristianissimo -> cristianissim", function() {deepEqual( Stem("cristianissimo"), "cristianissim");});
test("cristianità -> cristian", function() {deepEqual( Stem("cristianità"), "cristian");});
test("cristiano -> crist", function() {deepEqual( Stem("cristiano"), "crist");});
test("cristina -> cristin", function() {deepEqual( Stem("cristina"), "cristin");});
test("cristo -> crist", function() {deepEqual( Stem("cristo"), "crist");});
test("cristobal -> cristobal", function() {deepEqual( Stem("cristobal"), "cristobal");});
test("cristoforo -> cristofor", function() {deepEqual( Stem("cristoforo"), "cristofor");});
test("criteri -> criter", function() {deepEqual( Stem("criteri"), "criter");});
test("criterio -> criter", function() {deepEqual( Stem("criterio"), "criter");});
test("critica -> critic", function() {deepEqual( Stem("critica"), "critic");});
test("criticando -> critic", function() {deepEqual( Stem("criticando"), "critic");});
test("criticar -> critic", function() {deepEqual( Stem("criticar"), "critic");});
test("criticare -> critic", function() {deepEqual( Stem("criticare"), "critic");});
test("criticarlo -> critic", function() {deepEqual( Stem("criticarlo"), "critic");});
test("criticata -> critic", function() {deepEqual( Stem("criticata"), "critic");});
test("criticato -> critic", function() {deepEqual( Stem("criticato"), "critic");});
test("critiche -> critic", function() {deepEqual( Stem("critiche"), "critic");});
test("critichi -> critic", function() {deepEqual( Stem("critichi"), "critic");});
test("critici -> critic", function() {deepEqual( Stem("critici"), "critic");});
test("critico -> critic", function() {deepEqual( Stem("critico"), "critic");});
test("crivellata -> crivell", function() {deepEqual( Stem("crivellata"), "crivell");});
test("cro -> cro", function() {deepEqual( Stem("cro"), "cro");});
test("croata -> cro", function() {deepEqual( Stem("croata"), "cro");});
test("croati -> cro", function() {deepEqual( Stem("croati"), "cro");});
test("croato -> cro", function() {deepEqual( Stem("croato"), "cro");});
test("croazia -> croaz", function() {deepEqual( Stem("croazia"), "croaz");});
test("croc -> croc", function() {deepEqual( Stem("croc"), "croc");});
test("crocchi -> crocc", function() {deepEqual( Stem("crocchi"), "crocc");});
test("crocchia -> crocc", function() {deepEqual( Stem("crocchia"), "crocc");});
test("crocchio -> crocc", function() {deepEqual( Stem("crocchio"), "crocc");});
test("croce -> croc", function() {deepEqual( Stem("croce"), "croc");});
test("croci -> croc", function() {deepEqual( Stem("croci"), "croc");});
test("crociata -> croc", function() {deepEqual( Stem("crociata"), "croc");});
test("crociate -> croc", function() {deepEqual( Stem("crociate"), "croc");});
test("crocicchi -> crocicc", function() {deepEqual( Stem("crocicchi"), "crocicc");});
test("crocicchio -> crocicc", function() {deepEqual( Stem("crocicchio"), "crocicc");});
test("crociera -> crocier", function() {deepEqual( Stem("crociera"), "crocier");});
test("crociere -> croc", function() {deepEqual( Stem("crociere"), "croc");});
test("crocieristico -> crocierist", function() {deepEqual( Stem("crocieristico"), "crocierist");});
test("crocifero -> crocifer", function() {deepEqual( Stem("crocifero"), "crocifer");});
test("crocifisso -> crocifiss", function() {deepEqual( Stem("crocifisso"), "crocifiss");});
test("crollare -> croll", function() {deepEqual( Stem("crollare"), "croll");});
test("crollava -> croll", function() {deepEqual( Stem("crollava"), "croll");});
test("crollera -> croller", function() {deepEqual( Stem("crollera"), "croller");});
test("crollo -> croll", function() {deepEqual( Stem("crollo"), "croll");});
test("cromosomi -> cromosom", function() {deepEqual( Stem("cromosomi"), "cromosom");});
test("cronaca -> cronac", function() {deepEqual( Stem("cronaca"), "cronac");});
test("cronache -> cronac", function() {deepEqual( Stem("cronache"), "cronac");});
test("cronica -> cronic", function() {deepEqual( Stem("cronica"), "cronic");});
test("cronico -> cronic", function() {deepEqual( Stem("cronico"), "cronic");});
test("cronista -> cronist", function() {deepEqual( Stem("cronista"), "cronist");});
test("cronisti -> cronist", function() {deepEqual( Stem("cronisti"), "cronist");});
test("crono -> cron", function() {deepEqual( Stem("crono"), "cron");});
test("cronologico -> cronolog", function() {deepEqual( Stem("cronologico"), "cronolog");});
test("cronometro -> cronometr", function() {deepEqual( Stem("cronometro"), "cronometr");});
test("cronoscalata -> cronoscal", function() {deepEqual( Stem("cronoscalata"), "cronoscal");});
test("cross -> cross", function() {deepEqual( Stem("cross"), "cross");});
test("crossato -> cross", function() {deepEqual( Stem("crossato"), "cross");});
test("croupier -> croupier", function() {deepEqual( Stem("croupier"), "croupier");});
test("crrr -> crrr", function() {deepEqual( Stem("crrr"), "crrr");});
test("crs -> crs", function() {deepEqual( Stem("crs"), "crs");});
test("crt -> crt", function() {deepEqual( Stem("crt"), "crt");});
test("cruccio -> crucc", function() {deepEqual( Stem("cruccio"), "crucc");});
test("cruciale -> crucial", function() {deepEqual( Stem("cruciale"), "crucial");});
test("cruciali -> crucial", function() {deepEqual( Stem("cruciali"), "crucial");});
test("crucis -> crucis", function() {deepEqual( Stem("crucis"), "crucis");});
test("crude -> crud", function() {deepEqual( Stem("crude"), "crud");});
test("crudel -> crudel", function() {deepEqual( Stem("crudel"), "crudel");});
test("crudele -> crudel", function() {deepEqual( Stem("crudele"), "crudel");});
test("crudeli -> crudel", function() {deepEqual( Stem("crudeli"), "crudel");});
test("crudelmente -> crudel", function() {deepEqual( Stem("crudelmente"), "crudel");});
test("crudeltà -> crudelt", function() {deepEqual( Stem("crudeltà"), "crudelt");});
test("cruijff -> cruijff", function() {deepEqual( Stem("cruijff"), "cruijff");});
test("cruiser -> cruiser", function() {deepEqual( Stem("cruiser"), "cruiser");});
test("crusca -> crusc", function() {deepEqual( Stem("crusca"), "crusc");});
test("cruscotto -> cruscott", function() {deepEqual( Stem("cruscotto"), "cruscott");});
test("cruyff -> cruyff", function() {deepEqual( Stem("cruyff"), "cruyff");});
test("cruz -> cruz", function() {deepEqual( Stem("cruz"), "cruz");});
test("crystal -> crystal", function() {deepEqual( Stem("crystal"), "crystal");});
test("cs -> cs", function() {deepEqual( Stem("cs"), "cs");});
test("csi -> csi", function() {deepEqual( Stem("csi"), "csi");});
test("csil -> csil", function() {deepEqual( Stem("csil"), "csil");});
test("csm -> csm", function() {deepEqual( Stem("csm"), "csm");});
test("csp -> csp", function() {deepEqual( Stem("csp"), "csp");});
test("css -> css", function() {deepEqual( Stem("css"), "css");});
test("ct -> ct", function() {deepEqual( Stem("ct"), "ct");});
test("cte -> cte", function() {deepEqual( Stem("cte"), "cte");});
test("cto -> cto", function() {deepEqual( Stem("cto"), "cto");});
test("ctz -> ctz", function() {deepEqual( Stem("ctz"), "ctz");});
test("ctznon -> ctznon", function() {deepEqual( Stem("ctznon"), "ctznon");});
test("cuahutemoc -> cuahutemoc", function() {deepEqual( Stem("cuahutemoc"), "cuahutemoc");});
test("cuauhtemoc -> cuauhtemoc", function() {deepEqual( Stem("cuauhtemoc"), "cuauhtemoc");});
test("cubi -> cub", function() {deepEqual( Stem("cubi"), "cub");});
test("cucca -> cucc", function() {deepEqual( Stem("cucca"), "cucc");});
test("cuccagna -> cuccagn", function() {deepEqual( Stem("cuccagna"), "cuccagn");});
test("cucchiaiata -> cucchiai", function() {deepEqual( Stem("cucchiaiata"), "cucchiai");});
test("cucchiaio -> cucchiai", function() {deepEqual( Stem("cucchiaio"), "cucchiai");});
test("cuccia -> cucc", function() {deepEqual( Stem("cuccia"), "cucc");});
test("cucendo -> cuc", function() {deepEqual( Stem("cucendo"), "cuc");});
test("cucina -> cucin", function() {deepEqual( Stem("cucina"), "cucin");});
test("cucinieri -> cucinier", function() {deepEqual( Stem("cucinieri"), "cucinier");});
test("cucire -> cuc", function() {deepEqual( Stem("cucire"), "cuc");});
test("cucirini -> cucirin", function() {deepEqual( Stem("cucirini"), "cucirin");});
test("cuciti -> cuc", function() {deepEqual( Stem("cuciti"), "cuc");});
test("cuciva -> cuc", function() {deepEqual( Stem("cuciva"), "cuc");});
test("cugina -> cugin", function() {deepEqual( Stem("cugina"), "cugin");});
test("cugini -> cugin", function() {deepEqual( Stem("cugini"), "cugin");});
test("cugino -> cugin", function() {deepEqual( Stem("cugino"), "cugin");});
test("cuginò -> cugin", function() {deepEqual( Stem("cuginò"), "cugin");});
test("cui -> cui", function() {deepEqual( Stem("cui"), "cui");});
test("cuicchi -> cuicc", function() {deepEqual( Stem("cuicchi"), "cuicc");});
test("cukor -> cukor", function() {deepEqual( Stem("cukor"), "cukor");});
test("culminata -> culmin", function() {deepEqual( Stem("culminata"), "culmin");});
test("culmine -> culmin", function() {deepEqual( Stem("culmine"), "culmin");});
test("culmineranno -> culmin", function() {deepEqual( Stem("culmineranno"), "culmin");});
test("culpable -> culpabl", function() {deepEqual( Stem("culpable"), "culpabl");});
test("culto -> cult", function() {deepEqual( Stem("culto"), "cult");});
test("cultura -> cultur", function() {deepEqual( Stem("cultura"), "cultur");});
test("culturale -> cultural", function() {deepEqual( Stem("culturale"), "cultural");});
test("culturali -> cultural", function() {deepEqual( Stem("culturali"), "cultural");});
test("culturalmente -> cultural", function() {deepEqual( Stem("culturalmente"), "cultural");});
test("culture -> cultur", function() {deepEqual( Stem("culture"), "cultur");});
test("cultus -> cultus", function() {deepEqual( Stem("cultus"), "cultus");});
test("cumuli -> cumul", function() {deepEqual( Stem("cumuli"), "cumul");});
test("cumulo -> cumul", function() {deepEqual( Stem("cumulo"), "cumul");});
test("cuneo -> cune", function() {deepEqual( Stem("cuneo"), "cune");});
test("cuocere -> cuoc", function() {deepEqual( Stem("cuocere"), "cuoc");});
test("cuoco -> cuoc", function() {deepEqual( Stem("cuoco"), "cuoc");});
test("cuoia -> cuoi", function() {deepEqual( Stem("cuoia"), "cuoi");});
test("cuoio -> cuoi", function() {deepEqual( Stem("cuoio"), "cuoi");});
test("cuor -> cuor", function() {deepEqual( Stem("cuor"), "cuor");});
test("cuore -> cuor", function() {deepEqual( Stem("cuore"), "cuor");});
test("cuorè -> cuor", function() {deepEqual( Stem("cuorè"), "cuor");});
test("cuori -> cuor", function() {deepEqual( Stem("cuori"), "cuor");});
test("cupa -> cup", function() {deepEqual( Stem("cupa"), "cup");});
test("cupi -> cup", function() {deepEqual( Stem("cupi"), "cup");});
test("cupidigia -> cupidig", function() {deepEqual( Stem("cupidigia"), "cupidig");});
test("cupo -> cup", function() {deepEqual( Stem("cupo"), "cup");});
test("cupola -> cupol", function() {deepEqual( Stem("cupola"), "cupol");});
test("cupole -> cupol", function() {deepEqual( Stem("cupole"), "cupol");});
test("cura -> cur", function() {deepEqual( Stem("cura"), "cur");});
test("curan -> curan", function() {deepEqual( Stem("curan"), "curan");});
test("curando -> cur", function() {deepEqual( Stem("curando"), "cur");});
test("curarci -> cur", function() {deepEqual( Stem("curarci"), "cur");});
test("curare -> cur", function() {deepEqual( Stem("curare"), "cur");});
test("curarè -> curar", function() {deepEqual( Stem("curarè"), "curar");});
test("curarsi -> cur", function() {deepEqual( Stem("curarsi"), "cur");});
test("curas -> curas", function() {deepEqual( Stem("curas"), "curas");});
test("curasse -> cur", function() {deepEqual( Stem("curasse"), "cur");});
test("curati -> cur", function() {deepEqual( Stem("curati"), "cur");});
test("curato -> cur", function() {deepEqual( Stem("curato"), "cur");});
test("curatore -> curator", function() {deepEqual( Stem("curatore"), "curator");});
test("curatori -> curator", function() {deepEqual( Stem("curatori"), "curator");});
test("curava -> cur", function() {deepEqual( Stem("curava"), "cur");});
test("curavano -> cur", function() {deepEqual( Stem("curavano"), "cur");});
test("cure -> cur", function() {deepEqual( Stem("cure"), "cur");});
test("curerebbe -> cur", function() {deepEqual( Stem("curerebbe"), "cur");});
test("curi -> cur", function() {deepEqual( Stem("curi"), "cur");});
test("curia -> cur", function() {deepEqual( Stem("curia"), "cur");});
test("curiosa -> curios", function() {deepEqual( Stem("curiosa"), "curios");});
test("curiose -> curios", function() {deepEqual( Stem("curiose"), "curios");});
test("curiosi -> curios", function() {deepEqual( Stem("curiosi"), "curios");});
test("curiosita -> curios", function() {deepEqual( Stem("curiosita"), "curios");});
test("curiosità -> curios", function() {deepEqual( Stem("curiosità"), "curios");});
test("curioso -> curios", function() {deepEqual( Stem("curioso"), "curios");});
test("curo -> cur", function() {deepEqual( Stem("curo"), "cur");});
test("curò -> cur", function() {deepEqual( Stem("curò"), "cur");});
test("curti -> curt", function() {deepEqual( Stem("curti"), "curt");});
test("curtis -> curtis", function() {deepEqual( Stem("curtis"), "curtis");});
test("curva -> curv", function() {deepEqual( Stem("curva"), "curv");});
test("curve -> curv", function() {deepEqual( Stem("curve"), "curv");});
test("curvi -> curv", function() {deepEqual( Stem("curvi"), "curv");});
test("curviamo -> curv", function() {deepEqual( Stem("curviamo"), "curv");});
test("curvo -> curv", function() {deepEqual( Stem("curvo"), "curv");});
test("cus -> cus", function() {deepEqual( Stem("cus"), "cus");});
test("cusani -> cusan", function() {deepEqual( Stem("cusani"), "cusan");});
test("cusin -> cusin", function() {deepEqual( Stem("cusin"), "cusin");});
test("custode -> custod", function() {deepEqual( Stem("custode"), "custod");});
test("custodia -> custod", function() {deepEqual( Stem("custodia"), "custod");});
test("custodirà -> custod", function() {deepEqual( Stem("custodirà"), "custod");});
test("custodire -> custod", function() {deepEqual( Stem("custodire"), "custod");});
test("custodirla -> custod", function() {deepEqual( Stem("custodirla"), "custod");});
test("custodite -> custod", function() {deepEqual( Stem("custodite"), "custod");});
test("cut -> cut", function() {deepEqual( Stem("cut"), "cut");});
test("cuthbert -> cuthbert", function() {deepEqual( Stem("cuthbert"), "cuthbert");});
test("cutigliano -> cutigl", function() {deepEqual( Stem("cutigliano"), "cutigl");});
test("cutrufo -> cutruf", function() {deepEqual( Stem("cutrufo"), "cutruf");});
test("cutter -> cutter", function() {deepEqual( Stem("cutter"), "cutter");});
test("cv -> cv", function() {deepEqual( Stem("cv"), "cv");});
test("cyanamide -> cyanamid", function() {deepEqual( Stem("cyanamide"), "cyanamid");});
test("cynthia -> cynthi", function() {deepEqual( Stem("cynthia"), "cynthi");});
test("czudaj -> czudaj", function() {deepEqual( Stem("czudaj"), "czudaj");});
test("d -> d", function() {deepEqual( Stem("d"), "d");});
test("da -> da", function() {deepEqual( Stem("da"), "da");});
test("dà -> dà", function() {deepEqual( Stem("dà"), "dà");});
test("dabben -> dabben", function() {deepEqual( Stem("dabben"), "dabben");});
test("dabbene -> dabben", function() {deepEqual( Stem("dabbene"), "dabben");});
test("dabrecan -> dabrecan", function() {deepEqual( Stem("dabrecan"), "dabrecan");});
test("dacca -> dacc", function() {deepEqual( Stem("dacca"), "dacc");});
test("dadi -> dad", function() {deepEqual( Stem("dadi"), "dad");});
test("daghe -> dagh", function() {deepEqual( Stem("daghe"), "dagh");});
test("dagl -> dagl", function() {deepEqual( Stem("dagl"), "dagl");});
test("dagli -> dagl", function() {deepEqual( Stem("dagli"), "dagl");});
test("dàgli -> dàgl", function() {deepEqual( Stem("dàgli"), "dàgl");});
test("dai -> dai", function() {deepEqual( Stem("dai"), "dai");});
test("daily -> daily", function() {deepEqual( Stem("daily"), "daily");});
test("daisuke -> daisuk", function() {deepEqual( Stem("daisuke"), "daisuk");});
test("dajal -> dajal", function() {deepEqual( Stem("dajal"), "dajal");});
test("dal -> dal", function() {deepEqual( Stem("dal"), "dal");});
test("dall -> dall", function() {deepEqual( Stem("dall"), "dall");});
test("dalla -> dall", function() {deepEqual( Stem("dalla"), "dall");});
test("dallas -> dallas", function() {deepEqual( Stem("dallas"), "dallas");});
test("dalle -> dall", function() {deepEqual( Stem("dalle"), "dall");});
test("dàlli -> dàll", function() {deepEqual( Stem("dàlli"), "dàll");});
test("dallo -> dall", function() {deepEqual( Stem("dallo"), "dall");});
test("dalmine -> dalmin", function() {deepEqual( Stem("dalmine"), "dalmin");});
test("dam -> dam", function() {deepEqual( Stem("dam"), "dam");});
test("dama -> dam", function() {deepEqual( Stem("dama"), "dam");});
test("dame -> dam", function() {deepEqual( Stem("dame"), "dam");});
test("damia -> dam", function() {deepEqual( Stem("damia"), "dam");});
test("damiani -> damian", function() {deepEqual( Stem("damiani"), "damian");});
test("damiano -> dam", function() {deepEqual( Stem("damiano"), "dam");});
test("dammelo -> dammel", function() {deepEqual( Stem("dammelo"), "dammel");});
test("dammi -> damm", function() {deepEqual( Stem("dammi"), "damm");});
test("dan -> dan", function() {deepEqual( Stem("dan"), "dan");});
test("danaos -> danaos", function() {deepEqual( Stem("danaos"), "danaos");});
test("danari -> danar", function() {deepEqual( Stem("danari"), "danar");});
test("danaro -> danar", function() {deepEqual( Stem("danaro"), "danar");});
test("dance -> danc", function() {deepEqual( Stem("dance"), "danc");});
test("dancer -> dancer", function() {deepEqual( Stem("dancer"), "dancer");});
test("dando -> dand", function() {deepEqual( Stem("dando"), "dand");});
test("dandogli -> dandogl", function() {deepEqual( Stem("dandogli"), "dandogl");});
test("dandola -> dandol", function() {deepEqual( Stem("dandola"), "dandol");});
test("dandole -> dandol", function() {deepEqual( Stem("dandole"), "dandol");});
test("dandomi -> dandom", function() {deepEqual( Stem("dandomi"), "dandom");});
test("dandosi -> dandos", function() {deepEqual( Stem("dandosi"), "dandos");});
test("danero -> daner", function() {deepEqual( Stem("danero"), "daner");});
test("danese -> danes", function() {deepEqual( Stem("danese"), "danes");});
test("dani -> dan", function() {deepEqual( Stem("dani"), "dan");});
test("daniel -> daniel", function() {deepEqual( Stem("daniel"), "daniel");});
test("daniela -> daniel", function() {deepEqual( Stem("daniela"), "daniel");});
test("daniele -> daniel", function() {deepEqual( Stem("daniele"), "daniel");});
test("danieli -> daniel", function() {deepEqual( Stem("danieli"), "daniel");});
test("danilo -> danil", function() {deepEqual( Stem("danilo"), "danil");});
test("danimarca -> danimarc", function() {deepEqual( Stem("danimarca"), "danimarc");});
test("dannata -> dann", function() {deepEqual( Stem("dannata"), "dann");});
test("dannato -> dann", function() {deepEqual( Stem("dannato"), "dann");});
test("danneggia -> dannegg", function() {deepEqual( Stem("danneggia"), "dannegg");});
test("danneggiano -> dannegg", function() {deepEqual( Stem("danneggiano"), "dannegg");});
test("danneggiare -> dannegg", function() {deepEqual( Stem("danneggiare"), "dannegg");});
test("danneggiata -> dannegg", function() {deepEqual( Stem("danneggiata"), "dannegg");});
test("danneggiate -> dannegg", function() {deepEqual( Stem("danneggiate"), "dannegg");});
test("danneggiati -> dannegg", function() {deepEqual( Stem("danneggiati"), "dannegg");});
test("danneggiato -> dannegg", function() {deepEqual( Stem("danneggiato"), "dannegg");});
test("danni -> dann", function() {deepEqual( Stem("danni"), "dann");});
test("danno -> dann", function() {deepEqual( Stem("danno"), "dann");});
test("dànno -> dànn", function() {deepEqual( Stem("dànno"), "dànn");});
test("dannosa -> dannos", function() {deepEqual( Stem("dannosa"), "dannos");});
test("dannoso -> dannos", function() {deepEqual( Stem("dannoso"), "dannos");});
test("dante -> dant", function() {deepEqual( Stem("dante"), "dant");});
test("danubio -> danub", function() {deepEqual( Stem("danubio"), "danub");});
test("danyon -> danyon", function() {deepEqual( Stem("danyon"), "danyon");});
test("danza -> danz", function() {deepEqual( Stem("danza"), "danz");});
test("danzanti -> danzant", function() {deepEqual( Stem("danzanti"), "danzant");});
test("dappiè -> dapp", function() {deepEqual( Stem("dappiè"), "dapp");});
test("dappocaggine -> dappocaggin", function() {deepEqual( Stem("dappocaggine"), "dappocaggin");});
test("dapprima -> dapprim", function() {deepEqual( Stem("dapprima"), "dapprim");});
test("dar -> dar", function() {deepEqual( Stem("dar"), "dar");});
test("darà -> dar", function() {deepEqual( Stem("darà"), "dar");});
test("daranno -> darann", function() {deepEqual( Stem("daranno"), "darann");});
test("dare -> dar", function() {deepEqual( Stem("dare"), "dar");});
test("darebbe -> darebb", function() {deepEqual( Stem("darebbe"), "darebb");});
test("darei -> dare", function() {deepEqual( Stem("darei"), "dare");});
test("daremmo -> dar", function() {deepEqual( Stem("daremmo"), "dar");});
test("daremo -> darem", function() {deepEqual( Stem("daremo"), "darem");});
test("darete -> dar", function() {deepEqual( Stem("darete"), "dar");});
test("dargli -> dargl", function() {deepEqual( Stem("dargli"), "dargl");});
test("dargliele -> dargliel", function() {deepEqual( Stem("dargliele"), "dargliel");});
test("dargliene -> darglien", function() {deepEqual( Stem("dargliene"), "darglien");});
test("daria -> dar", function() {deepEqual( Stem("daria"), "dar");});
test("dario -> dar", function() {deepEqual( Stem("dario"), "dar");});
test("darla -> darl", function() {deepEqual( Stem("darla"), "darl");});
test("darle -> darl", function() {deepEqual( Stem("darle"), "darl");});
test("darlo -> darl", function() {deepEqual( Stem("darlo"), "darl");});
test("darmene -> darmen", function() {deepEqual( Stem("darmene"), "darmen");});
test("darmi -> darm", function() {deepEqual( Stem("darmi"), "darm");});
test("darne -> darn", function() {deepEqual( Stem("darne"), "darn");});
test("darò -> dar", function() {deepEqual( Stem("darò"), "dar");});
test("darsene -> darsen", function() {deepEqual( Stem("darsene"), "darsen");});
test("darsi -> dars", function() {deepEqual( Stem("darsi"), "dars");});
test("darti -> dart", function() {deepEqual( Stem("darti"), "dart");});
test("darvi -> darv", function() {deepEqual( Stem("darvi"), "darv");});
test("daryl -> daryl", function() {deepEqual( Stem("daryl"), "daryl");});
test("data -> dat", function() {deepEqual( Stem("data"), "dat");});
test("datagli -> datagl", function() {deepEqual( Stem("datagli"), "datagl");});
test("dataria -> datar", function() {deepEqual( Stem("dataria"), "datar");});
test("date -> dat", function() {deepEqual( Stem("date"), "dat");});
test("datè -> dat", function() {deepEqual( Stem("datè"), "dat");});
test("dateci -> datec", function() {deepEqual( Stem("dateci"), "datec");});
test("dategli -> dategl", function() {deepEqual( Stem("dategli"), "dategl");});
test("datemele -> datemel", function() {deepEqual( Stem("datemele"), "datemel");});
test("datemi -> datem", function() {deepEqual( Stem("datemi"), "datem");});
test("dati -> dat", function() {deepEqual( Stem("dati"), "dat");});
test("dato -> dat", function() {deepEqual( Stem("dato"), "dat");});
test("datogli -> datogl", function() {deepEqual( Stem("datogli"), "datogl");});
test("datori -> dator", function() {deepEqual( Stem("datori"), "dator");});
test("datoriali -> datorial", function() {deepEqual( Stem("datoriali"), "datorial");});
test("datrice -> datric", function() {deepEqual( Stem("datrice"), "datric");});
test("dava -> dav", function() {deepEqual( Stem("dava"), "dav");});
test("davan -> davan", function() {deepEqual( Stem("davan"), "davan");});
test("davano -> dav", function() {deepEqual( Stem("davano"), "dav");});
test("davanti -> davant", function() {deepEqual( Stem("davanti"), "davant");});
test("davanzale -> davanzal", function() {deepEqual( Stem("davanzale"), "davanzal");});
test("davanzali -> davanzal", function() {deepEqual( Stem("davanzali"), "davanzal");});
test("david -> david", function() {deepEqual( Stem("david"), "david");});
test("davide -> david", function() {deepEqual( Stem("davide"), "david");});
test("davidson -> davidson", function() {deepEqual( Stem("davidson"), "davidson");});
test("davigo -> davig", function() {deepEqual( Stem("davigo"), "davig");});
test("davitashvili -> davitashvil", function() {deepEqual( Stem("davitashvili"), "davitashvil");});
test("davo -> dav", function() {deepEqual( Stem("davo"), "dav");});
test("davvero -> davver", function() {deepEqual( Stem("davvero"), "davver");});
test("dawson -> dawson", function() {deepEqual( Stem("dawson"), "dawson");});
test("dax -> dax", function() {deepEqual( Stem("dax"), "dax");});
test("day -> day", function() {deepEqual( Stem("day"), "day");});
test("daya -> day", function() {deepEqual( Stem("daya"), "day");});
test("dayal -> dayal", function() {deepEqual( Stem("dayal"), "dayal");});
test("dazi -> daz", function() {deepEqual( Stem("dazi"), "daz");});
test("dc -> dc", function() {deepEqual( Stem("dc"), "dc");});
test("dd -> dd", function() {deepEqual( Stem("dd"), "dd");});
test("ddla -> ddla", function() {deepEqual( Stem("ddla"), "ddla");});
test("de -> de", function() {deepEqual( Stem("de"), "de");});
test("deaglio -> deagl", function() {deepEqual( Stem("deaglio"), "deagl");});
test("deal -> deal", function() {deepEqual( Stem("deal"), "deal");});
test("deb -> deb", function() {deepEqual( Stem("deb"), "deb");});
test("debba -> debb", function() {deepEqual( Stem("debba"), "debb");});
test("debbano -> debb", function() {deepEqual( Stem("debbano"), "debb");});
test("debbie -> debb", function() {deepEqual( Stem("debbie"), "debb");});
test("debbo -> debb", function() {deepEqual( Stem("debbo"), "debb");});
test("debbono -> debb", function() {deepEqual( Stem("debbono"), "debb");});
test("deben -> deben", function() {deepEqual( Stem("deben"), "deben");});
test("debita -> deb", function() {deepEqual( Stem("debita"), "deb");});
test("debite -> deb", function() {deepEqual( Stem("debite"), "deb");});
test("debiti -> deb", function() {deepEqual( Stem("debiti"), "deb");});
test("debito -> deb", function() {deepEqual( Stem("debito"), "deb");});
test("debitore -> debitor", function() {deepEqual( Stem("debitore"), "debitor");});
test("debitoria -> debitor", function() {deepEqual( Stem("debitoria"), "debitor");});
test("debitrice -> debitr", function() {deepEqual( Stem("debitrice"), "debitr");});
test("debituccio -> debitucc", function() {deepEqual( Stem("debituccio"), "debitucc");});
test("debol -> debol", function() {deepEqual( Stem("debol"), "debol");});
test("debole -> debol", function() {deepEqual( Stem("debole"), "debol");});
test("debolezza -> debolezz", function() {deepEqual( Stem("debolezza"), "debolezz");});
test("debolezze -> debolezz", function() {deepEqual( Stem("debolezze"), "debolezz");});
test("deboli -> debol", function() {deepEqual( Stem("deboli"), "debol");});
test("debolmente -> debol", function() {deepEqual( Stem("debolmente"), "debol");});
test("deborah -> deborah", function() {deepEqual( Stem("deborah"), "deborah");});
test("debuerat -> debuerat", function() {deepEqual( Stem("debuerat"), "debuerat");});
test("dec -> dec", function() {deepEqual( Stem("dec"), "dec");});
test("decade -> decad", function() {deepEqual( Stem("decade"), "decad");});
test("decadenza -> decadent", function() {deepEqual( Stem("decadenza"), "decadent");});
test("decadere -> decad", function() {deepEqual( Stem("decadere"), "decad");});
test("decadis -> decadis", function() {deepEqual( Stem("decadis"), "decadis");});
test("decalogo -> decalog", function() {deepEqual( Stem("decalogo"), "decalog");});
test("deceduta -> deced", function() {deepEqual( Stem("deceduta"), "deced");});
test("deceduto -> deced", function() {deepEqual( Stem("deceduto"), "deced");});
test("decembre -> decembr", function() {deepEqual( Stem("decembre"), "decembr");});
test("decennale -> decennal", function() {deepEqual( Stem("decennale"), "decennal");});
test("decenni -> decenn", function() {deepEqual( Stem("decenni"), "decenn");});
test("decente -> decent", function() {deepEqual( Stem("decente"), "decent");});
test("decentramento -> decentr", function() {deepEqual( Stem("decentramento"), "decentr");});
test("decentrata -> decentr", function() {deepEqual( Stem("decentrata"), "decentr");});
test("decentrato -> decentr", function() {deepEqual( Stem("decentrato"), "decentr");});
test("decesso -> decess", function() {deepEqual( Stem("decesso"), "decess");});
test("decide -> decid", function() {deepEqual( Stem("decide"), "decid");});
test("decidendo -> decid", function() {deepEqual( Stem("decidendo"), "decid");});
test("decider -> decider", function() {deepEqual( Stem("decider"), "decider");});
test("deciderà -> decid", function() {deepEqual( Stem("deciderà"), "decid");});
test("decidere -> decid", function() {deepEqual( Stem("decidere"), "decid");});
test("decidersi -> decid", function() {deepEqual( Stem("decidersi"), "decid");});
test("decidesse -> decidess", function() {deepEqual( Stem("decidesse"), "decidess");});
test("decidessimo -> decidessim", function() {deepEqual( Stem("decidessimo"), "decidessim");});
test("decideva -> decid", function() {deepEqual( Stem("decideva"), "decid");});
test("decidevano -> decid", function() {deepEqual( Stem("decidevano"), "decid");});
test("decidono -> decid", function() {deepEqual( Stem("decidono"), "decid");});
test("decifrare -> decifr", function() {deepEqual( Stem("decifrare"), "decifr");});
test("decima -> decim", function() {deepEqual( Stem("decima"), "decim");});
test("decimata -> decim", function() {deepEqual( Stem("decimata"), "decim");});
test("decimato -> decim", function() {deepEqual( Stem("decimato"), "decim");});
test("decimo -> decim", function() {deepEqual( Stem("decimo"), "decim");});
test("decina -> decin", function() {deepEqual( Stem("decina"), "decin");});
test("decine -> decin", function() {deepEqual( Stem("decine"), "decin");});
test("decisa -> decis", function() {deepEqual( Stem("decisa"), "decis");});
test("decisamente -> decis", function() {deepEqual( Stem("decisamente"), "decis");});
test("decise -> decis", function() {deepEqual( Stem("decise"), "decis");});
test("decisi -> decis", function() {deepEqual( Stem("decisi"), "decis");});
test("decisionali -> decisional", function() {deepEqual( Stem("decisionali"), "decisional");});
test("decisione -> decision", function() {deepEqual( Stem("decisione"), "decision");});
test("decisioni -> decision", function() {deepEqual( Stem("decisioni"), "decision");});
test("decisiva -> decis", function() {deepEqual( Stem("decisiva"), "decis");});
test("decisivi -> decis", function() {deepEqual( Stem("decisivi"), "decis");});
test("decisivo -> decis", function() {deepEqual( Stem("decisivo"), "decis");});
test("deciso -> decis", function() {deepEqual( Stem("deciso"), "decis");});
test("deckert -> deckert", function() {deepEqual( Stem("deckert"), "deckert");});
test("declamava -> declam", function() {deepEqual( Stem("declamava"), "declam");});
test("declamazioni -> declam", function() {deepEqual( Stem("declamazioni"), "declam");});
test("declino -> declin", function() {deepEqual( Stem("declino"), "declin");});
test("decolla -> decoll", function() {deepEqual( Stem("decolla"), "decoll");});
test("decollano -> decoll", function() {deepEqual( Stem("decollano"), "decoll");});
test("decollarono -> decoll", function() {deepEqual( Stem("decollarono"), "decoll");});
test("decollati -> decoll", function() {deepEqual( Stem("decollati"), "decoll");});
test("decoro -> decor", function() {deepEqual( Stem("decoro"), "decor");});
test("decorosa -> decor", function() {deepEqual( Stem("decorosa"), "decor");});
test("decoroso -> decor", function() {deepEqual( Stem("decoroso"), "decor");});
test("decremento -> decrement", function() {deepEqual( Stem("decremento"), "decrement");});
test("decrepite -> decrep", function() {deepEqual( Stem("decrepite"), "decrep");});
test("decretare -> decret", function() {deepEqual( Stem("decretare"), "decret");});
test("decretate -> decret", function() {deepEqual( Stem("decretate"), "decret");});
test("decretati -> decret", function() {deepEqual( Stem("decretati"), "decret");});
test("decretato -> decret", function() {deepEqual( Stem("decretato"), "decret");});
test("decretazione -> decret", function() {deepEqual( Stem("decretazione"), "decret");});
test("decreti -> decret", function() {deepEqual( Stem("decreti"), "decret");});
test("decreto -> decret", function() {deepEqual( Stem("decreto"), "decret");});
test("decsioni -> decsion", function() {deepEqual( Stem("decsioni"), "decsion");});
test("decurioni -> decurion", function() {deepEqual( Stem("decurioni"), "decurion");});
test("dedica -> dedic", function() {deepEqual( Stem("dedica"), "dedic");});
test("dedicano -> dedic", function() {deepEqual( Stem("dedicano"), "dedic");});
test("dedicarsi -> dedic", function() {deepEqual( Stem("dedicarsi"), "dedic");});
test("dedicata -> dedic", function() {deepEqual( Stem("dedicata"), "dedic");});
test("dedicate -> dedic", function() {deepEqual( Stem("dedicate"), "dedic");});
test("dedicati -> dedic", function() {deepEqual( Stem("dedicati"), "dedic");});
test("dedicato -> dedic", function() {deepEqual( Stem("dedicato"), "dedic");});
test("dedicatosi -> dedicat", function() {deepEqual( Stem("dedicatosi"), "dedicat");});
test("dedicava -> dedic", function() {deepEqual( Stem("dedicava"), "dedic");});
test("dedicò -> dedic", function() {deepEqual( Stem("dedicò"), "dedic");});
test("dedizione -> dedizion", function() {deepEqual( Stem("dedizione"), "dedizion");});
test("dedotti -> dedott", function() {deepEqual( Stem("dedotti"), "dedott");});
test("deduciamo -> deduc", function() {deepEqual( Stem("deduciamo"), "deduc");});
test("deducibilità -> deducibil", function() {deepEqual( Stem("deducibilità"), "deducibil");});
test("deduttivo -> dedutt", function() {deepEqual( Stem("deduttivo"), "dedutt");});
test("def -> def", function() {deepEqual( Stem("def"), "def");});
test("defence -> defenc", function() {deepEqual( Stem("defence"), "defenc");});
test("deferente -> deferent", function() {deepEqual( Stem("deferente"), "deferent");});
test("deferenza -> deferent", function() {deepEqual( Stem("deferenza"), "deferent");});
test("deferimento -> defer", function() {deepEqual( Stem("deferimento"), "defer");});
test("deffinire -> deffin", function() {deepEqual( Stem("deffinire"), "deffin");});
test("defformità -> defform", function() {deepEqual( Stem("defformità"), "defform");});
test("deficit -> deficit", function() {deepEqual( Stem("deficit"), "deficit");});
test("deficitari -> deficitar", function() {deepEqual( Stem("deficitari"), "deficitar");});
test("defilata -> defil", function() {deepEqual( Stem("defilata"), "defil");});
test("definendo -> defin", function() {deepEqual( Stem("definendo"), "defin");});
test("definendola -> defin", function() {deepEqual( Stem("definendola"), "defin");});
test("definendoli -> defin", function() {deepEqual( Stem("definendoli"), "defin");});
test("definendolo -> defin", function() {deepEqual( Stem("definendolo"), "defin");});
test("definendosi -> defin", function() {deepEqual( Stem("definendosi"), "defin");});
test("definire -> defin", function() {deepEqual( Stem("definire"), "defin");});
test("definisca -> defin", function() {deepEqual( Stem("definisca"), "defin");});
test("definisce -> defin", function() {deepEqual( Stem("definisce"), "defin");});
test("definisco -> defin", function() {deepEqual( Stem("definisco"), "defin");});
test("definiscono -> defin", function() {deepEqual( Stem("definiscono"), "defin");});
test("definita -> defin", function() {deepEqual( Stem("definita"), "defin");});
test("definite -> defin", function() {deepEqual( Stem("definite"), "defin");});
test("definiti -> defin", function() {deepEqual( Stem("definiti"), "defin");});
test("definitiva -> definit", function() {deepEqual( Stem("definitiva"), "definit");});
test("definitivamente -> definit", function() {deepEqual( Stem("definitivamente"), "definit");});
test("definitive -> definit", function() {deepEqual( Stem("definitive"), "definit");});
test("definitivi -> definit", function() {deepEqual( Stem("definitivi"), "definit");});
test("definitivo -> definit", function() {deepEqual( Stem("definitivo"), "definit");});
test("definito -> defin", function() {deepEqual( Stem("definito"), "defin");});
test("definizione -> definizion", function() {deepEqual( Stem("definizione"), "definizion");});
test("definizioni -> definizion", function() {deepEqual( Stem("definizioni"), "definizion");});
test("definzione -> definzion", function() {deepEqual( Stem("definzione"), "definzion");});
test("deflagrata -> deflagr", function() {deepEqual( Stem("deflagrata"), "deflagr");});
test("deflagrazione -> deflagr", function() {deepEqual( Stem("deflagrazione"), "deflagr");});
test("deflusso -> defluss", function() {deepEqual( Stem("deflusso"), "defluss");});
test("deformandone -> deform", function() {deepEqual( Stem("deformandone"), "deform");});
test("deformare -> deform", function() {deepEqual( Stem("deformare"), "deform");});
test("deforme -> deform", function() {deepEqual( Stem("deforme"), "deform");});
test("deformi -> deform", function() {deepEqual( Stem("deformi"), "deform");});
test("defunto -> defunt", function() {deepEqual( Stem("defunto"), "defunt");});
test("degenerazione -> degener", function() {deepEqual( Stem("degenerazione"), "degener");});
test("degl -> degl", function() {deepEqual( Stem("degl"), "degl");});
test("degli -> degl", function() {deepEqual( Stem("degli"), "degl");});
test("degna -> degn", function() {deepEqual( Stem("degna"), "degn");});
test("degnamente -> degn", function() {deepEqual( Stem("degnamente"), "degn");});
test("degnazione -> degnazion", function() {deepEqual( Stem("degnazione"), "degnazion");});
test("degne -> degn", function() {deepEqual( Stem("degne"), "degn");});
test("degni -> degn", function() {deepEqual( Stem("degni"), "degn");});
test("degnino -> degnin", function() {deepEqual( Stem("degnino"), "degnin");});
test("degno -> degn", function() {deepEqual( Stem("degno"), "degn");});
test("degradando -> degrad", function() {deepEqual( Stem("degradando"), "degrad");});
test("degradati -> degrad", function() {deepEqual( Stem("degradati"), "degrad");});
test("degrado -> degrad", function() {deepEqual( Stem("degrado"), "degrad");});
test("dei -> dei", function() {deepEqual( Stem("dei"), "dei");});
test("deì -> deì", function() {deepEqual( Stem("deì"), "deì");});
test("deiezione -> deiezion", function() {deepEqual( Stem("deiezione"), "deiezion");});
test("deisel -> deisel", function() {deepEqual( Stem("deisel"), "deisel");});
test("deja -> dej", function() {deepEqual( Stem("deja"), "dej");});
test("del -> del", function() {deepEqual( Stem("del"), "del");});
test("dela -> del", function() {deepEqual( Stem("dela"), "del");});
test("delatore -> delator", function() {deepEqual( Stem("delatore"), "delator");});
test("dele -> del", function() {deepEqual( Stem("dele"), "del");});
test("delecour -> delecour", function() {deepEqual( Stem("delecour"), "delecour");});
test("delega -> deleg", function() {deepEqual( Stem("delega"), "deleg");});
test("delegati -> deleg", function() {deepEqual( Stem("delegati"), "deleg");});
test("delegato -> deleg", function() {deepEqual( Stem("delegato"), "deleg");});
test("delegazione -> deleg", function() {deepEqual( Stem("delegazione"), "deleg");});
test("delegazioni -> deleg", function() {deepEqual( Stem("delegazioni"), "deleg");});
test("delel -> delel", function() {deepEqual( Stem("delel"), "delel");});
test("deleplanke -> deleplank", function() {deepEqual( Stem("deleplanke"), "deleplank");});
test("delhi -> delh", function() {deepEqual( Stem("delhi"), "delh");});
test("delhì -> delh", function() {deepEqual( Stem("delhì"), "delh");});
test("delibera -> deliber", function() {deepEqual( Stem("delibera"), "deliber");});
test("deliberare -> deliber", function() {deepEqual( Stem("deliberare"), "deliber");});
test("deliberatamente -> deliberat", function() {deepEqual( Stem("deliberatamente"), "deliberat");});
test("deliberati -> deliber", function() {deepEqual( Stem("deliberati"), "deliber");});
test("deliberato -> deliber", function() {deepEqual( Stem("deliberato"), "deliber");});
test("deliberava -> deliber", function() {deepEqual( Stem("deliberava"), "deliber");});
test("deliberazione -> deliber", function() {deepEqual( Stem("deliberazione"), "deliber");});
test("deliberazioni -> deliber", function() {deepEqual( Stem("deliberazioni"), "deliber");});
test("delibere -> delib", function() {deepEqual( Stem("delibere"), "delib");});
test("deliberò -> delib", function() {deepEqual( Stem("deliberò"), "delib");});
test("delic -> delic", function() {deepEqual( Stem("delic"), "delic");});
test("delicata -> delic", function() {deepEqual( Stem("delicata"), "delic");});
test("delicate -> delic", function() {deepEqual( Stem("delicate"), "delic");});
test("delicati -> delic", function() {deepEqual( Stem("delicati"), "delic");});
test("delicatissimi -> delicatissim", function() {deepEqual( Stem("delicatissimi"), "delicatissim");});
test("delicato -> delic", function() {deepEqual( Stem("delicato"), "delic");});
test("delimitazione -> delimit", function() {deepEqual( Stem("delimitazione"), "delimit");});
test("delineare -> delin", function() {deepEqual( Stem("delineare"), "delin");});
test("delinearsi -> delin", function() {deepEqual( Stem("delinearsi"), "delin");});
test("delineata -> delin", function() {deepEqual( Stem("delineata"), "delin");});
test("delineati -> delin", function() {deepEqual( Stem("delineati"), "delin");});
test("delineato -> delin", function() {deepEqual( Stem("delineato"), "delin");});
test("delinquenti -> delinquent", function() {deepEqual( Stem("delinquenti"), "delinquent");});
test("delinquere -> delinqu", function() {deepEqual( Stem("delinquere"), "delinqu");});
test("deliranti -> delir", function() {deepEqual( Stem("deliranti"), "delir");});
test("delirio -> delir", function() {deepEqual( Stem("delirio"), "delir");});
test("delitti -> delitt", function() {deepEqual( Stem("delitti"), "delitt");});
test("delitto -> delitt", function() {deepEqual( Stem("delitto"), "delitt");});
test("delizie -> deliz", function() {deepEqual( Stem("delizie"), "deliz");});
test("delizioso -> deliz", function() {deepEqual( Stem("delizioso"), "deliz");});
test("dell -> dell", function() {deepEqual( Stem("dell"), "dell");});
test("della -> dell", function() {deepEqual( Stem("della"), "dell");});
test("dellaq -> dellaq", function() {deepEqual( Stem("dellaq"), "dellaq");});
test("dellas -> dellas", function() {deepEqual( Stem("dellas"), "dellas");});
test("delle -> dell", function() {deepEqual( Stem("delle"), "dell");});
test("delli -> dell", function() {deepEqual( Stem("delli"), "dell");});
test("dellla -> delll", function() {deepEqual( Stem("dellla"), "delll");});
test("dello -> dell", function() {deepEqual( Stem("dello"), "dell");});
test("dellòassistenza -> dellòassistent", function() {deepEqual( Stem("dellòassistenza"), "dellòassistent");});
test("delo -> del", function() {deepEqual( Stem("delo"), "del");});
test("delon -> delon", function() {deepEqual( Stem("delon"), "delon");});
test("delrio -> delr", function() {deepEqual( Stem("delrio"), "delr");});
test("delta -> delt", function() {deepEqual( Stem("delta"), "delt");});
test("deltalat -> deltalat", function() {deepEqual( Stem("deltalat"), "deltalat");});
test("deludente -> deludent", function() {deepEqual( Stem("deludente"), "deludent");});
test("delusa -> delus", function() {deepEqual( Stem("delusa"), "delus");});
test("deluse -> delus", function() {deepEqual( Stem("deluse"), "delus");});
test("delusione -> delusion", function() {deepEqual( Stem("delusione"), "delusion");});
test("deluso -> delus", function() {deepEqual( Stem("deluso"), "delus");});
test("delvecchio -> delvecc", function() {deepEqual( Stem("delvecchio"), "delvecc");});
test("demagogia -> demagog", function() {deepEqual( Stem("demagogia"), "demagog");});
test("demagogo -> demagog", function() {deepEqual( Stem("demagogo"), "demagog");});
test("demandando -> demand", function() {deepEqual( Stem("demandando"), "demand");});
test("demandare -> demand", function() {deepEqual( Stem("demandare"), "demand");});
test("demaniale -> demanial", function() {deepEqual( Stem("demaniale"), "demanial");});
test("demaniali -> demanial", function() {deepEqual( Stem("demaniali"), "demanial");});
test("demarcazione -> demarc", function() {deepEqual( Stem("demarcazione"), "demarc");});
test("demattè -> dematt", function() {deepEqual( Stem("demattè"), "dematt");});
test("demeritato -> demerit", function() {deepEqual( Stem("demeritato"), "demerit");});
test("demi -> dem", function() {deepEqual( Stem("demi"), "dem");});
test("demma -> demm", function() {deepEqual( Stem("demma"), "demm");});
test("democratica -> democrat", function() {deepEqual( Stem("democratica"), "democrat");});
test("democraticamente -> democrat", function() {deepEqual( Stem("democraticamente"), "democrat");});
test("democratiche -> democrat", function() {deepEqual( Stem("democratiche"), "democrat");});
test("democratici -> democrat", function() {deepEqual( Stem("democratici"), "democrat");});
test("democratico -> democrat", function() {deepEqual( Stem("democratico"), "democrat");});
test("democratizzazione -> democratizz", function() {deepEqual( Stem("democratizzazione"), "democratizz");});
test("democrazia -> democraz", function() {deepEqual( Stem("democrazia"), "democraz");});
test("democrazià -> democraz", function() {deepEqual( Stem("democrazià"), "democraz");});
test("democrazie -> democraz", function() {deepEqual( Stem("democrazie"), "democraz");});
test("democristiana -> democristian", function() {deepEqual( Stem("democristiana"), "democristian");});
test("democristiani -> democristian", function() {deepEqual( Stem("democristiani"), "democristian");});
test("democristiano -> democrist", function() {deepEqual( Stem("democristiano"), "democrist");});
test("demolendo -> demol", function() {deepEqual( Stem("demolendo"), "demol");});
test("demolire -> demol", function() {deepEqual( Stem("demolire"), "demol");});
test("demoni -> demon", function() {deepEqual( Stem("demoni"), "demon");});
test("demòni -> demòn", function() {deepEqual( Stem("demòni"), "demòn");});
test("demonio -> demon", function() {deepEqual( Stem("demonio"), "demon");});
test("demy -> demy", function() {deepEqual( Stem("demy"), "demy");});
test("denaro -> denar", function() {deepEqual( Stem("denaro"), "denar");});
test("deneuve -> deneuv", function() {deepEqual( Stem("deneuve"), "deneuv");});
test("denigratoria -> denigrator", function() {deepEqual( Stem("denigratoria"), "denigrator");});
test("dennis -> dennis", function() {deepEqual( Stem("dennis"), "dennis");});
test("denominandole -> denomin", function() {deepEqual( Stem("denominandole"), "denomin");});
test("denominata -> denomin", function() {deepEqual( Stem("denominata"), "denomin");});
test("denominati -> denomin", function() {deepEqual( Stem("denominati"), "denomin");});
test("denominato -> denomin", function() {deepEqual( Stem("denominato"), "denomin");});
test("denominazione -> denomin", function() {deepEqual( Stem("denominazione"), "denomin");});
test("denotavano -> denot", function() {deepEqual( Stem("denotavano"), "denot");});
test("densa -> dens", function() {deepEqual( Stem("densa"), "dens");});
test("dense -> dens", function() {deepEqual( Stem("dense"), "dens");});
test("denso -> dens", function() {deepEqual( Stem("denso"), "dens");});
test("dente -> dent", function() {deepEqual( Stem("dente"), "dent");});
test("denti -> dent", function() {deepEqual( Stem("denti"), "dent");});
test("dentista -> dentist", function() {deepEqual( Stem("dentista"), "dentist");});
test("dentro -> dentr", function() {deepEqual( Stem("dentro"), "dentr");});
test("denuncia -> denunc", function() {deepEqual( Stem("denuncia"), "denunc");});
test("denunciando -> denunc", function() {deepEqual( Stem("denunciando"), "denunc");});
test("denunciare -> denunc", function() {deepEqual( Stem("denunciare"), "denunc");});
test("denunciarli -> denunc", function() {deepEqual( Stem("denunciarli"), "denunc");});
test("denunciarlo -> denunc", function() {deepEqual( Stem("denunciarlo"), "denunc");});
test("denunciata -> denunc", function() {deepEqual( Stem("denunciata"), "denunc");});
test("denunciati -> denunc", function() {deepEqual( Stem("denunciati"), "denunc");});
test("denunciato -> denunc", function() {deepEqual( Stem("denunciato"), "denunc");});
test("denunciet -> denunciet", function() {deepEqual( Stem("denunciet"), "denunciet");});
test("denunziare -> denunz", function() {deepEqual( Stem("denunziare"), "denunz");});
test("denunziavan -> denunziavan", function() {deepEqual( Stem("denunziavan"), "denunziavan");});
test("denunzie -> denunz", function() {deepEqual( Stem("denunzie"), "denunz");});
test("deo -> deo", function() {deepEqual( Stem("deo"), "deo");});
test("deon -> deon", function() {deepEqual( Stem("deon"), "deon");});
test("deontologicamente -> deontolog", function() {deepEqual( Stem("deontologicamente"), "deontolog");});
test("depardieu -> depardieu", function() {deepEqual( Stem("depardieu"), "depardieu");});
test("deplora -> deplor", function() {deepEqual( Stem("deplora"), "deplor");});
test("deplorabile -> deplor", function() {deepEqual( Stem("deplorabile"), "deplor");});
test("deplorabili -> deplor", function() {deepEqual( Stem("deplorabili"), "deplor");});
test("deplorata -> deplor", function() {deepEqual( Stem("deplorata"), "deplor");});
test("deplorati -> deplor", function() {deepEqual( Stem("deplorati"), "deplor");});
test("deplorava -> deplor", function() {deepEqual( Stem("deplorava"), "deplor");});
test("depon -> depon", function() {deepEqual( Stem("depon"), "depon");});
test("depone -> depon", function() {deepEqual( Stem("depone"), "depon");});
test("deponevano -> depon", function() {deepEqual( Stem("deponevano"), "depon");});
test("deponga -> depong", function() {deepEqual( Stem("deponga"), "depong");});
test("deporre -> deporr", function() {deepEqual( Stem("deporre"), "deporr");});
test("deportare -> deport", function() {deepEqual( Stem("deportare"), "deport");});
test("deportazione -> deport", function() {deepEqual( Stem("deportazione"), "deport");});
test("depose -> depos", function() {deepEqual( Stem("depose"), "depos");});
test("depositar -> deposit", function() {deepEqual( Stem("depositar"), "deposit");});
test("depositare -> deposit", function() {deepEqual( Stem("depositare"), "deposit");});
test("depositari -> depositar", function() {deepEqual( Stem("depositari"), "depositar");});
test("depositerà -> deposit", function() {deepEqual( Stem("depositerà"), "deposit");});
test("depositi -> depos", function() {deepEqual( Stem("depositi"), "depos");});
test("deposito -> depos", function() {deepEqual( Stem("deposito"), "depos");});
test("deposizione -> deposizion", function() {deepEqual( Stem("deposizione"), "deposizion");});
test("deposta -> depost", function() {deepEqual( Stem("deposta"), "depost");});
test("deposto -> depost", function() {deepEqual( Stem("deposto"), "depost");});
test("deprendo -> depr", function() {deepEqual( Stem("deprendo"), "depr");});
test("depressa -> depress", function() {deepEqual( Stem("depressa"), "depress");});
test("depresse -> depress", function() {deepEqual( Stem("depresse"), "depress");});
test("depressive -> depress", function() {deepEqual( Stem("depressive"), "depress");});
test("depurato -> depur", function() {deepEqual( Stem("depurato"), "depur");});
test("depurazione -> depur", function() {deepEqual( Stem("depurazione"), "depur");});
test("deputata -> deput", function() {deepEqual( Stem("deputata"), "deput");});
test("deputati -> deput", function() {deepEqual( Stem("deputati"), "deput");});
test("deputato -> deput", function() {deepEqual( Stem("deputato"), "deput");});
test("der -> der", function() {deepEqual( Stem("der"), "der");});
test("derby -> derby", function() {deepEqual( Stem("derby"), "derby");});
test("derelitte -> derelitt", function() {deepEqual( Stem("derelitte"), "derelitt");});
test("derelitti -> derelitt", function() {deepEqual( Stem("derelitti"), "derelitt");});
test("deride -> derid", function() {deepEqual( Stem("deride"), "derid");});
test("deriderle -> derid", function() {deepEqual( Stem("deriderle"), "derid");});
test("deridevan -> deridevan", function() {deepEqual( Stem("deridevan"), "deridevan");});
test("deridono -> derid", function() {deepEqual( Stem("deridono"), "derid");});
test("derisa -> deris", function() {deepEqual( Stem("derisa"), "deris");});
test("deriso -> deris", function() {deepEqual( Stem("deriso"), "deris");});
test("deriva -> der", function() {deepEqual( Stem("deriva"), "der");});
test("derivano -> der", function() {deepEqual( Stem("derivano"), "der");});
test("derivante -> deriv", function() {deepEqual( Stem("derivante"), "deriv");});
test("derivanti -> deriv", function() {deepEqual( Stem("derivanti"), "deriv");});
test("derivati -> deriv", function() {deepEqual( Stem("derivati"), "deriv");});
test("deriverà -> deriv", function() {deepEqual( Stem("deriverà"), "deriv");});
test("derivi -> der", function() {deepEqual( Stem("derivi"), "der");});
test("deroga -> derog", function() {deepEqual( Stem("deroga"), "derog");});
test("derogando -> derog", function() {deepEqual( Stem("derogando"), "derog");});
test("derrata -> derr", function() {deepEqual( Stem("derrata"), "derr");});
test("derrate -> derr", function() {deepEqual( Stem("derrate"), "derr");});
test("derubata -> derub", function() {deepEqual( Stem("derubata"), "derub");});
test("des -> des", function() {deepEqual( Stem("des"), "des");});
test("desailly -> desailly", function() {deepEqual( Stem("desailly"), "desailly");});
test("desario -> desar", function() {deepEqual( Stem("desario"), "desar");});
test("deschamps -> deschamps", function() {deepEqual( Stem("deschamps"), "deschamps");});
test("desconsuelo -> desconsuel", function() {deepEqual( Stem("desconsuelo"), "desconsuel");});
test("descrisse -> descriss", function() {deepEqual( Stem("descrisse"), "descriss");});
test("descritta -> descritt", function() {deepEqual( Stem("descritta"), "descritt");});
test("descritte -> descritt", function() {deepEqual( Stem("descritte"), "descritt");});
test("descritti -> descritt", function() {deepEqual( Stem("descritti"), "descritt");});
test("descritto -> descritt", function() {deepEqual( Stem("descritto"), "descritt");});
test("descriuendo -> descriu", function() {deepEqual( Stem("descriuendo"), "descriu");});
test("descrive -> descriv", function() {deepEqual( Stem("descrive"), "descriv");});
test("descrivendo -> descriv", function() {deepEqual( Stem("descrivendo"), "descriv");});
test("descriver -> descriver", function() {deepEqual( Stem("descriver"), "descriver");});
test("descrivere -> descriv", function() {deepEqual( Stem("descrivere"), "descriv");});
test("descriveremo -> descriv", function() {deepEqual( Stem("descriveremo"), "descriv");});
test("descriverle -> descriv", function() {deepEqual( Stem("descriverle"), "descriv");});
test("descriverlo -> descriv", function() {deepEqual( Stem("descriverlo"), "descriv");});
test("descriveva -> descriv", function() {deepEqual( Stem("descriveva"), "descriv");});
test("descrizion -> descrizion", function() {deepEqual( Stem("descrizion"), "descrizion");});
test("descrizione -> descrizion", function() {deepEqual( Stem("descrizione"), "descrizion");});
test("descrizioni -> descrizion", function() {deepEqual( Stem("descrizioni"), "descrizion");});
test("deserta -> desert", function() {deepEqual( Stem("deserta"), "desert");});
test("deserte -> desert", function() {deepEqual( Stem("deserte"), "desert");});
test("deserti -> des", function() {deepEqual( Stem("deserti"), "des");});
test("deserto -> desert", function() {deepEqual( Stem("deserto"), "desert");});
test("desfosses -> desfosses", function() {deepEqual( Stem("desfosses"), "desfosses");});
test("desidera -> desider", function() {deepEqual( Stem("desidera"), "desider");});
test("desiderabile -> desider", function() {deepEqual( Stem("desiderabile"), "desider");});
test("desideran -> desideran", function() {deepEqual( Stem("desideran"), "desideran");});
test("desiderar -> desider", function() {deepEqual( Stem("desiderar"), "desider");});
test("desiderare -> desider", function() {deepEqual( Stem("desiderare"), "desider");});
test("desiderarla -> desider", function() {deepEqual( Stem("desiderarla"), "desider");});
test("desiderarlo -> desider", function() {deepEqual( Stem("desiderarlo"), "desider");});
test("desiderarsi -> desider", function() {deepEqual( Stem("desiderarsi"), "desider");});
test("desiderasse -> desider", function() {deepEqual( Stem("desiderasse"), "desider");});
test("desiderata -> desider", function() {deepEqual( Stem("desiderata"), "desider");});
test("desiderate -> desider", function() {deepEqual( Stem("desiderate"), "desider");});
test("desiderati -> desider", function() {deepEqual( Stem("desiderati"), "desider");});
test("desideratissimo -> desideratissim", function() {deepEqual( Stem("desideratissimo"), "desideratissim");});
test("desiderato -> desider", function() {deepEqual( Stem("desiderato"), "desider");});
test("desiderava -> desider", function() {deepEqual( Stem("desiderava"), "desider");});
test("desideravamo -> desider", function() {deepEqual( Stem("desideravamo"), "desider");});
test("desidererete -> desider", function() {deepEqual( Stem("desidererete"), "desider");});
test("desideri -> desider", function() {deepEqual( Stem("desideri"), "desider");});
test("desidèri -> desidèr", function() {deepEqual( Stem("desidèri"), "desidèr");});
test("desideriamo -> desider", function() {deepEqual( Stem("desideriamo"), "desider");});
test("desideriate -> desider", function() {deepEqual( Stem("desideriate"), "desider");});
test("desiderio -> desider", function() {deepEqual( Stem("desiderio"), "desider");});
test("desidero -> desider", function() {deepEqual( Stem("desidero"), "desider");});
test("desiderò -> desid", function() {deepEqual( Stem("desiderò"), "desid");});
test("desiderosa -> desider", function() {deepEqual( Stem("desiderosa"), "desider");});
test("desideroso -> desider", function() {deepEqual( Stem("desideroso"), "desider");});
test("designati -> design", function() {deepEqual( Stem("designati"), "design");});
test("designato -> design", function() {deepEqual( Stem("designato"), "design");});
test("designazioni -> design", function() {deepEqual( Stem("designazioni"), "design");});
test("desinando -> desin", function() {deepEqual( Stem("desinando"), "desin");});
test("desinare -> desin", function() {deepEqual( Stem("desinare"), "desin");});
test("desinarono -> desin", function() {deepEqual( Stem("desinarono"), "desin");});
test("desinato -> desin", function() {deepEqual( Stem("desinato"), "desin");});
test("desinava -> desin", function() {deepEqual( Stem("desinava"), "desin");});
test("desinò -> desin", function() {deepEqual( Stem("desinò"), "desin");});
test("desolata -> desol", function() {deepEqual( Stem("desolata"), "desol");});
test("desolate -> desol", function() {deepEqual( Stem("desolate"), "desol");});
test("desolati -> desol", function() {deepEqual( Stem("desolati"), "desol");});
test("desolato -> desol", function() {deepEqual( Stem("desolato"), "desol");});
test("desolazione -> desol", function() {deepEqual( Stem("desolazione"), "desol");});
test("despeinada -> despeinad", function() {deepEqual( Stem("despeinada"), "despeinad");});
test("desse -> dess", function() {deepEqual( Stem("desse"), "dess");});
test("dessero -> desser", function() {deepEqual( Stem("dessero"), "desser");});
test("desta -> dest", function() {deepEqual( Stem("desta"), "dest");});
test("destare -> dest", function() {deepEqual( Stem("destare"), "dest");});
test("destarsi -> dest", function() {deepEqual( Stem("destarsi"), "dest");});
test("destasse -> dest", function() {deepEqual( Stem("destasse"), "dest");});
test("destava -> dest", function() {deepEqual( Stem("destava"), "dest");});
test("destavano -> dest", function() {deepEqual( Stem("destavano"), "dest");});
test("desti -> dest", function() {deepEqual( Stem("desti"), "dest");});
test("destinando -> destin", function() {deepEqual( Stem("destinando"), "destin");});
test("destinano -> destin", function() {deepEqual( Stem("destinano"), "destin");});
test("destinare -> destin", function() {deepEqual( Stem("destinare"), "destin");});
test("destinata -> destin", function() {deepEqual( Stem("destinata"), "destin");});
test("destinatari -> destinatar", function() {deepEqual( Stem("destinatari"), "destinatar");});
test("destinate -> destin", function() {deepEqual( Stem("destinate"), "destin");});
test("destinati -> destin", function() {deepEqual( Stem("destinati"), "destin");});
test("destinato -> destin", function() {deepEqual( Stem("destinato"), "destin");});
test("destinazione -> destin", function() {deepEqual( Stem("destinazione"), "destin");});
test("destini -> destin", function() {deepEqual( Stem("destini"), "destin");});
test("destino -> destin", function() {deepEqual( Stem("destino"), "destin");});
test("destituito -> destitu", function() {deepEqual( Stem("destituito"), "destitu");});
test("desto -> dest", function() {deepEqual( Stem("desto"), "dest");});
test("destò -> dest", function() {deepEqual( Stem("destò"), "dest");});
test("destra -> destr", function() {deepEqual( Stem("destra"), "destr");});
test("destramente -> destr", function() {deepEqual( Stem("destramente"), "destr");});
test("destre -> destr", function() {deepEqual( Stem("destre"), "destr");});
test("destrezza -> destrezz", function() {deepEqual( Stem("destrezza"), "destrezz");});
test("destri -> destr", function() {deepEqual( Stem("destri"), "destr");});
test("destro -> destr", function() {deepEqual( Stem("destro"), "destr");});
test("detective -> detect", function() {deepEqual( Stem("detective"), "detect");});
test("detenere -> deten", function() {deepEqual( Stem("detenere"), "deten");});
test("deteneva -> deten", function() {deepEqual( Stem("deteneva"), "deten");});
test("deteniamo -> deten", function() {deepEqual( Stem("deteniamo"), "deten");});
test("detentore -> detentor", function() {deepEqual( Stem("detentore"), "detentor");});
test("detenuta -> deten", function() {deepEqual( Stem("detenuta"), "deten");});
test("detenute -> deten", function() {deepEqual( Stem("detenute"), "deten");});
test("detenuti -> deten", function() {deepEqual( Stem("detenuti"), "deten");});
test("detenuto -> deten", function() {deepEqual( Stem("detenuto"), "deten");});
test("detenzione -> detenzion", function() {deepEqual( Stem("detenzione"), "detenzion");});
test("deterioramento -> deterior", function() {deepEqual( Stem("deterioramento"), "deterior");});
test("determianre -> determianr", function() {deepEqual( Stem("determianre"), "determianr");});
test("determina -> determin", function() {deepEqual( Stem("determina"), "determin");});
test("determinante -> determin", function() {deepEqual( Stem("determinante"), "determin");});
test("determinanti -> determin", function() {deepEqual( Stem("determinanti"), "determin");});
test("determinare -> determin", function() {deepEqual( Stem("determinare"), "determin");});
test("determinata -> determin", function() {deepEqual( Stem("determinata"), "determin");});
test("determinate -> determin", function() {deepEqual( Stem("determinate"), "determin");});
test("determinati -> determin", function() {deepEqual( Stem("determinati"), "determin");});
test("determinato -> determin", function() {deepEqual( Stem("determinato"), "determin");});
test("determinazione -> determin", function() {deepEqual( Stem("determinazione"), "determin");});
test("determinerà -> determin", function() {deepEqual( Stem("determinerà"), "determin");});
test("determini -> determin", function() {deepEqual( Stem("determini"), "determin");});
test("detersivo -> deters", function() {deepEqual( Stem("detersivo"), "deters");});
test("detestabile -> detest", function() {deepEqual( Stem("detestabile"), "detest");});
test("detestare -> detest", function() {deepEqual( Stem("detestare"), "detest");});
test("detestino -> detestin", function() {deepEqual( Stem("detestino"), "detestin");});
test("detiene -> detien", function() {deepEqual( Stem("detiene"), "detien");});
test("detonatori -> deton", function() {deepEqual( Stem("detonatori"), "deton");});
test("detta -> dett", function() {deepEqual( Stem("detta"), "dett");});
test("dettagli -> dettagl", function() {deepEqual( Stem("dettagli"), "dettagl");});
test("dettagliate -> dettagl", function() {deepEqual( Stem("dettagliate"), "dettagl");});
test("dettagliato -> dettagl", function() {deepEqual( Stem("dettagliato"), "dettagl");});
test("dettaglio -> dettagl", function() {deepEqual( Stem("dettaglio"), "dettagl");});
test("dettando -> dett", function() {deepEqual( Stem("dettando"), "dett");});
test("dettata -> dett", function() {deepEqual( Stem("dettata"), "dett");});
test("dettate -> dett", function() {deepEqual( Stem("dettate"), "dett");});
test("dette -> dett", function() {deepEqual( Stem("dette"), "dett");});
test("detti -> dett", function() {deepEqual( Stem("detti"), "dett");});
test("detto -> dett", function() {deepEqual( Stem("detto"), "dett");});
test("dettò -> dett", function() {deepEqual( Stem("dettò"), "dett");});
test("dettogli -> dettogl", function() {deepEqual( Stem("dettogli"), "dettogl");});
test("dettolo -> dettol", function() {deepEqual( Stem("dettolo"), "dettol");});
test("deutsche -> deutsc", function() {deepEqual( Stem("deutsche"), "deutsc");});
test("dev -> dev", function() {deepEqual( Stem("dev"), "dev");});
test("deva -> dev", function() {deepEqual( Stem("deva"), "dev");});
test("devan -> devan", function() {deepEqual( Stem("devan"), "devan");});
test("devastano -> devast", function() {deepEqual( Stem("devastano"), "devast");});
test("devastante -> devast", function() {deepEqual( Stem("devastante"), "devast");});
test("devastato -> devast", function() {deepEqual( Stem("devastato"), "devast");});
test("devastazion -> devastazion", function() {deepEqual( Stem("devastazion"), "devastazion");});
test("deve -> dev", function() {deepEqual( Stem("deve"), "dev");});
test("devi -> dev", function() {deepEqual( Stem("devi"), "dev");});
test("deviare -> dev", function() {deepEqual( Stem("deviare"), "dev");});
test("deviata -> dev", function() {deepEqual( Stem("deviata"), "dev");});
test("deviato -> dev", function() {deepEqual( Stem("deviato"), "dev");});
test("deviazione -> deviazion", function() {deepEqual( Stem("deviazione"), "deviazion");});
test("devils -> devils", function() {deepEqual( Stem("devils"), "devils");});
test("devo -> dev", function() {deepEqual( Stem("devo"), "dev");});
test("devon -> devon", function() {deepEqual( Stem("devon"), "devon");});
test("devono -> dev", function() {deepEqual( Stem("devono"), "dev");});
test("devozione -> devozion", function() {deepEqual( Stem("devozione"), "devozion");});
test("dexterae -> dextera", function() {deepEqual( Stem("dexterae"), "dextera");});
test("df -> df", function() {deepEqual( Stem("df"), "df");});
test("dg -> dg", function() {deepEqual( Stem("dg"), "dg");});
test("dges -> dges", function() {deepEqual( Stem("dges"), "dges");});
test("dgl -> dgl", function() {deepEqual( Stem("dgl"), "dgl");});
test("dhahran -> dhahran", function() {deepEqual( Stem("dhahran"), "dhahran");});
test("dhaka -> dhak", function() {deepEqual( Stem("dhaka"), "dhak");});
test("dhzuna -> dhzun", function() {deepEqual( Stem("dhzuna"), "dhzun");});
test("di -> di", function() {deepEqual( Stem("di"), "di");});
test("dì -> dì", function() {deepEqual( Stem("dì"), "dì");});
test("dia -> dia", function() {deepEqual( Stem("dia"), "dia");});
test("diabetici -> diabet", function() {deepEqual( Stem("diabetici"), "diabet");});
test("diabolica -> diabol", function() {deepEqual( Stem("diabolica"), "diabol");});
test("diaboliche -> diabol", function() {deepEqual( Stem("diaboliche"), "diabol");});
test("diabolici -> diabol", function() {deepEqual( Stem("diabolici"), "diabol");});
test("diafano -> diaf", function() {deepEqual( Stem("diafano"), "diaf");});
test("diagnosticata -> diagnostic", function() {deepEqual( Stem("diagnosticata"), "diagnostic");});
test("diagonale -> diagonal", function() {deepEqual( Stem("diagonale"), "diagonal");});
test("diahann -> diahann", function() {deepEqual( Stem("diahann"), "diahann");});
test("dialetto -> dialett", function() {deepEqual( Stem("dialetto"), "dialett");});
test("dializzati -> dializz", function() {deepEqual( Stem("dializzati"), "dializz");});
test("dialogare -> dialog", function() {deepEqual( Stem("dialogare"), "dialog");});
test("dialogo -> dialog", function() {deepEqual( Stem("dialogo"), "dialog");});
test("diametro -> diametr", function() {deepEqual( Stem("diametro"), "diametr");});
test("diamine -> diamin", function() {deepEqual( Stem("diamine"), "diamin");});
test("diamo -> diam", function() {deepEqual( Stem("diamo"), "diam");});
test("diamogli -> diamogl", function() {deepEqual( Stem("diamogli"), "diamogl");});
test("diana -> dian", function() {deepEqual( Stem("diana"), "dian");});
test("diane -> dian", function() {deepEqual( Stem("diane"), "dian");});
test("diano -> dian", function() {deepEqual( Stem("diano"), "dian");});
test("diari -> diar", function() {deepEqual( Stem("diari"), "diar");});
test("diatribe -> diatrib", function() {deepEqual( Stem("diatribe"), "diatrib");});
test("diavoleria -> diavoler", function() {deepEqual( Stem("diavoleria"), "diavoler");});
test("diavolerie -> diavoler", function() {deepEqual( Stem("diavolerie"), "diavoler");});
test("diavoletto -> diavolett", function() {deepEqual( Stem("diavoletto"), "diavolett");});
test("diavoli -> diavol", function() {deepEqual( Stem("diavoli"), "diavol");});
test("diavolo -> diavol", function() {deepEqual( Stem("diavolo"), "diavol");});
test("dibattano -> dibatt", function() {deepEqual( Stem("dibattano"), "dibatt");});
test("dibatte -> dibatt", function() {deepEqual( Stem("dibatte"), "dibatt");});
test("dibattendo -> dibatt", function() {deepEqual( Stem("dibattendo"), "dibatt");});
test("dibattendosi -> dibatt", function() {deepEqual( Stem("dibattendosi"), "dibatt");});
test("dibatterà -> dibatt", function() {deepEqual( Stem("dibatterà"), "dibatt");});
test("dibattere -> dibatt", function() {deepEqual( Stem("dibattere"), "dibatt");});
test("dibattersi -> dibatt", function() {deepEqual( Stem("dibattersi"), "dibatt");});
test("dibatteva -> dibatt", function() {deepEqual( Stem("dibatteva"), "dibatt");});
test("dibattimentale -> dibattimental", function() {deepEqual( Stem("dibattimentale"), "dibattimental");});
test("dibattimento -> dibatt", function() {deepEqual( Stem("dibattimento"), "dibatt");});
test("dibattito -> dibatt", function() {deepEqual( Stem("dibattito"), "dibatt");});
test("dibattuta -> dibatt", function() {deepEqual( Stem("dibattuta"), "dibatt");});
test("dic -> dic", function() {deepEqual( Stem("dic"), "dic");});
test("dica -> dic", function() {deepEqual( Stem("dica"), "dic");});
test("dican -> dican", function() {deepEqual( Stem("dican"), "dican");});
test("dicano -> dic", function() {deepEqual( Stem("dicano"), "dic");});
test("dicara -> dicar", function() {deepEqual( Stem("dicara"), "dicar");});
test("dicastero -> dicaster", function() {deepEqual( Stem("dicastero"), "dicaster");});
test("dice -> dic", function() {deepEqual( Stem("dice"), "dic");});
test("dicembre -> dicembr", function() {deepEqual( Stem("dicembre"), "dicembr");});
test("dicendo -> dic", function() {deepEqual( Stem("dicendo"), "dic");});
test("dicendogli -> dic", function() {deepEqual( Stem("dicendogli"), "dic");});
test("dicendole -> dic", function() {deepEqual( Stem("dicendole"), "dic");});
test("dicendolo -> dic", function() {deepEqual( Stem("dicendolo"), "dic");});
test("dicesse -> dicess", function() {deepEqual( Stem("dicesse"), "dicess");});
test("dicessero -> dic", function() {deepEqual( Stem("dicessero"), "dic");});
test("dicessi -> dicess", function() {deepEqual( Stem("dicessi"), "dicess");});
test("diceste -> dicest", function() {deepEqual( Stem("diceste"), "dicest");});
test("diceua -> diceu", function() {deepEqual( Stem("diceua"), "diceu");});
test("diceva -> dic", function() {deepEqual( Stem("diceva"), "dic");});
test("dicevan -> dicevan", function() {deepEqual( Stem("dicevan"), "dicevan");});
test("dicevano -> dic", function() {deepEqual( Stem("dicevano"), "dic");});
test("dicevate -> dic", function() {deepEqual( Stem("dicevate"), "dic");});
test("dicevo -> dic", function() {deepEqual( Stem("dicevo"), "dic");});
test("dichairata -> dichair", function() {deepEqual( Stem("dichairata"), "dichair");});
test("dichiara -> dichiar", function() {deepEqual( Stem("dichiara"), "dichiar");});
test("dichiarando -> dichiar", function() {deepEqual( Stem("dichiarando"), "dichiar");});
test("dichiarare -> dichiar", function() {deepEqual( Stem("dichiarare"), "dichiar");});
test("dichiararsi -> dichiar", function() {deepEqual( Stem("dichiararsi"), "dichiar");});
test("dichiarasse -> dichiar", function() {deepEqual( Stem("dichiarasse"), "dichiar");});
test("dichiarata -> dichiar", function() {deepEqual( Stem("dichiarata"), "dichiar");});
test("dichiarate -> dichiar", function() {deepEqual( Stem("dichiarate"), "dichiar");});
test("dichiarati -> dichiar", function() {deepEqual( Stem("dichiarati"), "dichiar");});
test("dichiarato -> dichiar", function() {deepEqual( Stem("dichiarato"), "dichiar");});
test("dichiarava -> dichiar", function() {deepEqual( Stem("dichiarava"), "dichiar");});
test("dichiarazione -> dichiar", function() {deepEqual( Stem("dichiarazione"), "dichiar");});
test("dichiarazioni -> dichiar", function() {deepEqual( Stem("dichiarazioni"), "dichiar");});
test("dichiari -> dichiar", function() {deepEqual( Stem("dichiari"), "dichiar");});
test("dichiaro -> dichiar", function() {deepEqual( Stem("dichiaro"), "dichiar");});
test("dichiarò -> dichiar", function() {deepEqual( Stem("dichiarò"), "dichiar");});
test("dichiazioni -> dichiazion", function() {deepEqual( Stem("dichiazioni"), "dichiazion");});
test("dici -> dic", function() {deepEqual( Stem("dici"), "dic");});
test("diciam -> diciam", function() {deepEqual( Stem("diciam"), "diciam");});
test("diciamo -> dic", function() {deepEqual( Stem("diciamo"), "dic");});
test("diciamolo -> diciamol", function() {deepEqual( Stem("diciamolo"), "diciamol");});
test("diciannovenne -> diciannovenn", function() {deepEqual( Stem("diciannovenne"), "diciannovenn");});
test("diciassettenne -> diciassettenn", function() {deepEqual( Stem("diciassettenne"), "diciassettenn");});
test("diciottenne -> diciottenn", function() {deepEqual( Stem("diciottenne"), "diciottenn");});
test("diciotto -> diciott", function() {deepEqual( Stem("diciotto"), "diciott");});
test("dicitore -> dicitor", function() {deepEqual( Stem("dicitore"), "dicitor");});
test("dicitura -> dicitur", function() {deepEqual( Stem("dicitura"), "dicitur");});
test("dico -> dic", function() {deepEqual( Stem("dico"), "dic");});
test("dicon -> dicon", function() {deepEqual( Stem("dicon"), "dicon");});
test("dicono -> dic", function() {deepEqual( Stem("dicono"), "dic");});
test("dicotomia -> dicotom", function() {deepEqual( Stem("dicotomia"), "dicotom");});
test("didier -> didier", function() {deepEqual( Stem("didier"), "didier");});
test("die -> die", function() {deepEqual( Stem("die"), "die");});
test("dié -> diè", function() {deepEqual( Stem("dié"), "diè");});
test("dieci -> diec", function() {deepEqual( Stem("dieci"), "diec");});
test("diecimila -> diecimil", function() {deepEqual( Stem("diecimila"), "diecimil");});
test("diede -> died", function() {deepEqual( Stem("diede"), "died");});
test("diedero -> dieder", function() {deepEqual( Stem("diedero"), "dieder");});
test("diego -> dieg", function() {deepEqual( Stem("diego"), "dieg");});
test("dieta -> diet", function() {deepEqual( Stem("dieta"), "diet");});
test("dieter -> dieter", function() {deepEqual( Stem("dieter"), "dieter");});
test("dietologi -> dietolog", function() {deepEqual( Stem("dietologi"), "dietolog");});
test("dietologo -> dietolog", function() {deepEqual( Stem("dietologo"), "dietolog");});
test("dietro -> dietr", function() {deepEqual( Stem("dietro"), "dietr");});
test("dietrologie -> dietrolog", function() {deepEqual( Stem("dietrologie"), "dietrolog");});
test("difatti -> difatt", function() {deepEqual( Stem("difatti"), "difatt");});
test("difendano -> difend", function() {deepEqual( Stem("difendano"), "difend");});
test("difende -> dif", function() {deepEqual( Stem("difende"), "dif");});
test("difendendo -> difend", function() {deepEqual( Stem("difendendo"), "difend");});
test("difenderanno -> difend", function() {deepEqual( Stem("difenderanno"), "difend");});
test("difendere -> difend", function() {deepEqual( Stem("difendere"), "difend");});
test("difenderla -> difend", function() {deepEqual( Stem("difenderla"), "difend");});
test("difenderle -> difend", function() {deepEqual( Stem("difenderle"), "difend");});
test("difenderlo -> difend", function() {deepEqual( Stem("difenderlo"), "difend");});
test("difendermi -> difend", function() {deepEqual( Stem("difendermi"), "difend");});
test("difendersi -> difend", function() {deepEqual( Stem("difendersi"), "difend");});
test("difendeva -> difend", function() {deepEqual( Stem("difendeva"), "difend");});
test("difendono -> difend", function() {deepEqual( Stem("difendono"), "difend");});
test("difensiva -> difens", function() {deepEqual( Stem("difensiva"), "difens");});
test("difensive -> difens", function() {deepEqual( Stem("difensive"), "difens");});
test("difensivo -> difens", function() {deepEqual( Stem("difensivo"), "difens");});
test("difensore -> difensor", function() {deepEqual( Stem("difensore"), "difensor");});
test("difensori -> difensor", function() {deepEqual( Stem("difensori"), "difensor");});
test("difesa -> difes", function() {deepEqual( Stem("difesa"), "difes");});
test("difese -> difes", function() {deepEqual( Stem("difese"), "difes");});
test("difesi -> difes", function() {deepEqual( Stem("difesi"), "difes");});
test("difeso -> difes", function() {deepEqual( Stem("difeso"), "difes");});
test("difetta -> difett", function() {deepEqual( Stem("difetta"), "difett");});
test("difetti -> difett", function() {deepEqual( Stem("difetti"), "difett");});
test("difetto -> difett", function() {deepEqual( Stem("difetto"), "difett");});
test("difettosi -> difett", function() {deepEqual( Stem("difettosi"), "difett");});
test("difettucci -> difettucc", function() {deepEqual( Stem("difettucci"), "difettucc");});
test("diffamato -> diffam", function() {deepEqual( Stem("diffamato"), "diffam");});
test("diffamazione -> diffam", function() {deepEqual( Stem("diffamazione"), "diffam");});
test("differenti -> different", function() {deepEqual( Stem("differenti"), "different");});
test("differenza -> different", function() {deepEqual( Stem("differenza"), "different");});
test("differenze -> different", function() {deepEqual( Stem("differenze"), "different");});
test("differenzia -> differenz", function() {deepEqual( Stem("differenzia"), "differenz");});
test("differenziale -> differenzial", function() {deepEqual( Stem("differenziale"), "differenzial");});
test("differenziate -> differenz", function() {deepEqual( Stem("differenziate"), "differenz");});
test("differenziato -> differenz", function() {deepEqual( Stem("differenziato"), "differenz");});
test("differenziazione -> differenz", function() {deepEqual( Stem("differenziazione"), "differenz");});
test("differire -> differ", function() {deepEqual( Stem("differire"), "differ");});
test("differiscono -> differ", function() {deepEqual( Stem("differiscono"), "differ");});
test("differito -> differ", function() {deepEqual( Stem("differito"), "differ");});
test("difficile -> difficil", function() {deepEqual( Stem("difficile"), "difficil");});
test("difficili -> difficil", function() {deepEqual( Stem("difficili"), "difficil");});
test("difficilmente -> difficil", function() {deepEqual( Stem("difficilmente"), "difficil");});
test("difficolta -> difficolt", function() {deepEqual( Stem("difficolta"), "difficolt");});
test("difficoltà -> difficolt", function() {deepEqual( Stem("difficoltà"), "difficolt");});
test("difficoltoso -> difficolt", function() {deepEqual( Stem("difficoltoso"), "difficolt");});
test("diffidare -> diffid", function() {deepEqual( Stem("diffidare"), "diffid");});
test("diffidati -> diffid", function() {deepEqual( Stem("diffidati"), "diffid");});
test("diffide -> diffid", function() {deepEqual( Stem("diffide"), "diffid");});
test("diffidenti -> diffident", function() {deepEqual( Stem("diffidenti"), "diffident");});
test("diffidenza -> diffident", function() {deepEqual( Stem("diffidenza"), "diffident");});
test("diffinisce -> diffin", function() {deepEqual( Stem("diffinisce"), "diffin");});
test("diffonde -> diffond", function() {deepEqual( Stem("diffonde"), "diffond");});
test("diffondere -> diffond", function() {deepEqual( Stem("diffondere"), "diffond");});
test("diffondersi -> diffond", function() {deepEqual( Stem("diffondersi"), "diffond");});
test("diffondeva -> diffond", function() {deepEqual( Stem("diffondeva"), "diffond");});
test("diffusa -> diffus", function() {deepEqual( Stem("diffusa"), "diffus");});
test("diffuse -> diffus", function() {deepEqual( Stem("diffuse"), "diffus");});
test("diffusi -> diffus", function() {deepEqual( Stem("diffusi"), "diffus");});
test("diffusione -> diffusion", function() {deepEqual( Stem("diffusione"), "diffusion");});
test("diffuso -> diffus", function() {deepEqual( Stem("diffuso"), "diffus");});
test("difronte -> difront", function() {deepEqual( Stem("difronte"), "difront");});
test("dig -> dig", function() {deepEqual( Stem("dig"), "dig");});
test("diga -> dig", function() {deepEqual( Stem("diga"), "dig");});
test("digestione -> digestion", function() {deepEqual( Stem("digestione"), "digestion");});
test("diggiuna -> diggiun", function() {deepEqual( Stem("diggiuna"), "diggiun");});
test("diggy -> diggy", function() {deepEqual( Stem("diggy"), "diggy");});
test("digitale -> digital", function() {deepEqual( Stem("digitale"), "digital");});
test("digiuno -> digiun", function() {deepEqual( Stem("digiuno"), "digiun");});
test("digli -> digl", function() {deepEqual( Stem("digli"), "digl");});
test("dignità -> dignit", function() {deepEqual( Stem("dignità"), "dignit");});
test("dignitari -> dignitar", function() {deepEqual( Stem("dignitari"), "dignitar");});
test("dignitoso -> dignit", function() {deepEqual( Stem("dignitoso"), "dignit");});
test("digo -> dig", function() {deepEqual( Stem("digo"), "dig");});
test("digos -> digos", function() {deepEqual( Stem("digos"), "digos");});
test("digrignando -> digrign", function() {deepEqual( Stem("digrignando"), "digrign");});
test("digrignar -> digrign", function() {deepEqual( Stem("digrignar"), "digrign");});
test("diht -> diht", function() {deepEqual( Stem("diht"), "diht");});
test("diktat -> diktat", function() {deepEqual( Stem("diktat"), "diktat");});
test("dil -> dil", function() {deepEqual( Stem("dil"), "dil");});
test("dilaniata -> dilan", function() {deepEqual( Stem("dilaniata"), "dilan");});
test("dilata -> dil", function() {deepEqual( Stem("dilata"), "dil");});
test("dilatandovisi -> dilatandovis", function() {deepEqual( Stem("dilatandovisi"), "dilatandovis");});
test("dilatato -> dilat", function() {deepEqual( Stem("dilatato"), "dilat");});
test("dilavate -> dil", function() {deepEqual( Stem("dilavate"), "dil");});
test("dilavato -> dilav", function() {deepEqual( Stem("dilavato"), "dilav");});
test("dilazione -> dilazion", function() {deepEqual( Stem("dilazione"), "dilazion");});
test("dilazioni -> dilazion", function() {deepEqual( Stem("dilazioni"), "dilazion");});
test("dileguando -> dilegu", function() {deepEqual( Stem("dileguando"), "dilegu");});
test("dileguandosi -> dilegu", function() {deepEqual( Stem("dileguandosi"), "dilegu");});
test("dileguata -> dilegu", function() {deepEqual( Stem("dileguata"), "dilegu");});
test("dileguate -> dilegu", function() {deepEqual( Stem("dileguate"), "dilegu");});
test("dileguati -> dilegu", function() {deepEqual( Stem("dileguati"), "dilegu");});
test("dileguavano -> dilegu", function() {deepEqual( Stem("dileguavano"), "dilegu");});
test("dilemma -> dilemm", function() {deepEqual( Stem("dilemma"), "dilemm");});
test("diletta -> dilett", function() {deepEqual( Stem("diletta"), "dilett");});
test("dilettante -> dilett", function() {deepEqual( Stem("dilettante"), "dilett");});
test("dilettanti -> dilett", function() {deepEqual( Stem("dilettanti"), "dilett");});
test("dilettava -> dilett", function() {deepEqual( Stem("dilettava"), "dilett");});
test("dilettevole -> dilettevol", function() {deepEqual( Stem("dilettevole"), "dilettevol");});
test("diligente -> diligent", function() {deepEqual( Stem("diligente"), "diligent");});
test("diligentemente -> diligent", function() {deepEqual( Stem("diligentemente"), "diligent");});
test("diligenter -> diligenter", function() {deepEqual( Stem("diligenter"), "diligenter");});
test("diligentia -> diligent", function() {deepEqual( Stem("diligentia"), "diligent");});
test("diligentissimamente -> diligentissim", function() {deepEqual( Stem("diligentissimamente"), "diligentissim");});
test("diligenza -> diligent", function() {deepEqual( Stem("diligenza"), "diligent");});
test("diligenze -> diligent", function() {deepEqual( Stem("diligenze"), "diligent");});
test("dille -> dill", function() {deepEqual( Stem("dille"), "dill");});
test("dilucidare -> dilucid", function() {deepEqual( Stem("dilucidare"), "dilucid");});
test("diluire -> dilu", function() {deepEqual( Stem("diluire"), "dilu");});
test("diluviavano -> diluv", function() {deepEqual( Stem("diluviavano"), "diluv");});
test("diluvio -> diluv", function() {deepEqual( Stem("diluvio"), "diluv");});
test("dimagrante -> dimagr", function() {deepEqual( Stem("dimagrante"), "dimagr");});
test("dimenando -> dimen", function() {deepEqual( Stem("dimenando"), "dimen");});
test("dimenare -> dimen", function() {deepEqual( Stem("dimenare"), "dimen");});
test("dimenarsi -> dimen", function() {deepEqual( Stem("dimenarsi"), "dimen");});
test("dimenasse -> dimen", function() {deepEqual( Stem("dimenasse"), "dimen");});
test("dimenava -> dimen", function() {deepEqual( Stem("dimenava"), "dimen");});
test("dimenò -> dimen", function() {deepEqual( Stem("dimenò"), "dimen");});
test("dimensione -> dimension", function() {deepEqual( Stem("dimensione"), "dimension");});
test("dimensioni -> dimension", function() {deepEqual( Stem("dimensioni"), "dimension");});
test("dimentica -> diment", function() {deepEqual( Stem("dimentica"), "diment");});
test("dimenticando -> dimentic", function() {deepEqual( Stem("dimenticando"), "dimentic");});
test("dimenticanza -> dimentic", function() {deepEqual( Stem("dimenticanza"), "dimentic");});
test("dimenticare -> dimentic", function() {deepEqual( Stem("dimenticare"), "dimentic");});
test("dimenticarla -> dimentic", function() {deepEqual( Stem("dimenticarla"), "dimentic");});
test("dimenticarli -> dimentic", function() {deepEqual( Stem("dimenticarli"), "dimentic");});
test("dimenticarmi -> dimentic", function() {deepEqual( Stem("dimenticarmi"), "dimentic");});
test("dimenticarsi -> dimentic", function() {deepEqual( Stem("dimenticarsi"), "dimentic");});
test("dimenticarvi -> dimentic", function() {deepEqual( Stem("dimenticarvi"), "dimentic");});
test("dimenticasse -> dimentic", function() {deepEqual( Stem("dimenticasse"), "dimentic");});
test("dimenticata -> dimentic", function() {deepEqual( Stem("dimenticata"), "dimentic");});
test("dimenticate -> dimentic", function() {deepEqual( Stem("dimenticate"), "dimentic");});
test("dimenticatevi -> dimenticat", function() {deepEqual( Stem("dimenticatevi"), "dimenticat");});
test("dimenticati -> dimentic", function() {deepEqual( Stem("dimenticati"), "dimentic");});
test("dimenticato -> dimentic", function() {deepEqual( Stem("dimenticato"), "dimentic");});
test("dimenticava -> dimentic", function() {deepEqual( Stem("dimenticava"), "dimentic");});
test("dimenticavo -> dimentic", function() {deepEqual( Stem("dimenticavo"), "dimentic");});
test("dimenticherebbe -> dimentic", function() {deepEqual( Stem("dimenticherebbe"), "dimentic");});
test("dimentichi -> diment", function() {deepEqual( Stem("dimentichi"), "diment");});
test("dimentichiamo -> dimentic", function() {deepEqual( Stem("dimentichiamo"), "dimentic");});
test("dimenticò -> dimentic", function() {deepEqual( Stem("dimenticò"), "dimentic");});
test("dimessa -> dimess", function() {deepEqual( Stem("dimessa"), "dimess");});
test("dimesso -> dimess", function() {deepEqual( Stem("dimesso"), "dimess");});
test("dimestichezza -> dimestichezz", function() {deepEqual( Stem("dimestichezza"), "dimestichezz");});
test("dimette -> dimett", function() {deepEqual( Stem("dimette"), "dimett");});
test("dimettendosi -> dimett", function() {deepEqual( Stem("dimettendosi"), "dimett");});
test("dimetterà -> dimett", function() {deepEqual( Stem("dimetterà"), "dimett");});
test("dimettersi -> dimett", function() {deepEqual( Stem("dimettersi"), "dimett");});
test("dimezzamento -> dimezz", function() {deepEqual( Stem("dimezzamento"), "dimezz");});
test("dimezzato -> dimezz", function() {deepEqual( Stem("dimezzato"), "dimezz");});
test("diminuire -> diminu", function() {deepEqual( Stem("diminuire"), "diminu");});
test("diminuisce -> diminu", function() {deepEqual( Stem("diminuisce"), "diminu");});
test("diminuissero -> diminu", function() {deepEqual( Stem("diminuissero"), "diminu");});
test("diminuita -> diminu", function() {deepEqual( Stem("diminuita"), "diminu");});
test("diminuite -> diminu", function() {deepEqual( Stem("diminuite"), "diminu");});
test("diminuiti -> diminu", function() {deepEqual( Stem("diminuiti"), "diminu");});
test("diminuivano -> diminu", function() {deepEqual( Stem("diminuivano"), "diminu");});
test("diminuzione -> diminu", function() {deepEqual( Stem("diminuzione"), "diminu");});
test("dimissionario -> dimissionar", function() {deepEqual( Stem("dimissionario"), "dimissionar");});
test("dimissioni -> dimission", function() {deepEqual( Stem("dimissioni"), "dimission");});
test("dimitri -> dimitr", function() {deepEqual( Stem("dimitri"), "dimitr");});
test("dimmi -> dimm", function() {deepEqual( Stem("dimmi"), "dimm");});
test("dimodoche -> dimodoc", function() {deepEqual( Stem("dimodoche"), "dimodoc");});
test("dimodoché -> dimodoc", function() {deepEqual( Stem("dimodoché"), "dimodoc");});
test("dimora -> dimor", function() {deepEqual( Stem("dimora"), "dimor");});
test("dimorar -> dimor", function() {deepEqual( Stem("dimorar"), "dimor");});
test("dimorare -> dimor", function() {deepEqual( Stem("dimorare"), "dimor");});
test("dimorato -> dimor", function() {deepEqual( Stem("dimorato"), "dimor");});
test("dimororno -> dimororn", function() {deepEqual( Stem("dimororno"), "dimororn");});
test("dimostra -> dimostr", function() {deepEqual( Stem("dimostra"), "dimostr");});
test("dimostran -> dimostran", function() {deepEqual( Stem("dimostran"), "dimostran");});
test("dimostrando -> dimostr", function() {deepEqual( Stem("dimostrando"), "dimostr");});
test("dimostrano -> dimostr", function() {deepEqual( Stem("dimostrano"), "dimostr");});
test("dimostrar -> dimostr", function() {deepEqual( Stem("dimostrar"), "dimostr");});
test("dimostrare -> dimostr", function() {deepEqual( Stem("dimostrare"), "dimostr");});
test("dimostrargli -> dimostr", function() {deepEqual( Stem("dimostrargli"), "dimostr");});
test("dimostrata -> dimostr", function() {deepEqual( Stem("dimostrata"), "dimostr");});
test("dimostrato -> dimostr", function() {deepEqual( Stem("dimostrato"), "dimostr");});
test("dimostrava -> dimostr", function() {deepEqual( Stem("dimostrava"), "dimostr");});
test("dimostrazione -> dimostr", function() {deepEqual( Stem("dimostrazione"), "dimostr");});
test("dimostrazioni -> dimostr", function() {deepEqual( Stem("dimostrazioni"), "dimostr");});
test("dimostrino -> dimostrin", function() {deepEqual( Stem("dimostrino"), "dimostrin");});
test("dimostrò -> dimostr", function() {deepEqual( Stem("dimostrò"), "dimostr");});
test("din -> din", function() {deepEqual( Stem("din"), "din");});
test("dina -> din", function() {deepEqual( Stem("dina"), "din");});
test("dinacci -> dinacc", function() {deepEqual( Stem("dinacci"), "dinacc");});
test("dinamica -> dinam", function() {deepEqual( Stem("dinamica"), "dinam");});
test("dinamiche -> dinam", function() {deepEqual( Stem("dinamiche"), "dinam");});
test("dinamico -> dinam", function() {deepEqual( Stem("dinamico"), "dinam");});
test("dinamismo -> dinam", function() {deepEqual( Stem("dinamismo"), "dinam");});
test("dinamitardo -> dinamitard", function() {deepEqual( Stem("dinamitardo"), "dinamitard");});
test("dinanzi -> dinanz", function() {deepEqual( Stem("dinanzi"), "dinanz");});
test("dinastia -> dinast", function() {deepEqual( Stem("dinastia"), "dinast");});
test("dinelli -> dinell", function() {deepEqual( Stem("dinelli"), "dinell");});
test("dini -> din", function() {deepEqual( Stem("dini"), "din");});
test("dinka -> dink", function() {deepEqual( Stem("dinka"), "dink");});
test("dinnanzi -> dinnanz", function() {deepEqual( Stem("dinnanzi"), "dinnanz");});
test("dino -> din", function() {deepEqual( Stem("dino"), "din");});
test("dintorni -> dintorn", function() {deepEqual( Stem("dintorni"), "dintorn");});
test("dio -> dio", function() {deepEqual( Stem("dio"), "dio");});
test("diocesane -> diocesan", function() {deepEqual( Stem("diocesane"), "diocesan");});
test("diocesani -> diocesan", function() {deepEqual( Stem("diocesani"), "diocesan");});
test("diocesi -> dioces", function() {deepEqual( Stem("diocesi"), "dioces");});
test("diogene -> diogen", function() {deepEqual( Stem("diogene"), "diogen");});
test("dione -> dion", function() {deepEqual( Stem("dione"), "dion");});
test("dionigi -> dionig", function() {deepEqual( Stem("dionigi"), "dionig");});
test("dios -> dios", function() {deepEqual( Stem("dios"), "dios");});
test("dipaneranno -> dipan", function() {deepEqual( Stem("dipaneranno"), "dipan");});
test("dipartimenti -> dipart", function() {deepEqual( Stem("dipartimenti"), "dipart");});
test("dipartimento -> dipart", function() {deepEqual( Stem("dipartimento"), "dipart");});
test("dipende -> dip", function() {deepEqual( Stem("dipende"), "dip");});
test("dipendente -> dipendent", function() {deepEqual( Stem("dipendente"), "dipendent");});
test("dipendenti -> dipendent", function() {deepEqual( Stem("dipendenti"), "dipendent");});
test("dipendenza -> dipendent", function() {deepEqual( Stem("dipendenza"), "dipendent");});
test("dipendenze -> dipendent", function() {deepEqual( Stem("dipendenze"), "dipendent");});
test("dipenderà -> dipend", function() {deepEqual( Stem("dipenderà"), "dipend");});
test("dipendere -> dipend", function() {deepEqual( Stem("dipendere"), "dipend");});
test("dipenderebbero -> dipend", function() {deepEqual( Stem("dipenderebbero"), "dipend");});
test("dipendesse -> dipendess", function() {deepEqual( Stem("dipendesse"), "dipendess");});
test("dipendeva -> dipend", function() {deepEqual( Stem("dipendeva"), "dipend");});
test("dipendevano -> dipend", function() {deepEqual( Stem("dipendevano"), "dipend");});
test("dipendiamo -> dipend", function() {deepEqual( Stem("dipendiamo"), "dipend");});
test("dipinge -> diping", function() {deepEqual( Stem("dipinge"), "diping");});
test("dipinger -> dipinger", function() {deepEqual( Stem("dipinger"), "dipinger");});
test("dipingere -> diping", function() {deepEqual( Stem("dipingere"), "diping");});
test("dipingerlo -> diping", function() {deepEqual( Stem("dipingerlo"), "diping");});
test("dipingeva -> diping", function() {deepEqual( Stem("dipingeva"), "diping");});
test("dipingevan -> dipingevan", function() {deepEqual( Stem("dipingevan"), "dipingevan");});
test("dipingono -> diping", function() {deepEqual( Stem("dipingono"), "diping");});
test("dipinta -> dipint", function() {deepEqual( Stem("dipinta"), "dipint");});
test("dipintavi -> dipint", function() {deepEqual( Stem("dipintavi"), "dipint");});
test("dipinte -> dipint", function() {deepEqual( Stem("dipinte"), "dipint");});
test("dipinto -> dipint", function() {deepEqual( Stem("dipinto"), "dipint");});
test("dipintogli -> dipintogl", function() {deepEqual( Stem("dipintogli"), "dipintogl");});
test("diploma -> diplom", function() {deepEqual( Stem("diploma"), "diplom");});
test("diplomatica -> diplomat", function() {deepEqual( Stem("diplomatica"), "diplomat");});
test("diplomatiche -> diplomat", function() {deepEqual( Stem("diplomatiche"), "diplomat");});
test("diplomatici -> diplomat", function() {deepEqual( Stem("diplomatici"), "diplomat");});
test("diplomatico -> diplomat", function() {deepEqual( Stem("diplomatico"), "diplomat");});
test("diplomazia -> diplomaz", function() {deepEqual( Stem("diplomazia"), "diplomaz");});
test("diplomazie -> diplomaz", function() {deepEqual( Stem("diplomazie"), "diplomaz");});
test("diportista -> diport", function() {deepEqual( Stem("diportista"), "diport");});
test("diporto -> diport", function() {deepEqual( Stem("diporto"), "diport");});
test("dipresso -> dipress", function() {deepEqual( Stem("dipresso"), "dipress");});
test("dir -> dir", function() {deepEqual( Stem("dir"), "dir");});
test("dirà -> dir", function() {deepEqual( Stem("dirà"), "dir");});
test("diradar -> dirad", function() {deepEqual( Stem("diradar"), "dirad");});
test("diradata -> dirad", function() {deepEqual( Stem("diradata"), "dirad");});
test("diramando -> diram", function() {deepEqual( Stem("diramando"), "diram");});
test("diramarsi -> diram", function() {deepEqual( Stem("diramarsi"), "diram");});
test("diramata -> diram", function() {deepEqual( Stem("diramata"), "diram");});
test("diramate -> diram", function() {deepEqual( Stem("diramate"), "diram");});
test("diramato -> diram", function() {deepEqual( Stem("diramato"), "diram");});
test("diranno -> dirann", function() {deepEqual( Stem("diranno"), "dirann");});
test("dirci -> dirc", function() {deepEqual( Stem("dirci"), "dirc");});
test("dire -> dir", function() {deepEqual( Stem("dire"), "dir");});
test("direbbe -> direbb", function() {deepEqual( Stem("direbbe"), "direbb");});
test("direbbeciò -> direbbec", function() {deepEqual( Stem("direbbeciò"), "direbbec");});
test("directa -> direct", function() {deepEqual( Stem("directa"), "direct");});
test("director -> director", function() {deepEqual( Stem("director"), "director");});
test("direi -> dire", function() {deepEqual( Stem("direi"), "dire");});
test("diremo -> direm", function() {deepEqual( Stem("diremo"), "direm");});
test("direte -> dir", function() {deepEqual( Stem("direte"), "dir");});
test("diretta -> dirett", function() {deepEqual( Stem("diretta"), "dirett");});
test("direttamente -> dirett", function() {deepEqual( Stem("direttamente"), "dirett");});
test("direttaq -> direttaq", function() {deepEqual( Stem("direttaq"), "direttaq");});
test("dirette -> dirett", function() {deepEqual( Stem("dirette"), "dirett");});
test("diretti -> dirett", function() {deepEqual( Stem("diretti"), "dirett");});
test("direttissima -> direttissim", function() {deepEqual( Stem("direttissima"), "direttissim");});
test("direttiva -> dirett", function() {deepEqual( Stem("direttiva"), "dirett");});
test("direttive -> dirett", function() {deepEqual( Stem("direttive"), "dirett");});
test("direttivo -> dirett", function() {deepEqual( Stem("direttivo"), "dirett");});
test("diretto -> dirett", function() {deepEqual( Stem("diretto"), "dirett");});
test("direttore -> direttor", function() {deepEqual( Stem("direttore"), "direttor");});
test("direttori -> direttor", function() {deepEqual( Stem("direttori"), "direttor");});
test("direttrici -> direttr", function() {deepEqual( Stem("direttrici"), "direttr");});
test("direzione -> direzion", function() {deepEqual( Stem("direzione"), "direzion");});
test("direzioni -> direzion", function() {deepEqual( Stem("direzioni"), "direzion");});
test("dirgli -> dirgl", function() {deepEqual( Stem("dirgli"), "dirgl");});
test("diricciar -> diricc", function() {deepEqual( Stem("diricciar"), "diricc");});
test("dirige -> dirig", function() {deepEqual( Stem("dirige"), "dirig");});
test("dirigente -> dirigent", function() {deepEqual( Stem("dirigente"), "dirigent");});
test("dirigenti -> dirigent", function() {deepEqual( Stem("dirigenti"), "dirigent");});
test("dirigenza -> dirigent", function() {deepEqual( Stem("dirigenza"), "dirigent");});
test("dirigenziali -> dirigenzial", function() {deepEqual( Stem("dirigenziali"), "dirigenzial");});
test("dirigere -> dirig", function() {deepEqual( Stem("dirigere"), "dirig");});
test("dirigerlo -> dirig", function() {deepEqual( Stem("dirigerlo"), "dirig");});
test("dirigeva -> dirig", function() {deepEqual( Stem("dirigeva"), "dirig");});
test("dirigevano -> dirig", function() {deepEqual( Stem("dirigevano"), "dirig");});
test("dirigista -> dirig", function() {deepEqual( Stem("dirigista"), "dirig");});
test("dirigistica -> dirigist", function() {deepEqual( Stem("dirigistica"), "dirigist");});
test("dirigono -> dirig", function() {deepEqual( Stem("dirigono"), "dirig");});
test("dirimenti -> dir", function() {deepEqual( Stem("dirimenti"), "dir");});
test("dirimpetto -> dirimpett", function() {deepEqual( Stem("dirimpetto"), "dirimpett");});
test("diritta -> diritt", function() {deepEqual( Stem("diritta"), "diritt");});
test("diritte -> diritt", function() {deepEqual( Stem("diritte"), "diritt");});
test("diritti -> diritt", function() {deepEqual( Stem("diritti"), "diritt");});
test("diritto -> diritt", function() {deepEqual( Stem("diritto"), "diritt");});
test("dirittona -> diritton", function() {deepEqual( Stem("dirittona"), "diritton");});
test("dirittone -> diritton", function() {deepEqual( Stem("dirittone"), "diritton");});
test("dirizza -> dirizz", function() {deepEqual( Stem("dirizza"), "dirizz");});
test("dirizzando -> dirizz", function() {deepEqual( Stem("dirizzando"), "dirizz");});
test("dirizzatura -> dirizzatur", function() {deepEqual( Stem("dirizzatura"), "dirizzatur");});
test("dirla -> dirl", function() {deepEqual( Stem("dirla"), "dirl");});
test("dirle -> dirl", function() {deepEqual( Stem("dirle"), "dirl");});
test("dirlo -> dirl", function() {deepEqual( Stem("dirlo"), "dirl");});
test("dirmela -> dirmel", function() {deepEqual( Stem("dirmela"), "dirmel");});
test("dirmele -> dirmel", function() {deepEqual( Stem("dirmele"), "dirmel");});
test("dirmi -> dirm", function() {deepEqual( Stem("dirmi"), "dirm");});
test("dirne -> dirn", function() {deepEqual( Stem("dirne"), "dirn");});
test("dirò -> dir", function() {deepEqual( Stem("dirò"), "dir");});
test("diroccata -> dirocc", function() {deepEqual( Stem("diroccata"), "dirocc");});
test("diroccato -> dirocc", function() {deepEqual( Stem("diroccato"), "dirocc");});
test("diroccavano -> dirocc", function() {deepEqual( Stem("diroccavano"), "dirocc");});
test("dirottamente -> dirott", function() {deepEqual( Stem("dirottamente"), "dirott");});
test("dirotto -> dirott", function() {deepEqual( Stem("dirotto"), "dirott");});
test("dirsi -> dirs", function() {deepEqual( Stem("dirsi"), "dirs");});
test("dirtela -> dirtel", function() {deepEqual( Stem("dirtela"), "dirtel");});
test("dirti -> dirt", function() {deepEqual( Stem("dirti"), "dirt");});
test("dirupi -> dirup", function() {deepEqual( Stem("dirupi"), "dirup");});
test("dirupo -> dirup", function() {deepEqual( Stem("dirupo"), "dirup");});
test("dirvelo -> dirvel", function() {deepEqual( Stem("dirvelo"), "dirvel");});
test("dirvene -> dirven", function() {deepEqual( Stem("dirvene"), "dirven");});
test("dirvi -> dirv", function() {deepEqual( Stem("dirvi"), "dirv");});
test("disabbelliscono -> disabbell", function() {deepEqual( Stem("disabbelliscono"), "disabbell");});
test("disabitata -> disabit", function() {deepEqual( Stem("disabitata"), "disabit");});
test("disabitate -> disabit", function() {deepEqual( Stem("disabitate"), "disabit");});
test("disabitato -> disabit", function() {deepEqual( Stem("disabitato"), "disabit");});
test("disaccordo -> disaccord", function() {deepEqual( Stem("disaccordo"), "disaccord");});
test("disaggregare -> disaggreg", function() {deepEqual( Stem("disaggregare"), "disaggreg");});
test("disagi -> disag", function() {deepEqual( Stem("disagi"), "disag");});
test("disagiata -> disag", function() {deepEqual( Stem("disagiata"), "disag");});
test("disagiati -> disag", function() {deepEqual( Stem("disagiati"), "disag");});
test("disagio -> disag", function() {deepEqual( Stem("disagio"), "disag");});
test("disanimati -> disanim", function() {deepEqual( Stem("disanimati"), "disanim");});
test("disanimato -> disanim", function() {deepEqual( Stem("disanimato"), "disanim");});
test("disapprovare -> disapprov", function() {deepEqual( Stem("disapprovare"), "disapprov");});
test("disapprovazione -> disapprov", function() {deepEqual( Stem("disapprovazione"), "disapprov");});
test("disappunto -> disappunt", function() {deepEqual( Stem("disappunto"), "disappunt");});
test("disarcionato -> disarcion", function() {deepEqual( Stem("disarcionato"), "disarcion");});
test("disarma -> disarm", function() {deepEqual( Stem("disarma"), "disarm");});
test("disarmare -> disarm", function() {deepEqual( Stem("disarmare"), "disarm");});
test("disarmata -> disarm", function() {deepEqual( Stem("disarmata"), "disarm");});
test("disarmate -> disarm", function() {deepEqual( Stem("disarmate"), "disarm");});
test("disarmato -> disarm", function() {deepEqual( Stem("disarmato"), "disarm");});
test("disarmonia -> disarmon", function() {deepEqual( Stem("disarmonia"), "disarmon");});
test("disastro -> disastr", function() {deepEqual( Stem("disastro"), "disastr");});
test("disastrosa -> disastr", function() {deepEqual( Stem("disastrosa"), "disastr");});
test("disastrosi -> disastr", function() {deepEqual( Stem("disastrosi"), "disastr");});
test("disastroso -> disastr", function() {deepEqual( Stem("disastroso"), "disastr");});
test("disattenta -> disattent", function() {deepEqual( Stem("disattenta"), "disattent");});
test("disattento -> disattent", function() {deepEqual( Stem("disattento"), "disattent");});
test("disattivando -> disattiv", function() {deepEqual( Stem("disattivando"), "disattiv");});
test("disavanzi -> disavanz", function() {deepEqual( Stem("disavanzi"), "disavanz");});
test("disavventura -> disavventur", function() {deepEqual( Stem("disavventura"), "disavventur");});
test("discacciar -> discacc", function() {deepEqual( Stem("discacciar"), "discacc");});
test("discacciarle -> discacc", function() {deepEqual( Stem("discacciarle"), "discacc");});
test("discacciarlo -> discacc", function() {deepEqual( Stem("discacciarlo"), "discacc");});
test("discariche -> discar", function() {deepEqual( Stem("discariche"), "discar");});
test("discende -> disc", function() {deepEqual( Stem("discende"), "disc");});
test("discerna -> discern", function() {deepEqual( Stem("discerna"), "discern");});
test("discesa -> disces", function() {deepEqual( Stem("discesa"), "disces");});
test("discesero -> disceser", function() {deepEqual( Stem("discesero"), "disceser");});
test("discettando -> discett", function() {deepEqual( Stem("discettando"), "discett");});
test("dischetto -> dischett", function() {deepEqual( Stem("dischetto"), "dischett");});
test("disciolto -> disciolt", function() {deepEqual( Stem("disciolto"), "disciolt");});
test("disciplina -> disciplin", function() {deepEqual( Stem("disciplina"), "disciplin");});
test("disciplinare -> disciplin", function() {deepEqual( Stem("disciplinare"), "disciplin");});
test("disciplinari -> disciplinar", function() {deepEqual( Stem("disciplinari"), "disciplinar");});
test("disco -> disc", function() {deepEqual( Stem("disco"), "disc");});
test("discografici -> discograf", function() {deepEqual( Stem("discografici"), "discograf");});
test("discordanti -> discord", function() {deepEqual( Stem("discordanti"), "discord");});
test("discordi -> discord", function() {deepEqual( Stem("discordi"), "discord");});
test("discordie -> discord", function() {deepEqual( Stem("discordie"), "discord");});
test("discorre -> discorr", function() {deepEqual( Stem("discorre"), "discorr");});
test("discorrendo -> discorr", function() {deepEqual( Stem("discorrendo"), "discorr");});
test("discorrere -> discorr", function() {deepEqual( Stem("discorrere"), "discorr");});
test("discorreremo -> discorr", function() {deepEqual( Stem("discorreremo"), "discorr");});
test("discorrerne -> discorr", function() {deepEqual( Stem("discorrerne"), "discorr");});
test("discorrerti -> discorr", function() {deepEqual( Stem("discorrerti"), "discorr");});
test("discorreva -> discorr", function() {deepEqual( Stem("discorreva"), "discorr");});
test("discorrevan -> discorrevan", function() {deepEqual( Stem("discorrevan"), "discorrevan");});
test("discorrevo -> discorr", function() {deepEqual( Stem("discorrevo"), "discorr");});
test("discorsi -> discors", function() {deepEqual( Stem("discorsi"), "discors");});
test("discorso -> discors", function() {deepEqual( Stem("discorso"), "discors");});
test("discoste -> discost", function() {deepEqual( Stem("discoste"), "discost");});
test("discosto -> discost", function() {deepEqual( Stem("discosto"), "discost");});
test("discostò -> discost", function() {deepEqual( Stem("discostò"), "discost");});
test("discovery -> discovery", function() {deepEqual( Stem("discovery"), "discovery");});
test("discreta -> discret", function() {deepEqual( Stem("discreta"), "discret");});
test("discrete -> discr", function() {deepEqual( Stem("discrete"), "discr");});
test("discreti -> discret", function() {deepEqual( Stem("discreti"), "discret");});
test("discreto -> discret", function() {deepEqual( Stem("discreto"), "discret");});
test("discrezion -> discrezion", function() {deepEqual( Stem("discrezion"), "discrezion");});
test("discrezione -> discrezion", function() {deepEqual( Stem("discrezione"), "discrezion");});
test("discriminata -> discrimin", function() {deepEqual( Stem("discriminata"), "discrimin");});
test("discriminato -> discrimin", function() {deepEqual( Stem("discriminato"), "discrimin");});
test("discriminazione -> discrimin", function() {deepEqual( Stem("discriminazione"), "discrimin");});
test("discriminazioni -> discrimin", function() {deepEqual( Stem("discriminazioni"), "discrimin");});
test("discuetrà -> discuetr", function() {deepEqual( Stem("discuetrà"), "discuetr");});
test("discussa -> discuss", function() {deepEqual( Stem("discussa"), "discuss");});
test("discusse -> discuss", function() {deepEqual( Stem("discusse"), "discuss");});
test("discussi -> discuss", function() {deepEqual( Stem("discussi"), "discuss");});
test("discussione -> discussion", function() {deepEqual( Stem("discussione"), "discussion");});
test("discussioni -> discussion", function() {deepEqual( Stem("discussioni"), "discussion");});
test("discusso -> discuss", function() {deepEqual( Stem("discusso"), "discuss");});
test("discute -> disc", function() {deepEqual( Stem("discute"), "disc");});
test("discutendo -> discut", function() {deepEqual( Stem("discutendo"), "discut");});
test("discuter -> discuter", function() {deepEqual( Stem("discuter"), "discuter");});
test("discuterà -> discut", function() {deepEqual( Stem("discuterà"), "discut");});
test("discuteranno -> discut", function() {deepEqual( Stem("discuteranno"), "discut");});
test("discutere -> discut", function() {deepEqual( Stem("discutere"), "discut");});
test("discutibile -> discut", function() {deepEqual( Stem("discutibile"), "discut");});
test("disdirebbero -> disd", function() {deepEqual( Stem("disdirebbero"), "disd");});
test("disdirsi -> disd", function() {deepEqual( Stem("disdirsi"), "disd");});
test("disegna -> disegn", function() {deepEqual( Stem("disegna"), "disegn");});
test("disegnare -> disegn", function() {deepEqual( Stem("disegnare"), "disegn");});
test("disegnarè -> disegnar", function() {deepEqual( Stem("disegnarè"), "disegnar");});
test("disegnata -> disegn", function() {deepEqual( Stem("disegnata"), "disegn");});
test("disegnato -> disegn", function() {deepEqual( Stem("disegnato"), "disegn");});
test("disegnava -> disegn", function() {deepEqual( Stem("disegnava"), "disegn");});
test("disegni -> disegn", function() {deepEqual( Stem("disegni"), "disegn");});
test("disegno -> disegn", function() {deepEqual( Stem("disegno"), "disegn");});
test("disegnò -> disegn", function() {deepEqual( Stem("disegnò"), "disegn");});
test("disequilibrata -> disequilibr", function() {deepEqual( Stem("disequilibrata"), "disequilibr");});
test("diserta -> disert", function() {deepEqual( Stem("diserta"), "disert");});
test("disfaceva -> disfac", function() {deepEqual( Stem("disfaceva"), "disfac");});
test("disfar -> disf", function() {deepEqual( Stem("disfar"), "disf");});
test("disfare -> disf", function() {deepEqual( Stem("disfare"), "disf");});
test("disfarsi -> disf", function() {deepEqual( Stem("disfarsi"), "disf");});
test("disfatta -> disfatt", function() {deepEqual( Stem("disfatta"), "disfatt");});
test("disfatte -> disfatt", function() {deepEqual( Stem("disfatte"), "disfatt");});
test("disfatto -> disfatt", function() {deepEqual( Stem("disfatto"), "disfatt");});
test("disgiunte -> disgiunt", function() {deepEqual( Stem("disgiunte"), "disgiunt");});
test("disgrazia -> disgraz", function() {deepEqual( Stem("disgrazia"), "disgraz");});
test("disgraziati -> disgraz", function() {deepEqual( Stem("disgraziati"), "disgraz");});
test("disgraziato -> disgraz", function() {deepEqual( Stem("disgraziato"), "disgraz");});
test("disgrazie -> disgraz", function() {deepEqual( Stem("disgrazie"), "disgraz");});
test("disgreganti -> disgreg", function() {deepEqual( Stem("disgreganti"), "disgreg");});
test("disgregare -> disgreg", function() {deepEqual( Stem("disgregare"), "disgreg");});
test("disgustati -> disgust", function() {deepEqual( Stem("disgustati"), "disgust");});
test("disgustato -> disgust", function() {deepEqual( Stem("disgustato"), "disgust");});
test("disgusti -> disgust", function() {deepEqual( Stem("disgusti"), "disgust");});
test("disgusto -> disgust", function() {deepEqual( Stem("disgusto"), "disgust");});
test("disgustosa -> disgust", function() {deepEqual( Stem("disgustosa"), "disgust");});
test("disgustoso -> disgust", function() {deepEqual( Stem("disgustoso"), "disgust");});
test("disillusione -> disillu", function() {deepEqual( Stem("disillusione"), "disillu");});
test("disimbrogliato -> disimbrogl", function() {deepEqual( Stem("disimbrogliato"), "disimbrogl");});
test("disimpegnarsene -> disimpegn", function() {deepEqual( Stem("disimpegnarsene"), "disimpegn");});
test("disimpegni -> disimpegn", function() {deepEqual( Stem("disimpegni"), "disimpegn");});
test("disimpegno -> disimpegn", function() {deepEqual( Stem("disimpegno"), "disimpegn");});
test("disingannato -> disingann", function() {deepEqual( Stem("disingannato"), "disingann");});
test("disingannò -> disingann", function() {deepEqual( Stem("disingannò"), "disingann");});
test("disinquinamento -> disinquin", function() {deepEqual( Stem("disinquinamento"), "disinquin");});
test("disinteressato -> disinteress", function() {deepEqual( Stem("disinteressato"), "disinteress");});
test("disinteresse -> disinteress", function() {deepEqual( Stem("disinteresse"), "disinteress");});
test("disinvolta -> disinvolt", function() {deepEqual( Stem("disinvolta"), "disinvolt");});
test("disinvolti -> disinvolt", function() {deepEqual( Stem("disinvolti"), "disinvolt");});
test("disinvolto -> disinvolt", function() {deepEqual( Stem("disinvolto"), "disinvolt");});
test("disinvoltura -> disinvoltur", function() {deepEqual( Stem("disinvoltura"), "disinvoltur");});
test("dislocare -> disloc", function() {deepEqual( Stem("dislocare"), "disloc");});
test("dislocati -> disloc", function() {deepEqual( Stem("dislocati"), "disloc");});
test("dislocazione -> disloc", function() {deepEqual( Stem("dislocazione"), "disloc");});
test("dismessa -> dismess", function() {deepEqual( Stem("dismessa"), "dismess");});
test("dismissione -> dismission", function() {deepEqual( Stem("dismissione"), "dismission");});
test("dismissioni -> dismission", function() {deepEqual( Stem("dismissioni"), "dismission");});
test("disoccupato -> disoccup", function() {deepEqual( Stem("disoccupato"), "disoccup");});
test("disoccupazione -> disoccup", function() {deepEqual( Stem("disoccupazione"), "disoccup");});
test("disonorare -> disonor", function() {deepEqual( Stem("disonorare"), "disonor");});
test("disordinare -> disordin", function() {deepEqual( Stem("disordinare"), "disordin");});
test("disordinata -> disordin", function() {deepEqual( Stem("disordinata"), "disordin");});
test("disordinati -> disordin", function() {deepEqual( Stem("disordinati"), "disordin");});
test("disordinato -> disordin", function() {deepEqual( Stem("disordinato"), "disordin");});
test("disordinava -> disordin", function() {deepEqual( Stem("disordinava"), "disordin");});
test("disordine -> disordin", function() {deepEqual( Stem("disordine"), "disordin");});
test("disordini -> disordin", function() {deepEqual( Stem("disordini"), "disordin");});
test("disorientamento -> disorient", function() {deepEqual( Stem("disorientamento"), "disorient");});
test("disotterrare -> disotterr", function() {deepEqual( Stem("disotterrare"), "disotterr");});
test("dispacci -> dispacc", function() {deepEqual( Stem("dispacci"), "dispacc");});
test("dispacciamento -> dispacc", function() {deepEqual( Stem("dispacciamento"), "dispacc");});
test("dispaccio -> dispacc", function() {deepEqual( Stem("dispaccio"), "dispacc");});
test("disparati -> dispar", function() {deepEqual( Stem("disparati"), "dispar");});
test("disparere -> dispar", function() {deepEqual( Stem("disparere"), "dispar");});
test("disparità -> dispar", function() {deepEqual( Stem("disparità"), "dispar");});
test("disparitas -> disparitas", function() {deepEqual( Stem("disparitas"), "disparitas");});
test("disparte -> dispart", function() {deepEqual( Stem("disparte"), "dispart");});
test("disparve -> disparv", function() {deepEqual( Stem("disparve"), "disparv");});
test("dispendio -> dispend", function() {deepEqual( Stem("dispendio"), "dispend");});
test("dispensa -> dispens", function() {deepEqual( Stem("dispensa"), "dispens");});
test("dispensando -> dispens", function() {deepEqual( Stem("dispensando"), "dispens");});
test("dispensarvi -> dispens", function() {deepEqual( Stem("dispensarvi"), "dispens");});
test("dispensasse -> dispens", function() {deepEqual( Stem("dispensasse"), "dispens");});
test("dispensati -> dispens", function() {deepEqual( Stem("dispensati"), "dispens");});
test("dispensatore -> dispens", function() {deepEqual( Stem("dispensatore"), "dispens");});
test("dispensavano -> dispens", function() {deepEqual( Stem("dispensavano"), "dispens");});
test("dispense -> dispens", function() {deepEqual( Stem("dispense"), "dispens");});
test("dispensi -> dispens", function() {deepEqual( Stem("dispensi"), "dispens");});
test("disperando -> disper", function() {deepEqual( Stem("disperando"), "disper");});
test("disperata -> disper", function() {deepEqual( Stem("disperata"), "disper");});
test("disperatamente -> disperat", function() {deepEqual( Stem("disperatamente"), "disperat");});
test("disperate -> disper", function() {deepEqual( Stem("disperate"), "disper");});
test("disperati -> disper", function() {deepEqual( Stem("disperati"), "disper");});
test("disperato -> disper", function() {deepEqual( Stem("disperato"), "disper");});
test("disperazione -> disper", function() {deepEqual( Stem("disperazione"), "disper");});
test("disperdere -> disperd", function() {deepEqual( Stem("disperdere"), "disperd");});
test("disperdersi -> disperd", function() {deepEqual( Stem("disperdersi"), "disperd");});
test("disperdesse -> disperdess", function() {deepEqual( Stem("disperdesse"), "disperdess");});
test("dispersa -> dispers", function() {deepEqual( Stem("dispersa"), "dispers");});
test("disperse -> dispers", function() {deepEqual( Stem("disperse"), "dispers");});
test("dispersi -> disp", function() {deepEqual( Stem("dispersi"), "disp");});
test("disperso -> dispers", function() {deepEqual( Stem("disperso"), "dispers");});
test("dispetti -> dispett", function() {deepEqual( Stem("dispetti"), "dispett");});
test("dispetto -> dispett", function() {deepEqual( Stem("dispetto"), "dispett");});
test("dispettoso -> dispett", function() {deepEqual( Stem("dispettoso"), "dispett");});
test("dispiaccia -> dispiacc", function() {deepEqual( Stem("dispiaccia"), "dispiacc");});
test("dispiace -> dispiac", function() {deepEqual( Stem("dispiace"), "dispiac");});
test("dispiacerà -> dispiac", function() {deepEqual( Stem("dispiacerà"), "dispiac");});
test("dispiacere -> dispiac", function() {deepEqual( Stem("dispiacere"), "dispiac");});
test("dispiacerebbe -> dispiac", function() {deepEqual( Stem("dispiacerebbe"), "dispiac");});
test("dispiacergli -> dispiac", function() {deepEqual( Stem("dispiacergli"), "dispiac");});
test("dispiaceri -> dispiacer", function() {deepEqual( Stem("dispiaceri"), "dispiacer");});
test("dispiacesse -> dispiacess", function() {deepEqual( Stem("dispiacesse"), "dispiacess");});
test("dispiaceva -> dispiac", function() {deepEqual( Stem("dispiaceva"), "dispiac");});
test("dispiacevole -> dispiacevol", function() {deepEqual( Stem("dispiacevole"), "dispiacevol");});
test("dispiaciuta -> dispiac", function() {deepEqual( Stem("dispiaciuta"), "dispiac");});
test("dispiaciuto -> dispiac", function() {deepEqual( Stem("dispiaciuto"), "dispiac");});
test("dispiacque -> dispiacqu", function() {deepEqual( Stem("dispiacque"), "dispiacqu");});
test("dispiegamenti -> dispieg", function() {deepEqual( Stem("dispiegamenti"), "dispieg");});
test("dispiegato -> dispieg", function() {deepEqual( Stem("dispiegato"), "dispieg");});
test("dispone -> dispon", function() {deepEqual( Stem("dispone"), "dispon");});
test("disponendoli -> dispon", function() {deepEqual( Stem("disponendoli"), "dispon");});
test("disponendosi -> dispon", function() {deepEqual( Stem("disponendosi"), "dispon");});
test("disponesse -> disponess", function() {deepEqual( Stem("disponesse"), "disponess");});
test("disponeva -> dispon", function() {deepEqual( Stem("disponeva"), "dispon");});
test("disponga -> dispong", function() {deepEqual( Stem("disponga"), "dispong");});
test("dispongono -> dispong", function() {deepEqual( Stem("dispongono"), "dispong");});
test("disponi -> dispon", function() {deepEqual( Stem("disponi"), "dispon");});
test("disponibile -> dispon", function() {deepEqual( Stem("disponibile"), "dispon");});
test("disponibili -> dispon", function() {deepEqual( Stem("disponibili"), "dispon");});
test("disponibilità -> disponibil", function() {deepEqual( Stem("disponibilità"), "disponibil");});
test("disponible -> disponibl", function() {deepEqual( Stem("disponible"), "disponibl");});
test("disporle -> disporl", function() {deepEqual( Stem("disporle"), "disporl");});
test("disporli -> disporl", function() {deepEqual( Stem("disporli"), "disporl");});
test("disporrà -> disporr", function() {deepEqual( Stem("disporrà"), "disporr");});
test("disporre -> disporr", function() {deepEqual( Stem("disporre"), "disporr");});
test("disporsi -> dispors", function() {deepEqual( Stem("disporsi"), "dispors");});
test("disporvi -> disporv", function() {deepEqual( Stem("disporvi"), "disporv");});
test("dispose -> dispos", function() {deepEqual( Stem("dispose"), "dispos");});
test("disposero -> disposer", function() {deepEqual( Stem("disposero"), "disposer");});
test("dispositivi -> disposit", function() {deepEqual( Stem("dispositivi"), "disposit");});
test("dispositivo -> disposit", function() {deepEqual( Stem("dispositivo"), "disposit");});
test("disposizion -> disposizion", function() {deepEqual( Stem("disposizion"), "disposizion");});
test("disposizione -> disposizion", function() {deepEqual( Stem("disposizione"), "disposizion");});
test("disposizioni -> disposizion", function() {deepEqual( Stem("disposizioni"), "disposizion");});
test("disposta -> dispost", function() {deepEqual( Stem("disposta"), "dispost");});
test("disposte -> dispost", function() {deepEqual( Stem("disposte"), "dispost");});
test("disposti -> dispost", function() {deepEqual( Stem("disposti"), "dispost");});
test("dispostivo -> dispost", function() {deepEqual( Stem("dispostivo"), "dispost");});
test("disposto -> dispost", function() {deepEqual( Stem("disposto"), "dispost");});
test("disprezzato -> disprezz", function() {deepEqual( Stem("disprezzato"), "disprezz");});
test("disprezzo -> disprezz", function() {deepEqual( Stem("disprezzo"), "disprezz");});
test("disputa -> disp", function() {deepEqual( Stem("disputa"), "disp");});
test("disputassero -> disput", function() {deepEqual( Stem("disputassero"), "disput");});
test("disputata -> disput", function() {deepEqual( Stem("disputata"), "disput");});
test("disputate -> disput", function() {deepEqual( Stem("disputate"), "disput");});
test("disputati -> disput", function() {deepEqual( Stem("disputati"), "disput");});
test("disputato -> disput", function() {deepEqual( Stem("disputato"), "disput");});
test("disputava -> disput", function() {deepEqual( Stem("disputava"), "disput");});
test("dispute -> disp", function() {deepEqual( Stem("dispute"), "disp");});
test("disputerà -> disput", function() {deepEqual( Stem("disputerà"), "disput");});
test("disputeranno -> disput", function() {deepEqual( Stem("disputeranno"), "disput");});
test("disquisizioni -> disquisizion", function() {deepEqual( Stem("disquisizioni"), "disquisizion");});
test("dissapunto -> dissapunt", function() {deepEqual( Stem("dissapunto"), "dissapunt");});
test("disse -> diss", function() {deepEqual( Stem("disse"), "diss");});
test("disselciato -> disselc", function() {deepEqual( Stem("disselciato"), "disselc");});
test("disseminato -> dissemin", function() {deepEqual( Stem("disseminato"), "dissemin");});
test("dissensi -> dissens", function() {deepEqual( Stem("dissensi"), "dissens");});
test("dissenso -> dissens", function() {deepEqual( Stem("dissenso"), "dissens");});
test("disseppellire -> disseppell", function() {deepEqual( Stem("disseppellire"), "disseppell");});
test("disser -> disser", function() {deepEqual( Stem("disser"), "disser");});
test("dissero -> disser", function() {deepEqual( Stem("dissero"), "disser");});
test("dissertazioni -> dissert", function() {deepEqual( Stem("dissertazioni"), "dissert");});
test("dissestato -> dissest", function() {deepEqual( Stem("dissestato"), "dissest");});
test("dissesto -> dissest", function() {deepEqual( Stem("dissesto"), "dissest");});
test("dissi -> diss", function() {deepEqual( Stem("dissi"), "diss");});
test("dissidente -> dissident", function() {deepEqual( Stem("dissidente"), "dissident");});
test("dissidenti -> dissident", function() {deepEqual( Stem("dissidenti"), "dissident");});
test("dissidenza -> dissident", function() {deepEqual( Stem("dissidenza"), "dissident");});
test("dissidio -> dissid", function() {deepEqual( Stem("dissidio"), "dissid");});
test("dissimulando -> dissimul", function() {deepEqual( Stem("dissimulando"), "dissimul");});
test("dissimulare -> dissimul", function() {deepEqual( Stem("dissimulare"), "dissimul");});
test("dissimulata -> dissimul", function() {deepEqual( Stem("dissimulata"), "dissimul");});
test("dissimulate -> dissimul", function() {deepEqual( Stem("dissimulate"), "dissimul");});
test("dissimulazione -> dissimul", function() {deepEqual( Stem("dissimulazione"), "dissimul");});
test("dissipare -> dissip", function() {deepEqual( Stem("dissipare"), "dissip");});
test("dissipata -> dissip", function() {deepEqual( Stem("dissipata"), "dissip");});
test("dissipato -> dissip", function() {deepEqual( Stem("dissipato"), "dissip");});
test("dissipò -> dissip", function() {deepEqual( Stem("dissipò"), "dissip");});
test("dissodava -> dissod", function() {deepEqual( Stem("dissodava"), "dissod");});
test("dissolvere -> dissolv", function() {deepEqual( Stem("dissolvere"), "dissolv");});
test("dissolverebbe -> dissolv", function() {deepEqual( Stem("dissolverebbe"), "dissolv");});
test("dissuaderlo -> dissuad", function() {deepEqual( Stem("dissuaderlo"), "dissuad");});
test("dista -> dist", function() {deepEqual( Stem("dista"), "dist");});
test("distaccarsi -> distacc", function() {deepEqual( Stem("distaccarsi"), "distacc");});
test("distaccata -> distacc", function() {deepEqual( Stem("distaccata"), "distacc");});
test("distacchi -> distacc", function() {deepEqual( Stem("distacchi"), "distacc");});
test("distacco -> distacc", function() {deepEqual( Stem("distacco"), "distacc");});
test("distante -> distant", function() {deepEqual( Stem("distante"), "distant");});
test("distanti -> distant", function() {deepEqual( Stem("distanti"), "distant");});
test("distanza -> distanz", function() {deepEqual( Stem("distanza"), "distanz");});
test("distanze -> distanz", function() {deepEqual( Stem("distanze"), "distanz");});
test("distendere -> distend", function() {deepEqual( Stem("distendere"), "distend");});
test("distendersi -> distend", function() {deepEqual( Stem("distendersi"), "distend");});
test("distesa -> distes", function() {deepEqual( Stem("distesa"), "distes");});
test("distesi -> distes", function() {deepEqual( Stem("distesi"), "distes");});
test("disteso -> distes", function() {deepEqual( Stem("disteso"), "distes");});
test("distillati -> distill", function() {deepEqual( Stem("distillati"), "distill");});
test("distingue -> distingu", function() {deepEqual( Stem("distingue"), "distingu");});
test("distinguendosi -> distingu", function() {deepEqual( Stem("distinguendosi"), "distingu");});
test("distinguer -> distinguer", function() {deepEqual( Stem("distinguer"), "distinguer");});
test("distinguere -> distingu", function() {deepEqual( Stem("distinguere"), "distingu");});
test("distingueva -> distingu", function() {deepEqual( Stem("distingueva"), "distingu");});
test("distinguevano -> distingu", function() {deepEqual( Stem("distinguevano"), "distingu");});
test("distinguo -> distingu", function() {deepEqual( Stem("distinguo"), "distingu");});
test("distinse -> distins", function() {deepEqual( Stem("distinse"), "distins");});
test("distinta -> distint", function() {deepEqual( Stem("distinta"), "distint");});
test("distintamente -> distint", function() {deepEqual( Stem("distintamente"), "distint");});
test("distinte -> distint", function() {deepEqual( Stem("distinte"), "distint");});
test("distinti -> distint", function() {deepEqual( Stem("distinti"), "distint");});
test("distintivi -> distint", function() {deepEqual( Stem("distintivi"), "distint");});
test("distintivo -> distint", function() {deepEqual( Stem("distintivo"), "distint");});
test("distinto -> distint", function() {deepEqual( Stem("distinto"), "distint");});
test("distinzion -> distinzion", function() {deepEqual( Stem("distinzion"), "distinzion");});
test("distinzione -> distinzion", function() {deepEqual( Stem("distinzione"), "distinzion");});
test("distinzioni -> distinzion", function() {deepEqual( Stem("distinzioni"), "distinzion");});
test("distizioni -> distizion", function() {deepEqual( Stem("distizioni"), "distizion");});
test("distorcono -> distorc", function() {deepEqual( Stem("distorcono"), "distorc");});
test("distorsione -> distorsion", function() {deepEqual( Stem("distorsione"), "distorsion");});
test("distorsioni -> distorsion", function() {deepEqual( Stem("distorsioni"), "distorsion");});
test("distorta -> distort", function() {deepEqual( Stem("distorta"), "distort");});
test("distraendola -> distr", function() {deepEqual( Stem("distraendola"), "distr");});
test("distrar -> distr", function() {deepEqual( Stem("distrar"), "distr");});
test("distrarre -> distrarr", function() {deepEqual( Stem("distrarre"), "distrarr");});
test("distratta -> distratt", function() {deepEqual( Stem("distratta"), "distratt");});
test("distratto -> distratt", function() {deepEqual( Stem("distratto"), "distratt");});
test("distrazione -> distrazion", function() {deepEqual( Stem("distrazione"), "distrazion");});
test("distrazioni -> distrazion", function() {deepEqual( Stem("distrazioni"), "distrazion");});
test("distretti -> distrett", function() {deepEqual( Stem("distretti"), "distrett");});
test("distretto -> distrett", function() {deepEqual( Stem("distretto"), "distrett");});
test("distrettuale -> distrettual", function() {deepEqual( Stem("distrettuale"), "distrettual");});
test("distribuì -> distribu", function() {deepEqual( Stem("distribuì"), "distribu");});
test("distribuirà -> distribu", function() {deepEqual( Stem("distribuirà"), "distribu");});
test("distribuire -> distribu", function() {deepEqual( Stem("distribuire"), "distribu");});
test("distribuirle -> distribu", function() {deepEqual( Stem("distribuirle"), "distribu");});
test("distribuirsi -> distribu", function() {deepEqual( Stem("distribuirsi"), "distribu");});
test("distribuisce -> distribu", function() {deepEqual( Stem("distribuisce"), "distribu");});
test("distribuisse -> distribuiss", function() {deepEqual( Stem("distribuisse"), "distribuiss");});
test("distribuita -> distribu", function() {deepEqual( Stem("distribuita"), "distribu");});
test("distribuite -> distribu", function() {deepEqual( Stem("distribuite"), "distribu");});
test("distribuiti -> distribu", function() {deepEqual( Stem("distribuiti"), "distribu");});
test("distribuito -> distribu", function() {deepEqual( Stem("distribuito"), "distribu");});
test("distribuiva -> distribu", function() {deepEqual( Stem("distribuiva"), "distribu");});
test("distribuivan -> distribuivan", function() {deepEqual( Stem("distribuivan"), "distribuivan");});
test("distribuivano -> distribu", function() {deepEqual( Stem("distribuivano"), "distribu");});
test("distributore -> distributor", function() {deepEqual( Stem("distributore"), "distributor");});
test("distributori -> distributor", function() {deepEqual( Stem("distributori"), "distributor");});
test("distributrici -> distributr", function() {deepEqual( Stem("distributrici"), "distributr");});
test("distribuzione -> distribu", function() {deepEqual( Stem("distribuzione"), "distribu");});
test("distrigare -> distrig", function() {deepEqual( Stem("distrigare"), "distrig");});
test("distrigarsi -> distrig", function() {deepEqual( Stem("distrigarsi"), "distrig");});
test("distrugge -> distrugg", function() {deepEqual( Stem("distrugge"), "distrugg");});
test("distrugger -> distrugger", function() {deepEqual( Stem("distrugger"), "distrugger");});
test("distruggerà -> distrugg", function() {deepEqual( Stem("distruggerà"), "distrugg");});
test("distruggersi -> distrugg", function() {deepEqual( Stem("distruggersi"), "distrugg");});
test("distruggevano -> distrugg", function() {deepEqual( Stem("distruggevano"), "distrugg");});
test("distrusse -> distruss", function() {deepEqual( Stem("distrusse"), "distruss");});
test("distrutta -> distrutt", function() {deepEqual( Stem("distrutta"), "distrutt");});
test("distrutti -> distrutt", function() {deepEqual( Stem("distrutti"), "distrutt");});
test("distruttiva -> distrutt", function() {deepEqual( Stem("distruttiva"), "distrutt");});
test("distruttive -> distrutt", function() {deepEqual( Stem("distruttive"), "distrutt");});
test("distrutto -> distrutt", function() {deepEqual( Stem("distrutto"), "distrutt");});
test("distruzion -> distruzion", function() {deepEqual( Stem("distruzion"), "distruzion");});
test("distruzione -> distruzion", function() {deepEqual( Stem("distruzione"), "distruzion");});
test("disturbar -> disturb", function() {deepEqual( Stem("disturbar"), "disturb");});
test("disturbare -> disturb", function() {deepEqual( Stem("disturbare"), "disturb");});
test("disturbarla -> disturb", function() {deepEqual( Stem("disturbarla"), "disturb");});
test("disturbarlo -> disturb", function() {deepEqual( Stem("disturbarlo"), "disturb");});
test("disturbata -> disturb", function() {deepEqual( Stem("disturbata"), "disturb");});
test("disturbate -> disturb", function() {deepEqual( Stem("disturbate"), "disturb");});
test("disturbato -> disturb", function() {deepEqual( Stem("disturbato"), "disturb");});
test("disturbo -> disturb", function() {deepEqual( Stem("disturbo"), "disturb");});
test("disubbidire -> disubbid", function() {deepEqual( Stem("disubbidire"), "disubbid");});
test("disuguale -> disugual", function() {deepEqual( Stem("disuguale"), "disugual");});
test("disuguali -> disugual", function() {deepEqual( Stem("disuguali"), "disugual");});
test("disumana -> disuman", function() {deepEqual( Stem("disumana"), "disuman");});
test("disuso -> disus", function() {deepEqual( Stem("disuso"), "disus");});
test("disviare -> disv", function() {deepEqual( Stem("disviare"), "disv");});
test("dita -> dit", function() {deepEqual( Stem("dita"), "dit");});
test("ditacci -> ditacc", function() {deepEqual( Stem("ditacci"), "ditacc");});
test("dite -> dit", function() {deepEqual( Stem("dite"), "dit");});
test("ditegli -> ditegl", function() {deepEqual( Stem("ditegli"), "ditegl");});
test("ditele -> ditel", function() {deepEqual( Stem("ditele"), "ditel");});
test("ditemelo -> ditemel", function() {deepEqual( Stem("ditemelo"), "ditemel");});
test("ditemi -> ditem", function() {deepEqual( Stem("ditemi"), "ditem");});
test("dito -> dit", function() {deepEqual( Stem("dito"), "dit");});
test("ditta -> ditt", function() {deepEqual( Stem("ditta"), "ditt");});
test("dittatore -> dittator", function() {deepEqual( Stem("dittatore"), "dittator");});
test("dittatori -> dittator", function() {deepEqual( Stem("dittatori"), "dittator");});
test("dittatura -> dittatur", function() {deepEqual( Stem("dittatura"), "dittatur");});
test("ditte -> ditt", function() {deepEqual( Stem("ditte"), "ditt");});
test("div -> div", function() {deepEqual( Stem("div"), "div");});
test("diva -> div", function() {deepEqual( Stem("diva"), "div");});
test("divani -> divan", function() {deepEqual( Stem("divani"), "divan");});
test("divaricate -> divaric", function() {deepEqual( Stem("divaricate"), "divaric");});
test("dive -> div", function() {deepEqual( Stem("dive"), "div");});
test("divelto -> divelt", function() {deepEqual( Stem("divelto"), "divelt");});
test("divenendo -> diven", function() {deepEqual( Stem("divenendo"), "diven");});
test("divenendogli -> diven", function() {deepEqual( Stem("divenendogli"), "diven");});
test("divengano -> diveng", function() {deepEqual( Stem("divengano"), "diveng");});
test("divengon -> divengon", function() {deepEqual( Stem("divengon"), "divengon");});
test("divenir -> diven", function() {deepEqual( Stem("divenir"), "diven");});
test("divenire -> diven", function() {deepEqual( Stem("divenire"), "diven");});
test("divenirgli -> diven", function() {deepEqual( Stem("divenirgli"), "diven");});
test("divenirlo -> diven", function() {deepEqual( Stem("divenirlo"), "diven");});
test("diveniva -> diven", function() {deepEqual( Stem("diveniva"), "diven");});
test("divenivan -> divenivan", function() {deepEqual( Stem("divenivan"), "divenivan");});
test("divenivano -> diven", function() {deepEqual( Stem("divenivano"), "diven");});
test("divenne -> divenn", function() {deepEqual( Stem("divenne"), "divenn");});
test("divennero -> divenner", function() {deepEqual( Stem("divennero"), "divenner");});
test("diventa -> divent", function() {deepEqual( Stem("diventa"), "divent");});
test("diventando -> divent", function() {deepEqual( Stem("diventando"), "divent");});
test("diventano -> divent", function() {deepEqual( Stem("diventano"), "divent");});
test("diventar -> divent", function() {deepEqual( Stem("diventar"), "divent");});
test("diventare -> divent", function() {deepEqual( Stem("diventare"), "divent");});
test("diventarne -> divent", function() {deepEqual( Stem("diventarne"), "divent");});
test("diventaron -> diventaron", function() {deepEqual( Stem("diventaron"), "diventaron");});
test("diventata -> divent", function() {deepEqual( Stem("diventata"), "divent");});
test("diventate -> divent", function() {deepEqual( Stem("diventate"), "divent");});
test("diventati -> divent", function() {deepEqual( Stem("diventati"), "divent");});
test("diventato -> divent", function() {deepEqual( Stem("diventato"), "divent");});
test("diventava -> divent", function() {deepEqual( Stem("diventava"), "divent");});
test("diventavan -> diventavan", function() {deepEqual( Stem("diventavan"), "diventavan");});
test("diventerà -> divent", function() {deepEqual( Stem("diventerà"), "divent");});
test("diventeranno -> divent", function() {deepEqual( Stem("diventeranno"), "divent");});
test("diventi -> divent", function() {deepEqual( Stem("diventi"), "divent");});
test("diventiamo -> divent", function() {deepEqual( Stem("diventiamo"), "divent");});
test("diventin -> diventin", function() {deepEqual( Stem("diventin"), "diventin");});
test("diventino -> diventin", function() {deepEqual( Stem("diventino"), "diventin");});
test("diventò -> divent", function() {deepEqual( Stem("diventò"), "divent");});
test("divenuta -> diven", function() {deepEqual( Stem("divenuta"), "diven");});
test("divenute -> diven", function() {deepEqual( Stem("divenute"), "diven");});
test("divenuti -> diven", function() {deepEqual( Stem("divenuti"), "diven");});
test("divenuto -> diven", function() {deepEqual( Stem("divenuto"), "diven");});
test("diverbio -> diverb", function() {deepEqual( Stem("diverbio"), "diverb");});
test("divergenti -> divergent", function() {deepEqual( Stem("divergenti"), "divergent");});
test("divergenze -> divergent", function() {deepEqual( Stem("divergenze"), "divergent");});
test("diversa -> divers", function() {deepEqual( Stem("diversa"), "divers");});
test("diversamente -> divers", function() {deepEqual( Stem("diversamente"), "divers");});
test("diverse -> divers", function() {deepEqual( Stem("diverse"), "divers");});
test("diversi -> div", function() {deepEqual( Stem("diversi"), "div");});
test("diversì -> divers", function() {deepEqual( Stem("diversì"), "divers");});
test("diversificata -> diversific", function() {deepEqual( Stem("diversificata"), "diversific");});
test("diversificazione -> diversif", function() {deepEqual( Stem("diversificazione"), "diversif");});
test("diversione -> diversion", function() {deepEqual( Stem("diversione"), "diversion");});
test("diversità -> divers", function() {deepEqual( Stem("diversità"), "divers");});
test("diverso -> divers", function() {deepEqual( Stem("diverso"), "divers");});
test("divertente -> divertent", function() {deepEqual( Stem("divertente"), "divertent");});
test("divertenti -> divertent", function() {deepEqual( Stem("divertenti"), "divertent");});
test("divertimenti -> divert", function() {deepEqual( Stem("divertimenti"), "divert");});
test("divertimento -> divert", function() {deepEqual( Stem("divertimento"), "divert");});
test("divertire -> divert", function() {deepEqual( Stem("divertire"), "divert");});
test("divertirti -> divert", function() {deepEqual( Stem("divertirti"), "divert");});
test("divertiti -> divert", function() {deepEqual( Stem("divertiti"), "divert");});
test("divertito -> divert", function() {deepEqual( Stem("divertito"), "divert");});
test("divertivano -> divert", function() {deepEqual( Stem("divertivano"), "divert");});
test("diverto -> divert", function() {deepEqual( Stem("diverto"), "divert");});
test("divertono -> divert", function() {deepEqual( Stem("divertono"), "divert");});
test("divezzarlo -> divezz", function() {deepEqual( Stem("divezzarlo"), "divezz");});
test("divezzarsene -> divezz", function() {deepEqual( Stem("divezzarsene"), "divezz");});
test("divezzati -> divezz", function() {deepEqual( Stem("divezzati"), "divezz");});
test("diviato -> div", function() {deepEqual( Stem("diviato"), "div");});
test("divide -> divid", function() {deepEqual( Stem("divide"), "divid");});
test("dividendo -> divid", function() {deepEqual( Stem("dividendo"), "divid");});
test("dividendosi -> divid", function() {deepEqual( Stem("dividendosi"), "divid");});
test("divider -> divider", function() {deepEqual( Stem("divider"), "divider");});
test("dividere -> divid", function() {deepEqual( Stem("dividere"), "divid");});
test("dividersi -> divid", function() {deepEqual( Stem("dividersi"), "divid");});
test("divideva -> divid", function() {deepEqual( Stem("divideva"), "divid");});
test("dividevano -> divid", function() {deepEqual( Stem("dividevano"), "divid");});
test("dividon -> dividon", function() {deepEqual( Stem("dividon"), "dividon");});
test("divien -> divien", function() {deepEqual( Stem("divien"), "divien");});
test("diviene -> divien", function() {deepEqual( Stem("diviene"), "divien");});
test("divieto -> diviet", function() {deepEqual( Stem("divieto"), "diviet");});
test("divincola -> divincol", function() {deepEqual( Stem("divincola"), "divincol");});
test("divincolandosi -> divincol", function() {deepEqual( Stem("divincolandosi"), "divincol");});
test("divincolasse -> divincol", function() {deepEqual( Stem("divincolasse"), "divincol");});
test("divini -> divin", function() {deepEqual( Stem("divini"), "divin");});
test("divisa -> divis", function() {deepEqual( Stem("divisa"), "divis");});
test("divise -> divis", function() {deepEqual( Stem("divise"), "divis");});
test("divisero -> diviser", function() {deepEqual( Stem("divisero"), "diviser");});
test("divisi -> divis", function() {deepEqual( Stem("divisi"), "divis");});
test("divisione -> division", function() {deepEqual( Stem("divisione"), "division");});
test("divisioni -> division", function() {deepEqual( Stem("divisioni"), "division");});
test("divismo -> divism", function() {deepEqual( Stem("divismo"), "divism");});
test("diviso -> divis", function() {deepEqual( Stem("diviso"), "divis");});
test("divo -> div", function() {deepEqual( Stem("divo"), "div");});
test("divora -> divor", function() {deepEqual( Stem("divora"), "divor");});
test("divorar -> divor", function() {deepEqual( Stem("divorar"), "divor");});
test("divorata -> divor", function() {deepEqual( Stem("divorata"), "divor");});
test("divorati -> divor", function() {deepEqual( Stem("divorati"), "divor");});
test("divorato -> divor", function() {deepEqual( Stem("divorato"), "divor");});
test("divorziare -> divorz", function() {deepEqual( Stem("divorziare"), "divorz");});
test("divorziato -> divorz", function() {deepEqual( Stem("divorziato"), "divorz");});
test("divorzio -> divorz", function() {deepEqual( Stem("divorzio"), "divorz");});
test("divorziò -> divorz", function() {deepEqual( Stem("divorziò"), "divorz");});
test("divoti -> divot", function() {deepEqual( Stem("divoti"), "divot");});
test("divozione -> divozion", function() {deepEqual( Stem("divozione"), "divozion");});
test("divozioni -> divozion", function() {deepEqual( Stem("divozioni"), "divozion");});
test("divulgare -> divulg", function() {deepEqual( Stem("divulgare"), "divulg");});
test("divulgazione -> divulg", function() {deepEqual( Stem("divulgazione"), "divulg");});
test("diw -> diw", function() {deepEqual( Stem("diw"), "diw");});
test("dizione -> dizion", function() {deepEqual( Stem("dizione"), "dizion");});
test("dj -> dj", function() {deepEqual( Stem("dj"), "dj");});
test("dl -> dl", function() {deepEqual( Stem("dl"), "dl");});
test("dli -> dli", function() {deepEqual( Stem("dli"), "dli");});
test("dlscendere -> dlscend", function() {deepEqual( Stem("dlscendere"), "dlscend");});
test("dm -> dm", function() {deepEqual( Stem("dm"), "dm");});
test("dmf -> dmf", function() {deepEqual( Stem("dmf"), "dmf");});
test("dn -> dn", function() {deepEqual( Stem("dn"), "dn");});
test("do -> do", function() {deepEqual( Stem("do"), "do");});
test("dobbiam -> dobbiam", function() {deepEqual( Stem("dobbiam"), "dobbiam");});
test("dobbiamo -> dobb", function() {deepEqual( Stem("dobbiamo"), "dobb");});
test("doc -> doc", function() {deepEqual( Stem("doc"), "doc");});
test("docente -> docent", function() {deepEqual( Stem("docente"), "docent");});
test("docenti -> docent", function() {deepEqual( Stem("docenti"), "docent");});
test("docilità -> docil", function() {deepEqual( Stem("docilità"), "docil");});
test("doctor -> doctor", function() {deepEqual( Stem("doctor"), "doctor");});
test("documenta -> document", function() {deepEqual( Stem("documenta"), "document");});
test("documentari -> documentar", function() {deepEqual( Stem("documentari"), "documentar");});
test("documentario -> documentar", function() {deepEqual( Stem("documentario"), "documentar");});
test("documentarista -> documentar", function() {deepEqual( Stem("documentarista"), "documentar");});
test("documentazione -> document", function() {deepEqual( Stem("documentazione"), "document");});
test("documenti -> document", function() {deepEqual( Stem("documenti"), "document");});
test("documento -> document", function() {deepEqual( Stem("documento"), "document");});
test("dodici -> dodic", function() {deepEqual( Stem("dodici"), "dodic");});
test("dodo -> dod", function() {deepEqual( Stem("dodo"), "dod");});
test("dog -> dog", function() {deepEqual( Stem("dog"), "dog");});
test("doga -> dog", function() {deepEqual( Stem("doga"), "dog");});
test("doganali -> doganal", function() {deepEqual( Stem("doganali"), "doganal");});
test("doge -> dog", function() {deepEqual( Stem("doge"), "dog");});
test("doglia -> dogl", function() {deepEqual( Stem("doglia"), "dogl");});
test("dogma -> dogm", function() {deepEqual( Stem("dogma"), "dogm");});
test("dolce -> dolc", function() {deepEqual( Stem("dolce"), "dolc");});
test("dolcemente -> dolcement", function() {deepEqual( Stem("dolcemente"), "dolcement");});
test("dolcezza -> dolcezz", function() {deepEqual( Stem("dolcezza"), "dolcezz");});
test("dolcezze -> dolcezz", function() {deepEqual( Stem("dolcezze"), "dolcezz");});
test("dolci -> dolc", function() {deepEqual( Stem("dolci"), "dolc");});
test("dole -> dol", function() {deepEqual( Stem("dole"), "dol");});
test("dolente -> dolent", function() {deepEqual( Stem("dolente"), "dolent");});
test("dolenti -> dolent", function() {deepEqual( Stem("dolenti"), "dolent");});
test("dolesse -> doless", function() {deepEqual( Stem("dolesse"), "doless");});
test("doll -> doll", function() {deepEqual( Stem("doll"), "doll");});
test("dollari -> dollar", function() {deepEqual( Stem("dollari"), "dollar");});
test("dollaro -> dollar", function() {deepEqual( Stem("dollaro"), "dollar");});
test("dolomiti -> dolom", function() {deepEqual( Stem("dolomiti"), "dolom");});
test("dolor -> dolor", function() {deepEqual( Stem("dolor"), "dolor");});
test("dolore -> dolor", function() {deepEqual( Stem("dolore"), "dolor");});
test("dolori -> dolor", function() {deepEqual( Stem("dolori"), "dolor");});
test("dolorosa -> dolor", function() {deepEqual( Stem("dolorosa"), "dolor");});
test("dolorosamente -> dolor", function() {deepEqual( Stem("dolorosamente"), "dolor");});
test("dolorose -> dolor", function() {deepEqual( Stem("dolorose"), "dolor");});
test("dolorosi -> dolor", function() {deepEqual( Stem("dolorosi"), "dolor");});
test("doloroso -> dolor", function() {deepEqual( Stem("doloroso"), "dolor");});
test("doman -> doman", function() {deepEqual( Stem("doman"), "doman");});
test("domanda -> domand", function() {deepEqual( Stem("domanda"), "domand");});
test("domandando -> domand", function() {deepEqual( Stem("domandando"), "domand");});
test("domandandogli -> domand", function() {deepEqual( Stem("domandandogli"), "domand");});
test("domandandosi -> domand", function() {deepEqual( Stem("domandandosi"), "domand");});
test("domandar -> domand", function() {deepEqual( Stem("domandar"), "domand");});
test("domandare -> domand", function() {deepEqual( Stem("domandare"), "domand");});
test("domandargli -> domand", function() {deepEqual( Stem("domandargli"), "domand");});
test("domandarmi -> domand", function() {deepEqual( Stem("domandarmi"), "domand");});
test("domandarne -> domand", function() {deepEqual( Stem("domandarne"), "domand");});
test("domandarono -> domand", function() {deepEqual( Stem("domandarono"), "domand");});
test("domandasse -> domand", function() {deepEqual( Stem("domandasse"), "domand");});
test("domandate -> domand", function() {deepEqual( Stem("domandate"), "domand");});
test("domandatene -> domandaten", function() {deepEqual( Stem("domandatene"), "domandaten");});
test("domandato -> domand", function() {deepEqual( Stem("domandato"), "domand");});
test("domandava -> domand", function() {deepEqual( Stem("domandava"), "domand");});
test("domandavo -> domand", function() {deepEqual( Stem("domandavo"), "domand");});
test("domande -> domand", function() {deepEqual( Stem("domande"), "domand");});
test("domanderà -> domand", function() {deepEqual( Stem("domanderà"), "domand");});
test("domandi -> domand", function() {deepEqual( Stem("domandi"), "domand");});
test("domando -> dom", function() {deepEqual( Stem("domando"), "dom");});
test("domandò -> domand", function() {deepEqual( Stem("domandò"), "domand");});
test("domani -> doman", function() {deepEqual( Stem("domani"), "doman");});
test("domata -> dom", function() {deepEqual( Stem("domata"), "dom");});
test("domate -> dom", function() {deepEqual( Stem("domate"), "dom");});
test("domati -> dom", function() {deepEqual( Stem("domati"), "dom");});
test("domattina -> domattin", function() {deepEqual( Stem("domattina"), "domattin");});
test("domeneddio -> domenedd", function() {deepEqual( Stem("domeneddio"), "domenedd");});
test("domenica -> domen", function() {deepEqual( Stem("domenica"), "domen");});
test("domenicale -> domenical", function() {deepEqual( Stem("domenicale"), "domenical");});
test("domenicali -> domenical", function() {deepEqual( Stem("domenicali"), "domenical");});
test("domeniche -> domen", function() {deepEqual( Stem("domeniche"), "domen");});
test("domenico -> domen", function() {deepEqual( Stem("domenico"), "domen");});
test("domestica -> domest", function() {deepEqual( Stem("domestica"), "domest");});
test("domestiche -> domest", function() {deepEqual( Stem("domestiche"), "domest");});
test("domestico -> domest", function() {deepEqual( Stem("domestico"), "domest");});
test("domicilio -> domicil", function() {deepEqual( Stem("domicilio"), "domicil");});
test("domificazione -> domif", function() {deepEqual( Stem("domificazione"), "domif");});
test("domina -> domin", function() {deepEqual( Stem("domina"), "domin");});
test("dominante -> domin", function() {deepEqual( Stem("dominante"), "domin");});
test("dominanti -> domin", function() {deepEqual( Stem("dominanti"), "domin");});
test("dominarle -> domin", function() {deepEqual( Stem("dominarle"), "domin");});
test("dominasse -> domin", function() {deepEqual( Stem("dominasse"), "domin");});
test("dominata -> domin", function() {deepEqual( Stem("dominata"), "domin");});
test("dominato -> domin", function() {deepEqual( Stem("dominato"), "domin");});
test("dominatrice -> domin", function() {deepEqual( Stem("dominatrice"), "domin");});
test("dominava -> domin", function() {deepEqual( Stem("dominava"), "domin");});
test("domingo -> doming", function() {deepEqual( Stem("domingo"), "doming");});
test("domini -> domin", function() {deepEqual( Stem("domini"), "domin");});
test("dominik -> dominik", function() {deepEqual( Stem("dominik"), "dominik");});
test("dominio -> domin", function() {deepEqual( Stem("dominio"), "domin");});
test("dominion -> dominion", function() {deepEqual( Stem("dominion"), "dominion");});
test("domiziana -> domizian", function() {deepEqual( Stem("domiziana"), "domizian");});
test("domum -> domum", function() {deepEqual( Stem("domum"), "domum");});
test("don -> don", function() {deepEqual( Stem("don"), "don");});
test("dona -> don", function() {deepEqual( Stem("dona"), "don");});
test("donà -> don", function() {deepEqual( Stem("donà"), "don");});
test("donadoni -> donadon", function() {deepEqual( Stem("donadoni"), "donadon");});
test("donald -> donald", function() {deepEqual( Stem("donald"), "donald");});
test("donare -> don", function() {deepEqual( Stem("donare"), "don");});
test("donat -> donat", function() {deepEqual( Stem("donat"), "donat");});
test("donatella -> donatell", function() {deepEqual( Stem("donatella"), "donatell");});
test("donati -> don", function() {deepEqual( Stem("donati"), "don");});
test("donato -> don", function() {deepEqual( Stem("donato"), "don");});
test("donatori -> donator", function() {deepEqual( Stem("donatori"), "donator");});
test("donazione -> donazion", function() {deepEqual( Stem("donazione"), "donazion");});
test("donazioni -> donazion", function() {deepEqual( Stem("donazioni"), "donazion");});
test("dond -> dond", function() {deepEqual( Stem("dond"), "dond");});
test("donde -> dond", function() {deepEqual( Stem("donde"), "dond");});
test("dondolasse -> dondol", function() {deepEqual( Stem("dondolasse"), "dondol");});
test("donelli -> donell", function() {deepEqual( Stem("donelli"), "donell");});
test("dongwu -> dongwu", function() {deepEqual( Stem("dongwu"), "dongwu");});
test("doni -> don", function() {deepEqual( Stem("doni"), "don");});
test("donna -> donn", function() {deepEqual( Stem("donna"), "donn");});
test("donne -> donn", function() {deepEqual( Stem("donne"), "donn");});
test("donnicciola -> donnicciol", function() {deepEqual( Stem("donnicciola"), "donnicciol");});
test("dono -> don", function() {deepEqual( Stem("dono"), "don");});
test("donzelle -> donzell", function() {deepEqual( Stem("donzelle"), "donzell");});
test("doo -> doo", function() {deepEqual( Stem("doo"), "doo");});
test("doping -> doping", function() {deepEqual( Stem("doping"), "doping");});
test("dopo -> dop", function() {deepEqual( Stem("dopo"), "dop");});
test("dopodomani -> dopodoman", function() {deepEqual( Stem("dopodomani"), "dopodoman");});
test("dopopartita -> dopopart", function() {deepEqual( Stem("dopopartita"), "dopopart");});
test("doppia -> dopp", function() {deepEqual( Stem("doppia"), "dopp");});
test("doppiamente -> dopp", function() {deepEqual( Stem("doppiamente"), "dopp");});
test("doppiata -> dopp", function() {deepEqual( Stem("doppiata"), "dopp");});
test("doppiato -> dopp", function() {deepEqual( Stem("doppiato"), "dopp");});
test("doppie -> dopp", function() {deepEqual( Stem("doppie"), "dopp");});
test("doppio -> dopp", function() {deepEqual( Stem("doppio"), "dopp");});
test("dor -> dor", function() {deepEqual( Stem("dor"), "dor");});
test("dorantes -> dorantes", function() {deepEqual( Stem("dorantes"), "dorantes");});
test("dorgali -> dorgal", function() {deepEqual( Stem("dorgali"), "dorgal");});
test("doriano -> dor", function() {deepEqual( Stem("doriano"), "dor");});
test("dorma -> dorm", function() {deepEqual( Stem("dorma"), "dorm");});
test("dorme -> dorm", function() {deepEqual( Stem("dorme"), "dorm");});
test("dormì -> dorm", function() {deepEqual( Stem("dormì"), "dorm");});
test("dormir -> dorm", function() {deepEqual( Stem("dormir"), "dorm");});
test("dormirai -> dorm", function() {deepEqual( Stem("dormirai"), "dorm");});
test("dormire -> dorm", function() {deepEqual( Stem("dormire"), "dorm");});
test("dormita -> dorm", function() {deepEqual( Stem("dormita"), "dorm");});
test("dormitina -> dormitin", function() {deepEqual( Stem("dormitina"), "dormitin");});
test("dormito -> dorm", function() {deepEqual( Stem("dormito"), "dorm");});
test("dormitòri -> dormitòr", function() {deepEqual( Stem("dormitòri"), "dormitòr");});
test("dormitorio -> dormitor", function() {deepEqual( Stem("dormitorio"), "dormitor");});
test("dormiva -> dorm", function() {deepEqual( Stem("dormiva"), "dorm");});
test("dormivano -> dorm", function() {deepEqual( Stem("dormivano"), "dorm");});
test("dornbusch -> dornbusc", function() {deepEqual( Stem("dornbusch"), "dornbusc");});
test("dornbush -> dornbush", function() {deepEqual( Stem("dornbush"), "dornbush");});
test("dorso -> dors", function() {deepEqual( Stem("dorso"), "dors");});
test("dose -> dos", function() {deepEqual( Stem("dose"), "dos");});
test("dossetti -> dossett", function() {deepEqual( Stem("dossetti"), "dossett");});
test("dossier -> dossier", function() {deepEqual( Stem("dossier"), "dossier");});
test("dotarsi -> dot", function() {deepEqual( Stem("dotarsi"), "dot");});
test("dotata -> dot", function() {deepEqual( Stem("dotata"), "dot");});
test("dotate -> dot", function() {deepEqual( Stem("dotate"), "dot");});
test("dotato -> dot", function() {deepEqual( Stem("dotato"), "dot");});
test("dotazione -> dotazion", function() {deepEqual( Stem("dotazione"), "dotazion");});
test("dote -> dot", function() {deepEqual( Stem("dote"), "dot");});
test("doti -> dot", function() {deepEqual( Stem("doti"), "dot");});
test("dotò -> dot", function() {deepEqual( Stem("dotò"), "dot");});
test("dott -> dott", function() {deepEqual( Stem("dott"), "dott");});
test("dotta -> dott", function() {deepEqual( Stem("dotta"), "dott");});
test("dotti -> dott", function() {deepEqual( Stem("dotti"), "dott");});
test("dotto -> dott", function() {deepEqual( Stem("dotto"), "dott");});
test("dottor -> dottor", function() {deepEqual( Stem("dottor"), "dottor");});
test("dottore -> dottor", function() {deepEqual( Stem("dottore"), "dottor");});
test("dottoressa -> dottoress", function() {deepEqual( Stem("dottoressa"), "dottoress");});
test("dottori -> dottor", function() {deepEqual( Stem("dottori"), "dottor");});
test("dottrina -> dottrin", function() {deepEqual( Stem("dottrina"), "dottrin");});
test("dottrinalmente -> dottrinal", function() {deepEqual( Stem("dottrinalmente"), "dottrinal");});
test("dottrine -> dottrin", function() {deepEqual( Stem("dottrine"), "dottrin");});
test("douadi -> douad", function() {deepEqual( Stem("douadi"), "douad");});
test("doue -> dou", function() {deepEqual( Stem("doue"), "dou");});
test("doueua -> doueu", function() {deepEqual( Stem("doueua"), "doueu");});
test("douglas -> douglas", function() {deepEqual( Stem("douglas"), "douglas");});
test("dourebbe -> dourebb", function() {deepEqual( Stem("dourebbe"), "dourebb");});
test("dov -> dov", function() {deepEqual( Stem("dov"), "dov");});
test("dove -> dov", function() {deepEqual( Stem("dove"), "dov");});
test("dové -> dov", function() {deepEqual( Stem("dové"), "dov");});
test("dovendo -> dov", function() {deepEqual( Stem("dovendo"), "dov");});
test("dover -> dover", function() {deepEqual( Stem("dover"), "dover");});
test("doverci -> dov", function() {deepEqual( Stem("doverci"), "dov");});
test("dovere -> dov", function() {deepEqual( Stem("dovere"), "dov");});
test("doveri -> dover", function() {deepEqual( Stem("doveri"), "dover");});
test("doverlo -> dov", function() {deepEqual( Stem("doverlo"), "dov");});
test("dovermene -> dov", function() {deepEqual( Stem("dovermene"), "dov");});
test("doveroso -> dover", function() {deepEqual( Stem("doveroso"), "dover");});
test("doversi -> dov", function() {deepEqual( Stem("doversi"), "dov");});
test("dovesse -> dovess", function() {deepEqual( Stem("dovesse"), "dovess");});
test("dovessero -> dov", function() {deepEqual( Stem("dovessero"), "dov");});
test("dovessi -> dovess", function() {deepEqual( Stem("dovessi"), "dovess");});
test("dovessimo -> dovessim", function() {deepEqual( Stem("dovessimo"), "dovessim");});
test("dovete -> dov", function() {deepEqual( Stem("dovete"), "dov");});
test("dovette -> dovett", function() {deepEqual( Stem("dovette"), "dovett");});
test("dovettero -> dovetter", function() {deepEqual( Stem("dovettero"), "dovetter");});
test("doveva -> dov", function() {deepEqual( Stem("doveva"), "dov");});
test("dovevamo -> dov", function() {deepEqual( Stem("dovevamo"), "dov");});
test("dovevan -> dovevan", function() {deepEqual( Stem("dovevan"), "dovevan");});
test("dovevano -> dov", function() {deepEqual( Stem("dovevano"), "dov");});
test("dovevi -> dov", function() {deepEqual( Stem("dovevi"), "dov");});
test("dovevo -> dov", function() {deepEqual( Stem("dovevo"), "dov");});
test("doviziosi -> doviz", function() {deepEqual( Stem("doviziosi"), "doviz");});
test("dovizioso -> doviz", function() {deepEqual( Stem("dovizioso"), "doviz");});
test("dovrà -> dovr", function() {deepEqual( Stem("dovrà"), "dovr");});
test("dovranno -> dovrann", function() {deepEqual( Stem("dovranno"), "dovrann");});
test("dovrebb -> dovrebb", function() {deepEqual( Stem("dovrebb"), "dovrebb");});
test("dovrebbbe -> dovrebbb", function() {deepEqual( Stem("dovrebbbe"), "dovrebbb");});
test("dovrebbe -> dovrebb", function() {deepEqual( Stem("dovrebbe"), "dovrebb");});
test("dovrebbero -> dovrebber", function() {deepEqual( Stem("dovrebbero"), "dovrebber");});
test("dovrei -> dovre", function() {deepEqual( Stem("dovrei"), "dovre");});
test("dovrem -> dovrem", function() {deepEqual( Stem("dovrem"), "dovrem");});
test("dovremmo -> dovr", function() {deepEqual( Stem("dovremmo"), "dovr");});
test("dovremo -> dovrem", function() {deepEqual( Stem("dovremo"), "dovrem");});
test("dovrete -> dovr", function() {deepEqual( Stem("dovrete"), "dovr");});
test("dovunque -> dovunqu", function() {deepEqual( Stem("dovunque"), "dovunqu");});
test("dovuta -> dov", function() {deepEqual( Stem("dovuta"), "dov");});
test("dovute -> dov", function() {deepEqual( Stem("dovute"), "dov");});
test("dovuti -> dov", function() {deepEqual( Stem("dovuti"), "dov");});
test("dovuto -> dov", function() {deepEqual( Stem("dovuto"), "dov");});
test("dow -> dow", function() {deepEqual( Stem("dow"), "dow");});
test("down -> down", function() {deepEqual( Stem("down"), "down");});
test("dozio -> doz", function() {deepEqual( Stem("dozio"), "doz");});
test("dozzina -> dozzin", function() {deepEqual( Stem("dozzina"), "dozzin");});
test("dozzinale -> dozzinal", function() {deepEqual( Stem("dozzinale"), "dozzinal");});
test("dp -> dp", function() {deepEqual( Stem("dp"), "dp");});
test("dpr -> dpr", function() {deepEqual( Stem("dpr"), "dpr");});
test("dps -> dps", function() {deepEqual( Stem("dps"), "dps");});
test("dra -> dra", function() {deepEqual( Stem("dra"), "dra");});
test("dracma -> dracm", function() {deepEqual( Stem("dracma"), "dracm");});
test("dragaggio -> dragagg", function() {deepEqual( Stem("dragaggio"), "dragagg");});
test("dragon -> dragon", function() {deepEqual( Stem("dragon"), "dragon");});
test("drake -> drak", function() {deepEqual( Stem("drake"), "drak");});
test("dramma -> dramm", function() {deepEqual( Stem("dramma"), "dramm");});
test("drammatica -> drammat", function() {deepEqual( Stem("drammatica"), "drammat");});
test("drammatici -> drammat", function() {deepEqual( Stem("drammatici"), "drammat");});
test("drammatico -> drammat", function() {deepEqual( Stem("drammatico"), "drammat");});
test("drancy -> drancy", function() {deepEqual( Stem("drancy"), "drancy");});
test("drappello -> drappell", function() {deepEqual( Stem("drappello"), "drappell");});
test("drappi -> drapp", function() {deepEqual( Stem("drappi"), "drapp");});
test("drastica -> drastic", function() {deepEqual( Stem("drastica"), "drastic");});
test("drastiche -> drastic", function() {deepEqual( Stem("drastiche"), "drastic");});
test("drastico -> drastic", function() {deepEqual( Stem("drastico"), "drastic");});
test("dratshev -> dratshev", function() {deepEqual( Stem("dratshev"), "dratshev");});
test("dresda -> dresd", function() {deepEqual( Stem("dresda"), "dresd");});
test("dribbling -> dribbling", function() {deepEqual( Stem("dribbling"), "dribbling");});
test("dritta -> dritt", function() {deepEqual( Stem("dritta"), "dritt");});
test("driver -> driver", function() {deepEqual( Stem("driver"), "driver");});
test("drnovsek -> drnovsek", function() {deepEqual( Stem("drnovsek"), "drnovsek");});
test("droga -> drog", function() {deepEqual( Stem("droga"), "drog");});
test("drogà -> drog", function() {deepEqual( Stem("drogà"), "drog");});
test("drusi -> drus", function() {deepEqual( Stem("drusi"), "drus");});
test("druso -> drus", function() {deepEqual( Stem("druso"), "drus");});
test("dua -> dua", function() {deepEqual( Stem("dua"), "dua");});
test("dubai -> duba", function() {deepEqual( Stem("dubai"), "duba");});
test("dubbi -> dubb", function() {deepEqual( Stem("dubbi"), "dubb");});
test("dubbia -> dubb", function() {deepEqual( Stem("dubbia"), "dubb");});
test("dubbiezza -> dubbiezz", function() {deepEqual( Stem("dubbiezza"), "dubbiezz");});
test("dubbio -> dubb", function() {deepEqual( Stem("dubbio"), "dubb");});
test("dubbiosa -> dubbios", function() {deepEqual( Stem("dubbiosa"), "dubbios");});
test("dubbiosamente -> dubbios", function() {deepEqual( Stem("dubbiosamente"), "dubbios");});
test("dubbiosi -> dubbios", function() {deepEqual( Stem("dubbiosi"), "dubbios");});
test("dubita -> dub", function() {deepEqual( Stem("dubita"), "dub");});
test("dubitare -> dubit", function() {deepEqual( Stem("dubitare"), "dubit");});
test("dubitarne -> dubit", function() {deepEqual( Stem("dubitarne"), "dubit");});
test("dubitasse -> dubit", function() {deepEqual( Stem("dubitasse"), "dubit");});
test("dubitate -> dubit", function() {deepEqual( Stem("dubitate"), "dubit");});
test("dubitativa -> dubit", function() {deepEqual( Stem("dubitativa"), "dubit");});
test("dubiti -> dub", function() {deepEqual( Stem("dubiti"), "dub");});
test("dubito -> dub", function() {deepEqual( Stem("dubito"), "dub");});
test("dublino -> dublin", function() {deepEqual( Stem("dublino"), "dublin");});
test("duca -> duc", function() {deepEqual( Stem("duca"), "duc");});
test("ducati -> duc", function() {deepEqual( Stem("ducati"), "duc");});
test("ducato -> duc", function() {deepEqual( Stem("ducato"), "duc");});
test("ducatone -> ducaton", function() {deepEqual( Stem("ducatone"), "ducaton");});
test("ducatoni -> ducaton", function() {deepEqual( Stem("ducatoni"), "ducaton");});
test("duce -> duc", function() {deepEqual( Stem("duce"), "duc");});
test("duchessa -> duchess", function() {deepEqual( Stem("duchessa"), "duchess");});
test("duchovny -> duchovny", function() {deepEqual( Stem("duchovny"), "duchovny");});
test("dudaiev -> dudaiev", function() {deepEqual( Stem("dudaiev"), "dudaiev");});
test("dudikoff -> dudikoff", function() {deepEqual( Stem("dudikoff"), "dudikoff");});
test("dudley -> dudley", function() {deepEqual( Stem("dudley"), "dudley");});
test("due -> due", function() {deepEqual( Stem("due"), "due");});
test("duelli -> duell", function() {deepEqual( Stem("duelli"), "duell");});
test("duello -> duell", function() {deepEqual( Stem("duello"), "duell");});
test("duemila -> duemil", function() {deepEqual( Stem("duemila"), "duemil");});
test("dugent -> dugent", function() {deepEqual( Stem("dugent"), "dugent");});
test("dugento -> dugent", function() {deepEqual( Stem("dugento"), "dugent");});
test("dugnano -> dugn", function() {deepEqual( Stem("dugnano"), "dugn");});
test("duna -> dun", function() {deepEqual( Stem("duna"), "dun");});
test("dundee -> dunde", function() {deepEqual( Stem("dundee"), "dunde");});
test("dunkerque -> dunkerqu", function() {deepEqual( Stem("dunkerque"), "dunkerqu");});
test("dunque -> dunqu", function() {deepEqual( Stem("dunque"), "dunqu");});
test("dununcia -> dununc", function() {deepEqual( Stem("dununcia"), "dununc");});
test("duodecim -> duodecim", function() {deepEqual( Stem("duodecim"), "duodecim");});
test("duomo -> duom", function() {deepEqual( Stem("duomo"), "duom");});
test("duplicato -> duplic", function() {deepEqual( Stem("duplicato"), "duplic");});
test("duplice -> duplic", function() {deepEqual( Stem("duplice"), "duplic");});
test("duque -> duqu", function() {deepEqual( Stem("duque"), "duqu");});
test("dur -> dur", function() {deepEqual( Stem("dur"), "dur");});
test("dura -> dur", function() {deepEqual( Stem("dura"), "dur");});
test("duramente -> dur", function() {deepEqual( Stem("duramente"), "dur");});
test("duran -> duran", function() {deepEqual( Stem("duran"), "duran");});
test("durant -> durant", function() {deepEqual( Stem("durant"), "durant");});
test("durante -> durant", function() {deepEqual( Stem("durante"), "durant");});
test("durar -> dur", function() {deepEqual( Stem("durar"), "dur");});
test("durare -> dur", function() {deepEqual( Stem("durare"), "dur");});
test("durassero -> dur", function() {deepEqual( Stem("durassero"), "dur");});
test("durata -> dur", function() {deepEqual( Stem("durata"), "dur");});
test("durato -> dur", function() {deepEqual( Stem("durato"), "dur");});
test("duratro -> duratr", function() {deepEqual( Stem("duratro"), "duratr");});
test("duraturo -> duratur", function() {deepEqual( Stem("duraturo"), "duratur");});
test("durava -> dur", function() {deepEqual( Stem("durava"), "dur");});
test("durbano -> durb", function() {deepEqual( Stem("durbano"), "durb");});
test("dure -> dur", function() {deepEqual( Stem("dure"), "dur");});
test("durerà -> dur", function() {deepEqual( Stem("durerà"), "dur");});
test("durezza -> durezz", function() {deepEqual( Stem("durezza"), "durezz");});
test("duri -> dur", function() {deepEqual( Stem("duri"), "dur");});
test("durissima -> durissim", function() {deepEqual( Stem("durissima"), "durissim");});
test("durissime -> durissim", function() {deepEqual( Stem("durissime"), "durissim");});
test("durissimi -> durissim", function() {deepEqual( Stem("durissimi"), "durissim");});
test("durissimo -> durissim", function() {deepEqual( Stem("durissimo"), "durissim");});
test("durlindane -> durlindan", function() {deepEqual( Stem("durlindane"), "durlindan");});
test("duro -> dur", function() {deepEqual( Stem("duro"), "dur");});
test("durò -> dur", function() {deepEqual( Stem("durò"), "dur");});
test("dustin -> dustin", function() {deepEqual( Stem("dustin"), "dustin");});
test("duttile -> duttil", function() {deepEqual( Stem("duttile"), "duttil");});
test("dwayne -> dwayn", function() {deepEqual( Stem("dwayne"), "dwayn");});
test("dyaln -> dyaln", function() {deepEqual( Stem("dyaln"), "dyaln");});
test("dyken -> dyken", function() {deepEqual( Stem("dyken"), "dyken");});
test("dylan -> dylan", function() {deepEqual( Stem("dylan"), "dylan");});
test("dzhuna -> dzhun", function() {deepEqual( Stem("dzhuna"), "dzhun");});
test("e -> e", function() {deepEqual( Stem("e"), "e");});
test("è -> è", function() {deepEqual( Stem("è"), "è");});
test("eadem -> eadem", function() {deepEqual( Stem("eadem"), "eadem");});
test("eam -> eam", function() {deepEqual( Stem("eam"), "eam");});
test("eass -> eass", function() {deepEqual( Stem("eass"), "eass");});
test("east -> east", function() {deepEqual( Stem("east"), "east");});
test("easy -> easy", function() {deepEqual( Stem("easy"), "easy");});
test("ebbe -> ebbe", function() {deepEqual( Stem("ebbe"), "ebbe");});
test("ebbene -> ebben", function() {deepEqual( Stem("ebbene"), "ebben");});
test("ebber -> ebber", function() {deepEqual( Stem("ebber"), "ebber");});
test("ebbero -> ebber", function() {deepEqual( Stem("ebbero"), "ebber");});
test("ebbi -> ebbi", function() {deepEqual( Stem("ebbi"), "ebbi");});
test("ebbrezza -> ebbrezz", function() {deepEqual( Stem("ebbrezza"), "ebbrezz");});
test("ebraica -> ebraic", function() {deepEqual( Stem("ebraica"), "ebraic");});
test("ebraiche -> ebraic", function() {deepEqual( Stem("ebraiche"), "ebraic");});
test("ebraico -> ebraic", function() {deepEqual( Stem("ebraico"), "ebraic");});
test("ebrei -> ebre", function() {deepEqual( Stem("ebrei"), "ebre");});
test("ebreo -> ebre", function() {deepEqual( Stem("ebreo"), "ebre");});
test("ec -> ec", function() {deepEqual( Stem("ec"), "ec");});
test("ecc -> ecc", function() {deepEqual( Stem("ecc"), "ecc");});
test("eccedere -> ecced", function() {deepEqual( Stem("eccedere"), "ecced");});
test("ecceduto -> ecced", function() {deepEqual( Stem("ecceduto"), "ecced");});
test("eccell -> eccell", function() {deepEqual( Stem("eccell"), "eccell");});
test("eccellente -> eccellent", function() {deepEqual( Stem("eccellente"), "eccellent");});
test("eccellenti -> eccellent", function() {deepEqual( Stem("eccellenti"), "eccellent");});
test("eccellentì -> eccellent", function() {deepEqual( Stem("eccellentì"), "eccellent");});
test("eccellentiss -> eccellentiss", function() {deepEqual( Stem("eccellentiss"), "eccellentiss");});
test("eccellentissimo -> eccellentissim", function() {deepEqual( Stem("eccellentissimo"), "eccellentissim");});
test("eccellenza -> eccellent", function() {deepEqual( Stem("eccellenza"), "eccellent");});
test("eccentrico -> eccentr", function() {deepEqual( Stem("eccentrico"), "eccentr");});
test("eccessi -> eccess", function() {deepEqual( Stem("eccessi"), "eccess");});
test("eccessiva -> eccess", function() {deepEqual( Stem("eccessiva"), "eccess");});
test("eccessivamente -> eccess", function() {deepEqual( Stem("eccessivamente"), "eccess");});
test("eccessivi -> eccess", function() {deepEqual( Stem("eccessivi"), "eccess");});
test("eccessivo -> eccess", function() {deepEqual( Stem("eccessivo"), "eccess");});
test("eccesso -> eccess", function() {deepEqual( Stem("eccesso"), "eccess");});
test("eccetera -> ecceter", function() {deepEqual( Stem("eccetera"), "ecceter");});
test("eccettuarne -> eccettu", function() {deepEqual( Stem("eccettuarne"), "eccettu");});
test("eccettuate -> eccettu", function() {deepEqual( Stem("eccettuate"), "eccettu");});
test("eccezionale -> eccezional", function() {deepEqual( Stem("eccezionale"), "eccezional");});
test("eccezione -> eccezion", function() {deepEqual( Stem("eccezione"), "eccezion");});
test("eccezioni -> eccezion", function() {deepEqual( Stem("eccezioni"), "eccezion");});
test("ecchimosi -> ecchim", function() {deepEqual( Stem("ecchimosi"), "ecchim");});
test("eccidio -> eccid", function() {deepEqual( Stem("eccidio"), "eccid");});
test("eccitando -> eccit", function() {deepEqual( Stem("eccitando"), "eccit");});
test("eccitar -> eccit", function() {deepEqual( Stem("eccitar"), "eccit");});
test("eccitare -> eccit", function() {deepEqual( Stem("eccitare"), "eccit");});
test("eccitarono -> eccit", function() {deepEqual( Stem("eccitarono"), "eccit");});
test("eccitato -> eccit", function() {deepEqual( Stem("eccitato"), "eccit");});
test("eccitava -> eccit", function() {deepEqual( Stem("eccitava"), "eccit");});
test("ecclesiali -> ecclesial", function() {deepEqual( Stem("ecclesiali"), "ecclesial");});
test("ecclesiastiche -> ecclesiast", function() {deepEqual( Stem("ecclesiastiche"), "ecclesiast");});
test("ecclesiastici -> ecclesiast", function() {deepEqual( Stem("ecclesiastici"), "ecclesiast");});
test("ecclesiastico -> ecclesiast", function() {deepEqual( Stem("ecclesiastico"), "ecclesiast");});
test("ecco -> ecco", function() {deepEqual( Stem("ecco"), "ecco");});
test("eccoli -> eccol", function() {deepEqual( Stem("eccoli"), "eccol");});
test("eccolo -> eccol", function() {deepEqual( Stem("eccolo"), "eccol");});
test("eccome -> eccom", function() {deepEqual( Stem("eccome"), "eccom");});
test("eccomi -> eccom", function() {deepEqual( Stem("eccomi"), "eccom");});
test("eccone -> eccon", function() {deepEqual( Stem("eccone"), "eccon");});
test("echeverry -> echeverry", function() {deepEqual( Stem("echeverry"), "echeverry");});
test("echotel -> echotel", function() {deepEqual( Stem("echotel"), "echotel");});
test("eclissavano -> ecliss", function() {deepEqual( Stem("eclissavano"), "ecliss");});
test("eco -> eco", function() {deepEqual( Stem("eco"), "eco");});
test("ecologia -> ecolog", function() {deepEqual( Stem("ecologia"), "ecolog");});
test("ecologica -> ecolog", function() {deepEqual( Stem("ecologica"), "ecolog");});
test("ecologico -> ecolog", function() {deepEqual( Stem("ecologico"), "ecolog");});
test("ecolsicilia -> ecolsicil", function() {deepEqual( Stem("ecolsicilia"), "ecolsicil");});
test("econogica -> econog", function() {deepEqual( Stem("econogica"), "econog");});
test("economia -> econom", function() {deepEqual( Stem("economia"), "econom");});
test("economic -> economic", function() {deepEqual( Stem("economic"), "economic");});
test("economica -> econom", function() {deepEqual( Stem("economica"), "econom");});
test("economiche -> econom", function() {deepEqual( Stem("economiche"), "econom");});
test("economici -> econom", function() {deepEqual( Stem("economici"), "econom");});
test("economico -> econom", function() {deepEqual( Stem("economico"), "econom");});
test("economie -> econom", function() {deepEqual( Stem("economie"), "econom");});
test("economista -> econom", function() {deepEqual( Stem("economista"), "econom");});
test("economisti -> econom", function() {deepEqual( Stem("economisti"), "econom");});
test("ecosistema -> ecosistem", function() {deepEqual( Stem("ecosistema"), "ecosistem");});
test("ecu -> ecu", function() {deepEqual( Stem("ecu"), "ecu");});
test("ecuador -> ecuador", function() {deepEqual( Stem("ecuador"), "ecuador");});
test("ecuadoriana -> ecuadorian", function() {deepEqual( Stem("ecuadoriana"), "ecuadorian");});
test("ecuadoriane -> ecuadorian", function() {deepEqual( Stem("ecuadoriane"), "ecuadorian");});
test("ecuadoriano -> ecuador", function() {deepEqual( Stem("ecuadoriano"), "ecuador");});
test("ed -> ed", function() {deepEqual( Stem("ed"), "ed");});
test("eddie -> eddi", function() {deepEqual( Stem("eddie"), "eddi");});
test("edelman -> edelman", function() {deepEqual( Stem("edelman"), "edelman");});
test("eden -> eden", function() {deepEqual( Stem("eden"), "eden");});
test("edf -> edf", function() {deepEqual( Stem("edf"), "edf");});
test("edgar -> edgar", function() {deepEqual( Stem("edgar"), "edgar");});
test("edicola -> edicol", function() {deepEqual( Stem("edicola"), "edicol");});
test("edidit -> edidit", function() {deepEqual( Stem("edidit"), "edidit");});
test("edif -> edif", function() {deepEqual( Stem("edif"), "edif");});
test("edificare -> edific", function() {deepEqual( Stem("edificare"), "edific");});
test("edificato -> edific", function() {deepEqual( Stem("edificato"), "edific");});
test("edificazione -> edif", function() {deepEqual( Stem("edificazione"), "edif");});
test("edifici -> edif", function() {deepEqual( Stem("edifici"), "edif");});
test("edificio -> edific", function() {deepEqual( Stem("edificio"), "edific");});
test("edifizi -> edifiz", function() {deepEqual( Stem("edifizi"), "edifiz");});
test("edifizio -> edifiz", function() {deepEqual( Stem("edifizio"), "edifiz");});
test("edilberto -> edilbert", function() {deepEqual( Stem("edilberto"), "edilbert");});
test("edilizie -> ediliz", function() {deepEqual( Stem("edilizie"), "ediliz");});
test("edilizio -> ediliz", function() {deepEqual( Stem("edilizio"), "ediliz");});
test("ediliziò -> ediliz", function() {deepEqual( Stem("ediliziò"), "ediliz");});
test("edison -> edison", function() {deepEqual( Stem("edison"), "edison");});
test("edit -> edit", function() {deepEqual( Stem("edit"), "edit");});
test("edita -> edit", function() {deepEqual( Stem("edita"), "edit");});
test("editi -> edit", function() {deepEqual( Stem("editi"), "edit");});
test("editore -> editor", function() {deepEqual( Stem("editore"), "editor");});
test("editori -> editor", function() {deepEqual( Stem("editori"), "editor");});
test("editoria -> editor", function() {deepEqual( Stem("editoria"), "editor");});
test("editoriale -> editorial", function() {deepEqual( Stem("editoriale"), "editorial");});
test("editoriali -> editorial", function() {deepEqual( Stem("editoriali"), "editorial");});
test("editorialisti -> editorial", function() {deepEqual( Stem("editorialisti"), "editorial");});
test("editrice -> editr", function() {deepEqual( Stem("editrice"), "editr");});
test("editti -> editt", function() {deepEqual( Stem("editti"), "editt");});
test("editto -> editt", function() {deepEqual( Stem("editto"), "editt");});
test("edizione -> edizion", function() {deepEqual( Stem("edizione"), "edizion");});
test("edizioni -> edizion", function() {deepEqual( Stem("edizioni"), "edizion");});
test("edmondo -> edmond", function() {deepEqual( Stem("edmondo"), "edmond");});
test("edo -> edo", function() {deepEqual( Stem("edo"), "edo");});
test("edoardo -> edoard", function() {deepEqual( Stem("edoardo"), "edoard");});
test("edouard -> edouard", function() {deepEqual( Stem("edouard"), "edouard");});
test("eduardo -> eduard", function() {deepEqual( Stem("eduardo"), "eduard");});
test("educande -> educand", function() {deepEqual( Stem("educande"), "educand");});
test("educare -> educ", function() {deepEqual( Stem("educare"), "educ");});
test("educata -> educ", function() {deepEqual( Stem("educata"), "educ");});
test("educati -> educ", function() {deepEqual( Stem("educati"), "educ");});
test("educatissimi -> educatissim", function() {deepEqual( Stem("educatissimi"), "educatissim");});
test("educatrici -> educ", function() {deepEqual( Stem("educatrici"), "educ");});
test("educazione -> educ", function() {deepEqual( Stem("educazione"), "educ");});
test("edward -> edward", function() {deepEqual( Stem("edward"), "edward");});
test("efe -> efe", function() {deepEqual( Stem("efe"), "efe");});
test("efettuato -> efettu", function() {deepEqual( Stem("efettuato"), "efettu");});
test("effe -> effe", function() {deepEqual( Stem("effe"), "effe");});
test("effetti -> effett", function() {deepEqual( Stem("effetti"), "effett");});
test("effettiva -> effett", function() {deepEqual( Stem("effettiva"), "effett");});
test("effettivamente -> effett", function() {deepEqual( Stem("effettivamente"), "effett");});
test("effettive -> effett", function() {deepEqual( Stem("effettive"), "effett");});
test("effettivo -> effett", function() {deepEqual( Stem("effettivo"), "effett");});
test("effetto -> effett", function() {deepEqual( Stem("effetto"), "effett");});
test("effettuare -> effettu", function() {deepEqual( Stem("effettuare"), "effettu");});
test("effettuata -> effettu", function() {deepEqual( Stem("effettuata"), "effettu");});
test("effettuato -> effettu", function() {deepEqual( Stem("effettuato"), "effettu");});
test("effettuava -> effettu", function() {deepEqual( Stem("effettuava"), "effettu");});
test("efficace -> efficac", function() {deepEqual( Stem("efficace"), "efficac");});
test("efficacemente -> efficac", function() {deepEqual( Stem("efficacemente"), "efficac");});
test("efficaci -> efficac", function() {deepEqual( Stem("efficaci"), "efficac");});
test("efficacia -> efficac", function() {deepEqual( Stem("efficacia"), "efficac");});
test("efficiente -> efficient", function() {deepEqual( Stem("efficiente"), "efficient");});
test("efficienza -> efficient", function() {deepEqual( Stem("efficienza"), "efficient");});
test("effusione -> effusion", function() {deepEqual( Stem("effusione"), "effusion");});
test("efib -> efib", function() {deepEqual( Stem("efib"), "efib");});
test("efibanca -> efibanc", function() {deepEqual( Stem("efibanca"), "efibanc");});
test("efim -> efim", function() {deepEqual( Stem("efim"), "efim");});
test("efletto -> eflett", function() {deepEqual( Stem("efletto"), "eflett");});
test("egalitè -> egalit", function() {deepEqual( Stem("egalitè"), "egalit");});
test("egeli -> egel", function() {deepEqual( Stem("egeli"), "egel");});
test("egemonia -> egemon", function() {deepEqual( Stem("egemonia"), "egemon");});
test("egerton -> egerton", function() {deepEqual( Stem("egerton"), "egerton");});
test("egidio -> egid", function() {deepEqual( Stem("egidio"), "egid");});
test("egitto -> egitt", function() {deepEqual( Stem("egitto"), "egitt");});
test("egiziana -> egizian", function() {deepEqual( Stem("egiziana"), "egizian");});
test("egiziane -> egizian", function() {deepEqual( Stem("egiziane"), "egizian");});
test("egli -> egli", function() {deepEqual( Stem("egli"), "egli");});
test("ego -> ego", function() {deepEqual( Stem("ego"), "ego");});
test("egregiamente -> egreg", function() {deepEqual( Stem("egregiamente"), "egreg");});
test("egregii -> egreg", function() {deepEqual( Stem("egregii"), "egreg");});
test("egregio -> egreg", function() {deepEqual( Stem("egregio"), "egreg");});
test("eguaglianza -> eguagl", function() {deepEqual( Stem("eguaglianza"), "eguagl");});
test("egualmente -> egual", function() {deepEqual( Stem("egualmente"), "egual");});
test("eh -> eh", function() {deepEqual( Stem("eh"), "eh");});
test("ehi -> ehi", function() {deepEqual( Stem("ehi"), "ehi");});
test("ehlermann -> ehlermann", function() {deepEqual( Stem("ehlermann"), "ehlermann");});
test("ehm -> ehm", function() {deepEqual( Stem("ehm"), "ehm");});
test("ei -> ei", function() {deepEqual( Stem("ei"), "ei");});
test("eib -> eib", function() {deepEqual( Stem("eib"), "eib");});
test("eielo -> eiel", function() {deepEqual( Stem("eielo"), "eiel");});
test("eil -> eil", function() {deepEqual( Stem("eil"), "eil");});
test("einar -> ein", function() {deepEqual( Stem("einar"), "ein");});
test("eisendle -> eisendl", function() {deepEqual( Stem("eisendle"), "eisendl");});
test("ekeren -> ekeren", function() {deepEqual( Stem("ekeren"), "ekeren");});
test("el -> el", function() {deepEqual( Stem("el"), "el");});
test("elaborare -> elabor", function() {deepEqual( Stem("elaborare"), "elabor");});
test("elaborassero -> elabor", function() {deepEqual( Stem("elaborassero"), "elabor");});
test("elaborata -> elabor", function() {deepEqual( Stem("elaborata"), "elabor");});
test("elaborate -> elabor", function() {deepEqual( Stem("elaborate"), "elabor");});
test("elaborati -> elabor", function() {deepEqual( Stem("elaborati"), "elabor");});
test("elaborato -> elabor", function() {deepEqual( Stem("elaborato"), "elabor");});
test("elaborazione -> elabor", function() {deepEqual( Stem("elaborazione"), "elabor");});
test("elba -> elba", function() {deepEqual( Stem("elba"), "elba");});
test("eldrege -> eldreg", function() {deepEqual( Stem("eldrege"), "eldreg");});
test("eleanor -> eleanor", function() {deepEqual( Stem("eleanor"), "eleanor");});
test("elecricitè -> elecricit", function() {deepEqual( Stem("elecricitè"), "elecricit");});
test("electrabel -> electrabel", function() {deepEqual( Stem("electrabel"), "electrabel");});
test("electric -> electric", function() {deepEqual( Stem("electric"), "electric");});
test("electricitè -> electricit", function() {deepEqual( Stem("electricitè"), "electricit");});
test("electricity -> electricity", function() {deepEqual( Stem("electricity"), "electricity");});
test("elegante -> eleg", function() {deepEqual( Stem("elegante"), "eleg");});
test("eleganza -> eleg", function() {deepEqual( Stem("eleganza"), "eleg");});
test("eleganze -> eleg", function() {deepEqual( Stem("eleganze"), "eleg");});
test("eleggerà -> elegg", function() {deepEqual( Stem("eleggerà"), "elegg");});
test("eleggere -> elegg", function() {deepEqual( Stem("eleggere"), "elegg");});
test("elektrizitatswerke -> elektrizitatswerk", function() {deepEqual( Stem("elektrizitatswerke"), "elektrizitatswerk");});
test("elelemnti -> elelemnt", function() {deepEqual( Stem("elelemnti"), "elelemnt");});
test("elementare -> element", function() {deepEqual( Stem("elementare"), "element");});
test("elementari -> elementar", function() {deepEqual( Stem("elementari"), "elementar");});
test("elementi -> element", function() {deepEqual( Stem("elementi"), "element");});
test("elemento -> element", function() {deepEqual( Stem("elemento"), "element");});
test("elemosina -> elemosin", function() {deepEqual( Stem("elemosina"), "elemosin");});
test("elemosine -> elemosin", function() {deepEqual( Stem("elemosine"), "elemosin");});
test("elena -> elen", function() {deepEqual( Stem("elena"), "elen");});
test("elencato -> elenc", function() {deepEqual( Stem("elencato"), "elenc");});
test("elenchi -> elenc", function() {deepEqual( Stem("elenchi"), "elenc");});
test("elenco -> elenc", function() {deepEqual( Stem("elenco"), "elenc");});
test("eleonora -> eleonor", function() {deepEqual( Stem("eleonora"), "eleonor");});
test("elesse -> eless", function() {deepEqual( Stem("elesse"), "eless");});
test("eletrica -> eletr", function() {deepEqual( Stem("eletrica"), "eletr");});
test("eletta -> elett", function() {deepEqual( Stem("eletta"), "elett");});
test("elette -> elett", function() {deepEqual( Stem("elette"), "elett");});
test("eletti -> elett", function() {deepEqual( Stem("eletti"), "elett");});
test("elettivi -> elett", function() {deepEqual( Stem("elettivi"), "elett");});
test("elettivo -> elett", function() {deepEqual( Stem("elettivo"), "elett");});
test("eletto -> elett", function() {deepEqual( Stem("eletto"), "elett");});
test("elettorale -> elettoral", function() {deepEqual( Stem("elettorale"), "elettoral");});
test("elettorali -> elettoral", function() {deepEqual( Stem("elettorali"), "elettoral");});
test("elettoralmente -> elettoral", function() {deepEqual( Stem("elettoralmente"), "elettoral");});
test("elettorato -> elettor", function() {deepEqual( Stem("elettorato"), "elettor");});
test("elettore -> elettor", function() {deepEqual( Stem("elettore"), "elettor");});
test("elettori -> elettor", function() {deepEqual( Stem("elettori"), "elettor");});
test("elettrica -> elettr", function() {deepEqual( Stem("elettrica"), "elettr");});
test("elettriche -> elettr", function() {deepEqual( Stem("elettriche"), "elettr");});
test("elettrici -> elettr", function() {deepEqual( Stem("elettrici"), "elettr");});
test("elettricità -> elettr", function() {deepEqual( Stem("elettricità"), "elettr");});
test("elettrico -> elettr", function() {deepEqual( Stem("elettrico"), "elettr");});
test("elettrimmobiliare -> elettrimmobil", function() {deepEqual( Stem("elettrimmobiliare"), "elettrimmobil");});
test("elettrizza -> elettrizz", function() {deepEqual( Stem("elettrizza"), "elettrizz");});
test("elettromagnetica -> elettromagnet", function() {deepEqual( Stem("elettromagnetica"), "elettromagnet");});
test("elettronica -> elettron", function() {deepEqual( Stem("elettronica"), "elettron");});
test("elettrotecniche -> elettrotecn", function() {deepEqual( Stem("elettrotecniche"), "elettrotecn");});
test("elevata -> elev", function() {deepEqual( Stem("elevata"), "elev");});
test("elevate -> elev", function() {deepEqual( Stem("elevate"), "elev");});
test("elevati -> elev", function() {deepEqual( Stem("elevati"), "elev");});
test("elevato -> elev", function() {deepEqual( Stem("elevato"), "elev");});
test("elevava -> elev", function() {deepEqual( Stem("elevava"), "elev");});
test("elezione -> elezion", function() {deepEqual( Stem("elezione"), "elezion");});
test("elezioni -> elezion", function() {deepEqual( Stem("elezioni"), "elezion");});
test("elia -> eli", function() {deepEqual( Stem("elia"), "eli");});
test("elicotteri -> elicotter", function() {deepEqual( Stem("elicotteri"), "elicotter");});
test("elicottero -> elicotter", function() {deepEqual( Stem("elicottero"), "elicotter");});
test("elimina -> elimin", function() {deepEqual( Stem("elimina"), "elimin");});
test("eliminando -> elimin", function() {deepEqual( Stem("eliminando"), "elimin");});
test("eliminare -> elimin", function() {deepEqual( Stem("eliminare"), "elimin");});
test("eliminato -> elimin", function() {deepEqual( Stem("eliminato"), "elimin");});
test("eliminazione -> elimin", function() {deepEqual( Stem("eliminazione"), "elimin");});
test("eliminerebbe -> elimin", function() {deepEqual( Stem("eliminerebbe"), "elimin");});
test("elio -> eli", function() {deepEqual( Stem("elio"), "eli");});
test("eliogabalo -> eliogabal", function() {deepEqual( Stem("eliogabalo"), "eliogabal");});
test("elisa -> elis", function() {deepEqual( Stem("elisa"), "elis");});
test("elisabetta -> elisabett", function() {deepEqual( Stem("elisabetta"), "elisabett");});
test("elkraft -> elkraft", function() {deepEqual( Stem("elkraft"), "elkraft");});
test("ella -> ella", function() {deepEqual( Stem("ella"), "ella");});
test("ellero -> eller", function() {deepEqual( Stem("ellero"), "eller");});
test("ellsworth -> ellsworth", function() {deepEqual( Stem("ellsworth"), "ellsworth");});
test("elmento -> elment", function() {deepEqual( Stem("elmento"), "elment");});
test("elmo -> elmo", function() {deepEqual( Stem("elmo"), "elmo");});
test("elogi -> elog", function() {deepEqual( Stem("elogi"), "elog");});
test("elogiare -> elog", function() {deepEqual( Stem("elogiare"), "elog");});
test("elogio -> elog", function() {deepEqual( Stem("elogio"), "elog");});
test("eloquente -> eloquent", function() {deepEqual( Stem("eloquente"), "eloquent");});
test("eloquenza -> eloquent", function() {deepEqual( Stem("eloquenza"), "eloquent");});
test("elsa -> elsa", function() {deepEqual( Stem("elsa"), "elsa");});
test("elsam -> elsam", function() {deepEqual( Stem("elsam"), "elsam");});
test("eluder -> eluder", function() {deepEqual( Stem("eluder"), "eluder");});
test("eludere -> elud", function() {deepEqual( Stem("eludere"), "elud");});
test("eluderli -> elud", function() {deepEqual( Stem("eluderli"), "elud");});
test("elvio -> elvi", function() {deepEqual( Stem("elvio"), "elvi");});
test("em -> em", function() {deepEqual( Stem("em"), "em");});
test("emanato -> eman", function() {deepEqual( Stem("emanato"), "eman");});
test("emanazione -> eman", function() {deepEqual( Stem("emanazione"), "eman");});
test("emanazioni -> eman", function() {deepEqual( Stem("emanazioni"), "eman");});
test("emanò -> eman", function() {deepEqual( Stem("emanò"), "eman");});
test("emanrsi -> emanrs", function() {deepEqual( Stem("emanrsi"), "emanrs");});
test("emanuele -> emanuel", function() {deepEqual( Stem("emanuele"), "emanuel");});
test("emarginazione -> emargin", function() {deepEqual( Stem("emarginazione"), "emargin");});
test("embargo -> embarg", function() {deepEqual( Stem("embargo"), "embarg");});
test("emblematicamente -> emblemat", function() {deepEqual( Stem("emblematicamente"), "emblemat");});
test("emblematico -> emblemat", function() {deepEqual( Stem("emblematico"), "emblemat");});
test("embrione -> embrion", function() {deepEqual( Stem("embrione"), "embrion");});
test("emc -> emc", function() {deepEqual( Stem("emc"), "emc");});
test("emden -> emden", function() {deepEqual( Stem("emden"), "emden");});
test("eme -> eme", function() {deepEqual( Stem("eme"), "eme");});
test("emenda -> emend", function() {deepEqual( Stem("emenda"), "emend");});
test("emendamenti -> emend", function() {deepEqual( Stem("emendamenti"), "emend");});
test("emendamento -> emend", function() {deepEqual( Stem("emendamento"), "emend");});
test("emerg -> emerg", function() {deepEqual( Stem("emerg"), "emerg");});
test("emerge -> emerg", function() {deepEqual( Stem("emerge"), "emerg");});
test("emergenti -> emergent", function() {deepEqual( Stem("emergenti"), "emergent");});
test("emergenza -> emergent", function() {deepEqual( Stem("emergenza"), "emergent");});
test("emergenze -> emergent", function() {deepEqual( Stem("emergenze"), "emergent");});
test("emergere -> emerg", function() {deepEqual( Stem("emergere"), "emerg");});
test("emerging -> emerging", function() {deepEqual( Stem("emerging"), "emerging");});
test("emergono -> emerg", function() {deepEqual( Stem("emergono"), "emerg");});
test("emerse -> emers", function() {deepEqual( Stem("emerse"), "emers");});
test("emersi -> emers", function() {deepEqual( Stem("emersi"), "emers");});
test("emerso -> emers", function() {deepEqual( Stem("emerso"), "emers");});
test("emessa -> emess", function() {deepEqual( Stem("emessa"), "emess");});
test("emessi -> emess", function() {deepEqual( Stem("emessi"), "emess");});
test("emesso -> emess", function() {deepEqual( Stem("emesso"), "emess");});
test("emettere -> emett", function() {deepEqual( Stem("emettere"), "emett");});
test("emi -> emi", function() {deepEqual( Stem("emi"), "emi");});
test("emiel -> emiel", function() {deepEqual( Stem("emiel"), "emiel");});
test("emigrazione -> emigr", function() {deepEqual( Stem("emigrazione"), "emigr");});
test("emil -> emil", function() {deepEqual( Stem("emil"), "emil");});
test("emilia -> emil", function() {deepEqual( Stem("emilia"), "emil");});
test("emiliane -> emilian", function() {deepEqual( Stem("emiliane"), "emilian");});
test("emiliani -> emilian", function() {deepEqual( Stem("emiliani"), "emilian");});
test("emiliano -> emil", function() {deepEqual( Stem("emiliano"), "emil");});
test("emilio -> emil", function() {deepEqual( Stem("emilio"), "emil");});
test("eminenza -> eminent", function() {deepEqual( Stem("eminenza"), "eminent");});
test("emirati -> emir", function() {deepEqual( Stem("emirati"), "emir");});
test("emissario -> emissar", function() {deepEqual( Stem("emissario"), "emissar");});
test("emissione -> emission", function() {deepEqual( Stem("emissione"), "emission");});
test("emittente -> emittent", function() {deepEqual( Stem("emittente"), "emittent");});
test("emittenti -> emittent", function() {deepEqual( Stem("emittenti"), "emittent");});
test("emma -> emma", function() {deepEqual( Stem("emma"), "emma");});
test("emolumenti -> emolument", function() {deepEqual( Stem("emolumenti"), "emolument");});
test("emorragia -> emorrag", function() {deepEqual( Stem("emorragia"), "emorrag");});
test("emotiva -> emot", function() {deepEqual( Stem("emotiva"), "emot");});
test("emotive -> emot", function() {deepEqual( Stem("emotive"), "emot");});
test("emotivo -> emot", function() {deepEqual( Stem("emotivo"), "emot");});
test("emozionante -> emozion", function() {deepEqual( Stem("emozionante"), "emozion");});
test("emozione -> emozion", function() {deepEqual( Stem("emozione"), "emozion");});
test("emozioni -> emozion", function() {deepEqual( Stem("emozioni"), "emozion");});
test("empì -> empì", function() {deepEqual( Stem("empì"), "empì");});
test("empiendo -> empi", function() {deepEqual( Stem("empiendo"), "empi");});
test("empietà -> empiet", function() {deepEqual( Stem("empietà"), "empiet");});
test("empio -> empi", function() {deepEqual( Stem("empio"), "empi");});
test("empire -> empir", function() {deepEqual( Stem("empire"), "empir");});
test("empireo -> empire", function() {deepEqual( Stem("empireo"), "empire");});
test("empoli -> empol", function() {deepEqual( Stem("empoli"), "empol");});
test("emulazione -> emul", function() {deepEqual( Stem("emulazione"), "emul");});
test("en -> en", function() {deepEqual( Stem("en"), "en");});
test("encicliche -> encicl", function() {deepEqual( Stem("encicliche"), "encicl");});
test("enclave -> enclav", function() {deepEqual( Stem("enclave"), "enclav");});
test("endesa -> endes", function() {deepEqual( Stem("endesa"), "endes");});
test("endoume -> endoum", function() {deepEqual( Stem("endoume"), "endoum");});
test("enea -> ene", function() {deepEqual( Stem("enea"), "ene");});
test("enel -> enel", function() {deepEqual( Stem("enel"), "enel");});
test("energetica -> energet", function() {deepEqual( Stem("energetica"), "energet");});
test("energetiche -> energet", function() {deepEqual( Stem("energetiche"), "energet");});
test("energetici -> energet", function() {deepEqual( Stem("energetici"), "energet");});
test("energetico -> energet", function() {deepEqual( Stem("energetico"), "energet");});
test("energia -> energ", function() {deepEqual( Stem("energia"), "energ");});
test("energico -> energ", function() {deepEqual( Stem("energico"), "energ");});
test("energie -> energ", function() {deepEqual( Stem("energie"), "energ");});
test("energy -> energy", function() {deepEqual( Stem("energy"), "energy");});
test("enfant -> enfant", function() {deepEqual( Stem("enfant"), "enfant");});
test("enfasi -> enfas", function() {deepEqual( Stem("enfasi"), "enfas");});
test("enfiate -> enfi", function() {deepEqual( Stem("enfiate"), "enfi");});
test("englaro -> englar", function() {deepEqual( Stem("englaro"), "englar");});
test("eni -> eni", function() {deepEqual( Stem("eni"), "eni");});
test("enichem -> enichem", function() {deepEqual( Stem("enichem"), "enichem");});
test("enimma -> enimm", function() {deepEqual( Stem("enimma"), "enimm");});
test("enna -> enna", function() {deepEqual( Stem("enna"), "enna");});
test("enne -> enne", function() {deepEqual( Stem("enne"), "enne");});
test("ennesima -> ennesim", function() {deepEqual( Stem("ennesima"), "ennesim");});
test("ennesimo -> ennesim", function() {deepEqual( Stem("ennesimo"), "ennesim");});
test("enorme -> enorm", function() {deepEqual( Stem("enorme"), "enorm");});
test("enormi -> enorm", function() {deepEqual( Stem("enormi"), "enorm");});
test("enormità -> enorm", function() {deepEqual( Stem("enormità"), "enorm");});
test("enpacl -> enpacl", function() {deepEqual( Stem("enpacl"), "enpacl");});
test("enrico -> enric", function() {deepEqual( Stem("enrico"), "enric");});
test("enriquez -> enriquez", function() {deepEqual( Stem("enriquez"), "enriquez");});
test("ente -> ente", function() {deepEqual( Stem("ente"), "ente");});
test("entelechia -> entelec", function() {deepEqual( Stem("entelechia"), "entelec");});
test("enterprise -> enterpris", function() {deepEqual( Stem("enterprise"), "enterpris");});
test("enti -> enti", function() {deepEqual( Stem("enti"), "enti");});
test("entità -> entit", function() {deepEqual( Stem("entità"), "entit");});
test("entra -> entra", function() {deepEqual( Stem("entra"), "entra");});
test("entraci -> entrac", function() {deepEqual( Stem("entraci"), "entrac");});
test("entrambe -> entramb", function() {deepEqual( Stem("entrambe"), "entramb");});
test("entrambi -> entramb", function() {deepEqual( Stem("entrambi"), "entramb");});
test("entran -> entran", function() {deepEqual( Stem("entran"), "entran");});
test("entrando -> entrand", function() {deepEqual( Stem("entrando"), "entrand");});
test("entrandovi -> entrandov", function() {deepEqual( Stem("entrandovi"), "entrandov");});
test("entrano -> entran", function() {deepEqual( Stem("entrano"), "entran");});
test("entrar -> entrar", function() {deepEqual( Stem("entrar"), "entrar");});
test("entrarci -> entrarc", function() {deepEqual( Stem("entrarci"), "entrarc");});
test("entrare -> entrar", function() {deepEqual( Stem("entrare"), "entrar");});
test("entrargli -> entrargl", function() {deepEqual( Stem("entrargli"), "entrargl");});
test("entraron -> entraron", function() {deepEqual( Stem("entraron"), "entraron");});
test("entrarono -> entrar", function() {deepEqual( Stem("entrarono"), "entrar");});
test("entrarvi -> entrarv", function() {deepEqual( Stem("entrarvi"), "entrarv");});
test("entrasse -> entrass", function() {deepEqual( Stem("entrasse"), "entrass");});
test("entrassero -> entrasser", function() {deepEqual( Stem("entrassero"), "entrasser");});
test("entrata -> entrat", function() {deepEqual( Stem("entrata"), "entrat");});
test("entrate -> entrat", function() {deepEqual( Stem("entrate"), "entrat");});
test("entrati -> entrat", function() {deepEqual( Stem("entrati"), "entrat");});
test("entrato -> entrat", function() {deepEqual( Stem("entrato"), "entrat");});
test("entratovi -> entratov", function() {deepEqual( Stem("entratovi"), "entratov");});
test("entratura -> entratur", function() {deepEqual( Stem("entratura"), "entratur");});
test("entrature -> entratur", function() {deepEqual( Stem("entrature"), "entratur");});
test("entrava -> entrav", function() {deepEqual( Stem("entrava"), "entrav");});
test("entravan -> entravan", function() {deepEqual( Stem("entravan"), "entravan");});
test("entravano -> entrav", function() {deepEqual( Stem("entravano"), "entrav");});
test("entrerà -> entrer", function() {deepEqual( Stem("entrerà"), "entrer");});
test("entreranno -> entrerann", function() {deepEqual( Stem("entreranno"), "entrerann");});
test("entri -> entri", function() {deepEqual( Stem("entri"), "entri");});
test("entriamo -> entriam", function() {deepEqual( Stem("entriamo"), "entriam");});
test("entrischen -> entrischen", function() {deepEqual( Stem("entrischen"), "entrischen");});
test("entro -> entro", function() {deepEqual( Stem("entro"), "entro");});
test("entrò -> entrò", function() {deepEqual( Stem("entrò"), "entrò");});
test("entusiasma -> entusiasm", function() {deepEqual( Stem("entusiasma"), "entusiasm");});
test("entusiasmi -> entusiasm", function() {deepEqual( Stem("entusiasmi"), "entusiasm");});
test("entusiasmo -> entusiasm", function() {deepEqual( Stem("entusiasmo"), "entusiasm");});
test("entusiasta -> entusiast", function() {deepEqual( Stem("entusiasta"), "entusiast");});
test("entusiasti -> entusiast", function() {deepEqual( Stem("entusiasti"), "entusiast");});
test("entusiastici -> entusiast", function() {deepEqual( Stem("entusiastici"), "entusiast");});
test("entusiastico -> entusiast", function() {deepEqual( Stem("entusiastico"), "entusiast");});
test("enumerati -> enumer", function() {deepEqual( Stem("enumerati"), "enumer");});
test("enumerazion -> enumerazion", function() {deepEqual( Stem("enumerazion"), "enumerazion");});
test("enunciati -> enunc", function() {deepEqual( Stem("enunciati"), "enunc");});
test("enunciato -> enunc", function() {deepEqual( Stem("enunciato"), "enunc");});
test("enunciazione -> enunc", function() {deepEqual( Stem("enunciazione"), "enunc");});
test("envireg -> envireg", function() {deepEqual( Stem("envireg"), "envireg");});
test("enzo -> enzo", function() {deepEqual( Stem("enzo"), "enzo");});
test("eologiato -> eolog", function() {deepEqual( Stem("eologiato"), "eolog");});
test("ep -> ep", function() {deepEqual( Stem("ep"), "ep");});
test("epatite -> epat", function() {deepEqual( Stem("epatite"), "epat");});
test("ephraim -> ephraim", function() {deepEqual( Stem("ephraim"), "ephraim");});
test("epicentro -> epicentr", function() {deepEqual( Stem("epicentro"), "epicentr");});
test("epidemica -> epidem", function() {deepEqual( Stem("epidemica"), "epidem");});
test("episcopale -> episcopal", function() {deepEqual( Stem("episcopale"), "episcopal");});
test("episcopali -> episcopal", function() {deepEqual( Stem("episcopali"), "episcopal");});
test("episodi -> episod", function() {deepEqual( Stem("episodi"), "episod");});
test("episodio -> episod", function() {deepEqual( Stem("episodio"), "episod");});
test("epiteti -> epitet", function() {deepEqual( Stem("epiteti"), "epitet");});
test("epiteto -> epitet", function() {deepEqual( Stem("epiteto"), "epitet");});
test("epoca -> epoc", function() {deepEqual( Stem("epoca"), "epoc");});
test("epoche -> epoc", function() {deepEqual( Stem("epoche"), "epoc");});
test("eppure -> eppur", function() {deepEqual( Stem("eppure"), "eppur");});
test("epreoccupano -> epreoccup", function() {deepEqual( Stem("epreoccupano"), "epreoccup");});
test("epresto -> eprest", function() {deepEqual( Stem("epresto"), "eprest");});
test("epta -> epta", function() {deepEqual( Stem("epta"), "epta");});
test("eptabond -> eptabond", function() {deepEqual( Stem("eptabond"), "eptabond");});
test("eptacapital -> eptacapital", function() {deepEqual( Stem("eptacapital"), "eptacapital");});
test("eptainternational -> eptainternational", function() {deepEqual( Stem("eptainternational"), "eptainternational");});
test("eptamoney -> eptamoney", function() {deepEqual( Stem("eptamoney"), "eptamoney");});
test("epulone -> epulon", function() {deepEqual( Stem("epulone"), "epulon");});
test("eq -> eq", function() {deepEqual( Stem("eq"), "eq");});
test("equilibrarsi -> equilibr", function() {deepEqual( Stem("equilibrarsi"), "equilibr");});
test("equilibrato -> equilibr", function() {deepEqual( Stem("equilibrato"), "equilibr");});
test("equilibrio -> equilibr", function() {deepEqual( Stem("equilibrio"), "equilibr");});
test("equipaggi -> equipagg", function() {deepEqual( Stem("equipaggi"), "equipagg");});
test("equipaggio -> equipagg", function() {deepEqual( Stem("equipaggio"), "equipagg");});
test("equiparare -> equipar", function() {deepEqual( Stem("equiparare"), "equipar");});
test("equiparazione -> equipar", function() {deepEqual( Stem("equiparazione"), "equipar");});
test("equità -> equit", function() {deepEqual( Stem("equità"), "equit");});
test("equitazione -> equit", function() {deepEqual( Stem("equitazione"), "equit");});
test("equity -> equity", function() {deepEqual( Stem("equity"), "equity");});
test("equivale -> equival", function() {deepEqual( Stem("equivale"), "equival");});
test("equivalente -> equivalent", function() {deepEqual( Stem("equivalente"), "equivalent");});
test("equivalentè -> equivalent", function() {deepEqual( Stem("equivalentè"), "equivalent");});
test("equivaleva -> equival", function() {deepEqual( Stem("equivaleva"), "equival");});
test("equivoci -> equivoc", function() {deepEqual( Stem("equivoci"), "equivoc");});
test("equivoco -> equivoc", function() {deepEqual( Stem("equivoco"), "equivoc");});
test("equo -> equo", function() {deepEqual( Stem("equo"), "equo");});
test("er -> er", function() {deepEqual( Stem("er"), "er");});
test("era -> era", function() {deepEqual( Stem("era"), "era");});
test("eran -> eran", function() {deepEqual( Stem("eran"), "eran");});
test("eranio -> eran", function() {deepEqual( Stem("eranio"), "eran");});
test("erano -> eran", function() {deepEqual( Stem("erano"), "eran");});
test("erant -> erant", function() {deepEqual( Stem("erant"), "erant");});
test("erario -> erar", function() {deepEqual( Stem("erario"), "erar");});
test("eravamo -> eravam", function() {deepEqual( Stem("eravamo"), "eravam");});
test("eravate -> erav", function() {deepEqual( Stem("eravate"), "erav");});
test("erba -> erba", function() {deepEqual( Stem("erba"), "erba");});
test("erbacce -> erbacc", function() {deepEqual( Stem("erbacce"), "erbacc");});
test("erbaccia -> erbacc", function() {deepEqual( Stem("erbaccia"), "erbacc");});
test("erbe -> erbe", function() {deepEqual( Stem("erbe"), "erbe");});
test("erboso -> erbos", function() {deepEqual( Stem("erboso"), "erbos");});
test("ercole -> ercol", function() {deepEqual( Stem("ercole"), "ercol");});
test("ercoli -> ercol", function() {deepEqual( Stem("ercoli"), "ercol");});
test("erede -> ered", function() {deepEqual( Stem("erede"), "ered");});
test("eredità -> ered", function() {deepEqual( Stem("eredità"), "ered");});
test("ereditare -> eredit", function() {deepEqual( Stem("ereditare"), "eredit");});
test("ereditaria -> ereditar", function() {deepEqual( Stem("ereditaria"), "ereditar");});
test("ereditato -> eredit", function() {deepEqual( Stem("ereditato"), "eredit");});
test("eremita -> erem", function() {deepEqual( Stem("eremita"), "erem");});
test("eresse -> eress", function() {deepEqual( Stem("eresse"), "eress");});
test("eretico -> eret", function() {deepEqual( Stem("eretico"), "eret");});
test("eretta -> erett", function() {deepEqual( Stem("eretta"), "erett");});
test("eretto -> erett", function() {deepEqual( Stem("eretto"), "erett");});
test("ergastolo -> ergastol", function() {deepEqual( Stem("ergastolo"), "ergastol");});
test("erge -> erge", function() {deepEqual( Stem("erge"), "erge");});
test("ergife -> ergif", function() {deepEqual( Stem("ergife"), "ergif");});
test("ergo -> ergo", function() {deepEqual( Stem("ergo"), "ergo");});
test("eric -> eric", function() {deepEqual( Stem("eric"), "eric");});
test("ericsson -> ericsson", function() {deepEqual( Stem("ericsson"), "ericsson");});
test("eridania -> eridan", function() {deepEqual( Stem("eridania"), "eridan");});
test("erigere -> erig", function() {deepEqual( Stem("erigere"), "erig");});
test("erik -> erik", function() {deepEqual( Stem("erik"), "erik");});
test("erikkson -> erikkson", function() {deepEqual( Stem("erikkson"), "erikkson");});
test("eriksson -> eriksson", function() {deepEqual( Stem("eriksson"), "eriksson");});
test("erlanger -> erlanger", function() {deepEqual( Stem("erlanger"), "erlanger");});
test("ermellini -> ermellin", function() {deepEqual( Stem("ermellini"), "ermellin");});
test("ermetismo -> ermet", function() {deepEqual( Stem("ermetismo"), "ermet");});
test("erminio -> ermin", function() {deepEqual( Stem("erminio"), "ermin");});
test("ernesto -> ernest", function() {deepEqual( Stem("ernesto"), "ernest");});
test("ero -> ero", function() {deepEqual( Stem("ero"), "ero");});
test("eroe -> ero", function() {deepEqual( Stem("eroe"), "ero");});
test("erogabile -> erog", function() {deepEqual( Stem("erogabile"), "erog");});
test("erogati -> erog", function() {deepEqual( Stem("erogati"), "erog");});
test("erogato -> erog", function() {deepEqual( Stem("erogato"), "erog");});
test("erogatrice -> erog", function() {deepEqual( Stem("erogatrice"), "erog");});
test("erogazione -> erog", function() {deepEqual( Stem("erogazione"), "erog");});
test("eroi -> ero", function() {deepEqual( Stem("eroi"), "ero");});
test("eroica -> eroic", function() {deepEqual( Stem("eroica"), "eroic");});
test("eroico -> eroic", function() {deepEqual( Stem("eroico"), "eroic");});
test("eroina -> eroin", function() {deepEqual( Stem("eroina"), "eroin");});
test("eroismo -> eroism", function() {deepEqual( Stem("eroismo"), "eroism");});
test("erotici -> erot", function() {deepEqual( Stem("erotici"), "erot");});
test("err -> err", function() {deepEqual( Stem("err"), "err");});
test("erranti -> errant", function() {deepEqual( Stem("erranti"), "errant");});
test("errato -> errat", function() {deepEqual( Stem("errato"), "errat");});
test("erravano -> errav", function() {deepEqual( Stem("erravano"), "errav");});
test("errol -> errol", function() {deepEqual( Stem("errol"), "errol");});
test("error -> error", function() {deepEqual( Stem("error"), "error");});
test("errore -> error", function() {deepEqual( Stem("errore"), "error");});
test("errori -> error", function() {deepEqual( Stem("errori"), "error");});
test("erta -> erta", function() {deepEqual( Stem("erta"), "erta");});
test("erte -> erte", function() {deepEqual( Stem("erte"), "erte");});
test("erto -> erto", function() {deepEqual( Stem("erto"), "erto");});
test("eruditamente -> erudit", function() {deepEqual( Stem("eruditamente"), "erudit");});
test("erudite -> erud", function() {deepEqual( Stem("erudite"), "erud");});
test("erudito -> erud", function() {deepEqual( Stem("erudito"), "erud");});
test("erudizione -> erudizion", function() {deepEqual( Stem("erudizione"), "erudizion");});
test("erzegovina -> erzegovin", function() {deepEqual( Stem("erzegovina"), "erzegovin");});
test("es -> es", function() {deepEqual( Stem("es"), "es");});
test("esacerbata -> esacerb", function() {deepEqual( Stem("esacerbata"), "esacerb");});
test("esacerbato -> esacerb", function() {deepEqual( Stem("esacerbato"), "esacerb");});
test("esacerbava -> esacerb", function() {deepEqual( Stem("esacerbava"), "esacerb");});
test("esacerbazione -> esacerb", function() {deepEqual( Stem("esacerbazione"), "esacerb");});
test("esagerare -> esager", function() {deepEqual( Stem("esagerare"), "esager");});
test("esagerata -> esager", function() {deepEqual( Stem("esagerata"), "esager");});
test("esagerate -> esager", function() {deepEqual( Stem("esagerate"), "esager");});
test("esagerato -> esager", function() {deepEqual( Stem("esagerato"), "esager");});
test("esalano -> esal", function() {deepEqual( Stem("esalano"), "esal");});
test("esalava -> esal", function() {deepEqual( Stem("esalava"), "esal");});
test("esalazione -> esal", function() {deepEqual( Stem("esalazione"), "esal");});
test("esalta -> esalt", function() {deepEqual( Stem("esalta"), "esalt");});
test("esaltando -> esalt", function() {deepEqual( Stem("esaltando"), "esalt");});
test("esaltanti -> esalt", function() {deepEqual( Stem("esaltanti"), "esalt");});
test("esaltare -> esalt", function() {deepEqual( Stem("esaltare"), "esalt");});
test("esaltati -> esalt", function() {deepEqual( Stem("esaltati"), "esalt");});
test("esaltato -> esalt", function() {deepEqual( Stem("esaltato"), "esalt");});
test("esaltavano -> esalt", function() {deepEqual( Stem("esaltavano"), "esalt");});
test("esaltazione -> esalt", function() {deepEqual( Stem("esaltazione"), "esalt");});
test("esame -> esam", function() {deepEqual( Stem("esame"), "esam");});
test("esami -> esam", function() {deepEqual( Stem("esami"), "esam");});
test("esamina -> esamin", function() {deepEqual( Stem("esamina"), "esamin");});
test("esaminando -> esamin", function() {deepEqual( Stem("esaminando"), "esamin");});
test("esaminandole -> esamin", function() {deepEqual( Stem("esaminandole"), "esamin");});
test("esaminar -> esamin", function() {deepEqual( Stem("esaminar"), "esamin");});
test("esaminare -> esamin", function() {deepEqual( Stem("esaminare"), "esamin");});
test("esaminarla -> esamin", function() {deepEqual( Stem("esaminarla"), "esamin");});
test("esaminarle -> esamin", function() {deepEqual( Stem("esaminarle"), "esamin");});
test("esaminata -> esamin", function() {deepEqual( Stem("esaminata"), "esamin");});
test("esaminate -> esamin", function() {deepEqual( Stem("esaminate"), "esamin");});
test("esaminati -> esamin", function() {deepEqual( Stem("esaminati"), "esamin");});
test("esaminato -> esamin", function() {deepEqual( Stem("esaminato"), "esamin");});
test("esaminator -> esaminator", function() {deepEqual( Stem("esaminator"), "esaminator");});
test("esaminatore -> esamin", function() {deepEqual( Stem("esaminatore"), "esamin");});
test("esaminava -> esamin", function() {deepEqual( Stem("esaminava"), "esamin");});
test("esaminerà -> esamin", function() {deepEqual( Stem("esaminerà"), "esamin");});
test("esamineranno -> esamin", function() {deepEqual( Stem("esamineranno"), "esamin");});
test("esamionando -> esamion", function() {deepEqual( Stem("esamionando"), "esamion");});
test("esantemi -> esantem", function() {deepEqual( Stem("esantemi"), "esantem");});
test("esasperata -> esasper", function() {deepEqual( Stem("esasperata"), "esasper");});
test("esasperati -> esasper", function() {deepEqual( Stem("esasperati"), "esasper");});
test("esasperato -> esasper", function() {deepEqual( Stem("esasperato"), "esasper");});
test("esasperazione -> esasper", function() {deepEqual( Stem("esasperazione"), "esasper");});
test("esatta -> esatt", function() {deepEqual( Stem("esatta"), "esatt");});
test("esattamente -> esatt", function() {deepEqual( Stem("esattamente"), "esatt");});
test("esatte -> esatt", function() {deepEqual( Stem("esatte"), "esatt");});
test("esattezza -> esattezz", function() {deepEqual( Stem("esattezza"), "esattezz");});
test("esattori -> esattor", function() {deepEqual( Stem("esattori"), "esattor");});
test("esaudisce -> esaud", function() {deepEqual( Stem("esaudisce"), "esaud");});
test("esaudita -> esaud", function() {deepEqual( Stem("esaudita"), "esaud");});
test("esauditela -> esauditel", function() {deepEqual( Stem("esauditela"), "esauditel");});
test("esaudito -> esaud", function() {deepEqual( Stem("esaudito"), "esaud");});
test("esaurita -> esaur", function() {deepEqual( Stem("esaurita"), "esaur");});
test("esauritasi -> esauritas", function() {deepEqual( Stem("esauritasi"), "esauritas");});
test("esaurito -> esaur", function() {deepEqual( Stem("esaurito"), "esaur");});
test("esausta -> esaust", function() {deepEqual( Stem("esausta"), "esaust");});
test("esausti -> esaust", function() {deepEqual( Stem("esausti"), "esaust");});
test("esaustivo -> esaust", function() {deepEqual( Stem("esaustivo"), "esaust");});
test("esausto -> esaust", function() {deepEqual( Stem("esausto"), "esaust");});
test("esca -> esca", function() {deepEqual( Stem("esca"), "esca");});
test("escalation -> escalation", function() {deepEqual( Stem("escalation"), "escalation");});
test("escamotage -> escamotag", function() {deepEqual( Stem("escamotage"), "escamotag");});
test("esce -> esce", function() {deepEqual( Stem("esce"), "esce");});
test("esci -> esci", function() {deepEqual( Stem("esci"), "esci");});
test("escimi -> escim", function() {deepEqual( Stem("escimi"), "escim");});
test("escl -> escl", function() {deepEqual( Stem("escl"), "escl");});
test("esclama -> esclam", function() {deepEqual( Stem("esclama"), "esclam");});
test("esclamando -> esclam", function() {deepEqual( Stem("esclamando"), "esclam");});
test("esclamare -> esclam", function() {deepEqual( Stem("esclamare"), "esclam");});
test("esclamarono -> esclam", function() {deepEqual( Stem("esclamarono"), "esclam");});
test("esclamativi -> esclam", function() {deepEqual( Stem("esclamativi"), "esclam");});
test("esclamato -> esclam", function() {deepEqual( Stem("esclamato"), "esclam");});
test("esclamava -> esclam", function() {deepEqual( Stem("esclamava"), "esclam");});
test("esclamavano -> esclam", function() {deepEqual( Stem("esclamavano"), "esclam");});
test("esclamazione -> esclam", function() {deepEqual( Stem("esclamazione"), "esclam");});
test("esclamazioni -> esclam", function() {deepEqual( Stem("esclamazioni"), "esclam");});
test("esclamò -> esclam", function() {deepEqual( Stem("esclamò"), "esclam");});
test("escluda -> esclud", function() {deepEqual( Stem("escluda"), "esclud");});
test("esclude -> esclud", function() {deepEqual( Stem("esclude"), "esclud");});
test("escludendo -> esclud", function() {deepEqual( Stem("escludendo"), "esclud");});
test("escludere -> esclud", function() {deepEqual( Stem("escludere"), "esclud");});
test("escluderlo -> esclud", function() {deepEqual( Stem("escluderlo"), "esclud");});
test("escludo -> esclud", function() {deepEqual( Stem("escludo"), "esclud");});
test("escludono -> esclud", function() {deepEqual( Stem("escludono"), "esclud");});
test("esclusa -> esclus", function() {deepEqual( Stem("esclusa"), "esclus");});
test("esclusà -> esclus", function() {deepEqual( Stem("esclusà"), "esclus");});
test("escluse -> esclus", function() {deepEqual( Stem("escluse"), "esclus");});
test("esclusi -> esclus", function() {deepEqual( Stem("esclusi"), "esclus");});
test("esclusione -> esclusion", function() {deepEqual( Stem("esclusione"), "esclusion");});
test("esclusiva -> esclus", function() {deepEqual( Stem("esclusiva"), "esclus");});
test("esclusivamente -> esclus", function() {deepEqual( Stem("esclusivamente"), "esclus");});
test("esclusivo -> esclus", function() {deepEqual( Stem("esclusivo"), "esclus");});
test("escluso -> esclus", function() {deepEqual( Stem("escluso"), "esclus");});
test("esco -> esco", function() {deepEqual( Stem("esco"), "esco");});
test("escogitata -> escogit", function() {deepEqual( Stem("escogitata"), "escogit");});
test("escono -> escon", function() {deepEqual( Stem("escono"), "escon");});
test("escort -> escort", function() {deepEqual( Stem("escort"), "escort");});
test("escudo -> escud", function() {deepEqual( Stem("escudo"), "escud");});
test("escuriale -> escurial", function() {deepEqual( Stem("escuriale"), "escurial");});
test("escursionisti -> escursion", function() {deepEqual( Stem("escursionisti"), "escursion");});
test("esecrata -> esecr", function() {deepEqual( Stem("esecrata"), "esecr");});
test("esecrazione -> esecr", function() {deepEqual( Stem("esecrazione"), "esecr");});
test("esecutiva -> esecut", function() {deepEqual( Stem("esecutiva"), "esecut");});
test("esecutivi -> esecut", function() {deepEqual( Stem("esecutivi"), "esecut");});
test("esecutivo -> esecut", function() {deepEqual( Stem("esecutivo"), "esecut");});
test("esecutori -> esecutor", function() {deepEqual( Stem("esecutori"), "esecutor");});
test("esecuzione -> esecu", function() {deepEqual( Stem("esecuzione"), "esecu");});
test("eseguendo -> esegu", function() {deepEqual( Stem("eseguendo"), "esegu");});
test("eseguì -> esegu", function() {deepEqual( Stem("eseguì"), "esegu");});
test("eseguir -> esegu", function() {deepEqual( Stem("eseguir"), "esegu");});
test("eseguire -> esegu", function() {deepEqual( Stem("eseguire"), "esegu");});
test("eseguirli -> esegu", function() {deepEqual( Stem("eseguirli"), "esegu");});
test("eseguirlo -> esegu", function() {deepEqual( Stem("eseguirlo"), "esegu");});
test("eseguirsi -> esegu", function() {deepEqual( Stem("eseguirsi"), "esegu");});
test("eseguisce -> esegu", function() {deepEqual( Stem("eseguisce"), "esegu");});
test("eseguita -> esegu", function() {deepEqual( Stem("eseguita"), "esegu");});
test("eseguite -> esegu", function() {deepEqual( Stem("eseguite"), "esegu");});
test("eseguiti -> esegu", function() {deepEqual( Stem("eseguiti"), "esegu");});
test("eseguito -> esegu", function() {deepEqual( Stem("eseguito"), "esegu");});
test("eseguiva -> esegu", function() {deepEqual( Stem("eseguiva"), "esegu");});
test("esempi -> esemp", function() {deepEqual( Stem("esempi"), "esemp");});
test("esempio -> esemp", function() {deepEqual( Stem("esempio"), "esemp");});
test("esemplare -> esempl", function() {deepEqual( Stem("esemplare"), "esempl");});
test("esenti -> esent", function() {deepEqual( Stem("esenti"), "esent");});
test("esenzione -> esenzion", function() {deepEqual( Stem("esenzione"), "esenzion");});
test("esenzioni -> esenzion", function() {deepEqual( Stem("esenzioni"), "esenzion");});
test("esequie -> esequ", function() {deepEqual( Stem("esequie"), "esequ");});
test("esercita -> eserc", function() {deepEqual( Stem("esercita"), "eserc");});
test("esercitano -> esercit", function() {deepEqual( Stem("esercitano"), "esercit");});
test("esercitar -> esercit", function() {deepEqual( Stem("esercitar"), "esercit");});
test("esercitare -> esercit", function() {deepEqual( Stem("esercitare"), "esercit");});
test("esercitarne -> esercit", function() {deepEqual( Stem("esercitarne"), "esercit");});
test("esercitarsi -> esercit", function() {deepEqual( Stem("esercitarsi"), "esercit");});
test("esercitata -> esercit", function() {deepEqual( Stem("esercitata"), "esercit");});
test("esercitate -> esercit", function() {deepEqual( Stem("esercitate"), "esercit");});
test("esercitato -> esercit", function() {deepEqual( Stem("esercitato"), "esercit");});
test("esercitava -> esercit", function() {deepEqual( Stem("esercitava"), "esercit");});
test("eserciteranno -> esercit", function() {deepEqual( Stem("eserciteranno"), "esercit");});
test("esercito -> eserc", function() {deepEqual( Stem("esercito"), "eserc");});
test("esercitò -> esercit", function() {deepEqual( Stem("esercitò"), "esercit");});
test("esercizi -> eserciz", function() {deepEqual( Stem("esercizi"), "eserciz");});
test("esercizio -> eserciz", function() {deepEqual( Stem("esercizio"), "eserciz");});
test("esibì -> esib", function() {deepEqual( Stem("esibì"), "esib");});
test("esibire -> esib", function() {deepEqual( Stem("esibire"), "esib");});
test("esibirgli -> esib", function() {deepEqual( Stem("esibirgli"), "esib");});
test("esibiti -> esib", function() {deepEqual( Stem("esibiti"), "esib");});
test("esibito -> esib", function() {deepEqual( Stem("esibito"), "esib");});
test("esibizione -> esibizion", function() {deepEqual( Stem("esibizione"), "esibizion");});
test("esibizioni -> esibizion", function() {deepEqual( Stem("esibizioni"), "esibizion");});
test("esige -> esig", function() {deepEqual( Stem("esige"), "esig");});
test("esigenza -> esigent", function() {deepEqual( Stem("esigenza"), "esigent");});
test("esigenze -> esigent", function() {deepEqual( Stem("esigenze"), "esigent");});
test("esigere -> esig", function() {deepEqual( Stem("esigere"), "esig");});
test("esigo -> esig", function() {deepEqual( Stem("esigo"), "esig");});
test("esigua -> esigu", function() {deepEqual( Stem("esigua"), "esigu");});
test("esiguo -> esigu", function() {deepEqual( Stem("esiguo"), "esigu");});
test("esimersi -> esim", function() {deepEqual( Stem("esimersi"), "esim");});
test("esimo -> esim", function() {deepEqual( Stem("esimo"), "esim");});
test("esista -> esist", function() {deepEqual( Stem("esista"), "esist");});
test("esistano -> esist", function() {deepEqual( Stem("esistano"), "esist");});
test("esiste -> esist", function() {deepEqual( Stem("esiste"), "esist");});
test("esistente -> esistent", function() {deepEqual( Stem("esistente"), "esistent");});
test("esistenti -> esistent", function() {deepEqual( Stem("esistenti"), "esistent");});
test("esistenza -> esistent", function() {deepEqual( Stem("esistenza"), "esistent");});
test("esistenziale -> esistenzial", function() {deepEqual( Stem("esistenziale"), "esistenzial");});
test("esisterà -> esist", function() {deepEqual( Stem("esisterà"), "esist");});
test("esistere -> esist", function() {deepEqual( Stem("esistere"), "esist");});
test("esisteva -> esist", function() {deepEqual( Stem("esisteva"), "esist");});
test("esistevano -> esist", function() {deepEqual( Stem("esistevano"), "esist");});
test("esistiti -> esist", function() {deepEqual( Stem("esistiti"), "esist");});
test("esistono -> esist", function() {deepEqual( Stem("esistono"), "esist");});
test("esita -> esit", function() {deepEqual( Stem("esita"), "esit");});
test("esitando -> esit", function() {deepEqual( Stem("esitando"), "esit");});
test("esitanti -> esit", function() {deepEqual( Stem("esitanti"), "esit");});
test("esitare -> esit", function() {deepEqual( Stem("esitare"), "esit");});
test("esitato -> esit", function() {deepEqual( Stem("esitato"), "esit");});
test("esitava -> esit", function() {deepEqual( Stem("esitava"), "esit");});
test("esitazione -> esit", function() {deepEqual( Stem("esitazione"), "esit");});
test("esitazioni -> esit", function() {deepEqual( Stem("esitazioni"), "esit");});
test("esite -> esit", function() {deepEqual( Stem("esite"), "esit");});
test("esiterò -> esit", function() {deepEqual( Stem("esiterò"), "esit");});
test("esiti -> esit", function() {deepEqual( Stem("esiti"), "esit");});
test("esito -> esit", function() {deepEqual( Stem("esito"), "esit");});
test("esitò -> esit", function() {deepEqual( Stem("esitò"), "esit");});
test("eslam -> eslam", function() {deepEqual( Stem("eslam"), "eslam");});
test("esorbitanti -> esorbit", function() {deepEqual( Stem("esorbitanti"), "esorbit");});
test("esorcizzarla -> esorcizz", function() {deepEqual( Stem("esorcizzarla"), "esorcizz");});
test("esordio -> esord", function() {deepEqual( Stem("esordio"), "esord");});
test("esordisce -> esord", function() {deepEqual( Stem("esordisce"), "esord");});
test("esordito -> esord", function() {deepEqual( Stem("esordito"), "esord");});
test("esorta -> esort", function() {deepEqual( Stem("esorta"), "esort");});
test("esortarla -> esort", function() {deepEqual( Stem("esortarla"), "esort");});
test("esortato -> esort", function() {deepEqual( Stem("esortato"), "esort");});
test("esortava -> esort", function() {deepEqual( Stem("esortava"), "esort");});
test("esortazione -> esort", function() {deepEqual( Stem("esortazione"), "esort");});
test("esortazioni -> esort", function() {deepEqual( Stem("esortazioni"), "esort");});
test("esortino -> esortin", function() {deepEqual( Stem("esortino"), "esortin");});
test("èsottratta -> èsottratt", function() {deepEqual( Stem("èsottratta"), "èsottratt");});
test("espandendo -> espand", function() {deepEqual( Stem("espandendo"), "espand");});
test("espanola -> espanol", function() {deepEqual( Stem("espanola"), "espanol");});
test("espansione -> espansion", function() {deepEqual( Stem("espansione"), "espansion");});
test("espediente -> espedient", function() {deepEqual( Stem("espediente"), "espedient");});
test("espedienti -> espedient", function() {deepEqual( Stem("espedienti"), "espedient");});
test("espelle -> espell", function() {deepEqual( Stem("espelle"), "espell");});
test("espellere -> espell", function() {deepEqual( Stem("espellere"), "espell");});
test("esperienza -> esperient", function() {deepEqual( Stem("esperienza"), "esperient");});
test("esperienze -> esperient", function() {deepEqual( Stem("esperienze"), "esperient");});
test("esperimentar -> esperiment", function() {deepEqual( Stem("esperimentar"), "esperiment");});
test("esperimentata -> esperiment", function() {deepEqual( Stem("esperimentata"), "esperiment");});
test("esperimenti -> esper", function() {deepEqual( Stem("esperimenti"), "esper");});
test("esperimento -> esper", function() {deepEqual( Stem("esperimento"), "esper");});
test("esperire -> esper", function() {deepEqual( Stem("esperire"), "esper");});
test("esperta -> espert", function() {deepEqual( Stem("esperta"), "espert");});
test("esperti -> espert", function() {deepEqual( Stem("esperti"), "espert");});
test("esperto -> espert", function() {deepEqual( Stem("esperto"), "espert");});
test("espiare -> espi", function() {deepEqual( Stem("espiare"), "espi");});
test("espiarla -> espi", function() {deepEqual( Stem("espiarla"), "espi");});
test("espiarlo -> espi", function() {deepEqual( Stem("espiarlo"), "espi");});
test("espiazione -> espiazion", function() {deepEqual( Stem("espiazione"), "espiazion");});
test("espletamento -> esplet", function() {deepEqual( Stem("espletamento"), "esplet");});
test("esplicitamente -> esplicit", function() {deepEqual( Stem("esplicitamente"), "esplicit");});
test("esplicitato -> esplicit", function() {deepEqual( Stem("esplicitato"), "esplicit");});
test("esplicite -> esplic", function() {deepEqual( Stem("esplicite"), "esplic");});
test("esplicito -> esplic", function() {deepEqual( Stem("esplicito"), "esplic");});
test("esplode -> esplod", function() {deepEqual( Stem("esplode"), "esplod");});
test("esplodere -> esplod", function() {deepEqual( Stem("esplodere"), "esplod");});
test("esplodono -> esplod", function() {deepEqual( Stem("esplodono"), "esplod");});
test("esplorando -> esplor", function() {deepEqual( Stem("esplorando"), "esplor");});
test("esplorare -> esplor", function() {deepEqual( Stem("esplorare"), "esplor");});
test("esplorati -> esplor", function() {deepEqual( Stem("esplorati"), "esplor");});
test("esploratori -> esplor", function() {deepEqual( Stem("esploratori"), "esplor");});
test("esplorazione -> esplor", function() {deepEqual( Stem("esplorazione"), "esplor");});
test("esplorazioni -> esplor", function() {deepEqual( Stem("esplorazioni"), "esplor");});
test("esplorerà -> esplor", function() {deepEqual( Stem("esplorerà"), "esplor");});
test("esplosa -> esplos", function() {deepEqual( Stem("esplosa"), "esplos");});
test("esplose -> esplos", function() {deepEqual( Stem("esplose"), "esplos");});
test("esplosione -> esplosion", function() {deepEqual( Stem("esplosione"), "esplosion");});
test("esplosioni -> esplosion", function() {deepEqual( Stem("esplosioni"), "esplosion");});
test("esplosive -> esplos", function() {deepEqual( Stem("esplosive"), "esplos");});
test("esplosivi -> esplos", function() {deepEqual( Stem("esplosivi"), "esplos");});
test("esplosivo -> esplos", function() {deepEqual( Stem("esplosivo"), "esplos");});
test("esploso -> esplos", function() {deepEqual( Stem("esploso"), "esplos");});
test("esplusioni -> esplusion", function() {deepEqual( Stem("esplusioni"), "esplusion");});
test("espone -> espon", function() {deepEqual( Stem("espone"), "espon");});
test("esponendo -> espon", function() {deepEqual( Stem("esponendo"), "espon");});
test("esponente -> esponent", function() {deepEqual( Stem("esponente"), "esponent");});
test("esponenti -> esponent", function() {deepEqual( Stem("esponenti"), "esponent");});
test("esponenziale -> esponenzial", function() {deepEqual( Stem("esponenziale"), "esponenzial");});
test("esponevan -> esponevan", function() {deepEqual( Stem("esponevan"), "esponevan");});
test("espongano -> espong", function() {deepEqual( Stem("espongano"), "espong");});
test("espongono -> espong", function() {deepEqual( Stem("espongono"), "espong");});
test("espoo -> espo", function() {deepEqual( Stem("espoo"), "espo");});
test("esporgli -> esporgl", function() {deepEqual( Stem("esporgli"), "esporgl");});
test("esporle -> esporl", function() {deepEqual( Stem("esporle"), "esporl");});
test("esporlo -> esporl", function() {deepEqual( Stem("esporlo"), "esporl");});
test("esporrà -> esporr", function() {deepEqual( Stem("esporrà"), "esporr");});
test("esporranno -> esporrann", function() {deepEqual( Stem("esporranno"), "esporrann");});
test("esporre -> esporr", function() {deepEqual( Stem("esporre"), "esporr");});
test("esportare -> esport", function() {deepEqual( Stem("esportare"), "esport");});
test("esportate -> esport", function() {deepEqual( Stem("esportate"), "esport");});
test("esportativa -> esport", function() {deepEqual( Stem("esportativa"), "esport");});
test("esportatore -> esport", function() {deepEqual( Stem("esportatore"), "esport");});
test("esportazione -> esport", function() {deepEqual( Stem("esportazione"), "esport");});
test("esportazioni -> esport", function() {deepEqual( Stem("esportazioni"), "esport");});
test("espose -> espos", function() {deepEqual( Stem("espose"), "espos");});
test("espositivi -> esposit", function() {deepEqual( Stem("espositivi"), "esposit");});
test("espositivo -> esposit", function() {deepEqual( Stem("espositivo"), "esposit");});
test("esposito -> espos", function() {deepEqual( Stem("esposito"), "espos");});
test("espositori -> espositor", function() {deepEqual( Stem("espositori"), "espositor");});
test("esposizione -> esposizion", function() {deepEqual( Stem("esposizione"), "esposizion");});
test("esposizioni -> esposizion", function() {deepEqual( Stem("esposizioni"), "esposizion");});
test("esposta -> espost", function() {deepEqual( Stem("esposta"), "espost");});
test("esposti -> espost", function() {deepEqual( Stem("esposti"), "espost");});
test("esposto -> espost", function() {deepEqual( Stem("esposto"), "espost");});
test("espressa -> espress", function() {deepEqual( Stem("espressa"), "espress");});
test("espressamente -> espress", function() {deepEqual( Stem("espressamente"), "espress");});
test("espresse -> espress", function() {deepEqual( Stem("espresse"), "espress");});
test("espressi -> espress", function() {deepEqual( Stem("espressi"), "espress");});
test("espressione -> espression", function() {deepEqual( Stem("espressione"), "espression");});
test("espressioni -> espression", function() {deepEqual( Stem("espressioni"), "espression");});
test("espressiva -> espress", function() {deepEqual( Stem("espressiva"), "espress");});
test("espressive -> espress", function() {deepEqual( Stem("espressive"), "espress");});
test("espresso -> espress", function() {deepEqual( Stem("espresso"), "espress");});
test("esprima -> esprim", function() {deepEqual( Stem("esprima"), "esprim");});
test("esprime -> esprim", function() {deepEqual( Stem("esprime"), "esprim");});
test("esprimendo -> esprim", function() {deepEqual( Stem("esprimendo"), "esprim");});
test("esprimer -> esprimer", function() {deepEqual( Stem("esprimer"), "esprimer");});
test("esprimerà -> esprim", function() {deepEqual( Stem("esprimerà"), "esprim");});
test("esprimerci -> esprim", function() {deepEqual( Stem("esprimerci"), "esprim");});
test("esprimere -> esprim", function() {deepEqual( Stem("esprimere"), "esprim");});
test("esprimersi -> esprim", function() {deepEqual( Stem("esprimersi"), "esprim");});
test("esprimeva -> esprim", function() {deepEqual( Stem("esprimeva"), "esprim");});
test("esprimevan -> esprimevan", function() {deepEqual( Stem("esprimevan"), "esprimevan");});
test("esprimevano -> esprim", function() {deepEqual( Stem("esprimevano"), "esprim");});
test("esprimiamo -> esprim", function() {deepEqual( Stem("esprimiamo"), "esprim");});
test("esprimono -> esprim", function() {deepEqual( Stem("esprimono"), "esprim");});
test("espropriando -> espropr", function() {deepEqual( Stem("espropriando"), "espropr");});
test("espropriare -> espropr", function() {deepEqual( Stem("espropriare"), "espropr");});
test("espropriò -> espropr", function() {deepEqual( Stem("espropriò"), "espropr");});
test("espugnarlo -> espugn", function() {deepEqual( Stem("espugnarlo"), "espugn");});
test("espulsi -> espuls", function() {deepEqual( Stem("espulsi"), "espuls");});
test("espulsione -> espulsion", function() {deepEqual( Stem("espulsione"), "espulsion");});
test("espulsioni -> espulsion", function() {deepEqual( Stem("espulsioni"), "espulsion");});
test("espulso -> espuls", function() {deepEqual( Stem("espulso"), "espuls");});
test("essa -> essa", function() {deepEqual( Stem("essa"), "essa");});
test("esse -> esse", function() {deepEqual( Stem("esse"), "esse");});
test("essendo -> essend", function() {deepEqual( Stem("essendo"), "essend");});
test("essendoci -> essendoc", function() {deepEqual( Stem("essendoci"), "essendoc");});
test("essendosegli -> essendosegl", function() {deepEqual( Stem("essendosegli"), "essendosegl");});
test("essendosi -> essend", function() {deepEqual( Stem("essendosi"), "essend");});
test("essendovi -> essendov", function() {deepEqual( Stem("essendovi"), "essendov");});
test("essent -> essent", function() {deepEqual( Stem("essent"), "essent");});
test("essenza -> essenz", function() {deepEqual( Stem("essenza"), "essenz");});
test("essenziale -> essenzial", function() {deepEqual( Stem("essenziale"), "essenzial");});
test("essenziali -> essenzial", function() {deepEqual( Stem("essenziali"), "essenzial");});
test("essenzialissima -> essenzialissim", function() {deepEqual( Stem("essenzialissima"), "essenzialissim");});
test("essenzialissimo -> essenzialissim", function() {deepEqual( Stem("essenzialissimo"), "essenzialissim");});
test("esser -> esser", function() {deepEqual( Stem("esser"), "esser");});
test("esserci -> esserc", function() {deepEqual( Stem("esserci"), "esserc");});
test("essere -> esser", function() {deepEqual( Stem("essere"), "esser");});
test("essergli -> essergl", function() {deepEqual( Stem("essergli"), "essergl");});
test("esseri -> esser", function() {deepEqual( Stem("esseri"), "esser");});
test("esserlo -> esserl", function() {deepEqual( Stem("esserlo"), "esserl");});
test("esserne -> essern", function() {deepEqual( Stem("esserne"), "essern");});
test("essersi -> essers", function() {deepEqual( Stem("essersi"), "essers");});
test("essi -> essi", function() {deepEqual( Stem("essi"), "essi");});
test("esso -> esso", function() {deepEqual( Stem("esso"), "esso");});
test("est -> est", function() {deepEqual( Stem("est"), "est");});
test("està -> està", function() {deepEqual( Stem("està"), "està");});
test("establishment -> establishment", function() {deepEqual( Stem("establishment"), "establishment");});
test("estamos -> estamos", function() {deepEqual( Stem("estamos"), "estamos");});
test("estàmos -> estàmos", function() {deepEqual( Stem("estàmos"), "estàmos");});
test("estasi -> estas", function() {deepEqual( Stem("estasi"), "estas");});
test("estate -> estat", function() {deepEqual( Stem("estate"), "estat");});
test("estatè -> estat", function() {deepEqual( Stem("estatè"), "estat");});
test("estatica -> estat", function() {deepEqual( Stem("estatica"), "estat");});
test("estatici -> estat", function() {deepEqual( Stem("estatici"), "estat");});
test("estatico -> estat", function() {deepEqual( Stem("estatico"), "estat");});
test("èstato -> èstat", function() {deepEqual( Stem("èstato"), "èstat");});
test("este -> este", function() {deepEqual( Stem("este"), "este");});
test("esteban -> esteban", function() {deepEqual( Stem("esteban"), "esteban");});
test("estemporanee -> estemporane", function() {deepEqual( Stem("estemporanee"), "estemporane");});
test("estenda -> estend", function() {deepEqual( Stem("estenda"), "estend");});
test("estende -> estend", function() {deepEqual( Stem("estende"), "estend");});
test("estendendo -> estend", function() {deepEqual( Stem("estendendo"), "estend");});
test("estenderanno -> estend", function() {deepEqual( Stem("estenderanno"), "estend");});
test("estendere -> estend", function() {deepEqual( Stem("estendere"), "estend");});
test("estendersi -> estend", function() {deepEqual( Stem("estendersi"), "estend");});
test("estendono -> estend", function() {deepEqual( Stem("estendono"), "estend");});
test("estensione -> estension", function() {deepEqual( Stem("estensione"), "estension");});
test("estensore -> estensor", function() {deepEqual( Stem("estensore"), "estensor");});
test("estenssoro -> estenssor", function() {deepEqual( Stem("estenssoro"), "estenssor");});
test("estenuati -> estenu", function() {deepEqual( Stem("estenuati"), "estenu");});
test("estenuazione -> estenu", function() {deepEqual( Stem("estenuazione"), "estenu");});
test("estera -> ester", function() {deepEqual( Stem("estera"), "ester");});
test("estere -> ester", function() {deepEqual( Stem("estere"), "ester");});
test("esteri -> ester", function() {deepEqual( Stem("esteri"), "ester");});
test("esterino -> esterin", function() {deepEqual( Stem("esterino"), "esterin");});
test("esteriore -> esterior", function() {deepEqual( Stem("esteriore"), "esterior");});
test("esterminio -> estermin", function() {deepEqual( Stem("esterminio"), "estermin");});
test("esterna -> estern", function() {deepEqual( Stem("esterna"), "estern");});
test("esternato -> estern", function() {deepEqual( Stem("esternato"), "estern");});
test("esternazione -> estern", function() {deepEqual( Stem("esternazione"), "estern");});
test("esterne -> estern", function() {deepEqual( Stem("esterne"), "estern");});
test("esterni -> estern", function() {deepEqual( Stem("esterni"), "estern");});
test("esterno -> estern", function() {deepEqual( Stem("esterno"), "estern");});
test("estero -> ester", function() {deepEqual( Stem("estero"), "ester");});
test("estesa -> estes", function() {deepEqual( Stem("estesa"), "estes");});
test("estese -> estes", function() {deepEqual( Stem("estese"), "estes");});
test("estesi -> estes", function() {deepEqual( Stem("estesi"), "estes");});
test("esteso -> estes", function() {deepEqual( Stem("esteso"), "estes");});
test("estetica -> estet", function() {deepEqual( Stem("estetica"), "estet");});
test("esti -> esti", function() {deepEqual( Stem("esti"), "esti");});
test("estingue -> estingu", function() {deepEqual( Stem("estingue"), "estingu");});
test("estinguersi -> estingu", function() {deepEqual( Stem("estinguersi"), "estingu");});
test("estinta -> estint", function() {deepEqual( Stem("estinta"), "estint");});
test("estinzione -> estinzion", function() {deepEqual( Stem("estinzione"), "estinzion");});
test("estirpali -> estirpal", function() {deepEqual( Stem("estirpali"), "estirpal");});
test("estirpare -> estirp", function() {deepEqual( Stem("estirpare"), "estirp");});
test("estirparlo -> estirp", function() {deepEqual( Stem("estirparlo"), "estirp");});
test("esto -> esto", function() {deepEqual( Stem("esto"), "esto");});
test("estorsione -> estorsion", function() {deepEqual( Stem("estorsione"), "estorsion");});
test("estorte -> estort", function() {deepEqual( Stem("estorte"), "estort");});
test("estrada -> estrad", function() {deepEqual( Stem("estrada"), "estrad");});
test("estradati -> estrad", function() {deepEqual( Stem("estradati"), "estrad");});
test("estradizione -> estradizion", function() {deepEqual( Stem("estradizione"), "estradizion");});
test("estranea -> estrane", function() {deepEqual( Stem("estranea"), "estrane");});
test("estranee -> estrane", function() {deepEqual( Stem("estranee"), "estrane");});
test("estranei -> estrane", function() {deepEqual( Stem("estranei"), "estrane");});
test("estraneità -> estran", function() {deepEqual( Stem("estraneità"), "estran");});
test("estraneo -> estrane", function() {deepEqual( Stem("estraneo"), "estrane");});
test("estrarre -> estrarr", function() {deepEqual( Stem("estrarre"), "estrarr");});
test("estratti -> estratt", function() {deepEqual( Stem("estratti"), "estratt");});
test("estratto -> estratt", function() {deepEqual( Stem("estratto"), "estratt");});
test("estrazione -> estrazion", function() {deepEqual( Stem("estrazione"), "estrazion");});
test("estrazioni -> estrazion", function() {deepEqual( Stem("estrazioni"), "estrazion");});
test("estrema -> estrem", function() {deepEqual( Stem("estrema"), "estrem");});
test("estremamente -> estrem", function() {deepEqual( Stem("estremamente"), "estrem");});
test("estremi -> estrem", function() {deepEqual( Stem("estremi"), "estrem");});
test("estremismo -> estrem", function() {deepEqual( Stem("estremismo"), "estrem");});
test("estremisti -> estrem", function() {deepEqual( Stem("estremisti"), "estrem");});
test("estremistiche -> estremist", function() {deepEqual( Stem("estremistiche"), "estremist");});
test("estremità -> estrem", function() {deepEqual( Stem("estremità"), "estrem");});
test("estremo -> estrem", function() {deepEqual( Stem("estremo"), "estrem");});
test("estrenuamente -> estrenu", function() {deepEqual( Stem("estrenuamente"), "estrenu");});
test("estromessa -> estromess", function() {deepEqual( Stem("estromessa"), "estromess");});
test("esuli -> esul", function() {deepEqual( Stem("esuli"), "esul");});
test("esultante -> esult", function() {deepEqual( Stem("esultante"), "esult");});
test("esultarono -> esult", function() {deepEqual( Stem("esultarono"), "esult");});
test("et -> et", function() {deepEqual( Stem("et"), "et");});
test("età -> età", function() {deepEqual( Stem("età"), "età");});
test("etampes -> etampes", function() {deepEqual( Stem("etampes"), "etampes");});
test("etc -> etc", function() {deepEqual( Stem("etc"), "etc");});
test("etere -> eter", function() {deepEqual( Stem("etere"), "eter");});
test("eterna -> etern", function() {deepEqual( Stem("eterna"), "etern");});
test("eterne -> etern", function() {deepEqual( Stem("eterne"), "etern");});
test("eternità -> etern", function() {deepEqual( Stem("eternità"), "etern");});
test("eteroclite -> eterocl", function() {deepEqual( Stem("eteroclite"), "eterocl");});
test("eterosessuali -> eterosessual", function() {deepEqual( Stem("eterosessuali"), "eterosessual");});
test("etica -> etic", function() {deepEqual( Stem("etica"), "etic");});
test("etichette -> etichett", function() {deepEqual( Stem("etichette"), "etichett");});
test("etici -> etic", function() {deepEqual( Stem("etici"), "etic");});
test("etico -> etic", function() {deepEqual( Stem("etico"), "etic");});
test("etienne -> etienn", function() {deepEqual( Stem("etienne"), "etienn");});
test("etiopico -> etiop", function() {deepEqual( Stem("etiopico"), "etiop");});
test("etnei -> etne", function() {deepEqual( Stem("etnei"), "etne");});
test("etnia -> etni", function() {deepEqual( Stem("etnia"), "etni");});
test("etnico -> etnic", function() {deepEqual( Stem("etnico"), "etnic");});
test("ètornato -> ètorn", function() {deepEqual( Stem("ètornato"), "ètorn");});
test("etro -> etro", function() {deepEqual( Stem("etro"), "etro");});
test("etruschi -> etrusc", function() {deepEqual( Stem("etruschi"), "etrusc");});
test("ettari -> ettar", function() {deepEqual( Stem("ettari"), "ettar");});
test("ette -> ette", function() {deepEqual( Stem("ette"), "ette");});
test("ettore -> ettor", function() {deepEqual( Stem("ettore"), "ettor");});
test("eufemismo -> eufem", function() {deepEqual( Stem("eufemismo"), "eufem");});
test("euforia -> eufor", function() {deepEqual( Stem("euforia"), "eufor");});
test("eufrate -> eufr", function() {deepEqual( Stem("eufrate"), "eufr");});
test("eugene -> eugen", function() {deepEqual( Stem("eugene"), "eugen");});
test("eugenio -> eugen", function() {deepEqual( Stem("eugenio"), "eugen");});
test("èun -> èun", function() {deepEqual( Stem("èun"), "èun");});
test("eurisko -> eurisk", function() {deepEqual( Stem("eurisko"), "eurisk");});
test("eurispes -> eurispes", function() {deepEqual( Stem("eurispes"), "eurispes");});
test("euro -> eur", function() {deepEqual( Stem("euro"), "eur");});
test("euroazioni -> euroazion", function() {deepEqual( Stem("euroazioni"), "euroazion");});
test("eurobond -> eurobond", function() {deepEqual( Stem("eurobond"), "eurobond");});
test("euromobiliare -> euromobil", function() {deepEqual( Stem("euromobiliare"), "euromobil");});
test("euromoney -> euromoney", function() {deepEqual( Stem("euromoney"), "euromoney");});
test("euronew -> euronew", function() {deepEqual( Stem("euronew"), "euronew");});
test("euronews -> euronews", function() {deepEqual( Stem("euronews"), "euronews");});
test("europa -> europ", function() {deepEqual( Stem("europa"), "europ");});
test("europarlamentare -> europarlament", function() {deepEqual( Stem("europarlamentare"), "europarlament");});
test("europe -> europ", function() {deepEqual( Stem("europe"), "europ");});
test("europea -> europe", function() {deepEqual( Stem("europea"), "europe");});
test("europee -> europe", function() {deepEqual( Stem("europee"), "europe");});
test("europei -> europe", function() {deepEqual( Stem("europei"), "europe");});
test("europeo -> europe", function() {deepEqual( Stem("europeo"), "europe");});
test("europeò -> europe", function() {deepEqual( Stem("europeò"), "europe");});
test("euroscetticismo -> euroscettic", function() {deepEqual( Stem("euroscetticismo"), "euroscettic");});
test("eurotunnel -> eurotunnel", function() {deepEqual( Stem("eurotunnel"), "eurotunnel");});
test("eusebio -> euseb", function() {deepEqual( Stem("eusebio"), "euseb");});
test("eva -> eva", function() {deepEqual( Stem("eva"), "eva");});
test("evacuare -> evacu", function() {deepEqual( Stem("evacuare"), "evacu");});
test("evacuato -> evacu", function() {deepEqual( Stem("evacuato"), "evacu");});
test("evacuazione -> evacu", function() {deepEqual( Stem("evacuazione"), "evacu");});
test("evangelica -> evangel", function() {deepEqual( Stem("evangelica"), "evangel");});
test("evangeliche -> evangel", function() {deepEqual( Stem("evangeliche"), "evangel");});
test("evangelici -> evangel", function() {deepEqual( Stem("evangelici"), "evangel");});
test("evangelisti -> evangel", function() {deepEqual( Stem("evangelisti"), "evangel");});
test("evani -> evan", function() {deepEqual( Stem("evani"), "evan");});
test("evaporare -> evapor", function() {deepEqual( Stem("evaporare"), "evapor");});
test("eventi -> event", function() {deepEqual( Stem("eventi"), "event");});
test("evento -> event", function() {deepEqual( Stem("evento"), "event");});
test("eventuale -> eventual", function() {deepEqual( Stem("eventuale"), "eventual");});
test("eventuali -> eventual", function() {deepEqual( Stem("eventuali"), "eventual");});
test("eventualmente -> eventual", function() {deepEqual( Stem("eventualmente"), "eventual");});
test("evenutale -> evenutal", function() {deepEqual( Stem("evenutale"), "evenutal");});
test("evidente -> evident", function() {deepEqual( Stem("evidente"), "evident");});
test("evidentemente -> evident", function() {deepEqual( Stem("evidentemente"), "evident");});
test("evidenti -> evident", function() {deepEqual( Stem("evidenti"), "evident");});
test("evidenza -> evident", function() {deepEqual( Stem("evidenza"), "evident");});
test("evidenzia -> evidenz", function() {deepEqual( Stem("evidenzia"), "evidenz");});
test("evidenziano -> evidenz", function() {deepEqual( Stem("evidenziano"), "evidenz");});
test("evidenziati -> evidenz", function() {deepEqual( Stem("evidenziati"), "evidenz");});
test("evidenziato -> evidenz", function() {deepEqual( Stem("evidenziato"), "evidenz");});
test("evita -> evit", function() {deepEqual( Stem("evita"), "evit");});
test("evitabile -> evit", function() {deepEqual( Stem("evitabile"), "evit");});
test("evitando -> evit", function() {deepEqual( Stem("evitando"), "evit");});
test("evitar -> evit", function() {deepEqual( Stem("evitar"), "evit");});
test("evitare -> evit", function() {deepEqual( Stem("evitare"), "evit");});
test("evitata -> evit", function() {deepEqual( Stem("evitata"), "evit");});
test("eviti -> evit", function() {deepEqual( Stem("eviti"), "evit");});
test("evo -> evo", function() {deepEqual( Stem("evo"), "evo");});
test("evolution -> evolution", function() {deepEqual( Stem("evolution"), "evolution");});
test("evolutivà -> evolutiv", function() {deepEqual( Stem("evolutivà"), "evolutiv");});
test("evolutivo -> evolut", function() {deepEqual( Stem("evolutivo"), "evolut");});
test("evoluzione -> evolu", function() {deepEqual( Stem("evoluzione"), "evolu");});
test("evoluzioni -> evolu", function() {deepEqual( Stem("evoluzioni"), "evolu");});
test("evolversi -> evolv", function() {deepEqual( Stem("evolversi"), "evolv");});
test("evviva -> evviv", function() {deepEqual( Stem("evviva"), "evviv");});
test("ex -> ex", function() {deepEqual( Stem("ex"), "ex");});
test("exa -> exa", function() {deepEqual( Stem("exa"), "exa");});
test("excelencia -> excelenc", function() {deepEqual( Stem("excelencia"), "excelenc");});
test("excelsi -> excels", function() {deepEqual( Stem("excelsi"), "excels");});
test("executive -> execut", function() {deepEqual( Stem("executive"), "execut");});
test("exercicio -> exercic", function() {deepEqual( Stem("exercicio"), "exercic");});
test("exploit -> exploit", function() {deepEqual( Stem("exploit"), "exploit");});
test("expo -> expo", function() {deepEqual( Stem("expo"), "expo");});
test("export -> export", function() {deepEqual( Stem("export"), "export");});
test("express -> express", function() {deepEqual( Stem("express"), "express");});
test("exres -> exres", function() {deepEqual( Stem("exres"), "exres");});
test("extra -> extra", function() {deepEqual( Stem("extra"), "extra");});
test("extracomunitari -> extracomunitar", function() {deepEqual( Stem("extracomunitari"), "extracomunitar");});
test("extracomunitarie -> extracomunitar", function() {deepEqual( Stem("extracomunitarie"), "extracomunitar");});
test("extracomunitario -> extracomunitar", function() {deepEqual( Stem("extracomunitario"), "extracomunitar");});
test("extrader -> extrader", function() {deepEqual( Stem("extrader"), "extrader");});
test("extraterrestre -> extraterrestr", function() {deepEqual( Stem("extraterrestre"), "extraterrestr");});
test("extraurbano -> extraurb", function() {deepEqual( Stem("extraurbano"), "extraurb");});
test("extrema -> extrem", function() {deepEqual( Stem("extrema"), "extrem");});
test("extremis -> extremis", function() {deepEqual( Stem("extremis"), "extremis");});
test("exw -> exw", function() {deepEqual( Stem("exw"), "exw");});
test("ezio -> ezi", function() {deepEqual( Stem("ezio"), "ezi");});
test("ezln -> ezln", function() {deepEqual( Stem("ezln"), "ezln");});
test("f -> f", function() {deepEqual( Stem("f"), "f");});
test("fa -> fa", function() {deepEqual( Stem("fa"), "fa");});
test("faa -> faa", function() {deepEqual( Stem("faa"), "faa");});
test("fabbr -> fabbr", function() {deepEqual( Stem("fabbr"), "fabbr");});
test("fabbri -> fabbr", function() {deepEqual( Stem("fabbri"), "fabbr");});
test("fabbrica -> fabbric", function() {deepEqual( Stem("fabbrica"), "fabbric");});
test("fabbricare -> fabbric", function() {deepEqual( Stem("fabbricare"), "fabbric");});
test("fabbricatevelo -> fabbricatevel", function() {deepEqual( Stem("fabbricatevelo"), "fabbricatevel");});
test("fabbricazine -> fabbricazin", function() {deepEqual( Stem("fabbricazine"), "fabbricazin");});
test("fabbricazione -> fabbric", function() {deepEqual( Stem("fabbricazione"), "fabbric");});
test("fabbriche -> fabbric", function() {deepEqual( Stem("fabbriche"), "fabbric");});
test("fabbro -> fabbr", function() {deepEqual( Stem("fabbro"), "fabbr");});
test("fabian -> fabian", function() {deepEqual( Stem("fabian"), "fabian");});
test("fabianelli -> fabianell", function() {deepEqual( Stem("fabianelli"), "fabianell");});
test("fabio -> fab", function() {deepEqual( Stem("fabio"), "fab");});
test("fabrica -> fabric", function() {deepEqual( Stem("fabrica"), "fabric");});
test("fabrizio -> fabriz", function() {deepEqual( Stem("fabrizio"), "fabriz");});
test("fac -> fac", function() {deepEqual( Stem("fac"), "fac");});
test("facce -> facc", function() {deepEqual( Stem("facce"), "facc");});
test("faccenda -> facc", function() {deepEqual( Stem("faccenda"), "facc");});
test("faccende -> facc", function() {deepEqual( Stem("faccende"), "facc");});
test("faccendiere -> faccend", function() {deepEqual( Stem("faccendiere"), "faccend");});
test("faccendole -> facc", function() {deepEqual( Stem("faccendole"), "facc");});
test("faccendoni -> faccendon", function() {deepEqual( Stem("faccendoni"), "faccendon");});
test("facchini -> facchin", function() {deepEqual( Stem("facchini"), "facchin");});
test("faccia -> facc", function() {deepEqual( Stem("faccia"), "facc");});
test("facciale -> faccial", function() {deepEqual( Stem("facciale"), "faccial");});
test("facciam -> facciam", function() {deepEqual( Stem("facciam"), "facciam");});
test("facciamo -> facc", function() {deepEqual( Stem("facciamo"), "facc");});
test("faccian -> faccian", function() {deepEqual( Stem("faccian"), "faccian");});
test("facciano -> facc", function() {deepEqual( Stem("facciano"), "facc");});
test("facciata -> facc", function() {deepEqual( Stem("facciata"), "facc");});
test("facciate -> facc", function() {deepEqual( Stem("facciate"), "facc");});
test("faccio -> facc", function() {deepEqual( Stem("faccio"), "facc");});
test("facciole -> facciol", function() {deepEqual( Stem("facciole"), "facciol");});
test("facendo -> fac", function() {deepEqual( Stem("facendo"), "fac");});
test("facendoci -> fac", function() {deepEqual( Stem("facendoci"), "fac");});
test("facendogli -> fac", function() {deepEqual( Stem("facendogli"), "fac");});
test("facendoglielo -> fac", function() {deepEqual( Stem("facendoglielo"), "fac");});
test("facendola -> fac", function() {deepEqual( Stem("facendola"), "fac");});
test("facendole -> fac", function() {deepEqual( Stem("facendole"), "fac");});
test("facendolo -> fac", function() {deepEqual( Stem("facendolo"), "fac");});
test("facendone -> fac", function() {deepEqual( Stem("facendone"), "fac");});
test("facendosegli -> facendosegl", function() {deepEqual( Stem("facendosegli"), "facendosegl");});
test("facendoselo -> facendosel", function() {deepEqual( Stem("facendoselo"), "facendosel");});
test("facendosene -> fac", function() {deepEqual( Stem("facendosene"), "fac");});
test("facendosi -> fac", function() {deepEqual( Stem("facendosi"), "fac");});
test("facendovi -> fac", function() {deepEqual( Stem("facendovi"), "fac");});
test("facente -> facent", function() {deepEqual( Stem("facente"), "facent");});
test("facesse -> facess", function() {deepEqual( Stem("facesse"), "facess");});
test("facesser -> facesser", function() {deepEqual( Stem("facesser"), "facesser");});
test("facessero -> fac", function() {deepEqual( Stem("facessero"), "fac");});
test("facessi -> facess", function() {deepEqual( Stem("facessi"), "facess");});
test("faceste -> facest", function() {deepEqual( Stem("faceste"), "facest");});
test("faceva -> fac", function() {deepEqual( Stem("faceva"), "fac");});
test("facevam -> facevam", function() {deepEqual( Stem("facevam"), "facevam");});
test("facevan -> facevan", function() {deepEqual( Stem("facevan"), "facevan");});
test("facevano -> fac", function() {deepEqual( Stem("facevano"), "fac");});
test("facevo -> fac", function() {deepEqual( Stem("facevo"), "fac");});
test("facile -> facil", function() {deepEqual( Stem("facile"), "facil");});
test("facili -> facil", function() {deepEqual( Stem("facili"), "facil");});
test("facilissima -> facilissim", function() {deepEqual( Stem("facilissima"), "facilissim");});
test("facilità -> facil", function() {deepEqual( Stem("facilità"), "facil");});
test("facilitando -> facilit", function() {deepEqual( Stem("facilitando"), "facilit");});
test("facilitar -> facilit", function() {deepEqual( Stem("facilitar"), "facilit");});
test("facilitare -> facilit", function() {deepEqual( Stem("facilitare"), "facilit");});
test("facilitato -> facilit", function() {deepEqual( Stem("facilitato"), "facilit");});
test("faciliterà -> facilit", function() {deepEqual( Stem("faciliterà"), "facilit");});
test("facilmente -> facil", function() {deepEqual( Stem("facilmente"), "facil");});
test("facinorosi -> facinor", function() {deepEqual( Stem("facinorosi"), "facinor");});
test("facinoroso -> facinor", function() {deepEqual( Stem("facinoroso"), "facinor");});
test("facoltà -> facolt", function() {deepEqual( Stem("facoltà"), "facolt");});
test("facoltosissimi -> facoltosissim", function() {deepEqual( Stem("facoltosissimi"), "facoltosissim");});
test("facta -> fact", function() {deepEqual( Stem("facta"), "fact");});
test("factory -> factory", function() {deepEqual( Stem("factory"), "factory");});
test("factotum -> factotum", function() {deepEqual( Stem("factotum"), "factotum");});
test("faema -> faem", function() {deepEqual( Stem("faema"), "faem");});
test("faenza -> faenz", function() {deepEqual( Stem("faenza"), "faenz");});
test("faggio -> fagg", function() {deepEqual( Stem("faggio"), "fagg");});
test("fagocitati -> fagocit", function() {deepEqual( Stem("fagocitati"), "fagocit");});
test("fagotti -> fagott", function() {deepEqual( Stem("fagotti"), "fagott");});
test("fagottino -> fagottin", function() {deepEqual( Stem("fagottino"), "fagottin");});
test("fagotto -> fagott", function() {deepEqual( Stem("fagotto"), "fagott");});
test("fai -> fai", function() {deepEqual( Stem("fai"), "fai");});
test("faida -> faid", function() {deepEqual( Stem("faida"), "faid");});
test("faine -> fain", function() {deepEqual( Stem("faine"), "fain");});
test("fair -> fair", function() {deepEqual( Stem("fair"), "fair");});
test("fakt -> fakt", function() {deepEqual( Stem("fakt"), "fakt");});
test("fal -> fal", function() {deepEqual( Stem("fal"), "fal");});
test("falce -> falc", function() {deepEqual( Stem("falce"), "falc");});
test("falck -> falck", function() {deepEqual( Stem("falck"), "falck");});
test("falco -> falc", function() {deepEqual( Stem("falco"), "falc");});
test("falcone -> falcon", function() {deepEqual( Stem("falcone"), "falcon");});
test("falda -> fald", function() {deepEqual( Stem("falda"), "fald");});
test("falde -> fald", function() {deepEqual( Stem("falde"), "fald");});
test("faldelle -> faldell", function() {deepEqual( Stem("faldelle"), "faldell");});
test("falkirk -> falkirk", function() {deepEqual( Stem("falkirk"), "falkirk");});
test("falkland -> falkland", function() {deepEqual( Stem("falkland"), "falkland");});
test("fallato -> fall", function() {deepEqual( Stem("fallato"), "fall");});
test("falle -> fall", function() {deepEqual( Stem("falle"), "fall");});
test("fallemente -> fallement", function() {deepEqual( Stem("fallemente"), "fallement");});
test("fallimentare -> falliment", function() {deepEqual( Stem("fallimentare"), "falliment");});
test("fallimenti -> fall", function() {deepEqual( Stem("fallimenti"), "fall");});
test("fallimento -> fall", function() {deepEqual( Stem("fallimento"), "fall");});
test("fallirà -> fall", function() {deepEqual( Stem("fallirà"), "fall");});
test("fallisce -> fall", function() {deepEqual( Stem("fallisce"), "fall");});
test("fallita -> fall", function() {deepEqual( Stem("fallita"), "fall");});
test("fallito -> fall", function() {deepEqual( Stem("fallito"), "fall");});
test("fallo -> fall", function() {deepEqual( Stem("fallo"), "fall");});
test("falloso -> fallos", function() {deepEqual( Stem("falloso"), "fallos");});
test("falò -> fal", function() {deepEqual( Stem("falò"), "fal");});
test("falsa -> fals", function() {deepEqual( Stem("falsa"), "fals");});
test("falsamente -> fals", function() {deepEqual( Stem("falsamente"), "fals");});
test("false -> fals", function() {deepEqual( Stem("false"), "fals");});
test("falsi -> fals", function() {deepEqual( Stem("falsi"), "fals");});
test("falsificazione -> falsif", function() {deepEqual( Stem("falsificazione"), "falsif");});
test("falsificazioni -> falsif", function() {deepEqual( Stem("falsificazioni"), "falsif");});
test("falsifichi -> falsif", function() {deepEqual( Stem("falsifichi"), "falsif");});
test("falso -> fals", function() {deepEqual( Stem("falso"), "fals");});
test("fama -> fam", function() {deepEqual( Stem("fama"), "fam");});
test("fame -> fam", function() {deepEqual( Stem("fame"), "fam");});
test("famigerato -> famiger", function() {deepEqual( Stem("famigerato"), "famiger");});
test("famiglia -> famigl", function() {deepEqual( Stem("famiglia"), "famigl");});
test("famigliare -> famigl", function() {deepEqual( Stem("famigliare"), "famigl");});
test("famigliari -> famigliar", function() {deepEqual( Stem("famigliari"), "famigliar");});
test("famigliarità -> famigliar", function() {deepEqual( Stem("famigliarità"), "famigliar");});
test("famigliarizzarsi -> famigliarizz", function() {deepEqual( Stem("famigliarizzarsi"), "famigliarizz");});
test("famigliarmente -> famigliar", function() {deepEqual( Stem("famigliarmente"), "famigliar");});
test("famiglie -> famigl", function() {deepEqual( Stem("famiglie"), "famigl");});
test("famigliola -> famigliol", function() {deepEqual( Stem("famigliola"), "famigliol");});
test("familiare -> famil", function() {deepEqual( Stem("familiare"), "famil");});
test("familiari -> familiar", function() {deepEqual( Stem("familiari"), "familiar");});
test("familiarità -> familiar", function() {deepEqual( Stem("familiarità"), "familiar");});
test("family -> family", function() {deepEqual( Stem("family"), "family");});
test("fammi -> famm", function() {deepEqual( Stem("fammi"), "famm");});
test("famosa -> famos", function() {deepEqual( Stem("famosa"), "famos");});
test("famosi -> famos", function() {deepEqual( Stem("famosi"), "famos");});
test("famosissimo -> famosissim", function() {deepEqual( Stem("famosissimo"), "famosissim");});
test("famoso -> famos", function() {deepEqual( Stem("famoso"), "famos");});
test("fan -> fan", function() {deepEqual( Stem("fan"), "fan");});
test("fanatica -> fanat", function() {deepEqual( Stem("fanatica"), "fanat");});
test("fanatico -> fanat", function() {deepEqual( Stem("fanatico"), "fanat");});
test("fanatismo -> fanat", function() {deepEqual( Stem("fanatismo"), "fanat");});
test("fanciulla -> fanciull", function() {deepEqual( Stem("fanciulla"), "fanciull");});
test("fanciulle -> fanciull", function() {deepEqual( Stem("fanciulle"), "fanciull");});
test("fanciulletta -> fanciullett", function() {deepEqual( Stem("fanciulletta"), "fanciullett");});
test("fanciullezza -> fanciullezz", function() {deepEqual( Stem("fanciullezza"), "fanciullezz");});
test("fanciulli -> fanciull", function() {deepEqual( Stem("fanciulli"), "fanciull");});
test("fanciullina -> fanciullin", function() {deepEqual( Stem("fanciullina"), "fanciullin");});
test("fanciulline -> fanciullin", function() {deepEqual( Stem("fanciulline"), "fanciullin");});
test("fanciullo -> fanciull", function() {deepEqual( Stem("fanciullo"), "fanciull");});
test("fandonia -> fandon", function() {deepEqual( Stem("fandonia"), "fandon");});
test("fandonie -> fandon", function() {deepEqual( Stem("fandonie"), "fandon");});
test("fango -> fang", function() {deepEqual( Stem("fango"), "fang");});
test("fangosa -> fangos", function() {deepEqual( Stem("fangosa"), "fangos");});
test("fanno -> fann", function() {deepEqual( Stem("fanno"), "fann");});
test("fanny -> fanny", function() {deepEqual( Stem("fanny"), "fanny");});
test("fano -> fan", function() {deepEqual( Stem("fano"), "fan");});
test("fans -> fans", function() {deepEqual( Stem("fans"), "fans");});
test("fantascienza -> fantascient", function() {deepEqual( Stem("fantascienza"), "fantascient");});
test("fantasia -> fantas", function() {deepEqual( Stem("fantasia"), "fantas");});
test("fantasie -> fantas", function() {deepEqual( Stem("fantasie"), "fantas");});
test("fantasime -> fantasim", function() {deepEqual( Stem("fantasime"), "fantasim");});
test("fantasma -> fantasm", function() {deepEqual( Stem("fantasma"), "fantasm");});
test("fantasmi -> fantasm", function() {deepEqual( Stem("fantasmi"), "fantasm");});
test("fantastica -> fantast", function() {deepEqual( Stem("fantastica"), "fantast");});
test("fantasticaggini -> fantasticaggin", function() {deepEqual( Stem("fantasticaggini"), "fantasticaggin");});
test("fantasticar -> fantastic", function() {deepEqual( Stem("fantasticar"), "fantastic");});
test("fantasticare -> fantastic", function() {deepEqual( Stem("fantasticare"), "fantastic");});
test("fantastico -> fantast", function() {deepEqual( Stem("fantastico"), "fantast");});
test("fante -> fant", function() {deepEqual( Stem("fante"), "fant");});
test("fanteria -> fanter", function() {deepEqual( Stem("fanteria"), "fanter");});
test("fanti -> fant", function() {deepEqual( Stem("fanti"), "fant");});
test("fantoni -> fanton", function() {deepEqual( Stem("fantoni"), "fanton");});
test("fantozzi -> fantozz", function() {deepEqual( Stem("fantozzi"), "fantozz");});
test("fao -> fao", function() {deepEqual( Stem("fao"), "fao");});
test("far -> far", function() {deepEqual( Stem("far"), "far");});
test("fara -> far", function() {deepEqual( Stem("fara"), "far");});
test("farà -> far", function() {deepEqual( Stem("farà"), "far");});
test("farah -> farah", function() {deepEqual( Stem("farah"), "farah");});
test("farai -> fara", function() {deepEqual( Stem("farai"), "fara");});
test("faranno -> farann", function() {deepEqual( Stem("faranno"), "farann");});
test("faraone -> faraon", function() {deepEqual( Stem("faraone"), "faraon");});
test("farassino -> farassin", function() {deepEqual( Stem("farassino"), "farassin");});
test("farcele -> farcel", function() {deepEqual( Stem("farcele"), "farcel");});
test("farci -> farc", function() {deepEqual( Stem("farci"), "farc");});
test("fare -> far", function() {deepEqual( Stem("fare"), "far");});
test("farebbe -> farebb", function() {deepEqual( Stem("farebbe"), "farebb");});
test("farebbero -> farebber", function() {deepEqual( Stem("farebbero"), "farebber");});
test("farebbne -> farebbn", function() {deepEqual( Stem("farebbne"), "farebbn");});
test("farei -> fare", function() {deepEqual( Stem("farei"), "fare");});
test("faremmo -> far", function() {deepEqual( Stem("faremmo"), "far");});
test("faremo -> farem", function() {deepEqual( Stem("faremo"), "farem");});
test("fareste -> farest", function() {deepEqual( Stem("fareste"), "farest");});
test("faresti -> farest", function() {deepEqual( Stem("faresti"), "farest");});
test("farete -> far", function() {deepEqual( Stem("farete"), "far");});
test("farfalla -> farfall", function() {deepEqual( Stem("farfalla"), "farfall");});
test("farfalle -> farfall", function() {deepEqual( Stem("farfalle"), "farfall");});
test("fargli -> fargl", function() {deepEqual( Stem("fargli"), "fargl");});
test("fargliela -> fargliel", function() {deepEqual( Stem("fargliela"), "fargliel");});
test("fargliele -> fargliel", function() {deepEqual( Stem("fargliele"), "fargliel");});
test("fargliene -> farglien", function() {deepEqual( Stem("fargliene"), "farglien");});
test("farina -> farin", function() {deepEqual( Stem("farina"), "farin");});
test("farinacei -> farinace", function() {deepEqual( Stem("farinacei"), "farinace");});
test("farinaioli -> farinaiol", function() {deepEqual( Stem("farinaioli"), "farinaiol");});
test("farine -> farin", function() {deepEqual( Stem("farine"), "farin");});
test("farinella -> farinell", function() {deepEqual( Stem("farinella"), "farinell");});
test("farinelli -> farinell", function() {deepEqual( Stem("farinelli"), "farinell");});
test("farisei -> farise", function() {deepEqual( Stem("farisei"), "farise");});
test("farla -> farl", function() {deepEqual( Stem("farla"), "farl");});
test("farle -> farl", function() {deepEqual( Stem("farle"), "farl");});
test("farli -> farl", function() {deepEqual( Stem("farli"), "farl");});
test("farlo -> farl", function() {deepEqual( Stem("farlo"), "farl");});
test("farmaceutica -> farmaceut", function() {deepEqual( Stem("farmaceutica"), "farmaceut");});
test("farmaci -> farmac", function() {deepEqual( Stem("farmaci"), "farmac");});
test("farmacie -> farmac", function() {deepEqual( Stem("farmacie"), "farmac");});
test("farmaco -> farmac", function() {deepEqual( Stem("farmaco"), "farmac");});
test("farmela -> farmel", function() {deepEqual( Stem("farmela"), "farmel");});
test("farmelo -> farmel", function() {deepEqual( Stem("farmelo"), "farmel");});
test("farmene -> farmen", function() {deepEqual( Stem("farmene"), "farmen");});
test("farmi -> farm", function() {deepEqual( Stem("farmi"), "farm");});
test("farncese -> farnces", function() {deepEqual( Stem("farncese"), "farnces");});
test("farne -> farn", function() {deepEqual( Stem("farne"), "farn");});
test("farnesina -> farnesin", function() {deepEqual( Stem("farnesina"), "farnesin");});
test("farneti -> farnet", function() {deepEqual( Stem("farneti"), "farnet");});
test("faro -> far", function() {deepEqual( Stem("faro"), "far");});
test("farò -> far", function() {deepEqual( Stem("farò"), "far");});
test("faron -> faron", function() {deepEqual( Stem("faron"), "faron");});
test("farraginose -> farragin", function() {deepEqual( Stem("farraginose"), "farragin");});
test("farris -> farris", function() {deepEqual( Stem("farris"), "farris");});
test("farsene -> farsen", function() {deepEqual( Stem("farsene"), "farsen");});
test("farsetti -> farsett", function() {deepEqual( Stem("farsetti"), "farsett");});
test("farsetto -> farsett", function() {deepEqual( Stem("farsetto"), "farsett");});
test("farsi -> fars", function() {deepEqual( Stem("farsi"), "fars");});
test("farti -> fart", function() {deepEqual( Stem("farti"), "fart");});
test("faruk -> faruk", function() {deepEqual( Stem("faruk"), "faruk");});
test("farvela -> farvel", function() {deepEqual( Stem("farvela"), "farvel");});
test("farvelo -> farvel", function() {deepEqual( Stem("farvelo"), "farvel");});
test("farvene -> farven", function() {deepEqual( Stem("farvene"), "farven");});
test("farvi -> farv", function() {deepEqual( Stem("farvi"), "farv");});
test("fasano -> fas", function() {deepEqual( Stem("fasano"), "fas");});
test("fasce -> fasc", function() {deepEqual( Stem("fasce"), "fasc");});
test("fascia -> fasc", function() {deepEqual( Stem("fascia"), "fasc");});
test("fascicolo -> fascicol", function() {deepEqual( Stem("fascicolo"), "fascicol");});
test("fascino -> fascin", function() {deepEqual( Stem("fascino"), "fascin");});
test("fascio -> fasc", function() {deepEqual( Stem("fascio"), "fasc");});
test("fascismo -> fascism", function() {deepEqual( Stem("fascismo"), "fascism");});
test("fascista -> fascist", function() {deepEqual( Stem("fascista"), "fascist");});
test("fascisti -> fascist", function() {deepEqual( Stem("fascisti"), "fascist");});
test("fase -> fas", function() {deepEqual( Stem("fase"), "fas");});
test("fasi -> fas", function() {deepEqual( Stem("fasi"), "fas");});
test("faso -> fas", function() {deepEqual( Stem("faso"), "fas");});
test("fassa -> fass", function() {deepEqual( Stem("fassa"), "fass");});
test("fassbinder -> fassbinder", function() {deepEqual( Stem("fassbinder"), "fassbinder");});
test("fast -> fast", function() {deepEqual( Stem("fast"), "fast");});
test("fasti -> fast", function() {deepEqual( Stem("fasti"), "fast");});
test("fastidio -> fastid", function() {deepEqual( Stem("fastidio"), "fastid");});
test("fastidiosa -> fastid", function() {deepEqual( Stem("fastidiosa"), "fastid");});
test("fastidiosi -> fastid", function() {deepEqual( Stem("fastidiosi"), "fastid");});
test("fastidioso -> fastid", function() {deepEqual( Stem("fastidioso"), "fastid");});
test("fastidiuccio -> fastidiucc", function() {deepEqual( Stem("fastidiuccio"), "fastidiucc");});
test("fasto -> fast", function() {deepEqual( Stem("fasto"), "fast");});
test("fasulli -> fasull", function() {deepEqual( Stem("fasulli"), "fasull");});
test("fatale -> fatal", function() {deepEqual( Stem("fatale"), "fatal");});
test("fatali -> fatal", function() {deepEqual( Stem("fatali"), "fatal");});
test("fatalista -> fatal", function() {deepEqual( Stem("fatalista"), "fatal");});
test("fatalisti -> fatal", function() {deepEqual( Stem("fatalisti"), "fatal");});
test("fate -> fat", function() {deepEqual( Stem("fate"), "fat");});
test("fategli -> fategl", function() {deepEqual( Stem("fategli"), "fategl");});
test("fatele -> fatel", function() {deepEqual( Stem("fatele"), "fatel");});
test("fateli -> fatel", function() {deepEqual( Stem("fateli"), "fatel");});
test("fatelo -> fatel", function() {deepEqual( Stem("fatelo"), "fatel");});
test("fatemi -> fatem", function() {deepEqual( Stem("fatemi"), "fatem");});
test("fatevi -> fat", function() {deepEqual( Stem("fatevi"), "fat");});
test("fatica -> fatic", function() {deepEqual( Stem("fatica"), "fatic");});
test("faticato -> fatic", function() {deepEqual( Stem("faticato"), "fatic");});
test("fatiche -> fatic", function() {deepEqual( Stem("fatiche"), "fatic");});
test("faticosa -> fatic", function() {deepEqual( Stem("faticosa"), "fatic");});
test("faticose -> fatic", function() {deepEqual( Stem("faticose"), "fatic");});
test("faticoso -> fatic", function() {deepEqual( Stem("faticoso"), "fatic");});
test("fatima -> fatim", function() {deepEqual( Stem("fatima"), "fatim");});
test("fatma -> fatm", function() {deepEqual( Stem("fatma"), "fatm");});
test("fatt -> fatt", function() {deepEqual( Stem("fatt"), "fatt");});
test("fatta -> fatt", function() {deepEqual( Stem("fatta"), "fatt");});
test("fattaccio -> fattacc", function() {deepEqual( Stem("fattaccio"), "fattacc");});
test("fattagli -> fattagl", function() {deepEqual( Stem("fattagli"), "fattagl");});
test("fattasi -> fattas", function() {deepEqual( Stem("fattasi"), "fattas");});
test("fatte -> fatt", function() {deepEqual( Stem("fatte"), "fatt");});
test("fattempo -> fattemp", function() {deepEqual( Stem("fattempo"), "fattemp");});
test("fatti -> fatt", function() {deepEqual( Stem("fatti"), "fatt");});
test("fattibile -> fattibil", function() {deepEqual( Stem("fattibile"), "fattibil");});
test("fattizia -> fattiz", function() {deepEqual( Stem("fattizia"), "fattiz");});
test("fatto -> fatt", function() {deepEqual( Stem("fatto"), "fatt");});
test("fattore -> fattor", function() {deepEqual( Stem("fattore"), "fattor");});
test("fattoressa -> fattoress", function() {deepEqual( Stem("fattoressa"), "fattoress");});
test("fattori -> fattor", function() {deepEqual( Stem("fattori"), "fattor");});
test("fattosi -> fattos", function() {deepEqual( Stem("fattosi"), "fattos");});
test("fattura -> fattur", function() {deepEqual( Stem("fattura"), "fattur");});
test("fatturato -> fattur", function() {deepEqual( Stem("fatturato"), "fattur");});
test("fatwà -> fatw", function() {deepEqual( Stem("fatwà"), "fatw");});
test("fausto -> faust", function() {deepEqual( Stem("fausto"), "faust");});
test("fautori -> fautor", function() {deepEqual( Stem("fautori"), "fautor");});
test("fautrice -> fautric", function() {deepEqual( Stem("fautrice"), "fautric");});
test("favalli -> favall", function() {deepEqual( Stem("favalli"), "favall");});
test("faverio -> faver", function() {deepEqual( Stem("faverio"), "faver");});
test("favero -> faver", function() {deepEqual( Stem("favero"), "faver");});
test("favi -> fav", function() {deepEqual( Stem("favi"), "fav");});
test("favilla -> favill", function() {deepEqual( Stem("favilla"), "favill");});
test("favo -> fav", function() {deepEqual( Stem("favo"), "fav");});
test("favole -> favol", function() {deepEqual( Stem("favole"), "favol");});
test("favoloso -> favol", function() {deepEqual( Stem("favoloso"), "favol");});
test("favor -> favor", function() {deepEqual( Stem("favor"), "favor");});
test("favore -> favor", function() {deepEqual( Stem("favore"), "favor");});
test("favoreggiamento -> favoregg", function() {deepEqual( Stem("favoreggiamento"), "favoregg");});
test("favorendo -> favor", function() {deepEqual( Stem("favorendo"), "favor");});
test("favorevole -> favorevol", function() {deepEqual( Stem("favorevole"), "favorevol");});
test("favorevoli -> favorevol", function() {deepEqual( Stem("favorevoli"), "favorevol");});
test("favorevolmente -> favorevol", function() {deepEqual( Stem("favorevolmente"), "favorevol");});
test("favorirà -> favor", function() {deepEqual( Stem("favorirà"), "favor");});
test("favorire -> favor", function() {deepEqual( Stem("favorire"), "favor");});
test("favorirete -> favor", function() {deepEqual( Stem("favorirete"), "favor");});
test("favorirlo -> favor", function() {deepEqual( Stem("favorirlo"), "favor");});
test("favorisce -> favor", function() {deepEqual( Stem("favorisce"), "favor");});
test("favorissero -> favor", function() {deepEqual( Stem("favorissero"), "favor");});
test("favorita -> favor", function() {deepEqual( Stem("favorita"), "favor");});
test("favoriti -> favor", function() {deepEqual( Stem("favoriti"), "favor");});
test("favorito -> favor", function() {deepEqual( Stem("favorito"), "favor");});
test("favre -> favr", function() {deepEqual( Stem("favre"), "favr");});
test("favrè -> favr", function() {deepEqual( Stem("favrè"), "favr");});
test("favuzza -> favuzz", function() {deepEqual( Stem("favuzza"), "favuzz");});
test("fax -> fax", function() {deepEqual( Stem("fax"), "fax");});
test("fazio -> faz", function() {deepEqual( Stem("fazio"), "faz");});
test("fazione -> fazion", function() {deepEqual( Stem("fazione"), "fazion");});
test("fazioni -> fazion", function() {deepEqual( Stem("fazioni"), "fazion");});
test("fazzoletti -> fazzolett", function() {deepEqual( Stem("fazzoletti"), "fazzolett");});
test("fazzoletto -> fazzolett", function() {deepEqual( Stem("fazzoletto"), "fazzolett");});
test("fazzuoli -> fazzuol", function() {deepEqual( Stem("fazzuoli"), "fazzuol");});
test("fb -> fb", function() {deepEqual( Stem("fb"), "fb");});
test("fbb -> fbb", function() {deepEqual( Stem("fbb"), "fbb");});
test("fc -> fc", function() {deepEqual( Stem("fc"), "fc");});
test("fcc -> fcc", function() {deepEqual( Stem("fcc"), "fcc");});
test("fdg -> fdg", function() {deepEqual( Stem("fdg"), "fdg");});
test("fe -> fe", function() {deepEqual( Stem("fe"), "fe");});
test("feb -> feb", function() {deepEqual( Stem("feb"), "feb");});
test("febbario -> febbar", function() {deepEqual( Stem("febbario"), "febbar");});
test("febbraio -> febbrai", function() {deepEqual( Stem("febbraio"), "febbrai");});
test("febbre -> febbr", function() {deepEqual( Stem("febbre"), "febbr");});
test("febbri -> febbr", function() {deepEqual( Stem("febbri"), "febbr");});
test("febbriciattole -> febbriciattol", function() {deepEqual( Stem("febbriciattole"), "febbriciattol");});
test("febbricitante -> febbricit", function() {deepEqual( Stem("febbricitante"), "febbricit");});
test("febbrone -> febbron", function() {deepEqual( Stem("febbrone"), "febbron");});
test("febraio -> febrai", function() {deepEqual( Stem("febraio"), "febrai");});
test("fece -> fec", function() {deepEqual( Stem("fece"), "fec");});
test("fecer -> fecer", function() {deepEqual( Stem("fecer"), "fecer");});
test("fecero -> fecer", function() {deepEqual( Stem("fecero"), "fecer");});
test("feci -> fec", function() {deepEqual( Stem("feci"), "fec");});
test("feciale -> fecial", function() {deepEqual( Stem("feciale"), "fecial");});
test("feciali -> fecial", function() {deepEqual( Stem("feciali"), "fecial");});
test("fecondazione -> fecond", function() {deepEqual( Stem("fecondazione"), "fecond");});
test("feconde -> fecond", function() {deepEqual( Stem("feconde"), "fecond");});
test("fed -> fed", function() {deepEqual( Stem("fed"), "fed");});
test("fedayn -> fedayn", function() {deepEqual( Stem("fedayn"), "fedayn");});
test("fede -> fed", function() {deepEqual( Stem("fede"), "fed");});
test("fedel -> fedel", function() {deepEqual( Stem("fedel"), "fedel");});
test("fedele -> fedel", function() {deepEqual( Stem("fedele"), "fedel");});
test("fedeli -> fedel", function() {deepEqual( Stem("fedeli"), "fedel");});
test("fedelissimi -> fedelissim", function() {deepEqual( Stem("fedelissimi"), "fedelissim");});
test("fedelmente -> fedel", function() {deepEqual( Stem("fedelmente"), "fedel");});
test("fedeltà -> fedelt", function() {deepEqual( Stem("fedeltà"), "fedelt");});
test("federal -> federal", function() {deepEqual( Stem("federal"), "federal");});
test("federale -> federal", function() {deepEqual( Stem("federale"), "federal");});
test("federalè -> federal", function() {deepEqual( Stem("federalè"), "federal");});
test("federali -> federal", function() {deepEqual( Stem("federali"), "federal");});
test("federalismo -> federal", function() {deepEqual( Stem("federalismo"), "federal");});
test("federalista -> federal", function() {deepEqual( Stem("federalista"), "federal");});
test("federaliste -> federal", function() {deepEqual( Stem("federaliste"), "federal");});
test("federalisti -> federal", function() {deepEqual( Stem("federalisti"), "federal");});
test("federativi -> feder", function() {deepEqual( Stem("federativi"), "feder");});
test("federativo -> feder", function() {deepEqual( Stem("federativo"), "feder");});
test("federazione -> feder", function() {deepEqual( Stem("federazione"), "feder");});
test("federcalcio -> federcalc", function() {deepEqual( Stem("federcalcio"), "federcalc");});
test("federconsorzi -> federconsorz", function() {deepEqual( Stem("federconsorzi"), "federconsorz");});
test("federcoopesca -> federcoopesc", function() {deepEqual( Stem("federcoopesca"), "federcoopesc");});
test("federica -> feder", function() {deepEqual( Stem("federica"), "feder");});
test("federici -> feder", function() {deepEqual( Stem("federici"), "feder");});
test("federico -> feder", function() {deepEqual( Stem("federico"), "feder");});
test("federigo -> federig", function() {deepEqual( Stem("federigo"), "federig");});
test("federmar -> federm", function() {deepEqual( Stem("federmar"), "federm");});
test("federmeccanica -> federmeccan", function() {deepEqual( Stem("federmeccanica"), "federmeccan");});
test("federpesca -> federpesc", function() {deepEqual( Stem("federpesca"), "federpesc");});
test("federtrasporti -> federtrasport", function() {deepEqual( Stem("federtrasporti"), "federtrasport");});
test("fedi -> fed", function() {deepEqual( Stem("fedi"), "fed");});
test("fedrale -> fedral", function() {deepEqual( Stem("fedrale"), "fedral");});
test("fedralismo -> fedral", function() {deepEqual( Stem("fedralismo"), "fedral");});
test("felci -> felc", function() {deepEqual( Stem("felci"), "felc");});
test("felice -> felic", function() {deepEqual( Stem("felice"), "felic");});
test("felicè -> felic", function() {deepEqual( Stem("felicè"), "felic");});
test("felicemente -> felic", function() {deepEqual( Stem("felicemente"), "felic");});
test("felici -> felic", function() {deepEqual( Stem("felici"), "felic");});
test("felicità -> felic", function() {deepEqual( Stem("felicità"), "felic");});
test("fellini -> fellin", function() {deepEqual( Stem("fellini"), "fellin");});
test("fellonesco -> fellonesc", function() {deepEqual( Stem("fellonesco"), "fellonesc");});
test("feltri -> feltr", function() {deepEqual( Stem("feltri"), "feltr");});
test("fem -> fem", function() {deepEqual( Stem("fem"), "fem");});
test("femmine -> femmin", function() {deepEqual( Stem("femmine"), "femmin");});
test("femminile -> femminil", function() {deepEqual( Stem("femminile"), "femminil");});
test("femminili -> femminil", function() {deepEqual( Stem("femminili"), "femminil");});
test("femmminili -> femmminil", function() {deepEqual( Stem("femmminili"), "femmminil");});
test("fendendo -> fend", function() {deepEqual( Stem("fendendo"), "fend");});
test("fendeva -> fend", function() {deepEqual( Stem("fendeva"), "fend");});
test("fenice -> fenic", function() {deepEqual( Stem("fenice"), "fenic");});
test("fenile -> fenil", function() {deepEqual( Stem("fenile"), "fenil");});
test("fenit -> fenit", function() {deepEqual( Stem("fenit"), "fenit");});
test("fenomeni -> fenomen", function() {deepEqual( Stem("fenomeni"), "fenomen");});
test("fenomeno -> fenomen", function() {deepEqual( Stem("fenomeno"), "fenomen");});
test("fenwick -> fenwick", function() {deepEqual( Stem("fenwick"), "fenwick");});
test("fercolo -> fercol", function() {deepEqual( Stem("fercolo"), "fercol");});
test("ferdinando -> ferdin", function() {deepEqual( Stem("ferdinando"), "ferdin");});
test("ferenc -> ferenc", function() {deepEqual( Stem("ferenc"), "ferenc");});
test("ferendo -> fer", function() {deepEqual( Stem("ferendo"), "fer");});
test("ferentes -> ferentes", function() {deepEqual( Stem("ferentes"), "ferentes");});
test("feretro -> feretr", function() {deepEqual( Stem("feretro"), "feretr");});
test("ferfin -> ferfin", function() {deepEqual( Stem("ferfin"), "ferfin");});
test("ferì -> fer", function() {deepEqual( Stem("ferì"), "fer");});
test("feria -> fer", function() {deepEqual( Stem("feria"), "fer");});
test("ferimento -> fer", function() {deepEqual( Stem("ferimento"), "fer");});
test("ferire -> fer", function() {deepEqual( Stem("ferire"), "fer");});
test("ferita -> fer", function() {deepEqual( Stem("ferita"), "fer");});
test("ferite -> fer", function() {deepEqual( Stem("ferite"), "fer");});
test("feriti -> fer", function() {deepEqual( Stem("feriti"), "fer");});
test("ferito -> fer", function() {deepEqual( Stem("ferito"), "fer");});
test("feritoia -> feritoi", function() {deepEqual( Stem("feritoia"), "feritoi");});
test("feritoie -> feritoi", function() {deepEqual( Stem("feritoie"), "feritoi");});
test("feritore -> feritor", function() {deepEqual( Stem("feritore"), "feritor");});
test("ferma -> ferm", function() {deepEqual( Stem("ferma"), "ferm");});
test("fermali -> fermal", function() {deepEqual( Stem("fermali"), "fermal");});
test("fermamente -> ferm", function() {deepEqual( Stem("fermamente"), "ferm");});
test("fermana -> ferman", function() {deepEqual( Stem("fermana"), "ferman");});
test("fermandola -> ferm", function() {deepEqual( Stem("fermandola"), "ferm");});
test("fermandosegli -> fermandosegl", function() {deepEqual( Stem("fermandosegli"), "fermandosegl");});
test("fermandosi -> ferm", function() {deepEqual( Stem("fermandosi"), "ferm");});
test("fermanelli -> fermanell", function() {deepEqual( Stem("fermanelli"), "fermanell");});
test("fermano -> ferm", function() {deepEqual( Stem("fermano"), "ferm");});
test("fermar -> ferm", function() {deepEqual( Stem("fermar"), "ferm");});
test("fermarci -> ferm", function() {deepEqual( Stem("fermarci"), "ferm");});
test("fermare -> ferm", function() {deepEqual( Stem("fermare"), "ferm");});
test("fermarlo -> ferm", function() {deepEqual( Stem("fermarlo"), "ferm");});
test("fermarmi -> ferm", function() {deepEqual( Stem("fermarmi"), "ferm");});
test("fermaron -> fermaron", function() {deepEqual( Stem("fermaron"), "fermaron");});
test("fermarono -> ferm", function() {deepEqual( Stem("fermarono"), "ferm");});
test("fermarsi -> ferm", function() {deepEqual( Stem("fermarsi"), "ferm");});
test("fermarvi -> ferm", function() {deepEqual( Stem("fermarvi"), "ferm");});
test("fermasse -> ferm", function() {deepEqual( Stem("fermasse"), "ferm");});
test("fermassero -> ferm", function() {deepEqual( Stem("fermassero"), "ferm");});
test("fermata -> ferm", function() {deepEqual( Stem("fermata"), "ferm");});
test("fermate -> ferm", function() {deepEqual( Stem("fermate"), "ferm");});
test("fermati -> ferm", function() {deepEqual( Stem("fermati"), "ferm");});
test("fermatina -> fermatin", function() {deepEqual( Stem("fermatina"), "fermatin");});
test("fermatine -> fermatin", function() {deepEqual( Stem("fermatine"), "fermatin");});
test("fermato -> ferm", function() {deepEqual( Stem("fermato"), "ferm");});
test("fermatosi -> fermat", function() {deepEqual( Stem("fermatosi"), "fermat");});
test("fermava -> ferm", function() {deepEqual( Stem("fermava"), "ferm");});
test("fermavano -> ferm", function() {deepEqual( Stem("fermavano"), "ferm");});
test("ferme -> ferm", function() {deepEqual( Stem("ferme"), "ferm");});
test("fermerà -> ferm", function() {deepEqual( Stem("fermerà"), "ferm");});
test("fermeremo -> ferm", function() {deepEqual( Stem("fermeremo"), "ferm");});
test("fermerò -> ferm", function() {deepEqual( Stem("fermerò"), "ferm");});
test("fermezza -> fermezz", function() {deepEqual( Stem("fermezza"), "fermezz");});
test("fermi -> ferm", function() {deepEqual( Stem("fermi"), "ferm");});
test("fermiamo -> ferm", function() {deepEqual( Stem("fermiamo"), "ferm");});
test("fermissimamente -> fermissim", function() {deepEqual( Stem("fermissimamente"), "fermissim");});
test("fermissimo -> fermissim", function() {deepEqual( Stem("fermissimo"), "fermissim");});
test("fermo -> ferm", function() {deepEqual( Stem("fermo"), "ferm");});
test("fermò -> ferm", function() {deepEqual( Stem("fermò"), "ferm");});
test("fernanda -> fernand", function() {deepEqual( Stem("fernanda"), "fernand");});
test("fernandez -> fernandez", function() {deepEqual( Stem("fernandez"), "fernandez");});
test("fernando -> fern", function() {deepEqual( Stem("fernando"), "fern");});
test("feroce -> feroc", function() {deepEqual( Stem("feroce"), "feroc");});
test("ferocemente -> feroc", function() {deepEqual( Stem("ferocemente"), "feroc");});
test("ferocia -> feroc", function() {deepEqual( Stem("ferocia"), "feroc");});
test("ferrante -> ferrant", function() {deepEqual( Stem("ferrante"), "ferrant");});
test("ferrara -> ferrar", function() {deepEqual( Stem("ferrara"), "ferrar");});
test("ferrarese -> ferrares", function() {deepEqual( Stem("ferrarese"), "ferrares");});
test("ferraresi -> ferrares", function() {deepEqual( Stem("ferraresi"), "ferrares");});
test("ferrari -> ferrar", function() {deepEqual( Stem("ferrari"), "ferrar");});
test("ferraris -> ferraris", function() {deepEqual( Stem("ferraris"), "ferraris");});
test("ferrati -> ferr", function() {deepEqual( Stem("ferrati"), "ferr");});
test("ferrea -> ferre", function() {deepEqual( Stem("ferrea"), "ferre");});
test("ferreira -> ferreir", function() {deepEqual( Stem("ferreira"), "ferreir");});
test("ferreo -> ferre", function() {deepEqual( Stem("ferreo"), "ferre");});
test("ferrer -> ferrer", function() {deepEqual( Stem("ferrer"), "ferrer");});
test("ferrero -> ferrer", function() {deepEqual( Stem("ferrero"), "ferrer");});
test("ferri -> ferr", function() {deepEqual( Stem("ferri"), "ferr");});
test("ferrigno -> ferrign", function() {deepEqual( Stem("ferrigno"), "ferrign");});
test("ferro -> ferr", function() {deepEqual( Stem("ferro"), "ferr");});
test("ferron -> ferron", function() {deepEqual( Stem("ferron"), "ferron");});
test("ferroni -> ferron", function() {deepEqual( Stem("ferroni"), "ferron");});
test("ferroso -> ferros", function() {deepEqual( Stem("ferroso"), "ferros");});
test("ferrovia -> ferrov", function() {deepEqual( Stem("ferrovia"), "ferrov");});
test("ferroviari -> ferroviar", function() {deepEqual( Stem("ferroviari"), "ferroviar");});
test("ferroviaria -> ferroviar", function() {deepEqual( Stem("ferroviaria"), "ferroviar");});
test("ferroviarie -> ferroviar", function() {deepEqual( Stem("ferroviarie"), "ferroviar");});
test("ferroviario -> ferroviar", function() {deepEqual( Stem("ferroviario"), "ferroviar");});
test("ferrovie -> ferrov", function() {deepEqual( Stem("ferrovie"), "ferrov");});
test("ferruzzi -> ferruzz", function() {deepEqual( Stem("ferruzzi"), "ferruzz");});
test("fervidamente -> fervid", function() {deepEqual( Stem("fervidamente"), "fervid");});
test("fervore -> fervor", function() {deepEqual( Stem("fervore"), "fervor");});
test("fessa -> fess", function() {deepEqual( Stem("fessa"), "fess");});
test("fessi -> fess", function() {deepEqual( Stem("fessi"), "fess");});
test("fesso -> fess", function() {deepEqual( Stem("fesso"), "fess");});
test("fessolino -> fessolin", function() {deepEqual( Stem("fessolino"), "fessolin");});
test("fessure -> fessur", function() {deepEqual( Stem("fessure"), "fessur");});
test("festa -> fest", function() {deepEqual( Stem("festa"), "fest");});
test("feste -> fest", function() {deepEqual( Stem("feste"), "fest");});
test("festeggerà -> festegg", function() {deepEqual( Stem("festeggerà"), "festegg");});
test("festeggia -> festegg", function() {deepEqual( Stem("festeggia"), "festegg");});
test("festeggiamenti -> festegg", function() {deepEqual( Stem("festeggiamenti"), "festegg");});
test("festeggiare -> festegg", function() {deepEqual( Stem("festeggiare"), "festegg");});
test("festeggiata -> festegg", function() {deepEqual( Stem("festeggiata"), "festegg");});
test("festeggiatissimo -> festeggiatissim", function() {deepEqual( Stem("festeggiatissimo"), "festeggiatissim");});
test("festini -> festin", function() {deepEqual( Stem("festini"), "festin");});
test("festiva -> fest", function() {deepEqual( Stem("festiva"), "fest");});
test("festival -> festival", function() {deepEqual( Stem("festival"), "festival");});
test("fetente -> fetent", function() {deepEqual( Stem("fetente"), "fetent");});
test("fetor -> fetor", function() {deepEqual( Stem("fetor"), "fetor");});
test("fetta -> fett", function() {deepEqual( Stem("fetta"), "fett");});
test("fette -> fett", function() {deepEqual( Stem("fette"), "fett");});
test("feudatarii -> feudatar", function() {deepEqual( Stem("feudatarii"), "feudatar");});
test("feudatario -> feudatar", function() {deepEqual( Stem("feudatario"), "feudatar");});
test("feudi -> feud", function() {deepEqual( Stem("feudi"), "feud");});
test("feudo -> feud", function() {deepEqual( Stem("feudo"), "feud");});
test("ff -> ff", function() {deepEqual( Stem("ff"), "ff");});
test("fg -> fg", function() {deepEqual( Stem("fg"), "fg");});
test("fi -> fi", function() {deepEqual( Stem("fi"), "fi");});
test("fiaba -> fiab", function() {deepEqual( Stem("fiaba"), "fiab");});
test("fiabe -> fiab", function() {deepEqual( Stem("fiabe"), "fiab");});
test("fiacca -> fiacc", function() {deepEqual( Stem("fiacca"), "fiacc");});
test("fiaccate -> fiacc", function() {deepEqual( Stem("fiaccate"), "fiacc");});
test("fiacchezza -> fiacchezz", function() {deepEqual( Stem("fiacchezza"), "fiacchezz");});
test("fiacchi -> fiacc", function() {deepEqual( Stem("fiacchi"), "fiacc");});
test("fiacco -> fiacc", function() {deepEqual( Stem("fiacco"), "fiacc");});
test("fiaccole -> fiaccol", function() {deepEqual( Stem("fiaccole"), "fiaccol");});
test("fialdini -> fialdin", function() {deepEqual( Stem("fialdini"), "fialdin");});
test("fiamma -> fiamm", function() {deepEqual( Stem("fiamma"), "fiamm");});
test("fiammà -> fiamm", function() {deepEqual( Stem("fiammà"), "fiamm");});
test("fiammata -> fiamm", function() {deepEqual( Stem("fiammata"), "fiamm");});
test("fiammate -> fiamm", function() {deepEqual( Stem("fiammate"), "fiamm");});
test("fiamme -> fiamm", function() {deepEqual( Stem("fiamme"), "fiamm");});
test("fiancheggiata -> fianchegg", function() {deepEqual( Stem("fiancheggiata"), "fianchegg");});
test("fiancheggiate -> fianchegg", function() {deepEqual( Stem("fiancheggiate"), "fianchegg");});
test("fianchi -> fianc", function() {deepEqual( Stem("fianchi"), "fianc");});
test("fianco -> fianc", function() {deepEqual( Stem("fianco"), "fianc");});
test("fiandra -> fiandr", function() {deepEqual( Stem("fiandra"), "fiandr");});
test("fiandre -> fiandr", function() {deepEqual( Stem("fiandre"), "fiandr");});
test("fiar -> fiar", function() {deepEqual( Stem("fiar"), "fiar");});
test("fiaschetti -> fiaschett", function() {deepEqual( Stem("fiaschetti"), "fiaschett");});
test("fiaschetto -> fiaschett", function() {deepEqual( Stem("fiaschetto"), "fiaschett");});
test("fiaschi -> fiasc", function() {deepEqual( Stem("fiaschi"), "fiasc");});
test("fiasco -> fiasc", function() {deepEqual( Stem("fiasco"), "fiasc");});
test("fiat -> fiat", function() {deepEqual( Stem("fiat"), "fiat");});
test("fiata -> fiat", function() {deepEqual( Stem("fiata"), "fiat");});
test("fiatar -> fiat", function() {deepEqual( Stem("fiatar"), "fiat");});
test("fiatare -> fiat", function() {deepEqual( Stem("fiatare"), "fiat");});
test("fiatava -> fiat", function() {deepEqual( Stem("fiatava"), "fiat");});
test("fiaterebbe -> fiat", function() {deepEqual( Stem("fiaterebbe"), "fiat");});
test("fiato -> fiat", function() {deepEqual( Stem("fiato"), "fiat");});
test("fiatò -> fiat", function() {deepEqual( Stem("fiatò"), "fiat");});
test("fibra -> fibr", function() {deepEqual( Stem("fibra"), "fibr");});
test("fibre -> fibr", function() {deepEqual( Stem("fibre"), "fibr");});
test("ficca -> ficc", function() {deepEqual( Stem("ficca"), "ficc");});
test("ficcadenti -> ficcadent", function() {deepEqual( Stem("ficcadenti"), "ficcadent");});
test("ficcan -> ficcan", function() {deepEqual( Stem("ficcan"), "ficcan");});
test("ficcandogli -> ficc", function() {deepEqual( Stem("ficcandogli"), "ficc");});
test("ficcandosi -> ficc", function() {deepEqual( Stem("ficcandosi"), "ficc");});
test("ficcare -> ficc", function() {deepEqual( Stem("ficcare"), "ficc");});
test("ficcata -> ficc", function() {deepEqual( Stem("ficcata"), "ficc");});
test("ficcati -> ficc", function() {deepEqual( Stem("ficcati"), "ficc");});
test("ficcò -> ficc", function() {deepEqual( Stem("ficcò"), "ficc");});
test("fiches -> fiches", function() {deepEqual( Stem("fiches"), "fiches");});
test("fichi -> fich", function() {deepEqual( Stem("fichi"), "fich");});
test("fico -> fic", function() {deepEqual( Stem("fico"), "fic");});
test("fictas -> fictas", function() {deepEqual( Stem("fictas"), "fictas");});
test("fida -> fid", function() {deepEqual( Stem("fida"), "fid");});
test("fidando -> fid", function() {deepEqual( Stem("fidando"), "fid");});
test("fidanzata -> fidanz", function() {deepEqual( Stem("fidanzata"), "fidanz");});
test("fidanzato -> fidanz", function() {deepEqual( Stem("fidanzato"), "fidanz");});
test("fidare -> fid", function() {deepEqual( Stem("fidare"), "fid");});
test("fidarmi -> fid", function() {deepEqual( Stem("fidarmi"), "fid");});
test("fidarsi -> fid", function() {deepEqual( Stem("fidarsi"), "fid");});
test("fidarvi -> fid", function() {deepEqual( Stem("fidarvi"), "fid");});
test("fidata -> fid", function() {deepEqual( Stem("fidata"), "fid");});
test("fidate -> fid", function() {deepEqual( Stem("fidate"), "fid");});
test("fidatevi -> fidat", function() {deepEqual( Stem("fidatevi"), "fidat");});
test("fidati -> fid", function() {deepEqual( Stem("fidati"), "fid");});
test("fidatissimo -> fidatissim", function() {deepEqual( Stem("fidatissimo"), "fidatissim");});
test("fidato -> fid", function() {deepEqual( Stem("fidato"), "fid");});
test("fidecommisso -> fidecommiss", function() {deepEqual( Stem("fidecommisso"), "fidecommiss");});
test("fidei -> fide", function() {deepEqual( Stem("fidei"), "fide");});
test("fideuram -> fideuram", function() {deepEqual( Stem("fideuram"), "fideuram");});
test("fidi -> fid", function() {deepEqual( Stem("fidi"), "fid");});
test("fidiamo -> fid", function() {deepEqual( Stem("fidiamo"), "fid");});
test("fidis -> fidis", function() {deepEqual( Stem("fidis"), "fidis");});
test("fido -> fid", function() {deepEqual( Stem("fido"), "fid");});
test("fidone -> fidon", function() {deepEqual( Stem("fidone"), "fidon");});
test("fiducia -> fiduc", function() {deepEqual( Stem("fiducia"), "fiduc");});
test("fiducià -> fiduc", function() {deepEqual( Stem("fiducià"), "fiduc");});
test("fiduciario -> fiduciar", function() {deepEqual( Stem("fiduciario"), "fiduciar");});
test("fiele -> fiel", function() {deepEqual( Stem("fiele"), "fiel");});
test("fieno -> fien", function() {deepEqual( Stem("fieno"), "fien");});
test("fiera -> fier", function() {deepEqual( Stem("fiera"), "fier");});
test("fieramente -> fier", function() {deepEqual( Stem("fieramente"), "fier");});
test("fiere -> fier", function() {deepEqual( Stem("fiere"), "fier");});
test("fierezza -> fierezz", function() {deepEqual( Stem("fierezza"), "fierezz");});
test("fieri -> fier", function() {deepEqual( Stem("fieri"), "fier");});
test("fieristica -> fierist", function() {deepEqual( Stem("fieristica"), "fierist");});
test("fieristiche -> fierist", function() {deepEqual( Stem("fieristiche"), "fierist");});
test("fieristico -> fierist", function() {deepEqual( Stem("fieristico"), "fierist");});
test("fiesole -> fiesol", function() {deepEqual( Stem("fiesole"), "fiesol");});
test("figli -> figl", function() {deepEqual( Stem("figli"), "figl");});
test("figlia -> figl", function() {deepEqual( Stem("figlia"), "figl");});
test("figlie -> figl", function() {deepEqual( Stem("figlie"), "figl");});
test("figlio -> figl", function() {deepEqual( Stem("figlio"), "figl");});
test("figliolanza -> figliol", function() {deepEqual( Stem("figliolanza"), "figliol");});
test("figlioletta -> figliolett", function() {deepEqual( Stem("figlioletta"), "figliolett");});
test("figlioletto -> figliolett", function() {deepEqual( Stem("figlioletto"), "figliolett");});
test("figliuol -> figliuol", function() {deepEqual( Stem("figliuol"), "figliuol");});
test("figliuola -> figliuol", function() {deepEqual( Stem("figliuola"), "figliuol");});
test("figliuoli -> figliuol", function() {deepEqual( Stem("figliuoli"), "figliuol");});
test("figliuolo -> figliuol", function() {deepEqual( Stem("figliuolo"), "figliuol");});
test("fignolo -> fignol", function() {deepEqual( Stem("fignolo"), "fignol");});
test("figueroa -> figuero", function() {deepEqual( Stem("figueroa"), "figuero");});
test("figura -> figur", function() {deepEqual( Stem("figura"), "figur");});
test("figuracce -> figuracc", function() {deepEqual( Stem("figuracce"), "figuracc");});
test("figurando -> figur", function() {deepEqual( Stem("figurando"), "figur");});
test("figurano -> figur", function() {deepEqual( Stem("figurano"), "figur");});
test("figurare -> figur", function() {deepEqual( Stem("figurare"), "figur");});
test("figurarsi -> figur", function() {deepEqual( Stem("figurarsi"), "figur");});
test("figuratevi -> figurat", function() {deepEqual( Stem("figuratevi"), "figurat");});
test("figurati -> figur", function() {deepEqual( Stem("figurati"), "figur");});
test("figurato -> figur", function() {deepEqual( Stem("figurato"), "figur");});
test("figurava -> figur", function() {deepEqual( Stem("figurava"), "figur");});
test("figuravano -> figur", function() {deepEqual( Stem("figuravano"), "figur");});
test("figure -> figur", function() {deepEqual( Stem("figure"), "figur");});
test("figureranno -> figur", function() {deepEqual( Stem("figureranno"), "figur");});
test("figuri -> figur", function() {deepEqual( Stem("figuri"), "figur");});
test("figuriamoci -> figuriamoc", function() {deepEqual( Stem("figuriamoci"), "figuriamoc");});
test("figurine -> figurin", function() {deepEqual( Stem("figurine"), "figurin");});
test("figuro -> figur", function() {deepEqual( Stem("figuro"), "figur");});
test("figurò -> figur", function() {deepEqual( Stem("figurò"), "figur");});
test("fikret -> fikret", function() {deepEqual( Stem("fikret"), "fikret");});
test("fil -> fil", function() {deepEqual( Stem("fil"), "fil");});
test("fila -> fil", function() {deepEqual( Stem("fila"), "fil");});
test("filadelfia -> filadelf", function() {deepEqual( Stem("filadelfia"), "filadelf");});
test("filanda -> filand", function() {deepEqual( Stem("filanda"), "filand");});
test("filari -> filar", function() {deepEqual( Stem("filari"), "filar");});
test("filarmonica -> filarmon", function() {deepEqual( Stem("filarmonica"), "filarmon");});
test("filastrocca -> filastrocc", function() {deepEqual( Stem("filastrocca"), "filastrocc");});
test("filaticcio -> filaticc", function() {deepEqual( Stem("filaticcio"), "filaticc");});
test("filato -> fil", function() {deepEqual( Stem("filato"), "fil");});
test("filatoio -> filatoi", function() {deepEqual( Stem("filatoio"), "filatoi");});
test("filatore -> filator", function() {deepEqual( Stem("filatore"), "filator");});
test("filatura -> filatur", function() {deepEqual( Stem("filatura"), "filatur");});
test("file -> fil", function() {deepEqual( Stem("file"), "fil");});
test("files -> files", function() {deepEqual( Stem("files"), "files");});
test("fili -> fil", function() {deepEqual( Stem("fili"), "fil");});
test("filiali -> filial", function() {deepEqual( Stem("filiali"), "filial");});
test("filicano -> filic", function() {deepEqual( Stem("filicano"), "filic");});
test("filigrana -> filigran", function() {deepEqual( Stem("filigrana"), "filigran");});
test("filipovic -> filipovic", function() {deepEqual( Stem("filipovic"), "filipovic");});
test("filippi -> filipp", function() {deepEqual( Stem("filippi"), "filipp");});
test("filippine -> filippin", function() {deepEqual( Stem("filippine"), "filippin");});
test("filippini -> filippin", function() {deepEqual( Stem("filippini"), "filippin");});
test("filippo -> filipp", function() {deepEqual( Stem("filippo"), "filipp");});
test("film -> film", function() {deepEqual( Stem("film"), "film");});
test("filmato -> film", function() {deepEqual( Stem("filmato"), "film");});
test("filmissimi -> filmissim", function() {deepEqual( Stem("filmissimi"), "filmissim");});
test("filmtv -> filmtv", function() {deepEqual( Stem("filmtv"), "filmtv");});
test("filo -> fil", function() {deepEqual( Stem("filo"), "fil");});
test("filobus -> filobus", function() {deepEqual( Stem("filobus"), "filobus");});
test("filone -> filon", function() {deepEqual( Stem("filone"), "filon");});
test("filoni -> filon", function() {deepEqual( Stem("filoni"), "filon");});
test("filoserbo -> filoserb", function() {deepEqual( Stem("filoserbo"), "filoserb");});
test("filosofi -> filosof", function() {deepEqual( Stem("filosofi"), "filosof");});
test("filosofia -> filosof", function() {deepEqual( Stem("filosofia"), "filosof");});
test("filosofo -> filosof", function() {deepEqual( Stem("filosofo"), "filosof");});
test("filt -> filt", function() {deepEqual( Stem("filt"), "filt");});
test("fim -> fim", function() {deepEqual( Stem("fim"), "fim");});
test("fimpar -> fimp", function() {deepEqual( Stem("fimpar"), "fimp");});
test("fin -> fin", function() {deepEqual( Stem("fin"), "fin");});
test("finale -> final", function() {deepEqual( Stem("finale"), "final");});
test("finali -> final", function() {deepEqual( Stem("finali"), "final");});
test("finaliste -> final", function() {deepEqual( Stem("finaliste"), "final");});
test("finalisti -> final", function() {deepEqual( Stem("finalisti"), "final");});
test("finalità -> final", function() {deepEqual( Stem("finalità"), "final");});
test("finalizzata -> finalizz", function() {deepEqual( Stem("finalizzata"), "finalizz");});
test("finalizzati -> finalizz", function() {deepEqual( Stem("finalizzati"), "finalizz");});
test("finalizzato -> finalizz", function() {deepEqual( Stem("finalizzato"), "finalizz");});
test("finalmente -> final", function() {deepEqual( Stem("finalmente"), "final");});
test("finan -> finan", function() {deepEqual( Stem("finan"), "finan");});
test("finance -> financ", function() {deepEqual( Stem("finance"), "financ");});
test("financing -> financing", function() {deepEqual( Stem("financing"), "financing");});
test("finansur -> finansur", function() {deepEqual( Stem("finansur"), "finansur");});
test("finanz -> finanz", function() {deepEqual( Stem("finanz"), "finanz");});
test("finanza -> finanz", function() {deepEqual( Stem("finanza"), "finanz");});
test("finanze -> finanz", function() {deepEqual( Stem("finanze"), "finanz");});
test("finanzia -> finanz", function() {deepEqual( Stem("finanzia"), "finanz");});
test("finanziamenti -> finanz", function() {deepEqual( Stem("finanziamenti"), "finanz");});
test("finanziamento -> finanz", function() {deepEqual( Stem("finanziamento"), "finanz");});
test("finanziando -> finanz", function() {deepEqual( Stem("finanziando"), "finanz");});
test("finanziare -> finanz", function() {deepEqual( Stem("finanziare"), "finanz");});
test("finanziari -> finanziar", function() {deepEqual( Stem("finanziari"), "finanziar");});
test("finanziaria -> finanziar", function() {deepEqual( Stem("finanziaria"), "finanziar");});
test("finanziarie -> finanziar", function() {deepEqual( Stem("finanziarie"), "finanziar");});
test("finanziario -> finanziar", function() {deepEqual( Stem("finanziario"), "finanziar");});
test("finanziarla -> finanz", function() {deepEqual( Stem("finanziarla"), "finanz");});
test("finanziati -> finanz", function() {deepEqual( Stem("finanziati"), "finanz");});
test("finanziato -> finanz", function() {deepEqual( Stem("finanziato"), "finanz");});
test("finanziatori -> finanz", function() {deepEqual( Stem("finanziatori"), "finanz");});
test("finanziemnti -> finanziemnt", function() {deepEqual( Stem("finanziemnti"), "finanziemnt");});
test("finanziere -> finanz", function() {deepEqual( Stem("finanziere"), "finanz");});
test("finarte -> finart", function() {deepEqual( Stem("finarte"), "finart");});
test("fincantieri -> fincantier", function() {deepEqual( Stem("fincantieri"), "fincantier");});
test("fincasa -> fincas", function() {deepEqual( Stem("fincasa"), "fincas");});
test("finch -> finc", function() {deepEqual( Stem("finch"), "finc");});
test("finché -> finc", function() {deepEqual( Stem("finché"), "finc");});
test("finchè -> finc", function() {deepEqual( Stem("finchè"), "finc");});
test("fine -> fin", function() {deepEqual( Stem("fine"), "fin");});
test("finendo -> fin", function() {deepEqual( Stem("finendo"), "fin");});
test("finestra -> finestr", function() {deepEqual( Stem("finestra"), "finestr");});
test("finestre -> finestr", function() {deepEqual( Stem("finestre"), "finestr");});
test("finestrina -> finestrin", function() {deepEqual( Stem("finestrina"), "finestrin");});
test("finestrino -> finestrin", function() {deepEqual( Stem("finestrino"), "finestrin");});
test("finezze -> finezz", function() {deepEqual( Stem("finezze"), "finezz");});
test("fingendo -> fing", function() {deepEqual( Stem("fingendo"), "fing");});
test("fingendosi -> fing", function() {deepEqual( Stem("fingendosi"), "fing");});
test("fini -> fin", function() {deepEqual( Stem("fini"), "fin");});
test("finì -> fin", function() {deepEqual( Stem("finì"), "fin");});
test("finiamola -> finiamol", function() {deepEqual( Stem("finiamola"), "finiamol");});
test("fininvest -> fininvest", function() {deepEqual( Stem("fininvest"), "fininvest");});
test("finir -> fin", function() {deepEqual( Stem("finir"), "fin");});
test("finirà -> fin", function() {deepEqual( Stem("finirà"), "fin");});
test("finire -> fin", function() {deepEqual( Stem("finire"), "fin");});
test("finirebbe -> fin", function() {deepEqual( Stem("finirebbe"), "fin");});
test("finirebbero -> fin", function() {deepEqual( Stem("finirebbero"), "fin");});
test("finiremmo -> fin", function() {deepEqual( Stem("finiremmo"), "fin");});
test("finirla -> fin", function() {deepEqual( Stem("finirla"), "fin");});
test("finirlo -> fin", function() {deepEqual( Stem("finirlo"), "fin");});
test("finirò -> fin", function() {deepEqual( Stem("finirò"), "fin");});
test("finirono -> fin", function() {deepEqual( Stem("finirono"), "fin");});
test("finirsi -> fin", function() {deepEqual( Stem("finirsi"), "fin");});
test("finisca -> fin", function() {deepEqual( Stem("finisca"), "fin");});
test("finiscano -> fin", function() {deepEqual( Stem("finiscano"), "fin");});
test("finisce -> fin", function() {deepEqual( Stem("finisce"), "fin");});
test("finisco -> fin", function() {deepEqual( Stem("finisco"), "fin");});
test("finiscono -> fin", function() {deepEqual( Stem("finiscono"), "fin");});
test("finisse -> finiss", function() {deepEqual( Stem("finisse"), "finiss");});
test("finissimo -> finissim", function() {deepEqual( Stem("finissimo"), "finissim");});
test("finita -> fin", function() {deepEqual( Stem("finita"), "fin");});
test("finite -> fin", function() {deepEqual( Stem("finite"), "fin");});
test("finitela -> finitel", function() {deepEqual( Stem("finitela"), "finitel");});
test("finitezza -> finitezz", function() {deepEqual( Stem("finitezza"), "finitezz");});
test("finiti -> fin", function() {deepEqual( Stem("finiti"), "fin");});
test("finito -> fin", function() {deepEqual( Stem("finito"), "fin");});
test("finiva -> fin", function() {deepEqual( Stem("finiva"), "fin");});
test("finivan -> finivan", function() {deepEqual( Stem("finivan"), "finivan");});
test("finivano -> fin", function() {deepEqual( Stem("finivano"), "fin");});
test("finlandese -> finlandes", function() {deepEqual( Stem("finlandese"), "finlandes");});
test("finlandia -> finland", function() {deepEqual( Stem("finlandia"), "finland");});
test("finmare -> finm", function() {deepEqual( Stem("finmare"), "finm");});
test("finmark -> finmark", function() {deepEqual( Stem("finmark"), "finmark");});
test("finmeccanica -> finmeccan", function() {deepEqual( Stem("finmeccanica"), "finmeccan");});
test("fino -> fin", function() {deepEqual( Stem("fino"), "fin");});
test("finora -> finor", function() {deepEqual( Stem("finora"), "finor");});
test("finrex -> finrex", function() {deepEqual( Stem("finrex"), "finrex");});
test("finse -> fins", function() {deepEqual( Stem("finse"), "fins");});
test("finsur -> finsur", function() {deepEqual( Stem("finsur"), "finsur");});
test("finta -> fint", function() {deepEqual( Stem("finta"), "fint");});
test("finti -> fint", function() {deepEqual( Stem("finti"), "fint");});
test("finto -> fint", function() {deepEqual( Stem("finto"), "fint");});
test("finzi -> finz", function() {deepEqual( Stem("finzi"), "finz");});
test("finzioni -> finzion", function() {deepEqual( Stem("finzioni"), "finzion");});
test("fio -> fio", function() {deepEqual( Stem("fio"), "fio");});
test("fioca -> fioc", function() {deepEqual( Stem("fioca"), "fioc");});
test("fioccano -> fiocc", function() {deepEqual( Stem("fioccano"), "fiocc");});
test("fioccavan -> fioccavan", function() {deepEqual( Stem("fioccavan"), "fioccavan");});
test("fiocchi -> fiocc", function() {deepEqual( Stem("fiocchi"), "fiocc");});
test("fiochi -> fioc", function() {deepEqual( Stem("fiochi"), "fioc");});
test("fioco -> fioc", function() {deepEqual( Stem("fioco"), "fioc");});
test("fiom -> fiom", function() {deepEqual( Stem("fiom"), "fiom");});
test("fionda -> fiond", function() {deepEqual( Stem("fionda"), "fiond");});
test("fior -> fior", function() {deepEqual( Stem("fior"), "fior");});
test("fiore -> fior", function() {deepEqual( Stem("fiore"), "fior");});
test("fiorella -> fiorell", function() {deepEqual( Stem("fiorella"), "fiorell");});
test("fiorellini -> fiorellin", function() {deepEqual( Stem("fiorellini"), "fiorellin");});
test("fiorellino -> fiorellin", function() {deepEqual( Stem("fiorellino"), "fiorellin");});
test("fiorello -> fiorell", function() {deepEqual( Stem("fiorello"), "fiorell");});
test("fiorentina -> fiorentin", function() {deepEqual( Stem("fiorentina"), "fiorentin");});
test("fiorentino -> fiorentin", function() {deepEqual( Stem("fiorentino"), "fiorentin");});
test("fiorenzuola -> fiorenzuol", function() {deepEqual( Stem("fiorenzuola"), "fiorenzuol");});
test("fioretto -> fiorett", function() {deepEqual( Stem("fioretto"), "fiorett");});
test("fiori -> fior", function() {deepEqual( Stem("fiori"), "fior");});
test("fiorì -> fior", function() {deepEqual( Stem("fiorì"), "fior");});
test("fiorino -> fiorin", function() {deepEqual( Stem("fiorino"), "fiorin");});
test("fiorita -> fior", function() {deepEqual( Stem("fiorita"), "fior");});
test("fiotto -> fiott", function() {deepEqual( Stem("fiotto"), "fiott");});
test("fir -> fir", function() {deepEqual( Stem("fir"), "fir");});
test("firenze -> firenz", function() {deepEqual( Stem("firenze"), "firenz");});
test("firicano -> firic", function() {deepEqual( Stem("firicano"), "firic");});
test("firma -> firm", function() {deepEqual( Stem("firma"), "firm");});
test("firmare -> firm", function() {deepEqual( Stem("firmare"), "firm");});
test("firmata -> firm", function() {deepEqual( Stem("firmata"), "firm");});
test("firmatari -> firmatar", function() {deepEqual( Stem("firmatari"), "firmatar");});
test("firmatario -> firmatar", function() {deepEqual( Stem("firmatario"), "firmatar");});
test("firmatati -> firmat", function() {deepEqual( Stem("firmatati"), "firmat");});
test("firmate -> firm", function() {deepEqual( Stem("firmate"), "firm");});
test("firmato -> firm", function() {deepEqual( Stem("firmato"), "firm");});
test("firme -> firm", function() {deepEqual( Stem("firme"), "firm");});
test("firmeranno -> firm", function() {deepEqual( Stem("firmeranno"), "firm");});
test("firmiamo -> firm", function() {deepEqual( Stem("firmiamo"), "firm");});
test("firrincieli -> firrinciel", function() {deepEqual( Stem("firrincieli"), "firrinciel");});
test("fis -> fis", function() {deepEqual( Stem("fis"), "fis");});
test("fisafs -> fisafs", function() {deepEqual( Stem("fisafs"), "fisafs");});
test("fisarmonica -> fisarmon", function() {deepEqual( Stem("fisarmonica"), "fisarmon");});
test("fiscale -> fiscal", function() {deepEqual( Stem("fiscale"), "fiscal");});
test("fiscali -> fiscal", function() {deepEqual( Stem("fiscali"), "fiscal");});
test("fiscalità -> fiscal", function() {deepEqual( Stem("fiscalità"), "fiscal");});
test("fiscambi -> fiscamb", function() {deepEqual( Stem("fiscambi"), "fiscamb");});
test("fischi -> fisc", function() {deepEqual( Stem("fischi"), "fisc");});
test("fischiando -> fisc", function() {deepEqual( Stem("fischiando"), "fisc");});
test("fischiare -> fisc", function() {deepEqual( Stem("fischiare"), "fisc");});
test("fischiate -> fisc", function() {deepEqual( Stem("fischiate"), "fisc");});
test("fischiato -> fisc", function() {deepEqual( Stem("fischiato"), "fisc");});
test("fischietti -> fischiett", function() {deepEqual( Stem("fischietti"), "fischiett");});
test("fischio -> fisc", function() {deepEqual( Stem("fischio"), "fisc");});
test("fischìo -> fischì", function() {deepEqual( Stem("fischìo"), "fischì");});
test("fischler -> fischler", function() {deepEqual( Stem("fischler"), "fischler");});
test("fisco -> fisc", function() {deepEqual( Stem("fisco"), "fisc");});
test("fisher -> fisher", function() {deepEqual( Stem("fisher"), "fisher");});
test("fisia -> fis", function() {deepEqual( Stem("fisia"), "fis");});
test("fisica -> fisic", function() {deepEqual( Stem("fisica"), "fisic");});
test("fisicamente -> fisic", function() {deepEqual( Stem("fisicamente"), "fisic");});
test("fisiche -> fisic", function() {deepEqual( Stem("fisiche"), "fisic");});
test("fisichella -> fisichell", function() {deepEqual( Stem("fisichella"), "fisichell");});
test("fisici -> fisic", function() {deepEqual( Stem("fisici"), "fisic");});
test("fisico -> fisic", function() {deepEqual( Stem("fisico"), "fisic");});
test("fisionomia -> fisionom", function() {deepEqual( Stem("fisionomia"), "fisionom");});
test("fisionomici -> fisionom", function() {deepEqual( Stem("fisionomici"), "fisionom");});
test("fisonomia -> fisonom", function() {deepEqual( Stem("fisonomia"), "fisonom");});
test("fissa -> fiss", function() {deepEqual( Stem("fissa"), "fiss");});
test("fissan -> fissan", function() {deepEqual( Stem("fissan"), "fissan");});
test("fissando -> fiss", function() {deepEqual( Stem("fissando"), "fiss");});
test("fissandolo -> fiss", function() {deepEqual( Stem("fissandolo"), "fiss");});
test("fissar -> fiss", function() {deepEqual( Stem("fissar"), "fiss");});
test("fissare -> fiss", function() {deepEqual( Stem("fissare"), "fiss");});
test("fissarlo -> fiss", function() {deepEqual( Stem("fissarlo"), "fiss");});
test("fissata -> fiss", function() {deepEqual( Stem("fissata"), "fiss");});
test("fissate -> fiss", function() {deepEqual( Stem("fissate"), "fiss");});
test("fissati -> fiss", function() {deepEqual( Stem("fissati"), "fiss");});
test("fissato -> fiss", function() {deepEqual( Stem("fissato"), "fiss");});
test("fissava -> fiss", function() {deepEqual( Stem("fissava"), "fiss");});
test("fissavano -> fiss", function() {deepEqual( Stem("fissavano"), "fiss");});
test("fissazione -> fissazion", function() {deepEqual( Stem("fissazione"), "fissazion");});
test("fisse -> fiss", function() {deepEqual( Stem("fisse"), "fiss");});
test("fisserà -> fiss", function() {deepEqual( Stem("fisserà"), "fiss");});
test("fissi -> fiss", function() {deepEqual( Stem("fissi"), "fiss");});
test("fisso -> fiss", function() {deepEqual( Stem("fisso"), "fiss");});
test("fissò -> fiss", function() {deepEqual( Stem("fissò"), "fiss");});
test("fissore -> fissor", function() {deepEqual( Stem("fissore"), "fissor");});
test("fit -> fit", function() {deepEqual( Stem("fit"), "fit");});
test("fitta -> fitt", function() {deepEqual( Stem("fitta"), "fitt");});
test("fitte -> fitt", function() {deepEqual( Stem("fitte"), "fitt");});
test("fitti -> fitt", function() {deepEqual( Stem("fitti"), "fitt");});
test("fittiziamente -> fittiz", function() {deepEqual( Stem("fittiziamente"), "fittiz");});
test("fitto -> fitt", function() {deepEqual( Stem("fitto"), "fitt");});
test("fitzgerald -> fitzgerald", function() {deepEqual( Stem("fitzgerald"), "fitzgerald");});
test("fiuggi -> fiugg", function() {deepEqual( Stem("fiuggi"), "fiugg");});
test("fiume -> fium", function() {deepEqual( Stem("fiume"), "fium");});
test("fiumi -> fium", function() {deepEqual( Stem("fiumi"), "fium");});
test("fiumicino -> fiumicin", function() {deepEqual( Stem("fiumicino"), "fiumicin");});
test("fiuta -> fiut", function() {deepEqual( Stem("fiuta"), "fiut");});
test("fiutano -> fiut", function() {deepEqual( Stem("fiutano"), "fiut");});
test("fiutare -> fiut", function() {deepEqual( Stem("fiutare"), "fiut");});
test("fixing -> fixing", function() {deepEqual( Stem("fixing"), "fixing");});
test("flachi -> flac", function() {deepEqual( Stem("flachi"), "flac");});
test("flagella -> flagell", function() {deepEqual( Stem("flagella"), "flagell");});
test("flagelli -> flagell", function() {deepEqual( Stem("flagelli"), "flagell");});
test("flagello -> flagell", function() {deepEqual( Stem("flagello"), "flagell");});
test("flamment -> flamment", function() {deepEqual( Stem("flamment"), "flamment");});
test("flash -> flash", function() {deepEqual( Stem("flash"), "flash");});
test("flavi -> flav", function() {deepEqual( Stem("flavi"), "flav");});
test("flavia -> flav", function() {deepEqual( Stem("flavia"), "flav");});
test("flavio -> flav", function() {deepEqual( Stem("flavio"), "flav");});
test("flego -> fleg", function() {deepEqual( Stem("flego"), "fleg");});
test("flegreo -> flegre", function() {deepEqual( Stem("flegreo"), "flegre");});
test("flemma -> flemm", function() {deepEqual( Stem("flemma"), "flemm");});
test("flessibile -> flessibil", function() {deepEqual( Stem("flessibile"), "flessibil");});
test("flessibili -> flessibil", function() {deepEqual( Stem("flessibili"), "flessibil");});
test("flessibilità -> flessibil", function() {deepEqual( Stem("flessibilità"), "flessibil");});
test("flessione -> flession", function() {deepEqual( Stem("flessione"), "flession");});
test("flessori -> flessor", function() {deepEqual( Stem("flessori"), "flessor");});
test("flinn -> flinn", function() {deepEqual( Stem("flinn"), "flinn");});
test("flores -> flores", function() {deepEqual( Stem("flores"), "flores");});
test("floriancic -> floriancic", function() {deepEqual( Stem("floriancic"), "floriancic");});
test("florida -> florid", function() {deepEqual( Stem("florida"), "florid");});
test("floridezza -> floridezz", function() {deepEqual( Stem("floridezza"), "floridezz");});
test("floridissima -> floridissim", function() {deepEqual( Stem("floridissima"), "floridissim");});
test("florio -> flor", function() {deepEqual( Stem("florio"), "flor");});
test("floscia -> flosc", function() {deepEqual( Stem("floscia"), "flosc");});
test("floscio -> flosc", function() {deepEqual( Stem("floscio"), "flosc");});
test("flot -> flot", function() {deepEqual( Stem("flot"), "flot");});
test("flotta -> flott", function() {deepEqual( Stem("flotta"), "flott");});
test("flussi -> fluss", function() {deepEqual( Stem("flussi"), "fluss");});
test("flutti -> flutt", function() {deepEqual( Stem("flutti"), "flutt");});
test("fluttuante -> fluttuant", function() {deepEqual( Stem("fluttuante"), "fluttuant");});
test("fluttuazione -> fluttuazion", function() {deepEqual( Stem("fluttuazione"), "fluttuazion");});
test("fluttuazioni -> fluttuazion", function() {deepEqual( Stem("fluttuazioni"), "fluttuazion");});
test("fly -> fly", function() {deepEqual( Stem("fly"), "fly");});
test("flynn -> flynn", function() {deepEqual( Stem("flynn"), "flynn");});
test("fmi -> fmi", function() {deepEqual( Stem("fmi"), "fmi");});
test("fn -> fn", function() {deepEqual( Stem("fn"), "fn");});
test("fnle -> fnle", function() {deepEqual( Stem("fnle"), "fnle");});
test("fnsi -> fnsi", function() {deepEqual( Stem("fnsi"), "fnsi");});
test("fo -> fo", function() {deepEqual( Stem("fo"), "fo");});
test("foccillo -> foccill", function() {deepEqual( Stem("foccillo"), "foccill");});
test("fochi -> foch", function() {deepEqual( Stem("fochi"), "foch");});
test("foci -> foc", function() {deepEqual( Stem("foci"), "foc");});
test("focolaio -> focolai", function() {deepEqual( Stem("focolaio"), "focolai");});
test("focolare -> focol", function() {deepEqual( Stem("focolare"), "focol");});
test("focosa -> focos", function() {deepEqual( Stem("focosa"), "focos");});
test("foday -> foday", function() {deepEqual( Stem("foday"), "foday");});
test("fodera -> foder", function() {deepEqual( Stem("fodera"), "foder");});
test("fodero -> foder", function() {deepEqual( Stem("fodero"), "foder");});
test("foga -> fog", function() {deepEqual( Stem("foga"), "fog");});
test("foggia -> fogg", function() {deepEqual( Stem("foggia"), "fogg");});
test("fogli -> fogl", function() {deepEqual( Stem("fogli"), "fogl");});
test("foglia -> fogl", function() {deepEqual( Stem("foglia"), "fogl");});
test("fogliame -> fogliam", function() {deepEqual( Stem("fogliame"), "fogliam");});
test("foglie -> fogl", function() {deepEqual( Stem("foglie"), "fogl");});
test("foglio -> fogl", function() {deepEqual( Stem("foglio"), "fogl");});
test("foglioni -> foglion", function() {deepEqual( Stem("foglioni"), "foglion");});
test("fogna -> fogn", function() {deepEqual( Stem("fogna"), "fogn");});
test("fogne -> fogn", function() {deepEqual( Stem("fogne"), "fogn");});
test("foiano -> foi", function() {deepEqual( Stem("foiano"), "foi");});
test("folclore -> folclor", function() {deepEqual( Stem("folclore"), "folclor");});
test("folgaria -> folgar", function() {deepEqual( Stem("folgaria"), "folgar");});
test("folkloristico -> folklorist", function() {deepEqual( Stem("folkloristico"), "folklorist");});
test("folla -> foll", function() {deepEqual( Stem("folla"), "foll");});
test("follà -> foll", function() {deepEqual( Stem("follà"), "foll");});
test("folle -> foll", function() {deepEqual( Stem("folle"), "foll");});
test("folli -> foll", function() {deepEqual( Stem("folli"), "foll");});
test("follia -> foll", function() {deepEqual( Stem("follia"), "foll");});
test("folloni -> follon", function() {deepEqual( Stem("folloni"), "follon");});
test("folta -> folt", function() {deepEqual( Stem("folta"), "folt");});
test("folte -> folt", function() {deepEqual( Stem("folte"), "folt");});
test("folti -> folt", function() {deepEqual( Stem("folti"), "folt");});
test("folto -> folt", function() {deepEqual( Stem("folto"), "folt");});
test("fomentar -> foment", function() {deepEqual( Stem("fomentar"), "foment");});
test("fond -> fond", function() {deepEqual( Stem("fond"), "fond");});
test("fonda -> fond", function() {deepEqual( Stem("fonda"), "fond");});
test("fondaccio -> fondacc", function() {deepEqual( Stem("fondaccio"), "fondacc");});
test("fondachi -> fondac", function() {deepEqual( Stem("fondachi"), "fondac");});
test("fondaco -> fondac", function() {deepEqual( Stem("fondaco"), "fondac");});
test("fondali -> fondal", function() {deepEqual( Stem("fondali"), "fondal");});
test("fondamentale -> fondamental", function() {deepEqual( Stem("fondamentale"), "fondamental");});
test("fondamentali -> fondamental", function() {deepEqual( Stem("fondamentali"), "fondamental");});
test("fondamentalismo -> fondamental", function() {deepEqual( Stem("fondamentalismo"), "fondamental");});
test("fondamenti -> fond", function() {deepEqual( Stem("fondamenti"), "fond");});
test("fondamento -> fond", function() {deepEqual( Stem("fondamento"), "fond");});
test("fondandosi -> fond", function() {deepEqual( Stem("fondandosi"), "fond");});
test("fondanti -> fondant", function() {deepEqual( Stem("fondanti"), "fondant");});
test("fondare -> fond", function() {deepEqual( Stem("fondare"), "fond");});
test("fondarle -> fond", function() {deepEqual( Stem("fondarle"), "fond");});
test("fondata -> fond", function() {deepEqual( Stem("fondata"), "fond");});
test("fondate -> fond", function() {deepEqual( Stem("fondate"), "fond");});
test("fondatezza -> fondatezz", function() {deepEqual( Stem("fondatezza"), "fondatezz");});
test("fondativo -> fondat", function() {deepEqual( Stem("fondativo"), "fondat");});
test("fondato -> fond", function() {deepEqual( Stem("fondato"), "fond");});
test("fondatore -> fondator", function() {deepEqual( Stem("fondatore"), "fondator");});
test("fondatori -> fondator", function() {deepEqual( Stem("fondatori"), "fondator");});
test("fondattivo -> fondatt", function() {deepEqual( Stem("fondattivo"), "fondatt");});
test("fondazione -> fondazion", function() {deepEqual( Stem("fondazione"), "fondazion");});
test("fondazioni -> fondazion", function() {deepEqual( Stem("fondazioni"), "fondazion");});
test("fondersel -> fondersel", function() {deepEqual( Stem("fondersel"), "fondersel");});
test("fondi -> fond", function() {deepEqual( Stem("fondi"), "fond");});
test("fondiaria -> fondiar", function() {deepEqual( Stem("fondiaria"), "fondiar");});
test("fondiario -> fondiar", function() {deepEqual( Stem("fondiario"), "fondiar");});
test("fondicri -> fondicr", function() {deepEqual( Stem("fondicri"), "fondicr");});
test("fondimpiego -> fondimpieg", function() {deepEqual( Stem("fondimpiego"), "fondimpieg");});
test("fondinvest -> fondinvest", function() {deepEqual( Stem("fondinvest"), "fondinvest");});
test("fondo -> fond", function() {deepEqual( Stem("fondo"), "fond");});
test("fondoforte -> fondofort", function() {deepEqual( Stem("fondoforte"), "fondofort");});
test("fondosviluppo -> fondosvilupp", function() {deepEqual( Stem("fondosviluppo"), "fondosvilupp");});
test("fondriest -> fondriest", function() {deepEqual( Stem("fondriest"), "fondriest");});
test("fonseca -> fonsec", function() {deepEqual( Stem("fonseca"), "fonsec");});
test("fonspa -> fonsp", function() {deepEqual( Stem("fonspa"), "fonsp");});
test("fontan -> fontan", function() {deepEqual( Stem("fontan"), "fontan");});
test("fontana -> fontan", function() {deepEqual( Stem("fontana"), "fontan");});
test("fontanella -> fontanell", function() {deepEqual( Stem("fontanella"), "fontanell");});
test("fonte -> font", function() {deepEqual( Stem("fonte"), "font");});
test("fonti -> font", function() {deepEqual( Stem("fonti"), "font");});
test("fontolan -> fontolan", function() {deepEqual( Stem("fontolan"), "fontolan");});
test("food -> food", function() {deepEqual( Stem("food"), "food");});
test("football -> football", function() {deepEqual( Stem("football"), "football");});
test("for -> for", function() {deepEqual( Stem("for"), "for");});
test("foraggieri -> foraggier", function() {deepEqual( Stem("foraggieri"), "foraggier");});
test("foratura -> foratur", function() {deepEqual( Stem("foratura"), "foratur");});
test("forbici -> forbic", function() {deepEqual( Stem("forbici"), "forbic");});
test("forbite -> forb", function() {deepEqual( Stem("forbite"), "forb");});
test("forca -> forc", function() {deepEqual( Stem("forca"), "forc");});
test("force -> forc", function() {deepEqual( Stem("force"), "forc");});
test("forche -> forc", function() {deepEqual( Stem("forche"), "forc");});
test("forchetta -> forchett", function() {deepEqual( Stem("forchetta"), "forchett");});
test("forchette -> forchett", function() {deepEqual( Stem("forchette"), "forchett");});
test("forcing -> forcing", function() {deepEqual( Stem("forcing"), "forcing");});
test("ford -> ford", function() {deepEqual( Stem("ford"), "ford");});
test("foreign -> foreign", function() {deepEqual( Stem("foreign"), "foreign");});
test("forense -> forens", function() {deepEqual( Stem("forense"), "forens");});
test("foresta -> forest", function() {deepEqual( Stem("foresta"), "forest");});
test("forestale -> forestal", function() {deepEqual( Stem("forestale"), "forestal");});
test("forestali -> forestal", function() {deepEqual( Stem("forestali"), "forestal");});
test("foreste -> forest", function() {deepEqual( Stem("foreste"), "forest");});
test("forestiera -> forestier", function() {deepEqual( Stem("forestiera"), "forestier");});
test("forestieri -> forestier", function() {deepEqual( Stem("forestieri"), "forestier");});
test("forestiero -> forestier", function() {deepEqual( Stem("forestiero"), "forestier");});
test("forfettario -> forfettar", function() {deepEqual( Stem("forfettario"), "forfettar");});
test("forieri -> forier", function() {deepEqual( Stem("forieri"), "forier");});
test("forlani -> forlan", function() {deepEqual( Stem("forlani"), "forlan");});
test("forli -> forl", function() {deepEqual( Stem("forli"), "forl");});
test("forlì -> forl", function() {deepEqual( Stem("forlì"), "forl");});
test("forma -> form", function() {deepEqual( Stem("forma"), "form");});
test("formaggi -> formagg", function() {deepEqual( Stem("formaggi"), "formagg");});
test("formale -> formal", function() {deepEqual( Stem("formale"), "formal");});
test("formali -> formal", function() {deepEqual( Stem("formali"), "formal");});
test("formalità -> formal", function() {deepEqual( Stem("formalità"), "formal");});
test("formalizzata -> formalizz", function() {deepEqual( Stem("formalizzata"), "formalizz");});
test("formalizzato -> formalizz", function() {deepEqual( Stem("formalizzato"), "formalizz");});
test("formalizzazione -> formalizz", function() {deepEqual( Stem("formalizzazione"), "formalizz");});
test("formalizzeranno -> formalizz", function() {deepEqual( Stem("formalizzeranno"), "formalizz");});
test("formalmente -> formal", function() {deepEqual( Stem("formalmente"), "formal");});
test("formam -> formam", function() {deepEqual( Stem("formam"), "formam");});
test("forman -> forman", function() {deepEqual( Stem("forman"), "forman");});
test("formando -> form", function() {deepEqual( Stem("formando"), "form");});
test("formano -> form", function() {deepEqual( Stem("formano"), "form");});
test("formar -> form", function() {deepEqual( Stem("formar"), "form");});
test("formare -> form", function() {deepEqual( Stem("formare"), "form");});
test("formarla -> form", function() {deepEqual( Stem("formarla"), "form");});
test("formarne -> form", function() {deepEqual( Stem("formarne"), "form");});
test("formarono -> form", function() {deepEqual( Stem("formarono"), "form");});
test("formarsi -> form", function() {deepEqual( Stem("formarsi"), "form");});
test("formata -> form", function() {deepEqual( Stem("formata"), "form");});
test("formati -> form", function() {deepEqual( Stem("formati"), "form");});
test("formatisi -> formatis", function() {deepEqual( Stem("formatisi"), "formatis");});
test("formativo -> format", function() {deepEqual( Stem("formativo"), "format");});
test("formato -> form", function() {deepEqual( Stem("formato"), "form");});
test("formava -> form", function() {deepEqual( Stem("formava"), "form");});
test("formavano -> form", function() {deepEqual( Stem("formavano"), "form");});
test("formazione -> formazion", function() {deepEqual( Stem("formazione"), "formazion");});
test("formazioni -> formazion", function() {deepEqual( Stem("formazioni"), "formazion");});
test("forme -> form", function() {deepEqual( Stem("forme"), "form");});
test("formentini -> formentin", function() {deepEqual( Stem("formentini"), "formentin");});
test("formeranno -> form", function() {deepEqual( Stem("formeranno"), "form");});
test("formi -> form", function() {deepEqual( Stem("formi"), "form");});
test("formia -> form", function() {deepEqual( Stem("formia"), "form");});
test("formicolaio -> formicolai", function() {deepEqual( Stem("formicolaio"), "formicolai");});
test("formicolavan -> formicolavan", function() {deepEqual( Stem("formicolavan"), "formicolavan");});
test("formicolavano -> formicol", function() {deepEqual( Stem("formicolavano"), "formicol");});
test("formidabile -> formid", function() {deepEqual( Stem("formidabile"), "formid");});
test("formigoni -> formigon", function() {deepEqual( Stem("formigoni"), "formigon");});
test("formò -> form", function() {deepEqual( Stem("formò"), "form");});
test("formola -> formol", function() {deepEqual( Stem("formola"), "formol");});
test("formole -> formol", function() {deepEqual( Stem("formole"), "formol");});
test("formula -> formul", function() {deepEqual( Stem("formula"), "formul");});
test("formulare -> formul", function() {deepEqual( Stem("formulare"), "formul");});
test("formulata -> formul", function() {deepEqual( Stem("formulata"), "formul");});
test("formulate -> formul", function() {deepEqual( Stem("formulate"), "formul");});
test("formulati -> formul", function() {deepEqual( Stem("formulati"), "formul");});
test("formulato -> formul", function() {deepEqual( Stem("formulato"), "formul");});
test("formulazione -> formul", function() {deepEqual( Stem("formulazione"), "formul");});
test("fornai -> forna", function() {deepEqual( Stem("fornai"), "forna");});
test("fornaio -> fornai", function() {deepEqual( Stem("fornaio"), "fornai");});
test("fornari -> fornar", function() {deepEqual( Stem("fornari"), "fornar");});
test("fornario -> fornar", function() {deepEqual( Stem("fornario"), "fornar");});
test("fornello -> fornell", function() {deepEqual( Stem("fornello"), "fornell");});
test("forni -> forn", function() {deepEqual( Stem("forni"), "forn");});
test("fornì -> forn", function() {deepEqual( Stem("fornì"), "forn");});
test("fornir -> forn", function() {deepEqual( Stem("fornir"), "forn");});
test("fornirà -> forn", function() {deepEqual( Stem("fornirà"), "forn");});
test("fornire -> forn", function() {deepEqual( Stem("fornire"), "forn");});
test("fornisca -> forn", function() {deepEqual( Stem("fornisca"), "forn");});
test("fornisce -> forn", function() {deepEqual( Stem("fornisce"), "forn");});
test("fornita -> forn", function() {deepEqual( Stem("fornita"), "forn");});
test("fornite -> forn", function() {deepEqual( Stem("fornite"), "forn");});
test("forniti -> forn", function() {deepEqual( Stem("forniti"), "forn");});
test("fornitissimo -> fornitissim", function() {deepEqual( Stem("fornitissimo"), "fornitissim");});
test("fornito -> forn", function() {deepEqual( Stem("fornito"), "forn");});
test("fornitore -> fornitor", function() {deepEqual( Stem("fornitore"), "fornitor");});
test("fornitura -> fornitur", function() {deepEqual( Stem("fornitura"), "fornitur");});
test("forniture -> fornitur", function() {deepEqual( Stem("forniture"), "fornitur");});
test("forno -> forn", function() {deepEqual( Stem("forno"), "forn");});
test("fornte -> fornt", function() {deepEqual( Stem("fornte"), "fornt");});
test("forrest -> forrest", function() {deepEqual( Stem("forrest"), "forrest");});
test("forrester -> forrester", function() {deepEqual( Stem("forrester"), "forrester");});
test("fors -> fors", function() {deepEqual( Stem("fors"), "fors");});
test("forse -> fors", function() {deepEqual( Stem("forse"), "fors");});
test("forsennati -> forsenn", function() {deepEqual( Stem("forsennati"), "forsenn");});
test("forster -> forster", function() {deepEqual( Stem("forster"), "forster");});
test("forte -> fort", function() {deepEqual( Stem("forte"), "fort");});
test("fortemente -> fortement", function() {deepEqual( Stem("fortemente"), "fortement");});
test("fortezza -> fortezz", function() {deepEqual( Stem("fortezza"), "fortezz");});
test("fortezze -> fortezz", function() {deepEqual( Stem("fortezze"), "fortezz");});
test("forti -> fort", function() {deepEqual( Stem("forti"), "fort");});
test("fortificato -> fortific", function() {deepEqual( Stem("fortificato"), "fortific");});
test("fortissimo -> fortissim", function() {deepEqual( Stem("fortissimo"), "fortissim");});
test("fortuite -> fortu", function() {deepEqual( Stem("fortuite"), "fortu");});
test("fortuiti -> fortu", function() {deepEqual( Stem("fortuiti"), "fortu");});
test("fortuna -> fortun", function() {deepEqual( Stem("fortuna"), "fortun");});
test("fortunamente -> fortun", function() {deepEqual( Stem("fortunamente"), "fortun");});
test("fortunata -> fortun", function() {deepEqual( Stem("fortunata"), "fortun");});
test("fortunatamente -> fortunat", function() {deepEqual( Stem("fortunatamente"), "fortunat");});
test("fortunati -> fortun", function() {deepEqual( Stem("fortunati"), "fortun");});
test("fortunato -> fortun", function() {deepEqual( Stem("fortunato"), "fortun");});
test("fortune -> fortun", function() {deepEqual( Stem("fortune"), "fortun");});
test("fortunosamente -> fortun", function() {deepEqual( Stem("fortunosamente"), "fortun");});
test("fortunoso -> fortun", function() {deepEqual( Stem("fortunoso"), "fortun");});
test("forum -> forum", function() {deepEqual( Stem("forum"), "forum");});
test("forusciti -> forusc", function() {deepEqual( Stem("forusciti"), "forusc");});
test("foruscito -> forusc", function() {deepEqual( Stem("foruscito"), "forusc");});
test("forza -> forz", function() {deepEqual( Stem("forza"), "forz");});
test("forzare -> forz", function() {deepEqual( Stem("forzare"), "forz");});
test("forzassero -> forz", function() {deepEqual( Stem("forzassero"), "forz");});
test("forzata -> forz", function() {deepEqual( Stem("forzata"), "forz");});
test("forzatamente -> forzat", function() {deepEqual( Stem("forzatamente"), "forzat");});
test("forzati -> forz", function() {deepEqual( Stem("forzati"), "forz");});
test("forzato -> forz", function() {deepEqual( Stem("forzato"), "forz");});
test("forzature -> forzatur", function() {deepEqual( Stem("forzature"), "forzatur");});
test("forze -> forz", function() {deepEqual( Stem("forze"), "forz");});
test("forziste -> forzist", function() {deepEqual( Stem("forziste"), "forzist");});
test("forzò -> forz", function() {deepEqual( Stem("forzò"), "forz");});
test("forzute -> forz", function() {deepEqual( Stem("forzute"), "forz");});
test("fosca -> fosc", function() {deepEqual( Stem("fosca"), "fosc");});
test("fosche -> fosc", function() {deepEqual( Stem("fosche"), "fosc");});
test("fosco -> fosc", function() {deepEqual( Stem("fosco"), "fosc");});
test("foss -> foss", function() {deepEqual( Stem("foss"), "foss");});
test("fossa -> foss", function() {deepEqual( Stem("fossa"), "foss");});
test("fossatello -> fossatell", function() {deepEqual( Stem("fossatello"), "fossatell");});
test("fossati -> foss", function() {deepEqual( Stem("fossati"), "foss");});
test("fossato -> foss", function() {deepEqual( Stem("fossato"), "foss");});
test("fosse -> foss", function() {deepEqual( Stem("fosse"), "foss");});
test("fosser -> fosser", function() {deepEqual( Stem("fosser"), "fosser");});
test("fossero -> fosser", function() {deepEqual( Stem("fossero"), "fosser");});
test("fossi -> foss", function() {deepEqual( Stem("fossi"), "foss");});
test("fossili -> fossil", function() {deepEqual( Stem("fossili"), "fossil");});
test("fossimo -> fossim", function() {deepEqual( Stem("fossimo"), "fossim");});
test("fosso -> foss", function() {deepEqual( Stem("fosso"), "foss");});
test("foste -> fost", function() {deepEqual( Stem("foste"), "fost");});
test("foster -> foster", function() {deepEqual( Stem("foster"), "foster");});
test("foto -> fot", function() {deepEqual( Stem("foto"), "fot");});
test("fotografi -> fotograf", function() {deepEqual( Stem("fotografi"), "fotograf");});
test("fotografia -> fotograf", function() {deepEqual( Stem("fotografia"), "fotograf");});
test("fotografica -> fotograf", function() {deepEqual( Stem("fotografica"), "fotograf");});
test("fotografie -> fotograf", function() {deepEqual( Stem("fotografie"), "fotograf");});
test("fotografo -> fotograf", function() {deepEqual( Stem("fotografo"), "fotograf");});
test("foulard -> foulard", function() {deepEqual( Stem("foulard"), "foulard");});
test("fpi -> fpi", function() {deepEqual( Stem("fpi"), "fpi");});
test("fra -> fra", function() {deepEqual( Stem("fra"), "fra");});
test("fracanzani -> fracanzan", function() {deepEqual( Stem("fracanzani"), "fracanzan");});
test("fracassarsi -> fracass", function() {deepEqual( Stem("fracassarsi"), "fracass");});
test("fracassi -> frac", function() {deepEqual( Stem("fracassi"), "frac");});
test("fracasso -> fracass", function() {deepEqual( Stem("fracasso"), "fracass");});
test("fradicio -> fradic", function() {deepEqual( Stem("fradicio"), "fradic");});
test("fradiciume -> fradicium", function() {deepEqual( Stem("fradiciume"), "fradicium");});
test("fragassi -> frag", function() {deepEqual( Stem("fragassi"), "frag");});
test("fragile -> fragil", function() {deepEqual( Stem("fragile"), "fragil");});
test("fragilità -> fragil", function() {deepEqual( Stem("fragilità"), "fragil");});
test("fragorosi -> fragor", function() {deepEqual( Stem("fragorosi"), "fragor");});
test("fragranza -> fragranz", function() {deepEqual( Stem("fragranza"), "fragranz");});
test("fragranze -> fragranz", function() {deepEqual( Stem("fragranze"), "fragranz");});
test("fraintesa -> fraintes", function() {deepEqual( Stem("fraintesa"), "fraintes");});
test("framatome -> framatom", function() {deepEqual( Stem("framatome"), "framatom");});
test("framatone -> framaton", function() {deepEqual( Stem("framatone"), "framaton");});
test("frammentarie -> frammentar", function() {deepEqual( Stem("frammentarie"), "frammentar");});
test("frammenti -> framment", function() {deepEqual( Stem("frammenti"), "framment");});
test("frammento -> framment", function() {deepEqual( Stem("frammento"), "framment");});
test("frammentò -> framment", function() {deepEqual( Stem("frammentò"), "framment");});
test("frammischiate -> frammisc", function() {deepEqual( Stem("frammischiate"), "frammisc");});
test("frammischiava -> frammisc", function() {deepEqual( Stem("frammischiava"), "frammisc");});
test("franca -> franc", function() {deepEqual( Stem("franca"), "franc");});
test("francais -> francais", function() {deepEqual( Stem("francais"), "francais");});
test("francamente -> franc", function() {deepEqual( Stem("francamente"), "franc");});
test("france -> franc", function() {deepEqual( Stem("france"), "franc");});
test("frances -> frances", function() {deepEqual( Stem("frances"), "frances");});
test("francesca -> francesc", function() {deepEqual( Stem("francesca"), "francesc");});
test("franceschetti -> franceschett", function() {deepEqual( Stem("franceschetti"), "franceschett");});
test("francesco -> francesc", function() {deepEqual( Stem("francesco"), "francesc");});
test("francesconi -> francescon", function() {deepEqual( Stem("francesconi"), "francescon");});
test("francese -> frances", function() {deepEqual( Stem("francese"), "frances");});
test("francesi -> frances", function() {deepEqual( Stem("francesi"), "frances");});
test("franche -> franc", function() {deepEqual( Stem("franche"), "franc");});
test("franchezza -> franchezz", function() {deepEqual( Stem("franchezza"), "franchezz");});
test("franchi -> franc", function() {deepEqual( Stem("franchi"), "franc");});
test("franchini -> franchin", function() {deepEqual( Stem("franchini"), "franchin");});
test("francia -> franc", function() {deepEqual( Stem("francia"), "franc");});
test("francica -> francic", function() {deepEqual( Stem("francica"), "francic");});
test("franciica -> franciic", function() {deepEqual( Stem("franciica"), "franciic");});
test("francisco -> franc", function() {deepEqual( Stem("francisco"), "franc");});
test("franciscus -> franciscus", function() {deepEqual( Stem("franciscus"), "franciscus");});
test("francisque -> francisqu", function() {deepEqual( Stem("francisque"), "francisqu");});
test("franck -> franck", function() {deepEqual( Stem("franck"), "franck");});
test("franco -> franc", function() {deepEqual( Stem("franco"), "franc");});
test("francobolli -> francoboll", function() {deepEqual( Stem("francobolli"), "francoboll");});
test("francoforte -> francofort", function() {deepEqual( Stem("francoforte"), "francofort");});
test("francois -> francois", function() {deepEqual( Stem("francois"), "francois");});
test("frange -> frang", function() {deepEqual( Stem("frange"), "frang");});
test("frangente -> frangent", function() {deepEqual( Stem("frangente"), "frangent");});
test("frangenti -> frangent", function() {deepEqual( Stem("frangenti"), "frangent");});
test("frangersi -> frang", function() {deepEqual( Stem("frangersi"), "frang");});
test("frangia -> frang", function() {deepEqual( Stem("frangia"), "frang");});
test("franjo -> franj", function() {deepEqual( Stem("franjo"), "franj");});
test("frank -> frank", function() {deepEqual( Stem("frank"), "frank");});
test("franke -> frank", function() {deepEqual( Stem("franke"), "frank");});
test("frankenstein -> frankenstein", function() {deepEqual( Stem("frankenstein"), "frankenstein");});
test("frankfurter -> frankfurter", function() {deepEqual( Stem("frankfurter"), "frankfurter");});
test("frankie -> frank", function() {deepEqual( Stem("frankie"), "frank");});
test("franois -> franois", function() {deepEqual( Stem("franois"), "franois");});
test("frantende -> frant", function() {deepEqual( Stem("frantende"), "frant");});
test("franteso -> frantes", function() {deepEqual( Stem("franteso"), "frantes");});
test("frantumi -> frantum", function() {deepEqual( Stem("frantumi"), "frantum");});
test("franz -> franz", function() {deepEqual( Stem("franz"), "franz");});
test("franzone -> franzon", function() {deepEqual( Stem("franzone"), "franzon");});
test("franzoni -> franzon", function() {deepEqual( Stem("franzoni"), "franzon");});
test("frapposti -> frappost", function() {deepEqual( Stem("frapposti"), "frappost");});
test("frasca -> frasc", function() {deepEqual( Stem("frasca"), "frasc");});
test("frascati -> frasc", function() {deepEqual( Stem("frascati"), "frasc");});
test("frase -> fras", function() {deepEqual( Stem("frase"), "fras");});
test("frasi -> fras", function() {deepEqual( Stem("frasi"), "fras");});
test("frassica -> frassic", function() {deepEqual( Stem("frassica"), "frassic");});
test("frastagliata -> frastagl", function() {deepEqual( Stem("frastagliata"), "frastagl");});
test("frastono -> frast", function() {deepEqual( Stem("frastono"), "frast");});
test("frastornato -> frastorn", function() {deepEqual( Stem("frastornato"), "frastorn");});
test("frate -> frat", function() {deepEqual( Stem("frate"), "frat");});
test("fratel -> fratel", function() {deepEqual( Stem("fratel"), "fratel");});
test("fratellanza -> fratell", function() {deepEqual( Stem("fratellanza"), "fratell");});
test("fratelli -> fratell", function() {deepEqual( Stem("fratelli"), "fratell");});
test("fratellini -> fratellin", function() {deepEqual( Stem("fratellini"), "fratellin");});
test("fratellino -> fratellin", function() {deepEqual( Stem("fratellino"), "fratellin");});
test("fratello -> fratell", function() {deepEqual( Stem("fratello"), "fratell");});
test("fraterie -> frater", function() {deepEqual( Stem("fraterie"), "frater");});
test("fraterno -> fratern", function() {deepEqual( Stem("fraterno"), "fratern");});
test("frati -> frat", function() {deepEqual( Stem("frati"), "frat");});
test("fraticello -> fraticell", function() {deepEqual( Stem("fraticello"), "fraticell");});
test("fratini -> fratin", function() {deepEqual( Stem("fratini"), "fratin");});
test("fratricida -> fratricid", function() {deepEqual( Stem("fratricida"), "fratricid");});
test("frattanto -> frattant", function() {deepEqual( Stem("frattanto"), "frattant");});
test("frattempo -> frattemp", function() {deepEqual( Stem("frattempo"), "frattemp");});
test("frattini -> frattin", function() {deepEqual( Stem("frattini"), "frattin");});
test("frattura -> frattur", function() {deepEqual( Stem("frattura"), "frattur");});
test("fratture -> frattur", function() {deepEqual( Stem("fratture"), "frattur");});
test("fraudisque -> fraudisqu", function() {deepEqual( Stem("fraudisque"), "fraudisqu");});
test("fraudolenta -> fraudolent", function() {deepEqual( Stem("fraudolenta"), "fraudolent");});
test("fraudum -> fraudum", function() {deepEqual( Stem("fraudum"), "fraudum");});
test("frauenkirsche -> frauenkirsc", function() {deepEqual( Stem("frauenkirsche"), "frauenkirsc");});
test("fraz -> fraz", function() {deepEqual( Stem("fraz"), "fraz");});
test("frazionamento -> frazion", function() {deepEqual( Stem("frazionamento"), "frazion");});
test("frazione -> frazion", function() {deepEqual( Stem("frazione"), "frazion");});
test("fre -> fre", function() {deepEqual( Stem("fre"), "fre");});
test("frears -> frears", function() {deepEqual( Stem("frears"), "frears");});
test("fredda -> fredd", function() {deepEqual( Stem("fredda"), "fredd");});
test("freddamente -> fredd", function() {deepEqual( Stem("freddamente"), "fredd");});
test("freddato -> fredd", function() {deepEqual( Stem("freddato"), "fredd");});
test("fredde -> fredd", function() {deepEqual( Stem("fredde"), "fredd");});
test("freddi -> fredd", function() {deepEqual( Stem("freddi"), "fredd");});
test("freddie -> fredd", function() {deepEqual( Stem("freddie"), "fredd");});
test("freddo -> fredd", function() {deepEqual( Stem("freddo"), "fredd");});
test("frederic -> frederic", function() {deepEqual( Stem("frederic"), "frederic");});
test("fredericks -> fredericks", function() {deepEqual( Stem("fredericks"), "fredericks");});
test("freeport -> freeport", function() {deepEqual( Stem("freeport"), "freeport");});
test("freetown -> freetown", function() {deepEqual( Stem("freetown"), "freetown");});
test("freeway -> freeway", function() {deepEqual( Stem("freeway"), "freeway");});
test("fregata -> freg", function() {deepEqual( Stem("fregata"), "freg");});
test("fregate -> freg", function() {deepEqual( Stem("fregate"), "freg");});
test("fregatina -> fregatin", function() {deepEqual( Stem("fregatina"), "fregatin");});
test("fregato -> freg", function() {deepEqual( Stem("fregato"), "freg");});
test("fregava -> freg", function() {deepEqual( Stem("fregava"), "freg");});
test("fremendo -> frem", function() {deepEqual( Stem("fremendo"), "frem");});
test("fremente -> frement", function() {deepEqual( Stem("fremente"), "frement");});
test("fremevano -> frem", function() {deepEqual( Stem("fremevano"), "frem");});
test("fremito -> frem", function() {deepEqual( Stem("fremito"), "frem");});
test("frenare -> fren", function() {deepEqual( Stem("frenare"), "fren");});
test("frenata -> fren", function() {deepEqual( Stem("frenata"), "fren");});
test("frenato -> fren", function() {deepEqual( Stem("frenato"), "fren");});
test("frenesia -> frenes", function() {deepEqual( Stem("frenesia"), "frenes");});
test("frenetici -> frenet", function() {deepEqual( Stem("frenetici"), "frenet");});
test("frenetico -> frenet", function() {deepEqual( Stem("frenetico"), "frenet");});
test("freni -> fren", function() {deepEqual( Stem("freni"), "fren");});
test("freno -> fren", function() {deepEqual( Stem("freno"), "fren");});
test("frequenta -> frequent", function() {deepEqual( Stem("frequenta"), "frequent");});
test("frequentare -> frequent", function() {deepEqual( Stem("frequentare"), "frequent");});
test("frequentarli -> frequent", function() {deepEqual( Stem("frequentarli"), "frequent");});
test("frequentata -> frequent", function() {deepEqual( Stem("frequentata"), "frequent");});
test("frequentatori -> frequent", function() {deepEqual( Stem("frequentatori"), "frequent");});
test("frequentava -> frequent", function() {deepEqual( Stem("frequentava"), "frequent");});
test("frequentavano -> frequent", function() {deepEqual( Stem("frequentavano"), "frequent");});
test("frequente -> frequent", function() {deepEqual( Stem("frequente"), "frequent");});
test("frequentemente -> frequent", function() {deepEqual( Stem("frequentemente"), "frequent");});
test("frequenti -> frequent", function() {deepEqual( Stem("frequenti"), "frequent");});
test("frequentissime -> frequentissim", function() {deepEqual( Stem("frequentissime"), "frequentissim");});
test("frequenza -> frequenz", function() {deepEqual( Stem("frequenza"), "frequenz");});
test("fresca -> fresc", function() {deepEqual( Stem("fresca"), "fresc");});
test("fresche -> fresc", function() {deepEqual( Stem("fresche"), "fresc");});
test("freschi -> fresc", function() {deepEqual( Stem("freschi"), "fresc");});
test("fresco -> fresc", function() {deepEqual( Stem("fresco"), "fresc");});
test("frescolino -> frescolin", function() {deepEqual( Stem("frescolino"), "frescolin");});
test("fresi -> fres", function() {deepEqual( Stem("fresi"), "fres");});
test("fretta -> frett", function() {deepEqual( Stem("fretta"), "frett");});
test("frette -> frett", function() {deepEqual( Stem("frette"), "frett");});
test("frettolosi -> frettol", function() {deepEqual( Stem("frettolosi"), "frettol");});
test("frettoloso -> frettol", function() {deepEqual( Stem("frettoloso"), "frettol");});
test("fretus -> fretus", function() {deepEqual( Stem("fretus"), "fretus");});
test("frias -> frias", function() {deepEqual( Stem("frias"), "frias");});
test("frisani -> frisan", function() {deepEqual( Stem("frisani"), "frisan");});
test("frittata -> fritt", function() {deepEqual( Stem("frittata"), "fritt");});
test("friulana -> friulan", function() {deepEqual( Stem("friulana"), "friulan");});
test("friulano -> friul", function() {deepEqual( Stem("friulano"), "friul");});
test("friuli -> friul", function() {deepEqual( Stem("friuli"), "friul");});
test("frivolezza -> frivolezz", function() {deepEqual( Stem("frivolezza"), "frivolezz");});
test("frivolezze -> frivolezz", function() {deepEqual( Stem("frivolezze"), "frivolezz");});
test("frizzante -> frizzant", function() {deepEqual( Stem("frizzante"), "frizzant");});
test("frizzavano -> frizz", function() {deepEqual( Stem("frizzavano"), "frizz");});
test("frode -> frod", function() {deepEqual( Stem("frode"), "frod");});
test("fronda -> frond", function() {deepEqual( Stem("fronda"), "frond");});
test("fronde -> frond", function() {deepEqual( Stem("fronde"), "frond");});
test("frontale -> frontal", function() {deepEqual( Stem("frontale"), "frontal");});
test("fronte -> front", function() {deepEqual( Stem("fronte"), "front");});
test("fronteggiare -> frontegg", function() {deepEqual( Stem("fronteggiare"), "frontegg");});
test("fronteggiato -> frontegg", function() {deepEqual( Stem("fronteggiato"), "frontegg");});
test("fronteggiavano -> frontegg", function() {deepEqual( Stem("fronteggiavano"), "frontegg");});
test("fronti -> front", function() {deepEqual( Stem("fronti"), "front");});
test("frontiera -> frontier", function() {deepEqual( Stem("frontiera"), "frontier");});
test("frontiere -> front", function() {deepEqual( Stem("frontiere"), "front");});
test("fronzuti -> fronz", function() {deepEqual( Stem("fronzuti"), "fronz");});
test("frosinone -> frosinon", function() {deepEqual( Stem("frosinone"), "frosinon");});
test("frottole -> frottol", function() {deepEqual( Stem("frottole"), "frottol");});
test("froze -> froz", function() {deepEqual( Stem("froze"), "froz");});
test("frugale -> frugal", function() {deepEqual( Stem("frugale"), "frugal");});
test("frugamenti -> frug", function() {deepEqual( Stem("frugamenti"), "frug");});
test("frugando -> frug", function() {deepEqual( Stem("frugando"), "frug");});
test("frugar -> frug", function() {deepEqual( Stem("frugar"), "frug");});
test("frugare -> frug", function() {deepEqual( Stem("frugare"), "frug");});
test("frugato -> frug", function() {deepEqual( Stem("frugato"), "frug");});
test("frugavan -> frugavan", function() {deepEqual( Stem("frugavan"), "frugavan");});
test("frugavano -> frug", function() {deepEqual( Stem("frugavano"), "frug");});
test("frughi -> frug", function() {deepEqual( Stem("frughi"), "frug");});
test("frugo -> frug", function() {deepEqual( Stem("frugo"), "frug");});
test("frugò -> frug", function() {deepEqual( Stem("frugò"), "frug");});
test("fruit -> fruit", function() {deepEqual( Stem("fruit"), "fruit");});
test("frullone -> frullon", function() {deepEqual( Stem("frullone"), "frullon");});
test("frulloni -> frullon", function() {deepEqual( Stem("frulloni"), "frullon");});
test("fruscìo -> fruscì", function() {deepEqual( Stem("fruscìo"), "fruscì");});
test("frusta -> frust", function() {deepEqual( Stem("frusta"), "frust");});
test("frustata -> frust", function() {deepEqual( Stem("frustata"), "frust");});
test("frustate -> frust", function() {deepEqual( Stem("frustate"), "frust");});
test("fruste -> frust", function() {deepEqual( Stem("fruste"), "frust");});
test("frutta -> frutt", function() {deepEqual( Stem("frutta"), "frutt");});
test("fruttare -> frutt", function() {deepEqual( Stem("fruttare"), "frutt");});
test("frutte -> frutt", function() {deepEqual( Stem("frutte"), "frutt");});
test("frutterebbe -> frutt", function() {deepEqual( Stem("frutterebbe"), "frutt");});
test("frutti -> frutt", function() {deepEqual( Stem("frutti"), "frutt");});
test("frutto -> frutt", function() {deepEqual( Stem("frutto"), "frutt");});
test("fs -> fs", function() {deepEqual( Stem("fs"), "fs");});
test("ft -> ft", function() {deepEqual( Stem("ft"), "ft");});
test("ftosi -> ftos", function() {deepEqual( Stem("ftosi"), "ftos");});
test("fu -> fu", function() {deepEqual( Stem("fu"), "fu");});
test("fuan -> fuan", function() {deepEqual( Stem("fuan"), "fuan");});
test("fucilata -> fucil", function() {deepEqual( Stem("fucilata"), "fucil");});
test("fucile -> fucil", function() {deepEqual( Stem("fucile"), "fucil");});
test("fucili -> fucil", function() {deepEqual( Stem("fucili"), "fucil");});
test("fuedo -> fued", function() {deepEqual( Stem("fuedo"), "fued");});
test("fuentes -> fuentes", function() {deepEqual( Stem("fuentes"), "fuentes");});
test("fuera -> fuer", function() {deepEqual( Stem("fuera"), "fuer");});
test("fuerit -> fuerit", function() {deepEqual( Stem("fuerit"), "fuerit");});
test("fuga -> fug", function() {deepEqual( Stem("fuga"), "fug");});
test("fugace -> fugac", function() {deepEqual( Stem("fugace"), "fugac");});
test("fugare -> fug", function() {deepEqual( Stem("fugare"), "fug");});
test("fugato -> fug", function() {deepEqual( Stem("fugato"), "fug");});
test("fuggendo -> fugg", function() {deepEqual( Stem("fuggendo"), "fugg");});
test("fuggì -> fugg", function() {deepEqual( Stem("fuggì"), "fugg");});
test("fuggiaschi -> fuggiasc", function() {deepEqual( Stem("fuggiaschi"), "fuggiasc");});
test("fuggir -> fugg", function() {deepEqual( Stem("fuggir"), "fugg");});
test("fuggire -> fugg", function() {deepEqual( Stem("fuggire"), "fugg");});
test("fuggiron -> fuggiron", function() {deepEqual( Stem("fuggiron"), "fuggiron");});
test("fuggita -> fugg", function() {deepEqual( Stem("fuggita"), "fugg");});
test("fuggiti -> fugg", function() {deepEqual( Stem("fuggiti"), "fugg");});
test("fuggitive -> fuggit", function() {deepEqual( Stem("fuggitive"), "fuggit");});
test("fuggitivi -> fuggit", function() {deepEqual( Stem("fuggitivi"), "fuggit");});
test("fuggitivo -> fuggit", function() {deepEqual( Stem("fuggitivo"), "fuggit");});
test("fuggito -> fugg", function() {deepEqual( Stem("fuggito"), "fugg");});
test("fuggiva -> fugg", function() {deepEqual( Stem("fuggiva"), "fugg");});
test("fughe -> fugh", function() {deepEqual( Stem("fughe"), "fugh");});
test("fui -> fui", function() {deepEqual( Stem("fui"), "fui");});
test("fuisse -> fuiss", function() {deepEqual( Stem("fuisse"), "fuiss");});
test("fuit -> fuit", function() {deepEqual( Stem("fuit"), "fuit");});
test("fujimori -> fujimor", function() {deepEqual( Stem("fujimori"), "fujimor");});
test("fulbright -> fulbright", function() {deepEqual( Stem("fulbright"), "fulbright");});
test("fulcro -> fulcr", function() {deepEqual( Stem("fulcro"), "fulcr");});
test("fulminato -> fulmin", function() {deepEqual( Stem("fulminato"), "fulmin");});
test("fulmini -> fulmin", function() {deepEqual( Stem("fulmini"), "fulmin");});
test("fuma -> fum", function() {deepEqual( Stem("fuma"), "fum");});
test("fumagalli -> fumagall", function() {deepEqual( Stem("fumagalli"), "fumagall");});
test("fumi -> fum", function() {deepEqual( Stem("fumi"), "fum");});
test("fummo -> fumm", function() {deepEqual( Stem("fummo"), "fumm");});
test("fumo -> fum", function() {deepEqual( Stem("fumo"), "fum");});
test("funari -> funar", function() {deepEqual( Stem("funari"), "funar");});
test("fund -> fund", function() {deepEqual( Stem("fund"), "fund");});
test("fune -> fun", function() {deepEqual( Stem("fune"), "fun");});
test("funebre -> funebr", function() {deepEqual( Stem("funebre"), "funebr");});
test("funebri -> funebr", function() {deepEqual( Stem("funebri"), "funebr");});
test("funerale -> funeral", function() {deepEqual( Stem("funerale"), "funeral");});
test("funerali -> funeral", function() {deepEqual( Stem("funerali"), "funeral");});
test("funesta -> funest", function() {deepEqual( Stem("funesta"), "funest");});
test("funeste -> funest", function() {deepEqual( Stem("funeste"), "funest");});
test("funesti -> funest", function() {deepEqual( Stem("funesti"), "funest");});
test("funesto -> funest", function() {deepEqual( Stem("funesto"), "funest");});
test("funzion -> funzion", function() {deepEqual( Stem("funzion"), "funzion");});
test("funziona -> funzion", function() {deepEqual( Stem("funziona"), "funzion");});
test("funzionale -> funzional", function() {deepEqual( Stem("funzionale"), "funzional");});
test("funzionamento -> funzion", function() {deepEqual( Stem("funzionamento"), "funzion");});
test("funzionante -> funzion", function() {deepEqual( Stem("funzionante"), "funzion");});
test("funzionare -> funzion", function() {deepEqual( Stem("funzionare"), "funzion");});
test("funzionari -> funzionar", function() {deepEqual( Stem("funzionari"), "funzionar");});
test("funzionaria -> funzionar", function() {deepEqual( Stem("funzionaria"), "funzionar");});
test("funzionario -> funzionar", function() {deepEqual( Stem("funzionario"), "funzionar");});
test("funzione -> funzion", function() {deepEqual( Stem("funzione"), "funzion");});
test("funzionerà -> funzion", function() {deepEqual( Stem("funzionerà"), "funzion");});
test("funzioni -> funzion", function() {deepEqual( Stem("funzioni"), "funzion");});
test("fuochi -> fuoc", function() {deepEqual( Stem("fuochi"), "fuoc");});
test("fuoco -> fuoc", function() {deepEqual( Stem("fuoco"), "fuoc");});
test("fuor -> fuor", function() {deepEqual( Stem("fuor"), "fuor");});
test("fuorché -> fuorc", function() {deepEqual( Stem("fuorché"), "fuorc");});
test("fuori -> fuor", function() {deepEqual( Stem("fuori"), "fuor");});
test("fuoriclasse -> fuoricl", function() {deepEqual( Stem("fuoriclasse"), "fuoricl");});
test("fuorigioco -> fuorigioc", function() {deepEqual( Stem("fuorigioco"), "fuorigioc");});
test("fuorilegge -> fuorilegg", function() {deepEqual( Stem("fuorilegge"), "fuorilegg");});
test("fuoriscita -> fuorisc", function() {deepEqual( Stem("fuoriscita"), "fuorisc");});
test("fuoristrada -> fuoristrad", function() {deepEqual( Stem("fuoristrada"), "fuoristrad");});
test("fuoriuscita -> fuoriusc", function() {deepEqual( Stem("fuoriuscita"), "fuoriusc");});
test("fuoriusciti -> fuoriusc", function() {deepEqual( Stem("fuoriusciti"), "fuoriusc");});
test("fuoriuscito -> fuoriusc", function() {deepEqual( Stem("fuoriuscito"), "fuoriusc");});
test("furano -> fur", function() {deepEqual( Stem("furano"), "fur");});
test("furberie -> furber", function() {deepEqual( Stem("furberie"), "furber");});
test("furbetta -> furbett", function() {deepEqual( Stem("furbetta"), "furbett");});
test("furbi -> furb", function() {deepEqual( Stem("furbi"), "furb");});
test("furbo -> furb", function() {deepEqual( Stem("furbo"), "furb");});
test("furfante -> furfant", function() {deepEqual( Stem("furfante"), "furfant");});
test("furfanti -> furfant", function() {deepEqual( Stem("furfanti"), "furfant");});
test("furfantone -> furfanton", function() {deepEqual( Stem("furfantone"), "furfanton");});
test("furfantoni -> furfanton", function() {deepEqual( Stem("furfantoni"), "furfanton");});
test("furia -> fur", function() {deepEqual( Stem("furia"), "fur");});
test("furibonda -> furibond", function() {deepEqual( Stem("furibonda"), "furibond");});
test("furibondi -> furibond", function() {deepEqual( Stem("furibondi"), "furibond");});
test("furie -> fur", function() {deepEqual( Stem("furie"), "fur");});
test("furiosa -> furios", function() {deepEqual( Stem("furiosa"), "furios");});
test("furiosi -> furios", function() {deepEqual( Stem("furiosi"), "furios");});
test("furioso -> furios", function() {deepEqual( Stem("furioso"), "furios");});
test("furon -> furon", function() {deepEqual( Stem("furon"), "furon");});
test("furoncoli -> furoncol", function() {deepEqual( Stem("furoncoli"), "furoncol");});
test("furono -> fur", function() {deepEqual( Stem("furono"), "fur");});
test("furor -> furor", function() {deepEqual( Stem("furor"), "furor");});
test("furore -> furor", function() {deepEqual( Stem("furore"), "furor");});
test("furstenberg -> furstenberg", function() {deepEqual( Stem("furstenberg"), "furstenberg");});
test("furtivamente -> furtiv", function() {deepEqual( Stem("furtivamente"), "furtiv");});
test("furto -> furt", function() {deepEqual( Stem("furto"), "furt");});
test("fuscagni -> fuscagn", function() {deepEqual( Stem("fuscagni"), "fuscagn");});
test("fuscelli -> fuscell", function() {deepEqual( Stem("fuscelli"), "fuscell");});
test("fusco -> fusc", function() {deepEqual( Stem("fusco"), "fusc");});
test("fuseaux -> fuseaux", function() {deepEqual( Stem("fuseaux"), "fuseaux");});
test("fusella -> fusell", function() {deepEqual( Stem("fusella"), "fusell");});
test("fuser -> fuser", function() {deepEqual( Stem("fuser"), "fuser");});
test("fusione -> fusion", function() {deepEqual( Stem("fusione"), "fusion");});
test("fusioni -> fusion", function() {deepEqual( Stem("fusioni"), "fusion");});
test("fuso -> fus", function() {deepEqual( Stem("fuso"), "fus");});
test("fustagnai -> fustagna", function() {deepEqual( Stem("fustagnai"), "fustagna");});
test("fustini -> fustin", function() {deepEqual( Stem("fustini"), "fustin");});
test("futre -> futr", function() {deepEqual( Stem("futre"), "futr");});
test("futura -> futur", function() {deepEqual( Stem("futura"), "futur");});
test("future -> futur", function() {deepEqual( Stem("future"), "futur");});
test("futuri -> futur", function() {deepEqual( Stem("futuri"), "futur");});
test("futuro -> futur", function() {deepEqual( Stem("futuro"), "futur");});
test("futurò -> futur", function() {deepEqual( Stem("futurò"), "futur");});
test("fv -> fv", function() {deepEqual( Stem("fv"), "fv");});
test("g -> g", function() {deepEqual( Stem("g"), "g");});
test("gabbi -> gabb", function() {deepEqual( Stem("gabbi"), "gabb");});
test("gabbia -> gabb", function() {deepEqual( Stem("gabbia"), "gabb");});
test("gabelliere -> gabell", function() {deepEqual( Stem("gabelliere"), "gabell");});
test("gabellieri -> gabellier", function() {deepEqual( Stem("gabellieri"), "gabellier");});
test("gabellini -> gabellin", function() {deepEqual( Stem("gabellini"), "gabellin");});
test("gabetti -> gabett", function() {deepEqual( Stem("gabetti"), "gabett");});
test("gabinetto -> gabinett", function() {deepEqual( Stem("gabinetto"), "gabinett");});
test("gabino -> gabin", function() {deepEqual( Stem("gabino"), "gabin");});
test("gabon -> gabon", function() {deepEqual( Stem("gabon"), "gabon");});
test("gabriel -> gabriel", function() {deepEqual( Stem("gabriel"), "gabriel");});
test("gabriela -> gabriel", function() {deepEqual( Stem("gabriela"), "gabriel");});
test("gabriele -> gabriel", function() {deepEqual( Stem("gabriele"), "gabriel");});
test("gabrieli -> gabriel", function() {deepEqual( Stem("gabrieli"), "gabriel");});
test("gabriella -> gabriell", function() {deepEqual( Stem("gabriella"), "gabriell");});
test("gadget -> gadget", function() {deepEqual( Stem("gadget"), "gadget");});
test("gaetano -> gaet", function() {deepEqual( Stem("gaetano"), "gaet");});
test("gaffe -> gaff", function() {deepEqual( Stem("gaffe"), "gaff");});
test("gaffes -> gaffes", function() {deepEqual( Stem("gaffes"), "gaffes");});
test("gaffiante -> gaffiant", function() {deepEqual( Stem("gaffiante"), "gaffiant");});
test("gag -> gag", function() {deepEqual( Stem("gag"), "gag");});
test("gagliarda -> gagliard", function() {deepEqual( Stem("gagliarda"), "gagliard");});
test("gagliarde -> gagliard", function() {deepEqual( Stem("gagliarde"), "gagliard");});
test("gagliardi -> gagliard", function() {deepEqual( Stem("gagliardi"), "gagliard");});
test("gaiana -> gaian", function() {deepEqual( Stem("gaiana"), "gaian");});
test("gaic -> gaic", function() {deepEqual( Stem("gaic"), "gaic");});
test("gaio -> gai", function() {deepEqual( Stem("gaio"), "gai");});
test("gal -> gal", function() {deepEqual( Stem("gal"), "gal");});
test("gala -> gal", function() {deepEqual( Stem("gala"), "gal");});
test("galagoal -> galagoal", function() {deepEqual( Stem("galagoal"), "galagoal");});
test("galante -> galant", function() {deepEqual( Stem("galante"), "galant");});
test("galanteria -> galanter", function() {deepEqual( Stem("galanteria"), "galanter");});
test("galanterie -> galanter", function() {deepEqual( Stem("galanterie"), "galanter");});
test("galantuomini -> galantuomin", function() {deepEqual( Stem("galantuomini"), "galantuomin");});
test("galantuomo -> galantuom", function() {deepEqual( Stem("galantuomo"), "galantuom");});
test("galassia -> galass", function() {deepEqual( Stem("galassia"), "galass");});
test("galasso -> galass", function() {deepEqual( Stem("galasso"), "galass");});
test("galateo -> galate", function() {deepEqual( Stem("galateo"), "galate");});
test("galderisi -> galderis", function() {deepEqual( Stem("galderisi"), "galderis");});
test("galdino -> galdin", function() {deepEqual( Stem("galdino"), "galdin");});
test("gale -> gal", function() {deepEqual( Stem("gale"), "gal");});
test("galea -> gale", function() {deepEqual( Stem("galea"), "gale");});
test("galeone -> galeon", function() {deepEqual( Stem("galeone"), "galeon");});
test("galeotte -> galeott", function() {deepEqual( Stem("galeotte"), "galeott");});
test("galera -> galer", function() {deepEqual( Stem("galera"), "galer");});
test("galia -> gal", function() {deepEqual( Stem("galia"), "gal");});
test("galicia -> galic", function() {deepEqual( Stem("galicia"), "galic");});
test("galilei -> galile", function() {deepEqual( Stem("galilei"), "galile");});
test("galileo -> galile", function() {deepEqual( Stem("galileo"), "galile");});
test("galioto -> galiot", function() {deepEqual( Stem("galioto"), "galiot");});
test("galla -> gall", function() {deepEqual( Stem("galla"), "gall");});
test("gallarate -> gallar", function() {deepEqual( Stem("gallarate"), "gallar");});
test("gallarini -> gallarin", function() {deepEqual( Stem("gallarini"), "gallarin");});
test("galleggia -> gallegg", function() {deepEqual( Stem("galleggia"), "gallegg");});
test("galleggiante -> gallegg", function() {deepEqual( Stem("galleggiante"), "gallegg");});
test("galleggiare -> gallegg", function() {deepEqual( Stem("galleggiare"), "gallegg");});
test("gallegos -> gallegos", function() {deepEqual( Stem("gallegos"), "gallegos");});
test("galleria -> galler", function() {deepEqual( Stem("galleria"), "galler");});
test("galles -> galles", function() {deepEqual( Stem("galles"), "galles");});
test("gallese -> galles", function() {deepEqual( Stem("gallese"), "galles");});
test("galletti -> gallett", function() {deepEqual( Stem("galletti"), "gallett");});
test("galli -> gall", function() {deepEqual( Stem("galli"), "gall");});
test("galline -> gallin", function() {deepEqual( Stem("galline"), "gallin");});
test("gallipoli -> gallipol", function() {deepEqual( Stem("gallipoli"), "gallipol");});
test("gallo -> gall", function() {deepEqual( Stem("gallo"), "gall");});
test("gallotta -> gallott", function() {deepEqual( Stem("gallotta"), "gallott");});
test("galoppo -> galopp", function() {deepEqual( Stem("galoppo"), "galopp");});
test("galoppò -> galopp", function() {deepEqual( Stem("galoppò"), "galopp");});
test("galvanizzando -> galvanizz", function() {deepEqual( Stem("galvanizzando"), "galvanizz");});
test("gama -> gam", function() {deepEqual( Stem("gama"), "gam");});
test("gamba -> gamb", function() {deepEqual( Stem("gamba"), "gamb");});
test("gambale -> gambal", function() {deepEqual( Stem("gambale"), "gambal");});
test("gambe -> gamb", function() {deepEqual( Stem("gambe"), "gamb");});
test("gamberini -> gamberin", function() {deepEqual( Stem("gamberini"), "gamberin");});
test("gambiere -> gamb", function() {deepEqual( Stem("gambiere"), "gamb");});
test("gambini -> gambin", function() {deepEqual( Stem("gambini"), "gambin");});
test("gambino -> gambin", function() {deepEqual( Stem("gambino"), "gambin");});
test("game -> gam", function() {deepEqual( Stem("game"), "gam");});
test("gamma -> gamm", function() {deepEqual( Stem("gamma"), "gamm");});
test("ganascino -> ganascin", function() {deepEqual( Stem("ganascino"), "ganascin");});
test("gand -> gand", function() {deepEqual( Stem("gand"), "gand");});
test("gande -> gand", function() {deepEqual( Stem("gande"), "gand");});
test("gandhi -> gandh", function() {deepEqual( Stem("gandhi"), "gandh");});
test("gandini -> gandin", function() {deepEqual( Stem("gandini"), "gandin");});
test("gangheri -> gangher", function() {deepEqual( Stem("gangheri"), "gangher");});
test("ganz -> ganz", function() {deepEqual( Stem("ganz"), "ganz");});
test("gap -> gap", function() {deepEqual( Stem("gap"), "gap");});
test("gar -> gar", function() {deepEqual( Stem("gar"), "gar");});
test("gara -> gar", function() {deepEqual( Stem("gara"), "gar");});
test("garage -> garag", function() {deepEqual( Stem("garage"), "garag");});
test("garante -> garant", function() {deepEqual( Stem("garante"), "garant");});
test("garanti -> garant", function() {deepEqual( Stem("garanti"), "garant");});
test("garantire -> garant", function() {deepEqual( Stem("garantire"), "garant");});
test("garantirebbe -> garant", function() {deepEqual( Stem("garantirebbe"), "garant");});
test("garantiremo -> garant", function() {deepEqual( Stem("garantiremo"), "garant");});
test("garantirlo -> garant", function() {deepEqual( Stem("garantirlo"), "garant");});
test("garantisce -> garant", function() {deepEqual( Stem("garantisce"), "garant");});
test("garantita -> garant", function() {deepEqual( Stem("garantita"), "garant");});
test("garantiti -> garant", function() {deepEqual( Stem("garantiti"), "garant");});
test("garantito -> garant", function() {deepEqual( Stem("garantito"), "garant");});
test("garanzia -> garanz", function() {deepEqual( Stem("garanzia"), "garanz");});
test("garanzie -> garanz", function() {deepEqual( Stem("garanzie"), "garanz");});
test("garavaglia -> garavagl", function() {deepEqual( Stem("garavaglia"), "garavagl");});
test("garbata -> garb", function() {deepEqual( Stem("garbata"), "garb");});
test("garbatamente -> garbat", function() {deepEqual( Stem("garbatamente"), "garbat");});
test("garbo -> garb", function() {deepEqual( Stem("garbo"), "garb");});
test("garboli -> garbol", function() {deepEqual( Stem("garboli"), "garbol");});
test("garbugli -> garbugl", function() {deepEqual( Stem("garbugli"), "garbugl");});
test("garbuglio -> garbugl", function() {deepEqual( Stem("garbuglio"), "garbugl");});
test("garcia -> garc", function() {deepEqual( Stem("garcia"), "garc");});
test("garda -> gard", function() {deepEqual( Stem("garda"), "gard");});
test("garde -> gard", function() {deepEqual( Stem("garde"), "gard");});
test("gardena -> garden", function() {deepEqual( Stem("gardena"), "garden");});
test("gardini -> gardin", function() {deepEqual( Stem("gardini"), "gardin");});
test("gardone -> gardon", function() {deepEqual( Stem("gardone"), "gardon");});
test("gardonese -> gardones", function() {deepEqual( Stem("gardonese"), "gardones");});
test("gare -> gar", function() {deepEqual( Stem("gare"), "gar");});
test("gareggiando -> garegg", function() {deepEqual( Stem("gareggiando"), "garegg");});
test("gareggiato -> garegg", function() {deepEqual( Stem("gareggiato"), "garegg");});
test("gareggiavano -> garegg", function() {deepEqual( Stem("gareggiavano"), "garegg");});
test("gargani -> gargan", function() {deepEqual( Stem("gargani"), "gargan");});
test("gargiulo -> gargiul", function() {deepEqual( Stem("gargiulo"), "gargiul");});
test("garibaldi -> garibald", function() {deepEqual( Stem("garibaldi"), "garibald");});
test("garibaldì -> garibald", function() {deepEqual( Stem("garibaldì"), "garibald");});
test("garibaldini -> garibaldin", function() {deepEqual( Stem("garibaldini"), "garibaldin");});
test("garner -> garner", function() {deepEqual( Stem("garner"), "garner");});
test("garnett -> garnett", function() {deepEqual( Stem("garnett"), "garnett");});
test("garnier -> garnier", function() {deepEqual( Stem("garnier"), "garnier");});
test("garofalo -> garofal", function() {deepEqual( Stem("garofalo"), "garofal");});
test("garrison -> garrison", function() {deepEqual( Stem("garrison"), "garrison");});
test("garzoncello -> garzoncell", function() {deepEqual( Stem("garzoncello"), "garzoncell");});
test("garzone -> garzon", function() {deepEqual( Stem("garzone"), "garzon");});
test("garzoni -> garzon", function() {deepEqual( Stem("garzoni"), "garzon");});
test("gas -> gas", function() {deepEqual( Stem("gas"), "gas");});
test("gasdotto -> gasdott", function() {deepEqual( Stem("gasdotto"), "gasdott");});
test("gaspare -> gasp", function() {deepEqual( Stem("gaspare"), "gasp");});
test("gasparini -> gasparin", function() {deepEqual( Stem("gasparini"), "gasparin");});
test("gasparo -> gaspar", function() {deepEqual( Stem("gasparo"), "gaspar");});
test("gasparri -> gasparr", function() {deepEqual( Stem("gasparri"), "gasparr");});
test("gasperi -> gasper", function() {deepEqual( Stem("gasperi"), "gasper");});
test("gasperis -> gasperis", function() {deepEqual( Stem("gasperis"), "gasperis");});
test("gassi -> gass", function() {deepEqual( Stem("gassi"), "gass");});
test("gastiga -> gastig", function() {deepEqual( Stem("gastiga"), "gastig");});
test("gastigamatti -> gastigamatt", function() {deepEqual( Stem("gastigamatti"), "gastigamatt");});
test("gastigarli -> gastig", function() {deepEqual( Stem("gastigarli"), "gastig");});
test("gastigati -> gastig", function() {deepEqual( Stem("gastigati"), "gastig");});
test("gastigato -> gastig", function() {deepEqual( Stem("gastigato"), "gastig");});
test("gastighi -> gastig", function() {deepEqual( Stem("gastighi"), "gastig");});
test("gastigo -> gastig", function() {deepEqual( Stem("gastigo"), "gastig");});
test("gatta -> gatt", function() {deepEqual( Stem("gatta"), "gatt");});
test("gattai -> gatta", function() {deepEqual( Stem("gattai"), "gatta");});
test("gatti -> gatt", function() {deepEqual( Stem("gatti"), "gatt");});
test("gatto -> gatt", function() {deepEqual( Stem("gatto"), "gatt");});
test("gattoni -> gatton", function() {deepEqual( Stem("gattoni"), "gatton");});
test("gattuso -> gattus", function() {deepEqual( Stem("gattuso"), "gattus");});
test("gaudagnano -> gaudagn", function() {deepEqual( Stem("gaudagnano"), "gaudagn");});
test("gaudenzi -> gaudenz", function() {deepEqual( Stem("gaudenzi"), "gaudenz");});
test("gaudio -> gaud", function() {deepEqual( Stem("gaudio"), "gaud");});
test("gautieri -> gautier", function() {deepEqual( Stem("gautieri"), "gautier");});
test("gava -> gav", function() {deepEqual( Stem("gava"), "gav");});
test("gavci -> gavc", function() {deepEqual( Stem("gavci"), "gavc");});
test("gaviglio -> gavigl", function() {deepEqual( Stem("gaviglio"), "gavigl");});
test("gavino -> gavin", function() {deepEqual( Stem("gavino"), "gavin");});
test("gay -> gay", function() {deepEqual( Stem("gay"), "gay");});
test("gayet -> gayet", function() {deepEqual( Stem("gayet"), "gayet");});
test("gaz -> gaz", function() {deepEqual( Stem("gaz"), "gaz");});
test("gaza -> gaz", function() {deepEqual( Stem("gaza"), "gaz");});
test("gazebo -> gazeb", function() {deepEqual( Stem("gazebo"), "gazeb");});
test("gazebò -> gazeb", function() {deepEqual( Stem("gazebò"), "gazeb");});
test("gazeta -> gazet", function() {deepEqual( Stem("gazeta"), "gazet");});
test("gazzetta -> gazzett", function() {deepEqual( Stem("gazzetta"), "gazzett");});
test("gb -> gb", function() {deepEqual( Stem("gb"), "gb");});
test("gbr -> gbr", function() {deepEqual( Stem("gbr"), "gbr");});
test("gc -> gc", function() {deepEqual( Stem("gc"), "gc");});
test("gcos -> gcos", function() {deepEqual( Stem("gcos"), "gcos");});
test("gdf -> gdf", function() {deepEqual( Stem("gdf"), "gdf");});
test("ge -> ge", function() {deepEqual( Stem("ge"), "ge");});
test("gec -> gec", function() {deepEqual( Stem("gec"), "gec");});
test("geis -> geis", function() {deepEqual( Stem("geis"), "geis");});
test("geldolf -> geldolf", function() {deepEqual( Stem("geldolf"), "geldolf");});
test("gelfi -> gelf", function() {deepEqual( Stem("gelfi"), "gelf");});
test("gelida -> gelid", function() {deepEqual( Stem("gelida"), "gelid");});
test("gelli -> gell", function() {deepEqual( Stem("gelli"), "gell");});
test("gelosa -> gelos", function() {deepEqual( Stem("gelosa"), "gelos");});
test("gelosamente -> gelos", function() {deepEqual( Stem("gelosamente"), "gelos");});
test("gelosia -> gelos", function() {deepEqual( Stem("gelosia"), "gelos");});
test("geloso -> gelos", function() {deepEqual( Stem("geloso"), "gelos");});
test("gelsi -> gels", function() {deepEqual( Stem("gelsi"), "gels");});
test("gelso -> gels", function() {deepEqual( Stem("gelso"), "gels");});
test("gelsomini -> gelsomin", function() {deepEqual( Stem("gelsomini"), "gelsomin");});
test("gem -> gem", function() {deepEqual( Stem("gem"), "gem");});
test("geme -> gem", function() {deepEqual( Stem("geme"), "gem");});
test("gemelle -> gemell", function() {deepEqual( Stem("gemelle"), "gemell");});
test("gemevano -> gem", function() {deepEqual( Stem("gemevano"), "gem");});
test("gemina -> gemin", function() {deepEqual( Stem("gemina"), "gemin");});
test("gemiti -> gem", function() {deepEqual( Stem("gemiti"), "gem");});
test("gemma -> gemm", function() {deepEqual( Stem("gemma"), "gemm");});
test("gemonio -> gemon", function() {deepEqual( Stem("gemonio"), "gemon");});
test("gen -> gen", function() {deepEqual( Stem("gen"), "gen");});
test("gena -> gen", function() {deepEqual( Stem("gena"), "gen");});
test("genarale -> genaral", function() {deepEqual( Stem("genarale"), "genaral");});
test("genca -> genc", function() {deepEqual( Stem("genca"), "genc");});
test("genco -> genc", function() {deepEqual( Stem("genco"), "genc");});
test("general -> general", function() {deepEqual( Stem("general"), "general");});
test("generale -> general", function() {deepEqual( Stem("generale"), "general");});
test("generalfond -> generalfond", function() {deepEqual( Stem("generalfond"), "generalfond");});
test("generali -> general", function() {deepEqual( Stem("generali"), "general");});
test("generalita -> general", function() {deepEqual( Stem("generalita"), "general");});
test("generaliter -> generaliter", function() {deepEqual( Stem("generaliter"), "generaliter");});
test("generalizzata -> generalizz", function() {deepEqual( Stem("generalizzata"), "generalizz");});
test("generalmente -> general", function() {deepEqual( Stem("generalmente"), "general");});
test("generata -> gener", function() {deepEqual( Stem("generata"), "gener");});
test("generation -> generation", function() {deepEqual( Stem("generation"), "generation");});
test("generatori -> gener", function() {deepEqual( Stem("generatori"), "gener");});
test("generazione -> gener", function() {deepEqual( Stem("generazione"), "gener");});
test("generazioni -> gener", function() {deepEqual( Stem("generazioni"), "gener");});
test("genercomit -> genercomit", function() {deepEqual( Stem("genercomit"), "genercomit");});
test("genere -> gen", function() {deepEqual( Stem("genere"), "gen");});
test("generecomit -> generecomit", function() {deepEqual( Stem("generecomit"), "generecomit");});
test("generi -> gener", function() {deepEqual( Stem("generi"), "gener");});
test("generiche -> gener", function() {deepEqual( Stem("generiche"), "gener");});
test("generico -> gener", function() {deepEqual( Stem("generico"), "gener");});
test("genero -> gener", function() {deepEqual( Stem("genero"), "gener");});
test("generosa -> gener", function() {deepEqual( Stem("generosa"), "gener");});
test("generosamente -> gener", function() {deepEqual( Stem("generosamente"), "gener");});
test("generosi -> gener", function() {deepEqual( Stem("generosi"), "gener");});
test("generoso -> gener", function() {deepEqual( Stem("generoso"), "gener");});
test("gengive -> gengiv", function() {deepEqual( Stem("gengive"), "gengiv");});
test("genìa -> genì", function() {deepEqual( Stem("genìa"), "genì");});
test("geniali -> genial", function() {deepEqual( Stem("geniali"), "genial");});
test("genina -> genin", function() {deepEqual( Stem("genina"), "genin");});
test("genio -> gen", function() {deepEqual( Stem("genio"), "gen");});
test("genitori -> genitor", function() {deepEqual( Stem("genitori"), "genitor");});
test("geniturarum -> geniturarum", function() {deepEqual( Stem("geniturarum"), "geniturarum");});
test("gennaio -> gennai", function() {deepEqual( Stem("gennaio"), "gennai");});
test("gennaro -> gennar", function() {deepEqual( Stem("gennaro"), "gennar");});
test("genoa -> geno", function() {deepEqual( Stem("genoa"), "geno");});
test("genoana -> genoan", function() {deepEqual( Stem("genoana"), "genoan");});
test("genoani -> genoan", function() {deepEqual( Stem("genoani"), "genoan");});
test("genoano -> gen", function() {deepEqual( Stem("genoano"), "gen");});
test("genocidio -> genocid", function() {deepEqual( Stem("genocidio"), "genocid");});
test("genova -> genov", function() {deepEqual( Stem("genova"), "genov");});
test("genovese -> genoves", function() {deepEqual( Stem("genovese"), "genoves");});
test("gente -> gent", function() {deepEqual( Stem("gente"), "gent");});
test("gentè -> gent", function() {deepEqual( Stem("gentè"), "gent");});
test("genti -> gent", function() {deepEqual( Stem("genti"), "gent");});
test("gentil -> gentil", function() {deepEqual( Stem("gentil"), "gentil");});
test("gentildonna -> gentildonn", function() {deepEqual( Stem("gentildonna"), "gentildonn");});
test("gentile -> gentil", function() {deepEqual( Stem("gentile"), "gentil");});
test("gentilezza -> gentilezz", function() {deepEqual( Stem("gentilezza"), "gentilezz");});
test("gentilezze -> gentilezz", function() {deepEqual( Stem("gentilezze"), "gentilezz");});
test("gentili -> gentil", function() {deepEqual( Stem("gentili"), "gentil");});
test("gentilini -> gentilin", function() {deepEqual( Stem("gentilini"), "gentilin");});
test("gentilmente -> gentil", function() {deepEqual( Stem("gentilmente"), "gentil");});
test("gentiluomini -> gentiluomin", function() {deepEqual( Stem("gentiluomini"), "gentiluomin");});
test("gentiluomo -> gentiluom", function() {deepEqual( Stem("gentiluomo"), "gentiluom");});
test("gentium -> gentium", function() {deepEqual( Stem("gentium"), "gentium");});
test("gentlemen -> gentlemen", function() {deepEqual( Stem("gentlemen"), "gentlemen");});
test("genuflessi -> genufless", function() {deepEqual( Stem("genuflessi"), "genufless");});
test("genuinamente -> genuin", function() {deepEqual( Stem("genuinamente"), "genuin");});
test("genuini -> genuin", function() {deepEqual( Stem("genuini"), "genuin");});
test("geodes -> geodes", function() {deepEqual( Stem("geodes"), "geodes");});
test("geofisico -> geofis", function() {deepEqual( Stem("geofisico"), "geofis");});
test("geografica -> geograf", function() {deepEqual( Stem("geografica"), "geograf");});
test("geografiche -> geograf", function() {deepEqual( Stem("geografiche"), "geograf");});
test("geologi -> geolog", function() {deepEqual( Stem("geologi"), "geolog");});
test("george -> georg", function() {deepEqual( Stem("george"), "georg");});
test("georgetown -> georgetown", function() {deepEqual( Stem("georgetown"), "georgetown");});
test("georgia -> georg", function() {deepEqual( Stem("georgia"), "georg");});
test("georgiana -> georgian", function() {deepEqual( Stem("georgiana"), "georgian");});
test("gepi -> gep", function() {deepEqual( Stem("gepi"), "gep");});
test("gepobond -> gepobond", function() {deepEqual( Stem("gepobond"), "gepobond");});
test("gepocapital -> gepocapital", function() {deepEqual( Stem("gepocapital"), "gepocapital");});
test("geporeinvest -> geporeinvest", function() {deepEqual( Stem("geporeinvest"), "geporeinvest");});
test("geporend -> geporend", function() {deepEqual( Stem("geporend"), "geporend");});
test("gepoworld -> gepoworld", function() {deepEqual( Stem("gepoworld"), "gepoworld");});
test("ger -> ger", function() {deepEqual( Stem("ger"), "ger");});
test("gera -> ger", function() {deepEqual( Stem("gera"), "ger");});
test("gerarchia -> gerarc", function() {deepEqual( Stem("gerarchia"), "gerarc");});
test("gerardo -> gerard", function() {deepEqual( Stem("gerardo"), "gerard");});
test("gergo -> gerg", function() {deepEqual( Stem("gergo"), "gerg");});
test("gerico -> geric", function() {deepEqual( Stem("gerico"), "geric");});
test("gerla -> gerl", function() {deepEqual( Stem("gerla"), "gerl");});
test("gerle -> gerl", function() {deepEqual( Stem("gerle"), "gerl");});
test("gerletta -> gerlett", function() {deepEqual( Stem("gerletta"), "gerlett");});
test("germani -> german", function() {deepEqual( Stem("germani"), "german");});
test("germania -> german", function() {deepEqual( Stem("germania"), "german");});
test("germany -> germany", function() {deepEqual( Stem("germany"), "germany");});
test("germe -> germ", function() {deepEqual( Stem("germe"), "germ");});
test("germi -> germ", function() {deepEqual( Stem("germi"), "germ");});
test("germogliare -> germogl", function() {deepEqual( Stem("germogliare"), "germogl");});
test("gerolamo -> gerolam", function() {deepEqual( Stem("gerolamo"), "gerolam");});
test("gerold -> gerold", function() {deepEqual( Stem("gerold"), "gerold");});
test("gerry -> gerry", function() {deepEqual( Stem("gerry"), "gerry");});
test("gerson -> gerson", function() {deepEqual( Stem("gerson"), "gerson");});
test("gertrude -> gertrud", function() {deepEqual( Stem("gertrude"), "gertrud");});
test("gertrudina -> gertrudin", function() {deepEqual( Stem("gertrudina"), "gertrudin");});
test("gerusalemme -> gerusalemm", function() {deepEqual( Stem("gerusalemme"), "gerusalemm");});
test("gervaso -> gervas", function() {deepEqual( Stem("gervaso"), "gervas");});
test("gesfimi -> gesfim", function() {deepEqual( Stem("gesfimi"), "gesfim");});
test("gestapo -> gestap", function() {deepEqual( Stem("gestapo"), "gestap");});
test("gestendo -> gest", function() {deepEqual( Stem("gestendo"), "gest");});
test("gesti -> gest", function() {deepEqual( Stem("gesti"), "gest");});
test("gesticredit -> gesticredit", function() {deepEqual( Stem("gesticredit"), "gesticredit");});
test("gestielle -> gestiell", function() {deepEqual( Stem("gestielle"), "gestiell");});
test("gestifom -> gestifom", function() {deepEqual( Stem("gestifom"), "gestifom");});
test("gestifondi -> gestifond", function() {deepEqual( Stem("gestifondi"), "gestifond");});
test("gestiob -> gestiob", function() {deepEqual( Stem("gestiob"), "gestiob");});
test("gestionali -> gestional", function() {deepEqual( Stem("gestionali"), "gestional");});
test("gestione -> gestion", function() {deepEqual( Stem("gestione"), "gestion");});
test("gestirà -> gest", function() {deepEqual( Stem("gestirà"), "gest");});
test("gestiras -> gestiras", function() {deepEqual( Stem("gestiras"), "gestiras");});
test("gestire -> gest", function() {deepEqual( Stem("gestire"), "gest");});
test("gestisce -> gest", function() {deepEqual( Stem("gestisce"), "gest");});
test("gestiscono -> gest", function() {deepEqual( Stem("gestiscono"), "gest");});
test("gestite -> gest", function() {deepEqual( Stem("gestite"), "gest");});
test("gestito -> gest", function() {deepEqual( Stem("gestito"), "gest");});
test("gestnord -> gestnord", function() {deepEqual( Stem("gestnord"), "gestnord");});
test("gesto -> gest", function() {deepEqual( Stem("gesto"), "gest");});
test("gestore -> gestor", function() {deepEqual( Stem("gestore"), "gestor");});
test("gestuale -> gestual", function() {deepEqual( Stem("gestuale"), "gestual");});
test("gesù -> gesù", function() {deepEqual( Stem("gesù"), "gesù");});
test("getta -> gett", function() {deepEqual( Stem("getta"), "gett");});
test("gettando -> gett", function() {deepEqual( Stem("gettando"), "gett");});
test("gettandole -> gett", function() {deepEqual( Stem("gettandole"), "gett");});
test("gettar -> gett", function() {deepEqual( Stem("gettar"), "gett");});
test("gettare -> gett", function() {deepEqual( Stem("gettare"), "gett");});
test("gettarono -> gett", function() {deepEqual( Stem("gettarono"), "gett");});
test("gettarsele -> gettarsel", function() {deepEqual( Stem("gettarsele"), "gettarsel");});
test("gettarsi -> gett", function() {deepEqual( Stem("gettarsi"), "gett");});
test("gettasser -> gettasser", function() {deepEqual( Stem("gettasser"), "gettasser");});
test("gettata -> gett", function() {deepEqual( Stem("gettata"), "gett");});
test("gettate -> gett", function() {deepEqual( Stem("gettate"), "gett");});
test("gettato -> gett", function() {deepEqual( Stem("gettato"), "gett");});
test("getters -> getters", function() {deepEqual( Stem("getters"), "getters");});
test("getti -> gett", function() {deepEqual( Stem("getti"), "gett");});
test("gettito -> gett", function() {deepEqual( Stem("gettito"), "gett");});
test("getto -> gett", function() {deepEqual( Stem("getto"), "gett");});
test("gettò -> gett", function() {deepEqual( Stem("gettò"), "gett");});
test("gewiss -> gewiss", function() {deepEqual( Stem("gewiss"), "gewiss");});
test("gg -> gg", function() {deepEqual( Stem("gg"), "gg");});
test("gh -> gh", function() {deepEqual( Stem("gh"), "gh");});
test("ghafoor -> ghafoor", function() {deepEqual( Stem("ghafoor"), "ghafoor");});
test("ghali -> ghal", function() {deepEqual( Stem("ghali"), "ghal");});
test("ghennadi -> ghennad", function() {deepEqual( Stem("ghennadi"), "ghennad");});
test("ghermito -> gherm", function() {deepEqual( Stem("ghermito"), "gherm");});
test("gheroni -> gheron", function() {deepEqual( Stem("gheroni"), "gheron");});
test("ghetto -> ghett", function() {deepEqual( Stem("ghetto"), "ghett");});
test("ghezzi -> ghezz", function() {deepEqual( Stem("ghezzi"), "ghezz");});
test("ghiacci -> ghiacc", function() {deepEqual( Stem("ghiacci"), "ghiacc");});
test("ghiaccio -> ghiacc", function() {deepEqual( Stem("ghiaccio"), "ghiacc");});
test("ghiaia -> ghiai", function() {deepEqual( Stem("ghiaia"), "ghiai");});
test("ghiaie -> ghiai", function() {deepEqual( Stem("ghiaie"), "ghiai");});
test("ghigno -> ghign", function() {deepEqual( Stem("ghigno"), "ghign");});
test("ghirardelli -> ghirardell", function() {deepEqual( Stem("ghirardelli"), "ghirardell");});
test("ghoober -> ghoober", function() {deepEqual( Stem("ghoober"), "ghoober");});
test("gi -> gi", function() {deepEqual( Stem("gi"), "gi");});
test("già -> già", function() {deepEqual( Stem("già"), "già");});
test("giacarta -> giacart", function() {deepEqual( Stem("giacarta"), "giacart");});
test("giacché -> giacc", function() {deepEqual( Stem("giacché"), "giacc");});
test("giacciono -> giacc", function() {deepEqual( Stem("giacciono"), "giacc");});
test("giace -> giac", function() {deepEqual( Stem("giace"), "giac");});
test("giacere -> giac", function() {deepEqual( Stem("giacere"), "giac");});
test("giaceva -> giac", function() {deepEqual( Stem("giaceva"), "giac");});
test("giacevano -> giac", function() {deepEqual( Stem("giacevano"), "giac");});
test("giacimenti -> giac", function() {deepEqual( Stem("giacimenti"), "giac");});
test("giacimento -> giac", function() {deepEqual( Stem("giacimento"), "giac");});
test("giacobbo -> giacobb", function() {deepEqual( Stem("giacobbo"), "giacobb");});
test("giacomel -> giacomel", function() {deepEqual( Stem("giacomel"), "giacomel");});
test("giacomelli -> giacomell", function() {deepEqual( Stem("giacomelli"), "giacomell");});
test("giacomin -> giacomin", function() {deepEqual( Stem("giacomin"), "giacomin");});
test("giacomo -> giacom", function() {deepEqual( Stem("giacomo"), "giacom");});
test("gialappàs -> gialappàs", function() {deepEqual( Stem("gialappàs"), "gialappàs");});
test("gialla -> giall", function() {deepEqual( Stem("gialla"), "giall");});
test("gialle -> giall", function() {deepEqual( Stem("gialle"), "giall");});
test("gialli -> giall", function() {deepEqual( Stem("gialli"), "giall");});
test("giallo -> giall", function() {deepEqual( Stem("giallo"), "giall");});
test("gialloblù -> gialloblù", function() {deepEqual( Stem("gialloblù"), "gialloblù");});
test("giallognola -> giallognol", function() {deepEqual( Stem("giallognola"), "giallognol");});
test("giallorossa -> gialloross", function() {deepEqual( Stem("giallorossa"), "gialloross");});
test("giallorosso -> gialloross", function() {deepEqual( Stem("giallorosso"), "gialloross");});
test("giamai -> giama", function() {deepEqual( Stem("giamai"), "giama");});
test("giamaica -> giamaic", function() {deepEqual( Stem("giamaica"), "giamaic");});
test("giambra -> giambr", function() {deepEqual( Stem("giambra"), "giambr");});
test("giammai -> giamma", function() {deepEqual( Stem("giammai"), "giamma");});
test("giampaolo -> giampaol", function() {deepEqual( Stem("giampaolo"), "giampaol");});
test("giampiero -> giampier", function() {deepEqual( Stem("giampiero"), "giampier");});
test("gian -> gian", function() {deepEqual( Stem("gian"), "gian");});
test("giancarlo -> gianc", function() {deepEqual( Stem("giancarlo"), "gianc");});
test("gianfranco -> gianfranc", function() {deepEqual( Stem("gianfranco"), "gianfranc");});
test("giangiacomo -> giangiacom", function() {deepEqual( Stem("giangiacomo"), "giangiacom");});
test("gianluca -> gianluc", function() {deepEqual( Stem("gianluca"), "gianluc");});
test("gianluigi -> gianluig", function() {deepEqual( Stem("gianluigi"), "gianluig");});
test("giannantonio -> giannanton", function() {deepEqual( Stem("giannantonio"), "giannanton");});
test("giannatale -> giannatal", function() {deepEqual( Stem("giannatale"), "giannatal");});
test("giannetti -> giannett", function() {deepEqual( Stem("giannetti"), "giannett");});
test("gianni -> giann", function() {deepEqual( Stem("gianni"), "giann");});
test("giannini -> giannin", function() {deepEqual( Stem("giannini"), "giannin");});
test("giannino -> giannin", function() {deepEqual( Stem("giannino"), "giannin");});
test("giannuzzi -> giannuzz", function() {deepEqual( Stem("giannuzzi"), "giannuzz");});
test("gianpaolo -> gianpaol", function() {deepEqual( Stem("gianpaolo"), "gianpaol");});
test("giappone -> giappon", function() {deepEqual( Stem("giappone"), "giappon");});
test("giapponese -> giappones", function() {deepEqual( Stem("giapponese"), "giappones");});
test("giapponesi -> giappones", function() {deepEqual( Stem("giapponesi"), "giappones");});
test("giapppone -> giapppon", function() {deepEqual( Stem("giapppone"), "giapppon");});
test("giarda -> giard", function() {deepEqual( Stem("giarda"), "giard");});
test("giardin -> giardin", function() {deepEqual( Stem("giardin"), "giardin");});
test("giardinetto -> giardinett", function() {deepEqual( Stem("giardinetto"), "giardinett");});
test("giardini -> giardin", function() {deepEqual( Stem("giardini"), "giardin");});
test("giardiniere -> giardin", function() {deepEqual( Stem("giardiniere"), "giardin");});
test("giardino -> giardin", function() {deepEqual( Stem("giardino"), "giardin");});
test("gifim -> gifim", function() {deepEqual( Stem("gifim"), "gifim");});
test("gigante -> gigant", function() {deepEqual( Stem("gigante"), "gigant");});
test("gigantesca -> gigantesc", function() {deepEqual( Stem("gigantesca"), "gigantesc");});
test("gigantesco -> gigantesc", function() {deepEqual( Stem("gigantesco"), "gigantesc");});
test("giganti -> gigant", function() {deepEqual( Stem("giganti"), "gigant");});
test("gigi -> gig", function() {deepEqual( Stem("gigi"), "gig");});
test("gigli -> gigl", function() {deepEqual( Stem("gigli"), "gigl");});
test("giglio -> gigl", function() {deepEqual( Stem("giglio"), "gigl");});
test("gil -> gil", function() {deepEqual( Stem("gil"), "gil");});
test("gilardini -> gilardin", function() {deepEqual( Stem("gilardini"), "gilardin");});
test("gillian -> gillian", function() {deepEqual( Stem("gillian"), "gillian");});
test("gilly -> gilly", function() {deepEqual( Stem("gilly"), "gilly");});
test("gim -> gim", function() {deepEqual( Stem("gim"), "gim");});
test("gin -> gin", function() {deepEqual( Stem("gin"), "gin");});
test("gina -> gin", function() {deepEqual( Stem("gina"), "gin");});
test("ginevra -> ginevr", function() {deepEqual( Stem("ginevra"), "ginevr");});
test("ginn -> ginn", function() {deepEqual( Stem("ginn"), "ginn");});
test("ginnastica -> ginnast", function() {deepEqual( Stem("ginnastica"), "ginnast");});
test("gino -> gin", function() {deepEqual( Stem("gino"), "gin");});
test("ginocchia -> ginocc", function() {deepEqual( Stem("ginocchia"), "ginocc");});
test("ginocchio -> ginocc", function() {deepEqual( Stem("ginocchio"), "ginocc");});
test("ginocchioni -> ginocchion", function() {deepEqual( Stem("ginocchioni"), "ginocchion");});
test("gioca -> gioc", function() {deepEqual( Stem("gioca"), "gioc");});
test("giocando -> gioc", function() {deepEqual( Stem("giocando"), "gioc");});
test("giocano -> gioc", function() {deepEqual( Stem("giocano"), "gioc");});
test("giocare -> gioc", function() {deepEqual( Stem("giocare"), "gioc");});
test("giocata -> gioc", function() {deepEqual( Stem("giocata"), "gioc");});
test("giocate -> gioc", function() {deepEqual( Stem("giocate"), "gioc");});
test("giocato -> gioc", function() {deepEqual( Stem("giocato"), "gioc");});
test("giocator -> giocator", function() {deepEqual( Stem("giocator"), "giocator");});
test("giocatore -> giocator", function() {deepEqual( Stem("giocatore"), "giocator");});
test("giocatori -> giocator", function() {deepEqual( Stem("giocatori"), "giocator");});
test("giocatrici -> giocatric", function() {deepEqual( Stem("giocatrici"), "giocatric");});
test("giocava -> gioc", function() {deepEqual( Stem("giocava"), "gioc");});
test("giocavan -> giocavan", function() {deepEqual( Stem("giocavan"), "giocavan");});
test("giocavano -> gioc", function() {deepEqual( Stem("giocavano"), "gioc");});
test("giocherà -> gioc", function() {deepEqual( Stem("giocherà"), "gioc");});
test("giocheresti -> gioc", function() {deepEqual( Stem("giocheresti"), "gioc");});
test("giochetto -> giochett", function() {deepEqual( Stem("giochetto"), "giochett");});
test("giochi -> gioc", function() {deepEqual( Stem("giochi"), "gioc");});
test("gioco -> gioc", function() {deepEqual( Stem("gioco"), "gioc");});
test("giocolieri -> giocolier", function() {deepEqual( Stem("giocolieri"), "giocolier");});
test("giocondi -> giocond", function() {deepEqual( Stem("giocondi"), "giocond");});
test("giocondità -> giocond", function() {deepEqual( Stem("giocondità"), "giocond");});
test("giocondo -> giocond", function() {deepEqual( Stem("giocondo"), "giocond");});
test("giocoso -> giocos", function() {deepEqual( Stem("giocoso"), "giocos");});
test("giogaia -> giogai", function() {deepEqual( Stem("giogaia"), "giogai");});
test("gioghi -> giog", function() {deepEqual( Stem("gioghi"), "giog");});
test("giogo -> giog", function() {deepEqual( Stem("giogo"), "giog");});
test("gioia -> gioi", function() {deepEqual( Stem("gioia"), "gioi");});
test("gioià -> gioi", function() {deepEqual( Stem("gioià"), "gioi");});
test("gioie -> gioi", function() {deepEqual( Stem("gioie"), "gioi");});
test("gioiello -> gioiell", function() {deepEqual( Stem("gioiello"), "gioiell");});
test("gioiosa -> gioios", function() {deepEqual( Stem("gioiosa"), "gioios");});
test("giokhar -> giokh", function() {deepEqual( Stem("giokhar"), "giokh");});
test("giombini -> giombin", function() {deepEqual( Stem("giombini"), "giombin");});
test("gionata -> gion", function() {deepEqual( Stem("gionata"), "gion");});
test("gionate -> gion", function() {deepEqual( Stem("gionate"), "gion");});
test("giordania -> giordan", function() {deepEqual( Stem("giordania"), "giordan");});
test("giordano -> giord", function() {deepEqual( Stem("giordano"), "giord");});
test("gioregio -> gioreg", function() {deepEqual( Stem("gioregio"), "gioreg");});
test("giorgio -> giorg", function() {deepEqual( Stem("giorgio"), "giorg");});
test("giorgione -> giorgion", function() {deepEqual( Stem("giorgione"), "giorgion");});
test("giornale -> giornal", function() {deepEqual( Stem("giornale"), "giornal");});
test("giornalè -> giornal", function() {deepEqual( Stem("giornalè"), "giornal");});
test("giornali -> giornal", function() {deepEqual( Stem("giornali"), "giornal");});
test("giornaliera -> giornalier", function() {deepEqual( Stem("giornaliera"), "giornalier");});
test("giornaliere -> giornal", function() {deepEqual( Stem("giornaliere"), "giornal");});
test("giornaliero -> giornalier", function() {deepEqual( Stem("giornaliero"), "giornalier");});
test("giornalismo -> giornal", function() {deepEqual( Stem("giornalismo"), "giornal");});
test("giornalista -> giornal", function() {deepEqual( Stem("giornalista"), "giornal");});
test("giornaliste -> giornal", function() {deepEqual( Stem("giornaliste"), "giornal");});
test("giornalisti -> giornal", function() {deepEqual( Stem("giornalisti"), "giornal");});
test("giornalistica -> giornalist", function() {deepEqual( Stem("giornalistica"), "giornalist");});
test("giornalisticamente -> giornalist", function() {deepEqual( Stem("giornalisticamente"), "giornalist");});
test("giornalistici -> giornalist", function() {deepEqual( Stem("giornalistici"), "giornalist");});
test("giornalistico -> giornalist", function() {deepEqual( Stem("giornalistico"), "giornalist");});
test("giornalisticò -> giornalistic", function() {deepEqual( Stem("giornalisticò"), "giornalistic");});
test("giornalmente -> giornal", function() {deepEqual( Stem("giornalmente"), "giornal");});
test("giornalsti -> giornalst", function() {deepEqual( Stem("giornalsti"), "giornalst");});
test("giornata -> giorn", function() {deepEqual( Stem("giornata"), "giorn");});
test("giornate -> giorn", function() {deepEqual( Stem("giornate"), "giorn");});
test("giorni -> giorn", function() {deepEqual( Stem("giorni"), "giorn");});
test("giorno -> giorn", function() {deepEqual( Stem("giorno"), "giorn");});
test("giosafat -> giosafat", function() {deepEqual( Stem("giosafat"), "giosafat");});
test("giova -> giov", function() {deepEqual( Stem("giova"), "giov");});
test("giovacchini -> giovacchin", function() {deepEqual( Stem("giovacchini"), "giovacchin");});
test("giovamento -> giov", function() {deepEqual( Stem("giovamento"), "giov");});
test("giovanbatista -> giovanbat", function() {deepEqual( Stem("giovanbatista"), "giovanbat");});
test("giovanbattista -> giovanbatt", function() {deepEqual( Stem("giovanbattista"), "giovanbatt");});
test("giovane -> giovan", function() {deepEqual( Stem("giovane"), "giovan");});
test("giovanetto -> giovanett", function() {deepEqual( Stem("giovanetto"), "giovanett");});
test("giovani -> giovan", function() {deepEqual( Stem("giovani"), "giovan");});
test("giovanile -> giovanil", function() {deepEqual( Stem("giovanile"), "giovanil");});
test("giovanili -> giovanil", function() {deepEqual( Stem("giovanili"), "giovanil");});
test("giovanni -> giovann", function() {deepEqual( Stem("giovanni"), "giovann");});
test("giovanotto -> giovanott", function() {deepEqual( Stem("giovanotto"), "giovanott");});
test("giovasse -> giov", function() {deepEqual( Stem("giovasse"), "giov");});
test("giovato -> giov", function() {deepEqual( Stem("giovato"), "giov");});
test("giove -> giov", function() {deepEqual( Stem("giove"), "giov");});
test("giovedì -> gioved", function() {deepEqual( Stem("giovedì"), "gioved");});
test("gioventù -> gioventù", function() {deepEqual( Stem("gioventù"), "gioventù");});
test("gioverebbero -> giov", function() {deepEqual( Stem("gioverebbero"), "giov");});
test("giovia -> giov", function() {deepEqual( Stem("giovia"), "giov");});
test("gioviale -> giovial", function() {deepEqual( Stem("gioviale"), "giovial");});
test("gioviali -> giovial", function() {deepEqual( Stem("gioviali"), "giovial");});
test("giovinastri -> giovinastr", function() {deepEqual( Stem("giovinastri"), "giovinastr");});
test("giovine -> giovin", function() {deepEqual( Stem("giovine"), "giovin");});
test("giovinetta -> giovinett", function() {deepEqual( Stem("giovinetta"), "giovinett");});
test("giovinette -> giovinett", function() {deepEqual( Stem("giovinette"), "giovinett");});
test("giovinetti -> giovinett", function() {deepEqual( Stem("giovinetti"), "giovinett");});
test("giovinetto -> giovinett", function() {deepEqual( Stem("giovinetto"), "giovinett");});
test("giovinezza -> giovinezz", function() {deepEqual( Stem("giovinezza"), "giovinezz");});
test("giovinissimo -> giovinissim", function() {deepEqual( Stem("giovinissimo"), "giovinissim");});
test("giovinotto -> giovinott", function() {deepEqual( Stem("giovinotto"), "giovinott");});
test("gip -> gip", function() {deepEqual( Stem("gip"), "gip");});
test("gipo -> gip", function() {deepEqual( Stem("gipo"), "gip");});
test("gira -> gir", function() {deepEqual( Stem("gira"), "gir");});
test("giraldi -> girald", function() {deepEqual( Stem("giraldi"), "girald");});
test("giran -> giran", function() {deepEqual( Stem("giran"), "giran");});
test("girando -> gir", function() {deepEqual( Stem("girando"), "gir");});
test("girandolar -> girandol", function() {deepEqual( Stem("girandolar"), "girandol");});
test("girandoli -> gir", function() {deepEqual( Stem("girandoli"), "gir");});
test("girar -> gir", function() {deepEqual( Stem("girar"), "gir");});
test("girare -> gir", function() {deepEqual( Stem("girare"), "gir");});
test("girata -> gir", function() {deepEqual( Stem("girata"), "gir");});
test("girati -> gir", function() {deepEqual( Stem("girati"), "gir");});
test("giratina -> giratin", function() {deepEqual( Stem("giratina"), "giratin");});
test("girato -> gir", function() {deepEqual( Stem("girato"), "gir");});
test("girava -> gir", function() {deepEqual( Stem("girava"), "gir");});
test("giravano -> gir", function() {deepEqual( Stem("giravano"), "gir");});
test("giravolta -> giravolt", function() {deepEqual( Stem("giravolta"), "giravolt");});
test("giravolte -> giravolt", function() {deepEqual( Stem("giravolte"), "giravolt");});
test("giri -> gir", function() {deepEqual( Stem("giri"), "gir");});
test("girigogolo -> girigogol", function() {deepEqual( Stem("girigogolo"), "girigogol");});
test("giro -> gir", function() {deepEqual( Stem("giro"), "gir");});
test("girò -> gir", function() {deepEqual( Stem("girò"), "gir");});
test("girolama -> girolam", function() {deepEqual( Stem("girolama"), "girolam");});
test("girolamo -> girolam", function() {deepEqual( Stem("girolamo"), "girolam");});
test("girone -> giron", function() {deepEqual( Stem("girone"), "giron");});
test("gisutizia -> gisutiz", function() {deepEqual( Stem("gisutizia"), "gisutiz");});
test("gita -> git", function() {deepEqual( Stem("gita"), "git");});
test("gitonga -> gitong", function() {deepEqual( Stem("gitonga"), "gitong");});
test("giu -> giu", function() {deepEqual( Stem("giu"), "giu");});
test("giù -> giù", function() {deepEqual( Stem("giù"), "giù");});
test("giubbotti -> giubbott", function() {deepEqual( Stem("giubbotti"), "giubbott");});
test("giubbotto -> giubbott", function() {deepEqual( Stem("giubbotto"), "giubbott");});
test("giubileo -> giubile", function() {deepEqual( Stem("giubileo"), "giubile");});
test("giubilo -> giubil", function() {deepEqual( Stem("giubilo"), "giubil");});
test("giucas -> giucas", function() {deepEqual( Stem("giucas"), "giucas");});
test("giuda -> giud", function() {deepEqual( Stem("giuda"), "giud");});
test("giudei -> giude", function() {deepEqual( Stem("giudei"), "giude");});
test("giudeo -> giude", function() {deepEqual( Stem("giudeo"), "giude");});
test("giudica -> giudic", function() {deepEqual( Stem("giudica"), "giudic");});
test("giudicano -> giudic", function() {deepEqual( Stem("giudicano"), "giudic");});
test("giudicante -> giudic", function() {deepEqual( Stem("giudicante"), "giudic");});
test("giudicar -> giudic", function() {deepEqual( Stem("giudicar"), "giudic");});
test("giudicare -> giudic", function() {deepEqual( Stem("giudicare"), "giudic");});
test("giudicasse -> giudic", function() {deepEqual( Stem("giudicasse"), "giudic");});
test("giudicata -> giudic", function() {deepEqual( Stem("giudicata"), "giudic");});
test("giudicate -> giudic", function() {deepEqual( Stem("giudicate"), "giudic");});
test("giudicati -> giudic", function() {deepEqual( Stem("giudicati"), "giudic");});
test("giudicato -> giudic", function() {deepEqual( Stem("giudicato"), "giudic");});
test("giudice -> giudic", function() {deepEqual( Stem("giudice"), "giudic");});
test("giudici -> giudic", function() {deepEqual( Stem("giudici"), "giudic");});
test("giudicò -> giudic", function() {deepEqual( Stem("giudicò"), "giudic");});
test("giudizi -> giudiz", function() {deepEqual( Stem("giudizi"), "giudiz");});
test("giudiziale -> giudizial", function() {deepEqual( Stem("giudiziale"), "giudizial");});
test("giudiziari -> giudiziar", function() {deepEqual( Stem("giudiziari"), "giudiziar");});
test("giudiziaria -> giudiziar", function() {deepEqual( Stem("giudiziaria"), "giudiziar");});
test("giudiziarie -> giudiziar", function() {deepEqual( Stem("giudiziarie"), "giudiziar");});
test("giudiziario -> giudiziar", function() {deepEqual( Stem("giudiziario"), "giudiziar");});
test("giudizio -> giudiz", function() {deepEqual( Stem("giudizio"), "giudiz");});
test("giudizioaria -> giudizioar", function() {deepEqual( Stem("giudizioaria"), "giudizioar");});
test("giudizioso -> giudiz", function() {deepEqual( Stem("giudizioso"), "giudiz");});
test("giuerra -> giuerr", function() {deepEqual( Stem("giuerra"), "giuerr");});
test("giugni -> giugn", function() {deepEqual( Stem("giugni"), "giugn");});
test("giugno -> giugn", function() {deepEqual( Stem("giugno"), "giugn");});
test("giulia -> giul", function() {deepEqual( Stem("giulia"), "giul");});
test("giuliana -> giulian", function() {deepEqual( Stem("giuliana"), "giulian");});
test("giuliani -> giulian", function() {deepEqual( Stem("giuliani"), "giulian");});
test("giuliano -> giul", function() {deepEqual( Stem("giuliano"), "giul");});
test("giulianova -> giulianov", function() {deepEqual( Stem("giulianova"), "giulianov");});
test("giulietta -> giuliett", function() {deepEqual( Stem("giulietta"), "giuliett");});
test("giulietti -> giuliett", function() {deepEqual( Stem("giulietti"), "giuliett");});
test("giulio -> giul", function() {deepEqual( Stem("giulio"), "giul");});
test("giulivo -> giul", function() {deepEqual( Stem("giulivo"), "giul");});
test("giunga -> giung", function() {deepEqual( Stem("giunga"), "giung");});
test("giunge -> giung", function() {deepEqual( Stem("giunge"), "giung");});
test("giungendo -> giung", function() {deepEqual( Stem("giungendo"), "giung");});
test("giungere -> giung", function() {deepEqual( Stem("giungere"), "giung");});
test("giungla -> giungl", function() {deepEqual( Stem("giungla"), "giungl");});
test("giungono -> giung", function() {deepEqual( Stem("giungono"), "giung");});
test("giunse -> giuns", function() {deepEqual( Stem("giunse"), "giuns");});
test("giunsero -> giunser", function() {deepEqual( Stem("giunsero"), "giunser");});
test("giunta -> giunt", function() {deepEqual( Stem("giunta"), "giunt");});
test("giuntarono -> giunt", function() {deepEqual( Stem("giuntarono"), "giunt");});
test("giunte -> giunt", function() {deepEqual( Stem("giunte"), "giunt");});
test("giunti -> giunt", function() {deepEqual( Stem("giunti"), "giunt");});
test("giunto -> giunt", function() {deepEqual( Stem("giunto"), "giunt");});
test("giuoco -> giuoc", function() {deepEqual( Stem("giuoco"), "giuoc");});
test("giura -> giur", function() {deepEqual( Stem("giura"), "giur");});
test("giuramenti -> giur", function() {deepEqual( Stem("giuramenti"), "giur");});
test("giuramento -> giur", function() {deepEqual( Stem("giuramento"), "giur");});
test("giurando -> giur", function() {deepEqual( Stem("giurando"), "giur");});
test("giurare -> giur", function() {deepEqual( Stem("giurare"), "giur");});
test("giurata -> giur", function() {deepEqual( Stem("giurata"), "giur");});
test("giurate -> giur", function() {deepEqual( Stem("giurate"), "giur");});
test("giurati -> giur", function() {deepEqual( Stem("giurati"), "giur");});
test("giurato -> giur", function() {deepEqual( Stem("giurato"), "giur");});
test("giureconsulto -> giureconsult", function() {deepEqual( Stem("giureconsulto"), "giureconsult");});
test("giuria -> giur", function() {deepEqual( Stem("giuria"), "giur");});
test("giuriamo -> giur", function() {deepEqual( Stem("giuriamo"), "giur");});
test("giuridica -> giurid", function() {deepEqual( Stem("giuridica"), "giurid");});
test("giuridiche -> giurid", function() {deepEqual( Stem("giuridiche"), "giurid");});
test("giuridici -> giurid", function() {deepEqual( Stem("giuridici"), "giurid");});
test("giuridico -> giurid", function() {deepEqual( Stem("giuridico"), "giurid");});
test("giurisdizione -> giurisdizion", function() {deepEqual( Stem("giurisdizione"), "giurisdizion");});
test("giurisperiti -> giurisper", function() {deepEqual( Stem("giurisperiti"), "giurisper");});
test("giurisprudenza -> giurisprudent", function() {deepEqual( Stem("giurisprudenza"), "giurisprudent");});
test("giuro -> giur", function() {deepEqual( Stem("giuro"), "giur");});
test("giuseppa -> giusepp", function() {deepEqual( Stem("giuseppa"), "giusepp");});
test("giuseppe -> giusepp", function() {deepEqual( Stem("giuseppe"), "giusepp");});
test("giuseppina -> giuseppin", function() {deepEqual( Stem("giuseppina"), "giuseppin");});
test("giussano -> giuss", function() {deepEqual( Stem("giussano"), "giuss");});
test("giusta -> giust", function() {deepEqual( Stem("giusta"), "giust");});
test("giustamente -> giust", function() {deepEqual( Stem("giustamente"), "giust");});
test("giuste -> giust", function() {deepEqual( Stem("giuste"), "giust");});
test("giusti -> giust", function() {deepEqual( Stem("giusti"), "giust");});
test("giustificare -> giustific", function() {deepEqual( Stem("giustificare"), "giustific");});
test("giustificarlo -> giustific", function() {deepEqual( Stem("giustificarlo"), "giustific");});
test("giustificarne -> giustific", function() {deepEqual( Stem("giustificarne"), "giustific");});
test("giustificata -> giustific", function() {deepEqual( Stem("giustificata"), "giustific");});
test("giustificati -> giustific", function() {deepEqual( Stem("giustificati"), "giustific");});
test("giustificato -> giustific", function() {deepEqual( Stem("giustificato"), "giustific");});
test("giustificazione -> giustif", function() {deepEqual( Stem("giustificazione"), "giustif");});
test("giustificherò -> giustific", function() {deepEqual( Stem("giustificherò"), "giustific");});
test("giustiniani -> giustinian", function() {deepEqual( Stem("giustiniani"), "giustinian");});
test("giustizia -> giustiz", function() {deepEqual( Stem("giustizia"), "giustiz");});
test("giustizialismo -> giustizial", function() {deepEqual( Stem("giustizialismo"), "giustizial");});
test("giustizie -> giustiz", function() {deepEqual( Stem("giustizie"), "giustiz");});
test("giustiziere -> giustiz", function() {deepEqual( Stem("giustiziere"), "giustiz");});
test("giusto -> giust", function() {deepEqual( Stem("giusto"), "giust");});
test("giustzia -> giustz", function() {deepEqual( Stem("giustzia"), "giustz");});
test("gl -> gl", function() {deepEqual( Stem("gl"), "gl");});
test("glan -> glan", function() {deepEqual( Stem("glan"), "glan");});
test("glasgow -> glasgow", function() {deepEqual( Stem("glasgow"), "glasgow");});
test("glbale -> glbal", function() {deepEqual( Stem("glbale"), "glbal");});
test("glenn -> glenn", function() {deepEqual( Stem("glenn"), "glenn");});
test("gli -> gli", function() {deepEqual( Stem("gli"), "gli");});
test("gliel -> gliel", function() {deepEqual( Stem("gliel"), "gliel");});
test("gliela -> gliel", function() {deepEqual( Stem("gliela"), "gliel");});
test("gliele -> gliel", function() {deepEqual( Stem("gliele"), "gliel");});
test("glieli -> gliel", function() {deepEqual( Stem("glieli"), "gliel");});
test("glielo -> gliel", function() {deepEqual( Stem("glielo"), "gliel");});
test("glien -> glien", function() {deepEqual( Stem("glien"), "glien");});
test("gliene -> glien", function() {deepEqual( Stem("gliene"), "glien");});
test("glissato -> gliss", function() {deepEqual( Stem("glissato"), "gliss");});
test("global -> global", function() {deepEqual( Stem("global"), "global");});
test("globale -> global", function() {deepEqual( Stem("globale"), "global");});
test("globalizzazione -> globalizz", function() {deepEqual( Stem("globalizzazione"), "globalizz");});
test("globarend -> globarend", function() {deepEqual( Stem("globarend"), "globarend");});
test("globefish -> globefish", function() {deepEqual( Stem("globefish"), "globefish");});
test("globi -> glob", function() {deepEqual( Stem("globi"), "glob");});
test("globo -> glob", function() {deepEqual( Stem("globo"), "glob");});
test("gloria -> glor", function() {deepEqual( Stem("gloria"), "glor");});
test("glorificato -> glorific", function() {deepEqual( Stem("glorificato"), "glorific");});
test("gloriosa -> glorios", function() {deepEqual( Stem("gloriosa"), "glorios");});
test("gloriose -> glorios", function() {deepEqual( Stem("gloriose"), "glorios");});
test("glorioso -> glorios", function() {deepEqual( Stem("glorioso"), "glorios");});
test("gloucester -> gloucester", function() {deepEqual( Stem("gloucester"), "gloucester");});
test("gmbh -> gmbh", function() {deepEqual( Stem("gmbh"), "gmbh");});
test("gmr -> gmr", function() {deepEqual( Stem("gmr"), "gmr");});
test("gmt -> gmt", function() {deepEqual( Stem("gmt"), "gmt");});
test("gn -> gn", function() {deepEqual( Stem("gn"), "gn");});
test("gnl -> gnl", function() {deepEqual( Stem("gnl"), "gnl");});
test("gnutti -> gnutt", function() {deepEqual( Stem("gnutti"), "gnutt");});
test("gocciola -> gocciol", function() {deepEqual( Stem("gocciola"), "gocciol");});
test("gocciolanti -> gocciol", function() {deepEqual( Stem("gocciolanti"), "gocciol");});
test("gocciole -> gocciol", function() {deepEqual( Stem("gocciole"), "gocciol");});
test("gocciolino -> gocciolin", function() {deepEqual( Stem("gocciolino"), "gocciolin");});
test("gocciolo -> gocciol", function() {deepEqual( Stem("gocciolo"), "gocciol");});
test("goccioloni -> gocciolon", function() {deepEqual( Stem("goccioloni"), "gocciolon");});
test("goda -> god", function() {deepEqual( Stem("goda"), "god");});
test("godard -> godard", function() {deepEqual( Stem("godard"), "godard");});
test("goder -> goder", function() {deepEqual( Stem("goder"), "goder");});
test("godere -> god", function() {deepEqual( Stem("godere"), "god");});
test("goderebbe -> god", function() {deepEqual( Stem("goderebbe"), "god");});
test("goderla -> god", function() {deepEqual( Stem("goderla"), "god");});
test("godersela -> godersel", function() {deepEqual( Stem("godersela"), "godersel");});
test("godersi -> god", function() {deepEqual( Stem("godersi"), "god");});
test("godesse -> godess", function() {deepEqual( Stem("godesse"), "godess");});
test("godeva -> god", function() {deepEqual( Stem("godeva"), "god");});
test("godfrey -> godfrey", function() {deepEqual( Stem("godfrey"), "godfrey");});
test("godiamola -> godiamol", function() {deepEqual( Stem("godiamola"), "godiamol");});
test("godimenti -> god", function() {deepEqual( Stem("godimenti"), "god");});
test("godo -> god", function() {deepEqual( Stem("godo"), "god");});
test("godono -> god", function() {deepEqual( Stem("godono"), "god");});
test("godrei -> godre", function() {deepEqual( Stem("godrei"), "godre");});
test("godute -> god", function() {deepEqual( Stem("godute"), "god");});
test("goduti -> god", function() {deepEqual( Stem("goduti"), "god");});
test("goduto -> god", function() {deepEqual( Stem("goduto"), "god");});
test("goebbels -> goebbels", function() {deepEqual( Stem("goebbels"), "goebbels");});
test("goetschi -> goetsc", function() {deepEqual( Stem("goetschi"), "goetsc");});
test("goffa -> goff", function() {deepEqual( Stem("goffa"), "goff");});
test("goffaggine -> goffaggin", function() {deepEqual( Stem("goffaggine"), "goffaggin");});
test("goffamente -> goff", function() {deepEqual( Stem("goffamente"), "goff");});
test("gol -> gol", function() {deepEqual( Stem("gol"), "gol");});
test("gola -> gol", function() {deepEqual( Stem("gola"), "gol");});
test("golden -> golden", function() {deepEqual( Stem("golden"), "golden");});
test("goldman -> goldman", function() {deepEqual( Stem("goldman"), "goldman");});
test("goldstein -> goldstein", function() {deepEqual( Stem("goldstein"), "goldstein");});
test("gole -> gol", function() {deepEqual( Stem("gole"), "gol");});
test("goleador -> goleador", function() {deepEqual( Stem("goleador"), "goleador");});
test("golfi -> golf", function() {deepEqual( Stem("golfi"), "golf");});
test("golfo -> golf", function() {deepEqual( Stem("golfo"), "golf");});
test("golia -> gol", function() {deepEqual( Stem("golia"), "gol");});
test("golino -> golin", function() {deepEqual( Stem("golino"), "golin");});
test("golpe -> golp", function() {deepEqual( Stem("golpe"), "golp");});
test("gomez -> gomez", function() {deepEqual( Stem("gomez"), "gomez");});
test("gomita -> gom", function() {deepEqual( Stem("gomita"), "gom");});
test("gomitata -> gomit", function() {deepEqual( Stem("gomitata"), "gomit");});
test("gomitate -> gomit", function() {deepEqual( Stem("gomitate"), "gomit");});
test("gomiti -> gom", function() {deepEqual( Stem("gomiti"), "gom");});
test("gomito -> gom", function() {deepEqual( Stem("gomito"), "gom");});
test("gomitolo -> gomitol", function() {deepEqual( Stem("gomitolo"), "gomitol");});
test("gommapiuma -> gommapium", function() {deepEqual( Stem("gommapiuma"), "gommapium");});
test("gomme -> gomm", function() {deepEqual( Stem("gomme"), "gomm");});
test("gommoni -> gommon", function() {deepEqual( Stem("gommoni"), "gommon");});
test("goncharenko -> goncharenk", function() {deepEqual( Stem("goncharenko"), "goncharenk");});
test("gonfaloni -> gonfalon", function() {deepEqual( Stem("gonfaloni"), "gonfalon");});
test("gonfi -> gonf", function() {deepEqual( Stem("gonfi"), "gonf");});
test("gonfiar -> gonf", function() {deepEqual( Stem("gonfiar"), "gonf");});
test("gonfiarono -> gonf", function() {deepEqual( Stem("gonfiarono"), "gonf");});
test("gonfiata -> gonf", function() {deepEqual( Stem("gonfiata"), "gonf");});
test("gonfiato -> gonf", function() {deepEqual( Stem("gonfiato"), "gonf");});
test("gonfiava -> gonf", function() {deepEqual( Stem("gonfiava"), "gonf");});
test("gonfiavan -> gonfiavan", function() {deepEqual( Stem("gonfiavan"), "gonfiavan");});
test("gonfie -> gonf", function() {deepEqual( Stem("gonfie"), "gonf");});
test("gonfio -> gonf", function() {deepEqual( Stem("gonfio"), "gonf");});
test("gongola -> gongol", function() {deepEqual( Stem("gongola"), "gongol");});
test("gongolante -> gongol", function() {deepEqual( Stem("gongolante"), "gongol");});
test("gonnella -> gonnell", function() {deepEqual( Stem("gonnella"), "gonnell");});
test("gonzaga -> gonzag", function() {deepEqual( Stem("gonzaga"), "gonzag");});
test("gonzalo -> gonzal", function() {deepEqual( Stem("gonzalo"), "gonzal");});
test("gora -> gor", function() {deepEqual( Stem("gora"), "gor");});
test("goran -> goran", function() {deepEqual( Stem("goran"), "goran");});
test("gorbaciov -> gorbaciov", function() {deepEqual( Stem("gorbaciov"), "gorbaciov");});
test("gordon -> gordon", function() {deepEqual( Stem("gordon"), "gordon");});
test("gorgiere -> gorg", function() {deepEqual( Stem("gorgiere"), "gorg");});
test("gorgoglia -> gorgogl", function() {deepEqual( Stem("gorgoglia"), "gorgogl");});
test("gorgoglìo -> gorgoglì", function() {deepEqual( Stem("gorgoglìo"), "gorgoglì");});
test("gorgonzola -> gorgonzol", function() {deepEqual( Stem("gorgonzola"), "gorgonzol");});
test("gori -> gor", function() {deepEqual( Stem("gori"), "gor");});
test("gorini -> gorin", function() {deepEqual( Stem("gorini"), "gorin");});
test("gortari -> gortar", function() {deepEqual( Stem("gortari"), "gortar");});
test("gosset -> gosset", function() {deepEqual( Stem("gosset"), "gosset");});
test("gote -> got", function() {deepEqual( Stem("gote"), "got");});
test("gottardo -> gottard", function() {deepEqual( Stem("gottardo"), "gottard");});
test("gouernatore -> gouern", function() {deepEqual( Stem("gouernatore"), "gouern");});
test("gourmelon -> gourmelon", function() {deepEqual( Stem("gourmelon"), "gourmelon");});
test("governabili -> govern", function() {deepEqual( Stem("governabili"), "govern");});
test("governabilità -> govern", function() {deepEqual( Stem("governabilità"), "govern");});
test("governante -> govern", function() {deepEqual( Stem("governante"), "govern");});
test("governanti -> govern", function() {deepEqual( Stem("governanti"), "govern");});
test("governare -> govern", function() {deepEqual( Stem("governare"), "govern");});
test("governarli -> govern", function() {deepEqual( Stem("governarli"), "govern");});
test("governarsi -> govern", function() {deepEqual( Stem("governarsi"), "govern");});
test("governati -> govern", function() {deepEqual( Stem("governati"), "govern");});
test("governativa -> govern", function() {deepEqual( Stem("governativa"), "govern");});
test("governative -> govern", function() {deepEqual( Stem("governative"), "govern");});
test("governativi -> govern", function() {deepEqual( Stem("governativi"), "govern");});
test("governativo -> govern", function() {deepEqual( Stem("governativo"), "govern");});
test("governatorato -> governator", function() {deepEqual( Stem("governatorato"), "governator");});
test("governatore -> govern", function() {deepEqual( Stem("governatore"), "govern");});
test("governatori -> govern", function() {deepEqual( Stem("governatori"), "govern");});
test("governavano -> govern", function() {deepEqual( Stem("governavano"), "govern");});
test("governi -> govern", function() {deepEqual( Stem("governi"), "govern");});
test("governo -> govern", function() {deepEqual( Stem("governo"), "govern");});
test("gozzini -> gozzin", function() {deepEqual( Stem("gozzini"), "gozzin");});
test("gozzo -> gozz", function() {deepEqual( Stem("gozzo"), "gozz");});
test("gozzovigliando -> gozzovigl", function() {deepEqual( Stem("gozzovigliando"), "gozzovigl");});
test("gp -> gp", function() {deepEqual( Stem("gp"), "gp");});
test("gr -> gr", function() {deepEqual( Stem("gr"), "gr");});
test("grabbi -> grabb", function() {deepEqual( Stem("grabbi"), "grabb");});
test("grabowsky -> grabowsky", function() {deepEqual( Stem("grabowsky"), "grabowsky");});
test("graciov -> graciov", function() {deepEqual( Stem("graciov"), "graciov");});
test("gradazioni -> gradazion", function() {deepEqual( Stem("gradazioni"), "gradazion");});
test("gradevolmente -> gradevol", function() {deepEqual( Stem("gradevolmente"), "gradevol");});
test("gradi -> grad", function() {deepEqual( Stem("gradi"), "grad");});
test("gradinata -> gradin", function() {deepEqual( Stem("gradinata"), "gradin");});
test("gradinate -> gradin", function() {deepEqual( Stem("gradinate"), "gradin");});
test("gradini -> gradin", function() {deepEqual( Stem("gradini"), "gradin");});
test("gradino -> gradin", function() {deepEqual( Stem("gradino"), "gradin");});
test("gradisca -> grad", function() {deepEqual( Stem("gradisca"), "grad");});
test("gradisce -> grad", function() {deepEqual( Stem("gradisce"), "grad");});
test("gradita -> grad", function() {deepEqual( Stem("gradita"), "grad");});
test("gradito -> grad", function() {deepEqual( Stem("gradito"), "grad");});
test("grado -> grad", function() {deepEqual( Stem("grado"), "grad");});
test("graduale -> gradual", function() {deepEqual( Stem("graduale"), "gradual");});
test("gradualmente -> gradual", function() {deepEqual( Stem("gradualmente"), "gradual");});
test("graduato -> gradu", function() {deepEqual( Stem("graduato"), "gradu");});
test("graduatorie -> graduator", function() {deepEqual( Stem("graduatorie"), "graduator");});
test("graffiato -> graff", function() {deepEqual( Stem("graffiato"), "graff");});
test("grafica -> grafic", function() {deepEqual( Stem("grafica"), "grafic");});
test("grafici -> grafic", function() {deepEqual( Stem("grafici"), "grafic");});
test("graham -> graham", function() {deepEqual( Stem("graham"), "graham");});
test("gramigne -> gramign", function() {deepEqual( Stem("gramigne"), "gramign");});
test("grammatica -> grammat", function() {deepEqual( Stem("grammatica"), "grammat");});
test("grammi -> gramm", function() {deepEqual( Stem("grammi"), "gramm");});
test("gramola -> gramol", function() {deepEqual( Stem("gramola"), "gramol");});
test("gran -> gran", function() {deepEqual( Stem("gran"), "gran");});
test("granadà -> granad", function() {deepEqual( Stem("granadà"), "granad");});
test("granaglie -> granagl", function() {deepEqual( Stem("granaglie"), "granagl");});
test("granai -> grana", function() {deepEqual( Stem("granai"), "grana");});
test("granaio -> granai", function() {deepEqual( Stem("granaio"), "granai");});
test("granata -> gran", function() {deepEqual( Stem("granata"), "gran");});
test("granati -> gran", function() {deepEqual( Stem("granati"), "gran");});
test("grand -> grand", function() {deepEqual( Stem("grand"), "grand");});
test("grande -> grand", function() {deepEqual( Stem("grande"), "grand");});
test("grandeggiava -> grandegg", function() {deepEqual( Stem("grandeggiava"), "grandegg");});
test("grandezza -> grandezz", function() {deepEqual( Stem("grandezza"), "grandezz");});
test("grandezze -> grandezz", function() {deepEqual( Stem("grandezze"), "grandezz");});
test("grandi -> grand", function() {deepEqual( Stem("grandi"), "grand");});
test("grandinato -> grandin", function() {deepEqual( Stem("grandinato"), "grandin");});
test("grandine -> grandin", function() {deepEqual( Stem("grandine"), "grandin");});
test("grandini -> grandin", function() {deepEqual( Stem("grandini"), "grandin");});
test("grandiosa -> grandios", function() {deepEqual( Stem("grandiosa"), "grandios");});
test("grandiosi -> grandios", function() {deepEqual( Stem("grandiosi"), "grandios");});
test("grandissima -> grandissim", function() {deepEqual( Stem("grandissima"), "grandissim");});
test("grandissime -> grandissim", function() {deepEqual( Stem("grandissime"), "grandissim");});
test("grane -> gran", function() {deepEqual( Stem("grane"), "gran");});
test("granelli -> granell", function() {deepEqual( Stem("granelli"), "granell");});
test("granello -> granell", function() {deepEqual( Stem("granello"), "granell");});
test("granferry -> granferry", function() {deepEqual( Stem("granferry"), "granferry");});
test("granger -> granger", function() {deepEqual( Stem("granger"), "granger");});
test("grani -> gran", function() {deepEqual( Stem("grani"), "gran");});
test("grano -> gran", function() {deepEqual( Stem("grano"), "gran");});
test("granocchia -> granocc", function() {deepEqual( Stem("granocchia"), "granocc");});
test("grappa -> grapp", function() {deepEqual( Stem("grappa"), "grapp");});
test("grappoli -> grappol", function() {deepEqual( Stem("grappoli"), "grappol");});
test("grasce -> grasc", function() {deepEqual( Stem("grasce"), "grasc");});
test("grassadonia -> grassadon", function() {deepEqual( Stem("grassadonia"), "grassadon");});
test("grassetto -> grassett", function() {deepEqual( Stem("grassetto"), "grassett");});
test("grassi -> grass", function() {deepEqual( Stem("grassi"), "grass");});
test("grassoccia -> grassocc", function() {deepEqual( Stem("grassoccia"), "grassocc");});
test("grassotto -> grassott", function() {deepEqual( Stem("grassotto"), "grassott");});
test("grata -> grat", function() {deepEqual( Stem("grata"), "grat");});
test("grate -> grat", function() {deepEqual( Stem("grate"), "grat");});
test("grati -> grat", function() {deepEqual( Stem("grati"), "grat");});
test("gratias -> gratias", function() {deepEqual( Stem("gratias"), "gratias");});
test("graticcio -> graticc", function() {deepEqual( Stem("graticcio"), "graticc");});
test("gratificata -> gratific", function() {deepEqual( Stem("gratificata"), "gratific");});
test("gratis -> gratis", function() {deepEqual( Stem("gratis"), "gratis");});
test("gratitudine -> gratitudin", function() {deepEqual( Stem("gratitudine"), "gratitudin");});
test("grato -> grat", function() {deepEqual( Stem("grato"), "grat");});
test("gratuita -> gratu", function() {deepEqual( Stem("gratuita"), "gratu");});
test("gratuitamente -> gratuit", function() {deepEqual( Stem("gratuitamente"), "gratuit");});
test("gratuiti -> gratu", function() {deepEqual( Stem("gratuiti"), "gratu");});
test("grave -> grav", function() {deepEqual( Stem("grave"), "grav");});
test("gravemente -> gravement", function() {deepEqual( Stem("gravemente"), "gravement");});
test("gravezza -> gravezz", function() {deepEqual( Stem("gravezza"), "gravezz");});
test("gravezze -> gravezz", function() {deepEqual( Stem("gravezze"), "gravezz");});
test("gravi -> grav", function() {deepEqual( Stem("gravi"), "grav");});
test("gravide -> gravid", function() {deepEqual( Stem("gravide"), "gravid");});
test("graviores -> graviores", function() {deepEqual( Stem("graviores"), "graviores");});
test("gravissime -> gravissim", function() {deepEqual( Stem("gravissime"), "gravissim");});
test("gravissimo -> gravissim", function() {deepEqual( Stem("gravissimo"), "gravissim");});
test("gravità -> gravit", function() {deepEqual( Stem("gravità"), "gravit");});
test("gravitato -> gravit", function() {deepEqual( Stem("gravitato"), "gravit");});
test("gravosa -> gravos", function() {deepEqual( Stem("gravosa"), "gravos");});
test("gravoso -> gravos", function() {deepEqual( Stem("gravoso"), "gravos");});
test("grazia -> graz", function() {deepEqual( Stem("grazia"), "graz");});
test("graziato -> graz", function() {deepEqual( Stem("graziato"), "graz");});
test("grazie -> graz", function() {deepEqual( Stem("grazie"), "graz");});
test("graziosa -> grazios", function() {deepEqual( Stem("graziosa"), "grazios");});
test("grazioso -> grazios", function() {deepEqual( Stem("grazioso"), "grazios");});
test("grazzini -> grazzin", function() {deepEqual( Stem("grazzini"), "grazzin");});
test("greca -> grec", function() {deepEqual( Stem("greca"), "grec");});
test("grecia -> grec", function() {deepEqual( Stem("grecia"), "grec");});
test("greco -> grec", function() {deepEqual( Stem("greco"), "grec");});
test("green -> green", function() {deepEqual( Stem("green"), "green");});
test("greenspan -> greenspan", function() {deepEqual( Stem("greenspan"), "greenspan");});
test("gregge -> gregg", function() {deepEqual( Stem("gregge"), "gregg");});
test("greggio -> gregg", function() {deepEqual( Stem("greggio"), "gregg");});
test("gregorio -> gregor", function() {deepEqual( Stem("gregorio"), "gregor");});
test("gregucci -> gregucc", function() {deepEqual( Stem("gregucci"), "gregucc");});
test("grembiule -> grembiul", function() {deepEqual( Stem("grembiule"), "grembiul");});
test("gremisce -> grem", function() {deepEqual( Stem("gremisce"), "grem");});
test("gremita -> grem", function() {deepEqual( Stem("gremita"), "grem");});
test("gremite -> grem", function() {deepEqual( Stem("gremite"), "grem");});
test("gremiti -> grem", function() {deepEqual( Stem("gremiti"), "grem");});
test("gremito -> grem", function() {deepEqual( Stem("gremito"), "grem");});
test("gremlin -> gremlin", function() {deepEqual( Stem("gremlin"), "gremlin");});
test("greppi -> grepp", function() {deepEqual( Stem("greppi"), "grepp");});
test("greppia -> grepp", function() {deepEqual( Stem("greppia"), "grepp");});
test("gretta -> grett", function() {deepEqual( Stem("gretta"), "grett");});
test("gretto -> grett", function() {deepEqual( Stem("gretto"), "grett");});
test("grevino -> grevin", function() {deepEqual( Stem("grevino"), "grevin");});
test("grid -> grid", function() {deepEqual( Stem("grid"), "grid");});
test("grida -> grid", function() {deepEqual( Stem("grida"), "grid");});
test("gridando -> grid", function() {deepEqual( Stem("gridando"), "grid");});
test("gridano -> grid", function() {deepEqual( Stem("gridano"), "grid");});
test("gridar -> grid", function() {deepEqual( Stem("gridar"), "grid");});
test("gridare -> grid", function() {deepEqual( Stem("gridare"), "grid");});
test("gridargli -> grid", function() {deepEqual( Stem("gridargli"), "grid");});
test("gridaron -> gridaron", function() {deepEqual( Stem("gridaron"), "gridaron");});
test("gridarono -> grid", function() {deepEqual( Stem("gridarono"), "grid");});
test("gridasse -> grid", function() {deepEqual( Stem("gridasse"), "grid");});
test("gridassero -> grid", function() {deepEqual( Stem("gridassero"), "grid");});
test("gridato -> grid", function() {deepEqual( Stem("gridato"), "grid");});
test("gridatogli -> gridatogl", function() {deepEqual( Stem("gridatogli"), "gridatogl");});
test("gridava -> grid", function() {deepEqual( Stem("gridava"), "grid");});
test("gridavano -> grid", function() {deepEqual( Stem("gridavano"), "grid");});
test("gride -> grid", function() {deepEqual( Stem("gride"), "grid");});
test("gridi -> grid", function() {deepEqual( Stem("gridi"), "grid");});
test("grido -> grid", function() {deepEqual( Stem("grido"), "grid");});
test("gridò -> grid", function() {deepEqual( Stem("gridò"), "grid");});
test("grifagni -> grifagn", function() {deepEqual( Stem("grifagni"), "grifagn");});
test("grifocapital -> grifocapital", function() {deepEqual( Stem("grifocapital"), "grifocapital");});
test("grifocash -> grifocash", function() {deepEqual( Stem("grifocash"), "grifocash");});
test("griforend -> griforend", function() {deepEqual( Stem("griforend"), "griforend");});
test("grigi -> grig", function() {deepEqual( Stem("grigi"), "grig");});
test("grigia -> grig", function() {deepEqual( Stem("grigia"), "grig");});
test("grigioni -> grigion", function() {deepEqual( Stem("grigioni"), "grigion");});
test("grigiore -> grigior", function() {deepEqual( Stem("grigiore"), "grigior");});
test("grignapoco -> grignapoc", function() {deepEqual( Stem("grignapoco"), "grignapoc");});
test("grilla -> grill", function() {deepEqual( Stem("grilla"), "grill");});
test("grilli -> grill", function() {deepEqual( Stem("grilli"), "grill");});
test("grillo -> grill", function() {deepEqual( Stem("grillo"), "grill");});
test("grimaldi -> grimald", function() {deepEqual( Stem("grimaldi"), "grimald");});
test("grimaudo -> grimaud", function() {deepEqual( Stem("grimaudo"), "grimaud");});
test("grinavi -> grin", function() {deepEqual( Stem("grinavi"), "grin");});
test("grinfie -> grinf", function() {deepEqual( Stem("grinfie"), "grinf");});
test("grinta -> grint", function() {deepEqual( Stem("grinta"), "grint");});
test("grintoso -> grintos", function() {deepEqual( Stem("grintoso"), "grintos");});
test("grinze -> grinz", function() {deepEqual( Stem("grinze"), "grinz");});
test("grinzose -> grinzos", function() {deepEqual( Stem("grinzose"), "grinzos");});
test("griso -> gris", function() {deepEqual( Stem("griso"), "gris");});
test("grist -> grist", function() {deepEqual( Stem("grist"), "grist");});
test("grlic -> grlic", function() {deepEqual( Stem("grlic"), "grlic");});
test("grondaia -> grondai", function() {deepEqual( Stem("grondaia"), "grondai");});
test("grondanti -> grondant", function() {deepEqual( Stem("grondanti"), "grondant");});
test("groppino -> groppin", function() {deepEqual( Stem("groppino"), "groppin");});
test("grossa -> gross", function() {deepEqual( Stem("grossa"), "gross");});
test("grosse -> gross", function() {deepEqual( Stem("grosse"), "gross");});
test("grosseto -> grosset", function() {deepEqual( Stem("grosseto"), "grosset");});
test("grossi -> gross", function() {deepEqual( Stem("grossi"), "gross");});
test("grosso -> gross", function() {deepEqual( Stem("grosso"), "gross");});
test("grossolana -> grossolan", function() {deepEqual( Stem("grossolana"), "grossolan");});
test("grossolane -> grossolan", function() {deepEqual( Stem("grossolane"), "grossolan");});
test("grotta -> grott", function() {deepEqual( Stem("grotta"), "grott");});
test("grotte -> grott", function() {deepEqual( Stem("grotte"), "grott");});
test("group -> group", function() {deepEqual( Stem("group"), "group");});
test("grozny -> grozny", function() {deepEqual( Stem("grozny"), "grozny");});
test("gruber -> gruber", function() {deepEqual( Stem("gruber"), "gruber");});
test("grucce -> grucc", function() {deepEqual( Stem("grucce"), "grucc");});
test("grupo -> grup", function() {deepEqual( Stem("grupo"), "grup");});
test("gruppetto -> gruppett", function() {deepEqual( Stem("gruppetto"), "gruppett");});
test("gruppi -> grupp", function() {deepEqual( Stem("gruppi"), "grupp");});
test("gruppo -> grupp", function() {deepEqual( Stem("gruppo"), "grupp");});
test("gruppoo -> gruppo", function() {deepEqual( Stem("gruppoo"), "gruppo");});
test("grupppo -> gruppp", function() {deepEqual( Stem("grupppo"), "gruppp");});
test("grz -> grz", function() {deepEqual( Stem("grz"), "grz");});
test("gsm -> gsm", function() {deepEqual( Stem("gsm"), "gsm");});
test("gt -> gt", function() {deepEqual( Stem("gt"), "gt");});
test("gua -> gua", function() {deepEqual( Stem("gua"), "gua");});
test("guadagna -> guadagn", function() {deepEqual( Stem("guadagna"), "guadagn");});
test("guadagnar -> guadagn", function() {deepEqual( Stem("guadagnar"), "guadagn");});
test("guadagnare -> guadagn", function() {deepEqual( Stem("guadagnare"), "guadagn");});
test("guadagnati -> guadagn", function() {deepEqual( Stem("guadagnati"), "guadagn");});
test("guadagnato -> guadagn", function() {deepEqual( Stem("guadagnato"), "guadagn");});
test("guadagni -> guadagn", function() {deepEqual( Stem("guadagni"), "guadagn");});
test("guadagno -> guadagn", function() {deepEqual( Stem("guadagno"), "guadagn");});
test("guadagnò -> guadagn", function() {deepEqual( Stem("guadagnò"), "guadagn");});
test("guadalupa -> guadalup", function() {deepEqual( Stem("guadalupa"), "guadalup");});
test("guadalupe -> guadalup", function() {deepEqual( Stem("guadalupe"), "guadalup");});
test("guadare -> guad", function() {deepEqual( Stem("guadare"), "guad");});
test("guado -> guad", function() {deepEqual( Stem("guado"), "guad");});
test("guai -> gua", function() {deepEqual( Stem("guai"), "gua");});
test("guaio -> guai", function() {deepEqual( Stem("guaio"), "guai");});
test("gualchiere -> gualc", function() {deepEqual( Stem("gualchiere"), "gualc");});
test("gualco -> gualc", function() {deepEqual( Stem("gualco"), "gualc");});
test("gualdo -> guald", function() {deepEqual( Stem("gualdo"), "guald");});
test("guance -> guanc", function() {deepEqual( Stem("guance"), "guanc");});
test("guancia -> guanc", function() {deepEqual( Stem("guancia"), "guanc");});
test("guanciali -> guancial", function() {deepEqual( Stem("guanciali"), "guancial");});
test("guancialino -> guancialin", function() {deepEqual( Stem("guancialino"), "guancialin");});
test("guanti -> guant", function() {deepEqual( Stem("guanti"), "guant");});
test("guantiere -> guant", function() {deepEqual( Stem("guantiere"), "guant");});
test("guarda -> guard", function() {deepEqual( Stem("guarda"), "guard");});
test("guardalinee -> guardaline", function() {deepEqual( Stem("guardalinee"), "guardaline");});
test("guardando -> guard", function() {deepEqual( Stem("guardando"), "guard");});
test("guardandogli -> guard", function() {deepEqual( Stem("guardandogli"), "guard");});
test("guardandola -> guard", function() {deepEqual( Stem("guardandola"), "guard");});
test("guardandolo -> guard", function() {deepEqual( Stem("guardandolo"), "guard");});
test("guardandosi -> guard", function() {deepEqual( Stem("guardandosi"), "guard");});
test("guardano -> guard", function() {deepEqual( Stem("guardano"), "guard");});
test("guardaos -> guardaos", function() {deepEqual( Stem("guardaos"), "guardaos");});
test("guardar -> guard", function() {deepEqual( Stem("guardar"), "guard");});
test("guardarci -> guard", function() {deepEqual( Stem("guardarci"), "guard");});
test("guardare -> guard", function() {deepEqual( Stem("guardare"), "guard");});
test("guardargli -> guard", function() {deepEqual( Stem("guardargli"), "guard");});
test("guardarla -> guard", function() {deepEqual( Stem("guardarla"), "guard");});
test("guardarle -> guard", function() {deepEqual( Stem("guardarle"), "guard");});
test("guardarlo -> guard", function() {deepEqual( Stem("guardarlo"), "guard");});
test("guardarobi -> guardarob", function() {deepEqual( Stem("guardarobi"), "guardarob");});
test("guardaron -> guardaron", function() {deepEqual( Stem("guardaron"), "guardaron");});
test("guardarono -> guard", function() {deepEqual( Stem("guardarono"), "guard");});
test("guardarsene -> guard", function() {deepEqual( Stem("guardarsene"), "guard");});
test("guardarsi -> guard", function() {deepEqual( Stem("guardarsi"), "guard");});
test("guardarvi -> guard", function() {deepEqual( Stem("guardarvi"), "guard");});
test("guardasigilli -> guardasigill", function() {deepEqual( Stem("guardasigilli"), "guardasigill");});
test("guardasse -> guard", function() {deepEqual( Stem("guardasse"), "guard");});
test("guardata -> guard", function() {deepEqual( Stem("guardata"), "guard");});
test("guardate -> guard", function() {deepEqual( Stem("guardate"), "guard");});
test("guardatemi -> guardatem", function() {deepEqual( Stem("guardatemi"), "guardatem");});
test("guardati -> guard", function() {deepEqual( Stem("guardati"), "guard");});
test("guardato -> guard", function() {deepEqual( Stem("guardato"), "guard");});
test("guardatura -> guardatur", function() {deepEqual( Stem("guardatura"), "guardatur");});
test("guardava -> guard", function() {deepEqual( Stem("guardava"), "guard");});
test("guardavan -> guardavan", function() {deepEqual( Stem("guardavan"), "guardavan");});
test("guardavano -> guard", function() {deepEqual( Stem("guardavano"), "guard");});
test("guarderò -> guard", function() {deepEqual( Stem("guarderò"), "guard");});
test("guardi -> guard", function() {deepEqual( Stem("guardi"), "guard");});
test("guardia -> guard", function() {deepEqual( Stem("guardia"), "guard");});
test("guardiana -> guardian", function() {deepEqual( Stem("guardiana"), "guardian");});
test("guardiani -> guardian", function() {deepEqual( Stem("guardiani"), "guardian");});
test("guardiano -> guard", function() {deepEqual( Stem("guardiano"), "guard");});
test("guardie -> guard", function() {deepEqual( Stem("guardie"), "guard");});
test("guardinga -> guarding", function() {deepEqual( Stem("guardinga"), "guarding");});
test("guardinghi -> guarding", function() {deepEqual( Stem("guardinghi"), "guarding");});
test("guardò -> guard", function() {deepEqual( Stem("guardò"), "guard");});
test("guarì -> guar", function() {deepEqual( Stem("guarì"), "guar");});
test("guaribili -> guaribil", function() {deepEqual( Stem("guaribili"), "guaribil");});
test("guarigione -> guarigion", function() {deepEqual( Stem("guarigione"), "guarigion");});
test("guarini -> guarin", function() {deepEqual( Stem("guarini"), "guarin");});
test("guarino -> guarin", function() {deepEqual( Stem("guarino"), "guarin");});
test("guarire -> guar", function() {deepEqual( Stem("guarire"), "guar");});
test("guarisce -> guar", function() {deepEqual( Stem("guarisce"), "guar");});
test("guarisco -> guar", function() {deepEqual( Stem("guarisco"), "guar");});
test("guarita -> guar", function() {deepEqual( Stem("guarita"), "guar");});
test("guariti -> guar", function() {deepEqual( Stem("guariti"), "guar");});
test("guarito -> guar", function() {deepEqual( Stem("guarito"), "guar");});
test("guaritori -> guaritor", function() {deepEqual( Stem("guaritori"), "guaritor");});
test("guaritrice -> guaritr", function() {deepEqual( Stem("guaritrice"), "guaritr");});
test("guarivano -> guar", function() {deepEqual( Stem("guarivano"), "guar");});
test("guarnigione -> guarnigion", function() {deepEqual( Stem("guarnigione"), "guarnigion");});
test("guarnita -> guarn", function() {deepEqual( Stem("guarnita"), "guarn");});
test("guarniti -> guarn", function() {deepEqual( Stem("guarniti"), "guarn");});
test("guarracino -> guarracin", function() {deepEqual( Stem("guarracino"), "guarracin");});
test("guasta -> guast", function() {deepEqual( Stem("guasta"), "guast");});
test("guastalla -> guastall", function() {deepEqual( Stem("guastalla"), "guastall");});
test("guastamestieri -> guastamestier", function() {deepEqual( Stem("guastamestieri"), "guastamestier");});
test("guastan -> guastan", function() {deepEqual( Stem("guastan"), "guastan");});
test("guastar -> guast", function() {deepEqual( Stem("guastar"), "guast");});
test("guastare -> guast", function() {deepEqual( Stem("guastare"), "guast");});
test("guastarli -> guast", function() {deepEqual( Stem("guastarli"), "guast");});
test("guastarmi -> guast", function() {deepEqual( Stem("guastarmi"), "guast");});
test("guastate -> guast", function() {deepEqual( Stem("guastate"), "guast");});
test("guastatori -> guastator", function() {deepEqual( Stem("guastatori"), "guastator");});
test("guastava -> guast", function() {deepEqual( Stem("guastava"), "guast");});
test("guasterebbe -> guast", function() {deepEqual( Stem("guasterebbe"), "guast");});
test("guasti -> guast", function() {deepEqual( Stem("guasti"), "guast");});
test("guasto -> guast", function() {deepEqual( Stem("guasto"), "guast");});
test("guastò -> guast", function() {deepEqual( Stem("guastò"), "guast");});
test("guatemala -> guatemal", function() {deepEqual( Stem("guatemala"), "guatemal");});
test("guatemalteco -> guatemaltec", function() {deepEqual( Stem("guatemalteco"), "guatemaltec");});
test("guazza -> guazz", function() {deepEqual( Stem("guazza"), "guazz");});
test("guazzabugli -> guazzabugl", function() {deepEqual( Stem("guazzabugli"), "guazzabugl");});
test("guazzabuglio -> guazzabugl", function() {deepEqual( Stem("guazzabuglio"), "guazzabugl");});
test("guazzo -> guazz", function() {deepEqual( Stem("guazzo"), "guazz");});
test("gubbio -> gubb", function() {deepEqual( Stem("gubbio"), "gubb");});
test("guenter -> guenter", function() {deepEqual( Stem("guenter"), "guenter");});
test("guenther -> guenther", function() {deepEqual( Stem("guenther"), "guenther");});
test("guera -> guer", function() {deepEqual( Stem("guera"), "guer");});
test("guerra -> guerr", function() {deepEqual( Stem("guerra"), "guerr");});
test("guerre -> guerr", function() {deepEqual( Stem("guerre"), "guerr");});
test("guerrero -> guerrer", function() {deepEqual( Stem("guerrero"), "guerrer");});
test("guerreschi -> guerresc", function() {deepEqual( Stem("guerreschi"), "guerresc");});
test("guerresco -> guerresc", function() {deepEqual( Stem("guerresco"), "guerresc");});
test("guerricciole -> guerricciol", function() {deepEqual( Stem("guerricciole"), "guerricciol");});
test("guerriera -> guerrier", function() {deepEqual( Stem("guerriera"), "guerrier");});
test("guerriere -> guerr", function() {deepEqual( Stem("guerriere"), "guerr");});
test("guerrieri -> guerrier", function() {deepEqual( Stem("guerrieri"), "guerrier");});
test("guerriero -> guerrier", function() {deepEqual( Stem("guerriero"), "guerrier");});
test("guerrierò -> guerr", function() {deepEqual( Stem("guerrierò"), "guerr");});
test("guerriglia -> guerrigl", function() {deepEqual( Stem("guerriglia"), "guerrigl");});
test("guerriglieri -> guerriglier", function() {deepEqual( Stem("guerriglieri"), "guerriglier");});
test("guerriglierìpag -> guerriglierìpag", function() {deepEqual( Stem("guerriglierìpag"), "guerriglierìpag");});
test("guerrigliero -> guerriglier", function() {deepEqual( Stem("guerrigliero"), "guerriglier");});
test("guerrin -> guerrin", function() {deepEqual( Stem("guerrin"), "guerrin");});
test("guest -> guest", function() {deepEqual( Stem("guest"), "guest");});
test("guglielmo -> guglielm", function() {deepEqual( Stem("guglielmo"), "guglielm");});
test("guglielmucci -> guglielmucc", function() {deepEqual( Stem("guglielmucci"), "guglielmucc");});
test("guglieri -> guglier", function() {deepEqual( Stem("guglieri"), "guglier");});
test("guida -> guid", function() {deepEqual( Stem("guida"), "guid");});
test("guidar -> guid", function() {deepEqual( Stem("guidar"), "guid");});
test("guidare -> guid", function() {deepEqual( Stem("guidare"), "guid");});
test("guidarle -> guid", function() {deepEqual( Stem("guidarle"), "guid");});
test("guidata -> guid", function() {deepEqual( Stem("guidata"), "guid");});
test("guidati -> guid", function() {deepEqual( Stem("guidati"), "guid");});
test("guidato -> guid", function() {deepEqual( Stem("guidato"), "guid");});
test("guidava -> guid", function() {deepEqual( Stem("guidava"), "guid");});
test("guidavano -> guid", function() {deepEqual( Stem("guidavano"), "guid");});
test("guiderà -> guid", function() {deepEqual( Stem("guiderà"), "guid");});
test("guideranno -> guid", function() {deepEqual( Stem("guideranno"), "guid");});
test("guiderebbe -> guid", function() {deepEqual( Stem("guiderebbe"), "guid");});
test("guiderei -> guid", function() {deepEqual( Stem("guiderei"), "guid");});
test("guiderete -> guid", function() {deepEqual( Stem("guiderete"), "guid");});
test("guido -> guid", function() {deepEqual( Stem("guido"), "guid");});
test("guillen -> guillen", function() {deepEqual( Stem("guillen"), "guillen");});
test("guillermo -> guillerm", function() {deepEqual( Stem("guillermo"), "guillerm");});
test("guinea -> guine", function() {deepEqual( Stem("guinea"), "guine");});
test("guisa -> guis", function() {deepEqual( Stem("guisa"), "guis");});
test("guiso -> guis", function() {deepEqual( Stem("guiso"), "guis");});
test("guizzi -> guizz", function() {deepEqual( Stem("guizzi"), "guizz");});
test("guizzo -> guizz", function() {deepEqual( Stem("guizzo"), "guizz");});
test("gulbuddin -> gulbuddin", function() {deepEqual( Stem("gulbuddin"), "gulbuddin");});
test("gullit -> gullit", function() {deepEqual( Stem("gullit"), "gullit");});
test("gullotta -> gullott", function() {deepEqual( Stem("gullotta"), "gullott");});
test("gump -> gump", function() {deepEqual( Stem("gump"), "gump");});
test("gurra -> gurr", function() {deepEqual( Stem("gurra"), "gurr");});
test("guru -> guru", function() {deepEqual( Stem("guru"), "guru");});
test("gus -> gus", function() {deepEqual( Stem("gus"), "gus");});
test("gustare -> gust", function() {deepEqual( Stem("gustare"), "gust");});
test("gustarla -> gust", function() {deepEqual( Stem("gustarla"), "gust");});
test("gustato -> gust", function() {deepEqual( Stem("gustato"), "gust");});
test("gustavo -> gust", function() {deepEqual( Stem("gustavo"), "gust");});
test("gusto -> gust", function() {deepEqual( Stem("gusto"), "gust");});
test("gustò -> gust", function() {deepEqual( Stem("gustò"), "gust");});
test("gustosa -> gustos", function() {deepEqual( Stem("gustosa"), "gustos");});
test("gutemberg -> gutemberg", function() {deepEqual( Stem("gutemberg"), "gutemberg");});
test("gutierrez -> gutierrez", function() {deepEqual( Stem("gutierrez"), "gutierrez");});
test("guy -> guy", function() {deepEqual( Stem("guy"), "guy");});
test("guyana -> guyan", function() {deepEqual( Stem("guyana"), "guyan");});
test("guzman -> guzman", function() {deepEqual( Stem("guzman"), "guzman");});
test("gymnuoto -> gymnuot", function() {deepEqual( Stem("gymnuoto"), "gymnuot");});
test("gyver -> gyver", function() {deepEqual( Stem("gyver"), "gyver");});
test("h -> h", function() {deepEqual( Stem("h"), "h");});
test("ha -> ha", function() {deepEqual( Stem("ha"), "ha");});
test("haapakosti -> haapakost", function() {deepEqual( Stem("haapakosti"), "haapakost");});
test("haaretz -> haaretz", function() {deepEqual( Stem("haaretz"), "haaretz");});
test("habbiamo -> habb", function() {deepEqual( Stem("habbiamo"), "habb");});
test("hackett -> hackett", function() {deepEqual( Stem("hackett"), "hackett");});
test("haddad -> haddad", function() {deepEqual( Stem("haddad"), "haddad");});
test("hadi -> had", function() {deepEqual( Stem("hadi"), "had");});
test("haec -> haec", function() {deepEqual( Stem("haec"), "haec");});
test("hai -> hai", function() {deepEqual( Stem("hai"), "hai");});
test("haifa -> haif", function() {deepEqual( Stem("haifa"), "haif");});
test("haiti -> hait", function() {deepEqual( Stem("haiti"), "hait");});
test("haley -> haley", function() {deepEqual( Stem("haley"), "haley");});
test("halifax -> halifax", function() {deepEqual( Stem("halifax"), "halifax");});
test("hallara -> hallar", function() {deepEqual( Stem("hallara"), "hallar");});
test("halloween -> halloween", function() {deepEqual( Stem("halloween"), "halloween");});
test("hamac -> hamac", function() {deepEqual( Stem("hamac"), "hamac");});
test("hamas -> hamas", function() {deepEqual( Stem("hamas"), "hamas");});
test("hamburgher -> hamburgher", function() {deepEqual( Stem("hamburgher"), "hamburgher");});
test("hammallà -> hammall", function() {deepEqual( Stem("hammallà"), "hammall");});
test("hammamet -> hammamet", function() {deepEqual( Stem("hammamet"), "hammamet");});
test("hammaquà -> hammaqu", function() {deepEqual( Stem("hammaquà"), "hammaqu");});
test("hammed -> hammed", function() {deepEqual( Stem("hammed"), "hammed");});
test("hampel -> hampel", function() {deepEqual( Stem("hampel"), "hampel");});
test("han -> han", function() {deepEqual( Stem("han"), "han");});
test("hanak -> hanak", function() {deepEqual( Stem("hanak"), "hanak");});
test("handicap -> handicap", function() {deepEqual( Stem("handicap"), "handicap");});
test("handicappati -> handicapp", function() {deepEqual( Stem("handicappati"), "handicapp");});
test("handicappato -> handicapp", function() {deepEqual( Stem("handicappato"), "handicapp");});
test("hann -> hann", function() {deepEqual( Stem("hann"), "hann");});
test("hanna -> hann", function() {deepEqual( Stem("hanna"), "hann");});
test("hannah -> hannah", function() {deepEqual( Stem("hannah"), "hannah");});
test("hanno -> hann", function() {deepEqual( Stem("hanno"), "hann");});
test("hanoi -> hano", function() {deepEqual( Stem("hanoi"), "hano");});
test("hans -> hans", function() {deepEqual( Stem("hans"), "hans");});
test("harald -> harald", function() {deepEqual( Stem("harald"), "harald");});
test("harare -> har", function() {deepEqual( Stem("harare"), "har");});
test("harbour -> harbour", function() {deepEqual( Stem("harbour"), "harbour");});
test("harigà -> harig", function() {deepEqual( Stem("harigà"), "harig");});
test("haris -> haris", function() {deepEqual( Stem("haris"), "haris");});
test("harjanne -> harjann", function() {deepEqual( Stem("harjanne"), "harjann");});
test("haro -> har", function() {deepEqual( Stem("haro"), "har");});
test("harrison -> harrison", function() {deepEqual( Stem("harrison"), "harrison");});
test("hashemi -> hashem", function() {deepEqual( Stem("hashemi"), "hashem");});
test("hauendo -> hau", function() {deepEqual( Stem("hauendo"), "hau");});
test("hauer -> hauer", function() {deepEqual( Stem("hauer"), "hauer");});
test("hauere -> hau", function() {deepEqual( Stem("hauere"), "hau");});
test("hauesse -> hauess", function() {deepEqual( Stem("hauesse"), "hauess");});
test("hauessimo -> hauessim", function() {deepEqual( Stem("hauessimo"), "hauessim");});
test("haueuano -> haueu", function() {deepEqual( Stem("haueuano"), "haueu");});
test("haustam -> haustam", function() {deepEqual( Stem("haustam"), "haustam");});
test("hauuto -> hau", function() {deepEqual( Stem("hauuto"), "hau");});
test("havre -> havr", function() {deepEqual( Stem("havre"), "havr");});
test("hawaii -> hawai", function() {deepEqual( Stem("hawaii"), "hawai");});
test("hays -> hays", function() {deepEqual( Stem("hays"), "hays");});
test("hazzard -> hazzard", function() {deepEqual( Stem("hazzard"), "hazzard");});
test("heads -> heads", function() {deepEqual( Stem("heads"), "heads");});
test("hearts -> hearts", function() {deepEqual( Stem("hearts"), "hearts");});
test("hebron -> hebron", function() {deepEqual( Stem("hebron"), "hebron");});
test("heimat -> heimat", function() {deepEqual( Stem("heimat"), "heimat");});
test("hekmatyar -> hekmaty", function() {deepEqual( Stem("hekmatyar"), "hekmaty");});
test("held -> held", function() {deepEqual( Stem("held"), "held");});
test("helen -> helen", function() {deepEqual( Stem("helen"), "helen");});
test("helena -> helen", function() {deepEqual( Stem("helena"), "helen");});
test("helgenberger -> helgenberger", function() {deepEqual( Stem("helgenberger"), "helgenberger");});
test("helmut -> helmut", function() {deepEqual( Stem("helmut"), "helmut");});
test("helsinki -> helsink", function() {deepEqual( Stem("helsinki"), "helsink");});
test("hemmings -> hemmings", function() {deepEqual( Stem("hemmings"), "hemmings");});
test("heniz -> heniz", function() {deepEqual( Stem("heniz"), "heniz");});
test("henrik -> henrik", function() {deepEqual( Stem("henrik"), "henrik");});
test("henry -> henry", function() {deepEqual( Stem("henry"), "henry");});
test("hepburn -> hepburn", function() {deepEqual( Stem("hepburn"), "hepburn");});
test("herald -> herald", function() {deepEqual( Stem("herald"), "herald");});
test("herba -> herb", function() {deepEqual( Stem("herba"), "herb");});
test("heroe -> hero", function() {deepEqual( Stem("heroe"), "hero");});
test("heroi -> hero", function() {deepEqual( Stem("heroi"), "hero");});
test("herrera -> herrer", function() {deepEqual( Stem("herrera"), "herrer");});
test("hervè -> herv", function() {deepEqual( Stem("hervè"), "herv");});
test("herzog -> herzog", function() {deepEqual( Stem("herzog"), "herzog");});
test("hezb -> hezb", function() {deepEqual( Stem("hezb"), "hezb");});
test("hibernian -> hibernian", function() {deepEqual( Stem("hibernian"), "hibernian");});
test("highlander -> highlander", function() {deepEqual( Stem("highlander"), "highlander");});
test("hillman -> hillman", function() {deepEqual( Stem("hillman"), "hillman");});
test("hillo -> hill", function() {deepEqual( Stem("hillo"), "hill");});
test("hills -> hills", function() {deepEqual( Stem("hills"), "hills");});
test("hiroyuki -> hiroyuk", function() {deepEqual( Stem("hiroyuki"), "hiroyuk");});
test("his -> his", function() {deepEqual( Stem("his"), "his");});
test("hispano -> hisp", function() {deepEqual( Stem("hispano"), "hisp");});
test("hist -> hist", function() {deepEqual( Stem("hist"), "hist");});
test("historia -> histor", function() {deepEqual( Stem("historia"), "histor");});
test("historiae -> historia", function() {deepEqual( Stem("historiae"), "historia");});
test("hitler -> hitler", function() {deepEqual( Stem("hitler"), "hitler");});
test("hlena -> hlen", function() {deepEqual( Stem("hlena"), "hlen");});
test("ho -> ho", function() {deepEqual( Stem("ho"), "ho");});
test("hoc -> hoc", function() {deepEqual( Stem("hoc"), "hoc");});
test("hockey -> hockey", function() {deepEqual( Stem("hockey"), "hockey");});
test("hoffman -> hoffman", function() {deepEqual( Stem("hoffman"), "hoffman");});
test("hold -> hold", function() {deepEqual( Stem("hold"), "hold");});
test("holding -> holding", function() {deepEqual( Stem("holding"), "holding");});
test("holly -> holly", function() {deepEqual( Stem("holly"), "holly");});
test("hollywood -> hollywood", function() {deepEqual( Stem("hollywood"), "hollywood");});
test("hollywoodiano -> hollywood", function() {deepEqual( Stem("hollywoodiano"), "hollywood");});
test("holm -> holm", function() {deepEqual( Stem("holm"), "holm");});
test("homefront -> homefront", function() {deepEqual( Stem("homefront"), "homefront");});
test("homer -> homer", function() {deepEqual( Stem("homer"), "homer");});
test("honesta -> honest", function() {deepEqual( Stem("honesta"), "honest");});
test("honestas -> honestas", function() {deepEqual( Stem("honestas"), "honestas");});
test("hong -> hong", function() {deepEqual( Stem("hong"), "hong");});
test("honolulu -> honolulu", function() {deepEqual( Stem("honolulu"), "honolulu");});
test("hood -> hood", function() {deepEqual( Stem("hood"), "hood");});
test("hooker -> hooker", function() {deepEqual( Stem("hooker"), "hooker");});
test("horrori -> horror", function() {deepEqual( Stem("horrori"), "horror");});
test("horst -> horst", function() {deepEqual( Stem("horst"), "horst");});
test("horthy -> horthy", function() {deepEqual( Stem("horthy"), "horthy");});
test("hospital -> hospital", function() {deepEqual( Stem("hospital"), "hospital");});
test("hossack -> hossack", function() {deepEqual( Stem("hossack"), "hossack");});
test("hostess -> hostess", function() {deepEqual( Stem("hostess"), "hostess");});
test("hostibus -> hostibus", function() {deepEqual( Stem("hostibus"), "hostibus");});
test("hot -> hot", function() {deepEqual( Stem("hot"), "hot");});
test("hotel -> hotel", function() {deepEqual( Stem("hotel"), "hotel");});
test("house -> hous", function() {deepEqual( Stem("house"), "hous");});
test("houston -> houston", function() {deepEqual( Stem("houston"), "houston");});
test("hrovatin -> hrovatin", function() {deepEqual( Stem("hrovatin"), "hrovatin");});
test("hrw -> hrw", function() {deepEqual( Stem("hrw"), "hrw");});
test("hubbard -> hubbard", function() {deepEqual( Stem("hubbard"), "hubbard");});
test("huber -> huber", function() {deepEqual( Stem("huber"), "huber");});
test("hubert -> hubert", function() {deepEqual( Stem("hubert"), "hubert");});
test("hugo -> hug", function() {deepEqual( Stem("hugo"), "hug");});
test("hullweck -> hullweck", function() {deepEqual( Stem("hullweck"), "hullweck");});
test("human -> human", function() {deepEqual( Stem("human"), "human");});
test("humana -> human", function() {deepEqual( Stem("humana"), "human");});
test("hunt -> hunt", function() {deepEqual( Stem("hunt"), "hunt");});
test("huomini -> huomin", function() {deepEqual( Stem("huomini"), "huomin");});
test("hursk -> hursk", function() {deepEqual( Stem("hursk"), "hursk");});
test("hussein -> hussein", function() {deepEqual( Stem("hussein"), "hussein");});
test("hutchence -> hutchenc", function() {deepEqual( Stem("hutchence"), "hutchenc");});
test("huygens -> huygens", function() {deepEqual( Stem("huygens"), "huygens");});
test("hydro -> hydro", function() {deepEqual( Stem("hydro"), "hydro");});
test("hynojosa -> hynojos", function() {deepEqual( Stem("hynojosa"), "hynojos");});
test("i -> i", function() {deepEqual( Stem("i"), "i");});
test("ì -> ì", function() {deepEqual( Stem("ì"), "ì");});
test("ia -> ia", function() {deepEqual( Stem("ia"), "ia");});
test("iaaf -> iaaf", function() {deepEqual( Stem("iaaf"), "iaaf");});
test("iacchetti -> iacchett", function() {deepEqual( Stem("iacchetti"), "iacchett");});
test("iachini -> iachin", function() {deepEqual( Stem("iachini"), "iachin");});
test("iacobelli -> iacobell", function() {deepEqual( Stem("iacobelli"), "iacobell");});
test("ian -> ian", function() {deepEqual( Stem("ian"), "ian");});
test("ianì -> ian", function() {deepEqual( Stem("ianì"), "ian");});
test("ianuae -> ianua", function() {deepEqual( Stem("ianuae"), "ianua");});
test("ibarra -> ibarr", function() {deepEqual( Stem("ibarra"), "ibarr");});
test("ibbs -> ibbs", function() {deepEqual( Stem("ibbs"), "ibbs");});
test("ibca -> ibca", function() {deepEqual( Stem("ibca"), "ibca");});
test("iberdrola -> iberdrol", function() {deepEqual( Stem("iberdrola"), "iberdrol");});
test("ibf -> ibf", function() {deepEqual( Stem("ibf"), "ibf");});
test("ibm -> ibm", function() {deepEqual( Stem("ibm"), "ibm");});
test("ic -> ic", function() {deepEqual( Stem("ic"), "ic");});
test("icastico -> icast", function() {deepEqual( Stem("icastico"), "icast");});
test("iccri -> iccri", function() {deepEqual( Stem("iccri"), "iccri");});
test("ici -> ici", function() {deepEqual( Stem("ici"), "ici");});
test("iconografica -> iconograf", function() {deepEqual( Stem("iconografica"), "iconograf");});
test("icordate -> icord", function() {deepEqual( Stem("icordate"), "icord");});
test("icq -> icq", function() {deepEqual( Stem("icq"), "icq");});
test("idagine -> idagin", function() {deepEqual( Stem("idagine"), "idagin");});
test("iddio -> iddi", function() {deepEqual( Stem("iddio"), "iddi");});
test("idea -> ide", function() {deepEqual( Stem("idea"), "ide");});
test("ideale -> ideal", function() {deepEqual( Stem("ideale"), "ideal");});
test("idealè -> ideal", function() {deepEqual( Stem("idealè"), "ideal");});
test("ideali -> ideal", function() {deepEqual( Stem("ideali"), "ideal");});
test("idealità -> ideal", function() {deepEqual( Stem("idealità"), "ideal");});
test("ideatore -> ideator", function() {deepEqual( Stem("ideatore"), "ideator");});
test("ideatori -> ideator", function() {deepEqual( Stem("ideatori"), "ideator");});
test("idee -> ide", function() {deepEqual( Stem("idee"), "ide");});
test("ideli -> idel", function() {deepEqual( Stem("ideli"), "idel");});
test("identica -> ident", function() {deepEqual( Stem("identica"), "ident");});
test("identico -> ident", function() {deepEqual( Stem("identico"), "ident");});
test("identificando -> identific", function() {deepEqual( Stem("identificando"), "identific");});
test("identificare -> identific", function() {deepEqual( Stem("identificare"), "identific");});
test("identificate -> identific", function() {deepEqual( Stem("identificate"), "identific");});
test("identificati -> identific", function() {deepEqual( Stem("identificati"), "identific");});
test("identificato -> identific", function() {deepEqual( Stem("identificato"), "identific");});
test("identikit -> identikit", function() {deepEqual( Stem("identikit"), "identikit");});
test("identità -> ident", function() {deepEqual( Stem("identità"), "ident");});
test("ideò -> ide", function() {deepEqual( Stem("ideò"), "ide");});
test("ideologia -> ideolog", function() {deepEqual( Stem("ideologia"), "ideolog");});
test("ideologiche -> ideolog", function() {deepEqual( Stem("ideologiche"), "ideolog");});
test("ideologo -> ideolog", function() {deepEqual( Stem("ideologo"), "ideolog");});
test("idilliache -> idilliac", function() {deepEqual( Stem("idilliache"), "idilliac");});
test("idiotismi -> idiot", function() {deepEqual( Stem("idiotismi"), "idiot");});
test("idiozia -> idioz", function() {deepEqual( Stem("idiozia"), "idioz");});
test("idoena -> idoen", function() {deepEqual( Stem("idoena"), "idoen");});
test("idolatrava -> idolatr", function() {deepEqual( Stem("idolatrava"), "idolatr");});
test("idoli -> idol", function() {deepEqual( Stem("idoli"), "idol");});
test("idolo -> idol", function() {deepEqual( Stem("idolo"), "idol");});
test("idonee -> idone", function() {deepEqual( Stem("idonee"), "idone");});
test("idoneo -> idone", function() {deepEqual( Stem("idoneo"), "idone");});
test("idorelettrici -> idorelettr", function() {deepEqual( Stem("idorelettrici"), "idorelettr");});
test("idra -> idra", function() {deepEqual( Stem("idra"), "idra");});
test("idriche -> idric", function() {deepEqual( Stem("idriche"), "idric");});
test("idrico -> idric", function() {deepEqual( Stem("idrico"), "idric");});
test("idrocarburi -> idrocarbur", function() {deepEqual( Stem("idrocarburi"), "idrocarbur");});
test("idroelettrica -> idroelettr", function() {deepEqual( Stem("idroelettrica"), "idroelettr");});
test("idroelettriche -> idroelettr", function() {deepEqual( Stem("idroelettriche"), "idroelettr");});
test("idroelettrici -> idroelettr", function() {deepEqual( Stem("idroelettrici"), "idroelettr");});
test("idrofobo -> idrofob", function() {deepEqual( Stem("idrofobo"), "idrofob");});
test("idwa -> idwa", function() {deepEqual( Stem("idwa"), "idwa");});
test("ielo -> iel", function() {deepEqual( Stem("ielo"), "iel");});
test("ielpo -> ielp", function() {deepEqual( Stem("ielpo"), "ielp");});
test("ieltsin -> ieltsin", function() {deepEqual( Stem("ieltsin"), "ieltsin");});
test("ier -> ier", function() {deepEqual( Stem("ier"), "ier");});
test("ierardi -> ierard", function() {deepEqual( Stem("ierardi"), "ierard");});
test("ieri -> ier", function() {deepEqual( Stem("ieri"), "ier");});
test("ierlaltro -> ierlaltr", function() {deepEqual( Stem("ierlaltro"), "ierlaltr");});
test("ierreversibile -> ierrevers", function() {deepEqual( Stem("ierreversibile"), "ierrevers");});
test("ievghenia -> ievghen", function() {deepEqual( Stem("ievghenia"), "ievghen");});
test("ifi -> ifi", function() {deepEqual( Stem("ifi"), "ifi");});
test("ifil -> ifil", function() {deepEqual( Stem("ifil"), "ifil");});
test("ifis -> ifis", function() {deepEqual( Stem("ifis"), "ifis");});
test("ig -> ig", function() {deepEqual( Stem("ig"), "ig");});
test("igea -> ige", function() {deepEqual( Stem("igea"), "ige");});
test("ignara -> ignar", function() {deepEqual( Stem("ignara"), "ignar");});
test("ignari -> ignar", function() {deepEqual( Stem("ignari"), "ignar");});
test("ignazio -> ignaz", function() {deepEqual( Stem("ignazio"), "ignaz");});
test("ignea -> igne", function() {deepEqual( Stem("ignea"), "igne");});
test("ignobile -> ignobil", function() {deepEqual( Stem("ignobile"), "ignobil");});
test("ignora -> ignor", function() {deepEqual( Stem("ignora"), "ignor");});
test("ignorando -> ignor", function() {deepEqual( Stem("ignorando"), "ignor");});
test("ignorantaggine -> ignorantaggin", function() {deepEqual( Stem("ignorantaggine"), "ignorantaggin");});
test("ignorante -> ignor", function() {deepEqual( Stem("ignorante"), "ignor");});
test("ignoranti -> ignor", function() {deepEqual( Stem("ignoranti"), "ignor");});
test("ignoranza -> ignor", function() {deepEqual( Stem("ignoranza"), "ignor");});
test("ignorate -> ignor", function() {deepEqual( Stem("ignorate"), "ignor");});
test("ignorati -> ignor", function() {deepEqual( Stem("ignorati"), "ignor");});
test("ignorato -> ignor", function() {deepEqual( Stem("ignorato"), "ignor");});
test("ignorava -> ignor", function() {deepEqual( Stem("ignorava"), "ignor");});
test("ignote -> ignot", function() {deepEqual( Stem("ignote"), "ignot");});
test("ignoti -> ignot", function() {deepEqual( Stem("ignoti"), "ignot");});
test("ignotum -> ignotum", function() {deepEqual( Stem("ignotum"), "ignotum");});
test("ignudi -> ignud", function() {deepEqual( Stem("ignudi"), "ignud");});
test("igor -> igor", function() {deepEqual( Stem("igor"), "igor");});
test("igpa -> igpa", function() {deepEqual( Stem("igpa"), "igpa");});
test("ih -> ih", function() {deepEqual( Stem("ih"), "ih");});
test("ii -> ii", function() {deepEqual( Stem("ii"), "ii");});
test("iii -> iii", function() {deepEqual( Stem("iii"), "iii");});
test("il -> il", function() {deepEqual( Stem("il"), "il");});
test("ilari -> ilar", function() {deepEqual( Stem("ilari"), "ilar");});
test("ilaria -> ilar", function() {deepEqual( Stem("ilaria"), "ilar");});
test("ilarità -> ilar", function() {deepEqual( Stem("ilarità"), "ilar");});
test("ilcorpo -> ilcorp", function() {deepEqual( Stem("ilcorpo"), "ilcorp");});
test("ilgoverno -> ilgovern", function() {deepEqual( Stem("ilgoverno"), "ilgovern");});
test("iliade -> iliad", function() {deepEqual( Stem("iliade"), "iliad");});
test("ilic -> ilic", function() {deepEqual( Stem("ilic"), "ilic");});
test("ilidza -> ilidz", function() {deepEqual( Stem("ilidza"), "ilidz");});
test("ilirià -> ilir", function() {deepEqual( Stem("ilirià"), "ilir");});
test("ilitare -> ilit", function() {deepEqual( Stem("ilitare"), "ilit");});
test("illanguidire -> illanguid", function() {deepEqual( Stem("illanguidire"), "illanguid");});
test("illazioni -> illazion", function() {deepEqual( Stem("illazioni"), "illazion");});
test("illecita -> illec", function() {deepEqual( Stem("illecita"), "illec");});
test("illeciti -> illec", function() {deepEqual( Stem("illeciti"), "illec");});
test("illecito -> illec", function() {deepEqual( Stem("illecito"), "illec");});
test("illegali -> illegal", function() {deepEqual( Stem("illegali"), "illegal");});
test("illegalmente -> illegal", function() {deepEqual( Stem("illegalmente"), "illegal");});
test("illegittima -> illegittim", function() {deepEqual( Stem("illegittima"), "illegittim");});
test("illegittimo -> illegittim", function() {deepEqual( Stem("illegittimo"), "illegittim");});
test("illesi -> illes", function() {deepEqual( Stem("illesi"), "illes");});
test("illeso -> illes", function() {deepEqual( Stem("illeso"), "illes");});
test("illetterati -> illetter", function() {deepEqual( Stem("illetterati"), "illetter");});
test("illimitata -> illimit", function() {deepEqual( Stem("illimitata"), "illimit");});
test("illimitatamente -> illimitat", function() {deepEqual( Stem("illimitatamente"), "illimitat");});
test("illimitato -> illimit", function() {deepEqual( Stem("illimitato"), "illimit");});
test("illius -> illius", function() {deepEqual( Stem("illius"), "illius");});
test("illuderci -> illud", function() {deepEqual( Stem("illuderci"), "illud");});
test("illumina -> illumin", function() {deepEqual( Stem("illumina"), "illumin");});
test("illuminare -> illumin", function() {deepEqual( Stem("illuminare"), "illumin");});
test("illuminato -> illumin", function() {deepEqual( Stem("illuminato"), "illumin");});
test("illuminazione -> illumin", function() {deepEqual( Stem("illuminazione"), "illumin");});
test("illuminò -> illumin", function() {deepEqual( Stem("illuminò"), "illumin");});
test("illusione -> illusion", function() {deepEqual( Stem("illusione"), "illusion");});
test("illusorio -> illusor", function() {deepEqual( Stem("illusorio"), "illusor");});
test("illustra -> illustr", function() {deepEqual( Stem("illustra"), "illustr");});
test("illustrare -> illustr", function() {deepEqual( Stem("illustrare"), "illustr");});
test("illustrata -> illustr", function() {deepEqual( Stem("illustrata"), "illustr");});
test("illustrate -> illustr", function() {deepEqual( Stem("illustrate"), "illustr");});
test("illustrato -> illustr", function() {deepEqual( Stem("illustrato"), "illustr");});
test("illustrazione -> illustr", function() {deepEqual( Stem("illustrazione"), "illustr");});
test("illustre -> illustr", function() {deepEqual( Stem("illustre"), "illustr");});
test("illustrerà -> illustr", function() {deepEqual( Stem("illustrerà"), "illustr");});
test("illustreranno -> illustr", function() {deepEqual( Stem("illustreranno"), "illustr");});
test("illustri -> illustr", function() {deepEqual( Stem("illustri"), "illustr");});
test("illustrissima -> illustrissim", function() {deepEqual( Stem("illustrissima"), "illustrissim");});
test("illustrissimo -> illustrissim", function() {deepEqual( Stem("illustrissimo"), "illustrissim");});
test("ilor -> ilor", function() {deepEqual( Stem("ilor"), "ilor");});
test("ilva -> ilva", function() {deepEqual( Stem("ilva"), "ilva");});
test("imam -> imam", function() {deepEqual( Stem("imam"), "imam");});
test("imbacuccarla -> imbacucc", function() {deepEqual( Stem("imbacuccarla"), "imbacucc");});
test("imbalsamando -> imbalsam", function() {deepEqual( Stem("imbalsamando"), "imbalsam");});
test("imbarazzante -> imbarazz", function() {deepEqual( Stem("imbarazzante"), "imbarazz");});
test("imbarazzato -> imbarazz", function() {deepEqual( Stem("imbarazzato"), "imbarazz");});
test("imbarazzo -> imbarazz", function() {deepEqual( Stem("imbarazzo"), "imbarazz");});
test("imbarcano -> imbarc", function() {deepEqual( Stem("imbarcano"), "imbarc");});
test("imbarcarci -> imbarc", function() {deepEqual( Stem("imbarcarci"), "imbarc");});
test("imbarcarmi -> imbarc", function() {deepEqual( Stem("imbarcarmi"), "imbarc");});
test("imbarcarsi -> imbarc", function() {deepEqual( Stem("imbarcarsi"), "imbarc");});
test("imbarcati -> imbarc", function() {deepEqual( Stem("imbarcati"), "imbarc");});
test("imbarcato -> imbarc", function() {deepEqual( Stem("imbarcato"), "imbarc");});
test("imbarcazioni -> imbarc", function() {deepEqual( Stem("imbarcazioni"), "imbarc");});
test("imbasciata -> imbasc", function() {deepEqual( Stem("imbasciata"), "imbasc");});
test("imbasciate -> imbasc", function() {deepEqual( Stem("imbasciate"), "imbasc");});
test("imbatte -> imbatt", function() {deepEqual( Stem("imbatte"), "imbatt");});
test("imbattuto -> imbatt", function() {deepEqual( Stem("imbattuto"), "imbatt");});
test("imbelle -> imbell", function() {deepEqual( Stem("imbelle"), "imbell");});
test("imbestialì -> imbestial", function() {deepEqual( Stem("imbestialì"), "imbestial");});
test("imbiancatura -> imbiancatur", function() {deepEqual( Stem("imbiancatura"), "imbiancatur");});
test("imbiondire -> imbiond", function() {deepEqual( Stem("imbiondire"), "imbiond");});
test("imboccar -> imbocc", function() {deepEqual( Stem("imboccar"), "imbocc");});
test("imboccare -> imbocc", function() {deepEqual( Stem("imboccare"), "imbocc");});
test("imboccata -> imbocc", function() {deepEqual( Stem("imboccata"), "imbocc");});
test("imboccato -> imbocc", function() {deepEqual( Stem("imboccato"), "imbocc");});
test("imboccatura -> imboccatur", function() {deepEqual( Stem("imboccatura"), "imboccatur");});
test("imbocchi -> imbocc", function() {deepEqual( Stem("imbocchi"), "imbocc");});
test("imborglione -> imborglion", function() {deepEqual( Stem("imborglione"), "imborglion");});
test("imboscarsi -> imbosc", function() {deepEqual( Stem("imboscarsi"), "imbosc");});
test("imboscata -> imbosc", function() {deepEqual( Stem("imboscata"), "imbosc");});
test("imbrattare -> imbratt", function() {deepEqual( Stem("imbrattare"), "imbratt");});
test("imbrattate -> imbratt", function() {deepEqual( Stem("imbrattate"), "imbratt");});
test("imbrattati -> imbratt", function() {deepEqual( Stem("imbrattati"), "imbratt");});
test("imbrattava -> imbratt", function() {deepEqual( Stem("imbrattava"), "imbratt");});
test("imbrogli -> imbrogl", function() {deepEqual( Stem("imbrogli"), "imbrogl");});
test("imbroglian -> imbroglian", function() {deepEqual( Stem("imbroglian"), "imbroglian");});
test("imbrogliando -> imbrogl", function() {deepEqual( Stem("imbrogliando"), "imbrogl");});
test("imbrogliar -> imbrogl", function() {deepEqual( Stem("imbrogliar"), "imbrogl");});
test("imbrogliare -> imbrogl", function() {deepEqual( Stem("imbrogliare"), "imbrogl");});
test("imbrogliarle -> imbrogl", function() {deepEqual( Stem("imbrogliarle"), "imbrogl");});
test("imbrogliata -> imbrogl", function() {deepEqual( Stem("imbrogliata"), "imbrogl");});
test("imbrogliate -> imbrogl", function() {deepEqual( Stem("imbrogliate"), "imbrogl");});
test("imbrogliati -> imbrogl", function() {deepEqual( Stem("imbrogliati"), "imbrogl");});
test("imbrogliato -> imbrogl", function() {deepEqual( Stem("imbrogliato"), "imbrogl");});
test("imbrogliava -> imbrogl", function() {deepEqual( Stem("imbrogliava"), "imbrogl");});
test("imbroglio -> imbrogl", function() {deepEqual( Stem("imbroglio"), "imbrogl");});
test("imbroglione -> imbroglion", function() {deepEqual( Stem("imbroglione"), "imbroglion");});
test("imbrunire -> imbrun", function() {deepEqual( Stem("imbrunire"), "imbrun");});
test("imemdiato -> imemd", function() {deepEqual( Stem("imemdiato"), "imemd");});
test("imerese -> imeres", function() {deepEqual( Stem("imerese"), "imeres");});
test("imi -> imi", function() {deepEqual( Stem("imi"), "imi");});
test("imibond -> imibond", function() {deepEqual( Stem("imibond"), "imibond");});
test("imicapital -> imicapital", function() {deepEqual( Stem("imicapital"), "imicapital");});
test("imieast -> imieast", function() {deepEqual( Stem("imieast"), "imieast");});
test("imieurope -> imieurop", function() {deepEqual( Stem("imieurope"), "imieurop");});
test("imindustria -> imindustr", function() {deepEqual( Stem("imindustria"), "imindustr");});
test("imirend -> imirend", function() {deepEqual( Stem("imirend"), "imirend");});
test("imitare -> imit", function() {deepEqual( Stem("imitare"), "imit");});
test("imitava -> imit", function() {deepEqual( Stem("imitava"), "imit");});
test("imitazione -> imit", function() {deepEqual( Stem("imitazione"), "imit");});
test("imiwest -> imiwest", function() {deepEqual( Stem("imiwest"), "imiwest");});
test("imm -> imm", function() {deepEqual( Stem("imm"), "imm");});
test("immagazzinare -> immagazzin", function() {deepEqual( Stem("immagazzinare"), "immagazzin");});
test("immagina -> immagin", function() {deepEqual( Stem("immagina"), "immagin");});
test("immaginandosi -> immagin", function() {deepEqual( Stem("immaginandosi"), "immagin");});
test("immaginano -> immagin", function() {deepEqual( Stem("immaginano"), "immagin");});
test("immaginar -> immagin", function() {deepEqual( Stem("immaginar"), "immagin");});
test("immaginare -> immagin", function() {deepEqual( Stem("immaginare"), "immagin");});
test("immaginari -> immaginar", function() {deepEqual( Stem("immaginari"), "immaginar");});
test("immaginaria -> immaginar", function() {deepEqual( Stem("immaginaria"), "immaginar");});
test("immaginarne -> immagin", function() {deepEqual( Stem("immaginarne"), "immagin");});
test("immaginarsela -> immaginarsel", function() {deepEqual( Stem("immaginarsela"), "immaginarsel");});
test("immaginarselo -> immaginarsel", function() {deepEqual( Stem("immaginarselo"), "immaginarsel");});
test("immaginarsi -> immagin", function() {deepEqual( Stem("immaginarsi"), "immagin");});
test("immaginarvi -> immagin", function() {deepEqual( Stem("immaginarvi"), "immagin");});
test("immaginata -> immagin", function() {deepEqual( Stem("immaginata"), "immagin");});
test("immaginate -> immagin", function() {deepEqual( Stem("immaginate"), "immagin");});
test("immaginatevi -> immaginat", function() {deepEqual( Stem("immaginatevi"), "immaginat");});
test("immaginativa -> immagin", function() {deepEqual( Stem("immaginativa"), "immagin");});
test("immaginato -> immagin", function() {deepEqual( Stem("immaginato"), "immagin");});
test("immaginava -> immagin", function() {deepEqual( Stem("immaginava"), "immagin");});
test("immaginazion -> immaginazion", function() {deepEqual( Stem("immaginazion"), "immaginazion");});
test("immaginazione -> immagin", function() {deepEqual( Stem("immaginazione"), "immagin");});
test("immaginazioni -> immagin", function() {deepEqual( Stem("immaginazioni"), "immagin");});
test("immagine -> immagin", function() {deepEqual( Stem("immagine"), "immagin");});
test("immaginè -> immagin", function() {deepEqual( Stem("immaginè"), "immagin");});
test("immaginerebbe -> immagin", function() {deepEqual( Stem("immaginerebbe"), "immagin");});
test("immagini -> immagin", function() {deepEqual( Stem("immagini"), "immagin");});
test("immagino -> immagin", function() {deepEqual( Stem("immagino"), "immagin");});
test("immaginò -> immagin", function() {deepEqual( Stem("immaginò"), "immagin");});
test("immaginosa -> immagin", function() {deepEqual( Stem("immaginosa"), "immagin");});
test("immantinente -> immantinent", function() {deepEqual( Stem("immantinente"), "immantinent");});
test("immatricolate -> immatricol", function() {deepEqual( Stem("immatricolate"), "immatricol");});
test("immatricolato -> immatricol", function() {deepEqual( Stem("immatricolato"), "immatricol");});
test("immatricolazioni -> immatricol", function() {deepEqual( Stem("immatricolazioni"), "immatricol");});
test("immaturità -> immatur", function() {deepEqual( Stem("immaturità"), "immatur");});
test("immedesimata -> immedesim", function() {deepEqual( Stem("immedesimata"), "immedesim");});
test("immediata -> immed", function() {deepEqual( Stem("immediata"), "immed");});
test("immediatamente -> immediat", function() {deepEqual( Stem("immediatamente"), "immediat");});
test("immediate -> immed", function() {deepEqual( Stem("immediate"), "immed");});
test("immediatezza -> immediatezz", function() {deepEqual( Stem("immediatezza"), "immediatezz");});
test("immediati -> immed", function() {deepEqual( Stem("immediati"), "immed");});
test("immediato -> immed", function() {deepEqual( Stem("immediato"), "immed");});
test("immemorabile -> immemor", function() {deepEqual( Stem("immemorabile"), "immemor");});
test("immensa -> immens", function() {deepEqual( Stem("immensa"), "immens");});
test("immenso -> immens", function() {deepEqual( Stem("immenso"), "immens");});
test("immeritato -> immerit", function() {deepEqual( Stem("immeritato"), "immerit");});
test("immerso -> immers", function() {deepEqual( Stem("immerso"), "immers");});
test("immettere -> immett", function() {deepEqual( Stem("immettere"), "immett");});
test("immigrati -> immigr", function() {deepEqual( Stem("immigrati"), "immigr");});
test("immigratorie -> immigrator", function() {deepEqual( Stem("immigratorie"), "immigrator");});
test("immigrazione -> immigr", function() {deepEqual( Stem("immigrazione"), "immigr");});
test("imminente -> imminent", function() {deepEqual( Stem("imminente"), "imminent");});
test("imminenza -> imminent", function() {deepEqual( Stem("imminenza"), "imminent");});
test("immissione -> immission", function() {deepEqual( Stem("immissione"), "immission");});
test("immobile -> immobil", function() {deepEqual( Stem("immobile"), "immobil");});
test("immobili -> immobil", function() {deepEqual( Stem("immobili"), "immobil");});
test("immobiliare -> immobil", function() {deepEqual( Stem("immobiliare"), "immobil");});
test("immobiliari -> immobiliar", function() {deepEqual( Stem("immobiliari"), "immobiliar");});
test("immobilismo -> immobil", function() {deepEqual( Stem("immobilismo"), "immobil");});
test("immobilità -> immobil", function() {deepEqual( Stem("immobilità"), "immobil");});
test("immobilizzarlo -> immobilizz", function() {deepEqual( Stem("immobilizzarlo"), "immobilizz");});
test("immobilizzato -> immobilizz", function() {deepEqual( Stem("immobilizzato"), "immobilizz");});
test("immolato -> immol", function() {deepEqual( Stem("immolato"), "immol");});
test("immondizia -> immondiz", function() {deepEqual( Stem("immondizia"), "immondiz");});
test("immondizie -> immondiz", function() {deepEqual( Stem("immondizie"), "immondiz");});
test("immondo -> immond", function() {deepEqual( Stem("immondo"), "immond");});
test("immortale -> immortal", function() {deepEqual( Stem("immortale"), "immortal");});
test("immota -> immot", function() {deepEqual( Stem("immota"), "immot");});
test("immoto -> immot", function() {deepEqual( Stem("immoto"), "immot");});
test("immune -> immun", function() {deepEqual( Stem("immune"), "immun");});
test("immuni -> immun", function() {deepEqual( Stem("immuni"), "immun");});
test("immunità -> immun", function() {deepEqual( Stem("immunità"), "immun");});
test("immutate -> immut", function() {deepEqual( Stem("immutate"), "immut");});
test("immutato -> immut", function() {deepEqual( Stem("immutato"), "immut");});
test("imola -> imol", function() {deepEqual( Stem("imola"), "imol");});
test("impacciata -> impacc", function() {deepEqual( Stem("impacciata"), "impacc");});
test("impadronirà -> impadron", function() {deepEqual( Stem("impadronirà"), "impadron");});
test("impadroniron -> impadroniron", function() {deepEqual( Stem("impadroniron"), "impadroniron");});
test("impadronirsene -> impadron", function() {deepEqual( Stem("impadronirsene"), "impadron");});
test("impallidì -> impallid", function() {deepEqual( Stem("impallidì"), "impallid");});
test("impaniata -> impan", function() {deepEqual( Stem("impaniata"), "impan");});
test("impannata -> impann", function() {deepEqual( Stem("impannata"), "impann");});
test("impannate -> impann", function() {deepEqual( Stem("impannate"), "impann");});
test("impara -> impar", function() {deepEqual( Stem("impara"), "impar");});
test("imparando -> impar", function() {deepEqual( Stem("imparando"), "impar");});
test("imparassero -> impar", function() {deepEqual( Stem("imparassero"), "impar");});
test("imparassimo -> impar", function() {deepEqual( Stem("imparassimo"), "impar");});
test("imparate -> impar", function() {deepEqual( Stem("imparate"), "impar");});
test("imparati -> impar", function() {deepEqual( Stem("imparati"), "impar");});
test("imparato -> impar", function() {deepEqual( Stem("imparato"), "impar");});
test("impari -> impar", function() {deepEqual( Stem("impari"), "impar");});
test("imparò -> impar", function() {deepEqual( Stem("imparò"), "impar");});
test("imparzialità -> imparzial", function() {deepEqual( Stem("imparzialità"), "imparzial");});
test("impasse -> impass", function() {deepEqual( Stem("impasse"), "impass");});
test("impassibile -> impass", function() {deepEqual( Stem("impassibile"), "impass");});
test("impastocchiarvi -> impastocc", function() {deepEqual( Stem("impastocchiarvi"), "impastocc");});
test("impastocchiate -> impastocc", function() {deepEqual( Stem("impastocchiate"), "impastocc");});
test("impattarla -> impatt", function() {deepEqual( Stem("impattarla"), "impatt");});
test("impatto -> impatt", function() {deepEqual( Stem("impatto"), "impatt");});
test("impaurirla -> impaur", function() {deepEqual( Stem("impaurirla"), "impaur");});
test("impaziente -> impazient", function() {deepEqual( Stem("impaziente"), "impazient");});
test("impazientisce -> impazient", function() {deepEqual( Stem("impazientisce"), "impazient");});
test("impazientito -> impazient", function() {deepEqual( Stem("impazientito"), "impazient");});
test("impazienza -> impazient", function() {deepEqual( Stem("impazienza"), "impazient");});
test("impazzano -> impazz", function() {deepEqual( Stem("impazzano"), "impazz");});
test("impazzata -> impazz", function() {deepEqual( Stem("impazzata"), "impazz");});
test("impedendo -> imped", function() {deepEqual( Stem("impedendo"), "imped");});
test("impedendogli -> imped", function() {deepEqual( Stem("impedendogli"), "imped");});
test("impedimenti -> imped", function() {deepEqual( Stem("impedimenti"), "imped");});
test("impedimento -> imped", function() {deepEqual( Stem("impedimento"), "imped");});
test("impedir -> imped", function() {deepEqual( Stem("impedir"), "imped");});
test("impedire -> imped", function() {deepEqual( Stem("impedire"), "imped");});
test("impedirebbe -> imped", function() {deepEqual( Stem("impedirebbe"), "imped");});
test("impedirgli -> imped", function() {deepEqual( Stem("impedirgli"), "imped");});
test("impedirla -> imped", function() {deepEqual( Stem("impedirla"), "imped");});
test("impedirle -> imped", function() {deepEqual( Stem("impedirle"), "imped");});
test("impedirlo -> imped", function() {deepEqual( Stem("impedirlo"), "imped");});
test("impedirne -> imped", function() {deepEqual( Stem("impedirne"), "imped");});
test("impedirtela -> imped", function() {deepEqual( Stem("impedirtela"), "imped");});
test("impedisca -> imped", function() {deepEqual( Stem("impedisca"), "imped");});
test("impedisce -> imped", function() {deepEqual( Stem("impedisce"), "imped");});
test("impediscono -> imped", function() {deepEqual( Stem("impediscono"), "imped");});
test("impedisse -> impediss", function() {deepEqual( Stem("impedisse"), "impediss");});
test("impedissero -> imped", function() {deepEqual( Stem("impedissero"), "imped");});
test("impedito -> imped", function() {deepEqual( Stem("impedito"), "imped");});
test("impediva -> imped", function() {deepEqual( Stem("impediva"), "imped");});
test("impedivano -> imped", function() {deepEqual( Stem("impedivano"), "imped");});
test("impegna -> impegn", function() {deepEqual( Stem("impegna"), "impegn");});
test("impegnando -> impegn", function() {deepEqual( Stem("impegnando"), "impegn");});
test("impegnandosi -> impegn", function() {deepEqual( Stem("impegnandosi"), "impegn");});
test("impegnano -> impegn", function() {deepEqual( Stem("impegnano"), "impegn");});
test("impegnare -> impegn", function() {deepEqual( Stem("impegnare"), "impegn");});
test("impegnarmi -> impegn", function() {deepEqual( Stem("impegnarmi"), "impegn");});
test("impegnarsi -> impegn", function() {deepEqual( Stem("impegnarsi"), "impegn");});
test("impegnasse -> impegn", function() {deepEqual( Stem("impegnasse"), "impegn");});
test("impegnassero -> impegn", function() {deepEqual( Stem("impegnassero"), "impegn");});
test("impegnata -> impegn", function() {deepEqual( Stem("impegnata"), "impegn");});
test("impegnate -> impegn", function() {deepEqual( Stem("impegnate"), "impegn");});
test("impegnati -> impegn", function() {deepEqual( Stem("impegnati"), "impegn");});
test("impegnative -> impegn", function() {deepEqual( Stem("impegnative"), "impegn");});
test("impegnato -> impegn", function() {deepEqual( Stem("impegnato"), "impegn");});
test("impegnavano -> impegn", function() {deepEqual( Stem("impegnavano"), "impegn");});
test("impegneranno -> impegn", function() {deepEqual( Stem("impegneranno"), "impegn");});
test("impegni -> impegn", function() {deepEqual( Stem("impegni"), "impegn");});
test("impegnino -> impegnin", function() {deepEqual( Stem("impegnino"), "impegnin");});
test("impegno -> impegn", function() {deepEqual( Stem("impegno"), "impegn");});
test("impegnò -> impegn", function() {deepEqual( Stem("impegnò"), "impegn");});
test("impenetrabile -> impenetr", function() {deepEqual( Stem("impenetrabile"), "impenetr");});
test("impennarsi -> impenn", function() {deepEqual( Stem("impennarsi"), "impenn");});
test("impennata -> impenn", function() {deepEqual( Stem("impennata"), "impenn");});
test("impensabile -> impens", function() {deepEqual( Stem("impensabile"), "impens");});
test("impensata -> impens", function() {deepEqual( Stem("impensata"), "impens");});
test("impensati -> impens", function() {deepEqual( Stem("impensati"), "impens");});
test("impensato -> impens", function() {deepEqual( Stem("impensato"), "impens");});
test("imperativo -> imper", function() {deepEqual( Stem("imperativo"), "imper");});
test("imperator -> imperator", function() {deepEqual( Stem("imperator"), "imperator");});
test("imperatore -> imper", function() {deepEqual( Stem("imperatore"), "imper");});
test("impercettibile -> impercett", function() {deepEqual( Stem("impercettibile"), "impercett");});
test("imperciocché -> imperciocc", function() {deepEqual( Stem("imperciocché"), "imperciocc");});
test("imperdonabile -> imperdon", function() {deepEqual( Stem("imperdonabile"), "imperdon");});
test("imperfetta -> imperfett", function() {deepEqual( Stem("imperfetta"), "imperfett");});
test("imperfettione -> imperfettion", function() {deepEqual( Stem("imperfettione"), "imperfettion");});
test("imperfetto -> imperfett", function() {deepEqual( Stem("imperfetto"), "imperfett");});
test("imperfezion -> imperfezion", function() {deepEqual( Stem("imperfezion"), "imperfezion");});
test("imperia -> imper", function() {deepEqual( Stem("imperia"), "imper");});
test("imperiale -> imperial", function() {deepEqual( Stem("imperiale"), "imperial");});
test("imperiese -> imperies", function() {deepEqual( Stem("imperiese"), "imperies");});
test("imperiosa -> imper", function() {deepEqual( Stem("imperiosa"), "imper");});
test("imperiose -> imper", function() {deepEqual( Stem("imperiose"), "imper");});
test("imperioso -> imper", function() {deepEqual( Stem("imperioso"), "imper");});
test("impero -> imper", function() {deepEqual( Stem("impero"), "imper");});
test("imperscrutabile -> imperscrut", function() {deepEqual( Stem("imperscrutabile"), "imperscrut");});
test("imperterrito -> imperterr", function() {deepEqual( Stem("imperterrito"), "imperterr");});
test("impertinenze -> impertinent", function() {deepEqual( Stem("impertinenze"), "impertinent");});
test("imperturbabile -> imperturb", function() {deepEqual( Stem("imperturbabile"), "imperturb");});
test("imperturbata -> imperturb", function() {deepEqual( Stem("imperturbata"), "imperturb");});
test("imperversar -> impervers", function() {deepEqual( Stem("imperversar"), "impervers");});
test("imperversato -> impervers", function() {deepEqual( Stem("imperversato"), "impervers");});
test("impeto -> impet", function() {deepEqual( Stem("impeto"), "impet");});
test("impetrata -> impetr", function() {deepEqual( Stem("impetrata"), "impetr");});
test("impetuosa -> impetu", function() {deepEqual( Stem("impetuosa"), "impetu");});
test("impetuosamente -> impetu", function() {deepEqual( Stem("impetuosamente"), "impetu");});
test("impetuosi -> impetu", function() {deepEqual( Stem("impetuosi"), "impetu");});
test("impetuoso -> impetu", function() {deepEqual( Stem("impetuoso"), "impetu");});
test("imphal -> imphal", function() {deepEqual( Stem("imphal"), "imphal");});
test("impianti -> impiant", function() {deepEqual( Stem("impianti"), "impiant");});
test("impianto -> impiant", function() {deepEqual( Stem("impianto"), "impiant");});
test("impiastramento -> impiastr", function() {deepEqual( Stem("impiastramento"), "impiastr");});
test("impiastro -> impiastr", function() {deepEqual( Stem("impiastro"), "impiastr");});
test("impiccar -> impicc", function() {deepEqual( Stem("impiccar"), "impicc");});
test("impiccarli -> impicc", function() {deepEqual( Stem("impiccarli"), "impicc");});
test("impiccati -> impicc", function() {deepEqual( Stem("impiccati"), "impicc");});
test("impiccato -> impicc", function() {deepEqual( Stem("impiccato"), "impicc");});
test("impiccheranno -> impicc", function() {deepEqual( Stem("impiccheranno"), "impicc");});
test("impicci -> impicc", function() {deepEqual( Stem("impicci"), "impicc");});
test("impicciano -> impicc", function() {deepEqual( Stem("impicciano"), "impicc");});
test("impicciare -> impicc", function() {deepEqual( Stem("impicciare"), "impicc");});
test("impicciarmene -> impicc", function() {deepEqual( Stem("impicciarmene"), "impicc");});
test("impicciarsi -> impicc", function() {deepEqual( Stem("impicciarsi"), "impicc");});
test("impicciata -> impicc", function() {deepEqual( Stem("impicciata"), "impicc");});
test("impicciate -> impicc", function() {deepEqual( Stem("impicciate"), "impicc");});
test("impicciati -> impicc", function() {deepEqual( Stem("impicciati"), "impicc");});
test("impicciato -> impicc", function() {deepEqual( Stem("impicciato"), "impicc");});
test("impicciavan -> impicciavan", function() {deepEqual( Stem("impicciavan"), "impicciavan");});
test("impiccio -> impicc", function() {deepEqual( Stem("impiccio"), "impicc");});
test("impiccione -> impiccion", function() {deepEqual( Stem("impiccione"), "impiccion");});
test("impiega -> impieg", function() {deepEqual( Stem("impiega"), "impieg");});
test("impiegar -> impieg", function() {deepEqual( Stem("impiegar"), "impieg");});
test("impiegarci -> impieg", function() {deepEqual( Stem("impiegarci"), "impieg");});
test("impiegare -> impieg", function() {deepEqual( Stem("impiegare"), "impieg");});
test("impiegarle -> impieg", function() {deepEqual( Stem("impiegarle"), "impieg");});
test("impiegarli -> impieg", function() {deepEqual( Stem("impiegarli"), "impieg");});
test("impiegarne -> impieg", function() {deepEqual( Stem("impiegarne"), "impieg");});
test("impiegarono -> impieg", function() {deepEqual( Stem("impiegarono"), "impieg");});
test("impiegarsi -> impieg", function() {deepEqual( Stem("impiegarsi"), "impieg");});
test("impiegata -> impieg", function() {deepEqual( Stem("impiegata"), "impieg");});
test("impiegate -> impieg", function() {deepEqual( Stem("impiegate"), "impieg");});
test("impiegati -> impieg", function() {deepEqual( Stem("impiegati"), "impieg");});
test("impiegato -> impieg", function() {deepEqual( Stem("impiegato"), "impieg");});
test("impiegatovi -> impiegatov", function() {deepEqual( Stem("impiegatovi"), "impiegatov");});
test("impiegherebbero -> impieg", function() {deepEqual( Stem("impiegherebbero"), "impieg");});
test("impieghi -> impieg", function() {deepEqual( Stem("impieghi"), "impieg");});
test("impieghiamo -> impieg", function() {deepEqual( Stem("impieghiamo"), "impieg");});
test("impiego -> impieg", function() {deepEqual( Stem("impiego"), "impieg");});
test("impigrito -> impigr", function() {deepEqual( Stem("impigrito"), "impigr");});
test("impiparsi -> impip", function() {deepEqual( Stem("impiparsi"), "impip");});
test("impipo -> impip", function() {deepEqual( Stem("impipo"), "impip");});
test("implacabile -> implac", function() {deepEqual( Stem("implacabile"), "implac");});
test("implica -> implic", function() {deepEqual( Stem("implica"), "implic");});
test("implicata -> implic", function() {deepEqual( Stem("implicata"), "implic");});
test("implicati -> implic", function() {deepEqual( Stem("implicati"), "implic");});
test("implicato -> implic", function() {deepEqual( Stem("implicato"), "implic");});
test("implici -> implic", function() {deepEqual( Stem("implici"), "implic");});
test("implicitamente -> implicit", function() {deepEqual( Stem("implicitamente"), "implicit");});
test("implorando -> implor", function() {deepEqual( Stem("implorando"), "implor");});
test("implorar -> implor", function() {deepEqual( Stem("implorar"), "implor");});
test("implorare -> implor", function() {deepEqual( Stem("implorare"), "implor");});
test("implorata -> implor", function() {deepEqual( Stem("implorata"), "implor");});
test("implorato -> implor", function() {deepEqual( Stem("implorato"), "implor");});
test("implorava -> implor", function() {deepEqual( Stem("implorava"), "implor");});
test("imploravan -> imploravan", function() {deepEqual( Stem("imploravan"), "imploravan");});
test("imploravano -> implor", function() {deepEqual( Stem("imploravano"), "implor");});
test("implori -> implor", function() {deepEqual( Stem("implori"), "implor");});
test("imploriate -> implor", function() {deepEqual( Stem("imploriate"), "implor");});
test("impone -> impon", function() {deepEqual( Stem("impone"), "impon");});
test("imponendogli -> impon", function() {deepEqual( Stem("imponendogli"), "impon");});
test("imponendosi -> impon", function() {deepEqual( Stem("imponendosi"), "impon");});
test("imponente -> imponent", function() {deepEqual( Stem("imponente"), "imponent");});
test("imponesse -> imponess", function() {deepEqual( Stem("imponesse"), "imponess");});
test("imponeva -> impon", function() {deepEqual( Stem("imponeva"), "impon");});
test("imponevano -> impon", function() {deepEqual( Stem("imponevano"), "impon");});
test("imponga -> impong", function() {deepEqual( Stem("imponga"), "impong");});
test("imponibile -> impon", function() {deepEqual( Stem("imponibile"), "impon");});
test("impor -> impor", function() {deepEqual( Stem("impor"), "impor");});
test("imporre -> imporr", function() {deepEqual( Stem("imporre"), "imporr");});
test("import -> import", function() {deepEqual( Stem("import"), "import");});
test("importa -> import", function() {deepEqual( Stem("importa"), "import");});
test("importabili -> import", function() {deepEqual( Stem("importabili"), "import");});
test("importante -> import", function() {deepEqual( Stem("importante"), "import");});
test("importanti -> import", function() {deepEqual( Stem("importanti"), "import");});
test("importantissimi -> importantissim", function() {deepEqual( Stem("importantissimi"), "importantissim");});
test("importantissimo -> importantissim", function() {deepEqual( Stem("importantissimo"), "importantissim");});
test("importanza -> import", function() {deepEqual( Stem("importanza"), "import");});
test("importarne -> import", function() {deepEqual( Stem("importarne"), "import");});
test("importasse -> import", function() {deepEqual( Stem("importasse"), "import");});
test("importata -> import", function() {deepEqual( Stem("importata"), "import");});
test("importati -> import", function() {deepEqual( Stem("importati"), "import");});
test("importatore -> import", function() {deepEqual( Stem("importatore"), "import");});
test("importatori -> import", function() {deepEqual( Stem("importatori"), "import");});
test("importava -> import", function() {deepEqual( Stem("importava"), "import");});
test("importazione -> import", function() {deepEqual( Stem("importazione"), "import");});
test("importazioni -> import", function() {deepEqual( Stem("importazioni"), "import");});
test("importo -> import", function() {deepEqual( Stem("importo"), "import");});
test("importuna -> importun", function() {deepEqual( Stem("importuna"), "importun");});
test("impose -> impos", function() {deepEqual( Stem("impose"), "impos");});
test("impositiva -> imposit", function() {deepEqual( Stem("impositiva"), "imposit");});
test("imposizion -> imposizion", function() {deepEqual( Stem("imposizion"), "imposizion");});
test("imposizione -> imposizion", function() {deepEqual( Stem("imposizione"), "imposizion");});
test("imposizioni -> imposizion", function() {deepEqual( Stem("imposizioni"), "imposizion");});
test("impossessa -> impossess", function() {deepEqual( Stem("impossessa"), "impossess");});
test("impossessati -> impossess", function() {deepEqual( Stem("impossessati"), "impossess");});
test("impossessava -> impossess", function() {deepEqual( Stem("impossessava"), "impossess");});
test("impossibile -> imposs", function() {deepEqual( Stem("impossibile"), "imposs");});
test("impossibili -> imposs", function() {deepEqual( Stem("impossibili"), "imposs");});
test("impossibilità -> impossibil", function() {deepEqual( Stem("impossibilità"), "impossibil");});
test("imposta -> impost", function() {deepEqual( Stem("imposta"), "impost");});
test("impostale -> impostal", function() {deepEqual( Stem("impostale"), "impostal");});
test("impostate -> impost", function() {deepEqual( Stem("impostate"), "impost");});
test("impostato -> impost", function() {deepEqual( Stem("impostato"), "impost");});
test("impostazione -> impost", function() {deepEqual( Stem("impostazione"), "impost");});
test("imposte -> impost", function() {deepEqual( Stem("imposte"), "impost");});
test("impostesi -> impostes", function() {deepEqual( Stem("impostesi"), "impostes");});
test("imposti -> impost", function() {deepEqual( Stem("imposti"), "impost");});
test("imposto -> impost", function() {deepEqual( Stem("imposto"), "impost");});
test("impostore -> impostor", function() {deepEqual( Stem("impostore"), "impostor");});
test("impostori -> impostor", function() {deepEqual( Stem("impostori"), "impostor");});
test("impostura -> impostur", function() {deepEqual( Stem("impostura"), "impostur");});
test("impotenza -> impotent", function() {deepEqual( Stem("impotenza"), "impotent");});
test("impoverimento -> impover", function() {deepEqual( Stem("impoverimento"), "impover");});
test("imprecando -> imprec", function() {deepEqual( Stem("imprecando"), "imprec");});
test("imprecazione -> imprec", function() {deepEqual( Stem("imprecazione"), "imprec");});
test("imprecazioni -> imprec", function() {deepEqual( Stem("imprecazioni"), "imprec");});
test("imprecisi -> imprecis", function() {deepEqual( Stem("imprecisi"), "imprecis");});
test("impreditore -> impreditor", function() {deepEqual( Stem("impreditore"), "impreditor");});
test("impregilo -> impregil", function() {deepEqual( Stem("impregilo"), "impregil");});
test("imprendibile -> imprend", function() {deepEqual( Stem("imprendibile"), "imprend");});
test("imprenditore -> imprenditor", function() {deepEqual( Stem("imprenditore"), "imprenditor");});
test("imprenditori -> imprenditor", function() {deepEqual( Stem("imprenditori"), "imprenditor");});
test("imprenditoria -> imprenditor", function() {deepEqual( Stem("imprenditoria"), "imprenditor");});
test("imprenditoriale -> imprenditorial", function() {deepEqual( Stem("imprenditoriale"), "imprenditorial");});
test("imprenditoriali -> imprenditorial", function() {deepEqual( Stem("imprenditoriali"), "imprenditorial");});
test("imprenditorialità -> imprenditorial", function() {deepEqual( Stem("imprenditorialità"), "imprenditorial");});
test("imprenditrice -> imprenditr", function() {deepEqual( Stem("imprenditrice"), "imprenditr");});
test("impresa -> impres", function() {deepEqual( Stem("impresa"), "impres");});
test("impresari -> impresar", function() {deepEqual( Stem("impresari"), "impresar");});
test("imprese -> impres", function() {deepEqual( Stem("imprese"), "impres");});
test("impresse -> impress", function() {deepEqual( Stem("impresse"), "impress");});
test("impressionante -> impression", function() {deepEqual( Stem("impressionante"), "impression");});
test("impressionati -> impression", function() {deepEqual( Stem("impressionati"), "impression");});
test("impressione -> impression", function() {deepEqual( Stem("impressione"), "impression");});
test("impressioni -> impression", function() {deepEqual( Stem("impressioni"), "impression");});
test("impressissetve -> impressissetv", function() {deepEqual( Stem("impressissetve"), "impressissetv");});
test("impresso -> impress", function() {deepEqual( Stem("impresso"), "impress");});
test("imprestati -> imprest", function() {deepEqual( Stem("imprestati"), "imprest");});
test("imprestiti -> imprest", function() {deepEqual( Stem("imprestiti"), "imprest");});
test("imprevedibile -> impreved", function() {deepEqual( Stem("imprevedibile"), "impreved");});
test("impreveduta -> impreved", function() {deepEqual( Stem("impreveduta"), "impreved");});
test("impreveduto -> impreved", function() {deepEqual( Stem("impreveduto"), "impreved");});
test("imprevista -> imprev", function() {deepEqual( Stem("imprevista"), "imprev");});
test("impreziosito -> imprezios", function() {deepEqual( Stem("impreziosito"), "imprezios");});
test("imprimatur -> imprimatur", function() {deepEqual( Stem("imprimatur"), "imprimatur");});
test("imprimere -> imprim", function() {deepEqual( Stem("imprimere"), "imprim");});
test("imprimeva -> imprim", function() {deepEqual( Stem("imprimeva"), "imprim");});
test("improduttive -> improdutt", function() {deepEqual( Stem("improduttive"), "improdutt");});
test("improperi -> improper", function() {deepEqual( Stem("improperi"), "improper");});
test("improperio -> improper", function() {deepEqual( Stem("improperio"), "improper");});
test("improponibile -> impropon", function() {deepEqual( Stem("improponibile"), "impropon");});
test("improponibili -> impropon", function() {deepEqual( Stem("improponibili"), "impropon");});
test("impropriamente -> impropr", function() {deepEqual( Stem("impropriamente"), "impropr");});
test("improvvida -> improvvid", function() {deepEqual( Stem("improvvida"), "improvvid");});
test("improvvisa -> improvvis", function() {deepEqual( Stem("improvvisa"), "improvvis");});
test("improvvisamente -> improvvis", function() {deepEqual( Stem("improvvisamente"), "improvvis");});
test("improvvisi -> improvvis", function() {deepEqual( Stem("improvvisi"), "improvvis");});
test("improvviso -> improvvis", function() {deepEqual( Stem("improvviso"), "improvvis");});
test("imprudente -> imprudent", function() {deepEqual( Stem("imprudente"), "imprudent");});
test("impugnando -> impugn", function() {deepEqual( Stem("impugnando"), "impugn");});
test("impugnare -> impugn", function() {deepEqual( Stem("impugnare"), "impugn");});
test("impugnati -> impugn", function() {deepEqual( Stem("impugnati"), "impugn");});
test("impugnato -> impugn", function() {deepEqual( Stem("impugnato"), "impugn");});
test("impugnatori -> impugn", function() {deepEqual( Stem("impugnatori"), "impugn");});
test("impugnatura -> impugnatur", function() {deepEqual( Stem("impugnatura"), "impugnatur");});
test("impulso -> impuls", function() {deepEqual( Stem("impulso"), "impuls");});
test("impunemente -> impun", function() {deepEqual( Stem("impunemente"), "impun");});
test("impunità -> impun", function() {deepEqual( Stem("impunità"), "impun");});
test("impunito -> impun", function() {deepEqual( Stem("impunito"), "impun");});
test("impuntano -> impunt", function() {deepEqual( Stem("impuntano"), "impunt");});
test("imputata -> imput", function() {deepEqual( Stem("imputata"), "imput");});
test("imputati -> imput", function() {deepEqual( Stem("imputati"), "imput");});
test("imputato -> imput", function() {deepEqual( Stem("imputato"), "imput");});
test("imputazione -> imput", function() {deepEqual( Stem("imputazione"), "imput");});
test("imr -> imr", function() {deepEqual( Stem("imr"), "imr");});
test("in -> in", function() {deepEqual( Stem("in"), "in");});
test("ina -> ina", function() {deepEqual( Stem("ina"), "ina");});
test("inabile -> inabil", function() {deepEqual( Stem("inabile"), "inabil");});
test("inabili -> inabil", function() {deepEqual( Stem("inabili"), "inabil");});
test("inabilità -> inabil", function() {deepEqual( Stem("inabilità"), "inabil");});
test("inaccettabile -> inaccett", function() {deepEqual( Stem("inaccettabile"), "inaccett");});
test("inaccettabili -> inaccett", function() {deepEqual( Stem("inaccettabili"), "inaccett");});
test("inadeguatezza -> inadeguatezz", function() {deepEqual( Stem("inadeguatezza"), "inadeguatezz");});
test("inaequaliterque -> inaequaliterqu", function() {deepEqual( Stem("inaequaliterque"), "inaequaliterqu");});
test("inail -> inail", function() {deepEqual( Stem("inail"), "inail");});
test("inalberar -> inalber", function() {deepEqual( Stem("inalberar"), "inalber");});
test("inalberò -> inalb", function() {deepEqual( Stem("inalberò"), "inalb");});
test("inalterabile -> inalter", function() {deepEqual( Stem("inalterabile"), "inalter");});
test("inalterato -> inalter", function() {deepEqual( Stem("inalterato"), "inalter");});
test("inamidate -> inamid", function() {deepEqual( Stem("inamidate"), "inamid");});
test("inammissibile -> inammiss", function() {deepEqual( Stem("inammissibile"), "inammiss");});
test("inanimata -> inanim", function() {deepEqual( Stem("inanimata"), "inanim");});
test("inappellabile -> inappell", function() {deepEqual( Stem("inappellabile"), "inappell");});
test("inarcare -> inarc", function() {deepEqual( Stem("inarcare"), "inarc");});
test("inarticolato -> inarticol", function() {deepEqual( Stem("inarticolato"), "inarticol");});
test("inaspettata -> inaspett", function() {deepEqual( Stem("inaspettata"), "inaspett");});
test("inaspettatamente -> inaspettat", function() {deepEqual( Stem("inaspettatamente"), "inaspettat");});
test("inaspettate -> inaspett", function() {deepEqual( Stem("inaspettate"), "inaspett");});
test("inaspettati -> inaspett", function() {deepEqual( Stem("inaspettati"), "inaspett");});
test("inaspettato -> inaspett", function() {deepEqual( Stem("inaspettato"), "inaspett");});
test("inasprimento -> inaspr", function() {deepEqual( Stem("inasprimento"), "inaspr");});
test("inasprissero -> inaspr", function() {deepEqual( Stem("inasprissero"), "inaspr");});
test("inattuato -> inattu", function() {deepEqual( Stem("inattuato"), "inattu");});
test("inaudita -> inaud", function() {deepEqual( Stem("inaudita"), "inaud");});
test("inaugura -> inaugur", function() {deepEqual( Stem("inaugura"), "inaugur");});
test("inaugurare -> inaugur", function() {deepEqual( Stem("inaugurare"), "inaugur");});
test("inaugurata -> inaugur", function() {deepEqual( Stem("inaugurata"), "inaugur");});
test("inaugurate -> inaugur", function() {deepEqual( Stem("inaugurate"), "inaugur");});
test("inaugurati -> inaugur", function() {deepEqual( Stem("inaugurati"), "inaugur");});
test("inaugurato -> inaugur", function() {deepEqual( Stem("inaugurato"), "inaugur");});
test("inaugurazione -> inaugur", function() {deepEqual( Stem("inaugurazione"), "inaugur");});
test("inaugurerà -> inaugur", function() {deepEqual( Stem("inaugurerà"), "inaugur");});
test("inazione -> inazion", function() {deepEqual( Stem("inazione"), "inazion");});
test("incagli -> incagl", function() {deepEqual( Stem("incagli"), "incagl");});
test("incagliata -> incagl", function() {deepEqual( Stem("incagliata"), "incagl");});
test("incaglio -> incagl", function() {deepEqual( Stem("incaglio"), "incagl");});
test("incalza -> incalz", function() {deepEqual( Stem("incalza"), "incalz");});
test("incalzante -> incalz", function() {deepEqual( Stem("incalzante"), "incalz");});
test("incalzanti -> incalz", function() {deepEqual( Stem("incalzanti"), "incalz");});
test("incalzare -> incalz", function() {deepEqual( Stem("incalzare"), "incalz");});
test("incalzati -> incalz", function() {deepEqual( Stem("incalzati"), "incalz");});
test("incammina -> incammin", function() {deepEqual( Stem("incammina"), "incammin");});
test("incamminaron -> incamminaron", function() {deepEqual( Stem("incamminaron"), "incamminaron");});
test("incamminarono -> incammin", function() {deepEqual( Stem("incamminarono"), "incammin");});
test("incamminata -> incammin", function() {deepEqual( Stem("incamminata"), "incammin");});
test("incamminati -> incammin", function() {deepEqual( Stem("incamminati"), "incammin");});
test("incamminato -> incammin", function() {deepEqual( Stem("incamminato"), "incammin");});
test("incamminavano -> incammin", function() {deepEqual( Stem("incamminavano"), "incammin");});
test("incamminò -> incammin", function() {deepEqual( Stem("incamminò"), "incammin");});
test("incanalare -> incanal", function() {deepEqual( Stem("incanalare"), "incanal");});
test("incanalarla -> incanal", function() {deepEqual( Stem("incanalarla"), "incanal");});
test("incannar -> incann", function() {deepEqual( Stem("incannar"), "incann");});
test("incantare -> incant", function() {deepEqual( Stem("incantare"), "incant");});
test("incantarla -> incant", function() {deepEqual( Stem("incantarla"), "incant");});
test("incantata -> incant", function() {deepEqual( Stem("incantata"), "incant");});
test("incantati -> incant", function() {deepEqual( Stem("incantati"), "incant");});
test("incantato -> incant", function() {deepEqual( Stem("incantato"), "incant");});
test("incanti -> incant", function() {deepEqual( Stem("incanti"), "incant");});
test("incanto -> incant", function() {deepEqual( Stem("incanto"), "incant");});
test("incapace -> incapac", function() {deepEqual( Stem("incapace"), "incapac");});
test("incapaci -> incapac", function() {deepEqual( Stem("incapaci"), "incapac");});
test("incappati -> incapp", function() {deepEqual( Stem("incappati"), "incapp");});
test("incappucciando -> incappucc", function() {deepEqual( Stem("incappucciando"), "incappucc");});
test("incappucciati -> incappucc", function() {deepEqual( Stem("incappucciati"), "incappucc");});
test("incappucciato -> incappucc", function() {deepEqual( Stem("incappucciato"), "incappucc");});
test("incaprettatò -> incaprettat", function() {deepEqual( Stem("incaprettatò"), "incaprettat");});
test("incapricciata -> incapricc", function() {deepEqual( Stem("incapricciata"), "incapricc");});
test("incaricandosi -> incaric", function() {deepEqual( Stem("incaricandosi"), "incaric");});
test("incaricarsi -> incaric", function() {deepEqual( Stem("incaricarsi"), "incaric");});
test("incaricati -> incaric", function() {deepEqual( Stem("incaricati"), "incaric");});
test("incaricato -> incaric", function() {deepEqual( Stem("incaricato"), "incaric");});
test("incarichi -> incar", function() {deepEqual( Stem("incarichi"), "incar");});
test("incarico -> incar", function() {deepEqual( Stem("incarico"), "incar");});
test("incarnate -> incarn", function() {deepEqual( Stem("incarnate"), "incarn");});
test("incarnazione -> incarn", function() {deepEqual( Stem("incarnazione"), "incarn");});
test("incassando -> incass", function() {deepEqual( Stem("incassando"), "incass");});
test("incassarne -> incass", function() {deepEqual( Stem("incassarne"), "incass");});
test("incassi -> incass", function() {deepEqual( Stem("incassi"), "incass");});
test("incasso -> incass", function() {deepEqual( Stem("incasso"), "incass");});
test("incastravano -> incastr", function() {deepEqual( Stem("incastravano"), "incastr");});
test("incatasciato -> incatasc", function() {deepEqual( Stem("incatasciato"), "incatasc");});
test("incatenano -> incaten", function() {deepEqual( Stem("incatenano"), "incaten");});
test("incatenato -> incaten", function() {deepEqual( Stem("incatenato"), "incaten");});
test("incauta -> inca", function() {deepEqual( Stem("incauta"), "inca");});
test("incavati -> incav", function() {deepEqual( Stem("incavati"), "incav");});
test("incendi -> incend", function() {deepEqual( Stem("incendi"), "incend");});
test("incendiarie -> incendiar", function() {deepEqual( Stem("incendiarie"), "incendiar");});
test("incendiata -> incend", function() {deepEqual( Stem("incendiata"), "incend");});
test("incendiati -> incend", function() {deepEqual( Stem("incendiati"), "incend");});
test("incendio -> incend", function() {deepEqual( Stem("incendio"), "incend");});
test("incensi -> incens", function() {deepEqual( Stem("incensi"), "incens");});
test("incentivi -> incent", function() {deepEqual( Stem("incentivi"), "incent");});
test("incentrata -> incentr", function() {deepEqual( Stem("incentrata"), "incentr");});
test("incentrato -> incentr", function() {deepEqual( Stem("incentrato"), "incentr");});
test("inceppare -> incepp", function() {deepEqual( Stem("inceppare"), "incepp");});
test("incerata -> incer", function() {deepEqual( Stem("incerata"), "incer");});
test("incerta -> incert", function() {deepEqual( Stem("incerta"), "incert");});
test("incerte -> incert", function() {deepEqual( Stem("incerte"), "incert");});
test("incertezza -> incertezz", function() {deepEqual( Stem("incertezza"), "incertezz");});
test("incertezze -> incertezz", function() {deepEqual( Stem("incertezze"), "incertezz");});
test("incerti -> incert", function() {deepEqual( Stem("incerti"), "incert");});
test("incerto -> incert", function() {deepEqual( Stem("incerto"), "incert");});
test("incessante -> incess", function() {deepEqual( Stem("incessante"), "incess");});
test("incessanti -> incess", function() {deepEqual( Stem("incessanti"), "incess");});
test("incetta -> incett", function() {deepEqual( Stem("incetta"), "incett");});
test("incettatori -> incett", function() {deepEqual( Stem("incettatori"), "incett");});
test("inchiesta -> inchiest", function() {deepEqual( Stem("inchiesta"), "inchiest");});
test("inchieste -> inchiest", function() {deepEqual( Stem("inchieste"), "inchiest");});
test("inchinandosi -> inchin", function() {deepEqual( Stem("inchinandosi"), "inchin");});
test("inchinarono -> inchin", function() {deepEqual( Stem("inchinarono"), "inchin");});
test("inchinato -> inchin", function() {deepEqual( Stem("inchinato"), "inchin");});
test("inchinatolo -> inchinatol", function() {deepEqual( Stem("inchinatolo"), "inchinatol");});
test("inchinavano -> inchin", function() {deepEqual( Stem("inchinavano"), "inchin");});
test("inchini -> inchin", function() {deepEqual( Stem("inchini"), "inchin");});
test("inchino -> inchin", function() {deepEqual( Stem("inchino"), "inchin");});
test("inchinò -> inchin", function() {deepEqual( Stem("inchinò"), "inchin");});
test("inchiodano -> inchiod", function() {deepEqual( Stem("inchiodano"), "inchiod");});
test("inchiodar -> inchiod", function() {deepEqual( Stem("inchiodar"), "inchiod");});
test("inchiodati -> inchiod", function() {deepEqual( Stem("inchiodati"), "inchiod");});
test("inchiodato -> inchiod", function() {deepEqual( Stem("inchiodato"), "inchiod");});
test("inchiodò -> inchiod", function() {deepEqual( Stem("inchiodò"), "inchiod");});
test("inchiona -> inchion", function() {deepEqual( Stem("inchiona"), "inchion");});
test("inchiostri -> inchiostr", function() {deepEqual( Stem("inchiostri"), "inchiostr");});
test("inchiostro -> inchiostr", function() {deepEqual( Stem("inchiostro"), "inchiostr");});
test("inciamparci -> inciamp", function() {deepEqual( Stem("inciamparci"), "inciamp");});
test("inciampava -> inciamp", function() {deepEqual( Stem("inciampava"), "inciamp");});
test("inciampi -> inciamp", function() {deepEqual( Stem("inciampi"), "inciamp");});
test("inciampo -> inciamp", function() {deepEqual( Stem("inciampo"), "inciamp");});
test("incidente -> incident", function() {deepEqual( Stem("incidente"), "incident");});
test("incidentemente -> incident", function() {deepEqual( Stem("incidentemente"), "incident");});
test("incidenti -> incident", function() {deepEqual( Stem("incidenti"), "incident");});
test("incidere -> incid", function() {deepEqual( Stem("incidere"), "incid");});
test("incinta -> incint", function() {deepEqual( Stem("incinta"), "incint");});
test("incintamento -> incint", function() {deepEqual( Stem("incintamento"), "incint");});
test("incirca -> incirc", function() {deepEqual( Stem("incirca"), "incirc");});
test("incise -> incis", function() {deepEqual( Stem("incise"), "incis");});
test("incisiva -> incis", function() {deepEqual( Stem("incisiva"), "incis");});
test("incita -> incit", function() {deepEqual( Stem("incita"), "incit");});
test("incitamenti -> incit", function() {deepEqual( Stem("incitamenti"), "incit");});
test("incitamento -> incit", function() {deepEqual( Stem("incitamento"), "incit");});
test("incitare -> incit", function() {deepEqual( Stem("incitare"), "incit");});
test("incivile -> incivil", function() {deepEqual( Stem("incivile"), "incivil");});
test("inclinando -> inclin", function() {deepEqual( Stem("inclinando"), "inclin");});
test("inclinano -> inclin", function() {deepEqual( Stem("inclinano"), "inclin");});
test("inclinar -> inclin", function() {deepEqual( Stem("inclinar"), "inclin");});
test("inclinata -> inclin", function() {deepEqual( Stem("inclinata"), "inclin");});
test("inclinati -> inclin", function() {deepEqual( Stem("inclinati"), "inclin");});
test("inclinato -> inclin", function() {deepEqual( Stem("inclinato"), "inclin");});
test("inclinazione -> inclin", function() {deepEqual( Stem("inclinazione"), "inclin");});
test("inclinazioni -> inclin", function() {deepEqual( Stem("inclinazioni"), "inclin");});
test("incline -> inclin", function() {deepEqual( Stem("incline"), "inclin");});
test("incliniamo -> inclin", function() {deepEqual( Stem("incliniamo"), "inclin");});
test("inclita -> inclit", function() {deepEqual( Stem("inclita"), "inclit");});
test("incluso -> inclus", function() {deepEqual( Stem("incluso"), "inclus");});
test("incocciati -> incocc", function() {deepEqual( Stem("incocciati"), "incocc");});
test("incognita -> incogn", function() {deepEqual( Stem("incognita"), "incogn");});
test("incollati -> incoll", function() {deepEqual( Stem("incollati"), "incoll");});
test("incollato -> incoll", function() {deepEqual( Stem("incollato"), "incoll");});
test("incolpati -> incolp", function() {deepEqual( Stem("incolpati"), "incolp");});
test("incolpava -> incolp", function() {deepEqual( Stem("incolpava"), "incolp");});
test("incolpevole -> incolpevol", function() {deepEqual( Stem("incolpevole"), "incolpevol");});
test("incolpevoli -> incolpevol", function() {deepEqual( Stem("incolpevoli"), "incolpevol");});
test("incolta -> incolt", function() {deepEqual( Stem("incolta"), "incolt");});
test("incolti -> incolt", function() {deepEqual( Stem("incolti"), "incolt");});
test("incolumità -> incolum", function() {deepEqual( Stem("incolumità"), "incolum");});
test("incombente -> incombent", function() {deepEqual( Stem("incombente"), "incombent");});
test("incombenza -> incombent", function() {deepEqual( Stem("incombenza"), "incombent");});
test("incominciare -> incominc", function() {deepEqual( Stem("incominciare"), "incominc");});
test("incominciata -> incominc", function() {deepEqual( Stem("incominciata"), "incominc");});
test("incominciati -> incominc", function() {deepEqual( Stem("incominciati"), "incominc");});
test("incominciava -> incominc", function() {deepEqual( Stem("incominciava"), "incominc");});
test("incomoda -> incomod", function() {deepEqual( Stem("incomoda"), "incomod");});
test("incomodare -> incomod", function() {deepEqual( Stem("incomodare"), "incomod");});
test("incomodarla -> incomod", function() {deepEqual( Stem("incomodarla"), "incomod");});
test("incomodarsi -> incomod", function() {deepEqual( Stem("incomodarsi"), "incomod");});
test("incomodasse -> incomod", function() {deepEqual( Stem("incomodasse"), "incomod");});
test("incomodata -> incomod", function() {deepEqual( Stem("incomodata"), "incomod");});
test("incomodate -> incomod", function() {deepEqual( Stem("incomodate"), "incomod");});
test("incomodato -> incomod", function() {deepEqual( Stem("incomodato"), "incomod");});
test("incomodi -> incomod", function() {deepEqual( Stem("incomodi"), "incomod");});
test("incomodiate -> incomod", function() {deepEqual( Stem("incomodiate"), "incomod");});
test("incomodo -> incomod", function() {deepEqual( Stem("incomodo"), "incomod");});
test("incomparabile -> incompar", function() {deepEqual( Stem("incomparabile"), "incompar");});
test("incompatibile -> incompat", function() {deepEqual( Stem("incompatibile"), "incompat");});
test("incompatibilità -> incompatibil", function() {deepEqual( Stem("incompatibilità"), "incompatibil");});
test("incompetente -> incompetent", function() {deepEqual( Stem("incompetente"), "incompetent");});
test("incomprensibile -> incomprens", function() {deepEqual( Stem("incomprensibile"), "incomprens");});
test("incomprensioni -> incomprension", function() {deepEqual( Stem("incomprensioni"), "incomprension");});
test("incomunicabile -> incomunic", function() {deepEqual( Stem("incomunicabile"), "incomunic");});
test("incomunicabili -> incomunic", function() {deepEqual( Stem("incomunicabili"), "incomunic");});
test("inconcludente -> inconcludent", function() {deepEqual( Stem("inconcludente"), "inconcludent");});
test("inconcludenti -> inconcludent", function() {deepEqual( Stem("inconcludenti"), "inconcludent");});
test("incondizionato -> incondizion", function() {deepEqual( Stem("incondizionato"), "incondizion");});
test("incongruenze -> incongruent", function() {deepEqual( Stem("incongruenze"), "incongruent");});
test("incongruità -> incongru", function() {deepEqual( Stem("incongruità"), "incongru");});
test("inconsiderato -> inconsider", function() {deepEqual( Stem("inconsiderato"), "inconsider");});
test("incontaminata -> incontamin", function() {deepEqual( Stem("incontaminata"), "incontamin");});
test("incontanente -> incontanent", function() {deepEqual( Stem("incontanente"), "incontanent");});
test("inconterà -> incont", function() {deepEqual( Stem("inconterà"), "incont");});
test("incontra -> incontr", function() {deepEqual( Stem("incontra"), "incontr");});
test("incontrando -> incontr", function() {deepEqual( Stem("incontrando"), "incontr");});
test("incontrandola -> incontr", function() {deepEqual( Stem("incontrandola"), "incontr");});
test("incontrandolo -> incontr", function() {deepEqual( Stem("incontrandolo"), "incontr");});
test("incontrano -> incontr", function() {deepEqual( Stem("incontrano"), "incontr");});
test("incontrar -> incontr", function() {deepEqual( Stem("incontrar"), "incontr");});
test("incontrare -> incontr", function() {deepEqual( Stem("incontrare"), "incontr");});
test("incontrarlo -> incontr", function() {deepEqual( Stem("incontrarlo"), "incontr");});
test("incontrarmi -> incontr", function() {deepEqual( Stem("incontrarmi"), "incontr");});
test("incontrarne -> incontr", function() {deepEqual( Stem("incontrarne"), "incontr");});
test("incontrarono -> incontr", function() {deepEqual( Stem("incontrarono"), "incontr");});
test("incontrarsi -> incontr", function() {deepEqual( Stem("incontrarsi"), "incontr");});
test("incontrasse -> incontr", function() {deepEqual( Stem("incontrasse"), "incontr");});
test("incontrassero -> incontr", function() {deepEqual( Stem("incontrassero"), "incontr");});
test("incontrassimo -> incontr", function() {deepEqual( Stem("incontrassimo"), "incontr");});
test("incontrastata -> incontrast", function() {deepEqual( Stem("incontrastata"), "incontrast");});
test("incontrate -> incontr", function() {deepEqual( Stem("incontrate"), "incontr");});
test("incontrati -> incontr", function() {deepEqual( Stem("incontrati"), "incontr");});
test("incontrato -> incontr", function() {deepEqual( Stem("incontrato"), "incontr");});
test("incontrava -> incontr", function() {deepEqual( Stem("incontrava"), "incontr");});
test("incontravamo -> incontr", function() {deepEqual( Stem("incontravamo"), "incontr");});
test("incontravano -> incontr", function() {deepEqual( Stem("incontravano"), "incontr");});
test("incontrerà -> incontr", function() {deepEqual( Stem("incontrerà"), "incontr");});
test("incontreranno -> incontr", function() {deepEqual( Stem("incontreranno"), "incontr");});
test("incontrerebbe -> incontr", function() {deepEqual( Stem("incontrerebbe"), "incontr");});
test("incontri -> incontr", function() {deepEqual( Stem("incontri"), "incontr");});
test("incontriamo -> incontr", function() {deepEqual( Stem("incontriamo"), "incontr");});
test("incontrino -> incontrin", function() {deepEqual( Stem("incontrino"), "incontrin");});
test("incontro -> incontr", function() {deepEqual( Stem("incontro"), "incontr");});
test("incontrò -> incontr", function() {deepEqual( Stem("incontrò"), "incontr");});
test("incontrollate -> incontroll", function() {deepEqual( Stem("incontrollate"), "incontroll");});
test("incontrollato -> incontroll", function() {deepEqual( Stem("incontrollato"), "incontroll");});
test("inconveniente -> inconvenient", function() {deepEqual( Stem("inconveniente"), "inconvenient");});
test("inconvenienti -> inconvenient", function() {deepEqual( Stem("inconvenienti"), "inconvenient");});
test("incoraggiamenti -> incoragg", function() {deepEqual( Stem("incoraggiamenti"), "incoragg");});
test("incoraggianti -> incoragg", function() {deepEqual( Stem("incoraggianti"), "incoragg");});
test("incoraggiare -> incoragg", function() {deepEqual( Stem("incoraggiare"), "incoragg");});
test("incoraggiasse -> incoragg", function() {deepEqual( Stem("incoraggiasse"), "incoragg");});
test("incoraggiti -> incoragg", function() {deepEqual( Stem("incoraggiti"), "incoragg");});
test("incoraggito -> incoragg", function() {deepEqual( Stem("incoraggito"), "incoragg");});
test("incorporazioni -> incorpor", function() {deepEqual( Stem("incorporazioni"), "incorpor");});
test("incorra -> incorr", function() {deepEqual( Stem("incorra"), "incorr");});
test("incorrere -> incorr", function() {deepEqual( Stem("incorrere"), "incorr");});
test("incorrerebbero -> incorr", function() {deepEqual( Stem("incorrerebbero"), "incorr");});
test("incostituzionalità -> incostituzional", function() {deepEqual( Stem("incostituzionalità"), "incostituzional");});
test("incredibile -> incred", function() {deepEqual( Stem("incredibile"), "incred");});
test("incredibilmente -> incredibil", function() {deepEqual( Stem("incredibilmente"), "incredibil");});
test("incredule -> incredul", function() {deepEqual( Stem("incredule"), "incredul");});
test("increduli -> incredul", function() {deepEqual( Stem("increduli"), "incredul");});
test("incrementando -> increment", function() {deepEqual( Stem("incrementando"), "increment");});
test("incrementi -> increment", function() {deepEqual( Stem("incrementi"), "increment");});
test("incremento -> increment", function() {deepEqual( Stem("incremento"), "increment");});
test("increspata -> incresp", function() {deepEqual( Stem("increspata"), "incresp");});
test("incriminata -> incrimin", function() {deepEqual( Stem("incriminata"), "incrimin");});
test("incriminazione -> incrimin", function() {deepEqual( Stem("incriminazione"), "incrimin");});
test("incrina -> incrin", function() {deepEqual( Stem("incrina"), "incrin");});
test("incrocian -> incrocian", function() {deepEqual( Stem("incrocian"), "incrocian");});
test("incrociando -> incroc", function() {deepEqual( Stem("incrociando"), "incroc");});
test("incrociare -> incroc", function() {deepEqual( Stem("incrociare"), "incroc");});
test("incrociate -> incroc", function() {deepEqual( Stem("incrociate"), "incroc");});
test("incrociato -> incroc", function() {deepEqual( Stem("incrociato"), "incroc");});
test("incrociatore -> incroc", function() {deepEqual( Stem("incrociatore"), "incroc");});
test("incrocicchiato -> incrocicc", function() {deepEqual( Stem("incrocicchiato"), "incrocicc");});
test("incrocio -> incroc", function() {deepEqual( Stem("incrocio"), "incroc");});
test("incrociò -> incroc", function() {deepEqual( Stem("incrociò"), "incroc");});
test("incrollabile -> incroll", function() {deepEqual( Stem("incrollabile"), "incroll");});
test("incubi -> incub", function() {deepEqual( Stem("incubi"), "incub");});
test("incubo -> incub", function() {deepEqual( Stem("incubo"), "incub");});
test("incudine -> incudin", function() {deepEqual( Stem("incudine"), "incudin");});
test("inculcandogliela -> inculc", function() {deepEqual( Stem("inculcandogliela"), "inculc");});
test("incunea -> incune", function() {deepEqual( Stem("incunea"), "incune");});
test("incurabile -> incur", function() {deepEqual( Stem("incurabile"), "incur");});
test("incursione -> incursion", function() {deepEqual( Stem("incursione"), "incursion");});
test("incursioni -> incursion", function() {deepEqual( Stem("incursioni"), "incursion");});
test("incursori -> incursor", function() {deepEqual( Stem("incursori"), "incursor");});
test("incurvato -> incurv", function() {deepEqual( Stem("incurvato"), "incurv");});
test("incusso -> incuss", function() {deepEqual( Stem("incusso"), "incuss");});
test("incutere -> incut", function() {deepEqual( Stem("incutere"), "incut");});
test("incutessero -> incut", function() {deepEqual( Stem("incutessero"), "incut");});
test("ind -> ind", function() {deepEqual( Stem("ind"), "ind");});
test("indaga -> indag", function() {deepEqual( Stem("indaga"), "indag");});
test("indagando -> indag", function() {deepEqual( Stem("indagando"), "indag");});
test("indagare -> indag", function() {deepEqual( Stem("indagare"), "indag");});
test("indagate -> indag", function() {deepEqual( Stem("indagate"), "indag");});
test("indagati -> indag", function() {deepEqual( Stem("indagati"), "indag");});
test("indagato -> indag", function() {deepEqual( Stem("indagato"), "indag");});
test("indagine -> indagin", function() {deepEqual( Stem("indagine"), "indagin");});
test("indagini -> indagin", function() {deepEqual( Stem("indagini"), "indagin");});
test("indarno -> indarn", function() {deepEqual( Stem("indarno"), "indarn");});
test("indebita -> indeb", function() {deepEqual( Stem("indebita"), "indeb");});
test("indebolirsi -> indebol", function() {deepEqual( Stem("indebolirsi"), "indebol");});
test("indebolita -> indebol", function() {deepEqual( Stem("indebolita"), "indebol");});
test("indecente -> indecent", function() {deepEqual( Stem("indecente"), "indecent");});
test("indecentè -> indecent", function() {deepEqual( Stem("indecentè"), "indecent");});
test("indecenti -> indecent", function() {deepEqual( Stem("indecenti"), "indecent");});
test("indecisione -> indecision", function() {deepEqual( Stem("indecisione"), "indecision");});
test("indecorosa -> indecor", function() {deepEqual( Stem("indecorosa"), "indecor");});
test("indefinibile -> indefin", function() {deepEqual( Stem("indefinibile"), "indefin");});
test("indefinite -> indefin", function() {deepEqual( Stem("indefinite"), "indefin");});
test("indefinito -> indefin", function() {deepEqual( Stem("indefinito"), "indefin");});
test("indegna -> indegn", function() {deepEqual( Stem("indegna"), "indegn");});
test("indegnamente -> indegn", function() {deepEqual( Stem("indegnamente"), "indegn");});
test("indegnazione -> indegn", function() {deepEqual( Stem("indegnazione"), "indegn");});
test("indegne -> indegn", function() {deepEqual( Stem("indegne"), "indegn");});
test("indegni -> indegn", function() {deepEqual( Stem("indegni"), "indegn");});
test("indegno -> indegn", function() {deepEqual( Stem("indegno"), "indegn");});
test("indemoniato -> indemon", function() {deepEqual( Stem("indemoniato"), "indemon");});
test("indenne -> indenn", function() {deepEqual( Stem("indenne"), "indenn");});
test("indennità -> indenn", function() {deepEqual( Stem("indennità"), "indenn");});
test("indennizzi -> indennizz", function() {deepEqual( Stem("indennizzi"), "indennizz");});
test("indescrivibile -> indescriv", function() {deepEqual( Stem("indescrivibile"), "indescriv");});
test("indeterminata -> indetermin", function() {deepEqual( Stem("indeterminata"), "indetermin");});
test("indeterminatamente -> indeterminat", function() {deepEqual( Stem("indeterminatamente"), "indeterminat");});
test("indeterminato -> indetermin", function() {deepEqual( Stem("indeterminato"), "indetermin");});
test("indetta -> indett", function() {deepEqual( Stem("indetta"), "indett");});
test("indette -> indett", function() {deepEqual( Stem("indette"), "indett");});
test("indetto -> indett", function() {deepEqual( Stem("indetto"), "indett");});
test("indi -> indi", function() {deepEqual( Stem("indi"), "indi");});
test("india -> indi", function() {deepEqual( Stem("india"), "indi");});
test("indià -> indi", function() {deepEqual( Stem("indià"), "indi");});
test("indian -> indian", function() {deepEqual( Stem("indian"), "indian");});
test("indiana -> indian", function() {deepEqual( Stem("indiana"), "indian");});
test("indiane -> indian", function() {deepEqual( Stem("indiane"), "indian");});
test("indiani -> indian", function() {deepEqual( Stem("indiani"), "indian");});
test("indiano -> indi", function() {deepEqual( Stem("indiano"), "indi");});
test("indiavolati -> indiavol", function() {deepEqual( Stem("indiavolati"), "indiavol");});
test("indica -> indic", function() {deepEqual( Stem("indica"), "indic");});
test("indicando -> indic", function() {deepEqual( Stem("indicando"), "indic");});
test("indicandogli -> indic", function() {deepEqual( Stem("indicandogli"), "indic");});
test("indicano -> indic", function() {deepEqual( Stem("indicano"), "indic");});
test("indicar -> indic", function() {deepEqual( Stem("indicar"), "indic");});
test("indicare -> indic", function() {deepEqual( Stem("indicare"), "indic");});
test("indicarla -> indic", function() {deepEqual( Stem("indicarla"), "indic");});
test("indicarne -> indic", function() {deepEqual( Stem("indicarne"), "indic");});
test("indicarono -> indic", function() {deepEqual( Stem("indicarono"), "indic");});
test("indicasse -> indic", function() {deepEqual( Stem("indicasse"), "indic");});
test("indicata -> indic", function() {deepEqual( Stem("indicata"), "indic");});
test("indicate -> indic", function() {deepEqual( Stem("indicate"), "indic");});
test("indicati -> indic", function() {deepEqual( Stem("indicati"), "indic");});
test("indicative -> indic", function() {deepEqual( Stem("indicative"), "indic");});
test("indicativo -> indic", function() {deepEqual( Stem("indicativo"), "indic");});
test("indicato -> indic", function() {deepEqual( Stem("indicato"), "indic");});
test("indicatore -> indic", function() {deepEqual( Stem("indicatore"), "indic");});
test("indicatori -> indic", function() {deepEqual( Stem("indicatori"), "indic");});
test("indicators -> indicators", function() {deepEqual( Stem("indicators"), "indicators");});
test("indicava -> indic", function() {deepEqual( Stem("indicava"), "indic");});
test("indicavano -> indic", function() {deepEqual( Stem("indicavano"), "indic");});
test("indicazione -> indic", function() {deepEqual( Stem("indicazione"), "indic");});
test("indicazioni -> indic", function() {deepEqual( Stem("indicazioni"), "indic");});
test("indice -> indic", function() {deepEqual( Stem("indice"), "indic");});
test("indicherebbero -> indic", function() {deepEqual( Stem("indicherebbero"), "indic");});
test("indici -> indic", function() {deepEqual( Stem("indici"), "indic");});
test("indicibile -> indic", function() {deepEqual( Stem("indicibile"), "indic");});
test("indicio -> indic", function() {deepEqual( Stem("indicio"), "indic");});
test("indicizzati -> indicizz", function() {deepEqual( Stem("indicizzati"), "indicizz");});
test("indicò -> indic", function() {deepEqual( Stem("indicò"), "indic");});
test("indietro -> indietr", function() {deepEqual( Stem("indietro"), "indietr");});
test("indifferente -> indifferent", function() {deepEqual( Stem("indifferente"), "indifferent");});
test("indifferenti -> indifferent", function() {deepEqual( Stem("indifferenti"), "indifferent");});
test("indifferenza -> indifferent", function() {deepEqual( Stem("indifferenza"), "indifferent");});
test("indigena -> indigen", function() {deepEqual( Stem("indigena"), "indigen");});
test("indigene -> indigen", function() {deepEqual( Stem("indigene"), "indigen");});
test("indigeni -> indigen", function() {deepEqual( Stem("indigeni"), "indigen");});
test("indigeno -> indigen", function() {deepEqual( Stem("indigeno"), "indigen");});
test("indigenti -> indigent", function() {deepEqual( Stem("indigenti"), "indigent");});
test("indigenza -> indigent", function() {deepEqual( Stem("indigenza"), "indigent");});
test("indignata -> indign", function() {deepEqual( Stem("indignata"), "indign");});
test("indignati -> indign", function() {deepEqual( Stem("indignati"), "indign");});
test("indignazione -> indign", function() {deepEqual( Stem("indignazione"), "indign");});
test("indimenticabile -> indimentic", function() {deepEqual( Stem("indimenticabile"), "indimentic");});
test("indimenticabili -> indimentic", function() {deepEqual( Stem("indimenticabili"), "indimentic");});
test("indios -> indios", function() {deepEqual( Stem("indios"), "indios");});
test("indipendenstista -> indipendenst", function() {deepEqual( Stem("indipendenstista"), "indipendenst");});
test("indipendente -> indipendent", function() {deepEqual( Stem("indipendente"), "indipendent");});
test("indipendentemente -> indipendent", function() {deepEqual( Stem("indipendentemente"), "indipendent");});
test("indipendenti -> indipendent", function() {deepEqual( Stem("indipendenti"), "indipendent");});
test("indipendentismo -> indipendent", function() {deepEqual( Stem("indipendentismo"), "indipendent");});
test("indipendentista -> indipendent", function() {deepEqual( Stem("indipendentista"), "indipendent");});
test("indipendentistà -> indipendent", function() {deepEqual( Stem("indipendentistà"), "indipendent");});
test("indipendentisti -> indipendent", function() {deepEqual( Stem("indipendentisti"), "indipendent");});
test("indipendentistì -> indipendent", function() {deepEqual( Stem("indipendentistì"), "indipendent");});
test("indipendenza -> indipendent", function() {deepEqual( Stem("indipendenza"), "indipendent");});
test("indipendetista -> indipendet", function() {deepEqual( Stem("indipendetista"), "indipendet");});
test("indiretta -> indirett", function() {deepEqual( Stem("indiretta"), "indirett");});
test("indirettamente -> indirett", function() {deepEqual( Stem("indirettamente"), "indirett");});
test("indirette -> indirett", function() {deepEqual( Stem("indirette"), "indirett");});
test("indirizzare -> indirizz", function() {deepEqual( Stem("indirizzare"), "indirizz");});
test("indirizzata -> indirizz", function() {deepEqual( Stem("indirizzata"), "indirizz");});
test("indirizzate -> indirizz", function() {deepEqual( Stem("indirizzate"), "indirizz");});
test("indirizzati -> indirizz", function() {deepEqual( Stem("indirizzati"), "indirizz");});
test("indirizzato -> indirizz", function() {deepEqual( Stem("indirizzato"), "indirizz");});
test("indirizzava -> indirizz", function() {deepEqual( Stem("indirizzava"), "indirizz");});
test("indirizzi -> indirizz", function() {deepEqual( Stem("indirizzi"), "indirizz");});
test("indirizzo -> indirizz", function() {deepEqual( Stem("indirizzo"), "indirizz");});
test("indisciplinata -> indisciplin", function() {deepEqual( Stem("indisciplinata"), "indisciplin");});
test("indiscreta -> indiscret", function() {deepEqual( Stem("indiscreta"), "indiscret");});
test("indiscreti -> indiscret", function() {deepEqual( Stem("indiscreti"), "indiscret");});
test("indiscrezione -> indiscrezion", function() {deepEqual( Stem("indiscrezione"), "indiscrezion");});
test("indiscrezioni -> indiscrezion", function() {deepEqual( Stem("indiscrezioni"), "indiscrezion");});
test("indiscriminati -> indiscrimin", function() {deepEqual( Stem("indiscriminati"), "indiscrimin");});
test("indiscusso -> indiscuss", function() {deepEqual( Stem("indiscusso"), "indiscuss");});
test("indispensabile -> indispens", function() {deepEqual( Stem("indispensabile"), "indispens");});
test("indispensabili -> indispens", function() {deepEqual( Stem("indispensabili"), "indispens");});
test("indispettita -> indispett", function() {deepEqual( Stem("indispettita"), "indispett");});
test("indispettito -> indispett", function() {deepEqual( Stem("indispettito"), "indispett");});
test("indispettiva -> indispett", function() {deepEqual( Stem("indispettiva"), "indispett");});
test("indisponibile -> indispon", function() {deepEqual( Stem("indisponibile"), "indispon");});
test("indisponibili -> indispon", function() {deepEqual( Stem("indisponibili"), "indispon");});
test("indisponibilità -> indisponibil", function() {deepEqual( Stem("indisponibilità"), "indisponibil");});
test("indistintamente -> indistint", function() {deepEqual( Stem("indistintamente"), "indistint");});
test("indistinto -> indistint", function() {deepEqual( Stem("indistinto"), "indistint");});
test("individua -> individu", function() {deepEqual( Stem("individua"), "individu");});
test("individuale -> individual", function() {deepEqual( Stem("individuale"), "individual");});
test("individuali -> individual", function() {deepEqual( Stem("individuali"), "individual");});
test("individualità -> individual", function() {deepEqual( Stem("individualità"), "individual");});
test("individualmente -> individual", function() {deepEqual( Stem("individualmente"), "individual");});
test("individuando -> individu", function() {deepEqual( Stem("individuando"), "individu");});
test("individuano -> individu", function() {deepEqual( Stem("individuano"), "individu");});
test("individuare -> individu", function() {deepEqual( Stem("individuare"), "individu");});
test("individuata -> individu", function() {deepEqual( Stem("individuata"), "individu");});
test("individuate -> individu", function() {deepEqual( Stem("individuate"), "individu");});
test("individuati -> individu", function() {deepEqual( Stem("individuati"), "individu");});
test("individuato -> individu", function() {deepEqual( Stem("individuato"), "individu");});
test("individuazione -> individu", function() {deepEqual( Stem("individuazione"), "individu");});
test("individui -> individu", function() {deepEqual( Stem("individui"), "individu");});
test("individuo -> individu", function() {deepEqual( Stem("individuo"), "individu");});
test("indizi -> indiz", function() {deepEqual( Stem("indizi"), "indiz");});
test("indizio -> indiz", function() {deepEqual( Stem("indizio"), "indiz");});
test("indizj -> indizj", function() {deepEqual( Stem("indizj"), "indizj");});
test("indocile -> indocil", function() {deepEqual( Stem("indocile"), "indocil");});
test("indocilità -> indocil", function() {deepEqual( Stem("indocilità"), "indocil");});
test("indole -> indol", function() {deepEqual( Stem("indole"), "indol");});
test("indolenziti -> indolenz", function() {deepEqual( Stem("indolenziti"), "indolenz");});
test("indomabile -> indom", function() {deepEqual( Stem("indomabile"), "indom");});
test("indomani -> indoman", function() {deepEqual( Stem("indomani"), "indoman");});
test("indonesia -> indones", function() {deepEqual( Stem("indonesia"), "indones");});
test("indoor -> indoor", function() {deepEqual( Stem("indoor"), "indoor");});
test("indossando -> indoss", function() {deepEqual( Stem("indossando"), "indoss");});
test("indossato -> indoss", function() {deepEqual( Stem("indossato"), "indoss");});
test("indossava -> indoss", function() {deepEqual( Stem("indossava"), "indoss");});
test("indossavano -> indoss", function() {deepEqual( Stem("indossavano"), "indoss");});
test("indosso -> indoss", function() {deepEqual( Stem("indosso"), "indoss");});
test("indotto -> indott", function() {deepEqual( Stem("indotto"), "indott");});
test("indovinala -> indovinal", function() {deepEqual( Stem("indovinala"), "indovinal");});
test("indovinar -> indovin", function() {deepEqual( Stem("indovinar"), "indovin");});
test("indovinare -> indovin", function() {deepEqual( Stem("indovinare"), "indovin");});
test("indovinarla -> indovin", function() {deepEqual( Stem("indovinarla"), "indovin");});
test("indovinarsi -> indovin", function() {deepEqual( Stem("indovinarsi"), "indovin");});
test("indovinasse -> indovin", function() {deepEqual( Stem("indovinasse"), "indovin");});
test("indovinate -> indovin", function() {deepEqual( Stem("indovinate"), "indovin");});
test("indovinato -> indovin", function() {deepEqual( Stem("indovinato"), "indovin");});
test("indovinava -> indovin", function() {deepEqual( Stem("indovinava"), "indovin");});
test("indovinerà -> indovin", function() {deepEqual( Stem("indovinerà"), "indovin");});
test("indovinò -> indovin", function() {deepEqual( Stem("indovinò"), "indovin");});
test("indro -> indro", function() {deepEqual( Stem("indro"), "indro");});
test("indù -> indù", function() {deepEqual( Stem("indù"), "indù");});
test("indubbiamente -> indubb", function() {deepEqual( Stem("indubbiamente"), "indubb");});
test("indubbio -> indubb", function() {deepEqual( Stem("indubbio"), "indubb");});
test("indubitabilmente -> indubitabil", function() {deepEqual( Stem("indubitabilmente"), "indubitabil");});
test("induce -> induc", function() {deepEqual( Stem("induce"), "induc");});
test("induceva -> induc", function() {deepEqual( Stem("induceva"), "induc");});
test("inducono -> induc", function() {deepEqual( Stem("inducono"), "induc");});
test("indugi -> indug", function() {deepEqual( Stem("indugi"), "indug");});
test("indugiare -> indug", function() {deepEqual( Stem("indugiare"), "indug");});
test("indugiasse -> indug", function() {deepEqual( Stem("indugiasse"), "indug");});
test("indugiava -> indug", function() {deepEqual( Stem("indugiava"), "indug");});
test("indulgente -> indulgent", function() {deepEqual( Stem("indulgente"), "indulgent");});
test("indulto -> indult", function() {deepEqual( Stem("indulto"), "indult");});
test("indumenti -> indument", function() {deepEqual( Stem("indumenti"), "indument");});
test("indur -> indur", function() {deepEqual( Stem("indur"), "indur");});
test("indurati -> indur", function() {deepEqual( Stem("indurati"), "indur");});
test("indurato -> indur", function() {deepEqual( Stem("indurato"), "indur");});
test("indurito -> indur", function() {deepEqual( Stem("indurito"), "indur");});
test("indurla -> indurl", function() {deepEqual( Stem("indurla"), "indurl");});
test("indurrà -> indurr", function() {deepEqual( Stem("indurrà"), "indurr");});
test("indurre -> indurr", function() {deepEqual( Stem("indurre"), "indurr");});
test("industr -> industr", function() {deepEqual( Stem("industr"), "industr");});
test("industria -> industr", function() {deepEqual( Stem("industria"), "industr");});
test("industriale -> industrial", function() {deepEqual( Stem("industriale"), "industrial");});
test("industriali -> industrial", function() {deepEqual( Stem("industriali"), "industrial");});
test("industrializzate -> industrializz", function() {deepEqual( Stem("industrializzate"), "industrializz");});
test("industrializzati -> industrializz", function() {deepEqual( Stem("industrializzati"), "industrializz");});
test("industrializzato -> industrializz", function() {deepEqual( Stem("industrializzato"), "industrializz");});
test("industriarsi -> industr", function() {deepEqual( Stem("industriarsi"), "industr");});
test("industrie -> industr", function() {deepEqual( Stem("industrie"), "industr");});
test("industries -> industries", function() {deepEqual( Stem("industries"), "industries");});
test("induttivo -> indutt", function() {deepEqual( Stem("induttivo"), "indutt");});
test("induzione -> induzion", function() {deepEqual( Stem("induzione"), "induzion");});
test("induzioni -> induzion", function() {deepEqual( Stem("induzioni"), "induzion");});
test("inebriato -> inebr", function() {deepEqual( Stem("inebriato"), "inebr");});
test("ineccepibile -> ineccep", function() {deepEqual( Stem("ineccepibile"), "ineccep");});
test("inedita -> ined", function() {deepEqual( Stem("inedita"), "ined");});
test("inedite -> ined", function() {deepEqual( Stem("inedite"), "ined");});
test("inediti -> ined", function() {deepEqual( Stem("inediti"), "ined");});
test("inedito -> ined", function() {deepEqual( Stem("inedito"), "ined");});
test("ineffabile -> ineff", function() {deepEqual( Stem("ineffabile"), "ineff");});
test("inefficaci -> inefficac", function() {deepEqual( Stem("inefficaci"), "inefficac");});
test("inefficacia -> inefficac", function() {deepEqual( Stem("inefficacia"), "inefficac");});
test("inefficienza -> inefficient", function() {deepEqual( Stem("inefficienza"), "inefficient");});
test("ineguali -> inegual", function() {deepEqual( Stem("ineguali"), "inegual");});
test("ineludibile -> inelud", function() {deepEqual( Stem("ineludibile"), "inelud");});
test("ineludibili -> inelud", function() {deepEqual( Stem("ineludibili"), "inelud");});
test("ineluttabile -> inelutt", function() {deepEqual( Stem("ineluttabile"), "inelutt");});
test("ineluttabilità -> inelutt", function() {deepEqual( Stem("ineluttabilità"), "inelutt");});
test("inequivoco -> inequivoc", function() {deepEqual( Stem("inequivoco"), "inequivoc");});
test("inermi -> inerm", function() {deepEqual( Stem("inermi"), "inerm");});
test("inerte -> inert", function() {deepEqual( Stem("inerte"), "inert");});
test("inerzia -> inerz", function() {deepEqual( Stem("inerzia"), "inerz");});
test("inesatta -> inesatt", function() {deepEqual( Stem("inesatta"), "inesatt");});
test("inesausta -> inesaust", function() {deepEqual( Stem("inesausta"), "inesaust");});
test("ineseguiti -> inesegu", function() {deepEqual( Stem("ineseguiti"), "inesegu");});
test("inesigibili -> inesig", function() {deepEqual( Stem("inesigibili"), "inesig");});
test("inesistenti -> inesistent", function() {deepEqual( Stem("inesistenti"), "inesistent");});
test("inesorabilmente -> inesorabil", function() {deepEqual( Stem("inesorabilmente"), "inesorabil");});
test("inesperta -> inespert", function() {deepEqual( Stem("inesperta"), "inespert");});
test("inesperte -> inespert", function() {deepEqual( Stem("inesperte"), "inespert");});
test("inesperto -> inespert", function() {deepEqual( Stem("inesperto"), "inespert");});
test("inesplicabile -> inesplic", function() {deepEqual( Stem("inesplicabile"), "inesplic");});
test("inesplicabili -> inesplic", function() {deepEqual( Stem("inesplicabili"), "inesplic");});
test("inesplorato -> inesplor", function() {deepEqual( Stem("inesplorato"), "inesplor");});
test("inespugnabile -> inespugn", function() {deepEqual( Stem("inespugnabile"), "inespugn");});
test("inevitabile -> inevit", function() {deepEqual( Stem("inevitabile"), "inevit");});
test("inevitabili -> inevit", function() {deepEqual( Stem("inevitabili"), "inevit");});
test("inevitabilmente -> inevitabil", function() {deepEqual( Stem("inevitabilmente"), "inevitabil");});
test("inf -> inf", function() {deepEqual( Stem("inf"), "inf");});
test("infallibilmente -> infallibil", function() {deepEqual( Stem("infallibilmente"), "infallibil");});
test("infame -> infam", function() {deepEqual( Stem("infame"), "infam");});
test("infami -> infam", function() {deepEqual( Stem("infami"), "infam");});
test("infamia -> infam", function() {deepEqual( Stem("infamia"), "infam");});
test("infamità -> infam", function() {deepEqual( Stem("infamità"), "infam");});
test("infangare -> infang", function() {deepEqual( Stem("infangare"), "infang");});
test("infangata -> infang", function() {deepEqual( Stem("infangata"), "infang");});
test("infangato -> infang", function() {deepEqual( Stem("infangato"), "infang");});
test("infante -> infant", function() {deepEqual( Stem("infante"), "infant");});
test("infanti -> infant", function() {deepEqual( Stem("infanti"), "infant");});
test("infantile -> infantil", function() {deepEqual( Stem("infantile"), "infantil");});
test("infanzia -> infanz", function() {deepEqual( Stem("infanzia"), "infanz");});
test("infarinarne -> infarin", function() {deepEqual( Stem("infarinarne"), "infarin");});
test("infarinati -> infarin", function() {deepEqual( Stem("infarinati"), "infarin");});
test("infarto -> infart", function() {deepEqual( Stem("infarto"), "infart");});
test("infastidir -> infastid", function() {deepEqual( Stem("infastidir"), "infastid");});
test("infastidito -> infastid", function() {deepEqual( Stem("infastidito"), "infastid");});
test("infaticabile -> infatic", function() {deepEqual( Stem("infaticabile"), "infatic");});
test("infatti -> infatt", function() {deepEqual( Stem("infatti"), "infatt");});
test("infauste -> infaust", function() {deepEqual( Stem("infauste"), "infaust");});
test("infausto -> infaust", function() {deepEqual( Stem("infausto"), "infaust");});
test("infedeltà -> infedelt", function() {deepEqual( Stem("infedeltà"), "infedelt");});
test("infelice -> infel", function() {deepEqual( Stem("infelice"), "infel");});
test("infelicemente -> infelic", function() {deepEqual( Stem("infelicemente"), "infelic");});
test("infelici -> infel", function() {deepEqual( Stem("infelici"), "infel");});
test("infelicissima -> infelicissim", function() {deepEqual( Stem("infelicissima"), "infelicissim");});
test("inferiore -> inferior", function() {deepEqual( Stem("inferiore"), "inferior");});
test("inferiori -> inferior", function() {deepEqual( Stem("inferiori"), "inferior");});
test("infermeria -> infermer", function() {deepEqual( Stem("infermeria"), "infermer");});
test("infermi -> inferm", function() {deepEqual( Stem("infermi"), "inferm");});
test("infermiera -> infermier", function() {deepEqual( Stem("infermiera"), "infermier");});
test("infermiere -> inferm", function() {deepEqual( Stem("infermiere"), "inferm");});
test("infermieri -> infermier", function() {deepEqual( Stem("infermieri"), "infermier");});
test("infermità -> inferm", function() {deepEqual( Stem("infermità"), "inferm");});
test("infermo -> inferm", function() {deepEqual( Stem("infermo"), "inferm");});
test("infernale -> infernal", function() {deepEqual( Stem("infernale"), "infernal");});
test("inferno -> infern", function() {deepEqual( Stem("inferno"), "infern");});
test("inferriata -> inferr", function() {deepEqual( Stem("inferriata"), "inferr");});
test("inferriate -> inferr", function() {deepEqual( Stem("inferriate"), "inferr");});
test("inferta -> infert", function() {deepEqual( Stem("inferta"), "infert");});
test("infervorati -> infervor", function() {deepEqual( Stem("infervorati"), "infervor");});
test("infervorato -> infervor", function() {deepEqual( Stem("infervorato"), "infervor");});
test("infestano -> infest", function() {deepEqual( Stem("infestano"), "infest");});
test("infestar -> infest", function() {deepEqual( Stem("infestar"), "infest");});
test("infetta -> infett", function() {deepEqual( Stem("infetta"), "infett");});
test("infettamento -> infett", function() {deepEqual( Stem("infettamento"), "infett");});
test("infettati -> infett", function() {deepEqual( Stem("infettati"), "infett");});
test("infettato -> infett", function() {deepEqual( Stem("infettato"), "infett");});
test("infette -> infett", function() {deepEqual( Stem("infette"), "infett");});
test("infetti -> infett", function() {deepEqual( Stem("infetti"), "infett");});
test("infezione -> infezion", function() {deepEqual( Stem("infezione"), "infezion");});
test("infiammata -> infiamm", function() {deepEqual( Stem("infiammata"), "infiamm");});
test("infiammati -> infiamm", function() {deepEqual( Stem("infiammati"), "infiamm");});
test("infiammato -> infiamm", function() {deepEqual( Stem("infiammato"), "infiamm");});
test("infiammavano -> infiamm", function() {deepEqual( Stem("infiammavano"), "infiamm");});
test("inficiate -> infic", function() {deepEqual( Stem("inficiate"), "infic");});
test("infido -> infid", function() {deepEqual( Stem("infido"), "infid");});
test("infierire -> infier", function() {deepEqual( Stem("infierire"), "infier");});
test("infilata -> infil", function() {deepEqual( Stem("infilata"), "infil");});
test("infilato -> infil", function() {deepEqual( Stem("infilato"), "infil");});
test("infilavo -> infil", function() {deepEqual( Stem("infilavo"), "infil");});
test("infilzan -> infilzan", function() {deepEqual( Stem("infilzan"), "infilzan");});
test("infilzata -> infilz", function() {deepEqual( Stem("infilzata"), "infilz");});
test("infimi -> infim", function() {deepEqual( Stem("infimi"), "infim");});
test("infimo -> infim", function() {deepEqual( Stem("infimo"), "infim");});
test("infine -> infin", function() {deepEqual( Stem("infine"), "infin");});
test("infinita -> infin", function() {deepEqual( Stem("infinita"), "infin");});
test("infinite -> infin", function() {deepEqual( Stem("infinite"), "infin");});
test("infinocchiar -> infinocc", function() {deepEqual( Stem("infinocchiar"), "infinocc");});
test("infinocchiata -> infinocc", function() {deepEqual( Stem("infinocchiata"), "infinocc");});
test("inflazione -> inflazion", function() {deepEqual( Stem("inflazione"), "inflazion");});
test("inflazionistica -> inflazionist", function() {deepEqual( Stem("inflazionistica"), "inflazionist");});
test("inflazionistiche -> inflazionist", function() {deepEqual( Stem("inflazionistiche"), "inflazionist");});
test("inflazionistico -> inflazionist", function() {deepEqual( Stem("inflazionistico"), "inflazionist");});
test("inflessibile -> infless", function() {deepEqual( Stem("inflessibile"), "infless");});
test("infliggendo -> infligg", function() {deepEqual( Stem("infliggendo"), "infligg");});
test("infliggere -> infligg", function() {deepEqual( Stem("infliggere"), "infligg");});
test("inflitto -> inflitt", function() {deepEqual( Stem("inflitto"), "inflitt");});
test("influenza -> influenz", function() {deepEqual( Stem("influenza"), "influenz");});
test("influenzale -> influenzal", function() {deepEqual( Stem("influenzale"), "influenzal");});
test("influenzate -> influenz", function() {deepEqual( Stem("influenzate"), "influenz");});
test("influenzato -> influenz", function() {deepEqual( Stem("influenzato"), "influenz");});
test("influenze -> influenz", function() {deepEqual( Stem("influenze"), "influenz");});
test("influito -> influ", function() {deepEqual( Stem("influito"), "influ");});
test("influssi -> influss", function() {deepEqual( Stem("influssi"), "influss");});
test("influsso -> influss", function() {deepEqual( Stem("influsso"), "influss");});
test("infocata -> infoc", function() {deepEqual( Stem("infocata"), "infoc");});
test("infocati -> infoc", function() {deepEqual( Stem("infocati"), "infoc");});
test("infocato -> infoc", function() {deepEqual( Stem("infocato"), "infoc");});
test("infoltito -> infolt", function() {deepEqual( Stem("infoltito"), "infolt");});
test("infomazione -> infom", function() {deepEqual( Stem("infomazione"), "infom");});
test("infondate -> infond", function() {deepEqual( Stem("infondate"), "infond");});
test("infondato -> infond", function() {deepEqual( Stem("infondato"), "infond");});
test("infonde -> infond", function() {deepEqual( Stem("infonde"), "infond");});
test("infondere -> infond", function() {deepEqual( Stem("infondere"), "infond");});
test("infondergli -> infond", function() {deepEqual( Stem("infondergli"), "infond");});
test("inforamzioni -> inforamzion", function() {deepEqual( Stem("inforamzioni"), "inforamzion");});
test("informa -> inform", function() {deepEqual( Stem("informa"), "inform");});
test("informale -> informal", function() {deepEqual( Stem("informale"), "informal");});
test("informali -> informal", function() {deepEqual( Stem("informali"), "informal");});
test("informando -> inform", function() {deepEqual( Stem("informando"), "inform");});
test("informar -> inform", function() {deepEqual( Stem("informar"), "inform");});
test("informare -> inform", function() {deepEqual( Stem("informare"), "inform");});
test("informarlo -> inform", function() {deepEqual( Stem("informarlo"), "inform");});
test("informaron -> informaron", function() {deepEqual( Stem("informaron"), "informaron");});
test("informarono -> inform", function() {deepEqual( Stem("informarono"), "inform");});
test("informarsene -> inform", function() {deepEqual( Stem("informarsene"), "inform");});
test("informarsi -> inform", function() {deepEqual( Stem("informarsi"), "inform");});
test("informasse -> inform", function() {deepEqual( Stem("informasse"), "inform");});
test("informata -> inform", function() {deepEqual( Stem("informata"), "inform");});
test("informati -> inform", function() {deepEqual( Stem("informati"), "inform");});
test("informatica -> informat", function() {deepEqual( Stem("informatica"), "informat");});
test("informatici -> informat", function() {deepEqual( Stem("informatici"), "informat");});
test("informatico -> informat", function() {deepEqual( Stem("informatico"), "informat");});
test("informationes -> informationes", function() {deepEqual( Stem("informationes"), "informationes");});
test("informativi -> inform", function() {deepEqual( Stem("informativi"), "inform");});
test("informativo -> inform", function() {deepEqual( Stem("informativo"), "inform");});
test("informato -> inform", function() {deepEqual( Stem("informato"), "inform");});
test("informatore -> inform", function() {deepEqual( Stem("informatore"), "inform");});
test("informazione -> inform", function() {deepEqual( Stem("informazione"), "inform");});
test("informazioni -> inform", function() {deepEqual( Stem("informazioni"), "inform");});
test("informe -> inform", function() {deepEqual( Stem("informe"), "inform");});
test("informerete -> inform", function() {deepEqual( Stem("informerete"), "inform");});
test("informerò -> inform", function() {deepEqual( Stem("informerò"), "inform");});
test("informò -> inform", function() {deepEqual( Stem("informò"), "inform");});
test("infornare -> inforn", function() {deepEqual( Stem("infornare"), "inforn");});
test("infortunati -> infortun", function() {deepEqual( Stem("infortunati"), "infortun");});
test("infortunato -> infortun", function() {deepEqual( Stem("infortunato"), "infortun");});
test("infortuni -> infortun", function() {deepEqual( Stem("infortuni"), "infortun");});
test("infortunio -> infortun", function() {deepEqual( Stem("infortunio"), "infortun");});
test("infossati -> infoss", function() {deepEqual( Stem("infossati"), "infoss");});
test("infrange -> infrang", function() {deepEqual( Stem("infrange"), "infrang");});
test("infrangere -> infrang", function() {deepEqual( Stem("infrangere"), "infrang");});
test("infranse -> infrans", function() {deepEqual( Stem("infranse"), "infrans");});
test("infrastrutturazione -> infrastruttur", function() {deepEqual( Stem("infrastrutturazione"), "infrastruttur");});
test("infrastrutture -> infrastruttur", function() {deepEqual( Stem("infrastrutture"), "infrastruttur");});
test("infrazioni -> infrazion", function() {deepEqual( Stem("infrazioni"), "infrazion");});
test("infuriare -> infur", function() {deepEqual( Stem("infuriare"), "infur");});
test("infuriati -> infur", function() {deepEqual( Stem("infuriati"), "infur");});
test("infuriato -> infur", function() {deepEqual( Stem("infuriato"), "infur");});
test("infuriava -> infur", function() {deepEqual( Stem("infuriava"), "infur");});
test("infuriò -> infur", function() {deepEqual( Stem("infuriò"), "infur");});
test("ing -> ing", function() {deepEqual( Stem("ing"), "ing");});
test("ingaggi -> ingagg", function() {deepEqual( Stem("ingaggi"), "ingagg");});
test("ingaggiati -> ingagg", function() {deepEqual( Stem("ingaggiati"), "ingagg");});
test("ingaggiato -> ingagg", function() {deepEqual( Stem("ingaggiato"), "ingagg");});
test("ingannano -> ingann", function() {deepEqual( Stem("ingannano"), "ingann");});
test("ingannare -> ingann", function() {deepEqual( Stem("ingannare"), "ingann");});
test("ingannarlo -> ingann", function() {deepEqual( Stem("ingannarlo"), "ingann");});
test("ingannata -> ingann", function() {deepEqual( Stem("ingannata"), "ingann");});
test("ingannava -> ingann", function() {deepEqual( Stem("ingannava"), "ingann");});
test("ingannerebbe -> ingann", function() {deepEqual( Stem("ingannerebbe"), "ingann");});
test("inganni -> ingann", function() {deepEqual( Stem("inganni"), "ingann");});
test("inganno -> ingann", function() {deepEqual( Stem("inganno"), "ingann");});
test("ingarbugliata -> ingarbugl", function() {deepEqual( Stem("ingarbugliata"), "ingarbugl");});
test("ingegna -> ingegn", function() {deepEqual( Stem("ingegna"), "ingegn");});
test("ingegnandosi -> ingegn", function() {deepEqual( Stem("ingegnandosi"), "ingegn");});
test("ingegnano -> ingegn", function() {deepEqual( Stem("ingegnano"), "ingegn");});
test("ingegnarsi -> ingegn", function() {deepEqual( Stem("ingegnarsi"), "ingegn");});
test("ingegnati -> ingegn", function() {deepEqual( Stem("ingegnati"), "ingegn");});
test("ingegnato -> ingegn", function() {deepEqual( Stem("ingegnato"), "ingegn");});
test("ingegnava -> ingegn", function() {deepEqual( Stem("ingegnava"), "ingegn");});
test("ingegnavano -> ingegn", function() {deepEqual( Stem("ingegnavano"), "ingegn");});
test("ingegneremo -> ingegn", function() {deepEqual( Stem("ingegneremo"), "ingegn");});
test("ingegneria -> ingegner", function() {deepEqual( Stem("ingegneria"), "ingegner");});
test("ingegni -> ingegn", function() {deepEqual( Stem("ingegni"), "ingegn");});
test("ingegno -> ingegn", function() {deepEqual( Stem("ingegno"), "ingegn");});
test("ingegnosa -> ingegn", function() {deepEqual( Stem("ingegnosa"), "ingegn");});
test("ingegnoso -> ingegn", function() {deepEqual( Stem("ingegnoso"), "ingegn");});
test("ingelosisce -> ingelos", function() {deepEqual( Stem("ingelosisce"), "ingelos");});
test("ingemar -> ingem", function() {deepEqual( Stem("ingemar"), "ingem");});
test("ingenita -> ingen", function() {deepEqual( Stem("ingenita"), "ingen");});
test("ingenti -> ingent", function() {deepEqual( Stem("ingenti"), "ingent");});
test("ingenuità -> ingenu", function() {deepEqual( Stem("ingenuità"), "ingenu");});
test("ingenuo -> ingenu", function() {deepEqual( Stem("ingenuo"), "ingenu");});
test("ingerenza -> ingerent", function() {deepEqual( Stem("ingerenza"), "ingerent");});
test("ingerirvisi -> ingerirvis", function() {deepEqual( Stem("ingerirvisi"), "ingerirvis");});
test("ingerito -> inger", function() {deepEqual( Stem("ingerito"), "inger");});
test("ingessare -> ingess", function() {deepEqual( Stem("ingessare"), "ingess");});
test("ingessatura -> ingessatur", function() {deepEqual( Stem("ingessatura"), "ingessatur");});
test("inghilterra -> inghilterr", function() {deepEqual( Stem("inghilterra"), "inghilterr");});
test("inghiottisce -> inghiott", function() {deepEqual( Stem("inghiottisce"), "inghiott");});
test("inghiottiti -> inghiott", function() {deepEqual( Stem("inghiottiti"), "inghiott");});
test("inghippi -> inghipp", function() {deepEqual( Stem("inghippi"), "inghipp");});
test("inginocchiarsi -> inginocc", function() {deepEqual( Stem("inginocchiarsi"), "inginocc");});
test("inginocchiato -> inginocc", function() {deepEqual( Stem("inginocchiato"), "inginocc");});
test("inginocchiò -> inginocc", function() {deepEqual( Stem("inginocchiò"), "inginocc");});
test("inginocchioni -> inginocchion", function() {deepEqual( Stem("inginocchioni"), "inginocchion");});
test("ingiù -> ingiù", function() {deepEqual( Stem("ingiù"), "ingiù");});
test("ingiuria -> ingiur", function() {deepEqual( Stem("ingiuria"), "ingiur");});
test("ingiuriose -> ingiur", function() {deepEqual( Stem("ingiuriose"), "ingiur");});
test("ingiuriosi -> ingiur", function() {deepEqual( Stem("ingiuriosi"), "ingiur");});
test("ingiusta -> ingiust", function() {deepEqual( Stem("ingiusta"), "ingiust");});
test("ingiustamente -> ingiust", function() {deepEqual( Stem("ingiustamente"), "ingiust");});
test("ingiuste -> ingiust", function() {deepEqual( Stem("ingiuste"), "ingiust");});
test("ingiustificata -> ingiustific", function() {deepEqual( Stem("ingiustificata"), "ingiustific");});
test("ingiustificato -> ingiustific", function() {deepEqual( Stem("ingiustificato"), "ingiustific");});
test("ingiustizia -> ingiustiz", function() {deepEqual( Stem("ingiustizia"), "ingiustiz");});
test("ingiusto -> ingiust", function() {deepEqual( Stem("ingiusto"), "ingiust");});
test("inglese -> ingles", function() {deepEqual( Stem("inglese"), "ingles");});
test("inglesi -> ingles", function() {deepEqual( Stem("inglesi"), "ingles");});
test("ingloriosa -> inglor", function() {deepEqual( Stem("ingloriosa"), "inglor");});
test("ingoiando -> ingoi", function() {deepEqual( Stem("ingoiando"), "ingoi");});
test("ingoiarsi -> ingoi", function() {deepEqual( Stem("ingoiarsi"), "ingoi");});
test("ingoiata -> ingoi", function() {deepEqual( Stem("ingoiata"), "ingoi");});
test("ingoiati -> ingoi", function() {deepEqual( Stem("ingoiati"), "ingoi");});
test("ingolfa -> ingolf", function() {deepEqual( Stem("ingolfa"), "ingolf");});
test("ingolfato -> ingolf", function() {deepEqual( Stem("ingolfato"), "ingolf");});
test("ingolfava -> ingolf", function() {deepEqual( Stem("ingolfava"), "ingolf");});
test("ingolstadt -> ingolstadt", function() {deepEqual( Stem("ingolstadt"), "ingolstadt");});
test("ingombrava -> ingombr", function() {deepEqual( Stem("ingombrava"), "ingombr");});
test("ingombri -> ingombr", function() {deepEqual( Stem("ingombri"), "ingombr");});
test("ingombro -> ingombr", function() {deepEqual( Stem("ingombro"), "ingombr");});
test("ingordi -> ingord", function() {deepEqual( Stem("ingordi"), "ingord");});
test("ingozzarne -> ingozz", function() {deepEqual( Stem("ingozzarne"), "ingozz");});
test("ingrandire -> ingrand", function() {deepEqual( Stem("ingrandire"), "ingrand");});
test("ingrandirsi -> ingrand", function() {deepEqual( Stem("ingrandirsi"), "ingrand");});
test("ingrandita -> ingrand", function() {deepEqual( Stem("ingrandita"), "ingrand");});
test("ingrandivano -> ingrand", function() {deepEqual( Stem("ingrandivano"), "ingrand");});
test("ingrassare -> ingrass", function() {deepEqual( Stem("ingrassare"), "ingrass");});
test("ingrassia -> ingrass", function() {deepEqual( Stem("ingrassia"), "ingrass");});
test("ingratitudine -> ingratitudin", function() {deepEqual( Stem("ingratitudine"), "ingratitudin");});
test("ingred -> ingred", function() {deepEqual( Stem("ingred"), "ingred");});
test("ingredienti -> ingredient", function() {deepEqual( Stem("ingredienti"), "ingredient");});
test("ingressi -> ingress", function() {deepEqual( Stem("ingressi"), "ingress");});
test("ingresso -> ingress", function() {deepEqual( Stem("ingresso"), "ingress");});
test("ingrossa -> ingross", function() {deepEqual( Stem("ingrossa"), "ingross");});
test("ingrossava -> ingross", function() {deepEqual( Stem("ingrossava"), "ingross");});
test("ingrosso -> ingross", function() {deepEqual( Stem("ingrosso"), "ingross");});
test("ingrossò -> ingross", function() {deepEqual( Stem("ingrossò"), "ingross");});
test("inguscezia -> inguscez", function() {deepEqual( Stem("inguscezia"), "inguscez");});
test("inhabilità -> inhabil", function() {deepEqual( Stem("inhabilità"), "inhabil");});
test("inibisce -> inib", function() {deepEqual( Stem("inibisce"), "inib");});
test("inibizione -> inibizion", function() {deepEqual( Stem("inibizione"), "inibizion");});
test("iniezione -> iniezion", function() {deepEqual( Stem("iniezione"), "iniezion");});
test("inimicizia -> inimiciz", function() {deepEqual( Stem("inimicizia"), "inimiciz");});
test("inimicizie -> inimiciz", function() {deepEqual( Stem("inimicizie"), "inimiciz");});
test("ininterrotta -> ininterrott", function() {deepEqual( Stem("ininterrotta"), "ininterrott");});
test("iniqua -> iniqu", function() {deepEqual( Stem("iniqua"), "iniqu");});
test("inique -> iniqu", function() {deepEqual( Stem("inique"), "iniqu");});
test("iniqui -> iniqu", function() {deepEqual( Stem("iniqui"), "iniqu");});
test("iniquità -> iniqu", function() {deepEqual( Stem("iniquità"), "iniqu");});
test("iniquo -> iniqu", function() {deepEqual( Stem("iniquo"), "iniqu");});
test("inizia -> iniz", function() {deepEqual( Stem("inizia"), "iniz");});
test("iniziale -> inizial", function() {deepEqual( Stem("iniziale"), "inizial");});
test("iniziali -> inizial", function() {deepEqual( Stem("iniziali"), "inizial");});
test("inizialmente -> inizial", function() {deepEqual( Stem("inizialmente"), "inizial");});
test("iniziano -> iniz", function() {deepEqual( Stem("iniziano"), "iniz");});
test("iniziare -> iniz", function() {deepEqual( Stem("iniziare"), "iniz");});
test("iniziata -> iniz", function() {deepEqual( Stem("iniziata"), "iniz");});
test("iniziativa -> iniz", function() {deepEqual( Stem("iniziativa"), "iniz");});
test("iniziative -> iniz", function() {deepEqual( Stem("iniziative"), "iniz");});
test("iniziato -> iniz", function() {deepEqual( Stem("iniziato"), "iniz");});
test("iniziazione -> iniz", function() {deepEqual( Stem("iniziazione"), "iniz");});
test("inizierà -> iniz", function() {deepEqual( Stem("inizierà"), "iniz");});
test("inizierebbe -> iniz", function() {deepEqual( Stem("inizierebbe"), "iniz");});
test("inizio -> iniz", function() {deepEqual( Stem("inizio"), "iniz");});
test("innaffia -> innaff", function() {deepEqual( Stem("innaffia"), "innaff");});
test("innaffiato -> innaff", function() {deepEqual( Stem("innaffiato"), "innaff");});
test("innalzamento -> innalz", function() {deepEqual( Stem("innalzamento"), "innalz");});
test("innalzata -> innalz", function() {deepEqual( Stem("innalzata"), "innalz");});
test("innalzato -> innalz", function() {deepEqual( Stem("innalzato"), "innalz");});
test("innamora -> innamor", function() {deepEqual( Stem("innamora"), "innamor");});
test("innamorano -> innamor", function() {deepEqual( Stem("innamorano"), "innamor");});
test("innamorarsi -> innamor", function() {deepEqual( Stem("innamorarsi"), "innamor");});
test("innamorata -> innamor", function() {deepEqual( Stem("innamorata"), "innamor");});
test("innamorati -> innamor", function() {deepEqual( Stem("innamorati"), "innamor");});
test("innamorato -> innamor", function() {deepEqual( Stem("innamorato"), "innamor");});
test("innanzi -> innanz", function() {deepEqual( Stem("innanzi"), "innanz");});
test("innanzitutto -> innanzitutt", function() {deepEqual( Stem("innanzitutto"), "innanzitutt");});
test("innata -> innat", function() {deepEqual( Stem("innata"), "innat");});
test("innegabile -> inneg", function() {deepEqual( Stem("innegabile"), "inneg");});
test("inneggianti -> innegg", function() {deepEqual( Stem("inneggianti"), "innegg");});
test("inneggiavano -> innegg", function() {deepEqual( Stem("inneggiavano"), "innegg");});
test("innesca -> innesc", function() {deepEqual( Stem("innesca"), "innesc");});
test("innesti -> innest", function() {deepEqual( Stem("innesti"), "innest");});
test("inni -> inni", function() {deepEqual( Stem("inni"), "inni");});
test("innocente -> innocent", function() {deepEqual( Stem("innocente"), "innocent");});
test("innocenti -> innocent", function() {deepEqual( Stem("innocenti"), "innocent");});
test("innocentina -> innocentin", function() {deepEqual( Stem("innocentina"), "innocentin");});
test("innocenza -> innocent", function() {deepEqual( Stem("innocenza"), "innocent");});
test("innominabili -> innomin", function() {deepEqual( Stem("innominabili"), "innomin");});
test("innominato -> innomin", function() {deepEqual( Stem("innominato"), "innomin");});
test("innovata -> innov", function() {deepEqual( Stem("innovata"), "innov");});
test("innovativi -> innov", function() {deepEqual( Stem("innovativi"), "innov");});
test("innovativo -> innov", function() {deepEqual( Stem("innovativo"), "innov");});
test("innovatore -> innov", function() {deepEqual( Stem("innovatore"), "innov");});
test("innovazione -> innov", function() {deepEqual( Stem("innovazione"), "innov");});
test("inocntro -> inocntr", function() {deepEqual( Stem("inocntro"), "inocntr");});
test("inoffensivi -> inoffens", function() {deepEqual( Stem("inoffensivi"), "inoffens");});
test("inoffensivo -> inoffens", function() {deepEqual( Stem("inoffensivo"), "inoffens");});
test("inoltra -> inoltr", function() {deepEqual( Stem("inoltra"), "inoltr");});
test("inoltrandosi -> inoltr", function() {deepEqual( Stem("inoltrandosi"), "inoltr");});
test("inoltrarvisi -> inoltrarvis", function() {deepEqual( Stem("inoltrarvisi"), "inoltrarvis");});
test("inoltrata -> inoltr", function() {deepEqual( Stem("inoltrata"), "inoltr");});
test("inoltrato -> inoltr", function() {deepEqual( Stem("inoltrato"), "inoltr");});
test("inoltrava -> inoltr", function() {deepEqual( Stem("inoltrava"), "inoltr");});
test("inoltre -> inoltr", function() {deepEqual( Stem("inoltre"), "inoltr");});
test("inoltrò -> inoltr", function() {deepEqual( Stem("inoltrò"), "inoltr");});
test("inondato -> inond", function() {deepEqual( Stem("inondato"), "inond");});
test("inopportuna -> inopportun", function() {deepEqual( Stem("inopportuna"), "inopportun");});
test("inopportuno -> inopportun", function() {deepEqual( Stem("inopportuno"), "inopportun");});
test("inorriditi -> inorrid", function() {deepEqual( Stem("inorriditi"), "inorrid");});
test("inorridito -> inorrid", function() {deepEqual( Stem("inorridito"), "inorrid");});
test("inorridiva -> inorrid", function() {deepEqual( Stem("inorridiva"), "inorrid");});
test("inorridivano -> inorrid", function() {deepEqual( Stem("inorridivano"), "inorrid");});
test("inospitale -> inospital", function() {deepEqual( Stem("inospitale"), "inospital");});
test("inosservata -> inosserv", function() {deepEqual( Stem("inosservata"), "inosserv");});
test("inosservati -> inosserv", function() {deepEqual( Stem("inosservati"), "inosserv");});
test("inosservato -> inosserv", function() {deepEqual( Stem("inosservato"), "inosserv");});
test("inpgi -> inpgi", function() {deepEqual( Stem("inpgi"), "inpgi");});
test("inps -> inps", function() {deepEqual( Stem("inps"), "inps");});
test("input -> input", function() {deepEqual( Stem("input"), "input");});
test("inquadrato -> inquadr", function() {deepEqual( Stem("inquadrato"), "inquadr");});
test("inquadrava -> inquadr", function() {deepEqual( Stem("inquadrava"), "inquadr");});
test("inqualificabile -> inqualific", function() {deepEqual( Stem("inqualificabile"), "inqualific");});
test("inquieta -> inquiet", function() {deepEqual( Stem("inquieta"), "inquiet");});
test("inquietante -> inquiet", function() {deepEqual( Stem("inquietante"), "inquiet");});
test("inquietanti -> inquiet", function() {deepEqual( Stem("inquietanti"), "inquiet");});
test("inquietarla -> inquiet", function() {deepEqual( Stem("inquietarla"), "inquiet");});
test("inquietarsene -> inquiet", function() {deepEqual( Stem("inquietarsene"), "inquiet");});
test("inquietarti -> inquiet", function() {deepEqual( Stem("inquietarti"), "inquiet");});
test("inquietata -> inquiet", function() {deepEqual( Stem("inquietata"), "inquiet");});
test("inquietava -> inquiet", function() {deepEqual( Stem("inquietava"), "inquiet");});
test("inquieti -> inquiet", function() {deepEqual( Stem("inquieti"), "inquiet");});
test("inquieto -> inquiet", function() {deepEqual( Stem("inquieto"), "inquiet");});
test("inquietudine -> inquietudin", function() {deepEqual( Stem("inquietudine"), "inquietudin");});
test("inquietudini -> inquietudin", function() {deepEqual( Stem("inquietudini"), "inquietudin");});
test("inquilini -> inquilin", function() {deepEqual( Stem("inquilini"), "inquilin");});
test("inquilino -> inquilin", function() {deepEqual( Stem("inquilino"), "inquilin");});
test("inquinamento -> inquin", function() {deepEqual( Stem("inquinamento"), "inquin");});
test("inquinanti -> inquin", function() {deepEqual( Stem("inquinanti"), "inquin");});
test("inquinasse -> inquin", function() {deepEqual( Stem("inquinasse"), "inquin");});
test("inquini -> inquin", function() {deepEqual( Stem("inquini"), "inquin");});
test("inquirenti -> inquirent", function() {deepEqual( Stem("inquirenti"), "inquirent");});
test("inquisisca -> inquis", function() {deepEqual( Stem("inquisisca"), "inquis");});
test("inquisiti -> inquis", function() {deepEqual( Stem("inquisiti"), "inquis");});
test("inquisizione -> inquisizion", function() {deepEqual( Stem("inquisizione"), "inquisizion");});
test("inquisizioni -> inquisizion", function() {deepEqual( Stem("inquisizioni"), "inquisizion");});
test("insabbiati -> insabb", function() {deepEqual( Stem("insabbiati"), "insabb");});
test("insaccato -> insacc", function() {deepEqual( Stem("insaccato"), "insacc");});
test("insaccava -> insacc", function() {deepEqual( Stem("insaccava"), "insacc");});
test("insaccò -> insacc", function() {deepEqual( Stem("insaccò"), "insacc");});
test("insalvatichiti -> insalvatic", function() {deepEqual( Stem("insalvatichiti"), "insalvatic");});
test("insalvatichito -> insalvatic", function() {deepEqual( Stem("insalvatichito"), "insalvatic");});
test("insanguinate -> insanguin", function() {deepEqual( Stem("insanguinate"), "insanguin");});
test("insanguinati -> insanguin", function() {deepEqual( Stem("insanguinati"), "insanguin");});
test("insanguinato -> insanguin", function() {deepEqual( Stem("insanguinato"), "insanguin");});
test("insaputa -> insap", function() {deepEqual( Stem("insaputa"), "insap");});
test("inscenare -> inscen", function() {deepEqual( Stem("inscenare"), "inscen");});
test("insediamenti -> insed", function() {deepEqual( Stem("insediamenti"), "insed");});
test("insediamento -> insed", function() {deepEqual( Stem("insediamento"), "insed");});
test("insediarsi -> insed", function() {deepEqual( Stem("insediarsi"), "insed");});
test("insediati -> insed", function() {deepEqual( Stem("insediati"), "insed");});
test("insediato -> insed", function() {deepEqual( Stem("insediato"), "insed");});
test("insegna -> insegn", function() {deepEqual( Stem("insegna"), "insegn");});
test("insegnamento -> insegn", function() {deepEqual( Stem("insegnamento"), "insegn");});
test("insegnanmento -> insegnanment", function() {deepEqual( Stem("insegnanmento"), "insegnanment");});
test("insegnano -> insegn", function() {deepEqual( Stem("insegnano"), "insegn");});
test("insegnante -> insegn", function() {deepEqual( Stem("insegnante"), "insegn");});
test("insegnanti -> insegn", function() {deepEqual( Stem("insegnanti"), "insegn");});
test("insegnar -> insegn", function() {deepEqual( Stem("insegnar"), "insegn");});
test("insegnare -> insegn", function() {deepEqual( Stem("insegnare"), "insegn");});
test("insegnargli -> insegn", function() {deepEqual( Stem("insegnargli"), "insegn");});
test("insegnargliela -> insegn", function() {deepEqual( Stem("insegnargliela"), "insegn");});
test("insegnarle -> insegn", function() {deepEqual( Stem("insegnarle"), "insegn");});
test("insegnarmi -> insegn", function() {deepEqual( Stem("insegnarmi"), "insegn");});
test("insegnata -> insegn", function() {deepEqual( Stem("insegnata"), "insegn");});
test("insegnate -> insegn", function() {deepEqual( Stem("insegnate"), "insegn");});
test("insegnati -> insegn", function() {deepEqual( Stem("insegnati"), "insegn");});
test("insegnato -> insegn", function() {deepEqual( Stem("insegnato"), "insegn");});
test("insegnava -> insegn", function() {deepEqual( Stem("insegnava"), "insegn");});
test("insegnavan -> insegnavan", function() {deepEqual( Stem("insegnavan"), "insegnavan");});
test("insegne -> insegn", function() {deepEqual( Stem("insegne"), "insegn");});
test("insegnerà -> insegn", function() {deepEqual( Stem("insegnerà"), "insegn");});
test("insegnerò -> insegn", function() {deepEqual( Stem("insegnerò"), "insegn");});
test("insegni -> insegn", function() {deepEqual( Stem("insegni"), "insegn");});
test("insegno -> insegn", function() {deepEqual( Stem("insegno"), "insegn");});
test("insegnò -> insegn", function() {deepEqual( Stem("insegnò"), "insegn");});
test("insegue -> insegu", function() {deepEqual( Stem("insegue"), "insegu");});
test("inseguì -> insegu", function() {deepEqual( Stem("inseguì"), "insegu");});
test("inseguimenti -> insegu", function() {deepEqual( Stem("inseguimenti"), "insegu");});
test("inseguimento -> insegu", function() {deepEqual( Stem("inseguimento"), "insegu");});
test("inseguire -> insegu", function() {deepEqual( Stem("inseguire"), "insegu");});
test("inseguita -> insegu", function() {deepEqual( Stem("inseguita"), "insegu");});
test("inseguitemi -> inseguitem", function() {deepEqual( Stem("inseguitemi"), "inseguitem");});
test("inseguito -> insegu", function() {deepEqual( Stem("inseguito"), "insegu");});
test("inseguitori -> inseguitor", function() {deepEqual( Stem("inseguitori"), "inseguitor");});
test("inseguiva -> insegu", function() {deepEqual( Stem("inseguiva"), "insegu");});
test("insensata -> insens", function() {deepEqual( Stem("insensata"), "insens");});
test("insensatezza -> insensatezz", function() {deepEqual( Stem("insensatezza"), "insensatezz");});
test("insensati -> insens", function() {deepEqual( Stem("insensati"), "insens");});
test("insensato -> insens", function() {deepEqual( Stem("insensato"), "insens");});
test("insensibilità -> insensibil", function() {deepEqual( Stem("insensibilità"), "insensibil");});
test("inseparabili -> insepar", function() {deepEqual( Stem("inseparabili"), "insepar");});
test("insepolti -> insepolt", function() {deepEqual( Stem("insepolti"), "insepolt");});
test("inserendo -> inser", function() {deepEqual( Stem("inserendo"), "inser");});
test("inserimento -> inser", function() {deepEqual( Stem("inserimento"), "inser");});
test("inserire -> inser", function() {deepEqual( Stem("inserire"), "inser");});
test("inserirsi -> inser", function() {deepEqual( Stem("inserirsi"), "inser");});
test("inserisce -> inser", function() {deepEqual( Stem("inserisce"), "inser");});
test("inseriscono -> inser", function() {deepEqual( Stem("inseriscono"), "inser");});
test("inserita -> inser", function() {deepEqual( Stem("inserita"), "inser");});
test("inserite -> inser", function() {deepEqual( Stem("inserite"), "inser");});
test("inseriti -> inser", function() {deepEqual( Stem("inseriti"), "inser");});
test("inserito -> inser", function() {deepEqual( Stem("inserito"), "inser");});
test("insicurezze -> insicurezz", function() {deepEqual( Stem("insicurezze"), "insicurezz");});
test("insicuro -> insicur", function() {deepEqual( Stem("insicuro"), "insicur");});
test("insidia -> insid", function() {deepEqual( Stem("insidia"), "insid");});
test("insidiare -> insid", function() {deepEqual( Stem("insidiare"), "insid");});
test("insidiati -> insid", function() {deepEqual( Stem("insidiati"), "insid");});
test("insidie -> insid", function() {deepEqual( Stem("insidie"), "insid");});
test("insidiosi -> insid", function() {deepEqual( Stem("insidiosi"), "insid");});
test("insiem -> insiem", function() {deepEqual( Stem("insiem"), "insiem");});
test("insieme -> insiem", function() {deepEqual( Stem("insieme"), "insiem");});
test("insigne -> insign", function() {deepEqual( Stem("insigne"), "insign");});
test("insigni -> insign", function() {deepEqual( Stem("insigni"), "insign");});
test("insinuando -> insinu", function() {deepEqual( Stem("insinuando"), "insinu");});
test("insinuare -> insinu", function() {deepEqual( Stem("insinuare"), "insinu");});
test("insinuargli -> insinu", function() {deepEqual( Stem("insinuargli"), "insinu");});
test("insinuazione -> insinu", function() {deepEqual( Stem("insinuazione"), "insinu");});
test("insinuazioni -> insinu", function() {deepEqual( Stem("insinuazioni"), "insinu");});
test("insipienza -> insipient", function() {deepEqual( Stem("insipienza"), "insipient");});
test("insiste -> insist", function() {deepEqual( Stem("insiste"), "insist");});
test("insistendo -> insist", function() {deepEqual( Stem("insistendo"), "insist");});
test("insistente -> insistent", function() {deepEqual( Stem("insistente"), "insistent");});
test("insistenti -> insistent", function() {deepEqual( Stem("insistenti"), "insistent");});
test("insistenza -> insistent", function() {deepEqual( Stem("insistenza"), "insistent");});
test("insistenze -> insistent", function() {deepEqual( Stem("insistenze"), "insistent");});
test("insistere -> insist", function() {deepEqual( Stem("insistere"), "insist");});
test("insistette -> insistett", function() {deepEqual( Stem("insistette"), "insistett");});
test("insisteva -> insist", function() {deepEqual( Stem("insisteva"), "insist");});
test("insistito -> insist", function() {deepEqual( Stem("insistito"), "insist");});
test("insita -> insit", function() {deepEqual( Stem("insita"), "insit");});
test("insite -> insit", function() {deepEqual( Stem("insite"), "insit");});
test("insoddisfacente -> insoddisfacent", function() {deepEqual( Stem("insoddisfacente"), "insoddisfacent");});
test("insoddisfatto -> insoddisfatt", function() {deepEqual( Stem("insoddisfatto"), "insoddisfatt");});
test("insolente -> insolent", function() {deepEqual( Stem("insolente"), "insolent");});
test("insolenza -> insolent", function() {deepEqual( Stem("insolenza"), "insolent");});
test("insolita -> insol", function() {deepEqual( Stem("insolita"), "insol");});
test("insoliti -> insol", function() {deepEqual( Stem("insoliti"), "insol");});
test("insolito -> insol", function() {deepEqual( Stem("insolito"), "insol");});
test("insolvente -> insolvent", function() {deepEqual( Stem("insolvente"), "insolvent");});
test("insoma -> insom", function() {deepEqual( Stem("insoma"), "insom");});
test("insomma -> insomm", function() {deepEqual( Stem("insomma"), "insomm");});
test("insonne -> insonn", function() {deepEqual( Stem("insonne"), "insonn");});
test("insopportabile -> insopport", function() {deepEqual( Stem("insopportabile"), "insopport");});
test("insopportabili -> insopport", function() {deepEqual( Stem("insopportabili"), "insopport");});
test("insopportabilità -> insopport", function() {deepEqual( Stem("insopportabilità"), "insopport");});
test("insopprimibile -> insopprim", function() {deepEqual( Stem("insopprimibile"), "insopprim");});
test("insorgere -> insorg", function() {deepEqual( Stem("insorgere"), "insorg");});
test("insorgevano -> insorg", function() {deepEqual( Stem("insorgevano"), "insorg");});
test("insormontabili -> insormont", function() {deepEqual( Stem("insormontabili"), "insormont");});
test("insospettì -> insospett", function() {deepEqual( Stem("insospettì"), "insospett");});
test("insospettito -> insospett", function() {deepEqual( Stem("insospettito"), "insospett");});
test("insostenibile -> insosten", function() {deepEqual( Stem("insostenibile"), "insosten");});
test("insostituibile -> insostitu", function() {deepEqual( Stem("insostituibile"), "insostitu");});
test("insperato -> insper", function() {deepEqual( Stem("insperato"), "insper");});
test("inspiegabili -> inspieg", function() {deepEqual( Stem("inspiegabili"), "inspieg");});
test("inspiegabilmente -> inspiegabil", function() {deepEqual( Stem("inspiegabilmente"), "inspiegabil");});
test("instabile -> instabil", function() {deepEqual( Stem("instabile"), "instabil");});
test("installando -> install", function() {deepEqual( Stem("installando"), "install");});
test("installare -> install", function() {deepEqual( Stem("installare"), "install");});
test("installata -> install", function() {deepEqual( Stem("installata"), "install");});
test("installate -> install", function() {deepEqual( Stem("installate"), "install");});
test("installato -> install", function() {deepEqual( Stem("installato"), "install");});
test("installazione -> install", function() {deepEqual( Stem("installazione"), "install");});
test("instancabile -> instanc", function() {deepEqual( Stem("instancabile"), "instanc");});
test("instaurare -> instaur", function() {deepEqual( Stem("instaurare"), "instaur");});
test("instaurati -> instaur", function() {deepEqual( Stem("instaurati"), "instaur");});
test("instauratosi -> instaurat", function() {deepEqual( Stem("instauratosi"), "instaurat");});
test("institute -> instit", function() {deepEqual( Stem("institute"), "instit");});
test("insuccessi -> insuccess", function() {deepEqual( Stem("insuccessi"), "insuccess");});
test("insuccesso -> insuccess", function() {deepEqual( Stem("insuccesso"), "insuccess");});
test("insufficiente -> insufficient", function() {deepEqual( Stem("insufficiente"), "insufficient");});
test("insufficienti -> insufficient", function() {deepEqual( Stem("insufficienti"), "insufficient");});
test("insufficienza -> insufficient", function() {deepEqual( Stem("insufficienza"), "insufficient");});
test("insulino -> insulin", function() {deepEqual( Stem("insulino"), "insulin");});
test("insulso -> insuls", function() {deepEqual( Stem("insulso"), "insuls");});
test("insultare -> insult", function() {deepEqual( Stem("insultare"), "insult");});
test("insultata -> insult", function() {deepEqual( Stem("insultata"), "insult");});
test("insultati -> insult", function() {deepEqual( Stem("insultati"), "insult");});
test("insultato -> insult", function() {deepEqual( Stem("insultato"), "insult");});
test("insulti -> insult", function() {deepEqual( Stem("insulti"), "insult");});
test("insulto -> insult", function() {deepEqual( Stem("insulto"), "insult");});
test("insuperabile -> insuper", function() {deepEqual( Stem("insuperabile"), "insuper");});
test("insuperabili -> insuper", function() {deepEqual( Stem("insuperabili"), "insuper");});
test("insurrezione -> insurrezion", function() {deepEqual( Stem("insurrezione"), "insurrezion");});
test("int -> int", function() {deepEqual( Stem("int"), "int");});
test("intaccando -> intacc", function() {deepEqual( Stem("intaccando"), "intacc");});
test("intaccati -> intacc", function() {deepEqual( Stem("intaccati"), "intacc");});
test("intaccato -> intacc", function() {deepEqual( Stem("intaccato"), "intacc");});
test("intagliata -> intagl", function() {deepEqual( Stem("intagliata"), "intagl");});
test("intanto -> intant", function() {deepEqual( Stem("intanto"), "intant");});
test("intarlate -> intarl", function() {deepEqual( Stem("intarlate"), "intarl");});
test("intarlato -> intarl", function() {deepEqual( Stem("intarlato"), "intarl");});
test("intasate -> intas", function() {deepEqual( Stem("intasate"), "intas");});
test("intasavano -> intas", function() {deepEqual( Stem("intasavano"), "intas");});
test("intasca -> intasc", function() {deepEqual( Stem("intasca"), "intasc");});
test("intascavano -> intasc", function() {deepEqual( Stem("intascavano"), "intasc");});
test("intatta -> intatt", function() {deepEqual( Stem("intatta"), "intatt");});
test("intatti -> intatt", function() {deepEqual( Stem("intatti"), "intatt");});
test("integrale -> integral", function() {deepEqual( Stem("integrale"), "integral");});
test("integralismo -> integral", function() {deepEqual( Stem("integralismo"), "integral");});
test("integralisti -> integral", function() {deepEqual( Stem("integralisti"), "integral");});
test("integralmete -> integralm", function() {deepEqual( Stem("integralmete"), "integralm");});
test("integrante -> integr", function() {deepEqual( Stem("integrante"), "integr");});
test("integrare -> integr", function() {deepEqual( Stem("integrare"), "integr");});
test("integrata -> integr", function() {deepEqual( Stem("integrata"), "integr");});
test("integrate -> integr", function() {deepEqual( Stem("integrate"), "integr");});
test("integrative -> integr", function() {deepEqual( Stem("integrative"), "integr");});
test("integrativi -> integr", function() {deepEqual( Stem("integrativi"), "integr");});
test("integrazione -> integr", function() {deepEqual( Stem("integrazione"), "integr");});
test("intel -> intel", function() {deepEqual( Stem("intel"), "intel");});
test("intelettuali -> intelettual", function() {deepEqual( Stem("intelettuali"), "intelettual");});
test("intelletti -> intellett", function() {deepEqual( Stem("intelletti"), "intellett");});
test("intelletto -> intellett", function() {deepEqual( Stem("intelletto"), "intellett");});
test("intellettuali -> intellettual", function() {deepEqual( Stem("intellettuali"), "intellettual");});
test("intelligence -> intelligenc", function() {deepEqual( Stem("intelligence"), "intelligenc");});
test("intelligenza -> intelligent", function() {deepEqual( Stem("intelligenza"), "intelligent");});
test("intemperanza -> intemper", function() {deepEqual( Stem("intemperanza"), "intemper");});
test("intemperie -> intemper", function() {deepEqual( Stem("intemperie"), "intemper");});
test("intempestiva -> intempest", function() {deepEqual( Stem("intempestiva"), "intempest");});
test("intenda -> intend", function() {deepEqual( Stem("intenda"), "intend");});
test("intendano -> intend", function() {deepEqual( Stem("intendano"), "intend");});
test("intende -> intend", function() {deepEqual( Stem("intende"), "intend");});
test("intendendo -> intend", function() {deepEqual( Stem("intendendo"), "intend");});
test("intender -> intender", function() {deepEqual( Stem("intender"), "intender");});
test("intenderà -> intend", function() {deepEqual( Stem("intenderà"), "intend");});
test("intenderanno -> intend", function() {deepEqual( Stem("intenderanno"), "intend");});
test("intenderci -> intend", function() {deepEqual( Stem("intenderci"), "intend");});
test("intendere -> intend", function() {deepEqual( Stem("intendere"), "intend");});
test("intenderebbe -> intend", function() {deepEqual( Stem("intenderebbe"), "intend");});
test("intenderle -> intend", function() {deepEqual( Stem("intenderle"), "intend");});
test("intenderli -> intend", function() {deepEqual( Stem("intenderli"), "intend");});
test("intendermi -> intend", function() {deepEqual( Stem("intendermi"), "intend");});
test("intendersi -> intend", function() {deepEqual( Stem("intendersi"), "intend");});
test("intendesse -> intendess", function() {deepEqual( Stem("intendesse"), "intendess");});
test("intendeste -> intendest", function() {deepEqual( Stem("intendeste"), "intendest");});
test("intendete -> intend", function() {deepEqual( Stem("intendete"), "intend");});
test("intendetela -> intendetel", function() {deepEqual( Stem("intendetela"), "intendetel");});
test("intendeva -> intend", function() {deepEqual( Stem("intendeva"), "intend");});
test("intendevano -> intend", function() {deepEqual( Stem("intendevano"), "intend");});
test("intendi -> intend", function() {deepEqual( Stem("intendi"), "intend");});
test("intendiamo -> intend", function() {deepEqual( Stem("intendiamo"), "intend");});
test("intendiamoci -> intendiamoc", function() {deepEqual( Stem("intendiamoci"), "intendiamoc");});
test("intendimento -> intend", function() {deepEqual( Stem("intendimento"), "intend");});
test("intendo -> intend", function() {deepEqual( Stem("intendo"), "intend");});
test("intendon -> intendon", function() {deepEqual( Stem("intendon"), "intendon");});
test("intendono -> intend", function() {deepEqual( Stem("intendono"), "intend");});
test("intenerire -> intener", function() {deepEqual( Stem("intenerire"), "intener");});
test("intenerita -> intener", function() {deepEqual( Stem("intenerita"), "intener");});
test("intenerito -> intener", function() {deepEqual( Stem("intenerito"), "intener");});
test("intensa -> intens", function() {deepEqual( Stem("intensa"), "intens");});
test("intensamente -> intens", function() {deepEqual( Stem("intensamente"), "intens");});
test("intensi -> intens", function() {deepEqual( Stem("intensi"), "intens");});
test("intensificano -> intensific", function() {deepEqual( Stem("intensificano"), "intensific");});
test("intensificarsi -> intensific", function() {deepEqual( Stem("intensificarsi"), "intensific");});
test("intensificazione -> intensif", function() {deepEqual( Stem("intensificazione"), "intensif");});
test("intensità -> intens", function() {deepEqual( Stem("intensità"), "intens");});
test("intenso -> intens", function() {deepEqual( Stem("intenso"), "intens");});
test("intenta -> intent", function() {deepEqual( Stem("intenta"), "intent");});
test("intento -> intent", function() {deepEqual( Stem("intento"), "intent");});
test("intenzion -> intenzion", function() {deepEqual( Stem("intenzion"), "intenzion");});
test("intenzionati -> intenzion", function() {deepEqual( Stem("intenzionati"), "intenzion");});
test("intenzionato -> intenzion", function() {deepEqual( Stem("intenzionato"), "intenzion");});
test("intenzione -> intenzion", function() {deepEqual( Stem("intenzione"), "intenzion");});
test("intenzioni -> intenzion", function() {deepEqual( Stem("intenzioni"), "intenzion");});
test("intepretata -> intepret", function() {deepEqual( Stem("intepretata"), "intepret");});
test("inter -> inter", function() {deepEqual( Stem("inter"), "inter");});
test("intera -> inter", function() {deepEqual( Stem("intera"), "inter");});
test("interamente -> inter", function() {deepEqual( Stem("interamente"), "inter");});
test("interamericana -> interamerican", function() {deepEqual( Stem("interamericana"), "interamerican");});
test("interaziendale -> interaziendal", function() {deepEqual( Stem("interaziendale"), "interaziendal");});
test("interb -> interb", function() {deepEqual( Stem("interb"), "interb");});
test("interbanca -> interbanc", function() {deepEqual( Stem("interbanca"), "interbanc");});
test("interbancaria -> interbancar", function() {deepEqual( Stem("interbancaria"), "interbancar");});
test("intercedeva -> interced", function() {deepEqual( Stem("intercedeva"), "interced");});
test("intercession -> intercession", function() {deepEqual( Stem("intercession"), "intercession");});
test("intercessione -> intercession", function() {deepEqual( Stem("intercessione"), "intercession");});
test("intercettazione -> intercett", function() {deepEqual( Stem("intercettazione"), "intercett");});
test("intercettazioni -> intercett", function() {deepEqual( Stem("intercettazioni"), "intercett");});
test("intercolunni -> intercolunn", function() {deepEqual( Stem("intercolunni"), "intercolunn");});
test("intercomunali -> intercomunal", function() {deepEqual( Stem("intercomunali"), "intercomunal");});
test("intercomuncali -> intercomuncal", function() {deepEqual( Stem("intercomuncali"), "intercomuncal");});
test("interconnessa -> interconness", function() {deepEqual( Stem("interconnessa"), "interconness");});
test("interconnesse -> interconness", function() {deepEqual( Stem("interconnesse"), "interconness");});
test("interdire -> interd", function() {deepEqual( Stem("interdire"), "interd");});
test("intere -> inter", function() {deepEqual( Stem("intere"), "inter");});
test("interessa -> interess", function() {deepEqual( Stem("interessa"), "interess");});
test("interessando -> interess", function() {deepEqual( Stem("interessando"), "interess");});
test("interessano -> interess", function() {deepEqual( Stem("interessano"), "interess");});
test("interessante -> interess", function() {deepEqual( Stem("interessante"), "interess");});
test("interessanti -> interess", function() {deepEqual( Stem("interessanti"), "interess");});
test("interessasse -> interess", function() {deepEqual( Stem("interessasse"), "interess");});
test("interessata -> interess", function() {deepEqual( Stem("interessata"), "interess");});
test("interessate -> interess", function() {deepEqual( Stem("interessate"), "interess");});
test("interessati -> interess", function() {deepEqual( Stem("interessati"), "interess");});
test("interessatissimo -> interessatissim", function() {deepEqual( Stem("interessatissimo"), "interessatissim");});
test("interessato -> interess", function() {deepEqual( Stem("interessato"), "interess");});
test("interessava -> interess", function() {deepEqual( Stem("interessava"), "interess");});
test("interesse -> interess", function() {deepEqual( Stem("interesse"), "interess");});
test("interesserà -> interess", function() {deepEqual( Stem("interesserà"), "interess");});
test("interessi -> interess", function() {deepEqual( Stem("interessi"), "interess");});
test("interfax -> interfax", function() {deepEqual( Stem("interfax"), "interfax");});
test("interferire -> interfer", function() {deepEqual( Stem("interferire"), "interfer");});
test("intergovernativa -> intergovern", function() {deepEqual( Stem("intergovernativa"), "intergovern");});
test("interi -> inter", function() {deepEqual( Stem("interi"), "inter");});
test("interiezione -> interiezion", function() {deepEqual( Stem("interiezione"), "interiezion");});
test("interinale -> interinal", function() {deepEqual( Stem("interinale"), "interinal");});
test("interiore -> interior", function() {deepEqual( Stem("interiore"), "interior");});
test("interista -> inter", function() {deepEqual( Stem("interista"), "inter");});
test("interisti -> inter", function() {deepEqual( Stem("interisti"), "inter");});
test("interlocutore -> interlocutor", function() {deepEqual( Stem("interlocutore"), "interlocutor");});
test("interlocutori -> interlocutor", function() {deepEqual( Stem("interlocutori"), "interlocutor");});
test("interlocutoria -> interlocutor", function() {deepEqual( Stem("interlocutoria"), "interlocutor");});
test("interlocuzione -> interlocu", function() {deepEqual( Stem("interlocuzione"), "interlocu");});
test("intermedi -> intermed", function() {deepEqual( Stem("intermedi"), "intermed");});
test("intermediari -> intermediar", function() {deepEqual( Stem("intermediari"), "intermediar");});
test("intermediario -> intermediar", function() {deepEqual( Stem("intermediario"), "intermediar");});
test("intermezi -> intermez", function() {deepEqual( Stem("intermezi"), "intermez");});
test("interminate -> intermin", function() {deepEqual( Stem("interminate"), "intermin");});
test("intermissione -> intermission", function() {deepEqual( Stem("intermissione"), "intermission");});
test("intermittenti -> intermittent", function() {deepEqual( Stem("intermittenti"), "intermittent");});
test("intermobiliare -> intermobil", function() {deepEqual( Stem("intermobiliare"), "intermobil");});
test("intermoney -> intermoney", function() {deepEqual( Stem("intermoney"), "intermoney");});
test("intern -> intern", function() {deepEqual( Stem("intern"), "intern");});
test("interna -> intern", function() {deepEqual( Stem("interna"), "intern");});
test("internandosi -> intern", function() {deepEqual( Stem("internandosi"), "intern");});
test("internarsi -> intern", function() {deepEqual( Stem("internarsi"), "intern");});
test("internatì -> internat", function() {deepEqual( Stem("internatì"), "internat");});
test("internato -> intern", function() {deepEqual( Stem("internato"), "intern");});
test("internaz -> internaz", function() {deepEqual( Stem("internaz"), "internaz");});
test("internazion -> internazion", function() {deepEqual( Stem("internazion"), "internazion");});
test("internazionale -> internazional", function() {deepEqual( Stem("internazionale"), "internazional");});
test("internazionalè -> internazional", function() {deepEqual( Stem("internazionalè"), "internazional");});
test("internazionali -> internazional", function() {deepEqual( Stem("internazionali"), "internazional");});
test("internazionalismo -> internazional", function() {deepEqual( Stem("internazionalismo"), "internazional");});
test("interne -> intern", function() {deepEqual( Stem("interne"), "intern");});
test("internet -> internet", function() {deepEqual( Stem("internet"), "internet");});
test("interni -> intern", function() {deepEqual( Stem("interni"), "intern");});
test("interno -> intern", function() {deepEqual( Stem("interno"), "intern");});
test("intero -> inter", function() {deepEqual( Stem("intero"), "inter");});
test("interotto -> interott", function() {deepEqual( Stem("interotto"), "interott");});
test("interpella -> interpell", function() {deepEqual( Stem("interpella"), "interpell");});
test("interpellata -> interpell", function() {deepEqual( Stem("interpellata"), "interpell");});
test("interpellati -> interpell", function() {deepEqual( Stem("interpellati"), "interpell");});
test("interpellato -> interpell", function() {deepEqual( Stem("interpellato"), "interpell");});
test("interplanetari -> interplanetar", function() {deepEqual( Stem("interplanetari"), "interplanetar");});
test("interpreta -> interpret", function() {deepEqual( Stem("interpreta"), "interpret");});
test("interpretando -> interpret", function() {deepEqual( Stem("interpretando"), "interpret");});
test("interpretano -> interpret", function() {deepEqual( Stem("interpretano"), "interpret");});
test("interpretar -> interpret", function() {deepEqual( Stem("interpretar"), "interpret");});
test("interpretare -> interpret", function() {deepEqual( Stem("interpretare"), "interpret");});
test("interpretate -> interpret", function() {deepEqual( Stem("interpretate"), "interpret");});
test("interpretati -> interpret", function() {deepEqual( Stem("interpretati"), "interpret");});
test("interpretativi -> interpret", function() {deepEqual( Stem("interpretativi"), "interpret");});
test("interpretato -> interpret", function() {deepEqual( Stem("interpretato"), "interpret");});
test("interpretazione -> interpret", function() {deepEqual( Stem("interpretazione"), "interpret");});
test("interpretazioni -> interpret", function() {deepEqual( Stem("interpretazioni"), "interpret");});
test("interprete -> interpr", function() {deepEqual( Stem("interprete"), "interpr");});
test("interpreterà -> interpret", function() {deepEqual( Stem("interpreterà"), "interpret");});
test("interpreti -> interpret", function() {deepEqual( Stem("interpreti"), "interpret");});
test("interroga -> interrog", function() {deepEqual( Stem("interroga"), "interrog");});
test("interrogando -> interrog", function() {deepEqual( Stem("interrogando"), "interrog");});
test("interrogante -> interrog", function() {deepEqual( Stem("interrogante"), "interrog");});
test("interrogare -> interrog", function() {deepEqual( Stem("interrogare"), "interrog");});
test("interrogarla -> interrog", function() {deepEqual( Stem("interrogarla"), "interrog");});
test("interrogarsi -> interrog", function() {deepEqual( Stem("interrogarsi"), "interrog");});
test("interrogata -> interrog", function() {deepEqual( Stem("interrogata"), "interrog");});
test("interrogate -> interrog", function() {deepEqual( Stem("interrogate"), "interrog");});
test("interrogati -> interrog", function() {deepEqual( Stem("interrogati"), "interrog");});
test("interrogativi -> interrog", function() {deepEqual( Stem("interrogativi"), "interrog");});
test("interrogativo -> interrog", function() {deepEqual( Stem("interrogativo"), "interrog");});
test("interrogato -> interrog", function() {deepEqual( Stem("interrogato"), "interrog");});
test("interrogatore -> interrog", function() {deepEqual( Stem("interrogatore"), "interrog");});
test("interrogatori -> interrog", function() {deepEqual( Stem("interrogatori"), "interrog");});
test("interrogatòri -> interrogatòr", function() {deepEqual( Stem("interrogatòri"), "interrogatòr");});
test("interrogatorio -> interrogator", function() {deepEqual( Stem("interrogatorio"), "interrogator");});
test("interrogava -> interrog", function() {deepEqual( Stem("interrogava"), "interrog");});
test("interrogavano -> interrog", function() {deepEqual( Stem("interrogavano"), "interrog");});
test("interrogazione -> interrog", function() {deepEqual( Stem("interrogazione"), "interrog");});
test("interrogazioni -> interrog", function() {deepEqual( Stem("interrogazioni"), "interrog");});
test("interrogò -> interrog", function() {deepEqual( Stem("interrogò"), "interrog");});
test("interrompendo -> interromp", function() {deepEqual( Stem("interrompendo"), "interromp");});
test("interrompendolo -> interromp", function() {deepEqual( Stem("interrompendolo"), "interromp");});
test("interrompere -> interromp", function() {deepEqual( Stem("interrompere"), "interromp");});
test("interrompeva -> interromp", function() {deepEqual( Stem("interrompeva"), "interromp");});
test("interrotta -> interrott", function() {deepEqual( Stem("interrotta"), "interrott");});
test("interrotte -> interrott", function() {deepEqual( Stem("interrotte"), "interrott");});
test("interrotti -> interrott", function() {deepEqual( Stem("interrotti"), "interrott");});
test("interrotto -> interrott", function() {deepEqual( Stem("interrotto"), "interrott");});
test("interruppe -> interrupp", function() {deepEqual( Stem("interruppe"), "interrupp");});
test("interruppero -> interrupper", function() {deepEqual( Stem("interruppero"), "interrupper");});
test("interruzione -> interru", function() {deepEqual( Stem("interruzione"), "interru");});
test("interruzioni -> interru", function() {deepEqual( Stem("interruzioni"), "interru");});
test("interscambio -> interscamb", function() {deepEqual( Stem("interscambio"), "interscamb");});
test("intersind -> intersind", function() {deepEqual( Stem("intersind"), "intersind");});
test("intersos -> intersos", function() {deepEqual( Stem("intersos"), "intersos");});
test("interssi -> interss", function() {deepEqual( Stem("interssi"), "interss");});
test("interurbani -> interurban", function() {deepEqual( Stem("interurbani"), "interurban");});
test("intervallare -> intervall", function() {deepEqual( Stem("intervallare"), "intervall");});
test("intervalli -> intervall", function() {deepEqual( Stem("intervalli"), "intervall");});
test("intervallo -> intervall", function() {deepEqual( Stem("intervallo"), "intervall");});
test("intervenendo -> interven", function() {deepEqual( Stem("intervenendo"), "interven");});
test("intervenga -> interveng", function() {deepEqual( Stem("intervenga"), "interveng");});
test("intervenire -> interven", function() {deepEqual( Stem("intervenire"), "interven");});
test("intervenirvi -> interven", function() {deepEqual( Stem("intervenirvi"), "interven");});
test("interventi -> intervent", function() {deepEqual( Stem("interventi"), "intervent");});
test("intervento -> intervent", function() {deepEqual( Stem("intervento"), "intervent");});
test("intervenuta -> interven", function() {deepEqual( Stem("intervenuta"), "interven");});
test("intervenute -> interven", function() {deepEqual( Stem("intervenute"), "interven");});
test("intervenuti -> interven", function() {deepEqual( Stem("intervenuti"), "interven");});
test("intervenuto -> interven", function() {deepEqual( Stem("intervenuto"), "interven");});
test("interverrà -> interverr", function() {deepEqual( Stem("interverrà"), "interverr");});
test("interverranno -> interverrann", function() {deepEqual( Stem("interverranno"), "interverrann");});
test("interviene -> intervien", function() {deepEqual( Stem("interviene"), "intervien");});
test("intervista -> interv", function() {deepEqual( Stem("intervista"), "interv");});
test("intervistando -> intervist", function() {deepEqual( Stem("intervistando"), "intervist");});
test("intervistarlo -> intervist", function() {deepEqual( Stem("intervistarlo"), "intervist");});
test("intervistati -> intervist", function() {deepEqual( Stem("intervistati"), "intervist");});
test("intervistato -> intervist", function() {deepEqual( Stem("intervistato"), "intervist");});
test("interviste -> interv", function() {deepEqual( Stem("interviste"), "interv");});
test("intesa -> intes", function() {deepEqual( Stem("intesa"), "intes");});
test("intese -> intes", function() {deepEqual( Stem("intese"), "intes");});
test("inteso -> intes", function() {deepEqual( Stem("inteso"), "intes");});
test("intestata -> intest", function() {deepEqual( Stem("intestata"), "intest");});
test("intestato -> intest", function() {deepEqual( Stem("intestato"), "intest");});
test("intima -> intim", function() {deepEqual( Stem("intima"), "intim");});
test("intimar -> intim", function() {deepEqual( Stem("intimar"), "intim");});
test("intimargli -> intim", function() {deepEqual( Stem("intimargli"), "intim");});
test("intimarono -> intim", function() {deepEqual( Stem("intimarono"), "intim");});
test("intimarvi -> intim", function() {deepEqual( Stem("intimarvi"), "intim");});
test("intimate -> intim", function() {deepEqual( Stem("intimate"), "intim");});
test("intimato -> intim", function() {deepEqual( Stem("intimato"), "intim");});
test("intimatogli -> intimatogl", function() {deepEqual( Stem("intimatogli"), "intimatogl");});
test("intimava -> intim", function() {deepEqual( Stem("intimava"), "intim");});
test("intimavan -> intimavan", function() {deepEqual( Stem("intimavan"), "intimavan");});
test("intimazione -> intim", function() {deepEqual( Stem("intimazione"), "intim");});
test("intimazioni -> intim", function() {deepEqual( Stem("intimazioni"), "intim");});
test("intimi -> intim", function() {deepEqual( Stem("intimi"), "intim");});
test("intimità -> intim", function() {deepEqual( Stem("intimità"), "intim");});
test("intimo -> intim", function() {deepEqual( Stem("intimo"), "intim");});
test("intimò -> intim", function() {deepEqual( Stem("intimò"), "intim");});
test("intirizzir -> intirizz", function() {deepEqual( Stem("intirizzir"), "intirizz");});
test("intirizzito -> intirizz", function() {deepEqual( Stem("intirizzito"), "intirizz");});
test("intitolato -> intitol", function() {deepEqual( Stem("intitolato"), "intitol");});
test("intollerabile -> intoller", function() {deepEqual( Stem("intollerabile"), "intoller");});
test("intollerabili -> intoller", function() {deepEqual( Stem("intollerabili"), "intoller");});
test("intolleranza -> intoller", function() {deepEqual( Stem("intolleranza"), "intoller");});
test("intonacati -> intonac", function() {deepEqual( Stem("intonacati"), "intonac");});
test("intonar -> inton", function() {deepEqual( Stem("intonar"), "inton");});
test("intonare -> inton", function() {deepEqual( Stem("intonare"), "inton");});
test("intonato -> inton", function() {deepEqual( Stem("intonato"), "inton");});
test("intonazione -> inton", function() {deepEqual( Stem("intonazione"), "inton");});
test("intonò -> inton", function() {deepEqual( Stem("intonò"), "inton");});
test("intoppi -> intopp", function() {deepEqual( Stem("intoppi"), "intopp");});
test("intoppo -> intopp", function() {deepEqual( Stem("intoppo"), "intopp");});
test("intorbidando -> intorbid", function() {deepEqual( Stem("intorbidando"), "intorbid");});
test("intorbidarla -> intorbid", function() {deepEqual( Stem("intorbidarla"), "intorbid");});
test("intorbidarsi -> intorbid", function() {deepEqual( Stem("intorbidarsi"), "intorbid");});
test("intormentite -> intorment", function() {deepEqual( Stem("intormentite"), "intorment");});
test("intorno -> intorn", function() {deepEqual( Stem("intorno"), "intorn");});
test("intossicazione -> intoss", function() {deepEqual( Stem("intossicazione"), "intoss");});
test("intra -> intra", function() {deepEqual( Stem("intra"), "intra");});
test("intralciano -> intralc", function() {deepEqual( Stem("intralciano"), "intralc");});
test("intralciarono -> intralc", function() {deepEqual( Stem("intralciarono"), "intralc");});
test("intralciata -> intralc", function() {deepEqual( Stem("intralciata"), "intralc");});
test("intralciate -> intralc", function() {deepEqual( Stem("intralciate"), "intralc");});
test("intralciati -> intralc", function() {deepEqual( Stem("intralciati"), "intralc");});
test("intralciato -> intralc", function() {deepEqual( Stem("intralciato"), "intralc");});
test("intransigente -> intransigent", function() {deepEqual( Stem("intransigente"), "intransigent");});
test("intransigenti -> intransigent", function() {deepEqual( Stem("intransigenti"), "intransigent");});
test("intraprendenti -> intraprendent", function() {deepEqual( Stem("intraprendenti"), "intraprendent");});
test("intraprendenza -> intraprendent", function() {deepEqual( Stem("intraprendenza"), "intraprendent");});
test("intraprender -> intraprender", function() {deepEqual( Stem("intraprender"), "intraprender");});
test("intraprendere -> intraprend", function() {deepEqual( Stem("intraprendere"), "intraprend");});
test("intrapresa -> intrapres", function() {deepEqual( Stem("intrapresa"), "intrapres");});
test("intraprese -> intrapres", function() {deepEqual( Stem("intraprese"), "intrapres");});
test("intrapreso -> intrapres", function() {deepEqual( Stem("intrapreso"), "intrapres");});
test("intrattabili -> intratt", function() {deepEqual( Stem("intrattabili"), "intratt");});
test("intrattenersi -> intratten", function() {deepEqual( Stem("intrattenersi"), "intratten");});
test("intrattenuta -> intratten", function() {deepEqual( Stem("intrattenuta"), "intratten");});
test("intrattenuto -> intratten", function() {deepEqual( Stem("intrattenuto"), "intratten");});
test("intrecciate -> intrecc", function() {deepEqual( Stem("intrecciate"), "intrecc");});
test("intrecciati -> intrecc", function() {deepEqual( Stem("intrecciati"), "intrecc");});
test("intreccio -> intrecc", function() {deepEqual( Stem("intreccio"), "intrecc");});
test("intreodurre -> intreodurr", function() {deepEqual( Stem("intreodurre"), "intreodurr");});
test("intrepidezza -> intrepidezz", function() {deepEqual( Stem("intrepidezza"), "intrepidezz");});
test("intrepidi -> intrepid", function() {deepEqual( Stem("intrepidi"), "intrepid");});
test("intrepido -> intrepid", function() {deepEqual( Stem("intrepido"), "intrepid");});
test("intridere -> intrid", function() {deepEqual( Stem("intridere"), "intrid");});
test("intriga -> intrig", function() {deepEqual( Stem("intriga"), "intrig");});
test("intrigando -> intrig", function() {deepEqual( Stem("intrigando"), "intrig");});
test("intrigato -> intrig", function() {deepEqual( Stem("intrigato"), "intrig");});
test("intrighi -> intrig", function() {deepEqual( Stem("intrighi"), "intrig");});
test("intrigo -> intrig", function() {deepEqual( Stem("intrigo"), "intrig");});
test("intrinsichezza -> intrinsichezz", function() {deepEqual( Stem("intrinsichezza"), "intrinsichezz");});
test("intrise -> intris", function() {deepEqual( Stem("intrise"), "intris");});
test("intro -> intro", function() {deepEqual( Stem("intro"), "intro");});
test("introbbio -> introbb", function() {deepEqual( Stem("introbbio"), "introbb");});
test("introdotta -> introdott", function() {deepEqual( Stem("introdotta"), "introdott");});
test("introdotte -> introdott", function() {deepEqual( Stem("introdotte"), "introdott");});
test("introdotti -> introdott", function() {deepEqual( Stem("introdotti"), "introdott");});
test("introdotto -> introdott", function() {deepEqual( Stem("introdotto"), "introdott");});
test("introduca -> introduc", function() {deepEqual( Stem("introduca"), "introduc");});
test("introduce -> introduc", function() {deepEqual( Stem("introduce"), "introduc");});
test("introducendo -> introduc", function() {deepEqual( Stem("introducendo"), "introduc");});
test("introducendone -> introduc", function() {deepEqual( Stem("introducendone"), "introduc");});
test("introduceva -> introduc", function() {deepEqual( Stem("introduceva"), "introduc");});
test("introducevano -> introduc", function() {deepEqual( Stem("introducevano"), "introduc");});
test("introdurle -> introdurl", function() {deepEqual( Stem("introdurle"), "introdurl");});
test("introdurlo -> introdurl", function() {deepEqual( Stem("introdurlo"), "introdurl");});
test("introdurre -> introdurr", function() {deepEqual( Stem("introdurre"), "introdurr");});
test("introdursi -> introdurs", function() {deepEqual( Stem("introdursi"), "introdurs");});
test("introdurvi -> introdurv", function() {deepEqual( Stem("introdurvi"), "introdurv");});
test("introdusse -> introduss", function() {deepEqual( Stem("introdusse"), "introduss");});
test("introduttiva -> introdutt", function() {deepEqual( Stem("introduttiva"), "introdutt");});
test("introduzione -> introdu", function() {deepEqual( Stem("introduzione"), "introdu");});
test("intromesso -> intromess", function() {deepEqual( Stem("intromesso"), "intromess");});
test("intromette -> intromett", function() {deepEqual( Stem("intromette"), "intromett");});
test("intromettermi -> intromett", function() {deepEqual( Stem("intromettermi"), "intromett");});
test("intromettersi -> intromett", function() {deepEqual( Stem("intromettersi"), "intromett");});
test("intrometteva -> intromett", function() {deepEqual( Stem("intrometteva"), "intromett");});
test("intuisce -> intu", function() {deepEqual( Stem("intuisce"), "intu");});
test("intuito -> intu", function() {deepEqual( Stem("intuito"), "intu");});
test("inuguale -> inugual", function() {deepEqual( Stem("inuguale"), "inugual");});
test("inuguali -> inugual", function() {deepEqual( Stem("inuguali"), "inugual");});
test("inumiditi -> inumid", function() {deepEqual( Stem("inumiditi"), "inumid");});
test("inusuale -> inusual", function() {deepEqual( Stem("inusuale"), "inusual");});
test("inutile -> inutil", function() {deepEqual( Stem("inutile"), "inutil");});
test("inutili -> inutil", function() {deepEqual( Stem("inutili"), "inutil");});
test("inutilmente -> inutil", function() {deepEqual( Stem("inutilmente"), "inutil");});
test("invadere -> invad", function() {deepEqual( Stem("invadere"), "invad");});
test("invadeva -> invad", function() {deepEqual( Stem("invadeva"), "invad");});
test("invaghito -> invag", function() {deepEqual( Stem("invaghito"), "invag");});
test("invalicabile -> invalic", function() {deepEqual( Stem("invalicabile"), "invalic");});
test("invalida -> invalid", function() {deepEqual( Stem("invalida"), "invalid");});
test("invalidità -> invalid", function() {deepEqual( Stem("invalidità"), "invalid");});
test("invanisce -> invan", function() {deepEqual( Stem("invanisce"), "invan");});
test("invano -> invan", function() {deepEqual( Stem("invano"), "invan");});
test("invariate -> invar", function() {deepEqual( Stem("invariate"), "invar");});
test("invariati -> invar", function() {deepEqual( Stem("invariati"), "invar");});
test("invariato -> invar", function() {deepEqual( Stem("invariato"), "invar");});
test("invase -> invas", function() {deepEqual( Stem("invase"), "invas");});
test("invasero -> invaser", function() {deepEqual( Stem("invasero"), "invaser");});
test("invasi -> invas", function() {deepEqual( Stem("invasi"), "invas");});
test("invasion -> invasion", function() {deepEqual( Stem("invasion"), "invasion");});
test("invasione -> invasion", function() {deepEqual( Stem("invasione"), "invasion");});
test("invaso -> invas", function() {deepEqual( Stem("invaso"), "invas");});
test("invasore -> invasor", function() {deepEqual( Stem("invasore"), "invasor");});
test("invasori -> invasor", function() {deepEqual( Stem("invasori"), "invasor");});
test("invecchiare -> invecc", function() {deepEqual( Stem("invecchiare"), "invecc");});
test("invecchiati -> invecc", function() {deepEqual( Stem("invecchiati"), "invecc");});
test("invecchiato -> invecc", function() {deepEqual( Stem("invecchiato"), "invecc");});
test("invece -> invec", function() {deepEqual( Stem("invece"), "invec");});
test("inveire -> inve", function() {deepEqual( Stem("inveire"), "inve");});
test("inveisce -> inve", function() {deepEqual( Stem("inveisce"), "inve");});
test("inveito -> inve", function() {deepEqual( Stem("inveito"), "inve");});
test("invelenita -> invelen", function() {deepEqual( Stem("invelenita"), "invelen");});
test("inventano -> invent", function() {deepEqual( Stem("inventano"), "invent");});
test("inventare -> invent", function() {deepEqual( Stem("inventare"), "invent");});
test("inventarsi -> invent", function() {deepEqual( Stem("inventarsi"), "invent");});
test("inventata -> invent", function() {deepEqual( Stem("inventata"), "invent");});
test("inventate -> invent", function() {deepEqual( Stem("inventate"), "invent");});
test("inventi -> invent", function() {deepEqual( Stem("inventi"), "invent");});
test("inventus -> inventus", function() {deepEqual( Stem("inventus"), "inventus");});
test("invenzione -> invenzion", function() {deepEqual( Stem("invenzione"), "invenzion");});
test("invenzioni -> invenzion", function() {deepEqual( Stem("invenzioni"), "invenzion");});
test("inverigo -> inverig", function() {deepEqual( Stem("inverigo"), "inverig");});
test("invernale -> invernal", function() {deepEqual( Stem("invernale"), "invernal");});
test("invernali -> invernal", function() {deepEqual( Stem("invernali"), "invernal");});
test("inverni -> invern", function() {deepEqual( Stem("inverni"), "invern");});
test("invernizzi -> invernizz", function() {deepEqual( Stem("invernizzi"), "invernizz");});
test("inverno -> invern", function() {deepEqual( Stem("inverno"), "invern");});
test("inversione -> inversion", function() {deepEqual( Stem("inversione"), "inversion");});
test("inverta -> invert", function() {deepEqual( Stem("inverta"), "invert");});
test("invertite -> invert", function() {deepEqual( Stem("invertite"), "invert");});
test("investa -> invest", function() {deepEqual( Stem("investa"), "invest");});
test("investe -> invest", function() {deepEqual( Stem("investe"), "invest");});
test("investendo -> invest", function() {deepEqual( Stem("investendo"), "invest");});
test("investigativa -> investig", function() {deepEqual( Stem("investigativa"), "investig");});
test("investigative -> investig", function() {deepEqual( Stem("investigative"), "investig");});
test("investigatori -> investig", function() {deepEqual( Stem("investigatori"), "investig");});
test("investigazione -> investig", function() {deepEqual( Stem("investigazione"), "investig");});
test("investigazioni -> investig", function() {deepEqual( Stem("investigazioni"), "investig");});
test("investimenti -> invest", function() {deepEqual( Stem("investimenti"), "invest");});
test("investimento -> invest", function() {deepEqual( Stem("investimento"), "invest");});
test("investimese -> investimes", function() {deepEqual( Stem("investimese"), "investimes");});
test("investire -> invest", function() {deepEqual( Stem("investire"), "invest");});
test("investisse -> investiss", function() {deepEqual( Stem("investisse"), "investiss");});
test("investiti -> invest", function() {deepEqual( Stem("investiti"), "invest");});
test("investito -> invest", function() {deepEqual( Stem("investito"), "invest");});
test("investitori -> investitor", function() {deepEqual( Stem("investitori"), "investitor");});
test("investitura -> investitur", function() {deepEqual( Stem("investitura"), "investitur");});
test("investiva -> invest", function() {deepEqual( Stem("investiva"), "invest");});
test("investment -> investment", function() {deepEqual( Stem("investment"), "investment");});
test("inveterate -> inveter", function() {deepEqual( Stem("inveterate"), "inveter");});
test("inveterato -> inveter", function() {deepEqual( Stem("inveterato"), "inveter");});
test("invettiva -> invett", function() {deepEqual( Stem("invettiva"), "invett");});
test("invevitabile -> invevit", function() {deepEqual( Stem("invevitabile"), "invevit");});
test("invia -> invi", function() {deepEqual( Stem("invia"), "invi");});
test("inviando -> invi", function() {deepEqual( Stem("inviando"), "invi");});
test("inviare -> invi", function() {deepEqual( Stem("inviare"), "invi");});
test("inviata -> invi", function() {deepEqual( Stem("inviata"), "invi");});
test("inviatagli -> inviatagl", function() {deepEqual( Stem("inviatagli"), "inviatagl");});
test("inviate -> invi", function() {deepEqual( Stem("inviate"), "invi");});
test("inviati -> invi", function() {deepEqual( Stem("inviati"), "invi");});
test("inviatì -> inviat", function() {deepEqual( Stem("inviatì"), "inviat");});
test("inviato -> invi", function() {deepEqual( Stem("inviato"), "invi");});
test("invicta -> invict", function() {deepEqual( Stem("invicta"), "invict");});
test("invidia -> invid", function() {deepEqual( Stem("invidia"), "invid");});
test("invidiabile -> invid", function() {deepEqual( Stem("invidiabile"), "invid");});
test("invidiabili -> invid", function() {deepEqual( Stem("invidiabili"), "invid");});
test("invidiando -> invid", function() {deepEqual( Stem("invidiando"), "invid");});
test("invidiandole -> invid", function() {deepEqual( Stem("invidiandole"), "invid");});
test("invidiata -> invid", function() {deepEqual( Stem("invidiata"), "invid");});
test("invidiava -> invid", function() {deepEqual( Stem("invidiava"), "invid");});
test("invidie -> invid", function() {deepEqual( Stem("invidie"), "invid");});
test("invidioso -> invid", function() {deepEqual( Stem("invidioso"), "invid");});
test("invigilare -> invigil", function() {deepEqual( Stem("invigilare"), "invigil");});
test("invigilavano -> invigil", function() {deepEqual( Stem("invigilavano"), "invigil");});
test("invii -> invi", function() {deepEqual( Stem("invii"), "invi");});
test("invincibilmente -> invincibil", function() {deepEqual( Stem("invincibilmente"), "invincibil");});
test("invio -> invi", function() {deepEqual( Stem("invio"), "invi");});
test("inviolabile -> inviol", function() {deepEqual( Stem("inviolabile"), "inviol");});
test("inviolato -> inviol", function() {deepEqual( Stem("inviolato"), "inviol");});
test("invischiato -> invisc", function() {deepEqual( Stem("invischiato"), "invisc");});
test("invisibile -> invis", function() {deepEqual( Stem("invisibile"), "invis");});
test("invisibilè -> invisibil", function() {deepEqual( Stem("invisibilè"), "invisibil");});
test("invisibili -> invis", function() {deepEqual( Stem("invisibili"), "invis");});
test("invita -> invit", function() {deepEqual( Stem("invita"), "invit");});
test("invitando -> invit", function() {deepEqual( Stem("invitando"), "invit");});
test("invitante -> invit", function() {deepEqual( Stem("invitante"), "invit");});
test("invitare -> invit", function() {deepEqual( Stem("invitare"), "invit");});
test("invitarla -> invit", function() {deepEqual( Stem("invitarla"), "invit");});
test("invitarlo -> invit", function() {deepEqual( Stem("invitarlo"), "invit");});
test("invitarono -> invit", function() {deepEqual( Stem("invitarono"), "invit");});
test("invitata -> invit", function() {deepEqual( Stem("invitata"), "invit");});
test("invitati -> invit", function() {deepEqual( Stem("invitati"), "invit");});
test("invitato -> invit", function() {deepEqual( Stem("invitato"), "invit");});
test("invitava -> invit", function() {deepEqual( Stem("invitava"), "invit");});
test("inviti -> invit", function() {deepEqual( Stem("inviti"), "invit");});
test("invito -> invit", function() {deepEqual( Stem("invito"), "invit");});
test("invitò -> invit", function() {deepEqual( Stem("invitò"), "invit");});
test("invitta -> invitt", function() {deepEqual( Stem("invitta"), "invitt");});
test("invoca -> invoc", function() {deepEqual( Stem("invoca"), "invoc");});
test("invocano -> invoc", function() {deepEqual( Stem("invocano"), "invoc");});
test("invocar -> invoc", function() {deepEqual( Stem("invocar"), "invoc");});
test("invocare -> invoc", function() {deepEqual( Stem("invocare"), "invoc");});
test("invocato -> invoc", function() {deepEqual( Stem("invocato"), "invoc");});
test("invocazione -> invoc", function() {deepEqual( Stem("invocazione"), "invoc");});
test("invochiamo -> invoc", function() {deepEqual( Stem("invochiamo"), "invoc");});
test("invogliati -> invogl", function() {deepEqual( Stem("invogliati"), "invogl");});
test("invogliava -> invogl", function() {deepEqual( Stem("invogliava"), "invogl");});
test("involandosi -> invol", function() {deepEqual( Stem("involandosi"), "invol");});
test("involontaria -> involontar", function() {deepEqual( Stem("involontaria"), "involontar");});
test("involontariamente -> involontar", function() {deepEqual( Stem("involontariamente"), "involontar");});
test("involta -> involt", function() {deepEqual( Stem("involta"), "involt");});
test("involtati -> involt", function() {deepEqual( Stem("involtati"), "involt");});
test("involtato -> involt", function() {deepEqual( Stem("involtato"), "involt");});
test("involte -> involt", function() {deepEqual( Stem("involte"), "involt");});
test("involtino -> involtin", function() {deepEqual( Stem("involtino"), "involtin");});
test("involto -> involt", function() {deepEqual( Stem("involto"), "involt");});
test("involuzione -> involu", function() {deepEqual( Stem("involuzione"), "involu");});
test("inxs -> inxs", function() {deepEqual( Stem("inxs"), "inxs");});
test("inzaccherassero -> inzaccher", function() {deepEqual( Stem("inzaccherassero"), "inzaccher");});
test("inzaghi -> inzag", function() {deepEqual( Stem("inzaghi"), "inzag");});
test("inziativa -> inziat", function() {deepEqual( Stem("inziativa"), "inziat");});
test("inziative -> inziat", function() {deepEqual( Stem("inziative"), "inziat");});
test("inzio -> inzi", function() {deepEqual( Stem("inzio"), "inzi");});
test("inzuppata -> inzupp", function() {deepEqual( Stem("inzuppata"), "inzupp");});
test("inzuppate -> inzupp", function() {deepEqual( Stem("inzuppate"), "inzupp");});
test("inzuppato -> inzupp", function() {deepEqual( Stem("inzuppato"), "inzupp");});
test("io -> io", function() {deepEqual( Stem("io"), "io");});
test("ioniche -> ionic", function() {deepEqual( Stem("ioniche"), "ionic");});
test("ionici -> ionic", function() {deepEqual( Stem("ionici"), "ionic");});
test("ionio -> ion", function() {deepEqual( Stem("ionio"), "ion");});
test("ionta -> iont", function() {deepEqual( Stem("ionta"), "iont");});
test("iosa -> ios", function() {deepEqual( Stem("iosa"), "ios");});
test("iourt -> iourt", function() {deepEqual( Stem("iourt"), "iourt");});
test("iper -> iper", function() {deepEqual( Stem("iper"), "iper");});
test("ipertrofia -> ipertrof", function() {deepEqual( Stem("ipertrofia"), "ipertrof");});
test("ipi -> ipi", function() {deepEqual( Stem("ipi"), "ipi");});
test("ipnotico -> ipnot", function() {deepEqual( Stem("ipnotico"), "ipnot");});
test("ipocrisia -> ipocris", function() {deepEqual( Stem("ipocrisia"), "ipocris");});
test("ipocrita -> ipocr", function() {deepEqual( Stem("ipocrita"), "ipocr");});
test("ipocrite -> ipocr", function() {deepEqual( Stem("ipocrite"), "ipocr");});
test("ipofisi -> ipofis", function() {deepEqual( Stem("ipofisi"), "ipofis");});
test("ipotesi -> ipotes", function() {deepEqual( Stem("ipotesi"), "ipotes");});
test("ipotizza -> ipotizz", function() {deepEqual( Stem("ipotizza"), "ipotizz");});
test("ipotizzare -> ipotizz", function() {deepEqual( Stem("ipotizzare"), "ipotizz");});
test("ipotizzato -> ipotizz", function() {deepEqual( Stem("ipotizzato"), "ipotizz");});
test("ipotizzava -> ipotizz", function() {deepEqual( Stem("ipotizzava"), "ipotizz");});
test("ippiche -> ippic", function() {deepEqual( Stem("ippiche"), "ippic");});
test("ipsa -> ipsa", function() {deepEqual( Stem("ipsa"), "ipsa");});
test("ipsilon -> ipsilon", function() {deepEqual( Stem("ipsilon"), "ipsilon");});
test("ir -> ir", function() {deepEqual( Stem("ir"), "ir");});
test("ira -> ira", function() {deepEqual( Stem("ira"), "ira");});
test("irachena -> irachen", function() {deepEqual( Stem("irachena"), "irachen");});
test("iracheno -> irachen", function() {deepEqual( Stem("iracheno"), "irachen");});
test("iraconda -> iracond", function() {deepEqual( Stem("iraconda"), "iracond");});
test("iracondo -> iracond", function() {deepEqual( Stem("iracondo"), "iracond");});
test("iran -> iran", function() {deepEqual( Stem("iran"), "iran");});
test("iraniana -> iranian", function() {deepEqual( Stem("iraniana"), "iranian");});
test("iraniano -> iran", function() {deepEqual( Stem("iraniano"), "iran");});
test("iraq -> iraq", function() {deepEqual( Stem("iraq"), "iraq");});
test("ire -> ire", function() {deepEqual( Stem("ire"), "ire");});
test("irene -> iren", function() {deepEqual( Stem("irene"), "iren");});
test("irfis -> irfis", function() {deepEqual( Stem("irfis"), "irfis");});
test("iri -> iri", function() {deepEqual( Stem("iri"), "iri");});
test("irina -> irin", function() {deepEqual( Stem("irina"), "irin");});
test("irlanda -> irland", function() {deepEqual( Stem("irlanda"), "irland");});
test("irlandese -> irlandes", function() {deepEqual( Stem("irlandese"), "irlandes");});
test("irna -> irna", function() {deepEqual( Stem("irna"), "irna");});
test("irnà -> irnà", function() {deepEqual( Stem("irnà"), "irnà");});
test("ironia -> iron", function() {deepEqual( Stem("ironia"), "iron");});
test("ironicamente -> iron", function() {deepEqual( Stem("ironicamente"), "iron");});
test("ironico -> iron", function() {deepEqual( Stem("ironico"), "iron");});
test("irpef -> irpef", function() {deepEqual( Stem("irpef"), "irpef");});
test("irpeg -> irpeg", function() {deepEqual( Stem("irpeg"), "irpeg");});
test("irpino -> irpin", function() {deepEqual( Stem("irpino"), "irpin");});
test("irragionevole -> irragionevol", function() {deepEqual( Stem("irragionevole"), "irragionevol");});
test("irrazionali -> irrazional", function() {deepEqual( Stem("irrazionali"), "irrazional");});
test("irrefragabile -> irrefrag", function() {deepEqual( Stem("irrefragabile"), "irrefrag");});
test("irregolare -> irregol", function() {deepEqual( Stem("irregolare"), "irregol");});
test("irregolari -> irregolar", function() {deepEqual( Stem("irregolari"), "irregolar");});
test("irregolarità -> irregolar", function() {deepEqual( Stem("irregolarità"), "irregolar");});
test("irremovibile -> irremov", function() {deepEqual( Stem("irremovibile"), "irremov");});
test("irreparabile -> irrepar", function() {deepEqual( Stem("irreparabile"), "irrepar");});
test("irreprensibile -> irreprens", function() {deepEqual( Stem("irreprensibile"), "irreprens");});
test("irresistibile -> irresist", function() {deepEqual( Stem("irresistibile"), "irresist");});
test("irresolutezza -> irresolutezz", function() {deepEqual( Stem("irresolutezza"), "irresolutezz");});
test("irresoluto -> irresol", function() {deepEqual( Stem("irresoluto"), "irresol");});
test("irresoluzione -> irresolu", function() {deepEqual( Stem("irresoluzione"), "irresolu");});
test("irrespirabili -> irrespir", function() {deepEqual( Stem("irrespirabili"), "irrespir");});
test("irresponsabile -> irrespons", function() {deepEqual( Stem("irresponsabile"), "irrespons");});
test("irresponsabili -> irrespons", function() {deepEqual( Stem("irresponsabili"), "irrespons");});
test("irresponsabilità -> irrespons", function() {deepEqual( Stem("irresponsabilità"), "irrespons");});
test("irreversibile -> irrevers", function() {deepEqual( Stem("irreversibile"), "irrevers");});
test("irreversibilmente -> irreversibil", function() {deepEqual( Stem("irreversibilmente"), "irreversibil");});
test("irrevocabile -> irrevoc", function() {deepEqual( Stem("irrevocabile"), "irrevoc");});
test("irrevocabilmente -> irrevocabil", function() {deepEqual( Stem("irrevocabilmente"), "irrevocabil");});
test("irriducibili -> irriduc", function() {deepEqual( Stem("irriducibili"), "irriduc");});
test("irrigate -> irrig", function() {deepEqual( Stem("irrigate"), "irrig");});
test("irrilevante -> irrilev", function() {deepEqual( Stem("irrilevante"), "irrilev");});
test("irrisa -> irris", function() {deepEqual( Stem("irrisa"), "irris");});
test("irrisolti -> irrisolt", function() {deepEqual( Stem("irrisolti"), "irrisolt");});
test("irritante -> irrit", function() {deepEqual( Stem("irritante"), "irrit");});
test("irritarsi -> irrit", function() {deepEqual( Stem("irritarsi"), "irrit");});
test("irritata -> irrit", function() {deepEqual( Stem("irritata"), "irrit");});
test("irritati -> irrit", function() {deepEqual( Stem("irritati"), "irrit");});
test("irritato -> irrit", function() {deepEqual( Stem("irritato"), "irrit");});
test("irrituale -> irritual", function() {deepEqual( Stem("irrituale"), "irritual");});
test("irritualità -> irritual", function() {deepEqual( Stem("irritualità"), "irritual");});
test("irrogate -> irrog", function() {deepEqual( Stem("irrogate"), "irrog");});
test("irruenza -> irruenz", function() {deepEqual( Stem("irruenza"), "irruenz");});
test("irruzione -> irruzion", function() {deepEqual( Stem("irruzione"), "irruzion");});
test("irsute -> irsut", function() {deepEqual( Stem("irsute"), "irsut");});
test("irti -> irti", function() {deepEqual( Stem("irti"), "irti");});
test("isabel -> isabel", function() {deepEqual( Stem("isabel"), "isabel");});
test("isaia -> isai", function() {deepEqual( Stem("isaia"), "isai");});
test("isalmici -> isalm", function() {deepEqual( Stem("isalmici"), "isalm");});
test("isbaglio -> isbagl", function() {deepEqual( Stem("isbaglio"), "isbagl");});
test("isbieco -> isbiec", function() {deepEqual( Stem("isbieco"), "isbiec");});
test("isbrigarsi -> isbrig", function() {deepEqual( Stem("isbrigarsi"), "isbrig");});
test("iscacci -> iscacc", function() {deepEqual( Stem("iscacci"), "iscacc");});
test("iscacciar -> iscacc", function() {deepEqual( Stem("iscacciar"), "iscacc");});
test("iscandolo -> iscandol", function() {deepEqual( Stem("iscandolo"), "iscandol");});
test("iscansar -> iscans", function() {deepEqual( Stem("iscansar"), "iscans");});
test("iscansare -> iscans", function() {deepEqual( Stem("iscansare"), "iscans");});
test("iscansarli -> iscans", function() {deepEqual( Stem("iscansarli"), "iscans");});
test("iscapitarci -> iscapit", function() {deepEqual( Stem("iscapitarci"), "iscapit");});
test("iscapolarsene -> iscapol", function() {deepEqual( Stem("iscapolarsene"), "iscapol");});
test("iscappasse -> iscapp", function() {deepEqual( Stem("iscappasse"), "iscapp");});
test("iscapperà -> iscapp", function() {deepEqual( Stem("iscapperà"), "iscapp");});
test("isceglier -> isceglier", function() {deepEqual( Stem("isceglier"), "isceglier");});
test("ischerno -> ischern", function() {deepEqual( Stem("ischerno"), "ischern");});
test("ischerzo -> ischerz", function() {deepEqual( Stem("ischerzo"), "ischerz");});
test("ischia -> ischi", function() {deepEqual( Stem("ischia"), "ischi");});
test("ischiamazzi -> ischiamazz", function() {deepEqual( Stem("ischiamazzi"), "ischiamazz");});
test("ischiera -> ischier", function() {deepEqual( Stem("ischiera"), "ischier");});
test("ischiuma -> ischium", function() {deepEqual( Stem("ischiuma"), "ischium");});
test("isconficcarla -> isconficc", function() {deepEqual( Stem("isconficcarla"), "isconficc");});
test("iscontare -> iscont", function() {deepEqual( Stem("iscontare"), "iscont");});
test("isconto -> iscont", function() {deepEqual( Stem("isconto"), "iscont");});
test("iscoprire -> iscopr", function() {deepEqual( Stem("iscoprire"), "iscopr");});
test("iscoprite -> iscopr", function() {deepEqual( Stem("iscoprite"), "iscopr");});
test("iscorgendo -> iscorg", function() {deepEqual( Stem("iscorgendo"), "iscorg");});
test("iscritta -> iscritt", function() {deepEqual( Stem("iscritta"), "iscritt");});
test("iscritte -> iscritt", function() {deepEqual( Stem("iscritte"), "iscritt");});
test("iscritti -> iscritt", function() {deepEqual( Stem("iscritti"), "iscritt");});
test("iscritto -> iscritt", function() {deepEqual( Stem("iscritto"), "iscritt");});
test("iscrivendo -> iscriv", function() {deepEqual( Stem("iscrivendo"), "iscriv");});
test("iscriver -> iscriver", function() {deepEqual( Stem("iscriver"), "iscriver");});
test("iscriversi -> iscriv", function() {deepEqual( Stem("iscriversi"), "iscriv");});
test("iscrizioni -> iscrizion", function() {deepEqual( Stem("iscrizioni"), "iscrizion");});
test("iscusa -> iscus", function() {deepEqual( Stem("iscusa"), "iscus");});
test("ise -> ise", function() {deepEqual( Stem("ise"), "ise");});
test("isefi -> isef", function() {deepEqual( Stem("isefi"), "isef");});
test("isfogarsi -> isfog", function() {deepEqual( Stem("isfogarsi"), "isfog");});
test("isfoggiar -> isfogg", function() {deepEqual( Stem("isfoggiar"), "isfogg");});
test("isgarbatezze -> isgarbatezz", function() {deepEqual( Stem("isgarbatezze"), "isgarbatezz");});
test("isgravarsi -> isgrav", function() {deepEqual( Stem("isgravarsi"), "isgrav");});
test("isguardi -> isguard", function() {deepEqual( Stem("isguardi"), "isguard");});
test("isguardo -> isguard", function() {deepEqual( Stem("isguardo"), "isguard");});
test("isgusciar -> isgusc", function() {deepEqual( Stem("isgusciar"), "isgusc");});
test("isla -> isla", function() {deepEqual( Stem("isla"), "isla");});
test("islam -> islam", function() {deepEqual( Stem("islam"), "islam");});
test("islamabad -> islamabad", function() {deepEqual( Stem("islamabad"), "islamabad");});
test("islami -> islam", function() {deepEqual( Stem("islami"), "islam");});
test("islamica -> islam", function() {deepEqual( Stem("islamica"), "islam");});
test("islamicà -> islamic", function() {deepEqual( Stem("islamicà"), "islamic");});
test("islamici -> islam", function() {deepEqual( Stem("islamici"), "islam");});
test("islamico -> islam", function() {deepEqual( Stem("islamico"), "islam");});
test("islamiya -> islamiy", function() {deepEqual( Stem("islamiya"), "islamiy");});
test("islanciarsi -> islanc", function() {deepEqual( Stem("islanciarsi"), "islanc");});
test("island -> island", function() {deepEqual( Stem("island"), "island");});
test("ismanie -> isman", function() {deepEqual( Stem("ismanie"), "isman");});
test("ismarrita -> ismarr", function() {deepEqual( Stem("ismarrita"), "ismarr");});
test("ismettere -> ismett", function() {deepEqual( Stem("ismettere"), "ismett");});
test("ismovere -> ismov", function() {deepEqual( Stem("ismovere"), "ismov");});
test("isola -> isol", function() {deepEqual( Stem("isola"), "isol");});
test("isolamento -> isol", function() {deepEqual( Stem("isolamento"), "isol");});
test("isolare -> isol", function() {deepEqual( Stem("isolare"), "isol");});
test("isolata -> isol", function() {deepEqual( Stem("isolata"), "isol");});
test("isolato -> isol", function() {deepEqual( Stem("isolato"), "isol");});
test("isole -> isol", function() {deepEqual( Stem("isole"), "isol");});
test("ispalla -> ispall", function() {deepEqual( Stem("ispalla"), "ispall");});
test("ispaventi -> ispavent", function() {deepEqual( Stem("ispaventi"), "ispavent");});
test("ispavento -> ispavent", function() {deepEqual( Stem("ispavento"), "ispavent");});
test("ispecie -> ispec", function() {deepEqual( Stem("ispecie"), "ispec");});
test("ispegnerla -> ispegn", function() {deepEqual( Stem("ispegnerla"), "ispegn");});
test("ispenderli -> ispend", function() {deepEqual( Stem("ispenderli"), "ispend");});
test("ispesare -> ispes", function() {deepEqual( Stem("ispesare"), "ispes");});
test("ispettorato -> ispettor", function() {deepEqual( Stem("ispettorato"), "ispettor");});
test("ispettore -> ispettor", function() {deepEqual( Stem("ispettore"), "ispettor");});
test("ispettori -> ispettor", function() {deepEqual( Stem("ispettori"), "ispettor");});
test("ispezionato -> ispezion", function() {deepEqual( Stem("ispezionato"), "ispezion");});
test("ispianate -> ispian", function() {deepEqual( Stem("ispianate"), "ispian");});
test("ispiar -> ispi", function() {deepEqual( Stem("ispiar"), "ispi");});
test("ispidi -> ispid", function() {deepEqual( Stem("ispidi"), "ispid");});
test("ispiegarlo -> ispieg", function() {deepEqual( Stem("ispiegarlo"), "ispieg");});
test("ispinger -> ispinger", function() {deepEqual( Stem("ispinger"), "ispinger");});
test("ispingerla -> isping", function() {deepEqual( Stem("ispingerla"), "isping");});
test("ispira -> ispir", function() {deepEqual( Stem("ispira"), "ispir");});
test("ispirandogli -> ispir", function() {deepEqual( Stem("ispirandogli"), "ispir");});
test("ispirandosi -> ispir", function() {deepEqual( Stem("ispirandosi"), "ispir");});
test("ispirano -> ispir", function() {deepEqual( Stem("ispirano"), "ispir");});
test("ispirasse -> ispir", function() {deepEqual( Stem("ispirasse"), "ispir");});
test("ispirata -> ispir", function() {deepEqual( Stem("ispirata"), "ispir");});
test("ispirato -> ispir", function() {deepEqual( Stem("ispirato"), "ispir");});
test("ispiratore -> ispir", function() {deepEqual( Stem("ispiratore"), "ispir");});
test("ispiratori -> ispir", function() {deepEqual( Stem("ispiratori"), "ispir");});
test("ispirazione -> ispir", function() {deepEqual( Stem("ispirazione"), "ispir");});
test("ispirazioni -> ispir", function() {deepEqual( Stem("ispirazioni"), "ispir");});
test("isporca -> isporc", function() {deepEqual( Stem("isporca"), "isporc");});
test("israele -> israel", function() {deepEqual( Stem("israele"), "israel");});
test("israeliana -> israelian", function() {deepEqual( Stem("israeliana"), "israelian");});
test("israeliane -> israelian", function() {deepEqual( Stem("israeliane"), "israelian");});
test("israeliani -> israelian", function() {deepEqual( Stem("israeliani"), "israelian");});
test("israeliano -> israel", function() {deepEqual( Stem("israeliano"), "israel");});
test("ist -> ist", function() {deepEqual( Stem("ist"), "ist");});
test("istà -> istà", function() {deepEqual( Stem("istà"), "istà");});
test("istaccarsi -> istacc", function() {deepEqual( Stem("istaccarsi"), "istacc");});
test("istai -> ista", function() {deepEqual( Stem("istai"), "ista");});
test("istallata -> istall", function() {deepEqual( Stem("istallata"), "istall");});
test("istallato -> istall", function() {deepEqual( Stem("istallato"), "istall");});
test("istampa -> istamp", function() {deepEqual( Stem("istampa"), "istamp");});
test("istanbul -> istanbul", function() {deepEqual( Stem("istanbul"), "istanbul");});
test("istantanea -> istantane", function() {deepEqual( Stem("istantanea"), "istantane");});
test("istantaneo -> istantane", function() {deepEqual( Stem("istantaneo"), "istantane");});
test("istante -> istant", function() {deepEqual( Stem("istante"), "istant");});
test("istanti -> istant", function() {deepEqual( Stem("istanti"), "istant");});
test("istanza -> istanz", function() {deepEqual( Stem("istanza"), "istanz");});
test("istanze -> istanz", function() {deepEqual( Stem("istanze"), "istanz");});
test("istar -> istar", function() {deepEqual( Stem("istar"), "istar");});
test("istare -> istar", function() {deepEqual( Stem("istare"), "istar");});
test("istareste -> istarest", function() {deepEqual( Stem("istareste"), "istarest");});
test("istat -> istat", function() {deepEqual( Stem("istat"), "istat");});
test("istate -> istat", function() {deepEqual( Stem("istate"), "istat");});
test("istato -> istat", function() {deepEqual( Stem("istato"), "istat");});
test("istava -> istav", function() {deepEqual( Stem("istava"), "istav");});
test("isteriliscono -> isteril", function() {deepEqual( Stem("isteriliscono"), "isteril");});
test("istessa -> istess", function() {deepEqual( Stem("istessa"), "istess");});
test("istesso -> istess", function() {deepEqual( Stem("istesso"), "istess");});
test("istette -> istett", function() {deepEqual( Stem("istette"), "istett");});
test("istia -> isti", function() {deepEqual( Stem("istia"), "isti");});
test("istigatori -> istig", function() {deepEqual( Stem("istigatori"), "istig");});
test("istigazione -> istig", function() {deepEqual( Stem("istigazione"), "istig");});
test("istile -> istil", function() {deepEqual( Stem("istile"), "istil");});
test("istillar -> istill", function() {deepEqual( Stem("istillar"), "istill");});
test("istinti -> istint", function() {deepEqual( Stem("istinti"), "istint");});
test("istintiva -> istint", function() {deepEqual( Stem("istintiva"), "istint");});
test("istinto -> istint", function() {deepEqual( Stem("istinto"), "istint");});
test("istitituito -> istititu", function() {deepEqual( Stem("istitituito"), "istititu");});
test("istituiranno -> istitu", function() {deepEqual( Stem("istituiranno"), "istitu");});
test("istituire -> istitu", function() {deepEqual( Stem("istituire"), "istitu");});
test("istituisse -> istituiss", function() {deepEqual( Stem("istituisse"), "istituiss");});
test("istituito -> istitu", function() {deepEqual( Stem("istituito"), "istitu");});
test("istituti -> istit", function() {deepEqual( Stem("istituti"), "istit");});
test("istituto -> istit", function() {deepEqual( Stem("istituto"), "istit");});
test("istitutori -> istitutor", function() {deepEqual( Stem("istitutori"), "istitutor");});
test("istituzionale -> istituzional", function() {deepEqual( Stem("istituzionale"), "istituzional");});
test("istituzionali -> istituzional", function() {deepEqual( Stem("istituzionali"), "istituzional");});
test("istituzione -> istitu", function() {deepEqual( Stem("istituzione"), "istitu");});
test("istituzioni -> istitu", function() {deepEqual( Stem("istituzioni"), "istitu");});
test("istizza -> istizz", function() {deepEqual( Stem("istizza"), "istizz");});
test("istoriando -> istor", function() {deepEqual( Stem("istoriando"), "istor");});
test("istoriografo -> istoriograf", function() {deepEqual( Stem("istoriografo"), "istoriograf");});
test("istornar -> istorn", function() {deepEqual( Stem("istornar"), "istorn");});
test("istrada -> istrad", function() {deepEqual( Stem("istrada"), "istrad");});
test("istradamento -> istrad", function() {deepEqual( Stem("istradamento"), "istrad");});
test("istrade -> istrad", function() {deepEqual( Stem("istrade"), "istrad");});
test("istrane -> istran", function() {deepEqual( Stem("istrane"), "istran");});
test("istrascinarlo -> istrascin", function() {deepEqual( Stem("istrascinarlo"), "istrascin");});
test("istrepito -> istrep", function() {deepEqual( Stem("istrepito"), "istrep");});
test("istria -> istri", function() {deepEqual( Stem("istria"), "istri");});
test("istriana -> istrian", function() {deepEqual( Stem("istriana"), "istrian");});
test("istrida -> istrid", function() {deepEqual( Stem("istrida"), "istrid");});
test("istro -> istro", function() {deepEqual( Stem("istro"), "istro");});
test("istruirsi -> istru", function() {deepEqual( Stem("istruirsi"), "istru");});
test("istruita -> istru", function() {deepEqual( Stem("istruita"), "istru");});
test("istruiti -> istru", function() {deepEqual( Stem("istruiti"), "istru");});
test("istruiva -> istru", function() {deepEqual( Stem("istruiva"), "istru");});
test("istrumento -> istrument", function() {deepEqual( Stem("istrumento"), "istrument");});
test("istruttore -> istruttor", function() {deepEqual( Stem("istruttore"), "istruttor");});
test("istruttoria -> istruttor", function() {deepEqual( Stem("istruttoria"), "istruttor");});
test("istruttorio -> istruttor", function() {deepEqual( Stem("istruttorio"), "istruttor");});
test("istruzione -> istruzion", function() {deepEqual( Stem("istruzione"), "istruzion");});
test("istruzioni -> istruzion", function() {deepEqual( Stem("istruzioni"), "istruzion");});
test("istudiare -> istud", function() {deepEqual( Stem("istudiare"), "istud");});
test("istudiarvi -> istud", function() {deepEqual( Stem("istudiarvi"), "istud");});
test("isvap -> isvap", function() {deepEqual( Stem("isvap"), "isvap");});
test("isvegliarsi -> isvegl", function() {deepEqual( Stem("isvegliarsi"), "isvegl");});
test("isventura -> isventur", function() {deepEqual( Stem("isventura"), "isventur");});
test("isvim -> isvim", function() {deepEqual( Stem("isvim"), "isvim");});
test("it -> it", function() {deepEqual( Stem("it"), "it");});
test("ita -> ita", function() {deepEqual( Stem("ita"), "ita");});
test("ital -> ital", function() {deepEqual( Stem("ital"), "ital");});
test("italc -> italc", function() {deepEqual( Stem("italc"), "italc");});
test("italcem -> italcem", function() {deepEqual( Stem("italcem"), "italcem");});
test("italcementi -> italcement", function() {deepEqual( Stem("italcementi"), "italcement");});
test("italgas -> italgas", function() {deepEqual( Stem("italgas"), "italgas");});
test("italia -> ital", function() {deepEqual( Stem("italia"), "ital");});
test("italiana -> italian", function() {deepEqual( Stem("italiana"), "italian");});
test("italiane -> italian", function() {deepEqual( Stem("italiane"), "italian");});
test("italiani -> italian", function() {deepEqual( Stem("italiani"), "italian");});
test("italiano -> ital", function() {deepEqual( Stem("italiano"), "ital");});
test("italimpianti -> italimp", function() {deepEqual( Stem("italimpianti"), "italimp");});
test("italm -> italm", function() {deepEqual( Stem("italm"), "italm");});
test("italmob -> italmob", function() {deepEqual( Stem("italmob"), "italmob");});
test("italmobil -> italmobil", function() {deepEqual( Stem("italmobil"), "italmobil");});
test("italmobiliare -> italmobil", function() {deepEqual( Stem("italmobiliare"), "italmobil");});
test("italmoney -> italmoney", function() {deepEqual( Stem("italmoney"), "italmoney");});
test("italo -> ital", function() {deepEqual( Stem("italo"), "ital");});
test("italy -> italy", function() {deepEqual( Stem("italy"), "italy");});
test("itar -> itar", function() {deepEqual( Stem("itar"), "itar");});
test("itat -> itat", function() {deepEqual( Stem("itat"), "itat");});
test("itc -> itc", function() {deepEqual( Stem("itc"), "itc");});
test("itdalia -> itdal", function() {deepEqual( Stem("itdalia"), "itdal");});
test("iter -> iter", function() {deepEqual( Stem("iter"), "iter");});
test("itinerari -> itinerar", function() {deepEqual( Stem("itinerari"), "itinerar");});
test("itinerario -> itinerar", function() {deepEqual( Stem("itinerario"), "itinerar");});
test("itmr -> itmr", function() {deepEqual( Stem("itmr"), "itmr");});
test("itn -> itn", function() {deepEqual( Stem("itn"), "itn");});
test("ito -> ito", function() {deepEqual( Stem("ito"), "ito");});
test("itoh -> itoh", function() {deepEqual( Stem("itoh"), "itoh");});
test("ittica -> ittic", function() {deepEqual( Stem("ittica"), "ittic");});
test("ittiche -> ittic", function() {deepEqual( Stem("ittiche"), "ittic");});
test("ittici -> ittic", function() {deepEqual( Stem("ittici"), "ittic");});
test("itumkalinsk -> itumkalinsk", function() {deepEqual( Stem("itumkalinsk"), "itumkalinsk");});
test("iu -> iu", function() {deepEqual( Stem("iu"), "iu");});
test("iualiano -> iual", function() {deepEqual( Stem("iualiano"), "iual");});
test("iugoslavia -> iugoslav", function() {deepEqual( Stem("iugoslavia"), "iugoslav");});
test("iui -> iui", function() {deepEqual( Stem("iui"), "iui");});
test("iuri -> iur", function() {deepEqual( Stem("iuri"), "iur");});
test("iurt -> iurt", function() {deepEqual( Stem("iurt"), "iurt");});
test("iurtovsk -> iurtovsk", function() {deepEqual( Stem("iurtovsk"), "iurtovsk");});
test("iv -> iv", function() {deepEqual( Stem("iv"), "iv");});
test("iva -> iva", function() {deepEqual( Stem("iva"), "iva");});
test("ivan -> ivan", function() {deepEqual( Stem("ivan"), "ivan");});
test("ivana -> ivan", function() {deepEqual( Stem("ivana"), "ivan");});
test("ivano -> ivan", function() {deepEqual( Stem("ivano"), "ivan");});
test("ivi -> ivi", function() {deepEqual( Stem("ivi"), "ivi");});
test("ivimus -> ivimus", function() {deepEqual( Stem("ivimus"), "ivimus");});
test("ivo -> ivo", function() {deepEqual( Stem("ivo"), "ivo");});
test("ivory -> ivory", function() {deepEqual( Stem("ivory"), "ivory");});
test("ix -> ix", function() {deepEqual( Stem("ix"), "ix");});
test("izar -> izar", function() {deepEqual( Stem("izar"), "izar");});
test("izudin -> izudin", function() {deepEqual( Stem("izudin"), "izudin");});
test("j -> j", function() {deepEqual( Stem("j"), "j");});
test("jack -> jack", function() {deepEqual( Stem("jack"), "jack");});
test("jackson -> jackson", function() {deepEqual( Stem("jackson"), "jackson");});
test("jacob -> jacob", function() {deepEqual( Stem("jacob"), "jacob");});
test("jacobsen -> jacobsen", function() {deepEqual( Stem("jacobsen"), "jacobsen");});
test("jacqueline -> jacquelin", function() {deepEqual( Stem("jacqueline"), "jacquelin");});
test("jahan -> jahan", function() {deepEqual( Stem("jahan"), "jahan");});
test("jaime -> jaim", function() {deepEqual( Stem("jaime"), "jaim");});
test("jamaa -> jama", function() {deepEqual( Stem("jamaa"), "jama");});
test("jamaat -> jamaat", function() {deepEqual( Stem("jamaat"), "jamaat");});
test("james -> james", function() {deepEqual( Stem("james"), "james");});
test("jammin -> jammin", function() {deepEqual( Stem("jammin"), "jammin");});
test("jan -> jan", function() {deepEqual( Stem("jan"), "jan");});
test("janata -> jan", function() {deepEqual( Stem("janata"), "jan");});
test("janeiro -> janeir", function() {deepEqual( Stem("janeiro"), "janeir");});
test("janet -> janet", function() {deepEqual( Stem("janet"), "janet");});
test("janez -> janez", function() {deepEqual( Stem("janez"), "janez");});
test("janni -> jann", function() {deepEqual( Stem("janni"), "jann");});
test("janowski -> janowsk", function() {deepEqual( Stem("janowski"), "janowsk");});
test("jansson -> jansson", function() {deepEqual( Stem("jansson"), "jansson");});
test("jaqueline -> jaquelin", function() {deepEqual( Stem("jaqueline"), "jaquelin");});
test("jarni -> jarn", function() {deepEqual( Stem("jarni"), "jarn");});
test("javier -> javier", function() {deepEqual( Stem("javier"), "javier");});
test("jean -> jean", function() {deepEqual( Stem("jean"), "jean");});
test("jeanne -> jeann", function() {deepEqual( Stem("jeanne"), "jeann");});
test("jechna -> jechn", function() {deepEqual( Stem("jechna"), "jechn");});
test("jeep -> jeep", function() {deepEqual( Stem("jeep"), "jeep");});
test("jeff -> jeff", function() {deepEqual( Stem("jeff"), "jeff");});
test("jefferson -> jefferson", function() {deepEqual( Stem("jefferson"), "jefferson");});
test("jeleesa -> jelees", function() {deepEqual( Stem("jeleesa"), "jelees");});
test("jemis -> jemis", function() {deepEqual( Stem("jemis"), "jemis");});
test("jennifer -> jennifer", function() {deepEqual( Stem("jennifer"), "jennifer");});
test("jenny -> jenny", function() {deepEqual( Stem("jenny"), "jenny");});
test("jens -> jens", function() {deepEqual( Stem("jens"), "jens");});
test("jerry -> jerry", function() {deepEqual( Stem("jerry"), "jerry");});
test("jervolino -> jervolin", function() {deepEqual( Stem("jervolino"), "jervolin");});
test("jessica -> jessic", function() {deepEqual( Stem("jessica"), "jessic");});
test("jet -> jet", function() {deepEqual( Stem("jet"), "jet");});
test("jfk -> jfk", function() {deepEqual( Stem("jfk"), "jfk");});
test("ji -> ji", function() {deepEqual( Stem("ji"), "ji");});
test("jiahua -> jiahu", function() {deepEqual( Stem("jiahua"), "jiahu");});
test("jibril -> jibril", function() {deepEqual( Stem("jibril"), "jibril");});
test("jihad -> jihad", function() {deepEqual( Stem("jihad"), "jihad");});
test("jijel -> jijel", function() {deepEqual( Stem("jijel"), "jijel");});
test("jill -> jill", function() {deepEqual( Stem("jill"), "jill");});
test("jim -> jim", function() {deepEqual( Stem("jim"), "jim");});
test("jimenez -> jimenez", function() {deepEqual( Stem("jimenez"), "jimenez");});
test("jimmy -> jimmy", function() {deepEqual( Stem("jimmy"), "jimmy");});
test("joachim -> joachim", function() {deepEqual( Stem("joachim"), "joachim");});
test("joaquin -> joaquin", function() {deepEqual( Stem("joaquin"), "joaquin");});
test("jocelyn -> jocelyn", function() {deepEqual( Stem("jocelyn"), "jocelyn");});
test("joe -> joe", function() {deepEqual( Stem("joe"), "joe");});
test("johan -> johan", function() {deepEqual( Stem("johan"), "johan");});
test("johann -> johann", function() {deepEqual( Stem("johann"), "johann");});
test("johannesburg -> johannesburg", function() {deepEqual( Stem("johannesburg"), "johannesburg");});
test("john -> john", function() {deepEqual( Stem("john"), "john");});
test("johnson -> johnson", function() {deepEqual( Stem("johnson"), "johnson");});
test("joint -> joint", function() {deepEqual( Stem("joint"), "joint");});
test("jolly -> jolly", function() {deepEqual( Stem("jolly"), "jolly");});
test("joly -> joly", function() {deepEqual( Stem("joly"), "joly");});
test("jon -> jon", function() {deepEqual( Stem("jon"), "jon");});
test("jonas -> jonas", function() {deepEqual( Stem("jonas"), "jonas");});
test("jonathan -> jonathan", function() {deepEqual( Stem("jonathan"), "jonathan");});
test("jones -> jones", function() {deepEqual( Stem("jones"), "jones");});
test("jonk -> jonk", function() {deepEqual( Stem("jonk"), "jonk");});
test("jorge -> jorg", function() {deepEqual( Stem("jorge"), "jorg");});
test("jose -> jos", function() {deepEqual( Stem("jose"), "jos");});
test("josè -> jos", function() {deepEqual( Stem("josè"), "jos");});
test("josef -> josef", function() {deepEqual( Stem("josef"), "josef");});
test("joseph -> joseph", function() {deepEqual( Stem("joseph"), "joseph");});
test("josephi -> joseph", function() {deepEqual( Stem("josephi"), "joseph");});
test("jospin -> jospin", function() {deepEqual( Stem("jospin"), "jospin");});
test("jr -> jr", function() {deepEqual( Stem("jr"), "jr");});
test("juan -> juan", function() {deepEqual( Stem("juan"), "juan");});
test("jugoslavia -> jugoslav", function() {deepEqual( Stem("jugoslavia"), "jugoslav");});
test("jugovic -> jugovic", function() {deepEqual( Stem("jugovic"), "jugovic");});
test("juha -> juh", function() {deepEqual( Stem("juha"), "juh");});
test("juicio -> juic", function() {deepEqual( Stem("juicio"), "juic");});
test("julia -> jul", function() {deepEqual( Stem("julia"), "jul");});
test("julian -> julian", function() {deepEqual( Stem("julian"), "julian");});
test("julie -> jul", function() {deepEqual( Stem("julie"), "jul");});
test("julieth -> julieth", function() {deepEqual( Stem("julieth"), "julieth");});
test("junior -> junior", function() {deepEqual( Stem("junior"), "junior");});
test("juniores -> juniores", function() {deepEqual( Stem("juniores"), "juniores");});
test("juppè -> jupp", function() {deepEqual( Stem("juppè"), "jupp");});
test("jure -> jur", function() {deepEqual( Stem("jure"), "jur");});
test("juta -> jut", function() {deepEqual( Stem("juta"), "jut");});
test("juve -> juv", function() {deepEqual( Stem("juve"), "juv");});
test("juventini -> juventin", function() {deepEqual( Stem("juventini"), "juventin");});
test("juventus -> juventus", function() {deepEqual( Stem("juventus"), "juventus");});
test("k -> k", function() {deepEqual( Stem("k"), "k");});
test("kabariti -> kabar", function() {deepEqual( Stem("kabariti"), "kabar");});
test("kabul -> kabul", function() {deepEqual( Stem("kabul"), "kabul");});
test("kaddoumi -> kaddoum", function() {deepEqual( Stem("kaddoumi"), "kaddoum");});
test("kaelon -> kaelon", function() {deepEqual( Stem("kaelon"), "kaelon");});
test("kakrabar -> kakrab", function() {deepEqual( Stem("kakrabar"), "kakrab");});
test("kalà -> kal", function() {deepEqual( Stem("kalà"), "kal");});
test("kalashikov -> kalashikov", function() {deepEqual( Stem("kalashikov"), "kalashikov");});
test("kalpakkam -> kalpakkam", function() {deepEqual( Stem("kalpakkam"), "kalpakkam");});
test("kambia -> kamb", function() {deepEqual( Stem("kambia"), "kamb");});
test("kamikazè -> kamikaz", function() {deepEqual( Stem("kamikazè"), "kamikaz");});
test("kanchanaburi -> kanchanabur", function() {deepEqual( Stem("kanchanaburi"), "kanchanabur");});
test("kankkunen -> kankkunen", function() {deepEqual( Stem("kankkunen"), "kankkunen");});
test("kaos -> kaos", function() {deepEqual( Stem("kaos"), "kaos");});
test("karachi -> karac", function() {deepEqual( Stem("karachi"), "karac");});
test("karadzic -> karadzic", function() {deepEqual( Stem("karadzic"), "karadzic");});
test("karaoke -> karaok", function() {deepEqual( Stem("karaoke"), "karaok");});
test("karel -> karel", function() {deepEqual( Stem("karel"), "karel");});
test("karim -> karim", function() {deepEqual( Stem("karim"), "karim");});
test("karlsruhe -> karlsruh", function() {deepEqual( Stem("karlsruhe"), "karlsruh");});
test("karlstad -> karlstad", function() {deepEqual( Stem("karlstad"), "karlstad");});
test("kashmir -> kashm", function() {deepEqual( Stem("kashmir"), "kashm");});
test("kashoggi -> kashogg", function() {deepEqual( Stem("kashoggi"), "kashogg");});
test("kastros -> kastros", function() {deepEqual( Stem("kastros"), "kastros");});
test("kawashima -> kawashim", function() {deepEqual( Stem("kawashima"), "kawashim");});
test("kazakhstan -> kazakhstan", function() {deepEqual( Stem("kazakhstan"), "kazakhstan");});
test("kelly -> kelly", function() {deepEqual( Stem("kelly"), "kelly");});
test("kenderson -> kenderson", function() {deepEqual( Stem("kenderson"), "kenderson");});
test("kenia -> ken", function() {deepEqual( Stem("kenia"), "ken");});
test("keniota -> keniot", function() {deepEqual( Stem("keniota"), "keniot");});
test("kennedy -> kennedy", function() {deepEqual( Stem("kennedy"), "kennedy");});
test("kenneth -> kenneth", function() {deepEqual( Stem("kenneth"), "kenneth");});
test("kent -> kent", function() {deepEqual( Stem("kent"), "kent");});
test("kenya -> keny", function() {deepEqual( Stem("kenya"), "keny");});
test("kenyano -> keny", function() {deepEqual( Stem("kenyano"), "keny");});
test("kevin -> kevin", function() {deepEqual( Stem("kevin"), "kevin");});
test("kfe -> kfe", function() {deepEqual( Stem("kfe"), "kfe");});
test("kgb -> kgb", function() {deepEqual( Stem("kgb"), "kgb");});
test("khamenei -> khamene", function() {deepEqual( Stem("khamenei"), "khamene");});
test("khan -> khan", function() {deepEqual( Stem("khan"), "khan");});
test("khessibia -> khessib", function() {deepEqual( Stem("khessibia"), "khessib");});
test("khomeini -> khomein", function() {deepEqual( Stem("khomeini"), "khomein");});
test("khursheed -> khursheed", function() {deepEqual( Stem("khursheed"), "khursheed");});
test("kieslowski -> kieslowsk", function() {deepEqual( Stem("kieslowski"), "kieslowsk");});
test("kiev -> kiev", function() {deepEqual( Stem("kiev"), "kiev");});
test("killer -> killer", function() {deepEqual( Stem("killer"), "killer");});
test("kilmarnock -> kilmarnock", function() {deepEqual( Stem("kilmarnock"), "kilmarnock");});
test("kim -> kim", function() {deepEqual( Stem("kim"), "kim");});
test("king -> king", function() {deepEqual( Stem("king"), "king");});
test("kinnock -> kinnock", function() {deepEqual( Stem("kinnock"), "kinnock");});
test("kioko -> kiok", function() {deepEqual( Stem("kioko"), "kiok");});
test("kipkemboi -> kipkembo", function() {deepEqual( Stem("kipkemboi"), "kipkembo");});
test("kipling -> kipling", function() {deepEqual( Stem("kipling"), "kipling");});
test("kiptanui -> kiptanu", function() {deepEqual( Stem("kiptanui"), "kiptanu");});
test("kirsch -> kirsc", function() {deepEqual( Stem("kirsch"), "kirsc");});
test("kisimaio -> kisimai", function() {deepEqual( Stem("kisimaio"), "kisimai");});
test("kiwan -> kiwan", function() {deepEqual( Stem("kiwan"), "kiwan");});
test("kladusa -> kladus", function() {deepEqual( Stem("kladusa"), "kladus");});
test("klaus -> klaus", function() {deepEqual( Stem("klaus"), "klaus");});
test("kluge -> klug", function() {deepEqual( Stem("kluge"), "klug");});
test("km -> km", function() {deepEqual( Stem("km"), "km");});
test("ko -> ko", function() {deepEqual( Stem("ko"), "ko");});
test("kobe -> kob", function() {deepEqual( Stem("kobe"), "kob");});
test("koeman -> koeman", function() {deepEqual( Stem("koeman"), "koeman");});
test("kohl -> kohl", function() {deepEqual( Stem("kohl"), "kohl");});
test("kohler -> kohler", function() {deepEqual( Stem("kohler"), "kohler");});
test("koijam -> koijam", function() {deepEqual( Stem("koijam"), "koijam");});
test("kola -> kol", function() {deepEqual( Stem("kola"), "kol");});
test("koll -> koll", function() {deepEqual( Stem("koll"), "koll");});
test("kolyvanov -> kolyvanov", function() {deepEqual( Stem("kolyvanov"), "kolyvanov");});
test("kong -> kong", function() {deepEqual( Stem("kong"), "kong");});
test("konishev -> konishev", function() {deepEqual( Stem("konishev"), "konishev");});
test("korda -> kord", function() {deepEqual( Stem("korda"), "kord");});
test("korzhakov -> korzhakov", function() {deepEqual( Stem("korzhakov"), "korzhakov");});
test("kosarev -> kosarev", function() {deepEqual( Stem("kosarev"), "kosarev");});
test("kosevo -> kos", function() {deepEqual( Stem("kosevo"), "kos");});
test("kotov -> kotov", function() {deepEqual( Stem("kotov"), "kotov");});
test("kovac -> kovac", function() {deepEqual( Stem("kovac"), "kovac");});
test("kowanko -> kowank", function() {deepEqual( Stem("kowanko"), "kowank");});
test("kozminski -> kozminsk", function() {deepEqual( Stem("kozminski"), "kozminsk");});
test("kraftnat -> kraftnat", function() {deepEqual( Stem("kraftnat"), "kraftnat");});
test("krajina -> krajin", function() {deepEqual( Stem("krajina"), "krajin");});
test("krajna -> krajn", function() {deepEqual( Stem("krajna"), "krajn");});
test("krasnov -> krasnov", function() {deepEqual( Stem("krasnov"), "krasnov");});
test("kreek -> kreek", function() {deepEqual( Stem("kreek"), "kreek");});
test("kris -> kris", function() {deepEqual( Stem("kris"), "kris");});
test("krsko -> krsko", function() {deepEqual( Stem("krsko"), "krsko");});
test("kruja -> kruj", function() {deepEqual( Stem("kruja"), "kruj");});
test("krupa -> krup", function() {deepEqual( Stem("krupa"), "krup");});
test("kruz -> kruz", function() {deepEqual( Stem("kruz"), "kruz");});
test("krzystof -> krzystof", function() {deepEqual( Stem("krzystof"), "krzystof");});
test("kuala -> kual", function() {deepEqual( Stem("kuala"), "kual");});
test("kulikov -> kulikov", function() {deepEqual( Stem("kulikov"), "kulikov");});
test("kung -> kung", function() {deepEqual( Stem("kung"), "kung");});
test("kupra -> kupr", function() {deepEqual( Stem("kupra"), "kupr");});
test("kurt -> kurt", function() {deepEqual( Stem("kurt"), "kurt");});
test("kuwait -> kuwait", function() {deepEqual( Stem("kuwait"), "kuwait");});
test("kvashnin -> kvashnin", function() {deepEqual( Stem("kvashnin"), "kvashnin");});
test("kw -> kw", function() {deepEqual( Stem("kw"), "kw");});
test("kwh -> kwh", function() {deepEqual( Stem("kwh"), "kwh");});
test("l -> l", function() {deepEqual( Stem("l"), "l");});
test("la -> la", function() {deepEqual( Stem("la"), "la");});
test("là -> là", function() {deepEqual( Stem("là"), "là");});
test("labbra -> labbr", function() {deepEqual( Stem("labbra"), "labbr");});
test("labbro -> labbr", function() {deepEqual( Stem("labbro"), "labbr");});
test("laberinto -> laberint", function() {deepEqual( Stem("laberinto"), "laberint");});
test("labirinti -> labirint", function() {deepEqual( Stem("labirinti"), "labirint");});
test("laboratorio -> laborator", function() {deepEqual( Stem("laboratorio"), "laborator");});
test("labra -> labr", function() {deepEqual( Stem("labra"), "labr");});
test("laburista -> labur", function() {deepEqual( Stem("laburista"), "labur");});
test("laburisti -> labur", function() {deepEqual( Stem("laburisti"), "labur");});
test("lacandona -> lacandon", function() {deepEqual( Stem("lacandona"), "lacandon");});
test("laccio -> lacc", function() {deepEqual( Stem("laccio"), "lacc");});
test("lacerati -> lacer", function() {deepEqual( Stem("lacerati"), "lacer");});
test("lacerazioni -> lacer", function() {deepEqual( Stem("lacerazioni"), "lacer");});
test("lacere -> lac", function() {deepEqual( Stem("lacere"), "lac");});
test("laceri -> lacer", function() {deepEqual( Stem("laceri"), "lacer");});
test("laconico -> lacon", function() {deepEqual( Stem("laconico"), "lacon");});
test("lacqua -> lacqu", function() {deepEqual( Stem("lacqua"), "lacqu");});
test("lacrimando -> lacrim", function() {deepEqual( Stem("lacrimando"), "lacrim");});
test("lacrime -> lacrim", function() {deepEqual( Stem("lacrime"), "lacrim");});
test("lacrimogeni -> lacrimogen", function() {deepEqual( Stem("lacrimogeni"), "lacrimogen");});
test("lacrimoso -> lacrim", function() {deepEqual( Stem("lacrimoso"), "lacrim");});
test("ladri -> ladr", function() {deepEqual( Stem("ladri"), "ladr");});
test("ladro -> ladr", function() {deepEqual( Stem("ladro"), "ladr");});
test("ladrona -> ladron", function() {deepEqual( Stem("ladrona"), "ladron");});
test("ladrone -> ladron", function() {deepEqual( Stem("ladrone"), "ladron");});
test("ladroni -> ladron", function() {deepEqual( Stem("ladroni"), "ladron");});
test("laender -> laender", function() {deepEqual( Stem("laender"), "laender");});
test("laerzio -> laerz", function() {deepEqual( Stem("laerzio"), "laerz");});
test("lafert -> lafert", function() {deepEqual( Stem("lafert"), "lafert");});
test("lagat -> lagat", function() {deepEqual( Stem("lagat"), "lagat");});
test("lagest -> lagest", function() {deepEqual( Stem("lagest"), "lagest");});
test("laggiu -> laggiu", function() {deepEqual( Stem("laggiu"), "laggiu");});
test("laggiù -> laggiù", function() {deepEqual( Stem("laggiù"), "laggiù");});
test("lagnandosi -> lagn", function() {deepEqual( Stem("lagnandosi"), "lagn");});
test("lagnarsene -> lagn", function() {deepEqual( Stem("lagnarsene"), "lagn");});
test("lagnarsi -> lagn", function() {deepEqual( Stem("lagnarsi"), "lagn");});
test("lago -> lag", function() {deepEqual( Stem("lago"), "lag");});
test("lagostena -> lagosten", function() {deepEqual( Stem("lagostena"), "lagosten");});
test("lagrima -> lagrim", function() {deepEqual( Stem("lagrima"), "lagrim");});
test("lagrimoso -> lagrim", function() {deepEqual( Stem("lagrimoso"), "lagrim");});
test("laicale -> laical", function() {deepEqual( Stem("laicale"), "laical");});
test("laiche -> laic", function() {deepEqual( Stem("laiche"), "laic");});
test("laici -> laic", function() {deepEqual( Stem("laici"), "laic");});
test("laicità -> laicit", function() {deepEqual( Stem("laicità"), "laicit");});
test("laico -> laic", function() {deepEqual( Stem("laico"), "laic");});
test("laido -> laid", function() {deepEqual( Stem("laido"), "laid");});
test("lake -> lak", function() {deepEqual( Stem("lake"), "lak");});
test("lalas -> lalas", function() {deepEqual( Stem("lalas"), "lalas");});
test("lama -> lam", function() {deepEqual( Stem("lama"), "lam");});
test("lamacchi -> lamacc", function() {deepEqual( Stem("lamacchi"), "lamacc");});
test("lamana -> laman", function() {deepEqual( Stem("lamana"), "laman");});
test("lamanda -> lamand", function() {deepEqual( Stem("lamanda"), "lamand");});
test("lambert -> lambert", function() {deepEqual( Stem("lambert"), "lambert");});
test("lamberto -> lambert", function() {deepEqual( Stem("lamberto"), "lambert");});
test("lambiccarsi -> lambicc", function() {deepEqual( Stem("lambiccarsi"), "lambicc");});
test("lambro -> lambr", function() {deepEqual( Stem("lambro"), "lambr");});
test("lame -> lam", function() {deepEqual( Stem("lame"), "lam");});
test("lamentandosi -> lament", function() {deepEqual( Stem("lamentandosi"), "lament");});
test("lamentarci -> lament", function() {deepEqual( Stem("lamentarci"), "lament");});
test("lamentarsi -> lament", function() {deepEqual( Stem("lamentarsi"), "lament");});
test("lamentassero -> lament", function() {deepEqual( Stem("lamentassero"), "lament");});
test("lamentato -> lament", function() {deepEqual( Stem("lamentato"), "lament");});
test("lamentava -> lament", function() {deepEqual( Stem("lamentava"), "lament");});
test("lamentazioni -> lament", function() {deepEqual( Stem("lamentazioni"), "lament");});
test("lamentevole -> lamentevol", function() {deepEqual( Stem("lamentevole"), "lamentevol");});
test("lamenti -> lament", function() {deepEqual( Stem("lamenti"), "lament");});
test("lamento -> lament", function() {deepEqual( Stem("lamento"), "lament");});
test("lamet -> lamet", function() {deepEqual( Stem("lamet"), "lamet");});
test("lamezia -> lamez", function() {deepEqual( Stem("lamezia"), "lamez");});
test("lamia -> lam", function() {deepEqual( Stem("lamia"), "lam");});
test("lamine -> lamin", function() {deepEqual( Stem("lamine"), "lamin");});
test("lamorte -> lamort", function() {deepEqual( Stem("lamorte"), "lamort");});
test("lampada -> lampad", function() {deepEqual( Stem("lampada"), "lampad");});
test("lampade -> lampad", function() {deepEqual( Stem("lampade"), "lampad");});
test("lampante -> lampant", function() {deepEqual( Stem("lampante"), "lampant");});
test("lampanti -> lampant", function() {deepEqual( Stem("lampanti"), "lampant");});
test("lampeggiar -> lampegg", function() {deepEqual( Stem("lampeggiar"), "lampegg");});
test("lampeggiare -> lampegg", function() {deepEqual( Stem("lampeggiare"), "lampegg");});
test("lampi -> lamp", function() {deepEqual( Stem("lampi"), "lamp");});
test("lampo -> lamp", function() {deepEqual( Stem("lampo"), "lamp");});
test("lampone -> lampon", function() {deepEqual( Stem("lampone"), "lampon");});
test("lampugnano -> lampugn", function() {deepEqual( Stem("lampugnano"), "lampugn");});
test("lana -> lan", function() {deepEqual( Stem("lana"), "lan");});
test("lancaster -> lancaster", function() {deepEqual( Stem("lancaster"), "lancaster");});
test("lance -> lanc", function() {deepEqual( Stem("lance"), "lanc");});
test("lancer -> lancer", function() {deepEqual( Stem("lancer"), "lancer");});
test("lanci -> lanc", function() {deepEqual( Stem("lanci"), "lanc");});
test("lancia -> lanc", function() {deepEqual( Stem("lancia"), "lanc");});
test("lanciai -> lancia", function() {deepEqual( Stem("lanciai"), "lancia");});
test("lanciamo -> lanc", function() {deepEqual( Stem("lanciamo"), "lanc");});
test("lanciando -> lanc", function() {deepEqual( Stem("lanciando"), "lanc");});
test("lanciano -> lanc", function() {deepEqual( Stem("lanciano"), "lanc");});
test("lanciare -> lanc", function() {deepEqual( Stem("lanciare"), "lanc");});
test("lanciarsi -> lanc", function() {deepEqual( Stem("lanciarsi"), "lanc");});
test("lanciata -> lanc", function() {deepEqual( Stem("lanciata"), "lanc");});
test("lanciate -> lanc", function() {deepEqual( Stem("lanciate"), "lanc");});
test("lanciati -> lanc", function() {deepEqual( Stem("lanciati"), "lanc");});
test("lanciato -> lanc", function() {deepEqual( Stem("lanciato"), "lanc");});
test("lanciava -> lanc", function() {deepEqual( Stem("lanciava"), "lanc");});
test("lancio -> lanc", function() {deepEqual( Stem("lancio"), "lanc");});
test("lancuba -> lancub", function() {deepEqual( Stem("lancuba"), "lancub");});
test("land -> land", function() {deepEqual( Stem("land"), "land");});
test("landing -> landing", function() {deepEqual( Stem("landing"), "landing");});
test("landshut -> landshut", function() {deepEqual( Stem("landshut"), "landshut");});
test("langen -> langen", function() {deepEqual( Stem("langen"), "langen");});
test("languente -> languent", function() {deepEqual( Stem("languente"), "languent");});
test("languenti -> languent", function() {deepEqual( Stem("languenti"), "languent");});
test("languida -> languid", function() {deepEqual( Stem("languida"), "languid");});
test("languidamente -> languid", function() {deepEqual( Stem("languidamente"), "languid");});
test("languidezza -> languidezz", function() {deepEqual( Stem("languidezza"), "languidezz");});
test("languire -> langu", function() {deepEqual( Stem("languire"), "langu");});
test("languiva -> langu", function() {deepEqual( Stem("languiva"), "langu");});
test("languivano -> langu", function() {deepEqual( Stem("languivano"), "langu");});
test("languor -> languor", function() {deepEqual( Stem("languor"), "languor");});
test("languore -> languor", function() {deepEqual( Stem("languore"), "languor");});
test("lanna -> lann", function() {deepEqual( Stem("lanna"), "lann");});
test("lanose -> lanos", function() {deepEqual( Stem("lanose"), "lanos");});
test("lanterna -> lantern", function() {deepEqual( Stem("lanterna"), "lantern");});
test("lanternino -> lanternin", function() {deepEqual( Stem("lanternino"), "lanternin");});
test("lanzichenecchi -> lanzichenecc", function() {deepEqual( Stem("lanzichenecchi"), "lanzichenecc");});
test("lanzichenecco -> lanzichenecc", function() {deepEqual( Stem("lanzichenecco"), "lanzichenecc");});
test("lapadura -> lapadur", function() {deepEqual( Stem("lapadura"), "lapadur");});
test("lapazio -> lapaz", function() {deepEqual( Stem("lapazio"), "lapaz");});
test("lapide -> lapid", function() {deepEqual( Stem("lapide"), "lapid");});
test("lapidum -> lapidum", function() {deepEqual( Stem("lapidum"), "lapidum");});
test("laq -> laq", function() {deepEqual( Stem("laq"), "laq");});
test("lara -> lar", function() {deepEqual( Stem("lara"), "lar");});
test("larache -> larac", function() {deepEqual( Stem("larache"), "larac");});
test("larga -> larg", function() {deepEqual( Stem("larga"), "larg");});
test("largamente -> larg", function() {deepEqual( Stem("largamente"), "larg");});
test("larghe -> larg", function() {deepEqual( Stem("larghe"), "larg");});
test("larghezza -> larghezz", function() {deepEqual( Stem("larghezza"), "larghezz");});
test("larghi -> larg", function() {deepEqual( Stem("larghi"), "larg");});
test("larghissima -> larghissim", function() {deepEqual( Stem("larghissima"), "larghissim");});
test("largo -> larg", function() {deepEqual( Stem("largo"), "larg");});
test("lariana -> larian", function() {deepEqual( Stem("lariana"), "larian");});
test("lariani -> larian", function() {deepEqual( Stem("lariani"), "larian");});
test("larim -> larim", function() {deepEqual( Stem("larim"), "larim");});
test("larnaca -> larnac", function() {deepEqual( Stem("larnaca"), "larnac");});
test("lars -> lars", function() {deepEqual( Stem("lars"), "lars");});
test("larva -> larv", function() {deepEqual( Stem("larva"), "larv");});
test("las -> las", function() {deepEqual( Stem("las"), "las");});
test("lasalandra -> lasalandr", function() {deepEqual( Stem("lasalandra"), "lasalandr");});
test("lascerà -> lasc", function() {deepEqual( Stem("lascerà"), "lasc");});
test("lascerai -> lasc", function() {deepEqual( Stem("lascerai"), "lasc");});
test("lascerebbe -> lasc", function() {deepEqual( Stem("lascerebbe"), "lasc");});
test("lasceremo -> lasc", function() {deepEqual( Stem("lasceremo"), "lasc");});
test("lascerete -> lasc", function() {deepEqual( Stem("lascerete"), "lasc");});
test("lascerò -> lasc", function() {deepEqual( Stem("lascerò"), "lasc");});
test("lasci -> lasc", function() {deepEqual( Stem("lasci"), "lasc");});
test("lascia -> lasc", function() {deepEqual( Stem("lascia"), "lasc");});
test("lasciai -> lascia", function() {deepEqual( Stem("lasciai"), "lascia");});
test("lasciala -> lascial", function() {deepEqual( Stem("lasciala"), "lascial");});
test("lasciale -> lascial", function() {deepEqual( Stem("lasciale"), "lascial");});
test("lasciam -> lasciam", function() {deepEqual( Stem("lasciam"), "lasciam");});
test("lasciamo -> lasc", function() {deepEqual( Stem("lasciamo"), "lasc");});
test("lasciamoli -> lasciamol", function() {deepEqual( Stem("lasciamoli"), "lasciamol");});
test("lascian -> lascian", function() {deepEqual( Stem("lascian"), "lascian");});
test("lasciando -> lasc", function() {deepEqual( Stem("lasciando"), "lasc");});
test("lasciandogli -> lasc", function() {deepEqual( Stem("lasciandogli"), "lasc");});
test("lasciandola -> lasc", function() {deepEqual( Stem("lasciandola"), "lasc");});
test("lasciandole -> lasc", function() {deepEqual( Stem("lasciandole"), "lasc");});
test("lasciandolo -> lasc", function() {deepEqual( Stem("lasciandolo"), "lasc");});
test("lasciandosi -> lasc", function() {deepEqual( Stem("lasciandosi"), "lasc");});
test("lasciandovela -> lasc", function() {deepEqual( Stem("lasciandovela"), "lasc");});
test("lasciano -> lasc", function() {deepEqual( Stem("lasciano"), "lasc");});
test("lasciar -> lasc", function() {deepEqual( Stem("lasciar"), "lasc");});
test("lasciarci -> lasc", function() {deepEqual( Stem("lasciarci"), "lasc");});
test("lasciare -> lasc", function() {deepEqual( Stem("lasciare"), "lasc");});
test("lasciargli -> lasc", function() {deepEqual( Stem("lasciargli"), "lasc");});
test("lasciarla -> lasc", function() {deepEqual( Stem("lasciarla"), "lasc");});
test("lasciarle -> lasc", function() {deepEqual( Stem("lasciarle"), "lasc");});
test("lasciarli -> lasc", function() {deepEqual( Stem("lasciarli"), "lasc");});
test("lasciarlo -> lasc", function() {deepEqual( Stem("lasciarlo"), "lasc");});
test("lasciarmi -> lasc", function() {deepEqual( Stem("lasciarmi"), "lasc");});
test("lasciarne -> lasc", function() {deepEqual( Stem("lasciarne"), "lasc");});
test("lasciaron -> lasciaron", function() {deepEqual( Stem("lasciaron"), "lasciaron");});
test("lasciarono -> lasc", function() {deepEqual( Stem("lasciarono"), "lasc");});
test("lasciarsi -> lasc", function() {deepEqual( Stem("lasciarsi"), "lasc");});
test("lasciarvi -> lasc", function() {deepEqual( Stem("lasciarvi"), "lasc");});
test("lasciasse -> lasc", function() {deepEqual( Stem("lasciasse"), "lasc");});
test("lasciassero -> lasc", function() {deepEqual( Stem("lasciassero"), "lasc");});
test("lasciassi -> lasc", function() {deepEqual( Stem("lasciassi"), "lasc");});
test("lasciassimo -> lasc", function() {deepEqual( Stem("lasciassimo"), "lasc");});
test("lasciata -> lasc", function() {deepEqual( Stem("lasciata"), "lasc");});
test("lasciate -> lasc", function() {deepEqual( Stem("lasciate"), "lasc");});
test("lasciatela -> lasciatel", function() {deepEqual( Stem("lasciatela"), "lasciatel");});
test("lasciateli -> lasciatel", function() {deepEqual( Stem("lasciateli"), "lasciatel");});
test("lasciatelo -> lasciatel", function() {deepEqual( Stem("lasciatelo"), "lasciatel");});
test("lasciatemi -> lasciatem", function() {deepEqual( Stem("lasciatemi"), "lasciatem");});
test("lasciatevi -> lasciat", function() {deepEqual( Stem("lasciatevi"), "lasciat");});
test("lasciati -> lasc", function() {deepEqual( Stem("lasciati"), "lasc");});
test("lasciato -> lasc", function() {deepEqual( Stem("lasciato"), "lasc");});
test("lasciatolo -> lasciatol", function() {deepEqual( Stem("lasciatolo"), "lasciatol");});
test("lasciatovi -> lasciatov", function() {deepEqual( Stem("lasciatovi"), "lasciatov");});
test("lasciava -> lasc", function() {deepEqual( Stem("lasciava"), "lasc");});
test("lasciavan -> lasciavan", function() {deepEqual( Stem("lasciavan"), "lasciavan");});
test("lasciavano -> lasc", function() {deepEqual( Stem("lasciavano"), "lasc");});
test("lascifareame -> lascifaream", function() {deepEqual( Stem("lascifareame"), "lascifaream");});
test("lascin -> lascin", function() {deepEqual( Stem("lascin"), "lascin");});
test("lascino -> lascin", function() {deepEqual( Stem("lascino"), "lascin");});
test("lascio -> lasc", function() {deepEqual( Stem("lascio"), "lasc");});
test("lasciò -> lasc", function() {deepEqual( Stem("lasciò"), "lasc");});
test("lasciorno -> lasciorn", function() {deepEqual( Stem("lasciorno"), "lasciorn");});
test("lascito -> lasc", function() {deepEqual( Stem("lascito"), "lasc");});
test("lasorella -> lasorell", function() {deepEqual( Stem("lasorella"), "lasorell");});
test("lassandro -> lassandr", function() {deepEqual( Stem("lassandro"), "lassandr");});
test("lasso -> lass", function() {deepEqual( Stem("lasso"), "lass");});
test("lassu -> lassu", function() {deepEqual( Stem("lassu"), "lassu");});
test("lassù -> lassù", function() {deepEqual( Stem("lassù"), "lassù");});
test("last -> last", function() {deepEqual( Stem("last"), "last");});
test("lastre -> lastr", function() {deepEqual( Stem("lastre"), "lastr");});
test("lastrico -> lastric", function() {deepEqual( Stem("lastrico"), "lastric");});
test("latente -> latent", function() {deepEqual( Stem("latente"), "latent");});
test("laterale -> lateral", function() {deepEqual( Stem("laterale"), "lateral");});
test("lateralmente -> lateral", function() {deepEqual( Stem("lateralmente"), "lateral");});
test("lateranensi -> lateranens", function() {deepEqual( Stem("lateranensi"), "lateranens");});
test("laterano -> later", function() {deepEqual( Stem("laterano"), "later");});
test("lati -> lat", function() {deepEqual( Stem("lati"), "lat");});
test("latifondi -> latifond", function() {deepEqual( Stem("latifondi"), "latifond");});
test("latifondisti -> latifond", function() {deepEqual( Stem("latifondisti"), "latifond");});
test("latimore -> latimor", function() {deepEqual( Stem("latimore"), "latimor");});
test("latina -> latin", function() {deepEqual( Stem("latina"), "latin");});
test("latine -> latin", function() {deepEqual( Stem("latine"), "latin");});
test("latini -> latin", function() {deepEqual( Stem("latini"), "latin");});
test("latino -> latin", function() {deepEqual( Stem("latino"), "latin");});
test("latinoamericane -> latinoamerican", function() {deepEqual( Stem("latinoamericane"), "latinoamerican");});
test("latinoamericano -> latinoameric", function() {deepEqual( Stem("latinoamericano"), "latinoameric");});
test("latinorum -> latinorum", function() {deepEqual( Stem("latinorum"), "latinorum");});
test("latinucci -> latinucc", function() {deepEqual( Stem("latinucci"), "latinucc");});
test("latisana -> latisan", function() {deepEqual( Stem("latisana"), "latisan");});
test("latitava -> latit", function() {deepEqual( Stem("latitava"), "latit");});
test("lato -> lat", function() {deepEqual( Stem("lato"), "lat");});
test("latore -> lator", function() {deepEqual( Stem("latore"), "lator");});
test("latronico -> latron", function() {deepEqual( Stem("latronico"), "latron");});
test("lattante -> lattant", function() {deepEqual( Stem("lattante"), "lattant");});
test("latte -> latt", function() {deepEqual( Stem("latte"), "latt");});
test("laura -> laur", function() {deepEqual( Stem("laura"), "laur");});
test("laureati -> laur", function() {deepEqual( Stem("laureati"), "laur");});
test("laureato -> laur", function() {deepEqual( Stem("laureato"), "laur");});
test("laurent -> laurent", function() {deepEqual( Stem("laurent"), "laurent");});
test("laurentii -> laurent", function() {deepEqual( Stem("laurentii"), "laurent");});
test("lauro -> laur", function() {deepEqual( Stem("lauro"), "laur");});
test("lautezza -> lautezz", function() {deepEqual( Stem("lautezza"), "lautezz");});
test("lav -> lav", function() {deepEqual( Stem("lav"), "lav");});
test("lava -> lav", function() {deepEqual( Stem("lava"), "lav");});
test("lavandai -> lavanda", function() {deepEqual( Stem("lavandai"), "lavanda");});
test("lavano -> lav", function() {deepEqual( Stem("lavano"), "lav");});
test("lavardera -> lavarder", function() {deepEqual( Stem("lavardera"), "lavarder");});
test("lavare -> lav", function() {deepEqual( Stem("lavare"), "lav");});
test("lavasse -> lav", function() {deepEqual( Stem("lavasse"), "lav");});
test("lavata -> lav", function() {deepEqual( Stem("lavata"), "lav");});
test("lavato -> lav", function() {deepEqual( Stem("lavato"), "lav");});
test("laverò -> lav", function() {deepEqual( Stem("laverò"), "lav");});
test("lavo -> lav", function() {deepEqual( Stem("lavo"), "lav");});
test("lavora -> lavor", function() {deepEqual( Stem("lavora"), "lavor");});
test("lavorando -> lavor", function() {deepEqual( Stem("lavorando"), "lavor");});
test("lavorano -> lavor", function() {deepEqual( Stem("lavorano"), "lavor");});
test("lavorante -> lavor", function() {deepEqual( Stem("lavorante"), "lavor");});
test("lavoranti -> lavor", function() {deepEqual( Stem("lavoranti"), "lavor");});
test("lavorar -> lavor", function() {deepEqual( Stem("lavorar"), "lavor");});
test("lavorare -> lavor", function() {deepEqual( Stem("lavorare"), "lavor");});
test("lavorata -> lavor", function() {deepEqual( Stem("lavorata"), "lavor");});
test("lavorate -> lavor", function() {deepEqual( Stem("lavorate"), "lavor");});
test("lavorati -> lavor", function() {deepEqual( Stem("lavorati"), "lavor");});
test("lavorativa -> lavor", function() {deepEqual( Stem("lavorativa"), "lavor");});
test("lavorato -> lavor", function() {deepEqual( Stem("lavorato"), "lavor");});
test("lavoratore -> lavor", function() {deepEqual( Stem("lavoratore"), "lavor");});
test("lavoratori -> lavor", function() {deepEqual( Stem("lavoratori"), "lavor");});
test("lavoratrori -> lavoratror", function() {deepEqual( Stem("lavoratrori"), "lavoratror");});
test("lavorava -> lavor", function() {deepEqual( Stem("lavorava"), "lavor");});
test("lavoravano -> lavor", function() {deepEqual( Stem("lavoravano"), "lavor");});
test("lavoravi -> lavor", function() {deepEqual( Stem("lavoravi"), "lavor");});
test("lavorazione -> lavor", function() {deepEqual( Stem("lavorazione"), "lavor");});
test("lavori -> lavor", function() {deepEqual( Stem("lavori"), "lavor");});
test("lavorino -> lavorin", function() {deepEqual( Stem("lavorino"), "lavorin");});
test("lavorio -> lavor", function() {deepEqual( Stem("lavorio"), "lavor");});
test("lavoro -> lavor", function() {deepEqual( Stem("lavoro"), "lavor");});
test("lavorò -> lavor", function() {deepEqual( Stem("lavorò"), "lavor");});
test("lazeretto -> lazerett", function() {deepEqual( Stem("lazeretto"), "lazerett");});
test("laziale -> lazial", function() {deepEqual( Stem("laziale"), "lazial");});
test("lazio -> laz", function() {deepEqual( Stem("lazio"), "laz");});
test("lazzarini -> lazzarin", function() {deepEqual( Stem("lazzarini"), "lazzarin");});
test("lazzati -> lazz", function() {deepEqual( Stem("lazzati"), "lazz");});
test("lazzeretti -> lazzerett", function() {deepEqual( Stem("lazzeretti"), "lazzerett");});
test("lazzeretto -> lazzerett", function() {deepEqual( Stem("lazzeretto"), "lazzerett");});
test("lbiro -> lbir", function() {deepEqual( Stem("lbiro"), "lbir");});
test("lc -> lc", function() {deepEqual( Stem("lc"), "lc");});
test("ld -> ld", function() {deepEqual( Stem("ld"), "ld");});
test("le -> le", function() {deepEqual( Stem("le"), "le");});
test("leader -> leader", function() {deepEqual( Stem("leader"), "leader");});
test("leadership -> leadership", function() {deepEqual( Stem("leadership"), "leadership");});
test("leaf -> leaf", function() {deepEqual( Stem("leaf"), "leaf");});
test("leale -> leal", function() {deepEqual( Stem("leale"), "leal");});
test("lealmente -> lealment", function() {deepEqual( Stem("lealmente"), "lealment");});
test("lealtà -> lealt", function() {deepEqual( Stem("lealtà"), "lealt");});
test("leante -> leant", function() {deepEqual( Stem("leante"), "leant");});
test("lebrazione -> lebrazion", function() {deepEqual( Stem("lebrazione"), "lebrazion");});
test("leca -> lec", function() {deepEqual( Stem("leca"), "lec");});
test("leccar -> lecc", function() {deepEqual( Stem("leccar"), "lecc");});
test("leccate -> lecc", function() {deepEqual( Stem("leccate"), "lecc");});
test("lecce -> lecc", function() {deepEqual( Stem("lecce"), "lecc");});
test("leccese -> lecces", function() {deepEqual( Stem("leccese"), "lecces");});
test("lecco -> lecc", function() {deepEqual( Stem("lecco"), "lecc");});
test("lecita -> lec", function() {deepEqual( Stem("lecita"), "lec");});
test("leciti -> lec", function() {deepEqual( Stem("leciti"), "lec");});
test("lecito -> lec", function() {deepEqual( Stem("lecito"), "lec");});
test("lectures -> lectures", function() {deepEqual( Stem("lectures"), "lectures");});
test("lede -> led", function() {deepEqual( Stem("lede"), "led");});
test("ledere -> led", function() {deepEqual( Stem("ledere"), "led");});
test("ledo -> led", function() {deepEqual( Stem("ledo"), "led");});
test("leffe -> leff", function() {deepEqual( Stem("leffe"), "leff");});
test("lega -> leg", function() {deepEqual( Stem("lega"), "leg");});
test("legà -> leg", function() {deepEqual( Stem("legà"), "leg");});
test("legale -> legal", function() {deepEqual( Stem("legale"), "legal");});
test("legali -> legal", function() {deepEqual( Stem("legali"), "legal");});
test("legalità -> legal", function() {deepEqual( Stem("legalità"), "legal");});
test("legame -> legam", function() {deepEqual( Stem("legame"), "legam");});
test("legami -> legam", function() {deepEqual( Stem("legami"), "legam");});
test("legano -> leg", function() {deepEqual( Stem("legano"), "leg");});
test("legare -> leg", function() {deepEqual( Stem("legare"), "leg");});
test("legata -> leg", function() {deepEqual( Stem("legata"), "leg");});
test("legate -> leg", function() {deepEqual( Stem("legate"), "leg");});
test("legatevi -> legat", function() {deepEqual( Stem("legatevi"), "legat");});
test("legati -> leg", function() {deepEqual( Stem("legati"), "leg");});
test("legato -> leg", function() {deepEqual( Stem("legato"), "leg");});
test("legatolo -> legatol", function() {deepEqual( Stem("legatolo"), "legatol");});
test("legatura -> legatur", function() {deepEqual( Stem("legatura"), "legatur");});
test("leggano -> legg", function() {deepEqual( Stem("leggano"), "legg");});
test("legge -> legg", function() {deepEqual( Stem("legge"), "legg");});
test("leggendario -> leggendar", function() {deepEqual( Stem("leggendario"), "leggendar");});
test("legger -> legger", function() {deepEqual( Stem("legger"), "legger");});
test("leggera -> legger", function() {deepEqual( Stem("leggera"), "legger");});
test("leggeranno -> legg", function() {deepEqual( Stem("leggeranno"), "legg");});
test("leggere -> legg", function() {deepEqual( Stem("leggere"), "legg");});
test("leggerebbe -> legg", function() {deepEqual( Stem("leggerebbe"), "legg");});
test("leggerezza -> leggerezz", function() {deepEqual( Stem("leggerezza"), "leggerezz");});
test("leggergli -> legg", function() {deepEqual( Stem("leggergli"), "legg");});
test("leggeri -> legger", function() {deepEqual( Stem("leggeri"), "legger");});
test("leggerissimo -> leggerissim", function() {deepEqual( Stem("leggerissimo"), "leggerissim");});
test("leggerla -> legg", function() {deepEqual( Stem("leggerla"), "legg");});
test("leggerle -> legg", function() {deepEqual( Stem("leggerle"), "legg");});
test("leggermente -> legger", function() {deepEqual( Stem("leggermente"), "legger");});
test("leggero -> legger", function() {deepEqual( Stem("leggero"), "legger");});
test("leggesse -> leggess", function() {deepEqual( Stem("leggesse"), "leggess");});
test("leggeva -> legg", function() {deepEqual( Stem("leggeva"), "legg");});
test("leggi -> legg", function() {deepEqual( Stem("leggi"), "legg");});
test("leggier -> leggier", function() {deepEqual( Stem("leggier"), "leggier");});
test("leggiera -> leggier", function() {deepEqual( Stem("leggiera"), "leggier");});
test("leggieri -> leggier", function() {deepEqual( Stem("leggieri"), "leggier");});
test("leggiero -> leggier", function() {deepEqual( Stem("leggiero"), "leggier");});
test("leggina -> leggin", function() {deepEqual( Stem("leggina"), "leggin");});
test("leggìo -> leggì", function() {deepEqual( Stem("leggìo"), "leggì");});
test("leggo -> legg", function() {deepEqual( Stem("leggo"), "legg");});
test("leghe -> legh", function() {deepEqual( Stem("leghe"), "legh");});
test("leghissimi -> leghissim", function() {deepEqual( Stem("leghissimi"), "leghissim");});
test("leghista -> leghist", function() {deepEqual( Stem("leghista"), "leghist");});
test("leghiste -> leghist", function() {deepEqual( Stem("leghiste"), "leghist");});
test("leghisti -> leghist", function() {deepEqual( Stem("leghisti"), "leghist");});
test("leghsiti -> leghs", function() {deepEqual( Stem("leghsiti"), "leghs");});
test("legilative -> legil", function() {deepEqual( Stem("legilative"), "legil");});
test("legis -> legis", function() {deepEqual( Stem("legis"), "legis");});
test("legislativa -> legisl", function() {deepEqual( Stem("legislativa"), "legisl");});
test("legislative -> legisl", function() {deepEqual( Stem("legislative"), "legisl");});
test("legislativi -> legisl", function() {deepEqual( Stem("legislativi"), "legisl");});
test("legislativo -> legisl", function() {deepEqual( Stem("legislativo"), "legisl");});
test("legislatore -> legisl", function() {deepEqual( Stem("legislatore"), "legisl");});
test("legislatura -> legislatur", function() {deepEqual( Stem("legislatura"), "legislatur");});
test("legislature -> legislatur", function() {deepEqual( Stem("legislature"), "legislatur");});
test("legislazione -> legisl", function() {deepEqual( Stem("legislazione"), "legisl");});
test("legisti -> legist", function() {deepEqual( Stem("legisti"), "legist");});
test("legittima -> legittim", function() {deepEqual( Stem("legittima"), "legittim");});
test("legittimamente -> legittim", function() {deepEqual( Stem("legittimamente"), "legittim");});
test("legittimare -> legittim", function() {deepEqual( Stem("legittimare"), "legittim");});
test("legittimatasi -> legittimatas", function() {deepEqual( Stem("legittimatasi"), "legittimatas");});
test("legittimazione -> legittim", function() {deepEqual( Stem("legittimazione"), "legittim");});
test("legittime -> legittim", function() {deepEqual( Stem("legittime"), "legittim");});
test("legittimità -> legittim", function() {deepEqual( Stem("legittimità"), "legittim");});
test("legittimo -> legittim", function() {deepEqual( Stem("legittimo"), "legittim");});
test("legna -> legn", function() {deepEqual( Stem("legna"), "legn");});
test("legnaiolo -> legnaiol", function() {deepEqual( Stem("legnaiolo"), "legnaiol");});
test("legname -> legnam", function() {deepEqual( Stem("legname"), "legnam");});
test("legnano -> legn", function() {deepEqual( Stem("legnano"), "legn");});
test("legnetti -> legnett", function() {deepEqual( Stem("legnetti"), "legnett");});
test("legni -> legn", function() {deepEqual( Stem("legni"), "legn");});
test("legno -> legn", function() {deepEqual( Stem("legno"), "legn");});
test("legò -> leg", function() {deepEqual( Stem("legò"), "leg");});
test("lehmann -> lehmann", function() {deepEqual( Stem("lehmann"), "lehmann");});
test("lehnigk -> lehnigk", function() {deepEqual( Stem("lehnigk"), "lehnigk");});
test("lei -> lei", function() {deepEqual( Stem("lei"), "lei");});
test("leibnitz -> leibnitz", function() {deepEqual( Stem("leibnitz"), "leibnitz");});
test("leicestershire -> leicestersh", function() {deepEqual( Stem("leicestershire"), "leicestersh");});
test("leit -> leit", function() {deepEqual( Stem("leit"), "leit");});
test("leitgeb -> leitgeb", function() {deepEqual( Stem("leitgeb"), "leitgeb");});
test("leitner -> leitner", function() {deepEqual( Stem("leitner"), "leitner");});
test("lembo -> lemb", function() {deepEqual( Stem("lembo"), "lemb");});
test("lemme -> lemm", function() {deepEqual( Stem("lemme"), "lemm");});
test("len -> len", function() {deepEqual( Stem("len"), "len");});
test("lena -> len", function() {deepEqual( Stem("lena"), "len");});
test("leni -> len", function() {deepEqual( Stem("leni"), "len");});
test("leninista -> lenin", function() {deepEqual( Stem("leninista"), "lenin");});
test("lens -> lens", function() {deepEqual( Stem("lens"), "lens");});
test("lenta -> lent", function() {deepEqual( Stem("lenta"), "lent");});
test("lentamente -> lent", function() {deepEqual( Stem("lentamente"), "lent");});
test("lentezza -> lentezz", function() {deepEqual( Stem("lentezza"), "lentezz");});
test("lenti -> lent", function() {deepEqual( Stem("lenti"), "lent");});
test("lentissimi -> lentissim", function() {deepEqual( Stem("lentissimi"), "lentissim");});
test("lentissimo -> lentissim", function() {deepEqual( Stem("lentissimo"), "lentissim");});
test("lento -> lent", function() {deepEqual( Stem("lento"), "lent");});
test("leny -> leny", function() {deepEqual( Stem("leny"), "leny");});
test("lenzoli -> lenzol", function() {deepEqual( Stem("lenzoli"), "lenzol");});
test("lenzolo -> lenzol", function() {deepEqual( Stem("lenzolo"), "lenzol");});
test("leo -> leo", function() {deepEqual( Stem("leo"), "leo");});
test("leoluca -> leoluc", function() {deepEqual( Stem("leoluca"), "leoluc");});
test("leon -> leon", function() {deepEqual( Stem("leon"), "leon");});
test("leonardo -> leonard", function() {deepEqual( Stem("leonardo"), "leonard");});
test("leone -> leon", function() {deepEqual( Stem("leone"), "leon");});
test("leoni -> leon", function() {deepEqual( Stem("leoni"), "leon");});
test("leonid -> leonid", function() {deepEqual( Stem("leonid"), "leonid");});
test("leopoldo -> leopold", function() {deepEqual( Stem("leopoldo"), "leopold");});
test("lepre -> lepr", function() {deepEqual( Stem("lepre"), "lepr");});
test("lercia -> lerc", function() {deepEqual( Stem("lercia"), "lerc");});
test("les -> les", function() {deepEqual( Stem("les"), "les");});
test("lesioni -> lesion", function() {deepEqual( Stem("lesioni"), "lesion");});
test("lesiva -> les", function() {deepEqual( Stem("lesiva"), "les");});
test("lesive -> lesiv", function() {deepEqual( Stem("lesive"), "lesiv");});
test("lesse -> less", function() {deepEqual( Stem("lesse"), "less");});
test("lessicale -> lessical", function() {deepEqual( Stem("lessicale"), "lessical");});
test("lesta -> lest", function() {deepEqual( Stem("lesta"), "lest");});
test("lesti -> lest", function() {deepEqual( Stem("lesti"), "lest");});
test("lesto -> lest", function() {deepEqual( Stem("lesto"), "lest");});
test("let -> let", function() {deepEqual( Stem("let"), "let");});
test("letargo -> letarg", function() {deepEqual( Stem("letargo"), "letarg");});
test("letizia -> letiz", function() {deepEqual( Stem("letizia"), "letiz");});
test("letta -> lett", function() {deepEqual( Stem("letta"), "lett");});
test("lette -> lett", function() {deepEqual( Stem("lette"), "lett");});
test("lettear -> lett", function() {deepEqual( Stem("lettear"), "lett");});
test("letten -> letten", function() {deepEqual( Stem("letten"), "letten");});
test("lettera -> letter", function() {deepEqual( Stem("lettera"), "letter");});
test("letteralmente -> letteral", function() {deepEqual( Stem("letteralmente"), "letteral");});
test("letteraria -> letterar", function() {deepEqual( Stem("letteraria"), "letterar");});
test("letterario -> letterar", function() {deepEqual( Stem("letterario"), "letterar");});
test("letterati -> letter", function() {deepEqual( Stem("letterati"), "letter");});
test("letterato -> letter", function() {deepEqual( Stem("letterato"), "letter");});
test("letteratone -> letteraton", function() {deepEqual( Stem("letteratone"), "letteraton");});
test("letteratura -> letteratur", function() {deepEqual( Stem("letteratura"), "letteratur");});
test("lettere -> lett", function() {deepEqual( Stem("lettere"), "lett");});
test("letteriello -> letteriell", function() {deepEqual( Stem("letteriello"), "letteriell");});
test("letti -> lett", function() {deepEqual( Stem("letti"), "lett");});
test("lettiga -> lettig", function() {deepEqual( Stem("lettiga"), "lettig");});
test("lettighieri -> lettighier", function() {deepEqual( Stem("lettighieri"), "lettighier");});
test("lettighiero -> lettighier", function() {deepEqual( Stem("lettighiero"), "lettighier");});
test("letto -> lett", function() {deepEqual( Stem("letto"), "lett");});
test("lettonia -> letton", function() {deepEqual( Stem("lettonia"), "letton");});
test("lettore -> lettor", function() {deepEqual( Stem("lettore"), "lettor");});
test("lettori -> lettor", function() {deepEqual( Stem("lettori"), "lettor");});
test("lettovi -> lettov", function() {deepEqual( Stem("lettovi"), "lettov");});
test("lettuccio -> lettucc", function() {deepEqual( Stem("lettuccio"), "lettucc");});
test("lettura -> lettur", function() {deepEqual( Stem("lettura"), "lettur");});
test("leuca -> leuc", function() {deepEqual( Stem("leuca"), "leuc");});
test("leuci -> leuc", function() {deepEqual( Stem("leuci"), "leuc");});
test("leva -> lev", function() {deepEqual( Stem("leva"), "lev");});
test("levami -> levam", function() {deepEqual( Stem("levami"), "levam");});
test("levando -> lev", function() {deepEqual( Stem("levando"), "lev");});
test("levandosi -> lev", function() {deepEqual( Stem("levandosi"), "lev");});
test("levanta -> levant", function() {deepEqual( Stem("levanta"), "levant");});
test("levante -> levant", function() {deepEqual( Stem("levante"), "levant");});
test("levantese -> levantes", function() {deepEqual( Stem("levantese"), "levantes");});
test("levar -> lev", function() {deepEqual( Stem("levar"), "lev");});
test("levare -> lev", function() {deepEqual( Stem("levare"), "lev");});
test("levargli -> lev", function() {deepEqual( Stem("levargli"), "lev");});
test("levarla -> lev", function() {deepEqual( Stem("levarla"), "lev");});
test("levarle -> lev", function() {deepEqual( Stem("levarle"), "lev");});
test("levarli -> lev", function() {deepEqual( Stem("levarli"), "lev");});
test("levarlo -> lev", function() {deepEqual( Stem("levarlo"), "lev");});
test("levarmi -> lev", function() {deepEqual( Stem("levarmi"), "lev");});
test("levarne -> lev", function() {deepEqual( Stem("levarne"), "lev");});
test("levarnela -> levarnel", function() {deepEqual( Stem("levarnela"), "levarnel");});
test("levaron -> levaron", function() {deepEqual( Stem("levaron"), "levaron");});
test("levarsi -> lev", function() {deepEqual( Stem("levarsi"), "lev");});
test("levarti -> lev", function() {deepEqual( Stem("levarti"), "lev");});
test("levarvi -> lev", function() {deepEqual( Stem("levarvi"), "lev");});
test("levata -> lev", function() {deepEqual( Stem("levata"), "lev");});
test("levatasi -> levatas", function() {deepEqual( Stem("levatasi"), "levatas");});
test("levate -> lev", function() {deepEqual( Stem("levate"), "lev");});
test("levatevelo -> levatevel", function() {deepEqual( Stem("levatevelo"), "levatevel");});
test("levatevi -> levat", function() {deepEqual( Stem("levatevi"), "levat");});
test("levati -> lev", function() {deepEqual( Stem("levati"), "lev");});
test("levato -> lev", function() {deepEqual( Stem("levato"), "lev");});
test("levatosi -> levat", function() {deepEqual( Stem("levatosi"), "levat");});
test("levava -> lev", function() {deepEqual( Stem("levava"), "lev");});
test("levavano -> lev", function() {deepEqual( Stem("levavano"), "lev");});
test("leverebbe -> lev", function() {deepEqual( Stem("leverebbe"), "lev");});
test("leverkusen -> leverkusen", function() {deepEqual( Stem("leverkusen"), "leverkusen");});
test("levi -> lev", function() {deepEqual( Stem("levi"), "lev");});
test("levin -> levin", function() {deepEqual( Stem("levin"), "levin");});
test("levino -> levin", function() {deepEqual( Stem("levino"), "levin");});
test("levo -> lev", function() {deepEqual( Stem("levo"), "lev");});
test("levò -> lev", function() {deepEqual( Stem("levò"), "lev");});
test("levy -> levy", function() {deepEqual( Stem("levy"), "levy");});
test("lewis -> lewis", function() {deepEqual( Stem("lewis"), "lewis");});
test("lex -> lex", function() {deepEqual( Stem("lex"), "lex");});
test("lezione -> lezion", function() {deepEqual( Stem("lezione"), "lezion");});
test("leziosaggine -> leziosaggin", function() {deepEqual( Stem("leziosaggine"), "leziosaggin");});
test("lezioso -> lezios", function() {deepEqual( Stem("lezioso"), "lezios");});
test("lg -> lg", function() {deepEqual( Stem("lg"), "lg");});
test("lh -> lh", function() {deepEqual( Stem("lh"), "lh");});
test("li -> li", function() {deepEqual( Stem("li"), "li");});
test("lì -> lì", function() {deepEqual( Stem("lì"), "lì");});
test("liatti -> liatt", function() {deepEqual( Stem("liatti"), "liatt");});
test("lib -> lib", function() {deepEqual( Stem("lib"), "lib");});
test("libano -> lib", function() {deepEqual( Stem("libano"), "lib");});
test("libbra -> libbr", function() {deepEqual( Stem("libbra"), "libbr");});
test("libelli -> libell", function() {deepEqual( Stem("libelli"), "libell");});
test("libera -> liber", function() {deepEqual( Stem("libera"), "liber");});
test("liberaci -> liberac", function() {deepEqual( Stem("liberaci"), "liberac");});
test("liberal -> liberal", function() {deepEqual( Stem("liberal"), "liberal");});
test("liberaldemocratica -> liberaldemocrat", function() {deepEqual( Stem("liberaldemocratica"), "liberaldemocrat");});
test("liberaldemocratico -> liberaldemocrat", function() {deepEqual( Stem("liberaldemocratico"), "liberaldemocrat");});
test("liberale -> liberal", function() {deepEqual( Stem("liberale"), "liberal");});
test("liberali -> liberal", function() {deepEqual( Stem("liberali"), "liberal");});
test("liberalismo -> liberal", function() {deepEqual( Stem("liberalismo"), "liberal");});
test("liberalità -> liberal", function() {deepEqual( Stem("liberalità"), "liberal");});
test("liberalizzato -> liberalizz", function() {deepEqual( Stem("liberalizzato"), "liberalizz");});
test("liberalizzazione -> liberalizz", function() {deepEqual( Stem("liberalizzazione"), "liberalizz");});
test("liberamente -> liber", function() {deepEqual( Stem("liberamente"), "liber");});
test("liberandovi -> liber", function() {deepEqual( Stem("liberandovi"), "liber");});
test("liberar -> liber", function() {deepEqual( Stem("liberar"), "liber");});
test("liberarasi -> liberaras", function() {deepEqual( Stem("liberarasi"), "liberaras");});
test("liberare -> liber", function() {deepEqual( Stem("liberare"), "liber");});
test("liberarla -> liber", function() {deepEqual( Stem("liberarla"), "liber");});
test("liberarle -> liber", function() {deepEqual( Stem("liberarle"), "liber");});
test("liberarono -> liber", function() {deepEqual( Stem("liberarono"), "liber");});
test("liberarsene -> liber", function() {deepEqual( Stem("liberarsene"), "liber");});
test("liberarsi -> liber", function() {deepEqual( Stem("liberarsi"), "liber");});
test("liberarvi -> liber", function() {deepEqual( Stem("liberarvi"), "liber");});
test("liberata -> liber", function() {deepEqual( Stem("liberata"), "liber");});
test("liberati -> liber", function() {deepEqual( Stem("liberati"), "liber");});
test("liberato -> liber", function() {deepEqual( Stem("liberato"), "liber");});
test("liberatore -> liber", function() {deepEqual( Stem("liberatore"), "liber");});
test("liberatori -> liber", function() {deepEqual( Stem("liberatori"), "liber");});
test("liberatorio -> liberator", function() {deepEqual( Stem("liberatorio"), "liberator");});
test("liberavamo -> liber", function() {deepEqual( Stem("liberavamo"), "liber");});
test("liberazione -> liber", function() {deepEqual( Stem("liberazione"), "liber");});
test("libere -> lib", function() {deepEqual( Stem("libere"), "lib");});
test("libererò -> liber", function() {deepEqual( Stem("libererò"), "liber");});
test("liberi -> liber", function() {deepEqual( Stem("liberi"), "liber");});
test("liberiamocene -> liberiamocen", function() {deepEqual( Stem("liberiamocene"), "liberiamocen");});
test("liberismo -> liber", function() {deepEqual( Stem("liberismo"), "liber");});
test("liberissimi -> liberissim", function() {deepEqual( Stem("liberissimi"), "liberissim");});
test("liberista -> liber", function() {deepEqual( Stem("liberista"), "liber");});
test("liberiste -> liber", function() {deepEqual( Stem("liberiste"), "liber");});
test("liberisti -> liber", function() {deepEqual( Stem("liberisti"), "liber");});
test("libero -> liber", function() {deepEqual( Stem("libero"), "liber");});
test("liberò -> lib", function() {deepEqual( Stem("liberò"), "lib");});
test("libertà -> libert", function() {deepEqual( Stem("libertà"), "libert");});
test("libertaria -> libertar", function() {deepEqual( Stem("libertaria"), "libertar");});
test("libertas -> libertas", function() {deepEqual( Stem("libertas"), "libertas");});
test("liberte -> libert", function() {deepEqual( Stem("liberte"), "libert");});
test("libertè -> libert", function() {deepEqual( Stem("libertè"), "libert");});
test("libertinaggio -> libertinagg", function() {deepEqual( Stem("libertinaggio"), "libertinagg");});
test("libia -> lib", function() {deepEqual( Stem("libia"), "lib");});
test("libico -> libic", function() {deepEqual( Stem("libico"), "libic");});
test("libra -> libr", function() {deepEqual( Stem("libra"), "libr");});
test("libracci -> libracc", function() {deepEqual( Stem("libracci"), "libracc");});
test("libraccio -> libracc", function() {deepEqual( Stem("libraccio"), "libracc");});
test("librato -> libr", function() {deepEqual( Stem("librato"), "libr");});
test("libreria -> librer", function() {deepEqual( Stem("libreria"), "librer");});
test("librettò -> librett", function() {deepEqual( Stem("librettò"), "librett");});
test("libri -> libr", function() {deepEqual( Stem("libri"), "libr");});
test("libriccin -> libriccin", function() {deepEqual( Stem("libriccin"), "libriccin");});
test("libriccino -> libriccin", function() {deepEqual( Stem("libriccino"), "libriccin");});
test("libricciolo -> libricciol", function() {deepEqual( Stem("libricciolo"), "libricciol");});
test("libro -> libr", function() {deepEqual( Stem("libro"), "libr");});
test("licenza -> licenz", function() {deepEqual( Stem("licenza"), "licenz");});
test("licenziamenti -> licenz", function() {deepEqual( Stem("licenziamenti"), "licenz");});
test("licenziamento -> licenz", function() {deepEqual( Stem("licenziamento"), "licenz");});
test("licenziar -> licenz", function() {deepEqual( Stem("licenziar"), "licenz");});
test("licenziare -> licenz", function() {deepEqual( Stem("licenziare"), "licenz");});
test("licenziaron -> licenziaron", function() {deepEqual( Stem("licenziaron"), "licenziaron");});
test("licenziati -> licenz", function() {deepEqual( Stem("licenziati"), "licenz");});
test("licenziò -> licenz", function() {deepEqual( Stem("licenziò"), "licenz");});
test("liceo -> lice", function() {deepEqual( Stem("liceo"), "lice");});
test("licia -> lic", function() {deepEqual( Stem("licia"), "lic");});
test("licta -> lict", function() {deepEqual( Stem("licta"), "lict");});
test("lid -> lid", function() {deepEqual( Stem("lid"), "lid");});
test("lidia -> lid", function() {deepEqual( Stem("lidia"), "lid");});
test("lido -> lid", function() {deepEqual( Stem("lido"), "lid");});
test("lieberman -> lieberman", function() {deepEqual( Stem("lieberman"), "lieberman");});
test("liegi -> lieg", function() {deepEqual( Stem("liegi"), "lieg");});
test("lierse -> liers", function() {deepEqual( Stem("lierse"), "liers");});
test("lieta -> liet", function() {deepEqual( Stem("lieta"), "liet");});
test("lietamente -> liet", function() {deepEqual( Stem("lietamente"), "liet");});
test("liete -> liet", function() {deepEqual( Stem("liete"), "liet");});
test("lieto -> liet", function() {deepEqual( Stem("lieto"), "liet");});
test("lieve -> liev", function() {deepEqual( Stem("lieve"), "liev");});
test("lievemente -> lievement", function() {deepEqual( Stem("lievemente"), "lievement");});
test("lievi -> liev", function() {deepEqual( Stem("lievi"), "liev");});
test("lievitare -> lievit", function() {deepEqual( Stem("lievitare"), "lievit");});
test("lif -> lif", function() {deepEqual( Stem("lif"), "lif");});
test("liga -> lig", function() {deepEqual( Stem("liga"), "lig");});
test("ligamen -> ligamen", function() {deepEqual( Stem("ligamen"), "ligamen");});
test("ligi -> lig", function() {deepEqual( Stem("ligi"), "lig");});
test("lignano -> lign", function() {deepEqual( Stem("lignano"), "lign");});
test("ligne -> lign", function() {deepEqual( Stem("ligne"), "lign");});
test("ligonchio -> ligonc", function() {deepEqual( Stem("ligonchio"), "ligonc");});
test("liguori -> liguor", function() {deepEqual( Stem("liguori"), "liguor");});
test("ligure -> ligur", function() {deepEqual( Stem("ligure"), "ligur");});
test("liguri -> ligur", function() {deepEqual( Stem("liguri"), "ligur");});
test("liguria -> ligur", function() {deepEqual( Stem("liguria"), "ligur");});
test("lilia -> lil", function() {deepEqual( Stem("lilia"), "lil");});
test("liliano -> lil", function() {deepEqual( Stem("liliano"), "lil");});
test("lilla -> lill", function() {deepEqual( Stem("lilla"), "lill");});
test("lillehammer -> lillehammer", function() {deepEqual( Stem("lillehammer"), "lillehammer");});
test("lilli -> lill", function() {deepEqual( Stem("lilli"), "lill");});
test("lima -> lim", function() {deepEqual( Stem("lima"), "lim");});
test("limatura -> limatur", function() {deepEqual( Stem("limatura"), "limatur");});
test("limbruno -> limbrun", function() {deepEqual( Stem("limbruno"), "limbrun");});
test("limita -> lim", function() {deepEqual( Stem("limita"), "lim");});
test("limitando -> limit", function() {deepEqual( Stem("limitando"), "limit");});
test("limitano -> limit", function() {deepEqual( Stem("limitano"), "limit");});
test("limitare -> limit", function() {deepEqual( Stem("limitare"), "limit");});
test("limitarsi -> limit", function() {deepEqual( Stem("limitarsi"), "limit");});
test("limitata -> limit", function() {deepEqual( Stem("limitata"), "limit");});
test("limitate -> limit", function() {deepEqual( Stem("limitate"), "limit");});
test("limitative -> limit", function() {deepEqual( Stem("limitative"), "limit");});
test("limitativo -> limit", function() {deepEqual( Stem("limitativo"), "limit");});
test("limitato -> limit", function() {deepEqual( Stem("limitato"), "limit");});
test("limitavano -> limit", function() {deepEqual( Stem("limitavano"), "limit");});
test("limitazione -> limit", function() {deepEqual( Stem("limitazione"), "limit");});
test("limitazioni -> limit", function() {deepEqual( Stem("limitazioni"), "limit");});
test("limite -> lim", function() {deepEqual( Stem("limite"), "lim");});
test("limiterà -> limit", function() {deepEqual( Stem("limiterà"), "limit");});
test("limiti -> lim", function() {deepEqual( Stem("limiti"), "lim");});
test("limitiamo -> limit", function() {deepEqual( Stem("limitiamo"), "limit");});
test("limits -> limits", function() {deepEqual( Stem("limits"), "limits");});
test("limpido -> limpid", function() {deepEqual( Stem("limpido"), "limpid");});
test("lina -> lin", function() {deepEqual( Stem("lina"), "lin");});
test("linciaggio -> linciagg", function() {deepEqual( Stem("linciaggio"), "linciagg");});
test("linciati -> linc", function() {deepEqual( Stem("linciati"), "linc");});
test("line -> lin", function() {deepEqual( Stem("line"), "lin");});
test("linea -> line", function() {deepEqual( Stem("linea"), "line");});
test("lineamenti -> lin", function() {deepEqual( Stem("lineamenti"), "lin");});
test("linee -> line", function() {deepEqual( Stem("linee"), "line");});
test("lingua -> lingu", function() {deepEqual( Stem("lingua"), "lingu");});
test("linguaggio -> linguagg", function() {deepEqual( Stem("linguaggio"), "linguagg");});
test("lingue -> lingu", function() {deepEqual( Stem("lingue"), "lingu");});
test("linificio -> linific", function() {deepEqual( Stem("linificio"), "linific");});
test("link -> link", function() {deepEqual( Stem("link"), "link");});
test("lino -> lin", function() {deepEqual( Stem("lino"), "lin");});
test("lion -> lion", function() {deepEqual( Stem("lion"), "lion");});
test("lione -> lion", function() {deepEqual( Stem("lione"), "lion");});
test("lionel -> lionel", function() {deepEqual( Stem("lionel"), "lionel");});
test("lipkin -> lipkin", function() {deepEqual( Stem("lipkin"), "lipkin");});
test("lippi -> lipp", function() {deepEqual( Stem("lippi"), "lipp");});
test("liquefatto -> liquefatt", function() {deepEqual( Stem("liquefatto"), "liquefatt");});
test("liquida -> liquid", function() {deepEqual( Stem("liquida"), "liquid");});
test("liquidare -> liquid", function() {deepEqual( Stem("liquidare"), "liquid");});
test("liquidata -> liquid", function() {deepEqual( Stem("liquidata"), "liquid");});
test("liquidati -> liquid", function() {deepEqual( Stem("liquidati"), "liquid");});
test("liquidato -> liquid", function() {deepEqual( Stem("liquidato"), "liquid");});
test("liquidatore -> liquid", function() {deepEqual( Stem("liquidatore"), "liquid");});
test("liquidazione -> liquid", function() {deepEqual( Stem("liquidazione"), "liquid");});
test("liquidazioni -> liquid", function() {deepEqual( Stem("liquidazioni"), "liquid");});
test("liquide -> liquid", function() {deepEqual( Stem("liquide"), "liquid");});
test("liquidità -> liquid", function() {deepEqual( Stem("liquidità"), "liquid");});
test("liquido -> liquid", function() {deepEqual( Stem("liquido"), "liquid");});
test("liquor -> liquor", function() {deepEqual( Stem("liquor"), "liquor");});
test("lira -> lir", function() {deepEqual( Stem("lira"), "lir");});
test("lire -> lir", function() {deepEqual( Stem("lire"), "lir");});
test("lirichè -> liric", function() {deepEqual( Stem("lirichè"), "liric");});
test("lirici -> liric", function() {deepEqual( Stem("lirici"), "liric");});
test("lisa -> lis", function() {deepEqual( Stem("lisa"), "lis");});
test("lisbona -> lisbon", function() {deepEqual( Stem("lisbona"), "lisbon");});
test("lisca -> lisc", function() {deepEqual( Stem("lisca"), "lisc");});
test("liscate -> lisc", function() {deepEqual( Stem("liscate"), "lisc");});
test("lisce -> lisc", function() {deepEqual( Stem("lisce"), "lisc");});
test("liscia -> lisc", function() {deepEqual( Stem("liscia"), "lisc");});
test("liscio -> lisc", function() {deepEqual( Stem("liscio"), "lisc");});
test("lisciò -> lisc", function() {deepEqual( Stem("lisciò"), "lisc");});
test("lise -> lis", function() {deepEqual( Stem("lise"), "lis");});
test("lista -> list", function() {deepEqual( Stem("lista"), "list");});
test("liste -> list", function() {deepEqual( Stem("liste"), "list");});
test("listino -> listin", function() {deepEqual( Stem("listino"), "listin");});
test("lità -> lit", function() {deepEqual( Stem("lità"), "lit");});
test("lite -> lit", function() {deepEqual( Stem("lite"), "lit");});
test("litiga -> litig", function() {deepEqual( Stem("litiga"), "litig");});
test("litiganti -> litig", function() {deepEqual( Stem("litiganti"), "litig");});
test("litigar -> litig", function() {deepEqual( Stem("litigar"), "litig");});
test("litigi -> litig", function() {deepEqual( Stem("litigi"), "litig");});
test("litorale -> litoral", function() {deepEqual( Stem("litorale"), "litoral");});
test("litorali -> litoral", function() {deepEqual( Stem("litorali"), "litoral");});
test("littorio -> littor", function() {deepEqual( Stem("littorio"), "littor");});
test("litwinski -> litwinsk", function() {deepEqual( Stem("litwinski"), "litwinsk");});
test("liuto -> liut", function() {deepEqual( Stem("liuto"), "liut");});
test("live -> liv", function() {deepEqual( Stem("live"), "liv");});
test("livelli -> livell", function() {deepEqual( Stem("livelli"), "livell");});
test("livello -> livell", function() {deepEqual( Stem("livello"), "livell");});
test("livide -> livid", function() {deepEqual( Stem("livide"), "livid");});
test("lividi -> livid", function() {deepEqual( Stem("lividi"), "livid");});
test("livido -> livid", function() {deepEqual( Stem("livido"), "livid");});
test("livingston -> livingston", function() {deepEqual( Stem("livingston"), "livingston");});
test("livio -> liv", function() {deepEqual( Stem("livio"), "liv");});
test("livornese -> livornes", function() {deepEqual( Stem("livornese"), "livornes");});
test("livorno -> livorn", function() {deepEqual( Stem("livorno"), "livorn");});
test("livrea -> livre", function() {deepEqual( Stem("livrea"), "livre");});
test("livree -> livre", function() {deepEqual( Stem("livree"), "livre");});
test("liz -> liz", function() {deepEqual( Stem("liz"), "liz");});
test("liza -> liz", function() {deepEqual( Stem("liza"), "liz");});
test("lizza -> lizz", function() {deepEqual( Stem("lizza"), "lizz");});
test("lllustriss -> lllustriss", function() {deepEqual( Stem("lllustriss"), "lllustriss");});
test("lloyd -> lloyd", function() {deepEqual( Stem("lloyd"), "lloyd");});
test("lloyds -> lloyds", function() {deepEqual( Stem("lloyds"), "lloyds");});
test("lmi -> lmi", function() {deepEqual( Stem("lmi"), "lmi");});
test("ln -> ln", function() {deepEqual( Stem("ln"), "ln");});
test("lo -> lo", function() {deepEqual( Stem("lo"), "lo");});
test("loader -> loader", function() {deepEqual( Stem("loader"), "loader");});
test("lob -> lob", function() {deepEqual( Stem("lob"), "lob");});
test("lobby -> lobby", function() {deepEqual( Stem("lobby"), "lobby");});
test("lobotomia -> lobotom", function() {deepEqual( Stem("lobotomia"), "lobotom");});
test("locale -> local", function() {deepEqual( Stem("locale"), "local");});
test("locali -> local", function() {deepEqual( Stem("locali"), "local");});
test("località -> local", function() {deepEqual( Stem("località"), "local");});
test("localizzazione -> localizz", function() {deepEqual( Stem("localizzazione"), "localizz");});
test("locanda -> locand", function() {deepEqual( Stem("locanda"), "locand");});
test("locati -> loc", function() {deepEqual( Stem("locati"), "loc");});
test("locché -> locc", function() {deepEqual( Stem("locché"), "locc");});
test("lockerbie -> lockerb", function() {deepEqual( Stem("lockerbie"), "lockerb");});
test("locomotiva -> locomot", function() {deepEqual( Stem("locomotiva"), "locomot");});
test("lodar -> lod", function() {deepEqual( Stem("lodar"), "lod");});
test("lodare -> lod", function() {deepEqual( Stem("lodare"), "lod");});
test("lodarlo -> lod", function() {deepEqual( Stem("lodarlo"), "lod");});
test("lodarsi -> lod", function() {deepEqual( Stem("lodarsi"), "lod");});
test("lodata -> lod", function() {deepEqual( Stem("lodata"), "lod");});
test("lodato -> lod", function() {deepEqual( Stem("lodato"), "lod");});
test("lodava -> lod", function() {deepEqual( Stem("lodava"), "lod");});
test("lode -> lod", function() {deepEqual( Stem("lode"), "lod");});
test("loderemo -> lod", function() {deepEqual( Stem("loderemo"), "lod");});
test("lodevoli -> lodevol", function() {deepEqual( Stem("lodevoli"), "lodevol");});
test("lodevolmente -> lodevol", function() {deepEqual( Stem("lodevolmente"), "lodevol");});
test("lodi -> lod", function() {deepEqual( Stem("lodi"), "lod");});
test("lodigiani -> lodigian", function() {deepEqual( Stem("lodigiani"), "lodigian");});
test("lodo -> lod", function() {deepEqual( Stem("lodo"), "lod");});
test("lodò -> lod", function() {deepEqual( Stem("lodò"), "lod");});
test("lodovico -> lodov", function() {deepEqual( Stem("lodovico"), "lodov");});
test("logar -> log", function() {deepEqual( Stem("logar"), "log");});
test("loggia -> logg", function() {deepEqual( Stem("loggia"), "logg");});
test("loggiato -> logg", function() {deepEqual( Stem("loggiato"), "logg");});
test("logica -> logic", function() {deepEqual( Stem("logica"), "logic");});
test("logiche -> logic", function() {deepEqual( Stem("logiche"), "logic");});
test("logico -> logic", function() {deepEqual( Stem("logico"), "logic");});
test("loginov -> loginov", function() {deepEqual( Stem("loginov"), "loginov");});
test("logisitici -> logisit", function() {deepEqual( Stem("logisitici"), "logisit");});
test("logistica -> logist", function() {deepEqual( Stem("logistica"), "logist");});
test("logistiche -> logist", function() {deepEqual( Stem("logistiche"), "logist");});
test("logli -> logl", function() {deepEqual( Stem("logli"), "logl");});
test("loglio -> logl", function() {deepEqual( Stem("loglio"), "logl");});
test("logo -> log", function() {deepEqual( Stem("logo"), "log");});
test("logorato -> logor", function() {deepEqual( Stem("logorato"), "logor");});
test("logori -> logor", function() {deepEqual( Stem("logori"), "logor");});
test("logoro -> logor", function() {deepEqual( Stem("logoro"), "logor");});
test("logrono -> logr", function() {deepEqual( Stem("logrono"), "logr");});
test("lollis -> lollis", function() {deepEqual( Stem("lollis"), "lollis");});
test("lollobrigida -> lollobrigid", function() {deepEqual( Stem("lollobrigida"), "lollobrigid");});
test("lombarda -> lombard", function() {deepEqual( Stem("lombarda"), "lombard");});
test("lombarde -> lombard", function() {deepEqual( Stem("lombarde"), "lombard");});
test("lombardi -> lombard", function() {deepEqual( Stem("lombardi"), "lombard");});
test("lombardia -> lombard", function() {deepEqual( Stem("lombardia"), "lombard");});
test("lombardini -> lombardin", function() {deepEqual( Stem("lombardini"), "lombardin");});
test("lombardo -> lombard", function() {deepEqual( Stem("lombardo"), "lombard");});
test("lombardona -> lombardon", function() {deepEqual( Stem("lombardona"), "lombardon");});
test("lomi -> lom", function() {deepEqual( Stem("lomi"), "lom");});
test("lommel -> lommel", function() {deepEqual( Stem("lommel"), "lommel");});
test("londinese -> londines", function() {deepEqual( Stem("londinese"), "londines");});
test("londinesi -> londines", function() {deepEqual( Stem("londinesi"), "londines");});
test("londra -> londr", function() {deepEqual( Stem("londra"), "londr");});
test("longar -> long", function() {deepEqual( Stem("longar"), "long");});
test("longhi -> long", function() {deepEqual( Stem("longhi"), "long");});
test("longiano -> long", function() {deepEqual( Stem("longiano"), "long");});
test("longo -> long", function() {deepEqual( Stem("longo"), "long");});
test("lontana -> lontan", function() {deepEqual( Stem("lontana"), "lontan");});
test("lontananza -> lontan", function() {deepEqual( Stem("lontananza"), "lontan");});
test("lontane -> lontan", function() {deepEqual( Stem("lontane"), "lontan");});
test("lontanetto -> lontanett", function() {deepEqual( Stem("lontanetto"), "lontanett");});
test("lontani -> lontan", function() {deepEqual( Stem("lontani"), "lontan");});
test("lontano -> lont", function() {deepEqual( Stem("lontano"), "lont");});
test("lontante -> lontant", function() {deepEqual( Stem("lontante"), "lontant");});
test("look -> look", function() {deepEqual( Stem("look"), "look");});
test("loose -> loos", function() {deepEqual( Stem("loose"), "loos");});
test("lopez -> lopez", function() {deepEqual( Stem("lopez"), "lopez");});
test("lor -> lor", function() {deepEqual( Stem("lor"), "lor");});
test("lorda -> lord", function() {deepEqual( Stem("lorda"), "lord");});
test("lordate -> lord", function() {deepEqual( Stem("lordate"), "lord");});
test("lordi -> lord", function() {deepEqual( Stem("lordi"), "lord");});
test("lordo -> lord", function() {deepEqual( Stem("lordo"), "lord");});
test("lords -> lords", function() {deepEqual( Stem("lords"), "lords");});
test("loredana -> loredan", function() {deepEqual( Stem("loredana"), "loredan");});
test("lorena -> loren", function() {deepEqual( Stem("lorena"), "loren");});
test("lorenzini -> lorenzin", function() {deepEqual( Stem("lorenzini"), "lorenzin");});
test("lorenzo -> lorenz", function() {deepEqual( Stem("lorenzo"), "lorenz");});
test("loreto -> loret", function() {deepEqual( Stem("loreto"), "loret");});
test("lori -> lor", function() {deepEqual( Stem("lori"), "lor");});
test("lorieri -> lorier", function() {deepEqual( Stem("lorieri"), "lorier");});
test("loro -> lor", function() {deepEqual( Stem("loro"), "lor");});
test("los -> los", function() {deepEqual( Stem("los"), "los");});
test("losa -> los", function() {deepEqual( Stem("losa"), "los");});
test("losanna -> losann", function() {deepEqual( Stem("losanna"), "losann");});
test("losche -> losc", function() {deepEqual( Stem("losche"), "losc");});
test("loseto -> loset", function() {deepEqual( Stem("loseto"), "loset");});
test("lotta -> lott", function() {deepEqual( Stem("lotta"), "lott");});
test("lottà -> lott", function() {deepEqual( Stem("lottà"), "lott");});
test("lottare -> lott", function() {deepEqual( Stem("lottare"), "lott");});
test("lotte -> lott", function() {deepEqual( Stem("lotte"), "lott");});
test("lotteria -> lotter", function() {deepEqual( Stem("lotteria"), "lotter");});
test("lotti -> lott", function() {deepEqual( Stem("lotti"), "lott");});
test("lottizzazione -> lottizz", function() {deepEqual( Stem("lottizzazione"), "lottizz");});
test("lotto -> lott", function() {deepEqual( Stem("lotto"), "lott");});
test("louis -> louis", function() {deepEqual( Stem("louis"), "louis");});
test("lourdes -> lourdes", function() {deepEqual( Stem("lourdes"), "lourdes");});
test("lovato -> lov", function() {deepEqual( Stem("lovato"), "lov");});
test("lovely -> lovely", function() {deepEqual( Stem("lovely"), "lovely");});
test("lp -> lp", function() {deepEqual( Stem("lp"), "lp");});
test("lq -> lq", function() {deepEqual( Stem("lq"), "lq");});
test("lr -> lr", function() {deepEqual( Stem("lr"), "lr");});
test("lt -> lt", function() {deepEqual( Stem("lt"), "lt");});
test("lu -> lu", function() {deepEqual( Stem("lu"), "lu");});
test("luanda -> luand", function() {deepEqual( Stem("luanda"), "luand");});
test("luc -> luc", function() {deepEqual( Stem("luc"), "luc");});
test("luca -> luc", function() {deepEqual( Stem("luca"), "luc");});
test("lucar -> luc", function() {deepEqual( Stem("lucar"), "luc");});
test("lucarelli -> lucarell", function() {deepEqual( Stem("lucarelli"), "lucarell");});
test("lucca -> lucc", function() {deepEqual( Stem("lucca"), "lucc");});
test("lucchese -> lucches", function() {deepEqual( Stem("lucchese"), "lucches");});
test("lucchetta -> lucchett", function() {deepEqual( Stem("lucchetta"), "lucchett");});
test("lucchetti -> lucchett", function() {deepEqual( Stem("lucchetti"), "lucchett");});
test("lucchi -> lucc", function() {deepEqual( Stem("lucchi"), "lucc");});
test("lucchini -> lucchin", function() {deepEqual( Stem("lucchini"), "lucchin");});
test("lucci -> lucc", function() {deepEqual( Stem("lucci"), "lucc");});
test("luccicante -> luccic", function() {deepEqual( Stem("luccicante"), "luccic");});
test("luccicanti -> luccic", function() {deepEqual( Stem("luccicanti"), "luccic");});
test("luccicare -> luccic", function() {deepEqual( Stem("luccicare"), "luccic");});
test("lucciole -> lucciol", function() {deepEqual( Stem("lucciole"), "lucciol");});
test("luce -> luc", function() {deepEqual( Stem("luce"), "luc");});
test("lucente -> lucent", function() {deepEqual( Stem("lucente"), "lucent");});
test("lucenti -> lucent", function() {deepEqual( Stem("lucenti"), "lucent");});
test("lucerna -> lucern", function() {deepEqual( Stem("lucerna"), "lucern");});
test("lucerne -> luc", function() {deepEqual( Stem("lucerne"), "luc");});
test("luchetti -> luchett", function() {deepEqual( Stem("luchetti"), "luchett");});
test("luchino -> luchin", function() {deepEqual( Stem("luchino"), "luchin");});
test("luci -> luc", function() {deepEqual( Stem("luci"), "luc");});
test("lucia -> luc", function() {deepEqual( Stem("lucia"), "luc");});
test("luciana -> lucian", function() {deepEqual( Stem("luciana"), "lucian");});
test("luciano -> luc", function() {deepEqual( Stem("luciano"), "luc");});
test("lucida -> lucid", function() {deepEqual( Stem("lucida"), "lucid");});
test("lucidi -> lucid", function() {deepEqual( Stem("lucidi"), "lucid");});
test("lucido -> lucid", function() {deepEqual( Stem("lucido"), "lucid");});
test("lucignolo -> lucignol", function() {deepEqual( Stem("lucignolo"), "lucignol");});
test("lucilla -> lucill", function() {deepEqual( Stem("lucilla"), "lucill");});
test("lucio -> luc", function() {deepEqual( Stem("lucio"), "luc");});
test("lucrezia -> lucrez", function() {deepEqual( Stem("lucrezia"), "lucrez");});
test("lucrosa -> lucros", function() {deepEqual( Stem("lucrosa"), "lucros");});
test("lueders -> lueders", function() {deepEqual( Stem("lueders"), "lueders");});
test("lufthansa -> lufthans", function() {deepEqual( Stem("lufthansa"), "lufthans");});
test("luglio -> lugl", function() {deepEqual( Stem("luglio"), "lugl");});
test("lugo -> lug", function() {deepEqual( Stem("lugo"), "lug");});
test("lugubre -> lugubr", function() {deepEqual( Stem("lugubre"), "lugubr");});
test("lui -> lui", function() {deepEqual( Stem("lui"), "lui");});
test("luigi -> luig", function() {deepEqual( Stem("luigi"), "luig");});
test("luigiterzo -> luigiterz", function() {deepEqual( Stem("luigiterzo"), "luigiterz");});
test("luino -> luin", function() {deepEqual( Stem("luino"), "luin");});
test("luisa -> luis", function() {deepEqual( Stem("luisa"), "luis");});
test("luisito -> luis", function() {deepEqual( Stem("luisito"), "luis");});
test("luiso -> luis", function() {deepEqual( Stem("luiso"), "luis");});
test("lumbard -> lumbard", function() {deepEqual( Stem("lumbard"), "lumbard");});
test("lume -> lum", function() {deepEqual( Stem("lume"), "lum");});
test("lumeggiando -> lumegg", function() {deepEqual( Stem("lumeggiando"), "lumegg");});
test("lumeggiavano -> lumegg", function() {deepEqual( Stem("lumeggiavano"), "lumegg");});
test("lumezzane -> lumezzan", function() {deepEqual( Stem("lumezzane"), "lumezzan");});
test("lumi -> lum", function() {deepEqual( Stem("lumi"), "lum");});
test("lumicino -> lumicin", function() {deepEqual( Stem("lumicino"), "lumicin");});
test("lumiere -> lum", function() {deepEqual( Stem("lumiere"), "lum");});
test("lumpur -> lumpur", function() {deepEqual( Stem("lumpur"), "lumpur");});
test("luna -> lun", function() {deepEqual( Stem("luna"), "lun");});
test("lunà -> lun", function() {deepEqual( Stem("lunà"), "lun");});
test("lunarè -> lunar", function() {deepEqual( Stem("lunarè"), "lunar");});
test("lunario -> lunar", function() {deepEqual( Stem("lunario"), "lunar");});
test("lunedì -> luned", function() {deepEqual( Stem("lunedì"), "luned");});
test("lunedìa -> lunedì", function() {deepEqual( Stem("lunedìa"), "lunedì");});
test("lunedìper -> lunedìper", function() {deepEqual( Stem("lunedìper"), "lunedìper");});
test("lunette -> lunett", function() {deepEqual( Stem("lunette"), "lunett");});
test("lunga -> lung", function() {deepEqual( Stem("lunga"), "lung");});
test("lungagnata -> lungagn", function() {deepEqual( Stem("lungagnata"), "lungagn");});
test("lungamente -> lung", function() {deepEqual( Stem("lungamente"), "lung");});
test("lunghe -> lung", function() {deepEqual( Stem("lunghe"), "lung");});
test("lunghettamente -> lunghett", function() {deepEqual( Stem("lunghettamente"), "lunghett");});
test("lunghezza -> lunghezz", function() {deepEqual( Stem("lunghezza"), "lunghezz");});
test("lunghi -> lung", function() {deepEqual( Stem("lunghi"), "lung");});
test("lunghigna -> lunghign", function() {deepEqual( Stem("lunghigna"), "lunghign");});
test("lunghissimi -> lunghissim", function() {deepEqual( Stem("lunghissimi"), "lunghissim");});
test("lunghissimo -> lunghissim", function() {deepEqual( Stem("lunghissimo"), "lunghissim");});
test("lungi -> lung", function() {deepEqual( Stem("lungi"), "lung");});
test("lungimirante -> lungimir", function() {deepEqual( Stem("lungimirante"), "lungimir");});
test("lungimiranza -> lungimir", function() {deepEqual( Stem("lungimiranza"), "lungimir");});
test("lungo -> lung", function() {deepEqual( Stem("lungo"), "lung");});
test("lunini -> lunin", function() {deepEqual( Stem("lunini"), "lunin");});
test("luochi -> luoc", function() {deepEqual( Stem("luochi"), "luoc");});
test("luoghi -> luog", function() {deepEqual( Stem("luoghi"), "luog");});
test("luogo -> luog", function() {deepEqual( Stem("luogo"), "luog");});
test("luogotenente -> luogotenent", function() {deepEqual( Stem("luogotenente"), "luogotenent");});
test("luogotenenti -> luogotenent", function() {deepEqual( Stem("luogotenenti"), "luogotenent");});
test("luohang -> luohang", function() {deepEqual( Stem("luohang"), "luohang");});
test("lupi -> lup", function() {deepEqual( Stem("lupi"), "lup");});
test("lupo -> lup", function() {deepEqual( Stem("lupo"), "lup");});
test("lupu -> lupu", function() {deepEqual( Stem("lupu"), "lupu");});
test("lusinga -> lusing", function() {deepEqual( Stem("lusinga"), "lusing");});
test("lusingano -> lusing", function() {deepEqual( Stem("lusingano"), "lusing");});
test("lusingare -> lusing", function() {deepEqual( Stem("lusingare"), "lusing");});
test("lusinghe -> lusing", function() {deepEqual( Stem("lusinghe"), "lusing");});
test("lussemburgo -> lussemburg", function() {deepEqual( Stem("lussemburgo"), "lussemburg");});
test("lusso -> luss", function() {deepEqual( Stem("lusso"), "luss");});
test("lustrata -> lustr", function() {deepEqual( Stem("lustrata"), "lustr");});
test("lustre -> lustr", function() {deepEqual( Stem("lustre"), "lustr");});
test("lustri -> lustr", function() {deepEqual( Stem("lustri"), "lustr");});
test("luterani -> luteran", function() {deepEqual( Stem("luterani"), "luteran");});
test("lutti -> lutt", function() {deepEqual( Stem("lutti"), "lutt");});
test("lutto -> lutt", function() {deepEqual( Stem("lutto"), "lutt");});
test("luttuose -> luttuos", function() {deepEqual( Stem("luttuose"), "luttuos");});
test("luxor -> luxor", function() {deepEqual( Stem("luxor"), "luxor");});
test("lvtp -> lvtp", function() {deepEqual( Stem("lvtp"), "lvtp");});
test("lwaxana -> lwaxan", function() {deepEqual( Stem("lwaxana"), "lwaxan");});
test("lydia -> lydi", function() {deepEqual( Stem("lydia"), "lydi");});
test("lyles -> lyles", function() {deepEqual( Stem("lyles"), "lyles");});
test("lynch -> lynch", function() {deepEqual( Stem("lynch"), "lynch");});
test("lyonnais -> lyonnais", function() {deepEqual( Stem("lyonnais"), "lyonnais");});
test("lz -> lz", function() {deepEqual( Stem("lz"), "lz");});
test("m -> m", function() {deepEqual( Stem("m"), "m");});
test("ma -> ma", function() {deepEqual( Stem("ma"), "ma");});
test("maa -> maa", function() {deepEqual( Stem("maa"), "maa");});
test("maastricht -> maastricht", function() {deepEqual( Stem("maastricht"), "maastricht");});
test("mab -> mab", function() {deepEqual( Stem("mab"), "mab");});
test("mac -> mac", function() {deepEqual( Stem("mac"), "mac");});
test("macabre -> macabr", function() {deepEqual( Stem("macabre"), "macabr");});
test("macario -> macar", function() {deepEqual( Stem("macario"), "macar");});
test("macbeth -> macbeth", function() {deepEqual( Stem("macbeth"), "macbeth");});
test("macchi -> macc", function() {deepEqual( Stem("macchi"), "macc");});
test("macchia -> macc", function() {deepEqual( Stem("macchia"), "macc");});
test("macchiata -> macc", function() {deepEqual( Stem("macchiata"), "macc");});
test("macchie -> macc", function() {deepEqual( Stem("macchie"), "macc");});
test("macchina -> macchin", function() {deepEqual( Stem("macchina"), "macchin");});
test("macchinar -> macchin", function() {deepEqual( Stem("macchinar"), "macchin");});
test("macchinari -> macchinar", function() {deepEqual( Stem("macchinari"), "macchinar");});
test("macchinava -> macchin", function() {deepEqual( Stem("macchinava"), "macchin");});
test("macchine -> macchin", function() {deepEqual( Stem("macchine"), "macchin");});
test("macchinisti -> macchin", function() {deepEqual( Stem("macchinisti"), "macchin");});
test("macellaio -> macellai", function() {deepEqual( Stem("macellaio"), "macellai");});
test("macellari -> macellar", function() {deepEqual( Stem("macellari"), "macellar");});
test("maceratese -> macerates", function() {deepEqual( Stem("maceratese"), "macerates");});
test("macerazioni -> macer", function() {deepEqual( Stem("macerazioni"), "macer");});
test("macerie -> macer", function() {deepEqual( Stem("macerie"), "macer");});
test("machete -> mach", function() {deepEqual( Stem("machete"), "mach");});
test("machines -> machines", function() {deepEqual( Stem("machines"), "machines");});
test("macigni -> macign", function() {deepEqual( Stem("macigni"), "macign");});
test("macilenti -> macilent", function() {deepEqual( Stem("macilenti"), "macilent");});
test("macilento -> macilent", function() {deepEqual( Stem("macilento"), "macilent");});
test("maclaine -> maclain", function() {deepEqual( Stem("maclaine"), "maclain");});
test("macro -> macr", function() {deepEqual( Stem("macro"), "macr");});
test("macroregione -> macroregion", function() {deepEqual( Stem("macroregione"), "macroregion");});
test("maculae -> macula", function() {deepEqual( Stem("maculae"), "macula");});
test("madama -> madam", function() {deepEqual( Stem("madama"), "madam");});
test("maddalena -> maddalen", function() {deepEqual( Stem("maddalena"), "maddalen");});
test("made -> mad", function() {deepEqual( Stem("made"), "mad");});
test("madhi -> madh", function() {deepEqual( Stem("madhi"), "madh");});
test("madia -> mad", function() {deepEqual( Stem("madia"), "mad");});
test("madie -> mad", function() {deepEqual( Stem("madie"), "mad");});
test("madigan -> madigan", function() {deepEqual( Stem("madigan"), "madigan");});
test("madonna -> madonn", function() {deepEqual( Stem("madonna"), "madonn");});
test("madonnina -> madonnin", function() {deepEqual( Stem("madonnina"), "madonnin");});
test("madre -> madr", function() {deepEqual( Stem("madre"), "madr");});
test("madri -> madr", function() {deepEqual( Stem("madri"), "madr");});
test("madrid -> madrid", function() {deepEqual( Stem("madrid"), "madrid");});
test("madrina -> madrin", function() {deepEqual( Stem("madrina"), "madrin");});
test("maestà -> maest", function() {deepEqual( Stem("maestà"), "maest");});
test("maestosa -> maestos", function() {deepEqual( Stem("maestosa"), "maestos");});
test("maestose -> maestos", function() {deepEqual( Stem("maestose"), "maestos");});
test("maestoso -> maestos", function() {deepEqual( Stem("maestoso"), "maestos");});
test("maestra -> maestr", function() {deepEqual( Stem("maestra"), "maestr");});
test("maestranze -> maestranz", function() {deepEqual( Stem("maestranze"), "maestranz");});
test("maestri -> maestr", function() {deepEqual( Stem("maestri"), "maestr");});
test("maestria -> maestr", function() {deepEqual( Stem("maestria"), "maestr");});
test("maestro -> maestr", function() {deepEqual( Stem("maestro"), "maestr");});
test("maffei -> maffe", function() {deepEqual( Stem("maffei"), "maffe");});
test("mafia -> maf", function() {deepEqual( Stem("mafia"), "maf");});
test("mafie -> maf", function() {deepEqual( Stem("mafie"), "maf");});
test("mafiosa -> mafios", function() {deepEqual( Stem("mafiosa"), "mafios");});
test("mafiose -> mafios", function() {deepEqual( Stem("mafiose"), "mafios");});
test("mafiosi -> mafios", function() {deepEqual( Stem("mafiosi"), "mafios");});
test("mafioso -> mafios", function() {deepEqual( Stem("mafioso"), "mafios");});
test("mag -> mag", function() {deepEqual( Stem("mag"), "mag");});
test("magagna -> magagn", function() {deepEqual( Stem("magagna"), "magagn");});
test("magagne -> magagn", function() {deepEqual( Stem("magagne"), "magagn");});
test("magali -> magal", function() {deepEqual( Stem("magali"), "magal");});
test("magari -> magar", function() {deepEqual( Stem("magari"), "magar");});
test("magazzini -> magazzin", function() {deepEqual( Stem("magazzini"), "magazzin");});
test("magazzino -> magazzin", function() {deepEqual( Stem("magazzino"), "magazzin");});
test("magdalena -> magdalen", function() {deepEqual( Stem("magdalena"), "magdalen");});
test("magellano -> magell", function() {deepEqual( Stem("magellano"), "magell");});
test("magestad -> magestad", function() {deepEqual( Stem("magestad"), "magestad");});
test("maggianico -> maggian", function() {deepEqual( Stem("maggianico"), "maggian");});
test("maggie -> magg", function() {deepEqual( Stem("maggie"), "magg");});
test("maggio -> magg", function() {deepEqual( Stem("maggio"), "magg");});
test("maggior -> maggior", function() {deepEqual( Stem("maggior"), "maggior");});
test("maggioranza -> maggior", function() {deepEqual( Stem("maggioranza"), "maggior");});
test("maggioratorio -> maggiorator", function() {deepEqual( Stem("maggioratorio"), "maggiorator");});
test("maggiorazioni -> maggior", function() {deepEqual( Stem("maggiorazioni"), "maggior");});
test("maggiore -> maggior", function() {deepEqual( Stem("maggiore"), "maggior");});
test("maggiori -> maggior", function() {deepEqual( Stem("maggiori"), "maggior");});
test("maggioritaria -> maggioritar", function() {deepEqual( Stem("maggioritaria"), "maggioritar");});
test("maggioritarie -> maggioritar", function() {deepEqual( Stem("maggioritarie"), "maggioritar");});
test("maggioritario -> maggioritar", function() {deepEqual( Stem("maggioritario"), "maggioritar");});
test("maggiormente -> maggior", function() {deepEqual( Stem("maggiormente"), "maggior");});
test("maggioroanza -> maggior", function() {deepEqual( Stem("maggioroanza"), "maggior");});
test("maghagha -> maghag", function() {deepEqual( Stem("maghagha"), "maghag");});
test("maghi -> magh", function() {deepEqual( Stem("maghi"), "magh");});
test("magi -> mag", function() {deepEqual( Stem("magi"), "mag");});
test("magia -> mag", function() {deepEqual( Stem("magia"), "mag");});
test("magiari -> magiar", function() {deepEqual( Stem("magiari"), "magiar");});
test("magiaro -> magiar", function() {deepEqual( Stem("magiaro"), "magiar");});
test("magica -> magic", function() {deepEqual( Stem("magica"), "magic");});
test("magiche -> magic", function() {deepEqual( Stem("magiche"), "magic");});
test("magistero -> magister", function() {deepEqual( Stem("magistero"), "magister");});
test("magistrale -> magistral", function() {deepEqual( Stem("magistrale"), "magistral");});
test("magistrati -> magistr", function() {deepEqual( Stem("magistrati"), "magistr");});
test("magistrato -> magistr", function() {deepEqual( Stem("magistrato"), "magistr");});
test("magistratura -> magistratur", function() {deepEqual( Stem("magistratura"), "magistratur");});
test("maglia -> magl", function() {deepEqual( Stem("maglia"), "magl");});
test("magliani -> maglian", function() {deepEqual( Stem("magliani"), "maglian");});
test("maglie -> magl", function() {deepEqual( Stem("maglie"), "magl");});
test("magna -> magn", function() {deepEqual( Stem("magna"), "magn");});
test("magnam -> magnam", function() {deepEqual( Stem("magnam"), "magnam");});
test("magnani -> magnan", function() {deepEqual( Stem("magnani"), "magnan");});
test("magnanima -> magnanim", function() {deepEqual( Stem("magnanima"), "magnanim");});
test("magnetico -> magnet", function() {deepEqual( Stem("magnetico"), "magnet");});
test("magni -> magn", function() {deepEqual( Stem("magni"), "magn");});
test("magnifica -> magnif", function() {deepEqual( Stem("magnifica"), "magnif");});
test("magnificamente -> magnif", function() {deepEqual( Stem("magnificamente"), "magnif");});
test("magnificenza -> magnificent", function() {deepEqual( Stem("magnificenza"), "magnificent");});
test("magnifiche -> magnif", function() {deepEqual( Stem("magnifiche"), "magnif");});
test("magnifico -> magnif", function() {deepEqual( Stem("magnifico"), "magnif");});
test("magnitudo -> magnitud", function() {deepEqual( Stem("magnitudo"), "magnitud");});
test("magno -> magn", function() {deepEqual( Stem("magno"), "magn");});
test("magona -> magon", function() {deepEqual( Stem("magona"), "magon");});
test("magoni -> magon", function() {deepEqual( Stem("magoni"), "magon");});
test("magonza -> magonz", function() {deepEqual( Stem("magonza"), "magonz");});
test("magra -> magr", function() {deepEqual( Stem("magra"), "magr");});
test("magre -> magr", function() {deepEqual( Stem("magre"), "magr");});
test("mahal -> mahal", function() {deepEqual( Stem("mahal"), "mahal");});
test("maharashtra -> maharashtr", function() {deepEqual( Stem("maharashtra"), "maharashtr");});
test("mahatma -> mahatm", function() {deepEqual( Stem("mahatma"), "mahatm");});
test("mai -> mai", function() {deepEqual( Stem("mai"), "mai");});
test("maidan -> maidan", function() {deepEqual( Stem("maidan"), "maidan");});
test("maiellaro -> maiellar", function() {deepEqual( Stem("maiellaro"), "maiellar");});
test("mail -> mail", function() {deepEqual( Stem("mail"), "mail");});
test("maini -> main", function() {deepEqual( Stem("maini"), "main");});
test("maiocchi -> maiocc", function() {deepEqual( Stem("maiocchi"), "maiocc");});
test("maiolica -> maiol", function() {deepEqual( Stem("maiolica"), "maiol");});
test("maiorca -> maiorc", function() {deepEqual( Stem("maiorca"), "maiorc");});
test("maja -> maj", function() {deepEqual( Stem("maja"), "maj");});
test("major -> major", function() {deepEqual( Stem("major"), "major");});
test("makeni -> maken", function() {deepEqual( Stem("makeni"), "maken");});
test("makinen -> makinen", function() {deepEqual( Stem("makinen"), "makinen");});
test("mal -> mal", function() {deepEqual( Stem("mal"), "mal");});
test("mala -> mal", function() {deepEqual( Stem("mala"), "mal");});
test("malafede -> malafed", function() {deepEqual( Stem("malafede"), "malafed");});
test("malaffare -> malaff", function() {deepEqual( Stem("malaffare"), "malaff");});
test("malagevole -> malagevol", function() {deepEqual( Stem("malagevole"), "malagevol");});
test("malagevoli -> malagevol", function() {deepEqual( Stem("malagevoli"), "malagevol");});
test("malamente -> mal", function() {deepEqual( Stem("malamente"), "mal");});
test("malan -> malan", function() {deepEqual( Stem("malan"), "malan");});
test("malandrinaccio -> malandrinacc", function() {deepEqual( Stem("malandrinaccio"), "malandrinacc");});
test("malandrini -> malandrin", function() {deepEqual( Stem("malandrini"), "malandrin");});
test("malandrino -> malandrin", function() {deepEqual( Stem("malandrino"), "malandrin");});
test("malannaggia -> malannagg", function() {deepEqual( Stem("malannaggia"), "malannagg");});
test("malanno -> malann", function() {deepEqual( Stem("malanno"), "malann");});
test("malanotte -> malanott", function() {deepEqual( Stem("malanotte"), "malanott");});
test("malapianta -> malapiant", function() {deepEqual( Stem("malapianta"), "malapiant");});
test("malasorte -> malasort", function() {deepEqual( Stem("malasorte"), "malasort");});
test("malate -> mal", function() {deepEqual( Stem("malate"), "mal");});
test("malatestas -> malatestas", function() {deepEqual( Stem("malatestas"), "malatestas");});
test("malatesti -> malatest", function() {deepEqual( Stem("malatesti"), "malatest");});
test("malati -> mal", function() {deepEqual( Stem("malati"), "mal");});
test("malato -> mal", function() {deepEqual( Stem("malato"), "mal");});
test("malattia -> malatt", function() {deepEqual( Stem("malattia"), "malatt");});
test("malattie -> malatt", function() {deepEqual( Stem("malattie"), "malatt");});
test("malaugurio -> malaugur", function() {deepEqual( Stem("malaugurio"), "malaugur");});
test("malavita -> malav", function() {deepEqual( Stem("malavita"), "malav");});
test("malcapitati -> malcapit", function() {deepEqual( Stem("malcapitati"), "malcapit");});
test("malcolm -> malcolm", function() {deepEqual( Stem("malcolm"), "malcolm");});
test("malconci -> malconc", function() {deepEqual( Stem("malconci"), "malconc");});
test("malconcio -> malconc", function() {deepEqual( Stem("malconcio"), "malconc");});
test("malcontenta -> malcontent", function() {deepEqual( Stem("malcontenta"), "malcontent");});
test("malcontenti -> malcontent", function() {deepEqual( Stem("malcontenti"), "malcontent");});
test("malcontento -> malcontent", function() {deepEqual( Stem("malcontento"), "malcontent");});
test("maldestramente -> maldestr", function() {deepEqual( Stem("maldestramente"), "maldestr");});
test("maldestro -> maldestr", function() {deepEqual( Stem("maldestro"), "maldestr");});
test("maldini -> maldin", function() {deepEqual( Stem("maldini"), "maldin");});
test("male -> mal", function() {deepEqual( Stem("male"), "mal");});
test("malebolge -> malebolg", function() {deepEqual( Stem("malebolge"), "malebolg");});
test("maledetta -> maledett", function() {deepEqual( Stem("maledetta"), "maledett");});
test("maledette -> maledett", function() {deepEqual( Stem("maledette"), "maledett");});
test("maledetti -> maledett", function() {deepEqual( Stem("maledetti"), "maledett");});
test("maledetto -> maledett", function() {deepEqual( Stem("maledetto"), "maledett");});
test("maledicevano -> maledic", function() {deepEqual( Stem("maledicevano"), "maledic");});
test("maledicono -> maledic", function() {deepEqual( Stem("maledicono"), "maledic");});
test("maledizione -> maledizion", function() {deepEqual( Stem("maledizione"), "maledizion");});
test("maleeva -> mal", function() {deepEqual( Stem("maleeva"), "mal");});
test("malefatte -> malefatt", function() {deepEqual( Stem("malefatte"), "malefatt");});
test("malefica -> malef", function() {deepEqual( Stem("malefica"), "malef");});
test("malefiche -> malef", function() {deepEqual( Stem("malefiche"), "malef");});
test("maleficio -> malefic", function() {deepEqual( Stem("maleficio"), "malefic");});
test("malefizio -> malefiz", function() {deepEqual( Stem("malefizio"), "malefiz");});
test("malfa -> malf", function() {deepEqual( Stem("malfa"), "malf");});
test("malformazioni -> malform", function() {deepEqual( Stem("malformazioni"), "malform");});
test("malfunzionamento -> malfunzion", function() {deepEqual( Stem("malfunzionamento"), "malfunzion");});
test("malgeri -> malger", function() {deepEqual( Stem("malgeri"), "malger");});
test("malgieri -> malgier", function() {deepEqual( Stem("malgieri"), "malgier");});
test("malgrado -> malgrad", function() {deepEqual( Stem("malgrado"), "malgrad");});
test("mali -> mal", function() {deepEqual( Stem("mali"), "mal");});
test("maliardi -> maliard", function() {deepEqual( Stem("maliardi"), "maliard");});
test("malìe -> malì", function() {deepEqual( Stem("malìe"), "malì");});
test("maligna -> malign", function() {deepEqual( Stem("maligna"), "malign");});
test("maligne -> malign", function() {deepEqual( Stem("maligne"), "malign");});
test("maligni -> malign", function() {deepEqual( Stem("maligni"), "malign");});
test("maligno -> malign", function() {deepEqual( Stem("maligno"), "malign");});
test("malinconia -> malincon", function() {deepEqual( Stem("malinconia"), "malincon");});
test("malinconica -> malincon", function() {deepEqual( Stem("malinconica"), "malincon");});
test("malinconiche -> malincon", function() {deepEqual( Stem("malinconiche"), "malincon");});
test("malinconici -> malincon", function() {deepEqual( Stem("malinconici"), "malincon");});
test("malinconie -> malincon", function() {deepEqual( Stem("malinconie"), "malincon");});
test("malincorpo -> malincorp", function() {deepEqual( Stem("malincorpo"), "malincorp");});
test("malincuore -> malincuor", function() {deepEqual( Stem("malincuore"), "malincuor");});
test("malines -> malines", function() {deepEqual( Stem("malines"), "malines");});
test("malissimo -> malissim", function() {deepEqual( Stem("malissimo"), "malissim");});
test("malitia -> malit", function() {deepEqual( Stem("malitia"), "malit");});
test("malivai -> maliva", function() {deepEqual( Stem("malivai"), "maliva");});
test("malizia -> maliz", function() {deepEqual( Stem("malizia"), "maliz");});
test("malizie -> maliz", function() {deepEqual( Stem("malizie"), "maliz");});
test("maliziosa -> maliz", function() {deepEqual( Stem("maliziosa"), "maliz");});
test("malizioso -> maliz", function() {deepEqual( Stem("malizioso"), "maliz");});
test("mallevadore -> mallevador", function() {deepEqual( Stem("mallevadore"), "mallevador");});
test("malmenata -> malmen", function() {deepEqual( Stem("malmenata"), "malmen");});
test("malmenati -> malmen", function() {deepEqual( Stem("malmenati"), "malmen");});
test("malmenato -> malmen", function() {deepEqual( Stem("malmenato"), "malmen");});
test("malora -> malor", function() {deepEqual( Stem("malora"), "malor");});
test("malore -> malor", function() {deepEqual( Stem("malore"), "malor");});
test("malpica -> malpic", function() {deepEqual( Stem("malpica"), "malpic");});
test("malsicuro -> malsicur", function() {deepEqual( Stem("malsicuro"), "malsicur");});
test("malsupportati -> malsupport", function() {deepEqual( Stem("malsupportati"), "malsupport");});
test("malta -> malt", function() {deepEqual( Stem("malta"), "malt");});
test("maltagliati -> maltagl", function() {deepEqual( Stem("maltagliati"), "maltagl");});
test("maltesi -> maltes", function() {deepEqual( Stem("maltesi"), "maltes");});
test("maltolto -> maltolt", function() {deepEqual( Stem("maltolto"), "maltolt");});
test("maltrattamenti -> maltratt", function() {deepEqual( Stem("maltrattamenti"), "maltratt");});
test("maltrattarla -> maltratt", function() {deepEqual( Stem("maltrattarla"), "maltratt");});
test("maltrattata -> maltratt", function() {deepEqual( Stem("maltrattata"), "maltratt");});
test("maltrattavan -> maltrattavan", function() {deepEqual( Stem("maltrattavan"), "maltrattavan");});
test("malum -> malum", function() {deepEqual( Stem("malum"), "malum");});
test("malumori -> malumor", function() {deepEqual( Stem("malumori"), "malumor");});
test("malusci -> malusc", function() {deepEqual( Stem("malusci"), "malusc");});
test("malvaggità -> malvagg", function() {deepEqual( Stem("malvaggità"), "malvagg");});
test("malvagi -> malvag", function() {deepEqual( Stem("malvagi"), "malvag");});
test("malvagio -> malvag", function() {deepEqual( Stem("malvagio"), "malvag");});
test("malvagità -> malvag", function() {deepEqual( Stem("malvagità"), "malvag");});
test("malvestitito -> malvestit", function() {deepEqual( Stem("malvestitito"), "malvestit");});
test("malvestito -> malvest", function() {deepEqual( Stem("malvestito"), "malvest");});
test("malvezzi -> malvezz", function() {deepEqual( Stem("malvezzi"), "malvezz");});
test("malvinas -> malvinas", function() {deepEqual( Stem("malvinas"), "malvinas");});
test("malvivente -> malvivent", function() {deepEqual( Stem("malvivente"), "malvivent");});
test("malviventi -> malvivent", function() {deepEqual( Stem("malviventi"), "malvivent");});
test("malvolentieri -> malvolentier", function() {deepEqual( Stem("malvolentieri"), "malvolentier");});
test("mamma -> mamm", function() {deepEqual( Stem("mamma"), "mamm");});
test("mammella -> mammell", function() {deepEqual( Stem("mammella"), "mammell");});
test("mammì -> mamm", function() {deepEqual( Stem("mammì"), "mamm");});
test("man -> man", function() {deepEqual( Stem("man"), "man");});
test("manacaparù -> manacaparù", function() {deepEqual( Stem("manacaparù"), "manacaparù");});
test("manacce -> manacc", function() {deepEqual( Stem("manacce"), "manacc");});
test("manaccia -> manacc", function() {deepEqual( Stem("manaccia"), "manacc");});
test("management -> management", function() {deepEqual( Stem("management"), "management");});
test("manager -> manager", function() {deepEqual( Stem("manager"), "manager");});
test("manageriali -> managerial", function() {deepEqual( Stem("manageriali"), "managerial");});
test("manantes -> manantes", function() {deepEqual( Stem("manantes"), "manantes");});
test("manata -> man", function() {deepEqual( Stem("manata"), "man");});
test("manate -> man", function() {deepEqual( Stem("manate"), "man");});
test("manaus -> manaus", function() {deepEqual( Stem("manaus"), "manaus");});
test("manca -> manc", function() {deepEqual( Stem("manca"), "manc");});
test("mancamenti -> manc", function() {deepEqual( Stem("mancamenti"), "manc");});
test("mancamento -> manc", function() {deepEqual( Stem("mancamento"), "manc");});
test("mancandogli -> manc", function() {deepEqual( Stem("mancandogli"), "manc");});
test("mancano -> manc", function() {deepEqual( Stem("mancano"), "manc");});
test("mancante -> mancant", function() {deepEqual( Stem("mancante"), "mancant");});
test("mancanza -> mancanz", function() {deepEqual( Stem("mancanza"), "mancanz");});
test("mancar -> manc", function() {deepEqual( Stem("mancar"), "manc");});
test("mancare -> manc", function() {deepEqual( Stem("mancare"), "manc");});
test("mancargli -> manc", function() {deepEqual( Stem("mancargli"), "manc");});
test("mancarmi -> manc", function() {deepEqual( Stem("mancarmi"), "manc");});
test("mancaron -> mancaron", function() {deepEqual( Stem("mancaron"), "mancaron");});
test("mancarono -> manc", function() {deepEqual( Stem("mancarono"), "manc");});
test("mancarvi -> manc", function() {deepEqual( Stem("mancarvi"), "manc");});
test("mancasse -> manc", function() {deepEqual( Stem("mancasse"), "manc");});
test("mancassero -> manc", function() {deepEqual( Stem("mancassero"), "manc");});
test("mancata -> manc", function() {deepEqual( Stem("mancata"), "manc");});
test("mancate -> manc", function() {deepEqual( Stem("mancate"), "manc");});
test("mancati -> manc", function() {deepEqual( Stem("mancati"), "manc");});
test("mancato -> manc", function() {deepEqual( Stem("mancato"), "manc");});
test("mancava -> manc", function() {deepEqual( Stem("mancava"), "manc");});
test("mancavan -> mancavan", function() {deepEqual( Stem("mancavan"), "mancavan");});
test("mancavano -> manc", function() {deepEqual( Stem("mancavano"), "manc");});
test("mancera -> mancer", function() {deepEqual( Stem("mancera"), "mancer");});
test("manche -> manc", function() {deepEqual( Stem("manche"), "manc");});
test("mancherà -> manc", function() {deepEqual( Stem("mancherà"), "manc");});
test("mancheranno -> manc", function() {deepEqual( Stem("mancheranno"), "manc");});
test("mancherebbe -> manc", function() {deepEqual( Stem("mancherebbe"), "manc");});
test("mancherete -> manc", function() {deepEqual( Stem("mancherete"), "manc");});
test("mancherò -> manc", function() {deepEqual( Stem("mancherò"), "manc");});
test("manches -> manches", function() {deepEqual( Stem("manches"), "manches");});
test("manchester -> manchester", function() {deepEqual( Stem("manchester"), "manchester");});
test("manchi -> manc", function() {deepEqual( Stem("manchi"), "manc");});
test("manchino -> manchin", function() {deepEqual( Stem("manchino"), "manchin");});
test("mancia -> manc", function() {deepEqual( Stem("mancia"), "manc");});
test("manciata -> manc", function() {deepEqual( Stem("manciata"), "manc");});
test("mancina -> mancin", function() {deepEqual( Stem("mancina"), "mancin");});
test("mancine -> mancin", function() {deepEqual( Stem("mancine"), "mancin");});
test("mancini -> mancin", function() {deepEqual( Stem("mancini"), "mancin");});
test("mancino -> mancin", function() {deepEqual( Stem("mancino"), "mancin");});
test("mancò -> manc", function() {deepEqual( Stem("mancò"), "manc");});
test("manconi -> mancon", function() {deepEqual( Stem("manconi"), "mancon");});
test("mancuso -> mancus", function() {deepEqual( Stem("mancuso"), "mancus");});
test("manda -> mand", function() {deepEqual( Stem("manda"), "mand");});
test("mandalari -> mandalar", function() {deepEqual( Stem("mandalari"), "mandalar");});
test("mandan -> mandan", function() {deepEqual( Stem("mandan"), "mandan");});
test("mandando -> mand", function() {deepEqual( Stem("mandando"), "mand");});
test("mandante -> mandant", function() {deepEqual( Stem("mandante"), "mandant");});
test("mandar -> mand", function() {deepEqual( Stem("mandar"), "mand");});
test("mandare -> mand", function() {deepEqual( Stem("mandare"), "mand");});
test("mandarla -> mand", function() {deepEqual( Stem("mandarla"), "mand");});
test("mandarli -> mand", function() {deepEqual( Stem("mandarli"), "mand");});
test("mandarlo -> mand", function() {deepEqual( Stem("mandarlo"), "mand");});
test("mandarono -> mand", function() {deepEqual( Stem("mandarono"), "mand");});
test("mandasse -> mand", function() {deepEqual( Stem("mandasse"), "mand");});
test("mandassi -> mand", function() {deepEqual( Stem("mandassi"), "mand");});
test("mandata -> mand", function() {deepEqual( Stem("mandata"), "mand");});
test("mandate -> mand", function() {deepEqual( Stem("mandate"), "mand");});
test("mandateglieli -> mandategliel", function() {deepEqual( Stem("mandateglieli"), "mandategliel");});
test("mandati -> mand", function() {deepEqual( Stem("mandati"), "mand");});
test("mandato -> mand", function() {deepEqual( Stem("mandato"), "mand");});
test("mandava -> mand", function() {deepEqual( Stem("mandava"), "mand");});
test("mandavamo -> mand", function() {deepEqual( Stem("mandavamo"), "mand");});
test("mandavan -> mandavan", function() {deepEqual( Stem("mandavan"), "mandavan");});
test("mandavano -> mand", function() {deepEqual( Stem("mandavano"), "mand");});
test("mandela -> mandel", function() {deepEqual( Stem("mandela"), "mandel");});
test("mandelli -> mandell", function() {deepEqual( Stem("mandelli"), "mandell");});
test("manderà -> mand", function() {deepEqual( Stem("manderà"), "mand");});
test("manderai -> mand", function() {deepEqual( Stem("manderai"), "mand");});
test("manderebbe -> mand", function() {deepEqual( Stem("manderebbe"), "mand");});
test("manderemo -> mand", function() {deepEqual( Stem("manderemo"), "mand");});
test("manderò -> mand", function() {deepEqual( Stem("manderò"), "mand");});
test("mandi -> mand", function() {deepEqual( Stem("mandi"), "mand");});
test("mandiate -> mand", function() {deepEqual( Stem("mandiate"), "mand");});
test("mando -> mand", function() {deepEqual( Stem("mando"), "mand");});
test("mandò -> mand", function() {deepEqual( Stem("mandò"), "mand");});
test("mandorlo -> mandorl", function() {deepEqual( Stem("mandorlo"), "mandorl");});
test("mandra -> mandr", function() {deepEqual( Stem("mandra"), "mandr");});
test("maneggi -> manegg", function() {deepEqual( Stem("maneggi"), "manegg");});
test("maneggiare -> manegg", function() {deepEqual( Stem("maneggiare"), "manegg");});
test("maneggiarlo -> manegg", function() {deepEqual( Stem("maneggiarlo"), "manegg");});
test("maneggiarne -> manegg", function() {deepEqual( Stem("maneggiarne"), "manegg");});
test("maneggio -> manegg", function() {deepEqual( Stem("maneggio"), "manegg");});
test("maneggj -> maneggj", function() {deepEqual( Stem("maneggj"), "maneggj");});
test("manero -> maner", function() {deepEqual( Stem("manero"), "maner");});
test("manette -> manett", function() {deepEqual( Stem("manette"), "manett");});
test("manetti -> manett", function() {deepEqual( Stem("manetti"), "manett");});
test("manfred -> manfred", function() {deepEqual( Stem("manfred"), "manfred");});
test("manganiello -> manganiell", function() {deepEqual( Stem("manganiello"), "manganiell");});
test("mangeranno -> mang", function() {deepEqual( Stem("mangeranno"), "mang");});
test("mangeremo -> mang", function() {deepEqual( Stem("mangeremo"), "mang");});
test("mangerò -> mang", function() {deepEqual( Stem("mangerò"), "mang");});
test("mangi -> mang", function() {deepEqual( Stem("mangi"), "mang");});
test("mangia -> mang", function() {deepEqual( Stem("mangia"), "mang");});
test("mangian -> mangian", function() {deepEqual( Stem("mangian"), "mangian");});
test("mangiando -> mang", function() {deepEqual( Stem("mangiando"), "mang");});
test("mangiano -> mang", function() {deepEqual( Stem("mangiano"), "mang");});
test("mangiar -> mang", function() {deepEqual( Stem("mangiar"), "mang");});
test("mangiare -> mang", function() {deepEqual( Stem("mangiare"), "mang");});
test("mangiarne -> mang", function() {deepEqual( Stem("mangiarne"), "mang");});
test("mangiasse -> mang", function() {deepEqual( Stem("mangiasse"), "mang");});
test("mangiate -> mang", function() {deepEqual( Stem("mangiate"), "mang");});
test("mangiatina -> mangiatin", function() {deepEqual( Stem("mangiatina"), "mangiatin");});
test("mangiato -> mang", function() {deepEqual( Stem("mangiato"), "mang");});
test("mangiatore -> mangiator", function() {deepEqual( Stem("mangiatore"), "mangiator");});
test("mangiavano -> mang", function() {deepEqual( Stem("mangiavano"), "mang");});
test("mangiò -> mang", function() {deepEqual( Stem("mangiò"), "mang");});
test("mangone -> mangon", function() {deepEqual( Stem("mangone"), "mangon");});
test("mani -> man", function() {deepEqual( Stem("mani"), "man");});
test("manica -> manic", function() {deepEqual( Stem("manica"), "manic");});
test("maniche -> manic", function() {deepEqual( Stem("maniche"), "manic");});
test("manichi -> manic", function() {deepEqual( Stem("manichi"), "manic");});
test("manichini -> manichin", function() {deepEqual( Stem("manichini"), "manichin");});
test("manichino -> manichin", function() {deepEqual( Stem("manichino"), "manichin");});
test("manico -> manic", function() {deepEqual( Stem("manico"), "manic");});
test("manicone -> manicon", function() {deepEqual( Stem("manicone"), "manicon");});
test("maniera -> manier", function() {deepEqual( Stem("maniera"), "manier");});
test("manieraccia -> manieracc", function() {deepEqual( Stem("manieraccia"), "manieracc");});
test("maniere -> man", function() {deepEqual( Stem("maniere"), "man");});
test("maniero -> manier", function() {deepEqual( Stem("maniero"), "manier");});
test("manierosa -> manier", function() {deepEqual( Stem("manierosa"), "manier");});
test("manieroso -> manier", function() {deepEqual( Stem("manieroso"), "manier");});
test("manif -> manif", function() {deepEqual( Stem("manif"), "manif");});
test("manifattura -> manifattur", function() {deepEqual( Stem("manifattura"), "manifattur");});
test("manifatturiera -> manifatturier", function() {deepEqual( Stem("manifatturiera"), "manifatturier");});
test("manifesta -> manifest", function() {deepEqual( Stem("manifesta"), "manifest");});
test("manifestamente -> manifest", function() {deepEqual( Stem("manifestamente"), "manifest");});
test("manifestano -> manifest", function() {deepEqual( Stem("manifestano"), "manifest");});
test("manifestanti -> manifest", function() {deepEqual( Stem("manifestanti"), "manifest");});
test("manifestare -> manifest", function() {deepEqual( Stem("manifestare"), "manifest");});
test("manifestarsi -> manifest", function() {deepEqual( Stem("manifestarsi"), "manifest");});
test("manifestata -> manifest", function() {deepEqual( Stem("manifestata"), "manifest");});
test("manifestate -> manifest", function() {deepEqual( Stem("manifestate"), "manifest");});
test("manifestato -> manifest", function() {deepEqual( Stem("manifestato"), "manifest");});
test("manifestava -> manifest", function() {deepEqual( Stem("manifestava"), "manifest");});
test("manifestazione -> manifest", function() {deepEqual( Stem("manifestazione"), "manifest");});
test("manifestazioni -> manifest", function() {deepEqual( Stem("manifestazioni"), "manifest");});
test("manifeste -> manifest", function() {deepEqual( Stem("manifeste"), "manifest");});
test("manifesti -> manifest", function() {deepEqual( Stem("manifesti"), "manifest");});
test("manifestini -> manifestin", function() {deepEqual( Stem("manifestini"), "manifestin");});
test("manifesto -> manifest", function() {deepEqual( Stem("manifesto"), "manifest");});
test("manifestò -> manifest", function() {deepEqual( Stem("manifestò"), "manifest");});
test("manighetti -> manighett", function() {deepEqual( Stem("manighetti"), "manighett");});
test("maniglia -> manigl", function() {deepEqual( Stem("maniglia"), "manigl");});
test("manigoldi -> manigold", function() {deepEqual( Stem("manigoldi"), "manigold");});
test("manigoldo -> manigold", function() {deepEqual( Stem("manigoldo"), "manigold");});
test("manila -> manil", function() {deepEqual( Stem("manila"), "manil");});
test("manina -> manin", function() {deepEqual( Stem("manina"), "manin");});
test("manipolare -> manipol", function() {deepEqual( Stem("manipolare"), "manipol");});
test("manipolazione -> manipol", function() {deepEqual( Stem("manipolazione"), "manipol");});
test("manipur -> manipur", function() {deepEqual( Stem("manipur"), "manipur");});
test("manitur -> manitur", function() {deepEqual( Stem("manitur"), "manitur");});
test("manna -> mann", function() {deepEqual( Stem("manna"), "mann");});
test("mannini -> mannin", function() {deepEqual( Stem("mannini"), "mannin");});
test("mano -> man", function() {deepEqual( Stem("mano"), "man");});
test("manomettere -> manomett", function() {deepEqual( Stem("manomettere"), "manomett");});
test("manos -> manos", function() {deepEqual( Stem("manos"), "manos");});
test("manoscritte -> manoscritt", function() {deepEqual( Stem("manoscritte"), "manoscritt");});
test("manoscritti -> manoscritt", function() {deepEqual( Stem("manoscritti"), "manoscritt");});
test("manoscritto -> manoscritt", function() {deepEqual( Stem("manoscritto"), "manoscritt");});
test("manovra -> manovr", function() {deepEqual( Stem("manovra"), "manovr");});
test("manovre -> manovr", function() {deepEqual( Stem("manovre"), "manovr");});
test("manovrina -> manovrin", function() {deepEqual( Stem("manovrina"), "manovrin");});
test("mansarda -> mansard", function() {deepEqual( Stem("mansarda"), "mansard");});
test("mansueta -> mansuet", function() {deepEqual( Stem("mansueta"), "mansuet");});
test("mansuetudine -> mansuetudin", function() {deepEqual( Stem("mansuetudine"), "mansuetudin");});
test("mantello -> mantell", function() {deepEqual( Stem("mantello"), "mantell");});
test("mantenendo -> manten", function() {deepEqual( Stem("mantenendo"), "manten");});
test("mantener -> mantener", function() {deepEqual( Stem("mantener"), "mantener");});
test("mantenere -> manten", function() {deepEqual( Stem("mantenere"), "manten");});
test("mantenergli -> manten", function() {deepEqual( Stem("mantenergli"), "manten");});
test("mantenerhe -> mantenerh", function() {deepEqual( Stem("mantenerhe"), "mantenerh");});
test("mantenerla -> manten", function() {deepEqual( Stem("mantenerla"), "manten");});
test("mantenerlo -> manten", function() {deepEqual( Stem("mantenerlo"), "manten");});
test("mantenerne -> manten", function() {deepEqual( Stem("mantenerne"), "manten");});
test("mantenervi -> manten", function() {deepEqual( Stem("mantenervi"), "manten");});
test("mantenesse -> manteness", function() {deepEqual( Stem("mantenesse"), "manteness");});
test("mantenete -> manten", function() {deepEqual( Stem("mantenete"), "manten");});
test("mantenevano -> manten", function() {deepEqual( Stem("mantenevano"), "manten");});
test("mantenga -> manteng", function() {deepEqual( Stem("mantenga"), "manteng");});
test("mantenimento -> manten", function() {deepEqual( Stem("mantenimento"), "manten");});
test("mantenne -> mantenn", function() {deepEqual( Stem("mantenne"), "mantenn");});
test("mantenuta -> manten", function() {deepEqual( Stem("mantenuta"), "manten");});
test("mantenute -> manten", function() {deepEqual( Stem("mantenute"), "manten");});
test("mantenuti -> manten", function() {deepEqual( Stem("mantenuti"), "manten");});
test("mantenuto -> manten", function() {deepEqual( Stem("mantenuto"), "manten");});
test("manterrà -> manterr", function() {deepEqual( Stem("manterrà"), "manterr");});
test("mantiene -> mantien", function() {deepEqual( Stem("mantiene"), "mantien");});
test("manto -> mant", function() {deepEqual( Stem("manto"), "mant");});
test("mantova -> mantov", function() {deepEqual( Stem("mantova"), "mantov");});
test("mantovana -> mantovan", function() {deepEqual( Stem("mantovana"), "mantovan");});
test("mantovani -> mantovan", function() {deepEqual( Stem("mantovani"), "mantovan");});
test("mantovano -> mantov", function() {deepEqual( Stem("mantovano"), "mantov");});
test("manu -> manu", function() {deepEqual( Stem("manu"), "manu");});
test("manuale -> manual", function() {deepEqual( Stem("manuale"), "manual");});
test("manuela -> manuel", function() {deepEqual( Stem("manuela"), "manuel");});
test("manufatta -> manufatt", function() {deepEqual( Stem("manufatta"), "manufatt");});
test("manutenzione -> manutenzion", function() {deepEqual( Stem("manutenzione"), "manutenzion");});
test("manzi -> manz", function() {deepEqual( Stem("manzi"), "manz");});
test("manzo -> manz", function() {deepEqual( Stem("manzo"), "manz");});
test("manzoni -> manzon", function() {deepEqual( Stem("manzoni"), "manzon");});
test("mappa -> mapp", function() {deepEqual( Stem("mappa"), "mapp");});
test("mar -> mar", function() {deepEqual( Stem("mar"), "mar");});
test("maradona -> maradon", function() {deepEqual( Stem("maradona"), "maradon");});
test("maran -> maran", function() {deepEqual( Stem("maran"), "maran");});
test("marangon -> marangon", function() {deepEqual( Stem("marangon"), "marangon");});
test("marangoni -> marangon", function() {deepEqual( Stem("marangoni"), "marangon");});
test("marano -> mar", function() {deepEqual( Stem("marano"), "mar");});
test("marassi -> mar", function() {deepEqual( Stem("marassi"), "mar");});
test("maratona -> maraton", function() {deepEqual( Stem("maratona"), "maraton");});
test("maratoneti -> maratonet", function() {deepEqual( Stem("maratoneti"), "maratonet");});
test("maraviglia -> maravigl", function() {deepEqual( Stem("maraviglia"), "maravigl");});
test("maravigliare -> maravigl", function() {deepEqual( Stem("maravigliare"), "maravigl");});
test("maravigliassero -> maravigl", function() {deepEqual( Stem("maravigliassero"), "maravigl");});
test("maravigliata -> maravigl", function() {deepEqual( Stem("maravigliata"), "maravigl");});
test("maravigliate -> maravigl", function() {deepEqual( Stem("maravigliate"), "maravigl");});
test("maravigliati -> maravigl", function() {deepEqual( Stem("maravigliati"), "maravigl");});
test("maravigliato -> maravigl", function() {deepEqual( Stem("maravigliato"), "maravigl");});
test("maravigliava -> maravigl", function() {deepEqual( Stem("maravigliava"), "maravigl");});
test("maraviglie -> maravigl", function() {deepEqual( Stem("maraviglie"), "maravigl");});
test("maraviglierei -> maravigl", function() {deepEqual( Stem("maraviglierei"), "maravigl");});
test("maraviglio -> maravigl", function() {deepEqual( Stem("maraviglio"), "maravigl");});
test("maravigliosi -> maravigl", function() {deepEqual( Stem("maravigliosi"), "maravigl");});
test("marc -> marc", function() {deepEqual( Stem("marc"), "marc");});
test("marca -> marc", function() {deepEqual( Stem("marca"), "marc");});
test("marcao -> marca", function() {deepEqual( Stem("marcao"), "marca");});
test("marcatori -> marcator", function() {deepEqual( Stem("marcatori"), "marcator");});
test("marcatura -> marcatur", function() {deepEqual( Stem("marcatura"), "marcatur");});
test("marce -> marc", function() {deepEqual( Stem("marce"), "marc");});
test("marcellino -> marcellin", function() {deepEqual( Stem("marcellino"), "marcellin");});
test("marcello -> marcell", function() {deepEqual( Stem("marcello"), "marcell");});
test("marcelo -> marcel", function() {deepEqual( Stem("marcelo"), "marcel");});
test("marche -> marc", function() {deepEqual( Stem("marche"), "marc");});
test("marchegiani -> marchegian", function() {deepEqual( Stem("marchegiani"), "marchegian");});
test("marchese -> marches", function() {deepEqual( Stem("marchese"), "marches");});
test("marchi -> marc", function() {deepEqual( Stem("marchi"), "marc");});
test("marchigiana -> marchigian", function() {deepEqual( Stem("marchigiana"), "marchigian");});
test("marchigiani -> marchigian", function() {deepEqual( Stem("marchigiani"), "marchigian");});
test("marchingegno -> marchingegn", function() {deepEqual( Stem("marchingegno"), "marchingegn");});
test("marchio -> marc", function() {deepEqual( Stem("marchio"), "marc");});
test("marchioro -> marchior", function() {deepEqual( Stem("marchioro"), "marchior");});
test("marcia -> marc", function() {deepEqual( Stem("marcia"), "marc");});
test("marciagranparadiso -> marciagranparadis", function() {deepEqual( Stem("marciagranparadiso"), "marciagranparadis");});
test("marcialonga -> marcialong", function() {deepEqual( Stem("marcialonga"), "marcialong");});
test("marciare -> marc", function() {deepEqual( Stem("marciare"), "marc");});
test("marcio -> marc", function() {deepEqual( Stem("marcio"), "marc");});
test("marciose -> marcios", function() {deepEqual( Stem("marciose"), "marcios");});
test("marco -> marc", function() {deepEqual( Stem("marco"), "marc");});
test("marcolin -> marcolin", function() {deepEqual( Stem("marcolin"), "marcolin");});
test("marcon -> marcon", function() {deepEqual( Stem("marcon"), "marcon");});
test("marconi -> marcon", function() {deepEqual( Stem("marconi"), "marcon");});
test("marcos -> marcos", function() {deepEqual( Stem("marcos"), "marcos");});
test("marcus -> marcus", function() {deepEqual( Stem("marcus"), "marcus");});
test("mare -> mar", function() {deepEqual( Stem("mare"), "mar");});
test("marea -> mare", function() {deepEqual( Stem("marea"), "mare");});
test("marechiaro -> marechiar", function() {deepEqual( Stem("marechiaro"), "marechiar");});
test("mareggini -> mareggin", function() {deepEqual( Stem("mareggini"), "mareggin");});
test("maremoto -> maremot", function() {deepEqual( Stem("maremoto"), "maremot");});
test("marenco -> marenc", function() {deepEqual( Stem("marenco"), "marenc");});
test("marengo -> mareng", function() {deepEqual( Stem("marengo"), "mareng");});
test("maresca -> maresc", function() {deepEqual( Stem("maresca"), "maresc");});
test("margaret -> margaret", function() {deepEqual( Stem("margaret"), "margaret");});
test("margarethe -> margareth", function() {deepEqual( Stem("margarethe"), "margareth");});
test("marghera -> margher", function() {deepEqual( Stem("marghera"), "margher");});
test("margherita -> margher", function() {deepEqual( Stem("margherita"), "margher");});
test("marginale -> marginal", function() {deepEqual( Stem("marginale"), "marginal");});
test("marginalmente -> marginal", function() {deepEqual( Stem("marginalmente"), "marginal");});
test("margine -> margin", function() {deepEqual( Stem("margine"), "margin");});
test("margini -> margin", function() {deepEqual( Stem("margini"), "margin");});
test("margiotta -> margiott", function() {deepEqual( Stem("margiotta"), "margiott");});
test("mari -> mar", function() {deepEqual( Stem("mari"), "mar");});
test("maria -> mar", function() {deepEqual( Stem("maria"), "mar");});
test("mariangela -> mariangel", function() {deepEqual( Stem("mariangela"), "mariangel");});
test("mariani -> marian", function() {deepEqual( Stem("mariani"), "marian");});
test("marianna -> mariann", function() {deepEqual( Stem("marianna"), "mariann");});
test("marianopoli -> marianopol", function() {deepEqual( Stem("marianopoli"), "marianopol");});
test("maribor -> maribor", function() {deepEqual( Stem("maribor"), "maribor");});
test("marie -> mar", function() {deepEqual( Stem("marie"), "mar");});
test("mariella -> mariell", function() {deepEqual( Stem("mariella"), "mariell");});
test("marina -> marin", function() {deepEqual( Stem("marina"), "marin");});
test("marinai -> marina", function() {deepEqual( Stem("marinai"), "marina");});
test("marine -> marin", function() {deepEqual( Stem("marine"), "marin");});
test("marinerie -> mariner", function() {deepEqual( Stem("marinerie"), "mariner");});
test("marines -> marines", function() {deepEqual( Stem("marines"), "marines");});
test("marini -> marin", function() {deepEqual( Stem("marini"), "marin");});
test("marino -> marin", function() {deepEqual( Stem("marino"), "marin");});
test("mario -> mar", function() {deepEqual( Stem("mario"), "mar");});
test("mariolina -> mariolin", function() {deepEqual( Stem("mariolina"), "mariolin");});
test("mariolo -> mariol", function() {deepEqual( Stem("mariolo"), "mariol");});
test("mariotto -> mariott", function() {deepEqual( Stem("mariotto"), "mariott");});
test("maritar -> marit", function() {deepEqual( Stem("maritar"), "marit");});
test("maritarci -> marit", function() {deepEqual( Stem("maritarci"), "marit");});
test("maritare -> marit", function() {deepEqual( Stem("maritare"), "marit");});
test("maritarli -> marit", function() {deepEqual( Stem("maritarli"), "marit");});
test("maritarmi -> marit", function() {deepEqual( Stem("maritarmi"), "marit");});
test("maritarsi -> marit", function() {deepEqual( Stem("maritarsi"), "marit");});
test("maritarvi -> marit", function() {deepEqual( Stem("maritarvi"), "marit");});
test("maritata -> marit", function() {deepEqual( Stem("maritata"), "marit");});
test("maritate -> marit", function() {deepEqual( Stem("maritate"), "marit");});
test("maritati -> marit", function() {deepEqual( Stem("maritati"), "marit");});
test("mariti -> mar", function() {deepEqual( Stem("mariti"), "mar");});
test("maritima -> maritim", function() {deepEqual( Stem("maritima"), "maritim");});
test("marito -> mar", function() {deepEqual( Stem("marito"), "mar");});
test("marittima -> marittim", function() {deepEqual( Stem("marittima"), "marittim");});
test("marittime -> marittim", function() {deepEqual( Stem("marittime"), "marittim");});
test("marittimi -> marittim", function() {deepEqual( Stem("marittimi"), "marittim");});
test("marittimo -> marittim", function() {deepEqual( Stem("marittimo"), "marittim");});
test("mark -> mark", function() {deepEqual( Stem("mark"), "mark");});
test("markent -> markent", function() {deepEqual( Stem("markent"), "markent");});
test("market -> market", function() {deepEqual( Stem("market"), "market");});
test("markets -> markets", function() {deepEqual( Stem("markets"), "markets");});
test("markin -> markin", function() {deepEqual( Stem("markin"), "markin");});
test("markov -> markov", function() {deepEqual( Stem("markov"), "markov");});
test("marmaglia -> marmagl", function() {deepEqual( Stem("marmaglia"), "marmagl");});
test("marmi -> marm", function() {deepEqual( Stem("marmi"), "marm");});
test("marmo -> marm", function() {deepEqual( Stem("marmo"), "marm");});
test("marocchi -> marocc", function() {deepEqual( Stem("marocchi"), "marocc");});
test("marocchino -> marocchin", function() {deepEqual( Stem("marocchino"), "marocchin");});
test("marocco -> marocc", function() {deepEqual( Stem("marocco"), "marocc");});
test("maroni -> maron", function() {deepEqual( Stem("maroni"), "maron");});
test("maronianì -> maronian", function() {deepEqual( Stem("maronianì"), "maronian");});
test("maroniavrebbe -> maroniavrebb", function() {deepEqual( Stem("maroniavrebbe"), "maroniavrebb");});
test("marpol -> marpol", function() {deepEqual( Stem("marpol"), "marpol");});
test("marques -> marques", function() {deepEqual( Stem("marques"), "marques");});
test("marra -> marr", function() {deepEqual( Stem("marra"), "marr");});
test("marruche -> marruc", function() {deepEqual( Stem("marruche"), "marruc");});
test("marsala -> marsal", function() {deepEqual( Stem("marsala"), "marsal");});
test("marshall -> marshall", function() {deepEqual( Stem("marshall"), "marshall");});
test("marsica -> marsic", function() {deepEqual( Stem("marsica"), "marsic");});
test("marsiglia -> marsigl", function() {deepEqual( Stem("marsiglia"), "marsigl");});
test("marsili -> marsil", function() {deepEqual( Stem("marsili"), "marsil");});
test("marta -> mart", function() {deepEqual( Stem("marta"), "mart");});
test("martaban -> martaban", function() {deepEqual( Stem("martaban"), "martaban");});
test("martedi -> marted", function() {deepEqual( Stem("martedi"), "marted");});
test("martedì -> marted", function() {deepEqual( Stem("martedì"), "marted");});
test("martella -> martell", function() {deepEqual( Stem("martella"), "martell");});
test("martellandole -> martell", function() {deepEqual( Stem("martellandole"), "martell");});
test("martellar -> martell", function() {deepEqual( Stem("martellar"), "martell");});
test("martelli -> martell", function() {deepEqual( Stem("martelli"), "martell");});
test("martello -> martell", function() {deepEqual( Stem("martello"), "martell");});
test("martens -> martens", function() {deepEqual( Stem("martens"), "martens");});
test("martigues -> martigues", function() {deepEqual( Stem("martigues"), "martigues");});
test("martin -> martin", function() {deepEqual( Stem("martin"), "martin");});
test("martinazzoli -> martinazzol", function() {deepEqual( Stem("martinazzoli"), "martinazzol");});
test("martino -> martin", function() {deepEqual( Stem("martino"), "martin");});
test("martire -> mart", function() {deepEqual( Stem("martire"), "mart");});
test("martiri -> martir", function() {deepEqual( Stem("martiri"), "martir");});
test("martirio -> martir", function() {deepEqual( Stem("martirio"), "martir");});
test("martirizzano -> martirizz", function() {deepEqual( Stem("martirizzano"), "martirizz");});
test("martirizzare -> martirizz", function() {deepEqual( Stem("martirizzare"), "martirizz");});
test("martirizzava -> martirizz", function() {deepEqual( Stem("martirizzava"), "martirizz");});
test("martoriato -> martor", function() {deepEqual( Stem("martoriato"), "martor");});
test("martuffello -> martuffell", function() {deepEqual( Stem("martuffello"), "martuffell");});
test("marvasi -> marvas", function() {deepEqual( Stem("marvasi"), "marvas");});
test("marx -> marx", function() {deepEqual( Stem("marx"), "marx");});
test("marxista -> marxist", function() {deepEqual( Stem("marxista"), "marxist");});
test("marzo -> marz", function() {deepEqual( Stem("marzo"), "marz");});
test("marzotto -> marzott", function() {deepEqual( Stem("marzotto"), "marzott");});
test("mas -> mas", function() {deepEqual( Stem("mas"), "mas");});
test("mascalzone -> mascalzon", function() {deepEqual( Stem("mascalzone"), "mascalzon");});
test("mascalzoni -> mascalzon", function() {deepEqual( Stem("mascalzoni"), "mascalzon");});
test("mascara -> mascar", function() {deepEqual( Stem("mascara"), "mascar");});
test("maschera -> mascher", function() {deepEqual( Stem("maschera"), "mascher");});
test("mascherati -> mascher", function() {deepEqual( Stem("mascherati"), "mascher");});
test("mascherato -> mascher", function() {deepEqual( Stem("mascherato"), "mascher");});
test("mascherava -> mascher", function() {deepEqual( Stem("mascherava"), "mascher");});
test("maschere -> masc", function() {deepEqual( Stem("maschere"), "masc");});
test("maschi -> masc", function() {deepEqual( Stem("maschi"), "masc");});
test("maschia -> masc", function() {deepEqual( Stem("maschia"), "masc");});
test("maschie -> masc", function() {deepEqual( Stem("maschie"), "masc");});
test("maschile -> maschil", function() {deepEqual( Stem("maschile"), "maschil");});
test("maschili -> maschil", function() {deepEqual( Stem("maschili"), "maschil");});
test("maserati -> maser", function() {deepEqual( Stem("maserati"), "maser");});
test("masetti -> masett", function() {deepEqual( Stem("masetti"), "masett");});
test("masi -> mas", function() {deepEqual( Stem("masi"), "mas");});
test("masiero -> masier", function() {deepEqual( Stem("masiero"), "masier");});
test("masitto -> masitt", function() {deepEqual( Stem("masitto"), "masitt");});
test("maskadov -> maskadov", function() {deepEqual( Stem("maskadov"), "maskadov");});
test("maske -> mask", function() {deepEqual( Stem("maske"), "mask");});
test("maskhadov -> maskhadov", function() {deepEqual( Stem("maskhadov"), "maskhadov");});
test("masnada -> masnad", function() {deepEqual( Stem("masnada"), "masnad");});
test("masnadieri -> masnadier", function() {deepEqual( Stem("masnadieri"), "masnadier");});
test("masnadiero -> masnadier", function() {deepEqual( Stem("masnadiero"), "masnadier");});
test("masone -> mason", function() {deepEqual( Stem("masone"), "mason");});
test("maspero -> masper", function() {deepEqual( Stem("maspero"), "masper");});
test("mass -> mass", function() {deepEqual( Stem("mass"), "mass");});
test("massa -> mass", function() {deepEqual( Stem("massa"), "mass");});
test("massachusetts -> massachusetts", function() {deepEqual( Stem("massachusetts"), "massachusetts");});
test("massaggi -> massagg", function() {deepEqual( Stem("massaggi"), "massagg");});
test("massaio -> massai", function() {deepEqual( Stem("massaio"), "massai");});
test("massaro -> massar", function() {deepEqual( Stem("massaro"), "massar");});
test("masse -> mass", function() {deepEqual( Stem("masse"), "mass");});
test("masserizie -> masseriz", function() {deepEqual( Stem("masserizie"), "masseriz");});
test("massese -> masses", function() {deepEqual( Stem("massese"), "masses");});
test("massi -> mass", function() {deepEqual( Stem("massi"), "mass");});
test("massicce -> massicc", function() {deepEqual( Stem("massicce"), "massicc");});
test("massicci -> massicc", function() {deepEqual( Stem("massicci"), "massicc");});
test("massiccia -> massicc", function() {deepEqual( Stem("massiccia"), "massicc");});
test("massiccio -> massicc", function() {deepEqual( Stem("massiccio"), "massicc");});
test("massima -> massim", function() {deepEqual( Stem("massima"), "massim");});
test("massimale -> massimal", function() {deepEqual( Stem("massimale"), "massimal");});
test("massimali -> massimal", function() {deepEqual( Stem("massimali"), "massimal");});
test("massimalismo -> massimal", function() {deepEqual( Stem("massimalismo"), "massimal");});
test("massime -> massim", function() {deepEqual( Stem("massime"), "massim");});
test("massimi -> massim", function() {deepEqual( Stem("massimi"), "massim");});
test("massimo -> massim", function() {deepEqual( Stem("massimo"), "massim");});
test("masso -> mass", function() {deepEqual( Stem("masso"), "mass");});
test("massoneria -> massoner", function() {deepEqual( Stem("massoneria"), "massoner");});
test("massonico -> masson", function() {deepEqual( Stem("massonico"), "masson");});
test("mastella -> mastell", function() {deepEqual( Stem("mastella"), "mastell");});
test("master -> master", function() {deepEqual( Stem("master"), "master");});
test("masters -> masters", function() {deepEqual( Stem("masters"), "masters");});
test("masticando -> mastic", function() {deepEqual( Stem("masticando"), "mastic");});
test("masticarla -> mastic", function() {deepEqual( Stem("masticarla"), "mastic");});
test("masticarsi -> mastic", function() {deepEqual( Stem("masticarsi"), "mastic");});
test("mastini -> mastin", function() {deepEqual( Stem("mastini"), "mastin");});
test("mastroianni -> mastroiann", function() {deepEqual( Stem("mastroianni"), "mastroiann");});
test("mastrota -> mastrot", function() {deepEqual( Stem("mastrota"), "mastrot");});
test("matadori -> matador", function() {deepEqual( Stem("matadori"), "matador");});
test("matasse -> mat", function() {deepEqual( Stem("matasse"), "mat");});
test("match -> matc", function() {deepEqual( Stem("match"), "matc");});
test("matematico -> matemat", function() {deepEqual( Stem("matematico"), "matemat");});
test("matematicò -> matematic", function() {deepEqual( Stem("matematicò"), "matematic");});
test("matera -> mater", function() {deepEqual( Stem("matera"), "mater");});
test("materassa -> materass", function() {deepEqual( Stem("materassa"), "materass");});
test("materassina -> materassin", function() {deepEqual( Stem("materassina"), "materassin");});
test("materassine -> materassin", function() {deepEqual( Stem("materassine"), "materassin");});
test("materazzi -> materazz", function() {deepEqual( Stem("materazzi"), "materazz");});
test("materia -> mater", function() {deepEqual( Stem("materia"), "mater");});
test("materiale -> material", function() {deepEqual( Stem("materiale"), "material");});
test("materialè -> material", function() {deepEqual( Stem("materialè"), "material");});
test("materiali -> material", function() {deepEqual( Stem("materiali"), "material");});
test("materialmente -> material", function() {deepEqual( Stem("materialmente"), "material");});
test("materialone -> materialon", function() {deepEqual( Stem("materialone"), "materialon");});
test("materie -> mater", function() {deepEqual( Stem("materie"), "mater");});
test("materna -> matern", function() {deepEqual( Stem("materna"), "matern");});
test("maternità -> matern", function() {deepEqual( Stem("maternità"), "matern");});
test("materno -> matern", function() {deepEqual( Stem("materno"), "matern");});
test("mathieu -> mathieu", function() {deepEqual( Stem("mathieu"), "mathieu");});
test("matita -> mat", function() {deepEqual( Stem("matita"), "mat");});
test("matlala -> matlal", function() {deepEqual( Stem("matlala"), "matlal");});
test("matrice -> matric", function() {deepEqual( Stem("matrice"), "matric");});
test("matricolato -> matricol", function() {deepEqual( Stem("matricolato"), "matricol");});
test("matrimoni -> matrimon", function() {deepEqual( Stem("matrimoni"), "matrimon");});
test("matrimoniale -> matrimonial", function() {deepEqual( Stem("matrimoniale"), "matrimonial");});
test("matrimoniali -> matrimonial", function() {deepEqual( Stem("matrimoniali"), "matrimonial");});
test("matrimonii -> matrimon", function() {deepEqual( Stem("matrimonii"), "matrimon");});
test("matrimonio -> matrimon", function() {deepEqual( Stem("matrimonio"), "matrimon");});
test("matrimonium -> matrimonium", function() {deepEqual( Stem("matrimonium"), "matrimonium");});
test("matrona -> matron", function() {deepEqual( Stem("matrona"), "matron");});
test("mattana -> mattan", function() {deepEqual( Stem("mattana"), "mattan");});
test("mattarella -> mattarell", function() {deepEqual( Stem("mattarella"), "mattarell");});
test("matteo -> matte", function() {deepEqual( Stem("matteo"), "matte");});
test("matteoli -> matteol", function() {deepEqual( Stem("matteoli"), "matteol");});
test("matteotti -> matteott", function() {deepEqual( Stem("matteotti"), "matteott");});
test("matterello -> matterell", function() {deepEqual( Stem("matterello"), "matterell");});
test("matteucci -> matteucc", function() {deepEqual( Stem("matteucci"), "matteucc");});
test("matti -> matt", function() {deepEqual( Stem("matti"), "matt");});
test("mattina -> mattin", function() {deepEqual( Stem("mattina"), "mattin");});
test("mattinata -> mattin", function() {deepEqual( Stem("mattinata"), "mattin");});
test("mattino -> mattin", function() {deepEqual( Stem("mattino"), "mattin");});
test("mattioli -> mattiol", function() {deepEqual( Stem("mattioli"), "mattiol");});
test("matto -> matt", function() {deepEqual( Stem("matto"), "matt");});
test("mattone -> matton", function() {deepEqual( Stem("mattone"), "matton");});
test("mattoni -> matton", function() {deepEqual( Stem("mattoni"), "matton");});
test("mattutine -> mattutin", function() {deepEqual( Stem("mattutine"), "mattutin");});
test("matun -> matun", function() {deepEqual( Stem("matun"), "matun");});
test("matura -> matur", function() {deepEqual( Stem("matura"), "matur");});
test("maturando -> matur", function() {deepEqual( Stem("maturando"), "matur");});
test("maturare -> matur", function() {deepEqual( Stem("maturare"), "matur");});
test("maturato -> matur", function() {deepEqual( Stem("maturato"), "matur");});
test("maturazione -> matur", function() {deepEqual( Stem("maturazione"), "matur");});
test("mature -> matur", function() {deepEqual( Stem("mature"), "matur");});
test("maturerà -> matur", function() {deepEqual( Stem("maturerà"), "matur");});
test("maturi -> matur", function() {deepEqual( Stem("maturi"), "matur");});
test("maturo -> matur", function() {deepEqual( Stem("maturo"), "matur");});
test("mauritania -> mauritan", function() {deepEqual( Stem("mauritania"), "mauritan");});
test("maurizio -> mauriz", function() {deepEqual( Stem("maurizio"), "mauriz");});
test("mauro -> maur", function() {deepEqual( Stem("mauro"), "maur");});
test("mausoleo -> mausole", function() {deepEqual( Stem("mausoleo"), "mausole");});
test("max -> max", function() {deepEqual( Stem("max"), "max");});
test("maxialleanza -> maxiall", function() {deepEqual( Stem("maxialleanza"), "maxiall");});
test("maxima -> maxim", function() {deepEqual( Stem("maxima"), "maxim");});
test("maximum -> maximum", function() {deepEqual( Stem("maximum"), "maximum");});
test("maxiordine -> maxiordin", function() {deepEqual( Stem("maxiordine"), "maxiordin");});
test("maxischermo -> maxischerm", function() {deepEqual( Stem("maxischermo"), "maxischerm");});
test("maya -> may", function() {deepEqual( Stem("maya"), "may");});
test("mayer -> mayer", function() {deepEqual( Stem("mayer"), "mayer");});
test("mayock -> mayock", function() {deepEqual( Stem("mayock"), "mayock");});
test("mays -> mays", function() {deepEqual( Stem("mays"), "mays");});
test("mazenta -> mazent", function() {deepEqual( Stem("mazenta"), "mazent");});
test("mazzanti -> mazzant", function() {deepEqual( Stem("mazzanti"), "mazzant");});
test("mazzantini -> mazzantin", function() {deepEqual( Stem("mazzantini"), "mazzantin");});
test("mazzeo -> mazze", function() {deepEqual( Stem("mazzeo"), "mazze");});
test("mazzetti -> mazzett", function() {deepEqual( Stem("mazzetti"), "mazzett");});
test("mazzetto -> mazzett", function() {deepEqual( Stem("mazzetto"), "mazzett");});
test("mazzo -> mazz", function() {deepEqual( Stem("mazzo"), "mazz");});
test("mazzola -> mazzol", function() {deepEqual( Stem("mazzola"), "mazzol");});
test("mazzone -> mazzon", function() {deepEqual( Stem("mazzone"), "mazzon");});
test("mb -> mb", function() {deepEqual( Stem("mb"), "mb");});
test("mc -> mc", function() {deepEqual( Stem("mc"), "mc");});
test("mccartney -> mccartney", function() {deepEqual( Stem("mccartney"), "mccartney");});
test("mcquinn -> mcquinn", function() {deepEqual( Stem("mcquinn"), "mcquinn");});
test("mdp -> mdp", function() {deepEqual( Stem("mdp"), "mdp");});
test("me -> me", function() {deepEqual( Stem("me"), "me");});
test("mea -> mea", function() {deepEqual( Stem("mea"), "mea");});
test("meana -> mean", function() {deepEqual( Stem("meana"), "mean");});
test("meazza -> meazz", function() {deepEqual( Stem("meazza"), "meazz");});
test("mecca -> mecc", function() {deepEqual( Stem("mecca"), "mecc");});
test("meccaniche -> meccan", function() {deepEqual( Stem("meccaniche"), "meccan");});
test("meccanici -> meccan", function() {deepEqual( Stem("meccanici"), "meccan");});
test("meccanico -> meccan", function() {deepEqual( Stem("meccanico"), "meccan");});
test("meccanismi -> meccan", function() {deepEqual( Stem("meccanismi"), "meccan");});
test("meccanismo -> meccan", function() {deepEqual( Stem("meccanismo"), "meccan");});
test("meccanizzate -> meccanizz", function() {deepEqual( Stem("meccanizzate"), "meccanizz");});
test("meco -> mec", function() {deepEqual( Stem("meco"), "mec");});
test("med -> med", function() {deepEqual( Stem("med"), "med");});
test("meda -> med", function() {deepEqual( Stem("meda"), "med");});
test("medaglia -> medagl", function() {deepEqual( Stem("medaglia"), "medagl");});
test("medaglie -> medagl", function() {deepEqual( Stem("medaglie"), "medagl");});
test("medail -> medail", function() {deepEqual( Stem("medail"), "medail");});
test("medesim -> medesim", function() {deepEqual( Stem("medesim"), "medesim");});
test("medesima -> medesim", function() {deepEqual( Stem("medesima"), "medesim");});
test("medesime -> medesim", function() {deepEqual( Stem("medesime"), "medesim");});
test("medesimi -> medesim", function() {deepEqual( Stem("medesimi"), "medesim");});
test("medesimo -> medesim", function() {deepEqual( Stem("medesimo"), "medesim");});
test("medesmo -> medesm", function() {deepEqual( Stem("medesmo"), "medesm");});
test("medi -> med", function() {deepEqual( Stem("medi"), "med");});
test("media -> med", function() {deepEqual( Stem("media"), "med");});
test("mediante -> mediant", function() {deepEqual( Stem("mediante"), "mediant");});
test("mediare -> med", function() {deepEqual( Stem("mediare"), "med");});
test("mediatori -> mediator", function() {deepEqual( Stem("mediatori"), "mediator");});
test("mediatrice -> mediatric", function() {deepEqual( Stem("mediatrice"), "mediatric");});
test("mediazione -> mediazion", function() {deepEqual( Stem("mediazione"), "mediazion");});
test("medica -> medic", function() {deepEqual( Stem("medica"), "medic");});
test("medicare -> medic", function() {deepEqual( Stem("medicare"), "medic");});
test("medicati -> medic", function() {deepEqual( Stem("medicati"), "medic");});
test("mediceo -> medice", function() {deepEqual( Stem("mediceo"), "medice");});
test("medici -> medic", function() {deepEqual( Stem("medici"), "medic");});
test("medicina -> medicin", function() {deepEqual( Stem("medicina"), "medicin");});
test("medicinale -> medicinal", function() {deepEqual( Stem("medicinale"), "medicinal");});
test("medicinali -> medicinal", function() {deepEqual( Stem("medicinali"), "medicinal");});
test("medicine -> medicin", function() {deepEqual( Stem("medicine"), "medicin");});
test("medico -> medic", function() {deepEqual( Stem("medico"), "medic");});
test("medie -> med", function() {deepEqual( Stem("medie"), "med");});
test("medio -> med", function() {deepEqual( Stem("medio"), "med");});
test("mediob -> mediob", function() {deepEqual( Stem("mediob"), "mediob");});
test("mediobanca -> mediobanc", function() {deepEqual( Stem("mediobanca"), "mediobanc");});
test("mediocre -> mediocr", function() {deepEqual( Stem("mediocre"), "mediocr");});
test("mediocredito -> mediocred", function() {deepEqual( Stem("mediocredito"), "mediocred");});
test("mediocremente -> mediocr", function() {deepEqual( Stem("mediocremente"), "mediocr");});
test("mediocri -> mediocr", function() {deepEqual( Stem("mediocri"), "mediocr");});
test("mediocrità -> mediocr", function() {deepEqual( Stem("mediocrità"), "mediocr");});
test("mediolani -> mediolan", function() {deepEqual( Stem("mediolani"), "mediolan");});
test("mediologica -> mediolog", function() {deepEqual( Stem("mediologica"), "mediolog");});
test("mediomassimi -> mediomassim", function() {deepEqual( Stem("mediomassimi"), "mediomassim");});
test("mediorientali -> medioriental", function() {deepEqual( Stem("mediorientali"), "medioriental");});
test("medita -> med", function() {deepEqual( Stem("medita"), "med");});
test("meditando -> medit", function() {deepEqual( Stem("meditando"), "medit");});
test("meditano -> medit", function() {deepEqual( Stem("meditano"), "medit");});
test("meditare -> medit", function() {deepEqual( Stem("meditare"), "medit");});
test("meditata -> medit", function() {deepEqual( Stem("meditata"), "medit");});
test("meditava -> medit", function() {deepEqual( Stem("meditava"), "medit");});
test("meditazione -> medit", function() {deepEqual( Stem("meditazione"), "medit");});
test("mediteraneo -> mediterane", function() {deepEqual( Stem("mediteraneo"), "mediterane");});
test("mediterranea -> mediterrane", function() {deepEqual( Stem("mediterranea"), "mediterrane");});
test("mediterranee -> mediterrane", function() {deepEqual( Stem("mediterranee"), "mediterrane");});
test("mediterraneo -> mediterrane", function() {deepEqual( Stem("mediterraneo"), "mediterrane");});
test("meditettanean -> meditettanean", function() {deepEqual( Stem("meditettanean"), "meditettanean");});
test("meeting -> meeting", function() {deepEqual( Stem("meeting"), "meeting");});
test("mega -> meg", function() {deepEqual( Stem("mega"), "meg");});
test("megabyte -> megabyt", function() {deepEqual( Stem("megabyte"), "megabyt");});
test("megabytè -> megabyt", function() {deepEqual( Stem("megabytè"), "megabyt");});
test("megaschermo -> megascherm", function() {deepEqual( Stem("megaschermo"), "megascherm");});
test("megawatt -> megawatt", function() {deepEqual( Stem("megawatt"), "megawatt");});
test("meglio -> megl", function() {deepEqual( Stem("meglio"), "megl");});
test("mejor -> mejor", function() {deepEqual( Stem("mejor"), "mejor");});
test("mela -> mel", function() {deepEqual( Stem("mela"), "mel");});
test("melander -> melander", function() {deepEqual( Stem("melander"), "melander");});
test("melania -> melan", function() {deepEqual( Stem("melania"), "melan");});
test("melato -> mel", function() {deepEqual( Stem("melato"), "mel");});
test("melba -> melb", function() {deepEqual( Stem("melba"), "melb");});
test("melchiori -> melchior", function() {deepEqual( Stem("melchiori"), "melchior");});
test("mele -> mel", function() {deepEqual( Stem("mele"), "mel");});
test("melfi -> melf", function() {deepEqual( Stem("melfi"), "melf");});
test("melito -> mel", function() {deepEqual( Stem("melito"), "mel");});
test("melletta -> mellett", function() {deepEqual( Stem("melletta"), "mellett");});
test("melli -> mell", function() {deepEqual( Stem("melli"), "mell");});
test("melosi -> melos", function() {deepEqual( Stem("melosi"), "melos");});
test("meluzzi -> meluzz", function() {deepEqual( Stem("meluzzi"), "meluzz");});
test("melzer -> melzer", function() {deepEqual( Stem("melzer"), "melzer");});
test("membra -> membr", function() {deepEqual( Stem("membra"), "membr");});
test("membri -> membr", function() {deepEqual( Stem("membri"), "membr");});
test("membro -> membr", function() {deepEqual( Stem("membro"), "membr");});
test("memorabile -> memor", function() {deepEqual( Stem("memorabile"), "memor");});
test("memorabili -> memor", function() {deepEqual( Stem("memorabili"), "memor");});
test("memorandum -> memorandum", function() {deepEqual( Stem("memorandum"), "memorandum");});
test("memoria -> memor", function() {deepEqual( Stem("memoria"), "memor");});
test("memoriale -> memorial", function() {deepEqual( Stem("memoriale"), "memorial");});
test("memorie -> memor", function() {deepEqual( Stem("memorie"), "memor");});
test("men -> men", function() {deepEqual( Stem("men"), "men");});
test("mena -> men", function() {deepEqual( Stem("mena"), "men");});
test("menadito -> menad", function() {deepEqual( Stem("menadito"), "menad");});
test("menando -> men", function() {deepEqual( Stem("menando"), "men");});
test("menano -> men", function() {deepEqual( Stem("menano"), "men");});
test("menar -> men", function() {deepEqual( Stem("menar"), "men");});
test("menare -> men", function() {deepEqual( Stem("menare"), "men");});
test("menassero -> men", function() {deepEqual( Stem("menassero"), "men");});
test("menateci -> menatec", function() {deepEqual( Stem("menateci"), "menatec");});
test("menati -> men", function() {deepEqual( Stem("menati"), "men");});
test("menato -> men", function() {deepEqual( Stem("menato"), "men");});
test("menava -> men", function() {deepEqual( Stem("menava"), "men");});
test("menavano -> men", function() {deepEqual( Stem("menavano"), "men");});
test("menconi -> mencon", function() {deepEqual( Stem("menconi"), "mencon");});
test("mendicarne -> mendic", function() {deepEqual( Stem("mendicarne"), "mendic");});
test("mendicati -> mendic", function() {deepEqual( Stem("mendicati"), "mendic");});
test("mendichi -> mendic", function() {deepEqual( Stem("mendichi"), "mendic");});
test("mendico -> mendic", function() {deepEqual( Stem("mendico"), "mendic");});
test("mendozza -> mendozz", function() {deepEqual( Stem("mendozza"), "mendozz");});
test("menegatti -> menegatt", function() {deepEqual( Stem("menegatti"), "menegatt");});
test("menegon -> menegon", function() {deepEqual( Stem("menegon"), "menegon");});
test("mengacci -> mengacc", function() {deepEqual( Stem("mengacci"), "mengacc");});
test("meni -> men", function() {deepEqual( Stem("meni"), "men");});
test("menia -> men", function() {deepEqual( Stem("menia"), "men");});
test("menico -> menic", function() {deepEqual( Stem("menico"), "menic");});
test("meno -> men", function() {deepEqual( Stem("meno"), "men");});
test("menò -> men", function() {deepEqual( Stem("menò"), "men");});
test("menomamente -> menom", function() {deepEqual( Stem("menomamente"), "menom");});
test("mensa -> mens", function() {deepEqual( Stem("mensa"), "mens");});
test("mense -> mens", function() {deepEqual( Stem("mense"), "mens");});
test("mensile -> mensil", function() {deepEqual( Stem("mensile"), "mensil");});
test("mensili -> mensil", function() {deepEqual( Stem("mensili"), "mensil");});
test("mensuale -> mensual", function() {deepEqual( Stem("mensuale"), "mensual");});
test("menta -> ment", function() {deepEqual( Stem("menta"), "ment");});
test("mentale -> mental", function() {deepEqual( Stem("mentale"), "mental");});
test("mentali -> mental", function() {deepEqual( Stem("mentali"), "mental");});
test("mentalità -> mental", function() {deepEqual( Stem("mentalità"), "mental");});
test("mentalmente -> mental", function() {deepEqual( Stem("mentalmente"), "mental");});
test("mentana -> mentan", function() {deepEqual( Stem("mentana"), "mentan");});
test("mente -> ment", function() {deepEqual( Stem("mente"), "ment");});
test("menti -> ment", function() {deepEqual( Stem("menti"), "ment");});
test("mentire -> ment", function() {deepEqual( Stem("mentire"), "ment");});
test("mentite -> ment", function() {deepEqual( Stem("mentite"), "ment");});
test("mentito -> ment", function() {deepEqual( Stem("mentito"), "ment");});
test("mentitore -> mentitor", function() {deepEqual( Stem("mentitore"), "mentitor");});
test("mento -> ment", function() {deepEqual( Stem("mento"), "ment");});
test("mentovare -> mentov", function() {deepEqual( Stem("mentovare"), "mentov");});
test("mentre -> mentr", function() {deepEqual( Stem("mentre"), "mentr");});
test("menù -> menù", function() {deepEqual( Stem("menù"), "menù");});
test("menziona -> menzion", function() {deepEqual( Stem("menziona"), "menzion");});
test("menzionata -> menzion", function() {deepEqual( Stem("menzionata"), "menzion");});
test("menzione -> menzion", function() {deepEqual( Stem("menzione"), "menzion");});
test("menzogna -> menzogn", function() {deepEqual( Stem("menzogna"), "menzogn");});
test("menzogne -> menzogn", function() {deepEqual( Stem("menzogne"), "menzogn");});
test("mer -> mer", function() {deepEqual( Stem("mer"), "mer");});
test("mera -> mer", function() {deepEqual( Stem("mera"), "mer");});
test("meramente -> mer", function() {deepEqual( Stem("meramente"), "mer");});
test("meraviglia -> meravigl", function() {deepEqual( Stem("meraviglia"), "meravigl");});
test("meravigliosa -> meravigl", function() {deepEqual( Stem("meravigliosa"), "meravigl");});
test("mercante -> mercant", function() {deepEqual( Stem("mercante"), "mercant");});
test("mercantessa -> mercantess", function() {deepEqual( Stem("mercantessa"), "mercantess");});
test("mercanti -> mercant", function() {deepEqual( Stem("mercanti"), "mercant");});
test("mercantile -> mercantil", function() {deepEqual( Stem("mercantile"), "mercantil");});
test("mercanzia -> mercanz", function() {deepEqual( Stem("mercanzia"), "mercanz");});
test("mercanzie -> mercanz", function() {deepEqual( Stem("mercanzie"), "mercanz");});
test("mercati -> merc", function() {deepEqual( Stem("mercati"), "merc");});
test("mercatino -> mercatin", function() {deepEqual( Stem("mercatino"), "mercatin");});
test("mercato -> merc", function() {deepEqual( Stem("mercato"), "merc");});
test("merce -> merc", function() {deepEqual( Stem("merce"), "merc");});
test("mercè -> merc", function() {deepEqual( Stem("mercè"), "merc");});
test("merchant -> merchant", function() {deepEqual( Stem("merchant"), "merchant");});
test("merci -> merc", function() {deepEqual( Stem("merci"), "merc");});
test("mercificassero -> mercific", function() {deepEqual( Stem("mercificassero"), "mercific");});
test("merckx -> merckx", function() {deepEqual( Stem("merckx"), "merckx");});
test("mercoled -> mercoled", function() {deepEqual( Stem("mercoled"), "mercoled");});
test("mercoledi -> mercoled", function() {deepEqual( Stem("mercoledi"), "mercoled");});
test("mercoledì -> mercoled", function() {deepEqual( Stem("mercoledì"), "mercoled");});
test("mercosur -> mercosur", function() {deepEqual( Stem("mercosur"), "mercosur");});
test("merenda -> mer", function() {deepEqual( Stem("merenda"), "mer");});
test("merid -> merid", function() {deepEqual( Stem("merid"), "merid");});
test("meridionale -> meridional", function() {deepEqual( Stem("meridionale"), "meridional");});
test("meridionali -> meridional", function() {deepEqual( Stem("meridionali"), "meridional");});
test("meridione -> meridion", function() {deepEqual( Stem("meridione"), "meridion");});
test("merino -> merin", function() {deepEqual( Stem("merino"), "merin");});
test("merita -> mer", function() {deepEqual( Stem("merita"), "mer");});
test("meritano -> merit", function() {deepEqual( Stem("meritano"), "merit");});
test("meritare -> merit", function() {deepEqual( Stem("meritare"), "merit");});
test("meritarlo -> merit", function() {deepEqual( Stem("meritarlo"), "merit");});
test("meritata -> merit", function() {deepEqual( Stem("meritata"), "merit");});
test("meritatamente -> meritat", function() {deepEqual( Stem("meritatamente"), "meritat");});
test("meritato -> merit", function() {deepEqual( Stem("meritato"), "merit");});
test("meritava -> merit", function() {deepEqual( Stem("meritava"), "merit");});
test("meritavano -> merit", function() {deepEqual( Stem("meritavano"), "merit");});
test("meriterebbe -> merit", function() {deepEqual( Stem("meriterebbe"), "merit");});
test("meritevole -> meritevol", function() {deepEqual( Stem("meritevole"), "meritevol");});
test("meriti -> mer", function() {deepEqual( Stem("meriti"), "mer");});
test("merito -> mer", function() {deepEqual( Stem("merito"), "mer");});
test("meritoria -> meritor", function() {deepEqual( Stem("meritoria"), "meritor");});
test("merka -> merk", function() {deepEqual( Stem("merka"), "merk");});
test("merlene -> merlen", function() {deepEqual( Stem("merlene"), "merlen");});
test("merli -> merl", function() {deepEqual( Stem("merli"), "merl");});
test("merlo -> merl", function() {deepEqual( Stem("merlo"), "merl");});
test("merloni -> merlon", function() {deepEqual( Stem("merloni"), "merlon");});
test("merlotti -> merlott", function() {deepEqual( Stem("merlotti"), "merlott");});
test("merluzzi -> merluzz", function() {deepEqual( Stem("merluzzi"), "merluzz");});
test("mero -> mer", function() {deepEqual( Stem("mero"), "mer");});
test("merode -> merod", function() {deepEqual( Stem("merode"), "merod");});
test("merone -> meron", function() {deepEqual( Stem("merone"), "meron");});
test("merrill -> merrill", function() {deepEqual( Stem("merrill"), "merrill");});
test("merval -> merval", function() {deepEqual( Stem("merval"), "merval");});
test("mes -> mes", function() {deepEqual( Stem("mes"), "mes");});
test("mescé -> mesc", function() {deepEqual( Stem("mescé"), "mesc");});
test("mescendo -> mesc", function() {deepEqual( Stem("mescendo"), "mesc");});
test("mescendosi -> mesc", function() {deepEqual( Stem("mescendosi"), "mesc");});
test("mescere -> mesc", function() {deepEqual( Stem("mescere"), "mesc");});
test("mesceva -> mesc", function() {deepEqual( Stem("mesceva"), "mesc");});
test("meschina -> meschin", function() {deepEqual( Stem("meschina"), "meschin");});
test("meschine -> meschin", function() {deepEqual( Stem("meschine"), "meschin");});
test("meschinello -> meschinell", function() {deepEqual( Stem("meschinello"), "meschinell");});
test("meschini -> meschin", function() {deepEqual( Stem("meschini"), "meschin");});
test("meschino -> meschin", function() {deepEqual( Stem("meschino"), "meschin");});
test("mescola -> mescol", function() {deepEqual( Stem("mescola"), "mescol");});
test("mescolando -> mescol", function() {deepEqual( Stem("mescolando"), "mescol");});
test("mescolano -> mescol", function() {deepEqual( Stem("mescolano"), "mescol");});
test("mescolarsi -> mescol", function() {deepEqual( Stem("mescolarsi"), "mescol");});
test("mescolate -> mescol", function() {deepEqual( Stem("mescolate"), "mescol");});
test("mescolati -> mescol", function() {deepEqual( Stem("mescolati"), "mescol");});
test("mescolato -> mescol", function() {deepEqual( Stem("mescolato"), "mescol");});
test("mescolava -> mescol", function() {deepEqual( Stem("mescolava"), "mescol");});
test("mescuglio -> mescugl", function() {deepEqual( Stem("mescuglio"), "mescugl");});
test("mese -> mes", function() {deepEqual( Stem("mese"), "mes");});
test("mesi -> mes", function() {deepEqual( Stem("mesi"), "mes");});
test("messa -> mess", function() {deepEqual( Stem("messa"), "mess");});
test("messaggera -> messagger", function() {deepEqual( Stem("messaggera"), "messagger");});
test("messaggero -> messagger", function() {deepEqual( Stem("messaggero"), "messagger");});
test("messaggi -> messagg", function() {deepEqual( Stem("messaggi"), "messagg");});
test("messaggiero -> messaggier", function() {deepEqual( Stem("messaggiero"), "messaggier");});
test("messaggio -> messagg", function() {deepEqual( Stem("messaggio"), "messagg");});
test("messale -> messal", function() {deepEqual( Stem("messale"), "messal");});
test("messe -> mess", function() {deepEqual( Stem("messe"), "mess");});
test("messele -> messel", function() {deepEqual( Stem("messele"), "messel");});
test("messer -> messer", function() {deepEqual( Stem("messer"), "messer");});
test("messere -> mess", function() {deepEqual( Stem("messere"), "mess");});
test("messi -> mess", function() {deepEqual( Stem("messi"), "mess");});
test("messicana -> messican", function() {deepEqual( Stem("messicana"), "messican");});
test("messicane -> messican", function() {deepEqual( Stem("messicane"), "messican");});
test("messicani -> messican", function() {deepEqual( Stem("messicani"), "messican");});
test("messicano -> messic", function() {deepEqual( Stem("messicano"), "messic");});
test("messico -> messic", function() {deepEqual( Stem("messico"), "messic");});
test("messina -> messin", function() {deepEqual( Stem("messina"), "messin");});
test("messo -> mess", function() {deepEqual( Stem("messo"), "mess");});
test("messori -> messor", function() {deepEqual( Stem("messori"), "messor");});
test("messosi -> messos", function() {deepEqual( Stem("messosi"), "messos");});
test("mesta -> mest", function() {deepEqual( Stem("mesta"), "mest");});
test("mesti -> mest", function() {deepEqual( Stem("mesti"), "mest");});
test("mestiere -> mest", function() {deepEqual( Stem("mestiere"), "mest");});
test("mestieri -> mestier", function() {deepEqual( Stem("mestieri"), "mestier");});
test("mestizia -> mestiz", function() {deepEqual( Stem("mestizia"), "mestiz");});
test("mesto -> mest", function() {deepEqual( Stem("mesto"), "mest");});
test("mestolo -> mestol", function() {deepEqual( Stem("mestolo"), "mestol");});
test("meta -> met", function() {deepEqual( Stem("meta"), "met");});
test("metà -> met", function() {deepEqual( Stem("metà"), "met");});
test("metafisica -> metafis", function() {deepEqual( Stem("metafisica"), "metafis");});
test("metafisiche -> metafis", function() {deepEqual( Stem("metafisiche"), "metafis");});
test("metafisico -> metafis", function() {deepEqual( Stem("metafisico"), "metafis");});
test("metafora -> metafor", function() {deepEqual( Stem("metafora"), "metafor");});
test("metafore -> metafor", function() {deepEqual( Stem("metafore"), "metafor");});
test("metall -> metall", function() {deepEqual( Stem("metall"), "metall");});
test("metalli -> metall", function() {deepEqual( Stem("metalli"), "metall");});
test("metallo -> metall", function() {deepEqual( Stem("metallo"), "metall");});
test("metallurgiche -> metallurg", function() {deepEqual( Stem("metallurgiche"), "metallurg");});
test("metallurgici -> metallurg", function() {deepEqual( Stem("metallurgici"), "metallurg");});
test("metallurgico -> metallurg", function() {deepEqual( Stem("metallurgico"), "metallurg");});
test("metalmeccanica -> metalmeccan", function() {deepEqual( Stem("metalmeccanica"), "metalmeccan");});
test("metalmeccaniche -> metalmeccan", function() {deepEqual( Stem("metalmeccaniche"), "metalmeccan");});
test("metalmeccanici -> metalmeccan", function() {deepEqual( Stem("metalmeccanici"), "metalmeccan");});
test("metalmeccanico -> metalmeccan", function() {deepEqual( Stem("metalmeccanico"), "metalmeccan");});
test("metamorfosi -> metamorf", function() {deepEqual( Stem("metamorfosi"), "metamorf");});
test("metaniere -> metan", function() {deepEqual( Stem("metaniere"), "metan");});
test("metano -> met", function() {deepEqual( Stem("metano"), "met");});
test("metanopoli -> metanopol", function() {deepEqual( Stem("metanopoli"), "metanopol");});
test("metastasio -> metastas", function() {deepEqual( Stem("metastasio"), "metastas");});
test("meteo -> mete", function() {deepEqual( Stem("meteo"), "mete");});
test("meteorite -> meteor", function() {deepEqual( Stem("meteorite"), "meteor");});
test("meteorologia -> meteorolog", function() {deepEqual( Stem("meteorologia"), "meteorolog");});
test("metereologia -> metereolog", function() {deepEqual( Stem("metereologia"), "metereolog");});
test("meteria -> meter", function() {deepEqual( Stem("meteria"), "meter");});
test("meticolosamente -> meticol", function() {deepEqual( Stem("meticolosamente"), "meticol");});
test("metodi -> metod", function() {deepEqual( Stem("metodi"), "metod");});
test("metodo -> metod", function() {deepEqual( Stem("metodo"), "metod");});
test("metri -> metr", function() {deepEqual( Stem("metri"), "metr");});
test("metro -> metr", function() {deepEqual( Stem("metro"), "metr");});
test("metrò -> metr", function() {deepEqual( Stem("metrò"), "metr");});
test("metropolitana -> metropolitan", function() {deepEqual( Stem("metropolitana"), "metropolitan");});
test("metta -> mett", function() {deepEqual( Stem("metta"), "mett");});
test("mettano -> mett", function() {deepEqual( Stem("mettano"), "mett");});
test("mette -> mett", function() {deepEqual( Stem("mette"), "mett");});
test("mettendo -> mett", function() {deepEqual( Stem("mettendo"), "mett");});
test("mettendoci -> mett", function() {deepEqual( Stem("mettendoci"), "mett");});
test("mettendole -> mett", function() {deepEqual( Stem("mettendole"), "mett");});
test("mettendosi -> mett", function() {deepEqual( Stem("mettendosi"), "mett");});
test("mettendovi -> mett", function() {deepEqual( Stem("mettendovi"), "mett");});
test("metter -> metter", function() {deepEqual( Stem("metter"), "metter");});
test("metterà -> mett", function() {deepEqual( Stem("metterà"), "mett");});
test("metteranno -> mett", function() {deepEqual( Stem("metteranno"), "mett");});
test("metterci -> mett", function() {deepEqual( Stem("metterci"), "mett");});
test("mettercisi -> mettercis", function() {deepEqual( Stem("mettercisi"), "mettercis");});
test("mettere -> mett", function() {deepEqual( Stem("mettere"), "mett");});
test("metterebbe -> mett", function() {deepEqual( Stem("metterebbe"), "mett");});
test("metteremo -> mett", function() {deepEqual( Stem("metteremo"), "mett");});
test("metterete -> mett", function() {deepEqual( Stem("metterete"), "mett");});
test("mettergli -> mett", function() {deepEqual( Stem("mettergli"), "mett");});
test("metterla -> mett", function() {deepEqual( Stem("metterla"), "mett");});
test("metterle -> mett", function() {deepEqual( Stem("metterle"), "mett");});
test("metterli -> mett", function() {deepEqual( Stem("metterli"), "mett");});
test("metterlo -> mett", function() {deepEqual( Stem("metterlo"), "mett");});
test("mettermi -> mett", function() {deepEqual( Stem("mettermi"), "mett");});
test("mettermici -> metterm", function() {deepEqual( Stem("mettermici"), "metterm");});
test("metterne -> mett", function() {deepEqual( Stem("metterne"), "mett");});
test("metterò -> mett", function() {deepEqual( Stem("metterò"), "mett");});
test("mettersela -> mettersel", function() {deepEqual( Stem("mettersela"), "mettersel");});
test("mettersele -> mettersel", function() {deepEqual( Stem("mettersele"), "mettersel");});
test("metterseli -> mettersel", function() {deepEqual( Stem("metterseli"), "mettersel");});
test("mettersi -> mett", function() {deepEqual( Stem("mettersi"), "mett");});
test("metterti -> mett", function() {deepEqual( Stem("metterti"), "mett");});
test("mettervi -> mett", function() {deepEqual( Stem("mettervi"), "mett");});
test("mettesse -> mettess", function() {deepEqual( Stem("mettesse"), "mettess");});
test("mettessero -> mett", function() {deepEqual( Stem("mettessero"), "mett");});
test("mettessimo -> mettessim", function() {deepEqual( Stem("mettessimo"), "mettessim");});
test("metteva -> mett", function() {deepEqual( Stem("metteva"), "mett");});
test("mettevan -> mettevan", function() {deepEqual( Stem("mettevan"), "mettevan");});
test("mettevano -> mett", function() {deepEqual( Stem("mettevano"), "mett");});
test("metti -> mett", function() {deepEqual( Stem("metti"), "mett");});
test("mettiamo -> mett", function() {deepEqual( Stem("mettiamo"), "mett");});
test("mettila -> mettil", function() {deepEqual( Stem("mettila"), "mettil");});
test("mettimale -> mettimal", function() {deepEqual( Stem("mettimale"), "mettimal");});
test("metto -> mett", function() {deepEqual( Stem("metto"), "mett");});
test("metton -> metton", function() {deepEqual( Stem("metton"), "metton");});
test("mettono -> mett", function() {deepEqual( Stem("mettono"), "mett");});
test("metz -> metz", function() {deepEqual( Stem("metz"), "metz");});
test("mexicana -> mexican", function() {deepEqual( Stem("mexicana"), "mexican");});
test("meyer -> meyer", function() {deepEqual( Stem("meyer"), "meyer");});
test("mezz -> mezz", function() {deepEqual( Stem("mezz"), "mezz");});
test("mezza -> mezz", function() {deepEqual( Stem("mezza"), "mezz");});
test("mezzaluna -> mezzalun", function() {deepEqual( Stem("mezzaluna"), "mezzalun");});
test("mezzani -> mezzan", function() {deepEqual( Stem("mezzani"), "mezzan");});
test("mezzanotte -> mezzanott", function() {deepEqual( Stem("mezzanotte"), "mezzanott");});
test("mezze -> mezz", function() {deepEqual( Stem("mezze"), "mezz");});
test("mezzetta -> mezzett", function() {deepEqual( Stem("mezzetta"), "mezzett");});
test("mezzi -> mezz", function() {deepEqual( Stem("mezzi"), "mezz");});
test("mezzo -> mezz", function() {deepEqual( Stem("mezzo"), "mezz");});
test("mezzogiorno -> mezzogiorn", function() {deepEqual( Stem("mezzogiorno"), "mezzogiorn");});
test("mficamente -> mfic", function() {deepEqual( Stem("mficamente"), "mfic");});
test("mg -> mg", function() {deepEqual( Stem("mg"), "mg");});
test("mi -> mi", function() {deepEqual( Stem("mi"), "mi");});
test("mia -> mia", function() {deepEqual( Stem("mia"), "mia");});
test("miami -> miam", function() {deepEqual( Stem("miami"), "miam");});
test("mib -> mib", function() {deepEqual( Stem("mib"), "mib");});
test("mibtel -> mibtel", function() {deepEqual( Stem("mibtel"), "mibtel");});
test("miccichè -> miccic", function() {deepEqual( Stem("miccichè"), "miccic");});
test("miceli -> micel", function() {deepEqual( Stem("miceli"), "micel");});
test("michael -> michael", function() {deepEqual( Stem("michael"), "michael");});
test("michalkov -> michalkov", function() {deepEqual( Stem("michalkov"), "michalkov");});
test("michel -> michel", function() {deepEqual( Stem("michel"), "michel");});
test("michela -> michel", function() {deepEqual( Stem("michela"), "michel");});
test("michelaccio -> michelacc", function() {deepEqual( Stem("michelaccio"), "michelacc");});
test("michele -> michel", function() {deepEqual( Stem("michele"), "michel");});
test("micheletti -> michelett", function() {deepEqual( Stem("micheletti"), "michelett");});
test("michelle -> michell", function() {deepEqual( Stem("michelle"), "michell");});
test("michetti -> michett", function() {deepEqual( Stem("michetti"), "michett");});
test("micidiale -> micidial", function() {deepEqual( Stem("micidiale"), "micidial");});
test("micillo -> micill", function() {deepEqual( Stem("micillo"), "micill");});
test("microfono -> microf", function() {deepEqual( Stem("microfono"), "microf");});
test("micromagie -> micromag", function() {deepEqual( Stem("micromagie"), "micromag");});
test("microprocessori -> microprocessor", function() {deepEqual( Stem("microprocessori"), "microprocessor");});
test("microsoft -> microsoft", function() {deepEqual( Stem("microsoft"), "microsoft");});
test("mida -> mid", function() {deepEqual( Stem("mida"), "mid");});
test("middle -> middl", function() {deepEqual( Stem("middle"), "middl");});
test("midei -> mide", function() {deepEqual( Stem("midei"), "mide");});
test("midget -> midget", function() {deepEqual( Stem("midget"), "midget");});
test("mie -> mie", function() {deepEqual( Stem("mie"), "mie");});
test("miei -> mie", function() {deepEqual( Stem("miei"), "mie");});
test("mieli -> miel", function() {deepEqual( Stem("mieli"), "miel");});
test("miert -> miert", function() {deepEqual( Stem("miert"), "miert");});
test("miete -> miet", function() {deepEqual( Stem("miete"), "miet");});
test("mietere -> miet", function() {deepEqual( Stem("mietere"), "miet");});
test("mig -> mig", function() {deepEqual( Stem("mig"), "mig");});
test("miglia -> migl", function() {deepEqual( Stem("miglia"), "migl");});
test("migliaia -> migliai", function() {deepEqual( Stem("migliaia"), "migliai");});
test("migliaio -> migliai", function() {deepEqual( Stem("migliaio"), "migliai");});
test("miglietta -> migliett", function() {deepEqual( Stem("miglietta"), "migliett");});
test("miglio -> migl", function() {deepEqual( Stem("miglio"), "migl");});
test("miglior -> miglior", function() {deepEqual( Stem("miglior"), "miglior");});
test("migliora -> miglior", function() {deepEqual( Stem("migliora"), "miglior");});
test("miglioramento -> miglior", function() {deepEqual( Stem("miglioramento"), "miglior");});
test("migliorando -> miglior", function() {deepEqual( Stem("migliorando"), "miglior");});
test("migliorano -> miglior", function() {deepEqual( Stem("migliorano"), "miglior");});
test("migliorare -> miglior", function() {deepEqual( Stem("migliorare"), "miglior");});
test("migliorata -> miglior", function() {deepEqual( Stem("migliorata"), "miglior");});
test("migliorati -> miglior", function() {deepEqual( Stem("migliorati"), "miglior");});
test("migliorato -> miglior", function() {deepEqual( Stem("migliorato"), "miglior");});
test("migliore -> miglior", function() {deepEqual( Stem("migliore"), "miglior");});
test("migliorerà -> miglior", function() {deepEqual( Stem("migliorerà"), "miglior");});
test("migliori -> miglior", function() {deepEqual( Stem("migliori"), "miglior");});
test("migo -> mig", function() {deepEqual( Stem("migo"), "mig");});
test("miguel -> miguel", function() {deepEqual( Stem("miguel"), "miguel");});
test("mih -> mih", function() {deepEqual( Stem("mih"), "mih");});
test("mihajlovic -> mihajlovic", function() {deepEqual( Stem("mihajlovic"), "mihajlovic");});
test("mike -> mik", function() {deepEqual( Stem("mike"), "mik");});
test("mikhail -> mikhail", function() {deepEqual( Stem("mikhail"), "mikhail");});
test("mikhalkov -> mikhalkov", function() {deepEqual( Stem("mikhalkov"), "mikhalkov");});
test("miklos -> miklos", function() {deepEqual( Stem("miklos"), "miklos");});
test("mil -> mil", function() {deepEqual( Stem("mil"), "mil");});
test("mila -> mil", function() {deepEqual( Stem("mila"), "mil");});
test("milan -> milan", function() {deepEqual( Stem("milan"), "milan");});
test("milanese -> milanes", function() {deepEqual( Stem("milanese"), "milanes");});
test("milanesi -> milanes", function() {deepEqual( Stem("milanesi"), "milanes");});
test("milani -> milan", function() {deepEqual( Stem("milani"), "milan");});
test("milanista -> milan", function() {deepEqual( Stem("milanista"), "milan");});
test("milanisti -> milan", function() {deepEqual( Stem("milanisti"), "milan");});
test("milano -> mil", function() {deepEqual( Stem("milano"), "mil");});
test("milardi -> milard", function() {deepEqual( Stem("milardi"), "milard");});
test("milian -> milian", function() {deepEqual( Stem("milian"), "milian");});
test("miliardarie -> miliardar", function() {deepEqual( Stem("miliardarie"), "miliardar");});
test("miliardi -> miliard", function() {deepEqual( Stem("miliardi"), "miliard");});
test("miliardo -> miliard", function() {deepEqual( Stem("miliardo"), "miliard");});
test("milion -> milion", function() {deepEqual( Stem("milion"), "milion");});
test("milione -> milion", function() {deepEqual( Stem("milione"), "milion");});
test("milioni -> milion", function() {deepEqual( Stem("milioni"), "milion");});
test("militante -> milit", function() {deepEqual( Stem("militante"), "milit");});
test("militanti -> milit", function() {deepEqual( Stem("militanti"), "milit");});
test("militanza -> milit", function() {deepEqual( Stem("militanza"), "milit");});
test("militare -> milit", function() {deepEqual( Stem("militare"), "milit");});
test("militari -> militar", function() {deepEqual( Stem("militari"), "militar");});
test("militeck -> militeck", function() {deepEqual( Stem("militeck"), "militeck");});
test("milizia -> miliz", function() {deepEqual( Stem("milizia"), "miliz");});
test("miliziani -> milizian", function() {deepEqual( Stem("miliziani"), "milizian");});
test("milizie -> miliz", function() {deepEqual( Stem("milizie"), "miliz");});
test("mill -> mill", function() {deepEqual( Stem("mill"), "mill");});
test("millantato -> millant", function() {deepEqual( Stem("millantato"), "millant");});
test("millanteria -> millanter", function() {deepEqual( Stem("millanteria"), "millanter");});
test("mille -> mill", function() {deepEqual( Stem("mille"), "mill");});
test("millennio -> millenn", function() {deepEqual( Stem("millennio"), "millenn");});
test("miller -> miller", function() {deepEqual( Stem("miller"), "miller");});
test("milo -> mil", function() {deepEqual( Stem("milo"), "mil");});
test("mimì -> mim", function() {deepEqual( Stem("mimì"), "mim");});
test("mimmo -> mimm", function() {deepEqual( Stem("mimmo"), "mimm");});
test("mimouni -> mimoun", function() {deepEqual( Stem("mimouni"), "mimoun");});
test("mimun -> mimun", function() {deepEqual( Stem("mimun"), "mimun");});
test("mina -> min", function() {deepEqual( Stem("mina"), "min");});
test("minacce -> minacc", function() {deepEqual( Stem("minacce"), "minacc");});
test("minaccevole -> minaccevol", function() {deepEqual( Stem("minaccevole"), "minaccevol");});
test("minacci -> minacc", function() {deepEqual( Stem("minacci"), "minacc");});
test("minaccia -> minacc", function() {deepEqual( Stem("minaccia"), "minacc");});
test("minacciando -> minacc", function() {deepEqual( Stem("minacciando"), "minacc");});
test("minacciare -> minacc", function() {deepEqual( Stem("minacciare"), "minacc");});
test("minacciarono -> minacc", function() {deepEqual( Stem("minacciarono"), "minacc");});
test("minacciata -> minacc", function() {deepEqual( Stem("minacciata"), "minacc");});
test("minacciate -> minacc", function() {deepEqual( Stem("minacciate"), "minacc");});
test("minacciati -> minacc", function() {deepEqual( Stem("minacciati"), "minacc");});
test("minacciato -> minacc", function() {deepEqual( Stem("minacciato"), "minacc");});
test("minacciava -> minacc", function() {deepEqual( Stem("minacciava"), "minacc");});
test("minacciavano -> minacc", function() {deepEqual( Stem("minacciavano"), "minacc");});
test("minacciosa -> minacc", function() {deepEqual( Stem("minacciosa"), "minacc");});
test("minacciose -> minacc", function() {deepEqual( Stem("minacciose"), "minacc");});
test("minacciosi -> minacc", function() {deepEqual( Stem("minacciosi"), "minacc");});
test("minaccioso -> minacc", function() {deepEqual( Stem("minaccioso"), "minacc");});
test("minaciati -> minac", function() {deepEqual( Stem("minaciati"), "minac");});
test("minafra -> minafr", function() {deepEqual( Stem("minafra"), "minafr");});
test("minar -> min", function() {deepEqual( Stem("minar"), "min");});
test("minata -> min", function() {deepEqual( Stem("minata"), "min");});
test("minaudo -> minaud", function() {deepEqual( Stem("minaudo"), "minaud");});
test("mindy -> mindy", function() {deepEqual( Stem("mindy"), "mindy");});
test("mine -> min", function() {deepEqual( Stem("mine"), "min");});
test("minerali -> mineral", function() {deepEqual( Stem("minerali"), "mineral");});
test("minerarie -> minerar", function() {deepEqual( Stem("minerarie"), "minerar");});
test("minestra -> minestr", function() {deepEqual( Stem("minestra"), "minestr");});
test("mingherlino -> mingherlin", function() {deepEqual( Stem("mingherlino"), "mingherlin");});
test("mini -> min", function() {deepEqual( Stem("mini"), "min");});
test("miniati -> min", function() {deepEqual( Stem("miniati"), "min");});
test("minibar -> minib", function() {deepEqual( Stem("minibar"), "minib");});
test("minicucci -> minicucc", function() {deepEqual( Stem("minicucci"), "minicucc");});
test("minigonna -> minigonn", function() {deepEqual( Stem("minigonna"), "minigonn");});
test("minima -> minim", function() {deepEqual( Stem("minima"), "minim");});
test("minimamente -> minim", function() {deepEqual( Stem("minimamente"), "minim");});
test("minime -> minim", function() {deepEqual( Stem("minime"), "minim");});
test("minimi -> minim", function() {deepEqual( Stem("minimi"), "minim");});
test("minimizzare -> minimizz", function() {deepEqual( Stem("minimizzare"), "minimizz");});
test("minimizzato -> minimizz", function() {deepEqual( Stem("minimizzato"), "minimizz");});
test("minimo -> minim", function() {deepEqual( Stem("minimo"), "minim");});
test("minimò -> minim", function() {deepEqual( Stem("minimò"), "minim");});
test("miniserie -> miniser", function() {deepEqual( Stem("miniserie"), "miniser");});
test("ministeo -> ministe", function() {deepEqual( Stem("ministeo"), "ministe");});
test("ministeri -> minister", function() {deepEqual( Stem("ministeri"), "minister");});
test("ministeriale -> ministerial", function() {deepEqual( Stem("ministeriale"), "ministerial");});
test("ministeriali -> ministerial", function() {deepEqual( Stem("ministeriali"), "ministerial");});
test("ministero -> minister", function() {deepEqual( Stem("ministero"), "minister");});
test("ministra -> ministr", function() {deepEqual( Stem("ministra"), "ministr");});
test("ministri -> ministr", function() {deepEqual( Stem("ministri"), "ministr");});
test("ministro -> ministr", function() {deepEqual( Stem("ministro"), "ministr");});
test("minnelli -> minnell", function() {deepEqual( Stem("minnelli"), "minnell");});
test("mino -> min", function() {deepEqual( Stem("mino"), "min");});
test("minor -> minor", function() {deepEqual( Stem("minor"), "minor");});
test("minoranza -> minor", function() {deepEqual( Stem("minoranza"), "minor");});
test("minoranze -> minor", function() {deepEqual( Stem("minoranze"), "minor");});
test("minore -> minor", function() {deepEqual( Stem("minore"), "minor");});
test("minorenni -> minorenn", function() {deepEqual( Stem("minorenni"), "minorenn");});
test("minori -> minor", function() {deepEqual( Stem("minori"), "minor");});
test("minotti -> minott", function() {deepEqual( Stem("minotti"), "minott");});
test("minusvalenze -> minusvalent", function() {deepEqual( Stem("minusvalenze"), "minusvalent");});
test("minuta -> min", function() {deepEqual( Stem("minuta"), "min");});
test("minutamente -> minut", function() {deepEqual( Stem("minutamente"), "minut");});
test("minute -> min", function() {deepEqual( Stem("minute"), "min");});
test("minuti -> min", function() {deepEqual( Stem("minuti"), "min");});
test("minutka -> minutk", function() {deepEqual( Stem("minutka"), "minutk");});
test("minuto -> min", function() {deepEqual( Stem("minuto"), "min");});
test("minutò -> minut", function() {deepEqual( Stem("minutò"), "minut");});
test("minuzie -> minuz", function() {deepEqual( Stem("minuzie"), "minuz");});
test("minya -> miny", function() {deepEqual( Stem("minya"), "miny");});
test("minzolini -> minzolin", function() {deepEqual( Stem("minzolini"), "minzolin");});
test("minzoliniana -> minzolinian", function() {deepEqual( Stem("minzoliniana"), "minzolinian");});
test("mio -> mio", function() {deepEqual( Stem("mio"), "mio");});
test("mira -> mir", function() {deepEqual( Stem("mira"), "mir");});
test("mirabelli -> mirabell", function() {deepEqual( Stem("mirabelli"), "mirabell");});
test("mirabil -> mirabil", function() {deepEqual( Stem("mirabil"), "mirabil");});
test("mirabile -> mirabil", function() {deepEqual( Stem("mirabile"), "mirabil");});
test("mirabili -> mirabil", function() {deepEqual( Stem("mirabili"), "mirabil");});
test("mirabilmente -> mirabil", function() {deepEqual( Stem("mirabilmente"), "mirabil");});
test("miracoli -> miracol", function() {deepEqual( Stem("miracoli"), "miracol");});
test("miracolo -> miracol", function() {deepEqual( Stem("miracolo"), "miracol");});
test("miracolosa -> miracol", function() {deepEqual( Stem("miracolosa"), "miracol");});
test("miracolosamente -> miracol", function() {deepEqual( Stem("miracolosamente"), "miracol");});
test("miracolosi -> miracol", function() {deepEqual( Stem("miracolosi"), "miracol");});
test("miraggio -> miragg", function() {deepEqual( Stem("miraggio"), "miragg");});
test("mirallegri -> mirallegr", function() {deepEqual( Stem("mirallegri"), "mirallegr");});
test("miran -> miran", function() {deepEqual( Stem("miran"), "miran");});
test("miranda -> mirand", function() {deepEqual( Stem("miranda"), "mirand");});
test("mirano -> mir", function() {deepEqual( Stem("mirano"), "mir");});
test("mirar -> mir", function() {deepEqual( Stem("mirar"), "mir");});
test("mirare -> mir", function() {deepEqual( Stem("mirare"), "mir");});
test("mirata -> mir", function() {deepEqual( Stem("mirata"), "mir");});
test("mirato -> mir", function() {deepEqual( Stem("mirato"), "mir");});
test("mirava -> mir", function() {deepEqual( Stem("mirava"), "mir");});
test("mire -> mir", function() {deepEqual( Stem("mire"), "mir");});
test("miridionali -> miridional", function() {deepEqual( Stem("miridionali"), "miridional");});
test("mirino -> mirin", function() {deepEqual( Stem("mirino"), "mirin");});
test("mirko -> mirk", function() {deepEqual( Stem("mirko"), "mirk");});
test("miroglio -> mirogl", function() {deepEqual( Stem("miroglio"), "mirogl");});
test("mirror -> mirror", function() {deepEqual( Stem("mirror"), "mirror");});
test("mis -> mis", function() {deepEqual( Stem("mis"), "mis");});
test("miscele -> miscel", function() {deepEqual( Stem("miscele"), "miscel");});
test("mischia -> misc", function() {deepEqual( Stem("mischia"), "misc");});
test("mischiando -> misc", function() {deepEqual( Stem("mischiando"), "misc");});
test("mischiarsi -> misc", function() {deepEqual( Stem("mischiarsi"), "misc");});
test("mischiati -> misc", function() {deepEqual( Stem("mischiati"), "misc");});
test("mischiato -> misc", function() {deepEqual( Stem("mischiato"), "misc");});
test("mischiava -> misc", function() {deepEqual( Stem("mischiava"), "misc");});
test("miscredenza -> miscredent", function() {deepEqual( Stem("miscredenza"), "miscredent");});
test("miscuglio -> miscugl", function() {deepEqual( Stem("miscuglio"), "miscugl");});
test("mise -> mis", function() {deepEqual( Stem("mise"), "mis");});
test("misera -> miser", function() {deepEqual( Stem("misera"), "miser");});
test("miserabil -> miserabil", function() {deepEqual( Stem("miserabil"), "miserabil");});
test("miserabile -> miser", function() {deepEqual( Stem("miserabile"), "miser");});
test("miserabili -> miser", function() {deepEqual( Stem("miserabili"), "miser");});
test("miserabilmente -> miserabil", function() {deepEqual( Stem("miserabilmente"), "miserabil");});
test("miserere -> miser", function() {deepEqual( Stem("miserere"), "miser");});
test("miseri -> miser", function() {deepEqual( Stem("miseri"), "miser");});
test("miseria -> miser", function() {deepEqual( Stem("miseria"), "miser");});
test("misericordia -> misericord", function() {deepEqual( Stem("misericordia"), "misericord");});
test("misericordie -> misericord", function() {deepEqual( Stem("misericordie"), "misericord");});
test("misericordiosa -> misericord", function() {deepEqual( Stem("misericordiosa"), "misericord");});
test("misericordioso -> misericord", function() {deepEqual( Stem("misericordioso"), "misericord");});
test("miserie -> miser", function() {deepEqual( Stem("miserie"), "miser");});
test("misero -> miser", function() {deepEqual( Stem("misero"), "miser");});
test("misfatti -> misfatt", function() {deepEqual( Stem("misfatti"), "misfatt");});
test("miss -> miss", function() {deepEqual( Stem("miss"), "miss");});
test("misserville -> misservill", function() {deepEqual( Stem("misserville"), "misservill");});
test("missilistica -> missilist", function() {deepEqual( Stem("missilistica"), "missilist");});
test("missino -> missin", function() {deepEqual( Stem("missino"), "missin");});
test("missionaria -> missionar", function() {deepEqual( Stem("missionaria"), "missionar");});
test("missionarie -> missionar", function() {deepEqual( Stem("missionarie"), "missionar");});
test("missionario -> missionar", function() {deepEqual( Stem("missionario"), "missionar");});
test("missione -> mission", function() {deepEqual( Stem("missione"), "mission");});
test("missioni -> mission", function() {deepEqual( Stem("missioni"), "mission");});
test("mississipi -> mississip", function() {deepEqual( Stem("mississipi"), "mississip");});
test("missiva -> miss", function() {deepEqual( Stem("missiva"), "miss");});
test("mista -> mist", function() {deepEqual( Stem("mista"), "mist");});
test("miste -> mist", function() {deepEqual( Stem("miste"), "mist");});
test("misteri -> mister", function() {deepEqual( Stem("misteri"), "mister");});
test("misteriori -> misterior", function() {deepEqual( Stem("misteriori"), "misterior");});
test("misteriosa -> mister", function() {deepEqual( Stem("misteriosa"), "mister");});
test("misteriosamente -> mister", function() {deepEqual( Stem("misteriosamente"), "mister");});
test("misteriose -> mister", function() {deepEqual( Stem("misteriose"), "mister");});
test("misteriosi -> mister", function() {deepEqual( Stem("misteriosi"), "mister");});
test("misterioso -> mister", function() {deepEqual( Stem("misterioso"), "mister");});
test("mistero -> mister", function() {deepEqual( Stem("mistero"), "mister");});
test("mistica -> mistic", function() {deepEqual( Stem("mistica"), "mistic");});
test("misto -> mist", function() {deepEqual( Stem("misto"), "mist");});
test("mistretta -> mistrett", function() {deepEqual( Stem("mistretta"), "mistrett");});
test("mistura -> mistur", function() {deepEqual( Stem("mistura"), "mistur");});
test("misura -> misur", function() {deepEqual( Stem("misura"), "misur");});
test("misurar -> misur", function() {deepEqual( Stem("misurar"), "misur");});
test("misurare -> misur", function() {deepEqual( Stem("misurare"), "misur");});
test("misurarlo -> misur", function() {deepEqual( Stem("misurarlo"), "misur");});
test("misurarsi -> misur", function() {deepEqual( Stem("misurarsi"), "misur");});
test("misurata -> misur", function() {deepEqual( Stem("misurata"), "misur");});
test("misurati -> misur", function() {deepEqual( Stem("misurati"), "misur");});
test("misurato -> misur", function() {deepEqual( Stem("misurato"), "misur");});
test("misuratore -> misur", function() {deepEqual( Stem("misuratore"), "misur");});
test("misurava -> misur", function() {deepEqual( Stem("misurava"), "misur");});
test("misure -> misur", function() {deepEqual( Stem("misure"), "misur");});
test("mit -> mit", function() {deepEqual( Stem("mit"), "mit");});
test("mita -> mit", function() {deepEqual( Stem("mita"), "mit");});
test("mitica -> mitic", function() {deepEqual( Stem("mitica"), "mitic");});
test("mitigata -> mitig", function() {deepEqual( Stem("mitigata"), "mitig");});
test("mitigato -> mitig", function() {deepEqual( Stem("mitigato"), "mitig");});
test("mitigava -> mitig", function() {deepEqual( Stem("mitigava"), "mitig");});
test("mitizzata -> mitizz", function() {deepEqual( Stem("mitizzata"), "mitizz");});
test("mito -> mit", function() {deepEqual( Stem("mito"), "mit");});
test("mitra -> mitr", function() {deepEqual( Stem("mitra"), "mitr");});
test("mitragliatrice -> mitragl", function() {deepEqual( Stem("mitragliatrice"), "mitragl");});
test("mitrato -> mitr", function() {deepEqual( Stem("mitrato"), "mitr");});
test("mitsubishi -> mitsubish", function() {deepEqual( Stem("mitsubishi"), "mitsubish");});
test("mittel -> mittel", function() {deepEqual( Stem("mittel"), "mittel");});
test("mittmensch -> mittmensc", function() {deepEqual( Stem("mittmensch"), "mittmensc");});
test("miu -> miu", function() {deepEqual( Stem("miu"), "miu");});
test("miura -> miur", function() {deepEqual( Stem("miura"), "miur");});
test("miz -> miz", function() {deepEqual( Stem("miz"), "miz");});
test("ml -> ml", function() {deepEqual( Stem("ml"), "ml");});
test("mll -> mll", function() {deepEqual( Stem("mll"), "mll");});
test("mm -> mm", function() {deepEqual( Stem("mm"), "mm");});
test("mmw -> mmw", function() {deepEqual( Stem("mmw"), "mmw");});
test("mmx -> mmx", function() {deepEqual( Stem("mmx"), "mmx");});
test("mn -> mn", function() {deepEqual( Stem("mn"), "mn");});
test("mo -> mo", function() {deepEqual( Stem("mo"), "mo");});
test("mò -> mò", function() {deepEqual( Stem("mò"), "mò");});
test("mob -> mob", function() {deepEqual( Stem("mob"), "mob");});
test("mobi -> mob", function() {deepEqual( Stem("mobi"), "mob");});
test("mobil -> mobil", function() {deepEqual( Stem("mobil"), "mobil");});
test("mobile -> mobil", function() {deepEqual( Stem("mobile"), "mobil");});
test("mobili -> mobil", function() {deepEqual( Stem("mobili"), "mobil");});
test("mobilificio -> mobilific", function() {deepEqual( Stem("mobilificio"), "mobilific");});
test("mobilità -> mobil", function() {deepEqual( Stem("mobilità"), "mobil");});
test("mobilitare -> mobilit", function() {deepEqual( Stem("mobilitare"), "mobilit");});
test("mobilitati -> mobilit", function() {deepEqual( Stem("mobilitati"), "mobilit");});
test("mobilitato -> mobilit", function() {deepEqual( Stem("mobilitato"), "mobilit");});
test("mobilitazione -> mobilit", function() {deepEqual( Stem("mobilitazione"), "mobilit");});
test("moccolo -> moccol", function() {deepEqual( Stem("moccolo"), "moccol");});
test("mod -> mod", function() {deepEqual( Stem("mod"), "mod");});
test("moda -> mod", function() {deepEqual( Stem("moda"), "mod");});
test("modadiscio -> modadisc", function() {deepEqual( Stem("modadiscio"), "modadisc");});
test("modalità -> modal", function() {deepEqual( Stem("modalità"), "modal");});
test("mode -> mod", function() {deepEqual( Stem("mode"), "mod");});
test("modella -> modell", function() {deepEqual( Stem("modella"), "modell");});
test("modelli -> modell", function() {deepEqual( Stem("modelli"), "modell");});
test("modello -> modell", function() {deepEqual( Stem("modello"), "modell");});
test("modena -> moden", function() {deepEqual( Stem("modena"), "moden");});
test("modenese -> modenes", function() {deepEqual( Stem("modenese"), "modenes");});
test("moderare -> moder", function() {deepEqual( Stem("moderare"), "moder");});
test("moderarle -> moder", function() {deepEqual( Stem("moderarle"), "moder");});
test("moderata -> moder", function() {deepEqual( Stem("moderata"), "moder");});
test("moderate -> moder", function() {deepEqual( Stem("moderate"), "moder");});
test("moderati -> moder", function() {deepEqual( Stem("moderati"), "moder");});
test("moderatismo -> moderat", function() {deepEqual( Stem("moderatismo"), "moderat");});
test("moderato -> moder", function() {deepEqual( Stem("moderato"), "moder");});
test("moderatore -> moder", function() {deepEqual( Stem("moderatore"), "moder");});
test("moderazione -> moder", function() {deepEqual( Stem("moderazione"), "moder");});
test("moderna -> modern", function() {deepEqual( Stem("moderna"), "modern");});
test("moderni -> modern", function() {deepEqual( Stem("moderni"), "modern");});
test("modernità -> modern", function() {deepEqual( Stem("modernità"), "modern");});
test("moderno -> modern", function() {deepEqual( Stem("moderno"), "modern");});
test("modesta -> modest", function() {deepEqual( Stem("modesta"), "modest");});
test("modestamente -> modest", function() {deepEqual( Stem("modestamente"), "modest");});
test("modeste -> modest", function() {deepEqual( Stem("modeste"), "modest");});
test("modesti -> modest", function() {deepEqual( Stem("modesti"), "modest");});
test("modestia -> modest", function() {deepEqual( Stem("modestia"), "modest");});
test("modesto -> modest", function() {deepEqual( Stem("modesto"), "modest");});
test("modhumangal -> modhumangal", function() {deepEqual( Stem("modhumangal"), "modhumangal");});
test("modi -> mod", function() {deepEqual( Stem("modi"), "mod");});
test("modica -> modic", function() {deepEqual( Stem("modica"), "modic");});
test("modifica -> modif", function() {deepEqual( Stem("modifica"), "modif");});
test("modificando -> modific", function() {deepEqual( Stem("modificando"), "modific");});
test("modificare -> modific", function() {deepEqual( Stem("modificare"), "modific");});
test("modificata -> modific", function() {deepEqual( Stem("modificata"), "modific");});
test("modificate -> modific", function() {deepEqual( Stem("modificate"), "modific");});
test("modificato -> modific", function() {deepEqual( Stem("modificato"), "modific");});
test("modifiche -> modif", function() {deepEqual( Stem("modifiche"), "modif");});
test("modo -> mod", function() {deepEqual( Stem("modo"), "mod");});
test("modulare -> modul", function() {deepEqual( Stem("modulare"), "modul");});
test("moduli -> modul", function() {deepEqual( Stem("moduli"), "modul");});
test("moeller -> moeller", function() {deepEqual( Stem("moeller"), "moeller");});
test("mogadisciani -> mogadiscian", function() {deepEqual( Stem("mogadisciani"), "mogadiscian");});
test("mogadiscio -> mogadisc", function() {deepEqual( Stem("mogadiscio"), "mogadisc");});
test("moggio -> mogg", function() {deepEqual( Stem("moggio"), "mogg");});
test("mogli -> mogl", function() {deepEqual( Stem("mogli"), "mogl");});
test("moglie -> mogl", function() {deepEqual( Stem("moglie"), "mogl");});
test("mohammed -> mohammed", function() {deepEqual( Stem("mohammed"), "mohammed");});
test("mohawk -> mohawk", function() {deepEqual( Stem("mohawk"), "mohawk");});
test("mohovke -> mohovk", function() {deepEqual( Stem("mohovke"), "mohovk");});
test("mohtashemi -> mohtashem", function() {deepEqual( Stem("mohtashemi"), "mohtashem");});
test("moia -> moi", function() {deepEqual( Stem("moia"), "moi");});
test("moiano -> moi", function() {deepEqual( Stem("moiano"), "moi");});
test("moine -> moin", function() {deepEqual( Stem("moine"), "moin");});
test("moio -> moi", function() {deepEqual( Stem("moio"), "moi");});
test("moioli -> moiol", function() {deepEqual( Stem("moioli"), "moiol");});
test("moion -> moion", function() {deepEqual( Stem("moion"), "moion");});
test("moiono -> moi", function() {deepEqual( Stem("moiono"), "moi");});
test("mole -> mol", function() {deepEqual( Stem("mole"), "mol");});
test("molesta -> molest", function() {deepEqual( Stem("molesta"), "molest");});
test("molestar -> molest", function() {deepEqual( Stem("molestar"), "molest");});
test("molestare -> molest", function() {deepEqual( Stem("molestare"), "molest");});
test("molestato -> molest", function() {deepEqual( Stem("molestato"), "molest");});
test("molesti -> molest", function() {deepEqual( Stem("molesti"), "molest");});
test("molestie -> molest", function() {deepEqual( Stem("molestie"), "molest");});
test("molfetta -> molfett", function() {deepEqual( Stem("molfetta"), "molfett");});
test("molinari -> molinar", function() {deepEqual( Stem("molinari"), "molinar");});
test("molino -> molin", function() {deepEqual( Stem("molino"), "molin");});
test("molla -> moll", function() {deepEqual( Stem("molla"), "moll");});
test("mollare -> moll", function() {deepEqual( Stem("mollare"), "moll");});
test("molle -> moll", function() {deepEqual( Stem("molle"), "moll");});
test("mollemente -> mollement", function() {deepEqual( Stem("mollemente"), "mollement");});
test("molli -> moll", function() {deepEqual( Stem("molli"), "moll");});
test("mollo -> moll", function() {deepEqual( Stem("mollo"), "moll");});
test("molt -> molt", function() {deepEqual( Stem("molt"), "molt");});
test("molta -> molt", function() {deepEqual( Stem("molta"), "molt");});
test("molte -> molt", function() {deepEqual( Stem("molte"), "molt");});
test("molteno -> molten", function() {deepEqual( Stem("molteno"), "molten");});
test("molteplici -> moltepl", function() {deepEqual( Stem("molteplici"), "moltepl");});
test("molti -> molt", function() {deepEqual( Stem("molti"), "molt");});
test("moltiplicando -> moltiplic", function() {deepEqual( Stem("moltiplicando"), "moltiplic");});
test("moltiplicano -> moltiplic", function() {deepEqual( Stem("moltiplicano"), "moltiplic");});
test("moltiplicare -> moltiplic", function() {deepEqual( Stem("moltiplicare"), "moltiplic");});
test("moltiplicarsi -> moltiplic", function() {deepEqual( Stem("moltiplicarsi"), "moltiplic");});
test("moltiplicava -> moltiplic", function() {deepEqual( Stem("moltiplicava"), "moltiplic");});
test("moltiplicazione -> moltipl", function() {deepEqual( Stem("moltiplicazione"), "moltipl");});
test("moltiplice -> moltipl", function() {deepEqual( Stem("moltiplice"), "moltipl");});
test("moltiplici -> moltipl", function() {deepEqual( Stem("moltiplici"), "moltipl");});
test("moltissime -> moltissim", function() {deepEqual( Stem("moltissime"), "moltissim");});
test("moltissimi -> moltissim", function() {deepEqual( Stem("moltissimi"), "moltissim");});
test("moltissimo -> moltissim", function() {deepEqual( Stem("moltissimo"), "moltissim");});
test("moltitudine -> moltitudin", function() {deepEqual( Stem("moltitudine"), "moltitudin");});
test("molto -> molt", function() {deepEqual( Stem("molto"), "molt");});
test("mombasa -> mombas", function() {deepEqual( Stem("mombasa"), "mombas");});
test("momentanea -> momentane", function() {deepEqual( Stem("momentanea"), "momentane");});
test("momentaneamente -> momentan", function() {deepEqual( Stem("momentaneamente"), "momentan");});
test("momentaneo -> momentane", function() {deepEqual( Stem("momentaneo"), "momentane");});
test("momentano -> moment", function() {deepEqual( Stem("momentano"), "moment");});
test("momenti -> moment", function() {deepEqual( Stem("momenti"), "moment");});
test("momentino -> momentin", function() {deepEqual( Stem("momentino"), "momentin");});
test("momento -> moment", function() {deepEqual( Stem("momento"), "moment");});
test("monaca -> monac", function() {deepEqual( Stem("monaca"), "monac");});
test("monacanda -> monacand", function() {deepEqual( Stem("monacanda"), "monacand");});
test("monacande -> monacand", function() {deepEqual( Stem("monacande"), "monacand");});
test("monache -> monac", function() {deepEqual( Stem("monache"), "monac");});
test("monaci -> monac", function() {deepEqual( Stem("monaci"), "monac");});
test("monaco -> monac", function() {deepEqual( Stem("monaco"), "monac");});
test("monarca -> monarc", function() {deepEqual( Stem("monarca"), "monarc");});
test("monasteri -> monaster", function() {deepEqual( Stem("monasteri"), "monaster");});
test("monastero -> monaster", function() {deepEqual( Stem("monastero"), "monaster");});
test("monate -> mon", function() {deepEqual( Stem("monate"), "mon");});
test("monathlich -> monathlic", function() {deepEqual( Stem("monathlich"), "monathlic");});
test("monatti -> monatt", function() {deepEqual( Stem("monatti"), "monatt");});
test("monatto -> monatt", function() {deepEqual( Stem("monatto"), "monatt");});
test("monattuccio -> monattucc", function() {deepEqual( Stem("monattuccio"), "monattucc");});
test("moncassin -> moncassin", function() {deepEqual( Stem("moncassin"), "moncassin");});
test("monche -> monc", function() {deepEqual( Stem("monche"), "monc");});
test("moncone -> moncon", function() {deepEqual( Stem("moncone"), "moncon");});
test("monda -> mond", function() {deepEqual( Stem("monda"), "mond");});
test("mondadori -> mondador", function() {deepEqual( Stem("mondadori"), "mondador");});
test("mondana -> mondan", function() {deepEqual( Stem("mondana"), "mondan");});
test("mondani -> mondan", function() {deepEqual( Stem("mondani"), "mondan");});
test("mondè -> mond", function() {deepEqual( Stem("mondè"), "mond");});
test("mondella -> mondell", function() {deepEqual( Stem("mondella"), "mondell");});
test("mondi -> mond", function() {deepEqual( Stem("mondi"), "mond");});
test("mondiale -> mondial", function() {deepEqual( Stem("mondiale"), "mondial");});
test("mondialfondo -> mondialfond", function() {deepEqual( Stem("mondialfondo"), "mondialfond");});
test("mondiali -> mondial", function() {deepEqual( Stem("mondiali"), "mondial");});
test("mondini -> mondin", function() {deepEqual( Stem("mondini"), "mondin");});
test("mondo -> mond", function() {deepEqual( Stem("mondo"), "mond");});
test("mondò -> mond", function() {deepEqual( Stem("mondò"), "mond");});
test("mondonico -> mondon", function() {deepEqual( Stem("mondonico"), "mondon");});
test("mondovì -> mondov", function() {deepEqual( Stem("mondovì"), "mondov");});
test("monere -> mon", function() {deepEqual( Stem("monere"), "mon");});
test("moneta -> monet", function() {deepEqual( Stem("moneta"), "monet");});
test("monetaria -> monetar", function() {deepEqual( Stem("monetaria"), "monetar");});
test("monetario -> monetar", function() {deepEqual( Stem("monetario"), "monetar");});
test("monete -> mon", function() {deepEqual( Stem("monete"), "mon");});
test("moneterio -> moneter", function() {deepEqual( Stem("moneterio"), "moneter");});
test("money -> money", function() {deepEqual( Stem("money"), "money");});
test("moneytime -> moneytim", function() {deepEqual( Stem("moneytime"), "moneytim");});
test("monfalcone -> monfalcon", function() {deepEqual( Stem("monfalcone"), "monfalcon");});
test("monferrato -> monferr", function() {deepEqual( Stem("monferrato"), "monferr");});
test("monica -> monic", function() {deepEqual( Stem("monica"), "monic");});
test("monito -> mon", function() {deepEqual( Stem("monito"), "mon");});
test("monitor -> monitor", function() {deepEqual( Stem("monitor"), "monitor");});
test("monitoraggio -> monitoragg", function() {deepEqual( Stem("monitoraggio"), "monitoragg");});
test("monitorare -> monitor", function() {deepEqual( Stem("monitorare"), "monitor");});
test("monizione -> monizion", function() {deepEqual( Stem("monizione"), "monizion");});
test("monoblocco -> monoblocc", function() {deepEqual( Stem("monoblocco"), "monoblocc");});
test("monolith -> monolith", function() {deepEqual( Stem("monolith"), "monolith");});
test("monologo -> monolog", function() {deepEqual( Stem("monologo"), "monolog");});
test("monopattino -> monopattin", function() {deepEqual( Stem("monopattino"), "monopattin");});
test("monopoli -> monopol", function() {deepEqual( Stem("monopoli"), "monopol");});
test("monopolio -> monopol", function() {deepEqual( Stem("monopolio"), "monopol");});
test("monopolismo -> monopol", function() {deepEqual( Stem("monopolismo"), "monopol");});
test("monopolisti -> monopol", function() {deepEqual( Stem("monopolisti"), "monopol");});
test("monopolistico -> monopolist", function() {deepEqual( Stem("monopolistico"), "monopolist");});
test("monorchio -> monorc", function() {deepEqual( Stem("monorchio"), "monorc");});
test("monos -> monos", function() {deepEqual( Stem("monos"), "monos");});
test("monosillabo -> monosillab", function() {deepEqual( Stem("monosillabo"), "monosillab");});
test("monotona -> monoton", function() {deepEqual( Stem("monotona"), "monoton");});
test("mons -> mons", function() {deepEqual( Stem("mons"), "mons");});
test("monsignor -> monsignor", function() {deepEqual( Stem("monsignor"), "monsignor");});
test("monsignore -> monsignor", function() {deepEqual( Stem("monsignore"), "monsignor");});
test("monsignori -> monsignor", function() {deepEqual( Stem("monsignori"), "monsignor");});
test("mont -> mont", function() {deepEqual( Stem("mont"), "mont");});
test("monta -> mont", function() {deepEqual( Stem("monta"), "mont");});
test("montagna -> montagn", function() {deepEqual( Stem("montagna"), "montagn");});
test("montagnani -> montagnan", function() {deepEqual( Stem("montagnani"), "montagnan");});
test("montagne -> montagn", function() {deepEqual( Stem("montagne"), "montagn");});
test("montalbano -> montalb", function() {deepEqual( Stem("montalbano"), "montalb");});
test("montalto -> montalt", function() {deepEqual( Stem("montalto"), "montalt");});
test("montanara -> montanar", function() {deepEqual( Stem("montanara"), "montanar");});
test("montanare -> montan", function() {deepEqual( Stem("montanare"), "montan");});
test("montanari -> montanar", function() {deepEqual( Stem("montanari"), "montanar");});
test("montanaro -> montanar", function() {deepEqual( Stem("montanaro"), "montanar");});
test("montanarolo -> montanarol", function() {deepEqual( Stem("montanarolo"), "montanarol");});
test("montanelli -> montanell", function() {deepEqual( Stem("montanelli"), "montanell");});
test("montante -> montant", function() {deepEqual( Stem("montante"), "montant");});
test("montare -> mont", function() {deepEqual( Stem("montare"), "mont");});
test("montarono -> mont", function() {deepEqual( Stem("montarono"), "mont");});
test("montasse -> mont", function() {deepEqual( Stem("montasse"), "mont");});
test("montato -> mont", function() {deepEqual( Stem("montato"), "mont");});
test("monte -> mont", function() {deepEqual( Stem("monte"), "mont");});
test("montecarlo -> montec", function() {deepEqual( Stem("montecarlo"), "montec");});
test("montecitorio -> montecitor", function() {deepEqual( Stem("montecitorio"), "montecitor");});
test("montecuccoli -> montecuccol", function() {deepEqual( Stem("montecuccoli"), "montecuccol");});
test("montedison -> montedison", function() {deepEqual( Stem("montedison"), "montedison");});
test("montefibre -> montefibr", function() {deepEqual( Stem("montefibre"), "montefibr");});
test("montefiorino -> montefiorin", function() {deepEqual( Stem("montefiorino"), "montefiorin");});
test("montepremi -> monteprem", function() {deepEqual( Stem("montepremi"), "monteprem");});
test("montero -> monter", function() {deepEqual( Stem("montero"), "monter");});
test("montervarchi -> montervarc", function() {deepEqual( Stem("montervarchi"), "montervarc");});
test("montesano -> montes", function() {deepEqual( Stem("montesano"), "montes");});
test("montevarchi -> montevarc", function() {deepEqual( Stem("montevarchi"), "montevarc");});
test("montevideo -> montevide", function() {deepEqual( Stem("montevideo"), "montevide");});
test("monti -> mont", function() {deepEqual( Stem("monti"), "mont");});
test("monticone -> monticon", function() {deepEqual( Stem("monticone"), "monticon");});
test("montino -> montin", function() {deepEqual( Stem("montino"), "montin");});
test("montò -> mont", function() {deepEqual( Stem("montò"), "mont");});
test("montpellier -> montpellier", function() {deepEqual( Stem("montpellier"), "montpellier");});
test("montreal -> montreal", function() {deepEqual( Stem("montreal"), "montreal");});
test("monumento -> monument", function() {deepEqual( Stem("monumento"), "monument");});
test("monza -> monz", function() {deepEqual( Stem("monza"), "monz");});
test("moon -> moon", function() {deepEqual( Stem("moon"), "moon");});
test("moore -> moor", function() {deepEqual( Stem("moore"), "moor");});
test("mora -> mor", function() {deepEqual( Stem("mora"), "mor");});
test("morale -> moral", function() {deepEqual( Stem("morale"), "moral");});
test("morali -> moral", function() {deepEqual( Stem("morali"), "moral");});
test("moralista -> moral", function() {deepEqual( Stem("moralista"), "moral");});
test("moratti -> moratt", function() {deepEqual( Stem("moratti"), "moratt");});
test("morbidà -> morbid", function() {deepEqual( Stem("morbidà"), "morbid");});
test("morbidò -> morbid", function() {deepEqual( Stem("morbidò"), "morbid");});
test("morbo -> morb", function() {deepEqual( Stem("morbo"), "morb");});
test("morbos -> morbos", function() {deepEqual( Stem("morbos"), "morbos");});
test("morbus -> morbus", function() {deepEqual( Stem("morbus"), "morbus");});
test("mord -> mord", function() {deepEqual( Stem("mord"), "mord");});
test("mordere -> mord", function() {deepEqual( Stem("mordere"), "mord");});
test("morderle -> mord", function() {deepEqual( Stem("morderle"), "mord");});
test("mordevano -> mord", function() {deepEqual( Stem("mordevano"), "mord");});
test("moreau -> moreau", function() {deepEqual( Stem("moreau"), "moreau");});
test("morendo -> mor", function() {deepEqual( Stem("morendo"), "mor");});
test("moreno -> moren", function() {deepEqual( Stem("moreno"), "moren");});
test("moretti -> morett", function() {deepEqual( Stem("moretti"), "morett");});
test("moretto -> morett", function() {deepEqual( Stem("moretto"), "morett");});
test("morfeo -> morfe", function() {deepEqual( Stem("morfeo"), "morfe");});
test("morfologia -> morfolog", function() {deepEqual( Stem("morfologia"), "morfolog");});
test("morgan -> morgan", function() {deepEqual( Stem("morgan"), "morgan");});
test("mori -> mor", function() {deepEqual( Stem("mori"), "mor");});
test("morì -> mor", function() {deepEqual( Stem("morì"), "mor");});
test("morìa -> morì", function() {deepEqual( Stem("morìa"), "morì");});
test("moribondi -> moribond", function() {deepEqual( Stem("moribondi"), "moribond");});
test("moribondo -> moribond", function() {deepEqual( Stem("moribondo"), "moribond");});
test("moriero -> morier", function() {deepEqual( Stem("moriero"), "morier");});
test("morir -> mor", function() {deepEqual( Stem("morir"), "mor");});
test("morirà -> mor", function() {deepEqual( Stem("morirà"), "mor");});
test("morire -> mor", function() {deepEqual( Stem("morire"), "mor");});
test("moriron -> moriron", function() {deepEqual( Stem("moriron"), "moriron");});
test("morirono -> mor", function() {deepEqual( Stem("morirono"), "mor");});
test("morisse -> moriss", function() {deepEqual( Stem("morisse"), "moriss");});
test("moriva -> mor", function() {deepEqual( Stem("moriva"), "mor");});
test("morivano -> mor", function() {deepEqual( Stem("morivano"), "mor");});
test("mormoracchiare -> mormoracc", function() {deepEqual( Stem("mormoracchiare"), "mormoracc");});
test("mormorando -> mormor", function() {deepEqual( Stem("mormorando"), "mormor");});
test("mormorava -> mormor", function() {deepEqual( Stem("mormorava"), "mormor");});
test("mormorazione -> mormor", function() {deepEqual( Stem("mormorazione"), "mormor");});
test("mormorazioni -> mormor", function() {deepEqual( Stem("mormorazioni"), "mormor");});
test("mormorìo -> mormorì", function() {deepEqual( Stem("mormorìo"), "mormorì");});
test("moro -> mor", function() {deepEqual( Stem("moro"), "mor");});
test("morosa -> moros", function() {deepEqual( Stem("morosa"), "moros");});
test("morris -> morris", function() {deepEqual( Stem("morris"), "morris");});
test("morsa -> mors", function() {deepEqual( Stem("morsa"), "mors");});
test("morse -> mors", function() {deepEqual( Stem("morse"), "mors");});
test("morsi -> mors", function() {deepEqual( Stem("morsi"), "mors");});
test("morso -> mors", function() {deepEqual( Stem("morso"), "mors");});
test("morta -> mort", function() {deepEqual( Stem("morta"), "mort");});
test("mortagli -> mortagl", function() {deepEqual( Stem("mortagli"), "mortagl");});
test("mortale -> mortal", function() {deepEqual( Stem("mortale"), "mortal");});
test("mortales -> mortales", function() {deepEqual( Stem("mortales"), "mortales");});
test("mortali -> mortal", function() {deepEqual( Stem("mortali"), "mortal");});
test("mortalità -> mortal", function() {deepEqual( Stem("mortalità"), "mortal");});
test("morte -> mort", function() {deepEqual( Stem("morte"), "mort");});
test("mortem -> mortem", function() {deepEqual( Stem("mortem"), "mortem");});
test("morti -> mort", function() {deepEqual( Stem("morti"), "mort");});
test("morticina -> morticin", function() {deepEqual( Stem("morticina"), "morticin");});
test("mortiferi -> mortifer", function() {deepEqual( Stem("mortiferi"), "mortifer");});
test("mortificata -> mortific", function() {deepEqual( Stem("mortificata"), "mortific");});
test("mortificati -> mortific", function() {deepEqual( Stem("mortificati"), "mortific");});
test("mortificato -> mortific", function() {deepEqual( Stem("mortificato"), "mortific");});
test("morto -> mort", function() {deepEqual( Stem("morto"), "mort");});
test("mortorio -> mortor", function() {deepEqual( Stem("mortorio"), "mortor");});
test("mosca -> mosc", function() {deepEqual( Stem("mosca"), "mosc");});
test("moscà -> mosc", function() {deepEqual( Stem("moscà"), "mosc");});
test("moscatelli -> moscatell", function() {deepEqual( Stem("moscatelli"), "moscatell");});
test("mosche -> mosc", function() {deepEqual( Stem("mosche"), "mosc");});
test("moschea -> mosche", function() {deepEqual( Stem("moschea"), "mosche");});
test("moschetti -> moschett", function() {deepEqual( Stem("moschetti"), "moschett");});
test("moschettieri -> moschettier", function() {deepEqual( Stem("moschettieri"), "moschettier");});
test("moschetto -> moschett", function() {deepEqual( Stem("moschetto"), "moschett");});
test("mosconi -> moscon", function() {deepEqual( Stem("mosconi"), "moscon");});
test("moscovita -> moscov", function() {deepEqual( Stem("moscovita"), "moscov");});
test("moser -> moser", function() {deepEqual( Stem("moser"), "moser");});
test("moses -> moses", function() {deepEqual( Stem("moses"), "moses");});
test("moshe -> mosh", function() {deepEqual( Stem("moshe"), "mosh");});
test("mossa -> moss", function() {deepEqual( Stem("mossa"), "moss");});
test("mosse -> moss", function() {deepEqual( Stem("mosse"), "moss");});
test("mossero -> mosser", function() {deepEqual( Stem("mossero"), "mosser");});
test("mossi -> moss", function() {deepEqual( Stem("mossi"), "moss");});
test("mosso -> moss", function() {deepEqual( Stem("mosso"), "moss");});
test("mostacci -> mostacc", function() {deepEqual( Stem("mostacci"), "mostacc");});
test("mostar -> most", function() {deepEqual( Stem("mostar"), "most");});
test("mostra -> mostr", function() {deepEqual( Stem("mostra"), "mostr");});
test("mostrando -> mostr", function() {deepEqual( Stem("mostrando"), "mostr");});
test("mostrandosi -> mostr", function() {deepEqual( Stem("mostrandosi"), "mostr");});
test("mostrano -> mostr", function() {deepEqual( Stem("mostrano"), "mostr");});
test("mostrar -> mostr", function() {deepEqual( Stem("mostrar"), "mostr");});
test("mostrare -> mostr", function() {deepEqual( Stem("mostrare"), "mostr");});
test("mostraron -> mostraron", function() {deepEqual( Stem("mostraron"), "mostraron");});
test("mostrarsi -> mostr", function() {deepEqual( Stem("mostrarsi"), "mostr");});
test("mostrasse -> mostr", function() {deepEqual( Stem("mostrasse"), "mostr");});
test("mostrata -> mostr", function() {deepEqual( Stem("mostrata"), "mostr");});
test("mostrati -> mostr", function() {deepEqual( Stem("mostrati"), "mostr");});
test("mostrato -> mostr", function() {deepEqual( Stem("mostrato"), "mostr");});
test("mostratone -> mostraton", function() {deepEqual( Stem("mostratone"), "mostraton");});
test("mostrava -> mostr", function() {deepEqual( Stem("mostrava"), "mostr");});
test("mostravan -> mostravan", function() {deepEqual( Stem("mostravan"), "mostravan");});
test("mostravano -> mostr", function() {deepEqual( Stem("mostravano"), "mostr");});
test("mostre -> mostr", function() {deepEqual( Stem("mostre"), "mostr");});
test("mostri -> mostr", function() {deepEqual( Stem("mostri"), "mostr");});
test("mostriciattolo -> mostriciattol", function() {deepEqual( Stem("mostriciattolo"), "mostriciattol");});
test("mostro -> mostr", function() {deepEqual( Stem("mostro"), "mostr");});
test("mostrò -> mostr", function() {deepEqual( Stem("mostrò"), "mostr");});
test("mostruose -> mostruos", function() {deepEqual( Stem("mostruose"), "mostruos");});
test("mostruosità -> mostruos", function() {deepEqual( Stem("mostruosità"), "mostruos");});
test("mostruoso -> mostruos", function() {deepEqual( Stem("mostruoso"), "mostruos");});
test("mota -> mot", function() {deepEqual( Stem("mota"), "mot");});
test("motherwell -> motherwell", function() {deepEqual( Stem("motherwell"), "motherwell");});
test("moti -> mot", function() {deepEqual( Stem("moti"), "mot");});
test("motiv -> motiv", function() {deepEqual( Stem("motiv"), "motiv");});
test("motivandole -> motiv", function() {deepEqual( Stem("motivandole"), "motiv");});
test("motivar -> motiv", function() {deepEqual( Stem("motivar"), "motiv");});
test("motivasse -> motiv", function() {deepEqual( Stem("motivasse"), "motiv");});
test("motivato -> motiv", function() {deepEqual( Stem("motivato"), "motiv");});
test("motivazione -> motiv", function() {deepEqual( Stem("motivazione"), "motiv");});
test("motivazioni -> motiv", function() {deepEqual( Stem("motivazioni"), "motiv");});
test("motivi -> mot", function() {deepEqual( Stem("motivi"), "mot");});
test("motivo -> mot", function() {deepEqual( Stem("motivo"), "mot");});
test("motivò -> motiv", function() {deepEqual( Stem("motivò"), "motiv");});
test("moto -> mot", function() {deepEqual( Stem("moto"), "mot");});
test("motonave -> motonav", function() {deepEqual( Stem("motonave"), "motonav");});
test("motor -> motor", function() {deepEqual( Stem("motor"), "motor");});
test("motore -> motor", function() {deepEqual( Stem("motore"), "motor");});
test("motoretta -> motorett", function() {deepEqual( Stem("motoretta"), "motorett");});
test("motori -> motor", function() {deepEqual( Stem("motori"), "motor");});
test("motorino -> motorin", function() {deepEqual( Stem("motorino"), "motorin");});
test("motorizzazione -> motorizz", function() {deepEqual( Stem("motorizzazione"), "motorizz");});
test("motosa -> motos", function() {deepEqual( Stem("motosa"), "motos");});
test("motoscafi -> motoscaf", function() {deepEqual( Stem("motoscafi"), "motoscaf");});
test("motoseghe -> motoseg", function() {deepEqual( Stem("motoseghe"), "motoseg");});
test("motta -> mott", function() {deepEqual( Stem("motta"), "mott");});
test("motti -> mott", function() {deepEqual( Stem("motti"), "mott");});
test("motuum -> motuum", function() {deepEqual( Stem("motuum"), "motuum");});
test("mouillot -> mouillot", function() {deepEqual( Stem("mouillot"), "mouillot");});
test("moussali -> moussal", function() {deepEqual( Stem("moussali"), "moussal");});
test("mova -> mov", function() {deepEqual( Stem("mova"), "mov");});
test("movan -> movan", function() {deepEqual( Stem("movan"), "movan");});
test("move -> mov", function() {deepEqual( Stem("move"), "mov");});
test("movendole -> mov", function() {deepEqual( Stem("movendole"), "mov");});
test("movendosi -> mov", function() {deepEqual( Stem("movendosi"), "mov");});
test("movente -> movent", function() {deepEqual( Stem("movente"), "movent");});
test("mover -> mover", function() {deepEqual( Stem("mover"), "mover");});
test("movere -> mov", function() {deepEqual( Stem("movere"), "mov");});
test("moverebbe -> mov", function() {deepEqual( Stem("moverebbe"), "mov");});
test("movermi -> mov", function() {deepEqual( Stem("movermi"), "mov");});
test("moverò -> mov", function() {deepEqual( Stem("moverò"), "mov");});
test("moversene -> mov", function() {deepEqual( Stem("moversene"), "mov");});
test("moversi -> mov", function() {deepEqual( Stem("moversi"), "mov");});
test("moverti -> mov", function() {deepEqual( Stem("moverti"), "mov");});
test("movesse -> movess", function() {deepEqual( Stem("movesse"), "movess");});
test("moveva -> mov", function() {deepEqual( Stem("moveva"), "mov");});
test("movimentati -> moviment", function() {deepEqual( Stem("movimentati"), "moviment");});
test("movimentato -> moviment", function() {deepEqual( Stem("movimentato"), "moviment");});
test("movimentazione -> moviment", function() {deepEqual( Stem("movimentazione"), "moviment");});
test("movimenti -> mov", function() {deepEqual( Stem("movimenti"), "mov");});
test("movimento -> mov", function() {deepEqual( Stem("movimento"), "mov");});
test("movinemto -> movinemt", function() {deepEqual( Stem("movinemto"), "movinemt");});
test("movladi -> movlad", function() {deepEqual( Stem("movladi"), "movlad");});
test("movon -> movon", function() {deepEqual( Stem("movon"), "movon");});
test("movono -> mov", function() {deepEqual( Stem("movono"), "mov");});
test("mowbray -> mowbray", function() {deepEqual( Stem("mowbray"), "mowbray");});
test("mozione -> mozion", function() {deepEqual( Stem("mozione"), "mozion");});
test("mozioni -> mozion", function() {deepEqual( Stem("mozioni"), "mozion");});
test("mozzi -> mozz", function() {deepEqual( Stem("mozzi"), "mozz");});
test("mozzicone -> mozzicon", function() {deepEqual( Stem("mozzicone"), "mozzicon");});
test("mr -> mr", function() {deepEqual( Stem("mr"), "mr");});
test("mrc -> mrc", function() {deepEqual( Stem("mrc"), "mrc");});
test("mri -> mri", function() {deepEqual( Stem("mri"), "mri");});
test("ms -> ms", function() {deepEqual( Stem("ms"), "ms");});
test("msc -> msc", function() {deepEqual( Stem("msc"), "msc");});
test("msi -> msi", function() {deepEqual( Stem("msi"), "msi");});
test("mu -> mu", function() {deepEqual( Stem("mu"), "mu");});
test("mucchi -> mucc", function() {deepEqual( Stem("mucchi"), "mucc");});
test("mucchietto -> mucchiett", function() {deepEqual( Stem("mucchietto"), "mucchiett");});
test("mucchio -> mucc", function() {deepEqual( Stem("mucchio"), "mucc");});
test("mudler -> mudler", function() {deepEqual( Stem("mudler"), "mudler");});
test("mugghiava -> mugg", function() {deepEqual( Stem("mugghiava"), "mugg");});
test("muggito -> mugg", function() {deepEqual( Stem("muggito"), "mugg");});
test("mughal -> mughal", function() {deepEqual( Stem("mughal"), "mughal");});
test("mugolìo -> mugolì", function() {deepEqual( Stem("mugolìo"), "mugolì");});
test("mukerjee -> mukerje", function() {deepEqual( Stem("mukerjee"), "mukerje");});
test("mukherjee -> mukherje", function() {deepEqual( Stem("mukherjee"), "mukherje");});
test("mula -> mul", function() {deepEqual( Stem("mula"), "mul");});
test("mulder -> mulder", function() {deepEqual( Stem("mulder"), "mulder");});
test("mule -> mul", function() {deepEqual( Stem("mule"), "mul");});
test("mulè -> mul", function() {deepEqual( Stem("mulè"), "mul");});
test("mulinare -> mulin", function() {deepEqual( Stem("mulinare"), "mulin");});
test("mulinello -> mulinell", function() {deepEqual( Stem("mulinello"), "mulinell");});
test("mulini -> mulin", function() {deepEqual( Stem("mulini"), "mulin");});
test("mulo -> mul", function() {deepEqual( Stem("mulo"), "mul");});
test("multa -> mult", function() {deepEqual( Stem("multa"), "mult");});
test("multe -> mult", function() {deepEqual( Stem("multe"), "mult");});
test("multiazioni -> multiazion", function() {deepEqual( Stem("multiazioni"), "multiazion");});
test("multifariam -> multifariam", function() {deepEqual( Stem("multifariam"), "multifariam");});
test("multifondo -> multifond", function() {deepEqual( Stem("multifondo"), "multifond");});
test("multimediale -> multimedial", function() {deepEqual( Stem("multimediale"), "multimedial");});
test("multinazionale -> multinazional", function() {deepEqual( Stem("multinazionale"), "multinazional");});
test("multinazionali -> multinazional", function() {deepEqual( Stem("multinazionali"), "multinazional");});
test("multiproprietà -> multipropriet", function() {deepEqual( Stem("multiproprietà"), "multipropriet");});
test("multiras -> multiras", function() {deepEqual( Stem("multiras"), "multiras");});
test("multiuso -> multius", function() {deepEqual( Stem("multiuso"), "multius");});
test("munda -> mund", function() {deepEqual( Stem("munda"), "mund");});
test("mundis -> mundis", function() {deepEqual( Stem("mundis"), "mundis");});
test("mungere -> mung", function() {deepEqual( Stem("mungere"), "mung");});
test("municipale -> municipal", function() {deepEqual( Stem("municipale"), "municipal");});
test("municipali -> municipal", function() {deepEqual( Stem("municipali"), "municipal");});
test("municipalizzate -> municipalizz", function() {deepEqual( Stem("municipalizzate"), "municipalizz");});
test("munificenza -> munificent", function() {deepEqual( Stem("munificenza"), "munificent");});
test("muniti -> mun", function() {deepEqual( Stem("muniti"), "mun");});
test("munizione -> munizion", function() {deepEqual( Stem("munizione"), "munizion");});
test("munoz -> munoz", function() {deepEqual( Stem("munoz"), "munoz");});
test("muoia -> muoi", function() {deepEqual( Stem("muoia"), "muoi");});
test("muoiono -> muoi", function() {deepEqual( Stem("muoiono"), "muoi");});
test("muore -> muor", function() {deepEqual( Stem("muore"), "muor");});
test("muove -> muov", function() {deepEqual( Stem("muove"), "muov");});
test("muovendo -> muov", function() {deepEqual( Stem("muovendo"), "muov");});
test("muovere -> muov", function() {deepEqual( Stem("muovere"), "muov");});
test("muoverò -> muov", function() {deepEqual( Stem("muoverò"), "muov");});
test("muoversi -> muov", function() {deepEqual( Stem("muoversi"), "muov");});
test("muovono -> muov", function() {deepEqual( Stem("muovono"), "muov");});
test("mura -> mur", function() {deepEqual( Stem("mura"), "mur");});
test("muraglia -> muragl", function() {deepEqual( Stem("muraglia"), "muragl");});
test("muraglie -> muragl", function() {deepEqual( Stem("muraglie"), "muragl");});
test("murati -> mur", function() {deepEqual( Stem("murati"), "mur");});
test("murato -> mur", function() {deepEqual( Stem("murato"), "mur");});
test("muratori -> murator", function() {deepEqual( Stem("muratori"), "murator");});
test("murettino -> murettin", function() {deepEqual( Stem("murettino"), "murettin");});
test("murgita -> murg", function() {deepEqual( Stem("murgita"), "murg");});
test("muri -> mur", function() {deepEqual( Stem("muri"), "mur");});
test("muriccioli -> muricciol", function() {deepEqual( Stem("muriccioli"), "muricciol");});
test("muricciolo -> muricciol", function() {deepEqual( Stem("muricciolo"), "muricciol");});
test("murmansk -> murmansk", function() {deepEqual( Stem("murmansk"), "murmansk");});
test("muro -> mur", function() {deepEqual( Stem("muro"), "mur");});
test("murphy -> murphy", function() {deepEqual( Stem("murphy"), "murphy");});
test("musa -> mus", function() {deepEqual( Stem("musa"), "mus");});
test("muscardini -> muscardin", function() {deepEqual( Stem("muscardini"), "muscardin");});
test("muscoloso -> muscol", function() {deepEqual( Stem("muscoloso"), "muscol");});
test("muse -> mus", function() {deepEqual( Stem("muse"), "mus");});
test("museeuv -> museeuv", function() {deepEqual( Stem("museeuv"), "museeuv");});
test("museo -> muse", function() {deepEqual( Stem("museo"), "muse");});
test("museum -> museum", function() {deepEqual( Stem("museum"), "museum");});
test("musher -> musher", function() {deepEqual( Stem("musher"), "musher");});
test("musi -> mus", function() {deepEqual( Stem("musi"), "mus");});
test("music -> music", function() {deepEqual( Stem("music"), "music");});
test("musica -> music", function() {deepEqual( Stem("musica"), "music");});
test("musical -> musical", function() {deepEqual( Stem("musical"), "musical");});
test("musicale -> musical", function() {deepEqual( Stem("musicale"), "musical");});
test("musicali -> musical", function() {deepEqual( Stem("musicali"), "musical");});
test("musiche -> music", function() {deepEqual( Stem("musiche"), "music");});
test("musicista -> music", function() {deepEqual( Stem("musicista"), "music");});
test("musicisti -> music", function() {deepEqual( Stem("musicisti"), "music");});
test("muso -> mus", function() {deepEqual( Stem("muso"), "mus");});
test("mussi -> muss", function() {deepEqual( Stem("mussi"), "muss");});
test("mussolenghe -> mussoleng", function() {deepEqual( Stem("mussolenghe"), "mussoleng");});
test("mussolente -> mussolent", function() {deepEqual( Stem("mussolente"), "mussolent");});
test("mussolini -> mussolin", function() {deepEqual( Stem("mussolini"), "mussolin");});
test("mustacchi -> mustacc", function() {deepEqual( Stem("mustacchi"), "mustacc");});
test("mustigarufi -> mustigaruf", function() {deepEqual( Stem("mustigarufi"), "mustigaruf");});
test("musulmana -> musulman", function() {deepEqual( Stem("musulmana"), "musulman");});
test("musulmani -> musulman", function() {deepEqual( Stem("musulmani"), "musulman");});
test("musulmano -> musulm", function() {deepEqual( Stem("musulmano"), "musulm");});
test("musumeci -> musumec", function() {deepEqual( Stem("musumeci"), "musumec");});
test("musure -> musur", function() {deepEqual( Stem("musure"), "musur");});
test("muta -> mut", function() {deepEqual( Stem("muta"), "mut");});
test("mutabile -> mutabil", function() {deepEqual( Stem("mutabile"), "mutabil");});
test("mutabili -> mutabil", function() {deepEqual( Stem("mutabili"), "mutabil");});
test("mutande -> mutand", function() {deepEqual( Stem("mutande"), "mutand");});
test("mutandosi -> mut", function() {deepEqual( Stem("mutandosi"), "mut");});
test("mutano -> mut", function() {deepEqual( Stem("mutano"), "mut");});
test("mutar -> mut", function() {deepEqual( Stem("mutar"), "mut");});
test("mutare -> mut", function() {deepEqual( Stem("mutare"), "mut");});
test("mutarsi -> mut", function() {deepEqual( Stem("mutarsi"), "mut");});
test("mutasse -> mut", function() {deepEqual( Stem("mutasse"), "mut");});
test("mutata -> mut", function() {deepEqual( Stem("mutata"), "mut");});
test("mutate -> mut", function() {deepEqual( Stem("mutate"), "mut");});
test("mutati -> mut", function() {deepEqual( Stem("mutati"), "mut");});
test("mutatio -> mutat", function() {deepEqual( Stem("mutatio"), "mutat");});
test("mutato -> mut", function() {deepEqual( Stem("mutato"), "mut");});
test("mutazione -> mutazion", function() {deepEqual( Stem("mutazione"), "mutazion");});
test("mutazioni -> mutazion", function() {deepEqual( Stem("mutazioni"), "mutazion");});
test("mute -> mut", function() {deepEqual( Stem("mute"), "mut");});
test("muterò -> mut", function() {deepEqual( Stem("muterò"), "mut");});
test("muti -> mut", function() {deepEqual( Stem("muti"), "mut");});
test("mutilata -> mutil", function() {deepEqual( Stem("mutilata"), "mutil");});
test("mutilate -> mutil", function() {deepEqual( Stem("mutilate"), "mutil");});
test("muto -> mut", function() {deepEqual( Stem("muto"), "mut");});
test("mutò -> mut", function() {deepEqual( Stem("mutò"), "mut");});
test("mutria -> mutr", function() {deepEqual( Stem("mutria"), "mutr");});
test("mutua -> mutu", function() {deepEqual( Stem("mutua"), "mutu");});
test("mutualisti -> mutual", function() {deepEqual( Stem("mutualisti"), "mutual");});
test("mutualistici -> mutualist", function() {deepEqual( Stem("mutualistici"), "mutualist");});
test("mutuati -> mutu", function() {deepEqual( Stem("mutuati"), "mutu");});
test("mutui -> mutu", function() {deepEqual( Stem("mutui"), "mutu");});
test("muzio -> muz", function() {deepEqual( Stem("muzio"), "muz");});
test("muzzi -> muzz", function() {deepEqual( Stem("muzzi"), "muzz");});
test("mv -> mv", function() {deepEqual( Stem("mv"), "mv");});
test("mw -> mw", function() {deepEqual( Stem("mw"), "mw");});
test("my -> my", function() {deepEqual( Stem("my"), "my");});
test("myanma -> myanm", function() {deepEqual( Stem("myanma"), "myanm");});
test("myra -> myra", function() {deepEqual( Stem("myra"), "myra");});
test("mz -> mz", function() {deepEqual( Stem("mz"), "mz");});
test("n -> n", function() {deepEqual( Stem("n"), "n");});
test("na -> na", function() {deepEqual( Stem("na"), "na");});
test("naas -> naas", function() {deepEqual( Stem("naas"), "naas");});
test("nababbo -> nababb", function() {deepEqual( Stem("nababbo"), "nababb");});
test("nabi -> nab", function() {deepEqual( Stem("nabi"), "nab");});
test("nabil -> nabil", function() {deepEqual( Stem("nabil"), "nabil");});
test("nabila -> nabil", function() {deepEqual( Stem("nabila"), "nabil");});
test("nacht -> nacht", function() {deepEqual( Stem("nacht"), "nacht");});
test("nacque -> nacqu", function() {deepEqual( Stem("nacque"), "nacqu");});
test("nacquero -> nacquer", function() {deepEqual( Stem("nacquero"), "nacquer");});
test("nadal -> nadal", function() {deepEqual( Stem("nadal"), "nadal");});
test("nadtierechni -> nadtierechn", function() {deepEqual( Stem("nadtierechni"), "nadtierechn");});
test("nagisa -> nagis", function() {deepEqual( Stem("nagisa"), "nagis");});
test("nagracapital -> nagracapital", function() {deepEqual( Stem("nagracapital"), "nagracapital");});
test("nagrarend -> nagrarend", function() {deepEqual( Stem("nagrarend"), "nagrarend");});
test("nai -> nai", function() {deepEqual( Stem("nai"), "nai");});
test("naionale -> naional", function() {deepEqual( Stem("naionale"), "naional");});
test("nairobi -> nairob", function() {deepEqual( Stem("nairobi"), "nairob");});
test("naizonale -> naizonal", function() {deepEqual( Stem("naizonale"), "naizonal");});
test("naji -> naj", function() {deepEqual( Stem("naji"), "naj");});
test("nalcik -> nalcik", function() {deepEqual( Stem("nalcik"), "nalcik");});
test("namibia -> namib", function() {deepEqual( Stem("namibia"), "namib");});
test("namik -> namik", function() {deepEqual( Stem("namik"), "namik");});
test("nan -> nan", function() {deepEqual( Stem("nan"), "nan");});
test("nando -> nand", function() {deepEqual( Stem("nando"), "nand");});
test("nani -> nan", function() {deepEqual( Stem("nani"), "nan");});
test("nania -> nan", function() {deepEqual( Stem("nania"), "nan");});
test("nanni -> nann", function() {deepEqual( Stem("nanni"), "nann");});
test("nantes -> nantes", function() {deepEqual( Stem("nantes"), "nantes");});
test("nantucket -> nantucket", function() {deepEqual( Stem("nantucket"), "nantucket");});
test("napoletana -> napoletan", function() {deepEqual( Stem("napoletana"), "napoletan");});
test("napoletane -> napoletan", function() {deepEqual( Stem("napoletane"), "napoletan");});
test("napoletano -> napolet", function() {deepEqual( Stem("napoletano"), "napolet");});
test("napoli -> napol", function() {deepEqual( Stem("napoli"), "napol");});
test("napolitano -> napolit", function() {deepEqual( Stem("napolitano"), "napolit");});
test("nappa -> napp", function() {deepEqual( Stem("nappa"), "napp");});
test("nappi -> napp", function() {deepEqual( Stem("nappi"), "napp");});
test("narasimha -> narasimh", function() {deepEqual( Stem("narasimha"), "narasimh");});
test("narcotraffico -> narcotraff", function() {deepEqual( Stem("narcotraffico"), "narcotraff");});
test("nardi -> nard", function() {deepEqual( Stem("nardi"), "nard");});
test("nardini -> nardin", function() {deepEqual( Stem("nardini"), "nardin");});
test("narmak -> narmak", function() {deepEqual( Stem("narmak"), "narmak");});
test("narora -> naror", function() {deepEqual( Stem("narora"), "naror");});
test("narra -> narr", function() {deepEqual( Stem("narra"), "narr");});
test("narratione -> narration", function() {deepEqual( Stem("narratione"), "narration");});
test("narratore -> narrator", function() {deepEqual( Stem("narratore"), "narrator");});
test("narrazione -> narrazion", function() {deepEqual( Stem("narrazione"), "narrazion");});
test("nasce -> nasc", function() {deepEqual( Stem("nasce"), "nasc");});
test("nascente -> nascent", function() {deepEqual( Stem("nascente"), "nascent");});
test("nascer -> nascer", function() {deepEqual( Stem("nascer"), "nascer");});
test("nascerà -> nasc", function() {deepEqual( Stem("nascerà"), "nasc");});
test("nascere -> nasc", function() {deepEqual( Stem("nascere"), "nasc");});
test("nascerebbe -> nasc", function() {deepEqual( Stem("nascerebbe"), "nasc");});
test("nascesse -> nascess", function() {deepEqual( Stem("nascesse"), "nascess");});
test("nasceste -> nascest", function() {deepEqual( Stem("nasceste"), "nascest");});
test("nasceva -> nasc", function() {deepEqual( Stem("nasceva"), "nasc");});
test("nascevan -> nascevan", function() {deepEqual( Stem("nascevan"), "nascevan");});
test("nascita -> nasc", function() {deepEqual( Stem("nascita"), "nasc");});
test("nascite -> nasc", function() {deepEqual( Stem("nascite"), "nasc");});
test("nasconde -> nascond", function() {deepEqual( Stem("nasconde"), "nascond");});
test("nascondendo -> nascond", function() {deepEqual( Stem("nascondendo"), "nascond");});
test("nasconder -> nasconder", function() {deepEqual( Stem("nasconder"), "nasconder");});
test("nasconderci -> nascond", function() {deepEqual( Stem("nasconderci"), "nascond");});
test("nascondere -> nascond", function() {deepEqual( Stem("nascondere"), "nascond");});
test("nasconderla -> nascond", function() {deepEqual( Stem("nasconderla"), "nascond");});
test("nasconderlo -> nascond", function() {deepEqual( Stem("nasconderlo"), "nascond");});
test("nascondersi -> nascond", function() {deepEqual( Stem("nascondersi"), "nascond");});
test("nascondeva -> nascond", function() {deepEqual( Stem("nascondeva"), "nascond");});
test("nascondevano -> nascond", function() {deepEqual( Stem("nascondevano"), "nascond");});
test("nascondevo -> nascond", function() {deepEqual( Stem("nascondevo"), "nascond");});
test("nascondigli -> nascondigl", function() {deepEqual( Stem("nascondigli"), "nascondigl");});
test("nascondiglio -> nascondigl", function() {deepEqual( Stem("nascondiglio"), "nascondigl");});
test("nascondimento -> nascond", function() {deepEqual( Stem("nascondimento"), "nascond");});
test("nascondono -> nascond", function() {deepEqual( Stem("nascondono"), "nascond");});
test("nascono -> nasc", function() {deepEqual( Stem("nascono"), "nasc");});
test("nascose -> nascos", function() {deepEqual( Stem("nascose"), "nascos");});
test("nascosero -> nascoser", function() {deepEqual( Stem("nascosero"), "nascoser");});
test("nascosta -> nascost", function() {deepEqual( Stem("nascosta"), "nascost");});
test("nascostamente -> nascost", function() {deepEqual( Stem("nascostamente"), "nascost");});
test("nascoste -> nascost", function() {deepEqual( Stem("nascoste"), "nascost");});
test("nascosti -> nascost", function() {deepEqual( Stem("nascosti"), "nascost");});
test("nascosto -> nascost", function() {deepEqual( Stem("nascosto"), "nascost");});
test("naso -> nas", function() {deepEqual( Stem("naso"), "nas");});
test("nasrin -> nasrin", function() {deepEqual( Stem("nasrin"), "nasrin");});
test("nassau -> nassau", function() {deepEqual( Stem("nassau"), "nassau");});
test("nastri -> nastr", function() {deepEqual( Stem("nastri"), "nastr");});
test("nastro -> nastr", function() {deepEqual( Stem("nastro"), "nastr");});
test("nata -> nat", function() {deepEqual( Stem("nata"), "nat");});
test("natale -> natal", function() {deepEqual( Stem("natale"), "natal");});
test("natali -> natal", function() {deepEqual( Stem("natali"), "natal");});
test("natalizie -> nataliz", function() {deepEqual( Stem("natalizie"), "nataliz");});
test("natanti -> natant", function() {deepEqual( Stem("natanti"), "natant");});
test("nate -> nat", function() {deepEqual( Stem("nate"), "nat");});
test("nathalie -> nathal", function() {deepEqual( Stem("nathalie"), "nathal");});
test("nathan -> nathan", function() {deepEqual( Stem("nathan"), "nathan");});
test("nathion -> nathion", function() {deepEqual( Stem("nathion"), "nathion");});
test("nati -> nat", function() {deepEqual( Stem("nati"), "nat");});
test("natìa -> natì", function() {deepEqual( Stem("natìa"), "natì");});
test("national -> national", function() {deepEqual( Stem("national"), "national");});
test("nativa -> nat", function() {deepEqual( Stem("nativa"), "nat");});
test("nativi -> nat", function() {deepEqual( Stem("nativi"), "nat");});
test("nativo -> nat", function() {deepEqual( Stem("nativo"), "nat");});
test("nato -> nat", function() {deepEqual( Stem("nato"), "nat");});
test("natura -> natur", function() {deepEqual( Stem("natura"), "natur");});
test("natural -> natural", function() {deepEqual( Stem("natural"), "natural");});
test("naturale -> natural", function() {deepEqual( Stem("naturale"), "natural");});
test("naturali -> natural", function() {deepEqual( Stem("naturali"), "natural");});
test("naturalisti -> natural", function() {deepEqual( Stem("naturalisti"), "natural");});
test("naturalizzato -> naturalizz", function() {deepEqual( Stem("naturalizzato"), "naturalizz");});
test("naturalmente -> natural", function() {deepEqual( Stem("naturalmente"), "natural");});
test("naufraga -> naufrag", function() {deepEqual( Stem("naufraga"), "naufrag");});
test("naufragata -> naufrag", function() {deepEqual( Stem("naufragata"), "naufrag");});
test("naufragati -> naufrag", function() {deepEqual( Stem("naufragati"), "naufrag");});
test("naufragio -> naufrag", function() {deepEqual( Stem("naufragio"), "naufrag");});
test("naufrago -> naufrag", function() {deepEqual( Stem("naufrago"), "naufrag");});
test("naursk -> naursk", function() {deepEqual( Stem("naursk"), "naursk");});
test("nautica -> nautic", function() {deepEqual( Stem("nautica"), "nautic");});
test("nautiche -> nautic", function() {deepEqual( Stem("nautiche"), "nautic");});
test("nautico -> nautic", function() {deepEqual( Stem("nautico"), "nautic");});
test("nav -> nav", function() {deepEqual( Stem("nav"), "nav");});
test("nava -> nav", function() {deepEqual( Stem("nava"), "nav");});
test("navale -> naval", function() {deepEqual( Stem("navale"), "naval");});
test("navali -> naval", function() {deepEqual( Stem("navali"), "naval");});
test("navarra -> navarr", function() {deepEqual( Stem("navarra"), "navarr");});
test("navarrini -> navarrin", function() {deepEqual( Stem("navarrini"), "navarrin");});
test("navarro -> navarr", function() {deepEqual( Stem("navarro"), "navarr");});
test("nave -> nav", function() {deepEqual( Stem("nave"), "nav");});
test("navetta -> navett", function() {deepEqual( Stem("navetta"), "navett");});
test("navette -> navett", function() {deepEqual( Stem("navette"), "navett");});
test("navi -> nav", function() {deepEqual( Stem("navi"), "nav");});
test("navigante -> navig", function() {deepEqual( Stem("navigante"), "navig");});
test("navigare -> navig", function() {deepEqual( Stem("navigare"), "navig");});
test("navigatore -> navig", function() {deepEqual( Stem("navigatore"), "navig");});
test("navigazione -> navig", function() {deepEqual( Stem("navigazione"), "navig");});
test("navigli -> navigl", function() {deepEqual( Stem("navigli"), "navigl");});
test("naviglio -> navigl", function() {deepEqual( Stem("naviglio"), "navigl");});
test("naz -> naz", function() {deepEqual( Stem("naz"), "naz");});
test("nazareno -> nazaren", function() {deepEqual( Stem("nazareno"), "nazaren");});
test("nazifasciste -> nazifasc", function() {deepEqual( Stem("nazifasciste"), "nazifasc");});
test("nazional -> nazional", function() {deepEqual( Stem("nazional"), "nazional");});
test("nazionaldemocratico -> nazionaldemocrat", function() {deepEqual( Stem("nazionaldemocratico"), "nazionaldemocrat");});
test("nazionale -> nazional", function() {deepEqual( Stem("nazionale"), "nazional");});
test("nazionali -> nazional", function() {deepEqual( Stem("nazionali"), "nazional");});
test("nazionalisti -> nazional", function() {deepEqual( Stem("nazionalisti"), "nazional");});
test("nazionalità -> nazional", function() {deepEqual( Stem("nazionalità"), "nazional");});
test("nazionalizzato -> nazionalizz", function() {deepEqual( Stem("nazionalizzato"), "nazionalizz");});
test("nazione -> nazion", function() {deepEqual( Stem("nazione"), "nazion");});
test("nazioni -> nazion", function() {deepEqual( Stem("nazioni"), "nazion");});
test("nazismo -> nazism", function() {deepEqual( Stem("nazismo"), "nazism");});
test("nazista -> nazist", function() {deepEqual( Stem("nazista"), "nazist");});
test("naziste -> nazist", function() {deepEqual( Stem("naziste"), "nazist");});
test("nazisti -> nazist", function() {deepEqual( Stem("nazisti"), "nazist");});
test("nazistoidi -> nazistoid", function() {deepEqual( Stem("nazistoidi"), "nazistoid");});
test("nazzari -> nazzar", function() {deepEqual( Stem("nazzari"), "nazzar");});
test("nba -> nba", function() {deepEqual( Stem("nba"), "nba");});
test("nbaction -> nbaction", function() {deepEqual( Stem("nbaction"), "nbaction");});
test("nc -> nc", function() {deepEqual( Stem("nc"), "nc");});
test("ndr -> ndr", function() {deepEqual( Stem("ndr"), "ndr");});
test("ne -> ne", function() {deepEqual( Stem("ne"), "ne");});
test("né -> nè", function() {deepEqual( Stem("né"), "nè");});
test("nè -> nè", function() {deepEqual( Stem("nè"), "nè");});
test("neanche -> neanc", function() {deepEqual( Stem("neanche"), "neanc");});
test("neazelandese -> neazelandes", function() {deepEqual( Stem("neazelandese"), "neazelandes");});
test("nebbia -> nebb", function() {deepEqual( Stem("nebbia"), "nebb");});
test("nebbie -> nebb", function() {deepEqual( Stem("nebbie"), "nebb");});
test("nebbione -> nebbion", function() {deepEqual( Stem("nebbione"), "nebbion");});
test("nec -> nec", function() {deepEqual( Stem("nec"), "nec");});
test("necchi -> necc", function() {deepEqual( Stem("necchi"), "necc");});
test("necesidades -> necesidades", function() {deepEqual( Stem("necesidades"), "necesidades");});
test("necessari -> necessar", function() {deepEqual( Stem("necessari"), "necessar");});
test("necessaria -> necessar", function() {deepEqual( Stem("necessaria"), "necessar");});
test("necessariamente -> necessar", function() {deepEqual( Stem("necessariamente"), "necessar");});
test("necessarie -> necessar", function() {deepEqual( Stem("necessarie"), "necessar");});
test("necessario -> necessar", function() {deepEqual( Stem("necessario"), "necessar");});
test("necesserario -> necesserar", function() {deepEqual( Stem("necesserario"), "necesserar");});
test("necessita -> necess", function() {deepEqual( Stem("necessita"), "necess");});
test("necessità -> necess", function() {deepEqual( Stem("necessità"), "necess");});
test("necroforo -> necrofor", function() {deepEqual( Stem("necroforo"), "necrofor");});
test("necwessari -> necwessar", function() {deepEqual( Stem("necwessari"), "necwessar");});
test("ned -> ned", function() {deepEqual( Stem("ned"), "ned");});
test("nedo -> ned", function() {deepEqual( Stem("nedo"), "ned");});
test("nèforse -> nèfors", function() {deepEqual( Stem("nèforse"), "nèfors");});
test("nega -> neg", function() {deepEqual( Stem("nega"), "neg");});
test("negando -> neg", function() {deepEqual( Stem("negando"), "neg");});
test("negano -> neg", function() {deepEqual( Stem("negano"), "neg");});
test("negar -> neg", function() {deepEqual( Stem("negar"), "neg");});
test("negare -> neg", function() {deepEqual( Stem("negare"), "neg");});
test("negarla -> neg", function() {deepEqual( Stem("negarla"), "neg");});
test("negarlo -> neg", function() {deepEqual( Stem("negarlo"), "neg");});
test("negasse -> neg", function() {deepEqual( Stem("negasse"), "neg");});
test("negata -> neg", function() {deepEqual( Stem("negata"), "neg");});
test("negativa -> negat", function() {deepEqual( Stem("negativa"), "negat");});
test("negativamente -> negat", function() {deepEqual( Stem("negativamente"), "negat");});
test("negative -> negat", function() {deepEqual( Stem("negative"), "negat");});
test("negativi -> negat", function() {deepEqual( Stem("negativi"), "negat");});
test("negativo -> negat", function() {deepEqual( Stem("negativo"), "negat");});
test("negato -> neg", function() {deepEqual( Stem("negato"), "neg");});
test("negavano -> neg", function() {deepEqual( Stem("negavano"), "neg");});
test("negheranno -> negh", function() {deepEqual( Stem("negheranno"), "negh");});
test("neghino -> neghin", function() {deepEqual( Stem("neghino"), "neghin");});
test("negl -> negl", function() {deepEqual( Stem("negl"), "negl");});
test("negletta -> neglett", function() {deepEqual( Stem("negletta"), "neglett");});
test("negletto -> neglett", function() {deepEqual( Stem("negletto"), "neglett");});
test("negli -> negl", function() {deepEqual( Stem("negli"), "negl");});
test("negligenza -> negligent", function() {deepEqual( Stem("negligenza"), "negligent");});
test("negozi -> negoz", function() {deepEqual( Stem("negozi"), "negoz");});
test("negozia -> negoz", function() {deepEqual( Stem("negozia"), "negoz");});
test("negoziare -> negoz", function() {deepEqual( Stem("negoziare"), "negoz");});
test("negoziata -> negoz", function() {deepEqual( Stem("negoziata"), "negoz");});
test("negoziati -> negoz", function() {deepEqual( Stem("negoziati"), "negoz");});
test("negoziato -> negoz", function() {deepEqual( Stem("negoziato"), "negoz");});
test("negoziatore -> negoz", function() {deepEqual( Stem("negoziatore"), "negoz");});
test("negoziazione -> negoz", function() {deepEqual( Stem("negoziazione"), "negoz");});
test("negozio -> negoz", function() {deepEqual( Stem("negozio"), "negoz");});
test("negri -> negr", function() {deepEqual( Stem("negri"), "negr");});
test("negrì -> negr", function() {deepEqual( Stem("negrì"), "negr");});
test("negritos -> negritos", function() {deepEqual( Stem("negritos"), "negritos");});
test("negro -> negr", function() {deepEqual( Stem("negro"), "negr");});
test("nei -> nei", function() {deepEqual( Stem("nei"), "nei");});
test("neil -> neil", function() {deepEqual( Stem("neil"), "neil");});
test("nel -> nel", function() {deepEqual( Stem("nel"), "nel");});
test("nell -> nell", function() {deepEqual( Stem("nell"), "nell");});
test("nella -> nell", function() {deepEqual( Stem("nella"), "nell");});
test("nelle -> nell", function() {deepEqual( Stem("nelle"), "nell");});
test("nelli -> nell", function() {deepEqual( Stem("nelli"), "nell");});
test("nello -> nell", function() {deepEqual( Stem("nello"), "nell");});
test("nelson -> nelson", function() {deepEqual( Stem("nelson"), "nelson");});
test("nematullah -> nematullah", function() {deepEqual( Stem("nematullah"), "nematullah");});
test("nemetria -> nemetr", function() {deepEqual( Stem("nemetria"), "nemetr");});
test("nemica -> nemic", function() {deepEqual( Stem("nemica"), "nemic");});
test("nemiche -> nemic", function() {deepEqual( Stem("nemiche"), "nemic");});
test("nemici -> nemic", function() {deepEqual( Stem("nemici"), "nemic");});
test("nemicì -> nemic", function() {deepEqual( Stem("nemicì"), "nemic");});
test("nemico -> nemic", function() {deepEqual( Stem("nemico"), "nemic");});
test("nemicò -> nemic", function() {deepEqual( Stem("nemicò"), "nemic");});
test("nemmen -> nemmen", function() {deepEqual( Stem("nemmen"), "nemmen");});
test("nemmeno -> nemmen", function() {deepEqual( Stem("nemmeno"), "nemmen");});
test("neo -> neo", function() {deepEqual( Stem("neo"), "neo");});
test("neoborboni -> neoborbon", function() {deepEqual( Stem("neoborboni"), "neoborbon");});
test("neoborbonici -> neoborbon", function() {deepEqual( Stem("neoborbonici"), "neoborbon");});
test("neoborbonico -> neoborbon", function() {deepEqual( Stem("neoborbonico"), "neoborbon");});
test("neofascista -> neofasc", function() {deepEqual( Stem("neofascista"), "neofasc");});
test("neofita -> neof", function() {deepEqual( Stem("neofita"), "neof");});
test("neogollisti -> neogoll", function() {deepEqual( Stem("neogollisti"), "neogoll");});
test("neomin -> neomin", function() {deepEqual( Stem("neomin"), "neomin");});
test("neonata -> neon", function() {deepEqual( Stem("neonata"), "neon");});
test("neonati -> neon", function() {deepEqual( Stem("neonati"), "neon");});
test("neonazista -> neonaz", function() {deepEqual( Stem("neonazista"), "neonaz");});
test("neonazisti -> neonaz", function() {deepEqual( Stem("neonazisti"), "neonaz");});
test("neoprotestante -> neoprotest", function() {deepEqual( Stem("neoprotestante"), "neoprotest");});
test("neoprotestantesimo -> neoprotestantesim", function() {deepEqual( Stem("neoprotestantesimo"), "neoprotestantesim");});
test("neppur -> neppur", function() {deepEqual( Stem("neppur"), "neppur");});
test("neppure -> neppur", function() {deepEqual( Stem("neppure"), "neppur");});
test("ner -> ner", function() {deepEqual( Stem("ner"), "ner");});
test("nera -> ner", function() {deepEqual( Stem("nera"), "ner");});
test("nerazzurra -> nerazzurr", function() {deepEqual( Stem("nerazzurra"), "nerazzurr");});
test("nerazzurri -> nerazzurr", function() {deepEqual( Stem("nerazzurri"), "nerazzurr");});
test("nerazzurro -> nerazzurr", function() {deepEqual( Stem("nerazzurro"), "nerazzurr");});
test("nerborute -> nerbor", function() {deepEqual( Stem("nerborute"), "nerbor");});
test("nerboruto -> nerbor", function() {deepEqual( Stem("nerboruto"), "nerbor");});
test("nere -> ner", function() {deepEqual( Stem("nere"), "ner");});
test("neri -> ner", function() {deepEqual( Stem("neri"), "ner");});
test("nero -> ner", function() {deepEqual( Stem("nero"), "ner");});
test("nervi -> nerv", function() {deepEqual( Stem("nervi"), "nerv");});
test("nervosismo -> nervos", function() {deepEqual( Stem("nervosismo"), "nervos");});
test("nervoso -> nervos", function() {deepEqual( Stem("nervoso"), "nervos");});
test("nessun -> nessun", function() {deepEqual( Stem("nessun"), "nessun");});
test("nessuna -> nessun", function() {deepEqual( Stem("nessuna"), "nessun");});
test("nessuno -> nessun", function() {deepEqual( Stem("nessuno"), "nessun");});
test("nessunò -> nessun", function() {deepEqual( Stem("nessunò"), "nessun");});
test("netta -> nett", function() {deepEqual( Stem("netta"), "nett");});
test("nettamente -> nett", function() {deepEqual( Stem("nettamente"), "nett");});
test("nettaq -> nettaq", function() {deepEqual( Stem("nettaq"), "nettaq");});
test("nette -> nett", function() {deepEqual( Stem("nette"), "nett");});
test("netti -> nett", function() {deepEqual( Stem("netti"), "nett");});
test("netto -> nett", function() {deepEqual( Stem("netto"), "nett");});
test("network -> network", function() {deepEqual( Stem("network"), "network");});
test("netzraim -> netzraim", function() {deepEqual( Stem("netzraim"), "netzraim");});
test("neue -> neu", function() {deepEqual( Stem("neue"), "neu");});
test("neutrale -> neutral", function() {deepEqual( Stem("neutrale"), "neutral");});
test("neutralità -> neutral", function() {deepEqual( Stem("neutralità"), "neutral");});
test("neutralizzando -> neutralizz", function() {deepEqual( Stem("neutralizzando"), "neutralizz");});
test("neutrone -> neutron", function() {deepEqual( Stem("neutrone"), "neutron");});
test("nev -> nev", function() {deepEqual( Stem("nev"), "nev");});
test("neve -> nev", function() {deepEqual( Stem("neve"), "nev");});
test("nevers -> nevers", function() {deepEqual( Stem("nevers"), "nevers");});
test("nevralgica -> nevralg", function() {deepEqual( Stem("nevralgica"), "nevralg");});
test("new -> new", function() {deepEqual( Stem("new"), "new");});
test("news -> news", function() {deepEqual( Stem("news"), "news");});
test("newsletter -> newsletter", function() {deepEqual( Stem("newsletter"), "newsletter");});
test("newton -> newton", function() {deepEqual( Stem("newton"), "newton");});
test("next -> next", function() {deepEqual( Stem("next"), "next");});
test("nf -> nf", function() {deepEqual( Stem("nf"), "nf");});
test("ngc -> ngc", function() {deepEqual( Stem("ngc"), "ngc");});
test("ngrato -> ngrat", function() {deepEqual( Stem("ngrato"), "ngrat");});
test("nibbio -> nibb", function() {deepEqual( Stem("nibbio"), "nibb");});
test("nic -> nic", function() {deepEqual( Stem("nic"), "nic");});
test("nicaragua -> nicaragu", function() {deepEqual( Stem("nicaragua"), "nicaragu");});
test("nicchia -> nicc", function() {deepEqual( Stem("nicchia"), "nicc");});
test("nice -> nic", function() {deepEqual( Stem("nice"), "nic");});
test("nicholas -> nicholas", function() {deepEqual( Stem("nicholas"), "nicholas");});
test("nick -> nick", function() {deepEqual( Stem("nick"), "nick");});
test("nicky -> nicky", function() {deepEqual( Stem("nicky"), "nicky");});
test("nicola -> nicol", function() {deepEqual( Stem("nicola"), "nicol");});
test("nicolay -> nicolay", function() {deepEqual( Stem("nicolay"), "nicolay");});
test("nicole -> nicol", function() {deepEqual( Stem("nicole"), "nicol");});
test("nicosia -> nicos", function() {deepEqual( Stem("nicosia"), "nicos");});
test("nidiata -> nid", function() {deepEqual( Stem("nidiata"), "nid");});
test("nido -> nid", function() {deepEqual( Stem("nido"), "nid");});
test("nieman -> nieman", function() {deepEqual( Stem("nieman"), "nieman");});
test("niemann -> niemann", function() {deepEqual( Stem("niemann"), "niemann");});
test("niemczak -> niemczak", function() {deepEqual( Stem("niemczak"), "niemczak");});
test("nient -> nient", function() {deepEqual( Stem("nient"), "nient");});
test("niente -> nient", function() {deepEqual( Stem("niente"), "nient");});
test("nientemeno -> nientemen", function() {deepEqual( Stem("nientemeno"), "nientemen");});
test("niger -> niger", function() {deepEqual( Stem("niger"), "niger");});
test("nigeria -> niger", function() {deepEqual( Stem("nigeria"), "niger");});
test("night -> night", function() {deepEqual( Stem("night"), "night");});
test("nigricanti -> nigric", function() {deepEqual( Stem("nigricanti"), "nigric");});
test("niguarda -> niguard", function() {deepEqual( Stem("niguarda"), "niguard");});
test("nikita -> nik", function() {deepEqual( Stem("nikita"), "nik");});
test("nikkei -> nikke", function() {deepEqual( Stem("nikkei"), "nikke");});
test("nikolaievic -> nikolaievic", function() {deepEqual( Stem("nikolaievic"), "nikolaievic");});
test("nimis -> nimis", function() {deepEqual( Stem("nimis"), "nimis");});
test("nina -> nin", function() {deepEqual( Stem("nina"), "nin");});
test("ninistro -> ninistr", function() {deepEqual( Stem("ninistro"), "ninistr");});
test("ninnandolo -> ninn", function() {deepEqual( Stem("ninnandolo"), "ninn");});
test("nino -> nin", function() {deepEqual( Stem("nino"), "nin");});
test("nipar -> nip", function() {deepEqual( Stem("nipar"), "nip");});
test("nipote -> nipot", function() {deepEqual( Stem("nipote"), "nipot");});
test("nipoti -> nipot", function() {deepEqual( Stem("nipoti"), "nipot");});
test("nipotino -> nipotin", function() {deepEqual( Stem("nipotino"), "nipotin");});
test("nippo -> nipp", function() {deepEqual( Stem("nippo"), "nipp");});
test("nippon -> nippon", function() {deepEqual( Stem("nippon"), "nippon");});
test("niro -> nir", function() {deepEqual( Stem("niro"), "nir");});
test("niven -> niven", function() {deepEqual( Stem("niven"), "niven");});
test("nivers -> nivers", function() {deepEqual( Stem("nivers"), "nivers");});
test("nizza -> nizz", function() {deepEqual( Stem("nizza"), "nizz");});
test("nizzazione -> nizzazion", function() {deepEqual( Stem("nizzazione"), "nizzazion");});
test("nizzola -> nizzol", function() {deepEqual( Stem("nizzola"), "nizzol");});
test("nnnn -> nnnn", function() {deepEqual( Stem("nnnn"), "nnnn");});
test("no -> no", function() {deepEqual( Stem("no"), "no");});
test("nò -> nò", function() {deepEqual( Stem("nò"), "nò");});
test("nobel -> nobel", function() {deepEqual( Stem("nobel"), "nobel");});
test("noberto -> nobert", function() {deepEqual( Stem("noberto"), "nobert");});
test("nobil -> nobil", function() {deepEqual( Stem("nobil"), "nobil");});
test("nobile -> nobil", function() {deepEqual( Stem("nobile"), "nobil");});
test("nobilè -> nobil", function() {deepEqual( Stem("nobilè"), "nobil");});
test("nobili -> nobil", function() {deepEqual( Stem("nobili"), "nobil");});
test("nobilissimo -> nobilissim", function() {deepEqual( Stem("nobilissimo"), "nobilissim");});
test("nobilmente -> nobil", function() {deepEqual( Stem("nobilmente"), "nobil");});
test("nobiltà -> nobilt", function() {deepEqual( Stem("nobiltà"), "nobilt");});
test("nocca -> nocc", function() {deepEqual( Stem("nocca"), "nocc");});
test("nocchiuto -> nocc", function() {deepEqual( Stem("nocchiuto"), "nocc");});
test("noccioli -> nocciol", function() {deepEqual( Stem("noccioli"), "nocciol");});
test("noce -> noc", function() {deepEqual( Stem("noce"), "noc");});
test("nocerina -> nocerin", function() {deepEqual( Stem("nocerina"), "nocerin");});
test("noceto -> nocet", function() {deepEqual( Stem("noceto"), "nocet");});
test("noci -> noc", function() {deepEqual( Stem("noci"), "noc");});
test("nocive -> nociv", function() {deepEqual( Stem("nocive"), "nociv");});
test("noderoso -> noder", function() {deepEqual( Stem("noderoso"), "noder");});
test("nodi -> nod", function() {deepEqual( Stem("nodi"), "nod");});
test("nodo -> nod", function() {deepEqual( Stem("nodo"), "nod");});
test("noè -> noè", function() {deepEqual( Stem("noè"), "noè");});
test("noel -> noel", function() {deepEqual( Stem("noel"), "noel");});
test("noi -> noi", function() {deepEqual( Stem("noi"), "noi");});
test("noì -> noì", function() {deepEqual( Stem("noì"), "noì");});
test("noia -> noi", function() {deepEqual( Stem("noia"), "noi");});
test("noie -> noi", function() {deepEqual( Stem("noie"), "noi");});
test("noiosa -> noios", function() {deepEqual( Stem("noiosa"), "noios");});
test("noiose -> noios", function() {deepEqual( Stem("noiose"), "noios");});
test("noiosi -> noios", function() {deepEqual( Stem("noiosi"), "noios");});
test("noioso -> noios", function() {deepEqual( Stem("noioso"), "noios");});
test("noir -> noir", function() {deepEqual( Stem("noir"), "noir");});
test("nokia -> nok", function() {deepEqual( Stem("nokia"), "nok");});
test("nola -> nol", function() {deepEqual( Stem("nola"), "nol");});
test("noleggia -> nolegg", function() {deepEqual( Stem("noleggia"), "nolegg");});
test("noleggiato -> nolegg", function() {deepEqual( Stem("noleggiato"), "nolegg");});
test("nomaccio -> nomacc", function() {deepEqual( Stem("nomaccio"), "nomacc");});
test("nome -> nom", function() {deepEqual( Stem("nome"), "nom");});
test("nomè -> nom", function() {deepEqual( Stem("nomè"), "nom");});
test("nomenclatura -> nomenclatur", function() {deepEqual( Stem("nomenclatura"), "nomenclatur");});
test("nomi -> nom", function() {deepEqual( Stem("nomi"), "nom");});
test("nomina -> nomin", function() {deepEqual( Stem("nomina"), "nomin");});
test("nominale -> nominal", function() {deepEqual( Stem("nominale"), "nominal");});
test("nominar -> nomin", function() {deepEqual( Stem("nominar"), "nomin");});
test("nominare -> nomin", function() {deepEqual( Stem("nominare"), "nomin");});
test("nominarla -> nomin", function() {deepEqual( Stem("nominarla"), "nomin");});
test("nominarlo -> nomin", function() {deepEqual( Stem("nominarlo"), "nomin");});
test("nominarmi -> nomin", function() {deepEqual( Stem("nominarmi"), "nomin");});
test("nominata -> nomin", function() {deepEqual( Stem("nominata"), "nomin");});
test("nominate -> nomin", function() {deepEqual( Stem("nominate"), "nomin");});
test("nominati -> nomin", function() {deepEqual( Stem("nominati"), "nomin");});
test("nominato -> nomin", function() {deepEqual( Stem("nominato"), "nomin");});
test("nominava -> nomin", function() {deepEqual( Stem("nominava"), "nomin");});
test("nomine -> nomin", function() {deepEqual( Stem("nomine"), "nomin");});
test("nomini -> nomin", function() {deepEqual( Stem("nomini"), "nomin");});
test("nominiamo -> nomin", function() {deepEqual( Stem("nominiamo"), "nomin");});
test("nominitive -> nominit", function() {deepEqual( Stem("nominitive"), "nominit");});
test("nomino -> nomin", function() {deepEqual( Stem("nomino"), "nomin");});
test("nominò -> nomin", function() {deepEqual( Stem("nominò"), "nomin");});
test("nomisma -> nomism", function() {deepEqual( Stem("nomisma"), "nomism");});
test("non -> non", function() {deepEqual( Stem("non"), "non");});
test("nonchè -> nonc", function() {deepEqual( Stem("nonchè"), "nonc");});
test("noncurante -> noncur", function() {deepEqual( Stem("noncurante"), "noncur");});
test("noncuranza -> noncur", function() {deepEqual( Stem("noncuranza"), "noncur");});
test("nondimeno -> nondimen", function() {deepEqual( Stem("nondimeno"), "nondimen");});
test("nones -> nones", function() {deepEqual( Stem("nones"), "nones");});
test("nonfa -> nonf", function() {deepEqual( Stem("nonfa"), "nonf");});
test("noni -> non", function() {deepEqual( Stem("noni"), "non");});
test("nonna -> nonn", function() {deepEqual( Stem("nonna"), "nonn");});
test("nonni -> nonn", function() {deepEqual( Stem("nonni"), "nonn");});
test("nonno -> nonn", function() {deepEqual( Stem("nonno"), "nonn");});
test("nonosolomoda -> nonosolomod", function() {deepEqual( Stem("nonosolomoda"), "nonosolomod");});
test("nonostante -> nonost", function() {deepEqual( Stem("nonostante"), "nonost");});
test("nonsolomoda -> nonsolomod", function() {deepEqual( Stem("nonsolomoda"), "nonsolomod");});
test("norberto -> norbert", function() {deepEqual( Stem("norberto"), "norbert");});
test("nord -> nord", function() {deepEqual( Stem("nord"), "nord");});
test("nordafricanò -> nordafrican", function() {deepEqual( Stem("nordafricanò"), "nordafrican");});
test("nordamerica -> nordamer", function() {deepEqual( Stem("nordamerica"), "nordamer");});
test("nordcapital -> nordcapital", function() {deepEqual( Stem("nordcapital"), "nordcapital");});
test("nordfondo -> nordfond", function() {deepEqual( Stem("nordfondo"), "nordfond");});
test("nordica -> nordic", function() {deepEqual( Stem("nordica"), "nordic");});
test("nordio -> nord", function() {deepEqual( Stem("nordio"), "nord");});
test("nordiste -> nordist", function() {deepEqual( Stem("nordiste"), "nordist");});
test("norditalia -> nordital", function() {deepEqual( Stem("norditalia"), "nordital");});
test("nordmix -> nordmix", function() {deepEqual( Stem("nordmix"), "nordmix");});
test("norge -> norg", function() {deepEqual( Stem("norge"), "norg");});
test("norma -> norm", function() {deepEqual( Stem("norma"), "norm");});
test("normale -> normal", function() {deepEqual( Stem("normale"), "normal");});
test("normali -> normal", function() {deepEqual( Stem("normali"), "normal");});
test("normalità -> normal", function() {deepEqual( Stem("normalità"), "normal");});
test("normalizzazione -> normalizz", function() {deepEqual( Stem("normalizzazione"), "normalizz");});
test("normalmente -> normal", function() {deepEqual( Stem("normalmente"), "normal");});
test("normativa -> normat", function() {deepEqual( Stem("normativa"), "normat");});
test("normative -> normat", function() {deepEqual( Stem("normative"), "normat");});
test("norme -> norm", function() {deepEqual( Stem("norme"), "norm");});
test("norsk -> norsk", function() {deepEqual( Stem("norsk"), "norsk");});
test("north -> north", function() {deepEqual( Stem("north"), "north");});
test("norvegese -> norveges", function() {deepEqual( Stem("norvegese"), "norveges");});
test("norvegesi -> norveges", function() {deepEqual( Stem("norvegesi"), "norveges");});
test("norvegia -> norveg", function() {deepEqual( Stem("norvegia"), "norveg");});
test("nos -> nos", function() {deepEqual( Stem("nos"), "nos");});
test("noseda -> nosed", function() {deepEqual( Stem("noseda"), "nosed");});
test("nostir -> nost", function() {deepEqual( Stem("nostir"), "nost");});
test("nostra -> nostr", function() {deepEqual( Stem("nostra"), "nostr");});
test("nostre -> nostr", function() {deepEqual( Stem("nostre"), "nostr");});
test("nostri -> nostr", function() {deepEqual( Stem("nostri"), "nostr");});
test("nostro -> nostr", function() {deepEqual( Stem("nostro"), "nostr");});
test("nota -> not", function() {deepEqual( Stem("nota"), "not");});
test("notabile -> notabil", function() {deepEqual( Stem("notabile"), "notabil");});
test("notabili -> notabil", function() {deepEqual( Stem("notabili"), "notabil");});
test("notabilmente -> notabil", function() {deepEqual( Stem("notabilmente"), "notabil");});
test("notaio -> notai", function() {deepEqual( Stem("notaio"), "notai");});
test("notando -> not", function() {deepEqual( Stem("notando"), "not");});
test("notano -> not", function() {deepEqual( Stem("notano"), "not");});
test("notar -> not", function() {deepEqual( Stem("notar"), "not");});
test("notare -> not", function() {deepEqual( Stem("notare"), "not");});
test("notari -> notar", function() {deepEqual( Stem("notari"), "notar");});
test("notarile -> notaril", function() {deepEqual( Stem("notarile"), "notaril");});
test("notaristefano -> notaristef", function() {deepEqual( Stem("notaristefano"), "notaristef");});
test("notarne -> not", function() {deepEqual( Stem("notarne"), "not");});
test("notaro -> notar", function() {deepEqual( Stem("notaro"), "notar");});
test("notate -> not", function() {deepEqual( Stem("notate"), "not");});
test("notati -> not", function() {deepEqual( Stem("notati"), "not");});
test("notato -> not", function() {deepEqual( Stem("notato"), "not");});
test("notava -> not", function() {deepEqual( Stem("notava"), "not");});
test("notavan -> notavan", function() {deepEqual( Stem("notavan"), "notavan");});
test("notazioni -> notazion", function() {deepEqual( Stem("notazioni"), "notazion");});
test("note -> not", function() {deepEqual( Stem("note"), "not");});
test("notevole -> notevol", function() {deepEqual( Stem("notevole"), "notevol");});
test("notevoli -> notevol", function() {deepEqual( Stem("notevoli"), "notevol");});
test("notevolmente -> notevol", function() {deepEqual( Stem("notevolmente"), "notevol");});
test("noti -> not", function() {deepEqual( Stem("noti"), "not");});
test("noticina -> noticin", function() {deepEqual( Stem("noticina"), "noticin");});
test("notificato -> notific", function() {deepEqual( Stem("notificato"), "notific");});
test("notissimo -> notissim", function() {deepEqual( Stem("notissimo"), "notissim");});
test("notitia -> notit", function() {deepEqual( Stem("notitia"), "notit");});
test("notize -> notiz", function() {deepEqual( Stem("notize"), "notiz");});
test("notizia -> notiz", function() {deepEqual( Stem("notizia"), "notiz");});
test("notizià -> notiz", function() {deepEqual( Stem("notizià"), "notiz");});
test("notiziari -> notiziar", function() {deepEqual( Stem("notiziari"), "notiziar");});
test("notiziario -> notiziar", function() {deepEqual( Stem("notiziario"), "notiziar");});
test("notizie -> notiz", function() {deepEqual( Stem("notizie"), "notiz");});
test("noto -> not", function() {deepEqual( Stem("noto"), "not");});
test("notorietà -> notoriet", function() {deepEqual( Stem("notorietà"), "notoriet");});
test("notre -> notr", function() {deepEqual( Stem("notre"), "notr");});
test("notta -> nott", function() {deepEqual( Stem("notta"), "nott");});
test("nottata -> nott", function() {deepEqual( Stem("nottata"), "nott");});
test("notte -> nott", function() {deepEqual( Stem("notte"), "nott");});
test("notti -> nott", function() {deepEqual( Stem("notti"), "nott");});
test("nottingham -> nottingham", function() {deepEqual( Stem("nottingham"), "nottingham");});
test("notturna -> notturn", function() {deepEqual( Stem("notturna"), "notturn");});
test("notturno -> notturn", function() {deepEqual( Stem("notturno"), "notturn");});
test("nov -> nov", function() {deepEqual( Stem("nov"), "nov");});
test("novamente -> nov", function() {deepEqual( Stem("novamente"), "nov");});
test("novanta -> novant", function() {deepEqual( Stem("novanta"), "novant");});
test("novantacinque -> novantacinqu", function() {deepEqual( Stem("novantacinque"), "novantacinqu");});
test("novantanove -> novantanov", function() {deepEqual( Stem("novantanove"), "novantanov");});
test("novantasei -> novantase", function() {deepEqual( Stem("novantasei"), "novantase");});
test("novara -> novar", function() {deepEqual( Stem("novara"), "novar");});
test("novatore -> novator", function() {deepEqual( Stem("novatore"), "novator");});
test("nove -> nov", function() {deepEqual( Stem("nove"), "nov");});
test("novelle -> novell", function() {deepEqual( Stem("novelle"), "novell");});
test("novellisti -> novell", function() {deepEqual( Stem("novellisti"), "novell");});
test("novembre -> novembr", function() {deepEqual( Stem("novembre"), "novembr");});
test("novi -> nov", function() {deepEqual( Stem("novi"), "nov");});
test("noville -> novill", function() {deepEqual( Stem("noville"), "novill");});
test("novità -> novit", function() {deepEqual( Stem("novità"), "novit");});
test("novizi -> noviz", function() {deepEqual( Stem("novizi"), "noviz");});
test("noviziato -> noviz", function() {deepEqual( Stem("noviziato"), "noviz");});
test("novizio -> noviz", function() {deepEqual( Stem("novizio"), "noviz");});
test("novoie -> novoi", function() {deepEqual( Stem("novoie"), "novoi");});
test("nozhai -> nozha", function() {deepEqual( Stem("nozhai"), "nozha");});
test("nozione -> nozion", function() {deepEqual( Stem("nozione"), "nozion");});
test("nozioni -> nozion", function() {deepEqual( Stem("nozioni"), "nozion");});
test("nozze -> nozz", function() {deepEqual( Stem("nozze"), "nozz");});
test("np -> np", function() {deepEqual( Stem("np"), "np");});
test("npa -> npa", function() {deepEqual( Stem("npa"), "npa");});
test("npd -> npd", function() {deepEqual( Stem("npd"), "npd");});
test("nr -> nr", function() {deepEqual( Stem("nr"), "nr");});
test("ns -> ns", function() {deepEqual( Stem("ns"), "ns");});
test("nsentire -> nsent", function() {deepEqual( Stem("nsentire"), "nsent");});
test("nt -> nt", function() {deepEqual( Stem("nt"), "nt");});
test("ntv -> ntv", function() {deepEqual( Stem("ntv"), "ntv");});
test("nu -> nu", function() {deepEqual( Stem("nu"), "nu");});
test("nubi -> nub", function() {deepEqual( Stem("nubi"), "nub");});
test("nuca -> nuc", function() {deepEqual( Stem("nuca"), "nuc");});
test("nuciari -> nuciar", function() {deepEqual( Stem("nuciari"), "nuciar");});
test("nuclear -> nucl", function() {deepEqual( Stem("nuclear"), "nucl");});
test("nucleare -> nucl", function() {deepEqual( Stem("nucleare"), "nucl");});
test("nucleari -> nuclear", function() {deepEqual( Stem("nucleari"), "nuclear");});
test("nucleo -> nucle", function() {deepEqual( Stem("nucleo"), "nucle");});
test("nuda -> nud", function() {deepEqual( Stem("nuda"), "nud");});
test("nude -> nud", function() {deepEqual( Stem("nude"), "nud");});
test("nudi -> nud", function() {deepEqual( Stem("nudi"), "nud");});
test("nudità -> nudit", function() {deepEqual( Stem("nudità"), "nudit");});
test("nudrita -> nudr", function() {deepEqual( Stem("nudrita"), "nudr");});
test("nuestro -> nuestr", function() {deepEqual( Stem("nuestro"), "nuestr");});
test("nugolo -> nugol", function() {deepEqual( Stem("nugolo"), "nugol");});
test("nuits -> nuits", function() {deepEqual( Stem("nuits"), "nuits");});
test("null -> null", function() {deepEqual( Stem("null"), "null");});
test("nulla -> null", function() {deepEqual( Stem("nulla"), "null");});
test("nulladimeno -> nulladimen", function() {deepEqual( Stem("nulladimeno"), "nulladimen");});
test("nulle -> null", function() {deepEqual( Stem("nulle"), "null");});
test("nulli -> null", function() {deepEqual( Stem("nulli"), "null");});
test("nullità -> nullit", function() {deepEqual( Stem("nullità"), "nullit");});
test("numbatkaime -> numbatkaim", function() {deepEqual( Stem("numbatkaime"), "numbatkaim");});
test("numerazione -> numer", function() {deepEqual( Stem("numerazione"), "numer");});
test("numeri -> numer", function() {deepEqual( Stem("numeri"), "numer");});
test("numerica -> numer", function() {deepEqual( Stem("numerica"), "numer");});
test("numero -> numer", function() {deepEqual( Stem("numero"), "numer");});
test("numerosa -> numer", function() {deepEqual( Stem("numerosa"), "numer");});
test("numerose -> numer", function() {deepEqual( Stem("numerose"), "numer");});
test("numerosi -> numer", function() {deepEqual( Stem("numerosi"), "numer");});
test("numerosissimi -> numerosissim", function() {deepEqual( Stem("numerosissimi"), "numerosissim");});
test("nunzio -> nunz", function() {deepEqual( Stem("nunzio"), "nunz");});
test("nuocciano -> nuocc", function() {deepEqual( Stem("nuocciano"), "nuocc");});
test("nuocere -> nuoc", function() {deepEqual( Stem("nuocere"), "nuoc");});
test("nuora -> nuor", function() {deepEqual( Stem("nuora"), "nuor");});
test("nuore -> nuor", function() {deepEqual( Stem("nuore"), "nuor");});
test("nuoro -> nuor", function() {deepEqual( Stem("nuoro"), "nuor");});
test("nuotando -> nuot", function() {deepEqual( Stem("nuotando"), "nuot");});
test("nuoto -> nuot", function() {deepEqual( Stem("nuoto"), "nuot");});
test("nuov -> nuov", function() {deepEqual( Stem("nuov"), "nuov");});
test("nuova -> nuov", function() {deepEqual( Stem("nuova"), "nuov");});
test("nuovamente -> nuov", function() {deepEqual( Stem("nuovamente"), "nuov");});
test("nuove -> nuov", function() {deepEqual( Stem("nuove"), "nuov");});
test("nuovi -> nuov", function() {deepEqual( Stem("nuovi"), "nuov");});
test("nuovo -> nuov", function() {deepEqual( Stem("nuovo"), "nuov");});
test("nutre -> nutr", function() {deepEqual( Stem("nutre"), "nutr");});
test("nutrienti -> nutrient", function() {deepEqual( Stem("nutrienti"), "nutrient");});
test("nutrirsi -> nutr", function() {deepEqual( Stem("nutrirsi"), "nutr");});
test("nutrito -> nutr", function() {deepEqual( Stem("nutrito"), "nutr");});
test("nutrono -> nutr", function() {deepEqual( Stem("nutrono"), "nutr");});
test("nuvola -> nuvol", function() {deepEqual( Stem("nuvola"), "nuvol");});
test("nuvolaglia -> nuvolagl", function() {deepEqual( Stem("nuvolaglia"), "nuvolagl");});
test("nuvole -> nuvol", function() {deepEqual( Stem("nuvole"), "nuvol");});
test("nuvoli -> nuvol", function() {deepEqual( Stem("nuvoli"), "nuvol");});
test("nuvolo -> nuvol", function() {deepEqual( Stem("nuvolo"), "nuvol");});
test("nuvoloni -> nuvolon", function() {deepEqual( Stem("nuvoloni"), "nuvolon");});
test("nuvolosità -> nuvolos", function() {deepEqual( Stem("nuvolosità"), "nuvolos");});
test("nuvoloso -> nuvol", function() {deepEqual( Stem("nuvoloso"), "nuvol");});
test("nuziale -> nuzial", function() {deepEqual( Stem("nuziale"), "nuzial");});
test("nv -> nv", function() {deepEqual( Stem("nv"), "nv");});
test("nwl -> nwl", function() {deepEqual( Stem("nwl"), "nwl");});
test("o -> o", function() {deepEqual( Stem("o"), "o");});
test("oasi -> oas", function() {deepEqual( Stem("oasi"), "oas");});
test("oaxaca -> oaxac", function() {deepEqual( Stem("oaxaca"), "oaxac");});
test("obb -> obb", function() {deepEqual( Stem("obb"), "obb");});
test("obbedienza -> obbedient", function() {deepEqual( Stem("obbedienza"), "obbedient");});
test("obbedita -> obbed", function() {deepEqual( Stem("obbedita"), "obbed");});
test("obbiettivi -> obbiett", function() {deepEqual( Stem("obbiettivi"), "obbiett");});
test("obbiettivo -> obbiett", function() {deepEqual( Stem("obbiettivo"), "obbiett");});
test("obbl -> obbl", function() {deepEqual( Stem("obbl"), "obbl");});
test("obblig -> obblig", function() {deepEqual( Stem("obblig"), "obblig");});
test("obbliga -> obblig", function() {deepEqual( Stem("obbliga"), "obblig");});
test("obbligandosi -> obblig", function() {deepEqual( Stem("obbligandosi"), "obblig");});
test("obbligante -> obblig", function() {deepEqual( Stem("obbligante"), "obblig");});
test("obbligare -> obblig", function() {deepEqual( Stem("obbligare"), "obblig");});
test("obbligarla -> obblig", function() {deepEqual( Stem("obbligarla"), "obblig");});
test("obbligasse -> obblig", function() {deepEqual( Stem("obbligasse"), "obblig");});
test("obbligata -> obblig", function() {deepEqual( Stem("obbligata"), "obblig");});
test("obbligati -> obblig", function() {deepEqual( Stem("obbligati"), "obblig");});
test("obbligatissimo -> obbligatissim", function() {deepEqual( Stem("obbligatissimo"), "obbligatissim");});
test("obbligato -> obblig", function() {deepEqual( Stem("obbligato"), "obblig");});
test("obbligatoria -> obbligator", function() {deepEqual( Stem("obbligatoria"), "obbligator");});
test("obbligatoriamente -> obbligator", function() {deepEqual( Stem("obbligatoriamente"), "obbligator");});
test("obbligatorio -> obbligator", function() {deepEqual( Stem("obbligatorio"), "obbligator");});
test("obbligavano -> obblig", function() {deepEqual( Stem("obbligavano"), "obblig");});
test("obbligaz -> obbligaz", function() {deepEqual( Stem("obbligaz"), "obbligaz");});
test("obbligazionar -> obbligazion", function() {deepEqual( Stem("obbligazionar"), "obbligazion");});
test("obbligazionari -> obbligazionar", function() {deepEqual( Stem("obbligazionari"), "obbligazionar");});
test("obbligazionario -> obbligazionar", function() {deepEqual( Stem("obbligazionario"), "obbligazionar");});
test("obbligazione -> obblig", function() {deepEqual( Stem("obbligazione"), "obblig");});
test("obbligazioni -> obblig", function() {deepEqual( Stem("obbligazioni"), "obblig");});
test("obblighi -> obblig", function() {deepEqual( Stem("obblighi"), "obblig");});
test("obbligo -> obblig", function() {deepEqual( Stem("obbligo"), "obblig");});
test("obertwart -> obertwart", function() {deepEqual( Stem("obertwart"), "obertwart");});
test("obesi -> obes", function() {deepEqual( Stem("obesi"), "obes");});
test("obesità -> obes", function() {deepEqual( Stem("obesità"), "obes");});
test("obiettivi -> obiett", function() {deepEqual( Stem("obiettivi"), "obiett");});
test("obiettività -> obiett", function() {deepEqual( Stem("obiettività"), "obiett");});
test("obiettivo -> obiett", function() {deepEqual( Stem("obiettivo"), "obiett");});
test("obiettori -> obiettor", function() {deepEqual( Stem("obiettori"), "obiettor");});
test("obiezion -> obiezion", function() {deepEqual( Stem("obiezion"), "obiezion");});
test("obiezione -> obiezion", function() {deepEqual( Stem("obiezione"), "obiezion");});
test("obiezioni -> obiezion", function() {deepEqual( Stem("obiezioni"), "obiezion");});
test("oblazione -> oblazion", function() {deepEqual( Stem("oblazione"), "oblazion");});
test("oblio -> obli", function() {deepEqual( Stem("oblio"), "obli");});
test("oblìo -> oblì", function() {deepEqual( Stem("oblìo"), "oblì");});
test("obliquo -> obliqu", function() {deepEqual( Stem("obliquo"), "obliqu");});
test("oblivione -> oblivion", function() {deepEqual( Stem("oblivione"), "oblivion");});
test("observer -> observer", function() {deepEqual( Stem("observer"), "observer");});
test("obsta -> obsta", function() {deepEqual( Stem("obsta"), "obsta");});
test("oca -> oca", function() {deepEqual( Stem("oca"), "oca");});
test("occasion -> occasion", function() {deepEqual( Stem("occasion"), "occasion");});
test("occasionale -> occasional", function() {deepEqual( Stem("occasionale"), "occasional");});
test("occasionali -> occasional", function() {deepEqual( Stem("occasionali"), "occasional");});
test("occasione -> occasion", function() {deepEqual( Stem("occasione"), "occasion");});
test("occasioni -> occasion", function() {deepEqual( Stem("occasioni"), "occasion");});
test("occelli -> occell", function() {deepEqual( Stem("occelli"), "occell");});
test("occhetto -> occhett", function() {deepEqual( Stem("occhetto"), "occhett");});
test("occhi -> occhi", function() {deepEqual( Stem("occhi"), "occhi");});
test("occhiacci -> occhiacc", function() {deepEqual( Stem("occhiacci"), "occhiacc");});
test("occhiaie -> occhiai", function() {deepEqual( Stem("occhiaie"), "occhiai");});
test("occhiali -> occhial", function() {deepEqual( Stem("occhiali"), "occhial");});
test("occhiata -> occhi", function() {deepEqual( Stem("occhiata"), "occhi");});
test("occhiate -> occhi", function() {deepEqual( Stem("occhiate"), "occhi");});
test("occhiatina -> occhiatin", function() {deepEqual( Stem("occhiatina"), "occhiatin");});
test("occhiello -> occhiell", function() {deepEqual( Stem("occhiello"), "occhiell");});
test("occhietti -> occhiett", function() {deepEqual( Stem("occhietti"), "occhiett");});
test("occhij -> occhij", function() {deepEqual( Stem("occhij"), "occhij");});
test("occhio -> occhi", function() {deepEqual( Stem("occhio"), "occhi");});
test("occhioni -> occhion", function() {deepEqual( Stem("occhioni"), "occhion");});
test("occidentale -> occidental", function() {deepEqual( Stem("occidentale"), "occidental");});
test("occidentali -> occidental", function() {deepEqual( Stem("occidentali"), "occidental");});
test("occidente -> occident", function() {deepEqual( Stem("occidente"), "occident");});
test("occorre -> occorr", function() {deepEqual( Stem("occorre"), "occorr");});
test("occorrente -> occorrent", function() {deepEqual( Stem("occorrente"), "occorrent");});
test("occorrenti -> occorrent", function() {deepEqual( Stem("occorrenti"), "occorrent");});
test("occorrenza -> occorrent", function() {deepEqual( Stem("occorrenza"), "occorrent");});
test("occorrenze -> occorrent", function() {deepEqual( Stem("occorrenze"), "occorrent");});
test("occorrerà -> occorr", function() {deepEqual( Stem("occorrerà"), "occorr");});
test("occorrere -> occorr", function() {deepEqual( Stem("occorrere"), "occorr");});
test("occorrerebbe -> occorr", function() {deepEqual( Stem("occorrerebbe"), "occorr");});
test("occorresse -> occorress", function() {deepEqual( Stem("occorresse"), "occorress");});
test("occorreva -> occorr", function() {deepEqual( Stem("occorreva"), "occorr");});
test("occorrevano -> occorr", function() {deepEqual( Stem("occorrevano"), "occorr");});
test("occorron -> occorron", function() {deepEqual( Stem("occorron"), "occorron");});
test("occorrono -> occorr", function() {deepEqual( Stem("occorrono"), "occorr");});
test("occorsi -> occors", function() {deepEqual( Stem("occorsi"), "occors");});
test("occorso -> occors", function() {deepEqual( Stem("occorso"), "occors");});
test("occorsogli -> occorsogl", function() {deepEqual( Stem("occorsogli"), "occorsogl");});
test("occulta -> occult", function() {deepEqual( Stem("occulta"), "occult");});
test("occulte -> occult", function() {deepEqual( Stem("occulte"), "occult");});
test("occulto -> occult", function() {deepEqual( Stem("occulto"), "occult");});
test("occupa -> occup", function() {deepEqual( Stem("occupa"), "occup");});
test("occupando -> occup", function() {deepEqual( Stem("occupando"), "occup");});
test("occupano -> occup", function() {deepEqual( Stem("occupano"), "occup");});
test("occupante -> occup", function() {deepEqual( Stem("occupante"), "occup");});
test("occupanti -> occup", function() {deepEqual( Stem("occupanti"), "occup");});
test("occupar -> occup", function() {deepEqual( Stem("occupar"), "occup");});
test("occupare -> occup", function() {deepEqual( Stem("occupare"), "occup");});
test("occuparli -> occup", function() {deepEqual( Stem("occuparli"), "occup");});
test("occuparlo -> occup", function() {deepEqual( Stem("occuparlo"), "occup");});
test("occuparmi -> occup", function() {deepEqual( Stem("occuparmi"), "occup");});
test("occuparono -> occup", function() {deepEqual( Stem("occuparono"), "occup");});
test("occuparsi -> occup", function() {deepEqual( Stem("occuparsi"), "occup");});
test("occupasse -> occup", function() {deepEqual( Stem("occupasse"), "occup");});
test("occupata -> occup", function() {deepEqual( Stem("occupata"), "occup");});
test("occupate -> occup", function() {deepEqual( Stem("occupate"), "occup");});
test("occupati -> occup", function() {deepEqual( Stem("occupati"), "occup");});
test("occupato -> occup", function() {deepEqual( Stem("occupato"), "occup");});
test("occupava -> occup", function() {deepEqual( Stem("occupava"), "occup");});
test("occupavan -> occupavan", function() {deepEqual( Stem("occupavan"), "occupavan");});
test("occupazionale -> occupazional", function() {deepEqual( Stem("occupazionale"), "occupazional");});
test("occupazionali -> occupazional", function() {deepEqual( Stem("occupazionali"), "occupazional");});
test("occupazione -> occup", function() {deepEqual( Stem("occupazione"), "occup");});
test("occupazionè -> occupazion", function() {deepEqual( Stem("occupazionè"), "occupazion");});
test("occupazioni -> occup", function() {deepEqual( Stem("occupazioni"), "occup");});
test("occuperà -> occup", function() {deepEqual( Stem("occuperà"), "occup");});
test("occupò -> occup", function() {deepEqual( Stem("occupò"), "occup");});
test("ocean -> ocean", function() {deepEqual( Stem("ocean"), "ocean");});
test("oceaniche -> ocean", function() {deepEqual( Stem("oceaniche"), "ocean");});
test("oceano -> oce", function() {deepEqual( Stem("oceano"), "oce");});
test("oche -> oche", function() {deepEqual( Stem("oche"), "oche");});
test("òconnor -> òconnor", function() {deepEqual( Stem("òconnor"), "òconnor");});
test("ocosingo -> ocosing", function() {deepEqual( Stem("ocosingo"), "ocosing");});
test("ocp -> ocp", function() {deepEqual( Stem("ocp"), "ocp");});
test("oculari -> ocular", function() {deepEqual( Stem("oculari"), "ocular");});
test("od -> od", function() {deepEqual( Stem("od"), "od");});
test("odan -> odan", function() {deepEqual( Stem("odan"), "odan");});
test("oder -> oder", function() {deepEqual( Stem("oder"), "oder");});
test("odessa -> odess", function() {deepEqual( Stem("odessa"), "odess");});
test("odi -> odi", function() {deepEqual( Stem("odi"), "odi");});
test("odiare -> odi", function() {deepEqual( Stem("odiare"), "odi");});
test("odiata -> odi", function() {deepEqual( Stem("odiata"), "odi");});
test("odiati -> odi", function() {deepEqual( Stem("odiati"), "odi");});
test("odiato -> odi", function() {deepEqual( Stem("odiato"), "odi");});
test("odiava -> odi", function() {deepEqual( Stem("odiava"), "odi");});
test("odiavo -> odi", function() {deepEqual( Stem("odiavo"), "odi");});
test("odierna -> odiern", function() {deepEqual( Stem("odierna"), "odiern");});
test("odierne -> odi", function() {deepEqual( Stem("odierne"), "odi");});
test("odierni -> odiern", function() {deepEqual( Stem("odierni"), "odiern");});
test("odierno -> odiern", function() {deepEqual( Stem("odierno"), "odiern");});
test("odio -> odi", function() {deepEqual( Stem("odio"), "odi");});
test("odiosa -> odios", function() {deepEqual( Stem("odiosa"), "odios");});
test("odiose -> odios", function() {deepEqual( Stem("odiose"), "odios");});
test("odiosi -> odios", function() {deepEqual( Stem("odiosi"), "odios");});
test("odiosissimo -> odiosissim", function() {deepEqual( Stem("odiosissimo"), "odiosissim");});
test("odiosità -> odios", function() {deepEqual( Stem("odiosità"), "odios");});
test("odioso -> odios", function() {deepEqual( Stem("odioso"), "odios");});
test("odore -> odor", function() {deepEqual( Stem("odore"), "odor");});
test("odori -> odor", function() {deepEqual( Stem("odori"), "odor");});
test("odorose -> odor", function() {deepEqual( Stem("odorose"), "odor");});
test("of -> of", function() {deepEqual( Stem("of"), "of");});
test("off -> off", function() {deepEqual( Stem("off"), "off");});
test("offende -> offend", function() {deepEqual( Stem("offende"), "offend");});
test("offendendo -> offend", function() {deepEqual( Stem("offendendo"), "offend");});
test("offender -> offender", function() {deepEqual( Stem("offender"), "offender");});
test("offendere -> offend", function() {deepEqual( Stem("offendere"), "offend");});
test("offenderle -> offend", function() {deepEqual( Stem("offenderle"), "offend");});
test("offensiva -> offens", function() {deepEqual( Stem("offensiva"), "offens");});
test("offensive -> offens", function() {deepEqual( Stem("offensive"), "offens");});
test("offensivo -> offens", function() {deepEqual( Stem("offensivo"), "offens");});
test("offensori -> offensor", function() {deepEqual( Stem("offensori"), "offensor");});
test("offer -> offer", function() {deepEqual( Stem("offer"), "offer");});
test("offerse -> offers", function() {deepEqual( Stem("offerse"), "offers");});
test("offerta -> offert", function() {deepEqual( Stem("offerta"), "offert");});
test("offerte -> offert", function() {deepEqual( Stem("offerte"), "offert");});
test("offerti -> offert", function() {deepEqual( Stem("offerti"), "offert");});
test("offerto -> offert", function() {deepEqual( Stem("offerto"), "offert");});
test("offesa -> offes", function() {deepEqual( Stem("offesa"), "offes");});
test("offese -> offes", function() {deepEqual( Stem("offese"), "offes");});
test("offesi -> offes", function() {deepEqual( Stem("offesi"), "offes");});
test("offeso -> offes", function() {deepEqual( Stem("offeso"), "offes");});
test("office -> offic", function() {deepEqual( Stem("office"), "offic");});
test("officiale -> official", function() {deepEqual( Stem("officiale"), "official");});
test("officina -> officin", function() {deepEqual( Stem("officina"), "officin");});
test("officine -> officin", function() {deepEqual( Stem("officine"), "officin");});
test("offra -> offra", function() {deepEqual( Stem("offra"), "offra");});
test("offre -> offre", function() {deepEqual( Stem("offre"), "offre");});
test("offrendo -> offrend", function() {deepEqual( Stem("offrendo"), "offrend");});
test("offrì -> offrì", function() {deepEqual( Stem("offrì"), "offrì");});
test("offrir -> offrir", function() {deepEqual( Stem("offrir"), "offrir");});
test("offrirà -> offrir", function() {deepEqual( Stem("offrirà"), "offrir");});
test("offrire -> offrir", function() {deepEqual( Stem("offrire"), "offrir");});
test("offrirgli -> offrirgl", function() {deepEqual( Stem("offrirgli"), "offrirgl");});
test("offrirle -> offrirl", function() {deepEqual( Stem("offrirle"), "offrirl");});
test("offrirvi -> offrirv", function() {deepEqual( Stem("offrirvi"), "offrirv");});
test("offriva -> offriv", function() {deepEqual( Stem("offriva"), "offriv");});
test("offrivan -> offrivan", function() {deepEqual( Stem("offrivan"), "offrivan");});
test("offrivano -> offriv", function() {deepEqual( Stem("offrivano"), "offriv");});
test("offrivo -> offriv", function() {deepEqual( Stem("offrivo"), "offriv");});
test("offrono -> offron", function() {deepEqual( Stem("offrono"), "offron");});
test("offuscata -> offusc", function() {deepEqual( Stem("offuscata"), "offusc");});
test("oggetti -> oggett", function() {deepEqual( Stem("oggetti"), "oggett");});
test("oggettistica -> oggettist", function() {deepEqual( Stem("oggettistica"), "oggettist");});
test("oggettive -> oggett", function() {deepEqual( Stem("oggettive"), "oggett");});
test("oggettivo -> oggett", function() {deepEqual( Stem("oggettivo"), "oggett");});
test("oggetto -> oggett", function() {deepEqual( Stem("oggetto"), "oggett");});
test("oggi -> oggi", function() {deepEqual( Stem("oggi"), "oggi");});
test("oggigiorno -> oggigiorn", function() {deepEqual( Stem("oggigiorno"), "oggigiorn");});
test("ogn -> ogn", function() {deepEqual( Stem("ogn"), "ogn");});
test("ogni -> ogni", function() {deepEqual( Stem("ogni"), "ogni");});
test("ogniuno -> ogniun", function() {deepEqual( Stem("ogniuno"), "ogniun");});
test("ognun -> ognun", function() {deepEqual( Stem("ognun"), "ognun");});
test("ognuna -> ognun", function() {deepEqual( Stem("ognuna"), "ognun");});
test("ognuno -> ognun", function() {deepEqual( Stem("ognuno"), "ognun");});
test("oh -> oh", function() {deepEqual( Stem("oh"), "oh");});
test("ohe -> ohe", function() {deepEqual( Stem("ohe"), "ohe");});
test("ohi -> ohi", function() {deepEqual( Stem("ohi"), "ohi");});
test("ohimè -> ohim", function() {deepEqual( Stem("ohimè"), "ohim");});
test("oibò -> oib", function() {deepEqual( Stem("oibò"), "oib");});
test("oil -> oil", function() {deepEqual( Stem("oil"), "oil");});
test("ok -> ok", function() {deepEqual( Stem("ok"), "ok");});
test("olà -> olà", function() {deepEqual( Stem("olà"), "olà");});
test("olaf -> olaf", function() {deepEqual( Stem("olaf"), "olaf");});
test("olanda -> oland", function() {deepEqual( Stem("olanda"), "oland");});
test("olandese -> olandes", function() {deepEqual( Stem("olandese"), "olandes");});
test("olandesi -> olandes", function() {deepEqual( Stem("olandesi"), "olandes");});
test("olbia -> olbi", function() {deepEqual( Stem("olbia"), "olbi");});
test("olcese -> olces", function() {deepEqual( Stem("olcese"), "olces");});
test("ole -> ole", function() {deepEqual( Stem("ole"), "ole");});
test("oleg -> oleg", function() {deepEqual( Stem("oleg"), "oleg");});
test("oleodotto -> oleodott", function() {deepEqual( Stem("oleodotto"), "oleodott");});
test("olevano -> olev", function() {deepEqual( Stem("olevano"), "olev");});
test("olidata -> olid", function() {deepEqual( Stem("olidata"), "olid");});
test("oligarchia -> oligarc", function() {deepEqual( Stem("oligarchia"), "oligarc");});
test("oligarchie -> oligarc", function() {deepEqual( Stem("oligarchie"), "oligarc");});
test("oligopolio -> oligopol", function() {deepEqual( Stem("oligopolio"), "oligopol");});
test("olimpiadi -> olimpiad", function() {deepEqual( Stem("olimpiadi"), "olimpiad");});
test("olimpica -> olimp", function() {deepEqual( Stem("olimpica"), "olimp");});
test("olimpici -> olimp", function() {deepEqual( Stem("olimpici"), "olimp");});
test("olimpico -> olimp", function() {deepEqual( Stem("olimpico"), "olimp");});
test("olio -> oli", function() {deepEqual( Stem("olio"), "oli");});
test("oliseh -> oliseh", function() {deepEqual( Stem("oliseh"), "oliseh");});
test("oliva -> oliv", function() {deepEqual( Stem("oliva"), "oliv");});
test("olivares -> olivares", function() {deepEqual( Stem("olivares"), "olivares");});
test("olive -> oliv", function() {deepEqual( Stem("olive"), "oliv");});
test("oliveira -> oliveir", function() {deepEqual( Stem("oliveira"), "oliveir");});
test("olivelli -> olivell", function() {deepEqual( Stem("olivelli"), "olivell");});
test("olivetti -> olivett", function() {deepEqual( Stem("olivetti"), "olivett");});
test("oliviero -> olivier", function() {deepEqual( Stem("oliviero"), "olivier");});
test("olmi -> olmi", function() {deepEqual( Stem("olmi"), "olmi");});
test("olocausto -> olocaust", function() {deepEqual( Stem("olocausto"), "olocaust");});
test("oloferne -> olof", function() {deepEqual( Stem("oloferne"), "olof");});
test("olona -> olon", function() {deepEqual( Stem("olona"), "olon");});
test("olp -> olp", function() {deepEqual( Stem("olp"), "olp");});
test("oltraggio -> oltragg", function() {deepEqual( Stem("oltraggio"), "oltragg");});
test("oltre -> oltre", function() {deepEqual( Stem("oltre"), "oltre");});
test("oltrechè -> oltrec", function() {deepEqual( Stem("oltrechè"), "oltrec");});
test("oltremodo -> oltremod", function() {deepEqual( Stem("oltremodo"), "oltremod");});
test("oltreoceano -> oltreoc", function() {deepEqual( Stem("oltreoceano"), "oltreoc");});
test("oltrepassare -> oltrepass", function() {deepEqual( Stem("oltrepassare"), "oltrepass");});
test("oltrepassava -> oltrepass", function() {deepEqual( Stem("oltrepassava"), "oltrepass");});
test("oltrepassò -> oltrepass", function() {deepEqual( Stem("oltrepassò"), "oltrepass");});
test("oltretutto -> oltretutt", function() {deepEqual( Stem("oltretutto"), "oltretutt");});
test("oltreutto -> oltreutt", function() {deepEqual( Stem("oltreutto"), "oltreutt");});
test("om -> om", function() {deepEqual( Stem("om"), "om");});
test("omacci -> omacc", function() {deepEqual( Stem("omacci"), "omacc");});
test("omaggi -> omagg", function() {deepEqual( Stem("omaggi"), "omagg");});
test("omaggio -> omagg", function() {deepEqual( Stem("omaggio"), "omagg");});
test("omar -> omar", function() {deepEqual( Stem("omar"), "omar");});
test("ombra -> ombra", function() {deepEqual( Stem("ombra"), "ombra");});
test("ombre -> ombre", function() {deepEqual( Stem("ombre"), "ombre");});
test("ombrelli -> ombrell", function() {deepEqual( Stem("ombrelli"), "ombrell");});
test("ombrello -> ombrell", function() {deepEqual( Stem("ombrello"), "ombrell");});
test("ombretta -> ombrett", function() {deepEqual( Stem("ombretta"), "ombrett");});
test("ombrosa -> ombros", function() {deepEqual( Stem("ombrosa"), "ombros");});
test("ombroso -> ombros", function() {deepEqual( Stem("ombroso"), "ombros");});
test("omelia -> omel", function() {deepEqual( Stem("omelia"), "omel");});
test("omero -> omer", function() {deepEqual( Stem("omero"), "omer");});
test("omessi -> omess", function() {deepEqual( Stem("omessi"), "omess");});
test("omesso -> omess", function() {deepEqual( Stem("omesso"), "omess");});
test("ometteremo -> omett", function() {deepEqual( Stem("ometteremo"), "omett");});
test("omiciattolo -> omiciattol", function() {deepEqual( Stem("omiciattolo"), "omiciattol");});
test("omicida -> omicid", function() {deepEqual( Stem("omicida"), "omicid");});
test("omicide -> omicid", function() {deepEqual( Stem("omicide"), "omicid");});
test("omicidi -> omicid", function() {deepEqual( Stem("omicidi"), "omicid");});
test("omicidii -> omicid", function() {deepEqual( Stem("omicidii"), "omicid");});
test("omicidio -> omicid", function() {deepEqual( Stem("omicidio"), "omicid");});
test("omino -> omin", function() {deepEqual( Stem("omino"), "omin");});
test("omnia -> omni", function() {deepEqual( Stem("omnia"), "omni");});
test("omnitel -> omnitel", function() {deepEqual( Stem("omnitel"), "omnitel");});
test("omogenee -> omogene", function() {deepEqual( Stem("omogenee"), "omogene");});
test("omogenei -> omogene", function() {deepEqual( Stem("omogenei"), "omogene");});
test("omologato -> omolog", function() {deepEqual( Stem("omologato"), "omolog");});
test("omologazione -> omolog", function() {deepEqual( Stem("omologazione"), "omolog");});
test("omologo -> omolog", function() {deepEqual( Stem("omologo"), "omolog");});
test("omonime -> omonim", function() {deepEqual( Stem("omonime"), "omonim");});
test("omonimo -> omonim", function() {deepEqual( Stem("omonimo"), "omonim");});
test("omosessuali -> omosessual", function() {deepEqual( Stem("omosessuali"), "omosessual");});
test("omosessualità -> omosessual", function() {deepEqual( Stem("omosessualità"), "omosessual");});
test("on -> on", function() {deepEqual( Stem("on"), "on");});
test("once -> once", function() {deepEqual( Stem("once"), "once");});
test("oncia -> onci", function() {deepEqual( Stem("oncia"), "onci");});
test("ond -> ond", function() {deepEqual( Stem("ond"), "ond");});
test("onda -> onda", function() {deepEqual( Stem("onda"), "onda");});
test("ondata -> ondat", function() {deepEqual( Stem("ondata"), "ondat");});
test("ondate -> ondat", function() {deepEqual( Stem("ondate"), "ondat");});
test("onde -> onde", function() {deepEqual( Stem("onde"), "onde");});
test("ondeggiamento -> ondegg", function() {deepEqual( Stem("ondeggiamento"), "ondegg");});
test("ondeggiar -> ondegg", function() {deepEqual( Stem("ondeggiar"), "ondegg");});
test("ondeggiare -> ondegg", function() {deepEqual( Stem("ondeggiare"), "ondegg");});
test("ondoso -> ondos", function() {deepEqual( Stem("ondoso"), "ondos");});
test("onerose -> oner", function() {deepEqual( Stem("onerose"), "oner");});
test("onesta -> onest", function() {deepEqual( Stem("onesta"), "onest");});
test("onestamente -> onest", function() {deepEqual( Stem("onestamente"), "onest");});
test("oneste -> onest", function() {deepEqual( Stem("oneste"), "onest");});
test("onesti -> onest", function() {deepEqual( Stem("onesti"), "onest");});
test("onesto -> onest", function() {deepEqual( Stem("onesto"), "onest");});
test("ong -> ong", function() {deepEqual( Stem("ong"), "ong");});
test("onninamente -> onnin", function() {deepEqual( Stem("onninamente"), "onnin");});
test("onnipresente -> onnipresent", function() {deepEqual( Stem("onnipresente"), "onnipresent");});
test("onofrio -> onofr", function() {deepEqual( Stem("onofrio"), "onofr");});
test("onor -> onor", function() {deepEqual( Stem("onor"), "onor");});
test("onora -> onor", function() {deepEqual( Stem("onora"), "onor");});
test("onorare -> onor", function() {deepEqual( Stem("onorare"), "onor");});
test("onoraria -> onorar", function() {deepEqual( Stem("onoraria"), "onorar");});
test("onorario -> onorar", function() {deepEqual( Stem("onorario"), "onorar");});
test("onorarli -> onor", function() {deepEqual( Stem("onorarli"), "onor");});
test("onorata -> onor", function() {deepEqual( Stem("onorata"), "onor");});
test("onorati -> onor", function() {deepEqual( Stem("onorati"), "onor");});
test("onorato -> onor", function() {deepEqual( Stem("onorato"), "onor");});
test("onore -> onor", function() {deepEqual( Stem("onore"), "onor");});
test("onorè -> onor", function() {deepEqual( Stem("onorè"), "onor");});
test("onorevole -> onorevol", function() {deepEqual( Stem("onorevole"), "onorevol");});
test("onori -> onor", function() {deepEqual( Stem("onori"), "onor");});
test("onorò -> onor", function() {deepEqual( Stem("onorò"), "onor");});
test("onta -> onta", function() {deepEqual( Stem("onta"), "onta");});
test("ontrola -> ontrol", function() {deepEqual( Stem("ontrola"), "ontrol");});
test("onu -> onu", function() {deepEqual( Stem("onu"), "onu");});
test("opa -> opa", function() {deepEqual( Stem("opa"), "opa");});
test("opec -> opec", function() {deepEqual( Stem("opec"), "opec");});
test("opel -> opel", function() {deepEqual( Stem("opel"), "opel");});
test("open -> open", function() {deepEqual( Stem("open"), "open");});
test("opera -> oper", function() {deepEqual( Stem("opera"), "oper");});
test("operai -> opera", function() {deepEqual( Stem("operai"), "opera");});
test("operaio -> operai", function() {deepEqual( Stem("operaio"), "operai");});
test("operando -> oper", function() {deepEqual( Stem("operando"), "oper");});
test("operano -> oper", function() {deepEqual( Stem("operano"), "oper");});
test("operante -> oper", function() {deepEqual( Stem("operante"), "oper");});
test("operanti -> oper", function() {deepEqual( Stem("operanti"), "oper");});
test("operare -> oper", function() {deepEqual( Stem("operare"), "oper");});
test("operata -> oper", function() {deepEqual( Stem("operata"), "oper");});
test("operationi -> operation", function() {deepEqual( Stem("operationi"), "operation");});
test("operativa -> oper", function() {deepEqual( Stem("operativa"), "oper");});
test("operative -> oper", function() {deepEqual( Stem("operative"), "oper");});
test("operativi -> oper", function() {deepEqual( Stem("operativi"), "oper");});
test("operativo -> oper", function() {deepEqual( Stem("operativo"), "oper");});
test("operativò -> operativ", function() {deepEqual( Stem("operativò"), "operativ");});
test("operato -> oper", function() {deepEqual( Stem("operato"), "oper");});
test("operatore -> oper", function() {deepEqual( Stem("operatore"), "oper");});
test("operatori -> oper", function() {deepEqual( Stem("operatori"), "oper");});
test("operava -> oper", function() {deepEqual( Stem("operava"), "oper");});
test("operavano -> oper", function() {deepEqual( Stem("operavano"), "oper");});
test("operazione -> oper", function() {deepEqual( Stem("operazione"), "oper");});
test("operazioni -> oper", function() {deepEqual( Stem("operazioni"), "oper");});
test("opere -> oper", function() {deepEqual( Stem("opere"), "oper");});
test("opererà -> oper", function() {deepEqual( Stem("opererà"), "oper");});
test("operetta -> operett", function() {deepEqual( Stem("operetta"), "operett");});
test("operi -> oper", function() {deepEqual( Stem("operi"), "oper");});
test("operosa -> oper", function() {deepEqual( Stem("operosa"), "oper");});
test("operose -> oper", function() {deepEqual( Stem("operose"), "oper");});
test("opet -> opet", function() {deepEqual( Stem("opet"), "opet");});
test("opinion -> opinion", function() {deepEqual( Stem("opinion"), "opinion");});
test("opinione -> opinion", function() {deepEqual( Stem("opinione"), "opinion");});
test("opinioni -> opinion", function() {deepEqual( Stem("opinioni"), "opinion");});
test("oplà -> oplà", function() {deepEqual( Stem("oplà"), "oplà");});
test("oppone -> oppon", function() {deepEqual( Stem("oppone"), "oppon");});
test("opponendo -> oppon", function() {deepEqual( Stem("opponendo"), "oppon");});
test("opponeva -> oppon", function() {deepEqual( Stem("opponeva"), "oppon");});
test("opponevo -> oppon", function() {deepEqual( Stem("opponevo"), "oppon");});
test("oppongono -> oppong", function() {deepEqual( Stem("oppongono"), "oppong");});
test("opponiamo -> oppon", function() {deepEqual( Stem("opponiamo"), "oppon");});
test("opporci -> opporc", function() {deepEqual( Stem("opporci"), "opporc");});
test("opporrà -> opporr", function() {deepEqual( Stem("opporrà"), "opporr");});
test("opporre -> opporr", function() {deepEqual( Stem("opporre"), "opporr");});
test("opporremo -> opporrem", function() {deepEqual( Stem("opporremo"), "opporrem");});
test("opporsi -> oppors", function() {deepEqual( Stem("opporsi"), "oppors");});
test("opportuna -> opportun", function() {deepEqual( Stem("opportuna"), "opportun");});
test("opportunamente -> opportun", function() {deepEqual( Stem("opportunamente"), "opportun");});
test("opportune -> opportun", function() {deepEqual( Stem("opportune"), "opportun");});
test("opportuni -> opportun", function() {deepEqual( Stem("opportuni"), "opportun");});
test("opportunismo -> opportun", function() {deepEqual( Stem("opportunismo"), "opportun");});
test("opportunità -> opportun", function() {deepEqual( Stem("opportunità"), "opportun");});
test("opportuno -> opportun", function() {deepEqual( Stem("opportuno"), "opportun");});
test("oppositore -> oppositor", function() {deepEqual( Stem("oppositore"), "oppositor");});
test("oppositori -> oppositor", function() {deepEqual( Stem("oppositori"), "oppositor");});
test("opposizione -> opposizion", function() {deepEqual( Stem("opposizione"), "opposizion");});
test("opposizone -> opposizon", function() {deepEqual( Stem("opposizone"), "opposizon");});
test("opposta -> oppost", function() {deepEqual( Stem("opposta"), "oppost");});
test("opposte -> oppost", function() {deepEqual( Stem("opposte"), "oppost");});
test("opposti -> oppost", function() {deepEqual( Stem("opposti"), "oppost");});
test("opposto -> oppost", function() {deepEqual( Stem("opposto"), "oppost");});
test("oppressa -> oppress", function() {deepEqual( Stem("oppressa"), "oppress");});
test("oppressi -> oppress", function() {deepEqual( Stem("oppressi"), "oppress");});
test("oppressione -> oppression", function() {deepEqual( Stem("oppressione"), "oppression");});
test("oppressioni -> oppression", function() {deepEqual( Stem("oppressioni"), "oppression");});
test("oppresso -> oppress", function() {deepEqual( Stem("oppresso"), "oppress");});
test("oppressore -> oppressor", function() {deepEqual( Stem("oppressore"), "oppressor");});
test("opprima -> opprim", function() {deepEqual( Stem("opprima"), "opprim");});
test("opprime -> opprim", function() {deepEqual( Stem("opprime"), "opprim");});
test("opprimente -> oppriment", function() {deepEqual( Stem("opprimente"), "oppriment");});
test("opprimer -> opprimer", function() {deepEqual( Stem("opprimer"), "opprimer");});
test("opprimono -> opprim", function() {deepEqual( Stem("opprimono"), "opprim");});
test("oppure -> oppur", function() {deepEqual( Stem("oppure"), "oppur");});
test("optare -> optar", function() {deepEqual( Stem("optare"), "optar");});
test("opulenza -> opulent", function() {deepEqual( Stem("opulenza"), "opulent");});
test("opus -> opus", function() {deepEqual( Stem("opus"), "opus");});
test("opuscolo -> opuscol", function() {deepEqual( Stem("opuscolo"), "opuscol");});
test("opzioni -> opzion", function() {deepEqual( Stem("opzioni"), "opzion");});
test("or -> or", function() {deepEqual( Stem("or"), "or");});
test("ora -> ora", function() {deepEqual( Stem("ora"), "ora");});
test("orafi -> oraf", function() {deepEqual( Stem("orafi"), "oraf");});
test("orafo -> oraf", function() {deepEqual( Stem("orafo"), "oraf");});
test("orale -> oral", function() {deepEqual( Stem("orale"), "oral");});
test("oramai -> orama", function() {deepEqual( Stem("oramai"), "orama");});
test("orari -> orar", function() {deepEqual( Stem("orari"), "orar");});
test("orario -> orar", function() {deepEqual( Stem("orario"), "orar");});
test("oratore -> orator", function() {deepEqual( Stem("oratore"), "orator");});
test("oratori -> orator", function() {deepEqual( Stem("oratori"), "orator");});
test("oratorio -> orator", function() {deepEqual( Stem("oratorio"), "orator");});
test("orazion -> orazion", function() {deepEqual( Stem("orazion"), "orazion");});
test("orazione -> orazion", function() {deepEqual( Stem("orazione"), "orazion");});
test("orazioni -> orazion", function() {deepEqual( Stem("orazioni"), "orazion");});
test("orbetello -> orbetell", function() {deepEqual( Stem("orbetello"), "orbetell");});
test("orchestra -> orchestr", function() {deepEqual( Stem("orchestra"), "orchestr");});
test("orchestrine -> orchestrin", function() {deepEqual( Stem("orchestrine"), "orchestrin");});
test("orco -> orco", function() {deepEqual( Stem("orco"), "orco");});
test("ord -> ord", function() {deepEqual( Stem("ord"), "ord");});
test("orden -> orden", function() {deepEqual( Stem("orden"), "orden");});
test("ordigni -> ordign", function() {deepEqual( Stem("ordigni"), "ordign");});
test("ordigno -> ordign", function() {deepEqual( Stem("ordigno"), "ordign");});
test("ordin -> ordin", function() {deepEqual( Stem("ordin"), "ordin");});
test("ordina -> ordin", function() {deepEqual( Stem("ordina"), "ordin");});
test("ordinamento -> ordin", function() {deepEqual( Stem("ordinamento"), "ordin");});
test("ordinando -> ordin", function() {deepEqual( Stem("ordinando"), "ordin");});
test("ordinanza -> ordin", function() {deepEqual( Stem("ordinanza"), "ordin");});
test("ordinanze -> ordin", function() {deepEqual( Stem("ordinanze"), "ordin");});
test("ordinare -> ordin", function() {deepEqual( Stem("ordinare"), "ordin");});
test("ordinari -> ordinar", function() {deepEqual( Stem("ordinari"), "ordinar");});
test("ordinaria -> ordinar", function() {deepEqual( Stem("ordinaria"), "ordinar");});
test("ordinariamente -> ordinar", function() {deepEqual( Stem("ordinariamente"), "ordinar");});
test("ordinarie -> ordinar", function() {deepEqual( Stem("ordinarie"), "ordinar");});
test("ordinarii -> ordinar", function() {deepEqual( Stem("ordinarii"), "ordinar");});
test("ordinario -> ordinar", function() {deepEqual( Stem("ordinario"), "ordinar");});
test("ordinata -> ordin", function() {deepEqual( Stem("ordinata"), "ordin");});
test("ordinatamente -> ordinat", function() {deepEqual( Stem("ordinatamente"), "ordinat");});
test("ordinati -> ordin", function() {deepEqual( Stem("ordinati"), "ordin");});
test("ordinato -> ordin", function() {deepEqual( Stem("ordinato"), "ordin");});
test("ordinava -> ordin", function() {deepEqual( Stem("ordinava"), "ordin");});
test("ordinazioni -> ordin", function() {deepEqual( Stem("ordinazioni"), "ordin");});
test("ordine -> ordin", function() {deepEqual( Stem("ordine"), "ordin");});
test("ordini -> ordin", function() {deepEqual( Stem("ordini"), "ordin");});
test("ordinò -> ordin", function() {deepEqual( Stem("ordinò"), "ordin");});
test("ordir -> ordir", function() {deepEqual( Stem("ordir"), "ordir");});
test("ordita -> ordit", function() {deepEqual( Stem("ordita"), "ordit");});
test("ordite -> ordit", function() {deepEqual( Stem("ordite"), "ordit");});
test("ordo -> ordo", function() {deepEqual( Stem("ordo"), "ordo");});
test("ore -> ore", function() {deepEqual( Stem("ore"), "ore");});
test("orè -> orè", function() {deepEqual( Stem("orè"), "orè");});
test("orecchi -> orecc", function() {deepEqual( Stem("orecchi"), "orecc");});
test("orecchie -> orecc", function() {deepEqual( Stem("orecchie"), "orecc");});
test("orecchino -> orecchin", function() {deepEqual( Stem("orecchino"), "orecchin");});
test("orecchio -> orecc", function() {deepEqual( Stem("orecchio"), "orecc");});
test("oreficeria -> oreficer", function() {deepEqual( Stem("oreficeria"), "oreficer");});
test("oreste -> orest", function() {deepEqual( Stem("oreste"), "orest");});
test("orga -> orga", function() {deepEqual( Stem("orga"), "orga");});
test("organ -> organ", function() {deepEqual( Stem("organ"), "organ");});
test("organi -> organ", function() {deepEqual( Stem("organi"), "organ");});
test("organica -> organ", function() {deepEqual( Stem("organica"), "organ");});
test("organiche -> organ", function() {deepEqual( Stem("organiche"), "organ");});
test("organici -> organ", function() {deepEqual( Stem("organici"), "organ");});
test("organico -> organ", function() {deepEqual( Stem("organico"), "organ");});
test("organigramma -> organigramm", function() {deepEqual( Stem("organigramma"), "organigramm");});
test("organismi -> organ", function() {deepEqual( Stem("organismi"), "organ");});
test("organismo -> organ", function() {deepEqual( Stem("organismo"), "organ");});
test("organizzando -> organizz", function() {deepEqual( Stem("organizzando"), "organizz");});
test("organizzano -> organizz", function() {deepEqual( Stem("organizzano"), "organizz");});
test("organizzare -> organizz", function() {deepEqual( Stem("organizzare"), "organizz");});
test("organizzarsi -> organizz", function() {deepEqual( Stem("organizzarsi"), "organizz");});
test("organizzata -> organizz", function() {deepEqual( Stem("organizzata"), "organizz");});
test("organizzate -> organizz", function() {deepEqual( Stem("organizzate"), "organizz");});
test("organizzati -> organizz", function() {deepEqual( Stem("organizzati"), "organizz");});
test("organizzativa -> organizz", function() {deepEqual( Stem("organizzativa"), "organizz");});
test("organizzative -> organizz", function() {deepEqual( Stem("organizzative"), "organizz");});
test("organizzativi -> organizz", function() {deepEqual( Stem("organizzativi"), "organizz");});
test("organizzativo -> organizz", function() {deepEqual( Stem("organizzativo"), "organizz");});
test("organizzato -> organizz", function() {deepEqual( Stem("organizzato"), "organizz");});
test("organizzatori -> organizz", function() {deepEqual( Stem("organizzatori"), "organizz");});
test("organizzatrice -> organizz", function() {deepEqual( Stem("organizzatrice"), "organizz");});
test("organizzavano -> organizz", function() {deepEqual( Stem("organizzavano"), "organizz");});
test("organizzazione -> organizz", function() {deepEqual( Stem("organizzazione"), "organizz");});
test("organizzazioni -> organizz", function() {deepEqual( Stem("organizzazioni"), "organizz");});
test("organizziamo -> organizz", function() {deepEqual( Stem("organizziamo"), "organizz");});
test("organo -> organ", function() {deepEqual( Stem("organo"), "organ");});
test("orgasmo -> orgasm", function() {deepEqual( Stem("orgasmo"), "orgasm");});
test("orgini -> orgin", function() {deepEqual( Stem("orgini"), "orgin");});
test("orgoglio -> orgogl", function() {deepEqual( Stem("orgoglio"), "orgogl");});
test("orgogliosa -> orgogl", function() {deepEqual( Stem("orgogliosa"), "orgogl");});
test("orgogliosi -> orgogl", function() {deepEqual( Stem("orgogliosi"), "orgogl");});
test("ori -> ori", function() {deepEqual( Stem("ori"), "ori");});
test("oricalchi -> oricalc", function() {deepEqual( Stem("oricalchi"), "oricalc");});
test("orien -> orien", function() {deepEqual( Stem("orien"), "orien");});
test("orientale -> oriental", function() {deepEqual( Stem("orientale"), "oriental");});
test("orientali -> oriental", function() {deepEqual( Stem("orientali"), "oriental");});
test("orientamenti -> orient", function() {deepEqual( Stem("orientamenti"), "orient");});
test("orientamento -> orient", function() {deepEqual( Stem("orientamento"), "orient");});
test("orientarsi -> orient", function() {deepEqual( Stem("orientarsi"), "orient");});
test("oriente -> orient", function() {deepEqual( Stem("oriente"), "orient");});
test("orienteranno -> orient", function() {deepEqual( Stem("orienteranno"), "orient");});
test("orietta -> oriett", function() {deepEqual( Stem("orietta"), "oriett");});
test("original -> original", function() {deepEqual( Stem("original"), "original");});
test("originale -> original", function() {deepEqual( Stem("originale"), "original");});
test("originali -> original", function() {deepEqual( Stem("originali"), "original");});
test("originare -> origin", function() {deepEqual( Stem("originare"), "origin");});
test("originari -> originar", function() {deepEqual( Stem("originari"), "originar");});
test("originaria -> originar", function() {deepEqual( Stem("originaria"), "originar");});
test("originariamente -> originar", function() {deepEqual( Stem("originariamente"), "originar");});
test("originarie -> originar", function() {deepEqual( Stem("originarie"), "originar");});
test("originario -> originar", function() {deepEqual( Stem("originario"), "originar");});
test("originarono -> origin", function() {deepEqual( Stem("originarono"), "origin");});
test("origine -> origin", function() {deepEqual( Stem("origine"), "origin");});
test("origini -> origin", function() {deepEqual( Stem("origini"), "origin");});
test("oriz -> oriz", function() {deepEqual( Stem("oriz"), "oriz");});
test("orizzontale -> orizzontal", function() {deepEqual( Stem("orizzontale"), "orizzontal");});
test("orizzontalmente -> orizzontal", function() {deepEqual( Stem("orizzontalmente"), "orizzontal");});
test("orizzonte -> orizzont", function() {deepEqual( Stem("orizzonte"), "orizzont");});
test("orlandi -> orland", function() {deepEqual( Stem("orlandi"), "orland");});
test("orlandini -> orlandin", function() {deepEqual( Stem("orlandini"), "orlandin");});
test("orlando -> orland", function() {deepEqual( Stem("orlando"), "orland");});
test("orlate -> orlat", function() {deepEqual( Stem("orlate"), "orlat");});
test("orlati -> orlat", function() {deepEqual( Stem("orlati"), "orlat");});
test("orli -> orli", function() {deepEqual( Stem("orli"), "orli");});
test("orlo -> orlo", function() {deepEqual( Stem("orlo"), "orlo");});
test("ormai -> orma", function() {deepEqual( Stem("ormai"), "orma");});
test("ormal -> ormal", function() {deepEqual( Stem("ormal"), "ormal");});
test("ormeggiati -> ormegg", function() {deepEqual( Stem("ormeggiati"), "ormegg");});
test("ormeggio -> ormegg", function() {deepEqual( Stem("ormeggio"), "ormegg");});
test("orna -> orna", function() {deepEqual( Stem("orna"), "orna");});
test("ornamenti -> ornament", function() {deepEqual( Stem("ornamenti"), "ornament");});
test("ornamento -> ornament", function() {deepEqual( Stem("ornamento"), "ornament");});
test("ornate -> ornat", function() {deepEqual( Stem("ornate"), "ornat");});
test("ornato -> ornat", function() {deepEqual( Stem("ornato"), "ornat");});
test("oro -> oro", function() {deepEqual( Stem("oro"), "oro");});
test("orologi -> orolog", function() {deepEqual( Stem("orologi"), "orolog");});
test("orologio -> orolog", function() {deepEqual( Stem("orologio"), "orolog");});
test("oronzo -> oronz", function() {deepEqual( Stem("oronzo"), "oronz");});
test("oroscopo -> oroscop", function() {deepEqual( Stem("oroscopo"), "oroscop");});
test("orr -> orr", function() {deepEqual( Stem("orr"), "orr");});
test("orrenda -> orrend", function() {deepEqual( Stem("orrenda"), "orrend");});
test("orrendo -> orrend", function() {deepEqual( Stem("orrendo"), "orrend");});
test("orribil -> orribil", function() {deepEqual( Stem("orribil"), "orribil");});
test("orribile -> orribil", function() {deepEqual( Stem("orribile"), "orribil");});
test("orribili -> orribil", function() {deepEqual( Stem("orribili"), "orribil");});
test("orridi -> orrid", function() {deepEqual( Stem("orridi"), "orrid");});
test("orrore -> orror", function() {deepEqual( Stem("orrore"), "orror");});
test("orrori -> orror", function() {deepEqual( Stem("orrori"), "orror");});
test("orsi -> orsi", function() {deepEqual( Stem("orsi"), "orsi");});
test("orsono -> orson", function() {deepEqual( Stem("orsono"), "orson");});
test("orsù -> orsù", function() {deepEqual( Stem("orsù"), "orsù");});
test("orti -> orti", function() {deepEqual( Stem("orti"), "orti");});
test("orticello -> orticell", function() {deepEqual( Stem("orticello"), "orticell");});
test("ortiche -> ortic", function() {deepEqual( Stem("ortiche"), "ortic");});
test("ortino -> ortin", function() {deepEqual( Stem("ortino"), "ortin");});
test("orto -> orto", function() {deepEqual( Stem("orto"), "orto");});
test("ortodossa -> ortodoss", function() {deepEqual( Stem("ortodossa"), "ortodoss");});
test("ortodossia -> ortodoss", function() {deepEqual( Stem("ortodossia"), "ortodoss");});
test("ortofrutta -> ortofrutt", function() {deepEqual( Stem("ortofrutta"), "ortofrutt");});
test("ortografia -> ortograf", function() {deepEqual( Stem("ortografia"), "ortograf");});
test("osaka -> osak", function() {deepEqual( Stem("osaka"), "osak");});
test("osama -> osam", function() {deepEqual( Stem("osama"), "osam");});
test("osando -> osand", function() {deepEqual( Stem("osando"), "osand");});
test("osannante -> osann", function() {deepEqual( Stem("osannante"), "osann");});
test("osannato -> osann", function() {deepEqual( Stem("osannato"), "osann");});
test("osar -> osar", function() {deepEqual( Stem("osar"), "osar");});
test("osato -> osat", function() {deepEqual( Stem("osato"), "osat");});
test("osava -> osav", function() {deepEqual( Stem("osava"), "osav");});
test("osavan -> osavan", function() {deepEqual( Stem("osavan"), "osavan");});
test("oscar -> oscar", function() {deepEqual( Stem("oscar"), "oscar");});
test("oscene -> oscen", function() {deepEqual( Stem("oscene"), "oscen");});
test("oscenità -> oscen", function() {deepEqual( Stem("oscenità"), "oscen");});
test("oscilla -> oscill", function() {deepEqual( Stem("oscilla"), "oscill");});
test("oscillava -> oscill", function() {deepEqual( Stem("oscillava"), "oscill");});
test("oscillazioni -> oscill", function() {deepEqual( Stem("oscillazioni"), "oscill");});
test("oscura -> oscur", function() {deepEqual( Stem("oscura"), "oscur");});
test("oscuramento -> oscur", function() {deepEqual( Stem("oscuramento"), "oscur");});
test("oscurare -> oscur", function() {deepEqual( Stem("oscurare"), "oscur");});
test("oscurarsi -> oscur", function() {deepEqual( Stem("oscurarsi"), "oscur");});
test("oscure -> oscur", function() {deepEqual( Stem("oscure"), "oscur");});
test("oscuri -> oscur", function() {deepEqual( Stem("oscuri"), "oscur");});
test("oscurità -> oscur", function() {deepEqual( Stem("oscurità"), "oscur");});
test("oscuro -> oscur", function() {deepEqual( Stem("oscuro"), "oscur");});
test("osè -> osè", function() {deepEqual( Stem("osè"), "osè");});
test("oshima -> oshim", function() {deepEqual( Stem("oshima"), "oshim");});
test("osio -> osi", function() {deepEqual( Stem("osio"), "osi");});
test("oslo -> oslo", function() {deepEqual( Stem("oslo"), "oslo");});
test("osnabruecker -> osnabruecker", function() {deepEqual( Stem("osnabruecker"), "osnabruecker");});
test("osò -> osò", function() {deepEqual( Stem("osò"), "osò");});
test("ospedale -> ospedal", function() {deepEqual( Stem("ospedale"), "ospedal");});
test("ospedaliere -> ospedal", function() {deepEqual( Stem("ospedaliere"), "ospedal");});
test("ospedaliero -> ospedalier", function() {deepEqual( Stem("ospedaliero"), "ospedalier");});
test("ospedalizzazione -> ospedalizz", function() {deepEqual( Stem("ospedalizzazione"), "ospedalizz");});
test("ospita -> ospit", function() {deepEqual( Stem("ospita"), "ospit");});
test("ospitale -> ospital", function() {deepEqual( Stem("ospitale"), "ospital");});
test("ospitaletto -> ospitalett", function() {deepEqual( Stem("ospitaletto"), "ospitalett");});
test("ospitalità -> ospital", function() {deepEqual( Stem("ospitalità"), "ospital");});
test("ospitare -> ospit", function() {deepEqual( Stem("ospitare"), "ospit");});
test("ospitarono -> ospit", function() {deepEqual( Stem("ospitarono"), "ospit");});
test("ospitazione -> ospit", function() {deepEqual( Stem("ospitazione"), "ospit");});
test("ospite -> ospit", function() {deepEqual( Stem("ospite"), "ospit");});
test("ospiti -> ospit", function() {deepEqual( Stem("ospiti"), "ospit");});
test("ospizi -> ospiz", function() {deepEqual( Stem("ospizi"), "ospiz");});
test("ospizio -> ospiz", function() {deepEqual( Stem("ospizio"), "ospiz");});
test("ossa -> ossa", function() {deepEqual( Stem("ossa"), "ossa");});
test("ossatura -> ossatur", function() {deepEqual( Stem("ossatura"), "ossatur");});
test("ossequiata -> ossequ", function() {deepEqual( Stem("ossequiata"), "ossequ");});
test("ossequio -> ossequ", function() {deepEqual( Stem("ossequio"), "ossequ");});
test("ossequioso -> ossequ", function() {deepEqual( Stem("ossequioso"), "ossequ");});
test("osseravto -> osseravt", function() {deepEqual( Stem("osseravto"), "osseravt");});
test("osserva -> osserv", function() {deepEqual( Stem("osserva"), "osserv");});
test("osservabile -> osserv", function() {deepEqual( Stem("osservabile"), "osserv");});
test("osservando -> osserv", function() {deepEqual( Stem("osservando"), "osserv");});
test("osservanza -> osserv", function() {deepEqual( Stem("osservanza"), "osserv");});
test("osservaotri -> osservaotr", function() {deepEqual( Stem("osservaotri"), "osservaotr");});
test("osservar -> osserv", function() {deepEqual( Stem("osservar"), "osserv");});
test("osservare -> osserv", function() {deepEqual( Stem("osservare"), "osserv");});
test("osservarli -> osserv", function() {deepEqual( Stem("osservarli"), "osserv");});
test("osservarsi -> osserv", function() {deepEqual( Stem("osservarsi"), "osserv");});
test("osservata -> osserv", function() {deepEqual( Stem("osservata"), "osserv");});
test("osservate -> osserv", function() {deepEqual( Stem("osservate"), "osserv");});
test("osservati -> osserv", function() {deepEqual( Stem("osservati"), "osserv");});
test("osservato -> osserv", function() {deepEqual( Stem("osservato"), "osserv");});
test("osservatore -> osserv", function() {deepEqual( Stem("osservatore"), "osserv");});
test("osservatori -> osserv", function() {deepEqual( Stem("osservatori"), "osserv");});
test("osservatorio -> osservator", function() {deepEqual( Stem("osservatorio"), "osservator");});
test("osservava -> osserv", function() {deepEqual( Stem("osservava"), "osserv");});
test("osservazione -> osserv", function() {deepEqual( Stem("osservazione"), "osserv");});
test("osservazioni -> osserv", function() {deepEqual( Stem("osservazioni"), "osserv");});
test("osservò -> osserv", function() {deepEqual( Stem("osservò"), "osserv");});
test("ossessiva -> ossess", function() {deepEqual( Stem("ossessiva"), "ossess");});
test("ossessivo -> ossess", function() {deepEqual( Stem("ossessivo"), "ossess");});
test("ossia -> ossi", function() {deepEqual( Stem("ossia"), "ossi");});
test("ossido -> ossid", function() {deepEqual( Stem("ossido"), "ossid");});
test("ossigeno -> ossigen", function() {deepEqual( Stem("ossigeno"), "ossigen");});
test("osso -> osso", function() {deepEqual( Stem("osso"), "osso");});
test("osta -> osta", function() {deepEqual( Stem("osta"), "osta");});
test("ostacolare -> ostacol", function() {deepEqual( Stem("ostacolare"), "ostacol");});
test("ostacolato -> ostacol", function() {deepEqual( Stem("ostacolato"), "ostacol");});
test("ostacoli -> ostacol", function() {deepEqual( Stem("ostacoli"), "ostacol");});
test("ostacolo -> ostacol", function() {deepEqual( Stem("ostacolo"), "ostacol");});
test("ostaggio -> ostagg", function() {deepEqual( Stem("ostaggio"), "ostagg");});
test("ostante -> ostant", function() {deepEqual( Stem("ostante"), "ostant");});
test("ostavano -> ostav", function() {deepEqual( Stem("ostavano"), "ostav");});
test("oste -> oste", function() {deepEqual( Stem("oste"), "oste");});
test("ostenda -> ostend", function() {deepEqual( Stem("ostenda"), "ostend");});
test("ostentata -> ostent", function() {deepEqual( Stem("ostentata"), "ostent");});
test("ostentavano -> ostent", function() {deepEqual( Stem("ostentavano"), "ostent");});
test("osteria -> oster", function() {deepEqual( Stem("osteria"), "oster");});
test("osterie -> oster", function() {deepEqual( Stem("osterie"), "oster");});
test("ostessa -> ostess", function() {deepEqual( Stem("ostessa"), "ostess");});
test("osti -> osti", function() {deepEqual( Stem("osti"), "osti");});
test("ostia -> osti", function() {deepEqual( Stem("ostia"), "osti");});
test("ostiaque -> ostiaqu", function() {deepEqual( Stem("ostiaque"), "ostiaqu");});
test("ostile -> ostil", function() {deepEqual( Stem("ostile"), "ostil");});
test("ostilita -> ostil", function() {deepEqual( Stem("ostilita"), "ostil");});
test("ostilità -> ostil", function() {deepEqual( Stem("ostilità"), "ostil");});
test("ostina -> ostin", function() {deepEqual( Stem("ostina"), "ostin");});
test("ostinarsi -> ostin", function() {deepEqual( Stem("ostinarsi"), "ostin");});
test("ostinata -> ostin", function() {deepEqual( Stem("ostinata"), "ostin");});
test("ostinatamente -> ostinat", function() {deepEqual( Stem("ostinatamente"), "ostinat");});
test("ostinate -> ostin", function() {deepEqual( Stem("ostinate"), "ostin");});
test("ostinati -> ostin", function() {deepEqual( Stem("ostinati"), "ostin");});
test("ostinato -> ostin", function() {deepEqual( Stem("ostinato"), "ostin");});
test("ostinava -> ostin", function() {deepEqual( Stem("ostinava"), "ostin");});
test("ostinazione -> ostin", function() {deepEqual( Stem("ostinazione"), "ostin");});
test("ostini -> ostin", function() {deepEqual( Stem("ostini"), "ostin");});
test("ostruzionismo -> ostruzion", function() {deepEqual( Stem("ostruzionismo"), "ostruzion");});
test("osvaldo -> osvald", function() {deepEqual( Stem("osvaldo"), "osvald");});
test("ot -> ot", function() {deepEqual( Stem("ot"), "ot");});
test("ota -> ota", function() {deepEqual( Stem("ota"), "ota");});
test("ott -> ott", function() {deepEqual( Stem("ott"), "ott");});
test("ottangolare -> ottangol", function() {deepEqual( Stem("ottangolare"), "ottangol");});
test("ottanta -> ottant", function() {deepEqual( Stem("ottanta"), "ottant");});
test("ottantotto -> ottantott", function() {deepEqual( Stem("ottantotto"), "ottantott");});
test("ottava -> ottav", function() {deepEqual( Stem("ottava"), "ottav");});
test("ottavio -> ottav", function() {deepEqual( Stem("ottavio"), "ottav");});
test("ottenemmo -> otten", function() {deepEqual( Stem("ottenemmo"), "otten");});
test("ottenendo -> otten", function() {deepEqual( Stem("ottenendo"), "otten");});
test("ottenendone -> otten", function() {deepEqual( Stem("ottenendone"), "otten");});
test("ottener -> ottener", function() {deepEqual( Stem("ottener"), "ottener");});
test("ottenere -> otten", function() {deepEqual( Stem("ottenere"), "otten");});
test("ottenerla -> otten", function() {deepEqual( Stem("ottenerla"), "otten");});
test("ottenerlo -> otten", function() {deepEqual( Stem("ottenerlo"), "otten");});
test("ottenerne -> otten", function() {deepEqual( Stem("ottenerne"), "otten");});
test("ottenervi -> otten", function() {deepEqual( Stem("ottenervi"), "otten");});
test("ottenesse -> otteness", function() {deepEqual( Stem("ottenesse"), "otteness");});
test("otteneva -> otten", function() {deepEqual( Stem("otteneva"), "otten");});
test("ottengo -> otteng", function() {deepEqual( Stem("ottengo"), "otteng");});
test("ottengono -> otteng", function() {deepEqual( Stem("ottengono"), "otteng");});
test("ottenne -> ottenn", function() {deepEqual( Stem("ottenne"), "ottenn");});
test("ottenuta -> otten", function() {deepEqual( Stem("ottenuta"), "otten");});
test("ottenute -> otten", function() {deepEqual( Stem("ottenute"), "otten");});
test("ottenuti -> otten", function() {deepEqual( Stem("ottenuti"), "otten");});
test("ottenuto -> otten", function() {deepEqual( Stem("ottenuto"), "otten");});
test("otterrà -> otterr", function() {deepEqual( Stem("otterrà"), "otterr");});
test("otterrebbe -> otterrebb", function() {deepEqual( Stem("otterrebbe"), "otterrebb");});
test("ottey -> ottey", function() {deepEqual( Stem("ottey"), "ottey");});
test("ottica -> ottic", function() {deepEqual( Stem("ottica"), "ottic");});
test("ottiene -> ottien", function() {deepEqual( Stem("ottiene"), "ottien");});
test("ottima -> ottim", function() {deepEqual( Stem("ottima"), "ottim");});
test("ottimale -> ottimal", function() {deepEqual( Stem("ottimale"), "ottimal");});
test("ottime -> ottim", function() {deepEqual( Stem("ottime"), "ottim");});
test("ottimi -> ottim", function() {deepEqual( Stem("ottimi"), "ottim");});
test("ottimismo -> ottim", function() {deepEqual( Stem("ottimismo"), "ottim");});
test("ottimista -> ottim", function() {deepEqual( Stem("ottimista"), "ottim");});
test("ottimisti -> ottim", function() {deepEqual( Stem("ottimisti"), "ottim");});
test("ottimizzazione -> ottimizz", function() {deepEqual( Stem("ottimizzazione"), "ottimizz");});
test("ottimo -> ottim", function() {deepEqual( Stem("ottimo"), "ottim");});
test("ottiva -> ottiv", function() {deepEqual( Stem("ottiva"), "ottiv");});
test("otto -> otto", function() {deepEqual( Stem("otto"), "otto");});
test("ottobre -> ottobr", function() {deepEqual( Stem("ottobre"), "ottobr");});
test("ottocento -> ottocent", function() {deepEqual( Stem("ottocento"), "ottocent");});
test("ottone -> otton", function() {deepEqual( Stem("ottone"), "otton");});
test("ottorino -> ottorin", function() {deepEqual( Stem("ottorino"), "ottorin");});
test("ottuagenario -> ottuagenar", function() {deepEqual( Stem("ottuagenario"), "ottuagenar");});
test("ottusi -> ottus", function() {deepEqual( Stem("ottusi"), "ottus");});
test("oualche -> oualc", function() {deepEqual( Stem("oualche"), "oualc");});
test("ouand -> ouand", function() {deepEqual( Stem("ouand"), "ouand");});
test("ouando -> ouand", function() {deepEqual( Stem("ouando"), "ouand");});
test("ouel -> ouel", function() {deepEqual( Stem("ouel"), "ouel");});
test("out -> out", function() {deepEqual( Stem("out"), "out");});
test("outcold -> outcold", function() {deepEqual( Stem("outcold"), "outcold");});
test("ouuero -> ouuer", function() {deepEqual( Stem("ouuero"), "ouuer");});
test("ov -> ov", function() {deepEqual( Stem("ov"), "ov");});
test("ova -> ova", function() {deepEqual( Stem("ova"), "ova");});
test("ovazione -> ovazion", function() {deepEqual( Stem("ovazione"), "ovazion");});
test("ovazioni -> ovazion", function() {deepEqual( Stem("ovazioni"), "ovazion");});
test("ove -> ove", function() {deepEqual( Stem("ove"), "ove");});
test("ovest -> ovest", function() {deepEqual( Stem("ovest"), "ovest");});
test("ovidio -> ovid", function() {deepEqual( Stem("ovidio"), "ovid");});
test("ovunque -> ovunqu", function() {deepEqual( Stem("ovunque"), "ovunqu");});
test("ovvero -> ovver", function() {deepEqual( Stem("ovvero"), "ovver");});
test("ovviamente -> ovvi", function() {deepEqual( Stem("ovviamente"), "ovvi");});
test("ovviare -> ovvi", function() {deepEqual( Stem("ovviare"), "ovvi");});
test("ovvio -> ovvi", function() {deepEqual( Stem("ovvio"), "ovvi");});
test("owen -> owen", function() {deepEqual( Stem("owen"), "owen");});
test("owens -> owens", function() {deepEqual( Stem("owens"), "owens");});
test("ox -> ox", function() {deepEqual( Stem("ox"), "ox");});
test("ozio -> ozi", function() {deepEqual( Stem("ozio"), "ozi");});
test("oziosa -> ozios", function() {deepEqual( Stem("oziosa"), "ozios");});
test("oziosamente -> ozios", function() {deepEqual( Stem("oziosamente"), "ozios");});
test("ozioso -> ozios", function() {deepEqual( Stem("ozioso"), "ozios");});
test("ozzie -> ozzi", function() {deepEqual( Stem("ozzie"), "ozzi");});
test("p -> p", function() {deepEqual( Stem("p"), "p");});
test("pa -> pa", function() {deepEqual( Stem("pa"), "pa");});
test("pablo -> pabl", function() {deepEqual( Stem("pablo"), "pabl");});
test("pacatamente -> pacat", function() {deepEqual( Stem("pacatamente"), "pacat");});
test("pacatezza -> pacatezz", function() {deepEqual( Stem("pacatezza"), "pacatezz");});
test("pacato -> pac", function() {deepEqual( Stem("pacato"), "pac");});
test("pacchetto -> pacchett", function() {deepEqual( Stem("pacchetto"), "pacchett");});
test("pacchia -> pacc", function() {deepEqual( Stem("pacchia"), "pacc");});
test("pace -> pac", function() {deepEqual( Stem("pace"), "pac");});
test("pachistane -> pachistan", function() {deepEqual( Stem("pachistane"), "pachistan");});
test("paci -> pac", function() {deepEqual( Stem("paci"), "pac");});
test("pacific -> pacific", function() {deepEqual( Stem("pacific"), "pacific");});
test("pacifica -> pacif", function() {deepEqual( Stem("pacifica"), "pacif");});
test("pacificamente -> pacif", function() {deepEqual( Stem("pacificamente"), "pacif");});
test("pacificazione -> pacif", function() {deepEqual( Stem("pacificazione"), "pacif");});
test("pacifici -> pacif", function() {deepEqual( Stem("pacifici"), "pacif");});
test("pacifico -> pacif", function() {deepEqual( Stem("pacifico"), "pacif");});
test("pacifisti -> pacif", function() {deepEqual( Stem("pacifisti"), "pacif");});
test("paciotti -> paciott", function() {deepEqual( Stem("paciotti"), "paciott");});
test("pacoski -> pacosk", function() {deepEqual( Stem("pacoski"), "pacosk");});
test("padaglione -> padaglion", function() {deepEqual( Stem("padaglione"), "padaglion");});
test("padalino -> padalin", function() {deepEqual( Stem("padalino"), "padalin");});
test("padano -> pad", function() {deepEqual( Stem("padano"), "pad");});
test("paderno -> padern", function() {deepEqual( Stem("paderno"), "padern");});
test("padero -> pader", function() {deepEqual( Stem("padero"), "pader");});
test("padiglione -> padiglion", function() {deepEqual( Stem("padiglione"), "padiglion");});
test("padiglioni -> padiglion", function() {deepEqual( Stem("padiglioni"), "padiglion");});
test("padova -> padov", function() {deepEqual( Stem("padova"), "padov");});
test("padovano -> padov", function() {deepEqual( Stem("padovano"), "padov");});
test("padre -> padr", function() {deepEqual( Stem("padre"), "padr");});
test("padreterno -> padretern", function() {deepEqual( Stem("padreterno"), "padretern");});
test("padri -> padr", function() {deepEqual( Stem("padri"), "padr");});
test("padron -> padron", function() {deepEqual( Stem("padron"), "padron");});
test("padrona -> padron", function() {deepEqual( Stem("padrona"), "padron");});
test("padrone -> padron", function() {deepEqual( Stem("padrone"), "padron");});
test("padroni -> padron", function() {deepEqual( Stem("padroni"), "padron");});
test("pae -> pae", function() {deepEqual( Stem("pae"), "pae");});
test("paesani -> paesan", function() {deepEqual( Stem("paesani"), "paesan");});
test("paese -> paes", function() {deepEqual( Stem("paese"), "paes");});
test("paesè -> paes", function() {deepEqual( Stem("paesè"), "paes");});
test("paesello -> paesell", function() {deepEqual( Stem("paesello"), "paesell");});
test("paesetti -> paesett", function() {deepEqual( Stem("paesetti"), "paesett");});
test("paesetto -> paesett", function() {deepEqual( Stem("paesetto"), "paesett");});
test("paesi -> paes", function() {deepEqual( Stem("paesi"), "paes");});
test("paesistiche -> paesist", function() {deepEqual( Stem("paesistiche"), "paesist");});
test("paf -> paf", function() {deepEqual( Stem("paf"), "paf");});
test("pag -> pag", function() {deepEqual( Stem("pag"), "pag");});
test("paga -> pag", function() {deepEqual( Stem("paga"), "pag");});
test("pagamenti -> pag", function() {deepEqual( Stem("pagamenti"), "pag");});
test("pagamento -> pag", function() {deepEqual( Stem("pagamento"), "pag");});
test("pagando -> pag", function() {deepEqual( Stem("pagando"), "pag");});
test("pagandolo -> pag", function() {deepEqual( Stem("pagandolo"), "pag");});
test("pagani -> pagan", function() {deepEqual( Stem("pagani"), "pagan");});
test("paganin -> paganin", function() {deepEqual( Stem("paganin"), "paganin");});
test("paganini -> paganin", function() {deepEqual( Stem("paganini"), "paganin");});
test("pagano -> pag", function() {deepEqual( Stem("pagano"), "pag");});
test("paganoni -> paganon", function() {deepEqual( Stem("paganoni"), "paganon");});
test("paganti -> pagant", function() {deepEqual( Stem("paganti"), "pagant");});
test("pagar -> pag", function() {deepEqual( Stem("pagar"), "pag");});
test("pagare -> pag", function() {deepEqual( Stem("pagare"), "pag");});
test("pagarglielo -> pag", function() {deepEqual( Stem("pagarglielo"), "pag");});
test("pagarle -> pag", function() {deepEqual( Stem("pagarle"), "pag");});
test("pagarlo -> pag", function() {deepEqual( Stem("pagarlo"), "pag");});
test("pagarono -> pag", function() {deepEqual( Stem("pagarono"), "pag");});
test("pagarsi -> pag", function() {deepEqual( Stem("pagarsi"), "pag");});
test("pagata -> pag", function() {deepEqual( Stem("pagata"), "pag");});
test("pagate -> pag", function() {deepEqual( Stem("pagate"), "pag");});
test("pagatelo -> pagatel", function() {deepEqual( Stem("pagatelo"), "pagatel");});
test("pagato -> pag", function() {deepEqual( Stem("pagato"), "pag");});
test("pagatrice -> pagatric", function() {deepEqual( Stem("pagatrice"), "pagatric");});
test("pagava -> pag", function() {deepEqual( Stem("pagava"), "pag");});
test("pagelle -> pagell", function() {deepEqual( Stem("pagelle"), "pagell");});
test("paggi -> pagg", function() {deepEqual( Stem("paggi"), "pagg");});
test("paggio -> pagg", function() {deepEqual( Stem("paggio"), "pagg");});
test("paghe -> pagh", function() {deepEqual( Stem("paghe"), "pagh");});
test("pagherà -> pagh", function() {deepEqual( Stem("pagherà"), "pagh");});
test("pagherai -> pagh", function() {deepEqual( Stem("pagherai"), "pagh");});
test("pagherei -> pagh", function() {deepEqual( Stem("pagherei"), "pagh");});
test("pagherò -> pagh", function() {deepEqual( Stem("pagherò"), "pagh");});
test("paghi -> pagh", function() {deepEqual( Stem("paghi"), "pagh");});
test("paghiate -> pagh", function() {deepEqual( Stem("paghiate"), "pagh");});
test("paghino -> paghin", function() {deepEqual( Stem("paghino"), "paghin");});
test("pagina -> pagin", function() {deepEqual( Stem("pagina"), "pagin");});
test("pagine -> pagin", function() {deepEqual( Stem("pagine"), "pagin");});
test("paglia -> pagl", function() {deepEqual( Stem("paglia"), "pagl");});
test("pagliaccetti -> pagliaccett", function() {deepEqual( Stem("pagliaccetti"), "pagliaccett");});
test("pagliaio -> pagliai", function() {deepEqual( Stem("pagliaio"), "pagliai");});
test("pagliarini -> pagliarin", function() {deepEqual( Stem("pagliarini"), "pagliarin");});
test("pagliuca -> pagliuc", function() {deepEqual( Stem("pagliuca"), "pagliuc");});
test("pagliucola -> pagliucol", function() {deepEqual( Stem("pagliucola"), "pagliucol");});
test("pago -> pag", function() {deepEqual( Stem("pago"), "pag");});
test("pagò -> pag", function() {deepEqual( Stem("pagò"), "pag");});
test("paia -> pai", function() {deepEqual( Stem("paia"), "pai");});
test("paio -> pai", function() {deepEqual( Stem("paio"), "pai");});
test("paiolo -> paiol", function() {deepEqual( Stem("paiolo"), "paiol");});
test("paion -> paion", function() {deepEqual( Stem("paion"), "paion");});
test("paiono -> pai", function() {deepEqual( Stem("paiono"), "pai");});
test("paissan -> paissan", function() {deepEqual( Stem("paissan"), "paissan");});
test("pakistan -> pakistan", function() {deepEqual( Stem("pakistan"), "pakistan");});
test("pakistani -> pakistan", function() {deepEqual( Stem("pakistani"), "pakistan");});
test("pala -> pal", function() {deepEqual( Stem("pala"), "pal");});
test("palace -> palac", function() {deepEqual( Stem("palace"), "palac");});
test("paladina -> paladin", function() {deepEqual( Stem("paladina"), "paladin");});
test("palafreni -> palafren", function() {deepEqual( Stem("palafreni"), "palafren");});
test("palafreniere -> palafren", function() {deepEqual( Stem("palafreniere"), "palafren");});
test("palam -> palam", function() {deepEqual( Stem("palam"), "palam");});
test("palatrussardi -> palatrussard", function() {deepEqual( Stem("palatrussardi"), "palatrussard");});
test("palatrussarsi -> palatruss", function() {deepEqual( Stem("palatrussarsi"), "palatruss");});
test("palazzetto -> palazzett", function() {deepEqual( Stem("palazzetto"), "palazzett");});
test("palazzi -> palazz", function() {deepEqual( Stem("palazzi"), "palazz");});
test("palazzina -> palazzin", function() {deepEqual( Stem("palazzina"), "palazzin");});
test("palazzo -> palazz", function() {deepEqual( Stem("palazzo"), "palazz");});
test("palazzolo -> palazzol", function() {deepEqual( Stem("palazzolo"), "palazzol");});
test("palazzotto -> palazzott", function() {deepEqual( Stem("palazzotto"), "palazzott");});
test("palchetto -> palchett", function() {deepEqual( Stem("palchetto"), "palchett");});
test("palchi -> palc", function() {deepEqual( Stem("palchi"), "palc");});
test("palco -> palc", function() {deepEqual( Stem("palco"), "palc");});
test("pale -> pal", function() {deepEqual( Stem("pale"), "pal");});
test("palermo -> palerm", function() {deepEqual( Stem("palermo"), "palerm");});
test("palesar -> pales", function() {deepEqual( Stem("palesar"), "pales");});
test("palesare -> pales", function() {deepEqual( Stem("palesare"), "pales");});
test("palese -> pales", function() {deepEqual( Stem("palese"), "pales");});
test("palesi -> pales", function() {deepEqual( Stem("palesi"), "pales");});
test("palestinà -> palestin", function() {deepEqual( Stem("palestinà"), "palestin");});
test("palestinese -> palestines", function() {deepEqual( Stem("palestinese"), "palestines");});
test("palestinesi -> palestines", function() {deepEqual( Stem("palestinesi"), "palestines");});
test("paletto -> palett", function() {deepEqual( Stem("paletto"), "palett");});
test("pali -> pal", function() {deepEqual( Stem("pali"), "pal");});
test("palieri -> palier", function() {deepEqual( Stem("palieri"), "palier");});
test("palio -> pal", function() {deepEqual( Stem("palio"), "pal");});
test("palizzolo -> palizzol", function() {deepEqual( Stem("palizzolo"), "palizzol");});
test("palla -> pall", function() {deepEqual( Stem("palla"), "pall");});
test("pallacanestro -> pallacanestr", function() {deepEqual( Stem("pallacanestro"), "pallacanestr");});
test("palladini -> palladin", function() {deepEqual( Stem("palladini"), "palladin");});
test("pallavolando -> pallavol", function() {deepEqual( Stem("pallavolando"), "pallavol");});
test("pallavolo -> pallavol", function() {deepEqual( Stem("pallavolo"), "pallavol");});
test("palle -> pall", function() {deepEqual( Stem("palle"), "pall");});
test("pallhuber -> pallhuber", function() {deepEqual( Stem("pallhuber"), "pallhuber");});
test("pallida -> pallid", function() {deepEqual( Stem("pallida"), "pallid");});
test("pallidi -> pallid", function() {deepEqual( Stem("pallidi"), "pallid");});
test("pallidissime -> pallidissim", function() {deepEqual( Stem("pallidissime"), "pallidissim");});
test("pallido -> pallid", function() {deepEqual( Stem("pallido"), "pallid");});
test("pallini -> pallin", function() {deepEqual( Stem("pallini"), "pallin");});
test("pallone -> pallon", function() {deepEqual( Stem("pallone"), "pallon");});
test("pallonetto -> pallonett", function() {deepEqual( Stem("pallonetto"), "pallonett");});
test("pallore -> pallor", function() {deepEqual( Stem("pallore"), "pallor");});
test("pallottola -> pallottol", function() {deepEqual( Stem("pallottola"), "pallottol");});
test("palm -> palm", function() {deepEqual( Stem("palm"), "palm");});
test("palma -> palm", function() {deepEqual( Stem("palma"), "palm");});
test("palme -> palm", function() {deepEqual( Stem("palme"), "palm");});
test("palmer -> palmer", function() {deepEqual( Stem("palmer"), "palmer");});
test("palmieri -> palmier", function() {deepEqual( Stem("palmieri"), "palmier");});
test("palmisani -> palmisan", function() {deepEqual( Stem("palmisani"), "palmisan");});
test("palmisano -> palmis", function() {deepEqual( Stem("palmisano"), "palmis");});
test("palmo -> palm", function() {deepEqual( Stem("palmo"), "palm");});
test("palo -> pal", function() {deepEqual( Stem("palo"), "pal");});
test("palombelli -> palombell", function() {deepEqual( Stem("palombelli"), "palombell");});
test("palpa -> palp", function() {deepEqual( Stem("palpa"), "palp");});
test("palpava -> palp", function() {deepEqual( Stem("palpava"), "palp");});
test("palpebre -> palpebr", function() {deepEqual( Stem("palpebre"), "palpebr");});
test("palpitazion -> palpitazion", function() {deepEqual( Stem("palpitazion"), "palpitazion");});
test("palpitazioni -> palpit", function() {deepEqual( Stem("palpitazioni"), "palpit");});
test("palude -> palud", function() {deepEqual( Stem("palude"), "palud");});
test("paludi -> palud", function() {deepEqual( Stem("paludi"), "palud");});
test("paly -> paly", function() {deepEqual( Stem("paly"), "paly");});
test("pamela -> pamel", function() {deepEqual( Stem("pamela"), "pamel");});
test("pampani -> pampan", function() {deepEqual( Stem("pampani"), "pampan");});
test("pan -> pan", function() {deepEqual( Stem("pan"), "pan");});
test("panca -> panc", function() {deepEqual( Stem("panca"), "panc");});
test("pancaro -> pancar", function() {deepEqual( Stem("pancaro"), "pancar");});
test("pance -> panc", function() {deepEqual( Stem("pance"), "panc");});
test("pancev -> pancev", function() {deepEqual( Stem("pancev"), "pancev");});
test("panche -> panc", function() {deepEqual( Stem("panche"), "panc");});
test("panchetti -> panchett", function() {deepEqual( Stem("panchetti"), "panchett");});
test("panchetto -> panchett", function() {deepEqual( Stem("panchetto"), "panchett");});
test("panchina -> panchin", function() {deepEqual( Stem("panchina"), "panchin");});
test("panchine -> panchin", function() {deepEqual( Stem("panchine"), "panchin");});
test("pancho -> panc", function() {deepEqual( Stem("pancho"), "panc");});
test("pancia -> panc", function() {deepEqual( Stem("pancia"), "panc");});
test("pancione -> pancion", function() {deepEqual( Stem("pancione"), "pancion");});
test("pandolfo -> pandolf", function() {deepEqual( Stem("pandolfo"), "pandolf");});
test("pane -> pan", function() {deepEqual( Stem("pane"), "pan");});
test("panegirico -> panegir", function() {deepEqual( Stem("panegirico"), "panegir");});
test("panetta -> panett", function() {deepEqual( Stem("panetta"), "panett");});
test("panfido -> panfid", function() {deepEqual( Stem("panfido"), "panfid");});
test("panfilo -> panfil", function() {deepEqual( Stem("panfilo"), "panfil");});
test("pani -> pan", function() {deepEqual( Stem("pani"), "pan");});
test("panicastrelle -> panicastrell", function() {deepEqual( Stem("panicastrelle"), "panicastrell");});
test("panico -> panic", function() {deepEqual( Stem("panico"), "panic");});
test("panicucci -> panicucc", function() {deepEqual( Stem("panicucci"), "panicucc");});
test("paniera -> panier", function() {deepEqual( Stem("paniera"), "panier");});
test("paniere -> pan", function() {deepEqual( Stem("paniere"), "pan");});
test("pannè -> pann", function() {deepEqual( Stem("pannè"), "pann");});
test("pannella -> pannell", function() {deepEqual( Stem("pannella"), "pannell");});
test("panni -> pann", function() {deepEqual( Stem("panni"), "pann");});
test("panno -> pann", function() {deepEqual( Stem("panno"), "pann");});
test("pannocchiette -> pannocchiett", function() {deepEqual( Stem("pannocchiette"), "pannocchiett");});
test("panorama -> panoram", function() {deepEqual( Stem("panorama"), "panoram");});
test("panoramà -> panoram", function() {deepEqual( Stem("panoramà"), "panoram");});
test("panorma -> panorm", function() {deepEqual( Stem("panorma"), "panorm");});
test("pantedesca -> pantedesc", function() {deepEqual( Stem("pantedesca"), "pantedesc");});
test("panucci -> panucc", function() {deepEqual( Stem("panucci"), "panucc");});
test("paola -> paol", function() {deepEqual( Stem("paola"), "paol");});
test("paoli -> paol", function() {deepEqual( Stem("paoli"), "paol");});
test("paolin -> paolin", function() {deepEqual( Stem("paolin"), "paolin");});
test("paolo -> paol", function() {deepEqual( Stem("paolo"), "paol");});
test("paonazze -> paonazz", function() {deepEqual( Stem("paonazze"), "paonazz");});
test("paonazzo -> paonazz", function() {deepEqual( Stem("paonazzo"), "paonazz");});
test("paone -> paon", function() {deepEqual( Stem("paone"), "paon");});
test("papa -> pap", function() {deepEqual( Stem("papa"), "pap");});
test("papà -> pap", function() {deepEqual( Stem("papà"), "pap");});
test("papais -> papais", function() {deepEqual( Stem("papais"), "papais");});
test("papalina -> papalin", function() {deepEqual( Stem("papalina"), "papalin");});
test("papeete -> pap", function() {deepEqual( Stem("papeete"), "pap");});
test("papino -> papin", function() {deepEqual( Stem("papino"), "papin");});
test("pappagorgia -> pappagorg", function() {deepEqual( Stem("pappagorgia"), "pappagorg");});
test("par -> par", function() {deepEqual( Stem("par"), "par");});
test("para -> par", function() {deepEqual( Stem("para"), "par");});
test("paracadute -> paracad", function() {deepEqual( Stem("paracadute"), "paracad");});
test("paracadutisti -> paracadut", function() {deepEqual( Stem("paracadutisti"), "paracadut");});
test("paradigma -> paradigm", function() {deepEqual( Stem("paradigma"), "paradigm");});
test("paradise -> paradis", function() {deepEqual( Stem("paradise"), "paradis");});
test("paradisi -> paradis", function() {deepEqual( Stem("paradisi"), "paradis");});
test("paradisiaci -> paradisiac", function() {deepEqual( Stem("paradisiaci"), "paradisiac");});
test("paradiso -> paradis", function() {deepEqual( Stem("paradiso"), "paradis");});
test("paradossale -> paradossal", function() {deepEqual( Stem("paradossale"), "paradossal");});
test("paragon -> paragon", function() {deepEqual( Stem("paragon"), "paragon");});
test("paragonare -> paragon", function() {deepEqual( Stem("paragonare"), "paragon");});
test("paragonarlo -> paragon", function() {deepEqual( Stem("paragonarlo"), "paragon");});
test("paragonata -> paragon", function() {deepEqual( Stem("paragonata"), "paragon");});
test("paragonato -> paragon", function() {deepEqual( Stem("paragonato"), "paragon");});
test("paragonava -> paragon", function() {deepEqual( Stem("paragonava"), "paragon");});
test("paragone -> paragon", function() {deepEqual( Stem("paragone"), "paragon");});
test("paragonerebbe -> paragon", function() {deepEqual( Stem("paragonerebbe"), "paragon");});
test("paragoni -> paragon", function() {deepEqual( Stem("paragoni"), "paragon");});
test("paragrafo -> paragraf", function() {deepEqual( Stem("paragrafo"), "paragraf");});
test("paralizzeranno -> paralizz", function() {deepEqual( Stem("paralizzeranno"), "paralizz");});
test("parallelo -> parallel", function() {deepEqual( Stem("parallelo"), "parallel");});
test("paramatti -> paramatt", function() {deepEqual( Stem("paramatti"), "paramatt");});
test("parametri -> parametr", function() {deepEqual( Stem("parametri"), "parametr");});
test("paramygina -> paramygin", function() {deepEqual( Stem("paramygina"), "paramygin");});
test("parapetto -> parapett", function() {deepEqual( Stem("parapetto"), "parapett");});
test("parapiglia -> parapigl", function() {deepEqual( Stem("parapiglia"), "parapigl");});
test("parare -> par", function() {deepEqual( Stem("parare"), "par");});
test("parassiti -> parass", function() {deepEqual( Stem("parassiti"), "parass");});
test("parastato -> parast", function() {deepEqual( Stem("parastato"), "parast");});
test("parat -> parat", function() {deepEqual( Stem("parat"), "parat");});
test("parata -> par", function() {deepEqual( Stem("parata"), "par");});
test("parate -> par", function() {deepEqual( Stem("parate"), "par");});
test("parati -> par", function() {deepEqual( Stem("parati"), "par");});
test("parato -> par", function() {deepEqual( Stem("parato"), "par");});
test("parava -> par", function() {deepEqual( Stem("parava"), "par");});
test("paravano -> par", function() {deepEqual( Stem("paravano"), "par");});
test("paravento -> paravent", function() {deepEqual( Stem("paravento"), "paravent");});
test("parca -> parc", function() {deepEqual( Stem("parca"), "parc");});
test("parcere -> parc", function() {deepEqual( Stem("parcere"), "parc");});
test("parche -> parc", function() {deepEqual( Stem("parche"), "parc");});
test("parcheggiata -> parchegg", function() {deepEqual( Stem("parcheggiata"), "parchegg");});
test("parcheggiate -> parchegg", function() {deepEqual( Stem("parcheggiate"), "parchegg");});
test("parcheggiava -> parchegg", function() {deepEqual( Stem("parcheggiava"), "parchegg");});
test("parcheggio -> parchegg", function() {deepEqual( Stem("parcheggio"), "parchegg");});
test("parchi -> parc", function() {deepEqual( Stem("parchi"), "parc");});
test("parco -> parc", function() {deepEqual( Stem("parco"), "parc");});
test("pare -> par", function() {deepEqual( Stem("pare"), "par");});
test("parè -> par", function() {deepEqual( Stem("parè"), "par");});
test("parecchi -> parecc", function() {deepEqual( Stem("parecchi"), "parecc");});
test("pareggia -> paregg", function() {deepEqual( Stem("pareggia"), "paregg");});
test("pareggiare -> paregg", function() {deepEqual( Stem("pareggiare"), "paregg");});
test("pareggiato -> paregg", function() {deepEqual( Stem("pareggiato"), "paregg");});
test("pareggio -> paregg", function() {deepEqual( Stem("pareggio"), "paregg");});
test("parendo -> par", function() {deepEqual( Stem("parendo"), "par");});
test("parendoci -> par", function() {deepEqual( Stem("parendoci"), "par");});
test("parendogli -> par", function() {deepEqual( Stem("parendogli"), "par");});
test("parentado -> parentad", function() {deepEqual( Stem("parentado"), "parentad");});
test("parente -> parent", function() {deepEqual( Stem("parente"), "parent");});
test("parentela -> parentel", function() {deepEqual( Stem("parentela"), "parentel");});
test("parentele -> parentel", function() {deepEqual( Stem("parentele"), "parentel");});
test("parenti -> parent", function() {deepEqual( Stem("parenti"), "parent");});
test("pareo -> pare", function() {deepEqual( Stem("pareo"), "pare");});
test("parer -> parer", function() {deepEqual( Stem("parer"), "parer");});
test("parere -> par", function() {deepEqual( Stem("parere"), "par");});
test("parergli -> par", function() {deepEqual( Stem("parergli"), "par");});
test("pareri -> parer", function() {deepEqual( Stem("pareri"), "parer");});
test("paresse -> paress", function() {deepEqual( Stem("paresse"), "paress");});
test("paressero -> par", function() {deepEqual( Stem("paressero"), "par");});
test("parete -> par", function() {deepEqual( Stem("parete"), "par");});
test("pareti -> paret", function() {deepEqual( Stem("pareti"), "paret");});
test("pareva -> par", function() {deepEqual( Stem("pareva"), "par");});
test("parevan -> parevan", function() {deepEqual( Stem("parevan"), "parevan");});
test("parevano -> par", function() {deepEqual( Stem("parevano"), "par");});
test("pari -> par", function() {deepEqual( Stem("pari"), "par");});
test("paribas -> paribas", function() {deepEqual( Stem("paribas"), "paribas");});
test("paribus -> paribus", function() {deepEqual( Stem("paribus"), "paribus");});
test("paride -> parid", function() {deepEqual( Stem("paride"), "parid");});
test("parieti -> pariet", function() {deepEqual( Stem("parieti"), "pariet");});
test("parigi -> parig", function() {deepEqual( Stem("parigi"), "parig");});
test("parigina -> parigin", function() {deepEqual( Stem("parigina"), "parigin");});
test("parigino -> parigin", function() {deepEqual( Stem("parigino"), "parigin");});
test("parimente -> pariment", function() {deepEqual( Stem("parimente"), "pariment");});
test("parimenti -> par", function() {deepEqual( Stem("parimenti"), "par");});
test("parini -> parin", function() {deepEqual( Stem("parini"), "parin");});
test("paris -> paris", function() {deepEqual( Stem("paris"), "paris");});
test("parisi -> paris", function() {deepEqual( Stem("parisi"), "paris");});
test("parità -> parit", function() {deepEqual( Stem("parità"), "parit");});
test("parks -> parks", function() {deepEqual( Stem("parks"), "parks");});
test("parla -> parl", function() {deepEqual( Stem("parla"), "parl");});
test("parlamentare -> parlament", function() {deepEqual( Stem("parlamentare"), "parlament");});
test("parlamentari -> parlamentar", function() {deepEqual( Stem("parlamentari"), "parlamentar");});
test("parlamenti -> parl", function() {deepEqual( Stem("parlamenti"), "parl");});
test("parlamentini -> parlamentin", function() {deepEqual( Stem("parlamentini"), "parlamentin");});
test("parlamento -> parl", function() {deepEqual( Stem("parlamento"), "parl");});
test("parlan -> parlan", function() {deepEqual( Stem("parlan"), "parlan");});
test("parlando -> parl", function() {deepEqual( Stem("parlando"), "parl");});
test("parlandone -> parl", function() {deepEqual( Stem("parlandone"), "parl");});
test("parlano -> parl", function() {deepEqual( Stem("parlano"), "parl");});
test("parlante -> parlant", function() {deepEqual( Stem("parlante"), "parlant");});
test("parlantina -> parlantin", function() {deepEqual( Stem("parlantina"), "parlantin");});
test("parlar -> parl", function() {deepEqual( Stem("parlar"), "parl");});
test("parlare -> parl", function() {deepEqual( Stem("parlare"), "parl");});
test("parlargli -> parl", function() {deepEqual( Stem("parlargli"), "parl");});
test("parlargliene -> parl", function() {deepEqual( Stem("parlargliene"), "parl");});
test("parlarle -> parl", function() {deepEqual( Stem("parlarle"), "parl");});
test("parlarne -> parl", function() {deepEqual( Stem("parlarne"), "parl");});
test("parlaron -> parlaron", function() {deepEqual( Stem("parlaron"), "parlaron");});
test("parlarono -> parl", function() {deepEqual( Stem("parlarono"), "parl");});
test("parlarvene -> parl", function() {deepEqual( Stem("parlarvene"), "parl");});
test("parlarvi -> parl", function() {deepEqual( Stem("parlarvi"), "parl");});
test("parlasse -> parl", function() {deepEqual( Stem("parlasse"), "parl");});
test("parlata -> parl", function() {deepEqual( Stem("parlata"), "parl");});
test("parlate -> parl", function() {deepEqual( Stem("parlate"), "parl");});
test("parlati -> parl", function() {deepEqual( Stem("parlati"), "parl");});
test("parlato -> parl", function() {deepEqual( Stem("parlato"), "parl");});
test("parlatori -> parlator", function() {deepEqual( Stem("parlatori"), "parlator");});
test("parlatorio -> parlator", function() {deepEqual( Stem("parlatorio"), "parlator");});
test("parlava -> parl", function() {deepEqual( Stem("parlava"), "parl");});
test("parlavan -> parlavan", function() {deepEqual( Stem("parlavan"), "parlavan");});
test("parlavano -> parl", function() {deepEqual( Stem("parlavano"), "parl");});
test("parlavate -> parl", function() {deepEqual( Stem("parlavate"), "parl");});
test("parlerà -> parl", function() {deepEqual( Stem("parlerà"), "parl");});
test("parlerebbe -> parl", function() {deepEqual( Stem("parlerebbe"), "parl");});
test("parleremo -> parl", function() {deepEqual( Stem("parleremo"), "parl");});
test("parlerò -> parl", function() {deepEqual( Stem("parlerò"), "parl");});
test("parli -> parl", function() {deepEqual( Stem("parli"), "parl");});
test("parliam -> parliam", function() {deepEqual( Stem("parliam"), "parliam");});
test("parliamo -> parl", function() {deepEqual( Stem("parliamo"), "parl");});
test("parlino -> parlin", function() {deepEqual( Stem("parlino"), "parlin");});
test("parlo -> parl", function() {deepEqual( Stem("parlo"), "parl");});
test("parlò -> parl", function() {deepEqual( Stem("parlò"), "parl");});
test("parlovel -> parlovel", function() {deepEqual( Stem("parlovel"), "parlovel");});
test("parlto -> parlt", function() {deepEqual( Stem("parlto"), "parlt");});
test("parma -> parm", function() {deepEqual( Stem("parma"), "parm");});
test("parmalat -> parmalat", function() {deepEqual( Stem("parmalat"), "parmalat");});
test("parmander -> parmander", function() {deepEqual( Stem("parmander"), "parmander");});
test("parmigiani -> parmigian", function() {deepEqual( Stem("parmigiani"), "parmigian");});
test("parola -> parol", function() {deepEqual( Stem("parola"), "parol");});
test("parolacce -> parolacc", function() {deepEqual( Stem("parolacce"), "parolacc");});
test("parolaccia -> parolacc", function() {deepEqual( Stem("parolaccia"), "parolacc");});
test("parole -> parol", function() {deepEqual( Stem("parole"), "parol");});
test("parolina -> parolin", function() {deepEqual( Stem("parolina"), "parolin");});
test("paroline -> parolin", function() {deepEqual( Stem("paroline"), "parolin");});
test("parotidi -> parotid", function() {deepEqual( Stem("parotidi"), "parotid");});
test("parpagliole -> parpagliol", function() {deepEqual( Stem("parpagliole"), "parpagliol");});
test("parquet -> parquet", function() {deepEqual( Stem("parquet"), "parquet");});
test("parrà -> parr", function() {deepEqual( Stem("parrà"), "parr");});
test("parrebbe -> parrebb", function() {deepEqual( Stem("parrebbe"), "parrebb");});
test("parrebbero -> parrebber", function() {deepEqual( Stem("parrebbero"), "parrebber");});
test("parrocchia -> parrocc", function() {deepEqual( Stem("parrocchia"), "parrocc");});
test("parrocchiale -> parrocchial", function() {deepEqual( Stem("parrocchiale"), "parrocchial");});
test("parrocchiana -> parrocchian", function() {deepEqual( Stem("parrocchiana"), "parrocchian");});
test("parrocchie -> parrocc", function() {deepEqual( Stem("parrocchie"), "parrocc");});
test("parrochi -> parroc", function() {deepEqual( Stem("parrochi"), "parroc");});
test("parroci -> parroc", function() {deepEqual( Stem("parroci"), "parroc");});
test("parroco -> parroc", function() {deepEqual( Stem("parroco"), "parroc");});
test("parrucca -> parrucc", function() {deepEqual( Stem("parrucca"), "parrucc");});
test("parsa -> pars", function() {deepEqual( Stem("parsa"), "pars");});
test("parse -> pars", function() {deepEqual( Stem("parse"), "pars");});
test("parsi -> pars", function() {deepEqual( Stem("parsi"), "pars");});
test("parso -> pars", function() {deepEqual( Stem("parso"), "pars");});
test("parsons -> parsons", function() {deepEqual( Stem("parsons"), "parsons");});
test("part -> part", function() {deepEqual( Stem("part"), "part");});
test("parta -> part", function() {deepEqual( Stem("parta"), "part");});
test("parte -> part", function() {deepEqual( Stem("parte"), "part");});
test("partecip -> partecip", function() {deepEqual( Stem("partecip"), "partecip");});
test("partecipa -> partecip", function() {deepEqual( Stem("partecipa"), "partecip");});
test("partecipano -> partecip", function() {deepEqual( Stem("partecipano"), "partecip");});
test("partecipanti -> partecip", function() {deepEqual( Stem("partecipanti"), "partecip");});
test("partecipare -> partecip", function() {deepEqual( Stem("partecipare"), "partecip");});
test("parteciparenno -> parteciparenn", function() {deepEqual( Stem("parteciparenno"), "parteciparenn");});
test("partecipato -> partecip", function() {deepEqual( Stem("partecipato"), "partecip");});
test("partecipava -> partecip", function() {deepEqual( Stem("partecipava"), "partecip");});
test("partecipavano -> partecip", function() {deepEqual( Stem("partecipavano"), "partecip");});
test("partecipaz -> partecipaz", function() {deepEqual( Stem("partecipaz"), "partecipaz");});
test("partecipazione -> partecip", function() {deepEqual( Stem("partecipazione"), "partecip");});
test("partecipazioni -> partecip", function() {deepEqual( Stem("partecipazioni"), "partecip");});
test("partecipe -> partecip", function() {deepEqual( Stem("partecipe"), "partecip");});
test("parteciperà -> partecip", function() {deepEqual( Stem("parteciperà"), "partecip");});
test("parteciperanno -> partecip", function() {deepEqual( Stem("parteciperanno"), "partecip");});
test("partecipi -> partecip", function() {deepEqual( Stem("partecipi"), "partecip");});
test("partecipò -> partecip", function() {deepEqual( Stem("partecipò"), "partecip");});
test("partendo -> part", function() {deepEqual( Stem("partendo"), "part");});
test("partenopeo -> partenope", function() {deepEqual( Stem("partenopeo"), "partenope");});
test("partenza -> partenz", function() {deepEqual( Stem("partenza"), "partenz");});
test("partenze -> partenz", function() {deepEqual( Stem("partenze"), "partenz");});
test("parterre -> parterr", function() {deepEqual( Stem("parterre"), "parterr");});
test("partes -> partes", function() {deepEqual( Stem("partes"), "partes");});
test("parti -> part", function() {deepEqual( Stem("parti"), "part");});
test("partì -> part", function() {deepEqual( Stem("partì"), "part");});
test("partiali -> partial", function() {deepEqual( Stem("partiali"), "partial");});
test("partiamo -> part", function() {deepEqual( Stem("partiamo"), "part");});
test("partiate -> part", function() {deepEqual( Stem("partiate"), "part");});
test("partick -> partick", function() {deepEqual( Stem("partick"), "partick");});
test("particolar -> particol", function() {deepEqual( Stem("particolar"), "particol");});
test("particolare -> particol", function() {deepEqual( Stem("particolare"), "particol");});
test("particolareggiati -> particolaregg", function() {deepEqual( Stem("particolareggiati"), "particolaregg");});
test("particolari -> particolar", function() {deepEqual( Stem("particolari"), "particolar");});
test("particolarità -> particolar", function() {deepEqual( Stem("particolarità"), "particolar");});
test("particolarmente -> particolar", function() {deepEqual( Stem("particolarmente"), "particolar");});
test("partigiane -> partigian", function() {deepEqual( Stem("partigiane"), "partigian");});
test("partigiani -> partigian", function() {deepEqual( Stem("partigiani"), "partigian");});
test("partigiano -> partig", function() {deepEqual( Stem("partigiano"), "partig");});
test("partir -> part", function() {deepEqual( Stem("partir"), "part");});
test("partirà -> part", function() {deepEqual( Stem("partirà"), "part");});
test("partiranno -> part", function() {deepEqual( Stem("partiranno"), "part");});
test("partire -> part", function() {deepEqual( Stem("partire"), "part");});
test("partirebbe -> part", function() {deepEqual( Stem("partirebbe"), "part");});
test("partiremo -> part", function() {deepEqual( Stem("partiremo"), "part");});
test("partirono -> part", function() {deepEqual( Stem("partirono"), "part");});
test("partisse -> partiss", function() {deepEqual( Stem("partisse"), "partiss");});
test("partita -> part", function() {deepEqual( Stem("partita"), "part");});
test("partite -> part", function() {deepEqual( Stem("partite"), "part");});
test("partiti -> part", function() {deepEqual( Stem("partiti"), "part");});
test("partitica -> partit", function() {deepEqual( Stem("partitica"), "partit");});
test("partitici -> partit", function() {deepEqual( Stem("partitici"), "partit");});
test("partitico -> partit", function() {deepEqual( Stem("partitico"), "partit");});
test("partitie -> partit", function() {deepEqual( Stem("partitie"), "partit");});
test("partito -> part", function() {deepEqual( Stem("partito"), "part");});
test("partitocratica -> partitocrat", function() {deepEqual( Stem("partitocratica"), "partitocrat");});
test("partitocrazia -> partitocraz", function() {deepEqual( Stem("partitocrazia"), "partitocraz");});
test("partiva -> part", function() {deepEqual( Stem("partiva"), "part");});
test("partivano -> part", function() {deepEqual( Stem("partivano"), "part");});
test("partner -> partner", function() {deepEqual( Stem("partner"), "partner");});
test("partners -> partners", function() {deepEqual( Stem("partners"), "partners");});
test("parto -> part", function() {deepEqual( Stem("parto"), "part");});
test("partono -> part", function() {deepEqual( Stem("partono"), "part");});
test("partorienti -> partorient", function() {deepEqual( Stem("partorienti"), "partorient");});
test("partorire -> partor", function() {deepEqual( Stem("partorire"), "partor");});
test("party -> party", function() {deepEqual( Stem("party"), "party");});
test("paruta -> par", function() {deepEqual( Stem("paruta"), "par");});
test("parve -> parv", function() {deepEqual( Stem("parve"), "parv");});
test("parver -> parver", function() {deepEqual( Stem("parver"), "parver");});
test("parvero -> parver", function() {deepEqual( Stem("parvero"), "parver");});
test("parziale -> parzial", function() {deepEqual( Stem("parziale"), "parzial");});
test("parzialità -> parzial", function() {deepEqual( Stem("parzialità"), "parzial");});
test("parzialmente -> parzial", function() {deepEqual( Stem("parzialmente"), "parzial");});
test("pascenti -> pascent", function() {deepEqual( Stem("pascenti"), "pascent");});
test("pascolava -> pascol", function() {deepEqual( Stem("pascolava"), "pascol");});
test("pascolo -> pascol", function() {deepEqual( Stem("pascolo"), "pascol");});
test("pascucci -> pascucc", function() {deepEqual( Stem("pascucci"), "pascucc");});
test("paseo -> pase", function() {deepEqual( Stem("paseo"), "pase");});
test("pashkina -> pashkin", function() {deepEqual( Stem("pashkina"), "pashkin");});
test("pasionarià -> pasionar", function() {deepEqual( Stem("pasionarià"), "pasionar");});
test("pasqua -> pasqu", function() {deepEqual( Stem("pasqua"), "pasqu");});
test("pasquale -> pasqual", function() {deepEqual( Stem("pasquale"), "pasqual");});
test("pasquero -> pasquer", function() {deepEqual( Stem("pasquero"), "pasquer");});
test("passa -> pass", function() {deepEqual( Stem("passa"), "pass");});
test("passaggio -> passagg", function() {deepEqual( Stem("passaggio"), "passagg");});
test("passagio -> passag", function() {deepEqual( Stem("passagio"), "passag");});
test("passalacqua -> passalacqu", function() {deepEqual( Stem("passalacqua"), "passalacqu");});
test("passamontagna -> passamontagn", function() {deepEqual( Stem("passamontagna"), "passamontagn");});
test("passan -> passan", function() {deepEqual( Stem("passan"), "passan");});
test("passando -> pass", function() {deepEqual( Stem("passando"), "pass");});
test("passani -> passan", function() {deepEqual( Stem("passani"), "passan");});
test("passano -> pass", function() {deepEqual( Stem("passano"), "pass");});
test("passaporti -> passaport", function() {deepEqual( Stem("passaporti"), "passaport");});
test("passaporto -> passaport", function() {deepEqual( Stem("passaporto"), "passaport");});
test("passar -> pass", function() {deepEqual( Stem("passar"), "pass");});
test("passare -> pass", function() {deepEqual( Stem("passare"), "pass");});
test("passarella -> passarell", function() {deepEqual( Stem("passarella"), "passarell");});
test("passarla -> pass", function() {deepEqual( Stem("passarla"), "pass");});
test("passarli -> pass", function() {deepEqual( Stem("passarli"), "pass");});
test("passarlo -> pass", function() {deepEqual( Stem("passarlo"), "pass");});
test("passarne -> pass", function() {deepEqual( Stem("passarne"), "pass");});
test("passaron -> passaron", function() {deepEqual( Stem("passaron"), "passaron");});
test("passarono -> pass", function() {deepEqual( Stem("passarono"), "pass");});
test("passarsi -> pass", function() {deepEqual( Stem("passarsi"), "pass");});
test("passarvela -> pass", function() {deepEqual( Stem("passarvela"), "pass");});
test("passarvi -> pass", function() {deepEqual( Stem("passarvi"), "pass");});
test("passasse -> pass", function() {deepEqual( Stem("passasse"), "pass");});
test("passassero -> pass", function() {deepEqual( Stem("passassero"), "pass");});
test("passata -> pass", function() {deepEqual( Stem("passata"), "pass");});
test("passate -> pass", function() {deepEqual( Stem("passate"), "pass");});
test("passategli -> passategl", function() {deepEqual( Stem("passategli"), "passategl");});
test("passatempi -> passatemp", function() {deepEqual( Stem("passatempi"), "passatemp");});
test("passatempo -> passatemp", function() {deepEqual( Stem("passatempo"), "passatemp");});
test("passati -> pass", function() {deepEqual( Stem("passati"), "pass");});
test("passato -> pass", function() {deepEqual( Stem("passato"), "pass");});
test("passatò -> passat", function() {deepEqual( Stem("passatò"), "passat");});
test("passava -> pass", function() {deepEqual( Stem("passava"), "pass");});
test("passavan -> passavan", function() {deepEqual( Stem("passavan"), "passavan");});
test("passavano -> pass", function() {deepEqual( Stem("passavano"), "pass");});
test("passe -> pass", function() {deepEqual( Stem("passe"), "pass");});
test("passeggeri -> passegger", function() {deepEqual( Stem("passeggeri"), "passegger");});
test("passeggiando -> passegg", function() {deepEqual( Stem("passeggiando"), "passegg");});
test("passeggiare -> passegg", function() {deepEqual( Stem("passeggiare"), "passegg");});
test("passeggiata -> passegg", function() {deepEqual( Stem("passeggiata"), "passegg");});
test("passeggiate -> passegg", function() {deepEqual( Stem("passeggiate"), "passegg");});
test("passeggiato -> passegg", function() {deepEqual( Stem("passeggiato"), "passegg");});
test("passeggiera -> passeggier", function() {deepEqual( Stem("passeggiera"), "passeggier");});
test("passeggiere -> passegg", function() {deepEqual( Stem("passeggiere"), "passegg");});
test("passeggieri -> passeggier", function() {deepEqual( Stem("passeggieri"), "passeggier");});
test("passeggiero -> passeggier", function() {deepEqual( Stem("passeggiero"), "passeggier");});
test("passerà -> pass", function() {deepEqual( Stem("passerà"), "pass");});
test("passeranno -> pass", function() {deepEqual( Stem("passeranno"), "pass");});
test("passere -> pass", function() {deepEqual( Stem("passere"), "pass");});
test("passerebbe -> pass", function() {deepEqual( Stem("passerebbe"), "pass");});
test("passerella -> passerell", function() {deepEqual( Stem("passerella"), "passerell");});
test("passeremo -> pass", function() {deepEqual( Stem("passeremo"), "pass");});
test("passi -> pass", function() {deepEqual( Stem("passi"), "pass");});
test("passiamo -> pass", function() {deepEqual( Stem("passiamo"), "pass");});
test("passibili -> passibil", function() {deepEqual( Stem("passibili"), "passibil");});
test("passim -> passim", function() {deepEqual( Stem("passim"), "passim");});
test("passini -> passin", function() {deepEqual( Stem("passini"), "passin");});
test("passion -> passion", function() {deepEqual( Stem("passion"), "passion");});
test("passione -> passion", function() {deepEqual( Stem("passione"), "passion");});
test("passioni -> passion", function() {deepEqual( Stem("passioni"), "passion");});
test("passiva -> pass", function() {deepEqual( Stem("passiva"), "pass");});
test("passivi -> pass", function() {deepEqual( Stem("passivi"), "pass");});
test("passivo -> pass", function() {deepEqual( Stem("passivo"), "pass");});
test("passler -> passler", function() {deepEqual( Stem("passler"), "passler");});
test("passo -> pass", function() {deepEqual( Stem("passo"), "pass");});
test("passò -> pass", function() {deepEqual( Stem("passò"), "pass");});
test("pasta -> past", function() {deepEqual( Stem("pasta"), "past");});
test("pastari -> pastar", function() {deepEqual( Stem("pastari"), "pastar");});
test("pastaria -> pastar", function() {deepEqual( Stem("pastaria"), "pastar");});
test("paste -> past", function() {deepEqual( Stem("paste"), "past");});
test("pasticche -> pasticc", function() {deepEqual( Stem("pasticche"), "pasticc");});
test("pasticci -> pasticc", function() {deepEqual( Stem("pasticci"), "pasticc");});
test("pasticcio -> pasticc", function() {deepEqual( Stem("pasticcio"), "pasticc");});
test("pastiglia -> pastigl", function() {deepEqual( Stem("pastiglia"), "pastigl");});
test("pastiglie -> pastigl", function() {deepEqual( Stem("pastiglie"), "pastigl");});
test("pastine -> pastin", function() {deepEqual( Stem("pastine"), "pastin");});
test("pasto -> past", function() {deepEqual( Stem("pasto"), "past");});
test("pastocchia -> pastocc", function() {deepEqual( Stem("pastocchia"), "pastocc");});
test("pastorale -> pastoral", function() {deepEqual( Stem("pastorale"), "pastoral");});
test("pastorali -> pastoral", function() {deepEqual( Stem("pastorali"), "pastoral");});
test("pastore -> pastor", function() {deepEqual( Stem("pastore"), "pastor");});
test("pastori -> pastor", function() {deepEqual( Stem("pastori"), "pastor");});
test("pastorizia -> pastoriz", function() {deepEqual( Stem("pastorizia"), "pastoriz");});
test("pasturo -> pastur", function() {deepEqual( Stem("pasturo"), "pastur");});
test("pat -> pat", function() {deepEqual( Stem("pat"), "pat");});
test("patatà -> patat", function() {deepEqual( Stem("patatà"), "patat");});
test("patate -> pat", function() {deepEqual( Stem("patate"), "pat");});
test("patavina -> patavin", function() {deepEqual( Stem("patavina"), "patavin");});
test("patente -> patent", function() {deepEqual( Stem("patente"), "patent");});
test("patenti -> patent", function() {deepEqual( Stem("patenti"), "patent");});
test("paterna -> patern", function() {deepEqual( Stem("paterna"), "patern");});
test("paterni -> patern", function() {deepEqual( Stem("paterni"), "patern");});
test("paternita -> patern", function() {deepEqual( Stem("paternita"), "patern");});
test("paternità -> patern", function() {deepEqual( Stem("paternità"), "patern");});
test("paterniti -> patern", function() {deepEqual( Stem("paterniti"), "patern");});
test("paternostri -> paternostr", function() {deepEqual( Stem("paternostri"), "paternostr");});
test("paterson -> paterson", function() {deepEqual( Stem("paterson"), "paterson");});
test("patetica -> patet", function() {deepEqual( Stem("patetica"), "patet");});
test("patimenti -> pat", function() {deepEqual( Stem("patimenti"), "pat");});
test("patimento -> pat", function() {deepEqual( Stem("patimento"), "pat");});
test("patina -> patin", function() {deepEqual( Stem("patina"), "patin");});
test("patinate -> patin", function() {deepEqual( Stem("patinate"), "patin");});
test("patir -> pat", function() {deepEqual( Stem("patir"), "pat");});
test("patire -> pat", function() {deepEqual( Stem("patire"), "pat");});
test("patirebbero -> pat", function() {deepEqual( Stem("patirebbero"), "pat");});
test("patiscan -> patiscan", function() {deepEqual( Stem("patiscan"), "patiscan");});
test("patisce -> pat", function() {deepEqual( Stem("patisce"), "pat");});
test("patisco -> pat", function() {deepEqual( Stem("patisco"), "pat");});
test("patiscono -> pat", function() {deepEqual( Stem("patiscono"), "pat");});
test("patiti -> pat", function() {deepEqual( Stem("patiti"), "pat");});
test("patito -> pat", function() {deepEqual( Stem("patito"), "pat");});
test("pativa -> pat", function() {deepEqual( Stem("pativa"), "pat");});
test("patologia -> patolog", function() {deepEqual( Stem("patologia"), "patolog");});
test("patologie -> patolog", function() {deepEqual( Stem("patologie"), "patolog");});
test("patria -> patr", function() {deepEqual( Stem("patria"), "patr");});
test("patriae -> patria", function() {deepEqual( Stem("patriae"), "patria");});
test("patriarchi -> patriarc", function() {deepEqual( Stem("patriarchi"), "patriarc");});
test("patrick -> patrick", function() {deepEqual( Stem("patrick"), "patrick");});
test("patrimoni -> patrimon", function() {deepEqual( Stem("patrimoni"), "patrimon");});
test("patrimonio -> patrimon", function() {deepEqual( Stem("patrimonio"), "patrimon");});
test("patrizia -> patriz", function() {deepEqual( Stem("patrizia"), "patriz");});
test("patrocinio -> patrocin", function() {deepEqual( Stem("patrocinio"), "patrocin");});
test("patrona -> patron", function() {deepEqual( Stem("patrona"), "patron");});
test("patteggiamento -> pattegg", function() {deepEqual( Stem("patteggiamento"), "pattegg");});
test("patti -> patt", function() {deepEqual( Stem("patti"), "patt");});
test("pattinaggio -> pattinagg", function() {deepEqual( Stem("pattinaggio"), "pattinagg");});
test("pattino -> pattin", function() {deepEqual( Stem("pattino"), "pattin");});
test("patto -> patt", function() {deepEqual( Stem("patto"), "patt");});
test("pattuglia -> pattugl", function() {deepEqual( Stem("pattuglia"), "pattugl");});
test("pattugliamento -> pattugl", function() {deepEqual( Stem("pattugliamento"), "pattugl");});
test("pattuita -> pattu", function() {deepEqual( Stem("pattuita"), "pattu");});
test("paul -> paul", function() {deepEqual( Stem("paul"), "paul");});
test("paula -> paul", function() {deepEqual( Stem("paula"), "paul");});
test("paulo -> paul", function() {deepEqual( Stem("paulo"), "paul");});
test("paura -> paur", function() {deepEqual( Stem("paura"), "paur");});
test("pauraccia -> pauracc", function() {deepEqual( Stem("pauraccia"), "pauracc");});
test("paure -> paur", function() {deepEqual( Stem("paure"), "paur");});
test("paurosa -> pauros", function() {deepEqual( Stem("paurosa"), "pauros");});
test("pauroso -> pauros", function() {deepEqual( Stem("pauroso"), "pauros");});
test("pausa -> paus", function() {deepEqual( Stem("pausa"), "paus");});
test("pav -> pav", function() {deepEqual( Stem("pav"), "pav");});
test("pavan -> pavan", function() {deepEqual( Stem("pavan"), "pavan");});
test("pavel -> pavel", function() {deepEqual( Stem("pavel"), "pavel");});
test("pavia -> pav", function() {deepEqual( Stem("pavia"), "pav");});
test("paviato -> pav", function() {deepEqual( Stem("paviato"), "pav");});
test("pavimento -> pav", function() {deepEqual( Stem("pavimento"), "pav");});
test("pavone -> pavon", function() {deepEqual( Stem("pavone"), "pavon");});
test("paxton -> paxton", function() {deepEqual( Stem("paxton"), "paxton");});
test("paziente -> pazient", function() {deepEqual( Stem("paziente"), "pazient");});
test("pazienti -> pazient", function() {deepEqual( Stem("pazienti"), "pazient");});
test("pazienza -> pazienz", function() {deepEqual( Stem("pazienza"), "pazienz");});
test("pazzaglia -> pazzagl", function() {deepEqual( Stem("pazzaglia"), "pazzagl");});
test("pazzamente -> pazz", function() {deepEqual( Stem("pazzamente"), "pazz");});
test("pazzia -> pazz", function() {deepEqual( Stem("pazzia"), "pazz");});
test("pazzie -> pazz", function() {deepEqual( Stem("pazzie"), "pazz");});
test("pazzo -> pazz", function() {deepEqual( Stem("pazzo"), "pazz");});
test("pb -> pb", function() {deepEqual( Stem("pb"), "pb");});
test("pci -> pci", function() {deepEqual( Stem("pci"), "pci");});
test("pcm -> pcm", function() {deepEqual( Stem("pcm"), "pcm");});
test("pdg -> pdg", function() {deepEqual( Stem("pdg"), "pdg");});
test("pdl -> pdl", function() {deepEqual( Stem("pdl"), "pdl");});
test("pds -> pds", function() {deepEqual( Stem("pds"), "pds");});
test("pe -> pe", function() {deepEqual( Stem("pe"), "pe");});
test("pearl -> pearl", function() {deepEqual( Stem("pearl"), "pearl");});
test("pecca -> pecc", function() {deepEqual( Stem("pecca"), "pecc");});
test("peccatacci -> peccatacc", function() {deepEqual( Stem("peccatacci"), "peccatacc");});
test("peccati -> pecc", function() {deepEqual( Stem("peccati"), "pecc");});
test("peccato -> pecc", function() {deepEqual( Stem("peccato"), "pecc");});
test("pecchia -> pecc", function() {deepEqual( Stem("pecchia"), "pecc");});
test("pechino -> pechin", function() {deepEqual( Stem("pechino"), "pechin");});
test("pecora -> pecor", function() {deepEqual( Stem("pecora"), "pecor");});
test("pecoraro -> pecorar", function() {deepEqual( Stem("pecoraro"), "pecorar");});
test("pecore -> pecor", function() {deepEqual( Stem("pecore"), "pecor");});
test("pecorella -> pecorell", function() {deepEqual( Stem("pecorella"), "pecorell");});
test("pecorelle -> pecorell", function() {deepEqual( Stem("pecorelle"), "pecorell");});
test("peculato -> pecul", function() {deepEqual( Stem("peculato"), "pecul");});
test("peculiari -> peculiar", function() {deepEqual( Stem("peculiari"), "peculiar");});
test("peculiarità -> peculiar", function() {deepEqual( Stem("peculiarità"), "peculiar");});
test("pecuniaria -> pecuniar", function() {deepEqual( Stem("pecuniaria"), "pecuniar");});
test("pecuniarie -> pecuniar", function() {deepEqual( Stem("pecuniarie"), "pecuniar");});
test("pedagogia -> pedagog", function() {deepEqual( Stem("pedagogia"), "pedagog");});
test("pedata -> ped", function() {deepEqual( Stem("pedata"), "ped");});
test("pedate -> ped", function() {deepEqual( Stem("pedate"), "ped");});
test("pedestre -> pedestr", function() {deepEqual( Stem("pedestre"), "pedestr");});
test("pedestri -> pedestr", function() {deepEqual( Stem("pedestri"), "pedestr");});
test("pediatrico -> pediatr", function() {deepEqual( Stem("pediatrico"), "pediatr");});
test("pedonato -> pedon", function() {deepEqual( Stem("pedonato"), "pedon");});
test("pedone -> pedon", function() {deepEqual( Stem("pedone"), "pedon");});
test("pedoni -> pedon", function() {deepEqual( Stem("pedoni"), "pedon");});
test("pedrazzi -> pedrazz", function() {deepEqual( Stem("pedrazzi"), "pedrazz");});
test("pedro -> pedr", function() {deepEqual( Stem("pedro"), "pedr");});
test("pedroni -> pedron", function() {deepEqual( Stem("pedroni"), "pedron");});
test("peggi -> pegg", function() {deepEqual( Stem("peggi"), "pegg");});
test("peggio -> pegg", function() {deepEqual( Stem("peggio"), "pegg");});
test("peggior -> peggior", function() {deepEqual( Stem("peggior"), "peggior");});
test("peggiora -> peggior", function() {deepEqual( Stem("peggiora"), "peggior");});
test("peggioramento -> peggior", function() {deepEqual( Stem("peggioramento"), "peggior");});
test("peggiorar -> peggior", function() {deepEqual( Stem("peggiorar"), "peggior");});
test("peggiorata -> peggior", function() {deepEqual( Stem("peggiorata"), "peggior");});
test("peggiore -> peggior", function() {deepEqual( Stem("peggiore"), "peggior");});
test("peggiori -> peggior", function() {deepEqual( Stem("peggiori"), "peggior");});
test("pegno -> pegn", function() {deepEqual( Stem("pegno"), "pegn");});
test("pela -> pel", function() {deepEqual( Stem("pela"), "pel");});
test("pelata -> pel", function() {deepEqual( Stem("pelata"), "pel");});
test("pelato -> pel", function() {deepEqual( Stem("pelato"), "pel");});
test("pelè -> pel", function() {deepEqual( Stem("pelè"), "pel");});
test("peli -> pel", function() {deepEqual( Stem("peli"), "pel");});
test("pelle -> pell", function() {deepEqual( Stem("pelle"), "pell");});
test("pellegrinaggio -> pellegrinagg", function() {deepEqual( Stem("pellegrinaggio"), "pellegrinagg");});
test("pellegrini -> pellegrin", function() {deepEqual( Stem("pellegrini"), "pellegrin");});
test("pellegrino -> pellegrin", function() {deepEqual( Stem("pellegrino"), "pellegrin");});
test("pellemberg -> pellemberg", function() {deepEqual( Stem("pellemberg"), "pellemberg");});
test("pellicanò -> pellican", function() {deepEqual( Stem("pellicanò"), "pellican");});
test("pelliccia -> pellicc", function() {deepEqual( Stem("pelliccia"), "pellicc");});
test("pellicola -> pellicol", function() {deepEqual( Stem("pellicola"), "pellicol");});
test("pelo -> pel", function() {deepEqual( Stem("pelo"), "pel");});
test("pelosa -> pelos", function() {deepEqual( Stem("pelosa"), "pelos");});
test("pen -> pen", function() {deepEqual( Stem("pen"), "pen");});
test("pena -> pen", function() {deepEqual( Stem("pena"), "pen");});
test("penale -> penal", function() {deepEqual( Stem("penale"), "penal");});
test("penali -> penal", function() {deepEqual( Stem("penali"), "penal");});
test("penalista -> penal", function() {deepEqual( Stem("penalista"), "penal");});
test("penalità -> penal", function() {deepEqual( Stem("penalità"), "penal");});
test("penalizzato -> penalizz", function() {deepEqual( Stem("penalizzato"), "penalizz");});
test("penalizzazione -> penalizz", function() {deepEqual( Stem("penalizzazione"), "penalizz");});
test("penare -> pen", function() {deepEqual( Stem("penare"), "pen");});
test("penarono -> pen", function() {deepEqual( Stem("penarono"), "pen");});
test("penasa -> penas", function() {deepEqual( Stem("penasa"), "penas");});
test("penato -> pen", function() {deepEqual( Stem("penato"), "pen");});
test("pence -> penc", function() {deepEqual( Stem("pence"), "penc");});
test("pendente -> pendent", function() {deepEqual( Stem("pendente"), "pendent");});
test("pendenti -> pendent", function() {deepEqual( Stem("pendenti"), "pendent");});
test("pendere -> pend", function() {deepEqual( Stem("pendere"), "pend");});
test("pendeva -> pend", function() {deepEqual( Stem("pendeva"), "pend");});
test("pendevano -> pend", function() {deepEqual( Stem("pendevano"), "pend");});
test("pendìi -> pendì", function() {deepEqual( Stem("pendìi"), "pendì");});
test("pendìo -> pendì", function() {deepEqual( Stem("pendìo"), "pendì");});
test("pendolari -> pendolar", function() {deepEqual( Stem("pendolari"), "pendolar");});
test("pendoni -> pendon", function() {deepEqual( Stem("pendoni"), "pendon");});
test("pene -> pen", function() {deepEqual( Stem("pene"), "pen");});
test("penetrando -> penetr", function() {deepEqual( Stem("penetrando"), "penetr");});
test("penetrano -> penetr", function() {deepEqual( Stem("penetrano"), "penetr");});
test("penetrante -> penetr", function() {deepEqual( Stem("penetrante"), "penetr");});
test("penetrantissimo -> penetrantissim", function() {deepEqual( Stem("penetrantissimo"), "penetrantissim");});
test("penetrar -> penetr", function() {deepEqual( Stem("penetrar"), "penetr");});
test("penetrare -> penetr", function() {deepEqual( Stem("penetrare"), "penetr");});
test("penetrati -> penetr", function() {deepEqual( Stem("penetrati"), "penetr");});
test("penetrato -> penetr", function() {deepEqual( Stem("penetrato"), "penetr");});
test("penetrazione -> penetr", function() {deepEqual( Stem("penetrazione"), "penetr");});
test("penetrò -> penetr", function() {deepEqual( Stem("penetrò"), "penetr");});
test("penisola -> penisol", function() {deepEqual( Stem("penisola"), "penisol");});
test("penitente -> penitent", function() {deepEqual( Stem("penitente"), "penitent");});
test("penitenza -> penitent", function() {deepEqual( Stem("penitenza"), "penitent");});
test("penitenze -> penitent", function() {deepEqual( Stem("penitenze"), "penitent");});
test("penitenziari -> penitenziar", function() {deepEqual( Stem("penitenziari"), "penitenziar");});
test("penitenziaria -> penitenziar", function() {deepEqual( Stem("penitenziaria"), "penitenziar");});
test("penitenziario -> penitenziar", function() {deepEqual( Stem("penitenziario"), "penitenziar");});
test("penitenziere -> penitenz", function() {deepEqual( Stem("penitenziere"), "penitenz");});
test("penna -> penn", function() {deepEqual( Stem("penna"), "penn");});
test("pennacchi -> pennacc", function() {deepEqual( Stem("pennacchi"), "pennacc");});
test("pennacchioli -> pennacchiol", function() {deepEqual( Stem("pennacchioli"), "pennacchiol");});
test("pennarelli -> pennarell", function() {deepEqual( Stem("pennarelli"), "pennarell");});
test("penne -> penn", function() {deepEqual( Stem("penne"), "penn");});
test("pennelli -> pennell", function() {deepEqual( Stem("pennelli"), "pennell");});
test("pennello -> pennell", function() {deepEqual( Stem("pennello"), "pennell");});
test("pennivendolo -> penniv", function() {deepEqual( Stem("pennivendolo"), "penniv");});
test("pennuto -> penn", function() {deepEqual( Stem("pennuto"), "penn");});
test("penò -> pen", function() {deepEqual( Stem("penò"), "pen");});
test("penosa -> penos", function() {deepEqual( Stem("penosa"), "penos");});
test("penosi -> penos", function() {deepEqual( Stem("penosi"), "penos");});
test("penoso -> penos", function() {deepEqual( Stem("penoso"), "penos");});
test("pensa -> pens", function() {deepEqual( Stem("pensa"), "pens");});
test("pensabile -> pensabil", function() {deepEqual( Stem("pensabile"), "pensabil");});
test("pensaci -> pensac", function() {deepEqual( Stem("pensaci"), "pensac");});
test("pensai -> pensa", function() {deepEqual( Stem("pensai"), "pensa");});
test("pensando -> pens", function() {deepEqual( Stem("pensando"), "pens");});
test("pensandoci -> pens", function() {deepEqual( Stem("pensandoci"), "pens");});
test("pensano -> pens", function() {deepEqual( Stem("pensano"), "pens");});
test("pensar -> pens", function() {deepEqual( Stem("pensar"), "pens");});
test("pensarà -> pensar", function() {deepEqual( Stem("pensarà"), "pensar");});
test("pensarci -> pens", function() {deepEqual( Stem("pensarci"), "pens");});
test("pensare -> pens", function() {deepEqual( Stem("pensare"), "pens");});
test("pensarne -> pens", function() {deepEqual( Stem("pensarne"), "pens");});
test("pensaron -> pensaron", function() {deepEqual( Stem("pensaron"), "pensaron");});
test("pensarono -> pens", function() {deepEqual( Stem("pensarono"), "pens");});
test("pensasse -> pens", function() {deepEqual( Stem("pensasse"), "pens");});
test("pensassero -> pens", function() {deepEqual( Stem("pensassero"), "pens");});
test("pensassi -> pens", function() {deepEqual( Stem("pensassi"), "pens");});
test("pensata -> pens", function() {deepEqual( Stem("pensata"), "pens");});
test("pensate -> pens", function() {deepEqual( Stem("pensate"), "pens");});
test("pensateci -> pensatec", function() {deepEqual( Stem("pensateci"), "pensatec");});
test("pensato -> pens", function() {deepEqual( Stem("pensato"), "pens");});
test("pensatoci -> pensatoc", function() {deepEqual( Stem("pensatoci"), "pensatoc");});
test("pensava -> pens", function() {deepEqual( Stem("pensava"), "pens");});
test("pensavan -> pensavan", function() {deepEqual( Stem("pensavan"), "pensavan");});
test("pensavano -> pens", function() {deepEqual( Stem("pensavano"), "pens");});
test("pensavo -> pens", function() {deepEqual( Stem("pensavo"), "pens");});
test("penserà -> pens", function() {deepEqual( Stem("penserà"), "pens");});
test("penseranno -> pens", function() {deepEqual( Stem("penseranno"), "pens");});
test("penserebbe -> pens", function() {deepEqual( Stem("penserebbe"), "pens");});
test("penserò -> pens", function() {deepEqual( Stem("penserò"), "pens");});
test("pensi -> pens", function() {deepEqual( Stem("pensi"), "pens");});
test("pensiam -> pensiam", function() {deepEqual( Stem("pensiam"), "pensiam");});
test("pensiamo -> pens", function() {deepEqual( Stem("pensiamo"), "pens");});
test("pensiate -> pens", function() {deepEqual( Stem("pensiate"), "pens");});
test("pensier -> pensier", function() {deepEqual( Stem("pensier"), "pensier");});
test("pensieri -> pensier", function() {deepEqual( Stem("pensieri"), "pensier");});
test("pensierino -> pensierin", function() {deepEqual( Stem("pensierino"), "pensierin");});
test("pensiero -> pensier", function() {deepEqual( Stem("pensiero"), "pensier");});
test("pensierosa -> pensier", function() {deepEqual( Stem("pensierosa"), "pensier");});
test("pensierosi -> pensier", function() {deepEqual( Stem("pensierosi"), "pensier");});
test("pensieroso -> pensier", function() {deepEqual( Stem("pensieroso"), "pensier");});
test("pensino -> pensin", function() {deepEqual( Stem("pensino"), "pensin");});
test("pensionati -> pension", function() {deepEqual( Stem("pensionati"), "pension");});
test("pensionatì -> pensionat", function() {deepEqual( Stem("pensionatì"), "pensionat");});
test("pensionato -> pension", function() {deepEqual( Stem("pensionato"), "pension");});
test("pensione -> pension", function() {deepEqual( Stem("pensione"), "pension");});
test("pensioni -> pension", function() {deepEqual( Stem("pensioni"), "pension");});
test("penso -> pens", function() {deepEqual( Stem("penso"), "pens");});
test("pensò -> pens", function() {deepEqual( Stem("pensò"), "pens");});
test("penta -> pent", function() {deepEqual( Stem("penta"), "pent");});
test("pentecoste -> pentecost", function() {deepEqual( Stem("pentecoste"), "pentecost");});
test("pentì -> pent", function() {deepEqual( Stem("pentì"), "pent");});
test("pentimenti -> pent", function() {deepEqual( Stem("pentimenti"), "pent");});
test("pentimento -> pent", function() {deepEqual( Stem("pentimento"), "pent");});
test("pentimentuccio -> pentimentucc", function() {deepEqual( Stem("pentimentuccio"), "pentimentucc");});
test("pentirà -> pent", function() {deepEqual( Stem("pentirà"), "pent");});
test("pentirsi -> pent", function() {deepEqual( Stem("pentirsi"), "pent");});
test("pentita -> pent", function() {deepEqual( Stem("pentita"), "pent");});
test("pentito -> pent", function() {deepEqual( Stem("pentito"), "pent");});
test("pentiva -> pent", function() {deepEqual( Stem("pentiva"), "pent");});
test("pento -> pent", function() {deepEqual( Stem("pento"), "pent");});
test("pentola -> pentol", function() {deepEqual( Stem("pentola"), "pentol");});
test("pentolaccia -> pentolacc", function() {deepEqual( Stem("pentolaccia"), "pentolacc");});
test("pentole -> pentol", function() {deepEqual( Stem("pentole"), "pentol");});
test("pentolino -> pentolin", function() {deepEqual( Stem("pentolino"), "pentolin");});
test("penuria -> penur", function() {deepEqual( Stem("penuria"), "penur");});
test("penzoloni -> penzolon", function() {deepEqual( Stem("penzoloni"), "penzolon");});
test("peo -> peo", function() {deepEqual( Stem("peo"), "peo");});
test("peoplè -> peopl", function() {deepEqual( Stem("peoplè"), "peopl");});
test("pepe -> pep", function() {deepEqual( Stem("pepe"), "pep");});
test("peppe -> pepp", function() {deepEqual( Stem("peppe"), "pepp");});
test("peppino -> peppin", function() {deepEqual( Stem("peppino"), "peppin");});
test("peqin -> peqin", function() {deepEqual( Stem("peqin"), "peqin");});
test("per -> per", function() {deepEqual( Stem("per"), "per");});
test("pera -> per", function() {deepEqual( Stem("pera"), "per");});
test("peraboni -> perabon", function() {deepEqual( Stem("peraboni"), "perabon");});
test("peraltro -> peraltr", function() {deepEqual( Stem("peraltro"), "peraltr");});
test("percentuale -> percentual", function() {deepEqual( Stem("percentuale"), "percentual");});
test("percentuali -> percentual", function() {deepEqual( Stem("percentuali"), "percentual");});
test("percepiamo -> percep", function() {deepEqual( Stem("percepiamo"), "percep");});
test("percepiranno -> percep", function() {deepEqual( Stem("percepiranno"), "percep");});
test("percepire -> percep", function() {deepEqual( Stem("percepire"), "percep");});
test("percepisce -> percep", function() {deepEqual( Stem("percepisce"), "percep");});
test("perche -> perc", function() {deepEqual( Stem("perche"), "perc");});
test("perché -> perc", function() {deepEqual( Stem("perché"), "perc");});
test("perchè -> perc", function() {deepEqual( Stem("perchè"), "perc");});
test("perciò -> perc", function() {deepEqual( Stem("perciò"), "perc");});
test("percorrere -> percorr", function() {deepEqual( Stem("percorrere"), "percorr");});
test("percorribile -> percorr", function() {deepEqual( Stem("percorribile"), "percorr");});
test("percorsa -> percors", function() {deepEqual( Stem("percorsa"), "percors");});
test("percorsi -> percors", function() {deepEqual( Stem("percorsi"), "percors");});
test("percorso -> percors", function() {deepEqual( Stem("percorso"), "percors");});
test("percosse -> percoss", function() {deepEqual( Stem("percosse"), "percoss");});
test("percotere -> percot", function() {deepEqual( Stem("percotere"), "percot");});
test("perda -> perd", function() {deepEqual( Stem("perda"), "perd");});
test("perde -> perd", function() {deepEqual( Stem("perde"), "perd");});
test("perdendo -> perd", function() {deepEqual( Stem("perdendo"), "perd");});
test("perdendosi -> perd", function() {deepEqual( Stem("perdendosi"), "perd");});
test("perder -> perder", function() {deepEqual( Stem("perder"), "perder");});
test("perderà -> perd", function() {deepEqual( Stem("perderà"), "perd");});
test("perdere -> perd", function() {deepEqual( Stem("perdere"), "perd");});
test("perderla -> perd", function() {deepEqual( Stem("perderla"), "perd");});
test("perderli -> perd", function() {deepEqual( Stem("perderli"), "perd");});
test("perdersi -> perd", function() {deepEqual( Stem("perdersi"), "perd");});
test("perderti -> perd", function() {deepEqual( Stem("perderti"), "perd");});
test("perdete -> perd", function() {deepEqual( Stem("perdete"), "perd");});
test("perdeva -> perd", function() {deepEqual( Stem("perdeva"), "perd");});
test("perdevan -> perdevan", function() {deepEqual( Stem("perdevan"), "perdevan");});
test("perdevano -> perd", function() {deepEqual( Stem("perdevano"), "perd");});
test("perdiam -> perdiam", function() {deepEqual( Stem("perdiam"), "perdiam");});
test("perdita -> perd", function() {deepEqual( Stem("perdita"), "perd");});
test("perdite -> perd", function() {deepEqual( Stem("perdite"), "perd");});
test("perditè -> perdit", function() {deepEqual( Stem("perditè"), "perdit");});
test("perdona -> perdon", function() {deepEqual( Stem("perdona"), "perdon");});
test("perdonami -> perdonam", function() {deepEqual( Stem("perdonami"), "perdonam");});
test("perdonare -> perdon", function() {deepEqual( Stem("perdonare"), "perdon");});
test("perdonarvi -> perdon", function() {deepEqual( Stem("perdonarvi"), "perdon");});
test("perdonata -> perdon", function() {deepEqual( Stem("perdonata"), "perdon");});
test("perdonateci -> perdonatec", function() {deepEqual( Stem("perdonateci"), "perdonatec");});
test("perdonatemi -> perdonatem", function() {deepEqual( Stem("perdonatemi"), "perdonatem");});
test("perdonato -> perdon", function() {deepEqual( Stem("perdonato"), "perdon");});
test("perdonavano -> perdon", function() {deepEqual( Stem("perdonavano"), "perdon");});
test("perdone -> perdon", function() {deepEqual( Stem("perdone"), "perdon");});
test("perdonerà -> perdon", function() {deepEqual( Stem("perdonerà"), "perdon");});
test("perdoni -> perdon", function() {deepEqual( Stem("perdoni"), "perdon");});
test("perdonino -> perdonin", function() {deepEqual( Stem("perdonino"), "perdonin");});
test("perdono -> perd", function() {deepEqual( Stem("perdono"), "perd");});
test("perdurante -> perdur", function() {deepEqual( Stem("perdurante"), "perdur");});
test("perduta -> perd", function() {deepEqual( Stem("perduta"), "perd");});
test("perdute -> perd", function() {deepEqual( Stem("perdute"), "perd");});
test("perduti -> perd", function() {deepEqual( Stem("perduti"), "perd");});
test("perduto -> perd", function() {deepEqual( Stem("perduto"), "perd");});
test("perenne -> perenn", function() {deepEqual( Stem("perenne"), "perenn");});
test("perentoria -> perentor", function() {deepEqual( Stem("perentoria"), "perentor");});
test("peres -> peres", function() {deepEqual( Stem("peres"), "peres");});
test("perfetta -> perfett", function() {deepEqual( Stem("perfetta"), "perfett");});
test("perfettamente -> perfett", function() {deepEqual( Stem("perfettamente"), "perfett");});
test("perfette -> perfett", function() {deepEqual( Stem("perfette"), "perfett");});
test("perfetti -> perfett", function() {deepEqual( Stem("perfetti"), "perfett");});
test("perfetto -> perfett", function() {deepEqual( Stem("perfetto"), "perfett");});
test("perfezionabile -> perfezion", function() {deepEqual( Stem("perfezionabile"), "perfezion");});
test("perfezionamento -> perfezion", function() {deepEqual( Stem("perfezionamento"), "perfezion");});
test("perfezionare -> perfezion", function() {deepEqual( Stem("perfezionare"), "perfezion");});
test("perfezionata -> perfezion", function() {deepEqual( Stem("perfezionata"), "perfezion");});
test("perfezione -> perfezion", function() {deepEqual( Stem("perfezione"), "perfezion");});
test("perfida -> perfid", function() {deepEqual( Stem("perfida"), "perfid");});
test("perfidia -> perfid", function() {deepEqual( Stem("perfidia"), "perfid");});
test("perfino -> perfin", function() {deepEqual( Stem("perfino"), "perfin");});
test("performance -> performanc", function() {deepEqual( Stem("performance"), "performanc");});
test("pericolassero -> pericol", function() {deepEqual( Stem("pericolassero"), "pericol");});
test("pericoli -> pericol", function() {deepEqual( Stem("pericoli"), "pericol");});
test("pericolo -> pericol", function() {deepEqual( Stem("pericolo"), "pericol");});
test("pericolosa -> pericol", function() {deepEqual( Stem("pericolosa"), "pericol");});
test("pericolosamente -> pericol", function() {deepEqual( Stem("pericolosamente"), "pericol");});
test("pericolose -> pericol", function() {deepEqual( Stem("pericolose"), "pericol");});
test("pericolosi -> pericol", function() {deepEqual( Stem("pericolosi"), "pericol");});
test("pericolosità -> pericolos", function() {deepEqual( Stem("pericolosità"), "pericolos");});
test("pericoloso -> pericol", function() {deepEqual( Stem("pericoloso"), "pericol");});
test("perierat -> perierat", function() {deepEqual( Stem("perierat"), "perierat");});
test("periferia -> perifer", function() {deepEqual( Stem("periferia"), "perifer");});
test("periferici -> perifer", function() {deepEqual( Stem("periferici"), "perifer");});
test("perifrasi -> perifras", function() {deepEqual( Stem("perifrasi"), "perifras");});
test("perimetri -> perimetr", function() {deepEqual( Stem("perimetri"), "perimetr");});
test("perimetro -> perimetr", function() {deepEqual( Stem("perimetro"), "perimetr");});
test("periodi -> period", function() {deepEqual( Stem("periodi"), "period");});
test("periodica -> period", function() {deepEqual( Stem("periodica"), "period");});
test("periodicamente -> period", function() {deepEqual( Stem("periodicamente"), "period");});
test("periodiche -> period", function() {deepEqual( Stem("periodiche"), "period");});
test("periodici -> period", function() {deepEqual( Stem("periodici"), "period");});
test("periodico -> period", function() {deepEqual( Stem("periodico"), "period");});
test("periodo -> period", function() {deepEqual( Stem("periodo"), "period");});
test("peripatetico -> peripatet", function() {deepEqual( Stem("peripatetico"), "peripatet");});
test("perirono -> per", function() {deepEqual( Stem("perirono"), "per");});
test("perita -> per", function() {deepEqual( Stem("perita"), "per");});
test("perite -> per", function() {deepEqual( Stem("perite"), "per");});
test("periti -> per", function() {deepEqual( Stem("periti"), "per");});
test("perito -> per", function() {deepEqual( Stem("perito"), "per");});
test("periva -> per", function() {deepEqual( Stem("periva"), "per");});
test("perizia -> periz", function() {deepEqual( Stem("perizia"), "periz");});
test("perla -> perl", function() {deepEqual( Stem("perla"), "perl");});
test("perle -> perl", function() {deepEqual( Stem("perle"), "perl");});
test("perlier -> perlier", function() {deepEqual( Stem("perlier"), "perlier");});
test("perlomeno -> perlomen", function() {deepEqual( Stem("perlomeno"), "perlomen");});
test("perlopiù -> perlopiù", function() {deepEqual( Stem("perlopiù"), "perlopiù");});
test("perlustrare -> perlustr", function() {deepEqual( Stem("perlustrare"), "perlustr");});
test("perlustrata -> perlustr", function() {deepEqual( Stem("perlustrata"), "perlustr");});
test("perlustravamo -> perlustr", function() {deepEqual( Stem("perlustravamo"), "perlustr");});
test("perlustrazione -> perlustr", function() {deepEqual( Stem("perlustrazione"), "perlustr");});
test("perlustreranno -> perlustr", function() {deepEqual( Stem("perlustreranno"), "perlustr");});
test("permalosa -> permal", function() {deepEqual( Stem("permalosa"), "permal");});
test("permane -> perman", function() {deepEqual( Stem("permane"), "perman");});
test("permanente -> permanent", function() {deepEqual( Stem("permanente"), "permanent");});
test("permanentemente -> permanent", function() {deepEqual( Stem("permanentemente"), "permanent");});
test("permanenza -> permanent", function() {deepEqual( Stem("permanenza"), "permanent");});
test("permanenze -> permanent", function() {deepEqual( Stem("permanenze"), "permanent");});
test("permangono -> permang", function() {deepEqual( Stem("permangono"), "permang");});
test("permessa -> permess", function() {deepEqual( Stem("permessa"), "permess");});
test("permessi -> permess", function() {deepEqual( Stem("permessi"), "permess");});
test("permesso -> permess", function() {deepEqual( Stem("permesso"), "permess");});
test("permetta -> permett", function() {deepEqual( Stem("permetta"), "permett");});
test("permette -> permett", function() {deepEqual( Stem("permette"), "permett");});
test("permettendogli -> permett", function() {deepEqual( Stem("permettendogli"), "permett");});
test("permetterà -> permett", function() {deepEqual( Stem("permetterà"), "permett");});
test("permetteranno -> permett", function() {deepEqual( Stem("permetteranno"), "permett");});
test("permettere -> permett", function() {deepEqual( Stem("permettere"), "permett");});
test("permettessero -> permett", function() {deepEqual( Stem("permettessero"), "permett");});
test("permettetemi -> permettetem", function() {deepEqual( Stem("permettetemi"), "permettetem");});
test("permetteva -> permett", function() {deepEqual( Stem("permetteva"), "permett");});
test("permettevano -> permett", function() {deepEqual( Stem("permettevano"), "permett");});
test("permise -> permis", function() {deepEqual( Stem("permise"), "permis");});
test("permissiva -> permiss", function() {deepEqual( Stem("permissiva"), "permiss");});
test("permitieren -> permitieren", function() {deepEqual( Stem("permitieren"), "permitieren");});
test("perniciosa -> pernic", function() {deepEqual( Stem("perniciosa"), "pernic");});
test("pernizioso -> perniz", function() {deepEqual( Stem("pernizioso"), "perniz");});
test("pero -> per", function() {deepEqual( Stem("pero"), "per");});
test("però -> per", function() {deepEqual( Stem("però"), "per");});
test("perocché -> perocc", function() {deepEqual( Stem("perocché"), "perocc");});
test("peron -> peron", function() {deepEqual( Stem("peron"), "peron");});
test("perone -> peron", function() {deepEqual( Stem("perone"), "peron");});
test("peronista -> peron", function() {deepEqual( Stem("peronista"), "peron");});
test("perorare -> peror", function() {deepEqual( Stem("perorare"), "peror");});
test("perpendicolo -> perpendicol", function() {deepEqual( Stem("perpendicolo"), "perpendicol");});
test("perpetrata -> perpetr", function() {deepEqual( Stem("perpetrata"), "perpetr");});
test("perpetua -> perpetu", function() {deepEqual( Stem("perpetua"), "perpetu");});
test("perpetui -> perpetu", function() {deepEqual( Stem("perpetui"), "perpetu");});
test("perpetuo -> perpetu", function() {deepEqual( Stem("perpetuo"), "perpetu");});
test("perplessita -> perpless", function() {deepEqual( Stem("perplessita"), "perpless");});
test("perplessità -> perpless", function() {deepEqual( Stem("perplessità"), "perpless");});
test("perplesso -> perpless", function() {deepEqual( Stem("perplesso"), "perpless");});
test("perpretato -> perpret", function() {deepEqual( Stem("perpretato"), "perpret");});
test("perri -> perr", function() {deepEqual( Stem("perri"), "perr");});
test("perrini -> perrin", function() {deepEqual( Stem("perrini"), "perrin");});
test("perrone -> perron", function() {deepEqual( Stem("perrone"), "perron");});
test("perrotta -> perrott", function() {deepEqual( Stem("perrotta"), "perrott");});
test("persa -> pers", function() {deepEqual( Stem("persa"), "pers");});
test("perse -> pers", function() {deepEqual( Stem("perse"), "pers");});
test("persecutore -> persecutor", function() {deepEqual( Stem("persecutore"), "persecutor");});
test("persecutori -> persecutor", function() {deepEqual( Stem("persecutori"), "persecutor");});
test("persecuzione -> persecu", function() {deepEqual( Stem("persecuzione"), "persecu");});
test("persecuzioni -> persecu", function() {deepEqual( Stem("persecuzioni"), "persecu");});
test("persegue -> persegu", function() {deepEqual( Stem("persegue"), "persegu");});
test("perseguimento -> persegu", function() {deepEqual( Stem("perseguimento"), "persegu");});
test("perseguire -> persegu", function() {deepEqual( Stem("perseguire"), "persegu");});
test("perseguita -> persegu", function() {deepEqual( Stem("perseguita"), "persegu");});
test("perseguitarla -> perseguit", function() {deepEqual( Stem("perseguitarla"), "perseguit");});
test("perseguitarlo -> perseguit", function() {deepEqual( Stem("perseguitarlo"), "perseguit");});
test("perseguitata -> perseguit", function() {deepEqual( Stem("perseguitata"), "perseguit");});
test("perseguitato -> perseguit", function() {deepEqual( Stem("perseguitato"), "perseguit");});
test("perseverante -> persever", function() {deepEqual( Stem("perseverante"), "persever");});
test("perseveranza -> persever", function() {deepEqual( Stem("perseveranza"), "persever");});
test("perseverare -> persever", function() {deepEqual( Stem("perseverare"), "persever");});
test("persi -> pers", function() {deepEqual( Stem("persi"), "pers");});
test("persiana -> persian", function() {deepEqual( Stem("persiana"), "persian");});
test("persino -> persin", function() {deepEqual( Stem("persino"), "persin");});
test("persister -> persister", function() {deepEqual( Stem("persister"), "persister");});
test("persisteva -> persist", function() {deepEqual( Stem("persisteva"), "persist");});
test("perso -> pers", function() {deepEqual( Stem("perso"), "pers");});
test("persona -> person", function() {deepEqual( Stem("persona"), "person");});
test("personaggi -> personagg", function() {deepEqual( Stem("personaggi"), "personagg");});
test("personaggio -> personagg", function() {deepEqual( Stem("personaggio"), "personagg");});
test("personaggj -> personaggj", function() {deepEqual( Stem("personaggj"), "personaggj");});
test("personal -> personal", function() {deepEqual( Stem("personal"), "personal");});
test("personaldollaro -> personaldollar", function() {deepEqual( Stem("personaldollaro"), "personaldollar");});
test("personale -> personal", function() {deepEqual( Stem("personale"), "personal");});
test("personalfondo -> personalfond", function() {deepEqual( Stem("personalfondo"), "personalfond");});
test("personali -> personal", function() {deepEqual( Stem("personali"), "personal");});
test("personalità -> personal", function() {deepEqual( Stem("personalità"), "personal");});
test("personalmarco -> personalmarc", function() {deepEqual( Stem("personalmarco"), "personalmarc");});
test("personalmente -> personal", function() {deepEqual( Stem("personalmente"), "personal");});
test("persone -> person", function() {deepEqual( Stem("persone"), "person");});
test("perspicacia -> perspicac", function() {deepEqual( Stem("perspicacia"), "perspicac");});
test("persuade -> persuad", function() {deepEqual( Stem("persuade"), "persuad");});
test("persuader -> persuader", function() {deepEqual( Stem("persuader"), "persuader");});
test("persuadere -> persuad", function() {deepEqual( Stem("persuadere"), "persuad");});
test("persuaderli -> persuad", function() {deepEqual( Stem("persuaderli"), "persuad");});
test("persuaderlo -> persuad", function() {deepEqual( Stem("persuaderlo"), "persuad");});
test("persuadersi -> persuad", function() {deepEqual( Stem("persuadersi"), "persuad");});
test("persuasa -> persuas", function() {deepEqual( Stem("persuasa"), "persuas");});
test("persuase -> persuas", function() {deepEqual( Stem("persuase"), "persuas");});
test("persuasi -> persuas", function() {deepEqual( Stem("persuasi"), "persuas");});
test("persuasion -> persuasion", function() {deepEqual( Stem("persuasion"), "persuasion");});
test("persuasione -> persuasion", function() {deepEqual( Stem("persuasione"), "persuasion");});
test("persuasissimo -> persuasissim", function() {deepEqual( Stem("persuasissimo"), "persuasissim");});
test("persuaso -> persuas", function() {deepEqual( Stem("persuaso"), "persuas");});
test("pertanto -> pertant", function() {deepEqual( Stem("pertanto"), "pertant");});
test("perth -> perth", function() {deepEqual( Stem("perth"), "perth");});
test("perticaro -> perticar", function() {deepEqual( Stem("perticaro"), "perticar");});
test("pertiche -> pertic", function() {deepEqual( Stem("pertiche"), "pertic");});
test("pertinacia -> pertinac", function() {deepEqual( Stem("pertinacia"), "pertinac");});
test("pertinenza -> pertinent", function() {deepEqual( Stem("pertinenza"), "pertinent");});
test("pertugio -> pertug", function() {deepEqual( Stem("pertugio"), "pertug");});
test("perturbatori -> perturb", function() {deepEqual( Stem("perturbatori"), "perturb");});
test("perturbazione -> perturb", function() {deepEqual( Stem("perturbazione"), "perturb");});
test("perturbazioni -> perturb", function() {deepEqual( Stem("perturbazioni"), "perturb");});
test("perù -> perù", function() {deepEqual( Stem("perù"), "perù");});
test("perugia -> perug", function() {deepEqual( Stem("perugia"), "perug");});
test("peruviana -> peruvian", function() {deepEqual( Stem("peruviana"), "peruvian");});
test("peruviane -> peruvian", function() {deepEqual( Stem("peruviane"), "peruvian");});
test("peruviani -> peruvian", function() {deepEqual( Stem("peruviani"), "peruvian");});
test("peruviano -> peruv", function() {deepEqual( Stem("peruviano"), "peruv");});
test("peruzzi -> peruzz", function() {deepEqual( Stem("peruzzi"), "peruzz");});
test("pervade -> pervad", function() {deepEqual( Stem("pervade"), "pervad");});
test("pervenire -> perven", function() {deepEqual( Stem("pervenire"), "perven");});
test("pervenivano -> perven", function() {deepEqual( Stem("pervenivano"), "perven");});
test("pervenne -> pervenn", function() {deepEqual( Stem("pervenne"), "pervenn");});
test("pervenuta -> perven", function() {deepEqual( Stem("pervenuta"), "perven");});
test("pervenuti -> perven", function() {deepEqual( Stem("pervenuti"), "perven");});
test("pervenuto -> perven", function() {deepEqual( Stem("pervenuto"), "perven");});
test("perversa -> pervers", function() {deepEqual( Stem("perversa"), "pervers");});
test("perversità -> pervers", function() {deepEqual( Stem("perversità"), "pervers");});
test("perverso -> pervers", function() {deepEqual( Stem("perverso"), "pervers");});
test("pervertimento -> pervert", function() {deepEqual( Stem("pervertimento"), "pervert");});
test("pesa -> pes", function() {deepEqual( Stem("pesa"), "pes");});
test("pesano -> pes", function() {deepEqual( Stem("pesano"), "pes");});
test("pesante -> pesant", function() {deepEqual( Stem("pesante"), "pesant");});
test("pesanti -> pesant", function() {deepEqual( Stem("pesanti"), "pesant");});
test("pesar -> pes", function() {deepEqual( Stem("pesar"), "pes");});
test("pesarese -> pesares", function() {deepEqual( Stem("pesarese"), "pesares");});
test("pesaro -> pesar", function() {deepEqual( Stem("pesaro"), "pesar");});
test("pesasse -> pes", function() {deepEqual( Stem("pesasse"), "pes");});
test("pesate -> pes", function() {deepEqual( Stem("pesate"), "pes");});
test("pesato -> pes", function() {deepEqual( Stem("pesato"), "pes");});
test("pesavan -> pesavan", function() {deepEqual( Stem("pesavan"), "pesavan");});
test("pesavano -> pes", function() {deepEqual( Stem("pesavano"), "pes");});
test("pesca -> pesc", function() {deepEqual( Stem("pesca"), "pesc");});
test("pescar -> pesc", function() {deepEqual( Stem("pescar"), "pesc");});
test("pescara -> pescar", function() {deepEqual( Stem("pescara"), "pescar");});
test("pescare -> pesc", function() {deepEqual( Stem("pescare"), "pesc");});
test("pescarenico -> pescaren", function() {deepEqual( Stem("pescarenico"), "pescaren");});
test("pescate -> pesc", function() {deepEqual( Stem("pescate"), "pesc");});
test("pescato -> pesc", function() {deepEqual( Stem("pescato"), "pesc");});
test("pescatore -> pescator", function() {deepEqual( Stem("pescatore"), "pescator");});
test("pescatori -> pescator", function() {deepEqual( Stem("pescatori"), "pescator");});
test("pescavan -> pescavan", function() {deepEqual( Stem("pescavan"), "pescavan");});
test("pesce -> pesc", function() {deepEqual( Stem("pesce"), "pesc");});
test("pesche -> pesc", function() {deepEqual( Stem("pesche"), "pesc");});
test("pescheria -> pescher", function() {deepEqual( Stem("pescheria"), "pescher");});
test("peschi -> pesc", function() {deepEqual( Stem("peschi"), "pesc");});
test("peschiera -> peschier", function() {deepEqual( Stem("peschiera"), "peschier");});
test("pesci -> pesc", function() {deepEqual( Stem("pesci"), "pesc");});
test("pesciaiolo -> pesciaiol", function() {deepEqual( Stem("pesciaiolo"), "pesciaiol");});
test("pesciolino -> pesciolin", function() {deepEqual( Stem("pesciolino"), "pesciolin");});
test("pesco -> pesc", function() {deepEqual( Stem("pesco"), "pesc");});
test("pesenti -> pesent", function() {deepEqual( Stem("pesenti"), "pesent");});
test("peserà -> pes", function() {deepEqual( Stem("peserà"), "pes");});
test("peseta -> peset", function() {deepEqual( Stem("peseta"), "peset");});
test("pesetas -> pesetas", function() {deepEqual( Stem("pesetas"), "pesetas");});
test("peshawar -> peshaw", function() {deepEqual( Stem("peshawar"), "peshaw");});
test("pesi -> pes", function() {deepEqual( Stem("pesi"), "pes");});
test("peso -> pes", function() {deepEqual( Stem("peso"), "pes");});
test("pesos -> pesos", function() {deepEqual( Stem("pesos"), "pesos");});
test("pessima -> pessim", function() {deepEqual( Stem("pessima"), "pessim");});
test("pessime -> pessim", function() {deepEqual( Stem("pessime"), "pessim");});
test("pessimismo -> pessim", function() {deepEqual( Stem("pessimismo"), "pessim");});
test("pessimo -> pessim", function() {deepEqual( Stem("pessimo"), "pessim");});
test("pessotto -> pessott", function() {deepEqual( Stem("pessotto"), "pessott");});
test("pesta -> pest", function() {deepEqual( Stem("pesta"), "pest");});
test("pestaggi -> pestagg", function() {deepEqual( Stem("pestaggi"), "pestagg");});
test("pestaggio -> pestagg", function() {deepEqual( Stem("pestaggio"), "pestagg");});
test("pestato -> pest", function() {deepEqual( Stem("pestato"), "pest");});
test("pestava -> pest", function() {deepEqual( Stem("pestava"), "pest");});
test("peste -> pest", function() {deepEqual( Stem("peste"), "pest");});
test("pestiferi -> pestifer", function() {deepEqual( Stem("pestiferi"), "pestifer");});
test("pestilenti -> pestilent", function() {deepEqual( Stem("pestilenti"), "pestilent");});
test("pestilentia -> pestilent", function() {deepEqual( Stem("pestilentia"), "pestilent");});
test("pestilenza -> pestilent", function() {deepEqual( Stem("pestilenza"), "pestilent");});
test("pestilenze -> pestilent", function() {deepEqual( Stem("pestilenze"), "pestilent");});
test("pestilenziale -> pestilenzial", function() {deepEqual( Stem("pestilenziale"), "pestilenzial");});
test("pestilenziali -> pestilenzial", function() {deepEqual( Stem("pestilenziali"), "pestilenzial");});
test("pet -> pet", function() {deepEqual( Stem("pet"), "pet");});
test("pete -> pet", function() {deepEqual( Stem("pete"), "pet");});
test("petecchiale -> petecchial", function() {deepEqual( Stem("petecchiale"), "petecchial");});
test("peter -> peter", function() {deepEqual( Stem("peter"), "peter");});
test("petito -> pet", function() {deepEqual( Stem("petito"), "pet");});
test("petr -> petr", function() {deepEqual( Stem("petr"), "petr");});
test("petra -> petr", function() {deepEqual( Stem("petra"), "petr");});
test("petricca -> petricc", function() {deepEqual( Stem("petricca"), "petricc");});
test("petris -> petris", function() {deepEqual( Stem("petris"), "petris");});
test("petro -> petr", function() {deepEqual( Stem("petro"), "petr");});
test("petrobras -> petrobras", function() {deepEqual( Stem("petrobras"), "petrobras");});
test("petrolchimico -> petrolchim", function() {deepEqual( Stem("petrolchimico"), "petrolchim");});
test("petroleum -> petroleum", function() {deepEqual( Stem("petroleum"), "petroleum");});
test("petrolifera -> petrolifer", function() {deepEqual( Stem("petrolifera"), "petrolifer");});
test("petroliferi -> petrolifer", function() {deepEqual( Stem("petroliferi"), "petrolifer");});
test("petrolifero -> petrolifer", function() {deepEqual( Stem("petrolifero"), "petrolifer");});
test("petrolio -> petrol", function() {deepEqual( Stem("petrolio"), "petrol");});
test("petrone -> petron", function() {deepEqual( Stem("petrone"), "petron");});
test("pettegole -> pettegol", function() {deepEqual( Stem("pettegole"), "pettegol");});
test("pettegolezzi -> pettegolezz", function() {deepEqual( Stem("pettegolezzi"), "pettegolezz");});
test("pettegolezzo -> pettegolezz", function() {deepEqual( Stem("pettegolezzo"), "pettegolezz");});
test("pettegolo -> pettegol", function() {deepEqual( Stem("pettegolo"), "pettegol");});
test("petti -> pett", function() {deepEqual( Stem("petti"), "pett");});
test("pettinare -> pettin", function() {deepEqual( Stem("pettinare"), "pettin");});
test("pettinata -> pettin", function() {deepEqual( Stem("pettinata"), "pettin");});
test("pettine -> pettin", function() {deepEqual( Stem("pettine"), "pettin");});
test("pettinelli -> pettinell", function() {deepEqual( Stem("pettinelli"), "pettinell");});
test("petto -> pett", function() {deepEqual( Stem("petto"), "pett");});
test("pettoruto -> pettor", function() {deepEqual( Stem("pettoruto"), "pettor");});
test("petulante -> petul", function() {deepEqual( Stem("petulante"), "petul");});
test("petulanti -> petul", function() {deepEqual( Stem("petulanti"), "petul");});
test("petulanza -> petul", function() {deepEqual( Stem("petulanza"), "petul");});
test("pezze -> pezz", function() {deepEqual( Stem("pezze"), "pezz");});
test("pezzente -> pezzent", function() {deepEqual( Stem("pezzente"), "pezzent");});
test("pezzetta -> pezzett", function() {deepEqual( Stem("pezzetta"), "pezzett");});
test("pezzetti -> pezzett", function() {deepEqual( Stem("pezzetti"), "pezzett");});
test("pezzetto -> pezzett", function() {deepEqual( Stem("pezzetto"), "pezzett");});
test("pezzi -> pezz", function() {deepEqual( Stem("pezzi"), "pezz");});
test("pezzo -> pezz", function() {deepEqual( Stem("pezzo"), "pezz");});
test("pezzò -> pezz", function() {deepEqual( Stem("pezzò"), "pezz");});
test("pfennig -> pfennig", function() {deepEqual( Stem("pfennig"), "pfennig");});
test("pfennigs -> pfennigs", function() {deepEqual( Stem("pfennigs"), "pfennigs");});
test("ph -> ph", function() {deepEqual( Stem("ph"), "ph");});
test("pharmachem -> pharmachem", function() {deepEqual( Stem("pharmachem"), "pharmachem");});
test("phenixfund -> phenixfund", function() {deepEqual( Stem("phenixfund"), "phenixfund");});
test("philips -> philips", function() {deepEqual( Stem("philips"), "philips");});
test("phillips -> phillips", function() {deepEqual( Stem("phillips"), "phillips");});
test("phoenix -> phoenix", function() {deepEqual( Stem("phoenix"), "phoenix");});
test("phone -> phon", function() {deepEqual( Stem("phone"), "phon");});
test("phyllis -> phyllis", function() {deepEqual( Stem("phyllis"), "phyllis");});
test("pi -> pi", function() {deepEqual( Stem("pi"), "pi");});
test("pia -> pia", function() {deepEqual( Stem("pia"), "pia");});
test("piaccia -> piacc", function() {deepEqual( Stem("piaccia"), "piacc");});
test("piacciono -> piacc", function() {deepEqual( Stem("piacciono"), "piacc");});
test("piace -> piac", function() {deepEqual( Stem("piace"), "piac");});
test("piacendogli -> piac", function() {deepEqual( Stem("piacendogli"), "piac");});
test("piacentine -> piacentin", function() {deepEqual( Stem("piacentine"), "piacentin");});
test("piacentini -> piacentin", function() {deepEqual( Stem("piacentini"), "piacentin");});
test("piacenza -> piacenz", function() {deepEqual( Stem("piacenza"), "piacenz");});
test("piacer -> piacer", function() {deepEqual( Stem("piacer"), "piacer");});
test("piacerà -> piac", function() {deepEqual( Stem("piacerà"), "piac");});
test("piacere -> piac", function() {deepEqual( Stem("piacere"), "piac");});
test("piacerebbe -> piac", function() {deepEqual( Stem("piacerebbe"), "piac");});
test("piaceri -> piacer", function() {deepEqual( Stem("piaceri"), "piacer");});
test("piacesse -> piacess", function() {deepEqual( Stem("piacesse"), "piacess");});
test("piaceva -> piac", function() {deepEqual( Stem("piaceva"), "piac");});
test("piacevan -> piacevan", function() {deepEqual( Stem("piacevan"), "piacevan");});
test("piacevolezza -> piacevolezz", function() {deepEqual( Stem("piacevolezza"), "piacevolezz");});
test("piacevolezze -> piacevolezz", function() {deepEqual( Stem("piacevolezze"), "piacevolezz");});
test("piacevolmente -> piacevol", function() {deepEqual( Stem("piacevolmente"), "piacevol");});
test("piaciuto -> piac", function() {deepEqual( Stem("piaciuto"), "piac");});
test("piacque -> piacqu", function() {deepEqual( Stem("piacque"), "piacqu");});
test("piaga -> piag", function() {deepEqual( Stem("piaga"), "piag");});
test("piaghe -> piag", function() {deepEqual( Stem("piaghe"), "piag");});
test("pian -> pian", function() {deepEqual( Stem("pian"), "pian");});
test("piane -> pian", function() {deepEqual( Stem("piane"), "pian");});
test("pianelle -> pianell", function() {deepEqual( Stem("pianelle"), "pianell");});
test("pianerottolo -> pianerottol", function() {deepEqual( Stem("pianerottolo"), "pianerottol");});
test("pianeta -> pianet", function() {deepEqual( Stem("pianeta"), "pianet");});
test("pianeti -> pianet", function() {deepEqual( Stem("pianeti"), "pianet");});
test("piange -> piang", function() {deepEqual( Stem("piange"), "piang");});
test("piangendo -> piang", function() {deepEqual( Stem("piangendo"), "piang");});
test("piangente -> piangent", function() {deepEqual( Stem("piangente"), "piangent");});
test("piangenti -> piangent", function() {deepEqual( Stem("piangenti"), "piangent");});
test("pianger -> pianger", function() {deepEqual( Stem("pianger"), "pianger");});
test("piangere -> piang", function() {deepEqual( Stem("piangere"), "piang");});
test("piangerete -> piang", function() {deepEqual( Stem("piangerete"), "piang");});
test("piangerò -> piang", function() {deepEqual( Stem("piangerò"), "piang");});
test("piangesse -> piangess", function() {deepEqual( Stem("piangesse"), "piangess");});
test("piangeva -> piang", function() {deepEqual( Stem("piangeva"), "piang");});
test("piangevan -> piangevan", function() {deepEqual( Stem("piangevan"), "piangevan");});
test("piangiamo -> piang", function() {deepEqual( Stem("piangiamo"), "piang");});
test("piani -> pian", function() {deepEqual( Stem("piani"), "pian");});
test("pianificare -> pianific", function() {deepEqual( Stem("pianificare"), "pianific");});
test("pianificazione -> pianif", function() {deepEqual( Stem("pianificazione"), "pianif");});
test("pianissimo -> pianissim", function() {deepEqual( Stem("pianissimo"), "pianissim");});
test("piano -> pian", function() {deepEqual( Stem("piano"), "pian");});
test("pianoforte -> pianofort", function() {deepEqual( Stem("pianoforte"), "pianofort");});
test("pianse -> pians", function() {deepEqual( Stem("pianse"), "pians");});
test("pianta -> piant", function() {deepEqual( Stem("pianta"), "piant");});
test("piantan -> piantan", function() {deepEqual( Stem("piantan"), "piantan");});
test("piantandogli -> piant", function() {deepEqual( Stem("piantandogli"), "piant");});
test("piantandole -> piant", function() {deepEqual( Stem("piantandole"), "piant");});
test("piantandosi -> piant", function() {deepEqual( Stem("piantandosi"), "piant");});
test("piantaron -> piantaron", function() {deepEqual( Stem("piantaron"), "piantaron");});
test("piantarsi -> piant", function() {deepEqual( Stem("piantarsi"), "piant");});
test("piantate -> piant", function() {deepEqual( Stem("piantate"), "piant");});
test("piantato -> piant", function() {deepEqual( Stem("piantato"), "piant");});
test("piantatosi -> piantat", function() {deepEqual( Stem("piantatosi"), "piantat");});
test("piantava -> piant", function() {deepEqual( Stem("piantava"), "piant");});
test("piante -> piant", function() {deepEqual( Stem("piante"), "piant");});
test("pianti -> piant", function() {deepEqual( Stem("pianti"), "piant");});
test("pianto -> piant", function() {deepEqual( Stem("pianto"), "piant");});
test("piantò -> piant", function() {deepEqual( Stem("piantò"), "piant");});
test("pianura -> pianur", function() {deepEqual( Stem("pianura"), "pianur");});
test("pianure -> pianur", function() {deepEqual( Stem("pianure"), "pianur");});
test("piastrine -> piastrin", function() {deepEqual( Stem("piastrine"), "piastrin");});
test("piatta -> piatt", function() {deepEqual( Stem("piatta"), "piatt");});
test("piattaforma -> piattaform", function() {deepEqual( Stem("piattaforma"), "piattaform");});
test("piattaforme -> piattaform", function() {deepEqual( Stem("piattaforme"), "piattaform");});
test("piatti -> piatt", function() {deepEqual( Stem("piatti"), "piatt");});
test("piatto -> piatt", function() {deepEqual( Stem("piatto"), "piatt");});
test("piazza -> piazz", function() {deepEqual( Stem("piazza"), "piazz");});
test("piazzale -> piazzal", function() {deepEqual( Stem("piazzale"), "piazzal");});
test("piazzamento -> piazz", function() {deepEqual( Stem("piazzamento"), "piazz");});
test("piazzando -> piazz", function() {deepEqual( Stem("piazzando"), "piazz");});
test("piazzata -> piazz", function() {deepEqual( Stem("piazzata"), "piazz");});
test("piazzati -> piazz", function() {deepEqual( Stem("piazzati"), "piazz");});
test("piazzato -> piazz", function() {deepEqual( Stem("piazzato"), "piazz");});
test("piazze -> piazz", function() {deepEqual( Stem("piazze"), "piazz");});
test("piazzetta -> piazzett", function() {deepEqual( Stem("piazzetta"), "piazzett");});
test("piazzette -> piazzett", function() {deepEqual( Stem("piazzette"), "piazzett");});
test("pic -> pic", function() {deepEqual( Stem("pic"), "pic");});
test("picard -> picard", function() {deepEqual( Stem("picard"), "picard");});
test("picasso -> picass", function() {deepEqual( Stem("picasso"), "picass");});
test("picca -> picc", function() {deepEqual( Stem("picca"), "picc");});
test("piccava -> picc", function() {deepEqual( Stem("piccava"), "picc");});
test("picche -> picc", function() {deepEqual( Stem("picche"), "picc");});
test("picchetto -> picchett", function() {deepEqual( Stem("picchetto"), "picchett");});
test("picchi -> picc", function() {deepEqual( Stem("picchi"), "picc");});
test("picchia -> picc", function() {deepEqual( Stem("picchia"), "picc");});
test("picchiando -> picc", function() {deepEqual( Stem("picchiando"), "picc");});
test("picchiar -> picc", function() {deepEqual( Stem("picchiar"), "picc");});
test("picchiare -> picc", function() {deepEqual( Stem("picchiare"), "picc");});
test("picchiarono -> picc", function() {deepEqual( Stem("picchiarono"), "picc");});
test("picchiarsi -> picc", function() {deepEqual( Stem("picchiarsi"), "picc");});
test("picchiate -> picc", function() {deepEqual( Stem("picchiate"), "picc");});
test("picchiava -> picc", function() {deepEqual( Stem("picchiava"), "picc");});
test("picchietto -> picchiett", function() {deepEqual( Stem("picchietto"), "picchiett");});
test("picchio -> picc", function() {deepEqual( Stem("picchio"), "picc");});
test("picchiò -> picc", function() {deepEqual( Stem("picchiò"), "picc");});
test("piccini -> piccin", function() {deepEqual( Stem("piccini"), "piccin");});
test("piccinin -> piccinin", function() {deepEqual( Stem("piccinin"), "piccinin");});
test("piccinini -> piccinin", function() {deepEqual( Stem("piccinini"), "piccinin");});
test("piccino -> piccin", function() {deepEqual( Stem("piccino"), "piccin");});
test("picco -> picc", function() {deepEqual( Stem("picco"), "picc");});
test("piccol -> piccol", function() {deepEqual( Stem("piccol"), "piccol");});
test("piccola -> piccol", function() {deepEqual( Stem("piccola"), "piccol");});
test("piccole -> piccol", function() {deepEqual( Stem("piccole"), "piccol");});
test("piccoli -> piccol", function() {deepEqual( Stem("piccoli"), "piccol");});
test("piccolillo -> piccolill", function() {deepEqual( Stem("piccolillo"), "piccolill");});
test("piccolissimo -> piccolissim", function() {deepEqual( Stem("piccolissimo"), "piccolissim");});
test("piccolo -> piccol", function() {deepEqual( Stem("piccolo"), "piccol");});
test("piceno -> picen", function() {deepEqual( Stem("piceno"), "picen");});
test("pick -> pick", function() {deepEqual( Stem("pick"), "pick");});
test("picozzi -> picozz", function() {deepEqual( Stem("picozzi"), "picozz");});
test("pidgeon -> pidgeon", function() {deepEqual( Stem("pidgeon"), "pidgeon");});
test("pidiessino -> pidiessin", function() {deepEqual( Stem("pidiessino"), "pidiessin");});
test("pido -> pid", function() {deepEqual( Stem("pido"), "pid");});
test("piduisti -> piduist", function() {deepEqual( Stem("piduisti"), "piduist");});
test("pie -> pie", function() {deepEqual( Stem("pie"), "pie");});
test("piè -> piè", function() {deepEqual( Stem("piè"), "piè");});
test("piede -> pied", function() {deepEqual( Stem("piede"), "pied");});
test("piedestallo -> piedestall", function() {deepEqual( Stem("piedestallo"), "piedestall");});
test("piedi -> pied", function() {deepEqual( Stem("piedi"), "pied");});
test("piedra -> piedr", function() {deepEqual( Stem("piedra"), "piedr");});
test("piega -> pieg", function() {deepEqual( Stem("piega"), "pieg");});
test("piegando -> pieg", function() {deepEqual( Stem("piegando"), "pieg");});
test("piegare -> pieg", function() {deepEqual( Stem("piegare"), "pieg");});
test("piegata -> pieg", function() {deepEqual( Stem("piegata"), "pieg");});
test("piegate -> pieg", function() {deepEqual( Stem("piegate"), "pieg");});
test("piegato -> pieg", function() {deepEqual( Stem("piegato"), "pieg");});
test("pieghe -> pieg", function() {deepEqual( Stem("pieghe"), "pieg");});
test("piegò -> pieg", function() {deepEqual( Stem("piegò"), "pieg");});
test("piemont -> piemont", function() {deepEqual( Stem("piemont"), "piemont");});
test("piemonte -> piemont", function() {deepEqual( Stem("piemonte"), "piemont");});
test("piemontese -> piemontes", function() {deepEqual( Stem("piemontese"), "piemontes");});
test("piemontesi -> piemontes", function() {deepEqual( Stem("piemontesi"), "piemontes");});
test("piena -> pien", function() {deepEqual( Stem("piena"), "pien");});
test("pienamente -> pien", function() {deepEqual( Stem("pienamente"), "pien");});
test("piene -> pien", function() {deepEqual( Stem("piene"), "pien");});
test("pienezza -> pienezz", function() {deepEqual( Stem("pienezza"), "pienezz");});
test("pieni -> pien", function() {deepEqual( Stem("pieni"), "pien");});
test("pieno -> pien", function() {deepEqual( Stem("pieno"), "pien");});
test("pienone -> pienon", function() {deepEqual( Stem("pienone"), "pienon");});
test("pienotta -> pienott", function() {deepEqual( Stem("pienotta"), "pienott");});
test("pier -> pier", function() {deepEqual( Stem("pier"), "pier");});
test("piera -> pier", function() {deepEqual( Stem("piera"), "pier");});
test("pieralberto -> pieralbert", function() {deepEqual( Stem("pieralberto"), "pieralbert");});
test("piercamillo -> piercamill", function() {deepEqual( Stem("piercamillo"), "piercamill");});
test("piercarlo -> pierc", function() {deepEqual( Stem("piercarlo"), "pierc");});
test("pierferdinando -> pierferdin", function() {deepEqual( Stem("pierferdinando"), "pierferdin");});
test("pierguido -> pierguid", function() {deepEqual( Stem("pierguido"), "pierguid");});
test("pierini -> pierin", function() {deepEqual( Stem("pierini"), "pierin");});
test("pierluigi -> pierluig", function() {deepEqual( Stem("pierluigi"), "pierluig");});
test("piero -> pier", function() {deepEqual( Stem("piero"), "pier");});
test("pierobon -> pierobon", function() {deepEqual( Stem("pierobon"), "pierobon");});
test("pieroni -> pieron", function() {deepEqual( Stem("pieroni"), "pieron");});
test("pierpaolo -> pierpaol", function() {deepEqual( Stem("pierpaolo"), "pierpaol");});
test("pierre -> pierr", function() {deepEqual( Stem("pierre"), "pierr");});
test("pietà -> piet", function() {deepEqual( Stem("pietà"), "piet");});
test("pietanza -> pietanz", function() {deepEqual( Stem("pietanza"), "pietanz");});
test("pietanze -> pietanz", function() {deepEqual( Stem("pietanze"), "pietanz");});
test("pietosa -> pietos", function() {deepEqual( Stem("pietosa"), "pietos");});
test("pietosamente -> pietos", function() {deepEqual( Stem("pietosamente"), "pietos");});
test("pietose -> pietos", function() {deepEqual( Stem("pietose"), "pietos");});
test("pietosi -> pietos", function() {deepEqual( Stem("pietosi"), "pietos");});
test("pietra -> pietr", function() {deepEqual( Stem("pietra"), "pietr");});
test("pietrangeli -> pietrangel", function() {deepEqual( Stem("pietrangeli"), "pietrangel");});
test("pietre -> pietr", function() {deepEqual( Stem("pietre"), "pietr");});
test("pietro -> pietr", function() {deepEqual( Stem("pietro"), "pietr");});
test("pietroburgo -> pietroburg", function() {deepEqual( Stem("pietroburgo"), "pietroburg");});
test("pieve -> piev", function() {deepEqual( Stem("pieve"), "piev");});
test("pigia -> pig", function() {deepEqual( Stem("pigia"), "pig");});
test("pigiando -> pig", function() {deepEqual( Stem("pigiando"), "pig");});
test("pigiare -> pig", function() {deepEqual( Stem("pigiare"), "pig");});
test("pigiasse -> pig", function() {deepEqual( Stem("pigiasse"), "pig");});
test("pigìo -> pigì", function() {deepEqual( Stem("pigìo"), "pigì");});
test("pigionali -> pigional", function() {deepEqual( Stem("pigionali"), "pigional");});
test("piglia -> pigl", function() {deepEqual( Stem("piglia"), "pigl");});
test("piglian -> piglian", function() {deepEqual( Stem("piglian"), "piglian");});
test("pigliano -> pigl", function() {deepEqual( Stem("pigliano"), "pigl");});
test("pigliare -> pigl", function() {deepEqual( Stem("pigliare"), "pigl");});
test("pigliarne -> pigl", function() {deepEqual( Stem("pigliarne"), "pigl");});
test("pigliate -> pigl", function() {deepEqual( Stem("pigliate"), "pigl");});
test("pigliatelo -> pigliatel", function() {deepEqual( Stem("pigliatelo"), "pigliatel");});
test("pigliava -> pigl", function() {deepEqual( Stem("pigliava"), "pigl");});
test("piglino -> piglin", function() {deepEqual( Stem("piglino"), "piglin");});
test("piglio -> pigl", function() {deepEqual( Stem("piglio"), "pigl");});
test("pignone -> pignon", function() {deepEqual( Stem("pignone"), "pignon");});
test("pigri -> pigr", function() {deepEqual( Stem("pigri"), "pigr");});
test("pigrizia -> pigriz", function() {deepEqual( Stem("pigrizia"), "pigriz");});
test("pil -> pil", function() {deepEqual( Stem("pil"), "pil");});
test("pilastri -> pilastr", function() {deepEqual( Stem("pilastri"), "pilastr");});
test("pilastro -> pilastr", function() {deepEqual( Stem("pilastro"), "pilastr");});
test("pilato -> pil", function() {deepEqual( Stem("pilato"), "pil");});
test("pile -> pil", function() {deepEqual( Stem("pile"), "pil");});
test("pillitteri -> pillitter", function() {deepEqual( Stem("pillitteri"), "pillitter");});
test("pillole -> pillol", function() {deepEqual( Stem("pillole"), "pillol");});
test("piloni -> pilon", function() {deepEqual( Stem("piloni"), "pilon");});
test("pilota -> pilot", function() {deepEqual( Stem("pilota"), "pilot");});
test("pilotando -> pilot", function() {deepEqual( Stem("pilotando"), "pilot");});
test("pilotato -> pilot", function() {deepEqual( Stem("pilotato"), "pilot");});
test("piloti -> pilot", function() {deepEqual( Stem("piloti"), "pilot");});
test("pin -> pin", function() {deepEqual( Stem("pin"), "pin");});
test("pina -> pin", function() {deepEqual( Stem("pina"), "pin");});
test("pinato -> pin", function() {deepEqual( Stem("pinato"), "pin");});
test("pindo -> pind", function() {deepEqual( Stem("pindo"), "pind");});
test("pinè -> pin", function() {deepEqual( Stem("pinè"), "pin");});
test("pinerolo -> pinerol", function() {deepEqual( Stem("pinerolo"), "pinerol");});
test("pinetagrande -> pinetagrand", function() {deepEqual( Stem("pinetagrande"), "pinetagrand");});
test("pingitore -> pingitor", function() {deepEqual( Stem("pingitore"), "pingitor");});
test("pininfarina -> pininfarin", function() {deepEqual( Stem("pininfarina"), "pininfarin");});
test("pink -> pink", function() {deepEqual( Stem("pink"), "pink");});
test("pinna -> pinn", function() {deepEqual( Stem("pinna"), "pinn");});
test("pino -> pin", function() {deepEqual( Stem("pino"), "pin");});
test("pinocchio -> pinocc", function() {deepEqual( Stem("pinocchio"), "pinocc");});
test("pinza -> pinz", function() {deepEqual( Stem("pinza"), "pinz");});
test("pinzochere -> pinzoc", function() {deepEqual( Stem("pinzochere"), "pinzoc");});
test("pio -> pio", function() {deepEqual( Stem("pio"), "pio");});
test("piogge -> piogg", function() {deepEqual( Stem("piogge"), "piogg");});
test("pioggia -> piogg", function() {deepEqual( Stem("pioggia"), "piogg");});
test("pioli -> piol", function() {deepEqual( Stem("pioli"), "piol");});
test("piombava -> piomb", function() {deepEqual( Stem("piombava"), "piomb");});
test("piombino -> piombin", function() {deepEqual( Stem("piombino"), "piombin");});
test("pionieri -> pionier", function() {deepEqual( Stem("pionieri"), "pionier");});
test("pionieristica -> pionierist", function() {deepEqual( Stem("pionieristica"), "pionierist");});
test("pioppo -> piopp", function() {deepEqual( Stem("pioppo"), "piopp");});
test("piovanelli -> piovanell", function() {deepEqual( Stem("piovanelli"), "piovanell");});
test("piovani -> piovan", function() {deepEqual( Stem("piovani"), "piovan");});
test("piove -> piov", function() {deepEqual( Stem("piove"), "piov");});
test("pioveva -> piov", function() {deepEqual( Stem("pioveva"), "piov");});
test("piovigginare -> pioviggin", function() {deepEqual( Stem("piovigginare"), "pioviggin");});
test("piovosa -> piovos", function() {deepEqual( Stem("piovosa"), "piovos");});
test("piovra -> piovr", function() {deepEqual( Stem("piovra"), "piovr");});
test("piovute -> piov", function() {deepEqual( Stem("piovute"), "piov");});
test("piovutole -> piovutol", function() {deepEqual( Stem("piovutole"), "piovutol");});
test("piper -> piper", function() {deepEqual( Stem("piper"), "piper");});
test("pippo -> pipp", function() {deepEqual( Stem("pippo"), "pipp");});
test("pir -> pir", function() {deepEqual( Stem("pir"), "pir");});
test("pira -> pir", function() {deepEqual( Stem("pira"), "pir");});
test("pirelli -> pirell", function() {deepEqual( Stem("pirelli"), "pirell");});
test("pirri -> pirr", function() {deepEqual( Stem("pirri"), "pirr");});
test("pisa -> pis", function() {deepEqual( Stem("pisa"), "pis");});
test("pisano -> pis", function() {deepEqual( Stem("pisano"), "pis");});
test("pista -> pist", function() {deepEqual( Stem("pista"), "pist");});
test("pistà -> pist", function() {deepEqual( Stem("pistà"), "pist");});
test("pistarino -> pistarin", function() {deepEqual( Stem("pistarino"), "pistarin");});
test("piste -> pist", function() {deepEqual( Stem("piste"), "pist");});
test("pistella -> pistell", function() {deepEqual( Stem("pistella"), "pistell");});
test("pistoia -> pistoi", function() {deepEqual( Stem("pistoia"), "pistoi");});
test("pistoiese -> pistoies", function() {deepEqual( Stem("pistoiese"), "pistoies");});
test("pistola -> pistol", function() {deepEqual( Stem("pistola"), "pistol");});
test("pistole -> pistol", function() {deepEqual( Stem("pistole"), "pistol");});
test("pitaffio -> pitaff", function() {deepEqual( Stem("pitaffio"), "pitaff");});
test("pitagora -> pitagor", function() {deepEqual( Stem("pitagora"), "pitagor");});
test("pitocco -> pitocc", function() {deepEqual( Stem("pitocco"), "pitocc");});
test("pittalis -> pittalis", function() {deepEqual( Stem("pittalis"), "pittalis");});
test("pittore -> pittor", function() {deepEqual( Stem("pittore"), "pittor");});
test("pittura -> pittur", function() {deepEqual( Stem("pittura"), "pittur");});
test("piu -> piu", function() {deepEqual( Stem("piu"), "piu");});
test("più -> più", function() {deepEqual( Stem("più"), "più");});
test("piume -> pium", function() {deepEqual( Stem("piume"), "pium");});
test("piuttosto -> piuttost", function() {deepEqual( Stem("piuttosto"), "piuttost");});
test("piùttosto -> piùttost", function() {deepEqual( Stem("piùttosto"), "piùttost");});
test("pivetta -> pivett", function() {deepEqual( Stem("pivetta"), "pivett");});
test("pivetti -> pivett", function() {deepEqual( Stem("pivetti"), "pivett");});
test("pizzi -> pizz", function() {deepEqual( Stem("pizzi"), "pizz");});
test("pizzicara -> pizzicar", function() {deepEqual( Stem("pizzicara"), "pizzicar");});
test("pizzicavan -> pizzicavan", function() {deepEqual( Stem("pizzicavan"), "pizzicavan");});
test("pizzico -> pizzic", function() {deepEqual( Stem("pizzico"), "pizzic");});
test("pizzo -> pizz", function() {deepEqual( Stem("pizzo"), "pizz");});
test("placet -> placet", function() {deepEqual( Stem("placet"), "placet");});
test("placida -> placid", function() {deepEqual( Stem("placida"), "placid");});
test("placidamente -> placid", function() {deepEqual( Stem("placidamente"), "placid");});
test("placide -> placid", function() {deepEqual( Stem("placide"), "placid");});
test("placido -> placid", function() {deepEqual( Stem("placido"), "placid");});
test("planisferio -> planisfer", function() {deepEqual( Stem("planisferio"), "planisfer");});
test("plantarum -> plantarum", function() {deepEqual( Stem("plantarum"), "plantarum");});
test("plast -> plast", function() {deepEqual( Stem("plast"), "plast");});
test("plastica -> plastic", function() {deepEqual( Stem("plastica"), "plastic");});
test("platea -> plate", function() {deepEqual( Stem("platea"), "plate");});
test("plateà -> plate", function() {deepEqual( Stem("plateà"), "plate");});
test("platonus -> platonus", function() {deepEqual( Stem("platonus"), "platonus");});
test("platt -> platt", function() {deepEqual( Stem("platt"), "platt");});
test("plaudenti -> plaudent", function() {deepEqual( Stem("plaudenti"), "plaudent");});
test("plausibile -> plausibil", function() {deepEqual( Stem("plausibile"), "plausibil");});
test("plauso -> plaus", function() {deepEqual( Stem("plauso"), "plaus");});
test("play -> play", function() {deepEqual( Stem("play"), "play");});
test("playboy -> playboy", function() {deepEqual( Stem("playboy"), "playboy");});
test("plebe -> pleb", function() {deepEqual( Stem("plebe"), "pleb");});
test("plebei -> plebe", function() {deepEqual( Stem("plebei"), "plebe");});
test("plebeo -> plebe", function() {deepEqual( Stem("plebeo"), "plebe");});
test("plebiscitaria -> plebiscitar", function() {deepEqual( Stem("plebiscitaria"), "plebiscitar");});
test("plebiscitarie -> plebiscitar", function() {deepEqual( Stem("plebiscitarie"), "plebiscitar");});
test("plenaria -> plenar", function() {deepEqual( Stem("plenaria"), "plenar");});
test("plerosque -> plerosqu", function() {deepEqual( Stem("plerosque"), "plerosqu");});
test("pli -> pli", function() {deepEqual( Stem("pli"), "pli");});
test("plico -> plic", function() {deepEqual( Stem("plico"), "plic");});
test("plinio -> plin", function() {deepEqual( Stem("plinio"), "plin");});
test("pluksna -> pluksn", function() {deepEqual( Stem("pluksna"), "pluksn");});
test("pluralismo -> plural", function() {deepEqual( Stem("pluralismo"), "plural");});
test("pluralità -> plural", function() {deepEqual( Stem("pluralità"), "plural");});
test("pluriaggravato -> pluriaggrav", function() {deepEqual( Stem("pluriaggravato"), "pluriaggrav");});
test("plurifondo -> plurifond", function() {deepEqual( Stem("plurifondo"), "plurifond");});
test("plurinquisito -> plurinquis", function() {deepEqual( Stem("plurinquisito"), "plurinquis");});
test("pm -> pm", function() {deepEqual( Stem("pm"), "pm");});
test("po -> po", function() {deepEqual( Stem("po"), "po");});
test("pò -> pò", function() {deepEqual( Stem("pò"), "pò");});
test("poarte -> poart", function() {deepEqual( Stem("poarte"), "poart");});
test("poca -> poc", function() {deepEqual( Stem("poca"), "poc");});
test("poche -> poch", function() {deepEqual( Stem("poche"), "poch");});
test("pochi -> poch", function() {deepEqual( Stem("pochi"), "poch");});
test("pochino -> pochin", function() {deepEqual( Stem("pochino"), "pochin");});
test("pochissime -> pochissim", function() {deepEqual( Stem("pochissime"), "pochissim");});
test("pochissimi -> pochissim", function() {deepEqual( Stem("pochissimi"), "pochissim");});
test("pochissimo -> pochissim", function() {deepEqual( Stem("pochissimo"), "pochissim");});
test("poco -> poc", function() {deepEqual( Stem("poco"), "poc");});
test("podere -> pod", function() {deepEqual( Stem("podere"), "pod");});
test("poderetto -> poderett", function() {deepEqual( Stem("poderetto"), "poderett");});
test("poderi -> poder", function() {deepEqual( Stem("poderi"), "poder");});
test("poderose -> poder", function() {deepEqual( Stem("poderose"), "poder");});
test("poderoso -> poder", function() {deepEqual( Stem("poderoso"), "poder");});
test("podestà -> podest", function() {deepEqual( Stem("podestà"), "podest");});
test("podio -> pod", function() {deepEqual( Stem("podio"), "pod");});
test("podistica -> podist", function() {deepEqual( Stem("podistica"), "podist");});
test("poelman -> poelman", function() {deepEqual( Stem("poelman"), "poelman");});
test("poema -> poem", function() {deepEqual( Stem("poema"), "poem");});
test("poesia -> poes", function() {deepEqual( Stem("poesia"), "poes");});
test("poesie -> poes", function() {deepEqual( Stem("poesie"), "poes");});
test("poeta -> poet", function() {deepEqual( Stem("poeta"), "poet");});
test("poeti -> poet", function() {deepEqual( Stem("poeti"), "poet");});
test("poetica -> poetic", function() {deepEqual( Stem("poetica"), "poetic");});
test("poetico -> poetic", function() {deepEqual( Stem("poetico"), "poetic");});
test("poggetto -> poggett", function() {deepEqual( Stem("poggetto"), "poggett");});
test("poggi -> pogg", function() {deepEqual( Stem("poggi"), "pogg");});
test("poggiano -> pogg", function() {deepEqual( Stem("poggiano"), "pogg");});
test("poggibonsi -> poggibons", function() {deepEqual( Stem("poggibonsi"), "poggibons");});
test("poggio -> pogg", function() {deepEqual( Stem("poggio"), "pogg");});
test("poggioli -> poggiol", function() {deepEqual( Stem("poggioli"), "poggiol");});
test("poh -> poh", function() {deepEqual( Stem("poh"), "poh");});
test("poi -> poi", function() {deepEqual( Stem("poi"), "poi");});
test("poich -> poic", function() {deepEqual( Stem("poich"), "poic");});
test("poiché -> poic", function() {deepEqual( Stem("poiché"), "poic");});
test("poichè -> poic", function() {deepEqual( Stem("poichè"), "poic");});
test("point -> point", function() {deepEqual( Stem("point"), "point");});
test("poivre -> poivr", function() {deepEqual( Stem("poivre"), "poivr");});
test("pol -> pol", function() {deepEqual( Stem("pol"), "pol");});
test("polacche -> polacc", function() {deepEqual( Stem("polacche"), "polacc");});
test("polacco -> polacc", function() {deepEqual( Stem("polacco"), "polacc");});
test("polare -> pol", function() {deepEqual( Stem("polare"), "pol");});
test("polarizzi -> polarizz", function() {deepEqual( Stem("polarizzi"), "polarizz");});
test("polemica -> polem", function() {deepEqual( Stem("polemica"), "polem");});
test("polemiche -> polem", function() {deepEqual( Stem("polemiche"), "polem");});
test("polemichette -> polemichett", function() {deepEqual( Stem("polemichette"), "polemichett");});
test("polemico -> polem", function() {deepEqual( Stem("polemico"), "polem");});
test("polemizza -> polemizz", function() {deepEqual( Stem("polemizza"), "polemizz");});
test("polemizzano -> polemizz", function() {deepEqual( Stem("polemizzano"), "polemizz");});
test("polemizzato -> polemizz", function() {deepEqual( Stem("polemizzato"), "polemizz");});
test("polenta -> polent", function() {deepEqual( Stem("polenta"), "polent");});
test("polfer -> polfer", function() {deepEqual( Stem("polfer"), "polfer");});
test("poli -> pol", function() {deepEqual( Stem("poli"), "pol");});
test("poliambulatori -> poliambul", function() {deepEqual( Stem("poliambulatori"), "poliambul");});
test("policano -> polic", function() {deepEqual( Stem("policano"), "polic");});
test("policombustibile -> policombust", function() {deepEqual( Stem("policombustibile"), "policombust");});
test("polidori -> polidor", function() {deepEqual( Stem("polidori"), "polidor");});
test("poligrafici -> poligraf", function() {deepEqual( Stem("poligrafici"), "poligraf");});
test("polimeri -> polimer", function() {deepEqual( Stem("polimeri"), "polimer");});
test("polinesia -> polines", function() {deepEqual( Stem("polinesia"), "polines");});
test("poliomelitici -> poliomelit", function() {deepEqual( Stem("poliomelitici"), "poliomelit");});
test("politano -> polit", function() {deepEqual( Stem("politano"), "polit");});
test("politica -> polit", function() {deepEqual( Stem("politica"), "polit");});
test("politicà -> politic", function() {deepEqual( Stem("politicà"), "politic");});
test("political -> political", function() {deepEqual( Stem("political"), "political");});
test("politicamente -> polit", function() {deepEqual( Stem("politicamente"), "polit");});
test("politiche -> polit", function() {deepEqual( Stem("politiche"), "polit");});
test("politici -> polit", function() {deepEqual( Stem("politici"), "polit");});
test("politicì -> politic", function() {deepEqual( Stem("politicì"), "politic");});
test("politico -> polit", function() {deepEqual( Stem("politico"), "polit");});
test("politicò -> politic", function() {deepEqual( Stem("politicò"), "politic");});
test("politicone -> politicon", function() {deepEqual( Stem("politicone"), "politicon");});
test("politiconi -> politicon", function() {deepEqual( Stem("politiconi"), "politicon");});
test("politilene -> politilen", function() {deepEqual( Stem("politilene"), "politilen");});
test("polizia -> poliz", function() {deepEqual( Stem("polizia"), "poliz");});
test("poliziesco -> poliziesc", function() {deepEqual( Stem("poliziesco"), "poliziesc");});
test("poliziotta -> poliziott", function() {deepEqual( Stem("poliziotta"), "poliziott");});
test("poliziotti -> poliziott", function() {deepEqual( Stem("poliziotti"), "poliziott");});
test("poliziotto -> poliziott", function() {deepEqual( Stem("poliziotto"), "poliziott");});
test("polizza -> polizz", function() {deepEqual( Stem("polizza"), "polizz");});
test("polizze -> polizz", function() {deepEqual( Stem("polizze"), "polizz");});
test("pollaio -> pollai", function() {deepEqual( Stem("pollaio"), "pollai");});
test("polli -> poll", function() {deepEqual( Stem("polli"), "poll");});
test("pollice -> pollic", function() {deepEqual( Stem("pollice"), "pollic");});
test("polmoni -> polmon", function() {deepEqual( Stem("polmoni"), "polmon");});
test("polo -> pol", function() {deepEqual( Stem("polo"), "pol");});
test("polonia -> polon", function() {deepEqual( Stem("polonia"), "polon");});
test("polpette -> polpett", function() {deepEqual( Stem("polpette"), "polpett");});
test("polsi -> pols", function() {deepEqual( Stem("polsi"), "pols");});
test("polso -> pols", function() {deepEqual( Stem("polso"), "pols");});
test("poltiglia -> poltigl", function() {deepEqual( Stem("poltiglia"), "poltigl");});
test("poltrona -> poltron", function() {deepEqual( Stem("poltrona"), "poltron");});
test("poltrone -> poltron", function() {deepEqual( Stem("poltrone"), "poltron");});
test("poltroni -> poltron", function() {deepEqual( Stem("poltroni"), "poltron");});
test("polvere -> polv", function() {deepEqual( Stem("polvere"), "polv");});
test("polveri -> polver", function() {deepEqual( Stem("polveri"), "polver");});
test("polveriera -> polverier", function() {deepEqual( Stem("polveriera"), "polverier");});
test("polverino -> polverin", function() {deepEqual( Stem("polverino"), "polverin");});
test("polverìo -> polverì", function() {deepEqual( Stem("polverìo"), "polverì");});
test("polverosi -> polver", function() {deepEqual( Stem("polverosi"), "polver");});
test("polziia -> polzii", function() {deepEqual( Stem("polziia"), "polzii");});
test("pomeridiana -> pomeridian", function() {deepEqual( Stem("pomeridiana"), "pomeridian");});
test("pomeridiano -> pomerid", function() {deepEqual( Stem("pomeridiano"), "pomerid");});
test("pomeriggio -> pomerigg", function() {deepEqual( Stem("pomeriggio"), "pomerigg");});
test("pomo -> pom", function() {deepEqual( Stem("pomo"), "pom");});
test("pompa -> pomp", function() {deepEqual( Stem("pompa"), "pomp");});
test("pompe -> pomp", function() {deepEqual( Stem("pompe"), "pomp");});
test("pomposamente -> pompos", function() {deepEqual( Stem("pomposamente"), "pompos");});
test("pomposi -> pompos", function() {deepEqual( Stem("pomposi"), "pompos");});
test("ponchio -> ponc", function() {deepEqual( Stem("ponchio"), "ponc");});
test("ponderata -> ponder", function() {deepEqual( Stem("ponderata"), "ponder");});
test("ponderato -> ponder", function() {deepEqual( Stem("ponderato"), "ponder");});
test("pone -> pon", function() {deepEqual( Stem("pone"), "pon");});
test("ponevano -> pon", function() {deepEqual( Stem("ponevano"), "pon");});
test("poniamo -> pon", function() {deepEqual( Stem("poniamo"), "pon");});
test("ponsacco -> ponsacc", function() {deepEqual( Stem("ponsacco"), "ponsacc");});
test("ponte -> pont", function() {deepEqual( Stem("ponte"), "pont");});
test("pontedera -> ponteder", function() {deepEqual( Stem("pontedera"), "ponteder");});
test("pontefice -> pontef", function() {deepEqual( Stem("pontefice"), "pontef");});
test("ponti -> pont", function() {deepEqual( Stem("ponti"), "pont");});
test("pontida -> pontid", function() {deepEqual( Stem("pontida"), "pontid");});
test("pontieri -> pontier", function() {deepEqual( Stem("pontieri"), "pontier");});
test("pontificali -> pontifical", function() {deepEqual( Stem("pontificali"), "pontifical");});
test("pontificato -> pontific", function() {deepEqual( Stem("pontificato"), "pontific");});
test("pontile -> pontil", function() {deepEqual( Stem("pontile"), "pontil");});
test("ponto -> pont", function() {deepEqual( Stem("ponto"), "pont");});
test("pontone -> ponton", function() {deepEqual( Stem("pontone"), "ponton");});
test("ponzio -> ponz", function() {deepEqual( Stem("ponzio"), "ponz");});
test("pool -> pool", function() {deepEqual( Stem("pool"), "pool");});
test("pop -> pop", function() {deepEqual( Stem("pop"), "pop");});
test("popolana -> popolan", function() {deepEqual( Stem("popolana"), "popolan");});
test("popolano -> popol", function() {deepEqual( Stem("popolano"), "popol");});
test("popolanò -> popolan", function() {deepEqual( Stem("popolanò"), "popolan");});
test("popolare -> popol", function() {deepEqual( Stem("popolare"), "popol");});
test("popolari -> popolar", function() {deepEqual( Stem("popolari"), "popolar");});
test("popolarità -> popolar", function() {deepEqual( Stem("popolarità"), "popolar");});
test("popolato -> popol", function() {deepEqual( Stem("popolato"), "popol");});
test("popolazion -> popolazion", function() {deepEqual( Stem("popolazion"), "popolazion");});
test("popolazione -> popol", function() {deepEqual( Stem("popolazione"), "popol");});
test("popoli -> popol", function() {deepEqual( Stem("popoli"), "popol");});
test("popolo -> popol", function() {deepEqual( Stem("popolo"), "popol");});
test("popolò -> popol", function() {deepEqual( Stem("popolò"), "popol");});
test("poposta -> popost", function() {deepEqual( Stem("poposta"), "popost");});
test("poppa -> popp", function() {deepEqual( Stem("poppa"), "popp");});
test("poppard -> poppard", function() {deepEqual( Stem("poppard"), "poppard");});
test("poppe -> popp", function() {deepEqual( Stem("poppe"), "popp");});
test("poppea -> poppe", function() {deepEqual( Stem("poppea"), "poppe");});
test("populi -> popul", function() {deepEqual( Stem("populi"), "popul");});
test("populismo -> popul", function() {deepEqual( Stem("populismo"), "popul");});
test("populista -> popul", function() {deepEqual( Stem("populista"), "popul");});
test("por -> por", function() {deepEqual( Stem("por"), "por");});
test("porcellini -> porcellin", function() {deepEqual( Stem("porcellini"), "porcellin");});
test("porcheria -> porcher", function() {deepEqual( Stem("porcheria"), "porcher");});
test("porcherie -> porcher", function() {deepEqual( Stem("porcherie"), "porcher");});
test("porci -> porc", function() {deepEqual( Stem("porci"), "porc");});
test("pordenone -> pordenon", function() {deepEqual( Stem("pordenone"), "pordenon");});
test("pordenonesi -> pordenones", function() {deepEqual( Stem("pordenonesi"), "pordenones");});
test("porfirio -> porfir", function() {deepEqual( Stem("porfirio"), "porfir");});
test("porge -> porg", function() {deepEqual( Stem("porge"), "porg");});
test("porgevano -> porg", function() {deepEqual( Stem("porgevano"), "porg");});
test("porla -> porl", function() {deepEqual( Stem("porla"), "porl");});
test("pornografiche -> pornograf", function() {deepEqual( Stem("pornografiche"), "pornograf");});
test("porpora -> porpor", function() {deepEqual( Stem("porpora"), "porpor");});
test("porporato -> porpor", function() {deepEqual( Stem("porporato"), "porpor");});
test("porporine -> porporin", function() {deepEqual( Stem("porporine"), "porporin");});
test("porporini -> porporin", function() {deepEqual( Stem("porporini"), "porporin");});
test("porrà -> porr", function() {deepEqual( Stem("porrà"), "porr");});
test("porre -> porr", function() {deepEqual( Stem("porre"), "porr");});
test("porrini -> porrin", function() {deepEqual( Stem("porrini"), "porrin");});
test("porse -> pors", function() {deepEqual( Stem("porse"), "pors");});
test("port -> port", function() {deepEqual( Stem("port"), "port");});
test("porta -> port", function() {deepEqual( Stem("porta"), "port");});
test("portabandiera -> portabandier", function() {deepEqual( Stem("portabandiera"), "portabandier");});
test("portafoglio -> portafogl", function() {deepEqual( Stem("portafoglio"), "portafogl");});
test("portale -> portal", function() {deepEqual( Stem("portale"), "portal");});
test("portamenti -> port", function() {deepEqual( Stem("portamenti"), "port");});
test("portamento -> port", function() {deepEqual( Stem("portamento"), "port");});
test("portan -> portan", function() {deepEqual( Stem("portan"), "portan");});
test("portando -> port", function() {deepEqual( Stem("portando"), "port");});
test("portandosi -> port", function() {deepEqual( Stem("portandosi"), "port");});
test("portandovi -> port", function() {deepEqual( Stem("portandovi"), "port");});
test("portano -> port", function() {deepEqual( Stem("portano"), "port");});
test("portantini -> portantin", function() {deepEqual( Stem("portantini"), "portantin");});
test("portar -> port", function() {deepEqual( Stem("portar"), "port");});
test("portarci -> port", function() {deepEqual( Stem("portarci"), "port");});
test("portare -> port", function() {deepEqual( Stem("portare"), "port");});
test("portargli -> port", function() {deepEqual( Stem("portargli"), "port");});
test("portarla -> port", function() {deepEqual( Stem("portarla"), "port");});
test("portarle -> port", function() {deepEqual( Stem("portarle"), "port");});
test("portarli -> port", function() {deepEqual( Stem("portarli"), "port");});
test("portarlo -> port", function() {deepEqual( Stem("portarlo"), "port");});
test("portarne -> port", function() {deepEqual( Stem("portarne"), "port");});
test("portaron -> portaron", function() {deepEqual( Stem("portaron"), "portaron");});
test("portarono -> port", function() {deepEqual( Stem("portarono"), "port");});
test("portarsi -> port", function() {deepEqual( Stem("portarsi"), "port");});
test("portarvi -> port", function() {deepEqual( Stem("portarvi"), "port");});
test("portasse -> port", function() {deepEqual( Stem("portasse"), "port");});
test("portassero -> port", function() {deepEqual( Stem("portassero"), "port");});
test("portata -> port", function() {deepEqual( Stem("portata"), "port");});
test("portate -> port", function() {deepEqual( Stem("portate"), "port");});
test("portateglieli -> portategliel", function() {deepEqual( Stem("portateglieli"), "portategliel");});
test("portati -> port", function() {deepEqual( Stem("portati"), "port");});
test("portatile -> portatil", function() {deepEqual( Stem("portatile"), "portatil");});
test("portato -> port", function() {deepEqual( Stem("portato"), "port");});
test("portator -> portator", function() {deepEqual( Stem("portator"), "portator");});
test("portatore -> portator", function() {deepEqual( Stem("portatore"), "portator");});
test("portatori -> portator", function() {deepEqual( Stem("portatori"), "portator");});
test("portatovi -> portatov", function() {deepEqual( Stem("portatovi"), "portatov");});
test("portatrice -> portatric", function() {deepEqual( Stem("portatrice"), "portatric");});
test("portatrici -> portatric", function() {deepEqual( Stem("portatrici"), "portatric");});
test("portava -> port", function() {deepEqual( Stem("portava"), "port");});
test("portavan -> portavan", function() {deepEqual( Stem("portavan"), "portavan");});
test("portavano -> port", function() {deepEqual( Stem("portavano"), "port");});
test("portavce -> portavc", function() {deepEqual( Stem("portavce"), "portavc");});
test("portavoce -> portavoc", function() {deepEqual( Stem("portavoce"), "portavoc");});
test("porte -> port", function() {deepEqual( Stem("porte"), "port");});
test("portento -> portent", function() {deepEqual( Stem("portento"), "portent");});
test("portentosa -> portent", function() {deepEqual( Stem("portentosa"), "portent");});
test("porterà -> port", function() {deepEqual( Stem("porterà"), "port");});
test("porteranno -> port", function() {deepEqual( Stem("porteranno"), "port");});
test("porterebbe -> port", function() {deepEqual( Stem("porterebbe"), "port");});
test("porterò -> port", function() {deepEqual( Stem("porterò"), "port");});
test("portfolio -> portfol", function() {deepEqual( Stem("portfolio"), "portfol");});
test("porti -> port", function() {deepEqual( Stem("porti"), "port");});
test("portiam -> portiam", function() {deepEqual( Stem("portiam"), "portiam");});
test("portiamo -> port", function() {deepEqual( Stem("portiamo"), "port");});
test("portici -> portic", function() {deepEqual( Stem("portici"), "portic");});
test("portico -> portic", function() {deepEqual( Stem("portico"), "portic");});
test("portiera -> portier", function() {deepEqual( Stem("portiera"), "portier");});
test("portiere -> port", function() {deepEqual( Stem("portiere"), "port");});
test("portieri -> portier", function() {deepEqual( Stem("portieri"), "portier");});
test("portinaio -> portinai", function() {deepEqual( Stem("portinaio"), "portinai");});
test("portino -> portin", function() {deepEqual( Stem("portino"), "portin");});
test("portito -> port", function() {deepEqual( Stem("portito"), "port");});
test("porto -> port", function() {deepEqual( Stem("porto"), "port");});
test("portò -> port", function() {deepEqual( Stem("portò"), "port");});
test("portogallo -> portogall", function() {deepEqual( Stem("portogallo"), "portogall");});
test("portone -> porton", function() {deepEqual( Stem("portone"), "porton");});
test("portuale -> portual", function() {deepEqual( Stem("portuale"), "portual");});
test("portuali -> portual", function() {deepEqual( Stem("portuali"), "portual");});
test("portualità -> portual", function() {deepEqual( Stem("portualità"), "portual");});
test("portugal -> portugal", function() {deepEqual( Stem("portugal"), "portugal");});
test("porzione -> porzion", function() {deepEqual( Stem("porzione"), "porzion");});
test("posa -> pos", function() {deepEqual( Stem("posa"), "pos");});
test("posada -> posad", function() {deepEqual( Stem("posada"), "posad");});
test("posando -> pos", function() {deepEqual( Stem("posando"), "pos");});
test("posar -> pos", function() {deepEqual( Stem("posar"), "pos");});
test("posarci -> pos", function() {deepEqual( Stem("posarci"), "pos");});
test("posare -> pos", function() {deepEqual( Stem("posare"), "pos");});
test("posarlo -> pos", function() {deepEqual( Stem("posarlo"), "pos");});
test("posarsi -> pos", function() {deepEqual( Stem("posarsi"), "pos");});
test("posata -> pos", function() {deepEqual( Stem("posata"), "pos");});
test("posate -> pos", function() {deepEqual( Stem("posate"), "pos");});
test("posati -> pos", function() {deepEqual( Stem("posati"), "pos");});
test("posato -> pos", function() {deepEqual( Stem("posato"), "pos");});
test("posava -> pos", function() {deepEqual( Stem("posava"), "pos");});
test("posavano -> pos", function() {deepEqual( Stem("posavano"), "pos");});
test("poscia -> posc", function() {deepEqual( Stem("poscia"), "posc");});
test("pose -> pos", function() {deepEqual( Stem("pose"), "pos");});
test("posero -> poser", function() {deepEqual( Stem("posero"), "poser");});
test("posibilità -> posibil", function() {deepEqual( Stem("posibilità"), "posibil");});
test("positiva -> posit", function() {deepEqual( Stem("positiva"), "posit");});
test("positivamente -> posit", function() {deepEqual( Stem("positivamente"), "posit");});
test("positive -> posit", function() {deepEqual( Stem("positive"), "posit");});
test("positivi -> posit", function() {deepEqual( Stem("positivi"), "posit");});
test("positivo -> posit", function() {deepEqual( Stem("positivo"), "posit");});
test("positura -> positur", function() {deepEqual( Stem("positura"), "positur");});
test("posizini -> posizin", function() {deepEqual( Stem("posizini"), "posizin");});
test("posizione -> posizion", function() {deepEqual( Stem("posizione"), "posizion");});
test("posizioni -> posizion", function() {deepEqual( Stem("posizioni"), "posizion");});
test("posò -> pos", function() {deepEqual( Stem("posò"), "pos");});
test("posposte -> pospost", function() {deepEqual( Stem("posposte"), "pospost");});
test("possa -> poss", function() {deepEqual( Stem("possa"), "poss");});
test("possan -> possan", function() {deepEqual( Stem("possan"), "possan");});
test("possano -> poss", function() {deepEqual( Stem("possano"), "poss");});
test("possedendo -> possed", function() {deepEqual( Stem("possedendo"), "possed");});
test("possedere -> possed", function() {deepEqual( Stem("possedere"), "possed");});
test("possedessi -> possedess", function() {deepEqual( Stem("possedessi"), "possedess");});
test("possedeva -> possed", function() {deepEqual( Stem("possedeva"), "possed");});
test("posseduta -> possed", function() {deepEqual( Stem("posseduta"), "possed");});
test("possegga -> possegg", function() {deepEqual( Stem("possegga"), "possegg");});
test("possesso -> possess", function() {deepEqual( Stem("possesso"), "possess");});
test("possessore -> possessor", function() {deepEqual( Stem("possessore"), "possessor");});
test("possessori -> possessor", function() {deepEqual( Stem("possessori"), "possessor");});
test("possiam -> possiam", function() {deepEqual( Stem("possiam"), "possiam");});
test("possiamo -> poss", function() {deepEqual( Stem("possiamo"), "poss");});
test("possiate -> poss", function() {deepEqual( Stem("possiate"), "poss");});
test("possibile -> possibil", function() {deepEqual( Stem("possibile"), "possibil");});
test("possibili -> possibil", function() {deepEqual( Stem("possibili"), "possibil");});
test("possibilie -> possibil", function() {deepEqual( Stem("possibilie"), "possibil");});
test("possibilisti -> possibil", function() {deepEqual( Stem("possibilisti"), "possibil");});
test("possibilita -> possibil", function() {deepEqual( Stem("possibilita"), "possibil");});
test("possibilità -> possibil", function() {deepEqual( Stem("possibilità"), "possibil");});
test("possiblità -> possibl", function() {deepEqual( Stem("possiblità"), "possibl");});
test("possiede -> possied", function() {deepEqual( Stem("possiede"), "possied");});
test("posso -> poss", function() {deepEqual( Stem("posso"), "poss");});
test("posson -> posson", function() {deepEqual( Stem("posson"), "posson");});
test("possono -> poss", function() {deepEqual( Stem("possono"), "poss");});
test("post -> post", function() {deepEqual( Stem("post"), "post");});
test("posta -> post", function() {deepEqual( Stem("posta"), "post");});
test("postali -> postal", function() {deepEqual( Stem("postali"), "postal");});
test("postandosi -> post", function() {deepEqual( Stem("postandosi"), "post");});
test("postare -> post", function() {deepEqual( Stem("postare"), "post");});
test("postarono -> post", function() {deepEqual( Stem("postarono"), "post");});
test("postarsi -> post", function() {deepEqual( Stem("postarsi"), "post");});
test("postazione -> postazion", function() {deepEqual( Stem("postazione"), "postazion");});
test("postazioni -> postazion", function() {deepEqual( Stem("postazioni"), "postazion");});
test("poste -> post", function() {deepEqual( Stem("poste"), "post");});
test("postelegrafonici -> postelegrafon", function() {deepEqual( Stem("postelegrafonici"), "postelegrafon");});
test("posteri -> poster", function() {deepEqual( Stem("posteri"), "poster");});
test("posteriore -> posterior", function() {deepEqual( Stem("posteriore"), "posterior");});
test("posteriori -> posterior", function() {deepEqual( Stem("posteriori"), "posterior");});
test("posterità -> poster", function() {deepEqual( Stem("posterità"), "poster");});
test("posti -> post", function() {deepEqual( Stem("posti"), "post");});
test("postì -> post", function() {deepEqual( Stem("postì"), "post");});
test("posticipo -> posticip", function() {deepEqual( Stem("posticipo"), "posticip");});
test("postiglione -> postiglion", function() {deepEqual( Stem("postiglione"), "postiglion");});
test("posto -> post", function() {deepEqual( Stem("posto"), "post");});
test("postò -> post", function() {deepEqual( Stem("postò"), "post");});
test("potanno -> potann", function() {deepEqual( Stem("potanno"), "potann");});
test("potata -> pot", function() {deepEqual( Stem("potata"), "pot");});
test("pote -> pot", function() {deepEqual( Stem("pote"), "pot");});
test("poté -> pot", function() {deepEqual( Stem("poté"), "pot");});
test("potendo -> pot", function() {deepEqual( Stem("potendo"), "pot");});
test("potendolo -> pot", function() {deepEqual( Stem("potendolo"), "pot");});
test("potentati -> potent", function() {deepEqual( Stem("potentati"), "potent");});
test("potente -> potent", function() {deepEqual( Stem("potente"), "potent");});
test("potenti -> potent", function() {deepEqual( Stem("potenti"), "potent");});
test("potenza -> potenz", function() {deepEqual( Stem("potenza"), "potenz");});
test("potenze -> potenz", function() {deepEqual( Stem("potenze"), "potenz");});
test("potenziale -> potenzial", function() {deepEqual( Stem("potenziale"), "potenzial");});
test("potenziali -> potenzial", function() {deepEqual( Stem("potenziali"), "potenzial");});
test("potenzialità -> potenzial", function() {deepEqual( Stem("potenzialità"), "potenzial");});
test("potenziamento -> potenz", function() {deepEqual( Stem("potenziamento"), "potenz");});
test("potenziando -> potenz", function() {deepEqual( Stem("potenziando"), "potenz");});
test("poter -> poter", function() {deepEqual( Stem("poter"), "poter");});
test("poterci -> pot", function() {deepEqual( Stem("poterci"), "pot");});
test("potere -> pot", function() {deepEqual( Stem("potere"), "pot");});
test("potergli -> pot", function() {deepEqual( Stem("potergli"), "pot");});
test("poteri -> poter", function() {deepEqual( Stem("poteri"), "poter");});
test("poterit -> poterit", function() {deepEqual( Stem("poterit"), "poterit");});
test("poterla -> pot", function() {deepEqual( Stem("poterla"), "pot");});
test("poterle -> pot", function() {deepEqual( Stem("poterle"), "pot");});
test("poterli -> pot", function() {deepEqual( Stem("poterli"), "pot");});
test("poterlo -> pot", function() {deepEqual( Stem("poterlo"), "pot");});
test("poterne -> pot", function() {deepEqual( Stem("poterne"), "pot");});
test("poterono -> pot", function() {deepEqual( Stem("poterono"), "pot");});
test("potersene -> pot", function() {deepEqual( Stem("potersene"), "pot");});
test("potersi -> pot", function() {deepEqual( Stem("potersi"), "pot");});
test("potervi -> pot", function() {deepEqual( Stem("potervi"), "pot");});
test("potesse -> potess", function() {deepEqual( Stem("potesse"), "potess");});
test("potesser -> potesser", function() {deepEqual( Stem("potesser"), "potesser");});
test("potessero -> pot", function() {deepEqual( Stem("potessero"), "pot");});
test("potessi -> potess", function() {deepEqual( Stem("potessi"), "potess");});
test("potessimo -> potessim", function() {deepEqual( Stem("potessimo"), "potessim");});
test("potestà -> potest", function() {deepEqual( Stem("potestà"), "potest");});
test("poteste -> potest", function() {deepEqual( Stem("poteste"), "potest");});
test("potete -> pot", function() {deepEqual( Stem("potete"), "pot");});
test("poteua -> poteu", function() {deepEqual( Stem("poteua"), "poteu");});
test("poteva -> pot", function() {deepEqual( Stem("poteva"), "pot");});
test("potevamo -> pot", function() {deepEqual( Stem("potevamo"), "pot");});
test("potevan -> potevan", function() {deepEqual( Stem("potevan"), "potevan");});
test("potevano -> pot", function() {deepEqual( Stem("potevano"), "pot");});
test("potevate -> pot", function() {deepEqual( Stem("potevate"), "pot");});
test("potevi -> pot", function() {deepEqual( Stem("potevi"), "pot");});
test("potevo -> pot", function() {deepEqual( Stem("potevo"), "pot");});
test("poti -> pot", function() {deepEqual( Stem("poti"), "pot");});
test("potrà -> potr", function() {deepEqual( Stem("potrà"), "potr");});
test("potrai -> potra", function() {deepEqual( Stem("potrai"), "potra");});
test("potranno -> potrann", function() {deepEqual( Stem("potranno"), "potrann");});
test("potrebb -> potrebb", function() {deepEqual( Stem("potrebb"), "potrebb");});
test("potrebbe -> potrebb", function() {deepEqual( Stem("potrebbe"), "potrebb");});
test("potrebber -> potrebber", function() {deepEqual( Stem("potrebber"), "potrebber");});
test("potrebbero -> potrebber", function() {deepEqual( Stem("potrebbero"), "potrebber");});
test("potrei -> potre", function() {deepEqual( Stem("potrei"), "potre");});
test("potremmo -> potr", function() {deepEqual( Stem("potremmo"), "potr");});
test("potremo -> potrem", function() {deepEqual( Stem("potremo"), "potrem");});
test("potreste -> potrest", function() {deepEqual( Stem("potreste"), "potrest");});
test("potresti -> potrest", function() {deepEqual( Stem("potresti"), "potrest");});
test("potrete -> potr", function() {deepEqual( Stem("potrete"), "potr");});
test("potrò -> potr", function() {deepEqual( Stem("potrò"), "potr");});
test("poturo -> potur", function() {deepEqual( Stem("poturo"), "potur");});
test("potuta -> pot", function() {deepEqual( Stem("potuta"), "pot");});
test("potute -> pot", function() {deepEqual( Stem("potute"), "pot");});
test("potuti -> pot", function() {deepEqual( Stem("potuti"), "pot");});
test("potuto -> pot", function() {deepEqual( Stem("potuto"), "pot");});
test("poueri -> pouer", function() {deepEqual( Stem("poueri"), "pouer");});
test("poule -> poul", function() {deepEqual( Stem("poule"), "poul");});
test("pover -> pover", function() {deepEqual( Stem("pover"), "pover");});
test("povera -> pover", function() {deepEqual( Stem("povera"), "pover");});
test("poveraccio -> poveracc", function() {deepEqual( Stem("poveraccio"), "poveracc");});
test("povere -> pov", function() {deepEqual( Stem("povere"), "pov");});
test("poverella -> poverell", function() {deepEqual( Stem("poverella"), "poverell");});
test("poverelli -> poverell", function() {deepEqual( Stem("poverelli"), "poverell");});
test("poveretta -> poverett", function() {deepEqual( Stem("poveretta"), "poverett");});
test("poverette -> poverett", function() {deepEqual( Stem("poverette"), "poverett");});
test("poveretti -> poverett", function() {deepEqual( Stem("poveretti"), "poverett");});
test("poveretto -> poverett", function() {deepEqual( Stem("poveretto"), "poverett");});
test("poveri -> pover", function() {deepEqual( Stem("poveri"), "pover");});
test("poverina -> poverin", function() {deepEqual( Stem("poverina"), "poverin");});
test("poverine -> poverin", function() {deepEqual( Stem("poverine"), "poverin");});
test("poverini -> poverin", function() {deepEqual( Stem("poverini"), "poverin");});
test("poverino -> poverin", function() {deepEqual( Stem("poverino"), "poverin");});
test("poverissimi -> poverissim", function() {deepEqual( Stem("poverissimi"), "poverissim");});
test("povero -> pover", function() {deepEqual( Stem("povero"), "pover");});
test("povertà -> povert", function() {deepEqual( Stem("povertà"), "povert");});
test("power -> power", function() {deepEqual( Stem("power"), "power");});
test("powergen -> powergen", function() {deepEqual( Stem("powergen"), "powergen");});
test("pozze -> pozz", function() {deepEqual( Stem("pozze"), "pozz");});
test("pozzi -> pozz", function() {deepEqual( Stem("pozzi"), "pozz");});
test("pozzo -> pozz", function() {deepEqual( Stem("pozzo"), "pozz");});
test("pozzobonelli -> pozzobonell", function() {deepEqual( Stem("pozzobonelli"), "pozzobonell");});
test("pp -> pp", function() {deepEqual( Stem("pp"), "pp");});
test("ppi -> ppi", function() {deepEqual( Stem("ppi"), "ppi");});
test("pr -> pr", function() {deepEqual( Stem("pr"), "pr");});
test("praderio -> prader", function() {deepEqual( Stem("praderio"), "prader");});
test("praedicti -> praedict", function() {deepEqual( Stem("praedicti"), "praedict");});
test("praga -> prag", function() {deepEqual( Stem("praga"), "prag");});
test("pragati -> prag", function() {deepEqual( Stem("pragati"), "prag");});
test("pragmatici -> pragmat", function() {deepEqual( Stem("pragmatici"), "pragmat");});
test("pralboino -> pralboin", function() {deepEqual( Stem("pralboino"), "pralboin");});
test("prammatica -> prammat", function() {deepEqual( Stem("prammatica"), "prammat");});
test("pranab -> pranab", function() {deepEqual( Stem("pranab"), "pranab");});
test("prandi -> prand", function() {deepEqual( Stem("prandi"), "prand");});
test("prandini -> prandin", function() {deepEqual( Stem("prandini"), "prandin");});
test("pranzare -> pranz", function() {deepEqual( Stem("pranzare"), "pranz");});
test("pranzi -> pranz", function() {deepEqual( Stem("pranzi"), "pranz");});
test("pranzo -> pranz", function() {deepEqual( Stem("pranzo"), "pranz");});
test("prassede -> prassed", function() {deepEqual( Stem("prassede"), "prassed");});
test("prassi -> prass", function() {deepEqual( Stem("prassi"), "prass");});
test("prati -> prat", function() {deepEqual( Stem("prati"), "prat");});
test("pratica -> pratic", function() {deepEqual( Stem("pratica"), "pratic");});
test("praticabile -> pratic", function() {deepEqual( Stem("praticabile"), "pratic");});
test("praticamente -> pratic", function() {deepEqual( Stem("praticamente"), "pratic");});
test("praticare -> pratic", function() {deepEqual( Stem("praticare"), "pratic");});
test("praticate -> pratic", function() {deepEqual( Stem("praticate"), "pratic");});
test("praticato -> pratic", function() {deepEqual( Stem("praticato"), "pratic");});
test("pratiche -> pratic", function() {deepEqual( Stem("pratiche"), "pratic");});
test("pratichi -> pratic", function() {deepEqual( Stem("pratichi"), "pratic");});
test("pratico -> pratic", function() {deepEqual( Stem("pratico"), "pratic");});
test("praticò -> pratic", function() {deepEqual( Stem("praticò"), "pratic");});
test("prato -> prat", function() {deepEqual( Stem("prato"), "prat");});
test("prava -> prav", function() {deepEqual( Stem("prava"), "prav");});
test("prc -> prc", function() {deepEqual( Stem("prc"), "prc");});
test("prd -> prd", function() {deepEqual( Stem("prd"), "prd");});
test("pre -> pre", function() {deepEqual( Stem("pre"), "pre");});
test("preamboli -> preambol", function() {deepEqual( Stem("preamboli"), "preambol");});
test("preannuncia -> preannunc", function() {deepEqual( Stem("preannuncia"), "preannunc");});
test("preannunciano -> preannunc", function() {deepEqual( Stem("preannunciano"), "preannunc");});
test("preannunciata -> preannunc", function() {deepEqual( Stem("preannunciata"), "preannunc");});
test("preannunciate -> preannunc", function() {deepEqual( Stem("preannunciate"), "preannunc");});
test("preannunciato -> preannunc", function() {deepEqual( Stem("preannunciato"), "preannunc");});
test("prec -> prec", function() {deepEqual( Stem("prec"), "prec");});
test("precaria -> precar", function() {deepEqual( Stem("precaria"), "precar");});
test("precarietà -> precariet", function() {deepEqual( Stem("precarietà"), "precariet");});
test("precauzionale -> precauzional", function() {deepEqual( Stem("precauzionale"), "precauzional");});
test("precauzionali -> precauzional", function() {deepEqual( Stem("precauzionali"), "precauzional");});
test("precauzione -> precauzion", function() {deepEqual( Stem("precauzione"), "precauzion");});
test("precauzioni -> precauzion", function() {deepEqual( Stem("precauzioni"), "precauzion");});
test("precede -> preced", function() {deepEqual( Stem("precede"), "preced");});
test("precedendo -> preced", function() {deepEqual( Stem("precedendo"), "preced");});
test("precedendolo -> preced", function() {deepEqual( Stem("precedendolo"), "preced");});
test("precedente -> precedent", function() {deepEqual( Stem("precedente"), "precedent");});
test("precedentemente -> precedent", function() {deepEqual( Stem("precedentemente"), "precedent");});
test("precedenti -> precedent", function() {deepEqual( Stem("precedenti"), "precedent");});
test("precedenza -> precedent", function() {deepEqual( Stem("precedenza"), "precedent");});
test("precedere -> preced", function() {deepEqual( Stem("precedere"), "preced");});
test("precedette -> precedett", function() {deepEqual( Stem("precedette"), "precedett");});
test("precedeuto -> preced", function() {deepEqual( Stem("precedeuto"), "preced");});
test("precedeva -> preced", function() {deepEqual( Stem("precedeva"), "preced");});
test("preceduta -> preced", function() {deepEqual( Stem("preceduta"), "preced");});
test("precedute -> preced", function() {deepEqual( Stem("precedute"), "preced");});
test("preceduti -> preced", function() {deepEqual( Stem("preceduti"), "preced");});
test("preceduto -> preced", function() {deepEqual( Stem("preceduto"), "preced");});
test("precetti -> precett", function() {deepEqual( Stem("precetti"), "precett");});
test("precetto -> precett", function() {deepEqual( Stem("precetto"), "precett");});
test("preci -> prec", function() {deepEqual( Stem("preci"), "prec");});
test("preciasto -> preciast", function() {deepEqual( Stem("preciasto"), "preciast");});
test("precipita -> precip", function() {deepEqual( Stem("precipita"), "precip");});
test("precipitando -> precipit", function() {deepEqual( Stem("precipitando"), "precipit");});
test("precipitare -> precipit", function() {deepEqual( Stem("precipitare"), "precipit");});
test("precipitarono -> precipit", function() {deepEqual( Stem("precipitarono"), "precipit");});
test("precipitata -> precipit", function() {deepEqual( Stem("precipitata"), "precipit");});
test("precipitate -> precipit", function() {deepEqual( Stem("precipitate"), "precipit");});
test("precipitati -> precipit", function() {deepEqual( Stem("precipitati"), "precipit");});
test("precipitato -> precipit", function() {deepEqual( Stem("precipitato"), "precipit");});
test("precipitazione -> precipit", function() {deepEqual( Stem("precipitazione"), "precipit");});
test("precipitazioni -> precipit", function() {deepEqual( Stem("precipitazioni"), "precipit");});
test("precipitò -> precipit", function() {deepEqual( Stem("precipitò"), "precipit");});
test("precipitosa -> precipit", function() {deepEqual( Stem("precipitosa"), "precipit");});
test("precipitosamente -> precipit", function() {deepEqual( Stem("precipitosamente"), "precipit");});
test("precipitoso -> precipit", function() {deepEqual( Stem("precipitoso"), "precipit");});
test("precipizi -> precipiz", function() {deepEqual( Stem("precipizi"), "precipiz");});
test("precipizio -> precipiz", function() {deepEqual( Stem("precipizio"), "precipiz");});
test("precisa -> precis", function() {deepEqual( Stem("precisa"), "precis");});
test("precisamente -> precis", function() {deepEqual( Stem("precisamente"), "precis");});
test("precisando -> precis", function() {deepEqual( Stem("precisando"), "precis");});
test("precisare -> precis", function() {deepEqual( Stem("precisare"), "precis");});
test("precisato -> precis", function() {deepEqual( Stem("precisato"), "precis");});
test("precisazione -> precis", function() {deepEqual( Stem("precisazione"), "precis");});
test("precisazioni -> precis", function() {deepEqual( Stem("precisazioni"), "precis");});
test("precise -> precis", function() {deepEqual( Stem("precise"), "precis");});
test("preciserò -> precis", function() {deepEqual( Stem("preciserò"), "precis");});
test("precisione -> precision", function() {deepEqual( Stem("precisione"), "precision");});
test("preciso -> precis", function() {deepEqual( Stem("preciso"), "precis");});
test("precistato -> precist", function() {deepEqual( Stem("precistato"), "precist");});
test("preclusioni -> preclusion", function() {deepEqual( Stem("preclusioni"), "preclusion");});
test("precocemente -> precoc", function() {deepEqual( Stem("precocemente"), "precoc");});
test("preconcette -> preconcett", function() {deepEqual( Stem("preconcette"), "preconcett");});
test("preconcetti -> preconcett", function() {deepEqual( Stem("preconcetti"), "preconcett");});
test("precongresso -> precongress", function() {deepEqual( Stem("precongresso"), "precongress");});
test("precongressuale -> precongressual", function() {deepEqual( Stem("precongressuale"), "precongressual");});
test("precorrendo -> precorr", function() {deepEqual( Stem("precorrendo"), "precorr");});
test("precorreva -> precorr", function() {deepEqual( Stem("precorreva"), "precorr");});
test("precorse -> precors", function() {deepEqual( Stem("precorse"), "precors");});
test("preda -> pred", function() {deepEqual( Stem("preda"), "pred");});
test("predator -> predator", function() {deepEqual( Stem("predator"), "predator");});
test("predazzo -> predazz", function() {deepEqual( Stem("predazzo"), "predazz");});
test("prede -> pred", function() {deepEqual( Stem("prede"), "pred");});
test("predecessore -> predecessor", function() {deepEqual( Stem("predecessore"), "predecessor");});
test("predecessori -> predecessor", function() {deepEqual( Stem("predecessori"), "predecessor");});
test("predellino -> predellin", function() {deepEqual( Stem("predellino"), "predellin");});
test("predetta -> predett", function() {deepEqual( Stem("predetta"), "predett");});
test("predica -> predic", function() {deepEqual( Stem("predica"), "predic");});
test("predicando -> predic", function() {deepEqual( Stem("predicando"), "predic");});
test("predicano -> predic", function() {deepEqual( Stem("predicano"), "predic");});
test("predicare -> predic", function() {deepEqual( Stem("predicare"), "predic");});
test("predicargli -> predic", function() {deepEqual( Stem("predicargli"), "predic");});
test("predicate -> predic", function() {deepEqual( Stem("predicate"), "predic");});
test("predicato -> predic", function() {deepEqual( Stem("predicato"), "predic");});
test("predicatore -> predic", function() {deepEqual( Stem("predicatore"), "predic");});
test("predicatrice -> predic", function() {deepEqual( Stem("predicatrice"), "predic");});
test("predicava -> predic", function() {deepEqual( Stem("predicava"), "predic");});
test("prediche -> predic", function() {deepEqual( Stem("prediche"), "predic");});
test("predicherà -> predic", function() {deepEqual( Stem("predicherà"), "predic");});
test("predieri -> predier", function() {deepEqual( Stem("predieri"), "predier");});
test("prediletta -> predilett", function() {deepEqual( Stem("prediletta"), "predilett");});
test("prediletto -> predilett", function() {deepEqual( Stem("prediletto"), "predilett");});
test("predisponendo -> predispon", function() {deepEqual( Stem("predisponendo"), "predispon");});
test("predisposta -> predispost", function() {deepEqual( Stem("predisposta"), "predispost");});
test("predisposto -> predispost", function() {deepEqual( Stem("predisposto"), "predispost");});
test("predizione -> predizion", function() {deepEqual( Stem("predizione"), "predizion");});
test("predizioni -> predizion", function() {deepEqual( Stem("predizioni"), "predizion");});
test("predominante -> predomin", function() {deepEqual( Stem("predominante"), "predomin");});
test("predominanti -> predomin", function() {deepEqual( Stem("predominanti"), "predomin");});
test("predominare -> predomin", function() {deepEqual( Stem("predominare"), "predomin");});
test("predominati -> predomin", function() {deepEqual( Stem("predominati"), "predomin");});
test("predominato -> predomin", function() {deepEqual( Stem("predominato"), "predomin");});
test("predominava -> predomin", function() {deepEqual( Stem("predominava"), "predomin");});
test("predomini -> predomin", function() {deepEqual( Stem("predomini"), "predomin");});
test("preelettorale -> preelettoral", function() {deepEqual( Stem("preelettorale"), "preelettoral");});
test("preferenza -> preferent", function() {deepEqual( Stem("preferenza"), "preferent");});
test("preferenze -> preferent", function() {deepEqual( Stem("preferenze"), "preferent");});
test("preferibile -> prefer", function() {deepEqual( Stem("preferibile"), "prefer");});
test("preferisce -> prefer", function() {deepEqual( Stem("preferisce"), "prefer");});
test("preferita -> prefer", function() {deepEqual( Stem("preferita"), "prefer");});
test("preferito -> prefer", function() {deepEqual( Stem("preferito"), "prefer");});
test("preferiva -> prefer", function() {deepEqual( Stem("preferiva"), "prefer");});
test("prefetto -> prefett", function() {deepEqual( Stem("prefetto"), "prefett");});
test("prefetture -> prefettur", function() {deepEqual( Stem("prefetture"), "prefettur");});
test("prefigge -> prefigg", function() {deepEqual( Stem("prefigge"), "prefigg");});
test("prefigura -> prefigur", function() {deepEqual( Stem("prefigura"), "prefigur");});
test("prefigurata -> prefigur", function() {deepEqual( Stem("prefigurata"), "prefigur");});
test("prefissate -> prefiss", function() {deepEqual( Stem("prefissate"), "prefiss");});
test("prefisso -> prefiss", function() {deepEqual( Stem("prefisso"), "prefiss");});
test("prega -> preg", function() {deepEqual( Stem("prega"), "preg");});
test("pregai -> prega", function() {deepEqual( Stem("pregai"), "prega");});
test("pregando -> preg", function() {deepEqual( Stem("pregando"), "preg");});
test("pregano -> preg", function() {deepEqual( Stem("pregano"), "preg");});
test("pregar -> preg", function() {deepEqual( Stem("pregar"), "preg");});
test("pregare -> preg", function() {deepEqual( Stem("pregare"), "preg");});
test("pregarla -> preg", function() {deepEqual( Stem("pregarla"), "preg");});
test("pregarlo -> preg", function() {deepEqual( Stem("pregarlo"), "preg");});
test("pregassi -> preg", function() {deepEqual( Stem("pregassi"), "preg");});
test("pregata -> preg", function() {deepEqual( Stem("pregata"), "preg");});
test("pregate -> preg", function() {deepEqual( Stem("pregate"), "preg");});
test("pregatelo -> pregatel", function() {deepEqual( Stem("pregatelo"), "pregatel");});
test("pregati -> preg", function() {deepEqual( Stem("pregati"), "preg");});
test("pregato -> preg", function() {deepEqual( Stem("pregato"), "preg");});
test("pregava -> preg", function() {deepEqual( Stem("pregava"), "preg");});
test("pregevole -> pregevol", function() {deepEqual( Stem("pregevole"), "pregevol");});
test("pregherei -> preg", function() {deepEqual( Stem("pregherei"), "preg");});
test("pregheremo -> preg", function() {deepEqual( Stem("pregheremo"), "preg");});
test("pregherete -> preg", function() {deepEqual( Stem("pregherete"), "preg");});
test("pregherò -> preg", function() {deepEqual( Stem("pregherò"), "preg");});
test("preghi -> preg", function() {deepEqual( Stem("preghi"), "preg");});
test("preghiamo -> preg", function() {deepEqual( Stem("preghiamo"), "preg");});
test("preghiera -> preghier", function() {deepEqual( Stem("preghiera"), "preghier");});
test("preghiere -> preg", function() {deepEqual( Stem("preghiere"), "preg");});
test("preghin -> preghin", function() {deepEqual( Stem("preghin"), "preghin");});
test("preghino -> preghin", function() {deepEqual( Stem("preghino"), "preghin");});
test("pregiudicare -> pregiudic", function() {deepEqual( Stem("pregiudicare"), "pregiudic");});
test("pregiudicati -> pregiudic", function() {deepEqual( Stem("pregiudicati"), "pregiudic");});
test("pregiudicato -> pregiudic", function() {deepEqual( Stem("pregiudicato"), "pregiudic");});
test("pregiudizi -> pregiudiz", function() {deepEqual( Stem("pregiudizi"), "pregiudiz");});
test("pregiudiziale -> pregiudizial", function() {deepEqual( Stem("pregiudiziale"), "pregiudizial");});
test("pregiudiziali -> pregiudizial", function() {deepEqual( Stem("pregiudiziali"), "pregiudizial");});
test("pregiudizio -> pregiudiz", function() {deepEqual( Stem("pregiudizio"), "pregiudiz");});
test("pregni -> pregn", function() {deepEqual( Stem("pregni"), "pregn");});
test("prego -> preg", function() {deepEqual( Stem("prego"), "preg");});
test("pregò -> preg", function() {deepEqual( Stem("pregò"), "preg");});
test("pregressi -> pregress", function() {deepEqual( Stem("pregressi"), "pregress");});
test("preintesa -> preintes", function() {deepEqual( Stem("preintesa"), "preintes");});
test("prelati -> prel", function() {deepEqual( Stem("prelati"), "prel");});
test("prelato -> prel", function() {deepEqual( Stem("prelato"), "prel");});
test("prelevare -> prelev", function() {deepEqual( Stem("prelevare"), "prelev");});
test("prelevarla -> prelev", function() {deepEqual( Stem("prelevarla"), "prelev");});
test("prelevata -> prelev", function() {deepEqual( Stem("prelevata"), "prelev");});
test("prelevato -> prelev", function() {deepEqual( Stem("prelevato"), "prelev");});
test("prelievi -> prel", function() {deepEqual( Stem("prelievi"), "prel");});
test("prelievo -> prel", function() {deepEqual( Stem("prelievo"), "prel");});
test("preliminare -> prelimin", function() {deepEqual( Stem("preliminare"), "prelimin");});
test("preliminari -> preliminar", function() {deepEqual( Stem("preliminari"), "preliminar");});
test("preliminarmente -> preliminar", function() {deepEqual( Stem("preliminarmente"), "preliminar");});
test("premafin -> premafin", function() {deepEqual( Stem("premafin"), "premafin");});
test("premano -> prem", function() {deepEqual( Stem("premano"), "prem");});
test("preme -> prem", function() {deepEqual( Stem("preme"), "prem");});
test("premeditato -> premedit", function() {deepEqual( Stem("premeditato"), "premedit");});
test("prementi -> prement", function() {deepEqual( Stem("prementi"), "prement");});
test("premere -> prem", function() {deepEqual( Stem("premere"), "prem");});
test("premessa -> premess", function() {deepEqual( Stem("premessa"), "premess");});
test("premesse -> premess", function() {deepEqual( Stem("premesse"), "premess");});
test("premesso -> premess", function() {deepEqual( Stem("premesso"), "premess");});
test("premette -> premett", function() {deepEqual( Stem("premette"), "premett");});
test("premettere -> premett", function() {deepEqual( Stem("premettere"), "premett");});
test("premeva -> prem", function() {deepEqual( Stem("premeva"), "prem");});
test("premevano -> prem", function() {deepEqual( Stem("premevano"), "prem");});
test("premi -> prem", function() {deepEqual( Stem("premi"), "prem");});
test("premia -> prem", function() {deepEqual( Stem("premia"), "prem");});
test("premier -> premier", function() {deepEqual( Stem("premier"), "premier");});
test("preminente -> preminent", function() {deepEqual( Stem("preminente"), "preminent");});
test("preminenza -> preminent", function() {deepEqual( Stem("preminenza"), "preminent");});
test("premio -> prem", function() {deepEqual( Stem("premio"), "prem");});
test("premon -> premon", function() {deepEqual( Stem("premon"), "premon");});
test("premuda -> premud", function() {deepEqual( Stem("premuda"), "premud");});
test("premunire -> premun", function() {deepEqual( Stem("premunire"), "premun");});
test("premuniti -> premun", function() {deepEqual( Stem("premuniti"), "premun");});
test("premura -> premur", function() {deepEqual( Stem("premura"), "premur");});
test("premure -> premur", function() {deepEqual( Stem("premure"), "premur");});
test("premurosa -> premur", function() {deepEqual( Stem("premurosa"), "premur");});
test("premurosamente -> premur", function() {deepEqual( Stem("premurosamente"), "premur");});
test("premurose -> premur", function() {deepEqual( Stem("premurose"), "premur");});
test("premurosi -> premur", function() {deepEqual( Stem("premurosi"), "premur");});
test("premuroso -> premur", function() {deepEqual( Stem("premuroso"), "premur");});
test("prencipi -> prencip", function() {deepEqual( Stem("prencipi"), "prencip");});
test("prenda -> prend", function() {deepEqual( Stem("prenda"), "prend");});
test("prendano -> prend", function() {deepEqual( Stem("prendano"), "prend");});
test("prende -> prend", function() {deepEqual( Stem("prende"), "prend");});
test("prendendo -> prend", function() {deepEqual( Stem("prendendo"), "prend");});
test("prendendogli -> prend", function() {deepEqual( Stem("prendendogli"), "prend");});
test("prendendola -> prend", function() {deepEqual( Stem("prendendola"), "prend");});
test("prendendole -> prend", function() {deepEqual( Stem("prendendole"), "prend");});
test("prendendolo -> prend", function() {deepEqual( Stem("prendendolo"), "prend");});
test("prendendone -> prend", function() {deepEqual( Stem("prendendone"), "prend");});
test("prendendosela -> prendendosel", function() {deepEqual( Stem("prendendosela"), "prendendosel");});
test("prender -> prender", function() {deepEqual( Stem("prender"), "prender");});
test("prenderà -> prend", function() {deepEqual( Stem("prenderà"), "prend");});
test("prenderanno -> prend", function() {deepEqual( Stem("prenderanno"), "prend");});
test("prendere -> prend", function() {deepEqual( Stem("prendere"), "prend");});
test("prenderemo -> prend", function() {deepEqual( Stem("prenderemo"), "prend");});
test("prendergli -> prend", function() {deepEqual( Stem("prendergli"), "prend");});
test("prenderla -> prend", function() {deepEqual( Stem("prenderla"), "prend");});
test("prenderle -> prend", function() {deepEqual( Stem("prenderle"), "prend");});
test("prenderli -> prend", function() {deepEqual( Stem("prenderli"), "prend");});
test("prenderlo -> prend", function() {deepEqual( Stem("prenderlo"), "prend");});
test("prendermelo -> prend", function() {deepEqual( Stem("prendermelo"), "prend");});
test("prendermi -> prend", function() {deepEqual( Stem("prendermi"), "prend");});
test("prenderne -> prend", function() {deepEqual( Stem("prenderne"), "prend");});
test("prenderò -> prend", function() {deepEqual( Stem("prenderò"), "prend");});
test("prendersela -> prendersel", function() {deepEqual( Stem("prendersela"), "prendersel");});
test("prenderselo -> prendersel", function() {deepEqual( Stem("prenderselo"), "prendersel");});
test("prendersene -> prend", function() {deepEqual( Stem("prendersene"), "prend");});
test("prendersi -> prend", function() {deepEqual( Stem("prendersi"), "prend");});
test("prendervi -> prend", function() {deepEqual( Stem("prendervi"), "prend");});
test("prendesse -> prendess", function() {deepEqual( Stem("prendesse"), "prendess");});
test("prendessero -> prend", function() {deepEqual( Stem("prendessero"), "prend");});
test("prendete -> prend", function() {deepEqual( Stem("prendete"), "prend");});
test("prendetele -> prendetel", function() {deepEqual( Stem("prendetele"), "prendetel");});
test("prendeva -> prend", function() {deepEqual( Stem("prendeva"), "prend");});
test("prendevan -> prendevan", function() {deepEqual( Stem("prendevan"), "prendevan");});
test("prendevano -> prend", function() {deepEqual( Stem("prendevano"), "prend");});
test("prendevo -> prend", function() {deepEqual( Stem("prendevo"), "prend");});
test("prendi -> prend", function() {deepEqual( Stem("prendi"), "prend");});
test("prendiamo -> prend", function() {deepEqual( Stem("prendiamo"), "prend");});
test("prendiate -> prend", function() {deepEqual( Stem("prendiate"), "prend");});
test("prenditore -> prenditor", function() {deepEqual( Stem("prenditore"), "prenditor");});
test("prendo -> prend", function() {deepEqual( Stem("prendo"), "prend");});
test("prendon -> prendon", function() {deepEqual( Stem("prendon"), "prendon");});
test("prendono -> prend", function() {deepEqual( Stem("prendono"), "prend");});
test("prenotarsi -> prenot", function() {deepEqual( Stem("prenotarsi"), "prenot");});
test("prenotazione -> prenot", function() {deepEqual( Stem("prenotazione"), "prenot");});
test("prenotazioni -> prenot", function() {deepEqual( Stem("prenotazioni"), "prenot");});
test("preoccupa -> preoccup", function() {deepEqual( Stem("preoccupa"), "preoccup");});
test("preoccupante -> preoccup", function() {deepEqual( Stem("preoccupante"), "preoccup");});
test("preoccupare -> preoccup", function() {deepEqual( Stem("preoccupare"), "preoccup");});
test("preoccuparsi -> preoccup", function() {deepEqual( Stem("preoccuparsi"), "preoccup");});
test("preoccupata -> preoccup", function() {deepEqual( Stem("preoccupata"), "preoccup");});
test("preoccupatevi -> preoccupat", function() {deepEqual( Stem("preoccupatevi"), "preoccupat");});
test("preoccupati -> preoccup", function() {deepEqual( Stem("preoccupati"), "preoccup");});
test("preoccupatissimo -> preoccupatissim", function() {deepEqual( Stem("preoccupatissimo"), "preoccupatissim");});
test("preoccupato -> preoccup", function() {deepEqual( Stem("preoccupato"), "preoccup");});
test("preoccupazione -> preoccup", function() {deepEqual( Stem("preoccupazione"), "preoccup");});
test("preoccupazionè -> preoccupazion", function() {deepEqual( Stem("preoccupazionè"), "preoccupazion");});
test("preoccupazioni -> preoccup", function() {deepEqual( Stem("preoccupazioni"), "preoccup");});
test("prepara -> prepar", function() {deepEqual( Stem("prepara"), "prepar");});
test("preparando -> prepar", function() {deepEqual( Stem("preparando"), "prepar");});
test("preparano -> prepar", function() {deepEqual( Stem("preparano"), "prepar");});
test("preparar -> prepar", function() {deepEqual( Stem("preparar"), "prepar");});
test("preparare -> prepar", function() {deepEqual( Stem("preparare"), "prepar");});
test("prepararne -> prepar", function() {deepEqual( Stem("prepararne"), "prepar");});
test("prepararsi -> prepar", function() {deepEqual( Stem("prepararsi"), "prepar");});
test("prepararvi -> prepar", function() {deepEqual( Stem("prepararvi"), "prepar");});
test("preparasse -> prepar", function() {deepEqual( Stem("preparasse"), "prepar");});
test("preparata -> prepar", function() {deepEqual( Stem("preparata"), "prepar");});
test("preparate -> prepar", function() {deepEqual( Stem("preparate"), "prepar");});
test("preparati -> prepar", function() {deepEqual( Stem("preparati"), "prepar");});
test("preparativi -> prepar", function() {deepEqual( Stem("preparativi"), "prepar");});
test("preparato -> prepar", function() {deepEqual( Stem("preparato"), "prepar");});
test("preparatorie -> preparator", function() {deepEqual( Stem("preparatorie"), "preparator");});
test("preparazione -> prepar", function() {deepEqual( Stem("preparazione"), "prepar");});
test("prepensinamenti -> prepensin", function() {deepEqual( Stem("prepensinamenti"), "prepensin");});
test("prepensionamenti -> prepension", function() {deepEqual( Stem("prepensionamenti"), "prepension");});
test("prepensionamento -> prepension", function() {deepEqual( Stem("prepensionamento"), "prepension");});
test("preposte -> prepost", function() {deepEqual( Stem("preposte"), "prepost");});
test("prepotente -> prepotent", function() {deepEqual( Stem("prepotente"), "prepotent");});
test("prepotenti -> prepotent", function() {deepEqual( Stem("prepotenti"), "prepotent");});
test("prepotenza -> prepotent", function() {deepEqual( Stem("prepotenza"), "prepotent");});
test("prepotenze -> prepotent", function() {deepEqual( Stem("prepotenze"), "prepotent");});
test("prerogativa -> prerog", function() {deepEqual( Stem("prerogativa"), "prerog");});
test("presa -> pres", function() {deepEqual( Stem("presa"), "pres");});
test("presagire -> presag", function() {deepEqual( Stem("presagire"), "presag");});
test("prescelta -> prescelt", function() {deepEqual( Stem("prescelta"), "prescelt");});
test("prescelto -> prescelt", function() {deepEqual( Stem("prescelto"), "prescelt");});
test("prescinde -> prescind", function() {deepEqual( Stem("prescinde"), "prescind");});
test("prescindendo -> prescind", function() {deepEqual( Stem("prescindendo"), "prescind");});
test("prescindere -> prescind", function() {deepEqual( Stem("prescindere"), "prescind");});
test("prescrisse -> prescriss", function() {deepEqual( Stem("prescrisse"), "prescriss");});
test("prescritta -> prescritt", function() {deepEqual( Stem("prescritta"), "prescritt");});
test("prescritte -> prescritt", function() {deepEqual( Stem("prescritte"), "prescritt");});
test("prescritti -> prescritt", function() {deepEqual( Stem("prescritti"), "prescritt");});
test("prescritto -> prescritt", function() {deepEqual( Stem("prescritto"), "prescritt");});
test("prescrive -> prescriv", function() {deepEqual( Stem("prescrive"), "prescriv");});
test("prescriver -> prescriver", function() {deepEqual( Stem("prescriver"), "prescriver");});
test("prescriverò -> prescriv", function() {deepEqual( Stem("prescriverò"), "prescriv");});
test("prescriveva -> prescriv", function() {deepEqual( Stem("prescriveva"), "prescriv");});
test("prescrivono -> prescriv", function() {deepEqual( Stem("prescrivono"), "prescriv");});
test("prescrizione -> prescrizion", function() {deepEqual( Stem("prescrizione"), "prescrizion");});
test("prescrizioni -> prescrizion", function() {deepEqual( Stem("prescrizioni"), "prescrizion");});
test("prese -> pres", function() {deepEqual( Stem("prese"), "pres");});
test("presenta -> present", function() {deepEqual( Stem("presenta"), "present");});
test("presentando -> present", function() {deepEqual( Stem("presentando"), "present");});
test("presentandosegli -> presentandosegl", function() {deepEqual( Stem("presentandosegli"), "presentandosegl");});
test("presentandosi -> present", function() {deepEqual( Stem("presentandosi"), "present");});
test("presentano -> present", function() {deepEqual( Stem("presentano"), "present");});
test("presentar -> present", function() {deepEqual( Stem("presentar"), "present");});
test("presentarci -> present", function() {deepEqual( Stem("presentarci"), "present");});
test("presentare -> present", function() {deepEqual( Stem("presentare"), "present");});
test("presentarla -> present", function() {deepEqual( Stem("presentarla"), "present");});
test("presentarlo -> present", function() {deepEqual( Stem("presentarlo"), "present");});
test("presentaron -> presentaron", function() {deepEqual( Stem("presentaron"), "presentaron");});
test("presentarsi -> present", function() {deepEqual( Stem("presentarsi"), "present");});
test("presentasse -> present", function() {deepEqual( Stem("presentasse"), "present");});
test("presentassero -> present", function() {deepEqual( Stem("presentassero"), "present");});
test("presentassi -> present", function() {deepEqual( Stem("presentassi"), "present");});
test("presentata -> present", function() {deepEqual( Stem("presentata"), "present");});
test("presentate -> present", function() {deepEqual( Stem("presentate"), "present");});
test("presentati -> present", function() {deepEqual( Stem("presentati"), "present");});
test("presentatigli -> presentatigl", function() {deepEqual( Stem("presentatigli"), "presentatigl");});
test("presentato -> present", function() {deepEqual( Stem("presentato"), "present");});
test("presentatore -> present", function() {deepEqual( Stem("presentatore"), "present");});
test("presentatori -> present", function() {deepEqual( Stem("presentatori"), "present");});
test("presentatrice -> present", function() {deepEqual( Stem("presentatrice"), "present");});
test("presentava -> present", function() {deepEqual( Stem("presentava"), "present");});
test("presentavano -> present", function() {deepEqual( Stem("presentavano"), "present");});
test("presentazione -> present", function() {deepEqual( Stem("presentazione"), "present");});
test("presente -> present", function() {deepEqual( Stem("presente"), "present");});
test("presenterà -> present", function() {deepEqual( Stem("presenterà"), "present");});
test("presenteranno -> present", function() {deepEqual( Stem("presenteranno"), "present");});
test("presenteremo -> present", function() {deepEqual( Stem("presenteremo"), "present");});
test("presentes -> presentes", function() {deepEqual( Stem("presentes"), "presentes");});
test("presenti -> present", function() {deepEqual( Stem("presenti"), "present");});
test("presentiamo -> present", function() {deepEqual( Stem("presentiamo"), "present");});
test("presentimenti -> present", function() {deepEqual( Stem("presentimenti"), "present");});
test("presentimento -> present", function() {deepEqual( Stem("presentimento"), "present");});
test("presentino -> presentin", function() {deepEqual( Stem("presentino"), "presentin");});
test("presentire -> present", function() {deepEqual( Stem("presentire"), "present");});
test("presentò -> present", function() {deepEqual( Stem("presentò"), "present");});
test("presentuoso -> presentu", function() {deepEqual( Stem("presentuoso"), "presentu");});
test("presenza -> presenz", function() {deepEqual( Stem("presenza"), "presenz");});
test("presenze -> presenz", function() {deepEqual( Stem("presenze"), "presenz");});
test("preser -> preser", function() {deepEqual( Stem("preser"), "preser");});
test("presero -> preser", function() {deepEqual( Stem("presero"), "preser");});
test("preservar -> preserv", function() {deepEqual( Stem("preservar"), "preserv");});
test("preservata -> preserv", function() {deepEqual( Stem("preservata"), "preserv");});
test("preservato -> preserv", function() {deepEqual( Stem("preservato"), "preserv");});
test("preservava -> preserv", function() {deepEqual( Stem("preservava"), "preserv");});
test("preservi -> pres", function() {deepEqual( Stem("preservi"), "pres");});
test("presi -> pres", function() {deepEqual( Stem("presi"), "pres");});
test("preside -> presid", function() {deepEqual( Stem("preside"), "presid");});
test("presidente -> president", function() {deepEqual( Stem("presidente"), "president");});
test("presidenti -> president", function() {deepEqual( Stem("presidenti"), "president");});
test("presidenza -> president", function() {deepEqual( Stem("presidenza"), "president");});
test("presidenziale -> presidenzial", function() {deepEqual( Stem("presidenziale"), "presidenzial");});
test("presidenziali -> presidenzial", function() {deepEqual( Stem("presidenziali"), "presidenzial");});
test("presidetne -> presidetn", function() {deepEqual( Stem("presidetne"), "presidetn");});
test("presidi -> presid", function() {deepEqual( Stem("presidi"), "presid");});
test("presiedono -> presied", function() {deepEqual( Stem("presiedono"), "presied");});
test("presieduta -> presied", function() {deepEqual( Stem("presieduta"), "presied");});
test("presieduto -> presied", function() {deepEqual( Stem("presieduto"), "presied");});
test("preso -> pres", function() {deepEqual( Stem("preso"), "pres");});
test("presolo -> presol", function() {deepEqual( Stem("presolo"), "presol");});
test("presontuosa -> presontu", function() {deepEqual( Stem("presontuosa"), "presontu");});
test("press -> press", function() {deepEqual( Stem("press"), "press");});
test("pressante -> pressant", function() {deepEqual( Stem("pressante"), "pressant");});
test("pressanti -> pressant", function() {deepEqual( Stem("pressanti"), "pressant");});
test("pressappochismo -> pressappoc", function() {deepEqual( Stem("pressappochismo"), "pressappoc");});
test("pressava -> press", function() {deepEqual( Stem("pressava"), "press");});
test("pressi -> press", function() {deepEqual( Stem("pressi"), "press");});
test("pressing -> pressing", function() {deepEqual( Stem("pressing"), "pressing");});
test("pressione -> pression", function() {deepEqual( Stem("pressione"), "pression");});
test("pressioni -> pression", function() {deepEqual( Stem("pressioni"), "pression");});
test("presso -> press", function() {deepEqual( Stem("presso"), "press");});
test("pressocchè -> pressocc", function() {deepEqual( Stem("pressocchè"), "pressocc");});
test("prestando -> prest", function() {deepEqual( Stem("prestando"), "prest");});
test("prestano -> prest", function() {deepEqual( Stem("prestano"), "prest");});
test("prestar -> prest", function() {deepEqual( Stem("prestar"), "prest");});
test("prestare -> prest", function() {deepEqual( Stem("prestare"), "prest");});
test("prestargli -> prest", function() {deepEqual( Stem("prestargli"), "prest");});
test("prestasse -> prest", function() {deepEqual( Stem("prestasse"), "prest");});
test("prestata -> prest", function() {deepEqual( Stem("prestata"), "prest");});
test("prestati -> prest", function() {deepEqual( Stem("prestati"), "prest");});
test("prestato -> prest", function() {deepEqual( Stem("prestato"), "prest");});
test("prestava -> prest", function() {deepEqual( Stem("prestava"), "prest");});
test("prestavano -> prest", function() {deepEqual( Stem("prestavano"), "prest");});
test("prestazione -> prestazion", function() {deepEqual( Stem("prestazione"), "prestazion");});
test("prestazioni -> prestazion", function() {deepEqual( Stem("prestazioni"), "prestazion");});
test("prestesto -> prestest", function() {deepEqual( Stem("prestesto"), "prestest");});
test("prestigio -> prestig", function() {deepEqual( Stem("prestigio"), "prestig");});
test("prestigioso -> prestig", function() {deepEqual( Stem("prestigioso"), "prestig");});
test("prestin -> prestin", function() {deepEqual( Stem("prestin"), "prestin");});
test("prestissimo -> prestissim", function() {deepEqual( Stem("prestissimo"), "prestissim");});
test("prestiti -> prest", function() {deepEqual( Stem("prestiti"), "prest");});
test("prestito -> prest", function() {deepEqual( Stem("prestito"), "prest");});
test("presto -> prest", function() {deepEqual( Stem("presto"), "prest");});
test("preston -> preston", function() {deepEqual( Stem("preston"), "preston");});
test("presumere -> presum", function() {deepEqual( Stem("presumere"), "presum");});
test("presumibilmente -> presumibil", function() {deepEqual( Stem("presumibilmente"), "presumibil");});
test("presumono -> presum", function() {deepEqual( Stem("presumono"), "presum");});
test("presunta -> presunt", function() {deepEqual( Stem("presunta"), "presunt");});
test("presunte -> presunt", function() {deepEqual( Stem("presunte"), "presunt");});
test("presunti -> presunt", function() {deepEqual( Stem("presunti"), "presunt");});
test("presunto -> presunt", function() {deepEqual( Stem("presunto"), "presunt");});
test("presunzione -> presunzion", function() {deepEqual( Stem("presunzione"), "presunzion");});
test("presupposti -> presuppost", function() {deepEqual( Stem("presupposti"), "presuppost");});
test("presupposto -> presuppost", function() {deepEqual( Stem("presupposto"), "presuppost");});
test("presutti -> presutt", function() {deepEqual( Stem("presutti"), "presutt");});
test("prete -> pret", function() {deepEqual( Stem("prete"), "pret");});
test("pretende -> pret", function() {deepEqual( Stem("pretende"), "pret");});
test("pretender -> pretender", function() {deepEqual( Stem("pretender"), "pretender");});
test("pretendere -> pretend", function() {deepEqual( Stem("pretendere"), "pretend");});
test("pretendesse -> pretendess", function() {deepEqual( Stem("pretendesse"), "pretendess");});
test("pretendete -> pretend", function() {deepEqual( Stem("pretendete"), "pretend");});
test("pretendeva -> pretend", function() {deepEqual( Stem("pretendeva"), "pretend");});
test("pretendevano -> pretend", function() {deepEqual( Stem("pretendevano"), "pretend");});
test("pretendi -> pret", function() {deepEqual( Stem("pretendi"), "pret");});
test("pretendiam -> pretendiam", function() {deepEqual( Stem("pretendiam"), "pretendiam");});
test("pretendiamo -> pretend", function() {deepEqual( Stem("pretendiamo"), "pretend");});
test("pretendo -> pret", function() {deepEqual( Stem("pretendo"), "pret");});
test("pretendono -> pretend", function() {deepEqual( Stem("pretendono"), "pretend");});
test("pretensione -> pretension", function() {deepEqual( Stem("pretensione"), "pretension");});
test("pretensioni -> pretension", function() {deepEqual( Stem("pretensioni"), "pretension");});
test("pretesa -> pretes", function() {deepEqual( Stem("pretesa"), "pretes");});
test("preteso -> pretes", function() {deepEqual( Stem("preteso"), "pretes");});
test("pretesti -> pretest", function() {deepEqual( Stem("pretesti"), "pretest");});
test("pretesto -> pretest", function() {deepEqual( Stem("pretesto"), "pretest");});
test("preti -> pret", function() {deepEqual( Stem("preti"), "pret");});
test("pretore -> pretor", function() {deepEqual( Stem("pretore"), "pretor");});
test("pretoria -> pretor", function() {deepEqual( Stem("pretoria"), "pretor");});
test("pretoriana -> pretorian", function() {deepEqual( Stem("pretoriana"), "pretorian");});
test("pretta -> prett", function() {deepEqual( Stem("pretta"), "prett");});
test("pretto -> prett", function() {deepEqual( Stem("pretto"), "prett");});
test("preussenelektra -> preussenelektr", function() {deepEqual( Stem("preussenelektra"), "preussenelektr");});
test("prevalente -> prevalent", function() {deepEqual( Stem("prevalente"), "prevalent");});
test("prevalentemente -> prevalent", function() {deepEqual( Stem("prevalentemente"), "prevalent");});
test("prevalenti -> prevalent", function() {deepEqual( Stem("prevalenti"), "prevalent");});
test("prevalenza -> prevalent", function() {deepEqual( Stem("prevalenza"), "prevalent");});
test("prevalere -> preval", function() {deepEqual( Stem("prevalere"), "preval");});
test("prevaleva -> preval", function() {deepEqual( Stem("prevaleva"), "preval");});
test("prevalga -> prevalg", function() {deepEqual( Stem("prevalga"), "prevalg");});
test("prevalgono -> prevalg", function() {deepEqual( Stem("prevalgono"), "prevalg");});
test("prevalsa -> prevals", function() {deepEqual( Stem("prevalsa"), "prevals");});
test("prevalse -> prevals", function() {deepEqual( Stem("prevalse"), "prevals");});
test("prevalso -> prevals", function() {deepEqual( Stem("prevalso"), "prevals");});
test("prevaricante -> prevaric", function() {deepEqual( Stem("prevaricante"), "prevaric");});
test("prevaricazione -> prevar", function() {deepEqual( Stem("prevaricazione"), "prevar");});
test("preveda -> preved", function() {deepEqual( Stem("preveda"), "preved");});
test("prevede -> preved", function() {deepEqual( Stem("prevede"), "preved");});
test("preveder -> preveder", function() {deepEqual( Stem("preveder"), "preveder");});
test("prevederà -> preved", function() {deepEqual( Stem("prevederà"), "preved");});
test("prevedere -> preved", function() {deepEqual( Stem("prevedere"), "preved");});
test("prevederebbe -> preved", function() {deepEqual( Stem("prevederebbe"), "preved");});
test("prevedeva -> preved", function() {deepEqual( Stem("prevedeva"), "preved");});
test("prevedevano -> preved", function() {deepEqual( Stem("prevedevano"), "preved");});
test("prevediamo -> preved", function() {deepEqual( Stem("prevediamo"), "preved");});
test("prevedibile -> preved", function() {deepEqual( Stem("prevedibile"), "preved");});
test("prevedibili -> preved", function() {deepEqual( Stem("prevedibili"), "preved");});
test("prevedo -> preved", function() {deepEqual( Stem("prevedo"), "preved");});
test("prevedono -> preved", function() {deepEqual( Stem("prevedono"), "preved");});
test("prevenir -> preven", function() {deepEqual( Stem("prevenir"), "preven");});
test("prevenire -> preven", function() {deepEqual( Stem("prevenire"), "preven");});
test("prevenirle -> preven", function() {deepEqual( Stem("prevenirle"), "preven");});
test("prevenne -> prevenn", function() {deepEqual( Stem("prevenne"), "prevenn");});
test("preventiva -> prevent", function() {deepEqual( Stem("preventiva"), "prevent");});
test("preventivo -> prevent", function() {deepEqual( Stem("preventivo"), "prevent");});
test("prevenuto -> preven", function() {deepEqual( Stem("prevenuto"), "preven");});
test("prevenzione -> prevenzion", function() {deepEqual( Stem("prevenzione"), "prevenzion");});
test("previdente -> prevident", function() {deepEqual( Stem("previdente"), "prevident");});
test("previdenza -> prevident", function() {deepEqual( Stem("previdenza"), "prevident");});
test("previdenzà -> previdenz", function() {deepEqual( Stem("previdenzà"), "previdenz");});
test("previdenze -> prevident", function() {deepEqual( Stem("previdenze"), "prevident");});
test("previdenziale -> previdenzial", function() {deepEqual( Stem("previdenziale"), "previdenzial");});
test("previdenziali -> previdenzial", function() {deepEqual( Stem("previdenziali"), "previdenzial");});
test("previsione -> prevision", function() {deepEqual( Stem("previsione"), "prevision");});
test("previsioni -> prevision", function() {deepEqual( Stem("previsioni"), "prevision");});
test("prevista -> previst", function() {deepEqual( Stem("prevista"), "previst");});
test("previste -> previst", function() {deepEqual( Stem("previste"), "previst");});
test("previsti -> previst", function() {deepEqual( Stem("previsti"), "previst");});
test("previsto -> previst", function() {deepEqual( Stem("previsto"), "previst");});
test("previti -> prev", function() {deepEqual( Stem("previti"), "prev");});
test("prevot -> prevot", function() {deepEqual( Stem("prevot"), "prevot");});
test("preziosa -> prezios", function() {deepEqual( Stem("preziosa"), "prezios");});
test("preziose -> prezios", function() {deepEqual( Stem("preziose"), "prezios");});
test("preziosi -> prezios", function() {deepEqual( Stem("preziosi"), "prezios");});
test("preziosissimi -> preziosissim", function() {deepEqual( Stem("preziosissimi"), "preziosissim");});
test("prezioso -> prezios", function() {deepEqual( Stem("prezioso"), "prezios");});
test("prezzi -> prezz", function() {deepEqual( Stem("prezzi"), "prezz");});
test("prezzo -> prezz", function() {deepEqual( Stem("prezzo"), "prezz");});
test("pri -> pri", function() {deepEqual( Stem("pri"), "pri");});
test("prigione -> prigion", function() {deepEqual( Stem("prigione"), "prigion");});
test("prigioni -> prigion", function() {deepEqual( Stem("prigioni"), "prigion");});
test("prigionia -> prigion", function() {deepEqual( Stem("prigionia"), "prigion");});
test("prigioniera -> prigionier", function() {deepEqual( Stem("prigioniera"), "prigionier");});
test("prigioniere -> prigion", function() {deepEqual( Stem("prigioniere"), "prigion");});
test("prigionieri -> prigionier", function() {deepEqual( Stem("prigionieri"), "prigionier");});
test("prigioniero -> prigionier", function() {deepEqual( Stem("prigioniero"), "prigionier");});
test("prim -> prim", function() {deepEqual( Stem("prim"), "prim");});
test("prima -> prim", function() {deepEqual( Stem("prima"), "prim");});
test("primaluna -> primalun", function() {deepEqual( Stem("primaluna"), "primalun");});
test("primari -> primar", function() {deepEqual( Stem("primari"), "primar");});
test("primaria -> primar", function() {deepEqual( Stem("primaria"), "primar");});
test("primarie -> primar", function() {deepEqual( Stem("primarie"), "primar");});
test("primario -> primar", function() {deepEqual( Stem("primario"), "primar");});
test("primary -> primary", function() {deepEqual( Stem("primary"), "primary");});
test("primati -> prim", function() {deepEqual( Stem("primati"), "prim");});
test("primaticce -> primaticc", function() {deepEqual( Stem("primaticce"), "primaticc");});
test("primatista -> primat", function() {deepEqual( Stem("primatista"), "primat");});
test("primato -> prim", function() {deepEqual( Stem("primato"), "prim");});
test("primavera -> primaver", function() {deepEqual( Stem("primavera"), "primaver");});
test("primaverile -> primaveril", function() {deepEqual( Stem("primaverile"), "primaveril");});
test("prime -> prim", function() {deepEqual( Stem("prime"), "prim");});
test("primebond -> primebond", function() {deepEqual( Stem("primebond"), "primebond");});
test("primecapital -> primecapital", function() {deepEqual( Stem("primecapital"), "primecapital");});
test("primecash -> primecash", function() {deepEqual( Stem("primecash"), "primecash");});
test("primeclub -> primeclub", function() {deepEqual( Stem("primeclub"), "primeclub");});
test("primeggiare -> primegg", function() {deepEqual( Stem("primeggiare"), "primegg");});
test("primerend -> primerend", function() {deepEqual( Stem("primerend"), "primerend");});
test("primi -> prim", function() {deepEqual( Stem("primi"), "prim");});
test("primissimi -> primissim", function() {deepEqual( Stem("primissimi"), "primissim");});
test("primitiva -> primit", function() {deepEqual( Stem("primitiva"), "primit");});
test("primitivi -> primit", function() {deepEqual( Stem("primitivi"), "primit");});
test("primo -> prim", function() {deepEqual( Stem("primo"), "prim");});
test("primogenito -> primogen", function() {deepEqual( Stem("primogenito"), "primogen");});
test("primordine -> primordin", function() {deepEqual( Stem("primordine"), "primordin");});
test("prina -> prin", function() {deepEqual( Stem("prina"), "prin");});
test("principale -> principal", function() {deepEqual( Stem("principale"), "principal");});
test("principali -> principal", function() {deepEqual( Stem("principali"), "principal");});
test("principalissimo -> principalissim", function() {deepEqual( Stem("principalissimo"), "principalissim");});
test("principalmente -> principal", function() {deepEqual( Stem("principalmente"), "principal");});
test("principato -> princip", function() {deepEqual( Stem("principato"), "princip");});
test("principe -> princip", function() {deepEqual( Stem("principe"), "princip");});
test("principessa -> principess", function() {deepEqual( Stem("principessa"), "principess");});
test("principi -> princip", function() {deepEqual( Stem("principi"), "princip");});
test("princìpi -> princìp", function() {deepEqual( Stem("princìpi"), "princìp");});
test("principia -> princip", function() {deepEqual( Stem("principia"), "princip");});
test("principiamo -> princip", function() {deepEqual( Stem("principiamo"), "princip");});
test("principian -> principian", function() {deepEqual( Stem("principian"), "principian");});
test("principiano -> princip", function() {deepEqual( Stem("principiano"), "princip");});
test("principiare -> princip", function() {deepEqual( Stem("principiare"), "princip");});
test("principiarono -> princip", function() {deepEqual( Stem("principiarono"), "princip");});
test("principiata -> princip", function() {deepEqual( Stem("principiata"), "princip");});
test("principiato -> princip", function() {deepEqual( Stem("principiato"), "princip");});
test("principiava -> princip", function() {deepEqual( Stem("principiava"), "princip");});
test("principiavano -> princip", function() {deepEqual( Stem("principiavano"), "princip");});
test("principiis -> principiis", function() {deepEqual( Stem("principiis"), "principiis");});
test("principino -> principin", function() {deepEqual( Stem("principino"), "principin");});
test("principio -> princip", function() {deepEqual( Stem("principio"), "princip");});
test("principiò -> princip", function() {deepEqual( Stem("principiò"), "princip");});
test("principo -> princip", function() {deepEqual( Stem("principo"), "princip");});
test("prioncipali -> prioncipal", function() {deepEqual( Stem("prioncipali"), "prioncipal");});
test("prioprio -> priopr", function() {deepEqual( Stem("prioprio"), "priopr");});
test("priorache -> priorac", function() {deepEqual( Stem("priorache"), "priorac");});
test("priori -> prior", function() {deepEqual( Stem("priori"), "prior");});
test("priorità -> priorit", function() {deepEqual( Stem("priorità"), "priorit");});
test("prioritariamente -> prioritar", function() {deepEqual( Stem("prioritariamente"), "prioritar");});
test("prioritario -> prioritar", function() {deepEqual( Stem("prioritario"), "prioritar");});
test("priv -> priv", function() {deepEqual( Stem("priv"), "priv");});
test("priva -> priv", function() {deepEqual( Stem("priva"), "priv");});
test("privacy -> privacy", function() {deepEqual( Stem("privacy"), "privacy");});
test("privalova -> privalov", function() {deepEqual( Stem("privalova"), "privalov");});
test("privare -> priv", function() {deepEqual( Stem("privare"), "priv");});
test("privarlo -> priv", function() {deepEqual( Stem("privarlo"), "priv");});
test("privarsene -> priv", function() {deepEqual( Stem("privarsene"), "priv");});
test("privata -> priv", function() {deepEqual( Stem("privata"), "priv");});
test("private -> priv", function() {deepEqual( Stem("private"), "priv");});
test("privati -> priv", function() {deepEqual( Stem("privati"), "priv");});
test("privatisticò -> privatistic", function() {deepEqual( Stem("privatisticò"), "privatistic");});
test("privatizzare -> privatizz", function() {deepEqual( Stem("privatizzare"), "privatizz");});
test("privatizzata -> privatizz", function() {deepEqual( Stem("privatizzata"), "privatizz");});
test("privatizzato -> privatizz", function() {deepEqual( Stem("privatizzato"), "privatizz");});
test("privatizzaz -> privatizzaz", function() {deepEqual( Stem("privatizzaz"), "privatizzaz");});
test("privatizzazione -> privatizz", function() {deepEqual( Stem("privatizzazione"), "privatizz");});
test("privatizzazioni -> privatizz", function() {deepEqual( Stem("privatizzazioni"), "privatizz");});
test("privato -> priv", function() {deepEqual( Stem("privato"), "priv");});
test("privazione -> privazion", function() {deepEqual( Stem("privazione"), "privazion");});
test("privazioni -> privazion", function() {deepEqual( Stem("privazioni"), "privazion");});
test("privi -> priv", function() {deepEqual( Stem("privi"), "priv");});
test("privilegi -> privileg", function() {deepEqual( Stem("privilegi"), "privileg");});
test("privilegia -> privileg", function() {deepEqual( Stem("privilegia"), "privileg");});
test("privilegiare -> privileg", function() {deepEqual( Stem("privilegiare"), "privileg");});
test("privilegiata -> privileg", function() {deepEqual( Stem("privilegiata"), "privileg");});
test("privilegiati -> privileg", function() {deepEqual( Stem("privilegiati"), "privileg");});
test("privilegiato -> privileg", function() {deepEqual( Stem("privilegiato"), "privileg");});
test("privilegio -> privileg", function() {deepEqual( Stem("privilegio"), "privileg");});
test("privo -> priv", function() {deepEqual( Stem("privo"), "priv");});
test("pro -> pro", function() {deepEqual( Stem("pro"), "pro");});
test("probabile -> probabil", function() {deepEqual( Stem("probabile"), "probabil");});
test("probabili -> probabil", function() {deepEqual( Stem("probabili"), "probabil");});
test("probabilità -> probabil", function() {deepEqual( Stem("probabilità"), "probabil");});
test("probabilmente -> probabil", function() {deepEqual( Stem("probabilmente"), "probabil");});
test("probema -> probem", function() {deepEqual( Stem("probema"), "probem");});
test("problema -> problem", function() {deepEqual( Stem("problema"), "problem");});
test("problematica -> problemat", function() {deepEqual( Stem("problematica"), "problemat");});
test("problemi -> problem", function() {deepEqual( Stem("problemi"), "problem");});
test("procacciar -> procacc", function() {deepEqual( Stem("procacciar"), "procacc");});
test("procacciargli -> procacc", function() {deepEqual( Stem("procacciargli"), "procacc");});
test("procacciarsi -> procacc", function() {deepEqual( Stem("procacciarsi"), "procacc");});
test("proceda -> proced", function() {deepEqual( Stem("proceda"), "proced");});
test("proceddure -> proceddur", function() {deepEqual( Stem("proceddure"), "proceddur");});
test("procede -> proced", function() {deepEqual( Stem("procede"), "proced");});
test("procedendo -> proced", function() {deepEqual( Stem("procedendo"), "proced");});
test("procederà -> proced", function() {deepEqual( Stem("procederà"), "proced");});
test("procedere -> proced", function() {deepEqual( Stem("procedere"), "proced");});
test("procediemnto -> procediemnt", function() {deepEqual( Stem("procediemnto"), "procediemnt");});
test("procedimenti -> proced", function() {deepEqual( Stem("procedimenti"), "proced");});
test("procedimento -> proced", function() {deepEqual( Stem("procedimento"), "proced");});
test("procedono -> proced", function() {deepEqual( Stem("procedono"), "proced");});
test("procedura -> procedur", function() {deepEqual( Stem("procedura"), "procedur");});
test("procedurale -> procedural", function() {deepEqual( Stem("procedurale"), "procedural");});
test("procedure -> procedur", function() {deepEqual( Stem("procedure"), "procedur");});
test("proceduta -> proced", function() {deepEqual( Stem("proceduta"), "proced");});
test("proceduto -> proced", function() {deepEqual( Stem("proceduto"), "proced");});
test("procellosa -> procell", function() {deepEqual( Stem("procellosa"), "procell");});
test("procelloso -> procell", function() {deepEqual( Stem("procelloso"), "procell");});
test("processando -> process", function() {deepEqual( Stem("processando"), "process");});
test("processate -> process", function() {deepEqual( Stem("processate"), "process");});
test("processati -> process", function() {deepEqual( Stem("processati"), "process");});
test("processato -> process", function() {deepEqual( Stem("processato"), "process");});
test("processi -> process", function() {deepEqual( Stem("processi"), "process");});
test("processione -> procession", function() {deepEqual( Stem("processione"), "procession");});
test("processioni -> procession", function() {deepEqual( Stem("processioni"), "procession");});
test("processo -> process", function() {deepEqual( Stem("processo"), "process");});
test("processuale -> processual", function() {deepEqual( Stem("processuale"), "processual");});
test("processuali -> processual", function() {deepEqual( Stem("processuali"), "processual");});
test("procinto -> procint", function() {deepEqual( Stem("procinto"), "procint");});
test("proclamata -> proclam", function() {deepEqual( Stem("proclamata"), "proclam");});
test("proclamati -> proclam", function() {deepEqual( Stem("proclamati"), "proclam");});
test("proclamato -> proclam", function() {deepEqual( Stem("proclamato"), "proclam");});
test("procrazione -> procrazion", function() {deepEqual( Stem("procrazione"), "procrazion");});
test("procrear -> procr", function() {deepEqual( Stem("procrear"), "procr");});
test("procura -> procur", function() {deepEqual( Stem("procura"), "procur");});
test("procurando -> procur", function() {deepEqual( Stem("procurando"), "procur");});
test("procurar -> procur", function() {deepEqual( Stem("procurar"), "procur");});
test("procurare -> procur", function() {deepEqual( Stem("procurare"), "procur");});
test("procurarsi -> procur", function() {deepEqual( Stem("procurarsi"), "procur");});
test("procurarti -> procur", function() {deepEqual( Stem("procurarti"), "procur");});
test("procuraste -> procurast", function() {deepEqual( Stem("procuraste"), "procurast");});
test("procurato -> procur", function() {deepEqual( Stem("procurato"), "procur");});
test("procuratore -> procur", function() {deepEqual( Stem("procuratore"), "procur");});
test("procurava -> procur", function() {deepEqual( Stem("procurava"), "procur");});
test("procuravano -> procur", function() {deepEqual( Stem("procuravano"), "procur");});
test("procure -> procur", function() {deepEqual( Stem("procure"), "procur");});
test("procurerò -> procur", function() {deepEqual( Stem("procurerò"), "procur");});
test("procurò -> procur", function() {deepEqual( Stem("procurò"), "procur");});
test("prod -> prod", function() {deepEqual( Stem("prod"), "prod");});
test("proda -> prod", function() {deepEqual( Stem("proda"), "prod");});
test("prode -> prod", function() {deepEqual( Stem("prode"), "prod");});
test("prodezza -> prodezz", function() {deepEqual( Stem("prodezza"), "prodezz");});
test("prodezze -> prodezz", function() {deepEqual( Stem("prodezze"), "prodezz");});
test("prodi -> prod", function() {deepEqual( Stem("prodi"), "prod");});
test("prodì -> prod", function() {deepEqual( Stem("prodì"), "prod");});
test("prodigalità -> prodigal", function() {deepEqual( Stem("prodigalità"), "prodigal");});
test("prodigate -> prodig", function() {deepEqual( Stem("prodigate"), "prodig");});
test("prodige -> prodig", function() {deepEqual( Stem("prodige"), "prodig");});
test("prodigi -> prodig", function() {deepEqual( Stem("prodigi"), "prodig");});
test("prodigio -> prodig", function() {deepEqual( Stem("prodigio"), "prodig");});
test("prodigioso -> prodig", function() {deepEqual( Stem("prodigioso"), "prodig");});
test("prodigo -> prodig", function() {deepEqual( Stem("prodigo"), "prodig");});
test("proditorio -> proditor", function() {deepEqual( Stem("proditorio"), "proditor");});
test("prodotta -> prodott", function() {deepEqual( Stem("prodotta"), "prodott");});
test("prodotti -> prodott", function() {deepEqual( Stem("prodotti"), "prodott");});
test("prodotto -> prodott", function() {deepEqual( Stem("prodotto"), "prodott");});
test("produce -> produc", function() {deepEqual( Stem("produce"), "produc");});
test("producendo -> produc", function() {deepEqual( Stem("producendo"), "produc");});
test("produceva -> produc", function() {deepEqual( Stem("produceva"), "produc");});
test("producevan -> producevan", function() {deepEqual( Stem("producevan"), "producevan");});
test("producevano -> produc", function() {deepEqual( Stem("producevano"), "produc");});
test("producono -> produc", function() {deepEqual( Stem("producono"), "produc");});
test("produr -> produr", function() {deepEqual( Stem("produr"), "produr");});
test("produrla -> produrl", function() {deepEqual( Stem("produrla"), "produrl");});
test("produrrà -> produrr", function() {deepEqual( Stem("produrrà"), "produrr");});
test("produrre -> produrr", function() {deepEqual( Stem("produrre"), "produrr");});
test("produrrebbe -> produrrebb", function() {deepEqual( Stem("produrrebbe"), "produrrebb");});
test("produsse -> produss", function() {deepEqual( Stem("produsse"), "produss");});
test("produssero -> produsser", function() {deepEqual( Stem("produssero"), "produsser");});
test("produttiva -> produtt", function() {deepEqual( Stem("produttiva"), "produtt");});
test("produttive -> produtt", function() {deepEqual( Stem("produttive"), "produtt");});
test("produttivi -> produtt", function() {deepEqual( Stem("produttivi"), "produtt");});
test("produttività -> produtt", function() {deepEqual( Stem("produttività"), "produtt");});
test("produttivo -> produtt", function() {deepEqual( Stem("produttivo"), "produtt");});
test("produttore -> produttor", function() {deepEqual( Stem("produttore"), "produttor");});
test("produttori -> produttor", function() {deepEqual( Stem("produttori"), "produttor");});
test("produttrice -> produttr", function() {deepEqual( Stem("produttrice"), "produttr");});
test("produttrici -> produttr", function() {deepEqual( Stem("produttrici"), "produttr");});
test("produzione -> produzion", function() {deepEqual( Stem("produzione"), "produzion");});
test("produzioni -> produzion", function() {deepEqual( Stem("produzioni"), "produzion");});
test("produziuone -> produziuon", function() {deepEqual( Stem("produziuone"), "produziuon");});
test("proemio -> proem", function() {deepEqual( Stem("proemio"), "proem");});
test("prof -> prof", function() {deepEqual( Stem("prof"), "prof");});
test("profana -> profan", function() {deepEqual( Stem("profana"), "profan");});
test("profane -> profan", function() {deepEqual( Stem("profane"), "profan");});
test("profano -> prof", function() {deepEqual( Stem("profano"), "prof");});
test("proferendo -> profer", function() {deepEqual( Stem("proferendo"), "profer");});
test("proferì -> profer", function() {deepEqual( Stem("proferì"), "profer");});
test("proferir -> profer", function() {deepEqual( Stem("proferir"), "profer");});
test("proferire -> profer", function() {deepEqual( Stem("proferire"), "profer");});
test("proferirle -> profer", function() {deepEqual( Stem("proferirle"), "profer");});
test("proferisco -> profer", function() {deepEqual( Stem("proferisco"), "profer");});
test("proferisse -> proferiss", function() {deepEqual( Stem("proferisse"), "proferiss");});
test("proferita -> profer", function() {deepEqual( Stem("proferita"), "profer");});
test("proferite -> profer", function() {deepEqual( Stem("proferite"), "profer");});
test("proferito -> profer", function() {deepEqual( Stem("proferito"), "profer");});
test("proferiva -> profer", function() {deepEqual( Stem("proferiva"), "profer");});
test("professato -> profess", function() {deepEqual( Stem("professato"), "profess");});
test("professi -> profess", function() {deepEqual( Stem("professi"), "profess");});
test("professionale -> professional", function() {deepEqual( Stem("professionale"), "professional");});
test("professionali -> professional", function() {deepEqual( Stem("professionali"), "professional");});
test("professionalità -> professional", function() {deepEqual( Stem("professionalità"), "professional");});
test("professione -> profession", function() {deepEqual( Stem("professione"), "profession");});
test("professioni -> profession", function() {deepEqual( Stem("professioni"), "profession");});
test("professionismo -> profession", function() {deepEqual( Stem("professionismo"), "profession");});
test("professionista -> profession", function() {deepEqual( Stem("professionista"), "profession");});
test("professionisti -> profession", function() {deepEqual( Stem("professionisti"), "profession");});
test("professionistico -> professionist", function() {deepEqual( Stem("professionistico"), "professionist");});
test("professo -> profess", function() {deepEqual( Stem("professo"), "profess");});
test("professor -> professor", function() {deepEqual( Stem("professor"), "professor");});
test("professore -> professor", function() {deepEqual( Stem("professore"), "professor");});
test("professoressa -> professoress", function() {deepEqual( Stem("professoressa"), "professoress");});
test("professori -> professor", function() {deepEqual( Stem("professori"), "professor");});
test("professorì -> professor", function() {deepEqual( Stem("professorì"), "professor");});
test("profeta -> profet", function() {deepEqual( Stem("profeta"), "profet");});
test("profeticà -> profetic", function() {deepEqual( Stem("profeticà"), "profetic");});
test("profezia -> profez", function() {deepEqual( Stem("profezia"), "profez");});
test("profezie -> profez", function() {deepEqual( Stem("profezie"), "profez");});
test("proficuo -> proficu", function() {deepEqual( Stem("proficuo"), "proficu");});
test("profili -> profil", function() {deepEqual( Stem("profili"), "profil");});
test("profilo -> profil", function() {deepEqual( Stem("profilo"), "profil");});
test("profit -> profit", function() {deepEqual( Stem("profit"), "profit");});
test("profittarne -> profitt", function() {deepEqual( Stem("profittarne"), "profitt");});
test("profittevole -> profittevol", function() {deepEqual( Stem("profittevole"), "profittevol");});
test("profitti -> profitt", function() {deepEqual( Stem("profitti"), "profitt");});
test("profitto -> profitt", function() {deepEqual( Stem("profitto"), "profitt");});
test("profittò -> profitt", function() {deepEqual( Stem("profittò"), "profitt");});
test("profonda -> profond", function() {deepEqual( Stem("profonda"), "profond");});
test("profondamente -> profond", function() {deepEqual( Stem("profondamente"), "profond");});
test("profonde -> profond", function() {deepEqual( Stem("profonde"), "profond");});
test("profondere -> profond", function() {deepEqual( Stem("profondere"), "profond");});
test("profondi -> profond", function() {deepEqual( Stem("profondi"), "profond");});
test("profondità -> profond", function() {deepEqual( Stem("profondità"), "profond");});
test("profondo -> profond", function() {deepEqual( Stem("profondo"), "profond");});
test("profughi -> profug", function() {deepEqual( Stem("profughi"), "profug");});
test("profumati -> profum", function() {deepEqual( Stem("profumati"), "profum");});
test("profumi -> profum", function() {deepEqual( Stem("profumi"), "profum");});
test("profumo -> profum", function() {deepEqual( Stem("profumo"), "profum");});
test("profundis -> profundis", function() {deepEqual( Stem("profundis"), "profundis");});
test("profuno -> profun", function() {deepEqual( Stem("profuno"), "profun");});
test("profuso -> profus", function() {deepEqual( Stem("profuso"), "profus");});
test("progessiste -> progess", function() {deepEqual( Stem("progessiste"), "progess");});
test("progettazione -> progett", function() {deepEqual( Stem("progettazione"), "progett");});
test("progetti -> progett", function() {deepEqual( Stem("progetti"), "progett");});
test("progetto -> progett", function() {deepEqual( Stem("progetto"), "progett");});
test("prognosi -> prognos", function() {deepEqual( Stem("prognosi"), "prognos");});
test("programma -> programm", function() {deepEqual( Stem("programma"), "programm");});
test("programmatica -> programmat", function() {deepEqual( Stem("programmatica"), "programmat");});
test("programmatiche -> programmat", function() {deepEqual( Stem("programmatiche"), "programmat");});
test("programmatici -> programmat", function() {deepEqual( Stem("programmatici"), "programmat");});
test("programmatico -> programmat", function() {deepEqual( Stem("programmatico"), "programmat");});
test("programmato -> programm", function() {deepEqual( Stem("programmato"), "programm");});
test("programmazione -> programm", function() {deepEqual( Stem("programmazione"), "programm");});
test("programmi -> programm", function() {deepEqual( Stem("programmi"), "programm");});
test("progressi -> progress", function() {deepEqual( Stem("progressi"), "progress");});
test("progressione -> progression", function() {deepEqual( Stem("progressione"), "progression");});
test("progressismo -> progress", function() {deepEqual( Stem("progressismo"), "progress");});
test("progressista -> progress", function() {deepEqual( Stem("progressista"), "progress");});
test("progressiste -> progress", function() {deepEqual( Stem("progressiste"), "progress");});
test("progressisti -> progress", function() {deepEqual( Stem("progressisti"), "progress");});
test("progressita -> progress", function() {deepEqual( Stem("progressita"), "progress");});
test("progressiva -> progress", function() {deepEqual( Stem("progressiva"), "progress");});
test("progressivamente -> progress", function() {deepEqual( Stem("progressivamente"), "progress");});
test("progressivamenti -> progressiv", function() {deepEqual( Stem("progressivamenti"), "progressiv");});
test("progressivo -> progress", function() {deepEqual( Stem("progressivo"), "progress");});
test("progresso -> progress", function() {deepEqual( Stem("progresso"), "progress");});
test("proibì -> proib", function() {deepEqual( Stem("proibì"), "proib");});
test("proibire -> proib", function() {deepEqual( Stem("proibire"), "proib");});
test("proibirvelo -> proib", function() {deepEqual( Stem("proibirvelo"), "proib");});
test("proibisca -> proib", function() {deepEqual( Stem("proibisca"), "proib");});
test("proibisse -> proibiss", function() {deepEqual( Stem("proibisse"), "proibiss");});
test("proibite -> proib", function() {deepEqual( Stem("proibite"), "proib");});
test("proibito -> proib", function() {deepEqual( Stem("proibito"), "proib");});
test("proibiva -> proib", function() {deepEqual( Stem("proibiva"), "proib");});
test("proiettare -> proiett", function() {deepEqual( Stem("proiettare"), "proiett");});
test("proietti -> proiett", function() {deepEqual( Stem("proietti"), "proiett");});
test("proiettile -> proiettil", function() {deepEqual( Stem("proiettile"), "proiettil");});
test("proiettili -> proiettil", function() {deepEqual( Stem("proiettili"), "proiettil");});
test("proiezione -> proiezion", function() {deepEqual( Stem("proiezione"), "proiezion");});
test("project -> project", function() {deepEqual( Stem("project"), "project");});
test("prole -> prol", function() {deepEqual( Stem("prole"), "prol");});
test("prolisse -> proliss", function() {deepEqual( Stem("prolisse"), "proliss");});
test("prolissità -> proliss", function() {deepEqual( Stem("prolissità"), "proliss");});
test("prolungamento -> prolung", function() {deepEqual( Stem("prolungamento"), "prolung");});
test("prolungano -> prolung", function() {deepEqual( Stem("prolungano"), "prolung");});
test("prolungar -> prolung", function() {deepEqual( Stem("prolungar"), "prolung");});
test("prolungare -> prolung", function() {deepEqual( Stem("prolungare"), "prolung");});
test("prolungata -> prolung", function() {deepEqual( Stem("prolungata"), "prolung");});
test("prolungate -> prolung", function() {deepEqual( Stem("prolungate"), "prolung");});
test("prolungato -> prolung", function() {deepEqual( Stem("prolungato"), "prolung");});
test("prolungò -> prolung", function() {deepEqual( Stem("prolungò"), "prolung");});
test("promessa -> promess", function() {deepEqual( Stem("promessa"), "promess");});
test("promessà -> promess", function() {deepEqual( Stem("promessà"), "promess");});
test("promesse -> promess", function() {deepEqual( Stem("promesse"), "promess");});
test("promessi -> promess", function() {deepEqual( Stem("promessi"), "promess");});
test("promesso -> promess", function() {deepEqual( Stem("promesso"), "promess");});
test("promette -> promett", function() {deepEqual( Stem("promette"), "promett");});
test("promettendo -> promett", function() {deepEqual( Stem("promettendo"), "promett");});
test("promettendogli -> promett", function() {deepEqual( Stem("promettendogli"), "promett");});
test("promettendosi -> promett", function() {deepEqual( Stem("promettendosi"), "promett");});
test("prometter -> prometter", function() {deepEqual( Stem("prometter"), "prometter");});
test("promettere -> promett", function() {deepEqual( Stem("promettere"), "promett");});
test("promettergli -> promett", function() {deepEqual( Stem("promettergli"), "promett");});
test("prometterlo -> promett", function() {deepEqual( Stem("prometterlo"), "promett");});
test("promettermi -> promett", function() {deepEqual( Stem("promettermi"), "promett");});
test("promettersi -> promett", function() {deepEqual( Stem("promettersi"), "promett");});
test("promettete -> promett", function() {deepEqual( Stem("promettete"), "promett");});
test("promettetele -> promettetel", function() {deepEqual( Stem("promettetele"), "promettetel");});
test("promettetemi -> promettetem", function() {deepEqual( Stem("promettetemi"), "promettetem");});
test("prometteva -> promett", function() {deepEqual( Stem("prometteva"), "promett");});
test("prometti -> promett", function() {deepEqual( Stem("prometti"), "promett");});
test("prometto -> promett", function() {deepEqual( Stem("prometto"), "promett");});
test("promettono -> promett", function() {deepEqual( Stem("promettono"), "promett");});
test("promiscua -> promiscu", function() {deepEqual( Stem("promiscua"), "promiscu");});
test("promise -> promis", function() {deepEqual( Stem("promise"), "promis");});
test("promontorio -> promontor", function() {deepEqual( Stem("promontorio"), "promontor");});
test("promossa -> promoss", function() {deepEqual( Stem("promossa"), "promoss");});
test("promosso -> promoss", function() {deepEqual( Stem("promosso"), "promoss");});
test("promotor -> promotor", function() {deepEqual( Stem("promotor"), "promotor");});
test("promotore -> promotor", function() {deepEqual( Stem("promotore"), "promotor");});
test("promotori -> promotor", function() {deepEqual( Stem("promotori"), "promotor");});
test("promotrice -> promotr", function() {deepEqual( Stem("promotrice"), "promotr");});
test("promovere -> promov", function() {deepEqual( Stem("promovere"), "promov");});
test("promovono -> promov", function() {deepEqual( Stem("promovono"), "promov");});
test("promozionali -> promozional", function() {deepEqual( Stem("promozionali"), "promozional");});
test("promozione -> promozion", function() {deepEqual( Stem("promozione"), "promozion");});
test("promuove -> promuov", function() {deepEqual( Stem("promuove"), "promuov");});
test("promuovere -> promuov", function() {deepEqual( Stem("promuovere"), "promuov");});
test("pronosticargliele -> pronostic", function() {deepEqual( Stem("pronosticargliele"), "pronostic");});
test("pronosticata -> pronostic", function() {deepEqual( Stem("pronosticata"), "pronostic");});
test("pronosticava -> pronostic", function() {deepEqual( Stem("pronosticava"), "pronostic");});
test("pronostici -> pronost", function() {deepEqual( Stem("pronostici"), "pronost");});
test("pronosticò -> pronostic", function() {deepEqual( Stem("pronosticò"), "pronostic");});
test("pronta -> pront", function() {deepEqual( Stem("pronta"), "pront");});
test("prontamente -> pront", function() {deepEqual( Stem("prontamente"), "pront");});
test("pronte -> pront", function() {deepEqual( Stem("pronte"), "pront");});
test("prontezza -> prontezz", function() {deepEqual( Stem("prontezza"), "prontezz");});
test("pronti -> pront", function() {deepEqual( Stem("pronti"), "pront");});
test("pronto -> pront", function() {deepEqual( Stem("pronto"), "pront");});
test("pronuncerà -> pronunc", function() {deepEqual( Stem("pronuncerà"), "pronunc");});
test("pronuncia -> pronunc", function() {deepEqual( Stem("pronuncia"), "pronunc");});
test("pronunciamento -> pronunc", function() {deepEqual( Stem("pronunciamento"), "pronunc");});
test("pronunciare -> pronunc", function() {deepEqual( Stem("pronunciare"), "pronunc");});
test("pronunciarsi -> pronunc", function() {deepEqual( Stem("pronunciarsi"), "pronunc");});
test("pronunciata -> pronunc", function() {deepEqual( Stem("pronunciata"), "pronunc");});
test("pronunciate -> pronunc", function() {deepEqual( Stem("pronunciate"), "pronunc");});
test("pronunciato -> pronunc", function() {deepEqual( Stem("pronunciato"), "pronunc");});
test("pronunzia -> pronunz", function() {deepEqual( Stem("pronunzia"), "pronunz");});
test("pronunziano -> pronunz", function() {deepEqual( Stem("pronunziano"), "pronunz");});
test("pronunziare -> pronunz", function() {deepEqual( Stem("pronunziare"), "pronunz");});
test("pronunziarle -> pronunz", function() {deepEqual( Stem("pronunziarle"), "pronunz");});
test("pronunziato -> pronunz", function() {deepEqual( Stem("pronunziato"), "pronunz");});
test("pronunzio -> pronunz", function() {deepEqual( Stem("pronunzio"), "pronunz");});
test("pronunziò -> pronunz", function() {deepEqual( Stem("pronunziò"), "pronunz");});
test("propaga -> propag", function() {deepEqual( Stem("propaga"), "propag");});
test("propagamento -> propag", function() {deepEqual( Stem("propagamento"), "propag");});
test("propaganda -> propagand", function() {deepEqual( Stem("propaganda"), "propagand");});
test("propagare -> propag", function() {deepEqual( Stem("propagare"), "propag");});
test("propagarla -> propag", function() {deepEqual( Stem("propagarla"), "propag");});
test("propagarsi -> propag", function() {deepEqual( Stem("propagarsi"), "propag");});
test("propagasse -> propag", function() {deepEqual( Stem("propagasse"), "propag");});
test("propagata -> propag", function() {deepEqual( Stem("propagata"), "propag");});
test("propagazione -> propag", function() {deepEqual( Stem("propagazione"), "propag");});
test("propaghino -> propaghin", function() {deepEqual( Stem("propaghino"), "propaghin");});
test("propalate -> propal", function() {deepEqual( Stem("propalate"), "propal");});
test("propende -> prop", function() {deepEqual( Stem("propende"), "prop");});
test("propensi -> propens", function() {deepEqual( Stem("propensi"), "propens");});
test("propensione -> propension", function() {deepEqual( Stem("propensione"), "propension");});
test("propini -> propin", function() {deepEqual( Stem("propini"), "propin");});
test("propio -> prop", function() {deepEqual( Stem("propio"), "prop");});
test("propizio -> propiz", function() {deepEqual( Stem("propizio"), "propiz");});
test("propone -> propon", function() {deepEqual( Stem("propone"), "propon");});
test("proponendo -> propon", function() {deepEqual( Stem("proponendo"), "propon");});
test("proponendosi -> propon", function() {deepEqual( Stem("proponendosi"), "propon");});
test("proponenti -> proponent", function() {deepEqual( Stem("proponenti"), "proponent");});
test("proponeva -> propon", function() {deepEqual( Stem("proponeva"), "propon");});
test("proponevano -> propon", function() {deepEqual( Stem("proponevano"), "propon");});
test("proponga -> propong", function() {deepEqual( Stem("proponga"), "propong");});
test("propongo -> propong", function() {deepEqual( Stem("propongo"), "propong");});
test("propongono -> propong", function() {deepEqual( Stem("propongono"), "propong");});
test("proponiam -> proponiam", function() {deepEqual( Stem("proponiam"), "proponiam");});
test("proponiamo -> propon", function() {deepEqual( Stem("proponiamo"), "propon");});
test("proponimenti -> propon", function() {deepEqual( Stem("proponimenti"), "propon");});
test("proponimento -> propon", function() {deepEqual( Stem("proponimento"), "propon");});
test("propor -> propor", function() {deepEqual( Stem("propor"), "propor");});
test("proporgli -> proporgl", function() {deepEqual( Stem("proporgli"), "proporgl");});
test("proporle -> proporl", function() {deepEqual( Stem("proporle"), "proporl");});
test("proporli -> proporl", function() {deepEqual( Stem("proporli"), "proporl");});
test("proporrà -> proporr", function() {deepEqual( Stem("proporrà"), "proporr");});
test("proporre -> proporr", function() {deepEqual( Stem("proporre"), "proporr");});
test("proporsi -> propors", function() {deepEqual( Stem("proporsi"), "propors");});
test("proporzion -> proporzion", function() {deepEqual( Stem("proporzion"), "proporzion");});
test("proporzionale -> proporzional", function() {deepEqual( Stem("proporzionale"), "proporzional");});
test("proporzionali -> proporzional", function() {deepEqual( Stem("proporzionali"), "proporzional");});
test("proporzionalmente -> proporzional", function() {deepEqual( Stem("proporzionalmente"), "proporzional");});
test("proporzionare -> proporzion", function() {deepEqual( Stem("proporzionare"), "proporzion");});
test("proporzionata -> proporzion", function() {deepEqual( Stem("proporzionata"), "proporzion");});
test("proporzionati -> proporzion", function() {deepEqual( Stem("proporzionati"), "proporzion");});
test("proporzionato -> proporzion", function() {deepEqual( Stem("proporzionato"), "proporzion");});
test("proporzione -> proporzion", function() {deepEqual( Stem("proporzione"), "proporzion");});
test("proporzioni -> proporzion", function() {deepEqual( Stem("proporzioni"), "proporzion");});
test("propose -> propos", function() {deepEqual( Stem("propose"), "propos");});
test("proposero -> proposer", function() {deepEqual( Stem("proposero"), "proposer");});
test("proposito -> propos", function() {deepEqual( Stem("proposito"), "propos");});
test("proposizione -> proposizion", function() {deepEqual( Stem("proposizione"), "proposizion");});
test("proposizioni -> proposizion", function() {deepEqual( Stem("proposizioni"), "proposizion");});
test("proposta -> propost", function() {deepEqual( Stem("proposta"), "propost");});
test("proposte -> propost", function() {deepEqual( Stem("proposte"), "propost");});
test("proposti -> propost", function() {deepEqual( Stem("proposti"), "propost");});
test("proposto -> propost", function() {deepEqual( Stem("proposto"), "propost");});
test("propp -> propp", function() {deepEqual( Stem("propp"), "propp");});
test("propri -> propr", function() {deepEqual( Stem("propri"), "propr");});
test("propria -> propr", function() {deepEqual( Stem("propria"), "propr");});
test("propriamente -> propr", function() {deepEqual( Stem("propriamente"), "propr");});
test("proprie -> propr", function() {deepEqual( Stem("proprie"), "propr");});
test("proprieta -> propriet", function() {deepEqual( Stem("proprieta"), "propriet");});
test("proprietà -> propriet", function() {deepEqual( Stem("proprietà"), "propriet");});
test("proprietàdelle -> proprietàdell", function() {deepEqual( Stem("proprietàdelle"), "proprietàdell");});
test("proprietari -> proprietar", function() {deepEqual( Stem("proprietari"), "proprietar");});
test("proprietarie -> proprietar", function() {deepEqual( Stem("proprietarie"), "proprietar");});
test("proprietario -> proprietar", function() {deepEqual( Stem("proprietario"), "proprietar");});
test("proprio -> propr", function() {deepEqual( Stem("proprio"), "propr");});
test("proprosito -> propros", function() {deepEqual( Stem("proprosito"), "propros");});
test("propugna -> propugn", function() {deepEqual( Stem("propugna"), "propugn");});
test("propugnano -> propugn", function() {deepEqual( Stem("propugnano"), "propugn");});
test("prora -> pror", function() {deepEqual( Stem("prora"), "pror");});
test("prorietà -> proriet", function() {deepEqual( Stem("prorietà"), "proriet");});
test("proroga -> prorog", function() {deepEqual( Stem("proroga"), "prorog");});
test("prorogata -> prorog", function() {deepEqual( Stem("prorogata"), "prorog");});
test("prorogato -> prorog", function() {deepEqual( Stem("prorogato"), "prorog");});
test("prorompeva -> proromp", function() {deepEqual( Stem("prorompeva"), "proromp");});
test("prorpio -> prorp", function() {deepEqual( Stem("prorpio"), "prorp");});
test("proruppe -> prorupp", function() {deepEqual( Stem("proruppe"), "prorupp");});
test("proruppero -> prorupper", function() {deepEqual( Stem("proruppero"), "prorupper");});
test("prosa -> pros", function() {deepEqual( Stem("prosa"), "pros");});
test("prosapia -> prosap", function() {deepEqual( Stem("prosapia"), "prosap");});
test("proscenio -> proscen", function() {deepEqual( Stem("proscenio"), "proscen");});
test("prosecuzione -> prosecu", function() {deepEqual( Stem("prosecuzione"), "prosecu");});
test("prosegue -> prosegu", function() {deepEqual( Stem("prosegue"), "prosegu");});
test("proseguendo -> prosegu", function() {deepEqual( Stem("proseguendo"), "prosegu");});
test("proseguì -> prosegu", function() {deepEqual( Stem("proseguì"), "prosegu");});
test("proseguirà -> prosegu", function() {deepEqual( Stem("proseguirà"), "prosegu");});
test("proseguiranno -> prosegu", function() {deepEqual( Stem("proseguiranno"), "prosegu");});
test("proseguire -> prosegu", function() {deepEqual( Stem("proseguire"), "prosegu");});
test("proseguita -> prosegu", function() {deepEqual( Stem("proseguita"), "prosegu");});
test("proseguite -> prosegu", function() {deepEqual( Stem("proseguite"), "prosegu");});
test("proseguiti -> prosegu", function() {deepEqual( Stem("proseguiti"), "prosegu");});
test("proseguito -> prosegu", function() {deepEqual( Stem("proseguito"), "prosegu");});
test("proseguiva -> prosegu", function() {deepEqual( Stem("proseguiva"), "prosegu");});
test("proseguono -> prosegu", function() {deepEqual( Stem("proseguono"), "prosegu");});
test("prosopopea -> prosopope", function() {deepEqual( Stem("prosopopea"), "prosopope");});
test("prosperità -> prosper", function() {deepEqual( Stem("prosperità"), "prosper");});
test("prospero -> prosper", function() {deepEqual( Stem("prospero"), "prosper");});
test("prosperosi -> prosper", function() {deepEqual( Stem("prosperosi"), "prosper");});
test("prosperoso -> prosper", function() {deepEqual( Stem("prosperoso"), "prosper");});
test("prospetta -> prospett", function() {deepEqual( Stem("prospetta"), "prospett");});
test("prospettata -> prospett", function() {deepEqual( Stem("prospettata"), "prospett");});
test("prospettati -> prospett", function() {deepEqual( Stem("prospettati"), "prospett");});
test("prospettato -> prospett", function() {deepEqual( Stem("prospettato"), "prospett");});
test("prospettava -> prospett", function() {deepEqual( Stem("prospettava"), "prospett");});
test("prospetti -> prospett", function() {deepEqual( Stem("prospetti"), "prospett");});
test("prospettiva -> prospett", function() {deepEqual( Stem("prospettiva"), "prospett");});
test("prospettive -> prospett", function() {deepEqual( Stem("prospettive"), "prospett");});
test("prospetto -> prospett", function() {deepEqual( Stem("prospetto"), "prospett");});
test("prossima -> prossim", function() {deepEqual( Stem("prossima"), "prossim");});
test("prossimamente -> prossim", function() {deepEqual( Stem("prossimamente"), "prossim");});
test("prossime -> prossim", function() {deepEqual( Stem("prossime"), "prossim");});
test("prossimi -> prossim", function() {deepEqual( Stem("prossimi"), "prossim");});
test("prossimo -> prossim", function() {deepEqual( Stem("prossimo"), "prossim");});
test("prostituta -> prostit", function() {deepEqual( Stem("prostituta"), "prostit");});
test("protagonista -> protagon", function() {deepEqual( Stem("protagonista"), "protagon");});
test("protagonisti -> protagon", function() {deepEqual( Stem("protagonisti"), "protagon");});
test("protegge -> protegg", function() {deepEqual( Stem("protegge"), "protegg");});
test("proteggendosi -> protegg", function() {deepEqual( Stem("proteggendosi"), "protegg");});
test("proteggerci -> protegg", function() {deepEqual( Stem("proteggerci"), "protegg");});
test("proteggere -> protegg", function() {deepEqual( Stem("proteggere"), "protegg");});
test("proteggerla -> protegg", function() {deepEqual( Stem("proteggerla"), "protegg");});
test("proteggerlo -> protegg", function() {deepEqual( Stem("proteggerlo"), "protegg");});
test("proteggeva -> protegg", function() {deepEqual( Stem("proteggeva"), "protegg");});
test("proteggo -> protegg", function() {deepEqual( Stem("proteggo"), "protegg");});
test("proteo -> prote", function() {deepEqual( Stem("proteo"), "prote");});
test("protesa -> protes", function() {deepEqual( Stem("protesa"), "protes");});
test("protesta -> protest", function() {deepEqual( Stem("protesta"), "protest");});
test("protestandogli -> protest", function() {deepEqual( Stem("protestandogli"), "protest");});
test("protestante -> protest", function() {deepEqual( Stem("protestante"), "protest");});
test("protestantè -> protestant", function() {deepEqual( Stem("protestantè"), "protestant");});
test("protestanti -> protest", function() {deepEqual( Stem("protestanti"), "protest");});
test("protestare -> protest", function() {deepEqual( Stem("protestare"), "protest");});
test("protestato -> protest", function() {deepEqual( Stem("protestato"), "protest");});
test("protestava -> protest", function() {deepEqual( Stem("protestava"), "protest");});
test("protestavano -> protest", function() {deepEqual( Stem("protestavano"), "protest");});
test("proteste -> protest", function() {deepEqual( Stem("proteste"), "protest");});
test("protetta -> protett", function() {deepEqual( Stem("protetta"), "protett");});
test("protetti -> protett", function() {deepEqual( Stem("protetti"), "protett");});
test("protettor -> protettor", function() {deepEqual( Stem("protettor"), "protettor");});
test("protettore -> protettor", function() {deepEqual( Stem("protettore"), "protettor");});
test("protettrice -> protettr", function() {deepEqual( Stem("protettrice"), "protettr");});
test("protezione -> protezion", function() {deepEqual( Stem("protezione"), "protezion");});
test("protezioni -> protezion", function() {deepEqual( Stem("protezioni"), "protezion");});
test("protocollari -> protocollar", function() {deepEqual( Stem("protocollari"), "protocollar");});
test("protocollo -> protocoll", function() {deepEqual( Stem("protocollo"), "protocoll");});
test("protofisico -> protofis", function() {deepEqual( Stem("protofisico"), "protofis");});
test("protrae -> protra", function() {deepEqual( Stem("protrae"), "protra");});
test("protrarrà -> protrarr", function() {deepEqual( Stem("protrarrà"), "protrarr");});
test("protrarsi -> protr", function() {deepEqual( Stem("protrarsi"), "protr");});
test("protti -> prott", function() {deepEqual( Stem("protti"), "prott");});
test("protuberanza -> protuber", function() {deepEqual( Stem("protuberanza"), "protuber");});
test("proueeré -> proueer", function() {deepEqual( Stem("proueeré"), "proueer");});
test("prouisione -> prouision", function() {deepEqual( Stem("prouisione"), "prouision");});
test("prova -> prov", function() {deepEqual( Stem("prova"), "prov");});
test("provando -> prov", function() {deepEqual( Stem("provando"), "prov");});
test("provano -> prov", function() {deepEqual( Stem("provano"), "prov");});
test("provar -> prov", function() {deepEqual( Stem("provar"), "prov");});
test("provarci -> prov", function() {deepEqual( Stem("provarci"), "prov");});
test("provare -> prov", function() {deepEqual( Stem("provare"), "prov");});
test("provarla -> prov", function() {deepEqual( Stem("provarla"), "prov");});
test("provarne -> prov", function() {deepEqual( Stem("provarne"), "prov");});
test("provarsi -> prov", function() {deepEqual( Stem("provarsi"), "prov");});
test("provasse -> prov", function() {deepEqual( Stem("provasse"), "prov");});
test("provata -> prov", function() {deepEqual( Stem("provata"), "prov");});
test("provate -> prov", function() {deepEqual( Stem("provate"), "prov");});
test("provati -> prov", function() {deepEqual( Stem("provati"), "prov");});
test("provato -> prov", function() {deepEqual( Stem("provato"), "prov");});
test("provava -> prov", function() {deepEqual( Stem("provava"), "prov");});
test("provavano -> prov", function() {deepEqual( Stem("provavano"), "prov");});
test("prove -> prov", function() {deepEqual( Stem("prove"), "prov");});
test("provence -> provenc", function() {deepEqual( Stem("provence"), "provenc");});
test("provengono -> proveng", function() {deepEqual( Stem("provengono"), "proveng");});
test("proveniente -> provenient", function() {deepEqual( Stem("proveniente"), "provenient");});
test("provenienti -> provenient", function() {deepEqual( Stem("provenienti"), "provenient");});
test("provenienza -> provenient", function() {deepEqual( Stem("provenienza"), "provenient");});
test("provenienze -> provenient", function() {deepEqual( Stem("provenienze"), "provenient");});
test("provera -> prover", function() {deepEqual( Stem("provera"), "prover");});
test("proverà -> prov", function() {deepEqual( Stem("proverà"), "prov");});
test("proverai -> prov", function() {deepEqual( Stem("proverai"), "prov");});
test("proverbi -> proverb", function() {deepEqual( Stem("proverbi"), "proverb");});
test("proverbio -> proverb", function() {deepEqual( Stem("proverbio"), "proverb");});
test("proveremo -> prov", function() {deepEqual( Stem("proveremo"), "prov");});
test("proverete -> prov", function() {deepEqual( Stem("proverete"), "prov");});
test("provetto -> provett", function() {deepEqual( Stem("provetto"), "provett");});
test("providence -> providenc", function() {deepEqual( Stem("providence"), "providenc");});
test("providencia -> providenc", function() {deepEqual( Stem("providencia"), "providenc");});
test("province -> provinc", function() {deepEqual( Stem("province"), "provinc");});
test("provincia -> provinc", function() {deepEqual( Stem("provincia"), "provinc");});
test("provinciale -> provincial", function() {deepEqual( Stem("provinciale"), "provincial");});
test("provinciali -> provincial", function() {deepEqual( Stem("provinciali"), "provincial");});
test("provincie -> provinc", function() {deepEqual( Stem("provincie"), "provinc");});
test("provo -> prov", function() {deepEqual( Stem("provo"), "prov");});
test("provò -> prov", function() {deepEqual( Stem("provò"), "prov");});
test("provocando -> provoc", function() {deepEqual( Stem("provocando"), "provoc");});
test("provocano -> provoc", function() {deepEqual( Stem("provocano"), "provoc");});
test("provocare -> provoc", function() {deepEqual( Stem("provocare"), "provoc");});
test("provocarli -> provoc", function() {deepEqual( Stem("provocarli"), "provoc");});
test("provocarlo -> provoc", function() {deepEqual( Stem("provocarlo"), "provoc");});
test("provocata -> provoc", function() {deepEqual( Stem("provocata"), "provoc");});
test("provocativo -> provoc", function() {deepEqual( Stem("provocativo"), "provoc");});
test("provocato -> provoc", function() {deepEqual( Stem("provocato"), "provoc");});
test("provocatori -> provoc", function() {deepEqual( Stem("provocatori"), "provoc");});
test("provocatorie -> provocator", function() {deepEqual( Stem("provocatorie"), "provocator");});
test("provocatorio -> provocator", function() {deepEqual( Stem("provocatorio"), "provocator");});
test("provocazione -> provoc", function() {deepEqual( Stem("provocazione"), "provoc");});
test("provocherà -> provoc", function() {deepEqual( Stem("provocherà"), "provoc");});
test("provocherai -> provoc", function() {deepEqual( Stem("provocherai"), "provoc");});
test("provocò -> provoc", function() {deepEqual( Stem("provocò"), "provoc");});
test("provv -> provv", function() {deepEqual( Stem("provv"), "provv");});
test("provveda -> provved", function() {deepEqual( Stem("provveda"), "provved");});
test("provveder -> provveder", function() {deepEqual( Stem("provveder"), "provveder");});
test("provvederà -> provved", function() {deepEqual( Stem("provvederà"), "provved");});
test("provvedere -> provved", function() {deepEqual( Stem("provvedere"), "provved");});
test("provvederla -> provved", function() {deepEqual( Stem("provvederla"), "provved");});
test("provvedeva -> provved", function() {deepEqual( Stem("provvedeva"), "provved");});
test("provvedimenti -> provved", function() {deepEqual( Stem("provvedimenti"), "provved");});
test("provvedimento -> provved", function() {deepEqual( Stem("provvedimento"), "provved");});
test("provvedute -> provved", function() {deepEqual( Stem("provvedute"), "provved");});
test("provveduti -> provved", function() {deepEqual( Stem("provveduti"), "provved");});
test("provveduto -> provved", function() {deepEqual( Stem("provveduto"), "provved");});
test("provvidenza -> provvident", function() {deepEqual( Stem("provvidenza"), "provvident");});
test("provvisione -> provvision", function() {deepEqual( Stem("provvisione"), "provvision");});
test("provvisioni -> provvision", function() {deepEqual( Stem("provvisioni"), "provvision");});
test("provvisori -> provvisor", function() {deepEqual( Stem("provvisori"), "provvisor");});
test("provvisorio -> provvisor", function() {deepEqual( Stem("provvisorio"), "provvisor");});
test("provvisti -> provvist", function() {deepEqual( Stem("provvisti"), "provvist");});
test("provvisto -> provvist", function() {deepEqual( Stem("provvisto"), "provvist");});
test("prozie -> proz", function() {deepEqual( Stem("prozie"), "proz");});
test("prudente -> prudent", function() {deepEqual( Stem("prudente"), "prudent");});
test("prudenti -> prudent", function() {deepEqual( Stem("prudenti"), "prudent");});
test("prudentium -> prudentium", function() {deepEqual( Stem("prudentium"), "prudentium");});
test("prudenza -> prudenz", function() {deepEqual( Stem("prudenza"), "prudenz");});
test("prudenziale -> prudenzial", function() {deepEqual( Stem("prudenziale"), "prudenzial");});
test("prunaio -> prunai", function() {deepEqual( Stem("prunaio"), "prunai");});
test("pruni -> prun", function() {deepEqual( Stem("pruni"), "prun");});
test("prurito -> prur", function() {deepEqual( Stem("prurito"), "prur");});
test("prusis -> prusis", function() {deepEqual( Stem("prusis"), "prusis");});
test("ps -> ps", function() {deepEqual( Stem("ps"), "ps");});
test("pscritto -> pscritt", function() {deepEqual( Stem("pscritto"), "pscritt");});
test("psi -> psi", function() {deepEqual( Stem("psi"), "psi");});
test("psiche -> psic", function() {deepEqual( Stem("psiche"), "psic");});
test("psichico -> psichic", function() {deepEqual( Stem("psichico"), "psichic");});
test("psico -> psic", function() {deepEqual( Stem("psico"), "psic");});
test("psicosi -> psicos", function() {deepEqual( Stem("psicosi"), "psicos");});
test("pst -> pst", function() {deepEqual( Stem("pst"), "pst");});
test("psu -> psu", function() {deepEqual( Stem("psu"), "psu");});
test("pt -> pt", function() {deepEqual( Stem("pt"), "pt");});
test("pu -> pu", function() {deepEqual( Stem("pu"), "pu");});
test("pubbicato -> pubbic", function() {deepEqual( Stem("pubbicato"), "pubbic");});
test("pubblica -> pubblic", function() {deepEqual( Stem("pubblica"), "pubblic");});
test("pubblicamente -> pubblic", function() {deepEqual( Stem("pubblicamente"), "pubblic");});
test("pubblicando -> pubblic", function() {deepEqual( Stem("pubblicando"), "pubblic");});
test("pubblicar -> pubblic", function() {deepEqual( Stem("pubblicar"), "pubblic");});
test("pubblicare -> pubblic", function() {deepEqual( Stem("pubblicare"), "pubblic");});
test("pubblicasse -> pubblic", function() {deepEqual( Stem("pubblicasse"), "pubblic");});
test("pubblicata -> pubblic", function() {deepEqual( Stem("pubblicata"), "pubblic");});
test("pubblicatao -> pubblicata", function() {deepEqual( Stem("pubblicatao"), "pubblicata");});
test("pubblicate -> pubblic", function() {deepEqual( Stem("pubblicate"), "pubblic");});
test("pubblicati -> pubblic", function() {deepEqual( Stem("pubblicati"), "pubblic");});
test("pubblicato -> pubblic", function() {deepEqual( Stem("pubblicato"), "pubblic");});
test("pubblicavano -> pubblic", function() {deepEqual( Stem("pubblicavano"), "pubblic");});
test("pubblicazione -> pubblic", function() {deepEqual( Stem("pubblicazione"), "pubblic");});
test("pubblicazioni -> pubblic", function() {deepEqual( Stem("pubblicazioni"), "pubblic");});
test("pubbliche -> pubblic", function() {deepEqual( Stem("pubbliche"), "pubblic");});
test("pubblichi -> pubblic", function() {deepEqual( Stem("pubblichi"), "pubblic");});
test("pubblici -> pubblic", function() {deepEqual( Stem("pubblici"), "pubblic");});
test("pubblicità -> pubblic", function() {deepEqual( Stem("pubblicità"), "pubblic");});
test("pubblicitari -> pubblicitar", function() {deepEqual( Stem("pubblicitari"), "pubblicitar");});
test("pubblicitaria -> pubblicitar", function() {deepEqual( Stem("pubblicitaria"), "pubblicitar");});
test("pubblicitarie -> pubblicitar", function() {deepEqual( Stem("pubblicitarie"), "pubblicitar");});
test("pubblicizza -> pubblicizz", function() {deepEqual( Stem("pubblicizza"), "pubblicizz");});
test("pubblicizzati -> pubblicizz", function() {deepEqual( Stem("pubblicizzati"), "pubblicizz");});
test("pubblico -> pubblic", function() {deepEqual( Stem("pubblico"), "pubblic");});
test("pubblicò -> pubblic", function() {deepEqual( Stem("pubblicò"), "pubblic");});
test("pubertà -> pubert", function() {deepEqual( Stem("pubertà"), "pubert");});
test("publbico -> publbic", function() {deepEqual( Stem("publbico"), "publbic");});
test("publicata -> public", function() {deepEqual( Stem("publicata"), "public");});
test("publico -> public", function() {deepEqual( Stem("publico"), "public");});
test("publio -> publ", function() {deepEqual( Stem("publio"), "publ");});
test("puc -> puc", function() {deepEqual( Stem("puc"), "puc");});
test("puche -> puch", function() {deepEqual( Stem("puche"), "puch");});
test("pudore -> pudor", function() {deepEqual( Stem("pudore"), "pudor");});
test("pudori -> pudor", function() {deepEqual( Stem("pudori"), "pudor");});
test("pueblo -> puebl", function() {deepEqual( Stem("pueblo"), "puebl");});
test("puedes -> puedes", function() {deepEqual( Stem("puedes"), "puedes");});
test("puerizia -> pueriz", function() {deepEqual( Stem("puerizia"), "pueriz");});
test("pug -> pug", function() {deepEqual( Stem("pug"), "pug");});
test("pugilato -> pugil", function() {deepEqual( Stem("pugilato"), "pugil");});
test("puglia -> pugl", function() {deepEqual( Stem("puglia"), "pugl");});
test("puglià -> pugl", function() {deepEqual( Stem("puglià"), "pugl");});
test("pugliese -> puglies", function() {deepEqual( Stem("pugliese"), "puglies");});
test("pugliesi -> puglies", function() {deepEqual( Stem("pugliesi"), "puglies");});
test("pugnalata -> pugnal", function() {deepEqual( Stem("pugnalata"), "pugnal");});
test("pugnalate -> pugnal", function() {deepEqual( Stem("pugnalate"), "pugnal");});
test("pugnale -> pugnal", function() {deepEqual( Stem("pugnale"), "pugnal");});
test("pugnali -> pugnal", function() {deepEqual( Stem("pugnali"), "pugnal");});
test("pugni -> pugn", function() {deepEqual( Stem("pugni"), "pugn");});
test("pugnitopo -> pugnitop", function() {deepEqual( Stem("pugnitopo"), "pugnitop");});
test("pugno -> pugn", function() {deepEqual( Stem("pugno"), "pugn");});
test("pulce -> pulc", function() {deepEqual( Stem("pulce"), "pulc");});
test("pulcin -> pulcin", function() {deepEqual( Stem("pulcin"), "pulcin");});
test("pulcinella -> pulcinell", function() {deepEqual( Stem("pulcinella"), "pulcinell");});
test("pulcini -> pulcin", function() {deepEqual( Stem("pulcini"), "pulcin");});
test("pulcino -> pulcin", function() {deepEqual( Stem("pulcino"), "pulcin");});
test("pulejo -> pulej", function() {deepEqual( Stem("pulejo"), "pulej");});
test("puliè -> pul", function() {deepEqual( Stem("puliè"), "pul");});
test("pulita -> pul", function() {deepEqual( Stem("pulita"), "pul");});
test("pulite -> pul", function() {deepEqual( Stem("pulite"), "pul");});
test("pulitè -> pulit", function() {deepEqual( Stem("pulitè"), "pulit");});
test("pulito -> pul", function() {deepEqual( Stem("pulito"), "pul");});
test("pulizia -> puliz", function() {deepEqual( Stem("pulizia"), "puliz");});
test("pullman -> pullman", function() {deepEqual( Stem("pullman"), "pullman");});
test("pullmann -> pullmann", function() {deepEqual( Stem("pullmann"), "pullmann");});
test("pulmino -> pulmin", function() {deepEqual( Stem("pulmino"), "pulmin");});
test("pulpiti -> pulp", function() {deepEqual( Stem("pulpiti"), "pulp");});
test("pulpito -> pulp", function() {deepEqual( Stem("pulpito"), "pulp");});
test("puma -> pum", function() {deepEqual( Stem("puma"), "pum");});
test("punge -> pung", function() {deepEqual( Stem("punge"), "pung");});
test("pungente -> pungent", function() {deepEqual( Stem("pungente"), "pungent");});
test("pungenti -> pungent", function() {deepEqual( Stem("pungenti"), "pungent");});
test("pungolo -> pungol", function() {deepEqual( Stem("pungolo"), "pungol");});
test("punire -> pun", function() {deepEqual( Stem("punire"), "pun");});
test("punirlo -> pun", function() {deepEqual( Stem("punirlo"), "pun");});
test("puniti -> pun", function() {deepEqual( Stem("puniti"), "pun");});
test("punitore -> punitor", function() {deepEqual( Stem("punitore"), "punitor");});
test("puniva -> pun", function() {deepEqual( Stem("puniva"), "pun");});
test("punizione -> punizion", function() {deepEqual( Stem("punizione"), "punizion");});
test("punt -> punt", function() {deepEqual( Stem("punt"), "punt");});
test("punta -> punt", function() {deepEqual( Stem("punta"), "punt");});
test("puntando -> punt", function() {deepEqual( Stem("puntando"), "punt");});
test("puntano -> punt", function() {deepEqual( Stem("puntano"), "punt");});
test("puntare -> punt", function() {deepEqual( Stem("puntare"), "punt");});
test("puntarglisi -> puntarglis", function() {deepEqual( Stem("puntarglisi"), "puntarglis");});
test("puntata -> punt", function() {deepEqual( Stem("puntata"), "punt");});
test("puntate -> punt", function() {deepEqual( Stem("puntate"), "punt");});
test("puntati -> punt", function() {deepEqual( Stem("puntati"), "punt");});
test("puntato -> punt", function() {deepEqual( Stem("puntato"), "punt");});
test("puntava -> punt", function() {deepEqual( Stem("puntava"), "punt");});
test("punte -> punt", function() {deepEqual( Stem("punte"), "punt");});
test("punteggio -> puntegg", function() {deepEqual( Stem("punteggio"), "puntegg");});
test("puntelli -> puntell", function() {deepEqual( Stem("puntelli"), "puntell");});
test("punterà -> punt", function() {deepEqual( Stem("punterà"), "punt");});
test("punti -> punt", function() {deepEqual( Stem("punti"), "punt");});
test("puntiamo -> punt", function() {deepEqual( Stem("puntiamo"), "punt");});
test("puntigli -> puntigl", function() {deepEqual( Stem("puntigli"), "puntigl");});
test("puntiglio -> puntigl", function() {deepEqual( Stem("puntiglio"), "puntigl");});
test("puntiglioso -> puntigl", function() {deepEqual( Stem("puntiglioso"), "puntigl");});
test("puntino -> puntin", function() {deepEqual( Stem("puntino"), "puntin");});
test("punto -> punt", function() {deepEqual( Stem("punto"), "punt");});
test("puntuale -> puntual", function() {deepEqual( Stem("puntuale"), "puntual");});
test("puntuali -> puntual", function() {deepEqual( Stem("puntuali"), "puntual");});
test("puntualità -> puntual", function() {deepEqual( Stem("puntualità"), "puntual");});
test("puntualizza -> puntualizz", function() {deepEqual( Stem("puntualizza"), "puntualizz");});
test("puntualizzato -> puntualizz", function() {deepEqual( Stem("puntualizzato"), "puntualizz");});
test("puntualizzazione -> puntualizz", function() {deepEqual( Stem("puntualizzazione"), "puntualizz");});
test("puntualizzazioni -> puntualizz", function() {deepEqual( Stem("puntualizzazioni"), "puntualizz");});
test("puntualmente -> puntual", function() {deepEqual( Stem("puntualmente"), "puntual");});
test("puntura -> puntur", function() {deepEqual( Stem("puntura"), "puntur");});
test("punzione -> punzion", function() {deepEqual( Stem("punzione"), "punzion");});
test("punzone -> punzon", function() {deepEqual( Stem("punzone"), "punzon");});
test("punzoni -> punzon", function() {deepEqual( Stem("punzoni"), "punzon");});
test("puo -> puo", function() {deepEqual( Stem("puo"), "puo");});
test("può -> può", function() {deepEqual( Stem("può"), "può");});
test("puoco -> puoc", function() {deepEqual( Stem("puoco"), "puoc");});
test("puoi -> puo", function() {deepEqual( Stem("puoi"), "puo");});
test("puoiché -> puoic", function() {deepEqual( Stem("puoiché"), "puoic");});
test("pupazzi -> pupazz", function() {deepEqual( Stem("pupazzi"), "pupazz");});
test("pupilla -> pupill", function() {deepEqual( Stem("pupilla"), "pupill");});
test("pupille -> pupill", function() {deepEqual( Stem("pupille"), "pupill");});
test("pupillo -> pupill", function() {deepEqual( Stem("pupillo"), "pupill");});
test("pur -> pur", function() {deepEqual( Stem("pur"), "pur");});
test("pura -> pur", function() {deepEqual( Stem("pura"), "pur");});
test("puramente -> pur", function() {deepEqual( Stem("puramente"), "pur");});
test("purché -> purc", function() {deepEqual( Stem("purché"), "purc");});
test("pure -> pur", function() {deepEqual( Stem("pure"), "pur");});
test("purgare -> purg", function() {deepEqual( Stem("purgare"), "purg");});
test("purgatorio -> purgator", function() {deepEqual( Stem("purgatorio"), "purgator");});
test("purghe -> purg", function() {deepEqual( Stem("purghe"), "purg");});
test("puri -> pur", function() {deepEqual( Stem("puri"), "pur");});
test("purissime -> purissim", function() {deepEqual( Stem("purissime"), "purissim");});
test("purissimi -> purissim", function() {deepEqual( Stem("purissimi"), "purissim");});
test("puritanesimo -> puritanesim", function() {deepEqual( Stem("puritanesimo"), "puritanesim");});
test("puro -> pur", function() {deepEqual( Stem("puro"), "pur");});
test("purtroppo -> purtropp", function() {deepEqual( Stem("purtroppo"), "purtropp");});
test("purus -> purus", function() {deepEqual( Stem("purus"), "purus");});
test("pusceddu -> pusceddu", function() {deepEqual( Stem("pusceddu"), "pusceddu");});
test("pusillanime -> pusillanim", function() {deepEqual( Stem("pusillanime"), "pusillanim");});
test("pusillanimità -> pusillanim", function() {deepEqual( Stem("pusillanimità"), "pusillanim");});
test("pusterla -> pust", function() {deepEqual( Stem("pusterla"), "pust");});
test("putignanese -> putignanes", function() {deepEqual( Stem("putignanese"), "putignanes");});
test("putignano -> putign", function() {deepEqual( Stem("putignano"), "putign");});
test("putrefatti -> putrefatt", function() {deepEqual( Stem("putrefatti"), "putrefatt");});
test("putrida -> putrid", function() {deepEqual( Stem("putrida"), "putrid");});
test("puttemans -> puttemans", function() {deepEqual( Stem("puttemans"), "puttemans");});
test("puzzar -> puzz", function() {deepEqual( Stem("puzzar"), "puzz");});
test("puzzava -> puzz", function() {deepEqual( Stem("puzzava"), "puzz");});
test("puzzo -> puzz", function() {deepEqual( Stem("puzzo"), "puzz");});
test("pvs -> pvs", function() {deepEqual( Stem("pvs"), "pvs");});
test("pyc -> pyc", function() {deepEqual( Stem("pyc"), "pyc");});
test("pz -> pz", function() {deepEqual( Stem("pz"), "pz");});
test("q -> q", function() {deepEqual( Stem("q"), "q");});
test("qa -> qa", function() {deepEqual( Stem("qa"), "qa");});
test("qatar -> qat", function() {deepEqual( Stem("qatar"), "qat");});
test("qbxb -> qbxb", function() {deepEqual( Stem("qbxb"), "qbxb");});
test("qn -> qn", function() {deepEqual( Stem("qn"), "qn");});
test("qu -> qu", function() {deepEqual( Stem("qu"), "qu");});
test("qua -> qua", function() {deepEqual( Stem("qua"), "qua");});
test("quaderno -> quadern", function() {deepEqual( Stem("quaderno"), "quadern");});
test("quadraro -> quadrar", function() {deepEqual( Stem("quadraro"), "quadrar");});
test("quadrata -> quadr", function() {deepEqual( Stem("quadrata"), "quadr");});
test("quadrati -> quadr", function() {deepEqual( Stem("quadrati"), "quadr");});
test("quadrato -> quadr", function() {deepEqual( Stem("quadrato"), "quadr");});
test("quadri -> quadr", function() {deepEqual( Stem("quadri"), "quadr");});
test("quadriennio -> quadrienn", function() {deepEqual( Stem("quadriennio"), "quadrienn");});
test("quadrifoglio -> quadrifogl", function() {deepEqual( Stem("quadrifoglio"), "quadrifogl");});
test("quadrilatero -> quadrilater", function() {deepEqual( Stem("quadrilatero"), "quadrilater");});
test("quadrimotori -> quadrimotor", function() {deepEqual( Stem("quadrimotori"), "quadrimotor");});
test("quadro -> quadr", function() {deepEqual( Stem("quadro"), "quadr");});
test("quae -> qua", function() {deepEqual( Stem("quae"), "qua");});
test("quaggiù -> quaggiù", function() {deepEqual( Stem("quaggiù"), "quaggiù");});
test("quaid -> quaid", function() {deepEqual( Stem("quaid"), "quaid");});
test("qual -> qual", function() {deepEqual( Stem("qual"), "qual");});
test("qualche -> qualc", function() {deepEqual( Stem("qualche"), "qualc");});
test("qualchedun -> qualchedun", function() {deepEqual( Stem("qualchedun"), "qualchedun");});
test("qualcheduna -> qualchedun", function() {deepEqual( Stem("qualcheduna"), "qualchedun");});
test("qualcheduno -> qualchedun", function() {deepEqual( Stem("qualcheduno"), "qualchedun");});
test("qualcosa -> qualcos", function() {deepEqual( Stem("qualcosa"), "qualcos");});
test("qualcosina -> qualcosin", function() {deepEqual( Stem("qualcosina"), "qualcosin");});
test("qualcuno -> qualcun", function() {deepEqual( Stem("qualcuno"), "qualcun");});
test("quale -> qual", function() {deepEqual( Stem("quale"), "qual");});
test("quali -> qual", function() {deepEqual( Stem("quali"), "qual");});
test("qualifica -> qualif", function() {deepEqual( Stem("qualifica"), "qualif");});
test("qualificanti -> qualific", function() {deepEqual( Stem("qualificanti"), "qualific");});
test("qualificar -> qualific", function() {deepEqual( Stem("qualificar"), "qualific");});
test("qualificare -> qualific", function() {deepEqual( Stem("qualificare"), "qualific");});
test("qualificata -> qualific", function() {deepEqual( Stem("qualificata"), "qualific");});
test("qualificati -> qualific", function() {deepEqual( Stem("qualificati"), "qualific");});
test("qualificato -> qualific", function() {deepEqual( Stem("qualificato"), "qualific");});
test("qualificava -> qualific", function() {deepEqual( Stem("qualificava"), "qualific");});
test("qualita -> qual", function() {deepEqual( Stem("qualita"), "qual");});
test("qualità -> qualit", function() {deepEqual( Stem("qualità"), "qualit");});
test("qualitate -> qualit", function() {deepEqual( Stem("qualitate"), "qualit");});
test("qualitativamente -> qualit", function() {deepEqual( Stem("qualitativamente"), "qualit");});
test("qualla -> quall", function() {deepEqual( Stem("qualla"), "quall");});
test("qualmente -> qualment", function() {deepEqual( Stem("qualmente"), "qualment");});
test("qualora -> qualor", function() {deepEqual( Stem("qualora"), "qualor");});
test("qualsiasi -> qualsias", function() {deepEqual( Stem("qualsiasi"), "qualsias");});
test("qualsisia -> qualsis", function() {deepEqual( Stem("qualsisia"), "qualsis");});
test("qualsiuoglia -> qualsiuogl", function() {deepEqual( Stem("qualsiuoglia"), "qualsiuogl");});
test("qualsivoglia -> qualsivogl", function() {deepEqual( Stem("qualsivoglia"), "qualsivogl");});
test("qualunque -> qualunqu", function() {deepEqual( Stem("qualunque"), "qualunqu");});
test("qualunquismo -> qualunqu", function() {deepEqual( Stem("qualunquismo"), "qualunqu");});
test("qualunquista -> qualunqu", function() {deepEqual( Stem("qualunquista"), "qualunqu");});
test("quand -> quand", function() {deepEqual( Stem("quand"), "quand");});
test("quando -> quand", function() {deepEqual( Stem("quando"), "quand");});
test("quant -> quant", function() {deepEqual( Stem("quant"), "quant");});
test("quanta -> quant", function() {deepEqual( Stem("quanta"), "quant");});
test("quante -> quant", function() {deepEqual( Stem("quante"), "quant");});
test("quanti -> quant", function() {deepEqual( Stem("quanti"), "quant");});
test("quantificavano -> quantific", function() {deepEqual( Stem("quantificavano"), "quantific");});
test("quantità -> quantit", function() {deepEqual( Stem("quantità"), "quantit");});
test("quantitativi -> quantit", function() {deepEqual( Stem("quantitativi"), "quantit");});
test("quantitativo -> quantit", function() {deepEqual( Stem("quantitativo"), "quantit");});
test("quanto -> quant", function() {deepEqual( Stem("quanto"), "quant");});
test("quantunque -> quantunqu", function() {deepEqual( Stem("quantunque"), "quantunqu");});
test("quarant -> quarant", function() {deepEqual( Stem("quarant"), "quarant");});
test("quaranta -> quarant", function() {deepEqual( Stem("quaranta"), "quarant");});
test("quarantene -> quaranten", function() {deepEqual( Stem("quarantene"), "quaranten");});
test("quarantenni -> quarantenn", function() {deepEqual( Stem("quarantenni"), "quarantenn");});
test("quarantina -> quarantin", function() {deepEqual( Stem("quarantina"), "quarantin");});
test("quaresima -> quaresim", function() {deepEqual( Stem("quaresima"), "quaresim");});
test("quaresimale -> quaresimal", function() {deepEqual( Stem("quaresimale"), "quaresimal");});
test("quarta -> quart", function() {deepEqual( Stem("quarta"), "quart");});
test("quartetto -> quartett", function() {deepEqual( Stem("quartetto"), "quartett");});
test("quarti -> quart", function() {deepEqual( Stem("quarti"), "quart");});
test("quartier -> quartier", function() {deepEqual( Stem("quartier"), "quartier");});
test("quartiere -> quart", function() {deepEqual( Stem("quartiere"), "quart");});
test("quartieri -> quartier", function() {deepEqual( Stem("quartieri"), "quartier");});
test("quarto -> quart", function() {deepEqual( Stem("quarto"), "quart");});
test("quartuccio -> quartucc", function() {deepEqual( Stem("quartuccio"), "quartucc");});
test("quarum -> quarum", function() {deepEqual( Stem("quarum"), "quarum");});
test("quasdro -> quasdr", function() {deepEqual( Stem("quasdro"), "quasdr");});
test("quasi -> quas", function() {deepEqual( Stem("quasi"), "quas");});
test("quassù -> quassù", function() {deepEqual( Stem("quassù"), "quassù");});
test("quatti -> quatt", function() {deepEqual( Stem("quatti"), "quatt");});
test("quatto -> quatt", function() {deepEqual( Stem("quatto"), "quatt");});
test("quattordicenne -> quattordicenn", function() {deepEqual( Stem("quattordicenne"), "quattordicenn");});
test("quattordicesima -> quattordicesim", function() {deepEqual( Stem("quattordicesima"), "quattordicesim");});
test("quattordici -> quattord", function() {deepEqual( Stem("quattordici"), "quattord");});
test("quattordicimila -> quattordicimil", function() {deepEqual( Stem("quattordicimila"), "quattordicimil");});
test("quattr -> quattr", function() {deepEqual( Stem("quattr"), "quattr");});
test("quattrinelli -> quattrinell", function() {deepEqual( Stem("quattrinelli"), "quattrinell");});
test("quattrini -> quattrin", function() {deepEqual( Stem("quattrini"), "quattrin");});
test("quattrino -> quattrin", function() {deepEqual( Stem("quattrino"), "quattrin");});
test("quattro -> quattr", function() {deepEqual( Stem("quattro"), "quattr");});
test("quattrocento -> quattrocent", function() {deepEqual( Stem("quattrocento"), "quattrocent");});
test("quattromila -> quattromil", function() {deepEqual( Stem("quattromila"), "quattromil");});
test("quayle -> quayl", function() {deepEqual( Stem("quayle"), "quayl");});
test("que -> que", function() {deepEqual( Stem("que"), "que");});
test("quegl -> quegl", function() {deepEqual( Stem("quegl"), "quegl");});
test("quegli -> quegl", function() {deepEqual( Stem("quegli"), "quegl");});
test("quei -> que", function() {deepEqual( Stem("quei"), "que");});
test("queire -> que", function() {deepEqual( Stem("queire"), "que");});
test("quel -> quel", function() {deepEqual( Stem("quel"), "quel");});
test("quell -> quell", function() {deepEqual( Stem("quell"), "quell");});
test("quella -> quell", function() {deepEqual( Stem("quella"), "quell");});
test("quelle -> quell", function() {deepEqual( Stem("quelle"), "quell");});
test("quelli -> quell", function() {deepEqual( Stem("quelli"), "quell");});
test("quello -> quell", function() {deepEqual( Stem("quello"), "quell");});
test("quellò -> quell", function() {deepEqual( Stem("quellò"), "quell");});
test("querce -> querc", function() {deepEqual( Stem("querce"), "querc");});
test("quercia -> querc", function() {deepEqual( Stem("quercia"), "querc");});
test("quercioli -> querciol", function() {deepEqual( Stem("quercioli"), "querciol");});
test("querela -> querel", function() {deepEqual( Stem("querela"), "querel");});
test("querelarsi -> querel", function() {deepEqual( Stem("querelarsi"), "querel");});
test("querele -> querel", function() {deepEqual( Stem("querele"), "querel");});
test("querelle -> querell", function() {deepEqual( Stem("querelle"), "querell");});
test("quesiti -> ques", function() {deepEqual( Stem("quesiti"), "ques");});
test("quest -> quest", function() {deepEqual( Stem("quest"), "quest");});
test("questa -> quest", function() {deepEqual( Stem("questa"), "quest");});
test("queste -> quest", function() {deepEqual( Stem("queste"), "quest");});
test("questi -> quest", function() {deepEqual( Stem("questi"), "quest");});
test("questionare -> question", function() {deepEqual( Stem("questionare"), "question");});
test("questione -> question", function() {deepEqual( Stem("questione"), "question");});
test("questioni -> question", function() {deepEqual( Stem("questioni"), "question");});
test("questo -> quest", function() {deepEqual( Stem("questo"), "quest");});
test("questore -> questor", function() {deepEqual( Stem("questore"), "questor");});
test("questura -> questur", function() {deepEqual( Stem("questura"), "questur");});
test("questure -> questur", function() {deepEqual( Stem("questure"), "questur");});
test("qui -> qui", function() {deepEqual( Stem("qui"), "qui");});
test("quicktime -> quicktim", function() {deepEqual( Stem("quicktime"), "quicktim");});
test("quid -> quid", function() {deepEqual( Stem("quid"), "quid");});
test("quidem -> quidem", function() {deepEqual( Stem("quidem"), "quidem");});
test("quidquid -> quidquid", function() {deepEqual( Stem("quidquid"), "quidquid");});
test("quieta -> quiet", function() {deepEqual( Stem("quieta"), "quiet");});
test("quietamente -> quiet", function() {deepEqual( Stem("quietamente"), "quiet");});
test("quietatevi -> quietat", function() {deepEqual( Stem("quietatevi"), "quietat");});
test("quiete -> qui", function() {deepEqual( Stem("quiete"), "qui");});
test("quieti -> quiet", function() {deepEqual( Stem("quieti"), "quiet");});
test("quieto -> quiet", function() {deepEqual( Stem("quieto"), "quiet");});
test("quin -> quin", function() {deepEqual( Stem("quin"), "quin");});
test("quindi -> quind", function() {deepEqual( Stem("quindi"), "quind");});
test("quindici -> quindic", function() {deepEqual( Stem("quindici"), "quindic");});
test("quindicina -> quindicin", function() {deepEqual( Stem("quindicina"), "quindicin");});
test("quindicinale -> quindicinal", function() {deepEqual( Stem("quindicinale"), "quindicinal");});
test("quinta -> quint", function() {deepEqual( Stem("quinta"), "quint");});
test("quinte -> quint", function() {deepEqual( Stem("quinte"), "quint");});
test("quinti -> quint", function() {deepEqual( Stem("quinti"), "quint");});
test("quintin -> quintin", function() {deepEqual( Stem("quintin"), "quintin");});
test("quinto -> quint", function() {deepEqual( Stem("quinto"), "quint");});
test("quique -> quiqu", function() {deepEqual( Stem("quique"), "quiqu");});
test("quirinale -> quirinal", function() {deepEqual( Stem("quirinale"), "quirinal");});
test("quis -> quis", function() {deepEqual( Stem("quis"), "quis");});
test("quito -> quit", function() {deepEqual( Stem("quito"), "quit");});
test("quivi -> quiv", function() {deepEqual( Stem("quivi"), "quiv");});
test("quiz -> quiz", function() {deepEqual( Stem("quiz"), "quiz");});
test("qundici -> qundic", function() {deepEqual( Stem("qundici"), "qundic");});
test("quo -> quo", function() {deepEqual( Stem("quo"), "quo");});
test("quod -> quod", function() {deepEqual( Stem("quod"), "quod");});
test("quoque -> quoqu", function() {deepEqual( Stem("quoque"), "quoqu");});
test("quota -> quot", function() {deepEqual( Stem("quota"), "quot");});
test("quotata -> quot", function() {deepEqual( Stem("quotata"), "quot");});
test("quotati -> quot", function() {deepEqual( Stem("quotati"), "quot");});
test("quotato -> quot", function() {deepEqual( Stem("quotato"), "quot");});
test("quotazione -> quotazion", function() {deepEqual( Stem("quotazione"), "quotazion");});
test("quotazioni -> quotazion", function() {deepEqual( Stem("quotazioni"), "quotazion");});
test("quote -> quot", function() {deepEqual( Stem("quote"), "quot");});
test("quotidiana -> quotidian", function() {deepEqual( Stem("quotidiana"), "quotidian");});
test("quotidianamente -> quotidian", function() {deepEqual( Stem("quotidianamente"), "quotidian");});
test("quotidiani -> quotidian", function() {deepEqual( Stem("quotidiani"), "quotidian");});
test("quotidianiche -> quotidian", function() {deepEqual( Stem("quotidianiche"), "quotidian");});
test("quotidiano -> quotid", function() {deepEqual( Stem("quotidiano"), "quotid");});
test("qutub -> qutub", function() {deepEqual( Stem("qutub"), "qutub");});
test("quyivalenti -> quyivalent", function() {deepEqual( Stem("quyivalenti"), "quyivalent");});
test("r -> r", function() {deepEqual( Stem("r"), "r");});
test("ra -> ra", function() {deepEqual( Stem("ra"), "ra");});
test("raadstroem -> raadstroem", function() {deepEqual( Stem("raadstroem"), "raadstroem");});
test("rab -> rab", function() {deepEqual( Stem("rab"), "rab");});
test("rabai -> raba", function() {deepEqual( Stem("rabai"), "raba");});
test("rabbani -> rabban", function() {deepEqual( Stem("rabbani"), "rabban");});
test("rabbattuto -> rabbatt", function() {deepEqual( Stem("rabbattuto"), "rabbatt");});
test("rabbi -> rabb", function() {deepEqual( Stem("rabbi"), "rabb");});
test("rabbia -> rabb", function() {deepEqual( Stem("rabbia"), "rabb");});
test("rabbie -> rabb", function() {deepEqual( Stem("rabbie"), "rabb");});
test("rabbiosa -> rabbios", function() {deepEqual( Stem("rabbiosa"), "rabbios");});
test("rabbiosamente -> rabbios", function() {deepEqual( Stem("rabbiosamente"), "rabbios");});
test("rabbiosi -> rabbios", function() {deepEqual( Stem("rabbiosi"), "rabbios");});
test("rabbioso -> rabbios", function() {deepEqual( Stem("rabbioso"), "rabbios");});
test("rabbrividì -> rabbrivid", function() {deepEqual( Stem("rabbrividì"), "rabbrivid");});
test("rabbrividire -> rabbrivid", function() {deepEqual( Stem("rabbrividire"), "rabbrivid");});
test("rabbrividiti -> rabbrivid", function() {deepEqual( Stem("rabbrividiti"), "rabbrivid");});
test("rabbuffato -> rabbuff", function() {deepEqual( Stem("rabbuffato"), "rabbuff");});
test("rabbuffi -> rabbuff", function() {deepEqual( Stem("rabbuffi"), "rabbuff");});
test("rabbuiando -> rabbui", function() {deepEqual( Stem("rabbuiando"), "rabbui");});
test("rabbuiandosi -> rabbui", function() {deepEqual( Stem("rabbuiandosi"), "rabbui");});
test("rabescate -> rabesc", function() {deepEqual( Stem("rabescate"), "rabesc");});
test("rabin -> rabin", function() {deepEqual( Stem("rabin"), "rabin");});
test("racalbuto -> racalb", function() {deepEqual( Stem("racalbuto"), "racalb");});
test("raccapezzandosi -> raccapezz", function() {deepEqual( Stem("raccapezzandosi"), "raccapezz");});
test("raccapezzar -> raccapezz", function() {deepEqual( Stem("raccapezzar"), "raccapezz");});
test("raccapezzare -> raccapezz", function() {deepEqual( Stem("raccapezzare"), "raccapezz");});
test("raccapezzarsi -> raccapezz", function() {deepEqual( Stem("raccapezzarsi"), "raccapezz");});
test("raccapezzò -> raccapezz", function() {deepEqual( Stem("raccapezzò"), "raccapezz");});
test("raccapriccianti -> raccapricc", function() {deepEqual( Stem("raccapriccianti"), "raccapricc");});
test("raccapriccio -> raccapricc", function() {deepEqual( Stem("raccapriccio"), "raccapricc");});
test("raccattare -> raccatt", function() {deepEqual( Stem("raccattare"), "raccatt");});
test("raccattarle -> raccatt", function() {deepEqual( Stem("raccattarle"), "raccatt");});
test("raccattava -> raccatt", function() {deepEqual( Stem("raccattava"), "raccatt");});
test("racchiuse -> racchius", function() {deepEqual( Stem("racchiuse"), "racchius");});
test("racchiuso -> racchius", function() {deepEqual( Stem("racchiuso"), "racchius");});
test("raccoglie -> raccogl", function() {deepEqual( Stem("raccoglie"), "raccogl");});
test("raccogliendo -> raccogl", function() {deepEqual( Stem("raccogliendo"), "raccogl");});
test("raccoglier -> raccoglier", function() {deepEqual( Stem("raccoglier"), "raccoglier");});
test("raccoglierà -> raccogl", function() {deepEqual( Stem("raccoglierà"), "raccogl");});
test("raccogliere -> raccogl", function() {deepEqual( Stem("raccogliere"), "raccogl");});
test("raccoglierli -> raccogl", function() {deepEqual( Stem("raccoglierli"), "raccogl");});
test("raccoglierlo -> raccogl", function() {deepEqual( Stem("raccoglierlo"), "raccogl");});
test("raccoglieva -> raccogl", function() {deepEqual( Stem("raccoglieva"), "raccogl");});
test("raccoglievan -> raccoglievan", function() {deepEqual( Stem("raccoglievan"), "raccoglievan");});
test("raccoglievano -> raccogl", function() {deepEqual( Stem("raccoglievano"), "raccogl");});
test("raccoglimento -> raccogl", function() {deepEqual( Stem("raccoglimento"), "raccogl");});
test("raccolgono -> raccolg", function() {deepEqual( Stem("raccolgono"), "raccolg");});
test("raccolse -> raccols", function() {deepEqual( Stem("raccolse"), "raccols");});
test("raccolta -> raccolt", function() {deepEqual( Stem("raccolta"), "raccolt");});
test("raccolte -> raccolt", function() {deepEqual( Stem("raccolte"), "raccolt");});
test("raccolti -> raccolt", function() {deepEqual( Stem("raccolti"), "raccolt");});
test("raccolto -> raccolt", function() {deepEqual( Stem("raccolto"), "raccolt");});
test("raccomandandosi -> raccomand", function() {deepEqual( Stem("raccomandandosi"), "raccomand");});
test("raccomandare -> raccomand", function() {deepEqual( Stem("raccomandare"), "raccomand");});
test("raccomandasse -> raccomand", function() {deepEqual( Stem("raccomandasse"), "raccomand");});
test("raccomandata -> raccomand", function() {deepEqual( Stem("raccomandata"), "raccomand");});
test("raccomandate -> raccomand", function() {deepEqual( Stem("raccomandate"), "raccomand");});
test("raccomandatemi -> raccomandatem", function() {deepEqual( Stem("raccomandatemi"), "raccomandatem");});
test("raccomandati -> raccomand", function() {deepEqual( Stem("raccomandati"), "raccomand");});
test("raccomandato -> raccomand", function() {deepEqual( Stem("raccomandato"), "raccomand");});
test("raccomandava -> raccomand", function() {deepEqual( Stem("raccomandava"), "raccomand");});
test("raccomandavano -> raccomand", function() {deepEqual( Stem("raccomandavano"), "raccomand");});
test("raccomandazione -> raccomand", function() {deepEqual( Stem("raccomandazione"), "raccomand");});
test("raccomandazioni -> raccomand", function() {deepEqual( Stem("raccomandazioni"), "raccomand");});
test("raccomanderò -> raccomand", function() {deepEqual( Stem("raccomanderò"), "raccomand");});
test("raccomando -> raccom", function() {deepEqual( Stem("raccomando"), "raccom");});
test("raccomandò -> raccomand", function() {deepEqual( Stem("raccomandò"), "raccomand");});
test("raccomodar -> raccomod", function() {deepEqual( Stem("raccomodar"), "raccomod");});
test("raccomodare -> raccomod", function() {deepEqual( Stem("raccomodare"), "raccomod");});
test("raccomodarla -> raccomod", function() {deepEqual( Stem("raccomodarla"), "raccomod");});
test("raccomodarlo -> raccomod", function() {deepEqual( Stem("raccomodarlo"), "raccomod");});
test("raccomodata -> raccomod", function() {deepEqual( Stem("raccomodata"), "raccomod");});
test("raccomodava -> raccomod", function() {deepEqual( Stem("raccomodava"), "raccomod");});
test("raccomodò -> raccomod", function() {deepEqual( Stem("raccomodò"), "raccomod");});
test("racconta -> raccont", function() {deepEqual( Stem("racconta"), "raccont");});
test("raccontai -> racconta", function() {deepEqual( Stem("raccontai"), "racconta");});
test("raccontan -> raccontan", function() {deepEqual( Stem("raccontan"), "raccontan");});
test("raccontando -> raccont", function() {deepEqual( Stem("raccontando"), "raccont");});
test("raccontano -> raccont", function() {deepEqual( Stem("raccontano"), "raccont");});
test("raccontar -> raccont", function() {deepEqual( Stem("raccontar"), "raccont");});
test("raccontare -> raccont", function() {deepEqual( Stem("raccontare"), "raccont");});
test("raccontargli -> raccont", function() {deepEqual( Stem("raccontargli"), "raccont");});
test("raccontarglieli -> raccont", function() {deepEqual( Stem("raccontarglieli"), "raccont");});
test("raccontargliene -> raccont", function() {deepEqual( Stem("raccontargliene"), "raccont");});
test("raccontarlo -> raccont", function() {deepEqual( Stem("raccontarlo"), "raccont");});
test("raccontarne -> raccont", function() {deepEqual( Stem("raccontarne"), "raccont");});
test("raccontarsi -> raccont", function() {deepEqual( Stem("raccontarsi"), "raccont");});
test("raccontartene -> raccont", function() {deepEqual( Stem("raccontartene"), "raccont");});
test("raccontasse -> raccont", function() {deepEqual( Stem("raccontasse"), "raccont");});
test("raccontata -> raccont", function() {deepEqual( Stem("raccontata"), "raccont");});
test("raccontategli -> raccontategl", function() {deepEqual( Stem("raccontategli"), "raccontategl");});
test("raccontatele -> raccontatel", function() {deepEqual( Stem("raccontatele"), "raccontatel");});
test("raccontatemelo -> raccontatemel", function() {deepEqual( Stem("raccontatemelo"), "raccontatemel");});
test("raccontatemi -> raccontatem", function() {deepEqual( Stem("raccontatemi"), "raccontatem");});
test("raccontati -> raccont", function() {deepEqual( Stem("raccontati"), "raccont");});
test("raccontato -> raccont", function() {deepEqual( Stem("raccontato"), "raccont");});
test("raccontava -> raccont", function() {deepEqual( Stem("raccontava"), "raccont");});
test("raccontavan -> raccontavan", function() {deepEqual( Stem("raccontavan"), "raccontavan");});
test("raccontavano -> raccont", function() {deepEqual( Stem("raccontavano"), "raccont");});
test("racconterebbe -> raccont", function() {deepEqual( Stem("racconterebbe"), "raccont");});
test("racconteremo -> raccont", function() {deepEqual( Stem("racconteremo"), "raccont");});
test("racconterò -> raccont", function() {deepEqual( Stem("racconterò"), "raccont");});
test("racconti -> raccont", function() {deepEqual( Stem("racconti"), "raccont");});
test("raccontiamo -> raccont", function() {deepEqual( Stem("raccontiamo"), "raccont");});
test("racconto -> raccont", function() {deepEqual( Stem("racconto"), "raccont");});
test("raccontò -> raccont", function() {deepEqual( Stem("raccontò"), "raccont");});
test("raccordare -> raccord", function() {deepEqual( Stem("raccordare"), "raccord");});
test("raccorderà -> raccord", function() {deepEqual( Stem("raccorderà"), "raccord");});
test("raccordo -> raccord", function() {deepEqual( Stem("raccordo"), "raccord");});
test("raccostando -> raccost", function() {deepEqual( Stem("raccostando"), "raccost");});
test("raccostò -> raccost", function() {deepEqual( Stem("raccostò"), "raccost");});
test("raccozzò -> raccozz", function() {deepEqual( Stem("raccozzò"), "raccozz");});
test("rachenko -> rachenk", function() {deepEqual( Stem("rachenko"), "rachenk");});
test("rachid -> rachid", function() {deepEqual( Stem("rachid"), "rachid");});
test("rachini -> rachin", function() {deepEqual( Stem("rachini"), "rachin");});
test("racing -> racing", function() {deepEqual( Stem("racing"), "racing");});
test("racquisto -> racquist", function() {deepEqual( Stem("racquisto"), "racquist");});
test("rada -> rad", function() {deepEqual( Stem("rada"), "rad");});
test("radchenko -> radchenk", function() {deepEqual( Stem("radchenko"), "radchenk");});
test("raddirizzar -> raddirizz", function() {deepEqual( Stem("raddirizzar"), "raddirizz");});
test("raddirizzare -> raddirizz", function() {deepEqual( Stem("raddirizzare"), "raddirizz");});
test("raddirizzati -> raddirizz", function() {deepEqual( Stem("raddirizzati"), "raddirizz");});
test("raddolcendo -> raddolc", function() {deepEqual( Stem("raddolcendo"), "raddolc");});
test("raddolcì -> raddolc", function() {deepEqual( Stem("raddolcì"), "raddolc");});
test("raddolcirà -> raddolc", function() {deepEqual( Stem("raddolcirà"), "raddolc");});
test("raddolcisce -> raddolc", function() {deepEqual( Stem("raddolcisce"), "raddolc");});
test("raddolcita -> raddolc", function() {deepEqual( Stem("raddolcita"), "raddolc");});
test("raddolcito -> raddolc", function() {deepEqual( Stem("raddolcito"), "raddolc");});
test("raddoppi -> raddopp", function() {deepEqual( Stem("raddoppi"), "raddopp");});
test("raddoppiar -> raddopp", function() {deepEqual( Stem("raddoppiar"), "raddopp");});
test("raddoppiare -> raddopp", function() {deepEqual( Stem("raddoppiare"), "raddopp");});
test("raddoppiato -> raddopp", function() {deepEqual( Stem("raddoppiato"), "raddopp");});
test("raddoppio -> raddopp", function() {deepEqual( Stem("raddoppio"), "raddopp");});
test("rade -> rad", function() {deepEqual( Stem("rade"), "rad");});
test("radendo -> rad", function() {deepEqual( Stem("radendo"), "rad");});
test("raderle -> rad", function() {deepEqual( Stem("raderle"), "rad");});
test("radezza -> radezz", function() {deepEqual( Stem("radezza"), "radezz");});
test("radhabinod -> radhabinod", function() {deepEqual( Stem("radhabinod"), "radhabinod");});
test("radi -> rad", function() {deepEqual( Stem("radi"), "rad");});
test("radical -> radical", function() {deepEqual( Stem("radical"), "radical");});
test("radicale -> radical", function() {deepEqual( Stem("radicale"), "radical");});
test("radicali -> radical", function() {deepEqual( Stem("radicali"), "radical");});
test("radicamento -> radic", function() {deepEqual( Stem("radicamento"), "radic");});
test("radicata -> radic", function() {deepEqual( Stem("radicata"), "radic");});
test("radicate -> radic", function() {deepEqual( Stem("radicate"), "radic");});
test("radicchielle -> radicchiell", function() {deepEqual( Stem("radicchielle"), "radicchiell");});
test("radice -> radic", function() {deepEqual( Stem("radice"), "radic");});
test("radici -> radic", function() {deepEqual( Stem("radici"), "radic");});
test("radicioni -> radicion", function() {deepEqual( Stem("radicioni"), "radicion");});
test("radio -> rad", function() {deepEqual( Stem("radio"), "rad");});
test("radiò -> rad", function() {deepEqual( Stem("radiò"), "rad");});
test("radiocronaca -> radiocronac", function() {deepEqual( Stem("radiocronaca"), "radiocronac");});
test("radiofonia -> radiofon", function() {deepEqual( Stem("radiofonia"), "radiofon");});
test("radiofonica -> radiofon", function() {deepEqual( Stem("radiofonica"), "radiofon");});
test("radiofonici -> radiofon", function() {deepEqual( Stem("radiofonici"), "radiofon");});
test("radiografia -> radiograf", function() {deepEqual( Stem("radiografia"), "radiograf");});
test("radiografico -> radiograf", function() {deepEqual( Stem("radiografico"), "radiograf");});
test("radiotelevisiva -> radiotelevis", function() {deepEqual( Stem("radiotelevisiva"), "radiotelevis");});
test("radiotelevisive -> radiotelevis", function() {deepEqual( Stem("radiotelevisive"), "radiotelevis");});
test("radiotelevisivi -> radiotelevis", function() {deepEqual( Stem("radiotelevisivi"), "radiotelevis");});
test("radiotelevisivo -> radiotelevis", function() {deepEqual( Stem("radiotelevisivo"), "radiotelevis");});
test("raditelevisive -> raditelevis", function() {deepEqual( Stem("raditelevisive"), "raditelevis");});
test("rado -> rad", function() {deepEqual( Stem("rado"), "rad");});
test("radovan -> radovan", function() {deepEqual( Stem("radovan"), "radovan");});
test("radstrom -> radstrom", function() {deepEqual( Stem("radstrom"), "radstrom");});
test("radunando -> radun", function() {deepEqual( Stem("radunando"), "radun");});
test("radunanza -> radun", function() {deepEqual( Stem("radunanza"), "radun");});
test("radunar -> radun", function() {deepEqual( Stem("radunar"), "radun");});
test("radunarglisi -> radunarglis", function() {deepEqual( Stem("radunarglisi"), "radunarglis");});
test("radunarono -> radun", function() {deepEqual( Stem("radunarono"), "radun");});
test("radunarsi -> radun", function() {deepEqual( Stem("radunarsi"), "radun");});
test("radunarvi -> radun", function() {deepEqual( Stem("radunarvi"), "radun");});
test("radunata -> radun", function() {deepEqual( Stem("radunata"), "radun");});
test("radunate -> radun", function() {deepEqual( Stem("radunate"), "radun");});
test("radunati -> radun", function() {deepEqual( Stem("radunati"), "radun");});
test("radunavano -> radun", function() {deepEqual( Stem("radunavano"), "radun");});
test("raduno -> radun", function() {deepEqual( Stem("raduno"), "radun");});
test("radunò -> radun", function() {deepEqual( Stem("radunò"), "radun");});
test("rafael -> rafael", function() {deepEqual( Stem("rafael"), "rafael");});
test("raffa -> raff", function() {deepEqual( Stem("raffa"), "raff");});
test("raffaele -> raffael", function() {deepEqual( Stem("raffaele"), "raffael");});
test("raffh -> raffh", function() {deepEqual( Stem("raffh"), "raffh");});
test("raffica -> raffic", function() {deepEqual( Stem("raffica"), "raffic");});
test("raffiche -> raffic", function() {deepEqual( Stem("raffiche"), "raffic");});
test("raffigura -> raffigur", function() {deepEqual( Stem("raffigura"), "raffigur");});
test("raffigurante -> raffigur", function() {deepEqual( Stem("raffigurante"), "raffigur");});
test("raffigurar -> raffigur", function() {deepEqual( Stem("raffigurar"), "raffigur");});
test("raffigurata -> raffigur", function() {deepEqual( Stem("raffigurata"), "raffigur");});
test("raffigurato -> raffigur", function() {deepEqual( Stem("raffigurato"), "raffigur");});
test("raffigurazione -> raffigur", function() {deepEqual( Stem("raffigurazione"), "raffigur");});
test("raffin -> raffin", function() {deepEqual( Stem("raffin"), "raffin");});
test("raffinate -> raffin", function() {deepEqual( Stem("raffinate"), "raffin");});
test("raffinatori -> raffin", function() {deepEqual( Stem("raffinatori"), "raffin");});
test("raffinerie -> raffiner", function() {deepEqual( Stem("raffinerie"), "raffiner");});
test("rafforzamento -> rafforz", function() {deepEqual( Stem("rafforzamento"), "rafforz");});
test("rafforzando -> rafforz", function() {deepEqual( Stem("rafforzando"), "rafforz");});
test("rafforzare -> rafforz", function() {deepEqual( Stem("rafforzare"), "rafforz");});
test("rafforzati -> rafforz", function() {deepEqual( Stem("rafforzati"), "rafforz");});
test("rafforzato -> rafforz", function() {deepEqual( Stem("rafforzato"), "rafforz");});
test("rafforzerebbe -> rafforz", function() {deepEqual( Stem("rafforzerebbe"), "rafforz");});
test("raffreddamento -> raffredd", function() {deepEqual( Stem("raffreddamento"), "raffredd");});
test("raffreddore -> raffreddor", function() {deepEqual( Stem("raffreddore"), "raffreddor");});
test("rafsanjani -> rafsanjan", function() {deepEqual( Stem("rafsanjani"), "rafsanjan");});
test("ragazza -> ragazz", function() {deepEqual( Stem("ragazza"), "ragazz");});
test("ragazzacci -> ragazzacc", function() {deepEqual( Stem("ragazzacci"), "ragazzacc");});
test("ragazzaccio -> ragazzacc", function() {deepEqual( Stem("ragazzaccio"), "ragazzacc");});
test("ragazzate -> ragazz", function() {deepEqual( Stem("ragazzate"), "ragazz");});
test("ragazze -> ragazz", function() {deepEqual( Stem("ragazze"), "ragazz");});
test("ragazzetti -> ragazzett", function() {deepEqual( Stem("ragazzetti"), "ragazzett");});
test("ragazzetto -> ragazzett", function() {deepEqual( Stem("ragazzetto"), "ragazzett");});
test("ragazzi -> ragazz", function() {deepEqual( Stem("ragazzi"), "ragazz");});
test("ragazzia -> ragazz", function() {deepEqual( Stem("ragazzia"), "ragazz");});
test("ragazzina -> ragazzin", function() {deepEqual( Stem("ragazzina"), "ragazzin");});
test("ragazzini -> ragazzin", function() {deepEqual( Stem("ragazzini"), "ragazzin");});
test("ragazzo -> ragazz", function() {deepEqual( Stem("ragazzo"), "ragazz");});
test("ragazzone -> ragazzon", function() {deepEqual( Stem("ragazzone"), "ragazzon");});
test("ragazzotto -> ragazzott", function() {deepEqual( Stem("ragazzotto"), "ragazzott");});
test("raggi -> ragg", function() {deepEqual( Stem("raggi"), "ragg");});
test("raggiante -> raggiant", function() {deepEqual( Stem("raggiante"), "raggiant");});
test("raggio -> ragg", function() {deepEqual( Stem("raggio"), "ragg");});
test("raggiri -> raggir", function() {deepEqual( Stem("raggiri"), "raggir");});
test("raggiunga -> raggiung", function() {deepEqual( Stem("raggiunga"), "raggiung");});
test("raggiunge -> raggiung", function() {deepEqual( Stem("raggiunge"), "raggiung");});
test("raggiungendo -> raggiung", function() {deepEqual( Stem("raggiungendo"), "raggiung");});
test("raggiunger -> raggiunger", function() {deepEqual( Stem("raggiunger"), "raggiunger");});
test("raggiungerà -> raggiung", function() {deepEqual( Stem("raggiungerà"), "raggiung");});
test("raggiungere -> raggiung", function() {deepEqual( Stem("raggiungere"), "raggiung");});
test("raggiungerli -> raggiung", function() {deepEqual( Stem("raggiungerli"), "raggiung");});
test("raggiungerlo -> raggiung", function() {deepEqual( Stem("raggiungerlo"), "raggiung");});
test("raggiungono -> raggiung", function() {deepEqual( Stem("raggiungono"), "raggiung");});
test("raggiunse -> raggiuns", function() {deepEqual( Stem("raggiunse"), "raggiuns");});
test("raggiunta -> raggiunt", function() {deepEqual( Stem("raggiunta"), "raggiunt");});
test("raggiunte -> raggiunt", function() {deepEqual( Stem("raggiunte"), "raggiunt");});
test("raggiunti -> raggiunt", function() {deepEqual( Stem("raggiunti"), "raggiunt");});
test("raggiunto -> raggiunt", function() {deepEqual( Stem("raggiunto"), "raggiunt");});
test("raggomitolata -> raggomitol", function() {deepEqual( Stem("raggomitolata"), "raggomitol");});
test("raggrinzando -> raggrinz", function() {deepEqual( Stem("raggrinzando"), "raggrinz");});
test("raggrinzarle -> raggrinz", function() {deepEqual( Stem("raggrinzarle"), "raggrinz");});
test("raggrinzata -> raggrinz", function() {deepEqual( Stem("raggrinzata"), "raggrinz");});
test("raggrinzato -> raggrinz", function() {deepEqual( Stem("raggrinzato"), "raggrinz");});
test("raggrinzava -> raggrinz", function() {deepEqual( Stem("raggrinzava"), "raggrinz");});
test("raggrinzò -> raggrinz", function() {deepEqual( Stem("raggrinzò"), "raggrinz");});
test("raggrumate -> raggrum", function() {deepEqual( Stem("raggrumate"), "raggrum");});
test("raggruppamenti -> raggrupp", function() {deepEqual( Stem("raggruppamenti"), "raggrupp");});
test("raggruppamento -> raggrupp", function() {deepEqual( Stem("raggruppamento"), "raggrupp");});
test("ragguagli -> ragguagl", function() {deepEqual( Stem("ragguagli"), "ragguagl");});
test("ragguagliata -> ragguagl", function() {deepEqual( Stem("ragguagliata"), "ragguagl");});
test("ragguaglio -> ragguagl", function() {deepEqual( Stem("ragguaglio"), "ragguagl");});
test("ragion -> ragion", function() {deepEqual( Stem("ragion"), "ragion");});
test("ragionamenti -> ragion", function() {deepEqual( Stem("ragionamenti"), "ragion");});
test("ragionamento -> ragion", function() {deepEqual( Stem("ragionamento"), "ragion");});
test("ragionando -> ragion", function() {deepEqual( Stem("ragionando"), "ragion");});
test("ragionar -> ragion", function() {deepEqual( Stem("ragionar"), "ragion");});
test("ragionare -> ragion", function() {deepEqual( Stem("ragionare"), "ragion");});
test("ragionava -> ragion", function() {deepEqual( Stem("ragionava"), "ragion");});
test("ragione -> ragion", function() {deepEqual( Stem("ragione"), "ragion");});
test("ragioneria -> ragioner", function() {deepEqual( Stem("ragioneria"), "ragioner");});
test("ragionevole -> ragionevol", function() {deepEqual( Stem("ragionevole"), "ragionevol");});
test("ragionevolezza -> ragionevolezz", function() {deepEqual( Stem("ragionevolezza"), "ragionevolezz");});
test("ragionevoli -> ragionevol", function() {deepEqual( Stem("ragionevoli"), "ragionevol");});
test("ragionevolmente -> ragionevol", function() {deepEqual( Stem("ragionevolmente"), "ragionevol");});
test("ragioni -> ragion", function() {deepEqual( Stem("ragioni"), "ragion");});
test("ragioniere -> ragion", function() {deepEqual( Stem("ragioniere"), "ragion");});
test("ragnateli -> ragnatel", function() {deepEqual( Stem("ragnateli"), "ragnatel");});
test("ragno -> ragn", function() {deepEqual( Stem("ragno"), "ragn");});
test("ragnotti -> ragnott", function() {deepEqual( Stem("ragnotti"), "ragnott");});
test("ragusa -> ragus", function() {deepEqual( Stem("ragusa"), "ragus");});
test("rai -> rai", function() {deepEqual( Stem("rai"), "rai");});
test("raico -> raic", function() {deepEqual( Stem("raico"), "raic");});
test("raidue -> raidu", function() {deepEqual( Stem("raidue"), "raidu");});
test("raimondo -> raimond", function() {deepEqual( Stem("raimondo"), "raimond");});
test("raiola -> raiol", function() {deepEqual( Stem("raiola"), "raiol");});
test("rais -> rais", function() {deepEqual( Stem("rais"), "rais");});
test("raitre -> raitr", function() {deepEqual( Stem("raitre"), "raitr");});
test("raiuno -> raiun", function() {deepEqual( Stem("raiuno"), "raiun");});
test("rajasthan -> rajasthan", function() {deepEqual( Stem("rajasthan"), "rajasthan");});
test("rajko -> rajk", function() {deepEqual( Stem("rajko"), "rajk");});
test("rakkarndee -> rakkarnde", function() {deepEqual( Stem("rakkarndee"), "rakkarnde");});
test("rallegra -> rallegr", function() {deepEqual( Stem("rallegra"), "rallegr");});
test("rallegrarsi -> rallegr", function() {deepEqual( Stem("rallegrarsi"), "rallegr");});
test("rallegratevi -> rallegrat", function() {deepEqual( Stem("rallegratevi"), "rallegrat");});
test("rallegrati -> rallegr", function() {deepEqual( Stem("rallegrati"), "rallegr");});
test("rallegrato -> rallegr", function() {deepEqual( Stem("rallegrato"), "rallegr");});
test("rallegrava -> rallegr", function() {deepEqual( Stem("rallegrava"), "rallegr");});
test("rallegravano -> rallegr", function() {deepEqual( Stem("rallegravano"), "rallegr");});
test("rallegriamo -> rallegr", function() {deepEqual( Stem("rallegriamo"), "rallegr");});
test("rallegro -> rallegr", function() {deepEqual( Stem("rallegro"), "rallegr");});
test("rallegrò -> rallegr", function() {deepEqual( Stem("rallegrò"), "rallegr");});
test("rallenta -> rallent", function() {deepEqual( Stem("rallenta"), "rallent");});
test("rallentamento -> rallent", function() {deepEqual( Stem("rallentamento"), "rallent");});
test("rallentando -> rallent", function() {deepEqual( Stem("rallentando"), "rallent");});
test("rallentare -> rallent", function() {deepEqual( Stem("rallentare"), "rallent");});
test("rallentarono -> rallent", function() {deepEqual( Stem("rallentarono"), "rallent");});
test("rallentarsi -> rallent", function() {deepEqual( Stem("rallentarsi"), "rallent");});
test("rallentavano -> rallent", function() {deepEqual( Stem("rallentavano"), "rallent");});
test("rallentò -> rallent", function() {deepEqual( Stem("rallentò"), "rallent");});
test("rally -> rally", function() {deepEqual( Stem("rally"), "rally");});
test("ram -> ram", function() {deepEqual( Stem("ram"), "ram");});
test("ramadan -> ramadan", function() {deepEqual( Stem("ramadan"), "ramadan");});
test("rambaldo -> rambald", function() {deepEqual( Stem("rambaldo"), "rambald");});
test("rambaudi -> rambaud", function() {deepEqual( Stem("rambaudi"), "rambaud");});
test("rametti -> ramett", function() {deepEqual( Stem("rametti"), "ramett");});
test("rami -> ram", function() {deepEqual( Stem("rami"), "ram");});
test("ramificano -> ramific", function() {deepEqual( Stem("ramificano"), "ramific");});
test("raminga -> raming", function() {deepEqual( Stem("raminga"), "raming");});
test("ramingo -> raming", function() {deepEqual( Stem("ramingo"), "raming");});
test("ramione -> ramion", function() {deepEqual( Stem("ramione"), "ramion");});
test("ramiro -> ramir", function() {deepEqual( Stem("ramiro"), "ramir");});
test("rammarica -> rammar", function() {deepEqual( Stem("rammarica"), "rammar");});
test("rammaricarsi -> rammaric", function() {deepEqual( Stem("rammaricarsi"), "rammaric");});
test("rammaricato -> rammaric", function() {deepEqual( Stem("rammaricato"), "rammaric");});
test("rammaricava -> rammaric", function() {deepEqual( Stem("rammaricava"), "rammaric");});
test("rammarichìo -> rammarichì", function() {deepEqual( Stem("rammarichìo"), "rammarichì");});
test("rammarico -> rammar", function() {deepEqual( Stem("rammarico"), "rammar");});
test("rammatico -> rammat", function() {deepEqual( Stem("rammatico"), "rammat");});
test("rammentandosi -> ramment", function() {deepEqual( Stem("rammentandosi"), "ramment");});
test("rammentar -> ramment", function() {deepEqual( Stem("rammentar"), "ramment");});
test("rammentarsi -> ramment", function() {deepEqual( Stem("rammentarsi"), "ramment");});
test("rammentasse -> ramment", function() {deepEqual( Stem("rammentasse"), "ramment");});
test("rammentate -> ramment", function() {deepEqual( Stem("rammentate"), "ramment");});
test("rammentava -> ramment", function() {deepEqual( Stem("rammentava"), "ramment");});
test("rammentavan -> rammentavan", function() {deepEqual( Stem("rammentavan"), "rammentavan");});
test("rammentavano -> ramment", function() {deepEqual( Stem("rammentavano"), "ramment");});
test("rammenti -> ramment", function() {deepEqual( Stem("rammenti"), "ramment");});
test("rammentò -> ramment", function() {deepEqual( Stem("rammentò"), "ramment");});
test("ramo -> ram", function() {deepEqual( Stem("ramo"), "ram");});
test("ramon -> ramon", function() {deepEqual( Stem("ramon"), "ramon");});
test("rampolli -> rampoll", function() {deepEqual( Stem("rampolli"), "rampoll");});
test("rampulla -> rampull", function() {deepEqual( Stem("rampulla"), "rampull");});
test("ramzi -> ramz", function() {deepEqual( Stem("ramzi"), "ramz");});
test("rancore -> rancor", function() {deepEqual( Stem("rancore"), "rancor");});
test("rancori -> rancor", function() {deepEqual( Stem("rancori"), "rancor");});
test("randello -> randell", function() {deepEqual( Stem("randello"), "randell");});
test("randy -> randy", function() {deepEqual( Stem("randy"), "randy");});
test("rangers -> rangers", function() {deepEqual( Stem("rangers"), "rangers");});
test("ranieri -> ranier", function() {deepEqual( Stem("ranieri"), "ranier");});
test("rannicchiarsi -> rannicc", function() {deepEqual( Stem("rannicchiarsi"), "rannicc");});
test("rannicchiata -> rannicc", function() {deepEqual( Stem("rannicchiata"), "rannicc");});
test("rannicchiati -> rannicc", function() {deepEqual( Stem("rannicchiati"), "rannicc");});
test("rannicchiato -> rannicc", function() {deepEqual( Stem("rannicchiato"), "rannicc");});
test("rannicchiò -> rannicc", function() {deepEqual( Stem("rannicchiò"), "rannicc");});
test("rannuvolata -> rannuvol", function() {deepEqual( Stem("rannuvolata"), "rannuvol");});
test("rannuvolato -> rannuvol", function() {deepEqual( Stem("rannuvolato"), "rannuvol");});
test("rao -> rao", function() {deepEqual( Stem("rao"), "rao");});
test("rap -> rap", function() {deepEqual( Stem("rap"), "rap");});
test("rapatè -> rapat", function() {deepEqual( Stem("rapatè"), "rapat");});
test("rapid -> rapid", function() {deepEqual( Stem("rapid"), "rapid");});
test("rapida -> rapid", function() {deepEqual( Stem("rapida"), "rapid");});
test("rapidamente -> rapid", function() {deepEqual( Stem("rapidamente"), "rapid");});
test("rapidi -> rapid", function() {deepEqual( Stem("rapidi"), "rapid");});
test("rapidissima -> rapidissim", function() {deepEqual( Stem("rapidissima"), "rapidissim");});
test("rapidità -> rapid", function() {deepEqual( Stem("rapidità"), "rapid");});
test("rapido -> rapid", function() {deepEqual( Stem("rapido"), "rapid");});
test("rapimenti -> rap", function() {deepEqual( Stem("rapimenti"), "rap");});
test("rapimento -> rap", function() {deepEqual( Stem("rapimento"), "rap");});
test("rapina -> rapin", function() {deepEqual( Stem("rapina"), "rapin");});
test("rapinate -> rapin", function() {deepEqual( Stem("rapinate"), "rapin");});
test("rapinatori -> rapin", function() {deepEqual( Stem("rapinatori"), "rapin");});
test("rapine -> rapin", function() {deepEqual( Stem("rapine"), "rapin");});
test("rapisce -> rap", function() {deepEqual( Stem("rapisce"), "rap");});
test("rapiscono -> rap", function() {deepEqual( Stem("rapiscono"), "rap");});
test("rapita -> rap", function() {deepEqual( Stem("rapita"), "rap");});
test("rapite -> rap", function() {deepEqual( Stem("rapite"), "rap");});
test("rapito -> rap", function() {deepEqual( Stem("rapito"), "rap");});
test("rapitori -> rapitor", function() {deepEqual( Stem("rapitori"), "rapitor");});
test("rapportare -> rapport", function() {deepEqual( Stem("rapportare"), "rapport");});
test("rapportarono -> rapport", function() {deepEqual( Stem("rapportarono"), "rapport");});
test("rapportata -> rapport", function() {deepEqual( Stem("rapportata"), "rapport");});
test("rapportato -> rapport", function() {deepEqual( Stem("rapportato"), "rapport");});
test("rapporti -> rapport", function() {deepEqual( Stem("rapporti"), "rapport");});
test("rapporto -> rapport", function() {deepEqual( Stem("rapporto"), "rapport");});
test("rapportò -> rapport", function() {deepEqual( Stem("rapportò"), "rapport");});
test("rappporti -> rappport", function() {deepEqual( Stem("rappporti"), "rappport");});
test("rappresaglia -> rappresagl", function() {deepEqual( Stem("rappresaglia"), "rappresagl");});
test("rappresenta -> rappresent", function() {deepEqual( Stem("rappresenta"), "rappresent");});
test("rappresentando -> rappresent", function() {deepEqual( Stem("rappresentando"), "rappresent");});
test("rappresentano -> rappresent", function() {deepEqual( Stem("rappresentano"), "rappresent");});
test("rappresentante -> rappresent", function() {deepEqual( Stem("rappresentante"), "rappresent");});
test("rappresentanti -> rappresent", function() {deepEqual( Stem("rappresentanti"), "rappresent");});
test("rappresentanza -> rappresent", function() {deepEqual( Stem("rappresentanza"), "rappresent");});
test("rappresentanze -> rappresent", function() {deepEqual( Stem("rappresentanze"), "rappresent");});
test("rappresentar -> rappresent", function() {deepEqual( Stem("rappresentar"), "rappresent");});
test("rappresentare -> rappresent", function() {deepEqual( Stem("rappresentare"), "rappresent");});
test("rappresentarle -> rappresent", function() {deepEqual( Stem("rappresentarle"), "rappresent");});
test("rappresentassero -> rappresent", function() {deepEqual( Stem("rappresentassero"), "rappresent");});
test("rappresentata -> rappresent", function() {deepEqual( Stem("rappresentata"), "rappresent");});
test("rappresentate -> rappresent", function() {deepEqual( Stem("rappresentate"), "rappresent");});
test("rappresentati -> rappresent", function() {deepEqual( Stem("rappresentati"), "rappresent");});
test("rappresentative -> rappresent", function() {deepEqual( Stem("rappresentative"), "rappresent");});
test("rappresentativo -> rappresent", function() {deepEqual( Stem("rappresentativo"), "rappresent");});
test("rappresentato -> rappresent", function() {deepEqual( Stem("rappresentato"), "rappresent");});
test("rappresentava -> rappresent", function() {deepEqual( Stem("rappresentava"), "rappresent");});
test("rappresentavan -> rappresentavan", function() {deepEqual( Stem("rappresentavan"), "rappresentavan");});
test("rappresentazione -> rappresent", function() {deepEqual( Stem("rappresentazione"), "rappresent");});
test("rappresenti -> rappresent", function() {deepEqual( Stem("rappresenti"), "rappresent");});
test("rappresento -> rappresent", function() {deepEqual( Stem("rappresento"), "rappresent");});
test("rappresentò -> rappresent", function() {deepEqual( Stem("rappresentò"), "rappresent");});
test("rappresntanti -> rappresnt", function() {deepEqual( Stem("rappresntanti"), "rappresnt");});
test("raprpesenta -> raprpesent", function() {deepEqual( Stem("raprpesenta"), "raprpesent");});
test("rapto -> rapt", function() {deepEqual( Stem("rapto"), "rapt");});
test("raptus -> raptus", function() {deepEqual( Stem("raptus"), "raptus");});
test("rara -> rar", function() {deepEqual( Stem("rara"), "rar");});
test("rare -> rar", function() {deepEqual( Stem("rare"), "rar");});
test("rari -> rar", function() {deepEqual( Stem("rari"), "rar");});
test("rarità -> rarit", function() {deepEqual( Stem("rarità"), "rarit");});
test("raro -> rar", function() {deepEqual( Stem("raro"), "rar");});
test("ras -> ras", function() {deepEqual( Stem("ras"), "ras");});
test("rasa -> ras", function() {deepEqual( Stem("rasa"), "ras");});
test("rasentando -> rasent", function() {deepEqual( Stem("rasentando"), "rasent");});
test("rasentare -> rasent", function() {deepEqual( Stem("rasentare"), "rasent");});
test("rasente -> rasent", function() {deepEqual( Stem("rasente"), "rasent");});
test("rashid -> rashid", function() {deepEqual( Stem("rashid"), "rashid");});
test("rasi -> ras", function() {deepEqual( Stem("rasi"), "ras");});
test("rasim -> rasim", function() {deepEqual( Stem("rasim"), "rasim");});
test("raso -> ras", function() {deepEqual( Stem("raso"), "ras");});
test("rasoterra -> rasoterr", function() {deepEqual( Stem("rasoterra"), "rasoterr");});
test("rasotterra -> rasotterr", function() {deepEqual( Stem("rasotterra"), "rasotterr");});
test("rasputin -> rasputin", function() {deepEqual( Stem("rasputin"), "rasputin");});
test("rassegna -> rassegn", function() {deepEqual( Stem("rassegna"), "rassegn");});
test("rassegnarci -> rassegn", function() {deepEqual( Stem("rassegnarci"), "rassegn");});
test("rassegnarsi -> rassegn", function() {deepEqual( Stem("rassegnarsi"), "rassegn");});
test("rassegnasse -> rassegn", function() {deepEqual( Stem("rassegnasse"), "rassegn");});
test("rassegnata -> rassegn", function() {deepEqual( Stem("rassegnata"), "rassegn");});
test("rassegnate -> rassegn", function() {deepEqual( Stem("rassegnate"), "rassegn");});
test("rassegnatevi -> rassegnat", function() {deepEqual( Stem("rassegnatevi"), "rassegnat");});
test("rassegnati -> rassegn", function() {deepEqual( Stem("rassegnati"), "rassegn");});
test("rassegnato -> rassegn", function() {deepEqual( Stem("rassegnato"), "rassegn");});
test("rassegnazione -> rassegn", function() {deepEqual( Stem("rassegnazione"), "rassegn");});
test("rassegnerò -> rassegn", function() {deepEqual( Stem("rassegnerò"), "rassegn");});
test("rassegno -> rassegn", function() {deepEqual( Stem("rassegno"), "rassegn");});
test("rasserenamentò -> rasserenament", function() {deepEqual( Stem("rasserenamentò"), "rasserenament");});
test("rasserenato -> rasseren", function() {deepEqual( Stem("rasserenato"), "rasseren");});
test("rassettar -> rassett", function() {deepEqual( Stem("rassettar"), "rassett");});
test("rassicurando -> rassicur", function() {deepEqual( Stem("rassicurando"), "rassicur");});
test("rassicurandolo -> rassicur", function() {deepEqual( Stem("rassicurandolo"), "rassicur");});
test("rassicurante -> rassicur", function() {deepEqual( Stem("rassicurante"), "rassicur");});
test("rassicuranti -> rassicur", function() {deepEqual( Stem("rassicuranti"), "rassicur");});
test("rassicurare -> rassicur", function() {deepEqual( Stem("rassicurare"), "rassicur");});
test("rassicurarlo -> rassicur", function() {deepEqual( Stem("rassicurarlo"), "rassicur");});
test("rassicurato -> rassicur", function() {deepEqual( Stem("rassicurato"), "rassicur");});
test("rassicurava -> rassicur", function() {deepEqual( Stem("rassicurava"), "rassicur");});
test("rassomigliavan -> rassomigliavan", function() {deepEqual( Stem("rassomigliavan"), "rassomigliavan");});
test("rastelli -> rastell", function() {deepEqual( Stem("rastelli"), "rastell");});
test("rastrelli -> rastrell", function() {deepEqual( Stem("rastrelli"), "rastrell");});
test("rata -> rat", function() {deepEqual( Stem("rata"), "rat");});
test("ratajczak -> ratajczak", function() {deepEqual( Stem("ratajczak"), "ratajczak");});
test("ratè -> rat", function() {deepEqual( Stem("ratè"), "rat");});
test("ratifica -> ratif", function() {deepEqual( Stem("ratifica"), "ratif");});
test("ratificata -> ratific", function() {deepEqual( Stem("ratificata"), "ratific");});
test("ratificato -> ratific", function() {deepEqual( Stem("ratificato"), "ratific");});
test("ratificazione -> ratif", function() {deepEqual( Stem("ratificazione"), "ratif");});
test("ratificherà -> ratific", function() {deepEqual( Stem("ratificherà"), "ratific");});
test("rating -> rating", function() {deepEqual( Stem("rating"), "rating");});
test("ratio -> rat", function() {deepEqual( Stem("ratio"), "rat");});
test("ratiò -> rat", function() {deepEqual( Stem("ratiò"), "rat");});
test("rattenendo -> ratten", function() {deepEqual( Stem("rattenendo"), "ratten");});
test("rattenere -> ratten", function() {deepEqual( Stem("rattenere"), "ratten");});
test("rattenerne -> ratten", function() {deepEqual( Stem("rattenerne"), "ratten");});
test("rattenuta -> ratten", function() {deepEqual( Stem("rattenuta"), "ratten");});
test("rattenute -> ratten", function() {deepEqual( Stem("rattenute"), "ratten");});
test("rattenuto -> ratten", function() {deepEqual( Stem("rattenuto"), "ratten");});
test("ratti -> ratt", function() {deepEqual( Stem("ratti"), "ratt");});
test("rattoppare -> rattopp", function() {deepEqual( Stem("rattoppare"), "rattopp");});
test("rattopparle -> rattopp", function() {deepEqual( Stem("rattopparle"), "rattopp");});
test("rattrista -> rattrist", function() {deepEqual( Stem("rattrista"), "rattrist");});
test("rattristato -> rattrist", function() {deepEqual( Stem("rattristato"), "rattrist");});
test("rattristava -> rattrist", function() {deepEqual( Stem("rattristava"), "rattrist");});
test("rauti -> raut", function() {deepEqual( Stem("rauti"), "raut");});
test("ravanelli -> ravanell", function() {deepEqual( Stem("ravanelli"), "ravanell");});
test("ravasi -> ravas", function() {deepEqual( Stem("ravasi"), "ravas");});
test("raveggioli -> raveggiol", function() {deepEqual( Stem("raveggioli"), "raveggiol");});
test("ravenna -> ravenn", function() {deepEqual( Stem("ravenna"), "ravenn");});
test("ravennate -> ravenn", function() {deepEqual( Stem("ravennate"), "ravenn");});
test("ravveda -> ravved", function() {deepEqual( Stem("ravveda"), "ravved");});
test("ravvedere -> ravved", function() {deepEqual( Stem("ravvedere"), "ravved");});
test("ravvedeva -> ravved", function() {deepEqual( Stem("ravvedeva"), "ravved");});
test("ravvedimento -> ravved", function() {deepEqual( Stem("ravvedimento"), "ravved");});
test("ravveduta -> ravved", function() {deepEqual( Stem("ravveduta"), "ravved");});
test("ravviare -> ravv", function() {deepEqual( Stem("ravviare"), "ravv");});
test("ravviarla -> ravv", function() {deepEqual( Stem("ravviarla"), "ravv");});
test("ravvicinata -> ravvicin", function() {deepEqual( Stem("ravvicinata"), "ravvicin");});
test("ravvicinato -> ravvicin", function() {deepEqual( Stem("ravvicinato"), "ravvicin");});
test("ravvicinava -> ravvicin", function() {deepEqual( Stem("ravvicinava"), "ravvicin");});
test("ravvicinavano -> ravvicin", function() {deepEqual( Stem("ravvicinavano"), "ravvicin");});
test("ravvicinerebbero -> ravvicin", function() {deepEqual( Stem("ravvicinerebbero"), "ravvicin");});
test("ravvisarsi -> ravvis", function() {deepEqual( Stem("ravvisarsi"), "ravvis");});
test("ravvisato -> ravvis", function() {deepEqual( Stem("ravvisato"), "ravvis");});
test("ravvivasse -> ravviv", function() {deepEqual( Stem("ravvivasse"), "ravviv");});
test("ravvolgevan -> ravvolgevan", function() {deepEqual( Stem("ravvolgevan"), "ravvolgevan");});
test("ravvolse -> ravvols", function() {deepEqual( Stem("ravvolse"), "ravvols");});
test("ravvolte -> ravvolt", function() {deepEqual( Stem("ravvolte"), "ravvolt");});
test("ravvolto -> ravvolt", function() {deepEqual( Stem("ravvolto"), "ravvolt");});
test("raymond -> raymond", function() {deepEqual( Stem("raymond"), "raymond");});
test("rayton -> rayton", function() {deepEqual( Stem("rayton"), "rayton");});
test("razionalizzare -> razionalizz", function() {deepEqual( Stem("razionalizzare"), "razionalizz");});
test("razza -> razz", function() {deepEqual( Stem("razza"), "razz");});
test("razziali -> razzial", function() {deepEqual( Stem("razziali"), "razzial");});
test("razzismo -> razzism", function() {deepEqual( Stem("razzismo"), "razzism");});
test("razzisti -> razzist", function() {deepEqual( Stem("razzisti"), "razzist");});
test("razzo -> razz", function() {deepEqual( Stem("razzo"), "razz");});
test("rb -> rb", function() {deepEqual( Stem("rb"), "rb");});
test("rc -> rc", function() {deepEqual( Stem("rc"), "rc");});
test("rdb -> rdb", function() {deepEqual( Stem("rdb"), "rdb");});
test("rdt -> rdt", function() {deepEqual( Stem("rdt"), "rdt");});
test("re -> re", function() {deepEqual( Stem("re"), "re");});
test("rea -> rea", function() {deepEqual( Stem("rea"), "rea");});
test("reagan -> reagan", function() {deepEqual( Stem("reagan"), "reagan");});
test("reagì -> reag", function() {deepEqual( Stem("reagì"), "reag");});
test("reagire -> reag", function() {deepEqual( Stem("reagire"), "reag");});
test("reagisce -> reag", function() {deepEqual( Stem("reagisce"), "reag");});
test("reagiscono -> reag", function() {deepEqual( Stem("reagiscono"), "reag");});
test("reagito -> reag", function() {deepEqual( Stem("reagito"), "reag");});
test("real -> real", function() {deepEqual( Stem("real"), "real");});
test("reale -> real", function() {deepEqual( Stem("reale"), "real");});
test("realè -> real", function() {deepEqual( Stem("realè"), "real");});
test("reali -> real", function() {deepEqual( Stem("reali"), "real");});
test("realistico -> realist", function() {deepEqual( Stem("realistico"), "realist");});
test("realizza -> realizz", function() {deepEqual( Stem("realizza"), "realizz");});
test("realizzando -> realizz", function() {deepEqual( Stem("realizzando"), "realizz");});
test("realizzano -> realizz", function() {deepEqual( Stem("realizzano"), "realizz");});
test("realizzare -> realizz", function() {deepEqual( Stem("realizzare"), "realizz");});
test("realizzarli -> realizz", function() {deepEqual( Stem("realizzarli"), "realizz");});
test("realizzarsi -> realizz", function() {deepEqual( Stem("realizzarsi"), "realizz");});
test("realizzassero -> realizz", function() {deepEqual( Stem("realizzassero"), "realizz");});
test("realizzata -> realizz", function() {deepEqual( Stem("realizzata"), "realizz");});
test("realizzate -> realizz", function() {deepEqual( Stem("realizzate"), "realizz");});
test("realizzati -> realizz", function() {deepEqual( Stem("realizzati"), "realizz");});
test("realizzativa -> realizz", function() {deepEqual( Stem("realizzativa"), "realizz");});
test("realizzato -> realizz", function() {deepEqual( Stem("realizzato"), "realizz");});
test("realizzazione -> realizz", function() {deepEqual( Stem("realizzazione"), "realizz");});
test("realizzerà -> realizz", function() {deepEqual( Stem("realizzerà"), "realizz");});
test("realizzi -> realizz", function() {deepEqual( Stem("realizzi"), "realizz");});
test("realizzino -> realizzin", function() {deepEqual( Stem("realizzino"), "realizzin");});
test("realmente -> realment", function() {deepEqual( Stem("realmente"), "realment");});
test("realtà -> realt", function() {deepEqual( Stem("realtà"), "realt");});
test("reati -> reat", function() {deepEqual( Stem("reati"), "reat");});
test("reato -> reat", function() {deepEqual( Stem("reato"), "reat");});
test("reattore -> reattor", function() {deepEqual( Stem("reattore"), "reattor");});
test("reattori -> reattor", function() {deepEqual( Stem("reattori"), "reattor");});
test("reazionaria -> reazionar", function() {deepEqual( Stem("reazionaria"), "reazionar");});
test("reazione -> reazion", function() {deepEqual( Stem("reazione"), "reazion");});
test("reazioni -> reazion", function() {deepEqual( Stem("reazioni"), "reazion");});
test("rebbekka -> rebbekk", function() {deepEqual( Stem("rebbekka"), "rebbekk");});
test("rebecchi -> rebecc", function() {deepEqual( Stem("rebecchi"), "rebecc");});
test("rebecchini -> rebecchin", function() {deepEqual( Stem("rebecchini"), "rebecchin");});
test("rebekka -> rebekk", function() {deepEqual( Stem("rebekka"), "rebekk");});
test("rebellin -> rebellin", function() {deepEqual( Stem("rebellin"), "rebellin");});
test("rec -> rec", function() {deepEqual( Stem("rec"), "rec");});
test("reca -> rec", function() {deepEqual( Stem("reca"), "rec");});
test("recandosi -> rec", function() {deepEqual( Stem("recandosi"), "rec");});
test("recano -> rec", function() {deepEqual( Stem("recano"), "rec");});
test("recante -> recant", function() {deepEqual( Stem("recante"), "recant");});
test("recapitare -> recapit", function() {deepEqual( Stem("recapitare"), "recapit");});
test("recapitarla -> recapit", function() {deepEqual( Stem("recapitarla"), "recapit");});
test("recapito -> recap", function() {deepEqual( Stem("recapito"), "recap");});
test("recarsi -> rec", function() {deepEqual( Stem("recarsi"), "rec");});
test("recasse -> rec", function() {deepEqual( Stem("recasse"), "rec");});
test("recati -> rec", function() {deepEqual( Stem("recati"), "rec");});
test("recato -> rec", function() {deepEqual( Stem("recato"), "rec");});
test("recava -> rec", function() {deepEqual( Stem("recava"), "rec");});
test("recchia -> recc", function() {deepEqual( Stem("recchia"), "recc");});
test("recente -> recent", function() {deepEqual( Stem("recente"), "recent");});
test("recentemente -> recent", function() {deepEqual( Stem("recentemente"), "recent");});
test("recenti -> recent", function() {deepEqual( Stem("recenti"), "recent");});
test("recentissime -> recentissim", function() {deepEqual( Stem("recentissime"), "recentissim");});
test("recentissimo -> recentissim", function() {deepEqual( Stem("recentissimo"), "recentissim");});
test("recepisce -> recep", function() {deepEqual( Stem("recepisce"), "recep");});
test("recessione -> recession", function() {deepEqual( Stem("recessione"), "recession");});
test("recessiva -> recess", function() {deepEqual( Stem("recessiva"), "recess");});
test("recherà -> rech", function() {deepEqual( Stem("recherà"), "rech");});
test("recidiva -> recid", function() {deepEqual( Stem("recidiva"), "recid");});
test("recinto -> recint", function() {deepEqual( Stem("recinto"), "recint");});
test("recinzione -> recinzion", function() {deepEqual( Stem("recinzione"), "recinzion");});
test("recinzioni -> recinzion", function() {deepEqual( Stem("recinzioni"), "recinzion");});
test("reciproca -> reciproc", function() {deepEqual( Stem("reciproca"), "reciproc");});
test("reciprocamente -> reciproc", function() {deepEqual( Stem("reciprocamente"), "reciproc");});
test("reciproche -> reciproc", function() {deepEqual( Stem("reciproche"), "reciproc");});
test("reciproci -> reciproc", function() {deepEqual( Stem("reciproci"), "reciproc");});
test("recita -> rec", function() {deepEqual( Stem("recita"), "rec");});
test("recitar -> recit", function() {deepEqual( Stem("recitar"), "recit");});
test("recitarle -> recit", function() {deepEqual( Stem("recitarle"), "recit");});
test("recitarono -> recit", function() {deepEqual( Stem("recitarono"), "recit");});
test("recitata -> recit", function() {deepEqual( Stem("recitata"), "recit");});
test("recitato -> recit", function() {deepEqual( Stem("recitato"), "recit");});
test("recitava -> recit", function() {deepEqual( Stem("recitava"), "recit");});
test("recitò -> recit", function() {deepEqual( Stem("recitò"), "recit");});
test("reclamare -> reclam", function() {deepEqual( Stem("reclamare"), "reclam");});
test("reclamo -> reclam", function() {deepEqual( Stem("reclamo"), "reclam");});
test("reclusione -> reclusion", function() {deepEqual( Stem("reclusione"), "reclusion");});
test("reclutamento -> reclut", function() {deepEqual( Stem("reclutamento"), "reclut");});
test("reconditi -> recond", function() {deepEqual( Stem("reconditi"), "recond");});
test("reconocer -> reconocer", function() {deepEqual( Stem("reconocer"), "reconocer");});
test("record -> record", function() {deepEqual( Stem("record"), "record");});
test("recordati -> record", function() {deepEqual( Stem("recordati"), "record");});
test("recordo -> record", function() {deepEqual( Stem("recordo"), "record");});
test("recrimina -> recrimin", function() {deepEqual( Stem("recrimina"), "recrimin");});
test("recriminare -> recrimin", function() {deepEqual( Stem("recriminare"), "recrimin");});
test("recriminazioni -> recrimin", function() {deepEqual( Stem("recriminazioni"), "recrimin");});
test("recrimini -> recrimin", function() {deepEqual( Stem("recrimini"), "recrimin");});
test("recrudescenzà -> recrudescenz", function() {deepEqual( Stem("recrudescenzà"), "recrudescenz");});
test("recupera -> recuper", function() {deepEqual( Stem("recupera"), "recuper");});
test("recuperando -> recuper", function() {deepEqual( Stem("recuperando"), "recuper");});
test("recuperare -> recuper", function() {deepEqual( Stem("recuperare"), "recuper");});
test("recuperata -> recuper", function() {deepEqual( Stem("recuperata"), "recuper");});
test("recuperate -> recuper", function() {deepEqual( Stem("recuperate"), "recuper");});
test("recuperato -> recuper", function() {deepEqual( Stem("recuperato"), "recuper");});
test("recupereranno -> recuper", function() {deepEqual( Stem("recupereranno"), "recuper");});
test("recupero -> recuper", function() {deepEqual( Stem("recupero"), "recuper");});
test("red -> red", function() {deepEqual( Stem("red"), "red");});
test("redatti -> redatt", function() {deepEqual( Stem("redatti"), "redatt");});
test("redattore -> redattor", function() {deepEqual( Stem("redattore"), "redattor");});
test("redattori -> redattor", function() {deepEqual( Stem("redattori"), "redattor");});
test("redazionali -> redazional", function() {deepEqual( Stem("redazionali"), "redazional");});
test("redazione -> redazion", function() {deepEqual( Stem("redazione"), "redazion");});
test("redd -> redd", function() {deepEqual( Stem("redd"), "redd");});
test("redditi -> redd", function() {deepEqual( Stem("redditi"), "redd");});
test("redditività -> reddit", function() {deepEqual( Stem("redditività"), "reddit");});
test("redditizio -> redditiz", function() {deepEqual( Stem("redditizio"), "redditiz");});
test("reddito -> redd", function() {deepEqual( Stem("reddito"), "redd");});
test("redditosette -> redditosett", function() {deepEqual( Stem("redditosette"), "redditosett");});
test("redenzione -> redenzion", function() {deepEqual( Stem("redenzione"), "redenzion");});
test("redesa -> redes", function() {deepEqual( Stem("redesa"), "redes");});
test("redigono -> redig", function() {deepEqual( Stem("redigono"), "redig");});
test("redimibile -> redim", function() {deepEqual( Stem("redimibile"), "redim");});
test("redini -> redin", function() {deepEqual( Stem("redini"), "redin");});
test("redistribuzione -> redistribu", function() {deepEqual( Stem("redistribuzione"), "redistribu");});
test("reduce -> reduc", function() {deepEqual( Stem("reduce"), "reduc");});
test("reduci -> reduc", function() {deepEqual( Stem("reduci"), "reduc");});
test("referatis -> referatis", function() {deepEqual( Stem("referatis"), "referatis");});
test("referendum -> referendum", function() {deepEqual( Stem("referendum"), "referendum");});
test("referenti -> referent", function() {deepEqual( Stem("referenti"), "referent");});
test("refezione -> refezion", function() {deepEqual( Stem("refezione"), "refezion");});
test("reforma -> reform", function() {deepEqual( Stem("reforma"), "reform");});
test("refrigerio -> refriger", function() {deepEqual( Stem("refrigerio"), "refriger");});
test("refrontolo -> refrontol", function() {deepEqual( Stem("refrontolo"), "refrontol");});
test("regala -> regal", function() {deepEqual( Stem("regala"), "regal");});
test("regalando -> regal", function() {deepEqual( Stem("regalando"), "regal");});
test("regalar -> regal", function() {deepEqual( Stem("regalar"), "regal");});
test("regalare -> regal", function() {deepEqual( Stem("regalare"), "regal");});
test("regalata -> regal", function() {deepEqual( Stem("regalata"), "regal");});
test("regalato -> regal", function() {deepEqual( Stem("regalato"), "regal");});
test("regali -> regal", function() {deepEqual( Stem("regali"), "regal");});
test("regalia -> regal", function() {deepEqual( Stem("regalia"), "regal");});
test("regalo -> regal", function() {deepEqual( Stem("regalo"), "regal");});
test("regge -> regg", function() {deepEqual( Stem("regge"), "regg");});
test("reggendolo -> regg", function() {deepEqual( Stem("reggendolo"), "regg");});
test("regger -> regger", function() {deepEqual( Stem("regger"), "regger");});
test("reggere -> regg", function() {deepEqual( Stem("reggere"), "regg");});
test("reggersi -> regg", function() {deepEqual( Stem("reggersi"), "regg");});
test("reggesse -> reggess", function() {deepEqual( Stem("reggesse"), "reggess");});
test("reggeva -> regg", function() {deepEqual( Stem("reggeva"), "regg");});
test("reggiana -> reggian", function() {deepEqual( Stem("reggiana"), "reggian");});
test("reggiano -> regg", function() {deepEqual( Stem("reggiano"), "regg");});
test("reggimenti -> regg", function() {deepEqual( Stem("reggimenti"), "regg");});
test("reggimento -> regg", function() {deepEqual( Stem("reggimento"), "regg");});
test("reggina -> reggin", function() {deepEqual( Stem("reggina"), "reggin");});
test("reggio -> regg", function() {deepEqual( Stem("reggio"), "regg");});
test("regia -> reg", function() {deepEqual( Stem("regia"), "reg");});
test("regii -> reg", function() {deepEqual( Stem("regii"), "reg");});
test("regime -> regim", function() {deepEqual( Stem("regime"), "regim");});
test("regimi -> regim", function() {deepEqual( Stem("regimi"), "regim");});
test("regina -> regin", function() {deepEqual( Stem("regina"), "regin");});
test("reginald -> reginald", function() {deepEqual( Stem("reginald"), "reginald");});
test("regine -> regin", function() {deepEqual( Stem("regine"), "regin");});
test("reginetta -> reginett", function() {deepEqual( Stem("reginetta"), "reginett");});
test("regio -> reg", function() {deepEqual( Stem("regio"), "reg");});
test("regional -> regional", function() {deepEqual( Stem("regional"), "regional");});
test("regionale -> regional", function() {deepEqual( Stem("regionale"), "regional");});
test("regionali -> regional", function() {deepEqual( Stem("regionali"), "regional");});
test("regionalista -> regional", function() {deepEqual( Stem("regionalista"), "regional");});
test("regione -> region", function() {deepEqual( Stem("regione"), "region");});
test("regioni -> region", function() {deepEqual( Stem("regioni"), "region");});
test("regisseure -> regisseur", function() {deepEqual( Stem("regisseure"), "regisseur");});
test("regissuere -> regissu", function() {deepEqual( Stem("regissuere"), "regissu");});
test("regista -> regist", function() {deepEqual( Stem("regista"), "regist");});
test("registi -> regist", function() {deepEqual( Stem("registi"), "regist");});
test("registra -> registr", function() {deepEqual( Stem("registra"), "registr");});
test("registrano -> registr", function() {deepEqual( Stem("registrano"), "registr");});
test("registrare -> registr", function() {deepEqual( Stem("registrare"), "registr");});
test("registrata -> registr", function() {deepEqual( Stem("registrata"), "registr");});
test("registrate -> registr", function() {deepEqual( Stem("registrate"), "registr");});
test("registrati -> registr", function() {deepEqual( Stem("registrati"), "registr");});
test("registratisi -> registratis", function() {deepEqual( Stem("registratisi"), "registratis");});
test("registrato -> registr", function() {deepEqual( Stem("registrato"), "registr");});
test("registrava -> registr", function() {deepEqual( Stem("registrava"), "registr");});
test("registrazione -> registr", function() {deepEqual( Stem("registrazione"), "registr");});
test("registrazioni -> registr", function() {deepEqual( Stem("registrazioni"), "registr");});
test("registri -> registr", function() {deepEqual( Stem("registri"), "registr");});
test("registro -> registr", function() {deepEqual( Stem("registro"), "registr");});
test("regna -> regn", function() {deepEqual( Stem("regna"), "regn");});
test("regnante -> regnant", function() {deepEqual( Stem("regnante"), "regnant");});
test("regnar -> regn", function() {deepEqual( Stem("regnar"), "regn");});
test("regnare -> regn", function() {deepEqual( Stem("regnare"), "regn");});
test("regnasse -> regn", function() {deepEqual( Stem("regnasse"), "regn");});
test("regnato -> regn", function() {deepEqual( Stem("regnato"), "regn");});
test("regnava -> regn", function() {deepEqual( Stem("regnava"), "regn");});
test("regni -> regn", function() {deepEqual( Stem("regni"), "regn");});
test("regno -> regn", function() {deepEqual( Stem("regno"), "regn");});
test("regola -> regol", function() {deepEqual( Stem("regola"), "regol");});
test("regolamentare -> regolament", function() {deepEqual( Stem("regolamentare"), "regolament");});
test("regolamentazione -> regolament", function() {deepEqual( Stem("regolamentazione"), "regolament");});
test("regolamenti -> regol", function() {deepEqual( Stem("regolamenti"), "regol");});
test("regolamento -> regol", function() {deepEqual( Stem("regolamento"), "regol");});
test("regolano -> regol", function() {deepEqual( Stem("regolano"), "regol");});
test("regolare -> regol", function() {deepEqual( Stem("regolare"), "regol");});
test("regolari -> regolar", function() {deepEqual( Stem("regolari"), "regolar");});
test("regolarità -> regolar", function() {deepEqual( Stem("regolarità"), "regolar");});
test("regolarmente -> regolar", function() {deepEqual( Stem("regolarmente"), "regolar");});
test("regolarsi -> regol", function() {deepEqual( Stem("regolarsi"), "regol");});
test("regolata -> regol", function() {deepEqual( Stem("regolata"), "regol");});
test("regolati -> regol", function() {deepEqual( Stem("regolati"), "regol");});
test("regolato -> regol", function() {deepEqual( Stem("regolato"), "regol");});
test("regolatore -> regol", function() {deepEqual( Stem("regolatore"), "regol");});
test("regolatori -> regol", function() {deepEqual( Stem("regolatori"), "regol");});
test("regolava -> regol", function() {deepEqual( Stem("regolava"), "regol");});
test("regolavan -> regolavan", function() {deepEqual( Stem("regolavan"), "regolavan");});
test("regolavano -> regol", function() {deepEqual( Stem("regolavano"), "regol");});
test("regolazione -> regol", function() {deepEqual( Stem("regolazione"), "regol");});
test("regole -> regol", function() {deepEqual( Stem("regole"), "regol");});
test("regresso -> regress", function() {deepEqual( Stem("regresso"), "regress");});
test("regulation -> regulation", function() {deepEqual( Stem("regulation"), "regulation");});
test("rei -> rei", function() {deepEqual( Stem("rei"), "rei");});
test("reigoni -> reigon", function() {deepEqual( Stem("reigoni"), "reigon");});
test("reimbarco -> reimbarc", function() {deepEqual( Stem("reimbarco"), "reimbarc");});
test("reimpiego -> reimpieg", function() {deepEqual( Stem("reimpiego"), "reimpieg");});
test("reincarnazione -> reincarn", function() {deepEqual( Stem("reincarnazione"), "reincarn");});
test("reinelt -> reinelt", function() {deepEqual( Stem("reinelt"), "reinelt");});
test("reinterpeta -> reinterpet", function() {deepEqual( Stem("reinterpeta"), "reinterpet");});
test("reinterpretata -> reinterpret", function() {deepEqual( Stem("reinterpretata"), "reinterpret");});
test("reinterpretato -> reinterpret", function() {deepEqual( Stem("reinterpretato"), "reinterpret");});
test("reintrodurre -> reintrodurr", function() {deepEqual( Stem("reintrodurre"), "reintrodurr");});
test("reitera -> reiter", function() {deepEqual( Stem("reitera"), "reiter");});
test("reiterato -> reiter", function() {deepEqual( Stem("reiterato"), "reiter");});
test("reiterazione -> reiter", function() {deepEqual( Stem("reiterazione"), "reiter");});
test("reitz -> reitz", function() {deepEqual( Stem("reitz"), "reitz");});
test("rejna -> rejn", function() {deepEqual( Stem("rejna"), "rejn");});
test("relatione -> relation", function() {deepEqual( Stem("relatione"), "relation");});
test("relations -> relations", function() {deepEqual( Stem("relations"), "relations");});
test("relativa -> relat", function() {deepEqual( Stem("relativa"), "relat");});
test("relativamente -> relat", function() {deepEqual( Stem("relativamente"), "relat");});
test("relative -> relat", function() {deepEqual( Stem("relative"), "relat");});
test("relativi -> relat", function() {deepEqual( Stem("relativi"), "relat");});
test("relativismo -> relativ", function() {deepEqual( Stem("relativismo"), "relativ");});
test("relativo -> relat", function() {deepEqual( Stem("relativo"), "relat");});
test("relato -> rel", function() {deepEqual( Stem("relato"), "rel");});
test("relatore -> relator", function() {deepEqual( Stem("relatore"), "relator");});
test("relatori -> relator", function() {deepEqual( Stem("relatori"), "relator");});
test("relazione -> relazion", function() {deepEqual( Stem("relazione"), "relazion");});
test("relazioni -> relazion", function() {deepEqual( Stem("relazioni"), "relazion");});
test("relegati -> releg", function() {deepEqual( Stem("relegati"), "releg");});
test("relegatione -> relegation", function() {deepEqual( Stem("relegatione"), "relegation");});
test("religione -> religion", function() {deepEqual( Stem("religione"), "religion");});
test("religioni -> religion", function() {deepEqual( Stem("religioni"), "religion");});
test("religiosa -> relig", function() {deepEqual( Stem("religiosa"), "relig");});
test("religiose -> relig", function() {deepEqual( Stem("religiose"), "relig");});
test("religiosi -> relig", function() {deepEqual( Stem("religiosi"), "relig");});
test("religioso -> relig", function() {deepEqual( Stem("religioso"), "relig");});
test("reliquia -> reliqu", function() {deepEqual( Stem("reliquia"), "reliqu");});
test("reliquie -> reliqu", function() {deepEqual( Stem("reliquie"), "reliqu");});
test("relitti -> relitt", function() {deepEqual( Stem("relitti"), "relitt");});
test("relizane -> relizan", function() {deepEqual( Stem("relizane"), "relizan");});
test("rem -> rem", function() {deepEqual( Stem("rem"), "rem");});
test("remando -> rem", function() {deepEqual( Stem("remando"), "rem");});
test("remi -> rem", function() {deepEqual( Stem("remi"), "rem");});
test("remigio -> remig", function() {deepEqual( Stem("remigio"), "remig");});
test("remissione -> remission", function() {deepEqual( Stem("remissione"), "remission");});
test("remo -> rem", function() {deepEqual( Stem("remo"), "rem");});
test("remora -> remor", function() {deepEqual( Stem("remora"), "remor");});
test("remote -> remot", function() {deepEqual( Stem("remote"), "remot");});
test("renali -> renal", function() {deepEqual( Stem("renali"), "renal");});
test("renano -> ren", function() {deepEqual( Stem("renano"), "ren");});
test("renato -> ren", function() {deepEqual( Stem("renato"), "ren");});
test("renault -> renault", function() {deepEqual( Stem("renault"), "renault");});
test("renda -> rend", function() {deepEqual( Stem("renda"), "rend");});
test("rende -> rend", function() {deepEqual( Stem("rende"), "rend");});
test("rendé -> rend", function() {deepEqual( Stem("rendé"), "rend");});
test("rendendo -> rend", function() {deepEqual( Stem("rendendo"), "rend");});
test("rendendogli -> rend", function() {deepEqual( Stem("rendendogli"), "rend");});
test("rendendoli -> rend", function() {deepEqual( Stem("rendendoli"), "rend");});
test("render -> render", function() {deepEqual( Stem("render"), "render");});
test("renderà -> rend", function() {deepEqual( Stem("renderà"), "rend");});
test("renderai -> rend", function() {deepEqual( Stem("renderai"), "rend");});
test("renderci -> rend", function() {deepEqual( Stem("renderci"), "rend");});
test("rendere -> rend", function() {deepEqual( Stem("rendere"), "rend");});
test("renderebbe -> rend", function() {deepEqual( Stem("renderebbe"), "rend");});
test("rendergli -> rend", function() {deepEqual( Stem("rendergli"), "rend");});
test("renderla -> rend", function() {deepEqual( Stem("renderla"), "rend");});
test("renderle -> rend", function() {deepEqual( Stem("renderle"), "rend");});
test("renderli -> rend", function() {deepEqual( Stem("renderli"), "rend");});
test("renderlo -> rend", function() {deepEqual( Stem("renderlo"), "rend");});
test("rendermi -> rend", function() {deepEqual( Stem("rendermi"), "rend");});
test("renderò -> rend", function() {deepEqual( Stem("renderò"), "rend");});
test("rendersi -> rend", function() {deepEqual( Stem("rendersi"), "rend");});
test("rendervi -> rend", function() {deepEqual( Stem("rendervi"), "rend");});
test("rendetelo -> rendetel", function() {deepEqual( Stem("rendetelo"), "rendetel");});
test("rendette -> rendett", function() {deepEqual( Stem("rendette"), "rendett");});
test("rendeva -> rend", function() {deepEqual( Stem("rendeva"), "rend");});
test("rendevan -> rendevan", function() {deepEqual( Stem("rendevan"), "rendevan");});
test("rendevano -> rend", function() {deepEqual( Stem("rendevano"), "rend");});
test("rendi -> rend", function() {deepEqual( Stem("rendi"), "rend");});
test("rendiam -> rendiam", function() {deepEqual( Stem("rendiam"), "rendiam");});
test("rendiamo -> rend", function() {deepEqual( Stem("rendiamo"), "rend");});
test("rendicredit -> rendicredit", function() {deepEqual( Stem("rendicredit"), "rendicredit");});
test("rendifit -> rendifit", function() {deepEqual( Stem("rendifit"), "rendifit");});
test("rendifondo -> rendifond", function() {deepEqual( Stem("rendifondo"), "rendifond");});
test("rendimenti -> rend", function() {deepEqual( Stem("rendimenti"), "rend");});
test("rendimento -> rend", function() {deepEqual( Stem("rendimento"), "rend");});
test("rendiras -> rendiras", function() {deepEqual( Stem("rendiras"), "rendiras");});
test("rendita -> rend", function() {deepEqual( Stem("rendita"), "rend");});
test("rendite -> rend", function() {deepEqual( Stem("rendite"), "rend");});
test("rendono -> rend", function() {deepEqual( Stem("rendono"), "rend");});
test("rene -> ren", function() {deepEqual( Stem("rene"), "ren");});
test("renè -> ren", function() {deepEqual( Stem("renè"), "ren");});
test("renitenti -> renitent", function() {deepEqual( Stem("renitenti"), "renitent");});
test("rennes -> rennes", function() {deepEqual( Stem("rennes"), "rennes");});
test("reno -> ren", function() {deepEqual( Stem("reno"), "ren");});
test("renzo -> renz", function() {deepEqual( Stem("renzo"), "renz");});
test("reo -> reo", function() {deepEqual( Stem("reo"), "reo");});
test("reogresso -> reogress", function() {deepEqual( Stem("reogresso"), "reogress");});
test("rep -> rep", function() {deepEqual( Stem("rep"), "rep");});
test("reparti -> rep", function() {deepEqual( Stem("reparti"), "rep");});
test("reparto -> repart", function() {deepEqual( Stem("reparto"), "repart");});
test("repentaglio -> repentagl", function() {deepEqual( Stem("repentaglio"), "repentagl");});
test("repentina -> repentin", function() {deepEqual( Stem("repentina"), "repentin");});
test("repentine -> repentin", function() {deepEqual( Stem("repentine"), "repentin");});
test("repentino -> repentin", function() {deepEqual( Stem("repentino"), "repentin");});
test("reperire -> reper", function() {deepEqual( Stem("reperire"), "reper");});
test("repertum -> repertum", function() {deepEqual( Stem("repertum"), "repertum");});
test("replica -> replic", function() {deepEqual( Stem("replica"), "replic");});
test("replicando -> replic", function() {deepEqual( Stem("replicando"), "replic");});
test("replicar -> replic", function() {deepEqual( Stem("replicar"), "replic");});
test("replicare -> replic", function() {deepEqual( Stem("replicare"), "replic");});
test("replicatamente -> replicat", function() {deepEqual( Stem("replicatamente"), "replicat");});
test("replicato -> replic", function() {deepEqual( Stem("replicato"), "replic");});
test("replicava -> replic", function() {deepEqual( Stem("replicava"), "replic");});
test("replicò -> replic", function() {deepEqual( Stem("replicò"), "replic");});
test("reponsabili -> repons", function() {deepEqual( Stem("reponsabili"), "repons");});
test("reporter -> reporter", function() {deepEqual( Stem("reporter"), "reporter");});
test("repressione -> repression", function() {deepEqual( Stem("repressione"), "repression");});
test("repressiva -> repress", function() {deepEqual( Stem("repressiva"), "repress");});
test("repressivi -> repress", function() {deepEqual( Stem("repressivi"), "repress");});
test("represso -> repress", function() {deepEqual( Stem("represso"), "repress");});
test("reprimere -> reprim", function() {deepEqual( Stem("reprimere"), "reprim");});
test("repubblica -> repubbl", function() {deepEqual( Stem("repubblica"), "repubbl");});
test("repubblicà -> repubblic", function() {deepEqual( Stem("repubblicà"), "repubblic");});
test("repubblicana -> repubblican", function() {deepEqual( Stem("repubblicana"), "repubblican");});
test("repubblicani -> repubblican", function() {deepEqual( Stem("repubblicani"), "repubblican");});
test("repubblicano -> repubblic", function() {deepEqual( Stem("repubblicano"), "repubblic");});
test("repubbliche -> repubbl", function() {deepEqual( Stem("repubbliche"), "repubbl");});
test("reputazione -> reput", function() {deepEqual( Stem("reputazione"), "reput");});
test("requie -> requ", function() {deepEqual( Stem("requie"), "requ");});
test("requisiti -> requis", function() {deepEqual( Stem("requisiti"), "requis");});
test("requisitoria -> requisitor", function() {deepEqual( Stem("requisitoria"), "requisitor");});
test("rerum -> rerum", function() {deepEqual( Stem("rerum"), "rerum");});
test("resa -> res", function() {deepEqual( Stem("resa"), "res");});
test("rese -> res", function() {deepEqual( Stem("rese"), "res");});
test("resegone -> resegon", function() {deepEqual( Stem("resegone"), "resegon");});
test("resero -> reser", function() {deepEqual( Stem("resero"), "reser");});
test("reserve -> reserv", function() {deepEqual( Stem("reserve"), "reserv");});
test("reservè -> reserv", function() {deepEqual( Stem("reservè"), "reserv");});
test("reshetnikova -> reshetnikov", function() {deepEqual( Stem("reshetnikova"), "reshetnikov");});
test("resi -> res", function() {deepEqual( Stem("resi"), "res");});
test("residente -> resident", function() {deepEqual( Stem("residente"), "resident");});
test("residenti -> resident", function() {deepEqual( Stem("residenti"), "resident");});
test("residenziale -> residenzial", function() {deepEqual( Stem("residenziale"), "residenzial");});
test("residui -> residu", function() {deepEqual( Stem("residui"), "residu");});
test("residuo -> residu", function() {deepEqual( Stem("residuo"), "residu");});
test("resistenti -> resistent", function() {deepEqual( Stem("resistenti"), "resistent");});
test("resistenza -> resistent", function() {deepEqual( Stem("resistenza"), "resistent");});
test("resistenze -> resistent", function() {deepEqual( Stem("resistenze"), "resistent");});
test("resistere -> resist", function() {deepEqual( Stem("resistere"), "resist");});
test("resistergli -> resist", function() {deepEqual( Stem("resistergli"), "resist");});
test("resistette -> resistett", function() {deepEqual( Stem("resistette"), "resistett");});
test("resistevano -> resist", function() {deepEqual( Stem("resistevano"), "resist");});
test("resisti -> resist", function() {deepEqual( Stem("resisti"), "resist");});
test("resistire -> resist", function() {deepEqual( Stem("resistire"), "resist");});
test("resistito -> resist", function() {deepEqual( Stem("resistito"), "resist");});
test("reso -> res", function() {deepEqual( Stem("reso"), "res");});
test("resoconto -> resocont", function() {deepEqual( Stem("resoconto"), "resocont");});
test("resogli -> resogl", function() {deepEqual( Stem("resogli"), "resogl");});
test("resosi -> resos", function() {deepEqual( Stem("resosi"), "resos");});
test("respinge -> resping", function() {deepEqual( Stem("respinge"), "resping");});
test("respingendoli -> resping", function() {deepEqual( Stem("respingendoli"), "resping");});
test("respinger -> respinger", function() {deepEqual( Stem("respinger"), "respinger");});
test("respingere -> resping", function() {deepEqual( Stem("respingere"), "resping");});
test("respinsero -> respinser", function() {deepEqual( Stem("respinsero"), "respinser");});
test("respinta -> respint", function() {deepEqual( Stem("respinta"), "respint");});
test("respinti -> respint", function() {deepEqual( Stem("respinti"), "respint");});
test("respinto -> respint", function() {deepEqual( Stem("respinto"), "respint");});
test("respira -> respir", function() {deepEqual( Stem("respira"), "respir");});
test("respirare -> respir", function() {deepEqual( Stem("respirare"), "respir");});
test("respirarono -> respir", function() {deepEqual( Stem("respirarono"), "respir");});
test("respirata -> respir", function() {deepEqual( Stem("respirata"), "respir");});
test("respiratoria -> respirator", function() {deepEqual( Stem("respiratoria"), "respirator");});
test("respirava -> respir", function() {deepEqual( Stem("respirava"), "respir");});
test("respirazione -> respir", function() {deepEqual( Stem("respirazione"), "respir");});
test("respiri -> respir", function() {deepEqual( Stem("respiri"), "respir");});
test("respiro -> respir", function() {deepEqual( Stem("respiro"), "respir");});
test("respirò -> resp", function() {deepEqual( Stem("respirò"), "resp");});
test("respironi -> respiron", function() {deepEqual( Stem("respironi"), "respiron");});
test("responsabile -> respons", function() {deepEqual( Stem("responsabile"), "respons");});
test("responsabili -> respons", function() {deepEqual( Stem("responsabili"), "respons");});
test("responsabilità -> respons", function() {deepEqual( Stem("responsabilità"), "respons");});
test("responsabilmente -> responsabil", function() {deepEqual( Stem("responsabilmente"), "responsabil");});
test("responsbili -> responsbil", function() {deepEqual( Stem("responsbili"), "responsbil");});
test("responso -> respons", function() {deepEqual( Stem("responso"), "respons");});
test("resposabili -> respos", function() {deepEqual( Stem("resposabili"), "respos");});
test("ressa -> ress", function() {deepEqual( Stem("ressa"), "ress");});
test("resta -> rest", function() {deepEqual( Stem("resta"), "rest");});
test("restando -> rest", function() {deepEqual( Stem("restando"), "rest");});
test("restandogli -> rest", function() {deepEqual( Stem("restandogli"), "rest");});
test("restano -> rest", function() {deepEqual( Stem("restano"), "rest");});
test("restante -> restant", function() {deepEqual( Stem("restante"), "restant");});
test("restanti -> restant", function() {deepEqual( Stem("restanti"), "restant");});
test("restar -> rest", function() {deepEqual( Stem("restar"), "rest");});
test("restare -> rest", function() {deepEqual( Stem("restare"), "rest");});
test("restaron -> restaron", function() {deepEqual( Stem("restaron"), "restaron");});
test("restarsene -> rest", function() {deepEqual( Stem("restarsene"), "rest");});
test("restassero -> rest", function() {deepEqual( Stem("restassero"), "rest");});
test("restata -> rest", function() {deepEqual( Stem("restata"), "rest");});
test("restate -> rest", function() {deepEqual( Stem("restate"), "rest");});
test("restati -> rest", function() {deepEqual( Stem("restati"), "rest");});
test("restato -> rest", function() {deepEqual( Stem("restato"), "rest");});
test("restaurare -> restaur", function() {deepEqual( Stem("restaurare"), "restaur");});
test("restaurato -> restaur", function() {deepEqual( Stem("restaurato"), "restaur");});
test("restauro -> restaur", function() {deepEqual( Stem("restauro"), "restaur");});
test("restava -> rest", function() {deepEqual( Stem("restava"), "rest");});
test("restavano -> rest", function() {deepEqual( Stem("restavano"), "rest");});
test("resterà -> rest", function() {deepEqual( Stem("resterà"), "rest");});
test("resterebbe -> rest", function() {deepEqual( Stem("resterebbe"), "rest");});
test("resterebbero -> rest", function() {deepEqual( Stem("resterebbero"), "rest");});
test("resterei -> rest", function() {deepEqual( Stem("resterei"), "rest");});
test("resteremo -> rest", function() {deepEqual( Stem("resteremo"), "rest");});
test("resti -> rest", function() {deepEqual( Stem("resti"), "rest");});
test("restiam -> restiam", function() {deepEqual( Stem("restiam"), "restiam");});
test("resticciolo -> resticciol", function() {deepEqual( Stem("resticciolo"), "resticciol");});
test("restino -> restin", function() {deepEqual( Stem("restino"), "restin");});
test("restìo -> restì", function() {deepEqual( Stem("restìo"), "restì");});
test("restituendola -> restitu", function() {deepEqual( Stem("restituendola"), "restitu");});
test("restituì -> restitu", function() {deepEqual( Stem("restituì"), "restitu");});
test("restituir -> restitu", function() {deepEqual( Stem("restituir"), "restitu");});
test("restituire -> restitu", function() {deepEqual( Stem("restituire"), "restitu");});
test("restituirglielo -> restitu", function() {deepEqual( Stem("restituirglielo"), "restitu");});
test("restituita -> restitu", function() {deepEqual( Stem("restituita"), "restitu");});
test("restituite -> restitu", function() {deepEqual( Stem("restituite"), "restitu");});
test("restituiti -> restitu", function() {deepEqual( Stem("restituiti"), "restitu");});
test("restituito -> restitu", function() {deepEqual( Stem("restituito"), "restitu");});
test("restitutione -> restitution", function() {deepEqual( Stem("restitutione"), "restitution");});
test("restituzione -> restitu", function() {deepEqual( Stem("restituzione"), "restitu");});
test("resto -> rest", function() {deepEqual( Stem("resto"), "rest");});
test("restò -> rest", function() {deepEqual( Stem("restò"), "rest");});
test("restrittivo -> restritt", function() {deepEqual( Stem("restrittivo"), "restritt");});
test("restrizioni -> restrizion", function() {deepEqual( Stem("restrizioni"), "restrizion");});
test("restyling -> restyling", function() {deepEqual( Stem("restyling"), "restyling");});
test("resurrezione -> resurrezion", function() {deepEqual( Stem("resurrezione"), "resurrezion");});
test("resuscitare -> resuscit", function() {deepEqual( Stem("resuscitare"), "resuscit");});
test("resuscitati -> resuscit", function() {deepEqual( Stem("resuscitati"), "resuscit");});
test("resuscitato -> resuscit", function() {deepEqual( Stem("resuscitato"), "resuscit");});
test("retagna -> retagn", function() {deepEqual( Stem("retagna"), "retagn");});
test("retail -> retail", function() {deepEqual( Stem("retail"), "retail");});
test("retata -> ret", function() {deepEqual( Stem("retata"), "ret");});
test("retate -> ret", function() {deepEqual( Stem("retate"), "ret");});
test("rete -> ret", function() {deepEqual( Stem("rete"), "ret");});
test("retè -> ret", function() {deepEqual( Stem("retè"), "ret");});
test("retequattro -> retequattr", function() {deepEqual( Stem("retequattro"), "retequattr");});
test("reti -> ret", function() {deepEqual( Stem("reti"), "ret");});
test("reticella -> reticell", function() {deepEqual( Stem("reticella"), "reticell");});
test("reticelle -> reticell", function() {deepEqual( Stem("reticelle"), "reticell");});
test("reticente -> reticent", function() {deepEqual( Stem("reticente"), "reticent");});
test("reticentè -> reticent", function() {deepEqual( Stem("reticentè"), "reticent");});
test("reticenze -> reticent", function() {deepEqual( Stem("reticenze"), "reticent");});
test("reto -> ret", function() {deepEqual( Stem("reto"), "ret");});
test("retorica -> retor", function() {deepEqual( Stem("retorica"), "retor");});
test("retributivi -> retribut", function() {deepEqual( Stem("retributivi"), "retribut");});
test("retributivo -> retribut", function() {deepEqual( Stem("retributivo"), "retribut");});
test("retribuzione -> retribu", function() {deepEqual( Stem("retribuzione"), "retribu");});
test("retribuzioni -> retribu", function() {deepEqual( Stem("retribuzioni"), "retribu");});
test("retrocessione -> retrocession", function() {deepEqual( Stem("retrocessione"), "retrocession");});
test("retroguardia -> retroguard", function() {deepEqual( Stem("retroguardia"), "retroguard");});
test("retroscena -> retroscen", function() {deepEqual( Stem("retroscena"), "retroscen");});
test("retrospettiva -> retrospett", function() {deepEqual( Stem("retrospettiva"), "retrospett");});
test("retrostante -> retrost", function() {deepEqual( Stem("retrostante"), "retrost");});
test("retta -> rett", function() {deepEqual( Stem("retta"), "rett");});
test("rettifica -> rettif", function() {deepEqual( Stem("rettifica"), "rettif");});
test("rettificare -> rettific", function() {deepEqual( Stem("rettificare"), "rettific");});
test("rettificazioni -> rettif", function() {deepEqual( Stem("rettificazioni"), "rettif");});
test("retto -> rett", function() {deepEqual( Stem("retto"), "rett");});
test("rettori -> rettor", function() {deepEqual( Stem("rettori"), "rettor");});
test("rettorica -> rettor", function() {deepEqual( Stem("rettorica"), "rettor");});
test("reuter -> reuter", function() {deepEqual( Stem("reuter"), "reuter");});
test("reverenda -> rever", function() {deepEqual( Stem("reverenda"), "rever");});
test("reverendissima -> reverendissim", function() {deepEqual( Stem("reverendissima"), "reverendissim");});
test("reverendo -> rever", function() {deepEqual( Stem("reverendo"), "rever");});
test("reversibilità -> reversibil", function() {deepEqual( Stem("reversibilità"), "reversibil");});
test("revisione -> revision", function() {deepEqual( Stem("revisione"), "revision");});
test("revisionismo -> revision", function() {deepEqual( Stem("revisionismo"), "revision");});
test("revisone -> revison", function() {deepEqual( Stem("revisone"), "revison");});
test("revoca -> revoc", function() {deepEqual( Stem("revoca"), "revoc");});
test("revocabile -> revoc", function() {deepEqual( Stem("revocabile"), "revoc");});
test("revocare -> revoc", function() {deepEqual( Stem("revocare"), "revoc");});
test("revocati -> revoc", function() {deepEqual( Stem("revocati"), "revoc");});
test("revocato -> revoc", function() {deepEqual( Stem("revocato"), "revoc");});
test("rey -> rey", function() {deepEqual( Stem("rey"), "rey");});
test("reynolds -> reynolds", function() {deepEqual( Stem("reynolds"), "reynolds");});
test("rezza -> rezz", function() {deepEqual( Stem("rezza"), "rezz");});
test("rf -> rf", function() {deepEqual( Stem("rf"), "rf");});
test("rg -> rg", function() {deepEqual( Stem("rg"), "rg");});
test("rh -> rh", function() {deepEqual( Stem("rh"), "rh");});
test("rheinisch -> rheinisc", function() {deepEqual( Stem("rheinisch"), "rheinisc");});
test("rhetel -> rhetel", function() {deepEqual( Stem("rhetel"), "rhetel");});
test("rhodes -> rhodes", function() {deepEqual( Stem("rhodes"), "rhodes");});
test("riabbassando -> riabbass", function() {deepEqual( Stem("riabbassando"), "riabbass");});
test("riabbassandoli -> riabbass", function() {deepEqual( Stem("riabbassandoli"), "riabbass");});
test("riabbracciar -> riabbracc", function() {deepEqual( Stem("riabbracciar"), "riabbracc");});
test("riabbracciare -> riabbracc", function() {deepEqual( Stem("riabbracciare"), "riabbracc");});
test("riabilitazione -> riabilit", function() {deepEqual( Stem("riabilitazione"), "riabilit");});
test("riaccendano -> riaccend", function() {deepEqual( Stem("riaccendano"), "riaccend");});
test("riaccendersi -> riaccend", function() {deepEqual( Stem("riaccendersi"), "riaccend");});
test("riaccentrare -> riaccentr", function() {deepEqual( Stem("riaccentrare"), "riaccentr");});
test("riaccesa -> riacces", function() {deepEqual( Stem("riaccesa"), "riacces");});
test("riacceso -> riacces", function() {deepEqual( Stem("riacceso"), "riacces");});
test("riaccostati -> riaccost", function() {deepEqual( Stem("riaccostati"), "riaccost");});
test("riaccostò -> riaccost", function() {deepEqual( Stem("riaccostò"), "riaccost");});
test("riacquistar -> riacquist", function() {deepEqual( Stem("riacquistar"), "riacquist");});
test("riacquistare -> riacquist", function() {deepEqual( Stem("riacquistare"), "riacquist");});
test("riacquistate -> riacquist", function() {deepEqual( Stem("riacquistate"), "riacquist");});
test("riafferma -> riafferm", function() {deepEqual( Stem("riafferma"), "riafferm");});
test("riaffermato -> riafferm", function() {deepEqual( Stem("riaffermato"), "riafferm");});
test("riaffermazione -> riafferm", function() {deepEqual( Stem("riaffermazione"), "riafferm");});
test("riafferrare -> riafferr", function() {deepEqual( Stem("riafferrare"), "riafferr");});
test("riaffiora -> riaffior", function() {deepEqual( Stem("riaffiora"), "riaffior");});
test("riagganciare -> riagganc", function() {deepEqual( Stem("riagganciare"), "riagganc");});
test("riaggregare -> riaggreg", function() {deepEqual( Stem("riaggregare"), "riaggreg");});
test("riallineamento -> riallin", function() {deepEqual( Stem("riallineamento"), "riallin");});
test("rialto -> rialt", function() {deepEqual( Stem("rialto"), "rialt");});
test("rialzare -> rialz", function() {deepEqual( Stem("rialzare"), "rialz");});
test("rialzata -> rialz", function() {deepEqual( Stem("rialzata"), "rialz");});
test("rialzi -> rialz", function() {deepEqual( Stem("rialzi"), "rialz");});
test("rialzo -> rialz", function() {deepEqual( Stem("rialzo"), "rialz");});
test("riandare -> riand", function() {deepEqual( Stem("riandare"), "riand");});
test("riandava -> riand", function() {deepEqual( Stem("riandava"), "riand");});
test("rianimata -> rianim", function() {deepEqual( Stem("rianimata"), "rianim");});
test("rianimate -> rianim", function() {deepEqual( Stem("rianimate"), "rianim");});
test("rianimati -> rianim", function() {deepEqual( Stem("rianimati"), "rianim");});
test("rianimato -> rianim", function() {deepEqual( Stem("rianimato"), "rianim");});
test("rianimazione -> rianim", function() {deepEqual( Stem("rianimazione"), "rianim");});
test("riaperta -> riapert", function() {deepEqual( Stem("riaperta"), "riapert");});
test("riaperti -> riap", function() {deepEqual( Stem("riaperti"), "riap");});
test("riaperto -> riapert", function() {deepEqual( Stem("riaperto"), "riapert");});
test("riapertura -> riapertur", function() {deepEqual( Stem("riapertura"), "riapertur");});
test("riappropiarsi -> riapprop", function() {deepEqual( Stem("riappropiarsi"), "riapprop");});
test("riappropriarsi -> riappropr", function() {deepEqual( Stem("riappropriarsi"), "riappropr");});
test("riappuntella -> riappuntell", function() {deepEqual( Stem("riappuntella"), "riappuntell");});
test("riappuntellati -> riappuntell", function() {deepEqual( Stem("riappuntellati"), "riappuntell");});
test("riapra -> riapr", function() {deepEqual( Stem("riapra"), "riapr");});
test("riapriranno -> riapr", function() {deepEqual( Stem("riapriranno"), "riapr");});
test("riassetto -> riassett", function() {deepEqual( Stem("riassetto"), "riassett");});
test("riassicurate -> riassicur", function() {deepEqual( Stem("riassicurate"), "riassicur");});
test("riassicurazioni -> riassicur", function() {deepEqual( Stem("riassicurazioni"), "riassicur");});
test("riattaccò -> riattacc", function() {deepEqual( Stem("riattaccò"), "riattacc");});
test("riattarla -> riatt", function() {deepEqual( Stem("riattarla"), "riatt");});
test("riattizzando -> riattizz", function() {deepEqual( Stem("riattizzando"), "riattizz");});
test("riavendoli -> riav", function() {deepEqual( Stem("riavendoli"), "riav");});
test("riaver -> riaver", function() {deepEqual( Stem("riaver"), "riaver");});
test("riaversi -> riav", function() {deepEqual( Stem("riaversi"), "riav");});
test("riaveva -> riav", function() {deepEqual( Stem("riaveva"), "riav");});
test("riavute -> riav", function() {deepEqual( Stem("riavute"), "riav");});
test("riavuto -> riav", function() {deepEqual( Stem("riavuto"), "riav");});
test("riavutosi -> riavut", function() {deepEqual( Stem("riavutosi"), "riavut");});
test("riavviare -> riavv", function() {deepEqual( Stem("riavviare"), "riavv");});
test("riavvicina -> riavvicin", function() {deepEqual( Stem("riavvicina"), "riavvicin");});
test("riavvicinamento -> riavvicin", function() {deepEqual( Stem("riavvicinamento"), "riavvicin");});
test("ribadendo -> ribad", function() {deepEqual( Stem("ribadendo"), "ribad");});
test("ribadisce -> ribad", function() {deepEqual( Stem("ribadisce"), "ribad");});
test("ribadisco -> ribad", function() {deepEqual( Stem("ribadisco"), "ribad");});
test("ribadiscono -> ribad", function() {deepEqual( Stem("ribadiscono"), "ribad");});
test("ribadita -> ribad", function() {deepEqual( Stem("ribadita"), "ribad");});
test("ribadito -> ribad", function() {deepEqual( Stem("ribadito"), "ribad");});
test("ribadiva -> ribad", function() {deepEqual( Stem("ribadiva"), "ribad");});
test("ribalda -> ribald", function() {deepEqual( Stem("ribalda"), "ribald");});
test("ribalderia -> ribalder", function() {deepEqual( Stem("ribalderia"), "ribalder");});
test("ribalderie -> ribalder", function() {deepEqual( Stem("ribalderie"), "ribalder");});
test("ribaldi -> ribald", function() {deepEqual( Stem("ribaldi"), "ribald");});
test("ribaldo -> ribald", function() {deepEqual( Stem("ribaldo"), "ribald");});
test("ribalta -> ribalt", function() {deepEqual( Stem("ribalta"), "ribalt");});
test("ribaltato -> ribalt", function() {deepEqual( Stem("ribaltato"), "ribalt");});
test("ribaltone -> ribalton", function() {deepEqual( Stem("ribaltone"), "ribalton");});
test("ribasso -> ribass", function() {deepEqual( Stem("ribasso"), "ribass");});
test("ribattendo -> ribatt", function() {deepEqual( Stem("ribattendo"), "ribatt");});
test("ribatter -> ribatter", function() {deepEqual( Stem("ribatter"), "ribatter");});
test("ribattere -> ribatt", function() {deepEqual( Stem("ribattere"), "ribatt");});
test("ribatterle -> ribatt", function() {deepEqual( Stem("ribatterle"), "ribatt");});
test("ribattete -> ribatt", function() {deepEqual( Stem("ribattete"), "ribatt");});
test("ribattezzato -> ribattezz", function() {deepEqual( Stem("ribattezzato"), "ribattezz");});
test("ribattono -> ribatt", function() {deepEqual( Stem("ribattono"), "ribatt");});
test("ribattuta -> ribatt", function() {deepEqual( Stem("ribattuta"), "ribatt");});
test("ribattuto -> ribatt", function() {deepEqual( Stem("ribattuto"), "ribatt");});
test("ribattutto -> ribattutt", function() {deepEqual( Stem("ribattutto"), "ribattutt");});
test("ribella -> ribell", function() {deepEqual( Stem("ribella"), "ribell");});
test("ribellata -> ribell", function() {deepEqual( Stem("ribellata"), "ribell");});
test("ribelle -> ribell", function() {deepEqual( Stem("ribelle"), "ribell");});
test("ribelli -> ribell", function() {deepEqual( Stem("ribelli"), "ribell");});
test("ribellione -> ribellion", function() {deepEqual( Stem("ribellione"), "ribellion");});
test("ribellioni -> ribellion", function() {deepEqual( Stem("ribellioni"), "ribellion");});
test("ribenedetti -> ribenedett", function() {deepEqual( Stem("ribenedetti"), "ribenedett");});
test("ribolle -> riboll", function() {deepEqual( Stem("ribolle"), "riboll");});
test("ribollimento -> riboll", function() {deepEqual( Stem("ribollimento"), "riboll");});
test("ribollivano -> riboll", function() {deepEqual( Stem("ribollivano"), "riboll");});
test("ribrezzo -> ribrezz", function() {deepEqual( Stem("ribrezzo"), "ribrezz");});
test("ributtanti -> ributt", function() {deepEqual( Stem("ributtanti"), "ributt");});
test("rica -> ric", function() {deepEqual( Stem("rica"), "ric");});
test("ricadde -> ricadd", function() {deepEqual( Stem("ricadde"), "ricadd");});
test("ricade -> ricad", function() {deepEqual( Stem("ricade"), "ricad");});
test("ricadere -> ricad", function() {deepEqual( Stem("ricadere"), "ricad");});
test("ricadeva -> ricad", function() {deepEqual( Stem("ricadeva"), "ricad");});
test("ricadevano -> ricad", function() {deepEqual( Stem("ricadevano"), "ricad");});
test("ricadrebbe -> ricadrebb", function() {deepEqual( Stem("ricadrebbe"), "ricadrebb");});
test("ricaduto -> ricad", function() {deepEqual( Stem("ricaduto"), "ricad");});
test("ricalcandone -> ricalc", function() {deepEqual( Stem("ricalcandone"), "ricalc");});
test("ricalcare -> ricalc", function() {deepEqual( Stem("ricalcare"), "ricalc");});
test("ricalcitrante -> ricalcitr", function() {deepEqual( Stem("ricalcitrante"), "ricalcitr");});
test("ricalcitrare -> ricalcitr", function() {deepEqual( Stem("ricalcitrare"), "ricalcitr");});
test("ricalcitrato -> ricalcitr", function() {deepEqual( Stem("ricalcitrato"), "ricalcitr");});
test("ricambi -> ricamb", function() {deepEqual( Stem("ricambi"), "ricamb");});
test("ricambio -> ricamb", function() {deepEqual( Stem("ricambio"), "ricamb");});
test("ricami -> ricam", function() {deepEqual( Stem("ricami"), "ricam");});
test("ricamo -> ricam", function() {deepEqual( Stem("ricamo"), "ricam");});
test("ricandidato -> ricandid", function() {deepEqual( Stem("ricandidato"), "ricandid");});
test("ricantar -> ricant", function() {deepEqual( Stem("ricantar"), "ricant");});
test("ricapitalizzare -> ricapitalizz", function() {deepEqual( Stem("ricapitalizzare"), "ricapitalizz");});
test("ricapitalizzazione -> ricapitalizz", function() {deepEqual( Stem("ricapitalizzazione"), "ricapitalizz");});
test("ricapitare -> ricapit", function() {deepEqual( Stem("ricapitare"), "ricapit");});
test("ricapito -> ricap", function() {deepEqual( Stem("ricapito"), "ricap");});
test("ricapitolò -> ricapitol", function() {deepEqual( Stem("ricapitolò"), "ricapitol");});
test("ricarvarla -> ricarv", function() {deepEqual( Stem("ricarvarla"), "ricarv");});
test("ricattarsi -> ricatt", function() {deepEqual( Stem("ricattarsi"), "ricatt");});
test("ricatto -> ricatt", function() {deepEqual( Stem("ricatto"), "ricatt");});
test("ricava -> ric", function() {deepEqual( Stem("ricava"), "ric");});
test("ricavar -> ricav", function() {deepEqual( Stem("ricavar"), "ricav");});
test("ricavare -> ricav", function() {deepEqual( Stem("ricavare"), "ricav");});
test("ricavato -> ricav", function() {deepEqual( Stem("ricavato"), "ricav");});
test("ricavava -> ricav", function() {deepEqual( Stem("ricavava"), "ricav");});
test("ricavi -> ric", function() {deepEqual( Stem("ricavi"), "ric");});
test("ricca -> ricc", function() {deepEqual( Stem("ricca"), "ricc");});
test("riccardo -> riccard", function() {deepEqual( Stem("riccardo"), "riccard");});
test("ricche -> ricc", function() {deepEqual( Stem("ricche"), "ricc");});
test("ricchezza -> ricchezz", function() {deepEqual( Stem("ricchezza"), "ricchezz");});
test("ricchezze -> ricchezz", function() {deepEqual( Stem("ricchezze"), "ricchezz");});
test("ricchi -> ricc", function() {deepEqual( Stem("ricchi"), "ricc");});
test("ricchissimo -> ricchissim", function() {deepEqual( Stem("ricchissimo"), "ricchissim");});
test("ricci -> ricc", function() {deepEqual( Stem("ricci"), "ricc");});
test("ricciardi -> ricciard", function() {deepEqual( Stem("ricciardi"), "ricciard");});
test("riccio -> ricc", function() {deepEqual( Stem("riccio"), "ricc");});
test("riccione -> riccion", function() {deepEqual( Stem("riccione"), "riccion");});
test("ricco -> ricc", function() {deepEqual( Stem("ricco"), "ricc");});
test("ricentralizzazione -> ricentralizz", function() {deepEqual( Stem("ricentralizzazione"), "ricentralizz");});
test("ricerca -> ricerc", function() {deepEqual( Stem("ricerca"), "ricerc");});
test("ricercando -> ricerc", function() {deepEqual( Stem("ricercando"), "ricerc");});
test("ricercare -> ricerc", function() {deepEqual( Stem("ricercare"), "ricerc");});
test("ricercata -> ricerc", function() {deepEqual( Stem("ricercata"), "ricerc");});
test("ricercate -> ricerc", function() {deepEqual( Stem("ricercate"), "ricerc");});
test("ricercati -> ricerc", function() {deepEqual( Stem("ricercati"), "ricerc");});
test("ricercato -> ricerc", function() {deepEqual( Stem("ricercato"), "ricerc");});
test("ricercatori -> ricerc", function() {deepEqual( Stem("ricercatori"), "ricerc");});
test("ricerche -> ricerc", function() {deepEqual( Stem("ricerche"), "ricerc");});
test("ricercò -> ricerc", function() {deepEqual( Stem("ricercò"), "ricerc");});
test("ricettato -> ricett", function() {deepEqual( Stem("ricettato"), "ricett");});
test("ricettatore -> ricett", function() {deepEqual( Stem("ricettatore"), "ricett");});
test("ricettazione -> ricett", function() {deepEqual( Stem("ricettazione"), "ricett");});
test("ricette -> ricett", function() {deepEqual( Stem("ricette"), "ricett");});
test("ricevano -> ric", function() {deepEqual( Stem("ricevano"), "ric");});
test("riceve -> ricev", function() {deepEqual( Stem("riceve"), "ricev");});
test("ricevé -> ricev", function() {deepEqual( Stem("ricevé"), "ricev");});
test("ricevemmo -> ricev", function() {deepEqual( Stem("ricevemmo"), "ricev");});
test("ricevendo -> ricev", function() {deepEqual( Stem("ricevendo"), "ricev");});
test("ricevendone -> ricev", function() {deepEqual( Stem("ricevendone"), "ricev");});
test("ricever -> ricever", function() {deepEqual( Stem("ricever"), "ricever");});
test("riceverà -> ricev", function() {deepEqual( Stem("riceverà"), "ricev");});
test("riceveranno -> ricev", function() {deepEqual( Stem("riceveranno"), "ricev");});
test("ricevere -> ricev", function() {deepEqual( Stem("ricevere"), "ricev");});
test("riceverla -> ricev", function() {deepEqual( Stem("riceverla"), "ricev");});
test("riceverle -> ricev", function() {deepEqual( Stem("riceverle"), "ricev");});
test("riceverli -> ricev", function() {deepEqual( Stem("riceverli"), "ricev");});
test("riceverlo -> ricev", function() {deepEqual( Stem("riceverlo"), "ricev");});
test("ricevette -> ricevett", function() {deepEqual( Stem("ricevette"), "ricevett");});
test("ricevettero -> ricevetter", function() {deepEqual( Stem("ricevettero"), "ricevetter");});
test("riceveva -> ricev", function() {deepEqual( Stem("riceveva"), "ricev");});
test("ricevevano -> ricev", function() {deepEqual( Stem("ricevevano"), "ricev");});
test("ricevimenti -> ricev", function() {deepEqual( Stem("ricevimenti"), "ricev");});
test("ricevimento -> ricev", function() {deepEqual( Stem("ricevimento"), "ricev");});
test("ricevono -> ricev", function() {deepEqual( Stem("ricevono"), "ricev");});
test("ricevuta -> ricev", function() {deepEqual( Stem("ricevuta"), "ricev");});
test("ricevute -> ricev", function() {deepEqual( Stem("ricevute"), "ricev");});
test("ricevuti -> ricev", function() {deepEqual( Stem("ricevuti"), "ricev");});
test("ricevuto -> ricev", function() {deepEqual( Stem("ricevuto"), "ricev");});
test("ricezione -> ricezion", function() {deepEqual( Stem("ricezione"), "ricezion");});
test("richard -> richard", function() {deepEqual( Stem("richard"), "richard");});
test("riche -> rich", function() {deepEqual( Stem("riche"), "rich");});
test("richelieu -> richelieu", function() {deepEqual( Stem("richelieu"), "richelieu");});
test("richeter -> richeter", function() {deepEqual( Stem("richeter"), "richeter");});
test("richiama -> richiam", function() {deepEqual( Stem("richiama"), "richiam");});
test("richiamando -> richiam", function() {deepEqual( Stem("richiamando"), "richiam");});
test("richiamandosi -> richiam", function() {deepEqual( Stem("richiamandosi"), "richiam");});
test("richiamano -> richiam", function() {deepEqual( Stem("richiamano"), "richiam");});
test("richiamare -> richiam", function() {deepEqual( Stem("richiamare"), "richiam");});
test("richiamarmi -> richiam", function() {deepEqual( Stem("richiamarmi"), "richiam");});
test("richiamarsi -> richiam", function() {deepEqual( Stem("richiamarsi"), "richiam");});
test("richiamata -> richiam", function() {deepEqual( Stem("richiamata"), "richiam");});
test("richiamati -> richiam", function() {deepEqual( Stem("richiamati"), "richiam");});
test("richiamato -> richiam", function() {deepEqual( Stem("richiamato"), "richiam");});
test("richiamatolo -> richiamatol", function() {deepEqual( Stem("richiamatolo"), "richiamatol");});
test("richiamava -> richiam", function() {deepEqual( Stem("richiamava"), "richiam");});
test("richiamavano -> richiam", function() {deepEqual( Stem("richiamavano"), "richiam");});
test("richiamerebbe -> richiam", function() {deepEqual( Stem("richiamerebbe"), "richiam");});
test("richiami -> richiam", function() {deepEqual( Stem("richiami"), "richiam");});
test("richiamiamo -> richiam", function() {deepEqual( Stem("richiamiamo"), "richiam");});
test("richiamo -> rich", function() {deepEqual( Stem("richiamo"), "rich");});
test("richiamò -> richiam", function() {deepEqual( Stem("richiamò"), "richiam");});
test("richiede -> richied", function() {deepEqual( Stem("richiede"), "richied");});
test("richiedendo -> richied", function() {deepEqual( Stem("richiedendo"), "richied");});
test("richieder -> richieder", function() {deepEqual( Stem("richieder"), "richieder");});
test("richiedere -> richied", function() {deepEqual( Stem("richiedere"), "richied");});
test("richiedergli -> richied", function() {deepEqual( Stem("richiedergli"), "richied");});
test("richiederlo -> richied", function() {deepEqual( Stem("richiederlo"), "richied");});
test("richiedesse -> richiedess", function() {deepEqual( Stem("richiedesse"), "richiedess");});
test("richiedessero -> richied", function() {deepEqual( Stem("richiedessero"), "richied");});
test("richiedeva -> richied", function() {deepEqual( Stem("richiedeva"), "richied");});
test("richiedevano -> richied", function() {deepEqual( Stem("richiedevano"), "richied");});
test("richiedon -> richiedon", function() {deepEqual( Stem("richiedon"), "richiedon");});
test("richiedono -> richied", function() {deepEqual( Stem("richiedono"), "richied");});
test("richiese -> richies", function() {deepEqual( Stem("richiese"), "richies");});
test("richiesta -> richiest", function() {deepEqual( Stem("richiesta"), "richiest");});
test("richieste -> richiest", function() {deepEqual( Stem("richieste"), "richiest");});
test("richiesti -> richiest", function() {deepEqual( Stem("richiesti"), "richiest");});
test("richiesto -> richiest", function() {deepEqual( Stem("richiesto"), "richiest");});
test("richiudere -> richiud", function() {deepEqual( Stem("richiudere"), "richiud");});
test("richiudeva -> richiud", function() {deepEqual( Stem("richiudeva"), "richiud");});
test("richiusa -> richius", function() {deepEqual( Stem("richiusa"), "richius");});
test("richiuse -> richius", function() {deepEqual( Stem("richiuse"), "richius");});
test("richter -> richter", function() {deepEqual( Stem("richter"), "richter");});
test("riciclaggio -> riciclagg", function() {deepEqual( Stem("riciclaggio"), "riciclagg");});
test("ricilaggio -> ricilagg", function() {deepEqual( Stem("ricilaggio"), "ricilagg");});
test("riciliù -> riciliù", function() {deepEqual( Stem("riciliù"), "riciliù");});
test("rick -> rick", function() {deepEqual( Stem("rick"), "rick");});
test("ricognitrice -> ricognitr", function() {deepEqual( Stem("ricognitrice"), "ricognitr");});
test("ricognizione -> ricognizion", function() {deepEqual( Stem("ricognizione"), "ricognizion");});
test("ricognizioni -> ricognizion", function() {deepEqual( Stem("ricognizioni"), "ricognizion");});
test("ricognizone -> ricognizon", function() {deepEqual( Stem("ricognizone"), "ricognizon");});
test("ricollegare -> ricolleg", function() {deepEqual( Stem("ricollegare"), "ricolleg");});
test("ricolmò -> ricolm", function() {deepEqual( Stem("ricolmò"), "ricolm");});
test("ricomincerà -> ricominc", function() {deepEqual( Stem("ricomincerà"), "ricominc");});
test("ricomincerebbe -> ricominc", function() {deepEqual( Stem("ricomincerebbe"), "ricominc");});
test("ricomincia -> ricominc", function() {deepEqual( Stem("ricomincia"), "ricominc");});
test("ricominciando -> ricominc", function() {deepEqual( Stem("ricominciando"), "ricominc");});
test("ricominciar -> ricominc", function() {deepEqual( Stem("ricominciar"), "ricominc");});
test("ricominciarono -> ricominc", function() {deepEqual( Stem("ricominciarono"), "ricominc");});
test("ricominciato -> ricominc", function() {deepEqual( Stem("ricominciato"), "ricominc");});
test("ricominciava -> ricominc", function() {deepEqual( Stem("ricominciava"), "ricominc");});
test("ricominciò -> ricominc", function() {deepEqual( Stem("ricominciò"), "ricominc");});
test("ricomparendo -> ricompar", function() {deepEqual( Stem("ricomparendo"), "ricompar");});
test("ricomparire -> ricompar", function() {deepEqual( Stem("ricomparire"), "ricompar");});
test("ricomparirvi -> ricompar", function() {deepEqual( Stem("ricomparirvi"), "ricompar");});
test("ricompariva -> ricompar", function() {deepEqual( Stem("ricompariva"), "ricompar");});
test("ricomparve -> ricomparv", function() {deepEqual( Stem("ricomparve"), "ricomparv");});
test("ricomparvero -> ricomparver", function() {deepEqual( Stem("ricomparvero"), "ricomparver");});
test("ricompensa -> ricompens", function() {deepEqual( Stem("ricompensa"), "ricompens");});
test("ricompensare -> ricompens", function() {deepEqual( Stem("ricompensare"), "ricompens");});
test("ricompenserà -> ricompens", function() {deepEqual( Stem("ricompenserà"), "ricompens");});
test("ricompensi -> ricompens", function() {deepEqual( Stem("ricompensi"), "ricompens");});
test("ricompone -> ricompon", function() {deepEqual( Stem("ricompone"), "ricompon");});
test("ricomponeva -> ricompon", function() {deepEqual( Stem("ricomponeva"), "ricompon");});
test("ricomporre -> ricomporr", function() {deepEqual( Stem("ricomporre"), "ricomporr");});
test("ricomposizione -> ricomposizion", function() {deepEqual( Stem("ricomposizione"), "ricomposizion");});
test("ricomposte -> ricompost", function() {deepEqual( Stem("ricomposte"), "ricompost");});
test("ricomposto -> ricompost", function() {deepEqual( Stem("ricomposto"), "ricompost");});
test("ricompriamo -> ricompr", function() {deepEqual( Stem("ricompriamo"), "ricompr");});
test("riconcilia -> riconcil", function() {deepEqual( Stem("riconcilia"), "riconcil");});
test("riconciliar -> riconcil", function() {deepEqual( Stem("riconciliar"), "riconcil");});
test("riconciliazione -> riconcil", function() {deepEqual( Stem("riconciliazione"), "riconcil");});
test("ricondotta -> ricondott", function() {deepEqual( Stem("ricondotta"), "ricondott");});
test("riconducendo -> riconduc", function() {deepEqual( Stem("riconducendo"), "riconduc");});
test("ricondur -> ricondur", function() {deepEqual( Stem("ricondur"), "ricondur");});
test("ricondurre -> ricondurr", function() {deepEqual( Stem("ricondurre"), "ricondurr");});
test("riconfermato -> riconferm", function() {deepEqual( Stem("riconfermato"), "riconferm");});
test("riconfortati -> riconfort", function() {deepEqual( Stem("riconfortati"), "riconfort");});
test("riconobbe -> riconobb", function() {deepEqual( Stem("riconobbe"), "riconobb");});
test("riconosca -> riconosc", function() {deepEqual( Stem("riconosca"), "riconosc");});
test("riconosce -> riconosc", function() {deepEqual( Stem("riconosce"), "riconosc");});
test("riconoscendo -> riconosc", function() {deepEqual( Stem("riconoscendo"), "riconosc");});
test("riconoscendosi -> riconosc", function() {deepEqual( Stem("riconoscendosi"), "riconosc");});
test("riconoscente -> riconoscent", function() {deepEqual( Stem("riconoscente"), "riconoscent");});
test("riconoscenza -> riconoscent", function() {deepEqual( Stem("riconoscenza"), "riconoscent");});
test("riconoscere -> riconosc", function() {deepEqual( Stem("riconoscere"), "riconosc");});
test("riconoscerla -> riconosc", function() {deepEqual( Stem("riconoscerla"), "riconosc");});
test("riconoscerli -> riconosc", function() {deepEqual( Stem("riconoscerli"), "riconosc");});
test("riconoscerne -> riconosc", function() {deepEqual( Stem("riconoscerne"), "riconosc");});
test("riconoscersi -> riconosc", function() {deepEqual( Stem("riconoscersi"), "riconosc");});
test("riconoscesse -> riconoscess", function() {deepEqual( Stem("riconoscesse"), "riconoscess");});
test("riconoscessero -> riconosc", function() {deepEqual( Stem("riconoscessero"), "riconosc");});
test("riconosceva -> riconosc", function() {deepEqual( Stem("riconosceva"), "riconosc");});
test("riconosci -> riconosc", function() {deepEqual( Stem("riconosci"), "riconosc");});
test("riconosciate -> riconosc", function() {deepEqual( Stem("riconosciate"), "riconosc");});
test("riconoscimento -> riconosc", function() {deepEqual( Stem("riconoscimento"), "riconosc");});
test("riconosciuta -> riconosc", function() {deepEqual( Stem("riconosciuta"), "riconosc");});
test("riconosciute -> riconosc", function() {deepEqual( Stem("riconosciute"), "riconosc");});
test("riconosciuti -> riconosc", function() {deepEqual( Stem("riconosciuti"), "riconosc");});
test("riconosciuto -> riconosc", function() {deepEqual( Stem("riconosciuto"), "riconosc");});
test("riconosco -> riconosc", function() {deepEqual( Stem("riconosco"), "riconosc");});
test("riconoscono -> riconosc", function() {deepEqual( Stem("riconoscono"), "riconosc");});
test("riconquista -> riconqu", function() {deepEqual( Stem("riconquista"), "riconqu");});
test("riconquistato -> riconquist", function() {deepEqual( Stem("riconquistato"), "riconquist");});
test("riconscibili -> riconsc", function() {deepEqual( Stem("riconscibili"), "riconsc");});
test("riconsegnarla -> riconsegn", function() {deepEqual( Stem("riconsegnarla"), "riconsegn");});
test("riconversione -> riconversion", function() {deepEqual( Stem("riconversione"), "riconversion");});
test("riconvocare -> riconvoc", function() {deepEqual( Stem("riconvocare"), "riconvoc");});
test("ricoperta -> ricopert", function() {deepEqual( Stem("ricoperta"), "ricopert");});
test("ricoperte -> ricopert", function() {deepEqual( Stem("ricoperte"), "ricopert");});
test("ricoperti -> ricop", function() {deepEqual( Stem("ricoperti"), "ricop");});
test("ricoperto -> ricopert", function() {deepEqual( Stem("ricoperto"), "ricopert");});
test("ricopre -> ricopr", function() {deepEqual( Stem("ricopre"), "ricopr");});
test("ricoprendo -> ricopr", function() {deepEqual( Stem("ricoprendo"), "ricopr");});
test("ricoprire -> ricopr", function() {deepEqual( Stem("ricoprire"), "ricopr");});
test("ricopriva -> ricopr", function() {deepEqual( Stem("ricopriva"), "ricopr");});
test("ricopro -> ricopr", function() {deepEqual( Stem("ricopro"), "ricopr");});
test("ricoprono -> ricopr", function() {deepEqual( Stem("ricoprono"), "ricopr");});
test("ricorda -> ricord", function() {deepEqual( Stem("ricorda"), "ricord");});
test("ricordalo -> ricordal", function() {deepEqual( Stem("ricordalo"), "ricordal");});
test("ricordan -> ricordan", function() {deepEqual( Stem("ricordan"), "ricordan");});
test("ricordando -> ricord", function() {deepEqual( Stem("ricordando"), "ricord");});
test("ricordano -> ricord", function() {deepEqual( Stem("ricordano"), "ricord");});
test("ricordare -> ricord", function() {deepEqual( Stem("ricordare"), "ricord");});
test("ricordarlo -> ricord", function() {deepEqual( Stem("ricordarlo"), "ricord");});
test("ricordarsi -> ricord", function() {deepEqual( Stem("ricordarsi"), "ricord");});
test("ricordata -> ricord", function() {deepEqual( Stem("ricordata"), "ricord");});
test("ricordate -> ricord", function() {deepEqual( Stem("ricordate"), "ricord");});
test("ricordatevelo -> ricordatevel", function() {deepEqual( Stem("ricordatevelo"), "ricordatevel");});
test("ricordatevi -> ricordat", function() {deepEqual( Stem("ricordatevi"), "ricordat");});
test("ricordati -> ricord", function() {deepEqual( Stem("ricordati"), "ricord");});
test("ricordato -> ricord", function() {deepEqual( Stem("ricordato"), "ricord");});
test("ricordava -> ricord", function() {deepEqual( Stem("ricordava"), "ricord");});
test("ricordavan -> ricordavan", function() {deepEqual( Stem("ricordavan"), "ricordavan");});
test("ricordavano -> ricord", function() {deepEqual( Stem("ricordavano"), "ricord");});
test("ricorderà -> ricord", function() {deepEqual( Stem("ricorderà"), "ricord");});
test("ricorderanno -> ricord", function() {deepEqual( Stem("ricorderanno"), "ricord");});
test("ricorderesti -> ricord", function() {deepEqual( Stem("ricorderesti"), "ricord");});
test("ricorderete -> ricord", function() {deepEqual( Stem("ricorderete"), "ricord");});
test("ricordi -> ricord", function() {deepEqual( Stem("ricordi"), "ricord");});
test("ricordiamo -> ricord", function() {deepEqual( Stem("ricordiamo"), "ricord");});
test("ricordino -> ricordin", function() {deepEqual( Stem("ricordino"), "ricordin");});
test("ricordo -> ricord", function() {deepEqual( Stem("ricordo"), "ricord");});
test("ricordò -> ricord", function() {deepEqual( Stem("ricordò"), "ricord");});
test("ricorra -> ricorr", function() {deepEqual( Stem("ricorra"), "ricorr");});
test("ricorre -> ricorr", function() {deepEqual( Stem("ricorre"), "ricorr");});
test("ricorreggere -> ricorregg", function() {deepEqual( Stem("ricorreggere"), "ricorregg");});
test("ricorrendo -> ricorr", function() {deepEqual( Stem("ricorrendo"), "ricorr");});
test("ricorrenti -> ricorrent", function() {deepEqual( Stem("ricorrenti"), "ricorrent");});
test("ricorrenza -> ricorrent", function() {deepEqual( Stem("ricorrenza"), "ricorrent");});
test("ricorrer -> ricorrer", function() {deepEqual( Stem("ricorrer"), "ricorrer");});
test("ricorrerà -> ricorr", function() {deepEqual( Stem("ricorrerà"), "ricorr");});
test("ricorrere -> ricorr", function() {deepEqual( Stem("ricorrere"), "ricorr");});
test("ricorreva -> ricorr", function() {deepEqual( Stem("ricorreva"), "ricorr");});
test("ricorrevano -> ricorr", function() {deepEqual( Stem("ricorrevano"), "ricorr");});
test("ricorrono -> ricorr", function() {deepEqual( Stem("ricorrono"), "ricorr");});
test("ricorse -> ricors", function() {deepEqual( Stem("ricorse"), "ricors");});
test("ricorsi -> ricors", function() {deepEqual( Stem("ricorsi"), "ricors");});
test("ricorso -> ricors", function() {deepEqual( Stem("ricorso"), "ricors");});
test("ricostituire -> ricostitu", function() {deepEqual( Stem("ricostituire"), "ricostitu");});
test("ricostituzione -> ricostitu", function() {deepEqual( Stem("ricostituzione"), "ricostitu");});
test("ricostruire -> ricostru", function() {deepEqual( Stem("ricostruire"), "ricostru");});
test("ricostruirla -> ricostru", function() {deepEqual( Stem("ricostruirla"), "ricostru");});
test("ricostruzione -> ricostru", function() {deepEqual( Stem("ricostruzione"), "ricostru");});
test("ricoverarci -> ricover", function() {deepEqual( Stem("ricoverarci"), "ricover");});
test("ricoverare -> ricover", function() {deepEqual( Stem("ricoverare"), "ricover");});
test("ricoverarlo -> ricover", function() {deepEqual( Stem("ricoverarlo"), "ricover");});
test("ricoverarono -> ricover", function() {deepEqual( Stem("ricoverarono"), "ricover");});
test("ricoverarsi -> ricover", function() {deepEqual( Stem("ricoverarsi"), "ricover");});
test("ricoverarvi -> ricover", function() {deepEqual( Stem("ricoverarvi"), "ricover");});
test("ricoverata -> ricover", function() {deepEqual( Stem("ricoverata"), "ricover");});
test("ricoverate -> ricover", function() {deepEqual( Stem("ricoverate"), "ricover");});
test("ricoverati -> ricover", function() {deepEqual( Stem("ricoverati"), "ricover");});
test("ricoverato -> ricover", function() {deepEqual( Stem("ricoverato"), "ricover");});
test("ricovero -> ricover", function() {deepEqual( Stem("ricovero"), "ricover");});
test("ricrea -> ricre", function() {deepEqual( Stem("ricrea"), "ricre");});
test("ricreano -> ricr", function() {deepEqual( Stem("ricreano"), "ricr");});
test("ricreare -> ricr", function() {deepEqual( Stem("ricreare"), "ricr");});
test("ricrearsi -> ricr", function() {deepEqual( Stem("ricrearsi"), "ricr");});
test("ricreatrice -> ricreatric", function() {deepEqual( Stem("ricreatrice"), "ricreatric");});
test("ricucire -> ricuc", function() {deepEqual( Stem("ricucire"), "ricuc");});
test("ricucito -> ricuc", function() {deepEqual( Stem("ricucito"), "ricuc");});
test("ricuperare -> ricuper", function() {deepEqual( Stem("ricuperare"), "ricuper");});
test("ricuperata -> ricuper", function() {deepEqual( Stem("ricuperata"), "ricuper");});
test("ricupero -> ricuper", function() {deepEqual( Stem("ricupero"), "ricuper");});
test("ricurvo -> ricurv", function() {deepEqual( Stem("ricurvo"), "ricurv");});
test("ricusando -> ricus", function() {deepEqual( Stem("ricusando"), "ricus");});
test("ricusano -> ricus", function() {deepEqual( Stem("ricusano"), "ricus");});
test("ricusasse -> ricus", function() {deepEqual( Stem("ricusasse"), "ricus");});
test("ricusava -> ricus", function() {deepEqual( Stem("ricusava"), "ricus");});
test("ricusino -> ricusin", function() {deepEqual( Stem("ricusino"), "ricusin");});
test("ricusò -> ricus", function() {deepEqual( Stem("ricusò"), "ricus");});
test("ridar -> rid", function() {deepEqual( Stem("ridar"), "rid");});
test("ridare -> rid", function() {deepEqual( Stem("ridare"), "rid");});
test("ridato -> rid", function() {deepEqual( Stem("ridato"), "rid");});
test("ride -> rid", function() {deepEqual( Stem("ride"), "rid");});
test("ridefinirne -> ridefin", function() {deepEqual( Stem("ridefinirne"), "ridefin");});
test("ridefinita -> ridefin", function() {deepEqual( Stem("ridefinita"), "ridefin");});
test("ridefinizione -> ridefinizion", function() {deepEqual( Stem("ridefinizione"), "ridefinizion");});
test("ridendo -> rid", function() {deepEqual( Stem("ridendo"), "rid");});
test("ridente -> rident", function() {deepEqual( Stem("ridente"), "rident");});
test("ridenti -> rident", function() {deepEqual( Stem("ridenti"), "rident");});
test("rider -> rider", function() {deepEqual( Stem("rider"), "rider");});
test("ridere -> rid", function() {deepEqual( Stem("ridere"), "rid");});
test("riderei -> rid", function() {deepEqual( Stem("riderei"), "rid");});
test("ridersene -> rid", function() {deepEqual( Stem("ridersene"), "rid");});
test("ridersi -> rid", function() {deepEqual( Stem("ridersi"), "rid");});
test("ridesse -> ridess", function() {deepEqual( Stem("ridesse"), "ridess");});
test("ridesta -> ridest", function() {deepEqual( Stem("ridesta"), "ridest");});
test("ridestato -> ridest", function() {deepEqual( Stem("ridestato"), "ridest");});
test("ridestavano -> ridest", function() {deepEqual( Stem("ridestavano"), "ridest");});
test("rideva -> rid", function() {deepEqual( Stem("rideva"), "rid");});
test("ridevano -> rid", function() {deepEqual( Stem("ridevano"), "rid");});
test("ridge -> ridg", function() {deepEqual( Stem("ridge"), "ridg");});
test("ridia -> rid", function() {deepEqual( Stem("ridia"), "rid");});
test("ridice -> ridic", function() {deepEqual( Stem("ridice"), "ridic");});
test("ridicola -> ridicol", function() {deepEqual( Stem("ridicola"), "ridicol");});
test("ridicoli -> ridicol", function() {deepEqual( Stem("ridicoli"), "ridicol");});
test("ridicolizzare -> ridicolizz", function() {deepEqual( Stem("ridicolizzare"), "ridicolizz");});
test("ridicolo -> ridicol", function() {deepEqual( Stem("ridicolo"), "ridicol");});
test("ridimensionamenti -> ridimension", function() {deepEqual( Stem("ridimensionamenti"), "ridimension");});
test("ridimensionamento -> ridimension", function() {deepEqual( Stem("ridimensionamento"), "ridimension");});
test("ridimensionare -> ridimension", function() {deepEqual( Stem("ridimensionare"), "ridimension");});
test("ridimensionati -> ridimension", function() {deepEqual( Stem("ridimensionati"), "ridimension");});
test("ridimensionato -> ridimension", function() {deepEqual( Stem("ridimensionato"), "ridimension");});
test("ridir -> rid", function() {deepEqual( Stem("ridir"), "rid");});
test("ridire -> rid", function() {deepEqual( Stem("ridire"), "rid");});
test("ridiscuta -> ridisc", function() {deepEqual( Stem("ridiscuta"), "ridisc");});
test("ridisegnare -> ridisegn", function() {deepEqual( Stem("ridisegnare"), "ridisegn");});
test("ridisegnati -> ridisegn", function() {deepEqual( Stem("ridisegnati"), "ridisegn");});
test("ridispiegamentò -> ridispiegament", function() {deepEqual( Stem("ridispiegamentò"), "ridispiegament");});
test("ridiventare -> ridivent", function() {deepEqual( Stem("ridiventare"), "ridivent");});
test("rido -> rid", function() {deepEqual( Stem("rido"), "rid");});
test("ridonasse -> ridon", function() {deepEqual( Stem("ridonasse"), "ridon");});
test("ridono -> rid", function() {deepEqual( Stem("ridono"), "rid");});
test("ridosso -> ridoss", function() {deepEqual( Stem("ridosso"), "ridoss");});
test("ridotta -> ridott", function() {deepEqual( Stem("ridotta"), "ridott");});
test("ridotte -> ridott", function() {deepEqual( Stem("ridotte"), "ridott");});
test("ridotti -> ridott", function() {deepEqual( Stem("ridotti"), "ridott");});
test("ridotto -> ridott", function() {deepEqual( Stem("ridotto"), "ridott");});
test("riduce -> riduc", function() {deepEqual( Stem("riduce"), "riduc");});
test("riducendo -> riduc", function() {deepEqual( Stem("riducendo"), "riduc");});
test("riducendola -> riduc", function() {deepEqual( Stem("riducendola"), "riduc");});
test("riducono -> riduc", function() {deepEqual( Stem("riducono"), "riduc");});
test("ridurci -> ridurc", function() {deepEqual( Stem("ridurci"), "ridurc");});
test("ridurgli -> ridurgl", function() {deepEqual( Stem("ridurgli"), "ridurgl");});
test("ridurli -> ridurl", function() {deepEqual( Stem("ridurli"), "ridurl");});
test("ridurlo -> ridurl", function() {deepEqual( Stem("ridurlo"), "ridurl");});
test("ridurre -> ridurr", function() {deepEqual( Stem("ridurre"), "ridurr");});
test("ridurrebbe -> ridurrebb", function() {deepEqual( Stem("ridurrebbe"), "ridurrebb");});
test("ridusse -> riduss", function() {deepEqual( Stem("ridusse"), "riduss");});
test("riduzione -> riduzion", function() {deepEqual( Stem("riduzione"), "riduzion");});
test("riduzioni -> riduzion", function() {deepEqual( Stem("riduzioni"), "riduzion");});
test("riebbe -> riebb", function() {deepEqual( Stem("riebbe"), "riebb");});
test("rieccitando -> rieccit", function() {deepEqual( Stem("rieccitando"), "rieccit");});
test("riecheggia -> riechegg", function() {deepEqual( Stem("riecheggia"), "riechegg");});
test("riedizione -> riedizion", function() {deepEqual( Stem("riedizione"), "riedizion");});
test("rieducativa -> rieduc", function() {deepEqual( Stem("rieducativa"), "rieduc");});
test("riefensthal -> riefensthal", function() {deepEqual( Stem("riefensthal"), "riefensthal");});
test("rielaborati -> rielabor", function() {deepEqual( Stem("rielaborati"), "rielabor");});
test("rieletti -> rielett", function() {deepEqual( Stem("rieletti"), "rielett");});
test("riello -> riell", function() {deepEqual( Stem("riello"), "riell");});
test("riempì -> riemp", function() {deepEqual( Stem("riempì"), "riemp");});
test("riempie -> riemp", function() {deepEqual( Stem("riempie"), "riemp");});
test("riempiendo -> riemp", function() {deepEqual( Stem("riempiendo"), "riemp");});
test("riempiono -> riemp", function() {deepEqual( Stem("riempiono"), "riemp");});
test("riempirli -> riemp", function() {deepEqual( Stem("riempirli"), "riemp");});
test("riempiron -> riempiron", function() {deepEqual( Stem("riempiron"), "riempiron");});
test("riempirsi -> riemp", function() {deepEqual( Stem("riempirsi"), "riemp");});
test("riempitane -> riempitan", function() {deepEqual( Stem("riempitane"), "riempitan");});
test("riempito -> riemp", function() {deepEqual( Stem("riempito"), "riemp");});
test("riempivano -> riemp", function() {deepEqual( Stem("riempivano"), "riemp");});
test("rientra -> rientr", function() {deepEqual( Stem("rientra"), "rientr");});
test("rientrano -> rientr", function() {deepEqual( Stem("rientrano"), "rientr");});
test("rientrante -> rientrant", function() {deepEqual( Stem("rientrante"), "rientrant");});
test("rientrare -> rientr", function() {deepEqual( Stem("rientrare"), "rientr");});
test("rientrata -> rientr", function() {deepEqual( Stem("rientrata"), "rientr");});
test("rientrato -> rientr", function() {deepEqual( Stem("rientrato"), "rientr");});
test("rientrerà -> rientr", function() {deepEqual( Stem("rientrerà"), "rientr");});
test("rientreranno -> rientr", function() {deepEqual( Stem("rientreranno"), "rientr");});
test("rientrerebbero -> rientr", function() {deepEqual( Stem("rientrerebbero"), "rientr");});
test("rientri -> rientr", function() {deepEqual( Stem("rientri"), "rientr");});
test("rientrino -> rientrin", function() {deepEqual( Stem("rientrino"), "rientrin");});
test("rientro -> rientr", function() {deepEqual( Stem("rientro"), "rientr");});
test("rientrò -> rientr", function() {deepEqual( Stem("rientrò"), "rientr");});
test("riequilibrando -> riequilibr", function() {deepEqual( Stem("riequilibrando"), "riequilibr");});
test("riequilibrio -> riequilibr", function() {deepEqual( Stem("riequilibrio"), "riequilibr");});
test("riesame -> riesam", function() {deepEqual( Stem("riesame"), "riesam");});
test("riesami -> riesam", function() {deepEqual( Stem("riesami"), "riesam");});
test("riesaminata -> riesamin", function() {deepEqual( Stem("riesaminata"), "riesamin");});
test("riesca -> riesc", function() {deepEqual( Stem("riesca"), "riesc");});
test("riescan -> riescan", function() {deepEqual( Stem("riescan"), "riescan");});
test("riesce -> riesc", function() {deepEqual( Stem("riesce"), "riesc");});
test("riesci -> riesc", function() {deepEqual( Stem("riesci"), "riesc");});
test("riesco -> riesc", function() {deepEqual( Stem("riesco"), "riesc");});
test("riesumazione -> riesum", function() {deepEqual( Stem("riesumazione"), "riesum");});
test("rieter -> rieter", function() {deepEqual( Stem("rieter"), "rieter");});
test("rieti -> riet", function() {deepEqual( Stem("rieti"), "riet");});
test("rietrano -> rietr", function() {deepEqual( Stem("rietrano"), "rietr");});
test("rievocare -> rievoc", function() {deepEqual( Stem("rievocare"), "rievoc");});
test("rievocato -> rievoc", function() {deepEqual( Stem("rievocato"), "rievoc");});
test("rievocazione -> rievoc", function() {deepEqual( Stem("rievocazione"), "rievoc");});
test("rif -> rif", function() {deepEqual( Stem("rif"), "rif");});
test("rifà -> rif", function() {deepEqual( Stem("rifà"), "rif");});
test("rifacendo -> rifac", function() {deepEqual( Stem("rifacendo"), "rifac");});
test("rifar -> rif", function() {deepEqual( Stem("rifar"), "rif");});
test("rifarà -> rifar", function() {deepEqual( Stem("rifarà"), "rifar");});
test("rifare -> rif", function() {deepEqual( Stem("rifare"), "rif");});
test("rifarle -> rif", function() {deepEqual( Stem("rifarle"), "rif");});
test("rifarne -> rif", function() {deepEqual( Stem("rifarne"), "rif");});
test("rifarsi -> rif", function() {deepEqual( Stem("rifarsi"), "rif");});
test("rifatti -> rifatt", function() {deepEqual( Stem("rifatti"), "rifatt");});
test("rifatto -> rifatt", function() {deepEqual( Stem("rifatto"), "rifatt");});
test("riferendo -> rifer", function() {deepEqual( Stem("riferendo"), "rifer");});
test("riferendosi -> rifer", function() {deepEqual( Stem("riferendosi"), "rifer");});
test("riferì -> rifer", function() {deepEqual( Stem("riferì"), "rifer");});
test("riferimenti -> rifer", function() {deepEqual( Stem("riferimenti"), "rifer");});
test("riferimento -> rifer", function() {deepEqual( Stem("riferimento"), "rifer");});
test("riferir -> rifer", function() {deepEqual( Stem("riferir"), "rifer");});
test("riferire -> rifer", function() {deepEqual( Stem("riferire"), "rifer");});
test("riferiremo -> rifer", function() {deepEqual( Stem("riferiremo"), "rifer");});
test("riferirli -> rifer", function() {deepEqual( Stem("riferirli"), "rifer");});
test("riferirlo -> rifer", function() {deepEqual( Stem("riferirlo"), "rifer");});
test("riferirò -> rifer", function() {deepEqual( Stem("riferirò"), "rifer");});
test("riferisca -> rifer", function() {deepEqual( Stem("riferisca"), "rifer");});
test("riferisce -> rifer", function() {deepEqual( Stem("riferisce"), "rifer");});
test("riferisco -> rifer", function() {deepEqual( Stem("riferisco"), "rifer");});
test("riferiscono -> rifer", function() {deepEqual( Stem("riferiscono"), "rifer");});
test("riferita -> rifer", function() {deepEqual( Stem("riferita"), "rifer");});
test("riferite -> rifer", function() {deepEqual( Stem("riferite"), "rifer");});
test("riferiti -> rifer", function() {deepEqual( Stem("riferiti"), "rifer");});
test("riferito -> rifer", function() {deepEqual( Stem("riferito"), "rifer");});
test("riferiva -> rifer", function() {deepEqual( Stem("riferiva"), "rifer");});
test("rifiatare -> rifiat", function() {deepEqual( Stem("rifiatare"), "rifiat");});
test("rifinanziata -> rifinanz", function() {deepEqual( Stem("rifinanziata"), "rifinanz");});
test("rifinanziato -> rifinanz", function() {deepEqual( Stem("rifinanziato"), "rifinanz");});
test("rifinito -> rifin", function() {deepEqual( Stem("rifinito"), "rifin");});
test("rifiuta -> rif", function() {deepEqual( Stem("rifiuta"), "rif");});
test("rifiutando -> rifiut", function() {deepEqual( Stem("rifiutando"), "rifiut");});
test("rifiutano -> rifiut", function() {deepEqual( Stem("rifiutano"), "rifiut");});
test("rifiutar -> rifiut", function() {deepEqual( Stem("rifiutar"), "rifiut");});
test("rifiutare -> rifiut", function() {deepEqual( Stem("rifiutare"), "rifiut");});
test("rifiutaste -> rifiutast", function() {deepEqual( Stem("rifiutaste"), "rifiutast");});
test("rifiutate -> rifiut", function() {deepEqual( Stem("rifiutate"), "rifiut");});
test("rifiutati -> rifiut", function() {deepEqual( Stem("rifiutati"), "rifiut");});
test("rifiutato -> rifiut", function() {deepEqual( Stem("rifiutato"), "rifiut");});
test("rifiutava -> rifiut", function() {deepEqual( Stem("rifiutava"), "rifiut");});
test("rifiuti -> rif", function() {deepEqual( Stem("rifiuti"), "rif");});
test("rifiutiamo -> rifiut", function() {deepEqual( Stem("rifiutiamo"), "rifiut");});
test("rifiuto -> rif", function() {deepEqual( Stem("rifiuto"), "rif");});
test("rifiutò -> rifiut", function() {deepEqual( Stem("rifiutò"), "rifiut");});
test("riflessi -> rifless", function() {deepEqual( Stem("riflessi"), "rifless");});
test("riflessione -> riflession", function() {deepEqual( Stem("riflessione"), "riflession");});
test("riflessioni -> riflession", function() {deepEqual( Stem("riflessioni"), "riflession");});
test("riflessività -> rifless", function() {deepEqual( Stem("riflessività"), "rifless");});
test("riflesso -> rifless", function() {deepEqual( Stem("riflesso"), "rifless");});
test("riflette -> riflett", function() {deepEqual( Stem("riflette"), "riflett");});
test("riflettendo -> riflett", function() {deepEqual( Stem("riflettendo"), "riflett");});
test("riflettere -> riflett", function() {deepEqual( Stem("riflettere"), "riflett");});
test("rifletterò -> riflett", function() {deepEqual( Stem("rifletterò"), "riflett");});
test("riflettersi -> riflett", function() {deepEqual( Stem("riflettersi"), "riflett");});
test("rifletteva -> riflett", function() {deepEqual( Stem("rifletteva"), "riflett");});
test("riflettono -> riflett", function() {deepEqual( Stem("riflettono"), "riflett");});
test("riflettori -> riflettor", function() {deepEqual( Stem("riflettori"), "riflettor");});
test("rifondazione -> rifond", function() {deepEqual( Stem("rifondazione"), "rifond");});
test("riforma -> riform", function() {deepEqual( Stem("riforma"), "riform");});
test("riformare -> riform", function() {deepEqual( Stem("riformare"), "riform");});
test("riformata -> riform", function() {deepEqual( Stem("riformata"), "riform");});
test("riformato -> riform", function() {deepEqual( Stem("riformato"), "riform");});
test("riformatore -> riform", function() {deepEqual( Stem("riformatore"), "riform");});
test("riformatori -> riform", function() {deepEqual( Stem("riformatori"), "riform");});
test("riformatrici -> riform", function() {deepEqual( Stem("riformatrici"), "riform");});
test("riforme -> riform", function() {deepEqual( Stem("riforme"), "riform");});
test("riformismo -> riform", function() {deepEqual( Stem("riformismo"), "riform");});
test("rifornire -> riforn", function() {deepEqual( Stem("rifornire"), "riforn");});
test("rifuggì -> rifugg", function() {deepEqual( Stem("rifuggì"), "rifugg");});
test("rifugiare -> rifug", function() {deepEqual( Stem("rifugiare"), "rifug");});
test("rifugiarsi -> rifug", function() {deepEqual( Stem("rifugiarsi"), "rifug");});
test("rifugiassero -> rifug", function() {deepEqual( Stem("rifugiassero"), "rifug");});
test("rifugiata -> rifug", function() {deepEqual( Stem("rifugiata"), "rifug");});
test("rifugiati -> rifug", function() {deepEqual( Stem("rifugiati"), "rifug");});
test("rifugiativisi -> rifugiativis", function() {deepEqual( Stem("rifugiativisi"), "rifugiativis");});
test("rifugiato -> rifug", function() {deepEqual( Stem("rifugiato"), "rifug");});
test("rifugiava -> rifug", function() {deepEqual( Stem("rifugiava"), "rifug");});
test("rifugiavano -> rifug", function() {deepEqual( Stem("rifugiavano"), "rifug");});
test("rifugino -> rifugin", function() {deepEqual( Stem("rifugino"), "rifugin");});
test("rifugio -> rifug", function() {deepEqual( Stem("rifugio"), "rifug");});
test("riga -> rig", function() {deepEqual( Stem("riga"), "rig");});
test("rigagnoli -> rigagnol", function() {deepEqual( Stem("rigagnoli"), "rigagnol");});
test("rigagnolo -> rigagnol", function() {deepEqual( Stem("rigagnolo"), "rigagnol");});
test("rigar -> rig", function() {deepEqual( Stem("rigar"), "rig");});
test("rigaurda -> rigaurd", function() {deepEqual( Stem("rigaurda"), "rigaurd");});
test("rigettando -> rigett", function() {deepEqual( Stem("rigettando"), "rigett");});
test("rigetto -> rigett", function() {deepEqual( Stem("rigetto"), "rigett");});
test("rigettò -> rigett", function() {deepEqual( Stem("rigettò"), "rigett");});
test("righe -> righ", function() {deepEqual( Stem("righe"), "righ");});
test("rights -> rights", function() {deepEqual( Stem("rights"), "rights");});
test("rigida -> rigid", function() {deepEqual( Stem("rigida"), "rigid");});
test("rigidamente -> rigid", function() {deepEqual( Stem("rigidamente"), "rigid");});
test("rigide -> rigid", function() {deepEqual( Stem("rigide"), "rigid");});
test("rigidi -> rigid", function() {deepEqual( Stem("rigidi"), "rigid");});
test("rigidità -> rigid", function() {deepEqual( Stem("rigidità"), "rigid");});
test("rigido -> rigid", function() {deepEqual( Stem("rigido"), "rigid");});
test("rigira -> rigir", function() {deepEqual( Stem("rigira"), "rigir");});
test("rigirato -> rigir", function() {deepEqual( Stem("rigirato"), "rigir");});
test("rigiri -> rigir", function() {deepEqual( Stem("rigiri"), "rigir");});
test("rigirìo -> rigirì", function() {deepEqual( Stem("rigirìo"), "rigirì");});
test("rigogliosa -> rigogl", function() {deepEqual( Stem("rigogliosa"), "rigogl");});
test("rigogliose -> rigogl", function() {deepEqual( Stem("rigogliose"), "rigogl");});
test("rigoglioso -> rigogl", function() {deepEqual( Stem("rigoglioso"), "rigogl");});
test("rigor -> rigor", function() {deepEqual( Stem("rigor"), "rigor");});
test("rigore -> rigor", function() {deepEqual( Stem("rigore"), "rigor");});
test("rigorosa -> rigor", function() {deepEqual( Stem("rigorosa"), "rigor");});
test("rigorosamente -> rigor", function() {deepEqual( Stem("rigorosamente"), "rigor");});
test("rigorosi -> rigor", function() {deepEqual( Stem("rigorosi"), "rigor");});
test("rigoroso -> rigor", function() {deepEqual( Stem("rigoroso"), "rigor");});
test("rigovernare -> rigovern", function() {deepEqual( Stem("rigovernare"), "rigovern");});
test("rigridando -> rigrid", function() {deepEqual( Stem("rigridando"), "rigrid");});
test("riguadagnar -> riguadagn", function() {deepEqual( Stem("riguadagnar"), "riguadagn");});
test("riguarda -> riguard", function() {deepEqual( Stem("riguarda"), "riguard");});
test("riguardano -> riguard", function() {deepEqual( Stem("riguardano"), "riguard");});
test("riguardante -> riguard", function() {deepEqual( Stem("riguardante"), "riguard");});
test("riguardanti -> riguard", function() {deepEqual( Stem("riguardanti"), "riguard");});
test("riguardar -> riguard", function() {deepEqual( Stem("riguardar"), "riguard");});
test("riguardarsi -> riguard", function() {deepEqual( Stem("riguardarsi"), "riguard");});
test("riguardasse -> riguard", function() {deepEqual( Stem("riguardasse"), "riguard");});
test("riguardata -> riguard", function() {deepEqual( Stem("riguardata"), "riguard");});
test("riguardato -> riguard", function() {deepEqual( Stem("riguardato"), "riguard");});
test("riguardava -> riguard", function() {deepEqual( Stem("riguardava"), "riguard");});
test("riguardavan -> riguardavan", function() {deepEqual( Stem("riguardavan"), "riguardavan");});
test("riguardavano -> riguard", function() {deepEqual( Stem("riguardavano"), "riguard");});
test("riguardavate -> riguard", function() {deepEqual( Stem("riguardavate"), "riguard");});
test("riguarderà -> riguard", function() {deepEqual( Stem("riguarderà"), "riguard");});
test("riguarderanno -> riguard", function() {deepEqual( Stem("riguarderanno"), "riguard");});
test("riguardi -> riguard", function() {deepEqual( Stem("riguardi"), "riguard");});
test("riguardo -> riguard", function() {deepEqual( Stem("riguardo"), "riguard");});
test("riker -> riker", function() {deepEqual( Stem("riker"), "riker");});
test("rilanci -> rilanc", function() {deepEqual( Stem("rilanci"), "rilanc");});
test("rilancia -> rilanc", function() {deepEqual( Stem("rilancia"), "rilanc");});
test("rilanciano -> rilanc", function() {deepEqual( Stem("rilanciano"), "rilanc");});
test("rilanciare -> rilanc", function() {deepEqual( Stem("rilanciare"), "rilanc");});
test("rilanciata -> rilanc", function() {deepEqual( Stem("rilanciata"), "rilanc");});
test("rilancio -> rilanc", function() {deepEqual( Stem("rilancio"), "rilanc");});
test("rilasciamento -> rilasc", function() {deepEqual( Stem("rilasciamento"), "rilasc");});
test("rilasciando -> rilasc", function() {deepEqual( Stem("rilasciando"), "rilasc");});
test("rilasciare -> rilasc", function() {deepEqual( Stem("rilasciare"), "rilasc");});
test("rilasciarlo -> rilasc", function() {deepEqual( Stem("rilasciarlo"), "rilasc");});
test("rilasciaron -> rilasciaron", function() {deepEqual( Stem("rilasciaron"), "rilasciaron");});
test("rilasciarvi -> rilasc", function() {deepEqual( Stem("rilasciarvi"), "rilasc");});
test("rilasciasse -> rilasc", function() {deepEqual( Stem("rilasciasse"), "rilasc");});
test("rilasciata -> rilasc", function() {deepEqual( Stem("rilasciata"), "rilasc");});
test("rilasciate -> rilasc", function() {deepEqual( Stem("rilasciate"), "rilasc");});
test("rilasciati -> rilasc", function() {deepEqual( Stem("rilasciati"), "rilasc");});
test("rilasciato -> rilasc", function() {deepEqual( Stem("rilasciato"), "rilasc");});
test("rilascio -> rilasc", function() {deepEqual( Stem("rilascio"), "rilasc");});
test("rilassato -> rilass", function() {deepEqual( Stem("rilassato"), "rilass");});
test("rilazo -> rilaz", function() {deepEqual( Stem("rilazo"), "rilaz");});
test("rileggere -> rilegg", function() {deepEqual( Stem("rileggere"), "rilegg");});
test("rilegittimazione -> rilegittim", function() {deepEqual( Stem("rilegittimazione"), "rilegittim");});
test("rilento -> rilent", function() {deepEqual( Stem("rilento"), "rilent");});
test("rilesse -> riless", function() {deepEqual( Stem("rilesse"), "riless");});
test("rileva -> ril", function() {deepEqual( Stem("rileva"), "ril");});
test("rilevando -> rilev", function() {deepEqual( Stem("rilevando"), "rilev");});
test("rilevante -> rilev", function() {deepEqual( Stem("rilevante"), "rilev");});
test("rilevanti -> rilev", function() {deepEqual( Stem("rilevanti"), "rilev");});
test("rilevar -> rilev", function() {deepEqual( Stem("rilevar"), "rilev");});
test("rilevare -> rilev", function() {deepEqual( Stem("rilevare"), "rilev");});
test("rilevata -> rilev", function() {deepEqual( Stem("rilevata"), "rilev");});
test("rilevate -> ril", function() {deepEqual( Stem("rilevate"), "ril");});
test("rilevati -> rilev", function() {deepEqual( Stem("rilevati"), "rilev");});
test("rilevato -> rilev", function() {deepEqual( Stem("rilevato"), "rilev");});
test("rilevazione -> rilev", function() {deepEqual( Stem("rilevazione"), "rilev");});
test("rilievo -> ril", function() {deepEqual( Stem("rilievo"), "ril");});
test("rilisciarsi -> rilisc", function() {deepEqual( Stem("rilisciarsi"), "rilisc");});
test("rilla -> rill", function() {deepEqual( Stem("rilla"), "rill");});
test("riluttanza -> rilutt", function() {deepEqual( Stem("riluttanza"), "rilutt");});
test("rima -> rim", function() {deepEqual( Stem("rima"), "rim");});
test("riman -> riman", function() {deepEqual( Stem("riman"), "riman");});
test("rimandando -> rimand", function() {deepEqual( Stem("rimandando"), "rimand");});
test("rimandarlo -> rimand", function() {deepEqual( Stem("rimandarlo"), "rimand");});
test("rimandato -> rimand", function() {deepEqual( Stem("rimandato"), "rimand");});
test("rimanderebbe -> rimand", function() {deepEqual( Stem("rimanderebbe"), "rimand");});
test("rimane -> riman", function() {deepEqual( Stem("rimane"), "riman");});
test("rimaneggiate -> rimanegg", function() {deepEqual( Stem("rimaneggiate"), "rimanegg");});
test("rimanendo -> riman", function() {deepEqual( Stem("rimanendo"), "riman");});
test("rimanenete -> rimanen", function() {deepEqual( Stem("rimanenete"), "rimanen");});
test("rimanente -> rimanent", function() {deepEqual( Stem("rimanente"), "rimanent");});
test("rimanenti -> rimanent", function() {deepEqual( Stem("rimanenti"), "rimanent");});
test("rimaner -> rimaner", function() {deepEqual( Stem("rimaner"), "rimaner");});
test("rimanere -> riman", function() {deepEqual( Stem("rimanere"), "riman");});
test("rimanersi -> riman", function() {deepEqual( Stem("rimanersi"), "riman");});
test("rimanervi -> riman", function() {deepEqual( Stem("rimanervi"), "riman");});
test("rimanesse -> rimaness", function() {deepEqual( Stem("rimanesse"), "rimaness");});
test("rimanessero -> riman", function() {deepEqual( Stem("rimanessero"), "riman");});
test("rimaneva -> riman", function() {deepEqual( Stem("rimaneva"), "riman");});
test("rimanevano -> riman", function() {deepEqual( Stem("rimanevano"), "riman");});
test("rimanga -> rimang", function() {deepEqual( Stem("rimanga"), "rimang");});
test("rimango -> rimang", function() {deepEqual( Stem("rimango"), "rimang");});
test("rimangon -> rimangon", function() {deepEqual( Stem("rimangon"), "rimangon");});
test("rimangono -> rimang", function() {deepEqual( Stem("rimangono"), "rimang");});
test("rimaranno -> rimarann", function() {deepEqual( Stem("rimaranno"), "rimarann");});
test("rimarca -> rimarc", function() {deepEqual( Stem("rimarca"), "rimarc");});
test("rimarchevole -> rimarchevol", function() {deepEqual( Stem("rimarchevole"), "rimarchevol");});
test("rimarrà -> rimarr", function() {deepEqual( Stem("rimarrà"), "rimarr");});
test("rimarranno -> rimarrann", function() {deepEqual( Stem("rimarranno"), "rimarrann");});
test("rimarrebbe -> rimarrebb", function() {deepEqual( Stem("rimarrebbe"), "rimarrebb");});
test("rimarrei -> rimarre", function() {deepEqual( Stem("rimarrei"), "rimarre");});
test("rimase -> rimas", function() {deepEqual( Stem("rimase"), "rimas");});
test("rimaser -> rimaser", function() {deepEqual( Stem("rimaser"), "rimaser");});
test("rimasero -> rimaser", function() {deepEqual( Stem("rimasero"), "rimaser");});
test("rimasta -> rimast", function() {deepEqual( Stem("rimasta"), "rimast");});
test("rimaste -> rimast", function() {deepEqual( Stem("rimaste"), "rimast");});
test("rimasti -> rimast", function() {deepEqual( Stem("rimasti"), "rimast");});
test("rimasticava -> rimastic", function() {deepEqual( Stem("rimasticava"), "rimastic");});
test("rimasto -> rimast", function() {deepEqual( Stem("rimasto"), "rimast");});
test("rimasugli -> rimasugl", function() {deepEqual( Stem("rimasugli"), "rimasugl");});
test("rimasuglio -> rimasugl", function() {deepEqual( Stem("rimasuglio"), "rimasugl");});
test("rimbalzata -> rimbalz", function() {deepEqual( Stem("rimbalzata"), "rimbalz");});
test("rimbalzello -> rimbalzell", function() {deepEqual( Stem("rimbalzello"), "rimbalzell");});
test("rimbambito -> rimbamb", function() {deepEqual( Stem("rimbambito"), "rimbamb");});
test("rimbecillivano -> rimbecill", function() {deepEqual( Stem("rimbecillivano"), "rimbecill");});
test("rimboccatura -> rimboccatur", function() {deepEqual( Stem("rimboccatura"), "rimboccatur");});
test("rimbomba -> rimbomb", function() {deepEqual( Stem("rimbomba"), "rimbomb");});
test("rimbombando -> rimbomb", function() {deepEqual( Stem("rimbombando"), "rimbomb");});
test("rimbombar -> rimbomb", function() {deepEqual( Stem("rimbombar"), "rimbomb");});
test("rimbombare -> rimbomb", function() {deepEqual( Stem("rimbombare"), "rimbomb");});
test("rimbombo -> rimbomb", function() {deepEqual( Stem("rimbombo"), "rimbomb");});
test("rimborsati -> rimbors", function() {deepEqual( Stem("rimborsati"), "rimbors");});
test("rimborsi -> rimbors", function() {deepEqual( Stem("rimborsi"), "rimbors");});
test("rimborso -> rimbors", function() {deepEqual( Stem("rimborso"), "rimbors");});
test("rimbuca -> rimbuc", function() {deepEqual( Stem("rimbuca"), "rimbuc");});
test("rimedi -> rimed", function() {deepEqual( Stem("rimedi"), "rimed");});
test("rimediare -> rimed", function() {deepEqual( Stem("rimediare"), "rimed");});
test("rimedii -> rimed", function() {deepEqual( Stem("rimedii"), "rimed");});
test("rimedio -> rimed", function() {deepEqual( Stem("rimedio"), "rimed");});
test("rimembranza -> rimembr", function() {deepEqual( Stem("rimembranza"), "rimembr");});
test("rimembranze -> rimembr", function() {deepEqual( Stem("rimembranze"), "rimembr");});
test("rimenare -> rimen", function() {deepEqual( Stem("rimenare"), "rimen");});
test("rimepire -> rimep", function() {deepEqual( Stem("rimepire"), "rimep");});
test("rimescendo -> rimesc", function() {deepEqual( Stem("rimescendo"), "rimesc");});
test("rimescolandole -> rimescol", function() {deepEqual( Stem("rimescolandole"), "rimescol");});
test("rimescolare -> rimescol", function() {deepEqual( Stem("rimescolare"), "rimescol");});
test("rimescolarsi -> rimescol", function() {deepEqual( Stem("rimescolarsi"), "rimescol");});
test("rimessa -> rimess", function() {deepEqual( Stem("rimessa"), "rimess");});
test("rimessasi -> rimessas", function() {deepEqual( Stem("rimessasi"), "rimessas");});
test("rimesse -> rimess", function() {deepEqual( Stem("rimesse"), "rimess");});
test("rimessi -> rimess", function() {deepEqual( Stem("rimessi"), "rimess");});
test("rimessiticci -> rimessiticc", function() {deepEqual( Stem("rimessiticci"), "rimessiticc");});
test("rimesso -> rimess", function() {deepEqual( Stem("rimesso"), "rimess");});
test("rimestar -> rimest", function() {deepEqual( Stem("rimestar"), "rimest");});
test("rimestare -> rimest", function() {deepEqual( Stem("rimestare"), "rimest");});
test("rimestarle -> rimest", function() {deepEqual( Stem("rimestarle"), "rimest");});
test("rimesti -> rimest", function() {deepEqual( Stem("rimesti"), "rimest");});
test("rimetta -> rimett", function() {deepEqual( Stem("rimetta"), "rimett");});
test("rimette -> rimett", function() {deepEqual( Stem("rimette"), "rimett");});
test("rimettendo -> rimett", function() {deepEqual( Stem("rimettendo"), "rimett");});
test("rimettendosi -> rimett", function() {deepEqual( Stem("rimettendosi"), "rimett");});
test("rimetterci -> rimett", function() {deepEqual( Stem("rimetterci"), "rimett");});
test("rimettere -> rimett", function() {deepEqual( Stem("rimettere"), "rimett");});
test("rimetterebbe -> rimett", function() {deepEqual( Stem("rimetterebbe"), "rimett");});
test("rimetterle -> rimett", function() {deepEqual( Stem("rimetterle"), "rimett");});
test("rimetterlo -> rimett", function() {deepEqual( Stem("rimetterlo"), "rimett");});
test("rimettermi -> rimett", function() {deepEqual( Stem("rimettermi"), "rimett");});
test("rimettersi -> rimett", function() {deepEqual( Stem("rimettersi"), "rimett");});
test("rimettervene -> rimett", function() {deepEqual( Stem("rimettervene"), "rimett");});
test("rimettesse -> rimettess", function() {deepEqual( Stem("rimettesse"), "rimettess");});
test("rimettetevi -> rimettet", function() {deepEqual( Stem("rimettetevi"), "rimettet");});
test("rimetteva -> rimett", function() {deepEqual( Stem("rimetteva"), "rimett");});
test("rimettiamola -> rimettiamol", function() {deepEqual( Stem("rimettiamola"), "rimettiamol");});
test("rimettono -> rimett", function() {deepEqual( Stem("rimettono"), "rimett");});
test("rimini -> rimin", function() {deepEqual( Stem("rimini"), "rimin");});
test("rimischiavano -> rimisc", function() {deepEqual( Stem("rimischiavano"), "rimisc");});
test("rimise -> rimis", function() {deepEqual( Stem("rimise"), "rimis");});
test("rimmel -> rimmel", function() {deepEqual( Stem("rimmel"), "rimmel");});
test("rimodellato -> rimodell", function() {deepEqual( Stem("rimodellato"), "rimodell");});
test("rimondi -> rimond", function() {deepEqual( Stem("rimondi"), "rimond");});
test("rimontare -> rimont", function() {deepEqual( Stem("rimontare"), "rimont");});
test("rimorchiatori -> rimorc", function() {deepEqual( Stem("rimorchiatori"), "rimorc");});
test("rimordendogli -> rimord", function() {deepEqual( Stem("rimordendogli"), "rimord");});
test("rimorsi -> rimors", function() {deepEqual( Stem("rimorsi"), "rimors");});
test("rimorso -> rimors", function() {deepEqual( Stem("rimorso"), "rimors");});
test("rimosse -> rimoss", function() {deepEqual( Stem("rimosse"), "rimoss");});
test("rimossi -> rimoss", function() {deepEqual( Stem("rimossi"), "rimoss");});
test("rimosso -> rimoss", function() {deepEqual( Stem("rimosso"), "rimoss");});
test("rimostranza -> rimostr", function() {deepEqual( Stem("rimostranza"), "rimostr");});
test("rimostranze -> rimostr", function() {deepEqual( Stem("rimostranze"), "rimostr");});
test("rimpallato -> rimpall", function() {deepEqual( Stem("rimpallato"), "rimpall");});
test("rimpatriata -> rimpatr", function() {deepEqual( Stem("rimpatriata"), "rimpatr");});
test("rimpatrio -> rimpatr", function() {deepEqual( Stem("rimpatrio"), "rimpatr");});
test("rimpetto -> rimpett", function() {deepEqual( Stem("rimpetto"), "rimpett");});
test("rimpiango -> rimpiang", function() {deepEqual( Stem("rimpiango"), "rimpiang");});
test("rimpiatta -> rimpiatt", function() {deepEqual( Stem("rimpiatta"), "rimpiatt");});
test("rimpiattando -> rimpiatt", function() {deepEqual( Stem("rimpiattando"), "rimpiatt");});
test("rimpiattato -> rimpiatt", function() {deepEqual( Stem("rimpiattato"), "rimpiatt");});
test("rimpiazzato -> rimpiazz", function() {deepEqual( Stem("rimpiazzato"), "rimpiazz");});
test("rimpingua -> rimpingu", function() {deepEqual( Stem("rimpingua"), "rimpingu");});
test("rimprovera -> rimprover", function() {deepEqual( Stem("rimprovera"), "rimprover");});
test("rimproverare -> rimprover", function() {deepEqual( Stem("rimproverare"), "rimprover");});
test("rimproverate -> rimprover", function() {deepEqual( Stem("rimproverate"), "rimprover");});
test("rimproveratemi -> rimproveratem", function() {deepEqual( Stem("rimproveratemi"), "rimproveratem");});
test("rimproverato -> rimprover", function() {deepEqual( Stem("rimproverato"), "rimprover");});
test("rimproveri -> rimprover", function() {deepEqual( Stem("rimproveri"), "rimprover");});
test("rimprovero -> rimprover", function() {deepEqual( Stem("rimprovero"), "rimprover");});
test("rimuovendo -> rimuov", function() {deepEqual( Stem("rimuovendo"), "rimuov");});
test("rimuoverle -> rimuov", function() {deepEqual( Stem("rimuoverle"), "rimuov");});
test("rin -> rin", function() {deepEqual( Stem("rin"), "rin");});
test("rinaldo -> rinald", function() {deepEqual( Stem("rinaldo"), "rinald");});
test("rinasce -> rinasc", function() {deepEqual( Stem("rinasce"), "rinasc");});
test("rinascente -> rinascent", function() {deepEqual( Stem("rinascente"), "rinascent");});
test("rinascenti -> rinascent", function() {deepEqual( Stem("rinascenti"), "rinascent");});
test("rinascere -> rinasc", function() {deepEqual( Stem("rinascere"), "rinasc");});
test("rinascesse -> rinascess", function() {deepEqual( Stem("rinascesse"), "rinascess");});
test("rinasceva -> rinasc", function() {deepEqual( Stem("rinasceva"), "rinasc");});
test("rinascimento -> rinasc", function() {deepEqual( Stem("rinascimento"), "rinasc");});
test("rinascita -> rinasc", function() {deepEqual( Stem("rinascita"), "rinasc");});
test("rincamminandosi -> rincammin", function() {deepEqual( Stem("rincamminandosi"), "rincammin");});
test("rincamminarono -> rincammin", function() {deepEqual( Stem("rincamminarono"), "rincammin");});
test("rincamminarsi -> rincammin", function() {deepEqual( Stem("rincamminarsi"), "rincammin");});
test("rincamminino -> rincamminin", function() {deepEqual( Stem("rincamminino"), "rincamminin");});
test("rincamminò -> rincammin", function() {deepEqual( Stem("rincamminò"), "rincammin");});
test("rincantucciata -> rincantucc", function() {deepEqual( Stem("rincantucciata"), "rincantucc");});
test("rincantucciato -> rincantucc", function() {deepEqual( Stem("rincantucciato"), "rincantucc");});
test("rincarare -> rincar", function() {deepEqual( Stem("rincarare"), "rincar");});
test("rincari -> rincar", function() {deepEqual( Stem("rincari"), "rincar");});
test("rincaro -> rincar", function() {deepEqual( Stem("rincaro"), "rincar");});
test("rinchiusa -> rinchius", function() {deepEqual( Stem("rinchiusa"), "rinchius");});
test("rinchiuse -> rinchius", function() {deepEqual( Stem("rinchiuse"), "rinchius");});
test("rinchiusi -> rinchius", function() {deepEqual( Stem("rinchiusi"), "rinchius");});
test("rinchiuso -> rinchius", function() {deepEqual( Stem("rinchiuso"), "rinchius");});
test("rincivilito -> rincivil", function() {deepEqual( Stem("rincivilito"), "rincivil");});
test("rincomincia -> rincominc", function() {deepEqual( Stem("rincomincia"), "rincominc");});
test("rincon -> rincon", function() {deepEqual( Stem("rincon"), "rincon");});
test("rincoraggita -> rincoragg", function() {deepEqual( Stem("rincoraggita"), "rincoragg");});
test("rincorare -> rincor", function() {deepEqual( Stem("rincorare"), "rincor");});
test("rincorato -> rincor", function() {deepEqual( Stem("rincorato"), "rincor");});
test("rincorò -> rincor", function() {deepEqual( Stem("rincorò"), "rincor");});
test("rincorrono -> rincorr", function() {deepEqual( Stem("rincorrono"), "rincorr");});
test("rincorsa -> rincors", function() {deepEqual( Stem("rincorsa"), "rincors");});
test("rincorse -> rincors", function() {deepEqual( Stem("rincorse"), "rincors");});
test("rinfaccia -> rinfacc", function() {deepEqual( Stem("rinfaccia"), "rinfacc");});
test("rinfacciamenti -> rinfacc", function() {deepEqual( Stem("rinfacciamenti"), "rinfacc");});
test("rinforzar -> rinforz", function() {deepEqual( Stem("rinforzar"), "rinforz");});
test("rinforzare -> rinforz", function() {deepEqual( Stem("rinforzare"), "rinforz");});
test("rinforzate -> rinforz", function() {deepEqual( Stem("rinforzate"), "rinforz");});
test("rinforzi -> rinforz", function() {deepEqual( Stem("rinforzi"), "rinforz");});
test("rinforzo -> rinforz", function() {deepEqual( Stem("rinforzo"), "rinforz");});
test("rinfrancare -> rinfranc", function() {deepEqual( Stem("rinfrancare"), "rinfranc");});
test("rinfrancata -> rinfranc", function() {deepEqual( Stem("rinfrancata"), "rinfranc");});
test("rinfrancato -> rinfranc", function() {deepEqual( Stem("rinfrancato"), "rinfranc");});
test("rinfrescare -> rinfresc", function() {deepEqual( Stem("rinfrescare"), "rinfresc");});
test("rinfrescata -> rinfresc", function() {deepEqual( Stem("rinfrescata"), "rinfresc");});
test("rinfrescato -> rinfresc", function() {deepEqual( Stem("rinfrescato"), "rinfresc");});
test("rinfreschi -> rinfresc", function() {deepEqual( Stem("rinfreschi"), "rinfresc");});
test("rinfusa -> rinfus", function() {deepEqual( Stem("rinfusa"), "rinfus");});
test("rinfuse -> rinfus", function() {deepEqual( Stem("rinfuse"), "rinfus");});
test("ring -> ring", function() {deepEqual( Stem("ring"), "ring");});
test("ringalluzziti -> ringalluzz", function() {deepEqual( Stem("ringalluzziti"), "ringalluzz");});
test("ringiovanito -> ringiovan", function() {deepEqual( Stem("ringiovanito"), "ringiovan");});
test("ringiovinire -> ringiovin", function() {deepEqual( Stem("ringiovinire"), "ringiovin");});
test("ringrazi -> ringraz", function() {deepEqual( Stem("ringrazi"), "ringraz");});
test("ringrazia -> ringraz", function() {deepEqual( Stem("ringrazia"), "ringraz");});
test("ringraziamenti -> ringraz", function() {deepEqual( Stem("ringraziamenti"), "ringraz");});
test("ringraziamento -> ringraz", function() {deepEqual( Stem("ringraziamento"), "ringraz");});
test("ringraziamo -> ringraz", function() {deepEqual( Stem("ringraziamo"), "ringraz");});
test("ringraziando -> ringraz", function() {deepEqual( Stem("ringraziando"), "ringraz");});
test("ringraziandolo -> ringraz", function() {deepEqual( Stem("ringraziandolo"), "ringraz");});
test("ringraziandosi -> ringraz", function() {deepEqual( Stem("ringraziandosi"), "ringraz");});
test("ringraziar -> ringraz", function() {deepEqual( Stem("ringraziar"), "ringraz");});
test("ringraziare -> ringraz", function() {deepEqual( Stem("ringraziare"), "ringraz");});
test("ringraziarla -> ringraz", function() {deepEqual( Stem("ringraziarla"), "ringraz");});
test("ringraziarlo -> ringraz", function() {deepEqual( Stem("ringraziarlo"), "ringraz");});
test("ringraziate -> ringraz", function() {deepEqual( Stem("ringraziate"), "ringraz");});
test("ringraziato -> ringraz", function() {deepEqual( Stem("ringraziato"), "ringraz");});
test("ringraziava -> ringraz", function() {deepEqual( Stem("ringraziava"), "ringraz");});
test("ringrazio -> ringraz", function() {deepEqual( Stem("ringrazio"), "ringraz");});
test("ringraziò -> ringraz", function() {deepEqual( Stem("ringraziò"), "ringraz");});
test("rinino -> rinin", function() {deepEqual( Stem("rinino"), "rinin");});
test("rinnegare -> rinneg", function() {deepEqual( Stem("rinnegare"), "rinneg");});
test("rinnegato -> rinneg", function() {deepEqual( Stem("rinnegato"), "rinneg");});
test("rinnova -> rinnov", function() {deepEqual( Stem("rinnova"), "rinnov");});
test("rinnovabili -> rinnov", function() {deepEqual( Stem("rinnovabili"), "rinnov");});
test("rinnovamento -> rinnov", function() {deepEqual( Stem("rinnovamento"), "rinnov");});
test("rinnovano -> rinnov", function() {deepEqual( Stem("rinnovano"), "rinnov");});
test("rinnovare -> rinnov", function() {deepEqual( Stem("rinnovare"), "rinnov");});
test("rinnovarlo -> rinnov", function() {deepEqual( Stem("rinnovarlo"), "rinnov");});
test("rinnovarono -> rinnov", function() {deepEqual( Stem("rinnovarono"), "rinnov");});
test("rinnovarsi -> rinnov", function() {deepEqual( Stem("rinnovarsi"), "rinnov");});
test("rinnovata -> rinnov", function() {deepEqual( Stem("rinnovata"), "rinnov");});
test("rinnovati -> rinnov", function() {deepEqual( Stem("rinnovati"), "rinnov");});
test("rinnovato -> rinnov", function() {deepEqual( Stem("rinnovato"), "rinnov");});
test("rinnovava -> rinnov", function() {deepEqual( Stem("rinnovava"), "rinnov");});
test("rinnovavano -> rinnov", function() {deepEqual( Stem("rinnovavano"), "rinnov");});
test("rinnovo -> rinnov", function() {deepEqual( Stem("rinnovo"), "rinnov");});
test("rinnovò -> rinnov", function() {deepEqual( Stem("rinnovò"), "rinnov");});
test("rino -> rin", function() {deepEqual( Stem("rino"), "rin");});
test("rinomanza -> rinom", function() {deepEqual( Stem("rinomanza"), "rinom");});
test("rintanarsi -> rintan", function() {deepEqual( Stem("rintanarsi"), "rintan");});
test("rintanato -> rintan", function() {deepEqual( Stem("rintanato"), "rintan");});
test("rintocchi -> rintocc", function() {deepEqual( Stem("rintocchi"), "rintocc");});
test("rintoppasse -> rintopp", function() {deepEqual( Stem("rintoppasse"), "rintopp");});
test("rintraccia -> rintracc", function() {deepEqual( Stem("rintraccia"), "rintracc");});
test("rintracciare -> rintracc", function() {deepEqual( Stem("rintracciare"), "rintracc");});
test("rintracciato -> rintracc", function() {deepEqual( Stem("rintracciato"), "rintracc");});
test("rintrona -> rintron", function() {deepEqual( Stem("rintrona"), "rintron");});
test("rintuzzare -> rintuzz", function() {deepEqual( Stem("rintuzzare"), "rintuzz");});
test("rinuncia -> rinunc", function() {deepEqual( Stem("rinuncia"), "rinunc");});
test("rinunciando -> rinunc", function() {deepEqual( Stem("rinunciando"), "rinunc");});
test("rinunciare -> rinunc", function() {deepEqual( Stem("rinunciare"), "rinunc");});
test("rinunciato -> rinunc", function() {deepEqual( Stem("rinunciato"), "rinunc");});
test("rinunciava -> rinunc", function() {deepEqual( Stem("rinunciava"), "rinunc");});
test("rinunziare -> rinunz", function() {deepEqual( Stem("rinunziare"), "rinunz");});
test("rinunziato -> rinunz", function() {deepEqual( Stem("rinunziato"), "rinunz");});
test("rinunzio -> rinunz", function() {deepEqual( Stem("rinunzio"), "rinunz");});
test("rinvenire -> rinven", function() {deepEqual( Stem("rinvenire"), "rinven");});
test("rinvenne -> rinvenn", function() {deepEqual( Stem("rinvenne"), "rinvenn");});
test("rinvenuta -> rinven", function() {deepEqual( Stem("rinvenuta"), "rinven");});
test("rinvenuto -> rinven", function() {deepEqual( Stem("rinvenuto"), "rinven");});
test("rinverdiranno -> rinverd", function() {deepEqual( Stem("rinverdiranno"), "rinverd");});
test("rinverdire -> rinverd", function() {deepEqual( Stem("rinverdire"), "rinverd");});
test("rinverdite -> rinverd", function() {deepEqual( Stem("rinverdite"), "rinverd");});
test("rinviare -> rinv", function() {deepEqual( Stem("rinviare"), "rinv");});
test("rinviata -> rinv", function() {deepEqual( Stem("rinviata"), "rinv");});
test("rinviati -> rinv", function() {deepEqual( Stem("rinviati"), "rinv");});
test("rinviato -> rinv", function() {deepEqual( Stem("rinviato"), "rinv");});
test("rinvigorisce -> rinvigor", function() {deepEqual( Stem("rinvigorisce"), "rinvigor");});
test("rinvigorita -> rinvigor", function() {deepEqual( Stem("rinvigorita"), "rinvigor");});
test("rinvii -> rinv", function() {deepEqual( Stem("rinvii"), "rinv");});
test("rinviliare -> rinvil", function() {deepEqual( Stem("rinviliare"), "rinvil");});
test("rinvio -> rinv", function() {deepEqual( Stem("rinvio"), "rinv");});
test("rinvoltati -> rinvolt", function() {deepEqual( Stem("rinvoltati"), "rinvolt");});
test("rio -> rio", function() {deepEqual( Stem("rio"), "rio");});
test("riofferti -> rioff", function() {deepEqual( Stem("riofferti"), "rioff");});
test("riondino -> riondin", function() {deepEqual( Stem("riondino"), "riondin");});
test("riordino -> riordin", function() {deepEqual( Stem("riordino"), "riordin");});
test("riorganizzare -> riorganizz", function() {deepEqual( Stem("riorganizzare"), "riorganizz");});
test("riorganizzazione -> riorganizz", function() {deepEqual( Stem("riorganizzazione"), "riorganizz");});
test("ripa -> rip", function() {deepEqual( Stem("ripa"), "rip");});
test("ripaga -> ripag", function() {deepEqual( Stem("ripaga"), "ripag");});
test("ripam -> ripam", function() {deepEqual( Stem("ripam"), "ripam");});
test("ripamonti -> ripamont", function() {deepEqual( Stem("ripamonti"), "ripamont");});
test("ripamontii -> ripamont", function() {deepEqual( Stem("ripamontii"), "ripamont");});
test("ripara -> ripar", function() {deepEqual( Stem("ripara"), "ripar");});
test("riparabile -> ripar", function() {deepEqual( Stem("riparabile"), "ripar");});
test("riparabili -> ripar", function() {deepEqual( Stem("riparabili"), "ripar");});
test("riparar -> ripar", function() {deepEqual( Stem("riparar"), "ripar");});
test("riparare -> ripar", function() {deepEqual( Stem("riparare"), "ripar");});
test("ripararsi -> ripar", function() {deepEqual( Stem("ripararsi"), "ripar");});
test("riparati -> ripar", function() {deepEqual( Stem("riparati"), "ripar");});
test("riparato -> ripar", function() {deepEqual( Stem("riparato"), "ripar");});
test("riparazione -> ripar", function() {deepEqual( Stem("riparazione"), "ripar");});
test("riparazioni -> ripar", function() {deepEqual( Stem("riparazioni"), "ripar");});
test("riparerà -> ripar", function() {deepEqual( Stem("riparerà"), "ripar");});
test("ripari -> ripar", function() {deepEqual( Stem("ripari"), "ripar");});
test("riparlava -> riparl", function() {deepEqual( Stem("riparlava"), "riparl");});
test("riparo -> ripar", function() {deepEqual( Stem("riparo"), "ripar");});
test("riparte -> ripart", function() {deepEqual( Stem("riparte"), "ripart");});
test("ripartendo -> ripart", function() {deepEqual( Stem("ripartendo"), "ripart");});
test("ripartimentale -> ripartimental", function() {deepEqual( Stem("ripartimentale"), "ripartimental");});
test("ripartirà -> ripart", function() {deepEqual( Stem("ripartirà"), "ripart");});
test("ripartire -> ripart", function() {deepEqual( Stem("ripartire"), "ripart");});
test("ripartirono -> ripart", function() {deepEqual( Stem("ripartirono"), "ripart");});
test("ripartiti -> ripart", function() {deepEqual( Stem("ripartiti"), "ripart");});
test("ripartito -> ripart", function() {deepEqual( Stem("ripartito"), "ripart");});
test("ripartizione -> ripartizion", function() {deepEqual( Stem("ripartizione"), "ripartizion");});
test("ripassando -> ripass", function() {deepEqual( Stem("ripassando"), "ripass");});
test("ripassavano -> ripass", function() {deepEqual( Stem("ripassavano"), "ripass");});
test("ripasso -> ripass", function() {deepEqual( Stem("ripasso"), "ripass");});
test("ripassò -> ripass", function() {deepEqual( Stem("ripassò"), "ripass");});
test("ripensa -> ripens", function() {deepEqual( Stem("ripensa"), "ripens");});
test("ripensamento -> ripens", function() {deepEqual( Stem("ripensamento"), "ripens");});
test("ripensando -> ripens", function() {deepEqual( Stem("ripensando"), "ripens");});
test("ripensarne -> ripens", function() {deepEqual( Stem("ripensarne"), "ripens");});
test("ripensava -> ripens", function() {deepEqual( Stem("ripensava"), "ripens");});
test("ripentimenti -> ripent", function() {deepEqual( Stem("ripentimenti"), "ripent");});
test("ripercorso -> ripercors", function() {deepEqual( Stem("ripercorso"), "ripercors");});
test("ripercuotersi -> ripercuot", function() {deepEqual( Stem("ripercuotersi"), "ripercuot");});
test("ripercussioni -> ripercussion", function() {deepEqual( Stem("ripercussioni"), "ripercussion");});
test("riperdere -> riperd", function() {deepEqual( Stem("riperdere"), "riperd");});
test("ripescherebbero -> ripesc", function() {deepEqual( Stem("ripescherebbero"), "ripesc");});
test("ripete -> rip", function() {deepEqual( Stem("ripete"), "rip");});
test("ripeté -> ripet", function() {deepEqual( Stem("ripeté"), "ripet");});
test("ripetendo -> ripet", function() {deepEqual( Stem("ripetendo"), "ripet");});
test("ripeter -> ripeter", function() {deepEqual( Stem("ripeter"), "ripeter");});
test("ripetere -> ripet", function() {deepEqual( Stem("ripetere"), "ripet");});
test("ripeteremo -> ripet", function() {deepEqual( Stem("ripeteremo"), "ripet");});
test("ripetergli -> ripet", function() {deepEqual( Stem("ripetergli"), "ripet");});
test("ripeterle -> ripet", function() {deepEqual( Stem("ripeterle"), "ripet");});
test("ripeteron -> ripeteron", function() {deepEqual( Stem("ripeteron"), "ripeteron");});
test("ripetersi -> ripet", function() {deepEqual( Stem("ripetersi"), "ripet");});
test("ripeteva -> ripet", function() {deepEqual( Stem("ripeteva"), "ripet");});
test("ripetevan -> ripetevan", function() {deepEqual( Stem("ripetevan"), "ripetevan");});
test("ripetevano -> ripet", function() {deepEqual( Stem("ripetevano"), "ripet");});
test("ripetizione -> ripetizion", function() {deepEqual( Stem("ripetizione"), "ripetizion");});
test("ripeto -> ripet", function() {deepEqual( Stem("ripeto"), "ripet");});
test("ripetono -> ripet", function() {deepEqual( Stem("ripetono"), "ripet");});
test("ripetuta -> ripet", function() {deepEqual( Stem("ripetuta"), "ripet");});
test("ripetutamente -> ripetut", function() {deepEqual( Stem("ripetutamente"), "ripetut");});
test("ripetute -> ripet", function() {deepEqual( Stem("ripetute"), "ripet");});
test("ripetuti -> ripet", function() {deepEqual( Stem("ripetuti"), "ripet");});
test("ripetuto -> ripet", function() {deepEqual( Stem("ripetuto"), "ripet");});
test("ripiano -> rip", function() {deepEqual( Stem("ripiano"), "rip");});
test("ripiantano -> ripiant", function() {deepEqual( Stem("ripiantano"), "ripiant");});
test("ripicchia -> ripicc", function() {deepEqual( Stem("ripicchia"), "ripicc");});
test("ripide -> ripid", function() {deepEqual( Stem("ripide"), "ripid");});
test("ripidi -> ripid", function() {deepEqual( Stem("ripidi"), "ripid");});
test("ripiegati -> ripieg", function() {deepEqual( Stem("ripiegati"), "ripieg");});
test("ripiegava -> ripieg", function() {deepEqual( Stem("ripiegava"), "ripieg");});
test("ripieghi -> ripieg", function() {deepEqual( Stem("ripieghi"), "ripieg");});
test("ripiego -> ripieg", function() {deepEqual( Stem("ripiego"), "ripieg");});
test("ripieni -> ripien", function() {deepEqual( Stem("ripieni"), "ripien");});
test("ripieno -> ripien", function() {deepEqual( Stem("ripieno"), "ripien");});
test("ripigia -> ripig", function() {deepEqual( Stem("ripigia"), "ripig");});
test("ripigliar -> ripigl", function() {deepEqual( Stem("ripigliar"), "ripigl");});
test("ripigliava -> ripigl", function() {deepEqual( Stem("ripigliava"), "ripigl");});
test("ripigliò -> ripigl", function() {deepEqual( Stem("ripigliò"), "ripigl");});
test("ripiombò -> ripiomb", function() {deepEqual( Stem("ripiombò"), "ripiomb");});
test("riponendole -> ripon", function() {deepEqual( Stem("riponendole"), "ripon");});
test("riponeteli -> riponetel", function() {deepEqual( Stem("riponeteli"), "riponetel");});
test("riponeva -> ripon", function() {deepEqual( Stem("riponeva"), "ripon");});
test("ripongo -> ripong", function() {deepEqual( Stem("ripongo"), "ripong");});
test("riporlo -> riporl", function() {deepEqual( Stem("riporlo"), "riporl");});
test("riporre -> riporr", function() {deepEqual( Stem("riporre"), "riporr");});
test("riporta -> riport", function() {deepEqual( Stem("riporta"), "riport");});
test("riportando -> riport", function() {deepEqual( Stem("riportando"), "riport");});
test("riportano -> riport", function() {deepEqual( Stem("riportano"), "riport");});
test("riportare -> riport", function() {deepEqual( Stem("riportare"), "riport");});
test("riportarli -> riport", function() {deepEqual( Stem("riportarli"), "riport");});
test("riportarlo -> riport", function() {deepEqual( Stem("riportarlo"), "riport");});
test("riportarono -> riport", function() {deepEqual( Stem("riportarono"), "riport");});
test("riportata -> riport", function() {deepEqual( Stem("riportata"), "riport");});
test("riportate -> riport", function() {deepEqual( Stem("riportate"), "riport");});
test("riportati -> riport", function() {deepEqual( Stem("riportati"), "riport");});
test("riportato -> riport", function() {deepEqual( Stem("riportato"), "riport");});
test("riporterà -> riport", function() {deepEqual( Stem("riporterà"), "riport");});
test("riportò -> riport", function() {deepEqual( Stem("riportò"), "riport");});
test("riposa -> ripos", function() {deepEqual( Stem("riposa"), "ripos");});
test("riposar -> ripos", function() {deepEqual( Stem("riposar"), "ripos");});
test("riposare -> ripos", function() {deepEqual( Stem("riposare"), "ripos");});
test("riposarlo -> ripos", function() {deepEqual( Stem("riposarlo"), "ripos");});
test("riposarono -> ripos", function() {deepEqual( Stem("riposarono"), "ripos");});
test("riposarsi -> ripos", function() {deepEqual( Stem("riposarsi"), "ripos");});
test("riposarti -> ripos", function() {deepEqual( Stem("riposarti"), "ripos");});
test("riposata -> ripos", function() {deepEqual( Stem("riposata"), "ripos");});
test("riposate -> ripos", function() {deepEqual( Stem("riposate"), "ripos");});
test("riposato -> ripos", function() {deepEqual( Stem("riposato"), "ripos");});
test("ripose -> ripos", function() {deepEqual( Stem("ripose"), "ripos");});
test("riposo -> ripos", function() {deepEqual( Stem("riposo"), "ripos");});
test("riposta -> ripost", function() {deepEqual( Stem("riposta"), "ripost");});
test("riposte -> ripost", function() {deepEqual( Stem("riposte"), "ripost");});
test("riposto -> ripost", function() {deepEqual( Stem("riposto"), "ripost");});
test("ripregar -> ripreg", function() {deepEqual( Stem("ripregar"), "ripreg");});
test("riprenda -> ripr", function() {deepEqual( Stem("riprenda"), "ripr");});
test("riprende -> ripr", function() {deepEqual( Stem("riprende"), "ripr");});
test("riprendendo -> riprend", function() {deepEqual( Stem("riprendendo"), "riprend");});
test("riprendendola -> riprend", function() {deepEqual( Stem("riprendendola"), "riprend");});
test("riprender -> riprender", function() {deepEqual( Stem("riprender"), "riprender");});
test("riprenderà -> riprend", function() {deepEqual( Stem("riprenderà"), "riprend");});
test("riprenderanno -> riprend", function() {deepEqual( Stem("riprenderanno"), "riprend");});
test("riprendere -> riprend", function() {deepEqual( Stem("riprendere"), "riprend");});
test("riprenderle -> riprend", function() {deepEqual( Stem("riprenderle"), "riprend");});
test("riprenderli -> riprend", function() {deepEqual( Stem("riprenderli"), "riprend");});
test("riprenderlo -> riprend", function() {deepEqual( Stem("riprenderlo"), "riprend");});
test("riprendersi -> riprend", function() {deepEqual( Stem("riprendersi"), "riprend");});
test("riprendervi -> riprend", function() {deepEqual( Stem("riprendervi"), "riprend");});
test("riprendeva -> riprend", function() {deepEqual( Stem("riprendeva"), "riprend");});
test("riprendiamo -> riprend", function() {deepEqual( Stem("riprendiamo"), "riprend");});
test("riprendono -> riprend", function() {deepEqual( Stem("riprendono"), "riprend");});
test("ripresa -> ripres", function() {deepEqual( Stem("ripresa"), "ripres");});
test("riprese -> ripres", function() {deepEqual( Stem("riprese"), "ripres");});
test("ripresentarsi -> ripresent", function() {deepEqual( Stem("ripresentarsi"), "ripresent");});
test("ripresero -> ripreser", function() {deepEqual( Stem("ripresero"), "ripreser");});
test("ripresi -> ripres", function() {deepEqual( Stem("ripresi"), "ripres");});
test("ripreso -> ripres", function() {deepEqual( Stem("ripreso"), "ripres");});
test("riprincipiare -> riprincip", function() {deepEqual( Stem("riprincipiare"), "riprincip");});
test("ripristinare -> ripristin", function() {deepEqual( Stem("ripristinare"), "ripristin");});
test("ripristinate -> ripristin", function() {deepEqual( Stem("ripristinate"), "ripristin");});
test("ripristinato -> ripristin", function() {deepEqual( Stem("ripristinato"), "ripristin");});
test("riprodotto -> riprodott", function() {deepEqual( Stem("riprodotto"), "riprodott");});
test("riprodurla -> riprodurl", function() {deepEqual( Stem("riprodurla"), "riprodurl");});
test("ripropone -> ripropon", function() {deepEqual( Stem("ripropone"), "ripropon");});
test("ripropongo -> ripropong", function() {deepEqual( Stem("ripropongo"), "ripropong");});
test("riproposta -> ripropost", function() {deepEqual( Stem("riproposta"), "ripropost");});
test("riproposto -> ripropost", function() {deepEqual( Stem("riproposto"), "ripropost");});
test("riprovarci -> riprov", function() {deepEqual( Stem("riprovarci"), "riprov");});
test("ripubblicare -> ripubblic", function() {deepEqual( Stem("ripubblicare"), "ripubblic");});
test("ripubblicate -> ripubblic", function() {deepEqual( Stem("ripubblicate"), "ripubblic");});
test("ripugnanza -> ripugn", function() {deepEqual( Stem("ripugnanza"), "ripugn");});
test("ripugnanze -> ripugn", function() {deepEqual( Stem("ripugnanze"), "ripugn");});
test("ripulire -> ripul", function() {deepEqual( Stem("ripulire"), "ripul");});
test("ripulita -> ripul", function() {deepEqual( Stem("ripulita"), "ripul");});
test("ripulse -> ripuls", function() {deepEqual( Stem("ripulse"), "ripuls");});
test("riputate -> riput", function() {deepEqual( Stem("riputate"), "riput");});
test("riputati -> riput", function() {deepEqual( Stem("riputati"), "riput");});
test("riputatissime -> riputatissim", function() {deepEqual( Stem("riputatissime"), "riputatissim");});
test("riputato -> riput", function() {deepEqual( Stem("riputato"), "riput");});
test("riputazion -> riputazion", function() {deepEqual( Stem("riputazion"), "riputazion");});
test("riputazione -> riput", function() {deepEqual( Stem("riputazione"), "riput");});
test("riputazioni -> riput", function() {deepEqual( Stem("riputazioni"), "riput");});
test("riqualificazione -> riqualif", function() {deepEqual( Stem("riqualificazione"), "riqualif");});
test("rirnprovero -> rirnprover", function() {deepEqual( Stem("rirnprovero"), "rirnprover");});
test("ris -> ris", function() {deepEqual( Stem("ris"), "ris");});
test("risa -> ris", function() {deepEqual( Stem("risa"), "ris");});
test("risale -> risal", function() {deepEqual( Stem("risale"), "risal");});
test("risalgono -> risalg", function() {deepEqual( Stem("risalgono"), "risalg");});
test("risalire -> risal", function() {deepEqual( Stem("risalire"), "risal");});
test("risalite -> risal", function() {deepEqual( Stem("risalite"), "risal");});
test("risalito -> risal", function() {deepEqual( Stem("risalito"), "risal");});
test("risaliva -> risal", function() {deepEqual( Stem("risaliva"), "risal");});
test("risaltando -> risalt", function() {deepEqual( Stem("risaltando"), "risalt");});
test("risaltare -> risalt", function() {deepEqual( Stem("risaltare"), "risalt");});
test("risalto -> risalt", function() {deepEqual( Stem("risalto"), "risalt");});
test("risanamento -> risan", function() {deepEqual( Stem("risanamento"), "risan");});
test("risanare -> risan", function() {deepEqual( Stem("risanare"), "risan");});
test("risaper -> risaper", function() {deepEqual( Stem("risaper"), "risaper");});
test("risapere -> risap", function() {deepEqual( Stem("risapere"), "risap");});
test("risaputa -> risap", function() {deepEqual( Stem("risaputa"), "risap");});
test("risaputo -> risap", function() {deepEqual( Stem("risaputo"), "risap");});
test("risarcimento -> risarc", function() {deepEqual( Stem("risarcimento"), "risarc");});
test("risarcire -> risarc", function() {deepEqual( Stem("risarcire"), "risarc");});
test("risarcirlo -> risarc", function() {deepEqual( Stem("risarcirlo"), "risarc");});
test("risate -> ris", function() {deepEqual( Stem("risate"), "ris");});
test("riscaldamento -> riscald", function() {deepEqual( Stem("riscaldamento"), "riscald");});
test("riscaldare -> riscald", function() {deepEqual( Stem("riscaldare"), "riscald");});
test("riscaldarsi -> riscald", function() {deepEqual( Stem("riscaldarsi"), "riscald");});
test("riscaldata -> riscald", function() {deepEqual( Stem("riscaldata"), "riscald");});
test("riscaldati -> riscald", function() {deepEqual( Stem("riscaldati"), "riscald");});
test("riscaldato -> riscald", function() {deepEqual( Stem("riscaldato"), "riscald");});
test("riscatta -> riscatt", function() {deepEqual( Stem("riscatta"), "riscatt");});
test("riscattati -> riscatt", function() {deepEqual( Stem("riscattati"), "riscatt");});
test("riscattavano -> riscatt", function() {deepEqual( Stem("riscattavano"), "riscatt");});
test("riscatto -> riscatt", function() {deepEqual( Stem("riscatto"), "riscatt");});
test("rischi -> risc", function() {deepEqual( Stem("rischi"), "risc");});
test("rischia -> risc", function() {deepEqual( Stem("rischia"), "risc");});
test("rischiano -> risc", function() {deepEqual( Stem("rischiano"), "risc");});
test("rischiarato -> rischiar", function() {deepEqual( Stem("rischiarato"), "rischiar");});
test("rischiare -> risc", function() {deepEqual( Stem("rischiare"), "risc");});
test("rischiato -> risc", function() {deepEqual( Stem("rischiato"), "risc");});
test("rischierebbero -> risc", function() {deepEqual( Stem("rischierebbero"), "risc");});
test("rischio -> risc", function() {deepEqual( Stem("rischio"), "risc");});
test("rischiosa -> rischios", function() {deepEqual( Stem("rischiosa"), "rischios");});
test("rischiose -> rischios", function() {deepEqual( Stem("rischiose"), "rischios");});
test("rischiosità -> rischios", function() {deepEqual( Stem("rischiosità"), "rischios");});
test("rischioso -> rischios", function() {deepEqual( Stem("rischioso"), "rischios");});
test("riscontra -> riscontr", function() {deepEqual( Stem("riscontra"), "riscontr");});
test("riscontrandole -> riscontr", function() {deepEqual( Stem("riscontrandole"), "riscontr");});
test("riscontrandosi -> riscontr", function() {deepEqual( Stem("riscontrandosi"), "riscontr");});
test("riscontrano -> riscontr", function() {deepEqual( Stem("riscontrano"), "riscontr");});
test("riscontrata -> riscontr", function() {deepEqual( Stem("riscontrata"), "riscontr");});
test("riscontrati -> riscontr", function() {deepEqual( Stem("riscontrati"), "riscontr");});
test("riscontrato -> riscontr", function() {deepEqual( Stem("riscontrato"), "riscontr");});
test("riscontri -> riscontr", function() {deepEqual( Stem("riscontri"), "riscontr");});
test("riscontro -> riscontr", function() {deepEqual( Stem("riscontro"), "riscontr");});
test("riscoprire -> riscopr", function() {deepEqual( Stem("riscoprire"), "riscopr");});
test("riscossa -> riscoss", function() {deepEqual( Stem("riscossa"), "riscoss");});
test("riscosse -> riscoss", function() {deepEqual( Stem("riscosse"), "riscoss");});
test("riscosso -> riscoss", function() {deepEqual( Stem("riscosso"), "riscoss");});
test("riscossone -> riscosson", function() {deepEqual( Stem("riscossone"), "riscosson");});
test("riscotendosi -> riscot", function() {deepEqual( Stem("riscotendosi"), "riscot");});
test("riscoter -> riscoter", function() {deepEqual( Stem("riscoter"), "riscoter");});
test("riscotere -> riscot", function() {deepEqual( Stem("riscotere"), "riscot");});
test("riscoteva -> riscot", function() {deepEqual( Stem("riscoteva"), "riscot");});
test("riscotono -> riscot", function() {deepEqual( Stem("riscotono"), "riscot");});
test("riscrivere -> riscriv", function() {deepEqual( Stem("riscrivere"), "riscriv");});
test("riscuotere -> riscuot", function() {deepEqual( Stem("riscuotere"), "riscuot");});
test("riscuotono -> riscuot", function() {deepEqual( Stem("riscuotono"), "riscuot");});
test("risente -> risent", function() {deepEqual( Stem("risente"), "risent");});
test("risentì -> risent", function() {deepEqual( Stem("risentì"), "risent");});
test("risentimento -> risent", function() {deepEqual( Stem("risentimento"), "risent");});
test("risentire -> risent", function() {deepEqual( Stem("risentire"), "risent");});
test("risentirsi -> risent", function() {deepEqual( Stem("risentirsi"), "risent");});
test("risentita -> risent", function() {deepEqual( Stem("risentita"), "risent");});
test("risentite -> risent", function() {deepEqual( Stem("risentite"), "risent");});
test("risentiti -> risent", function() {deepEqual( Stem("risentiti"), "risent");});
test("risentito -> risent", function() {deepEqual( Stem("risentito"), "risent");});
test("riseppe -> risepp", function() {deepEqual( Stem("riseppe"), "risepp");});
test("riseppero -> risepper", function() {deepEqual( Stem("riseppero"), "risepper");});
test("riserbata -> riserb", function() {deepEqual( Stem("riserbata"), "riserb");});
test("riserbo -> riserb", function() {deepEqual( Stem("riserbo"), "riserb");});
test("riserva -> riserv", function() {deepEqual( Stem("riserva"), "riserv");});
test("riservassero -> riserv", function() {deepEqual( Stem("riservassero"), "riserv");});
test("riservata -> riserv", function() {deepEqual( Stem("riservata"), "riserv");});
test("riservate -> riserv", function() {deepEqual( Stem("riservate"), "riserv");});
test("riservati -> riserv", function() {deepEqual( Stem("riservati"), "riserv");});
test("riservato -> riserv", function() {deepEqual( Stem("riservato"), "riserv");});
test("riserve -> riserv", function() {deepEqual( Stem("riserve"), "riserv");});
test("riservisti -> riserv", function() {deepEqual( Stem("riservisti"), "riserv");});
test("risiamo -> ris", function() {deepEqual( Stem("risiamo"), "ris");});
test("risica -> risic", function() {deepEqual( Stem("risica"), "risic");});
test("risicar -> risic", function() {deepEqual( Stem("risicar"), "risic");});
test("risicare -> risic", function() {deepEqual( Stem("risicare"), "risic");});
test("risiedeva -> risied", function() {deepEqual( Stem("risiedeva"), "risied");});
test("risk -> risk", function() {deepEqual( Stem("risk"), "risk");});
test("riso -> ris", function() {deepEqual( Stem("riso"), "ris");});
test("risolta -> risolt", function() {deepEqual( Stem("risolta"), "risolt");});
test("risolte -> risolt", function() {deepEqual( Stem("risolte"), "risolt");});
test("risolto -> risolt", function() {deepEqual( Stem("risolto"), "risolt");});
test("risoluta -> risol", function() {deepEqual( Stem("risoluta"), "risol");});
test("risolutamente -> risolut", function() {deepEqual( Stem("risolutamente"), "risolut");});
test("risolute -> risol", function() {deepEqual( Stem("risolute"), "risol");});
test("risolutezza -> risolutezz", function() {deepEqual( Stem("risolutezza"), "risolutezz");});
test("risoluti -> risol", function() {deepEqual( Stem("risoluti"), "risol");});
test("risolutive -> risolut", function() {deepEqual( Stem("risolutive"), "risolut");});
test("risolutivo -> risolut", function() {deepEqual( Stem("risolutivo"), "risolut");});
test("risoluto -> risol", function() {deepEqual( Stem("risoluto"), "risol");});
test("risoluzione -> risolu", function() {deepEqual( Stem("risoluzione"), "risolu");});
test("risoluzioni -> risolu", function() {deepEqual( Stem("risoluzioni"), "risolu");});
test("risolva -> risolv", function() {deepEqual( Stem("risolva"), "risolv");});
test("risolve -> risolv", function() {deepEqual( Stem("risolve"), "risolv");});
test("risolvendo -> risolv", function() {deepEqual( Stem("risolvendo"), "risolv");});
test("risolver -> risolver", function() {deepEqual( Stem("risolver"), "risolver");});
test("risolverà -> risolv", function() {deepEqual( Stem("risolverà"), "risolv");});
test("risolvere -> risolv", function() {deepEqual( Stem("risolvere"), "risolv");});
test("risolversi -> risolv", function() {deepEqual( Stem("risolversi"), "risolv");});
test("risolvesse -> risolvess", function() {deepEqual( Stem("risolvesse"), "risolvess");});
test("risolvete -> risolv", function() {deepEqual( Stem("risolvete"), "risolv");});
test("risolvette -> risolvett", function() {deepEqual( Stem("risolvette"), "risolvett");});
test("risolvettero -> risolvetter", function() {deepEqual( Stem("risolvettero"), "risolvetter");});
test("risolveva -> risolv", function() {deepEqual( Stem("risolveva"), "risolv");});
test("risolvimento -> risolv", function() {deepEqual( Stem("risolvimento"), "risolv");});
test("risolvon -> risolvon", function() {deepEqual( Stem("risolvon"), "risolvon");});
test("risonanti -> rison", function() {deepEqual( Stem("risonanti"), "rison");});
test("risonare -> rison", function() {deepEqual( Stem("risonare"), "rison");});
test("risonava -> rison", function() {deepEqual( Stem("risonava"), "rison");});
test("risone -> rison", function() {deepEqual( Stem("risone"), "rison");});
test("risonò -> rison", function() {deepEqual( Stem("risonò"), "rison");});
test("risorgimento -> risorg", function() {deepEqual( Stem("risorgimento"), "risorg");});
test("risorsa -> risors", function() {deepEqual( Stem("risorsa"), "risors");});
test("risorse -> risors", function() {deepEqual( Stem("risorse"), "risors");});
test("risorsero -> risorser", function() {deepEqual( Stem("risorsero"), "risorser");});
test("risospirato -> risospir", function() {deepEqual( Stem("risospirato"), "risospir");});
test("risp -> risp", function() {deepEqual( Stem("risp"), "risp");});
test("rispamio -> rispam", function() {deepEqual( Stem("rispamio"), "rispam");});
test("risparmi -> risp", function() {deepEqual( Stem("risparmi"), "risp");});
test("risparmiando -> risparm", function() {deepEqual( Stem("risparmiando"), "risparm");});
test("risparmiare -> risparm", function() {deepEqual( Stem("risparmiare"), "risparm");});
test("risparmiarselo -> risparmiarsel", function() {deepEqual( Stem("risparmiarselo"), "risparmiarsel");});
test("risparmiati -> risparm", function() {deepEqual( Stem("risparmiati"), "risparm");});
test("risparmiato -> risparm", function() {deepEqual( Stem("risparmiato"), "risparm");});
test("risparmiatori -> risparm", function() {deepEqual( Stem("risparmiatori"), "risparm");});
test("risparmiava -> risparm", function() {deepEqual( Stem("risparmiava"), "risparm");});
test("risparmio -> risparm", function() {deepEqual( Stem("risparmio"), "risparm");});
test("risparmiò -> risparm", function() {deepEqual( Stem("risparmiò"), "risparm");});
test("rispaventarsi -> rispavent", function() {deepEqual( Stem("rispaventarsi"), "rispavent");});
test("rispecchia -> rispecc", function() {deepEqual( Stem("rispecchia"), "rispecc");});
test("rispetta -> rispett", function() {deepEqual( Stem("rispetta"), "rispett");});
test("rispettabile -> rispett", function() {deepEqual( Stem("rispettabile"), "rispett");});
test("rispettabili -> rispett", function() {deepEqual( Stem("rispettabili"), "rispett");});
test("rispettabilità -> rispett", function() {deepEqual( Stem("rispettabilità"), "rispett");});
test("rispettando -> rispett", function() {deepEqual( Stem("rispettando"), "rispett");});
test("rispettarci -> rispett", function() {deepEqual( Stem("rispettarci"), "rispett");});
test("rispettare -> rispett", function() {deepEqual( Stem("rispettare"), "rispett");});
test("rispettata -> rispett", function() {deepEqual( Stem("rispettata"), "rispett");});
test("rispettate -> rispett", function() {deepEqual( Stem("rispettate"), "rispett");});
test("rispettati -> rispett", function() {deepEqual( Stem("rispettati"), "rispett");});
test("rispettato -> rispett", function() {deepEqual( Stem("rispettato"), "rispett");});
test("rispetti -> rispett", function() {deepEqual( Stem("rispetti"), "rispett");});
test("rispettiamo -> rispett", function() {deepEqual( Stem("rispettiamo"), "rispett");});
test("rispettivamente -> rispett", function() {deepEqual( Stem("rispettivamente"), "rispett");});
test("rispettive -> rispett", function() {deepEqual( Stem("rispettive"), "rispett");});
test("rispettivi -> rispett", function() {deepEqual( Stem("rispettivi"), "rispett");});
test("rispetto -> rispett", function() {deepEqual( Stem("rispetto"), "rispett");});
test("rispettosa -> rispett", function() {deepEqual( Stem("rispettosa"), "rispett");});
test("rispettosamente -> rispett", function() {deepEqual( Stem("rispettosamente"), "rispett");});
test("rispettose -> rispett", function() {deepEqual( Stem("rispettose"), "rispett");});
test("rispettoso -> rispett", function() {deepEqual( Stem("rispettoso"), "rispett");});
test("rispinge -> risping", function() {deepEqual( Stem("rispinge"), "risping");});
test("rispingendo -> risping", function() {deepEqual( Stem("rispingendo"), "risping");});
test("rispingendola -> risping", function() {deepEqual( Stem("rispingendola"), "risping");});
test("rispingerla -> risping", function() {deepEqual( Stem("rispingerla"), "risping");});
test("rispingerne -> risping", function() {deepEqual( Stem("rispingerne"), "risping");});
test("rispinse -> rispins", function() {deepEqual( Stem("rispinse"), "rispins");});
test("rispinte -> rispint", function() {deepEqual( Stem("rispinte"), "rispint");});
test("risplenda -> rispl", function() {deepEqual( Stem("risplenda"), "rispl");});
test("rispoli -> rispol", function() {deepEqual( Stem("rispoli"), "rispol");});
test("rispolverano -> rispolver", function() {deepEqual( Stem("rispolverano"), "rispolver");});
test("rispolverare -> rispolver", function() {deepEqual( Stem("rispolverare"), "rispolver");});
test("risponda -> rispond", function() {deepEqual( Stem("risponda"), "rispond");});
test("risponde -> rispond", function() {deepEqual( Stem("risponde"), "rispond");});
test("rispondendo -> rispond", function() {deepEqual( Stem("rispondendo"), "rispond");});
test("rispondenti -> rispondent", function() {deepEqual( Stem("rispondenti"), "rispondent");});
test("risponder -> risponder", function() {deepEqual( Stem("risponder"), "risponder");});
test("rispondere -> rispond", function() {deepEqual( Stem("rispondere"), "rispond");});
test("risponderebbe -> rispond", function() {deepEqual( Stem("risponderebbe"), "rispond");});
test("risponderebbero -> rispond", function() {deepEqual( Stem("risponderebbero"), "rispond");});
test("risponderete -> rispond", function() {deepEqual( Stem("risponderete"), "rispond");});
test("rispondergli -> rispond", function() {deepEqual( Stem("rispondergli"), "rispond");});
test("risponderne -> rispond", function() {deepEqual( Stem("risponderne"), "rispond");});
test("rispondesse -> rispondess", function() {deepEqual( Stem("rispondesse"), "rispondess");});
test("rispondete -> rispond", function() {deepEqual( Stem("rispondete"), "rispond");});
test("rispondeva -> rispond", function() {deepEqual( Stem("rispondeva"), "rispond");});
test("rispondevan -> rispondevan", function() {deepEqual( Stem("rispondevan"), "rispondevan");});
test("rispondevano -> rispond", function() {deepEqual( Stem("rispondevano"), "rispond");});
test("rispondi -> rispond", function() {deepEqual( Stem("rispondi"), "rispond");});
test("risposarsi -> rispos", function() {deepEqual( Stem("risposarsi"), "rispos");});
test("rispose -> rispos", function() {deepEqual( Stem("rispose"), "rispos");});
test("risposer -> risposer", function() {deepEqual( Stem("risposer"), "risposer");});
test("risposero -> risposer", function() {deepEqual( Stem("risposero"), "risposer");});
test("risposi -> rispos", function() {deepEqual( Stem("risposi"), "rispos");});
test("risposta -> rispost", function() {deepEqual( Stem("risposta"), "rispost");});
test("risposte -> rispost", function() {deepEqual( Stem("risposte"), "rispost");});
test("risposto -> rispost", function() {deepEqual( Stem("risposto"), "rispost");});
test("rispostogli -> rispostogl", function() {deepEqual( Stem("rispostogli"), "rispostogl");});
test("rispostole -> rispostol", function() {deepEqual( Stem("rispostole"), "rispostol");});
test("rissa -> riss", function() {deepEqual( Stem("rissa"), "riss");});
test("risse -> riss", function() {deepEqual( Stem("risse"), "riss");});
test("rissoso -> rissos", function() {deepEqual( Stem("rissoso"), "rissos");});
test("ristabilendo -> ristabil", function() {deepEqual( Stem("ristabilendo"), "ristabil");});
test("ristabilire -> ristabil", function() {deepEqual( Stem("ristabilire"), "ristabil");});
test("ristabilisca -> ristabil", function() {deepEqual( Stem("ristabilisca"), "ristabil");});
test("ristagnare -> ristagn", function() {deepEqual( Stem("ristagnare"), "ristagn");});
test("ristagno -> ristagn", function() {deepEqual( Stem("ristagno"), "ristagn");});
test("ristorante -> ristor", function() {deepEqual( Stem("ristorante"), "ristor");});
test("ristorar -> ristor", function() {deepEqual( Stem("ristorar"), "ristor");});
test("ristorarla -> ristor", function() {deepEqual( Stem("ristorarla"), "ristor");});
test("ristorarsi -> ristor", function() {deepEqual( Stem("ristorarsi"), "ristor");});
test("ristorarvi -> ristor", function() {deepEqual( Stem("ristorarvi"), "ristor");});
test("ristorativa -> ristor", function() {deepEqual( Stem("ristorativa"), "ristor");});
test("ristorativi -> ristor", function() {deepEqual( Stem("ristorativi"), "ristor");});
test("ristorativo -> ristor", function() {deepEqual( Stem("ristorativo"), "ristor");});
test("ristori -> ristor", function() {deepEqual( Stem("ristori"), "ristor");});
test("ristoro -> ristor", function() {deepEqual( Stem("ristoro"), "ristor");});
test("ristretta -> ristrett", function() {deepEqual( Stem("ristretta"), "ristrett");});
test("ristrettezza -> ristrettezz", function() {deepEqual( Stem("ristrettezza"), "ristrettezz");});
test("ristretti -> ristrett", function() {deepEqual( Stem("ristretti"), "ristrett");});
test("ristretto -> ristrett", function() {deepEqual( Stem("ristretto"), "ristrett");});
test("ristringendosi -> ristring", function() {deepEqual( Stem("ristringendosi"), "ristring");});
test("ristringerne -> ristring", function() {deepEqual( Stem("ristringerne"), "ristring");});
test("ristringersi -> ristring", function() {deepEqual( Stem("ristringersi"), "ristring");});
test("ristringessero -> ristring", function() {deepEqual( Stem("ristringessero"), "ristring");});
test("ristringeva -> ristring", function() {deepEqual( Stem("ristringeva"), "ristring");});
test("ristrinse -> ristrins", function() {deepEqual( Stem("ristrinse"), "ristrins");});
test("ristrinsero -> ristrinser", function() {deepEqual( Stem("ristrinsero"), "ristrinser");});
test("ristrutturazione -> ristruttur", function() {deepEqual( Stem("ristrutturazione"), "ristruttur");});
test("risucchiarci -> risucc", function() {deepEqual( Stem("risucchiarci"), "risucc");});
test("risulata -> risul", function() {deepEqual( Stem("risulata"), "risul");});
test("risulta -> risult", function() {deepEqual( Stem("risulta"), "risult");});
test("risultando -> risult", function() {deepEqual( Stem("risultando"), "risult");});
test("risultano -> risult", function() {deepEqual( Stem("risultano"), "risult");});
test("risultante -> risult", function() {deepEqual( Stem("risultante"), "risult");});
test("risultare -> risult", function() {deepEqual( Stem("risultare"), "risult");});
test("risultargli -> risult", function() {deepEqual( Stem("risultargli"), "risult");});
test("risultate -> risult", function() {deepEqual( Stem("risultate"), "risult");});
test("risultati -> risult", function() {deepEqual( Stem("risultati"), "risult");});
test("risultato -> risult", function() {deepEqual( Stem("risultato"), "risult");});
test("risultava -> risult", function() {deepEqual( Stem("risultava"), "risult");});
test("risulterebbe -> risult", function() {deepEqual( Stem("risulterebbe"), "risult");});
test("risulti -> risult", function() {deepEqual( Stem("risulti"), "risult");});
test("risuscitatolo -> risuscitatol", function() {deepEqual( Stem("risuscitatolo"), "risuscitatol");});
test("risveglia -> risvegl", function() {deepEqual( Stem("risveglia"), "risvegl");});
test("risvegliando -> risvegl", function() {deepEqual( Stem("risvegliando"), "risvegl");});
test("risvegliasse -> risvegl", function() {deepEqual( Stem("risvegliasse"), "risvegl");});
test("risvegliata -> risvegl", function() {deepEqual( Stem("risvegliata"), "risvegl");});
test("risvegliato -> risvegl", function() {deepEqual( Stem("risvegliato"), "risvegl");});
test("risvegliava -> risvegl", function() {deepEqual( Stem("risvegliava"), "risvegl");});
test("risvegliavano -> risvegl", function() {deepEqual( Stem("risvegliavano"), "risvegl");});
test("risveglino -> risveglin", function() {deepEqual( Stem("risveglino"), "risveglin");});
test("risvegliò -> risvegl", function() {deepEqual( Stem("risvegliò"), "risvegl");});
test("rita -> rit", function() {deepEqual( Stem("rita"), "rit");});
test("ritagli -> ritagl", function() {deepEqual( Stem("ritagli"), "ritagl");});
test("ritaglio -> ritagl", function() {deepEqual( Stem("ritaglio"), "ritagl");});
test("ritarda -> ritard", function() {deepEqual( Stem("ritarda"), "ritard");});
test("ritardando -> ritard", function() {deepEqual( Stem("ritardando"), "ritard");});
test("ritardarla -> ritard", function() {deepEqual( Stem("ritardarla"), "ritard");});
test("ritardata -> ritard", function() {deepEqual( Stem("ritardata"), "ritard");});
test("ritardato -> ritard", function() {deepEqual( Stem("ritardato"), "ritard");});
test("ritardi -> ritard", function() {deepEqual( Stem("ritardi"), "ritard");});
test("ritardo -> ritard", function() {deepEqual( Stem("ritardo"), "ritard");});
test("ritchie -> ritc", function() {deepEqual( Stem("ritchie"), "ritc");});
test("ritegno -> ritegn", function() {deepEqual( Stem("ritegno"), "ritegn");});
test("ritenendo -> riten", function() {deepEqual( Stem("ritenendo"), "riten");});
test("ritenere -> riten", function() {deepEqual( Stem("ritenere"), "riten");});
test("ritenessero -> riten", function() {deepEqual( Stem("ritenessero"), "riten");});
test("ritenete -> riten", function() {deepEqual( Stem("ritenete"), "riten");});
test("riteneva -> riten", function() {deepEqual( Stem("riteneva"), "riten");});
test("ritenga -> riteng", function() {deepEqual( Stem("ritenga"), "riteng");});
test("ritengo -> riteng", function() {deepEqual( Stem("ritengo"), "riteng");});
test("ritengono -> riteng", function() {deepEqual( Stem("ritengono"), "riteng");});
test("riteniamo -> riten", function() {deepEqual( Stem("riteniamo"), "riten");});
test("ritenne -> ritenn", function() {deepEqual( Stem("ritenne"), "ritenn");});
test("ritentare -> ritent", function() {deepEqual( Stem("ritentare"), "ritent");});
test("ritenuta -> riten", function() {deepEqual( Stem("ritenuta"), "riten");});
test("ritenute -> riten", function() {deepEqual( Stem("ritenute"), "riten");});
test("ritenuti -> riten", function() {deepEqual( Stem("ritenuti"), "riten");});
test("ritenuto -> riten", function() {deepEqual( Stem("ritenuto"), "riten");});
test("riti -> rit", function() {deepEqual( Stem("riti"), "rit");});
test("ritiene -> ritien", function() {deepEqual( Stem("ritiene"), "ritien");});
test("ritira -> ritir", function() {deepEqual( Stem("ritira"), "ritir");});
test("ritirando -> ritir", function() {deepEqual( Stem("ritirando"), "ritir");});
test("ritirandosi -> ritir", function() {deepEqual( Stem("ritirandosi"), "ritir");});
test("ritirano -> ritir", function() {deepEqual( Stem("ritirano"), "ritir");});
test("ritirar -> ritir", function() {deepEqual( Stem("ritirar"), "ritir");});
test("ritirare -> ritir", function() {deepEqual( Stem("ritirare"), "ritir");});
test("ritirarmi -> ritir", function() {deepEqual( Stem("ritirarmi"), "ritir");});
test("ritirarsene -> ritir", function() {deepEqual( Stem("ritirarsene"), "ritir");});
test("ritirarsi -> ritir", function() {deepEqual( Stem("ritirarsi"), "ritir");});
test("ritirassero -> ritir", function() {deepEqual( Stem("ritirassero"), "ritir");});
test("ritirata -> ritir", function() {deepEqual( Stem("ritirata"), "ritir");});
test("ritirate -> ritir", function() {deepEqual( Stem("ritirate"), "ritir");});
test("ritiratevi -> ritirat", function() {deepEqual( Stem("ritiratevi"), "ritirat");});
test("ritirati -> ritir", function() {deepEqual( Stem("ritirati"), "ritir");});
test("ritiratisi -> ritiratis", function() {deepEqual( Stem("ritiratisi"), "ritiratis");});
test("ritirato -> ritir", function() {deepEqual( Stem("ritirato"), "ritir");});
test("ritiratosi -> ritirat", function() {deepEqual( Stem("ritiratosi"), "ritirat");});
test("ritirava -> ritir", function() {deepEqual( Stem("ritirava"), "ritir");});
test("ritiravan -> ritiravan", function() {deepEqual( Stem("ritiravan"), "ritiravan");});
test("ritiri -> ritir", function() {deepEqual( Stem("ritiri"), "ritir");});
test("ritirino -> ritirin", function() {deepEqual( Stem("ritirino"), "ritirin");});
test("ritiro -> ritir", function() {deepEqual( Stem("ritiro"), "ritir");});
test("ritirò -> rit", function() {deepEqual( Stem("ritirò"), "rit");});
test("ritmicamente -> ritmic", function() {deepEqual( Stem("ritmicamente"), "ritmic");});
test("ritmo -> ritm", function() {deepEqual( Stem("ritmo"), "ritm");});
test("rito -> rit", function() {deepEqual( Stem("rito"), "rit");});
test("ritoccando -> ritocc", function() {deepEqual( Stem("ritoccando"), "ritocc");});
test("ritoccato -> ritocc", function() {deepEqual( Stem("ritoccato"), "ritocc");});
test("ritocco -> ritocc", function() {deepEqual( Stem("ritocco"), "ritocc");});
test("ritorna -> ritorn", function() {deepEqual( Stem("ritorna"), "ritorn");});
test("ritornan -> ritornan", function() {deepEqual( Stem("ritornan"), "ritornan");});
test("ritornandoci -> ritorn", function() {deepEqual( Stem("ritornandoci"), "ritorn");});
test("ritornar -> ritorn", function() {deepEqual( Stem("ritornar"), "ritorn");});
test("ritornare -> ritorn", function() {deepEqual( Stem("ritornare"), "ritorn");});
test("ritornarono -> ritorn", function() {deepEqual( Stem("ritornarono"), "ritorn");});
test("ritornatele -> ritornatel", function() {deepEqual( Stem("ritornatele"), "ritornatel");});
test("ritornato -> ritorn", function() {deepEqual( Stem("ritornato"), "ritorn");});
test("ritornava -> ritorn", function() {deepEqual( Stem("ritornava"), "ritorn");});
test("ritorneremo -> ritorn", function() {deepEqual( Stem("ritorneremo"), "ritorn");});
test("ritorni -> ritorn", function() {deepEqual( Stem("ritorni"), "ritorn");});
test("ritorniamo -> ritorn", function() {deepEqual( Stem("ritorniamo"), "ritorn");});
test("ritorno -> ritorn", function() {deepEqual( Stem("ritorno"), "ritorn");});
test("ritornò -> ritorn", function() {deepEqual( Stem("ritornò"), "ritorn");});
test("ritorte -> ritort", function() {deepEqual( Stem("ritorte"), "ritort");});
test("ritrae -> ritra", function() {deepEqual( Stem("ritrae"), "ritra");});
test("ritraggono -> ritragg", function() {deepEqual( Stem("ritraggono"), "ritragg");});
test("ritrarne -> ritr", function() {deepEqual( Stem("ritrarne"), "ritr");});
test("ritrarre -> ritrarr", function() {deepEqual( Stem("ritrarre"), "ritrarr");});
test("ritratta -> ritratt", function() {deepEqual( Stem("ritratta"), "ritratt");});
test("ritrattazione -> ritratt", function() {deepEqual( Stem("ritrattazione"), "ritratt");});
test("ritratti -> ritratt", function() {deepEqual( Stem("ritratti"), "ritratt");});
test("ritratto -> ritratt", function() {deepEqual( Stem("ritratto"), "ritratt");});
test("ritrosia -> ritros", function() {deepEqual( Stem("ritrosia"), "ritros");});
test("ritrouauano -> ritrouau", function() {deepEqual( Stem("ritrouauano"), "ritrouau");});
test("ritrova -> ritrov", function() {deepEqual( Stem("ritrova"), "ritrov");});
test("ritrovamenti -> ritrov", function() {deepEqual( Stem("ritrovamenti"), "ritrov");});
test("ritrovamento -> ritrov", function() {deepEqual( Stem("ritrovamento"), "ritrov");});
test("ritrovar -> ritrov", function() {deepEqual( Stem("ritrovar"), "ritrov");});
test("ritrovare -> ritrov", function() {deepEqual( Stem("ritrovare"), "ritrov");});
test("ritrovarsi -> ritrov", function() {deepEqual( Stem("ritrovarsi"), "ritrov");});
test("ritrovarvi -> ritrov", function() {deepEqual( Stem("ritrovarvi"), "ritrov");});
test("ritrovata -> ritrov", function() {deepEqual( Stem("ritrovata"), "ritrov");});
test("ritrovate -> ritrov", function() {deepEqual( Stem("ritrovate"), "ritrov");});
test("ritrovati -> ritrov", function() {deepEqual( Stem("ritrovati"), "ritrov");});
test("ritrovato -> ritrov", function() {deepEqual( Stem("ritrovato"), "ritrov");});
test("ritroverà -> ritrov", function() {deepEqual( Stem("ritroverà"), "ritrov");});
test("ritrovi -> ritrov", function() {deepEqual( Stem("ritrovi"), "ritrov");});
test("ritrovo -> ritrov", function() {deepEqual( Stem("ritrovo"), "ritrov");});
test("ritta -> ritt", function() {deepEqual( Stem("ritta"), "ritt");});
test("ritte -> ritt", function() {deepEqual( Stem("ritte"), "ritt");});
test("ritti -> ritt", function() {deepEqual( Stem("ritti"), "ritt");});
test("ritto -> ritt", function() {deepEqual( Stem("ritto"), "ritt");});
test("rituale -> ritual", function() {deepEqual( Stem("rituale"), "ritual");});
test("rituffavano -> rituff", function() {deepEqual( Stem("rituffavano"), "rituff");});
test("riunendosi -> riun", function() {deepEqual( Stem("riunendosi"), "riun");});
test("riunì -> riun", function() {deepEqual( Stem("riunì"), "riun");});
test("riuniamo -> riun", function() {deepEqual( Stem("riuniamo"), "riun");});
test("riunione -> riunion", function() {deepEqual( Stem("riunione"), "riunion");});
test("riunioni -> riunion", function() {deepEqual( Stem("riunioni"), "riunion");});
test("riunirà -> riun", function() {deepEqual( Stem("riunirà"), "riun");});
test("riuniranno -> riun", function() {deepEqual( Stem("riuniranno"), "riun");});
test("riunirci -> riun", function() {deepEqual( Stem("riunirci"), "riun");});
test("riuniremo -> riun", function() {deepEqual( Stem("riuniremo"), "riun");});
test("riunirono -> riun", function() {deepEqual( Stem("riunirono"), "riun");});
test("riunirsi -> riun", function() {deepEqual( Stem("riunirsi"), "riun");});
test("riunisca -> riun", function() {deepEqual( Stem("riunisca"), "riun");});
test("riunisce -> riun", function() {deepEqual( Stem("riunisce"), "riun");});
test("riuniscono -> riun", function() {deepEqual( Stem("riuniscono"), "riun");});
test("riunita -> riun", function() {deepEqual( Stem("riunita"), "riun");});
test("riunite -> riun", function() {deepEqual( Stem("riunite"), "riun");});
test("riuniti -> riun", function() {deepEqual( Stem("riuniti"), "riun");});
test("riunito -> riun", function() {deepEqual( Stem("riunito"), "riun");});
test("riunitosi -> riunit", function() {deepEqual( Stem("riunitosi"), "riunit");});
test("riunivano -> riun", function() {deepEqual( Stem("riunivano"), "riun");});
test("riuscendo -> riusc", function() {deepEqual( Stem("riuscendo"), "riusc");});
test("riuscendogli -> riusc", function() {deepEqual( Stem("riuscendogli"), "riusc");});
test("riuscì -> riusc", function() {deepEqual( Stem("riuscì"), "riusc");});
test("riusciamo -> riusc", function() {deepEqual( Stem("riusciamo"), "riusc");});
test("riuscir -> riusc", function() {deepEqual( Stem("riuscir"), "riusc");});
test("riuscirà -> riusc", function() {deepEqual( Stem("riuscirà"), "riusc");});
test("riuscire -> riusc", function() {deepEqual( Stem("riuscire"), "riusc");});
test("riuscirebbe -> riusc", function() {deepEqual( Stem("riuscirebbe"), "riusc");});
test("riuscirete -> riusc", function() {deepEqual( Stem("riuscirete"), "riusc");});
test("riuscirono -> riusc", function() {deepEqual( Stem("riuscirono"), "riusc");});
test("riuscirvi -> riusc", function() {deepEqual( Stem("riuscirvi"), "riusc");});
test("riuscisse -> riusciss", function() {deepEqual( Stem("riuscisse"), "riusciss");});
test("riuscissero -> riusc", function() {deepEqual( Stem("riuscissero"), "riusc");});
test("riuscita -> riusc", function() {deepEqual( Stem("riuscita"), "riusc");});
test("riuscite -> riusc", function() {deepEqual( Stem("riuscite"), "riusc");});
test("riusciti -> riusc", function() {deepEqual( Stem("riusciti"), "riusc");});
test("riuscito -> riusc", function() {deepEqual( Stem("riuscito"), "riusc");});
test("riusciva -> riusc", function() {deepEqual( Stem("riusciva"), "riusc");});
test("riuscivamo -> riusc", function() {deepEqual( Stem("riuscivamo"), "riusc");});
test("riuscivan -> riuscivan", function() {deepEqual( Stem("riuscivan"), "riuscivan");});
test("riuscivano -> riusc", function() {deepEqual( Stem("riuscivano"), "riusc");});
test("riva -> riv", function() {deepEqual( Stem("riva"), "riv");});
test("rivale -> rival", function() {deepEqual( Stem("rivale"), "rival");});
test("rivali -> rival", function() {deepEqual( Stem("rivali"), "rival");});
test("rivalità -> rival", function() {deepEqual( Stem("rivalità"), "rival");});
test("rivalutare -> rivalut", function() {deepEqual( Stem("rivalutare"), "rivalut");});
test("rivalutata -> rivalut", function() {deepEqual( Stem("rivalutata"), "rivalut");});
test("rivangare -> rivang", function() {deepEqual( Stem("rivangare"), "rivang");});
test("rive -> riv", function() {deepEqual( Stem("rive"), "riv");});
test("riveda -> rived", function() {deepEqual( Stem("riveda"), "rived");});
test("rivede -> rived", function() {deepEqual( Stem("rivede"), "rived");});
test("riveder -> riveder", function() {deepEqual( Stem("riveder"), "riveder");});
test("rivederci -> rived", function() {deepEqual( Stem("rivederci"), "rived");});
test("rivedere -> rived", function() {deepEqual( Stem("rivedere"), "rived");});
test("rivederli -> rived", function() {deepEqual( Stem("rivederli"), "rived");});
test("rivedersi -> rived", function() {deepEqual( Stem("rivedersi"), "rived");});
test("rivediamo -> rived", function() {deepEqual( Stem("rivediamo"), "rived");});
test("rivedrà -> rivedr", function() {deepEqual( Stem("rivedrà"), "rivedr");});
test("rivedremo -> rivedrem", function() {deepEqual( Stem("rivedremo"), "rivedrem");});
test("rivedrete -> rivedr", function() {deepEqual( Stem("rivedrete"), "rivedr");});
test("rivela -> rivel", function() {deepEqual( Stem("rivela"), "rivel");});
test("rivelano -> rivel", function() {deepEqual( Stem("rivelano"), "rivel");});
test("rivelare -> rivel", function() {deepEqual( Stem("rivelare"), "rivel");});
test("rivelarne -> rivel", function() {deepEqual( Stem("rivelarne"), "rivel");});
test("rivelarono -> rivel", function() {deepEqual( Stem("rivelarono"), "rivel");});
test("rivelata -> rivel", function() {deepEqual( Stem("rivelata"), "rivel");});
test("rivelato -> rivel", function() {deepEqual( Stem("rivelato"), "rivel");});
test("rivelazione -> rivel", function() {deepEqual( Stem("rivelazione"), "rivel");});
test("rivelazioni -> rivel", function() {deepEqual( Stem("rivelazioni"), "rivel");});
test("rivelazionì -> rivelazion", function() {deepEqual( Stem("rivelazionì"), "rivelazion");});
test("rivelò -> rivel", function() {deepEqual( Stem("rivelò"), "rivel");});
test("rivendicando -> rivendic", function() {deepEqual( Stem("rivendicando"), "rivendic");});
test("rivendicano -> rivendic", function() {deepEqual( Stem("rivendicano"), "rivendic");});
test("rivendicare -> rivendic", function() {deepEqual( Stem("rivendicare"), "rivendic");});
test("rivendicato -> rivendic", function() {deepEqual( Stem("rivendicato"), "rivendic");});
test("rivendicazione -> rivend", function() {deepEqual( Stem("rivendicazione"), "rivend");});
test("rivendicazioni -> rivend", function() {deepEqual( Stem("rivendicazioni"), "rivend");});
test("river -> river", function() {deepEqual( Stem("river"), "river");});
test("rivera -> river", function() {deepEqual( Stem("rivera"), "river");});
test("riverente -> riverent", function() {deepEqual( Stem("riverente"), "riverent");});
test("riverentemente -> riverent", function() {deepEqual( Stem("riverentemente"), "riverent");});
test("riverenza -> riverent", function() {deepEqual( Stem("riverenza"), "riverent");});
test("riverenze -> riverent", function() {deepEqual( Stem("riverenze"), "riverent");});
test("riverirlo -> river", function() {deepEqual( Stem("riverirlo"), "river");});
test("riverisce -> river", function() {deepEqual( Stem("riverisce"), "river");});
test("riverisco -> river", function() {deepEqual( Stem("riverisco"), "river");});
test("riverita -> river", function() {deepEqual( Stem("riverita"), "river");});
test("riverito -> river", function() {deepEqual( Stem("riverito"), "river");});
test("riverniciati -> rivernic", function() {deepEqual( Stem("riverniciati"), "rivernic");});
test("riversa -> rivers", function() {deepEqual( Stem("riversa"), "rivers");});
test("riversare -> rivers", function() {deepEqual( Stem("riversare"), "rivers");});
test("riversata -> rivers", function() {deepEqual( Stem("riversata"), "rivers");});
test("riversate -> rivers", function() {deepEqual( Stem("riversate"), "rivers");});
test("riverso -> rivers", function() {deepEqual( Stem("riverso"), "rivers");});
test("rivestì -> rivest", function() {deepEqual( Stem("rivestì"), "rivest");});
test("rivestirsi -> rivest", function() {deepEqual( Stem("rivestirsi"), "rivest");});
test("rivestita -> rivest", function() {deepEqual( Stem("rivestita"), "rivest");});
test("rivestito -> rivest", function() {deepEqual( Stem("rivestito"), "rivest");});
test("rivestivano -> rivest", function() {deepEqual( Stem("rivestivano"), "rivest");});
test("rivide -> rivid", function() {deepEqual( Stem("rivide"), "rivid");});
test("riviera -> rivier", function() {deepEqual( Stem("riviera"), "rivier");});
test("rivieraschi -> rivierasc", function() {deepEqual( Stem("rivieraschi"), "rivierasc");});
test("rivisitazione -> rivisit", function() {deepEqual( Stem("rivisitazione"), "rivisit");});
test("rivista -> rivist", function() {deepEqual( Stem("rivista"), "rivist");});
test("riviste -> rivist", function() {deepEqual( Stem("riviste"), "rivist");});
test("rivisto -> rivist", function() {deepEqual( Stem("rivisto"), "rivist");});
test("rivitalizzare -> rivitalizz", function() {deepEqual( Stem("rivitalizzare"), "rivitalizz");});
test("rivitalizzazione -> rivitalizz", function() {deepEqual( Stem("rivitalizzazione"), "rivitalizz");});
test("rivivere -> riviv", function() {deepEqual( Stem("rivivere"), "riviv");});
test("rivocarlo -> rivoc", function() {deepEqual( Stem("rivocarlo"), "rivoc");});
test("rivola -> rivol", function() {deepEqual( Stem("rivola"), "rivol");});
test("rivolge -> rivolg", function() {deepEqual( Stem("rivolge"), "rivolg");});
test("rivolgendo -> rivolg", function() {deepEqual( Stem("rivolgendo"), "rivolg");});
test("rivolgendosi -> rivolg", function() {deepEqual( Stem("rivolgendosi"), "rivolg");});
test("rivolgere -> rivolg", function() {deepEqual( Stem("rivolgere"), "rivolg");});
test("rivolgerebbe -> rivolg", function() {deepEqual( Stem("rivolgerebbe"), "rivolg");});
test("rivolgerle -> rivolg", function() {deepEqual( Stem("rivolgerle"), "rivolg");});
test("rivolgerlo -> rivolg", function() {deepEqual( Stem("rivolgerlo"), "rivolg");});
test("rivolgermi -> rivolg", function() {deepEqual( Stem("rivolgermi"), "rivolg");});
test("rivolgerò -> rivolg", function() {deepEqual( Stem("rivolgerò"), "rivolg");});
test("rivolgersi -> rivolg", function() {deepEqual( Stem("rivolgersi"), "rivolg");});
test("rivolgessero -> rivolg", function() {deepEqual( Stem("rivolgessero"), "rivolg");});
test("rivolgeva -> rivolg", function() {deepEqual( Stem("rivolgeva"), "rivolg");});
test("rivolgono -> rivolg", function() {deepEqual( Stem("rivolgono"), "rivolg");});
test("rivolse -> rivols", function() {deepEqual( Stem("rivolse"), "rivols");});
test("rivolsero -> rivolser", function() {deepEqual( Stem("rivolsero"), "rivolser");});
test("rivolta -> rivolt", function() {deepEqual( Stem("rivolta"), "rivolt");});
test("rivoltandosi -> rivolt", function() {deepEqual( Stem("rivoltandosi"), "rivolt");});
test("rivoltano -> rivolt", function() {deepEqual( Stem("rivoltano"), "rivolt");});
test("rivoltare -> rivolt", function() {deepEqual( Stem("rivoltare"), "rivolt");});
test("rivoltarsi -> rivolt", function() {deepEqual( Stem("rivoltarsi"), "rivolt");});
test("rivoltate -> rivolt", function() {deepEqual( Stem("rivoltate"), "rivolt");});
test("rivoltati -> rivolt", function() {deepEqual( Stem("rivoltati"), "rivolt");});
test("rivoltava -> rivolt", function() {deepEqual( Stem("rivoltava"), "rivolt");});
test("rivolte -> rivolt", function() {deepEqual( Stem("rivolte"), "rivolt");});
test("rivoltegli -> rivoltegl", function() {deepEqual( Stem("rivoltegli"), "rivoltegl");});
test("rivolterebbero -> rivolt", function() {deepEqual( Stem("rivolterebbero"), "rivolt");});
test("rivolti -> rivolt", function() {deepEqual( Stem("rivolti"), "rivolt");});
test("rivoltiamo -> rivolt", function() {deepEqual( Stem("rivoltiamo"), "rivolt");});
test("rivoltigli -> rivoltigl", function() {deepEqual( Stem("rivoltigli"), "rivoltigl");});
test("rivolto -> rivolt", function() {deepEqual( Stem("rivolto"), "rivolt");});
test("rivoltò -> rivolt", function() {deepEqual( Stem("rivoltò"), "rivolt");});
test("rivoluzionari -> rivoluzionar", function() {deepEqual( Stem("rivoluzionari"), "rivoluzionar");});
test("rivoluzionaria -> rivoluzionar", function() {deepEqual( Stem("rivoluzionaria"), "rivoluzionar");});
test("rivoluzionario -> rivoluzionar", function() {deepEqual( Stem("rivoluzionario"), "rivoluzionar");});
test("rivoluzione -> rivolu", function() {deepEqual( Stem("rivoluzione"), "rivolu");});
test("rivoluzioni -> rivolu", function() {deepEqual( Stem("rivoluzioni"), "rivolu");});
test("rivotandolo -> rivot", function() {deepEqual( Stem("rivotandolo"), "rivot");});
test("riz -> riz", function() {deepEqual( Stem("riz"), "riz");});
test("rizza -> rizz", function() {deepEqual( Stem("rizza"), "rizz");});
test("rizzandosi -> rizz", function() {deepEqual( Stem("rizzandosi"), "rizz");});
test("rizzano -> rizz", function() {deepEqual( Stem("rizzano"), "rizz");});
test("rizzar -> rizz", function() {deepEqual( Stem("rizzar"), "rizz");});
test("rizzata -> rizz", function() {deepEqual( Stem("rizzata"), "rizz");});
test("rizzate -> rizz", function() {deepEqual( Stem("rizzate"), "rizz");});
test("rizzatosi -> rizzat", function() {deepEqual( Stem("rizzatosi"), "rizzat");});
test("rizzi -> rizz", function() {deepEqual( Stem("rizzi"), "rizz");});
test("rizzitelli -> rizzitell", function() {deepEqual( Stem("rizzitelli"), "rizzitell");});
test("rizzo -> rizz", function() {deepEqual( Stem("rizzo"), "rizz");});
test("rizzò -> rizz", function() {deepEqual( Stem("rizzò"), "rizz");});
test("rizzoli -> rizzol", function() {deepEqual( Stem("rizzoli"), "rizzol");});
test("rl -> rl", function() {deepEqual( Stem("rl"), "rl");});
test("rm -> rm", function() {deepEqual( Stem("rm"), "rm");});
test("rmzi -> rmzi", function() {deepEqual( Stem("rmzi"), "rmzi");});
test("rnc -> rnc", function() {deepEqual( Stem("rnc"), "rnc");});
test("roba -> rob", function() {deepEqual( Stem("roba"), "rob");});
test("robbe -> robb", function() {deepEqual( Stem("robbe"), "robb");});
test("robben -> robben", function() {deepEqual( Stem("robben"), "robben");});
test("robbie -> robb", function() {deepEqual( Stem("robbie"), "robb");});
test("robe -> rob", function() {deepEqual( Stem("robe"), "rob");});
test("robert -> robert", function() {deepEqual( Stem("robert"), "robert");});
test("roberto -> robert", function() {deepEqual( Stem("roberto"), "robert");});
test("robertson -> robertson", function() {deepEqual( Stem("robertson"), "robertson");});
test("robin -> robin", function() {deepEqual( Stem("robin"), "robin");});
test("robinson -> robinson", function() {deepEqual( Stem("robinson"), "robinson");});
test("robocop -> robocop", function() {deepEqual( Stem("robocop"), "robocop");});
test("robusta -> robust", function() {deepEqual( Stem("robusta"), "robust");});
test("robustezza -> robustezz", function() {deepEqual( Stem("robustezza"), "robustezz");});
test("robusti -> robust", function() {deepEqual( Stem("robusti"), "robust");});
test("roca -> roc", function() {deepEqual( Stem("roca"), "roc");});
test("rocambolesche -> rocambolesc", function() {deepEqual( Stem("rocambolesche"), "rocambolesc");});
test("rocca -> rocc", function() {deepEqual( Stem("rocca"), "rocc");});
test("roccaforte -> roccafort", function() {deepEqual( Stem("roccaforte"), "roccafort");});
test("roccatrici -> roccatric", function() {deepEqual( Stem("roccatrici"), "roccatric");});
test("roccella -> roccell", function() {deepEqual( Stem("roccella"), "roccell");});
test("rocchetta -> rocchett", function() {deepEqual( Stem("rocchetta"), "rocchett");});
test("rocchi -> rocc", function() {deepEqual( Stem("rocchi"), "rocc");});
test("roccia -> rocc", function() {deepEqual( Stem("roccia"), "rocc");});
test("rocco -> rocc", function() {deepEqual( Stem("rocco"), "rocc");});
test("rock -> rock", function() {deepEqual( Stem("rock"), "rock");});
test("rocroi -> rocro", function() {deepEqual( Stem("rocroi"), "rocro");});
test("rod -> rod", function() {deepEqual( Stem("rod"), "rod");});
test("rode -> rod", function() {deepEqual( Stem("rode"), "rod");});
test("rodendosi -> rod", function() {deepEqual( Stem("rodendosi"), "rod");});
test("rodere -> rod", function() {deepEqual( Stem("rodere"), "rod");});
test("rodersi -> rod", function() {deepEqual( Stem("rodersi"), "rod");});
test("rodeva -> rod", function() {deepEqual( Stem("rodeva"), "rod");});
test("rodhes -> rodhes", function() {deepEqual( Stem("rodhes"), "rodhes");});
test("rodi -> rod", function() {deepEqual( Stem("rodi"), "rod");});
test("rodimento -> rod", function() {deepEqual( Stem("rodimento"), "rod");});
test("rodìo -> rodì", function() {deepEqual( Stem("rodìo"), "rodì");});
test("rodman -> rodman", function() {deepEqual( Stem("rodman"), "rodman");});
test("rodney -> rodney", function() {deepEqual( Stem("rodney"), "rodney");});
test("rodomonte -> rodomont", function() {deepEqual( Stem("rodomonte"), "rodomont");});
test("rodotà -> rodot", function() {deepEqual( Stem("rodotà"), "rodot");});
test("rodrigo -> rodrig", function() {deepEqual( Stem("rodrigo"), "rodrig");});
test("rodriguez -> rodriguez", function() {deepEqual( Stem("rodriguez"), "rodriguez");});
test("rodriquez -> rodriquez", function() {deepEqual( Stem("rodriquez"), "rodriquez");});
test("roger -> roger", function() {deepEqual( Stem("roger"), "roger");});
test("rogeriò -> roger", function() {deepEqual( Stem("rogeriò"), "roger");});
test("rogers -> rogers", function() {deepEqual( Stem("rogers"), "rogers");});
test("rognoni -> rognon", function() {deepEqual( Stem("rognoni"), "rognon");});
test("roidi -> roid", function() {deepEqual( Stem("roidi"), "roid");});
test("rolando -> rol", function() {deepEqual( Stem("rolando"), "rol");});
test("roll -> roll", function() {deepEqual( Stem("roll"), "roll");});
test("rolls -> rolls", function() {deepEqual( Stem("rolls"), "rolls");});
test("rolo -> rol", function() {deepEqual( Stem("rolo"), "rol");});
test("rolò -> rol", function() {deepEqual( Stem("rolò"), "rol");});
test("roloamerica -> roloamer", function() {deepEqual( Stem("roloamerica"), "roloamer");});
test("rolobonds -> rolobonds", function() {deepEqual( Stem("rolobonds"), "rolobonds");});
test("roloeuropa -> roloeurop", function() {deepEqual( Stem("roloeuropa"), "roloeurop");});
test("rologest -> rologest", function() {deepEqual( Stem("rologest"), "rologest");});
test("rolointernational -> rolointernational", function() {deepEqual( Stem("rolointernational"), "rolointernational");});
test("roloitalia -> roloital", function() {deepEqual( Stem("roloitalia"), "roloital");});
test("rolomix -> rolomix", function() {deepEqual( Stem("rolomix"), "rolomix");});
test("rolomoney -> rolomoney", function() {deepEqual( Stem("rolomoney"), "rolomoney");});
test("rolooriente -> roloorient", function() {deepEqual( Stem("rolooriente"), "roloorient");});
test("rom -> rom", function() {deepEqual( Stem("rom"), "rom");});
test("roma -> rom", function() {deepEqual( Stem("roma"), "rom");});
test("romà -> rom", function() {deepEqual( Stem("romà"), "rom");});
test("romagest -> romagest", function() {deepEqual( Stem("romagest"), "romagest");});
test("romagna -> romagn", function() {deepEqual( Stem("romagna"), "romagn");});
test("romagnolo -> romagnol", function() {deepEqual( Stem("romagnolo"), "romagnol");});
test("roman -> roman", function() {deepEqual( Stem("roman"), "roman");});
test("romana -> roman", function() {deepEqual( Stem("romana"), "roman");});
test("romanello -> romanell", function() {deepEqual( Stem("romanello"), "romanell");});
test("romani -> roman", function() {deepEqual( Stem("romani"), "roman");});
test("romanista -> roman", function() {deepEqual( Stem("romanista"), "roman");});
test("romanisti -> roman", function() {deepEqual( Stem("romanisti"), "roman");});
test("romano -> rom", function() {deepEqual( Stem("romano"), "rom");});
test("romanò -> roman", function() {deepEqual( Stem("romanò"), "roman");});
test("romantica -> romant", function() {deepEqual( Stem("romantica"), "romant");});
test("romanticismo -> romantic", function() {deepEqual( Stem("romanticismo"), "romantic");});
test("romantico -> romant", function() {deepEqual( Stem("romantico"), "romant");});
test("romanzo -> romanz", function() {deepEqual( Stem("romanzo"), "romanz");});
test("rombo -> romb", function() {deepEqual( Stem("rombo"), "romb");});
test("romei -> rome", function() {deepEqual( Stem("romei"), "rome");});
test("romena -> romen", function() {deepEqual( Stem("romena"), "romen");});
test("romeo -> rome", function() {deepEqual( Stem("romeo"), "rome");});
test("romero -> romer", function() {deepEqual( Stem("romero"), "romer");});
test("rominger -> rominger", function() {deepEqual( Stem("rominger"), "rominger");});
test("romiti -> rom", function() {deepEqual( Stem("romiti"), "rom");});
test("romito -> rom", function() {deepEqual( Stem("romito"), "rom");});
test("romolo -> romol", function() {deepEqual( Stem("romolo"), "romol");});
test("rompa -> romp", function() {deepEqual( Stem("rompa"), "romp");});
test("rompe -> romp", function() {deepEqual( Stem("rompe"), "romp");});
test("rompendo -> romp", function() {deepEqual( Stem("rompendo"), "romp");});
test("romper -> romper", function() {deepEqual( Stem("romper"), "romper");});
test("rompere -> romp", function() {deepEqual( Stem("rompere"), "romp");});
test("romperla -> romp", function() {deepEqual( Stem("romperla"), "romp");});
test("rompevano -> romp", function() {deepEqual( Stem("rompevano"), "romp");});
test("rompicollo -> rompicoll", function() {deepEqual( Stem("rompicollo"), "rompicoll");});
test("rompono -> romp", function() {deepEqual( Stem("rompono"), "romp");});
test("ron -> ron", function() {deepEqual( Stem("ron"), "ron");});
test("ronald -> ronald", function() {deepEqual( Stem("ronald"), "ronald");});
test("roncato -> ronc", function() {deepEqual( Stem("roncato"), "ronc");});
test("ronchi -> ronc", function() {deepEqual( Stem("ronchi"), "ronc");});
test("ronco -> ronc", function() {deepEqual( Stem("ronco"), "ronc");});
test("roncole -> roncol", function() {deepEqual( Stem("roncole"), "roncol");});
test("roncone -> roncon", function() {deepEqual( Stem("roncone"), "roncon");});
test("ronda -> rond", function() {deepEqual( Stem("ronda"), "rond");});
test("rondine -> rondin", function() {deepEqual( Stem("rondine"), "rondin");});
test("ronzando -> ronz", function() {deepEqual( Stem("ronzando"), "ronz");});
test("ronzarle -> ronz", function() {deepEqual( Stem("ronzarle"), "ronz");});
test("ronzasse -> ronz", function() {deepEqual( Stem("ronzasse"), "ronz");});
test("ronzatori -> ronzator", function() {deepEqual( Stem("ronzatori"), "ronzator");});
test("ronzavano -> ronz", function() {deepEqual( Stem("ronzavano"), "ronz");});
test("ronzìo -> ronzì", function() {deepEqual( Stem("ronzìo"), "ronzì");});
test("ronzlo -> ronzl", function() {deepEqual( Stem("ronzlo"), "ronzl");});
test("roque -> roqu", function() {deepEqual( Stem("roque"), "roqu");});
test("rosa -> ros", function() {deepEqual( Stem("rosa"), "ros");});
test("rosanna -> rosann", function() {deepEqual( Stem("rosanna"), "rosann");});
test("rosano -> ros", function() {deepEqual( Stem("rosano"), "ros");});
test("rosaria -> rosar", function() {deepEqual( Stem("rosaria"), "rosar");});
test("rosario -> rosar", function() {deepEqual( Stem("rosario"), "rosar");});
test("rosaro -> rosar", function() {deepEqual( Stem("rosaro"), "rosar");});
test("rosati -> ros", function() {deepEqual( Stem("rosati"), "ros");});
test("roscia -> rosc", function() {deepEqual( Stem("roscia"), "rosc");});
test("rose -> ros", function() {deepEqual( Stem("rose"), "ros");});
test("roseo -> rose", function() {deepEqual( Stem("roseo"), "rose");});
test("rosi -> ros", function() {deepEqual( Stem("rosi"), "ros");});
test("rosica -> rosic", function() {deepEqual( Stem("rosica"), "rosic");});
test("rosicchiata -> rosicc", function() {deepEqual( Stem("rosicchiata"), "rosicc");});
test("rosie -> ros", function() {deepEqual( Stem("rosie"), "ros");});
test("rosmarino -> rosmarin", function() {deepEqual( Stem("rosmarino"), "rosmarin");});
test("roso -> ros", function() {deepEqual( Stem("roso"), "ros");});
test("rosolava -> rosol", function() {deepEqual( Stem("rosolava"), "rosol");});
test("rosone -> roson", function() {deepEqual( Stem("rosone"), "roson");});
test("rospi -> rosp", function() {deepEqual( Stem("rospi"), "rosp");});
test("rospo -> rosp", function() {deepEqual( Stem("rospo"), "rosp");});
test("rossa -> ross", function() {deepEqual( Stem("rossa"), "ross");});
test("rosse -> ross", function() {deepEqual( Stem("rosse"), "ross");});
test("rossè -> ross", function() {deepEqual( Stem("rossè"), "ross");});
test("rosseggiante -> rossegg", function() {deepEqual( Stem("rosseggiante"), "rossegg");});
test("rosseggianti -> rossegg", function() {deepEqual( Stem("rosseggianti"), "rossegg");});
test("rossetti -> rossett", function() {deepEqual( Stem("rossetti"), "rossett");});
test("rossetto -> rossett", function() {deepEqual( Stem("rossetto"), "rossett");});
test("rossi -> ross", function() {deepEqual( Stem("rossi"), "ross");});
test("rossiccia -> rossicc", function() {deepEqual( Stem("rossiccia"), "rossicc");});
test("rossini -> rossin", function() {deepEqual( Stem("rossini"), "rossin");});
test("rossito -> ross", function() {deepEqual( Stem("rossito"), "ross");});
test("rosso -> ross", function() {deepEqual( Stem("rosso"), "ross");});
test("rossoblu -> rossoblu", function() {deepEqual( Stem("rossoblu"), "rossoblu");});
test("rossoblù -> rossoblù", function() {deepEqual( Stem("rossoblù"), "rossoblù");});
test("rossonera -> rossoner", function() {deepEqual( Stem("rossonera"), "rossoner");});
test("rossoneri -> rossoner", function() {deepEqual( Stem("rossoneri"), "rossoner");});
test("rossore -> rossor", function() {deepEqual( Stem("rossore"), "rossor");});
test("rosy -> rosy", function() {deepEqual( Stem("rosy"), "rosy");});
test("rota -> rot", function() {deepEqual( Stem("rota"), "rot");});
test("rotaie -> rotai", function() {deepEqual( Stem("rotaie"), "rotai");});
test("rotante -> rotant", function() {deepEqual( Stem("rotante"), "rotant");});
test("rotazione -> rotazion", function() {deepEqual( Stem("rotazione"), "rotazion");});
test("rote -> rot", function() {deepEqual( Stem("rote"), "rot");});
test("roteando -> rot", function() {deepEqual( Stem("roteando"), "rot");});
test("rotella -> rotell", function() {deepEqual( Stem("rotella"), "rotell");});
test("roth -> roth", function() {deepEqual( Stem("roth"), "roth");});
test("rotocalco -> rotocalc", function() {deepEqual( Stem("rotocalco"), "rotocalc");});
test("rotoli -> rotol", function() {deepEqual( Stem("rotoli"), "rotol");});
test("rotolo -> rotol", function() {deepEqual( Stem("rotolo"), "rotol");});
test("rotonda -> rotond", function() {deepEqual( Stem("rotonda"), "rotond");});
test("rotondi -> rotond", function() {deepEqual( Stem("rotondi"), "rotond");});
test("rotondo -> rotond", function() {deepEqual( Stem("rotondo"), "rotond");});
test("rotta -> rott", function() {deepEqual( Stem("rotta"), "rott");});
test("rottame -> rottam", function() {deepEqual( Stem("rottame"), "rottam");});
test("rottami -> rottam", function() {deepEqual( Stem("rottami"), "rottam");});
test("rotte -> rott", function() {deepEqual( Stem("rotte"), "rott");});
test("rotterdam -> rotterdam", function() {deepEqual( Stem("rotterdam"), "rotterdam");});
test("rotti -> rott", function() {deepEqual( Stem("rotti"), "rott");});
test("rotto -> rott", function() {deepEqual( Stem("rotto"), "rott");});
test("rottura -> rottur", function() {deepEqual( Stem("rottura"), "rottur");});
test("roulettes -> roulettes", function() {deepEqual( Stem("roulettes"), "roulettes");});
test("roundtree -> roundtre", function() {deepEqual( Stem("roundtree"), "roundtre");});
test("rouse -> rous", function() {deepEqual( Stem("rouse"), "rous");});
test("routine -> routin", function() {deepEqual( Stem("routine"), "routin");});
test("rover -> rover", function() {deepEqual( Stem("rover"), "rover");});
test("rovescia -> rovesc", function() {deepEqual( Stem("rovescia"), "rovesc");});
test("rovesciano -> rovesc", function() {deepEqual( Stem("rovesciano"), "rovesc");});
test("rovesciar -> rovesc", function() {deepEqual( Stem("rovesciar"), "rovesc");});
test("rovesciarla -> rovesc", function() {deepEqual( Stem("rovesciarla"), "rovesc");});
test("rovesciata -> rovesc", function() {deepEqual( Stem("rovesciata"), "rovesc");});
test("rovesciavano -> rovesc", function() {deepEqual( Stem("rovesciavano"), "rovesc");});
test("rovescio -> rovesc", function() {deepEqual( Stem("rovescio"), "rovesc");});
test("rovesciò -> rovesc", function() {deepEqual( Stem("rovesciò"), "rovesc");});
test("rovigo -> rovig", function() {deepEqual( Stem("rovigo"), "rovig");});
test("rovina -> rovin", function() {deepEqual( Stem("rovina"), "rovin");});
test("rovinan -> rovinan", function() {deepEqual( Stem("rovinan"), "rovinan");});
test("rovinando -> rovin", function() {deepEqual( Stem("rovinando"), "rovin");});
test("rovinar -> rovin", function() {deepEqual( Stem("rovinar"), "rovin");});
test("rovinare -> rovin", function() {deepEqual( Stem("rovinare"), "rovin");});
test("rovinarmi -> rovin", function() {deepEqual( Stem("rovinarmi"), "rovin");});
test("rovinarsi -> rovin", function() {deepEqual( Stem("rovinarsi"), "rovin");});
test("rovinarvi -> rovin", function() {deepEqual( Stem("rovinarvi"), "rovin");});
test("rovinata -> rovin", function() {deepEqual( Stem("rovinata"), "rovin");});
test("rovinato -> rovin", function() {deepEqual( Stem("rovinato"), "rovin");});
test("rovinavano -> rovin", function() {deepEqual( Stem("rovinavano"), "rovin");});
test("rovine -> rovin", function() {deepEqual( Stem("rovine"), "rovin");});
test("rovistando -> rovist", function() {deepEqual( Stem("rovistando"), "rovist");});
test("rovo -> rov", function() {deepEqual( Stem("rovo"), "rov");});
test("rowland -> rowland", function() {deepEqual( Stem("rowland"), "rowland");});
test("royal -> royal", function() {deepEqual( Stem("royal"), "royal");});
test("royce -> royc", function() {deepEqual( Stem("royce"), "royc");});
test("rozza -> rozz", function() {deepEqual( Stem("rozza"), "rozz");});
test("rozzi -> rozz", function() {deepEqual( Stem("rozzi"), "rozz");});
test("rozzo -> rozz", function() {deepEqual( Stem("rozzo"), "rozz");});
test("rp -> rp", function() {deepEqual( Stem("rp"), "rp");});
test("rpesidente -> rpesident", function() {deepEqual( Stem("rpesidente"), "rpesident");});
test("rpt -> rpt", function() {deepEqual( Stem("rpt"), "rpt");});
test("rr -> rr", function() {deepEqual( Stem("rr"), "rr");});
test("rs -> rs", function() {deepEqual( Stem("rs"), "rs");});
test("rsu -> rsu", function() {deepEqual( Stem("rsu"), "rsu");});
test("ruba -> rub", function() {deepEqual( Stem("ruba"), "rub");});
test("rubamenti -> rub", function() {deepEqual( Stem("rubamenti"), "rub");});
test("rubar -> rub", function() {deepEqual( Stem("rubar"), "rub");});
test("rubare -> rub", function() {deepEqual( Stem("rubare"), "rub");});
test("rubarle -> rub", function() {deepEqual( Stem("rubarle"), "rub");});
test("rubarsela -> rubarsel", function() {deepEqual( Stem("rubarsela"), "rubarsel");});
test("rubarselo -> rubarsel", function() {deepEqual( Stem("rubarselo"), "rubarsel");});
test("rubarsi -> rub", function() {deepEqual( Stem("rubarsi"), "rub");});
test("rubassi -> rub", function() {deepEqual( Stem("rubassi"), "rub");});
test("rubate -> rub", function() {deepEqual( Stem("rubate"), "rub");});
test("rubati -> rub", function() {deepEqual( Stem("rubati"), "rub");});
test("rubato -> rub", function() {deepEqual( Stem("rubato"), "rub");});
test("rubavano -> rub", function() {deepEqual( Stem("rubavano"), "rub");});
test("rubello -> rubell", function() {deepEqual( Stem("rubello"), "rubell");});
test("ruberie -> ruber", function() {deepEqual( Stem("ruberie"), "ruber");});
test("rubi -> rub", function() {deepEqual( Stem("rubi"), "rub");});
test("rubiconda -> rubicond", function() {deepEqual( Stem("rubiconda"), "rubicond");});
test("rubicondo -> rubicond", function() {deepEqual( Stem("rubicondo"), "rubicond");});
test("rubiera -> rubier", function() {deepEqual( Stem("rubiera"), "rubier");});
test("rubin -> rubin", function() {deepEqual( Stem("rubin"), "rubin");});
test("rubino -> rubin", function() {deepEqual( Stem("rubino"), "rubin");});
test("rubli -> rubl", function() {deepEqual( Stem("rubli"), "rubl");});
test("rubra -> rubr", function() {deepEqual( Stem("rubra"), "rubr");});
test("rubrica -> rubric", function() {deepEqual( Stem("rubrica"), "rubric");});
test("rubriche -> rubric", function() {deepEqual( Stem("rubriche"), "rubric");});
test("rude -> rud", function() {deepEqual( Stem("rude"), "rud");});
test("rudi -> rud", function() {deepEqual( Stem("rudi"), "rud");});
test("rudyard -> rudyard", function() {deepEqual( Stem("rudyard"), "rudyard");});
test("ruf -> ruf", function() {deepEqual( Stem("ruf"), "ruf");});
test("ruffa -> ruff", function() {deepEqual( Stem("ruffa"), "ruff");});
test("ruffino -> ruffin", function() {deepEqual( Stem("ruffino"), "ruffin");});
test("ruffo -> ruff", function() {deepEqual( Stem("ruffo"), "ruff");});
test("ruffoni -> ruffon", function() {deepEqual( Stem("ruffoni"), "ruffon");});
test("rugby -> rugby", function() {deepEqual( Stem("rugby"), "rugby");});
test("ruggenti -> ruggent", function() {deepEqual( Stem("ruggenti"), "ruggent");});
test("ruggero -> rugger", function() {deepEqual( Stem("ruggero"), "rugger");});
test("ruggine -> ruggin", function() {deepEqual( Stem("ruggine"), "ruggin");});
test("ruggito -> rugg", function() {deepEqual( Stem("ruggito"), "rugg");});
test("rughe -> rugh", function() {deepEqual( Stem("rughe"), "rugh");});
test("rugiada -> rugiad", function() {deepEqual( Stem("rugiada"), "rugiad");});
test("rugosa -> rugos", function() {deepEqual( Stem("rugosa"), "rugos");});
test("ruhpolding -> ruhpolding", function() {deepEqual( Stem("ruhpolding"), "ruhpolding");});
test("rui -> rui", function() {deepEqual( Stem("rui"), "rui");});
test("ruiz -> ruiz", function() {deepEqual( Stem("ruiz"), "ruiz");});
test("rumbelows -> rumbelows", function() {deepEqual( Stem("rumbelows"), "rumbelows");});
test("ruminando -> rumin", function() {deepEqual( Stem("ruminando"), "rumin");});
test("ruminarci -> rumin", function() {deepEqual( Stem("ruminarci"), "rumin");});
test("ruminava -> rumin", function() {deepEqual( Stem("ruminava"), "rumin");});
test("ruminò -> rumin", function() {deepEqual( Stem("ruminò"), "rumin");});
test("rumor -> rumor", function() {deepEqual( Stem("rumor"), "rumor");});
test("rumore -> rumor", function() {deepEqual( Stem("rumore"), "rumor");});
test("rumoreggiamento -> rumoregg", function() {deepEqual( Stem("rumoreggiamento"), "rumoregg");});
test("rumoreggiando -> rumoregg", function() {deepEqual( Stem("rumoreggiando"), "rumoregg");});
test("rumori -> rumor", function() {deepEqual( Stem("rumori"), "rumor");});
test("rumorosa -> rumor", function() {deepEqual( Stem("rumorosa"), "rumor");});
test("rumorosamente -> rumor", function() {deepEqual( Stem("rumorosamente"), "rumor");});
test("rumoroso -> rumor", function() {deepEqual( Stem("rumoroso"), "rumor");});
test("rundschaù -> rundschaù", function() {deepEqual( Stem("rundschaù"), "rundschaù");});
test("ruolettes -> ruolettes", function() {deepEqual( Stem("ruolettes"), "ruolettes");});
test("ruoli -> ruol", function() {deepEqual( Stem("ruoli"), "ruol");});
test("ruolo -> ruol", function() {deepEqual( Stem("ruolo"), "ruol");});
test("ruota -> ruot", function() {deepEqual( Stem("ruota"), "ruot");});
test("ruote -> ruot", function() {deepEqual( Stem("ruote"), "ruot");});
test("ruotolo -> ruotol", function() {deepEqual( Stem("ruotolo"), "ruotol");});
test("rupi -> rup", function() {deepEqual( Stem("rupi"), "rup");});
test("ruppe -> rupp", function() {deepEqual( Stem("ruppe"), "rupp");});
test("ruprechtskirche -> ruprechtskirc", function() {deepEqual( Stem("ruprechtskirche"), "ruprechtskirc");});
test("rurali -> rural", function() {deepEqual( Stem("rurali"), "rural");});
test("rus -> rus", function() {deepEqual( Stem("rus"), "rus");});
test("ruscello -> ruscell", function() {deepEqual( Stem("ruscello"), "ruscell");});
test("rushdi -> rushd", function() {deepEqual( Stem("rushdi"), "rushd");});
test("rushdie -> rushd", function() {deepEqual( Stem("rushdie"), "rushd");});
test("rushdiè -> rushd", function() {deepEqual( Stem("rushdiè"), "rushd");});
test("ruspi -> rusp", function() {deepEqual( Stem("ruspi"), "rusp");});
test("russa -> russ", function() {deepEqual( Stem("russa"), "russ");});
test("russare -> russ", function() {deepEqual( Stem("russare"), "russ");});
test("russava -> russ", function() {deepEqual( Stem("russava"), "russ");});
test("russe -> russ", function() {deepEqual( Stem("russe"), "russ");});
test("russi -> russ", function() {deepEqual( Stem("russi"), "russ");});
test("russia -> russ", function() {deepEqual( Stem("russia"), "russ");});
test("russie -> russ", function() {deepEqual( Stem("russie"), "russ");});
test("russo -> russ", function() {deepEqual( Stem("russo"), "russ");});
test("rustica -> rustic", function() {deepEqual( Stem("rustica"), "rustic");});
test("rustichezza -> rustichezz", function() {deepEqual( Stem("rustichezza"), "rustichezz");});
test("ruta -> rut", function() {deepEqual( Stem("ruta"), "rut");});
test("rutelli -> rutell", function() {deepEqual( Stem("rutelli"), "rutell");});
test("rutilante -> rutil", function() {deepEqual( Stem("rutilante"), "rutil");});
test("ruvida -> ruvid", function() {deepEqual( Stem("ruvida"), "ruvid");});
test("ruvidamente -> ruvid", function() {deepEqual( Stem("ruvidamente"), "ruvid");});
test("ruvide -> ruvid", function() {deepEqual( Stem("ruvide"), "ruvid");});
test("ruvido -> ruvid", function() {deepEqual( Stem("ruvido"), "ruvid");});
test("ruz -> ruz", function() {deepEqual( Stem("ruz"), "ruz");});
test("ruzzo -> ruzz", function() {deepEqual( Stem("ruzzo"), "ruzz");});
test("ruzzolare -> ruzzol", function() {deepEqual( Stem("ruzzolare"), "ruzzol");});
test("ruzzolarono -> ruzzol", function() {deepEqual( Stem("ruzzolarono"), "ruzzol");});
test("rv -> rv", function() {deepEqual( Stem("rv"), "rv");});
test("rwdm -> rwdm", function() {deepEqual( Stem("rwdm"), "rwdm");});
test("rwe -> rwe", function() {deepEqual( Stem("rwe"), "rwe");});
test("ryryryryryryryryryryryryryryryryryryryryr -> ryryryryryryryryryryryryryryryryryryryryr", function() {deepEqual( Stem("ryryryryryryryryryryryryryryryryryryryryr"), "ryryryryryryryryryryryryryryryryryryryryr");});
test("ryryryryryryryryryryryryryryryryryryryryryry -> ryryryryryryryryryryryryryryryryryryryryryry", function() {deepEqual( Stem("ryryryryryryryryryryryryryryryryryryryryryry"), "ryryryryryryryryryryryryryryryryryryryryryry");});
test("s -> s", function() {deepEqual( Stem("s"), "s");});
test("sa -> sa", function() {deepEqual( Stem("sa"), "sa");});
test("saab -> saab", function() {deepEqual( Stem("saab"), "saab");});
test("saad -> saad", function() {deepEqual( Stem("saad"), "saad");});
test("saada -> saad", function() {deepEqual( Stem("saada"), "saad");});
test("sabatini -> sabatin", function() {deepEqual( Stem("sabatini"), "sabatin");});
test("sabato -> sab", function() {deepEqual( Stem("sabato"), "sab");});
test("sabau -> sabau", function() {deepEqual( Stem("sabau"), "sabau");});
test("sabbia -> sabb", function() {deepEqual( Stem("sabbia"), "sabb");});
test("sabe -> sab", function() {deepEqual( Stem("sabe"), "sab");});
test("sabotare -> sabot", function() {deepEqual( Stem("sabotare"), "sabot");});
test("sabrina -> sabrin", function() {deepEqual( Stem("sabrina"), "sabrin");});
test("sacca -> sacc", function() {deepEqual( Stem("sacca"), "sacc");});
test("saccenteria -> saccenter", function() {deepEqual( Stem("saccenteria"), "saccenter");});
test("saccheggiare -> sacchegg", function() {deepEqual( Stem("saccheggiare"), "sacchegg");});
test("saccheggiato -> sacchegg", function() {deepEqual( Stem("saccheggiato"), "sacchegg");});
test("saccheggiatori -> sacchegg", function() {deepEqual( Stem("saccheggiatori"), "sacchegg");});
test("saccheggio -> sacchegg", function() {deepEqual( Stem("saccheggio"), "sacchegg");});
test("sacchetti -> sacchett", function() {deepEqual( Stem("sacchetti"), "sacchett");});
test("sacchi -> sacc", function() {deepEqual( Stem("sacchi"), "sacc");});
test("sacco -> sacc", function() {deepEqual( Stem("sacco"), "sacc");});
test("saccone -> saccon", function() {deepEqual( Stem("saccone"), "saccon");});
test("sacconi -> saccon", function() {deepEqual( Stem("sacconi"), "saccon");});
test("sace -> sac", function() {deepEqual( Stem("sace"), "sac");});
test("sacerdote -> sacerdot", function() {deepEqual( Stem("sacerdote"), "sacerdot");});
test("sacerdoti -> sacerdot", function() {deepEqual( Stem("sacerdoti"), "sacerdot");});
test("sacerdozio -> sacerdoz", function() {deepEqual( Stem("sacerdozio"), "sacerdoz");});
test("sack -> sack", function() {deepEqual( Stem("sack"), "sack");});
test("sacra -> sacr", function() {deepEqual( Stem("sacra"), "sacr");});
test("sacrificare -> sacrific", function() {deepEqual( Stem("sacrificare"), "sacrific");});
test("sacrificarsi -> sacrific", function() {deepEqual( Stem("sacrificarsi"), "sacrific");});
test("sacrificata -> sacrific", function() {deepEqual( Stem("sacrificata"), "sacrific");});
test("sacrificati -> sacrific", function() {deepEqual( Stem("sacrificati"), "sacrific");});
test("sacrificato -> sacrific", function() {deepEqual( Stem("sacrificato"), "sacrific");});
test("sacrifici -> sacrif", function() {deepEqual( Stem("sacrifici"), "sacrif");});
test("sacrificio -> sacrific", function() {deepEqual( Stem("sacrificio"), "sacrific");});
test("sacrifizio -> sacrifiz", function() {deepEqual( Stem("sacrifizio"), "sacrifiz");});
test("sacrilega -> sacrileg", function() {deepEqual( Stem("sacrilega"), "sacrileg");});
test("sacrilegio -> sacrileg", function() {deepEqual( Stem("sacrilegio"), "sacrileg");});
test("sacro -> sacr", function() {deepEqual( Stem("sacro"), "sacr");});
test("sacrosante -> sacros", function() {deepEqual( Stem("sacrosante"), "sacros");});
test("sacrosanto -> sacrosant", function() {deepEqual( Stem("sacrosanto"), "sacrosant");});
test("sacully -> sacully", function() {deepEqual( Stem("sacully"), "sacully");});
test("saddam -> saddam", function() {deepEqual( Stem("saddam"), "saddam");});
test("saes -> saes", function() {deepEqual( Stem("saes"), "saes");});
test("saf -> saf", function() {deepEqual( Stem("saf"), "saf");});
test("saffa -> saff", function() {deepEqual( Stem("saffa"), "saff");});
test("safilo -> safil", function() {deepEqual( Stem("safilo"), "safil");});
test("safr -> safr", function() {deepEqual( Stem("safr"), "safr");});
test("saga -> sag", function() {deepEqual( Stem("saga"), "sag");});
test("sagacità -> sagac", function() {deepEqual( Stem("sagacità"), "sagac");});
test("saggezza -> saggezz", function() {deepEqual( Stem("saggezza"), "saggezz");});
test("saggia -> sagg", function() {deepEqual( Stem("saggia"), "sagg");});
test("saggina -> saggin", function() {deepEqual( Stem("saggina"), "saggin");});
test("saggio -> sagg", function() {deepEqual( Stem("saggio"), "sagg");});
test("sagra -> sagr", function() {deepEqual( Stem("sagra"), "sagr");});
test("sagrare -> sagr", function() {deepEqual( Stem("sagrare"), "sagr");});
test("sagrava -> sagr", function() {deepEqual( Stem("sagrava"), "sagr");});
test("sagrestano -> sagrest", function() {deepEqual( Stem("sagrestano"), "sagrest");});
test("sagrestia -> sagrest", function() {deepEqual( Stem("sagrestia"), "sagrest");});
test("sagrifizi -> sagrifiz", function() {deepEqual( Stem("sagrifizi"), "sagrifiz");});
test("sagrifizio -> sagrifiz", function() {deepEqual( Stem("sagrifizio"), "sagrifiz");});
test("sai -> sai", function() {deepEqual( Stem("sai"), "sai");});
test("saiag -> saiag", function() {deepEqual( Stem("saiag"), "saiag");});
test("said -> said", function() {deepEqual( Stem("said"), "said");});
test("sailor -> sailor", function() {deepEqual( Stem("sailor"), "sailor");});
test("saima -> saim", function() {deepEqual( Stem("saima"), "saim");});
test("saint -> saint", function() {deepEqual( Stem("saint"), "saint");});
test("sainz -> sainz", function() {deepEqual( Stem("sainz"), "sainz");});
test("saio -> sai", function() {deepEqual( Stem("saio"), "sai");});
test("saipem -> saipem", function() {deepEqual( Stem("saipem"), "saipem");});
test("sal -> sal", function() {deepEqual( Stem("sal"), "sal");});
test("sala -> sal", function() {deepEqual( Stem("sala"), "sal");});
test("salam -> salam", function() {deepEqual( Stem("salam"), "salam");});
test("salamandra -> salamandr", function() {deepEqual( Stem("salamandra"), "salamandr");});
test("salamon -> salamon", function() {deepEqual( Stem("salamon"), "salamon");});
test("salamone -> salamon", function() {deepEqual( Stem("salamone"), "salamon");});
test("salari -> salar", function() {deepEqual( Stem("salari"), "salar");});
test("salariale -> salarial", function() {deepEqual( Stem("salariale"), "salarial");});
test("salariali -> salarial", function() {deepEqual( Stem("salariali"), "salarial");});
test("salario -> salar", function() {deepEqual( Stem("salario"), "salar");});
test("salda -> sald", function() {deepEqual( Stem("salda"), "sald");});
test("saldana -> saldan", function() {deepEqual( Stem("saldana"), "saldan");});
test("saldar -> sald", function() {deepEqual( Stem("saldar"), "sald");});
test("saldare -> sald", function() {deepEqual( Stem("saldare"), "sald");});
test("saldarle -> sald", function() {deepEqual( Stem("saldarle"), "sald");});
test("saldate -> sald", function() {deepEqual( Stem("saldate"), "sald");});
test("saldato -> sald", function() {deepEqual( Stem("saldato"), "sald");});
test("saldi -> sald", function() {deepEqual( Stem("saldi"), "sald");});
test("saldo -> sald", function() {deepEqual( Stem("saldo"), "sald");});
test("saldò -> sald", function() {deepEqual( Stem("saldò"), "sald");});
test("sale -> sal", function() {deepEqual( Stem("sale"), "sal");});
test("salemi -> salem", function() {deepEqual( Stem("salemi"), "salem");});
test("salendo -> sal", function() {deepEqual( Stem("salendo"), "sal");});
test("salernitana -> salernitan", function() {deepEqual( Stem("salernitana"), "salernitan");});
test("salernitani -> salernitan", function() {deepEqual( Stem("salernitani"), "salernitan");});
test("salernitano -> salernit", function() {deepEqual( Stem("salernitano"), "salernit");});
test("salerno -> salern", function() {deepEqual( Stem("salerno"), "salern");});
test("salesiana -> salesian", function() {deepEqual( Stem("salesiana"), "salesian");});
test("salezzari -> salezzar", function() {deepEqual( Stem("salezzari"), "salezzar");});
test("salgon -> salgon", function() {deepEqual( Stem("salgon"), "salgon");});
test("salgono -> salg", function() {deepEqual( Stem("salgono"), "salg");});
test("sali -> sal", function() {deepEqual( Stem("sali"), "sal");});
test("salì -> sal", function() {deepEqual( Stem("salì"), "sal");});
test("salinas -> salinas", function() {deepEqual( Stem("salinas"), "salinas");});
test("salingen -> salingen", function() {deepEqual( Stem("salingen"), "salingen");});
test("salio -> sal", function() {deepEqual( Stem("salio"), "sal");});
test("salir -> sal", function() {deepEqual( Stem("salir"), "sal");});
test("salire -> sal", function() {deepEqual( Stem("salire"), "sal");});
test("salirete -> sal", function() {deepEqual( Stem("salirete"), "sal");});
test("salirono -> sal", function() {deepEqual( Stem("salirono"), "sal");});
test("salirvi -> sal", function() {deepEqual( Stem("salirvi"), "sal");});
test("saliscendi -> salisc", function() {deepEqual( Stem("saliscendi"), "salisc");});
test("salisse -> saliss", function() {deepEqual( Stem("salisse"), "saliss");});
test("salita -> sal", function() {deepEqual( Stem("salita"), "sal");});
test("salite -> sal", function() {deepEqual( Stem("salite"), "sal");});
test("saliti -> sal", function() {deepEqual( Stem("saliti"), "sal");});
test("salito -> sal", function() {deepEqual( Stem("salito"), "sal");});
test("saliva -> sal", function() {deepEqual( Stem("saliva"), "sal");});
test("salivo -> sal", function() {deepEqual( Stem("salivo"), "sal");});
test("salma -> salm", function() {deepEqual( Stem("salma"), "salm");});
test("salman -> salman", function() {deepEqual( Stem("salman"), "salman");});
test("salmo -> salm", function() {deepEqual( Stem("salmo"), "salm");});
test("salmone -> salmon", function() {deepEqual( Stem("salmone"), "salmon");});
test("salomone -> salomon", function() {deepEqual( Stem("salomone"), "salomon");});
test("salone -> salon", function() {deepEqual( Stem("salone"), "salon");});
test("saloni -> salon", function() {deepEqual( Stem("saloni"), "salon");});
test("salotti -> salott", function() {deepEqual( Stem("salotti"), "salott");});
test("salottino -> salottin", function() {deepEqual( Stem("salottino"), "salottin");});
test("salotto -> salott", function() {deepEqual( Stem("salotto"), "salott");});
test("salsano -> sals", function() {deepEqual( Stem("salsano"), "sals");});
test("salt -> salt", function() {deepEqual( Stem("salt"), "salt");});
test("salta -> salt", function() {deepEqual( Stem("salta"), "salt");});
test("saltando -> salt", function() {deepEqual( Stem("saltando"), "salt");});
test("saltanto -> saltant", function() {deepEqual( Stem("saltanto"), "saltant");});
test("saltar -> salt", function() {deepEqual( Stem("saltar"), "salt");});
test("saltare -> salt", function() {deepEqual( Stem("saltare"), "salt");});
test("saltata -> salt", function() {deepEqual( Stem("saltata"), "salt");});
test("saltato -> salt", function() {deepEqual( Stem("saltato"), "salt");});
test("saltava -> salt", function() {deepEqual( Stem("saltava"), "salt");});
test("saltellante -> saltell", function() {deepEqual( Stem("saltellante"), "saltell");});
test("saltellava -> saltell", function() {deepEqual( Stem("saltellava"), "saltell");});
test("saltello -> saltell", function() {deepEqual( Stem("saltello"), "saltell");});
test("saltelloni -> saltellon", function() {deepEqual( Stem("saltelloni"), "saltellon");});
test("salterà -> salt", function() {deepEqual( Stem("salterà"), "salt");});
test("salterello -> salterell", function() {deepEqual( Stem("salterello"), "salterell");});
test("salti -> salt", function() {deepEqual( Stem("salti"), "salt");});
test("salto -> salt", function() {deepEqual( Stem("salto"), "salt");});
test("saltò -> salt", function() {deepEqual( Stem("saltò"), "salt");});
test("saltuaria -> saltuar", function() {deepEqual( Stem("saltuaria"), "saltuar");});
test("salubre -> salubr", function() {deepEqual( Stem("salubre"), "salubr");});
test("saluta -> sal", function() {deepEqual( Stem("saluta"), "sal");});
test("salutala -> salutal", function() {deepEqual( Stem("salutala"), "salutal");});
test("salutando -> salut", function() {deepEqual( Stem("salutando"), "salut");});
test("salutar -> salut", function() {deepEqual( Stem("salutar"), "salut");});
test("salutare -> salut", function() {deepEqual( Stem("salutare"), "salut");});
test("salutari -> salutar", function() {deepEqual( Stem("salutari"), "salutar");});
test("salutasse -> salut", function() {deepEqual( Stem("salutasse"), "salut");});
test("salutata -> salut", function() {deepEqual( Stem("salutata"), "salut");});
test("salutati -> salut", function() {deepEqual( Stem("salutati"), "salut");});
test("salutatili -> salutatil", function() {deepEqual( Stem("salutatili"), "salutatil");});
test("salutato -> salut", function() {deepEqual( Stem("salutato"), "salut");});
test("salutavan -> salutavan", function() {deepEqual( Stem("salutavan"), "salutavan");});
test("salute -> sal", function() {deepEqual( Stem("salute"), "sal");});
test("salutevole -> salutevol", function() {deepEqual( Stem("salutevole"), "salutevol");});
test("saluti -> sal", function() {deepEqual( Stem("saluti"), "sal");});
test("salutiamo -> salut", function() {deepEqual( Stem("salutiamo"), "salut");});
test("saluto -> sal", function() {deepEqual( Stem("saluto"), "sal");});
test("salutò -> salut", function() {deepEqual( Stem("salutò"), "salut");});
test("salva -> salv", function() {deepEqual( Stem("salva"), "salv");});
test("salvadanaio -> salvadanai", function() {deepEqual( Stem("salvadanaio"), "salvadanai");});
test("salvaguardando -> salvaguard", function() {deepEqual( Stem("salvaguardando"), "salvaguard");});
test("salvaguardare -> salvaguard", function() {deepEqual( Stem("salvaguardare"), "salvaguard");});
test("salvaguardia -> salvaguard", function() {deepEqual( Stem("salvaguardia"), "salvaguard");});
test("salvamento -> salv", function() {deepEqual( Stem("salvamento"), "salv");});
test("salvando -> salv", function() {deepEqual( Stem("salvando"), "salv");});
test("salvar -> salv", function() {deepEqual( Stem("salvar"), "salv");});
test("salvarci -> salv", function() {deepEqual( Stem("salvarci"), "salv");});
test("salvare -> salv", function() {deepEqual( Stem("salvare"), "salv");});
test("salvarla -> salv", function() {deepEqual( Stem("salvarla"), "salv");});
test("salvarlo -> salv", function() {deepEqual( Stem("salvarlo"), "salv");});
test("salvarne -> salv", function() {deepEqual( Stem("salvarne"), "salv");});
test("salvarsi -> salv", function() {deepEqual( Stem("salvarsi"), "salv");});
test("salvarti -> salv", function() {deepEqual( Stem("salvarti"), "salv");});
test("salvata -> salv", function() {deepEqual( Stem("salvata"), "salv");});
test("salvataggio -> salvatagg", function() {deepEqual( Stem("salvataggio"), "salvatagg");});
test("salvatelo -> salvatel", function() {deepEqual( Stem("salvatelo"), "salvatel");});
test("salvatica -> salvat", function() {deepEqual( Stem("salvatica"), "salvat");});
test("salvatiche -> salvat", function() {deepEqual( Stem("salvatiche"), "salvat");});
test("salvatichezza -> salvatichezz", function() {deepEqual( Stem("salvatichezza"), "salvatichezz");});
test("salvatico -> salvat", function() {deepEqual( Stem("salvatico"), "salvat");});
test("salvato -> salv", function() {deepEqual( Stem("salvato"), "salv");});
test("salvatore -> salvator", function() {deepEqual( Stem("salvatore"), "salvator");});
test("salvatori -> salvator", function() {deepEqual( Stem("salvatori"), "salvator");});
test("salvatrice -> salvatric", function() {deepEqual( Stem("salvatrice"), "salvatric");});
test("salvavano -> salv", function() {deepEqual( Stem("salvavano"), "salv");});
test("salvazion -> salvazion", function() {deepEqual( Stem("salvazion"), "salvazion");});
test("salvazione -> salvazion", function() {deepEqual( Stem("salvazione"), "salvazion");});
test("salve -> salv", function() {deepEqual( Stem("salve"), "salv");});
test("salvemini -> salvemin", function() {deepEqual( Stem("salvemini"), "salvemin");});
test("salverà -> salv", function() {deepEqual( Stem("salverà"), "salv");});
test("salvezza -> salvezz", function() {deepEqual( Stem("salvezza"), "salvezz");});
test("salvezzà -> salvezz", function() {deepEqual( Stem("salvezzà"), "salvezz");});
test("salvi -> salv", function() {deepEqual( Stem("salvi"), "salv");});
test("salviamo -> salv", function() {deepEqual( Stem("salviamo"), "salv");});
test("salvo -> salv", function() {deepEqual( Stem("salvo"), "salv");});
test("salvocondotto -> salvocondott", function() {deepEqual( Stem("salvocondotto"), "salvocondott");});
test("saly -> saly", function() {deepEqual( Stem("saly"), "saly");});
test("sam -> sam", function() {deepEqual( Stem("sam"), "sam");});
test("sambuca -> sambuc", function() {deepEqual( Stem("sambuca"), "sambuc");});
test("sammy -> sammy", function() {deepEqual( Stem("sammy"), "sammy");});
test("samp -> samp", function() {deepEqual( Stem("samp"), "samp");});
test("sampdoria -> sampdor", function() {deepEqual( Stem("sampdoria"), "sampdor");});
test("sampdoriana -> sampdorian", function() {deepEqual( Stem("sampdoriana"), "sampdorian");});
test("sampdoriani -> sampdorian", function() {deepEqual( Stem("sampdoriani"), "sampdorian");});
test("samuel -> samuel", function() {deepEqual( Stem("samuel"), "samuel");});
test("samuele -> samuel", function() {deepEqual( Stem("samuele"), "samuel");});
test("samurai -> samura", function() {deepEqual( Stem("samurai"), "samura");});
test("san -> san", function() {deepEqual( Stem("san"), "san");});
test("sana -> san", function() {deepEqual( Stem("sana"), "san");});
test("sanandola -> san", function() {deepEqual( Stem("sanandola"), "san");});
test("sanare -> san", function() {deepEqual( Stem("sanare"), "san");});
test("sanatoria -> sanator", function() {deepEqual( Stem("sanatoria"), "sanator");});
test("sanchez -> sanchez", function() {deepEqual( Stem("sanchez"), "sanchez");});
test("sancire -> sanc", function() {deepEqual( Stem("sancire"), "sanc");});
test("sancisce -> sanc", function() {deepEqual( Stem("sancisce"), "sanc");});
test("sancita -> sanc", function() {deepEqual( Stem("sancita"), "sanc");});
test("sancito -> sanc", function() {deepEqual( Stem("sancito"), "sanc");});
test("sandali -> sandal", function() {deepEqual( Stem("sandali"), "sandal");});
test("sande -> sand", function() {deepEqual( Stem("sande"), "sand");});
test("sanders -> sanders", function() {deepEqual( Stem("sanders"), "sanders");});
test("sandi -> sand", function() {deepEqual( Stem("sandi"), "sand");});
test("sandis -> sandis", function() {deepEqual( Stem("sandis"), "sandis");});
test("sandpiper -> sandpiper", function() {deepEqual( Stem("sandpiper"), "sandpiper");});
test("sandra -> sandr", function() {deepEqual( Stem("sandra"), "sandr");});
test("sandreani -> sandrean", function() {deepEqual( Stem("sandreani"), "sandrean");});
test("sandrelli -> sandrell", function() {deepEqual( Stem("sandrelli"), "sandrell");});
test("sandrine -> sandrin", function() {deepEqual( Stem("sandrine"), "sandrin");});
test("sandro -> sandr", function() {deepEqual( Stem("sandro"), "sandr");});
test("sands -> sands", function() {deepEqual( Stem("sands"), "sands");});
test("sane -> san", function() {deepEqual( Stem("sane"), "san");});
test("sangiorgi -> sangiorg", function() {deepEqual( Stem("sangiorgi"), "sangiorg");});
test("sangiuseppese -> sangiuseppes", function() {deepEqual( Stem("sangiuseppese"), "sangiuseppes");});
test("sangro -> sangr", function() {deepEqual( Stem("sangro"), "sangr");});
test("sangue -> sangu", function() {deepEqual( Stem("sangue"), "sangu");});
test("sanguigne -> sanguign", function() {deepEqual( Stem("sanguigne"), "sanguign");});
test("sanguigni -> sanguign", function() {deepEqual( Stem("sanguigni"), "sanguign");});
test("sanguinosa -> sanguin", function() {deepEqual( Stem("sanguinosa"), "sanguin");});
test("sanguinose -> sanguin", function() {deepEqual( Stem("sanguinose"), "sanguin");});
test("sanguinosi -> sanguin", function() {deepEqual( Stem("sanguinosi"), "sanguin");});
test("sani -> san", function() {deepEqual( Stem("sani"), "san");});
test("saniem -> saniem", function() {deepEqual( Stem("saniem"), "saniem");});
test("sanità -> sanit", function() {deepEqual( Stem("sanità"), "sanit");});
test("sanitari -> sanitar", function() {deepEqual( Stem("sanitari"), "sanitar");});
test("sanitaria -> sanitar", function() {deepEqual( Stem("sanitaria"), "sanitar");});
test("sanitarie -> sanitar", function() {deepEqual( Stem("sanitarie"), "sanitar");});
test("sanitario -> sanitar", function() {deepEqual( Stem("sanitario"), "sanitar");});
test("sankoh -> sankoh", function() {deepEqual( Stem("sankoh"), "sankoh");});
test("sanna -> sann", function() {deepEqual( Stem("sanna"), "sann");});
test("sanno -> sann", function() {deepEqual( Stem("sanno"), "sann");});
test("sano -> san", function() {deepEqual( Stem("sano"), "san");});
test("sanpaolo -> sanpaol", function() {deepEqual( Stem("sanpaolo"), "sanpaol");});
test("sanremo -> sanrem", function() {deepEqual( Stem("sanremo"), "sanrem");});
test("sanrocchino -> sanrocchin", function() {deepEqual( Stem("sanrocchino"), "sanrocchin");});
test("sansa -> sans", function() {deepEqual( Stem("sansa"), "sans");});
test("sansepolcro -> sansepolcr", function() {deepEqual( Stem("sansepolcro"), "sansepolcr");});
test("sansovino -> sansovin", function() {deepEqual( Stem("sansovino"), "sansovin");});
test("sant -> sant", function() {deepEqual( Stem("sant"), "sant");});
test("santa -> sant", function() {deepEqual( Stem("santa"), "sant");});
test("santafè -> santaf", function() {deepEqual( Stem("santafè"), "santaf");});
test("santagada -> santagad", function() {deepEqual( Stem("santagada"), "santagad");});
test("santamente -> sant", function() {deepEqual( Stem("santamente"), "sant");});
test("santander -> santander", function() {deepEqual( Stem("santander"), "santander");});
test("santaniello -> santaniell", function() {deepEqual( Stem("santaniello"), "santaniell");});
test("santarelli -> santarell", function() {deepEqual( Stem("santarelli"), "santarell");});
test("santavaleria -> santavaler", function() {deepEqual( Stem("santavaleria"), "santavaler");});
test("sante -> sant", function() {deepEqual( Stem("sante"), "sant");});
test("santer -> santer", function() {deepEqual( Stem("santer"), "santer");});
test("santerella -> santerell", function() {deepEqual( Stem("santerella"), "santerell");});
test("santerini -> santerin", function() {deepEqual( Stem("santerini"), "santerin");});
test("santi -> sant", function() {deepEqual( Stem("santi"), "sant");});
test("santiago -> santiag", function() {deepEqual( Stem("santiago"), "santiag");});
test("santificato -> santific", function() {deepEqual( Stem("santificato"), "santific");});
test("santificava -> santific", function() {deepEqual( Stem("santificava"), "santific");});
test("santini -> santin", function() {deepEqual( Stem("santini"), "santin");});
test("santino -> santin", function() {deepEqual( Stem("santino"), "santin");});
test("santis -> santis", function() {deepEqual( Stem("santis"), "santis");});
test("santissima -> santissim", function() {deepEqual( Stem("santissima"), "santissim");});
test("santità -> santit", function() {deepEqual( Stem("santità"), "santit");});
test("santo -> sant", function() {deepEqual( Stem("santo"), "sant");});
test("santona -> santon", function() {deepEqual( Stem("santona"), "santon");});
test("santoro -> santor", function() {deepEqual( Stem("santoro"), "santor");});
test("santos -> santos", function() {deepEqual( Stem("santos"), "santos");});
test("santuari -> santuar", function() {deepEqual( Stem("santuari"), "santuar");});
test("sanzionate -> sanzion", function() {deepEqual( Stem("sanzionate"), "sanzion");});
test("sanzione -> sanzion", function() {deepEqual( Stem("sanzione"), "sanzion");});
test("sanzioni -> sanzion", function() {deepEqual( Stem("sanzioni"), "sanzion");});
test("sapendo -> sap", function() {deepEqual( Stem("sapendo"), "sap");});
test("sapendolo -> sap", function() {deepEqual( Stem("sapendolo"), "sap");});
test("saper -> saper", function() {deepEqual( Stem("saper"), "saper");});
test("sapere -> sap", function() {deepEqual( Stem("sapere"), "sap");});
test("saperla -> sap", function() {deepEqual( Stem("saperla"), "sap");});
test("saperle -> sap", function() {deepEqual( Stem("saperle"), "sap");});
test("saperli -> sap", function() {deepEqual( Stem("saperli"), "sap");});
test("saperlo -> sap", function() {deepEqual( Stem("saperlo"), "sap");});
test("saperne -> sap", function() {deepEqual( Stem("saperne"), "sap");});
test("sapersi -> sap", function() {deepEqual( Stem("sapersi"), "sap");});
test("sapesse -> sapess", function() {deepEqual( Stem("sapesse"), "sapess");});
test("sapesser -> sapesser", function() {deepEqual( Stem("sapesser"), "sapesser");});
test("sapessero -> sap", function() {deepEqual( Stem("sapessero"), "sap");});
test("sapessi -> sapess", function() {deepEqual( Stem("sapessi"), "sapess");});
test("sapessimo -> sapessim", function() {deepEqual( Stem("sapessimo"), "sapessim");});
test("sapeste -> sapest", function() {deepEqual( Stem("sapeste"), "sapest");});
test("sapete -> sap", function() {deepEqual( Stem("sapete"), "sap");});
test("sapeva -> sap", function() {deepEqual( Stem("sapeva"), "sap");});
test("sapevamo -> sap", function() {deepEqual( Stem("sapevamo"), "sap");});
test("sapevan -> sapevan", function() {deepEqual( Stem("sapevan"), "sapevan");});
test("sapevano -> sap", function() {deepEqual( Stem("sapevano"), "sap");});
test("sapevate -> sap", function() {deepEqual( Stem("sapevate"), "sap");});
test("sapevo -> sap", function() {deepEqual( Stem("sapevo"), "sap");});
test("sapiente -> sapient", function() {deepEqual( Stem("sapiente"), "sapient");});
test("sapienza -> sapienz", function() {deepEqual( Stem("sapienza"), "sapienz");});
test("sapore -> sapor", function() {deepEqual( Stem("sapore"), "sapor");});
test("saporita -> sapor", function() {deepEqual( Stem("saporita"), "sapor");});
test("sappi -> sapp", function() {deepEqual( Stem("sappi"), "sapp");});
test("sappia -> sapp", function() {deepEqual( Stem("sappia"), "sapp");});
test("sappiam -> sappiam", function() {deepEqual( Stem("sappiam"), "sappiam");});
test("sappiamo -> sapp", function() {deepEqual( Stem("sappiamo"), "sapp");});
test("sappiano -> sapp", function() {deepEqual( Stem("sappiano"), "sapp");});
test("sappiate -> sapp", function() {deepEqual( Stem("sappiate"), "sapp");});
test("sapporo -> sappor", function() {deepEqual( Stem("sapporo"), "sappor");});
test("saprà -> sapr", function() {deepEqual( Stem("saprà"), "sapr");});
test("saprai -> sapra", function() {deepEqual( Stem("saprai"), "sapra");});
test("sapranno -> saprann", function() {deepEqual( Stem("sapranno"), "saprann");});
test("saprebbe -> saprebb", function() {deepEqual( Stem("saprebbe"), "saprebb");});
test("saprebbero -> saprebber", function() {deepEqual( Stem("saprebbero"), "saprebber");});
test("saprei -> sapre", function() {deepEqual( Stem("saprei"), "sapre");});
test("sapremmo -> sapr", function() {deepEqual( Stem("sapremmo"), "sapr");});
test("sapreste -> saprest", function() {deepEqual( Stem("sapreste"), "saprest");});
test("saprete -> sapr", function() {deepEqual( Stem("saprete"), "sapr");});
test("saprò -> sapr", function() {deepEqual( Stem("saprò"), "sapr");});
test("saputa -> sap", function() {deepEqual( Stem("saputa"), "sap");});
test("sapute -> sap", function() {deepEqual( Stem("sapute"), "sap");});
test("saputi -> sap", function() {deepEqual( Stem("saputi"), "sap");});
test("saputo -> sap", function() {deepEqual( Stem("saputo"), "sap");});
test("sara -> sar", function() {deepEqual( Stem("sara"), "sar");});
test("sarà -> sar", function() {deepEqual( Stem("sarà"), "sar");});
test("sarabanda -> saraband", function() {deepEqual( Stem("sarabanda"), "saraband");});
test("saraceno -> saracen", function() {deepEqual( Stem("saraceno"), "saracen");});
test("saracino -> saracin", function() {deepEqual( Stem("saracino"), "saracin");});
test("saràcircondata -> saràcircond", function() {deepEqual( Stem("saràcircondata"), "saràcircond");});
test("sarai -> sara", function() {deepEqual( Stem("sarai"), "sara");});
test("sarajevo -> saraj", function() {deepEqual( Stem("sarajevo"), "saraj");});
test("saran -> saran", function() {deepEqual( Stem("saran"), "saran");});
test("saranno -> sarann", function() {deepEqual( Stem("saranno"), "sarann");});
test("sarcinelli -> sarcinell", function() {deepEqual( Stem("sarcinelli"), "sarcinell");});
test("sardar -> sard", function() {deepEqual( Stem("sardar"), "sard");});
test("sardegna -> sardegn", function() {deepEqual( Stem("sardegna"), "sardegn");});
test("sardi -> sard", function() {deepEqual( Stem("sardi"), "sard");});
test("sardini -> sardin", function() {deepEqual( Stem("sardini"), "sardin");});
test("sardonico -> sardon", function() {deepEqual( Stem("sardonico"), "sardon");});
test("sarebbe -> sarebb", function() {deepEqual( Stem("sarebbe"), "sarebb");});
test("sarebber -> sarebber", function() {deepEqual( Stem("sarebber"), "sarebber");});
test("sarebbero -> sarebber", function() {deepEqual( Stem("sarebbero"), "sarebber");});
test("sarei -> sare", function() {deepEqual( Stem("sarei"), "sare");});
test("saremmo -> sar", function() {deepEqual( Stem("saremmo"), "sar");});
test("saremo -> sarem", function() {deepEqual( Stem("saremo"), "sarem");});
test("sareste -> sarest", function() {deepEqual( Stem("sareste"), "sarest");});
test("saresti -> sarest", function() {deepEqual( Stem("saresti"), "sarest");});
test("sarete -> sar", function() {deepEqual( Stem("sarete"), "sar");});
test("sarid -> sarid", function() {deepEqual( Stem("sarid"), "sarid");});
test("sarò -> sar", function() {deepEqual( Stem("sarò"), "sar");});
test("saronno -> saronn", function() {deepEqual( Stem("saronno"), "saronn");});
test("sarriò -> sarr", function() {deepEqual( Stem("sarriò"), "sarr");});
test("sarsina -> sarsin", function() {deepEqual( Stem("sarsina"), "sarsin");});
test("sarto -> sart", function() {deepEqual( Stem("sarto"), "sart");});
test("sartor -> sartor", function() {deepEqual( Stem("sartor"), "sartor");});
test("sasib -> sasib", function() {deepEqual( Stem("sasib"), "sasib");});
test("sassari -> sassar", function() {deepEqual( Stem("sassari"), "sassar");});
test("sassate -> sass", function() {deepEqual( Stem("sassate"), "sass");});
test("sassi -> sass", function() {deepEqual( Stem("sassi"), "sass");});
test("sasso -> sass", function() {deepEqual( Stem("sasso"), "sass");});
test("sassonia -> sasson", function() {deepEqual( Stem("sassonia"), "sasson");});
test("sassosa -> sassos", function() {deepEqual( Stem("sassosa"), "sassos");});
test("sassoso -> sassos", function() {deepEqual( Stem("sassoso"), "sassos");});
test("sat -> sat", function() {deepEqual( Stem("sat"), "sat");});
test("satana -> satan", function() {deepEqual( Stem("satana"), "satan");});
test("satanasso -> satanass", function() {deepEqual( Stem("satanasso"), "satanass");});
test("satanici -> satan", function() {deepEqual( Stem("satanici"), "satan");});
test("satanico -> satan", function() {deepEqual( Stem("satanico"), "satan");});
test("satellitari -> satellitar", function() {deepEqual( Stem("satellitari"), "satellitar");});
test("satellite -> satell", function() {deepEqual( Stem("satellite"), "satell");});
test("satelliti -> satell", function() {deepEqual( Stem("satelliti"), "satell");});
test("sathya -> sathy", function() {deepEqual( Stem("sathya"), "sathy");});
test("satira -> satir", function() {deepEqual( Stem("satira"), "satir");});
test("satirico -> satir", function() {deepEqual( Stem("satirico"), "satir");});
test("satolla -> satoll", function() {deepEqual( Stem("satolla"), "satoll");});
test("satollar -> satoll", function() {deepEqual( Stem("satollar"), "satoll");});
test("satriano -> satr", function() {deepEqual( Stem("satriano"), "satr");});
test("sattanino -> sattanin", function() {deepEqual( Stem("sattanino"), "sattanin");});
test("sattar -> satt", function() {deepEqual( Stem("sattar"), "satt");});
test("sature -> satur", function() {deepEqual( Stem("sature"), "satur");});
test("saturno -> saturn", function() {deepEqual( Stem("saturno"), "saturn");});
test("saudita -> saud", function() {deepEqual( Stem("saudita"), "saud");});
test("saurer -> saurer", function() {deepEqual( Stem("saurer"), "saurer");});
test("saurini -> saurin", function() {deepEqual( Stem("saurini"), "saurin");});
test("saveriane -> saverian", function() {deepEqual( Stem("saveriane"), "saverian");});
test("savi -> sav", function() {deepEqual( Stem("savi"), "sav");});
test("savia -> sav", function() {deepEqual( Stem("savia"), "sav");});
test("savicevic -> savicevic", function() {deepEqual( Stem("savicevic"), "savicevic");});
test("savieriane -> savierian", function() {deepEqual( Stem("savieriane"), "savierian");});
test("saviezza -> saviezz", function() {deepEqual( Stem("saviezza"), "saviezz");});
test("savimbi -> savimb", function() {deepEqual( Stem("savimbi"), "savimb");});
test("savin -> savin", function() {deepEqual( Stem("savin"), "savin");});
test("savio -> sav", function() {deepEqual( Stem("savio"), "sav");});
test("savoia -> savoi", function() {deepEqual( Stem("savoia"), "savoi");});
test("savona -> savon", function() {deepEqual( Stem("savona"), "savon");});
test("savonese -> savones", function() {deepEqual( Stem("savonese"), "savones");});
test("saxa -> sax", function() {deepEqual( Stem("saxa"), "sax");});
test("saxarubra -> saxarubr", function() {deepEqual( Stem("saxarubra"), "saxarubr");});
test("say -> say", function() {deepEqual( Stem("say"), "say");});
test("saziarsi -> saz", function() {deepEqual( Stem("saziarsi"), "saz");});
test("saziata -> saz", function() {deepEqual( Stem("saziata"), "saz");});
test("sb -> sb", function() {deepEqual( Stem("sb"), "sb");});
test("sbadatamente -> sbadat", function() {deepEqual( Stem("sbadatamente"), "sbadat");});
test("sbadigli -> sbadigl", function() {deepEqual( Stem("sbadigli"), "sbadigl");});
test("sbaglia -> sbagl", function() {deepEqual( Stem("sbaglia"), "sbagl");});
test("sbagliar -> sbagl", function() {deepEqual( Stem("sbagliar"), "sbagl");});
test("sbagliare -> sbagl", function() {deepEqual( Stem("sbagliare"), "sbagl");});
test("sbagliata -> sbagl", function() {deepEqual( Stem("sbagliata"), "sbagl");});
test("sbagliate -> sbagl", function() {deepEqual( Stem("sbagliate"), "sbagl");});
test("sbagliato -> sbagl", function() {deepEqual( Stem("sbagliato"), "sbagl");});
test("sbagliavano -> sbagl", function() {deepEqual( Stem("sbagliavano"), "sbagl");});
test("sbaglio -> sbagl", function() {deepEqual( Stem("sbaglio"), "sbagl");});
test("sbalordimento -> sbalord", function() {deepEqual( Stem("sbalordimento"), "sbalord");});
test("sbalordita -> sbalord", function() {deepEqual( Stem("sbalordita"), "sbalord");});
test("sbalorditi -> sbalord", function() {deepEqual( Stem("sbalorditi"), "sbalord");});
test("sbalordito -> sbalord", function() {deepEqual( Stem("sbalordito"), "sbalord");});
test("sbalordiva -> sbalord", function() {deepEqual( Stem("sbalordiva"), "sbalord");});
test("sbalordivano -> sbalord", function() {deepEqual( Stem("sbalordivano"), "sbalord");});
test("sbalzato -> sbalz", function() {deepEqual( Stem("sbalzato"), "sbalz");});
test("sbandamento -> sband", function() {deepEqual( Stem("sbandamento"), "sband");});
test("sbandano -> sband", function() {deepEqual( Stem("sbandano"), "sband");});
test("sbandare -> sband", function() {deepEqual( Stem("sbandare"), "sband");});
test("sbandarono -> sband", function() {deepEqual( Stem("sbandarono"), "sband");});
test("sbandarsi -> sband", function() {deepEqual( Stem("sbandarsi"), "sband");});
test("sbandata -> sband", function() {deepEqual( Stem("sbandata"), "sband");});
test("sbandati -> sband", function() {deepEqual( Stem("sbandati"), "sband");});
test("sbandava -> sband", function() {deepEqual( Stem("sbandava"), "sband");});
test("sbandierarli -> sbandier", function() {deepEqual( Stem("sbandierarli"), "sbandier");});
test("sbarazzarsi -> sbarazz", function() {deepEqual( Stem("sbarazzarsi"), "sbarazz");});
test("sbarbando -> sbarb", function() {deepEqual( Stem("sbarbando"), "sbarb");});
test("sbarbato -> sbarb", function() {deepEqual( Stem("sbarbato"), "sbarb");});
test("sbarcare -> sbarc", function() {deepEqual( Stem("sbarcare"), "sbarc");});
test("sbarcato -> sbarc", function() {deepEqual( Stem("sbarcato"), "sbarc");});
test("sbarcheranno -> sbarc", function() {deepEqual( Stem("sbarcheranno"), "sbarc");});
test("sbarcheremo -> sbarc", function() {deepEqual( Stem("sbarcheremo"), "sbarc");});
test("sbarco -> sbarc", function() {deepEqual( Stem("sbarco"), "sbarc");});
test("sbarra -> sbarr", function() {deepEqual( Stem("sbarra"), "sbarr");});
test("sbarramento -> sbarr", function() {deepEqual( Stem("sbarramento"), "sbarr");});
test("sbarrati -> sbarr", function() {deepEqual( Stem("sbarrati"), "sbarr");});
test("sbarrato -> sbarr", function() {deepEqual( Stem("sbarrato"), "sbarr");});
test("sbattendone -> sbatt", function() {deepEqual( Stem("sbattendone"), "sbatt");});
test("sbattuta -> sbatt", function() {deepEqual( Stem("sbattuta"), "sbatt");});
test("sbattuto -> sbatt", function() {deepEqual( Stem("sbattuto"), "sbatt");});
test("sbiadito -> sbiad", function() {deepEqual( Stem("sbiadito"), "sbiad");});
test("sbieco -> sbiec", function() {deepEqual( Stem("sbieco"), "sbiec");});
test("sbigottita -> sbigott", function() {deepEqual( Stem("sbigottita"), "sbigott");});
test("sbigottite -> sbigott", function() {deepEqual( Stem("sbigottite"), "sbigott");});
test("sbigottito -> sbigott", function() {deepEqual( Stem("sbigottito"), "sbigott");});
test("sbilanciata -> sbilanc", function() {deepEqual( Stem("sbilanciata"), "sbilanc");});
test("sbirciando -> sbirc", function() {deepEqual( Stem("sbirciando"), "sbirc");});
test("sbirraglia -> sbirragl", function() {deepEqual( Stem("sbirraglia"), "sbirragl");});
test("sbizzarrire -> sbizzarr", function() {deepEqual( Stem("sbizzarrire"), "sbizzarr");});
test("sblocca -> sblocc", function() {deepEqual( Stem("sblocca"), "sblocc");});
test("sbloccare -> sblocc", function() {deepEqual( Stem("sbloccare"), "sblocc");});
test("sbloccati -> sblocc", function() {deepEqual( Stem("sbloccati"), "sblocc");});
test("sblocco -> sblocc", function() {deepEqual( Stem("sblocco"), "sblocc");});
test("sboccan -> sboccan", function() {deepEqual( Stem("sboccan"), "sboccan");});
test("sboccano -> sbocc", function() {deepEqual( Stem("sboccano"), "sbocc");});
test("sboccare -> sbocc", function() {deepEqual( Stem("sboccare"), "sbocc");});
test("sboccarono -> sbocc", function() {deepEqual( Stem("sboccarono"), "sbocc");});
test("sboccarvi -> sbocc", function() {deepEqual( Stem("sboccarvi"), "sbocc");});
test("sboccati -> sbocc", function() {deepEqual( Stem("sboccati"), "sbocc");});
test("sboccato -> sbocc", function() {deepEqual( Stem("sboccato"), "sbocc");});
test("sboccavano -> sbocc", function() {deepEqual( Stem("sboccavano"), "sbocc");});
test("sbocchi -> sbocc", function() {deepEqual( Stem("sbocchi"), "sbocc");});
test("sbocciato -> sbocc", function() {deepEqual( Stem("sbocciato"), "sbocc");});
test("sbocco -> sbocc", function() {deepEqual( Stem("sbocco"), "sbocc");});
test("sbocconcellando -> sbocconcell", function() {deepEqual( Stem("sbocconcellando"), "sbocconcell");});
test("sborsavan -> sborsavan", function() {deepEqual( Stem("sborsavan"), "sborsavan");});
test("sbracia -> sbrac", function() {deepEqual( Stem("sbracia"), "sbrac");});
test("sbrancassero -> sbranc", function() {deepEqual( Stem("sbrancassero"), "sbranc");});
test("sbrancati -> sbranc", function() {deepEqual( Stem("sbrancati"), "sbranc");});
test("sbrattare -> sbratt", function() {deepEqual( Stem("sbrattare"), "sbratt");});
test("sbrigarlo -> sbrig", function() {deepEqual( Stem("sbrigarlo"), "sbrig");});
test("sbrigarsi -> sbrig", function() {deepEqual( Stem("sbrigarsi"), "sbrig");});
test("sbrigarvi -> sbrig", function() {deepEqual( Stem("sbrigarvi"), "sbrig");});
test("sbrigatevi -> sbrigat", function() {deepEqual( Stem("sbrigatevi"), "sbrigat");});
test("sbrigati -> sbrig", function() {deepEqual( Stem("sbrigati"), "sbrig");});
test("sbrigativi -> sbrigat", function() {deepEqual( Stem("sbrigativi"), "sbrigat");});
test("sbrigato -> sbrig", function() {deepEqual( Stem("sbrigato"), "sbrig");});
test("sbrigava -> sbrig", function() {deepEqual( Stem("sbrigava"), "sbrig");});
test("sbrigò -> sbrig", function() {deepEqual( Stem("sbrigò"), "sbrig");});
test("sbucar -> sbuc", function() {deepEqual( Stem("sbucar"), "sbuc");});
test("sbucati -> sbuc", function() {deepEqual( Stem("sbucati"), "sbuc");});
test("sbudellarsi -> sbudell", function() {deepEqual( Stem("sbudellarsi"), "sbudell");});
test("sbuffando -> sbuff", function() {deepEqual( Stem("sbuffando"), "sbuff");});
test("scabrosa -> scabros", function() {deepEqual( Stem("scabrosa"), "scabros");});
test("scabrosi -> scabros", function() {deepEqual( Stem("scabrosi"), "scabros");});
test("scabroso -> scabros", function() {deepEqual( Stem("scabroso"), "scabros");});
test("scacchi -> scacc", function() {deepEqual( Stem("scacchi"), "scacc");});
test("scacchiera -> scacchier", function() {deepEqual( Stem("scacchiera"), "scacchier");});
test("scacchistico -> scacchist", function() {deepEqual( Stem("scacchistico"), "scacchist");});
test("scacciar -> scacc", function() {deepEqual( Stem("scacciar"), "scacc");});
test("scacciare -> scacc", function() {deepEqual( Stem("scacciare"), "scacc");});
test("scacciarlo -> scacc", function() {deepEqual( Stem("scacciarlo"), "scacc");});
test("scacco -> scacc", function() {deepEqual( Stem("scacco"), "scacc");});
test("scade -> scad", function() {deepEqual( Stem("scade"), "scad");});
test("scadendo -> scad", function() {deepEqual( Stem("scadendo"), "scad");});
test("scadenti -> scadent", function() {deepEqual( Stem("scadenti"), "scadent");});
test("scadenza -> scadenz", function() {deepEqual( Stem("scadenza"), "scadenz");});
test("scadenze -> scadenz", function() {deepEqual( Stem("scadenze"), "scadenz");});
test("scadere -> scad", function() {deepEqual( Stem("scadere"), "scad");});
test("scaduta -> scad", function() {deepEqual( Stem("scaduta"), "scad");});
test("scaduto -> scad", function() {deepEqual( Stem("scaduto"), "scad");});
test("scaffale -> scaffal", function() {deepEqual( Stem("scaffale"), "scaffal");});
test("scaffali -> scaffal", function() {deepEqual( Stem("scaffali"), "scaffal");});
test("scaglia -> scagl", function() {deepEqual( Stem("scaglia"), "scagl");});
test("scagliandogli -> scagl", function() {deepEqual( Stem("scagliandogli"), "scagl");});
test("scagliati -> scagl", function() {deepEqual( Stem("scagliati"), "scagl");});
test("scagliato -> scagl", function() {deepEqual( Stem("scagliato"), "scagl");});
test("scagliò -> scagl", function() {deepEqual( Stem("scagliò"), "scagl");});
test("scala -> scal", function() {deepEqual( Stem("scala"), "scal");});
test("scalabrelli -> scalabrell", function() {deepEqual( Stem("scalabrelli"), "scalabrell");});
test("scalar -> scal", function() {deepEqual( Stem("scalar"), "scal");});
test("scalata -> scal", function() {deepEqual( Stem("scalata"), "scal");});
test("scalato -> scal", function() {deepEqual( Stem("scalato"), "scal");});
test("scalcinate -> scalcin", function() {deepEqual( Stem("scalcinate"), "scalcin");});
test("scalcinatura -> scalcinatur", function() {deepEqual( Stem("scalcinatura"), "scalcinatur");});
test("scalcinavano -> scalcin", function() {deepEqual( Stem("scalcinavano"), "scalcin");});
test("scalda -> scald", function() {deepEqual( Stem("scalda"), "scald");});
test("scaldata -> scald", function() {deepEqual( Stem("scaldata"), "scald");});
test("scaldato -> scald", function() {deepEqual( Stem("scaldato"), "scald");});
test("scale -> scal", function() {deepEqual( Stem("scale"), "scal");});
test("scalensis -> scalensis", function() {deepEqual( Stem("scalensis"), "scalensis");});
test("scaletta -> scalett", function() {deepEqual( Stem("scaletta"), "scalett");});
test("scalfari -> scalfar", function() {deepEqual( Stem("scalfari"), "scalfar");});
test("scalfaro -> scalfar", function() {deepEqual( Stem("scalfaro"), "scalfar");});
test("scali -> scal", function() {deepEqual( Stem("scali"), "scal");});
test("scalia -> scal", function() {deepEqual( Stem("scalia"), "scal");});
test("scalini -> scalin", function() {deepEqual( Stem("scalini"), "scalin");});
test("scalino -> scalin", function() {deepEqual( Stem("scalino"), "scalin");});
test("scalmanarsi -> scalman", function() {deepEqual( Stem("scalmanarsi"), "scalman");});
test("scalo -> scal", function() {deepEqual( Stem("scalo"), "scal");});
test("scalpiccìo -> scalpiccì", function() {deepEqual( Stem("scalpiccìo"), "scalpiccì");});
test("scalpo -> scalp", function() {deepEqual( Stem("scalpo"), "scalp");});
test("scaltre -> scaltr", function() {deepEqual( Stem("scaltre"), "scaltr");});
test("scaltro -> scaltr", function() {deepEqual( Stem("scaltro"), "scaltr");});
test("scalzacane -> scalzacan", function() {deepEqual( Stem("scalzacane"), "scalzacan");});
test("scalzacani -> scalzacan", function() {deepEqual( Stem("scalzacani"), "scalzacan");});
test("scalzar -> scalz", function() {deepEqual( Stem("scalzar"), "scalz");});
test("scalze -> scalz", function() {deepEqual( Stem("scalze"), "scalz");});
test("scalzi -> scalz", function() {deepEqual( Stem("scalzi"), "scalz");});
test("scalzo -> scalz", function() {deepEqual( Stem("scalzo"), "scalz");});
test("scambi -> scamb", function() {deepEqual( Stem("scambi"), "scamb");});
test("scambiandole -> scamb", function() {deepEqual( Stem("scambiandole"), "scamb");});
test("scambiandosi -> scamb", function() {deepEqual( Stem("scambiandosi"), "scamb");});
test("scambiare -> scamb", function() {deepEqual( Stem("scambiare"), "scamb");});
test("scambiate -> scamb", function() {deepEqual( Stem("scambiate"), "scamb");});
test("scambiati -> scamb", function() {deepEqual( Stem("scambiati"), "scamb");});
test("scambiato -> scamb", function() {deepEqual( Stem("scambiato"), "scamb");});
test("scambievolmente -> scambievol", function() {deepEqual( Stem("scambievolmente"), "scambievol");});
test("scambio -> scamb", function() {deepEqual( Stem("scambio"), "scamb");});
test("scampaforca -> scampaforc", function() {deepEqual( Stem("scampaforca"), "scampaforc");});
test("scampanare -> scampan", function() {deepEqual( Stem("scampanare"), "scampan");});
test("scampanava -> scampan", function() {deepEqual( Stem("scampanava"), "scampan");});
test("scampanìo -> scampanì", function() {deepEqual( Stem("scampanìo"), "scampanì");});
test("scampata -> scamp", function() {deepEqual( Stem("scampata"), "scamp");});
test("scampati -> scamp", function() {deepEqual( Stem("scampati"), "scamp");});
test("scampo -> scamp", function() {deepEqual( Stem("scampo"), "scamp");});
test("scandal -> scandal", function() {deepEqual( Stem("scandal"), "scandal");});
test("scandalo -> scandal", function() {deepEqual( Stem("scandalo"), "scandal");});
test("scandalosa -> scandal", function() {deepEqual( Stem("scandalosa"), "scandal");});
test("scandaloso -> scandal", function() {deepEqual( Stem("scandaloso"), "scandal");});
test("scandendo -> scand", function() {deepEqual( Stem("scandendo"), "scand");});
test("scandinavi -> scandin", function() {deepEqual( Stem("scandinavi"), "scandin");});
test("scandisce -> scand", function() {deepEqual( Stem("scandisce"), "scand");});
test("scandito -> scand", function() {deepEqual( Stem("scandito"), "scand");});
test("scandoli -> scandol", function() {deepEqual( Stem("scandoli"), "scandol");});
test("scandolo -> scandol", function() {deepEqual( Stem("scandolo"), "scandol");});
test("scanio -> scan", function() {deepEqual( Stem("scanio"), "scan");});
test("scannare -> scann", function() {deepEqual( Stem("scannare"), "scann");});
test("scansar -> scans", function() {deepEqual( Stem("scansar"), "scans");});
test("scansare -> scans", function() {deepEqual( Stem("scansare"), "scans");});
test("scansarle -> scans", function() {deepEqual( Stem("scansarle"), "scans");});
test("scansarli -> scans", function() {deepEqual( Stem("scansarli"), "scans");});
test("scansarne -> scans", function() {deepEqual( Stem("scansarne"), "scans");});
test("scansata -> scans", function() {deepEqual( Stem("scansata"), "scans");});
test("scansate -> scans", function() {deepEqual( Stem("scansate"), "scans");});
test("scansato -> scans", function() {deepEqual( Stem("scansato"), "scans");});
test("scansava -> scans", function() {deepEqual( Stem("scansava"), "scans");});
test("scansc -> scansc", function() {deepEqual( Stem("scansc"), "scansc");});
test("scantonarono -> scanton", function() {deepEqual( Stem("scantonarono"), "scanton");});
test("scapataggini -> scapataggin", function() {deepEqual( Stem("scapataggini"), "scapataggin");});
test("scapestrati -> scapestr", function() {deepEqual( Stem("scapestrati"), "scapestr");});
test("scapestrato -> scapestr", function() {deepEqual( Stem("scapestrato"), "scapestr");});
test("scapezzati -> scapezz", function() {deepEqual( Stem("scapezzati"), "scapezz");});
test("scapitare -> scapit", function() {deepEqual( Stem("scapitare"), "scapit");});
test("scapolo -> scapol", function() {deepEqual( Stem("scapolo"), "scapol");});
test("scappa -> scapp", function() {deepEqual( Stem("scappa"), "scapp");});
test("scappando -> scapp", function() {deepEqual( Stem("scappando"), "scapp");});
test("scappano -> scapp", function() {deepEqual( Stem("scappano"), "scapp");});
test("scappar -> scapp", function() {deepEqual( Stem("scappar"), "scapp");});
test("scappare -> scapp", function() {deepEqual( Stem("scappare"), "scapp");});
test("scappargli -> scapp", function() {deepEqual( Stem("scappargli"), "scapp");});
test("scapparon -> scapparon", function() {deepEqual( Stem("scapparon"), "scapparon");});
test("scapparono -> scapp", function() {deepEqual( Stem("scapparono"), "scapp");});
test("scappassero -> scapp", function() {deepEqual( Stem("scappassero"), "scapp");});
test("scappata -> scapp", function() {deepEqual( Stem("scappata"), "scapp");});
test("scappatale -> scappatal", function() {deepEqual( Stem("scappatale"), "scappatal");});
test("scappate -> scapp", function() {deepEqual( Stem("scappate"), "scapp");});
test("scappatella -> scappatell", function() {deepEqual( Stem("scappatella"), "scappatell");});
test("scappati -> scapp", function() {deepEqual( Stem("scappati"), "scapp");});
test("scappatina -> scappatin", function() {deepEqual( Stem("scappatina"), "scappatin");});
test("scappato -> scapp", function() {deepEqual( Stem("scappato"), "scapp");});
test("scappatuccia -> scappatucc", function() {deepEqual( Stem("scappatuccia"), "scappatucc");});
test("scappava -> scapp", function() {deepEqual( Stem("scappava"), "scapp");});
test("scappavano -> scapp", function() {deepEqual( Stem("scappavano"), "scapp");});
test("scappellata -> scappell", function() {deepEqual( Stem("scappellata"), "scappell");});
test("scappellate -> scappell", function() {deepEqual( Stem("scappellate"), "scappell");});
test("scappellotto -> scappellott", function() {deepEqual( Stem("scappellotto"), "scappellott");});
test("scapperà -> scapp", function() {deepEqual( Stem("scapperà"), "scapp");});
test("scappi -> scapp", function() {deepEqual( Stem("scappi"), "scapp");});
test("scappò -> scapp", function() {deepEqual( Stem("scappò"), "scapp");});
test("scarabocchiando -> scarabocc", function() {deepEqual( Stem("scarabocchiando"), "scarabocc");});
test("scarabocchiati -> scarabocc", function() {deepEqual( Stem("scarabocchiati"), "scarabocc");});
test("scarabocchio -> scarabocc", function() {deepEqual( Stem("scarabocchio"), "scarabocc");});
test("scaramuccia -> scaramucc", function() {deepEqual( Stem("scaramuccia"), "scaramucc");});
test("scaramuzza -> scaramuzz", function() {deepEqual( Stem("scaramuzza"), "scaramuzz");});
test("scaraventare -> scaravent", function() {deepEqual( Stem("scaraventare"), "scaravent");});
test("scaraventato -> scaravent", function() {deepEqual( Stem("scaraventato"), "scaravent");});
test("scarchilli -> scarchill", function() {deepEqual( Stem("scarchilli"), "scarchill");});
test("scarfaro -> scarfar", function() {deepEqual( Stem("scarfaro"), "scarfar");});
test("scarica -> scaric", function() {deepEqual( Stem("scarica"), "scaric");});
test("scaricare -> scaric", function() {deepEqual( Stem("scaricare"), "scaric");});
test("scaricarsi -> scaric", function() {deepEqual( Stem("scaricarsi"), "scaric");});
test("scarichi -> scaric", function() {deepEqual( Stem("scarichi"), "scaric");});
test("scarico -> scaric", function() {deepEqual( Stem("scarico"), "scaric");});
test("scarlatta -> scarlatt", function() {deepEqual( Stem("scarlatta"), "scarlatt");});
test("scarlatte -> scarlatt", function() {deepEqual( Stem("scarlatte"), "scarlatt");});
test("scarlino -> scarlin", function() {deepEqual( Stem("scarlino"), "scarlin");});
test("scarna -> scarn", function() {deepEqual( Stem("scarna"), "scarn");});
test("scarne -> scarn", function() {deepEqual( Stem("scarne"), "scarn");});
test("scarniti -> scarn", function() {deepEqual( Stem("scarniti"), "scarn");});
test("scarno -> scarn", function() {deepEqual( Stem("scarno"), "scarn");});
test("scarpe -> scarp", function() {deepEqual( Stem("scarpe"), "scarp");});
test("scarpelli -> scarpell", function() {deepEqual( Stem("scarpelli"), "scarpell");});
test("scarpette -> scarpett", function() {deepEqual( Stem("scarpette"), "scarpett");});
test("scarponi -> scarpon", function() {deepEqual( Stem("scarponi"), "scarpon");});
test("scarpuzzi -> scarpuzz", function() {deepEqual( Stem("scarpuzzi"), "scarpuzz");});
test("scarsa -> scars", function() {deepEqual( Stem("scarsa"), "scars");});
test("scarsamente -> scars", function() {deepEqual( Stem("scarsamente"), "scars");});
test("scarse -> scars", function() {deepEqual( Stem("scarse"), "scars");});
test("scarseggia -> scarsegg", function() {deepEqual( Stem("scarseggia"), "scarsegg");});
test("scarsezza -> scarsezz", function() {deepEqual( Stem("scarsezza"), "scarsezz");});
test("scarsi -> scars", function() {deepEqual( Stem("scarsi"), "scars");});
test("scarsità -> scarsit", function() {deepEqual( Stem("scarsità"), "scarsit");});
test("scarso -> scars", function() {deepEqual( Stem("scarso"), "scars");});
test("scartabellando -> scartabell", function() {deepEqual( Stem("scartabellando"), "scartabell");});
test("scartafaccio -> scartafacc", function() {deepEqual( Stem("scartafaccio"), "scartafacc");});
test("scarto -> scart", function() {deepEqual( Stem("scarto"), "scart");});
test("scassinar -> scassin", function() {deepEqual( Stem("scassinar"), "scassin");});
test("scatenamenti -> scaten", function() {deepEqual( Stem("scatenamenti"), "scaten");});
test("scatenando -> scaten", function() {deepEqual( Stem("scatenando"), "scaten");});
test("scatenare -> scaten", function() {deepEqual( Stem("scatenare"), "scaten");});
test("scatenata -> scaten", function() {deepEqual( Stem("scatenata"), "scaten");});
test("scatenate -> scaten", function() {deepEqual( Stem("scatenate"), "scaten");});
test("scatenato -> scaten", function() {deepEqual( Stem("scatenato"), "scaten");});
test("scatenerebbe -> scaten", function() {deepEqual( Stem("scatenerebbe"), "scaten");});
test("scateni -> scaten", function() {deepEqual( Stem("scateni"), "scaten");});
test("scatola -> scatol", function() {deepEqual( Stem("scatola"), "scatol");});
test("scatole -> scatol", function() {deepEqual( Stem("scatole"), "scatol");});
test("scatolino -> scatolin", function() {deepEqual( Stem("scatolino"), "scatolin");});
test("scatta -> scatt", function() {deepEqual( Stem("scatta"), "scatt");});
test("scattare -> scatt", function() {deepEqual( Stem("scattare"), "scatt");});
test("scattate -> scatt", function() {deepEqual( Stem("scattate"), "scatt");});
test("scattati -> scatt", function() {deepEqual( Stem("scattati"), "scatt");});
test("scattato -> scatt", function() {deepEqual( Stem("scattato"), "scatt");});
test("scatteranno -> scatt", function() {deepEqual( Stem("scatteranno"), "scatt");});
test("scatterebbe -> scatt", function() {deepEqual( Stem("scatterebbe"), "scatt");});
test("scatto -> scatt", function() {deepEqual( Stem("scatto"), "scatt");});
test("scaturire -> scatur", function() {deepEqual( Stem("scaturire"), "scatur");});
test("scaturisca -> scatur", function() {deepEqual( Stem("scaturisca"), "scatur");});
test("scaturita -> scatur", function() {deepEqual( Stem("scaturita"), "scatur");});
test("scaturito -> scatur", function() {deepEqual( Stem("scaturito"), "scatur");});
test("scavalcando -> scavalc", function() {deepEqual( Stem("scavalcando"), "scavalc");});
test("scavar -> scav", function() {deepEqual( Stem("scavar"), "scav");});
test("scavare -> scav", function() {deepEqual( Stem("scavare"), "scav");});
test("scavata -> scav", function() {deepEqual( Stem("scavata"), "scav");});
test("scavato -> scav", function() {deepEqual( Stem("scavato"), "scav");});
test("scavo -> scav", function() {deepEqual( Stem("scavo"), "scav");});
test("scavolini -> scavolin", function() {deepEqual( Stem("scavolini"), "scavolin");});
test("scegliamo -> scegl", function() {deepEqual( Stem("scegliamo"), "scegl");});
test("sceglie -> scegl", function() {deepEqual( Stem("sceglie"), "scegl");});
test("scegliendo -> scegl", function() {deepEqual( Stem("scegliendo"), "scegl");});
test("scegliendolo -> scegl", function() {deepEqual( Stem("scegliendolo"), "scegl");});
test("scegliendomi -> scegl", function() {deepEqual( Stem("scegliendomi"), "scegl");});
test("sceglieranno -> scegl", function() {deepEqual( Stem("sceglieranno"), "scegl");});
test("scegliere -> scegl", function() {deepEqual( Stem("scegliere"), "scegl");});
test("scegliersi -> scegl", function() {deepEqual( Stem("scegliersi"), "scegl");});
test("scegliete -> scegl", function() {deepEqual( Stem("scegliete"), "scegl");});
test("sceleraggini -> sceleraggin", function() {deepEqual( Stem("sceleraggini"), "sceleraggin");});
test("scelerata -> sceler", function() {deepEqual( Stem("scelerata"), "sceler");});
test("scelerato -> sceler", function() {deepEqual( Stem("scelerato"), "sceler");});
test("scelga -> scelg", function() {deepEqual( Stem("scelga"), "scelg");});
test("scelgano -> scelg", function() {deepEqual( Stem("scelgano"), "scelg");});
test("scelgono -> scelg", function() {deepEqual( Stem("scelgono"), "scelg");});
test("scellerata -> sceller", function() {deepEqual( Stem("scellerata"), "sceller");});
test("scelleratamente -> scellerat", function() {deepEqual( Stem("scelleratamente"), "scellerat");});
test("scellerate -> sceller", function() {deepEqual( Stem("scellerate"), "sceller");});
test("scelleratezza -> scelleratezz", function() {deepEqual( Stem("scelleratezza"), "scelleratezz");});
test("scelleratezze -> scelleratezz", function() {deepEqual( Stem("scelleratezze"), "scelleratezz");});
test("scellerati -> sceller", function() {deepEqual( Stem("scellerati"), "sceller");});
test("scellerato -> sceller", function() {deepEqual( Stem("scellerato"), "sceller");});
test("scellino -> scellin", function() {deepEqual( Stem("scellino"), "scellin");});
test("scelse -> scels", function() {deepEqual( Stem("scelse"), "scels");});
test("scelsero -> scelser", function() {deepEqual( Stem("scelsero"), "scelser");});
test("scelta -> scelt", function() {deepEqual( Stem("scelta"), "scelt");});
test("scelte -> scelt", function() {deepEqual( Stem("scelte"), "scelt");});
test("scelti -> scelt", function() {deepEqual( Stem("scelti"), "scelt");});
test("scelto -> scelt", function() {deepEqual( Stem("scelto"), "scelt");});
test("scema -> scem", function() {deepEqual( Stem("scema"), "scem");});
test("scemando -> scem", function() {deepEqual( Stem("scemando"), "scem");});
test("scemare -> scem", function() {deepEqual( Stem("scemare"), "scem");});
test("scemata -> scem", function() {deepEqual( Stem("scemata"), "scem");});
test("scemati -> scem", function() {deepEqual( Stem("scemati"), "scem");});
test("scemato -> scem", function() {deepEqual( Stem("scemato"), "scem");});
test("scemo -> scem", function() {deepEqual( Stem("scemo"), "scem");});
test("scempiato -> scemp", function() {deepEqual( Stem("scempiato"), "scemp");});
test("scempio -> scemp", function() {deepEqual( Stem("scempio"), "scemp");});
test("scena -> scen", function() {deepEqual( Stem("scena"), "scen");});
test("scenario -> scenar", function() {deepEqual( Stem("scenario"), "scenar");});
test("scenata -> scen", function() {deepEqual( Stem("scenata"), "scen");});
test("scende -> scend", function() {deepEqual( Stem("scende"), "scend");});
test("scendendo -> scend", function() {deepEqual( Stem("scendendo"), "scend");});
test("scender -> scender", function() {deepEqual( Stem("scender"), "scender");});
test("scenderà -> scend", function() {deepEqual( Stem("scenderà"), "scend");});
test("scenderanno -> scend", function() {deepEqual( Stem("scenderanno"), "scend");});
test("scendere -> scend", function() {deepEqual( Stem("scendere"), "scend");});
test("scendesse -> scendess", function() {deepEqual( Stem("scendesse"), "scendess");});
test("scendeva -> scend", function() {deepEqual( Stem("scendeva"), "scend");});
test("scendevano -> scend", function() {deepEqual( Stem("scendevano"), "scend");});
test("scendon -> scendon", function() {deepEqual( Stem("scendon"), "scendon");});
test("scendono -> scend", function() {deepEqual( Stem("scendono"), "scend");});
test("scene -> scen", function() {deepEqual( Stem("scene"), "scen");});
test("sceneggiata -> scenegg", function() {deepEqual( Stem("sceneggiata"), "scenegg");});
test("sceneggiati -> scenegg", function() {deepEqual( Stem("sceneggiati"), "scenegg");});
test("sceneggiato -> scenegg", function() {deepEqual( Stem("sceneggiato"), "scenegg");});
test("scenografia -> scenograf", function() {deepEqual( Stem("scenografia"), "scenograf");});
test("scerso -> scers", function() {deepEqual( Stem("scerso"), "scers");});
test("scesa -> sces", function() {deepEqual( Stem("scesa"), "sces");});
test("scese -> sces", function() {deepEqual( Stem("scese"), "sces");});
test("scesero -> sceser", function() {deepEqual( Stem("scesero"), "sceser");});
test("scesi -> sces", function() {deepEqual( Stem("scesi"), "sces");});
test("sceso -> sces", function() {deepEqual( Stem("sceso"), "sces");});
test("scetticismo -> scettic", function() {deepEqual( Stem("scetticismo"), "scettic");});
test("scettico -> scettic", function() {deepEqual( Stem("scettico"), "scettic");});
test("scettro -> scettr", function() {deepEqual( Stem("scettro"), "scettr");});
test("schaefer -> schaefer", function() {deepEqual( Stem("schaefer"), "schaefer");});
test("scheda -> sched", function() {deepEqual( Stem("scheda"), "sched");});
test("schede -> sched", function() {deepEqual( Stem("schede"), "sched");});
test("schedina -> schedin", function() {deepEqual( Stem("schedina"), "schedin");});
test("schegge -> schegg", function() {deepEqual( Stem("schegge"), "schegg");});
test("scheggiati -> schegg", function() {deepEqual( Stem("scheggiati"), "schegg");});
test("scheggiato -> schegg", function() {deepEqual( Stem("scheggiato"), "schegg");});
test("scheletri -> scheletr", function() {deepEqual( Stem("scheletri"), "scheletr");});
test("scheletro -> scheletr", function() {deepEqual( Stem("scheletro"), "scheletr");});
test("schema -> schem", function() {deepEqual( Stem("schema"), "schem");});
test("schemi -> schem", function() {deepEqual( Stem("schemi"), "schem");});
test("schenardi -> schenard", function() {deepEqual( Stem("schenardi"), "schenard");});
test("schenchio -> schenc", function() {deepEqual( Stem("schenchio"), "schenc");});
test("scherma -> scherm", function() {deepEqual( Stem("scherma"), "scherm");});
test("schermaglie -> schermagl", function() {deepEqual( Stem("schermaglie"), "schermagl");});
test("schermendo -> scherm", function() {deepEqual( Stem("schermendo"), "scherm");});
test("schermi -> scherm", function() {deepEqual( Stem("schermi"), "scherm");});
test("schermirsi -> scherm", function() {deepEqual( Stem("schermirsi"), "scherm");});
test("schermito -> scherm", function() {deepEqual( Stem("schermito"), "scherm");});
test("schermiva -> scherm", function() {deepEqual( Stem("schermiva"), "scherm");});
test("schermo -> scherm", function() {deepEqual( Stem("schermo"), "scherm");});
test("scherni -> schern", function() {deepEqual( Stem("scherni"), "schern");});
test("schernire -> schern", function() {deepEqual( Stem("schernire"), "schern");});
test("schernito -> schern", function() {deepEqual( Stem("schernito"), "schern");});
test("scherno -> schern", function() {deepEqual( Stem("scherno"), "schern");});
test("scherrer -> scherrer", function() {deepEqual( Stem("scherrer"), "scherrer");});
test("scherza -> scherz", function() {deepEqual( Stem("scherza"), "scherz");});
test("scherzando -> scherz", function() {deepEqual( Stem("scherzando"), "scherz");});
test("scherzare -> scherz", function() {deepEqual( Stem("scherzare"), "scherz");});
test("scherzavamo -> scherz", function() {deepEqual( Stem("scherzavamo"), "scherz");});
test("scherzevole -> scherzevol", function() {deepEqual( Stem("scherzevole"), "scherzevol");});
test("scherzi -> scherz", function() {deepEqual( Stem("scherzi"), "scherz");});
test("scherzo -> scherz", function() {deepEqual( Stem("scherzo"), "scherz");});
test("schiacciar -> schiacc", function() {deepEqual( Stem("schiacciar"), "schiacc");});
test("schiacciata -> schiacc", function() {deepEqual( Stem("schiacciata"), "schiacc");});
test("schiacciato -> schiacc", function() {deepEqual( Stem("schiacciato"), "schiacc");});
test("schiaffi -> schiaff", function() {deepEqual( Stem("schiaffi"), "schiaff");});
test("schiamazzano -> schiamazz", function() {deepEqual( Stem("schiamazzano"), "schiamazz");});
test("schiamazzare -> schiamazz", function() {deepEqual( Stem("schiamazzare"), "schiamazz");});
test("schiamazzi -> schiamazz", function() {deepEqual( Stem("schiamazzi"), "schiamazz");});
test("schiamazzo -> schiamazz", function() {deepEqual( Stem("schiamazzo"), "schiamazz");});
test("schiantati -> schiant", function() {deepEqual( Stem("schiantati"), "schiant");});
test("schianto -> schiant", function() {deepEqual( Stem("schianto"), "schiant");});
test("schiapexw -> schiapexw", function() {deepEqual( Stem("schiapexw"), "schiapexw");});
test("schiapparelli -> schiapparell", function() {deepEqual( Stem("schiapparelli"), "schiapparell");});
test("schiarimenti -> schiar", function() {deepEqual( Stem("schiarimenti"), "schiar");});
test("schiarimento -> schiar", function() {deepEqual( Stem("schiarimento"), "schiar");});
test("schiarire -> schiar", function() {deepEqual( Stem("schiarire"), "schiar");});
test("schiava -> schi", function() {deepEqual( Stem("schiava"), "schi");});
test("schiavo -> schi", function() {deepEqual( Stem("schiavo"), "schi");});
test("schiena -> schien", function() {deepEqual( Stem("schiena"), "schien");});
test("schiene -> schien", function() {deepEqual( Stem("schiene"), "schien");});
test("schiera -> schier", function() {deepEqual( Stem("schiera"), "schier");});
test("schieramenti -> schier", function() {deepEqual( Stem("schieramenti"), "schier");});
test("schieramento -> schier", function() {deepEqual( Stem("schieramento"), "schier");});
test("schieramentò -> schierament", function() {deepEqual( Stem("schieramentò"), "schierament");});
test("schierando -> schier", function() {deepEqual( Stem("schierando"), "schier");});
test("schierarci -> schier", function() {deepEqual( Stem("schierarci"), "schier");});
test("schierarsi -> schier", function() {deepEqual( Stem("schierarsi"), "schier");});
test("schierata -> schier", function() {deepEqual( Stem("schierata"), "schier");});
test("schierate -> schier", function() {deepEqual( Stem("schierate"), "schier");});
test("schierati -> schier", function() {deepEqual( Stem("schierati"), "schier");});
test("schierato -> schier", function() {deepEqual( Stem("schierato"), "schier");});
test("schierava -> schier", function() {deepEqual( Stem("schierava"), "schier");});
test("schiere -> schi", function() {deepEqual( Stem("schiere"), "schi");});
test("schietta -> schiett", function() {deepEqual( Stem("schietta"), "schiett");});
test("schiettamente -> schiett", function() {deepEqual( Stem("schiettamente"), "schiett");});
test("schiettezza -> schiettezz", function() {deepEqual( Stem("schiettezza"), "schiettezz");});
test("schietto -> schiett", function() {deepEqual( Stem("schietto"), "schiett");});
test("schifo -> schif", function() {deepEqual( Stem("schifo"), "schif");});
test("schifosi -> schifos", function() {deepEqual( Stem("schifosi"), "schifos");});
test("schinardi -> schinard", function() {deepEqual( Stem("schinardi"), "schinard");});
test("schio -> schi", function() {deepEqual( Stem("schio"), "schi");});
test("schiodato -> schiod", function() {deepEqual( Stem("schiodato"), "schiod");});
test("schioppettata -> schioppett", function() {deepEqual( Stem("schioppettata"), "schioppett");});
test("schioppettate -> schioppett", function() {deepEqual( Stem("schioppettate"), "schioppett");});
test("schioppi -> schiopp", function() {deepEqual( Stem("schioppi"), "schiopp");});
test("schioppo -> schiopp", function() {deepEqual( Stem("schioppo"), "schiopp");});
test("schip -> schip", function() {deepEqual( Stem("schip"), "schip");});
test("schiribizzo -> schiribizz", function() {deepEqual( Stem("schiribizzo"), "schiribizz");});
test("schisano -> schis", function() {deepEqual( Stem("schisano"), "schis");});
test("schiuma -> schium", function() {deepEqual( Stem("schiuma"), "schium");});
test("schivafatiche -> schivafat", function() {deepEqual( Stem("schivafatiche"), "schivafat");});
test("schivar -> schiv", function() {deepEqual( Stem("schivar"), "schiv");});
test("schivare -> schiv", function() {deepEqual( Stem("schivare"), "schiv");});
test("schivarli -> schiv", function() {deepEqual( Stem("schivarli"), "schiv");});
test("schizza -> schizz", function() {deepEqual( Stem("schizza"), "schizz");});
test("schizzi -> schizz", function() {deepEqual( Stem("schizzi"), "schizz");});
test("schizzinosa -> schizzin", function() {deepEqual( Stem("schizzinosa"), "schizzin");});
test("schizzinoso -> schizzin", function() {deepEqual( Stem("schizzinoso"), "schizzin");});
test("schizzo -> schizz", function() {deepEqual( Stem("schizzo"), "schizz");});
test("schloendorff -> schloendorff", function() {deepEqual( Stem("schloendorff"), "schloendorff");});
test("schmid -> schmid", function() {deepEqual( Stem("schmid"), "schmid");});
test("schmidt -> schmidt", function() {deepEqual( Stem("schmidt"), "schmidt");});
test("schott -> schott", function() {deepEqual( Stem("schott"), "schott");});
test("schroeder -> schroeder", function() {deepEqual( Stem("schroeder"), "schroeder");});
test("schuster -> schuster", function() {deepEqual( Stem("schuster"), "schuster");});
test("schwarz -> schwarz", function() {deepEqual( Stem("schwarz"), "schwarz");});
test("schwingsackl -> schwingsackl", function() {deepEqual( Stem("schwingsackl"), "schwingsackl");});
test("sci -> sci", function() {deepEqual( Stem("sci"), "sci");});
test("sciabola -> sciabol", function() {deepEqual( Stem("sciabola"), "sciabol");});
test("sciabole -> sciabol", function() {deepEqual( Stem("sciabole"), "sciabol");});
test("sciacallaggi -> sciacallagg", function() {deepEqual( Stem("sciacallaggi"), "sciacallagg");});
test("sciacallaggio -> sciacallagg", function() {deepEqual( Stem("sciacallaggio"), "sciacallagg");});
test("sciacalle -> sciacall", function() {deepEqual( Stem("sciacalle"), "sciacall");});
test("sciacca -> sciacc", function() {deepEqual( Stem("sciacca"), "sciacc");});
test("sciagura -> sciagur", function() {deepEqual( Stem("sciagura"), "sciagur");});
test("sciagurata -> sciagur", function() {deepEqual( Stem("sciagurata"), "sciagur");});
test("sciagurate -> sciagur", function() {deepEqual( Stem("sciagurate"), "sciagur");});
test("sciagurati -> sciagur", function() {deepEqual( Stem("sciagurati"), "sciagur");});
test("sciagurato -> sciagur", function() {deepEqual( Stem("sciagurato"), "sciagur");});
test("sciagure -> sciagur", function() {deepEqual( Stem("sciagure"), "sciagur");});
test("scialacquava -> scialacqu", function() {deepEqual( Stem("scialacquava"), "scialacqu");});
test("scialacquìo -> scialacquì", function() {deepEqual( Stem("scialacquìo"), "scialacquì");});
test("scialmente -> scialment", function() {deepEqual( Stem("scialmente"), "scialment");});
test("sciame -> sciam", function() {deepEqual( Stem("sciame"), "sciam");});
test("sciarelli -> sciarell", function() {deepEqual( Stem("sciarelli"), "sciarell");});
test("sciarpa -> sciarp", function() {deepEqual( Stem("sciarpa"), "sciarp");});
test("sciarpe -> sciarp", function() {deepEqual( Stem("sciarpe"), "sciarp");});
test("sciascia -> sciasc", function() {deepEqual( Stem("sciascia"), "sciasc");});
test("sciatore -> sciator", function() {deepEqual( Stem("sciatore"), "sciator");});
test("sciatori -> sciator", function() {deepEqual( Stem("sciatori"), "sciator");});
test("scientifica -> scientif", function() {deepEqual( Stem("scientifica"), "scientif");});
test("scientificamente -> scientif", function() {deepEqual( Stem("scientificamente"), "scientif");});
test("scientifici -> scientif", function() {deepEqual( Stem("scientifici"), "scientif");});
test("scientology -> scientology", function() {deepEqual( Stem("scientology"), "scientology");});
test("scienza -> scienz", function() {deepEqual( Stem("scienza"), "scienz");});
test("scienze -> scienz", function() {deepEqual( Stem("scienze"), "scienz");});
test("scienziata -> scienz", function() {deepEqual( Stem("scienziata"), "scienz");});
test("scienziato -> scienz", function() {deepEqual( Stem("scienziato"), "scienz");});
test("scietà -> sciet", function() {deepEqual( Stem("scietà"), "sciet");});
test("sciiti -> sci", function() {deepEqual( Stem("sciiti"), "sci");});
test("scilinguagnolo -> scilinguagnol", function() {deepEqual( Stem("scilinguagnolo"), "scilinguagnol");});
test("scilla -> scill", function() {deepEqual( Stem("scilla"), "scill");});
test("scimmiè -> scimm", function() {deepEqual( Stem("scimmiè"), "scimm");});
test("scimone -> scimon", function() {deepEqual( Stem("scimone"), "scimon");});
test("scintillavan -> scintillavan", function() {deepEqual( Stem("scintillavan"), "scintillavan");});
test("sciocca -> sciocc", function() {deepEqual( Stem("sciocca"), "sciocc");});
test("scioccata -> sciocc", function() {deepEqual( Stem("scioccata"), "sciocc");});
test("sciocche -> sciocc", function() {deepEqual( Stem("sciocche"), "sciocc");});
test("sciocchezza -> sciocchezz", function() {deepEqual( Stem("sciocchezza"), "sciocchezz");});
test("sciocchezze -> sciocchezz", function() {deepEqual( Stem("sciocchezze"), "sciocchezz");});
test("sciocchi -> sciocc", function() {deepEqual( Stem("sciocchi"), "sciocc");});
test("sciocco -> sciocc", function() {deepEqual( Stem("sciocco"), "sciocc");});
test("sciocconi -> scioccon", function() {deepEqual( Stem("sciocconi"), "scioccon");});
test("scioglie -> sciogl", function() {deepEqual( Stem("scioglie"), "sciogl");});
test("sciogliendo -> sciogl", function() {deepEqual( Stem("sciogliendo"), "sciogl");});
test("sciogliendosi -> sciogl", function() {deepEqual( Stem("sciogliendosi"), "sciogl");});
test("scioglier -> scioglier", function() {deepEqual( Stem("scioglier"), "scioglier");});
test("sciogliere -> sciogl", function() {deepEqual( Stem("sciogliere"), "sciogl");});
test("sciogliervi -> sciogl", function() {deepEqual( Stem("sciogliervi"), "sciogl");});
test("scioglieva -> sciogl", function() {deepEqual( Stem("scioglieva"), "sciogl");});
test("scioglimento -> sciogl", function() {deepEqual( Stem("scioglimento"), "sciogl");});
test("sciolse -> sciols", function() {deepEqual( Stem("sciolse"), "sciols");});
test("sciolta -> sciolt", function() {deepEqual( Stem("sciolta"), "sciolt");});
test("sciolte -> sciolt", function() {deepEqual( Stem("sciolte"), "sciolt");});
test("scioltì -> sciolt", function() {deepEqual( Stem("scioltì"), "sciolt");});
test("sciolto -> sciolt", function() {deepEqual( Stem("sciolto"), "sciolt");});
test("scioperanti -> scioper", function() {deepEqual( Stem("scioperanti"), "scioper");});
test("sciopererà -> scioper", function() {deepEqual( Stem("sciopererà"), "scioper");});
test("scioperi -> scioper", function() {deepEqual( Stem("scioperi"), "scioper");});
test("sciopero -> scioper", function() {deepEqual( Stem("sciopero"), "scioper");});
test("sciorinata -> sciorin", function() {deepEqual( Stem("sciorinata"), "sciorin");});
test("scipione -> scipion", function() {deepEqual( Stem("scipione"), "scipion");});
test("scirè -> scir", function() {deepEqual( Stem("scirè"), "scir");});
test("scissione -> scission", function() {deepEqual( Stem("scissione"), "scission");});
test("sciupata -> sciup", function() {deepEqual( Stem("sciupata"), "sciup");});
test("sciupinìo -> sciupinì", function() {deepEqual( Stem("sciupinìo"), "sciupinì");});
test("sciupone -> sciupon", function() {deepEqual( Stem("sciupone"), "sciupon");});
test("scivolamento -> scivol", function() {deepEqual( Stem("scivolamento"), "scivol");});
test("scivolando -> scivol", function() {deepEqual( Stem("scivolando"), "scivol");});
test("scivolare -> scivol", function() {deepEqual( Stem("scivolare"), "scivol");});
test("scivoloso -> scivol", function() {deepEqual( Stem("scivoloso"), "scivol");});
test("scoccassero -> scocc", function() {deepEqual( Stem("scoccassero"), "scocc");});
test("scoccava -> scocc", function() {deepEqual( Stem("scoccava"), "scocc");});
test("scocco -> scocc", function() {deepEqual( Stem("scocco"), "scocc");});
test("scoccò -> scocc", function() {deepEqual( Stem("scoccò"), "scocc");});
test("scodella -> scodell", function() {deepEqual( Stem("scodella"), "scodell");});
test("scodellando -> scodell", function() {deepEqual( Stem("scodellando"), "scodell");});
test("scodellare -> scodell", function() {deepEqual( Stem("scodellare"), "scodell");});
test("scodellata -> scodell", function() {deepEqual( Stem("scodellata"), "scodell");});
test("scodelle -> scodell", function() {deepEqual( Stem("scodelle"), "scodell");});
test("scodelletta -> scodellett", function() {deepEqual( Stem("scodelletta"), "scodellett");});
test("scodellò -> scodell", function() {deepEqual( Stem("scodellò"), "scodell");});
test("scoglio -> scogl", function() {deepEqual( Stem("scoglio"), "scogl");});
test("scognamiglio -> scognamigl", function() {deepEqual( Stem("scognamiglio"), "scognamigl");});
test("scognamigliò -> scognamigl", function() {deepEqual( Stem("scognamigliò"), "scognamigl");});
test("scola -> scol", function() {deepEqual( Stem("scola"), "scol");});
test("scolari -> scolar", function() {deepEqual( Stem("scolari"), "scolar");});
test("scolastica -> scolast", function() {deepEqual( Stem("scolastica"), "scolast");});
test("scolastici -> scolast", function() {deepEqual( Stem("scolastici"), "scolast");});
test("scolastico -> scolast", function() {deepEqual( Stem("scolastico"), "scolast");});
test("scollegarsi -> scolleg", function() {deepEqual( Stem("scollegarsi"), "scolleg");});
test("scollegata -> scolleg", function() {deepEqual( Stem("scollegata"), "scolleg");});
test("scollo -> scoll", function() {deepEqual( Stem("scollo"), "scoll");});
test("scolorita -> scolor", function() {deepEqual( Stem("scolorita"), "scolor");});
test("scolorito -> scolor", function() {deepEqual( Stem("scolorito"), "scolor");});
test("scolpiva -> scolp", function() {deepEqual( Stem("scolpiva"), "scolp");});
test("scombaciati -> scombac", function() {deepEqual( Stem("scombaciati"), "scombac");});
test("scombussolamento -> scombussol", function() {deepEqual( Stem("scombussolamento"), "scombussol");});
test("scommessa -> scommess", function() {deepEqual( Stem("scommessa"), "scommess");});
test("scommesse -> scommess", function() {deepEqual( Stem("scommesse"), "scommess");});
test("scommettere -> scommett", function() {deepEqual( Stem("scommettere"), "scommett");});
test("scommetterei -> scommett", function() {deepEqual( Stem("scommetterei"), "scommett");});
test("scommettiamo -> scommett", function() {deepEqual( Stem("scommettiamo"), "scommett");});
test("scommettono -> scommett", function() {deepEqual( Stem("scommettono"), "scommett");});
test("scomodano -> scomod", function() {deepEqual( Stem("scomodano"), "scomod");});
test("scomodarsi -> scomod", function() {deepEqual( Stem("scomodarsi"), "scomod");});
test("scomodato -> scomod", function() {deepEqual( Stem("scomodato"), "scomod");});
test("scomodo -> scomod", function() {deepEqual( Stem("scomodo"), "scomod");});
test("scompaginarsi -> scompagin", function() {deepEqual( Stem("scompaginarsi"), "scompagin");});
test("scompagnati -> scompagn", function() {deepEqual( Stem("scompagnati"), "scompagn");});
test("scompagnato -> scompagn", function() {deepEqual( Stem("scompagnato"), "scompagn");});
test("scomparendo -> scompar", function() {deepEqual( Stem("scomparendo"), "scompar");});
test("scomparir -> scompar", function() {deepEqual( Stem("scomparir"), "scompar");});
test("scomparire -> scompar", function() {deepEqual( Stem("scomparire"), "scompar");});
test("scompariva -> scompar", function() {deepEqual( Stem("scompariva"), "scompar");});
test("scomparsa -> scompars", function() {deepEqual( Stem("scomparsa"), "scompars");});
test("scomparsi -> scomp", function() {deepEqual( Stem("scomparsi"), "scomp");});
test("scomparso -> scompars", function() {deepEqual( Stem("scomparso"), "scompars");});
test("scomparve -> scomparv", function() {deepEqual( Stem("scomparve"), "scomparv");});
test("scompigli -> scompigl", function() {deepEqual( Stem("scompigli"), "scompigl");});
test("scompigliano -> scompigl", function() {deepEqual( Stem("scompigliano"), "scompigl");});
test("scompigliata -> scompigl", function() {deepEqual( Stem("scompigliata"), "scompigl");});
test("scompigliati -> scompigl", function() {deepEqual( Stem("scompigliati"), "scompigl");});
test("scompiglio -> scompigl", function() {deepEqual( Stem("scompiglio"), "scompigl");});
test("scompiglìo -> scompiglì", function() {deepEqual( Stem("scompiglìo"), "scompiglì");});
test("scompor -> scompor", function() {deepEqual( Stem("scompor"), "scompor");});
test("scomporre -> scomporr", function() {deepEqual( Stem("scomporre"), "scomporr");});
test("scomporsi -> scompors", function() {deepEqual( Stem("scomporsi"), "scompors");});
test("scomposizione -> scomposizion", function() {deepEqual( Stem("scomposizione"), "scomposizion");});
test("scomposta -> scompost", function() {deepEqual( Stem("scomposta"), "scompost");});
test("scomposte -> scompost", function() {deepEqual( Stem("scomposte"), "scompost");});
test("scomposti -> scompost", function() {deepEqual( Stem("scomposti"), "scompost");});
test("scomposto -> scompost", function() {deepEqual( Stem("scomposto"), "scompost");});
test("scomunica -> scomun", function() {deepEqual( Stem("scomunica"), "scomun");});
test("scomunicata -> scomunic", function() {deepEqual( Stem("scomunicata"), "scomunic");});
test("scomunicate -> scomunic", function() {deepEqual( Stem("scomunicate"), "scomunic");});
test("sconce -> sconc", function() {deepEqual( Stem("sconce"), "sconc");});
test("sconcerta -> sconcert", function() {deepEqual( Stem("sconcerta"), "sconcert");});
test("sconcertante -> sconcert", function() {deepEqual( Stem("sconcertante"), "sconcert");});
test("sconcertata -> sconcert", function() {deepEqual( Stem("sconcertata"), "sconcert");});
test("sconcertati -> sconcert", function() {deepEqual( Stem("sconcertati"), "sconcert");});
test("sconcertato -> sconcert", function() {deepEqual( Stem("sconcertato"), "sconcert");});
test("sconcia -> sconc", function() {deepEqual( Stem("sconcia"), "sconc");});
test("sconcio -> sconc", function() {deepEqual( Stem("sconcio"), "sconc");});
test("sconficca -> sconficc", function() {deepEqual( Stem("sconficca"), "sconficc");});
test("sconficcare -> sconficc", function() {deepEqual( Stem("sconficcare"), "sconficc");});
test("sconficcata -> sconficc", function() {deepEqual( Stem("sconficcata"), "sconficc");});
test("sconficcati -> sconficc", function() {deepEqual( Stem("sconficcati"), "sconficc");});
test("sconficcato -> sconficc", function() {deepEqual( Stem("sconficcato"), "sconficc");});
test("sconfigge -> sconfigg", function() {deepEqual( Stem("sconfigge"), "sconfigg");});
test("sconfiggeremo -> sconfigg", function() {deepEqual( Stem("sconfiggeremo"), "sconfigg");});
test("sconfiggerlo -> sconfigg", function() {deepEqual( Stem("sconfiggerlo"), "sconfigg");});
test("sconfitta -> sconfitt", function() {deepEqual( Stem("sconfitta"), "sconfitt");});
test("sconfitte -> sconfitt", function() {deepEqual( Stem("sconfitte"), "sconfitt");});
test("sconfitti -> sconfitt", function() {deepEqual( Stem("sconfitti"), "sconfitt");});
test("sconfitto -> sconfitt", function() {deepEqual( Stem("sconfitto"), "sconfitt");});
test("sconforto -> sconfort", function() {deepEqual( Stem("sconforto"), "sconfort");});
test("scongiura -> scongiur", function() {deepEqual( Stem("scongiura"), "scongiur");});
test("scongiurando -> scongiur", function() {deepEqual( Stem("scongiurando"), "scongiur");});
test("scongiurare -> scongiur", function() {deepEqual( Stem("scongiurare"), "scongiur");});
test("scongiuro -> scongiur", function() {deepEqual( Stem("scongiuro"), "scongiur");});
test("sconnesse -> sconness", function() {deepEqual( Stem("sconnesse"), "sconness");});
test("sconnesso -> sconness", function() {deepEqual( Stem("sconnesso"), "sconness");});
test("sconoscenza -> sconoscent", function() {deepEqual( Stem("sconoscenza"), "sconoscent");});
test("sconosciuta -> sconosc", function() {deepEqual( Stem("sconosciuta"), "sconosc");});
test("sconosciute -> sconosc", function() {deepEqual( Stem("sconosciute"), "sconosc");});
test("sconosciuti -> sconosc", function() {deepEqual( Stem("sconosciuti"), "sconosc");});
test("sconosciuto -> sconosc", function() {deepEqual( Stem("sconosciuto"), "sconosc");});
test("sconquasso -> sconquass", function() {deepEqual( Stem("sconquasso"), "sconquass");});
test("sconsacrati -> sconsacr", function() {deepEqual( Stem("sconsacrati"), "sconsacr");});
test("sconsiglia -> sconsigl", function() {deepEqual( Stem("sconsiglia"), "sconsigl");});
test("sconsolato -> sconsol", function() {deepEqual( Stem("sconsolato"), "sconsol");});
test("scontan -> scontan", function() {deepEqual( Stem("scontan"), "scontan");});
test("scontare -> scont", function() {deepEqual( Stem("scontare"), "scont");});
test("scontato -> scont", function() {deepEqual( Stem("scontato"), "scont");});
test("scontenta -> scontent", function() {deepEqual( Stem("scontenta"), "scontent");});
test("scontento -> scontent", function() {deepEqual( Stem("scontento"), "scontent");});
test("sconto -> scont", function() {deepEqual( Stem("sconto"), "scont");});
test("scontri -> scontr", function() {deepEqual( Stem("scontri"), "scontr");});
test("scontrini -> scontrin", function() {deepEqual( Stem("scontrini"), "scontrin");});
test("scontro -> scontr", function() {deepEqual( Stem("scontro"), "scontr");});
test("sconvolge -> sconvolg", function() {deepEqual( Stem("sconvolge"), "sconvolg");});
test("sconvolgimento -> sconvolg", function() {deepEqual( Stem("sconvolgimento"), "sconvolg");});
test("sconvolta -> sconvolt", function() {deepEqual( Stem("sconvolta"), "sconvolt");});
test("sconvolto -> sconvolt", function() {deepEqual( Stem("sconvolto"), "sconvolt");});
test("sconziano -> sconz", function() {deepEqual( Stem("sconziano"), "sconz");});
test("scooby -> scooby", function() {deepEqual( Stem("scooby"), "scooby");});
test("scopa -> scop", function() {deepEqual( Stem("scopa"), "scop");});
test("scope -> scop", function() {deepEqual( Stem("scope"), "scop");});
test("scopelliti -> scopell", function() {deepEqual( Stem("scopelliti"), "scopell");});
test("scoperta -> scopert", function() {deepEqual( Stem("scoperta"), "scopert");});
test("scoperte -> scopert", function() {deepEqual( Stem("scoperte"), "scopert");});
test("scoperti -> scop", function() {deepEqual( Stem("scoperti"), "scop");});
test("scoperto -> scopert", function() {deepEqual( Stem("scoperto"), "scopert");});
test("scopi -> scop", function() {deepEqual( Stem("scopi"), "scop");});
test("scopo -> scop", function() {deepEqual( Stem("scopo"), "scop");});
test("scoppiano -> scopp", function() {deepEqual( Stem("scoppiano"), "scopp");});
test("scoppiasse -> scopp", function() {deepEqual( Stem("scoppiasse"), "scopp");});
test("scoppiata -> scopp", function() {deepEqual( Stem("scoppiata"), "scopp");});
test("scoppiati -> scopp", function() {deepEqual( Stem("scoppiati"), "scopp");});
test("scoppiato -> scopp", function() {deepEqual( Stem("scoppiato"), "scopp");});
test("scoppiava -> scopp", function() {deepEqual( Stem("scoppiava"), "scopp");});
test("scoppiavano -> scopp", function() {deepEqual( Stem("scoppiavano"), "scopp");});
test("scoppietta -> scoppiett", function() {deepEqual( Stem("scoppietta"), "scoppiett");});
test("scoppiettìo -> scoppiettì", function() {deepEqual( Stem("scoppiettìo"), "scoppiettì");});
test("scoppio -> scopp", function() {deepEqual( Stem("scoppio"), "scopp");});
test("scoppiò -> scopp", function() {deepEqual( Stem("scoppiò"), "scopp");});
test("scopre -> scopr", function() {deepEqual( Stem("scopre"), "scopr");});
test("scoprendo -> scopr", function() {deepEqual( Stem("scoprendo"), "scopr");});
test("scoprendolo -> scopr", function() {deepEqual( Stem("scoprendolo"), "scopr");});
test("scoprendosegli -> scoprendosegl", function() {deepEqual( Stem("scoprendosegli"), "scoprendosegl");});
test("scoprì -> scopr", function() {deepEqual( Stem("scoprì"), "scopr");});
test("scoprir -> scopr", function() {deepEqual( Stem("scoprir"), "scopr");});
test("scoprirci -> scopr", function() {deepEqual( Stem("scoprirci"), "scopr");});
test("scoprire -> scopr", function() {deepEqual( Stem("scoprire"), "scopr");});
test("scopriremo -> scopr", function() {deepEqual( Stem("scopriremo"), "scopr");});
test("scoprirlo -> scopr", function() {deepEqual( Stem("scoprirlo"), "scopr");});
test("scoprirne -> scopr", function() {deepEqual( Stem("scoprirne"), "scopr");});
test("scoprisse -> scopriss", function() {deepEqual( Stem("scoprisse"), "scopriss");});
test("scopritore -> scopritor", function() {deepEqual( Stem("scopritore"), "scopritor");});
test("scoraggito -> scoragg", function() {deepEqual( Stem("scoraggito"), "scoragg");});
test("scorcia -> scorc", function() {deepEqual( Stem("scorcia"), "scorc");});
test("scorciatoia -> scorciatoi", function() {deepEqual( Stem("scorciatoia"), "scorciatoi");});
test("scordato -> scord", function() {deepEqual( Stem("scordato"), "scord");});
test("scorgendo -> scorg", function() {deepEqual( Stem("scorgendo"), "scorg");});
test("scorgendogli -> scorg", function() {deepEqual( Stem("scorgendogli"), "scorg");});
test("scorgere -> scorg", function() {deepEqual( Stem("scorgere"), "scorg");});
test("scorgeva -> scorg", function() {deepEqual( Stem("scorgeva"), "scorg");});
test("scorporata -> scorpor", function() {deepEqual( Stem("scorporata"), "scorpor");});
test("scorporo -> scorpor", function() {deepEqual( Stem("scorporo"), "scorpor");});
test("scorre -> scorr", function() {deepEqual( Stem("scorre"), "scorr");});
test("scorrendola -> scorr", function() {deepEqual( Stem("scorrendola"), "scorr");});
test("scorrer -> scorrer", function() {deepEqual( Stem("scorrer"), "scorrer");});
test("scorrere -> scorr", function() {deepEqual( Stem("scorrere"), "scorr");});
test("scorretta -> scorrett", function() {deepEqual( Stem("scorretta"), "scorrett");});
test("scorrettezze -> scorrettezz", function() {deepEqual( Stem("scorrettezze"), "scorrettezz");});
test("scorretti -> scorrett", function() {deepEqual( Stem("scorretti"), "scorrett");});
test("scorretto -> scorrett", function() {deepEqual( Stem("scorretto"), "scorrett");});
test("scorreva -> scorr", function() {deepEqual( Stem("scorreva"), "scorr");});
test("scorrevano -> scorr", function() {deepEqual( Stem("scorrevano"), "scorr");});
test("scorrono -> scorr", function() {deepEqual( Stem("scorrono"), "scorr");});
test("scorsa -> scors", function() {deepEqual( Stem("scorsa"), "scors");});
test("scorse -> scors", function() {deepEqual( Stem("scorse"), "scors");});
test("scorsero -> scorser", function() {deepEqual( Stem("scorsero"), "scorser");});
test("scorsese -> scorses", function() {deepEqual( Stem("scorsese"), "scorses");});
test("scorsi -> scors", function() {deepEqual( Stem("scorsi"), "scors");});
test("scorso -> scors", function() {deepEqual( Stem("scorso"), "scors");});
test("scorta -> scort", function() {deepEqual( Stem("scorta"), "scort");});
test("scortando -> scort", function() {deepEqual( Stem("scortando"), "scort");});
test("scortare -> scort", function() {deepEqual( Stem("scortare"), "scort");});
test("scortarla -> scort", function() {deepEqual( Stem("scortarla"), "scort");});
test("scortata -> scort", function() {deepEqual( Stem("scortata"), "scort");});
test("scortate -> scort", function() {deepEqual( Stem("scortate"), "scort");});
test("scortati -> scort", function() {deepEqual( Stem("scortati"), "scort");});
test("scortato -> scort", function() {deepEqual( Stem("scortato"), "scort");});
test("scorte -> scort", function() {deepEqual( Stem("scorte"), "scort");});
test("scoscendendo -> scoscend", function() {deepEqual( Stem("scoscendendo"), "scoscend");});
test("scossa -> scoss", function() {deepEqual( Stem("scossa"), "scoss");});
test("scosse -> scoss", function() {deepEqual( Stem("scosse"), "scoss");});
test("scossi -> scoss", function() {deepEqual( Stem("scossi"), "scoss");});
test("scosso -> scoss", function() {deepEqual( Stem("scosso"), "scoss");});
test("scostandosi -> scost", function() {deepEqual( Stem("scostandosi"), "scost");});
test("scostare -> scost", function() {deepEqual( Stem("scostare"), "scost");});
test("scostò -> scost", function() {deepEqual( Stem("scostò"), "scost");});
test("scotendo -> scot", function() {deepEqual( Stem("scotendo"), "scot");});
test("scoteva -> scot", function() {deepEqual( Stem("scoteva"), "scot");});
test("scott -> scott", function() {deepEqual( Stem("scott"), "scott");});
test("scotta -> scott", function() {deepEqual( Stem("scotta"), "scott");});
test("scottandogli -> scott", function() {deepEqual( Stem("scottandogli"), "scott");});
test("scottanti -> scottant", function() {deepEqual( Stem("scottanti"), "scottant");});
test("scottava -> scott", function() {deepEqual( Stem("scottava"), "scott");});
test("scotti -> scott", function() {deepEqual( Stem("scotti"), "scott");});
test("scottish -> scottish", function() {deepEqual( Stem("scottish"), "scottish");});
test("scovar -> scov", function() {deepEqual( Stem("scovar"), "scov");});
test("scovare -> scov", function() {deepEqual( Stem("scovare"), "scov");});
test("scozia -> scoz", function() {deepEqual( Stem("scozia"), "scoz");});
test("screditare -> scredit", function() {deepEqual( Stem("screditare"), "scredit");});
test("screen -> screen", function() {deepEqual( Stem("screen"), "screen");});
test("scrematura -> scrematur", function() {deepEqual( Stem("scrematura"), "scrematur");});
test("scribi -> scrib", function() {deepEqual( Stem("scribi"), "scrib");});
test("scricchiolasse -> scricchiol", function() {deepEqual( Stem("scricchiolasse"), "scricchiol");});
test("scrigno -> scrign", function() {deepEqual( Stem("scrigno"), "scrign");});
test("scrisse -> scriss", function() {deepEqual( Stem("scrisse"), "scriss");});
test("scritta -> scritt", function() {deepEqual( Stem("scritta"), "scritt");});
test("scritte -> scritt", function() {deepEqual( Stem("scritte"), "scritt");});
test("scritti -> scritt", function() {deepEqual( Stem("scritti"), "scritt");});
test("scritto -> scritt", function() {deepEqual( Stem("scritto"), "scritt");});
test("scrittore -> scrittor", function() {deepEqual( Stem("scrittore"), "scrittor");});
test("scrittori -> scrittor", function() {deepEqual( Stem("scrittori"), "scrittor");});
test("scrittrice -> scrittric", function() {deepEqual( Stem("scrittrice"), "scrittric");});
test("scrittura -> scrittur", function() {deepEqual( Stem("scrittura"), "scrittur");});
test("scriuve -> scriuv", function() {deepEqual( Stem("scriuve"), "scriuv");});
test("scrivano -> scriv", function() {deepEqual( Stem("scrivano"), "scriv");});
test("scrive -> scriv", function() {deepEqual( Stem("scrive"), "scriv");});
test("scrivendo -> scriv", function() {deepEqual( Stem("scrivendo"), "scriv");});
test("scrivente -> scrivent", function() {deepEqual( Stem("scrivente"), "scrivent");});
test("scriver -> scriver", function() {deepEqual( Stem("scriver"), "scriver");});
test("scrivere -> scriv", function() {deepEqual( Stem("scrivere"), "scriv");});
test("scriverebbe -> scriv", function() {deepEqual( Stem("scriverebbe"), "scriv");});
test("scriverne -> scriv", function() {deepEqual( Stem("scriverne"), "scriv");});
test("scrivesse -> scrivess", function() {deepEqual( Stem("scrivesse"), "scrivess");});
test("scrivete -> scriv", function() {deepEqual( Stem("scrivete"), "scriv");});
test("scriveva -> scriv", function() {deepEqual( Stem("scriveva"), "scriv");});
test("scrivevano -> scriv", function() {deepEqual( Stem("scrivevano"), "scriv");});
test("scriviamo -> scriv", function() {deepEqual( Stem("scriviamo"), "scriv");});
test("scrivono -> scriv", function() {deepEqual( Stem("scrivono"), "scriv");});
test("scrl -> scrl", function() {deepEqual( Stem("scrl"), "scrl");});
test("scrosciante -> scrosciant", function() {deepEqual( Stem("scrosciante"), "scrosciant");});
test("scrosciar -> scrosc", function() {deepEqual( Stem("scrosciar"), "scrosc");});
test("scroscio -> scrosc", function() {deepEqual( Stem("scroscio"), "scrosc");});
test("scrostate -> scrost", function() {deepEqual( Stem("scrostate"), "scrost");});
test("scrupoli -> scrupol", function() {deepEqual( Stem("scrupoli"), "scrupol");});
test("scrupolo -> scrupol", function() {deepEqual( Stem("scrupolo"), "scrupol");});
test("scrupolosa -> scrupol", function() {deepEqual( Stem("scrupolosa"), "scrupol");});
test("scrutinio -> scrutin", function() {deepEqual( Stem("scrutinio"), "scrutin");});
test("scuderi -> scuder", function() {deepEqual( Stem("scuderi"), "scuder");});
test("scuderie -> scuder", function() {deepEqual( Stem("scuderie"), "scuder");});
test("scudetto -> scudett", function() {deepEqual( Stem("scudetto"), "scudett");});
test("scudi -> scud", function() {deepEqual( Stem("scudi"), "scud");});
test("scudieri -> scudier", function() {deepEqual( Stem("scudieri"), "scudier");});
test("scudisciate -> scudisc", function() {deepEqual( Stem("scudisciate"), "scudisc");});
test("scudo -> scud", function() {deepEqual( Stem("scudo"), "scud");});
test("sculaccia -> sculacc", function() {deepEqual( Stem("sculaccia"), "sculacc");});
test("scully -> scully", function() {deepEqual( Stem("scully"), "scully");});
test("scultori -> scultor", function() {deepEqual( Stem("scultori"), "scultor");});
test("sculture -> scultur", function() {deepEqual( Stem("sculture"), "scultur");});
test("scuola -> scuol", function() {deepEqual( Stem("scuola"), "scuol");});
test("scuole -> scuol", function() {deepEqual( Stem("scuole"), "scuol");});
test("scure -> scur", function() {deepEqual( Stem("scure"), "scur");});
test("scuri -> scur", function() {deepEqual( Stem("scuri"), "scur");});
test("scusa -> scus", function() {deepEqual( Stem("scusa"), "scus");});
test("scusandosi -> scus", function() {deepEqual( Stem("scusandosi"), "scus");});
test("scusar -> scus", function() {deepEqual( Stem("scusar"), "scus");});
test("scusare -> scus", function() {deepEqual( Stem("scusare"), "scus");});
test("scusarla -> scus", function() {deepEqual( Stem("scusarla"), "scus");});
test("scusarne -> scus", function() {deepEqual( Stem("scusarne"), "scus");});
test("scusarsi -> scus", function() {deepEqual( Stem("scusarsi"), "scus");});
test("scusarvi -> scus", function() {deepEqual( Stem("scusarvi"), "scus");});
test("scusasse -> scus", function() {deepEqual( Stem("scusasse"), "scus");});
test("scusate -> scus", function() {deepEqual( Stem("scusate"), "scus");});
test("scusava -> scus", function() {deepEqual( Stem("scusava"), "scus");});
test("scuse -> scus", function() {deepEqual( Stem("scuse"), "scus");});
test("scuserà -> scus", function() {deepEqual( Stem("scuserà"), "scus");});
test("scusi -> scus", function() {deepEqual( Stem("scusi"), "scus");});
test("sdegnarsi -> sdegn", function() {deepEqual( Stem("sdegnarsi"), "sdegn");});
test("sdegnata -> sdegn", function() {deepEqual( Stem("sdegnata"), "sdegn");});
test("sdegnate -> sdegn", function() {deepEqual( Stem("sdegnate"), "sdegn");});
test("sdegnati -> sdegn", function() {deepEqual( Stem("sdegnati"), "sdegn");});
test("sdegni -> sdegn", function() {deepEqual( Stem("sdegni"), "sdegn");});
test("sdegno -> sdegn", function() {deepEqual( Stem("sdegno"), "sdegn");});
test("sdegnosa -> sdegnos", function() {deepEqual( Stem("sdegnosa"), "sdegnos");});
test("sdegnosi -> sdegnos", function() {deepEqual( Stem("sdegnosi"), "sdegnos");});
test("sdraiarsi -> sdrai", function() {deepEqual( Stem("sdraiarsi"), "sdrai");});
test("sdraiata -> sdrai", function() {deepEqual( Stem("sdraiata"), "sdrai");});
test("sdraiate -> sdrai", function() {deepEqual( Stem("sdraiate"), "sdrai");});
test("sdraiati -> sdrai", function() {deepEqual( Stem("sdraiati"), "sdrai");});
test("sdraiò -> sdrai", function() {deepEqual( Stem("sdraiò"), "sdrai");});
test("sdrucciolar -> sdrucciol", function() {deepEqual( Stem("sdrucciolar"), "sdrucciol");});
test("sdrucciolare -> sdrucciol", function() {deepEqual( Stem("sdrucciolare"), "sdrucciol");});
test("sdrucciolava -> sdrucciol", function() {deepEqual( Stem("sdrucciolava"), "sdrucciol");});
test("sdrucciolò -> sdrucciol", function() {deepEqual( Stem("sdrucciolò"), "sdrucciol");});
test("se -> se", function() {deepEqual( Stem("se"), "se");});
test("sé -> sè", function() {deepEqual( Stem("sé"), "sè");});
test("sè -> sè", function() {deepEqual( Stem("sè"), "sè");});
test("seagull -> seagull", function() {deepEqual( Stem("seagull"), "seagull");});
test("sean -> sean", function() {deepEqual( Stem("sean"), "sean");});
test("seattle -> seattl", function() {deepEqual( Stem("seattle"), "seattl");});
test("sebastian -> sebastian", function() {deepEqual( Stem("sebastian"), "sebastian");});
test("sebastiani -> sebastian", function() {deepEqual( Stem("sebastiani"), "sebastian");});
test("sebastiano -> sebast", function() {deepEqual( Stem("sebastiano"), "sebast");});
test("sebben -> sebben", function() {deepEqual( Stem("sebben"), "sebben");});
test("sebbene -> sebben", function() {deepEqual( Stem("sebbene"), "sebben");});
test("secca -> secc", function() {deepEqual( Stem("secca"), "secc");});
test("seccano -> secc", function() {deepEqual( Stem("seccano"), "secc");});
test("seccare -> secc", function() {deepEqual( Stem("seccare"), "secc");});
test("seccarvi -> secc", function() {deepEqual( Stem("seccarvi"), "secc");});
test("seccata -> secc", function() {deepEqual( Stem("seccata"), "secc");});
test("seccatore -> seccator", function() {deepEqual( Stem("seccatore"), "seccator");});
test("seccatori -> seccator", function() {deepEqual( Stem("seccatori"), "seccator");});
test("seccatura -> seccatur", function() {deepEqual( Stem("seccatura"), "seccatur");});
test("secche -> secc", function() {deepEqual( Stem("secche"), "secc");});
test("seccherebbe -> secc", function() {deepEqual( Stem("seccherebbe"), "secc");});
test("secchi -> secc", function() {deepEqual( Stem("secchi"), "secc");});
test("secchie -> secc", function() {deepEqual( Stem("secchie"), "secc");});
test("secchio -> secc", function() {deepEqual( Stem("secchio"), "secc");});
test("secco -> secc", function() {deepEqual( Stem("secco"), "secc");});
test("secentista -> secent", function() {deepEqual( Stem("secentista"), "secent");});
test("secessione -> secession", function() {deepEqual( Stem("secessione"), "secession");});
test("secessionismo -> secession", function() {deepEqual( Stem("secessionismo"), "secession");});
test("secessionista -> secession", function() {deepEqual( Stem("secessionista"), "secession");});
test("secessionisti -> secession", function() {deepEqual( Stem("secessionisti"), "secession");});
test("secit -> secit", function() {deepEqual( Stem("secit"), "secit");});
test("seco -> sec", function() {deepEqual( Stem("seco"), "sec");});
test("secolare -> secol", function() {deepEqual( Stem("secolare"), "secol");});
test("secolaresca -> secolaresc", function() {deepEqual( Stem("secolaresca"), "secolaresc");});
test("secolari -> secolar", function() {deepEqual( Stem("secolari"), "secolar");});
test("secoli -> secol", function() {deepEqual( Stem("secoli"), "secol");});
test("secolo -> secol", function() {deepEqual( Stem("secolo"), "secol");});
test("second -> second", function() {deepEqual( Stem("second"), "second");});
test("seconda -> second", function() {deepEqual( Stem("seconda"), "second");});
test("secondando -> second", function() {deepEqual( Stem("secondando"), "second");});
test("secondar -> second", function() {deepEqual( Stem("secondar"), "second");});
test("secondare -> second", function() {deepEqual( Stem("secondare"), "second");});
test("secondaria -> secondar", function() {deepEqual( Stem("secondaria"), "secondar");});
test("secondariamente -> secondar", function() {deepEqual( Stem("secondariamente"), "secondar");});
test("secondario -> secondar", function() {deepEqual( Stem("secondario"), "secondar");});
test("secondarlo -> second", function() {deepEqual( Stem("secondarlo"), "second");});
test("secondato -> second", function() {deepEqual( Stem("secondato"), "second");});
test("secondava -> second", function() {deepEqual( Stem("secondava"), "second");});
test("secondavano -> second", function() {deepEqual( Stem("secondavano"), "second");});
test("secondi -> second", function() {deepEqual( Stem("secondi"), "second");});
test("secondo -> second", function() {deepEqual( Stem("secondo"), "second");});
test("secret -> secret", function() {deepEqual( Stem("secret"), "secret");});
test("security -> security", function() {deepEqual( Stem("security"), "security");});
test("sed -> sed", function() {deepEqual( Stem("sed"), "sed");});
test("sedare -> sed", function() {deepEqual( Stem("sedare"), "sed");});
test("sedata -> sed", function() {deepEqual( Stem("sedata"), "sed");});
test("sedate -> sed", function() {deepEqual( Stem("sedate"), "sed");});
test("sedativi -> sedat", function() {deepEqual( Stem("sedativi"), "sedat");});
test("sedava -> sed", function() {deepEqual( Stem("sedava"), "sed");});
test("sede -> sed", function() {deepEqual( Stem("sede"), "sed");});
test("sedendo -> sed", function() {deepEqual( Stem("sedendo"), "sed");});
test("sedente -> sedent", function() {deepEqual( Stem("sedente"), "sedent");});
test("seder -> seder", function() {deepEqual( Stem("seder"), "seder");});
test("sedere -> sed", function() {deepEqual( Stem("sedere"), "sed");});
test("sederi -> seder", function() {deepEqual( Stem("sederi"), "seder");});
test("sedersi -> sed", function() {deepEqual( Stem("sedersi"), "sed");});
test("sedette -> sedett", function() {deepEqual( Stem("sedette"), "sedett");});
test("sedeva -> sed", function() {deepEqual( Stem("sedeva"), "sed");});
test("sedevano -> sed", function() {deepEqual( Stem("sedevano"), "sed");});
test("sedi -> sed", function() {deepEqual( Stem("sedi"), "sed");});
test("sedia -> sed", function() {deepEqual( Stem("sedia"), "sed");});
test("sedicente -> sedicent", function() {deepEqual( Stem("sedicente"), "sedicent");});
test("sedicenti -> sedicent", function() {deepEqual( Stem("sedicenti"), "sedicent");});
test("sedicesimo -> sedicesim", function() {deepEqual( Stem("sedicesimo"), "sedicesim");});
test("sedici -> sedic", function() {deepEqual( Stem("sedici"), "sedic");});
test("sedie -> sed", function() {deepEqual( Stem("sedie"), "sed");});
test("sedile -> sedil", function() {deepEqual( Stem("sedile"), "sedil");});
test("sedili -> sedil", function() {deepEqual( Stem("sedili"), "sedil");});
test("sedizione -> sedizion", function() {deepEqual( Stem("sedizione"), "sedizion");});
test("sediziose -> sediz", function() {deepEqual( Stem("sediziose"), "sediz");});
test("sedizioso -> sediz", function() {deepEqual( Stem("sedizioso"), "sediz");});
test("seducenti -> seducent", function() {deepEqual( Stem("seducenti"), "seducent");});
test("sedurre -> sedurr", function() {deepEqual( Stem("sedurre"), "sedurr");});
test("seduta -> sed", function() {deepEqual( Stem("seduta"), "sed");});
test("sedute -> sed", function() {deepEqual( Stem("sedute"), "sed");});
test("seduti -> sed", function() {deepEqual( Stem("seduti"), "sed");});
test("seduto -> sed", function() {deepEqual( Stem("seduto"), "sed");});
test("seduttore -> seduttor", function() {deepEqual( Stem("seduttore"), "seduttor");});
test("seduttrice -> seduttr", function() {deepEqual( Stem("seduttrice"), "seduttr");});
test("sefinale -> sefinal", function() {deepEqual( Stem("sefinale"), "sefinal");});
test("sega -> seg", function() {deepEqual( Stem("sega"), "seg");});
test("segata -> seg", function() {deepEqual( Stem("segata"), "seg");});
test("segatura -> segatur", function() {deepEqual( Stem("segatura"), "segatur");});
test("seggi -> segg", function() {deepEqual( Stem("seggi"), "segg");});
test("seggio -> segg", function() {deepEqual( Stem("seggio"), "segg");});
test("seggiola -> seggiol", function() {deepEqual( Stem("seggiola"), "seggiol");});
test("seggiolaccia -> seggiolacc", function() {deepEqual( Stem("seggiolaccia"), "seggiolacc");});
test("seggiole -> seggiol", function() {deepEqual( Stem("seggiole"), "seggiol");});
test("seggiolino -> seggiolin", function() {deepEqual( Stem("seggiolino"), "seggiolin");});
test("seggiolone -> seggiolon", function() {deepEqual( Stem("seggiolone"), "seggiolon");});
test("segmento -> segment", function() {deepEqual( Stem("segmento"), "segment");});
test("segna -> segn", function() {deepEqual( Stem("segna"), "segn");});
test("segnala -> segnal", function() {deepEqual( Stem("segnala"), "segnal");});
test("segnalano -> segnal", function() {deepEqual( Stem("segnalano"), "segnal");});
test("segnalare -> segnal", function() {deepEqual( Stem("segnalare"), "segnal");});
test("segnalata -> segnal", function() {deepEqual( Stem("segnalata"), "segnal");});
test("segnalate -> segnal", function() {deepEqual( Stem("segnalate"), "segnal");});
test("segnalati -> segnal", function() {deepEqual( Stem("segnalati"), "segnal");});
test("segnalato -> segnal", function() {deepEqual( Stem("segnalato"), "segnal");});
test("segnalazione -> segnal", function() {deepEqual( Stem("segnalazione"), "segnal");});
test("segnalazioni -> segnal", function() {deepEqual( Stem("segnalazioni"), "segnal");});
test("segnale -> segnal", function() {deepEqual( Stem("segnale"), "segnal");});
test("segnali -> segnal", function() {deepEqual( Stem("segnali"), "segnal");});
test("segnaliamo -> segnal", function() {deepEqual( Stem("segnaliamo"), "segnal");});
test("segnando -> segn", function() {deepEqual( Stem("segnando"), "segn");});
test("segnare -> segn", function() {deepEqual( Stem("segnare"), "segn");});
test("segnata -> segn", function() {deepEqual( Stem("segnata"), "segn");});
test("segnatamente -> segnat", function() {deepEqual( Stem("segnatamente"), "segnat");});
test("segnate -> segn", function() {deepEqual( Stem("segnate"), "segn");});
test("segnati -> segn", function() {deepEqual( Stem("segnati"), "segn");});
test("segnato -> segn", function() {deepEqual( Stem("segnato"), "segn");});
test("segnava -> segn", function() {deepEqual( Stem("segnava"), "segn");});
test("segnavano -> segn", function() {deepEqual( Stem("segnavano"), "segn");});
test("segni -> segn", function() {deepEqual( Stem("segni"), "segn");});
test("segno -> segn", function() {deepEqual( Stem("segno"), "segn");});
test("segnò -> segn", function() {deepEqual( Stem("segnò"), "segn");});
test("segrate -> segr", function() {deepEqual( Stem("segrate"), "segr");});
test("segregare -> segreg", function() {deepEqual( Stem("segregare"), "segreg");});
test("segregasse -> segreg", function() {deepEqual( Stem("segregasse"), "segreg");});
test("segreta -> segret", function() {deepEqual( Stem("segreta"), "segret");});
test("segretamente -> segret", function() {deepEqual( Stem("segretamente"), "segret");});
test("segretari -> segretar", function() {deepEqual( Stem("segretari"), "segretar");});
test("segretaria -> segretar", function() {deepEqual( Stem("segretaria"), "segretar");});
test("segretariesco -> segretariesc", function() {deepEqual( Stem("segretariesco"), "segretariesc");});
test("segretario -> segretar", function() {deepEqual( Stem("segretario"), "segretar");});
test("segrete -> segr", function() {deepEqual( Stem("segrete"), "segr");});
test("segreteria -> segreter", function() {deepEqual( Stem("segreteria"), "segreter");});
test("segreterià -> segreter", function() {deepEqual( Stem("segreterià"), "segreter");});
test("segreterie -> segreter", function() {deepEqual( Stem("segreterie"), "segreter");});
test("segreterio -> segreter", function() {deepEqual( Stem("segreterio"), "segreter");});
test("segretezza -> segretezz", function() {deepEqual( Stem("segretezza"), "segretezz");});
test("segreti -> segret", function() {deepEqual( Stem("segreti"), "segret");});
test("segretissimo -> segretissim", function() {deepEqual( Stem("segretissimo"), "segretissim");});
test("segreto -> segret", function() {deepEqual( Stem("segreto"), "segret");});
test("segretò -> segret", function() {deepEqual( Stem("segretò"), "segret");});
test("segua -> segu", function() {deepEqual( Stem("segua"), "segu");});
test("seguaci -> seguac", function() {deepEqual( Stem("seguaci"), "seguac");});
test("seguano -> segu", function() {deepEqual( Stem("seguano"), "segu");});
test("segue -> segu", function() {deepEqual( Stem("segue"), "segu");});
test("seguendo -> segu", function() {deepEqual( Stem("seguendo"), "segu");});
test("seguente -> seguent", function() {deepEqual( Stem("seguente"), "seguent");});
test("seguenti -> seguent", function() {deepEqual( Stem("seguenti"), "seguent");});
test("segugi -> segug", function() {deepEqual( Stem("segugi"), "segug");});
test("seguì -> segu", function() {deepEqual( Stem("seguì"), "segu");});
test("seguirà -> segu", function() {deepEqual( Stem("seguirà"), "segu");});
test("seguiranno -> segu", function() {deepEqual( Stem("seguiranno"), "segu");});
test("seguire -> segu", function() {deepEqual( Stem("seguire"), "segu");});
test("seguirebbe -> segu", function() {deepEqual( Stem("seguirebbe"), "segu");});
test("seguirebbero -> segu", function() {deepEqual( Stem("seguirebbero"), "segu");});
test("seguiremo -> segu", function() {deepEqual( Stem("seguiremo"), "segu");});
test("seguirli -> segu", function() {deepEqual( Stem("seguirli"), "segu");});
test("seguirne -> segu", function() {deepEqual( Stem("seguirne"), "segu");});
test("seguirò -> segu", function() {deepEqual( Stem("seguirò"), "segu");});
test("seguiron -> seguiron", function() {deepEqual( Stem("seguiron"), "seguiron");});
test("seguirono -> segu", function() {deepEqual( Stem("seguirono"), "segu");});
test("seguisse -> seguiss", function() {deepEqual( Stem("seguisse"), "seguiss");});
test("seguissero -> segu", function() {deepEqual( Stem("seguissero"), "segu");});
test("seguita -> segu", function() {deepEqual( Stem("seguita"), "segu");});
test("seguitando -> seguit", function() {deepEqual( Stem("seguitando"), "seguit");});
test("seguitandolo -> seguit", function() {deepEqual( Stem("seguitandolo"), "seguit");});
test("seguitata -> seguit", function() {deepEqual( Stem("seguitata"), "seguit");});
test("seguitava -> seguit", function() {deepEqual( Stem("seguitava"), "seguit");});
test("seguitavano -> seguit", function() {deepEqual( Stem("seguitavano"), "seguit");});
test("seguite -> segu", function() {deepEqual( Stem("seguite"), "segu");});
test("seguiti -> segu", function() {deepEqual( Stem("seguiti"), "segu");});
test("seguito -> segu", function() {deepEqual( Stem("seguito"), "segu");});
test("seguitò -> seguit", function() {deepEqual( Stem("seguitò"), "seguit");});
test("seguiva -> segu", function() {deepEqual( Stem("seguiva"), "segu");});
test("seguivano -> segu", function() {deepEqual( Stem("seguivano"), "segu");});
test("seguo -> segu", function() {deepEqual( Stem("seguo"), "segu");});
test("seguono -> segu", function() {deepEqual( Stem("seguono"), "segu");});
test("sei -> sei", function() {deepEqual( Stem("sei"), "sei");});
test("seicento -> seicent", function() {deepEqual( Stem("seicento"), "seicent");});
test("seie -> sei", function() {deepEqual( Stem("seie"), "sei");});
test("seimila -> seimil", function() {deepEqual( Stem("seimila"), "seimil");});
test("sel -> sel", function() {deepEqual( Stem("sel"), "sel");});
test("selciato -> selc", function() {deepEqual( Stem("selciato"), "selc");});
test("select -> select", function() {deepEqual( Stem("select"), "select");});
test("selettiva -> selett", function() {deepEqual( Stem("selettiva"), "selett");});
test("selettivi -> selett", function() {deepEqual( Stem("selettivi"), "selett");});
test("selettività -> selett", function() {deepEqual( Stem("selettività"), "selett");});
test("selezionato -> selezion", function() {deepEqual( Stem("selezionato"), "selezion");});
test("selezione -> selezion", function() {deepEqual( Stem("selezione"), "selezion");});
test("sella -> sell", function() {deepEqual( Stem("sella"), "sell");});
test("sellare -> sell", function() {deepEqual( Stem("sellare"), "sell");});
test("seluatiche -> seluat", function() {deepEqual( Stem("seluatiche"), "seluat");});
test("selva -> selv", function() {deepEqual( Stem("selva"), "selv");});
test("selvagge -> selvagg", function() {deepEqual( Stem("selvagge"), "selvagg");});
test("selvaggia -> selvagg", function() {deepEqual( Stem("selvaggia"), "selvagg");});
test("selvaggio -> selvagg", function() {deepEqual( Stem("selvaggio"), "selvagg");});
test("sembehun -> sembehun", function() {deepEqual( Stem("sembehun"), "sembehun");});
test("sembiante -> sembiant", function() {deepEqual( Stem("sembiante"), "sembiant");});
test("sembianti -> sembiant", function() {deepEqual( Stem("sembianti"), "sembiant");});
test("sembianza -> sembianz", function() {deepEqual( Stem("sembianza"), "sembianz");});
test("sembra -> sembr", function() {deepEqual( Stem("sembra"), "sembr");});
test("sembrano -> sembr", function() {deepEqual( Stem("sembrano"), "sembr");});
test("sembrare -> sembr", function() {deepEqual( Stem("sembrare"), "sembr");});
test("sembrasse -> sembr", function() {deepEqual( Stem("sembrasse"), "sembr");});
test("sembrate -> sembr", function() {deepEqual( Stem("sembrate"), "sembr");});
test("sembrati -> sembr", function() {deepEqual( Stem("sembrati"), "sembr");});
test("sembrato -> sembr", function() {deepEqual( Stem("sembrato"), "sembr");});
test("sembrava -> sembr", function() {deepEqual( Stem("sembrava"), "sembr");});
test("sembrerebbe -> sembr", function() {deepEqual( Stem("sembrerebbe"), "sembr");});
test("sembrerebbero -> sembr", function() {deepEqual( Stem("sembrerebbero"), "sembr");});
test("sembri -> sembr", function() {deepEqual( Stem("sembri"), "sembr");});
test("seme -> sem", function() {deepEqual( Stem("seme"), "sem");});
test("sementa -> sement", function() {deepEqual( Stem("sementa"), "sement");});
test("semente -> sement", function() {deepEqual( Stem("semente"), "sement");});
test("semenza -> semenz", function() {deepEqual( Stem("semenza"), "semenz");});
test("semestrali -> semestral", function() {deepEqual( Stem("semestrali"), "semestral");});
test("semestre -> semestr", function() {deepEqual( Stem("semestre"), "semestr");});
test("semi -> sem", function() {deepEqual( Stem("semi"), "sem");});
test("semicieco -> semiciec", function() {deepEqual( Stem("semicieco"), "semiciec");});
test("semicircolo -> semicircol", function() {deepEqual( Stem("semicircolo"), "semicircol");});
test("semideserto -> semidesert", function() {deepEqual( Stem("semideserto"), "semidesert");});
test("semidistrutto -> semidistrutt", function() {deepEqual( Stem("semidistrutto"), "semidistrutt");});
test("semifinale -> semifinal", function() {deepEqual( Stem("semifinale"), "semifinal");});
test("semifinali -> semifinal", function() {deepEqual( Stem("semifinali"), "semifinal");});
test("semilibertà -> semilibert", function() {deepEqual( Stem("semilibertà"), "semilibert");});
test("seminano -> semin", function() {deepEqual( Stem("seminano"), "semin");});
test("seminar -> semin", function() {deepEqual( Stem("seminar"), "semin");});
test("seminare -> semin", function() {deepEqual( Stem("seminare"), "semin");});
test("seminario -> seminar", function() {deepEqual( Stem("seminario"), "seminar");});
test("seminata -> semin", function() {deepEqual( Stem("seminata"), "semin");});
test("seminate -> semin", function() {deepEqual( Stem("seminate"), "semin");});
test("seminati -> semin", function() {deepEqual( Stem("seminati"), "semin");});
test("seminato -> semin", function() {deepEqual( Stem("seminato"), "semin");});
test("seminava -> semin", function() {deepEqual( Stem("seminava"), "semin");});
test("seminavano -> semin", function() {deepEqual( Stem("seminavano"), "semin");});
test("seminìo -> seminì", function() {deepEqual( Stem("seminìo"), "seminì");});
test("semitono -> semit", function() {deepEqual( Stem("semitono"), "semit");});
test("semivivo -> semiv", function() {deepEqual( Stem("semivivo"), "semiv");});
test("semmai -> semma", function() {deepEqual( Stem("semmai"), "semma");});
test("semplice -> semplic", function() {deepEqual( Stem("semplice"), "semplic");});
test("semplicemente -> semplic", function() {deepEqual( Stem("semplicemente"), "semplic");});
test("semplici -> semplic", function() {deepEqual( Stem("semplici"), "semplic");});
test("sempliciotto -> sempliciott", function() {deepEqual( Stem("sempliciotto"), "sempliciott");});
test("semplicità -> semplic", function() {deepEqual( Stem("semplicità"), "semplic");});
test("semplificare -> semplific", function() {deepEqual( Stem("semplificare"), "semplific");});
test("semplificazione -> semplif", function() {deepEqual( Stem("semplificazione"), "semplif");});
test("sempre -> sempr", function() {deepEqual( Stem("sempre"), "sempr");});
test("sempronio -> sempron", function() {deepEqual( Stem("sempronio"), "sempron");});
test("sen -> sen", function() {deepEqual( Stem("sen"), "sen");});
test("senato -> sen", function() {deepEqual( Stem("senato"), "sen");});
test("senatore -> senator", function() {deepEqual( Stem("senatore"), "senator");});
test("senatori -> senator", function() {deepEqual( Stem("senatori"), "senator");});
test("senatur -> senatur", function() {deepEqual( Stem("senatur"), "senatur");});
test("senectus -> senectus", function() {deepEqual( Stem("senectus"), "senectus");});
test("senegal -> senegal", function() {deepEqual( Stem("senegal"), "senegal");});
test("senegalese -> senegales", function() {deepEqual( Stem("senegalese"), "senegales");});
test("senese -> senes", function() {deepEqual( Stem("senese"), "senes");});
test("seni -> sen", function() {deepEqual( Stem("seni"), "sen");});
test("seniga -> senig", function() {deepEqual( Stem("seniga"), "senig");});
test("senile -> senil", function() {deepEqual( Stem("senile"), "senil");});
test("senno -> senn", function() {deepEqual( Stem("senno"), "senn");});
test("sennò -> senn", function() {deepEqual( Stem("sennò"), "senn");});
test("seno -> sen", function() {deepEqual( Stem("seno"), "sen");});
test("senonchè -> senonc", function() {deepEqual( Stem("senonchè"), "senonc");});
test("señor -> señor", function() {deepEqual( Stem("señor"), "señor");});
test("sensazione -> sensazion", function() {deepEqual( Stem("sensazione"), "sensazion");});
test("sensazioni -> sensazion", function() {deepEqual( Stem("sensazioni"), "sensazion");});
test("sensi -> sens", function() {deepEqual( Stem("sensi"), "sens");});
test("sensibile -> sensibil", function() {deepEqual( Stem("sensibile"), "sensibil");});
test("sensibilità -> sensibil", function() {deepEqual( Stem("sensibilità"), "sensibil");});
test("sensibilmente -> sensibil", function() {deepEqual( Stem("sensibilmente"), "sensibil");});
test("sensini -> sensin", function() {deepEqual( Stem("sensini"), "sensin");});
test("sensitiva -> sensit", function() {deepEqual( Stem("sensitiva"), "sensit");});
test("sensitivo -> sensit", function() {deepEqual( Stem("sensitivo"), "sensit");});
test("senso -> sens", function() {deepEqual( Stem("senso"), "sens");});
test("senta -> sent", function() {deepEqual( Stem("senta"), "sent");});
test("sentan -> sentan", function() {deepEqual( Stem("sentan"), "sentan");});
test("sentano -> sent", function() {deepEqual( Stem("sentano"), "sent");});
test("sente -> sent", function() {deepEqual( Stem("sente"), "sent");});
test("sentendo -> sent", function() {deepEqual( Stem("sentendo"), "sent");});
test("sentendolo -> sent", function() {deepEqual( Stem("sentendolo"), "sent");});
test("sentendosi -> sent", function() {deepEqual( Stem("sentendosi"), "sent");});
test("sententiam -> sententiam", function() {deepEqual( Stem("sententiam"), "sententiam");});
test("sentenza -> sentenz", function() {deepEqual( Stem("sentenza"), "sentenz");});
test("sentenze -> sentenz", function() {deepEqual( Stem("sentenze"), "sentenz");});
test("sentenziare -> sentenz", function() {deepEqual( Stem("sentenziare"), "sentenz");});
test("sentenziato -> sentenz", function() {deepEqual( Stem("sentenziato"), "sentenz");});
test("sentenzio -> sentenz", function() {deepEqual( Stem("sentenzio"), "sentenz");});
test("senti -> sent", function() {deepEqual( Stem("senti"), "sent");});
test("sentì -> sent", function() {deepEqual( Stem("sentì"), "sent");});
test("sentiamo -> sent", function() {deepEqual( Stem("sentiamo"), "sent");});
test("sentieri -> sentier", function() {deepEqual( Stem("sentieri"), "sentier");});
test("sentiero -> sentier", function() {deepEqual( Stem("sentiero"), "sentier");});
test("sentimentale -> sentimental", function() {deepEqual( Stem("sentimentale"), "sentimental");});
test("sentimentalmente -> sentimental", function() {deepEqual( Stem("sentimentalmente"), "sentimental");});
test("sentimenti -> sent", function() {deepEqual( Stem("sentimenti"), "sent");});
test("sentimento -> sent", function() {deepEqual( Stem("sentimento"), "sent");});
test("sentinella -> sentinell", function() {deepEqual( Stem("sentinella"), "sentinell");});
test("sentinelle -> sentinell", function() {deepEqual( Stem("sentinelle"), "sentinell");});
test("sentir -> sent", function() {deepEqual( Stem("sentir"), "sent");});
test("sentirà -> sent", function() {deepEqual( Stem("sentirà"), "sent");});
test("sentirai -> sent", function() {deepEqual( Stem("sentirai"), "sent");});
test("sentiranno -> sent", function() {deepEqual( Stem("sentiranno"), "sent");});
test("sentire -> sent", function() {deepEqual( Stem("sentire"), "sent");});
test("sentiremo -> sent", function() {deepEqual( Stem("sentiremo"), "sent");});
test("sentirete -> sent", function() {deepEqual( Stem("sentirete"), "sent");});
test("sentirla -> sent", function() {deepEqual( Stem("sentirla"), "sent");});
test("sentirle -> sent", function() {deepEqual( Stem("sentirle"), "sent");});
test("sentirlo -> sent", function() {deepEqual( Stem("sentirlo"), "sent");});
test("sentirmi -> sent", function() {deepEqual( Stem("sentirmi"), "sent");});
test("sentirne -> sent", function() {deepEqual( Stem("sentirne"), "sent");});
test("sentirò -> sent", function() {deepEqual( Stem("sentirò"), "sent");});
test("sentiron -> sentiron", function() {deepEqual( Stem("sentiron"), "sentiron");});
test("sentirono -> sent", function() {deepEqual( Stem("sentirono"), "sent");});
test("sentirsi -> sent", function() {deepEqual( Stem("sentirsi"), "sent");});
test("sentirvi -> sent", function() {deepEqual( Stem("sentirvi"), "sent");});
test("sentisse -> sentiss", function() {deepEqual( Stem("sentisse"), "sentiss");});
test("sentissi -> sentiss", function() {deepEqual( Stem("sentissi"), "sentiss");});
test("sentita -> sent", function() {deepEqual( Stem("sentita"), "sent");});
test("sentite -> sent", function() {deepEqual( Stem("sentite"), "sent");});
test("sentiti -> sent", function() {deepEqual( Stem("sentiti"), "sent");});
test("sentito -> sent", function() {deepEqual( Stem("sentito"), "sent");});
test("sentiva -> sent", function() {deepEqual( Stem("sentiva"), "sent");});
test("sentivan -> sentivan", function() {deepEqual( Stem("sentivan"), "sentivan");});
test("sentivano -> sent", function() {deepEqual( Stem("sentivano"), "sent");});
test("sento -> sent", function() {deepEqual( Stem("sento"), "sent");});
test("senton -> senton", function() {deepEqual( Stem("senton"), "senton");});
test("sentono -> sent", function() {deepEqual( Stem("sentono"), "sent");});
test("senz -> senz", function() {deepEqual( Stem("senz"), "senz");});
test("senza -> senz", function() {deepEqual( Stem("senza"), "senz");});
test("separa -> separ", function() {deepEqual( Stem("separa"), "separ");});
test("separando -> separ", function() {deepEqual( Stem("separando"), "separ");});
test("separandosi -> separ", function() {deepEqual( Stem("separandosi"), "separ");});
test("separano -> separ", function() {deepEqual( Stem("separano"), "separ");});
test("separar -> separ", function() {deepEqual( Stem("separar"), "separ");});
test("separare -> separ", function() {deepEqual( Stem("separare"), "separ");});
test("separarlo -> separ", function() {deepEqual( Stem("separarlo"), "separ");});
test("separarono -> separ", function() {deepEqual( Stem("separarono"), "separ");});
test("separarsi -> separ", function() {deepEqual( Stem("separarsi"), "separ");});
test("separata -> separ", function() {deepEqual( Stem("separata"), "separ");});
test("separatamente -> separat", function() {deepEqual( Stem("separatamente"), "separat");});
test("separate -> separ", function() {deepEqual( Stem("separate"), "separ");});
test("separati -> separ", function() {deepEqual( Stem("separati"), "separ");});
test("separatista -> separat", function() {deepEqual( Stem("separatista"), "separat");});
test("separatiste -> separat", function() {deepEqual( Stem("separatiste"), "separat");});
test("separatisti -> separat", function() {deepEqual( Stem("separatisti"), "separat");});
test("separato -> separ", function() {deepEqual( Stem("separato"), "separ");});
test("separatone -> separaton", function() {deepEqual( Stem("separatone"), "separaton");});
test("separava -> separ", function() {deepEqual( Stem("separava"), "separ");});
test("separavan -> separavan", function() {deepEqual( Stem("separavan"), "separavan");});
test("separazione -> separ", function() {deepEqual( Stem("separazione"), "separ");});
test("separazioni -> separ", function() {deepEqual( Stem("separazioni"), "separ");});
test("sepolta -> sepolt", function() {deepEqual( Stem("sepolta"), "sepolt");});
test("sepolte -> sepolt", function() {deepEqual( Stem("sepolte"), "sepolt");});
test("sepolti -> sepolt", function() {deepEqual( Stem("sepolti"), "sepolt");});
test("sepolto -> sepolt", function() {deepEqual( Stem("sepolto"), "sepolt");});
test("seppe -> sepp", function() {deepEqual( Stem("seppe"), "sepp");});
test("seppellirsi -> seppell", function() {deepEqual( Stem("seppellirsi"), "seppell");});
test("seppero -> sepper", function() {deepEqual( Stem("seppero"), "sepper");});
test("seppi -> sepp", function() {deepEqual( Stem("seppi"), "sepp");});
test("seppo -> sepp", function() {deepEqual( Stem("seppo"), "sepp");});
test("seppur -> seppur", function() {deepEqual( Stem("seppur"), "seppur");});
test("seq -> seq", function() {deepEqual( Stem("seq"), "seq");});
test("sequestra -> sequestr", function() {deepEqual( Stem("sequestra"), "sequestr");});
test("sequestrare -> sequestr", function() {deepEqual( Stem("sequestrare"), "sequestr");});
test("sequestrata -> sequestr", function() {deepEqual( Stem("sequestrata"), "sequestr");});
test("sequestrate -> sequestr", function() {deepEqual( Stem("sequestrate"), "sequestr");});
test("sequestrati -> sequestr", function() {deepEqual( Stem("sequestrati"), "sequestr");});
test("sequestrato -> sequestr", function() {deepEqual( Stem("sequestrato"), "sequestr");});
test("sequestri -> sequestr", function() {deepEqual( Stem("sequestri"), "sequestr");});
test("sequestro -> sequestr", function() {deepEqual( Stem("sequestro"), "sequestr");});
test("sera -> ser", function() {deepEqual( Stem("sera"), "ser");});
test("serafino -> serafin", function() {deepEqual( Stem("serafino"), "serafin");});
test("seraing -> seraing", function() {deepEqual( Stem("seraing"), "seraing");});
test("serata -> ser", function() {deepEqual( Stem("serata"), "ser");});
test("serato -> ser", function() {deepEqual( Stem("serato"), "ser");});
test("serba -> serb", function() {deepEqual( Stem("serba"), "serb");});
test("serbando -> serb", function() {deepEqual( Stem("serbando"), "serb");});
test("serbano -> serb", function() {deepEqual( Stem("serbano"), "serb");});
test("serbarceli -> serb", function() {deepEqual( Stem("serbarceli"), "serb");});
test("serbarsi -> serb", function() {deepEqual( Stem("serbarsi"), "serb");});
test("serbate -> serb", function() {deepEqual( Stem("serbate"), "serb");});
test("serbateli -> serbatel", function() {deepEqual( Stem("serbateli"), "serbatel");});
test("serbatelo -> serbatel", function() {deepEqual( Stem("serbatelo"), "serbatel");});
test("serbatoio -> serbatoi", function() {deepEqual( Stem("serbatoio"), "serbatoi");});
test("serbava -> serb", function() {deepEqual( Stem("serbava"), "serb");});
test("serbavano -> serb", function() {deepEqual( Stem("serbavano"), "serb");});
test("serbe -> serb", function() {deepEqual( Stem("serbe"), "serb");});
test("serbi -> serb", function() {deepEqual( Stem("serbi"), "serb");});
test("serbo -> serb", function() {deepEqual( Stem("serbo"), "serb");});
test("serbò -> serb", function() {deepEqual( Stem("serbò"), "serb");});
test("serena -> seren", function() {deepEqual( Stem("serena"), "seren");});
test("serenissimo -> serenissim", function() {deepEqual( Stem("serenissimo"), "serenissim");});
test("serenità -> seren", function() {deepEqual( Stem("serenità"), "seren");});
test("sereno -> seren", function() {deepEqual( Stem("sereno"), "seren");});
test("serfi -> serf", function() {deepEqual( Stem("serfi"), "serf");});
test("sergente -> sergent", function() {deepEqual( Stem("sergente"), "sergent");});
test("sergi -> serg", function() {deepEqual( Stem("sergi"), "serg");});
test("sergio -> serg", function() {deepEqual( Stem("sergio"), "serg");});
test("sergno -> sergn", function() {deepEqual( Stem("sergno"), "sergn");});
test("seri -> ser", function() {deepEqual( Stem("seri"), "ser");});
test("seria -> ser", function() {deepEqual( Stem("seria"), "ser");});
test("serial -> serial", function() {deepEqual( Stem("serial"), "serial");});
test("seriamente -> ser", function() {deepEqual( Stem("seriamente"), "ser");});
test("serie -> ser", function() {deepEqual( Stem("serie"), "ser");});
test("series -> series", function() {deepEqual( Stem("series"), "series");});
test("serietà -> seriet", function() {deepEqual( Stem("serietà"), "seriet");});
test("serio -> ser", function() {deepEqual( Stem("serio"), "ser");});
test("serissimo -> serissim", function() {deepEqual( Stem("serissimo"), "serissim");});
test("serizi -> seriz", function() {deepEqual( Stem("serizi"), "seriz");});
test("serono -> ser", function() {deepEqual( Stem("serono"), "ser");});
test("serpe -> serp", function() {deepEqual( Stem("serpe"), "serp");});
test("serpeggiamento -> serpegg", function() {deepEqual( Stem("serpeggiamento"), "serpegg");});
test("serpeggiando -> serpegg", function() {deepEqual( Stem("serpeggiando"), "serpegg");});
test("serpeggiante -> serpegg", function() {deepEqual( Stem("serpeggiante"), "serpegg");});
test("serpeggianti -> serpegg", function() {deepEqual( Stem("serpeggianti"), "serpegg");});
test("serpeggiare -> serpegg", function() {deepEqual( Stem("serpeggiare"), "serpegg");});
test("serpellini -> serpellin", function() {deepEqual( Stem("serpellini"), "serpellin");});
test("serpendo -> serp", function() {deepEqual( Stem("serpendo"), "serp");});
test("serpenti -> serpent", function() {deepEqual( Stem("serpenti"), "serpent");});
test("serpi -> serp", function() {deepEqual( Stem("serpi"), "serp");});
test("serra -> serr", function() {deepEqual( Stem("serra"), "serr");});
test("serrata -> serr", function() {deepEqual( Stem("serrata"), "serr");});
test("serrati -> serr", function() {deepEqual( Stem("serrati"), "serr");});
test("serratissimo -> serratissim", function() {deepEqual( Stem("serratissimo"), "serratissim");});
test("serrato -> serr", function() {deepEqual( Stem("serrato"), "serr");});
test("serratura -> serratur", function() {deepEqual( Stem("serratura"), "serratur");});
test("serre -> serr", function() {deepEqual( Stem("serre"), "serr");});
test("serri -> serr", function() {deepEqual( Stem("serri"), "serr");});
test("serrra -> serrr", function() {deepEqual( Stem("serrra"), "serrr");});
test("serva -> serv", function() {deepEqual( Stem("serva"), "serv");});
test("servano -> serv", function() {deepEqual( Stem("servano"), "serv");});
test("serve -> serv", function() {deepEqual( Stem("serve"), "serv");});
test("servello -> servell", function() {deepEqual( Stem("servello"), "servell");});
test("servendolo -> serv", function() {deepEqual( Stem("servendolo"), "serv");});
test("servendosene -> serv", function() {deepEqual( Stem("servendosene"), "serv");});
test("serventi -> servent", function() {deepEqual( Stem("serventi"), "servent");});
test("servetta -> servett", function() {deepEqual( Stem("servetta"), "servett");});
test("servi -> serv", function() {deepEqual( Stem("servi"), "serv");});
test("servì -> serv", function() {deepEqual( Stem("servì"), "serv");});
test("serviamo -> serv", function() {deepEqual( Stem("serviamo"), "serv");});
test("servicio -> servic", function() {deepEqual( Stem("servicio"), "servic");});
test("servile -> servil", function() {deepEqual( Stem("servile"), "servil");});
test("servilismo -> servil", function() {deepEqual( Stem("servilismo"), "servil");});
test("servir -> serv", function() {deepEqual( Stem("servir"), "serv");});
test("servirà -> serv", function() {deepEqual( Stem("servirà"), "serv");});
test("serviranno -> serv", function() {deepEqual( Stem("serviranno"), "serv");});
test("servire -> serv", function() {deepEqual( Stem("servire"), "serv");});
test("servirebbe -> serv", function() {deepEqual( Stem("servirebbe"), "serv");});
test("servirgli -> serv", function() {deepEqual( Stem("servirgli"), "serv");});
test("servirla -> serv", function() {deepEqual( Stem("servirla"), "serv");});
test("servirli -> serv", function() {deepEqual( Stem("servirli"), "serv");});
test("servirlo -> serv", function() {deepEqual( Stem("servirlo"), "serv");});
test("servirò -> serv", function() {deepEqual( Stem("servirò"), "serv");});
test("serviron -> serviron", function() {deepEqual( Stem("serviron"), "serviron");});
test("servirono -> serv", function() {deepEqual( Stem("servirono"), "serv");});
test("servirsene -> serv", function() {deepEqual( Stem("servirsene"), "serv");});
test("servirsi -> serv", function() {deepEqual( Stem("servirsi"), "serv");});
test("servirvi -> serv", function() {deepEqual( Stem("servirvi"), "serv");});
test("servisse -> serviss", function() {deepEqual( Stem("servisse"), "serviss");});
test("servita -> serv", function() {deepEqual( Stem("servita"), "serv");});
test("servite -> serv", function() {deepEqual( Stem("servite"), "serv");});
test("serviti -> serv", function() {deepEqual( Stem("serviti"), "serv");});
test("servito -> serv", function() {deepEqual( Stem("servito"), "serv");});
test("servitor -> servitor", function() {deepEqual( Stem("servitor"), "servitor");});
test("servitore -> servitor", function() {deepEqual( Stem("servitore"), "servitor");});
test("servitori -> servitor", function() {deepEqual( Stem("servitori"), "servitor");});
test("servitù -> servitù", function() {deepEqual( Stem("servitù"), "servitù");});
test("serviva -> serv", function() {deepEqual( Stem("serviva"), "serv");});
test("servivano -> serv", function() {deepEqual( Stem("servivano"), "serv");});
test("servizi -> serviz", function() {deepEqual( Stem("servizi"), "serviz");});
test("servizietto -> serviziett", function() {deepEqual( Stem("servizietto"), "serviziett");});
test("servizio -> serviz", function() {deepEqual( Stem("servizio"), "serviz");});
test("servo -> serv", function() {deepEqual( Stem("servo"), "serv");});
test("servodio -> servod", function() {deepEqual( Stem("servodio"), "servod");});
test("servono -> serv", function() {deepEqual( Stem("servono"), "serv");});
test("sesani -> sesan", function() {deepEqual( Stem("sesani"), "sesan");});
test("sesia -> ses", function() {deepEqual( Stem("sesia"), "ses");});
test("sessant -> sessant", function() {deepEqual( Stem("sessant"), "sessant");});
test("sessanta -> sessant", function() {deepEqual( Stem("sessanta"), "sessant");});
test("sessantaquattro -> sessantaquattr", function() {deepEqual( Stem("sessantaquattro"), "sessantaquattr");});
test("sessantina -> sessantin", function() {deepEqual( Stem("sessantina"), "sessantin");});
test("sessi -> sess", function() {deepEqual( Stem("sessi"), "sess");});
test("sessione -> session", function() {deepEqual( Stem("sessione"), "session");});
test("sesso -> sess", function() {deepEqual( Stem("sesso"), "sess");});
test("sessuale -> sessual", function() {deepEqual( Stem("sessuale"), "sessual");});
test("sessuali -> sessual", function() {deepEqual( Stem("sessuali"), "sessual");});
test("sessualmente -> sessual", function() {deepEqual( Stem("sessualmente"), "sessual");});
test("sesta -> sest", function() {deepEqual( Stem("sesta"), "sest");});
test("sesto -> sest", function() {deepEqual( Stem("sesto"), "sest");});
test("sestri -> sestr", function() {deepEqual( Stem("sestri"), "sestr");});
test("set -> set", function() {deepEqual( Stem("set"), "set");});
test("seta -> set", function() {deepEqual( Stem("seta"), "set");});
test("setacciamente -> setacc", function() {deepEqual( Stem("setacciamente"), "setacc");});
test("setacciando -> setacc", function() {deepEqual( Stem("setacciando"), "setacc");});
test("sete -> set", function() {deepEqual( Stem("sete"), "set");});
test("setien -> setien", function() {deepEqual( Stem("setien"), "setien");});
test("sett -> sett", function() {deepEqual( Stem("sett"), "sett");});
test("settala -> settal", function() {deepEqual( Stem("settala"), "settal");});
test("settant -> settant", function() {deepEqual( Stem("settant"), "settant");});
test("settantina -> settantin", function() {deepEqual( Stem("settantina"), "settantin");});
test("settaria -> settar", function() {deepEqual( Stem("settaria"), "settar");});
test("sette -> sett", function() {deepEqual( Stem("sette"), "sett");});
test("settembre -> settembr", function() {deepEqual( Stem("settembre"), "settembr");});
test("settentrionale -> settentrional", function() {deepEqual( Stem("settentrionale"), "settentrional");});
test("settentrionali -> settentrional", function() {deepEqual( Stem("settentrionali"), "settentrional");});
test("settentrione -> settentrion", function() {deepEqual( Stem("settentrione"), "settentrion");});
test("settima -> settim", function() {deepEqual( Stem("settima"), "settim");});
test("settimana -> settiman", function() {deepEqual( Stem("settimana"), "settiman");});
test("settimanale -> settimanal", function() {deepEqual( Stem("settimanale"), "settimanal");});
test("settimanali -> settimanal", function() {deepEqual( Stem("settimanali"), "settimanal");});
test("settimane -> settiman", function() {deepEqual( Stem("settimane"), "settiman");});
test("settime -> settim", function() {deepEqual( Stem("settime"), "settim");});
test("settimo -> settim", function() {deepEqual( Stem("settimo"), "settim");});
test("settore -> settor", function() {deepEqual( Stem("settore"), "settor");});
test("settori -> settor", function() {deepEqual( Stem("settori"), "settor");});
test("settoriale -> settorial", function() {deepEqual( Stem("settoriale"), "settorial");});
test("settoriali -> settorial", function() {deepEqual( Stem("settoriali"), "settorial");});
test("seul -> seul", function() {deepEqual( Stem("seul"), "seul");});
test("sevendosi -> sev", function() {deepEqual( Stem("sevendosi"), "sev");});
test("severa -> sever", function() {deepEqual( Stem("severa"), "sever");});
test("severamente -> sever", function() {deepEqual( Stem("severamente"), "sever");});
test("severe -> sev", function() {deepEqual( Stem("severe"), "sev");});
test("severi -> sever", function() {deepEqual( Stem("severi"), "sever");});
test("severissime -> severissim", function() {deepEqual( Stem("severissime"), "severissim");});
test("severissimi -> severissim", function() {deepEqual( Stem("severissimi"), "severissim");});
test("severo -> sever", function() {deepEqual( Stem("severo"), "sever");});
test("sevitie -> sevit", function() {deepEqual( Stem("sevitie"), "sevit");});
test("sex -> sex", function() {deepEqual( Stem("sex"), "sex");});
test("sexi -> sex", function() {deepEqual( Stem("sexi"), "sex");});
test("seyed -> seyed", function() {deepEqual( Stem("seyed"), "seyed");});
test("seymandi -> seymand", function() {deepEqual( Stem("seymandi"), "seymand");});
test("sezione -> sezion", function() {deepEqual( Stem("sezione"), "sezion");});
test("sezioni -> sezion", function() {deepEqual( Stem("sezioni"), "sezion");});
test("sf -> sf", function() {deepEqual( Stem("sf"), "sf");});
test("sfaccendati -> sfaccend", function() {deepEqual( Stem("sfaccendati"), "sfaccend");});
test("sfacciata -> sfacc", function() {deepEqual( Stem("sfacciata"), "sfacc");});
test("sfacciataggine -> sfacciataggin", function() {deepEqual( Stem("sfacciataggine"), "sfacciataggin");});
test("sfacciato -> sfacc", function() {deepEqual( Stem("sfacciato"), "sfacc");});
test("sfama -> sfam", function() {deepEqual( Stem("sfama"), "sfam");});
test("sfarzosa -> sfarzos", function() {deepEqual( Stem("sfarzosa"), "sfarzos");});
test("sfarzosamente -> sfarzos", function() {deepEqual( Stem("sfarzosamente"), "sfarzos");});
test("sfarzose -> sfarzos", function() {deepEqual( Stem("sfarzose"), "sfarzos");});
test("sfarzosi -> sfarzos", function() {deepEqual( Stem("sfarzosi"), "sfarzos");});
test("sfera -> sfer", function() {deepEqual( Stem("sfera"), "sfer");});
test("sferra -> sferr", function() {deepEqual( Stem("sferra"), "sferr");});
test("sferrare -> sferr", function() {deepEqual( Stem("sferrare"), "sferr");});
test("sferrato -> sferr", function() {deepEqual( Stem("sferrato"), "sferr");});
test("sferzando -> sferz", function() {deepEqual( Stem("sferzando"), "sferz");});
test("sfida -> sfid", function() {deepEqual( Stem("sfida"), "sfid");});
test("sfidante -> sfidant", function() {deepEqual( Stem("sfidante"), "sfidant");});
test("sfidare -> sfid", function() {deepEqual( Stem("sfidare"), "sfid");});
test("sfide -> sfid", function() {deepEqual( Stem("sfide"), "sfid");});
test("sfiducia -> sfiduc", function() {deepEqual( Stem("sfiducia"), "sfiduc");});
test("sfigurata -> sfigur", function() {deepEqual( Stem("sfigurata"), "sfigur");});
test("sfilare -> sfil", function() {deepEqual( Stem("sfilare"), "sfil");});
test("sfilarono -> sfil", function() {deepEqual( Stem("sfilarono"), "sfil");});
test("sfilata -> sfil", function() {deepEqual( Stem("sfilata"), "sfil");});
test("sfilati -> sfil", function() {deepEqual( Stem("sfilati"), "sfil");});
test("sfilato -> sfil", function() {deepEqual( Stem("sfilato"), "sfil");});
test("sfinimento -> sfin", function() {deepEqual( Stem("sfinimento"), "sfin");});
test("sfiorando -> sfior", function() {deepEqual( Stem("sfiorando"), "sfior");});
test("sfiorare -> sfior", function() {deepEqual( Stem("sfiorare"), "sfior");});
test("sfiorava -> sfior", function() {deepEqual( Stem("sfiorava"), "sfior");});
test("sfiorita -> sfior", function() {deepEqual( Stem("sfiorita"), "sfior");});
test("sfociano -> sfoc", function() {deepEqual( Stem("sfociano"), "sfoc");});
test("sfociare -> sfoc", function() {deepEqual( Stem("sfociare"), "sfoc");});
test("sfociato -> sfoc", function() {deepEqual( Stem("sfociato"), "sfoc");});
test("sfoderando -> sfoder", function() {deepEqual( Stem("sfoderando"), "sfoder");});
test("sfoderate -> sfoder", function() {deepEqual( Stem("sfoderate"), "sfoder");});
test("sfoderò -> sfod", function() {deepEqual( Stem("sfoderò"), "sfod");});
test("sfogar -> sfog", function() {deepEqual( Stem("sfogar"), "sfog");});
test("sfogare -> sfog", function() {deepEqual( Stem("sfogare"), "sfog");});
test("sfogarsi -> sfog", function() {deepEqual( Stem("sfogarsi"), "sfog");});
test("sfogava -> sfog", function() {deepEqual( Stem("sfogava"), "sfog");});
test("sfoggi -> sfogg", function() {deepEqual( Stem("sfoggi"), "sfogg");});
test("sfoggia -> sfogg", function() {deepEqual( Stem("sfoggia"), "sfogg");});
test("sfoghi -> sfog", function() {deepEqual( Stem("sfoghi"), "sfog");});
test("sfogo -> sfog", function() {deepEqual( Stem("sfogo"), "sfog");});
test("sfolgorati -> sfolgor", function() {deepEqual( Stem("sfolgorati"), "sfolgor");});
test("sfolgoravano -> sfolgor", function() {deepEqual( Stem("sfolgoravano"), "sfolgor");});
test("sfollati -> sfoll", function() {deepEqual( Stem("sfollati"), "sfoll");});
test("sfonda -> sfond", function() {deepEqual( Stem("sfonda"), "sfond");});
test("sfondarla -> sfond", function() {deepEqual( Stem("sfondarla"), "sfond");});
test("sfondata -> sfond", function() {deepEqual( Stem("sfondata"), "sfond");});
test("sfondati -> sfond", function() {deepEqual( Stem("sfondati"), "sfond");});
test("sfondo -> sfond", function() {deepEqual( Stem("sfondo"), "sfond");});
test("sforacchiate -> sforacc", function() {deepEqual( Stem("sforacchiate"), "sforacc");});
test("sforare -> sfor", function() {deepEqual( Stem("sforare"), "sfor");});
test("sformato -> sform", function() {deepEqual( Stem("sformato"), "sform");});
test("sfornare -> sforn", function() {deepEqual( Stem("sfornare"), "sforn");});
test("sfortuna -> sfortun", function() {deepEqual( Stem("sfortuna"), "sfortun");});
test("sfortunata -> sfortun", function() {deepEqual( Stem("sfortunata"), "sfortun");});
test("sfortunato -> sfortun", function() {deepEqual( Stem("sfortunato"), "sfortun");});
test("sforzai -> sforza", function() {deepEqual( Stem("sforzai"), "sforza");});
test("sforzarsi -> sforz", function() {deepEqual( Stem("sforzarsi"), "sforz");});
test("sforzasser -> sforzasser", function() {deepEqual( Stem("sforzasser"), "sforzasser");});
test("sforzati -> sforz", function() {deepEqual( Stem("sforzati"), "sforz");});
test("sforzava -> sforz", function() {deepEqual( Stem("sforzava"), "sforz");});
test("sforzesco -> sforzesc", function() {deepEqual( Stem("sforzesco"), "sforzesc");});
test("sforzi -> sforz", function() {deepEqual( Stem("sforzi"), "sforz");});
test("sforzo -> sforz", function() {deepEqual( Stem("sforzo"), "sforz");});
test("sfottò -> sfott", function() {deepEqual( Stem("sfottò"), "sfott");});
test("sfrattar -> sfratt", function() {deepEqual( Stem("sfrattar"), "sfratt");});
test("sfrattasse -> sfratt", function() {deepEqual( Stem("sfrattasse"), "sfratt");});
test("sfrattata -> sfratt", function() {deepEqual( Stem("sfrattata"), "sfratt");});
test("sfrattati -> sfratt", function() {deepEqual( Stem("sfrattati"), "sfratt");});
test("sfrattato -> sfratt", function() {deepEqual( Stem("sfrattato"), "sfratt");});
test("sfratto -> sfratt", function() {deepEqual( Stem("sfratto"), "sfratt");});
test("sfrecciato -> sfrecc", function() {deepEqual( Stem("sfrecciato"), "sfrecc");});
test("sfregiati -> sfreg", function() {deepEqual( Stem("sfregiati"), "sfreg");});
test("sfregiato -> sfreg", function() {deepEqual( Stem("sfregiato"), "sfreg");});
test("sfregio -> sfreg", function() {deepEqual( Stem("sfregio"), "sfreg");});
test("sfrenata -> sfren", function() {deepEqual( Stem("sfrenata"), "sfren");});
test("sfrenatezza -> sfrenatezz", function() {deepEqual( Stem("sfrenatezza"), "sfrenatezz");});
test("sfrondati -> sfrond", function() {deepEqual( Stem("sfrondati"), "sfrond");});
test("sfrontatezza -> sfrontatezz", function() {deepEqual( Stem("sfrontatezza"), "sfrontatezz");});
test("sfruttando -> sfrutt", function() {deepEqual( Stem("sfruttando"), "sfrutt");});
test("sfruttare -> sfrutt", function() {deepEqual( Stem("sfruttare"), "sfrutt");});
test("sfruttato -> sfrutt", function() {deepEqual( Stem("sfruttato"), "sfrutt");});
test("sfruttatrici -> sfruttatric", function() {deepEqual( Stem("sfruttatrici"), "sfruttatric");});
test("sfugge -> sfugg", function() {deepEqual( Stem("sfugge"), "sfugg");});
test("sfuggì -> sfugg", function() {deepEqual( Stem("sfuggì"), "sfugg");});
test("sfuggir -> sfugg", function() {deepEqual( Stem("sfuggir"), "sfugg");});
test("sfuggirci -> sfugg", function() {deepEqual( Stem("sfuggirci"), "sfugg");});
test("sfuggire -> sfugg", function() {deepEqual( Stem("sfuggire"), "sfugg");});
test("sfuggisse -> sfuggiss", function() {deepEqual( Stem("sfuggisse"), "sfuggiss");});
test("sfuggita -> sfugg", function() {deepEqual( Stem("sfuggita"), "sfugg");});
test("sfuggite -> sfugg", function() {deepEqual( Stem("sfuggite"), "sfugg");});
test("sfuggito -> sfugg", function() {deepEqual( Stem("sfuggito"), "sfugg");});
test("sfuggono -> sfugg", function() {deepEqual( Stem("sfuggono"), "sfugg");});
test("sfumando -> sfum", function() {deepEqual( Stem("sfumando"), "sfum");});
test("sfumato -> sfum", function() {deepEqual( Stem("sfumato"), "sfum");});
test("sfumature -> sfumatur", function() {deepEqual( Stem("sfumature"), "sfumatur");});
test("sfumavano -> sfum", function() {deepEqual( Stem("sfumavano"), "sfum");});
test("sg -> sg", function() {deepEqual( Stem("sg"), "sg");});
test("sgambetto -> sgambett", function() {deepEqual( Stem("sgambetto"), "sgambett");});
test("sgangheratamente -> sgangherat", function() {deepEqual( Stem("sgangheratamente"), "sgangherat");});
test("sgangherate -> sgangher", function() {deepEqual( Stem("sgangherate"), "sgangher");});
test("sgangherati -> sgangher", function() {deepEqual( Stem("sgangherati"), "sgangher");});
test("sgangherato -> sgangher", function() {deepEqual( Stem("sgangherato"), "sgangher");});
test("sgarbata -> sgarb", function() {deepEqual( Stem("sgarbata"), "sgarb");});
test("sgarbatamente -> sgarbat", function() {deepEqual( Stem("sgarbatamente"), "sgarbat");});
test("sgarbatezze -> sgarbatezz", function() {deepEqual( Stem("sgarbatezze"), "sgarbatezz");});
test("sgarbato -> sgarb", function() {deepEqual( Stem("sgarbato"), "sgarb");});
test("sgarbi -> sgarb", function() {deepEqual( Stem("sgarbi"), "sgarb");});
test("sgarbossa -> sgarboss", function() {deepEqual( Stem("sgarbossa"), "sgarboss");});
test("sgherri -> sgherr", function() {deepEqual( Stem("sgherri"), "sgherr");});
test("sgherro -> sgherr", function() {deepEqual( Stem("sgherro"), "sgherr");});
test("sghignazzando -> sghignazz", function() {deepEqual( Stem("sghignazzando"), "sghignazz");});
test("sghignazzava -> sghignazz", function() {deepEqual( Stem("sghignazzava"), "sghignazz");});
test("sgomberare -> sgomber", function() {deepEqual( Stem("sgomberare"), "sgomber");});
test("sgombero -> sgomber", function() {deepEqual( Stem("sgombero"), "sgomber");});
test("sgombra -> sgombr", function() {deepEqual( Stem("sgombra"), "sgombr");});
test("sgombrare -> sgombr", function() {deepEqual( Stem("sgombrare"), "sgombr");});
test("sgombrate -> sgombr", function() {deepEqual( Stem("sgombrate"), "sgombr");});
test("sgombro -> sgombr", function() {deepEqual( Stem("sgombro"), "sgombr");});
test("sgomentata -> sgoment", function() {deepEqual( Stem("sgomentata"), "sgoment");});
test("sgomentate -> sgoment", function() {deepEqual( Stem("sgomentate"), "sgoment");});
test("sgomentati -> sgoment", function() {deepEqual( Stem("sgomentati"), "sgoment");});
test("sgomenti -> sgoment", function() {deepEqual( Stem("sgomenti"), "sgoment");});
test("sgomento -> sgoment", function() {deepEqual( Stem("sgomento"), "sgoment");});
test("sgomitolandosi -> sgomitol", function() {deepEqual( Stem("sgomitolandosi"), "sgomitol");});
test("sgozzata -> sgozz", function() {deepEqual( Stem("sgozzata"), "sgozz");});
test("sgradevole -> sgradevol", function() {deepEqual( Stem("sgradevole"), "sgradevol");});
test("sgraffiatura -> sgraffiatur", function() {deepEqual( Stem("sgraffiatura"), "sgraffiatur");});
test("sgraffignato -> sgraffign", function() {deepEqual( Stem("sgraffignato"), "sgraffign");});
test("sgranchì -> sgranc", function() {deepEqual( Stem("sgranchì"), "sgranc");});
test("sgranchirsi -> sgranc", function() {deepEqual( Stem("sgranchirsi"), "sgranc");});
test("sgranocchiato -> sgranocc", function() {deepEqual( Stem("sgranocchiato"), "sgranocc");});
test("sgretolavano -> sgretol", function() {deepEqual( Stem("sgretolavano"), "sgretol");});
test("sgridata -> sgrid", function() {deepEqual( Stem("sgridata"), "sgrid");});
test("sgrò -> sgrò", function() {deepEqual( Stem("sgrò"), "sgrò");});
test("sgruppò -> sgrupp", function() {deepEqual( Stem("sgruppò"), "sgrupp");});
test("sguaiata -> sguai", function() {deepEqual( Stem("sguaiata"), "sguai");});
test("sguaiato -> sguai", function() {deepEqual( Stem("sguaiato"), "sguai");});
test("sgualcita -> sgualc", function() {deepEqual( Stem("sgualcita"), "sgualc");});
test("sguardi -> sguard", function() {deepEqual( Stem("sguardi"), "sguard");});
test("sguardo -> sguard", function() {deepEqual( Stem("sguardo"), "sguard");});
test("sguattero -> sguatter", function() {deepEqual( Stem("sguattero"), "sguatter");});
test("sguazzar -> sguazz", function() {deepEqual( Stem("sguazzar"), "sguazz");});
test("sguazzava -> sguazz", function() {deepEqual( Stem("sguazzava"), "sguazz");});
test("sguazzi -> sguazz", function() {deepEqual( Stem("sguazzi"), "sguazz");});
test("sguizza -> sguizz", function() {deepEqual( Stem("sguizza"), "sguizz");});
test("sgusciavano -> sgusc", function() {deepEqual( Stem("sgusciavano"), "sgusc");});
test("sh -> sh", function() {deepEqual( Stem("sh"), "sh");});
test("shaath -> shaath", function() {deepEqual( Stem("shaath"), "shaath");});
test("shadchin -> shadchin", function() {deepEqual( Stem("shadchin"), "shadchin");});
test("shafranik -> shafranik", function() {deepEqual( Stem("shafranik"), "shafranik");});
test("shah -> shah", function() {deepEqual( Stem("shah"), "shah");});
test("shahak -> shahak", function() {deepEqual( Stem("shahak"), "shahak");});
test("shali -> shal", function() {deepEqual( Stem("shali"), "shal");});
test("shalimar -> shalim", function() {deepEqual( Stem("shalimar"), "shalim");});
test("shankar -> shank", function() {deepEqual( Stem("shankar"), "shank");});
test("share -> shar", function() {deepEqual( Stem("share"), "shar");});
test("sharma -> sharm", function() {deepEqual( Stem("sharma"), "sharm");});
test("shatoievsk -> shatoievsk", function() {deepEqual( Stem("shatoievsk"), "shatoievsk");});
test("sheen -> sheen", function() {deepEqual( Stem("sheen"), "sheen");});
test("sheffield -> sheffield", function() {deepEqual( Stem("sheffield"), "sheffield");});
test("sheila -> sheil", function() {deepEqual( Stem("sheila"), "sheil");});
test("shelley -> shelley", function() {deepEqual( Stem("shelley"), "shelley");});
test("sheridan -> sheridan", function() {deepEqual( Stem("sheridan"), "sheridan");});
test("sherman -> sherman", function() {deepEqual( Stem("sherman"), "sherman");});
test("shield -> shield", function() {deepEqual( Stem("shield"), "shield");});
test("shiff -> shiff", function() {deepEqual( Stem("shiff"), "shiff");});
test("shimer -> shimer", function() {deepEqual( Stem("shimer"), "shimer");});
test("shimon -> shimon", function() {deepEqual( Stem("shimon"), "shimon");});
test("shinji -> shinj", function() {deepEqual( Stem("shinji"), "shinj");});
test("ship -> ship", function() {deepEqual( Stem("ship"), "ship");});
test("shipping -> shipping", function() {deepEqual( Stem("shipping"), "shipping");});
test("shirley -> shirley", function() {deepEqual( Stem("shirley"), "shirley");});
test("shiro -> shir", function() {deepEqual( Stem("shiro"), "shir");});
test("shiskin -> shiskin", function() {deepEqual( Stem("shiskin"), "shiskin");});
test("shore -> shor", function() {deepEqual( Stem("shore"), "shor");});
test("shos -> shos", function() {deepEqual( Stem("shos"), "shos");});
test("show -> show", function() {deepEqual( Stem("show"), "show");});
test("shqipetarè -> shqipetar", function() {deepEqual( Stem("shqipetarè"), "shqipetar");});
test("shropshire -> shropsh", function() {deepEqual( Stem("shropshire"), "shropsh");});
test("shuar -> shu", function() {deepEqual( Stem("shuar"), "shu");});
test("shurà -> shur", function() {deepEqual( Stem("shurà"), "shur");});
test("shuster -> shuster", function() {deepEqual( Stem("shuster"), "shuster");});
test("shygulla -> shygull", function() {deepEqual( Stem("shygulla"), "shygull");});
test("si -> si", function() {deepEqual( Stem("si"), "si");});
test("sì -> sì", function() {deepEqual( Stem("sì"), "sì");});
test("sia -> sia", function() {deepEqual( Stem("sia"), "sia");});
test("siaca -> siac", function() {deepEqual( Stem("siaca"), "siac");});
test("siam -> siam", function() {deepEqual( Stem("siam"), "siam");});
test("siamo -> siam", function() {deepEqual( Stem("siamo"), "siam");});
test("sian -> sian", function() {deepEqual( Stem("sian"), "sian");});
test("siano -> sian", function() {deepEqual( Stem("siano"), "sian");});
test("siate -> siat", function() {deepEqual( Stem("siate"), "siat");});
test("siatelo -> siatel", function() {deepEqual( Stem("siatelo"), "siatel");});
test("siberiano -> siber", function() {deepEqual( Stem("siberiano"), "siber");});
test("sic -> sic", function() {deepEqual( Stem("sic"), "sic");});
test("sicari -> sicar", function() {deepEqual( Stem("sicari"), "sicar");});
test("sicché -> sicc", function() {deepEqual( Stem("sicché"), "sicc");});
test("sicchè -> sicc", function() {deepEqual( Stem("sicchè"), "sicc");});
test("siccità -> siccit", function() {deepEqual( Stem("siccità"), "siccit");});
test("siccome -> siccom", function() {deepEqual( Stem("siccome"), "siccom");});
test("sichuan -> sichuan", function() {deepEqual( Stem("sichuan"), "sichuan");});
test("sicignano -> sicign", function() {deepEqual( Stem("sicignano"), "sicign");});
test("sicilcassa -> sicilcass", function() {deepEqual( Stem("sicilcassa"), "sicilcass");});
test("sicilia -> sicil", function() {deepEqual( Stem("sicilia"), "sicil");});
test("siciliana -> sicilian", function() {deepEqual( Stem("siciliana"), "sicilian");});
test("siciliane -> sicilian", function() {deepEqual( Stem("siciliane"), "sicilian");});
test("siciliani -> sicilian", function() {deepEqual( Stem("siciliani"), "sicilian");});
test("siciliano -> sicil", function() {deepEqual( Stem("siciliano"), "sicil");});
test("sicilie -> sicil", function() {deepEqual( Stem("sicilie"), "sicil");});
test("sicu -> sicu", function() {deepEqual( Stem("sicu"), "sicu");});
test("sicuerezza -> sicuerezz", function() {deepEqual( Stem("sicuerezza"), "sicuerezz");});
test("sicura -> sicur", function() {deepEqual( Stem("sicura"), "sicur");});
test("sicuramente -> sicur", function() {deepEqual( Stem("sicuramente"), "sicur");});
test("sicure -> sicur", function() {deepEqual( Stem("sicure"), "sicur");});
test("sicurezza -> sicurezz", function() {deepEqual( Stem("sicurezza"), "sicurezz");});
test("sicuri -> sicur", function() {deepEqual( Stem("sicuri"), "sicur");});
test("sicuro -> sicur", function() {deepEqual( Stem("sicuro"), "sicur");});
test("sicurtà -> sicurt", function() {deepEqual( Stem("sicurtà"), "sicurt");});
test("sicurvita -> sicurv", function() {deepEqual( Stem("sicurvita"), "sicurv");});
test("sicuti -> sic", function() {deepEqual( Stem("sicuti"), "sic");});
test("siderurgia -> siderurg", function() {deepEqual( Stem("siderurgia"), "siderurg");});
test("siderurgica -> siderurg", function() {deepEqual( Stem("siderurgica"), "siderurg");});
test("sidney -> sidney", function() {deepEqual( Stem("sidney"), "sidney");});
test("sidrome -> sidrom", function() {deepEqual( Stem("sidrome"), "sidrom");});
test("siede -> sied", function() {deepEqual( Stem("siede"), "sied");});
test("siele -> siel", function() {deepEqual( Stem("siele"), "siel");});
test("siena -> sien", function() {deepEqual( Stem("siena"), "sien");});
test("sieno -> sien", function() {deepEqual( Stem("sieno"), "sien");});
test("siepe -> siep", function() {deepEqual( Stem("siepe"), "siep");});
test("siepi -> siep", function() {deepEqual( Stem("siepi"), "siep");});
test("sierra -> sierr", function() {deepEqual( Stem("sierra"), "sierr");});
test("siés -> siès", function() {deepEqual( Stem("siés"), "siès");});
test("siete -> siet", function() {deepEqual( Stem("siete"), "siet");});
test("siffatta -> siffatt", function() {deepEqual( Stem("siffatta"), "siffatt");});
test("sifir -> sif", function() {deepEqual( Stem("sifir"), "sif");});
test("sig -> sig", function() {deepEqual( Stem("sig"), "sig");});
test("sigarette -> sigarett", function() {deepEqual( Stem("sigarette"), "sigarett");});
test("sigillati -> sigill", function() {deepEqual( Stem("sigillati"), "sigill");});
test("sigillava -> sigill", function() {deepEqual( Stem("sigillava"), "sigill");});
test("sigilli -> sigill", function() {deepEqual( Stem("sigilli"), "sigill");});
test("siglando -> sigl", function() {deepEqual( Stem("siglando"), "sigl");});
test("siglata -> sigl", function() {deepEqual( Stem("siglata"), "sigl");});
test("siglati -> sigl", function() {deepEqual( Stem("siglati"), "sigl");});
test("siglato -> sigl", function() {deepEqual( Stem("siglato"), "sigl");});
test("significa -> signif", function() {deepEqual( Stem("significa"), "signif");});
test("significando -> signific", function() {deepEqual( Stem("significando"), "signific");});
test("significano -> signific", function() {deepEqual( Stem("significano"), "signific");});
test("significante -> signific", function() {deepEqual( Stem("significante"), "signific");});
test("significar -> signific", function() {deepEqual( Stem("significar"), "signific");});
test("significare -> signific", function() {deepEqual( Stem("significare"), "signific");});
test("significasse -> signific", function() {deepEqual( Stem("significasse"), "signific");});
test("significassero -> signific", function() {deepEqual( Stem("significassero"), "signific");});
test("significativa -> signif", function() {deepEqual( Stem("significativa"), "signif");});
test("significativamente -> signific", function() {deepEqual( Stem("significativamente"), "signific");});
test("significativi -> signif", function() {deepEqual( Stem("significativi"), "signif");});
test("significativo -> signif", function() {deepEqual( Stem("significativo"), "signif");});
test("significato -> signific", function() {deepEqual( Stem("significato"), "signific");});
test("significava -> signific", function() {deepEqual( Stem("significava"), "signific");});
test("significavano -> signific", function() {deepEqual( Stem("significavano"), "signific");});
test("significazione -> signif", function() {deepEqual( Stem("significazione"), "signif");});
test("significhi -> signif", function() {deepEqual( Stem("significhi"), "signif");});
test("signor -> signor", function() {deepEqual( Stem("signor"), "signor");});
test("signora -> signor", function() {deepEqual( Stem("signora"), "signor");});
test("signore -> signor", function() {deepEqual( Stem("signore"), "signor");});
test("signorelli -> signorell", function() {deepEqual( Stem("signorelli"), "signorell");});
test("signorello -> signorell", function() {deepEqual( Stem("signorello"), "signorell");});
test("signori -> signor", function() {deepEqual( Stem("signori"), "signor");});
test("signoria -> signor", function() {deepEqual( Stem("signoria"), "signor");});
test("signorile -> signoril", function() {deepEqual( Stem("signorile"), "signoril");});
test("signorili -> signoril", function() {deepEqual( Stem("signorili"), "signoril");});
test("signorina -> signorin", function() {deepEqual( Stem("signorina"), "signorin");});
test("signorini -> signorin", function() {deepEqual( Stem("signorini"), "signorin");});
test("signorino -> signorin", function() {deepEqual( Stem("signorino"), "signorin");});
test("signorona -> signoron", function() {deepEqual( Stem("signorona"), "signoron");});
test("signoroni -> signoron", function() {deepEqual( Stem("signoroni"), "signoron");});
test("sigonella -> sigonell", function() {deepEqual( Stem("sigonella"), "sigonell");});
test("sigrid -> sigrid", function() {deepEqual( Stem("sigrid"), "sigrid");});
test("sii -> sii", function() {deepEqual( Stem("sii"), "sii");});
test("sij -> sij", function() {deepEqual( Stem("sij"), "sij");});
test("sijno -> sijn", function() {deepEqual( Stem("sijno"), "sijn");});
test("sil -> sil", function() {deepEqual( Stem("sil"), "sil");});
test("silajdzic -> silajdzic", function() {deepEqual( Stem("silajdzic"), "silajdzic");});
test("silajzdic -> silajzdic", function() {deepEqual( Stem("silajzdic"), "silajzdic");});
test("silenzi -> silenz", function() {deepEqual( Stem("silenzi"), "silenz");});
test("silenzio -> silenz", function() {deepEqual( Stem("silenzio"), "silenz");});
test("silenziosa -> silenz", function() {deepEqual( Stem("silenziosa"), "silenz");});
test("silenziosi -> silenz", function() {deepEqual( Stem("silenziosi"), "silenz");});
test("silenzioso -> silenz", function() {deepEqual( Stem("silenzioso"), "silenz");});
test("siljdzic -> siljdzic", function() {deepEqual( Stem("siljdzic"), "siljdzic");});
test("sillaba -> sillab", function() {deepEqual( Stem("sillaba"), "sillab");});
test("sillabe -> sillab", function() {deepEqual( Stem("sillabe"), "sillab");});
test("sillogismo -> sillog", function() {deepEqual( Stem("sillogismo"), "sillog");});
test("sils -> sils", function() {deepEqual( Stem("sils"), "sils");});
test("silvan -> silvan", function() {deepEqual( Stem("silvan"), "silvan");});
test("silvano -> silv", function() {deepEqual( Stem("silvano"), "silv");});
test("silvestro -> silvestr", function() {deepEqual( Stem("silvestro"), "silvestr");});
test("silvetri -> silvetr", function() {deepEqual( Stem("silvetri"), "silvetr");});
test("silvi -> silv", function() {deepEqual( Stem("silvi"), "silv");});
test("silvia -> silv", function() {deepEqual( Stem("silvia"), "silv");});
test("silvio -> silv", function() {deepEqual( Stem("silvio"), "silv");});
test("simbionte -> simbiont", function() {deepEqual( Stem("simbionte"), "simbiont");});
test("simboli -> simbol", function() {deepEqual( Stem("simboli"), "simbol");});
test("simbolica -> simbol", function() {deepEqual( Stem("simbolica"), "simbol");});
test("simbolicamente -> simbol", function() {deepEqual( Stem("simbolicamente"), "simbol");});
test("simbolici -> simbol", function() {deepEqual( Stem("simbolici"), "simbol");});
test("simbolo -> simbol", function() {deepEqual( Stem("simbolo"), "simbol");});
test("simi -> sim", function() {deepEqual( Stem("simi"), "sim");});
test("simil -> simil", function() {deepEqual( Stem("simil"), "simil");});
test("simile -> simil", function() {deepEqual( Stem("simile"), "simil");});
test("simili -> simil", function() {deepEqual( Stem("simili"), "simil");});
test("similitudine -> similitudin", function() {deepEqual( Stem("similitudine"), "similitudin");});
test("similitudini -> similitudin", function() {deepEqual( Stem("similitudini"), "similitudin");});
test("similmente -> simil", function() {deepEqual( Stem("similmente"), "simil");});
test("simint -> simint", function() {deepEqual( Stem("simint"), "simint");});
test("simmetria -> simmetr", function() {deepEqual( Stem("simmetria"), "simmetr");});
test("simmetrica -> simmetr", function() {deepEqual( Stem("simmetrica"), "simmetr");});
test("simod -> simod", function() {deepEqual( Stem("simod"), "simod");});
test("simon -> simon", function() {deepEqual( Stem("simon"), "simon");});
test("simona -> simon", function() {deepEqual( Stem("simona"), "simon");});
test("simone -> simon", function() {deepEqual( Stem("simone"), "simon");});
test("simonetta -> simonett", function() {deepEqual( Stem("simonetta"), "simonett");});
test("simoni -> simon", function() {deepEqual( Stem("simoni"), "simon");});
test("simpatia -> simpat", function() {deepEqual( Stem("simpatia"), "simpat");});
test("simpatie -> simpat", function() {deepEqual( Stem("simpatie"), "simpat");});
test("simpson -> simpson", function() {deepEqual( Stem("simpson"), "simpson");});
test("simulando -> simul", function() {deepEqual( Stem("simulando"), "simul");});
test("simulazione -> simul", function() {deepEqual( Stem("simulazione"), "simul");});
test("simutenkov -> simutenkov", function() {deepEqual( Stem("simutenkov"), "simutenkov");});
test("sin -> sin", function() {deepEqual( Stem("sin"), "sin");});
test("sinatur -> sinatur", function() {deepEqual( Stem("sinatur"), "sinatur");});
test("sincera -> sincer", function() {deepEqual( Stem("sincera"), "sincer");});
test("sinceramente -> sincer", function() {deepEqual( Stem("sinceramente"), "sincer");});
test("sincerarmi -> sincer", function() {deepEqual( Stem("sincerarmi"), "sincer");});
test("sincerarsi -> sincer", function() {deepEqual( Stem("sincerarsi"), "sincer");});
test("sincerato -> sincer", function() {deepEqual( Stem("sincerato"), "sincer");});
test("sincerità -> sincer", function() {deepEqual( Stem("sincerità"), "sincer");});
test("sincero -> sincer", function() {deepEqual( Stem("sincero"), "sincer");});
test("sindacale -> sindacal", function() {deepEqual( Stem("sindacale"), "sindacal");});
test("sindacali -> sindacal", function() {deepEqual( Stem("sindacali"), "sindacal");});
test("sindacalista -> sindacal", function() {deepEqual( Stem("sindacalista"), "sindacal");});
test("sindacalisti -> sindacal", function() {deepEqual( Stem("sindacalisti"), "sindacal");});
test("sindacati -> sindac", function() {deepEqual( Stem("sindacati"), "sindac");});
test("sindacato -> sindac", function() {deepEqual( Stem("sindacato"), "sindac");});
test("sindaci -> sindac", function() {deepEqual( Stem("sindaci"), "sindac");});
test("sindaco -> sindac", function() {deepEqual( Stem("sindaco"), "sindac");});
test("sindrome -> sindrom", function() {deepEqual( Stem("sindrome"), "sindrom");});
test("sinergie -> sinerg", function() {deepEqual( Stem("sinergie"), "sinerg");});
test("singapore -> singapor", function() {deepEqual( Stem("singapore"), "singapor");});
test("singh -> sing", function() {deepEqual( Stem("singh"), "sing");});
test("singhiozzando -> singhiozz", function() {deepEqual( Stem("singhiozzando"), "singhiozz");});
test("singhiozzare -> singhiozz", function() {deepEqual( Stem("singhiozzare"), "singhiozz");});
test("singhiozzi -> singhiozz", function() {deepEqual( Stem("singhiozzi"), "singhiozz");});
test("singhiozzìo -> singhiozzì", function() {deepEqual( Stem("singhiozzìo"), "singhiozzì");});
test("single -> singl", function() {deepEqual( Stem("single"), "singl");});
test("singola -> singol", function() {deepEqual( Stem("singola"), "singol");});
test("singolar -> singol", function() {deepEqual( Stem("singolar"), "singol");});
test("singolare -> singol", function() {deepEqual( Stem("singolare"), "singol");});
test("singolari -> singolar", function() {deepEqual( Stem("singolari"), "singolar");});
test("singolarità -> singolar", function() {deepEqual( Stem("singolarità"), "singolar");});
test("singolarmente -> singolar", function() {deepEqual( Stem("singolarmente"), "singolar");});
test("singole -> singol", function() {deepEqual( Stem("singole"), "singol");});
test("singoli -> singol", function() {deepEqual( Stem("singoli"), "singol");});
test("singolo -> singol", function() {deepEqual( Stem("singolo"), "singol");});
test("singrai -> singra", function() {deepEqual( Stem("singrai"), "singra");});
test("sinigaglia -> sinigagl", function() {deepEqual( Stem("sinigaglia"), "sinigagl");});
test("sinistra -> sinistr", function() {deepEqual( Stem("sinistra"), "sinistr");});
test("sinistrà -> sinistr", function() {deepEqual( Stem("sinistrà"), "sinistr");});
test("sinistre -> sinistr", function() {deepEqual( Stem("sinistre"), "sinistr");});
test("sinistri -> sinistr", function() {deepEqual( Stem("sinistri"), "sinistr");});
test("sinistro -> sinistr", function() {deepEqual( Stem("sinistro"), "sinistr");});
test("sinistrosità -> sinistros", function() {deepEqual( Stem("sinistrosità"), "sinistros");});
test("siniustra -> siniustr", function() {deepEqual( Stem("siniustra"), "siniustr");});
test("sino -> sin", function() {deepEqual( Stem("sino"), "sin");});
test("sinodale -> sinodal", function() {deepEqual( Stem("sinodale"), "sinodal");});
test("sinonimo -> sinonim", function() {deepEqual( Stem("sinonimo"), "sinonim");});
test("sinora -> sinor", function() {deepEqual( Stem("sinora"), "sinor");});
test("sinotrans -> sinotrans", function() {deepEqual( Stem("sinotrans"), "sinotrans");});
test("sint -> sint", function() {deepEqual( Stem("sint"), "sint");});
test("sintesi -> sintes", function() {deepEqual( Stem("sintesi"), "sintes");});
test("sintetizza -> sintetizz", function() {deepEqual( Stem("sintetizza"), "sintetizz");});
test("sintetizzati -> sintetizz", function() {deepEqual( Stem("sintetizzati"), "sintetizz");});
test("sintetizzato -> sintetizz", function() {deepEqual( Stem("sintetizzato"), "sintetizz");});
test("sintomi -> sintom", function() {deepEqual( Stem("sintomi"), "sintom");});
test("sintomo -> sintom", function() {deepEqual( Stem("sintomo"), "sintom");});
test("sintonia -> sinton", function() {deepEqual( Stem("sintonia"), "sinton");});
test("sipario -> sipar", function() {deepEqual( Stem("sipario"), "sipar");});
test("sir -> sir", function() {deepEqual( Stem("sir"), "sir");});
test("sirac -> sirac", function() {deepEqual( Stem("sirac"), "sirac");});
test("siracus -> siracus", function() {deepEqual( Stem("siracus"), "siracus");});
test("siracusa -> siracus", function() {deepEqual( Stem("siracusa"), "siracus");});
test("sirene -> siren", function() {deepEqual( Stem("sirene"), "siren");});
test("siria -> sir", function() {deepEqual( Stem("siria"), "sir");});
test("siro -> sir", function() {deepEqual( Stem("siro"), "sir");});
test("sirone -> siron", function() {deepEqual( Stem("sirone"), "siron");});
test("sirti -> sirt", function() {deepEqual( Stem("sirti"), "sirt");});
test("sis -> sis", function() {deepEqual( Stem("sis"), "sis");});
test("sisa -> sis", function() {deepEqual( Stem("sisa"), "sis");});
test("sisde -> sisd", function() {deepEqual( Stem("sisde"), "sisd");});
test("sisley -> sisley", function() {deepEqual( Stem("sisley"), "sisley");});
test("sisma -> sism", function() {deepEqual( Stem("sisma"), "sism");});
test("sismica -> sismic", function() {deepEqual( Stem("sismica"), "sismic");});
test("sismici -> sismic", function() {deepEqual( Stem("sismici"), "sismic");});
test("sismologica -> sismolog", function() {deepEqual( Stem("sismologica"), "sismolog");});
test("sisport -> sisport", function() {deepEqual( Stem("sisport"), "sisport");});
test("sistema -> sistem", function() {deepEqual( Stem("sistema"), "sistem");});
test("sistemà -> sistem", function() {deepEqual( Stem("sistemà"), "sistem");});
test("sistemarle -> sistem", function() {deepEqual( Stem("sistemarle"), "sistem");});
test("sistemati -> sistem", function() {deepEqual( Stem("sistemati"), "sistem");});
test("sistemazione -> sistem", function() {deepEqual( Stem("sistemazione"), "sistem");});
test("sistemi -> sistem", function() {deepEqual( Stem("sistemi"), "sistem");});
test("sistina -> sistin", function() {deepEqual( Stem("sistina"), "sistin");});
test("sistma -> sistm", function() {deepEqual( Stem("sistma"), "sistm");});
test("sisto -> sist", function() {deepEqual( Stem("sisto"), "sist");});
test("sitemi -> sitem", function() {deepEqual( Stem("sitemi"), "sitem");});
test("siti -> sit", function() {deepEqual( Stem("siti"), "sit");});
test("sito -> sit", function() {deepEqual( Stem("sito"), "sit");});
test("sitto -> sitt", function() {deepEqual( Stem("sitto"), "sitt");});
test("situa -> situ", function() {deepEqual( Stem("situa"), "situ");});
test("situarsi -> situ", function() {deepEqual( Stem("situarsi"), "situ");});
test("situata -> situ", function() {deepEqual( Stem("situata"), "situ");});
test("situation -> situation", function() {deepEqual( Stem("situation"), "situation");});
test("situato -> situ", function() {deepEqual( Stem("situato"), "situ");});
test("situazione -> situazion", function() {deepEqual( Stem("situazione"), "situazion");});
test("situazionè -> situazion", function() {deepEqual( Stem("situazionè"), "situazion");});
test("situazioni -> situazion", function() {deepEqual( Stem("situazioni"), "situazion");});
test("situerebbe -> situ", function() {deepEqual( Stem("situerebbe"), "situ");});
test("siulp -> siulp", function() {deepEqual( Stem("siulp"), "siulp");});
test("siviglia -> sivigl", function() {deepEqual( Stem("siviglia"), "sivigl");});
test("sixto -> sixt", function() {deepEqual( Stem("sixto"), "sixt");});
test("ski -> ski", function() {deepEqual( Stem("ski"), "ski");});
test("skin -> skin", function() {deepEqual( Stem("skin"), "skin");});
test("skinhead -> skinhead", function() {deepEqual( Stem("skinhead"), "skinhead");});
test("skofic -> skofic", function() {deepEqual( Stem("skofic"), "skofic");});
test("skuhravy -> skuhravy", function() {deepEqual( Stem("skuhravy"), "skuhravy");});
test("sl -> sl", function() {deepEqual( Stem("sl"), "sl");});
test("sla -> sla", function() {deepEqual( Stem("sla"), "sla");});
test("slalom -> slalom", function() {deepEqual( Stem("slalom"), "slalom");});
test("slam -> slam", function() {deepEqual( Stem("slam"), "slam");});
test("slancia -> slanc", function() {deepEqual( Stem("slancia"), "slanc");});
test("slanciano -> slanc", function() {deepEqual( Stem("slanciano"), "slanc");});
test("slanciarono -> slanc", function() {deepEqual( Stem("slanciarono"), "slanc");});
test("slanciarsi -> slanc", function() {deepEqual( Stem("slanciarsi"), "slanc");});
test("slancio -> slanc", function() {deepEqual( Stem("slancio"), "slanc");});
test("slanciò -> slanc", function() {deepEqual( Stem("slanciò"), "slanc");});
test("sledog -> sledog", function() {deepEqual( Stem("sledog"), "sledog");});
test("slegati -> sleg", function() {deepEqual( Stem("slegati"), "sleg");});
test("slegò -> sleg", function() {deepEqual( Stem("slegò"), "sleg");});
test("slip -> slip", function() {deepEqual( Stem("slip"), "slip");});
test("slittare -> slitt", function() {deepEqual( Stem("slittare"), "slitt");});
test("slitterebbe -> slitt", function() {deepEqual( Stem("slitterebbe"), "slitt");});
test("slogan -> slogan", function() {deepEqual( Stem("slogan"), "slogan");});
test("slovacchia -> slovacc", function() {deepEqual( Stem("slovacchia"), "slovacc");});
test("slovenia -> sloven", function() {deepEqual( Stem("slovenia"), "sloven");});
test("sloveno -> sloven", function() {deepEqual( Stem("sloveno"), "sloven");});
test("sly -> sly", function() {deepEqual( Stem("sly"), "sly");});
test("smalia -> smal", function() {deepEqual( Stem("smalia"), "smal");});
test("smallville -> smallvill", function() {deepEqual( Stem("smallville"), "smallvill");});
test("smaltir -> smalt", function() {deepEqual( Stem("smaltir"), "smalt");});
test("smaltire -> smalt", function() {deepEqual( Stem("smaltire"), "smalt");});
test("smaltita -> smalt", function() {deepEqual( Stem("smaltita"), "smalt");});
test("smanacciando -> smanacc", function() {deepEqual( Stem("smanacciando"), "smanacc");});
test("smanacciata -> smanacc", function() {deepEqual( Stem("smanacciata"), "smanacc");});
test("smania -> sman", function() {deepEqual( Stem("smania"), "sman");});
test("smanie -> sman", function() {deepEqual( Stem("smanie"), "sman");});
test("smaniosi -> smanios", function() {deepEqual( Stem("smaniosi"), "smanios");});
test("smanioso -> smanios", function() {deepEqual( Stem("smanioso"), "smanios");});
test("smantellamento -> smantell", function() {deepEqual( Stem("smantellamento"), "smantell");});
test("smantellare -> smantell", function() {deepEqual( Stem("smantellare"), "smantell");});
test("smantellato -> smantell", function() {deepEqual( Stem("smantellato"), "smantell");});
test("smarcato -> smarc", function() {deepEqual( Stem("smarcato"), "smarc");});
test("smarrimenti -> smarr", function() {deepEqual( Stem("smarrimenti"), "smarr");});
test("smarrimento -> smarr", function() {deepEqual( Stem("smarrimento"), "smarr");});
test("smarrire -> smarr", function() {deepEqual( Stem("smarrire"), "smarr");});
test("smarrita -> smarr", function() {deepEqual( Stem("smarrita"), "smarr");});
test("smarriti -> smarr", function() {deepEqual( Stem("smarriti"), "smarr");});
test("smarrito -> smarr", function() {deepEqual( Stem("smarrito"), "smarr");});
test("smarriva -> smarr", function() {deepEqual( Stem("smarriva"), "smarr");});
test("sme -> sme", function() {deepEqual( Stem("sme"), "sme");});
test("smembramento -> smembr", function() {deepEqual( Stem("smembramento"), "smembr");});
test("smembrare -> smembr", function() {deepEqual( Stem("smembrare"), "smembr");});
test("smembrato -> smembr", function() {deepEqual( Stem("smembrato"), "smembr");});
test("smentendo -> sment", function() {deepEqual( Stem("smentendo"), "sment");});
test("smentire -> sment", function() {deepEqual( Stem("smentire"), "sment");});
test("smentisce -> sment", function() {deepEqual( Stem("smentisce"), "sment");});
test("smentiscono -> sment", function() {deepEqual( Stem("smentiscono"), "sment");});
test("smentita -> sment", function() {deepEqual( Stem("smentita"), "sment");});
test("smentito -> sment", function() {deepEqual( Stem("smentito"), "sment");});
test("smentiva -> sment", function() {deepEqual( Stem("smentiva"), "sment");});
test("smeralda -> smerald", function() {deepEqual( Stem("smeralda"), "smerald");});
test("smesse -> smess", function() {deepEqual( Stem("smesse"), "smess");});
test("smette -> smett", function() {deepEqual( Stem("smette"), "smett");});
test("smetter -> smetter", function() {deepEqual( Stem("smetter"), "smetter");});
test("smettere -> smett", function() {deepEqual( Stem("smettere"), "smett");});
test("smettessero -> smett", function() {deepEqual( Stem("smettessero"), "smett");});
test("smettete -> smett", function() {deepEqual( Stem("smettete"), "smett");});
test("smetton -> smetton", function() {deepEqual( Stem("smetton"), "smetton");});
test("smi -> smi", function() {deepEqual( Stem("smi"), "smi");});
test("smile -> smil", function() {deepEqual( Stem("smile"), "smil");});
test("smistamento -> smist", function() {deepEqual( Stem("smistamento"), "smist");});
test("smisurato -> smisur", function() {deepEqual( Stem("smisurato"), "smisur");});
test("smith -> smith", function() {deepEqual( Stem("smith"), "smith");});
test("smits -> smits", function() {deepEqual( Stem("smits"), "smits");});
test("smm -> smm", function() {deepEqual( Stem("smm"), "smm");});
test("smonta -> smont", function() {deepEqual( Stem("smonta"), "smont");});
test("smontando -> smont", function() {deepEqual( Stem("smontando"), "smont");});
test("smontarlo -> smont", function() {deepEqual( Stem("smontarlo"), "smont");});
test("smontarono -> smont", function() {deepEqual( Stem("smontarono"), "smont");});
test("smontata -> smont", function() {deepEqual( Stem("smontata"), "smont");});
test("smontati -> smont", function() {deepEqual( Stem("smontati"), "smont");});
test("smontato -> smont", function() {deepEqual( Stem("smontato"), "smont");});
test("smonterebbe -> smont", function() {deepEqual( Stem("smonterebbe"), "smont");});
test("smontò -> smont", function() {deepEqual( Stem("smontò"), "smont");});
test("smorbare -> smorb", function() {deepEqual( Stem("smorbare"), "smorb");});
test("smorto -> smort", function() {deepEqual( Stem("smorto"), "smort");});
test("smorza -> smorz", function() {deepEqual( Stem("smorza"), "smorz");});
test("smorzare -> smorz", function() {deepEqual( Stem("smorzare"), "smorz");});
test("smossa -> smoss", function() {deepEqual( Stem("smossa"), "smoss");});
test("smosso -> smoss", function() {deepEqual( Stem("smosso"), "smoss");});
test("smovere -> smov", function() {deepEqual( Stem("smovere"), "smov");});
test("smoverlo -> smov", function() {deepEqual( Stem("smoverlo"), "smov");});
test("smozzicata -> smozzic", function() {deepEqual( Stem("smozzicata"), "smozzic");});
test("smozzicate -> smozzic", function() {deepEqual( Stem("smozzicate"), "smozzic");});
test("smozzicato -> smozzic", function() {deepEqual( Stem("smozzicato"), "smozzic");});
test("smunta -> smunt", function() {deepEqual( Stem("smunta"), "smunt");});
test("smunti -> smunt", function() {deepEqual( Stem("smunti"), "smunt");});
test("smunto -> smunt", function() {deepEqual( Stem("smunto"), "smunt");});
test("smurare -> smur", function() {deepEqual( Stem("smurare"), "smur");});
test("smuravano -> smur", function() {deepEqual( Stem("smuravano"), "smur");});
test("snam -> snam", function() {deepEqual( Stem("snam"), "snam");});
test("snaturare -> snatur", function() {deepEqual( Stem("snaturare"), "snatur");});
test("sneh -> sneh", function() {deepEqual( Stem("sneh"), "sneh");});
test("snelle -> snell", function() {deepEqual( Stem("snelle"), "snell");});
test("snellisca -> snell", function() {deepEqual( Stem("snellisca"), "snell");});
test("snia -> sni", function() {deepEqual( Stem("snia"), "sni");});
test("snidata -> snid", function() {deepEqual( Stem("snidata"), "snid");});
test("snob -> snob", function() {deepEqual( Stem("snob"), "snob");});
test("so -> so", function() {deepEqual( Stem("so"), "so");});
test("soastenuto -> soasten", function() {deepEqual( Stem("soastenuto"), "soasten");});
test("soave -> soav", function() {deepEqual( Stem("soave"), "soav");});
test("soavemente -> soavement", function() {deepEqual( Stem("soavemente"), "soavement");});
test("soavi -> soav", function() {deepEqual( Stem("soavi"), "soav");});
test("soavissimo -> soavissim", function() {deepEqual( Stem("soavissimo"), "soavissim");});
test("soavità -> soavit", function() {deepEqual( Stem("soavità"), "soavit");});
test("sobborgo -> sobborg", function() {deepEqual( Stem("sobborgo"), "sobborg");});
test("soc -> soc", function() {deepEqual( Stem("soc"), "soc");});
test("socchiude -> socchiud", function() {deepEqual( Stem("socchiude"), "socchiud");});
test("socchiusa -> socchius", function() {deepEqual( Stem("socchiusa"), "socchius");});
test("socchiuso -> socchius", function() {deepEqual( Stem("socchiuso"), "socchius");});
test("soccombente -> soccombent", function() {deepEqual( Stem("soccombente"), "soccombent");});
test("soccombere -> soccomb", function() {deepEqual( Stem("soccombere"), "soccomb");});
test("soccorrer -> soccorrer", function() {deepEqual( Stem("soccorrer"), "soccorrer");});
test("soccorrere -> soccorr", function() {deepEqual( Stem("soccorrere"), "soccorr");});
test("soccorrerlo -> soccorr", function() {deepEqual( Stem("soccorrerlo"), "soccorr");});
test("soccorrersi -> soccorr", function() {deepEqual( Stem("soccorrersi"), "soccorr");});
test("soccorresse -> soccorress", function() {deepEqual( Stem("soccorresse"), "soccorress");});
test("soccorretemi -> soccorretem", function() {deepEqual( Stem("soccorretemi"), "soccorretem");});
test("soccorreva -> soccorr", function() {deepEqual( Stem("soccorreva"), "soccorr");});
test("soccorrevoli -> soccorrevol", function() {deepEqual( Stem("soccorrevoli"), "soccorrevol");});
test("soccorritori -> soccorritor", function() {deepEqual( Stem("soccorritori"), "soccorritor");});
test("soccorsa -> soccors", function() {deepEqual( Stem("soccorsa"), "soccors");});
test("soccorsi -> soccors", function() {deepEqual( Stem("soccorsi"), "soccors");});
test("soccorso -> soccors", function() {deepEqual( Stem("soccorso"), "soccors");});
test("sochaux -> sochaux", function() {deepEqual( Stem("sochaux"), "sochaux");});
test("soci -> soc", function() {deepEqual( Stem("soci"), "soc");});
test("socialdemocratici -> socialdemocrat", function() {deepEqual( Stem("socialdemocratici"), "socialdemocrat");});
test("sociale -> social", function() {deepEqual( Stem("sociale"), "social");});
test("sociali -> social", function() {deepEqual( Stem("sociali"), "social");});
test("socialismo -> social", function() {deepEqual( Stem("socialismo"), "social");});
test("socialista -> social", function() {deepEqual( Stem("socialista"), "social");});
test("socialistà -> social", function() {deepEqual( Stem("socialistà"), "social");});
test("socialisti -> social", function() {deepEqual( Stem("socialisti"), "social");});
test("socialità -> social", function() {deepEqual( Stem("socialità"), "social");});
test("socializzazione -> socializz", function() {deepEqual( Stem("socializzazione"), "socializz");});
test("socialmente -> social", function() {deepEqual( Stem("socialmente"), "social");});
test("societa -> societ", function() {deepEqual( Stem("societa"), "societ");});
test("società -> societ", function() {deepEqual( Stem("società"), "societ");});
test("societario -> societar", function() {deepEqual( Stem("societario"), "societar");});
test("society -> society", function() {deepEqual( Stem("society"), "society");});
test("socievole -> socievol", function() {deepEqual( Stem("socievole"), "socievol");});
test("socio -> soc", function() {deepEqual( Stem("socio"), "soc");});
test("socioeconomiche -> socioeconom", function() {deepEqual( Stem("socioeconomiche"), "socioeconom");});
test("sociologo -> sociolog", function() {deepEqual( Stem("sociologo"), "sociolog");});
test("soda -> sod", function() {deepEqual( Stem("soda"), "sod");});
test("sodaglia -> sodagl", function() {deepEqual( Stem("sodaglia"), "sodagl");});
test("sodalizio -> sodaliz", function() {deepEqual( Stem("sodalizio"), "sodaliz");});
test("sodano -> sod", function() {deepEqual( Stem("sodano"), "sod");});
test("soddisfacente -> soddisfacent", function() {deepEqual( Stem("soddisfacente"), "soddisfacent");});
test("soddisfare -> soddisf", function() {deepEqual( Stem("soddisfare"), "soddisf");});
test("soddisfarla -> soddisf", function() {deepEqual( Stem("soddisfarla"), "soddisf");});
test("soddisfarli -> soddisf", function() {deepEqual( Stem("soddisfarli"), "soddisf");});
test("soddisfarlo -> soddisf", function() {deepEqual( Stem("soddisfarlo"), "soddisf");});
test("soddisfatta -> soddisfatt", function() {deepEqual( Stem("soddisfatta"), "soddisfatt");});
test("soddisfatti -> soddisfatt", function() {deepEqual( Stem("soddisfatti"), "soddisfatt");});
test("soddisfattissimo -> soddisfattissim", function() {deepEqual( Stem("soddisfattissimo"), "soddisfattissim");});
test("soddisfatto -> soddisfatt", function() {deepEqual( Stem("soddisfatto"), "soddisfatt");});
test("soddisfazione -> soddisf", function() {deepEqual( Stem("soddisfazione"), "soddisf");});
test("soddisfazioni -> soddisf", function() {deepEqual( Stem("soddisfazioni"), "soddisf");});
test("soddisfece -> soddisfec", function() {deepEqual( Stem("soddisfece"), "soddisfec");});
test("soddisfi -> soddisf", function() {deepEqual( Stem("soddisfi"), "soddisf");});
test("sodetta -> sodett", function() {deepEqual( Stem("sodetta"), "sodett");});
test("sodo -> sod", function() {deepEqual( Stem("sodo"), "sod");});
test("sofferente -> sofferent", function() {deepEqual( Stem("sofferente"), "sofferent");});
test("sofferenza -> sofferent", function() {deepEqual( Stem("sofferenza"), "sofferent");});
test("sofferenze -> sofferent", function() {deepEqual( Stem("sofferenze"), "sofferent");});
test("sofferma -> sofferm", function() {deepEqual( Stem("sofferma"), "sofferm");});
test("soffermandosi -> sofferm", function() {deepEqual( Stem("soffermandosi"), "sofferm");});
test("soffermasse -> sofferm", function() {deepEqual( Stem("soffermasse"), "sofferm");});
test("soffermata -> sofferm", function() {deepEqual( Stem("soffermata"), "sofferm");});
test("soffermato -> sofferm", function() {deepEqual( Stem("soffermato"), "sofferm");});
test("soffermava -> sofferm", function() {deepEqual( Stem("soffermava"), "sofferm");});
test("sofferta -> soffert", function() {deepEqual( Stem("sofferta"), "soffert");});
test("sofferte -> soffert", function() {deepEqual( Stem("sofferte"), "soffert");});
test("sofferti -> soff", function() {deepEqual( Stem("sofferti"), "soff");});
test("sofferto -> soffert", function() {deepEqual( Stem("sofferto"), "soffert");});
test("soffi -> soff", function() {deepEqual( Stem("soffi"), "soff");});
test("soffian -> soffian", function() {deepEqual( Stem("soffian"), "soffian");});
test("soffiando -> soff", function() {deepEqual( Stem("soffiando"), "soff");});
test("soffiare -> soff", function() {deepEqual( Stem("soffiare"), "soff");});
test("soffici -> soffic", function() {deepEqual( Stem("soffici"), "soffic");});
test("soffio -> soff", function() {deepEqual( Stem("soffio"), "soff");});
test("soffiò -> soff", function() {deepEqual( Stem("soffiò"), "soff");});
test("soffitta -> soffitt", function() {deepEqual( Stem("soffitta"), "soffitt");});
test("soffocare -> soffoc", function() {deepEqual( Stem("soffocare"), "soffoc");});
test("soffogargli -> soffog", function() {deepEqual( Stem("soffogargli"), "soffog");});
test("soffogarglielo -> soffog", function() {deepEqual( Stem("soffogarglielo"), "soffog");});
test("soffogarla -> soffog", function() {deepEqual( Stem("soffogarla"), "soffog");});
test("soffogarlo -> soffog", function() {deepEqual( Stem("soffogarlo"), "soffog");});
test("soffogata -> soffog", function() {deepEqual( Stem("soffogata"), "soffog");});
test("soffogati -> soffog", function() {deepEqual( Stem("soffogati"), "soffog");});
test("soffogato -> soffog", function() {deepEqual( Stem("soffogato"), "soffog");});
test("soffogava -> soffog", function() {deepEqual( Stem("soffogava"), "soffog");});
test("soffogavano -> soffog", function() {deepEqual( Stem("soffogavano"), "soffog");});
test("soffre -> soffr", function() {deepEqual( Stem("soffre"), "soffr");});
test("soffrir -> soffr", function() {deepEqual( Stem("soffrir"), "soffr");});
test("soffrire -> soffr", function() {deepEqual( Stem("soffrire"), "soffr");});
test("soffriva -> soffr", function() {deepEqual( Stem("soffriva"), "soffr");});
test("soffrivano -> soffr", function() {deepEqual( Stem("soffrivano"), "soffr");});
test("soffrono -> soffr", function() {deepEqual( Stem("soffrono"), "soffr");});
test("soffusa -> soffus", function() {deepEqual( Stem("soffusa"), "soffus");});
test("sofia -> sof", function() {deepEqual( Stem("sofia"), "sof");});
test("sofibond -> sofibond", function() {deepEqual( Stem("sofibond"), "sofibond");});
test("sofisticate -> sofistic", function() {deepEqual( Stem("sofisticate"), "sofistic");});
test("sofisticati -> sofistic", function() {deepEqual( Stem("sofisticati"), "sofistic");});
test("sofisticatissime -> sofisticatissim", function() {deepEqual( Stem("sofisticatissime"), "sofisticatissim");});
test("software -> softw", function() {deepEqual( Stem("software"), "softw");});
test("sogeafit -> sogeafit", function() {deepEqual( Stem("sogeafit"), "sogeafit");});
test("sogefi -> sogef", function() {deepEqual( Stem("sogefi"), "sogef");});
test("sogesfit -> sogesfit", function() {deepEqual( Stem("sogesfit"), "sogesfit");});
test("soggetta -> soggett", function() {deepEqual( Stem("soggetta"), "soggett");});
test("soggette -> soggett", function() {deepEqual( Stem("soggette"), "soggett");});
test("soggetti -> soggett", function() {deepEqual( Stem("soggetti"), "soggett");});
test("soggettività -> soggett", function() {deepEqual( Stem("soggettività"), "soggett");});
test("soggetto -> soggett", function() {deepEqual( Stem("soggetto"), "soggett");});
test("sogghignando -> sogghign", function() {deepEqual( Stem("sogghignando"), "sogghign");});
test("sogghigni -> sogghign", function() {deepEqual( Stem("sogghigni"), "sogghign");});
test("sogghigno -> sogghign", function() {deepEqual( Stem("sogghigno"), "sogghign");});
test("soggiogata -> soggiog", function() {deepEqual( Stem("soggiogata"), "soggiog");});
test("soggiogate -> soggiog", function() {deepEqual( Stem("soggiogate"), "soggiog");});
test("soggiogato -> soggiog", function() {deepEqual( Stem("soggiogato"), "soggiog");});
test("soggiogava -> soggiog", function() {deepEqual( Stem("soggiogava"), "soggiog");});
test("soggiornato -> soggiorn", function() {deepEqual( Stem("soggiornato"), "soggiorn");});
test("soggiorni -> soggiorn", function() {deepEqual( Stem("soggiorni"), "soggiorn");});
test("soggiorno -> soggiorn", function() {deepEqual( Stem("soggiorno"), "soggiorn");});
test("soggiunge -> soggiung", function() {deepEqual( Stem("soggiunge"), "soggiung");});
test("soggiunger -> soggiunger", function() {deepEqual( Stem("soggiunger"), "soggiunger");});
test("soggiungeva -> soggiung", function() {deepEqual( Stem("soggiungeva"), "soggiung");});
test("soggiunse -> soggiuns", function() {deepEqual( Stem("soggiunse"), "soggiuns");});
test("soggolo -> soggol", function() {deepEqual( Stem("soggolo"), "soggol");});
test("sogguardata -> sogguard", function() {deepEqual( Stem("sogguardata"), "sogguard");});
test("sogguardava -> sogguard", function() {deepEqual( Stem("sogguardava"), "sogguard");});
test("soglia -> sogl", function() {deepEqual( Stem("soglia"), "sogl");});
test("sogliano -> sogl", function() {deepEqual( Stem("sogliano"), "sogl");});
test("soglion -> soglion", function() {deepEqual( Stem("soglion"), "soglion");});
test("sognare -> sogn", function() {deepEqual( Stem("sognare"), "sogn");});
test("sognassi -> sogn", function() {deepEqual( Stem("sognassi"), "sogn");});
test("sognate -> sogn", function() {deepEqual( Stem("sognate"), "sogn");});
test("sognato -> sogn", function() {deepEqual( Stem("sognato"), "sogn");});
test("sognava -> sogn", function() {deepEqual( Stem("sognava"), "sogn");});
test("sogni -> sogn", function() {deepEqual( Stem("sogni"), "sogn");});
test("sogno -> sogn", function() {deepEqual( Stem("sogno"), "sogn");});
test("sognò -> sogn", function() {deepEqual( Stem("sognò"), "sogn");});
test("soir -> soir", function() {deepEqual( Stem("soir"), "soir");});
test("sol -> sol", function() {deepEqual( Stem("sol"), "sol");});
test("sola -> sol", function() {deepEqual( Stem("sola"), "sol");});
test("solamente -> sol", function() {deepEqual( Stem("solamente"), "sol");});
test("solange -> solang", function() {deepEqual( Stem("solange"), "solang");});
test("solare -> sol", function() {deepEqual( Stem("solare"), "sol");});
test("solazzi -> solazz", function() {deepEqual( Stem("solazzi"), "solazz");});
test("solbiatese -> solbiates", function() {deepEqual( Stem("solbiatese"), "solbiates");});
test("solcata -> solc", function() {deepEqual( Stem("solcata"), "solc");});
test("solco -> solc", function() {deepEqual( Stem("solco"), "solc");});
test("soldatacci -> soldatacc", function() {deepEqual( Stem("soldatacci"), "soldatacc");});
test("soldatesca -> soldatesc", function() {deepEqual( Stem("soldatesca"), "soldatesc");});
test("soldati -> sold", function() {deepEqual( Stem("soldati"), "sold");});
test("soldato -> sold", function() {deepEqual( Stem("soldato"), "sold");});
test("soldi -> sold", function() {deepEqual( Stem("soldi"), "sold");});
test("soldo -> sold", function() {deepEqual( Stem("soldo"), "sold");});
test("sole -> sol", function() {deepEqual( Stem("sole"), "sol");});
test("solecismi -> solec", function() {deepEqual( Stem("solecismi"), "solec");});
test("solenne -> solenn", function() {deepEqual( Stem("solenne"), "solenn");});
test("solennemente -> solenn", function() {deepEqual( Stem("solennemente"), "solenn");});
test("solenni -> solenn", function() {deepEqual( Stem("solenni"), "solenn");});
test("solennità -> solenn", function() {deepEqual( Stem("solennità"), "solenn");});
test("soleva -> sol", function() {deepEqual( Stem("soleva"), "sol");});
test("solevano -> sol", function() {deepEqual( Stem("solevano"), "sol");});
test("soli -> sol", function() {deepEqual( Stem("soli"), "sol");});
test("solidali -> solidal", function() {deepEqual( Stem("solidali"), "solidal");});
test("solidarieta -> solidariet", function() {deepEqual( Stem("solidarieta"), "solidariet");});
test("solidarietà -> solidariet", function() {deepEqual( Stem("solidarietà"), "solidariet");});
test("solidarismo -> solidar", function() {deepEqual( Stem("solidarismo"), "solidar");});
test("solide -> solid", function() {deepEqual( Stem("solide"), "solid");});
test("solidificato -> solidific", function() {deepEqual( Stem("solidificato"), "solidific");});
test("solido -> solid", function() {deepEqual( Stem("solido"), "solid");});
test("solimeno -> solimen", function() {deepEqual( Stem("solimeno"), "solimen");});
test("solimoes -> solimoes", function() {deepEqual( Stem("solimoes"), "solimoes");});
test("solinas -> solinas", function() {deepEqual( Stem("solinas"), "solinas");});
test("solistà -> solist", function() {deepEqual( Stem("solistà"), "solist");});
test("solisti -> solist", function() {deepEqual( Stem("solisti"), "solist");});
test("solita -> sol", function() {deepEqual( Stem("solita"), "sol");});
test("solitamente -> solit", function() {deepEqual( Stem("solitamente"), "solit");});
test("solitari -> solitar", function() {deepEqual( Stem("solitari"), "solitar");});
test("solitaria -> solitar", function() {deepEqual( Stem("solitaria"), "solitar");});
test("solitario -> solitar", function() {deepEqual( Stem("solitario"), "solitar");});
test("solite -> sol", function() {deepEqual( Stem("solite"), "sol");});
test("soliti -> sol", function() {deepEqual( Stem("soliti"), "sol");});
test("solito -> sol", function() {deepEqual( Stem("solito"), "sol");});
test("solitudine -> solitudin", function() {deepEqual( Stem("solitudine"), "solitudin");});
test("sollecita -> sollec", function() {deepEqual( Stem("sollecita"), "sollec");});
test("sollecitandoli -> sollecit", function() {deepEqual( Stem("sollecitandoli"), "sollecit");});
test("sollecitare -> sollecit", function() {deepEqual( Stem("sollecitare"), "sollecit");});
test("sollecitarono -> sollecit", function() {deepEqual( Stem("sollecitarono"), "sollecit");});
test("sollecitata -> sollecit", function() {deepEqual( Stem("sollecitata"), "sollecit");});
test("sollecitato -> sollecit", function() {deepEqual( Stem("sollecitato"), "sollecit");});
test("sollecitatori -> sollecit", function() {deepEqual( Stem("sollecitatori"), "sollecit");});
test("sollecitava -> sollecit", function() {deepEqual( Stem("sollecitava"), "sollecit");});
test("sollecitazione -> sollecit", function() {deepEqual( Stem("sollecitazione"), "sollecit");});
test("sollecitazioni -> sollecit", function() {deepEqual( Stem("sollecitazioni"), "sollecit");});
test("sollecito -> sollec", function() {deepEqual( Stem("sollecito"), "sollec");});
test("sollecitudine -> sollecitudin", function() {deepEqual( Stem("sollecitudine"), "sollecitudin");});
test("solleuarsi -> solleu", function() {deepEqual( Stem("solleuarsi"), "solleu");});
test("solleva -> soll", function() {deepEqual( Stem("solleva"), "soll");});
test("sollevando -> sollev", function() {deepEqual( Stem("sollevando"), "sollev");});
test("sollevano -> soll", function() {deepEqual( Stem("sollevano"), "soll");});
test("sollevar -> sollev", function() {deepEqual( Stem("sollevar"), "sollev");});
test("sollevare -> sollev", function() {deepEqual( Stem("sollevare"), "sollev");});
test("sollevarle -> sollev", function() {deepEqual( Stem("sollevarle"), "sollev");});
test("sollevarvi -> sollev", function() {deepEqual( Stem("sollevarvi"), "sollev");});
test("sollevata -> sollev", function() {deepEqual( Stem("sollevata"), "sollev");});
test("sollevate -> soll", function() {deepEqual( Stem("sollevate"), "soll");});
test("sollevati -> sollev", function() {deepEqual( Stem("sollevati"), "sollev");});
test("sollevato -> sollev", function() {deepEqual( Stem("sollevato"), "sollev");});
test("sollevava -> sollev", function() {deepEqual( Stem("sollevava"), "sollev");});
test("sollevavano -> sollev", function() {deepEqual( Stem("sollevavano"), "sollev");});
test("sollevazione -> sollev", function() {deepEqual( Stem("sollevazione"), "sollev");});
test("sollevazioni -> sollev", function() {deepEqual( Stem("sollevazioni"), "sollev");});
test("solleverà -> sollev", function() {deepEqual( Stem("solleverà"), "sollev");});
test("sollevò -> sollev", function() {deepEqual( Stem("sollevò"), "sollev");});
test("sollievo -> soll", function() {deepEqual( Stem("sollievo"), "soll");});
test("solo -> sol", function() {deepEqual( Stem("solo"), "sol");});
test("soltanto -> soltant", function() {deepEqual( Stem("soltanto"), "soltant");});
test("soltato -> solt", function() {deepEqual( Stem("soltato"), "solt");});
test("soluzione -> soluzion", function() {deepEqual( Stem("soluzione"), "soluzion");});
test("soluzioni -> soluzion", function() {deepEqual( Stem("soluzioni"), "soluzion");});
test("solvibilità -> solvibil", function() {deepEqual( Stem("solvibilità"), "solvibil");});
test("somaglia -> somagl", function() {deepEqual( Stem("somaglia"), "somagl");});
test("somal -> somal", function() {deepEqual( Stem("somal"), "somal");});
test("somala -> somal", function() {deepEqual( Stem("somala"), "somal");});
test("somale -> somal", function() {deepEqual( Stem("somale"), "somal");});
test("somalfruit -> somalfruit", function() {deepEqual( Stem("somalfruit"), "somalfruit");});
test("somali -> somal", function() {deepEqual( Stem("somali"), "somal");});
test("somalia -> somal", function() {deepEqual( Stem("somalia"), "somal");});
test("somalo -> somal", function() {deepEqual( Stem("somalo"), "somal");});
test("somaschi -> somasc", function() {deepEqual( Stem("somaschi"), "somasc");});
test("some -> som", function() {deepEqual( Stem("some"), "som");});
test("somiglia -> somigl", function() {deepEqual( Stem("somiglia"), "somigl");});
test("somigliante -> somigl", function() {deepEqual( Stem("somigliante"), "somigl");});
test("somiglianti -> somigl", function() {deepEqual( Stem("somiglianti"), "somigl");});
test("somigliantissimi -> somigliantissim", function() {deepEqual( Stem("somigliantissimi"), "somigliantissim");});
test("somiglianza -> somigl", function() {deepEqual( Stem("somiglianza"), "somigl");});
test("somigliare -> somigl", function() {deepEqual( Stem("somigliare"), "somigl");});
test("somlia -> soml", function() {deepEqual( Stem("somlia"), "soml");});
test("somma -> somm", function() {deepEqual( Stem("somma"), "somm");});
test("sommamente -> somm", function() {deepEqual( Stem("sommamente"), "somm");});
test("sommando -> somm", function() {deepEqual( Stem("sommando"), "somm");});
test("sommari -> sommar", function() {deepEqual( Stem("sommari"), "sommar");});
test("sommaria -> sommar", function() {deepEqual( Stem("sommaria"), "sommar");});
test("sommariamente -> sommar", function() {deepEqual( Stem("sommariamente"), "sommar");});
test("sommario -> sommar", function() {deepEqual( Stem("sommario"), "sommar");});
test("sommato -> somm", function() {deepEqual( Stem("sommato"), "somm");});
test("somme -> somm", function() {deepEqual( Stem("somme"), "somm");});
test("sommersi -> somm", function() {deepEqual( Stem("sommersi"), "somm");});
test("sommerso -> sommers", function() {deepEqual( Stem("sommerso"), "sommers");});
test("sommessa -> sommess", function() {deepEqual( Stem("sommessa"), "sommess");});
test("sommessamente -> sommess", function() {deepEqual( Stem("sommessamente"), "sommess");});
test("sommesse -> sommess", function() {deepEqual( Stem("sommesse"), "sommess");});
test("sommesso -> sommess", function() {deepEqual( Stem("sommesso"), "sommess");});
test("sommi -> somm", function() {deepEqual( Stem("sommi"), "somm");});
test("somministra -> somministr", function() {deepEqual( Stem("somministra"), "somministr");});
test("somministrarcene -> somministr", function() {deepEqual( Stem("somministrarcene"), "somministr");});
test("somministrare -> somministr", function() {deepEqual( Stem("somministrare"), "somministr");});
test("sommissione -> sommission", function() {deepEqual( Stem("sommissione"), "sommission");});
test("sommissioni -> sommission", function() {deepEqual( Stem("sommissioni"), "sommission");});
test("sommità -> sommit", function() {deepEqual( Stem("sommità"), "sommit");});
test("sommossa -> sommoss", function() {deepEqual( Stem("sommossa"), "sommoss");});
test("son -> son", function() {deepEqual( Stem("son"), "son");});
test("sonare -> son", function() {deepEqual( Stem("sonare"), "son");});
test("sonata -> son", function() {deepEqual( Stem("sonata"), "son");});
test("sonato -> son", function() {deepEqual( Stem("sonato"), "son");});
test("sonator -> sonator", function() {deepEqual( Stem("sonator"), "sonator");});
test("sonava -> son", function() {deepEqual( Stem("sonava"), "son");});
test("sonda -> sond", function() {deepEqual( Stem("sonda"), "sond");});
test("sondaggi -> sondagg", function() {deepEqual( Stem("sondaggi"), "sondagg");});
test("sondaggio -> sondagg", function() {deepEqual( Stem("sondaggio"), "sondagg");});
test("sondalo -> sondal", function() {deepEqual( Stem("sondalo"), "sondal");});
test("sondel -> sondel", function() {deepEqual( Stem("sondel"), "sondel");});
test("sondrio -> sondr", function() {deepEqual( Stem("sondrio"), "sondr");});
test("sonerà -> son", function() {deepEqual( Stem("sonerà"), "son");});
test("sonetti -> sonett", function() {deepEqual( Stem("sonetti"), "sonett");});
test("sonetto -> sonett", function() {deepEqual( Stem("sonetto"), "sonett");});
test("sonia -> son", function() {deepEqual( Stem("sonia"), "son");});
test("sonni -> sonn", function() {deepEqual( Stem("sonni"), "sonn");});
test("sonnifero -> sonnifer", function() {deepEqual( Stem("sonnifero"), "sonnifer");});
test("sonno -> sonn", function() {deepEqual( Stem("sonno"), "sonn");});
test("sonnolenta -> sonnolent", function() {deepEqual( Stem("sonnolenta"), "sonnolent");});
test("sonnolento -> sonnolent", function() {deepEqual( Stem("sonnolento"), "sonnolent");});
test("sonntag -> sonntag", function() {deepEqual( Stem("sonntag"), "sonntag");});
test("sono -> son", function() {deepEqual( Stem("sono"), "son");});
test("sonò -> son", function() {deepEqual( Stem("sonò"), "son");});
test("sonora -> sonor", function() {deepEqual( Stem("sonora"), "sonor");});
test("sonoramente -> sonor", function() {deepEqual( Stem("sonoramente"), "sonor");});
test("sonore -> sonor", function() {deepEqual( Stem("sonore"), "sonor");});
test("sonori -> sonor", function() {deepEqual( Stem("sonori"), "sonor");});
test("sonorità -> sonor", function() {deepEqual( Stem("sonorità"), "sonor");});
test("sonoro -> sonor", function() {deepEqual( Stem("sonoro"), "sonor");});
test("sopaf -> sopaf", function() {deepEqual( Stem("sopaf"), "sopaf");});
test("sopire -> sop", function() {deepEqual( Stem("sopire"), "sop");});
test("sopita -> sop", function() {deepEqual( Stem("sopita"), "sop");});
test("sopiti -> sop", function() {deepEqual( Stem("sopiti"), "sop");});
test("sopito -> sop", function() {deepEqual( Stem("sopito"), "sop");});
test("sopiva -> sop", function() {deepEqual( Stem("sopiva"), "sop");});
test("soppiatto -> soppiatt", function() {deepEqual( Stem("soppiatto"), "soppiatt");});
test("sopporta -> sopport", function() {deepEqual( Stem("sopporta"), "sopport");});
test("sopportabile -> sopport", function() {deepEqual( Stem("sopportabile"), "sopport");});
test("sopportare -> sopport", function() {deepEqual( Stem("sopportare"), "sopport");});
test("sopportatela -> sopportatel", function() {deepEqual( Stem("sopportatela"), "sopportatel");});
test("sopportato -> sopport", function() {deepEqual( Stem("sopportato"), "sopport");});
test("sopportava -> sopport", function() {deepEqual( Stem("sopportava"), "sopport");});
test("sopportavano -> sopport", function() {deepEqual( Stem("sopportavano"), "sopport");});
test("sopportiamo -> sopport", function() {deepEqual( Stem("sopportiamo"), "sopport");});
test("soppressa -> soppress", function() {deepEqual( Stem("soppressa"), "soppress");});
test("soppressione -> soppression", function() {deepEqual( Stem("soppressione"), "soppression");});
test("soppresso -> soppress", function() {deepEqual( Stem("soppresso"), "soppress");});
test("sopprimendo -> sopprim", function() {deepEqual( Stem("sopprimendo"), "sopprim");});
test("sopprimere -> sopprim", function() {deepEqual( Stem("sopprimere"), "sopprim");});
test("sopra -> sopr", function() {deepEqual( Stem("sopra"), "sopr");});
test("soprabbondanti -> soprabbond", function() {deepEqual( Stem("soprabbondanti"), "soprabbond");});
test("sopraccigli -> sopraccigl", function() {deepEqual( Stem("sopraccigli"), "sopraccigl");});
test("sopracciglio -> sopraccigl", function() {deepEqual( Stem("sopracciglio"), "sopraccigl");});
test("sopraccitata -> sopraccit", function() {deepEqual( Stem("sopraccitata"), "sopraccit");});
test("sopraccitato -> sopraccit", function() {deepEqual( Stem("sopraccitato"), "sopraccit");});
test("sopraddetti -> sopraddett", function() {deepEqual( Stem("sopraddetti"), "sopraddett");});
test("sopraffatta -> sopraffatt", function() {deepEqual( Stem("sopraffatta"), "sopraffatt");});
test("sopraffatte -> sopraffatt", function() {deepEqual( Stem("sopraffatte"), "sopraffatt");});
test("sopraffatti -> sopraffatt", function() {deepEqual( Stem("sopraffatti"), "sopraffatt");});
test("sopraffatto -> sopraffatt", function() {deepEqual( Stem("sopraffatto"), "sopraffatt");});
test("sopraffino -> sopraffin", function() {deepEqual( Stem("sopraffino"), "sopraffin");});
test("sopraggiungere -> sopraggiung", function() {deepEqual( Stem("sopraggiungere"), "sopraggiung");});
test("sopraggiungevano -> sopraggiung", function() {deepEqual( Stem("sopraggiungevano"), "sopraggiung");});
test("sopraggiunse -> sopraggiuns", function() {deepEqual( Stem("sopraggiunse"), "sopraggiuns");});
test("sopraggiunte -> sopraggiunt", function() {deepEqual( Stem("sopraggiunte"), "sopraggiunt");});
test("sopralluogo -> sopralluog", function() {deepEqual( Stem("sopralluogo"), "sopralluog");});
test("soprammercato -> soprammerc", function() {deepEqual( Stem("soprammercato"), "soprammerc");});
test("soprannome -> soprannom", function() {deepEqual( Stem("soprannome"), "soprannom");});
test("soprannominato -> soprannomin", function() {deepEqual( Stem("soprannominato"), "soprannomin");});
test("soprappensiero -> soprappensier", function() {deepEqual( Stem("soprappensiero"), "soprappensier");});
test("soprarrivati -> soprarriv", function() {deepEqual( Stem("soprarrivati"), "soprarriv");});
test("soprarrivato -> soprarriv", function() {deepEqual( Stem("soprarrivato"), "soprarriv");});
test("soprassalto -> soprassalt", function() {deepEqual( Stem("soprassalto"), "soprassalt");});
test("soprattutto -> soprattutt", function() {deepEqual( Stem("soprattutto"), "soprattutt");});
test("sopravanzare -> sopravanz", function() {deepEqual( Stem("sopravanzare"), "sopravanz");});
test("sopravanzava -> sopravanz", function() {deepEqual( Stem("sopravanzava"), "sopravanz");});
test("sopravvalutata -> sopravvalut", function() {deepEqual( Stem("sopravvalutata"), "sopravvalut");});
test("sopravvento -> sopravvent", function() {deepEqual( Stem("sopravvento"), "sopravvent");});
test("sopravvenuto -> sopravven", function() {deepEqual( Stem("sopravvenuto"), "sopravven");});
test("sopravvissuta -> sopravviss", function() {deepEqual( Stem("sopravvissuta"), "sopravviss");});
test("sopravvissuti -> sopravviss", function() {deepEqual( Stem("sopravvissuti"), "sopravviss");});
test("sopravvissuto -> sopravviss", function() {deepEqual( Stem("sopravvissuto"), "sopravviss");});
test("sopravvivenza -> sopravvivent", function() {deepEqual( Stem("sopravvivenza"), "sopravvivent");});
test("sopravvivere -> sopravviv", function() {deepEqual( Stem("sopravvivere"), "sopravviv");});
test("sopravvivono -> sopravviv", function() {deepEqual( Stem("sopravvivono"), "sopravviv");});
test("soprintendenti -> soprintendent", function() {deepEqual( Stem("soprintendenti"), "soprintendent");});
test("soprintendenza -> soprintendent", function() {deepEqual( Stem("soprintendenza"), "soprintendent");});
test("soprintendenze -> soprintendent", function() {deepEqual( Stem("soprintendenze"), "soprintendent");});
test("soprintendere -> soprintend", function() {deepEqual( Stem("soprintendere"), "soprintend");});
test("soprintendevano -> soprintend", function() {deepEqual( Stem("soprintendevano"), "soprintend");});
test("soprusi -> soprus", function() {deepEqual( Stem("soprusi"), "soprus");});
test("sopruso -> soprus", function() {deepEqual( Stem("sopruso"), "soprus");});
test("soqquadro -> soqquadr", function() {deepEqual( Stem("soqquadro"), "soqquadr");});
test("sor -> sor", function() {deepEqual( Stem("sor"), "sor");});
test("sora -> sor", function() {deepEqual( Stem("sora"), "sor");});
test("soranzo -> soranz", function() {deepEqual( Stem("soranzo"), "soranz");});
test("sorbello -> sorbell", function() {deepEqual( Stem("sorbello"), "sorbell");});
test("sorbir -> sorb", function() {deepEqual( Stem("sorbir"), "sorb");});
test("sorda -> sord", function() {deepEqual( Stem("sorda"), "sord");});
test("sordamente -> sord", function() {deepEqual( Stem("sordamente"), "sord");});
test("sordina -> sordin", function() {deepEqual( Stem("sordina"), "sordin");});
test("sordo -> sord", function() {deepEqual( Stem("sordo"), "sord");});
test("sorella -> sorell", function() {deepEqual( Stem("sorella"), "sorell");});
test("sorelle -> sorell", function() {deepEqual( Stem("sorelle"), "sorell");});
test("sorellina -> sorellin", function() {deepEqual( Stem("sorellina"), "sorellin");});
test("sorge -> sorg", function() {deepEqual( Stem("sorge"), "sorg");});
test("sorgente -> sorgent", function() {deepEqual( Stem("sorgente"), "sorgent");});
test("sorgenti -> sorgent", function() {deepEqual( Stem("sorgenti"), "sorgent");});
test("sorger -> sorger", function() {deepEqual( Stem("sorger"), "sorger");});
test("sorgere -> sorg", function() {deepEqual( Stem("sorgere"), "sorg");});
test("sorgerete -> sorg", function() {deepEqual( Stem("sorgerete"), "sorg");});
test("sorgesse -> sorgess", function() {deepEqual( Stem("sorgesse"), "sorgess");});
test("sorgeva -> sorg", function() {deepEqual( Stem("sorgeva"), "sorg");});
test("sorgevano -> sorg", function() {deepEqual( Stem("sorgevano"), "sorg");});
test("sorgon -> sorgon", function() {deepEqual( Stem("sorgon"), "sorgon");});
test("sorin -> sorin", function() {deepEqual( Stem("sorin"), "sorin");});
test("sormontate -> sormont", function() {deepEqual( Stem("sormontate"), "sormont");});
test("soros -> soros", function() {deepEqual( Stem("soros"), "soros");});
test("sorpassava -> sorpass", function() {deepEqual( Stem("sorpassava"), "sorpass");});
test("sorpasso -> sorpass", function() {deepEqual( Stem("sorpasso"), "sorpass");});
test("sorprende -> sorpr", function() {deepEqual( Stem("sorprende"), "sorpr");});
test("sorprendendo -> sorprend", function() {deepEqual( Stem("sorprendendo"), "sorprend");});
test("sorprender -> sorprender", function() {deepEqual( Stem("sorprender"), "sorprender");});
test("sorprendere -> sorprend", function() {deepEqual( Stem("sorprendere"), "sorprend");});
test("sorprenderlo -> sorprend", function() {deepEqual( Stem("sorprenderlo"), "sorprend");});
test("sorprendermi -> sorprend", function() {deepEqual( Stem("sorprendermi"), "sorprend");});
test("sorpresa -> sorpres", function() {deepEqual( Stem("sorpresa"), "sorpres");});
test("sorprese -> sorpres", function() {deepEqual( Stem("sorprese"), "sorpres");});
test("sorpresi -> sorpres", function() {deepEqual( Stem("sorpresi"), "sorpres");});
test("sorpreso -> sorpres", function() {deepEqual( Stem("sorpreso"), "sorpres");});
test("sorreggendo -> sorregg", function() {deepEqual( Stem("sorreggendo"), "sorregg");});
test("sorreggeva -> sorregg", function() {deepEqual( Stem("sorreggeva"), "sorregg");});
test("sorretta -> sorrett", function() {deepEqual( Stem("sorretta"), "sorrett");});
test("sorretto -> sorrett", function() {deepEqual( Stem("sorretto"), "sorrett");});
test("sorridendo -> sorrid", function() {deepEqual( Stem("sorridendo"), "sorrid");});
test("sorridente -> sorrident", function() {deepEqual( Stem("sorridente"), "sorrident");});
test("sorridenti -> sorrident", function() {deepEqual( Stem("sorridenti"), "sorrident");});
test("sorridere -> sorrid", function() {deepEqual( Stem("sorridere"), "sorrid");});
test("sorrideva -> sorrid", function() {deepEqual( Stem("sorrideva"), "sorrid");});
test("sorridi -> sorrid", function() {deepEqual( Stem("sorridi"), "sorrid");});
test("sorrise -> sorris", function() {deepEqual( Stem("sorrise"), "sorris");});
test("sorrisi -> sorris", function() {deepEqual( Stem("sorrisi"), "sorris");});
test("sorriso -> sorris", function() {deepEqual( Stem("sorriso"), "sorris");});
test("sorsi -> sors", function() {deepEqual( Stem("sorsi"), "sors");});
test("sorso -> sors", function() {deepEqual( Stem("sorso"), "sors");});
test("sorta -> sort", function() {deepEqual( Stem("sorta"), "sort");});
test("sorte -> sort", function() {deepEqual( Stem("sorte"), "sort");});
test("sorti -> sort", function() {deepEqual( Stem("sorti"), "sort");});
test("sortite -> sort", function() {deepEqual( Stem("sortite"), "sort");});
test("sortito -> sort", function() {deepEqual( Stem("sortito"), "sort");});
test("sorto -> sort", function() {deepEqual( Stem("sorto"), "sort");});
test("sorveglianza -> sorvegl", function() {deepEqual( Stem("sorveglianza"), "sorvegl");});
test("sorvegliare -> sorvegl", function() {deepEqual( Stem("sorvegliare"), "sorvegl");});
test("sorvegliato -> sorvegl", function() {deepEqual( Stem("sorvegliato"), "sorvegl");});
test("sorvegliava -> sorvegl", function() {deepEqual( Stem("sorvegliava"), "sorvegl");});
test("sorveglieranno -> sorvegl", function() {deepEqual( Stem("sorveglieranno"), "sorvegl");});
test("sorvolato -> sorvol", function() {deepEqual( Stem("sorvolato"), "sorvol");});
test("sos -> sos", function() {deepEqual( Stem("sos"), "sos");});
test("sosa -> sos", function() {deepEqual( Stem("sosa"), "sos");});
test("sosia -> sos", function() {deepEqual( Stem("sosia"), "sos");});
test("soskoviets -> soskoviets", function() {deepEqual( Stem("soskoviets"), "soskoviets");});
test("sospende -> sosp", function() {deepEqual( Stem("sospende"), "sosp");});
test("sospender -> sospender", function() {deepEqual( Stem("sospender"), "sospender");});
test("sospendere -> sospend", function() {deepEqual( Stem("sospendere"), "sospend");});
test("sospendesse -> sospendess", function() {deepEqual( Stem("sospendesse"), "sospendess");});
test("sospendeva -> sospend", function() {deepEqual( Stem("sospendeva"), "sospend");});
test("sospension -> sospension", function() {deepEqual( Stem("sospension"), "sospension");});
test("sospensione -> sospension", function() {deepEqual( Stem("sospensione"), "sospension");});
test("sospensioni -> sospension", function() {deepEqual( Stem("sospensioni"), "sospension");});
test("sospensiva -> sospens", function() {deepEqual( Stem("sospensiva"), "sospens");});
test("sospesa -> sospes", function() {deepEqual( Stem("sospesa"), "sospes");});
test("sospese -> sospes", function() {deepEqual( Stem("sospese"), "sospes");});
test("sospesero -> sospeser", function() {deepEqual( Stem("sospesero"), "sospeser");});
test("sospesi -> sospes", function() {deepEqual( Stem("sospesi"), "sospes");});
test("sospeso -> sospes", function() {deepEqual( Stem("sospeso"), "sospes");});
test("sospetta -> sospett", function() {deepEqual( Stem("sospetta"), "sospett");});
test("sospettando -> sospett", function() {deepEqual( Stem("sospettando"), "sospett");});
test("sospettar -> sospett", function() {deepEqual( Stem("sospettar"), "sospett");});
test("sospettarci -> sospett", function() {deepEqual( Stem("sospettarci"), "sospett");});
test("sospettare -> sospett", function() {deepEqual( Stem("sospettare"), "sospett");});
test("sospettate -> sospett", function() {deepEqual( Stem("sospettate"), "sospett");});
test("sospettava -> sospett", function() {deepEqual( Stem("sospettava"), "sospett");});
test("sospette -> sospett", function() {deepEqual( Stem("sospette"), "sospett");});
test("sospetti -> sospett", function() {deepEqual( Stem("sospetti"), "sospett");});
test("sospettiamo -> sospett", function() {deepEqual( Stem("sospettiamo"), "sospett");});
test("sospetto -> sospett", function() {deepEqual( Stem("sospetto"), "sospett");});
test("sospettosa -> sospett", function() {deepEqual( Stem("sospettosa"), "sospett");});
test("sospettosamente -> sospett", function() {deepEqual( Stem("sospettosamente"), "sospett");});
test("sospettosi -> sospett", function() {deepEqual( Stem("sospettosi"), "sospett");});
test("sospettoso -> sospett", function() {deepEqual( Stem("sospettoso"), "sospett");});
test("sospinse -> sospins", function() {deepEqual( Stem("sospinse"), "sospins");});
test("sospirando -> sospir", function() {deepEqual( Stem("sospirando"), "sospir");});
test("sospirar -> sospir", function() {deepEqual( Stem("sospirar"), "sospir");});
test("sospirare -> sospir", function() {deepEqual( Stem("sospirare"), "sospir");});
test("sospirata -> sospir", function() {deepEqual( Stem("sospirata"), "sospir");});
test("sospirato -> sospir", function() {deepEqual( Stem("sospirato"), "sospir");});
test("sospirava -> sospir", function() {deepEqual( Stem("sospirava"), "sospir");});
test("sospiri -> sospir", function() {deepEqual( Stem("sospiri"), "sospir");});
test("sospiro -> sospir", function() {deepEqual( Stem("sospiro"), "sospir");});
test("sospirò -> sosp", function() {deepEqual( Stem("sospirò"), "sosp");});
test("sosta -> sost", function() {deepEqual( Stem("sosta"), "sost");});
test("sostantivo -> sostant", function() {deepEqual( Stem("sostantivo"), "sostant");});
test("sostanza -> sostanz", function() {deepEqual( Stem("sostanza"), "sostanz");});
test("sostanze -> sostanz", function() {deepEqual( Stem("sostanze"), "sostanz");});
test("sostanziale -> sostanzial", function() {deepEqual( Stem("sostanziale"), "sostanzial");});
test("sostanzialmente -> sostanzial", function() {deepEqual( Stem("sostanzialmente"), "sostanzial");});
test("sostanzioso -> sostanz", function() {deepEqual( Stem("sostanzioso"), "sostanz");});
test("sostato -> sost", function() {deepEqual( Stem("sostato"), "sost");});
test("sostegno -> sostegn", function() {deepEqual( Stem("sostegno"), "sostegn");});
test("sostenendo -> sosten", function() {deepEqual( Stem("sostenendo"), "sosten");});
test("sostener -> sostener", function() {deepEqual( Stem("sostener"), "sostener");});
test("sostenere -> sosten", function() {deepEqual( Stem("sostenere"), "sosten");});
test("sostenerla -> sosten", function() {deepEqual( Stem("sostenerla"), "sosten");});
test("sostenerlo -> sosten", function() {deepEqual( Stem("sostenerlo"), "sosten");});
test("sostenerne -> sosten", function() {deepEqual( Stem("sostenerne"), "sosten");});
test("sostenete -> sosten", function() {deepEqual( Stem("sostenete"), "sosten");});
test("sosteneva -> sosten", function() {deepEqual( Stem("sosteneva"), "sosten");});
test("sostenevano -> sosten", function() {deepEqual( Stem("sostenevano"), "sosten");});
test("sostenevo -> sosten", function() {deepEqual( Stem("sostenevo"), "sosten");});
test("sostenga -> sosteng", function() {deepEqual( Stem("sostenga"), "sosteng");});
test("sostengano -> sosteng", function() {deepEqual( Stem("sostengano"), "sosteng");});
test("sostengo -> sosteng", function() {deepEqual( Stem("sostengo"), "sosteng");});
test("sostengono -> sosteng", function() {deepEqual( Stem("sostengono"), "sosteng");});
test("sostenibili -> sosten", function() {deepEqual( Stem("sostenibili"), "sosten");});
test("sostenitore -> sostenitor", function() {deepEqual( Stem("sostenitore"), "sostenitor");});
test("sostenitori -> sostenitor", function() {deepEqual( Stem("sostenitori"), "sostenitor");});
test("sostenitrice -> sostenitr", function() {deepEqual( Stem("sostenitrice"), "sostenitr");});
test("sostenne -> sostenn", function() {deepEqual( Stem("sostenne"), "sostenn");});
test("sostennero -> sostenner", function() {deepEqual( Stem("sostennero"), "sostenner");});
test("sostenuta -> sosten", function() {deepEqual( Stem("sostenuta"), "sosten");});
test("sostenute -> sosten", function() {deepEqual( Stem("sostenute"), "sosten");});
test("sostenuti -> sosten", function() {deepEqual( Stem("sostenuti"), "sosten");});
test("sostenuto -> sosten", function() {deepEqual( Stem("sostenuto"), "sosten");});
test("sosterrà -> sosterr", function() {deepEqual( Stem("sosterrà"), "sosterr");});
test("sostiene -> sostien", function() {deepEqual( Stem("sostiene"), "sostien");});
test("sostituendo -> sostitu", function() {deepEqual( Stem("sostituendo"), "sostitu");});
test("sostituì -> sostitu", function() {deepEqual( Stem("sostituì"), "sostitu");});
test("sostituir -> sostitu", function() {deepEqual( Stem("sostituir"), "sostitu");});
test("sostituire -> sostitu", function() {deepEqual( Stem("sostituire"), "sostitu");});
test("sostituirlo -> sostitu", function() {deepEqual( Stem("sostituirlo"), "sostitu");});
test("sostituirsi -> sostitu", function() {deepEqual( Stem("sostituirsi"), "sostitu");});
test("sostituisca -> sostitu", function() {deepEqual( Stem("sostituisca"), "sostitu");});
test("sostituita -> sostitu", function() {deepEqual( Stem("sostituita"), "sostitu");});
test("sostituito -> sostitu", function() {deepEqual( Stem("sostituito"), "sostitu");});
test("sostituiva -> sostitu", function() {deepEqual( Stem("sostituiva"), "sostitu");});
test("sostituti -> sostit", function() {deepEqual( Stem("sostituti"), "sostit");});
test("sostituto -> sostit", function() {deepEqual( Stem("sostituto"), "sostit");});
test("sostituzione -> sostitu", function() {deepEqual( Stem("sostituzione"), "sostitu");});
test("sostiuisca -> sostiu", function() {deepEqual( Stem("sostiuisca"), "sostiu");});
test("sott -> sott", function() {deepEqual( Stem("sott"), "sott");});
test("sottana -> sottan", function() {deepEqual( Stem("sottana"), "sottan");});
test("sottentrando -> sottentr", function() {deepEqual( Stem("sottentrando"), "sottentr");});
test("sotterfugi -> sotterfug", function() {deepEqual( Stem("sotterfugi"), "sotterfug");});
test("sotterfugio -> sotterfug", function() {deepEqual( Stem("sotterfugio"), "sotterfug");});
test("sotterranea -> sotterrane", function() {deepEqual( Stem("sotterranea"), "sotterrane");});
test("sotterraneo -> sotterrane", function() {deepEqual( Stem("sotterraneo"), "sotterrane");});
test("sotterrare -> sotterr", function() {deepEqual( Stem("sotterrare"), "sotterr");});
test("sotterrarli -> sotterr", function() {deepEqual( Stem("sotterrarli"), "sotterr");});
test("sotterrate -> sotterr", function() {deepEqual( Stem("sotterrate"), "sotterr");});
test("sottigliezze -> sottigliezz", function() {deepEqual( Stem("sottigliezze"), "sottigliezz");});
test("sottil -> sottil", function() {deepEqual( Stem("sottil"), "sottil");});
test("sottile -> sottil", function() {deepEqual( Stem("sottile"), "sottil");});
test("sottili -> sottil", function() {deepEqual( Stem("sottili"), "sottil");});
test("sottilissimo -> sottilissim", function() {deepEqual( Stem("sottilissimo"), "sottilissim");});
test("sottilmente -> sottil", function() {deepEqual( Stem("sottilmente"), "sottil");});
test("sottintesa -> sottintes", function() {deepEqual( Stem("sottintesa"), "sottintes");});
test("sottintese -> sottintes", function() {deepEqual( Stem("sottintese"), "sottintes");});
test("sotto -> sott", function() {deepEqual( Stem("sotto"), "sott");});
test("sottocoppa -> sottocopp", function() {deepEqual( Stem("sottocoppa"), "sottocopp");});
test("sottolinea -> sottoline", function() {deepEqual( Stem("sottolinea"), "sottoline");});
test("sottolineando -> sottolin", function() {deepEqual( Stem("sottolineando"), "sottolin");});
test("sottolineano -> sottolin", function() {deepEqual( Stem("sottolineano"), "sottolin");});
test("sottolineare -> sottolin", function() {deepEqual( Stem("sottolineare"), "sottolin");});
test("sottolineato -> sottolin", function() {deepEqual( Stem("sottolineato"), "sottolin");});
test("sottolineatura -> sottolineatur", function() {deepEqual( Stem("sottolineatura"), "sottolineatur");});
test("sottolineava -> sottolin", function() {deepEqual( Stem("sottolineava"), "sottolin");});
test("sottomaestro -> sottomaestr", function() {deepEqual( Stem("sottomaestro"), "sottomaestr");});
test("sottomarina -> sottomarin", function() {deepEqual( Stem("sottomarina"), "sottomarin");});
test("sottomarino -> sottomarin", function() {deepEqual( Stem("sottomarino"), "sottomarin");});
test("sottomesso -> sottomess", function() {deepEqual( Stem("sottomesso"), "sottomess");});
test("sottomettere -> sottomett", function() {deepEqual( Stem("sottomettere"), "sottomett");});
test("sottoponendo -> sottopon", function() {deepEqual( Stem("sottoponendo"), "sottopon");});
test("sottoporre -> sottoporr", function() {deepEqual( Stem("sottoporre"), "sottoporr");});
test("sottoposta -> sottopost", function() {deepEqual( Stem("sottoposta"), "sottopost");});
test("sottoposte -> sottopost", function() {deepEqual( Stem("sottoposte"), "sottopost");});
test("sottoposti -> sottopost", function() {deepEqual( Stem("sottoposti"), "sottopost");});
test("sottoposto -> sottopost", function() {deepEqual( Stem("sottoposto"), "sottopost");});
test("sottoscala -> sottoscal", function() {deepEqual( Stem("sottoscala"), "sottoscal");});
test("sottoscritta -> sottoscritt", function() {deepEqual( Stem("sottoscritta"), "sottoscritt");});
test("sottoscritti -> sottoscritt", function() {deepEqual( Stem("sottoscritti"), "sottoscritt");});
test("sottoscritto -> sottoscritt", function() {deepEqual( Stem("sottoscritto"), "sottoscritt");});
test("sottoscrittore -> sottoscrittor", function() {deepEqual( Stem("sottoscrittore"), "sottoscrittor");});
test("sottoscrivere -> sottoscriv", function() {deepEqual( Stem("sottoscrivere"), "sottoscriv");});
test("sottoscrizione -> sottoscrizion", function() {deepEqual( Stem("sottoscrizione"), "sottoscrizion");});
test("sottoscrizioni -> sottoscrizion", function() {deepEqual( Stem("sottoscrizioni"), "sottoscrizion");});
test("sottosegretari -> sottosegretar", function() {deepEqual( Stem("sottosegretari"), "sottosegretar");});
test("sottosegretario -> sottosegretar", function() {deepEqual( Stem("sottosegretario"), "sottosegretar");});
test("sottosegretariop -> sottosegretariop", function() {deepEqual( Stem("sottosegretariop"), "sottosegretariop");});
test("sottosopra -> sottosopr", function() {deepEqual( Stem("sottosopra"), "sottosopr");});
test("sottostimato -> sottostim", function() {deepEqual( Stem("sottostimato"), "sottostim");});
test("sottosuolo -> sottosuol", function() {deepEqual( Stem("sottosuolo"), "sottosuol");});
test("sottotitolo -> sottotitol", function() {deepEqual( Stem("sottotitolo"), "sottotitol");});
test("sottotono -> sottot", function() {deepEqual( Stem("sottotono"), "sottot");});
test("sottovalutare -> sottovalut", function() {deepEqual( Stem("sottovalutare"), "sottovalut");});
test("sottovalutata -> sottovalut", function() {deepEqual( Stem("sottovalutata"), "sottovalut");});
test("sottovaluti -> sottoval", function() {deepEqual( Stem("sottovaluti"), "sottoval");});
test("sottovoce -> sottovoc", function() {deepEqual( Stem("sottovoce"), "sottovoc");});
test("sottraesse -> sottraess", function() {deepEqual( Stem("sottraesse"), "sottraess");});
test("sottraevano -> sottr", function() {deepEqual( Stem("sottraevano"), "sottr");});
test("sottrar -> sottr", function() {deepEqual( Stem("sottrar"), "sottr");});
test("sottrarci -> sottr", function() {deepEqual( Stem("sottrarci"), "sottr");});
test("sottrarre -> sottrarr", function() {deepEqual( Stem("sottrarre"), "sottrarr");});
test("sottrarsi -> sottr", function() {deepEqual( Stem("sottrarsi"), "sottr");});
test("sottratta -> sottratt", function() {deepEqual( Stem("sottratta"), "sottratt");});
test("sottrattà -> sottratt", function() {deepEqual( Stem("sottrattà"), "sottratt");});
test("sottratti -> sottratt", function() {deepEqual( Stem("sottratti"), "sottratt");});
test("sottrazione -> sottrazion", function() {deepEqual( Stem("sottrazione"), "sottrazion");});
test("sottrazioni -> sottrazion", function() {deepEqual( Stem("sottrazioni"), "sottrazion");});
test("sottrici -> sottric", function() {deepEqual( Stem("sottrici"), "sottric");});
test("sottufficiali -> sottufficial", function() {deepEqual( Stem("sottufficiali"), "sottufficial");});
test("sottuficiali -> sottuficial", function() {deepEqual( Stem("sottuficiali"), "sottuficial");});
test("sousa -> sous", function() {deepEqual( Stem("sousa"), "sous");});
test("souzhou -> souzhou", function() {deepEqual( Stem("souzhou"), "souzhou");});
test("sovente -> sovent", function() {deepEqual( Stem("sovente"), "sovent");});
test("soverato -> sover", function() {deepEqual( Stem("soverato"), "sover");});
test("soverchiare -> soverc", function() {deepEqual( Stem("soverchiare"), "soverc");});
test("soverchiarsi -> soverc", function() {deepEqual( Stem("soverchiarsi"), "soverc");});
test("soverchiasse -> soverc", function() {deepEqual( Stem("soverchiasse"), "soverc");});
test("soverchiatore -> soverc", function() {deepEqual( Stem("soverchiatore"), "soverc");});
test("soverchiatori -> soverc", function() {deepEqual( Stem("soverchiatori"), "soverc");});
test("soverchieria -> soverchier", function() {deepEqual( Stem("soverchieria"), "soverchier");});
test("soverchierie -> soverchier", function() {deepEqual( Stem("soverchierie"), "soverchier");});
test("sovietica -> soviet", function() {deepEqual( Stem("sovietica"), "soviet");});
test("sovietiche -> soviet", function() {deepEqual( Stem("sovietiche"), "soviet");});
test("sovietici -> soviet", function() {deepEqual( Stem("sovietici"), "soviet");});
test("sovietico -> soviet", function() {deepEqual( Stem("sovietico"), "soviet");});
test("sovrani -> sovran", function() {deepEqual( Stem("sovrani"), "sovran");});
test("sovranità -> sovran", function() {deepEqual( Stem("sovranità"), "sovran");});
test("sovrano -> sovr", function() {deepEqual( Stem("sovrano"), "sovr");});
test("sovrappopolazione -> sovrappopol", function() {deepEqual( Stem("sovrappopolazione"), "sovrappopol");});
test("sovrapporre -> sovrapporr", function() {deepEqual( Stem("sovrapporre"), "sovrapporr");});
test("sovrapposti -> sovrappost", function() {deepEqual( Stem("sovrapposti"), "sovrappost");});
test("sovrapproduzioni -> sovrapprodu", function() {deepEqual( Stem("sovrapproduzioni"), "sovrapprodu");});
test("sovraregionali -> sovraregional", function() {deepEqual( Stem("sovraregionali"), "sovraregional");});
test("sovrastanti -> sovrast", function() {deepEqual( Stem("sovrastanti"), "sovrast");});
test("sovrastata -> sovrast", function() {deepEqual( Stem("sovrastata"), "sovrast");});
test("sovrastato -> sovrast", function() {deepEqual( Stem("sovrastato"), "sovrast");});
test("sovrastava -> sovrast", function() {deepEqual( Stem("sovrastava"), "sovrast");});
test("sovrintendente -> sovrintendent", function() {deepEqual( Stem("sovrintendente"), "sovrintendent");});
test("sovrintendevano -> sovrintend", function() {deepEqual( Stem("sovrintendevano"), "sovrintend");});
test("sovrumana -> sovruman", function() {deepEqual( Stem("sovrumana"), "sovruman");});
test("sovvenne -> sovvenn", function() {deepEqual( Stem("sovvenne"), "sovvenn");});
test("sovvenzione -> sovvenzion", function() {deepEqual( Stem("sovvenzione"), "sovvenzion");});
test("sovvenzioni -> sovvenzion", function() {deepEqual( Stem("sovvenzioni"), "sovvenzion");});
test("sozzi -> sozz", function() {deepEqual( Stem("sozzi"), "sozz");});
test("sozzo -> sozz", function() {deepEqual( Stem("sozzo"), "sozz");});
test("sp -> sp", function() {deepEqual( Stem("sp"), "sp");});
test("spa -> spa", function() {deepEqual( Stem("spa"), "spa");});
test("spaak -> spaak", function() {deepEqual( Stem("spaak"), "spaak");});
test("spaccare -> spacc", function() {deepEqual( Stem("spaccare"), "spacc");});
test("spaccati -> spacc", function() {deepEqual( Stem("spaccati"), "spacc");});
test("spaccatura -> spaccatur", function() {deepEqual( Stem("spaccatura"), "spaccatur");});
test("spaccature -> spaccatur", function() {deepEqual( Stem("spaccature"), "spaccatur");});
test("spaccia -> spacc", function() {deepEqual( Stem("spaccia"), "spacc");});
test("spacciar -> spacc", function() {deepEqual( Stem("spacciar"), "spacc");});
test("spacciavano -> spacc", function() {deepEqual( Stem("spacciavano"), "spacc");});
test("spaccone -> spaccon", function() {deepEqual( Stem("spaccone"), "spaccon");});
test("spada -> spad", function() {deepEqual( Stem("spada"), "spad");});
test("spadafora -> spadafor", function() {deepEqual( Stem("spadafora"), "spadafor");});
test("spadaio -> spadai", function() {deepEqual( Stem("spadaio"), "spadai");});
test("spade -> spad", function() {deepEqual( Stem("spade"), "spad");});
test("spadone -> spadon", function() {deepEqual( Stem("spadone"), "spadon");});
test("spadoni -> spadon", function() {deepEqual( Stem("spadoni"), "spadon");});
test("spaggiari -> spaggiar", function() {deepEqual( Stem("spaggiari"), "spaggiar");});
test("spagna -> spagn", function() {deepEqual( Stem("spagna"), "spagn");});
test("spagnola -> spagnol", function() {deepEqual( Stem("spagnola"), "spagnol");});
test("spagnolescamente -> spagnolesc", function() {deepEqual( Stem("spagnolescamente"), "spagnolesc");});
test("spagnoli -> spagnol", function() {deepEqual( Stem("spagnoli"), "spagnol");});
test("spagnolo -> spagnol", function() {deepEqual( Stem("spagnolo"), "spagnol");});
test("spagnulo -> spagnul", function() {deepEqual( Stem("spagnulo"), "spagnul");});
test("spago -> spag", function() {deepEqual( Stem("spago"), "spag");});
test("spal -> spal", function() {deepEqual( Stem("spal"), "spal");});
test("spalanca -> spalanc", function() {deepEqual( Stem("spalanca"), "spalanc");});
test("spalancan -> spalancan", function() {deepEqual( Stem("spalancan"), "spalancan");});
test("spalancando -> spalanc", function() {deepEqual( Stem("spalancando"), "spalanc");});
test("spalancarsi -> spalanc", function() {deepEqual( Stem("spalancarsi"), "spalanc");});
test("spalancata -> spalanc", function() {deepEqual( Stem("spalancata"), "spalanc");});
test("spalancate -> spalanc", function() {deepEqual( Stem("spalancate"), "spalanc");});
test("spalancati -> spalanc", function() {deepEqual( Stem("spalancati"), "spalanc");});
test("spalancato -> spalanc", function() {deepEqual( Stem("spalancato"), "spalanc");});
test("spalancava -> spalanc", function() {deepEqual( Stem("spalancava"), "spalanc");});
test("spalancò -> spalanc", function() {deepEqual( Stem("spalancò"), "spalanc");});
test("spalla -> spall", function() {deepEqual( Stem("spalla"), "spall");});
test("spalle -> spall", function() {deepEqual( Stem("spalle"), "spall");});
test("spalleggiano -> spallegg", function() {deepEqual( Stem("spalleggiano"), "spallegg");});
test("spalleggiati -> spallegg", function() {deepEqual( Stem("spalleggiati"), "spallegg");});
test("spalliera -> spallier", function() {deepEqual( Stem("spalliera"), "spallier");});
test("spallone -> spallon", function() {deepEqual( Stem("spallone"), "spallon");});
test("spalti -> spalt", function() {deepEqual( Stem("spalti"), "spalt");});
test("spander -> spander", function() {deepEqual( Stem("spander"), "spander");});
test("spandersi -> spand", function() {deepEqual( Stem("spandersi"), "spand");});
test("spandeva -> spand", function() {deepEqual( Stem("spandeva"), "spand");});
test("spandevano -> spand", function() {deepEqual( Stem("spandevano"), "spand");});
test("spandino -> spandin", function() {deepEqual( Stem("spandino"), "spandin");});
test("spanu -> spanu", function() {deepEqual( Stem("spanu"), "spanu");});
test("spaolo -> spaol", function() {deepEqual( Stem("spaolo"), "spaol");});
test("sparando -> spar", function() {deepEqual( Stem("sparando"), "spar");});
test("sparare -> spar", function() {deepEqual( Stem("sparare"), "spar");});
test("sparata -> spar", function() {deepEqual( Stem("sparata"), "spar");});
test("sparato -> spar", function() {deepEqual( Stem("sparato"), "spar");});
test("sparatogli -> sparatogl", function() {deepEqual( Stem("sparatogli"), "sparatogl");});
test("sparatoria -> sparator", function() {deepEqual( Stem("sparatoria"), "sparator");});
test("sparatorie -> sparator", function() {deepEqual( Stem("sparatorie"), "sparator");});
test("sparava -> spar", function() {deepEqual( Stem("sparava"), "spar");});
test("sparecchiare -> sparecc", function() {deepEqual( Stem("sparecchiare"), "sparecc");});
test("sparecchiato -> sparecc", function() {deepEqual( Stem("sparecchiato"), "sparecc");});
test("sparge -> sparg", function() {deepEqual( Stem("sparge"), "sparg");});
test("sparger -> sparger", function() {deepEqual( Stem("sparger"), "sparger");});
test("spargerà -> sparg", function() {deepEqual( Stem("spargerà"), "sparg");});
test("spargere -> sparg", function() {deepEqual( Stem("spargere"), "sparg");});
test("spargersi -> sparg", function() {deepEqual( Stem("spargersi"), "sparg");});
test("spargeva -> sparg", function() {deepEqual( Stem("spargeva"), "sparg");});
test("spargimento -> sparg", function() {deepEqual( Stem("spargimento"), "sparg");});
test("spargono -> sparg", function() {deepEqual( Stem("spargono"), "sparg");});
test("spari -> spar", function() {deepEqual( Stem("spari"), "spar");});
test("sparir -> spar", function() {deepEqual( Stem("sparir"), "spar");});
test("spariranno -> spar", function() {deepEqual( Stem("spariranno"), "spar");});
test("sparire -> spar", function() {deepEqual( Stem("sparire"), "spar");});
test("sparisce -> spar", function() {deepEqual( Stem("sparisce"), "spar");});
test("spariscono -> spar", function() {deepEqual( Stem("spariscono"), "spar");});
test("sparite -> spar", function() {deepEqual( Stem("sparite"), "spar");});
test("spariti -> spar", function() {deepEqual( Stem("spariti"), "spar");});
test("sparito -> spar", function() {deepEqual( Stem("sparito"), "spar");});
test("spariva -> spar", function() {deepEqual( Stem("spariva"), "spar");});
test("sparizione -> sparizion", function() {deepEqual( Stem("sparizione"), "sparizion");});
test("sparò -> spar", function() {deepEqual( Stem("sparò"), "spar");});
test("sparpagliati -> sparpagl", function() {deepEqual( Stem("sparpagliati"), "sparpagl");});
test("sparpagliato -> sparpagl", function() {deepEqual( Stem("sparpagliato"), "sparpagl");});
test("sparpagliò -> sparpagl", function() {deepEqual( Stem("sparpagliò"), "sparpagl");});
test("sparsa -> spars", function() {deepEqual( Stem("sparsa"), "spars");});
test("sparsavi -> spars", function() {deepEqual( Stem("sparsavi"), "spars");});
test("sparse -> spars", function() {deepEqual( Stem("sparse"), "spars");});
test("sparsero -> sparser", function() {deepEqual( Stem("sparsero"), "sparser");});
test("sparsi -> spars", function() {deepEqual( Stem("sparsi"), "spars");});
test("sparsim -> sparsim", function() {deepEqual( Stem("sparsim"), "sparsim");});
test("sparso -> spars", function() {deepEqual( Stem("sparso"), "spars");});
test("spartire -> spart", function() {deepEqual( Stem("spartire"), "spart");});
test("spartiti -> spart", function() {deepEqual( Stem("spartiti"), "spart");});
test("spartitoria -> spartitor", function() {deepEqual( Stem("spartitoria"), "spartitor");});
test("spartizione -> spartizion", function() {deepEqual( Stem("spartizione"), "spartizion");});
test("spasimi -> spasim", function() {deepEqual( Stem("spasimi"), "spasim");});
test("spasimo -> spasim", function() {deepEqual( Stem("spasimo"), "spasim");});
test("spassi -> spass", function() {deepEqual( Stem("spassi"), "spass");});
test("spassionato -> spassion", function() {deepEqual( Stem("spassionato"), "spassion");});
test("spasso -> spass", function() {deepEqual( Stem("spasso"), "spass");});
test("spatari -> spatar", function() {deepEqual( Stem("spatari"), "spatar");});
test("spatio -> spat", function() {deepEqual( Stem("spatio"), "spat");});
test("spatriarsi -> spatr", function() {deepEqual( Stem("spatriarsi"), "spatr");});
test("spaulding -> spaulding", function() {deepEqual( Stem("spaulding"), "spaulding");});
test("spauracchi -> spauracc", function() {deepEqual( Stem("spauracchi"), "spauracc");});
test("spauracchio -> spauracc", function() {deepEqual( Stem("spauracchio"), "spauracc");});
test("spauriti -> spaur", function() {deepEqual( Stem("spauriti"), "spaur");});
test("spaventare -> spavent", function() {deepEqual( Stem("spaventare"), "spavent");});
test("spaventarsi -> spavent", function() {deepEqual( Stem("spaventarsi"), "spavent");});
test("spaventata -> spavent", function() {deepEqual( Stem("spaventata"), "spavent");});
test("spaventati -> spavent", function() {deepEqual( Stem("spaventati"), "spavent");});
test("spaventato -> spavent", function() {deepEqual( Stem("spaventato"), "spavent");});
test("spaventava -> spavent", function() {deepEqual( Stem("spaventava"), "spavent");});
test("spaventevole -> spaventevol", function() {deepEqual( Stem("spaventevole"), "spaventevol");});
test("spaventi -> spavent", function() {deepEqual( Stem("spaventi"), "spavent");});
test("spavento -> spavent", function() {deepEqual( Stem("spavento"), "spavent");});
test("spaventò -> spavent", function() {deepEqual( Stem("spaventò"), "spavent");});
test("spaventosa -> spavent", function() {deepEqual( Stem("spaventosa"), "spavent");});
test("spaventosamente -> spavent", function() {deepEqual( Stem("spaventosamente"), "spavent");});
test("spaventosi -> spavent", function() {deepEqual( Stem("spaventosi"), "spavent");});
test("spaventoso -> spavent", function() {deepEqual( Stem("spaventoso"), "spavent");});
test("spazi -> spaz", function() {deepEqual( Stem("spazi"), "spaz");});
test("spazia -> spaz", function() {deepEqual( Stem("spazia"), "spaz");});
test("spaziale -> spazial", function() {deepEqual( Stem("spaziale"), "spazial");});
test("spazio -> spaz", function() {deepEqual( Stem("spazio"), "spaz");});
test("spaziose -> spazios", function() {deepEqual( Stem("spaziose"), "spazios");});
test("spazza -> spazz", function() {deepEqual( Stem("spazza"), "spazz");});
test("spazzando -> spazz", function() {deepEqual( Stem("spazzando"), "spazz");});
test("spazzar -> spazz", function() {deepEqual( Stem("spazzar"), "spazz");});
test("spazzarla -> spazz", function() {deepEqual( Stem("spazzarla"), "spazz");});
test("spazzato -> spazz", function() {deepEqual( Stem("spazzato"), "spazz");});
test("spc -> spc", function() {deepEqual( Stem("spc"), "spc");});
test("spd -> spd", function() {deepEqual( Stem("spd"), "spd");});
test("spe -> spe", function() {deepEqual( Stem("spe"), "spe");});
test("speaker -> speaker", function() {deepEqual( Stem("speaker"), "speaker");});
test("specchi -> specc", function() {deepEqual( Stem("specchi"), "specc");});
test("specchia -> specc", function() {deepEqual( Stem("specchia"), "specc");});
test("specchiava -> specc", function() {deepEqual( Stem("specchiava"), "specc");});
test("specchio -> specc", function() {deepEqual( Stem("specchio"), "specc");});
test("speci -> spec", function() {deepEqual( Stem("speci"), "spec");});
test("special -> special", function() {deepEqual( Stem("special"), "special");});
test("speciale -> special", function() {deepEqual( Stem("speciale"), "special");});
test("speciali -> special", function() {deepEqual( Stem("speciali"), "special");});
test("specialista -> special", function() {deepEqual( Stem("specialista"), "special");});
test("specialisti -> special", function() {deepEqual( Stem("specialisti"), "special");});
test("specialistiche -> specialist", function() {deepEqual( Stem("specialistiche"), "specialist");});
test("specialità -> special", function() {deepEqual( Stem("specialità"), "special");});
test("specializzata -> specializz", function() {deepEqual( Stem("specializzata"), "specializz");});
test("specializzato -> specializz", function() {deepEqual( Stem("specializzato"), "specializz");});
test("specializzazione -> specializz", function() {deepEqual( Stem("specializzazione"), "specializz");});
test("specializzazioni -> specializz", function() {deepEqual( Stem("specializzazioni"), "specializz");});
test("specialmente -> special", function() {deepEqual( Stem("specialmente"), "special");});
test("specie -> spec", function() {deepEqual( Stem("specie"), "spec");});
test("specifica -> specif", function() {deepEqual( Stem("specifica"), "specif");});
test("specificamente -> specif", function() {deepEqual( Stem("specificamente"), "specif");});
test("specificando -> specific", function() {deepEqual( Stem("specificando"), "specific");});
test("specificare -> specific", function() {deepEqual( Stem("specificare"), "specific");});
test("specificata -> specific", function() {deepEqual( Stem("specificata"), "specific");});
test("specificatamente -> specificat", function() {deepEqual( Stem("specificatamente"), "specificat");});
test("specificati -> specific", function() {deepEqual( Stem("specificati"), "specific");});
test("specificato -> specific", function() {deepEqual( Stem("specificato"), "specific");});
test("specificavano -> specific", function() {deepEqual( Stem("specificavano"), "specific");});
test("specifiche -> specif", function() {deepEqual( Stem("specifiche"), "specif");});
test("specifici -> specif", function() {deepEqual( Stem("specifici"), "specif");});
test("specificità -> specif", function() {deepEqual( Stem("specificità"), "specif");});
test("specifico -> specif", function() {deepEqual( Stem("specifico"), "specif");});
test("speculare -> specul", function() {deepEqual( Stem("speculare"), "specul");});
test("speculari -> specular", function() {deepEqual( Stem("speculari"), "specular");});
test("speculativo -> specul", function() {deepEqual( Stem("speculativo"), "specul");});
test("speculatori -> specul", function() {deepEqual( Stem("speculatori"), "specul");});
test("speculazione -> specul", function() {deepEqual( Stem("speculazione"), "specul");});
test("speculazioni -> specul", function() {deepEqual( Stem("speculazioni"), "specul");});
test("spedale -> spedal", function() {deepEqual( Stem("spedale"), "spedal");});
test("spedì -> sped", function() {deepEqual( Stem("spedì"), "sped");});
test("spedir -> sped", function() {deepEqual( Stem("spedir"), "sped");});
test("spedire -> sped", function() {deepEqual( Stem("spedire"), "sped");});
test("spedirlo -> sped", function() {deepEqual( Stem("spedirlo"), "sped");});
test("spediron -> spediron", function() {deepEqual( Stem("spediron"), "spediron");});
test("spedirono -> sped", function() {deepEqual( Stem("spedirono"), "sped");});
test("spedisca -> sped", function() {deepEqual( Stem("spedisca"), "sped");});
test("spediscono -> sped", function() {deepEqual( Stem("spediscono"), "sped");});
test("spedisse -> spediss", function() {deepEqual( Stem("spedisse"), "spediss");});
test("spedita -> sped", function() {deepEqual( Stem("spedita"), "sped");});
test("speditamente -> spedit", function() {deepEqual( Stem("speditamente"), "spedit");});
test("speditane -> speditan", function() {deepEqual( Stem("speditane"), "speditan");});
test("spediti -> sped", function() {deepEqual( Stem("spediti"), "sped");});
test("speditivo -> spedit", function() {deepEqual( Stem("speditivo"), "spedit");});
test("spedito -> sped", function() {deepEqual( Stem("spedito"), "sped");});
test("spedizione -> spedizion", function() {deepEqual( Stem("spedizione"), "spedizion");});
test("spedizioni -> spedizion", function() {deepEqual( Stem("spedizioni"), "spedizion");});
test("speed -> speed", function() {deepEqual( Stem("speed"), "speed");});
test("spegnendo -> spegn", function() {deepEqual( Stem("spegnendo"), "spegn");});
test("spegner -> spegner", function() {deepEqual( Stem("spegner"), "spegner");});
test("spegnere -> spegn", function() {deepEqual( Stem("spegnere"), "spegn");});
test("spegnersi -> spegn", function() {deepEqual( Stem("spegnersi"), "spegn");});
test("spegnervi -> spegn", function() {deepEqual( Stem("spegnervi"), "spegn");});
test("spegnesse -> spegness", function() {deepEqual( Stem("spegnesse"), "spegness");});
test("spegnimento -> spegn", function() {deepEqual( Stem("spegnimento"), "spegn");});
test("speice -> speic", function() {deepEqual( Stem("speice"), "speic");});
test("spelacchiata -> spelacc", function() {deepEqual( Stem("spelacchiata"), "spelacc");});
test("spelacchiati -> spelacc", function() {deepEqual( Stem("spelacchiati"), "spelacc");});
test("spendendo -> spend", function() {deepEqual( Stem("spendendo"), "spend");});
test("spender -> spender", function() {deepEqual( Stem("spender"), "spender");});
test("spendere -> spend", function() {deepEqual( Stem("spendere"), "spend");});
test("spenderebbe -> spend", function() {deepEqual( Stem("spenderebbe"), "spend");});
test("spenderli -> spend", function() {deepEqual( Stem("spenderli"), "spend");});
test("spenderlo -> spend", function() {deepEqual( Stem("spenderlo"), "spend");});
test("spenderò -> spend", function() {deepEqual( Stem("spenderò"), "spend");});
test("spendevano -> spend", function() {deepEqual( Stem("spendevano"), "spend");});
test("spendiamo -> spend", function() {deepEqual( Stem("spendiamo"), "spend");});
test("spennacchiati -> spennacc", function() {deepEqual( Stem("spennacchiati"), "spennacc");});
test("spennacchiato -> spennacc", function() {deepEqual( Stem("spennacchiato"), "spennacc");});
test("spensierata -> spensier", function() {deepEqual( Stem("spensierata"), "spensier");});
test("spensierato -> spensier", function() {deepEqual( Stem("spensierato"), "spensier");});
test("spenta -> spent", function() {deepEqual( Stem("spenta"), "spent");});
test("spenti -> spent", function() {deepEqual( Stem("spenti"), "spent");});
test("spento -> spent", function() {deepEqual( Stem("spento"), "spent");});
test("spenzolata -> spenzol", function() {deepEqual( Stem("spenzolata"), "spenzol");});
test("spenzolate -> spenzol", function() {deepEqual( Stem("spenzolate"), "spenzol");});
test("spenzolava -> spenzol", function() {deepEqual( Stem("spenzolava"), "spenzol");});
test("spenzolavano -> spenzol", function() {deepEqual( Stem("spenzolavano"), "spenzol");});
test("spera -> sper", function() {deepEqual( Stem("spera"), "sper");});
test("sperando -> sper", function() {deepEqual( Stem("sperando"), "sper");});
test("sperano -> sper", function() {deepEqual( Stem("sperano"), "sper");});
test("speranza -> speranz", function() {deepEqual( Stem("speranza"), "speranz");});
test("speranze -> speranz", function() {deepEqual( Stem("speranze"), "speranz");});
test("sperar -> sper", function() {deepEqual( Stem("sperar"), "sper");});
test("sperare -> sper", function() {deepEqual( Stem("sperare"), "sper");});
test("sperarlo -> sper", function() {deepEqual( Stem("sperarlo"), "sper");});
test("sperasse -> sper", function() {deepEqual( Stem("sperasse"), "sper");});
test("sperati -> sper", function() {deepEqual( Stem("sperati"), "sper");});
test("sperato -> sper", function() {deepEqual( Stem("sperato"), "sper");});
test("sperava -> sper", function() {deepEqual( Stem("sperava"), "sper");});
test("speravo -> sper", function() {deepEqual( Stem("speravo"), "sper");});
test("sperdute -> sperd", function() {deepEqual( Stem("sperdute"), "sperd");});
test("speriamo -> sper", function() {deepEqual( Stem("speriamo"), "sper");});
test("spericolata -> spericol", function() {deepEqual( Stem("spericolata"), "spericol");});
test("sperimentale -> sperimental", function() {deepEqual( Stem("sperimentale"), "sperimental");});
test("sperimentati -> speriment", function() {deepEqual( Stem("sperimentati"), "speriment");});
test("sperimentato -> speriment", function() {deepEqual( Stem("sperimentato"), "speriment");});
test("spero -> sper", function() {deepEqual( Stem("spero"), "sper");});
test("speroni -> speron", function() {deepEqual( Stem("speroni"), "speron");});
test("sperperìo -> sperperì", function() {deepEqual( Stem("sperperìo"), "sperperì");});
test("sperpero -> sperper", function() {deepEqual( Stem("sperpero"), "sperper");});
test("sperticate -> spertic", function() {deepEqual( Stem("sperticate"), "spertic");});
test("spesa -> spes", function() {deepEqual( Stem("spesa"), "spes");});
test("spese -> spes", function() {deepEqual( Stem("spese"), "spes");});
test("spesi -> spes", function() {deepEqual( Stem("spesi"), "spes");});
test("speso -> spes", function() {deepEqual( Stem("speso"), "spes");});
test("spesso -> spess", function() {deepEqual( Stem("spesso"), "spess");});
test("spetta -> spett", function() {deepEqual( Stem("spetta"), "spett");});
test("spettabili -> spettabil", function() {deepEqual( Stem("spettabili"), "spettabil");});
test("spettacolare -> spettacol", function() {deepEqual( Stem("spettacolare"), "spettacol");});
test("spettacolarizzazione -> spettacolarizz", function() {deepEqual( Stem("spettacolarizzazione"), "spettacolarizz");});
test("spettacoli -> spettacol", function() {deepEqual( Stem("spettacoli"), "spettacol");});
test("spettacolo -> spettacol", function() {deepEqual( Stem("spettacolo"), "spettacol");});
test("spettante -> spettant", function() {deepEqual( Stem("spettante"), "spettant");});
test("spettatore -> spettator", function() {deepEqual( Stem("spettatore"), "spettator");});
test("spettatori -> spettator", function() {deepEqual( Stem("spettatori"), "spettator");});
test("spetterà -> spett", function() {deepEqual( Stem("spetterà"), "spett");});
test("spettro -> spettr", function() {deepEqual( Stem("spettro"), "spettr");});
test("spezia -> spez", function() {deepEqual( Stem("spezia"), "spez");});
test("speziale -> spezial", function() {deepEqual( Stem("speziale"), "spezial");});
test("spezzano -> spezz", function() {deepEqual( Stem("spezzano"), "spezz");});
test("spezzare -> spezz", function() {deepEqual( Stem("spezzare"), "spezz");});
test("spezzarlo -> spezz", function() {deepEqual( Stem("spezzarlo"), "spezz");});
test("spezzate -> spezz", function() {deepEqual( Stem("spezzate"), "spezz");});
test("spezzato -> spezz", function() {deepEqual( Stem("spezzato"), "spezz");});
test("spezzerò -> spezz", function() {deepEqual( Stem("spezzerò"), "spezz");});
test("spezzone -> spezzon", function() {deepEqual( Stem("spezzone"), "spezzon");});
test("spezzoni -> spezzon", function() {deepEqual( Stem("spezzoni"), "spezzon");});
test("spia -> spi", function() {deepEqual( Stem("spia"), "spi");});
test("spiacevole -> spiacevol", function() {deepEqual( Stem("spiacevole"), "spiacevol");});
test("spiacevoli -> spiacevol", function() {deepEqual( Stem("spiacevoli"), "spiacevol");});
test("spiagge -> spiagg", function() {deepEqual( Stem("spiagge"), "spiagg");});
test("spiaggia -> spiagg", function() {deepEqual( Stem("spiaggia"), "spiagg");});
test("spianando -> spian", function() {deepEqual( Stem("spianando"), "spian");});
test("spianargli -> spian", function() {deepEqual( Stem("spianargli"), "spian");});
test("spianarsi -> spian", function() {deepEqual( Stem("spianarsi"), "spian");});
test("spianata -> spian", function() {deepEqual( Stem("spianata"), "spian");});
test("spianate -> spian", function() {deepEqual( Stem("spianate"), "spian");});
test("spianati -> spian", function() {deepEqual( Stem("spianati"), "spian");});
test("spianato -> spian", function() {deepEqual( Stem("spianato"), "spian");});
test("spianava -> spian", function() {deepEqual( Stem("spianava"), "spian");});
test("spiando -> spi", function() {deepEqual( Stem("spiando"), "spi");});
test("spianti -> spiant", function() {deepEqual( Stem("spianti"), "spiant");});
test("spiare -> spi", function() {deepEqual( Stem("spiare"), "spi");});
test("spiattellar -> spiattell", function() {deepEqual( Stem("spiattellar"), "spiattell");});
test("spiattellargli -> spiattell", function() {deepEqual( Stem("spiattellargli"), "spiattell");});
test("spiattellato -> spiattell", function() {deepEqual( Stem("spiattellato"), "spiattell");});
test("spiava -> spi", function() {deepEqual( Stem("spiava"), "spi");});
test("spiazzare -> spiazz", function() {deepEqual( Stem("spiazzare"), "spiazz");});
test("spiazzo -> spiazz", function() {deepEqual( Stem("spiazzo"), "spiazz");});
test("spicca -> spicc", function() {deepEqual( Stem("spicca"), "spicc");});
test("spiccando -> spicc", function() {deepEqual( Stem("spiccando"), "spicc");});
test("spiccata -> spicc", function() {deepEqual( Stem("spiccata"), "spicc");});
test("spiccato -> spicc", function() {deepEqual( Stem("spiccato"), "spicc");});
test("spiccava -> spicc", function() {deepEqual( Stem("spiccava"), "spicc");});
test("spiccavano -> spicc", function() {deepEqual( Stem("spiccavano"), "spicc");});
test("spicci -> spicc", function() {deepEqual( Stem("spicci"), "spicc");});
test("spicciar -> spicc", function() {deepEqual( Stem("spicciar"), "spicc");});
test("spicciare -> spicc", function() {deepEqual( Stem("spicciare"), "spicc");});
test("spicciarmi -> spicc", function() {deepEqual( Stem("spicciarmi"), "spicc");});
test("spicciarsi -> spicc", function() {deepEqual( Stem("spicciarsi"), "spicc");});
test("spicciarti -> spicc", function() {deepEqual( Stem("spicciarti"), "spicc");});
test("spicciatevi -> spicciat", function() {deepEqual( Stem("spicciatevi"), "spicciat");});
test("spicciato -> spicc", function() {deepEqual( Stem("spicciato"), "spicc");});
test("spicciola -> spicciol", function() {deepEqual( Stem("spicciola"), "spicciol");});
test("spicciolare -> spicciol", function() {deepEqual( Stem("spicciolare"), "spicciol");});
test("spicciolata -> spicciol", function() {deepEqual( Stem("spicciolata"), "spicciol");});
test("spicciolati -> spicciol", function() {deepEqual( Stem("spicciolati"), "spicciol");});
test("spicco -> spicc", function() {deepEqual( Stem("spicco"), "spicc");});
test("spiccò -> spicc", function() {deepEqual( Stem("spiccò"), "spicc");});
test("spie -> spi", function() {deepEqual( Stem("spie"), "spi");});
test("spiega -> spieg", function() {deepEqual( Stem("spiega"), "spieg");});
test("spiegando -> spieg", function() {deepEqual( Stem("spiegando"), "spieg");});
test("spiegandosi -> spieg", function() {deepEqual( Stem("spiegandosi"), "spieg");});
test("spiegano -> spieg", function() {deepEqual( Stem("spiegano"), "spieg");});
test("spiegar -> spieg", function() {deepEqual( Stem("spiegar"), "spieg");});
test("spiegare -> spieg", function() {deepEqual( Stem("spiegare"), "spieg");});
test("spiegargli -> spieg", function() {deepEqual( Stem("spiegargli"), "spieg");});
test("spiegarlo -> spieg", function() {deepEqual( Stem("spiegarlo"), "spieg");});
test("spiegarsi -> spieg", function() {deepEqual( Stem("spiegarsi"), "spieg");});
test("spiegarvi -> spieg", function() {deepEqual( Stem("spiegarvi"), "spieg");});
test("spiegasse -> spieg", function() {deepEqual( Stem("spiegasse"), "spieg");});
test("spiegata -> spieg", function() {deepEqual( Stem("spiegata"), "spieg");});
test("spiegatemi -> spiegatem", function() {deepEqual( Stem("spiegatemi"), "spiegatem");});
test("spiegato -> spieg", function() {deepEqual( Stem("spiegato"), "spieg");});
test("spiegava -> spieg", function() {deepEqual( Stem("spiegava"), "spieg");});
test("spiegazion -> spiegazion", function() {deepEqual( Stem("spiegazion"), "spiegazion");});
test("spiegazione -> spiegazion", function() {deepEqual( Stem("spiegazione"), "spiegazion");});
test("spiegazioni -> spiegazion", function() {deepEqual( Stem("spiegazioni"), "spiegazion");});
test("spiegel -> spiegel", function() {deepEqual( Stem("spiegel"), "spiegel");});
test("spieghi -> spieg", function() {deepEqual( Stem("spieghi"), "spieg");});
test("spiegò -> spieg", function() {deepEqual( Stem("spiegò"), "spieg");});
test("spielberg -> spielberg", function() {deepEqual( Stem("spielberg"), "spielberg");});
test("spierebbe -> spi", function() {deepEqual( Stem("spierebbe"), "spi");});
test("spietata -> spiet", function() {deepEqual( Stem("spietata"), "spiet");});
test("spietati -> spiet", function() {deepEqual( Stem("spietati"), "spiet");});
test("spigadoro -> spigador", function() {deepEqual( Stem("spigadoro"), "spigador");});
test("spighe -> spig", function() {deepEqual( Stem("spighe"), "spig");});
test("spighette -> spighett", function() {deepEqual( Stem("spighette"), "spighett");});
test("spillare -> spill", function() {deepEqual( Stem("spillare"), "spill");});
test("spilli -> spill", function() {deepEqual( Stem("spilli"), "spill");});
test("spillo -> spill", function() {deepEqual( Stem("spillo"), "spill");});
test("spillò -> spill", function() {deepEqual( Stem("spillò"), "spill");});
test("spilluzzicando -> spilluzzic", function() {deepEqual( Stem("spilluzzicando"), "spilluzzic");});
test("spina -> spin", function() {deepEqual( Stem("spina"), "spin");});
test("spindler -> spindler", function() {deepEqual( Stem("spindler"), "spindler");});
test("spine -> spin", function() {deepEqual( Stem("spine"), "spin");});
test("spinelli -> spinell", function() {deepEqual( Stem("spinelli"), "spinell");});
test("spinge -> sping", function() {deepEqual( Stem("spinge"), "sping");});
test("spingendo -> sping", function() {deepEqual( Stem("spingendo"), "sping");});
test("spingendole -> sping", function() {deepEqual( Stem("spingendole"), "sping");});
test("spingendoli -> sping", function() {deepEqual( Stem("spingendoli"), "sping");});
test("spingendolo -> sping", function() {deepEqual( Stem("spingendolo"), "sping");});
test("spinger -> spinger", function() {deepEqual( Stem("spinger"), "spinger");});
test("spingerà -> sping", function() {deepEqual( Stem("spingerà"), "sping");});
test("spingere -> sping", function() {deepEqual( Stem("spingere"), "sping");});
test("spingerebbe -> sping", function() {deepEqual( Stem("spingerebbe"), "sping");});
test("spingerli -> sping", function() {deepEqual( Stem("spingerli"), "sping");});
test("spingeva -> sping", function() {deepEqual( Stem("spingeva"), "sping");});
test("spingevan -> spingevan", function() {deepEqual( Stem("spingevan"), "spingevan");});
test("spingon -> spingon", function() {deepEqual( Stem("spingon"), "spingon");});
test("spingono -> sping", function() {deepEqual( Stem("spingono"), "sping");});
test("spini -> spin", function() {deepEqual( Stem("spini"), "spin");});
test("spinola -> spinol", function() {deepEqual( Stem("spinola"), "spinol");});
test("spinosa -> spinos", function() {deepEqual( Stem("spinosa"), "spinos");});
test("spinose -> spinos", function() {deepEqual( Stem("spinose"), "spinos");});
test("spinse -> spins", function() {deepEqual( Stem("spinse"), "spins");});
test("spinsero -> spinser", function() {deepEqual( Stem("spinsero"), "spinser");});
test("spinta -> spint", function() {deepEqual( Stem("spinta"), "spint");});
test("spinte -> spint", function() {deepEqual( Stem("spinte"), "spint");});
test("spinti -> spint", function() {deepEqual( Stem("spinti"), "spint");});
test("spinto -> spint", function() {deepEqual( Stem("spinto"), "spint");});
test("spintonato -> spinton", function() {deepEqual( Stem("spintonato"), "spinton");});
test("spionaggio -> spionagg", function() {deepEqual( Stem("spionaggio"), "spionagg");});
test("spione -> spion", function() {deepEqual( Stem("spione"), "spion");});
test("spiovuto -> spiov", function() {deepEqual( Stem("spiovuto"), "spiov");});
test("spiraglio -> spiragl", function() {deepEqual( Stem("spiraglio"), "spiragl");});
test("spirale -> spiral", function() {deepEqual( Stem("spirale"), "spiral");});
test("spirate -> spir", function() {deepEqual( Stem("spirate"), "spir");});
test("spirato -> spir", function() {deepEqual( Stem("spirato"), "spir");});
test("spirava -> spir", function() {deepEqual( Stem("spirava"), "spir");});
test("spiravano -> spir", function() {deepEqual( Stem("spiravano"), "spir");});
test("spire -> spir", function() {deepEqual( Stem("spire"), "spir");});
test("spiritati -> spirit", function() {deepEqual( Stem("spiritati"), "spirit");});
test("spiritato -> spirit", function() {deepEqual( Stem("spiritato"), "spirit");});
test("spiriti -> spir", function() {deepEqual( Stem("spiriti"), "spir");});
test("spirito -> spir", function() {deepEqual( Stem("spirito"), "spir");});
test("spiritose -> spirit", function() {deepEqual( Stem("spiritose"), "spirit");});
test("spirituale -> spiritual", function() {deepEqual( Stem("spirituale"), "spiritual");});
test("spirituali -> spiritual", function() {deepEqual( Stem("spirituali"), "spiritual");});
test("spiritualità -> spiritual", function() {deepEqual( Stem("spiritualità"), "spiritual");});
test("spirò -> spir", function() {deepEqual( Stem("spirò"), "spir");});
test("spizzico -> spizzic", function() {deepEqual( Stem("spizzico"), "spizzic");});
test("splendida -> splendid", function() {deepEqual( Stem("splendida"), "splendid");});
test("splendidezza -> splendidezz", function() {deepEqual( Stem("splendidezza"), "splendidezz");});
test("splendidi -> splendid", function() {deepEqual( Stem("splendidi"), "splendid");});
test("splendido -> splendid", function() {deepEqual( Stem("splendido"), "splendid");});
test("splendore -> splendor", function() {deepEqual( Stem("splendore"), "splendor");});
test("spm -> spm", function() {deepEqual( Stem("spm"), "spm");});
test("spoglia -> spogl", function() {deepEqual( Stem("spoglia"), "spogl");});
test("spogliarello -> spogliarell", function() {deepEqual( Stem("spogliarello"), "spogliarell");});
test("spogliarmi -> spogl", function() {deepEqual( Stem("spogliarmi"), "spogl");});
test("spogliata -> spogl", function() {deepEqual( Stem("spogliata"), "spogl");});
test("spogliate -> spogl", function() {deepEqual( Stem("spogliate"), "spogl");});
test("spogliatevi -> spogliat", function() {deepEqual( Stem("spogliatevi"), "spogliat");});
test("spogliati -> spogl", function() {deepEqual( Stem("spogliati"), "spogl");});
test("spogliato -> spogl", function() {deepEqual( Stem("spogliato"), "spogl");});
test("spogliatoi -> spogliato", function() {deepEqual( Stem("spogliatoi"), "spogliato");});
test("spogliatolo -> spogliatol", function() {deepEqual( Stem("spogliatolo"), "spogliatol");});
test("spogliatosi -> spogliat", function() {deepEqual( Stem("spogliatosi"), "spogliat");});
test("spogliava -> spogl", function() {deepEqual( Stem("spogliava"), "spogl");});
test("spogliavano -> spogl", function() {deepEqual( Stem("spogliavano"), "spogl");});
test("spoglie -> spogl", function() {deepEqual( Stem("spoglie"), "spogl");});
test("spoldi -> spold", function() {deepEqual( Stem("spoldi"), "spold");});
test("spoleto -> spolet", function() {deepEqual( Stem("spoleto"), "spolet");});
test("spolverò -> spolv", function() {deepEqual( Stem("spolverò"), "spolv");});
test("sponda -> spond", function() {deepEqual( Stem("sponda"), "spond");});
test("sponde -> spond", function() {deepEqual( Stem("sponde"), "spond");});
test("spongia -> spong", function() {deepEqual( Stem("spongia"), "spong");});
test("sponsorizzato -> sponsorizz", function() {deepEqual( Stem("sponsorizzato"), "sponsorizz");});
test("spontanea -> spontane", function() {deepEqual( Stem("spontanea"), "spontane");});
test("spontaneamente -> spontan", function() {deepEqual( Stem("spontaneamente"), "spontan");});
test("spontanei -> spontane", function() {deepEqual( Stem("spontanei"), "spontane");});
test("spontaneo -> spontane", function() {deepEqual( Stem("spontaneo"), "spontane");});
test("spopolar -> spopol", function() {deepEqual( Stem("spopolar"), "spopol");});
test("spopolò -> spopol", function() {deepEqual( Stem("spopolò"), "spopol");});
test("sporchi -> sporc", function() {deepEqual( Stem("sporchi"), "sporc");});
test("sporchizie -> sporchiz", function() {deepEqual( Stem("sporchizie"), "sporchiz");});
test("sporco -> sporc", function() {deepEqual( Stem("sporco"), "sporc");});
test("sporge -> sporg", function() {deepEqual( Stem("sporge"), "sporg");});
test("sporgente -> sporgent", function() {deepEqual( Stem("sporgente"), "sporgent");});
test("sporgenti -> sporgent", function() {deepEqual( Stem("sporgenti"), "sporgent");});
test("sporgere -> sporg", function() {deepEqual( Stem("sporgere"), "sporg");});
test("sporgersi -> sporg", function() {deepEqual( Stem("sporgersi"), "sporg");});
test("sporgevan -> sporgevan", function() {deepEqual( Stem("sporgevan"), "sporgevan");});
test("sport -> sport", function() {deepEqual( Stem("sport"), "sport");});
test("sporta -> sport", function() {deepEqual( Stem("sporta"), "sport");});
test("sportelli -> sportell", function() {deepEqual( Stem("sportelli"), "sportell");});
test("sportellino -> sportellin", function() {deepEqual( Stem("sportellino"), "sportellin");});
test("sportello -> sportell", function() {deepEqual( Stem("sportello"), "sportell");});
test("sporting -> sporting", function() {deepEqual( Stem("sporting"), "sporting");});
test("sportiva -> sport", function() {deepEqual( Stem("sportiva"), "sport");});
test("sportive -> sportiv", function() {deepEqual( Stem("sportive"), "sportiv");});
test("sportivi -> sport", function() {deepEqual( Stem("sportivi"), "sport");});
test("sportività -> sportiv", function() {deepEqual( Stem("sportività"), "sportiv");});
test("sportivo -> sport", function() {deepEqual( Stem("sportivo"), "sport");});
test("sposa -> spos", function() {deepEqual( Stem("sposa"), "spos");});
test("sposalizio -> sposaliz", function() {deepEqual( Stem("sposalizio"), "sposaliz");});
test("sposare -> spos", function() {deepEqual( Stem("sposare"), "spos");});
test("sposarlo -> spos", function() {deepEqual( Stem("sposarlo"), "spos");});
test("sposarsi -> spos", function() {deepEqual( Stem("sposarsi"), "spos");});
test("sposata -> spos", function() {deepEqual( Stem("sposata"), "spos");});
test("sposato -> spos", function() {deepEqual( Stem("sposato"), "spos");});
test("spose -> spos", function() {deepEqual( Stem("spose"), "spos");});
test("sposi -> spos", function() {deepEqual( Stem("sposi"), "spos");});
test("sposina -> sposin", function() {deepEqual( Stem("sposina"), "sposin");});
test("sposini -> sposin", function() {deepEqual( Stem("sposini"), "sposin");});
test("sposo -> spos", function() {deepEqual( Stem("sposo"), "spos");});
test("spossati -> sposs", function() {deepEqual( Stem("spossati"), "sposs");});
test("sposta -> spost", function() {deepEqual( Stem("sposta"), "spost");});
test("spostamento -> spost", function() {deepEqual( Stem("spostamento"), "spost");});
test("spostando -> spost", function() {deepEqual( Stem("spostando"), "spost");});
test("spostano -> spost", function() {deepEqual( Stem("spostano"), "spost");});
test("spostato -> spost", function() {deepEqual( Stem("spostato"), "spost");});
test("spostava -> spost", function() {deepEqual( Stem("spostava"), "spost");});
test("spot -> spot", function() {deepEqual( Stem("spot"), "spot");});
test("spr -> spr", function() {deepEqual( Stem("spr"), "spr");});
test("spranghetta -> spranghett", function() {deepEqual( Stem("spranghetta"), "spranghett");});
test("spray -> spray", function() {deepEqual( Stem("spray"), "spray");});
test("sprazzo -> sprazz", function() {deepEqual( Stem("sprazzo"), "sprazz");});
test("sprecano -> sprec", function() {deepEqual( Stem("sprecano"), "sprec");});
test("sprecate -> sprec", function() {deepEqual( Stem("sprecate"), "sprec");});
test("sprecato -> sprec", function() {deepEqual( Stem("sprecato"), "sprec");});
test("sprecava -> sprec", function() {deepEqual( Stem("sprecava"), "sprec");});
test("sprechi -> sprec", function() {deepEqual( Stem("sprechi"), "sprec");});
test("spreco -> sprec", function() {deepEqual( Stem("spreco"), "sprec");});
test("sprecone -> sprecon", function() {deepEqual( Stem("sprecone"), "sprecon");});
test("spred -> spred", function() {deepEqual( Stem("spred"), "spred");});
test("spregevole -> spregevol", function() {deepEqual( Stem("spregevole"), "spregevol");});
test("spremere -> sprem", function() {deepEqual( Stem("spremere"), "sprem");});
test("spremerne -> sprem", function() {deepEqual( Stem("spremerne"), "sprem");});
test("spremitura -> spremitur", function() {deepEqual( Stem("spremitura"), "spremitur");});
test("sprezzante -> sprezzant", function() {deepEqual( Stem("sprezzante"), "sprezzant");});
test("sprezzatura -> sprezzatur", function() {deepEqual( Stem("sprezzatura"), "sprezzatur");});
test("sprezzo -> sprezz", function() {deepEqual( Stem("sprezzo"), "sprezz");});
test("sprigiona -> sprigion", function() {deepEqual( Stem("sprigiona"), "sprigion");});
test("sprigionandosi -> sprigion", function() {deepEqual( Stem("sprigionandosi"), "sprigion");});
test("sprigionò -> sprigion", function() {deepEqual( Stem("sprigionò"), "sprigion");});
test("sprint -> sprint", function() {deepEqual( Stem("sprint"), "sprint");});
test("sprofondato -> sprofond", function() {deepEqual( Stem("sprofondato"), "sprofond");});
test("sprona -> spron", function() {deepEqual( Stem("sprona"), "spron");});
test("sproni -> spron", function() {deepEqual( Stem("sproni"), "spron");});
test("sproporzionato -> sproporzion", function() {deepEqual( Stem("sproporzionato"), "sproporzion");});
test("sproporzione -> sproporzion", function() {deepEqual( Stem("sproporzione"), "sproporzion");});
test("spropositato -> sproposit", function() {deepEqual( Stem("spropositato"), "sproposit");});
test("spropositava -> sproposit", function() {deepEqual( Stem("spropositava"), "sproposit");});
test("spropositi -> spropos", function() {deepEqual( Stem("spropositi"), "spropos");});
test("sproposito -> spropos", function() {deepEqual( Stem("sproposito"), "spropos");});
test("spropriarsi -> spropr", function() {deepEqual( Stem("spropriarsi"), "spropr");});
test("sproprio -> spropr", function() {deepEqual( Stem("sproprio"), "spropr");});
test("sprovveduta -> sprovved", function() {deepEqual( Stem("sprovveduta"), "sprovved");});
test("sprovvisto -> sprovvist", function() {deepEqual( Stem("sprovvisto"), "sprovvist");});
test("spugna -> spugn", function() {deepEqual( Stem("spugna"), "spugn");});
test("spugne -> spugn", function() {deepEqual( Stem("spugne"), "spugn");});
test("spumante -> spumant", function() {deepEqual( Stem("spumante"), "spumant");});
test("spunta -> spunt", function() {deepEqual( Stem("spunta"), "spunt");});
test("spuntano -> spunt", function() {deepEqual( Stem("spuntano"), "spunt");});
test("spuntar -> spunt", function() {deepEqual( Stem("spuntar"), "spunt");});
test("spuntare -> spunt", function() {deepEqual( Stem("spuntare"), "spunt");});
test("spuntargli -> spunt", function() {deepEqual( Stem("spuntargli"), "spunt");});
test("spuntarla -> spunt", function() {deepEqual( Stem("spuntarla"), "spunt");});
test("spuntarlo -> spunt", function() {deepEqual( Stem("spuntarlo"), "spunt");});
test("spuntati -> spunt", function() {deepEqual( Stem("spuntati"), "spunt");});
test("spuntava -> spunt", function() {deepEqual( Stem("spuntava"), "spunt");});
test("spunterebbe -> spunt", function() {deepEqual( Stem("spunterebbe"), "spunt");});
test("spunti -> spunt", function() {deepEqual( Stem("spunti"), "spunt");});
test("spunto -> spunt", function() {deepEqual( Stem("spunto"), "spunt");});
test("spuntò -> spunt", function() {deepEqual( Stem("spuntò"), "spunt");});
test("spurs -> spurs", function() {deepEqual( Stem("spurs"), "spurs");});
test("squadra -> squadr", function() {deepEqual( Stem("squadra"), "squadr");});
test("squadrando -> squadr", function() {deepEqual( Stem("squadrando"), "squadr");});
test("squadrandolo -> squadr", function() {deepEqual( Stem("squadrandolo"), "squadr");});
test("squadrati -> squadr", function() {deepEqual( Stem("squadrati"), "squadr");});
test("squadrato -> squadr", function() {deepEqual( Stem("squadrato"), "squadr");});
test("squadrava -> squadr", function() {deepEqual( Stem("squadrava"), "squadr");});
test("squadre -> squadr", function() {deepEqual( Stem("squadre"), "squadr");});
test("squadrò -> squadr", function() {deepEqual( Stem("squadrò"), "squadr");});
test("squadron -> squadron", function() {deepEqual( Stem("squadron"), "squadron");});
test("squadrone -> squadron", function() {deepEqual( Stem("squadrone"), "squadron");});
test("squalificati -> squalific", function() {deepEqual( Stem("squalificati"), "squalific");});
test("squalificato -> squalific", function() {deepEqual( Stem("squalificato"), "squalific");});
test("squallida -> squallid", function() {deepEqual( Stem("squallida"), "squallid");});
test("squallidamente -> squallid", function() {deepEqual( Stem("squallidamente"), "squallid");});
test("squallide -> squallid", function() {deepEqual( Stem("squallide"), "squallid");});
test("squallido -> squallid", function() {deepEqual( Stem("squallido"), "squallid");});
test("squarci -> squarc", function() {deepEqual( Stem("squarci"), "squarc");});
test("squarcio -> squarc", function() {deepEqual( Stem("squarcio"), "squarc");});
test("squartare -> squart", function() {deepEqual( Stem("squartare"), "squart");});
test("squartato -> squart", function() {deepEqual( Stem("squartato"), "squart");});
test("squilibri -> squilibr", function() {deepEqual( Stem("squilibri"), "squilibr");});
test("squilibrio -> squilibr", function() {deepEqual( Stem("squilibrio"), "squilibr");});
test("squillo -> squill", function() {deepEqual( Stem("squillo"), "squill");});
test("squinternotto -> squinternott", function() {deepEqual( Stem("squinternotto"), "squinternott");});
test("squisita -> squis", function() {deepEqual( Stem("squisita"), "squis");});
test("squisitamente -> squisit", function() {deepEqual( Stem("squisitamente"), "squisit");});
test("squisitezza -> squisitezz", function() {deepEqual( Stem("squisitezza"), "squisitezz");});
test("squisito -> squis", function() {deepEqual( Stem("squisito"), "squis");});
test("sradicamento -> sradic", function() {deepEqual( Stem("sradicamento"), "sradic");});
test("sregolati -> sregol", function() {deepEqual( Stem("sregolati"), "sregol");});
test("srna -> srna", function() {deepEqual( Stem("srna"), "srna");});
test("ss -> ss", function() {deepEqual( Stem("ss"), "ss");});
test("st -> st", function() {deepEqual( Stem("st"), "st");});
test("sta -> sta", function() {deepEqual( Stem("sta"), "sta");});
test("stà -> stà", function() {deepEqual( Stem("stà"), "stà");});
test("stabia -> stab", function() {deepEqual( Stem("stabia"), "stab");});
test("stabile -> stabil", function() {deepEqual( Stem("stabile"), "stabil");});
test("stabilendo -> stabil", function() {deepEqual( Stem("stabilendo"), "stabil");});
test("stabili -> stabil", function() {deepEqual( Stem("stabili"), "stabil");});
test("stabilì -> stabil", function() {deepEqual( Stem("stabilì"), "stabil");});
test("stabilimenti -> stabil", function() {deepEqual( Stem("stabilimenti"), "stabil");});
test("stabilimento -> stabil", function() {deepEqual( Stem("stabilimento"), "stabil");});
test("stabilirà -> stabil", function() {deepEqual( Stem("stabilirà"), "stabil");});
test("stabilire -> stabil", function() {deepEqual( Stem("stabilire"), "stabil");});
test("stabilirla -> stabil", function() {deepEqual( Stem("stabilirla"), "stabil");});
test("stabilirsi -> stabil", function() {deepEqual( Stem("stabilirsi"), "stabil");});
test("stabilirvi -> stabil", function() {deepEqual( Stem("stabilirvi"), "stabil");});
test("stabilisce -> stabil", function() {deepEqual( Stem("stabilisce"), "stabil");});
test("stabiliscono -> stabil", function() {deepEqual( Stem("stabiliscono"), "stabil");});
test("stabilita -> stabil", function() {deepEqual( Stem("stabilita"), "stabil");});
test("stabilità -> stabil", function() {deepEqual( Stem("stabilità"), "stabil");});
test("stabilite -> stabil", function() {deepEqual( Stem("stabilite"), "stabil");});
test("stabiliti -> stabil", function() {deepEqual( Stem("stabiliti"), "stabil");});
test("stabilito -> stabil", function() {deepEqual( Stem("stabilito"), "stabil");});
test("stabiliva -> stabil", function() {deepEqual( Stem("stabiliva"), "stabil");});
test("stabilizzare -> stabilizz", function() {deepEqual( Stem("stabilizzare"), "stabilizz");});
test("stabilizzarsi -> stabilizz", function() {deepEqual( Stem("stabilizzarsi"), "stabilizz");});
test("stabilizzata -> stabilizz", function() {deepEqual( Stem("stabilizzata"), "stabilizz");});
test("stabilizzazione -> stabilizz", function() {deepEqual( Stem("stabilizzazione"), "stabilizz");});
test("stabilizzerà -> stabilizz", function() {deepEqual( Stem("stabilizzerà"), "stabilizz");});
test("stabilmente -> stabil", function() {deepEqual( Stem("stabilmente"), "stabil");});
test("stacca -> stacc", function() {deepEqual( Stem("stacca"), "stacc");});
test("staccan -> staccan", function() {deepEqual( Stem("staccan"), "staccan");});
test("staccando -> stacc", function() {deepEqual( Stem("staccando"), "stacc");});
test("staccarsene -> stacc", function() {deepEqual( Stem("staccarsene"), "stacc");});
test("staccarsi -> stacc", function() {deepEqual( Stem("staccarsi"), "stacc");});
test("staccasse -> stacc", function() {deepEqual( Stem("staccasse"), "stacc");});
test("staccata -> stacc", function() {deepEqual( Stem("staccata"), "stacc");});
test("staccato -> stacc", function() {deepEqual( Stem("staccato"), "stacc");});
test("staccatosi -> staccat", function() {deepEqual( Stem("staccatosi"), "staccat");});
test("staccava -> stacc", function() {deepEqual( Stem("staccava"), "stacc");});
test("staccavano -> stacc", function() {deepEqual( Stem("staccavano"), "stacc");});
test("stacchini -> stacchin", function() {deepEqual( Stem("stacchini"), "stacchin");});
test("staccò -> stacc", function() {deepEqual( Stem("staccò"), "stacc");});
test("stadi -> stad", function() {deepEqual( Stem("stadi"), "stad");});
test("stadio -> stad", function() {deepEqual( Stem("stadio"), "stad");});
test("staff -> staff", function() {deepEqual( Stem("staff"), "staff");});
test("staffa -> staff", function() {deepEqual( Stem("staffa"), "staff");});
test("staffan -> staffan", function() {deepEqual( Stem("staffan"), "staffan");});
test("staffetta -> staffett", function() {deepEqual( Stem("staffetta"), "staffett");});
test("staffette -> staffett", function() {deepEqual( Stem("staffette"), "staffett");});
test("staffilata -> staffil", function() {deepEqual( Stem("staffilata"), "staffil");});
test("stafoggia -> stafogg", function() {deepEqual( Stem("stafoggia"), "stafogg");});
test("stagbilità -> stagbil", function() {deepEqual( Stem("stagbilità"), "stagbil");});
test("staggi -> stagg", function() {deepEqual( Stem("staggi"), "stagg");});
test("staggione -> staggion", function() {deepEqual( Stem("staggione"), "staggion");});
test("stagionale -> stagional", function() {deepEqual( Stem("stagionale"), "stagional");});
test("stagionali -> stagional", function() {deepEqual( Stem("stagionali"), "stagional");});
test("stagione -> stagion", function() {deepEqual( Stem("stagione"), "stagion");});
test("stagioni -> stagion", function() {deepEqual( Stem("stagioni"), "stagion");});
test("stagionì -> stagion", function() {deepEqual( Stem("stagionì"), "stagion");});
test("stai -> sta", function() {deepEqual( Stem("stai"), "sta");});
test("staia -> stai", function() {deepEqual( Stem("staia"), "stai");});
test("staio -> stai", function() {deepEqual( Stem("staio"), "stai");});
test("stajano -> staj", function() {deepEqual( Stem("stajano"), "staj");});
test("stalin -> stalin", function() {deepEqual( Stem("stalin"), "stalin");});
test("stalla -> stall", function() {deepEqual( Stem("stalla"), "stall");});
test("stalle -> stall", function() {deepEqual( Stem("stalle"), "stall");});
test("stallo -> stall", function() {deepEqual( Stem("stallo"), "stall");});
test("stallone -> stallon", function() {deepEqual( Stem("stallone"), "stallon");});
test("stamane -> staman", function() {deepEqual( Stem("stamane"), "staman");});
test("stamani -> staman", function() {deepEqual( Stem("stamani"), "staman");});
test("stamattina -> stamattin", function() {deepEqual( Stem("stamattina"), "stamattin");});
test("stampa -> stamp", function() {deepEqual( Stem("stampa"), "stamp");});
test("stampà -> stamp", function() {deepEqual( Stem("stampà"), "stamp");});
test("stampando -> stamp", function() {deepEqual( Stem("stampando"), "stamp");});
test("stampano -> stamp", function() {deepEqual( Stem("stampano"), "stamp");});
test("stamparlo -> stamp", function() {deepEqual( Stem("stamparlo"), "stamp");});
test("stampassero -> stamp", function() {deepEqual( Stem("stampassero"), "stamp");});
test("stampata -> stamp", function() {deepEqual( Stem("stampata"), "stamp");});
test("stampate -> stamp", function() {deepEqual( Stem("stampate"), "stamp");});
test("stampati -> stamp", function() {deepEqual( Stem("stampati"), "stamp");});
test("stampato -> stamp", function() {deepEqual( Stem("stampato"), "stamp");});
test("stampatori -> stampator", function() {deepEqual( Stem("stampatori"), "stampator");});
test("stampava -> stamp", function() {deepEqual( Stem("stampava"), "stamp");});
test("stampavano -> stamp", function() {deepEqual( Stem("stampavano"), "stamp");});
test("stampe -> stamp", function() {deepEqual( Stem("stampe"), "stamp");});
test("stamperia -> stamper", function() {deepEqual( Stem("stamperia"), "stamper");});
test("stan -> stan", function() {deepEqual( Stem("stan"), "stan");});
test("stanca -> stanc", function() {deepEqual( Stem("stanca"), "stanc");});
test("stancano -> stanc", function() {deepEqual( Stem("stancano"), "stanc");});
test("stancate -> stanc", function() {deepEqual( Stem("stancate"), "stanc");});
test("stanchezza -> stanchezz", function() {deepEqual( Stem("stanchezza"), "stanchezz");});
test("stanchi -> stanc", function() {deepEqual( Stem("stanchi"), "stanc");});
test("stanco -> stanc", function() {deepEqual( Stem("stanco"), "stanc");});
test("stand -> stand", function() {deepEqual( Stem("stand"), "stand");});
test("standa -> stand", function() {deepEqual( Stem("standa"), "stand");});
test("standard -> standard", function() {deepEqual( Stem("standard"), "standard");});
test("stando -> stand", function() {deepEqual( Stem("stando"), "stand");});
test("standogli -> standogl", function() {deepEqual( Stem("standogli"), "standogl");});
test("stands -> stands", function() {deepEqual( Stem("stands"), "stands");});
test("stanga -> stang", function() {deepEqual( Stem("stanga"), "stang");});
test("stangata -> stang", function() {deepEqual( Stem("stangata"), "stang");});
test("stanghette -> stanghett", function() {deepEqual( Stem("stanghette"), "stanghett");});
test("stanislao -> stanisla", function() {deepEqual( Stem("stanislao"), "stanisla");});
test("stanley -> stanley", function() {deepEqual( Stem("stanley"), "stanley");});
test("stanno -> stann", function() {deepEqual( Stem("stanno"), "stann");});
test("stanotte -> stanott", function() {deepEqual( Stem("stanotte"), "stanott");});
test("stante -> stant", function() {deepEqual( Stem("stante"), "stant");});
test("stantuffi -> stantuff", function() {deepEqual( Stem("stantuffi"), "stantuff");});
test("stanza -> stanz", function() {deepEqual( Stem("stanza"), "stanz");});
test("stanzaccia -> stanzacc", function() {deepEqual( Stem("stanzaccia"), "stanzacc");});
test("stanze -> stanz", function() {deepEqual( Stem("stanze"), "stanz");});
test("stanzia -> stanz", function() {deepEqual( Stem("stanzia"), "stanz");});
test("stanziamento -> stanz", function() {deepEqual( Stem("stanziamento"), "stanz");});
test("stanziati -> stanz", function() {deepEqual( Stem("stanziati"), "stanz");});
test("stanziato -> stanz", function() {deepEqual( Stem("stanziato"), "stanz");});
test("stanzina -> stanzin", function() {deepEqual( Stem("stanzina"), "stanzin");});
test("stanzine -> stanzin", function() {deepEqual( Stem("stanzine"), "stanzin");});
test("stanzone -> stanzon", function() {deepEqual( Stem("stanzone"), "stanzon");});
test("stanzucce -> stanzucc", function() {deepEqual( Stem("stanzucce"), "stanzucc");});
test("star -> star", function() {deepEqual( Stem("star"), "star");});
test("starà -> star", function() {deepEqual( Stem("starà"), "star");});
test("starai -> stara", function() {deepEqual( Stem("starai"), "stara");});
test("staranno -> starann", function() {deepEqual( Stem("staranno"), "starann");});
test("starci -> starc", function() {deepEqual( Stem("starci"), "starc");});
test("stare -> star", function() {deepEqual( Stem("stare"), "star");});
test("starebbe -> starebb", function() {deepEqual( Stem("starebbe"), "starebb");});
test("staremmo -> star", function() {deepEqual( Stem("staremmo"), "star");});
test("starete -> star", function() {deepEqual( Stem("starete"), "star");});
test("starkraft -> starkraft", function() {deepEqual( Stem("starkraft"), "starkraft");});
test("starne -> starn", function() {deepEqual( Stem("starne"), "starn");});
test("starnett -> starnett", function() {deepEqual( Stem("starnett"), "starnett");});
test("starò -> star", function() {deepEqual( Stem("starò"), "star");});
test("staropromyslovski -> staropromyslovsk", function() {deepEqual( Stem("staropromyslovski"), "staropromyslovsk");});
test("starsene -> starsen", function() {deepEqual( Stem("starsene"), "starsen");});
test("starvi -> starv", function() {deepEqual( Stem("starvi"), "starv");});
test("stasera -> staser", function() {deepEqual( Stem("stasera"), "staser");});
test("stasi -> stas", function() {deepEqual( Stem("stasi"), "stas");});
test("stata -> stat", function() {deepEqual( Stem("stata"), "stat");});
test("statale -> statal", function() {deepEqual( Stem("statale"), "statal");});
test("statali -> statal", function() {deepEqual( Stem("statali"), "statal");});
test("statalismo -> statal", function() {deepEqual( Stem("statalismo"), "statal");});
test("statalista -> statal", function() {deepEqual( Stem("statalista"), "statal");});
test("state -> stat", function() {deepEqual( Stem("state"), "stat");});
test("statevi -> stat", function() {deepEqual( Stem("statevi"), "stat");});
test("stati -> stat", function() {deepEqual( Stem("stati"), "stat");});
test("statista -> statist", function() {deepEqual( Stem("statista"), "statist");});
test("statisti -> statist", function() {deepEqual( Stem("statisti"), "statist");});
test("statistica -> statist", function() {deepEqual( Stem("statistica"), "statist");});
test("statistiche -> statist", function() {deepEqual( Stem("statistiche"), "statist");});
test("stato -> stat", function() {deepEqual( Stem("stato"), "stat");});
test("statoil -> statoil", function() {deepEqual( Stem("statoil"), "statoil");});
test("statua -> statu", function() {deepEqual( Stem("statua"), "statu");});
test("statuale -> statual", function() {deepEqual( Stem("statuale"), "statual");});
test("statuario -> statuar", function() {deepEqual( Stem("statuario"), "statuar");});
test("statue -> statu", function() {deepEqual( Stem("statue"), "statu");});
test("statunitense -> statunitens", function() {deepEqual( Stem("statunitense"), "statunitens");});
test("statunitensi -> statunitens", function() {deepEqual( Stem("statunitensi"), "statunitens");});
test("statutari -> statutar", function() {deepEqual( Stem("statutari"), "statutar");});
test("statutaria -> statutar", function() {deepEqual( Stem("statutaria"), "statutar");});
test("statutarie -> statutar", function() {deepEqual( Stem("statutarie"), "statutar");});
test("statuti -> stat", function() {deepEqual( Stem("statuti"), "stat");});
test("statuto -> stat", function() {deepEqual( Stem("statuto"), "stat");});
test("stava -> stav", function() {deepEqual( Stem("stava"), "stav");});
test("stavan -> stavan", function() {deepEqual( Stem("stavan"), "stavan");});
test("stavano -> stav", function() {deepEqual( Stem("stavano"), "stav");});
test("stavate -> stav", function() {deepEqual( Stem("stavate"), "stav");});
test("stavo -> stav", function() {deepEqual( Stem("stavo"), "stav");});
test("stavolta -> stavolt", function() {deepEqual( Stem("stavolta"), "stavolt");});
test("staying -> staying", function() {deepEqual( Stem("staying"), "staying");});
test("stazionavano -> stazion", function() {deepEqual( Stem("stazionavano"), "stazion");});
test("stazione -> stazion", function() {deepEqual( Stem("stazione"), "stazion");});
test("stazioni -> stazion", function() {deepEqual( Stem("stazioni"), "stazion");});
test("stazza -> stazz", function() {deepEqual( Stem("stazza"), "stazz");});
test("ste -> ste", function() {deepEqual( Stem("ste"), "ste");});
test("steccano -> stecc", function() {deepEqual( Stem("steccano"), "stecc");});
test("stecchita -> stecc", function() {deepEqual( Stem("stecchita"), "stecc");});
test("stecconato -> steccon", function() {deepEqual( Stem("stecconato"), "steccon");});
test("stefanel -> stefanel", function() {deepEqual( Stem("stefanel"), "stefanel");});
test("stefani -> stefan", function() {deepEqual( Stem("stefani"), "stefan");});
test("stefania -> stefan", function() {deepEqual( Stem("stefania"), "stefan");});
test("stefano -> stef", function() {deepEqual( Stem("stefano"), "stef");});
test("steiger -> steiger", function() {deepEqual( Stem("steiger"), "steiger");});
test("steli -> stel", function() {deepEqual( Stem("steli"), "stel");});
test("stella -> stell", function() {deepEqual( Stem("stella"), "stell");});
test("stellate -> stell", function() {deepEqual( Stem("stellate"), "stell");});
test("stelle -> stell", function() {deepEqual( Stem("stelle"), "stell");});
test("stellè -> stell", function() {deepEqual( Stem("stellè"), "stell");});
test("stelo -> stel", function() {deepEqual( Stem("stelo"), "stel");});
test("stelvio -> stelv", function() {deepEqual( Stem("stelvio"), "stelv");});
test("stende -> stend", function() {deepEqual( Stem("stende"), "stend");});
test("stendendo -> stend", function() {deepEqual( Stem("stendendo"), "stend");});
test("stendendole -> stend", function() {deepEqual( Stem("stendendole"), "stend");});
test("stender -> stender", function() {deepEqual( Stem("stender"), "stender");});
test("stenderà -> stend", function() {deepEqual( Stem("stenderà"), "stend");});
test("stendere -> stend", function() {deepEqual( Stem("stendere"), "stend");});
test("stenderne -> stend", function() {deepEqual( Stem("stenderne"), "stend");});
test("stendeva -> stend", function() {deepEqual( Stem("stendeva"), "stend");});
test("stendevano -> stend", function() {deepEqual( Stem("stendevano"), "stend");});
test("stenografico -> stenograf", function() {deepEqual( Stem("stenografico"), "stenograf");});
test("stenta -> stent", function() {deepEqual( Stem("stenta"), "stent");});
test("stentando -> stent", function() {deepEqual( Stem("stentando"), "stent");});
test("stentano -> stent", function() {deepEqual( Stem("stentano"), "stent");});
test("stentatamente -> stentat", function() {deepEqual( Stem("stentatamente"), "stentat");});
test("stentato -> stent", function() {deepEqual( Stem("stentato"), "stent");});
test("stentava -> stent", function() {deepEqual( Stem("stentava"), "stent");});
test("stenti -> stent", function() {deepEqual( Stem("stenti"), "stent");});
test("stento -> stent", function() {deepEqual( Stem("stento"), "stent");});
test("stentò -> stent", function() {deepEqual( Stem("stentò"), "stent");});
test("stentorea -> stentore", function() {deepEqual( Stem("stentorea"), "stentore");});
test("stephane -> stephan", function() {deepEqual( Stem("stephane"), "stephan");});
test("stephen -> stephen", function() {deepEqual( Stem("stephen"), "stephen");});
test("sterchele -> sterchel", function() {deepEqual( Stem("sterchele"), "sterchel");});
test("stereo -> stere", function() {deepEqual( Stem("stereo"), "stere");});
test("sterile -> steril", function() {deepEqual( Stem("sterile"), "steril");});
test("sterilità -> steril", function() {deepEqual( Stem("sterilità"), "steril");});
test("sterlina -> sterlin", function() {deepEqual( Stem("sterlina"), "sterlin");});
test("sterline -> sterlin", function() {deepEqual( Stem("sterline"), "sterlin");});
test("sterminare -> stermin", function() {deepEqual( Stem("sterminare"), "stermin");});
test("sterminate -> stermin", function() {deepEqual( Stem("sterminate"), "stermin");});
test("sterminati -> stermin", function() {deepEqual( Stem("sterminati"), "stermin");});
test("sterminato -> stermin", function() {deepEqual( Stem("sterminato"), "stermin");});
test("sterminio -> stermin", function() {deepEqual( Stem("sterminio"), "stermin");});
test("sterpi -> sterp", function() {deepEqual( Stem("sterpi"), "sterp");});
test("sterrata -> sterr", function() {deepEqual( Stem("sterrata"), "sterr");});
test("sterza -> sterz", function() {deepEqual( Stem("sterza"), "sterz");});
test("stesa -> stes", function() {deepEqual( Stem("stesa"), "stes");});
test("stesavi -> stes", function() {deepEqual( Stem("stesavi"), "stes");});
test("stese -> stes", function() {deepEqual( Stem("stese"), "stes");});
test("stesero -> steser", function() {deepEqual( Stem("stesero"), "steser");});
test("stesi -> stes", function() {deepEqual( Stem("stesi"), "stes");});
test("steso -> stes", function() {deepEqual( Stem("steso"), "stes");});
test("stessa -> stess", function() {deepEqual( Stem("stessa"), "stess");});
test("stesse -> stess", function() {deepEqual( Stem("stesse"), "stess");});
test("stessero -> stesser", function() {deepEqual( Stem("stessero"), "stesser");});
test("stessi -> stess", function() {deepEqual( Stem("stessi"), "stess");});
test("stesso -> stess", function() {deepEqual( Stem("stesso"), "stess");});
test("stesura -> stesur", function() {deepEqual( Stem("stesura"), "stesur");});
test("stet -> stet", function() {deepEqual( Stem("stet"), "stet");});
test("stette -> stett", function() {deepEqual( Stem("stette"), "stett");});
test("stettero -> stetter", function() {deepEqual( Stem("stettero"), "stetter");});
test("steve -> stev", function() {deepEqual( Stem("steve"), "stev");});
test("steven -> steven", function() {deepEqual( Stem("steven"), "steven");});
test("stevens -> stevens", function() {deepEqual( Stem("stevens"), "stevens");});
test("stia -> sti", function() {deepEqual( Stem("stia"), "sti");});
test("stìa -> stì", function() {deepEqual( Stem("stìa"), "stì");});
test("stiam -> stiam", function() {deepEqual( Stem("stiam"), "stiam");});
test("stiamo -> stiam", function() {deepEqual( Stem("stiamo"), "stiam");});
test("stian -> stian", function() {deepEqual( Stem("stian"), "stian");});
test("stiano -> sti", function() {deepEqual( Stem("stiano"), "sti");});
test("stiate -> sti", function() {deepEqual( Stem("stiate"), "sti");});
test("stig -> stig", function() {deepEqual( Stem("stig"), "stig");});
test("stilare -> stil", function() {deepEqual( Stem("stilare"), "stil");});
test("stilata -> stil", function() {deepEqual( Stem("stilata"), "stil");});
test("stilato -> stil", function() {deepEqual( Stem("stilato"), "stil");});
test("stile -> stil", function() {deepEqual( Stem("stile"), "stil");});
test("stili -> stil", function() {deepEqual( Stem("stili"), "stil");});
test("stilisti -> stilist", function() {deepEqual( Stem("stilisti"), "stilist");});
test("stillate -> still", function() {deepEqual( Stem("stillate"), "still");});
test("stillati -> still", function() {deepEqual( Stem("stillati"), "still");});
test("stima -> stim", function() {deepEqual( Stem("stima"), "stim");});
test("stimano -> stim", function() {deepEqual( Stem("stimano"), "stim");});
test("stimare -> stim", function() {deepEqual( Stem("stimare"), "stim");});
test("stimaron -> stimaron", function() {deepEqual( Stem("stimaron"), "stimaron");});
test("stimasse -> stim", function() {deepEqual( Stem("stimasse"), "stim");});
test("stimasser -> stimasser", function() {deepEqual( Stem("stimasser"), "stimasser");});
test("stimato -> stim", function() {deepEqual( Stem("stimato"), "stim");});
test("stimava -> stim", function() {deepEqual( Stem("stimava"), "stim");});
test("stime -> stim", function() {deepEqual( Stem("stime"), "stim");});
test("stimolare -> stimol", function() {deepEqual( Stem("stimolare"), "stimol");});
test("stimolato -> stimol", function() {deepEqual( Stem("stimolato"), "stimol");});
test("stimolava -> stimol", function() {deepEqual( Stem("stimolava"), "stimol");});
test("stimolavan -> stimolavan", function() {deepEqual( Stem("stimolavan"), "stimolavan");});
test("stimoli -> stimol", function() {deepEqual( Stem("stimoli"), "stimol");});
test("stimolo -> stimol", function() {deepEqual( Stem("stimolo"), "stimol");});
test("stinchi -> stinc", function() {deepEqual( Stem("stinchi"), "stinc");});
test("stipa -> stip", function() {deepEqual( Stem("stipa"), "stip");});
test("stipato -> stip", function() {deepEqual( Stem("stipato"), "stip");});
test("stipendi -> stip", function() {deepEqual( Stem("stipendi"), "stip");});
test("stipendiati -> stipend", function() {deepEqual( Stem("stipendiati"), "stipend");});
test("stipendio -> stipend", function() {deepEqual( Stem("stipendio"), "stipend");});
test("stipendiò -> stipend", function() {deepEqual( Stem("stipendiò"), "stipend");});
test("stipite -> stip", function() {deepEqual( Stem("stipite"), "stip");});
test("stipulare -> stipul", function() {deepEqual( Stem("stipulare"), "stipul");});
test("stipulato -> stipul", function() {deepEqual( Stem("stipulato"), "stipul");});
test("stiramento -> stir", function() {deepEqual( Stem("stiramento"), "stir");});
test("stirando -> stir", function() {deepEqual( Stem("stirando"), "stir");});
test("stirato -> stir", function() {deepEqual( Stem("stirato"), "stir");});
test("stiratosi -> stirat", function() {deepEqual( Stem("stiratosi"), "stirat");});
test("stiria -> stir", function() {deepEqual( Stem("stiria"), "stir");});
test("stirò -> stir", function() {deepEqual( Stem("stirò"), "stir");});
test("stirpe -> stirp", function() {deepEqual( Stem("stirpe"), "stirp");});
test("stirpi -> stirp", function() {deepEqual( Stem("stirpi"), "stirp");});
test("stivale -> stival", function() {deepEqual( Stem("stivale"), "stival");});
test("stizza -> stizz", function() {deepEqual( Stem("stizza"), "stizz");});
test("stizzetta -> stizzett", function() {deepEqual( Stem("stizzetta"), "stizzett");});
test("stizzita -> stizz", function() {deepEqual( Stem("stizzita"), "stizz");});
test("stizziti -> stizz", function() {deepEqual( Stem("stizziti"), "stizz");});
test("stizzito -> stizz", function() {deepEqual( Stem("stizzito"), "stizz");});
test("stizzosa -> stizzos", function() {deepEqual( Stem("stizzosa"), "stizzos");});
test("stizzosamente -> stizzos", function() {deepEqual( Stem("stizzosamente"), "stizzos");});
test("sto -> sto", function() {deepEqual( Stem("sto"), "sto");});
test("stoccaggio -> stoccagg", function() {deepEqual( Stem("stoccaggio"), "stoccagg");});
test("stoccata -> stocc", function() {deepEqual( Stem("stoccata"), "stocc");});
test("stoccate -> stocc", function() {deepEqual( Stem("stoccate"), "stocc");});
test("stoccolma -> stoccolm", function() {deepEqual( Stem("stoccolma"), "stoccolm");});
test("stock -> stock", function() {deepEqual( Stem("stock"), "stock");});
test("stoltenberg -> stoltenberg", function() {deepEqual( Stem("stoltenberg"), "stoltenberg");});
test("stolti -> stolt", function() {deepEqual( Stem("stolti"), "stolt");});
test("stomacato -> stomac", function() {deepEqual( Stem("stomacato"), "stomac");});
test("stomaco -> stomac", function() {deepEqual( Stem("stomaco"), "stomac");});
test("stomacosi -> stomac", function() {deepEqual( Stem("stomacosi"), "stomac");});
test("stonata -> ston", function() {deepEqual( Stem("stonata"), "ston");});
test("stoppa -> stopp", function() {deepEqual( Stem("stoppa"), "stopp");});
test("stoppie -> stopp", function() {deepEqual( Stem("stoppie"), "stopp");});
test("stoppino -> stoppin", function() {deepEqual( Stem("stoppino"), "stoppin");});
test("storace -> storac", function() {deepEqual( Stem("storace"), "storac");});
test("storcendo -> storc", function() {deepEqual( Stem("storcendo"), "storc");});
test("storcendolo -> storc", function() {deepEqual( Stem("storcendolo"), "storc");});
test("storceva -> storc", function() {deepEqual( Stem("storceva"), "storc");});
test("stordimento -> stord", function() {deepEqual( Stem("stordimento"), "stord");});
test("stordito -> stord", function() {deepEqual( Stem("stordito"), "stord");});
test("storia -> stor", function() {deepEqual( Stem("storia"), "stor");});
test("storica -> storic", function() {deepEqual( Stem("storica"), "storic");});
test("storicà -> storic", function() {deepEqual( Stem("storicà"), "storic");});
test("storicamente -> storic", function() {deepEqual( Stem("storicamente"), "storic");});
test("storice -> storic", function() {deepEqual( Stem("storice"), "storic");});
test("storiche -> storic", function() {deepEqual( Stem("storiche"), "storic");});
test("storici -> storic", function() {deepEqual( Stem("storici"), "storic");});
test("storico -> storic", function() {deepEqual( Stem("storico"), "storic");});
test("storie -> stor", function() {deepEqual( Stem("storie"), "stor");});
test("storielle -> storiell", function() {deepEqual( Stem("storielle"), "storiell");});
test("storiografia -> storiograf", function() {deepEqual( Stem("storiografia"), "storiograf");});
test("stormo -> storm", function() {deepEqual( Stem("stormo"), "storm");});
test("stornar -> storn", function() {deepEqual( Stem("stornar"), "storn");});
test("stornare -> storn", function() {deepEqual( Stem("stornare"), "storn");});
test("stornarlo -> storn", function() {deepEqual( Stem("stornarlo"), "storn");});
test("storpiato -> storp", function() {deepEqual( Stem("storpiato"), "storp");});
test("storse -> stors", function() {deepEqual( Stem("storse"), "stors");});
test("storta -> stort", function() {deepEqual( Stem("storta"), "stort");});
test("storte -> stort", function() {deepEqual( Stem("storte"), "stort");});
test("storto -> stort", function() {deepEqual( Stem("storto"), "stort");});
test("story -> story", function() {deepEqual( Stem("story"), "story");});
test("stoviglie -> stovigl", function() {deepEqual( Stem("stoviglie"), "stovigl");});
test("strabica -> strabic", function() {deepEqual( Stem("strabica"), "strabic");});
test("strabismo -> strabism", function() {deepEqual( Stem("strabismo"), "strabism");});
test("stracariche -> stracar", function() {deepEqual( Stem("stracariche"), "stracar");});
test("stracca -> stracc", function() {deepEqual( Stem("stracca"), "stracc");});
test("stracchi -> stracc", function() {deepEqual( Stem("stracchi"), "stracc");});
test("stracchino -> stracchin", function() {deepEqual( Stem("stracchino"), "stracchin");});
test("stracci -> stracc", function() {deepEqual( Stem("stracci"), "stracc");});
test("straccio -> stracc", function() {deepEqual( Stem("straccio"), "stracc");});
test("stracco -> stracc", function() {deepEqual( Stem("stracco"), "stracc");});
test("strada -> strad", function() {deepEqual( Stem("strada"), "strad");});
test("stradale -> stradal", function() {deepEqual( Stem("stradale"), "stradal");});
test("stradali -> stradal", function() {deepEqual( Stem("stradali"), "stradal");});
test("strade -> strad", function() {deepEqual( Stem("strade"), "strad");});
test("stradetta -> stradett", function() {deepEqual( Stem("stradetta"), "stradett");});
test("stradette -> stradett", function() {deepEqual( Stem("stradette"), "stradett");});
test("stradicciole -> stradicciol", function() {deepEqual( Stem("stradicciole"), "stradicciol");});
test("stradone -> stradon", function() {deepEqual( Stem("stradone"), "stradon");});
test("straducola -> straducol", function() {deepEqual( Stem("straducola"), "straducol");});
test("strage -> strag", function() {deepEqual( Stem("strage"), "strag");});
test("stragem -> stragem", function() {deepEqual( Stem("stragem"), "stragem");});
test("stragrande -> stragrand", function() {deepEqual( Stem("stragrande"), "stragrand");});
test("stralci -> stralc", function() {deepEqual( Stem("stralci"), "stralc");});
test("stralciata -> stralc", function() {deepEqual( Stem("stralciata"), "stralc");});
test("stralcio -> stralc", function() {deepEqual( Stem("stralcio"), "stralc");});
test("stralunando -> stralun", function() {deepEqual( Stem("stralunando"), "stralun");});
test("stralunati -> stralun", function() {deepEqual( Stem("stralunati"), "stralun");});
test("stralunato -> stralun", function() {deepEqual( Stem("stralunato"), "stralun");});
test("strame -> stram", function() {deepEqual( Stem("strame"), "stram");});
test("strampa -> stramp", function() {deepEqual( Stem("strampa"), "stramp");});
test("strana -> stran", function() {deepEqual( Stem("strana"), "stran");});
test("stranamente -> stran", function() {deepEqual( Stem("stranamente"), "stran");});
test("strane -> stran", function() {deepEqual( Stem("strane"), "stran");});
test("stranezza -> stranezz", function() {deepEqual( Stem("stranezza"), "stranezz");});
test("strani -> stran", function() {deepEqual( Stem("strani"), "stran");});
test("straniera -> stranier", function() {deepEqual( Stem("straniera"), "stranier");});
test("straniere -> stran", function() {deepEqual( Stem("straniere"), "stran");});
test("stranieri -> stranier", function() {deepEqual( Stem("stranieri"), "stranier");});
test("straniero -> stranier", function() {deepEqual( Stem("straniero"), "stranier");});
test("strano -> stran", function() {deepEqual( Stem("strano"), "stran");});
test("straordinari -> straordinar", function() {deepEqual( Stem("straordinari"), "straordinar");});
test("straordinaria -> straordinar", function() {deepEqual( Stem("straordinaria"), "straordinar");});
test("straordinariamente -> straordinar", function() {deepEqual( Stem("straordinariamente"), "straordinar");});
test("straordinarie -> straordinar", function() {deepEqual( Stem("straordinarie"), "straordinar");});
test("straordinarii -> straordinar", function() {deepEqual( Stem("straordinarii"), "straordinar");});
test("straordinario -> straordinar", function() {deepEqual( Stem("straordinario"), "straordinar");});
test("strapazzi -> strapazz", function() {deepEqual( Stem("strapazzi"), "strapazz");});
test("strapazzo -> strapazz", function() {deepEqual( Stem("strapazzo"), "strapazz");});
test("strapotere -> strapot", function() {deepEqual( Stem("strapotere"), "strapot");});
test("strappa -> strapp", function() {deepEqual( Stem("strappa"), "strapp");});
test("strappar -> strapp", function() {deepEqual( Stem("strappar"), "strapp");});
test("strappare -> strapp", function() {deepEqual( Stem("strappare"), "strapp");});
test("strappati -> strapp", function() {deepEqual( Stem("strappati"), "strapp");});
test("strappato -> strapp", function() {deepEqual( Stem("strappato"), "strapp");});
test("strappo -> strapp", function() {deepEqual( Stem("strappo"), "strapp");});
test("strapunti -> strapunt", function() {deepEqual( Stem("strapunti"), "strapunt");});
test("strasburgo -> strasburg", function() {deepEqual( Stem("strasburgo"), "strasburg");});
test("strascicandolo -> strascic", function() {deepEqual( Stem("strascicandolo"), "strascic");});
test("strascicano -> strascic", function() {deepEqual( Stem("strascicano"), "strascic");});
test("strascicarono -> strascic", function() {deepEqual( Stem("strascicarono"), "strascic");});
test("strascicarsi -> strascic", function() {deepEqual( Stem("strascicarsi"), "strascic");});
test("strascicato -> strascic", function() {deepEqual( Stem("strascicato"), "strascic");});
test("strascicavan -> strascicavan", function() {deepEqual( Stem("strascicavan"), "strascicavan");});
test("strascicavano -> strascic", function() {deepEqual( Stem("strascicavano"), "strascic");});
test("strascichi -> strascic", function() {deepEqual( Stem("strascichi"), "strascic");});
test("strascico -> strascic", function() {deepEqual( Stem("strascico"), "strascic");});
test("strascina -> strascin", function() {deepEqual( Stem("strascina"), "strascin");});
test("strascinarli -> strascin", function() {deepEqual( Stem("strascinarli"), "strascin");});
test("strascinarlo -> strascin", function() {deepEqual( Stem("strascinarlo"), "strascin");});
test("strascinata -> strascin", function() {deepEqual( Stem("strascinata"), "strascin");});
test("strascinati -> strascin", function() {deepEqual( Stem("strascinati"), "strascin");});
test("strascinato -> strascin", function() {deepEqual( Stem("strascinato"), "strascin");});
test("strascinavan -> strascinavan", function() {deepEqual( Stem("strascinavan"), "strascinavan");});
test("strascinavano -> strascin", function() {deepEqual( Stem("strascinavano"), "strascin");});
test("strasecolar -> strasecol", function() {deepEqual( Stem("strasecolar"), "strasecol");});
test("strat -> strat", function() {deepEqual( Stem("strat"), "strat");});
test("strata -> strat", function() {deepEqual( Stem("strata"), "strat");});
test("stratagemmi -> stratagemm", function() {deepEqual( Stem("stratagemmi"), "stratagemm");});
test("strategia -> strateg", function() {deepEqual( Stem("strategia"), "strateg");});
test("strategica -> strateg", function() {deepEqual( Stem("strategica"), "strateg");});
test("strategiche -> strateg", function() {deepEqual( Stem("strategiche"), "strateg");});
test("strategico -> strateg", function() {deepEqual( Stem("strategico"), "strateg");});
test("strategie -> strateg", function() {deepEqual( Stem("strategie"), "strateg");});
test("strathclyde -> strathclyd", function() {deepEqual( Stem("strathclyde"), "strathclyd");});
test("stratta -> stratt", function() {deepEqual( Stem("stratta"), "stratt");});
test("stratte -> stratt", function() {deepEqual( Stem("stratte"), "stratt");});
test("stravagante -> stravag", function() {deepEqual( Stem("stravagante"), "stravag");});
test("stravaganti -> stravag", function() {deepEqual( Stem("stravaganti"), "stravag");});
test("stravaganze -> stravag", function() {deepEqual( Stem("stravaganze"), "stravag");});
test("stravizi -> straviz", function() {deepEqual( Stem("stravizi"), "straviz");});
test("straviziare -> straviz", function() {deepEqual( Stem("straviziare"), "straviz");});
test("stravizio -> straviz", function() {deepEqual( Stem("stravizio"), "straviz");});
test("stravolgendo -> stravolg", function() {deepEqual( Stem("stravolgendo"), "stravolg");});
test("stravolgimento -> stravolg", function() {deepEqual( Stem("stravolgimento"), "stravolg");});
test("stravolta -> stravolt", function() {deepEqual( Stem("stravolta"), "stravolt");});
test("stravolte -> stravolt", function() {deepEqual( Stem("stravolte"), "stravolt");});
test("stravolti -> stravolt", function() {deepEqual( Stem("stravolti"), "stravolt");});
test("stravolto -> stravolt", function() {deepEqual( Stem("stravolto"), "stravolt");});
test("straziano -> straz", function() {deepEqual( Stem("straziano"), "straz");});
test("straziato -> straz", function() {deepEqual( Stem("straziato"), "straz");});
test("strazio -> straz", function() {deepEqual( Stem("strazio"), "straz");});
test("street -> street", function() {deepEqual( Stem("street"), "street");});
test("strega -> streg", function() {deepEqual( Stem("strega"), "streg");});
test("streghe -> streg", function() {deepEqual( Stem("streghe"), "streg");});
test("stregoneria -> stregoner", function() {deepEqual( Stem("stregoneria"), "stregoner");});
test("stregoni -> stregon", function() {deepEqual( Stem("stregoni"), "stregon");});
test("stremo -> strem", function() {deepEqual( Stem("stremo"), "strem");});
test("strepita -> strep", function() {deepEqual( Stem("strepita"), "strep");});
test("strepitare -> strepit", function() {deepEqual( Stem("strepitare"), "strepit");});
test("strepitava -> strepit", function() {deepEqual( Stem("strepitava"), "strepit");});
test("strepito -> strep", function() {deepEqual( Stem("strepito"), "strep");});
test("strepitosa -> strepit", function() {deepEqual( Stem("strepitosa"), "strepit");});
test("strepitose -> strepit", function() {deepEqual( Stem("strepitose"), "strepit");});
test("strepitoso -> strepit", function() {deepEqual( Stem("strepitoso"), "strepit");});
test("stress -> stress", function() {deepEqual( Stem("stress"), "stress");});
test("stretcher -> stretcher", function() {deepEqual( Stem("stretcher"), "stretcher");});
test("stretta -> strett", function() {deepEqual( Stem("stretta"), "strett");});
test("strettala -> strettal", function() {deepEqual( Stem("strettala"), "strettal");});
test("strettamente -> strett", function() {deepEqual( Stem("strettamente"), "strett");});
test("strette -> strett", function() {deepEqual( Stem("strette"), "strett");});
test("strettezza -> strettezz", function() {deepEqual( Stem("strettezza"), "strettezz");});
test("strettezze -> strettezz", function() {deepEqual( Stem("strettezze"), "strettezz");});
test("stretti -> strett", function() {deepEqual( Stem("stretti"), "strett");});
test("strettissime -> strettissim", function() {deepEqual( Stem("strettissime"), "strettissim");});
test("stretto -> strett", function() {deepEqual( Stem("stretto"), "strett");});
test("strida -> strid", function() {deepEqual( Stem("strida"), "strid");});
test("stridere -> strid", function() {deepEqual( Stem("stridere"), "strid");});
test("stridesse -> stridess", function() {deepEqual( Stem("stridesse"), "stridess");});
test("strike -> strik", function() {deepEqual( Stem("strike"), "strik");});
test("strillano -> strill", function() {deepEqual( Stem("strillano"), "strill");});
test("strillante -> strillant", function() {deepEqual( Stem("strillante"), "strillant");});
test("strillanti -> strillant", function() {deepEqual( Stem("strillanti"), "strillant");});
test("strillar -> strill", function() {deepEqual( Stem("strillar"), "strill");});
test("strillare -> strill", function() {deepEqual( Stem("strillare"), "strill");});
test("strillassero -> strill", function() {deepEqual( Stem("strillassero"), "strill");});
test("stringa -> string", function() {deepEqual( Stem("stringa"), "string");});
test("stringe -> string", function() {deepEqual( Stem("stringe"), "string");});
test("stringendo -> string", function() {deepEqual( Stem("stringendo"), "string");});
test("stringendolo -> string", function() {deepEqual( Stem("stringendolo"), "string");});
test("stringente -> stringent", function() {deepEqual( Stem("stringente"), "stringent");});
test("stringer -> stringer", function() {deepEqual( Stem("stringer"), "stringer");});
test("stringere -> string", function() {deepEqual( Stem("stringere"), "string");});
test("stringeva -> string", function() {deepEqual( Stem("stringeva"), "string");});
test("stringevan -> stringevan", function() {deepEqual( Stem("stringevan"), "stringevan");});
test("stringevano -> string", function() {deepEqual( Stem("stringevano"), "string");});
test("stringono -> string", function() {deepEqual( Stem("stringono"), "string");});
test("strinse -> strins", function() {deepEqual( Stem("strinse"), "strins");});
test("strinsero -> strinser", function() {deepEqual( Stem("strinsero"), "strinser");});
test("strisce -> strisc", function() {deepEqual( Stem("strisce"), "strisc");});
test("striscia -> strisc", function() {deepEqual( Stem("striscia"), "strisc");});
test("strisciando -> strisc", function() {deepEqual( Stem("strisciando"), "strisc");});
test("strisciava -> strisc", function() {deepEqual( Stem("strisciava"), "strisc");});
test("strisciò -> strisc", function() {deepEqual( Stem("strisciò"), "strisc");});
test("striscione -> striscion", function() {deepEqual( Stem("striscione"), "striscion");});
test("striscioni -> striscion", function() {deepEqual( Stem("striscioni"), "striscion");});
test("strofinando -> strofin", function() {deepEqual( Stem("strofinando"), "strofin");});
test("stromento -> stroment", function() {deepEqual( Stem("stromento"), "stroment");});
test("stroncare -> stronc", function() {deepEqual( Stem("stroncare"), "stronc");});
test("stropicciando -> stropicc", function() {deepEqual( Stem("stropicciando"), "stropicc");});
test("stropiccìo -> stropiccì", function() {deepEqual( Stem("stropiccìo"), "stropiccì");});
test("stropicciò -> stropicc", function() {deepEqual( Stem("stropicciò"), "stropicc");});
test("strordinario -> strordinar", function() {deepEqual( Stem("strordinario"), "strordinar");});
test("strozzata -> strozz", function() {deepEqual( Stem("strozzata"), "strozz");});
test("struggersi -> strugg", function() {deepEqual( Stem("struggersi"), "strugg");});
test("struggeva -> strugg", function() {deepEqual( Stem("struggeva"), "strugg");});
test("struggevano -> strugg", function() {deepEqual( Stem("struggevano"), "strugg");});
test("struggimento -> strugg", function() {deepEqual( Stem("struggimento"), "strugg");});
test("struggo -> strugg", function() {deepEqual( Stem("struggo"), "strugg");});
test("strumentali -> strumental", function() {deepEqual( Stem("strumentali"), "strumental");});
test("strumentalizzare -> strumentalizz", function() {deepEqual( Stem("strumentalizzare"), "strumentalizz");});
test("strumentalizzata -> strumentalizz", function() {deepEqual( Stem("strumentalizzata"), "strumentalizz");});
test("strumentalizzazione -> strumentalizz", function() {deepEqual( Stem("strumentalizzazione"), "strumentalizz");});
test("strumentalizzazioni -> strumentalizz", function() {deepEqual( Stem("strumentalizzazioni"), "strumentalizz");});
test("strumenti -> strument", function() {deepEqual( Stem("strumenti"), "strument");});
test("strumento -> strument", function() {deepEqual( Stem("strumento"), "strument");});
test("struttura -> struttur", function() {deepEqual( Stem("struttura"), "struttur");});
test("strutturale -> struttural", function() {deepEqual( Stem("strutturale"), "struttural");});
test("strutturali -> struttural", function() {deepEqual( Stem("strutturali"), "struttural");});
test("strutturata -> struttur", function() {deepEqual( Stem("strutturata"), "struttur");});
test("strutture -> struttur", function() {deepEqual( Stem("strutture"), "struttur");});
test("stuart -> stuart", function() {deepEqual( Stem("stuart"), "stuart");});
test("stuccata -> stucc", function() {deepEqual( Stem("stuccata"), "stucc");});
test("stucco -> stucc", function() {deepEqual( Stem("stucco"), "stucc");});
test("studentessa -> studentess", function() {deepEqual( Stem("studentessa"), "studentess");});
test("studentesse -> studentess", function() {deepEqual( Stem("studentesse"), "studentess");});
test("studenti -> student", function() {deepEqual( Stem("studenti"), "student");});
test("studi -> stud", function() {deepEqual( Stem("studi"), "stud");});
test("studiando -> stud", function() {deepEqual( Stem("studiando"), "stud");});
test("studiar -> stud", function() {deepEqual( Stem("studiar"), "stud");});
test("studiare -> stud", function() {deepEqual( Stem("studiare"), "stud");});
test("studiata -> stud", function() {deepEqual( Stem("studiata"), "stud");});
test("studiate -> stud", function() {deepEqual( Stem("studiate"), "stud");});
test("studiati -> stud", function() {deepEqual( Stem("studiati"), "stud");});
test("studiato -> stud", function() {deepEqual( Stem("studiato"), "stud");});
test("studiava -> stud", function() {deepEqual( Stem("studiava"), "stud");});
test("studieremo -> stud", function() {deepEqual( Stem("studieremo"), "stud");});
test("studierò -> stud", function() {deepEqual( Stem("studierò"), "stud");});
test("studio -> stud", function() {deepEqual( Stem("studio"), "stud");});
test("studiò -> stud", function() {deepEqual( Stem("studiò"), "stud");});
test("studiosa -> studios", function() {deepEqual( Stem("studiosa"), "studios");});
test("studiosi -> studios", function() {deepEqual( Stem("studiosi"), "studios");});
test("stufato -> stuf", function() {deepEqual( Stem("stufato"), "stuf");});
test("stuolo -> stuol", function() {deepEqual( Stem("stuolo"), "stuol");});
test("stupefacenti -> stupefacent", function() {deepEqual( Stem("stupefacenti"), "stupefacent");});
test("stupefatta -> stupefatt", function() {deepEqual( Stem("stupefatta"), "stupefatt");});
test("stupefatto -> stupefatt", function() {deepEqual( Stem("stupefatto"), "stupefatt");});
test("stupì -> stup", function() {deepEqual( Stem("stupì"), "stup");});
test("stupida -> stupid", function() {deepEqual( Stem("stupida"), "stupid");});
test("stupidaggini -> stupidaggin", function() {deepEqual( Stem("stupidaggini"), "stupidaggin");});
test("stupidi -> stupid", function() {deepEqual( Stem("stupidi"), "stupid");});
test("stupido -> stupid", function() {deepEqual( Stem("stupido"), "stupid");});
test("stupire -> stup", function() {deepEqual( Stem("stupire"), "stup");});
test("stupito -> stup", function() {deepEqual( Stem("stupito"), "stup");});
test("stupiva -> stup", function() {deepEqual( Stem("stupiva"), "stup");});
test("stupore -> stupor", function() {deepEqual( Stem("stupore"), "stupor");});
test("stupri -> stupr", function() {deepEqual( Stem("stupri"), "stupr");});
test("stupro -> stupr", function() {deepEqual( Stem("stupro"), "stupr");});
test("sturges -> sturges", function() {deepEqual( Stem("sturges"), "sturges");});
test("sturzo -> sturz", function() {deepEqual( Stem("sturzo"), "sturz");});
test("stutus -> stutus", function() {deepEqual( Stem("stutus"), "stutus");});
test("stuzzica -> stuzzic", function() {deepEqual( Stem("stuzzica"), "stuzzic");});
test("stuzzicando -> stuzzic", function() {deepEqual( Stem("stuzzicando"), "stuzzic");});
test("stuzzicar -> stuzzic", function() {deepEqual( Stem("stuzzicar"), "stuzzic");});
test("stuzzicarlo -> stuzzic", function() {deepEqual( Stem("stuzzicarlo"), "stuzzic");});
test("stuzzicata -> stuzzic", function() {deepEqual( Stem("stuzzicata"), "stuzzic");});
test("stuzzicava -> stuzzic", function() {deepEqual( Stem("stuzzicava"), "stuzzic");});
test("su -> su", function() {deepEqual( Stem("su"), "su");});
test("sua -> sua", function() {deepEqual( Stem("sua"), "sua");});
test("suard -> suard", function() {deepEqual( Stem("suard"), "suard");});
test("suarez -> suarez", function() {deepEqual( Stem("suarez"), "suarez");});
test("subacquea -> subacque", function() {deepEqual( Stem("subacquea"), "subacque");});
test("subacquei -> subacque", function() {deepEqual( Stem("subacquei"), "subacque");});
test("subacqueo -> subacque", function() {deepEqual( Stem("subacqueo"), "subacque");});
test("subalpina -> subalpin", function() {deepEqual( Stem("subalpina"), "subalpin");});
test("subalterni -> subaltern", function() {deepEqual( Stem("subalterni"), "subaltern");});
test("subaru -> subaru", function() {deepEqual( Stem("subaru"), "subaru");});
test("subcomandante -> subcomand", function() {deepEqual( Stem("subcomandante"), "subcomand");});
test("subentrato -> subentr", function() {deepEqual( Stem("subentrato"), "subentr");});
test("subentri -> subentr", function() {deepEqual( Stem("subentri"), "subentr");});
test("subì -> sub", function() {deepEqual( Stem("subì"), "sub");});
test("subire -> sub", function() {deepEqual( Stem("subire"), "sub");});
test("subiremo -> sub", function() {deepEqual( Stem("subiremo"), "sub");});
test("subisce -> sub", function() {deepEqual( Stem("subisce"), "sub");});
test("subita -> sub", function() {deepEqual( Stem("subita"), "sub");});
test("subitamente -> subit", function() {deepEqual( Stem("subitamente"), "subit");});
test("subitanea -> subitane", function() {deepEqual( Stem("subitanea"), "subitane");});
test("subitanei -> subitane", function() {deepEqual( Stem("subitanei"), "subitane");});
test("subitaneo -> subitane", function() {deepEqual( Stem("subitaneo"), "subitane");});
test("subite -> sub", function() {deepEqual( Stem("subite"), "sub");});
test("subiti -> sub", function() {deepEqual( Stem("subiti"), "sub");});
test("subito -> sub", function() {deepEqual( Stem("subito"), "sub");});
test("subjectis -> subjectis", function() {deepEqual( Stem("subjectis"), "subjectis");});
test("sublimata -> sublim", function() {deepEqual( Stem("sublimata"), "sublim");});
test("sublimazione -> sublim", function() {deepEqual( Stem("sublimazione"), "sublim");});
test("sublimità -> sublim", function() {deepEqual( Stem("sublimità"), "sublim");});
test("subnormali -> subnormal", function() {deepEqual( Stem("subnormali"), "subnormal");});
test("subordinar -> subordin", function() {deepEqual( Stem("subordinar"), "subordin");});
test("subordinati -> subordin", function() {deepEqual( Stem("subordinati"), "subordin");});
test("subordinazione -> subordin", function() {deepEqual( Stem("subordinazione"), "subordin");});
test("subordine -> subordin", function() {deepEqual( Stem("subordine"), "subordin");});
test("subtilitate -> subtilit", function() {deepEqual( Stem("subtilitate"), "subtilit");});
test("succede -> succed", function() {deepEqual( Stem("succede"), "succed");});
test("succedendo -> succed", function() {deepEqual( Stem("succedendo"), "succed");});
test("succederà -> succed", function() {deepEqual( Stem("succederà"), "succed");});
test("succedere -> succed", function() {deepEqual( Stem("succedere"), "succed");});
test("succedeva -> succed", function() {deepEqual( Stem("succedeva"), "succed");});
test("succedevano -> succed", function() {deepEqual( Stem("succedevano"), "succed");});
test("succedono -> succed", function() {deepEqual( Stem("succedono"), "succed");});
test("succeduto -> succed", function() {deepEqual( Stem("succeduto"), "succed");});
test("succesivamente -> succes", function() {deepEqual( Stem("succesivamente"), "succes");});
test("successa -> success", function() {deepEqual( Stem("successa"), "success");});
test("successe -> success", function() {deepEqual( Stem("successe"), "success");});
test("successi -> success", function() {deepEqual( Stem("successi"), "success");});
test("successione -> succession", function() {deepEqual( Stem("successione"), "succession");});
test("successiva -> success", function() {deepEqual( Stem("successiva"), "success");});
test("successivamente -> success", function() {deepEqual( Stem("successivamente"), "success");});
test("successive -> success", function() {deepEqual( Stem("successive"), "success");});
test("successivi -> success", function() {deepEqual( Stem("successivi"), "success");});
test("successivo -> success", function() {deepEqual( Stem("successivo"), "success");});
test("successo -> success", function() {deepEqual( Stem("successo"), "success");});
test("succhiargli -> succ", function() {deepEqual( Stem("succhiargli"), "succ");});
test("succhiata -> succ", function() {deepEqual( Stem("succhiata"), "succ");});
test("succhiato -> succ", function() {deepEqual( Stem("succhiato"), "succ");});
test("succiano -> succ", function() {deepEqual( Stem("succiano"), "succ");});
test("succiarsi -> succ", function() {deepEqual( Stem("succiarsi"), "succ");});
test("succiarti -> succ", function() {deepEqual( Stem("succiarti"), "succ");});
test("succinta -> succint", function() {deepEqual( Stem("succinta"), "succint");});
test("succinti -> succint", function() {deepEqual( Stem("succinti"), "succint");});
test("succinto -> succint", function() {deepEqual( Stem("succinto"), "succint");});
test("sucessi -> sucess", function() {deepEqual( Stem("sucessi"), "sucess");});
test("sud -> sud", function() {deepEqual( Stem("sud"), "sud");});
test("suda -> sud", function() {deepEqual( Stem("suda"), "sud");});
test("sudafrica -> sudafr", function() {deepEqual( Stem("sudafrica"), "sudafr");});
test("sudafricano -> sudafric", function() {deepEqual( Stem("sudafricano"), "sudafric");});
test("sudamericano -> sudameric", function() {deepEqual( Stem("sudamericano"), "sudameric");});
test("sudario -> sudar", function() {deepEqual( Stem("sudario"), "sudar");});
test("sudate -> sud", function() {deepEqual( Stem("sudate"), "sud");});
test("suddetta -> suddett", function() {deepEqual( Stem("suddetta"), "suddett");});
test("suddette -> suddett", function() {deepEqual( Stem("suddette"), "suddett");});
test("suddetti -> suddett", function() {deepEqual( Stem("suddetti"), "suddett");});
test("suddetto -> suddett", function() {deepEqual( Stem("suddetto"), "suddett");});
test("sudditanza -> suddit", function() {deepEqual( Stem("sudditanza"), "suddit");});
test("sudditi -> sudd", function() {deepEqual( Stem("sudditi"), "sudd");});
test("suddivisa -> suddivis", function() {deepEqual( Stem("suddivisa"), "suddivis");});
test("suddivisione -> suddivision", function() {deepEqual( Stem("suddivisione"), "suddivision");});
test("suddiviso -> suddivis", function() {deepEqual( Stem("suddiviso"), "suddivis");});
test("sudest -> sudest", function() {deepEqual( Stem("sudest"), "sudest");});
test("sudice -> sudic", function() {deepEqual( Stem("sudice"), "sudic");});
test("sudiceria -> sudicer", function() {deepEqual( Stem("sudiceria"), "sudicer");});
test("sudici -> sudic", function() {deepEqual( Stem("sudici"), "sudic");});
test("sudicia -> sudic", function() {deepEqual( Stem("sudicia"), "sudic");});
test("sudiciume -> sudicium", function() {deepEqual( Stem("sudiciume"), "sudicium");});
test("sudor -> sudor", function() {deepEqual( Stem("sudor"), "sudor");});
test("sue -> sue", function() {deepEqual( Stem("sue"), "sue");});
test("sueddeutsche -> sueddeutsc", function() {deepEqual( Stem("sueddeutsche"), "sueddeutsc");});
test("sufficiente -> sufficient", function() {deepEqual( Stem("sufficiente"), "sufficient");});
test("sufficienti -> sufficient", function() {deepEqual( Stem("sufficienti"), "sufficient");});
test("sufficientmeente -> sufficientmeent", function() {deepEqual( Stem("sufficientmeente"), "sufficientmeent");});
test("sufficienza -> sufficient", function() {deepEqual( Stem("sufficienza"), "sufficient");});
test("suggella -> suggell", function() {deepEqual( Stem("suggella"), "suggell");});
test("suggerendogliela -> sugger", function() {deepEqual( Stem("suggerendogliela"), "sugger");});
test("suggerì -> sugger", function() {deepEqual( Stem("suggerì"), "sugger");});
test("suggerimenti -> sugger", function() {deepEqual( Stem("suggerimenti"), "sugger");});
test("suggerimento -> sugger", function() {deepEqual( Stem("suggerimento"), "sugger");});
test("suggerir -> sugger", function() {deepEqual( Stem("suggerir"), "sugger");});
test("suggerire -> sugger", function() {deepEqual( Stem("suggerire"), "sugger");});
test("suggerirle -> sugger", function() {deepEqual( Stem("suggerirle"), "sugger");});
test("suggerirlo -> sugger", function() {deepEqual( Stem("suggerirlo"), "sugger");});
test("suggerisce -> sugger", function() {deepEqual( Stem("suggerisce"), "sugger");});
test("suggeriscono -> sugger", function() {deepEqual( Stem("suggeriscono"), "sugger");});
test("suggerita -> sugger", function() {deepEqual( Stem("suggerita"), "sugger");});
test("suggerite -> sugger", function() {deepEqual( Stem("suggerite"), "sugger");});
test("suggerito -> sugger", function() {deepEqual( Stem("suggerito"), "sugger");});
test("suggeriva -> sugger", function() {deepEqual( Stem("suggeriva"), "sugger");});
test("suggerivano -> sugger", function() {deepEqual( Stem("suggerivano"), "sugger");});
test("suggestiva -> suggest", function() {deepEqual( Stem("suggestiva"), "suggest");});
test("suggezione -> suggezion", function() {deepEqual( Stem("suggezione"), "suggezion");});
test("sugli -> sugl", function() {deepEqual( Stem("sugli"), "sugl");});
test("sugo -> sug", function() {deepEqual( Stem("sugo"), "sug");});
test("sui -> sui", function() {deepEqual( Stem("sui"), "sui");});
test("suicida -> suicid", function() {deepEqual( Stem("suicida"), "suicid");});
test("suicidare -> suicid", function() {deepEqual( Stem("suicidare"), "suicid");});
test("suicidi -> suicid", function() {deepEqual( Stem("suicidi"), "suicid");});
test("suicidio -> suicid", function() {deepEqual( Stem("suicidio"), "suicid");});
test("suisse -> suiss", function() {deepEqual( Stem("suisse"), "suiss");});
test("sukhoi -> sukho", function() {deepEqual( Stem("sukhoi"), "sukho");});
test("sul -> sul", function() {deepEqual( Stem("sul"), "sul");});
test("sula -> sul", function() {deepEqual( Stem("sula"), "sul");});
test("sulcis -> sulcis", function() {deepEqual( Stem("sulcis"), "sulcis");});
test("sull -> sull", function() {deepEqual( Stem("sull"), "sull");});
test("sulla -> sull", function() {deepEqual( Stem("sulla"), "sull");});
test("sulle -> sull", function() {deepEqual( Stem("sulle"), "sull");});
test("sullo -> sull", function() {deepEqual( Stem("sullo"), "sull");});
test("sullodato -> sullod", function() {deepEqual( Stem("sullodato"), "sullod");});
test("sulman -> sulman", function() {deepEqual( Stem("sulman"), "sulman");});
test("sulta -> sult", function() {deepEqual( Stem("sulta"), "sult");});
test("suma -> sum", function() {deepEqual( Stem("suma"), "sum");});
test("sumatis -> sumatis", function() {deepEqual( Stem("sumatis"), "sumatis");});
test("summentovate -> summentov", function() {deepEqual( Stem("summentovate"), "summentov");});
test("summentovato -> summentov", function() {deepEqual( Stem("summentovato"), "summentov");});
test("sun -> sun", function() {deepEqual( Stem("sun"), "sun");});
test("sunday -> sunday", function() {deepEqual( Stem("sunday"), "sunday");});
test("sunny -> sunny", function() {deepEqual( Stem("sunny"), "sunny");});
test("sunti -> sunt", function() {deepEqual( Stem("sunti"), "sunt");});
test("sunto -> sunt", function() {deepEqual( Stem("sunto"), "sunt");});
test("suo -> suo", function() {deepEqual( Stem("suo"), "suo");});
test("suocera -> suocer", function() {deepEqual( Stem("suocera"), "suocer");});
test("suoi -> suo", function() {deepEqual( Stem("suoi"), "suo");});
test("suol -> suol", function() {deepEqual( Stem("suol"), "suol");});
test("suolavecchia -> suolavecc", function() {deepEqual( Stem("suolavecchia"), "suolavecc");});
test("suole -> suol", function() {deepEqual( Stem("suole"), "suol");});
test("suolo -> suol", function() {deepEqual( Stem("suolo"), "suol");});
test("suon -> suon", function() {deepEqual( Stem("suon"), "suon");});
test("suona -> suon", function() {deepEqual( Stem("suona"), "suon");});
test("suonando -> suon", function() {deepEqual( Stem("suonando"), "suon");});
test("suonare -> suon", function() {deepEqual( Stem("suonare"), "suon");});
test("suonato -> suon", function() {deepEqual( Stem("suonato"), "suon");});
test("suoneranno -> suon", function() {deepEqual( Stem("suoneranno"), "suon");});
test("suoni -> suon", function() {deepEqual( Stem("suoni"), "suon");});
test("suono -> suon", function() {deepEqual( Stem("suono"), "suon");});
test("suora -> suor", function() {deepEqual( Stem("suora"), "suor");});
test("suore -> suor", function() {deepEqual( Stem("suore"), "suor");});
test("super -> super", function() {deepEqual( Stem("super"), "super");});
test("supera -> super", function() {deepEqual( Stem("supera"), "super");});
test("superagip -> superagip", function() {deepEqual( Stem("superagip"), "superagip");});
test("superando -> super", function() {deepEqual( Stem("superando"), "super");});
test("superano -> super", function() {deepEqual( Stem("superano"), "super");});
test("superar -> super", function() {deepEqual( Stem("superar"), "super");});
test("superare -> super", function() {deepEqual( Stem("superare"), "super");});
test("superata -> super", function() {deepEqual( Stem("superata"), "super");});
test("superate -> super", function() {deepEqual( Stem("superate"), "super");});
test("superati -> super", function() {deepEqual( Stem("superati"), "super");});
test("superato -> super", function() {deepEqual( Stem("superato"), "super");});
test("superatò -> superat", function() {deepEqual( Stem("superatò"), "superat");});
test("superavo -> super", function() {deepEqual( Stem("superavo"), "super");});
test("superba -> superb", function() {deepEqual( Stem("superba"), "superb");});
test("superbi -> superb", function() {deepEqual( Stem("superbi"), "superb");});
test("superbia -> superb", function() {deepEqual( Stem("superbia"), "superb");});
test("superbioso -> superb", function() {deepEqual( Stem("superbioso"), "superb");});
test("superbo -> superb", function() {deepEqual( Stem("superbo"), "superb");});
test("superbollo -> superboll", function() {deepEqual( Stem("superbollo"), "superboll");});
test("superboy -> superboy", function() {deepEqual( Stem("superboy"), "superboy");});
test("superclassifica -> superclassif", function() {deepEqual( Stem("superclassifica"), "superclassif");});
test("superfavorito -> superfavor", function() {deepEqual( Stem("superfavorito"), "superfavor");});
test("superficiale -> superficial", function() {deepEqual( Stem("superficiale"), "superficial");});
test("superficie -> superfic", function() {deepEqual( Stem("superficie"), "superfic");});
test("superflui -> superflu", function() {deepEqual( Stem("superflui"), "superflu");});
test("superfluità -> superflu", function() {deepEqual( Stem("superfluità"), "superflu");});
test("superfluo -> superflu", function() {deepEqual( Stem("superfluo"), "superflu");});
test("superhuman -> superhuman", function() {deepEqual( Stem("superhuman"), "superhuman");});
test("superi -> super", function() {deepEqual( Stem("superi"), "super");});
test("superiora -> superior", function() {deepEqual( Stem("superiora"), "superior");});
test("superiore -> superior", function() {deepEqual( Stem("superiore"), "superior");});
test("superiori -> superior", function() {deepEqual( Stem("superiori"), "superior");});
test("superiorità -> superior", function() {deepEqual( Stem("superiorità"), "superior");});
test("supermercato -> supermerc", function() {deepEqual( Stem("supermercato"), "supermerc");});
test("superpetroliere -> superpetrol", function() {deepEqual( Stem("superpetroliere"), "superpetrol");});
test("superstite -> superst", function() {deepEqual( Stem("superstite"), "superst");});
test("supervisione -> supervision", function() {deepEqual( Stem("supervisione"), "supervision");});
test("suppellettile -> suppellettil", function() {deepEqual( Stem("suppellettile"), "suppellettil");});
test("suppellettili -> suppellettil", function() {deepEqual( Stem("suppellettili"), "suppellettil");});
test("supplementare -> supplement", function() {deepEqual( Stem("supplementare"), "supplement");});
test("supplementari -> supplementar", function() {deepEqual( Stem("supplementari"), "supplementar");});
test("supplica -> supplic", function() {deepEqual( Stem("supplica"), "supplic");});
test("supplicando -> supplic", function() {deepEqual( Stem("supplicando"), "supplic");});
test("supplicare -> supplic", function() {deepEqual( Stem("supplicare"), "supplic");});
test("supplicarono -> supplic", function() {deepEqual( Stem("supplicarono"), "supplic");});
test("supplicazione -> supplic", function() {deepEqual( Stem("supplicazione"), "supplic");});
test("suppliche -> supplic", function() {deepEqual( Stem("suppliche"), "supplic");});
test("supplichevole -> supplichevol", function() {deepEqual( Stem("supplichevole"), "supplichevol");});
test("supplichevoli -> supplichevol", function() {deepEqual( Stem("supplichevoli"), "supplichevol");});
test("supplico -> supplic", function() {deepEqual( Stem("supplico"), "supplic");});
test("supplimento -> suppl", function() {deepEqual( Stem("supplimento"), "suppl");});
test("supplire -> suppl", function() {deepEqual( Stem("supplire"), "suppl");});
test("supplirlo -> suppl", function() {deepEqual( Stem("supplirlo"), "suppl");});
test("supplisca -> suppl", function() {deepEqual( Stem("supplisca"), "suppl");});
test("supplisce -> suppl", function() {deepEqual( Stem("supplisce"), "suppl");});
test("supplito -> suppl", function() {deepEqual( Stem("supplito"), "suppl");});
test("supplivano -> suppl", function() {deepEqual( Stem("supplivano"), "suppl");});
test("supplizi -> suppliz", function() {deepEqual( Stem("supplizi"), "suppliz");});
test("supplizio -> suppliz", function() {deepEqual( Stem("supplizio"), "suppliz");});
test("supply -> supply", function() {deepEqual( Stem("supply"), "supply");});
test("suppone -> suppon", function() {deepEqual( Stem("suppone"), "suppon");});
test("supponendo -> suppon", function() {deepEqual( Stem("supponendo"), "suppon");});
test("supponendolo -> suppon", function() {deepEqual( Stem("supponendolo"), "suppon");});
test("supponesse -> supponess", function() {deepEqual( Stem("supponesse"), "supponess");});
test("supponete -> suppon", function() {deepEqual( Stem("supponete"), "suppon");});
test("supponeva -> suppon", function() {deepEqual( Stem("supponeva"), "suppon");});
test("supponiamo -> suppon", function() {deepEqual( Stem("supponiamo"), "suppon");});
test("supporre -> supporr", function() {deepEqual( Stem("supporre"), "supporr");});
test("supportati -> support", function() {deepEqual( Stem("supportati"), "support");});
test("supporti -> support", function() {deepEqual( Stem("supporti"), "support");});
test("supporto -> support", function() {deepEqual( Stem("supporto"), "support");});
test("suppose -> suppos", function() {deepEqual( Stem("suppose"), "suppos");});
test("supposizione -> supposizion", function() {deepEqual( Stem("supposizione"), "supposizion");});
test("supposizioni -> supposizion", function() {deepEqual( Stem("supposizioni"), "supposizion");});
test("supposte -> suppost", function() {deepEqual( Stem("supposte"), "suppost");});
test("supposti -> suppost", function() {deepEqual( Stem("supposti"), "suppost");});
test("supposto -> suppost", function() {deepEqual( Stem("supposto"), "suppost");});
test("suprema -> suprem", function() {deepEqual( Stem("suprema"), "suprem");});
test("supremazia -> supremaz", function() {deepEqual( Stem("supremazia"), "supremaz");});
test("supremo -> suprem", function() {deepEqual( Stem("supremo"), "suprem");});
test("sur -> sur", function() {deepEqual( Stem("sur"), "sur");});
test("surplus -> surplus", function() {deepEqual( Stem("surplus"), "surplus");});
test("surreale -> surreal", function() {deepEqual( Stem("surreale"), "surreal");});
test("surrenti -> surrent", function() {deepEqual( Stem("surrenti"), "surrent");});
test("surriscaldamento -> surriscald", function() {deepEqual( Stem("surriscaldamento"), "surriscald");});
test("surriscaldata -> surriscald", function() {deepEqual( Stem("surriscaldata"), "surriscald");});
test("survey -> survey", function() {deepEqual( Stem("survey"), "survey");});
test("susa -> sus", function() {deepEqual( Stem("susa"), "sus");});
test("susan -> susan", function() {deepEqual( Stem("susan"), "susan");});
test("susanna -> susann", function() {deepEqual( Stem("susanna"), "susann");});
test("suscita -> susc", function() {deepEqual( Stem("suscita"), "susc");});
test("suscitando -> suscit", function() {deepEqual( Stem("suscitando"), "suscit");});
test("suscitar -> suscit", function() {deepEqual( Stem("suscitar"), "suscit");});
test("suscitare -> suscit", function() {deepEqual( Stem("suscitare"), "suscit");});
test("suscitarsi -> suscit", function() {deepEqual( Stem("suscitarsi"), "suscit");});
test("suscitasse -> suscit", function() {deepEqual( Stem("suscitasse"), "suscit");});
test("suscitate -> suscit", function() {deepEqual( Stem("suscitate"), "suscit");});
test("suscitati -> suscit", function() {deepEqual( Stem("suscitati"), "suscit");});
test("suscitato -> suscit", function() {deepEqual( Stem("suscitato"), "suscit");});
test("suscitò -> suscit", function() {deepEqual( Stem("suscitò"), "suscit");});
test("susine -> susin", function() {deepEqual( Stem("susine"), "susin");});
test("susini -> susin", function() {deepEqual( Stem("susini"), "susin");});
test("susseguendo -> sussegu", function() {deepEqual( Stem("susseguendo"), "sussegu");});
test("susseguente -> susseguent", function() {deepEqual( Stem("susseguente"), "susseguent");});
test("susseguiti -> sussegu", function() {deepEqual( Stem("susseguiti"), "sussegu");});
test("susseguono -> sussegu", function() {deepEqual( Stem("susseguono"), "sussegu");});
test("sussidi -> sussid", function() {deepEqual( Stem("sussidi"), "sussid");});
test("sussidiaria -> sussidiar", function() {deepEqual( Stem("sussidiaria"), "sussidiar");});
test("sussidio -> sussid", function() {deepEqual( Stem("sussidio"), "sussid");});
test("sussiste -> sussist", function() {deepEqual( Stem("sussiste"), "sussist");});
test("sussistere -> sussist", function() {deepEqual( Stem("sussistere"), "sussist");});
test("susurrando -> susurr", function() {deepEqual( Stem("susurrando"), "susurr");});
test("susurrandosi -> susurr", function() {deepEqual( Stem("susurrandosi"), "susurr");});
test("susurrare -> susurr", function() {deepEqual( Stem("susurrare"), "susurr");});
test("susurrava -> susurr", function() {deepEqual( Stem("susurrava"), "susurr");});
test("susurrìo -> susurrì", function() {deepEqual( Stem("susurrìo"), "susurrì");});
test("susurro -> susurr", function() {deepEqual( Stem("susurro"), "susurr");});
test("susurrò -> susurr", function() {deepEqual( Stem("susurrò"), "susurr");});
test("sutar -> sut", function() {deepEqual( Stem("sutar"), "sut");});
test("sutura -> sutur", function() {deepEqual( Stem("sutura"), "sutur");});
test("suzhou -> suzhou", function() {deepEqual( Stem("suzhou"), "suzhou");});
test("svagamenti -> svag", function() {deepEqual( Stem("svagamenti"), "svag");});
test("svagatezza -> svagatezz", function() {deepEqual( Stem("svagatezza"), "svagatezz");});
test("svago -> svag", function() {deepEqual( Stem("svago"), "svag");});
test("svaligiate -> svalig", function() {deepEqual( Stem("svaligiate"), "svalig");});
test("svalutato -> svalut", function() {deepEqual( Stem("svalutato"), "svalut");});
test("svanì -> svan", function() {deepEqual( Stem("svanì"), "svan");});
test("svanire -> svan", function() {deepEqual( Stem("svanire"), "svan");});
test("svanirebbe -> svan", function() {deepEqual( Stem("svanirebbe"), "svan");});
test("svanita -> svan", function() {deepEqual( Stem("svanita"), "svan");});
test("svanito -> svan", function() {deepEqual( Stem("svanito"), "svan");});
test("svaniva -> svan", function() {deepEqual( Stem("svaniva"), "svan");});
test("svantaggiati -> svantagg", function() {deepEqual( Stem("svantaggiati"), "svantagg");});
test("svantaggio -> svantagg", function() {deepEqual( Stem("svantaggio"), "svantagg");});
test("svaporare -> svapor", function() {deepEqual( Stem("svaporare"), "svapor");});
test("svataggiate -> svatagg", function() {deepEqual( Stem("svataggiate"), "svatagg");});
test("sve -> sve", function() {deepEqual( Stem("sve"), "sve");});
test("svedese -> svedes", function() {deepEqual( Stem("svedese"), "svedes");});
test("sveglia -> svegl", function() {deepEqual( Stem("sveglia"), "svegl");});
test("svegliarla -> svegl", function() {deepEqual( Stem("svegliarla"), "svegl");});
test("svegliarsi -> svegl", function() {deepEqual( Stem("svegliarsi"), "svegl");});
test("svegliasse -> svegl", function() {deepEqual( Stem("svegliasse"), "svegl");});
test("svegliata -> svegl", function() {deepEqual( Stem("svegliata"), "svegl");});
test("svegliato -> svegl", function() {deepEqual( Stem("svegliato"), "svegl");});
test("svegliava -> svegl", function() {deepEqual( Stem("svegliava"), "svegl");});
test("sveglierà -> svegl", function() {deepEqual( Stem("sveglierà"), "svegl");});
test("sveglio -> svegl", function() {deepEqual( Stem("sveglio"), "svegl");});
test("svegliò -> svegl", function() {deepEqual( Stem("svegliò"), "svegl");});
test("svelano -> svel", function() {deepEqual( Stem("svelano"), "svel");});
test("svelare -> svel", function() {deepEqual( Stem("svelare"), "svel");});
test("svelato -> svel", function() {deepEqual( Stem("svelato"), "svel");});
test("svellere -> svell", function() {deepEqual( Stem("svellere"), "svell");});
test("svelte -> svelt", function() {deepEqual( Stem("svelte"), "svelt");});
test("sveltire -> svelt", function() {deepEqual( Stem("sveltire"), "svelt");});
test("sven -> sven", function() {deepEqual( Stem("sven"), "sven");});
test("svenevole -> svenevol", function() {deepEqual( Stem("svenevole"), "svenevol");});
test("sveng -> sveng", function() {deepEqual( Stem("sveng"), "sveng");});
test("svenimenti -> sven", function() {deepEqual( Stem("svenimenti"), "sven");});
test("svenne -> svenn", function() {deepEqual( Stem("svenne"), "svenn");});
test("svenska -> svensk", function() {deepEqual( Stem("svenska"), "svensk");});
test("sventa -> svent", function() {deepEqual( Stem("sventa"), "svent");});
test("sventolare -> sventol", function() {deepEqual( Stem("sventolare"), "sventol");});
test("sventolata -> sventol", function() {deepEqual( Stem("sventolata"), "sventol");});
test("sventolate -> sventol", function() {deepEqual( Stem("sventolate"), "sventol");});
test("sventolio -> sventol", function() {deepEqual( Stem("sventolio"), "sventol");});
test("sventura -> sventur", function() {deepEqual( Stem("sventura"), "sventur");});
test("sventurata -> sventur", function() {deepEqual( Stem("sventurata"), "sventur");});
test("sventurato -> sventur", function() {deepEqual( Stem("sventurato"), "sventur");});
test("sventure -> sventur", function() {deepEqual( Stem("sventure"), "sventur");});
test("svergognandola -> svergogn", function() {deepEqual( Stem("svergognandola"), "svergogn");});
test("svergognasse -> svergogn", function() {deepEqual( Stem("svergognasse"), "svergogn");});
test("svergognato -> svergogn", function() {deepEqual( Stem("svergognato"), "svergogn");});
test("sversamenti -> svers", function() {deepEqual( Stem("sversamenti"), "svers");});
test("sversamento -> svers", function() {deepEqual( Stem("sversamento"), "svers");});
test("svetlana -> svetlan", function() {deepEqual( Stem("svetlana"), "svetlan");});
test("svezia -> svez", function() {deepEqual( Stem("svezia"), "svez");});
test("svi -> svi", function() {deepEqual( Stem("svi"), "svi");});
test("sviamento -> svi", function() {deepEqual( Stem("sviamento"), "svi");});
test("sviare -> svi", function() {deepEqual( Stem("sviare"), "svi");});
test("sviene -> svien", function() {deepEqual( Stem("sviene"), "svien");});
test("svignò -> svign", function() {deepEqual( Stem("svignò"), "svign");});
test("sviluppa -> svilupp", function() {deepEqual( Stem("sviluppa"), "svilupp");});
test("sviluppando -> svilupp", function() {deepEqual( Stem("sviluppando"), "svilupp");});
test("sviluppare -> svilupp", function() {deepEqual( Stem("sviluppare"), "svilupp");});
test("sviluppata -> svilupp", function() {deepEqual( Stem("sviluppata"), "svilupp");});
test("sviluppate -> svilupp", function() {deepEqual( Stem("sviluppate"), "svilupp");});
test("sviluppati -> svilupp", function() {deepEqual( Stem("sviluppati"), "svilupp");});
test("sviluppato -> svilupp", function() {deepEqual( Stem("sviluppato"), "svilupp");});
test("svilupperà -> svilupp", function() {deepEqual( Stem("svilupperà"), "svilupp");});
test("sviluppi -> svilupp", function() {deepEqual( Stem("sviluppi"), "svilupp");});
test("sviluppo -> svilupp", function() {deepEqual( Stem("sviluppo"), "svilupp");});
test("sviluppò -> svilupp", function() {deepEqual( Stem("sviluppò"), "svilupp");});
test("svincolandosi -> svincol", function() {deepEqual( Stem("svincolandosi"), "svincol");});
test("svincolarsi -> svincol", function() {deepEqual( Stem("svincolarsi"), "svincol");});
test("svincolo -> svincol", function() {deepEqual( Stem("svincolo"), "svincol");});
test("svisceratezza -> svisceratezz", function() {deepEqual( Stem("svisceratezza"), "svisceratezz");});
test("sviscerati -> sviscer", function() {deepEqual( Stem("sviscerati"), "sviscer");});
test("sviscerato -> sviscer", function() {deepEqual( Stem("sviscerato"), "sviscer");});
test("svizzera -> svizzer", function() {deepEqual( Stem("svizzera"), "svizzer");});
test("svizzere -> svizz", function() {deepEqual( Stem("svizzere"), "svizz");});
test("svizzeri -> svizzer", function() {deepEqual( Stem("svizzeri"), "svizzer");});
test("svizzero -> svizzer", function() {deepEqual( Stem("svizzero"), "svizzer");});
test("svk -> svk", function() {deepEqual( Stem("svk"), "svk");});
test("svogliatamente -> svogliat", function() {deepEqual( Stem("svogliatamente"), "svogliat");});
test("svogliate -> svogl", function() {deepEqual( Stem("svogliate"), "svogl");});
test("svogliatezza -> svogliatezz", function() {deepEqual( Stem("svogliatezza"), "svogliatezz");});
test("svogliato -> svogl", function() {deepEqual( Stem("svogliato"), "svogl");});
test("svolazzano -> svolazz", function() {deepEqual( Stem("svolazzano"), "svolazz");});
test("svolazzi -> svolazz", function() {deepEqual( Stem("svolazzi"), "svolazz");});
test("svolgano -> svolg", function() {deepEqual( Stem("svolgano"), "svolg");});
test("svolge -> svolg", function() {deepEqual( Stem("svolge"), "svolg");});
test("svolgendo -> svolg", function() {deepEqual( Stem("svolgendo"), "svolg");});
test("svolgendosi -> svolg", function() {deepEqual( Stem("svolgendosi"), "svolg");});
test("svolgerà -> svolg", function() {deepEqual( Stem("svolgerà"), "svolg");});
test("svolgeranno -> svolg", function() {deepEqual( Stem("svolgeranno"), "svolg");});
test("svolgere -> svolg", function() {deepEqual( Stem("svolgere"), "svolg");});
test("svolgerlo -> svolg", function() {deepEqual( Stem("svolgerlo"), "svolg");});
test("svolgersi -> svolg", function() {deepEqual( Stem("svolgersi"), "svolg");});
test("svolgessero -> svolg", function() {deepEqual( Stem("svolgessero"), "svolg");});
test("svolgevano -> svolg", function() {deepEqual( Stem("svolgevano"), "svolg");});
test("svolgimento -> svolg", function() {deepEqual( Stem("svolgimento"), "svolg");});
test("svolgono -> svolg", function() {deepEqual( Stem("svolgono"), "svolg");});
test("svolse -> svols", function() {deepEqual( Stem("svolse"), "svols");});
test("svolta -> svolt", function() {deepEqual( Stem("svolta"), "svolt");});
test("svoltasi -> svoltas", function() {deepEqual( Stem("svoltasi"), "svoltas");});
test("svolte -> svolt", function() {deepEqual( Stem("svolte"), "svolt");});
test("svoltesi -> svoltes", function() {deepEqual( Stem("svoltesi"), "svoltes");});
test("svolti -> svolt", function() {deepEqual( Stem("svolti"), "svolt");});
test("svoltisi -> svoltis", function() {deepEqual( Stem("svoltisi"), "svoltis");});
test("svolto -> svolt", function() {deepEqual( Stem("svolto"), "svolt");});
test("svoltò -> svolt", function() {deepEqual( Stem("svoltò"), "svolt");});
test("svoltosi -> svoltos", function() {deepEqual( Stem("svoltosi"), "svoltos");});
test("swatch -> swatc", function() {deepEqual( Stem("swatch"), "swatc");});
test("swcrive -> swcriv", function() {deepEqual( Stem("swcrive"), "swcriv");});
test("sydkraft -> sydkraft", function() {deepEqual( Stem("sydkraft"), "sydkraft");});
test("sydney -> sydney", function() {deepEqual( Stem("sydney"), "sydney");});
test("sylvester -> sylvester", function() {deepEqual( Stem("sylvester"), "sylvester");});
test("symbols -> symbols", function() {deepEqual( Stem("symbols"), "symbols");});
test("systems -> systems", function() {deepEqual( Stem("systems"), "systems");});
test("szabo -> szab", function() {deepEqual( Stem("szabo"), "szab");});
test("szalasi -> szalas", function() {deepEqual( Stem("szalasi"), "szalas");});
test("t -> t", function() {deepEqual( Stem("t"), "t");});
test("ta -> ta", function() {deepEqual( Stem("ta"), "ta");});
test("tabacchi -> tabacc", function() {deepEqual( Stem("tabacchi"), "tabacc");});
test("tabacco -> tabacc", function() {deepEqual( Stem("tabacco"), "tabacc");});
test("tabarez -> tabarez", function() {deepEqual( Stem("tabarez"), "tabarez");});
test("tabasco -> tabasc", function() {deepEqual( Stem("tabasco"), "tabasc");});
test("tabella -> tabell", function() {deepEqual( Stem("tabella"), "tabell");});
test("tabelle -> tabell", function() {deepEqual( Stem("tabelle"), "tabell");});
test("tabellone -> tabellon", function() {deepEqual( Stem("tabellone"), "tabellon");});
test("tabernacolo -> tabernacol", function() {deepEqual( Stem("tabernacolo"), "tabernacol");});
test("tabladini -> tabladin", function() {deepEqual( Stem("tabladini"), "tabladin");});
test("tabloid -> tabloid", function() {deepEqual( Stem("tabloid"), "tabloid");});
test("tabù -> tabù", function() {deepEqual( Stem("tabù"), "tabù");});
test("tacce -> tacc", function() {deepEqual( Stem("tacce"), "tacc");});
test("tacchi -> tacc", function() {deepEqual( Stem("tacchi"), "tacc");});
test("tacchinardi -> tacchinard", function() {deepEqual( Stem("tacchinardi"), "tacchinard");});
test("tacchini -> tacchin", function() {deepEqual( Stem("tacchini"), "tacchin");});
test("tacciato -> tacc", function() {deepEqual( Stem("tacciato"), "tacc");});
test("tacciavano -> tacc", function() {deepEqual( Stem("tacciavano"), "tacc");});
test("taccio -> tacc", function() {deepEqual( Stem("taccio"), "tacc");});
test("tacciono -> tacc", function() {deepEqual( Stem("tacciono"), "tacc");});
test("taccuino -> taccuin", function() {deepEqual( Stem("taccuino"), "taccuin");});
test("tace -> tac", function() {deepEqual( Stem("tace"), "tac");});
test("tacendo -> tac", function() {deepEqual( Stem("tacendo"), "tac");});
test("tacer -> tacer", function() {deepEqual( Stem("tacer"), "tacer");});
test("tacerà -> tac", function() {deepEqual( Stem("tacerà"), "tac");});
test("tacere -> tac", function() {deepEqual( Stem("tacere"), "tac");});
test("tacersi -> tac", function() {deepEqual( Stem("tacersi"), "tac");});
test("tacessimo -> tacessim", function() {deepEqual( Stem("tacessimo"), "tacessim");});
test("tacete -> tac", function() {deepEqual( Stem("tacete"), "tac");});
test("taceva -> tac", function() {deepEqual( Stem("taceva"), "tac");});
test("tacevano -> tac", function() {deepEqual( Stem("tacevano"), "tac");});
test("tacitamente -> tacit", function() {deepEqual( Stem("tacitamente"), "tacit");});
test("taciti -> tac", function() {deepEqual( Stem("taciti"), "tac");});
test("tacito -> tac", function() {deepEqual( Stem("tacito"), "tac");});
test("taciuto -> tac", function() {deepEqual( Stem("taciuto"), "tac");});
test("tacque -> tacqu", function() {deepEqual( Stem("tacque"), "tacqu");});
test("taddeo -> tadde", function() {deepEqual( Stem("taddeo"), "tadde");});
test("tadino -> tadin", function() {deepEqual( Stem("tadino"), "tadin");});
test("tafferìa -> tafferì", function() {deepEqual( Stem("tafferìa"), "tafferì");});
test("tafferugli -> tafferugl", function() {deepEqual( Stem("tafferugli"), "tafferugl");});
test("tafferuglio -> tafferugl", function() {deepEqual( Stem("tafferuglio"), "tafferugl");});
test("taffete -> taff", function() {deepEqual( Stem("taffete"), "taff");});
test("tagespiegel -> tagespiegel", function() {deepEqual( Stem("tagespiegel"), "tagespiegel");});
test("tagli -> tagl", function() {deepEqual( Stem("tagli"), "tagl");});
test("taglia -> tagl", function() {deepEqual( Stem("taglia"), "tagl");});
test("tagliando -> tagl", function() {deepEqual( Stem("tagliando"), "tagl");});
test("tagliare -> tagl", function() {deepEqual( Stem("tagliare"), "tagl");});
test("tagliarla -> tagl", function() {deepEqual( Stem("tagliarla"), "tagl");});
test("tagliarmi -> tagl", function() {deepEqual( Stem("tagliarmi"), "tagl");});
test("tagliata -> tagl", function() {deepEqual( Stem("tagliata"), "tagl");});
test("tagliati -> tagl", function() {deepEqual( Stem("tagliati"), "tagl");});
test("tagliato -> tagl", function() {deepEqual( Stem("tagliato"), "tagl");});
test("tagliavano -> tagl", function() {deepEqual( Stem("tagliavano"), "tagl");});
test("taglie -> tagl", function() {deepEqual( Stem("taglie"), "tagl");});
test("tagliente -> taglient", function() {deepEqual( Stem("tagliente"), "taglient");});
test("taglio -> tagl", function() {deepEqual( Stem("taglio"), "tagl");});
test("taglire -> tagl", function() {deepEqual( Stem("taglire"), "tagl");});
test("taibi -> taib", function() {deepEqual( Stem("taibi"), "taib");});
test("tailandia -> tailand", function() {deepEqual( Stem("tailandia"), "tailand");});
test("taipei -> taipe", function() {deepEqual( Stem("taipei"), "taipe");});
test("taj -> taj", function() {deepEqual( Stem("taj"), "taj");});
test("tajani -> tajan", function() {deepEqual( Stem("tajani"), "tajan");});
test("takeover -> takeover", function() {deepEqual( Stem("takeover"), "takeover");});
test("tal -> tal", function() {deepEqual( Stem("tal"), "tal");});
test("talamona -> talamon", function() {deepEqual( Stem("talamona"), "talamon");});
test("talché -> talc", function() {deepEqual( Stem("talché"), "talc");});
test("tale -> tal", function() {deepEqual( Stem("tale"), "tal");});
test("taleban -> taleban", function() {deepEqual( Stem("taleban"), "taleban");});
test("talento -> talent", function() {deepEqual( Stem("talento"), "talent");});
test("tali -> tal", function() {deepEqual( Stem("tali"), "tal");});
test("talk -> talk", function() {deepEqual( Stem("talk"), "talk");});
test("tallero -> taller", function() {deepEqual( Stem("tallero"), "taller");});
test("talleur -> talleur", function() {deepEqual( Stem("talleur"), "talleur");});
test("talmente -> talment", function() {deepEqual( Stem("talmente"), "talment");});
test("talmenteché -> talmentec", function() {deepEqual( Stem("talmenteché"), "talmentec");});
test("talora -> talor", function() {deepEqual( Stem("talora"), "talor");});
test("talune -> talun", function() {deepEqual( Stem("talune"), "talun");});
test("taluni -> talun", function() {deepEqual( Stem("taluni"), "talun");});
test("taluno -> talun", function() {deepEqual( Stem("taluno"), "talun");});
test("talvolta -> talvolt", function() {deepEqual( Stem("talvolta"), "talvolt");});
test("tamburella -> tamburell", function() {deepEqual( Stem("tamburella"), "tamburell");});
test("tamburi -> tambur", function() {deepEqual( Stem("tamburi"), "tambur");});
test("tamburro -> tamburr", function() {deepEqual( Stem("tamburro"), "tamburr");});
test("tamino -> tamin", function() {deepEqual( Stem("tamino"), "tamin");});
test("tampa -> tamp", function() {deepEqual( Stem("tampa"), "tamp");});
test("tampone -> tampon", function() {deepEqual( Stem("tampone"), "tampon");});
test("tana -> tan", function() {deepEqual( Stem("tana"), "tan");});
test("tanabuso -> tanabus", function() {deepEqual( Stem("tanabuso"), "tanabus");});
test("tanagliare -> tanagl", function() {deepEqual( Stem("tanagliare"), "tanagl");});
test("tanaglie -> tanagl", function() {deepEqual( Stem("tanaglie"), "tanagl");});
test("tane -> tan", function() {deepEqual( Stem("tane"), "tan");});
test("tanfi -> tanf", function() {deepEqual( Stem("tanfi"), "tanf");});
test("tanfo -> tanf", function() {deepEqual( Stem("tanfo"), "tanf");});
test("tangente -> tangent", function() {deepEqual( Stem("tangente"), "tangent");});
test("tangenti -> tangent", function() {deepEqual( Stem("tangenti"), "tangent");});
test("tangentistì -> tangent", function() {deepEqual( Stem("tangentistì"), "tangent");});
test("tangentopoli -> tangentopol", function() {deepEqual( Stem("tangentopoli"), "tangentopol");});
test("tangeri -> tanger", function() {deepEqual( Stem("tangeri"), "tanger");});
test("tangheri -> tangher", function() {deepEqual( Stem("tangheri"), "tangher");});
test("tanghero -> tangher", function() {deepEqual( Stem("tanghero"), "tangher");});
test("tani -> tan", function() {deepEqual( Stem("tani"), "tan");});
test("tant -> tant", function() {deepEqual( Stem("tant"), "tant");});
test("tanta -> tant", function() {deepEqual( Stem("tanta"), "tant");});
test("tante -> tant", function() {deepEqual( Stem("tante"), "tant");});
test("tanti -> tant", function() {deepEqual( Stem("tanti"), "tant");});
test("tantino -> tantin", function() {deepEqual( Stem("tantino"), "tantin");});
test("tantissimi -> tantissim", function() {deepEqual( Stem("tantissimi"), "tantissim");});
test("tanto -> tant", function() {deepEqual( Stem("tanto"), "tant");});
test("tantomeno -> tantomen", function() {deepEqual( Stem("tantomeno"), "tantomen");});
test("tantopiù -> tantopiù", function() {deepEqual( Stem("tantopiù"), "tantopiù");});
test("tantum -> tantum", function() {deepEqual( Stem("tantum"), "tantum");});
test("tanzania -> tanzan", function() {deepEqual( Stem("tanzania"), "tanzan");});
test("taormina -> taormin", function() {deepEqual( Stem("taormina"), "taormin");});
test("tappa -> tapp", function() {deepEqual( Stem("tappa"), "tapp");});
test("tappare -> tapp", function() {deepEqual( Stem("tappare"), "tapp");});
test("tappe -> tapp", function() {deepEqual( Stem("tappe"), "tapp");});
test("tappeti -> tappet", function() {deepEqual( Stem("tappeti"), "tappet");});
test("tappeto -> tappet", function() {deepEqual( Stem("tappeto"), "tappet");});
test("tappezzate -> tappezz", function() {deepEqual( Stem("tappezzate"), "tappezz");});
test("tappezzerie -> tappezzer", function() {deepEqual( Stem("tappezzerie"), "tappezzer");});
test("tappo -> tapp", function() {deepEqual( Stem("tappo"), "tapp");});
test("tar -> tar", function() {deepEqual( Stem("tar"), "tar");});
test("tara -> tar", function() {deepEqual( Stem("tara"), "tar");});
test("tarantino -> tarantin", function() {deepEqual( Stem("tarantino"), "tarantin");});
test("tarapur -> tarapur", function() {deepEqual( Stem("tarapur"), "tarapur");});
test("tarcagnota -> tarcagnot", function() {deepEqual( Stem("tarcagnota"), "tarcagnot");});
test("tarchiati -> tarc", function() {deepEqual( Stem("tarchiati"), "tarc");});
test("tarda -> tard", function() {deepEqual( Stem("tarda"), "tard");});
test("tardare -> tard", function() {deepEqual( Stem("tardare"), "tard");});
test("tardato -> tard", function() {deepEqual( Stem("tardato"), "tard");});
test("tarde -> tard", function() {deepEqual( Stem("tarde"), "tard");});
test("tardelli -> tardell", function() {deepEqual( Stem("tardelli"), "tardell");});
test("tardi -> tard", function() {deepEqual( Stem("tardi"), "tard");});
test("tardini -> tardin", function() {deepEqual( Stem("tardini"), "tardin");});
test("tarditi -> tard", function() {deepEqual( Stem("tarditi"), "tard");});
test("tardivamente -> tardiv", function() {deepEqual( Stem("tardivamente"), "tardiv");});
test("tardo -> tard", function() {deepEqual( Stem("tardo"), "tard");});
test("tardò -> tard", function() {deepEqual( Stem("tardò"), "tard");});
test("tardocomunista -> tardocomun", function() {deepEqual( Stem("tardocomunista"), "tardocomun");});
test("targa -> targ", function() {deepEqual( Stem("targa"), "targ");});
test("targata -> targ", function() {deepEqual( Stem("targata"), "targ");});
test("target -> target", function() {deepEqual( Stem("target"), "target");});
test("tariffa -> tariff", function() {deepEqual( Stem("tariffa"), "tariff");});
test("tariffaria -> tariffar", function() {deepEqual( Stem("tariffaria"), "tariffar");});
test("tariffe -> tariff", function() {deepEqual( Stem("tariffe"), "tariff");});
test("tarnoff -> tarnoff", function() {deepEqual( Stem("tarnoff"), "tarnoff");});
test("taro -> tar", function() {deepEqual( Stem("taro"), "tar");});
test("tartaglia -> tartagl", function() {deepEqual( Stem("tartaglia"), "tartagl");});
test("tartassati -> tartass", function() {deepEqual( Stem("tartassati"), "tartass");});
test("tarvisium -> tarvisium", function() {deepEqual( Stem("tarvisium"), "tarvisium");});
test("tasca -> tasc", function() {deepEqual( Stem("tasca"), "tasc");});
test("tasche -> tasc", function() {deepEqual( Stem("tasche"), "tasc");});
test("taschino -> taschin", function() {deepEqual( Stem("taschino"), "taschin");});
test("task -> task", function() {deepEqual( Stem("task"), "task");});
test("taslima -> taslim", function() {deepEqual( Stem("taslima"), "taslim");});
test("tass -> tass", function() {deepEqual( Stem("tass"), "tass");});
test("tassa -> tass", function() {deepEqual( Stem("tassa"), "tass");});
test("tassato -> tass", function() {deepEqual( Stem("tassato"), "tass");});
test("tassazione -> tassazion", function() {deepEqual( Stem("tassazione"), "tassazion");});
test("tasse -> tass", function() {deepEqual( Stem("tasse"), "tass");});
test("tassi -> tass", function() {deepEqual( Stem("tassi"), "tass");});
test("tasso -> tass", function() {deepEqual( Stem("tasso"), "tass");});
test("tassone -> tasson", function() {deepEqual( Stem("tassone"), "tasson");});
test("tastare -> tast", function() {deepEqual( Stem("tastare"), "tast");});
test("tastarlo -> tast", function() {deepEqual( Stem("tastarlo"), "tast");});
test("tasto -> tast", function() {deepEqual( Stem("tasto"), "tast");});
test("tastone -> taston", function() {deepEqual( Stem("tastone"), "taston");});
test("tastoni -> taston", function() {deepEqual( Stem("tastoni"), "taston");});
test("tata -> tat", function() {deepEqual( Stem("tata"), "tat");});
test("tatarella -> tatarell", function() {deepEqual( Stem("tatarella"), "tatarell");});
test("tattica -> tattic", function() {deepEqual( Stem("tattica"), "tattic");});
test("tattiche -> tattic", function() {deepEqual( Stem("tattiche"), "tattic");});
test("tatto -> tatt", function() {deepEqual( Stem("tatto"), "tatt");});
test("tatuaggi -> tatuagg", function() {deepEqual( Stem("tatuaggi"), "tatuagg");});
test("tatyana -> tatyan", function() {deepEqual( Stem("tatyana"), "tatyan");});
test("tauber -> tauber", function() {deepEqual( Stem("tauber"), "tauber");});
test("tauro -> taur", function() {deepEqual( Stem("tauro"), "taur");});
test("tav -> tav", function() {deepEqual( Stem("tav"), "tav");});
test("tavawal -> tavawal", function() {deepEqual( Stem("tavawal"), "tavawal");});
test("taverna -> tavern", function() {deepEqual( Stem("taverna"), "tavern");});
test("tavernai -> taverna", function() {deepEqual( Stem("tavernai"), "taverna");});
test("taverne -> tav", function() {deepEqual( Stem("taverne"), "tav");});
test("tavola -> tavol", function() {deepEqual( Stem("tavola"), "tavol");});
test("tavole -> tavol", function() {deepEqual( Stem("tavole"), "tavol");});
test("tavoli -> tavol", function() {deepEqual( Stem("tavoli"), "tavol");});
test("tavoliere -> tavol", function() {deepEqual( Stem("tavoliere"), "tavol");});
test("tavolino -> tavolin", function() {deepEqual( Stem("tavolino"), "tavolin");});
test("tavolo -> tavol", function() {deepEqual( Stem("tavolo"), "tavol");});
test("tax -> tax", function() {deepEqual( Stem("tax"), "tax");});
test("tay -> tay", function() {deepEqual( Stem("tay"), "tay");});
test("taylor -> taylor", function() {deepEqual( Stem("taylor"), "taylor");});
test("tb -> tb", function() {deepEqual( Stem("tb"), "tb");});
test("tbc -> tbc", function() {deepEqual( Stem("tbc"), "tbc");});
test("tc -> tc", function() {deepEqual( Stem("tc"), "tc");});
test("te -> te", function() {deepEqual( Stem("te"), "te");});
test("tè -> tè", function() {deepEqual( Stem("tè"), "tè");});
test("teague -> teagu", function() {deepEqual( Stem("teague"), "teagu");});
test("teatro -> teatr", function() {deepEqual( Stem("teatro"), "teatr");});
test("tebaide -> tebaid", function() {deepEqual( Stem("tebaide"), "tebaid");});
test("technology -> technology", function() {deepEqual( Stem("technology"), "technology");});
test("tecla -> tecl", function() {deepEqual( Stem("tecla"), "tecl");});
test("tecnica -> tecnic", function() {deepEqual( Stem("tecnica"), "tecnic");});
test("tecnicà -> tecnic", function() {deepEqual( Stem("tecnicà"), "tecnic");});
test("tecnicamente -> tecnic", function() {deepEqual( Stem("tecnicamente"), "tecnic");});
test("tecniche -> tecnic", function() {deepEqual( Stem("tecniche"), "tecnic");});
test("tecnichè -> tecnic", function() {deepEqual( Stem("tecnichè"), "tecnic");});
test("tecnici -> tecnic", function() {deepEqual( Stem("tecnici"), "tecnic");});
test("tecnico -> tecnic", function() {deepEqual( Stem("tecnico"), "tecnic");});
test("tecnologia -> tecnolog", function() {deepEqual( Stem("tecnologia"), "tecnolog");});
test("tecnologica -> tecnolog", function() {deepEqual( Stem("tecnologica"), "tecnolog");});
test("tecnologico -> tecnolog", function() {deepEqual( Stem("tecnologico"), "tecnolog");});
test("tecnologie -> tecnolog", function() {deepEqual( Stem("tecnologie"), "tecnolog");});
test("tecnost -> tecnost", function() {deepEqual( Stem("tecnost"), "tecnost");});
test("tedesca -> tedesc", function() {deepEqual( Stem("tedesca"), "tedesc");});
test("tedesche -> tedesc", function() {deepEqual( Stem("tedesche"), "tedesc");});
test("tedeschi -> tedesc", function() {deepEqual( Stem("tedeschi"), "tedesc");});
test("tedesco -> tedesc", function() {deepEqual( Stem("tedesco"), "tedesc");});
test("tediarla -> ted", function() {deepEqual( Stem("tediarla"), "ted");});
test("tedio -> ted", function() {deepEqual( Stem("tedio"), "ted");});
test("tegame -> tegam", function() {deepEqual( Stem("tegame"), "tegam");});
test("tegolaia -> tegolai", function() {deepEqual( Stem("tegolaia"), "tegolai");});
test("tegoli -> tegol", function() {deepEqual( Stem("tegoli"), "tegol");});
test("teheran -> teheran", function() {deepEqual( Stem("teheran"), "teheran");});
test("teknecomp -> teknecomp", function() {deepEqual( Stem("teknecomp"), "teknecomp");});
test("tel -> tel", function() {deepEqual( Stem("tel"), "tel");});
test("tela -> tel", function() {deepEqual( Stem("tela"), "tel");});
test("telam -> telam", function() {deepEqual( Stem("telam"), "telam");});
test("tele -> tel", function() {deepEqual( Stem("tele"), "tel");});
test("telecamere -> telecam", function() {deepEqual( Stem("telecamere"), "telecam");});
test("teleco -> telec", function() {deepEqual( Stem("teleco"), "telec");});
test("telecom -> telecom", function() {deepEqual( Stem("telecom"), "telecom");});
test("telecomandata -> telecomand", function() {deepEqual( Stem("telecomandata"), "telecomand");});
test("telecomunicazioni -> telecomun", function() {deepEqual( Stem("telecomunicazioni"), "telecomun");});
test("telefilm -> telefilm", function() {deepEqual( Stem("telefilm"), "telefilm");});
test("telefona -> telefon", function() {deepEqual( Stem("telefona"), "telefon");});
test("telefonare -> telefon", function() {deepEqual( Stem("telefonare"), "telefon");});
test("telefonata -> telefon", function() {deepEqual( Stem("telefonata"), "telefon");});
test("telefonate -> telefon", function() {deepEqual( Stem("telefonate"), "telefon");});
test("telefonato -> telefon", function() {deepEqual( Stem("telefonato"), "telefon");});
test("telefoni -> telefon", function() {deepEqual( Stem("telefoni"), "telefon");});
test("telefonica -> telefon", function() {deepEqual( Stem("telefonica"), "telefon");});
test("telefonicamente -> telefon", function() {deepEqual( Stem("telefonicamente"), "telefon");});
test("telefoniche -> telefon", function() {deepEqual( Stem("telefoniche"), "telefon");});
test("telefonici -> telefon", function() {deepEqual( Stem("telefonici"), "telefon");});
test("telefonico -> telefon", function() {deepEqual( Stem("telefonico"), "telefon");});
test("telefonini -> telefonin", function() {deepEqual( Stem("telefonini"), "telefonin");});
test("telefonino -> telefonin", function() {deepEqual( Stem("telefonino"), "telefonin");});
test("telefono -> telef", function() {deepEqual( Stem("telefono"), "telef");});
test("telefoto -> telefot", function() {deepEqual( Stem("telefoto"), "telefot");});
test("telegiornale -> telegiornal", function() {deepEqual( Stem("telegiornale"), "telegiornal");});
test("telegiornali -> telegiornal", function() {deepEqual( Stem("telegiornali"), "telegiornal");});
test("telegrafico -> telegraf", function() {deepEqual( Stem("telegrafico"), "telegraf");});
test("telegramma -> telegramm", function() {deepEqual( Stem("telegramma"), "telegramm");});
test("telegrammi -> telegramm", function() {deepEqual( Stem("telegrammi"), "telegramm");});
test("telegraph -> telegraph", function() {deepEqual( Stem("telegraph"), "telegraph");});
test("telematica -> telemat", function() {deepEqual( Stem("telematica"), "telemat");});
test("telematiche -> telemat", function() {deepEqual( Stem("telematiche"), "telemat");});
test("telematici -> telemat", function() {deepEqual( Stem("telematici"), "telemat");});
test("telematico -> telemat", function() {deepEqual( Stem("telematico"), "telemat");});
test("telemontecarlo -> telemontec", function() {deepEqual( Stem("telemontecarlo"), "telemontec");});
test("telenovela -> telenovel", function() {deepEqual( Stem("telenovela"), "telenovel");});
test("teleoperatori -> teleoper", function() {deepEqual( Stem("teleoperatori"), "teleoper");});
test("teleromanzo -> teleromanz", function() {deepEqual( Stem("teleromanzo"), "teleromanz");});
test("teleschermo -> telescherm", function() {deepEqual( Stem("teleschermo"), "telescherm");});
test("telescrivente -> telescrivent", function() {deepEqual( Stem("telescrivente"), "telescrivent");});
test("telesis -> telesis", function() {deepEqual( Stem("telesis"), "telesis");});
test("telespettatori -> telespett", function() {deepEqual( Stem("telespettatori"), "telespett");});
test("telethon -> telethon", function() {deepEqual( Stem("telethon"), "telethon");});
test("televendite -> televend", function() {deepEqual( Stem("televendite"), "televend");});
test("television -> television", function() {deepEqual( Stem("television"), "television");});
test("televisione -> television", function() {deepEqual( Stem("televisione"), "television");});
test("televisioni -> television", function() {deepEqual( Stem("televisioni"), "television");});
test("televisiva -> televis", function() {deepEqual( Stem("televisiva"), "televis");});
test("televisive -> televis", function() {deepEqual( Stem("televisive"), "televis");});
test("televisivi -> televis", function() {deepEqual( Stem("televisivi"), "televis");});
test("televisivo -> televis", function() {deepEqual( Stem("televisivo"), "televis");});
test("tellurico -> tellur", function() {deepEqual( Stem("tellurico"), "tellur");});
test("telo -> tel", function() {deepEqual( Stem("telo"), "tel");});
test("telone -> telon", function() {deepEqual( Stem("telone"), "telon");});
test("teloni -> telon", function() {deepEqual( Stem("teloni"), "telon");});
test("telsystem -> telsystem", function() {deepEqual( Stem("telsystem"), "telsystem");});
test("tema -> tem", function() {deepEqual( Stem("tema"), "tem");});
test("tematiche -> temat", function() {deepEqual( Stem("tematiche"), "temat");});
test("tembile -> tembil", function() {deepEqual( Stem("tembile"), "tembil");});
test("teme -> tem", function() {deepEqual( Stem("teme"), "tem");});
test("temendo -> tem", function() {deepEqual( Stem("temendo"), "tem");});
test("temer -> temer", function() {deepEqual( Stem("temer"), "temer");});
test("temeraria -> temerar", function() {deepEqual( Stem("temeraria"), "temerar");});
test("temerarie -> temerar", function() {deepEqual( Stem("temerarie"), "temerar");});
test("temerarij -> temerarij", function() {deepEqual( Stem("temerarij"), "temerarij");});
test("temerario -> temerar", function() {deepEqual( Stem("temerario"), "temerar");});
test("temere -> tem", function() {deepEqual( Stem("temere"), "tem");});
test("temerità -> temer", function() {deepEqual( Stem("temerità"), "temer");});
test("temerlo -> tem", function() {deepEqual( Stem("temerlo"), "tem");});
test("temesse -> temess", function() {deepEqual( Stem("temesse"), "temess");});
test("temessero -> tem", function() {deepEqual( Stem("temessero"), "tem");});
test("temeva -> tem", function() {deepEqual( Stem("temeva"), "tem");});
test("temevano -> tem", function() {deepEqual( Stem("temevano"), "tem");});
test("temi -> tem", function() {deepEqual( Stem("temi"), "tem");});
test("temibile -> temibil", function() {deepEqual( Stem("temibile"), "temibil");});
test("temo -> tem", function() {deepEqual( Stem("temo"), "tem");});
test("temono -> tem", function() {deepEqual( Stem("temono"), "tem");});
test("tempera -> temper", function() {deepEqual( Stem("tempera"), "temper");});
test("temperamenti -> temper", function() {deepEqual( Stem("temperamenti"), "temper");});
test("temperamento -> temper", function() {deepEqual( Stem("temperamento"), "temper");});
test("temperar -> temper", function() {deepEqual( Stem("temperar"), "temper");});
test("temperare -> temper", function() {deepEqual( Stem("temperare"), "temper");});
test("temperata -> temper", function() {deepEqual( Stem("temperata"), "temper");});
test("temperate -> temper", function() {deepEqual( Stem("temperate"), "temper");});
test("temperato -> temper", function() {deepEqual( Stem("temperato"), "temper");});
test("temperatura -> temperatur", function() {deepEqual( Stem("temperatura"), "temperatur");});
test("temperature -> temperatur", function() {deepEqual( Stem("temperature"), "temperatur");});
test("temperò -> temp", function() {deepEqual( Stem("temperò"), "temp");});
test("tempesta -> tempest", function() {deepEqual( Stem("tempesta"), "tempest");});
test("tempestare -> tempest", function() {deepEqual( Stem("tempestare"), "tempest");});
test("tempestarlo -> tempest", function() {deepEqual( Stem("tempestarlo"), "tempest");});
test("tempestata -> tempest", function() {deepEqual( Stem("tempestata"), "tempest");});
test("tempestate -> tempest", function() {deepEqual( Stem("tempestate"), "tempest");});
test("tempestati -> tempest", function() {deepEqual( Stem("tempestati"), "tempest");});
test("tempestava -> tempest", function() {deepEqual( Stem("tempestava"), "tempest");});
test("tempeste -> tempest", function() {deepEqual( Stem("tempeste"), "tempest");});
test("tempestiva -> tempest", function() {deepEqual( Stem("tempestiva"), "tempest");});
test("tempestività -> tempest", function() {deepEqual( Stem("tempestività"), "tempest");});
test("tempestivo -> tempest", function() {deepEqual( Stem("tempestivo"), "tempest");});
test("tempestoso -> tempest", function() {deepEqual( Stem("tempestoso"), "tempest");});
test("tempi -> temp", function() {deepEqual( Stem("tempi"), "temp");});
test("tempia -> temp", function() {deepEqual( Stem("tempia"), "temp");});
test("tempie -> temp", function() {deepEqual( Stem("tempie"), "temp");});
test("tempio -> temp", function() {deepEqual( Stem("tempio"), "temp");});
test("tempo -> temp", function() {deepEqual( Stem("tempo"), "temp");});
test("temporale -> temporal", function() {deepEqual( Stem("temporale"), "temporal");});
test("temporali -> temporal", function() {deepEqual( Stem("temporali"), "temporal");});
test("temporanea -> temporane", function() {deepEqual( Stem("temporanea"), "temporane");});
test("temporaneamente -> temporan", function() {deepEqual( Stem("temporaneamente"), "temporan");});
test("temporanei -> temporane", function() {deepEqual( Stem("temporanei"), "temporane");});
test("temporariamente -> temporar", function() {deepEqual( Stem("temporariamente"), "temporar");});
test("tempore -> tempor", function() {deepEqual( Stem("tempore"), "tempor");});
test("temporum -> temporum", function() {deepEqual( Stem("temporum"), "temporum");});
test("tempra -> tempr", function() {deepEqual( Stem("tempra"), "tempr");});
test("temuta -> tem", function() {deepEqual( Stem("temuta"), "tem");});
test("temuto -> tem", function() {deepEqual( Stem("temuto"), "tem");});
test("tenace -> tenac", function() {deepEqual( Stem("tenace"), "tenac");});
test("tenacia -> tenac", function() {deepEqual( Stem("tenacia"), "tenac");});
test("tenaglia -> tenagl", function() {deepEqual( Stem("tenaglia"), "tenagl");});
test("tendaggi -> tendagg", function() {deepEqual( Stem("tendaggi"), "tendagg");});
test("tende -> tend", function() {deepEqual( Stem("tende"), "tend");});
test("tendendo -> tend", function() {deepEqual( Stem("tendendo"), "tend");});
test("tendenti -> tendent", function() {deepEqual( Stem("tendenti"), "tendent");});
test("tendenza -> tendenz", function() {deepEqual( Stem("tendenza"), "tendenz");});
test("tendenze -> tendenz", function() {deepEqual( Stem("tendenze"), "tendenz");});
test("tendenzialmente -> tendenzial", function() {deepEqual( Stem("tendenzialmente"), "tendenzial");});
test("tender -> tender", function() {deepEqual( Stem("tender"), "tender");});
test("tenderà -> tend", function() {deepEqual( Stem("tenderà"), "tend");});
test("tendere -> tend", function() {deepEqual( Stem("tendere"), "tend");});
test("tendesse -> tendess", function() {deepEqual( Stem("tendesse"), "tendess");});
test("tendeva -> tend", function() {deepEqual( Stem("tendeva"), "tend");});
test("tendevan -> tendevan", function() {deepEqual( Stem("tendevan"), "tendevan");});
test("tendevano -> tend", function() {deepEqual( Stem("tendevano"), "tend");});
test("tendina -> tendin", function() {deepEqual( Stem("tendina"), "tendin");});
test("tendine -> tendin", function() {deepEqual( Stem("tendine"), "tendin");});
test("tendon -> tendon", function() {deepEqual( Stem("tendon"), "tendon");});
test("tendone -> tendon", function() {deepEqual( Stem("tendone"), "tendon");});
test("tendono -> tend", function() {deepEqual( Stem("tendono"), "tend");});
test("tenebre -> tenebr", function() {deepEqual( Stem("tenebre"), "tenebr");});
test("tenebrosi -> tenebr", function() {deepEqual( Stem("tenebrosi"), "tenebr");});
test("tenebroso -> tenebr", function() {deepEqual( Stem("tenebroso"), "tenebr");});
test("tenendo -> ten", function() {deepEqual( Stem("tenendo"), "ten");});
test("tenendola -> ten", function() {deepEqual( Stem("tenendola"), "ten");});
test("tenendolo -> ten", function() {deepEqual( Stem("tenendolo"), "ten");});
test("tenendone -> ten", function() {deepEqual( Stem("tenendone"), "ten");});
test("tenendosi -> ten", function() {deepEqual( Stem("tenendosi"), "ten");});
test("tenendovi -> ten", function() {deepEqual( Stem("tenendovi"), "ten");});
test("tenente -> tenent", function() {deepEqual( Stem("tenente"), "tenent");});
test("tener -> tener", function() {deepEqual( Stem("tener"), "tener");});
test("tenera -> tener", function() {deepEqual( Stem("tenera"), "tener");});
test("tenere -> ten", function() {deepEqual( Stem("tenere"), "ten");});
test("tenerezza -> tenerezz", function() {deepEqual( Stem("tenerezza"), "tenerezz");});
test("tenerezze -> tenerezz", function() {deepEqual( Stem("tenerezze"), "tenerezz");});
test("tenergli -> ten", function() {deepEqual( Stem("tenergli"), "ten");});
test("teneri -> tener", function() {deepEqual( Stem("teneri"), "tener");});
test("tenerla -> ten", function() {deepEqual( Stem("tenerla"), "ten");});
test("tenerli -> ten", function() {deepEqual( Stem("tenerli"), "ten");});
test("tenerlo -> ten", function() {deepEqual( Stem("tenerlo"), "ten");});
test("tenerne -> ten", function() {deepEqual( Stem("tenerne"), "ten");});
test("tenero -> tener", function() {deepEqual( Stem("tenero"), "tener");});
test("tenersi -> ten", function() {deepEqual( Stem("tenersi"), "ten");});
test("tenervi -> ten", function() {deepEqual( Stem("tenervi"), "ten");});
test("tenesse -> teness", function() {deepEqual( Stem("tenesse"), "teness");});
test("tenessero -> ten", function() {deepEqual( Stem("tenessero"), "ten");});
test("tenete -> ten", function() {deepEqual( Stem("tenete"), "ten");});
test("teneteli -> tenetel", function() {deepEqual( Stem("teneteli"), "tenetel");});
test("teneva -> ten", function() {deepEqual( Stem("teneva"), "ten");});
test("tenevan -> tenevan", function() {deepEqual( Stem("tenevan"), "tenevan");});
test("tenevano -> ten", function() {deepEqual( Stem("tenevano"), "ten");});
test("tenevo -> ten", function() {deepEqual( Stem("tenevo"), "ten");});
test("tenga -> teng", function() {deepEqual( Stem("tenga"), "teng");});
test("tengo -> teng", function() {deepEqual( Stem("tengo"), "teng");});
test("tengon -> tengon", function() {deepEqual( Stem("tengon"), "tengon");});
test("tengono -> teng", function() {deepEqual( Stem("tengono"), "teng");});
test("teniamo -> ten", function() {deepEqual( Stem("teniamo"), "ten");});
test("tenne -> tenn", function() {deepEqual( Stem("tenne"), "tenn");});
test("tennero -> tenner", function() {deepEqual( Stem("tennero"), "tenner");});
test("tennis -> tennis", function() {deepEqual( Stem("tennis"), "tennis");});
test("tennista -> tennist", function() {deepEqual( Stem("tennista"), "tennist");});
test("tenor -> tenor", function() {deepEqual( Stem("tenor"), "tenor");});
test("tenore -> tenor", function() {deepEqual( Stem("tenore"), "tenor");});
test("tensione -> tension", function() {deepEqual( Stem("tensione"), "tension");});
test("tensioni -> tension", function() {deepEqual( Stem("tensioni"), "tension");});
test("tensostruttura -> tensostruttur", function() {deepEqual( Stem("tensostruttura"), "tensostruttur");});
test("tenta -> tent", function() {deepEqual( Stem("tenta"), "tent");});
test("tentacoli -> tentacol", function() {deepEqual( Stem("tentacoli"), "tentacol");});
test("tentando -> tent", function() {deepEqual( Stem("tentando"), "tent");});
test("tentano -> tent", function() {deepEqual( Stem("tentano"), "tent");});
test("tentar -> tent", function() {deepEqual( Stem("tentar"), "tent");});
test("tentare -> tent", function() {deepEqual( Stem("tentare"), "tent");});
test("tentarmi -> tent", function() {deepEqual( Stem("tentarmi"), "tent");});
test("tentarne -> tent", function() {deepEqual( Stem("tentarne"), "tent");});
test("tentata -> tent", function() {deepEqual( Stem("tentata"), "tent");});
test("tentativi -> tentat", function() {deepEqual( Stem("tentativi"), "tentat");});
test("tentativo -> tentat", function() {deepEqual( Stem("tentativo"), "tentat");});
test("tentato -> tent", function() {deepEqual( Stem("tentato"), "tent");});
test("tentava -> tent", function() {deepEqual( Stem("tentava"), "tent");});
test("tentavano -> tent", function() {deepEqual( Stem("tentavano"), "tent");});
test("tentazion -> tentazion", function() {deepEqual( Stem("tentazion"), "tentazion");});
test("tentazione -> tentazion", function() {deepEqual( Stem("tentazione"), "tentazion");});
test("tentazioni -> tentazion", function() {deepEqual( Stem("tentazioni"), "tentazion");});
test("tentennando -> tentenn", function() {deepEqual( Stem("tentennando"), "tentenn");});
test("tentennare -> tentenn", function() {deepEqual( Stem("tentennare"), "tentenn");});
test("tentennata -> tentenn", function() {deepEqual( Stem("tentennata"), "tentenn");});
test("tentennatina -> tentennatin", function() {deepEqual( Stem("tentennatina"), "tentennatin");});
test("tentennava -> tentenn", function() {deepEqual( Stem("tentennava"), "tentenn");});
test("tentennò -> tentenn", function() {deepEqual( Stem("tentennò"), "tentenn");});
test("tenterà -> tent", function() {deepEqual( Stem("tenterà"), "tent");});
test("tenterò -> tent", function() {deepEqual( Stem("tenterò"), "tent");});
test("tentò -> tent", function() {deepEqual( Stem("tentò"), "tent");});
test("tentoni -> tenton", function() {deepEqual( Stem("tentoni"), "tenton");});
test("tenuta -> ten", function() {deepEqual( Stem("tenuta"), "ten");});
test("tenute -> ten", function() {deepEqual( Stem("tenute"), "ten");});
test("tenuti -> ten", function() {deepEqual( Stem("tenuti"), "ten");});
test("tenuto -> ten", function() {deepEqual( Stem("tenuto"), "ten");});
test("teologia -> teolog", function() {deepEqual( Stem("teologia"), "teolog");});
test("teologià -> teolog", function() {deepEqual( Stem("teologià"), "teolog");});
test("teologici -> teolog", function() {deepEqual( Stem("teologici"), "teolog");});
test("teoria -> teor", function() {deepEqual( Stem("teoria"), "teor");});
test("teorico -> teoric", function() {deepEqual( Stem("teorico"), "teoric");});
test("teorie -> teor", function() {deepEqual( Stem("teorie"), "teor");});
test("tepeyac -> tepeyac", function() {deepEqual( Stem("tepeyac"), "tepeyac");});
test("tepeyec -> tepeyec", function() {deepEqual( Stem("tepeyec"), "tepeyec");});
test("tepida -> tepid", function() {deepEqual( Stem("tepida"), "tepid");});
test("tepido -> tepid", function() {deepEqual( Stem("tepido"), "tepid");});
test("tepore -> tepor", function() {deepEqual( Stem("tepore"), "tepor");});
test("teppismo -> teppism", function() {deepEqual( Stem("teppismo"), "teppism");});
test("teppista -> teppist", function() {deepEqual( Stem("teppista"), "teppist");});
test("teppisti -> teppist", function() {deepEqual( Stem("teppisti"), "teppist");});
test("teppistici -> teppist", function() {deepEqual( Stem("teppistici"), "teppist");});
test("teramo -> teram", function() {deepEqual( Stem("teramo"), "teram");});
test("terapeutico -> terapeut", function() {deepEqual( Stem("terapeutico"), "terapeut");});
test("terapia -> terap", function() {deepEqual( Stem("terapia"), "terap");});
test("teresa -> teres", function() {deepEqual( Stem("teresa"), "teres");});
test("teresio -> teres", function() {deepEqual( Stem("teresio"), "teres");});
test("tergiversazioni -> tergivers", function() {deepEqual( Stem("tergiversazioni"), "tergivers");});
test("teri -> ter", function() {deepEqual( Stem("teri"), "ter");});
test("termas -> termas", function() {deepEqual( Stem("termas"), "termas");});
test("terme -> term", function() {deepEqual( Stem("terme"), "term");});
test("termica -> termic", function() {deepEqual( Stem("termica"), "termic");});
test("termici -> termic", function() {deepEqual( Stem("termici"), "termic");});
test("termina -> termin", function() {deepEqual( Stem("termina"), "termin");});
test("terminal -> terminal", function() {deepEqual( Stem("terminal"), "terminal");});
test("terminale -> terminal", function() {deepEqual( Stem("terminale"), "terminal");});
test("terminalisti -> terminal", function() {deepEqual( Stem("terminalisti"), "terminal");});
test("terminare -> termin", function() {deepEqual( Stem("terminare"), "termin");});
test("terminarsi -> termin", function() {deepEqual( Stem("terminarsi"), "termin");});
test("terminasse -> termin", function() {deepEqual( Stem("terminasse"), "termin");});
test("terminata -> termin", function() {deepEqual( Stem("terminata"), "termin");});
test("terminate -> termin", function() {deepEqual( Stem("terminate"), "termin");});
test("terminato -> termin", function() {deepEqual( Stem("terminato"), "termin");});
test("terminava -> termin", function() {deepEqual( Stem("terminava"), "termin");});
test("terminavano -> termin", function() {deepEqual( Stem("terminavano"), "termin");});
test("termine -> termin", function() {deepEqual( Stem("termine"), "termin");});
test("terminerà -> termin", function() {deepEqual( Stem("terminerà"), "termin");});
test("termineranno -> termin", function() {deepEqual( Stem("termineranno"), "termin");});
test("termini -> termin", function() {deepEqual( Stem("termini"), "termin");});
test("terminò -> termin", function() {deepEqual( Stem("terminò"), "termin");});
test("terni -> tern", function() {deepEqual( Stem("terni"), "tern");});
test("terra -> terr", function() {deepEqual( Stem("terra"), "terr");});
test("terrà -> terr", function() {deepEqual( Stem("terrà"), "terr");});
test("terrace -> terrac", function() {deepEqual( Stem("terrace"), "terrac");});
test("terracenere -> terracen", function() {deepEqual( Stem("terracenere"), "terracen");});
test("terraferma -> terraferm", function() {deepEqual( Stem("terraferma"), "terraferm");});
test("terranno -> terrann", function() {deepEqual( Stem("terranno"), "terrann");});
test("terranova -> terranov", function() {deepEqual( Stem("terranova"), "terranov");});
test("terranuova -> terranuov", function() {deepEqual( Stem("terranuova"), "terranuov");});
test("terrapieni -> terrapien", function() {deepEqual( Stem("terrapieni"), "terrapien");});
test("terrapieno -> terrapien", function() {deepEqual( Stem("terrapieno"), "terrapien");});
test("terrazzino -> terrazzin", function() {deepEqual( Stem("terrazzino"), "terrazzin");});
test("terre -> terr", function() {deepEqual( Stem("terre"), "terr");});
test("terrea -> terre", function() {deepEqual( Stem("terrea"), "terre");});
test("terremoto -> terremot", function() {deepEqual( Stem("terremoto"), "terremot");});
test("terrena -> terren", function() {deepEqual( Stem("terrena"), "terren");});
test("terrene -> terren", function() {deepEqual( Stem("terrene"), "terren");});
test("terreni -> terren", function() {deepEqual( Stem("terreni"), "terren");});
test("terreno -> terren", function() {deepEqual( Stem("terreno"), "terren");});
test("terrestre -> terrestr", function() {deepEqual( Stem("terrestre"), "terrestr");});
test("terribil -> terribil", function() {deepEqual( Stem("terribil"), "terribil");});
test("terribile -> terribil", function() {deepEqual( Stem("terribile"), "terribil");});
test("terribili -> terribil", function() {deepEqual( Stem("terribili"), "terribil");});
test("terribilmente -> terribil", function() {deepEqual( Stem("terribilmente"), "terribil");});
test("terricciola -> terricciol", function() {deepEqual( Stem("terricciola"), "terricciol");});
test("terrieri -> terrier", function() {deepEqual( Stem("terrieri"), "terrier");});
test("terrificanti -> terrific", function() {deepEqual( Stem("terrificanti"), "terrific");});
test("territori -> territor", function() {deepEqual( Stem("territori"), "territor");});
test("territoriale -> territorial", function() {deepEqual( Stem("territoriale"), "territorial");});
test("territoriali -> territorial", function() {deepEqual( Stem("territoriali"), "territorial");});
test("territorij -> territorij", function() {deepEqual( Stem("territorij"), "territorij");});
test("territorio -> territor", function() {deepEqual( Stem("territorio"), "territor");});
test("terrò -> terr", function() {deepEqual( Stem("terrò"), "terr");});
test("terror -> terror", function() {deepEqual( Stem("terror"), "terror");});
test("terrore -> terror", function() {deepEqual( Stem("terrore"), "terror");});
test("terrori -> terror", function() {deepEqual( Stem("terrori"), "terror");});
test("terrorismo -> terror", function() {deepEqual( Stem("terrorismo"), "terror");});
test("terrorismò -> terrorism", function() {deepEqual( Stem("terrorismò"), "terrorism");});
test("terroristi -> terror", function() {deepEqual( Stem("terroristi"), "terror");});
test("terroristica -> terrorist", function() {deepEqual( Stem("terroristica"), "terrorist");});
test("terroristici -> terrorist", function() {deepEqual( Stem("terroristici"), "terrorist");});
test("terrorizzando -> terrorizz", function() {deepEqual( Stem("terrorizzando"), "terrorizz");});
test("terrorizzato -> terrorizz", function() {deepEqual( Stem("terrorizzato"), "terrorizz");});
test("terry -> terry", function() {deepEqual( Stem("terry"), "terry");});
test("terza -> terz", function() {deepEqual( Stem("terza"), "terz");});
test("terzetta -> terzett", function() {deepEqual( Stem("terzetta"), "terzett");});
test("terzetto -> terzett", function() {deepEqual( Stem("terzetto"), "terzett");});
test("terzi -> terz", function() {deepEqual( Stem("terzi"), "terz");});
test("terzino -> terzin", function() {deepEqual( Stem("terzino"), "terzin");});
test("terzo -> terz", function() {deepEqual( Stem("terzo"), "terz");});
test("terzultima -> terzultim", function() {deepEqual( Stem("terzultima"), "terzultim");});
test("tesa -> tes", function() {deepEqual( Stem("tesa"), "tes");});
test("teschi -> tesc", function() {deepEqual( Stem("teschi"), "tesc");});
test("teschietto -> teschiett", function() {deepEqual( Stem("teschietto"), "teschiett");});
test("teschio -> tesc", function() {deepEqual( Stem("teschio"), "tesc");});
test("tese -> tes", function() {deepEqual( Stem("tese"), "tes");});
test("tesi -> tes", function() {deepEqual( Stem("tesi"), "tes");});
test("teso -> tes", function() {deepEqual( Stem("teso"), "tes");});
test("tesoreria -> tesorer", function() {deepEqual( Stem("tesoreria"), "tesorer");});
test("tesoretto -> tesorett", function() {deepEqual( Stem("tesoretto"), "tesorett");});
test("tesori -> tesor", function() {deepEqual( Stem("tesori"), "tesor");});
test("tesoriere -> tesor", function() {deepEqual( Stem("tesoriere"), "tesor");});
test("tesoro -> tesor", function() {deepEqual( Stem("tesoro"), "tesor");});
test("tessera -> tesser", function() {deepEqual( Stem("tessera"), "tesser");});
test("tesseramento -> tesser", function() {deepEqual( Stem("tesseramento"), "tesser");});
test("tessere -> tess", function() {deepEqual( Stem("tessere"), "tess");});
test("tessile -> tessil", function() {deepEqual( Stem("tessile"), "tessil");});
test("tessili -> tessil", function() {deepEqual( Stem("tessili"), "tessil");});
test("tessitore -> tessitor", function() {deepEqual( Stem("tessitore"), "tessitor");});
test("tessitrici -> tessitr", function() {deepEqual( Stem("tessitrici"), "tessitr");});
test("tessuto -> tess", function() {deepEqual( Stem("tessuto"), "tess");});
test("test -> test", function() {deepEqual( Stem("test"), "test");});
test("testa -> test", function() {deepEqual( Stem("testa"), "test");});
test("testamento -> test", function() {deepEqual( Stem("testamento"), "test");});
test("testardo -> testard", function() {deepEqual( Stem("testardo"), "testard");});
test("testata -> test", function() {deepEqual( Stem("testata"), "test");});
test("testate -> test", function() {deepEqual( Stem("testate"), "test");});
test("testatori -> testator", function() {deepEqual( Stem("testatori"), "testator");});
test("teste -> test", function() {deepEqual( Stem("teste"), "test");});
test("testi -> test", function() {deepEqual( Stem("testi"), "test");});
test("testifichi -> testif", function() {deepEqual( Stem("testifichi"), "testif");});
test("testimone -> testimon", function() {deepEqual( Stem("testimone"), "testimon");});
test("testimoni -> testimon", function() {deepEqual( Stem("testimoni"), "testimon");});
test("testimonianza -> testimon", function() {deepEqual( Stem("testimonianza"), "testimon");});
test("testimonianze -> testimon", function() {deepEqual( Stem("testimonianze"), "testimon");});
test("testimoniare -> testimon", function() {deepEqual( Stem("testimoniare"), "testimon");});
test("testimoniato -> testimon", function() {deepEqual( Stem("testimoniato"), "testimon");});
test("testimonio -> testimon", function() {deepEqual( Stem("testimonio"), "testimon");});
test("testimonj -> testimonj", function() {deepEqual( Stem("testimonj"), "testimonj");});
test("testina -> testin", function() {deepEqual( Stem("testina"), "testin");});
test("testo -> test", function() {deepEqual( Stem("testo"), "test");});
test("testolina -> testolin", function() {deepEqual( Stem("testolina"), "testolin");});
test("tetri -> tetr", function() {deepEqual( Stem("tetri"), "tetr");});
test("tetti -> tett", function() {deepEqual( Stem("tetti"), "tett");});
test("tetto -> tett", function() {deepEqual( Stem("tetto"), "tett");});
test("tettò -> tett", function() {deepEqual( Stem("tettò"), "tett");});
test("tettoia -> tettoi", function() {deepEqual( Stem("tettoia"), "tettoi");});
test("teu -> teu", function() {deepEqual( Stem("teu"), "teu");});
test("texas -> texas", function() {deepEqual( Stem("texas"), "texas");});
test("texmantova -> texmantov", function() {deepEqual( Stem("texmantova"), "texmantov");});
test("teyssier -> teyssier", function() {deepEqual( Stem("teyssier"), "teyssier");});
test("tg -> tg", function() {deepEqual( Stem("tg"), "tg");});
test("thailand -> thailand", function() {deepEqual( Stem("thailand"), "thailand");});
test("thailandese -> thailandes", function() {deepEqual( Stem("thailandese"), "thailandes");});
test("thailandia -> thailand", function() {deepEqual( Stem("thailandia"), "thailand");});
test("thaler -> thaler", function() {deepEqual( Stem("thaler"), "thaler");});
test("the -> the", function() {deepEqual( Stem("the"), "the");});
test("theatre -> theatr", function() {deepEqual( Stem("theatre"), "theatr");});
test("theo -> the", function() {deepEqual( Stem("theo"), "the");});
test("theresa -> theres", function() {deepEqual( Stem("theresa"), "theres");});
test("thermie -> therm", function() {deepEqual( Stem("thermie"), "therm");});
test("thern -> thern", function() {deepEqual( Stem("thern"), "thern");});
test("thiry -> thiry", function() {deepEqual( Stem("thiry"), "thiry");});
test("thomas -> thomas", function() {deepEqual( Stem("thomas"), "thomas");});
test("thorn -> thorn", function() {deepEqual( Stem("thorn"), "thorn");});
test("thriller -> thriller", function() {deepEqual( Stem("thriller"), "thriller");});
test("ti -> ti", function() {deepEqual( Stem("ti"), "ti");});
test("ticinese -> ticines", function() {deepEqual( Stem("ticinese"), "ticines");});
test("ticket -> ticket", function() {deepEqual( Stem("ticket"), "ticket");});
test("tiempo -> tiemp", function() {deepEqual( Stem("tiempo"), "tiemp");});
test("tien -> tien", function() {deepEqual( Stem("tien"), "tien");});
test("tiene -> tien", function() {deepEqual( Stem("tiene"), "tien");});
test("tienla -> tienl", function() {deepEqual( Stem("tienla"), "tienl");});
test("tienlo -> tienl", function() {deepEqual( Stem("tienlo"), "tienl");});
test("tiepido -> tiepid", function() {deepEqual( Stem("tiepido"), "tiepid");});
test("tieri -> tier", function() {deepEqual( Stem("tieri"), "tier");});
test("tietmeyer -> tietmeyer", function() {deepEqual( Stem("tietmeyer"), "tietmeyer");});
test("tifato -> tif", function() {deepEqual( Stem("tifato"), "tif");});
test("tifo -> tif", function() {deepEqual( Stem("tifo"), "tif");});
test("tifoseria -> tifoser", function() {deepEqual( Stem("tifoseria"), "tifoser");});
test("tifoserie -> tifoser", function() {deepEqual( Stem("tifoserie"), "tifoser");});
test("tifosi -> tifos", function() {deepEqual( Stem("tifosi"), "tifos");});
test("tifoso -> tifos", function() {deepEqual( Stem("tifoso"), "tifos");});
test("tigri -> tigr", function() {deepEqual( Stem("tigri"), "tigr");});
test("tigullio -> tigull", function() {deepEqual( Stem("tigullio"), "tigull");});
test("tilt -> tilt", function() {deepEqual( Stem("tilt"), "tilt");});
test("time -> tim", function() {deepEqual( Stem("time"), "tim");});
test("timeo -> time", function() {deepEqual( Stem("timeo"), "time");});
test("times -> times", function() {deepEqual( Stem("times"), "times");});
test("timicin -> timicin", function() {deepEqual( Stem("timicin"), "timicin");});
test("timida -> timid", function() {deepEqual( Stem("timida"), "timid");});
test("timidamente -> timid", function() {deepEqual( Stem("timidamente"), "timid");});
test("timidezza -> timidezz", function() {deepEqual( Stem("timidezza"), "timidezz");});
test("timido -> timid", function() {deepEqual( Stem("timido"), "timid");});
test("timoniere -> timon", function() {deepEqual( Stem("timoniere"), "timon");});
test("timor -> timor", function() {deepEqual( Stem("timor"), "timor");});
test("timorato -> timor", function() {deepEqual( Stem("timorato"), "timor");});
test("timore -> timor", function() {deepEqual( Stem("timore"), "timor");});
test("timori -> timor", function() {deepEqual( Stem("timori"), "timor");});
test("timoroso -> timor", function() {deepEqual( Stem("timoroso"), "timor");});
test("timpano -> timp", function() {deepEqual( Stem("timpano"), "timp");});
test("tina -> tin", function() {deepEqual( Stem("tina"), "tin");});
test("tinello -> tinell", function() {deepEqual( Stem("tinello"), "tinell");});
test("tingano -> ting", function() {deepEqual( Stem("tingano"), "ting");});
test("tino -> tin", function() {deepEqual( Stem("tino"), "tin");});
test("tinta -> tint", function() {deepEqual( Stem("tinta"), "tint");});
test("tinte -> tint", function() {deepEqual( Stem("tinte"), "tint");});
test("tintinnìo -> tintinnì", function() {deepEqual( Stem("tintinnìo"), "tintinnì");});
test("tipi -> tip", function() {deepEqual( Stem("tipi"), "tip");});
test("tipica -> tipic", function() {deepEqual( Stem("tipica"), "tipic");});
test("tipici -> tipic", function() {deepEqual( Stem("tipici"), "tipic");});
test("tipico -> tipic", function() {deepEqual( Stem("tipico"), "tipic");});
test("tipo -> tip", function() {deepEqual( Stem("tipo"), "tip");});
test("tipologie -> tipolog", function() {deepEqual( Stem("tipologie"), "tipolog");});
test("tira -> tir", function() {deepEqual( Stem("tira"), "tir");});
test("tiraccio -> tiracc", function() {deepEqual( Stem("tiraccio"), "tiracc");});
test("tiradritto -> tiradritt", function() {deepEqual( Stem("tiradritto"), "tiradritt");});
test("tirala -> tiral", function() {deepEqual( Stem("tirala"), "tiral");});
test("tiran -> tiran", function() {deepEqual( Stem("tiran"), "tiran");});
test("tirana -> tiran", function() {deepEqual( Stem("tirana"), "tiran");});
test("tirando -> tir", function() {deepEqual( Stem("tirando"), "tir");});
test("tirandosela -> tirandosel", function() {deepEqual( Stem("tirandosela"), "tirandosel");});
test("tirandosi -> tir", function() {deepEqual( Stem("tirandosi"), "tir");});
test("tiranna -> tirann", function() {deepEqual( Stem("tiranna"), "tirann");});
test("tiranneggiar -> tirannegg", function() {deepEqual( Stem("tiranneggiar"), "tirannegg");});
test("tiranneggiati -> tirannegg", function() {deepEqual( Stem("tiranneggiati"), "tirannegg");});
test("tirannello -> tirannell", function() {deepEqual( Stem("tirannello"), "tirannell");});
test("tiranni -> tirann", function() {deepEqual( Stem("tiranni"), "tirann");});
test("tirannia -> tirann", function() {deepEqual( Stem("tirannia"), "tirann");});
test("tirannici -> tirann", function() {deepEqual( Stem("tirannici"), "tirann");});
test("tirannide -> tirannid", function() {deepEqual( Stem("tirannide"), "tirannid");});
test("tirannie -> tirann", function() {deepEqual( Stem("tirannie"), "tirann");});
test("tiranno -> tirann", function() {deepEqual( Stem("tiranno"), "tirann");});
test("tirano -> tir", function() {deepEqual( Stem("tirano"), "tir");});
test("tirapiedi -> tirapied", function() {deepEqual( Stem("tirapiedi"), "tirapied");});
test("tirar -> tir", function() {deepEqual( Stem("tirar"), "tir");});
test("tirare -> tir", function() {deepEqual( Stem("tirare"), "tir");});
test("tirarla -> tir", function() {deepEqual( Stem("tirarla"), "tir");});
test("tirarli -> tir", function() {deepEqual( Stem("tirarli"), "tir");});
test("tirarlo -> tir", function() {deepEqual( Stem("tirarlo"), "tir");});
test("tirarmi -> tir", function() {deepEqual( Stem("tirarmi"), "tir");});
test("tiraron -> tiraron", function() {deepEqual( Stem("tiraron"), "tiraron");});
test("tirarsene -> tir", function() {deepEqual( Stem("tirarsene"), "tir");});
test("tirarsi -> tir", function() {deepEqual( Stem("tirarsi"), "tir");});
test("tirassero -> tir", function() {deepEqual( Stem("tirassero"), "tir");});
test("tirassi -> tir", function() {deepEqual( Stem("tirassi"), "tir");});
test("tirata -> tir", function() {deepEqual( Stem("tirata"), "tir");});
test("tiratala -> tiratal", function() {deepEqual( Stem("tiratala"), "tiratal");});
test("tirate -> tir", function() {deepEqual( Stem("tirate"), "tir");});
test("tiratela -> tiratel", function() {deepEqual( Stem("tiratela"), "tiratel");});
test("tirati -> tir", function() {deepEqual( Stem("tirati"), "tir");});
test("tirato -> tir", function() {deepEqual( Stem("tirato"), "tir");});
test("tiratolo -> tiratol", function() {deepEqual( Stem("tiratolo"), "tiratol");});
test("tirava -> tir", function() {deepEqual( Stem("tirava"), "tir");});
test("tiravan -> tiravan", function() {deepEqual( Stem("tiravan"), "tiravan");});
test("tiravano -> tir", function() {deepEqual( Stem("tiravano"), "tir");});
test("tiri -> tir", function() {deepEqual( Stem("tiri"), "tir");});
test("tiriamo -> tir", function() {deepEqual( Stem("tiriamo"), "tir");});
test("tirin -> tirin", function() {deepEqual( Stem("tirin"), "tirin");});
test("tirinato -> tirin", function() {deepEqual( Stem("tirinato"), "tirin");});
test("tiro -> tir", function() {deepEqual( Stem("tiro"), "tir");});
test("tirò -> tir", function() {deepEqual( Stem("tirò"), "tir");});
test("tirreniche -> tirren", function() {deepEqual( Stem("tirreniche"), "tirren");});
test("tirreno -> tirren", function() {deepEqual( Stem("tirreno"), "tirren");});
test("tisch -> tisc", function() {deepEqual( Stem("tisch"), "tisc");});
test("tishvin -> tishvin", function() {deepEqual( Stem("tishvin"), "tishvin");});
test("tisico -> tisic", function() {deepEqual( Stem("tisico"), "tisic");});
test("tisiologia -> tisiolog", function() {deepEqual( Stem("tisiologia"), "tisiolog");});
test("titanic -> titanic", function() {deepEqual( Stem("titanic"), "titanic");});
test("titola -> titol", function() {deepEqual( Stem("titola"), "titol");});
test("titolare -> titol", function() {deepEqual( Stem("titolare"), "titol");});
test("titolari -> titolar", function() {deepEqual( Stem("titolari"), "titolar");});
test("titolarità -> titolar", function() {deepEqual( Stem("titolarità"), "titolar");});
test("titolati -> titol", function() {deepEqual( Stem("titolati"), "titol");});
test("titolato -> titol", function() {deepEqual( Stem("titolato"), "titol");});
test("titoli -> titol", function() {deepEqual( Stem("titoli"), "titol");});
test("titolo -> titol", function() {deepEqual( Stem("titolo"), "titol");});
test("tittarelli -> tittarell", function() {deepEqual( Stem("tittarelli"), "tittarell");});
test("titubanti -> titub", function() {deepEqual( Stem("titubanti"), "titub");});
test("titubanza -> titub", function() {deepEqual( Stem("titubanza"), "titub");});
test("titubate -> titub", function() {deepEqual( Stem("titubate"), "titub");});
test("titubazione -> titub", function() {deepEqual( Stem("titubazione"), "titub");});
test("tivonchik -> tivonchik", function() {deepEqual( Stem("tivonchik"), "tivonchik");});
test("tiziana -> tizian", function() {deepEqual( Stem("tiziana"), "tizian");});
test("tiziano -> tiz", function() {deepEqual( Stem("tiziano"), "tiz");});
test("tizio -> tiz", function() {deepEqual( Stem("tizio"), "tiz");});
test("tizzi -> tizz", function() {deepEqual( Stem("tizzi"), "tizz");});
test("tizzone -> tizzon", function() {deepEqual( Stem("tizzone"), "tizzon");});
test("tizzoni -> tizzon", function() {deepEqual( Stem("tizzoni"), "tizzon");});
test("tl -> tl", function() {deepEqual( Stem("tl"), "tl");});
test("tlf -> tlf", function() {deepEqual( Stem("tlf"), "tlf");});
test("tm -> tm", function() {deepEqual( Stem("tm"), "tm");});
test("tmc -> tmc", function() {deepEqual( Stem("tmc"), "tmc");});
test("to -> to", function() {deepEqual( Stem("to"), "to");});
test("tocancipa -> tocancip", function() {deepEqual( Stem("tocancipa"), "tocancip");});
test("tocca -> tocc", function() {deepEqual( Stem("tocca"), "tocc");});
test("toccan -> toccan", function() {deepEqual( Stem("toccan"), "toccan");});
test("toccando -> tocc", function() {deepEqual( Stem("toccando"), "tocc");});
test("toccano -> tocc", function() {deepEqual( Stem("toccano"), "tocc");});
test("toccante -> toccant", function() {deepEqual( Stem("toccante"), "toccant");});
test("toccanti -> toccant", function() {deepEqual( Stem("toccanti"), "toccant");});
test("toccar -> tocc", function() {deepEqual( Stem("toccar"), "tocc");});
test("toccare -> tocc", function() {deepEqual( Stem("toccare"), "tocc");});
test("toccargli -> tocc", function() {deepEqual( Stem("toccargli"), "tocc");});
test("toccarli -> tocc", function() {deepEqual( Stem("toccarli"), "tocc");});
test("toccarlo -> tocc", function() {deepEqual( Stem("toccarlo"), "tocc");});
test("toccase -> toccas", function() {deepEqual( Stem("toccase"), "toccas");});
test("toccasse -> tocc", function() {deepEqual( Stem("toccasse"), "tocc");});
test("toccassero -> tocc", function() {deepEqual( Stem("toccassero"), "tocc");});
test("toccata -> tocc", function() {deepEqual( Stem("toccata"), "tocc");});
test("toccate -> tocc", function() {deepEqual( Stem("toccate"), "tocc");});
test("toccategli -> toccategl", function() {deepEqual( Stem("toccategli"), "toccategl");});
test("toccati -> tocc", function() {deepEqual( Stem("toccati"), "tocc");});
test("toccato -> tocc", function() {deepEqual( Stem("toccato"), "tocc");});
test("toccava -> tocc", function() {deepEqual( Stem("toccava"), "tocc");});
test("toccavano -> tocc", function() {deepEqual( Stem("toccavano"), "tocc");});
test("toccherà -> tocc", function() {deepEqual( Stem("toccherà"), "tocc");});
test("toccherebbe -> tocc", function() {deepEqual( Stem("toccherebbe"), "tocc");});
test("toccherò -> tocc", function() {deepEqual( Stem("toccherò"), "tocc");});
test("tocchetti -> tocchett", function() {deepEqual( Stem("tocchetti"), "tocchett");});
test("tocchi -> tocc", function() {deepEqual( Stem("tocchi"), "tocc");});
test("tocci -> tocc", function() {deepEqual( Stem("tocci"), "tocc");});
test("tocco -> tocc", function() {deepEqual( Stem("tocco"), "tocc");});
test("toccò -> tocc", function() {deepEqual( Stem("toccò"), "tocc");});
test("todaro -> todar", function() {deepEqual( Stem("todaro"), "todar");});
test("todd -> todd", function() {deepEqual( Stem("todd"), "todd");});
test("tofoli -> tofol", function() {deepEqual( Stem("tofoli"), "tofol");});
test("toga -> tog", function() {deepEqual( Stem("toga"), "tog");});
test("togae -> toga", function() {deepEqual( Stem("togae"), "toga");});
test("togato -> tog", function() {deepEqual( Stem("togato"), "tog");});
test("togliatti -> togliatt", function() {deepEqual( Stem("togliatti"), "togliatt");});
test("toglie -> togl", function() {deepEqual( Stem("toglie"), "togl");});
test("togliendo -> togl", function() {deepEqual( Stem("togliendo"), "togl");});
test("togliendogli -> togl", function() {deepEqual( Stem("togliendogli"), "togl");});
test("togliendoli -> togl", function() {deepEqual( Stem("togliendoli"), "togl");});
test("togliere -> togl", function() {deepEqual( Stem("togliere"), "togl");});
test("togliergli -> togl", function() {deepEqual( Stem("togliergli"), "togl");});
test("togliergliela -> togl", function() {deepEqual( Stem("togliergliela"), "togl");});
test("togliersi -> togl", function() {deepEqual( Stem("togliersi"), "togl");});
test("togliervi -> togl", function() {deepEqual( Stem("togliervi"), "togl");});
test("togliesse -> togliess", function() {deepEqual( Stem("togliesse"), "togliess");});
test("toglieva -> togl", function() {deepEqual( Stem("toglieva"), "togl");});
test("togo -> tog", function() {deepEqual( Stem("togo"), "tog");});
test("tokio -> tok", function() {deepEqual( Stem("tokio"), "tok");});
test("tokunaga -> tokunag", function() {deepEqual( Stem("tokunaga"), "tokunag");});
test("tokyo -> toky", function() {deepEqual( Stem("tokyo"), "toky");});
test("toldo -> told", function() {deepEqual( Stem("toldo"), "told");});
test("toledo -> toled", function() {deepEqual( Stem("toledo"), "toled");});
test("tollerabile -> toller", function() {deepEqual( Stem("tollerabile"), "toller");});
test("tollerabilità -> toller", function() {deepEqual( Stem("tollerabilità"), "toller");});
test("tolleranza -> toller", function() {deepEqual( Stem("tolleranza"), "toller");});
test("tollerar -> toller", function() {deepEqual( Stem("tollerar"), "toller");});
test("tollerare -> toller", function() {deepEqual( Stem("tollerare"), "toller");});
test("tollerati -> toller", function() {deepEqual( Stem("tollerati"), "toller");});
test("tolone -> tolon", function() {deepEqual( Stem("tolone"), "tolon");});
test("tolstikov -> tolstikov", function() {deepEqual( Stem("tolstikov"), "tolstikov");});
test("tolta -> tolt", function() {deepEqual( Stem("tolta"), "tolt");});
test("tolte -> tolt", function() {deepEqual( Stem("tolte"), "tolt");});
test("tolto -> tolt", function() {deepEqual( Stem("tolto"), "tolt");});
test("tom -> tom", function() {deepEqual( Stem("tom"), "tom");});
test("tomas -> tomas", function() {deepEqual( Stem("tomas"), "tomas");});
test("tomba -> tomb", function() {deepEqual( Stem("tomba"), "tomb");});
test("tombalè -> tombal", function() {deepEqual( Stem("tombalè"), "tombal");});
test("tommasi -> tommas", function() {deepEqual( Stem("tommasi"), "tommas");});
test("tommi -> tomm", function() {deepEqual( Stem("tommi"), "tomm");});
test("tommyknockers -> tommyknockers", function() {deepEqual( Stem("tommyknockers"), "tommyknockers");});
test("tommyknokers -> tommyknokers", function() {deepEqual( Stem("tommyknokers"), "tommyknokers");});
test("ton -> ton", function() {deepEqual( Stem("ton"), "ton");});
test("tonaca -> tonac", function() {deepEqual( Stem("tonaca"), "tonac");});
test("tonache -> tonac", function() {deepEqual( Stem("tonache"), "tonac");});
test("tonante -> tonant", function() {deepEqual( Stem("tonante"), "tonant");});
test("tondo -> tond", function() {deepEqual( Stem("tondo"), "tond");});
test("tonè -> ton", function() {deepEqual( Stem("tonè"), "ton");});
test("tonfo -> tonf", function() {deepEqual( Stem("tonfo"), "tonf");});
test("toni -> ton", function() {deepEqual( Stem("toni"), "ton");});
test("tonini -> tonin", function() {deepEqual( Stem("tonini"), "tonin");});
test("tonio -> ton", function() {deepEqual( Stem("tonio"), "ton");});
test("tonnellate -> tonnell", function() {deepEqual( Stem("tonnellate"), "tonnell");});
test("tonno -> tonn", function() {deepEqual( Stem("tonno"), "tonn");});
test("tono -> ton", function() {deepEqual( Stem("tono"), "ton");});
test("tonò -> ton", function() {deepEqual( Stem("tonò"), "ton");});
test("tontini -> tontin", function() {deepEqual( Stem("tontini"), "tontin");});
test("tony -> tony", function() {deepEqual( Stem("tony"), "tony");});
test("tonynton -> tonynton", function() {deepEqual( Stem("tonynton"), "tonynton");});
test("top -> top", function() {deepEqual( Stem("top"), "top");});
test("topacci -> topacc", function() {deepEqual( Stem("topacci"), "topacc");});
test("topaie -> topai", function() {deepEqual( Stem("topaie"), "topai");});
test("topi -> top", function() {deepEqual( Stem("topi"), "top");});
test("topo -> top", function() {deepEqual( Stem("topo"), "top");});
test("toppa -> topp", function() {deepEqual( Stem("toppa"), "topp");});
test("topponi -> toppon", function() {deepEqual( Stem("topponi"), "toppon");});
test("torbida -> torbid", function() {deepEqual( Stem("torbida"), "torbid");});
test("torbide -> torbid", function() {deepEqual( Stem("torbide"), "torbid");});
test("torbido -> torbid", function() {deepEqual( Stem("torbido"), "torbid");});
test("torca -> torc", function() {deepEqual( Stem("torca"), "torc");});
test("torce -> torc", function() {deepEqual( Stem("torce"), "torc");});
test("torcendo -> torc", function() {deepEqual( Stem("torcendo"), "torc");});
test("torcere -> torc", function() {deepEqual( Stem("torcere"), "torc");});
test("torcetti -> torcett", function() {deepEqual( Stem("torcetti"), "torcett");});
test("torcetto -> torcett", function() {deepEqual( Stem("torcetto"), "torcett");});
test("torchia -> torc", function() {deepEqual( Stem("torchia"), "torc");});
test("torchiatura -> torchiatur", function() {deepEqual( Stem("torchiatura"), "torchiatur");});
test("torcia -> torc", function() {deepEqual( Stem("torcia"), "torc");});
test("tord -> tord", function() {deepEqual( Stem("tord"), "tord");});
test("torello -> torell", function() {deepEqual( Stem("torello"), "torell");});
test("torgiano -> torg", function() {deepEqual( Stem("torgiano"), "torg");});
test("torinese -> torines", function() {deepEqual( Stem("torinese"), "torines");});
test("torino -> torin", function() {deepEqual( Stem("torino"), "torin");});
test("torme -> torm", function() {deepEqual( Stem("torme"), "torm");});
test("tormenta -> torment", function() {deepEqual( Stem("tormenta"), "torment");});
test("tormentar -> torment", function() {deepEqual( Stem("tormentar"), "torment");});
test("tormentare -> torment", function() {deepEqual( Stem("tormentare"), "torment");});
test("tormentarla -> torment", function() {deepEqual( Stem("tormentarla"), "torment");});
test("tormentarli -> torment", function() {deepEqual( Stem("tormentarli"), "torment");});
test("tormentarlo -> torment", function() {deepEqual( Stem("tormentarlo"), "torment");});
test("tormentarmi -> torment", function() {deepEqual( Stem("tormentarmi"), "torment");});
test("tormentarsi -> torment", function() {deepEqual( Stem("tormentarsi"), "torment");});
test("tormentato -> torment", function() {deepEqual( Stem("tormentato"), "torment");});
test("tormentavano -> torment", function() {deepEqual( Stem("tormentavano"), "torment");});
test("tormenti -> torment", function() {deepEqual( Stem("tormenti"), "torment");});
test("tormento -> torment", function() {deepEqual( Stem("tormento"), "torment");});
test("tormentosa -> torment", function() {deepEqual( Stem("tormentosa"), "torment");});
test("tormentose -> torment", function() {deepEqual( Stem("tormentose"), "torment");});
test("tormentoso -> torment", function() {deepEqual( Stem("tormentoso"), "torment");});
test("torna -> torn", function() {deepEqual( Stem("torna"), "torn");});
test("tornando -> torn", function() {deepEqual( Stem("tornando"), "torn");});
test("tornandoci -> torn", function() {deepEqual( Stem("tornandoci"), "torn");});
test("tornandole -> torn", function() {deepEqual( Stem("tornandole"), "torn");});
test("tornandovi -> torn", function() {deepEqual( Stem("tornandovi"), "torn");});
test("tornano -> torn", function() {deepEqual( Stem("tornano"), "torn");});
test("tornar -> torn", function() {deepEqual( Stem("tornar"), "torn");});
test("tornarci -> torn", function() {deepEqual( Stem("tornarci"), "torn");});
test("tornare -> torn", function() {deepEqual( Stem("tornare"), "torn");});
test("tornarono -> torn", function() {deepEqual( Stem("tornarono"), "torn");});
test("tornarsene -> torn", function() {deepEqual( Stem("tornarsene"), "torn");});
test("tornasolè -> tornasol", function() {deepEqual( Stem("tornasolè"), "tornasol");});
test("tornasse -> torn", function() {deepEqual( Stem("tornasse"), "torn");});
test("tornassi -> torn", function() {deepEqual( Stem("tornassi"), "torn");});
test("tornata -> torn", function() {deepEqual( Stem("tornata"), "torn");});
test("tornate -> torn", function() {deepEqual( Stem("tornate"), "torn");});
test("tornatele -> tornatel", function() {deepEqual( Stem("tornatele"), "tornatel");});
test("tornatevene -> tornateven", function() {deepEqual( Stem("tornatevene"), "tornateven");});
test("tornati -> torn", function() {deepEqual( Stem("tornati"), "torn");});
test("tornato -> torn", function() {deepEqual( Stem("tornato"), "torn");});
test("tornava -> torn", function() {deepEqual( Stem("tornava"), "torn");});
test("tornavan -> tornavan", function() {deepEqual( Stem("tornavan"), "tornavan");});
test("tornavano -> torn", function() {deepEqual( Stem("tornavano"), "torn");});
test("torneo -> torne", function() {deepEqual( Stem("torneo"), "torne");});
test("tornerà -> torn", function() {deepEqual( Stem("tornerà"), "torn");});
test("tornerai -> torn", function() {deepEqual( Stem("tornerai"), "torn");});
test("torneranno -> torn", function() {deepEqual( Stem("torneranno"), "torn");});
test("tornerebbe -> torn", function() {deepEqual( Stem("tornerebbe"), "torn");});
test("tornerei -> torn", function() {deepEqual( Stem("tornerei"), "torn");});
test("torneremo -> torn", function() {deepEqual( Stem("torneremo"), "torn");});
test("tornerete -> torn", function() {deepEqual( Stem("tornerete"), "torn");});
test("tornerò -> torn", function() {deepEqual( Stem("tornerò"), "torn");});
test("torni -> torn", function() {deepEqual( Stem("torni"), "torn");});
test("torniamo -> torn", function() {deepEqual( Stem("torniamo"), "torn");});
test("tornita -> torn", function() {deepEqual( Stem("tornita"), "torn");});
test("torno -> torn", function() {deepEqual( Stem("torno"), "torn");});
test("tornò -> torn", function() {deepEqual( Stem("tornò"), "torn");});
test("toro -> tor", function() {deepEqual( Stem("toro"), "tor");});
test("toronto -> toront", function() {deepEqual( Stem("toronto"), "toront");});
test("torpedoni -> torpedon", function() {deepEqual( Stem("torpedoni"), "torpedon");});
test("torquato -> torqu", function() {deepEqual( Stem("torquato"), "torqu");});
test("torracchione -> torracchion", function() {deepEqual( Stem("torracchione"), "torracchion");});
test("torras -> torras", function() {deepEqual( Stem("torras"), "torras");});
test("torre -> torr", function() {deepEqual( Stem("torre"), "torr");});
test("torreggiava -> torregg", function() {deepEqual( Stem("torreggiava"), "torregg");});
test("torrentaccio -> torrentacc", function() {deepEqual( Stem("torrentaccio"), "torrentacc");});
test("torrente -> torrent", function() {deepEqual( Stem("torrente"), "torrent");});
test("torrenti -> torrent", function() {deepEqual( Stem("torrenti"), "torrent");});
test("torres -> torres", function() {deepEqual( Stem("torres"), "torres");});
test("torri -> torr", function() {deepEqual( Stem("torri"), "torr");});
test("torricelli -> torricell", function() {deepEqual( Stem("torricelli"), "torricell");});
test("torrisi -> torris", function() {deepEqual( Stem("torrisi"), "torris");});
test("torse -> tors", function() {deepEqual( Stem("torse"), "tors");});
test("torso -> tors", function() {deepEqual( Stem("torso"), "tors");});
test("torsoli -> torsol", function() {deepEqual( Stem("torsoli"), "torsol");});
test("torta -> tort", function() {deepEqual( Stem("torta"), "tort");});
test("torti -> tort", function() {deepEqual( Stem("torti"), "tort");});
test("torto -> tort", function() {deepEqual( Stem("torto"), "tort");});
test("tortuose -> tortuos", function() {deepEqual( Stem("tortuose"), "tortuos");});
test("tortuoso -> tortuos", function() {deepEqual( Stem("tortuoso"), "tortuos");});
test("tortura -> tortur", function() {deepEqual( Stem("tortura"), "tortur");});
test("torturare -> tortur", function() {deepEqual( Stem("torturare"), "tortur");});
test("torture -> tortur", function() {deepEqual( Stem("torture"), "tortur");});
test("torturi -> tortur", function() {deepEqual( Stem("torturi"), "tortur");});
test("torvo -> torv", function() {deepEqual( Stem("torvo"), "torv");});
test("tosa -> tos", function() {deepEqual( Stem("tosa"), "tos");});
test("tosarsi -> tos", function() {deepEqual( Stem("tosarsi"), "tos");});
test("toscana -> toscan", function() {deepEqual( Stem("toscana"), "toscan");});
test("toscane -> toscan", function() {deepEqual( Stem("toscane"), "toscan");});
test("toscani -> toscan", function() {deepEqual( Stem("toscani"), "toscan");});
test("toscano -> tosc", function() {deepEqual( Stem("toscano"), "tosc");});
test("toseranno -> tos", function() {deepEqual( Stem("toseranno"), "tos");});
test("tosi -> tos", function() {deepEqual( Stem("tosi"), "tos");});
test("tossì -> toss", function() {deepEqual( Stem("tossì"), "toss");});
test("tossicodipendente -> tossicodipendent", function() {deepEqual( Stem("tossicodipendente"), "tossicodipendent");});
test("tossicodipendenti -> tossicodipendent", function() {deepEqual( Stem("tossicodipendenti"), "tossicodipendent");});
test("tossicologa -> tossicolog", function() {deepEqual( Stem("tossicologa"), "tossicolog");});
test("tossicologico -> tossicolog", function() {deepEqual( Stem("tossicologico"), "tossicolog");});
test("tossire -> toss", function() {deepEqual( Stem("tossire"), "toss");});
test("tosta -> tost", function() {deepEqual( Stem("tosta"), "tost");});
test("tosto -> tost", function() {deepEqual( Stem("tosto"), "tost");});
test("total -> total", function() {deepEqual( Stem("total"), "total");});
test("totale -> total", function() {deepEqual( Stem("totale"), "total");});
test("totalitarismi -> totalitar", function() {deepEqual( Stem("totalitarismi"), "totalitar");});
test("totalizzato -> totalizz", function() {deepEqual( Stem("totalizzato"), "totalizz");});
test("totalmente -> total", function() {deepEqual( Stem("totalmente"), "total");});
test("totip -> totip", function() {deepEqual( Stem("totip"), "totip");});
test("toto -> tot", function() {deepEqual( Stem("toto"), "tot");});
test("totò -> tot", function() {deepEqual( Stem("totò"), "tot");});
test("totocalcio -> totocalc", function() {deepEqual( Stem("totocalcio"), "totocalc");});
test("totogol -> totogol", function() {deepEqual( Stem("totogol"), "totogol");});
test("totti -> tott", function() {deepEqual( Stem("totti"), "tott");});
test("touareg -> touareg", function() {deepEqual( Stem("touareg"), "touareg");});
test("tour -> tour", function() {deepEqual( Stem("tour"), "tour");});
test("tovaglia -> tovagl", function() {deepEqual( Stem("tovaglia"), "tovagl");});
test("tovaglie -> tovagl", function() {deepEqual( Stem("tovaglie"), "tovagl");});
test("tovagliolo -> tovagliol", function() {deepEqual( Stem("tovagliolo"), "tovagliol");});
test("tovalieri -> tovalier", function() {deepEqual( Stem("tovalieri"), "tovalier");});
test("toyota -> toyot", function() {deepEqual( Stem("toyota"), "toyot");});
test("tp -> tp", function() {deepEqual( Stem("tp"), "tp");});
test("tra -> tra", function() {deepEqual( Stem("tra"), "tra");});
test("traballanti -> traball", function() {deepEqual( Stem("traballanti"), "traball");});
test("trabocca -> trabocc", function() {deepEqual( Stem("trabocca"), "trabocc");});
test("traboccanti -> trabocc", function() {deepEqual( Stem("traboccanti"), "trabocc");});
test("traboccare -> trabocc", function() {deepEqual( Stem("traboccare"), "trabocc");});
test("traboccò -> trabocc", function() {deepEqual( Stem("traboccò"), "trabocc");});
test("tracannato -> tracann", function() {deepEqual( Stem("tracannato"), "tracann");});
test("tracannò -> tracann", function() {deepEqual( Stem("tracannò"), "tracann");});
test("tracce -> tracc", function() {deepEqual( Stem("tracce"), "tracc");});
test("traccia -> tracc", function() {deepEqual( Stem("traccia"), "tracc");});
test("tracciare -> tracc", function() {deepEqual( Stem("tracciare"), "tracc");});
test("tracciarne -> tracc", function() {deepEqual( Stem("tracciarne"), "tracc");});
test("tracciate -> tracc", function() {deepEqual( Stem("tracciate"), "tracc");});
test("tracciato -> tracc", function() {deepEqual( Stem("tracciato"), "tracc");});
test("tracollava -> tracoll", function() {deepEqual( Stem("tracollava"), "tracoll");});
test("tracollo -> tracoll", function() {deepEqual( Stem("tracollo"), "tracoll");});
test("tracy -> tracy", function() {deepEqual( Stem("tracy"), "tracy");});
test("trade -> trad", function() {deepEqual( Stem("trade"), "trad");});
test("tradimenti -> trad", function() {deepEqual( Stem("tradimenti"), "trad");});
test("tradimento -> trad", function() {deepEqual( Stem("tradimento"), "trad");});
test("trading -> trading", function() {deepEqual( Stem("trading"), "trading");});
test("tradire -> trad", function() {deepEqual( Stem("tradire"), "trad");});
test("tradisce -> trad", function() {deepEqual( Stem("tradisce"), "trad");});
test("traditi -> trad", function() {deepEqual( Stem("traditi"), "trad");});
test("tradito -> trad", function() {deepEqual( Stem("tradito"), "trad");});
test("traditor -> traditor", function() {deepEqual( Stem("traditor"), "traditor");});
test("traditora -> traditor", function() {deepEqual( Stem("traditora"), "traditor");});
test("traditore -> traditor", function() {deepEqual( Stem("traditore"), "traditor");});
test("traditori -> traditor", function() {deepEqual( Stem("traditori"), "traditor");});
test("traditrice -> traditr", function() {deepEqual( Stem("traditrice"), "traditr");});
test("tradizionale -> tradizional", function() {deepEqual( Stem("tradizionale"), "tradizional");});
test("tradizionali -> tradizional", function() {deepEqual( Stem("tradizionali"), "tradizional");});
test("tradizionalmente -> tradizional", function() {deepEqual( Stem("tradizionalmente"), "tradizional");});
test("tradizione -> tradizion", function() {deepEqual( Stem("tradizione"), "tradizion");});
test("tradizioni -> tradizion", function() {deepEqual( Stem("tradizioni"), "tradizion");});
test("traducessero -> traduc", function() {deepEqual( Stem("traducessero"), "traduc");});
test("traduciamo -> traduc", function() {deepEqual( Stem("traduciamo"), "traduc");});
test("tradurrà -> tradurr", function() {deepEqual( Stem("tradurrà"), "tradurr");});
test("tradurre -> tradurr", function() {deepEqual( Stem("tradurre"), "tradurr");});
test("tradursi -> tradurs", function() {deepEqual( Stem("tradursi"), "tradurs");});
test("traduttore -> traduttor", function() {deepEqual( Stem("traduttore"), "traduttor");});
test("trae -> tra", function() {deepEqual( Stem("trae"), "tra");});
test("traendo -> tra", function() {deepEqual( Stem("traendo"), "tra");});
test("traessi -> traess", function() {deepEqual( Stem("traessi"), "traess");});
test("trafelato -> trafel", function() {deepEqual( Stem("trafelato"), "trafel");});
test("trafficando -> traffic", function() {deepEqual( Stem("trafficando"), "traffic");});
test("trafficanti -> traffic", function() {deepEqual( Stem("trafficanti"), "traffic");});
test("traffichi -> traffic", function() {deepEqual( Stem("traffichi"), "traffic");});
test("traffici -> traffic", function() {deepEqual( Stem("traffici"), "traffic");});
test("traffico -> traffic", function() {deepEqual( Stem("traffico"), "traffic");});
test("trafitta -> trafitt", function() {deepEqual( Stem("trafitta"), "trafitt");});
test("trafitto -> trafitt", function() {deepEqual( Stem("trafitto"), "trafitt");});
test("traforata -> trafor", function() {deepEqual( Stem("traforata"), "trafor");});
test("traforate -> trafor", function() {deepEqual( Stem("traforate"), "trafor");});
test("trafugamento -> trafug", function() {deepEqual( Stem("trafugamento"), "trafug");});
test("trafugare -> trafug", function() {deepEqual( Stem("trafugare"), "trafug");});
test("trafugati -> trafug", function() {deepEqual( Stem("trafugati"), "trafug");});
test("trafugato -> trafug", function() {deepEqual( Stem("trafugato"), "trafug");});
test("tragedia -> traged", function() {deepEqual( Stem("tragedia"), "traged");});
test("tragedie -> traged", function() {deepEqual( Stem("tragedie"), "traged");});
test("tragga -> tragg", function() {deepEqual( Stem("tragga"), "tragg");});
test("traggedie -> tragged", function() {deepEqual( Stem("traggedie"), "tragged");});
test("traghettare -> traghett", function() {deepEqual( Stem("traghettare"), "traghett");});
test("traghetti -> traghett", function() {deepEqual( Stem("traghetti"), "traghett");});
test("traghetto -> traghett", function() {deepEqual( Stem("traghetto"), "traghett");});
test("tragica -> tragic", function() {deepEqual( Stem("tragica"), "tragic");});
test("tragicamente -> tragic", function() {deepEqual( Stem("tragicamente"), "tragic");});
test("tragiche -> tragic", function() {deepEqual( Stem("tragiche"), "tragic");});
test("tragici -> tragic", function() {deepEqual( Stem("tragici"), "tragic");});
test("tragico -> tragic", function() {deepEqual( Stem("tragico"), "tragic");});
test("tragittar -> tragitt", function() {deepEqual( Stem("tragittar"), "tragitt");});
test("tragittarmi -> tragitt", function() {deepEqual( Stem("tragittarmi"), "tragitt");});
test("tragitto -> tragitt", function() {deepEqual( Stem("tragitto"), "tragitt");});
test("traguardi -> traguard", function() {deepEqual( Stem("traguardi"), "traguard");});
test("traguardo -> traguard", function() {deepEqual( Stem("traguardo"), "traguard");});
test("traiettoria -> traiettor", function() {deepEqual( Stem("traiettoria"), "traiettor");});
test("trainante -> trainant", function() {deepEqual( Stem("trainante"), "trainant");});
test("trainato -> train", function() {deepEqual( Stem("trainato"), "train");});
test("trainer -> trainer", function() {deepEqual( Stem("trainer"), "trainer");});
test("traino -> train", function() {deepEqual( Stem("traino"), "train");});
test("tralasceremo -> tralasc", function() {deepEqual( Stem("tralasceremo"), "tralasc");});
test("tralascia -> tralasc", function() {deepEqual( Stem("tralascia"), "tralasc");});
test("tralasciamo -> tralasc", function() {deepEqual( Stem("tralasciamo"), "tralasc");});
test("tralasciare -> tralasc", function() {deepEqual( Stem("tralasciare"), "tralasc");});
test("tralasciava -> tralasc", function() {deepEqual( Stem("tralasciava"), "tralasc");});
test("tralasciò -> tralasc", function() {deepEqual( Stem("tralasciò"), "tralasc");});
test("tralci -> tralc", function() {deepEqual( Stem("tralci"), "tralc");});
test("traluce -> traluc", function() {deepEqual( Stem("traluce"), "traluc");});
test("tram -> tram", function() {deepEqual( Stem("tram"), "tram");});
test("trama -> tram", function() {deepEqual( Stem("trama"), "tram");});
test("tramagli -> tramagl", function() {deepEqual( Stem("tramagli"), "tramagl");});
test("tramaglino -> tramaglin", function() {deepEqual( Stem("tramaglino"), "tramaglin");});
test("tramaliini -> tramaliin", function() {deepEqual( Stem("tramaliini"), "tramaliin");});
test("trambusto -> trambust", function() {deepEqual( Stem("trambusto"), "trambust");});
test("trame -> tram", function() {deepEqual( Stem("trame"), "tram");});
test("tramenìo -> tramenì", function() {deepEqual( Stem("tramenìo"), "tramenì");});
test("tramezzani -> tramezzan", function() {deepEqual( Stem("tramezzani"), "tramezzan");});
test("tramite -> tram", function() {deepEqual( Stem("tramite"), "tram");});
test("tramonta -> tramont", function() {deepEqual( Stem("tramonta"), "tramont");});
test("tramontano -> tramont", function() {deepEqual( Stem("tramontano"), "tramont");});
test("tramontata -> tramont", function() {deepEqual( Stem("tramontata"), "tramont");});
test("tramontato -> tramont", function() {deepEqual( Stem("tramontato"), "tramont");});
test("tramonto -> tramont", function() {deepEqual( Stem("tramonto"), "tramont");});
test("tramutato -> tramut", function() {deepEqual( Stem("tramutato"), "tramut");});
test("trance -> tranc", function() {deepEqual( Stem("trance"), "tranc");});
test("tranche -> tranc", function() {deepEqual( Stem("tranche"), "tranc");});
test("trani -> tran", function() {deepEqual( Stem("trani"), "tran");});
test("tranne -> trann", function() {deepEqual( Stem("tranne"), "trann");});
test("tranquilizzati -> tranquilizz", function() {deepEqual( Stem("tranquilizzati"), "tranquilizz");});
test("tranquilla -> tranquill", function() {deepEqual( Stem("tranquilla"), "tranquill");});
test("tranquillamente -> tranquill", function() {deepEqual( Stem("tranquillamente"), "tranquill");});
test("tranquillanti -> tranquill", function() {deepEqual( Stem("tranquillanti"), "tranquill");});
test("tranquille -> tranquill", function() {deepEqual( Stem("tranquille"), "tranquill");});
test("tranquilli -> tranquill", function() {deepEqual( Stem("tranquilli"), "tranquill");});
test("tranquillità -> tranquill", function() {deepEqual( Stem("tranquillità"), "tranquill");});
test("tranquillizzante -> tranquillizz", function() {deepEqual( Stem("tranquillizzante"), "tranquillizz");});
test("tranquillizzare -> tranquillizz", function() {deepEqual( Stem("tranquillizzare"), "tranquillizz");});
test("tranquillizzata -> tranquillizz", function() {deepEqual( Stem("tranquillizzata"), "tranquillizz");});
test("tranquillo -> tranquill", function() {deepEqual( Stem("tranquillo"), "tranquill");});
test("transatlantica -> transatlant", function() {deepEqual( Stem("transatlantica"), "transatlant");});
test("transazione -> transazion", function() {deepEqual( Stem("transazione"), "transazion");});
test("transeuropee -> transeurope", function() {deepEqual( Stem("transeuropee"), "transeurope");});
test("transfughi -> transfug", function() {deepEqual( Stem("transfughi"), "transfug");});
test("transiti -> trans", function() {deepEqual( Stem("transiti"), "trans");});
test("transitiva -> transit", function() {deepEqual( Stem("transitiva"), "transit");});
test("transizione -> transizion", function() {deepEqual( Stem("transizione"), "transizion");});
test("transportation -> transportation", function() {deepEqual( Stem("transportation"), "transportation");});
test("trantina -> trantin", function() {deepEqual( Stem("trantina"), "trantin");});
test("trapani -> trapan", function() {deepEqual( Stem("trapani"), "trapan");});
test("trapassate -> trapass", function() {deepEqual( Stem("trapassate"), "trapass");});
test("trapela -> trapel", function() {deepEqual( Stem("trapela"), "trapel");});
test("trapelasse -> trapel", function() {deepEqual( Stem("trapelasse"), "trapel");});
test("trapelato -> trapel", function() {deepEqual( Stem("trapelato"), "trapel");});
test("trapiantato -> trapiant", function() {deepEqual( Stem("trapiantato"), "trapiant");});
test("trapianti -> trapiant", function() {deepEqual( Stem("trapianti"), "trapiant");});
test("trapianto -> trapiant", function() {deepEqual( Stem("trapianto"), "trapiant");});
test("trapolorum -> trapolorum", function() {deepEqual( Stem("trapolorum"), "trapolorum");});
test("trapontando -> trapont", function() {deepEqual( Stem("trapontando"), "trapont");});
test("trappola -> trappol", function() {deepEqual( Stem("trappola"), "trappol");});
test("trappole -> trappol", function() {deepEqual( Stem("trappole"), "trappol");});
test("trarrà -> trarr", function() {deepEqual( Stem("trarrà"), "trarr");});
test("trarre -> trarr", function() {deepEqual( Stem("trarre"), "trarr");});
test("trasandata -> trasand", function() {deepEqual( Stem("trasandata"), "trasand");});
test("trasandato -> trasand", function() {deepEqual( Stem("trasandato"), "trasand");});
test("trascinare -> trascin", function() {deepEqual( Stem("trascinare"), "trascin");});
test("trascinarla -> trascin", function() {deepEqual( Stem("trascinarla"), "trascin");});
test("trascinarle -> trascin", function() {deepEqual( Stem("trascinarle"), "trascin");});
test("trascinato -> trascin", function() {deepEqual( Stem("trascinato"), "trascin");});
test("trascinatore -> trascin", function() {deepEqual( Stem("trascinatore"), "trascin");});
test("trascorrendo -> trascorr", function() {deepEqual( Stem("trascorrendo"), "trascorr");});
test("trascorrerà -> trascorr", function() {deepEqual( Stem("trascorrerà"), "trascorr");});
test("trascorrere -> trascorr", function() {deepEqual( Stem("trascorrere"), "trascorr");});
test("trascorreva -> trascorr", function() {deepEqual( Stem("trascorreva"), "trascorr");});
test("trascorrevano -> trascorr", function() {deepEqual( Stem("trascorrevano"), "trascorr");});
test("trascorrono -> trascorr", function() {deepEqual( Stem("trascorrono"), "trascorr");});
test("trascorsa -> trascors", function() {deepEqual( Stem("trascorsa"), "trascors");});
test("trascorso -> trascors", function() {deepEqual( Stem("trascorso"), "trascors");});
test("trascriver -> trascriver", function() {deepEqual( Stem("trascriver"), "trascriver");});
test("trascrivere -> trascriv", function() {deepEqual( Stem("trascrivere"), "trascriv");});
test("trascriveremo -> trascriv", function() {deepEqual( Stem("trascriveremo"), "trascriv");});
test("trascriviamo -> trascriv", function() {deepEqual( Stem("trascriviamo"), "trascriv");});
test("trascura -> trascur", function() {deepEqual( Stem("trascura"), "trascur");});
test("trascuranza -> trascur", function() {deepEqual( Stem("trascuranza"), "trascur");});
test("trascurar -> trascur", function() {deepEqual( Stem("trascurar"), "trascur");});
test("trascurare -> trascur", function() {deepEqual( Stem("trascurare"), "trascur");});
test("trascurata -> trascur", function() {deepEqual( Stem("trascurata"), "trascur");});
test("trascuratezza -> trascuratezz", function() {deepEqual( Stem("trascuratezza"), "trascuratezz");});
test("trascurato -> trascur", function() {deepEqual( Stem("trascurato"), "trascur");});
test("trascuro -> trascur", function() {deepEqual( Stem("trascuro"), "trascur");});
test("trascurò -> trascur", function() {deepEqual( Stem("trascurò"), "trascur");});
test("trasferendo -> trasfer", function() {deepEqual( Stem("trasferendo"), "trasfer");});
test("trasferendoli -> trasfer", function() {deepEqual( Stem("trasferendoli"), "trasfer");});
test("trasferì -> trasfer", function() {deepEqual( Stem("trasferì"), "trasfer");});
test("trasferimenti -> trasfer", function() {deepEqual( Stem("trasferimenti"), "trasfer");});
test("trasferimento -> trasfer", function() {deepEqual( Stem("trasferimento"), "trasfer");});
test("trasferirà -> trasfer", function() {deepEqual( Stem("trasferirà"), "trasfer");});
test("trasferire -> trasfer", function() {deepEqual( Stem("trasferire"), "trasfer");});
test("trasferirsi -> trasfer", function() {deepEqual( Stem("trasferirsi"), "trasfer");});
test("trasferisce -> trasfer", function() {deepEqual( Stem("trasferisce"), "trasfer");});
test("trasferita -> trasfer", function() {deepEqual( Stem("trasferita"), "trasfer");});
test("trasferiti -> trasfer", function() {deepEqual( Stem("trasferiti"), "trasfer");});
test("trasferito -> trasfer", function() {deepEqual( Stem("trasferito"), "trasfer");});
test("trasferitosi -> trasferit", function() {deepEqual( Stem("trasferitosi"), "trasferit");});
test("trasferta -> trasfert", function() {deepEqual( Stem("trasferta"), "trasfert");});
test("trasferte -> trasfert", function() {deepEqual( Stem("trasferte"), "trasfert");});
test("trasfigurare -> trasfigur", function() {deepEqual( Stem("trasfigurare"), "trasfigur");});
test("trasforma -> trasform", function() {deepEqual( Stem("trasforma"), "trasform");});
test("trasformandosi -> trasform", function() {deepEqual( Stem("trasformandosi"), "trasform");});
test("trasformare -> trasform", function() {deepEqual( Stem("trasformare"), "trasform");});
test("trasformarè -> trasformar", function() {deepEqual( Stem("trasformarè"), "trasformar");});
test("trasformarsi -> trasform", function() {deepEqual( Stem("trasformarsi"), "trasform");});
test("trasformata -> trasform", function() {deepEqual( Stem("trasformata"), "trasform");});
test("trasformato -> trasform", function() {deepEqual( Stem("trasformato"), "trasform");});
test("trasformazione -> trasform", function() {deepEqual( Stem("trasformazione"), "trasform");});
test("trasformistica -> trasformist", function() {deepEqual( Stem("trasformistica"), "trasformist");});
test("trasfusione -> trasfusion", function() {deepEqual( Stem("trasfusione"), "trasfusion");});
test("trasgredire -> trasgred", function() {deepEqual( Stem("trasgredire"), "trasgred");});
test("trasgredirne -> trasgred", function() {deepEqual( Stem("trasgredirne"), "trasgred");});
test("trasgredisca -> trasgred", function() {deepEqual( Stem("trasgredisca"), "trasgred");});
test("trasgredito -> trasgred", function() {deepEqual( Stem("trasgredito"), "trasgred");});
test("trasgressione -> trasgression", function() {deepEqual( Stem("trasgressione"), "trasgression");});
test("trasgressori -> trasgressor", function() {deepEqual( Stem("trasgressori"), "trasgressor");});
test("trasmesa -> trasmes", function() {deepEqual( Stem("trasmesa"), "trasmes");});
test("trasmessa -> trasmess", function() {deepEqual( Stem("trasmessa"), "trasmess");});
test("trasmesse -> trasmess", function() {deepEqual( Stem("trasmesse"), "trasmess");});
test("trasmessi -> trasmess", function() {deepEqual( Stem("trasmessi"), "trasmess");});
test("trasmesso -> trasmess", function() {deepEqual( Stem("trasmesso"), "trasmess");});
test("trasmette -> trasmett", function() {deepEqual( Stem("trasmette"), "trasmett");});
test("trasmetterà -> trasmett", function() {deepEqual( Stem("trasmetterà"), "trasmett");});
test("trasmettere -> trasmett", function() {deepEqual( Stem("trasmettere"), "trasmett");});
test("trasmetteremo -> trasmett", function() {deepEqual( Stem("trasmetteremo"), "trasmett");});
test("trasmetterla -> trasmett", function() {deepEqual( Stem("trasmetterla"), "trasmett");});
test("trasmettesse -> trasmettess", function() {deepEqual( Stem("trasmettesse"), "trasmettess");});
test("trasmettono -> trasmett", function() {deepEqual( Stem("trasmettono"), "trasmett");});
test("trasmise -> trasmis", function() {deepEqual( Stem("trasmise"), "trasmis");});
test("trasmissiome -> trasmissiom", function() {deepEqual( Stem("trasmissiome"), "trasmissiom");});
test("trasmissione -> trasmission", function() {deepEqual( Stem("trasmissione"), "trasmission");});
test("trasmissioni -> trasmission", function() {deepEqual( Stem("trasmissioni"), "trasmission");});
test("traspare -> trasp", function() {deepEqual( Stem("traspare"), "trasp");});
test("trasparente -> trasparent", function() {deepEqual( Stem("trasparente"), "trasparent");});
test("trasparenti -> trasparent", function() {deepEqual( Stem("trasparenti"), "trasparent");});
test("trasparenza -> trasparent", function() {deepEqual( Stem("trasparenza"), "trasparent");});
test("trasparire -> traspar", function() {deepEqual( Stem("trasparire"), "traspar");});
test("traspariva -> traspar", function() {deepEqual( Stem("traspariva"), "traspar");});
test("trasparve -> trasparv", function() {deepEqual( Stem("trasparve"), "trasparv");});
test("traspirato -> traspir", function() {deepEqual( Stem("traspirato"), "traspir");});
test("trasporta -> trasport", function() {deepEqual( Stem("trasporta"), "trasport");});
test("trasportano -> trasport", function() {deepEqual( Stem("trasportano"), "trasport");});
test("trasportar -> trasport", function() {deepEqual( Stem("trasportar"), "trasport");});
test("trasportare -> trasport", function() {deepEqual( Stem("trasportare"), "trasport");});
test("trasportarsi -> trasport", function() {deepEqual( Stem("trasportarsi"), "trasport");});
test("trasportata -> trasport", function() {deepEqual( Stem("trasportata"), "trasport");});
test("trasportati -> trasport", function() {deepEqual( Stem("trasportati"), "trasport");});
test("trasportato -> trasport", function() {deepEqual( Stem("trasportato"), "trasport");});
test("trasporterà -> trasport", function() {deepEqual( Stem("trasporterà"), "trasport");});
test("trasporti -> trasport", function() {deepEqual( Stem("trasporti"), "trasport");});
test("trasportiamoci -> trasportiamoc", function() {deepEqual( Stem("trasportiamoci"), "trasportiamoc");});
test("trasportistico -> trasportist", function() {deepEqual( Stem("trasportistico"), "trasportist");});
test("trasporto -> trasport", function() {deepEqual( Stem("trasporto"), "trasport");});
test("trastullo -> trastull", function() {deepEqual( Stem("trastullo"), "trastull");});
test("tratta -> tratt", function() {deepEqual( Stem("tratta"), "tratt");});
test("trattabile -> trattabil", function() {deepEqual( Stem("trattabile"), "trattabil");});
test("trattabili -> trattabil", function() {deepEqual( Stem("trattabili"), "trattabil");});
test("trattamenti -> tratt", function() {deepEqual( Stem("trattamenti"), "tratt");});
test("trattamento -> tratt", function() {deepEqual( Stem("trattamento"), "tratt");});
test("trattandosi -> tratt", function() {deepEqual( Stem("trattandosi"), "tratt");});
test("trattano -> tratt", function() {deepEqual( Stem("trattano"), "tratt");});
test("trattar -> tratt", function() {deepEqual( Stem("trattar"), "tratt");});
test("trattare -> tratt", function() {deepEqual( Stem("trattare"), "tratt");});
test("trattarla -> tratt", function() {deepEqual( Stem("trattarla"), "tratt");});
test("trattarli -> tratt", function() {deepEqual( Stem("trattarli"), "tratt");});
test("trattarlo -> tratt", function() {deepEqual( Stem("trattarlo"), "tratt");});
test("trattarsi -> tratt", function() {deepEqual( Stem("trattarsi"), "tratt");});
test("trattarvi -> tratt", function() {deepEqual( Stem("trattarvi"), "tratt");});
test("trattasse -> tratt", function() {deepEqual( Stem("trattasse"), "tratt");});
test("trattata -> tratt", function() {deepEqual( Stem("trattata"), "tratt");});
test("trattate -> tratt", function() {deepEqual( Stem("trattate"), "tratt");});
test("trattati -> tratt", function() {deepEqual( Stem("trattati"), "tratt");});
test("trattativa -> trattat", function() {deepEqual( Stem("trattativa"), "trattat");});
test("trattative -> trattat", function() {deepEqual( Stem("trattative"), "trattat");});
test("trattato -> tratt", function() {deepEqual( Stem("trattato"), "tratt");});
test("trattava -> tratt", function() {deepEqual( Stem("trattava"), "tratt");});
test("trattavano -> tratt", function() {deepEqual( Stem("trattavano"), "tratt");});
test("tratte -> tratt", function() {deepEqual( Stem("tratte"), "tratt");});
test("trattenendole -> tratten", function() {deepEqual( Stem("trattenendole"), "tratten");});
test("trattener -> trattener", function() {deepEqual( Stem("trattener"), "trattener");});
test("trattenere -> tratten", function() {deepEqual( Stem("trattenere"), "tratten");});
test("trattenerla -> tratten", function() {deepEqual( Stem("trattenerla"), "tratten");});
test("trattenerle -> tratten", function() {deepEqual( Stem("trattenerle"), "tratten");});
test("trattenerlo -> tratten", function() {deepEqual( Stem("trattenerlo"), "tratten");});
test("trattenerne -> tratten", function() {deepEqual( Stem("trattenerne"), "tratten");});
test("trattenersi -> tratten", function() {deepEqual( Stem("trattenersi"), "tratten");});
test("trattenesse -> tratteness", function() {deepEqual( Stem("trattenesse"), "tratteness");});
test("trattenete -> tratten", function() {deepEqual( Stem("trattenete"), "tratten");});
test("tratteneva -> tratten", function() {deepEqual( Stem("tratteneva"), "tratten");});
test("trattenga -> tratteng", function() {deepEqual( Stem("trattenga"), "tratteng");});
test("trattenne -> trattenn", function() {deepEqual( Stem("trattenne"), "trattenn");});
test("trattenuta -> tratten", function() {deepEqual( Stem("trattenuta"), "tratten");});
test("trattenuti -> tratten", function() {deepEqual( Stem("trattenuti"), "tratten");});
test("trattenuto -> tratten", function() {deepEqual( Stem("trattenuto"), "tratten");});
test("tratterà -> tratt", function() {deepEqual( Stem("tratterà"), "tratt");});
test("tratterebbe -> tratt", function() {deepEqual( Stem("tratterebbe"), "tratt");});
test("tratti -> tratt", function() {deepEqual( Stem("tratti"), "tratt");});
test("trattiamo -> tratt", function() {deepEqual( Stem("trattiamo"), "tratt");});
test("trattiene -> trattien", function() {deepEqual( Stem("trattiene"), "trattien");});
test("tratto -> tratt", function() {deepEqual( Stem("tratto"), "tratt");});
test("trattò -> tratt", function() {deepEqual( Stem("trattò"), "tratt");});
test("traumi -> traum", function() {deepEqual( Stem("traumi"), "traum");});
test("travagli -> travagl", function() {deepEqual( Stem("travagli"), "travagl");});
test("travagliata -> travagl", function() {deepEqual( Stem("travagliata"), "travagl");});
test("travagliate -> travagl", function() {deepEqual( Stem("travagliate"), "travagl");});
test("travaglio -> travagl", function() {deepEqual( Stem("travaglio"), "travagl");});
test("trave -> trav", function() {deepEqual( Stem("trave"), "trav");});
test("travedente -> travedent", function() {deepEqual( Stem("travedente"), "travedent");});
test("travedere -> traved", function() {deepEqual( Stem("travedere"), "traved");});
test("traversa -> travers", function() {deepEqual( Stem("traversa"), "travers");});
test("traversando -> travers", function() {deepEqual( Stem("traversando"), "travers");});
test("traverse -> travers", function() {deepEqual( Stem("traverse"), "travers");});
test("traversìe -> traversì", function() {deepEqual( Stem("traversìe"), "traversì");});
test("traverso -> travers", function() {deepEqual( Stem("traverso"), "travers");});
test("traversone -> traverson", function() {deepEqual( Stem("traversone"), "traverson");});
test("traveste -> travest", function() {deepEqual( Stem("traveste"), "travest");});
test("travestimenti -> travest", function() {deepEqual( Stem("travestimenti"), "travest");});
test("travestito -> travest", function() {deepEqual( Stem("travestito"), "travest");});
test("travi -> trav", function() {deepEqual( Stem("travi"), "trav");});
test("traviati -> trav", function() {deepEqual( Stem("traviati"), "trav");});
test("travisamento -> travis", function() {deepEqual( Stem("travisamento"), "travis");});
test("travisarsi -> travis", function() {deepEqual( Stem("travisarsi"), "travis");});
test("travisati -> travis", function() {deepEqual( Stem("travisati"), "travis");});
test("travolta -> travolt", function() {deepEqual( Stem("travolta"), "travolt");});
test("travolti -> travolt", function() {deepEqual( Stem("travolti"), "travolt");});
test("tre -> tre", function() {deepEqual( Stem("tre"), "tre");});
test("trebenic -> trebenic", function() {deepEqual( Stem("trebenic"), "trebenic");});
test("trebevic -> trebevic", function() {deepEqual( Stem("trebevic"), "trebevic");});
test("trecce -> trecc", function() {deepEqual( Stem("trecce"), "trecc");});
test("treccia -> trecc", function() {deepEqual( Stem("treccia"), "trecc");});
test("trecento -> trecent", function() {deepEqual( Stem("trecento"), "trecent");});
test("tredicenne -> tredicenn", function() {deepEqual( Stem("tredicenne"), "tredicenn");});
test("tredicesimo -> tredicesim", function() {deepEqual( Stem("tredicesimo"), "tredicesim");});
test("tredici -> tredic", function() {deepEqual( Stem("tredici"), "tredic");});
test("tregua -> tregu", function() {deepEqual( Stem("tregua"), "tregu");});
test("trek -> trek", function() {deepEqual( Stem("trek"), "trek");});
test("trema -> trem", function() {deepEqual( Stem("trema"), "trem");});
test("tremaglia -> tremagl", function() {deepEqual( Stem("tremaglia"), "tremagl");});
test("tremando -> trem", function() {deepEqual( Stem("tremando"), "trem");});
test("tremante -> tremant", function() {deepEqual( Stem("tremante"), "tremant");});
test("tremanti -> tremant", function() {deepEqual( Stem("tremanti"), "tremant");});
test("tremar -> trem", function() {deepEqual( Stem("tremar"), "trem");});
test("tremare -> trem", function() {deepEqual( Stem("tremare"), "trem");});
test("tremava -> trem", function() {deepEqual( Stem("tremava"), "trem");});
test("tremenda -> trem", function() {deepEqual( Stem("tremenda"), "trem");});
test("tremendo -> trem", function() {deepEqual( Stem("tremendo"), "trem");});
test("tremila -> tremil", function() {deepEqual( Stem("tremila"), "tremil");});
test("tremito -> trem", function() {deepEqual( Stem("tremito"), "trem");});
test("tremò -> trem", function() {deepEqual( Stem("tremò"), "trem");});
test("tremola -> tremol", function() {deepEqual( Stem("tremola"), "tremol");});
test("tremolando -> tremol", function() {deepEqual( Stem("tremolando"), "tremol");});
test("tremolante -> tremol", function() {deepEqual( Stem("tremolante"), "tremol");});
test("tremolanti -> tremol", function() {deepEqual( Stem("tremolanti"), "tremol");});
test("tremolare -> tremol", function() {deepEqual( Stem("tremolare"), "tremol");});
test("tremolava -> tremol", function() {deepEqual( Stem("tremolava"), "tremol");});
test("tremonti -> tremont", function() {deepEqual( Stem("tremonti"), "tremont");});
test("tremula -> tremul", function() {deepEqual( Stem("tremula"), "tremul");});
test("trend -> trend", function() {deepEqual( Stem("trend"), "trend");});
test("treni -> tren", function() {deepEqual( Stem("treni"), "tren");});
test("trenno -> trenn", function() {deepEqual( Stem("trenno"), "trenn");});
test("treno -> tren", function() {deepEqual( Stem("treno"), "tren");});
test("trent -> trent", function() {deepEqual( Stem("trent"), "trent");});
test("trenta -> trent", function() {deepEqual( Stem("trenta"), "trent");});
test("trentacinque -> trentacinqu", function() {deepEqual( Stem("trentacinque"), "trentacinqu");});
test("trentacinquenne -> trentacinquenn", function() {deepEqual( Stem("trentacinquenne"), "trentacinquenn");});
test("trentadue -> trentadu", function() {deepEqual( Stem("trentadue"), "trentadu");});
test("trentalange -> trentalang", function() {deepEqual( Stem("trentalange"), "trentalang");});
test("trentamila -> trentamil", function() {deepEqual( Stem("trentamila"), "trentamil");});
test("trentatre -> trentatr", function() {deepEqual( Stem("trentatre"), "trentatr");});
test("trentennale -> trentennal", function() {deepEqual( Stem("trentennale"), "trentennal");});
test("trentesimo -> trentesim", function() {deepEqual( Stem("trentesimo"), "trentesim");});
test("trentina -> trentin", function() {deepEqual( Stem("trentina"), "trentin");});
test("trentino -> trentin", function() {deepEqual( Stem("trentino"), "trentin");});
test("trento -> trent", function() {deepEqual( Stem("trento"), "trent");});
test("treossi -> treoss", function() {deepEqual( Stem("treossi"), "treoss");});
test("tresigallo -> tresigall", function() {deepEqual( Stem("tresigallo"), "tresigall");});
test("treu -> treu", function() {deepEqual( Stem("treu"), "treu");});
test("treviso -> trevis", function() {deepEqual( Stem("treviso"), "trevis");});
test("trezza -> trezz", function() {deepEqual( Stem("trezza"), "trezz");});
test("trezze -> trezz", function() {deepEqual( Stem("trezze"), "trezz");});
test("trezzo -> trezz", function() {deepEqual( Stem("trezzo"), "trezz");});
test("triangolazione -> triangol", function() {deepEqual( Stem("triangolazione"), "triangol");});
test("triathlon -> triathlon", function() {deepEqual( Stem("triathlon"), "triathlon");});
test("tribale -> tribal", function() {deepEqual( Stem("tribale"), "tribal");});
test("tribolati -> tribol", function() {deepEqual( Stem("tribolati"), "tribol");});
test("tribolato -> tribol", function() {deepEqual( Stem("tribolato"), "tribol");});
test("tribolazione -> tribol", function() {deepEqual( Stem("tribolazione"), "tribol");});
test("tribolazioni -> tribol", function() {deepEqual( Stem("tribolazioni"), "tribol");});
test("tribù -> tribù", function() {deepEqual( Stem("tribù"), "tribù");});
test("tribuna -> tribun", function() {deepEqual( Stem("tribuna"), "tribun");});
test("tribunal -> tribunal", function() {deepEqual( Stem("tribunal"), "tribunal");});
test("tribunale -> tribunal", function() {deepEqual( Stem("tribunale"), "tribunal");});
test("tribunalè -> tribunal", function() {deepEqual( Stem("tribunalè"), "tribunal");});
test("tribunali -> tribunal", function() {deepEqual( Stem("tribunali"), "tribunal");});
test("tribune -> tribun", function() {deepEqual( Stem("tribune"), "tribun");});
test("tribunè -> tribun", function() {deepEqual( Stem("tribunè"), "tribun");});
test("tributano -> tribut", function() {deepEqual( Stem("tributano"), "tribut");});
test("tributari -> tributar", function() {deepEqual( Stem("tributari"), "tributar");});
test("tributaria -> tributar", function() {deepEqual( Stem("tributaria"), "tributar");});
test("tributarie -> tributar", function() {deepEqual( Stem("tributarie"), "tributar");});
test("tributarij -> tributarij", function() {deepEqual( Stem("tributarij"), "tributarij");});
test("tricarico -> tricar", function() {deepEqual( Stem("tricarico"), "tricar");});
test("tricolore -> tricolor", function() {deepEqual( Stem("tricolore"), "tricolor");});
test("tridente -> trident", function() {deepEqual( Stem("tridente"), "trident");});
test("triennale -> triennal", function() {deepEqual( Stem("triennale"), "triennal");});
test("triennio -> trienn", function() {deepEqual( Stem("triennio"), "trienn");});
test("trieste -> triest", function() {deepEqual( Stem("trieste"), "triest");});
test("triestina -> triestin", function() {deepEqual( Stem("triestina"), "triestin");});
test("triestini -> triestin", function() {deepEqual( Stem("triestini"), "triestin");});
test("triestino -> triestin", function() {deepEqual( Stem("triestino"), "triestin");});
test("trigoso -> trigos", function() {deepEqual( Stem("trigoso"), "trigos");});
test("trilingue -> trilingu", function() {deepEqual( Stem("trilingue"), "trilingu");});
test("trill -> trill", function() {deepEqual( Stem("trill"), "trill");});
test("trimestrali -> trimestral", function() {deepEqual( Stem("trimestrali"), "trimestral");});
test("trimestre -> trimestr", function() {deepEqual( Stem("trimestre"), "trimestr");});
test("trincando -> trinc", function() {deepEqual( Stem("trincando"), "trinc");});
test("trincare -> trinc", function() {deepEqual( Stem("trincare"), "trinc");});
test("trincea -> trince", function() {deepEqual( Stem("trincea"), "trince");});
test("trincerandosi -> trincer", function() {deepEqual( Stem("trincerandosi"), "trincer");});
test("trincerarsi -> trincer", function() {deepEqual( Stem("trincerarsi"), "trincer");});
test("trincerati -> trincer", function() {deepEqual( Stem("trincerati"), "trincer");});
test("trinchera -> trincher", function() {deepEqual( Stem("trinchera"), "trincher");});
test("trinciando -> trinc", function() {deepEqual( Stem("trinciando"), "trinc");});
test("trinidad -> trinidad", function() {deepEqual( Stem("trinidad"), "trinidad");});
test("trionfale -> trionfal", function() {deepEqual( Stem("trionfale"), "trionfal");});
test("trionfali -> trionfal", function() {deepEqual( Stem("trionfali"), "trionfal");});
test("trionfante -> trionfant", function() {deepEqual( Stem("trionfante"), "trionfant");});
test("trionfare -> trionf", function() {deepEqual( Stem("trionfare"), "trionf");});
test("trionfarne -> trionf", function() {deepEqual( Stem("trionfarne"), "trionf");});
test("trionfatore -> trionfator", function() {deepEqual( Stem("trionfatore"), "trionfator");});
test("trionfo -> trionf", function() {deepEqual( Stem("trionfo"), "trionf");});
test("trionfò -> trionf", function() {deepEqual( Stem("trionfò"), "trionf");});
test("tripcovich -> tripcovic", function() {deepEqual( Stem("tripcovich"), "tripcovic");});
test("triplicato -> triplic", function() {deepEqual( Stem("triplicato"), "triplic");});
test("tripnavi -> tripn", function() {deepEqual( Stem("tripnavi"), "tripn");});
test("tripoli -> tripol", function() {deepEqual( Stem("tripoli"), "tripol");});
test("tripudio -> tripud", function() {deepEqual( Stem("tripudio"), "tripud");});
test("trirak -> trirak", function() {deepEqual( Stem("trirak"), "trirak");});
test("trista -> trist", function() {deepEqual( Stem("trista"), "trist");});
test("tristamente -> trist", function() {deepEqual( Stem("tristamente"), "trist");});
test("triste -> trist", function() {deepEqual( Stem("triste"), "trist");});
test("tristezza -> tristezz", function() {deepEqual( Stem("tristezza"), "tristezz");});
test("tristi -> trist", function() {deepEqual( Stem("tristi"), "trist");});
test("tristissima -> tristissim", function() {deepEqual( Stem("tristissima"), "tristissim");});
test("tristo -> trist", function() {deepEqual( Stem("tristo"), "trist");});
test("trita -> trit", function() {deepEqual( Stem("trita"), "trit");});
test("tritticò -> trittic", function() {deepEqual( Stem("tritticò"), "trittic");});
test("trocker -> trocker", function() {deepEqual( Stem("trocker"), "trocker");});
test("trofeo -> trofe", function() {deepEqual( Stem("trofeo"), "trofe");});
test("troffa -> troff", function() {deepEqual( Stem("troffa"), "troff");});
test("trofino -> trofin", function() {deepEqual( Stem("trofino"), "trofin");});
test("troi -> tro", function() {deepEqual( Stem("troi"), "tro");});
test("troika -> troik", function() {deepEqual( Stem("troika"), "troik");});
test("troikà -> troik", function() {deepEqual( Stem("troikà"), "troik");});
test("tromba -> tromb", function() {deepEqual( Stem("tromba"), "tromb");});
test("trombe -> tromb", function() {deepEqual( Stem("trombe"), "tromb");});
test("trombettare -> trombett", function() {deepEqual( Stem("trombettare"), "trombett");});
test("trombetti -> trombett", function() {deepEqual( Stem("trombetti"), "trombett");});
test("tromboni -> trombon", function() {deepEqual( Stem("tromboni"), "trombon");});
test("tronca -> tronc", function() {deepEqual( Stem("tronca"), "tronc");});
test("troncando -> tronc", function() {deepEqual( Stem("troncando"), "tronc");});
test("troncar -> tronc", function() {deepEqual( Stem("troncar"), "tronc");});
test("troncare -> tronc", function() {deepEqual( Stem("troncare"), "tronc");});
test("troncata -> tronc", function() {deepEqual( Stem("troncata"), "tronc");});
test("troncate -> tronc", function() {deepEqual( Stem("troncate"), "tronc");});
test("troncato -> tronc", function() {deepEqual( Stem("troncato"), "tronc");});
test("troncatura -> troncatur", function() {deepEqual( Stem("troncatura"), "troncatur");});
test("tronche -> tronc", function() {deepEqual( Stem("tronche"), "tronc");});
test("troncherebbe -> tronc", function() {deepEqual( Stem("troncherebbe"), "tronc");});
test("tronchi -> tronc", function() {deepEqual( Stem("tronchi"), "tronc");});
test("tronchiamo -> tronc", function() {deepEqual( Stem("tronchiamo"), "tronc");});
test("tronco -> tronc", function() {deepEqual( Stem("tronco"), "tronc");});
test("troncò -> tronc", function() {deepEqual( Stem("troncò"), "tronc");});
test("troneggiava -> tronegg", function() {deepEqual( Stem("troneggiava"), "tronegg");});
test("tropeano -> trop", function() {deepEqual( Stem("tropeano"), "trop");});
test("trophy -> trophy", function() {deepEqual( Stem("trophy"), "trophy");});
test("tropicali -> tropical", function() {deepEqual( Stem("tropicali"), "tropical");});
test("troppa -> tropp", function() {deepEqual( Stem("troppa"), "tropp");});
test("troppe -> tropp", function() {deepEqual( Stem("troppe"), "tropp");});
test("troppi -> tropp", function() {deepEqual( Stem("troppi"), "tropp");});
test("troppo -> tropp", function() {deepEqual( Stem("troppo"), "tropp");});
test("trotta -> trott", function() {deepEqual( Stem("trotta"), "trott");});
test("trottare -> trott", function() {deepEqual( Stem("trottare"), "trott");});
test("trottata -> trott", function() {deepEqual( Stem("trottata"), "trott");});
test("trottava -> trott", function() {deepEqual( Stem("trottava"), "trott");});
test("trotter -> trotter", function() {deepEqual( Stem("trotter"), "trotter");});
test("trotto -> trott", function() {deepEqual( Stem("trotto"), "trott");});
test("trottò -> trott", function() {deepEqual( Stem("trottò"), "trott");});
test("trouar -> trou", function() {deepEqual( Stem("trouar"), "trou");});
test("trouaua -> trouau", function() {deepEqual( Stem("trouaua"), "trouau");});
test("trouauano -> trouau", function() {deepEqual( Stem("trouauano"), "trouau");});
test("troupe -> troup", function() {deepEqual( Stem("troupe"), "troup");});
test("troupes -> troupes", function() {deepEqual( Stem("troupes"), "troupes");});
test("trova -> trov", function() {deepEqual( Stem("trova"), "trov");});
test("trovale -> troval", function() {deepEqual( Stem("trovale"), "troval");});
test("trovan -> trovan", function() {deepEqual( Stem("trovan"), "trovan");});
test("trovando -> trov", function() {deepEqual( Stem("trovando"), "trov");});
test("trovandolo -> trov", function() {deepEqual( Stem("trovandolo"), "trov");});
test("trovandosene -> trov", function() {deepEqual( Stem("trovandosene"), "trov");});
test("trovandosi -> trov", function() {deepEqual( Stem("trovandosi"), "trov");});
test("trovano -> trov", function() {deepEqual( Stem("trovano"), "trov");});
test("trovar -> trov", function() {deepEqual( Stem("trovar"), "trov");});
test("trovarcela -> trov", function() {deepEqual( Stem("trovarcela"), "trov");});
test("trovarci -> trov", function() {deepEqual( Stem("trovarci"), "trov");});
test("trovarcisi -> trovarcis", function() {deepEqual( Stem("trovarcisi"), "trovarcis");});
test("trovare -> trov", function() {deepEqual( Stem("trovare"), "trov");});
test("trovarla -> trov", function() {deepEqual( Stem("trovarla"), "trov");});
test("trovarle -> trov", function() {deepEqual( Stem("trovarle"), "trov");});
test("trovarli -> trov", function() {deepEqual( Stem("trovarli"), "trov");});
test("trovarmi -> trov", function() {deepEqual( Stem("trovarmi"), "trov");});
test("trovarne -> trov", function() {deepEqual( Stem("trovarne"), "trov");});
test("trovaron -> trovaron", function() {deepEqual( Stem("trovaron"), "trovaron");});
test("trovarono -> trov", function() {deepEqual( Stem("trovarono"), "trov");});
test("trovarsela -> trovarsel", function() {deepEqual( Stem("trovarsela"), "trovarsel");});
test("trovarsi -> trov", function() {deepEqual( Stem("trovarsi"), "trov");});
test("trovarvi -> trov", function() {deepEqual( Stem("trovarvi"), "trov");});
test("trovasse -> trov", function() {deepEqual( Stem("trovasse"), "trov");});
test("trovasser -> trovasser", function() {deepEqual( Stem("trovasser"), "trovasser");});
test("trovassero -> trov", function() {deepEqual( Stem("trovassero"), "trov");});
test("trovassi -> trov", function() {deepEqual( Stem("trovassi"), "trov");});
test("trovata -> trov", function() {deepEqual( Stem("trovata"), "trov");});
test("trovate -> trov", function() {deepEqual( Stem("trovate"), "trov");});
test("trovati -> trov", function() {deepEqual( Stem("trovati"), "trov");});
test("trovato -> trov", function() {deepEqual( Stem("trovato"), "trov");});
test("trovatolo -> trovatol", function() {deepEqual( Stem("trovatolo"), "trovatol");});
test("trovava -> trov", function() {deepEqual( Stem("trovava"), "trov");});
test("trovavan -> trovavan", function() {deepEqual( Stem("trovavan"), "trovavan");});
test("trovavano -> trov", function() {deepEqual( Stem("trovavano"), "trov");});
test("trovavo -> trov", function() {deepEqual( Stem("trovavo"), "trov");});
test("troverà -> trov", function() {deepEqual( Stem("troverà"), "trov");});
test("troverai -> trov", function() {deepEqual( Stem("troverai"), "trov");});
test("troveranno -> trov", function() {deepEqual( Stem("troveranno"), "trov");});
test("troverebbe -> trov", function() {deepEqual( Stem("troverebbe"), "trov");});
test("troverebbero -> trov", function() {deepEqual( Stem("troverebbero"), "trov");});
test("troverei -> trov", function() {deepEqual( Stem("troverei"), "trov");});
test("troveremo -> trov", function() {deepEqual( Stem("troveremo"), "trov");});
test("troverete -> trov", function() {deepEqual( Stem("troverete"), "trov");});
test("troverò -> trov", function() {deepEqual( Stem("troverò"), "trov");});
test("trovi -> trov", function() {deepEqual( Stem("trovi"), "trov");});
test("troviamo -> trov", function() {deepEqual( Stem("troviamo"), "trov");});
test("trovino -> trovin", function() {deepEqual( Stem("trovino"), "trovin");});
test("trovo -> trov", function() {deepEqual( Stem("trovo"), "trov");});
test("trovò -> trov", function() {deepEqual( Stem("trovò"), "trov");});
test("troy -> troy", function() {deepEqual( Stem("troy"), "troy");});
test("trucidare -> trucid", function() {deepEqual( Stem("trucidare"), "trucid");});
test("trudell -> trudell", function() {deepEqual( Stem("trudell"), "trudell");});
test("truffa -> truff", function() {deepEqual( Stem("truffa"), "truff");});
test("truffe -> truff", function() {deepEqual( Stem("truffe"), "truff");});
test("trufferia -> truffer", function() {deepEqual( Stem("trufferia"), "truffer");});
test("truiden -> truiden", function() {deepEqual( Stem("truiden"), "truiden");});
test("trujilo -> trujil", function() {deepEqual( Stem("trujilo"), "trujil");});
test("trujllo -> trujll", function() {deepEqual( Stem("trujllo"), "trujll");});
test("truppa -> trupp", function() {deepEqual( Stem("truppa"), "trupp");});
test("truppe -> trupp", function() {deepEqual( Stem("truppe"), "trupp");});
test("tu -> tu", function() {deepEqual( Stem("tu"), "tu");});
test("tua -> tua", function() {deepEqual( Stem("tua"), "tua");});
test("tubazioni -> tubazion", function() {deepEqual( Stem("tubazioni"), "tubazion");});
test("tubetti -> tubett", function() {deepEqual( Stem("tubetti"), "tubett");});
test("tubettificio -> tubettific", function() {deepEqual( Stem("tubettificio"), "tubettific");});
test("tubi -> tub", function() {deepEqual( Stem("tubi"), "tub");});
test("tuccillo -> tuccill", function() {deepEqual( Stem("tuccillo"), "tuccill");});
test("tudisco -> tud", function() {deepEqual( Stem("tudisco"), "tud");});
test("tudjman -> tudjman", function() {deepEqual( Stem("tudjman"), "tudjman");});
test("tue -> tue", function() {deepEqual( Stem("tue"), "tue");});
test("tuffo -> tuff", function() {deepEqual( Stem("tuffo"), "tuff");});
test("tuguri -> tugur", function() {deepEqual( Stem("tuguri"), "tugur");});
test("tulipano -> tulip", function() {deepEqual( Stem("tulipano"), "tulip");});
test("tullia -> tull", function() {deepEqual( Stem("tullia"), "tull");});
test("tullio -> tull", function() {deepEqual( Stem("tullio"), "tull");});
test("tumulti -> tumult", function() {deepEqual( Stem("tumulti"), "tumult");});
test("tumulto -> tumult", function() {deepEqual( Stem("tumulto"), "tumult");});
test("tumultuaria -> tumultuar", function() {deepEqual( Stem("tumultuaria"), "tumultuar");});
test("tumultuariamente -> tumultuar", function() {deepEqual( Stem("tumultuariamente"), "tumultuar");});
test("tumultuosa -> tumultu", function() {deepEqual( Stem("tumultuosa"), "tumultu");});
test("tumultuose -> tumultu", function() {deepEqual( Stem("tumultuose"), "tumultu");});
test("tumultuosi -> tumultu", function() {deepEqual( Stem("tumultuosi"), "tumultu");});
test("tumultuoso -> tumultu", function() {deepEqual( Stem("tumultuoso"), "tumultu");});
test("tunisi -> tunis", function() {deepEqual( Stem("tunisi"), "tunis");});
test("tunisia -> tunis", function() {deepEqual( Stem("tunisia"), "tunis");});
test("tunnel -> tunnel", function() {deepEqual( Stem("tunnel"), "tunnel");});
test("tuo -> tuo", function() {deepEqual( Stem("tuo"), "tuo");});
test("tuoi -> tuo", function() {deepEqual( Stem("tuoi"), "tuo");});
test("tuona -> tuon", function() {deepEqual( Stem("tuona"), "tuon");});
test("tuonato -> tuon", function() {deepEqual( Stem("tuonato"), "tuon");});
test("tuoni -> tuon", function() {deepEqual( Stem("tuoni"), "tuon");});
test("tuono -> tuon", function() {deepEqual( Stem("tuono"), "tuon");});
test("tupac -> tupac", function() {deepEqual( Stem("tupac"), "tupac");});
test("turarsene -> tur", function() {deepEqual( Stem("turarsene"), "tur");});
test("turava -> tur", function() {deepEqual( Stem("turava"), "tur");});
test("turba -> turb", function() {deepEqual( Stem("turba"), "turb");});
test("turbamento -> turb", function() {deepEqual( Stem("turbamento"), "turb");});
test("turbarle -> turb", function() {deepEqual( Stem("turbarle"), "turb");});
test("turbativa -> turbat", function() {deepEqual( Stem("turbativa"), "turbat");});
test("turbato -> turb", function() {deepEqual( Stem("turbato"), "turb");});
test("turbavan -> turbavan", function() {deepEqual( Stem("turbavan"), "turbavan");});
test("turbercolosi -> turbercol", function() {deepEqual( Stem("turbercolosi"), "turbercol");});
test("turbine -> turbin", function() {deepEqual( Stem("turbine"), "turbin");});
test("turbolente -> turbolent", function() {deepEqual( Stem("turbolente"), "turbolent");});
test("turca -> turc", function() {deepEqual( Stem("turca"), "turc");});
test("turchia -> turc", function() {deepEqual( Stem("turchia"), "turc");});
test("turci -> turc", function() {deepEqual( Stem("turci"), "turc");});
test("turcimanno -> turcimann", function() {deepEqual( Stem("turcimanno"), "turcimann");});
test("turco -> turc", function() {deepEqual( Stem("turco"), "turc");});
test("turetta -> turett", function() {deepEqual( Stem("turetta"), "turett");});
test("turismo -> turism", function() {deepEqual( Stem("turismo"), "turism");});
test("turisti -> turist", function() {deepEqual( Stem("turisti"), "turist");});
test("turistica -> turist", function() {deepEqual( Stem("turistica"), "turist");});
test("turistiche -> turist", function() {deepEqual( Stem("turistiche"), "turist");});
test("turistico -> turist", function() {deepEqual( Stem("turistico"), "turist");});
test("turkmenistan -> turkmenistan", function() {deepEqual( Stem("turkmenistan"), "turkmenistan");});
test("turno -> turn", function() {deepEqual( Stem("turno"), "turn");});
test("turpe -> turp", function() {deepEqual( Stem("turpe"), "turp");});
test("turrini -> turrin", function() {deepEqual( Stem("turrini"), "turrin");});
test("turris -> turris", function() {deepEqual( Stem("turris"), "turris");});
test("tutankamen -> tutankamen", function() {deepEqual( Stem("tutankamen"), "tutankamen");});
test("tutela -> tutel", function() {deepEqual( Stem("tutela"), "tutel");});
test("tutelano -> tutel", function() {deepEqual( Stem("tutelano"), "tutel");});
test("tutelare -> tutel", function() {deepEqual( Stem("tutelare"), "tutel");});
test("tutrici -> tutric", function() {deepEqual( Stem("tutrici"), "tutric");});
test("tutt -> tutt", function() {deepEqual( Stem("tutt"), "tutt");});
test("tutta -> tutt", function() {deepEqual( Stem("tutta"), "tutt");});
test("tuttalpiù -> tuttalpiù", function() {deepEqual( Stem("tuttalpiù"), "tuttalpiù");});
test("tuttavia -> tuttav", function() {deepEqual( Stem("tuttavia"), "tuttav");});
test("tutte -> tutt", function() {deepEqual( Stem("tutte"), "tutt");});
test("tutti -> tutt", function() {deepEqual( Stem("tutti"), "tutt");});
test("tutto -> tutt", function() {deepEqual( Stem("tutto"), "tutt");});
test("tuttobasket -> tuttobasket", function() {deepEqual( Stem("tuttobasket"), "tuttobasket");});
test("tuttora -> tuttor", function() {deepEqual( Stem("tuttora"), "tuttor");});
test("tuxla -> tuxl", function() {deepEqual( Stem("tuxla"), "tuxl");});
test("tuzco -> tuzc", function() {deepEqual( Stem("tuzco"), "tuzc");});
test("tuzzi -> tuzz", function() {deepEqual( Stem("tuzzi"), "tuzz");});
test("tv -> tv", function() {deepEqual( Stem("tv"), "tv");});
test("tvm -> tvm", function() {deepEqual( Stem("tvm"), "tvm");});
test("tvmovie -> tvmov", function() {deepEqual( Stem("tvmovie"), "tvmov");});
test("tyldum -> tyldum", function() {deepEqual( Stem("tyldum"), "tyldum");});
test("tzeltal -> tzeltal", function() {deepEqual( Stem("tzeltal"), "tzeltal");});
test("tzeltales -> tzeltales", function() {deepEqual( Stem("tzeltales"), "tzeltales");});
test("tzotzil -> tzotzil", function() {deepEqual( Stem("tzotzil"), "tzotzil");});
test("u -> u", function() {deepEqual( Stem("u"), "u");});
test("uan -> uan", function() {deepEqual( Stem("uan"), "uan");});
test("ubaldo -> ubald", function() {deepEqual( Stem("ubaldo"), "ubald");});
test("ubbidì -> ubbid", function() {deepEqual( Stem("ubbidì"), "ubbid");});
test("ubbidiente -> ubbidient", function() {deepEqual( Stem("ubbidiente"), "ubbidient");});
test("ubbidienti -> ubbidient", function() {deepEqual( Stem("ubbidienti"), "ubbidient");});
test("ubbidienza -> ubbidient", function() {deepEqual( Stem("ubbidienza"), "ubbidient");});
test("ubbidir -> ubbid", function() {deepEqual( Stem("ubbidir"), "ubbid");});
test("ubbidirà -> ubbid", function() {deepEqual( Stem("ubbidirà"), "ubbid");});
test("ubbidire -> ubbid", function() {deepEqual( Stem("ubbidire"), "ubbid");});
test("ubbidirla -> ubbid", function() {deepEqual( Stem("ubbidirla"), "ubbid");});
test("ubbidirli -> ubbid", function() {deepEqual( Stem("ubbidirli"), "ubbid");});
test("ubbidisca -> ubbid", function() {deepEqual( Stem("ubbidisca"), "ubbid");});
test("ubbidisce -> ubbid", function() {deepEqual( Stem("ubbidisce"), "ubbid");});
test("ubbidita -> ubbid", function() {deepEqual( Stem("ubbidita"), "ubbid");});
test("ubbidito -> ubbid", function() {deepEqual( Stem("ubbidito"), "ubbid");});
test("ubbidiva -> ubbid", function() {deepEqual( Stem("ubbidiva"), "ubbid");});
test("ubbie -> ubbi", function() {deepEqual( Stem("ubbie"), "ubbi");});
test("ubiquita -> ubiqu", function() {deepEqual( Stem("ubiquita"), "ubiqu");});
test("ubiquità -> ubiqu", function() {deepEqual( Stem("ubiquità"), "ubiqu");});
test("ubit -> ubit", function() {deepEqual( Stem("ubit"), "ubit");});
test("ubriacatura -> ubriacatur", function() {deepEqual( Stem("ubriacatura"), "ubriacatur");});
test("uccel -> uccel", function() {deepEqual( Stem("uccel"), "uccel");});
test("uccellacci -> uccellacc", function() {deepEqual( Stem("uccellacci"), "uccellacc");});
test("uccelli -> uccell", function() {deepEqual( Stem("uccelli"), "uccell");});
test("uccello -> uccell", function() {deepEqual( Stem("uccello"), "uccell");});
test("uccide -> uccid", function() {deepEqual( Stem("uccide"), "uccid");});
test("uccidendo -> uccid", function() {deepEqual( Stem("uccidendo"), "uccid");});
test("uccidendolo -> uccid", function() {deepEqual( Stem("uccidendolo"), "uccid");});
test("uccidere -> uccid", function() {deepEqual( Stem("uccidere"), "uccid");});
test("ucciderla -> uccid", function() {deepEqual( Stem("ucciderla"), "uccid");});
test("ucciderlo -> uccid", function() {deepEqual( Stem("ucciderlo"), "uccid");});
test("uccisa -> uccis", function() {deepEqual( Stem("uccisa"), "uccis");});
test("uccise -> uccis", function() {deepEqual( Stem("uccise"), "uccis");});
test("uccisi -> uccis", function() {deepEqual( Stem("uccisi"), "uccis");});
test("uccisione -> uccision", function() {deepEqual( Stem("uccisione"), "uccision");});
test("uccisionè -> uccision", function() {deepEqual( Stem("uccisionè"), "uccision");});
test("ucciso -> uccis", function() {deepEqual( Stem("ucciso"), "uccis");});
test("uccisor -> uccisor", function() {deepEqual( Stem("uccisor"), "uccisor");});
test("uccisore -> uccisor", function() {deepEqual( Stem("uccisore"), "uccisor");});
test("ucn -> ucn", function() {deepEqual( Stem("ucn"), "ucn");});
test("ucraina -> ucrain", function() {deepEqual( Stem("ucraina"), "ucrain");});
test("ucraino -> ucrain", function() {deepEqual( Stem("ucraino"), "ucrain");});
test("udc -> udc", function() {deepEqual( Stem("udc"), "udc");});
test("udenti -> udent", function() {deepEqual( Stem("udenti"), "udent");});
test("udf -> udf", function() {deepEqual( Stem("udf"), "udf");});
test("udì -> udì", function() {deepEqual( Stem("udì"), "udì");});
test("udienza -> udienz", function() {deepEqual( Stem("udienza"), "udienz");});
test("udienze -> udienz", function() {deepEqual( Stem("udienze"), "udienz");});
test("udine -> udin", function() {deepEqual( Stem("udine"), "udin");});
test("udinese -> udines", function() {deepEqual( Stem("udinese"), "udines");});
test("udir -> udir", function() {deepEqual( Stem("udir"), "udir");});
test("udito -> udit", function() {deepEqual( Stem("udito"), "udit");});
test("uditori -> uditor", function() {deepEqual( Stem("uditori"), "uditor");});
test("uditorio -> uditor", function() {deepEqual( Stem("uditorio"), "uditor");});
test("udiva -> udiv", function() {deepEqual( Stem("udiva"), "udiv");});
test("udivan -> udivan", function() {deepEqual( Stem("udivan"), "udivan");});
test("udo -> udo", function() {deepEqual( Stem("udo"), "udo");});
test("udugov -> udugov", function() {deepEqual( Stem("udugov"), "udugov");});
test("ue -> ue", function() {deepEqual( Stem("ue"), "ue");});
test("uefa -> uef", function() {deepEqual( Stem("uefa"), "uef");});
test("ueo -> ueo", function() {deepEqual( Stem("ueo"), "ueo");});
test("uero -> uer", function() {deepEqual( Stem("uero"), "uer");});
test("ufficetto -> ufficett", function() {deepEqual( Stem("ufficetto"), "ufficett");});
test("uffici -> uffic", function() {deepEqual( Stem("uffici"), "uffic");});
test("ufficiale -> ufficial", function() {deepEqual( Stem("ufficiale"), "ufficial");});
test("ufficiali -> ufficial", function() {deepEqual( Stem("ufficiali"), "ufficial");});
test("ufficializzare -> ufficializz", function() {deepEqual( Stem("ufficializzare"), "ufficializz");});
test("ufficializzata -> ufficializz", function() {deepEqual( Stem("ufficializzata"), "ufficializz");});
test("ufficializzazione -> ufficializz", function() {deepEqual( Stem("ufficializzazione"), "ufficializz");});
test("ufficialmente -> ufficial", function() {deepEqual( Stem("ufficialmente"), "ufficial");});
test("ufficilizzate -> ufficilizz", function() {deepEqual( Stem("ufficilizzate"), "ufficilizz");});
test("ufficio -> uffic", function() {deepEqual( Stem("ufficio"), "uffic");});
test("ufficiosamente -> uffic", function() {deepEqual( Stem("ufficiosamente"), "uffic");});
test("uficio -> ufic", function() {deepEqual( Stem("uficio"), "ufic");});
test("ufizi -> ufiz", function() {deepEqual( Stem("ufizi"), "ufiz");});
test("ufiziale -> ufizial", function() {deepEqual( Stem("ufiziale"), "ufizial");});
test("ufiziali -> ufizial", function() {deepEqual( Stem("ufiziali"), "ufizial");});
test("ufizio -> ufiz", function() {deepEqual( Stem("ufizio"), "ufiz");});
test("ufo -> ufo", function() {deepEqual( Stem("ufo"), "ufo");});
test("uganda -> ugand", function() {deepEqual( Stem("uganda"), "ugand");});
test("uggia -> uggi", function() {deepEqual( Stem("uggia"), "uggi");});
test("uggiosa -> uggios", function() {deepEqual( Stem("uggiosa"), "uggios");});
test("uggioso -> uggios", function() {deepEqual( Stem("uggioso"), "uggios");});
test("ugo -> ugo", function() {deepEqual( Stem("ugo"), "ugo");});
test("ugolini -> ugolin", function() {deepEqual( Stem("ugolini"), "ugolin");});
test("uguagliano -> uguagl", function() {deepEqual( Stem("uguagliano"), "uguagl");});
test("uguaglianza -> uguagl", function() {deepEqual( Stem("uguaglianza"), "uguagl");});
test("uguagliare -> uguagl", function() {deepEqual( Stem("uguagliare"), "uguagl");});
test("ugual -> ugual", function() {deepEqual( Stem("ugual"), "ugual");});
test("uguale -> ugual", function() {deepEqual( Stem("uguale"), "ugual");});
test("uguali -> ugual", function() {deepEqual( Stem("uguali"), "ugual");});
test("ugualmente -> ugual", function() {deepEqual( Stem("ugualmente"), "ugual");});
test("uh -> uh", function() {deepEqual( Stem("uh"), "uh");});
test("uias -> uias", function() {deepEqual( Stem("uias"), "uias");});
test("uil -> uil", function() {deepEqual( Stem("uil"), "uil");});
test("uilm -> uilm", function() {deepEqual( Stem("uilm"), "uilm");});
test("uiltrasporti -> uiltrasport", function() {deepEqual( Stem("uiltrasporti"), "uiltrasport");});
test("ulcera -> ulcer", function() {deepEqual( Stem("ulcera"), "ulcer");});
test("ulteriore -> ulterior", function() {deepEqual( Stem("ulteriore"), "ulterior");});
test("ulteriori -> ulterior", function() {deepEqual( Stem("ulteriori"), "ulterior");});
test("ulteriormente -> ulterior", function() {deepEqual( Stem("ulteriormente"), "ulterior");});
test("ultim -> ultim", function() {deepEqual( Stem("ultim"), "ultim");});
test("ultima -> ultim", function() {deepEqual( Stem("ultima"), "ultim");});
test("ultimamente -> ultim", function() {deepEqual( Stem("ultimamente"), "ultim");});
test("ultimativa -> ultim", function() {deepEqual( Stem("ultimativa"), "ultim");});
test("ultime -> ultim", function() {deepEqual( Stem("ultime"), "ultim");});
test("ultimi -> ultim", function() {deepEqual( Stem("ultimi"), "ultim");});
test("ultimo -> ultim", function() {deepEqual( Stem("ultimo"), "ultim");});
test("ultrà -> ultrà", function() {deepEqual( Stem("ultrà"), "ultrà");});
test("ultranazionalista -> ultranazional", function() {deepEqual( Stem("ultranazionalista"), "ultranazional");});
test("ultranovanmtenne -> ultranovanmtenn", function() {deepEqual( Stem("ultranovanmtenne"), "ultranovanmtenn");});
test("ultras -> ultras", function() {deepEqual( Stem("ultras"), "ultras");});
test("umana -> uman", function() {deepEqual( Stem("umana"), "uman");});
test("umanamente -> uman", function() {deepEqual( Stem("umanamente"), "uman");});
test("umane -> uman", function() {deepEqual( Stem("umane"), "uman");});
test("umani -> uman", function() {deepEqual( Stem("umani"), "uman");});
test("umanità -> uman", function() {deepEqual( Stem("umanità"), "uman");});
test("umanitari -> umanitar", function() {deepEqual( Stem("umanitari"), "umanitar");});
test("umanitaria -> umanitar", function() {deepEqual( Stem("umanitaria"), "umanitar");});
test("umanitarià -> umanitar", function() {deepEqual( Stem("umanitarià"), "umanitar");});
test("umanitarie -> umanitar", function() {deepEqual( Stem("umanitarie"), "umanitar");});
test("umanitario -> umanitar", function() {deepEqual( Stem("umanitario"), "umanitar");});
test("umano -> uman", function() {deepEqual( Stem("umano"), "uman");});
test("umar -> umar", function() {deepEqual( Stem("umar"), "umar");});
test("umberto -> umbert", function() {deepEqual( Stem("umberto"), "umbert");});
test("umbra -> umbra", function() {deepEqual( Stem("umbra"), "umbra");});
test("umbri -> umbri", function() {deepEqual( Stem("umbri"), "umbri");});
test("umbria -> umbri", function() {deepEqual( Stem("umbria"), "umbri");});
test("ume -> ume", function() {deepEqual( Stem("ume"), "ume");});
test("umida -> umid", function() {deepEqual( Stem("umida"), "umid");});
test("umidità -> umid", function() {deepEqual( Stem("umidità"), "umid");});
test("umido -> umid", function() {deepEqual( Stem("umido"), "umid");});
test("umile -> umil", function() {deepEqual( Stem("umile"), "umil");});
test("umili -> umil", function() {deepEqual( Stem("umili"), "umil");});
test("umiliante -> umil", function() {deepEqual( Stem("umiliante"), "umil");});
test("umiliare -> umil", function() {deepEqual( Stem("umiliare"), "umil");});
test("umiliata -> umil", function() {deepEqual( Stem("umiliata"), "umil");});
test("umiliati -> umil", function() {deepEqual( Stem("umiliati"), "umil");});
test("umiliato -> umil", function() {deepEqual( Stem("umiliato"), "umil");});
test("umiliazione -> umil", function() {deepEqual( Stem("umiliazione"), "umil");});
test("umiliazioni -> umil", function() {deepEqual( Stem("umiliazioni"), "umil");});
test("umilmente -> umil", function() {deepEqual( Stem("umilmente"), "umil");});
test("umiltà -> umilt", function() {deepEqual( Stem("umiltà"), "umilt");});
test("umore -> umor", function() {deepEqual( Stem("umore"), "umor");});
test("umori -> umor", function() {deepEqual( Stem("umori"), "umor");});
test("umorismo -> umor", function() {deepEqual( Stem("umorismo"), "umor");});
test("umorista -> umor", function() {deepEqual( Stem("umorista"), "umor");});
test("un -> un", function() {deepEqual( Stem("un"), "un");});
test("una -> una", function() {deepEqual( Stem("una"), "una");});
test("unanime -> unanim", function() {deepEqual( Stem("unanime"), "unanim");});
test("unanimismo -> unanim", function() {deepEqual( Stem("unanimismo"), "unanim");});
test("unanimità -> unanim", function() {deepEqual( Stem("unanimità"), "unanim");});
test("unasca -> unasc", function() {deepEqual( Stem("unasca"), "unasc");});
test("uncinate -> uncin", function() {deepEqual( Stem("uncinate"), "uncin");});
test("unctores -> unctores", function() {deepEqual( Stem("unctores"), "unctores");});
test("undecimo -> undecim", function() {deepEqual( Stem("undecimo"), "undecim");});
test("under -> under", function() {deepEqual( Stem("under"), "under");});
test("undicesimo -> undicesim", function() {deepEqual( Stem("undicesimo"), "undicesim");});
test("undici -> undic", function() {deepEqual( Stem("undici"), "undic");});
test("une -> une", function() {deepEqual( Stem("une"), "une");});
test("unendo -> unend", function() {deepEqual( Stem("unendo"), "unend");});
test("unge -> unge", function() {deepEqual( Stem("unge"), "unge");});
test("ungendo -> ungend", function() {deepEqual( Stem("ungendo"), "ungend");});
test("unger -> unger", function() {deepEqual( Stem("unger"), "unger");});
test("ungere -> unger", function() {deepEqual( Stem("ungere"), "unger");});
test("ungerò -> unger", function() {deepEqual( Stem("ungerò"), "unger");});
test("ungherese -> ungheres", function() {deepEqual( Stem("ungherese"), "ungheres");});
test("ungheresi -> ungheres", function() {deepEqual( Stem("ungheresi"), "ungheres");});
test("ungheria -> ungher", function() {deepEqual( Stem("ungheria"), "ungher");});
test("unghie -> unghi", function() {deepEqual( Stem("unghie"), "unghi");});
test("ungili -> ungil", function() {deepEqual( Stem("ungili"), "ungil");});
test("unguenta -> unguent", function() {deepEqual( Stem("unguenta"), "unguent");});
test("unguenti -> unguent", function() {deepEqual( Stem("unguenti"), "unguent");});
test("unguento -> unguent", function() {deepEqual( Stem("unguento"), "unguent");});
test("unhcr -> unhcr", function() {deepEqual( Stem("unhcr"), "unhcr");});
test("uni -> uni", function() {deepEqual( Stem("uni"), "uni");});
test("unì -> unì", function() {deepEqual( Stem("unì"), "unì");});
test("unica -> unic", function() {deepEqual( Stem("unica"), "unic");});
test("unicamente -> unic", function() {deepEqual( Stem("unicamente"), "unic");});
test("unicef -> unicef", function() {deepEqual( Stem("unicef"), "unicef");});
test("unicem -> unicem", function() {deepEqual( Stem("unicem"), "unicem");});
test("unici -> unic", function() {deepEqual( Stem("unici"), "unic");});
test("unico -> unic", function() {deepEqual( Stem("unico"), "unic");});
test("unificate -> unific", function() {deepEqual( Stem("unificate"), "unific");});
test("unificato -> unific", function() {deepEqual( Stem("unificato"), "unific");});
test("uniformarli -> uniform", function() {deepEqual( Stem("uniformarli"), "uniform");});
test("uniformavano -> uniform", function() {deepEqual( Stem("uniformavano"), "uniform");});
test("uniforme -> uniform", function() {deepEqual( Stem("uniforme"), "uniform");});
test("uniformità -> uniform", function() {deepEqual( Stem("uniformità"), "uniform");});
test("unilaterale -> unilateral", function() {deepEqual( Stem("unilaterale"), "unilateral");});
test("uninominale -> uninominal", function() {deepEqual( Stem("uninominale"), "uninominal");});
test("uninominali -> uninominal", function() {deepEqual( Stem("uninominali"), "uninominal");});
test("union -> union", function() {deepEqual( Stem("union"), "union");});
test("unione -> union", function() {deepEqual( Stem("unione"), "union");});
test("unipi -> unip", function() {deepEqual( Stem("unipi"), "unip");});
test("unipol -> unipol", function() {deepEqual( Stem("unipol"), "unipol");});
test("unire -> unir", function() {deepEqual( Stem("unire"), "unir");});
test("unirsi -> unirs", function() {deepEqual( Stem("unirsi"), "unirs");});
test("unirvi -> unirv", function() {deepEqual( Stem("unirvi"), "unirv");});
test("unisce -> unisc", function() {deepEqual( Stem("unisce"), "unisc");});
test("uniscono -> unisc", function() {deepEqual( Stem("uniscono"), "unisc");});
test("unita -> unit", function() {deepEqual( Stem("unita"), "unit");});
test("unità -> unit", function() {deepEqual( Stem("unità"), "unit");});
test("unitari -> unitar", function() {deepEqual( Stem("unitari"), "unitar");});
test("unitaria -> unitar", function() {deepEqual( Stem("unitaria"), "unitar");});
test("unitarie -> unitar", function() {deepEqual( Stem("unitarie"), "unitar");});
test("unitarieta -> unitariet", function() {deepEqual( Stem("unitarieta"), "unitariet");});
test("unitarietà -> unitariet", function() {deepEqual( Stem("unitarietà"), "unitariet");});
test("unitario -> unitar", function() {deepEqual( Stem("unitario"), "unitar");});
test("unite -> unit", function() {deepEqual( Stem("unite"), "unit");});
test("united -> united", function() {deepEqual( Stem("united"), "united");});
test("uniti -> unit", function() {deepEqual( Stem("uniti"), "unit");});
test("unitissimo -> unitissim", function() {deepEqual( Stem("unitissimo"), "unitissim");});
test("unito -> unit", function() {deepEqual( Stem("unito"), "unit");});
test("univa -> univ", function() {deepEqual( Stem("univa"), "univ");});
test("univano -> univ", function() {deepEqual( Stem("univano"), "univ");});
test("universale -> universal", function() {deepEqual( Stem("universale"), "universal");});
test("universali -> universal", function() {deepEqual( Stem("universali"), "universal");});
test("universalità -> universal", function() {deepEqual( Stem("universalità"), "universal");});
test("università -> univers", function() {deepEqual( Stem("università"), "univers");});
test("universitaria -> universitar", function() {deepEqual( Stem("universitaria"), "universitar");});
test("university -> university", function() {deepEqual( Stem("university"), "university");});
test("universo -> univers", function() {deepEqual( Stem("universo"), "univers");});
test("unni -> unni", function() {deepEqual( Stem("unni"), "unni");});
test("uno -> uno", function() {deepEqual( Stem("uno"), "uno");});
test("unocal -> unocal", function() {deepEqual( Stem("unocal"), "unocal");});
test("unosom -> unosom", function() {deepEqual( Stem("unosom"), "unosom");});
test("unprofor -> unprofor", function() {deepEqual( Stem("unprofor"), "unprofor");});
test("unr -> unr", function() {deepEqual( Stem("unr"), "unr");});
test("unte -> unte", function() {deepEqual( Stem("unte"), "unte");});
test("unti -> unti", function() {deepEqual( Stem("unti"), "unti");});
test("unto -> unto", function() {deepEqual( Stem("unto"), "unto");});
test("untor -> untor", function() {deepEqual( Stem("untor"), "untor");});
test("untore -> untor", function() {deepEqual( Stem("untore"), "untor");});
test("untorello -> untorell", function() {deepEqual( Stem("untorello"), "untorell");});
test("untori -> untor", function() {deepEqual( Stem("untori"), "untor");});
test("untumi -> untum", function() {deepEqual( Stem("untumi"), "untum");});
test("unzione -> unzion", function() {deepEqual( Stem("unzione"), "unzion");});
test("unzioni -> unzion", function() {deepEqual( Stem("unzioni"), "unzion");});
test("uom -> uom", function() {deepEqual( Stem("uom"), "uom");});
test("uomini -> uomin", function() {deepEqual( Stem("uomini"), "uomin");});
test("uomo -> uom", function() {deepEqual( Stem("uomo"), "uom");});
test("uova -> uov", function() {deepEqual( Stem("uova"), "uov");});
test("up -> up", function() {deepEqual( Stem("up"), "up");});
test("uranio -> uran", function() {deepEqual( Stem("uranio"), "uran");});
test("urban -> urban", function() {deepEqual( Stem("urban"), "urban");});
test("urbana -> urban", function() {deepEqual( Stem("urbana"), "urban");});
test("urbane -> urban", function() {deepEqual( Stem("urbane"), "urban");});
test("urbani -> urban", function() {deepEqual( Stem("urbani"), "urban");});
test("urbanistiche -> urbanist", function() {deepEqual( Stem("urbanistiche"), "urbanist");});
test("urbano -> urban", function() {deepEqual( Stem("urbano"), "urban");});
test("urbe -> urbe", function() {deepEqual( Stem("urbe"), "urbe");});
test("urbini -> urbin", function() {deepEqual( Stem("urbini"), "urbin");});
test("urbis -> urbis", function() {deepEqual( Stem("urbis"), "urbis");});
test("urgente -> urgent", function() {deepEqual( Stem("urgente"), "urgent");});
test("urgenti -> urgent", function() {deepEqual( Stem("urgenti"), "urgent");});
test("urgenza -> urgenz", function() {deepEqual( Stem("urgenza"), "urgenz");});
test("urgenze -> urgenz", function() {deepEqual( Stem("urgenze"), "urgenz");});
test("urla -> urla", function() {deepEqual( Stem("urla"), "urla");});
test("urlando -> urland", function() {deepEqual( Stem("urlando"), "urland");});
test("urlano -> urlan", function() {deepEqual( Stem("urlano"), "urlan");});
test("urlare -> urlar", function() {deepEqual( Stem("urlare"), "urlar");});
test("urlargli -> urlargl", function() {deepEqual( Stem("urlargli"), "urlargl");});
test("urlato -> urlat", function() {deepEqual( Stem("urlato"), "urlat");});
test("urlatori -> urlator", function() {deepEqual( Stem("urlatori"), "urlator");});
test("urlava -> urlav", function() {deepEqual( Stem("urlava"), "urlav");});
test("urlavan -> urlavan", function() {deepEqual( Stem("urlavan"), "urlavan");});
test("urlavano -> urlav", function() {deepEqual( Stem("urlavano"), "urlav");});
test("urli -> urli", function() {deepEqual( Stem("urli"), "urli");});
test("urlìo -> urlì", function() {deepEqual( Stem("urlìo"), "urlì");});
test("urlo -> urlo", function() {deepEqual( Stem("urlo"), "urlo");});
test("urlò -> urlò", function() {deepEqual( Stem("urlò"), "urlò");});
test("urloni -> urlon", function() {deepEqual( Stem("urloni"), "urlon");});
test("urna -> urna", function() {deepEqual( Stem("urna"), "urna");});
test("urne -> urne", function() {deepEqual( Stem("urne"), "urne");});
test("urrea -> urre", function() {deepEqual( Stem("urrea"), "urre");});
test("urso -> urso", function() {deepEqual( Stem("urso"), "urso");});
test("urss -> urss", function() {deepEqual( Stem("urss"), "urss");});
test("urtacchiando -> urtacc", function() {deepEqual( Stem("urtacchiando"), "urtacc");});
test("urtando -> urtand", function() {deepEqual( Stem("urtando"), "urtand");});
test("urtano -> urtan", function() {deepEqual( Stem("urtano"), "urtan");});
test("urtar -> urtar", function() {deepEqual( Stem("urtar"), "urtar");});
test("urtati -> urtat", function() {deepEqual( Stem("urtati"), "urtat");});
test("urtato -> urtat", function() {deepEqual( Stem("urtato"), "urtat");});
test("urti -> urti", function() {deepEqual( Stem("urti"), "urti");});
test("urtone -> urton", function() {deepEqual( Stem("urtone"), "urton");});
test("urtoni -> urton", function() {deepEqual( Stem("urtoni"), "urton");});
test("uruguaiano -> uruguai", function() {deepEqual( Stem("uruguaiano"), "uruguai");});
test("usa -> usa", function() {deepEqual( Stem("usa"), "usa");});
test("usan -> usan", function() {deepEqual( Stem("usan"), "usan");});
test("usano -> usan", function() {deepEqual( Stem("usano"), "usan");});
test("usanza -> usanz", function() {deepEqual( Stem("usanza"), "usanz");});
test("usanze -> usanz", function() {deepEqual( Stem("usanze"), "usanz");});
test("usar -> usar", function() {deepEqual( Stem("usar"), "usar");});
test("usare -> usar", function() {deepEqual( Stem("usare"), "usar");});
test("usarlo -> usarl", function() {deepEqual( Stem("usarlo"), "usarl");});
test("usarono -> usar", function() {deepEqual( Stem("usarono"), "usar");});
test("usarsi -> usars", function() {deepEqual( Stem("usarsi"), "usars");});
test("usasse -> usass", function() {deepEqual( Stem("usasse"), "usass");});
test("usata -> usat", function() {deepEqual( Stem("usata"), "usat");});
test("usate -> usat", function() {deepEqual( Stem("usate"), "usat");});
test("usati -> usat", function() {deepEqual( Stem("usati"), "usat");});
test("usato -> usat", function() {deepEqual( Stem("usato"), "usat");});
test("usava -> usav", function() {deepEqual( Stem("usava"), "usav");});
test("usavan -> usavan", function() {deepEqual( Stem("usavan"), "usavan");});
test("usavano -> usav", function() {deepEqual( Stem("usavano"), "usav");});
test("uscendo -> uscend", function() {deepEqual( Stem("uscendo"), "uscend");});
test("uscente -> uscent", function() {deepEqual( Stem("uscente"), "uscent");});
test("uscenti -> uscent", function() {deepEqual( Stem("uscenti"), "uscent");});
test("usci -> usci", function() {deepEqual( Stem("usci"), "usci");});
test("uscì -> uscì", function() {deepEqual( Stem("uscì"), "uscì");});
test("usciaccio -> usciacc", function() {deepEqual( Stem("usciaccio"), "usciacc");});
test("usciamo -> usciam", function() {deepEqual( Stem("usciamo"), "usciam");});
test("uscio -> usci", function() {deepEqual( Stem("uscio"), "usci");});
test("usciolino -> usciolin", function() {deepEqual( Stem("usciolino"), "usciolin");});
test("uscir -> uscir", function() {deepEqual( Stem("uscir"), "uscir");});
test("uscire -> uscir", function() {deepEqual( Stem("uscire"), "uscir");});
test("uscirebbe -> uscirebb", function() {deepEqual( Stem("uscirebbe"), "uscirebb");});
test("usciremo -> uscirem", function() {deepEqual( Stem("usciremo"), "uscirem");});
test("uscirne -> uscirn", function() {deepEqual( Stem("uscirne"), "uscirn");});
test("usciron -> usciron", function() {deepEqual( Stem("usciron"), "usciron");});
test("uscirono -> uscir", function() {deepEqual( Stem("uscirono"), "uscir");});
test("uscisse -> usciss", function() {deepEqual( Stem("uscisse"), "usciss");});
test("uscissero -> uscisser", function() {deepEqual( Stem("uscissero"), "uscisser");});
test("uscita -> uscit", function() {deepEqual( Stem("uscita"), "uscit");});
test("uscite -> uscit", function() {deepEqual( Stem("uscite"), "uscit");});
test("usciti -> uscit", function() {deepEqual( Stem("usciti"), "uscit");});
test("uscito -> uscit", function() {deepEqual( Stem("uscito"), "uscit");});
test("usciva -> usciv", function() {deepEqual( Stem("usciva"), "usciv");});
test("uscivan -> uscivan", function() {deepEqual( Stem("uscivan"), "uscivan");});
test("uscivano -> usciv", function() {deepEqual( Stem("uscivano"), "usciv");});
test("uscivo -> usciv", function() {deepEqual( Stem("uscivo"), "usciv");});
test("usd -> usd", function() {deepEqual( Stem("usd"), "usd");});
test("usi -> usi", function() {deepEqual( Stem("usi"), "usi");});
test("usitato -> usit", function() {deepEqual( Stem("usitato"), "usit");});
test("usl -> usl", function() {deepEqual( Stem("usl"), "usl");});
test("uso -> uso", function() {deepEqual( Stem("uso"), "uso");});
test("usò -> usò", function() {deepEqual( Stem("usò"), "usò");});
test("usppi -> usppi", function() {deepEqual( Stem("usppi"), "usppi");});
test("usted -> usted", function() {deepEqual( Stem("usted"), "usted");});
test("ustione -> ustion", function() {deepEqual( Stem("ustione"), "ustion");});
test("usuale -> usual", function() {deepEqual( Stem("usuale"), "usual");});
test("usufruito -> usufru", function() {deepEqual( Stem("usufruito"), "usufru");});
test("usura -> usur", function() {deepEqual( Stem("usura"), "usur");});
test("usurpare -> usurp", function() {deepEqual( Stem("usurpare"), "usurp");});
test("utensili -> utensil", function() {deepEqual( Stem("utensili"), "utensil");});
test("utente -> utent", function() {deepEqual( Stem("utente"), "utent");});
test("utenti -> utent", function() {deepEqual( Stem("utenti"), "utent");});
test("utenza -> utenz", function() {deepEqual( Stem("utenza"), "utenz");});
test("utenze -> utenz", function() {deepEqual( Stem("utenze"), "utenz");});
test("utile -> util", function() {deepEqual( Stem("utile"), "util");});
test("utili -> util", function() {deepEqual( Stem("utili"), "util");});
test("utilì -> util", function() {deepEqual( Stem("utilì"), "util");});
test("utilità -> util", function() {deepEqual( Stem("utilità"), "util");});
test("utilizza -> utilizz", function() {deepEqual( Stem("utilizza"), "utilizz");});
test("utilizzando -> utilizz", function() {deepEqual( Stem("utilizzando"), "utilizz");});
test("utilizzandole -> utilizz", function() {deepEqual( Stem("utilizzandole"), "utilizz");});
test("utilizzano -> utilizz", function() {deepEqual( Stem("utilizzano"), "utilizz");});
test("utilizzare -> utilizz", function() {deepEqual( Stem("utilizzare"), "utilizz");});
test("utilizzata -> utilizz", function() {deepEqual( Stem("utilizzata"), "utilizz");});
test("utilizzate -> utilizz", function() {deepEqual( Stem("utilizzate"), "utilizz");});
test("utilizzati -> utilizz", function() {deepEqual( Stem("utilizzati"), "utilizz");});
test("utilizzato -> utilizz", function() {deepEqual( Stem("utilizzato"), "utilizz");});
test("utilizzazione -> utilizz", function() {deepEqual( Stem("utilizzazione"), "utilizz");});
test("utilizzerà -> utilizz", function() {deepEqual( Stem("utilizzerà"), "utilizz");});
test("utilizzi -> utilizz", function() {deepEqual( Stem("utilizzi"), "utilizz");});
test("utilizzo -> utilizz", function() {deepEqual( Stem("utilizzo"), "utilizz");});
test("utri -> utri", function() {deepEqual( Stem("utri"), "utri");});
test("uva -> uva", function() {deepEqual( Stem("uva"), "uva");});
test("uve -> uve", function() {deepEqual( Stem("uve"), "uve");});
test("uxoricida -> uxoricid", function() {deepEqual( Stem("uxoricida"), "uxoricid");});
test("v -> v", function() {deepEqual( Stem("v"), "v");});
test("va -> va", function() {deepEqual( Stem("va"), "va");});
test("vacanza -> vacanz", function() {deepEqual( Stem("vacanza"), "vacanz");});
test("vacanze -> vacanz", function() {deepEqual( Stem("vacanze"), "vacanz");});
test("vacato -> vac", function() {deepEqual( Stem("vacato"), "vac");});
test("vaccaro -> vaccar", function() {deepEqual( Stem("vaccaro"), "vaccar");});
test("vaccherella -> vaccherell", function() {deepEqual( Stem("vaccherella"), "vaccherell");});
test("vaccherelle -> vaccherell", function() {deepEqual( Stem("vaccherelle"), "vaccherell");});
test("vacchetta -> vacchett", function() {deepEqual( Stem("vacchetta"), "vacchett");});
test("vaccino -> vaccin", function() {deepEqual( Stem("vaccino"), "vaccin");});
test("vacek -> vacek", function() {deepEqual( Stem("vacek"), "vacek");});
test("vada -> vad", function() {deepEqual( Stem("vada"), "vad");});
test("vadano -> vad", function() {deepEqual( Stem("vadano"), "vad");});
test("vado -> vad", function() {deepEqual( Stem("vado"), "vad");});
test("vaga -> vag", function() {deepEqual( Stem("vaga"), "vag");});
test("vagabonda -> vagabond", function() {deepEqual( Stem("vagabonda"), "vagabond");});
test("vagabondi -> vagabond", function() {deepEqual( Stem("vagabondi"), "vagabond");});
test("vagabondo -> vagabond", function() {deepEqual( Stem("vagabondo"), "vagabond");});
test("vagando -> vag", function() {deepEqual( Stem("vagando"), "vag");});
test("vagano -> vag", function() {deepEqual( Stem("vagano"), "vag");});
test("vagante -> vagant", function() {deepEqual( Stem("vagante"), "vagant");});
test("vaganti -> vagant", function() {deepEqual( Stem("vaganti"), "vagant");});
test("vagar -> vag", function() {deepEqual( Stem("vagar"), "vag");});
test("vagheggiare -> vaghegg", function() {deepEqual( Stem("vagheggiare"), "vaghegg");});
test("vagheggiato -> vaghegg", function() {deepEqual( Stem("vagheggiato"), "vaghegg");});
test("vagiti -> vag", function() {deepEqual( Stem("vagiti"), "vag");});
test("vagito -> vag", function() {deepEqual( Stem("vagito"), "vag");});
test("vaglia -> vagl", function() {deepEqual( Stem("vaglia"), "vagl");});
test("vagliata -> vagl", function() {deepEqual( Stem("vagliata"), "vagl");});
test("vagliensteino -> vaglienstein", function() {deepEqual( Stem("vagliensteino"), "vaglienstein");});
test("vaglion -> vaglion", function() {deepEqual( Stem("vaglion"), "vaglion");});
test("vagoni -> vagon", function() {deepEqual( Stem("vagoni"), "vagon");});
test("vai -> vai", function() {deepEqual( Stem("vai"), "vai");});
test("vaiano -> vai", function() {deepEqual( Stem("vaiano"), "vai");});
test("vaio -> vai", function() {deepEqual( Stem("vaio"), "vai");});
test("vaivada -> vaivad", function() {deepEqual( Stem("vaivada"), "vaivad");});
test("val -> val", function() {deepEqual( Stem("val"), "val");});
test("valdagno -> valdagn", function() {deepEqual( Stem("valdagno"), "valdagn");});
test("valdes -> valdes", function() {deepEqual( Stem("valdes"), "valdes");});
test("valdistano -> valdist", function() {deepEqual( Stem("valdistano"), "valdist");});
test("valdo -> vald", function() {deepEqual( Stem("valdo"), "vald");});
test("valdostana -> valdostan", function() {deepEqual( Stem("valdostana"), "valdostan");});
test("valdostano -> valdost", function() {deepEqual( Stem("valdostano"), "valdost");});
test("vale -> val", function() {deepEqual( Stem("vale"), "val");});
test("valente -> valent", function() {deepEqual( Stem("valente"), "valent");});
test("valenti -> valent", function() {deepEqual( Stem("valenti"), "valent");});
test("valentia -> valent", function() {deepEqual( Stem("valentia"), "valent");});
test("valentina -> valentin", function() {deepEqual( Stem("valentina"), "valentin");});
test("valentini -> valentin", function() {deepEqual( Stem("valentini"), "valentin");});
test("valentino -> valentin", function() {deepEqual( Stem("valentino"), "valentin");});
test("valentuomini -> valentuomin", function() {deepEqual( Stem("valentuomini"), "valentuomin");});
test("valenza -> valenz", function() {deepEqual( Stem("valenza"), "valenz");});
test("valere -> val", function() {deepEqual( Stem("valere"), "val");});
test("valeria -> valer", function() {deepEqual( Stem("valeria"), "valer");});
test("valeriano -> valer", function() {deepEqual( Stem("valeriano"), "valer");});
test("valerio -> valer", function() {deepEqual( Stem("valerio"), "valer");});
test("valersi -> val", function() {deepEqual( Stem("valersi"), "val");});
test("valesse -> valess", function() {deepEqual( Stem("valesse"), "valess");});
test("valessero -> val", function() {deepEqual( Stem("valessero"), "val");});
test("valeva -> val", function() {deepEqual( Stem("valeva"), "val");});
test("valevan -> valevan", function() {deepEqual( Stem("valevan"), "valevan");});
test("valevano -> val", function() {deepEqual( Stem("valevano"), "val");});
test("valga -> valg", function() {deepEqual( Stem("valga"), "valg");});
test("valgono -> valg", function() {deepEqual( Stem("valgono"), "valg");});
test("vali -> val", function() {deepEqual( Stem("vali"), "val");});
test("valichi -> valic", function() {deepEqual( Stem("valichi"), "valic");});
test("valico -> valic", function() {deepEqual( Stem("valico"), "valic");});
test("valida -> valid", function() {deepEqual( Stem("valida"), "valid");});
test("validi -> valid", function() {deepEqual( Stem("validi"), "valid");});
test("validità -> valid", function() {deepEqual( Stem("validità"), "valid");});
test("valido -> valid", function() {deepEqual( Stem("valido"), "valid");});
test("valinotti -> valinott", function() {deepEqual( Stem("valinotti"), "valinott");});
test("valle -> vall", function() {deepEqual( Stem("valle"), "vall");});
test("valletta -> vallett", function() {deepEqual( Stem("valletta"), "vallett");});
test("valley -> valley", function() {deepEqual( Stem("valley"), "valley");});
test("valli -> vall", function() {deepEqual( Stem("valli"), "vall");});
test("valligiani -> valligian", function() {deepEqual( Stem("valligiani"), "valligian");});
test("vallistai -> vallista", function() {deepEqual( Stem("vallistai"), "vallista");});
test("valloncelli -> valloncell", function() {deepEqual( Stem("valloncelli"), "valloncell");});
test("vallone -> vallon", function() {deepEqual( Stem("vallone"), "vallon");});
test("valobra -> valobr", function() {deepEqual( Stem("valobra"), "valobr");});
test("valore -> valor", function() {deepEqual( Stem("valore"), "valor");});
test("valori -> valor", function() {deepEqual( Stem("valori"), "valor");});
test("valorizza -> valorizz", function() {deepEqual( Stem("valorizza"), "valorizz");});
test("valorizzare -> valorizz", function() {deepEqual( Stem("valorizzare"), "valorizz");});
test("valorizzazione -> valorizz", function() {deepEqual( Stem("valorizzazione"), "valorizz");});
test("valorizzeranno -> valorizz", function() {deepEqual( Stem("valorizzeranno"), "valorizz");});
test("valoti -> valot", function() {deepEqual( Stem("valoti"), "valot");});
test("valsassina -> valsassin", function() {deepEqual( Stem("valsassina"), "valsassin");});
test("valse -> vals", function() {deepEqual( Stem("valse"), "vals");});
test("valsero -> valser", function() {deepEqual( Stem("valsero"), "valser");});
test("valtellina -> valtellin", function() {deepEqual( Stem("valtellina"), "valtellin");});
test("valtellinese -> valtellines", function() {deepEqual( Stem("valtellinese"), "valtellines");});
test("valtrompia -> valtromp", function() {deepEqual( Stem("valtrompia"), "valtromp");});
test("valuta -> val", function() {deepEqual( Stem("valuta"), "val");});
test("valutando -> valut", function() {deepEqual( Stem("valutando"), "valut");});
test("valutar -> valut", function() {deepEqual( Stem("valutar"), "valut");});
test("valutare -> valut", function() {deepEqual( Stem("valutare"), "valut");});
test("valutari -> valutar", function() {deepEqual( Stem("valutari"), "valutar");});
test("valutaria -> valutar", function() {deepEqual( Stem("valutaria"), "valutar");});
test("valutarie -> valutar", function() {deepEqual( Stem("valutarie"), "valutar");});
test("valutario -> valutar", function() {deepEqual( Stem("valutario"), "valutar");});
test("valutata -> valut", function() {deepEqual( Stem("valutata"), "valut");});
test("valutate -> valut", function() {deepEqual( Stem("valutate"), "valut");});
test("valutato -> valut", function() {deepEqual( Stem("valutato"), "valut");});
test("valutazione -> valut", function() {deepEqual( Stem("valutazione"), "valut");});
test("valutazioni -> valut", function() {deepEqual( Stem("valutazioni"), "valut");});
test("valute -> val", function() {deepEqual( Stem("valute"), "val");});
test("vampiro -> vampir", function() {deepEqual( Stem("vampiro"), "vampir");});
test("van -> van", function() {deepEqual( Stem("van"), "van");});
test("vana -> van", function() {deepEqual( Stem("vana"), "van");});
test("vancouver -> vancouver", function() {deepEqual( Stem("vancouver"), "vancouver");});
test("vandalismo -> vandal", function() {deepEqual( Stem("vandalismo"), "vandal");});
test("vandalo -> vandal", function() {deepEqual( Stem("vandalo"), "vandal");});
test("vandernoot -> vandernoot", function() {deepEqual( Stem("vandernoot"), "vandernoot");});
test("vane -> van", function() {deepEqual( Stem("vane"), "van");});
test("vaneggiamenti -> vanegg", function() {deepEqual( Stem("vaneggiamenti"), "vanegg");});
test("vaneggiamento -> vanegg", function() {deepEqual( Stem("vaneggiamento"), "vanegg");});
test("vanga -> vang", function() {deepEqual( Stem("vanga"), "vang");});
test("vangelo -> vangel", function() {deepEqual( Stem("vangelo"), "vangel");});
test("vanghe -> vang", function() {deepEqual( Stem("vanghe"), "vang");});
test("vangile -> vangil", function() {deepEqual( Stem("vangile"), "vangil");});
test("vanguardia -> vanguard", function() {deepEqual( Stem("vanguardia"), "vanguard");});
test("vani -> van", function() {deepEqual( Stem("vani"), "van");});
test("vanificare -> vanific", function() {deepEqual( Stem("vanificare"), "vanific");});
test("vanificati -> vanific", function() {deepEqual( Stem("vanificati"), "vanific");});
test("vanificato -> vanific", function() {deepEqual( Stem("vanificato"), "vanific");});
test("vanigli -> vanigl", function() {deepEqual( Stem("vanigli"), "vanigl");});
test("vanità -> vanit", function() {deepEqual( Stem("vanità"), "vanit");});
test("vanni -> vann", function() {deepEqual( Stem("vanni"), "vann");});
test("vannino -> vannin", function() {deepEqual( Stem("vannino"), "vannin");});
test("vanno -> vann", function() {deepEqual( Stem("vanno"), "vann");});
test("vannoni -> vannon", function() {deepEqual( Stem("vannoni"), "vannon");});
test("vano -> van", function() {deepEqual( Stem("vano"), "van");});
test("vanoli -> vanol", function() {deepEqual( Stem("vanoli"), "vanol");});
test("vanta -> vant", function() {deepEqual( Stem("vanta"), "vant");});
test("vantaggi -> vantagg", function() {deepEqual( Stem("vantaggi"), "vantagg");});
test("vantaggio -> vantagg", function() {deepEqual( Stem("vantaggio"), "vantagg");});
test("vantaggioso -> vantagg", function() {deepEqual( Stem("vantaggioso"), "vantagg");});
test("vantano -> vant", function() {deepEqual( Stem("vantano"), "vant");});
test("vantarmi -> vant", function() {deepEqual( Stem("vantarmi"), "vant");});
test("vantarsene -> vant", function() {deepEqual( Stem("vantarsene"), "vant");});
test("vantarsi -> vant", function() {deepEqual( Stem("vantarsi"), "vant");});
test("vantati -> vant", function() {deepEqual( Stem("vantati"), "vant");});
test("vantato -> vant", function() {deepEqual( Stem("vantato"), "vant");});
test("vanto -> vant", function() {deepEqual( Stem("vanto"), "vant");});
test("vapori -> vapor", function() {deepEqual( Stem("vapori"), "vapor");});
test("var -> var", function() {deepEqual( Stem("var"), "var");});
test("varare -> var", function() {deepEqual( Stem("varare"), "var");});
test("varate -> var", function() {deepEqual( Stem("varate"), "var");});
test("varato -> var", function() {deepEqual( Stem("varato"), "var");});
test("varcata -> varc", function() {deepEqual( Stem("varcata"), "varc");});
test("varcato -> varc", function() {deepEqual( Stem("varcato"), "varc");});
test("varchi -> varc", function() {deepEqual( Stem("varchi"), "varc");});
test("varda -> vard", function() {deepEqual( Stem("varda"), "vard");});
test("varerà -> var", function() {deepEqual( Stem("varerà"), "var");});
test("varese -> vares", function() {deepEqual( Stem("varese"), "vares");});
test("varesina -> varesin", function() {deepEqual( Stem("varesina"), "varesin");});
test("varesotto -> varesott", function() {deepEqual( Stem("varesotto"), "varesott");});
test("vari -> var", function() {deepEqual( Stem("vari"), "var");});
test("varia -> var", function() {deepEqual( Stem("varia"), "var");});
test("variabile -> variabil", function() {deepEqual( Stem("variabile"), "variabil");});
test("variabili -> variabil", function() {deepEqual( Stem("variabili"), "variabil");});
test("variandosi -> var", function() {deepEqual( Stem("variandosi"), "var");});
test("variante -> variant", function() {deepEqual( Stem("variante"), "variant");});
test("varianti -> variant", function() {deepEqual( Stem("varianti"), "variant");});
test("variata -> var", function() {deepEqual( Stem("variata"), "var");});
test("variato -> var", function() {deepEqual( Stem("variato"), "var");});
test("variava -> var", function() {deepEqual( Stem("variava"), "var");});
test("variavano -> var", function() {deepEqual( Stem("variavano"), "var");});
test("variazione -> variazion", function() {deepEqual( Stem("variazione"), "variazion");});
test("variazioni -> variazion", function() {deepEqual( Stem("variazioni"), "variazion");});
test("varie -> var", function() {deepEqual( Stem("varie"), "var");});
test("variegato -> varieg", function() {deepEqual( Stem("variegato"), "varieg");});
test("varietà -> variet", function() {deepEqual( Stem("varietà"), "variet");});
test("varietali -> varietal", function() {deepEqual( Stem("varietali"), "varietal");});
test("varii -> var", function() {deepEqual( Stem("varii"), "var");});
test("vario -> var", function() {deepEqual( Stem("vario"), "var");});
test("variopinti -> variopint", function() {deepEqual( Stem("variopinti"), "variopint");});
test("varo -> var", function() {deepEqual( Stem("varo"), "var");});
test("varrebbe -> varrebb", function() {deepEqual( Stem("varrebbe"), "varrebb");});
test("varrone -> varron", function() {deepEqual( Stem("varrone"), "varron");});
test("varsavia -> varsav", function() {deepEqual( Stem("varsavia"), "varsav");});
test("vasari -> vasar", function() {deepEqual( Stem("vasari"), "vasar");});
test("vasca -> vasc", function() {deepEqual( Stem("vasca"), "vasc");});
test("vascello -> vascell", function() {deepEqual( Stem("vascello"), "vascell");});
test("vasco -> vasc", function() {deepEqual( Stem("vasco"), "vasc");});
test("vasetto -> vasett", function() {deepEqual( Stem("vasetto"), "vasett");});
test("vash -> vash", function() {deepEqual( Stem("vash"), "vash");});
test("vasi -> vas", function() {deepEqual( Stem("vasi"), "vas");});
test("vaso -> vas", function() {deepEqual( Stem("vaso"), "vas");});
test("vassallesco -> vassallesc", function() {deepEqual( Stem("vassallesco"), "vassallesc");});
test("vassalli -> vassall", function() {deepEqual( Stem("vassalli"), "vassall");});
test("vasta -> vast", function() {deepEqual( Stem("vasta"), "vast");});
test("vaste -> vast", function() {deepEqual( Stem("vaste"), "vast");});
test("vastese -> vastes", function() {deepEqual( Stem("vastese"), "vastes");});
test("vasti -> vast", function() {deepEqual( Stem("vasti"), "vast");});
test("vastissima -> vastissim", function() {deepEqual( Stem("vastissima"), "vastissim");});
test("vastità -> vastit", function() {deepEqual( Stem("vastità"), "vastit");});
test("vasto -> vast", function() {deepEqual( Stem("vasto"), "vast");});
test("vaticana -> vatican", function() {deepEqual( Stem("vaticana"), "vatican");});
test("vaticano -> vatic", function() {deepEqual( Stem("vaticano"), "vatic");});
test("vaticinare -> vaticin", function() {deepEqual( Stem("vaticinare"), "vaticin");});
test("vattene -> vatten", function() {deepEqual( Stem("vattene"), "vatten");});
test("vattenfall -> vattenfall", function() {deepEqual( Stem("vattenfall"), "vattenfall");});
test("vazquez -> vazquez", function() {deepEqual( Stem("vazquez"), "vazquez");});
test("vd -> vd", function() {deepEqual( Stem("vd"), "vd");});
test("vdovin -> vdovin", function() {deepEqual( Stem("vdovin"), "vdovin");});
test("ve -> ve", function() {deepEqual( Stem("ve"), "ve");});
test("vecce -> vecc", function() {deepEqual( Stem("vecce"), "vecc");});
test("vecchi -> vecc", function() {deepEqual( Stem("vecchi"), "vecc");});
test("vecchia -> vecc", function() {deepEqual( Stem("vecchia"), "vecc");});
test("vecchie -> vecc", function() {deepEqual( Stem("vecchie"), "vecc");});
test("vecchiezza -> vecchiezz", function() {deepEqual( Stem("vecchiezza"), "vecchiezz");});
test("vecchio -> vecc", function() {deepEqual( Stem("vecchio"), "vecc");});
test("vecchione -> vecchion", function() {deepEqual( Stem("vecchione"), "vecchion");});
test("vece -> vec", function() {deepEqual( Stem("vece"), "vec");});
test("veci -> vec", function() {deepEqual( Stem("veci"), "vec");});
test("veda -> ved", function() {deepEqual( Stem("veda"), "ved");});
test("vedano -> ved", function() {deepEqual( Stem("vedano"), "ved");});
test("vede -> ved", function() {deepEqual( Stem("vede"), "ved");});
test("vedendo -> ved", function() {deepEqual( Stem("vedendo"), "ved");});
test("vedendola -> ved", function() {deepEqual( Stem("vedendola"), "ved");});
test("vedendoli -> ved", function() {deepEqual( Stem("vedendoli"), "ved");});
test("vedendolo -> ved", function() {deepEqual( Stem("vedendolo"), "ved");});
test("vedendomi -> ved", function() {deepEqual( Stem("vedendomi"), "ved");});
test("vedendoseli -> vedendosel", function() {deepEqual( Stem("vedendoseli"), "vedendosel");});
test("vedendosi -> ved", function() {deepEqual( Stem("vedendosi"), "ved");});
test("vedendovi -> ved", function() {deepEqual( Stem("vedendovi"), "ved");});
test("veder -> veder", function() {deepEqual( Stem("veder"), "veder");});
test("vederanno -> ved", function() {deepEqual( Stem("vederanno"), "ved");});
test("vederci -> ved", function() {deepEqual( Stem("vederci"), "ved");});
test("vedere -> ved", function() {deepEqual( Stem("vedere"), "ved");});
test("vedergli -> ved", function() {deepEqual( Stem("vedergli"), "ved");});
test("vederla -> ved", function() {deepEqual( Stem("vederla"), "ved");});
test("vederle -> ved", function() {deepEqual( Stem("vederle"), "ved");});
test("vederli -> ved", function() {deepEqual( Stem("vederli"), "ved");});
test("vederlo -> ved", function() {deepEqual( Stem("vederlo"), "ved");});
test("vederne -> ved", function() {deepEqual( Stem("vederne"), "ved");});
test("vedersela -> vedersel", function() {deepEqual( Stem("vedersela"), "vedersel");});
test("vedersene -> ved", function() {deepEqual( Stem("vedersene"), "ved");});
test("vedersi -> ved", function() {deepEqual( Stem("vedersi"), "ved");});
test("vederti -> ved", function() {deepEqual( Stem("vederti"), "ved");});
test("vedervi -> ved", function() {deepEqual( Stem("vedervi"), "ved");});
test("vedesse -> vedess", function() {deepEqual( Stem("vedesse"), "vedess");});
test("vedessero -> ved", function() {deepEqual( Stem("vedessero"), "ved");});
test("vedessi -> vedess", function() {deepEqual( Stem("vedessi"), "vedess");});
test("vedeste -> vedest", function() {deepEqual( Stem("vedeste"), "vedest");});
test("vedete -> ved", function() {deepEqual( Stem("vedete"), "ved");});
test("vedettà -> vedett", function() {deepEqual( Stem("vedettà"), "vedett");});
test("vedeva -> ved", function() {deepEqual( Stem("vedeva"), "ved");});
test("vedevamo -> ved", function() {deepEqual( Stem("vedevamo"), "ved");});
test("vedevan -> vedevan", function() {deepEqual( Stem("vedevan"), "vedevan");});
test("vedevano -> ved", function() {deepEqual( Stem("vedevano"), "ved");});
test("vedi -> ved", function() {deepEqual( Stem("vedi"), "ved");});
test("vediamo -> ved", function() {deepEqual( Stem("vediamo"), "ved");});
test("vediate -> ved", function() {deepEqual( Stem("vediate"), "ved");});
test("vedo -> ved", function() {deepEqual( Stem("vedo"), "ved");});
test("vedon -> vedon", function() {deepEqual( Stem("vedon"), "vedon");});
test("vedono -> ved", function() {deepEqual( Stem("vedono"), "ved");});
test("vedova -> vedov", function() {deepEqual( Stem("vedova"), "vedov");});
test("vedrà -> vedr", function() {deepEqual( Stem("vedrà"), "vedr");});
test("vedrai -> vedra", function() {deepEqual( Stem("vedrai"), "vedra");});
test("vedranno -> vedrann", function() {deepEqual( Stem("vedranno"), "vedrann");});
test("vedrebbe -> vedrebb", function() {deepEqual( Stem("vedrebbe"), "vedrebb");});
test("vedrebbero -> vedrebber", function() {deepEqual( Stem("vedrebbero"), "vedrebber");});
test("vedremo -> vedrem", function() {deepEqual( Stem("vedremo"), "vedrem");});
test("vedrete -> vedr", function() {deepEqual( Stem("vedrete"), "vedr");});
test("vedrò -> vedr", function() {deepEqual( Stem("vedrò"), "vedr");});
test("veduta -> ved", function() {deepEqual( Stem("veduta"), "ved");});
test("vedute -> ved", function() {deepEqual( Stem("vedute"), "ved");});
test("veduti -> ved", function() {deepEqual( Stem("veduti"), "ved");});
test("veduto -> ved", function() {deepEqual( Stem("veduto"), "ved");});
test("veemente -> veement", function() {deepEqual( Stem("veemente"), "veement");});
test("veemenza -> veemenz", function() {deepEqual( Stem("veemenza"), "veemenz");});
test("vega -> veg", function() {deepEqual( Stem("vega"), "veg");});
test("vegetariana -> vegetarian", function() {deepEqual( Stem("vegetariana"), "vegetarian");});
test("vegetazione -> veget", function() {deepEqual( Stem("vegetazione"), "veget");});
test("veglia -> vegl", function() {deepEqual( Stem("veglia"), "vegl");});
test("vegliar -> vegl", function() {deepEqual( Stem("vegliar"), "vegl");});
test("vegliardo -> vegliard", function() {deepEqual( Stem("vegliardo"), "vegliard");});
test("vegliare -> vegl", function() {deepEqual( Stem("vegliare"), "vegl");});
test("vegliasse -> vegl", function() {deepEqual( Stem("vegliasse"), "vegl");});
test("vegliato -> vegl", function() {deepEqual( Stem("vegliato"), "vegl");});
test("vegliava -> vegl", function() {deepEqual( Stem("vegliava"), "vegl");});
test("vegliavano -> vegl", function() {deepEqual( Stem("vegliavano"), "vegl");});
test("vegliavo -> vegl", function() {deepEqual( Stem("vegliavo"), "vegl");});
test("veglie -> vegl", function() {deepEqual( Stem("veglie"), "vegl");});
test("veicoli -> veicol", function() {deepEqual( Stem("veicoli"), "veicol");});
test("veicolo -> veicol", function() {deepEqual( Stem("veicolo"), "veicol");});
test("veivoli -> veivol", function() {deepEqual( Stem("veivoli"), "veivol");});
test("vel -> vel", function() {deepEqual( Stem("vel"), "vel");});
test("vela -> vel", function() {deepEqual( Stem("vela"), "vel");});
test("velar -> vel", function() {deepEqual( Stem("velar"), "vel");});
test("velasco -> velasc", function() {deepEqual( Stem("velasco"), "velasc");});
test("velata -> vel", function() {deepEqual( Stem("velata"), "vel");});
test("velate -> vel", function() {deepEqual( Stem("velate"), "vel");});
test("velato -> vel", function() {deepEqual( Stem("velato"), "vel");});
test("vele -> vel", function() {deepEqual( Stem("vele"), "vel");});
test("veleni -> velen", function() {deepEqual( Stem("veleni"), "velen");});
test("veleno -> velen", function() {deepEqual( Stem("veleno"), "velen");});
test("velenosa -> velen", function() {deepEqual( Stem("velenosa"), "velen");});
test("velenosi -> velen", function() {deepEqual( Stem("velenosi"), "velen");});
test("velette -> velett", function() {deepEqual( Stem("velette"), "velett");});
test("veli -> vel", function() {deepEqual( Stem("veli"), "vel");});
test("veliconi -> velicon", function() {deepEqual( Stem("veliconi"), "velicon");});
test("velika -> velik", function() {deepEqual( Stem("velika"), "velik");});
test("velivoli -> velivol", function() {deepEqual( Stem("velivoli"), "velivol");});
test("velivolo -> velivol", function() {deepEqual( Stem("velivolo"), "velivol");});
test("velletri -> velletr", function() {deepEqual( Stem("velletri"), "velletr");});
test("velluto -> vell", function() {deepEqual( Stem("velluto"), "vell");});
test("velo -> vel", function() {deepEqual( Stem("velo"), "vel");});
test("veloce -> veloc", function() {deepEqual( Stem("veloce"), "veloc");});
test("velocemente -> veloc", function() {deepEqual( Stem("velocemente"), "veloc");});
test("velocissima -> velocissim", function() {deepEqual( Stem("velocissima"), "velocissim");});
test("velocista -> veloc", function() {deepEqual( Stem("velocista"), "veloc");});
test("velocità -> veloc", function() {deepEqual( Stem("velocità"), "veloc");});
test("velocizzare -> velocizz", function() {deepEqual( Stem("velocizzare"), "velocizz");});
test("velodromo -> velodrom", function() {deepEqual( Stem("velodromo"), "velodrom");});
test("velotti -> velott", function() {deepEqual( Stem("velotti"), "velott");});
test("veltroni -> veltron", function() {deepEqual( Stem("veltroni"), "veltron");});
test("veluti -> vel", function() {deepEqual( Stem("veluti"), "vel");});
test("vena -> ven", function() {deepEqual( Stem("vena"), "ven");});
test("vende -> vend", function() {deepEqual( Stem("vende"), "vend");});
test("vendemmia -> vendemm", function() {deepEqual( Stem("vendemmia"), "vendemm");});
test("vender -> vender", function() {deepEqual( Stem("vender"), "vender");});
test("venderà -> vend", function() {deepEqual( Stem("venderà"), "vend");});
test("vendere -> vend", function() {deepEqual( Stem("vendere"), "vend");});
test("vendersene -> vend", function() {deepEqual( Stem("vendersene"), "vend");});
test("vendersi -> vend", function() {deepEqual( Stem("vendersi"), "vend");});
test("vendessero -> vend", function() {deepEqual( Stem("vendessero"), "vend");});
test("vendetta -> vendett", function() {deepEqual( Stem("vendetta"), "vendett");});
test("vendette -> vendett", function() {deepEqual( Stem("vendette"), "vendett");});
test("vendeva -> vend", function() {deepEqual( Stem("vendeva"), "vend");});
test("vendevano -> vend", function() {deepEqual( Stem("vendevano"), "vend");});
test("vendicarsi -> vendic", function() {deepEqual( Stem("vendicarsi"), "vendic");});
test("vendicati -> vendic", function() {deepEqual( Stem("vendicati"), "vendic");});
test("vendicativo -> vendic", function() {deepEqual( Stem("vendicativo"), "vendic");});
test("vendicatore -> vendic", function() {deepEqual( Stem("vendicatore"), "vendic");});
test("vendicava -> vendic", function() {deepEqual( Stem("vendicava"), "vendic");});
test("vendita -> vend", function() {deepEqual( Stem("vendita"), "vend");});
test("vendite -> vend", function() {deepEqual( Stem("vendite"), "vend");});
test("venditori -> venditor", function() {deepEqual( Stem("venditori"), "venditor");});
test("venduta -> vend", function() {deepEqual( Stem("venduta"), "vend");});
test("vendute -> vend", function() {deepEqual( Stem("vendute"), "vend");});
test("venduti -> vend", function() {deepEqual( Stem("venduti"), "vend");});
test("vendutì -> vendut", function() {deepEqual( Stem("vendutì"), "vendut");});
test("venduto -> vend", function() {deepEqual( Stem("venduto"), "vend");});
test("vene -> ven", function() {deepEqual( Stem("vene"), "ven");});
test("venefica -> venef", function() {deepEqual( Stem("venefica"), "venef");});
test("venefiche -> venef", function() {deepEqual( Stem("venefiche"), "venef");});
test("venefici -> venef", function() {deepEqual( Stem("venefici"), "venef");});
test("venefico -> venef", function() {deepEqual( Stem("venefico"), "venef");});
test("venefizio -> venefiz", function() {deepEqual( Stem("venefizio"), "venefiz");});
test("venendo -> ven", function() {deepEqual( Stem("venendo"), "ven");});
test("venendogli -> ven", function() {deepEqual( Stem("venendogli"), "ven");});
test("veneno -> venen", function() {deepEqual( Stem("veneno"), "venen");});
test("venerabil -> venerabil", function() {deepEqual( Stem("venerabil"), "venerabil");});
test("venerabile -> vener", function() {deepEqual( Stem("venerabile"), "vener");});
test("venerato -> vener", function() {deepEqual( Stem("venerato"), "vener");});
test("venerazione -> vener", function() {deepEqual( Stem("venerazione"), "vener");});
test("venerdi -> venerd", function() {deepEqual( Stem("venerdi"), "venerd");});
test("venerdì -> venerd", function() {deepEqual( Stem("venerdì"), "venerd");});
test("venere -> ven", function() {deepEqual( Stem("venere"), "ven");});
test("veneta -> venet", function() {deepEqual( Stem("veneta"), "venet");});
test("veneti -> venet", function() {deepEqual( Stem("veneti"), "venet");});
test("venetì -> venet", function() {deepEqual( Stem("venetì"), "venet");});
test("veneto -> venet", function() {deepEqual( Stem("veneto"), "venet");});
test("venetoblue -> venetoblu", function() {deepEqual( Stem("venetoblue"), "venetoblu");});
test("venetocapital -> venetocapital", function() {deepEqual( Stem("venetocapital"), "venetocapital");});
test("venetocash -> venetocash", function() {deepEqual( Stem("venetocash"), "venetocash");});
test("venetorend -> venetorend", function() {deepEqual( Stem("venetorend"), "venetorend");});
test("venetoventure -> venetoventur", function() {deepEqual( Stem("venetoventure"), "venetoventur");});
test("venezia -> venez", function() {deepEqual( Stem("venezia"), "venez");});
test("veneziani -> venezian", function() {deepEqual( Stem("veneziani"), "venezian");});
test("veneziano -> venez", function() {deepEqual( Stem("veneziano"), "venez");});
test("venezuela -> venezuel", function() {deepEqual( Stem("venezuela"), "venezuel");});
test("venezuelano -> venezuel", function() {deepEqual( Stem("venezuelano"), "venezuel");});
test("venga -> veng", function() {deepEqual( Stem("venga"), "veng");});
test("vengan -> vengan", function() {deepEqual( Stem("vengan"), "vengan");});
test("vengano -> veng", function() {deepEqual( Stem("vengano"), "veng");});
test("vengo -> veng", function() {deepEqual( Stem("vengo"), "veng");});
test("vengon -> vengon", function() {deepEqual( Stem("vengon"), "vengon");});
test("vengono -> veng", function() {deepEqual( Stem("vengono"), "veng");});
test("veniate -> ven", function() {deepEqual( Stem("veniate"), "ven");});
test("venir -> ven", function() {deepEqual( Stem("venir"), "ven");});
test("venircela -> ven", function() {deepEqual( Stem("venircela"), "ven");});
test("venirci -> ven", function() {deepEqual( Stem("venirci"), "ven");});
test("venire -> ven", function() {deepEqual( Stem("venire"), "ven");});
test("venireinchinò -> venireinchin", function() {deepEqual( Stem("venireinchinò"), "venireinchin");});
test("venirgli -> ven", function() {deepEqual( Stem("venirgli"), "ven");});
test("venirle -> ven", function() {deepEqual( Stem("venirle"), "ven");});
test("venirlo -> ven", function() {deepEqual( Stem("venirlo"), "ven");});
test("venirne -> ven", function() {deepEqual( Stem("venirne"), "ven");});
test("venirsi -> ven", function() {deepEqual( Stem("venirsi"), "ven");});
test("venirvi -> ven", function() {deepEqual( Stem("venirvi"), "ven");});
test("venisse -> veniss", function() {deepEqual( Stem("venisse"), "veniss");});
test("venissero -> ven", function() {deepEqual( Stem("venissero"), "ven");});
test("venite -> ven", function() {deepEqual( Stem("venite"), "ven");});
test("venitemi -> venitem", function() {deepEqual( Stem("venitemi"), "venitem");});
test("veniva -> ven", function() {deepEqual( Stem("veniva"), "ven");});
test("venivamo -> ven", function() {deepEqual( Stem("venivamo"), "ven");});
test("venivan -> venivan", function() {deepEqual( Stem("venivan"), "venivan");});
test("venivano -> ven", function() {deepEqual( Stem("venivano"), "ven");});
test("venivo -> ven", function() {deepEqual( Stem("venivo"), "ven");});
test("venne -> venn", function() {deepEqual( Stem("venne"), "venn");});
test("venner -> venner", function() {deepEqual( Stem("venner"), "venner");});
test("vennero -> venner", function() {deepEqual( Stem("vennero"), "venner");});
test("venosa -> venos", function() {deepEqual( Stem("venosa"), "venos");});
test("vent -> vent", function() {deepEqual( Stem("vent"), "vent");});
test("ventaglio -> ventagl", function() {deepEqual( Stem("ventaglio"), "ventagl");});
test("ventata -> vent", function() {deepEqual( Stem("ventata"), "vent");});
test("ventenne -> ventenn", function() {deepEqual( Stem("ventenne"), "ventenn");});
test("ventennio -> ventenn", function() {deepEqual( Stem("ventennio"), "ventenn");});
test("venti -> vent", function() {deepEqual( Stem("venti"), "vent");});
test("venticello -> venticell", function() {deepEqual( Stem("venticello"), "venticell");});
test("venticinque -> venticinqu", function() {deepEqual( Stem("venticinque"), "venticinqu");});
test("ventidue -> ventidu", function() {deepEqual( Stem("ventidue"), "ventidu");});
test("ventilata -> ventil", function() {deepEqual( Stem("ventilata"), "ventil");});
test("ventilati -> ventil", function() {deepEqual( Stem("ventilati"), "ventil");});
test("ventimila -> ventimil", function() {deepEqual( Stem("ventimila"), "ventimil");});
test("ventina -> ventin", function() {deepEqual( Stem("ventina"), "ventin");});
test("ventiquattro -> ventiquattr", function() {deepEqual( Stem("ventiquattro"), "ventiquattr");});
test("ventisei -> ventise", function() {deepEqual( Stem("ventisei"), "ventise");});
test("ventisette -> ventisett", function() {deepEqual( Stem("ventisette"), "ventisett");});
test("ventitre -> ventitr", function() {deepEqual( Stem("ventitre"), "ventitr");});
test("vento -> vent", function() {deepEqual( Stem("vento"), "vent");});
test("ventre -> ventr", function() {deepEqual( Stem("ventre"), "ventr");});
test("ventriloqua -> ventriloqu", function() {deepEqual( Stem("ventriloqua"), "ventriloqu");});
test("ventriloquo -> ventriloqu", function() {deepEqual( Stem("ventriloquo"), "ventriloqu");});
test("ventura -> ventur", function() {deepEqual( Stem("ventura"), "ventur");});
test("venture -> ventur", function() {deepEqual( Stem("venture"), "ventur");});
test("ventures -> ventures", function() {deepEqual( Stem("ventures"), "ventures");});
test("venturin -> venturin", function() {deepEqual( Stem("venturin"), "venturin");});
test("venturo -> ventur", function() {deepEqual( Stem("venturo"), "ventur");});
test("venturoni -> venturon", function() {deepEqual( Stem("venturoni"), "venturon");});
test("venuta -> ven", function() {deepEqual( Stem("venuta"), "ven");});
test("venutagli -> venutagl", function() {deepEqual( Stem("venutagli"), "venutagl");});
test("venutale -> venutal", function() {deepEqual( Stem("venutale"), "venutal");});
test("venutasi -> venutas", function() {deepEqual( Stem("venutasi"), "venutas");});
test("venute -> ven", function() {deepEqual( Stem("venute"), "ven");});
test("venuti -> ven", function() {deepEqual( Stem("venuti"), "ven");});
test("venuto -> ven", function() {deepEqual( Stem("venuto"), "ven");});
test("ver -> ver", function() {deepEqual( Stem("ver"), "ver");});
test("vera -> ver", function() {deepEqual( Stem("vera"), "ver");});
test("verace -> verac", function() {deepEqual( Stem("verace"), "verac");});
test("veracruz -> veracruz", function() {deepEqual( Stem("veracruz"), "veracruz");});
test("veramente -> ver", function() {deepEqual( Stem("veramente"), "ver");});
test("verbale -> verbal", function() {deepEqual( Stem("verbale"), "verbal");});
test("verbali -> verbal", function() {deepEqual( Stem("verbali"), "verbal");});
test("verbo -> verb", function() {deepEqual( Stem("verbo"), "verb");});
test("vercelli -> vercell", function() {deepEqual( Stem("vercelli"), "vercell");});
test("verde -> verd", function() {deepEqual( Stem("verde"), "verd");});
test("verdè -> verd", function() {deepEqual( Stem("verdè"), "verd");});
test("verdecupi -> verdecup", function() {deepEqual( Stem("verdecupi"), "verdecup");});
test("verdettò -> verdett", function() {deepEqual( Stem("verdettò"), "verdett");});
test("verdi -> verd", function() {deepEqual( Stem("verdi"), "verd");});
test("verdure -> verdur", function() {deepEqual( Stem("verdure"), "verdur");});
test("vere -> ver", function() {deepEqual( Stem("vere"), "ver");});
test("verecondia -> verecond", function() {deepEqual( Stem("verecondia"), "verecond");});
test("vergani -> vergan", function() {deepEqual( Stem("vergani"), "vergan");});
test("verginale -> verginal", function() {deepEqual( Stem("verginale"), "verginal");});
test("verginali -> verginal", function() {deepEqual( Stem("verginali"), "verginal");});
test("vergine -> vergin", function() {deepEqual( Stem("vergine"), "vergin");});
test("verginità -> vergin", function() {deepEqual( Stem("verginità"), "vergin");});
test("vergogna -> vergogn", function() {deepEqual( Stem("vergogna"), "vergogn");});
test("vergognandosi -> vergogn", function() {deepEqual( Stem("vergognandosi"), "vergogn");});
test("vergognassero -> vergogn", function() {deepEqual( Stem("vergognassero"), "vergogn");});
test("vergognava -> vergogn", function() {deepEqual( Stem("vergognava"), "vergogn");});
test("vergognosa -> vergogn", function() {deepEqual( Stem("vergognosa"), "vergogn");});
test("vergognosi -> vergogn", function() {deepEqual( Stem("vergognosi"), "vergogn");});
test("vergognoso -> vergogn", function() {deepEqual( Stem("vergognoso"), "vergogn");});
test("veri -> ver", function() {deepEqual( Stem("veri"), "ver");});
test("verifi -> verif", function() {deepEqual( Stem("verifi"), "verif");});
test("verifica -> verif", function() {deepEqual( Stem("verifica"), "verif");});
test("verificar -> verific", function() {deepEqual( Stem("verificar"), "verific");});
test("verificare -> verific", function() {deepEqual( Stem("verificare"), "verific");});
test("verificarsi -> verific", function() {deepEqual( Stem("verificarsi"), "verific");});
test("verificate -> verific", function() {deepEqual( Stem("verificate"), "verific");});
test("verificatesi -> verificates", function() {deepEqual( Stem("verificatesi"), "verificates");});
test("verificati -> verific", function() {deepEqual( Stem("verificati"), "verific");});
test("verificato -> verific", function() {deepEqual( Stem("verificato"), "verific");});
test("verificatore -> verif", function() {deepEqual( Stem("verificatore"), "verif");});
test("verificatori -> verif", function() {deepEqual( Stem("verificatori"), "verif");});
test("verificatosi -> verificat", function() {deepEqual( Stem("verificatosi"), "verificat");});
test("verifiche -> verif", function() {deepEqual( Stem("verifiche"), "verif");});
test("verificheremo -> verific", function() {deepEqual( Stem("verificheremo"), "verific");});
test("verifichi -> verif", function() {deepEqual( Stem("verifichi"), "verif");});
test("verifichino -> verifichin", function() {deepEqual( Stem("verifichino"), "verifichin");});
test("verisimile -> verisimil", function() {deepEqual( Stem("verisimile"), "verisimil");});
test("verita -> ver", function() {deepEqual( Stem("verita"), "ver");});
test("verità -> verit", function() {deepEqual( Stem("verità"), "verit");});
test("verlag -> verlag", function() {deepEqual( Stem("verlag"), "verlag");});
test("verlanti -> verlant", function() {deepEqual( Stem("verlanti"), "verlant");});
test("verme -> verm", function() {deepEqual( Stem("verme"), "verm");});
test("vermigli -> vermigl", function() {deepEqual( Stem("vermigli"), "vermigl");});
test("vermiglie -> vermigl", function() {deepEqual( Stem("vermiglie"), "vermigl");});
test("vermiglio -> vermigl", function() {deepEqual( Stem("vermiglio"), "vermigl");});
test("vernaccia -> vernacc", function() {deepEqual( Stem("vernaccia"), "vernacc");});
test("vernì -> vern", function() {deepEqual( Stem("vernì"), "vern");});
test("vernice -> vernic", function() {deepEqual( Stem("vernice"), "vernic");});
test("vero -> ver", function() {deepEqual( Stem("vero"), "ver");});
test("verona -> veron", function() {deepEqual( Stem("verona"), "veron");});
test("veronese -> verones", function() {deepEqual( Stem("veronese"), "verones");});
test("veronica -> veron", function() {deepEqual( Stem("veronica"), "veron");});
test("verosimile -> verosimil", function() {deepEqual( Stem("verosimile"), "verosimil");});
test("verrà -> verr", function() {deepEqual( Stem("verrà"), "verr");});
test("verrai -> verra", function() {deepEqual( Stem("verrai"), "verra");});
test("verranno -> verrann", function() {deepEqual( Stem("verranno"), "verrann");});
test("verrebbe -> verrebb", function() {deepEqual( Stem("verrebbe"), "verrebb");});
test("verrebbero -> verrebber", function() {deepEqual( Stem("verrebbero"), "verrebber");});
test("verrei -> verre", function() {deepEqual( Stem("verrei"), "verre");});
test("verremo -> verrem", function() {deepEqual( Stem("verremo"), "verrem");});
test("verri -> verr", function() {deepEqual( Stem("verri"), "verr");});
test("verrò -> verr", function() {deepEqual( Stem("verrò"), "verr");});
test("versacci -> versacc", function() {deepEqual( Stem("versacci"), "versacc");});
test("versaccio -> versacc", function() {deepEqual( Stem("versaccio"), "versacc");});
test("versamenti -> vers", function() {deepEqual( Stem("versamenti"), "vers");});
test("versamento -> vers", function() {deepEqual( Stem("versamento"), "vers");});
test("versante -> versant", function() {deepEqual( Stem("versante"), "versant");});
test("versanti -> versant", function() {deepEqual( Stem("versanti"), "versant");});
test("versare -> vers", function() {deepEqual( Stem("versare"), "vers");});
test("versati -> vers", function() {deepEqual( Stem("versati"), "vers");});
test("versatile -> versatil", function() {deepEqual( Stem("versatile"), "versatil");});
test("versato -> vers", function() {deepEqual( Stem("versato"), "vers");});
test("versetti -> versett", function() {deepEqual( Stem("versetti"), "versett");});
test("versetto -> versett", function() {deepEqual( Stem("versetto"), "versett");});
test("versi -> vers", function() {deepEqual( Stem("versi"), "vers");});
test("versilia -> versil", function() {deepEqual( Stem("versilia"), "versil");});
test("versione -> version", function() {deepEqual( Stem("versione"), "version");});
test("verso -> vers", function() {deepEqual( Stem("verso"), "vers");});
test("vert -> vert", function() {deepEqual( Stem("vert"), "vert");});
test("vertenza -> vertenz", function() {deepEqual( Stem("vertenza"), "vertenz");});
test("vertenze -> vertenz", function() {deepEqual( Stem("vertenze"), "vertenz");});
test("verticale -> vertical", function() {deepEqual( Stem("verticale"), "vertical");});
test("verticalizzato -> verticalizz", function() {deepEqual( Stem("verticalizzato"), "verticalizz");});
test("verticalmente -> vertical", function() {deepEqual( Stem("verticalmente"), "vertical");});
test("vertice -> vertic", function() {deepEqual( Stem("vertice"), "vertic");});
test("vertici -> vertic", function() {deepEqual( Stem("vertici"), "vertic");});
test("verticistica -> verticist", function() {deepEqual( Stem("verticistica"), "verticist");});
test("verum -> verum", function() {deepEqual( Stem("verum"), "verum");});
test("verun -> verun", function() {deepEqual( Stem("verun"), "verun");});
test("veruna -> verun", function() {deepEqual( Stem("veruna"), "verun");});
test("verzura -> verzur", function() {deepEqual( Stem("verzura"), "verzur");});
test("ves -> ves", function() {deepEqual( Stem("ves"), "ves");});
test("vescovi -> vescov", function() {deepEqual( Stem("vescovi"), "vescov");});
test("vescovo -> vescov", function() {deepEqual( Stem("vescovo"), "vescov");});
test("vespa -> vesp", function() {deepEqual( Stem("vespa"), "vesp");});
test("vespaio -> vespai", function() {deepEqual( Stem("vespaio"), "vespai");});
test("vespucci -> vespucc", function() {deepEqual( Stem("vespucci"), "vespucc");});
test("vessare -> vess", function() {deepEqual( Stem("vessare"), "vess");});
test("vessato -> vess", function() {deepEqual( Stem("vessato"), "vess");});
test("vessazione -> vessazion", function() {deepEqual( Stem("vessazione"), "vessazion");});
test("vessazioni -> vessazion", function() {deepEqual( Stem("vessazioni"), "vessazion");});
test("vessillo -> vessill", function() {deepEqual( Stem("vessillo"), "vessill");});
test("vesta -> vest", function() {deepEqual( Stem("vesta"), "vest");});
test("veste -> vest", function() {deepEqual( Stem("veste"), "vest");});
test("vestendo -> vest", function() {deepEqual( Stem("vestendo"), "vest");});
test("vestendolo -> vest", function() {deepEqual( Stem("vestendolo"), "vest");});
test("vesti -> vest", function() {deepEqual( Stem("vesti"), "vest");});
test("vestì -> vest", function() {deepEqual( Stem("vestì"), "vest");});
test("vestiario -> vestiar", function() {deepEqual( Stem("vestiario"), "vestiar");});
test("vestigi -> vestig", function() {deepEqual( Stem("vestigi"), "vestig");});
test("vestigio -> vestig", function() {deepEqual( Stem("vestigio"), "vestig");});
test("vestigios -> vestigios", function() {deepEqual( Stem("vestigios"), "vestigios");});
test("vestimento -> vest", function() {deepEqual( Stem("vestimento"), "vest");});
test("vestir -> vest", function() {deepEqual( Stem("vestir"), "vest");});
test("vestire -> vest", function() {deepEqual( Stem("vestire"), "vest");});
test("vestirsi -> vest", function() {deepEqual( Stem("vestirsi"), "vest");});
test("vestita -> vest", function() {deepEqual( Stem("vestita"), "vest");});
test("vestite -> vest", function() {deepEqual( Stem("vestite"), "vest");});
test("vestitevi -> vestit", function() {deepEqual( Stem("vestitevi"), "vestit");});
test("vestiti -> vest", function() {deepEqual( Stem("vestiti"), "vest");});
test("vestito -> vest", function() {deepEqual( Stem("vestito"), "vest");});
test("vestitosi -> vestit", function() {deepEqual( Stem("vestitosi"), "vestit");});
test("vestiva -> vest", function() {deepEqual( Stem("vestiva"), "vest");});
test("vestizione -> vestizion", function() {deepEqual( Stem("vestizione"), "vestizion");});
test("vesto -> vest", function() {deepEqual( Stem("vesto"), "vest");});
test("veterani -> veteran", function() {deepEqual( Stem("veterani"), "veteran");});
test("veterinario -> veterinar", function() {deepEqual( Stem("veterinario"), "veterinar");});
test("vetr -> vetr", function() {deepEqual( Stem("vetr"), "vetr");});
test("vetrate -> vetr", function() {deepEqual( Stem("vetrate"), "vetr");});
test("vetri -> vetr", function() {deepEqual( Stem("vetri"), "vetr");});
test("vetriate -> vetr", function() {deepEqual( Stem("vetriate"), "vetr");});
test("vetro -> vetr", function() {deepEqual( Stem("vetro"), "vetr");});
test("vetta -> vett", function() {deepEqual( Stem("vetta"), "vett");});
test("vetticciola -> vetticciol", function() {deepEqual( Stem("vetticciola"), "vetticciol");});
test("vettovagliar -> vettovagl", function() {deepEqual( Stem("vettovagliar"), "vettovagl");});
test("vettura -> vettur", function() {deepEqual( Stem("vettura"), "vettur");});
test("vetture -> vettur", function() {deepEqual( Stem("vetture"), "vettur");});
test("vezù -> vezù", function() {deepEqual( Stem("vezù"), "vezù");});
test("vezzo -> vezz", function() {deepEqual( Stem("vezzo"), "vezz");});
test("vg -> vg", function() {deepEqual( Stem("vg"), "vg");});
test("vi -> vi", function() {deepEqual( Stem("vi"), "vi");});
test("via -> via", function() {deepEqual( Stem("via"), "via");});
test("viadana -> viadan", function() {deepEqual( Stem("viadana"), "viadan");});
test("viaggetto -> viaggett", function() {deepEqual( Stem("viaggetto"), "viaggett");});
test("viaggi -> viagg", function() {deepEqual( Stem("viaggi"), "viagg");});
test("viaggia -> viagg", function() {deepEqual( Stem("viaggia"), "viagg");});
test("viaggiano -> viagg", function() {deepEqual( Stem("viaggiano"), "viagg");});
test("viaggiar -> viagg", function() {deepEqual( Stem("viaggiar"), "viagg");});
test("viaggiare -> viagg", function() {deepEqual( Stem("viaggiare"), "viagg");});
test("viaggiatore -> viaggiator", function() {deepEqual( Stem("viaggiatore"), "viaggiator");});
test("viaggiatori -> viaggiator", function() {deepEqual( Stem("viaggiatori"), "viaggiator");});
test("viaggiava -> viagg", function() {deepEqual( Stem("viaggiava"), "viagg");});
test("viaggiavano -> viagg", function() {deepEqual( Stem("viaggiavano"), "viagg");});
test("viaggio -> viagg", function() {deepEqual( Stem("viaggio"), "viagg");});
test("viale -> vial", function() {deepEqual( Stem("viale"), "vial");});
test("viali -> vial", function() {deepEqual( Stem("viali"), "vial");});
test("vialli -> viall", function() {deepEqual( Stem("vialli"), "viall");});
test("viamare -> viam", function() {deepEqual( Stem("viamare"), "viam");});
test("viandante -> viandant", function() {deepEqual( Stem("viandante"), "viandant");});
test("viandanti -> viandant", function() {deepEqual( Stem("viandanti"), "viandant");});
test("vianello -> vianell", function() {deepEqual( Stem("vianello"), "vianell");});
test("vianini -> vianin", function() {deepEqual( Stem("vianini"), "vianin");});
test("viareggina -> viareggin", function() {deepEqual( Stem("viareggina"), "viareggin");});
test("viareggini -> viareggin", function() {deepEqual( Stem("viareggini"), "viareggin");});
test("viareggio -> viaregg", function() {deepEqual( Stem("viareggio"), "viaregg");});
test("viatico -> viatic", function() {deepEqual( Stem("viatico"), "viatic");});
test("vibici -> vibic", function() {deepEqual( Stem("vibici"), "vibic");});
test("vibo -> vib", function() {deepEqual( Stem("vibo"), "vib");});
test("vibrante -> vibrant", function() {deepEqual( Stem("vibrante"), "vibrant");});
test("vicario -> vicar", function() {deepEqual( Stem("vicario"), "vicar");});
test("vice -> vic", function() {deepEqual( Stem("vice"), "vic");});
test("viceallenatore -> viceallen", function() {deepEqual( Stem("viceallenatore"), "viceallen");});
test("vicecaposervizio -> vicecaposerviz", function() {deepEqual( Stem("vicecaposervizio"), "vicecaposerviz");});
test("vicecomandante -> vicecomand", function() {deepEqual( Stem("vicecomandante"), "vicecomand");});
test("vicedirettore -> vicedirettor", function() {deepEqual( Stem("vicedirettore"), "vicedirettor");});
test("vicenda -> vic", function() {deepEqual( Stem("vicenda"), "vic");});
test("vicende -> vic", function() {deepEqual( Stem("vicende"), "vic");});
test("vicendevole -> vicendevol", function() {deepEqual( Stem("vicendevole"), "vicendevol");});
test("vicendevoli -> vicendevol", function() {deepEqual( Stem("vicendevoli"), "vicendevol");});
test("vicendevolmente -> vicendevol", function() {deepEqual( Stem("vicendevolmente"), "vicendevol");});
test("vicente -> vicent", function() {deepEqual( Stem("vicente"), "vicent");});
test("vicentina -> vicentin", function() {deepEqual( Stem("vicentina"), "vicentin");});
test("vicentini -> vicentin", function() {deepEqual( Stem("vicentini"), "vicentin");});
test("vicentino -> vicentin", function() {deepEqual( Stem("vicentino"), "vicentin");});
test("vicenza -> vicenz", function() {deepEqual( Stem("vicenza"), "vicenz");});
test("vicepresidente -> vicepresident", function() {deepEqual( Stem("vicepresidente"), "vicepresident");});
test("viceprimo -> viceprim", function() {deepEqual( Stem("viceprimo"), "viceprim");});
test("vicerè -> vicer", function() {deepEqual( Stem("vicerè"), "vicer");});
test("vicesegretario -> vicesegretar", function() {deepEqual( Stem("vicesegretario"), "vicesegretar");});
test("viceversa -> vicevers", function() {deepEqual( Stem("viceversa"), "vicevers");});
test("vicina -> vicin", function() {deepEqual( Stem("vicina"), "vicin");});
test("vicinanza -> vicin", function() {deepEqual( Stem("vicinanza"), "vicin");});
test("vicinato -> vicin", function() {deepEqual( Stem("vicinato"), "vicin");});
test("vicine -> vicin", function() {deepEqual( Stem("vicine"), "vicin");});
test("vicini -> vicin", function() {deepEqual( Stem("vicini"), "vicin");});
test("vicino -> vicin", function() {deepEqual( Stem("vicino"), "vicin");});
test("vicki -> vick", function() {deepEqual( Stem("vicki"), "vick");});
test("vicky -> vicky", function() {deepEqual( Stem("vicky"), "vicky");});
test("vico -> vic", function() {deepEqual( Stem("vico"), "vic");});
test("vicoforte -> vicofort", function() {deepEqual( Stem("vicoforte"), "vicofort");});
test("vicolo -> vicol", function() {deepEqual( Stem("vicolo"), "vicol");});
test("victoria -> victor", function() {deepEqual( Stem("victoria"), "victor");});
test("vida -> vid", function() {deepEqual( Stem("vida"), "vid");});
test("vide -> vid", function() {deepEqual( Stem("vide"), "vid");});
test("videlizet -> videlizet", function() {deepEqual( Stem("videlizet"), "videlizet");});
test("videntur -> videntur", function() {deepEqual( Stem("videntur"), "videntur");});
test("video -> vide", function() {deepEqual( Stem("video"), "vide");});
test("vider -> vider", function() {deepEqual( Stem("vider"), "vider");});
test("videro -> vider", function() {deepEqual( Stem("videro"), "vider");});
test("vidi -> vid", function() {deepEqual( Stem("vidi"), "vid");});
test("vidit -> vidit", function() {deepEqual( Stem("vidit"), "vidit");});
test("vido -> vid", function() {deepEqual( Stem("vido"), "vid");});
test("vidù -> vidù", function() {deepEqual( Stem("vidù"), "vidù");});
test("vie -> vie", function() {deepEqual( Stem("vie"), "vie");});
test("vien -> vien", function() {deepEqual( Stem("vien"), "vien");});
test("viene -> vien", function() {deepEqual( Stem("viene"), "vien");});
test("vieni -> vien", function() {deepEqual( Stem("vieni"), "vien");});
test("vienna -> vienn", function() {deepEqual( Stem("vienna"), "vienn");});
test("vierchowod -> vierchowod", function() {deepEqual( Stem("vierchowod"), "vierchowod");});
test("vieri -> vier", function() {deepEqual( Stem("vieri"), "vier");});
test("vieta -> viet", function() {deepEqual( Stem("vieta"), "viet");});
test("vietate -> viet", function() {deepEqual( Stem("vietate"), "viet");});
test("vietati -> viet", function() {deepEqual( Stem("vietati"), "viet");});
test("vietato -> viet", function() {deepEqual( Stem("vietato"), "viet");});
test("viezzoli -> viezzol", function() {deepEqual( Stem("viezzoli"), "viezzol");});
test("vigente -> vigent", function() {deepEqual( Stem("vigente"), "vigent");});
test("vigilano -> vigil", function() {deepEqual( Stem("vigilano"), "vigil");});
test("vigilante -> vigil", function() {deepEqual( Stem("vigilante"), "vigil");});
test("vigilantes -> vigilantes", function() {deepEqual( Stem("vigilantes"), "vigilantes");});
test("vigilanza -> vigil", function() {deepEqual( Stem("vigilanza"), "vigil");});
test("vigilar -> vigil", function() {deepEqual( Stem("vigilar"), "vigil");});
test("vigile -> vigil", function() {deepEqual( Stem("vigile"), "vigil");});
test("vigili -> vigil", function() {deepEqual( Stem("vigili"), "vigil");});
test("vigilia -> vigil", function() {deepEqual( Stem("vigilia"), "vigil");});
test("vigliacchi -> vigliacc", function() {deepEqual( Stem("vigliacchi"), "vigliacc");});
test("vigna -> vign", function() {deepEqual( Stem("vigna"), "vign");});
test("vignati -> vign", function() {deepEqual( Stem("vignati"), "vign");});
test("vigne -> vign", function() {deepEqual( Stem("vigne"), "vign");});
test("vigneti -> vignet", function() {deepEqual( Stem("vigneti"), "vignet");});
test("vignetta -> vignett", function() {deepEqual( Stem("vignetta"), "vignett");});
test("vignini -> vignin", function() {deepEqual( Stem("vignini"), "vignin");});
test("vigore -> vigor", function() {deepEqual( Stem("vigore"), "vigor");});
test("vigorelli -> vigorell", function() {deepEqual( Stem("vigorelli"), "vigorell");});
test("vigorosa -> vigor", function() {deepEqual( Stem("vigorosa"), "vigor");});
test("vigorosamente -> vigor", function() {deepEqual( Stem("vigorosamente"), "vigor");});
test("vigoroso -> vigor", function() {deepEqual( Stem("vigoroso"), "vigor");});
test("viii -> vii", function() {deepEqual( Stem("viii"), "vii");});
test("viktor -> viktor", function() {deepEqual( Stem("viktor"), "viktor");});
test("vil -> vil", function() {deepEqual( Stem("vil"), "vil");});
test("vile -> vil", function() {deepEqual( Stem("vile"), "vil");});
test("vili -> vil", function() {deepEqual( Stem("vili"), "vil");});
test("vilipendio -> vilipend", function() {deepEqual( Stem("vilipendio"), "vilipend");});
test("vilipesa -> vilipes", function() {deepEqual( Stem("vilipesa"), "vilipes");});
test("villa -> vill", function() {deepEqual( Stem("villa"), "vill");});
test("villafranca -> villafranc", function() {deepEqual( Stem("villafranca"), "villafranc");});
test("village -> villag", function() {deepEqual( Stem("village"), "villag");});
test("villaggi -> villagg", function() {deepEqual( Stem("villaggi"), "villagg");});
test("villaggio -> villagg", function() {deepEqual( Stem("villaggio"), "villagg");});
test("villagigo -> villagig", function() {deepEqual( Stem("villagigo"), "villagig");});
test("villana -> villan", function() {deepEqual( Stem("villana"), "villan");});
test("villanaccio -> villanacc", function() {deepEqual( Stem("villanaccio"), "villanacc");});
test("villanelle -> villanell", function() {deepEqual( Stem("villanelle"), "villanell");});
test("villani -> villan", function() {deepEqual( Stem("villani"), "villan");});
test("villanià -> villan", function() {deepEqual( Stem("villanià"), "villan");});
test("villanie -> villan", function() {deepEqual( Stem("villanie"), "villan");});
test("villano -> vill", function() {deepEqual( Stem("villano"), "vill");});
test("ville -> vill", function() {deepEqual( Stem("ville"), "vill");});
test("villeggianti -> villegg", function() {deepEqual( Stem("villeggianti"), "villegg");});
test("villeggiare -> villegg", function() {deepEqual( Stem("villeggiare"), "villegg");});
test("villeggiatura -> villeggiatur", function() {deepEqual( Stem("villeggiatura"), "villeggiatur");});
test("villeggiature -> villeggiatur", function() {deepEqual( Stem("villeggiature"), "villeggiatur");});
test("villeggiava -> villegg", function() {deepEqual( Stem("villeggiava"), "villegg");});
test("villorba -> villorb", function() {deepEqual( Stem("villorba"), "villorb");});
test("vilmente -> vilment", function() {deepEqual( Stem("vilmente"), "vilment");});
test("viltà -> vilt", function() {deepEqual( Stem("viltà"), "vilt");});
test("vilucchioni -> vilucchion", function() {deepEqual( Stem("vilucchioni"), "vilucchion");});
test("vimercati -> vimerc", function() {deepEqual( Stem("vimercati"), "vimerc");});
test("vin -> vin", function() {deepEqual( Stem("vin"), "vin");});
test("vince -> vinc", function() {deepEqual( Stem("vince"), "vinc");});
test("vincendone -> vinc", function() {deepEqual( Stem("vincendone"), "vinc");});
test("vincent -> vincent", function() {deepEqual( Stem("vincent"), "vincent");});
test("vincente -> vincent", function() {deepEqual( Stem("vincente"), "vincent");});
test("vincenzo -> vincenz", function() {deepEqual( Stem("vincenzo"), "vincenz");});
test("vincer -> vincer", function() {deepEqual( Stem("vincer"), "vincer");});
test("vincerà -> vinc", function() {deepEqual( Stem("vincerà"), "vinc");});
test("vincere -> vinc", function() {deepEqual( Stem("vincere"), "vinc");});
test("vinceremo -> vinc", function() {deepEqual( Stem("vinceremo"), "vinc");});
test("vincerla -> vinc", function() {deepEqual( Stem("vincerla"), "vinc");});
test("vincerlo -> vinc", function() {deepEqual( Stem("vincerlo"), "vinc");});
test("vinceva -> vinc", function() {deepEqual( Stem("vinceva"), "vinc");});
test("vinci -> vinc", function() {deepEqual( Stem("vinci"), "vinc");});
test("vinciate -> vinc", function() {deepEqual( Stem("vinciate"), "vinc");});
test("vincitore -> vincitor", function() {deepEqual( Stem("vincitore"), "vincitor");});
test("vincitori -> vincitor", function() {deepEqual( Stem("vincitori"), "vincitor");});
test("vincolare -> vincol", function() {deepEqual( Stem("vincolare"), "vincol");});
test("vincolati -> vincol", function() {deepEqual( Stem("vincolati"), "vincol");});
test("vincoli -> vincol", function() {deepEqual( Stem("vincoli"), "vincol");});
test("vincono -> vinc", function() {deepEqual( Stem("vincono"), "vinc");});
test("vinee -> vine", function() {deepEqual( Stem("vinee"), "vine");});
test("vini -> vin", function() {deepEqual( Stem("vini"), "vin");});
test("vino -> vin", function() {deepEqual( Stem("vino"), "vin");});
test("vinse -> vins", function() {deepEqual( Stem("vinse"), "vins");});
test("vinsero -> vinser", function() {deepEqual( Stem("vinsero"), "vinser");});
test("vinta -> vint", function() {deepEqual( Stem("vinta"), "vint");});
test("vinti -> vint", function() {deepEqual( Stem("vinti"), "vint");});
test("vinto -> vint", function() {deepEqual( Stem("vinto"), "vint");});
test("viola -> viol", function() {deepEqual( Stem("viola"), "viol");});
test("violabile -> violabil", function() {deepEqual( Stem("violabile"), "violabil");});
test("violabilissimo -> violabilissim", function() {deepEqual( Stem("violabilissimo"), "violabilissim");});
test("violacei -> violace", function() {deepEqual( Stem("violacei"), "violace");});
test("violante -> violant", function() {deepEqual( Stem("violante"), "violant");});
test("violare -> viol", function() {deepEqual( Stem("violare"), "viol");});
test("violato -> viol", function() {deepEqual( Stem("violato"), "viol");});
test("violazione -> violazion", function() {deepEqual( Stem("violazione"), "violazion");});
test("violazioni -> violazion", function() {deepEqual( Stem("violazioni"), "violazion");});
test("violenta -> violent", function() {deepEqual( Stem("violenta"), "violent");});
test("violente -> violent", function() {deepEqual( Stem("violente"), "violent");});
test("violentemente -> violent", function() {deepEqual( Stem("violentemente"), "violent");});
test("violenti -> violent", function() {deepEqual( Stem("violenti"), "violent");});
test("violento -> violent", function() {deepEqual( Stem("violento"), "violent");});
test("violenza -> violenz", function() {deepEqual( Stem("violenza"), "violenz");});
test("violenze -> violenz", function() {deepEqual( Stem("violenze"), "violenz");});
test("viottola -> viottol", function() {deepEqual( Stem("viottola"), "viottol");});
test("viottole -> viottol", function() {deepEqual( Stem("viottole"), "viottol");});
test("vip -> vip", function() {deepEqual( Stem("vip"), "vip");});
test("virale -> viral", function() {deepEqual( Stem("virale"), "viral");});
test("virdò -> vird", function() {deepEqual( Stem("virdò"), "vird");});
test("virginia -> virgin", function() {deepEqual( Stem("virginia"), "virgin");});
test("virgole -> virgol", function() {deepEqual( Stem("virgole"), "virgol");});
test("virgolettato -> virgolett", function() {deepEqual( Stem("virgolettato"), "virgolett");});
test("virgolette -> virgolett", function() {deepEqual( Stem("virgolette"), "virgolett");});
test("virile -> viril", function() {deepEqual( Stem("virile"), "viril");});
test("virilità -> viril", function() {deepEqual( Stem("virilità"), "viril");});
test("virtu -> virtu", function() {deepEqual( Stem("virtu"), "virtu");});
test("virtù -> virtù", function() {deepEqual( Stem("virtù"), "virtù");});
test("virtuale -> virtual", function() {deepEqual( Stem("virtuale"), "virtual");});
test("virtuosamente -> virtuos", function() {deepEqual( Stem("virtuosamente"), "virtuos");});
test("virtuose -> virtuos", function() {deepEqual( Stem("virtuose"), "virtuos");});
test("virtuosi -> virtuos", function() {deepEqual( Stem("virtuosi"), "virtuos");});
test("virtuoso -> virtuos", function() {deepEqual( Stem("virtuoso"), "virtuos");});
test("vis -> vis", function() {deepEqual( Stem("vis"), "vis");});
test("visacci -> visacc", function() {deepEqual( Stem("visacci"), "visacc");});
test("visaccio -> visacc", function() {deepEqual( Stem("visaccio"), "visacc");});
test("viscere -> visc", function() {deepEqual( Stem("viscere"), "visc");});
test("visco -> visc", function() {deepEqual( Stem("visco"), "visc");});
test("visconteo -> visconte", function() {deepEqual( Stem("visconteo"), "visconte");});
test("visconti -> viscont", function() {deepEqual( Stem("visconti"), "viscont");});
test("visere -> vis", function() {deepEqual( Stem("visere"), "vis");});
test("visi -> vis", function() {deepEqual( Stem("visi"), "vis");});
test("visibile -> visibil", function() {deepEqual( Stem("visibile"), "visibil");});
test("visibili -> visibil", function() {deepEqual( Stem("visibili"), "visibil");});
test("visibilio -> visibil", function() {deepEqual( Stem("visibilio"), "visibil");});
test("visibilità -> visibil", function() {deepEqual( Stem("visibilità"), "visibil");});
test("visibilmente -> visibil", function() {deepEqual( Stem("visibilmente"), "visibil");});
test("visiera -> visier", function() {deepEqual( Stem("visiera"), "visier");});
test("visino -> visin", function() {deepEqual( Stem("visino"), "visin");});
test("visione -> vision", function() {deepEqual( Stem("visione"), "vision");});
test("visioni -> vision", function() {deepEqual( Stem("visioni"), "vision");});
test("visita -> vis", function() {deepEqual( Stem("visita"), "vis");});
test("visitando -> visit", function() {deepEqual( Stem("visitando"), "visit");});
test("visitar -> visit", function() {deepEqual( Stem("visitar"), "visit");});
test("visitare -> visit", function() {deepEqual( Stem("visitare"), "visit");});
test("visitarli -> visit", function() {deepEqual( Stem("visitarli"), "visit");});
test("visitarono -> visit", function() {deepEqual( Stem("visitarono"), "visit");});
test("visitassero -> visit", function() {deepEqual( Stem("visitassero"), "visit");});
test("visitate -> visit", function() {deepEqual( Stem("visitate"), "visit");});
test("visitato -> visit", function() {deepEqual( Stem("visitato"), "visit");});
test("visitatori -> visit", function() {deepEqual( Stem("visitatori"), "visit");});
test("visitava -> visit", function() {deepEqual( Stem("visitava"), "visit");});
test("visitavano -> visit", function() {deepEqual( Stem("visitavano"), "visit");});
test("visite -> vis", function() {deepEqual( Stem("visite"), "vis");});
test("visitò -> visit", function() {deepEqual( Stem("visitò"), "visit");});
test("viso -> vis", function() {deepEqual( Stem("viso"), "vis");});
test("visoni -> vison", function() {deepEqual( Stem("visoni"), "vison");});
test("vispo -> visp", function() {deepEqual( Stem("vispo"), "visp");});
test("visse -> viss", function() {deepEqual( Stem("visse"), "viss");});
test("vissero -> visser", function() {deepEqual( Stem("vissero"), "visser");});
test("vissuta -> viss", function() {deepEqual( Stem("vissuta"), "viss");});
test("vissuto -> viss", function() {deepEqual( Stem("vissuto"), "viss");});
test("vista -> vist", function() {deepEqual( Stem("vista"), "vist");});
test("vistala -> vistal", function() {deepEqual( Stem("vistala"), "vistal");});
test("viste -> vist", function() {deepEqual( Stem("viste"), "vist");});
test("visti -> vist", function() {deepEqual( Stem("visti"), "vist");});
test("visto -> vist", function() {deepEqual( Stem("visto"), "vist");});
test("vistolo -> vistol", function() {deepEqual( Stem("vistolo"), "vistol");});
test("vistose -> vistos", function() {deepEqual( Stem("vistose"), "vistos");});
test("vistoselo -> vistosel", function() {deepEqual( Stem("vistoselo"), "vistosel");});
test("vistosi -> vistos", function() {deepEqual( Stem("vistosi"), "vistos");});
test("vistoso -> vistos", function() {deepEqual( Stem("vistoso"), "vistos");});
test("viswanathan -> viswanathan", function() {deepEqual( Stem("viswanathan"), "viswanathan");});
test("vita -> vit", function() {deepEqual( Stem("vita"), "vit");});
test("vità -> vit", function() {deepEqual( Stem("vità"), "vit");});
test("vitale -> vital", function() {deepEqual( Stem("vitale"), "vital");});
test("vitali -> vital", function() {deepEqual( Stem("vitali"), "vital");});
test("vitalità -> vital", function() {deepEqual( Stem("vitalità"), "vital");});
test("vite -> vit", function() {deepEqual( Stem("vite"), "vit");});
test("viti -> vit", function() {deepEqual( Stem("viti"), "vit");});
test("viticci -> viticc", function() {deepEqual( Stem("viticci"), "viticc");});
test("vitiello -> vitiell", function() {deepEqual( Stem("vitiello"), "vitiell");});
test("vito -> vit", function() {deepEqual( Stem("vito"), "vit");});
test("vittima -> vittim", function() {deepEqual( Stem("vittima"), "vittim");});
test("vittime -> vittim", function() {deepEqual( Stem("vittime"), "vittim");});
test("vitto -> vitt", function() {deepEqual( Stem("vitto"), "vitt");});
test("vittore -> vittor", function() {deepEqual( Stem("vittore"), "vittor");});
test("vittoria -> vittor", function() {deepEqual( Stem("vittoria"), "vittor");});
test("vittorie -> vittor", function() {deepEqual( Stem("vittorie"), "vittor");});
test("vittorio -> vittor", function() {deepEqual( Stem("vittorio"), "vittor");});
test("vittoriosa -> vittor", function() {deepEqual( Stem("vittoriosa"), "vittor");});
test("vituperato -> vituper", function() {deepEqual( Stem("vituperato"), "vituper");});
test("vituperosa -> vituper", function() {deepEqual( Stem("vituperosa"), "vituper");});
test("viuzza -> viuzz", function() {deepEqual( Stem("viuzza"), "viuzz");});
test("viva -> viv", function() {deepEqual( Stem("viva"), "viv");});
test("vivace -> vivac", function() {deepEqual( Stem("vivace"), "vivac");});
test("vivaci -> vivac", function() {deepEqual( Stem("vivaci"), "vivac");});
test("vivacità -> vivac", function() {deepEqual( Stem("vivacità"), "vivac");});
test("vivacizzato -> vivacizz", function() {deepEqual( Stem("vivacizzato"), "vivacizz");});
test("vivaldi -> vivald", function() {deepEqual( Stem("vivaldi"), "vivald");});
test("vivamente -> viv", function() {deepEqual( Stem("vivamente"), "viv");});
test("vivanda -> vivand", function() {deepEqual( Stem("vivanda"), "vivand");});
test("vivande -> vivand", function() {deepEqual( Stem("vivande"), "vivand");});
test("vive -> viv", function() {deepEqual( Stem("vive"), "viv");});
test("vivè -> viv", function() {deepEqual( Stem("vivè"), "viv");});
test("vivendo -> viv", function() {deepEqual( Stem("vivendo"), "viv");});
test("vivente -> vivent", function() {deepEqual( Stem("vivente"), "vivent");});
test("viventi -> vivent", function() {deepEqual( Stem("viventi"), "vivent");});
test("viver -> viver", function() {deepEqual( Stem("viver"), "viver");});
test("vivere -> viv", function() {deepEqual( Stem("vivere"), "viv");});
test("viveri -> viver", function() {deepEqual( Stem("viveri"), "viver");});
test("viverò -> viv", function() {deepEqual( Stem("viverò"), "viv");});
test("vivesse -> vivess", function() {deepEqual( Stem("vivesse"), "vivess");});
test("viveva -> viv", function() {deepEqual( Stem("viveva"), "viv");});
test("vivevano -> viv", function() {deepEqual( Stem("vivevano"), "viv");});
test("vivi -> viv", function() {deepEqual( Stem("vivi"), "viv");});
test("viviamo -> viv", function() {deepEqual( Stem("viviamo"), "viv");});
test("viviani -> vivian", function() {deepEqual( Stem("viviani"), "vivian");});
test("vivida -> vivid", function() {deepEqual( Stem("vivida"), "vivid");});
test("vivo -> viv", function() {deepEqual( Stem("vivo"), "viv");});
test("vivono -> viv", function() {deepEqual( Stem("vivono"), "viv");});
test("vivrebbe -> vivrebb", function() {deepEqual( Stem("vivrebbe"), "vivrebb");});
test("vivuta -> viv", function() {deepEqual( Stem("vivuta"), "viv");});
test("vizi -> viz", function() {deepEqual( Stem("vizi"), "viz");});
test("vizio -> viz", function() {deepEqual( Stem("vizio"), "viz");});
test("vizzini -> vizzin", function() {deepEqual( Stem("vizzini"), "vizzin");});
test("vladimir -> vladim", function() {deepEqual( Stem("vladimir"), "vladim");});
test("vlaovic -> vlaovic", function() {deepEqual( Stem("vlaovic"), "vlaovic");});
test("vo -> vo", function() {deepEqual( Stem("vo"), "vo");});
test("vocabolario -> vocabolar", function() {deepEqual( Stem("vocabolario"), "vocabolar");});
test("vocaboli -> vocabol", function() {deepEqual( Stem("vocaboli"), "vocabol");});
test("vocabolo -> vocabol", function() {deepEqual( Stem("vocabolo"), "vocabol");});
test("vocali -> vocal", function() {deepEqual( Stem("vocali"), "vocal");});
test("vocaltec -> vocaltec", function() {deepEqual( Stem("vocaltec"), "vocaltec");});
test("vocazione -> vocazion", function() {deepEqual( Stem("vocazione"), "vocazion");});
test("voce -> voc", function() {deepEqual( Stem("voce"), "voc");});
test("voci -> voc", function() {deepEqual( Stem("voci"), "voc");});
test("vociaccia -> vociacc", function() {deepEqual( Stem("vociaccia"), "vociacc");});
test("vocina -> vocin", function() {deepEqual( Stem("vocina"), "vocin");});
test("vocione -> vocion", function() {deepEqual( Stem("vocione"), "vocion");});
test("vodka -> vodk", function() {deepEqual( Stem("vodka"), "vodk");});
test("voeller -> voeller", function() {deepEqual( Stem("voeller"), "voeller");});
test("voga -> vog", function() {deepEqual( Stem("voga"), "vog");});
test("vogando -> vog", function() {deepEqual( Stem("vogando"), "vog");});
test("voglia -> vogl", function() {deepEqual( Stem("voglia"), "vogl");});
test("vogliam -> vogliam", function() {deepEqual( Stem("vogliam"), "vogliam");});
test("vogliamo -> vogl", function() {deepEqual( Stem("vogliamo"), "vogl");});
test("voglian -> voglian", function() {deepEqual( Stem("voglian"), "voglian");});
test("vogliano -> vogl", function() {deepEqual( Stem("vogliano"), "vogl");});
test("vogliatene -> vogliaten", function() {deepEqual( Stem("vogliatene"), "vogliaten");});
test("voglie -> vogl", function() {deepEqual( Stem("voglie"), "vogl");});
test("voglio -> vogl", function() {deepEqual( Stem("voglio"), "vogl");});
test("voglion -> voglion", function() {deepEqual( Stem("voglion"), "voglion");});
test("vogliono -> vogl", function() {deepEqual( Stem("vogliono"), "vogl");});
test("vogliosa -> voglios", function() {deepEqual( Stem("vogliosa"), "voglios");});
test("vogliosi -> voglios", function() {deepEqual( Stem("vogliosi"), "voglios");});
test("voglioso -> voglios", function() {deepEqual( Stem("voglioso"), "voglios");});
test("voi -> voi", function() {deepEqual( Stem("voi"), "voi");});
test("vola -> vol", function() {deepEqual( Stem("vola"), "vol");});
test("volan -> volan", function() {deepEqual( Stem("volan"), "volan");});
test("volante -> volant", function() {deepEqual( Stem("volante"), "volant");});
test("volanti -> volant", function() {deepEqual( Stem("volanti"), "volant");});
test("volantino -> volantin", function() {deepEqual( Stem("volantino"), "volantin");});
test("volar -> vol", function() {deepEqual( Stem("volar"), "vol");});
test("volare -> vol", function() {deepEqual( Stem("volare"), "vol");});
test("volatile -> volatil", function() {deepEqual( Stem("volatile"), "volatil");});
test("volatili -> volatil", function() {deepEqual( Stem("volatili"), "volatil");});
test("volava -> vol", function() {deepEqual( Stem("volava"), "vol");});
test("volavan -> volavan", function() {deepEqual( Stem("volavan"), "volavan");});
test("volendo -> vol", function() {deepEqual( Stem("volendo"), "vol");});
test("volentieri -> volentier", function() {deepEqual( Stem("volentieri"), "volentier");});
test("voler -> voler", function() {deepEqual( Stem("voler"), "voler");});
test("volerci -> vol", function() {deepEqual( Stem("volerci"), "vol");});
test("volere -> vol", function() {deepEqual( Stem("volere"), "vol");});
test("volerebbe -> vol", function() {deepEqual( Stem("volerebbe"), "vol");});
test("volergliene -> vol", function() {deepEqual( Stem("volergliene"), "vol");});
test("voleri -> voler", function() {deepEqual( Stem("voleri"), "voler");});
test("volerle -> vol", function() {deepEqual( Stem("volerle"), "vol");});
test("volerlo -> vol", function() {deepEqual( Stem("volerlo"), "vol");});
test("volermi -> vol", function() {deepEqual( Stem("volermi"), "vol");});
test("volersi -> vol", function() {deepEqual( Stem("volersi"), "vol");});
test("volervi -> vol", function() {deepEqual( Stem("volervi"), "vol");});
test("volesse -> voless", function() {deepEqual( Stem("volesse"), "voless");});
test("volessero -> vol", function() {deepEqual( Stem("volessero"), "vol");});
test("volessi -> voless", function() {deepEqual( Stem("volessi"), "voless");});
test("volessimo -> volessim", function() {deepEqual( Stem("volessimo"), "volessim");});
test("voleste -> volest", function() {deepEqual( Stem("voleste"), "volest");});
test("volete -> vol", function() {deepEqual( Stem("volete"), "vol");});
test("voleva -> vol", function() {deepEqual( Stem("voleva"), "vol");});
test("volevan -> volevan", function() {deepEqual( Stem("volevan"), "volevan");});
test("volevano -> vol", function() {deepEqual( Stem("volevano"), "vol");});
test("volevate -> vol", function() {deepEqual( Stem("volevate"), "vol");});
test("volevi -> vol", function() {deepEqual( Stem("volevi"), "vol");});
test("volevo -> vol", function() {deepEqual( Stem("volevo"), "vol");});
test("volgare -> volg", function() {deepEqual( Stem("volgare"), "volg");});
test("volgari -> volgar", function() {deepEqual( Stem("volgari"), "volgar");});
test("volgarità -> volgar", function() {deepEqual( Stem("volgarità"), "volgar");});
test("volge -> volg", function() {deepEqual( Stem("volge"), "volg");});
test("volgendosi -> volg", function() {deepEqual( Stem("volgendosi"), "volg");});
test("volgere -> volg", function() {deepEqual( Stem("volgere"), "volg");});
test("volgeva -> volg", function() {deepEqual( Stem("volgeva"), "volg");});
test("volgo -> volg", function() {deepEqual( Stem("volgo"), "volg");});
test("voli -> vol", function() {deepEqual( Stem("voli"), "vol");});
test("volker -> volker", function() {deepEqual( Stem("volker"), "volker");});
test("volkswagen -> volkswagen", function() {deepEqual( Stem("volkswagen"), "volkswagen");});
test("volle -> voll", function() {deepEqual( Stem("volle"), "voll");});
test("vollero -> voller", function() {deepEqual( Stem("vollero"), "voller");});
test("volley -> volley", function() {deepEqual( Stem("volley"), "volley");});
test("volnmtarietà -> volnmtariet", function() {deepEqual( Stem("volnmtarietà"), "volnmtariet");});
test("volo -> vol", function() {deepEqual( Stem("volo"), "vol");});
test("volontà -> volont", function() {deepEqual( Stem("volontà"), "volont");});
test("volontari -> volontar", function() {deepEqual( Stem("volontari"), "volontar");});
test("volontaria -> volontar", function() {deepEqual( Stem("volontaria"), "volontar");});
test("volontariamente -> volontar", function() {deepEqual( Stem("volontariamente"), "volontar");});
test("volontariato -> volontar", function() {deepEqual( Stem("volontariato"), "volontar");});
test("volontario -> volontar", function() {deepEqual( Stem("volontario"), "volontar");});
test("volpe -> volp", function() {deepEqual( Stem("volpe"), "volp");});
test("volsero -> volser", function() {deepEqual( Stem("volsero"), "volser");});
test("volta -> volt", function() {deepEqual( Stem("volta"), "volt");});
test("voltafaccia -> voltafacc", function() {deepEqual( Stem("voltafaccia"), "voltafacc");});
test("voltan -> voltan", function() {deepEqual( Stem("voltan"), "voltan");});
test("voltando -> volt", function() {deepEqual( Stem("voltando"), "volt");});
test("voltandosi -> volt", function() {deepEqual( Stem("voltandosi"), "volt");});
test("voltano -> volt", function() {deepEqual( Stem("voltano"), "volt");});
test("voltar -> volt", function() {deepEqual( Stem("voltar"), "volt");});
test("voltare -> volt", function() {deepEqual( Stem("voltare"), "volt");});
test("voltaron -> voltaron", function() {deepEqual( Stem("voltaron"), "voltaron");});
test("voltarono -> volt", function() {deepEqual( Stem("voltarono"), "volt");});
test("voltarsi -> volt", function() {deepEqual( Stem("voltarsi"), "volt");});
test("voltasse -> volt", function() {deepEqual( Stem("voltasse"), "volt");});
test("voltata -> volt", function() {deepEqual( Stem("voltata"), "volt");});
test("voltatasi -> voltatas", function() {deepEqual( Stem("voltatasi"), "voltatas");});
test("voltate -> volt", function() {deepEqual( Stem("voltate"), "volt");});
test("voltatisi -> voltatis", function() {deepEqual( Stem("voltatisi"), "voltatis");});
test("voltato -> volt", function() {deepEqual( Stem("voltato"), "volt");});
test("voltatosi -> voltat", function() {deepEqual( Stem("voltatosi"), "voltat");});
test("voltava -> volt", function() {deepEqual( Stem("voltava"), "volt");});
test("voltavan -> voltavan", function() {deepEqual( Stem("voltavan"), "voltavan");});
test("voltavano -> volt", function() {deepEqual( Stem("voltavano"), "volt");});
test("volte -> volt", function() {deepEqual( Stem("volte"), "volt");});
test("volteggiare -> voltegg", function() {deepEqual( Stem("volteggiare"), "voltegg");});
test("volti -> volt", function() {deepEqual( Stem("volti"), "volt");});
test("volto -> volt", function() {deepEqual( Stem("volto"), "volt");});
test("voltò -> volt", function() {deepEqual( Stem("voltò"), "volt");});
test("voltri -> voltr", function() {deepEqual( Stem("voltri"), "voltr");});
test("volume -> volum", function() {deepEqual( Stem("volume"), "volum");});
test("volumi -> volum", function() {deepEqual( Stem("volumi"), "volum");});
test("voluminosa -> volumin", function() {deepEqual( Stem("voluminosa"), "volumin");});
test("voluta -> vol", function() {deepEqual( Stem("voluta"), "vol");});
test("volute -> vol", function() {deepEqual( Stem("volute"), "vol");});
test("voluti -> vol", function() {deepEqual( Stem("voluti"), "vol");});
test("voluto -> vol", function() {deepEqual( Stem("voluto"), "vol");});
test("voluttà -> volutt", function() {deepEqual( Stem("voluttà"), "volutt");});
test("von -> von", function() {deepEqual( Stem("von"), "von");});
test("voragine -> voragin", function() {deepEqual( Stem("voragine"), "voragin");});
test("voria -> vor", function() {deepEqual( Stem("voria"), "vor");});
test("vorrà -> vorr", function() {deepEqual( Stem("vorrà"), "vorr");});
test("vorrai -> vorra", function() {deepEqual( Stem("vorrai"), "vorra");});
test("vorranno -> vorrann", function() {deepEqual( Stem("vorranno"), "vorrann");});
test("vorrebbe -> vorrebb", function() {deepEqual( Stem("vorrebbe"), "vorrebb");});
test("vorrebbero -> vorrebber", function() {deepEqual( Stem("vorrebbero"), "vorrebber");});
test("vorrei -> vorre", function() {deepEqual( Stem("vorrei"), "vorre");});
test("vorremmo -> vorr", function() {deepEqual( Stem("vorremmo"), "vorr");});
test("vorreste -> vorrest", function() {deepEqual( Stem("vorreste"), "vorrest");});
test("vorresti -> vorrest", function() {deepEqual( Stem("vorresti"), "vorrest");});
test("vorrete -> vorr", function() {deepEqual( Stem("vorrete"), "vorr");});
test("vortice -> vortic", function() {deepEqual( Stem("vortice"), "vortic");});
test("vossignoria -> vossignor", function() {deepEqual( Stem("vossignoria"), "vossignor");});
test("vostra -> vostr", function() {deepEqual( Stem("vostra"), "vostr");});
test("vostre -> vostr", function() {deepEqual( Stem("vostre"), "vostr");});
test("vostri -> vostr", function() {deepEqual( Stem("vostri"), "vostr");});
test("vostro -> vostr", function() {deepEqual( Stem("vostro"), "vostr");});
test("vota -> vot", function() {deepEqual( Stem("vota"), "vot");});
test("votando -> vot", function() {deepEqual( Stem("votando"), "vot");});
test("votandolo -> vot", function() {deepEqual( Stem("votandolo"), "vot");});
test("votanti -> votant", function() {deepEqual( Stem("votanti"), "votant");});
test("votare -> vot", function() {deepEqual( Stem("votare"), "vot");});
test("votargli -> vot", function() {deepEqual( Stem("votargli"), "vot");});
test("votata -> vot", function() {deepEqual( Stem("votata"), "vot");});
test("votate -> vot", function() {deepEqual( Stem("votate"), "vot");});
test("votato -> vot", function() {deepEqual( Stem("votato"), "vot");});
test("votatolo -> votatol", function() {deepEqual( Stem("votatolo"), "votatol");});
test("votavano -> vot", function() {deepEqual( Stem("votavano"), "vot");});
test("votazione -> votazion", function() {deepEqual( Stem("votazione"), "votazion");});
test("votazioni -> votazion", function() {deepEqual( Stem("votazioni"), "votazion");});
test("vote -> vot", function() {deepEqual( Stem("vote"), "vot");});
test("voterà -> vot", function() {deepEqual( Stem("voterà"), "vot");});
test("voteremo -> vot", function() {deepEqual( Stem("voteremo"), "vot");});
test("voti -> vot", function() {deepEqual( Stem("voti"), "vot");});
test("vòti -> vòt", function() {deepEqual( Stem("vòti"), "vòt");});
test("votiamo -> vot", function() {deepEqual( Stem("votiamo"), "vot");});
test("voto -> vot", function() {deepEqual( Stem("voto"), "vot");});
test("vòto -> vòt", function() {deepEqual( Stem("vòto"), "vòt");});
test("votò -> vot", function() {deepEqual( Stem("votò"), "vot");});
test("votum -> votum", function() {deepEqual( Stem("votum"), "votum");});
test("vox -> vox", function() {deepEqual( Stem("vox"), "vox");});
test("vpic -> vpic", function() {deepEqual( Stem("vpic"), "vpic");});
test("vqz -> vqz", function() {deepEqual( Stem("vqz"), "vqz");});
test("vte -> vte", function() {deepEqual( Stem("vte"), "vte");});
test("vu -> vu", function() {deepEqual( Stem("vu"), "vu");});
test("vukosa -> vukos", function() {deepEqual( Stem("vukosa"), "vukos");});
test("vulcanologico -> vulcanolog", function() {deepEqual( Stem("vulcanologico"), "vulcanolog");});
test("vulneraria -> vulnerar", function() {deepEqual( Stem("vulneraria"), "vulnerar");});
test("vuoi -> vuo", function() {deepEqual( Stem("vuoi"), "vuo");});
test("vuol -> vuol", function() {deepEqual( Stem("vuol"), "vuol");});
test("vuole -> vuol", function() {deepEqual( Stem("vuole"), "vuol");});
test("vuota -> vuot", function() {deepEqual( Stem("vuota"), "vuot");});
test("vuote -> vuot", function() {deepEqual( Stem("vuote"), "vuot");});
test("vuoto -> vuot", function() {deepEqual( Stem("vuoto"), "vuot");});
test("waigel -> waigel", function() {deepEqual( Stem("waigel"), "waigel");});
test("wainaina -> wainain", function() {deepEqual( Stem("wainaina"), "wainain");});
test("wall -> wall", function() {deepEqual( Stem("wall"), "wall");});
test("wallenius -> wallenius", function() {deepEqual( Stem("wallenius"), "wallenius");});
test("wallenstein -> wallenstein", function() {deepEqual( Stem("wallenstein"), "wallenstein");});
test("walter -> walter", function() {deepEqual( Stem("walter"), "walter");});
test("war -> war", function() {deepEqual( Stem("war"), "war");});
test("ward -> ward", function() {deepEqual( Stem("ward"), "ward");});
test("wardak -> wardak", function() {deepEqual( Stem("wardak"), "wardak");});
test("wardle -> wardl", function() {deepEqual( Stem("wardle"), "wardl");});
test("warr -> warr", function() {deepEqual( Stem("warr"), "warr");});
test("warrant -> warrant", function() {deepEqual( Stem("warrant"), "warrant");});
test("warren -> warren", function() {deepEqual( Stem("warren"), "warren");});
test("warriors -> warriors", function() {deepEqual( Stem("warriors"), "warriors");});
test("washington -> washington", function() {deepEqual( Stem("washington"), "washington");});
test("watan -> watan", function() {deepEqual( Stem("watan"), "watan");});
test("watch -> watc", function() {deepEqual( Stem("watch"), "watc");});
test("water -> water", function() {deepEqual( Stem("water"), "water");});
test("wayne -> wayn", function() {deepEqual( Stem("wayne"), "wayn");});
test("wbo -> wbo", function() {deepEqual( Stem("wbo"), "wbo");});
test("webb -> webb", function() {deepEqual( Stem("webb"), "webb");});
test("weekend -> weekend", function() {deepEqual( Stem("weekend"), "weekend");});
test("wehrmacht -> wehrmacht", function() {deepEqual( Stem("wehrmacht"), "wehrmacht");});
test("welt -> welt", function() {deepEqual( Stem("welt"), "welt");});
test("wenders -> wenders", function() {deepEqual( Stem("wenders"), "wenders");});
test("werner -> werner", function() {deepEqual( Stem("werner"), "werner");});
test("wertmuller -> wertmuller", function() {deepEqual( Stem("wertmuller"), "wertmuller");});
test("wes -> wes", function() {deepEqual( Stem("wes"), "wes");});
test("west -> west", function() {deepEqual( Stem("west"), "west");});
test("westafalisches -> westafalisches", function() {deepEqual( Stem("westafalisches"), "westafalisches");});
test("western -> western", function() {deepEqual( Stem("western"), "western");});
test("westinghouse -> westinghous", function() {deepEqual( Stem("westinghouse"), "westinghous");});
test("whistler -> whistler", function() {deepEqual( Stem("whistler"), "whistler");});
test("whitley -> whitley", function() {deepEqual( Stem("whitley"), "whitley");});
test("wicha -> wich", function() {deepEqual( Stem("wicha"), "wich");});
test("wilczek -> wilczek", function() {deepEqual( Stem("wilczek"), "wilczek");});
test("wilfried -> wilfried", function() {deepEqual( Stem("wilfried"), "wilfried");});
test("willer -> willer", function() {deepEqual( Stem("willer"), "willer");});
test("william -> william", function() {deepEqual( Stem("william"), "william");});
test("williame -> william", function() {deepEqual( Stem("williame"), "william");});
test("willis -> willis", function() {deepEqual( Stem("willis"), "willis");});
test("willy -> willy", function() {deepEqual( Stem("willy"), "willy");});
test("wilma -> wilm", function() {deepEqual( Stem("wilma"), "wilm");});
test("wilson -> wilson", function() {deepEqual( Stem("wilson"), "wilson");});
test("wim -> wim", function() {deepEqual( Stem("wim"), "wim");});
test("windows -> windows", function() {deepEqual( Stem("windows"), "windows");});
test("wings -> wings", function() {deepEqual( Stem("wings"), "wings");});
test("winter -> winter", function() {deepEqual( Stem("winter"), "winter");});
test("winterberg -> winterberg", function() {deepEqual( Stem("winterberg"), "winterberg");});
test("winters -> winters", function() {deepEqual( Stem("winters"), "winters");});
test("wojtyla -> wojtyl", function() {deepEqual( Stem("wojtyla"), "wojtyl");});
test("wolf -> wolf", function() {deepEqual( Stem("wolf"), "wolf");});
test("wolfgang -> wolfgang", function() {deepEqual( Stem("wolfgang"), "wolfgang");});
test("woods -> woods", function() {deepEqual( Stem("woods"), "woods");});
test("wordsworth -> wordsworth", function() {deepEqual( Stem("wordsworth"), "wordsworth");});
test("workers -> workers", function() {deepEqual( Stem("workers"), "workers");});
test("world -> world", function() {deepEqual( Stem("world"), "world");});
test("wspr -> wspr", function() {deepEqual( Stem("wspr"), "wspr");});
test("wuber -> wuber", function() {deepEqual( Stem("wuber"), "wuber");});
test("wuxian -> wuxian", function() {deepEqual( Stem("wuxian"), "wuxian");});
test("x -> x", function() {deepEqual( Stem("x"), "x");});
test("xai -> xai", function() {deepEqual( Stem("xai"), "xai");});
test("xbe -> xbe", function() {deepEqual( Stem("xbe"), "xbe");});
test("xbu -> xbu", function() {deepEqual( Stem("xbu"), "xbu");});
test("xca -> xca", function() {deepEqual( Stem("xca"), "xca");});
test("xcf -> xcf", function() {deepEqual( Stem("xcf"), "xcf");});
test("xct -> xct", function() {deepEqual( Stem("xct"), "xct");});
test("xdp -> xdp", function() {deepEqual( Stem("xdp"), "xdp");});
test("xenofobi -> xenofob", function() {deepEqual( Stem("xenofobi"), "xenofob");});
test("xi -> xi", function() {deepEqual( Stem("xi"), "xi");});
test("xii -> xii", function() {deepEqual( Stem("xii"), "xii");});
test("xiii -> xii", function() {deepEqual( Stem("xiii"), "xii");});
test("xmi -> xmi", function() {deepEqual( Stem("xmi"), "xmi");});
test("xmm -> xmm", function() {deepEqual( Stem("xmm"), "xmm");});
test("xpc -> xpc", function() {deepEqual( Stem("xpc"), "xpc");});
test("xpi -> xpi", function() {deepEqual( Stem("xpi"), "xpi");});
test("xpn -> xpn", function() {deepEqual( Stem("xpn"), "xpn");});
test("xps -> xps", function() {deepEqual( Stem("xps"), "xps");});
test("xrh -> xrh", function() {deepEqual( Stem("xrh"), "xrh");});
test("xrs -> xrs", function() {deepEqual( Stem("xrs"), "xrs");});
test("xxi -> xxi", function() {deepEqual( Stem("xxi"), "xxi");});
test("xxiv -> xxiv", function() {deepEqual( Stem("xxiv"), "xxiv");});
test("xxvi -> xxvi", function() {deepEqual( Stem("xxvi"), "xxvi");});
test("xxvii -> xxvi", function() {deepEqual( Stem("xxvii"), "xxvi");});
test("xza -> xza", function() {deepEqual( Stem("xza"), "xza");});
test("y -> y", function() {deepEqual( Stem("y"), "y");});
test("ya -> ya", function() {deepEqual( Stem("ya"), "ya");});
test("yacht -> yacht", function() {deepEqual( Stem("yacht"), "yacht");});
test("yadana -> yadan", function() {deepEqual( Stem("yadana"), "yadan");});
test("yakov -> yakov", function() {deepEqual( Stem("yakov"), "yakov");});
test("yale -> yal", function() {deepEqual( Stem("yale"), "yal");});
test("yasser -> yasser", function() {deepEqual( Stem("yasser"), "yasser");});
test("yediot -> yediot", function() {deepEqual( Stem("yediot"), "yediot");});
test("yen -> yen", function() {deepEqual( Stem("yen"), "yen");});
test("yirmaguas -> yirmaguas", function() {deepEqual( Stem("yirmaguas"), "yirmaguas");});
test("yitzhak -> yitzhak", function() {deepEqual( Stem("yitzhak"), "yitzhak");});
test("yoint -> yoint", function() {deepEqual( Stem("yoint"), "yoint");});
test("york -> york", function() {deepEqual( Stem("york"), "york");});
test("yossi -> yoss", function() {deepEqual( Stem("yossi"), "yoss");});
test("yousef -> yousef", function() {deepEqual( Stem("yousef"), "yousef");});
test("ypf -> ypf", function() {deepEqual( Stem("ypf"), "ypf");});
test("yugoslavia -> yugoslav", function() {deepEqual( Stem("yugoslavia"), "yugoslav");});
test("yusen -> yusen", function() {deepEqual( Stem("yusen"), "yusen");});
test("yvette -> yvett", function() {deepEqual( Stem("yvette"), "yvett");});
test("z -> z", function() {deepEqual( Stem("z"), "z");});
test("za -> za", function() {deepEqual( Stem("za"), "za");});
test("zaccaria -> zaccar", function() {deepEqual( Stem("zaccaria"), "zaccar");});
test("zacchera -> zaccher", function() {deepEqual( Stem("zacchera"), "zaccher");});
test("zacchere -> zacc", function() {deepEqual( Stem("zacchere"), "zacc");});
test("zachia -> zach", function() {deepEqual( Stem("zachia"), "zach");});
test("zaffate -> zaff", function() {deepEqual( Stem("zaffate"), "zaff");});
test("zag -> zag", function() {deepEqual( Stem("zag"), "zag");});
test("zagabria -> zagabr", function() {deepEqual( Stem("zagabria"), "zagabr");});
test("zagaria -> zagar", function() {deepEqual( Stem("zagaria"), "zagar");});
test("zaini -> zain", function() {deepEqual( Stem("zaini"), "zain");});
test("zambia -> zamb", function() {deepEqual( Stem("zambia"), "zamb");});
test("zamora -> zamor", function() {deepEqual( Stem("zamora"), "zamor");});
test("zampa -> zamp", function() {deepEqual( Stem("zampa"), "zamp");});
test("zampe -> zamp", function() {deepEqual( Stem("zampe"), "zamp");});
test("zampino -> zampin", function() {deepEqual( Stem("zampino"), "zampin");});
test("zanacchi -> zanacc", function() {deepEqual( Stem("zanacchi"), "zanacc");});
test("zandano -> zand", function() {deepEqual( Stem("zandano"), "zand");});
test("zanicchi -> zanicc", function() {deepEqual( Stem("zanicchi"), "zanicc");});
test("zanin -> zanin", function() {deepEqual( Stem("zanin"), "zanin");});
test("zanne -> zann", function() {deepEqual( Stem("zanne"), "zann");});
test("zanoncelli -> zanoncell", function() {deepEqual( Stem("zanoncelli"), "zanoncell");});
test("zanussi -> zanuss", function() {deepEqual( Stem("zanussi"), "zanuss");});
test("zanutta -> zanutt", function() {deepEqual( Stem("zanutta"), "zanutt");});
test("zanzi -> zanz", function() {deepEqual( Stem("zanzi"), "zanz");});
test("zapatista -> zapat", function() {deepEqual( Stem("zapatista"), "zapat");});
test("zapatisti -> zapat", function() {deepEqual( Stem("zapatisti"), "zapat");});
test("zapatistì -> zapat", function() {deepEqual( Stem("zapatistì"), "zapat");});
test("zappando -> zapp", function() {deepEqual( Stem("zappando"), "zapp");});
test("zappe -> zapp", function() {deepEqual( Stem("zappe"), "zapp");});
test("zaptista -> zaptist", function() {deepEqual( Stem("zaptista"), "zaptist");});
test("zar -> zar", function() {deepEqual( Stem("zar"), "zar");});
test("zattarin -> zattarin", function() {deepEqual( Stem("zattarin"), "zattarin");});
test("zc -> zc", function() {deepEqual( Stem("zc"), "zc");});
test("zdf -> zdf", function() {deepEqual( Stem("zdf"), "zdf");});
test("zecca -> zecc", function() {deepEqual( Stem("zecca"), "zecc");});
test("zecchino -> zecchin", function() {deepEqual( Stem("zecchino"), "zecchin");});
test("zedillo -> zedill", function() {deepEqual( Stem("zedillo"), "zedill");});
test("zeev -> zeev", function() {deepEqual( Stem("zeev"), "zeev");});
test("zeffiro -> zeffir", function() {deepEqual( Stem("zeffiro"), "zeffir");});
test("zeitung -> zeitung", function() {deepEqual( Stem("zeitung"), "zeitung");});
test("zelanti -> zelant", function() {deepEqual( Stem("zelanti"), "zelant");});
test("zelatori -> zelator", function() {deepEqual( Stem("zelatori"), "zelator");});
test("zelo -> zel", function() {deepEqual( Stem("zelo"), "zel");});
test("zeman -> zeman", function() {deepEqual( Stem("zeman"), "zeman");});
test("zendali -> zendal", function() {deepEqual( Stem("zendali"), "zendal");});
test("zenga -> zeng", function() {deepEqual( Stem("zenga"), "zeng");});
test("zeppa -> zepp", function() {deepEqual( Stem("zeppa"), "zepp");});
test("zero -> zer", function() {deepEqual( Stem("zero"), "zer");});
test("zerowatt -> zerowatt", function() {deepEqual( Stem("zerowatt"), "zerowatt");});
test("zeta -> zet", function() {deepEqual( Stem("zeta"), "zet");});
test("zetabond -> zetabond", function() {deepEqual( Stem("zetabond"), "zetabond");});
test("zetastock -> zetastock", function() {deepEqual( Stem("zetastock"), "zetastock");});
test("zetaswiss -> zetaswiss", function() {deepEqual( Stem("zetaswiss"), "zetaswiss");});
test("zhirinovski -> zhirinovsk", function() {deepEqual( Stem("zhirinovski"), "zhirinovsk");});
test("zia -> zia", function() {deepEqual( Stem("zia"), "zia");});
test("zibellino -> zibellin", function() {deepEqual( Stem("zibellino"), "zibellin");});
test("zie -> zie", function() {deepEqual( Stem("zie"), "zie");});
test("zig -> zig", function() {deepEqual( Stem("zig"), "zig");});
test("zignago -> zignag", function() {deepEqual( Stem("zignago"), "zignag");});
test("zii -> zii", function() {deepEqual( Stem("zii"), "zii");});
test("ziino -> ziin", function() {deepEqual( Stem("ziino"), "ziin");});
test("zimarra -> zimarr", function() {deepEqual( Stem("zimarra"), "zimarr");});
test("zimarre -> zimarr", function() {deepEqual( Stem("zimarre"), "zimarr");});
test("zimbello -> zimbell", function() {deepEqual( Stem("zimbello"), "zimbell");});
test("zimmermann -> zimmermann", function() {deepEqual( Stem("zimmermann"), "zimmermann");});
test("zina -> zin", function() {deepEqual( Stem("zina"), "zin");});
test("zincone -> zincon", function() {deepEqual( Stem("zincone"), "zincon");});
test("zinelli -> zinell", function() {deepEqual( Stem("zinelli"), "zinell");});
test("zingari -> zingar", function() {deepEqual( Stem("zingari"), "zingar");});
test("zingerle -> zing", function() {deepEqual( Stem("zingerle"), "zing");});
test("zio -> zio", function() {deepEqual( Stem("zio"), "zio");});
test("zippora -> zippor", function() {deepEqual( Stem("zippora"), "zippor");});
test("zironelli -> zironell", function() {deepEqual( Stem("zironelli"), "zironell");});
test("zitta -> zitt", function() {deepEqual( Stem("zitta"), "zitt");});
test("zitte -> zitt", function() {deepEqual( Stem("zitte"), "zitt");});
test("zitti -> zitt", function() {deepEqual( Stem("zitti"), "zitt");});
test("zitto -> zitt", function() {deepEqual( Stem("zitto"), "zitt");});
test("ziuganov -> ziuganov", function() {deepEqual( Stem("ziuganov"), "ziuganov");});
test("zo -> zo", function() {deepEqual( Stem("zo"), "zo");});
test("zobra -> zobr", function() {deepEqual( Stem("zobra"), "zobr");});
test("zocalo -> zocal", function() {deepEqual( Stem("zocalo"), "zocal");});
test("zocchi -> zocc", function() {deepEqual( Stem("zocchi"), "zocc");});
test("zoccolo -> zoccol", function() {deepEqual( Stem("zoccolo"), "zoccol");});
test("zohra -> zohr", function() {deepEqual( Stem("zohra"), "zohr");});
test("zola -> zol", function() {deepEqual( Stem("zola"), "zol");});
test("zolfanelli -> zolfanell", function() {deepEqual( Stem("zolfanelli"), "zolfanell");});
test("zolla -> zoll", function() {deepEqual( Stem("zolla"), "zoll");});
test("zombi -> zomb", function() {deepEqual( Stem("zombi"), "zomb");});
test("zona -> zon", function() {deepEqual( Stem("zona"), "zon");});
test("zone -> zon", function() {deepEqual( Stem("zone"), "zon");});
test("zonzo -> zonz", function() {deepEqual( Stem("zonzo"), "zonz");});
test("zoppas -> zoppas", function() {deepEqual( Stem("zoppas"), "zoppas");});
test("zoppo -> zopp", function() {deepEqual( Stem("zoppo"), "zopp");});
test("zoran -> zoran", function() {deepEqual( Stem("zoran"), "zoran");});
test("zoratto -> zoratt", function() {deepEqual( Stem("zoratto"), "zoratt");});
test("zorro -> zorr", function() {deepEqual( Stem("zorro"), "zorr");});
test("zorzi -> zorz", function() {deepEqual( Stem("zorzi"), "zorz");});
test("zotici -> zotic", function() {deepEqual( Stem("zotici"), "zotic");});
test("zou -> zou", function() {deepEqual( Stem("zou"), "zou");});
test("zucca -> zucc", function() {deepEqual( Stem("zucca"), "zucc");});
test("zucche -> zucc", function() {deepEqual( Stem("zucche"), "zucc");});
test("zuccheri -> zuccher", function() {deepEqual( Stem("zuccheri"), "zuccher");});
test("zuccherino -> zuccherin", function() {deepEqual( Stem("zuccherino"), "zuccherin");});
test("zucchero -> zuccher", function() {deepEqual( Stem("zucchero"), "zuccher");});
test("zucchi -> zucc", function() {deepEqual( Stem("zucchi"), "zucc");});
test("zucconi -> zuccon", function() {deepEqual( Stem("zucconi"), "zuccon");});
test("zuffi -> zuff", function() {deepEqual( Stem("zuffi"), "zuff");});
test("zurigo -> zurig", function() {deepEqual( Stem("zurigo"), "zurig");});
test("zweite -> zwe", function() {deepEqual( Stem("zweite"), "zwe");});
test("zwerver -> zwerver", function() {deepEqual( Stem("zwerver"), "zwerver");});
test("zwickel -> zwickel", function() {deepEqual( Stem("zwickel"), "zwickel");});
