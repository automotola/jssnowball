QUnit.config.hidepassed = true;
var Stem = snowballFactory.newStemmer('romanian').stem;
test("a -> a", function() {deepEqual( Stem("a"), "a");});
test("ab -> ab", function() {deepEqual( Stem("ab"), "ab");});
test("abajur -> abajur", function() {deepEqual( Stem("abajur"), "abajur");});
test("abajurul -> abajur", function() {deepEqual( Stem("abajurul"), "abajur");});
test("abandon -> abandon", function() {deepEqual( Stem("abandon"), "abandon");});
test("abandoneze -> abandon", function() {deepEqual( Stem("abandoneze"), "abandon");});
test("abat -> abat", function() {deepEqual( Stem("abat"), "abat");});
test("abate -> abat", function() {deepEqual( Stem("abate"), "abat");});
test("abatere -> abat", function() {deepEqual( Stem("abatere"), "abat");});
test("abateri -> abater", function() {deepEqual( Stem("abateri"), "abater");});
test("abator -> abat", function() {deepEqual( Stem("abator"), "abat");});
test("abătut -> abăt", function() {deepEqual( Stem("abătut"), "abăt");});
test("abătută -> abăt", function() {deepEqual( Stem("abătută"), "abăt");});
test("abătuţi -> abătuţ", function() {deepEqual( Stem("abătuţi"), "abătuţ");});
test("abces -> abces", function() {deepEqual( Stem("abces"), "abces");});
test("aberaţie -> aber", function() {deepEqual( Stem("aberaţie"), "aber");});
test("aberaţii -> aber", function() {deepEqual( Stem("aberaţii"), "aber");});
test("aberaţiune -> aber", function() {deepEqual( Stem("aberaţiune"), "aber");});
test("aberaţiuni -> aberat", function() {deepEqual( Stem("aberaţiuni"), "aberat");});
test("abia -> abi", function() {deepEqual( Stem("abia"), "abi");});
test("abil -> abil", function() {deepEqual( Stem("abil"), "abil");});
test("abilă -> abil", function() {deepEqual( Stem("abilă"), "abil");});
test("abile -> abil", function() {deepEqual( Stem("abile"), "abil");});
test("abilitate -> abil", function() {deepEqual( Stem("abilitate"), "abil");});
test("abilitatea -> abil", function() {deepEqual( Stem("abilitatea"), "abil");});
test("abnegaţie -> abneg", function() {deepEqual( Stem("abnegaţie"), "abneg");});
test("abonamentul -> abonament", function() {deepEqual( Stem("abonamentul"), "abonament");});
test("abruptă -> abrupt", function() {deepEqual( Stem("abruptă"), "abrupt");});
test("absent -> absent", function() {deepEqual( Stem("absent"), "absent");});
test("absentă -> absent", function() {deepEqual( Stem("absentă"), "absent");});
test("absente -> absent", function() {deepEqual( Stem("absente"), "absent");});
test("absenţa -> absenţ", function() {deepEqual( Stem("absenţa"), "absenţ");});
test("absenţă -> absenţ", function() {deepEqual( Stem("absenţă"), "absenţ");});
test("absenţi -> absenţ", function() {deepEqual( Stem("absenţi"), "absenţ");});
test("absolut -> absol", function() {deepEqual( Stem("absolut"), "absol");});
test("absoluta -> absol", function() {deepEqual( Stem("absoluta"), "absol");});
test("absolută -> absol", function() {deepEqual( Stem("absolută"), "absol");});
test("absolute -> absol", function() {deepEqual( Stem("absolute"), "absol");});
test("absolutul -> absol", function() {deepEqual( Stem("absolutul"), "absol");});
test("absolutului -> absol", function() {deepEqual( Stem("absolutului"), "absol");});
test("absoluţi -> absoluţ", function() {deepEqual( Stem("absoluţi"), "absoluţ");});
test("absolve -> absolv", function() {deepEqual( Stem("absolve"), "absolv");});
test("absolvenţi -> absolvenţ", function() {deepEqual( Stem("absolvenţi"), "absolvenţ");});
test("absolvenţii -> absolvenţ", function() {deepEqual( Stem("absolvenţii"), "absolvenţ");});
test("absolvi -> absolv", function() {deepEqual( Stem("absolvi"), "absolv");});
test("absolvire -> absolv", function() {deepEqual( Stem("absolvire"), "absolv");});
test("absolvit -> absolv", function() {deepEqual( Stem("absolvit"), "absolv");});
test("absolvită -> absolv", function() {deepEqual( Stem("absolvită"), "absolv");});
test("absolviţi -> absolv", function() {deepEqual( Stem("absolviţi"), "absolv");});
test("absorbant -> absorb", function() {deepEqual( Stem("absorbant"), "absorb");});
test("absorbantă -> absorb", function() {deepEqual( Stem("absorbantă"), "absorb");});
test("absorbi -> absorb", function() {deepEqual( Stem("absorbi"), "absorb");});
test("absorbit -> absorb", function() {deepEqual( Stem("absorbit"), "absorb");});
test("absorbite -> absorb", function() {deepEqual( Stem("absorbite"), "absorb");});
test("absorbiţi -> absorb", function() {deepEqual( Stem("absorbiţi"), "absorb");});
test("absorbţia -> absorbţ", function() {deepEqual( Stem("absorbţia"), "absorbţ");});
test("abstinent -> abstinent", function() {deepEqual( Stem("abstinent"), "abstinent");});
test("abstract -> abstract", function() {deepEqual( Stem("abstract"), "abstract");});
test("abstractă -> abstract", function() {deepEqual( Stem("abstractă"), "abstract");});
test("abstracte -> abstract", function() {deepEqual( Stem("abstracte"), "abstract");});
test("abstractiza -> abstractiz", function() {deepEqual( Stem("abstractiza"), "abstractiz");});
test("abstractizare -> abstractiz", function() {deepEqual( Stem("abstractizare"), "abstractiz");});
test("abstractizat -> abstractiz", function() {deepEqual( Stem("abstractizat"), "abstractiz");});
test("abstractizăm -> abstractiz", function() {deepEqual( Stem("abstractizăm"), "abstractiz");});
test("abstracto -> abstracto", function() {deepEqual( Stem("abstracto"), "abstracto");});
test("abstracţia -> abstracţ", function() {deepEqual( Stem("abstracţia"), "abstracţ");});
test("abstracţii -> abstracţ", function() {deepEqual( Stem("abstracţii"), "abstracţ");});
test("abstracţiune -> abstract", function() {deepEqual( Stem("abstracţiune"), "abstract");});
test("abstracţiuni -> abstract", function() {deepEqual( Stem("abstracţiuni"), "abstract");});
test("abstrage -> abstrag", function() {deepEqual( Stem("abstrage"), "abstrag");});
test("absurd -> absurd", function() {deepEqual( Stem("absurd"), "absurd");});
test("absurdă -> absurd", function() {deepEqual( Stem("absurdă"), "absurd");});
test("absurde -> absurd", function() {deepEqual( Stem("absurde"), "absurd");});
test("absurditate -> absurd", function() {deepEqual( Stem("absurditate"), "absurd");});
test("absurdităţi -> absurd", function() {deepEqual( Stem("absurdităţi"), "absurd");});
test("absurdităţilor -> absurd", function() {deepEqual( Stem("absurdităţilor"), "absurd");});
test("absurdul -> absurd", function() {deepEqual( Stem("absurdul"), "absurd");});
test("abţină -> abţin", function() {deepEqual( Stem("abţină"), "abţin");});
test("abţinem -> abţin", function() {deepEqual( Stem("abţinem"), "abţin");});
test("abţinere -> abţin", function() {deepEqual( Stem("abţinere"), "abţin");});
test("abundent -> abundent", function() {deepEqual( Stem("abundent"), "abundent");});
test("abundentă -> abundent", function() {deepEqual( Stem("abundentă"), "abundent");});
test("abur -> abur", function() {deepEqual( Stem("abur"), "abur");});
test("aburi -> abur", function() {deepEqual( Stem("aburi"), "abur");});
test("aburit -> abur", function() {deepEqual( Stem("aburit"), "abur");});
test("aburitoare -> abur", function() {deepEqual( Stem("aburitoare"), "abur");});
test("aburoase -> abur", function() {deepEqual( Stem("aburoase"), "abur");});
test("aburul -> abur", function() {deepEqual( Stem("aburul"), "abur");});
test("abuza -> abuz", function() {deepEqual( Stem("abuza"), "abuz");});
test("abuzez -> abuz", function() {deepEqual( Stem("abuzez"), "abuz");});
test("abuziv -> abuz", function() {deepEqual( Stem("abuziv"), "abuz");});
test("ac -> ac", function() {deepEqual( Stem("ac"), "ac");});
test("academic -> academ", function() {deepEqual( Stem("academic"), "academ");});
test("acar -> acar", function() {deepEqual( Stem("acar"), "acar");});
test("acasă -> acas", function() {deepEqual( Stem("acasă"), "acas");});
test("accelerat -> acceler", function() {deepEqual( Stem("accelerat"), "acceler");});
test("accent -> accent", function() {deepEqual( Stem("accent"), "accent");});
test("accentuat -> accentu", function() {deepEqual( Stem("accentuat"), "accentu");});
test("accentuată -> accentu", function() {deepEqual( Stem("accentuată"), "accentu");});
test("accentuate -> accentu", function() {deepEqual( Stem("accentuate"), "accentu");});
test("accentuaţi -> accentu", function() {deepEqual( Stem("accentuaţi"), "accentu");});
test("accentuez -> accentu", function() {deepEqual( Stem("accentuez"), "accentu");});
test("accentul -> accent", function() {deepEqual( Stem("accentul"), "accent");});
test("accept -> accept", function() {deepEqual( Stem("accept"), "accept");});
test("acceptabile -> accept", function() {deepEqual( Stem("acceptabile"), "accept");});
test("acceptat -> accept", function() {deepEqual( Stem("acceptat"), "accept");});
test("acceptată -> accept", function() {deepEqual( Stem("acceptată"), "accept");});
test("acceptând -> accept", function() {deepEqual( Stem("acceptând"), "accept");});
test("acceptă -> accept", function() {deepEqual( Stem("acceptă"), "accept");});
test("accepţi -> accepţ", function() {deepEqual( Stem("accepţi"), "accepţ");});
test("acces -> acces", function() {deepEqual( Stem("acces"), "acces");});
test("accesele -> acce", function() {deepEqual( Stem("accesele"), "acce");});
test("accesibile -> accesib", function() {deepEqual( Stem("accesibile"), "accesib");});
test("accesorii -> accesor", function() {deepEqual( Stem("accesorii"), "accesor");});
test("accident -> accident", function() {deepEqual( Stem("accident"), "accident");});
test("accidentul -> accident", function() {deepEqual( Stem("accidentul"), "accident");});
test("acea -> ace", function() {deepEqual( Stem("acea"), "ace");});
test("aceasta -> aceast", function() {deepEqual( Stem("aceasta"), "aceast");});
test("această -> aceast", function() {deepEqual( Stem("această"), "aceast");});
test("aceea -> ace", function() {deepEqual( Stem("aceea"), "ace");});
test("aceeaşi -> aceeaş", function() {deepEqual( Stem("aceeaşi"), "aceeaş");});
test("acei -> ace", function() {deepEqual( Stem("acei"), "ace");});
test("aceia -> acei", function() {deepEqual( Stem("aceia"), "acei");});
test("aceiaşi -> acei", function() {deepEqual( Stem("aceiaşi"), "acei");});
test("acel -> acel", function() {deepEqual( Stem("acel"), "acel");});
test("acela -> acel", function() {deepEqual( Stem("acela"), "acel");});
test("acelaşi -> acel", function() {deepEqual( Stem("acelaşi"), "acel");});
test("acelaşti -> acelaşt", function() {deepEqual( Stem("acelaşti"), "acelaşt");});
test("acele -> ace", function() {deepEqual( Stem("acele"), "ace");});
test("acelea -> acel", function() {deepEqual( Stem("acelea"), "acel");});
test("aceleaşi -> aceleaş", function() {deepEqual( Stem("aceleaşi"), "aceleaş");});
test("acelei -> acele", function() {deepEqual( Stem("acelei"), "acele");});
test("aceleia -> acelei", function() {deepEqual( Stem("aceleia"), "acelei");});
test("aceleiaşi -> acelei", function() {deepEqual( Stem("aceleiaşi"), "acelei");});
test("acelor -> ace", function() {deepEqual( Stem("acelor"), "ace");});
test("acelora -> acelor", function() {deepEqual( Stem("acelora"), "acelor");});
test("aceloraşi -> acelor", function() {deepEqual( Stem("aceloraşi"), "acelor");});
test("acelui -> acel", function() {deepEqual( Stem("acelui"), "acel");});
test("aceluiaşi -> acelui", function() {deepEqual( Stem("aceluiaşi"), "acelui");});
test("acerbă -> acerb", function() {deepEqual( Stem("acerbă"), "acerb");});
test("acerbe -> acerb", function() {deepEqual( Stem("acerbe"), "acerb");});
test("acest -> acest", function() {deepEqual( Stem("acest"), "acest");});
test("acesta -> acest", function() {deepEqual( Stem("acesta"), "acest");});
test("acestă -> acest", function() {deepEqual( Stem("acestă"), "acest");});
test("aceste -> acest", function() {deepEqual( Stem("aceste"), "acest");});
test("acestea -> acest", function() {deepEqual( Stem("acestea"), "acest");});
test("acestei -> aceste", function() {deepEqual( Stem("acestei"), "aceste");});
test("acesteia -> acestei", function() {deepEqual( Stem("acesteia"), "acestei");});
test("acestor -> acestor", function() {deepEqual( Stem("acestor"), "acestor");});
test("acestora -> acestor", function() {deepEqual( Stem("acestora"), "acestor");});
test("acestui -> acest", function() {deepEqual( Stem("acestui"), "acest");});
test("acestuia -> acestui", function() {deepEqual( Stem("acestuia"), "acestui");});
test("aceşti -> aceşt", function() {deepEqual( Stem("aceşti"), "aceşt");});
test("aceştia -> aceşt", function() {deepEqual( Stem("aceştia"), "aceşt");});
test("achile -> achi", function() {deepEqual( Stem("achile"), "achi");});
test("achita -> achit", function() {deepEqual( Stem("achita"), "achit");});
test("achitam -> achit", function() {deepEqual( Stem("achitam"), "achit");});
test("achitare -> achit", function() {deepEqual( Stem("achitare"), "achit");});
test("achitat -> achit", function() {deepEqual( Stem("achitat"), "achit");});
test("achitaters -> achitaters", function() {deepEqual( Stem("achitaters"), "achitaters");});
test("achitaţi -> achit", function() {deepEqual( Stem("achitaţi"), "achit");});
test("achiţi -> achiţ", function() {deepEqual( Stem("achiţi"), "achiţ");});
test("achiziţia -> achiziţ", function() {deepEqual( Stem("achiziţia"), "achiziţ");});
test("achiziţie -> achiziţ", function() {deepEqual( Stem("achiziţie"), "achiziţ");});
test("achiziţii -> achiz", function() {deepEqual( Stem("achiziţii"), "achiz");});
test("achiziţionarea -> achiziţion", function() {deepEqual( Stem("achiziţionarea"), "achiziţion");});
test("achiziţionat -> achiziţion", function() {deepEqual( Stem("achiziţionat"), "achiziţion");});
test("achiziţionată -> achiziţion", function() {deepEqual( Stem("achiziţionată"), "achiziţion");});
test("achiziţionării -> achiziţionăr", function() {deepEqual( Stem("achiziţionării"), "achiziţionăr");});
test("achiziţioneze -> achiziţion", function() {deepEqual( Stem("achiziţioneze"), "achiziţion");});
test("aci -> aci", function() {deepEqual( Stem("aci"), "aci");});
test("acid -> acid", function() {deepEqual( Stem("acid"), "acid");});
test("acidulată -> acidul", function() {deepEqual( Stem("acidulată"), "acidul");});
test("acidulate -> acidul", function() {deepEqual( Stem("acidulate"), "acidul");});
test("aciest -> aciest", function() {deepEqual( Stem("aciest"), "aciest");});
test("aciness -> aciness", function() {deepEqual( Stem("aciness"), "aciness");});
test("aclamaţii -> aclam", function() {deepEqual( Stem("aclamaţii"), "aclam");});
test("aclamaţiile -> aclam", function() {deepEqual( Stem("aclamaţiile"), "aclam");});
test("acolo -> acolo", function() {deepEqual( Stem("acolo"), "acolo");});
test("acomodare -> acomod", function() {deepEqual( Stem("acomodare"), "acomod");});
test("acomodări -> acomodăr", function() {deepEqual( Stem("acomodări"), "acomodăr");});
test("acopăr -> acopăr", function() {deepEqual( Stem("acopăr"), "acopăr");});
test("acoperă -> acoper", function() {deepEqual( Stem("acoperă"), "acoper");});
test("acopere -> acop", function() {deepEqual( Stem("acopere"), "acop");});
test("acoperindu -> acoper", function() {deepEqual( Stem("acoperindu"), "acoper");});
test("acoperire -> acoper", function() {deepEqual( Stem("acoperire"), "acoper");});
test("acoperirea -> acoper", function() {deepEqual( Stem("acoperirea"), "acoper");});
test("acoperişul -> acoperiş", function() {deepEqual( Stem("acoperişul"), "acoperiş");});
test("acoperişurile -> acoperişur", function() {deepEqual( Stem("acoperişurile"), "acoperişur");});
test("acoperit -> acoper", function() {deepEqual( Stem("acoperit"), "acoper");});
test("acoperită -> acoper", function() {deepEqual( Stem("acoperită"), "acoper");});
test("acoperite -> acoper", function() {deepEqual( Stem("acoperite"), "acoper");});
test("acoperitor -> acoper", function() {deepEqual( Stem("acoperitor"), "acoper");});
test("acoperiţi -> acoper", function() {deepEqual( Stem("acoperiţi"), "acoper");});
test("acord -> acord", function() {deepEqual( Stem("acord"), "acord");});
test("acordat -> acord", function() {deepEqual( Stem("acordat"), "acord");});
test("acordă -> acord", function() {deepEqual( Stem("acordă"), "acord");});
test("acordăm -> acord", function() {deepEqual( Stem("acordăm"), "acord");});
test("acorduri -> acordur", function() {deepEqual( Stem("acorduri"), "acordur");});
test("acostez -> acost", function() {deepEqual( Stem("acostez"), "acost");});
test("acră -> acră", function() {deepEqual( Stem("acră"), "acră");});
test("acreala -> acreal", function() {deepEqual( Stem("acreala"), "acreal");});
test("acreală -> acreal", function() {deepEqual( Stem("acreală"), "acreal");});
test("acreditarea -> acredit", function() {deepEqual( Stem("acreditarea"), "acredit");});
test("acrobat -> acrob", function() {deepEqual( Stem("acrobat"), "acrob");});
test("acru -> acru", function() {deepEqual( Stem("acru"), "acru");});
test("act -> act", function() {deepEqual( Stem("act"), "act");});
test("acte -> acte", function() {deepEqual( Stem("acte"), "acte");});
test("actele -> acte", function() {deepEqual( Stem("actele"), "acte");});
test("activ -> activ", function() {deepEqual( Stem("activ"), "activ");});
test("activă -> activ", function() {deepEqual( Stem("activă"), "activ");});
test("active -> activ", function() {deepEqual( Stem("active"), "activ");});
test("activează -> activ", function() {deepEqual( Stem("activează"), "activ");});
test("activitate -> activ", function() {deepEqual( Stem("activitate"), "activ");});
test("activitatea -> activ", function() {deepEqual( Stem("activitatea"), "activ");});
test("activităţi -> activ", function() {deepEqual( Stem("activităţi"), "activ");});
test("activităţii -> activ", function() {deepEqual( Stem("activităţii"), "activ");});
test("actor -> actor", function() {deepEqual( Stem("actor"), "actor");});
test("actorul -> actor", function() {deepEqual( Stem("actorul"), "actor");});
test("actriţa -> actriţ", function() {deepEqual( Stem("actriţa"), "actriţ");});
test("actriţă -> actriţ", function() {deepEqual( Stem("actriţă"), "actriţ");});
test("actriţe -> actriţ", function() {deepEqual( Stem("actriţe"), "actriţ");});
test("actual -> actual", function() {deepEqual( Stem("actual"), "actual");});
test("actuala -> actual", function() {deepEqual( Stem("actuala"), "actual");});
test("actuală -> actual", function() {deepEqual( Stem("actuală"), "actual");});
test("actuale -> actual", function() {deepEqual( Stem("actuale"), "actual");});
test("actualele -> actual", function() {deepEqual( Stem("actualele"), "actual");});
test("actualitate -> actual", function() {deepEqual( Stem("actualitate"), "actual");});
test("actualitatea -> actual", function() {deepEqual( Stem("actualitatea"), "actual");});
test("actualităţii -> actual", function() {deepEqual( Stem("actualităţii"), "actual");});
test("actualizare -> actualiz", function() {deepEqual( Stem("actualizare"), "actualiz");});
test("actul -> act", function() {deepEqual( Stem("actul"), "act");});
test("acţionari -> acţionar", function() {deepEqual( Stem("acţionari"), "acţionar");});
test("acţionăm -> acţion", function() {deepEqual( Stem("acţionăm"), "acţion");});
test("acţionează -> acţion", function() {deepEqual( Stem("acţionează"), "acţion");});
test("acţionez -> acţion", function() {deepEqual( Stem("acţionez"), "acţion");});
test("acţiune -> acţiun", function() {deepEqual( Stem("acţiune"), "acţiun");});
test("acţiunea -> acţiun", function() {deepEqual( Stem("acţiunea"), "acţiun");});
test("acţiuni -> acţiun", function() {deepEqual( Stem("acţiuni"), "acţiun");});
test("acţiunii -> acţiun", function() {deepEqual( Stem("acţiunii"), "acţiun");});
test("acţiunile -> acţiun", function() {deepEqual( Stem("acţiunile"), "acţiun");});
test("acu -> acu", function() {deepEqual( Stem("acu"), "acu");});
test("acuarele -> acuar", function() {deepEqual( Stem("acuarele"), "acuar");});
test("acul -> ac", function() {deepEqual( Stem("acul"), "ac");});
test("acum -> acum", function() {deepEqual( Stem("acum"), "acum");});
test("acuma -> acum", function() {deepEqual( Stem("acuma"), "acum");});
test("acustic -> acust", function() {deepEqual( Stem("acustic"), "acust");});
test("acut -> acut", function() {deepEqual( Stem("acut"), "acut");});
test("acută -> acut", function() {deepEqual( Stem("acută"), "acut");});
test("acute -> acut", function() {deepEqual( Stem("acute"), "acut");});
test("acuzat -> acuz", function() {deepEqual( Stem("acuzat"), "acuz");});
test("acuză -> acuz", function() {deepEqual( Stem("acuză"), "acuz");});
test("acuzi -> acuz", function() {deepEqual( Stem("acuzi"), "acuz");});
test("acvilin -> acvilin", function() {deepEqual( Stem("acvilin"), "acvilin");});
test("ad -> ad", function() {deepEqual( Stem("ad"), "ad");});
test("adamici -> adam", function() {deepEqual( Stem("adamici"), "adam");});
test("adaose -> adao", function() {deepEqual( Stem("adaose"), "adao");});
test("adapta -> adapt", function() {deepEqual( Stem("adapta"), "adapt");});
test("adaptabile -> adapt", function() {deepEqual( Stem("adaptabile"), "adapt");});
test("adaptare -> adapt", function() {deepEqual( Stem("adaptare"), "adapt");});
test("adaptarea -> adapt", function() {deepEqual( Stem("adaptarea"), "adapt");});
test("adaptase -> adapt", function() {deepEqual( Stem("adaptase"), "adapt");});
test("adaptat -> adapt", function() {deepEqual( Stem("adaptat"), "adapt");});
test("adapteze -> adapt", function() {deepEqual( Stem("adapteze"), "adapt");});
test("adaug -> adaug", function() {deepEqual( Stem("adaug"), "adaug");});
test("adaugă -> adaug", function() {deepEqual( Stem("adaugă"), "adaug");});
test("adauge -> adaug", function() {deepEqual( Stem("adauge"), "adaug");});
test("adânc -> adânc", function() {deepEqual( Stem("adânc"), "adânc");});
test("adâncă -> adânc", function() {deepEqual( Stem("adâncă"), "adânc");});
test("adâncea -> adânc", function() {deepEqual( Stem("adâncea"), "adânc");});
test("adâncească -> adânc", function() {deepEqual( Stem("adâncească"), "adânc");});
test("adânci -> adânc", function() {deepEqual( Stem("adânci"), "adânc");});
test("adâncime -> adâncim", function() {deepEqual( Stem("adâncime"), "adâncim");});
test("adâncimea -> adâncim", function() {deepEqual( Stem("adâncimea"), "adâncim");});
test("adâncindu -> adânc", function() {deepEqual( Stem("adâncindu"), "adânc");});
test("adâncit -> adânc", function() {deepEqual( Stem("adâncit"), "adânc");});
test("adâncite -> adânc", function() {deepEqual( Stem("adâncite"), "adânc");});
test("adâncituri -> adâncitur", function() {deepEqual( Stem("adâncituri"), "adâncitur");});
test("adâncul -> adânc", function() {deepEqual( Stem("adâncul"), "adânc");});
test("adâncurilor -> adâncur", function() {deepEqual( Stem("adâncurilor"), "adâncur");});
test("adăpa -> adăp", function() {deepEqual( Stem("adăpa"), "adăp");});
test("adăpost -> adăpost", function() {deepEqual( Stem("adăpost"), "adăpost");});
test("adăpostea -> adăpost", function() {deepEqual( Stem("adăpostea"), "adăpost");});
test("adăposteşte -> adăpost", function() {deepEqual( Stem("adăposteşte"), "adăpost");});
test("adăposti -> adăpost", function() {deepEqual( Stem("adăposti"), "adăpost");});
test("adăpostim -> adăpost", function() {deepEqual( Stem("adăpostim"), "adăpost");});
test("adăpostită -> adăpost", function() {deepEqual( Stem("adăpostită"), "adăpost");});
test("adăpostiţi -> adăpost", function() {deepEqual( Stem("adăpostiţi"), "adăpost");});
test("adăpostul -> adăpost", function() {deepEqual( Stem("adăpostul"), "adăpost");});
test("adăposturi -> adăpostur", function() {deepEqual( Stem("adăposturi"), "adăpostur");});
test("adăuga -> adăug", function() {deepEqual( Stem("adăuga"), "adăug");});
test("adăugat -> adăug", function() {deepEqual( Stem("adăugat"), "adăug");});
test("adăugăm -> adăug", function() {deepEqual( Stem("adăugăm"), "adăug");});
test("adăugi -> adăug", function() {deepEqual( Stem("adăugi"), "adăug");});
test("adecvare -> adecv", function() {deepEqual( Stem("adecvare"), "adecv");});
test("adecvat -> adecv", function() {deepEqual( Stem("adecvat"), "adecv");});
test("adecvată -> adecv", function() {deepEqual( Stem("adecvată"), "adecv");});
test("adecvate -> adecv", function() {deepEqual( Stem("adecvate"), "adecv");});
test("adecvaţi -> adecv", function() {deepEqual( Stem("adecvaţi"), "adecv");});
test("ademeneşte -> ademen", function() {deepEqual( Stem("ademeneşte"), "ademen");});
test("ademenitoare -> ademen", function() {deepEqual( Stem("ademenitoare"), "ademen");});
test("ademeniţi -> ademen", function() {deepEqual( Stem("ademeniţi"), "ademen");});
test("adepţi -> adepţ", function() {deepEqual( Stem("adepţi"), "adepţ");});
test("aderenţe -> aderenţ", function() {deepEqual( Stem("aderenţe"), "aderenţ");});
test("adese -> ade", function() {deepEqual( Stem("adese"), "ade");});
test("adesea -> ade", function() {deepEqual( Stem("adesea"), "ade");});
test("adeseori -> adeseor", function() {deepEqual( Stem("adeseori"), "adeseor");});
test("adevăr -> adevăr", function() {deepEqual( Stem("adevăr"), "adevăr");});
test("adevărat -> adevăr", function() {deepEqual( Stem("adevărat"), "adevăr");});
test("adevărata -> adevăr", function() {deepEqual( Stem("adevărata"), "adevăr");});
test("adevărată -> adevăr", function() {deepEqual( Stem("adevărată"), "adevăr");});
test("adevărate -> adevăr", function() {deepEqual( Stem("adevărate"), "adevăr");});
test("adevăratei -> adevăr", function() {deepEqual( Stem("adevăratei"), "adevăr");});
test("adevăratul -> adevăr", function() {deepEqual( Stem("adevăratul"), "adevăr");});
test("adevăraţi -> adevăr", function() {deepEqual( Stem("adevăraţi"), "adevăr");});
test("adevăraţii -> adevăr", function() {deepEqual( Stem("adevăraţii"), "adevăr");});
test("adevăru -> adevăru", function() {deepEqual( Stem("adevăru"), "adevăru");});
test("adevărul -> adevăr", function() {deepEqual( Stem("adevărul"), "adevăr");});
test("adevărului -> adevăr", function() {deepEqual( Stem("adevărului"), "adevăr");});
test("adevăruri -> adevărur", function() {deepEqual( Stem("adevăruri"), "adevărur");});
test("adevărurile -> adevărur", function() {deepEqual( Stem("adevărurile"), "adevărur");});
test("adevărurilor -> adevărur", function() {deepEqual( Stem("adevărurilor"), "adevărur");});
test("adevereau -> adever", function() {deepEqual( Stem("adevereau"), "adever");});
test("adevereşte -> adever", function() {deepEqual( Stem("adevereşte"), "adever");});
test("adică -> adic", function() {deepEqual( Stem("adică"), "adic");});
test("adiecto -> adiecto", function() {deepEqual( Stem("adiecto"), "adiecto");});
test("adiere -> adier", function() {deepEqual( Stem("adiere"), "adier");});
test("adineauri -> adineaur", function() {deepEqual( Stem("adineauri"), "adineaur");});
test("adiţionăm -> adiţion", function() {deepEqual( Stem("adiţionăm"), "adiţion");});
test("adiţiune -> adit", function() {deepEqual( Stem("adiţiune"), "adit");});
test("adiţiunea -> adit", function() {deepEqual( Stem("adiţiunea"), "adit");});
test("adjectiv -> adject", function() {deepEqual( Stem("adjectiv"), "adject");});
test("administrativ -> administr", function() {deepEqual( Stem("administrativ"), "administr");});
test("administrativă -> administr", function() {deepEqual( Stem("administrativă"), "administr");});
test("administrative -> administr", function() {deepEqual( Stem("administrative"), "administr");});
test("administrativi -> administr", function() {deepEqual( Stem("administrativi"), "administr");});
test("administrator -> administr", function() {deepEqual( Stem("administrator"), "administr");});
test("administraţie -> administr", function() {deepEqual( Stem("administraţie"), "administr");});
test("administraţiei -> administr", function() {deepEqual( Stem("administraţiei"), "administr");});
test("admir -> admir", function() {deepEqual( Stem("admir"), "admir");});
test("admira -> admir", function() {deepEqual( Stem("admira"), "admir");});
test("admirabil -> admir", function() {deepEqual( Stem("admirabil"), "admir");});
test("admirabila -> admir", function() {deepEqual( Stem("admirabila"), "admir");});
test("admirabilă -> admir", function() {deepEqual( Stem("admirabilă"), "admir");});
test("admirabilei -> admirabile", function() {deepEqual( Stem("admirabilei"), "admirabile");});
test("admiram -> admir", function() {deepEqual( Stem("admiram"), "admir");});
test("admirasem -> admir", function() {deepEqual( Stem("admirasem"), "admir");});
test("admirativă -> admir", function() {deepEqual( Stem("admirativă"), "admir");});
test("admirative -> admir", function() {deepEqual( Stem("admirative"), "admir");});
test("admiratori -> admir", function() {deepEqual( Stem("admiratori"), "admir");});
test("admiratorilor -> admir", function() {deepEqual( Stem("admiratorilor"), "admir");});
test("admiraţia -> admir", function() {deepEqual( Stem("admiraţia"), "admir");});
test("admiraţie -> admir", function() {deepEqual( Stem("admiraţie"), "admir");});
test("admiraţiei -> admir", function() {deepEqual( Stem("admiraţiei"), "admir");});
test("admiraţiile -> admir", function() {deepEqual( Stem("admiraţiile"), "admir");});
test("admiră -> admir", function() {deepEqual( Stem("admiră"), "admir");});
test("admirăm -> admir", function() {deepEqual( Stem("admirăm"), "admir");});
test("admis -> admis", function() {deepEqual( Stem("admis"), "admis");});
test("admisesem -> admi", function() {deepEqual( Stem("admisesem"), "admi");});
test("admit -> admit", function() {deepEqual( Stem("admit"), "admit");});
test("admită -> admit", function() {deepEqual( Stem("admită"), "admit");});
test("admite -> admit", function() {deepEqual( Stem("admite"), "admit");});
test("admitem -> admit", function() {deepEqual( Stem("admitem"), "admit");});
test("admiteţi -> admit", function() {deepEqual( Stem("admiteţi"), "admit");});
test("admiţi -> admiţ", function() {deepEqual( Stem("admiţi"), "admiţ");});
test("admonestat -> admonest", function() {deepEqual( Stem("admonestat"), "admonest");});
test("adoarmă -> adoarm", function() {deepEqual( Stem("adoarmă"), "adoarm");});
test("adolescentă -> adolescent", function() {deepEqual( Stem("adolescentă"), "adolescent");});
test("adoptat -> adopt", function() {deepEqual( Stem("adoptat"), "adopt");});
test("adoptă -> adopt", function() {deepEqual( Stem("adoptă"), "adopt");});
test("ador -> ador", function() {deepEqual( Stem("ador"), "ador");});
test("adorabil -> ador", function() {deepEqual( Stem("adorabil"), "ador");});
test("adorabilă -> ador", function() {deepEqual( Stem("adorabilă"), "ador");});
test("adorată -> ador", function() {deepEqual( Stem("adorată"), "ador");});
test("adorate -> ador", function() {deepEqual( Stem("adorate"), "ador");});
test("adoratorii -> ador", function() {deepEqual( Stem("adoratorii"), "ador");});
test("adoraţie -> ador", function() {deepEqual( Stem("adoraţie"), "ador");});
test("adore -> ador", function() {deepEqual( Stem("adore"), "ador");});
test("adorm -> adorm", function() {deepEqual( Stem("adorm"), "adorm");});
test("adormi -> adorm", function() {deepEqual( Stem("adormi"), "adorm");});
test("adormit -> adorm", function() {deepEqual( Stem("adormit"), "adorm");});
test("adrenalină -> adrenalin", function() {deepEqual( Stem("adrenalină"), "adrenalin");});
test("adresa -> adres", function() {deepEqual( Stem("adresa"), "adres");});
test("adresat -> adres", function() {deepEqual( Stem("adresat"), "adres");});
test("adresată -> adres", function() {deepEqual( Stem("adresată"), "adres");});
test("adresaţi -> adres", function() {deepEqual( Stem("adresaţi"), "adres");});
test("adrese -> adre", function() {deepEqual( Stem("adrese"), "adre");});
test("adu -> adu", function() {deepEqual( Stem("adu"), "adu");});
test("aduc -> aduc", function() {deepEqual( Stem("aduc"), "aduc");});
test("aducând -> aduc", function() {deepEqual( Stem("aducând"), "aduc");});
test("aducă -> aduc", function() {deepEqual( Stem("aducă"), "aduc");});
test("aducătoare -> aduc", function() {deepEqual( Stem("aducătoare"), "aduc");});
test("aduce -> aduc", function() {deepEqual( Stem("aduce"), "aduc");});
test("aducea -> aduc", function() {deepEqual( Stem("aducea"), "aduc");});
test("aduceam -> aduc", function() {deepEqual( Stem("aduceam"), "aduc");});
test("aduceau -> aduc", function() {deepEqual( Stem("aduceau"), "aduc");});
test("aducem -> aduc", function() {deepEqual( Stem("aducem"), "aduc");});
test("aducere -> aduc", function() {deepEqual( Stem("aducere"), "aduc");});
test("aducerea -> aduc", function() {deepEqual( Stem("aducerea"), "aduc");});
test("aduceri -> aducer", function() {deepEqual( Stem("aduceri"), "aducer");});
test("aducerii -> aducer", function() {deepEqual( Stem("aducerii"), "aducer");});
test("aducerilor -> aducer", function() {deepEqual( Stem("aducerilor"), "aducer");});
test("aduceţi -> aduc", function() {deepEqual( Stem("aduceţi"), "aduc");});
test("aduci -> aduc", function() {deepEqual( Stem("aduci"), "aduc");});
test("adulmecau -> adulmec", function() {deepEqual( Stem("adulmecau"), "adulmec");});
test("adult -> adult", function() {deepEqual( Stem("adult"), "adult");});
test("adun -> adun", function() {deepEqual( Stem("adun"), "adun");});
test("aduna -> adun", function() {deepEqual( Stem("aduna"), "adun");});
test("adunam -> adun", function() {deepEqual( Stem("adunam"), "adun");});
test("adunare -> adun", function() {deepEqual( Stem("adunare"), "adun");});
test("adunarea -> adun", function() {deepEqual( Stem("adunarea"), "adun");});
test("adunase -> adun", function() {deepEqual( Stem("adunase"), "adun");});
test("adunat -> adun", function() {deepEqual( Stem("adunat"), "adun");});
test("adunată -> adun", function() {deepEqual( Stem("adunată"), "adun");});
test("adunate -> adun", function() {deepEqual( Stem("adunate"), "adun");});
test("adunaţi -> adun", function() {deepEqual( Stem("adunaţi"), "adun");});
test("adunau -> adun", function() {deepEqual( Stem("adunau"), "adun");});
test("adună -> adun", function() {deepEqual( Stem("adună"), "adun");});
test("adunăm -> adun", function() {deepEqual( Stem("adunăm"), "adun");});
test("adunării -> adunăr", function() {deepEqual( Stem("adunării"), "adunăr");});
test("adunările -> adunăr", function() {deepEqual( Stem("adunările"), "adunăr");});
test("adunărilor -> adunăr", function() {deepEqual( Stem("adunărilor"), "adunăr");});
test("adunător -> adun", function() {deepEqual( Stem("adunător"), "adun");});
test("adunătură -> adunăt", function() {deepEqual( Stem("adunătură"), "adunăt");});
test("adune -> adun", function() {deepEqual( Stem("adune"), "adun");});
test("adus -> adus", function() {deepEqual( Stem("adus"), "adus");});
test("adusă -> adus", function() {deepEqual( Stem("adusă"), "adus");});
test("aduse -> adu", function() {deepEqual( Stem("aduse"), "adu");});
test("adusese -> adu", function() {deepEqual( Stem("adusese"), "adu");});
test("aduşi -> aduş", function() {deepEqual( Stem("aduşi"), "aduş");});
test("adversar -> adversar", function() {deepEqual( Stem("adversar"), "adversar");});
test("adversarii -> adversar", function() {deepEqual( Stem("adversarii"), "adversar");});
test("adversarul -> adversar", function() {deepEqual( Stem("adversarul"), "adversar");});
test("aer -> aer", function() {deepEqual( Stem("aer"), "aer");});
test("aeraţiei -> aer", function() {deepEqual( Stem("aeraţiei"), "aer");});
test("aere -> aer", function() {deepEqual( Stem("aere"), "aer");});
test("aerian -> aerian", function() {deepEqual( Stem("aerian"), "aerian");});
test("aeroplan -> aeroplan", function() {deepEqual( Stem("aeroplan"), "aeroplan");});
test("aeroplanele -> aeroplan", function() {deepEqual( Stem("aeroplanele"), "aeroplan");});
test("aeroplanul -> aeroplan", function() {deepEqual( Stem("aeroplanul"), "aeroplan");});
test("aerul -> aer", function() {deepEqual( Stem("aerul"), "aer");});
test("aerului -> aer", function() {deepEqual( Stem("aerului"), "aer");});
test("afacere -> afac", function() {deepEqual( Stem("afacere"), "afac");});
test("afacerea -> afac", function() {deepEqual( Stem("afacerea"), "afac");});
test("afaceri -> afacer", function() {deepEqual( Stem("afaceri"), "afacer");});
test("afacerile -> afacer", function() {deepEqual( Stem("afacerile"), "afacer");});
test("afacerilor -> afacer", function() {deepEqual( Stem("afacerilor"), "afacer");});
test("afara -> afar", function() {deepEqual( Stem("afara"), "afar");});
test("afară -> afar", function() {deepEqual( Stem("afară"), "afar");});
test("afânat -> afân", function() {deepEqual( Stem("afânat"), "afân");});
test("afect -> afect", function() {deepEqual( Stem("afect"), "afect");});
test("afectare -> afect", function() {deepEqual( Stem("afectare"), "afect");});
test("afectat -> afect", function() {deepEqual( Stem("afectat"), "afect");});
test("afectată -> afect", function() {deepEqual( Stem("afectată"), "afect");});
test("afectate -> afect", function() {deepEqual( Stem("afectate"), "afect");});
test("afectaţi -> afect", function() {deepEqual( Stem("afectaţi"), "afect");});
test("afectează -> afect", function() {deepEqual( Stem("afectează"), "afect");});
test("afectuoasă -> afectu", function() {deepEqual( Stem("afectuoasă"), "afectu");});
test("afecţie -> afecţ", function() {deepEqual( Stem("afecţie"), "afecţ");});
test("afecţiune -> afect", function() {deepEqual( Stem("afecţiune"), "afect");});
test("afecţiunea -> afect", function() {deepEqual( Stem("afecţiunea"), "afect");});
test("afirm -> afirm", function() {deepEqual( Stem("afirm"), "afirm");});
test("afirma -> afirm", function() {deepEqual( Stem("afirma"), "afirm");});
test("afirmai -> afirm", function() {deepEqual( Stem("afirmai"), "afirm");});
test("afirmare -> afirm", function() {deepEqual( Stem("afirmare"), "afirm");});
test("afirmarea -> afirm", function() {deepEqual( Stem("afirmarea"), "afirm");});
test("afirmat -> afirm", function() {deepEqual( Stem("afirmat"), "afirm");});
test("afirmativ -> afirm", function() {deepEqual( Stem("afirmativ"), "afirm");});
test("afirmaţi -> afirm", function() {deepEqual( Stem("afirmaţi"), "afirm");});
test("afirmaţia -> afirm", function() {deepEqual( Stem("afirmaţia"), "afirm");});
test("afirmaţie -> afirm", function() {deepEqual( Stem("afirmaţie"), "afirm");});
test("afirmaţiei -> afirm", function() {deepEqual( Stem("afirmaţiei"), "afirm");});
test("afirmaţii -> afirm", function() {deepEqual( Stem("afirmaţii"), "afirm");});
test("afirmaţiile -> afirm", function() {deepEqual( Stem("afirmaţiile"), "afirm");});
test("afirmaţiune -> afirm", function() {deepEqual( Stem("afirmaţiune"), "afirm");});
test("afirmaţiunea -> afirm", function() {deepEqual( Stem("afirmaţiunea"), "afirm");});
test("afirmaţiuni -> afirmat", function() {deepEqual( Stem("afirmaţiuni"), "afirmat");});
test("afirmaţiunii -> afirmat", function() {deepEqual( Stem("afirmaţiunii"), "afirmat");});
test("afirmaţiunilor -> afirmat", function() {deepEqual( Stem("afirmaţiunilor"), "afirmat");});
test("afirmau -> afirm", function() {deepEqual( Stem("afirmau"), "afirm");});
test("afirmând -> afirm", function() {deepEqual( Stem("afirmând"), "afirm");});
test("afirmă -> afirm", function() {deepEqual( Stem("afirmă"), "afirm");});
test("afirmăm -> afirm", function() {deepEqual( Stem("afirmăm"), "afirm");});
test("afirmării -> afirmăr", function() {deepEqual( Stem("afirmării"), "afirmăr");});
test("afirme -> afirm", function() {deepEqual( Stem("afirme"), "afirm");});
test("afirmi -> afirm", function() {deepEqual( Stem("afirmi"), "afirm");});
test("afiş -> afiş", function() {deepEqual( Stem("afiş"), "afiş");});
test("afişat -> afiş", function() {deepEqual( Stem("afişat"), "afiş");});
test("afişe -> afiş", function() {deepEqual( Stem("afişe"), "afiş");});
test("afişeze -> afiş", function() {deepEqual( Stem("afişeze"), "afiş");});
test("afla -> afla", function() {deepEqual( Stem("afla"), "afla");});
test("aflam -> aflam", function() {deepEqual( Stem("aflam"), "aflam");});
test("aflat -> aflat", function() {deepEqual( Stem("aflat"), "aflat");});
test("aflau -> aflau", function() {deepEqual( Stem("aflau"), "aflau");});
test("aflând -> aflând", function() {deepEqual( Stem("aflând"), "aflând");});
test("află -> află", function() {deepEqual( Stem("află"), "află");});
test("aflăm -> aflăm", function() {deepEqual( Stem("aflăm"), "aflăm");});
test("afle -> afle", function() {deepEqual( Stem("afle"), "afle");});
test("afli -> afli", function() {deepEqual( Stem("afli"), "afli");});
test("aflu -> aflu", function() {deepEqual( Stem("aflu"), "aflu");});
test("aforismelor -> aforist", function() {deepEqual( Stem("aforismelor"), "aforist");});
test("africa -> afric", function() {deepEqual( Stem("africa"), "afric");});
test("afumată -> afum", function() {deepEqual( Stem("afumată"), "afum");});
test("afunda -> afund", function() {deepEqual( Stem("afunda"), "afund");});
test("afundă -> afund", function() {deepEqual( Stem("afundă"), "afund");});
test("afurisită -> afuris", function() {deepEqual( Stem("afurisită"), "afuris");});
test("afurisiţii -> afuris", function() {deepEqual( Stem("afurisiţii"), "afuris");});
test("agale -> agal", function() {deepEqual( Stem("agale"), "agal");});
test("agaţe -> agaţ", function() {deepEqual( Stem("agaţe"), "agaţ");});
test("agăţa -> agăţ", function() {deepEqual( Stem("agăţa"), "agăţ");});
test("agăţă -> agăţ", function() {deepEqual( Stem("agăţă"), "agăţ");});
test("agăţător -> agăţ", function() {deepEqual( Stem("agăţător"), "agăţ");});
test("agendă -> agend", function() {deepEqual( Stem("agendă"), "agend");});
test("agende -> agend", function() {deepEqual( Stem("agende"), "agend");});
test("agentul -> agent", function() {deepEqual( Stem("agentul"), "agent");});
test("agenţie -> agenţ", function() {deepEqual( Stem("agenţie"), "agenţ");});
test("ager -> ager", function() {deepEqual( Stem("ager"), "ager");});
test("agerime -> agerim", function() {deepEqual( Stem("agerime"), "agerim");});
test("agerimea -> agerim", function() {deepEqual( Stem("agerimea"), "agerim");});
test("aghiotant -> aghiot", function() {deepEqual( Stem("aghiotant"), "aghiot");});
test("aghiotantul -> aghiot", function() {deepEqual( Stem("aghiotantul"), "aghiot");});
test("aghiotantului -> aghiot", function() {deepEqual( Stem("aghiotantului"), "aghiot");});
test("aghiotanţii -> aghiotanţ", function() {deepEqual( Stem("aghiotanţii"), "aghiotanţ");});
test("aghiotanul -> aghiotan", function() {deepEqual( Stem("aghiotanul"), "aghiotan");});
test("agitat -> agit", function() {deepEqual( Stem("agitat"), "agit");});
test("agitată -> agit", function() {deepEqual( Stem("agitată"), "agit");});
test("agitate -> agitat", function() {deepEqual( Stem("agitate"), "agitat");});
test("agitator -> agit", function() {deepEqual( Stem("agitator"), "agit");});
test("agitatorii -> agit", function() {deepEqual( Stem("agitatorii"), "agit");});
test("agitatorilor -> agit", function() {deepEqual( Stem("agitatorilor"), "agit");});
test("agitaţia -> agit", function() {deepEqual( Stem("agitaţia"), "agit");});
test("agitaţie -> agit", function() {deepEqual( Stem("agitaţie"), "agit");});
test("agitând -> agit", function() {deepEqual( Stem("agitând"), "agit");});
test("agită -> agit", function() {deepEqual( Stem("agită"), "agit");});
test("aglomeraţie -> aglomer", function() {deepEqual( Stem("aglomeraţie"), "aglomer");});
test("agonia -> agon", function() {deepEqual( Stem("agonia"), "agon");});
test("agonie -> agon", function() {deepEqual( Stem("agonie"), "agon");});
test("agoniei -> agon", function() {deepEqual( Stem("agoniei"), "agon");});
test("agonisit -> agonis", function() {deepEqual( Stem("agonisit"), "agonis");});
test("agraveze -> agrav", function() {deepEqual( Stem("agraveze"), "agrav");});
test("agreabil -> agreabil", function() {deepEqual( Stem("agreabil"), "agreabil");});
test("agreabile -> agreabil", function() {deepEqual( Stem("agreabile"), "agreabil");});
test("agreabilul -> agreabil", function() {deepEqual( Stem("agreabilul"), "agreabil");});
test("agregaţie -> agreg", function() {deepEqual( Stem("agregaţie"), "agreg");});
test("agremente -> agrement", function() {deepEqual( Stem("agremente"), "agrement");});
test("agresivă -> agres", function() {deepEqual( Stem("agresivă"), "agres");});
test("agreziune -> agreziun", function() {deepEqual( Stem("agreziune"), "agreziun");});
test("agricultură -> agricult", function() {deepEqual( Stem("agricultură"), "agricult");});
test("ah -> ah", function() {deepEqual( Stem("ah"), "ah");});
test("ai -> ai", function() {deepEqual( Stem("ai"), "ai");});
test("aia -> aia", function() {deepEqual( Stem("aia"), "aia");});
test("aibă -> aib", function() {deepEqual( Stem("aibă"), "aib");});
test("aici -> aic", function() {deepEqual( Stem("aici"), "aic");});
test("ailaltă -> ailalt", function() {deepEqual( Stem("ailaltă"), "ailalt");});
test("aiment -> aiment", function() {deepEqual( Stem("aiment"), "aiment");});
test("aiurea -> aiur", function() {deepEqual( Stem("aiurea"), "aiur");});
test("aiureală -> aiureal", function() {deepEqual( Stem("aiureală"), "aiureal");});
test("aiurelei -> aiurele", function() {deepEqual( Stem("aiurelei"), "aiurele");});
test("aiurit -> aiur", function() {deepEqual( Stem("aiurit"), "aiur");});
test("aiuriţi -> aiur", function() {deepEqual( Stem("aiuriţi"), "aiur");});
test("ajun -> ajun", function() {deepEqual( Stem("ajun"), "ajun");});
test("ajung -> ajung", function() {deepEqual( Stem("ajung"), "ajung");});
test("ajungă -> ajung", function() {deepEqual( Stem("ajungă"), "ajung");});
test("ajunge -> ajung", function() {deepEqual( Stem("ajunge"), "ajung");});
test("ajungea -> ajung", function() {deepEqual( Stem("ajungea"), "ajung");});
test("ajungeai -> ajung", function() {deepEqual( Stem("ajungeai"), "ajung");});
test("ajungeau -> ajung", function() {deepEqual( Stem("ajungeau"), "ajung");});
test("ajungem -> ajung", function() {deepEqual( Stem("ajungem"), "ajung");});
test("ajungere -> ajung", function() {deepEqual( Stem("ajungere"), "ajung");});
test("ajungerea -> ajung", function() {deepEqual( Stem("ajungerea"), "ajung");});
test("ajungeţi -> ajung", function() {deepEqual( Stem("ajungeţi"), "ajung");});
test("ajungi -> ajung", function() {deepEqual( Stem("ajungi"), "ajung");});
test("ajuns -> ajuns", function() {deepEqual( Stem("ajuns"), "ajuns");});
test("ajunse -> ajun", function() {deepEqual( Stem("ajunse"), "ajun");});
test("ajunsese -> ajun", function() {deepEqual( Stem("ajunsese"), "ajun");});
test("ajunsesem -> ajun", function() {deepEqual( Stem("ajunsesem"), "ajun");});
test("ajunşi -> ajunş", function() {deepEqual( Stem("ajunşi"), "ajunş");});
test("ajunul -> ajun", function() {deepEqual( Stem("ajunul"), "ajun");});
test("ajustate -> ajust", function() {deepEqual( Stem("ajustate"), "ajust");});
test("ajustări -> ajustăr", function() {deepEqual( Stem("ajustări"), "ajustăr");});
test("ajuta -> ajut", function() {deepEqual( Stem("ajuta"), "ajut");});
test("ajutase -> ajut", function() {deepEqual( Stem("ajutase"), "ajut");});
test("ajutat -> ajut", function() {deepEqual( Stem("ajutat"), "ajut");});
test("ajutându -> ajut", function() {deepEqual( Stem("ajutându"), "ajut");});
test("ajută -> ajut", function() {deepEqual( Stem("ajută"), "ajut");});
test("ajutătoare -> ajut", function() {deepEqual( Stem("ajutătoare"), "ajut");});
test("ajutător -> ajut", function() {deepEqual( Stem("ajutător"), "ajut");});
test("ajute -> ajut", function() {deepEqual( Stem("ajute"), "ajut");});
test("ajutoare -> ajutoar", function() {deepEqual( Stem("ajutoare"), "ajutoar");});
test("ajutor -> ajutor", function() {deepEqual( Stem("ajutor"), "ajutor");});
test("ajutorul -> ajutor", function() {deepEqual( Stem("ajutorul"), "ajutor");});
test("al -> al", function() {deepEqual( Stem("al"), "al");});
test("alai -> ala", function() {deepEqual( Stem("alai"), "ala");});
test("alaltăieri -> alaltăier", function() {deepEqual( Stem("alaltăieri"), "alaltăier");});
test("alamă -> alam", function() {deepEqual( Stem("alamă"), "alam");});
test("alarma -> alarm", function() {deepEqual( Stem("alarma"), "alarm");});
test("alarmant -> alarm", function() {deepEqual( Stem("alarmant"), "alarm");});
test("alarmat -> alarm", function() {deepEqual( Stem("alarmat"), "alarm");});
test("alarmată -> alarm", function() {deepEqual( Stem("alarmată"), "alarm");});
test("alarmaţi -> alarm", function() {deepEqual( Stem("alarmaţi"), "alarm");});
test("alarmele -> alarm", function() {deepEqual( Stem("alarmele"), "alarm");});
test("alămie -> alăm", function() {deepEqual( Stem("alămie"), "alăm");});
test("alămiul -> alăm", function() {deepEqual( Stem("alămiul"), "alăm");});
test("alăturată -> alătur", function() {deepEqual( Stem("alăturată"), "alătur");});
test("alăturate -> alătur", function() {deepEqual( Stem("alăturate"), "alătur");});
test("alăturaţi -> alătur", function() {deepEqual( Stem("alăturaţi"), "alătur");});
test("alătură -> alăt", function() {deepEqual( Stem("alătură"), "alăt");});
test("alături -> alătur", function() {deepEqual( Stem("alături"), "alătur");});
test("alb -> alb", function() {deepEqual( Stem("alb"), "alb");});
test("alba -> alba", function() {deepEqual( Stem("alba"), "alba");});
test("albastră -> albastr", function() {deepEqual( Stem("albastră"), "albastr");});
test("albastre -> albastr", function() {deepEqual( Stem("albastre"), "albastr");});
test("albastru -> albastru", function() {deepEqual( Stem("albastru"), "albastru");});
test("albastrul -> albastr", function() {deepEqual( Stem("albastrul"), "albastr");});
test("albaştri -> albaştr", function() {deepEqual( Stem("albaştri"), "albaştr");});
test("albă -> albă", function() {deepEqual( Stem("albă"), "albă");});
test("albăstrie -> albăstr", function() {deepEqual( Stem("albăstrie"), "albăstr");});
test("albăstrui -> albăstr", function() {deepEqual( Stem("albăstrui"), "albăstr");});
test("albăstruie -> albăstrui", function() {deepEqual( Stem("albăstruie"), "albăstrui");});
test("albe -> albe", function() {deepEqual( Stem("albe"), "albe");});
test("albească -> albeasc", function() {deepEqual( Stem("albească"), "albeasc");});
test("albeaţa -> albeaţ", function() {deepEqual( Stem("albeaţa"), "albeaţ");});
test("albi -> albi", function() {deepEqual( Stem("albi"), "albi");});
test("albia -> albi", function() {deepEqual( Stem("albia"), "albi");});
test("albicioasă -> albic", function() {deepEqual( Stem("albicioasă"), "albic");});
test("albicioase -> albic", function() {deepEqual( Stem("albicioase"), "albic");});
test("albicios -> albic", function() {deepEqual( Stem("albicios"), "albic");});
test("albicioşi -> albic", function() {deepEqual( Stem("albicioşi"), "albic");});
test("albina -> albin", function() {deepEqual( Stem("albina"), "albin");});
test("albină -> albin", function() {deepEqual( Stem("albină"), "albin");});
test("albită -> albit", function() {deepEqual( Stem("albită"), "albit");});
test("albul -> alb", function() {deepEqual( Stem("albul"), "alb");});
test("albumul -> album", function() {deepEqual( Stem("albumul"), "album");});
test("alburească -> albur", function() {deepEqual( Stem("alburească"), "albur");});
test("alburesc -> albur", function() {deepEqual( Stem("alburesc"), "albur");});
test("alburiu -> alburiu", function() {deepEqual( Stem("alburiu"), "alburiu");});
test("alburos -> albur", function() {deepEqual( Stem("alburos"), "albur");});
test("alcalay -> alcalay", function() {deepEqual( Stem("alcalay"), "alcalay");});
test("alcătuieşte -> alcătui", function() {deepEqual( Stem("alcătuieşte"), "alcătui");});
test("alcătuirea -> alcătu", function() {deepEqual( Stem("alcătuirea"), "alcătu");});
test("alcătuise -> alcătu", function() {deepEqual( Stem("alcătuise"), "alcătu");});
test("alcătuită -> alcătu", function() {deepEqual( Stem("alcătuită"), "alcătu");});
test("alcătuite -> alcătu", function() {deepEqual( Stem("alcătuite"), "alcătu");});
test("alcool -> alcool", function() {deepEqual( Stem("alcool"), "alcool");});
test("ale -> ale", function() {deepEqual( Stem("ale"), "ale");});
test("alea -> ale", function() {deepEqual( Stem("alea"), "ale");});
test("aleagă -> aleag", function() {deepEqual( Stem("aleagă"), "aleag");});
test("aleargă -> alearg", function() {deepEqual( Stem("aleargă"), "alearg");});
test("aleasă -> aleas", function() {deepEqual( Stem("aleasă"), "aleas");});
test("alecu -> alecu", function() {deepEqual( Stem("alecu"), "alecu");});
test("alee -> ale", function() {deepEqual( Stem("alee"), "ale");});
test("aleea -> ale", function() {deepEqual( Stem("aleea"), "ale");});
test("aleg -> aleg", function() {deepEqual( Stem("aleg"), "aleg");});
test("alegător -> aleg", function() {deepEqual( Stem("alegător"), "aleg");});
test("alege -> aleg", function() {deepEqual( Stem("alege"), "aleg");});
test("alegea -> aleg", function() {deepEqual( Stem("alegea"), "aleg");});
test("alegem -> aleg", function() {deepEqual( Stem("alegem"), "aleg");});
test("alegere -> aleg", function() {deepEqual( Stem("alegere"), "aleg");});
test("alegerea -> aleg", function() {deepEqual( Stem("alegerea"), "aleg");});
test("alegeţi -> aleg", function() {deepEqual( Stem("alegeţi"), "aleg");});
test("alegi -> aleg", function() {deepEqual( Stem("alegi"), "aleg");});
test("alegorie -> alegor", function() {deepEqual( Stem("alegorie"), "alegor");});
test("aleile -> ale", function() {deepEqual( Stem("aleile"), "ale");});
test("alerg -> alerg", function() {deepEqual( Stem("alerg"), "alerg");});
test("alerga -> alerg", function() {deepEqual( Stem("alerga"), "alerg");});
test("alergarea -> alerg", function() {deepEqual( Stem("alergarea"), "alerg");});
test("alergat -> alerg", function() {deepEqual( Stem("alergat"), "alerg");});
test("alergau -> alerg", function() {deepEqual( Stem("alergau"), "alerg");});
test("alergând -> alerg", function() {deepEqual( Stem("alergând"), "alerg");});
test("alergăm -> alerg", function() {deepEqual( Stem("alergăm"), "alerg");});
test("alergător -> alerg", function() {deepEqual( Stem("alergător"), "alerg");});
test("alerge -> alerg", function() {deepEqual( Stem("alerge"), "alerg");});
test("alergi -> alerg", function() {deepEqual( Stem("alergi"), "alerg");});
test("alernativ -> alern", function() {deepEqual( Stem("alernativ"), "alern");});
test("ales -> ales", function() {deepEqual( Stem("ales"), "ales");});
test("alese -> ale", function() {deepEqual( Stem("alese"), "ale");});
test("alexandra -> alexandr", function() {deepEqual( Stem("alexandra"), "alexandr");});
test("alexandria -> alexandr", function() {deepEqual( Stem("alexandria"), "alexandr");});
test("alibi -> alib", function() {deepEqual( Stem("alibi"), "alib");});
test("alibiul -> alib", function() {deepEqual( Stem("alibiul"), "alib");});
test("alienantă -> alien", function() {deepEqual( Stem("alienantă"), "alien");});
test("alieze -> aliez", function() {deepEqual( Stem("alieze"), "aliez");});
test("alifie -> alif", function() {deepEqual( Stem("alifie"), "alif");});
test("alifiile -> alif", function() {deepEqual( Stem("alifiile"), "alif");});
test("aliment -> aliment", function() {deepEqual( Stem("aliment"), "aliment");});
test("alimentar -> alimentar", function() {deepEqual( Stem("alimentar"), "alimentar");});
test("alimentară -> aliment", function() {deepEqual( Stem("alimentară"), "aliment");});
test("alimentarei -> alimentare", function() {deepEqual( Stem("alimentarei"), "alimentare");});
test("alimentat -> aliment", function() {deepEqual( Stem("alimentat"), "aliment");});
test("alimentată -> aliment", function() {deepEqual( Stem("alimentată"), "aliment");});
test("alimentau -> aliment", function() {deepEqual( Stem("alimentau"), "aliment");});
test("alimentăm -> aliment", function() {deepEqual( Stem("alimentăm"), "aliment");});
test("alimentării -> alimentăr", function() {deepEqual( Stem("alimentării"), "alimentăr");});
test("alimentează -> aliment", function() {deepEqual( Stem("alimentează"), "aliment");});
test("alimentelor -> aliment", function() {deepEqual( Stem("alimentelor"), "aliment");});
test("alimentînd -> alimentînd", function() {deepEqual( Stem("alimentînd"), "alimentînd");});
test("alina -> alin", function() {deepEqual( Stem("alina"), "alin");});
test("alineat -> alin", function() {deepEqual( Stem("alineat"), "alin");});
test("aliniamentul -> aliniament", function() {deepEqual( Stem("aliniamentul"), "aliniament");});
test("aliniat -> alin", function() {deepEqual( Stem("aliniat"), "alin");});
test("aliniate -> alin", function() {deepEqual( Stem("aliniate"), "alin");});
test("aliniatele -> alin", function() {deepEqual( Stem("aliniatele"), "alin");});
test("aliniaţi -> alin", function() {deepEqual( Stem("aliniaţi"), "alin");});
test("aliniază -> aliniaz", function() {deepEqual( Stem("aliniază"), "aliniaz");});
test("aliniem -> alin", function() {deepEqual( Stem("aliniem"), "alin");});
test("aliniere -> alinier", function() {deepEqual( Stem("aliniere"), "alinier");});
test("alinierii -> alinier", function() {deepEqual( Stem("alinierii"), "alinier");});
test("alinieze -> aliniez", function() {deepEqual( Stem("alinieze"), "aliniez");});
test("alinta -> alint", function() {deepEqual( Stem("alinta"), "alint");});
test("alintată -> alint", function() {deepEqual( Stem("alintată"), "alint");});
test("alintau -> alint", function() {deepEqual( Stem("alintau"), "alint");});
test("alipesc -> alip", function() {deepEqual( Stem("alipesc"), "alip");});
test("alipire -> alip", function() {deepEqual( Stem("alipire"), "alip");});
test("alivoar -> alivoar", function() {deepEqual( Stem("alivoar"), "alivoar");});
test("alo -> alo", function() {deepEqual( Stem("alo"), "alo");});
test("alois -> alois", function() {deepEqual( Stem("alois"), "alois");});
test("alpenstockuri -> alpenstockur", function() {deepEqual( Stem("alpenstockuri"), "alpenstockur");});
test("als -> als", function() {deepEqual( Stem("als"), "als");});
test("alsaciei -> alsac", function() {deepEqual( Stem("alsaciei"), "alsac");});
test("alt -> alt", function() {deepEqual( Stem("alt"), "alt");});
test("alta -> alta", function() {deepEqual( Stem("alta"), "alta");});
test("altarului -> altar", function() {deepEqual( Stem("altarului"), "altar");});
test("altă -> altă", function() {deepEqual( Stem("altă"), "altă");});
test("altădată -> altăd", function() {deepEqual( Stem("altădată"), "altăd");});
test("altături -> altătur", function() {deepEqual( Stem("altături"), "altătur");});
test("altceva -> altcev", function() {deepEqual( Stem("altceva"), "altcev");});
test("altcineva -> altcinev", function() {deepEqual( Stem("altcineva"), "altcinev");});
test("alte -> alte", function() {deepEqual( Stem("alte"), "alte");});
test("altei -> alte", function() {deepEqual( Stem("altei"), "alte");});
test("alteia -> altei", function() {deepEqual( Stem("alteia"), "altei");});
test("altele -> alte", function() {deepEqual( Stem("altele"), "alte");});
test("alteori -> alteor", function() {deepEqual( Stem("alteori"), "alteor");});
test("alterat -> alter", function() {deepEqual( Stem("alterat"), "alter");});
test("alternativ -> altern", function() {deepEqual( Stem("alternativ"), "altern");});
test("alteţa -> alteţ", function() {deepEqual( Stem("alteţa"), "alteţ");});
test("altfel -> altfel", function() {deepEqual( Stem("altfel"), "altfel");});
test("altitudine -> altitudin", function() {deepEqual( Stem("altitudine"), "altitudin");});
test("altiţe -> altiţ", function() {deepEqual( Stem("altiţe"), "altiţ");});
test("altminteri -> altminter", function() {deepEqual( Stem("altminteri"), "altminter");});
test("altoieşte -> altoi", function() {deepEqual( Stem("altoieşte"), "altoi");});
test("altoirea -> altoir", function() {deepEqual( Stem("altoirea"), "altoir");});
test("altoită -> altoit", function() {deepEqual( Stem("altoită"), "altoit");});
test("altor -> altor", function() {deepEqual( Stem("altor"), "altor");});
test("altora -> altor", function() {deepEqual( Stem("altora"), "altor");});
test("altruism -> altruism", function() {deepEqual( Stem("altruism"), "altruism");});
test("altruismul -> altruism", function() {deepEqual( Stem("altruismul"), "altruism");});
test("altui -> altu", function() {deepEqual( Stem("altui"), "altu");});
test("altuia -> altui", function() {deepEqual( Stem("altuia"), "altui");});
test("altul -> alt", function() {deepEqual( Stem("altul"), "alt");});
test("altundeva -> altundev", function() {deepEqual( Stem("altundeva"), "altundev");});
test("alţi -> alţi", function() {deepEqual( Stem("alţi"), "alţi");});
test("alţii -> alţi", function() {deepEqual( Stem("alţii"), "alţi");});
test("alune -> alun", function() {deepEqual( Stem("alune"), "alun");});
test("alunec -> alunec", function() {deepEqual( Stem("alunec"), "alunec");});
test("aluneca -> alunec", function() {deepEqual( Stem("aluneca"), "alunec");});
test("alunecare -> alunec", function() {deepEqual( Stem("alunecare"), "alunec");});
test("alunecarea -> alunec", function() {deepEqual( Stem("alunecarea"), "alunec");});
test("alunecat -> alunec", function() {deepEqual( Stem("alunecat"), "alunec");});
test("alunecaţi -> alunec", function() {deepEqual( Stem("alunecaţi"), "alunec");});
test("alunecau -> alunec", function() {deepEqual( Stem("alunecau"), "alunec");});
test("alunecând -> alunec", function() {deepEqual( Stem("alunecând"), "alunec");});
test("alunecă -> alunec", function() {deepEqual( Stem("alunecă"), "alunec");});
test("alunecăm -> alunec", function() {deepEqual( Stem("alunecăm"), "alunec");});
test("alunecări -> alunecăr", function() {deepEqual( Stem("alunecări"), "alunecăr");});
test("alunecării -> alunecăr", function() {deepEqual( Stem("alunecării"), "alunecăr");});
test("alunecările -> alunecăr", function() {deepEqual( Stem("alunecările"), "alunecăr");});
test("alunecînd -> alunecînd", function() {deepEqual( Stem("alunecînd"), "alunecînd");});
test("alunecoasă -> alunec", function() {deepEqual( Stem("alunecoasă"), "alunec");});
test("alungat -> alung", function() {deepEqual( Stem("alungat"), "alung");});
test("alungată -> alung", function() {deepEqual( Stem("alungată"), "alung");});
test("alunge -> alung", function() {deepEqual( Stem("alunge"), "alung");});
test("alura -> alur", function() {deepEqual( Stem("alura"), "alur");});
test("aluvionar -> aluvionar", function() {deepEqual( Stem("aluvionar"), "aluvionar");});
test("aluzia -> aluz", function() {deepEqual( Stem("aluzia"), "aluz");});
test("aluzianess -> aluzianess", function() {deepEqual( Stem("aluzianess"), "aluzianess");});
test("aluzie -> aluz", function() {deepEqual( Stem("aluzie"), "aluz");});
test("aluzieness -> aluzieness", function() {deepEqual( Stem("aluzieness"), "aluzieness");});
test("aluzii -> aluz", function() {deepEqual( Stem("aluzii"), "aluz");});
test("aluziile -> aluz", function() {deepEqual( Stem("aluziile"), "aluz");});
test("am -> am", function() {deepEqual( Stem("am"), "am");});
test("amabil -> amabil", function() {deepEqual( Stem("amabil"), "amabil");});
test("amabilă -> amabil", function() {deepEqual( Stem("amabilă"), "amabil");});
test("amabile -> amabil", function() {deepEqual( Stem("amabile"), "amabil");});
test("amabili -> amabil", function() {deepEqual( Stem("amabili"), "amabil");});
test("amabilitate -> amabil", function() {deepEqual( Stem("amabilitate"), "amabil");});
test("amaneta -> amanet", function() {deepEqual( Stem("amaneta"), "amanet");});
test("amant -> amant", function() {deepEqual( Stem("amant"), "amant");});
test("amanta -> amant", function() {deepEqual( Stem("amanta"), "amant");});
test("amantă -> amant", function() {deepEqual( Stem("amantă"), "amant");});
test("amante -> amant", function() {deepEqual( Stem("amante"), "amant");});
test("amantul -> amant", function() {deepEqual( Stem("amantul"), "amant");});
test("amantului -> amant", function() {deepEqual( Stem("amantului"), "amant");});
test("amanţi -> amanţ", function() {deepEqual( Stem("amanţi"), "amanţ");});
test("amanţii -> amanţ", function() {deepEqual( Stem("amanţii"), "amanţ");});
test("amanţilor -> amanţ", function() {deepEqual( Stem("amanţilor"), "amanţ");});
test("amar -> amar", function() {deepEqual( Stem("amar"), "amar");});
test("amara -> amar", function() {deepEqual( Stem("amara"), "amar");});
test("amară -> amar", function() {deepEqual( Stem("amară"), "amar");});
test("amare -> amar", function() {deepEqual( Stem("amare"), "amar");});
test("amator -> amat", function() {deepEqual( Stem("amator"), "amat");});
test("amânare -> amân", function() {deepEqual( Stem("amânare"), "amân");});
test("amânasem -> amân", function() {deepEqual( Stem("amânasem"), "amân");});
test("amânat -> amân", function() {deepEqual( Stem("amânat"), "amân");});
test("amână -> amân", function() {deepEqual( Stem("amână"), "amân");});
test("amândoi -> amândo", function() {deepEqual( Stem("amândoi"), "amândo");});
test("amândouă -> amândou", function() {deepEqual( Stem("amândouă"), "amândou");});
test("amândurora -> amânduror", function() {deepEqual( Stem("amândurora"), "amânduror");});
test("amăgitoare -> amăg", function() {deepEqual( Stem("amăgitoare"), "amăg");});
test("amănunt -> amănunt", function() {deepEqual( Stem("amănunt"), "amănunt");});
test("amănunte -> amănunt", function() {deepEqual( Stem("amănunte"), "amănunt");});
test("amănuntele -> amănunt", function() {deepEqual( Stem("amănuntele"), "amănunt");});
test("amănunţită -> amănunţ", function() {deepEqual( Stem("amănunţită"), "amănunţ");});
test("amănunţite -> amănunţ", function() {deepEqual( Stem("amănunţite"), "amănunţ");});
test("amărâse -> amăr", function() {deepEqual( Stem("amărâse"), "amăr");});
test("amărât -> amărât", function() {deepEqual( Stem("amărât"), "amărât");});
test("amărâtă -> amărât", function() {deepEqual( Stem("amărâtă"), "amărât");});
test("amărâţi -> amăr", function() {deepEqual( Stem("amărâţi"), "amăr");});
test("amărăciune -> amărăciun", function() {deepEqual( Stem("amărăciune"), "amărăciun");});
test("amărăciunea -> amărăciun", function() {deepEqual( Stem("amărăciunea"), "amărăciun");});
test("amărăciunile -> amărăciun", function() {deepEqual( Stem("amărăciunile"), "amărăciun");});
test("ambe -> ambe", function() {deepEqual( Stem("ambe"), "ambe");});
test("ambele -> ambe", function() {deepEqual( Stem("ambele"), "ambe");});
test("ambelor -> ambe", function() {deepEqual( Stem("ambelor"), "ambe");});
test("ambiantă -> ambiant", function() {deepEqual( Stem("ambiantă"), "ambiant");});
test("ambiţia -> ambiţ", function() {deepEqual( Stem("ambiţia"), "ambiţ");});
test("ambiţie -> ambiţ", function() {deepEqual( Stem("ambiţie"), "ambiţ");});
test("ambiţii -> ambiţ", function() {deepEqual( Stem("ambiţii"), "ambiţ");});
test("ambiţionat -> ambiţion", function() {deepEqual( Stem("ambiţionat"), "ambiţion");});
test("ambroziu -> ambroziu", function() {deepEqual( Stem("ambroziu"), "ambroziu");});
test("ambulant -> ambul", function() {deepEqual( Stem("ambulant"), "ambul");});
test("ambulanţa -> ambulanţ", function() {deepEqual( Stem("ambulanţa"), "ambulanţ");});
test("ambulanţe -> ambulanţ", function() {deepEqual( Stem("ambulanţe"), "ambulanţ");});
test("amenajate -> amenaj", function() {deepEqual( Stem("amenajate"), "amenaj");});
test("amenda -> amend", function() {deepEqual( Stem("amenda"), "amend");});
test("amendat -> amend", function() {deepEqual( Stem("amendat"), "amend");});
test("amendată -> amend", function() {deepEqual( Stem("amendată"), "amend");});
test("amendezi -> amend", function() {deepEqual( Stem("amendezi"), "amend");});
test("ameninţa -> ameninţ", function() {deepEqual( Stem("ameninţa"), "ameninţ");});
test("ameninţare -> ameninţ", function() {deepEqual( Stem("ameninţare"), "ameninţ");});
test("ameninţarea -> ameninţ", function() {deepEqual( Stem("ameninţarea"), "ameninţ");});
test("ameninţat -> ameninţ", function() {deepEqual( Stem("ameninţat"), "ameninţ");});
test("ameninţate -> ameninţ", function() {deepEqual( Stem("ameninţate"), "ameninţ");});
test("ameninţaţi -> ameninţ", function() {deepEqual( Stem("ameninţaţi"), "ameninţ");});
test("ameninţându -> ameninţ", function() {deepEqual( Stem("ameninţându"), "ameninţ");});
test("ameninţă -> ameninţ", function() {deepEqual( Stem("ameninţă"), "ameninţ");});
test("ameninţări -> ameninţăr", function() {deepEqual( Stem("ameninţări"), "ameninţăr");});
test("ameninţătoare -> ameninţ", function() {deepEqual( Stem("ameninţătoare"), "ameninţ");});
test("ameninţător -> ameninţ", function() {deepEqual( Stem("ameninţător"), "ameninţ");});
test("ameninţători -> ameninţ", function() {deepEqual( Stem("ameninţători"), "ameninţ");});
test("america -> amer", function() {deepEqual( Stem("america"), "amer");});
test("american -> american", function() {deepEqual( Stem("american"), "american");});
test("americană -> american", function() {deepEqual( Stem("americană"), "american");});
test("americane -> american", function() {deepEqual( Stem("americane"), "american");});
test("americanizare -> americaniz", function() {deepEqual( Stem("americanizare"), "americaniz");});
test("amestec -> amestec", function() {deepEqual( Stem("amestec"), "amestec");});
test("amestecat -> amestec", function() {deepEqual( Stem("amestecat"), "amestec");});
test("amestecată -> amestec", function() {deepEqual( Stem("amestecată"), "amestec");});
test("amestecate -> amestec", function() {deepEqual( Stem("amestecate"), "amestec");});
test("amestecă -> amestec", function() {deepEqual( Stem("amestecă"), "amestec");});
test("amesteci -> amestec", function() {deepEqual( Stem("amesteci"), "amestec");});
test("amestecul -> amestec", function() {deepEqual( Stem("amestecul"), "amestec");});
test("amestecului -> amestec", function() {deepEqual( Stem("amestecului"), "amestec");});
test("ameţeala -> ameţeal", function() {deepEqual( Stem("ameţeala"), "ameţeal");});
test("ameţesc -> ameţ", function() {deepEqual( Stem("ameţesc"), "ameţ");});
test("ameţeşte -> ameţ", function() {deepEqual( Stem("ameţeşte"), "ameţ");});
test("ameţind -> ameţ", function() {deepEqual( Stem("ameţind"), "ameţ");});
test("ameţitoare -> ameţ", function() {deepEqual( Stem("ameţitoare"), "ameţ");});
test("ameţitor -> ameţ", function() {deepEqual( Stem("ameţitor"), "ameţ");});
test("amfiteatrului -> amfiteatr", function() {deepEqual( Stem("amfiteatrului"), "amfiteatr");});
test("amiaza -> amiaz", function() {deepEqual( Stem("amiaza"), "amiaz");});
test("amiază -> amiaz", function() {deepEqual( Stem("amiază"), "amiaz");});
test("amic -> amic", function() {deepEqual( Stem("amic"), "amic");});
test("amicale -> amic", function() {deepEqual( Stem("amicale"), "amic");});
test("amică -> amic", function() {deepEqual( Stem("amică"), "amic");});
test("amice -> amic", function() {deepEqual( Stem("amice"), "amic");});
test("amicei -> amice", function() {deepEqual( Stem("amicei"), "amice");});
test("amicii -> amic", function() {deepEqual( Stem("amicii"), "amic");});
test("amicul -> amic", function() {deepEqual( Stem("amicul"), "amic");});
test("amiens -> amiens", function() {deepEqual( Stem("amiens"), "amiens");});
test("amiezei -> amieze", function() {deepEqual( Stem("amiezei"), "amieze");});
test("amiezi -> amiez", function() {deepEqual( Stem("amiezi"), "amiez");});
test("aminte -> amint", function() {deepEqual( Stem("aminte"), "amint");});
test("amintea -> amint", function() {deepEqual( Stem("amintea"), "amint");});
test("aminteam -> amint", function() {deepEqual( Stem("aminteam"), "amint");});
test("amintească -> amint", function() {deepEqual( Stem("amintească"), "amint");});
test("amintesc -> amint", function() {deepEqual( Stem("amintesc"), "amint");});
test("aminteşte -> amint", function() {deepEqual( Stem("aminteşte"), "amint");});
test("aminti -> amint", function() {deepEqual( Stem("aminti"), "amint");});
test("amintim -> amint", function() {deepEqual( Stem("amintim"), "amint");});
test("amintin -> amintin", function() {deepEqual( Stem("amintin"), "amintin");});
test("amintind -> amint", function() {deepEqual( Stem("amintind"), "amint");});
test("amintire -> amint", function() {deepEqual( Stem("amintire"), "amint");});
test("amintirea -> amint", function() {deepEqual( Stem("amintirea"), "amint");});
test("amintiri -> amintir", function() {deepEqual( Stem("amintiri"), "amintir");});
test("amintirile -> amintir", function() {deepEqual( Stem("amintirile"), "amintir");});
test("amintirilor -> amintir", function() {deepEqual( Stem("amintirilor"), "amintir");});
test("amintit -> amint", function() {deepEqual( Stem("amintit"), "amint");});
test("amintiţi -> amint", function() {deepEqual( Stem("amintiţi"), "amint");});
test("amor -> amor", function() {deepEqual( Stem("amor"), "amor");});
test("amorfă -> amorf", function() {deepEqual( Stem("amorfă"), "amorf");});
test("amoroasă -> amor", function() {deepEqual( Stem("amoroasă"), "amor");});
test("amorţeală -> amorţeal", function() {deepEqual( Stem("amorţeală"), "amorţeal");});
test("amorţeşte -> amorţ", function() {deepEqual( Stem("amorţeşte"), "amorţ");});
test("amorţit -> amorţ", function() {deepEqual( Stem("amorţit"), "amorţ");});
test("amorţită -> amorţ", function() {deepEqual( Stem("amorţită"), "amorţ");});
test("amorţite -> amorţ", function() {deepEqual( Stem("amorţite"), "amorţ");});
test("amorul -> amor", function() {deepEqual( Stem("amorul"), "amor");});
test("amorului -> amor", function() {deepEqual( Stem("amorului"), "amor");});
test("amoruri -> amorur", function() {deepEqual( Stem("amoruri"), "amorur");});
test("amplifica -> amplif", function() {deepEqual( Stem("amplifica"), "amplif");});
test("amplificând -> amplific", function() {deepEqual( Stem("amplificând"), "amplific");});
test("amputat -> amput", function() {deepEqual( Stem("amputat"), "amput");});
test("amurg -> amurg", function() {deepEqual( Stem("amurg"), "amurg");});
test("amuţeşte -> amuţ", function() {deepEqual( Stem("amuţeşte"), "amuţ");});
test("amuţit -> amuţ", function() {deepEqual( Stem("amuţit"), "amuţ");});
test("amuza -> amuz", function() {deepEqual( Stem("amuza"), "amuz");});
test("amuzant -> amuz", function() {deepEqual( Stem("amuzant"), "amuz");});
test("amuzantă -> amuz", function() {deepEqual( Stem("amuzantă"), "amuz");});
test("amuzante -> amuz", function() {deepEqual( Stem("amuzante"), "amuz");});
test("amuzat -> amuz", function() {deepEqual( Stem("amuzat"), "amuz");});
test("amuzată -> amuz", function() {deepEqual( Stem("amuzată"), "amuz");});
test("amuzaţi -> amuz", function() {deepEqual( Stem("amuzaţi"), "amuz");});
test("amuzau -> amuz", function() {deepEqual( Stem("amuzau"), "amuz");});
test("amuză -> amuz", function() {deepEqual( Stem("amuză"), "amuz");});
test("amuze -> amuz", function() {deepEqual( Stem("amuze"), "amuz");});
test("an -> an", function() {deepEqual( Stem("an"), "an");});
test("ana -> ana", function() {deepEqual( Stem("ana"), "ana");});
test("anahronism -> anahronist", function() {deepEqual( Stem("anahronism"), "anahronist");});
test("anahronismele -> anahronist", function() {deepEqual( Stem("anahronismele"), "anahronist");});
test("anahronismul -> anahronist", function() {deepEqual( Stem("anahronismul"), "anahronist");});
test("analitic -> analit", function() {deepEqual( Stem("analitic"), "analit");});
test("analitică -> analit", function() {deepEqual( Stem("analitică"), "analit");});
test("analiza -> analiz", function() {deepEqual( Stem("analiza"), "analiz");});
test("analizasem -> analiz", function() {deepEqual( Stem("analizasem"), "analiz");});
test("analizat -> analiz", function() {deepEqual( Stem("analizat"), "analiz");});
test("analizată -> analiz", function() {deepEqual( Stem("analizată"), "analiz");});
test("analiză -> analiz", function() {deepEqual( Stem("analiză"), "analiz");});
test("analizăm -> analiz", function() {deepEqual( Stem("analizăm"), "analiz");});
test("analize -> analiz", function() {deepEqual( Stem("analize"), "analiz");});
test("analizei -> analize", function() {deepEqual( Stem("analizei"), "analize");});
test("analizezi -> analiz", function() {deepEqual( Stem("analizezi"), "analiz");});
test("analoagă -> analoag", function() {deepEqual( Stem("analoagă"), "analoag");});
test("analog -> analog", function() {deepEqual( Stem("analog"), "analog");});
test("analogat -> analog", function() {deepEqual( Stem("analogat"), "analog");});
test("analogia -> analog", function() {deepEqual( Stem("analogia"), "analog");});
test("analogie -> analog", function() {deepEqual( Stem("analogie"), "analog");});
test("analogiei -> analog", function() {deepEqual( Stem("analogiei"), "analog");});
test("analogii -> analog", function() {deepEqual( Stem("analogii"), "analog");});
test("anapoda -> anapod", function() {deepEqual( Stem("anapoda"), "anapod");});
test("anarhic -> anarh", function() {deepEqual( Stem("anarhic"), "anarh");});
test("anarhice -> anarh", function() {deepEqual( Stem("anarhice"), "anarh");});
test("anatole -> anatol", function() {deepEqual( Stem("anatole"), "anatol");});
test("anatolfranciană -> anatolfrancian", function() {deepEqual( Stem("anatolfranciană"), "anatolfrancian");});
test("anatomia -> anatom", function() {deepEqual( Stem("anatomia"), "anatom");});
test("anchetă -> anchet", function() {deepEqual( Stem("anchetă"), "anchet");});
test("anchete -> anchet", function() {deepEqual( Stem("anchete"), "anchet");});
test("andoaselea -> andoasel", function() {deepEqual( Stem("andoaselea"), "andoasel");});
test("anecdotă -> anecdot", function() {deepEqual( Stem("anecdotă"), "anecdot");});
test("anecdote -> anecdot", function() {deepEqual( Stem("anecdote"), "anecdot");});
test("anestezia -> anestez", function() {deepEqual( Stem("anestezia"), "anestez");});
test("anesteziat -> anestez", function() {deepEqual( Stem("anesteziat"), "anestez");});
test("anestezie -> anestez", function() {deepEqual( Stem("anestezie"), "anestez");});
test("anevoios -> anevoi", function() {deepEqual( Stem("anevoios"), "anevoi");});
test("anex -> anex", function() {deepEqual( Stem("anex"), "anex");});
test("anexată -> anex", function() {deepEqual( Stem("anexată"), "anex");});
test("anexării -> anexăr", function() {deepEqual( Stem("anexării"), "anexăr");});
test("anexe -> anex", function() {deepEqual( Stem("anexe"), "anex");});
test("angaja -> angaj", function() {deepEqual( Stem("angaja"), "angaj");});
test("angajament -> angajament", function() {deepEqual( Stem("angajament"), "angajament");});
test("angajat -> angaj", function() {deepEqual( Stem("angajat"), "angaj");});
test("angajată -> angaj", function() {deepEqual( Stem("angajată"), "angaj");});
test("angajând -> angaj", function() {deepEqual( Stem("angajând"), "angaj");});
test("angajează -> angaj", function() {deepEqual( Stem("angajează"), "angaj");});
test("angell -> angell", function() {deepEqual( Stem("angell"), "angell");});
test("anglia -> angli", function() {deepEqual( Stem("anglia"), "angli");});
test("anglie -> anglie", function() {deepEqual( Stem("anglie"), "anglie");});
test("anglo -> anglo", function() {deepEqual( Stem("anglo"), "anglo");});
test("angrenajul -> angrenaj", function() {deepEqual( Stem("angrenajul"), "angrenaj");});
test("angrenează -> angren", function() {deepEqual( Stem("angrenează"), "angren");});
test("angrenez -> angren", function() {deepEqual( Stem("angrenez"), "angren");});
test("ani -> ani", function() {deepEqual( Stem("ani"), "ani");});
test("anico -> anico", function() {deepEqual( Stem("anico"), "anico");});
test("anii -> ani", function() {deepEqual( Stem("anii"), "ani");});
test("animal -> animal", function() {deepEqual( Stem("animal"), "animal");});
test("animală -> animal", function() {deepEqual( Stem("animală"), "animal");});
test("animale -> animal", function() {deepEqual( Stem("animale"), "animal");});
test("animalele -> animal", function() {deepEqual( Stem("animalele"), "animal");});
test("animalelor -> animal", function() {deepEqual( Stem("animalelor"), "animal");});
test("animalic -> animal", function() {deepEqual( Stem("animalic"), "animal");});
test("animalică -> animal", function() {deepEqual( Stem("animalică"), "animal");});
test("animalul -> animal", function() {deepEqual( Stem("animalul"), "animal");});
test("animaţie -> anim", function() {deepEqual( Stem("animaţie"), "anim");});
test("animează -> anim", function() {deepEqual( Stem("animează"), "anim");});
test("anişoara -> anişoar", function() {deepEqual( Stem("anişoara"), "anişoar");});
test("anişoară -> anişoar", function() {deepEqual( Stem("anişoară"), "anişoar");});
test("anişoarei -> anişoare", function() {deepEqual( Stem("anişoarei"), "anişoare");});
test("aniversări -> aniversăr", function() {deepEqual( Stem("aniversări"), "aniversăr");});
test("aniversările -> aniversăr", function() {deepEqual( Stem("aniversările"), "aniversăr");});
test("annie -> annie", function() {deepEqual( Stem("annie"), "annie");});
test("anomalie -> anomal", function() {deepEqual( Stem("anomalie"), "anomal");});
test("anomalii -> anomal", function() {deepEqual( Stem("anomalii"), "anomal");});
test("anonim -> anon", function() {deepEqual( Stem("anonim"), "anon");});
test("anonimă -> anonim", function() {deepEqual( Stem("anonimă"), "anonim");});
test("ansamblu -> ansamblu", function() {deepEqual( Stem("ansamblu"), "ansamblu");});
test("ansamblul -> ansambl", function() {deepEqual( Stem("ansamblul"), "ansambl");});
test("anselm -> anselm", function() {deepEqual( Stem("anselm"), "anselm");});
test("antantist -> antantist", function() {deepEqual( Stem("antantist"), "antantist");});
test("ante -> ante", function() {deepEqual( Stem("ante"), "ante");});
test("antebraţul -> antebraţ", function() {deepEqual( Stem("antebraţul"), "antebraţ");});
test("antepresupoziţiuni -> antepresupozit", function() {deepEqual( Stem("antepresupoziţiuni"), "antepresupozit");});
test("anterioară -> anterioar", function() {deepEqual( Stem("anterioară"), "anterioar");});
test("anterioare -> anterioar", function() {deepEqual( Stem("anterioare"), "anterioar");});
test("anterior -> anterior", function() {deepEqual( Stem("anterior"), "anterior");});
test("antică -> antic", function() {deepEqual( Stem("antică"), "antic");});
test("antice -> antic", function() {deepEqual( Stem("antice"), "antic");});
test("antici -> antic", function() {deepEqual( Stem("antici"), "antic");});
test("anticipat -> anticip", function() {deepEqual( Stem("anticipat"), "anticip");});
test("anticipată -> anticip", function() {deepEqual( Stem("anticipată"), "anticip");});
test("anticipaţie -> anticip", function() {deepEqual( Stem("anticipaţie"), "anticip");});
test("anticipaţiilor -> anticip", function() {deepEqual( Stem("anticipaţiilor"), "anticip");});
test("anticipez -> anticip", function() {deepEqual( Stem("anticipez"), "anticip");});
test("antiintervenţionist -> antiintervenţionist", function() {deepEqual( Stem("antiintervenţionist"), "antiintervenţionist");});
test("antilopă -> antilop", function() {deepEqual( Stem("antilopă"), "antilop");});
test("antinomie -> antinom", function() {deepEqual( Stem("antinomie"), "antinom");});
test("antipatic -> antipat", function() {deepEqual( Stem("antipatic"), "antipat");});
test("antipatica -> antipat", function() {deepEqual( Stem("antipatica"), "antipat");});
test("antipatică -> antipat", function() {deepEqual( Stem("antipatică"), "antipat");});
test("antipod -> antipod", function() {deepEqual( Stem("antipod"), "antipod");});
test("antisemită -> antisem", function() {deepEqual( Stem("antisemită"), "antisem");});
test("antisemitismul -> antisemitist", function() {deepEqual( Stem("antisemitismul"), "antisemitist");});
test("antiteza -> antitez", function() {deepEqual( Stem("antiteza"), "antitez");});
test("antiteză -> antitez", function() {deepEqual( Stem("antiteză"), "antitez");});
test("antoaneta -> antoanet", function() {deepEqual( Stem("antoaneta"), "antoanet");});
test("antrenat -> antren", function() {deepEqual( Stem("antrenat"), "antren");});
test("antrenez -> antren", function() {deepEqual( Stem("antrenez"), "antren");});
test("antreprenor -> antreprenor", function() {deepEqual( Stem("antreprenor"), "antreprenor");});
test("antreu -> antreu", function() {deepEqual( Stem("antreu"), "antreu");});
test("antroposofie -> antroposof", function() {deepEqual( Stem("antroposofie"), "antroposof");});
test("antroposofilor -> antroposof", function() {deepEqual( Stem("antroposofilor"), "antroposof");});
test("anual -> anual", function() {deepEqual( Stem("anual"), "anual");});
test("anul -> an", function() {deepEqual( Stem("anul"), "an");});
test("anulare -> anul", function() {deepEqual( Stem("anulare"), "anul");});
test("anulată -> anul", function() {deepEqual( Stem("anulată"), "anul");});
test("anulate -> anul", function() {deepEqual( Stem("anulate"), "anul");});
test("anulează -> anul", function() {deepEqual( Stem("anulează"), "anul");});
test("anului -> an", function() {deepEqual( Stem("anului"), "an");});
test("anume -> anum", function() {deepEqual( Stem("anume"), "anum");});
test("anumit -> anum", function() {deepEqual( Stem("anumit"), "anum");});
test("anumită -> anum", function() {deepEqual( Stem("anumită"), "anum");});
test("anumite -> anum", function() {deepEqual( Stem("anumite"), "anum");});
test("anunţam -> anunţ", function() {deepEqual( Stem("anunţam"), "anunţ");});
test("anunţase -> anunţ", function() {deepEqual( Stem("anunţase"), "anunţ");});
test("anunţat -> anunţ", function() {deepEqual( Stem("anunţat"), "anunţ");});
test("anunţată -> anunţ", function() {deepEqual( Stem("anunţată"), "anunţ");});
test("anunţate -> anunţ", function() {deepEqual( Stem("anunţate"), "anunţ");});
test("anunţând -> anunţ", function() {deepEqual( Stem("anunţând"), "anunţ");});
test("anunţă -> anunţ", function() {deepEqual( Stem("anunţă"), "anunţ");});
test("anunţe -> anunţ", function() {deepEqual( Stem("anunţe"), "anunţ");});
test("anunţul -> anunţ", function() {deepEqual( Stem("anunţul"), "anunţ");});
test("anunţuri -> anunţur", function() {deepEqual( Stem("anunţuri"), "anunţur");});
test("anunţurile -> anunţur", function() {deepEqual( Stem("anunţurile"), "anunţur");});
test("apa -> apa", function() {deepEqual( Stem("apa"), "apa");});
test("apar -> apar", function() {deepEqual( Stem("apar"), "apar");});
test("aparat -> apar", function() {deepEqual( Stem("aparat"), "apar");});
test("aparate -> apar", function() {deepEqual( Stem("aparate"), "apar");});
test("aparatul -> apar", function() {deepEqual( Stem("aparatul"), "apar");});
test("apară -> apar", function() {deepEqual( Stem("apară"), "apar");});
test("apare -> apar", function() {deepEqual( Stem("apare"), "apar");});
test("aparent -> aparent", function() {deepEqual( Stem("aparent"), "aparent");});
test("aparentă -> aparent", function() {deepEqual( Stem("aparentă"), "aparent");});
test("aparente -> aparent", function() {deepEqual( Stem("aparente"), "aparent");});
test("aparenţa -> aparenţ", function() {deepEqual( Stem("aparenţa"), "aparenţ");});
test("aparenţă -> aparenţ", function() {deepEqual( Stem("aparenţă"), "aparenţ");});
test("aparenţe -> aparenţ", function() {deepEqual( Stem("aparenţe"), "aparenţ");});
test("aparenţei -> aparenţe", function() {deepEqual( Stem("aparenţei"), "aparenţe");});
test("aparenţele -> aparenţ", function() {deepEqual( Stem("aparenţele"), "aparenţ");});
test("apariţia -> apariţ", function() {deepEqual( Stem("apariţia"), "apariţ");});
test("apariţie -> apariţ", function() {deepEqual( Stem("apariţie"), "apariţ");});
test("apariţiune -> apar", function() {deepEqual( Stem("apariţiune"), "apar");});
test("apariţiunea -> apar", function() {deepEqual( Stem("apariţiunea"), "apar");});
test("apartament -> apartament", function() {deepEqual( Stem("apartament"), "apartament");});
test("aparte -> apart", function() {deepEqual( Stem("aparte"), "apart");});
test("aparţin -> aparţin", function() {deepEqual( Stem("aparţin"), "aparţin");});
test("aparţine -> aparţin", function() {deepEqual( Stem("aparţine"), "aparţin");});
test("apasă -> apas", function() {deepEqual( Stem("apasă"), "apas");});
test("apatia -> apat", function() {deepEqual( Stem("apatia"), "apat");});
test("apatie -> apat", function() {deepEqual( Stem("apatie"), "apat");});
test("apă -> apă", function() {deepEqual( Stem("apă"), "apă");});
test("apăr -> apăr", function() {deepEqual( Stem("apăr"), "apăr");});
test("apăram -> apăr", function() {deepEqual( Stem("apăram"), "apăr");});
test("apărare -> apăr", function() {deepEqual( Stem("apărare"), "apăr");});
test("apărarea -> apăr", function() {deepEqual( Stem("apărarea"), "apăr");});
test("apărat -> apăr", function() {deepEqual( Stem("apărat"), "apăr");});
test("apărate -> apăr", function() {deepEqual( Stem("apărate"), "apăr");});
test("apărau -> apăr", function() {deepEqual( Stem("apărau"), "apăr");});
test("apără -> apăr", function() {deepEqual( Stem("apără"), "apăr");});
test("apărăm -> apăr", function() {deepEqual( Stem("apărăm"), "apăr");});
test("apărător -> apăr", function() {deepEqual( Stem("apărător"), "apăr");});
test("apărea -> apăr", function() {deepEqual( Stem("apărea"), "apăr");});
test("apăreau -> apăr", function() {deepEqual( Stem("apăreau"), "apăr");});
test("apărut -> apăr", function() {deepEqual( Stem("apărut"), "apăr");});
test("apărută -> apăr", function() {deepEqual( Stem("apărută"), "apăr");});
test("apărute -> apăr", function() {deepEqual( Stem("apărute"), "apăr");});
test("apăruţi -> apăruţ", function() {deepEqual( Stem("apăruţi"), "apăruţ");});
test("apăsam -> apăs", function() {deepEqual( Stem("apăsam"), "apăs");});
test("apăsare -> apăs", function() {deepEqual( Stem("apăsare"), "apăs");});
test("apăsarea -> apăs", function() {deepEqual( Stem("apăsarea"), "apăs");});
test("apăsat -> apăs", function() {deepEqual( Stem("apăsat"), "apăs");});
test("apăsată -> apăs", function() {deepEqual( Stem("apăsată"), "apăs");});
test("apăsate -> apăs", function() {deepEqual( Stem("apăsate"), "apăs");});
test("apăsând -> apăs", function() {deepEqual( Stem("apăsând"), "apăs");});
test("apăsă -> apăs", function() {deepEqual( Stem("apăsă"), "apăs");});
test("apăsătoare -> apăs", function() {deepEqual( Stem("apăsătoare"), "apăs");});
test("ape -> ape", function() {deepEqual( Stem("ape"), "ape");});
test("apei -> ape", function() {deepEqual( Stem("apei"), "ape");});
test("apel -> apel", function() {deepEqual( Stem("apel"), "apel");});
test("apele -> ape", function() {deepEqual( Stem("apele"), "ape");});
test("apelul -> apel", function() {deepEqual( Stem("apelul"), "apel");});
test("apendicită -> apendic", function() {deepEqual( Stem("apendicită"), "apendic");});
test("apere -> aper", function() {deepEqual( Stem("apere"), "aper");});
test("aperitive -> aper", function() {deepEqual( Stem("aperitive"), "aper");});
test("apeşi -> apeş", function() {deepEqual( Stem("apeşi"), "apeş");});
test("apetit -> apet", function() {deepEqual( Stem("apetit"), "apet");});
test("apetituri -> apetitur", function() {deepEqual( Stem("apetituri"), "apetitur");});
test("apetiturile -> apetitur", function() {deepEqual( Stem("apetiturile"), "apetitur");});
test("aplaudat -> aplaud", function() {deepEqual( Stem("aplaudat"), "aplaud");});
test("aplaudată -> aplaud", function() {deepEqual( Stem("aplaudată"), "aplaud");});
test("aplaudate -> aplaud", function() {deepEqual( Stem("aplaudate"), "aplaud");});
test("aplaudă -> aplaud", function() {deepEqual( Stem("aplaudă"), "aplaud");});
test("aplauze -> aplauz", function() {deepEqual( Stem("aplauze"), "aplauz");});
test("aplecare -> aplec", function() {deepEqual( Stem("aplecare"), "aplec");});
test("aplecat -> aplec", function() {deepEqual( Stem("aplecat"), "aplec");});
test("aplecată -> aplec", function() {deepEqual( Stem("aplecată"), "aplec");});
test("aplecaţi -> aplec", function() {deepEqual( Stem("aplecaţi"), "aplec");});
test("aplic -> aplic", function() {deepEqual( Stem("aplic"), "aplic");});
test("aplica -> aplic", function() {deepEqual( Stem("aplica"), "aplic");});
test("aplicabilă -> aplic", function() {deepEqual( Stem("aplicabilă"), "aplic");});
test("aplicabilitate -> aplic", function() {deepEqual( Stem("aplicabilitate"), "aplic");});
test("aplicabilităţii -> aplic", function() {deepEqual( Stem("aplicabilităţii"), "aplic");});
test("aplicare -> aplic", function() {deepEqual( Stem("aplicare"), "aplic");});
test("aplicarea -> aplic", function() {deepEqual( Stem("aplicarea"), "aplic");});
test("aplicat -> aplic", function() {deepEqual( Stem("aplicat"), "aplic");});
test("aplicată -> aplic", function() {deepEqual( Stem("aplicată"), "aplic");});
test("aplicate -> aplic", function() {deepEqual( Stem("aplicate"), "aplic");});
test("aplicaţia -> aplic", function() {deepEqual( Stem("aplicaţia"), "aplic");});
test("aplicaţie -> aplic", function() {deepEqual( Stem("aplicaţie"), "aplic");});
test("aplicaţii -> aplic", function() {deepEqual( Stem("aplicaţii"), "aplic");});
test("aplicaţiune -> aplic", function() {deepEqual( Stem("aplicaţiune"), "aplic");});
test("aplicându -> aplic", function() {deepEqual( Stem("aplicându"), "aplic");});
test("aplică -> aplic", function() {deepEqual( Stem("aplică"), "aplic");});
test("aplicăm -> aplic", function() {deepEqual( Stem("aplicăm"), "aplic");});
test("aplice -> aplic", function() {deepEqual( Stem("aplice"), "aplic");});
test("aplici -> aplic", function() {deepEqual( Stem("aplici"), "aplic");});
test("aplomb -> aplomb", function() {deepEqual( Stem("aplomb"), "aplomb");});
test("apocaliptic -> apocalipt", function() {deepEqual( Stem("apocaliptic"), "apocalipt");});
test("apocaliptice -> apocalipt", function() {deepEqual( Stem("apocaliptice"), "apocalipt");});
test("apocrifă -> apocrif", function() {deepEqual( Stem("apocrifă"), "apocrif");});
test("apocrife -> apocrif", function() {deepEqual( Stem("apocrife"), "apocrif");});
test("apodictică -> apodict", function() {deepEqual( Stem("apodictică"), "apodict");});
test("apogee -> apoge", function() {deepEqual( Stem("apogee"), "apoge");});
test("apogeu -> apogeu", function() {deepEqual( Stem("apogeu"), "apogeu");});
test("apoi -> apo", function() {deepEqual( Stem("apoi"), "apo");});
test("apoien -> apoien", function() {deepEqual( Stem("apoien"), "apoien");});
test("apolinică -> apolin", function() {deepEqual( Stem("apolinică"), "apolin");});
test("apolitism -> apolitist", function() {deepEqual( Stem("apolitism"), "apolitist");});
test("apollinaire -> apollinair", function() {deepEqual( Stem("apollinaire"), "apollinair");});
test("apologetic -> apologet", function() {deepEqual( Stem("apologetic"), "apologet");});
test("apologeţii -> apolog", function() {deepEqual( Stem("apologeţii"), "apolog");});
test("apologii -> apolog", function() {deepEqual( Stem("apologii"), "apolog");});
test("apoplexie -> apoplex", function() {deepEqual( Stem("apoplexie"), "apoplex");});
test("aport -> aport", function() {deepEqual( Stem("aport"), "aport");});
test("aportul -> aport", function() {deepEqual( Stem("aportul"), "aport");});
test("apos -> apos", function() {deepEqual( Stem("apos"), "apos");});
test("apostat -> apost", function() {deepEqual( Stem("apostat"), "apost");});
test("apostazie -> apostaz", function() {deepEqual( Stem("apostazie"), "apostaz");});
test("aposteriori -> aposterior", function() {deepEqual( Stem("aposteriori"), "aposterior");});
test("apostol -> apostol", function() {deepEqual( Stem("apostol"), "apostol");});
test("apostoli -> apostol", function() {deepEqual( Stem("apostoli"), "apostol");});
test("apostolii -> apostol", function() {deepEqual( Stem("apostolii"), "apostol");});
test("apostolilor -> apostol", function() {deepEqual( Stem("apostolilor"), "apostol");});
test("apostolul -> apostol", function() {deepEqual( Stem("apostolul"), "apostol");});
test("apostolului -> apostol", function() {deepEqual( Stem("apostolului"), "apostol");});
test("apostroafe -> apostroaf", function() {deepEqual( Stem("apostroafe"), "apostroaf");});
test("apostrof -> apostrof", function() {deepEqual( Stem("apostrof"), "apostrof");});
test("apostrofat -> apostrof", function() {deepEqual( Stem("apostrofat"), "apostrof");});
test("apostrofaţi -> apostrof", function() {deepEqual( Stem("apostrofaţi"), "apostrof");});
test("apostrofe -> apostrof", function() {deepEqual( Stem("apostrofe"), "apostrof");});
test("apostrofează -> apostrof", function() {deepEqual( Stem("apostrofează"), "apostrof");});
test("apostrofeze -> apostrof", function() {deepEqual( Stem("apostrofeze"), "apostrof");});
test("apoşi -> apoş", function() {deepEqual( Stem("apoşi"), "apoş");});
test("apoteoză -> apoteoz", function() {deepEqual( Stem("apoteoză"), "apoteoz");});
test("aprecia -> aprec", function() {deepEqual( Stem("aprecia"), "aprec");});
test("apreciabilă -> aprec", function() {deepEqual( Stem("apreciabilă"), "aprec");});
test("apreciat -> aprec", function() {deepEqual( Stem("apreciat"), "aprec");});
test("apreciată -> aprec", function() {deepEqual( Stem("apreciată"), "aprec");});
test("apreciaţi -> aprec", function() {deepEqual( Stem("apreciaţi"), "aprec");});
test("apreciază -> apreciaz", function() {deepEqual( Stem("apreciază"), "apreciaz");});
test("apreciere -> aprecier", function() {deepEqual( Stem("apreciere"), "aprecier");});
test("aprecieri -> aprecier", function() {deepEqual( Stem("aprecieri"), "aprecier");});
test("aprecierile -> aprecier", function() {deepEqual( Stem("aprecierile"), "aprecier");});
test("aprig -> aprig", function() {deepEqual( Stem("aprig"), "aprig");});
test("aprigă -> aprig", function() {deepEqual( Stem("aprigă"), "aprig");});
test("aprige -> aprig", function() {deepEqual( Stem("aprige"), "aprig");});
test("april -> april", function() {deepEqual( Stem("april"), "april");});
test("aprilie -> april", function() {deepEqual( Stem("aprilie"), "april");});
test("aprind -> aprind", function() {deepEqual( Stem("aprind"), "aprind");});
test("aprinde -> aprind", function() {deepEqual( Stem("aprinde"), "aprind");});
test("aprindea -> aprind", function() {deepEqual( Stem("aprindea"), "aprind");});
test("aprins -> aprins", function() {deepEqual( Stem("aprins"), "aprins");});
test("aprinsă -> aprins", function() {deepEqual( Stem("aprinsă"), "aprins");});
test("aprinse -> aprin", function() {deepEqual( Stem("aprinse"), "aprin");});
test("aprinzându -> aprinz", function() {deepEqual( Stem("aprinzându"), "aprinz");});
test("apriori -> aprior", function() {deepEqual( Stem("apriori"), "aprior");});
test("aprioric -> aprior", function() {deepEqual( Stem("aprioric"), "aprior");});
test("apriorică -> aprior", function() {deepEqual( Stem("apriorică"), "aprior");});
test("apriorice -> aprior", function() {deepEqual( Stem("apriorice"), "aprior");});
test("apriorism -> apriorist", function() {deepEqual( Stem("apriorism"), "apriorist");});
test("apriorismului -> apriorist", function() {deepEqual( Stem("apriorismului"), "apriorist");});
test("aproape -> aproap", function() {deepEqual( Stem("aproape"), "aproap");});
test("aproba -> aprob", function() {deepEqual( Stem("aproba"), "aprob");});
test("aprobare -> aprob", function() {deepEqual( Stem("aprobare"), "aprob");});
test("aprobarea -> aprob", function() {deepEqual( Stem("aprobarea"), "aprob");});
test("aprobat -> aprob", function() {deepEqual( Stem("aprobat"), "aprob");});
test("aprobată -> aprob", function() {deepEqual( Stem("aprobată"), "aprob");});
test("aprobator -> aprob", function() {deepEqual( Stem("aprobator"), "aprob");});
test("aprobă -> aprob", function() {deepEqual( Stem("aprobă"), "aprob");});
test("aprobări -> aprobăr", function() {deepEqual( Stem("aprobări"), "aprobăr");});
test("aprobările -> aprobăr", function() {deepEqual( Stem("aprobările"), "aprobăr");});
test("aprofunda -> aprofund", function() {deepEqual( Stem("aprofunda"), "aprofund");});
test("aprofundate -> aprofund", function() {deepEqual( Stem("aprofundate"), "aprofund");});
test("apropia -> aprop", function() {deepEqual( Stem("apropia"), "aprop");});
test("apropiam -> aprop", function() {deepEqual( Stem("apropiam"), "aprop");});
test("apropiat -> aprop", function() {deepEqual( Stem("apropiat"), "aprop");});
test("apropiată -> aprop", function() {deepEqual( Stem("apropiată"), "aprop");});
test("apropiate -> aprop", function() {deepEqual( Stem("apropiate"), "aprop");});
test("apropiaţi -> aprop", function() {deepEqual( Stem("apropiaţi"), "aprop");});
test("apropie -> aprop", function() {deepEqual( Stem("apropie"), "aprop");});
test("apropiem -> aprop", function() {deepEqual( Stem("apropiem"), "aprop");});
test("apropierea -> apropier", function() {deepEqual( Stem("apropierea"), "apropier");});
test("apropierii -> apropier", function() {deepEqual( Stem("apropierii"), "apropier");});
test("apropii -> aprop", function() {deepEqual( Stem("apropii"), "aprop");});
test("apropo -> apropo", function() {deepEqual( Stem("apropo"), "apropo");});
test("aprovizionare -> aprovizion", function() {deepEqual( Stem("aprovizionare"), "aprovizion");});
test("aprovizionările -> aprovizionăr", function() {deepEqual( Stem("aprovizionările"), "aprovizionăr");});
test("aprovizionează -> aprovizion", function() {deepEqual( Stem("aprovizionează"), "aprovizion");});
test("aproximativ -> aproxim", function() {deepEqual( Stem("aproximativ"), "aproxim");});
test("aproximativă -> aproxim", function() {deepEqual( Stem("aproximativă"), "aproxim");});
test("aproximaţie -> aproxim", function() {deepEqual( Stem("aproximaţie"), "aproxim");});
test("aproximaţiune -> aproxim", function() {deepEqual( Stem("aproximaţiune"), "aproxim");});
test("apte -> apte", function() {deepEqual( Stem("apte"), "apte");});
test("aptitudinea -> aptitudin", function() {deepEqual( Stem("aptitudinea"), "aptitudin");});
test("aptitudinii -> aptitudin", function() {deepEqual( Stem("aptitudinii"), "aptitudin");});
test("apuc -> apuc", function() {deepEqual( Stem("apuc"), "apuc");});
test("apuca -> apuc", function() {deepEqual( Stem("apuca"), "apuc");});
test("apucat -> apuc", function() {deepEqual( Stem("apucat"), "apuc");});
test("apucate -> apuc", function() {deepEqual( Stem("apucate"), "apuc");});
test("apucă -> apuc", function() {deepEqual( Stem("apucă"), "apuc");});
test("apucături -> apucătur", function() {deepEqual( Stem("apucături"), "apucătur");});
test("apucăturile -> apucătur", function() {deepEqual( Stem("apucăturile"), "apucătur");});
test("apune -> apun", function() {deepEqual( Stem("apune"), "apun");});
test("apus -> apus", function() {deepEqual( Stem("apus"), "apus");});
test("apuseană -> apusean", function() {deepEqual( Stem("apuseană"), "apusean");});
test("apusene -> apusen", function() {deepEqual( Stem("apusene"), "apusen");});
test("apusul -> apus", function() {deepEqual( Stem("apusul"), "apus");});
test("apusului -> apus", function() {deepEqual( Stem("apusului"), "apus");});
test("aquino -> aquino", function() {deepEqual( Stem("aquino"), "aquino");});
test("ar -> ar", function() {deepEqual( Stem("ar"), "ar");});
test("arabă -> arab", function() {deepEqual( Stem("arabă"), "arab");});
test("arabi -> arab", function() {deepEqual( Stem("arabi"), "arab");});
test("arad -> arad", function() {deepEqual( Stem("arad"), "arad");});
test("arama -> aram", function() {deepEqual( Stem("arama"), "aram");});
test("aramă -> aram", function() {deepEqual( Stem("aramă"), "aram");});
test("aramei -> arame", function() {deepEqual( Stem("aramei"), "arame");});
test("aranjament -> aranjament", function() {deepEqual( Stem("aranjament"), "aranjament");});
test("aranjamente -> aranjament", function() {deepEqual( Stem("aranjamente"), "aranjament");});
test("aranjasem -> aranj", function() {deepEqual( Stem("aranjasem"), "aranj");});
test("aranjaseră -> aranj", function() {deepEqual( Stem("aranjaseră"), "aranj");});
test("aranjat -> aranj", function() {deepEqual( Stem("aranjat"), "aranj");});
test("aranjăm -> aranj", function() {deepEqual( Stem("aranjăm"), "aranj");});
test("aranjeze -> aranj", function() {deepEqual( Stem("aranjeze"), "aranj");});
test("arată -> arat", function() {deepEqual( Stem("arată"), "arat");});
test("arate -> arat", function() {deepEqual( Stem("arate"), "arat");});
test("arămăria -> arămăr", function() {deepEqual( Stem("arămăria"), "arămăr");});
test("arămărie -> arămăr", function() {deepEqual( Stem("arămărie"), "arămăr");});
test("arăt -> arăt", function() {deepEqual( Stem("arăt"), "arăt");});
test("arăta -> arăt", function() {deepEqual( Stem("arăta"), "arăt");});
test("arătai -> arăt", function() {deepEqual( Stem("arătai"), "arăt");});
test("arătam -> arăt", function() {deepEqual( Stem("arătam"), "arăt");});
test("arătare -> arăt", function() {deepEqual( Stem("arătare"), "arăt");});
test("arătase -> arăt", function() {deepEqual( Stem("arătase"), "arăt");});
test("arătasem -> arăt", function() {deepEqual( Stem("arătasem"), "arăt");});
test("arătat -> arăt", function() {deepEqual( Stem("arătat"), "arăt");});
test("arătau -> arăt", function() {deepEqual( Stem("arătau"), "arăt");});
test("arătând -> arăt", function() {deepEqual( Stem("arătând"), "arăt");});
test("arătându -> arăt", function() {deepEqual( Stem("arătându"), "arăt");});
test("arătă -> arăt", function() {deepEqual( Stem("arătă"), "arăt");});
test("arătător -> arăt", function() {deepEqual( Stem("arătător"), "arăt");});
test("arătătorul -> arăt", function() {deepEqual( Stem("arătătorul"), "arăt");});
test("arătoasă -> arăt", function() {deepEqual( Stem("arătoasă"), "arăt");});
test("arătoase -> arăt", function() {deepEqual( Stem("arătoase"), "arăt");});
test("arătos -> arăt", function() {deepEqual( Stem("arătos"), "arăt");});
test("arături -> arătur", function() {deepEqual( Stem("arături"), "arătur");});
test("arăţi -> arăţ", function() {deepEqual( Stem("arăţi"), "arăţ");});
test("arbitrar -> arbitrar", function() {deepEqual( Stem("arbitrar"), "arbitrar");});
test("arbitrară -> arbitr", function() {deepEqual( Stem("arbitrară"), "arbitr");});
test("arbitrarul -> arbitrar", function() {deepEqual( Stem("arbitrarul"), "arbitrar");});
test("arbust -> arbust", function() {deepEqual( Stem("arbust"), "arbust");});
test("arcuindu -> arcuindu", function() {deepEqual( Stem("arcuindu"), "arcuindu");});
test("arcuire -> arcuir", function() {deepEqual( Stem("arcuire"), "arcuir");});
test("arcuirilor -> arcuir", function() {deepEqual( Stem("arcuirilor"), "arcuir");});
test("arcuită -> arcuit", function() {deepEqual( Stem("arcuită"), "arcuit");});
test("arcuite -> arcuit", function() {deepEqual( Stem("arcuite"), "arcuit");});
test("arcurilor -> arcur", function() {deepEqual( Stem("arcurilor"), "arcur");});
test("ard -> ard", function() {deepEqual( Stem("ard"), "ard");});
test("ardă -> ardă", function() {deepEqual( Stem("ardă"), "ardă");});
test("arde -> arde", function() {deepEqual( Stem("arde"), "arde");});
test("ardea -> arde", function() {deepEqual( Stem("ardea"), "arde");});
test("ardeal -> ardeal", function() {deepEqual( Stem("ardeal"), "ardeal");});
test("ardealul -> ardeal", function() {deepEqual( Stem("ardealul"), "ardeal");});
test("ardeam -> ardeam", function() {deepEqual( Stem("ardeam"), "ardeam");});
test("ardei -> arde", function() {deepEqual( Stem("ardei"), "arde");});
test("ardeii -> ardei", function() {deepEqual( Stem("ardeii"), "ardei");});
test("ardelean -> ardelean", function() {deepEqual( Stem("ardelean"), "ardelean");});
test("ardere -> arder", function() {deepEqual( Stem("ardere"), "arder");});
test("ardoare -> ardoar", function() {deepEqual( Stem("ardoare"), "ardoar");});
test("are -> are", function() {deepEqual( Stem("are"), "are");});
test("arendaş -> arendaş", function() {deepEqual( Stem("arendaş"), "arendaş");});
test("arendă -> arend", function() {deepEqual( Stem("arendă"), "arend");});
test("arestarea -> arest", function() {deepEqual( Stem("arestarea"), "arest");});
test("arestat -> arest", function() {deepEqual( Stem("arestat"), "arest");});
test("arestate -> arest", function() {deepEqual( Stem("arestate"), "arest");});
test("arestează -> arest", function() {deepEqual( Stem("arestează"), "arest");});
test("arestez -> arest", function() {deepEqual( Stem("arestez"), "arest");});
test("argeş -> argeş", function() {deepEqual( Stem("argeş"), "argeş");});
test("argintie -> argint", function() {deepEqual( Stem("argintie"), "argint");});
test("argintiu -> argintiu", function() {deepEqual( Stem("argintiu"), "argintiu");});
test("argintul -> argint", function() {deepEqual( Stem("argintul"), "argint");});
test("argument -> argument", function() {deepEqual( Stem("argument"), "argument");});
test("argumentare -> argument", function() {deepEqual( Stem("argumentare"), "argument");});
test("argumentarea -> argument", function() {deepEqual( Stem("argumentarea"), "argument");});
test("argumentării -> argumentăr", function() {deepEqual( Stem("argumentării"), "argumentăr");});
test("argumente -> argument", function() {deepEqual( Stem("argumente"), "argument");});
test("argumentele -> argument", function() {deepEqual( Stem("argumentele"), "argument");});
test("argumentelor -> argument", function() {deepEqual( Stem("argumentelor"), "argument");});
test("argumentez -> argument", function() {deepEqual( Stem("argumentez"), "argument");});
test("argumentul -> argument", function() {deepEqual( Stem("argumentul"), "argument");});
test("argumentului -> argument", function() {deepEqual( Stem("argumentului"), "argument");});
test("arhaisme -> arhaism", function() {deepEqual( Stem("arhaisme"), "arhaism");});
test("arhitectonice -> arhitecton", function() {deepEqual( Stem("arhitectonice"), "arhitecton");});
test("arhitectură -> arhitect", function() {deepEqual( Stem("arhitectură"), "arhitect");});
test("arhivarii -> arhivar", function() {deepEqual( Stem("arhivarii"), "arhivar");});
test("arhivarul -> arhivar", function() {deepEqual( Stem("arhivarul"), "arhivar");});
test("aride -> arid", function() {deepEqual( Stem("aride"), "arid");});
test("arie -> arie", function() {deepEqual( Stem("arie"), "arie");});
test("ariergarda -> ariergard", function() {deepEqual( Stem("ariergarda"), "ariergard");});
test("ariergardă -> ariergard", function() {deepEqual( Stem("ariergardă"), "ariergard");});
test("aripa -> arip", function() {deepEqual( Stem("aripa"), "arip");});
test("aripă -> arip", function() {deepEqual( Stem("aripă"), "arip");});
test("aripi -> arip", function() {deepEqual( Stem("aripi"), "arip");});
test("aripilor -> arip", function() {deepEqual( Stem("aripilor"), "arip");});
test("aristocrată -> aristocr", function() {deepEqual( Stem("aristocrată"), "aristocr");});
test("aristocratic -> aristocrat", function() {deepEqual( Stem("aristocratic"), "aristocrat");});
test("aristocratică -> aristocrat", function() {deepEqual( Stem("aristocratică"), "aristocrat");});
test("aristocratizante -> aristocratiz", function() {deepEqual( Stem("aristocratizante"), "aristocratiz");});
test("aristocratul -> aristocr", function() {deepEqual( Stem("aristocratul"), "aristocr");});
test("aristotel -> aristotel", function() {deepEqual( Stem("aristotel"), "aristotel");});
test("aritmetica -> aritmet", function() {deepEqual( Stem("aritmetica"), "aritmet");});
test("aritmetică -> aritmet", function() {deepEqual( Stem("aritmetică"), "aritmet");});
test("arma -> arma", function() {deepEqual( Stem("arma"), "arma");});
test("armament -> armament", function() {deepEqual( Stem("armament"), "armament");});
test("armamentul -> armament", function() {deepEqual( Stem("armamentul"), "armament");});
test("armata -> armat", function() {deepEqual( Stem("armata"), "armat");});
test("armată -> armat", function() {deepEqual( Stem("armată"), "armat");});
test("armatei -> armat", function() {deepEqual( Stem("armatei"), "armat");});
test("armatele -> armat", function() {deepEqual( Stem("armatele"), "armat");});
test("armatelor -> armat", function() {deepEqual( Stem("armatelor"), "armat");});
test("armă -> armă", function() {deepEqual( Stem("armă"), "armă");});
test("armăsari -> armăsar", function() {deepEqual( Stem("armăsari"), "armăsar");});
test("arme -> arme", function() {deepEqual( Stem("arme"), "arme");});
test("armei -> arme", function() {deepEqual( Stem("armei"), "arme");});
test("armele -> arme", function() {deepEqual( Stem("armele"), "arme");});
test("armistiţiu -> armistiţiu", function() {deepEqual( Stem("armistiţiu"), "armistiţiu");});
test("armonie -> armon", function() {deepEqual( Stem("armonie"), "armon");});
test("armoniei -> armon", function() {deepEqual( Stem("armoniei"), "armon");});
test("armonizată -> armoniz", function() {deepEqual( Stem("armonizată"), "armoniz");});
test("armonizate -> armoniz", function() {deepEqual( Stem("armonizate"), "armoniz");});
test("arnici -> arnic", function() {deepEqual( Stem("arnici"), "arnic");});
test("arogantă -> arog", function() {deepEqual( Stem("arogantă"), "arog");});
test("arome -> arom", function() {deepEqual( Stem("arome"), "arom");});
test("aromeşte -> arom", function() {deepEqual( Stem("aromeşte"), "arom");});
test("ars -> ars", function() {deepEqual( Stem("ars"), "ars");});
test("arsă -> arsă", function() {deepEqual( Stem("arsă"), "arsă");});
test("arse -> arse", function() {deepEqual( Stem("arse"), "arse");});
test("arta -> arta", function() {deepEqual( Stem("arta"), "arta");});
test("artă -> artă", function() {deepEqual( Stem("artă"), "artă");});
test("arte -> arte", function() {deepEqual( Stem("arte"), "arte");});
test("artei -> arte", function() {deepEqual( Stem("artei"), "arte");});
test("artelor -> arte", function() {deepEqual( Stem("artelor"), "arte");});
test("arteziană -> artezian", function() {deepEqual( Stem("arteziană"), "artezian");});
test("arthur -> arthur", function() {deepEqual( Stem("arthur"), "arthur");});
test("articol -> articol", function() {deepEqual( Stem("articol"), "articol");});
test("articole -> articol", function() {deepEqual( Stem("articole"), "articol");});
test("articolele -> articol", function() {deepEqual( Stem("articolele"), "articol");});
test("articolul -> articol", function() {deepEqual( Stem("articolul"), "articol");});
test("articulaţie -> articul", function() {deepEqual( Stem("articulaţie"), "articul");});
test("articulaţiile -> articul", function() {deepEqual( Stem("articulaţiile"), "articul");});
test("artificial -> artificial", function() {deepEqual( Stem("artificial"), "artificial");});
test("artileria -> artiler", function() {deepEqual( Stem("artileria"), "artiler");});
test("artilerie -> artiler", function() {deepEqual( Stem("artilerie"), "artiler");});
test("artileriei -> artiler", function() {deepEqual( Stem("artileriei"), "artiler");});
test("artilerişti -> artilerist", function() {deepEqual( Stem("artilerişti"), "artilerist");});
test("artileriştii -> artilerist", function() {deepEqual( Stem("artileriştii"), "artilerist");});
test("artist -> artist", function() {deepEqual( Stem("artist"), "artist");});
test("artistică -> artist", function() {deepEqual( Stem("artistică"), "artist");});
test("artistice -> artist", function() {deepEqual( Stem("artistice"), "artist");});
test("artistului -> artist", function() {deepEqual( Stem("artistului"), "artist");});
test("artişti -> artişt", function() {deepEqual( Stem("artişti"), "artişt");});
test("artiştii -> artişt", function() {deepEqual( Stem("artiştii"), "artişt");});
test("arunc -> arunc", function() {deepEqual( Stem("arunc"), "arunc");});
test("arunca -> arunc", function() {deepEqual( Stem("arunca"), "arunc");});
test("aruncam -> arunc", function() {deepEqual( Stem("aruncam"), "arunc");});
test("aruncasem -> arunc", function() {deepEqual( Stem("aruncasem"), "arunc");});
test("aruncat -> arunc", function() {deepEqual( Stem("aruncat"), "arunc");});
test("aruncată -> arunc", function() {deepEqual( Stem("aruncată"), "arunc");});
test("aruncate -> arunc", function() {deepEqual( Stem("aruncate"), "arunc");});
test("aruncaţi -> arunc", function() {deepEqual( Stem("aruncaţi"), "arunc");});
test("aruncând -> arunc", function() {deepEqual( Stem("aruncând"), "arunc");});
test("aruncându -> arunc", function() {deepEqual( Stem("aruncându"), "arunc");});
test("aruncă -> arunc", function() {deepEqual( Stem("aruncă"), "arunc");});
test("aruncăm -> arunc", function() {deepEqual( Stem("aruncăm"), "arunc");});
test("aruncătură -> aruncăt", function() {deepEqual( Stem("aruncătură"), "aruncăt");});
test("arunce -> arunc", function() {deepEqual( Stem("arunce"), "arunc");});
test("arunci -> arunc", function() {deepEqual( Stem("arunci"), "arunc");});
test("arzătoare -> arzat", function() {deepEqual( Stem("arzătoare"), "arzat");});
test("asalt -> asalt", function() {deepEqual( Stem("asalt"), "asalt");});
test("asaltul -> asalt", function() {deepEqual( Stem("asaltul"), "asalt");});
test("asalturi -> asaltur", function() {deepEqual( Stem("asalturi"), "asaltur");});
test("asasinat -> asasin", function() {deepEqual( Stem("asasinat"), "asasin");});
test("asasinată -> asasin", function() {deepEqual( Stem("asasinată"), "asasin");});
test("asasinate -> asasin", function() {deepEqual( Stem("asasinate"), "asasin");});
test("asasinatele -> asasin", function() {deepEqual( Stem("asasinatele"), "asasin");});
test("asasinatelor -> asasin", function() {deepEqual( Stem("asasinatelor"), "asasin");});
test("asasineze -> asasin", function() {deepEqual( Stem("asasineze"), "asasin");});
test("ascende -> ascend", function() {deepEqual( Stem("ascende"), "ascend");});
test("ascendent -> ascendent", function() {deepEqual( Stem("ascendent"), "ascendent");});
test("ascendentă -> ascendent", function() {deepEqual( Stem("ascendentă"), "ascendent");});
test("ascendente -> ascendent", function() {deepEqual( Stem("ascendente"), "ascendent");});
test("ascendenţa -> ascendenţ", function() {deepEqual( Stem("ascendenţa"), "ascendenţ");});
test("ascensor -> ascensor", function() {deepEqual( Stem("ascensor"), "ascensor");});
test("ascult -> ascult", function() {deepEqual( Stem("ascult"), "ascult");});
test("asculta -> ascult", function() {deepEqual( Stem("asculta"), "ascult");});
test("ascultam -> ascult", function() {deepEqual( Stem("ascultam"), "ascult");});
test("ascultare -> ascult", function() {deepEqual( Stem("ascultare"), "ascult");});
test("ascultarea -> ascult", function() {deepEqual( Stem("ascultarea"), "ascult");});
test("ascultase -> ascult", function() {deepEqual( Stem("ascultase"), "ascult");});
test("ascultat -> ascult", function() {deepEqual( Stem("ascultat"), "ascult");});
test("ascultată -> ascult", function() {deepEqual( Stem("ascultată"), "ascult");});
test("ascultate -> ascult", function() {deepEqual( Stem("ascultate"), "ascult");});
test("ascultau -> ascult", function() {deepEqual( Stem("ascultau"), "ascult");});
test("ascultând -> ascult", function() {deepEqual( Stem("ascultând"), "ascult");});
test("ascultându -> ascult", function() {deepEqual( Stem("ascultându"), "ascult");});
test("ascultă -> ascult", function() {deepEqual( Stem("ascultă"), "ascult");});
test("ascultăm -> ascult", function() {deepEqual( Stem("ascultăm"), "ascult");});
test("ascultători -> ascult", function() {deepEqual( Stem("ascultători"), "ascult");});
test("ascultătorii -> ascult", function() {deepEqual( Stem("ascultătorii"), "ascult");});
test("ascultătorilor -> ascult", function() {deepEqual( Stem("ascultătorilor"), "ascult");});
test("ascultătorul -> ascult", function() {deepEqual( Stem("ascultătorul"), "ascult");});
test("ascultătorului -> ascult", function() {deepEqual( Stem("ascultătorului"), "ascult");});
test("asculte -> ascult", function() {deepEqual( Stem("asculte"), "ascult");});
test("asculţi -> asculţ", function() {deepEqual( Stem("asculţi"), "asculţ");});
test("ascund -> ascund", function() {deepEqual( Stem("ascund"), "ascund");});
test("ascundă -> ascund", function() {deepEqual( Stem("ascundă"), "ascund");});
test("ascunde -> ascund", function() {deepEqual( Stem("ascunde"), "ascund");});
test("ascundea -> ascund", function() {deepEqual( Stem("ascundea"), "ascund");});
test("ascundeau -> ascund", function() {deepEqual( Stem("ascundeau"), "ascund");});
test("ascuns -> ascuns", function() {deepEqual( Stem("ascuns"), "ascuns");});
test("ascunsă -> ascuns", function() {deepEqual( Stem("ascunsă"), "ascuns");});
test("ascunse -> ascun", function() {deepEqual( Stem("ascunse"), "ascun");});
test("ascunşi -> ascunş", function() {deepEqual( Stem("ascunşi"), "ascunş");});
test("ascuţit -> ascuţ", function() {deepEqual( Stem("ascuţit"), "ascuţ");});
test("ascuţită -> ascuţ", function() {deepEqual( Stem("ascuţită"), "ascuţ");});
test("ascuţite -> ascuţ", function() {deepEqual( Stem("ascuţite"), "ascuţ");});
test("aseară -> asear", function() {deepEqual( Stem("aseară"), "asear");});
test("asediaţi -> ased", function() {deepEqual( Stem("asediaţi"), "ased");});
test("asemănare -> asemăn", function() {deepEqual( Stem("asemănare"), "asemăn");});
test("asemănări -> asemănăr", function() {deepEqual( Stem("asemănări"), "asemănăr");});
test("asemănările -> asemănăr", function() {deepEqual( Stem("asemănările"), "asemănăr");});
test("asemănătoare -> asemăn", function() {deepEqual( Stem("asemănătoare"), "asemăn");});
test("asemănător -> asemăn", function() {deepEqual( Stem("asemănător"), "asemăn");});
test("asemene -> asemen", function() {deepEqual( Stem("asemene"), "asemen");});
test("asemenea -> asemen", function() {deepEqual( Stem("asemenea"), "asemen");});
test("asemeni -> asemen", function() {deepEqual( Stem("asemeni"), "asemen");});
test("asemuire -> asemu", function() {deepEqual( Stem("asemuire"), "asemu");});
test("asemuirile -> asemuir", function() {deepEqual( Stem("asemuirile"), "asemuir");});
test("asentimentul -> asentiment", function() {deepEqual( Stem("asentimentul"), "asentiment");});
test("aservită -> aserv", function() {deepEqual( Stem("aservită"), "aserv");});
test("asfalt -> asfalt", function() {deepEqual( Stem("asfalt"), "asfalt");});
test("asfaltul -> asfalt", function() {deepEqual( Stem("asfaltul"), "asfalt");});
test("asfaltului -> asfalt", function() {deepEqual( Stem("asfaltului"), "asfalt");});
test("asfinţit -> asfinţ", function() {deepEqual( Stem("asfinţit"), "asfinţ");});
test("asfinţitul -> asfinţ", function() {deepEqual( Stem("asfinţitul"), "asfinţ");});
test("asfinţitului -> asfinţ", function() {deepEqual( Stem("asfinţitului"), "asfinţ");});
test("asia -> asi", function() {deepEqual( Stem("asia"), "asi");});
test("asigna -> asign", function() {deepEqual( Stem("asigna"), "asign");});
test("asignat -> asign", function() {deepEqual( Stem("asignat"), "asign");});
test("asignăm -> asign", function() {deepEqual( Stem("asignăm"), "asign");});
test("asignez -> asign", function() {deepEqual( Stem("asignez"), "asign");});
test("asigur -> asigur", function() {deepEqual( Stem("asigur"), "asigur");});
test("asigura -> asigur", function() {deepEqual( Stem("asigura"), "asigur");});
test("asigurare -> asigur", function() {deepEqual( Stem("asigurare"), "asigur");});
test("asigurat -> asigur", function() {deepEqual( Stem("asigurat"), "asigur");});
test("asigurată -> asigur", function() {deepEqual( Stem("asigurată"), "asigur");});
test("asiguraţi -> asigur", function() {deepEqual( Stem("asiguraţi"), "asigur");});
test("asigură -> asig", function() {deepEqual( Stem("asigură"), "asig");});
test("asigurări -> asigurăr", function() {deepEqual( Stem("asigurări"), "asigurăr");});
test("asigure -> asigur", function() {deepEqual( Stem("asigure"), "asigur");});
test("asimilat -> asimil", function() {deepEqual( Stem("asimilat"), "asimil");});
test("asimilaţie -> asimil", function() {deepEqual( Stem("asimilaţie"), "asimil");});
test("asist -> asist", function() {deepEqual( Stem("asist"), "asist");});
test("asista -> asist", function() {deepEqual( Stem("asista"), "asist");});
test("asistat -> asist", function() {deepEqual( Stem("asistat"), "asist");});
test("asistăm -> asist", function() {deepEqual( Stem("asistăm"), "asist");});
test("asiste -> asist", function() {deepEqual( Stem("asiste"), "asist");});
test("asocia -> asoc", function() {deepEqual( Stem("asocia"), "asoc");});
test("asociat -> asoc", function() {deepEqual( Stem("asociat"), "asoc");});
test("asociate -> asoc", function() {deepEqual( Stem("asociate"), "asoc");});
test("asociatul -> asoc", function() {deepEqual( Stem("asociatul"), "asoc");});
test("asociaţia -> asoc", function() {deepEqual( Stem("asociaţia"), "asoc");});
test("asociaţie -> asoc", function() {deepEqual( Stem("asociaţie"), "asoc");});
test("asociaţiei -> asoc", function() {deepEqual( Stem("asociaţiei"), "asoc");});
test("asociaţii -> asoc", function() {deepEqual( Stem("asociaţii"), "asoc");});
test("asolinelor -> asolin", function() {deepEqual( Stem("asolinelor"), "asolin");});
test("asonanţă -> asonanţ", function() {deepEqual( Stem("asonanţă"), "asonanţ");});
test("asortat -> asort", function() {deepEqual( Stem("asortat"), "asort");});
test("aspect -> aspect", function() {deepEqual( Stem("aspect"), "aspect");});
test("aspecte -> aspect", function() {deepEqual( Stem("aspecte"), "aspect");});
test("aspectele -> aspect", function() {deepEqual( Stem("aspectele"), "aspect");});
test("aspectelor -> aspect", function() {deepEqual( Stem("aspectelor"), "aspect");});
test("aspectul -> aspect", function() {deepEqual( Stem("aspectul"), "aspect");});
test("aspirată -> aspir", function() {deepEqual( Stem("aspirată"), "aspir");});
test("aspiraţi -> aspir", function() {deepEqual( Stem("aspiraţi"), "aspir");});
test("aspiraţiile -> aspir", function() {deepEqual( Stem("aspiraţiile"), "aspir");});
test("aspiraţiilor -> aspir", function() {deepEqual( Stem("aspiraţiilor"), "aspir");});
test("aspră -> aspră", function() {deepEqual( Stem("aspră"), "aspră");});
test("aspre -> aspre", function() {deepEqual( Stem("aspre"), "aspre");});
test("asprime -> asprim", function() {deepEqual( Stem("asprime"), "asprim");});
test("asprimea -> asprim", function() {deepEqual( Stem("asprimea"), "asprim");});
test("aspru -> aspru", function() {deepEqual( Stem("aspru"), "aspru");});
test("assisi -> assis", function() {deepEqual( Stem("assisi"), "assis");});
test("asta -> asta", function() {deepEqual( Stem("asta"), "asta");});
test("astaest -> astaest", function() {deepEqual( Stem("astaest"), "astaest");});
test("astâmpăr -> astâmpăr", function() {deepEqual( Stem("astâmpăr"), "astâmpăr");});
test("astâmpără -> astâmpăr", function() {deepEqual( Stem("astâmpără"), "astâmpăr");});
test("astâmpere -> astâmp", function() {deepEqual( Stem("astâmpere"), "astâmp");});
test("astă -> astă", function() {deepEqual( Stem("astă"), "astă");});
test("astălaltă -> astălalt", function() {deepEqual( Stem("astălaltă"), "astălalt");});
test("astăzi -> astăz", function() {deepEqual( Stem("astăzi"), "astăz");});
test("astea -> aste", function() {deepEqual( Stem("astea"), "aste");});
test("asterisc -> asterisc", function() {deepEqual( Stem("asterisc"), "asterisc");});
test("astfel -> astfel", function() {deepEqual( Stem("astfel"), "astfel");});
test("astral -> astral", function() {deepEqual( Stem("astral"), "astral");});
test("astronomia -> astronom", function() {deepEqual( Stem("astronomia"), "astronom");});
test("astronomic -> astronom", function() {deepEqual( Stem("astronomic"), "astronom");});
test("astronomie -> astronom", function() {deepEqual( Stem("astronomie"), "astronom");});
test("astronomul -> astronom", function() {deepEqual( Stem("astronomul"), "astronom");});
test("astru -> astru", function() {deepEqual( Stem("astru"), "astru");});
test("asudat -> asud", function() {deepEqual( Stem("asudat"), "asud");});
test("asupra -> asupr", function() {deepEqual( Stem("asupra"), "asupr");});
test("asupririi -> asuprir", function() {deepEqual( Stem("asupririi"), "asuprir");});
test("asurzitoare -> asurz", function() {deepEqual( Stem("asurzitoare"), "asurz");});
test("asurzitor -> asurz", function() {deepEqual( Stem("asurzitor"), "asurz");});
test("aş -> aş", function() {deepEqual( Stem("aş"), "aş");});
test("aşa -> aşa", function() {deepEqual( Stem("aşa"), "aşa");});
test("aşadar -> aşadar", function() {deepEqual( Stem("aşadar"), "aşadar");});
test("aşază -> aşaz", function() {deepEqual( Stem("aşază"), "aşaz");});
test("aşchii -> aşchi", function() {deepEqual( Stem("aşchii"), "aşchi");});
test("aşează -> aşeaz", function() {deepEqual( Stem("aşează"), "aşeaz");});
test("aşez -> aşez", function() {deepEqual( Stem("aşez"), "aşez");});
test("aşeza -> aşez", function() {deepEqual( Stem("aşeza"), "aşez");});
test("aşezare -> aşez", function() {deepEqual( Stem("aşezare"), "aşez");});
test("aşezarea -> aşez", function() {deepEqual( Stem("aşezarea"), "aşez");});
test("aşezase -> aşez", function() {deepEqual( Stem("aşezase"), "aşez");});
test("aşezasem -> aşez", function() {deepEqual( Stem("aşezasem"), "aşez");});
test("aşezaseră -> aşez", function() {deepEqual( Stem("aşezaseră"), "aşez");});
test("aşezat -> aşez", function() {deepEqual( Stem("aşezat"), "aşez");});
test("aşezată -> aşez", function() {deepEqual( Stem("aşezată"), "aşez");});
test("aşezate -> aşez", function() {deepEqual( Stem("aşezate"), "aşez");});
test("aşezaţi -> aşez", function() {deepEqual( Stem("aşezaţi"), "aşez");});
test("aşezăm -> aşez", function() {deepEqual( Stem("aşezăm"), "aşez");});
test("aşezării -> aşezăr", function() {deepEqual( Stem("aşezării"), "aşezăr");});
test("aşezi -> aşez", function() {deepEqual( Stem("aşezi"), "aşez");});
test("aşteaptă -> aşteapt", function() {deepEqual( Stem("aşteaptă"), "aşteapt");});
test("aştearnă -> aştearn", function() {deepEqual( Stem("aştearnă"), "aştearn");});
test("aştept -> aştept", function() {deepEqual( Stem("aştept"), "aştept");});
test("aştepta -> aştept", function() {deepEqual( Stem("aştepta"), "aştept");});
test("aşteptam -> aştept", function() {deepEqual( Stem("aşteptam"), "aştept");});
test("aşteptare -> aştept", function() {deepEqual( Stem("aşteptare"), "aştept");});
test("aşteptarea -> aştept", function() {deepEqual( Stem("aşteptarea"), "aştept");});
test("aşteptat -> aştept", function() {deepEqual( Stem("aşteptat"), "aştept");});
test("aşteptată -> aştept", function() {deepEqual( Stem("aşteptată"), "aştept");});
test("aşteptate -> aştept", function() {deepEqual( Stem("aşteptate"), "aştept");});
test("aşteptaţi -> aştept", function() {deepEqual( Stem("aşteptaţi"), "aştept");});
test("aşteptau -> aştept", function() {deepEqual( Stem("aşteptau"), "aştept");});
test("aşteptând -> aştept", function() {deepEqual( Stem("aşteptând"), "aştept");});
test("aşteptându -> aştept", function() {deepEqual( Stem("aşteptându"), "aştept");});
test("aşteptă -> aştept", function() {deepEqual( Stem("aşteptă"), "aştept");});
test("aşteptăm -> aştept", function() {deepEqual( Stem("aşteptăm"), "aştept");});
test("aşteptări -> aşteptăr", function() {deepEqual( Stem("aşteptări"), "aşteptăr");});
test("aşteptările -> aşteptăr", function() {deepEqual( Stem("aşteptările"), "aşteptăr");});
test("aştepte -> aştept", function() {deepEqual( Stem("aştepte"), "aştept");});
test("aşteptînd -> aşteptînd", function() {deepEqual( Stem("aşteptînd"), "aşteptînd");});
test("aştepţi -> aştepţ", function() {deepEqual( Stem("aştepţi"), "aştepţ");});
test("aşterne -> aştern", function() {deepEqual( Stem("aşterne"), "aştern");});
test("aşternerea -> aştern", function() {deepEqual( Stem("aşternerea"), "aştern");});
test("aşternut -> aştern", function() {deepEqual( Stem("aşternut"), "aştern");});
test("aşternută -> aştern", function() {deepEqual( Stem("aşternută"), "aştern");});
test("aşternute -> aştern", function() {deepEqual( Stem("aşternute"), "aştern");});
test("aşternutul -> aştern", function() {deepEqual( Stem("aşternutul"), "aştern");});
test("aşternutului -> aştern", function() {deepEqual( Stem("aşternutului"), "aştern");});
test("aştri -> aştri", function() {deepEqual( Stem("aştri"), "aştri");});
test("atac -> atac", function() {deepEqual( Stem("atac"), "atac");});
test("ataca -> atac", function() {deepEqual( Stem("ataca"), "atac");});
test("atacam -> atac", function() {deepEqual( Stem("atacam"), "atac");});
test("atacat -> atac", function() {deepEqual( Stem("atacat"), "atac");});
test("atacată -> atac", function() {deepEqual( Stem("atacată"), "atac");});
test("atacate -> atac", function() {deepEqual( Stem("atacate"), "atac");});
test("atacaţi -> atac", function() {deepEqual( Stem("atacaţi"), "atac");});
test("atacând -> atac", function() {deepEqual( Stem("atacând"), "atac");});
test("atacă -> atac", function() {deepEqual( Stem("atacă"), "atac");});
test("atacăm -> atac", function() {deepEqual( Stem("atacăm"), "atac");});
test("atace -> atac", function() {deepEqual( Stem("atace"), "atac");});
test("ataci -> atac", function() {deepEqual( Stem("ataci"), "atac");});
test("atacul -> atac", function() {deepEqual( Stem("atacul"), "atac");});
test("atacului -> atac", function() {deepEqual( Stem("atacului"), "atac");});
test("atacuri -> atacur", function() {deepEqual( Stem("atacuri"), "atacur");});
test("atare -> atar", function() {deepEqual( Stem("atare"), "atar");});
test("ataşa -> ataş", function() {deepEqual( Stem("ataşa"), "ataş");});
test("ataşaţi -> ataş", function() {deepEqual( Stem("ataşaţi"), "ataş");});
test("atavică -> atav", function() {deepEqual( Stem("atavică"), "atav");});
test("atârna -> atârn", function() {deepEqual( Stem("atârna"), "atârn");});
test("atârnat -> atârn", function() {deepEqual( Stem("atârnat"), "atârn");});
test("atârnată -> atârn", function() {deepEqual( Stem("atârnată"), "atârn");});
test("atârnate -> atârn", function() {deepEqual( Stem("atârnate"), "atârn");});
test("atârnaţi -> atârn", function() {deepEqual( Stem("atârnaţi"), "atârn");});
test("atârnând -> atârn", function() {deepEqual( Stem("atârnând"), "atârn");});
test("atârnă -> atârn", function() {deepEqual( Stem("atârnă"), "atârn");});
test("atârne -> atârn", function() {deepEqual( Stem("atârne"), "atârn");});
test("atât -> atât", function() {deepEqual( Stem("atât"), "atât");});
test("atâta -> atât", function() {deepEqual( Stem("atâta"), "atât");});
test("atâtea -> atât", function() {deepEqual( Stem("atâtea"), "atât");});
test("atâtor -> atâtor", function() {deepEqual( Stem("atâtor"), "atâtor");});
test("atâţi -> atâţ", function() {deepEqual( Stem("atâţi"), "atâţ");});
test("atâţia -> atâţ", function() {deepEqual( Stem("atâţia"), "atâţ");});
test("atelier -> atelier", function() {deepEqual( Stem("atelier"), "atelier");});
test("atelierele -> atelier", function() {deepEqual( Stem("atelierele"), "atelier");});
test("atelierelor -> atelier", function() {deepEqual( Stem("atelierelor"), "atelier");});
test("atelierul -> atelier", function() {deepEqual( Stem("atelierul"), "atelier");});
test("atena -> aten", function() {deepEqual( Stem("atena"), "aten");});
test("atenei -> atene", function() {deepEqual( Stem("atenei"), "atene");});
test("ateniană -> atenian", function() {deepEqual( Stem("ateniană"), "atenian");});
test("ateniene -> atenien", function() {deepEqual( Stem("ateniene"), "atenien");});
test("atenienii -> atenien", function() {deepEqual( Stem("atenienii"), "atenien");});
test("atent -> atent", function() {deepEqual( Stem("atent"), "atent");});
test("atentatele -> atent", function() {deepEqual( Stem("atentatele"), "atent");});
test("atentatul -> atent", function() {deepEqual( Stem("atentatul"), "atent");});
test("atentă -> atent", function() {deepEqual( Stem("atentă"), "atent");});
test("atenţi -> atenţ", function() {deepEqual( Stem("atenţi"), "atenţ");});
test("atenţia -> atenţ", function() {deepEqual( Stem("atenţia"), "atenţ");});
test("atenţie -> atenţ", function() {deepEqual( Stem("atenţie"), "atenţ");});
test("atenţiunea -> atent", function() {deepEqual( Stem("atenţiunea"), "atent");});
test("ating -> ating", function() {deepEqual( Stem("ating"), "ating");});
test("atingându -> ating", function() {deepEqual( Stem("atingându"), "ating");});
test("atinge -> ating", function() {deepEqual( Stem("atinge"), "ating");});
test("atingem -> ating", function() {deepEqual( Stem("atingem"), "ating");});
test("atingere -> ating", function() {deepEqual( Stem("atingere"), "ating");});
test("atingerea -> ating", function() {deepEqual( Stem("atingerea"), "ating");});
test("atins -> atins", function() {deepEqual( Stem("atins"), "atins");});
test("atinşi -> atinş", function() {deepEqual( Stem("atinşi"), "atinş");});
test("atitudine -> atitudin", function() {deepEqual( Stem("atitudine"), "atitudin");});
test("atitudinea -> atitudin", function() {deepEqual( Stem("atitudinea"), "atitudin");});
test("atitudini -> atitudin", function() {deepEqual( Stem("atitudini"), "atitudin");});
test("atitudinii -> atitudin", function() {deepEqual( Stem("atitudinii"), "atitudin");});
test("atitudinile -> atitudin", function() {deepEqual( Stem("atitudinile"), "atitudin");});
test("atlazul -> atlaz", function() {deepEqual( Stem("atlazul"), "atlaz");});
test("atlet -> atlet", function() {deepEqual( Stem("atlet"), "atlet");});
test("atma -> atma", function() {deepEqual( Stem("atma"), "atma");});
test("atmosfera -> atmosfer", function() {deepEqual( Stem("atmosfera"), "atmosfer");});
test("atmosferă -> atmosfer", function() {deepEqual( Stem("atmosferă"), "atmosfer");});
test("atomi -> atom", function() {deepEqual( Stem("atomi"), "atom");});
test("atomică -> atom", function() {deepEqual( Stem("atomică"), "atom");});
test("atomii -> atom", function() {deepEqual( Stem("atomii"), "atom");});
test("atomilor -> atom", function() {deepEqual( Stem("atomilor"), "atom");});
test("atomul -> atom", function() {deepEqual( Stem("atomul"), "atom");});
test("atotputernică -> atotputern", function() {deepEqual( Stem("atotputernică"), "atotputern");});
test("atrag -> atrag", function() {deepEqual( Stem("atrag"), "atrag");});
test("atragă -> atrag", function() {deepEqual( Stem("atragă"), "atrag");});
test("atrage -> atrag", function() {deepEqual( Stem("atrage"), "atrag");});
test("atras -> atras", function() {deepEqual( Stem("atras"), "atras");});
test("atrasă -> atras", function() {deepEqual( Stem("atrasă"), "atras");});
test("atrăgător -> atrăg", function() {deepEqual( Stem("atrăgător"), "atrăg");});
test("atrăgea -> atrăg", function() {deepEqual( Stem("atrăgea"), "atrăg");});
test("atrăgeam -> atrăg", function() {deepEqual( Stem("atrăgeam"), "atrăg");});
test("atribui -> atrib", function() {deepEqual( Stem("atribui"), "atrib");});
test("atribuia -> atribui", function() {deepEqual( Stem("atribuia"), "atribui");});
test("atribuie -> atribui", function() {deepEqual( Stem("atribuie"), "atribui");});
test("atribuim -> atribu", function() {deepEqual( Stem("atribuim"), "atribu");});
test("atribute -> atrib", function() {deepEqual( Stem("atribute"), "atrib");});
test("atributul -> atrib", function() {deepEqual( Stem("atributul"), "atrib");});
test("atroce -> atroc", function() {deepEqual( Stem("atroce"), "atroc");});
test("atrofiere -> atrofier", function() {deepEqual( Stem("atrofiere"), "atrofier");});
test("atunci -> atunc", function() {deepEqual( Stem("atunci"), "atunc");});
test("aţa -> aţa", function() {deepEqual( Stem("aţa"), "aţa");});
test("aţâţare -> aţâţ", function() {deepEqual( Stem("aţâţare"), "aţâţ");});
test("aţâţat -> aţâţ", function() {deepEqual( Stem("aţâţat"), "aţâţ");});
test("aţă -> aţă", function() {deepEqual( Stem("aţă"), "aţă");});
test("aţi -> aţi", function() {deepEqual( Stem("aţi"), "aţi");});
test("aţintite -> aţint", function() {deepEqual( Stem("aţintite"), "aţint");});
test("aţipit -> aţip", function() {deepEqual( Stem("aţipit"), "aţip");});
test("au -> au", function() {deepEqual( Stem("au"), "au");});
test("aud -> aud", function() {deepEqual( Stem("aud"), "aud");});
test("aude -> aud", function() {deepEqual( Stem("aude"), "aud");});
test("audia -> audi", function() {deepEqual( Stem("audia"), "audi");});
test("audiat -> audiat", function() {deepEqual( Stem("audiat"), "audiat");});
test("audienţe -> audienţ", function() {deepEqual( Stem("audienţe"), "audienţ");});
test("audiez -> audiez", function() {deepEqual( Stem("audiez"), "audiez");});
test("auditiv -> audit", function() {deepEqual( Stem("auditiv"), "audit");});
test("auditivă -> audit", function() {deepEqual( Stem("auditivă"), "audit");});
test("auditor -> audit", function() {deepEqual( Stem("auditor"), "audit");});
test("auditorilor -> audit", function() {deepEqual( Stem("auditorilor"), "audit");});
test("auf -> auf", function() {deepEqual( Stem("auf"), "auf");});
test("august -> august", function() {deepEqual( Stem("august"), "august");});
test("auguste -> august", function() {deepEqual( Stem("auguste"), "august");});
test("augustin -> augustin", function() {deepEqual( Stem("augustin"), "augustin");});
test("aur -> aur", function() {deepEqual( Stem("aur"), "aur");});
test("aură -> aur", function() {deepEqual( Stem("aură"), "aur");});
test("aureolă -> aureol", function() {deepEqual( Stem("aureolă"), "aureol");});
test("aurie -> aur", function() {deepEqual( Stem("aurie"), "aur");});
test("aurit -> aurit", function() {deepEqual( Stem("aurit"), "aurit");});
test("aurită -> aurit", function() {deepEqual( Stem("aurită"), "aurit");});
test("aurite -> aurit", function() {deepEqual( Stem("aurite"), "aurit");});
test("auriu -> auriu", function() {deepEqual( Stem("auriu"), "auriu");});
test("aurorei -> aurore", function() {deepEqual( Stem("aurorei"), "aurore");});
test("aurul -> aur", function() {deepEqual( Stem("aurul"), "aur");});
test("auspiciile -> auspic", function() {deepEqual( Stem("auspiciile"), "auspic");});
test("austeră -> auster", function() {deepEqual( Stem("austeră"), "auster");});
test("austriacă -> austriac", function() {deepEqual( Stem("austriacă"), "austriac");});
test("austriace -> austriac", function() {deepEqual( Stem("austriace"), "austriac");});
test("austriece -> austriec", function() {deepEqual( Stem("austriece"), "austriec");});
test("austriei -> austr", function() {deepEqual( Stem("austriei"), "austr");});
test("autentic -> autent", function() {deepEqual( Stem("autentic"), "autent");});
test("autentică -> autent", function() {deepEqual( Stem("autentică"), "autent");});
test("autentice -> autent", function() {deepEqual( Stem("autentice"), "autent");});
test("autenticitatea -> autent", function() {deepEqual( Stem("autenticitatea"), "autent");});
test("autenticităţii -> autent", function() {deepEqual( Stem("autenticităţii"), "autent");});
test("autocamion -> autocamion", function() {deepEqual( Stem("autocamion"), "autocamion");});
test("autocrată -> autocr", function() {deepEqual( Stem("autocrată"), "autocr");});
test("autocratică -> autocrat", function() {deepEqual( Stem("autocratică"), "autocrat");});
test("autocratice -> autocrat", function() {deepEqual( Stem("autocratice"), "autocrat");});
test("autocritic -> autocrit", function() {deepEqual( Stem("autocritic"), "autocrit");});
test("autocritică -> autocrit", function() {deepEqual( Stem("autocritică"), "autocrit");});
test("automat -> autom", function() {deepEqual( Stem("automat"), "autom");});
test("automată -> autom", function() {deepEqual( Stem("automată"), "autom");});
test("automatic -> automat", function() {deepEqual( Stem("automatic"), "automat");});
test("automatism -> automatist", function() {deepEqual( Stem("automatism"), "automatist");});
test("automobil -> automobil", function() {deepEqual( Stem("automobil"), "automobil");});
test("automobile -> automob", function() {deepEqual( Stem("automobile"), "automob");});
test("automobilele -> automobil", function() {deepEqual( Stem("automobilele"), "automobil");});
test("automobilelor -> automobil", function() {deepEqual( Stem("automobilelor"), "automobil");});
test("automobilul -> automobil", function() {deepEqual( Stem("automobilul"), "automobil");});
test("automobilului -> automobil", function() {deepEqual( Stem("automobilului"), "automobil");});
test("autor -> autor", function() {deepEqual( Stem("autor"), "autor");});
test("autori -> autor", function() {deepEqual( Stem("autori"), "autor");});
test("autorii -> autor", function() {deepEqual( Stem("autorii"), "autor");});
test("autoritar -> autoritar", function() {deepEqual( Stem("autoritar"), "autoritar");});
test("autoritare -> autorit", function() {deepEqual( Stem("autoritare"), "autorit");});
test("autoritate -> autor", function() {deepEqual( Stem("autoritate"), "autor");});
test("autoritatea -> autor", function() {deepEqual( Stem("autoritatea"), "autor");});
test("autorităţi -> autor", function() {deepEqual( Stem("autorităţi"), "autor");});
test("autorităţii -> autor", function() {deepEqual( Stem("autorităţii"), "autor");});
test("autorul -> autor", function() {deepEqual( Stem("autorul"), "autor");});
test("autorului -> autor", function() {deepEqual( Stem("autorului"), "autor");});
test("autosugestie -> autosugest", function() {deepEqual( Stem("autosugestie"), "autosugest");});
test("autosugestionat -> autosugestion", function() {deepEqual( Stem("autosugestionat"), "autosugestion");});
test("autres -> autres", function() {deepEqual( Stem("autres"), "autres");});
test("aux -> aux", function() {deepEqual( Stem("aux"), "aux");});
test("auz -> auz", function() {deepEqual( Stem("auz"), "auz");});
test("auză -> auz", function() {deepEqual( Stem("auză"), "auz");});
test("auzea -> auz", function() {deepEqual( Stem("auzea"), "auz");});
test("auzeam -> auzeam", function() {deepEqual( Stem("auzeam"), "auzeam");});
test("auzi -> auz", function() {deepEqual( Stem("auzi"), "auz");});
test("auzim -> auz", function() {deepEqual( Stem("auzim"), "auz");});
test("auzind -> auzind", function() {deepEqual( Stem("auzind"), "auzind");});
test("auzisem -> auzisem", function() {deepEqual( Stem("auzisem"), "auzisem");});
test("auzit -> auzit", function() {deepEqual( Stem("auzit"), "auzit");});
test("auziţi -> auz", function() {deepEqual( Stem("auziţi"), "auz");});
test("auzul -> auz", function() {deepEqual( Stem("auzul"), "auz");});
test("auzului -> auz", function() {deepEqual( Stem("auzului"), "auz");});
test("avalanşă -> avalanş", function() {deepEqual( Stem("avalanşă"), "avalanş");});
test("avangarda -> avangard", function() {deepEqual( Stem("avangarda"), "avangard");});
test("avangardă -> avangard", function() {deepEqual( Stem("avangardă"), "avangard");});
test("avangardei -> avangarde", function() {deepEqual( Stem("avangardei"), "avangarde");});
test("avangărzii -> avangărz", function() {deepEqual( Stem("avangărzii"), "avangărz");});
test("avanposturi -> avanpostur", function() {deepEqual( Stem("avanposturi"), "avanpostur");});
test("avanposturile -> avanpostur", function() {deepEqual( Stem("avanposturile"), "avanpostur");});
test("avansurile -> avansur", function() {deepEqual( Stem("avansurile"), "avansur");});
test("avantaj -> avantaj", function() {deepEqual( Stem("avantaj"), "avantaj");});
test("avar -> avar", function() {deepEqual( Stem("avar"), "avar");});
test("având -> având", function() {deepEqual( Stem("având"), "având");});
test("avânt -> avânt", function() {deepEqual( Stem("avânt"), "avânt");});
test("avântă -> avânt", function() {deepEqual( Stem("avântă"), "avânt");});
test("avântul -> avânt", function() {deepEqual( Stem("avântul"), "avânt");});
test("avea -> ave", function() {deepEqual( Stem("avea"), "ave");});
test("aveai -> avea", function() {deepEqual( Stem("aveai"), "avea");});
test("aveam -> aveam", function() {deepEqual( Stem("aveam"), "aveam");});
test("aveaţi -> ave", function() {deepEqual( Stem("aveaţi"), "ave");});
test("aveau -> aveau", function() {deepEqual( Stem("aveau"), "aveau");});
test("avem -> avem", function() {deepEqual( Stem("avem"), "avem");});
test("avenarius -> avenarius", function() {deepEqual( Stem("avenarius"), "avenarius");});
test("aventura -> aventur", function() {deepEqual( Stem("aventura"), "aventur");});
test("aventurat -> aventur", function() {deepEqual( Stem("aventurat"), "aventur");});
test("aventură -> avent", function() {deepEqual( Stem("aventură"), "avent");});
test("aventuri -> aventur", function() {deepEqual( Stem("aventuri"), "aventur");});
test("aventurieri -> aventurier", function() {deepEqual( Stem("aventurieri"), "aventurier");});
test("aventurii -> aventur", function() {deepEqual( Stem("aventurii"), "aventur");});
test("aventuroasă -> aventur", function() {deepEqual( Stem("aventuroasă"), "aventur");});
test("avere -> aver", function() {deepEqual( Stem("avere"), "aver");});
test("averea -> aver", function() {deepEqual( Stem("averea"), "aver");});
test("aveţi -> aveţ", function() {deepEqual( Stem("aveţi"), "aveţ");});
test("avizuri -> avizur", function() {deepEqual( Stem("avizuri"), "avizur");});
test("avocat -> avoc", function() {deepEqual( Stem("avocat"), "avoc");});
test("avocatul -> avoc", function() {deepEqual( Stem("avocatul"), "avoc");});
test("avocatului -> avoc", function() {deepEqual( Stem("avocatului"), "avoc");});
test("avusese -> avu", function() {deepEqual( Stem("avusese"), "avu");});
test("avusesem -> avu", function() {deepEqual( Stem("avusesem"), "avu");});
test("avut -> avut", function() {deepEqual( Stem("avut"), "avut");});
test("avuzul -> avuz", function() {deepEqual( Stem("avuzul"), "avuz");});
test("axa -> axa", function() {deepEqual( Stem("axa"), "axa");});
test("axe -> axe", function() {deepEqual( Stem("axe"), "axe");});
test("axiomă -> axiom", function() {deepEqual( Stem("axiomă"), "axiom");});
test("azi -> azi", function() {deepEqual( Stem("azi"), "azi");});
test("aziatice -> aziat", function() {deepEqual( Stem("aziatice"), "aziat");});
test("azist -> azist", function() {deepEqual( Stem("azist"), "azist");});
test("azister -> azister", function() {deepEqual( Stem("azister"), "azister");});
test("azot -> azot", function() {deepEqual( Stem("azot"), "azot");});
test("azuga -> azug", function() {deepEqual( Stem("azuga"), "azug");});
test("azvârl -> azvârl", function() {deepEqual( Stem("azvârl"), "azvârl");});
test("azvârle -> azvârl", function() {deepEqual( Stem("azvârle"), "azvârl");});
test("azvârleau -> azvârl", function() {deepEqual( Stem("azvârleau"), "azvârl");});
test("azvârlit -> azvârl", function() {deepEqual( Stem("azvârlit"), "azvârl");});
test("âme -> âme", function() {deepEqual( Stem("âme"), "âme");});
test("ăi -> ăi", function() {deepEqual( Stem("ăi"), "ăi");});
test("ăia -> ăia", function() {deepEqual( Stem("ăia"), "ăia");});
test("ăiă -> ăiă", function() {deepEqual( Stem("ăiă"), "ăiă");});
test("ăl -> ăl", function() {deepEqual( Stem("ăl"), "ăl");});
test("ăla -> ăla", function() {deepEqual( Stem("ăla"), "ăla");});
test("ăleia -> ălei", function() {deepEqual( Stem("ăleia"), "ălei");});
test("ăsta -> ăsta", function() {deepEqual( Stem("ăsta"), "ăsta");});
test("ăsteia -> ăstei", function() {deepEqual( Stem("ăsteia"), "ăstei");});
test("ăştia -> ăşti", function() {deepEqual( Stem("ăştia"), "ăşti");});
test("b -> b", function() {deepEqual( Stem("b"), "b");});
test("ba -> ba", function() {deepEqual( Stem("ba"), "ba");});
test("babă -> bab", function() {deepEqual( Stem("babă"), "bab");});
test("bacara -> bacar", function() {deepEqual( Stem("bacara"), "bacar");});
test("backfischuri -> backfischur", function() {deepEqual( Stem("backfischuri"), "backfischur");});
test("bacon -> bacon", function() {deepEqual( Stem("bacon"), "bacon");});
test("bacşiş -> bacşiş", function() {deepEqual( Stem("bacşiş"), "bacşiş");});
test("bacşişuri -> bacşişur", function() {deepEqual( Stem("bacşişuri"), "bacşişur");});
test("bacterii -> bacter", function() {deepEqual( Stem("bacterii"), "bacter");});
test("badea -> bad", function() {deepEqual( Stem("badea"), "bad");});
test("bag -> bag", function() {deepEqual( Stem("bag"), "bag");});
test("bagaje -> bagaj", function() {deepEqual( Stem("bagaje"), "bagaj");});
test("bagajele -> bagaj", function() {deepEqual( Stem("bagajele"), "bagaj");});
test("bagajul -> bagaj", function() {deepEqual( Stem("bagajul"), "bagaj");});
test("bagatelizeze -> bagateliz", function() {deepEqual( Stem("bagatelizeze"), "bagateliz");});
test("bagă -> bag", function() {deepEqual( Stem("bagă"), "bag");});
test("bage -> bag", function() {deepEqual( Stem("bage"), "bag");});
test("baia -> bai", function() {deepEqual( Stem("baia"), "bai");});
test("baie -> bai", function() {deepEqual( Stem("baie"), "bai");});
test("baioneta -> baionet", function() {deepEqual( Stem("baioneta"), "baionet");});
test("baionetă -> baionet", function() {deepEqual( Stem("baionetă"), "baionet");});
test("baionetei -> baionete", function() {deepEqual( Stem("baionetei"), "baionete");});
test("baionetele -> baionet", function() {deepEqual( Stem("baionetele"), "baionet");});
test("bal -> bal", function() {deepEqual( Stem("bal"), "bal");});
test("balanţă -> balanţ", function() {deepEqual( Stem("balanţă"), "balanţ");});
test("balcani -> balcan", function() {deepEqual( Stem("balcani"), "balcan");});
test("balcanice -> balcan", function() {deepEqual( Stem("balcanice"), "balcan");});
test("balcoane -> balcoan", function() {deepEqual( Stem("balcoane"), "balcoan");});
test("bale -> bal", function() {deepEqual( Stem("bale"), "bal");});
test("baliverna -> balivern", function() {deepEqual( Stem("baliverna"), "balivern");});
test("balustradă -> balustrad", function() {deepEqual( Stem("balustradă"), "balustrad");});
test("balustradele -> balustrad", function() {deepEqual( Stem("balustradele"), "balustrad");});
test("banal -> banal", function() {deepEqual( Stem("banal"), "banal");});
test("banală -> banal", function() {deepEqual( Stem("banală"), "banal");});
test("banale -> banal", function() {deepEqual( Stem("banale"), "banal");});
test("banali -> banal", function() {deepEqual( Stem("banali"), "banal");});
test("banalitatea -> banal", function() {deepEqual( Stem("banalitatea"), "banal");});
test("banalităţi -> banal", function() {deepEqual( Stem("banalităţi"), "banal");});
test("banca -> banc", function() {deepEqual( Stem("banca"), "banc");});
test("bancă -> banc", function() {deepEqual( Stem("bancă"), "banc");});
test("banchet -> banchet", function() {deepEqual( Stem("banchet"), "banchet");});
test("banchete -> banchet", function() {deepEqual( Stem("banchete"), "banchet");});
test("banchetul -> banchet", function() {deepEqual( Stem("banchetul"), "banchet");});
test("bancnote -> bancnot", function() {deepEqual( Stem("bancnote"), "bancnot");});
test("banda -> band", function() {deepEqual( Stem("banda"), "band");});
test("bandaj -> bandaj", function() {deepEqual( Stem("bandaj"), "bandaj");});
test("bandajat -> bandaj", function() {deepEqual( Stem("bandajat"), "bandaj");});
test("bandajată -> bandaj", function() {deepEqual( Stem("bandajată"), "bandaj");});
test("bandajate -> bandaj", function() {deepEqual( Stem("bandajate"), "bandaj");});
test("bandaje -> bandaj", function() {deepEqual( Stem("bandaje"), "bandaj");});
test("bandajează -> bandaj", function() {deepEqual( Stem("bandajează"), "bandaj");});
test("bandă -> band", function() {deepEqual( Stem("bandă"), "band");});
test("bani -> ban", function() {deepEqual( Stem("bani"), "ban");});
test("banii -> ban", function() {deepEqual( Stem("banii"), "ban");});
test("bank -> bank", function() {deepEqual( Stem("bank"), "bank");});
test("banului -> ban", function() {deepEqual( Stem("banului"), "ban");});
test("bara -> bar", function() {deepEqual( Stem("bara"), "bar");});
test("baraj -> baraj", function() {deepEqual( Stem("baraj"), "baraj");});
test("baraje -> baraj", function() {deepEqual( Stem("baraje"), "baraj");});
test("barajul -> baraj", function() {deepEqual( Stem("barajul"), "baraj");});
test("barajului -> baraj", function() {deepEqual( Stem("barajului"), "baraj");});
test("barba -> barb", function() {deepEqual( Stem("barba"), "barb");});
test("barbar -> barbar", function() {deepEqual( Stem("barbar"), "barbar");});
test("barbari -> barbar", function() {deepEqual( Stem("barbari"), "barbar");});
test("barbarii -> barbar", function() {deepEqual( Stem("barbarii"), "barbar");});
test("barbarism -> barbarist", function() {deepEqual( Stem("barbarism"), "barbarist");});
test("barbă -> barb", function() {deepEqual( Stem("barbă"), "barb");});
test("barem -> bar", function() {deepEqual( Stem("barem"), "bar");});
test("barieră -> barier", function() {deepEqual( Stem("barieră"), "barier");});
test("baros -> baros", function() {deepEqual( Stem("baros"), "baros");});
test("baroului -> baro", function() {deepEqual( Stem("baroului"), "baro");});
test("baston -> baston", function() {deepEqual( Stem("baston"), "baston");});
test("bat -> bat", function() {deepEqual( Stem("bat"), "bat");});
test("batalioane -> batalioan", function() {deepEqual( Stem("batalioane"), "batalioan");});
test("batalioanele -> batalioan", function() {deepEqual( Stem("batalioanele"), "batalioan");});
test("batalioanelor -> batalioan", function() {deepEqual( Stem("batalioanelor"), "batalioan");});
test("batalion -> batalion", function() {deepEqual( Stem("batalion"), "batalion");});
test("batalionul -> batalion", function() {deepEqual( Stem("batalionul"), "batalion");});
test("batalionului -> batalion", function() {deepEqual( Stem("batalionului"), "batalion");});
test("bată -> bat", function() {deepEqual( Stem("bată"), "bat");});
test("bate -> bat", function() {deepEqual( Stem("bate"), "bat");});
test("batem -> bat", function() {deepEqual( Stem("batem"), "bat");});
test("batere -> bater", function() {deepEqual( Stem("batere"), "bater");});
test("bateria -> bater", function() {deepEqual( Stem("bateria"), "bater");});
test("baterie -> bater", function() {deepEqual( Stem("baterie"), "bater");});
test("baterii -> bater", function() {deepEqual( Stem("baterii"), "bater");});
test("bateţi -> bat", function() {deepEqual( Stem("bateţi"), "bat");});
test("batista -> batist", function() {deepEqual( Stem("batista"), "batist");});
test("batistă -> batist", function() {deepEqual( Stem("batistă"), "batist");});
test("batiste -> batist", function() {deepEqual( Stem("batiste"), "batist");});
test("batistele -> batist", function() {deepEqual( Stem("batistele"), "batist");});
test("batistuţă -> batistuţ", function() {deepEqual( Stem("batistuţă"), "batistuţ");});
test("batişte -> batişt", function() {deepEqual( Stem("batişte"), "batişt");});
test("batjocorind -> batjocor", function() {deepEqual( Stem("batjocorind"), "batjocor");});
test("batjocorirea -> batjocor", function() {deepEqual( Stem("batjocorirea"), "batjocor");});
test("batjocorit -> batjocor", function() {deepEqual( Stem("batjocorit"), "batjocor");});
test("batjocoritoare -> batjocor", function() {deepEqual( Stem("batjocoritoare"), "batjocor");});
test("batjocoritor -> batjocor", function() {deepEqual( Stem("batjocoritor"), "batjocor");});
test("batjocoriţi -> batjocor", function() {deepEqual( Stem("batjocoriţi"), "batjocor");});
test("batjocură -> batjoc", function() {deepEqual( Stem("batjocură"), "batjoc");});
test("batoza -> batoz", function() {deepEqual( Stem("batoza"), "batoz");});
test("baţi -> baţ", function() {deepEqual( Stem("baţi"), "baţ");});
test("baudelaireiană -> baudelaireian", function() {deepEqual( Stem("baudelaireiană"), "baudelaireian");});
test("bavarez -> bavar", function() {deepEqual( Stem("bavarez"), "bavar");});
test("bavareză -> bavarez", function() {deepEqual( Stem("bavareză"), "bavarez");});
test("bavareze -> bavar", function() {deepEqual( Stem("bavareze"), "bavar");});
test("bavaria -> bavar", function() {deepEqual( Stem("bavaria"), "bavar");});
test("baza -> baz", function() {deepEqual( Stem("baza"), "baz");});
test("bazaconiile -> bazacon", function() {deepEqual( Stem("bazaconiile"), "bazacon");});
test("bazalt -> bazalt", function() {deepEqual( Stem("bazalt"), "bazalt");});
test("bazar -> bazar", function() {deepEqual( Stem("bazar"), "bazar");});
test("bazarul -> bazar", function() {deepEqual( Stem("bazarul"), "bazar");});
test("bazaruri -> bazarur", function() {deepEqual( Stem("bazaruri"), "bazarur");});
test("bază -> baz", function() {deepEqual( Stem("bază"), "baz");});
test("bazează -> bazeaz", function() {deepEqual( Stem("bazează"), "bazeaz");});
test("bazele -> baz", function() {deepEqual( Stem("bazele"), "baz");});
test("bazez -> bazez", function() {deepEqual( Stem("bazez"), "bazez");});
test("bâjbâie -> bâjbâi", function() {deepEqual( Stem("bâjbâie"), "bâjbâi");});
test("bâjbâim -> bâjbâ", function() {deepEqual( Stem("bâjbâim"), "bâjbâ");});
test("bâjbâit -> bâjbâit", function() {deepEqual( Stem("bâjbâit"), "bâjbâit");});
test("bâlbâită -> bâlbâit", function() {deepEqual( Stem("bâlbâită"), "bâlbâit");});
test("bâlci -> bâlc", function() {deepEqual( Stem("bâlci"), "bâlc");});
test("bâlciul -> bâlc", function() {deepEqual( Stem("bâlciul"), "bâlc");});
test("bârlad -> bârlad", function() {deepEqual( Stem("bârlad"), "bârlad");});
test("bârsei -> bâr", function() {deepEqual( Stem("bârsei"), "bâr");});
test("băcănie -> băcăn", function() {deepEqual( Stem("băcănie"), "băcăn");});
test("băga -> băg", function() {deepEqual( Stem("băga"), "băg");});
test("băgare -> băgar", function() {deepEqual( Stem("băgare"), "băgar");});
test("băgat -> băgat", function() {deepEqual( Stem("băgat"), "băgat");});
test("băgaţi -> băg", function() {deepEqual( Stem("băgaţi"), "băg");});
test("băgau -> băgau", function() {deepEqual( Stem("băgau"), "băgau");});
test("băgăm -> băg", function() {deepEqual( Stem("băgăm"), "băg");});
test("băi -> băi", function() {deepEqual( Stem("băi"), "băi");});
test("băiat -> băiat", function() {deepEqual( Stem("băiat"), "băiat");});
test("băiatul -> băiat", function() {deepEqual( Stem("băiatul"), "băiat");});
test("băiatule -> băiatul", function() {deepEqual( Stem("băiatule"), "băiatul");});
test("băiatului -> băiat", function() {deepEqual( Stem("băiatului"), "băiat");});
test("băietan -> băietan", function() {deepEqual( Stem("băietan"), "băietan");});
test("băiete -> băiet", function() {deepEqual( Stem("băiete"), "băiet");});
test("băieţandrul -> băieţandr", function() {deepEqual( Stem("băieţandrul"), "băieţandr");});
test("băieţaş -> băieţaş", function() {deepEqual( Stem("băieţaş"), "băieţaş");});
test("băieţi -> băi", function() {deepEqual( Stem("băieţi"), "băi");});
test("băieţii -> băi", function() {deepEqual( Stem("băieţii"), "băi");});
test("băilor -> băilor", function() {deepEqual( Stem("băilor"), "băilor");});
test("bălai -> băla", function() {deepEqual( Stem("bălai"), "băla");});
test("bălaie -> bălai", function() {deepEqual( Stem("bălaie"), "bălai");});
test("bălăbăneală -> bălăbăneal", function() {deepEqual( Stem("bălăbăneală"), "bălăbăneal");});
test("băligar -> băligar", function() {deepEqual( Stem("băligar"), "băligar");});
test("băltoace -> băltoac", function() {deepEqual( Stem("băltoace"), "băltoac");});
test("bălţat -> bălţat", function() {deepEqual( Stem("bălţat"), "bălţat");});
test("bănci -> bănc", function() {deepEqual( Stem("bănci"), "bănc");});
test("băncii -> bănc", function() {deepEqual( Stem("băncii"), "bănc");});
test("băncile -> bănc", function() {deepEqual( Stem("băncile"), "bănc");});
test("bănească -> băneasc", function() {deepEqual( Stem("bănească"), "băneasc");});
test("bănui -> bănu", function() {deepEqual( Stem("bănui"), "bănu");});
test("bănuiala -> bănuial", function() {deepEqual( Stem("bănuiala"), "bănuial");});
test("bănuială -> bănuial", function() {deepEqual( Stem("bănuială"), "bănuial");});
test("bănuiam -> bănui", function() {deepEqual( Stem("bănuiam"), "bănui");});
test("bănuiască -> bănuiasc", function() {deepEqual( Stem("bănuiască"), "bănuiasc");});
test("bănuiau -> bănui", function() {deepEqual( Stem("bănuiau"), "bănui");});
test("bănuie -> bănui", function() {deepEqual( Stem("bănuie"), "bănui");});
test("bănuielii -> bănuiel", function() {deepEqual( Stem("bănuielii"), "bănuiel");});
test("bănuiesc -> bănui", function() {deepEqual( Stem("bănuiesc"), "bănui");});
test("bănuieşte -> bănui", function() {deepEqual( Stem("bănuieşte"), "bănui");});
test("bănuieşti -> bănui", function() {deepEqual( Stem("bănuieşti"), "bănui");});
test("bănuim -> bănu", function() {deepEqual( Stem("bănuim"), "bănu");});
test("bănuind -> bănu", function() {deepEqual( Stem("bănuind"), "bănu");});
test("bănuise -> bănu", function() {deepEqual( Stem("bănuise"), "bănu");});
test("bănuit -> bănuit", function() {deepEqual( Stem("bănuit"), "bănuit");});
test("bănuită -> bănuit", function() {deepEqual( Stem("bănuită"), "bănuit");});
test("bănuite -> bănuit", function() {deepEqual( Stem("bănuite"), "bănuit");});
test("bănuitoare -> bănuit", function() {deepEqual( Stem("bănuitoare"), "bănuit");});
test("bănuitor -> bănuit", function() {deepEqual( Stem("bănuitor"), "bănuit");});
test("bănuiţi -> bănu", function() {deepEqual( Stem("bănuiţi"), "bănu");});
test("bărbat -> bărbat", function() {deepEqual( Stem("bărbat"), "bărbat");});
test("bărbatu -> bărbatu", function() {deepEqual( Stem("bărbatu"), "bărbatu");});
test("bărbatul -> bărbat", function() {deepEqual( Stem("bărbatul"), "bărbat");});
test("bărbatului -> bărbat", function() {deepEqual( Stem("bărbatului"), "bărbat");});
test("bărbaţi -> bărb", function() {deepEqual( Stem("bărbaţi"), "bărb");});
test("bărbaţii -> bărb", function() {deepEqual( Stem("bărbaţii"), "bărb");});
test("bărbaţilor -> bărb", function() {deepEqual( Stem("bărbaţilor"), "bărb");});
test("bărbătească -> bărbăt", function() {deepEqual( Stem("bărbătească"), "bărbăt");});
test("bărbătesc -> bărbăt", function() {deepEqual( Stem("bărbătesc"), "bărbăt");});
test("bărbăţie -> bărbăţ", function() {deepEqual( Stem("bărbăţie"), "bărbăţ");});
test("bărbi -> bărb", function() {deepEqual( Stem("bărbi"), "bărb");});
test("bărbie -> bărb", function() {deepEqual( Stem("bărbie"), "bărb");});
test("bărbiereşte -> bărbier", function() {deepEqual( Stem("bărbiereşte"), "bărbier");});
test("bărcut -> bărcut", function() {deepEqual( Stem("bărcut"), "bărcut");});
test("băşici -> băşic", function() {deepEqual( Stem("băşici"), "băşic");});
test("bătaia -> bătai", function() {deepEqual( Stem("bătaia"), "bătai");});
test("bătaie -> bătai", function() {deepEqual( Stem("bătaie"), "bătai");});
test("bătând -> bătând", function() {deepEqual( Stem("bătând"), "bătând");});
test("bătându -> bătându", function() {deepEqual( Stem("bătându"), "bătându");});
test("bătăi -> bătă", function() {deepEqual( Stem("bătăi"), "bătă");});
test("bătăie -> bătăi", function() {deepEqual( Stem("bătăie"), "bătăi");});
test("bătăii -> bătăi", function() {deepEqual( Stem("bătăii"), "bătăi");});
test("bătăile -> bătă", function() {deepEqual( Stem("bătăile"), "bătă");});
test("bătălia -> bătăl", function() {deepEqual( Stem("bătălia"), "bătăl");});
test("bătălie -> bătăl", function() {deepEqual( Stem("bătălie"), "bătăl");});
test("bătăliei -> bătăl", function() {deepEqual( Stem("bătăliei"), "bătăl");});
test("bătălii -> bătăl", function() {deepEqual( Stem("bătălii"), "bătăl");});
test("bătătura -> bătătur", function() {deepEqual( Stem("bătătura"), "bătătur");});
test("bătătură -> bătăt", function() {deepEqual( Stem("bătătură"), "bătăt");});
test("bătăuş -> bătăuş", function() {deepEqual( Stem("bătăuş"), "bătăuş");});
test("bătăuşi -> bătăuş", function() {deepEqual( Stem("bătăuşi"), "bătăuş");});
test("bătea -> băt", function() {deepEqual( Stem("bătea"), "băt");});
test("băteau -> băteau", function() {deepEqual( Stem("băteau"), "băteau");});
test("bătrâiori -> bătrâior", function() {deepEqual( Stem("bătrâiori"), "bătrâior");});
test("bătrân -> bătrân", function() {deepEqual( Stem("bătrân"), "bătrân");});
test("bătrână -> bătrân", function() {deepEqual( Stem("bătrână"), "bătrân");});
test("bătrâne -> bătrân", function() {deepEqual( Stem("bătrâne"), "bătrân");});
test("bătrâni -> bătrân", function() {deepEqual( Stem("bătrâni"), "bătrân");});
test("bătrânicioasă -> bătrânic", function() {deepEqual( Stem("bătrânicioasă"), "bătrânic");});
test("bătrânii -> bătrân", function() {deepEqual( Stem("bătrânii"), "bătrân");});
test("bătrânul -> bătrân", function() {deepEqual( Stem("bătrânul"), "bătrân");});
test("bătrânului -> bătrân", function() {deepEqual( Stem("bătrânului"), "bătrân");});
test("bătrîn -> bătrîn", function() {deepEqual( Stem("bătrîn"), "bătrîn");});
test("bătrînă -> bătrîn", function() {deepEqual( Stem("bătrînă"), "bătrîn");});
test("bătrînelul -> bătrînel", function() {deepEqual( Stem("bătrînelul"), "bătrînel");});
test("bătrîneşti -> bătrîn", function() {deepEqual( Stem("bătrîneşti"), "bătrîn");});
test("bătrîneţe -> bătrîneţ", function() {deepEqual( Stem("bătrîneţe"), "bătrîneţ");});
test("bătrîneţii -> bătrîn", function() {deepEqual( Stem("bătrîneţii"), "bătrîn");});
test("bătrîni -> bătrîn", function() {deepEqual( Stem("bătrîni"), "bătrîn");});
test("bătrînică -> bătrîn", function() {deepEqual( Stem("bătrînică"), "bătrîn");});
test("bătut -> bătut", function() {deepEqual( Stem("bătut"), "bătut");});
test("bătută -> bătut", function() {deepEqual( Stem("bătută"), "bătut");});
test("bătute -> bătut", function() {deepEqual( Stem("bătute"), "bătut");});
test("bătuţi -> bătuţ", function() {deepEqual( Stem("bătuţi"), "bătuţ");});
test("băţos -> băţos", function() {deepEqual( Stem("băţos"), "băţos");});
test("băţoşi -> băţoş", function() {deepEqual( Stem("băţoşi"), "băţoş");});
test("băut -> băut", function() {deepEqual( Stem("băut"), "băut");});
test("băutură -> băut", function() {deepEqual( Stem("băutură"), "băut");});
test("băuturii -> băutur", function() {deepEqual( Stem("băuturii"), "băutur");});
test("bd -> bd", function() {deepEqual( Stem("bd"), "bd");});
test("bea -> bea", function() {deepEqual( Stem("bea"), "bea");});
test("beam -> beam", function() {deepEqual( Stem("beam"), "beam");});
test("beat -> beat", function() {deepEqual( Stem("beat"), "beat");});
test("beau -> beau", function() {deepEqual( Stem("beau"), "beau");});
test("bebel -> bebel", function() {deepEqual( Stem("bebel"), "bebel");});
test("beci -> bec", function() {deepEqual( Stem("beci"), "bec");});
test("beciul -> bec", function() {deepEqual( Stem("beciul"), "bec");});
test("bela -> bel", function() {deepEqual( Stem("bela"), "bel");});
test("belgie -> belg", function() {deepEqual( Stem("belgie"), "belg");});
test("belşugul -> belşug", function() {deepEqual( Stem("belşugul"), "belşug");});
test("bene -> ben", function() {deepEqual( Stem("bene"), "ben");});
test("beneficiezi -> beneficiez", function() {deepEqual( Stem("beneficiezi"), "beneficiez");});
test("benzină -> benzin", function() {deepEqual( Stem("benzină"), "benzin");});
test("berbeci -> berbec", function() {deepEqual( Stem("berbeci"), "berbec");});
test("bere -> ber", function() {deepEqual( Stem("bere"), "ber");});
test("bergson -> bergson", function() {deepEqual( Stem("bergson"), "bergson");});
test("bergsoniană -> bergsonian", function() {deepEqual( Stem("bergsoniană"), "bergsonian");});
test("bergsonismul -> bergsonist", function() {deepEqual( Stem("bergsonismul"), "bergsonist");});
test("bergsonismului -> bergsonist", function() {deepEqual( Stem("bergsonismului"), "bergsonist");});
test("bergsoniştii -> bergsonist", function() {deepEqual( Stem("bergsoniştii"), "bergsonist");});
test("berkeley -> berkeley", function() {deepEqual( Stem("berkeley"), "berkeley");});
test("berlin -> berlin", function() {deepEqual( Stem("berlin"), "berlin");});
test("berlinez -> berlin", function() {deepEqual( Stem("berlinez"), "berlin");});
test("berlinul -> berlin", function() {deepEqual( Stem("berlinul"), "berlin");});
test("bernard -> bernard", function() {deepEqual( Stem("bernard"), "bernard");});
test("besant -> besant", function() {deepEqual( Stem("besant"), "besant");});
test("bestiali -> bestial", function() {deepEqual( Stem("bestiali"), "bestial");});
test("bestialitate -> bestial", function() {deepEqual( Stem("bestialitate"), "bestial");});
test("beteag -> beteag", function() {deepEqual( Stem("beteag"), "beteag");});
test("beton -> beton", function() {deepEqual( Stem("beton"), "beton");});
test("beţi -> beţ", function() {deepEqual( Stem("beţi"), "beţ");});
test("beţie -> beţ", function() {deepEqual( Stem("beţie"), "beţ");});
test("beţigaş -> beţigaş", function() {deepEqual( Stem("beţigaş"), "beţigaş");});
test("bezna -> bezn", function() {deepEqual( Stem("bezna"), "bezn");});
test("beznă -> bezn", function() {deepEqual( Stem("beznă"), "bezn");});
test("biata -> biat", function() {deepEqual( Stem("biata"), "biat");});
test("biblie -> bibl", function() {deepEqual( Stem("biblie"), "bibl");});
test("bibliei -> bibl", function() {deepEqual( Stem("bibliei"), "bibl");});
test("biblioteca -> bibliotec", function() {deepEqual( Stem("biblioteca"), "bibliotec");});
test("bibliotecă -> bibliotec", function() {deepEqual( Stem("bibliotecă"), "bibliotec");});
test("biblioteci -> bibliotec", function() {deepEqual( Stem("biblioteci"), "bibliotec");});
test("bice -> bic", function() {deepEqual( Stem("bice"), "bic");});
test("bicele -> bic", function() {deepEqual( Stem("bicele"), "bic");});
test("biciuiesc -> biciuiesc", function() {deepEqual( Stem("biciuiesc"), "biciuiesc");});
test("biciuit -> biciu", function() {deepEqual( Stem("biciuit"), "biciu");});
test("bideu -> bideu", function() {deepEqual( Stem("bideu"), "bideu");});
test("bidimensional -> bidimensional", function() {deepEqual( Stem("bidimensional"), "bidimensional");});
test("bidimensională -> bidimensional", function() {deepEqual( Stem("bidimensională"), "bidimensional");});
test("bidoane -> bidoan", function() {deepEqual( Stem("bidoane"), "bidoan");});
test("bidoanele -> bidoan", function() {deepEqual( Stem("bidoanele"), "bidoan");});
test("bietul -> biet", function() {deepEqual( Stem("bietul"), "biet");});
test("bieţii -> bieţ", function() {deepEqual( Stem("bieţii"), "bieţ");});
test("bila -> bil", function() {deepEqual( Stem("bila"), "bil");});
test("bilanţ -> bilanţ", function() {deepEqual( Stem("bilanţ"), "bilanţ");});
test("bilanţul -> bilanţ", function() {deepEqual( Stem("bilanţul"), "bilanţ");});
test("bilă -> bil", function() {deepEqual( Stem("bilă"), "bil");});
test("bile -> bil", function() {deepEqual( Stem("bile"), "bil");});
test("bilei -> bile", function() {deepEqual( Stem("bilei"), "bile");});
test("bilet -> bilet", function() {deepEqual( Stem("bilet"), "bilet");});
test("bilete -> bilet", function() {deepEqual( Stem("bilete"), "bilet");});
test("biletele -> bilet", function() {deepEqual( Stem("biletele"), "bilet");});
test("biletul -> bilet", function() {deepEqual( Stem("biletul"), "bilet");});
test("bileţel -> bileţel", function() {deepEqual( Stem("bileţel"), "bileţel");});
test("bileţelele -> bileţel", function() {deepEqual( Stem("bileţelele"), "bileţel");});
test("bileţelului -> bileţel", function() {deepEqual( Stem("bileţelului"), "bileţel");});
test("biliard -> biliard", function() {deepEqual( Stem("biliard"), "biliard");});
test("bine -> bin", function() {deepEqual( Stem("bine"), "bin");});
test("binecrescut -> binecresc", function() {deepEqual( Stem("binecrescut"), "binecresc");});
test("binecuvântat -> binecuvânt", function() {deepEqual( Stem("binecuvântat"), "binecuvânt");});
test("binecuvântate -> binecuvânt", function() {deepEqual( Stem("binecuvântate"), "binecuvânt");});
test("binefacerea -> binefac", function() {deepEqual( Stem("binefacerea"), "binefac");});
test("binefăcătoare -> binefăc", function() {deepEqual( Stem("binefăcătoare"), "binefăc");});
test("bineînţeles -> bineînţeles", function() {deepEqual( Stem("bineînţeles"), "bineînţeles");});
test("binele -> bin", function() {deepEqual( Stem("binele"), "bin");});
test("binelea -> binel", function() {deepEqual( Stem("binelea"), "binel");});
test("binevoitoarei -> binevoitoare", function() {deepEqual( Stem("binevoitoarei"), "binevoitoare");});
test("binevoitor -> binevo", function() {deepEqual( Stem("binevoitor"), "binevo");});
test("binevoitori -> binevo", function() {deepEqual( Stem("binevoitori"), "binevo");});
test("binişorul -> binişor", function() {deepEqual( Stem("binişorul"), "binişor");});
test("binoclu -> binoclu", function() {deepEqual( Stem("binoclu"), "binoclu");});
test("binoclul -> binocl", function() {deepEqual( Stem("binoclul"), "binocl");});
test("biograf -> biograf", function() {deepEqual( Stem("biograf"), "biograf");});
test("biografismul -> biografist", function() {deepEqual( Stem("biografismul"), "biografist");});
test("biograful -> biograf", function() {deepEqual( Stem("biograful"), "biograf");});
test("biologic -> biolog", function() {deepEqual( Stem("biologic"), "biolog");});
test("biologice -> biolog", function() {deepEqual( Stem("biologice"), "biolog");});
test("biologie -> biolog", function() {deepEqual( Stem("biologie"), "biolog");});
test("biologiei -> biolog", function() {deepEqual( Stem("biologiei"), "biolog");});
test("biomecanică -> biomecan", function() {deepEqual( Stem("biomecanică"), "biomecan");});
test("bioxid -> bioxid", function() {deepEqual( Stem("bioxid"), "bioxid");});
test("bipolar -> bipolar", function() {deepEqual( Stem("bipolar"), "bipolar");});
test("birjari -> birjar", function() {deepEqual( Stem("birjari"), "birjar");});
test("birjă -> birj", function() {deepEqual( Stem("birjă"), "birj");});
test("birou -> birou", function() {deepEqual( Stem("birou"), "birou");});
test("biroul -> biro", function() {deepEqual( Stem("biroul"), "biro");});
test("biroului -> biro", function() {deepEqual( Stem("biroului"), "biro");});
test("birouri -> birour", function() {deepEqual( Stem("birouri"), "birour");});
test("birourile -> birour", function() {deepEqual( Stem("birourile"), "birour");});
test("birt -> birt", function() {deepEqual( Stem("birt"), "birt");});
test("birui -> biru", function() {deepEqual( Stem("birui"), "biru");});
test("biruiau -> birui", function() {deepEqual( Stem("biruiau"), "birui");});
test("biruie -> birui", function() {deepEqual( Stem("biruie"), "birui");});
test("biruit -> biruit", function() {deepEqual( Stem("biruit"), "biruit");});
test("biruitoare -> biruit", function() {deepEqual( Stem("biruitoare"), "biruit");});
test("biruitor -> biruit", function() {deepEqual( Stem("biruitor"), "biruit");});
test("biruiţi -> biru", function() {deepEqual( Stem("biruiţi"), "biru");});
test("birurilor -> birur", function() {deepEqual( Stem("birurilor"), "birur");});
test("bis -> bis", function() {deepEqual( Stem("bis"), "bis");});
test("biserica -> biser", function() {deepEqual( Stem("biserica"), "biser");});
test("biserică -> biser", function() {deepEqual( Stem("biserică"), "biser");});
test("bisericească -> biseric", function() {deepEqual( Stem("bisericească"), "biseric");});
test("bisericeşti -> biseric", function() {deepEqual( Stem("bisericeşti"), "biseric");});
test("biserici -> biser", function() {deepEqual( Stem("biserici"), "biser");});
test("bisericuţa -> bisericuţ", function() {deepEqual( Stem("bisericuţa"), "bisericuţ");});
test("bismarck -> bismarck", function() {deepEqual( Stem("bismarck"), "bismarck");});
test("bisturiului -> bistur", function() {deepEqual( Stem("bisturiului"), "bistur");});
test("bizar -> bizar", function() {deepEqual( Stem("bizar"), "bizar");});
test("bizară -> bizar", function() {deepEqual( Stem("bizară"), "bizar");});
test("blajină -> blajin", function() {deepEqual( Stem("blajină"), "blajin");});
test("blana -> blan", function() {deepEqual( Stem("blana"), "blan");});
test("blană -> blan", function() {deepEqual( Stem("blană"), "blan");});
test("blazat -> blazat", function() {deepEqual( Stem("blazat"), "blazat");});
test("blazată -> blazat", function() {deepEqual( Stem("blazată"), "blazat");});
test("blazatul -> blazat", function() {deepEqual( Stem("blazatul"), "blazat");});
test("blând -> blând", function() {deepEqual( Stem("blând"), "blând");});
test("blândeţea -> blândeţ", function() {deepEqual( Stem("blândeţea"), "blândeţ");});
test("blândeţii -> blând", function() {deepEqual( Stem("blândeţii"), "blând");});
test("blestem -> blest", function() {deepEqual( Stem("blestem"), "blest");});
test("blestemat -> blestem", function() {deepEqual( Stem("blestemat"), "blestem");});
test("blestemată -> blestem", function() {deepEqual( Stem("blestemată"), "blestem");});
test("blestemaţii -> blestem", function() {deepEqual( Stem("blestemaţii"), "blestem");});
test("bleumarin -> bleumarin", function() {deepEqual( Stem("bleumarin"), "bleumarin");});
test("bloc -> bloc", function() {deepEqual( Stem("bloc"), "bloc");});
test("bloca -> bloc", function() {deepEqual( Stem("bloca"), "bloc");});
test("blocant -> blocant", function() {deepEqual( Stem("blocant"), "blocant");});
test("blocantă -> blocant", function() {deepEqual( Stem("blocantă"), "blocant");});
test("blocante -> blocant", function() {deepEqual( Stem("blocante"), "blocant");});
test("blocare -> bloc", function() {deepEqual( Stem("blocare"), "bloc");});
test("blocat -> blocat", function() {deepEqual( Stem("blocat"), "blocat");});
test("blocată -> blocat", function() {deepEqual( Stem("blocată"), "blocat");});
test("blocării -> blocăr", function() {deepEqual( Stem("blocării"), "blocăr");});
test("blochează -> bloch", function() {deepEqual( Stem("blochează"), "bloch");});
test("blochez -> bloch", function() {deepEqual( Stem("blochez"), "bloch");});
test("blocînd -> blocînd", function() {deepEqual( Stem("blocînd"), "blocînd");});
test("blocul -> bloc", function() {deepEqual( Stem("blocul"), "bloc");});
test("blocuri -> blocur", function() {deepEqual( Stem("blocuri"), "blocur");});
test("blond -> blond", function() {deepEqual( Stem("blond"), "blond");});
test("blonda -> blond", function() {deepEqual( Stem("blonda"), "blond");});
test("blondă -> blond", function() {deepEqual( Stem("blondă"), "blond");});
test("blonde -> blond", function() {deepEqual( Stem("blonde"), "blond");});
test("blondei -> blonde", function() {deepEqual( Stem("blondei"), "blonde");});
test("blondele -> blond", function() {deepEqual( Stem("blondele"), "blond");});
test("bluff -> bluff", function() {deepEqual( Stem("bluff"), "bluff");});
test("blugi -> blug", function() {deepEqual( Stem("blugi"), "blug");});
test("bluza -> bluz", function() {deepEqual( Stem("bluza"), "bluz");});
test("bluză -> bluz", function() {deepEqual( Stem("bluză"), "bluz");});
test("bluze -> bluz", function() {deepEqual( Stem("bluze"), "bluz");});
test("boabe -> boab", function() {deepEqual( Stem("boabe"), "boab");});
test("boabelor -> boab", function() {deepEqual( Stem("boabelor"), "boab");});
test("boacănă -> boacăn", function() {deepEqual( Stem("boacănă"), "boacăn");});
test("boala -> boal", function() {deepEqual( Stem("boala"), "boal");});
test("boală -> boal", function() {deepEqual( Stem("boală"), "boal");});
test("boale -> boal", function() {deepEqual( Stem("boale"), "boal");});
test("boante -> boant", function() {deepEqual( Stem("boante"), "boant");});
test("boaşele -> boaş", function() {deepEqual( Stem("boaşele"), "boaş");});
test("bobina -> bobin", function() {deepEqual( Stem("bobina"), "bobin");});
test("bobină -> bobin", function() {deepEqual( Stem("bobină"), "bobin");});
test("bobinele -> bobin", function() {deepEqual( Stem("bobinele"), "bobin");});
test("bobîrnac -> bobîrnac", function() {deepEqual( Stem("bobîrnac"), "bobîrnac");});
test("bocanci -> bocanc", function() {deepEqual( Stem("bocanci"), "bocanc");});
test("bocancii -> bocanc", function() {deepEqual( Stem("bocancii"), "bocanc");});
test("boccaccio -> boccaccio", function() {deepEqual( Stem("boccaccio"), "boccaccio");});
test("bocească -> boceasc", function() {deepEqual( Stem("bocească"), "boceasc");});
test("boceşte -> boceşt", function() {deepEqual( Stem("boceşte"), "boceşt");});
test("bocet -> bocet", function() {deepEqual( Stem("bocet"), "bocet");});
test("bocetul -> bocet", function() {deepEqual( Stem("bocetul"), "bocet");});
test("boci -> boc", function() {deepEqual( Stem("boci"), "boc");});
test("bocind -> bocind", function() {deepEqual( Stem("bocind"), "bocind");});
test("boem -> boem", function() {deepEqual( Stem("boem"), "boem");});
test("boemă -> boem", function() {deepEqual( Stem("boemă"), "boem");});
test("bogat -> bogat", function() {deepEqual( Stem("bogat"), "bogat");});
test("bogata -> bogat", function() {deepEqual( Stem("bogata"), "bogat");});
test("bogată -> bogat", function() {deepEqual( Stem("bogată"), "bogat");});
test("bogate -> bogat", function() {deepEqual( Stem("bogate"), "bogat");});
test("bogatul -> bogat", function() {deepEqual( Stem("bogatul"), "bogat");});
test("bogatului -> bogat", function() {deepEqual( Stem("bogatului"), "bogat");});
test("bogaţilor -> bog", function() {deepEqual( Stem("bogaţilor"), "bog");});
test("bogătaşul -> bogătaş", function() {deepEqual( Stem("bogătaşul"), "bogătaş");});
test("bogăţia -> bogăţ", function() {deepEqual( Stem("bogăţia"), "bogăţ");});
test("bogăţie -> bogăţ", function() {deepEqual( Stem("bogăţie"), "bogăţ");});
test("bogăţiei -> bogăţ", function() {deepEqual( Stem("bogăţiei"), "bogăţ");});
test("bogăţii -> bogăţ", function() {deepEqual( Stem("bogăţii"), "bogăţ");});
test("bogăţiile -> bogăţ", function() {deepEqual( Stem("bogăţiile"), "bogăţ");});
test("boierească -> boier", function() {deepEqual( Stem("boierească"), "boier");});
test("boiereşti -> boier", function() {deepEqual( Stem("boiereşti"), "boier");});
test("boieri -> boier", function() {deepEqual( Stem("boieri"), "boier");});
test("boierii -> boier", function() {deepEqual( Stem("boierii"), "boier");});
test("boierilor -> boier", function() {deepEqual( Stem("boierilor"), "boier");});
test("boieroaică -> boiero", function() {deepEqual( Stem("boieroaică"), "boiero");});
test("boierul -> boier", function() {deepEqual( Stem("boierul"), "boier");});
test("boierului -> boier", function() {deepEqual( Stem("boierului"), "boier");});
test("boii -> boi", function() {deepEqual( Stem("boii"), "boi");});
test("boite -> boit", function() {deepEqual( Stem("boite"), "boit");});
test("bojoci -> bojoc", function() {deepEqual( Stem("bojoci"), "bojoc");});
test("boldului -> bold", function() {deepEqual( Stem("boldului"), "bold");});
test("boli -> bol", function() {deepEqual( Stem("boli"), "bol");});
test("bolnav -> bolnav", function() {deepEqual( Stem("bolnav"), "bolnav");});
test("bolnavă -> bolnav", function() {deepEqual( Stem("bolnavă"), "bolnav");});
test("bolnave -> bolnav", function() {deepEqual( Stem("bolnave"), "bolnav");});
test("bolnavi -> bolnav", function() {deepEqual( Stem("bolnavi"), "bolnav");});
test("bolnavilor -> bolnav", function() {deepEqual( Stem("bolnavilor"), "bolnav");});
test("bolnavul -> bolnav", function() {deepEqual( Stem("bolnavul"), "bolnav");});
test("bolnavului -> bolnav", function() {deepEqual( Stem("bolnavului"), "bolnav");});
test("bolocănos -> bolocăn", function() {deepEqual( Stem("bolocănos"), "bolocăn");});
test("bolovan -> bolovan", function() {deepEqual( Stem("bolovan"), "bolovan");});
test("bolovani -> bolovan", function() {deepEqual( Stem("bolovani"), "bolovan");});
test("bolovanul -> bolovan", function() {deepEqual( Stem("bolovanul"), "bolovan");});
test("bolovănindu -> bolovăn", function() {deepEqual( Stem("bolovănindu"), "bolovăn");});
test("bolovănoasă -> bolovăn", function() {deepEqual( Stem("bolovănoasă"), "bolovăn");});
test("bolovănoase -> bolovăn", function() {deepEqual( Stem("bolovănoase"), "bolovăn");});
test("bolşevică -> bolşev", function() {deepEqual( Stem("bolşevică"), "bolşev");});
test("bolşevismul -> bolşevist", function() {deepEqual( Stem("bolşevismul"), "bolşevist");});
test("bombardament -> bombardament", function() {deepEqual( Stem("bombardament"), "bombardament");});
test("bombardamentul -> bombardament", function() {deepEqual( Stem("bombardamentul"), "bombardament");});
test("bombardată -> bombard", function() {deepEqual( Stem("bombardată"), "bombard");});
test("bombaţi -> bomb", function() {deepEqual( Stem("bombaţi"), "bomb");});
test("bombonieră -> bombonier", function() {deepEqual( Stem("bombonieră"), "bombonier");});
test("bondoc -> bondoc", function() {deepEqual( Stem("bondoc"), "bondoc");});
test("bonele -> bon", function() {deepEqual( Stem("bonele"), "bon");});
test("bonom -> bonom", function() {deepEqual( Stem("bonom"), "bonom");});
test("bonomia -> bonom", function() {deepEqual( Stem("bonomia"), "bonom");});
test("bonomie -> bonom", function() {deepEqual( Stem("bonomie"), "bonom");});
test("bonvivanţii -> bonvivanţ", function() {deepEqual( Stem("bonvivanţii"), "bonvivanţ");});
test("boole -> bool", function() {deepEqual( Stem("boole"), "bool");});
test("borangic -> borang", function() {deepEqual( Stem("borangic"), "borang");});
test("bordei -> borde", function() {deepEqual( Stem("bordei"), "borde");});
test("bordeie -> bordei", function() {deepEqual( Stem("bordeie"), "bordei");});
test("bordeiele -> bordei", function() {deepEqual( Stem("bordeiele"), "bordei");});
test("bordeielor -> bordei", function() {deepEqual( Stem("bordeielor"), "bordei");});
test("borsalino -> borsalino", function() {deepEqual( Stem("borsalino"), "borsalino");});
test("borşului -> borş", function() {deepEqual( Stem("borşului"), "borş");});
test("bossuet -> bossuet", function() {deepEqual( Stem("bossuet"), "bossuet");});
test("boston -> boston", function() {deepEqual( Stem("boston"), "boston");});
test("boşimanii -> boşiman", function() {deepEqual( Stem("boşimanii"), "boşiman");});
test("boşimanul -> boşiman", function() {deepEqual( Stem("boşimanul"), "boşiman");});
test("bot -> bot", function() {deepEqual( Stem("bot"), "bot");});
test("botanica -> botan", function() {deepEqual( Stem("botanica"), "botan");});
test("botanică -> botan", function() {deepEqual( Stem("botanică"), "botan");});
test("botezată -> botez", function() {deepEqual( Stem("botezată"), "botez");});
test("botezate -> botez", function() {deepEqual( Stem("botezate"), "botez");});
test("boturi -> botur", function() {deepEqual( Stem("boturi"), "botur");});
test("boturile -> botur", function() {deepEqual( Stem("boturile"), "botur");});
test("boţ -> boţ", function() {deepEqual( Stem("boţ"), "boţ");});
test("bou -> bou", function() {deepEqual( Stem("bou"), "bou");});
test("boubouroche -> boubouroch", function() {deepEqual( Stem("boubouroche"), "boubouroch");});
test("bovarisme -> bovarist", function() {deepEqual( Stem("bovarisme"), "bovarist");});
test("brad -> brad", function() {deepEqual( Stem("brad"), "brad");});
test("braghină -> braghin", function() {deepEqual( Stem("braghină"), "braghin");});
test("bran -> bran", function() {deepEqual( Stem("bran"), "bran");});
test("branului -> bran", function() {deepEqual( Stem("branului"), "bran");});
test("braşov -> braşov", function() {deepEqual( Stem("braşov"), "braşov");});
test("braşovului -> braşov", function() {deepEqual( Stem("braşovului"), "braşov");});
test("braţ -> braţ", function() {deepEqual( Stem("braţ"), "braţ");});
test("braţe -> braţ", function() {deepEqual( Stem("braţe"), "braţ");});
test("braţele -> braţ", function() {deepEqual( Stem("braţele"), "braţ");});
test("braţelor -> braţ", function() {deepEqual( Stem("braţelor"), "braţ");});
test("braţul -> braţ", function() {deepEqual( Stem("braţul"), "braţ");});
test("bravi -> brav", function() {deepEqual( Stem("bravi"), "brav");});
test("bravo -> bravo", function() {deepEqual( Stem("bravo"), "bravo");});
test("bravură -> brav", function() {deepEqual( Stem("bravură"), "brav");});
test("brazi -> braz", function() {deepEqual( Stem("brazi"), "braz");});
test("brânci -> brânc", function() {deepEqual( Stem("brânci"), "brânc");});
test("brânză -> brânz", function() {deepEqual( Stem("brânză"), "brânz");});
test("brânzeturi -> brânzetur", function() {deepEqual( Stem("brânzeturi"), "brânzetur");});
test("brânzoaice -> brânzoaic", function() {deepEqual( Stem("brânzoaice"), "brânzoaic");});
test("brâu -> brâu", function() {deepEqual( Stem("brâu"), "brâu");});
test("brăila -> brăil", function() {deepEqual( Stem("brăila"), "brăil");});
test("brătianu -> brătianu", function() {deepEqual( Stem("brătianu"), "brătianu");});
test("brăţară -> brăţ", function() {deepEqual( Stem("brăţară"), "brăţ");});
test("bre -> bre", function() {deepEqual( Stem("bre"), "bre");});
test("breşă -> breş", function() {deepEqual( Stem("breşă"), "breş");});
test("brevetezi -> brevet", function() {deepEqual( Stem("brevetezi"), "brevet");});
test("brevetul -> brevet", function() {deepEqual( Stem("brevetul"), "brevet");});
test("bridge -> bridg", function() {deepEqual( Stem("bridge"), "bridg");});
test("brigada -> brigad", function() {deepEqual( Stem("brigada"), "brigad");});
test("brigadă -> brigad", function() {deepEqual( Stem("brigadă"), "brigad");});
test("brigadier -> brigadier", function() {deepEqual( Stem("brigadier"), "brigadier");});
test("brigadieri -> brigadier", function() {deepEqual( Stem("brigadieri"), "brigadier");});
test("brigadierul -> brigadier", function() {deepEqual( Stem("brigadierul"), "brigadier");});
test("brigăzii -> brigăz", function() {deepEqual( Stem("brigăzii"), "brigăz");});
test("brio -> brio", function() {deepEqual( Stem("brio"), "brio");});
test("britanică -> britan", function() {deepEqual( Stem("britanică"), "britan");});
test("broască -> broasc", function() {deepEqual( Stem("broască"), "broasc");});
test("brodate -> brodat", function() {deepEqual( Stem("brodate"), "brodat");});
test("broderie -> broder", function() {deepEqual( Stem("broderie"), "broder");});
test("brodoadă -> brodoad", function() {deepEqual( Stem("brodoadă"), "brodoad");});
test("broşura -> broşur", function() {deepEqual( Stem("broşura"), "broşur");});
test("broşură -> broş", function() {deepEqual( Stem("broşură"), "broş");});
test("broşurele -> broşur", function() {deepEqual( Stem("broşurele"), "broşur");});
test("broşuri -> broşur", function() {deepEqual( Stem("broşuri"), "broşur");});
test("broşurile -> broşur", function() {deepEqual( Stem("broşurile"), "broşur");});
test("browning -> browning", function() {deepEqual( Stem("browning"), "browning");});
test("bruma -> brum", function() {deepEqual( Stem("bruma"), "brum");});
test("brumat -> brumat", function() {deepEqual( Stem("brumat"), "brumat");});
test("brumă -> brum", function() {deepEqual( Stem("brumă"), "brum");});
test("bruna -> brun", function() {deepEqual( Stem("bruna"), "brun");});
test("brună -> brun", function() {deepEqual( Stem("brună"), "brun");});
test("brune -> brun", function() {deepEqual( Stem("brune"), "brun");});
test("bruno -> bruno", function() {deepEqual( Stem("bruno"), "bruno");});
test("brusc -> brusc", function() {deepEqual( Stem("brusc"), "brusc");});
test("bruscat -> bruscat", function() {deepEqual( Stem("bruscat"), "bruscat");});
test("bruscă -> brusc", function() {deepEqual( Stem("bruscă"), "brusc");});
test("brut -> brut", function() {deepEqual( Stem("brut"), "brut");});
test("brutal -> brutal", function() {deepEqual( Stem("brutal"), "brutal");});
test("brutală -> brutal", function() {deepEqual( Stem("brutală"), "brutal");});
test("brutale -> brutal", function() {deepEqual( Stem("brutale"), "brutal");});
test("brutali -> brutal", function() {deepEqual( Stem("brutali"), "brutal");});
test("brutalităţii -> brutal", function() {deepEqual( Stem("brutalităţii"), "brutal");});
test("brutării -> brutăr", function() {deepEqual( Stem("brutării"), "brutăr");});
test("brute -> brut", function() {deepEqual( Stem("brute"), "brut");});
test("buboasă -> buboas", function() {deepEqual( Stem("buboasă"), "buboas");});
test("bubuitură -> bubuit", function() {deepEqual( Stem("bubuitură"), "bubuit");});
test("bubuiturilor -> bubuitur", function() {deepEqual( Stem("bubuiturilor"), "bubuitur");});
test("bucata -> bucat", function() {deepEqual( Stem("bucata"), "bucat");});
test("bucată -> bucat", function() {deepEqual( Stem("bucată"), "bucat");});
test("bucătar -> bucătar", function() {deepEqual( Stem("bucătar"), "bucătar");});
test("bucătarul -> bucătar", function() {deepEqual( Stem("bucătarul"), "bucătar");});
test("bucătăreasa -> bucătăreas", function() {deepEqual( Stem("bucătăreasa"), "bucătăreas");});
test("bucătăreasă -> bucătăreas", function() {deepEqual( Stem("bucătăreasă"), "bucătăreas");});
test("bucătărie -> bucătăr", function() {deepEqual( Stem("bucătărie"), "bucătăr");});
test("bucătăriile -> bucătăr", function() {deepEqual( Stem("bucătăriile"), "bucătăr");});
test("bucăţi -> bucăţ", function() {deepEqual( Stem("bucăţi"), "bucăţ");});
test("bucăţilor -> bucăţ", function() {deepEqual( Stem("bucăţilor"), "bucăţ");});
test("bucegii -> buceg", function() {deepEqual( Stem("bucegii"), "buceg");});
test("buchet -> buchet", function() {deepEqual( Stem("buchet"), "buchet");});
test("buchii -> buch", function() {deepEqual( Stem("buchii"), "buch");});
test("bucile -> buc", function() {deepEqual( Stem("bucile"), "buc");});
test("bucla -> bucl", function() {deepEqual( Stem("bucla"), "bucl");});
test("buclat -> buclat", function() {deepEqual( Stem("buclat"), "buclat");});
test("buclează -> bucl", function() {deepEqual( Stem("buclează"), "bucl");});
test("bucurat -> bucur", function() {deepEqual( Stem("bucurat"), "bucur");});
test("bucură -> bucur", function() {deepEqual( Stem("bucură"), "bucur");});
test("bucureştean -> bucureştean", function() {deepEqual( Stem("bucureştean"), "bucureştean");});
test("bucureşteană -> bucureştean", function() {deepEqual( Stem("bucureşteană"), "bucureştean");});
test("bucureştene -> bucureşten", function() {deepEqual( Stem("bucureştene"), "bucureşten");});
test("bucureştenească -> bucureşten", function() {deepEqual( Stem("bucureştenească"), "bucureşten");});
test("bucureşteneşte -> bucureşten", function() {deepEqual( Stem("bucureşteneşte"), "bucureşten");});
test("bucureşti -> bucur", function() {deepEqual( Stem("bucureşti"), "bucur");});
test("bucureştii -> bucur", function() {deepEqual( Stem("bucureştii"), "bucur");});
test("bucureştilor -> bucur", function() {deepEqual( Stem("bucureştilor"), "bucur");});
test("bucuri -> bucur", function() {deepEqual( Stem("bucuri"), "bucur");});
test("bucuria -> bucur", function() {deepEqual( Stem("bucuria"), "bucur");});
test("bucurie -> bucur", function() {deepEqual( Stem("bucurie"), "bucur");});
test("bucurii -> bucur", function() {deepEqual( Stem("bucurii"), "bucur");});
test("bucuriile -> bucur", function() {deepEqual( Stem("bucuriile"), "bucur");});
test("bucuroasă -> bucur", function() {deepEqual( Stem("bucuroasă"), "bucur");});
test("bucuros -> bucur", function() {deepEqual( Stem("bucuros"), "bucur");});
test("bucuroşi -> bucur", function() {deepEqual( Stem("bucuroşi"), "bucur");});
test("budapesta -> budapest", function() {deepEqual( Stem("budapesta"), "budapest");});
test("budget -> budget", function() {deepEqual( Stem("budget"), "budget");});
test("budgete -> budget", function() {deepEqual( Stem("budgete"), "budget");});
test("budhi -> budh", function() {deepEqual( Stem("budhi"), "budh");});
test("budiu -> budiu", function() {deepEqual( Stem("budiu"), "budiu");});
test("bufanţi -> bufanţ", function() {deepEqual( Stem("bufanţi"), "bufanţ");});
test("bufet -> bufet", function() {deepEqual( Stem("bufet"), "bufet");});
test("bufetul -> bufet", function() {deepEqual( Stem("bufetul"), "bufet");});
test("bufnitură -> bufnit", function() {deepEqual( Stem("bufnitură"), "bufnit");});
test("bufon -> bufon", function() {deepEqual( Stem("bufon"), "bufon");});
test("bufoneria -> bufoner", function() {deepEqual( Stem("bufoneria"), "bufoner");});
test("buget -> buget", function() {deepEqual( Stem("buget"), "buget");});
test("bugetar -> bugetar", function() {deepEqual( Stem("bugetar"), "bugetar");});
test("bugetară -> buget", function() {deepEqual( Stem("bugetară"), "buget");});
test("bugetele -> buget", function() {deepEqual( Stem("bugetele"), "buget");});
test("buhai -> buha", function() {deepEqual( Stem("buhai"), "buha");});
test("buhăi -> buhă", function() {deepEqual( Stem("buhăi"), "buhă");});
test("buimac -> buimac", function() {deepEqual( Stem("buimac"), "buimac");});
test("buimacă -> buimac", function() {deepEqual( Stem("buimacă"), "buimac");});
test("buimăcească -> buimăc", function() {deepEqual( Stem("buimăcească"), "buimăc");});
test("buimăcită -> buimăc", function() {deepEqual( Stem("buimăcită"), "buimăc");});
test("bujiile -> buj", function() {deepEqual( Stem("bujiile"), "buj");});
test("bujor -> bujor", function() {deepEqual( Stem("bujor"), "bujor");});
test("bula -> bul", function() {deepEqual( Stem("bula"), "bul");});
test("bulă -> bul", function() {deepEqual( Stem("bulă"), "bul");});
test("buldog -> buldog", function() {deepEqual( Stem("buldog"), "buldog");});
test("buldozer -> buldozer", function() {deepEqual( Stem("buldozer"), "buldozer");});
test("buldozerele -> buldoz", function() {deepEqual( Stem("buldozerele"), "buldoz");});
test("bule -> bul", function() {deepEqual( Stem("bule"), "bul");});
test("bulelor -> bul", function() {deepEqual( Stem("bulelor"), "bul");});
test("buletinele -> buletin", function() {deepEqual( Stem("buletinele"), "buletin");});
test("buletinelor -> buletin", function() {deepEqual( Stem("buletinelor"), "buletin");});
test("bulevard -> bulevard", function() {deepEqual( Stem("bulevard"), "bulevard");});
test("bulevarde -> bulevard", function() {deepEqual( Stem("bulevarde"), "bulevard");});
test("bulevardiere -> bulevardier", function() {deepEqual( Stem("bulevardiere"), "bulevardier");});
test("bulevardul -> bulevard", function() {deepEqual( Stem("bulevardul"), "bulevard");});
test("bulevardului -> bulevard", function() {deepEqual( Stem("bulevardului"), "bulevard");});
test("bulgari -> bulgar", function() {deepEqual( Stem("bulgari"), "bulgar");});
test("bulgarilor -> bulgar", function() {deepEqual( Stem("bulgarilor"), "bulgar");});
test("bulumaci -> bulumac", function() {deepEqual( Stem("bulumaci"), "bulumac");});
test("bun -> bun", function() {deepEqual( Stem("bun"), "bun");});
test("buna -> bun", function() {deepEqual( Stem("buna"), "bun");});
test("bună -> bun", function() {deepEqual( Stem("bună"), "bun");});
test("bunăstare -> bunăst", function() {deepEqual( Stem("bunăstare"), "bunăst");});
test("bunătate -> bunăt", function() {deepEqual( Stem("bunătate"), "bunăt");});
test("bunătatea -> bunăt", function() {deepEqual( Stem("bunătatea"), "bunăt");});
test("bunătăţi -> bunătăţ", function() {deepEqual( Stem("bunătăţi"), "bunătăţ");});
test("bunătăţile -> bunătăţ", function() {deepEqual( Stem("bunătăţile"), "bunătăţ");});
test("bunătăţilor -> bunătăţ", function() {deepEqual( Stem("bunătăţilor"), "bunătăţ");});
test("bunăvoinţa -> bunăvoinţ", function() {deepEqual( Stem("bunăvoinţa"), "bunăvoinţ");});
test("bunăvoinţă -> bunăvoinţ", function() {deepEqual( Stem("bunăvoinţă"), "bunăvoinţ");});
test("bune -> bun", function() {deepEqual( Stem("bune"), "bun");});
test("buni -> bun", function() {deepEqual( Stem("buni"), "bun");});
test("bunica -> bunic", function() {deepEqual( Stem("bunica"), "bunic");});
test("bunicei -> bunice", function() {deepEqual( Stem("bunicei"), "bunice");});
test("bunul -> bun", function() {deepEqual( Stem("bunul"), "bun");});
test("bunului -> bun", function() {deepEqual( Stem("bunului"), "bun");});
test("bunurile -> bunur", function() {deepEqual( Stem("bunurile"), "bunur");});
test("bunurilor -> bunur", function() {deepEqual( Stem("bunurilor"), "bunur");});
test("burbonic -> burbon", function() {deepEqual( Stem("burbonic"), "burbon");});
test("burdufurile -> burdufur", function() {deepEqual( Stem("burdufurile"), "burdufur");});
test("burgez -> burg", function() {deepEqual( Stem("burgez"), "burg");});
test("burgeză -> burgez", function() {deepEqual( Stem("burgeză"), "burgez");});
test("burgeze -> burg", function() {deepEqual( Stem("burgeze"), "burg");});
test("burgezi -> burg", function() {deepEqual( Stem("burgezi"), "burg");});
test("burgezia -> burgez", function() {deepEqual( Stem("burgezia"), "burgez");});
test("burgezie -> burgez", function() {deepEqual( Stem("burgezie"), "burgez");});
test("burgeziei -> burg", function() {deepEqual( Stem("burgeziei"), "burg");});
test("burgezii -> burg", function() {deepEqual( Stem("burgezii"), "burg");});
test("burgeziilor -> burg", function() {deepEqual( Stem("burgeziilor"), "burg");});
test("burgezilor -> burg", function() {deepEqual( Stem("burgezilor"), "burg");});
test("burgezul -> burg", function() {deepEqual( Stem("burgezul"), "burg");});
test("burgezului -> burg", function() {deepEqual( Stem("burgezului"), "burg");});
test("burgheză -> burghez", function() {deepEqual( Stem("burgheză"), "burghez");});
test("burghiu -> burghiu", function() {deepEqual( Stem("burghiu"), "burghiu");});
test("burlac -> burlac", function() {deepEqual( Stem("burlac"), "burlac");});
test("burniţeze -> burniţ", function() {deepEqual( Stem("burniţeze"), "burniţ");});
test("bursa -> burs", function() {deepEqual( Stem("bursa"), "burs");});
test("burselor -> bur", function() {deepEqual( Stem("burselor"), "bur");});
test("burta -> burt", function() {deepEqual( Stem("burta"), "burt");});
test("burtă -> burt", function() {deepEqual( Stem("burtă"), "burt");});
test("burţile -> burţ", function() {deepEqual( Stem("burţile"), "burţ");});
test("buruieni -> buruien", function() {deepEqual( Stem("buruieni"), "buruien");});
test("business -> business", function() {deepEqual( Stem("business"), "business");});
test("busoni -> buson", function() {deepEqual( Stem("busoni"), "buson");});
test("buşteni -> buşten", function() {deepEqual( Stem("buşteni"), "buşten");});
test("butoaie -> butoai", function() {deepEqual( Stem("butoaie"), "butoai");});
test("butoi -> buto", function() {deepEqual( Stem("butoi"), "buto");});
test("butoni -> buton", function() {deepEqual( Stem("butoni"), "buton");});
test("butonieră -> butonier", function() {deepEqual( Stem("butonieră"), "butonier");});
test("buturugă -> buturug", function() {deepEqual( Stem("buturugă"), "buturug");});
test("buza -> buz", function() {deepEqual( Stem("buza"), "buz");});
test("buzat -> buzat", function() {deepEqual( Stem("buzat"), "buzat");});
test("buzău -> buzău", function() {deepEqual( Stem("buzău"), "buzău");});
test("buze -> buz", function() {deepEqual( Stem("buze"), "buz");});
test("buzei -> buze", function() {deepEqual( Stem("buzei"), "buze");});
test("buzele -> buz", function() {deepEqual( Stem("buzele"), "buz");});
test("buzelor -> buz", function() {deepEqual( Stem("buzelor"), "buz");});
test("buzna -> buzn", function() {deepEqual( Stem("buzna"), "buzn");});
test("buzunar -> buzunar", function() {deepEqual( Stem("buzunar"), "buzunar");});
test("buzunare -> buzun", function() {deepEqual( Stem("buzunare"), "buzun");});
test("buzunarele -> buzun", function() {deepEqual( Stem("buzunarele"), "buzun");});
test("buzunarul -> buzunar", function() {deepEqual( Stem("buzunarul"), "buzunar");});
test("c -> c", function() {deepEqual( Stem("c"), "c");});
test("ca -> ca", function() {deepEqual( Stem("ca"), "ca");});
test("cabaliştilor -> cabalist", function() {deepEqual( Stem("cabaliştilor"), "cabalist");});
test("cabaretele -> cabaret", function() {deepEqual( Stem("cabaretele"), "cabaret");});
test("cabinet -> cabinet", function() {deepEqual( Stem("cabinet"), "cabinet");});
test("cabotinaj -> cabotinaj", function() {deepEqual( Stem("cabotinaj"), "cabotinaj");});
test("cabotine -> cabotin", function() {deepEqual( Stem("cabotine"), "cabotin");});
test("cad -> cad", function() {deepEqual( Stem("cad"), "cad");});
test("cadavre -> cadavr", function() {deepEqual( Stem("cadavre"), "cadavr");});
test("cadavrele -> cadavr", function() {deepEqual( Stem("cadavrele"), "cadavr");});
test("cadavru -> cadavru", function() {deepEqual( Stem("cadavru"), "cadavru");});
test("cadână -> cadân", function() {deepEqual( Stem("cadână"), "cadân");});
test("cadă -> cad", function() {deepEqual( Stem("cadă"), "cad");});
test("cade -> cad", function() {deepEqual( Stem("cade"), "cad");});
test("cadet -> cadet", function() {deepEqual( Stem("cadet"), "cadet");});
test("cadou -> cadou", function() {deepEqual( Stem("cadou"), "cadou");});
test("cadouri -> cadour", function() {deepEqual( Stem("cadouri"), "cadour");});
test("cadre -> cadr", function() {deepEqual( Stem("cadre"), "cadr");});
test("cadril -> cadril", function() {deepEqual( Stem("cadril"), "cadril");});
test("cadru -> cadru", function() {deepEqual( Stem("cadru"), "cadru");});
test("cadrul -> cadr", function() {deepEqual( Stem("cadrul"), "cadr");});
test("cadrului -> cadr", function() {deepEqual( Stem("cadrului"), "cadr");});
test("cafea -> caf", function() {deepEqual( Stem("cafea"), "caf");});
test("cafeaua -> cafeau", function() {deepEqual( Stem("cafeaua"), "cafeau");});
test("cafele -> caf", function() {deepEqual( Stem("cafele"), "caf");});
test("cafelelor -> cafel", function() {deepEqual( Stem("cafelelor"), "cafel");});
test("cafenea -> cafen", function() {deepEqual( Stem("cafenea"), "cafen");});
test("cafenele -> cafen", function() {deepEqual( Stem("cafenele"), "cafen");});
test("cafenelei -> cafenele", function() {deepEqual( Stem("cafenelei"), "cafenele");});
test("cafenelelor -> cafenel", function() {deepEqual( Stem("cafenelelor"), "cafenel");});
test("cafenie -> cafen", function() {deepEqual( Stem("cafenie"), "cafen");});
test("cai -> cai", function() {deepEqual( Stem("cai"), "cai");});
test("caii -> cai", function() {deepEqual( Stem("caii"), "cai");});
test("caillaux -> caillaux", function() {deepEqual( Stem("caillaux"), "caillaux");});
test("cailor -> cailor", function() {deepEqual( Stem("cailor"), "cailor");});
test("caise -> cai", function() {deepEqual( Stem("caise"), "cai");});
test("caisei -> cai", function() {deepEqual( Stem("caisei"), "cai");});
test("cal -> cal", function() {deepEqual( Stem("cal"), "cal");});
test("calamburul -> calambur", function() {deepEqual( Stem("calamburul"), "calambur");});
test("calamitate -> calam", function() {deepEqual( Stem("calamitate"), "calam");});
test("calapoade -> calapoad", function() {deepEqual( Stem("calapoade"), "calapoad");});
test("calapoadelor -> calapoad", function() {deepEqual( Stem("calapoadelor"), "calapoad");});
test("calapodul -> calapod", function() {deepEqual( Stem("calapodul"), "calapod");});
test("calc -> calc", function() {deepEqual( Stem("calc"), "calc");});
test("calcar -> calcar", function() {deepEqual( Stem("calcar"), "calcar");});
test("calce -> calc", function() {deepEqual( Stem("calce"), "calc");});
test("calchiat -> calchiat", function() {deepEqual( Stem("calchiat"), "calchiat");});
test("calchiată -> calchiat", function() {deepEqual( Stem("calchiată"), "calchiat");});
test("calcinată -> calcin", function() {deepEqual( Stem("calcinată"), "calcin");});
test("calcul -> calc", function() {deepEqual( Stem("calcul"), "calc");});
test("calcula -> calcul", function() {deepEqual( Stem("calcula"), "calcul");});
test("calculabilă -> calcul", function() {deepEqual( Stem("calculabilă"), "calcul");});
test("calculabile -> calcul", function() {deepEqual( Stem("calculabile"), "calcul");});
test("calculabilitate -> calcul", function() {deepEqual( Stem("calculabilitate"), "calcul");});
test("calculabilităţii -> calcul", function() {deepEqual( Stem("calculabilităţii"), "calcul");});
test("calcularea -> calcul", function() {deepEqual( Stem("calcularea"), "calcul");});
test("calculase -> calcul", function() {deepEqual( Stem("calculase"), "calcul");});
test("calculat -> calcul", function() {deepEqual( Stem("calculat"), "calcul");});
test("calculată -> calcul", function() {deepEqual( Stem("calculată"), "calcul");});
test("calculăm -> calcul", function() {deepEqual( Stem("calculăm"), "calcul");});
test("calculării -> calculăr", function() {deepEqual( Stem("calculării"), "calculăr");});
test("calcule -> calcul", function() {deepEqual( Stem("calcule"), "calcul");});
test("calculează -> calcul", function() {deepEqual( Stem("calculează"), "calcul");});
test("calculele -> calcul", function() {deepEqual( Stem("calculele"), "calcul");});
test("calculez -> calcul", function() {deepEqual( Stem("calculez"), "calcul");});
test("calculezi -> calcul", function() {deepEqual( Stem("calculezi"), "calcul");});
test("calculul -> calcul", function() {deepEqual( Stem("calculul"), "calcul");});
test("calculului -> calcul", function() {deepEqual( Stem("calculului"), "calcul");});
test("cald -> cald", function() {deepEqual( Stem("cald"), "cald");});
test("caldă -> cald", function() {deepEqual( Stem("caldă"), "cald");});
test("calde -> cald", function() {deepEqual( Stem("calde"), "cald");});
test("cale -> cal", function() {deepEqual( Stem("cale"), "cal");});
test("calea -> cal", function() {deepEqual( Stem("calea"), "cal");});
test("calendar -> calendar", function() {deepEqual( Stem("calendar"), "calendar");});
test("calendarul -> calendar", function() {deepEqual( Stem("calendarul"), "calendar");});
test("calibru -> calibru", function() {deepEqual( Stem("calibru"), "calibru");});
test("california -> californ", function() {deepEqual( Stem("california"), "californ");});
test("caligrafică -> caligraf", function() {deepEqual( Stem("caligrafică"), "caligraf");});
test("caligrafice -> caligraf", function() {deepEqual( Stem("caligrafice"), "caligraf");});
test("calitate -> calitat", function() {deepEqual( Stem("calitate"), "calitat");});
test("calitatea -> calitat", function() {deepEqual( Stem("calitatea"), "calitat");});
test("calitativ -> calit", function() {deepEqual( Stem("calitativ"), "calit");});
test("calitativă -> calit", function() {deepEqual( Stem("calitativă"), "calit");});
test("calitative -> calit", function() {deepEqual( Stem("calitative"), "calit");});
test("calităţi -> calităţ", function() {deepEqual( Stem("calităţi"), "calităţ");});
test("calităţile -> calităţ", function() {deepEqual( Stem("calităţile"), "calităţ");});
test("calităţilor -> calităţ", function() {deepEqual( Stem("calităţilor"), "calităţ");});
test("calm -> calm", function() {deepEqual( Stem("calm"), "calm");});
test("calmat -> calmat", function() {deepEqual( Stem("calmat"), "calmat");});
test("calmă -> calm", function() {deepEqual( Stem("calmă"), "calm");});
test("calme -> calm", function() {deepEqual( Stem("calme"), "calm");});
test("calmul -> calm", function() {deepEqual( Stem("calmul"), "calm");});
test("calmului -> calm", function() {deepEqual( Stem("calmului"), "calm");});
test("calomniau -> calomn", function() {deepEqual( Stem("calomniau"), "calomn");});
test("calomnii -> calomn", function() {deepEqual( Stem("calomnii"), "calomn");});
test("calpe -> calp", function() {deepEqual( Stem("calpe"), "calp");});
test("calul -> cal", function() {deepEqual( Stem("calul"), "cal");});
test("calului -> cal", function() {deepEqual( Stem("calului"), "cal");});
test("calzi -> calz", function() {deepEqual( Stem("calzi"), "calz");});
test("cam -> cam", function() {deepEqual( Stem("cam"), "cam");});
test("camarad -> camarad", function() {deepEqual( Stem("camarad"), "camarad");});
test("camaradă -> camarad", function() {deepEqual( Stem("camaradă"), "camarad");});
test("camarade -> camarad", function() {deepEqual( Stem("camarade"), "camarad");});
test("camaraderia -> camarader", function() {deepEqual( Stem("camaraderia"), "camarader");});
test("camaradul -> camarad", function() {deepEqual( Stem("camaradul"), "camarad");});
test("camarazi -> camaraz", function() {deepEqual( Stem("camarazi"), "camaraz");});
test("camarazii -> camaraz", function() {deepEqual( Stem("camarazii"), "camaraz");});
test("camarazilor -> camaraz", function() {deepEqual( Stem("camarazilor"), "camaraz");});
test("camelii -> camel", function() {deepEqual( Stem("camelii"), "camel");});
test("camera -> camer", function() {deepEqual( Stem("camera"), "camer");});
test("cameră -> camer", function() {deepEqual( Stem("cameră"), "camer");});
test("camerei -> camere", function() {deepEqual( Stem("camerei"), "camere");});
test("camerelor -> camer", function() {deepEqual( Stem("camerelor"), "camer");});
test("camerii -> camer", function() {deepEqual( Stem("camerii"), "camer");});
test("cameristei -> cameriste", function() {deepEqual( Stem("cameristei"), "cameriste");});
test("camioanele -> camioan", function() {deepEqual( Stem("camioanele"), "camioan");});
test("campanie -> campan", function() {deepEqual( Stem("campanie"), "campan");});
test("campaniei -> campan", function() {deepEqual( Stem("campaniei"), "campan");});
test("campanii -> campan", function() {deepEqual( Stem("campanii"), "campan");});
test("campaniile -> campan", function() {deepEqual( Stem("campaniile"), "campan");});
test("campoducelui -> campoducel", function() {deepEqual( Stem("campoducelui"), "campoducel");});
test("canalie -> canal", function() {deepEqual( Stem("canalie"), "canal");});
test("canalii -> canal", function() {deepEqual( Stem("canalii"), "canal");});
test("canapelei -> canapele", function() {deepEqual( Stem("canapelei"), "canapele");});
test("cancanuri -> cancanur", function() {deepEqual( Stem("cancanuri"), "cancanur");});
test("cancelarie -> cancelar", function() {deepEqual( Stem("cancelarie"), "cancelar");});
test("cancer -> cancer", function() {deepEqual( Stem("cancer"), "cancer");});
test("canceros -> cancer", function() {deepEqual( Stem("canceros"), "cancer");});
test("cancerului -> cancer", function() {deepEqual( Stem("cancerului"), "cancer");});
test("candelă -> candel", function() {deepEqual( Stem("candelă"), "candel");});
test("candid -> candid", function() {deepEqual( Stem("candid"), "candid");});
test("candidă -> candid", function() {deepEqual( Stem("candidă"), "candid");});
test("candide -> candid", function() {deepEqual( Stem("candide"), "candid");});
test("candoarea -> candoar", function() {deepEqual( Stem("candoarea"), "candoar");});
test("cangea -> cang", function() {deepEqual( Stem("cangea"), "cang");});
test("cantacuzino -> cantacuzino", function() {deepEqual( Stem("cantacuzino"), "cantacuzino");});
test("cantitate -> cantitat", function() {deepEqual( Stem("cantitate"), "cantitat");});
test("cantitatea -> cantitat", function() {deepEqual( Stem("cantitatea"), "cantitat");});
test("cantitatifiere -> cantitatifier", function() {deepEqual( Stem("cantitatifiere"), "cantitatifier");});
test("cantitatifierea -> cantitatifier", function() {deepEqual( Stem("cantitatifierea"), "cantitatifier");});
test("cantitatifierii -> cantitatifier", function() {deepEqual( Stem("cantitatifierii"), "cantitatifier");});
test("cantitativ -> cantit", function() {deepEqual( Stem("cantitativ"), "cantit");});
test("cantitativă -> cantit", function() {deepEqual( Stem("cantitativă"), "cantit");});
test("cantităţi -> cantităţ", function() {deepEqual( Stem("cantităţi"), "cantităţ");});
test("cantoanelor -> cantoan", function() {deepEqual( Stem("cantoanelor"), "cantoan");});
test("cantonament -> cantonament", function() {deepEqual( Stem("cantonament"), "cantonament");});
test("cantonamentele -> cantonament", function() {deepEqual( Stem("cantonamentele"), "cantonament");});
test("cantonamentul -> cantonament", function() {deepEqual( Stem("cantonamentul"), "cantonament");});
test("cantonăm -> canton", function() {deepEqual( Stem("cantonăm"), "canton");});
test("cantonul -> canton", function() {deepEqual( Stem("cantonul"), "canton");});
test("cap -> cap", function() {deepEqual( Stem("cap"), "cap");});
test("capabil -> capabil", function() {deepEqual( Stem("capabil"), "capabil");});
test("capabilă -> capabil", function() {deepEqual( Stem("capabilă"), "capabil");});
test("capabili -> capabil", function() {deepEqual( Stem("capabili"), "capabil");});
test("capacitate -> capac", function() {deepEqual( Stem("capacitate"), "capac");});
test("capacitatea -> capac", function() {deepEqual( Stem("capacitatea"), "capac");});
test("capacităţile -> capac", function() {deepEqual( Stem("capacităţile"), "capac");});
test("capăt -> capăt", function() {deepEqual( Stem("capăt"), "capăt");});
test("capătă -> capăt", function() {deepEqual( Stem("capătă"), "capăt");});
test("capătul -> capăt", function() {deepEqual( Stem("capătul"), "capăt");});
test("capcana -> capcan", function() {deepEqual( Stem("capcana"), "capcan");});
test("capete -> capet", function() {deepEqual( Stem("capete"), "capet");});
test("capetele -> capet", function() {deepEqual( Stem("capetele"), "capet");});
test("capetelor -> capet", function() {deepEqual( Stem("capetelor"), "capet");});
test("capital -> capital", function() {deepEqual( Stem("capital"), "capital");});
test("capitală -> capital", function() {deepEqual( Stem("capitală"), "capital");});
test("capitale -> capital", function() {deepEqual( Stem("capitale"), "capital");});
test("capitalei -> capitale", function() {deepEqual( Stem("capitalei"), "capitale");});
test("capitalele -> capital", function() {deepEqual( Stem("capitalele"), "capital");});
test("capitalism -> capitalist", function() {deepEqual( Stem("capitalism"), "capitalist");});
test("capitalismului -> capitalist", function() {deepEqual( Stem("capitalismului"), "capitalist");});
test("capitalistă -> capitalist", function() {deepEqual( Stem("capitalistă"), "capitalist");});
test("capitaliste -> capitalist", function() {deepEqual( Stem("capitaliste"), "capitalist");});
test("capitalul -> capital", function() {deepEqual( Stem("capitalul"), "capital");});
test("capitalului -> capital", function() {deepEqual( Stem("capitalului"), "capital");});
test("capitaluri -> capitalur", function() {deepEqual( Stem("capitaluri"), "capitalur");});
test("capitol -> capitol", function() {deepEqual( Stem("capitol"), "capitol");});
test("capitole -> capitol", function() {deepEqual( Stem("capitole"), "capitol");});
test("capitolul -> capitol", function() {deepEqual( Stem("capitolul"), "capitol");});
test("capituleze -> capitul", function() {deepEqual( Stem("capituleze"), "capitul");});
test("capo -> capo", function() {deepEqual( Stem("capo"), "capo");});
test("capodopere -> capodop", function() {deepEqual( Stem("capodopere"), "capodop");});
test("caporal -> caporal", function() {deepEqual( Stem("caporal"), "caporal");});
test("caporalul -> caporal", function() {deepEqual( Stem("caporalul"), "caporal");});
test("capră -> capr", function() {deepEqual( Stem("capră"), "capr");});
test("capre -> capr", function() {deepEqual( Stem("capre"), "capr");});
test("capriciile -> capric", function() {deepEqual( Stem("capriciile"), "capric");});
test("capricioase -> capric", function() {deepEqual( Stem("capricioase"), "capric");});
test("capricios -> capric", function() {deepEqual( Stem("capricios"), "capric");});
test("capriciul -> capric", function() {deepEqual( Stem("capriciul"), "capric");});
test("capşa -> capş", function() {deepEqual( Stem("capşa"), "capş");});
test("capta -> capt", function() {deepEqual( Stem("capta"), "capt");});
test("captată -> captat", function() {deepEqual( Stem("captată"), "captat");});
test("captiv -> captiv", function() {deepEqual( Stem("captiv"), "captiv");});
test("captivi -> captiv", function() {deepEqual( Stem("captivi"), "captiv");});
test("capturat -> captur", function() {deepEqual( Stem("capturat"), "captur");});
test("capturate -> captur", function() {deepEqual( Stem("capturate"), "captur");});
test("capturând -> captur", function() {deepEqual( Stem("capturând"), "captur");});
test("capul -> cap", function() {deepEqual( Stem("capul"), "cap");});
test("capului -> cap", function() {deepEqual( Stem("capului"), "cap");});
test("capural -> capural", function() {deepEqual( Stem("capural"), "capural");});
test("caracter -> caracter", function() {deepEqual( Stem("caracter"), "caracter");});
test("caractere -> caract", function() {deepEqual( Stem("caractere"), "caract");});
test("caracterele -> caract", function() {deepEqual( Stem("caracterele"), "caract");});
test("caracteristic -> caracterist", function() {deepEqual( Stem("caracteristic"), "caracterist");});
test("caracteristica -> caracterist", function() {deepEqual( Stem("caracteristica"), "caracterist");});
test("caracteristică -> caracterist", function() {deepEqual( Stem("caracteristică"), "caracterist");});
test("caracteristice -> caracterist", function() {deepEqual( Stem("caracteristice"), "caracterist");});
test("caracteristicile -> caracterist", function() {deepEqual( Stem("caracteristicile"), "caracterist");});
test("caracteriza -> caracteriz", function() {deepEqual( Stem("caracteriza"), "caracteriz");});
test("caracterizat -> caracteriz", function() {deepEqual( Stem("caracterizat"), "caracteriz");});
test("caracterizau -> caracteriz", function() {deepEqual( Stem("caracterizau"), "caracteriz");});
test("caracterizează -> caracteriz", function() {deepEqual( Stem("caracterizează"), "caracteriz");});
test("caracterul -> caracter", function() {deepEqual( Stem("caracterul"), "caracter");});
test("caracterului -> caracter", function() {deepEqual( Stem("caracterului"), "caracter");});
test("carafa -> caraf", function() {deepEqual( Stem("carafa"), "caraf");});
test("caraghios -> caragh", function() {deepEqual( Stem("caraghios"), "caragh");});
test("caraghiosul -> caragh", function() {deepEqual( Stem("caraghiosul"), "caragh");});
test("caragiale -> caragial", function() {deepEqual( Stem("caragiale"), "caragial");});
test("carantină -> carantin", function() {deepEqual( Stem("carantină"), "carantin");});
test("carbon -> carbon", function() {deepEqual( Stem("carbon"), "carbon");});
test("cardinal -> cardinal", function() {deepEqual( Stem("cardinal"), "cardinal");});
test("care -> car", function() {deepEqual( Stem("care"), "car");});
test("carele -> car", function() {deepEqual( Stem("carele"), "car");});
test("carenţă -> carenţ", function() {deepEqual( Stem("carenţă"), "carenţ");});
test("careu -> careu", function() {deepEqual( Stem("careu"), "careu");});
test("careuri -> careur", function() {deepEqual( Stem("careuri"), "careur");});
test("careurile -> careur", function() {deepEqual( Stem("careurile"), "careur");});
test("cari -> car", function() {deepEqual( Stem("cari"), "car");});
test("caricatură -> caricat", function() {deepEqual( Stem("caricatură"), "caricat");});
test("caricaturist -> caricaturist", function() {deepEqual( Stem("caricaturist"), "caricaturist");});
test("cariera -> carier", function() {deepEqual( Stem("cariera"), "carier");});
test("carieră -> carier", function() {deepEqual( Stem("carieră"), "carier");});
test("carierei -> cariere", function() {deepEqual( Stem("carierei"), "cariere");});
test("caritate -> caritat", function() {deepEqual( Stem("caritate"), "caritat");});
test("caritatea -> caritat", function() {deepEqual( Stem("caritatea"), "caritat");});
test("carl -> carl", function() {deepEqual( Stem("carl"), "carl");});
test("carnaval -> carnaval", function() {deepEqual( Stem("carnaval"), "carnaval");});
test("carne -> carn", function() {deepEqual( Stem("carne"), "carn");});
test("carnea -> carn", function() {deepEqual( Stem("carnea"), "carn");});
test("carnet -> carnet", function() {deepEqual( Stem("carnet"), "carnet");});
test("carol -> carol", function() {deepEqual( Stem("carol"), "carol");});
test("carp -> carp", function() {deepEqual( Stem("carp"), "carp");});
test("carpaţi -> carp", function() {deepEqual( Stem("carpaţi"), "carp");});
test("carpaţilor -> carp", function() {deepEqual( Stem("carpaţilor"), "carp");});
test("carpen -> carpen", function() {deepEqual( Stem("carpen"), "carpen");});
test("carte -> cart", function() {deepEqual( Stem("carte"), "cart");});
test("cartea -> cart", function() {deepEqual( Stem("cartea"), "cart");});
test("cartezian -> cartezian", function() {deepEqual( Stem("cartezian"), "cartezian");});
test("carteziană -> cartezian", function() {deepEqual( Stem("carteziană"), "cartezian");});
test("carteziene -> cartezien", function() {deepEqual( Stem("carteziene"), "cartezien");});
test("cartier -> cartier", function() {deepEqual( Stem("cartier"), "cartier");});
test("cartierele -> cartier", function() {deepEqual( Stem("cartierele"), "cartier");});
test("cartierul -> cartier", function() {deepEqual( Stem("cartierul"), "cartier");});
test("cartierului -> cartier", function() {deepEqual( Stem("cartierului"), "cartier");});
test("cartofi -> cartof", function() {deepEqual( Stem("cartofi"), "cartof");});
test("carton -> carton", function() {deepEqual( Stem("carton"), "carton");});
test("cartuş -> cartuş", function() {deepEqual( Stem("cartuş"), "cartuş");});
test("cartuşe -> cartuş", function() {deepEqual( Stem("cartuşe"), "cartuş");});
test("cartuşele -> cartuş", function() {deepEqual( Stem("cartuşele"), "cartuş");});
test("carului -> car", function() {deepEqual( Stem("carului"), "car");});
test("caruso -> caruso", function() {deepEqual( Stem("caruso"), "caruso");});
test("casa -> cas", function() {deepEqual( Stem("casa"), "cas");});
test("casă -> cas", function() {deepEqual( Stem("casă"), "cas");});
test("case -> cas", function() {deepEqual( Stem("case"), "cas");});
test("casei -> case", function() {deepEqual( Stem("casei"), "case");});
test("casele -> cas", function() {deepEqual( Stem("casele"), "cas");});
test("caselor -> cas", function() {deepEqual( Stem("caselor"), "cas");});
test("caseta -> caset", function() {deepEqual( Stem("caseta"), "caset");});
test("casieria -> casier", function() {deepEqual( Stem("casieria"), "casier");});
test("casierul -> casier", function() {deepEqual( Stem("casierul"), "casier");});
test("casnică -> casnic", function() {deepEqual( Stem("casnică"), "casnic");});
test("caspică -> caspic", function() {deepEqual( Stem("caspică"), "caspic");});
test("casta -> cast", function() {deepEqual( Stem("casta"), "cast");});
test("castagnetă -> castagnet", function() {deepEqual( Stem("castagnetă"), "castagnet");});
test("castani -> castan", function() {deepEqual( Stem("castani"), "castan");});
test("castanilor -> castan", function() {deepEqual( Stem("castanilor"), "castan");});
test("castaniu -> castaniu", function() {deepEqual( Stem("castaniu"), "castaniu");});
test("castă -> cast", function() {deepEqual( Stem("castă"), "cast");});
test("caste -> cast", function() {deepEqual( Stem("caste"), "cast");});
test("castel -> castel", function() {deepEqual( Stem("castel"), "castel");});
test("castraveţi -> castrav", function() {deepEqual( Stem("castraveţi"), "castrav");});
test("castronul -> castron", function() {deepEqual( Stem("castronul"), "castron");});
test("caşcavalul -> caşcaval", function() {deepEqual( Stem("caşcavalul"), "caşcaval");});
test("cataclismală -> cataclismal", function() {deepEqual( Stem("cataclismală"), "cataclismal");});
test("cataclismului -> cataclist", function() {deepEqual( Stem("cataclismului"), "cataclist");});
test("catafalc -> catafalc", function() {deepEqual( Stem("catafalc"), "catafalc");});
test("catalog -> catalog", function() {deepEqual( Stem("catalog"), "catalog");});
test("catargiu -> catargiu", function() {deepEqual( Stem("catargiu"), "catargiu");});
test("catastrofa -> catastrof", function() {deepEqual( Stem("catastrofa"), "catastrof");});
test("catastrofal -> catastrofal", function() {deepEqual( Stem("catastrofal"), "catastrofal");});
test("catastrofală -> catastrofal", function() {deepEqual( Stem("catastrofală"), "catastrofal");});
test("catastrofale -> catastrofal", function() {deepEqual( Stem("catastrofale"), "catastrofal");});
test("catastrofă -> catastrof", function() {deepEqual( Stem("catastrofă"), "catastrof");});
test("catastrofe -> catastrof", function() {deepEqual( Stem("catastrofe"), "catastrof");});
test("catastrofei -> catastrofe", function() {deepEqual( Stem("catastrofei"), "catastrofe");});
test("catastrofele -> catastrof", function() {deepEqual( Stem("catastrofele"), "catastrof");});
test("catedrală -> catedral", function() {deepEqual( Stem("catedrală"), "catedral");});
test("catedră -> catedr", function() {deepEqual( Stem("catedră"), "catedr");});
test("categoriale -> categorial", function() {deepEqual( Stem("categoriale"), "categorial");});
test("categoric -> categor", function() {deepEqual( Stem("categoric"), "categor");});
test("categorică -> categor", function() {deepEqual( Stem("categorică"), "categor");});
test("categorice -> categor", function() {deepEqual( Stem("categorice"), "categor");});
test("categorie -> categor", function() {deepEqual( Stem("categorie"), "categor");});
test("categorii -> categor", function() {deepEqual( Stem("categorii"), "categor");});
test("categoriile -> categor", function() {deepEqual( Stem("categoriile"), "categor");});
test("categoriilor -> categor", function() {deepEqual( Stem("categoriilor"), "categor");});
test("catifelat -> catifel", function() {deepEqual( Stem("catifelat"), "catifel");});
test("catifelată -> catifel", function() {deepEqual( Stem("catifelată"), "catifel");});
test("catifelate -> catifel", function() {deepEqual( Stem("catifelate"), "catifel");});
test("catifelaţi -> catifel", function() {deepEqual( Stem("catifelaţi"), "catifel");});
test("catolice -> catol", function() {deepEqual( Stem("catolice"), "catol");});
test("catolicismul -> catolicist", function() {deepEqual( Stem("catolicismul"), "catolicist");});
test("cauciuc -> cauciuc", function() {deepEqual( Stem("cauciuc"), "cauciuc");});
test("cauciucurile -> cauciucur", function() {deepEqual( Stem("cauciucurile"), "cauciucur");});
test("caut -> caut", function() {deepEqual( Stem("caut"), "caut");});
test("caută -> caut", function() {deepEqual( Stem("caută"), "caut");});
test("caute -> caut", function() {deepEqual( Stem("caute"), "caut");});
test("cauţi -> cauţ", function() {deepEqual( Stem("cauţi"), "cauţ");});
test("cauza -> cauz", function() {deepEqual( Stem("cauza"), "cauz");});
test("cauzală -> cauzal", function() {deepEqual( Stem("cauzală"), "cauzal");});
test("cauzale -> cauzal", function() {deepEqual( Stem("cauzale"), "cauzal");});
test("cauzalitate -> cauzal", function() {deepEqual( Stem("cauzalitate"), "cauzal");});
test("cauzalitatea -> cauzal", function() {deepEqual( Stem("cauzalitatea"), "cauzal");});
test("cauzalităţii -> cauzal", function() {deepEqual( Stem("cauzalităţii"), "cauzal");});
test("cauzare -> cauz", function() {deepEqual( Stem("cauzare"), "cauz");});
test("cauzarea -> cauz", function() {deepEqual( Stem("cauzarea"), "cauz");});
test("cauzată -> cauzat", function() {deepEqual( Stem("cauzată"), "cauzat");});
test("cauzaţie -> cauz", function() {deepEqual( Stem("cauzaţie"), "cauz");});
test("cauză -> cauz", function() {deepEqual( Stem("cauză"), "cauz");});
test("cauze -> cauz", function() {deepEqual( Stem("cauze"), "cauz");});
test("cauzează -> cauz", function() {deepEqual( Stem("cauzează"), "cauz");});
test("cauzei -> cauze", function() {deepEqual( Stem("cauzei"), "cauze");});
test("cauzele -> cauz", function() {deepEqual( Stem("cauzele"), "cauz");});
test("cauzelor -> cauz", function() {deepEqual( Stem("cauzelor"), "cauz");});
test("cavalerie -> cavaler", function() {deepEqual( Stem("cavalerie"), "cavaler");});
test("cavou -> cavou", function() {deepEqual( Stem("cavou"), "cavou");});
test("caz -> caz", function() {deepEqual( Stem("caz"), "caz");});
test("cazan -> cazan", function() {deepEqual( Stem("cazan"), "cazan");});
test("cazania -> cazan", function() {deepEqual( Stem("cazania"), "cazan");});
test("cazarma -> cazarm", function() {deepEqual( Stem("cazarma"), "cazarm");});
test("cazarmă -> cazarm", function() {deepEqual( Stem("cazarmă"), "cazarm");});
test("cazărmi -> cazărm", function() {deepEqual( Stem("cazărmi"), "cazărm");});
test("cazărmii -> cazărm", function() {deepEqual( Stem("cazărmii"), "cazărm");});
test("cazul -> caz", function() {deepEqual( Stem("cazul"), "caz");});
test("cazului -> caz", function() {deepEqual( Stem("cazului"), "caz");});
test("cazuri -> cazur", function() {deepEqual( Stem("cazuri"), "cazur");});
test("cazurile -> cazur", function() {deepEqual( Stem("cazurile"), "cazur");});
test("cazurilor -> cazur", function() {deepEqual( Stem("cazurilor"), "cazur");});
test("câine -> câin", function() {deepEqual( Stem("câine"), "câin");});
test("câinele -> câin", function() {deepEqual( Stem("câinele"), "câin");});
test("câini -> câin", function() {deepEqual( Stem("câini"), "câin");});
test("câlţi -> câlţ", function() {deepEqual( Stem("câlţi"), "câlţ");});
test("câmp -> câmp", function() {deepEqual( Stem("câmp"), "câmp");});
test("câmpia -> câmp", function() {deepEqual( Stem("câmpia"), "câmp");});
test("câmpie -> câmp", function() {deepEqual( Stem("câmpie"), "câmp");});
test("câmpul -> câmp", function() {deepEqual( Stem("câmpul"), "câmp");});
test("câmpului -> câmp", function() {deepEqual( Stem("câmpului"), "câmp");});
test("câmpulung -> câmpulung", function() {deepEqual( Stem("câmpulung"), "câmpulung");});
test("câmpulungului -> câmpulung", function() {deepEqual( Stem("câmpulungului"), "câmpulung");});
test("câmpurile -> câmpur", function() {deepEqual( Stem("câmpurile"), "câmpur");});
test("când -> când", function() {deepEqual( Stem("când"), "când");});
test("cândva -> cândv", function() {deepEqual( Stem("cândva"), "cândv");});
test("cânta -> cânt", function() {deepEqual( Stem("cânta"), "cânt");});
test("cântar -> cântar", function() {deepEqual( Stem("cântar"), "cântar");});
test("cântat -> cântat", function() {deepEqual( Stem("cântat"), "cântat");});
test("cântă -> cânt", function() {deepEqual( Stem("cântă"), "cânt");});
test("cântărea -> cântăr", function() {deepEqual( Stem("cântărea"), "cântăr");});
test("cântăresc -> cântăr", function() {deepEqual( Stem("cântăresc"), "cântăr");});
test("cântăreţ -> cântăreţ", function() {deepEqual( Stem("cântăreţ"), "cântăreţ");});
test("cântăreţi -> cântăr", function() {deepEqual( Stem("cântăreţi"), "cântăr");});
test("cântăreţii -> cântăr", function() {deepEqual( Stem("cântăreţii"), "cântăr");});
test("cântăreţul -> cântăreţ", function() {deepEqual( Stem("cântăreţul"), "cântăreţ");});
test("cânte -> cânt", function() {deepEqual( Stem("cânte"), "cânt");});
test("cântec -> cântec", function() {deepEqual( Stem("cântec"), "cântec");});
test("cântece -> cântec", function() {deepEqual( Stem("cântece"), "cântec");});
test("cântecele -> cântec", function() {deepEqual( Stem("cântecele"), "cântec");});
test("cântecul -> cântec", function() {deepEqual( Stem("cântecul"), "cântec");});
test("cântecului -> cântec", function() {deepEqual( Stem("cântecului"), "cântec");});
test("cârciuma -> cârcium", function() {deepEqual( Stem("cârciuma"), "cârcium");});
test("cârciumar -> cârciumar", function() {deepEqual( Stem("cârciumar"), "cârciumar");});
test("cârciumari -> cârciumar", function() {deepEqual( Stem("cârciumari"), "cârciumar");});
test("cârciumă -> cârcium", function() {deepEqual( Stem("cârciumă"), "cârcium");});
test("cârciumile -> cârcium", function() {deepEqual( Stem("cârciumile"), "cârcium");});
test("cârd -> cârd", function() {deepEqual( Stem("cârd"), "cârd");});
test("cârduri -> cârdur", function() {deepEqual( Stem("cârduri"), "cârdur");});
test("cârnatul -> cârnat", function() {deepEqual( Stem("cârnatul"), "cârnat");});
test("cârnaţi -> cârn", function() {deepEqual( Stem("cârnaţi"), "cârn");});
test("cârnă -> cârn", function() {deepEqual( Stem("cârnă"), "cârn");});
test("cârpă -> cârp", function() {deepEqual( Stem("cârpă"), "cârp");});
test("cârpit -> cârpit", function() {deepEqual( Stem("cârpit"), "cârpit");});
test("câştig -> câştig", function() {deepEqual( Stem("câştig"), "câştig");});
test("câştiga -> câştig", function() {deepEqual( Stem("câştiga"), "câştig");});
test("câştigam -> câştig", function() {deepEqual( Stem("câştigam"), "câştig");});
test("câştigat -> câştig", function() {deepEqual( Stem("câştigat"), "câştig");});
test("câştigată -> câştig", function() {deepEqual( Stem("câştigată"), "câştig");});
test("câştigate -> câştig", function() {deepEqual( Stem("câştigate"), "câştig");});
test("câştigaţi -> câştig", function() {deepEqual( Stem("câştigaţi"), "câştig");});
test("câştigând -> câştig", function() {deepEqual( Stem("câştigând"), "câştig");});
test("câştigă -> câştig", function() {deepEqual( Stem("câştigă"), "câştig");});
test("câştigăm -> câştig", function() {deepEqual( Stem("câştigăm"), "câştig");});
test("câştige -> câştig", function() {deepEqual( Stem("câştige"), "câştig");});
test("câştigi -> câştig", function() {deepEqual( Stem("câştigi"), "câştig");});
test("cât -> cât", function() {deepEqual( Stem("cât"), "cât");});
test("câtă -> cât", function() {deepEqual( Stem("câtă"), "cât");});
test("câtăva -> câtăv", function() {deepEqual( Stem("câtăva"), "câtăv");});
test("câte -> cât", function() {deepEqual( Stem("câte"), "cât");});
test("câtelea -> câtel", function() {deepEqual( Stem("câtelea"), "câtel");});
test("câteodată -> câteod", function() {deepEqual( Stem("câteodată"), "câteod");});
test("câteva -> câtev", function() {deepEqual( Stem("câteva"), "câtev");});
test("câtorva -> câtorv", function() {deepEqual( Stem("câtorva"), "câtorv");});
test("câtva -> câtv", function() {deepEqual( Stem("câtva"), "câtv");});
test("câţi -> câţ", function() {deepEqual( Stem("câţi"), "câţ");});
test("câţiva -> câţiv", function() {deepEqual( Stem("câţiva"), "câţiv");});
test("că -> că", function() {deepEqual( Stem("că"), "că");});
test("căci -> căc", function() {deepEqual( Stem("căci"), "căc");});
test("căciula -> căciul", function() {deepEqual( Stem("căciula"), "căciul");});
test("căciulă -> căciul", function() {deepEqual( Stem("căciulă"), "căciul");});
test("cădea -> căd", function() {deepEqual( Stem("cădea"), "căd");});
test("cădeam -> cădeam", function() {deepEqual( Stem("cădeam"), "cădeam");});
test("cădeau -> cădeau", function() {deepEqual( Stem("cădeau"), "cădeau");});
test("cădem -> căd", function() {deepEqual( Stem("cădem"), "căd");});
test("cădere -> căder", function() {deepEqual( Stem("cădere"), "căder");});
test("căderea -> căder", function() {deepEqual( Stem("căderea"), "căder");});
test("căi -> căi", function() {deepEqual( Stem("căi"), "căi");});
test("căile -> căil", function() {deepEqual( Stem("căile"), "căil");});
test("călare -> călar", function() {deepEqual( Stem("călare"), "călar");});
test("călăreţ -> călăreţ", function() {deepEqual( Stem("călăreţ"), "călăreţ");});
test("călăreţi -> călăr", function() {deepEqual( Stem("călăreţi"), "călăr");});
test("călăreţul -> călăreţ", function() {deepEqual( Stem("călăreţul"), "călăreţ");});
test("călări -> călăr", function() {deepEqual( Stem("călări"), "călăr");});
test("călărie -> călăr", function() {deepEqual( Stem("călărie"), "călăr");});
test("călător -> călat", function() {deepEqual( Stem("călător"), "călat");});
test("călătoreşte -> călător", function() {deepEqual( Stem("călătoreşte"), "călător");});
test("călători -> călat", function() {deepEqual( Stem("călători"), "călat");});
test("călătoria -> călător", function() {deepEqual( Stem("călătoria"), "călător");});
test("călătorie -> călător", function() {deepEqual( Stem("călătorie"), "călător");});
test("călătorii -> călat", function() {deepEqual( Stem("călătorii"), "călat");});
test("călătorit -> călător", function() {deepEqual( Stem("călătorit"), "călător");});
test("călătorul -> călat", function() {deepEqual( Stem("călătorul"), "călat");});
test("călău -> călău", function() {deepEqual( Stem("călău"), "călău");});
test("călăuza -> călăuz", function() {deepEqual( Stem("călăuza"), "călăuz");});
test("călăuză -> călăuz", function() {deepEqual( Stem("călăuză"), "călăuz");});
test("călăuzească -> călăuz", function() {deepEqual( Stem("călăuzească"), "călăuz");});
test("călăuzit -> călăuz", function() {deepEqual( Stem("călăuzit"), "călăuz");});
test("călăuzită -> călăuz", function() {deepEqual( Stem("călăuzită"), "călăuz");});
test("călăuzitoare -> călăuz", function() {deepEqual( Stem("călăuzitoare"), "călăuz");});
test("călăuziţi -> călăuz", function() {deepEqual( Stem("călăuziţi"), "călăuz");});
test("călca -> călc", function() {deepEqual( Stem("călca"), "călc");});
test("călcam -> călc", function() {deepEqual( Stem("călcam"), "călc");});
test("călcase -> călc", function() {deepEqual( Stem("călcase"), "călc");});
test("călcat -> călcat", function() {deepEqual( Stem("călcat"), "călcat");});
test("călcaţi -> călc", function() {deepEqual( Stem("călcaţi"), "călc");});
test("călcâi -> călc", function() {deepEqual( Stem("călcâi"), "călc");});
test("călcâie -> călcâi", function() {deepEqual( Stem("călcâie"), "călcâi");});
test("călcâile -> călc", function() {deepEqual( Stem("călcâile"), "călc");});
test("călcăm -> călc", function() {deepEqual( Stem("călcăm"), "călc");});
test("călcător -> călcat", function() {deepEqual( Stem("călcător"), "călcat");});
test("călcîi -> călcî", function() {deepEqual( Stem("călcîi"), "călcî");});
test("călcînd -> călcînd", function() {deepEqual( Stem("călcînd"), "călcînd");});
test("căldare -> căld", function() {deepEqual( Stem("căldare"), "căld");});
test("căldarea -> căld", function() {deepEqual( Stem("căldarea"), "căld");});
test("căldăruşe -> căldăruş", function() {deepEqual( Stem("căldăruşe"), "căldăruş");});
test("căldura -> căldur", function() {deepEqual( Stem("căldura"), "căldur");});
test("căldură -> căld", function() {deepEqual( Stem("căldură"), "căld");});
test("călduroase -> căldur", function() {deepEqual( Stem("călduroase"), "căldur");});
test("călduţ -> călduţ", function() {deepEqual( Stem("călduţ"), "călduţ");});
test("călugăr -> călugăr", function() {deepEqual( Stem("călugăr"), "călugăr");});
test("călugărească -> călugăr", function() {deepEqual( Stem("călugărească"), "călugăr");});
test("călugăreni -> călugăren", function() {deepEqual( Stem("călugăreni"), "călugăren");});
test("căluşei -> căluşe", function() {deepEqual( Stem("căluşei"), "căluşe");});
test("cămaşa -> cămaş", function() {deepEqual( Stem("cămaşa"), "cămaş");});
test("cămaşă -> cămaş", function() {deepEqual( Stem("cămaşă"), "cămaş");});
test("cămăşi -> cămăş", function() {deepEqual( Stem("cămăşi"), "cămăş");});
test("cămăşuţa -> cămăşuţ", function() {deepEqual( Stem("cămăşuţa"), "cămăşuţ");});
test("cămăşuţă -> cămăşuţ", function() {deepEqual( Stem("cămăşuţă"), "cămăşuţ");});
test("căngi -> căng", function() {deepEqual( Stem("căngi"), "căng");});
test("căpătase -> căpăt", function() {deepEqual( Stem("căpătase"), "căpăt");});
test("căpătat -> căpăt", function() {deepEqual( Stem("căpătat"), "căpăt");});
test("căpătâi -> căpăt", function() {deepEqual( Stem("căpătâi"), "căpăt");});
test("căpătâiul -> căpătâi", function() {deepEqual( Stem("căpătâiul"), "căpătâi");});
test("căpătăm -> căpăt", function() {deepEqual( Stem("căpătăm"), "căpăt");});
test("căpitan -> căpitan", function() {deepEqual( Stem("căpitan"), "căpitan");});
test("căpitanii -> căpitan", function() {deepEqual( Stem("căpitanii"), "căpitan");});
test("căpitanilor -> căpitan", function() {deepEqual( Stem("căpitanilor"), "căpitan");});
test("căpitanul -> căpitan", function() {deepEqual( Stem("căpitanul"), "căpitan");});
test("căpitanului -> căpitan", function() {deepEqual( Stem("căpitanului"), "căpitan");});
test("căpiţă -> căpiţ", function() {deepEqual( Stem("căpiţă"), "căpiţ");});
test("căpiţe -> căpiţ", function() {deepEqual( Stem("căpiţe"), "căpiţ");});
test("căpiţele -> căpiţ", function() {deepEqual( Stem("căpiţele"), "căpiţ");});
test("căprioară -> căprioar", function() {deepEqual( Stem("căprioară"), "căprioar");});
test("căprui -> căpr", function() {deepEqual( Stem("căprui"), "căpr");});
test("căptuşit -> căptuş", function() {deepEqual( Stem("căptuşit"), "căptuş");});
test("căptuşită -> căptuş", function() {deepEqual( Stem("căptuşită"), "căptuş");});
test("căptuşite -> căptuş", function() {deepEqual( Stem("căptuşite"), "căptuş");});
test("căra -> căr", function() {deepEqual( Stem("căra"), "căr");});
test("căratului -> cărat", function() {deepEqual( Stem("căratului"), "cărat");});
test("cărămizii -> cărămiz", function() {deepEqual( Stem("cărămizii"), "cărămiz");});
test("cărăruie -> cărărui", function() {deepEqual( Stem("cărăruie"), "cărărui");});
test("cărbunele -> cărbun", function() {deepEqual( Stem("cărbunele"), "cărbun");});
test("cărei -> căre", function() {deepEqual( Stem("cărei"), "căre");});
test("căreia -> cărei", function() {deepEqual( Stem("căreia"), "cărei");});
test("cărnii -> cărn", function() {deepEqual( Stem("cărnii"), "cărn");});
test("cărnoase -> cărnoas", function() {deepEqual( Stem("cărnoase"), "cărnoas");});
test("căror -> căror", function() {deepEqual( Stem("căror"), "căror");});
test("cărora -> căror", function() {deepEqual( Stem("cărora"), "căror");});
test("cărturar -> cărturar", function() {deepEqual( Stem("cărturar"), "cărturar");});
test("cărturari -> cărturar", function() {deepEqual( Stem("cărturari"), "cărturar");});
test("cărturarii -> cărturar", function() {deepEqual( Stem("cărturarii"), "cărturar");});
test("cărturarului -> cărturar", function() {deepEqual( Stem("cărturarului"), "cărturar");});
test("cărţi -> cărţ", function() {deepEqual( Stem("cărţi"), "cărţ");});
test("cărţile -> cărţ", function() {deepEqual( Stem("cărţile"), "cărţ");});
test("cărţulii -> cărţul", function() {deepEqual( Stem("cărţulii"), "cărţul");});
test("cărui -> căru", function() {deepEqual( Stem("cărui"), "căru");});
test("căruia -> cărui", function() {deepEqual( Stem("căruia"), "cărui");});
test("cărunt -> cărunt", function() {deepEqual( Stem("cărunt"), "cărunt");});
test("căruntă -> cărunt", function() {deepEqual( Stem("căruntă"), "cărunt");});
test("căruţa -> căruţ", function() {deepEqual( Stem("căruţa"), "căruţ");});
test("căruţă -> căruţ", function() {deepEqual( Stem("căruţă"), "căruţ");});
test("căruţe -> căruţ", function() {deepEqual( Stem("căruţe"), "căruţ");});
test("căruţele -> căruţ", function() {deepEqual( Stem("căruţele"), "căruţ");});
test("căsătoria -> căsător", function() {deepEqual( Stem("căsătoria"), "căsător");});
test("căsătoriei -> căsat", function() {deepEqual( Stem("căsătoriei"), "căsat");});
test("căsătorit -> căsător", function() {deepEqual( Stem("căsătorit"), "căsător");});
test("căsătoriţi -> căsător", function() {deepEqual( Stem("căsătoriţi"), "căsător");});
test("căscat -> căscat", function() {deepEqual( Stem("căscat"), "căscat");});
test("căscată -> căscat", function() {deepEqual( Stem("căscată"), "căscat");});
test("căsnicia -> căsnic", function() {deepEqual( Stem("căsnicia"), "căsnic");});
test("căsnicie -> căsnic", function() {deepEqual( Stem("căsnicie"), "căsnic");});
test("căsniciei -> căsnic", function() {deepEqual( Stem("căsniciei"), "căsnic");});
test("căsuţa -> căsuţ", function() {deepEqual( Stem("căsuţa"), "căsuţ");});
test("căsuţe -> căsuţ", function() {deepEqual( Stem("căsuţe"), "căsuţ");});
test("cătră -> cătr", function() {deepEqual( Stem("cătră"), "cătr");});
test("către -> cătr", function() {deepEqual( Stem("către"), "cătr");});
test("cătun -> cătun", function() {deepEqual( Stem("cătun"), "cătun");});
test("cătunele -> cătun", function() {deepEqual( Stem("cătunele"), "cătun");});
test("cătunul -> cătun", function() {deepEqual( Stem("cătunul"), "cătun");});
test("cătunului -> cătun", function() {deepEqual( Stem("cătunului"), "cătun");});
test("cătuşe -> cătuş", function() {deepEqual( Stem("cătuşe"), "cătuş");});
test("căţărată -> căţăr", function() {deepEqual( Stem("căţărată"), "căţăr");});
test("căţăraţi -> căţăr", function() {deepEqual( Stem("căţăraţi"), "căţăr");});
test("căţeluş -> căţeluş", function() {deepEqual( Stem("căţeluş"), "căţeluş");});
test("căuta -> căut", function() {deepEqual( Stem("căuta"), "căut");});
test("căutai -> căut", function() {deepEqual( Stem("căutai"), "căut");});
test("căutam -> căut", function() {deepEqual( Stem("căutam"), "căut");});
test("căutasem -> căut", function() {deepEqual( Stem("căutasem"), "căut");});
test("căutat -> căutat", function() {deepEqual( Stem("căutat"), "căutat");});
test("căutata -> căutat", function() {deepEqual( Stem("căutata"), "căutat");});
test("căutate -> căutat", function() {deepEqual( Stem("căutate"), "căutat");});
test("căutaţi -> căut", function() {deepEqual( Stem("căutaţi"), "căut");});
test("căutau -> căut", function() {deepEqual( Stem("căutau"), "căut");});
test("căutând -> căut", function() {deepEqual( Stem("căutând"), "căut");});
test("căutându -> căut", function() {deepEqual( Stem("căutându"), "căut");});
test("căutăm -> căut", function() {deepEqual( Stem("căutăm"), "căut");});
test("căzând -> căzând", function() {deepEqual( Stem("căzând"), "căzând");});
test("căzându -> căzându", function() {deepEqual( Stem("căzându"), "căzându");});
test("căzuse -> căzus", function() {deepEqual( Stem("căzuse"), "căzus");});
test("căzut -> căzut", function() {deepEqual( Stem("căzut"), "căzut");});
test("căzută -> căzut", function() {deepEqual( Stem("căzută"), "căzut");});
test("căzute -> căzut", function() {deepEqual( Stem("căzute"), "căzut");});
test("căzuţi -> căzuţ", function() {deepEqual( Stem("căzuţi"), "căzuţ");});
test("ce -> ce", function() {deepEqual( Stem("ce"), "ce");});
test("cea -> cea", function() {deepEqual( Stem("cea"), "cea");});
test("ceafă -> ceaf", function() {deepEqual( Stem("ceafă"), "ceaf");});
test("ceai -> cea", function() {deepEqual( Stem("ceai"), "cea");});
test("ceaiului -> ceai", function() {deepEqual( Stem("ceaiului"), "ceai");});
test("cealaltă -> cealalt", function() {deepEqual( Stem("cealaltă"), "cealalt");});
test("ceară -> cear", function() {deepEqual( Stem("ceară"), "cear");});
test("cearnă -> cearn", function() {deepEqual( Stem("cearnă"), "cearn");});
test("cearşaf -> cearşaf", function() {deepEqual( Stem("cearşaf"), "cearşaf");});
test("cearşaful -> cearşaf", function() {deepEqual( Stem("cearşaful"), "cearşaf");});
test("cearşafuri -> cearşafur", function() {deepEqual( Stem("cearşafuri"), "cearşafur");});
test("cearşafurilor -> cearşafur", function() {deepEqual( Stem("cearşafurilor"), "cearşafur");});
test("cearta -> ceart", function() {deepEqual( Stem("cearta"), "ceart");});
test("ceartă -> ceart", function() {deepEqual( Stem("ceartă"), "ceart");});
test("ceas -> ceas", function() {deepEqual( Stem("ceas"), "ceas");});
test("ceasornic -> ceasorn", function() {deepEqual( Stem("ceasornic"), "ceasorn");});
test("ceasornicul -> ceasorn", function() {deepEqual( Stem("ceasornicul"), "ceasorn");});
test("ceasornicului -> ceasorn", function() {deepEqual( Stem("ceasornicului"), "ceasorn");});
test("ceasul -> ceas", function() {deepEqual( Stem("ceasul"), "ceas");});
test("ceasuri -> ceasur", function() {deepEqual( Stem("ceasuri"), "ceasur");});
test("ceaţă -> ceaţ", function() {deepEqual( Stem("ceaţă"), "ceaţ");});
test("cec -> cec", function() {deepEqual( Stem("cec"), "cec");});
test("cecul -> cec", function() {deepEqual( Stem("cecul"), "cec");});
test("cecuri -> cecur", function() {deepEqual( Stem("cecuri"), "cecur");});
test("cecurile -> cecur", function() {deepEqual( Stem("cecurile"), "cecur");});
test("ceda -> ced", function() {deepEqual( Stem("ceda"), "ced");});
test("cedat -> cedat", function() {deepEqual( Stem("cedat"), "cedat");});
test("cedezi -> cedez", function() {deepEqual( Stem("cedezi"), "cedez");});
test("cedrilor -> cedr", function() {deepEqual( Stem("cedrilor"), "cedr");});
test("ceea -> cee", function() {deepEqual( Stem("ceea"), "cee");});
test("ceferistul -> ceferist", function() {deepEqual( Stem("ceferistul"), "ceferist");});
test("cehoslovacii -> cehoslovac", function() {deepEqual( Stem("cehoslovacii"), "cehoslovac");});
test("cei -> cei", function() {deepEqual( Stem("cei"), "cei");});
test("ceilalţi -> ceilalţ", function() {deepEqual( Stem("ceilalţi"), "ceilalţ");});
test("cel -> cel", function() {deepEqual( Stem("cel"), "cel");});
test("celălalt -> celălalt", function() {deepEqual( Stem("celălalt"), "celălalt");});
test("cele -> cel", function() {deepEqual( Stem("cele"), "cel");});
test("celebra -> celebr", function() {deepEqual( Stem("celebra"), "celebr");});
test("celebră -> celebr", function() {deepEqual( Stem("celebră"), "celebr");});
test("celebre -> celebr", function() {deepEqual( Stem("celebre"), "celebr");});
test("celebri -> celebr", function() {deepEqual( Stem("celebri"), "celebr");});
test("celebru -> celebru", function() {deepEqual( Stem("celebru"), "celebru");});
test("celebrul -> celebr", function() {deepEqual( Stem("celebrul"), "celebr");});
test("celebrului -> celebr", function() {deepEqual( Stem("celebrului"), "celebr");});
test("celei -> cele", function() {deepEqual( Stem("celei"), "cele");});
test("celeilalte -> celeilalt", function() {deepEqual( Stem("celeilalte"), "celeilalt");});
test("celelalte -> celelalt", function() {deepEqual( Stem("celelalte"), "celelalt");});
test("celelate -> celel", function() {deepEqual( Stem("celelate"), "celel");});
test("celor -> celor", function() {deepEqual( Stem("celor"), "celor");});
test("celorlalte -> celorlalt", function() {deepEqual( Stem("celorlalte"), "celorlalt");});
test("celorlalţi -> celorlalţ", function() {deepEqual( Stem("celorlalţi"), "celorlalţ");});
test("celui -> celu", function() {deepEqual( Stem("celui"), "celu");});
test("celuilalt -> celuilalt", function() {deepEqual( Stem("celuilalt"), "celuilalt");});
test("celulară -> celul", function() {deepEqual( Stem("celulară"), "celul");});
test("celule -> celul", function() {deepEqual( Stem("celule"), "celul");});
test("celulele -> celul", function() {deepEqual( Stem("celulele"), "celul");});
test("central -> central", function() {deepEqual( Stem("central"), "central");});
test("centrala -> central", function() {deepEqual( Stem("centrala"), "central");});
test("centrală -> central", function() {deepEqual( Stem("centrală"), "central");});
test("centrale -> central", function() {deepEqual( Stem("centrale"), "central");});
test("centralei -> centrale", function() {deepEqual( Stem("centralei"), "centrale");});
test("centru -> centru", function() {deepEqual( Stem("centru"), "centru");});
test("centrul -> centr", function() {deepEqual( Stem("centrul"), "centr");});
test("cenuşă -> cenuş", function() {deepEqual( Stem("cenuşă"), "cenuş");});
test("cenuşie -> cenuş", function() {deepEqual( Stem("cenuşie"), "cenuş");});
test("cenuşii -> cenuş", function() {deepEqual( Stem("cenuşii"), "cenuş");});
test("cenuşiu -> cenuşiu", function() {deepEqual( Stem("cenuşiu"), "cenuşiu");});
test("cenzură -> cenz", function() {deepEqual( Stem("cenzură"), "cenz");});
test("cer -> cer", function() {deepEqual( Stem("cer"), "cer");});
test("cerând -> cerând", function() {deepEqual( Stem("cerând"), "cerând");});
test("cerându -> cerându", function() {deepEqual( Stem("cerându"), "cerându");});
test("cerbii -> cerb", function() {deepEqual( Stem("cerbii"), "cerb");});
test("cerc -> cerc", function() {deepEqual( Stem("cerc"), "cerc");});
test("cercetare -> cercet", function() {deepEqual( Stem("cercetare"), "cercet");});
test("cercetarea -> cercet", function() {deepEqual( Stem("cercetarea"), "cercet");});
test("cercetat -> cercet", function() {deepEqual( Stem("cercetat"), "cercet");});
test("cercetată -> cercet", function() {deepEqual( Stem("cercetată"), "cercet");});
test("cercetate -> cercet", function() {deepEqual( Stem("cercetate"), "cercet");});
test("cercetându -> cercet", function() {deepEqual( Stem("cercetându"), "cercet");});
test("cercetăm -> cercet", function() {deepEqual( Stem("cercetăm"), "cercet");});
test("cercetări -> cercetăr", function() {deepEqual( Stem("cercetări"), "cercetăr");});
test("cercetările -> cercetăr", function() {deepEqual( Stem("cercetările"), "cercetăr");});
test("cercetărilor -> cercetăr", function() {deepEqual( Stem("cercetărilor"), "cercetăr");});
test("cercetător -> cercet", function() {deepEqual( Stem("cercetător"), "cercet");});
test("cercetători -> cercet", function() {deepEqual( Stem("cercetători"), "cercet");});
test("cercetătorilor -> cercet", function() {deepEqual( Stem("cercetătorilor"), "cercet");});
test("cercetătorului -> cercet", function() {deepEqual( Stem("cercetătorului"), "cercet");});
test("cercetează -> cercet", function() {deepEqual( Stem("cercetează"), "cercet");});
test("cercetez -> cercet", function() {deepEqual( Stem("cercetez"), "cercet");});
test("cerceteze -> cercet", function() {deepEqual( Stem("cerceteze"), "cercet");});
test("cercetezi -> cercet", function() {deepEqual( Stem("cercetezi"), "cercet");});
test("cercul -> cerc", function() {deepEqual( Stem("cercul"), "cerc");});
test("cercului -> cerc", function() {deepEqual( Stem("cercului"), "cerc");});
test("cercuri -> cercur", function() {deepEqual( Stem("cercuri"), "cercur");});
test("cercurile -> cercur", function() {deepEqual( Stem("cercurile"), "cercur");});
test("cerdac -> cerdac", function() {deepEqual( Stem("cerdac"), "cerdac");});
test("cerdacul -> cerdac", function() {deepEqual( Stem("cerdacul"), "cerdac");});
test("cere -> cer", function() {deepEqual( Stem("cere"), "cer");});
test("cerea -> cer", function() {deepEqual( Stem("cerea"), "cer");});
test("ceream -> ceream", function() {deepEqual( Stem("ceream"), "ceream");});
test("cerească -> cereasc", function() {deepEqual( Stem("cerească"), "cereasc");});
test("cereau -> cereau", function() {deepEqual( Stem("cereau"), "cereau");});
test("cerebrală -> cerebral", function() {deepEqual( Stem("cerebrală"), "cerebral");});
test("cererea -> cerer", function() {deepEqual( Stem("cererea"), "cerer");});
test("cererile -> cerer", function() {deepEqual( Stem("cererile"), "cerer");});
test("ceri -> cer", function() {deepEqual( Stem("ceri"), "cer");});
test("cerinţele -> cerinţ", function() {deepEqual( Stem("cerinţele"), "cerinţ");});
test("cerneală -> cerneal", function() {deepEqual( Stem("cerneală"), "cerneal");});
test("cernii -> cern", function() {deepEqual( Stem("cernii"), "cern");});
test("cerşetori -> cerşetor", function() {deepEqual( Stem("cerşetori"), "cerşetor");});
test("cert -> cert", function() {deepEqual( Stem("cert"), "cert");});
test("certa -> cert", function() {deepEqual( Stem("certa"), "cert");});
test("certase -> cert", function() {deepEqual( Stem("certase"), "cert");});
test("certat -> certat", function() {deepEqual( Stem("certat"), "certat");});
test("certată -> certat", function() {deepEqual( Stem("certată"), "certat");});
test("certaţi -> cert", function() {deepEqual( Stem("certaţi"), "cert");});
test("certându -> cert", function() {deepEqual( Stem("certându"), "cert");});
test("certă -> cert", function() {deepEqual( Stem("certă"), "cert");});
test("certitudine -> certitudin", function() {deepEqual( Stem("certitudine"), "certitudin");});
test("certitudinea -> certitudin", function() {deepEqual( Stem("certitudinea"), "certitudin");});
test("certitudinii -> certitudin", function() {deepEqual( Stem("certitudinii"), "certitudin");});
test("certuri -> certur", function() {deepEqual( Stem("certuri"), "certur");});
test("certurile -> certur", function() {deepEqual( Stem("certurile"), "certur");});
test("cerţi -> cerţ", function() {deepEqual( Stem("cerţi"), "cerţ");});
test("cerul -> cer", function() {deepEqual( Stem("cerul"), "cer");});
test("cerului -> cer", function() {deepEqual( Stem("cerului"), "cer");});
test("ceruse -> cerus", function() {deepEqual( Stem("ceruse"), "cerus");});
test("cerusem -> cerusem", function() {deepEqual( Stem("cerusem"), "cerusem");});
test("cerut -> cerut", function() {deepEqual( Stem("cerut"), "cerut");});
test("cerută -> cerut", function() {deepEqual( Stem("cerută"), "cerut");});
test("cerute -> cerut", function() {deepEqual( Stem("cerute"), "cerut");});
test("ceruţi -> ceruţ", function() {deepEqual( Stem("ceruţi"), "ceruţ");});
test("cestiune -> cestiun", function() {deepEqual( Stem("cestiune"), "cestiun");});
test("cestiunea -> cestiun", function() {deepEqual( Stem("cestiunea"), "cestiun");});
test("cestiuni -> cestiun", function() {deepEqual( Stem("cestiuni"), "cestiun");});
test("cestiunii -> cestiun", function() {deepEqual( Stem("cestiunii"), "cestiun");});
test("cestiunile -> cestiun", function() {deepEqual( Stem("cestiunile"), "cestiun");});
test("cetate -> cetat", function() {deepEqual( Stem("cetate"), "cetat");});
test("cetatea -> cetat", function() {deepEqual( Stem("cetatea"), "cetat");});
test("cetăţeni -> cetăţen", function() {deepEqual( Stem("cetăţeni"), "cetăţen");});
test("cetăţenii -> cetăţen", function() {deepEqual( Stem("cetăţenii"), "cetăţen");});
test("cetăţenilor -> cetăţen", function() {deepEqual( Stem("cetăţenilor"), "cetăţen");});
test("cetăţi -> cetăţ", function() {deepEqual( Stem("cetăţi"), "cetăţ");});
test("cetăţii -> cetăţ", function() {deepEqual( Stem("cetăţii"), "cetăţ");});
test("ceteam -> ceteam", function() {deepEqual( Stem("ceteam"), "ceteam");});
test("cetească -> ceteasc", function() {deepEqual( Stem("cetească"), "ceteasc");});
test("ceteau -> ceteau", function() {deepEqual( Stem("ceteau"), "ceteau");});
test("ceteraş -> ceteraş", function() {deepEqual( Stem("ceteraş"), "ceteraş");});
test("ceteşte -> ceteşt", function() {deepEqual( Stem("ceteşte"), "ceteşt");});
test("cetirea -> cetir", function() {deepEqual( Stem("cetirea"), "cetir");});
test("cetise -> cetis", function() {deepEqual( Stem("cetise"), "cetis");});
test("cetit -> cetit", function() {deepEqual( Stem("cetit"), "cetit");});
test("cetitor -> cetit", function() {deepEqual( Stem("cetitor"), "cetit");});
test("cetitori -> cetit", function() {deepEqual( Stem("cetitori"), "cetit");});
test("cetitorii -> cetit", function() {deepEqual( Stem("cetitorii"), "cetit");});
test("cetitorilor -> cetit", function() {deepEqual( Stem("cetitorilor"), "cetit");});
test("cetitorul -> cetit", function() {deepEqual( Stem("cetitorul"), "cetit");});
test("cetitorule -> cetitorul", function() {deepEqual( Stem("cetitorule"), "cetitorul");});
test("cetitorului -> cetit", function() {deepEqual( Stem("cetitorului"), "cetit");});
test("cetitul -> cetit", function() {deepEqual( Stem("cetitul"), "cetit");});
test("cetitului -> cetit", function() {deepEqual( Stem("cetitului"), "cetit");});
test("ceva -> cev", function() {deepEqual( Stem("ceva"), "cev");});
test("cezar -> cezar", function() {deepEqual( Stem("cezar"), "cezar");});
test("charles -> charles", function() {deepEqual( Stem("charles"), "charles");});
test("cheag -> cheag", function() {deepEqual( Stem("cheag"), "cheag");});
test("cheală -> cheal", function() {deepEqual( Stem("cheală"), "cheal");});
test("cheamă -> cheam", function() {deepEqual( Stem("cheamă"), "cheam");});
test("chef -> chef", function() {deepEqual( Stem("chef"), "chef");});
test("cheferistă -> cheferist", function() {deepEqual( Stem("cheferistă"), "cheferist");});
test("cheflii -> chefl", function() {deepEqual( Stem("cheflii"), "chefl");});
test("chefliilor -> chefl", function() {deepEqual( Stem("chefliilor"), "chefl");});
test("chefliu -> chefliu", function() {deepEqual( Stem("chefliu"), "chefliu");});
test("cheful -> chef", function() {deepEqual( Stem("cheful"), "chef");});
test("chefului -> chef", function() {deepEqual( Stem("chefului"), "chef");});
test("chefurile -> chefur", function() {deepEqual( Stem("chefurile"), "chefur");});
test("chei -> che", function() {deepEqual( Stem("chei"), "che");});
test("cheia -> chei", function() {deepEqual( Stem("cheia"), "chei");});
test("cheile -> cheil", function() {deepEqual( Stem("cheile"), "cheil");});
test("chelie -> chel", function() {deepEqual( Stem("chelie"), "chel");});
test("chelner -> chelner", function() {deepEqual( Stem("chelner"), "chelner");});
test("chelneri -> chelner", function() {deepEqual( Stem("chelneri"), "chelner");});
test("chelnerilor -> chelner", function() {deepEqual( Stem("chelnerilor"), "chelner");});
test("chelnerul -> chelner", function() {deepEqual( Stem("chelnerul"), "chelner");});
test("cheltui -> chelt", function() {deepEqual( Stem("cheltui"), "chelt");});
test("cheltuia -> cheltui", function() {deepEqual( Stem("cheltuia"), "cheltui");});
test("cheltuiala -> cheltuial", function() {deepEqual( Stem("cheltuiala"), "cheltuial");});
test("cheltuiască -> cheltuiasc", function() {deepEqual( Stem("cheltuiască"), "cheltuiasc");});
test("cheltuielile -> cheltuiel", function() {deepEqual( Stem("cheltuielile"), "cheltuiel");});
test("cheltuielilor -> cheltuiel", function() {deepEqual( Stem("cheltuielilor"), "cheltuiel");});
test("chem -> chem", function() {deepEqual( Stem("chem"), "chem");});
test("chema -> chem", function() {deepEqual( Stem("chema"), "chem");});
test("chemare -> chem", function() {deepEqual( Stem("chemare"), "chem");});
test("chemarea -> chem", function() {deepEqual( Stem("chemarea"), "chem");});
test("chemase -> chem", function() {deepEqual( Stem("chemase"), "chem");});
test("chemat -> chemat", function() {deepEqual( Stem("chemat"), "chemat");});
test("chemată -> chemat", function() {deepEqual( Stem("chemată"), "chemat");});
test("chemate -> chemat", function() {deepEqual( Stem("chemate"), "chemat");});
test("chemaţi -> chem", function() {deepEqual( Stem("chemaţi"), "chem");});
test("chemau -> chem", function() {deepEqual( Stem("chemau"), "chem");});
test("chemând -> chem", function() {deepEqual( Stem("chemând"), "chem");});
test("chemă -> chem", function() {deepEqual( Stem("chemă"), "chem");});
test("cheme -> chem", function() {deepEqual( Stem("cheme"), "chem");});
test("chemin -> chemin", function() {deepEqual( Stem("chemin"), "chemin");});
test("chesoane -> chesoan", function() {deepEqual( Stem("chesoane"), "chesoan");});
test("chesoanele -> chesoan", function() {deepEqual( Stem("chesoanele"), "chesoan");});
test("cheson -> cheson", function() {deepEqual( Stem("cheson"), "cheson");});
test("chestia -> chest", function() {deepEqual( Stem("chestia"), "chest");});
test("chestie -> chest", function() {deepEqual( Stem("chestie"), "chest");});
test("chestii -> chest", function() {deepEqual( Stem("chestii"), "chest");});
test("chestiile -> chest", function() {deepEqual( Stem("chestiile"), "chest");});
test("chestiune -> chestiun", function() {deepEqual( Stem("chestiune"), "chestiun");});
test("chestiunea -> chestiun", function() {deepEqual( Stem("chestiunea"), "chestiun");});
test("chestiuni -> chestiun", function() {deepEqual( Stem("chestiuni"), "chestiun");});
test("chestiunii -> chestiun", function() {deepEqual( Stem("chestiunii"), "chestiun");});
test("chiar -> chiar", function() {deepEqual( Stem("chiar"), "chiar");});
test("chibiţ -> chibiţ", function() {deepEqual( Stem("chibiţ"), "chibiţ");});
test("chibrit -> chibrit", function() {deepEqual( Stem("chibrit"), "chibrit");});
test("chibritul -> chibrit", function() {deepEqual( Stem("chibritul"), "chibrit");});
test("chibritului -> chibrit", function() {deepEqual( Stem("chibritului"), "chibrit");});
test("chibzuială -> chibzuial", function() {deepEqual( Stem("chibzuială"), "chibzuial");});
test("chibzuinţă -> chibzuinţ", function() {deepEqual( Stem("chibzuinţă"), "chibzuinţ");});
test("chica -> chic", function() {deepEqual( Stem("chica"), "chic");});
test("chiftele -> chift", function() {deepEqual( Stem("chiftele"), "chift");});
test("chifteluţe -> chifteluţ", function() {deepEqual( Stem("chifteluţe"), "chifteluţ");});
test("chiftesc -> chift", function() {deepEqual( Stem("chiftesc"), "chift");});
test("chihlimbarului -> chihlimbar", function() {deepEqual( Stem("chihlimbarului"), "chihlimbar");});
test("chilă -> chil", function() {deepEqual( Stem("chilă"), "chil");});
test("chile -> chil", function() {deepEqual( Stem("chile"), "chil");});
test("chilia -> chil", function() {deepEqual( Stem("chilia"), "chil");});
test("chilioară -> chilioar", function() {deepEqual( Stem("chilioară"), "chilioar");});
test("chilipir -> chilipir", function() {deepEqual( Stem("chilipir"), "chilipir");});
test("chiloţi -> chiloţ", function() {deepEqual( Stem("chiloţi"), "chiloţ");});
test("chimia -> chim", function() {deepEqual( Stem("chimia"), "chim");});
test("chimic -> chimic", function() {deepEqual( Stem("chimic"), "chimic");});
test("chimicală -> chimic", function() {deepEqual( Stem("chimicală"), "chimic");});
test("chimică -> chimic", function() {deepEqual( Stem("chimică"), "chimic");});
test("chimice -> chimic", function() {deepEqual( Stem("chimice"), "chimic");});
test("chimie -> chim", function() {deepEqual( Stem("chimie"), "chim");});
test("chimiştii -> chimişt", function() {deepEqual( Stem("chimiştii"), "chimişt");});
test("chin -> chin", function() {deepEqual( Stem("chin"), "chin");});
test("china -> chin", function() {deepEqual( Stem("china"), "chin");});
test("chinei -> chine", function() {deepEqual( Stem("chinei"), "chine");});
test("chinejii -> chinej", function() {deepEqual( Stem("chinejii"), "chinej");});
test("chinez -> chin", function() {deepEqual( Stem("chinez"), "chin");});
test("chineză -> chinez", function() {deepEqual( Stem("chineză"), "chinez");});
test("chinezească -> chinez", function() {deepEqual( Stem("chinezească"), "chinez");});
test("chinezesc -> chinez", function() {deepEqual( Stem("chinezesc"), "chinez");});
test("chinezeşte -> chinez", function() {deepEqual( Stem("chinezeşte"), "chinez");});
test("chinezoaică -> chinezo", function() {deepEqual( Stem("chinezoaică"), "chinezo");});
test("chintesenţă -> chintesenţ", function() {deepEqual( Stem("chintesenţă"), "chintesenţ");});
test("chintesenţial -> chintesenţial", function() {deepEqual( Stem("chintesenţial"), "chintesenţial");});
test("chinui -> chin", function() {deepEqual( Stem("chinui"), "chin");});
test("chinuială -> chinuial", function() {deepEqual( Stem("chinuială"), "chinuial");});
test("chinuiam -> chinui", function() {deepEqual( Stem("chinuiam"), "chinui");});
test("chinuiască -> chinuiasc", function() {deepEqual( Stem("chinuiască"), "chinuiasc");});
test("chinuie -> chinui", function() {deepEqual( Stem("chinuie"), "chinui");});
test("chinuiesc -> chinui", function() {deepEqual( Stem("chinuiesc"), "chinui");});
test("chinuieşte -> chinui", function() {deepEqual( Stem("chinuieşte"), "chinui");});
test("chinuim -> chinu", function() {deepEqual( Stem("chinuim"), "chinu");});
test("chinuind -> chinu", function() {deepEqual( Stem("chinuind"), "chinu");});
test("chinuindu -> chinu", function() {deepEqual( Stem("chinuindu"), "chinu");});
test("chinuit -> chinuit", function() {deepEqual( Stem("chinuit"), "chinuit");});
test("chinuită -> chinuit", function() {deepEqual( Stem("chinuită"), "chinuit");});
test("chinuitoare -> chinuit", function() {deepEqual( Stem("chinuitoare"), "chinuit");});
test("chinuitoarei -> chinuitoare", function() {deepEqual( Stem("chinuitoarei"), "chinuitoare");});
test("chinuitor -> chinuit", function() {deepEqual( Stem("chinuitor"), "chinuit");});
test("chinuiţi -> chinu", function() {deepEqual( Stem("chinuiţi"), "chinu");});
test("chinul -> chin", function() {deepEqual( Stem("chinul"), "chin");});
test("chinuri -> chinur", function() {deepEqual( Stem("chinuri"), "chinur");});
test("chinurile -> chinur", function() {deepEqual( Stem("chinurile"), "chinur");});
test("chioară -> chioar", function() {deepEqual( Stem("chioară"), "chioar");});
test("chioare -> chioar", function() {deepEqual( Stem("chioare"), "chioar");});
test("chiolhan -> chiolhan", function() {deepEqual( Stem("chiolhan"), "chiolhan");});
test("chior -> chior", function() {deepEqual( Stem("chior"), "chior");});
test("chiorîş -> chiorîş", function() {deepEqual( Stem("chiorîş"), "chiorîş");});
test("chioşc -> chioşc", function() {deepEqual( Stem("chioşc"), "chioşc");});
test("chioşcul -> chioşc", function() {deepEqual( Stem("chioşcul"), "chioşc");});
test("chioşcului -> chioşc", function() {deepEqual( Stem("chioşcului"), "chioşc");});
test("chioşcuri -> chioşcur", function() {deepEqual( Stem("chioşcuri"), "chioşcur");});
test("chiot -> chiot", function() {deepEqual( Stem("chiot"), "chiot");});
test("chip -> chip", function() {deepEqual( Stem("chip"), "chip");});
test("chipeş -> chipeş", function() {deepEqual( Stem("chipeş"), "chipeş");});
test("chipiu -> chipiu", function() {deepEqual( Stem("chipiu"), "chipiu");});
test("chipiul -> chip", function() {deepEqual( Stem("chipiul"), "chip");});
test("chipul -> chip", function() {deepEqual( Stem("chipul"), "chip");});
test("chipuri -> chipur", function() {deepEqual( Stem("chipuri"), "chipur");});
test("chipurile -> chipur", function() {deepEqual( Stem("chipurile"), "chipur");});
test("chircesc -> chirc", function() {deepEqual( Stem("chircesc"), "chirc");});
test("chiria -> chir", function() {deepEqual( Stem("chiria"), "chir");});
test("chiriaş -> chiriaş", function() {deepEqual( Stem("chiriaş"), "chiriaş");});
test("chiriaşi -> chiriaş", function() {deepEqual( Stem("chiriaşi"), "chiriaş");});
test("chiriaşilor -> chiriaş", function() {deepEqual( Stem("chiriaşilor"), "chiriaş");});
test("chiriile -> chir", function() {deepEqual( Stem("chiriile"), "chir");});
test("chiromanţi -> chiromanţ", function() {deepEqual( Stem("chiromanţi"), "chiromanţ");});
test("chiromanţie -> chiromanţ", function() {deepEqual( Stem("chiromanţie"), "chiromanţ");});
test("chirpici -> chirpic", function() {deepEqual( Stem("chirpici"), "chirpic");});
test("chirurgi -> chirurg", function() {deepEqual( Stem("chirurgi"), "chirurg");});
test("chirurgicală -> chirurg", function() {deepEqual( Stem("chirurgicală"), "chirurg");});
test("chirurgicale -> chirurg", function() {deepEqual( Stem("chirurgicale"), "chirurg");});
test("chirurgie -> chirurg", function() {deepEqual( Stem("chirurgie"), "chirurg");});
test("chirurgul -> chirurg", function() {deepEqual( Stem("chirurgul"), "chirurg");});
test("chiseliţă -> chiseliţ", function() {deepEqual( Stem("chiseliţă"), "chiseliţ");});
test("chişinău -> chişinău", function() {deepEqual( Stem("chişinău"), "chişinău");});
test("chiştoc -> chiştoc", function() {deepEqual( Stem("chiştoc"), "chiştoc");});
test("chit -> chit", function() {deepEqual( Stem("chit"), "chit");});
test("chitară -> chit", function() {deepEqual( Stem("chitară"), "chit");});
test("chiţibuşare -> chiţibuş", function() {deepEqual( Stem("chiţibuşare"), "chiţibuş");});
test("chiu -> chiu", function() {deepEqual( Stem("chiu"), "chiu");});
test("chiuie -> chiu", function() {deepEqual( Stem("chiuie"), "chiu");});
test("chivere -> chiv", function() {deepEqual( Stem("chivere"), "chiv");});
test("chuliatikov -> chuliatikov", function() {deepEqual( Stem("chuliatikov"), "chuliatikov");});
test("chvolson -> chvolson", function() {deepEqual( Stem("chvolson"), "chvolson");});
test("ci -> ci", function() {deepEqual( Stem("ci"), "ci");});
test("cicatrice -> cicatr", function() {deepEqual( Stem("cicatrice"), "cicatr");});
test("cicatricea -> cicatr", function() {deepEqual( Stem("cicatricea"), "cicatr");});
test("cicatrizează -> cicatriz", function() {deepEqual( Stem("cicatrizează"), "cicatriz");});
test("cică -> cic", function() {deepEqual( Stem("cică"), "cic");});
test("cicăleală -> cicăleal", function() {deepEqual( Stem("cicăleală"), "cicăleal");});
test("ciclu -> ciclu", function() {deepEqual( Stem("ciclu"), "ciclu");});
test("cifra -> cifr", function() {deepEqual( Stem("cifra"), "cifr");});
test("cifră -> cifr", function() {deepEqual( Stem("cifră"), "cifr");});
test("cifre -> cifr", function() {deepEqual( Stem("cifre"), "cifr");});
test("cifrează -> cifr", function() {deepEqual( Stem("cifrează"), "cifr");});
test("cifrei -> cifre", function() {deepEqual( Stem("cifrei"), "cifre");});
test("cifrelor -> cifr", function() {deepEqual( Stem("cifrelor"), "cifr");});
test("cifru -> cifru", function() {deepEqual( Stem("cifru"), "cifru");});
test("cifrul -> cifr", function() {deepEqual( Stem("cifrul"), "cifr");});
test("cifruri -> cifrur", function() {deepEqual( Stem("cifruri"), "cifrur");});
test("cilindri -> cilindr", function() {deepEqual( Stem("cilindri"), "cilindr");});
test("cilindrice -> cilindr", function() {deepEqual( Stem("cilindrice"), "cilindr");});
test("cilindru -> cilindru", function() {deepEqual( Stem("cilindru"), "cilindru");});
test("ciment -> ciment", function() {deepEqual( Stem("ciment"), "ciment");});
test("cimentate -> ciment", function() {deepEqual( Stem("cimentate"), "ciment");});
test("cimitir -> cimitir", function() {deepEqual( Stem("cimitir"), "cimitir");});
test("cimitire -> cimit", function() {deepEqual( Stem("cimitire"), "cimit");});
test("cimitirelor -> cimit", function() {deepEqual( Stem("cimitirelor"), "cimit");});
test("cimitirul -> cimitir", function() {deepEqual( Stem("cimitirul"), "cimitir");});
test("cina -> cin", function() {deepEqual( Stem("cina"), "cin");});
test("cină -> cin", function() {deepEqual( Stem("cină"), "cin");});
test("cincea -> cinc", function() {deepEqual( Stem("cincea"), "cinc");});
test("cinci -> cinc", function() {deepEqual( Stem("cinci"), "cinc");});
test("cincilea -> cincil", function() {deepEqual( Stem("cincilea"), "cincil");});
test("cincinal -> cincinal", function() {deepEqual( Stem("cincinal"), "cincinal");});
test("cincisprezece -> cincisprezec", function() {deepEqual( Stem("cincisprezece"), "cincisprezec");});
test("cincisprezecelea -> cincisprezecel", function() {deepEqual( Stem("cincisprezecelea"), "cincisprezecel");});
test("cincizeci -> cincizec", function() {deepEqual( Stem("cincizeci"), "cincizec");});
test("cine -> cin", function() {deepEqual( Stem("cine"), "cin");});
test("cinele -> cin", function() {deepEqual( Stem("cinele"), "cin");});
test("cinetică -> cinet", function() {deepEqual( Stem("cinetică"), "cinet");});
test("cineva -> cinev", function() {deepEqual( Stem("cineva"), "cinev");});
test("cinste -> cinst", function() {deepEqual( Stem("cinste"), "cinst");});
test("cinstea -> cinst", function() {deepEqual( Stem("cinstea"), "cinst");});
test("cinstit -> cinstit", function() {deepEqual( Stem("cinstit"), "cinstit");});
test("cinstite -> cinstit", function() {deepEqual( Stem("cinstite"), "cinstit");});
test("cinstiţi -> cinst", function() {deepEqual( Stem("cinstiţi"), "cinst");});
test("cinzano -> cinzano", function() {deepEqual( Stem("cinzano"), "cinzano");});
test("cioban -> cioban", function() {deepEqual( Stem("cioban"), "cioban");});
test("ciobani -> cioban", function() {deepEqual( Stem("ciobani"), "cioban");});
test("ciobanii -> cioban", function() {deepEqual( Stem("ciobanii"), "cioban");});
test("cioburi -> ciobur", function() {deepEqual( Stem("cioburi"), "ciobur");});
test("cioc -> cioc", function() {deepEqual( Stem("cioc"), "cioc");});
test("ciocan -> ciocan", function() {deepEqual( Stem("ciocan"), "ciocan");});
test("ciocane -> ciocan", function() {deepEqual( Stem("ciocane"), "ciocan");});
test("ciocanul -> ciocan", function() {deepEqual( Stem("ciocanul"), "ciocan");});
test("ciocneau -> ciocn", function() {deepEqual( Stem("ciocneau"), "ciocn");});
test("ciocnesc -> ciocn", function() {deepEqual( Stem("ciocnesc"), "ciocn");});
test("ciocni -> ciocn", function() {deepEqual( Stem("ciocni"), "ciocn");});
test("ciocnim -> ciocn", function() {deepEqual( Stem("ciocnim"), "ciocn");});
test("ciocnind -> ciocn", function() {deepEqual( Stem("ciocnind"), "ciocn");});
test("ciocnire -> ciocn", function() {deepEqual( Stem("ciocnire"), "ciocn");});
test("ciocniri -> ciocnir", function() {deepEqual( Stem("ciocniri"), "ciocnir");});
test("ciocnirile -> ciocnir", function() {deepEqual( Stem("ciocnirile"), "ciocnir");});
test("ciocnit -> ciocnit", function() {deepEqual( Stem("ciocnit"), "ciocnit");});
test("ciocnite -> ciocnit", function() {deepEqual( Stem("ciocnite"), "ciocnit");});
test("ciocolată -> ciocol", function() {deepEqual( Stem("ciocolată"), "ciocol");});
test("ciomege -> ciomeg", function() {deepEqual( Stem("ciomege"), "ciomeg");});
test("ciorapi -> ciorap", function() {deepEqual( Stem("ciorapi"), "ciorap");});
test("ciorapii -> ciorap", function() {deepEqual( Stem("ciorapii"), "ciorap");});
test("ciorapul -> ciorap", function() {deepEqual( Stem("ciorapul"), "ciorap");});
test("ciorbagiu -> ciorbagiu", function() {deepEqual( Stem("ciorbagiu"), "ciorbagiu");});
test("ciornoiesotnik -> ciornoiesotnik", function() {deepEqual( Stem("ciornoiesotnik"), "ciornoiesotnik");});
test("circ -> circ", function() {deepEqual( Stem("circ"), "circ");});
test("circomflexe -> circomflex", function() {deepEqual( Stem("circomflexe"), "circomflex");});
test("circuit -> circuit", function() {deepEqual( Stem("circuit"), "circuit");});
test("circuitul -> circuit", function() {deepEqual( Stem("circuitul"), "circuit");});
test("circulare -> circul", function() {deepEqual( Stem("circulare"), "circul");});
test("circulaţia -> circul", function() {deepEqual( Stem("circulaţia"), "circul");});
test("circulaţie -> circul", function() {deepEqual( Stem("circulaţie"), "circul");});
test("circulau -> circul", function() {deepEqual( Stem("circulau"), "circul");});
test("circulă -> circul", function() {deepEqual( Stem("circulă"), "circul");});
test("cireş -> cireş", function() {deepEqual( Stem("cireş"), "cireş");});
test("ciripeşte -> cirip", function() {deepEqual( Stem("ciripeşte"), "cirip");});
test("cita -> cit", function() {deepEqual( Stem("cita"), "cit");});
test("citea -> cit", function() {deepEqual( Stem("citea"), "cit");});
test("citeam -> citeam", function() {deepEqual( Stem("citeam"), "citeam");});
test("citească -> citeasc", function() {deepEqual( Stem("citească"), "citeasc");});
test("citeau -> citeau", function() {deepEqual( Stem("citeau"), "citeau");});
test("citează -> citeaz", function() {deepEqual( Stem("citează"), "citeaz");});
test("citesc -> citesc", function() {deepEqual( Stem("citesc"), "citesc");});
test("citeşte -> citeşt", function() {deepEqual( Stem("citeşte"), "citeşt");});
test("citez -> citez", function() {deepEqual( Stem("citez"), "citez");});
test("citi -> cit", function() {deepEqual( Stem("citi"), "cit");});
test("citim -> cit", function() {deepEqual( Stem("citim"), "cit");});
test("citind -> citind", function() {deepEqual( Stem("citind"), "citind");});
test("citire -> citir", function() {deepEqual( Stem("citire"), "citir");});
test("citit -> citit", function() {deepEqual( Stem("citit"), "citit");});
test("citite -> citit", function() {deepEqual( Stem("citite"), "citit");});
test("cititori -> citit", function() {deepEqual( Stem("cititori"), "citit");});
test("cititorii -> citit", function() {deepEqual( Stem("cititorii"), "citit");});
test("cititorilor -> citit", function() {deepEqual( Stem("cititorilor"), "citit");});
test("cititului -> citit", function() {deepEqual( Stem("cititului"), "citit");});
test("citiţi -> cit", function() {deepEqual( Stem("citiţi"), "cit");});
test("ciucalată -> ciucal", function() {deepEqual( Stem("ciucalată"), "ciucal");});
test("ciudat -> ciudat", function() {deepEqual( Stem("ciudat"), "ciudat");});
test("ciudată -> ciudat", function() {deepEqual( Stem("ciudată"), "ciudat");});
test("ciudate -> ciudat", function() {deepEqual( Stem("ciudate"), "ciudat");});
test("ciudă -> ciud", function() {deepEqual( Stem("ciudă"), "ciud");});
test("ciudăţenie -> ciudăţen", function() {deepEqual( Stem("ciudăţenie"), "ciudăţen");});
test("ciudăţeniile -> ciudăţen", function() {deepEqual( Stem("ciudăţeniile"), "ciudăţen");});
test("ciulama -> ciulam", function() {deepEqual( Stem("ciulama"), "ciulam");});
test("ciulniţa -> ciulniţ", function() {deepEqual( Stem("ciulniţa"), "ciulniţ");});
test("ciuperci -> ciuperc", function() {deepEqual( Stem("ciuperci"), "ciuperc");});
test("ciupeşte -> ciup", function() {deepEqual( Stem("ciupeşte"), "ciup");});
test("ciupită -> ciupit", function() {deepEqual( Stem("ciupită"), "ciupit");});
test("civil -> civil", function() {deepEqual( Stem("civil"), "civil");});
test("civile -> civ", function() {deepEqual( Stem("civile"), "civ");});
test("civilizat -> civiliz", function() {deepEqual( Stem("civilizat"), "civiliz");});
test("civilizată -> civiliz", function() {deepEqual( Stem("civilizată"), "civiliz");});
test("civilizaţi -> civiliz", function() {deepEqual( Stem("civilizaţi"), "civiliz");});
test("civilizaţia -> civiliz", function() {deepEqual( Stem("civilizaţia"), "civiliz");});
test("civilizaţie -> civiliz", function() {deepEqual( Stem("civilizaţie"), "civiliz");});
test("civilizaţiei -> civiliz", function() {deepEqual( Stem("civilizaţiei"), "civiliz");});
test("civilizaţii -> civiliz", function() {deepEqual( Stem("civilizaţii"), "civiliz");});
test("civilizaţiile -> civiliz", function() {deepEqual( Stem("civilizaţiile"), "civiliz");});
test("cizelaţi -> cizel", function() {deepEqual( Stem("cizelaţi"), "cizel");});
test("cizmari -> cizmar", function() {deepEqual( Stem("cizmari"), "cizmar");});
test("cizmarul -> cizmar", function() {deepEqual( Stem("cizmarul"), "cizmar");});
test("cizme -> cizm", function() {deepEqual( Stem("cizme"), "cizm");});
test("cizmei -> cizme", function() {deepEqual( Stem("cizmei"), "cizme");});
test("cizmele -> cizm", function() {deepEqual( Stem("cizmele"), "cizm");});
test("cizmuliţele -> cizmuliţ", function() {deepEqual( Stem("cizmuliţele"), "cizmuliţ");});
test("cîine -> cîin", function() {deepEqual( Stem("cîine"), "cîin");});
test("cîini -> cîin", function() {deepEqual( Stem("cîini"), "cîin");});
test("cîmp -> cîmp", function() {deepEqual( Stem("cîmp"), "cîmp");});
test("cîmpenească -> cîmpen", function() {deepEqual( Stem("cîmpenească"), "cîmpen");});
test("cîmpi -> cîmp", function() {deepEqual( Stem("cîmpi"), "cîmp");});
test("cîmpoi -> cîmpo", function() {deepEqual( Stem("cîmpoi"), "cîmpo");});
test("cîmpuri -> cîmpur", function() {deepEqual( Stem("cîmpuri"), "cîmpur");});
test("cîteodată -> cîteod", function() {deepEqual( Stem("cîteodată"), "cîteod");});
test("clapă -> clap", function() {deepEqual( Stem("clapă"), "clap");});
test("clar -> clar", function() {deepEqual( Stem("clar"), "clar");});
test("clară -> clar", function() {deepEqual( Stem("clară"), "clar");});
test("clare -> clar", function() {deepEqual( Stem("clare"), "clar");});
test("clarificare -> clarific", function() {deepEqual( Stem("clarificare"), "clarific");});
test("clarificată -> clarific", function() {deepEqual( Stem("clarificată"), "clarific");});
test("clarifică -> clarif", function() {deepEqual( Stem("clarifică"), "clarif");});
test("clarifici -> clarif", function() {deepEqual( Stem("clarifici"), "clarif");});
test("claritate -> claritat", function() {deepEqual( Stem("claritate"), "claritat");});
test("claritatea -> claritat", function() {deepEqual( Stem("claritatea"), "claritat");});
test("clasa -> clas", function() {deepEqual( Stem("clasa"), "clas");});
test("clasă -> clas", function() {deepEqual( Stem("clasă"), "clas");});
test("clase -> cla", function() {deepEqual( Stem("clase"), "cla");});
test("clasei -> cla", function() {deepEqual( Stem("clasei"), "cla");});
test("clasele -> cla", function() {deepEqual( Stem("clasele"), "cla");});
test("claselor -> cla", function() {deepEqual( Stem("claselor"), "cla");});
test("clasic -> clasic", function() {deepEqual( Stem("clasic"), "clasic");});
test("clasica -> clasic", function() {deepEqual( Stem("clasica"), "clasic");});
test("clasică -> clasic", function() {deepEqual( Stem("clasică"), "clasic");});
test("clasice -> clasic", function() {deepEqual( Stem("clasice"), "clasic");});
test("clasici -> clasic", function() {deepEqual( Stem("clasici"), "clasic");});
test("clasicilor -> clasic", function() {deepEqual( Stem("clasicilor"), "clasic");});
test("clasicul -> clasic", function() {deepEqual( Stem("clasicul"), "clasic");});
test("clasificăm -> clasific", function() {deepEqual( Stem("clasificăm"), "clasific");});
test("clasificării -> clasificăr", function() {deepEqual( Stem("clasificării"), "clasificăr");});
test("clatin -> clatin", function() {deepEqual( Stem("clatin"), "clatin");});
test("clatină -> clatin", function() {deepEqual( Stem("clatină"), "clatin");});
test("clavir -> clavir", function() {deepEqual( Stem("clavir"), "clavir");});
test("claxonul -> claxon", function() {deepEqual( Stem("claxonul"), "claxon");});
test("clădeşte -> clăd", function() {deepEqual( Stem("clădeşte"), "clăd");});
test("clădirea -> clăd", function() {deepEqual( Stem("clădirea"), "clăd");});
test("clădiseră -> clăd", function() {deepEqual( Stem("clădiseră"), "clăd");});
test("clăi -> clă", function() {deepEqual( Stem("clăi"), "clă");});
test("clănţăne -> clănţăn", function() {deepEqual( Stem("clănţăne"), "clănţăn");});
test("clătina -> clătin", function() {deepEqual( Stem("clătina"), "clătin");});
test("clătinarea -> clătin", function() {deepEqual( Stem("clătinarea"), "clătin");});
test("clătinase -> clătin", function() {deepEqual( Stem("clătinase"), "clătin");});
test("clătinatul -> clătin", function() {deepEqual( Stem("clătinatul"), "clătin");});
test("clătinându -> clătin", function() {deepEqual( Stem("clătinându"), "clătin");});
test("clătite -> clătit", function() {deepEqual( Stem("clătite"), "clătit");});
test("clei -> cle", function() {deepEqual( Stem("clei"), "cle");});
test("cleios -> cleios", function() {deepEqual( Stem("cleios"), "cleios");});
test("clement -> clement", function() {deepEqual( Stem("clement"), "clement");});
test("clenciuri -> clenciur", function() {deepEqual( Stem("clenciuri"), "clenciur");});
test("cleştar -> cleştar", function() {deepEqual( Stem("cleştar"), "cleştar");});
test("clienteală -> clienteal", function() {deepEqual( Stem("clienteală"), "clienteal");});
test("clientul -> client", function() {deepEqual( Stem("clientul"), "client");});
test("clienţii -> clienţ", function() {deepEqual( Stem("clienţii"), "clienţ");});
test("clinchet -> clinchet", function() {deepEqual( Stem("clinchet"), "clinchet");});
test("clinice -> clinic", function() {deepEqual( Stem("clinice"), "clinic");});
test("clinuri -> clinur", function() {deepEqual( Stem("clinuri"), "clinur");});
test("clipa -> clip", function() {deepEqual( Stem("clipa"), "clip");});
test("clipă -> clip", function() {deepEqual( Stem("clipă"), "clip");});
test("clipe -> clip", function() {deepEqual( Stem("clipe"), "clip");});
test("clipei -> clipe", function() {deepEqual( Stem("clipei"), "clipe");});
test("clipele -> clip", function() {deepEqual( Stem("clipele"), "clip");});
test("clipelor -> clip", function() {deepEqual( Stem("clipelor"), "clip");});
test("clipită -> clipit", function() {deepEqual( Stem("clipită"), "clipit");});
test("clipocesc -> clipoc", function() {deepEqual( Stem("clipocesc"), "clipoc");});
test("clocesc -> cloc", function() {deepEqual( Stem("clocesc"), "cloc");});
test("clocite -> clocit", function() {deepEqual( Stem("clocite"), "clocit");});
test("clocotirea -> clocot", function() {deepEqual( Stem("clocotirea"), "clocot");});
test("clopote -> clopot", function() {deepEqual( Stem("clopote"), "clopot");});
test("clovnerie -> clovner", function() {deepEqual( Stem("clovnerie"), "clovner");});
test("club -> club", function() {deepEqual( Stem("club"), "club");});
test("clubului -> club", function() {deepEqual( Stem("clubului"), "club");});
test("cluj -> cluj", function() {deepEqual( Stem("cluj"), "cluj");});
test("coada -> coad", function() {deepEqual( Stem("coada"), "coad");});
test("coafat -> coafat", function() {deepEqual( Stem("coafat"), "coafat");});
test("coajă -> coaj", function() {deepEqual( Stem("coajă"), "coaj");});
test("coama -> coam", function() {deepEqual( Stem("coama"), "coam");});
test("coana -> coan", function() {deepEqual( Stem("coana"), "coan");});
test("coane -> coan", function() {deepEqual( Stem("coane"), "coan");});
test("coanei -> coane", function() {deepEqual( Stem("coanei"), "coane");});
test("coapsă -> coaps", function() {deepEqual( Stem("coapsă"), "coaps");});
test("coapse -> coap", function() {deepEqual( Stem("coapse"), "coap");});
test("coapsei -> coap", function() {deepEqual( Stem("coapsei"), "coap");});
test("coapsele -> coap", function() {deepEqual( Stem("coapsele"), "coap");});
test("coapselor -> coap", function() {deepEqual( Stem("coapselor"), "coap");});
test("coarnelor -> coarn", function() {deepEqual( Stem("coarnelor"), "coarn");});
test("coasei -> coa", function() {deepEqual( Stem("coasei"), "coa");});
test("coasta -> coast", function() {deepEqual( Stem("coasta"), "coast");});
test("coastă -> coast", function() {deepEqual( Stem("coastă"), "coast");});
test("coaste -> coast", function() {deepEqual( Stem("coaste"), "coast");});
test("coastele -> coast", function() {deepEqual( Stem("coastele"), "coast");});
test("coatele -> coat", function() {deepEqual( Stem("coatele"), "coat");});
test("coboară -> coboar", function() {deepEqual( Stem("coboară"), "coboar");});
test("coboare -> coboar", function() {deepEqual( Stem("coboare"), "coboar");});
test("cobor -> cobor", function() {deepEqual( Stem("cobor"), "cobor");});
test("coboram -> cobor", function() {deepEqual( Stem("coboram"), "cobor");});
test("coborau -> cobor", function() {deepEqual( Stem("coborau"), "cobor");});
test("coborâm -> cobor", function() {deepEqual( Stem("coborâm"), "cobor");});
test("coborând -> cobor", function() {deepEqual( Stem("coborând"), "cobor");});
test("coborâseră -> cobor", function() {deepEqual( Stem("coborâseră"), "cobor");});
test("coborât -> coborât", function() {deepEqual( Stem("coborât"), "coborât");});
test("coborâtă -> coborât", function() {deepEqual( Stem("coborâtă"), "coborât");});
test("coborâţi -> cobor", function() {deepEqual( Stem("coborâţi"), "cobor");});
test("coborî -> coborî", function() {deepEqual( Stem("coborî"), "coborî");});
test("cobra -> cobr", function() {deepEqual( Stem("cobra"), "cobr");});
test("cobzar -> cobzar", function() {deepEqual( Stem("cobzar"), "cobzar");});
test("cocenii -> cocen", function() {deepEqual( Stem("cocenii"), "cocen");});
test("cocenilor -> cocen", function() {deepEqual( Stem("cocenilor"), "cocen");});
test("cochetărie -> cochetăr", function() {deepEqual( Stem("cochetărie"), "cochetăr");});
test("cochetării -> cochetăr", function() {deepEqual( Stem("cochetării"), "cochetăr");});
test("cochetează -> cochet", function() {deepEqual( Stem("cochetează"), "cochet");});
test("cochetelor -> cochet", function() {deepEqual( Stem("cochetelor"), "cochet");});
test("coclauri -> coclaur", function() {deepEqual( Stem("coclauri"), "coclaur");});
test("coclită -> coclit", function() {deepEqual( Stem("coclită"), "coclit");});
test("coclite -> coclit", function() {deepEqual( Stem("coclite"), "coclit");});
test("cocoanele -> cocoan", function() {deepEqual( Stem("cocoanele"), "cocoan");});
test("cocoaşă -> cocoaş", function() {deepEqual( Stem("cocoaşă"), "cocoaş");});
test("cocoşată -> cocoş", function() {deepEqual( Stem("cocoşată"), "cocoş");});
test("cocoşaţi -> cocoş", function() {deepEqual( Stem("cocoşaţi"), "cocoş");});
test("cocotă -> cocot", function() {deepEqual( Stem("cocotă"), "cocot");});
test("cocote -> cocot", function() {deepEqual( Stem("cocote"), "cocot");});
test("codeală -> codeal", function() {deepEqual( Stem("codeală"), "codeal");});
test("codeşte -> codeşt", function() {deepEqual( Stem("codeşte"), "codeşt");});
test("codicil -> codicil", function() {deepEqual( Stem("codicil"), "codicil");});
test("codicilul -> codicil", function() {deepEqual( Stem("codicilul"), "codicil");});
test("codificată -> codific", function() {deepEqual( Stem("codificată"), "codific");});
test("codificăm -> codific", function() {deepEqual( Stem("codificăm"), "codific");});
test("codire -> codir", function() {deepEqual( Stem("codire"), "codir");});
test("codirector -> codirector", function() {deepEqual( Stem("codirector"), "codirector");});
test("codlea -> codl", function() {deepEqual( Stem("codlea"), "codl");});
test("codobature -> codobatur", function() {deepEqual( Stem("codobature"), "codobatur");});
test("codri -> codr", function() {deepEqual( Stem("codri"), "codr");});
test("coeficient -> coeficient", function() {deepEqual( Stem("coeficient"), "coeficient");});
test("coeficientul -> coeficient", function() {deepEqual( Stem("coeficientul"), "coeficient");});
test("coercitivă -> coercit", function() {deepEqual( Stem("coercitivă"), "coercit");});
test("coeur -> coeur", function() {deepEqual( Stem("coeur"), "coeur");});
test("coexistenţă -> coexistenţ", function() {deepEqual( Stem("coexistenţă"), "coexistenţ");});
test("cofetăriei -> cofetăr", function() {deepEqual( Stem("cofetăriei"), "cofetăr");});
test("cofetăriile -> cofetăr", function() {deepEqual( Stem("cofetăriile"), "cofetăr");});
test("cogito -> cogito", function() {deepEqual( Stem("cogito"), "cogito");});
test("cognoscibilitatea -> cognosc", function() {deepEqual( Stem("cognoscibilitatea"), "cognosc");});
test("cognoscientismul -> cognoscientist", function() {deepEqual( Stem("cognoscientismul"), "cognoscientist");});
test("cognoscientistă -> cognoscientist", function() {deepEqual( Stem("cognoscientistă"), "cognoscientist");});
test("cohalm -> cohalm", function() {deepEqual( Stem("cohalm"), "cohalm");});
test("coifurile -> coifur", function() {deepEqual( Stem("coifurile"), "coifur");});
test("coincide -> coincid", function() {deepEqual( Stem("coincide"), "coincid");});
test("coincidenţa -> coincidenţ", function() {deepEqual( Stem("coincidenţa"), "coincidenţ");});
test("coincidenţă -> coincidenţ", function() {deepEqual( Stem("coincidenţă"), "coincidenţ");});
test("coincidenţe -> coincidenţ", function() {deepEqual( Stem("coincidenţe"), "coincidenţ");});
test("cointreau -> cointr", function() {deepEqual( Stem("cointreau"), "cointr");});
test("cojită -> cojit", function() {deepEqual( Stem("cojită"), "cojit");});
test("cojiţi -> coj", function() {deepEqual( Stem("cojiţi"), "coj");});
test("colabora -> colabor", function() {deepEqual( Stem("colabora"), "colabor");});
test("colaborare -> colabor", function() {deepEqual( Stem("colaborare"), "colabor");});
test("colaborasem -> colabor", function() {deepEqual( Stem("colaborasem"), "colabor");});
test("colaborativ -> colabor", function() {deepEqual( Stem("colaborativ"), "colabor");});
test("colaborator -> colabor", function() {deepEqual( Stem("colaborator"), "colabor");});
test("colaboratori -> colabor", function() {deepEqual( Stem("colaboratori"), "colabor");});
test("colaboraţionism -> colaboraţionist", function() {deepEqual( Stem("colaboraţionism"), "colaboraţionist");});
test("colaboraţioniste -> colaboraţionist", function() {deepEqual( Stem("colaboraţioniste"), "colaboraţionist");});
test("colaboraţionişti -> colaboraţionist", function() {deepEqual( Stem("colaboraţionişti"), "colaboraţionist");});
test("colaborau -> colabor", function() {deepEqual( Stem("colaborau"), "colabor");});
test("colaborăm -> colabor", function() {deepEqual( Stem("colaborăm"), "colabor");});
test("colaborări -> colaborăr", function() {deepEqual( Stem("colaborări"), "colaborăr");});
test("colaborării -> colaborăr", function() {deepEqual( Stem("colaborării"), "colaborăr");});
test("colaborează -> colabor", function() {deepEqual( Stem("colaborează"), "colabor");});
test("colaborez -> colabor", function() {deepEqual( Stem("colaborez"), "colabor");});
test("colaborînd -> colaborînd", function() {deepEqual( Stem("colaborînd"), "colaborînd");});
test("colac -> colac", function() {deepEqual( Stem("colac"), "colac");});
test("colaci -> colac", function() {deepEqual( Stem("colaci"), "colac");});
test("colacii -> colac", function() {deepEqual( Stem("colacii"), "colac");});
test("colaps -> colaps", function() {deepEqual( Stem("colaps"), "colaps");});
test("colapsului -> colaps", function() {deepEqual( Stem("colapsului"), "colaps");});
test("colateral -> colateral", function() {deepEqual( Stem("colateral"), "colateral");});
test("colcăie -> colcăi", function() {deepEqual( Stem("colcăie"), "colcăi");});
test("colcăitor -> colcăit", function() {deepEqual( Stem("colcăitor"), "colcăit");});
test("colea -> col", function() {deepEqual( Stem("colea"), "col");});
test("colecta -> colect", function() {deepEqual( Stem("colecta"), "colect");});
test("colectare -> colect", function() {deepEqual( Stem("colectare"), "colect");});
test("colectat -> colect", function() {deepEqual( Stem("colectat"), "colect");});
test("colectată -> colect", function() {deepEqual( Stem("colectată"), "colect");});
test("colectate -> colect", function() {deepEqual( Stem("colectate"), "colect");});
test("colectează -> colect", function() {deepEqual( Stem("colectează"), "colect");});
test("colectiv -> colect", function() {deepEqual( Stem("colectiv"), "colect");});
test("colectivă -> colect", function() {deepEqual( Stem("colectivă"), "colect");});
test("colective -> colect", function() {deepEqual( Stem("colective"), "colect");});
test("colectivităţii -> colect", function() {deepEqual( Stem("colectivităţii"), "colect");});
test("colecţia -> colecţ", function() {deepEqual( Stem("colecţia"), "colecţ");});
test("colecţie -> colecţ", function() {deepEqual( Stem("colecţie"), "colecţ");});
test("coleg -> coleg", function() {deepEqual( Stem("coleg"), "coleg");});
test("colega -> coleg", function() {deepEqual( Stem("colega"), "coleg");});
test("colegă -> coleg", function() {deepEqual( Stem("colegă"), "coleg");});
test("colegi -> coleg", function() {deepEqual( Stem("colegi"), "coleg");});
test("colegii -> coleg", function() {deepEqual( Stem("colegii"), "coleg");});
test("colegilor -> coleg", function() {deepEqual( Stem("colegilor"), "coleg");});
test("colegului -> coleg", function() {deepEqual( Stem("colegului"), "coleg");});
test("colibă -> colib", function() {deepEqual( Stem("colibă"), "colib");});
test("colind -> colind", function() {deepEqual( Stem("colind"), "colind");});
test("coline -> colin", function() {deepEqual( Stem("coline"), "colin");});
test("colo -> colo", function() {deepEqual( Stem("colo"), "colo");});
test("coloana -> coloan", function() {deepEqual( Stem("coloana"), "coloan");});
test("coloană -> coloan", function() {deepEqual( Stem("coloană"), "coloan");});
test("coloane -> coloan", function() {deepEqual( Stem("coloane"), "coloan");});
test("coloanele -> coloan", function() {deepEqual( Stem("coloanele"), "coloan");});
test("colocviile -> colocv", function() {deepEqual( Stem("colocviile"), "colocv");});
test("colonel -> colonel", function() {deepEqual( Stem("colonel"), "colonel");});
test("colonele -> colon", function() {deepEqual( Stem("colonele"), "colon");});
test("colonelul -> colonel", function() {deepEqual( Stem("colonelul"), "colonel");});
test("colonelului -> colonel", function() {deepEqual( Stem("colonelului"), "colonel");});
test("colonia -> colon", function() {deepEqual( Stem("colonia"), "colon");});
test("colonie -> colon", function() {deepEqual( Stem("colonie"), "colon");});
test("coloniei -> colon", function() {deepEqual( Stem("coloniei"), "colon");});
test("colonizare -> coloniz", function() {deepEqual( Stem("colonizare"), "coloniz");});
test("colorat -> color", function() {deepEqual( Stem("colorat"), "color");});
test("colorată -> color", function() {deepEqual( Stem("colorată"), "color");});
test("colorate -> color", function() {deepEqual( Stem("colorate"), "color");});
test("coloratură -> colorat", function() {deepEqual( Stem("coloratură"), "colorat");});
test("coloreze -> color", function() {deepEqual( Stem("coloreze"), "color");});
test("colori -> color", function() {deepEqual( Stem("colori"), "color");});
test("colorile -> color", function() {deepEqual( Stem("colorile"), "color");});
test("colorit -> color", function() {deepEqual( Stem("colorit"), "color");});
test("colos -> colos", function() {deepEqual( Stem("colos"), "colos");});
test("colosal -> colosal", function() {deepEqual( Stem("colosal"), "colosal");});
test("coltu -> coltu", function() {deepEqual( Stem("coltu"), "coltu");});
test("colţ -> colţ", function() {deepEqual( Stem("colţ"), "colţ");});
test("colţi -> colţ", function() {deepEqual( Stem("colţi"), "colţ");});
test("colţul -> colţ", function() {deepEqual( Stem("colţul"), "colţ");});
test("colţuri -> colţur", function() {deepEqual( Stem("colţuri"), "colţur");});
test("colţurile -> colţur", function() {deepEqual( Stem("colţurile"), "colţur");});
test("comanda -> comand", function() {deepEqual( Stem("comanda"), "comand");});
test("comandamente -> comandament", function() {deepEqual( Stem("comandamente"), "comandament");});
test("comandant -> comand", function() {deepEqual( Stem("comandant"), "comand");});
test("comandantul -> comand", function() {deepEqual( Stem("comandantul"), "comand");});
test("comandantului -> comand", function() {deepEqual( Stem("comandantului"), "comand");});
test("comandanţi -> comandanţ", function() {deepEqual( Stem("comandanţi"), "comandanţ");});
test("comandanţii -> comandanţ", function() {deepEqual( Stem("comandanţii"), "comandanţ");});
test("comandatul -> comand", function() {deepEqual( Stem("comandatul"), "comand");});
test("comandă -> comand", function() {deepEqual( Stem("comandă"), "comand");});
test("comandei -> comande", function() {deepEqual( Stem("comandei"), "comande");});
test("comanzi -> comanz", function() {deepEqual( Stem("comanzi"), "comanz");});
test("combatanţi -> combatanţ", function() {deepEqual( Stem("combatanţi"), "combatanţ");});
test("combativ -> combat", function() {deepEqual( Stem("combativ"), "combat");});
test("combătut -> combăt", function() {deepEqual( Stem("combătut"), "combăt");});
test("combina -> combin", function() {deepEqual( Stem("combina"), "combin");});
test("combinare -> combin", function() {deepEqual( Stem("combinare"), "combin");});
test("combinat -> combin", function() {deepEqual( Stem("combinat"), "combin");});
test("combinaţie -> combin", function() {deepEqual( Stem("combinaţie"), "combin");});
test("combinaţii -> combin", function() {deepEqual( Stem("combinaţii"), "combin");});
test("comedia -> comed", function() {deepEqual( Stem("comedia"), "comed");});
test("comedie -> comed", function() {deepEqual( Stem("comedie"), "comed");});
test("comemoreze -> comemor", function() {deepEqual( Stem("comemoreze"), "comemor");});
test("comentar -> comentar", function() {deepEqual( Stem("comentar"), "comentar");});
test("comentarii -> comentar", function() {deepEqual( Stem("comentarii"), "comentar");});
test("comentariile -> comentar", function() {deepEqual( Stem("comentariile"), "comentar");});
test("comentariilor -> comentar", function() {deepEqual( Stem("comentariilor"), "comentar");});
test("comentată -> coment", function() {deepEqual( Stem("comentată"), "coment");});
test("comenzi -> comenz", function() {deepEqual( Stem("comenzi"), "comenz");});
test("comercial -> comercial", function() {deepEqual( Stem("comercial"), "comercial");});
test("comercială -> comercial", function() {deepEqual( Stem("comercială"), "comercial");});
test("comerciant -> comerc", function() {deepEqual( Stem("comerciant"), "comerc");});
test("comerţ -> comerţ", function() {deepEqual( Stem("comerţ"), "comerţ");});
test("comerţul -> comerţ", function() {deepEqual( Stem("comerţul"), "comerţ");});
test("comerţului -> comerţ", function() {deepEqual( Stem("comerţului"), "comerţ");});
test("comeseni -> comesen", function() {deepEqual( Stem("comeseni"), "comesen");});
test("comestibilelor -> comest", function() {deepEqual( Stem("comestibilelor"), "comest");});
test("comete -> comet", function() {deepEqual( Stem("comete"), "comet");});
test("cometei -> comete", function() {deepEqual( Stem("cometei"), "comete");});
test("comic -> comic", function() {deepEqual( Stem("comic"), "comic");});
test("comicăria -> comicăr", function() {deepEqual( Stem("comicăria"), "comicăr");});
test("comice -> comic", function() {deepEqual( Stem("comice"), "comic");});
test("comis -> comis", function() {deepEqual( Stem("comis"), "comis");});
test("comisionar -> comisionar", function() {deepEqual( Stem("comisionar"), "comisionar");});
test("comisionarul -> comisionar", function() {deepEqual( Stem("comisionarul"), "comisionar");});
test("comisionarului -> comisionar", function() {deepEqual( Stem("comisionarului"), "comisionar");});
test("comisionul -> comision", function() {deepEqual( Stem("comisionul"), "comision");});
test("comit -> comit", function() {deepEqual( Stem("comit"), "comit");});
test("comod -> comod", function() {deepEqual( Stem("comod"), "comod");});
test("comodă -> comod", function() {deepEqual( Stem("comodă"), "comod");});
test("compactă -> compact", function() {deepEqual( Stem("compactă"), "compact");});
test("compania -> compan", function() {deepEqual( Stem("compania"), "compan");});
test("companie -> compan", function() {deepEqual( Stem("companie"), "compan");});
test("companiei -> compan", function() {deepEqual( Stem("companiei"), "compan");});
test("companii -> compan", function() {deepEqual( Stem("companii"), "compan");});
test("compar -> compar", function() {deepEqual( Stem("compar"), "compar");});
test("compara -> compar", function() {deepEqual( Stem("compara"), "compar");});
test("comparat -> compar", function() {deepEqual( Stem("comparat"), "compar");});
test("comparaţia -> compar", function() {deepEqual( Stem("comparaţia"), "compar");});
test("comparaţie -> compar", function() {deepEqual( Stem("comparaţie"), "compar");});
test("comparaţii -> compar", function() {deepEqual( Stem("comparaţii"), "compar");});
test("comparând -> compar", function() {deepEqual( Stem("comparând"), "compar");});
test("compară -> comp", function() {deepEqual( Stem("compară"), "comp");});
test("comparăm -> comp", function() {deepEqual( Stem("comparăm"), "comp");});
test("compari -> compar", function() {deepEqual( Stem("compari"), "compar");});
test("compartimentul -> compartiment", function() {deepEqual( Stem("compartimentul"), "compartiment");});
test("compartimentului -> compartiment", function() {deepEqual( Stem("compartimentului"), "compartiment");});
test("compatrioţii -> compatrioţ", function() {deepEqual( Stem("compatrioţii"), "compatrioţ");});
test("compatrioţilor -> compatrioţ", function() {deepEqual( Stem("compatrioţilor"), "compatrioţ");});
test("compănii -> compăn", function() {deepEqual( Stem("compănii"), "compăn");});
test("compăniile -> compăn", function() {deepEqual( Stem("compăniile"), "compăn");});
test("compătimire -> compătim", function() {deepEqual( Stem("compătimire"), "compătim");});
test("compătimirea -> compătim", function() {deepEqual( Stem("compătimirea"), "compătim");});
test("competintele -> competint", function() {deepEqual( Stem("competintele"), "competint");});
test("complementară -> complement", function() {deepEqual( Stem("complementară"), "complement");});
test("complet -> complet", function() {deepEqual( Stem("complet"), "complet");});
test("completa -> complet", function() {deepEqual( Stem("completa"), "complet");});
test("completare -> complet", function() {deepEqual( Stem("completare"), "complet");});
test("completarea -> complet", function() {deepEqual( Stem("completarea"), "complet");});
test("completat -> complet", function() {deepEqual( Stem("completat"), "complet");});
test("completă -> complet", function() {deepEqual( Stem("completă"), "complet");});
test("completăm -> complet", function() {deepEqual( Stem("completăm"), "complet");});
test("completări -> completăr", function() {deepEqual( Stem("completări"), "completăr");});
test("completării -> completăr", function() {deepEqual( Stem("completării"), "completăr");});
test("complete -> complet", function() {deepEqual( Stem("complete"), "complet");});
test("completează -> complet", function() {deepEqual( Stem("completează"), "complet");});
test("completez -> complet", function() {deepEqual( Stem("completez"), "complet");});
test("completezi -> complet", function() {deepEqual( Stem("completezi"), "complet");});
test("complex -> complex", function() {deepEqual( Stem("complex"), "complex");});
test("complexe -> complex", function() {deepEqual( Stem("complexe"), "complex");});
test("complexităţi -> complex", function() {deepEqual( Stem("complexităţi"), "complex");});
test("complexul -> complex", function() {deepEqual( Stem("complexul"), "complex");});
test("complexului -> complex", function() {deepEqual( Stem("complexului"), "complex");});
test("complexuri -> complexur", function() {deepEqual( Stem("complexuri"), "complexur");});
test("complic -> complic", function() {deepEqual( Stem("complic"), "complic");});
test("complica -> complic", function() {deepEqual( Stem("complica"), "complic");});
test("complicat -> complic", function() {deepEqual( Stem("complicat"), "complic");});
test("complicată -> complic", function() {deepEqual( Stem("complicată"), "complic");});
test("complicate -> complic", function() {deepEqual( Stem("complicate"), "complic");});
test("complicaţia -> complic", function() {deepEqual( Stem("complicaţia"), "complic");});
test("complicaţie -> complic", function() {deepEqual( Stem("complicaţie"), "complic");});
test("complicaţii -> complic", function() {deepEqual( Stem("complicaţii"), "complic");});
test("complică -> complic", function() {deepEqual( Stem("complică"), "complic");});
test("complice -> complic", function() {deepEqual( Stem("complice"), "complic");});
test("complici -> complic", function() {deepEqual( Stem("complici"), "complic");});
test("complicitate -> complic", function() {deepEqual( Stem("complicitate"), "complic");});
test("complicităţi -> complic", function() {deepEqual( Stem("complicităţi"), "complic");});
test("compliment -> compliment", function() {deepEqual( Stem("compliment"), "compliment");});
test("complimentele -> compliment", function() {deepEqual( Stem("complimentele"), "compliment");});
test("component -> component", function() {deepEqual( Stem("component"), "component");});
test("comporta -> comport", function() {deepEqual( Stem("comporta"), "comport");});
test("comportat -> comport", function() {deepEqual( Stem("comportat"), "comport");});
test("comportă -> comport", function() {deepEqual( Stem("comportă"), "comport");});
test("compot -> compot", function() {deepEqual( Stem("compot"), "compot");});
test("comprimat -> comprim", function() {deepEqual( Stem("comprimat"), "comprim");});
test("comprimată -> comprim", function() {deepEqual( Stem("comprimată"), "comprim");});
test("compromisă -> compromis", function() {deepEqual( Stem("compromisă"), "compromis");});
test("compromisese -> comprom", function() {deepEqual( Stem("compromisese"), "comprom");});
test("compromit -> comprom", function() {deepEqual( Stem("compromit"), "comprom");});
test("compromite -> comprom", function() {deepEqual( Stem("compromite"), "comprom");});
test("compune -> compun", function() {deepEqual( Stem("compune"), "compun");});
test("compunerea -> compun", function() {deepEqual( Stem("compunerea"), "compun");});
test("compus -> compus", function() {deepEqual( Stem("compus"), "compus");});
test("compusă -> compus", function() {deepEqual( Stem("compusă"), "compus");});
test("compuşi -> comp", function() {deepEqual( Stem("compuşi"), "comp");});
test("computaţional -> computaţional", function() {deepEqual( Stem("computaţional"), "computaţional");});
test("computaţională -> computaţional", function() {deepEqual( Stem("computaţională"), "computaţional");});
test("computaţionale -> computaţional", function() {deepEqual( Stem("computaţionale"), "computaţional");});
test("computer -> computer", function() {deepEqual( Stem("computer"), "computer");});
test("computerizată -> computeriz", function() {deepEqual( Stem("computerizată"), "computeriz");});
test("comte -> comt", function() {deepEqual( Stem("comte"), "comt");});
test("comun -> comun", function() {deepEqual( Stem("comun"), "comun");});
test("comunal -> comunal", function() {deepEqual( Stem("comunal"), "comunal");});
test("comunale -> comunal", function() {deepEqual( Stem("comunale"), "comunal");});
test("comună -> comun", function() {deepEqual( Stem("comună"), "comun");});
test("comune -> comun", function() {deepEqual( Stem("comune"), "comun");});
test("comunei -> comune", function() {deepEqual( Stem("comunei"), "comune");});
test("comunelor -> comun", function() {deepEqual( Stem("comunelor"), "comun");});
test("comuni -> comun", function() {deepEqual( Stem("comuni"), "comun");});
test("comunic -> comun", function() {deepEqual( Stem("comunic"), "comun");});
test("comunica -> comun", function() {deepEqual( Stem("comunica"), "comun");});
test("comunicante -> comunic", function() {deepEqual( Stem("comunicante"), "comunic");});
test("comunicare -> comunic", function() {deepEqual( Stem("comunicare"), "comunic");});
test("comunicat -> comunic", function() {deepEqual( Stem("comunicat"), "comunic");});
test("comunicată -> comunic", function() {deepEqual( Stem("comunicată"), "comunic");});
test("comunicate -> comunic", function() {deepEqual( Stem("comunicate"), "comunic");});
test("comunicativitate -> comunic", function() {deepEqual( Stem("comunicativitate"), "comunic");});
test("comunicatul -> comunic", function() {deepEqual( Stem("comunicatul"), "comunic");});
test("comunicatului -> comunic", function() {deepEqual( Stem("comunicatului"), "comunic");});
test("comunicaţi -> comunic", function() {deepEqual( Stem("comunicaţi"), "comunic");});
test("comunicaţia -> comunic", function() {deepEqual( Stem("comunicaţia"), "comunic");});
test("comunicaţii -> comunic", function() {deepEqual( Stem("comunicaţii"), "comunic");});
test("comunicau -> comunic", function() {deepEqual( Stem("comunicau"), "comunic");});
test("comunică -> comun", function() {deepEqual( Stem("comunică"), "comun");});
test("comunicăm -> comunic", function() {deepEqual( Stem("comunicăm"), "comunic");});
test("comunicări -> comunicăr", function() {deepEqual( Stem("comunicări"), "comunicăr");});
test("comunicării -> comunicăr", function() {deepEqual( Stem("comunicării"), "comunicăr");});
test("comunicărilor -> comunicăr", function() {deepEqual( Stem("comunicărilor"), "comunicăr");});
test("comunice -> comun", function() {deepEqual( Stem("comunice"), "comun");});
test("comunism -> comunist", function() {deepEqual( Stem("comunism"), "comunist");});
test("comunismul -> comunist", function() {deepEqual( Stem("comunismul"), "comunist");});
test("comunismului -> comunist", function() {deepEqual( Stem("comunismului"), "comunist");});
test("comunistă -> comunist", function() {deepEqual( Stem("comunistă"), "comunist");});
test("comuniste -> comunist", function() {deepEqual( Stem("comuniste"), "comunist");});
test("comunişti -> comunist", function() {deepEqual( Stem("comunişti"), "comunist");});
test("comuniştii -> comunist", function() {deepEqual( Stem("comuniştii"), "comunist");});
test("comunităţii -> comun", function() {deepEqual( Stem("comunităţii"), "comun");});
test("comunizării -> comunizăr", function() {deepEqual( Stem("comunizării"), "comunizăr");});
test("conacuri -> conacur", function() {deepEqual( Stem("conacuri"), "conacur");});
test("conceapă -> conceap", function() {deepEqual( Stem("conceapă"), "conceap");});
test("concediază -> concediaz", function() {deepEqual( Stem("concediază"), "concediaz");});
test("concediind -> concediind", function() {deepEqual( Stem("concediind"), "concediind");});
test("concentrare -> concentr", function() {deepEqual( Stem("concentrare"), "concentr");});
test("concentrat -> concentr", function() {deepEqual( Stem("concentrat"), "concentr");});
test("concentrate -> concentr", function() {deepEqual( Stem("concentrate"), "concentr");});
test("concentrării -> concentrăr", function() {deepEqual( Stem("concentrării"), "concentrăr");});
test("concentrez -> concentr", function() {deepEqual( Stem("concentrez"), "concentr");});
test("concepe -> concep", function() {deepEqual( Stem("concepe"), "concep");});
test("concept -> concept", function() {deepEqual( Stem("concept"), "concept");});
test("concepte -> concept", function() {deepEqual( Stem("concepte"), "concept");});
test("conceptele -> concept", function() {deepEqual( Stem("conceptele"), "concept");});
test("conceptibilă -> concept", function() {deepEqual( Stem("conceptibilă"), "concept");});
test("conceptuale -> conceptual", function() {deepEqual( Stem("conceptuale"), "conceptual");});
test("conceptul -> concept", function() {deepEqual( Stem("conceptul"), "concept");});
test("conceptului -> concept", function() {deepEqual( Stem("conceptului"), "concept");});
test("concepţia -> concepţ", function() {deepEqual( Stem("concepţia"), "concepţ");});
test("concepţie -> concepţ", function() {deepEqual( Stem("concepţie"), "concepţ");});
test("concepţiune -> concept", function() {deepEqual( Stem("concepţiune"), "concept");});
test("concepţiunilor -> concept", function() {deepEqual( Stem("concepţiunilor"), "concept");});
test("conceput -> concep", function() {deepEqual( Stem("conceput"), "concep");});
test("concepută -> concep", function() {deepEqual( Stem("concepută"), "concep");});
test("concert -> concert", function() {deepEqual( Stem("concert"), "concert");});
test("concerte -> concert", function() {deepEqual( Stem("concerte"), "concert");});
test("concertelor -> concert", function() {deepEqual( Stem("concertelor"), "concert");});
test("concertul -> concert", function() {deepEqual( Stem("concertul"), "concert");});
test("concesie -> conces", function() {deepEqual( Stem("concesie"), "conces");});
test("conceziune -> conceziun", function() {deepEqual( Stem("conceziune"), "conceziun");});
test("conchid -> conchid", function() {deepEqual( Stem("conchid"), "conchid");});
test("conchidă -> conchid", function() {deepEqual( Stem("conchidă"), "conchid");});
test("conchide -> conchid", function() {deepEqual( Stem("conchide"), "conchid");});
test("conchidem -> conchid", function() {deepEqual( Stem("conchidem"), "conchid");});
test("conciliant -> concil", function() {deepEqual( Stem("conciliant"), "concil");});
test("concilianţa -> concilianţ", function() {deepEqual( Stem("concilianţa"), "concilianţ");});
test("concizia -> conciz", function() {deepEqual( Stem("concizia"), "conciz");});
test("concludentă -> concludent", function() {deepEqual( Stem("concludentă"), "concludent");});
test("concludente -> concludent", function() {deepEqual( Stem("concludente"), "concludent");});
test("concluzia -> concluz", function() {deepEqual( Stem("concluzia"), "concluz");});
test("concluzie -> concluz", function() {deepEqual( Stem("concluzie"), "concluz");});
test("concluzii -> concluz", function() {deepEqual( Stem("concluzii"), "concluz");});
test("concluziile -> concluz", function() {deepEqual( Stem("concluziile"), "concluz");});
test("concluziune -> concluziun", function() {deepEqual( Stem("concluziune"), "concluziun");});
test("concluziunea -> concluziun", function() {deepEqual( Stem("concluziunea"), "concluziun");});
test("concordanţă -> concordanţ", function() {deepEqual( Stem("concordanţă"), "concordanţ");});
test("concret -> concret", function() {deepEqual( Stem("concret"), "concret");});
test("concretă -> concret", function() {deepEqual( Stem("concretă"), "concret");});
test("concrete -> concret", function() {deepEqual( Stem("concrete"), "concret");});
test("concretizează -> concretiz", function() {deepEqual( Stem("concretizează"), "concretiz");});
test("concretul -> concret", function() {deepEqual( Stem("concretul"), "concret");});
test("concurăm -> conc", function() {deepEqual( Stem("concurăm"), "conc");});
test("concurent -> concurent", function() {deepEqual( Stem("concurent"), "concurent");});
test("concurenţă -> concurenţ", function() {deepEqual( Stem("concurenţă"), "concurenţ");});
test("concurenţi -> concurenţ", function() {deepEqual( Stem("concurenţi"), "concurenţ");});
test("concureze -> concur", function() {deepEqual( Stem("concureze"), "concur");});
test("concurs -> concurs", function() {deepEqual( Stem("concurs"), "concurs");});
test("concursul -> concurs", function() {deepEqual( Stem("concursul"), "concurs");});
test("concursurile -> concursur", function() {deepEqual( Stem("concursurile"), "concursur");});
test("condamna -> condamn", function() {deepEqual( Stem("condamna"), "condamn");});
test("condamnabilă -> condamn", function() {deepEqual( Stem("condamnabilă"), "condamn");});
test("condamnarea -> condamn", function() {deepEqual( Stem("condamnarea"), "condamn");});
test("condamnat -> condamn", function() {deepEqual( Stem("condamnat"), "condamn");});
test("condamnată -> condamn", function() {deepEqual( Stem("condamnată"), "condamn");});
test("condamnaţi -> condamn", function() {deepEqual( Stem("condamnaţi"), "condamn");});
test("condamnaţii -> condamn", function() {deepEqual( Stem("condamnaţii"), "condamn");});
test("condamnă -> condamn", function() {deepEqual( Stem("condamnă"), "condamn");});
test("condamnări -> condamnăr", function() {deepEqual( Stem("condamnări"), "condamnăr");});
test("condescendent -> condescendent", function() {deepEqual( Stem("condescendent"), "condescendent");});
test("condescendenţă -> condescendenţ", function() {deepEqual( Stem("condescendenţă"), "condescendenţ");});
test("condicuţă -> condicuţ", function() {deepEqual( Stem("condicuţă"), "condicuţ");});
test("condiţia -> condiţ", function() {deepEqual( Stem("condiţia"), "condiţ");});
test("condiţie -> condiţ", function() {deepEqual( Stem("condiţie"), "condiţ");});
test("condiţii -> cond", function() {deepEqual( Stem("condiţii"), "cond");});
test("condiţiile -> cond", function() {deepEqual( Stem("condiţiile"), "cond");});
test("condiţiilor -> cond", function() {deepEqual( Stem("condiţiilor"), "cond");});
test("condiţiona -> condiţion", function() {deepEqual( Stem("condiţiona"), "condiţion");});
test("condiţionare -> condiţion", function() {deepEqual( Stem("condiţionare"), "condiţion");});
test("condiţionarea -> condiţion", function() {deepEqual( Stem("condiţionarea"), "condiţion");});
test("condiţionat -> condiţion", function() {deepEqual( Stem("condiţionat"), "condiţion");});
test("condiţionată -> condiţion", function() {deepEqual( Stem("condiţionată"), "condiţion");});
test("condiţionate -> condiţion", function() {deepEqual( Stem("condiţionate"), "condiţion");});
test("condiţionării -> condiţionăr", function() {deepEqual( Stem("condiţionării"), "condiţionăr");});
test("condiţionează -> condiţion", function() {deepEqual( Stem("condiţionează"), "condiţion");});
test("condiţionez -> condiţion", function() {deepEqual( Stem("condiţionez"), "condiţion");});
test("condiţionezi -> condiţion", function() {deepEqual( Stem("condiţionezi"), "condiţion");});
test("condiţiune -> condit", function() {deepEqual( Stem("condiţiune"), "condit");});
test("condiţiunea -> condit", function() {deepEqual( Stem("condiţiunea"), "condit");});
test("condiţiuni -> condit", function() {deepEqual( Stem("condiţiuni"), "condit");});
test("condiţiunile -> condit", function() {deepEqual( Stem("condiţiunile"), "condit");});
test("conduc -> conduc", function() {deepEqual( Stem("conduc"), "conduc");});
test("conducându -> conduc", function() {deepEqual( Stem("conducându"), "conduc");});
test("conducătoare -> conduc", function() {deepEqual( Stem("conducătoare"), "conduc");});
test("conducători -> conduc", function() {deepEqual( Stem("conducători"), "conduc");});
test("conducătorii -> conduc", function() {deepEqual( Stem("conducătorii"), "conduc");});
test("conduceam -> conduc", function() {deepEqual( Stem("conduceam"), "conduc");});
test("conducere -> conduc", function() {deepEqual( Stem("conducere"), "conduc");});
test("conducerea -> conduc", function() {deepEqual( Stem("conducerea"), "conduc");});
test("conducerii -> conducer", function() {deepEqual( Stem("conducerii"), "conducer");});
test("condus -> condus", function() {deepEqual( Stem("condus"), "condus");});
test("confecţiunile -> confect", function() {deepEqual( Stem("confecţiunile"), "confect");});
test("conferenţiarului -> conferenţiar", function() {deepEqual( Stem("conferenţiarului"), "conferenţiar");});
test("conferinţă -> conferinţ", function() {deepEqual( Stem("conferinţă"), "conferinţ");});
test("conferinţe -> conferinţ", function() {deepEqual( Stem("conferinţe"), "conferinţ");});
test("confesionale -> confesional", function() {deepEqual( Stem("confesionale"), "confesional");});
test("confirmare -> confirm", function() {deepEqual( Stem("confirmare"), "confirm");});
test("confirmarea -> confirm", function() {deepEqual( Stem("confirmarea"), "confirm");});
test("confirmat -> confirm", function() {deepEqual( Stem("confirmat"), "confirm");});
test("confirmă -> confirm", function() {deepEqual( Stem("confirmă"), "confirm");});
test("conflict -> conflict", function() {deepEqual( Stem("conflict"), "conflict");});
test("conflicte -> conflict", function() {deepEqual( Stem("conflicte"), "conflict");});
test("conflictele -> conflict", function() {deepEqual( Stem("conflictele"), "conflict");});
test("conforma -> conform", function() {deepEqual( Stem("conforma"), "conform");});
test("conformă -> conform", function() {deepEqual( Stem("conformă"), "conform");});
test("conformăm -> conform", function() {deepEqual( Stem("conformăm"), "conform");});
test("conformeze -> conform", function() {deepEqual( Stem("conformeze"), "conform");});
test("conformist -> conformist", function() {deepEqual( Stem("conformist"), "conformist");});
test("confortului -> confort", function() {deepEqual( Stem("confortului"), "confort");});
test("confraţii -> confr", function() {deepEqual( Stem("confraţii"), "confr");});
test("confruntat -> confrunt", function() {deepEqual( Stem("confruntat"), "confrunt");});
test("confruntând -> confrunt", function() {deepEqual( Stem("confruntând"), "confrunt");});
test("confunda -> confund", function() {deepEqual( Stem("confunda"), "confund");});
test("confundă -> confund", function() {deepEqual( Stem("confundă"), "confund");});
test("confuză -> confuz", function() {deepEqual( Stem("confuză"), "confuz");});
test("confuzia -> confuz", function() {deepEqual( Stem("confuzia"), "confuz");});
test("confuzie -> confuz", function() {deepEqual( Stem("confuzie"), "confuz");});
test("confuzii -> confuz", function() {deepEqual( Stem("confuzii"), "confuz");});
test("congestionat -> congestion", function() {deepEqual( Stem("congestionat"), "congestion");});
test("congestionaţi -> congestion", function() {deepEqual( Stem("congestionaţi"), "congestion");});
test("coniacuri -> coniacur", function() {deepEqual( Stem("coniacuri"), "coniacur");});
test("conica -> conic", function() {deepEqual( Stem("conica"), "conic");});
test("conjugal -> conjugal", function() {deepEqual( Stem("conjugal"), "conjugal");});
test("conjugalităţii -> conjugal", function() {deepEqual( Stem("conjugalităţii"), "conjugal");});
test("conjugare -> conjug", function() {deepEqual( Stem("conjugare"), "conjug");});
test("conjuraţie -> conjur", function() {deepEqual( Stem("conjuraţie"), "conjur");});
test("consacrare -> consacr", function() {deepEqual( Stem("consacrare"), "consacr");});
test("consacrată -> consacr", function() {deepEqual( Stem("consacrată"), "consacr");});
test("consacrate -> consacr", function() {deepEqual( Stem("consacrate"), "consacr");});
test("consacră -> consacr", function() {deepEqual( Stem("consacră"), "consacr");});
test("consacrări -> consacrăr", function() {deepEqual( Stem("consacrări"), "consacrăr");});
test("conscienţialismul -> conscienţialist", function() {deepEqual( Stem("conscienţialismul"), "conscienţialist");});
test("conscienţialismului -> conscienţialist", function() {deepEqual( Stem("conscienţialismului"), "conscienţialist");});
test("consecinţa -> consecinţ", function() {deepEqual( Stem("consecinţa"), "consecinţ");});
test("consecinţă -> consecinţ", function() {deepEqual( Stem("consecinţă"), "consecinţ");});
test("consecinţe -> consecinţ", function() {deepEqual( Stem("consecinţe"), "consecinţ");});
test("consecinţele -> consecinţ", function() {deepEqual( Stem("consecinţele"), "consecinţ");});
test("consecvent -> consecvent", function() {deepEqual( Stem("consecvent"), "consecvent");});
test("consecventă -> consecvent", function() {deepEqual( Stem("consecventă"), "consecvent");});
test("consecvenţa -> consecvenţ", function() {deepEqual( Stem("consecvenţa"), "consecvenţ");});
test("consecvenţă -> consecvenţ", function() {deepEqual( Stem("consecvenţă"), "consecvenţ");});
test("consemne -> consemn", function() {deepEqual( Stem("consemne"), "consemn");});
test("conservatoare -> conserv", function() {deepEqual( Stem("conservatoare"), "conserv");});
test("conservator -> conserv", function() {deepEqual( Stem("conservator"), "conserv");});
test("conservatorism -> conservatorist", function() {deepEqual( Stem("conservatorism"), "conservatorist");});
test("consfătuiri -> consfătuir", function() {deepEqual( Stem("consfătuiri"), "consfătuir");});
test("consider -> consider", function() {deepEqual( Stem("consider"), "consider");});
test("considera -> consider", function() {deepEqual( Stem("considera"), "consider");});
test("considerabil -> consider", function() {deepEqual( Stem("considerabil"), "consider");});
test("considerabile -> consider", function() {deepEqual( Stem("considerabile"), "consider");});
test("consideram -> consider", function() {deepEqual( Stem("consideram"), "consider");});
test("considerare -> consider", function() {deepEqual( Stem("considerare"), "consider");});
test("considerarea -> consider", function() {deepEqual( Stem("considerarea"), "consider");});
test("considerat -> consider", function() {deepEqual( Stem("considerat"), "consider");});
test("considerată -> consider", function() {deepEqual( Stem("considerată"), "consider");});
test("considerate -> consider", function() {deepEqual( Stem("considerate"), "consider");});
test("consideraţi -> consider", function() {deepEqual( Stem("consideraţi"), "consider");});
test("consideraţie -> consider", function() {deepEqual( Stem("consideraţie"), "consider");});
test("consideraţii -> consider", function() {deepEqual( Stem("consideraţii"), "consider");});
test("consideraţiuni -> considerat", function() {deepEqual( Stem("consideraţiuni"), "considerat");});
test("consideraţiunile -> considerat", function() {deepEqual( Stem("consideraţiunile"), "considerat");});
test("consideraţiunilor -> considerat", function() {deepEqual( Stem("consideraţiunilor"), "considerat");});
test("considerând -> consider", function() {deepEqual( Stem("considerând"), "consider");});
test("consideră -> consider", function() {deepEqual( Stem("consideră"), "consider");});
test("considerăm -> consider", function() {deepEqual( Stem("considerăm"), "consider");});
test("considere -> consid", function() {deepEqual( Stem("considere"), "consid");});
test("considerente -> considerent", function() {deepEqual( Stem("considerente"), "considerent");});
test("consideri -> consider", function() {deepEqual( Stem("consideri"), "consider");});
test("consilier -> consilier", function() {deepEqual( Stem("consilier"), "consilier");});
test("consilierii -> consilier", function() {deepEqual( Stem("consilierii"), "consilier");});
test("consilii -> consil", function() {deepEqual( Stem("consilii"), "consil");});
test("consiliile -> consil", function() {deepEqual( Stem("consiliile"), "consil");});
test("consiliu -> consiliu", function() {deepEqual( Stem("consiliu"), "consiliu");});
test("consiliul -> consil", function() {deepEqual( Stem("consiliul"), "consil");});
test("consimţământ -> consimţământ", function() {deepEqual( Stem("consimţământ"), "consimţământ");});
test("consola -> consol", function() {deepEqual( Stem("consola"), "consol");});
test("consolare -> consol", function() {deepEqual( Stem("consolare"), "consol");});
test("consolator -> consol", function() {deepEqual( Stem("consolator"), "consol");});
test("consolează -> consol", function() {deepEqual( Stem("consolează"), "consol");});
test("conspiratori -> conspir", function() {deepEqual( Stem("conspiratori"), "conspir");});
test("conspiraţia -> conspir", function() {deepEqual( Stem("conspiraţia"), "conspir");});
test("conspiraţie -> conspir", function() {deepEqual( Stem("conspiraţie"), "conspir");});
test("conspiraţiei -> conspir", function() {deepEqual( Stem("conspiraţiei"), "conspir");});
test("conspiraţii -> conspir", function() {deepEqual( Stem("conspiraţii"), "conspir");});
test("conspiraţiilor -> conspir", function() {deepEqual( Stem("conspiraţiilor"), "conspir");});
test("conspiră -> consp", function() {deepEqual( Stem("conspiră"), "consp");});
test("constant -> constant", function() {deepEqual( Stem("constant"), "constant");});
test("constantă -> constant", function() {deepEqual( Stem("constantă"), "constant");});
test("constantin -> constantin", function() {deepEqual( Stem("constantin"), "constantin");});
test("constantinopol -> constantinopol", function() {deepEqual( Stem("constantinopol"), "constantinopol");});
test("constantinopolul -> constantinopol", function() {deepEqual( Stem("constantinopolul"), "constantinopol");});
test("constanţa -> constanţ", function() {deepEqual( Stem("constanţa"), "constanţ");});
test("constanţă -> constanţ", function() {deepEqual( Stem("constanţă"), "constanţ");});
test("constat -> constat", function() {deepEqual( Stem("constat"), "constat");});
test("constata -> constat", function() {deepEqual( Stem("constata"), "constat");});
test("constatabil -> constat", function() {deepEqual( Stem("constatabil"), "constat");});
test("constatabilă -> constat", function() {deepEqual( Stem("constatabilă"), "constat");});
test("constatare -> constat", function() {deepEqual( Stem("constatare"), "constat");});
test("constatarea -> constat", function() {deepEqual( Stem("constatarea"), "constat");});
test("constatat -> constat", function() {deepEqual( Stem("constatat"), "constat");});
test("constatată -> constat", function() {deepEqual( Stem("constatată"), "constat");});
test("constataţi -> constat", function() {deepEqual( Stem("constataţi"), "constat");});
test("constată -> constat", function() {deepEqual( Stem("constată"), "constat");});
test("constatăm -> constat", function() {deepEqual( Stem("constatăm"), "constat");});
test("constatări -> constatăr", function() {deepEqual( Stem("constatări"), "constatăr");});
test("constatării -> constatăr", function() {deepEqual( Stem("constatării"), "constatăr");});
test("constate -> constat", function() {deepEqual( Stem("constate"), "constat");});
test("constaţi -> const", function() {deepEqual( Stem("constaţi"), "const");});
test("constau -> const", function() {deepEqual( Stem("constau"), "const");});
test("constă -> const", function() {deepEqual( Stem("constă"), "const");});
test("consternare -> constern", function() {deepEqual( Stem("consternare"), "constern");});
test("consternat -> constern", function() {deepEqual( Stem("consternat"), "constern");});
test("constituentă -> constituent", function() {deepEqual( Stem("constituentă"), "constituent");});
test("constitui -> constit", function() {deepEqual( Stem("constitui"), "constit");});
test("constituia -> constitui", function() {deepEqual( Stem("constituia"), "constitui");});
test("constituie -> constitui", function() {deepEqual( Stem("constituie"), "constitui");});
test("constituim -> constitu", function() {deepEqual( Stem("constituim"), "constitu");});
test("constituind -> constitu", function() {deepEqual( Stem("constituind"), "constitu");});
test("constituire -> constitu", function() {deepEqual( Stem("constituire"), "constitu");});
test("constituirea -> constitu", function() {deepEqual( Stem("constituirea"), "constitu");});
test("constituiri -> constituir", function() {deepEqual( Stem("constituiri"), "constituir");});
test("constituirile -> constituir", function() {deepEqual( Stem("constituirile"), "constituir");});
test("constituise -> constitu", function() {deepEqual( Stem("constituise"), "constitu");});
test("constituit -> constitu", function() {deepEqual( Stem("constituit"), "constitu");});
test("constituită -> constitu", function() {deepEqual( Stem("constituită"), "constitu");});
test("constituite -> constitu", function() {deepEqual( Stem("constituite"), "constitu");});
test("constitutiv -> constitut", function() {deepEqual( Stem("constitutiv"), "constitut");});
test("constitutivă -> constitut", function() {deepEqual( Stem("constitutivă"), "constitut");});
test("constitutive -> constitut", function() {deepEqual( Stem("constitutive"), "constitut");});
test("constituţia -> constituţ", function() {deepEqual( Stem("constituţia"), "constituţ");});
test("constituţie -> constituţ", function() {deepEqual( Stem("constituţie"), "constituţ");});
test("constituţiunea -> constitut", function() {deepEqual( Stem("constituţiunea"), "constitut");});
test("constrângere -> constrâng", function() {deepEqual( Stem("constrângere"), "constrâng");});
test("constrângeri -> constrânger", function() {deepEqual( Stem("constrângeri"), "constrânger");});
test("constructiv -> construct", function() {deepEqual( Stem("constructiv"), "construct");});
test("constructivă -> construct", function() {deepEqual( Stem("constructivă"), "construct");});
test("constructuale -> constructual", function() {deepEqual( Stem("constructuale"), "constructual");});
test("construcţia -> construcţ", function() {deepEqual( Stem("construcţia"), "construcţ");});
test("construcţie -> construcţ", function() {deepEqual( Stem("construcţie"), "construcţ");});
test("construcţii -> construcţ", function() {deepEqual( Stem("construcţii"), "construcţ");});
test("construcţiile -> construcţ", function() {deepEqual( Stem("construcţiile"), "construcţ");});
test("construcţiune -> construct", function() {deepEqual( Stem("construcţiune"), "construct");});
test("construcţiunea -> construct", function() {deepEqual( Stem("construcţiunea"), "construct");});
test("construcţiunii -> construct", function() {deepEqual( Stem("construcţiunii"), "construct");});
test("construi -> constr", function() {deepEqual( Stem("construi"), "constr");});
test("construiască -> construiasc", function() {deepEqual( Stem("construiască"), "construiasc");});
test("construiesc -> construi", function() {deepEqual( Stem("construiesc"), "construi");});
test("construieşte -> construi", function() {deepEqual( Stem("construieşte"), "construi");});
test("construieşti -> construi", function() {deepEqual( Stem("construieşti"), "construi");});
test("construim -> constru", function() {deepEqual( Stem("construim"), "constru");});
test("construind -> constru", function() {deepEqual( Stem("construind"), "constru");});
test("construire -> constru", function() {deepEqual( Stem("construire"), "constru");});
test("construirea -> constru", function() {deepEqual( Stem("construirea"), "constru");});
test("construirii -> construir", function() {deepEqual( Stem("construirii"), "construir");});
test("construisem -> constru", function() {deepEqual( Stem("construisem"), "constru");});
test("construit -> construit", function() {deepEqual( Stem("construit"), "construit");});
test("construită -> construit", function() {deepEqual( Stem("construită"), "construit");});
test("consult -> consult", function() {deepEqual( Stem("consult"), "consult");});
test("consultant -> consult", function() {deepEqual( Stem("consultant"), "consult");});
test("consultare -> consult", function() {deepEqual( Stem("consultare"), "consult");});
test("consultat -> consult", function() {deepEqual( Stem("consultat"), "consult");});
test("consultaţi -> consult", function() {deepEqual( Stem("consultaţi"), "consult");});
test("consultă -> consult", function() {deepEqual( Stem("consultă"), "consult");});
test("consulţi -> consulţ", function() {deepEqual( Stem("consulţi"), "consulţ");});
test("consumat -> consum", function() {deepEqual( Stem("consumat"), "consum");});
test("consumată -> consum", function() {deepEqual( Stem("consumată"), "consum");});
test("consumatorii -> consum", function() {deepEqual( Stem("consumatorii"), "consum");});
test("consumaţie -> consum", function() {deepEqual( Stem("consumaţie"), "consum");});
test("consumă -> consum", function() {deepEqual( Stem("consumă"), "consum");});
test("consumării -> consumăr", function() {deepEqual( Stem("consumării"), "consumăr");});
test("consume -> consum", function() {deepEqual( Stem("consume"), "consum");});
test("conştient -> conştient", function() {deepEqual( Stem("conştient"), "conştient");});
test("conştientă -> conştient", function() {deepEqual( Stem("conştientă"), "conştient");});
test("conştiente -> conştient", function() {deepEqual( Stem("conştiente"), "conştient");});
test("conştienţi -> conştienţ", function() {deepEqual( Stem("conştienţi"), "conştienţ");});
test("conştienţiale -> conştienţial", function() {deepEqual( Stem("conştienţiale"), "conştienţial");});
test("conştienţialism -> conştienţialist", function() {deepEqual( Stem("conştienţialism"), "conştienţialist");});
test("conştienţialismul -> conştienţialist", function() {deepEqual( Stem("conştienţialismul"), "conştienţialist");});
test("conştienţialist -> conştienţialist", function() {deepEqual( Stem("conştienţialist"), "conştienţialist");});
test("conştienţialistă -> conştienţialist", function() {deepEqual( Stem("conştienţialistă"), "conştienţialist");});
test("conştienţialistul -> conştienţialist", function() {deepEqual( Stem("conştienţialistul"), "conştienţialist");});
test("conştiincioasă -> conştiinc", function() {deepEqual( Stem("conştiincioasă"), "conştiinc");});
test("conştiincioşi -> conştiinc", function() {deepEqual( Stem("conştiincioşi"), "conştiinc");});
test("conştiinţa -> conştiinţ", function() {deepEqual( Stem("conştiinţa"), "conştiinţ");});
test("conştiinţă -> conştiinţ", function() {deepEqual( Stem("conştiinţă"), "conştiinţ");});
test("conştiinţe -> conştiinţ", function() {deepEqual( Stem("conştiinţe"), "conştiinţ");});
test("conştiinţei -> conştiinţe", function() {deepEqual( Stem("conştiinţei"), "conştiinţe");});
test("conştiinţele -> conştiinţ", function() {deepEqual( Stem("conştiinţele"), "conştiinţ");});
test("conta -> cont", function() {deepEqual( Stem("conta"), "cont");});
test("contabil -> contabil", function() {deepEqual( Stem("contabil"), "contabil");});
test("contact -> contact", function() {deepEqual( Stem("contact"), "contact");});
test("contaminată -> contamin", function() {deepEqual( Stem("contaminată"), "contamin");});
test("contase -> cont", function() {deepEqual( Stem("contase"), "cont");});
test("contăm -> cont", function() {deepEqual( Stem("contăm"), "cont");});
test("conte -> cont", function() {deepEqual( Stem("conte"), "cont");});
test("contează -> cont", function() {deepEqual( Stem("contează"), "cont");});
test("contemplativ -> contempl", function() {deepEqual( Stem("contemplativ"), "contempl");});
test("contemplative -> contempl", function() {deepEqual( Stem("contemplative"), "contempl");});
test("contemplativii -> contempl", function() {deepEqual( Stem("contemplativii"), "contempl");});
test("contemplându -> contempl", function() {deepEqual( Stem("contemplându"), "contempl");});
test("contemporan -> contemporan", function() {deepEqual( Stem("contemporan"), "contemporan");});
test("contemporanilor -> contemporan", function() {deepEqual( Stem("contemporanilor"), "contemporan");});
test("contencios -> contenc", function() {deepEqual( Stem("contencios"), "contenc");});
test("conteneau -> conten", function() {deepEqual( Stem("conteneau"), "conten");});
test("contestată -> contest", function() {deepEqual( Stem("contestată"), "contest");});
test("contestaţii -> contest", function() {deepEqual( Stem("contestaţii"), "contest");});
test("contextualizate -> contextualiz", function() {deepEqual( Stem("contextualizate"), "contextualiz");});
test("conteze -> cont", function() {deepEqual( Stem("conteze"), "cont");});
test("contiguă -> contigu", function() {deepEqual( Stem("contiguă"), "contigu");});
test("contigue -> contigu", function() {deepEqual( Stem("contigue"), "contigu");});
test("contiguitate -> contigu", function() {deepEqual( Stem("contiguitate"), "contigu");});
test("contiguu -> contiguu", function() {deepEqual( Stem("contiguu"), "contiguu");});
test("contimporană -> contimporan", function() {deepEqual( Stem("contimporană"), "contimporan");});
test("contimporane -> contimporan", function() {deepEqual( Stem("contimporane"), "contimporan");});
test("contimporaneitate -> contimporan", function() {deepEqual( Stem("contimporaneitate"), "contimporan");});
test("contine -> contin", function() {deepEqual( Stem("contine"), "contin");});
test("continent -> continent", function() {deepEqual( Stem("continent"), "continent");});
test("continental -> continental", function() {deepEqual( Stem("continental"), "continental");});
test("continentală -> continental", function() {deepEqual( Stem("continentală"), "continental");});
test("continente -> continent", function() {deepEqual( Stem("continente"), "continent");});
test("contingent -> contingent", function() {deepEqual( Stem("contingent"), "contingent");});
test("contingentului -> contingent", function() {deepEqual( Stem("contingentului"), "contingent");});
test("continua -> continu", function() {deepEqual( Stem("continua"), "continu");});
test("continuai -> continu", function() {deepEqual( Stem("continuai"), "continu");});
test("continuam -> continu", function() {deepEqual( Stem("continuam"), "continu");});
test("continuare -> continu", function() {deepEqual( Stem("continuare"), "continu");});
test("continuarea -> continu", function() {deepEqual( Stem("continuarea"), "continu");});
test("continuat -> continu", function() {deepEqual( Stem("continuat"), "continu");});
test("continuată -> continu", function() {deepEqual( Stem("continuată"), "continu");});
test("continuator -> continu", function() {deepEqual( Stem("continuator"), "continu");});
test("continuau -> continu", function() {deepEqual( Stem("continuau"), "continu");});
test("continuând -> continu", function() {deepEqual( Stem("continuând"), "continu");});
test("continuându -> continu", function() {deepEqual( Stem("continuându"), "continu");});
test("continuă -> continu", function() {deepEqual( Stem("continuă"), "continu");});
test("continuăm -> continu", function() {deepEqual( Stem("continuăm"), "continu");});
test("continuări -> continuăr", function() {deepEqual( Stem("continuări"), "continuăr");});
test("continue -> continu", function() {deepEqual( Stem("continue"), "continu");});
test("continuitate -> continu", function() {deepEqual( Stem("continuitate"), "continu");});
test("continuităţii -> continu", function() {deepEqual( Stem("continuităţii"), "continu");});
test("continuităţile -> continu", function() {deepEqual( Stem("continuităţile"), "continu");});
test("continuînd -> continuînd", function() {deepEqual( Stem("continuînd"), "continuînd");});
test("continuu -> continuu", function() {deepEqual( Stem("continuu"), "continuu");});
test("continuului -> continu", function() {deepEqual( Stem("continuului"), "continu");});
test("contoare -> contoar", function() {deepEqual( Stem("contoare"), "contoar");});
test("contoarele -> contoar", function() {deepEqual( Stem("contoarele"), "contoar");});
test("contoarelor -> contoar", function() {deepEqual( Stem("contoarelor"), "contoar");});
test("contondent -> contondent", function() {deepEqual( Stem("contondent"), "contondent");});
test("contopească -> contop", function() {deepEqual( Stem("contopească"), "contop");});
test("contopesc -> contop", function() {deepEqual( Stem("contopesc"), "contop");});
test("contopeşte -> contop", function() {deepEqual( Stem("contopeşte"), "contop");});
test("contopind -> contop", function() {deepEqual( Stem("contopind"), "contop");});
test("contopire -> contop", function() {deepEqual( Stem("contopire"), "contop");});
test("contopirea -> contop", function() {deepEqual( Stem("contopirea"), "contop");});
test("contor -> contor", function() {deepEqual( Stem("contor"), "contor");});
test("contorizarea -> contoriz", function() {deepEqual( Stem("contorizarea"), "contoriz");});
test("contorizează -> contoriz", function() {deepEqual( Stem("contorizează"), "contoriz");});
test("contorsionat -> contorsion", function() {deepEqual( Stem("contorsionat"), "contorsion");});
test("contorsionată -> contorsion", function() {deepEqual( Stem("contorsionată"), "contorsion");});
test("contra -> contr", function() {deepEqual( Stem("contra"), "contr");});
test("contraargumente -> contraargument", function() {deepEqual( Stem("contraargumente"), "contraargument");});
test("contraatac -> contraatac", function() {deepEqual( Stem("contraatac"), "contraatac");});
test("contraataca -> contraatac", function() {deepEqual( Stem("contraataca"), "contraatac");});
test("contrabanda -> contraband", function() {deepEqual( Stem("contrabanda"), "contraband");});
test("contrabandă -> contraband", function() {deepEqual( Stem("contrabandă"), "contraband");});
test("contrabandişti -> contrabandist", function() {deepEqual( Stem("contrabandişti"), "contrabandist");});
test("contrabas -> contrabas", function() {deepEqual( Stem("contrabas"), "contrabas");});
test("contracandidatului -> contracandid", function() {deepEqual( Stem("contracandidatului"), "contracandid");});
test("contracandidaţi -> contracandid", function() {deepEqual( Stem("contracandidaţi"), "contracandid");});
test("contracara -> contracar", function() {deepEqual( Stem("contracara"), "contracar");});
test("contracarată -> contracar", function() {deepEqual( Stem("contracarată"), "contracar");});
test("contracarate -> contracar", function() {deepEqual( Stem("contracarate"), "contracar");});
test("contract -> contract", function() {deepEqual( Stem("contract"), "contract");});
test("contractase -> contract", function() {deepEqual( Stem("contractase"), "contract");});
test("contractat -> contract", function() {deepEqual( Stem("contractat"), "contract");});
test("contractată -> contract", function() {deepEqual( Stem("contractată"), "contract");});
test("contractate -> contract", function() {deepEqual( Stem("contractate"), "contract");});
test("contractaţi -> contract", function() {deepEqual( Stem("contractaţi"), "contract");});
test("contractează -> contract", function() {deepEqual( Stem("contractează"), "contract");});
test("contradictio -> contradictio", function() {deepEqual( Stem("contradictio"), "contradictio");});
test("contradictoriu -> contradictoriu", function() {deepEqual( Stem("contradictoriu"), "contradictoriu");});
test("contradicţia -> contradicţ", function() {deepEqual( Stem("contradicţia"), "contradicţ");});
test("contradicţie -> contradicţ", function() {deepEqual( Stem("contradicţie"), "contradicţ");});
test("contradicţiei -> contradicţ", function() {deepEqual( Stem("contradicţiei"), "contradicţ");});
test("contradicţiune -> contradict", function() {deepEqual( Stem("contradicţiune"), "contradict");});
test("contradicţiunii -> contradict", function() {deepEqual( Stem("contradicţiunii"), "contradict");});
test("contramaistru -> contramaistru", function() {deepEqual( Stem("contramaistru"), "contramaistru");});
test("contramaistrul -> contramaistr", function() {deepEqual( Stem("contramaistrul"), "contramaistr");});
test("contramaiştri -> contramaiştr", function() {deepEqual( Stem("contramaiştri"), "contramaiştr");});
test("contramandat -> contramand", function() {deepEqual( Stem("contramandat"), "contramand");});
test("contrapunct -> contrapunct", function() {deepEqual( Stem("contrapunct"), "contrapunct");});
test("contrar -> contrar", function() {deepEqual( Stem("contrar"), "contrar");});
test("contrară -> contr", function() {deepEqual( Stem("contrară"), "contr");});
test("contrare -> contr", function() {deepEqual( Stem("contrare"), "contr");});
test("contrariază -> contrariaz", function() {deepEqual( Stem("contrariază"), "contrariaz");});
test("contrarii -> contrar", function() {deepEqual( Stem("contrarii"), "contrar");});
test("contrariul -> contrar", function() {deepEqual( Stem("contrariul"), "contrar");});
test("contrast -> contrast", function() {deepEqual( Stem("contrast"), "contrast");});
test("contrastează -> contrast", function() {deepEqual( Stem("contrastează"), "contrast");});
test("contrastul -> contrast", function() {deepEqual( Stem("contrastul"), "contrast");});
test("contratimp -> contratimp", function() {deepEqual( Stem("contratimp"), "contratimp");});
test("contravenind -> contraven", function() {deepEqual( Stem("contravenind"), "contraven");});
test("contravin -> contravin", function() {deepEqual( Stem("contravin"), "contravin");});
test("contravine -> contravin", function() {deepEqual( Stem("contravine"), "contravin");});
test("contrazică -> contraz", function() {deepEqual( Stem("contrazică"), "contraz");});
test("contrazice -> contraz", function() {deepEqual( Stem("contrazice"), "contraz");});
test("contrazicea -> contraz", function() {deepEqual( Stem("contrazicea"), "contraz");});
test("contrazicere -> contrazic", function() {deepEqual( Stem("contrazicere"), "contrazic");});
test("contrazicerea -> contrazic", function() {deepEqual( Stem("contrazicerea"), "contrazic");});
test("contraziceri -> contrazicer", function() {deepEqual( Stem("contraziceri"), "contrazicer");});
test("contrazici -> contraz", function() {deepEqual( Stem("contrazici"), "contraz");});
test("contră -> contr", function() {deepEqual( Stem("contră"), "contr");});
test("contribui -> contrib", function() {deepEqual( Stem("contribui"), "contrib");});
test("contribuia -> contribui", function() {deepEqual( Stem("contribuia"), "contribui");});
test("contribuie -> contribui", function() {deepEqual( Stem("contribuie"), "contribui");});
test("contribuind -> contribu", function() {deepEqual( Stem("contribuind"), "contribu");});
test("contribuit -> contribu", function() {deepEqual( Stem("contribuit"), "contribu");});
test("contribuţiile -> contribuţ", function() {deepEqual( Stem("contribuţiile"), "contribuţ");});
test("contribuţiune -> contribut", function() {deepEqual( Stem("contribuţiune"), "contribut");});
test("control -> control", function() {deepEqual( Stem("control"), "control");});
test("controla -> control", function() {deepEqual( Stem("controla"), "control");});
test("controlabil -> control", function() {deepEqual( Stem("controlabil"), "control");});
test("controlat -> control", function() {deepEqual( Stem("controlat"), "control");});
test("controlând -> control", function() {deepEqual( Stem("controlând"), "control");});
test("controlez -> control", function() {deepEqual( Stem("controlez"), "control");});
test("controlul -> control", function() {deepEqual( Stem("controlul"), "control");});
test("contura -> contur", function() {deepEqual( Stem("contura"), "contur");});
test("conturam -> contur", function() {deepEqual( Stem("conturam"), "contur");});
test("conturul -> contur", function() {deepEqual( Stem("conturul"), "contur");});
test("contururile -> conturur", function() {deepEqual( Stem("contururile"), "conturur");});
test("conţin -> conţin", function() {deepEqual( Stem("conţin"), "conţin");});
test("conţină -> conţin", function() {deepEqual( Stem("conţină"), "conţin");});
test("conţine -> conţin", function() {deepEqual( Stem("conţine"), "conţin");});
test("conţinea -> conţin", function() {deepEqual( Stem("conţinea"), "conţin");});
test("conţineau -> conţin", function() {deepEqual( Stem("conţineau"), "conţin");});
test("conţinînd -> conţinînd", function() {deepEqual( Stem("conţinînd"), "conţinînd");});
test("conţinut -> conţin", function() {deepEqual( Stem("conţinut"), "conţin");});
test("conţinută -> conţin", function() {deepEqual( Stem("conţinută"), "conţin");});
test("conţinute -> conţin", function() {deepEqual( Stem("conţinute"), "conţin");});
test("conţinutul -> conţin", function() {deepEqual( Stem("conţinutul"), "conţin");});
test("conţinutului -> conţin", function() {deepEqual( Stem("conţinutului"), "conţin");});
test("conţinuturi -> conţinutur", function() {deepEqual( Stem("conţinuturi"), "conţinutur");});
test("conţinuturile -> conţinutur", function() {deepEqual( Stem("conţinuturile"), "conţinutur");});
test("conţinuturilor -> conţinutur", function() {deepEqual( Stem("conţinuturilor"), "conţinutur");});
test("conu -> conu", function() {deepEqual( Stem("conu"), "conu");});
test("convalescent -> convalescent", function() {deepEqual( Stem("convalescent"), "convalescent");});
test("conveargă -> convearg", function() {deepEqual( Stem("conveargă"), "convearg");});
test("convenabil -> conven", function() {deepEqual( Stem("convenabil"), "conven");});
test("convenabilă -> conven", function() {deepEqual( Stem("convenabilă"), "conven");});
test("conveneam -> conven", function() {deepEqual( Stem("conveneam"), "conven");});
test("conveni -> conven", function() {deepEqual( Stem("conveni"), "conven");});
test("convenind -> conven", function() {deepEqual( Stem("convenind"), "conven");});
test("convenit -> conven", function() {deepEqual( Stem("convenit"), "conven");});
test("convenţie -> convenţ", function() {deepEqual( Stem("convenţie"), "convenţ");});
test("convenţional -> convenţional", function() {deepEqual( Stem("convenţional"), "convenţional");});
test("convenţionale -> convenţional", function() {deepEqual( Stem("convenţionale"), "convenţional");});
test("convenţionalismul -> convenţionalist", function() {deepEqual( Stem("convenţionalismul"), "convenţionalist");});
test("convenţionalismului -> convenţionalist", function() {deepEqual( Stem("convenţionalismului"), "convenţionalist");});
test("convenţionalist -> convenţionalist", function() {deepEqual( Stem("convenţionalist"), "convenţionalist");});
test("convenţionalistă -> convenţionalist", function() {deepEqual( Stem("convenţionalistă"), "convenţionalist");});
test("convenţionalişti -> convenţionalist", function() {deepEqual( Stem("convenţionalişti"), "convenţionalist");});
test("convenţiune -> convent", function() {deepEqual( Stem("convenţiune"), "convent");});
test("convenţiuni -> convent", function() {deepEqual( Stem("convenţiuni"), "convent");});
test("convenţiunii -> convent", function() {deepEqual( Stem("convenţiunii"), "convent");});
test("conversaţia -> convers", function() {deepEqual( Stem("conversaţia"), "convers");});
test("conversaţie -> convers", function() {deepEqual( Stem("conversaţie"), "convers");});
test("conversaţii -> convers", function() {deepEqual( Stem("conversaţii"), "convers");});
test("convin -> convin", function() {deepEqual( Stem("convin"), "convin");});
test("convine -> convin", function() {deepEqual( Stem("convine"), "convin");});
test("convingă -> conving", function() {deepEqual( Stem("convingă"), "conving");});
test("convingătoare -> conving", function() {deepEqual( Stem("convingătoare"), "conving");});
test("convinge -> conving", function() {deepEqual( Stem("convinge"), "conving");});
test("convingem -> conving", function() {deepEqual( Stem("convingem"), "conving");});
test("convingere -> conving", function() {deepEqual( Stem("convingere"), "conving");});
test("convingerea -> conving", function() {deepEqual( Stem("convingerea"), "conving");});
test("convingeri -> convinger", function() {deepEqual( Stem("convingeri"), "convinger");});
test("convingerile -> convinger", function() {deepEqual( Stem("convingerile"), "convinger");});
test("convingi -> conving", function() {deepEqual( Stem("convingi"), "conving");});
test("convins -> convins", function() {deepEqual( Stem("convins"), "convins");});
test("convinsă -> convins", function() {deepEqual( Stem("convinsă"), "convins");});
test("convinşi -> convinş", function() {deepEqual( Stem("convinşi"), "convinş");});
test("convivii -> conviv", function() {deepEqual( Stem("convivii"), "conviv");});
test("convocat -> convoc", function() {deepEqual( Stem("convocat"), "convoc");});
test("convoi -> convo", function() {deepEqual( Stem("convoi"), "convo");});
test("convorbire -> convorb", function() {deepEqual( Stem("convorbire"), "convorb");});
test("convorbirea -> convorb", function() {deepEqual( Stem("convorbirea"), "convorb");});
test("convorbiri -> convorbir", function() {deepEqual( Stem("convorbiri"), "convorbir");});
test("convorbirile -> convorbir", function() {deepEqual( Stem("convorbirile"), "convorbir");});
test("convorbirilor -> convorbir", function() {deepEqual( Stem("convorbirilor"), "convorbir");});
test("convulsie -> convuls", function() {deepEqual( Stem("convulsie"), "convuls");});
test("convulsiile -> convuls", function() {deepEqual( Stem("convulsiile"), "convuls");});
test("convulsiuni -> convulsiun", function() {deepEqual( Stem("convulsiuni"), "convulsiun");});
test("convulziv -> convulz", function() {deepEqual( Stem("convulziv"), "convulz");});
test("convulzive -> convulz", function() {deepEqual( Stem("convulzive"), "convulz");});
test("conzist -> conzist", function() {deepEqual( Stem("conzist"), "conzist");});
test("cooperează -> cooper", function() {deepEqual( Stem("cooperează"), "cooper");});
test("coordonata -> coordon", function() {deepEqual( Stem("coordonata"), "coordon");});
test("coordonată -> coordon", function() {deepEqual( Stem("coordonată"), "coordon");});
test("coordonate -> coordon", function() {deepEqual( Stem("coordonate"), "coordon");});
test("coordonatele -> coordon", function() {deepEqual( Stem("coordonatele"), "coordon");});
test("copac -> copac", function() {deepEqual( Stem("copac"), "copac");});
test("copaci -> copac", function() {deepEqual( Stem("copaci"), "copac");});
test("copacii -> copac", function() {deepEqual( Stem("copacii"), "copac");});
test("copacilor -> copac", function() {deepEqual( Stem("copacilor"), "copac");});
test("copăcei -> copăce", function() {deepEqual( Stem("copăcei"), "copăce");});
test("copăcel -> copăcel", function() {deepEqual( Stem("copăcel"), "copăcel");});
test("copcile -> copc", function() {deepEqual( Stem("copcile"), "copc");});
test("copernic -> copern", function() {deepEqual( Stem("copernic"), "copern");});
test("copertă -> copert", function() {deepEqual( Stem("copertă"), "copert");});
test("coperte -> copert", function() {deepEqual( Stem("coperte"), "copert");});
test("copia -> copi", function() {deepEqual( Stem("copia"), "copi");});
test("copiat -> copiat", function() {deepEqual( Stem("copiat"), "copiat");});
test("copieze -> copiez", function() {deepEqual( Stem("copieze"), "copiez");});
test("copii -> cop", function() {deepEqual( Stem("copii"), "cop");});
test("copiii -> copii", function() {deepEqual( Stem("copiii"), "copii");});
test("copiile -> cop", function() {deepEqual( Stem("copiile"), "cop");});
test("copiilor -> cop", function() {deepEqual( Stem("copiilor"), "cop");});
test("copil -> copil", function() {deepEqual( Stem("copil"), "copil");});
test("copilaşi -> copil", function() {deepEqual( Stem("copilaşi"), "copil");});
test("copilărească -> copilăr", function() {deepEqual( Stem("copilărească"), "copilăr");});
test("copilăresc -> copilăr", function() {deepEqual( Stem("copilăresc"), "copilăr");});
test("copilăreşti -> copilăr", function() {deepEqual( Stem("copilăreşti"), "copilăr");});
test("copilăria -> copilăr", function() {deepEqual( Stem("copilăria"), "copilăr");});
test("copilărie -> copilăr", function() {deepEqual( Stem("copilărie"), "copilăr");});
test("copilăriei -> copilăr", function() {deepEqual( Stem("copilăriei"), "copilăr");});
test("copilăroasă -> copilăr", function() {deepEqual( Stem("copilăroasă"), "copilăr");});
test("copilăros -> copilăr", function() {deepEqual( Stem("copilăros"), "copilăr");});
test("copilăroşi -> copilăr", function() {deepEqual( Stem("copilăroşi"), "copilăr");});
test("copilul -> copil", function() {deepEqual( Stem("copilul"), "copil");});
test("copilului -> copil", function() {deepEqual( Stem("copilului"), "copil");});
test("copioase -> copioas", function() {deepEqual( Stem("copioase"), "copioas");});
test("copitele -> copit", function() {deepEqual( Stem("copitele"), "copit");});
test("copleşit -> copleş", function() {deepEqual( Stem("copleşit"), "copleş");});
test("copleşitoare -> copleş", function() {deepEqual( Stem("copleşitoare"), "copleş");});
test("copleşitor -> copleş", function() {deepEqual( Stem("copleşitor"), "copleş");});
test("copoului -> copo", function() {deepEqual( Stem("copoului"), "copo");});
test("copt -> copt", function() {deepEqual( Stem("copt"), "copt");});
test("cor -> cor", function() {deepEqual( Stem("cor"), "cor");});
test("corabu -> corabu", function() {deepEqual( Stem("corabu"), "corabu");});
test("corabule -> corabul", function() {deepEqual( Stem("corabule"), "corabul");});
test("cordial -> cordial", function() {deepEqual( Stem("cordial"), "cordial");});
test("cordialitate -> cordial", function() {deepEqual( Stem("cordialitate"), "cordial");});
test("corectate -> corect", function() {deepEqual( Stem("corectate"), "corect");});
test("corectă -> corect", function() {deepEqual( Stem("corectă"), "corect");});
test("corectează -> corect", function() {deepEqual( Stem("corectează"), "corect");});
test("corectitudine -> corectitudin", function() {deepEqual( Stem("corectitudine"), "corectitudin");});
test("corectiv -> corect", function() {deepEqual( Stem("corectiv"), "corect");});
test("corectivă -> corect", function() {deepEqual( Stem("corectivă"), "corect");});
test("corective -> corect", function() {deepEqual( Stem("corective"), "corect");});
test("corespondent -> corespondent", function() {deepEqual( Stem("corespondent"), "corespondent");});
test("corespondentă -> corespondent", function() {deepEqual( Stem("corespondentă"), "corespondent");});
test("corespondentul -> corespondent", function() {deepEqual( Stem("corespondentul"), "corespondent");});
test("corespondenţa -> corespondenţ", function() {deepEqual( Stem("corespondenţa"), "corespondenţ");});
test("corespondenţă -> corespondenţ", function() {deepEqual( Stem("corespondenţă"), "corespondenţ");});
test("corespund -> corespund", function() {deepEqual( Stem("corespund"), "corespund");});
test("corespundă -> corespund", function() {deepEqual( Stem("corespundă"), "corespund");});
test("corespunde -> corespund", function() {deepEqual( Stem("corespunde"), "corespund");});
test("corespundea -> corespund", function() {deepEqual( Stem("corespundea"), "corespund");});
test("corespunzătoare -> corespunz", function() {deepEqual( Stem("corespunzătoare"), "corespunz");});
test("corespunzător -> corespunz", function() {deepEqual( Stem("corespunzător"), "corespunz");});
test("coridor -> coridor", function() {deepEqual( Stem("coridor"), "coridor");});
test("corigentă -> corigent", function() {deepEqual( Stem("corigentă"), "corigent");});
test("corneliu -> corneliu", function() {deepEqual( Stem("corneliu"), "corneliu");});
test("coroană -> coroan", function() {deepEqual( Stem("coroană"), "coroan");});
test("corp -> corp", function() {deepEqual( Stem("corp"), "corp");});
test("corpul -> corp", function() {deepEqual( Stem("corpul"), "corp");});
test("corpului -> corp", function() {deepEqual( Stem("corpului"), "corp");});
test("corpuri -> corpur", function() {deepEqual( Stem("corpuri"), "corpur");});
test("corpurile -> corpur", function() {deepEqual( Stem("corpurile"), "corpur");});
test("corpurilor -> corpur", function() {deepEqual( Stem("corpurilor"), "corpur");});
test("cort -> cort", function() {deepEqual( Stem("cort"), "cort");});
test("corturi -> cortur", function() {deepEqual( Stem("corturi"), "cortur");});
test("corturile -> cortur", function() {deepEqual( Stem("corturile"), "cortur");});
test("corturilor -> cortur", function() {deepEqual( Stem("corturilor"), "cortur");});
test("corul -> cor", function() {deepEqual( Stem("corul"), "cor");});
test("corurilor -> corur", function() {deepEqual( Stem("corurilor"), "corur");});
test("cosit -> cosit", function() {deepEqual( Stem("cosit"), "cosit");});
test("cositor -> cosit", function() {deepEqual( Stem("cositor"), "cosit");});
test("cosmică -> cosmic", function() {deepEqual( Stem("cosmică"), "cosmic");});
test("cosmologie -> cosmolog", function() {deepEqual( Stem("cosmologie"), "cosmolog");});
test("costa -> cost", function() {deepEqual( Stem("costa"), "cost");});
test("costă -> cost", function() {deepEqual( Stem("costă"), "cost");});
test("costică -> costic", function() {deepEqual( Stem("costică"), "costic");});
test("costişă -> costiş", function() {deepEqual( Stem("costişă"), "costiş");});
test("costului -> cost", function() {deepEqual( Stem("costului"), "cost");});
test("costum -> costum", function() {deepEqual( Stem("costum"), "costum");});
test("costume -> costum", function() {deepEqual( Stem("costume"), "costum");});
test("costumul -> costum", function() {deepEqual( Stem("costumul"), "costum");});
test("coşciugele -> coşciug", function() {deepEqual( Stem("coşciugele"), "coşciug");});
test("coşciugul -> coşciug", function() {deepEqual( Stem("coşciugul"), "coşciug");});
test("coşul -> coş", function() {deepEqual( Stem("coşul"), "coş");});
test("coşuleţe -> coşuleţ", function() {deepEqual( Stem("coşuleţe"), "coşuleţ");});
test("cot -> cot", function() {deepEqual( Stem("cot"), "cot");});
test("cota -> cot", function() {deepEqual( Stem("cota"), "cot");});
test("cotârcea -> cotârc", function() {deepEqual( Stem("cotârcea"), "cotârc");});
test("cotă -> cot", function() {deepEqual( Stem("cotă"), "cot");});
test("cotele -> cot", function() {deepEqual( Stem("cotele"), "cot");});
test("cotidian -> cotidian", function() {deepEqual( Stem("cotidian"), "cotidian");});
test("cotidiane -> cotidian", function() {deepEqual( Stem("cotidiane"), "cotidian");});
test("cotidianelor -> cotidian", function() {deepEqual( Stem("cotidianelor"), "cotidian");});
test("cotidiene -> cotidien", function() {deepEqual( Stem("cotidiene"), "cotidien");});
test("cotilioanele -> cotilioan", function() {deepEqual( Stem("cotilioanele"), "cotilioan");});
test("cotitura -> cotitur", function() {deepEqual( Stem("cotitura"), "cotitur");});
test("cotitură -> cotit", function() {deepEqual( Stem("cotitură"), "cotit");});
test("cotroceni -> cotrocen", function() {deepEqual( Stem("cotroceni"), "cotrocen");});
test("cotropitoare -> cotrop", function() {deepEqual( Stem("cotropitoare"), "cotrop");});
test("cotul -> cot", function() {deepEqual( Stem("cotul"), "cot");});
test("country -> country", function() {deepEqual( Stem("country"), "country");});
test("covârşitoare -> covârş", function() {deepEqual( Stem("covârşitoare"), "covârş");});
test("coviltir -> coviltir", function() {deepEqual( Stem("coviltir"), "coviltir");});
test("coviltire -> covilt", function() {deepEqual( Stem("coviltire"), "covilt");});
test("covor -> covor", function() {deepEqual( Stem("covor"), "covor");});
test("cracovia -> cracov", function() {deepEqual( Stem("cracovia"), "cracov");});
test("craiova -> craiov", function() {deepEqual( Stem("craiova"), "craiov");});
test("craiului -> crai", function() {deepEqual( Stem("craiului"), "crai");});
test("cranii -> cran", function() {deepEqual( Stem("cranii"), "cran");});
test("craniu -> craniu", function() {deepEqual( Stem("craniu"), "craniu");});
test("craniul -> cran", function() {deepEqual( Stem("craniul"), "cran");});
test("crapă -> crap", function() {deepEqual( Stem("crapă"), "crap");});
test("crasă -> cras", function() {deepEqual( Stem("crasă"), "cras");});
test("cratere -> crat", function() {deepEqual( Stem("cratere"), "crat");});
test("cravaşă -> cravaş", function() {deepEqual( Stem("cravaşă"), "cravaş");});
test("cravata -> cravat", function() {deepEqual( Stem("cravata"), "cravat");});
test("cravată -> cravat", function() {deepEqual( Stem("cravată"), "cravat");});
test("cravate -> cravat", function() {deepEqual( Stem("cravate"), "cravat");});
test("cravatei -> cravat", function() {deepEqual( Stem("cravatei"), "cravat");});
test("crâmpeie -> crâmpei", function() {deepEqual( Stem("crâmpeie"), "crâmpei");});
test("crâncen -> crâncen", function() {deepEqual( Stem("crâncen"), "crâncen");});
test("crâncenă -> crâncen", function() {deepEqual( Stem("crâncenă"), "crâncen");});
test("crâşmă -> crâşm", function() {deepEqual( Stem("crâşmă"), "crâşm");});
test("crăci -> crăc", function() {deepEqual( Stem("crăci"), "crăc");});
test("crăcilor -> crăc", function() {deepEqual( Stem("crăcilor"), "crăc");});
test("crăpa -> crăp", function() {deepEqual( Stem("crăpa"), "crăp");});
test("crăpate -> crăpat", function() {deepEqual( Stem("crăpate"), "crăpat");});
test("crea -> cre", function() {deepEqual( Stem("crea"), "cre");});
test("creadă -> cread", function() {deepEqual( Stem("creadă"), "cread");});
test("creangă -> creang", function() {deepEqual( Stem("creangă"), "creang");});
test("creare -> crear", function() {deepEqual( Stem("creare"), "crear");});
test("crearea -> crear", function() {deepEqual( Stem("crearea"), "crear");});
test("crease -> creas", function() {deepEqual( Stem("crease"), "creas");});
test("creasta -> creast", function() {deepEqual( Stem("creasta"), "creast");});
test("creastă -> creast", function() {deepEqual( Stem("creastă"), "creast");});
test("creat -> creat", function() {deepEqual( Stem("creat"), "creat");});
test("creată -> creat", function() {deepEqual( Stem("creată"), "creat");});
test("create -> creat", function() {deepEqual( Stem("create"), "creat");});
test("creatoare -> creatoar", function() {deepEqual( Stem("creatoare"), "creatoar");});
test("creator -> creator", function() {deepEqual( Stem("creator"), "creator");});
test("creatorul -> creator", function() {deepEqual( Stem("creatorul"), "creator");});
test("creaturii -> creatur", function() {deepEqual( Stem("creaturii"), "creatur");});
test("creaţia -> creaţ", function() {deepEqual( Stem("creaţia"), "creaţ");});
test("creaţie -> creaţ", function() {deepEqual( Stem("creaţie"), "creaţ");});
test("creaţiune -> creaţiun", function() {deepEqual( Stem("creaţiune"), "creaţiun");});
test("creaţiunii -> creaţiun", function() {deepEqual( Stem("creaţiunii"), "creaţiun");});
test("crează -> creaz", function() {deepEqual( Stem("crează"), "creaz");});
test("creând -> creând", function() {deepEqual( Stem("creând"), "creând");});
test("creăm -> cre", function() {deepEqual( Stem("creăm"), "cre");});
test("creării -> creăr", function() {deepEqual( Stem("creării"), "creăr");});
test("cred -> cred", function() {deepEqual( Stem("cred"), "cred");});
test("crede -> cred", function() {deepEqual( Stem("crede"), "cred");});
test("credea -> cred", function() {deepEqual( Stem("credea"), "cred");});
test("credeai -> cred", function() {deepEqual( Stem("credeai"), "cred");});
test("credeam -> cred", function() {deepEqual( Stem("credeam"), "cred");});
test("credeau -> cred", function() {deepEqual( Stem("credeau"), "cred");});
test("credem -> cred", function() {deepEqual( Stem("credem"), "cred");});
test("credeţi -> cred", function() {deepEqual( Stem("credeţi"), "cred");});
test("credincioase -> credinc", function() {deepEqual( Stem("credincioase"), "credinc");});
test("credincios -> credinc", function() {deepEqual( Stem("credincios"), "credinc");});
test("credincioşi -> credinc", function() {deepEqual( Stem("credincioşi"), "credinc");});
test("credinţa -> credinţ", function() {deepEqual( Stem("credinţa"), "credinţ");});
test("credinţă -> credinţ", function() {deepEqual( Stem("credinţă"), "credinţ");});
test("credinţe -> credinţ", function() {deepEqual( Stem("credinţe"), "credinţ");});
test("credinţele -> credinţ", function() {deepEqual( Stem("credinţele"), "credinţ");});
test("creditor -> credit", function() {deepEqual( Stem("creditor"), "credit");});
test("credulitatea -> credul", function() {deepEqual( Stem("credulitatea"), "credul");});
test("creează -> creeaz", function() {deepEqual( Stem("creează"), "creeaz");});
test("creez -> creez", function() {deepEqual( Stem("creez"), "creez");});
test("creeze -> creez", function() {deepEqual( Stem("creeze"), "creez");});
test("creier -> creier", function() {deepEqual( Stem("creier"), "creier");});
test("creierii -> creier", function() {deepEqual( Stem("creierii"), "creier");});
test("creierul -> creier", function() {deepEqual( Stem("creierul"), "creier");});
test("creierului -> creier", function() {deepEqual( Stem("creierului"), "creier");});
test("creioane -> creioan", function() {deepEqual( Stem("creioane"), "creioan");});
test("creionul -> creion", function() {deepEqual( Stem("creionul"), "creion");});
test("cremei -> creme", function() {deepEqual( Stem("cremei"), "creme");});
test("creneluri -> crenelur", function() {deepEqual( Stem("creneluri"), "crenelur");});
test("crepusculare -> crepuscul", function() {deepEqual( Stem("crepusculare"), "crepuscul");});
test("crepusculului -> crepuscul", function() {deepEqual( Stem("crepusculului"), "crepuscul");});
test("cresc -> cresc", function() {deepEqual( Stem("cresc"), "cresc");});
test("crescând -> cresc", function() {deepEqual( Stem("crescând"), "cresc");});
test("crescendo -> crescendo", function() {deepEqual( Stem("crescendo"), "crescendo");});
test("crescut -> crescut", function() {deepEqual( Stem("crescut"), "crescut");});
test("crescută -> crescut", function() {deepEqual( Stem("crescută"), "crescut");});
test("crescute -> crescut", function() {deepEqual( Stem("crescute"), "crescut");});
test("crescuţi -> crescuţ", function() {deepEqual( Stem("crescuţi"), "crescuţ");});
test("cresta -> crest", function() {deepEqual( Stem("cresta"), "crest");});
test("crestătură -> crestăt", function() {deepEqual( Stem("crestătură"), "crestăt");});
test("crestături -> crestătur", function() {deepEqual( Stem("crestături"), "crestătur");});
test("creste -> crest", function() {deepEqual( Stem("creste"), "crest");});
test("creşe -> creş", function() {deepEqual( Stem("creşe"), "creş");});
test("creşte -> creşt", function() {deepEqual( Stem("creşte"), "creşt");});
test("creştea -> creşt", function() {deepEqual( Stem("creştea"), "creşt");});
test("creşteau -> creşt", function() {deepEqual( Stem("creşteau"), "creşt");});
test("creştere -> creşt", function() {deepEqual( Stem("creştere"), "creşt");});
test("creşterea -> creşt", function() {deepEqual( Stem("creşterea"), "creşt");});
test("creşteri -> creşter", function() {deepEqual( Stem("creşteri"), "creşter");});
test("creşterile -> creşter", function() {deepEqual( Stem("creşterile"), "creşter");});
test("creştet -> creştet", function() {deepEqual( Stem("creştet"), "creştet");});
test("creşteţi -> creşt", function() {deepEqual( Stem("creşteţi"), "creşt");});
test("creştin -> creştin", function() {deepEqual( Stem("creştin"), "creştin");});
test("creştină -> creştin", function() {deepEqual( Stem("creştină"), "creştin");});
test("creştinătăţii -> creştinătăţ", function() {deepEqual( Stem("creştinătăţii"), "creştinătăţ");});
test("creştine -> creştin", function() {deepEqual( Stem("creştine"), "creştin");});
test("creştinească -> creştin", function() {deepEqual( Stem("creştinească"), "creştin");});
test("creştini -> creştin", function() {deepEqual( Stem("creştini"), "creştin");});
test("creştinism -> creştinist", function() {deepEqual( Stem("creştinism"), "creştinist");});
test("creştinismul -> creştinist", function() {deepEqual( Stem("creştinismul"), "creştinist");});
test("creştinismului -> creştinist", function() {deepEqual( Stem("creştinismului"), "creştinist");});
test("creta -> cret", function() {deepEqual( Stem("creta"), "cret");});
test("cretină -> cretin", function() {deepEqual( Stem("cretină"), "cretin");});
test("cretinilor -> cretin", function() {deepEqual( Stem("cretinilor"), "cretin");});
test("cretinizînd -> cretinizînd", function() {deepEqual( Stem("cretinizînd"), "cretinizînd");});
test("creţ -> creţ", function() {deepEqual( Stem("creţ"), "creţ");});
test("crevete -> crevet", function() {deepEqual( Stem("crevete"), "crevet");});
test("creveţi -> crev", function() {deepEqual( Stem("creveţi"), "crev");});
test("crez -> crez", function() {deepEqual( Stem("crez"), "crez");});
test("crezând -> crez", function() {deepEqual( Stem("crezând"), "crez");});
test("crezându -> crez", function() {deepEqual( Stem("crezându"), "crez");});
test("crezi -> crez", function() {deepEqual( Stem("crezi"), "crez");});
test("crezînd -> crezînd", function() {deepEqual( Stem("crezînd"), "crezînd");});
test("crezuse -> crez", function() {deepEqual( Stem("crezuse"), "crez");});
test("crezusem -> crez", function() {deepEqual( Stem("crezusem"), "crez");});
test("crezuseră -> crez", function() {deepEqual( Stem("crezuseră"), "crez");});
test("crezut -> crezut", function() {deepEqual( Stem("crezut"), "crezut");});
test("crezută -> crezut", function() {deepEqual( Stem("crezută"), "crezut");});
test("crichet -> crichet", function() {deepEqual( Stem("crichet"), "crichet");});
test("crimă -> crim", function() {deepEqual( Stem("crimă"), "crim");});
test("crime -> crim", function() {deepEqual( Stem("crime"), "crim");});
test("crimei -> crime", function() {deepEqual( Stem("crimei"), "crime");});
test("crimele -> crim", function() {deepEqual( Stem("crimele"), "crim");});
test("crin -> crin", function() {deepEqual( Stem("crin"), "crin");});
test("crini -> crin", function() {deepEqual( Stem("crini"), "crin");});
test("crispat -> crispat", function() {deepEqual( Stem("crispat"), "crispat");});
test("crispată -> crispat", function() {deepEqual( Stem("crispată"), "crispat");});
test("crispaţi -> crisp", function() {deepEqual( Stem("crispaţi"), "crisp");});
test("cristal -> cristal", function() {deepEqual( Stem("cristal"), "cristal");});
test("cristalină -> cristalin", function() {deepEqual( Stem("cristalină"), "cristalin");});
test("cristalizare -> cristaliz", function() {deepEqual( Stem("cristalizare"), "cristaliz");});
test("cristalizată -> cristaliz", function() {deepEqual( Stem("cristalizată"), "cristaliz");});
test("cristaluri -> cristalur", function() {deepEqual( Stem("cristaluri"), "cristalur");});
test("criterii -> criter", function() {deepEqual( Stem("criterii"), "criter");});
test("criteriile -> criter", function() {deepEqual( Stem("criteriile"), "criter");});
test("criteriu -> criteriu", function() {deepEqual( Stem("criteriu"), "criteriu");});
test("criteriul -> criter", function() {deepEqual( Stem("criteriul"), "criter");});
test("critic -> critic", function() {deepEqual( Stem("critic"), "critic");});
test("critica -> critic", function() {deepEqual( Stem("critica"), "critic");});
test("critică -> critic", function() {deepEqual( Stem("critică"), "critic");});
test("criticăm -> critic", function() {deepEqual( Stem("criticăm"), "critic");});
test("critice -> critic", function() {deepEqual( Stem("critice"), "critic");});
test("criticii -> critic", function() {deepEqual( Stem("criticii"), "critic");});
test("criticilor -> critic", function() {deepEqual( Stem("criticilor"), "critic");});
test("criticismul -> criticist", function() {deepEqual( Stem("criticismul"), "criticist");});
test("criticismului -> criticist", function() {deepEqual( Stem("criticismului"), "criticist");});
test("criticul -> critic", function() {deepEqual( Stem("criticul"), "critic");});
test("criza -> criz", function() {deepEqual( Stem("criza"), "criz");});
test("criză -> criz", function() {deepEqual( Stem("criză"), "criz");});
test("crize -> criz", function() {deepEqual( Stem("crize"), "criz");});
test("crîcnire -> crîcn", function() {deepEqual( Stem("crîcnire"), "crîcn");});
test("croia -> croi", function() {deepEqual( Stem("croia"), "croi");});
test("croită -> croit", function() {deepEqual( Stem("croită"), "croit");});
test("croitoreasa -> croitoreas", function() {deepEqual( Stem("croitoreasa"), "croitoreas");});
test("croitoreasă -> croitoreas", function() {deepEqual( Stem("croitoreasă"), "croitoreas");});
test("cromolitografie -> cromolitograf", function() {deepEqual( Stem("cromolitografie"), "cromolitograf");});
test("cromolitografiei -> cromolitograf", function() {deepEqual( Stem("cromolitografiei"), "cromolitograf");});
test("cronic -> cronic", function() {deepEqual( Stem("cronic"), "cronic");});
test("cronicar -> cronicar", function() {deepEqual( Stem("cronicar"), "cronicar");});
test("cronică -> cronic", function() {deepEqual( Stem("cronică"), "cronic");});
test("cronice -> cronic", function() {deepEqual( Stem("cronice"), "cronic");});
test("cross -> cross", function() {deepEqual( Stem("cross"), "cross");});
test("cruce -> cruc", function() {deepEqual( Stem("cruce"), "cruc");});
test("cruceşte -> cruc", function() {deepEqual( Stem("cruceşte"), "cruc");});
test("cruci -> cruc", function() {deepEqual( Stem("cruci"), "cruc");});
test("crucit -> crucit", function() {deepEqual( Stem("crucit"), "crucit");});
test("crud -> crud", function() {deepEqual( Stem("crud"), "crud");});
test("crudă -> crud", function() {deepEqual( Stem("crudă"), "crud");});
test("crude -> crud", function() {deepEqual( Stem("crude"), "crud");});
test("crunt -> crunt", function() {deepEqual( Stem("crunt"), "crunt");});
test("cruntă -> crunt", function() {deepEqual( Stem("cruntă"), "crunt");});
test("cruţare -> cruţ", function() {deepEqual( Stem("cruţare"), "cruţ");});
test("cruţe -> cruţ", function() {deepEqual( Stem("cruţe"), "cruţ");});
test("cruzi -> cruz", function() {deepEqual( Stem("cruzi"), "cruz");});
test("cruzimea -> cruzim", function() {deepEqual( Stem("cruzimea"), "cruzim");});
test("ctitorul -> ctitor", function() {deepEqual( Stem("ctitorul"), "ctitor");});
test("cu -> cu", function() {deepEqual( Stem("cu"), "cu");});
test("cuburi -> cubur", function() {deepEqual( Stem("cuburi"), "cubur");});
test("cucerească -> cucer", function() {deepEqual( Stem("cucerească"), "cucer");});
test("cucereşti -> cucer", function() {deepEqual( Stem("cucereşti"), "cucer");});
test("cucerire -> cucer", function() {deepEqual( Stem("cucerire"), "cucer");});
test("cucerirea -> cucer", function() {deepEqual( Stem("cucerirea"), "cucer");});
test("cucerise -> cucer", function() {deepEqual( Stem("cucerise"), "cucer");});
test("cucerisem -> cucer", function() {deepEqual( Stem("cucerisem"), "cucer");});
test("cucerit -> cucer", function() {deepEqual( Stem("cucerit"), "cucer");});
test("cucerite -> cucer", function() {deepEqual( Stem("cucerite"), "cucer");});
test("cuceritor -> cucer", function() {deepEqual( Stem("cuceritor"), "cucer");});
test("cuceritori -> cucer", function() {deepEqual( Stem("cuceritori"), "cucer");});
test("cucoană -> cucoan", function() {deepEqual( Stem("cucoană"), "cucoan");});
test("cucoane -> cucoan", function() {deepEqual( Stem("cucoane"), "cucoan");});
test("cucoanele -> cucoan", function() {deepEqual( Stem("cucoanele"), "cucoan");});
test("cugetare -> cuget", function() {deepEqual( Stem("cugetare"), "cuget");});
test("cugetarea -> cuget", function() {deepEqual( Stem("cugetarea"), "cuget");});
test("cugetării -> cugetăr", function() {deepEqual( Stem("cugetării"), "cugetăr");});
test("cugetători -> cuget", function() {deepEqual( Stem("cugetători"), "cuget");});
test("cugetătorii -> cuget", function() {deepEqual( Stem("cugetătorii"), "cuget");});
test("cui -> cui", function() {deepEqual( Stem("cui"), "cui");});
test("cuib -> cuib", function() {deepEqual( Stem("cuib"), "cuib");});
test("cuibar -> cuibar", function() {deepEqual( Stem("cuibar"), "cuibar");});
test("cuibarul -> cuibar", function() {deepEqual( Stem("cuibarul"), "cuibar");});
test("cuibul -> cuib", function() {deepEqual( Stem("cuibul"), "cuib");});
test("cuie -> cui", function() {deepEqual( Stem("cuie"), "cui");});
test("cuişoare -> cuişoar", function() {deepEqual( Stem("cuişoare"), "cuişoar");});
test("cuiva -> cuiv", function() {deepEqual( Stem("cuiva"), "cuiv");});
test("culc -> culc", function() {deepEqual( Stem("culc"), "culc");});
test("culca -> culc", function() {deepEqual( Stem("culca"), "culc");});
test("culcat -> culcat", function() {deepEqual( Stem("culcat"), "culcat");});
test("culcată -> culcat", function() {deepEqual( Stem("culcată"), "culcat");});
test("culcate -> culcat", function() {deepEqual( Stem("culcate"), "culcat");});
test("culcaţi -> culc", function() {deepEqual( Stem("culcaţi"), "culc");});
test("culcă -> culc", function() {deepEqual( Stem("culcă"), "culc");});
test("culce -> culc", function() {deepEqual( Stem("culce"), "culc");});
test("culcuş -> culcuş", function() {deepEqual( Stem("culcuş"), "culcuş");});
test("culcuşul -> culcuş", function() {deepEqual( Stem("culcuşul"), "culcuş");});
test("culcuşurile -> culcuşur", function() {deepEqual( Stem("culcuşurile"), "culcuşur");});
test("culeagă -> culeag", function() {deepEqual( Stem("culeagă"), "culeag");});
test("culeasă -> culeas", function() {deepEqual( Stem("culeasă"), "culeas");});
test("culeg -> culeg", function() {deepEqual( Stem("culeg"), "culeg");});
test("culegător -> culeg", function() {deepEqual( Stem("culegător"), "culeg");});
test("culege -> culeg", function() {deepEqual( Stem("culege"), "culeg");});
test("culegere -> culeg", function() {deepEqual( Stem("culegere"), "culeg");});
test("culeşi -> culeş", function() {deepEqual( Stem("culeşi"), "culeş");});
test("culise -> culis", function() {deepEqual( Stem("culise"), "culis");});
test("culiselor -> culis", function() {deepEqual( Stem("culiselor"), "culis");});
test("culme -> culm", function() {deepEqual( Stem("culme"), "culm");});
test("culmea -> culm", function() {deepEqual( Stem("culmea"), "culm");});
test("culmi -> culm", function() {deepEqual( Stem("culmi"), "culm");});
test("culmii -> culm", function() {deepEqual( Stem("culmii"), "culm");});
test("culmile -> culm", function() {deepEqual( Stem("culmile"), "culm");});
test("culmilor -> culm", function() {deepEqual( Stem("culmilor"), "culm");});
test("culminaţia -> culmin", function() {deepEqual( Stem("culminaţia"), "culmin");});
test("culoar -> culoar", function() {deepEqual( Stem("culoar"), "culoar");});
test("culoare -> culoar", function() {deepEqual( Stem("culoare"), "culoar");});
test("culoarea -> culoar", function() {deepEqual( Stem("culoarea"), "culoar");});
test("culoarele -> culoar", function() {deepEqual( Stem("culoarele"), "culoar");});
test("culoarul -> culoar", function() {deepEqual( Stem("culoarul"), "culoar");});
test("culori -> culor", function() {deepEqual( Stem("culori"), "culor");});
test("culorile -> culor", function() {deepEqual( Stem("culorile"), "culor");});
test("cult -> cult", function() {deepEqual( Stem("cult"), "cult");});
test("culte -> cult", function() {deepEqual( Stem("culte"), "cult");});
test("cultion -> cultion", function() {deepEqual( Stem("cultion"), "cultion");});
test("cultiva -> cultiv", function() {deepEqual( Stem("cultiva"), "cultiv");});
test("cultivarea -> cultiv", function() {deepEqual( Stem("cultivarea"), "cultiv");});
test("cultivat -> cultiv", function() {deepEqual( Stem("cultivat"), "cultiv");});
test("cultivată -> cultiv", function() {deepEqual( Stem("cultivată"), "cultiv");});
test("cultivate -> cultiv", function() {deepEqual( Stem("cultivate"), "cultiv");});
test("cultivator -> cultiv", function() {deepEqual( Stem("cultivator"), "cultiv");});
test("cultivaţi -> cultiv", function() {deepEqual( Stem("cultivaţi"), "cultiv");});
test("cultivaţilor -> cultiv", function() {deepEqual( Stem("cultivaţilor"), "cultiv");});
test("cultivă -> cultiv", function() {deepEqual( Stem("cultivă"), "cultiv");});
test("cultivăm -> cultiv", function() {deepEqual( Stem("cultivăm"), "cultiv");});
test("cultivării -> cultivăr", function() {deepEqual( Stem("cultivării"), "cultivăr");});
test("cultul -> cult", function() {deepEqual( Stem("cultul"), "cult");});
test("cultulen -> cultulen", function() {deepEqual( Stem("cultulen"), "cultulen");});
test("cultura -> cultur", function() {deepEqual( Stem("cultura"), "cultur");});
test("cultural -> cultural", function() {deepEqual( Stem("cultural"), "cultural");});
test("culturală -> cultural", function() {deepEqual( Stem("culturală"), "cultural");});
test("culturale -> cultural", function() {deepEqual( Stem("culturale"), "cultural");});
test("cultură -> cult", function() {deepEqual( Stem("cultură"), "cult");});
test("culturăen -> culturăen", function() {deepEqual( Stem("culturăen"), "culturăen");});
test("culturi -> cultur", function() {deepEqual( Stem("culturi"), "cultur");});
test("culturii -> cultur", function() {deepEqual( Stem("culturii"), "cultur");});
test("culturiien -> culturiien", function() {deepEqual( Stem("culturiien"), "culturiien");});
test("culţien -> culţien", function() {deepEqual( Stem("culţien"), "culţien");});
test("cum -> cum", function() {deepEqual( Stem("cum"), "cum");});
test("cumetrii -> cumetr", function() {deepEqual( Stem("cumetrii"), "cumetr");});
test("cuminte -> cumint", function() {deepEqual( Stem("cuminte"), "cumint");});
test("cuminţele -> cuminţ", function() {deepEqual( Stem("cuminţele"), "cuminţ");});
test("cuminţenia -> cuminţen", function() {deepEqual( Stem("cuminţenia"), "cuminţen");});
test("cuminţenie -> cuminţen", function() {deepEqual( Stem("cuminţenie"), "cuminţen");});
test("cuminţi -> cuminţ", function() {deepEqual( Stem("cuminţi"), "cuminţ");});
test("cumnat -> cumnat", function() {deepEqual( Stem("cumnat"), "cumnat");});
test("cumnată -> cumnat", function() {deepEqual( Stem("cumnată"), "cumnat");});
test("cumnatei -> cumnat", function() {deepEqual( Stem("cumnatei"), "cumnat");});
test("cumnatu -> cumnatu", function() {deepEqual( Stem("cumnatu"), "cumnatu");});
test("cumpănă -> cumpăn", function() {deepEqual( Stem("cumpănă"), "cumpăn");});
test("cumpănesc -> cumpăn", function() {deepEqual( Stem("cumpănesc"), "cumpăn");});
test("cumpănire -> cumpăn", function() {deepEqual( Stem("cumpănire"), "cumpăn");});
test("cumpănită -> cumpăn", function() {deepEqual( Stem("cumpănită"), "cumpăn");});
test("cumpănite -> cumpăn", function() {deepEqual( Stem("cumpănite"), "cumpăn");});
test("cumpăra -> cumpăr", function() {deepEqual( Stem("cumpăra"), "cumpăr");});
test("cumpăram -> cumpăr", function() {deepEqual( Stem("cumpăram"), "cumpăr");});
test("cumpărase -> cumpăr", function() {deepEqual( Stem("cumpărase"), "cumpăr");});
test("cumpărat -> cumpăr", function() {deepEqual( Stem("cumpărat"), "cumpăr");});
test("cumpărată -> cumpăr", function() {deepEqual( Stem("cumpărată"), "cumpăr");});
test("cumpărate -> cumpăr", function() {deepEqual( Stem("cumpărate"), "cumpăr");});
test("cumpără -> cumpăr", function() {deepEqual( Stem("cumpără"), "cumpăr");});
test("cumpărăm -> cumpăr", function() {deepEqual( Stem("cumpărăm"), "cumpăr");});
test("cumpărături -> cumpărătur", function() {deepEqual( Stem("cumpărături"), "cumpărătur");});
test("cumpere -> cump", function() {deepEqual( Stem("cumpere"), "cump");});
test("cumperi -> cumper", function() {deepEqual( Stem("cumperi"), "cumper");});
test("cumplit -> cumplit", function() {deepEqual( Stem("cumplit"), "cumplit");});
test("cumplită -> cumplit", function() {deepEqual( Stem("cumplită"), "cumplit");});
test("cumplite -> cumplit", function() {deepEqual( Stem("cumplite"), "cumplit");});
test("cumsecade -> cumsecad", function() {deepEqual( Stem("cumsecade"), "cumsecad");});
test("cumva -> cumv", function() {deepEqual( Stem("cumva"), "cumv");});
test("cunoască -> cunoasc", function() {deepEqual( Stem("cunoască"), "cunoasc");});
test("cunoaşte -> cunoaşt", function() {deepEqual( Stem("cunoaşte"), "cunoaşt");});
test("cunoaştem -> cunoaşt", function() {deepEqual( Stem("cunoaştem"), "cunoaşt");});
test("cunoaştere -> cunoaşt", function() {deepEqual( Stem("cunoaştere"), "cunoaşt");});
test("cunoaşterea -> cunoaşt", function() {deepEqual( Stem("cunoaşterea"), "cunoaşt");});
test("cunoaşteri -> cunoaşter", function() {deepEqual( Stem("cunoaşteri"), "cunoaşter");});
test("cunoaşterii -> cunoaşter", function() {deepEqual( Stem("cunoaşterii"), "cunoaşter");});
test("cunoaşteţi -> cunoaşt", function() {deepEqual( Stem("cunoaşteţi"), "cunoaşt");});
test("cunosc -> cunosc", function() {deepEqual( Stem("cunosc"), "cunosc");});
test("cunoscând -> cunosc", function() {deepEqual( Stem("cunoscând"), "cunosc");});
test("cunoscători -> cunosc", function() {deepEqual( Stem("cunoscători"), "cunosc");});
test("cunoscuse -> cunosc", function() {deepEqual( Stem("cunoscuse"), "cunosc");});
test("cunoscusem -> cunosc", function() {deepEqual( Stem("cunoscusem"), "cunosc");});
test("cunoscut -> cunosc", function() {deepEqual( Stem("cunoscut"), "cunosc");});
test("cunoscuta -> cunosc", function() {deepEqual( Stem("cunoscuta"), "cunosc");});
test("cunoscută -> cunosc", function() {deepEqual( Stem("cunoscută"), "cunosc");});
test("cunoscute -> cunosc", function() {deepEqual( Stem("cunoscute"), "cunosc");});
test("cunoscuţi -> cunoscuţ", function() {deepEqual( Stem("cunoscuţi"), "cunoscuţ");});
test("cunoştea -> cunoşt", function() {deepEqual( Stem("cunoştea"), "cunoşt");});
test("cunoşteam -> cunoşt", function() {deepEqual( Stem("cunoşteam"), "cunoşt");});
test("cunoştem -> cunoşt", function() {deepEqual( Stem("cunoştem"), "cunoşt");});
test("cunoşti -> cunoşt", function() {deepEqual( Stem("cunoşti"), "cunoşt");});
test("cunoştinţa -> cunoştinţ", function() {deepEqual( Stem("cunoştinţa"), "cunoştinţ");});
test("cunoştinţă -> cunoştinţ", function() {deepEqual( Stem("cunoştinţă"), "cunoştinţ");});
test("cunoştinţe -> cunoştinţ", function() {deepEqual( Stem("cunoştinţe"), "cunoştinţ");});
test("cunoştinţei -> cunoştinţe", function() {deepEqual( Stem("cunoştinţei"), "cunoştinţe");});
test("cunoştinţele -> cunoştinţ", function() {deepEqual( Stem("cunoştinţele"), "cunoştinţ");});
test("cunoştinţelor -> cunoştinţ", function() {deepEqual( Stem("cunoştinţelor"), "cunoştinţ");});
test("cunoştinţi -> cunoştinţ", function() {deepEqual( Stem("cunoştinţi"), "cunoştinţ");});
test("cupă -> cup", function() {deepEqual( Stem("cupă"), "cup");});
test("cupe -> cup", function() {deepEqual( Stem("cupe"), "cup");});
test("cupolă -> cupol", function() {deepEqual( Stem("cupolă"), "cupol");});
test("cupolei -> cupole", function() {deepEqual( Stem("cupolei"), "cupole");});
test("cuprinde -> cuprind", function() {deepEqual( Stem("cuprinde"), "cuprind");});
test("cuprindea -> cuprind", function() {deepEqual( Stem("cuprindea"), "cuprind");});
test("cuprins -> cuprins", function() {deepEqual( Stem("cuprins"), "cuprins");});
test("cuprinsă -> cuprins", function() {deepEqual( Stem("cuprinsă"), "cuprins");});
test("cuprinse -> cuprin", function() {deepEqual( Stem("cuprinse"), "cuprin");});
test("cuprinsul -> cuprins", function() {deepEqual( Stem("cuprinsul"), "cuprins");});
test("cuprinzătoare -> cuprinz", function() {deepEqual( Stem("cuprinzătoare"), "cuprinz");});
test("cuptorul -> cuptor", function() {deepEqual( Stem("cuptorul"), "cuptor");});
test("curagios -> curag", function() {deepEqual( Stem("curagios"), "curag");});
test("curaj -> curaj", function() {deepEqual( Stem("curaj"), "curaj");});
test("curajos -> curaj", function() {deepEqual( Stem("curajos"), "curaj");});
test("curajoşi -> curaj", function() {deepEqual( Stem("curajoşi"), "curaj");});
test("curajul -> curaj", function() {deepEqual( Stem("curajul"), "curaj");});
test("curat -> curat", function() {deepEqual( Stem("curat"), "curat");});
test("curată -> curat", function() {deepEqual( Stem("curată"), "curat");});
test("curaţi -> cur", function() {deepEqual( Stem("curaţi"), "cur");});
test("curând -> curând", function() {deepEqual( Stem("curând"), "curând");});
test("curăţat -> curăţ", function() {deepEqual( Stem("curăţat"), "curăţ");});
test("curăţenie -> curăţen", function() {deepEqual( Stem("curăţenie"), "curăţen");});
test("curăţi -> curăţ", function() {deepEqual( Stem("curăţi"), "curăţ");});
test("curăţim -> curăţ", function() {deepEqual( Stem("curăţim"), "curăţ");});
test("curăţind -> curăţ", function() {deepEqual( Stem("curăţind"), "curăţ");});
test("curbă -> curb", function() {deepEqual( Stem("curbă"), "curb");});
test("curbe -> curb", function() {deepEqual( Stem("curbe"), "curb");});
test("curcan -> curcan", function() {deepEqual( Stem("curcan"), "curcan");});
test("curcanului -> curcan", function() {deepEqual( Stem("curcanului"), "curcan");});
test("curea -> cur", function() {deepEqual( Stem("curea"), "cur");});
test("cureaua -> cureau", function() {deepEqual( Stem("cureaua"), "cureau");});
test("curent -> curent", function() {deepEqual( Stem("curent"), "curent");});
test("curentă -> curent", function() {deepEqual( Stem("curentă"), "curent");});
test("curente -> curent", function() {deepEqual( Stem("curente"), "curent");});
test("curentul -> curent", function() {deepEqual( Stem("curentul"), "curent");});
test("curentului -> curent", function() {deepEqual( Stem("curentului"), "curent");});
test("cureţe -> cureţ", function() {deepEqual( Stem("cureţe"), "cureţ");});
test("curg -> curg", function() {deepEqual( Stem("curg"), "curg");});
test("curgă -> curg", function() {deepEqual( Stem("curgă"), "curg");});
test("curge -> curg", function() {deepEqual( Stem("curge"), "curg");});
test("curgerii -> curger", function() {deepEqual( Stem("curgerii"), "curger");});
test("curiaţi -> curiaţ", function() {deepEqual( Stem("curiaţi"), "curiaţ");});
test("curieri -> curier", function() {deepEqual( Stem("curieri"), "curier");});
test("curioasă -> curioas", function() {deepEqual( Stem("curioasă"), "curioas");});
test("curioase -> curioas", function() {deepEqual( Stem("curioase"), "curioas");});
test("curiozitate -> curioz", function() {deepEqual( Stem("curiozitate"), "curioz");});
test("curiozitatea -> curioz", function() {deepEqual( Stem("curiozitatea"), "curioz");});
test("curiozităţi -> curioz", function() {deepEqual( Stem("curiozităţi"), "curioz");});
test("curmezişă -> curmeziş", function() {deepEqual( Stem("curmezişă"), "curmeziş");});
test("curs -> curs", function() {deepEqual( Stem("curs"), "curs");});
test("cursă -> curs", function() {deepEqual( Stem("cursă"), "curs");});
test("curse -> cur", function() {deepEqual( Stem("curse"), "cur");});
test("cursul -> curs", function() {deepEqual( Stem("cursul"), "curs");});
test("cursului -> curs", function() {deepEqual( Stem("cursului"), "curs");});
test("cursuri -> cursur", function() {deepEqual( Stem("cursuri"), "cursur");});
test("cursurile -> cursur", function() {deepEqual( Stem("cursurile"), "cursur");});
test("curte -> curt", function() {deepEqual( Stem("curte"), "curt");});
test("curtea -> curt", function() {deepEqual( Stem("curtea"), "curt");});
test("curtenilor -> curten", function() {deepEqual( Stem("curtenilor"), "curten");});
test("curţi -> curţ", function() {deepEqual( Stem("curţi"), "curţ");});
test("curţile -> curţ", function() {deepEqual( Stem("curţile"), "curţ");});
test("cusur -> cusur", function() {deepEqual( Stem("cusur"), "cusur");});
test("cusururile -> cusurur", function() {deepEqual( Stem("cusururile"), "cusurur");});
test("cusut -> cusut", function() {deepEqual( Stem("cusut"), "cusut");});
test("cuşcă -> cuşc", function() {deepEqual( Stem("cuşcă"), "cuşc");});
test("cutare -> cutar", function() {deepEqual( Stem("cutare"), "cutar");});
test("cută -> cut", function() {deepEqual( Stem("cută"), "cut");});
test("cute -> cut", function() {deepEqual( Stem("cute"), "cut");});
test("cuteza -> cutez", function() {deepEqual( Stem("cuteza"), "cutez");});
test("cutremur -> cutremur", function() {deepEqual( Stem("cutremur"), "cutremur");});
test("cutremurare -> cutremur", function() {deepEqual( Stem("cutremurare"), "cutremur");});
test("cutremurat -> cutremur", function() {deepEqual( Stem("cutremurat"), "cutremur");});
test("cutremuraţi -> cutremur", function() {deepEqual( Stem("cutremuraţi"), "cutremur");});
test("cuţit -> cuţit", function() {deepEqual( Stem("cuţit"), "cuţit");});
test("cuţite -> cuţit", function() {deepEqual( Stem("cuţite"), "cuţit");});
test("cuţitul -> cuţit", function() {deepEqual( Stem("cuţitul"), "cuţit");});
test("cuvânt -> cuvânt", function() {deepEqual( Stem("cuvânt"), "cuvânt");});
test("cuvântul -> cuvânt", function() {deepEqual( Stem("cuvântul"), "cuvânt");});
test("cuvântului -> cuvânt", function() {deepEqual( Stem("cuvântului"), "cuvânt");});
test("cuvenea -> cuven", function() {deepEqual( Stem("cuvenea"), "cuven");});
test("cuvenit -> cuven", function() {deepEqual( Stem("cuvenit"), "cuven");});
test("cuvenită -> cuven", function() {deepEqual( Stem("cuvenită"), "cuven");});
test("cuvertura -> cuvertur", function() {deepEqual( Stem("cuvertura"), "cuvertur");});
test("cuvertură -> cuvert", function() {deepEqual( Stem("cuvertură"), "cuvert");});
test("cuviincios -> cuviinc", function() {deepEqual( Stem("cuviincios"), "cuviinc");});
test("cuviinţă -> cuviinţ", function() {deepEqual( Stem("cuviinţă"), "cuviinţ");});
test("cuvin -> cuvin", function() {deepEqual( Stem("cuvin"), "cuvin");});
test("cuvine -> cuvin", function() {deepEqual( Stem("cuvine"), "cuvin");});
test("cuvinte -> cuvint", function() {deepEqual( Stem("cuvinte"), "cuvint");});
test("cuvintele -> cuvint", function() {deepEqual( Stem("cuvintele"), "cuvint");});
test("cuvintelor -> cuvint", function() {deepEqual( Stem("cuvintelor"), "cuvint");});
test("cvadridimensională -> cvadridimensional", function() {deepEqual( Stem("cvadridimensională"), "cvadridimensional");});
test("cvartetului -> cvartet", function() {deepEqual( Stem("cvartetului"), "cvartet");});
test("cyrano -> cyrano", function() {deepEqual( Stem("cyrano"), "cyrano");});
test("d -> d", function() {deepEqual( Stem("d"), "d");});
test("da -> da", function() {deepEqual( Stem("da"), "da");});
test("daa -> daa", function() {deepEqual( Stem("daa"), "daa");});
test("dac -> dac", function() {deepEqual( Stem("dac"), "dac");});
test("dacă -> dac", function() {deepEqual( Stem("dacă"), "dac");});
test("daco -> daco", function() {deepEqual( Stem("daco"), "daco");});
test("dactilografiarea -> dactilografiar", function() {deepEqual( Stem("dactilografiarea"), "dactilografiar");});
test("dai -> dai", function() {deepEqual( Stem("dai"), "dai");});
test("daltonişti -> daltonist", function() {deepEqual( Stem("daltonişti"), "daltonist");});
test("daltoniştii -> daltonist", function() {deepEqual( Stem("daltoniştii"), "daltonist");});
test("dam -> dam", function() {deepEqual( Stem("dam"), "dam");});
test("dama -> dam", function() {deepEqual( Stem("dama"), "dam");});
test("damă -> dam", function() {deepEqual( Stem("damă"), "dam");});
test("damele -> dam", function() {deepEqual( Stem("damele"), "dam");});
test("dancinguri -> dancingur", function() {deepEqual( Stem("dancinguri"), "dancingur");});
test("danezilor -> danez", function() {deepEqual( Stem("danezilor"), "danez");});
test("danie -> dan", function() {deepEqual( Stem("danie"), "dan");});
test("dans -> dans", function() {deepEqual( Stem("dans"), "dans");});
test("dansa -> dans", function() {deepEqual( Stem("dansa"), "dans");});
test("dansam -> dans", function() {deepEqual( Stem("dansam"), "dans");});
test("dansat -> dansat", function() {deepEqual( Stem("dansat"), "dansat");});
test("dansatoare -> dansat", function() {deepEqual( Stem("dansatoare"), "dansat");});
test("dansator -> dansat", function() {deepEqual( Stem("dansator"), "dansat");});
test("dansatorii -> dansat", function() {deepEqual( Stem("dansatorii"), "dansat");});
test("dansatorul -> dansat", function() {deepEqual( Stem("dansatorul"), "dansat");});
test("dansau -> dans", function() {deepEqual( Stem("dansau"), "dans");});
test("dansăm -> dans", function() {deepEqual( Stem("dansăm"), "dans");});
test("dansează -> dans", function() {deepEqual( Stem("dansează"), "dans");});
test("dansez -> dans", function() {deepEqual( Stem("dansez"), "dans");});
test("danseze -> dans", function() {deepEqual( Stem("danseze"), "dans");});
test("dansul -> dans", function() {deepEqual( Stem("dansul"), "dans");});
test("dansului -> dans", function() {deepEqual( Stem("dansului"), "dans");});
test("dansuri -> dansur", function() {deepEqual( Stem("dansuri"), "dansur");});
test("dantelată -> dantel", function() {deepEqual( Stem("dantelată"), "dantel");});
test("dantelă -> dantel", function() {deepEqual( Stem("dantelă"), "dantel");});
test("danţul -> danţ", function() {deepEqual( Stem("danţul"), "danţ");});
test("dar -> dar", function() {deepEqual( Stem("dar"), "dar");});
test("darămite -> darăm", function() {deepEqual( Stem("darămite"), "darăm");});
test("dare -> dar", function() {deepEqual( Stem("dare"), "dar");});
test("darul -> dar", function() {deepEqual( Stem("darul"), "dar");});
test("daruri -> darur", function() {deepEqual( Stem("daruri"), "darur");});
test("das -> das", function() {deepEqual( Stem("das"), "das");});
test("dascăli -> dascăl", function() {deepEqual( Stem("dascăli"), "dascăl");});
test("dascălul -> dascăl", function() {deepEqual( Stem("dascălul"), "dascăl");});
test("dat -> dat", function() {deepEqual( Stem("dat"), "dat");});
test("data -> dat", function() {deepEqual( Stem("data"), "dat");});
test("datat -> datat", function() {deepEqual( Stem("datat"), "datat");});
test("dată -> dat", function() {deepEqual( Stem("dată"), "dat");});
test("date -> dat", function() {deepEqual( Stem("date"), "dat");});
test("datele -> dat", function() {deepEqual( Stem("datele"), "dat");});
test("datini -> datin", function() {deepEqual( Stem("datini"), "datin");});
test("datoare -> datoar", function() {deepEqual( Stem("datoare"), "datoar");});
test("dator -> dator", function() {deepEqual( Stem("dator"), "dator");});
test("datoresc -> dator", function() {deepEqual( Stem("datoresc"), "dator");});
test("datoreşte -> dator", function() {deepEqual( Stem("datoreşte"), "dator");});
test("datoria -> dator", function() {deepEqual( Stem("datoria"), "dator");});
test("datorii -> dator", function() {deepEqual( Stem("datorii"), "dator");});
test("datoriile -> dator", function() {deepEqual( Stem("datoriile"), "dator");});
test("datorită -> dator", function() {deepEqual( Stem("datorită"), "dator");});
test("datul -> dat", function() {deepEqual( Stem("datul"), "dat");});
test("daţi -> daţ", function() {deepEqual( Stem("daţi"), "daţ");});
test("dau -> dau", function() {deepEqual( Stem("dau"), "dau");});
test("daumesnil -> daumesnil", function() {deepEqual( Stem("daumesnil"), "daumesnil");});
test("david -> david", function() {deepEqual( Stem("david"), "david");});
test("dâmb -> dâmb", function() {deepEqual( Stem("dâmb"), "dâmb");});
test("dâmbovicioara -> dâmbovicioar", function() {deepEqual( Stem("dâmbovicioara"), "dâmbovicioar");});
test("dâmbovicioarei -> dâmbovicioare", function() {deepEqual( Stem("dâmbovicioarei"), "dâmbovicioare");});
test("dâmboviţa -> dâmboviţ", function() {deepEqual( Stem("dâmboviţa"), "dâmboviţ");});
test("dâmbul -> dâmb", function() {deepEqual( Stem("dâmbul"), "dâmb");});
test("dâmburi -> dâmbur", function() {deepEqual( Stem("dâmburi"), "dâmbur");});
test("dâmburile -> dâmbur", function() {deepEqual( Stem("dâmburile"), "dâmbur");});
test("dând -> dând", function() {deepEqual( Stem("dând"), "dând");});
test("dându -> dându", function() {deepEqual( Stem("dându"), "dându");});
test("dânsa -> dâns", function() {deepEqual( Stem("dânsa"), "dâns");});
test("dânsele -> dân", function() {deepEqual( Stem("dânsele"), "dân");});
test("dânsul -> dâns", function() {deepEqual( Stem("dânsul"), "dâns");});
test("dânşii -> dânş", function() {deepEqual( Stem("dânşii"), "dânş");});
test("dâră -> dâr", function() {deepEqual( Stem("dâră"), "dâr");});
test("dârste -> dârst", function() {deepEqual( Stem("dârste"), "dârst");});
test("dârz -> dârz", function() {deepEqual( Stem("dârz"), "dârz");});
test("dârză -> dârz", function() {deepEqual( Stem("dârză"), "dârz");});
test("dă -> dă", function() {deepEqual( Stem("dă"), "dă");});
test("dădea -> dăd", function() {deepEqual( Stem("dădea"), "dăd");});
test("dădeai -> dădea", function() {deepEqual( Stem("dădeai"), "dădea");});
test("dădeam -> dădeam", function() {deepEqual( Stem("dădeam"), "dădeam");});
test("dădeau -> dădeau", function() {deepEqual( Stem("dădeau"), "dădeau");});
test("dădu -> dădu", function() {deepEqual( Stem("dădu"), "dădu");});
test("dăduse -> dădus", function() {deepEqual( Stem("dăduse"), "dădus");});
test("dăinuia -> dăinui", function() {deepEqual( Stem("dăinuia"), "dăinui");});
test("dăinuieşte -> dăinui", function() {deepEqual( Stem("dăinuieşte"), "dăinui");});
test("dăm -> dăm", function() {deepEqual( Stem("dăm"), "dăm");});
test("dănciuci -> dănciuc", function() {deepEqual( Stem("dănciuci"), "dănciuc");});
test("dănciucii -> dănciuc", function() {deepEqual( Stem("dănciucii"), "dănciuc");});
test("dărâma -> dărâm", function() {deepEqual( Stem("dărâma"), "dărâm");});
test("dărâme -> dărâm", function() {deepEqual( Stem("dărâme"), "dărâm");});
test("dărui -> dăru", function() {deepEqual( Stem("dărui"), "dăru");});
test("dăruieşte -> dărui", function() {deepEqual( Stem("dăruieşte"), "dărui");});
test("dăruise -> dăru", function() {deepEqual( Stem("dăruise"), "dăru");});
test("dăruit -> dăruit", function() {deepEqual( Stem("dăruit"), "dăruit");});
test("dăsfă -> dăsf", function() {deepEqual( Stem("dăsfă"), "dăsf");});
test("dătătoare -> dătat", function() {deepEqual( Stem("dătătoare"), "dătat");});
test("dăţi -> dăţ", function() {deepEqual( Stem("dăţi"), "dăţ");});
test("dăunăzi -> dăunăz", function() {deepEqual( Stem("dăunăzi"), "dăunăz");});
test("de -> de", function() {deepEqual( Stem("de"), "de");});
test("dea -> dea", function() {deepEqual( Stem("dea"), "dea");});
test("deal -> deal", function() {deepEqual( Stem("deal"), "deal");});
test("dealtfel -> dealtfel", function() {deepEqual( Stem("dealtfel"), "dealtfel");});
test("dealtminteri -> dealtminter", function() {deepEqual( Stem("dealtminteri"), "dealtminter");});
test("dealul -> deal", function() {deepEqual( Stem("dealul"), "deal");});
test("dealului -> deal", function() {deepEqual( Stem("dealului"), "deal");});
test("dealuri -> dealur", function() {deepEqual( Stem("dealuri"), "dealur");});
test("dealurile -> dealur", function() {deepEqual( Stem("dealurile"), "dealur");});
test("dealurilor -> dealur", function() {deepEqual( Stem("dealurilor"), "dealur");});
test("deasupra -> deasupr", function() {deepEqual( Stem("deasupra"), "deasupr");});
test("debandada -> debandad", function() {deepEqual( Stem("debandada"), "debandad");});
test("debarcării -> debarcăr", function() {deepEqual( Stem("debarcării"), "debarcăr");});
test("debitantul -> debit", function() {deepEqual( Stem("debitantul"), "debit");});
test("debitanţii -> debitanţ", function() {deepEqual( Stem("debitanţii"), "debitanţ");});
test("debitează -> debit", function() {deepEqual( Stem("debitează"), "debit");});
test("debitul -> debit", function() {deepEqual( Stem("debitul"), "debit");});
test("debordeze -> debord", function() {deepEqual( Stem("debordeze"), "debord");});
test("debutant -> debut", function() {deepEqual( Stem("debutant"), "debut");});
test("decât -> decât", function() {deepEqual( Stem("decât"), "decât");});
test("decembrie -> decembr", function() {deepEqual( Stem("decembrie"), "decembr");});
test("decenii -> decen", function() {deepEqual( Stem("decenii"), "decen");});
test("decent -> decent", function() {deepEqual( Stem("decent"), "decent");});
test("decenţi -> decenţ", function() {deepEqual( Stem("decenţi"), "decenţ");});
test("decepţia -> decepţ", function() {deepEqual( Stem("decepţia"), "decepţ");});
test("decepţii -> decepţ", function() {deepEqual( Stem("decepţii"), "decepţ");});
test("decepţionat -> decepţion", function() {deepEqual( Stem("decepţionat"), "decepţion");});
test("decepţionată -> decepţion", function() {deepEqual( Stem("decepţionată"), "decepţion");});
test("decerna -> decern", function() {deepEqual( Stem("decerna"), "decern");});
test("decernarea -> decern", function() {deepEqual( Stem("decernarea"), "decern");});
test("decernării -> decernăr", function() {deepEqual( Stem("decernării"), "decernăr");});
test("deces -> deces", function() {deepEqual( Stem("deces"), "deces");});
test("deci -> dec", function() {deepEqual( Stem("deci"), "dec");});
test("decibeli -> decibel", function() {deepEqual( Stem("decibeli"), "decibel");});
test("decid -> decid", function() {deepEqual( Stem("decid"), "decid");});
test("decidabilă -> decid", function() {deepEqual( Stem("decidabilă"), "decid");});
test("decidabile -> decid", function() {deepEqual( Stem("decidabile"), "decid");});
test("decidabilitate -> decid", function() {deepEqual( Stem("decidabilitate"), "decid");});
test("decidă -> decid", function() {deepEqual( Stem("decidă"), "decid");});
test("decide -> decid", function() {deepEqual( Stem("decide"), "decid");});
test("decideau -> decid", function() {deepEqual( Stem("decideau"), "decid");});
test("decidem -> decid", function() {deepEqual( Stem("decidem"), "decid");});
test("deciderea -> decid", function() {deepEqual( Stem("deciderea"), "decid");});
test("decideţi -> decid", function() {deepEqual( Stem("decideţi"), "decid");});
test("decimat -> decim", function() {deepEqual( Stem("decimat"), "decim");});
test("decimată -> decim", function() {deepEqual( Stem("decimată"), "decim");});
test("decis -> decis", function() {deepEqual( Stem("decis"), "decis");});
test("decisă -> decis", function() {deepEqual( Stem("decisă"), "decis");});
test("decise -> decis", function() {deepEqual( Stem("decise"), "decis");});
test("decisen -> decisen", function() {deepEqual( Stem("decisen"), "decisen");});
test("deciseseră -> dec", function() {deepEqual( Stem("deciseseră"), "dec");});
test("decisiv -> decis", function() {deepEqual( Stem("decisiv"), "decis");});
test("decisivă -> decis", function() {deepEqual( Stem("decisivă"), "decis");});
test("decişi -> deciş", function() {deepEqual( Stem("decişi"), "deciş");});
test("decizia -> deciz", function() {deepEqual( Stem("decizia"), "deciz");});
test("decît -> decît", function() {deepEqual( Stem("decît"), "decît");});
test("declanşeze -> declanş", function() {deepEqual( Stem("declanşeze"), "declanş");});
test("declar -> declar", function() {deepEqual( Stem("declar"), "declar");});
test("declarat -> declar", function() {deepEqual( Stem("declarat"), "declar");});
test("declarate -> declar", function() {deepEqual( Stem("declarate"), "declar");});
test("declarând -> declar", function() {deepEqual( Stem("declarând"), "declar");});
test("declară -> decl", function() {deepEqual( Stem("declară"), "decl");});
test("declare -> decl", function() {deepEqual( Stem("declare"), "decl");});
test("declasaţii -> declas", function() {deepEqual( Stem("declasaţii"), "declas");});
test("declasările -> declasăr", function() {deepEqual( Stem("declasările"), "declasăr");});
test("decolorată -> decolor", function() {deepEqual( Stem("decolorată"), "decolor");});
test("decoltată -> decolt", function() {deepEqual( Stem("decoltată"), "decolt");});
test("decor -> decor", function() {deepEqual( Stem("decor"), "decor");});
test("decorat -> decor", function() {deepEqual( Stem("decorat"), "decor");});
test("decorative -> decor", function() {deepEqual( Stem("decorative"), "decor");});
test("decretau -> decret", function() {deepEqual( Stem("decretau"), "decret");});
test("decupăm -> decup", function() {deepEqual( Stem("decupăm"), "decup");});
test("decurg -> decurg", function() {deepEqual( Stem("decurg"), "decurg");});
test("decurge -> decurg", function() {deepEqual( Stem("decurge"), "decurg");});
test("decurs -> decurs", function() {deepEqual( Stem("decurs"), "decurs");});
test("decursul -> decurs", function() {deepEqual( Stem("decursul"), "decurs");});
test("deda -> ded", function() {deepEqual( Stem("deda"), "ded");});
test("dedau -> dedau", function() {deepEqual( Stem("dedau"), "dedau");});
test("dedesubt -> dedesubt", function() {deepEqual( Stem("dedesubt"), "dedesubt");});
test("dedublat -> dedubl", function() {deepEqual( Stem("dedublat"), "dedubl");});
test("dedublate -> dedubl", function() {deepEqual( Stem("dedublate"), "dedubl");});
test("deduc -> deduc", function() {deepEqual( Stem("deduc"), "deduc");});
test("deducând -> deduc", function() {deepEqual( Stem("deducând"), "deduc");});
test("deducă -> deduc", function() {deepEqual( Stem("deducă"), "deduc");});
test("deduce -> deduc", function() {deepEqual( Stem("deduce"), "deduc");});
test("deducea -> deduc", function() {deepEqual( Stem("deducea"), "deduc");});
test("deducem -> deduc", function() {deepEqual( Stem("deducem"), "deduc");});
test("deducerea -> deduc", function() {deepEqual( Stem("deducerea"), "deduc");});
test("deduceţi -> deduc", function() {deepEqual( Stem("deduceţi"), "deduc");});
test("deductiv -> deduct", function() {deepEqual( Stem("deductiv"), "deduct");});
test("deductivă -> deduct", function() {deepEqual( Stem("deductivă"), "deduct");});
test("deductive -> deduct", function() {deepEqual( Stem("deductive"), "deduct");});
test("deducţiunea -> deduct", function() {deepEqual( Stem("deducţiunea"), "deduct");});
test("deducţiuni -> deduct", function() {deepEqual( Stem("deducţiuni"), "deduct");});
test("deducţiunii -> deduct", function() {deepEqual( Stem("deducţiunii"), "deduct");});
test("dedus -> dedus", function() {deepEqual( Stem("dedus"), "dedus");});
test("dedusă -> dedus", function() {deepEqual( Stem("dedusă"), "dedus");});
test("deduse -> dedus", function() {deepEqual( Stem("deduse"), "dedus");});
test("defect -> defect", function() {deepEqual( Stem("defect"), "defect");});
test("defecte -> defect", function() {deepEqual( Stem("defecte"), "defect");});
test("defectuos -> defectu", function() {deepEqual( Stem("defectuos"), "defectu");});
test("defectuozităţii -> defectuoz", function() {deepEqual( Stem("defectuozităţii"), "defectuoz");});
test("deferenţă -> deferenţ", function() {deepEqual( Stem("deferenţă"), "deferenţ");});
test("deficitul -> defic", function() {deepEqual( Stem("deficitul"), "defic");});
test("defilare -> defil", function() {deepEqual( Stem("defilare"), "defil");});
test("defilarea -> defil", function() {deepEqual( Stem("defilarea"), "defil");});
test("defilau -> defil", function() {deepEqual( Stem("defilau"), "defil");});
test("defilând -> defil", function() {deepEqual( Stem("defilând"), "defil");});
test("defileu -> defileu", function() {deepEqual( Stem("defileu"), "defileu");});
test("defileului -> defil", function() {deepEqual( Stem("defileului"), "defil");});
test("definească -> defin", function() {deepEqual( Stem("definească"), "defin");});
test("definesc -> defin", function() {deepEqual( Stem("definesc"), "defin");});
test("defineşte -> defin", function() {deepEqual( Stem("defineşte"), "defin");});
test("defineşti -> defin", function() {deepEqual( Stem("defineşti"), "defin");});
test("defini -> defin", function() {deepEqual( Stem("defini"), "defin");});
test("definim -> defin", function() {deepEqual( Stem("definim"), "defin");});
test("definindu -> defin", function() {deepEqual( Stem("definindu"), "defin");});
test("definire -> defin", function() {deepEqual( Stem("definire"), "defin");});
test("definirea -> defin", function() {deepEqual( Stem("definirea"), "defin");});
test("definirii -> definir", function() {deepEqual( Stem("definirii"), "definir");});
test("definit -> defin", function() {deepEqual( Stem("definit"), "defin");});
test("definită -> defin", function() {deepEqual( Stem("definită"), "defin");});
test("definite -> defin", function() {deepEqual( Stem("definite"), "defin");});
test("definitiv -> defin", function() {deepEqual( Stem("definitiv"), "defin");});
test("definitivă -> defin", function() {deepEqual( Stem("definitivă"), "defin");});
test("definitorie -> definitor", function() {deepEqual( Stem("definitorie"), "definitor");});
test("definitorii -> defin", function() {deepEqual( Stem("definitorii"), "defin");});
test("definitoriu -> definitoriu", function() {deepEqual( Stem("definitoriu"), "definitoriu");});
test("definiţia -> definiţ", function() {deepEqual( Stem("definiţia"), "definiţ");});
test("definiţie -> definiţ", function() {deepEqual( Stem("definiţie"), "definiţ");});
test("definiţiune -> defin", function() {deepEqual( Stem("definiţiune"), "defin");});
test("definiţiunea -> defin", function() {deepEqual( Stem("definiţiunea"), "defin");});
test("definiţiuni -> definit", function() {deepEqual( Stem("definiţiuni"), "definit");});
test("deformează -> deform", function() {deepEqual( Stem("deformează"), "deform");});
test("defroque -> defroqu", function() {deepEqual( Stem("defroque"), "defroqu");});
test("degajat -> degaj", function() {deepEqual( Stem("degajat"), "degaj");});
test("degeaba -> degeab", function() {deepEqual( Stem("degeaba"), "degeab");});
test("degenerat -> degener", function() {deepEqual( Stem("degenerat"), "degener");});
test("deget -> deget", function() {deepEqual( Stem("deget"), "deget");});
test("degete -> deget", function() {deepEqual( Stem("degete"), "deget");});
test("degetele -> deget", function() {deepEqual( Stem("degetele"), "deget");});
test("degetelor -> deget", function() {deepEqual( Stem("degetelor"), "deget");});
test("degetul -> deget", function() {deepEqual( Stem("degetul"), "deget");});
test("deghizat -> deghiz", function() {deepEqual( Stem("deghizat"), "deghiz");});
test("degrabă -> degrab", function() {deepEqual( Stem("degrabă"), "degrab");});
test("degradării -> degradăr", function() {deepEqual( Stem("degradării"), "degradăr");});
test("deh -> deh", function() {deepEqual( Stem("deh"), "deh");});
test("dein -> dein", function() {deepEqual( Stem("dein"), "dein");});
test("deja -> dej", function() {deepEqual( Stem("deja"), "dej");});
test("delectare -> delect", function() {deepEqual( Stem("delectare"), "delect");});
test("delicat -> delic", function() {deepEqual( Stem("delicat"), "delic");});
test("delicată -> delic", function() {deepEqual( Stem("delicată"), "delic");});
test("delicate -> delic", function() {deepEqual( Stem("delicate"), "delic");});
test("delicateţe -> delicateţ", function() {deepEqual( Stem("delicateţe"), "delicateţ");});
test("delicatu -> delicatu", function() {deepEqual( Stem("delicatu"), "delicatu");});
test("delicioasă -> delic", function() {deepEqual( Stem("delicioasă"), "delic");});
test("delicioase -> delic", function() {deepEqual( Stem("delicioase"), "delic");});
test("delicios -> delic", function() {deepEqual( Stem("delicios"), "delic");});
test("deliciosule -> deliciosul", function() {deepEqual( Stem("deliciosule"), "deliciosul");});
test("delicioşi -> delic", function() {deepEqual( Stem("delicioşi"), "delic");});
test("delict -> delict", function() {deepEqual( Stem("delict"), "delict");});
test("delicte -> delict", function() {deepEqual( Stem("delicte"), "delict");});
test("delimita -> delim", function() {deepEqual( Stem("delimita"), "delim");});
test("delimitabil -> delimit", function() {deepEqual( Stem("delimitabil"), "delimit");});
test("delimitare -> delimit", function() {deepEqual( Stem("delimitare"), "delimit");});
test("delimitarea -> delimit", function() {deepEqual( Stem("delimitarea"), "delimit");});
test("delimitat -> delimit", function() {deepEqual( Stem("delimitat"), "delimit");});
test("delimitată -> delimit", function() {deepEqual( Stem("delimitată"), "delimit");});
test("delimitaţi -> delimit", function() {deepEqual( Stem("delimitaţi"), "delimit");});
test("delimităm -> delimit", function() {deepEqual( Stem("delimităm"), "delimit");});
test("delimitări -> delimităr", function() {deepEqual( Stem("delimitări"), "delimităr");});
test("delimiteze -> delimit", function() {deepEqual( Stem("delimiteze"), "delimit");});
test("delir -> delir", function() {deepEqual( Stem("delir"), "delir");});
test("delirante -> delir", function() {deepEqual( Stem("delirante"), "delir");});
test("delirat -> delir", function() {deepEqual( Stem("delirat"), "delir");});
test("delirul -> delir", function() {deepEqual( Stem("delirul"), "delir");});
test("delirului -> delir", function() {deepEqual( Stem("delirului"), "delir");});
test("deloc -> deloc", function() {deepEqual( Stem("deloc"), "deloc");});
test("deluros -> delur", function() {deepEqual( Stem("deluros"), "delur");});
test("dem -> dem", function() {deepEqual( Stem("dem"), "dem");});
test("demascat -> demasc", function() {deepEqual( Stem("demascat"), "demasc");});
test("demascată -> demasc", function() {deepEqual( Stem("demascată"), "demasc");});
test("demascându -> demasc", function() {deepEqual( Stem("demascându"), "demasc");});
test("demers -> demers", function() {deepEqual( Stem("demers"), "demers");});
test("demersul -> demers", function() {deepEqual( Stem("demersul"), "demers");});
test("demersurile -> demersur", function() {deepEqual( Stem("demersurile"), "demersur");});
test("demisionase -> demision", function() {deepEqual( Stem("demisionase"), "demision");});
test("demn -> demn", function() {deepEqual( Stem("demn"), "demn");});
test("demne -> demn", function() {deepEqual( Stem("demne"), "demn");});
test("demnitari -> demnitar", function() {deepEqual( Stem("demnitari"), "demnitar");});
test("demnitate -> demnitat", function() {deepEqual( Stem("demnitate"), "demnitat");});
test("demnitatea -> demnitat", function() {deepEqual( Stem("demnitatea"), "demnitat");});
test("demobilizare -> demobiliz", function() {deepEqual( Stem("demobilizare"), "demobiliz");});
test("demobilizat -> demobiliz", function() {deepEqual( Stem("demobilizat"), "demobiliz");});
test("democrat -> democr", function() {deepEqual( Stem("democrat"), "democr");});
test("democrate -> democr", function() {deepEqual( Stem("democrate"), "democr");});
test("democratic -> democrat", function() {deepEqual( Stem("democratic"), "democrat");});
test("democratică -> democrat", function() {deepEqual( Stem("democratică"), "democrat");});
test("demodat -> demod", function() {deepEqual( Stem("demodat"), "demod");});
test("demografii -> demograf", function() {deepEqual( Stem("demografii"), "demograf");});
test("demonstra -> demonstr", function() {deepEqual( Stem("demonstra"), "demonstr");});
test("demonstrare -> demonstr", function() {deepEqual( Stem("demonstrare"), "demonstr");});
test("demonstrat -> demonstr", function() {deepEqual( Stem("demonstrat"), "demonstr");});
test("demonstraţie -> demonstr", function() {deepEqual( Stem("demonstraţie"), "demonstr");});
test("demonstraţii -> demonstr", function() {deepEqual( Stem("demonstraţii"), "demonstr");});
test("demonstraţiile -> demonstr", function() {deepEqual( Stem("demonstraţiile"), "demonstr");});
test("demonstrează -> demonstr", function() {deepEqual( Stem("demonstrează"), "demonstr");});
test("demonstrez -> demonstr", function() {deepEqual( Stem("demonstrez"), "demonstr");});
test("demonstreze -> demonstr", function() {deepEqual( Stem("demonstreze"), "demonstr");});
test("demonul -> demon", function() {deepEqual( Stem("demonul"), "demon");});
test("demoralizat -> demoraliz", function() {deepEqual( Stem("demoralizat"), "demoraliz");});
test("demult -> demult", function() {deepEqual( Stem("demult"), "demult");});
test("denaturare -> denatur", function() {deepEqual( Stem("denaturare"), "denatur");});
test("densitatea -> densitat", function() {deepEqual( Stem("densitatea"), "densitat");});
test("dentistului -> dentist", function() {deepEqual( Stem("dentistului"), "dentist");});
test("denumeşte -> denum", function() {deepEqual( Stem("denumeşte"), "denum");});
test("denumim -> denum", function() {deepEqual( Stem("denumim"), "denum");});
test("denumiri -> denumir", function() {deepEqual( Stem("denumiri"), "denumir");});
test("denunţ -> denunţ", function() {deepEqual( Stem("denunţ"), "denunţ");});
test("denunţa -> denunţ", function() {deepEqual( Stem("denunţa"), "denunţ");});
test("denunţată -> denunţ", function() {deepEqual( Stem("denunţată"), "denunţ");});
test("denunţă -> denunţ", function() {deepEqual( Stem("denunţă"), "denunţ");});
test("denunţe -> denunţ", function() {deepEqual( Stem("denunţe"), "denunţ");});
test("deoarece -> deoarec", function() {deepEqual( Stem("deoarece"), "deoarec");});
test("deocamdată -> deocamd", function() {deepEqual( Stem("deocamdată"), "deocamd");});
test("deocheate -> deocheat", function() {deepEqual( Stem("deocheate"), "deocheat");});
test("deochiate -> deochiat", function() {deepEqual( Stem("deochiate"), "deochiat");});
test("deodată -> deodat", function() {deepEqual( Stem("deodată"), "deodat");});
test("deoparte -> deopart", function() {deepEqual( Stem("deoparte"), "deopart");});
test("deopotrivă -> deopotr", function() {deepEqual( Stem("deopotrivă"), "deopotr");});
test("deosebească -> deoseb", function() {deepEqual( Stem("deosebească"), "deoseb");});
test("deosebesc -> deoseb", function() {deepEqual( Stem("deosebesc"), "deoseb");});
test("deosebeşte -> deoseb", function() {deepEqual( Stem("deosebeşte"), "deoseb");});
test("deosebi -> deoseb", function() {deepEqual( Stem("deosebi"), "deoseb");});
test("deosebim -> deoseb", function() {deepEqual( Stem("deosebim"), "deoseb");});
test("deosebire -> deoseb", function() {deepEqual( Stem("deosebire"), "deoseb");});
test("deosebirea -> deoseb", function() {deepEqual( Stem("deosebirea"), "deoseb");});
test("deosebiri -> deosebir", function() {deepEqual( Stem("deosebiri"), "deosebir");});
test("deosebirii -> deosebir", function() {deepEqual( Stem("deosebirii"), "deosebir");});
test("deosebirile -> deosebir", function() {deepEqual( Stem("deosebirile"), "deosebir");});
test("deosebit -> deoseb", function() {deepEqual( Stem("deosebit"), "deoseb");});
test("deosebită -> deoseb", function() {deepEqual( Stem("deosebită"), "deoseb");});
test("deosebite -> deoseb", function() {deepEqual( Stem("deosebite"), "deoseb");});
test("deosebitele -> deoseb", function() {deepEqual( Stem("deosebitele"), "deoseb");});
test("deosebiţi -> deoseb", function() {deepEqual( Stem("deosebiţi"), "deoseb");});
test("departe -> depart", function() {deepEqual( Stem("departe"), "depart");});
test("depănau -> depăn", function() {deepEqual( Stem("depănau"), "depăn");});
test("depărtam -> depărt", function() {deepEqual( Stem("depărtam"), "depărt");});
test("depărtare -> depărt", function() {deepEqual( Stem("depărtare"), "depărt");});
test("depărtarea -> depărt", function() {deepEqual( Stem("depărtarea"), "depărt");});
test("depărtat -> depărt", function() {deepEqual( Stem("depărtat"), "depărt");});
test("depărtându -> depărt", function() {deepEqual( Stem("depărtându"), "depărt");});
test("depărtăm -> depărt", function() {deepEqual( Stem("depărtăm"), "depărt");});
test("depărtează -> depărt", function() {deepEqual( Stem("depărtează"), "depărt");});
test("depăşeau -> depăş", function() {deepEqual( Stem("depăşeau"), "depăş");});
test("depăşi -> depăş", function() {deepEqual( Stem("depăşi"), "depăş");});
test("depăşire -> depăş", function() {deepEqual( Stem("depăşire"), "depăş");});
test("depăşirii -> depăşir", function() {deepEqual( Stem("depăşirii"), "depăşir");});
test("depăşirile -> depăşir", function() {deepEqual( Stem("depăşirile"), "depăşir");});
test("depăşisem -> depăş", function() {deepEqual( Stem("depăşisem"), "depăş");});
test("depăşit -> depăş", function() {deepEqual( Stem("depăşit"), "depăş");});
test("depăşită -> depăş", function() {deepEqual( Stem("depăşită"), "depăş");});
test("depăşiţi -> depăş", function() {deepEqual( Stem("depăşiţi"), "depăş");});
test("dependent -> dependent", function() {deepEqual( Stem("dependent"), "dependent");});
test("dependentă -> dependent", function() {deepEqual( Stem("dependentă"), "dependent");});
test("dependentăen -> dependentăen", function() {deepEqual( Stem("dependentăen"), "dependentăen");});
test("dependenten -> dependenten", function() {deepEqual( Stem("dependenten"), "dependenten");});
test("dependention -> dependention", function() {deepEqual( Stem("dependention"), "dependention");});
test("dependenţa -> dependenţ", function() {deepEqual( Stem("dependenţa"), "dependenţ");});
test("dependenţă -> dependenţ", function() {deepEqual( Stem("dependenţă"), "dependenţ");});
test("dependenţăen -> dependenţăen", function() {deepEqual( Stem("dependenţăen"), "dependenţăen");});
test("dependenţe -> dependenţ", function() {deepEqual( Stem("dependenţe"), "dependenţ");});
test("dependenţei -> dependenţe", function() {deepEqual( Stem("dependenţei"), "dependenţe");});
test("dependenţelor -> dependenţ", function() {deepEqual( Stem("dependenţelor"), "dependenţ");});
test("dependenţien -> dependenţien", function() {deepEqual( Stem("dependenţien"), "dependenţien");});
test("dependinţe -> dependinţ", function() {deepEqual( Stem("dependinţe"), "dependinţ");});
test("depersonalizat -> depersonaliz", function() {deepEqual( Stem("depersonalizat"), "depersonaliz");});
test("depind -> depind", function() {deepEqual( Stem("depind"), "depind");});
test("depindă -> depind", function() {deepEqual( Stem("depindă"), "depind");});
test("depinde -> depind", function() {deepEqual( Stem("depinde"), "depind");});
test("depindea -> depind", function() {deepEqual( Stem("depindea"), "depind");});
test("depindeam -> depind", function() {deepEqual( Stem("depindeam"), "depind");});
test("depins -> depins", function() {deepEqual( Stem("depins"), "depins");});
test("depinzînd -> depinzînd", function() {deepEqual( Stem("depinzînd"), "depinzînd");});
test("depistare -> depist", function() {deepEqual( Stem("depistare"), "depist");});
test("depistăm -> depist", function() {deepEqual( Stem("depistăm"), "depist");});
test("deplasare -> deplas", function() {deepEqual( Stem("deplasare"), "deplas");});
test("deplasat -> deplas", function() {deepEqual( Stem("deplasat"), "deplas");});
test("deplin -> deplin", function() {deepEqual( Stem("deplin"), "deplin");});
test("deplină -> deplin", function() {deepEqual( Stem("deplină"), "deplin");});
test("depline -> deplin", function() {deepEqual( Stem("depline"), "deplin");});
test("depozit -> depoz", function() {deepEqual( Stem("depozit"), "depoz");});
test("depozite -> depoz", function() {deepEqual( Stem("depozite"), "depoz");});
test("depozitele -> depoz", function() {deepEqual( Stem("depozitele"), "depoz");});
test("depozitul -> depoz", function() {deepEqual( Stem("depozitul"), "depoz");});
test("deprimat -> deprim", function() {deepEqual( Stem("deprimat"), "deprim");});
test("deprindere -> deprind", function() {deepEqual( Stem("deprindere"), "deprind");});
test("deprinderi -> deprinder", function() {deepEqual( Stem("deprinderi"), "deprinder");});
test("deprinderile -> deprinder", function() {deepEqual( Stem("deprinderile"), "deprinder");});
test("deprins -> deprins", function() {deepEqual( Stem("deprins"), "deprins");});
test("deprinsă -> deprins", function() {deepEqual( Stem("deprinsă"), "deprins");});
test("depun -> depun", function() {deepEqual( Stem("depun"), "depun");});
test("depunând -> depun", function() {deepEqual( Stem("depunând"), "depun");});
test("depună -> depun", function() {deepEqual( Stem("depună"), "depun");});
test("depurative -> depur", function() {deepEqual( Stem("depurative"), "depur");});
test("depusese -> depu", function() {deepEqual( Stem("depusese"), "depu");});
test("deputat -> deput", function() {deepEqual( Stem("deputat"), "deput");});
test("deputatul -> deput", function() {deepEqual( Stem("deputatul"), "deput");});
test("deputatului -> deput", function() {deepEqual( Stem("deputatului"), "deput");});
test("deputaţi -> deput", function() {deepEqual( Stem("deputaţi"), "deput");});
test("der -> der", function() {deepEqual( Stem("der"), "der");});
test("deranjat -> deranj", function() {deepEqual( Stem("deranjat"), "deranj");});
test("deranjează -> deranj", function() {deepEqual( Stem("deranjează"), "deranj");});
test("derby -> derby", function() {deepEqual( Stem("derby"), "derby");});
test("deriva -> deriv", function() {deepEqual( Stem("deriva"), "deriv");});
test("derivat -> deriv", function() {deepEqual( Stem("derivat"), "deriv");});
test("derivativ -> deriv", function() {deepEqual( Stem("derivativ"), "deriv");});
test("derivativă -> deriv", function() {deepEqual( Stem("derivativă"), "deriv");});
test("des -> des", function() {deepEqual( Stem("des"), "des");});
test("desaga -> desag", function() {deepEqual( Stem("desaga"), "desag");});
test("desagă -> desag", function() {deepEqual( Stem("desagă"), "desag");});
test("desăvârşire -> desăvârş", function() {deepEqual( Stem("desăvârşire"), "desăvârş");});
test("desăvârşit -> desăvârş", function() {deepEqual( Stem("desăvârşit"), "desăvârş");});
test("desăvârşită -> desăvârş", function() {deepEqual( Stem("desăvârşită"), "desăvârş");});
test("desăvârşite -> desăvârş", function() {deepEqual( Stem("desăvârşite"), "desăvârş");});
test("desăvârşiţi -> desăvârş", function() {deepEqual( Stem("desăvârşiţi"), "desăvârş");});
test("descalificare -> descalific", function() {deepEqual( Stem("descalificare"), "descalific");});
test("descarcă -> descarc", function() {deepEqual( Stem("descarcă"), "descarc");});
test("descarce -> descarc", function() {deepEqual( Stem("descarce"), "descarc");});
test("descartes -> descartes", function() {deepEqual( Stem("descartes"), "descartes");});
test("descălecat -> descălec", function() {deepEqual( Stem("descălecat"), "descălec");});
test("descărcarea -> descărc", function() {deepEqual( Stem("descărcarea"), "descărc");});
test("descendenţă -> descendenţ", function() {deepEqual( Stem("descendenţă"), "descendenţ");});
test("descheiat -> deschei", function() {deepEqual( Stem("descheiat"), "deschei");});
test("descheie -> deschei", function() {deepEqual( Stem("descheie"), "deschei");});
test("descheiere -> deschei", function() {deepEqual( Stem("descheiere"), "deschei");});
test("deschid -> deschid", function() {deepEqual( Stem("deschid"), "deschid");});
test("deschidă -> deschid", function() {deepEqual( Stem("deschidă"), "deschid");});
test("deschide -> deschid", function() {deepEqual( Stem("deschide"), "deschid");});
test("deschidem -> deschid", function() {deepEqual( Stem("deschidem"), "deschid");});
test("deschiderea -> deschid", function() {deepEqual( Stem("deschiderea"), "deschid");});
test("deschideţi -> deschid", function() {deepEqual( Stem("deschideţi"), "deschid");});
test("deschis -> deschis", function() {deepEqual( Stem("deschis"), "deschis");});
test("deschisă -> deschis", function() {deepEqual( Stem("deschisă"), "deschis");});
test("deschise -> desch", function() {deepEqual( Stem("deschise"), "desch");});
test("deschişi -> desch", function() {deepEqual( Stem("deschişi"), "desch");});
test("descifrez -> descifr", function() {deepEqual( Stem("descifrez"), "descifr");});
test("descompun -> descompun", function() {deepEqual( Stem("descompun"), "descompun");});
test("descompune -> descompun", function() {deepEqual( Stem("descompune"), "descompun");});
test("descompunerea -> descompun", function() {deepEqual( Stem("descompunerea"), "descompun");});
test("descompuns -> descompuns", function() {deepEqual( Stem("descompuns"), "descompuns");});
test("desconsiderare -> desconsider", function() {deepEqual( Stem("desconsiderare"), "desconsider");});
test("descopăr -> descopăr", function() {deepEqual( Stem("descopăr"), "descopăr");});
test("descoperă -> descoper", function() {deepEqual( Stem("descoperă"), "descoper");});
test("descopere -> descop", function() {deepEqual( Stem("descopere"), "descop");});
test("descoperea -> descop", function() {deepEqual( Stem("descoperea"), "descop");});
test("descopeream -> descoper", function() {deepEqual( Stem("descopeream"), "descoper");});
test("descoperi -> descoper", function() {deepEqual( Stem("descoperi"), "descoper");});
test("descoperim -> descoper", function() {deepEqual( Stem("descoperim"), "descoper");});
test("descoperire -> descoper", function() {deepEqual( Stem("descoperire"), "descoper");});
test("descoperise -> descoper", function() {deepEqual( Stem("descoperise"), "descoper");});
test("descoperisem -> descoper", function() {deepEqual( Stem("descoperisem"), "descoper");});
test("descoperit -> descoper", function() {deepEqual( Stem("descoperit"), "descoper");});
test("descoperitor -> descoper", function() {deepEqual( Stem("descoperitor"), "descoper");});
test("descreieraţii -> descreier", function() {deepEqual( Stem("descreieraţii"), "descreier");});
test("descreşte -> descr", function() {deepEqual( Stem("descreşte"), "descr");});
test("descreţeşte -> descreţ", function() {deepEqual( Stem("descreţeşte"), "descreţ");});
test("descria -> descr", function() {deepEqual( Stem("descria"), "descr");});
test("descrie -> descr", function() {deepEqual( Stem("descrie"), "descr");});
test("descriem -> descr", function() {deepEqual( Stem("descriem"), "descr");});
test("descrieri -> descrier", function() {deepEqual( Stem("descrieri"), "descrier");});
test("descriptivă -> descript", function() {deepEqual( Stem("descriptivă"), "descript");});
test("descriptive -> descript", function() {deepEqual( Stem("descriptive"), "descript");});
test("descris -> descris", function() {deepEqual( Stem("descris"), "descris");});
test("descrise -> descr", function() {deepEqual( Stem("descrise"), "descr");});
test("descriu -> descriu", function() {deepEqual( Stem("descriu"), "descriu");});
test("descruntat -> descrunt", function() {deepEqual( Stem("descruntat"), "descrunt");});
test("desculţ -> desculţ", function() {deepEqual( Stem("desculţ"), "desculţ");});
test("descurajat -> descuraj", function() {deepEqual( Stem("descurajat"), "descuraj");});
test("descurajată -> descuraj", function() {deepEqual( Stem("descurajată"), "descuraj");});
test("descurăjătoare -> descurăj", function() {deepEqual( Stem("descurăjătoare"), "descurăj");});
test("descurc -> descurc", function() {deepEqual( Stem("descurc"), "descurc");});
test("descurcare -> descurc", function() {deepEqual( Stem("descurcare"), "descurc");});
test("descurcat -> descurc", function() {deepEqual( Stem("descurcat"), "descurc");});
test("descurcă -> descurc", function() {deepEqual( Stem("descurcă"), "descurc");});
test("descurcăm -> descurc", function() {deepEqual( Stem("descurcăm"), "descurc");});
test("dese -> des", function() {deepEqual( Stem("dese"), "des");});
test("desemna -> desemn", function() {deepEqual( Stem("desemna"), "desemn");});
test("desemnat -> desemn", function() {deepEqual( Stem("desemnat"), "desemn");});
test("desemnată -> desemn", function() {deepEqual( Stem("desemnată"), "desemn");});
test("desemnaţi -> desemn", function() {deepEqual( Stem("desemnaţi"), "desemn");});
test("desemnează -> desemn", function() {deepEqual( Stem("desemnează"), "desemn");});
test("desemneze -> desemn", function() {deepEqual( Stem("desemneze"), "desemn");});
test("desen -> desen", function() {deepEqual( Stem("desen"), "desen");});
test("desena -> desen", function() {deepEqual( Stem("desena"), "desen");});
test("desenare -> desen", function() {deepEqual( Stem("desenare"), "desen");});
test("desenarea -> desen", function() {deepEqual( Stem("desenarea"), "desen");});
test("desenat -> desen", function() {deepEqual( Stem("desenat"), "desen");});
test("desenată -> desen", function() {deepEqual( Stem("desenată"), "desen");});
test("desenate -> desen", function() {deepEqual( Stem("desenate"), "desen");});
test("desenatorul -> desen", function() {deepEqual( Stem("desenatorul"), "desen");});
test("desenaţi -> desen", function() {deepEqual( Stem("desenaţi"), "desen");});
test("desenării -> desenăr", function() {deepEqual( Stem("desenării"), "desenăr");});
test("desene -> desen", function() {deepEqual( Stem("desene"), "desen");});
test("desenează -> desen", function() {deepEqual( Stem("desenează"), "desen");});
test("desenelor -> desen", function() {deepEqual( Stem("desenelor"), "desen");});
test("deseneze -> desen", function() {deepEqual( Stem("deseneze"), "desen");});
test("deseori -> deseor", function() {deepEqual( Stem("deseori"), "deseor");});
test("deservesc -> deserv", function() {deepEqual( Stem("deservesc"), "deserv");});
test("deserveşte -> deserv", function() {deepEqual( Stem("deserveşte"), "deserv");});
test("deservi -> deserv", function() {deepEqual( Stem("deservi"), "deserv");});
test("deservicii -> deserv", function() {deepEqual( Stem("deservicii"), "deserv");});
test("deservit -> deserv", function() {deepEqual( Stem("deservit"), "deserv");});
test("desfac -> desfac", function() {deepEqual( Stem("desfac"), "desfac");});
test("desfacă -> desfac", function() {deepEqual( Stem("desfacă"), "desfac");});
test("desface -> desfac", function() {deepEqual( Stem("desface"), "desfac");});
test("desfacem -> desfac", function() {deepEqual( Stem("desfacem"), "desfac");});
test("desfacerea -> desfac", function() {deepEqual( Stem("desfacerea"), "desfac");});
test("desfaci -> desfac", function() {deepEqual( Stem("desfaci"), "desfac");});
test("desfăcea -> desfăc", function() {deepEqual( Stem("desfăcea"), "desfăc");});
test("desfăcut -> desfăc", function() {deepEqual( Stem("desfăcut"), "desfăc");});
test("desfăcută -> desfăc", function() {deepEqual( Stem("desfăcută"), "desfăc");});
test("desfăcute -> desfăc", function() {deepEqual( Stem("desfăcute"), "desfăc");});
test("desfăşoară -> desfăşoar", function() {deepEqual( Stem("desfăşoară"), "desfăşoar");});
test("desfăşor -> desfăşor", function() {deepEqual( Stem("desfăşor"), "desfăşor");});
test("desfăşori -> desfăşor", function() {deepEqual( Stem("desfăşori"), "desfăşor");});
test("desfăşur -> desfăşur", function() {deepEqual( Stem("desfăşur"), "desfăşur");});
test("desfăşurare -> desfăşur", function() {deepEqual( Stem("desfăşurare"), "desfăşur");});
test("desfăşurarea -> desfăşur", function() {deepEqual( Stem("desfăşurarea"), "desfăşur");});
test("desfăşurată -> desfăşur", function() {deepEqual( Stem("desfăşurată"), "desfăşur");});
test("desfăşuraţi -> desfăşur", function() {deepEqual( Stem("desfăşuraţi"), "desfăşur");});
test("desfăşurând -> desfăşur", function() {deepEqual( Stem("desfăşurând"), "desfăşur");});
test("desfăşură -> desfăş", function() {deepEqual( Stem("desfăşură"), "desfăş");});
test("desfăşurăm -> desfăş", function() {deepEqual( Stem("desfăşurăm"), "desfăş");});
test("desfătare -> desfăt", function() {deepEqual( Stem("desfătare"), "desfăt");});
test("desfid -> desfid", function() {deepEqual( Stem("desfid"), "desfid");});
test("desfigurare -> desfigur", function() {deepEqual( Stem("desfigurare"), "desfigur");});
test("desfigurat -> desfigur", function() {deepEqual( Stem("desfigurat"), "desfigur");});
test("desfiinţarea -> desfiinţ", function() {deepEqual( Stem("desfiinţarea"), "desfiinţ");});
test("desfiinţând -> desfiinţ", function() {deepEqual( Stem("desfiinţând"), "desfiinţ");});
test("desfundă -> desfund", function() {deepEqual( Stem("desfundă"), "desfund");});
test("desigur -> desigur", function() {deepEqual( Stem("desigur"), "desigur");});
test("desmoulins -> desmoulins", function() {deepEqual( Stem("desmoulins"), "desmoulins");});
test("desolidarizează -> desolidariz", function() {deepEqual( Stem("desolidarizează"), "desolidariz");});
test("despacheteze -> despachet", function() {deepEqual( Stem("despacheteze"), "despachet");});
test("despart -> despart", function() {deepEqual( Stem("despart"), "despart");});
test("despartă -> despart", function() {deepEqual( Stem("despartă"), "despart");});
test("desparţi -> desparţ", function() {deepEqual( Stem("desparţi"), "desparţ");});
test("despăgubire -> despăgub", function() {deepEqual( Stem("despăgubire"), "despăgub");});
test("despăgubirea -> despăgub", function() {deepEqual( Stem("despăgubirea"), "despăgub");});
test("despărţea -> despărţ", function() {deepEqual( Stem("despărţea"), "despărţ");});
test("despărţi -> despărţ", function() {deepEqual( Stem("despărţi"), "despărţ");});
test("despărţim -> despărţ", function() {deepEqual( Stem("despărţim"), "despărţ");});
test("despărţire -> despărţ", function() {deepEqual( Stem("despărţire"), "despărţ");});
test("despărţirea -> despărţ", function() {deepEqual( Stem("despărţirea"), "despărţ");});
test("despărţiri -> despărţir", function() {deepEqual( Stem("despărţiri"), "despărţir");});
test("despărţirii -> despărţir", function() {deepEqual( Stem("despărţirii"), "despărţir");});
test("despărţit -> despărţ", function() {deepEqual( Stem("despărţit"), "despărţ");});
test("despărţită -> despărţ", function() {deepEqual( Stem("despărţită"), "despărţ");});
test("despărţiţi -> despărţ", function() {deepEqual( Stem("despărţiţi"), "despărţ");});
test("desperare -> desper", function() {deepEqual( Stem("desperare"), "desper");});
test("desperat -> desper", function() {deepEqual( Stem("desperat"), "desper");});
test("desperării -> desperăr", function() {deepEqual( Stem("desperării"), "desperăr");});
test("despicat -> despic", function() {deepEqual( Stem("despicat"), "despic");});
test("despică -> despic", function() {deepEqual( Stem("despică"), "despic");});
test("despicăm -> despic", function() {deepEqual( Stem("despicăm"), "despic");});
test("despletit -> desplet", function() {deepEqual( Stem("despletit"), "desplet");});
test("despotul -> despot", function() {deepEqual( Stem("despotul"), "despot");});
test("despre -> despr", function() {deepEqual( Stem("despre"), "despr");});
test("desprind -> despr", function() {deepEqual( Stem("desprind"), "despr");});
test("desprinde -> desprind", function() {deepEqual( Stem("desprinde"), "desprind");});
test("desprindem -> desprind", function() {deepEqual( Stem("desprindem"), "desprind");});
test("desprins -> desprins", function() {deepEqual( Stem("desprins"), "desprins");});
test("desprinsă -> desprins", function() {deepEqual( Stem("desprinsă"), "desprins");});
test("desprinse -> desprin", function() {deepEqual( Stem("desprinse"), "desprin");});
test("desprinzându -> desprinz", function() {deepEqual( Stem("desprinzându"), "desprinz");});
test("desrusit -> desrus", function() {deepEqual( Stem("desrusit"), "desrus");});
test("destinată -> destin", function() {deepEqual( Stem("destinată"), "destin");});
test("destinaţia -> destin", function() {deepEqual( Stem("destinaţia"), "destin");});
test("destinaţie -> destin", function() {deepEqual( Stem("destinaţie"), "destin");});
test("destinau -> destin", function() {deepEqual( Stem("destinau"), "destin");});
test("destindere -> destind", function() {deepEqual( Stem("destindere"), "destind");});
test("destinderile -> destinder", function() {deepEqual( Stem("destinderile"), "destinder");});
test("destinele -> destin", function() {deepEqual( Stem("destinele"), "destin");});
test("destinelor -> destin", function() {deepEqual( Stem("destinelor"), "destin");});
test("destins -> destins", function() {deepEqual( Stem("destins"), "destins");});
test("destinul -> destin", function() {deepEqual( Stem("destinul"), "destin");});
test("destramă -> destram", function() {deepEqual( Stem("destramă"), "destram");});
test("destructibilă -> destruct", function() {deepEqual( Stem("destructibilă"), "destruct");});
test("destui -> dest", function() {deepEqual( Stem("destui"), "dest");});
test("destul -> dest", function() {deepEqual( Stem("destul"), "dest");});
test("destulă -> destul", function() {deepEqual( Stem("destulă"), "destul");});
test("destule -> destul", function() {deepEqual( Stem("destule"), "destul");});
test("deşănţată -> deşănţ", function() {deepEqual( Stem("deşănţată"), "deşănţ");});
test("deşănţate -> deşănţ", function() {deepEqual( Stem("deşănţate"), "deşănţ");});
test("deşărtăciune -> deşărtăciun", function() {deepEqual( Stem("deşărtăciune"), "deşărtăciun");});
test("deşert -> deşert", function() {deepEqual( Stem("deşert"), "deşert");});
test("deşeuri -> deşeur", function() {deepEqual( Stem("deşeuri"), "deşeur");});
test("deşi -> deş", function() {deepEqual( Stem("deşi"), "deş");});
test("deşiră -> deşir", function() {deepEqual( Stem("deşiră"), "deşir");});
test("deşteaptă -> deşteapt", function() {deepEqual( Stem("deşteaptă"), "deşteapt");});
test("deştept -> deştept", function() {deepEqual( Stem("deştept"), "deştept");});
test("deşteptam -> deştept", function() {deepEqual( Stem("deşteptam"), "deştept");});
test("deşteptare -> deştept", function() {deepEqual( Stem("deşteptare"), "deştept");});
test("deşteptat -> deştept", function() {deepEqual( Stem("deşteptat"), "deştept");});
test("deşteptăciunii -> deşteptăciun", function() {deepEqual( Stem("deşteptăciunii"), "deşteptăciun");});
test("deştepţi -> deştepţ", function() {deepEqual( Stem("deştepţi"), "deştepţ");});
test("deştepţii -> deştepţ", function() {deepEqual( Stem("deştepţii"), "deştepţ");});
test("deşuchiate -> deşuch", function() {deepEqual( Stem("deşuchiate"), "deşuch");});
test("detalii -> detal", function() {deepEqual( Stem("detalii"), "detal");});
test("detaliile -> detal", function() {deepEqual( Stem("detaliile"), "detal");});
test("detaliilor -> detal", function() {deepEqual( Stem("detaliilor"), "detal");});
test("detaliu -> detaliu", function() {deepEqual( Stem("detaliu"), "detaliu");});
test("detaşamentele -> detaşament", function() {deepEqual( Stem("detaşamentele"), "detaşament");});
test("detaşat -> detaş", function() {deepEqual( Stem("detaşat"), "detaş");});
test("detectiv -> detect", function() {deepEqual( Stem("detectiv"), "detect");});
test("detectivul -> detect", function() {deepEqual( Stem("detectivul"), "detect");});
test("determina -> determin", function() {deepEqual( Stem("determina"), "determin");});
test("determinant -> determin", function() {deepEqual( Stem("determinant"), "determin");});
test("determinare -> determin", function() {deepEqual( Stem("determinare"), "determin");});
test("determinarea -> determin", function() {deepEqual( Stem("determinarea"), "determin");});
test("determinat -> determin", function() {deepEqual( Stem("determinat"), "determin");});
test("determinată -> determin", function() {deepEqual( Stem("determinată"), "determin");});
test("determinate -> determin", function() {deepEqual( Stem("determinate"), "determin");});
test("determină -> determin", function() {deepEqual( Stem("determină"), "determin");});
test("determinării -> determinăr", function() {deepEqual( Stem("determinării"), "determinăr");});
test("determinările -> determinăr", function() {deepEqual( Stem("determinările"), "determinăr");});
test("determinismul -> determinist", function() {deepEqual( Stem("determinismul"), "determinist");});
test("detracat -> detrac", function() {deepEqual( Stem("detracat"), "detrac");});
test("detunătură -> detunăt", function() {deepEqual( Stem("detunătură"), "detunăt");});
test("detunături -> detunătur", function() {deepEqual( Stem("detunături"), "detunătur");});
test("deunăzi -> deunăz", function() {deepEqual( Stem("deunăzi"), "deunăz");});
test("deutschland -> deutschland", function() {deepEqual( Stem("deutschland"), "deutschland");});
test("devale -> deval", function() {deepEqual( Stem("devale"), "deval");});
test("devalorarea -> devalor", function() {deepEqual( Stem("devalorarea"), "devalor");});
test("devasta -> devast", function() {deepEqual( Stem("devasta"), "devast");});
test("devastat -> devast", function() {deepEqual( Stem("devastat"), "devast");});
test("devenea -> deven", function() {deepEqual( Stem("devenea"), "deven");});
test("deveneai -> deven", function() {deepEqual( Stem("deveneai"), "deven");});
test("deveneam -> deven", function() {deepEqual( Stem("deveneam"), "deven");});
test("deveneau -> deven", function() {deepEqual( Stem("deveneau"), "deven");});
test("deveni -> deven", function() {deepEqual( Stem("deveni"), "deven");});
test("devenind -> deven", function() {deepEqual( Stem("devenind"), "deven");});
test("devenire -> deven", function() {deepEqual( Stem("devenire"), "deven");});
test("devenirea -> deven", function() {deepEqual( Stem("devenirea"), "deven");});
test("devenirile -> devenir", function() {deepEqual( Stem("devenirile"), "devenir");});
test("devenise -> deven", function() {deepEqual( Stem("devenise"), "deven");});
test("devenisem -> deven", function() {deepEqual( Stem("devenisem"), "deven");});
test("deveniseră -> deven", function() {deepEqual( Stem("deveniseră"), "deven");});
test("devenit -> deven", function() {deepEqual( Stem("devenit"), "deven");});
test("devenită -> deven", function() {deepEqual( Stem("devenită"), "deven");});
test("devenite -> deven", function() {deepEqual( Stem("devenite"), "deven");});
test("deveniţi -> deven", function() {deepEqual( Stem("deveniţi"), "deven");});
test("devie -> dev", function() {deepEqual( Stem("devie"), "dev");});
test("deviem -> dev", function() {deepEqual( Stem("deviem"), "dev");});
test("devin -> devin", function() {deepEqual( Stem("devin"), "devin");});
test("devină -> devin", function() {deepEqual( Stem("devină"), "devin");});
test("devine -> devin", function() {deepEqual( Stem("devine"), "devin");});
test("devize -> deviz", function() {deepEqual( Stem("devize"), "deviz");});
test("devotamente -> devotament", function() {deepEqual( Stem("devotamente"), "devotament");});
test("devotamentul -> devotament", function() {deepEqual( Stem("devotamentul"), "devotament");});
test("devotat -> devot", function() {deepEqual( Stem("devotat"), "devot");});
test("devotată -> devot", function() {deepEqual( Stem("devotată"), "devot");});
test("devotează -> devot", function() {deepEqual( Stem("devotează"), "devot");});
test("devreme -> devrem", function() {deepEqual( Stem("devreme"), "devrem");});
test("dezagreabil -> dezagr", function() {deepEqual( Stem("dezagreabil"), "dezagr");});
test("dezagreabilă -> dezagr", function() {deepEqual( Stem("dezagreabilă"), "dezagr");});
test("dezagreabile -> dezagr", function() {deepEqual( Stem("dezagreabile"), "dezagr");});
test("dezaprobă -> dezaprob", function() {deepEqual( Stem("dezaprobă"), "dezaprob");});
test("dezaprobările -> dezaprobăr", function() {deepEqual( Stem("dezaprobările"), "dezaprobăr");});
test("dezarmare -> dezarm", function() {deepEqual( Stem("dezarmare"), "dezarm");});
test("dezarmarea -> dezarm", function() {deepEqual( Stem("dezarmarea"), "dezarm");});
test("dezarmării -> dezarmăr", function() {deepEqual( Stem("dezarmării"), "dezarmăr");});
test("dezarmează -> dezarm", function() {deepEqual( Stem("dezarmează"), "dezarm");});
test("dezarticularea -> dezarticul", function() {deepEqual( Stem("dezarticularea"), "dezarticul");});
test("dezarticulate -> dezarticul", function() {deepEqual( Stem("dezarticulate"), "dezarticul");});
test("dezastre -> dezastr", function() {deepEqual( Stem("dezastre"), "dezastr");});
test("dezastru -> dezastru", function() {deepEqual( Stem("dezastru"), "dezastru");});
test("dezastruoasă -> dezastru", function() {deepEqual( Stem("dezastruoasă"), "dezastru");});
test("dezastruos -> dezastru", function() {deepEqual( Stem("dezastruos"), "dezastru");});
test("dezbateţi -> dezbat", function() {deepEqual( Stem("dezbateţi"), "dezbat");});
test("dezbătut -> dezbăt", function() {deepEqual( Stem("dezbătut"), "dezbăt");});
test("dezbătuta -> dezbăt", function() {deepEqual( Stem("dezbătuta"), "dezbăt");});
test("dezbătute -> dezbăt", function() {deepEqual( Stem("dezbătute"), "dezbăt");});
test("dezbrac -> dezbrac", function() {deepEqual( Stem("dezbrac"), "dezbrac");});
test("dezbrăca -> dezbrăc", function() {deepEqual( Stem("dezbrăca"), "dezbrăc");});
test("dezbrăcat -> dezbrăc", function() {deepEqual( Stem("dezbrăcat"), "dezbrăc");});
test("dezbrăcatul -> dezbrăc", function() {deepEqual( Stem("dezbrăcatul"), "dezbrăc");});
test("dezechilibrul -> dezechilibr", function() {deepEqual( Stem("dezechilibrul"), "dezechilibr");});
test("dezerta -> dezert", function() {deepEqual( Stem("dezerta"), "dezert");});
test("dezertare -> dezert", function() {deepEqual( Stem("dezertare"), "dezert");});
test("dezertat -> dezert", function() {deepEqual( Stem("dezertat"), "dezert");});
test("dezertând -> dezert", function() {deepEqual( Stem("dezertând"), "dezert");});
test("dezertăm -> dezert", function() {deepEqual( Stem("dezertăm"), "dezert");});
test("dezertez -> dezert", function() {deepEqual( Stem("dezertez"), "dezert");});
test("dezertor -> dezertor", function() {deepEqual( Stem("dezertor"), "dezertor");});
test("dezgheţat -> dezgheţ", function() {deepEqual( Stem("dezgheţat"), "dezgheţ");});
test("dezgust -> dezgust", function() {deepEqual( Stem("dezgust"), "dezgust");});
test("dezgustase -> dezgust", function() {deepEqual( Stem("dezgustase"), "dezgust");});
test("dezgustat -> dezgust", function() {deepEqual( Stem("dezgustat"), "dezgust");});
test("dezgustaţi -> dezgust", function() {deepEqual( Stem("dezgustaţi"), "dezgust");});
test("dezgustătoare -> dezgust", function() {deepEqual( Stem("dezgustătoare"), "dezgust");});
test("dezgustător -> dezgust", function() {deepEqual( Stem("dezgustător"), "dezgust");});
test("dezgustul -> dezgust", function() {deepEqual( Stem("dezgustul"), "dezgust");});
test("dezic -> dezic", function() {deepEqual( Stem("dezic"), "dezic");});
test("deziluzii -> deziluz", function() {deepEqual( Stem("deziluzii"), "deziluz");});
test("deziluzionată -> deziluzion", function() {deepEqual( Stem("deziluzionată"), "deziluzion");});
test("dezinfecteze -> dezinfect", function() {deepEqual( Stem("dezinfecteze"), "dezinfect");});
test("dezinteresa -> dezinteres", function() {deepEqual( Stem("dezinteresa"), "dezinteres");});
test("dezinteresarea -> dezinteres", function() {deepEqual( Stem("dezinteresarea"), "dezinteres");});
test("dezinteresat -> dezinteres", function() {deepEqual( Stem("dezinteresat"), "dezinteres");});
test("dezinteresată -> dezinteres", function() {deepEqual( Stem("dezinteresată"), "dezinteres");});
test("dezlănţui -> dezlănţ", function() {deepEqual( Stem("dezlănţui"), "dezlănţ");});
test("dezlănţuire -> dezlănţu", function() {deepEqual( Stem("dezlănţuire"), "dezlănţu");});
test("dezlănţuit -> dezlănţu", function() {deepEqual( Stem("dezlănţuit"), "dezlănţu");});
test("dezlănţuită -> dezlănţu", function() {deepEqual( Stem("dezlănţuită"), "dezlănţu");});
test("dezleagă -> dezleag", function() {deepEqual( Stem("dezleagă"), "dezleag");});
test("dezlegare -> dezleg", function() {deepEqual( Stem("dezlegare"), "dezleg");});
test("dezlegat -> dezleg", function() {deepEqual( Stem("dezlegat"), "dezleg");});
test("dezlipea -> dezlip", function() {deepEqual( Stem("dezlipea"), "dezlip");});
test("dezlipim -> dezlip", function() {deepEqual( Stem("dezlipim"), "dezlip");});
test("dezmăţată -> dezmăţ", function() {deepEqual( Stem("dezmăţată"), "dezmăţ");});
test("dezmeticit -> dezmetic", function() {deepEqual( Stem("dezmeticit"), "dezmetic");});
test("dezmoşteneşte -> dezmoşten", function() {deepEqual( Stem("dezmoşteneşte"), "dezmoşten");});
test("dezmoştenit -> dezmoşten", function() {deepEqual( Stem("dezmoştenit"), "dezmoşten");});
test("deznădăjduiesc -> deznădăjdui", function() {deepEqual( Stem("deznădăjduiesc"), "deznădăjdui");});
test("deznădăjduieşte -> deznădăjdui", function() {deepEqual( Stem("deznădăjduieşte"), "deznădăjdui");});
test("deznădăjduit -> deznădăjdu", function() {deepEqual( Stem("deznădăjduit"), "deznădăjdu");});
test("deznădăjduită -> deznădăjdu", function() {deepEqual( Stem("deznădăjduită"), "deznădăjdu");});
test("deznădăjduite -> deznădăjdu", function() {deepEqual( Stem("deznădăjduite"), "deznădăjdu");});
test("deznădăjduiţi -> deznădăjdu", function() {deepEqual( Stem("deznădăjduiţi"), "deznădăjdu");});
test("deznădejde -> deznădejd", function() {deepEqual( Stem("deznădejde"), "deznădejd");});
test("deznădejdea -> deznădejd", function() {deepEqual( Stem("deznădejdea"), "deznădejd");});
test("deznădejdi -> deznădejd", function() {deepEqual( Stem("deznădejdi"), "deznădejd");});
test("deznădejdile -> deznădejd", function() {deepEqual( Stem("deznădejdile"), "deznădejd");});
test("dezolat -> dezol", function() {deepEqual( Stem("dezolat"), "dezol");});
test("dezorganizată -> dezorganiz", function() {deepEqual( Stem("dezorganizată"), "dezorganiz");});
test("dezorientare -> dezorient", function() {deepEqual( Stem("dezorientare"), "dezorient");});
test("dezorientarea -> dezorient", function() {deepEqual( Stem("dezorientarea"), "dezorient");});
test("dezorientaţi -> dezorient", function() {deepEqual( Stem("dezorientaţi"), "dezorient");});
test("dezrobit -> dezrob", function() {deepEqual( Stem("dezrobit"), "dezrob");});
test("dezvelesc -> dezvel", function() {deepEqual( Stem("dezvelesc"), "dezvel");});
test("dezvoltarea -> dezvolt", function() {deepEqual( Stem("dezvoltarea"), "dezvolt");});
test("dezvoltă -> dezvolt", function() {deepEqual( Stem("dezvoltă"), "dezvolt");});
test("dezvoltări -> dezvoltăr", function() {deepEqual( Stem("dezvoltări"), "dezvoltăr");});
test("dezvoltării -> dezvoltăr", function() {deepEqual( Stem("dezvoltării"), "dezvoltăr");});
test("diabolic -> diabol", function() {deepEqual( Stem("diabolic"), "diabol");});
test("diagonala -> diagonal", function() {deepEqual( Stem("diagonala"), "diagonal");});
test("diagonală -> diagonal", function() {deepEqual( Stem("diagonală"), "diagonal");});
test("dialectic -> dialect", function() {deepEqual( Stem("dialectic"), "dialect");});
test("dialectica -> dialect", function() {deepEqual( Stem("dialectica"), "dialect");});
test("dialectice -> dialect", function() {deepEqual( Stem("dialectice"), "dialect");});
test("dialog -> dialog", function() {deepEqual( Stem("dialog"), "dialog");});
test("dialogul -> dialog", function() {deepEqual( Stem("dialogul"), "dialog");});
test("dialogurile -> dialogur", function() {deepEqual( Stem("dialogurile"), "dialogur");});
test("diametru -> diametru", function() {deepEqual( Stem("diametru"), "diametru");});
test("diametrul -> diametr", function() {deepEqual( Stem("diametrul"), "diametr");});
test("diatonismul -> diatonist", function() {deepEqual( Stem("diatonismul"), "diatonist");});
test("diavol -> diavol", function() {deepEqual( Stem("diavol"), "diavol");});
test("diavoli -> diavol", function() {deepEqual( Stem("diavoli"), "diavol");});
test("diavolul -> diavol", function() {deepEqual( Stem("diavolul"), "diavol");});
test("diblar -> diblar", function() {deepEqual( Stem("diblar"), "diblar");});
test("dibuit -> dibuit", function() {deepEqual( Stem("dibuit"), "dibuit");});
test("dichisiţi -> dichis", function() {deepEqual( Stem("dichisiţi"), "dichis");});
test("dichisul -> dichis", function() {deepEqual( Stem("dichisul"), "dichis");});
test("dichisurile -> dichisur", function() {deepEqual( Stem("dichisurile"), "dichisur");});
test("dicta -> dict", function() {deepEqual( Stem("dicta"), "dict");});
test("dictată -> dictat", function() {deepEqual( Stem("dictată"), "dictat");});
test("dictate -> dictat", function() {deepEqual( Stem("dictate"), "dictat");});
test("dictator -> dictat", function() {deepEqual( Stem("dictator"), "dictat");});
test("dictatoriale -> dictatorial", function() {deepEqual( Stem("dictatoriale"), "dictatorial");});
test("dictează -> dict", function() {deepEqual( Stem("dictează"), "dict");});
test("dictez -> dict", function() {deepEqual( Stem("dictez"), "dict");});
test("dictonul -> dicton", function() {deepEqual( Stem("dictonul"), "dicton");});
test("dicţionar -> dicţionar", function() {deepEqual( Stem("dicţionar"), "dicţionar");});
test("dicţionarul -> dicţionar", function() {deepEqual( Stem("dicţionarul"), "dicţionar");});
test("dicţionarului -> dicţionar", function() {deepEqual( Stem("dicţionarului"), "dicţionar");});
test("didactică -> didact", function() {deepEqual( Stem("didactică"), "didact");});
test("die -> die", function() {deepEqual( Stem("die"), "die");});
test("diferă -> difer", function() {deepEqual( Stem("diferă"), "difer");});
test("diferenţa -> diferenţ", function() {deepEqual( Stem("diferenţa"), "diferenţ");});
test("diferenţelor -> diferenţ", function() {deepEqual( Stem("diferenţelor"), "diferenţ");});
test("diferenţia -> diferenţ", function() {deepEqual( Stem("diferenţia"), "diferenţ");});
test("diferenţial -> diferenţial", function() {deepEqual( Stem("diferenţial"), "diferenţial");});
test("diferenţiată -> diferenţ", function() {deepEqual( Stem("diferenţiată"), "diferenţ");});
test("diferenţiate -> diferenţ", function() {deepEqual( Stem("diferenţiate"), "diferenţ");});
test("diferenţiem -> diferenţ", function() {deepEqual( Stem("diferenţiem"), "diferenţ");});
test("diferenţierii -> diferenţier", function() {deepEqual( Stem("diferenţierii"), "diferenţier");});
test("diferit -> difer", function() {deepEqual( Stem("diferit"), "difer");});
test("diferită -> difer", function() {deepEqual( Stem("diferită"), "difer");});
test("diferite -> difer", function() {deepEqual( Stem("diferite"), "difer");});
test("diferitele -> difer", function() {deepEqual( Stem("diferitele"), "difer");});
test("diferitelor -> difer", function() {deepEqual( Stem("diferitelor"), "difer");});
test("dificilă -> dificil", function() {deepEqual( Stem("dificilă"), "dificil");});
test("dificultate -> dificult", function() {deepEqual( Stem("dificultate"), "dificult");});
test("dificultăţi -> dificultăţ", function() {deepEqual( Stem("dificultăţi"), "dificultăţ");});
test("dificultăţile -> dificultăţ", function() {deepEqual( Stem("dificultăţile"), "dificultăţ");});
test("diformeze -> diform", function() {deepEqual( Stem("diformeze"), "diform");});
test("difuze -> difuz", function() {deepEqual( Stem("difuze"), "difuz");});
test("dig -> dig", function() {deepEqual( Stem("dig"), "dig");});
test("digerate -> diger", function() {deepEqual( Stem("digerate"), "diger");});
test("digerăm -> diger", function() {deepEqual( Stem("digerăm"), "diger");});
test("digereze -> diger", function() {deepEqual( Stem("digereze"), "diger");});
test("digestie -> digest", function() {deepEqual( Stem("digestie"), "digest");});
test("digresiune -> digresiun", function() {deepEqual( Stem("digresiune"), "digresiun");});
test("digresiunea -> digresiun", function() {deepEqual( Stem("digresiunea"), "digresiun");});
test("dihănii -> dihăn", function() {deepEqual( Stem("dihănii"), "dihăn");});
test("dilata -> dilat", function() {deepEqual( Stem("dilata"), "dilat");});
test("dilată -> dilat", function() {deepEqual( Stem("dilată"), "dilat");});
test("diletant -> dilet", function() {deepEqual( Stem("diletant"), "dilet");});
test("diletantă -> dilet", function() {deepEqual( Stem("diletantă"), "dilet");});
test("diletantismul -> diletantist", function() {deepEqual( Stem("diletantismul"), "diletantist");});
test("diletanţii -> diletanţ", function() {deepEqual( Stem("diletanţii"), "diletanţ");});
test("diligenţa -> diligenţ", function() {deepEqual( Stem("diligenţa"), "diligenţ");});
test("dimensiile -> dimens", function() {deepEqual( Stem("dimensiile"), "dimens");});
test("dimensional -> dimensional", function() {deepEqual( Stem("dimensional"), "dimensional");});
test("dimensională -> dimensional", function() {deepEqual( Stem("dimensională"), "dimensional");});
test("dimensiune -> dimensiun", function() {deepEqual( Stem("dimensiune"), "dimensiun");});
test("dimensiunea -> dimensiun", function() {deepEqual( Stem("dimensiunea"), "dimensiun");});
test("dimensiuni -> dimensiun", function() {deepEqual( Stem("dimensiuni"), "dimensiun");});
test("dimineaţa -> dimineaţ", function() {deepEqual( Stem("dimineaţa"), "dimineaţ");});
test("dimineaţă -> dimineaţ", function() {deepEqual( Stem("dimineaţă"), "dimineaţ");});
test("dimineţii -> dimin", function() {deepEqual( Stem("dimineţii"), "dimin");});
test("dimiu -> dimiu", function() {deepEqual( Stem("dimiu"), "dimiu");});
test("dimiule -> dimiul", function() {deepEqual( Stem("dimiule"), "dimiul");});
test("dimpotriva -> dimpotr", function() {deepEqual( Stem("dimpotriva"), "dimpotr");});
test("dimpotrivă -> dimpotr", function() {deepEqual( Stem("dimpotrivă"), "dimpotr");});
test("dimpreună -> dimpreun", function() {deepEqual( Stem("dimpreună"), "dimpreun");});
test("din -> din", function() {deepEqual( Stem("din"), "din");});
test("dinadins -> dinadins", function() {deepEqual( Stem("dinadins"), "dinadins");});
test("dinafară -> dinaf", function() {deepEqual( Stem("dinafară"), "dinaf");});
test("dinainte -> dinaint", function() {deepEqual( Stem("dinainte"), "dinaint");});
test("dinaintea -> dinaint", function() {deepEqual( Stem("dinaintea"), "dinaint");});
test("dinamic -> dinam", function() {deepEqual( Stem("dinamic"), "dinam");});
test("dinamismul -> dinamist", function() {deepEqual( Stem("dinamismul"), "dinamist");});
test("dinapoi -> dinapo", function() {deepEqual( Stem("dinapoi"), "dinapo");});
test("dinastii -> dinast", function() {deepEqual( Stem("dinastii"), "dinast");});
test("dinăuntru -> dinăuntru", function() {deepEqual( Stem("dinăuntru"), "dinăuntru");});
test("dincoace -> dincoac", function() {deepEqual( Stem("dincoace"), "dincoac");});
test("dincolo -> dincolo", function() {deepEqual( Stem("dincolo"), "dincolo");});
test("dinculescu -> dinculescu", function() {deepEqual( Stem("dinculescu"), "dinculescu");});
test("ding -> ding", function() {deepEqual( Stem("ding"), "ding");});
test("dinspre -> dinspr", function() {deepEqual( Stem("dinspre"), "dinspr");});
test("dintâi -> dint", function() {deepEqual( Stem("dintâi"), "dint");});
test("dintr -> dintr", function() {deepEqual( Stem("dintr"), "dintr");});
test("dintre -> dintr", function() {deepEqual( Stem("dintre"), "dintr");});
test("dintru -> dintru", function() {deepEqual( Stem("dintru"), "dintru");});
test("dinţi -> dinţ", function() {deepEqual( Stem("dinţi"), "dinţ");});
test("dinţii -> dinţ", function() {deepEqual( Stem("dinţii"), "dinţ");});
test("dionisie -> dionis", function() {deepEqual( Stem("dionisie"), "dionis");});
test("dioptrii -> dioptr", function() {deepEqual( Stem("dioptrii"), "dioptr");});
test("diplomatică -> diplomat", function() {deepEqual( Stem("diplomatică"), "diplomat");});
test("diplomatice -> diplomat", function() {deepEqual( Stem("diplomatice"), "diplomat");});
test("diplomaţia -> diplom", function() {deepEqual( Stem("diplomaţia"), "diplom");});
test("direct -> direct", function() {deepEqual( Stem("direct"), "direct");});
test("directă -> direct", function() {deepEqual( Stem("directă"), "direct");});
test("directe -> direct", function() {deepEqual( Stem("directe"), "direct");});
test("director -> director", function() {deepEqual( Stem("director"), "director");});
test("directorul -> director", function() {deepEqual( Stem("directorul"), "director");});
test("direcţia -> direcţ", function() {deepEqual( Stem("direcţia"), "direcţ");});
test("direcţie -> direcţ", function() {deepEqual( Stem("direcţie"), "direcţ");});
test("direcţii -> direcţ", function() {deepEqual( Stem("direcţii"), "direcţ");});
test("direcţiile -> direcţ", function() {deepEqual( Stem("direcţiile"), "direcţ");});
test("direcţiune -> direct", function() {deepEqual( Stem("direcţiune"), "direct");});
test("direcţiunea -> direct", function() {deepEqual( Stem("direcţiunea"), "direct");});
test("direcţiuni -> direct", function() {deepEqual( Stem("direcţiuni"), "direct");});
test("disciplina -> disciplin", function() {deepEqual( Stem("disciplina"), "disciplin");});
test("disciplinabil -> disciplin", function() {deepEqual( Stem("disciplinabil"), "disciplin");});
test("disciplinat -> disciplin", function() {deepEqual( Stem("disciplinat"), "disciplin");});
test("disciplină -> disciplin", function() {deepEqual( Stem("disciplină"), "disciplin");});
test("discipline -> disciplin", function() {deepEqual( Stem("discipline"), "disciplin");});
test("disciplinează -> disciplin", function() {deepEqual( Stem("disciplinează"), "disciplin");});
test("disciplinei -> discipline", function() {deepEqual( Stem("disciplinei"), "discipline");});
test("disciplinelor -> disciplin", function() {deepEqual( Stem("disciplinelor"), "disciplin");});
test("disciplinii -> disciplin", function() {deepEqual( Stem("disciplinii"), "disciplin");});
test("discipolii -> discipol", function() {deepEqual( Stem("discipolii"), "discipol");});
test("discontinuitate -> discontinu", function() {deepEqual( Stem("discontinuitate"), "discontinu");});
test("discrepanţa -> discrepanţ", function() {deepEqual( Stem("discrepanţa"), "discrepanţ");});
test("discrepanţă -> discrepanţ", function() {deepEqual( Stem("discrepanţă"), "discrepanţ");});
test("discret -> discret", function() {deepEqual( Stem("discret"), "discret");});
test("discrete -> discret", function() {deepEqual( Stem("discrete"), "discret");});
test("discreţie -> discreţ", function() {deepEqual( Stem("discreţie"), "discreţ");});
test("discul -> disc", function() {deepEqual( Stem("discul"), "disc");});
test("discurează -> discur", function() {deepEqual( Stem("discurează"), "discur");});
test("discurs -> discurs", function() {deepEqual( Stem("discurs"), "discurs");});
test("discursivă -> discurs", function() {deepEqual( Stem("discursivă"), "discurs");});
test("discursul -> discurs", function() {deepEqual( Stem("discursul"), "discurs");});
test("discursului -> discurs", function() {deepEqual( Stem("discursului"), "discurs");});
test("discursuri -> discursur", function() {deepEqual( Stem("discursuri"), "discursur");});
test("discut -> discut", function() {deepEqual( Stem("discut"), "discut");});
test("discuta -> discut", function() {deepEqual( Stem("discuta"), "discut");});
test("discutabil -> discut", function() {deepEqual( Stem("discutabil"), "discut");});
test("discutaserăm -> discut", function() {deepEqual( Stem("discutaserăm"), "discut");});
test("discutat -> discut", function() {deepEqual( Stem("discutat"), "discut");});
test("discutaţi -> discut", function() {deepEqual( Stem("discutaţi"), "discut");});
test("discutau -> discut", function() {deepEqual( Stem("discutau"), "discut");});
test("discutând -> discut", function() {deepEqual( Stem("discutând"), "discut");});
test("discutăm -> discut", function() {deepEqual( Stem("discutăm"), "discut");});
test("discuţi -> discuţ", function() {deepEqual( Stem("discuţi"), "discuţ");});
test("discuţia -> discuţ", function() {deepEqual( Stem("discuţia"), "discuţ");});
test("discuţie -> discuţ", function() {deepEqual( Stem("discuţie"), "discuţ");});
test("discuţii -> discuţ", function() {deepEqual( Stem("discuţii"), "discuţ");});
test("discuţiile -> discuţ", function() {deepEqual( Stem("discuţiile"), "discuţ");});
test("discuţiilor -> discuţ", function() {deepEqual( Stem("discuţiilor"), "discuţ");});
test("discuţiune -> discut", function() {deepEqual( Stem("discuţiune"), "discut");});
test("discuţiunea -> discut", function() {deepEqual( Stem("discuţiunea"), "discut");});
test("discuţiuni -> discut", function() {deepEqual( Stem("discuţiuni"), "discut");});
test("diseară -> disear", function() {deepEqual( Stem("diseară"), "disear");});
test("disimulaţie -> disimul", function() {deepEqual( Stem("disimulaţie"), "disimul");});
test("disimulări -> disimulăr", function() {deepEqual( Stem("disimulări"), "disimulăr");});
test("disimulează -> disimul", function() {deepEqual( Stem("disimulează"), "disimul");});
test("disocierii -> disocier", function() {deepEqual( Stem("disocierii"), "disocier");});
test("disocieze -> disociez", function() {deepEqual( Stem("disocieze"), "disociez");});
test("dispară -> disp", function() {deepEqual( Stem("dispară"), "disp");});
test("dispare -> disp", function() {deepEqual( Stem("dispare"), "disp");});
test("dispărând -> dispăr", function() {deepEqual( Stem("dispărând"), "dispăr");});
test("dispărea -> dispăr", function() {deepEqual( Stem("dispărea"), "dispăr");});
test("dispăreau -> dispăr", function() {deepEqual( Stem("dispăreau"), "dispăr");});
test("dispăruse -> dispăr", function() {deepEqual( Stem("dispăruse"), "dispăr");});
test("dispărut -> dispăr", function() {deepEqual( Stem("dispărut"), "dispăr");});
test("dispensa -> dispens", function() {deepEqual( Stem("dispensa"), "dispens");});
test("dispensează -> dispens", function() {deepEqual( Stem("dispensează"), "dispens");});
test("dispera -> disper", function() {deepEqual( Stem("dispera"), "disper");});
test("disperare -> disper", function() {deepEqual( Stem("disperare"), "disper");});
test("disperarea -> disper", function() {deepEqual( Stem("disperarea"), "disper");});
test("disperat -> disper", function() {deepEqual( Stem("disperat"), "disper");});
test("disperată -> disper", function() {deepEqual( Stem("disperată"), "disper");});
test("disperate -> disper", function() {deepEqual( Stem("disperate"), "disper");});
test("disperaţi -> disper", function() {deepEqual( Stem("disperaţi"), "disper");});
test("disperaţii -> disper", function() {deepEqual( Stem("disperaţii"), "disper");});
test("displace -> displac", function() {deepEqual( Stem("displace"), "displac");});
test("disponibilităţi -> disponibil", function() {deepEqual( Stem("disponibilităţi"), "disponibil");});
test("dispoziţia -> dispoziţ", function() {deepEqual( Stem("dispoziţia"), "dispoziţ");});
test("dispoziţie -> dispoziţ", function() {deepEqual( Stem("dispoziţie"), "dispoziţ");});
test("dispoziţiei -> dispoz", function() {deepEqual( Stem("dispoziţiei"), "dispoz");});
test("dispoziţii -> dispoz", function() {deepEqual( Stem("dispoziţii"), "dispoz");});
test("dispoziţiunea -> dispoz", function() {deepEqual( Stem("dispoziţiunea"), "dispoz");});
test("dispreţ -> dispreţ", function() {deepEqual( Stem("dispreţ"), "dispreţ");});
test("dispreţuiesc -> dispreţui", function() {deepEqual( Stem("dispreţuiesc"), "dispreţui");});
test("dispreţuitoare -> dispreţu", function() {deepEqual( Stem("dispreţuitoare"), "dispreţu");});
test("dispreţuitor -> dispreţu", function() {deepEqual( Stem("dispreţuitor"), "dispreţu");});
test("disproporţionate -> disproporţion", function() {deepEqual( Stem("disproporţionate"), "disproporţion");});
test("dispun -> dispun", function() {deepEqual( Stem("dispun"), "dispun");});
test("dispune -> dispun", function() {deepEqual( Stem("dispune"), "dispun");});
test("dispus -> dispus", function() {deepEqual( Stem("dispus"), "dispus");});
test("dispuse -> disp", function() {deepEqual( Stem("dispuse"), "disp");});
test("dispuşi -> disp", function() {deepEqual( Stem("dispuşi"), "disp");});
test("disputabile -> disput", function() {deepEqual( Stem("disputabile"), "disput");});
test("disputat -> disput", function() {deepEqual( Stem("disputat"), "disput");});
test("dispută -> disput", function() {deepEqual( Stem("dispută"), "disput");});
test("dispute -> disput", function() {deepEqual( Stem("dispute"), "disput");});
test("disputelor -> disput", function() {deepEqual( Stem("disputelor"), "disput");});
test("disraeli -> disrael", function() {deepEqual( Stem("disraeli"), "disrael");});
test("disruptivă -> disrupt", function() {deepEqual( Stem("disruptivă"), "disrupt");});
test("distant -> distant", function() {deepEqual( Stem("distant"), "distant");});
test("distanţa -> distanţ", function() {deepEqual( Stem("distanţa"), "distanţ");});
test("distanţare -> distanţ", function() {deepEqual( Stem("distanţare"), "distanţ");});
test("distanţate -> distanţ", function() {deepEqual( Stem("distanţate"), "distanţ");});
test("distanţă -> distanţ", function() {deepEqual( Stem("distanţă"), "distanţ");});
test("distanţării -> distanţăr", function() {deepEqual( Stem("distanţării"), "distanţăr");});
test("distanţe -> distanţ", function() {deepEqual( Stem("distanţe"), "distanţ");});
test("distanţează -> distanţ", function() {deepEqual( Stem("distanţează"), "distanţ");});
test("distanţei -> distanţe", function() {deepEqual( Stem("distanţei"), "distanţe");});
test("distanţele -> distanţ", function() {deepEqual( Stem("distanţele"), "distanţ");});
test("distanţelor -> distanţ", function() {deepEqual( Stem("distanţelor"), "distanţ");});
test("distihul -> distih", function() {deepEqual( Stem("distihul"), "distih");});
test("distilat -> distil", function() {deepEqual( Stem("distilat"), "distil");});
test("distilată -> distil", function() {deepEqual( Stem("distilată"), "distil");});
test("distilate -> distil", function() {deepEqual( Stem("distilate"), "distil");});
test("distilării -> distilăr", function() {deepEqual( Stem("distilării"), "distilăr");});
test("distileze -> distil", function() {deepEqual( Stem("distileze"), "distil");});
test("distinct -> distinct", function() {deepEqual( Stem("distinct"), "distinct");});
test("distinctă -> distinct", function() {deepEqual( Stem("distinctă"), "distinct");});
test("distinctăen -> distinctăen", function() {deepEqual( Stem("distinctăen"), "distinctăen");});
test("distincte -> distinct", function() {deepEqual( Stem("distincte"), "distinct");});
test("distinctiv -> distinct", function() {deepEqual( Stem("distinctiv"), "distinct");});
test("distinctivă -> distinct", function() {deepEqual( Stem("distinctivă"), "distinct");});
test("distincţia -> distincţ", function() {deepEqual( Stem("distincţia"), "distincţ");});
test("distincţie -> distincţ", function() {deepEqual( Stem("distincţie"), "distincţ");});
test("distincţii -> distincţ", function() {deepEqual( Stem("distincţii"), "distincţ");});
test("distincţiile -> distincţ", function() {deepEqual( Stem("distincţiile"), "distincţ");});
test("distincţiion -> distincţiion", function() {deepEqual( Stem("distincţiion"), "distincţiion");});
test("distincţiune -> distinct", function() {deepEqual( Stem("distincţiune"), "distinct");});
test("distincţiunea -> distinct", function() {deepEqual( Stem("distincţiunea"), "distinct");});
test("disting -> disting", function() {deepEqual( Stem("disting"), "disting");});
test("distingă -> disting", function() {deepEqual( Stem("distingă"), "disting");});
test("distinge -> disting", function() {deepEqual( Stem("distinge"), "disting");});
test("distingem -> disting", function() {deepEqual( Stem("distingem"), "disting");});
test("distingi -> disting", function() {deepEqual( Stem("distingi"), "disting");});
test("distins -> distins", function() {deepEqual( Stem("distins"), "distins");});
test("distinsă -> distins", function() {deepEqual( Stem("distinsă"), "distins");});
test("distinse -> distin", function() {deepEqual( Stem("distinse"), "distin");});
test("distractiv -> distract", function() {deepEqual( Stem("distractiv"), "distract");});
test("distracţie -> distracţ", function() {deepEqual( Stem("distracţie"), "distracţ");});
test("distras -> distras", function() {deepEqual( Stem("distras"), "distras");});
test("distraţi -> distr", function() {deepEqual( Stem("distraţi"), "distr");});
test("distrau -> distr", function() {deepEqual( Stem("distrau"), "distr");});
test("distribuiau -> distribui", function() {deepEqual( Stem("distribuiau"), "distribui");});
test("distribuirea -> distribu", function() {deepEqual( Stem("distribuirea"), "distribu");});
test("distribuirii -> distribuir", function() {deepEqual( Stem("distribuirii"), "distribuir");});
test("distribuise -> distribu", function() {deepEqual( Stem("distribuise"), "distribu");});
test("distribuite -> distribu", function() {deepEqual( Stem("distribuite"), "distribu");});
test("distrugătoare -> distrug", function() {deepEqual( Stem("distrugătoare"), "distrug");});
test("distrugător -> distrug", function() {deepEqual( Stem("distrugător"), "distrug");});
test("distruge -> distrug", function() {deepEqual( Stem("distruge"), "distrug");});
test("distrus -> distrus", function() {deepEqual( Stem("distrus"), "distrus");});
test("diurnele -> diurn", function() {deepEqual( Stem("diurnele"), "diurn");});
test("divagări -> divagăr", function() {deepEqual( Stem("divagări"), "divagăr");});
test("divan -> divan", function() {deepEqual( Stem("divan"), "divan");});
test("divane -> divan", function() {deepEqual( Stem("divane"), "divan");});
test("divanul -> divan", function() {deepEqual( Stem("divanul"), "divan");});
test("divanului -> divan", function() {deepEqual( Stem("divanului"), "divan");});
test("divanuri -> divanur", function() {deepEqual( Stem("divanuri"), "divanur");});
test("divergenţă -> divergenţ", function() {deepEqual( Stem("divergenţă"), "divergenţ");});
test("diversă -> divers", function() {deepEqual( Stem("diversă"), "divers");});
test("diverse -> diver", function() {deepEqual( Stem("diverse"), "diver");});
test("diversele -> diver", function() {deepEqual( Stem("diversele"), "diver");});
test("diversitatea -> divers", function() {deepEqual( Stem("diversitatea"), "divers");});
test("diversităţi -> divers", function() {deepEqual( Stem("diversităţi"), "divers");});
test("diversităţii -> divers", function() {deepEqual( Stem("diversităţii"), "divers");});
test("diversiunea -> diversiun", function() {deepEqual( Stem("diversiunea"), "diversiun");});
test("divin -> divin", function() {deepEqual( Stem("divin"), "divin");});
test("divină -> divin", function() {deepEqual( Stem("divină"), "divin");});
test("divizia -> diviz", function() {deepEqual( Stem("divizia"), "diviz");});
test("divizie -> diviz", function() {deepEqual( Stem("divizie"), "diviz");});
test("diviziei -> diviz", function() {deepEqual( Stem("diviziei"), "diviz");});
test("diviziune -> diviziun", function() {deepEqual( Stem("diviziune"), "diviziun");});
test("divorţ -> divorţ", function() {deepEqual( Stem("divorţ"), "divorţ");});
test("divorţat -> divorţ", function() {deepEqual( Stem("divorţat"), "divorţ");});
test("divorţăm -> divorţ", function() {deepEqual( Stem("divorţăm"), "divorţ");});
test("divorţeze -> divorţ", function() {deepEqual( Stem("divorţeze"), "divorţ");});
test("divorţezi -> divorţ", function() {deepEqual( Stem("divorţezi"), "divorţ");});
test("divorţul -> divorţ", function() {deepEqual( Stem("divorţul"), "divorţ");});
test("dizgraţia -> dizgr", function() {deepEqual( Stem("dizgraţia"), "dizgr");});
test("dizgraţioase -> dizgraţ", function() {deepEqual( Stem("dizgraţioase"), "dizgraţ");});
test("dizgraţios -> dizgraţ", function() {deepEqual( Stem("dizgraţios"), "dizgraţ");});
test("dizolvat -> dizolv", function() {deepEqual( Stem("dizolvat"), "dizolv");});
test("dizolvată -> dizolv", function() {deepEqual( Stem("dizolvată"), "dizolv");});
test("dizolvă -> dizolv", function() {deepEqual( Stem("dizolvă"), "dizolv");});
test("do -> do", function() {deepEqual( Stem("do"), "do");});
test("doamna -> doamn", function() {deepEqual( Stem("doamna"), "doamn");});
test("doamnă -> doamn", function() {deepEqual( Stem("doamnă"), "doamn");});
test("doamne -> doamn", function() {deepEqual( Stem("doamne"), "doamn");});
test("doamnei -> doamne", function() {deepEqual( Stem("doamnei"), "doamne");});
test("doamnele -> doamn", function() {deepEqual( Stem("doamnele"), "doamn");});
test("doamnelor -> doamn", function() {deepEqual( Stem("doamnelor"), "doamn");});
test("doar -> doar", function() {deepEqual( Stem("doar"), "doar");});
test("doară -> doar", function() {deepEqual( Stem("doară"), "doar");});
test("doare -> doar", function() {deepEqual( Stem("doare"), "doar");});
test("doarmă -> doarm", function() {deepEqual( Stem("doarmă"), "doarm");});
test("doarme -> doarm", function() {deepEqual( Stem("doarme"), "doarm");});
test("dobitoc -> dobitoc", function() {deepEqual( Stem("dobitoc"), "dobitoc");});
test("dobitocul -> dobitoc", function() {deepEqual( Stem("dobitocul"), "dobitoc");});
test("dobitocului -> dobitoc", function() {deepEqual( Stem("dobitocului"), "dobitoc");});
test("dobîndă -> dobînd", function() {deepEqual( Stem("dobîndă"), "dobînd");});
test("dobîndească -> dobînd", function() {deepEqual( Stem("dobîndească"), "dobînd");});
test("dobîndesc -> dobînd", function() {deepEqual( Stem("dobîndesc"), "dobînd");});
test("dobîndi -> dobînd", function() {deepEqual( Stem("dobîndi"), "dobînd");});
test("dobîndind -> dobînd", function() {deepEqual( Stem("dobîndind"), "dobînd");});
test("dobîndirea -> dobînd", function() {deepEqual( Stem("dobîndirea"), "dobînd");});
test("dobîndit -> dobînd", function() {deepEqual( Stem("dobîndit"), "dobînd");});
test("dobîndită -> dobînd", function() {deepEqual( Stem("dobîndită"), "dobînd");});
test("dobînzi -> dobînz", function() {deepEqual( Stem("dobînzi"), "dobînz");});
test("doboare -> doboar", function() {deepEqual( Stem("doboare"), "doboar");});
test("doborând -> dobor", function() {deepEqual( Stem("doborând"), "dobor");});
test("dobori -> dobor", function() {deepEqual( Stem("dobori"), "dobor");});
test("doborî -> doborî", function() {deepEqual( Stem("doborî"), "doborî");});
test("doborîrea -> doborîr", function() {deepEqual( Stem("doborîrea"), "doborîr");});
test("dobrogea -> dobrog", function() {deepEqual( Stem("dobrogea"), "dobrog");});
test("docent -> docent", function() {deepEqual( Stem("docent"), "docent");});
test("docil -> docil", function() {deepEqual( Stem("docil"), "docil");});
test("docilitate -> docil", function() {deepEqual( Stem("docilitate"), "docil");});
test("docilitatea -> docil", function() {deepEqual( Stem("docilitatea"), "docil");});
test("doctor -> doctor", function() {deepEqual( Stem("doctor"), "doctor");});
test("doctoral -> doctoral", function() {deepEqual( Stem("doctoral"), "doctoral");});
test("doctorand -> doctorand", function() {deepEqual( Stem("doctorand"), "doctorand");});
test("doctoranzi -> doctoranz", function() {deepEqual( Stem("doctoranzi"), "doctoranz");});
test("doctorat -> doctor", function() {deepEqual( Stem("doctorat"), "doctor");});
test("doctorate -> doctor", function() {deepEqual( Stem("doctorate"), "doctor");});
test("doctoratelor -> doctor", function() {deepEqual( Stem("doctoratelor"), "doctor");});
test("doctori -> doctor", function() {deepEqual( Stem("doctori"), "doctor");});
test("doctoria -> doctor", function() {deepEqual( Stem("doctoria"), "doctor");});
test("doctorie -> doctor", function() {deepEqual( Stem("doctorie"), "doctor");});
test("doctoriţă -> doctoriţ", function() {deepEqual( Stem("doctoriţă"), "doctoriţ");});
test("doctorul -> doctor", function() {deepEqual( Stem("doctorul"), "doctor");});
test("doctorului -> doctor", function() {deepEqual( Stem("doctorului"), "doctor");});
test("doctrina -> doctrin", function() {deepEqual( Stem("doctrina"), "doctrin");});
test("doctrină -> doctrin", function() {deepEqual( Stem("doctrină"), "doctrin");});
test("doctrine -> doctrin", function() {deepEqual( Stem("doctrine"), "doctrin");});
test("documente -> document", function() {deepEqual( Stem("documente"), "document");});
test("documentează -> document", function() {deepEqual( Stem("documentează"), "document");});
test("documentul -> document", function() {deepEqual( Stem("documentul"), "document");});
test("dogma -> dogm", function() {deepEqual( Stem("dogma"), "dogm");});
test("dogmatică -> dogmat", function() {deepEqual( Stem("dogmatică"), "dogmat");});
test("dogmă -> dogm", function() {deepEqual( Stem("dogmă"), "dogm");});
test("dogme -> dogm", function() {deepEqual( Stem("dogme"), "dogm");});
test("dogmei -> dogme", function() {deepEqual( Stem("dogmei"), "dogme");});
test("doi -> doi", function() {deepEqual( Stem("doi"), "doi");});
test("doilea -> doil", function() {deepEqual( Stem("doilea"), "doil");});
test("doina -> doin", function() {deepEqual( Stem("doina"), "doin");});
test("doisprezece -> doisprezec", function() {deepEqual( Stem("doisprezece"), "doisprezec");});
test("dolentă -> dolent", function() {deepEqual( Stem("dolentă"), "dolent");});
test("dolescu -> dolescu", function() {deepEqual( Stem("dolescu"), "dolescu");});
test("dolescule -> dolescul", function() {deepEqual( Stem("dolescule"), "dolescul");});
test("doliu -> doliu", function() {deepEqual( Stem("doliu"), "doliu");});
test("dom -> dom", function() {deepEqual( Stem("dom"), "dom");});
test("domenii -> domen", function() {deepEqual( Stem("domenii"), "domen");});
test("domeniile -> domen", function() {deepEqual( Stem("domeniile"), "domen");});
test("domeniu -> domeniu", function() {deepEqual( Stem("domeniu"), "domeniu");});
test("domeniul -> domen", function() {deepEqual( Stem("domeniul"), "domen");});
test("domeniului -> domen", function() {deepEqual( Stem("domeniului"), "domen");});
test("domesticită -> domestic", function() {deepEqual( Stem("domesticită"), "domestic");});
test("dominat -> domin", function() {deepEqual( Stem("dominat"), "domin");});
test("dominatoare -> domin", function() {deepEqual( Stem("dominatoare"), "domin");});
test("domină -> domin", function() {deepEqual( Stem("domină"), "domin");});
test("dominican -> dominican", function() {deepEqual( Stem("dominican"), "dominican");});
test("domino -> domino", function() {deepEqual( Stem("domino"), "domino");});
test("domn -> domn", function() {deepEqual( Stem("domn"), "domn");});
test("domnească -> domn", function() {deepEqual( Stem("domnească"), "domn");});
test("domni -> domn", function() {deepEqual( Stem("domni"), "domn");});
test("domnia -> domn", function() {deepEqual( Stem("domnia"), "domn");});
test("domnii -> domn", function() {deepEqual( Stem("domnii"), "domn");});
test("domnilor -> domn", function() {deepEqual( Stem("domnilor"), "domn");});
test("domnişoara -> domnişoar", function() {deepEqual( Stem("domnişoara"), "domnişoar");});
test("domnu -> domnu", function() {deepEqual( Stem("domnu"), "domnu");});
test("domnul -> domn", function() {deepEqual( Stem("domnul"), "domn");});
test("domnule -> domnul", function() {deepEqual( Stem("domnule"), "domnul");});
test("domnului -> domn", function() {deepEqual( Stem("domnului"), "domn");});
test("domo -> domo", function() {deepEqual( Stem("domo"), "domo");});
test("domol -> domol", function() {deepEqual( Stem("domol"), "domol");});
test("domolit -> domol", function() {deepEqual( Stem("domolit"), "domol");});
test("domul -> dom", function() {deepEqual( Stem("domul"), "dom");});
test("don -> don", function() {deepEqual( Stem("don"), "don");});
test("donaţia -> don", function() {deepEqual( Stem("donaţia"), "don");});
test("donaţie -> don", function() {deepEqual( Stem("donaţie"), "don");});
test("donicioară -> donicioar", function() {deepEqual( Stem("donicioară"), "donicioar");});
test("donicioare -> donicioar", function() {deepEqual( Stem("donicioare"), "donicioar");});
test("doniţe -> doniţ", function() {deepEqual( Stem("doniţe"), "doniţ");});
test("donnee -> donne", function() {deepEqual( Stem("donnee"), "donne");});
test("donner -> donner", function() {deepEqual( Stem("donner"), "donner");});
test("dor -> dor", function() {deepEqual( Stem("dor"), "dor");});
test("dorea -> dor", function() {deepEqual( Stem("dorea"), "dor");});
test("doream -> doream", function() {deepEqual( Stem("doream"), "doream");});
test("doresc -> doresc", function() {deepEqual( Stem("doresc"), "doresc");});
test("doreşte -> doreşt", function() {deepEqual( Stem("doreşte"), "doreşt");});
test("doreşti -> doreşt", function() {deepEqual( Stem("doreşti"), "doreşt");});
test("dorim -> dor", function() {deepEqual( Stem("dorim"), "dor");});
test("dorind -> dorind", function() {deepEqual( Stem("dorind"), "dorind");});
test("dorinţa -> dorinţ", function() {deepEqual( Stem("dorinţa"), "dorinţ");});
test("dorinţă -> dorinţ", function() {deepEqual( Stem("dorinţă"), "dorinţ");});
test("dorinţe -> dorinţ", function() {deepEqual( Stem("dorinţe"), "dorinţ");});
test("dorinţele -> dorinţ", function() {deepEqual( Stem("dorinţele"), "dorinţ");});
test("dorise -> doris", function() {deepEqual( Stem("dorise"), "doris");});
test("dorit -> dorit", function() {deepEqual( Stem("dorit"), "dorit");});
test("dorită -> dorit", function() {deepEqual( Stem("dorită"), "dorit");});
test("dorite -> dorit", function() {deepEqual( Stem("dorite"), "dorit");});
test("dorm -> dorm", function() {deepEqual( Stem("dorm"), "dorm");});
test("dormi -> dorm", function() {deepEqual( Stem("dormi"), "dorm");});
test("dormin -> dormin", function() {deepEqual( Stem("dormin"), "dormin");});
test("dormind -> dorm", function() {deepEqual( Stem("dormind"), "dorm");});
test("dormit -> dormit", function() {deepEqual( Stem("dormit"), "dormit");});
test("dormitau -> dormit", function() {deepEqual( Stem("dormitau"), "dormit");});
test("dormitor -> dormit", function() {deepEqual( Stem("dormitor"), "dormit");});
test("dormitorul -> dormit", function() {deepEqual( Stem("dormitorul"), "dormit");});
test("dormitorului -> dormit", function() {deepEqual( Stem("dormitorului"), "dormit");});
test("dormitului -> dormit", function() {deepEqual( Stem("dormitului"), "dormit");});
test("dormiţi -> dorm", function() {deepEqual( Stem("dormiţi"), "dorm");});
test("dornic -> dornic", function() {deepEqual( Stem("dornic"), "dornic");});
test("dornică -> dornic", function() {deepEqual( Stem("dornică"), "dornic");});
test("dorul -> dor", function() {deepEqual( Stem("dorul"), "dor");});
test("dorului -> dor", function() {deepEqual( Stem("dorului"), "dor");});
test("dos -> dos", function() {deepEqual( Stem("dos"), "dos");});
test("dosar -> dosar", function() {deepEqual( Stem("dosar"), "dosar");});
test("dospesc -> dosp", function() {deepEqual( Stem("dospesc"), "dosp");});
test("dospind -> dosp", function() {deepEqual( Stem("dospind"), "dosp");});
test("dospire -> dosp", function() {deepEqual( Stem("dospire"), "dosp");});
test("dospită -> dospit", function() {deepEqual( Stem("dospită"), "dospit");});
test("dostoievski -> dostoievsk", function() {deepEqual( Stem("dostoievski"), "dostoievsk");});
test("dosul -> dos", function() {deepEqual( Stem("dosul"), "dos");});
test("doua -> dou", function() {deepEqual( Stem("doua"), "dou");});
test("douairieră -> douairier", function() {deepEqual( Stem("douairieră"), "douairier");});
test("două -> dou", function() {deepEqual( Stem("două"), "dou");});
test("douăsprezece -> douăsprezec", function() {deepEqual( Stem("douăsprezece"), "douăsprezec");});
test("douăzeci -> douăzec", function() {deepEqual( Stem("douăzeci"), "douăzec");});
test("douzaine -> douzain", function() {deepEqual( Stem("douzaine"), "douzain");});
test("dovada -> dovad", function() {deepEqual( Stem("dovada"), "dovad");});
test("dovadă -> dovad", function() {deepEqual( Stem("dovadă"), "dovad");});
test("dovedea -> doved", function() {deepEqual( Stem("dovedea"), "doved");});
test("dovedesc -> doved", function() {deepEqual( Stem("dovedesc"), "doved");});
test("dovedeşte -> doved", function() {deepEqual( Stem("dovedeşte"), "doved");});
test("dovedi -> doved", function() {deepEqual( Stem("dovedi"), "doved");});
test("dovedim -> doved", function() {deepEqual( Stem("dovedim"), "doved");});
test("dovedind -> doved", function() {deepEqual( Stem("dovedind"), "doved");});
test("dovedirea -> doved", function() {deepEqual( Stem("dovedirea"), "doved");});
test("dovedise -> doved", function() {deepEqual( Stem("dovedise"), "doved");});
test("dovedit -> doved", function() {deepEqual( Stem("dovedit"), "doved");});
test("dovedită -> doved", function() {deepEqual( Stem("dovedită"), "doved");});
test("dovezi -> dovez", function() {deepEqual( Stem("dovezi"), "dovez");});
test("dovlecii -> dovlec", function() {deepEqual( Stem("dovlecii"), "dovlec");});
test("doză -> doz", function() {deepEqual( Stem("doză"), "doz");});
test("dr -> dr", function() {deepEqual( Stem("dr"), "dr");});
test("dracii -> drac", function() {deepEqual( Stem("dracii"), "drac");});
test("dracu -> dracu", function() {deepEqual( Stem("dracu"), "dracu");});
test("dracului -> drac", function() {deepEqual( Stem("dracului"), "drac");});
test("drag -> drag", function() {deepEqual( Stem("drag"), "drag");});
test("draga -> drag", function() {deepEqual( Stem("draga"), "drag");});
test("dragă -> drag", function() {deepEqual( Stem("dragă"), "drag");});
test("dragi -> drag", function() {deepEqual( Stem("dragi"), "drag");});
test("dragii -> drag", function() {deepEqual( Stem("dragii"), "drag");});
test("dragoslavele -> dragoslav", function() {deepEqual( Stem("dragoslavele"), "dragoslav");});
test("dragoste -> dragost", function() {deepEqual( Stem("dragoste"), "dragost");});
test("dragostea -> dragost", function() {deepEqual( Stem("dragostea"), "dragost");});
test("dragostei -> dragoste", function() {deepEqual( Stem("dragostei"), "dragoste");});
test("dragostele -> dragost", function() {deepEqual( Stem("dragostele"), "dragost");});
test("dragul -> drag", function() {deepEqual( Stem("dragul"), "drag");});
test("drama -> dram", function() {deepEqual( Stem("drama"), "dram");});
test("dramatică -> dramat", function() {deepEqual( Stem("dramatică"), "dramat");});
test("dramatice -> dramat", function() {deepEqual( Stem("dramatice"), "dramat");});
test("dramatism -> dramatist", function() {deepEqual( Stem("dramatism"), "dramatist");});
test("dramă -> dram", function() {deepEqual( Stem("dramă"), "dram");});
test("drame -> dram", function() {deepEqual( Stem("drame"), "dram");});
test("drapel -> drapel", function() {deepEqual( Stem("drapel"), "drapel");});
test("drapele -> drap", function() {deepEqual( Stem("drapele"), "drap");});
test("draperiilor -> draper", function() {deepEqual( Stem("draperiilor"), "draper");});
test("drastic -> drastic", function() {deepEqual( Stem("drastic"), "drastic");});
test("drastică -> drastic", function() {deepEqual( Stem("drastică"), "drastic");});
test("drăcia -> drăc", function() {deepEqual( Stem("drăcia"), "drăc");});
test("drăcos -> drăcos", function() {deepEqual( Stem("drăcos"), "drăcos");});
test("drăgălăşenie -> drăgălăşen", function() {deepEqual( Stem("drăgălăşenie"), "drăgălăşen");});
test("drăgălăşeniile -> drăgălăşen", function() {deepEqual( Stem("drăgălăşeniile"), "drăgălăşen");});
test("drăgăstoasă -> drăgăst", function() {deepEqual( Stem("drăgăstoasă"), "drăgăst");});
test("drăguţ -> drăguţ", function() {deepEqual( Stem("drăguţ"), "drăguţ");});
test("drăguţă -> drăguţ", function() {deepEqual( Stem("drăguţă"), "drăguţ");});
test("dreapta -> dreapt", function() {deepEqual( Stem("dreapta"), "dreapt");});
test("dreaptă -> dreapt", function() {deepEqual( Stem("dreaptă"), "dreapt");});
test("dregătorii -> dregat", function() {deepEqual( Stem("dregătorii"), "dregat");});
test("drept -> drept", function() {deepEqual( Stem("drept"), "drept");});
test("dreptate -> dreptat", function() {deepEqual( Stem("dreptate"), "dreptat");});
test("dreptatea -> dreptat", function() {deepEqual( Stem("dreptatea"), "dreptat");});
test("dreptăţii -> dreptăţ", function() {deepEqual( Stem("dreptăţii"), "dreptăţ");});
test("drepte -> drept", function() {deepEqual( Stem("drepte"), "drept");});
test("dreptei -> drepte", function() {deepEqual( Stem("dreptei"), "drepte");});
test("dreptele -> drept", function() {deepEqual( Stem("dreptele"), "drept");});
test("dreptul -> drept", function() {deepEqual( Stem("dreptul"), "drept");});
test("dreptului -> drept", function() {deepEqual( Stem("dreptului"), "drept");});
test("dreptunghic -> dreptungh", function() {deepEqual( Stem("dreptunghic"), "dreptungh");});
test("dreptunghiulară -> dreptunghiul", function() {deepEqual( Stem("dreptunghiulară"), "dreptunghiul");});
test("dreptunghiuri -> dreptunghiur", function() {deepEqual( Stem("dreptunghiuri"), "dreptunghiur");});
test("drepturi -> dreptur", function() {deepEqual( Stem("drepturi"), "dreptur");});
test("drepţi -> drepţ", function() {deepEqual( Stem("drepţi"), "drepţ");});
test("drese -> dre", function() {deepEqual( Stem("drese"), "dre");});
test("dresorului -> dresor", function() {deepEqual( Stem("dresorului"), "dresor");});
test("dric -> dric", function() {deepEqual( Stem("dric"), "dric");});
test("dricul -> dric", function() {deepEqual( Stem("dricul"), "dric");});
test("dril -> dril", function() {deepEqual( Stem("dril"), "dril");});
test("drojdia -> drojd", function() {deepEqual( Stem("drojdia"), "drojd");});
test("drojdie -> drojd", function() {deepEqual( Stem("drojdie"), "drojd");});
test("drojdiile -> drojd", function() {deepEqual( Stem("drojdiile"), "drojd");});
test("drum -> drum", function() {deepEqual( Stem("drum"), "drum");});
test("drumu -> drumu", function() {deepEqual( Stem("drumu"), "drumu");});
test("drumul -> drum", function() {deepEqual( Stem("drumul"), "drum");});
test("drumului -> drum", function() {deepEqual( Stem("drumului"), "drum");});
test("drumuri -> drumur", function() {deepEqual( Stem("drumuri"), "drumur");});
test("drumurile -> drumur", function() {deepEqual( Stem("drumurile"), "drumur");});
test("drumurilor -> drumur", function() {deepEqual( Stem("drumurilor"), "drumur");});
test("dry -> dry", function() {deepEqual( Stem("dry"), "dry");});
test("dt -> dt", function() {deepEqual( Stem("dt"), "dt");});
test("du -> du", function() {deepEqual( Stem("du"), "du");});
test("dublare -> dubl", function() {deepEqual( Stem("dublare"), "dubl");});
test("dublate -> dublat", function() {deepEqual( Stem("dublate"), "dublat");});
test("dublă -> dubl", function() {deepEqual( Stem("dublă"), "dubl");});
test("dublării -> dublăr", function() {deepEqual( Stem("dublării"), "dublăr");});
test("dublează -> dubl", function() {deepEqual( Stem("dublează"), "dubl");});
test("dublez -> dubl", function() {deepEqual( Stem("dublez"), "dubl");});
test("dublu -> dublu", function() {deepEqual( Stem("dublu"), "dublu");});
test("duc -> duc", function() {deepEqual( Stem("duc"), "duc");});
test("ducând -> ducând", function() {deepEqual( Stem("ducând"), "ducând");});
test("ducându -> ducându", function() {deepEqual( Stem("ducându"), "ducându");});
test("ducă -> duc", function() {deepEqual( Stem("ducă"), "duc");});
test("duce -> duc", function() {deepEqual( Stem("duce"), "duc");});
test("ducea -> duc", function() {deepEqual( Stem("ducea"), "duc");});
test("duceau -> duceau", function() {deepEqual( Stem("duceau"), "duceau");});
test("ducere -> ducer", function() {deepEqual( Stem("ducere"), "ducer");});
test("duceţi -> duc", function() {deepEqual( Stem("duceţi"), "duc");});
test("duci -> duc", function() {deepEqual( Stem("duci"), "duc");});
test("dudu -> dudu", function() {deepEqual( Stem("dudu"), "dudu");});
test("duel -> duel", function() {deepEqual( Stem("duel"), "duel");});
test("duelul -> duel", function() {deepEqual( Stem("duelul"), "duel");});
test("duh -> duh", function() {deepEqual( Stem("duh"), "duh");});
test("duhul -> duh", function() {deepEqual( Stem("duhul"), "duh");});
test("duioasă -> duioas", function() {deepEqual( Stem("duioasă"), "duioas");});
test("duioase -> duioas", function() {deepEqual( Stem("duioase"), "duioas");});
test("duios -> duios", function() {deepEqual( Stem("duios"), "duios");});
test("duioşi -> duioş", function() {deepEqual( Stem("duioşi"), "duioş");});
test("duioşie -> duioş", function() {deepEqual( Stem("duioşie"), "duioş");});
test("dulce -> dulc", function() {deepEqual( Stem("dulce"), "dulc");});
test("dulceaţa -> dulceaţ", function() {deepEqual( Stem("dulceaţa"), "dulceaţ");});
test("dulceaţă -> dulceaţ", function() {deepEqual( Stem("dulceaţă"), "dulceaţ");});
test("dulcei -> dulce", function() {deepEqual( Stem("dulcei"), "dulce");});
test("dulceţuri -> dulceţur", function() {deepEqual( Stem("dulceţuri"), "dulceţur");});
test("dulci -> dulc", function() {deepEqual( Stem("dulci"), "dulc");});
test("duminica -> dumin", function() {deepEqual( Stem("duminica"), "dumin");});
test("duminicală -> dumin", function() {deepEqual( Stem("duminicală"), "dumin");});
test("duminică -> dumin", function() {deepEqual( Stem("duminică"), "dumin");});
test("dumitale -> dumital", function() {deepEqual( Stem("dumitale"), "dumital");});
test("dumitre -> dumitr", function() {deepEqual( Stem("dumitre"), "dumitr");});
test("dumitru -> dumitru", function() {deepEqual( Stem("dumitru"), "dumitru");});
test("dumme -> dumm", function() {deepEqual( Stem("dumme"), "dumm");});
test("dumneaei -> dumneae", function() {deepEqual( Stem("dumneaei"), "dumneae");});
test("dumnealor -> dumnealor", function() {deepEqual( Stem("dumnealor"), "dumnealor");});
test("dumnealui -> dumneal", function() {deepEqual( Stem("dumnealui"), "dumneal");});
test("dumneata -> dumneat", function() {deepEqual( Stem("dumneata"), "dumneat");});
test("dumneavoastră -> dumneavoastr", function() {deepEqual( Stem("dumneavoastră"), "dumneavoastr");});
test("dumnezeiască -> dumnezeiasc", function() {deepEqual( Stem("dumnezeiască"), "dumnezeiasc");});
test("dumnezeiesc -> dumnezei", function() {deepEqual( Stem("dumnezeiesc"), "dumnezei");});
test("dumnezeu -> dumnezeu", function() {deepEqual( Stem("dumnezeu"), "dumnezeu");});
test("dumnezeule -> dumnezeul", function() {deepEqual( Stem("dumnezeule"), "dumnezeul");});
test("dunării -> dunăr", function() {deepEqual( Stem("dunării"), "dunăr");});
test("după -> dup", function() {deepEqual( Stem("după"), "dup");});
test("duplicitatea -> duplic", function() {deepEqual( Stem("duplicitatea"), "duplic");});
test("duppel -> duppel", function() {deepEqual( Stem("duppel"), "duppel");});
test("dur -> dur", function() {deepEqual( Stem("dur"), "dur");});
test("dura -> dur", function() {deepEqual( Stem("dura"), "dur");});
test("durabil -> durabil", function() {deepEqual( Stem("durabil"), "durabil");});
test("durabilă -> durabil", function() {deepEqual( Stem("durabilă"), "durabil");});
test("durat -> durat", function() {deepEqual( Stem("durat"), "durat");});
test("durata -> durat", function() {deepEqual( Stem("durata"), "durat");});
test("durată -> durat", function() {deepEqual( Stem("durată"), "durat");});
test("duratei -> durat", function() {deepEqual( Stem("duratei"), "durat");});
test("dură -> dur", function() {deepEqual( Stem("dură"), "dur");});
test("durboren -> durboren", function() {deepEqual( Stem("durboren"), "durboren");});
test("durboru -> durboru", function() {deepEqual( Stem("durboru"), "durboru");});
test("durch -> durch", function() {deepEqual( Stem("durch"), "durch");});
test("durează -> dureaz", function() {deepEqual( Stem("durează"), "dureaz");});
test("durere -> durer", function() {deepEqual( Stem("durere"), "durer");});
test("durerea -> durer", function() {deepEqual( Stem("durerea"), "durer");});
test("dureri -> durer", function() {deepEqual( Stem("dureri"), "durer");});
test("durerile -> durer", function() {deepEqual( Stem("durerile"), "durer");});
test("durerilor -> durer", function() {deepEqual( Stem("durerilor"), "durer");});
test("dureroasă -> durer", function() {deepEqual( Stem("dureroasă"), "durer");});
test("dureroase -> durer", function() {deepEqual( Stem("dureroase"), "durer");});
test("dureros -> durer", function() {deepEqual( Stem("dureros"), "durer");});
test("dureroşi -> durer", function() {deepEqual( Stem("dureroşi"), "durer");});
test("dureze -> durez", function() {deepEqual( Stem("dureze"), "durez");});
test("durkheim -> durkh", function() {deepEqual( Stem("durkheim"), "durkh");});
test("durut -> durut", function() {deepEqual( Stem("durut"), "durut");});
test("dus -> dus", function() {deepEqual( Stem("dus"), "dus");});
test("dusă -> dus", function() {deepEqual( Stem("dusă"), "dus");});
test("duse -> dus", function() {deepEqual( Stem("duse"), "dus");});
test("dusese -> dus", function() {deepEqual( Stem("dusese"), "dus");});
test("duş -> duş", function() {deepEqual( Stem("duş"), "duş");});
test("duşi -> duş", function() {deepEqual( Stem("duşi"), "duş");});
test("duşman -> duşman", function() {deepEqual( Stem("duşman"), "duşman");});
test("duşmană -> duşman", function() {deepEqual( Stem("duşmană"), "duşman");});
test("duşmane -> duşman", function() {deepEqual( Stem("duşmane"), "duşman");});
test("duşmani -> duşman", function() {deepEqual( Stem("duşmani"), "duşman");});
test("duşmanii -> duşman", function() {deepEqual( Stem("duşmanii"), "duşman");});
test("duşmanul -> duşman", function() {deepEqual( Stem("duşmanul"), "duşman");});
test("duşmanului -> duşman", function() {deepEqual( Stem("duşmanului"), "duşman");});
test("duşmănie -> duşmăn", function() {deepEqual( Stem("duşmănie"), "duşmăn");});
test("duşmănos -> duşmăn", function() {deepEqual( Stem("duşmănos"), "duşmăn");});
test("duşurile -> duşur", function() {deepEqual( Stem("duşurile"), "duşur");});
test("duzină -> duzin", function() {deepEqual( Stem("duzină"), "duzin");});
test("duzinele -> duzin", function() {deepEqual( Stem("duzinele"), "duzin");});
test("dvorjak -> dvorjak", function() {deepEqual( Stem("dvorjak"), "dvorjak");});
test("e -> e", function() {deepEqual( Stem("e"), "e");});
test("ea -> ea", function() {deepEqual( Stem("ea"), "ea");});
test("echilateral -> echilateral", function() {deepEqual( Stem("echilateral"), "echilateral");});
test("echilibru -> echilibru", function() {deepEqual( Stem("echilibru"), "echilibru");});
test("echilibrul -> echilibr", function() {deepEqual( Stem("echilibrul"), "echilibr");});
test("echipaje -> echipaj", function() {deepEqual( Stem("echipaje"), "echipaj");});
test("echipare -> echip", function() {deepEqual( Stem("echipare"), "echip");});
test("echiparea -> echip", function() {deepEqual( Stem("echiparea"), "echip");});
test("echipăm -> echip", function() {deepEqual( Stem("echipăm"), "echip");});
test("echipe -> echip", function() {deepEqual( Stem("echipe"), "echip");});
test("echivalentă -> echivalent", function() {deepEqual( Stem("echivalentă"), "echivalent");});
test("echivalente -> echivalent", function() {deepEqual( Stem("echivalente"), "echivalent");});
test("echivalenţa -> echivalenţ", function() {deepEqual( Stem("echivalenţa"), "echivalenţ");});
test("echivalenţă -> echivalenţ", function() {deepEqual( Stem("echivalenţă"), "echivalenţ");});
test("echivalenţei -> echivalenţe", function() {deepEqual( Stem("echivalenţei"), "echivalenţe");});
test("echivalenţi -> echivalenţ", function() {deepEqual( Stem("echivalenţi"), "echivalenţ");});
test("echivoc -> echivoc", function() {deepEqual( Stem("echivoc"), "echivoc");});
test("echivoce -> echivoc", function() {deepEqual( Stem("echivoce"), "echivoc");});
test("eclatant -> eclat", function() {deepEqual( Stem("eclatant"), "eclat");});
test("eclatantă -> eclat", function() {deepEqual( Stem("eclatantă"), "eclat");});
test("eclipsează -> eclips", function() {deepEqual( Stem("eclipsează"), "eclips");});
test("eclipsei -> eclip", function() {deepEqual( Stem("eclipsei"), "eclip");});
test("economic -> econom", function() {deepEqual( Stem("economic"), "econom");});
test("economică -> econom", function() {deepEqual( Stem("economică"), "econom");});
test("economice -> econom", function() {deepEqual( Stem("economice"), "econom");});
test("economie -> econom", function() {deepEqual( Stem("economie"), "econom");});
test("economii -> econom", function() {deepEqual( Stem("economii"), "econom");});
test("economistul -> economist", function() {deepEqual( Stem("economistul"), "economist");});
test("ecou -> ecou", function() {deepEqual( Stem("ecou"), "ecou");});
test("ecoul -> eco", function() {deepEqual( Stem("ecoul"), "eco");});
test("ecoului -> eco", function() {deepEqual( Stem("ecoului"), "eco");});
test("ecouri -> ecour", function() {deepEqual( Stem("ecouri"), "ecour");});
test("ecourile -> ecour", function() {deepEqual( Stem("ecourile"), "ecour");});
test("ecuaţii -> ecu", function() {deepEqual( Stem("ecuaţii"), "ecu");});
test("eden -> eden", function() {deepEqual( Stem("eden"), "eden");});
test("edenică -> eden", function() {deepEqual( Stem("edenică"), "eden");});
test("edificare -> edific", function() {deepEqual( Stem("edificare"), "edific");});
test("edificat -> edific", function() {deepEqual( Stem("edificat"), "edific");});
test("edificatoare -> edific", function() {deepEqual( Stem("edificatoare"), "edific");});
test("edificator -> edif", function() {deepEqual( Stem("edificator"), "edif");});
test("edificării -> edificăr", function() {deepEqual( Stem("edificării"), "edificăr");});
test("edificii -> edif", function() {deepEqual( Stem("edificii"), "edif");});
test("edificiu -> edificiu", function() {deepEqual( Stem("edificiu"), "edificiu");});
test("edificiul -> edif", function() {deepEqual( Stem("edificiul"), "edif");});
test("edificiului -> edif", function() {deepEqual( Stem("edificiului"), "edif");});
test("edilitate -> edil", function() {deepEqual( Stem("edilitate"), "edil");});
test("editare -> edit", function() {deepEqual( Stem("editare"), "edit");});
test("editareaer -> editareaer", function() {deepEqual( Stem("editareaer"), "editareaer");});
test("editat -> edit", function() {deepEqual( Stem("editat"), "edit");});
test("editată -> edit", function() {deepEqual( Stem("editată"), "edit");});
test("editater -> editater", function() {deepEqual( Stem("editater"), "editater");});
test("edităm -> edit", function() {deepEqual( Stem("edităm"), "edit");});
test("editării -> edităr", function() {deepEqual( Stem("editării"), "edităr");});
test("editeaza -> editeaz", function() {deepEqual( Stem("editeaza"), "editeaz");});
test("editoare -> edit", function() {deepEqual( Stem("editoare"), "edit");});
test("editoarelor -> edit", function() {deepEqual( Stem("editoarelor"), "edit");});
test("editor -> edit", function() {deepEqual( Stem("editor"), "edit");});
test("editori -> edit", function() {deepEqual( Stem("editori"), "edit");});
test("editorial -> editorial", function() {deepEqual( Stem("editorial"), "editorial");});
test("editorială -> editorial", function() {deepEqual( Stem("editorială"), "editorial");});
test("editoriale -> editorial", function() {deepEqual( Stem("editoriale"), "editorial");});
test("editorialist -> editorialist", function() {deepEqual( Stem("editorialist"), "editorialist");});
test("editorialişti -> editorialist", function() {deepEqual( Stem("editorialişti"), "editorialist");});
test("editura -> editur", function() {deepEqual( Stem("editura"), "editur");});
test("editură -> edit", function() {deepEqual( Stem("editură"), "edit");});
test("edituri -> editur", function() {deepEqual( Stem("edituri"), "editur");});
test("ediţia -> ediţ", function() {deepEqual( Stem("ediţia"), "ediţ");});
test("ediţie -> ediţ", function() {deepEqual( Stem("ediţie"), "ediţ");});
test("ediţii -> ediţ", function() {deepEqual( Stem("ediţii"), "ediţ");});
test("educatorului -> educ", function() {deepEqual( Stem("educatorului"), "educ");});
test("educaţia -> educ", function() {deepEqual( Stem("educaţia"), "educ");});
test("educaţie -> educ", function() {deepEqual( Stem("educaţie"), "educ");});
test("educaţii -> educ", function() {deepEqual( Stem("educaţii"), "educ");});
test("educaţiunea -> educ", function() {deepEqual( Stem("educaţiunea"), "educ");});
test("ee -> ee", function() {deepEqual( Stem("ee"), "ee");});
test("efect -> efect", function() {deepEqual( Stem("efect"), "efect");});
test("efecte -> efect", function() {deepEqual( Stem("efecte"), "efect");});
test("efectele -> efect", function() {deepEqual( Stem("efectele"), "efect");});
test("efectelor -> efect", function() {deepEqual( Stem("efectelor"), "efect");});
test("efectiv -> efect", function() {deepEqual( Stem("efectiv"), "efect");});
test("efectivă -> efect", function() {deepEqual( Stem("efectivă"), "efect");});
test("efective -> efect", function() {deepEqual( Stem("efective"), "efect");});
test("efectivul -> efect", function() {deepEqual( Stem("efectivul"), "efect");});
test("efectul -> efect", function() {deepEqual( Stem("efectul"), "efect");});
test("efectului -> efect", function() {deepEqual( Stem("efectului"), "efect");});
test("efervescentă -> efervescent", function() {deepEqual( Stem("efervescentă"), "efervescent");});
test("eficace -> eficac", function() {deepEqual( Stem("eficace"), "eficac");});
test("eficacion -> eficacion", function() {deepEqual( Stem("eficacion"), "eficacion");});
test("eficacitate -> eficac", function() {deepEqual( Stem("eficacitate"), "eficac");});
test("eficacitatea -> eficac", function() {deepEqual( Stem("eficacitatea"), "eficac");});
test("eficacităţii -> eficac", function() {deepEqual( Stem("eficacităţii"), "eficac");});
test("eficient -> eficient", function() {deepEqual( Stem("eficient"), "eficient");});
test("eficientă -> eficient", function() {deepEqual( Stem("eficientă"), "eficient");});
test("eficienten -> eficienten", function() {deepEqual( Stem("eficienten"), "eficienten");});
test("eficienţa -> eficienţ", function() {deepEqual( Stem("eficienţa"), "eficienţ");});
test("eficienţă -> eficienţ", function() {deepEqual( Stem("eficienţă"), "eficienţ");});
test("eficienţei -> eficienţe", function() {deepEqual( Stem("eficienţei"), "eficienţe");});
test("eficienţi -> eficienţ", function() {deepEqual( Stem("eficienţi"), "eficienţ");});
test("efigie -> efig", function() {deepEqual( Stem("efigie"), "efig");});
test("efluvii -> efluv", function() {deepEqual( Stem("efluvii"), "efluv");});
test("efluviile -> efluv", function() {deepEqual( Stem("efluviile"), "efluv");});
test("efort -> efort", function() {deepEqual( Stem("efort"), "efort");});
test("eforturi -> efortur", function() {deepEqual( Stem("eforturi"), "efortur");});
test("eftimiu -> eftimiu", function() {deepEqual( Stem("eftimiu"), "eftimiu");});
test("egal -> egal", function() {deepEqual( Stem("egal"), "egal");});
test("egala -> egal", function() {deepEqual( Stem("egala"), "egal");});
test("egală -> egal", function() {deepEqual( Stem("egală"), "egal");});
test("egale -> egal", function() {deepEqual( Stem("egale"), "egal");});
test("egalează -> egal", function() {deepEqual( Stem("egalează"), "egal");});
test("egalen -> egalen", function() {deepEqual( Stem("egalen"), "egalen");});
test("egalez -> egal", function() {deepEqual( Stem("egalez"), "egal");});
test("egali -> egal", function() {deepEqual( Stem("egali"), "egal");});
test("egalitară -> egalit", function() {deepEqual( Stem("egalitară"), "egalit");});
test("egalitare -> egalit", function() {deepEqual( Stem("egalitare"), "egalit");});
test("egalitariste -> egalitarist", function() {deepEqual( Stem("egalitariste"), "egalitarist");});
test("egalitate -> egal", function() {deepEqual( Stem("egalitate"), "egal");});
test("egalitatea -> egal", function() {deepEqual( Stem("egalitatea"), "egal");});
test("egalitation -> egalitation", function() {deepEqual( Stem("egalitation"), "egalitation");});
test("egalităţi -> egal", function() {deepEqual( Stem("egalităţi"), "egal");});
test("egalităţien -> egalităţien", function() {deepEqual( Stem("egalităţien"), "egalităţien");});
test("egalizator -> egaliz", function() {deepEqual( Stem("egalizator"), "egaliz");});
test("egiptene -> egipten", function() {deepEqual( Stem("egiptene"), "egipten");});
test("egoism -> egoism", function() {deepEqual( Stem("egoism"), "egoism");});
test("egoismul -> egoism", function() {deepEqual( Stem("egoismul"), "egoism");});
test("egoist -> egoist", function() {deepEqual( Stem("egoist"), "egoist");});
test("eh -> eh", function() {deepEqual( Stem("eh"), "eh");});
test("ei -> ei", function() {deepEqual( Stem("ei"), "ei");});
test("eiffel -> eiffel", function() {deepEqual( Stem("eiffel"), "eiffel");});
test("ein -> ein", function() {deepEqual( Stem("ein"), "ein");});
test("eine -> ein", function() {deepEqual( Stem("eine"), "ein");});
test("einstein -> einstein", function() {deepEqual( Stem("einstein"), "einstein");});
test("einsteinian -> einsteinian", function() {deepEqual( Stem("einsteinian"), "einsteinian");});
test("eisner -> eisner", function() {deepEqual( Stem("eisner"), "eisner");});
test("el -> el", function() {deepEqual( Stem("el"), "el");});
test("ela -> ela", function() {deepEqual( Stem("ela"), "ela");});
test("elaborări -> elaborăr", function() {deepEqual( Stem("elaborări"), "elaborăr");});
test("elan -> elan", function() {deepEqual( Stem("elan"), "elan");});
test("elanul -> elan", function() {deepEqual( Stem("elanul"), "elan");});
test("elastic -> elast", function() {deepEqual( Stem("elastic"), "elast");});
test("elastice -> elast", function() {deepEqual( Stem("elastice"), "elast");});
test("elasticitate -> elast", function() {deepEqual( Stem("elasticitate"), "elast");});
test("elasticul -> elast", function() {deepEqual( Stem("elasticul"), "elast");});
test("ele -> ele", function() {deepEqual( Stem("ele"), "ele");});
test("eleatice -> eleat", function() {deepEqual( Stem("eleatice"), "eleat");});
test("electorale -> electoral", function() {deepEqual( Stem("electorale"), "electoral");});
test("electric -> electr", function() {deepEqual( Stem("electric"), "electr");});
test("electrică -> electr", function() {deepEqual( Stem("electrică"), "electr");});
test("electricitate -> electr", function() {deepEqual( Stem("electricitate"), "electr");});
test("electron -> electron", function() {deepEqual( Stem("electron"), "electron");});
test("electronul -> electron", function() {deepEqual( Stem("electronul"), "electron");});
test("electroscop -> electroscop", function() {deepEqual( Stem("electroscop"), "electroscop");});
test("elegant -> eleg", function() {deepEqual( Stem("elegant"), "eleg");});
test("elegantă -> eleg", function() {deepEqual( Stem("elegantă"), "eleg");});
test("elegante -> eleg", function() {deepEqual( Stem("elegante"), "eleg");});
test("elegantisimă -> elegantisim", function() {deepEqual( Stem("elegantisimă"), "elegantisim");});
test("eleganţa -> eleganţ", function() {deepEqual( Stem("eleganţa"), "eleganţ");});
test("eleganţă -> eleganţ", function() {deepEqual( Stem("eleganţă"), "eleganţ");});
test("eleganţi -> eleganţ", function() {deepEqual( Stem("eleganţi"), "eleganţ");});
test("elegiac -> elegiac", function() {deepEqual( Stem("elegiac"), "elegiac");});
test("element -> element", function() {deepEqual( Stem("element"), "element");});
test("elementar -> elementar", function() {deepEqual( Stem("elementar"), "elementar");});
test("elementară -> element", function() {deepEqual( Stem("elementară"), "element");});
test("elementare -> element", function() {deepEqual( Stem("elementare"), "element");});
test("elemente -> element", function() {deepEqual( Stem("elemente"), "element");});
test("elementele -> element", function() {deepEqual( Stem("elementele"), "element");});
test("elementul -> element", function() {deepEqual( Stem("elementul"), "element");});
test("elena -> elen", function() {deepEqual( Stem("elena"), "elen");});
test("elev -> elev", function() {deepEqual( Stem("elev"), "elev");});
test("elevele -> elev", function() {deepEqual( Stem("elevele"), "elev");});
test("elevii -> elev", function() {deepEqual( Stem("elevii"), "elev");});
test("elevul -> elev", function() {deepEqual( Stem("elevul"), "elev");});
test("eliberat -> eliber", function() {deepEqual( Stem("eliberat"), "eliber");});
test("elipsa -> elips", function() {deepEqual( Stem("elipsa"), "elips");});
test("elipse -> elip", function() {deepEqual( Stem("elipse"), "elip");});
test("elită -> elit", function() {deepEqual( Stem("elită"), "elit");});
test("elocventă -> elocvent", function() {deepEqual( Stem("elocventă"), "elocvent");});
test("elocvente -> elocvent", function() {deepEqual( Stem("elocvente"), "elocvent");});
test("elocvenţă -> elocvenţ", function() {deepEqual( Stem("elocvenţă"), "elocvenţ");});
test("elogiul -> elog", function() {deepEqual( Stem("elogiul"), "elog");});
test("elveţiană -> elveţian", function() {deepEqual( Stem("elveţiană"), "elveţian");});
test("elviră -> elvir", function() {deepEqual( Stem("elviră"), "elvir");});
test("emanată -> eman", function() {deepEqual( Stem("emanată"), "eman");});
test("emanaţiuni -> emanat", function() {deepEqual( Stem("emanaţiuni"), "emanat");});
test("emancipare -> emancip", function() {deepEqual( Stem("emancipare"), "emancip");});
test("emanciparea -> emancip", function() {deepEqual( Stem("emanciparea"), "emancip");});
test("emancipată -> emancip", function() {deepEqual( Stem("emancipată"), "emancip");});
test("emancipării -> emancipăr", function() {deepEqual( Stem("emancipării"), "emancipăr");});
test("embleme -> emblem", function() {deepEqual( Stem("embleme"), "emblem");});
test("emfatică -> emfat", function() {deepEqual( Stem("emfatică"), "emfat");});
test("emfaza -> emfaz", function() {deepEqual( Stem("emfaza"), "emfaz");});
test("emfazei -> emfaze", function() {deepEqual( Stem("emfazei"), "emfaze");});
test("eminamente -> eminament", function() {deepEqual( Stem("eminamente"), "eminament");});
test("eminent -> eminent", function() {deepEqual( Stem("eminent"), "eminent");});
test("eminenţa -> eminenţ", function() {deepEqual( Stem("eminenţa"), "eminenţ");});
test("eminenţi -> eminenţ", function() {deepEqual( Stem("eminenţi"), "eminenţ");});
test("eminescu -> eminescu", function() {deepEqual( Stem("eminescu"), "eminescu");});
test("emis -> emis", function() {deepEqual( Stem("emis"), "emis");});
test("emit -> emit", function() {deepEqual( Stem("emit"), "emit");});
test("emitem -> emit", function() {deepEqual( Stem("emitem"), "emit");});
test("emiterea -> emit", function() {deepEqual( Stem("emiterea"), "emit");});
test("emoţia -> emoţ", function() {deepEqual( Stem("emoţia"), "emoţ");});
test("emoţie -> emoţ", function() {deepEqual( Stem("emoţie"), "emoţ");});
test("emoţiei -> emoţ", function() {deepEqual( Stem("emoţiei"), "emoţ");});
test("emoţionabilă -> emoţion", function() {deepEqual( Stem("emoţionabilă"), "emoţion");});
test("emoţionantă -> emoţion", function() {deepEqual( Stem("emoţionantă"), "emoţion");});
test("emoţionat -> emoţion", function() {deepEqual( Stem("emoţionat"), "emoţion");});
test("emoţionată -> emoţion", function() {deepEqual( Stem("emoţionată"), "emoţion");});
test("emoţionează -> emoţion", function() {deepEqual( Stem("emoţionează"), "emoţion");});
test("empiric -> empir", function() {deepEqual( Stem("empiric"), "empir");});
test("empirică -> empir", function() {deepEqual( Stem("empirică"), "empir");});
test("empirice -> empir", function() {deepEqual( Stem("empirice"), "empir");});
test("empirie -> empir", function() {deepEqual( Stem("empirie"), "empir");});
test("empirismul -> empirist", function() {deepEqual( Stem("empirismul"), "empirist");});
test("en -> en", function() {deepEqual( Stem("en"), "en");});
test("enciclopedia -> encicloped", function() {deepEqual( Stem("enciclopedia"), "encicloped");});
test("enciclopedie -> encicloped", function() {deepEqual( Stem("enciclopedie"), "encicloped");});
test("enciclopediei -> encicloped", function() {deepEqual( Stem("enciclopediei"), "encicloped");});
test("energia -> energ", function() {deepEqual( Stem("energia"), "energ");});
test("energic -> energ", function() {deepEqual( Stem("energic"), "energ");});
test("energică -> energ", function() {deepEqual( Stem("energică"), "energ");});
test("energie -> energ", function() {deepEqual( Stem("energie"), "energ");});
test("energiei -> energ", function() {deepEqual( Stem("energiei"), "energ");});
test("energii -> energ", function() {deepEqual( Stem("energii"), "energ");});
test("energiile -> energ", function() {deepEqual( Stem("energiile"), "energ");});
test("enervare -> enerv", function() {deepEqual( Stem("enervare"), "enerv");});
test("enervaseră -> enerv", function() {deepEqual( Stem("enervaseră"), "enerv");});
test("enervaseşi -> enerv", function() {deepEqual( Stem("enervaseşi"), "enerv");});
test("enervat -> enerv", function() {deepEqual( Stem("enervat"), "enerv");});
test("enervată -> enerv", function() {deepEqual( Stem("enervată"), "enerv");});
test("enescu -> enescu", function() {deepEqual( Stem("enescu"), "enescu");});
test("engels -> engels", function() {deepEqual( Stem("engels"), "engels");});
test("englez -> englez", function() {deepEqual( Stem("englez"), "englez");});
test("englezească -> englez", function() {deepEqual( Stem("englezească"), "englez");});
test("englezesc -> englez", function() {deepEqual( Stem("englezesc"), "englez");});
test("englezeşti -> englez", function() {deepEqual( Stem("englezeşti"), "englez");});
test("englezi -> englez", function() {deepEqual( Stem("englezi"), "englez");});
test("englezii -> englez", function() {deepEqual( Stem("englezii"), "englez");});
test("englezilor -> englez", function() {deepEqual( Stem("englezilor"), "englez");});
test("englezul -> englez", function() {deepEqual( Stem("englezul"), "englez");});
test("enigmă -> enigm", function() {deepEqual( Stem("enigmă"), "enigm");});
test("enigmele -> enigm", function() {deepEqual( Stem("enigmele"), "enigm");});
test("enorm -> enorm", function() {deepEqual( Stem("enorm"), "enorm");});
test("enorma -> enorm", function() {deepEqual( Stem("enorma"), "enorm");});
test("enormă -> enorm", function() {deepEqual( Stem("enormă"), "enorm");});
test("enorme -> enorm", function() {deepEqual( Stem("enorme"), "enorm");});
test("enormitate -> enorm", function() {deepEqual( Stem("enormitate"), "enorm");});
test("enormitatea -> enorm", function() {deepEqual( Stem("enormitatea"), "enorm");});
test("enormităţi -> enorm", function() {deepEqual( Stem("enormităţi"), "enorm");});
test("entităţi -> entităţ", function() {deepEqual( Stem("entităţi"), "entităţ");});
test("entomologul -> entomolog", function() {deepEqual( Stem("entomologul"), "entomolog");});
test("entuziasm -> entuziasm", function() {deepEqual( Stem("entuziasm"), "entuziasm");});
test("entuziasma -> entuziasm", function() {deepEqual( Stem("entuziasma"), "entuziasm");});
test("entuziasmat -> entuziasm", function() {deepEqual( Stem("entuziasmat"), "entuziasm");});
test("entuziasme -> entuziasm", function() {deepEqual( Stem("entuziasme"), "entuziasm");});
test("entuziasmează -> entuziasm", function() {deepEqual( Stem("entuziasmează"), "entuziasm");});
test("entuziasmeze -> entuziasm", function() {deepEqual( Stem("entuziasmeze"), "entuziasm");});
test("entuziasmul -> entuziasm", function() {deepEqual( Stem("entuziasmul"), "entuziasm");});
test("entuziast -> entuziast", function() {deepEqual( Stem("entuziast"), "entuziast");});
test("entuziastă -> entuziast", function() {deepEqual( Stem("entuziastă"), "entuziast");});
test("entuziaste -> entuziast", function() {deepEqual( Stem("entuziaste"), "entuziast");});
test("entuziaştii -> entuziaşt", function() {deepEqual( Stem("entuziaştii"), "entuziaşt");});
test("enumerat -> enumer", function() {deepEqual( Stem("enumerat"), "enumer");});
test("enunţam -> enunţ", function() {deepEqual( Stem("enunţam"), "enunţ");});
test("enunţat -> enunţ", function() {deepEqual( Stem("enunţat"), "enunţ");});
test("enunţată -> enunţ", function() {deepEqual( Stem("enunţată"), "enunţ");});
test("enunţă -> enunţ", function() {deepEqual( Stem("enunţă"), "enunţ");});
test("epatant -> epat", function() {deepEqual( Stem("epatant"), "epat");});
test("epavă -> epav", function() {deepEqual( Stem("epavă"), "epav");});
test("epileptică -> epilept", function() {deepEqual( Stem("epileptică"), "epilept");});
test("episcopii -> episcop", function() {deepEqual( Stem("episcopii"), "episcop");});
test("episcopul -> episcop", function() {deepEqual( Stem("episcopul"), "episcop");});
test("epistemologic -> epistemolog", function() {deepEqual( Stem("epistemologic"), "epistemolog");});
test("epistemologie -> epistemolog", function() {deepEqual( Stem("epistemologie"), "epistemolog");});
test("epiteliale -> epitelial", function() {deepEqual( Stem("epiteliale"), "epitelial");});
test("epitete -> epitet", function() {deepEqual( Stem("epitete"), "epitet");});
test("epitrop -> epitrop", function() {deepEqual( Stem("epitrop"), "epitrop");});
test("epoca -> epoc", function() {deepEqual( Stem("epoca"), "epoc");});
test("epocei -> epoce", function() {deepEqual( Stem("epocei"), "epoce");});
test("epoci -> epoc", function() {deepEqual( Stem("epoci"), "epoc");});
test("epocii -> epoc", function() {deepEqual( Stem("epocii"), "epoc");});
test("epuizează -> epuiz", function() {deepEqual( Stem("epuizează"), "epuiz");});
test("era -> era", function() {deepEqual( Stem("era"), "era");});
test("erai -> era", function() {deepEqual( Stem("erai"), "era");});
test("eram -> eram", function() {deepEqual( Stem("eram"), "eram");});
test("eraţi -> eraţ", function() {deepEqual( Stem("eraţi"), "eraţ");});
test("erau -> erau", function() {deepEqual( Stem("erau"), "erau");});
test("ereditar -> ereditar", function() {deepEqual( Stem("ereditar"), "ereditar");});
test("ereditate -> ered", function() {deepEqual( Stem("ereditate"), "ered");});
test("ereticilor -> eret", function() {deepEqual( Stem("ereticilor"), "eret");});
test("ergo -> ergo", function() {deepEqual( Stem("ergo"), "ergo");});
test("erkenntniskritik -> erkenntniskritik", function() {deepEqual( Stem("erkenntniskritik"), "erkenntniskritik");});
test("erkenntnissoziologie -> erkenntnissoziolog", function() {deepEqual( Stem("erkenntnissoziologie"), "erkenntnissoziolog");});
test("erkenntnistheorie -> erkenntnistheor", function() {deepEqual( Stem("erkenntnistheorie"), "erkenntnistheor");});
test("erkenntnniss -> erkenntnniss", function() {deepEqual( Stem("erkenntnniss"), "erkenntnniss");});
test("ernst -> ernst", function() {deepEqual( Stem("ernst"), "ernst");});
test("eroi -> ero", function() {deepEqual( Stem("eroi"), "ero");});
test("eroic -> eroic", function() {deepEqual( Stem("eroic"), "eroic");});
test("eroice -> eroic", function() {deepEqual( Stem("eroice"), "eroic");});
test("eroii -> eroi", function() {deepEqual( Stem("eroii"), "eroi");});
test("eroilor -> ero", function() {deepEqual( Stem("eroilor"), "ero");});
test("eroine -> eroin", function() {deepEqual( Stem("eroine"), "eroin");});
test("erotica -> erot", function() {deepEqual( Stem("erotica"), "erot");});
test("erotică -> erot", function() {deepEqual( Stem("erotică"), "erot");});
test("erotice -> erot", function() {deepEqual( Stem("erotice"), "erot");});
test("erotici -> erot", function() {deepEqual( Stem("erotici"), "erot");});
test("erou -> erou", function() {deepEqual( Stem("erou"), "erou");});
test("eroul -> ero", function() {deepEqual( Stem("eroul"), "ero");});
test("erscheinung -> erscheinung", function() {deepEqual( Stem("erscheinung"), "erscheinung");});
test("erudit -> erud", function() {deepEqual( Stem("erudit"), "erud");});
test("erudite -> erud", function() {deepEqual( Stem("erudite"), "erud");});
test("erudiţie -> erudiţ", function() {deepEqual( Stem("erudiţie"), "erudiţ");});
test("erudiţiune -> erud", function() {deepEqual( Stem("erudiţiune"), "erud");});
test("erupţia -> erupţ", function() {deepEqual( Stem("erupţia"), "erupţ");});
test("erupţie -> erupţ", function() {deepEqual( Stem("erupţie"), "erupţ");});
test("erwin -> erwin", function() {deepEqual( Stem("erwin"), "erwin");});
test("es -> es", function() {deepEqual( Stem("es"), "es");});
test("escadroane -> escadroan", function() {deepEqual( Stem("escadroane"), "escadroan");});
test("escadron -> escadron", function() {deepEqual( Stem("escadron"), "escadron");});
test("escroci -> escroc", function() {deepEqual( Stem("escroci"), "escroc");});
test("esenţa -> esenţ", function() {deepEqual( Stem("esenţa"), "esenţ");});
test("esenţă -> esenţ", function() {deepEqual( Stem("esenţă"), "esenţ");});
test("esenţe -> esenţ", function() {deepEqual( Stem("esenţe"), "esenţ");});
test("esenţei -> esenţe", function() {deepEqual( Stem("esenţei"), "esenţe");});
test("esenţelor -> esenţ", function() {deepEqual( Stem("esenţelor"), "esenţ");});
test("esenţial -> esenţial", function() {deepEqual( Stem("esenţial"), "esenţial");});
test("esenţiala -> esenţial", function() {deepEqual( Stem("esenţiala"), "esenţial");});
test("esenţială -> esenţial", function() {deepEqual( Stem("esenţială"), "esenţial");});
test("esenţiale -> esenţial", function() {deepEqual( Stem("esenţiale"), "esenţial");});
test("esenţialist -> esenţialist", function() {deepEqual( Stem("esenţialist"), "esenţialist");});
test("esenţialităţi -> esenţial", function() {deepEqual( Stem("esenţialităţi"), "esenţial");});
test("esenţializare -> esenţializ", function() {deepEqual( Stem("esenţializare"), "esenţializ");});
test("esenţializat -> esenţializ", function() {deepEqual( Stem("esenţializat"), "esenţializ");});
test("esenţializării -> esenţializăr", function() {deepEqual( Stem("esenţializării"), "esenţializăr");});
test("esenţializînd -> esenţializînd", function() {deepEqual( Stem("esenţializînd"), "esenţializînd");});
test("esenţialmente -> esenţialment", function() {deepEqual( Stem("esenţialmente"), "esenţialment");});
test("esenţialul -> esenţial", function() {deepEqual( Stem("esenţialul"), "esenţial");});
test("eseu -> eseu", function() {deepEqual( Stem("eseu"), "eseu");});
test("eseuri -> eseur", function() {deepEqual( Stem("eseuri"), "eseur");});
test("eseurile -> eseur", function() {deepEqual( Stem("eseurile"), "eseur");});
test("esofagului -> esofag", function() {deepEqual( Stem("esofagului"), "esofag");});
test("esoteric -> esoter", function() {deepEqual( Stem("esoteric"), "esoter");});
test("esoterică -> esoter", function() {deepEqual( Stem("esoterică"), "esoter");});
test("espectative -> espect", function() {deepEqual( Stem("espectative"), "espect");});
test("esprit -> esprit", function() {deepEqual( Stem("esprit"), "esprit");});
test("esse -> esse", function() {deepEqual( Stem("esse"), "esse");});
test("est -> est", function() {deepEqual( Stem("est"), "est");});
test("estampele -> estamp", function() {deepEqual( Stem("estampele"), "estamp");});
test("este -> este", function() {deepEqual( Stem("este"), "este");});
test("estetic -> estet", function() {deepEqual( Stem("estetic"), "estet");});
test("estetică -> estet", function() {deepEqual( Stem("estetică"), "estet");});
test("estetice -> estet", function() {deepEqual( Stem("estetice"), "estet");});
test("estetism -> estetist", function() {deepEqual( Stem("estetism"), "estetist");});
test("estetul -> estet", function() {deepEqual( Stem("estetul"), "estet");});
test("esteţi -> esteţ", function() {deepEqual( Stem("esteţi"), "esteţ");});
test("esteţiers -> esteţiers", function() {deepEqual( Stem("esteţiers"), "esteţiers");});
test("estic -> estic", function() {deepEqual( Stem("estic"), "estic");});
test("estică -> estic", function() {deepEqual( Stem("estică"), "estic");});
test("estima -> estim", function() {deepEqual( Stem("estima"), "estim");});
test("estimare -> estim", function() {deepEqual( Stem("estimare"), "estim");});
test("estimăm -> estim", function() {deepEqual( Stem("estimăm"), "estim");});
test("estimări -> estimăr", function() {deepEqual( Stem("estimări"), "estimăr");});
test("eşafod -> eşafod", function() {deepEqual( Stem("eşafod"), "eşafod");});
test("eşafodaje -> eşafodaj", function() {deepEqual( Stem("eşafodaje"), "eşafodaj");});
test("eşafodul -> eşafod", function() {deepEqual( Stem("eşafodul"), "eşafod");});
test("eşalonări -> eşalonăr", function() {deepEqual( Stem("eşalonări"), "eşalonăr");});
test("eşec -> eşec", function() {deepEqual( Stem("eşec"), "eşec");});
test("eşichier -> eşichier", function() {deepEqual( Stem("eşichier"), "eşichier");});
test("eşti -> eşti", function() {deepEqual( Stem("eşti"), "eşti");});
test("etaj -> etaj", function() {deepEqual( Stem("etaj"), "etaj");});
test("etaje -> etaj", function() {deepEqual( Stem("etaje"), "etaj");});
test("etajera -> etajer", function() {deepEqual( Stem("etajera"), "etajer");});
test("etajeră -> etajer", function() {deepEqual( Stem("etajeră"), "etajer");});
test("etaloane -> etaloan", function() {deepEqual( Stem("etaloane"), "etaloan");});
test("etalon -> etalon", function() {deepEqual( Stem("etalon"), "etalon");});
test("etapa -> etap", function() {deepEqual( Stem("etapa"), "etap");});
test("etapă -> etap", function() {deepEqual( Stem("etapă"), "etap");});
test("etape -> etap", function() {deepEqual( Stem("etape"), "etap");});
test("etapelor -> etap", function() {deepEqual( Stem("etapelor"), "etap");});
test("etatistă -> etatist", function() {deepEqual( Stem("etatistă"), "etatist");});
test("etc -> etc", function() {deepEqual( Stem("etc"), "etc");});
test("eter -> eter", function() {deepEqual( Stem("eter"), "eter");});
test("eteric -> eter", function() {deepEqual( Stem("eteric"), "eter");});
test("eteristă -> eterist", function() {deepEqual( Stem("eteristă"), "eterist");});
test("etern -> etern", function() {deepEqual( Stem("etern"), "etern");});
test("eternă -> etern", function() {deepEqual( Stem("eternă"), "etern");});
test("eterne -> etern", function() {deepEqual( Stem("eterne"), "etern");});
test("eternelor -> etern", function() {deepEqual( Stem("eternelor"), "etern");});
test("eternitate -> etern", function() {deepEqual( Stem("eternitate"), "etern");});
test("eternitatea -> etern", function() {deepEqual( Stem("eternitatea"), "etern");});
test("eternităţii -> etern", function() {deepEqual( Stem("eternităţii"), "etern");});
test("eternizare -> eterniz", function() {deepEqual( Stem("eternizare"), "eterniz");});
test("eternizînd -> eternizînd", function() {deepEqual( Stem("eternizînd"), "eternizînd");});
test("eterogen -> eterogen", function() {deepEqual( Stem("eterogen"), "eterogen");});
test("eterogenă -> eterogen", function() {deepEqual( Stem("eterogenă"), "eterogen");});
test("ethernet -> ethernet", function() {deepEqual( Stem("ethernet"), "ethernet");});
test("etică -> etic", function() {deepEqual( Stem("etică"), "etic");});
test("etice -> etic", function() {deepEqual( Stem("etice"), "etic");});
test("eticheta -> etichet", function() {deepEqual( Stem("eticheta"), "etichet");});
test("etichetare -> etichet", function() {deepEqual( Stem("etichetare"), "etichet");});
test("etichetat -> etichet", function() {deepEqual( Stem("etichetat"), "etichet");});
test("etichetată -> etichet", function() {deepEqual( Stem("etichetată"), "etichet");});
test("etichetate -> etichet", function() {deepEqual( Stem("etichetate"), "etichet");});
test("etichetaţi -> etichet", function() {deepEqual( Stem("etichetaţi"), "etichet");});
test("etichetă -> etichet", function() {deepEqual( Stem("etichetă"), "etichet");});
test("etichete -> etichet", function() {deepEqual( Stem("etichete"), "etichet");});
test("etichetează -> etichet", function() {deepEqual( Stem("etichetează"), "etichet");});
test("etichetelor -> etichet", function() {deepEqual( Stem("etichetelor"), "etichet");});
test("etnografice -> etnograf", function() {deepEqual( Stem("etnografice"), "etnograf");});
test("eu -> eu", function() {deepEqual( Stem("eu"), "eu");});
test("euclid -> euclid", function() {deepEqual( Stem("euclid"), "euclid");});
test("euclidian -> euclidian", function() {deepEqual( Stem("euclidian"), "euclidian");});
test("euclidiană -> euclidian", function() {deepEqual( Stem("euclidiană"), "euclidian");});
test("euclidiene -> euclidien", function() {deepEqual( Stem("euclidiene"), "euclidien");});
test("eul -> eul", function() {deepEqual( Stem("eul"), "eul");});
test("eului -> eulu", function() {deepEqual( Stem("eului"), "eulu");});
test("eunuc -> eunuc", function() {deepEqual( Stem("eunuc"), "eunuc");});
test("euri -> eur", function() {deepEqual( Stem("euri"), "eur");});
test("europa -> europ", function() {deepEqual( Stem("europa"), "europ");});
test("european -> european", function() {deepEqual( Stem("european"), "european");});
test("europeană -> european", function() {deepEqual( Stem("europeană"), "european");});
test("europeanului -> european", function() {deepEqual( Stem("europeanului"), "european");});
test("europei -> europe", function() {deepEqual( Stem("europei"), "europe");});
test("europene -> europen", function() {deepEqual( Stem("europene"), "europen");});
test("europeni -> europen", function() {deepEqual( Stem("europeni"), "europen");});
test("europenii -> europen", function() {deepEqual( Stem("europenii"), "europen");});
test("europenizat -> europeniz", function() {deepEqual( Stem("europenizat"), "europeniz");});
test("evacuarea -> evacu", function() {deepEqual( Stem("evacuarea"), "evacu");});
test("evacuat -> evacu", function() {deepEqual( Stem("evacuat"), "evacu");});
test("evacuezi -> evacu", function() {deepEqual( Stem("evacuezi"), "evacu");});
test("evada -> evad", function() {deepEqual( Stem("evada"), "evad");});
test("evadat -> evad", function() {deepEqual( Stem("evadat"), "evad");});
test("evadez -> evad", function() {deepEqual( Stem("evadez"), "evad");});
test("evalua -> evalu", function() {deepEqual( Stem("evalua"), "evalu");});
test("evaluare -> evalu", function() {deepEqual( Stem("evaluare"), "evalu");});
test("evaluarea -> evalu", function() {deepEqual( Stem("evaluarea"), "evalu");});
test("evaluat -> evalu", function() {deepEqual( Stem("evaluat"), "evalu");});
test("evaluată -> evalu", function() {deepEqual( Stem("evaluată"), "evalu");});
test("evangelică -> evangel", function() {deepEqual( Stem("evangelică"), "evangel");});
test("evanghelică -> evanghel", function() {deepEqual( Stem("evanghelică"), "evanghel");});
test("evanghelie -> evanghel", function() {deepEqual( Stem("evanghelie"), "evanghel");});
test("evantai -> evant", function() {deepEqual( Stem("evantai"), "evant");});
test("evaporarea -> evapor", function() {deepEqual( Stem("evaporarea"), "evapor");});
test("evaporaţie -> evapor", function() {deepEqual( Stem("evaporaţie"), "evapor");});
test("evaporează -> evapor", function() {deepEqual( Stem("evaporează"), "evapor");});
test("eveniment -> eveniment", function() {deepEqual( Stem("eveniment"), "eveniment");});
test("evenimente -> eveniment", function() {deepEqual( Stem("evenimente"), "eveniment");});
test("evenimentele -> eveniment", function() {deepEqual( Stem("evenimentele"), "eveniment");});
test("evenimentelor -> eveniment", function() {deepEqual( Stem("evenimentelor"), "eveniment");});
test("evenimentul -> eveniment", function() {deepEqual( Stem("evenimentul"), "eveniment");});
test("evenimentului -> eveniment", function() {deepEqual( Stem("evenimentului"), "eveniment");});
test("eventual -> eventual", function() {deepEqual( Stem("eventual"), "eventual");});
test("eventuală -> eventual", function() {deepEqual( Stem("eventuală"), "eventual");});
test("evident -> evident", function() {deepEqual( Stem("evident"), "evident");});
test("evidentă -> evident", function() {deepEqual( Stem("evidentă"), "evident");});
test("evidente -> evident", function() {deepEqual( Stem("evidente"), "evident");});
test("evidenţa -> evidenţ", function() {deepEqual( Stem("evidenţa"), "evidenţ");});
test("evidenţă -> evidenţ", function() {deepEqual( Stem("evidenţă"), "evidenţ");});
test("evidenţei -> evidenţe", function() {deepEqual( Stem("evidenţei"), "evidenţe");});
test("evit -> evit", function() {deepEqual( Stem("evit"), "evit");});
test("evita -> evit", function() {deepEqual( Stem("evita"), "evit");});
test("evitam -> evit", function() {deepEqual( Stem("evitam"), "evit");});
test("evitat -> evit", function() {deepEqual( Stem("evitat"), "evit");});
test("evitau -> evit", function() {deepEqual( Stem("evitau"), "evit");});
test("evitând -> evit", function() {deepEqual( Stem("evitând"), "evit");});
test("evită -> evit", function() {deepEqual( Stem("evită"), "evit");});
test("evităm -> evit", function() {deepEqual( Stem("evităm"), "evit");});
test("evite -> evit", function() {deepEqual( Stem("evite"), "evit");});
test("evlavie -> evlav", function() {deepEqual( Stem("evlavie"), "evlav");});
test("evlavios -> evlav", function() {deepEqual( Stem("evlavios"), "evlav");});
test("evoluează -> evolu", function() {deepEqual( Stem("evoluează"), "evolu");});
test("evoluţie -> evoluţ", function() {deepEqual( Stem("evoluţie"), "evoluţ");});
test("evoluţiei -> evoluţ", function() {deepEqual( Stem("evoluţiei"), "evoluţ");});
test("evoluţiune -> evolut", function() {deepEqual( Stem("evoluţiune"), "evolut");});
test("evoluţiunea -> evolut", function() {deepEqual( Stem("evoluţiunea"), "evolut");});
test("evreiască -> evreiasc", function() {deepEqual( Stem("evreiască"), "evreiasc");});
test("evul -> ev", function() {deepEqual( Stem("evul"), "ev");});
test("ewige -> ewig", function() {deepEqual( Stem("ewige"), "ewig");});
test("ex -> ex", function() {deepEqual( Stem("ex"), "ex");});
test("exact -> exact", function() {deepEqual( Stem("exact"), "exact");});
test("exactă -> exact", function() {deepEqual( Stem("exactă"), "exact");});
test("exacte -> exact", function() {deepEqual( Stem("exacte"), "exact");});
test("exactitate -> exact", function() {deepEqual( Stem("exactitate"), "exact");});
test("exactităţii -> exact", function() {deepEqual( Stem("exactităţii"), "exact");});
test("exageram -> exager", function() {deepEqual( Stem("exageram"), "exager");});
test("exagerare -> exager", function() {deepEqual( Stem("exagerare"), "exager");});
test("exagerat -> exager", function() {deepEqual( Stem("exagerat"), "exager");});
test("exagerata -> exager", function() {deepEqual( Stem("exagerata"), "exager");});
test("exagerată -> exager", function() {deepEqual( Stem("exagerată"), "exager");});
test("exagerează -> exager", function() {deepEqual( Stem("exagerează"), "exager");});
test("exagerez -> exager", function() {deepEqual( Stem("exagerez"), "exager");});
test("exagerezi -> exager", function() {deepEqual( Stem("exagerezi"), "exager");});
test("exaltă -> exalt", function() {deepEqual( Stem("exaltă"), "exalt");});
test("examen -> examen", function() {deepEqual( Stem("examen"), "examen");});
test("examene -> examen", function() {deepEqual( Stem("examene"), "examen");});
test("examenele -> examen", function() {deepEqual( Stem("examenele"), "examen");});
test("examenul -> examen", function() {deepEqual( Stem("examenul"), "examen");});
test("examina -> examin", function() {deepEqual( Stem("examina"), "examin");});
test("examinat -> examin", function() {deepEqual( Stem("examinat"), "examin");});
test("examinau -> examin", function() {deepEqual( Stem("examinau"), "examin");});
test("examinându -> examin", function() {deepEqual( Stem("examinându"), "examin");});
test("examinări -> examinăr", function() {deepEqual( Stem("examinări"), "examinăr");});
test("examinează -> examin", function() {deepEqual( Stem("examinează"), "examin");});
test("examinez -> examin", function() {deepEqual( Stem("examinez"), "examin");});
test("examineze -> examin", function() {deepEqual( Stem("examineze"), "examin");});
test("examinezi -> examin", function() {deepEqual( Stem("examinezi"), "examin");});
test("exaspera -> exasper", function() {deepEqual( Stem("exaspera"), "exasper");});
test("exasperante -> exasper", function() {deepEqual( Stem("exasperante"), "exasper");});
test("exasperarea -> exasper", function() {deepEqual( Stem("exasperarea"), "exasper");});
test("exasperat -> exasper", function() {deepEqual( Stem("exasperat"), "exasper");});
test("exasperata -> exasper", function() {deepEqual( Stem("exasperata"), "exasper");});
test("exasperată -> exasper", function() {deepEqual( Stem("exasperată"), "exasper");});
test("exasperate -> exasper", function() {deepEqual( Stem("exasperate"), "exasper");});
test("exasperatele -> exasper", function() {deepEqual( Stem("exasperatele"), "exasper");});
test("exasperează -> exasper", function() {deepEqual( Stem("exasperează"), "exasper");});
test("exceadă -> excead", function() {deepEqual( Stem("exceadă"), "excead");});
test("excede -> exced", function() {deepEqual( Stem("excede"), "exced");});
test("excelent -> excelent", function() {deepEqual( Stem("excelent"), "excelent");});
test("excelentă -> excelent", function() {deepEqual( Stem("excelentă"), "excelent");});
test("excelenţa -> excelenţ", function() {deepEqual( Stem("excelenţa"), "excelenţ");});
test("excelenţă -> excelenţ", function() {deepEqual( Stem("excelenţă"), "excelenţ");});
test("excepţie -> excepţ", function() {deepEqual( Stem("excepţie"), "excepţ");});
test("excepţii -> excepţ", function() {deepEqual( Stem("excepţii"), "excepţ");});
test("excepţiile -> excepţ", function() {deepEqual( Stem("excepţiile"), "excepţ");});
test("excepţional -> excepţional", function() {deepEqual( Stem("excepţional"), "excepţional");});
test("excepţionale -> excepţional", function() {deepEqual( Stem("excepţionale"), "excepţional");});
test("excepţiune -> except", function() {deepEqual( Stem("excepţiune"), "except");});
test("excepţiunea -> except", function() {deepEqual( Stem("excepţiunea"), "except");});
test("excepţiuni -> except", function() {deepEqual( Stem("excepţiuni"), "except");});
test("excepţiunile -> except", function() {deepEqual( Stem("excepţiunile"), "except");});
test("exces -> exces", function() {deepEqual( Stem("exces"), "exces");});
test("excesiv -> exces", function() {deepEqual( Stem("excesiv"), "exces");});
test("excesivă -> exces", function() {deepEqual( Stem("excesivă"), "exces");});
test("excesul -> exces", function() {deepEqual( Stem("excesul"), "exces");});
test("excesului -> exces", function() {deepEqual( Stem("excesului"), "exces");});
test("excitaţiune -> excit", function() {deepEqual( Stem("excitaţiune"), "excit");});
test("excitaţiuni -> excitat", function() {deepEqual( Stem("excitaţiuni"), "excitat");});
test("exclamare -> exclam", function() {deepEqual( Stem("exclamare"), "exclam");});
test("exclamat -> exclam", function() {deepEqual( Stem("exclamat"), "exclam");});
test("exclamaţia -> exclam", function() {deepEqual( Stem("exclamaţia"), "exclam");});
test("exclamaţii -> exclam", function() {deepEqual( Stem("exclamaţii"), "exclam");});
test("exclamă -> exclam", function() {deepEqual( Stem("exclamă"), "exclam");});
test("exclamăm -> exclam", function() {deepEqual( Stem("exclamăm"), "exclam");});
test("exclud -> exclud", function() {deepEqual( Stem("exclud"), "exclud");});
test("exclude -> exclud", function() {deepEqual( Stem("exclude"), "exclud");});
test("excluderea -> exclud", function() {deepEqual( Stem("excluderea"), "exclud");});
test("exclus -> exclus", function() {deepEqual( Stem("exclus"), "exclus");});
test("exclusiv -> exclus", function() {deepEqual( Stem("exclusiv"), "exclus");});
test("exclusivă -> exclus", function() {deepEqual( Stem("exclusivă"), "exclus");});
test("exclusive -> exclus", function() {deepEqual( Stem("exclusive"), "exclus");});
test("exclusivitate -> exclus", function() {deepEqual( Stem("exclusivitate"), "exclus");});
test("excluziv -> excluz", function() {deepEqual( Stem("excluziv"), "excluz");});
test("excursia -> excurs", function() {deepEqual( Stem("excursia"), "excurs");});
test("excursie -> excurs", function() {deepEqual( Stem("excursie"), "excurs");});
test("excursii -> excurs", function() {deepEqual( Stem("excursii"), "excurs");});
test("excursiilor -> excurs", function() {deepEqual( Stem("excursiilor"), "excurs");});
test("excursionişti -> excursionist", function() {deepEqual( Stem("excursionişti"), "excursionist");});
test("execut -> exec", function() {deepEqual( Stem("execut"), "exec");});
test("executanţii -> executanţ", function() {deepEqual( Stem("executanţii"), "executanţ");});
test("executare -> execut", function() {deepEqual( Stem("executare"), "execut");});
test("executat -> execut", function() {deepEqual( Stem("executat"), "execut");});
test("executau -> execut", function() {deepEqual( Stem("executau"), "execut");});
test("execută -> exec", function() {deepEqual( Stem("execută"), "exec");});
test("executăm -> execut", function() {deepEqual( Stem("executăm"), "execut");});
test("execute -> exec", function() {deepEqual( Stem("execute"), "exec");});
test("execuţie -> execuţ", function() {deepEqual( Stem("execuţie"), "execuţ");});
test("exemplar -> exemplar", function() {deepEqual( Stem("exemplar"), "exemplar");});
test("exemplară -> exempl", function() {deepEqual( Stem("exemplară"), "exempl");});
test("exemplare -> exempl", function() {deepEqual( Stem("exemplare"), "exempl");});
test("exemplarului -> exemplar", function() {deepEqual( Stem("exemplarului"), "exemplar");});
test("exemple -> exempl", function() {deepEqual( Stem("exemple"), "exempl");});
test("exemplele -> exempl", function() {deepEqual( Stem("exemplele"), "exempl");});
test("exemplificare -> exemplific", function() {deepEqual( Stem("exemplificare"), "exemplific");});
test("exemplu -> exemplu", function() {deepEqual( Stem("exemplu"), "exemplu");});
test("exemplul -> exempl", function() {deepEqual( Stem("exemplul"), "exempl");});
test("exemplului -> exempl", function() {deepEqual( Stem("exemplului"), "exempl");});
test("exercita -> exerc", function() {deepEqual( Stem("exercita"), "exerc");});
test("exercită -> exerc", function() {deepEqual( Stem("exercită"), "exerc");});
test("exerciteze -> exercit", function() {deepEqual( Stem("exerciteze"), "exercit");});
test("exerciţii -> exerc", function() {deepEqual( Stem("exerciţii"), "exerc");});
test("exerciţiu -> exerciţiu", function() {deepEqual( Stem("exerciţiu"), "exerciţiu");});
test("exhaustiv -> exhaust", function() {deepEqual( Stem("exhaustiv"), "exhaust");});
test("exhibiţionism -> exhibiţionist", function() {deepEqual( Stem("exhibiţionism"), "exhibiţionist");});
test("exilează -> exil", function() {deepEqual( Stem("exilează"), "exil");});
test("exilului -> exil", function() {deepEqual( Stem("exilului"), "exil");});
test("exist -> exist", function() {deepEqual( Stem("exist"), "exist");});
test("exista -> exist", function() {deepEqual( Stem("exista"), "exist");});
test("existase -> exist", function() {deepEqual( Stem("existase"), "exist");});
test("existat -> exist", function() {deepEqual( Stem("existat"), "exist");});
test("existau -> exist", function() {deepEqual( Stem("existau"), "exist");});
test("existând -> exist", function() {deepEqual( Stem("existând"), "exist");});
test("există -> exist", function() {deepEqual( Stem("există"), "exist");});
test("existăm -> exist", function() {deepEqual( Stem("existăm"), "exist");});
test("existe -> exist", function() {deepEqual( Stem("existe"), "exist");});
test("existent -> existent", function() {deepEqual( Stem("existent"), "existent");});
test("existentă -> existent", function() {deepEqual( Stem("existentă"), "existent");});
test("existentăen -> existentăen", function() {deepEqual( Stem("existentăen"), "existentăen");});
test("existente -> existent", function() {deepEqual( Stem("existente"), "existent");});
test("existenten -> existenten", function() {deepEqual( Stem("existenten"), "existenten");});
test("existention -> existention", function() {deepEqual( Stem("existention"), "existention");});
test("existenţa -> existenţ", function() {deepEqual( Stem("existenţa"), "existenţ");});
test("existenţaen -> existenţaen", function() {deepEqual( Stem("existenţaen"), "existenţaen");});
test("existenţă -> existenţ", function() {deepEqual( Stem("existenţă"), "existenţ");});
test("existenţe -> existenţ", function() {deepEqual( Stem("existenţe"), "existenţ");});
test("existenţei -> existenţe", function() {deepEqual( Stem("existenţei"), "existenţe");});
test("existenţele -> existenţ", function() {deepEqual( Stem("existenţele"), "existenţ");});
test("existenţelor -> existenţ", function() {deepEqual( Stem("existenţelor"), "existenţ");});
test("existenţial -> existenţial", function() {deepEqual( Stem("existenţial"), "existenţial");});
test("existenţială -> existenţial", function() {deepEqual( Stem("existenţială"), "existenţial");});
test("existînd -> existînd", function() {deepEqual( Stem("existînd"), "existînd");});
test("exişti -> exişt", function() {deepEqual( Stem("exişti"), "exişt");});
test("exmatricularea -> exmatricul", function() {deepEqual( Stem("exmatricularea"), "exmatricul");});
test("exmatriculat -> exmatricul", function() {deepEqual( Stem("exmatriculat"), "exmatricul");});
test("exodul -> exod", function() {deepEqual( Stem("exodul"), "exod");});
test("exonartexul -> exonartex", function() {deepEqual( Stem("exonartexul"), "exonartex");});
test("exonerat -> exoner", function() {deepEqual( Stem("exonerat"), "exoner");});
test("exorcizare -> exorciz", function() {deepEqual( Stem("exorcizare"), "exorciz");});
test("exotic -> exot", function() {deepEqual( Stem("exotic"), "exot");});
test("exotică -> exot", function() {deepEqual( Stem("exotică"), "exot");});
test("exotici -> exot", function() {deepEqual( Stem("exotici"), "exot");});
test("exotism -> exotist", function() {deepEqual( Stem("exotism"), "exotist");});
test("exotisme -> exotist", function() {deepEqual( Stem("exotisme"), "exotist");});
test("expediat -> exped", function() {deepEqual( Stem("expediat"), "exped");});
test("experienţa -> experienţ", function() {deepEqual( Stem("experienţa"), "experienţ");});
test("experienţă -> experienţ", function() {deepEqual( Stem("experienţă"), "experienţ");});
test("experienţe -> experienţ", function() {deepEqual( Stem("experienţe"), "experienţ");});
test("experienţei -> experienţe", function() {deepEqual( Stem("experienţei"), "experienţe");});
test("experimental -> experimental", function() {deepEqual( Stem("experimental"), "experimental");});
test("experimentală -> experimental", function() {deepEqual( Stem("experimentală"), "experimental");});
test("experimentat -> experiment", function() {deepEqual( Stem("experimentat"), "experiment");});
test("experţii -> experţ", function() {deepEqual( Stem("experţii"), "experţ");});
test("explic -> explic", function() {deepEqual( Stem("explic"), "explic");});
test("explica -> explic", function() {deepEqual( Stem("explica"), "explic");});
test("explicabil -> explic", function() {deepEqual( Stem("explicabil"), "explic");});
test("explicabilă -> explic", function() {deepEqual( Stem("explicabilă"), "explic");});
test("explicare -> explic", function() {deepEqual( Stem("explicare"), "explic");});
test("explicarea -> explic", function() {deepEqual( Stem("explicarea"), "explic");});
test("explicat -> explic", function() {deepEqual( Stem("explicat"), "explic");});
test("explicată -> explic", function() {deepEqual( Stem("explicată"), "explic");});
test("explicativ -> explic", function() {deepEqual( Stem("explicativ"), "explic");});
test("explicativă -> explic", function() {deepEqual( Stem("explicativă"), "explic");});
test("explicaţia -> explic", function() {deepEqual( Stem("explicaţia"), "explic");});
test("explicaţie -> explic", function() {deepEqual( Stem("explicaţie"), "explic");});
test("explicaţii -> explic", function() {deepEqual( Stem("explicaţii"), "explic");});
test("explicaţiile -> explic", function() {deepEqual( Stem("explicaţiile"), "explic");});
test("explicaţiilor -> explic", function() {deepEqual( Stem("explicaţiilor"), "explic");});
test("explicaţiune -> explic", function() {deepEqual( Stem("explicaţiune"), "explic");});
test("explicaţiunea -> explic", function() {deepEqual( Stem("explicaţiunea"), "explic");});
test("explicaţiuni -> explicat", function() {deepEqual( Stem("explicaţiuni"), "explicat");});
test("explicau -> explic", function() {deepEqual( Stem("explicau"), "explic");});
test("explică -> explic", function() {deepEqual( Stem("explică"), "explic");});
test("explicăm -> explic", function() {deepEqual( Stem("explicăm"), "explic");});
test("explice -> explic", function() {deepEqual( Stem("explice"), "explic");});
test("explici -> explic", function() {deepEqual( Stem("explici"), "explic");});
test("explicit -> explic", function() {deepEqual( Stem("explicit"), "explic");});
test("exploatate -> exploat", function() {deepEqual( Stem("exploatate"), "exploat");});
test("exploatării -> exploatăr", function() {deepEqual( Stem("exploatării"), "exploatăr");});
test("exploatărilor -> exploatăr", function() {deepEqual( Stem("exploatărilor"), "exploatăr");});
test("exploatează -> exploat", function() {deepEqual( Stem("exploatează"), "exploat");});
test("exploda -> explod", function() {deepEqual( Stem("exploda"), "explod");});
test("explodează -> explod", function() {deepEqual( Stem("explodează"), "explod");});
test("explozia -> exploz", function() {deepEqual( Stem("explozia"), "exploz");});
test("explozie -> exploz", function() {deepEqual( Stem("explozie"), "exploz");});
test("explozii -> exploz", function() {deepEqual( Stem("explozii"), "exploz");});
test("exploziile -> exploz", function() {deepEqual( Stem("exploziile"), "exploz");});
test("exploziilor -> exploz", function() {deepEqual( Stem("exploziilor"), "exploz");});
test("exportul -> export", function() {deepEqual( Stem("exportul"), "export");});
test("expozitiv -> expoz", function() {deepEqual( Stem("expozitiv"), "expoz");});
test("expoziţia -> expoziţ", function() {deepEqual( Stem("expoziţia"), "expoziţ");});
test("expoziţie -> expoziţ", function() {deepEqual( Stem("expoziţie"), "expoziţ");});
test("expres -> expres", function() {deepEqual( Stem("expres"), "expres");});
test("expresia -> expres", function() {deepEqual( Stem("expresia"), "expres");});
test("expresie -> expres", function() {deepEqual( Stem("expresie"), "expres");});
test("expresionistă -> expresionist", function() {deepEqual( Stem("expresionistă"), "expresionist");});
test("expresiune -> expresiun", function() {deepEqual( Stem("expresiune"), "expresiun");});
test("expresiunea -> expresiun", function() {deepEqual( Stem("expresiunea"), "expresiun");});
test("expresiunile -> expresiun", function() {deepEqual( Stem("expresiunile"), "expresiun");});
test("expresiv -> expres", function() {deepEqual( Stem("expresiv"), "expres");});
test("expresivitate -> expres", function() {deepEqual( Stem("expresivitate"), "expres");});
test("exprim -> exprim", function() {deepEqual( Stem("exprim"), "exprim");});
test("exprima -> exprim", function() {deepEqual( Stem("exprima"), "exprim");});
test("exprimare -> exprim", function() {deepEqual( Stem("exprimare"), "exprim");});
test("exprimarea -> exprim", function() {deepEqual( Stem("exprimarea"), "exprim");});
test("exprimat -> exprim", function() {deepEqual( Stem("exprimat"), "exprim");});
test("exprimată -> exprim", function() {deepEqual( Stem("exprimată"), "exprim");});
test("exprimate -> exprim", function() {deepEqual( Stem("exprimate"), "exprim");});
test("exprimă -> exprim", function() {deepEqual( Stem("exprimă"), "exprim");});
test("exprimăm -> exprim", function() {deepEqual( Stem("exprimăm"), "exprim");});
test("exprime -> exprim", function() {deepEqual( Stem("exprime"), "exprim");});
test("expun -> expun", function() {deepEqual( Stem("expun"), "expun");});
test("expune -> expun", function() {deepEqual( Stem("expune"), "expun");});
test("expunea -> expun", function() {deepEqual( Stem("expunea"), "expun");});
test("expunem -> expun", function() {deepEqual( Stem("expunem"), "expun");});
test("expunere -> expun", function() {deepEqual( Stem("expunere"), "expun");});
test("expunerea -> expun", function() {deepEqual( Stem("expunerea"), "expun");});
test("expunerii -> expuner", function() {deepEqual( Stem("expunerii"), "expuner");});
test("expus -> expus", function() {deepEqual( Stem("expus"), "expus");});
test("expusă -> expus", function() {deepEqual( Stem("expusă"), "expus");});
test("expuse -> expu", function() {deepEqual( Stem("expuse"), "expu");});
test("exquise -> exquis", function() {deepEqual( Stem("exquise"), "exquis");});
test("extatică -> extat", function() {deepEqual( Stem("extatică"), "extat");});
test("extatici -> extat", function() {deepEqual( Stem("extatici"), "extat");});
test("extaz -> extaz", function() {deepEqual( Stem("extaz"), "extaz");});
test("extensiune -> extensiun", function() {deepEqual( Stem("extensiune"), "extensiun");});
test("extenuarea -> extenu", function() {deepEqual( Stem("extenuarea"), "extenu");});
test("exterioară -> exterioar", function() {deepEqual( Stem("exterioară"), "exterioar");});
test("exterioare -> exterioar", function() {deepEqual( Stem("exterioare"), "exterioar");});
test("exterior -> exterior", function() {deepEqual( Stem("exterior"), "exterior");});
test("exterminare -> extermin", function() {deepEqual( Stem("exterminare"), "extermin");});
test("externă -> extern", function() {deepEqual( Stem("externă"), "extern");});
test("externe -> extern", function() {deepEqual( Stem("externe"), "extern");});
test("extinde -> extind", function() {deepEqual( Stem("extinde"), "extind");});
test("extindem -> extind", function() {deepEqual( Stem("extindem"), "extind");});
test("extindere -> extind", function() {deepEqual( Stem("extindere"), "extind");});
test("extinderea -> extind", function() {deepEqual( Stem("extinderea"), "extind");});
test("extraaristocratice -> extraaristocrat", function() {deepEqual( Stem("extraaristocratice"), "extraaristocrat");});
test("extrage -> extrag", function() {deepEqual( Stem("extrage"), "extrag");});
test("extragnoseologice -> extragnoseolog", function() {deepEqual( Stem("extragnoseologice"), "extragnoseolog");});
test("extramuzicale -> extramuz", function() {deepEqual( Stem("extramuzicale"), "extramuz");});
test("extraordinar -> extraordinar", function() {deepEqual( Stem("extraordinar"), "extraordinar");});
test("extraordinara -> extraordinar", function() {deepEqual( Stem("extraordinara"), "extraordinar");});
test("extraordinară -> extraordin", function() {deepEqual( Stem("extraordinară"), "extraordin");});
test("extraordinare -> extraordin", function() {deepEqual( Stem("extraordinare"), "extraordin");});
test("extrapolat -> extrapol", function() {deepEqual( Stem("extrapolat"), "extrapol");});
test("extrapolată -> extrapol", function() {deepEqual( Stem("extrapolată"), "extrapol");});
test("extrapolaţi -> extrapol", function() {deepEqual( Stem("extrapolaţi"), "extrapol");});
test("extrapolează -> extrapol", function() {deepEqual( Stem("extrapolează"), "extrapol");});
test("extras -> extras", function() {deepEqual( Stem("extras"), "extras");});
test("extrasă -> extras", function() {deepEqual( Stem("extrasă"), "extras");});
test("extrase -> extra", function() {deepEqual( Stem("extrase"), "extra");});
test("extraterestru -> extraterestru", function() {deepEqual( Stem("extraterestru"), "extraterestru");});
test("extratereştri -> extratereştr", function() {deepEqual( Stem("extratereştri"), "extratereştr");});
test("extravagant -> extravag", function() {deepEqual( Stem("extravagant"), "extravag");});
test("extravagante -> extravag", function() {deepEqual( Stem("extravagante"), "extravag");});
test("extravaganţa -> extravaganţ", function() {deepEqual( Stem("extravaganţa"), "extravaganţ");});
test("extravaganţă -> extravaganţ", function() {deepEqual( Stem("extravaganţă"), "extravaganţ");});
test("extrăgea -> extrăg", function() {deepEqual( Stem("extrăgea"), "extrăg");});
test("extrem -> extrem", function() {deepEqual( Stem("extrem"), "extrem");});
test("extrema -> extrem", function() {deepEqual( Stem("extrema"), "extrem");});
test("extremă -> extrem", function() {deepEqual( Stem("extremă"), "extrem");});
test("extreme -> extrem", function() {deepEqual( Stem("extreme"), "extrem");});
test("extremei -> extreme", function() {deepEqual( Stem("extremei"), "extreme");});
test("extremelor -> extrem", function() {deepEqual( Stem("extremelor"), "extrem");});
test("extremi -> extrem", function() {deepEqual( Stem("extremi"), "extrem");});
test("extremis -> extremis", function() {deepEqual( Stem("extremis"), "extremis");});
test("extremism -> extremist", function() {deepEqual( Stem("extremism"), "extremist");});
test("extremismelor -> extremist", function() {deepEqual( Stem("extremismelor"), "extremist");});
test("extremist -> extremist", function() {deepEqual( Stem("extremist"), "extremist");});
test("extremistă -> extremist", function() {deepEqual( Stem("extremistă"), "extremist");});
test("extremişti -> extremist", function() {deepEqual( Stem("extremişti"), "extremist");});
test("extremitatea -> extrem", function() {deepEqual( Stem("extremitatea"), "extrem");});
test("extremităţi -> extrem", function() {deepEqual( Stem("extremităţi"), "extrem");});
test("extrovertit -> extrovert", function() {deepEqual( Stem("extrovertit"), "extrovert");});
test("exuberanţă -> exuberanţ", function() {deepEqual( Stem("exuberanţă"), "exuberanţ");});
test("exulta -> exult", function() {deepEqual( Stem("exulta"), "exult");});
test("exultantă -> exult", function() {deepEqual( Stem("exultantă"), "exult");});
test("ezitant -> ezit", function() {deepEqual( Stem("ezitant"), "ezit");});
test("ezitare -> ezit", function() {deepEqual( Stem("ezitare"), "ezit");});
test("ezitarea -> ezit", function() {deepEqual( Stem("ezitarea"), "ezit");});
test("ezită -> ezit", function() {deepEqual( Stem("ezită"), "ezit");});
test("ezităm -> ezit", function() {deepEqual( Stem("ezităm"), "ezit");});
test("ezitări -> ezităr", function() {deepEqual( Stem("ezitări"), "ezităr");});
test("f -> f", function() {deepEqual( Stem("f"), "f");});
test("fabrica -> fabric", function() {deepEqual( Stem("fabrica"), "fabric");});
test("fabricat -> fabric", function() {deepEqual( Stem("fabricat"), "fabric");});
test("fabricaţie -> fabric", function() {deepEqual( Stem("fabricaţie"), "fabric");});
test("fabrică -> fabric", function() {deepEqual( Stem("fabrică"), "fabric");});
test("fabrice -> fabric", function() {deepEqual( Stem("fabrice"), "fabric");});
test("fabrici -> fabric", function() {deepEqual( Stem("fabrici"), "fabric");});
test("fabricii -> fabric", function() {deepEqual( Stem("fabricii"), "fabric");});
test("fabricilor -> fabric", function() {deepEqual( Stem("fabricilor"), "fabric");});
test("fac -> fac", function() {deepEqual( Stem("fac"), "fac");});
test("facă -> fac", function() {deepEqual( Stem("facă"), "fac");});
test("face -> fac", function() {deepEqual( Stem("face"), "fac");});
test("facem -> fac", function() {deepEqual( Stem("facem"), "fac");});
test("facerea -> facer", function() {deepEqual( Stem("facerea"), "facer");});
test("faceţi -> fac", function() {deepEqual( Stem("faceţi"), "fac");});
test("fachir -> fachir", function() {deepEqual( Stem("fachir"), "fachir");});
test("fachirilor -> fachir", function() {deepEqual( Stem("fachirilor"), "fachir");});
test("faci -> fac", function() {deepEqual( Stem("faci"), "fac");});
test("facile -> fac", function() {deepEqual( Stem("facile"), "fac");});
test("facle -> facl", function() {deepEqual( Stem("facle"), "facl");});
test("facsimil -> facsimil", function() {deepEqual( Stem("facsimil"), "facsimil");});
test("facto -> facto", function() {deepEqual( Stem("facto"), "facto");});
test("factor -> factor", function() {deepEqual( Stem("factor"), "factor");});
test("factori -> factor", function() {deepEqual( Stem("factori"), "factor");});
test("factorilor -> factor", function() {deepEqual( Stem("factorilor"), "factor");});
test("facultate -> facult", function() {deepEqual( Stem("facultate"), "facult");});
test("facultatea -> facult", function() {deepEqual( Stem("facultatea"), "facult");});
test("facultăţii -> facultăţ", function() {deepEqual( Stem("facultăţii"), "facultăţ");});
test("fad -> fad", function() {deepEqual( Stem("fad"), "fad");});
test("fade -> fad", function() {deepEqual( Stem("fade"), "fad");});
test("faimoasă -> faimoas", function() {deepEqual( Stem("faimoasă"), "faimoas");});
test("faimosul -> faimos", function() {deepEqual( Stem("faimosul"), "faimos");});
test("faliment -> faliment", function() {deepEqual( Stem("faliment"), "faliment");});
test("fals -> fals", function() {deepEqual( Stem("fals"), "fals");});
test("falsă -> fals", function() {deepEqual( Stem("falsă"), "fals");});
test("false -> fal", function() {deepEqual( Stem("false"), "fal");});
test("falsifică -> falsif", function() {deepEqual( Stem("falsifică"), "falsif");});
test("falşa -> falş", function() {deepEqual( Stem("falşa"), "falş");});
test("falşă -> falş", function() {deepEqual( Stem("falşă"), "falş");});
test("familia -> famil", function() {deepEqual( Stem("familia"), "famil");});
test("familial -> familial", function() {deepEqual( Stem("familial"), "familial");});
test("familiar -> familiar", function() {deepEqual( Stem("familiar"), "familiar");});
test("familiară -> familiar", function() {deepEqual( Stem("familiară"), "familiar");});
test("familiaritate -> familiar", function() {deepEqual( Stem("familiaritate"), "familiar");});
test("familiarităţile -> familiar", function() {deepEqual( Stem("familiarităţile"), "familiar");});
test("familie -> famil", function() {deepEqual( Stem("familie"), "famil");});
test("familiei -> famil", function() {deepEqual( Stem("familiei"), "famil");});
test("familii -> famil", function() {deepEqual( Stem("familii"), "famil");});
test("familiile -> famil", function() {deepEqual( Stem("familiile"), "famil");});
test("fanatic -> fanat", function() {deepEqual( Stem("fanatic"), "fanat");});
test("fanatică -> fanat", function() {deepEqual( Stem("fanatică"), "fanat");});
test("fanfara -> fanfar", function() {deepEqual( Stem("fanfara"), "fanfar");});
test("fanfară -> fanf", function() {deepEqual( Stem("fanfară"), "fanf");});
test("fanfaronadă -> fanfaronad", function() {deepEqual( Stem("fanfaronadă"), "fanfaronad");});
test("fanion -> fanion", function() {deepEqual( Stem("fanion"), "fanion");});
test("fantastic -> fantast", function() {deepEqual( Stem("fantastic"), "fantast");});
test("fantastică -> fantast", function() {deepEqual( Stem("fantastică"), "fantast");});
test("fantastice -> fantast", function() {deepEqual( Stem("fantastice"), "fantast");});
test("fantazia -> fantaz", function() {deepEqual( Stem("fantazia"), "fantaz");});
test("fantaziei -> fantaz", function() {deepEqual( Stem("fantaziei"), "fantaz");});
test("fantaziilor -> fantaz", function() {deepEqual( Stem("fantaziilor"), "fantaz");});
test("fante -> fant", function() {deepEqual( Stem("fante"), "fant");});
test("fantezie -> fantez", function() {deepEqual( Stem("fantezie"), "fantez");});
test("fantezist -> fantezist", function() {deepEqual( Stem("fantezist"), "fantezist");});
test("fantezistă -> fantezist", function() {deepEqual( Stem("fantezistă"), "fantezist");});
test("fantomatic -> fantomat", function() {deepEqual( Stem("fantomatic"), "fantomat");});
test("fapt -> fapt", function() {deepEqual( Stem("fapt"), "fapt");});
test("fapta -> fapt", function() {deepEqual( Stem("fapta"), "fapt");});
test("faptă -> fapt", function() {deepEqual( Stem("faptă"), "fapt");});
test("fapte -> fapt", function() {deepEqual( Stem("fapte"), "fapt");});
test("faptei -> fapte", function() {deepEqual( Stem("faptei"), "fapte");});
test("faptele -> fapt", function() {deepEqual( Stem("faptele"), "fapt");});
test("faptelor -> fapt", function() {deepEqual( Stem("faptelor"), "fapt");});
test("faptul -> fapt", function() {deepEqual( Stem("faptul"), "fapt");});
test("faptului -> fapt", function() {deepEqual( Stem("faptului"), "fapt");});
test("farfuria -> farfur", function() {deepEqual( Stem("farfuria"), "farfur");});
test("farfurie -> farfur", function() {deepEqual( Stem("farfurie"), "farfur");});
test("farfurii -> farfur", function() {deepEqual( Stem("farfurii"), "farfur");});
test("farfurioarele -> farfurioar", function() {deepEqual( Stem("farfurioarele"), "farfurioar");});
test("fariseism -> fariseist", function() {deepEqual( Stem("fariseism"), "fariseist");});
test("farmacie -> farmac", function() {deepEqual( Stem("farmacie"), "farmac");});
test("farmaciilor -> farmac", function() {deepEqual( Stem("farmaciilor"), "farmac");});
test("farmec -> farmec", function() {deepEqual( Stem("farmec"), "farmec");});
test("farmecele -> farmec", function() {deepEqual( Stem("farmecele"), "farmec");});
test("farmecul -> farmec", function() {deepEqual( Stem("farmecul"), "farmec");});
test("farsa -> fars", function() {deepEqual( Stem("farsa"), "fars");});
test("farsă -> fars", function() {deepEqual( Stem("farsă"), "fars");});
test("farsor -> farsor", function() {deepEqual( Stem("farsor"), "farsor");});
test("farurile -> farur", function() {deepEqual( Stem("farurile"), "farur");});
test("fasole -> fasol", function() {deepEqual( Stem("fasole"), "fasol");});
test("fast -> fast", function() {deepEqual( Stem("fast"), "fast");});
test("fastidios -> fastid", function() {deepEqual( Stem("fastidios"), "fastid");});
test("faşă -> faş", function() {deepEqual( Stem("faşă"), "faş");});
test("fata -> fat", function() {deepEqual( Stem("fata"), "fat");});
test("fatal -> fatal", function() {deepEqual( Stem("fatal"), "fatal");});
test("fatale -> fatal", function() {deepEqual( Stem("fatale"), "fatal");});
test("fatalistă -> fatalist", function() {deepEqual( Stem("fatalistă"), "fatalist");});
test("fatalitate -> fatal", function() {deepEqual( Stem("fatalitate"), "fatal");});
test("fatalitatea -> fatal", function() {deepEqual( Stem("fatalitatea"), "fatal");});
test("fată -> fat", function() {deepEqual( Stem("fată"), "fat");});
test("faţa -> faţ", function() {deepEqual( Stem("faţa"), "faţ");});
test("faţade -> faţad", function() {deepEqual( Stem("faţade"), "faţad");});
test("faţă -> faţ", function() {deepEqual( Stem("faţă"), "faţ");});
test("favoare -> favoar", function() {deepEqual( Stem("favoare"), "favoar");});
test("favoarea -> favoar", function() {deepEqual( Stem("favoarea"), "favoar");});
test("favorabile -> favor", function() {deepEqual( Stem("favorabile"), "favor");});
test("favorit -> favor", function() {deepEqual( Stem("favorit"), "favor");});
test("favorită -> favor", function() {deepEqual( Stem("favorită"), "favor");});
test("favoriţi -> favor", function() {deepEqual( Stem("favoriţi"), "favor");});
test("favoriza -> favoriz", function() {deepEqual( Stem("favoriza"), "favoriz");});
test("favorizare -> favoriz", function() {deepEqual( Stem("favorizare"), "favoriz");});
test("favorizat -> favoriz", function() {deepEqual( Stem("favorizat"), "favoriz");});
test("favorurile -> favorur", function() {deepEqual( Stem("favorurile"), "favorur");});
test("faza -> faz", function() {deepEqual( Stem("faza"), "faz");});
test("fâlfâire -> fâlfâir", function() {deepEqual( Stem("fâlfâire"), "fâlfâir");});
test("fâlfâiri -> fâlfâir", function() {deepEqual( Stem("fâlfâiri"), "fâlfâir");});
test("fân -> fân", function() {deepEqual( Stem("fân"), "fân");});
test("fâneaţă -> fâneaţ", function() {deepEqual( Stem("fâneaţă"), "fâneaţ");});
test("fâneţe -> fâneţ", function() {deepEqual( Stem("fâneţe"), "fâneţ");});
test("fâneţele -> fâneţ", function() {deepEqual( Stem("fâneţele"), "fâneţ");});
test("fâneţuri -> fâneţur", function() {deepEqual( Stem("fâneţuri"), "fâneţur");});
test("fântâna -> fântân", function() {deepEqual( Stem("fântâna"), "fântân");});
test("fântână -> fântân", function() {deepEqual( Stem("fântână"), "fântân");});
test("fântâni -> fântân", function() {deepEqual( Stem("fântâni"), "fântân");});
test("fâsâind -> fâsâind", function() {deepEqual( Stem("fâsâind"), "fâsâind");});
test("fâsâit -> fâsâit", function() {deepEqual( Stem("fâsâit"), "fâsâit");});
test("fâsâituri -> fâsâitur", function() {deepEqual( Stem("fâsâituri"), "fâsâitur");});
test("fâsâiturile -> fâsâitur", function() {deepEqual( Stem("fâsâiturile"), "fâsâitur");});
test("fă -> fă", function() {deepEqual( Stem("fă"), "fă");});
test("făcând -> făcând", function() {deepEqual( Stem("făcând"), "făcând");});
test("făcându -> făcându", function() {deepEqual( Stem("făcându"), "făcându");});
test("făcea -> făc", function() {deepEqual( Stem("făcea"), "făc");});
test("făceai -> făcea", function() {deepEqual( Stem("făceai"), "făcea");});
test("făceam -> făceam", function() {deepEqual( Stem("făceam"), "făceam");});
test("făceau -> făceau", function() {deepEqual( Stem("făceau"), "făceau");});
test("făcuse -> făcus", function() {deepEqual( Stem("făcuse"), "făcus");});
test("făcusem -> făcusem", function() {deepEqual( Stem("făcusem"), "făcusem");});
test("făcuseră -> făcuser", function() {deepEqual( Stem("făcuseră"), "făcuser");});
test("făcut -> făcut", function() {deepEqual( Stem("făcut"), "făcut");});
test("făcută -> făcut", function() {deepEqual( Stem("făcută"), "făcut");});
test("făcute -> făcut", function() {deepEqual( Stem("făcute"), "făcut");});
test("făcuţi -> făcuţ", function() {deepEqual( Stem("făcuţi"), "făcuţ");});
test("făgaş -> făgaş", function() {deepEqual( Stem("făgaş"), "făgaş");});
test("făgaşul -> făgaş", function() {deepEqual( Stem("făgaşul"), "făgaş");});
test("făgăduinţa -> făgăduinţ", function() {deepEqual( Stem("făgăduinţa"), "făgăduinţ");});
test("făgăduinţă -> făgăduinţ", function() {deepEqual( Stem("făgăduinţă"), "făgăduinţ");});
test("făgăduinţe -> făgăduinţ", function() {deepEqual( Stem("făgăduinţe"), "făgăduinţ");});
test("făgăduinţele -> făgăduinţ", function() {deepEqual( Stem("făgăduinţele"), "făgăduinţ");});
test("făgăduit -> făgădu", function() {deepEqual( Stem("făgăduit"), "făgădu");});
test("fălcile -> fălc", function() {deepEqual( Stem("fălcile"), "fălc");});
test("fărâmături -> fărâmătur", function() {deepEqual( Stem("fărâmături"), "fărâmătur");});
test("fărâmiţa -> fărâmiţ", function() {deepEqual( Stem("fărâmiţa"), "fărâmiţ");});
test("fărâmiţat -> fărâmiţ", function() {deepEqual( Stem("fărâmiţat"), "fărâmiţ");});
test("fărâmiţos -> fărâmiţ", function() {deepEqual( Stem("fărâmiţos"), "fărâmiţ");});
test("fără -> făr", function() {deepEqual( Stem("fără"), "făr");});
test("făţişă -> făţiş", function() {deepEqual( Stem("făţişă"), "făţiş");});
test("făureşte -> făur", function() {deepEqual( Stem("făureşte"), "făur");});
test("febră -> febr", function() {deepEqual( Stem("febră"), "febr");});
test("febrei -> febre", function() {deepEqual( Stem("febrei"), "febre");});
test("febril -> febril", function() {deepEqual( Stem("febril"), "febril");});
test("febrilă -> febril", function() {deepEqual( Stem("febrilă"), "febril");});
test("februarie -> februar", function() {deepEqual( Stem("februarie"), "februar");});
test("fecioria -> fecior", function() {deepEqual( Stem("fecioria"), "fecior");});
test("feciorului -> fecior", function() {deepEqual( Stem("feciorului"), "fecior");});
test("fecunditate -> fecund", function() {deepEqual( Stem("fecunditate"), "fecund");});
test("fehnenfluchtig -> fehnenfluchtig", function() {deepEqual( Stem("fehnenfluchtig"), "fehnenfluchtig");});
test("fel -> fel", function() {deepEqual( Stem("fel"), "fel");});
test("felia -> feli", function() {deepEqual( Stem("felia"), "feli");});
test("felicitam -> felicit", function() {deepEqual( Stem("felicitam"), "felicit");});
test("felicitat -> felicit", function() {deepEqual( Stem("felicitat"), "felicit");});
test("felii -> fel", function() {deepEqual( Stem("felii"), "fel");});
test("felinar -> felinar", function() {deepEqual( Stem("felinar"), "felinar");});
test("felinarele -> felin", function() {deepEqual( Stem("felinarele"), "felin");});
test("felinelor -> felin", function() {deepEqual( Stem("felinelor"), "felin");});
test("felul -> fel", function() {deepEqual( Stem("felul"), "fel");});
test("felului -> fel", function() {deepEqual( Stem("felului"), "fel");});
test("feluri -> felur", function() {deepEqual( Stem("feluri"), "felur");});
test("felurile -> felur", function() {deepEqual( Stem("felurile"), "felur");});
test("felurime -> felurim", function() {deepEqual( Stem("felurime"), "felurim");});
test("felurită -> felur", function() {deepEqual( Stem("felurită"), "felur");});
test("felurite -> felur", function() {deepEqual( Stem("felurite"), "felur");});
test("feluriţi -> felur", function() {deepEqual( Stem("feluriţi"), "felur");});
test("femei -> feme", function() {deepEqual( Stem("femei"), "feme");});
test("femeia -> femei", function() {deepEqual( Stem("femeia"), "femei");});
test("femeie -> femei", function() {deepEqual( Stem("femeie"), "femei");});
test("femeii -> femei", function() {deepEqual( Stem("femeii"), "femei");});
test("femeile -> feme", function() {deepEqual( Stem("femeile"), "feme");});
test("femeilor -> feme", function() {deepEqual( Stem("femeilor"), "feme");});
test("femeiuşca -> femeiuşc", function() {deepEqual( Stem("femeiuşca"), "femeiuşc");});
test("femeiuşcă -> femeiuşc", function() {deepEqual( Stem("femeiuşcă"), "femeiuşc");});
test("femeiuştile -> femeiuşt", function() {deepEqual( Stem("femeiuştile"), "femeiuşt");});
test("feminin -> feminin", function() {deepEqual( Stem("feminin"), "feminin");});
test("feminină -> feminin", function() {deepEqual( Stem("feminină"), "feminin");});
test("feminismului -> feminist", function() {deepEqual( Stem("feminismului"), "feminist");});
test("feminitate -> femin", function() {deepEqual( Stem("feminitate"), "femin");});
test("feminitatea -> femin", function() {deepEqual( Stem("feminitatea"), "femin");});
test("feminităţii -> femin", function() {deepEqual( Stem("feminităţii"), "femin");});
test("fenomen -> fenomen", function() {deepEqual( Stem("fenomen"), "fenomen");});
test("fenomenal -> fenomenal", function() {deepEqual( Stem("fenomenal"), "fenomenal");});
test("fenomene -> fenomen", function() {deepEqual( Stem("fenomene"), "fenomen");});
test("fenomenele -> fenomen", function() {deepEqual( Stem("fenomenele"), "fenomen");});
test("fenomenelor -> fenomen", function() {deepEqual( Stem("fenomenelor"), "fenomen");});
test("fenomenolog -> fenomenolog", function() {deepEqual( Stem("fenomenolog"), "fenomenolog");});
test("fenomenologi -> fenomenolog", function() {deepEqual( Stem("fenomenologi"), "fenomenolog");});
test("fenomenologic -> fenomenolog", function() {deepEqual( Stem("fenomenologic"), "fenomenolog");});
test("fenomenologică -> fenomenolog", function() {deepEqual( Stem("fenomenologică"), "fenomenolog");});
test("fenomenologice -> fenomenolog", function() {deepEqual( Stem("fenomenologice"), "fenomenolog");});
test("fenomenologie -> fenomenolog", function() {deepEqual( Stem("fenomenologie"), "fenomenolog");});
test("fenomenologiei -> fenomenolog", function() {deepEqual( Stem("fenomenologiei"), "fenomenolog");});
test("fenomenologii -> fenomenolog", function() {deepEqual( Stem("fenomenologii"), "fenomenolog");});
test("fenomenologismul -> fenomenologist", function() {deepEqual( Stem("fenomenologismul"), "fenomenologist");});
test("fenomenul -> fenomen", function() {deepEqual( Stem("fenomenul"), "fenomen");});
test("fenomenului -> fenomen", function() {deepEqual( Stem("fenomenului"), "fenomen");});
test("fer -> fer", function() {deepEqual( Stem("fer"), "fer");});
test("ferată -> ferat", function() {deepEqual( Stem("ferată"), "ferat");});
test("ferate -> ferat", function() {deepEqual( Stem("ferate"), "ferat");});
test("ferăstraielor -> ferăstrai", function() {deepEqual( Stem("ferăstraielor"), "ferăstrai");});
test("ferdinand -> ferdinand", function() {deepEqual( Stem("ferdinand"), "ferdinand");});
test("ferească -> fereasc", function() {deepEqual( Stem("ferească"), "fereasc");});
test("fereastra -> fereastr", function() {deepEqual( Stem("fereastra"), "fereastr");});
test("fereastră -> fereastr", function() {deepEqual( Stem("fereastră"), "fereastr");});
test("feresc -> feresc", function() {deepEqual( Stem("feresc"), "feresc");});
test("ferestre -> ferestr", function() {deepEqual( Stem("ferestre"), "ferestr");});
test("ferestrele -> ferestr", function() {deepEqual( Stem("ferestrele"), "ferestr");});
test("fereşte -> fereşt", function() {deepEqual( Stem("fereşte"), "fereşt");});
test("feri -> fer", function() {deepEqual( Stem("feri"), "fer");});
test("fericească -> feric", function() {deepEqual( Stem("fericească"), "feric");});
test("fericire -> feric", function() {deepEqual( Stem("fericire"), "feric");});
test("fericirea -> feric", function() {deepEqual( Stem("fericirea"), "feric");});
test("fericiri -> fericir", function() {deepEqual( Stem("fericiri"), "fericir");});
test("fericirilor -> fericir", function() {deepEqual( Stem("fericirilor"), "fericir");});
test("fericit -> feric", function() {deepEqual( Stem("fericit"), "feric");});
test("fericită -> feric", function() {deepEqual( Stem("fericită"), "feric");});
test("ferindu -> ferindu", function() {deepEqual( Stem("ferindu"), "ferindu");});
test("ferit -> ferit", function() {deepEqual( Stem("ferit"), "ferit");});
test("ferită -> ferit", function() {deepEqual( Stem("ferită"), "ferit");});
test("feriţi -> fer", function() {deepEqual( Stem("feriţi"), "fer");});
test("ferm -> ferm", function() {deepEqual( Stem("ferm"), "ferm");});
test("fermă -> ferm", function() {deepEqual( Stem("fermă"), "ferm");});
test("fermecată -> fermec", function() {deepEqual( Stem("fermecată"), "fermec");});
test("fermecătoare -> fermec", function() {deepEqual( Stem("fermecătoare"), "fermec");});
test("fermecător -> fermec", function() {deepEqual( Stem("fermecător"), "fermec");});
test("fermele -> ferm", function() {deepEqual( Stem("fermele"), "ferm");});
test("fert -> fert", function() {deepEqual( Stem("fert"), "fert");});
test("fervent -> fervent", function() {deepEqual( Stem("fervent"), "fervent");});
test("fervenţi -> fervenţ", function() {deepEqual( Stem("fervenţi"), "fervenţ");});
test("festiv -> festiv", function() {deepEqual( Stem("festiv"), "festiv");});
test("festivalurile -> festivalur", function() {deepEqual( Stem("festivalurile"), "festivalur");});
test("fete -> fet", function() {deepEqual( Stem("fete"), "fet");});
test("fetele -> fet", function() {deepEqual( Stem("fetele"), "fet");});
test("fetică -> fetic", function() {deepEqual( Stem("fetică"), "fetic");});
test("fetiţă -> fetiţ", function() {deepEqual( Stem("fetiţă"), "fetiţ");});
test("fetiţei -> fetiţe", function() {deepEqual( Stem("fetiţei"), "fetiţe");});
test("fetiţo -> fetiţo", function() {deepEqual( Stem("fetiţo"), "fetiţo");});
test("feţe -> feţ", function() {deepEqual( Stem("feţe"), "feţ");});
test("feţei -> feţe", function() {deepEqual( Stem("feţei"), "feţe");});
test("feţele -> feţ", function() {deepEqual( Stem("feţele"), "feţ");});
test("feţelor -> feţ", function() {deepEqual( Stem("feţelor"), "feţ");});
test("feu -> feu", function() {deepEqual( Stem("feu"), "feu");});
test("feudală -> feudal", function() {deepEqual( Stem("feudală"), "feudal");});
test("feudale -> feudal", function() {deepEqual( Stem("feudale"), "feudal");});
test("fi -> fi", function() {deepEqual( Stem("fi"), "fi");});
test("fiară -> fiar", function() {deepEqual( Stem("fiară"), "fiar");});
test("fiarbă -> fiarb", function() {deepEqual( Stem("fiarbă"), "fiarb");});
test("fichte -> ficht", function() {deepEqual( Stem("fichte"), "ficht");});
test("fichtenau -> fichten", function() {deepEqual( Stem("fichtenau"), "fichten");});
test("fictiv -> fictiv", function() {deepEqual( Stem("fictiv"), "fictiv");});
test("fictivă -> fictiv", function() {deepEqual( Stem("fictivă"), "fictiv");});
test("ficţiune -> ficţiun", function() {deepEqual( Stem("ficţiune"), "ficţiun");});
test("ficţiunile -> ficţiun", function() {deepEqual( Stem("ficţiunile"), "ficţiun");});
test("fidelă -> fidel", function() {deepEqual( Stem("fidelă"), "fidel");});
test("fie -> fie", function() {deepEqual( Stem("fie"), "fie");});
test("fiecare -> fiec", function() {deepEqual( Stem("fiecare"), "fiec");});
test("fiecărei -> fiecăre", function() {deepEqual( Stem("fiecărei"), "fiecăre");});
test("fiecărui -> fiecăr", function() {deepEqual( Stem("fiecărui"), "fiecăr");});
test("fiecăruia -> fiecărui", function() {deepEqual( Stem("fiecăruia"), "fiecărui");});
test("fiece -> fiec", function() {deepEqual( Stem("fiece"), "fiec");});
test("fier -> fier", function() {deepEqual( Stem("fier"), "fier");});
test("fierărie -> fierăr", function() {deepEqual( Stem("fierărie"), "fierăr");});
test("fierb -> fierb", function() {deepEqual( Stem("fierb"), "fierb");});
test("fierbând -> fierb", function() {deepEqual( Stem("fierbând"), "fierb");});
test("fierbe -> fierb", function() {deepEqual( Stem("fierbe"), "fierb");});
test("fierbea -> fierb", function() {deepEqual( Stem("fierbea"), "fierb");});
test("fierbeam -> fierb", function() {deepEqual( Stem("fierbeam"), "fierb");});
test("fierbeau -> fierb", function() {deepEqual( Stem("fierbeau"), "fierb");});
test("fierbere -> fierb", function() {deepEqual( Stem("fierbere"), "fierb");});
test("fierberea -> fierb", function() {deepEqual( Stem("fierberea"), "fierb");});
test("fierberei -> fierbere", function() {deepEqual( Stem("fierberei"), "fierbere");});
test("fierberii -> fierber", function() {deepEqual( Stem("fierberii"), "fierber");});
test("fierberile -> fierber", function() {deepEqual( Stem("fierberile"), "fierber");});
test("fierbinte -> fierbint", function() {deepEqual( Stem("fierbinte"), "fierbint");});
test("fierbinţeală -> fierbinţeal", function() {deepEqual( Stem("fierbinţeală"), "fierbinţeal");});
test("fierte -> fiert", function() {deepEqual( Stem("fierte"), "fiert");});
test("fierului -> fier", function() {deepEqual( Stem("fierului"), "fier");});
test("fiesta -> fiest", function() {deepEqual( Stem("fiesta"), "fiest");});
test("fig -> fig", function() {deepEqual( Stem("fig"), "fig");});
test("figura -> figur", function() {deepEqual( Stem("figura"), "figur");});
test("figurant -> figur", function() {deepEqual( Stem("figurant"), "figur");});
test("figuranţi -> figuranţ", function() {deepEqual( Stem("figuranţi"), "figuranţ");});
test("figuranţilor -> figuranţ", function() {deepEqual( Stem("figuranţilor"), "figuranţ");});
test("figurare -> figur", function() {deepEqual( Stem("figurare"), "figur");});
test("figurat -> figur", function() {deepEqual( Stem("figurat"), "figur");});
test("figurată -> figur", function() {deepEqual( Stem("figurată"), "figur");});
test("figurativă -> figur", function() {deepEqual( Stem("figurativă"), "figur");});
test("figurative -> figur", function() {deepEqual( Stem("figurative"), "figur");});
test("figuraţie -> figur", function() {deepEqual( Stem("figuraţie"), "figur");});
test("figuraţiei -> figur", function() {deepEqual( Stem("figuraţiei"), "figur");});
test("figură -> figur", function() {deepEqual( Stem("figură"), "figur");});
test("figurări -> figurăr", function() {deepEqual( Stem("figurări"), "figurăr");});
test("figureaza -> figureaz", function() {deepEqual( Stem("figureaza"), "figureaz");});
test("figureze -> figur", function() {deepEqual( Stem("figureze"), "figur");});
test("figuri -> figur", function() {deepEqual( Stem("figuri"), "figur");});
test("figurii -> figur", function() {deepEqual( Stem("figurii"), "figur");});
test("figurile -> figur", function() {deepEqual( Stem("figurile"), "figur");});
test("figurilor -> figur", function() {deepEqual( Stem("figurilor"), "figur");});
test("figurine -> figurin", function() {deepEqual( Stem("figurine"), "figurin");});
test("figurînd -> figurînd", function() {deepEqual( Stem("figurînd"), "figurînd");});
test("fii -> fii", function() {deepEqual( Stem("fii"), "fii");});
test("fiica -> fiic", function() {deepEqual( Stem("fiica"), "fiic");});
test("fiice -> fiic", function() {deepEqual( Stem("fiice"), "fiic");});
test("fiicei -> fiice", function() {deepEqual( Stem("fiicei"), "fiice");});
test("fiilor -> fiilor", function() {deepEqual( Stem("fiilor"), "fiilor");});
test("fiind -> fiind", function() {deepEqual( Stem("fiind"), "fiind");});
test("fiindcă -> fiindc", function() {deepEqual( Stem("fiindcă"), "fiindc");});
test("fiindu -> fiindu", function() {deepEqual( Stem("fiindu"), "fiindu");});
test("fiinţa -> fiinţ", function() {deepEqual( Stem("fiinţa"), "fiinţ");});
test("fiinţă -> fiinţ", function() {deepEqual( Stem("fiinţă"), "fiinţ");});
test("fiinţe -> fiinţ", function() {deepEqual( Stem("fiinţe"), "fiinţ");});
test("fiinţează -> fiinţ", function() {deepEqual( Stem("fiinţează"), "fiinţ");});
test("fiinţelor -> fiinţ", function() {deepEqual( Stem("fiinţelor"), "fiinţ");});
test("filaj -> filaj", function() {deepEqual( Stem("filaj"), "filaj");});
test("filantrop -> filantrop", function() {deepEqual( Stem("filantrop"), "filantrop");});
test("filantropi -> filantrop", function() {deepEqual( Stem("filantropi"), "filantrop");});
test("filantropice -> filantrop", function() {deepEqual( Stem("filantropice"), "filantrop");});
test("filantropiei -> filantrop", function() {deepEqual( Stem("filantropiei"), "filantrop");});
test("filarmonică -> filarmon", function() {deepEqual( Stem("filarmonică"), "filarmon");});
test("filă -> fil", function() {deepEqual( Stem("filă"), "fil");});
test("filările -> filăr", function() {deepEqual( Stem("filările"), "filăr");});
test("fildeş -> fildeş", function() {deepEqual( Stem("fildeş"), "fildeş");});
test("file -> fil", function() {deepEqual( Stem("file"), "fil");});
test("fileu -> fileu", function() {deepEqual( Stem("fileu"), "fileu");});
test("filială -> filial", function() {deepEqual( Stem("filială"), "filial");});
test("filiale -> filial", function() {deepEqual( Stem("filiale"), "filial");});
test("filialei -> filiale", function() {deepEqual( Stem("filialei"), "filiale");});
test("filiaţie -> filiaţ", function() {deepEqual( Stem("filiaţie"), "filiaţ");});
test("filiera -> filier", function() {deepEqual( Stem("filiera"), "filier");});
test("filigran -> filigran", function() {deepEqual( Stem("filigran"), "filigran");});
test("filipescu -> filipescu", function() {deepEqual( Stem("filipescu"), "filipescu");});
test("filistină -> filistin", function() {deepEqual( Stem("filistină"), "filistin");});
test("filistinii -> filistin", function() {deepEqual( Stem("filistinii"), "filistin");});
test("film -> film", function() {deepEqual( Stem("film"), "film");});
test("filma -> film", function() {deepEqual( Stem("filma"), "film");});
test("filmată -> filmat", function() {deepEqual( Stem("filmată"), "filmat");});
test("filmării -> filmăr", function() {deepEqual( Stem("filmării"), "filmăr");});
test("filme -> film", function() {deepEqual( Stem("filme"), "film");});
test("filmele -> film", function() {deepEqual( Stem("filmele"), "film");});
test("filmelor -> film", function() {deepEqual( Stem("filmelor"), "film");});
test("filmic -> filmic", function() {deepEqual( Stem("filmic"), "filmic");});
test("filoane -> filoan", function() {deepEqual( Stem("filoane"), "filoan");});
test("filogeneză -> filogenez", function() {deepEqual( Stem("filogeneză"), "filogenez");});
test("filolog -> filolog", function() {deepEqual( Stem("filolog"), "filolog");});
test("filologi -> filolog", function() {deepEqual( Stem("filologi"), "filolog");});
test("filologia -> filolog", function() {deepEqual( Stem("filologia"), "filolog");});
test("filologic -> filolog", function() {deepEqual( Stem("filologic"), "filolog");});
test("filologică -> filolog", function() {deepEqual( Stem("filologică"), "filolog");});
test("filologilor -> filolog", function() {deepEqual( Stem("filologilor"), "filolog");});
test("filomelei -> filomele", function() {deepEqual( Stem("filomelei"), "filomele");});
test("filosoafă -> filosoaf", function() {deepEqual( Stem("filosoafă"), "filosoaf");});
test("filosof -> filosof", function() {deepEqual( Stem("filosof"), "filosof");});
test("filosofa -> filosof", function() {deepEqual( Stem("filosofa"), "filosof");});
test("filosofare -> filosof", function() {deepEqual( Stem("filosofare"), "filosof");});
test("filosofarea -> filosof", function() {deepEqual( Stem("filosofarea"), "filosof");});
test("filosofării -> filosofăr", function() {deepEqual( Stem("filosofării"), "filosofăr");});
test("filosofează -> filosof", function() {deepEqual( Stem("filosofează"), "filosof");});
test("filosofi -> filosof", function() {deepEqual( Stem("filosofi"), "filosof");});
test("filosofia -> filosof", function() {deepEqual( Stem("filosofia"), "filosof");});
test("filosofic -> filosof", function() {deepEqual( Stem("filosofic"), "filosof");});
test("filosofică -> filosof", function() {deepEqual( Stem("filosofică"), "filosof");});
test("filosofice -> filosof", function() {deepEqual( Stem("filosofice"), "filosof");});
test("filosoficească -> filosofic", function() {deepEqual( Stem("filosoficească"), "filosofic");});
test("filosoficeşte -> filosofic", function() {deepEqual( Stem("filosoficeşte"), "filosofic");});
test("filosofie -> filosof", function() {deepEqual( Stem("filosofie"), "filosof");});
test("filosofiei -> filosof", function() {deepEqual( Stem("filosofiei"), "filosof");});
test("filosofii -> filosof", function() {deepEqual( Stem("filosofii"), "filosof");});
test("filosofilor -> filosof", function() {deepEqual( Stem("filosofilor"), "filosof");});
test("filosoful -> filosof", function() {deepEqual( Stem("filosoful"), "filosof");});
test("filozof -> filozof", function() {deepEqual( Stem("filozof"), "filozof");});
test("filozofa -> filozof", function() {deepEqual( Stem("filozofa"), "filozof");});
test("filozofat -> filozof", function() {deepEqual( Stem("filozofat"), "filozof");});
test("filozofă -> filozof", function() {deepEqual( Stem("filozofă"), "filozof");});
test("filozofi -> filozof", function() {deepEqual( Stem("filozofi"), "filozof");});
test("filozofia -> filozof", function() {deepEqual( Stem("filozofia"), "filozof");});
test("filozofic -> filozof", function() {deepEqual( Stem("filozofic"), "filozof");});
test("filozofică -> filozof", function() {deepEqual( Stem("filozofică"), "filozof");});
test("filozofice -> filozof", function() {deepEqual( Stem("filozofice"), "filozof");});
test("filozofie -> filozof", function() {deepEqual( Stem("filozofie"), "filozof");});
test("filozofiei -> filozof", function() {deepEqual( Stem("filozofiei"), "filozof");});
test("filozofii -> filozof", function() {deepEqual( Stem("filozofii"), "filozof");});
test("filozofilor -> filozof", function() {deepEqual( Stem("filozofilor"), "filozof");});
test("filozoful -> filozof", function() {deepEqual( Stem("filozoful"), "filozof");});
test("filozofului -> filozof", function() {deepEqual( Stem("filozofului"), "filozof");});
test("filtrării -> filtrăr", function() {deepEqual( Stem("filtrării"), "filtrăr");});
test("fim -> fim", function() {deepEqual( Stem("fim"), "fim");});
test("fin -> fin", function() {deepEqual( Stem("fin"), "fin");});
test("final -> final", function() {deepEqual( Stem("final"), "final");});
test("finalurile -> finalur", function() {deepEqual( Stem("finalurile"), "finalur");});
test("financiar -> financiar", function() {deepEqual( Stem("financiar"), "financiar");});
test("financiarii -> financiar", function() {deepEqual( Stem("financiarii"), "financiar");});
test("finanţe -> finanţ", function() {deepEqual( Stem("finanţe"), "finanţ");});
test("finanţului -> finanţ", function() {deepEqual( Stem("finanţului"), "finanţ");});
test("fină -> fin", function() {deepEqual( Stem("fină"), "fin");});
test("fine -> fin", function() {deepEqual( Stem("fine"), "fin");});
test("fineţea -> fineţ", function() {deepEqual( Stem("fineţea"), "fineţ");});
test("finite -> finit", function() {deepEqual( Stem("finite"), "finit");});
test("fior -> fior", function() {deepEqual( Stem("fior"), "fior");});
test("fiorul -> fior", function() {deepEqual( Stem("fiorul"), "fior");});
test("fir -> fir", function() {deepEqual( Stem("fir"), "fir");});
test("fira -> fir", function() {deepEqual( Stem("fira"), "fir");});
test("fire -> fir", function() {deepEqual( Stem("fire"), "fir");});
test("firea -> fir", function() {deepEqual( Stem("firea"), "fir");});
test("firească -> fireasc", function() {deepEqual( Stem("firească"), "fireasc");});
test("firele -> fir", function() {deepEqual( Stem("firele"), "fir");});
test("firesc -> firesc", function() {deepEqual( Stem("firesc"), "firesc");});
test("fireşte -> fireşt", function() {deepEqual( Stem("fireşte"), "fireşt");});
test("fireşti -> fireşt", function() {deepEqual( Stem("fireşti"), "fireşt");});
test("firi -> fir", function() {deepEqual( Stem("firi"), "fir");});
test("firile -> fir", function() {deepEqual( Stem("firile"), "fir");});
test("firişor -> firişor", function() {deepEqual( Stem("firişor"), "firişor");});
test("firmă -> firm", function() {deepEqual( Stem("firmă"), "firm");});
test("firme -> firm", function() {deepEqual( Stem("firme"), "firm");});
test("firul -> fir", function() {deepEqual( Stem("firul"), "fir");});
test("firului -> fir", function() {deepEqual( Stem("firului"), "fir");});
test("fischer -> fischer", function() {deepEqual( Stem("fischer"), "fischer");});
test("fise -> fis", function() {deepEqual( Stem("fise"), "fis");});
test("fiţi -> fiţ", function() {deepEqual( Stem("fiţi"), "fiţ");});
test("fiu -> fiu", function() {deepEqual( Stem("fiu"), "fiu");});
test("fiul -> fiul", function() {deepEqual( Stem("fiul"), "fiul");});
test("fix -> fix", function() {deepEqual( Stem("fix"), "fix");});
test("fixa -> fix", function() {deepEqual( Stem("fixa"), "fix");});
test("fixase -> fixas", function() {deepEqual( Stem("fixase"), "fixas");});
test("fixat -> fixat", function() {deepEqual( Stem("fixat"), "fixat");});
test("fixată -> fixat", function() {deepEqual( Stem("fixată"), "fixat");});
test("fixate -> fixat", function() {deepEqual( Stem("fixate"), "fixat");});
test("fixă -> fix", function() {deepEqual( Stem("fixă"), "fix");});
test("fixăm -> fix", function() {deepEqual( Stem("fixăm"), "fix");});
test("fixări -> fixăr", function() {deepEqual( Stem("fixări"), "fixăr");});
test("fixe -> fix", function() {deepEqual( Stem("fixe"), "fix");});
test("fixez -> fixez", function() {deepEqual( Stem("fixez"), "fixez");});
test("fixezi -> fixez", function() {deepEqual( Stem("fixezi"), "fixez");});
test("fixitatea -> fixitat", function() {deepEqual( Stem("fixitatea"), "fixitat");});
test("fizic -> fizic", function() {deepEqual( Stem("fizic"), "fizic");});
test("fizica -> fizic", function() {deepEqual( Stem("fizica"), "fizic");});
test("fizicală -> fizic", function() {deepEqual( Stem("fizicală"), "fizic");});
test("fizică -> fizic", function() {deepEqual( Stem("fizică"), "fizic");});
test("fizice -> fizic", function() {deepEqual( Stem("fizice"), "fizic");});
test("fizicianul -> fizician", function() {deepEqual( Stem("fizicianul"), "fizician");});
test("fizicieni -> fizicien", function() {deepEqual( Stem("fizicieni"), "fizicien");});
test("fizico -> fizico", function() {deepEqual( Stem("fizico"), "fizico");});
test("fiziologică -> fiziolog", function() {deepEqual( Stem("fiziologică"), "fiziolog");});
test("fiziologice -> fiziolog", function() {deepEqual( Stem("fiziologice"), "fiziolog");});
test("fizionomia -> fizionom", function() {deepEqual( Stem("fizionomia"), "fizionom");});
test("flacon -> flacon", function() {deepEqual( Stem("flacon"), "flacon");});
test("flaconul -> flacon", function() {deepEqual( Stem("flaconul"), "flacon");});
test("flagrant -> flagrant", function() {deepEqual( Stem("flagrant"), "flagrant");});
test("flanc -> flanc", function() {deepEqual( Stem("flanc"), "flanc");});
test("flancul -> flanc", function() {deepEqual( Stem("flancul"), "flanc");});
test("flancuri -> flancur", function() {deepEqual( Stem("flancuri"), "flancur");});
test("flaşnetelor -> flaşnet", function() {deepEqual( Stem("flaşnetelor"), "flaşnet");});
test("flaubert -> flaubert", function() {deepEqual( Stem("flaubert"), "flaubert");});
test("flaut -> flaut", function() {deepEqual( Stem("flaut"), "flaut");});
test("flautul -> flaut", function() {deepEqual( Stem("flautul"), "flaut");});
test("flăcăiaş -> flăcăiaş", function() {deepEqual( Stem("flăcăiaş"), "flăcăiaş");});
test("flăcări -> flăcăr", function() {deepEqual( Stem("flăcări"), "flăcăr");});
test("flăcările -> flăcăr", function() {deepEqual( Stem("flăcările"), "flăcăr");});
test("flăcărilor -> flăcăr", function() {deepEqual( Stem("flăcărilor"), "flăcăr");});
test("flăcău -> flăcău", function() {deepEqual( Stem("flăcău"), "flăcău");});
test("flăcăul -> flăc", function() {deepEqual( Stem("flăcăul"), "flăc");});
test("flămând -> flăm", function() {deepEqual( Stem("flămând"), "flăm");});
test("fleac -> fleac", function() {deepEqual( Stem("fleac"), "fleac");});
test("fleacuri -> fleacur", function() {deepEqual( Stem("fleacuri"), "fleacur");});
test("fleacurile -> fleacur", function() {deepEqual( Stem("fleacurile"), "fleacur");});
test("fleacurilor -> fleacur", function() {deepEqual( Stem("fleacurilor"), "fleacur");});
test("flecari -> flecar", function() {deepEqual( Stem("flecari"), "flecar");});
test("flecăreala -> flecăreal", function() {deepEqual( Stem("flecăreala"), "flecăreal");});
test("fleşcăit -> fleşcăit", function() {deepEqual( Stem("fleşcăit"), "fleşcăit");});
test("fleurs -> fleurs", function() {deepEqual( Stem("fleurs"), "fleurs");});
test("flexibilă -> flexibil", function() {deepEqual( Stem("flexibilă"), "flexibil");});
test("flirt -> flirt", function() {deepEqual( Stem("flirt"), "flirt");});
test("floare -> floar", function() {deepEqual( Stem("floare"), "floar");});
test("floarea -> floar", function() {deepEqual( Stem("floarea"), "floar");});
test("flora -> flor", function() {deepEqual( Stem("flora"), "flor");});
test("florea -> flor", function() {deepEqual( Stem("florea"), "flor");});
test("florescu -> florescu", function() {deepEqual( Stem("florescu"), "florescu");});
test("floretă -> floret", function() {deepEqual( Stem("floretă"), "floret");});
test("flori -> flor", function() {deepEqual( Stem("flori"), "flor");});
test("florian -> florian", function() {deepEqual( Stem("florian"), "florian");});
test("floricele -> floric", function() {deepEqual( Stem("floricele"), "floric");});
test("florile -> flor", function() {deepEqual( Stem("florile"), "flor");});
test("florilor -> flor", function() {deepEqual( Stem("florilor"), "flor");});
test("floroiu -> floroiu", function() {deepEqual( Stem("floroiu"), "floroiu");});
test("floroiule -> floroiul", function() {deepEqual( Stem("floroiule"), "floroiul");});
test("fluentă -> fluent", function() {deepEqual( Stem("fluentă"), "fluent");});
test("fluid -> fluid", function() {deepEqual( Stem("fluid"), "fluid");});
test("fluiera -> fluier", function() {deepEqual( Stem("fluiera"), "fluier");});
test("fluieri -> fluier", function() {deepEqual( Stem("fluieri"), "fluier");});
test("fluturi -> flutur", function() {deepEqual( Stem("fluturi"), "flutur");});
test("fluturii -> flutur", function() {deepEqual( Stem("fluturii"), "flutur");});
test("foaie -> foai", function() {deepEqual( Stem("foaie"), "foai");});
test("foame -> foam", function() {deepEqual( Stem("foame"), "foam");});
test("foamea -> foam", function() {deepEqual( Stem("foamea"), "foam");});
test("foamei -> foame", function() {deepEqual( Stem("foamei"), "foame");});
test("foarte -> foart", function() {deepEqual( Stem("foarte"), "foart");});
test("foc -> foc", function() {deepEqual( Stem("foc"), "foc");});
test("focare -> focar", function() {deepEqual( Stem("focare"), "focar");});
test("focul -> foc", function() {deepEqual( Stem("focul"), "foc");});
test("focului -> foc", function() {deepEqual( Stem("focului"), "foc");});
test("focuri -> focur", function() {deepEqual( Stem("focuri"), "focur");});
test("focurile -> focur", function() {deepEqual( Stem("focurile"), "focur");});
test("focurilor -> focur", function() {deepEqual( Stem("focurilor"), "focur");});
test("foi -> foi", function() {deepEqual( Stem("foi"), "foi");});
test("foială -> foial", function() {deepEqual( Stem("foială"), "foial");});
test("foiletonului -> foileton", function() {deepEqual( Stem("foiletonului"), "foileton");});
test("foişorul -> foişor", function() {deepEqual( Stem("foişorul"), "foişor");});
test("foiţele -> foiţ", function() {deepEqual( Stem("foiţele"), "foiţ");});
test("foloase -> foloas", function() {deepEqual( Stem("foloase"), "foloas");});
test("folos -> folos", function() {deepEqual( Stem("folos"), "folos");});
test("folosea -> folo", function() {deepEqual( Stem("folosea"), "folo");});
test("folosească -> folos", function() {deepEqual( Stem("folosească"), "folos");});
test("folosesc -> folos", function() {deepEqual( Stem("folosesc"), "folos");});
test("folosindu -> folos", function() {deepEqual( Stem("folosindu"), "folos");});
test("folosită -> folos", function() {deepEqual( Stem("folosită"), "folos");});
test("folositoare -> folos", function() {deepEqual( Stem("folositoare"), "folos");});
test("folosiţi -> folos", function() {deepEqual( Stem("folosiţi"), "folos");});
test("folosul -> folos", function() {deepEqual( Stem("folosul"), "folos");});
test("fond -> fond", function() {deepEqual( Stem("fond"), "fond");});
test("fondul -> fond", function() {deepEqual( Stem("fondul"), "fond");});
test("fonduri -> fondur", function() {deepEqual( Stem("fonduri"), "fondur");});
test("fonetic -> fonet", function() {deepEqual( Stem("fonetic"), "fonet");});
test("fonetică -> fonet", function() {deepEqual( Stem("fonetică"), "fonet");});
test("forfota -> forfot", function() {deepEqual( Stem("forfota"), "forfot");});
test("forfotesc -> forfot", function() {deepEqual( Stem("forfotesc"), "forfot");});
test("forfoteşte -> forfot", function() {deepEqual( Stem("forfoteşte"), "forfot");});
test("forma -> form", function() {deepEqual( Stem("forma"), "form");});
test("formal -> formal", function() {deepEqual( Stem("formal"), "formal");});
test("formale -> formal", function() {deepEqual( Stem("formale"), "formal");});
test("formalitate -> formal", function() {deepEqual( Stem("formalitate"), "formal");});
test("formalităţi -> formal", function() {deepEqual( Stem("formalităţi"), "formal");});
test("formalităţilor -> formal", function() {deepEqual( Stem("formalităţilor"), "formal");});
test("formarea -> form", function() {deepEqual( Stem("formarea"), "form");});
test("formase -> form", function() {deepEqual( Stem("formase"), "form");});
test("format -> format", function() {deepEqual( Stem("format"), "format");});
test("formată -> format", function() {deepEqual( Stem("formată"), "format");});
test("formaţia -> form", function() {deepEqual( Stem("formaţia"), "form");});
test("formaţiune -> format", function() {deepEqual( Stem("formaţiune"), "format");});
test("formau -> form", function() {deepEqual( Stem("formau"), "form");});
test("formă -> form", function() {deepEqual( Stem("formă"), "form");});
test("forme -> form", function() {deepEqual( Stem("forme"), "form");});
test("formează -> form", function() {deepEqual( Stem("formează"), "form");});
test("formei -> forme", function() {deepEqual( Stem("formei"), "forme");});
test("formele -> form", function() {deepEqual( Stem("formele"), "form");});
test("formelor -> form", function() {deepEqual( Stem("formelor"), "form");});
test("formez -> form", function() {deepEqual( Stem("formez"), "form");});
test("formeze -> form", function() {deepEqual( Stem("formeze"), "form");});
test("formidabil -> formid", function() {deepEqual( Stem("formidabil"), "formid");});
test("formidabilă -> formid", function() {deepEqual( Stem("formidabilă"), "formid");});
test("formidabile -> formid", function() {deepEqual( Stem("formidabile"), "formid");});
test("formula -> formul", function() {deepEqual( Stem("formula"), "formul");});
test("formular -> formular", function() {deepEqual( Stem("formular"), "formular");});
test("formulat -> formul", function() {deepEqual( Stem("formulat"), "formul");});
test("formulă -> formul", function() {deepEqual( Stem("formulă"), "formul");});
test("formule -> formul", function() {deepEqual( Stem("formule"), "formul");});
test("formulează -> formul", function() {deepEqual( Stem("formulează"), "formul");});
test("formulele -> formul", function() {deepEqual( Stem("formulele"), "formul");});
test("fortificarea -> fortific", function() {deepEqual( Stem("fortificarea"), "fortific");});
test("fortificasem -> fortific", function() {deepEqual( Stem("fortificasem"), "fortific");});
test("fortificată -> fortific", function() {deepEqual( Stem("fortificată"), "fortific");});
test("fortificate -> fortific", function() {deepEqual( Stem("fortificate"), "fortific");});
test("fortificaţii -> fortific", function() {deepEqual( Stem("fortificaţii"), "fortific");});
test("fortificaţiile -> fortific", function() {deepEqual( Stem("fortificaţiile"), "fortific");});
test("fortifice -> fortif", function() {deepEqual( Stem("fortifice"), "fortif");});
test("fortunei -> fortune", function() {deepEqual( Stem("fortunei"), "fortune");});
test("forţa -> forţ", function() {deepEqual( Stem("forţa"), "forţ");});
test("forţat -> forţat", function() {deepEqual( Stem("forţat"), "forţat");});
test("forţată -> forţat", function() {deepEqual( Stem("forţată"), "forţat");});
test("forţă -> forţ", function() {deepEqual( Stem("forţă"), "forţ");});
test("forţe -> forţ", function() {deepEqual( Stem("forţe"), "forţ");});
test("forţei -> forţe", function() {deepEqual( Stem("forţei"), "forţe");});
test("forţele -> forţ", function() {deepEqual( Stem("forţele"), "forţ");});
test("forţelor -> forţ", function() {deepEqual( Stem("forţelor"), "forţ");});
test("fosforescentă -> fosforescent", function() {deepEqual( Stem("fosforescentă"), "fosforescent");});
test("fost -> fost", function() {deepEqual( Stem("fost"), "fost");});
test("fosta -> fost", function() {deepEqual( Stem("fosta"), "fost");});
test("fostă -> fost", function() {deepEqual( Stem("fostă"), "fost");});
test("fostul -> fost", function() {deepEqual( Stem("fostul"), "fost");});
test("fotbal -> fotbal", function() {deepEqual( Stem("fotbal"), "fotbal");});
test("fotografia -> fotograf", function() {deepEqual( Stem("fotografia"), "fotograf");});
test("fotografiat -> fotograf", function() {deepEqual( Stem("fotografiat"), "fotograf");});
test("fotografiată -> fotograf", function() {deepEqual( Stem("fotografiată"), "fotograf");});
test("fotografic -> fotograf", function() {deepEqual( Stem("fotografic"), "fotograf");});
test("fotografie -> fotograf", function() {deepEqual( Stem("fotografie"), "fotograf");});
test("fotografii -> fotograf", function() {deepEqual( Stem("fotografii"), "fotograf");});
test("fotolii -> fotol", function() {deepEqual( Stem("fotolii"), "fotol");});
test("fotoliile -> fotol", function() {deepEqual( Stem("fotoliile"), "fotol");});
test("fotoliilor -> fotol", function() {deepEqual( Stem("fotoliilor"), "fotol");});
test("fotoliu -> fotoliu", function() {deepEqual( Stem("fotoliu"), "fotoliu");});
test("fotoliul -> fotol", function() {deepEqual( Stem("fotoliul"), "fotol");});
test("frac -> frac", function() {deepEqual( Stem("frac"), "frac");});
test("fracţii -> fracţ", function() {deepEqual( Stem("fracţii"), "fracţ");});
test("fracţiune -> fracţiun", function() {deepEqual( Stem("fracţiune"), "fracţiun");});
test("fracţiuni -> fracţiun", function() {deepEqual( Stem("fracţiuni"), "fracţiun");});
test("fracul -> frac", function() {deepEqual( Stem("fracul"), "frac");});
test("fracului -> frac", function() {deepEqual( Stem("fracului"), "frac");});
test("frageda -> fraged", function() {deepEqual( Stem("frageda"), "fraged");});
test("fragedă -> fraged", function() {deepEqual( Stem("fragedă"), "fraged");});
test("fragede -> fraged", function() {deepEqual( Stem("fragede"), "fraged");});
test("fragi -> frag", function() {deepEqual( Stem("fragi"), "frag");});
test("fragile -> frag", function() {deepEqual( Stem("fragile"), "frag");});
test("fragment -> fragment", function() {deepEqual( Stem("fragment"), "fragment");});
test("fragmentare -> fragment", function() {deepEqual( Stem("fragmentare"), "fragment");});
test("fragmente -> fragment", function() {deepEqual( Stem("fragmente"), "fragment");});
test("france -> franc", function() {deepEqual( Stem("france"), "franc");});
test("francez -> franc", function() {deepEqual( Stem("francez"), "franc");});
test("franceza -> francez", function() {deepEqual( Stem("franceza"), "francez");});
test("franceză -> francez", function() {deepEqual( Stem("franceză"), "francez");});
test("franceze -> franc", function() {deepEqual( Stem("franceze"), "franc");});
test("francezi -> franc", function() {deepEqual( Stem("francezi"), "franc");});
test("francezii -> franc", function() {deepEqual( Stem("francezii"), "franc");});
test("francezilor -> franc", function() {deepEqual( Stem("francezilor"), "franc");});
test("francezul -> franc", function() {deepEqual( Stem("francezul"), "franc");});
test("francheţă -> francheţ", function() {deepEqual( Stem("francheţă"), "francheţ");});
test("franci -> franc", function() {deepEqual( Stem("franci"), "franc");});
test("francii -> franc", function() {deepEqual( Stem("francii"), "franc");});
test("francis -> francis", function() {deepEqual( Stem("francis"), "francis");});
test("francisc -> francisc", function() {deepEqual( Stem("francisc"), "francisc");});
test("franco -> franco", function() {deepEqual( Stem("franco"), "franco");});
test("franţa -> franţ", function() {deepEqual( Stem("franţa"), "franţ");});
test("franţă -> franţ", function() {deepEqual( Stem("franţă"), "franţ");});
test("franţei -> franţe", function() {deepEqual( Stem("franţei"), "franţe");});
test("franţuzească -> franţuz", function() {deepEqual( Stem("franţuzească"), "franţuz");});
test("franţuzesc -> franţuz", function() {deepEqual( Stem("franţuzesc"), "franţuz");});
test("franţuzeşte -> franţuz", function() {deepEqual( Stem("franţuzeşte"), "franţuz");});
test("franţuzeşti -> franţuz", function() {deepEqual( Stem("franţuzeşti"), "franţuz");});
test("franţuzul -> franţuz", function() {deepEqual( Stem("franţuzul"), "franţuz");});
test("franz -> franz", function() {deepEqual( Stem("franz"), "franz");});
test("frapat -> frapat", function() {deepEqual( Stem("frapat"), "frapat");});
test("frate -> frat", function() {deepEqual( Stem("frate"), "frat");});
test("fratelui -> fratel", function() {deepEqual( Stem("fratelui"), "fratel");});
test("fraţi -> fraţ", function() {deepEqual( Stem("fraţi"), "fraţ");});
test("fraţii -> fraţ", function() {deepEqual( Stem("fraţii"), "fraţ");});
test("fraţilor -> fraţ", function() {deepEqual( Stem("fraţilor"), "fraţ");});
test("fraza -> fraz", function() {deepEqual( Stem("fraza"), "fraz");});
test("frază -> fraz", function() {deepEqual( Stem("frază"), "fraz");});
test("fraze -> fraz", function() {deepEqual( Stem("fraze"), "fraz");});
test("frazei -> fraze", function() {deepEqual( Stem("frazei"), "fraze");});
test("frazelor -> fraz", function() {deepEqual( Stem("frazelor"), "fraz");});
test("frânar -> frânar", function() {deepEqual( Stem("frânar"), "frânar");});
test("frânarul -> frânar", function() {deepEqual( Stem("frânarul"), "frânar");});
test("frângea -> frâng", function() {deepEqual( Stem("frângea"), "frâng");});
test("frângere -> frâng", function() {deepEqual( Stem("frângere"), "frâng");});
test("frânghii -> frângh", function() {deepEqual( Stem("frânghii"), "frângh");});
test("frânt -> frânt", function() {deepEqual( Stem("frânt"), "frânt");});
test("frântă -> frânt", function() {deepEqual( Stem("frântă"), "frânt");});
test("frâu -> frâu", function() {deepEqual( Stem("frâu"), "frâu");});
test("frăgezime -> frăgezim", function() {deepEqual( Stem("frăgezime"), "frăgezim");});
test("frăgezimi -> frăgezim", function() {deepEqual( Stem("frăgezimi"), "frăgezim");});
test("frământ -> frământ", function() {deepEqual( Stem("frământ"), "frământ");});
test("frământare -> frământ", function() {deepEqual( Stem("frământare"), "frământ");});
test("frământarea -> frământ", function() {deepEqual( Stem("frământarea"), "frământ");});
test("frământat -> frământ", function() {deepEqual( Stem("frământat"), "frământ");});
test("frământând -> frământ", function() {deepEqual( Stem("frământând"), "frământ");});
test("frământă -> frământ", function() {deepEqual( Stem("frământă"), "frământ");});
test("frământării -> frământăr", function() {deepEqual( Stem("frământării"), "frământăr");});
test("frământe -> frământ", function() {deepEqual( Stem("frământe"), "frământ");});
test("frămânţi -> frămânţ", function() {deepEqual( Stem("frămânţi"), "frămânţ");});
test("frăţietate -> frăţiet", function() {deepEqual( Stem("frăţietate"), "frăţiet");});
test("freacă -> freac", function() {deepEqual( Stem("freacă"), "freac");});
test("frecvent -> frecvent", function() {deepEqual( Stem("frecvent"), "frecvent");});
test("frecventa -> frecvent", function() {deepEqual( Stem("frecventa"), "frecvent");});
test("frecvente -> frecvent", function() {deepEqual( Stem("frecvente"), "frecvent");});
test("frecventeze -> frecvent", function() {deepEqual( Stem("frecventeze"), "frecvent");});
test("frecventezi -> frecvent", function() {deepEqual( Stem("frecventezi"), "frecvent");});
test("freie -> frei", function() {deepEqual( Stem("freie"), "frei");});
test("frenezia -> frenez", function() {deepEqual( Stem("frenezia"), "frenez");});
test("frenezie -> frenez", function() {deepEqual( Stem("frenezie"), "frenez");});
test("freud -> freud", function() {deepEqual( Stem("freud"), "freud");});
test("frezmaşina -> frezmaşin", function() {deepEqual( Stem("frezmaşina"), "frezmaşin");});
test("friabile -> friabil", function() {deepEqual( Stem("friabile"), "friabil");});
test("frica -> fric", function() {deepEqual( Stem("frica"), "fric");});
test("frică -> fric", function() {deepEqual( Stem("frică"), "fric");});
test("fricii -> fric", function() {deepEqual( Stem("fricii"), "fric");});
test("fricoasă -> fricoas", function() {deepEqual( Stem("fricoasă"), "fricoas");});
test("fricos -> fricos", function() {deepEqual( Stem("fricos"), "fricos");});
test("frig -> frig", function() {deepEqual( Stem("frig"), "frig");});
test("frigare -> frig", function() {deepEqual( Stem("frigare"), "frig");});
test("frigul -> frig", function() {deepEqual( Stem("frigul"), "frig");});
test("frigului -> frig", function() {deepEqual( Stem("frigului"), "frig");});
test("frigurile -> frigur", function() {deepEqual( Stem("frigurile"), "frigur");});
test("friguros -> frigur", function() {deepEqual( Stem("friguros"), "frigur");});
test("fript -> fript", function() {deepEqual( Stem("fript"), "fript");});
test("friptă -> fript", function() {deepEqual( Stem("friptă"), "fript");});
test("fripte -> fript", function() {deepEqual( Stem("fripte"), "fript");});
test("friptura -> friptur", function() {deepEqual( Stem("friptura"), "friptur");});
test("friptură -> fript", function() {deepEqual( Stem("friptură"), "fript");});
test("fripturi -> friptur", function() {deepEqual( Stem("fripturi"), "friptur");});
test("fripturii -> friptur", function() {deepEqual( Stem("fripturii"), "friptur");});
test("fripţi -> fripţ", function() {deepEqual( Stem("fripţi"), "fripţ");});
test("frivolă -> frivol", function() {deepEqual( Stem("frivolă"), "frivol");});
test("frivoli -> frivol", function() {deepEqual( Stem("frivoli"), "frivol");});
test("frivolitatea -> frivol", function() {deepEqual( Stem("frivolitatea"), "frivol");});
test("frola -> frol", function() {deepEqual( Stem("frola"), "frol");});
test("frondeur -> frondeur", function() {deepEqual( Stem("frondeur"), "frondeur");});
test("front -> front", function() {deepEqual( Stem("front"), "front");});
test("frontieră -> frontier", function() {deepEqual( Stem("frontieră"), "frontier");});
test("frontierei -> frontiere", function() {deepEqual( Stem("frontierei"), "frontiere");});
test("frontul -> front", function() {deepEqual( Stem("frontul"), "front");});
test("frontului -> front", function() {deepEqual( Stem("frontului"), "front");});
test("fronturile -> frontur", function() {deepEqual( Stem("fronturile"), "frontur");});
test("fruct -> fruct", function() {deepEqual( Stem("fruct"), "fruct");});
test("fructe -> fruct", function() {deepEqual( Stem("fructe"), "fruct");});
test("fructul -> fruct", function() {deepEqual( Stem("fructul"), "fruct");});
test("frumoasă -> frumoas", function() {deepEqual( Stem("frumoasă"), "frumoas");});
test("frumoase -> frumoas", function() {deepEqual( Stem("frumoase"), "frumoas");});
test("frumos -> frumos", function() {deepEqual( Stem("frumos"), "frumos");});
test("frumosul -> frumos", function() {deepEqual( Stem("frumosul"), "frumos");});
test("frumoşi -> frumoş", function() {deepEqual( Stem("frumoşi"), "frumoş");});
test("frumuseţe -> frumuseţ", function() {deepEqual( Stem("frumuseţe"), "frumuseţ");});
test("frumuseţea -> frumuseţ", function() {deepEqual( Stem("frumuseţea"), "frumuseţ");});
test("frumuseţii -> frumus", function() {deepEqual( Stem("frumuseţii"), "frumus");});
test("frumuseţile -> frumus", function() {deepEqual( Stem("frumuseţile"), "frumus");});
test("frumuşele -> frumuş", function() {deepEqual( Stem("frumuşele"), "frumuş");});
test("frumuşică -> frumuş", function() {deepEqual( Stem("frumuşică"), "frumuş");});
test("fruntaşii -> frunt", function() {deepEqual( Stem("fruntaşii"), "frunt");});
test("fruntaşilor -> frunt", function() {deepEqual( Stem("fruntaşilor"), "frunt");});
test("frunte -> frunt", function() {deepEqual( Stem("frunte"), "frunt");});
test("fruntea -> frunt", function() {deepEqual( Stem("fruntea"), "frunt");});
test("frunză -> frunz", function() {deepEqual( Stem("frunză"), "frunz");});
test("frunze -> frunz", function() {deepEqual( Stem("frunze"), "frunz");});
test("frunzele -> frunz", function() {deepEqual( Stem("frunzele"), "frunz");});
test("frunziş -> frunziş", function() {deepEqual( Stem("frunziş"), "frunziş");});
test("frunzişuri -> frunzişur", function() {deepEqual( Stem("frunzişuri"), "frunzişur");});
test("frupturi -> fruptur", function() {deepEqual( Stem("frupturi"), "fruptur");});
test("fruste -> frust", function() {deepEqual( Stem("fruste"), "frust");});
test("fu -> fu", function() {deepEqual( Stem("fu"), "fu");});
test("fug -> fug", function() {deepEqual( Stem("fug"), "fug");});
test("fuga -> fug", function() {deepEqual( Stem("fuga"), "fug");});
test("fugari -> fugar", function() {deepEqual( Stem("fugari"), "fugar");});
test("fugă -> fug", function() {deepEqual( Stem("fugă"), "fug");});
test("fugărit -> fugăr", function() {deepEqual( Stem("fugărit"), "fugăr");});
test("fuge -> fug", function() {deepEqual( Stem("fuge"), "fug");});
test("fugea -> fug", function() {deepEqual( Stem("fugea"), "fug");});
test("fugeam -> fugeam", function() {deepEqual( Stem("fugeam"), "fugeam");});
test("fugi -> fug", function() {deepEqual( Stem("fugi"), "fug");});
test("fugii -> fug", function() {deepEqual( Stem("fugii"), "fug");});
test("fugim -> fug", function() {deepEqual( Stem("fugim"), "fug");});
test("fugind -> fugind", function() {deepEqual( Stem("fugind"), "fugind");});
test("fugit -> fugit", function() {deepEqual( Stem("fugit"), "fugit");});
test("fugiţi -> fug", function() {deepEqual( Stem("fugiţi"), "fug");});
test("fugos -> fugos", function() {deepEqual( Stem("fugos"), "fugos");});
test("fulg -> fulg", function() {deepEqual( Stem("fulg"), "fulg");});
test("fulgerare -> fulger", function() {deepEqual( Stem("fulgerare"), "fulger");});
test("fulgeră -> fulger", function() {deepEqual( Stem("fulgeră"), "fulger");});
test("fum -> fum", function() {deepEqual( Stem("fum"), "fum");});
test("fuma -> fum", function() {deepEqual( Stem("fuma"), "fum");});
test("fumam -> fumam", function() {deepEqual( Stem("fumam"), "fumam");});
test("fumat -> fumat", function() {deepEqual( Stem("fumat"), "fumat");});
test("fumau -> fumau", function() {deepEqual( Stem("fumau"), "fumau");});
test("fumăm -> fum", function() {deepEqual( Stem("fumăm"), "fum");});
test("fumăria -> fumăr", function() {deepEqual( Stem("fumăria"), "fumăr");});
test("fumează -> fumeaz", function() {deepEqual( Stem("fumează"), "fumeaz");});
test("fumegarea -> fumeg", function() {deepEqual( Stem("fumegarea"), "fumeg");});
test("fumegând -> fumeg", function() {deepEqual( Stem("fumegând"), "fumeg");});
test("fumez -> fumez", function() {deepEqual( Stem("fumez"), "fumez");});
test("fumezi -> fumez", function() {deepEqual( Stem("fumezi"), "fumez");});
test("fumurie -> fumur", function() {deepEqual( Stem("fumurie"), "fumur");});
test("funcţia -> funcţ", function() {deepEqual( Stem("funcţia"), "funcţ");});
test("funcţie -> funcţ", function() {deepEqual( Stem("funcţie"), "funcţ");});
test("funcţiile -> funcţ", function() {deepEqual( Stem("funcţiile"), "funcţ");});
test("funcţiona -> funcţion", function() {deepEqual( Stem("funcţiona"), "funcţion");});
test("funcţională -> funcţional", function() {deepEqual( Stem("funcţională"), "funcţional");});
test("funcţionale -> funcţional", function() {deepEqual( Stem("funcţionale"), "funcţional");});
test("funcţionar -> funcţionar", function() {deepEqual( Stem("funcţionar"), "funcţionar");});
test("funcţionare -> funcţion", function() {deepEqual( Stem("funcţionare"), "funcţion");});
test("funcţionari -> funcţionar", function() {deepEqual( Stem("funcţionari"), "funcţionar");});
test("funcţionează -> funcţion", function() {deepEqual( Stem("funcţionează"), "funcţion");});
test("funcţiune -> funcţiun", function() {deepEqual( Stem("funcţiune"), "funcţiun");});
test("funcţiunea -> funcţiun", function() {deepEqual( Stem("funcţiunea"), "funcţiun");});
test("funcţiunei -> funcţiune", function() {deepEqual( Stem("funcţiunei"), "funcţiune");});
test("funcţiuni -> funcţiun", function() {deepEqual( Stem("funcţiuni"), "funcţiun");});
test("funcţiunii -> funcţiun", function() {deepEqual( Stem("funcţiunii"), "funcţiun");});
test("funcţiunile -> funcţiun", function() {deepEqual( Stem("funcţiunile"), "funcţiun");});
test("funcţiunilor -> funcţiun", function() {deepEqual( Stem("funcţiunilor"), "funcţiun");});
test("fund -> fund", function() {deepEqual( Stem("fund"), "fund");});
test("funda -> fund", function() {deepEqual( Stem("funda"), "fund");});
test("fundament -> fundament", function() {deepEqual( Stem("fundament"), "fundament");});
test("fundamental -> fundamental", function() {deepEqual( Stem("fundamental"), "fundamental");});
test("fundamentală -> fundamental", function() {deepEqual( Stem("fundamentală"), "fundamental");});
test("fundamentale -> fundamental", function() {deepEqual( Stem("fundamentale"), "fundamental");});
test("fundamentarea -> fundament", function() {deepEqual( Stem("fundamentarea"), "fundament");});
test("fundamente -> fundament", function() {deepEqual( Stem("fundamente"), "fundament");});
test("fundamentele -> fundament", function() {deepEqual( Stem("fundamentele"), "fundament");});
test("fundamentez -> fundament", function() {deepEqual( Stem("fundamentez"), "fundament");});
test("fundamentul -> fundament", function() {deepEqual( Stem("fundamentul"), "fundament");});
test("fundare -> fund", function() {deepEqual( Stem("fundare"), "fund");});
test("fundarea -> fund", function() {deepEqual( Stem("fundarea"), "fund");});
test("fundat -> fundat", function() {deepEqual( Stem("fundat"), "fundat");});
test("fundată -> fundat", function() {deepEqual( Stem("fundată"), "fundat");});
test("fundate -> fundat", function() {deepEqual( Stem("fundate"), "fundat");});
test("fundatus -> fundatus", function() {deepEqual( Stem("fundatus"), "fundatus");});
test("fundaţia -> fund", function() {deepEqual( Stem("fundaţia"), "fund");});
test("fundaţii -> fund", function() {deepEqual( Stem("fundaţii"), "fund");});
test("fundăm -> fund", function() {deepEqual( Stem("fundăm"), "fund");});
test("fundările -> fundăr", function() {deepEqual( Stem("fundările"), "fundăr");});
test("fundătura -> fundătur", function() {deepEqual( Stem("fundătura"), "fundătur");});
test("fundătură -> fundăt", function() {deepEqual( Stem("fundătură"), "fundăt");});
test("fundează -> fund", function() {deepEqual( Stem("fundează"), "fund");});
test("fundez -> fund", function() {deepEqual( Stem("fundez"), "fund");});
test("fundeze -> fund", function() {deepEqual( Stem("fundeze"), "fund");});
test("fundmentale -> fundmental", function() {deepEqual( Stem("fundmentale"), "fundmental");});
test("fundul -> fund", function() {deepEqual( Stem("fundul"), "fund");});
test("funebre -> funebr", function() {deepEqual( Stem("funebre"), "funebr");});
test("funebru -> funebru", function() {deepEqual( Stem("funebru"), "funebru");});
test("funebrul -> funebr", function() {deepEqual( Stem("funebrul"), "funebr");});
test("funeralii -> funeral", function() {deepEqual( Stem("funeralii"), "funeral");});
test("funerar -> funerar", function() {deepEqual( Stem("funerar"), "funerar");});
test("funerară -> funer", function() {deepEqual( Stem("funerară"), "funer");});
test("funestă -> funest", function() {deepEqual( Stem("funestă"), "funest");});
test("funestul -> funest", function() {deepEqual( Stem("funestul"), "funest");});
test("funia -> funi", function() {deepEqual( Stem("funia"), "funi");});
test("funingine -> funingin", function() {deepEqual( Stem("funingine"), "funingin");});
test("funinginos -> funingin", function() {deepEqual( Stem("funinginos"), "funingin");});
test("fura -> fur", function() {deepEqual( Stem("fura"), "fur");});
test("furaj -> furaj", function() {deepEqual( Stem("furaj"), "furaj");});
test("furase -> furas", function() {deepEqual( Stem("furase"), "furas");});
test("furat -> furat", function() {deepEqual( Stem("furat"), "furat");});
test("furată -> furat", function() {deepEqual( Stem("furată"), "furat");});
test("furate -> furat", function() {deepEqual( Stem("furate"), "furat");});
test("furaţi -> fur", function() {deepEqual( Stem("furaţi"), "fur");});
test("furau -> furau", function() {deepEqual( Stem("furau"), "furau");});
test("fură -> fur", function() {deepEqual( Stem("fură"), "fur");});
test("furcă -> furc", function() {deepEqual( Stem("furcă"), "furc");});
test("furculiţa -> furculiţ", function() {deepEqual( Stem("furculiţa"), "furculiţ");});
test("furculiţă -> furculiţ", function() {deepEqual( Stem("furculiţă"), "furculiţ");});
test("furculiţe -> furculiţ", function() {deepEqual( Stem("furculiţe"), "furculiţ");});
test("fure -> fur", function() {deepEqual( Stem("fure"), "fur");});
test("furgoane -> furgoan", function() {deepEqual( Stem("furgoane"), "furgoan");});
test("furgoanele -> furgoan", function() {deepEqual( Stem("furgoanele"), "furgoan");});
test("furgon -> furgon", function() {deepEqual( Stem("furgon"), "furgon");});
test("furi -> fur", function() {deepEqual( Stem("furi"), "fur");});
test("furia -> furi", function() {deepEqual( Stem("furia"), "furi");});
test("furibund -> furibund", function() {deepEqual( Stem("furibund"), "furibund");});
test("furibundă -> furibund", function() {deepEqual( Stem("furibundă"), "furibund");});
test("furie -> fur", function() {deepEqual( Stem("furie"), "fur");});
test("furii -> fur", function() {deepEqual( Stem("furii"), "fur");});
test("furiile -> fur", function() {deepEqual( Stem("furiile"), "fur");});
test("furioasă -> furioas", function() {deepEqual( Stem("furioasă"), "furioas");});
test("furioase -> furioas", function() {deepEqual( Stem("furioase"), "furioas");});
test("furios -> furios", function() {deepEqual( Stem("furios"), "furios");});
test("furioşi -> furioş", function() {deepEqual( Stem("furioşi"), "furioş");});
test("furiş -> furiş", function() {deepEqual( Stem("furiş"), "furiş");});
test("furnicarului -> furnicar", function() {deepEqual( Stem("furnicarului"), "furnicar");});
test("furnizam -> furniz", function() {deepEqual( Stem("furnizam"), "furniz");});
test("furori -> furor", function() {deepEqual( Stem("furori"), "furor");});
test("furt -> furt", function() {deepEqual( Stem("furt"), "furt");});
test("furtunile -> furtun", function() {deepEqual( Stem("furtunile"), "furtun");});
test("furtunoase -> furtun", function() {deepEqual( Stem("furtunoase"), "furtun");});
test("fusese -> fus", function() {deepEqual( Stem("fusese"), "fus");});
test("fusesem -> fuses", function() {deepEqual( Stem("fusesem"), "fuses");});
test("fuseseră -> fus", function() {deepEqual( Stem("fuseseră"), "fus");});
test("fusille -> fusill", function() {deepEqual( Stem("fusille"), "fusill");});
test("futile -> fut", function() {deepEqual( Stem("futile"), "fut");});
test("futilitate -> futil", function() {deepEqual( Stem("futilitate"), "futil");});
test("fuzantă -> fuzant", function() {deepEqual( Stem("fuzantă"), "fuzant");});
test("fuzante -> fuzant", function() {deepEqual( Stem("fuzante"), "fuzant");});
test("g -> g", function() {deepEqual( Stem("g"), "g");});
test("gabaritul -> gabar", function() {deepEqual( Stem("gabaritul"), "gabar");});
test("gafă -> gaf", function() {deepEqual( Stem("gafă"), "gaf");});
test("galant -> galant", function() {deepEqual( Stem("galant"), "galant");});
test("galaţi -> gal", function() {deepEqual( Stem("galaţi"), "gal");});
test("galben -> galben", function() {deepEqual( Stem("galben"), "galben");});
test("galbenă -> galben", function() {deepEqual( Stem("galbenă"), "galben");});
test("galbene -> galben", function() {deepEqual( Stem("galbene"), "galben");});
test("galbeni -> galben", function() {deepEqual( Stem("galbeni"), "galben");});
test("galia -> gali", function() {deepEqual( Stem("galia"), "gali");});
test("galilei -> galile", function() {deepEqual( Stem("galilei"), "galile");});
test("galonul -> galon", function() {deepEqual( Stem("galonul"), "galon");});
test("galop -> galop", function() {deepEqual( Stem("galop"), "galop");});
test("galoşi -> galoş", function() {deepEqual( Stem("galoşi"), "galoş");});
test("gama -> gam", function() {deepEqual( Stem("gama"), "gam");});
test("gara -> gar", function() {deepEqual( Stem("gara"), "gar");});
test("garaj -> garaj", function() {deepEqual( Stem("garaj"), "garaj");});
test("garantat -> garant", function() {deepEqual( Stem("garantat"), "garant");});
test("garantate -> garant", function() {deepEqual( Stem("garantate"), "garant");});
test("garantează -> garant", function() {deepEqual( Stem("garantează"), "garant");});
test("garanţia -> garanţ", function() {deepEqual( Stem("garanţia"), "garanţ");});
test("garanţie -> garanţ", function() {deepEqual( Stem("garanţie"), "garanţ");});
test("garanţiile -> garanţ", function() {deepEqual( Stem("garanţiile"), "garanţ");});
test("gară -> gar", function() {deepEqual( Stem("gară"), "gar");});
test("gard -> gard", function() {deepEqual( Stem("gard"), "gard");});
test("gardă -> gard", function() {deepEqual( Stem("gardă"), "gard");});
test("gardienilor -> gardien", function() {deepEqual( Stem("gardienilor"), "gardien");});
test("gardişti -> gardişt", function() {deepEqual( Stem("gardişti"), "gardişt");});
test("gardul -> gard", function() {deepEqual( Stem("gardul"), "gard");});
test("garduri -> gardur", function() {deepEqual( Stem("garduri"), "gardur");});
test("gardurile -> gardur", function() {deepEqual( Stem("gardurile"), "gardur");});
test("garibaldi -> garibald", function() {deepEqual( Stem("garibaldi"), "garibald");});
test("garnizoana -> garnizoan", function() {deepEqual( Stem("garnizoana"), "garnizoan");});
test("garoafa -> garoaf", function() {deepEqual( Stem("garoafa"), "garoaf");});
test("garoafe -> garoaf", function() {deepEqual( Stem("garoafe"), "garoaf");});
test("garsonieră -> garsonier", function() {deepEqual( Stem("garsonieră"), "garsonier");});
test("gata -> gat", function() {deepEqual( Stem("gata"), "gat");});
test("gaura -> gaur", function() {deepEqual( Stem("gaura"), "gaur");});
test("gaură -> gaur", function() {deepEqual( Stem("gaură"), "gaur");});
test("gauss -> gauss", function() {deepEqual( Stem("gauss"), "gauss");});
test("gaz -> gaz", function() {deepEqual( Stem("gaz"), "gaz");});
test("gazda -> gazd", function() {deepEqual( Stem("gazda"), "gazd");});
test("gazdele -> gazd", function() {deepEqual( Stem("gazdele"), "gazd");});
test("gazelor -> gaz", function() {deepEqual( Stem("gazelor"), "gaz");});
test("gazeta -> gazet", function() {deepEqual( Stem("gazeta"), "gazet");});
test("gazetar -> gazetar", function() {deepEqual( Stem("gazetar"), "gazetar");});
test("gazetă -> gazet", function() {deepEqual( Stem("gazetă"), "gazet");});
test("gazetărea -> gazetăr", function() {deepEqual( Stem("gazetărea"), "gazetăr");});
test("gazete -> gazet", function() {deepEqual( Stem("gazete"), "gazet");});
test("gazetele -> gazet", function() {deepEqual( Stem("gazetele"), "gazet");});
test("gazetelor -> gazet", function() {deepEqual( Stem("gazetelor"), "gazet");});
test("gazoasă -> gazoas", function() {deepEqual( Stem("gazoasă"), "gazoas");});
test("gâdilată -> gâdil", function() {deepEqual( Stem("gâdilată"), "gâdil");});
test("gâdilătură -> gâdilăt", function() {deepEqual( Stem("gâdilătură"), "gâdilăt");});
test("gâfâi -> gâfâ", function() {deepEqual( Stem("gâfâi"), "gâfâ");});
test("gâfâie -> gâfâi", function() {deepEqual( Stem("gâfâie"), "gâfâi");});
test("gâfâind -> gâfâind", function() {deepEqual( Stem("gâfâind"), "gâfâind");});
test("gâlgâie -> gâlgâi", function() {deepEqual( Stem("gâlgâie"), "gâlgâi");});
test("gâlgâind -> gâlgâind", function() {deepEqual( Stem("gâlgâind"), "gâlgâind");});
test("gând -> gând", function() {deepEqual( Stem("gând"), "gând");});
test("gândac -> gândac", function() {deepEqual( Stem("gândac"), "gândac");});
test("gândaci -> gândac", function() {deepEqual( Stem("gândaci"), "gândac");});
test("gândacii -> gândac", function() {deepEqual( Stem("gândacii"), "gândac");});
test("gândeai -> gând", function() {deepEqual( Stem("gândeai"), "gând");});
test("gândeam -> gând", function() {deepEqual( Stem("gândeam"), "gând");});
test("gândească -> gând", function() {deepEqual( Stem("gândească"), "gând");});
test("gândeau -> gând", function() {deepEqual( Stem("gândeau"), "gând");});
test("gândesc -> gând", function() {deepEqual( Stem("gândesc"), "gând");});
test("gândeşte -> gând", function() {deepEqual( Stem("gândeşte"), "gând");});
test("gândeşti -> gând", function() {deepEqual( Stem("gândeşti"), "gând");});
test("gândi -> gând", function() {deepEqual( Stem("gândi"), "gând");});
test("gândim -> gând", function() {deepEqual( Stem("gândim"), "gând");});
test("gândind -> gând", function() {deepEqual( Stem("gândind"), "gând");});
test("gândindu -> gând", function() {deepEqual( Stem("gândindu"), "gând");});
test("gândire -> gând", function() {deepEqual( Stem("gândire"), "gând");});
test("gândirea -> gând", function() {deepEqual( Stem("gândirea"), "gând");});
test("gândiri -> gândir", function() {deepEqual( Stem("gândiri"), "gândir");});
test("gândirii -> gândir", function() {deepEqual( Stem("gândirii"), "gândir");});
test("gândisem -> gând", function() {deepEqual( Stem("gândisem"), "gând");});
test("gândiseră -> gând", function() {deepEqual( Stem("gândiseră"), "gând");});
test("gândit -> gândit", function() {deepEqual( Stem("gândit"), "gândit");});
test("gânditoare -> gândit", function() {deepEqual( Stem("gânditoare"), "gândit");});
test("gânditor -> gândit", function() {deepEqual( Stem("gânditor"), "gândit");});
test("gânditori -> gândit", function() {deepEqual( Stem("gânditori"), "gândit");});
test("gânditorii -> gândit", function() {deepEqual( Stem("gânditorii"), "gândit");});
test("gânditorilor -> gândit", function() {deepEqual( Stem("gânditorilor"), "gândit");});
test("gândiţi -> gând", function() {deepEqual( Stem("gândiţi"), "gând");});
test("gândul -> gând", function() {deepEqual( Stem("gândul"), "gând");});
test("gândului -> gând", function() {deepEqual( Stem("gândului"), "gând");});
test("gânduri -> gândur", function() {deepEqual( Stem("gânduri"), "gândur");});
test("gândurile -> gândur", function() {deepEqual( Stem("gândurile"), "gândur");});
test("gândurilor -> gândur", function() {deepEqual( Stem("gândurilor"), "gândur");});
test("gângănii -> gângăn", function() {deepEqual( Stem("gângănii"), "gângăn");});
test("gângăvit -> gângăv", function() {deepEqual( Stem("gângăvit"), "gângăv");});
test("gângurea -> gângur", function() {deepEqual( Stem("gângurea"), "gângur");});
test("gâsca -> gâsc", function() {deepEqual( Stem("gâsca"), "gâsc");});
test("gâşte -> gâşt", function() {deepEqual( Stem("gâşte"), "gâşt");});
test("gâştele -> gâşt", function() {deepEqual( Stem("gâştele"), "gâşt");});
test("gât -> gât", function() {deepEqual( Stem("gât"), "gât");});
test("gâtlejul -> gâtlej", function() {deepEqual( Stem("gâtlejul"), "gâtlej");});
test("gâtroşi -> gâtroş", function() {deepEqual( Stem("gâtroşi"), "gâtroş");});
test("gâtuia -> gâtui", function() {deepEqual( Stem("gâtuia"), "gâtui");});
test("gâtuit -> gâtuit", function() {deepEqual( Stem("gâtuit"), "gâtuit");});
test("gâtuite -> gâtuit", function() {deepEqual( Stem("gâtuite"), "gâtuit");});
test("gâtul -> gât", function() {deepEqual( Stem("gâtul"), "gât");});
test("gâtului -> gât", function() {deepEqual( Stem("gâtului"), "gât");});
test("găini -> găin", function() {deepEqual( Stem("găini"), "găin");});
test("gălăgia -> gălăg", function() {deepEqual( Stem("gălăgia"), "gălăg");});
test("gălăgie -> gălăg", function() {deepEqual( Stem("gălăgie"), "gălăg");});
test("gălăgios -> gălăg", function() {deepEqual( Stem("gălăgios"), "gălăg");});
test("gălbenii -> gălben", function() {deepEqual( Stem("gălbenii"), "gălben");});
test("gălbui -> gălb", function() {deepEqual( Stem("gălbui"), "gălb");});
test("gălbuie -> gălbui", function() {deepEqual( Stem("gălbuie"), "gălbui");});
test("găleţi -> găl", function() {deepEqual( Stem("găleţi"), "găl");});
test("gări -> găr", function() {deepEqual( Stem("gări"), "găr");});
test("gării -> găr", function() {deepEqual( Stem("gării"), "găr");});
test("gărilor -> găr", function() {deepEqual( Stem("gărilor"), "găr");});
test("gărlici -> gărlic", function() {deepEqual( Stem("gărlici"), "gărlic");});
test("găsea -> găs", function() {deepEqual( Stem("găsea"), "găs");});
test("găseam -> găseam", function() {deepEqual( Stem("găseam"), "găseam");});
test("găsească -> găseasc", function() {deepEqual( Stem("găsească"), "găseasc");});
test("găseau -> găseau", function() {deepEqual( Stem("găseau"), "găseau");});
test("găsesc -> găsesc", function() {deepEqual( Stem("găsesc"), "găsesc");});
test("găseşte -> găseşt", function() {deepEqual( Stem("găseşte"), "găseşt");});
test("găseşti -> găseşt", function() {deepEqual( Stem("găseşti"), "găseşt");});
test("găsi -> găs", function() {deepEqual( Stem("găsi"), "găs");});
test("găsim -> găs", function() {deepEqual( Stem("găsim"), "găs");});
test("găsind -> găsind", function() {deepEqual( Stem("găsind"), "găsind");});
test("găsindu -> găsindu", function() {deepEqual( Stem("găsindu"), "găsindu");});
test("găsirea -> găsir", function() {deepEqual( Stem("găsirea"), "găsir");});
test("găsirii -> găsir", function() {deepEqual( Stem("găsirii"), "găsir");});
test("găsisem -> găsisem", function() {deepEqual( Stem("găsisem"), "găsisem");});
test("găsit -> găsit", function() {deepEqual( Stem("găsit"), "găsit");});
test("găsiţi -> găs", function() {deepEqual( Stem("găsiţi"), "găs");});
test("găteală -> găteal", function() {deepEqual( Stem("găteală"), "găteal");});
test("găteşte -> găteşt", function() {deepEqual( Stem("găteşte"), "găteşt");});
test("găti -> găt", function() {deepEqual( Stem("găti"), "găt");});
test("gătit -> gătit", function() {deepEqual( Stem("gătit"), "gătit");});
test("gătită -> gătit", function() {deepEqual( Stem("gătită"), "gătit");});
test("gătite -> gătit", function() {deepEqual( Stem("gătite"), "gătit");});
test("găuriţi -> găur", function() {deepEqual( Stem("găuriţi"), "găur");});
test("găvănescul -> găvăn", function() {deepEqual( Stem("găvănescul"), "găvăn");});
test("geam -> geam", function() {deepEqual( Stem("geam"), "geam");});
test("geamul -> geam", function() {deepEqual( Stem("geamul"), "geam");});
test("geamuri -> geamur", function() {deepEqual( Stem("geamuri"), "geamur");});
test("geamurile -> geamur", function() {deepEqual( Stem("geamurile"), "geamur");});
test("geloasă -> geloas", function() {deepEqual( Stem("geloasă"), "geloas");});
test("gelos -> gelos", function() {deepEqual( Stem("gelos"), "gelos");});
test("gem -> gem", function() {deepEqual( Stem("gem"), "gem");});
test("geme -> gem", function() {deepEqual( Stem("geme"), "gem");});
test("gemeni -> gemen", function() {deepEqual( Stem("gemeni"), "gemen");});
test("gemute -> gemut", function() {deepEqual( Stem("gemute"), "gemut");});
test("gen -> gen", function() {deepEqual( Stem("gen"), "gen");});
test("genele -> gen", function() {deepEqual( Stem("genele"), "gen");});
test("general -> general", function() {deepEqual( Stem("general"), "general");});
test("generală -> general", function() {deepEqual( Stem("generală"), "general");});
test("generale -> general", function() {deepEqual( Stem("generale"), "general");});
test("generali -> general", function() {deepEqual( Stem("generali"), "general");});
test("generalii -> general", function() {deepEqual( Stem("generalii"), "general");});
test("generalitate -> general", function() {deepEqual( Stem("generalitate"), "general");});
test("generalitatea -> general", function() {deepEqual( Stem("generalitatea"), "general");});
test("generalizam -> generaliz", function() {deepEqual( Stem("generalizam"), "generaliz");});
test("generalizare -> generaliz", function() {deepEqual( Stem("generalizare"), "generaliz");});
test("generalizarea -> generaliz", function() {deepEqual( Stem("generalizarea"), "generaliz");});
test("generalizată -> generaliz", function() {deepEqual( Stem("generalizată"), "generaliz");});
test("generalizăm -> generaliz", function() {deepEqual( Stem("generalizăm"), "generaliz");});
test("generalizării -> generalizăr", function() {deepEqual( Stem("generalizării"), "generalizăr");});
test("generalizez -> generaliz", function() {deepEqual( Stem("generalizez"), "generaliz");});
test("generalizezi -> generaliz", function() {deepEqual( Stem("generalizezi"), "generaliz");});
test("generalul -> general", function() {deepEqual( Stem("generalul"), "general");});
test("generalului -> general", function() {deepEqual( Stem("generalului"), "general");});
test("generaţiile -> gener", function() {deepEqual( Stem("generaţiile"), "gener");});
test("genere -> gener", function() {deepEqual( Stem("genere"), "gener");});
test("generic -> gener", function() {deepEqual( Stem("generic"), "gener");});
test("generoasă -> gener", function() {deepEqual( Stem("generoasă"), "gener");});
test("generos -> gener", function() {deepEqual( Stem("generos"), "gener");});
test("generoşi -> gener", function() {deepEqual( Stem("generoşi"), "gener");});
test("generozitate -> generoz", function() {deepEqual( Stem("generozitate"), "generoz");});
test("generozitatea -> generoz", function() {deepEqual( Stem("generozitatea"), "generoz");});
test("genială -> genial", function() {deepEqual( Stem("genială"), "genial");});
test("genii -> gen", function() {deepEqual( Stem("genii"), "gen");});
test("geniile -> gen", function() {deepEqual( Stem("geniile"), "gen");});
test("geniilor -> gen", function() {deepEqual( Stem("geniilor"), "gen");});
test("geniu -> geniu", function() {deepEqual( Stem("geniu"), "geniu");});
test("gentilă -> gentil", function() {deepEqual( Stem("gentilă"), "gentil");});
test("genul -> gen", function() {deepEqual( Stem("genul"), "gen");});
test("genunchi -> genunch", function() {deepEqual( Stem("genunchi"), "genunch");});
test("genunchii -> genunch", function() {deepEqual( Stem("genunchii"), "genunch");});
test("genunchilor -> genunch", function() {deepEqual( Stem("genunchilor"), "genunch");});
test("genunchiului -> genunch", function() {deepEqual( Stem("genunchiului"), "genunch");});
test("genuri -> genur", function() {deepEqual( Stem("genuri"), "genur");});
test("geografică -> geograf", function() {deepEqual( Stem("geografică"), "geograf");});
test("geografie -> geograf", function() {deepEqual( Stem("geografie"), "geograf");});
test("geologie -> geolog", function() {deepEqual( Stem("geologie"), "geolog");});
test("geometria -> geometr", function() {deepEqual( Stem("geometria"), "geometr");});
test("geometric -> geometr", function() {deepEqual( Stem("geometric"), "geometr");});
test("geometrică -> geometr", function() {deepEqual( Stem("geometrică"), "geometr");});
test("geometrice -> geometr", function() {deepEqual( Stem("geometrice"), "geometr");});
test("geometrie -> geometr", function() {deepEqual( Stem("geometrie"), "geometr");});
test("geometriei -> geometr", function() {deepEqual( Stem("geometriei"), "geometr");});
test("geometrii -> geometr", function() {deepEqual( Stem("geometrii"), "geometr");});
test("geometriile -> geometr", function() {deepEqual( Stem("geometriile"), "geometr");});
test("geometru -> geometru", function() {deepEqual( Stem("geometru"), "geometru");});
test("georg -> georg", function() {deepEqual( Stem("georg"), "georg");});
test("georgescu -> georgescu", function() {deepEqual( Stem("georgescu"), "georgescu");});
test("gerlach -> gerlach", function() {deepEqual( Stem("gerlach"), "gerlach");});
test("german -> german", function() {deepEqual( Stem("german"), "german");});
test("germană -> german", function() {deepEqual( Stem("germană"), "german");});
test("germane -> german", function() {deepEqual( Stem("germane"), "german");});
test("germani -> german", function() {deepEqual( Stem("germani"), "german");});
test("germania -> german", function() {deepEqual( Stem("germania"), "german");});
test("germanice -> german", function() {deepEqual( Stem("germanice"), "german");});
test("germanii -> german", function() {deepEqual( Stem("germanii"), "german");});
test("germanilor -> german", function() {deepEqual( Stem("germanilor"), "german");});
test("germanul -> german", function() {deepEqual( Stem("germanul"), "german");});
test("germen -> germen", function() {deepEqual( Stem("germen"), "germen");});
test("germenii -> germen", function() {deepEqual( Stem("germenii"), "germen");});
test("gest -> gest", function() {deepEqual( Stem("gest"), "gest");});
test("gesticulează -> gesticul", function() {deepEqual( Stem("gesticulează"), "gesticul");});
test("gestul -> gest", function() {deepEqual( Stem("gestul"), "gest");});
test("gestului -> gest", function() {deepEqual( Stem("gestului"), "gest");});
test("gesturi -> gestur", function() {deepEqual( Stem("gesturi"), "gestur");});
test("gesturile -> gestur", function() {deepEqual( Stem("gesturile"), "gestur");});
test("gesturilor -> gestur", function() {deepEqual( Stem("gesturilor"), "gestur");});
test("gheara -> ghear", function() {deepEqual( Stem("gheara"), "ghear");});
test("gheară -> ghear", function() {deepEqual( Stem("gheară"), "ghear");});
test("gheare -> ghear", function() {deepEqual( Stem("gheare"), "ghear");});
test("ghearele -> ghear", function() {deepEqual( Stem("ghearele"), "ghear");});
test("gheaţa -> gheaţ", function() {deepEqual( Stem("gheaţa"), "gheaţ");});
test("gheaţă -> gheaţ", function() {deepEqual( Stem("gheaţă"), "gheaţ");});
test("ghemuită -> ghemuit", function() {deepEqual( Stem("ghemuită"), "ghemuit");});
test("ghemuiţi -> ghemu", function() {deepEqual( Stem("ghemuiţi"), "ghemu");});
test("gheorghe -> gheorgh", function() {deepEqual( Stem("gheorghe"), "gheorgh");});
test("gheorghidiu -> gheorghidiu", function() {deepEqual( Stem("gheorghidiu"), "gheorghidiu");});
test("gheorghidiule -> gheorghidiul", function() {deepEqual( Stem("gheorghidiule"), "gheorghidiul");});
test("ghete -> ghet", function() {deepEqual( Stem("ghete"), "ghet");});
test("ghetele -> ghet", function() {deepEqual( Stem("ghetele"), "ghet");});
test("gheţari -> gheţar", function() {deepEqual( Stem("gheţari"), "gheţar");});
test("gheţarului -> gheţar", function() {deepEqual( Stem("gheţarului"), "gheţar");});
test("gheţei -> gheţe", function() {deepEqual( Stem("gheţei"), "gheţe");});
test("ghiceam -> ghic", function() {deepEqual( Stem("ghiceam"), "ghic");});
test("ghicească -> ghic", function() {deepEqual( Stem("ghicească"), "ghic");});
test("ghicesc -> ghic", function() {deepEqual( Stem("ghicesc"), "ghic");});
test("ghici -> ghic", function() {deepEqual( Stem("ghici"), "ghic");});
test("ghicind -> ghic", function() {deepEqual( Stem("ghicind"), "ghic");});
test("ghicit -> ghicit", function() {deepEqual( Stem("ghicit"), "ghicit");});
test("ghicită -> ghicit", function() {deepEqual( Stem("ghicită"), "ghicit");});
test("ghicitoare -> ghicit", function() {deepEqual( Stem("ghicitoare"), "ghicit");});
test("ghicitor -> ghicit", function() {deepEqual( Stem("ghicitor"), "ghicit");});
test("ghicitori -> ghicit", function() {deepEqual( Stem("ghicitori"), "ghicit");});
test("ghicitul -> ghicit", function() {deepEqual( Stem("ghicitul"), "ghicit");});
test("ghiciţi -> ghic", function() {deepEqual( Stem("ghiciţi"), "ghic");});
test("ghid -> ghid", function() {deepEqual( Stem("ghid"), "ghid");});
test("ghidarea -> ghid", function() {deepEqual( Stem("ghidarea"), "ghid");});
test("ghidată -> ghidat", function() {deepEqual( Stem("ghidată"), "ghidat");});
test("ghidaţi -> ghid", function() {deepEqual( Stem("ghidaţi"), "ghid");});
test("ghidează -> ghid", function() {deepEqual( Stem("ghidează"), "ghid");});
test("ghidona -> ghidon", function() {deepEqual( Stem("ghidona"), "ghidon");});
test("ghiduri -> ghidur", function() {deepEqual( Stem("ghiduri"), "ghidur");});
test("ghidurile -> ghidur", function() {deepEqual( Stem("ghidurile"), "ghidur");});
test("ghiduşe -> ghiduş", function() {deepEqual( Stem("ghiduşe"), "ghiduş");});
test("ghiftui -> ghift", function() {deepEqual( Stem("ghiftui"), "ghift");});
test("ghilimele -> ghilim", function() {deepEqual( Stem("ghilimele"), "ghilim");});
test("ghilotină -> ghilotin", function() {deepEqual( Stem("ghilotină"), "ghilotin");});
test("ghimbavul -> ghimbav", function() {deepEqual( Stem("ghimbavul"), "ghimbav");});
test("ghimpe -> ghimp", function() {deepEqual( Stem("ghimpe"), "ghimp");});
test("ghinioane -> ghinioan", function() {deepEqual( Stem("ghinioane"), "ghinioan");});
test("ghinion -> ghinion", function() {deepEqual( Stem("ghinion"), "ghinion");});
test("ghinionul -> ghinion", function() {deepEqual( Stem("ghinionul"), "ghinion");});
test("ghiontuieli -> ghiontuiel", function() {deepEqual( Stem("ghiontuieli"), "ghiontuiel");});
test("ghiontuiesc -> ghiontui", function() {deepEqual( Stem("ghiontuiesc"), "ghiontui");});
test("ghiotura -> ghiotur", function() {deepEqual( Stem("ghiotura"), "ghiotur");});
test("ghiozdan -> ghiozdan", function() {deepEqual( Stem("ghiozdan"), "ghiozdan");});
test("ghips -> ghips", function() {deepEqual( Stem("ghips"), "ghips");});
test("ghişeelor -> ghişe", function() {deepEqual( Stem("ghişeelor"), "ghişe");});
test("ghişeu -> ghişeu", function() {deepEqual( Stem("ghişeu"), "ghişeu");});
test("ghişeuri -> ghişeur", function() {deepEqual( Stem("ghişeuri"), "ghişeur");});
test("ghiţă -> ghiţ", function() {deepEqual( Stem("ghiţă"), "ghiţ");});
test("ghiulele -> ghiul", function() {deepEqual( Stem("ghiulele"), "ghiul");});
test("ghiveci -> ghivec", function() {deepEqual( Stem("ghiveci"), "ghivec");});
test("ghiveciul -> ghivec", function() {deepEqual( Stem("ghiveciul"), "ghivec");});
test("gide -> gid", function() {deepEqual( Stem("gide"), "gid");});
test("gingaş -> gingaş", function() {deepEqual( Stem("gingaş"), "gingaş");});
test("gingaşe -> gingaş", function() {deepEqual( Stem("gingaşe"), "gingaş");});
test("gingăşia -> gingăş", function() {deepEqual( Stem("gingăşia"), "gingăş");});
test("gingăşii -> gingăş", function() {deepEqual( Stem("gingăşii"), "gingăş");});
test("giordano -> giordano", function() {deepEqual( Stem("giordano"), "giordano");});
test("giovanni -> giovann", function() {deepEqual( Stem("giovanni"), "giovann");});
test("gira -> gir", function() {deepEqual( Stem("gira"), "gir");});
test("giulgiu -> giulgiu", function() {deepEqual( Stem("giulgiu"), "giulgiu");});
test("giumbuşlucuri -> giumbuşlucur", function() {deepEqual( Stem("giumbuşlucuri"), "giumbuşlucur");});
test("giurgiu -> giurgiu", function() {deepEqual( Stem("giurgiu"), "giurgiu");});
test("giuvala -> giuval", function() {deepEqual( Stem("giuvala"), "giuval");});
test("gîdila -> gîdil", function() {deepEqual( Stem("gîdila"), "gîdil");});
test("gîtuituri -> gîtuitur", function() {deepEqual( Stem("gîtuituri"), "gîtuitur");});
test("gîze -> gîz", function() {deepEqual( Stem("gîze"), "gîz");});
test("glacială -> glacial", function() {deepEqual( Stem("glacială"), "glacial");});
test("glaciară -> glaciar", function() {deepEqual( Stem("glaciară"), "glaciar");});
test("gladiatori -> gladiat", function() {deepEqual( Stem("gladiatori"), "gladiat");});
test("glandelor -> gland", function() {deepEqual( Stem("glandelor"), "gland");});
test("glas -> glas", function() {deepEqual( Stem("glas"), "glas");});
test("glasul -> glas", function() {deepEqual( Stem("glasul"), "glas");});
test("glasuri -> glasur", function() {deepEqual( Stem("glasuri"), "glasur");});
test("glazură -> glaz", function() {deepEqual( Stem("glazură"), "glaz");});
test("glăsuind -> glăsu", function() {deepEqual( Stem("glăsuind"), "glăsu");});
test("glăsuire -> glăsu", function() {deepEqual( Stem("glăsuire"), "glăsu");});
test("glezne -> glezn", function() {deepEqual( Stem("glezne"), "glezn");});
test("glia -> gli", function() {deepEqual( Stem("glia"), "gli");});
test("glicine -> glicin", function() {deepEqual( Stem("glicine"), "glicin");});
test("gligore -> gligor", function() {deepEqual( Stem("gligore"), "gligor");});
test("glisantă -> glisant", function() {deepEqual( Stem("glisantă"), "glisant");});
test("glisante -> glisant", function() {deepEqual( Stem("glisante"), "glisant");});
test("glisare -> glis", function() {deepEqual( Stem("glisare"), "glis");});
test("glisat -> glisat", function() {deepEqual( Stem("glisat"), "glisat");});
test("glissando -> glissando", function() {deepEqual( Stem("glissando"), "glissando");});
test("gloabă -> gloab", function() {deepEqual( Stem("gloabă"), "gloab");});
test("gloabele -> gloab", function() {deepEqual( Stem("gloabele"), "gloab");});
test("gloanţe -> gloanţ", function() {deepEqual( Stem("gloanţe"), "gloanţ");});
test("gloanţele -> gloanţ", function() {deepEqual( Stem("gloanţele"), "gloanţ");});
test("gloanţelor -> gloanţ", function() {deepEqual( Stem("gloanţelor"), "gloanţ");});
test("gloata -> gloat", function() {deepEqual( Stem("gloata"), "gloat");});
test("gloată -> gloat", function() {deepEqual( Stem("gloată"), "gloat");});
test("glob -> glob", function() {deepEqual( Stem("glob"), "glob");});
test("global -> global", function() {deepEqual( Stem("global"), "global");});
test("globală -> global", function() {deepEqual( Stem("globală"), "global");});
test("globale -> global", function() {deepEqual( Stem("globale"), "global");});
test("globali -> global", function() {deepEqual( Stem("globali"), "global");});
test("globalizarea -> globaliz", function() {deepEqual( Stem("globalizarea"), "globaliz");});
test("globule -> globul", function() {deepEqual( Stem("globule"), "globul");});
test("glomerulă -> glomerul", function() {deepEqual( Stem("glomerulă"), "glomerul");});
test("glonte -> glont", function() {deepEqual( Stem("glonte"), "glont");});
test("glonţ -> glonţ", function() {deepEqual( Stem("glonţ"), "glonţ");});
test("glonţul -> glonţ", function() {deepEqual( Stem("glonţul"), "glonţ");});
test("gloria -> glor", function() {deepEqual( Stem("gloria"), "glor");});
test("glorie -> glor", function() {deepEqual( Stem("glorie"), "glor");});
test("gloriei -> glor", function() {deepEqual( Stem("gloriei"), "glor");});
test("glorifică -> glorif", function() {deepEqual( Stem("glorifică"), "glorif");});
test("glorioasă -> glorioas", function() {deepEqual( Stem("glorioasă"), "glorioas");});
test("glorioase -> glorioas", function() {deepEqual( Stem("glorioase"), "glorioas");});
test("glucozei -> glucoze", function() {deepEqual( Stem("glucozei"), "glucoze");});
test("gluma -> glum", function() {deepEqual( Stem("gluma"), "glum");});
test("glumă -> glum", function() {deepEqual( Stem("glumă"), "glum");});
test("glume -> glum", function() {deepEqual( Stem("glume"), "glum");});
test("glumea -> glum", function() {deepEqual( Stem("glumea"), "glum");});
test("glumeam -> glum", function() {deepEqual( Stem("glumeam"), "glum");});
test("glumească -> glum", function() {deepEqual( Stem("glumească"), "glum");});
test("glumeaţă -> glumeaţ", function() {deepEqual( Stem("glumeaţă"), "glumeaţ");});
test("glumesc -> glum", function() {deepEqual( Stem("glumesc"), "glum");});
test("glumeşte -> glum", function() {deepEqual( Stem("glumeşte"), "glum");});
test("glumeşti -> glum", function() {deepEqual( Stem("glumeşti"), "glum");});
test("glumi -> glum", function() {deepEqual( Stem("glumi"), "glum");});
test("glumim -> glum", function() {deepEqual( Stem("glumim"), "glum");});
test("glumind -> glum", function() {deepEqual( Stem("glumind"), "glum");});
test("gneoseologic -> gneoseolog", function() {deepEqual( Stem("gneoseologic"), "gneoseolog");});
test("gnoseologia -> gnoseolog", function() {deepEqual( Stem("gnoseologia"), "gnoseolog");});
test("gnoseologic -> gnoseolog", function() {deepEqual( Stem("gnoseologic"), "gnoseolog");});
test("gnoseologică -> gnoseolog", function() {deepEqual( Stem("gnoseologică"), "gnoseolog");});
test("gnoseologie -> gnoseolog", function() {deepEqual( Stem("gnoseologie"), "gnoseolog");});
test("gnoseologische -> gnoseologisch", function() {deepEqual( Stem("gnoseologische"), "gnoseologisch");});
test("goală -> goal", function() {deepEqual( Stem("goală"), "goal");});
test("goale -> goal", function() {deepEqual( Stem("goale"), "goal");});
test("goana -> goan", function() {deepEqual( Stem("goana"), "goan");});
test("goană -> goan", function() {deepEqual( Stem("goană"), "goan");});
test("goanei -> goane", function() {deepEqual( Stem("goanei"), "goane");});
test("goethe -> goeth", function() {deepEqual( Stem("goethe"), "goeth");});
test("gogoşi -> gogoş", function() {deepEqual( Stem("gogoşi"), "gogoş");});
test("goi -> goi", function() {deepEqual( Stem("goi"), "goi");});
test("gol -> gol", function() {deepEqual( Stem("gol"), "gol");});
test("goleşti -> goleşt", function() {deepEqual( Stem("goleşti"), "goleşt");});
test("goliciunea -> goliciun", function() {deepEqual( Stem("goliciunea"), "goliciun");});
test("golit -> golit", function() {deepEqual( Stem("golit"), "golit");});
test("golul -> gol", function() {deepEqual( Stem("golul"), "gol");});
test("goluri -> golur", function() {deepEqual( Stem("goluri"), "golur");});
test("golurile -> golur", function() {deepEqual( Stem("golurile"), "golur");});
test("gonea -> gon", function() {deepEqual( Stem("gonea"), "gon");});
test("goneam -> goneam", function() {deepEqual( Stem("goneam"), "goneam");});
test("gonesc -> gonesc", function() {deepEqual( Stem("gonesc"), "gonesc");});
test("goneşti -> goneşt", function() {deepEqual( Stem("goneşti"), "goneşt");});
test("gore -> gor", function() {deepEqual( Stem("gore"), "gor");});
test("gospodărească -> gospodăr", function() {deepEqual( Stem("gospodărească"), "gospodăr");});
test("gospodăreşti -> gospodăr", function() {deepEqual( Stem("gospodăreşti"), "gospodăr");});
test("gospodărie -> gospodăr", function() {deepEqual( Stem("gospodărie"), "gospodăr");});
test("gotic -> gotic", function() {deepEqual( Stem("gotic"), "gotic");});
test("gotthard -> gotthard", function() {deepEqual( Stem("gotthard"), "gotthard");});
test("graba -> grab", function() {deepEqual( Stem("graba"), "grab");});
test("grabă -> grab", function() {deepEqual( Stem("grabă"), "grab");});
test("grabnic -> grabnic", function() {deepEqual( Stem("grabnic"), "grabnic");});
test("grabnică -> grabnic", function() {deepEqual( Stem("grabnică"), "grabnic");});
test("grad -> grad", function() {deepEqual( Stem("grad"), "grad");});
test("gradat -> gradat", function() {deepEqual( Stem("gradat"), "gradat");});
test("gradaţi -> grad", function() {deepEqual( Stem("gradaţi"), "grad");});
test("grade -> grad", function() {deepEqual( Stem("grade"), "grad");});
test("gradele -> grad", function() {deepEqual( Stem("gradele"), "grad");});
test("gradul -> grad", function() {deepEqual( Stem("gradul"), "grad");});
test("grafic -> grafic", function() {deepEqual( Stem("grafic"), "grafic");});
test("graiului -> grai", function() {deepEqual( Stem("graiului"), "grai");});
test("grajd -> grajd", function() {deepEqual( Stem("grajd"), "grajd");});
test("grajdul -> grajd", function() {deepEqual( Stem("grajdul"), "grajd");});
test("grajduri -> grajdur", function() {deepEqual( Stem("grajduri"), "grajdur");});
test("grajdurile -> grajdur", function() {deepEqual( Stem("grajdurile"), "grajdur");});
test("granatele -> granat", function() {deepEqual( Stem("granatele"), "granat");});
test("grandioase -> grandioas", function() {deepEqual( Stem("grandioase"), "grandioas");});
test("graniţa -> graniţ", function() {deepEqual( Stem("graniţa"), "graniţ");});
test("graniţă -> graniţ", function() {deepEqual( Stem("graniţă"), "graniţ");});
test("graniţe -> graniţ", function() {deepEqual( Stem("graniţe"), "graniţ");});
test("graniţei -> graniţe", function() {deepEqual( Stem("graniţei"), "graniţe");});
test("graniţelor -> graniţ", function() {deepEqual( Stem("graniţelor"), "graniţ");});
test("gras -> gras", function() {deepEqual( Stem("gras"), "gras");});
test("grasă -> gras", function() {deepEqual( Stem("grasă"), "gras");});
test("grase -> gra", function() {deepEqual( Stem("grase"), "gra");});
test("gratificat -> gratific", function() {deepEqual( Stem("gratificat"), "gratific");});
test("gratificaţie -> gratific", function() {deepEqual( Stem("gratificaţie"), "gratific");});
test("gratis -> gratis", function() {deepEqual( Stem("gratis"), "gratis");});
test("gratuit -> gratuit", function() {deepEqual( Stem("gratuit"), "gratuit");});
test("gratuitate -> gratuitat", function() {deepEqual( Stem("gratuitate"), "gratuitat");});
test("gratuită -> gratuit", function() {deepEqual( Stem("gratuită"), "gratuit");});
test("gratuităţii -> gratuităţ", function() {deepEqual( Stem("gratuităţii"), "gratuităţ");});
test("gratuităţilor -> gratuităţ", function() {deepEqual( Stem("gratuităţilor"), "gratuităţ");});
test("gratulat -> gratul", function() {deepEqual( Stem("gratulat"), "gratul");});
test("gratulaţi -> gratul", function() {deepEqual( Stem("gratulaţi"), "gratul");});
test("graţia -> graţ", function() {deepEqual( Stem("graţia"), "graţ");});
test("graţiaţi -> graţ", function() {deepEqual( Stem("graţiaţi"), "graţ");});
test("graţie -> graţ", function() {deepEqual( Stem("graţie"), "graţ");});
test("graţiere -> graţier", function() {deepEqual( Stem("graţiere"), "graţier");});
test("graţii -> graţ", function() {deepEqual( Stem("graţii"), "graţ");});
test("graţioasă -> graţioas", function() {deepEqual( Stem("graţioasă"), "graţioas");});
test("graţioase -> graţioas", function() {deepEqual( Stem("graţioase"), "graţioas");});
test("graţioaselor -> graţioas", function() {deepEqual( Stem("graţioaselor"), "graţioas");});
test("graţios -> graţios", function() {deepEqual( Stem("graţios"), "graţios");});
test("graţiosului -> graţios", function() {deepEqual( Stem("graţiosului"), "graţios");});
test("graunţă -> graunţ", function() {deepEqual( Stem("graunţă"), "graunţ");});
test("grav -> grav", function() {deepEqual( Stem("grav"), "grav");});
test("grava -> grav", function() {deepEqual( Stem("grava"), "grav");});
test("gravă -> grav", function() {deepEqual( Stem("gravă"), "grav");});
test("grave -> grav", function() {deepEqual( Stem("grave"), "grav");});
test("gravei -> grave", function() {deepEqual( Stem("gravei"), "grave");});
test("gravelor -> grav", function() {deepEqual( Stem("gravelor"), "grav");});
test("gravide -> gravid", function() {deepEqual( Stem("gravide"), "gravid");});
test("gravita -> gravit", function() {deepEqual( Stem("gravita"), "gravit");});
test("gravitate -> gravitat", function() {deepEqual( Stem("gravitate"), "gravitat");});
test("gravitatea -> gravitat", function() {deepEqual( Stem("gravitatea"), "gravitat");});
test("gravitaţia -> gravit", function() {deepEqual( Stem("gravitaţia"), "gravit");});
test("gravitaţie -> gravit", function() {deepEqual( Stem("gravitaţie"), "gravit");});
test("gravitaţiei -> gravit", function() {deepEqual( Stem("gravitaţiei"), "gravit");});
test("gravitaţională -> gravitaţional", function() {deepEqual( Stem("gravitaţională"), "gravitaţional");});
test("gravitaţiunii -> gravitat", function() {deepEqual( Stem("gravitaţiunii"), "gravitat");});
test("gravitează -> gravit", function() {deepEqual( Stem("gravitează"), "gravit");});
test("grânele -> grân", function() {deepEqual( Stem("grânele"), "grân");});
test("grâu -> grâu", function() {deepEqual( Stem("grâu"), "grâu");});
test("grâul -> grâul", function() {deepEqual( Stem("grâul"), "grâul");});
test("grâului -> grâul", function() {deepEqual( Stem("grâului"), "grâul");});
test("grăbesc -> grăb", function() {deepEqual( Stem("grăbesc"), "grăb");});
test("grăbim -> grăb", function() {deepEqual( Stem("grăbim"), "grăb");});
test("grăbit -> grăbit", function() {deepEqual( Stem("grăbit"), "grăbit");});
test("grăbită -> grăbit", function() {deepEqual( Stem("grăbită"), "grăbit");});
test("grăbiţi -> grăb", function() {deepEqual( Stem("grăbiţi"), "grăb");});
test("grădina -> grădin", function() {deepEqual( Stem("grădina"), "grădin");});
test("grădină -> grădin", function() {deepEqual( Stem("grădină"), "grădin");});
test("grădini -> grădin", function() {deepEqual( Stem("grădini"), "grădin");});
test("grădinii -> grădin", function() {deepEqual( Stem("grădinii"), "grădin");});
test("grăită -> grăit", function() {deepEqual( Stem("grăită"), "grăit");});
test("grămada -> grămad", function() {deepEqual( Stem("grămada"), "grămad");});
test("grămadă -> grămad", function() {deepEqual( Stem("grămadă"), "grămad");});
test("grămădea -> grămăd", function() {deepEqual( Stem("grămădea"), "grămăd");});
test("grămădesc -> grămăd", function() {deepEqual( Stem("grămădesc"), "grămăd");});
test("grămezi -> grăm", function() {deepEqual( Stem("grămezi"), "grăm");});
test("grănicerul -> grănicer", function() {deepEqual( Stem("grănicerul"), "grănicer");});
test("grăsime -> grăsim", function() {deepEqual( Stem("grăsime"), "grăsim");});
test("grătar -> grătar", function() {deepEqual( Stem("grătar"), "grătar");});
test("grăunte -> grăunt", function() {deepEqual( Stem("grăunte"), "grăunt");});
test("grăunţă -> grăunţ", function() {deepEqual( Stem("grăunţă"), "grăunţ");});
test("grea -> gre", function() {deepEqual( Stem("grea"), "gre");});
test("greacă -> greac", function() {deepEqual( Stem("greacă"), "greac");});
test("greaţă -> greaţ", function() {deepEqual( Stem("greaţă"), "greaţ");});
test("grecească -> grec", function() {deepEqual( Stem("grecească"), "grec");});
test("greci -> grec", function() {deepEqual( Stem("greci"), "grec");});
test("grecia -> grec", function() {deepEqual( Stem("grecia"), "grec");});
test("greciei -> grec", function() {deepEqual( Stem("greciei"), "grec");});
test("greco -> greco", function() {deepEqual( Stem("greco"), "greco");});
test("grefa -> gref", function() {deepEqual( Stem("grefa"), "gref");});
test("grefează -> gref", function() {deepEqual( Stem("grefează"), "gref");});
test("grefeze -> gref", function() {deepEqual( Stem("grefeze"), "gref");});
test("grei -> gre", function() {deepEqual( Stem("grei"), "gre");});
test("grele -> grel", function() {deepEqual( Stem("grele"), "grel");});
test("grenadă -> grenad", function() {deepEqual( Stem("grenadă"), "grenad");});
test("greoaie -> greoai", function() {deepEqual( Stem("greoaie"), "greoai");});
test("greoi -> greo", function() {deepEqual( Stem("greoi"), "greo");});
test("greş -> greş", function() {deepEqual( Stem("greş"), "greş");});
test("greşeală -> greşeal", function() {deepEqual( Stem("greşeală"), "greşeal");});
test("greşeli -> greşel", function() {deepEqual( Stem("greşeli"), "greşel");});
test("greşelile -> greşel", function() {deepEqual( Stem("greşelile"), "greşel");});
test("greşesc -> greş", function() {deepEqual( Stem("greşesc"), "greş");});
test("greşim -> greş", function() {deepEqual( Stem("greşim"), "greş");});
test("greşit -> greşit", function() {deepEqual( Stem("greşit"), "greşit");});
test("greşită -> greşit", function() {deepEqual( Stem("greşită"), "greşit");});
test("gretchen -> gretchen", function() {deepEqual( Stem("gretchen"), "gretchen");});
test("greu -> greu", function() {deepEqual( Stem("greu"), "greu");});
test("greul -> greul", function() {deepEqual( Stem("greul"), "greul");});
test("greutate -> greutat", function() {deepEqual( Stem("greutate"), "greutat");});
test("greutatea -> greutat", function() {deepEqual( Stem("greutatea"), "greutat");});
test("greutăţi -> greutăţ", function() {deepEqual( Stem("greutăţi"), "greutăţ");});
test("greutăţile -> greutăţ", function() {deepEqual( Stem("greutăţile"), "greutăţ");});
test("greutăţilor -> greutăţ", function() {deepEqual( Stem("greutăţilor"), "greutăţ");});
test("grevei -> greve", function() {deepEqual( Stem("grevei"), "greve");});
test("greviştii -> grevişt", function() {deepEqual( Stem("greviştii"), "grevişt");});
test("grigoriade -> grigoriad", function() {deepEqual( Stem("grigoriade"), "grigoriad");});
test("grigoriţă -> grigoriţ", function() {deepEqual( Stem("grigoriţă"), "grigoriţ");});
test("grija -> grij", function() {deepEqual( Stem("grija"), "grij");});
test("grijă -> grij", function() {deepEqual( Stem("grijă"), "grij");});
test("grije -> grij", function() {deepEqual( Stem("grije"), "grij");});
test("griji -> grij", function() {deepEqual( Stem("griji"), "grij");});
test("grijulie -> grijul", function() {deepEqual( Stem("grijulie"), "grijul");});
test("grilaj -> grilaj", function() {deepEqual( Stem("grilaj"), "grilaj");});
test("grilajul -> grilaj", function() {deepEqual( Stem("grilajul"), "grilaj");});
test("grilajului -> grilaj", function() {deepEqual( Stem("grilajului"), "grilaj");});
test("grimasă -> grimas", function() {deepEqual( Stem("grimasă"), "grimas");});
test("grimase -> grim", function() {deepEqual( Stem("grimase"), "grim");});
test("groapa -> groap", function() {deepEqual( Stem("groapa"), "groap");});
test("groapă -> groap", function() {deepEqual( Stem("groapă"), "groap");});
test("groapei -> groape", function() {deepEqual( Stem("groapei"), "groape");});
test("groasă -> groas", function() {deepEqual( Stem("groasă"), "groas");});
test("groase -> groas", function() {deepEqual( Stem("groase"), "groas");});
test("groaza -> groaz", function() {deepEqual( Stem("groaza"), "groaz");});
test("groază -> groaz", function() {deepEqual( Stem("groază"), "groaz");});
test("groazele -> groaz", function() {deepEqual( Stem("groazele"), "groaz");});
test("groaznic -> groaznic", function() {deepEqual( Stem("groaznic"), "groaznic");});
test("groaznică -> groaznic", function() {deepEqual( Stem("groaznică"), "groaznic");});
test("groaznice -> groaznic", function() {deepEqual( Stem("groaznice"), "groaznic");});
test("gropi -> grop", function() {deepEqual( Stem("gropi"), "grop");});
test("gropii -> grop", function() {deepEqual( Stem("gropii"), "grop");});
test("gropile -> grop", function() {deepEqual( Stem("gropile"), "grop");});
test("gros -> gros", function() {deepEqual( Stem("gros"), "gros");});
test("grosolan -> grosolan", function() {deepEqual( Stem("grosolan"), "grosolan");});
test("grosolană -> grosolan", function() {deepEqual( Stem("grosolană"), "grosolan");});
test("grosolane -> grosolan", function() {deepEqual( Stem("grosolane"), "grosolan");});
test("grosso -> grosso", function() {deepEqual( Stem("grosso"), "grosso");});
test("grosul -> gros", function() {deepEqual( Stem("grosul"), "gros");});
test("groşi -> groş", function() {deepEqual( Stem("groşi"), "groş");});
test("grotesc -> grot", function() {deepEqual( Stem("grotesc"), "grot");});
test("grotescului -> grot", function() {deepEqual( Stem("grotescului"), "grot");});
test("grozav -> grozav", function() {deepEqual( Stem("grozav"), "grozav");});
test("grozavă -> grozav", function() {deepEqual( Stem("grozavă"), "grozav");});
test("grozave -> grozav", function() {deepEqual( Stem("grozave"), "grozav");});
test("grozavi -> grozav", function() {deepEqual( Stem("grozavi"), "grozav");});
test("grozăvia -> grozăv", function() {deepEqual( Stem("grozăvia"), "grozăv");});
test("grumazul -> grumaz", function() {deepEqual( Stem("grumazul"), "grumaz");});
test("grup -> grup", function() {deepEqual( Stem("grup"), "grup");});
test("grupa -> grup", function() {deepEqual( Stem("grupa"), "grup");});
test("gruparea -> grup", function() {deepEqual( Stem("gruparea"), "grup");});
test("grupaţi -> grup", function() {deepEqual( Stem("grupaţi"), "grup");});
test("grupă -> grup", function() {deepEqual( Stem("grupă"), "grup");});
test("grupăm -> grup", function() {deepEqual( Stem("grupăm"), "grup");});
test("grupările -> grupăr", function() {deepEqual( Stem("grupările"), "grupăr");});
test("grupe -> grup", function() {deepEqual( Stem("grupe"), "grup");});
test("grupele -> grup", function() {deepEqual( Stem("grupele"), "grup");});
test("grupelor -> grup", function() {deepEqual( Stem("grupelor"), "grup");});
test("grupul -> grup", function() {deepEqual( Stem("grupul"), "grup");});
test("grupului -> grup", function() {deepEqual( Stem("grupului"), "grup");});
test("grupuri -> grupur", function() {deepEqual( Stem("grupuri"), "grupur");});
test("grupurile -> grupur", function() {deepEqual( Stem("grupurile"), "grupur");});
test("guler -> guler", function() {deepEqual( Stem("guler"), "guler");});
test("gulerul -> guler", function() {deepEqual( Stem("gulerul"), "guler");});
test("gumbel -> gumbel", function() {deepEqual( Stem("gumbel"), "gumbel");});
test("gura -> gur", function() {deepEqual( Stem("gura"), "gur");});
test("gură -> gur", function() {deepEqual( Stem("gură"), "gur");});
test("gurguiul -> gurgui", function() {deepEqual( Stem("gurguiul"), "gurgui");});
test("gurii -> gur", function() {deepEqual( Stem("gurii"), "gur");});
test("gurile -> gur", function() {deepEqual( Stem("gurile"), "gur");});
test("gurilor -> gur", function() {deepEqual( Stem("gurilor"), "gur");});
test("gust -> gust", function() {deepEqual( Stem("gust"), "gust");});
test("gustare -> gust", function() {deepEqual( Stem("gustare"), "gust");});
test("gustarea -> gust", function() {deepEqual( Stem("gustarea"), "gust");});
test("gustat -> gustat", function() {deepEqual( Stem("gustat"), "gustat");});
test("gustă -> gust", function() {deepEqual( Stem("gustă"), "gust");});
test("gustări -> gustăr", function() {deepEqual( Stem("gustări"), "gustăr");});
test("gustările -> gustăr", function() {deepEqual( Stem("gustările"), "gustăr");});
test("gustul -> gust", function() {deepEqual( Stem("gustul"), "gust");});
test("gustului -> gust", function() {deepEqual( Stem("gustului"), "gust");});
test("gusturile -> gustur", function() {deepEqual( Stem("gusturile"), "gustur");});
test("gute -> gut", function() {deepEqual( Stem("gute"), "gut");});
test("guturai -> gutur", function() {deepEqual( Stem("guturai"), "gutur");});
test("guvern -> guvern", function() {deepEqual( Stem("guvern"), "guvern");});
test("guverne -> guvern", function() {deepEqual( Stem("guverne"), "guvern");});
test("guvernul -> guvern", function() {deepEqual( Stem("guvernul"), "guvern");});
test("guvernului -> guvern", function() {deepEqual( Stem("guvernului"), "guvern");});
test("h -> h", function() {deepEqual( Stem("h"), "h");});
test("habar -> habar", function() {deepEqual( Stem("habar"), "habar");});
test("haeckel -> haeckel", function() {deepEqual( Stem("haeckel"), "haeckel");});
test("hai -> hai", function() {deepEqual( Stem("hai"), "hai");});
test("haide -> haid", function() {deepEqual( Stem("haide"), "haid");});
test("haideţi -> haid", function() {deepEqual( Stem("haideţi"), "haid");});
test("haiduceşti -> haiduc", function() {deepEqual( Stem("haiduceşti"), "haiduc");});
test("haiduci -> haiduc", function() {deepEqual( Stem("haiduci"), "haiduc");});
test("haina -> hain", function() {deepEqual( Stem("haina"), "hain");});
test("haină -> hain", function() {deepEqual( Stem("haină"), "hain");});
test("haine -> hain", function() {deepEqual( Stem("haine"), "hain");});
test("hainei -> haine", function() {deepEqual( Stem("hainei"), "haine");});
test("hainele -> hain", function() {deepEqual( Stem("hainele"), "hain");});
test("halaturile -> halatur", function() {deepEqual( Stem("halaturile"), "halatur");});
test("halaturilor -> halatur", function() {deepEqual( Stem("halaturilor"), "halatur");});
test("halbe -> halb", function() {deepEqual( Stem("halbe"), "halb");});
test("halucinantă -> halucin", function() {deepEqual( Stem("halucinantă"), "halucin");});
test("halucinat -> halucin", function() {deepEqual( Stem("halucinat"), "halucin");});
test("halucinaţie -> halucin", function() {deepEqual( Stem("halucinaţie"), "halucin");});
test("halucinaţii -> halucin", function() {deepEqual( Stem("halucinaţii"), "halucin");});
test("halul -> hal", function() {deepEqual( Stem("halul"), "hal");});
test("hamali -> hamal", function() {deepEqual( Stem("hamali"), "hamal");});
test("hamburg -> hamburg", function() {deepEqual( Stem("hamburg"), "hamburg");});
test("hanovra -> hanovr", function() {deepEqual( Stem("hanovra"), "hanovr");});
test("hanovrez -> hanovr", function() {deepEqual( Stem("hanovrez"), "hanovr");});
test("hanurilor -> hanur", function() {deepEqual( Stem("hanurilor"), "hanur");});
test("haos -> haos", function() {deepEqual( Stem("haos"), "haos");});
test("haosul -> haos", function() {deepEqual( Stem("haosul"), "haos");});
test("haosului -> haos", function() {deepEqual( Stem("haosului"), "haos");});
test("haotic -> haotic", function() {deepEqual( Stem("haotic"), "haotic");});
test("hapsân -> hapsân", function() {deepEqual( Stem("hapsân"), "hapsân");});
test("hapsine -> hapsin", function() {deepEqual( Stem("hapsine"), "hapsin");});
test("haranoiu -> haranoiu", function() {deepEqual( Stem("haranoiu"), "haranoiu");});
test("harden -> harden", function() {deepEqual( Stem("harden"), "harden");});
test("harnic -> harnic", function() {deepEqual( Stem("harnic"), "harnic");});
test("harta -> hart", function() {deepEqual( Stem("harta"), "hart");});
test("hartă -> hart", function() {deepEqual( Stem("hartă"), "hart");});
test("hatârul -> hatâr", function() {deepEqual( Stem("hatârul"), "hatâr");});
test("havană -> havan", function() {deepEqual( Stem("havană"), "havan");});
test("haydn -> haydn", function() {deepEqual( Stem("haydn"), "haydn");});
test("haz -> haz", function() {deepEqual( Stem("haz"), "haz");});
test("hazlie -> hazl", function() {deepEqual( Stem("hazlie"), "hazl");});
test("hazliu -> hazliu", function() {deepEqual( Stem("hazliu"), "hazliu");});
test("hârtia -> hârt", function() {deepEqual( Stem("hârtia"), "hârt");});
test("hârtie -> hârt", function() {deepEqual( Stem("hârtie"), "hârt");});
test("hârtii -> hârt", function() {deepEqual( Stem("hârtii"), "hârt");});
test("hârtiile -> hârt", function() {deepEqual( Stem("hârtiile"), "hârt");});
test("hă -> hă", function() {deepEqual( Stem("hă"), "hă");});
test("hăi -> hăi", function() {deepEqual( Stem("hăi"), "hăi");});
test("hăinuţă -> hăinuţ", function() {deepEqual( Stem("hăinuţă"), "hăinuţ");});
test("hărăzeşte -> hărăz", function() {deepEqual( Stem("hărăzeşte"), "hărăz");});
test("hău -> hău", function() {deepEqual( Stem("hău"), "hău");});
test("hegeliană -> hegelian", function() {deepEqual( Stem("hegeliană"), "hegelian");});
test("hei -> hei", function() {deepEqual( Stem("hei"), "hei");});
test("heidelberg -> heidelberg", function() {deepEqual( Stem("heidelberg"), "heidelberg");});
test("heine -> hein", function() {deepEqual( Stem("heine"), "hein");});
test("hellmut -> hellmut", function() {deepEqual( Stem("hellmut"), "hellmut");});
test("helmholtz -> helmholtz", function() {deepEqual( Stem("helmholtz"), "helmholtz");});
test("henri -> henr", function() {deepEqual( Stem("henri"), "henr");});
test("heraclit -> heracl", function() {deepEqual( Stem("heraclit"), "heracl");});
test("heraclites -> heraclites", function() {deepEqual( Stem("heraclites"), "heraclites");});
test("herghelie -> herghel", function() {deepEqual( Stem("herghelie"), "herghel");});
test("heringi -> hering", function() {deepEqual( Stem("heringi"), "hering");});
test("hernie -> hern", function() {deepEqual( Stem("hernie"), "hern");});
test("hibrid -> hibrid", function() {deepEqual( Stem("hibrid"), "hibrid");});
test("hibride -> hibrid", function() {deepEqual( Stem("hibride"), "hibrid");});
test("hidrogen -> hidrogen", function() {deepEqual( Stem("hidrogen"), "hidrogen");});
test("hidrogenul -> hidrogen", function() {deepEqual( Stem("hidrogenul"), "hidrogen");});
test("higienic -> higien", function() {deepEqual( Stem("higienic"), "higien");});
test("hindenburg -> hindenburg", function() {deepEqual( Stem("hindenburg"), "hindenburg");});
test("hiperfuncţiune -> hiperfunct", function() {deepEqual( Stem("hiperfuncţiune"), "hiperfunct");});
test("hipersensibil -> hipersens", function() {deepEqual( Stem("hipersensibil"), "hipersens");});
test("hipertrofia -> hipertrof", function() {deepEqual( Stem("hipertrofia"), "hipertrof");});
test("hipertrofiat -> hipertrof", function() {deepEqual( Stem("hipertrofiat"), "hipertrof");});
test("hipertrofiau -> hipertrof", function() {deepEqual( Stem("hipertrofiau"), "hipertrof");});
test("hipertrofic -> hipertrof", function() {deepEqual( Stem("hipertrofic"), "hipertrof");});
test("hipnotizaţi -> hipnotiz", function() {deepEqual( Stem("hipnotizaţi"), "hipnotiz");});
test("hipodrom -> hipodrom", function() {deepEqual( Stem("hipodrom"), "hipodrom");});
test("hipostaziat -> hipostaz", function() {deepEqual( Stem("hipostaziat"), "hipostaz");});
test("hipostaziate -> hipostaz", function() {deepEqual( Stem("hipostaziate"), "hipostaz");});
test("hipostaziază -> hipostaziaz", function() {deepEqual( Stem("hipostaziază"), "hipostaziaz");});
test("hipostaziere -> hipostazier", function() {deepEqual( Stem("hipostaziere"), "hipostazier");});
test("hî -> hî", function() {deepEqual( Stem("hî"), "hî");});
test("hm -> hm", function() {deepEqual( Stem("hm"), "hm");});
test("hoaţă -> hoaţ", function() {deepEqual( Stem("hoaţă"), "hoaţ");});
test("hoaţo -> hoaţo", function() {deepEqual( Stem("hoaţo"), "hoaţo");});
test("hoc -> hoc", function() {deepEqual( Stem("hoc"), "hoc");});
test("hohot -> hohot", function() {deepEqual( Stem("hohot"), "hohot");});
test("hohote -> hohot", function() {deepEqual( Stem("hohote"), "hohot");});
test("hohotele -> hohot", function() {deepEqual( Stem("hohotele"), "hohot");});
test("hol -> hol", function() {deepEqual( Stem("hol"), "hol");});
test("homosexual -> homosexual", function() {deepEqual( Stem("homosexual"), "homosexual");});
test("horaţiu -> horaţiu", function() {deepEqual( Stem("horaţiu"), "horaţiu");});
test("hotar -> hotar", function() {deepEqual( Stem("hotar"), "hotar");});
test("hotarele -> hotar", function() {deepEqual( Stem("hotarele"), "hotar");});
test("hotarul -> hotar", function() {deepEqual( Stem("hotarul"), "hotar");});
test("hotărască -> hotărasc", function() {deepEqual( Stem("hotărască"), "hotărasc");});
test("hotărâm -> hotăr", function() {deepEqual( Stem("hotărâm"), "hotăr");});
test("hotărând -> hotăr", function() {deepEqual( Stem("hotărând"), "hotăr");});
test("hotărâre -> hotăr", function() {deepEqual( Stem("hotărâre"), "hotăr");});
test("hotărârea -> hotăr", function() {deepEqual( Stem("hotărârea"), "hotăr");});
test("hotărârile -> hotărâr", function() {deepEqual( Stem("hotărârile"), "hotărâr");});
test("hotărâseră -> hotăr", function() {deepEqual( Stem("hotărâseră"), "hotăr");});
test("hotărât -> hotărât", function() {deepEqual( Stem("hotărât"), "hotărât");});
test("hotărâtă -> hotărât", function() {deepEqual( Stem("hotărâtă"), "hotărât");});
test("hotărâte -> hotărât", function() {deepEqual( Stem("hotărâte"), "hotărât");});
test("hotărâtoare -> hotărâtoar", function() {deepEqual( Stem("hotărâtoare"), "hotărâtoar");});
test("hotărâtor -> hotărâtor", function() {deepEqual( Stem("hotărâtor"), "hotărâtor");});
test("hotărâţi -> hotăr", function() {deepEqual( Stem("hotărâţi"), "hotăr");});
test("hotărăsc -> hotăr", function() {deepEqual( Stem("hotărăsc"), "hotăr");});
test("hotărăşte -> hotăr", function() {deepEqual( Stem("hotărăşte"), "hotăr");});
test("hotel -> hotel", function() {deepEqual( Stem("hotel"), "hotel");});
test("hotelul -> hotel", function() {deepEqual( Stem("hotelul"), "hotel");});
test("hotelurile -> hotelur", function() {deepEqual( Stem("hotelurile"), "hotelur");});
test("hoţ -> hoţ", function() {deepEqual( Stem("hoţ"), "hoţ");});
test("hoţi -> hoţ", function() {deepEqual( Stem("hoţi"), "hoţ");});
test("hoţia -> hoţi", function() {deepEqual( Stem("hoţia"), "hoţi");});
test("hoţii -> hoţ", function() {deepEqual( Stem("hoţii"), "hoţ");});
test("hrană -> hran", function() {deepEqual( Stem("hrană"), "hran");});
test("hrănea -> hrăn", function() {deepEqual( Stem("hrănea"), "hrăn");});
test("hrănesc -> hrăn", function() {deepEqual( Stem("hrănesc"), "hrăn");});
test("hrăneşte -> hrăn", function() {deepEqual( Stem("hrăneşte"), "hrăn");});
test("hrănită -> hrănit", function() {deepEqual( Stem("hrănită"), "hrănit");});
test("hrănite -> hrănit", function() {deepEqual( Stem("hrănite"), "hrănit");});
test("hrănitor -> hrănit", function() {deepEqual( Stem("hrănitor"), "hrănit");});
test("hrisostom -> hrisostom", function() {deepEqual( Stem("hrisostom"), "hrisostom");});
test("hristos -> hristos", function() {deepEqual( Stem("hristos"), "hristos");});
test("huiduieşte -> huidui", function() {deepEqual( Stem("huiduieşte"), "huidui");});
test("hulim -> hul", function() {deepEqual( Stem("hulim"), "hul");});
test("humă -> hum", function() {deepEqual( Stem("humă"), "hum");});
test("hume -> hum", function() {deepEqual( Stem("hume"), "hum");});
test("humoresca -> humoresc", function() {deepEqual( Stem("humoresca"), "humoresc");});
test("humoristic -> humorist", function() {deepEqual( Stem("humoristic"), "humorist");});
test("husar -> husar", function() {deepEqual( Stem("husar"), "husar");});
test("husari -> husar", function() {deepEqual( Stem("husari"), "husar");});
test("husarii -> husar", function() {deepEqual( Stem("husarii"), "husar");});
test("husarului -> husar", function() {deepEqual( Stem("husarului"), "husar");});
test("hut -> hut", function() {deepEqual( Stem("hut"), "hut");});
test("huzurit -> huzur", function() {deepEqual( Stem("huzurit"), "huzur");});
test("i -> i", function() {deepEqual( Stem("i"), "i");});
test("ia -> ia", function() {deepEqual( Stem("ia"), "ia");});
test("iacă -> iac", function() {deepEqual( Stem("iacă"), "iac");});
test("iad -> iad", function() {deepEqual( Stem("iad"), "iad");});
test("iadul -> iad", function() {deepEqual( Stem("iadul"), "iad");});
test("iadului -> iad", function() {deepEqual( Stem("iadului"), "iad");});
test("iai -> iai", function() {deepEqual( Stem("iai"), "iai");});
test("ialomicioara -> ialomicioar", function() {deepEqual( Stem("ialomicioara"), "ialomicioar");});
test("ianuarie -> ianuar", function() {deepEqual( Stem("ianuarie"), "ianuar");});
test("iar -> iar", function() {deepEqual( Stem("iar"), "iar");});
test("iarăşi -> iarăş", function() {deepEqual( Stem("iarăşi"), "iarăş");});
test("iarba -> iarb", function() {deepEqual( Stem("iarba"), "iarb");});
test("iarbă -> iarb", function() {deepEqual( Stem("iarbă"), "iarb");});
test("iarna -> iarn", function() {deepEqual( Stem("iarna"), "iarn");});
test("iarnă -> iarn", function() {deepEqual( Stem("iarnă"), "iarn");});
test("iartă -> iart", function() {deepEqual( Stem("iartă"), "iart");});
test("iasă -> ias", function() {deepEqual( Stem("iasă"), "ias");});
test("iasomie -> iasom", function() {deepEqual( Stem("iasomie"), "iasom");});
test("iaşi -> iaş", function() {deepEqual( Stem("iaşi"), "iaş");});
test("iată -> iat", function() {deepEqual( Stem("iată"), "iat");});
test("iau -> iau", function() {deepEqual( Stem("iau"), "iau");});
test("ich -> ich", function() {deepEqual( Stem("ich"), "ich");});
test("ici -> ici", function() {deepEqual( Stem("ici"), "ici");});
test("icoana -> icoan", function() {deepEqual( Stem("icoana"), "icoan");});
test("icoană -> icoan", function() {deepEqual( Stem("icoană"), "icoan");});
test("icusaru -> icusaru", function() {deepEqual( Stem("icusaru"), "icusaru");});
test("ideal -> ideal", function() {deepEqual( Stem("ideal"), "ideal");});
test("ideală -> ideal", function() {deepEqual( Stem("ideală"), "ideal");});
test("idealismul -> idealist", function() {deepEqual( Stem("idealismul"), "idealist");});
test("idealist -> idealist", function() {deepEqual( Stem("idealist"), "idealist");});
test("idealistă -> idealist", function() {deepEqual( Stem("idealistă"), "idealist");});
test("idealişti -> idealist", function() {deepEqual( Stem("idealişti"), "idealist");});
test("idealiştii -> idealist", function() {deepEqual( Stem("idealiştii"), "idealist");});
test("idealul -> ideal", function() {deepEqual( Stem("idealul"), "ideal");});
test("idealului -> ideal", function() {deepEqual( Stem("idealului"), "ideal");});
test("idee -> ide", function() {deepEqual( Stem("idee"), "ide");});
test("ideea -> ide", function() {deepEqual( Stem("ideea"), "ide");});
test("idei -> ide", function() {deepEqual( Stem("idei"), "ide");});
test("ideii -> idei", function() {deepEqual( Stem("ideii"), "idei");});
test("ideile -> ide", function() {deepEqual( Stem("ideile"), "ide");});
test("ideilor -> ide", function() {deepEqual( Stem("ideilor"), "ide");});
test("identic -> ident", function() {deepEqual( Stem("identic"), "ident");});
test("identică -> ident", function() {deepEqual( Stem("identică"), "ident");});
test("identice -> ident", function() {deepEqual( Stem("identice"), "ident");});
test("identific -> identif", function() {deepEqual( Stem("identific"), "identif");});
test("identifica -> identif", function() {deepEqual( Stem("identifica"), "identif");});
test("identificare -> identific", function() {deepEqual( Stem("identificare"), "identific");});
test("identificat -> identific", function() {deepEqual( Stem("identificat"), "identific");});
test("identificate -> identific", function() {deepEqual( Stem("identificate"), "identific");});
test("identifică -> identif", function() {deepEqual( Stem("identifică"), "identif");});
test("identificăm -> identific", function() {deepEqual( Stem("identificăm"), "identific");});
test("identitate -> ident", function() {deepEqual( Stem("identitate"), "ident");});
test("identitatea -> ident", function() {deepEqual( Stem("identitatea"), "ident");});
test("identităţi -> ident", function() {deepEqual( Stem("identităţi"), "ident");});
test("identităţii -> ident", function() {deepEqual( Stem("identităţii"), "ident");});
test("ideologia -> ideolog", function() {deepEqual( Stem("ideologia"), "ideolog");});
test("ideologică -> ideolog", function() {deepEqual( Stem("ideologică"), "ideolog");});
test("ideologice -> ideolog", function() {deepEqual( Stem("ideologice"), "ideolog");});
test("ideologiei -> ideolog", function() {deepEqual( Stem("ideologiei"), "ideolog");});
test("ideologii -> ideolog", function() {deepEqual( Stem("ideologii"), "ideolog");});
test("ideologiile -> ideolog", function() {deepEqual( Stem("ideologiile"), "ideolog");});
test("idila -> idil", function() {deepEqual( Stem("idila"), "idil");});
test("idilic -> idil", function() {deepEqual( Stem("idilic"), "idil");});
test("idilică -> idil", function() {deepEqual( Stem("idilică"), "idil");});
test("idiotizat -> idiotiz", function() {deepEqual( Stem("idiotizat"), "idiotiz");});
test("idiotizează -> idiotiz", function() {deepEqual( Stem("idiotizează"), "idiotiz");});
test("idolatrie -> idolatr", function() {deepEqual( Stem("idolatrie"), "idolatr");});
test("idolul -> idol", function() {deepEqual( Stem("idolul"), "idol");});
test("ieftin -> ieftin", function() {deepEqual( Stem("ieftin"), "ieftin");});
test("ieftină -> ieftin", function() {deepEqual( Stem("ieftină"), "ieftin");});
test("ieftine -> ieftin", function() {deepEqual( Stem("ieftine"), "ieftin");});
test("iei -> iei", function() {deepEqual( Stem("iei"), "iei");});
test("iepuri -> iepur", function() {deepEqual( Stem("iepuri"), "iepur");});
test("iepurii -> iepur", function() {deepEqual( Stem("iepurii"), "iepur");});
test("ierarhia -> ierarh", function() {deepEqual( Stem("ierarhia"), "ierarh");});
test("ierarhic -> ierarh", function() {deepEqual( Stem("ierarhic"), "ierarh");});
test("ierarhie -> ierarh", function() {deepEqual( Stem("ierarhie"), "ierarh");});
test("ierbii -> ierb", function() {deepEqual( Stem("ierbii"), "ierb");});
test("ieri -> ier", function() {deepEqual( Stem("ieri"), "ier");});
test("ieronim -> ieron", function() {deepEqual( Stem("ieronim"), "ieron");});
test("iert -> iert", function() {deepEqual( Stem("iert"), "iert");});
test("ierta -> iert", function() {deepEqual( Stem("ierta"), "iert");});
test("iertare -> iert", function() {deepEqual( Stem("iertare"), "iert");});
test("iertat -> iertat", function() {deepEqual( Stem("iertat"), "iertat");});
test("iertaţi -> iert", function() {deepEqual( Stem("iertaţi"), "iert");});
test("iertau -> iert", function() {deepEqual( Stem("iertau"), "iert");});
test("iertători -> iertat", function() {deepEqual( Stem("iertători"), "iertat");});
test("ierte -> iert", function() {deepEqual( Stem("ierte"), "iert");});
test("ies -> ies", function() {deepEqual( Stem("ies"), "ies");});
test("iese -> ies", function() {deepEqual( Stem("iese"), "ies");});
test("ieşea -> ieş", function() {deepEqual( Stem("ieşea"), "ieş");});
test("ieşeau -> ieşeau", function() {deepEqual( Stem("ieşeau"), "ieşeau");});
test("ieşi -> ieş", function() {deepEqual( Stem("ieşi"), "ieş");});
test("ieşim -> ieş", function() {deepEqual( Stem("ieşim"), "ieş");});
test("ieşire -> ieşir", function() {deepEqual( Stem("ieşire"), "ieşir");});
test("ieşirea -> ieşir", function() {deepEqual( Stem("ieşirea"), "ieşir");});
test("ieşirei -> ieşire", function() {deepEqual( Stem("ieşirei"), "ieşire");});
test("ieşiri -> ieşir", function() {deepEqual( Stem("ieşiri"), "ieşir");});
test("ieşise -> ieşis", function() {deepEqual( Stem("ieşise"), "ieşis");});
test("ieşit -> ieşit", function() {deepEqual( Stem("ieşit"), "ieşit");});
test("ieşiţi -> ieş", function() {deepEqual( Stem("ieşiţi"), "ieş");});
test("iezerului -> iezer", function() {deepEqual( Stem("iezerului"), "iezer");});
test("ignorant -> ignor", function() {deepEqual( Stem("ignorant"), "ignor");});
test("ignoranţa -> ignoranţ", function() {deepEqual( Stem("ignoranţa"), "ignoranţ");});
test("ignoranţei -> ignoranţe", function() {deepEqual( Stem("ignoranţei"), "ignoranţe");});
test("ignorând -> ignor", function() {deepEqual( Stem("ignorând"), "ignor");});
test("ignoră -> ignor", function() {deepEqual( Stem("ignoră"), "ignor");});
test("ignorăm -> ignor", function() {deepEqual( Stem("ignorăm"), "ignor");});
test("ignorează -> ignor", function() {deepEqual( Stem("ignorează"), "ignor");});
test("ii -> ii", function() {deepEqual( Stem("ii"), "ii");});
test("iii -> iii", function() {deepEqual( Stem("iii"), "iii");});
test("ilaritate -> ilar", function() {deepEqual( Stem("ilaritate"), "ilar");});
test("ilegalismul -> ilegalist", function() {deepEqual( Stem("ilegalismul"), "ilegalist");});
test("ilegalismului -> ilegalist", function() {deepEqual( Stem("ilegalismului"), "ilegalist");});
test("iliada -> iliad", function() {deepEqual( Stem("iliada"), "iliad");});
test("ilie -> ilie", function() {deepEqual( Stem("ilie"), "ilie");});
test("iluminat -> ilumin", function() {deepEqual( Stem("iluminat"), "ilumin");});
test("iluminată -> ilumin", function() {deepEqual( Stem("iluminată"), "ilumin");});
test("iluminaţi -> ilumin", function() {deepEqual( Stem("iluminaţi"), "ilumin");});
test("ilustra -> ilustr", function() {deepEqual( Stem("ilustra"), "ilustr");});
test("ilustrat -> ilustr", function() {deepEqual( Stem("ilustrat"), "ilustr");});
test("ilustrată -> ilustr", function() {deepEqual( Stem("ilustrată"), "ilustr");});
test("ilustrate -> ilustr", function() {deepEqual( Stem("ilustrate"), "ilustr");});
test("ilustrează -> ilustr", function() {deepEqual( Stem("ilustrează"), "ilustr");});
test("ilustreze -> ilustr", function() {deepEqual( Stem("ilustreze"), "ilustr");});
test("iluştri -> iluştr", function() {deepEqual( Stem("iluştri"), "iluştr");});
test("iluzia -> iluz", function() {deepEqual( Stem("iluzia"), "iluz");});
test("iluzie -> iluz", function() {deepEqual( Stem("iluzie"), "iluz");});
test("iluziei -> iluz", function() {deepEqual( Stem("iluziei"), "iluz");});
test("iluzii -> iluz", function() {deepEqual( Stem("iluzii"), "iluz");});
test("iluziune -> iluziun", function() {deepEqual( Stem("iluziune"), "iluziun");});
test("iluzorie -> iluzor", function() {deepEqual( Stem("iluzorie"), "iluzor");});
test("imagina -> imagin", function() {deepEqual( Stem("imagina"), "imagin");});
test("imaginam -> imagin", function() {deepEqual( Stem("imaginam"), "imagin");});
test("imaginar -> imaginar", function() {deepEqual( Stem("imaginar"), "imaginar");});
test("imaginaţie -> imagin", function() {deepEqual( Stem("imaginaţie"), "imagin");});
test("imaginaţiei -> imagin", function() {deepEqual( Stem("imaginaţiei"), "imagin");});
test("imagine -> imagin", function() {deepEqual( Stem("imagine"), "imagin");});
test("imaginea -> imagin", function() {deepEqual( Stem("imaginea"), "imagin");});
test("imaginează -> imagin", function() {deepEqual( Stem("imaginează"), "imagin");});
test("imaginei -> imagine", function() {deepEqual( Stem("imaginei"), "imagine");});
test("imaginez -> imagin", function() {deepEqual( Stem("imaginez"), "imagin");});
test("imaginezi -> imagin", function() {deepEqual( Stem("imaginezi"), "imagin");});
test("imagini -> imagin", function() {deepEqual( Stem("imagini"), "imagin");});
test("imaginii -> imagin", function() {deepEqual( Stem("imaginii"), "imagin");});
test("imaginile -> imagin", function() {deepEqual( Stem("imaginile"), "imagin");});
test("imaginilor -> imagin", function() {deepEqual( Stem("imaginilor"), "imagin");});
test("imago -> imago", function() {deepEqual( Stem("imago"), "imago");});
test("imanent -> imanent", function() {deepEqual( Stem("imanent"), "imanent");});
test("imanentă -> imanent", function() {deepEqual( Stem("imanentă"), "imanent");});
test("imanente -> imanent", function() {deepEqual( Stem("imanente"), "imanent");});
test("imanenţa -> imanenţ", function() {deepEqual( Stem("imanenţa"), "imanenţ");});
test("imanenţă -> imanenţ", function() {deepEqual( Stem("imanenţă"), "imanenţ");});
test("imanenţei -> imanenţe", function() {deepEqual( Stem("imanenţei"), "imanenţe");});
test("imbecil -> imbecil", function() {deepEqual( Stem("imbecil"), "imbecil");});
test("imbecilii -> imbecil", function() {deepEqual( Stem("imbecilii"), "imbecil");});
test("imbecililor -> imbecil", function() {deepEqual( Stem("imbecililor"), "imbecil");});
test("imbecilitate -> imbecil", function() {deepEqual( Stem("imbecilitate"), "imbecil");});
test("imbecilitatea -> imbecil", function() {deepEqual( Stem("imbecilitatea"), "imbecil");});
test("imbecilul -> imbecil", function() {deepEqual( Stem("imbecilul"), "imbecil");});
test("imediat -> imed", function() {deepEqual( Stem("imediat"), "imed");});
test("imediată -> imed", function() {deepEqual( Stem("imediată"), "imed");});
test("imediate -> imed", function() {deepEqual( Stem("imediate"), "imed");});
test("imens -> imens", function() {deepEqual( Stem("imens"), "imens");});
test("imensa -> imens", function() {deepEqual( Stem("imensa"), "imens");});
test("imensă -> imens", function() {deepEqual( Stem("imensă"), "imens");});
test("imensei -> imen", function() {deepEqual( Stem("imensei"), "imen");});
test("imensitatea -> imens", function() {deepEqual( Stem("imensitatea"), "imens");});
test("imenşii -> imenş", function() {deepEqual( Stem("imenşii"), "imenş");});
test("imita -> imit", function() {deepEqual( Stem("imita"), "imit");});
test("imitator -> imit", function() {deepEqual( Stem("imitator"), "imit");});
test("imitatorie -> imitator", function() {deepEqual( Stem("imitatorie"), "imitator");});
test("imitatorul -> imit", function() {deepEqual( Stem("imitatorul"), "imit");});
test("imitaţia -> imit", function() {deepEqual( Stem("imitaţia"), "imit");});
test("imitaţie -> imit", function() {deepEqual( Stem("imitaţie"), "imit");});
test("imitaţiei -> imit", function() {deepEqual( Stem("imitaţiei"), "imit");});
test("imitaţii -> imit", function() {deepEqual( Stem("imitaţii"), "imit");});
test("imită -> imit", function() {deepEqual( Stem("imită"), "imit");});
test("immediate -> immed", function() {deepEqual( Stem("immediate"), "immed");});
test("imn -> imn", function() {deepEqual( Stem("imn"), "imn");});
test("imobilizată -> imobiliz", function() {deepEqual( Stem("imobilizată"), "imobiliz");});
test("imobilizaţi -> imobiliz", function() {deepEqual( Stem("imobilizaţi"), "imobiliz");});
test("impenetrabil -> impenetr", function() {deepEqual( Stem("impenetrabil"), "impenetr");});
test("imperative -> imper", function() {deepEqual( Stem("imperative"), "imper");});
test("imperativul -> imper", function() {deepEqual( Stem("imperativul"), "imper");});
test("imperceptibil -> impercept", function() {deepEqual( Stem("imperceptibil"), "impercept");});
test("imperceptibile -> imperceptib", function() {deepEqual( Stem("imperceptibile"), "imperceptib");});
test("imperfect -> imperfect", function() {deepEqual( Stem("imperfect"), "imperfect");});
test("imperfecte -> imperfect", function() {deepEqual( Stem("imperfecte"), "imperfect");});
test("imperial -> imperial", function() {deepEqual( Stem("imperial"), "imperial");});
test("imperialiste -> imperialist", function() {deepEqual( Stem("imperialiste"), "imperialist");});
test("imperiu -> imperiu", function() {deepEqual( Stem("imperiu"), "imperiu");});
test("imperiul -> imper", function() {deepEqual( Stem("imperiul"), "imper");});
test("imperiului -> imper", function() {deepEqual( Stem("imperiului"), "imper");});
test("impertinenţă -> impertinenţ", function() {deepEqual( Stem("impertinenţă"), "impertinenţ");});
test("imperturbabil -> imperturb", function() {deepEqual( Stem("imperturbabil"), "imperturb");});
test("implicat -> implic", function() {deepEqual( Stem("implicat"), "implic");});
test("implică -> implic", function() {deepEqual( Stem("implică"), "implic");});
test("implicit -> implic", function() {deepEqual( Stem("implicit"), "implic");});
test("implora -> implor", function() {deepEqual( Stem("implora"), "implor");});
test("imploră -> implor", function() {deepEqual( Stem("imploră"), "implor");});
test("implorări -> implorăr", function() {deepEqual( Stem("implorări"), "implorăr");});
test("implore -> implor", function() {deepEqual( Stem("implore"), "implor");});
test("imponderabil -> imponder", function() {deepEqual( Stem("imponderabil"), "imponder");});
test("important -> import", function() {deepEqual( Stem("important"), "import");});
test("importantă -> import", function() {deepEqual( Stem("importantă"), "import");});
test("importante -> import", function() {deepEqual( Stem("importante"), "import");});
test("importanţa -> importanţ", function() {deepEqual( Stem("importanţa"), "importanţ");});
test("importanţă -> importanţ", function() {deepEqual( Stem("importanţă"), "importanţ");});
test("importanţi -> importanţ", function() {deepEqual( Stem("importanţi"), "importanţ");});
test("importul -> import", function() {deepEqual( Stem("importul"), "import");});
test("imposibil -> impos", function() {deepEqual( Stem("imposibil"), "impos");});
test("imposibilă -> impos", function() {deepEqual( Stem("imposibilă"), "impos");});
test("imposibile -> imposib", function() {deepEqual( Stem("imposibile"), "imposib");});
test("imposibilitate -> impos", function() {deepEqual( Stem("imposibilitate"), "impos");});
test("imposibilitatea -> impos", function() {deepEqual( Stem("imposibilitatea"), "impos");});
test("imposibilităţi -> imposibil", function() {deepEqual( Stem("imposibilităţi"), "imposibil");});
test("imposibilul -> impos", function() {deepEqual( Stem("imposibilul"), "impos");});
test("impreciziei -> impreciz", function() {deepEqual( Stem("impreciziei"), "impreciz");});
test("impresia -> impres", function() {deepEqual( Stem("impresia"), "impres");});
test("impresie -> impres", function() {deepEqual( Stem("impresie"), "impres");});
test("impresiei -> impres", function() {deepEqual( Stem("impresiei"), "impres");});
test("impresii -> impres", function() {deepEqual( Stem("impresii"), "impres");});
test("impresiile -> impres", function() {deepEqual( Stem("impresiile"), "impres");});
test("impresiilor -> impres", function() {deepEqual( Stem("impresiilor"), "impres");});
test("impresionabili -> impresion", function() {deepEqual( Stem("impresionabili"), "impresion");});
test("impresionant -> impresion", function() {deepEqual( Stem("impresionant"), "impresion");});
test("impresionantă -> impresion", function() {deepEqual( Stem("impresionantă"), "impresion");});
test("impresionat -> impresion", function() {deepEqual( Stem("impresionat"), "impresion");});
test("impresionismului -> impresionist", function() {deepEqual( Stem("impresionismului"), "impresionist");});
test("impresionist -> impresionist", function() {deepEqual( Stem("impresionist"), "impresionist");});
test("impresiune -> impresiun", function() {deepEqual( Stem("impresiune"), "impresiun");});
test("impresiunea -> impresiun", function() {deepEqual( Stem("impresiunea"), "impresiun");});
test("impresiuni -> impresiun", function() {deepEqual( Stem("impresiuni"), "impresiun");});
test("impresiunile -> impresiun", function() {deepEqual( Stem("impresiunile"), "impresiun");});
test("impresiunilor -> impresiun", function() {deepEqual( Stem("impresiunilor"), "impresiun");});
test("imprevu -> imprevu", function() {deepEqual( Stem("imprevu"), "imprevu");});
test("imprim -> imprim", function() {deepEqual( Stem("imprim"), "imprim");});
test("imprimat -> imprim", function() {deepEqual( Stem("imprimat"), "imprim");});
test("impropriu -> impropriu", function() {deepEqual( Stem("impropriu"), "impropriu");});
test("improvizat -> improviz", function() {deepEqual( Stem("improvizat"), "improviz");});
test("improvizate -> improviz", function() {deepEqual( Stem("improvizate"), "improviz");});
test("imprudent -> imprudent", function() {deepEqual( Stem("imprudent"), "imprudent");});
test("imprudenţă -> imprudenţ", function() {deepEqual( Stem("imprudenţă"), "imprudenţ");});
test("imprudenţe -> imprudenţ", function() {deepEqual( Stem("imprudenţe"), "imprudenţ");});
test("imprudenţele -> imprudenţ", function() {deepEqual( Stem("imprudenţele"), "imprudenţ");});
test("impudic -> impud", function() {deepEqual( Stem("impudic"), "impud");});
test("impudice -> impud", function() {deepEqual( Stem("impudice"), "impud");});
test("impudoare -> impudoar", function() {deepEqual( Stem("impudoare"), "impudoar");});
test("impui -> impu", function() {deepEqual( Stem("impui"), "impu");});
test("impuls -> impuls", function() {deepEqual( Stem("impuls"), "impuls");});
test("impulsiona -> impulsion", function() {deepEqual( Stem("impulsiona"), "impulsion");});
test("impulsionarea -> impulsion", function() {deepEqual( Stem("impulsionarea"), "impulsion");});
test("impulsionaţi -> impulsion", function() {deepEqual( Stem("impulsionaţi"), "impulsion");});
test("impulsioneze -> impulsion", function() {deepEqual( Stem("impulsioneze"), "impulsion");});
test("impulsiv -> impuls", function() {deepEqual( Stem("impulsiv"), "impuls");});
test("impulsivă -> impuls", function() {deepEqual( Stem("impulsivă"), "impuls");});
test("impulsivităţii -> impuls", function() {deepEqual( Stem("impulsivităţii"), "impuls");});
test("impulsuri -> impulsur", function() {deepEqual( Stem("impulsuri"), "impulsur");});
test("impun -> impun", function() {deepEqual( Stem("impun"), "impun");});
test("impună -> impun", function() {deepEqual( Stem("impună"), "impun");});
test("impunătoare -> impun", function() {deepEqual( Stem("impunătoare"), "impun");});
test("impunător -> impun", function() {deepEqual( Stem("impunător"), "impun");});
test("impune -> impun", function() {deepEqual( Stem("impune"), "impun");});
test("impunea -> impun", function() {deepEqual( Stem("impunea"), "impun");});
test("impuneau -> impun", function() {deepEqual( Stem("impuneau"), "impun");});
test("impunerea -> impun", function() {deepEqual( Stem("impunerea"), "impun");});
test("impunerii -> impuner", function() {deepEqual( Stem("impunerii"), "impuner");});
test("impunînd -> impunînd", function() {deepEqual( Stem("impunînd"), "impunînd");});
test("impur -> impur", function() {deepEqual( Stem("impur"), "impur");});
test("impuritate -> impur", function() {deepEqual( Stem("impuritate"), "impur");});
test("impurităţi -> impur", function() {deepEqual( Stem("impurităţi"), "impur");});
test("impus -> impus", function() {deepEqual( Stem("impus"), "impus");});
test("impusă -> impus", function() {deepEqual( Stem("impusă"), "impus");});
test("impuse -> impu", function() {deepEqual( Stem("impuse"), "impu");});
test("imuabil -> imuabil", function() {deepEqual( Stem("imuabil"), "imuabil");});
test("imune -> imun", function() {deepEqual( Stem("imune"), "imun");});
test("imutabilitatea -> imut", function() {deepEqual( Stem("imutabilitatea"), "imut");});
test("in -> in", function() {deepEqual( Stem("in"), "in");});
test("inabordabilă -> inabord", function() {deepEqual( Stem("inabordabilă"), "inabord");});
test("inacceptabilă -> inaccept", function() {deepEqual( Stem("inacceptabilă"), "inaccept");});
test("inaccesibilă -> inacces", function() {deepEqual( Stem("inaccesibilă"), "inacces");});
test("inactivă -> inact", function() {deepEqual( Stem("inactivă"), "inact");});
test("inactuale -> inactual", function() {deepEqual( Stem("inactuale"), "inactual");});
test("inamic -> inam", function() {deepEqual( Stem("inamic"), "inam");});
test("inamică -> inam", function() {deepEqual( Stem("inamică"), "inam");});
test("inamice -> inam", function() {deepEqual( Stem("inamice"), "inam");});
test("inamici -> inam", function() {deepEqual( Stem("inamici"), "inam");});
test("inamicul -> inam", function() {deepEqual( Stem("inamicul"), "inam");});
test("inamicului -> inam", function() {deepEqual( Stem("inamicului"), "inam");});
test("inatacabila -> inatac", function() {deepEqual( Stem("inatacabila"), "inatac");});
test("inaugurarea -> inaugur", function() {deepEqual( Stem("inaugurarea"), "inaugur");});
test("incalificabil -> incalific", function() {deepEqual( Stem("incalificabil"), "incalific");});
test("incandescent -> incandescent", function() {deepEqual( Stem("incandescent"), "incandescent");});
test("incandescenţă -> incandescenţ", function() {deepEqual( Stem("incandescenţă"), "incandescenţ");});
test("incapabil -> incap", function() {deepEqual( Stem("incapabil"), "incap");});
test("incapabilă -> incap", function() {deepEqual( Stem("incapabilă"), "incap");});
test("incapabile -> incap", function() {deepEqual( Stem("incapabile"), "incap");});
test("incapabili -> incap", function() {deepEqual( Stem("incapabili"), "incap");});
test("incapacitatea -> incapac", function() {deepEqual( Stem("incapacitatea"), "incapac");});
test("incarnare -> incarn", function() {deepEqual( Stem("incarnare"), "incarn");});
test("incarnaţii -> incarn", function() {deepEqual( Stem("incarnaţii"), "incarn");});
test("incarnează -> incarn", function() {deepEqual( Stem("incarnează"), "incarn");});
test("incertă -> incert", function() {deepEqual( Stem("incertă"), "incert");});
test("incertitudinea -> incertitudin", function() {deepEqual( Stem("incertitudinea"), "incertitudin");});
test("incertitudinilor -> incertitudin", function() {deepEqual( Stem("incertitudinilor"), "incertitudin");});
test("inchizitor -> inchiz", function() {deepEqual( Stem("inchizitor"), "inchiz");});
test("inchiziţioneze -> inchiziţion", function() {deepEqual( Stem("inchiziţioneze"), "inchiziţion");});
test("incident -> incident", function() {deepEqual( Stem("incident"), "incident");});
test("incidental -> incidental", function() {deepEqual( Stem("incidental"), "incidental");});
test("incidentală -> incidental", function() {deepEqual( Stem("incidentală"), "incidental");});
test("incidente -> incident", function() {deepEqual( Stem("incidente"), "incident");});
test("incidentele -> incident", function() {deepEqual( Stem("incidentele"), "incident");});
test("incinta -> incint", function() {deepEqual( Stem("incinta"), "incint");});
test("incintă -> incint", function() {deepEqual( Stem("incintă"), "incint");});
test("incluziv -> incluz", function() {deepEqual( Stem("incluziv"), "incluz");});
test("incnind -> incnind", function() {deepEqual( Stem("incnind"), "incnind");});
test("incoerent -> incoerent", function() {deepEqual( Stem("incoerent"), "incoerent");});
test("incomod -> incomod", function() {deepEqual( Stem("incomod"), "incomod");});
test("incomparabil -> incompar", function() {deepEqual( Stem("incomparabil"), "incompar");});
test("incomparabila -> incompar", function() {deepEqual( Stem("incomparabila"), "incompar");});
test("incompetenţei -> incompetenţe", function() {deepEqual( Stem("incompetenţei"), "incompetenţe");});
test("incompletă -> incomplet", function() {deepEqual( Stem("incompletă"), "incomplet");});
test("incomunicabile -> incomunic", function() {deepEqual( Stem("incomunicabile"), "incomunic");});
test("inconsecvenţa -> inconsecvenţ", function() {deepEqual( Stem("inconsecvenţa"), "inconsecvenţ");});
test("inconsistente -> inconsistent", function() {deepEqual( Stem("inconsistente"), "inconsistent");});
test("inconştient -> inconştient", function() {deepEqual( Stem("inconştient"), "inconştient");});
test("inconştiente -> inconştient", function() {deepEqual( Stem("inconştiente"), "inconştient");});
test("inconştienţă -> inconştienţ", function() {deepEqual( Stem("inconştienţă"), "inconştienţ");});
test("incontestabil -> incontest", function() {deepEqual( Stem("incontestabil"), "incontest");});
test("incontestabilă -> incontest", function() {deepEqual( Stem("incontestabilă"), "incontest");});
test("incontinenţă -> incontinenţ", function() {deepEqual( Stem("incontinenţă"), "incontinenţ");});
test("incorijibil -> incorij", function() {deepEqual( Stem("incorijibil"), "incorij");});
test("incriminate -> incrimin", function() {deepEqual( Stem("incriminate"), "incrimin");});
test("incult -> incult", function() {deepEqual( Stem("incult"), "incult");});
test("incurabil -> incur", function() {deepEqual( Stem("incurabil"), "incur");});
test("incursie -> incurs", function() {deepEqual( Stem("incursie"), "incurs");});
test("indeniabilă -> inden", function() {deepEqual( Stem("indeniabilă"), "inden");});
test("indentare -> indent", function() {deepEqual( Stem("indentare"), "indent");});
test("indentificarea -> indentific", function() {deepEqual( Stem("indentificarea"), "indentific");});
test("indentitatea -> indent", function() {deepEqual( Stem("indentitatea"), "indent");});
test("independent -> independent", function() {deepEqual( Stem("independent"), "independent");});
test("independentă -> independent", function() {deepEqual( Stem("independentă"), "independent");});
test("independente -> independent", function() {deepEqual( Stem("independente"), "independent");});
test("independenţa -> independenţ", function() {deepEqual( Stem("independenţa"), "independenţ");});
test("independenţă -> independenţ", function() {deepEqual( Stem("independenţă"), "independenţ");});
test("independenţi -> independenţ", function() {deepEqual( Stem("independenţi"), "independenţ");});
test("independeţa -> independeţ", function() {deepEqual( Stem("independeţa"), "independeţ");});
test("independeţă -> independeţ", function() {deepEqual( Stem("independeţă"), "independeţ");});
test("index -> index", function() {deepEqual( Stem("index"), "index");});
test("india -> indi", function() {deepEqual( Stem("india"), "indi");});
test("indica -> indic", function() {deepEqual( Stem("indica"), "indic");});
test("indicare -> indic", function() {deepEqual( Stem("indicare"), "indic");});
test("indicarea -> indic", function() {deepEqual( Stem("indicarea"), "indic");});
test("indicat -> indic", function() {deepEqual( Stem("indicat"), "indic");});
test("indicată -> indic", function() {deepEqual( Stem("indicată"), "indic");});
test("indicate -> indic", function() {deepEqual( Stem("indicate"), "indic");});
test("indicatoare -> indic", function() {deepEqual( Stem("indicatoare"), "indic");});
test("indicaţia -> indic", function() {deepEqual( Stem("indicaţia"), "indic");});
test("indicaţiei -> indic", function() {deepEqual( Stem("indicaţiei"), "indic");});
test("indicaţiile -> indic", function() {deepEqual( Stem("indicaţiile"), "indic");});
test("indicaţiilor -> indic", function() {deepEqual( Stem("indicaţiilor"), "indic");});
test("indicaţiuni -> indicat", function() {deepEqual( Stem("indicaţiuni"), "indicat");});
test("indicaţiunile -> indicat", function() {deepEqual( Stem("indicaţiunile"), "indicat");});
test("indică -> indic", function() {deepEqual( Stem("indică"), "indic");});
test("indice -> indic", function() {deepEqual( Stem("indice"), "indic");});
test("indiciu -> indiciu", function() {deepEqual( Stem("indiciu"), "indiciu");});
test("indie -> indie", function() {deepEqual( Stem("indie"), "indie");});
test("indieni -> indien", function() {deepEqual( Stem("indieni"), "indien");});
test("indiferent -> indiferent", function() {deepEqual( Stem("indiferent"), "indiferent");});
test("indiferentă -> indiferent", function() {deepEqual( Stem("indiferentă"), "indiferent");});
test("indiferente -> indiferent", function() {deepEqual( Stem("indiferente"), "indiferent");});
test("indiferenţa -> indiferenţ", function() {deepEqual( Stem("indiferenţa"), "indiferenţ");});
test("indiferenţă -> indiferenţ", function() {deepEqual( Stem("indiferenţă"), "indiferenţ");});
test("indiferenţei -> indiferenţe", function() {deepEqual( Stem("indiferenţei"), "indiferenţe");});
test("indigestaque -> indigestaqu", function() {deepEqual( Stem("indigestaque"), "indigestaqu");});
test("indignarea -> indign", function() {deepEqual( Stem("indignarea"), "indign");});
test("indignat -> indign", function() {deepEqual( Stem("indignat"), "indign");});
test("indignată -> indign", function() {deepEqual( Stem("indignată"), "indign");});
test("indignaţi -> indign", function() {deepEqual( Stem("indignaţi"), "indign");});
test("indignează -> indign", function() {deepEqual( Stem("indignează"), "indign");});
test("indirect -> indirect", function() {deepEqual( Stem("indirect"), "indirect");});
test("indirectă -> indirect", function() {deepEqual( Stem("indirectă"), "indirect");});
test("indiscretă -> indiscret", function() {deepEqual( Stem("indiscretă"), "indiscret");});
test("indiscrete -> indiscret", function() {deepEqual( Stem("indiscrete"), "indiscret");});
test("indiscreţie -> indiscreţ", function() {deepEqual( Stem("indiscreţie"), "indiscreţ");});
test("indiscutabil -> indiscut", function() {deepEqual( Stem("indiscutabil"), "indiscut");});
test("indisolubilă -> indisolubil", function() {deepEqual( Stem("indisolubilă"), "indisolubil");});
test("indispensabilă -> indispens", function() {deepEqual( Stem("indispensabilă"), "indispens");});
test("indisponibilitate -> indispon", function() {deepEqual( Stem("indisponibilitate"), "indispon");});
test("individ -> individ", function() {deepEqual( Stem("individ"), "individ");});
test("individual -> individual", function() {deepEqual( Stem("individual"), "individual");});
test("individuală -> individual", function() {deepEqual( Stem("individuală"), "individual");});
test("individuale -> individual", function() {deepEqual( Stem("individuale"), "individual");});
test("individualism -> individualist", function() {deepEqual( Stem("individualism"), "individualist");});
test("individualistă -> individualist", function() {deepEqual( Stem("individualistă"), "individualist");});
test("individualiste -> individualist", function() {deepEqual( Stem("individualiste"), "individualist");});
test("individualişti -> individualist", function() {deepEqual( Stem("individualişti"), "individualist");});
test("individualitate -> individual", function() {deepEqual( Stem("individualitate"), "individual");});
test("individualitatea -> individual", function() {deepEqual( Stem("individualitatea"), "individual");});
test("individului -> individ", function() {deepEqual( Stem("individului"), "individ");});
test("indivizi -> indiviz", function() {deepEqual( Stem("indivizi"), "indiviz");});
test("indivizii -> indiviz", function() {deepEqual( Stem("indivizii"), "indiviz");});
test("indivizilor -> indiviz", function() {deepEqual( Stem("indivizilor"), "indiviz");});
test("inductiv -> induct", function() {deepEqual( Stem("inductiv"), "induct");});
test("inductive -> induct", function() {deepEqual( Stem("inductive"), "induct");});
test("inducţiune -> induct", function() {deepEqual( Stem("inducţiune"), "induct");});
test("inducţiunea -> induct", function() {deepEqual( Stem("inducţiunea"), "induct");});
test("inducţiunii -> induct", function() {deepEqual( Stem("inducţiunii"), "induct");});
test("indulgent -> indulgent", function() {deepEqual( Stem("indulgent"), "indulgent");});
test("indulgentă -> indulgent", function() {deepEqual( Stem("indulgentă"), "indulgent");});
test("indulgenţa -> indulgenţ", function() {deepEqual( Stem("indulgenţa"), "indulgenţ");});
test("indulgenţă -> indulgenţ", function() {deepEqual( Stem("indulgenţă"), "indulgenţ");});
test("indulgenţi -> indulgenţ", function() {deepEqual( Stem("indulgenţi"), "indulgenţ");});
test("indusă -> indus", function() {deepEqual( Stem("indusă"), "indus");});
test("industrială -> industrial", function() {deepEqual( Stem("industrială"), "industrial");});
test("industriale -> industrial", function() {deepEqual( Stem("industriale"), "industrial");});
test("industriali -> industrial", function() {deepEqual( Stem("industriali"), "industrial");});
test("industriaşi -> industriaş", function() {deepEqual( Stem("industriaşi"), "industriaş");});
test("inedit -> ined", function() {deepEqual( Stem("inedit"), "ined");});
test("inedite -> ined", function() {deepEqual( Stem("inedite"), "ined");});
test("inefabilă -> inef", function() {deepEqual( Stem("inefabilă"), "inef");});
test("inel -> inel", function() {deepEqual( Stem("inel"), "inel");});
test("ineleganţa -> ineleganţ", function() {deepEqual( Stem("ineleganţa"), "ineleganţ");});
test("ineluctabilă -> ineluct", function() {deepEqual( Stem("ineluctabilă"), "ineluct");});
test("inept -> inept", function() {deepEqual( Stem("inept"), "inept");});
test("inerent -> inerent", function() {deepEqual( Stem("inerent"), "inerent");});
test("inerente -> inerent", function() {deepEqual( Stem("inerente"), "inerent");});
test("inert -> inert", function() {deepEqual( Stem("inert"), "inert");});
test("inerţia -> inerţ", function() {deepEqual( Stem("inerţia"), "inerţ");});
test("inerţie -> inerţ", function() {deepEqual( Stem("inerţie"), "inerţ");});
test("inevitabil -> inevit", function() {deepEqual( Stem("inevitabil"), "inevit");});
test("inevitabilă -> inevit", function() {deepEqual( Stem("inevitabilă"), "inevit");});
test("inevitabile -> inevit", function() {deepEqual( Stem("inevitabile"), "inevit");});
test("inexplicabilă -> inexplic", function() {deepEqual( Stem("inexplicabilă"), "inexplic");});
test("inexplicabile -> inexplic", function() {deepEqual( Stem("inexplicabile"), "inexplic");});
test("inexpugnabilă -> inexpugn", function() {deepEqual( Stem("inexpugnabilă"), "inexpugn");});
test("infam -> infam", function() {deepEqual( Stem("infam"), "infam");});
test("infame -> infam", function() {deepEqual( Stem("infame"), "infam");});
test("infamie -> infam", function() {deepEqual( Stem("infamie"), "infam");});
test("infamii -> infam", function() {deepEqual( Stem("infamii"), "infam");});
test("infamiile -> infam", function() {deepEqual( Stem("infamiile"), "infam");});
test("infanteria -> infanter", function() {deepEqual( Stem("infanteria"), "infanter");});
test("infanterie -> infanter", function() {deepEqual( Stem("infanterie"), "infanter");});
test("infanterii -> infanter", function() {deepEqual( Stem("infanterii"), "infanter");});
test("infanterişti -> infanterist", function() {deepEqual( Stem("infanterişti"), "infanterist");});
test("infanteriştii -> infanterist", function() {deepEqual( Stem("infanteriştii"), "infanterist");});
test("inferioară -> inferioar", function() {deepEqual( Stem("inferioară"), "inferioar");});
test("inferioare -> inferioar", function() {deepEqual( Stem("inferioare"), "inferioar");});
test("inferior -> inferior", function() {deepEqual( Stem("inferior"), "inferior");});
test("inferiori -> inferior", function() {deepEqual( Stem("inferiori"), "inferior");});
test("inferioritate -> inferior", function() {deepEqual( Stem("inferioritate"), "inferior");});
test("inferiorităţi -> inferior", function() {deepEqual( Stem("inferiorităţi"), "inferior");});
test("infern -> infern", function() {deepEqual( Stem("infern"), "infern");});
test("infim -> infim", function() {deepEqual( Stem("infim"), "infim");});
test("infimă -> infim", function() {deepEqual( Stem("infimă"), "infim");});
test("infinit -> infin", function() {deepEqual( Stem("infinit"), "infin");});
test("infinitate -> infin", function() {deepEqual( Stem("infinitate"), "infin");});
test("infinite -> infin", function() {deepEqual( Stem("infinite"), "infin");});
test("infinitele -> infin", function() {deepEqual( Stem("infinitele"), "infin");});
test("infinitezimală -> infinitezimal", function() {deepEqual( Stem("infinitezimală"), "infinitezimal");});
test("infinitezimale -> infinitezimal", function() {deepEqual( Stem("infinitezimale"), "infinitezimal");});
test("infinitul -> infin", function() {deepEqual( Stem("infinitul"), "infin");});
test("infinitului -> infin", function() {deepEqual( Stem("infinitului"), "infin");});
test("infinitum -> infinitum", function() {deepEqual( Stem("infinitum"), "infinitum");});
test("infirmitate -> infirm", function() {deepEqual( Stem("infirmitate"), "infirm");});
test("infirmităţi -> infirm", function() {deepEqual( Stem("infirmităţi"), "infirm");});
test("inflamabil -> inflam", function() {deepEqual( Stem("inflamabil"), "inflam");});
test("inflamant -> inflam", function() {deepEqual( Stem("inflamant"), "inflam");});
test("inflamat -> inflam", function() {deepEqual( Stem("inflamat"), "inflam");});
test("inflamată -> inflam", function() {deepEqual( Stem("inflamată"), "inflam");});
test("inflamatoare -> inflam", function() {deepEqual( Stem("inflamatoare"), "inflam");});
test("inflameze -> inflam", function() {deepEqual( Stem("inflameze"), "inflam");});
test("inflaţia -> inflaţ", function() {deepEqual( Stem("inflaţia"), "inflaţ");});
test("inflaţionist -> inflaţionist", function() {deepEqual( Stem("inflaţionist"), "inflaţionist");});
test("inflăcărate -> inflăcăr", function() {deepEqual( Stem("inflăcărate"), "inflăcăr");});
test("inflexibil -> inflex", function() {deepEqual( Stem("inflexibil"), "inflex");});
test("inflexibile -> inflexib", function() {deepEqual( Stem("inflexibile"), "inflexib");});
test("inflexiuni -> inflexiun", function() {deepEqual( Stem("inflexiuni"), "inflexiun");});
test("infloresc -> inflor", function() {deepEqual( Stem("infloresc"), "inflor");});
test("influent -> influent", function() {deepEqual( Stem("influent"), "influent");});
test("influentare -> influent", function() {deepEqual( Stem("influentare"), "influent");});
test("influenţa -> influenţ", function() {deepEqual( Stem("influenţa"), "influenţ");});
test("influenţase -> influenţ", function() {deepEqual( Stem("influenţase"), "influenţ");});
test("influenţat -> influenţ", function() {deepEqual( Stem("influenţat"), "influenţ");});
test("influenţă -> influenţ", function() {deepEqual( Stem("influenţă"), "influenţ");});
test("influenţeze -> influenţ", function() {deepEqual( Stem("influenţeze"), "influenţ");});
test("influenţi -> influenţ", function() {deepEqual( Stem("influenţi"), "influenţ");});
test("inform -> inform", function() {deepEqual( Stem("inform"), "inform");});
test("informarea -> inform", function() {deepEqual( Stem("informarea"), "inform");});
test("informaţi -> inform", function() {deepEqual( Stem("informaţi"), "inform");});
test("informă -> inform", function() {deepEqual( Stem("informă"), "inform");});
test("informează -> inform", function() {deepEqual( Stem("informează"), "inform");});
test("inginer -> inginer", function() {deepEqual( Stem("inginer"), "inginer");});
test("ingineri -> inginer", function() {deepEqual( Stem("ingineri"), "inginer");});
test("inginerul -> inginer", function() {deepEqual( Stem("inginerul"), "inginer");});
test("ingrat -> ingrat", function() {deepEqual( Stem("ingrat"), "ingrat");});
test("ingrată -> ingrat", function() {deepEqual( Stem("ingrată"), "ingrat");});
test("ingratitudine -> ingratitudin", function() {deepEqual( Stem("ingratitudine"), "ingratitudin");});
test("ingraţi -> ingraţ", function() {deepEqual( Stem("ingraţi"), "ingraţ");});
test("ingredient -> ingredient", function() {deepEqual( Stem("ingredient"), "ingredient");});
test("ingrediente -> ingredient", function() {deepEqual( Stem("ingrediente"), "ingredient");});
test("ingredientele -> ingredient", function() {deepEqual( Stem("ingredientele"), "ingredient");});
test("ingredientul -> ingredient", function() {deepEqual( Stem("ingredientul"), "ingredient");});
test("inima -> inim", function() {deepEqual( Stem("inima"), "inim");});
test("inimă -> inim", function() {deepEqual( Stem("inimă"), "inim");});
test("inimii -> inim", function() {deepEqual( Stem("inimii"), "inim");});
test("inimoase -> inim", function() {deepEqual( Stem("inimoase"), "inim");});
test("ininteligibil -> inintelig", function() {deepEqual( Stem("ininteligibil"), "inintelig");});
test("ininteligibili -> inintelig", function() {deepEqual( Stem("ininteligibili"), "inintelig");});
test("iniţială -> iniţial", function() {deepEqual( Stem("iniţială"), "iniţial");});
test("iniţialele -> iniţial", function() {deepEqual( Stem("iniţialele"), "iniţial");});
test("iniţiat -> iniţ", function() {deepEqual( Stem("iniţiat"), "iniţ");});
test("iniţiativa -> iniţ", function() {deepEqual( Stem("iniţiativa"), "iniţ");});
test("iniţiativă -> iniţ", function() {deepEqual( Stem("iniţiativă"), "iniţ");});
test("iniţiativei -> iniţiative", function() {deepEqual( Stem("iniţiativei"), "iniţiative");});
test("iniţiativele -> iniţ", function() {deepEqual( Stem("iniţiativele"), "iniţ");});
test("iniţiaţi -> iniţ", function() {deepEqual( Stem("iniţiaţi"), "iniţ");});
test("injecţia -> injecţ", function() {deepEqual( Stem("injecţia"), "injecţ");});
test("injecţie -> injecţ", function() {deepEqual( Stem("injecţie"), "injecţ");});
test("injecţii -> injecţ", function() {deepEqual( Stem("injecţii"), "injecţ");});
test("injurie -> injur", function() {deepEqual( Stem("injurie"), "injur");});
test("inocent -> inocent", function() {deepEqual( Stem("inocent"), "inocent");});
test("inocenţa -> inocenţ", function() {deepEqual( Stem("inocenţa"), "inocenţ");});
test("inocenţă -> inocenţ", function() {deepEqual( Stem("inocenţă"), "inocenţ");});
test("inocenţei -> inocenţe", function() {deepEqual( Stem("inocenţei"), "inocenţe");});
test("inofensivă -> inofens", function() {deepEqual( Stem("inofensivă"), "inofens");});
test("inoportună -> inoportun", function() {deepEqual( Stem("inoportună"), "inoportun");});
test("inovaţii -> inov", function() {deepEqual( Stem("inovaţii"), "inov");});
test("inovaţiile -> inov", function() {deepEqual( Stem("inovaţiile"), "inov");});
test("inscripţii -> inscripţ", function() {deepEqual( Stem("inscripţii"), "inscripţ");});
test("insensibilitate -> insens", function() {deepEqual( Stem("insensibilitate"), "insens");});
test("insereze -> inser", function() {deepEqual( Stem("insereze"), "inser");});
test("insesizabilul -> insesiz", function() {deepEqual( Stem("insesizabilul"), "insesiz");});
test("insigna -> insign", function() {deepEqual( Stem("insigna"), "insign");});
test("insinua -> insinu", function() {deepEqual( Stem("insinua"), "insinu");});
test("insinuările -> insinuăr", function() {deepEqual( Stem("insinuările"), "insinuăr");});
test("insinuează -> insinu", function() {deepEqual( Stem("insinuează"), "insinu");});
test("insinuezi -> insinu", function() {deepEqual( Stem("insinuezi"), "insinu");});
test("insipidă -> insipid", function() {deepEqual( Stem("insipidă"), "insipid");});
test("insist -> insist", function() {deepEqual( Stem("insist"), "insist");});
test("insista -> insist", function() {deepEqual( Stem("insista"), "insist");});
test("insistai -> insist", function() {deepEqual( Stem("insistai"), "insist");});
test("insistat -> insist", function() {deepEqual( Stem("insistat"), "insist");});
test("insistă -> insist", function() {deepEqual( Stem("insistă"), "insist");});
test("insistăm -> insist", function() {deepEqual( Stem("insistăm"), "insist");});
test("insistent -> insistent", function() {deepEqual( Stem("insistent"), "insistent");});
test("insistentă -> insistent", function() {deepEqual( Stem("insistentă"), "insistent");});
test("insistente -> insistent", function() {deepEqual( Stem("insistente"), "insistent");});
test("insistenţe -> insistenţ", function() {deepEqual( Stem("insistenţe"), "insistenţ");});
test("insistenţelor -> insistenţ", function() {deepEqual( Stem("insistenţelor"), "insistenţ");});
test("insistînd -> insistînd", function() {deepEqual( Stem("insistînd"), "insistînd");});
test("insitutor -> insitutor", function() {deepEqual( Stem("insitutor"), "insitutor");});
test("insolent -> insolent", function() {deepEqual( Stem("insolent"), "insolent");});
test("insolentă -> insolent", function() {deepEqual( Stem("insolentă"), "insolent");});
test("insolenţă -> insolenţ", function() {deepEqual( Stem("insolenţă"), "insolenţ");});
test("insolenţe -> insolenţ", function() {deepEqual( Stem("insolenţe"), "insolenţ");});
test("insolit -> insol", function() {deepEqual( Stem("insolit"), "insol");});
test("insolubil -> insolubil", function() {deepEqual( Stem("insolubil"), "insolubil");});
test("insolubilă -> insolubil", function() {deepEqual( Stem("insolubilă"), "insolubil");});
test("insolubile -> insolub", function() {deepEqual( Stem("insolubile"), "insolub");});
test("insolvabil -> insolv", function() {deepEqual( Stem("insolvabil"), "insolv");});
test("insolvabilă -> insolv", function() {deepEqual( Stem("insolvabilă"), "insolv");});
test("insolvabilitate -> insolv", function() {deepEqual( Stem("insolvabilitate"), "insolv");});
test("insomnie -> insomn", function() {deepEqual( Stem("insomnie"), "insomn");});
test("insomnii -> insomn", function() {deepEqual( Stem("insomnii"), "insomn");});
test("inspectând -> inspect", function() {deepEqual( Stem("inspectând"), "inspect");});
test("inspecţia -> inspecţ", function() {deepEqual( Stem("inspecţia"), "inspecţ");});
test("inspecţie -> inspecţ", function() {deepEqual( Stem("inspecţie"), "inspecţ");});
test("inspira -> inspir", function() {deepEqual( Stem("inspira"), "inspir");});
test("inspirase -> inspir", function() {deepEqual( Stem("inspirase"), "inspir");});
test("inspirat -> inspir", function() {deepEqual( Stem("inspirat"), "inspir");});
test("inspirată -> inspir", function() {deepEqual( Stem("inspirată"), "inspir");});
test("inspirator -> inspir", function() {deepEqual( Stem("inspirator"), "inspir");});
test("inspiratorul -> inspir", function() {deepEqual( Stem("inspiratorul"), "inspir");});
test("inspiraţia -> inspir", function() {deepEqual( Stem("inspiraţia"), "inspir");});
test("inspiraţiei -> inspir", function() {deepEqual( Stem("inspiraţiei"), "inspir");});
test("inspiră -> inspir", function() {deepEqual( Stem("inspiră"), "inspir");});
test("instantanee -> instantane", function() {deepEqual( Stem("instantanee"), "instantane");});
test("instanţele -> instanţ", function() {deepEqual( Stem("instanţele"), "instanţ");});
test("instaurarea -> instaur", function() {deepEqual( Stem("instaurarea"), "instaur");});
test("instinct -> instinct", function() {deepEqual( Stem("instinct"), "instinct");});
test("instinctele -> instinct", function() {deepEqual( Stem("instinctele"), "instinct");});
test("instinctelor -> instinct", function() {deepEqual( Stem("instinctelor"), "instinct");});
test("instinctului -> instinct", function() {deepEqual( Stem("instinctului"), "instinct");});
test("institut -> instit", function() {deepEqual( Stem("institut"), "instit");});
test("institutoare -> institutoar", function() {deepEqual( Stem("institutoare"), "institutoar");});
test("institutul -> instit", function() {deepEqual( Stem("institutul"), "instit");});
test("instituţiile -> instituţ", function() {deepEqual( Stem("instituţiile"), "instituţ");});
test("instructivă -> instruct", function() {deepEqual( Stem("instructivă"), "instruct");});
test("instrucţie -> instrucţ", function() {deepEqual( Stem("instrucţie"), "instrucţ");});
test("instrui -> instru", function() {deepEqual( Stem("instrui"), "instru");});
test("instruim -> instru", function() {deepEqual( Stem("instruim"), "instru");});
test("instruiţi -> instru", function() {deepEqual( Stem("instruiţi"), "instru");});
test("instrument -> instrument", function() {deepEqual( Stem("instrument"), "instrument");});
test("instrumente -> instrument", function() {deepEqual( Stem("instrumente"), "instrument");});
test("instrumentele -> instrument", function() {deepEqual( Stem("instrumentele"), "instrument");});
test("instrumentul -> instrument", function() {deepEqual( Stem("instrumentul"), "instrument");});
test("insubordonare -> insubordon", function() {deepEqual( Stem("insubordonare"), "insubordon");});
test("insuccese -> insucc", function() {deepEqual( Stem("insuccese"), "insucc");});
test("insuccesul -> insucces", function() {deepEqual( Stem("insuccesul"), "insucces");});
test("insuficientă -> insuficient", function() {deepEqual( Stem("insuficientă"), "insuficient");});
test("insuficiente -> insuficient", function() {deepEqual( Stem("insuficiente"), "insuficient");});
test("insuflare -> insufl", function() {deepEqual( Stem("insuflare"), "insufl");});
test("insulă -> insul", function() {deepEqual( Stem("insulă"), "insul");});
test("insultă -> insult", function() {deepEqual( Stem("insultă"), "insult");});
test("insuportabil -> insuport", function() {deepEqual( Stem("insuportabil"), "insuport");});
test("insuportabilă -> insuport", function() {deepEqual( Stem("insuportabilă"), "insuport");});
test("insuportabile -> insuport", function() {deepEqual( Stem("insuportabile"), "insuport");});
test("insuportabilelor -> insuport", function() {deepEqual( Stem("insuportabilelor"), "insuport");});
test("inşi -> inşi", function() {deepEqual( Stem("inşi"), "inşi");});
test("intact -> intact", function() {deepEqual( Stem("intact"), "intact");});
test("intactă -> intact", function() {deepEqual( Stem("intactă"), "intact");});
test("intangibile -> intangib", function() {deepEqual( Stem("intangibile"), "intangib");});
test("integrant -> integr", function() {deepEqual( Stem("integrant"), "integr");});
test("integrantă -> integr", function() {deepEqual( Stem("integrantă"), "integr");});
test("integrare -> integr", function() {deepEqual( Stem("integrare"), "integr");});
test("integrându -> integr", function() {deepEqual( Stem("integrându"), "integr");});
test("integrăm -> integr", function() {deepEqual( Stem("integrăm"), "integr");});
test("integrării -> integrăr", function() {deepEqual( Stem("integrării"), "integrăr");});
test("integrează -> integr", function() {deepEqual( Stem("integrează"), "integr");});
test("intelectual -> intelectual", function() {deepEqual( Stem("intelectual"), "intelectual");});
test("intelectuală -> intelectual", function() {deepEqual( Stem("intelectuală"), "intelectual");});
test("intelectuale -> intelectual", function() {deepEqual( Stem("intelectuale"), "intelectual");});
test("intelectualele -> intelectual", function() {deepEqual( Stem("intelectualele"), "intelectual");});
test("intelectuali -> intelectual", function() {deepEqual( Stem("intelectuali"), "intelectual");});
test("intelectualii -> intelectual", function() {deepEqual( Stem("intelectualii"), "intelectual");});
test("intelectualilor -> intelectual", function() {deepEqual( Stem("intelectualilor"), "intelectual");});
test("intelectualism -> intelectualist", function() {deepEqual( Stem("intelectualism"), "intelectualist");});
test("intelectualismului -> intelectualist", function() {deepEqual( Stem("intelectualismului"), "intelectualist");});
test("intelectualităţii -> intelectual", function() {deepEqual( Stem("intelectualităţii"), "intelectual");});
test("intelectualul -> intelectual", function() {deepEqual( Stem("intelectualul"), "intelectual");});
test("intelectualului -> intelectual", function() {deepEqual( Stem("intelectualului"), "intelectual");});
test("intelectul -> intelect", function() {deepEqual( Stem("intelectul"), "intelect");});
test("intelectului -> intelect", function() {deepEqual( Stem("intelectului"), "intelect");});
test("inteligent -> inteligent", function() {deepEqual( Stem("inteligent"), "inteligent");});
test("inteligentă -> inteligent", function() {deepEqual( Stem("inteligentă"), "inteligent");});
test("inteligenţa -> inteligenţ", function() {deepEqual( Stem("inteligenţa"), "inteligenţ");});
test("inteligenţă -> inteligenţ", function() {deepEqual( Stem("inteligenţă"), "inteligenţ");});
test("inteligenţe -> inteligenţ", function() {deepEqual( Stem("inteligenţe"), "inteligenţ");});
test("inteligenţei -> inteligenţe", function() {deepEqual( Stem("inteligenţei"), "inteligenţe");});
test("intendenţă -> intendenţ", function() {deepEqual( Stem("intendenţă"), "intendenţ");});
test("intens -> intens", function() {deepEqual( Stem("intens"), "intens");});
test("intensă -> intens", function() {deepEqual( Stem("intensă"), "intens");});
test("intensificarea -> intensific", function() {deepEqual( Stem("intensificarea"), "intensific");});
test("intensitate -> intens", function() {deepEqual( Stem("intensitate"), "intens");});
test("intensitatea -> intens", function() {deepEqual( Stem("intensitatea"), "intens");});
test("intensităţii -> intens", function() {deepEqual( Stem("intensităţii"), "intens");});
test("intenţia -> intenţ", function() {deepEqual( Stem("intenţia"), "intenţ");});
test("intenţie -> intenţ", function() {deepEqual( Stem("intenţie"), "intenţ");});
test("intenţii -> intenţ", function() {deepEqual( Stem("intenţii"), "intenţ");});
test("intenţiile -> intenţ", function() {deepEqual( Stem("intenţiile"), "intenţ");});
test("intenţional -> intenţional", function() {deepEqual( Stem("intenţional"), "intenţional");});
test("intenţionat -> intenţion", function() {deepEqual( Stem("intenţionat"), "intenţion");});
test("intenţionează -> intenţion", function() {deepEqual( Stem("intenţionează"), "intenţion");});
test("intenţiunea -> intent", function() {deepEqual( Stem("intenţiunea"), "intent");});
test("intenţiuni -> intent", function() {deepEqual( Stem("intenţiuni"), "intent");});
test("intercalată -> intercal", function() {deepEqual( Stem("intercalată"), "intercal");});
test("interes -> interes", function() {deepEqual( Stem("interes"), "interes");});
test("interesa -> interes", function() {deepEqual( Stem("interesa"), "interes");});
test("interesant -> interes", function() {deepEqual( Stem("interesant"), "interes");});
test("interesantă -> interes", function() {deepEqual( Stem("interesantă"), "interes");});
test("interesante -> interes", function() {deepEqual( Stem("interesante"), "interes");});
test("interesanţi -> interesanţ", function() {deepEqual( Stem("interesanţi"), "interesanţ");});
test("interesat -> interes", function() {deepEqual( Stem("interesat"), "interes");});
test("interesată -> interes", function() {deepEqual( Stem("interesată"), "interes");});
test("interesau -> interes", function() {deepEqual( Stem("interesau"), "interes");});
test("interese -> inter", function() {deepEqual( Stem("interese"), "inter");});
test("interesează -> interes", function() {deepEqual( Stem("interesează"), "interes");});
test("interesele -> inter", function() {deepEqual( Stem("interesele"), "inter");});
test("intereselor -> inter", function() {deepEqual( Stem("intereselor"), "inter");});
test("interesez -> interes", function() {deepEqual( Stem("interesez"), "interes");});
test("intereseze -> interes", function() {deepEqual( Stem("intereseze"), "interes");});
test("interesul -> interes", function() {deepEqual( Stem("interesul"), "interes");});
test("interesului -> interes", function() {deepEqual( Stem("interesului"), "interes");});
test("interimar -> interimar", function() {deepEqual( Stem("interimar"), "interimar");});
test("interioară -> interioar", function() {deepEqual( Stem("interioară"), "interioar");});
test("interioare -> interioar", function() {deepEqual( Stem("interioare"), "interioar");});
test("interior -> interior", function() {deepEqual( Stem("interior"), "interior");});
test("interiorizare -> interioriz", function() {deepEqual( Stem("interiorizare"), "interioriz");});
test("interiorul -> interior", function() {deepEqual( Stem("interiorul"), "interior");});
test("interjecţie -> interjecţ", function() {deepEqual( Stem("interjecţie"), "interjecţ");});
test("interjecţii -> interjecţ", function() {deepEqual( Stem("interjecţii"), "interjecţ");});
test("interjecţiile -> interjecţ", function() {deepEqual( Stem("interjecţiile"), "interjecţ");});
test("intermediare -> intermediar", function() {deepEqual( Stem("intermediare"), "intermediar");});
test("intermediu -> intermediu", function() {deepEqual( Stem("intermediu"), "intermediu");});
test("interminabil -> intermin", function() {deepEqual( Stem("interminabil"), "intermin");});
test("interminabilă -> intermin", function() {deepEqual( Stem("interminabilă"), "intermin");});
test("interminabile -> intermin", function() {deepEqual( Stem("interminabile"), "intermin");});
test("interminabilul -> intermin", function() {deepEqual( Stem("interminabilul"), "intermin");});
test("intern -> intern", function() {deepEqual( Stem("intern"), "intern");});
test("internaţi -> intern", function() {deepEqual( Stem("internaţi"), "intern");});
test("internaţională -> internaţional", function() {deepEqual( Stem("internaţională"), "internaţional");});
test("internă -> intern", function() {deepEqual( Stem("internă"), "intern");});
test("interne -> intern", function() {deepEqual( Stem("interne"), "intern");});
test("interogaţie -> interog", function() {deepEqual( Stem("interogaţie"), "interog");});
test("interpelat -> interpel", function() {deepEqual( Stem("interpelat"), "interpel");});
test("interpelează -> interpel", function() {deepEqual( Stem("interpelează"), "interpel");});
test("interpeleze -> interpel", function() {deepEqual( Stem("interpeleze"), "interpel");});
test("interplanetar -> interplanetar", function() {deepEqual( Stem("interplanetar"), "interplanetar");});
test("interpretare -> interpret", function() {deepEqual( Stem("interpretare"), "interpret");});
test("interpretarea -> interpret", function() {deepEqual( Stem("interpretarea"), "interpret");});
test("interpretasem -> interpret", function() {deepEqual( Stem("interpretasem"), "interpret");});
test("interpretat -> interpret", function() {deepEqual( Stem("interpretat"), "interpret");});
test("interpretate -> interpret", function() {deepEqual( Stem("interpretate"), "interpret");});
test("interpretând -> interpret", function() {deepEqual( Stem("interpretând"), "interpret");});
test("interpretându -> interpret", function() {deepEqual( Stem("interpretându"), "interpret");});
test("interpretăm -> interpret", function() {deepEqual( Stem("interpretăm"), "interpret");});
test("interpretări -> interpretăr", function() {deepEqual( Stem("interpretări"), "interpretăr");});
test("interpretările -> interpretăr", function() {deepEqual( Stem("interpretările"), "interpretăr");});
test("interpretează -> interpret", function() {deepEqual( Stem("interpretează"), "interpret");});
test("interpună -> interpun", function() {deepEqual( Stem("interpună"), "interpun");});
test("intersecţia -> intersecţ", function() {deepEqual( Stem("intersecţia"), "intersecţ");});
test("intersecţiunii -> intersect", function() {deepEqual( Stem("intersecţiunii"), "intersect");});
test("intersecţiunile -> intersect", function() {deepEqual( Stem("intersecţiunile"), "intersect");});
test("intersecţiunilor -> intersect", function() {deepEqual( Stem("intersecţiunilor"), "intersect");});
test("interurbane -> interurban", function() {deepEqual( Stem("interurbane"), "interurban");});
test("interval -> interval", function() {deepEqual( Stem("interval"), "interval");});
test("intervale -> interval", function() {deepEqual( Stem("intervale"), "interval");});
test("intervenea -> interven", function() {deepEqual( Stem("intervenea"), "interven");});
test("interveni -> interven", function() {deepEqual( Stem("interveni"), "interven");});
test("intervenim -> interven", function() {deepEqual( Stem("intervenim"), "interven");});
test("intervenit -> interven", function() {deepEqual( Stem("intervenit"), "interven");});
test("intervenţia -> intervenţ", function() {deepEqual( Stem("intervenţia"), "intervenţ");});
test("intervenţionist -> intervenţionist", function() {deepEqual( Stem("intervenţionist"), "intervenţionist");});
test("intervertesc -> intervert", function() {deepEqual( Stem("intervertesc"), "intervert");});
test("intervertire -> intervert", function() {deepEqual( Stem("intervertire"), "intervert");});
test("intervertit -> intervert", function() {deepEqual( Stem("intervertit"), "intervert");});
test("intervin -> intervin", function() {deepEqual( Stem("intervin"), "intervin");});
test("intervină -> intervin", function() {deepEqual( Stem("intervină"), "intervin");});
test("intervine -> intervin", function() {deepEqual( Stem("intervine"), "intervin");});
test("interzice -> interz", function() {deepEqual( Stem("interzice"), "interz");});
test("interzicem -> interzic", function() {deepEqual( Stem("interzicem"), "interzic");});
test("interzis -> interzis", function() {deepEqual( Stem("interzis"), "interzis");});
test("intestine -> intestin", function() {deepEqual( Stem("intestine"), "intestin");});
test("intestinelor -> intestin", function() {deepEqual( Stem("intestinelor"), "intestin");});
test("intim -> intim", function() {deepEqual( Stem("intim"), "intim");});
test("intimă -> intim", function() {deepEqual( Stem("intimă"), "intim");});
test("intime -> intim", function() {deepEqual( Stem("intime"), "intim");});
test("intimidaseră -> intimid", function() {deepEqual( Stem("intimidaseră"), "intimid");});
test("intimidată -> intimid", function() {deepEqual( Stem("intimidată"), "intimid");});
test("intimidează -> intimid", function() {deepEqual( Stem("intimidează"), "intimid");});
test("intimitatea -> intim", function() {deepEqual( Stem("intimitatea"), "intim");});
test("intimităţii -> intim", function() {deepEqual( Stem("intimităţii"), "intim");});
test("intitulat -> intitul", function() {deepEqual( Stem("intitulat"), "intitul");});
test("intolerante -> intoler", function() {deepEqual( Stem("intolerante"), "intoler");});
test("intoleranţa -> intoleranţ", function() {deepEqual( Stem("intoleranţa"), "intoleranţ");});
test("intoleranţă -> intoleranţ", function() {deepEqual( Stem("intoleranţă"), "intoleranţ");});
test("intonaţie -> inton", function() {deepEqual( Stem("intonaţie"), "inton");});
test("intonaţii -> inton", function() {deepEqual( Stem("intonaţii"), "inton");});
test("intonează -> inton", function() {deepEqual( Stem("intonează"), "inton");});
test("intra -> intra", function() {deepEqual( Stem("intra"), "intra");});
test("intram -> intram", function() {deepEqual( Stem("intram"), "intram");});
test("intransigenţă -> intransigenţ", function() {deepEqual( Stem("intransigenţă"), "intransigenţ");});
test("intrare -> intrar", function() {deepEqual( Stem("intrare"), "intrar");});
test("intrarea -> intrar", function() {deepEqual( Stem("intrarea"), "intrar");});
test("intrat -> intrat", function() {deepEqual( Stem("intrat"), "intrat");});
test("intrată -> intrat", function() {deepEqual( Stem("intrată"), "intrat");});
test("intraţi -> intraţ", function() {deepEqual( Stem("intraţi"), "intraţ");});
test("intrau -> intrau", function() {deepEqual( Stem("intrau"), "intrau");});
test("intrând -> intrând", function() {deepEqual( Stem("intrând"), "intrând");});
test("intră -> intră", function() {deepEqual( Stem("intră"), "intră");});
test("intrăm -> intrăm", function() {deepEqual( Stem("intrăm"), "intrăm");});
test("intrării -> intrăr", function() {deepEqual( Stem("intrării"), "intrăr");});
test("intrările -> intrăr", function() {deepEqual( Stem("intrările"), "intrăr");});
test("intre -> intre", function() {deepEqual( Stem("intre"), "intre");});
test("intrigată -> intrig", function() {deepEqual( Stem("intrigată"), "intrig");});
test("intrigaţi -> intrig", function() {deepEqual( Stem("intrigaţi"), "intrig");});
test("intrigile -> intrig", function() {deepEqual( Stem("intrigile"), "intrig");});
test("introduc -> introduc", function() {deepEqual( Stem("introduc"), "introduc");});
test("introduce -> introduc", function() {deepEqual( Stem("introduce"), "introduc");});
test("introducem -> introduc", function() {deepEqual( Stem("introducem"), "introduc");});
test("introducere -> introduc", function() {deepEqual( Stem("introducere"), "introduc");});
test("introducerea -> introduc", function() {deepEqual( Stem("introducerea"), "introduc");});
test("introducerii -> introducer", function() {deepEqual( Stem("introducerii"), "introducer");});
test("introdus -> introdus", function() {deepEqual( Stem("introdus"), "introdus");});
test("intru -> intru", function() {deepEqual( Stem("intru"), "intru");});
test("intrus -> intrus", function() {deepEqual( Stem("intrus"), "intrus");});
test("intrusiunea -> intrusiun", function() {deepEqual( Stem("intrusiunea"), "intrusiun");});
test("intrusul -> intrus", function() {deepEqual( Stem("intrusul"), "intrus");});
test("intrusului -> intrus", function() {deepEqual( Stem("intrusului"), "intrus");});
test("intruşi -> intruş", function() {deepEqual( Stem("intruşi"), "intruş");});
test("intruziune -> intruziun", function() {deepEqual( Stem("intruziune"), "intruziun");});
test("intruziuni -> intruziun", function() {deepEqual( Stem("intruziuni"), "intruziun");});
test("intui -> intu", function() {deepEqual( Stem("intui"), "intu");});
test("intuieşte -> intui", function() {deepEqual( Stem("intuieşte"), "intui");});
test("intuise -> intuis", function() {deepEqual( Stem("intuise"), "intuis");});
test("intuit -> intuit", function() {deepEqual( Stem("intuit"), "intuit");});
test("intuitiv -> intuit", function() {deepEqual( Stem("intuitiv"), "intuit");});
test("intuitivă -> intuit", function() {deepEqual( Stem("intuitivă"), "intuit");});
test("intuitive -> intuit", function() {deepEqual( Stem("intuitive"), "intuit");});
test("intuiţia -> intuiţ", function() {deepEqual( Stem("intuiţia"), "intuiţ");});
test("intuiţie -> intuiţ", function() {deepEqual( Stem("intuiţie"), "intuiţ");});
test("intuiţiei -> intu", function() {deepEqual( Stem("intuiţiei"), "intu");});
test("intuiţionism -> intuiţionist", function() {deepEqual( Stem("intuiţionism"), "intuiţionist");});
test("intuiţionist -> intuiţionist", function() {deepEqual( Stem("intuiţionist"), "intuiţionist");});
test("intuiţionistă -> intuiţionist", function() {deepEqual( Stem("intuiţionistă"), "intuiţionist");});
test("intuiţioniste -> intuiţionist", function() {deepEqual( Stem("intuiţioniste"), "intuiţionist");});
test("intuiţionişti -> intuiţionist", function() {deepEqual( Stem("intuiţionişti"), "intuiţionist");});
test("inumană -> inuman", function() {deepEqual( Stem("inumană"), "inuman");});
test("inundată -> inund", function() {deepEqual( Stem("inundată"), "inund");});
test("inundaţie -> inund", function() {deepEqual( Stem("inundaţie"), "inund");});
test("inundaţiei -> inund", function() {deepEqual( Stem("inundaţiei"), "inund");});
test("inutil -> inutil", function() {deepEqual( Stem("inutil"), "inutil");});
test("inutilă -> inutil", function() {deepEqual( Stem("inutilă"), "inutil");});
test("inutile -> inut", function() {deepEqual( Stem("inutile"), "inut");});
test("inutilităţilor -> inutil", function() {deepEqual( Stem("inutilităţilor"), "inutil");});
test("invariabilităţi -> invar", function() {deepEqual( Stem("invariabilităţi"), "invar");});
test("invariabilităţii -> invar", function() {deepEqual( Stem("invariabilităţii"), "invar");});
test("inventat -> invent", function() {deepEqual( Stem("inventat"), "invent");});
test("inventată -> invent", function() {deepEqual( Stem("inventată"), "invent");});
test("inventate -> invent", function() {deepEqual( Stem("inventate"), "invent");});
test("inventează -> invent", function() {deepEqual( Stem("inventează"), "invent");});
test("invenţia -> invenţ", function() {deepEqual( Stem("invenţia"), "invenţ");});
test("invenţiile -> invenţ", function() {deepEqual( Stem("invenţiile"), "invenţ");});
test("invers -> invers", function() {deepEqual( Stem("invers"), "invers");});
test("inversă -> invers", function() {deepEqual( Stem("inversă"), "invers");});
test("invidiază -> invidiaz", function() {deepEqual( Stem("invidiază"), "invidiaz");});
test("invidie -> invid", function() {deepEqual( Stem("invidie"), "invid");});
test("invit -> invit", function() {deepEqual( Stem("invit"), "invit");});
test("invita -> invit", function() {deepEqual( Stem("invita"), "invit");});
test("invitasem -> invit", function() {deepEqual( Stem("invitasem"), "invit");});
test("invitat -> invit", function() {deepEqual( Stem("invitat"), "invit");});
test("invitată -> invit", function() {deepEqual( Stem("invitată"), "invit");});
test("invitaţi -> invit", function() {deepEqual( Stem("invitaţi"), "invit");});
test("invitaţia -> invit", function() {deepEqual( Stem("invitaţia"), "invit");});
test("invitaţie -> invit", function() {deepEqual( Stem("invitaţie"), "invit");});
test("invitaţii -> invit", function() {deepEqual( Stem("invitaţii"), "invit");});
test("invitând -> invit", function() {deepEqual( Stem("invitând"), "invit");});
test("invitându -> invit", function() {deepEqual( Stem("invitându"), "invit");});
test("invită -> invit", function() {deepEqual( Stem("invită"), "invit");});
test("inviţi -> inviţ", function() {deepEqual( Stem("inviţi"), "inviţ");});
test("invizibile -> invizib", function() {deepEqual( Stem("invizibile"), "invizib");});
test("invocare -> invoc", function() {deepEqual( Stem("invocare"), "invoc");});
test("invocarea -> invoc", function() {deepEqual( Stem("invocarea"), "invoc");});
test("invocat -> invoc", function() {deepEqual( Stem("invocat"), "invoc");});
test("invocate -> invoc", function() {deepEqual( Stem("invocate"), "invoc");});
test("invocând -> invoc", function() {deepEqual( Stem("invocând"), "invoc");});
test("invocăm -> invoc", function() {deepEqual( Stem("invocăm"), "invoc");});
test("invocări -> invocăr", function() {deepEqual( Stem("invocări"), "invocăr");});
test("involuntară -> involunt", function() {deepEqual( Stem("involuntară"), "involunt");});
test("invulnerabil -> invulner", function() {deepEqual( Stem("invulnerabil"), "invulner");});
test("inzister -> inzister", function() {deepEqual( Stem("inzister"), "inzister");});
test("ioana -> ioan", function() {deepEqual( Stem("ioana"), "ioan");});
test("ioanei -> ioane", function() {deepEqual( Stem("ioanei"), "ioane");});
test("ion -> ion", function() {deepEqual( Stem("ion"), "ion");});
test("ionel -> ionel", function() {deepEqual( Stem("ionel"), "ionel");});
test("ionescu -> ionescu", function() {deepEqual( Stem("ionescu"), "ionescu");});
test("iorgu -> iorgu", function() {deepEqual( Stem("iorgu"), "iorgu");});
test("iorgulescu -> iorgulescu", function() {deepEqual( Stem("iorgulescu"), "iorgulescu");});
test("iosef -> iosef", function() {deepEqual( Stem("iosef"), "iosef");});
test("ipocrit -> ipocr", function() {deepEqual( Stem("ipocrit"), "ipocr");});
test("ipocrită -> ipocr", function() {deepEqual( Stem("ipocrită"), "ipocr");});
test("ipocriţi -> ipocr", function() {deepEqual( Stem("ipocriţi"), "ipocr");});
test("ipocrizie -> ipocriz", function() {deepEqual( Stem("ipocrizie"), "ipocriz");});
test("ipoteza -> ipotez", function() {deepEqual( Stem("ipoteza"), "ipotez");});
test("ipoteză -> ipotez", function() {deepEqual( Stem("ipoteză"), "ipotez");});
test("ipoteze -> ipot", function() {deepEqual( Stem("ipoteze"), "ipot");});
test("ipotezele -> ipot", function() {deepEqual( Stem("ipotezele"), "ipot");});
test("iradia -> irad", function() {deepEqual( Stem("iradia"), "irad");});
test("iradiază -> iradiaz", function() {deepEqual( Stem("iradiază"), "iradiaz");});
test("iraţional -> iraţional", function() {deepEqual( Stem("iraţional"), "iraţional");});
test("ireale -> ireal", function() {deepEqual( Stem("ireale"), "ireal");});
test("irealizabil -> irealiz", function() {deepEqual( Stem("irealizabil"), "irealiz");});
test("ireductibil -> ireduct", function() {deepEqual( Stem("ireductibil"), "ireduct");});
test("ireductibilă -> ireduct", function() {deepEqual( Stem("ireductibilă"), "ireduct");});
test("iremediabil -> iremed", function() {deepEqual( Stem("iremediabil"), "iremed");});
test("iremediabilă -> iremed", function() {deepEqual( Stem("iremediabilă"), "iremed");});
test("iremediabile -> iremed", function() {deepEqual( Stem("iremediabile"), "iremed");});
test("ireparabilul -> irepar", function() {deepEqual( Stem("ireparabilul"), "irepar");});
test("ireproşabilă -> ireproş", function() {deepEqual( Stem("ireproşabilă"), "ireproş");});
test("irevocabilul -> irevoc", function() {deepEqual( Stem("irevocabilul"), "irevoc");});
test("irezistibil -> irezist", function() {deepEqual( Stem("irezistibil"), "irezist");});
test("irezistibilă -> irezist", function() {deepEqual( Stem("irezistibilă"), "irezist");});
test("irigator -> irig", function() {deepEqual( Stem("irigator"), "irig");});
test("irimescu -> irimescu", function() {deepEqual( Stem("irimescu"), "irimescu");});
test("iritabil -> irit", function() {deepEqual( Stem("iritabil"), "irit");});
test("iritabilă -> irit", function() {deepEqual( Stem("iritabilă"), "irit");});
test("iritabili -> irit", function() {deepEqual( Stem("iritabili"), "irit");});
test("iritant -> irit", function() {deepEqual( Stem("iritant"), "irit");});
test("iritante -> irit", function() {deepEqual( Stem("iritante"), "irit");});
test("iritată -> irit", function() {deepEqual( Stem("iritată"), "irit");});
test("iritaţia -> irit", function() {deepEqual( Stem("iritaţia"), "irit");});
test("iritaţie -> irit", function() {deepEqual( Stem("iritaţie"), "irit");});
test("ironic -> iron", function() {deepEqual( Stem("ironic"), "iron");});
test("ironice -> iron", function() {deepEqual( Stem("ironice"), "iron");});
test("ironici -> iron", function() {deepEqual( Stem("ironici"), "iron");});
test("ironie -> iron", function() {deepEqual( Stem("ironie"), "iron");});
test("ironii -> iron", function() {deepEqual( Stem("ironii"), "iron");});
test("ironiile -> iron", function() {deepEqual( Stem("ironiile"), "iron");});
test("ironizată -> ironiz", function() {deepEqual( Stem("ironizată"), "ironiz");});
test("irrtum -> irrtum", function() {deepEqual( Stem("irrtum"), "irrtum");});
test("irumpe -> irump", function() {deepEqual( Stem("irumpe"), "irump");});
test("irumpea -> irump", function() {deepEqual( Stem("irumpea"), "irump");});
test("iscat -> iscat", function() {deepEqual( Stem("iscat"), "iscat");});
test("iscată -> iscat", function() {deepEqual( Stem("iscată"), "iscat");});
test("iscând -> iscând", function() {deepEqual( Stem("iscând"), "iscând");});
test("iscălea -> iscăl", function() {deepEqual( Stem("iscălea"), "iscăl");});
test("iscălească -> iscăl", function() {deepEqual( Stem("iscălească"), "iscăl");});
test("iscălesc -> iscăl", function() {deepEqual( Stem("iscălesc"), "iscăl");});
test("iscăleşte -> iscăl", function() {deepEqual( Stem("iscăleşte"), "iscăl");});
test("iscăleşti -> iscăl", function() {deepEqual( Stem("iscăleşti"), "iscăl");});
test("iscoditor -> iscod", function() {deepEqual( Stem("iscoditor"), "iscod");});
test("iscusit -> iscus", function() {deepEqual( Stem("iscusit"), "iscus");});
test("ison -> ison", function() {deepEqual( Stem("ison"), "ison");});
test("isoscel -> isoscel", function() {deepEqual( Stem("isoscel"), "isoscel");});
test("ispirescu -> ispirescu", function() {deepEqual( Stem("ispirescu"), "ispirescu");});
test("ispita -> ispit", function() {deepEqual( Stem("ispita"), "ispit");});
test("ispitea -> ispit", function() {deepEqual( Stem("ispitea"), "ispit");});
test("ispiteşte -> ispit", function() {deepEqual( Stem("ispiteşte"), "ispit");});
test("ispitit -> ispit", function() {deepEqual( Stem("ispitit"), "ispit");});
test("ispititor -> ispit", function() {deepEqual( Stem("ispititor"), "ispit");});
test("ispitiţi -> ispit", function() {deepEqual( Stem("ispitiţi"), "ispit");});
test("ispravă -> isprav", function() {deepEqual( Stem("ispravă"), "isprav");});
test("isprăvi -> isprăv", function() {deepEqual( Stem("isprăvi"), "isprăv");});
test("isprăvile -> isprăv", function() {deepEqual( Stem("isprăvile"), "isprăv");});
test("isprăvit -> isprăv", function() {deepEqual( Stem("isprăvit"), "isprăv");});
test("isptit -> isptit", function() {deepEqual( Stem("isptit"), "isptit");});
test("isterice -> ister", function() {deepEqual( Stem("isterice"), "ister");});
test("isteţe -> isteţ", function() {deepEqual( Stem("isteţe"), "isteţ");});
test("istoria -> istor", function() {deepEqual( Stem("istoria"), "istor");});
test("istoric -> istor", function() {deepEqual( Stem("istoric"), "istor");});
test("istorică -> istor", function() {deepEqual( Stem("istorică"), "istor");});
test("istorice -> istor", function() {deepEqual( Stem("istorice"), "istor");});
test("istoriceşte -> istoric", function() {deepEqual( Stem("istoriceşte"), "istoric");});
test("istoricii -> istor", function() {deepEqual( Stem("istoricii"), "istor");});
test("istorie -> istor", function() {deepEqual( Stem("istorie"), "istor");});
test("istoriei -> istor", function() {deepEqual( Stem("istoriei"), "istor");});
test("istoriile -> istor", function() {deepEqual( Stem("istoriile"), "istor");});
test("istorioară -> istorioar", function() {deepEqual( Stem("istorioară"), "istorioar");});
test("istovire -> istov", function() {deepEqual( Stem("istovire"), "istov");});
test("istovirea -> istov", function() {deepEqual( Stem("istovirea"), "istov");});
test("istoviri -> istovir", function() {deepEqual( Stem("istoviri"), "istovir");});
test("istovit -> istov", function() {deepEqual( Stem("istovit"), "istov");});
test("istovită -> istov", function() {deepEqual( Stem("istovită"), "istov");});
test("istovitoare -> istov", function() {deepEqual( Stem("istovitoare"), "istov");});
test("istovitor -> istov", function() {deepEqual( Stem("istovitor"), "istov");});
test("isus -> isus", function() {deepEqual( Stem("isus"), "isus");});
test("italia -> ital", function() {deepEqual( Stem("italia"), "ital");});
test("italiei -> ital", function() {deepEqual( Stem("italiei"), "ital");});
test("italieni -> italien", function() {deepEqual( Stem("italieni"), "italien");});
test("italienii -> italien", function() {deepEqual( Stem("italienii"), "italien");});
test("iţari -> iţar", function() {deepEqual( Stem("iţari"), "iţar");});
test("iubea -> iub", function() {deepEqual( Stem("iubea"), "iub");});
test("iubeam -> iubeam", function() {deepEqual( Stem("iubeam"), "iubeam");});
test("iubească -> iubeasc", function() {deepEqual( Stem("iubească"), "iubeasc");});
test("iubesc -> iubesc", function() {deepEqual( Stem("iubesc"), "iubesc");});
test("iubeşte -> iubeşt", function() {deepEqual( Stem("iubeşte"), "iubeşt");});
test("iubeşti -> iubeşt", function() {deepEqual( Stem("iubeşti"), "iubeşt");});
test("iubi -> iub", function() {deepEqual( Stem("iubi"), "iub");});
test("iubire -> iubir", function() {deepEqual( Stem("iubire"), "iubir");});
test("iubirea -> iubir", function() {deepEqual( Stem("iubirea"), "iubir");});
test("iubiri -> iubir", function() {deepEqual( Stem("iubiri"), "iubir");});
test("iubirii -> iubir", function() {deepEqual( Stem("iubirii"), "iubir");});
test("iubirile -> iubir", function() {deepEqual( Stem("iubirile"), "iubir");});
test("iubise -> iubis", function() {deepEqual( Stem("iubise"), "iubis");});
test("iubit -> iubit", function() {deepEqual( Stem("iubit"), "iubit");});
test("iubită -> iubit", function() {deepEqual( Stem("iubită"), "iubit");});
test("iubite -> iubit", function() {deepEqual( Stem("iubite"), "iubit");});
test("iubitori -> iubit", function() {deepEqual( Stem("iubitori"), "iubit");});
test("iubitorii -> iubit", function() {deepEqual( Stem("iubitorii"), "iubit");});
test("iuda -> iud", function() {deepEqual( Stem("iuda"), "iud");});
test("iulie -> iul", function() {deepEqual( Stem("iulie"), "iul");});
test("iuliu -> iuliu", function() {deepEqual( Stem("iuliu"), "iuliu");});
test("iunie -> iun", function() {deepEqual( Stem("iunie"), "iun");});
test("iureş -> iureş", function() {deepEqual( Stem("iureş"), "iureş");});
test("iute -> iut", function() {deepEqual( Stem("iute"), "iut");});
test("iuţeala -> iuţeal", function() {deepEqual( Stem("iuţeala"), "iuţeal");});
test("iuţeală -> iuţeal", function() {deepEqual( Stem("iuţeală"), "iuţeal");});
test("iuţi -> iuţ", function() {deepEqual( Stem("iuţi"), "iuţ");});
test("iveală -> iveal", function() {deepEqual( Stem("iveală"), "iveal");});
test("ivesc -> ivesc", function() {deepEqual( Stem("ivesc"), "ivesc");});
test("ivi -> ivi", function() {deepEqual( Stem("ivi"), "ivi");});
test("ivit -> ivit", function() {deepEqual( Stem("ivit"), "ivit");});
test("iviţi -> iviţ", function() {deepEqual( Stem("iviţi"), "iviţ");});
test("ivoriu -> ivoriu", function() {deepEqual( Stem("ivoriu"), "ivoriu");});
test("iz -> iz", function() {deepEqual( Stem("iz"), "iz");});
test("izbânda -> izbând", function() {deepEqual( Stem("izbânda"), "izbând");});
test("izbândă -> izbând", function() {deepEqual( Stem("izbândă"), "izbând");});
test("izbândesc -> izbând", function() {deepEqual( Stem("izbândesc"), "izbând");});
test("izbânzile -> izbânz", function() {deepEqual( Stem("izbânzile"), "izbânz");});
test("izbăvirea -> izbăv", function() {deepEqual( Stem("izbăvirea"), "izbăv");});
test("izbăvit -> izbăv", function() {deepEqual( Stem("izbăvit"), "izbăv");});
test("izbea -> izbe", function() {deepEqual( Stem("izbea"), "izbe");});
test("izbească -> izbeasc", function() {deepEqual( Stem("izbească"), "izbeasc");});
test("izbeau -> izbeau", function() {deepEqual( Stem("izbeau"), "izbeau");});
test("izbelişte -> izbelişt", function() {deepEqual( Stem("izbelişte"), "izbelişt");});
test("izbesc -> izbesc", function() {deepEqual( Stem("izbesc"), "izbesc");});
test("izbeşte -> izbeşt", function() {deepEqual( Stem("izbeşte"), "izbeşt");});
test("izbi -> izbi", function() {deepEqual( Stem("izbi"), "izbi");});
test("izbind -> izbind", function() {deepEqual( Stem("izbind"), "izbind");});
test("izbindu -> izbindu", function() {deepEqual( Stem("izbindu"), "izbindu");});
test("izbit -> izbit", function() {deepEqual( Stem("izbit"), "izbit");});
test("izbită -> izbit", function() {deepEqual( Stem("izbită"), "izbit");});
test("izbitor -> izbit", function() {deepEqual( Stem("izbitor"), "izbit");});
test("izbitura -> izbitur", function() {deepEqual( Stem("izbitura"), "izbitur");});
test("izbitură -> izbit", function() {deepEqual( Stem("izbitură"), "izbit");});
test("izbiturile -> izbitur", function() {deepEqual( Stem("izbiturile"), "izbitur");});
test("izbiţi -> izbiţ", function() {deepEqual( Stem("izbiţi"), "izbiţ");});
test("izbîndă -> izbînd", function() {deepEqual( Stem("izbîndă"), "izbînd");});
test("izbîndească -> izbînd", function() {deepEqual( Stem("izbîndească"), "izbînd");});
test("izbîndesc -> izbînd", function() {deepEqual( Stem("izbîndesc"), "izbînd");});
test("izbîndeşte -> izbînd", function() {deepEqual( Stem("izbîndeşte"), "izbînd");});
test("izbîndi -> izbînd", function() {deepEqual( Stem("izbîndi"), "izbînd");});
test("izbîndit -> izbînd", function() {deepEqual( Stem("izbîndit"), "izbînd");});
test("izbînzi -> izbînz", function() {deepEqual( Stem("izbînzi"), "izbînz");});
test("izbucnească -> izbucn", function() {deepEqual( Stem("izbucnească"), "izbucn");});
test("izbucnesc -> izbucn", function() {deepEqual( Stem("izbucnesc"), "izbucn");});
test("izbucneşte -> izbucn", function() {deepEqual( Stem("izbucneşte"), "izbucn");});
test("izbucni -> izbucn", function() {deepEqual( Stem("izbucni"), "izbucn");});
test("izbucnind -> izbucn", function() {deepEqual( Stem("izbucnind"), "izbucn");});
test("izbucnire -> izbucn", function() {deepEqual( Stem("izbucnire"), "izbucn");});
test("izbucnirea -> izbucn", function() {deepEqual( Stem("izbucnirea"), "izbucn");});
test("izbucniri -> izbucnir", function() {deepEqual( Stem("izbucniri"), "izbucnir");});
test("izbucnirile -> izbucnir", function() {deepEqual( Stem("izbucnirile"), "izbucnir");});
test("izbucnit -> izbucn", function() {deepEqual( Stem("izbucnit"), "izbucn");});
test("izbutea -> izbut", function() {deepEqual( Stem("izbutea"), "izbut");});
test("izbuteam -> izbut", function() {deepEqual( Stem("izbuteam"), "izbut");});
test("izbutească -> izbut", function() {deepEqual( Stem("izbutească"), "izbut");});
test("izbuteau -> izbut", function() {deepEqual( Stem("izbuteau"), "izbut");});
test("izbutesc -> izbut", function() {deepEqual( Stem("izbutesc"), "izbut");});
test("izbuteşte -> izbut", function() {deepEqual( Stem("izbuteşte"), "izbut");});
test("izbuti -> izbut", function() {deepEqual( Stem("izbuti"), "izbut");});
test("izbutind -> izbut", function() {deepEqual( Stem("izbutind"), "izbut");});
test("izbutisem -> izbut", function() {deepEqual( Stem("izbutisem"), "izbut");});
test("izbutiseră -> izbut", function() {deepEqual( Stem("izbutiseră"), "izbut");});
test("izbutit -> izbut", function() {deepEqual( Stem("izbutit"), "izbut");});
test("izmană -> izman", function() {deepEqual( Stem("izmană"), "izman");});
test("izmenindu -> izmen", function() {deepEqual( Stem("izmenindu"), "izmen");});
test("izmenit -> izmen", function() {deepEqual( Stem("izmenit"), "izmen");});
test("izmenite -> izmen", function() {deepEqual( Stem("izmenite"), "izmen");});
test("izola -> izol", function() {deepEqual( Stem("izola"), "izol");});
test("izolate -> izol", function() {deepEqual( Stem("izolate"), "izol");});
test("izolaţi -> izol", function() {deepEqual( Stem("izolaţi"), "izol");});
test("izolări -> izolăr", function() {deepEqual( Stem("izolări"), "izolăr");});
test("izvoarele -> izvoar", function() {deepEqual( Stem("izvoarele"), "izvoar");});
test("izvor -> izvor", function() {deepEqual( Stem("izvor"), "izvor");});
test("izvorâtă -> izvorât", function() {deepEqual( Stem("izvorâtă"), "izvorât");});
test("izvorul -> izvor", function() {deepEqual( Stem("izvorul"), "izvor");});
test("îi -> îi", function() {deepEqual( Stem("îi"), "îi");});
test("îl -> îl", function() {deepEqual( Stem("îl"), "îl");});
test("îmbată -> îmbat", function() {deepEqual( Stem("îmbată"), "îmbat");});
test("îmbătătoare -> îmbăt", function() {deepEqual( Stem("îmbătătoare"), "îmbăt");});
test("îmbătrânesc -> îmbătrân", function() {deepEqual( Stem("îmbătrânesc"), "îmbătrân");});
test("îmbătrâni -> îmbătrân", function() {deepEqual( Stem("îmbătrâni"), "îmbătrân");});
test("îmbătrânire -> îmbătrân", function() {deepEqual( Stem("îmbătrânire"), "îmbătrân");});
test("îmbătrânit -> îmbătrân", function() {deepEqual( Stem("îmbătrânit"), "îmbătrân");});
test("îmbătrânită -> îmbătrân", function() {deepEqual( Stem("îmbătrânită"), "îmbătrân");});
test("îmbelşugat -> îmbelşug", function() {deepEqual( Stem("îmbelşugat"), "îmbelşug");});
test("îmbelşugată -> îmbelşug", function() {deepEqual( Stem("îmbelşugată"), "îmbelşug");});
test("îmbia -> îmbi", function() {deepEqual( Stem("îmbia"), "îmbi");});
test("îmbiau -> îmbiau", function() {deepEqual( Stem("îmbiau"), "îmbiau");});
test("îmbietoare -> îmbietoar", function() {deepEqual( Stem("îmbietoare"), "îmbietoar");});
test("îmbinare -> îmbin", function() {deepEqual( Stem("îmbinare"), "îmbin");});
test("îmbinări -> îmbinăr", function() {deepEqual( Stem("îmbinări"), "îmbinăr");});
test("îmblânzită -> îmblânz", function() {deepEqual( Stem("îmblânzită"), "îmblânz");});
test("îmbogăţeşte -> îmbogăţ", function() {deepEqual( Stem("îmbogăţeşte"), "îmbogăţ");});
test("îmbogăţirea -> îmbogăţ", function() {deepEqual( Stem("îmbogăţirea"), "îmbogăţ");});
test("îmbogăţit -> îmbogăţ", function() {deepEqual( Stem("îmbogăţit"), "îmbogăţ");});
test("îmbogăţiţi -> îmbogăţ", function() {deepEqual( Stem("îmbogăţiţi"), "îmbogăţ");});
test("îmboldit -> îmbold", function() {deepEqual( Stem("îmboldit"), "îmbold");});
test("îmbolditor -> îmbold", function() {deepEqual( Stem("îmbolditor"), "îmbold");});
test("îmbolnăvea -> îmbolnăv", function() {deepEqual( Stem("îmbolnăvea"), "îmbolnăv");});
test("îmbolnăveau -> îmbolnăv", function() {deepEqual( Stem("îmbolnăveau"), "îmbolnăv");});
test("îmbolnăvit -> îmbolnăv", function() {deepEqual( Stem("îmbolnăvit"), "îmbolnăv");});
test("îmbrac -> îmbrac", function() {deepEqual( Stem("îmbrac"), "îmbrac");});
test("îmbracă -> îmbrac", function() {deepEqual( Stem("îmbracă"), "îmbrac");});
test("îmbrace -> îmbrac", function() {deepEqual( Stem("îmbrace"), "îmbrac");});
test("îmbrăca -> îmbrăc", function() {deepEqual( Stem("îmbrăca"), "îmbrăc");});
test("îmbrăcaserăm -> îmbrăc", function() {deepEqual( Stem("îmbrăcaserăm"), "îmbrăc");});
test("îmbrăcat -> îmbrăc", function() {deepEqual( Stem("îmbrăcat"), "îmbrăc");});
test("îmbrăcate -> îmbrăc", function() {deepEqual( Stem("îmbrăcate"), "îmbrăc");});
test("îmbrăcaţi -> îmbrăc", function() {deepEqual( Stem("îmbrăcaţi"), "îmbrăc");});
test("îmbrăcau -> îmbrăc", function() {deepEqual( Stem("îmbrăcau"), "îmbrăc");});
test("îmbrăcăminte -> îmbrăcămint", function() {deepEqual( Stem("îmbrăcăminte"), "îmbrăcămint");});
test("îmbrăcămintea -> îmbrăcămint", function() {deepEqual( Stem("îmbrăcămintea"), "îmbrăcămint");});
test("îmbrăţişa -> îmbrăţiş", function() {deepEqual( Stem("îmbrăţişa"), "îmbrăţiş");});
test("îmbrăţişam -> îmbrăţiş", function() {deepEqual( Stem("îmbrăţişam"), "îmbrăţiş");});
test("îmbrăţişare -> îmbrăţiş", function() {deepEqual( Stem("îmbrăţişare"), "îmbrăţiş");});
test("îmbrăţişarea -> îmbrăţiş", function() {deepEqual( Stem("îmbrăţişarea"), "îmbrăţiş");});
test("îmbrăţişat -> îmbrăţiş", function() {deepEqual( Stem("îmbrăţişat"), "îmbrăţiş");});
test("îmbrăţişaţi -> îmbrăţiş", function() {deepEqual( Stem("îmbrăţişaţi"), "îmbrăţiş");});
test("îmbrăţişări -> îmbrăţişăr", function() {deepEqual( Stem("îmbrăţişări"), "îmbrăţişăr");});
test("îmbrăţişării -> îmbrăţişăr", function() {deepEqual( Stem("îmbrăţişării"), "îmbrăţişăr");});
test("îmbrăţişează -> îmbrăţiş", function() {deepEqual( Stem("îmbrăţişează"), "îmbrăţiş");});
test("îmbrăţişez -> îmbrăţiş", function() {deepEqual( Stem("îmbrăţişez"), "îmbrăţiş");});
test("îmbrăţişeze -> îmbrăţiş", function() {deepEqual( Stem("îmbrăţişeze"), "îmbrăţiş");});
test("îmbucăm -> îmbuc", function() {deepEqual( Stem("îmbucăm"), "îmbuc");});
test("îmbucătăţim -> îmbucătăţ", function() {deepEqual( Stem("îmbucătăţim"), "îmbucătăţ");});
test("îmbucătăţire -> îmbucătăţ", function() {deepEqual( Stem("îmbucătăţire"), "îmbucătăţ");});
test("îmbucătăţirea -> îmbucătăţ", function() {deepEqual( Stem("îmbucătăţirea"), "îmbucătăţ");});
test("îmbufnată -> îmbufn", function() {deepEqual( Stem("îmbufnată"), "îmbufn");});
test("îmbufnaţi -> îmbufn", function() {deepEqual( Stem("îmbufnaţi"), "îmbufn");});
test("îmbulzea -> îmbulz", function() {deepEqual( Stem("îmbulzea"), "îmbulz");});
test("îmi -> îmi", function() {deepEqual( Stem("îmi"), "îmi");});
test("împac -> împac", function() {deepEqual( Stem("împac"), "împac");});
test("împacă -> împac", function() {deepEqual( Stem("împacă"), "împac");});
test("împace -> împac", function() {deepEqual( Stem("împace"), "împac");});
test("împacheta -> împachet", function() {deepEqual( Stem("împacheta"), "împachet");});
test("împacheteze -> împachet", function() {deepEqual( Stem("împacheteze"), "împachet");});
test("împaci -> împac", function() {deepEqual( Stem("împaci"), "împac");});
test("împart -> împart", function() {deepEqual( Stem("împart"), "împart");});
test("împartă -> împart", function() {deepEqual( Stem("împartă"), "împart");});
test("împăca -> împăc", function() {deepEqual( Stem("împăca"), "împăc");});
test("împăcare -> împăc", function() {deepEqual( Stem("împăcare"), "împăc");});
test("împăcarea -> împăc", function() {deepEqual( Stem("împăcarea"), "împăc");});
test("împăcase -> împăc", function() {deepEqual( Stem("împăcase"), "împăc");});
test("împăcasem -> împăc", function() {deepEqual( Stem("împăcasem"), "împăc");});
test("împăcaseră -> împăc", function() {deepEqual( Stem("împăcaseră"), "împăc");});
test("împăcat -> împăc", function() {deepEqual( Stem("împăcat"), "împăc");});
test("împăcaţi -> împăc", function() {deepEqual( Stem("împăcaţi"), "împăc");});
test("împăcăm -> împăc", function() {deepEqual( Stem("împăcăm"), "împăc");});
test("împăcări -> împăcăr", function() {deepEqual( Stem("împăcări"), "împăcăr");});
test("împăciuitoare -> împăciu", function() {deepEqual( Stem("împăciuitoare"), "împăciu");});
test("împăciuitor -> împăciu", function() {deepEqual( Stem("împăciuitor"), "împăciu");});
test("împădurit -> împădur", function() {deepEqual( Stem("împădurit"), "împădur");});
test("împădurite -> împădur", function() {deepEqual( Stem("împădurite"), "împădur");});
test("împăiată -> împăi", function() {deepEqual( Stem("împăiată"), "împăi");});
test("împănată -> împăn", function() {deepEqual( Stem("împănată"), "împăn");});
test("împăratul -> împăr", function() {deepEqual( Stem("împăratul"), "împăr");});
test("împărăţia -> împărăţ", function() {deepEqual( Stem("împărăţia"), "împărăţ");});
test("împărăţie -> împărăţ", function() {deepEqual( Stem("împărăţie"), "împărăţ");});
test("împărăţiei -> împărăţ", function() {deepEqual( Stem("împărăţiei"), "împărăţ");});
test("împărăţiile -> împărăţ", function() {deepEqual( Stem("împărăţiile"), "împărăţ");});
test("împărtăşesc -> împărtăş", function() {deepEqual( Stem("împărtăşesc"), "împărtăş");});
test("împărtăşirea -> împărtăş", function() {deepEqual( Stem("împărtăşirea"), "împărtăş");});
test("împărtăşit -> împărtăş", function() {deepEqual( Stem("împărtăşit"), "împărtăş");});
test("împărţea -> împărţ", function() {deepEqual( Stem("împărţea"), "împărţ");});
test("împărţeala -> împărţeal", function() {deepEqual( Stem("împărţeala"), "împărţeal");});
test("împărţeam -> împărţ", function() {deepEqual( Stem("împărţeam"), "împărţ");});
test("împărţi -> împărţ", function() {deepEqual( Stem("împărţi"), "împărţ");});
test("împărţire -> împărţ", function() {deepEqual( Stem("împărţire"), "împărţ");});
test("împărţirea -> împărţ", function() {deepEqual( Stem("împărţirea"), "împărţ");});
test("împărţirii -> împărţir", function() {deepEqual( Stem("împărţirii"), "împărţir");});
test("împărţită -> împărţ", function() {deepEqual( Stem("împărţită"), "împărţ");});
test("împărţite -> împărţ", function() {deepEqual( Stem("împărţite"), "împărţ");});
test("împărţiţi -> împărţ", function() {deepEqual( Stem("împărţiţi"), "împărţ");});
test("împăturit -> împătur", function() {deepEqual( Stem("împăturit"), "împătur");});
test("împerecheate -> împerech", function() {deepEqual( Stem("împerecheate"), "împerech");});
test("împerechere -> împerech", function() {deepEqual( Stem("împerechere"), "împerech");});
test("împiedecat -> împiedec", function() {deepEqual( Stem("împiedecat"), "împiedec");});
test("împiedica -> împied", function() {deepEqual( Stem("împiedica"), "împied");});
test("împiedicat -> împiedic", function() {deepEqual( Stem("împiedicat"), "împiedic");});
test("împiedicată -> împiedic", function() {deepEqual( Stem("împiedicată"), "împiedic");});
test("împiedică -> împied", function() {deepEqual( Stem("împiedică"), "împied");});
test("împiedice -> împied", function() {deepEqual( Stem("împiedice"), "împied");});
test("împing -> împing", function() {deepEqual( Stem("împing"), "împing");});
test("împingă -> împing", function() {deepEqual( Stem("împingă"), "împing");});
test("împinge -> împing", function() {deepEqual( Stem("împinge"), "împing");});
test("împingea -> împing", function() {deepEqual( Stem("împingea"), "împing");});
test("împingem -> împing", function() {deepEqual( Stem("împingem"), "împing");});
test("împingeri -> împinger", function() {deepEqual( Stem("împingeri"), "împinger");});
test("împins -> împins", function() {deepEqual( Stem("împins"), "împins");});
test("împinse -> împin", function() {deepEqual( Stem("împinse"), "împin");});
test("împlântaţi -> împlânt", function() {deepEqual( Stem("împlântaţi"), "împlânt");});
test("împleteau -> împlet", function() {deepEqual( Stem("împleteau"), "împlet");});
test("împletindu -> împlet", function() {deepEqual( Stem("împletindu"), "împlet");});
test("împletit -> împlet", function() {deepEqual( Stem("împletit"), "împlet");});
test("împletite -> împlet", function() {deepEqual( Stem("împletite"), "împlet");});
test("împlinească -> împlin", function() {deepEqual( Stem("împlinească"), "împlin");});
test("împlinesc -> împlin", function() {deepEqual( Stem("împlinesc"), "împlin");});
test("împlineşte -> împlin", function() {deepEqual( Stem("împlineşte"), "împlin");});
test("împlini -> împlin", function() {deepEqual( Stem("împlini"), "împlin");});
test("împlinită -> împlin", function() {deepEqual( Stem("împlinită"), "împlin");});
test("împodobească -> împodob", function() {deepEqual( Stem("împodobească"), "împodob");});
test("împodobită -> împodob", function() {deepEqual( Stem("împodobită"), "împodob");});
test("împotmolesc -> împotmol", function() {deepEqual( Stem("împotmolesc"), "împotmol");});
test("împotmolit -> împotmol", function() {deepEqual( Stem("împotmolit"), "împotmol");});
test("împotriva -> împotr", function() {deepEqual( Stem("împotriva"), "împotr");});
test("împotrivă -> împotr", function() {deepEqual( Stem("împotrivă"), "împotr");});
test("împotriveşte -> împotriv", function() {deepEqual( Stem("împotriveşte"), "împotriv");});
test("împotrivire -> împotriv", function() {deepEqual( Stem("împotrivire"), "împotriv");});
test("împotrivirii -> împotrivir", function() {deepEqual( Stem("împotrivirii"), "împotrivir");});
test("împrăştiase -> împrăştias", function() {deepEqual( Stem("împrăştiase"), "împrăştias");});
test("împrăştiat -> împrăşt", function() {deepEqual( Stem("împrăştiat"), "împrăşt");});
test("împrăştiate -> împrăşt", function() {deepEqual( Stem("împrăştiate"), "împrăşt");});
test("împrăştiaţi -> împrăşt", function() {deepEqual( Stem("împrăştiaţi"), "împrăşt");});
test("împrăştie -> împrăşt", function() {deepEqual( Stem("împrăştie"), "împrăşt");});
test("împrăştiem -> împrăşt", function() {deepEqual( Stem("împrăştiem"), "împrăşt");});
test("împrejur -> împrejur", function() {deepEqual( Stem("împrejur"), "împrejur");});
test("împrejurare -> împrejur", function() {deepEqual( Stem("împrejurare"), "împrejur");});
test("împrejurarea -> împrejur", function() {deepEqual( Stem("împrejurarea"), "împrejur");});
test("împrejurări -> împrejurăr", function() {deepEqual( Stem("împrejurări"), "împrejurăr");});
test("împrejurările -> împrejurăr", function() {deepEqual( Stem("împrejurările"), "împrejurăr");});
test("împrejurimi -> împrejurim", function() {deepEqual( Stem("împrejurimi"), "împrejurim");});
test("împrejurimile -> împrejurim", function() {deepEqual( Stem("împrejurimile"), "împrejurim");});
test("împrejurul -> împrejur", function() {deepEqual( Stem("împrejurul"), "împrejur");});
test("împreumă -> împreum", function() {deepEqual( Stem("împreumă"), "împreum");});
test("împreunare -> împreun", function() {deepEqual( Stem("împreunare"), "împreun");});
test("împreună -> împreun", function() {deepEqual( Stem("împreună"), "împreun");});
test("împrospătat -> împrospăt", function() {deepEqual( Stem("împrospătat"), "împrospăt");});
test("împrospătează -> împrospăt", function() {deepEqual( Stem("împrospătează"), "împrospăt");});
test("împrostiţilor -> împrost", function() {deepEqual( Stem("împrostiţilor"), "împrost");});
test("împrumut -> împrum", function() {deepEqual( Stem("împrumut"), "împrum");});
test("împrumuta -> împrum", function() {deepEqual( Stem("împrumuta"), "împrum");});
test("împrumutase -> împrumut", function() {deepEqual( Stem("împrumutase"), "împrumut");});
test("împrumutată -> împrumut", function() {deepEqual( Stem("împrumutată"), "împrumut");});
test("împrumute -> împrum", function() {deepEqual( Stem("împrumute"), "împrum");});
test("împrumuturi -> împrumutur", function() {deepEqual( Stem("împrumuturi"), "împrumutur");});
test("împungă -> împung", function() {deepEqual( Stem("împungă"), "împung");});
test("împungiţi -> împung", function() {deepEqual( Stem("împungiţi"), "împung");});
test("împuns -> împuns", function() {deepEqual( Stem("împuns"), "împuns");});
test("împunsătură -> împunsăt", function() {deepEqual( Stem("împunsătură"), "împunsăt");});
test("împurpuraţi -> împurpur", function() {deepEqual( Stem("împurpuraţi"), "împurpur");});
test("împuşc -> împuşc", function() {deepEqual( Stem("împuşc"), "împuşc");});
test("împuşca -> împuşc", function() {deepEqual( Stem("împuşca"), "împuşc");});
test("împuşcare -> împuşc", function() {deepEqual( Stem("împuşcare"), "împuşc");});
test("împuşcarea -> împuşc", function() {deepEqual( Stem("împuşcarea"), "împuşc");});
test("împuşcat -> împuşc", function() {deepEqual( Stem("împuşcat"), "împuşc");});
test("împuşcaţi -> împuşc", function() {deepEqual( Stem("împuşcaţi"), "împuşc");});
test("împuşcă -> împuşc", function() {deepEqual( Stem("împuşcă"), "împuşc");});
test("împuşte -> împuşt", function() {deepEqual( Stem("împuşte"), "împuşt");});
test("împuşti -> împuşt", function() {deepEqual( Stem("împuşti"), "împuşt");});
test("împuţise -> împuţ", function() {deepEqual( Stem("împuţise"), "împuţ");});
test("în -> în", function() {deepEqual( Stem("în"), "în");});
test("înadins -> înadins", function() {deepEqual( Stem("înadins"), "înadins");});
test("înainta -> înaint", function() {deepEqual( Stem("înainta"), "înaint");});
test("înaintare -> înaint", function() {deepEqual( Stem("înaintare"), "înaint");});
test("înaintarea -> înaint", function() {deepEqual( Stem("înaintarea"), "înaint");});
test("înaintat -> înaint", function() {deepEqual( Stem("înaintat"), "înaint");});
test("înaintată -> înaint", function() {deepEqual( Stem("înaintată"), "înaint");});
test("înaintaţi -> înaint", function() {deepEqual( Stem("înaintaţi"), "înaint");});
test("înaintau -> înaint", function() {deepEqual( Stem("înaintau"), "înaint");});
test("înaintăm -> înaint", function() {deepEqual( Stem("înaintăm"), "înaint");});
test("înaintărilor -> înaintăr", function() {deepEqual( Stem("înaintărilor"), "înaintăr");});
test("înainte -> înaint", function() {deepEqual( Stem("înainte"), "înaint");});
test("înaintea -> înaint", function() {deepEqual( Stem("înaintea"), "înaint");});
test("înaintează -> înaint", function() {deepEqual( Stem("înaintează"), "înaint");});
test("înaintez -> înaint", function() {deepEqual( Stem("înaintez"), "înaint");});
test("înalt -> înalt", function() {deepEqual( Stem("înalt"), "înalt");});
test("înaltă -> înalt", function() {deepEqual( Stem("înaltă"), "înalt");});
test("înalte -> înalt", function() {deepEqual( Stem("înalte"), "înalt");});
test("înaltei -> înalte", function() {deepEqual( Stem("înaltei"), "înalte");});
test("înaltului -> înalt", function() {deepEqual( Stem("înaltului"), "înalt");});
test("înalţă -> înalţ", function() {deepEqual( Stem("înalţă"), "înalţ");});
test("înalţe -> înalţ", function() {deepEqual( Stem("înalţe"), "înalţ");});
test("înalţi -> înalţ", function() {deepEqual( Stem("înalţi"), "înalţ");});
test("înapoi -> înapo", function() {deepEqual( Stem("înapoi"), "înapo");});
test("înapoia -> înapoi", function() {deepEqual( Stem("înapoia"), "înapoi");});
test("înapoiaţi -> înapoi", function() {deepEqual( Stem("înapoiaţi"), "înapoi");});
test("înarmarea -> înarm", function() {deepEqual( Stem("înarmarea"), "înarm");});
test("înarmări -> înarmăr", function() {deepEqual( Stem("înarmări"), "înarmăr");});
test("înarmării -> înarmăr", function() {deepEqual( Stem("înarmării"), "înarmăr");});
test("înarmează -> înarm", function() {deepEqual( Stem("înarmează"), "înarm");});
test("înăbuşă -> înăbuş", function() {deepEqual( Stem("înăbuşă"), "înăbuş");});
test("înăbuşe -> înăbuş", function() {deepEqual( Stem("înăbuşe"), "înăbuş");});
test("înăbuşi -> înăb", function() {deepEqual( Stem("înăbuşi"), "înăb");});
test("înăbuşim -> înăbuş", function() {deepEqual( Stem("înăbuşim"), "înăbuş");});
test("înăbuşirea -> înăbuş", function() {deepEqual( Stem("înăbuşirea"), "înăbuş");});
test("înăbuşit -> înăbuş", function() {deepEqual( Stem("înăbuşit"), "înăbuş");});
test("înăbuşiţi -> înăbuş", function() {deepEqual( Stem("înăbuşiţi"), "înăbuş");});
test("înălbit -> înălb", function() {deepEqual( Stem("înălbit"), "înălb");});
test("înălţat -> înălţ", function() {deepEqual( Stem("înălţat"), "înălţ");});
test("înălţate -> înălţ", function() {deepEqual( Stem("înălţate"), "înălţ");});
test("înălţatul -> înălţ", function() {deepEqual( Stem("înălţatul"), "înălţ");});
test("înălţaţi -> înălţ", function() {deepEqual( Stem("înălţaţi"), "înălţ");});
test("înălţime -> înălţim", function() {deepEqual( Stem("înălţime"), "înălţim");});
test("înălţimea -> înălţim", function() {deepEqual( Stem("înălţimea"), "înălţim");});
test("înălţimii -> înălţim", function() {deepEqual( Stem("înălţimii"), "înălţim");});
test("înălţimile -> înălţim", function() {deepEqual( Stem("înălţimile"), "înălţim");});
test("înăuntru -> înăuntru", function() {deepEqual( Stem("înăuntru"), "înăuntru");});
test("înăuntrul -> înăuntr", function() {deepEqual( Stem("înăuntrul"), "înăuntr");});
test("încadrat -> încadr", function() {deepEqual( Stem("încadrat"), "încadr");});
test("încadrată -> încadr", function() {deepEqual( Stem("încadrată"), "încadr");});
test("încalce -> încalc", function() {deepEqual( Stem("încalce"), "încalc");});
test("încalţă -> încalţ", function() {deepEqual( Stem("încalţă"), "încalţ");});
test("încap -> încap", function() {deepEqual( Stem("încap"), "încap");});
test("încapacitatea -> încapac", function() {deepEqual( Stem("încapacitatea"), "încapac");});
test("încape -> încap", function() {deepEqual( Stem("încape"), "încap");});
test("încapsulare -> încapsul", function() {deepEqual( Stem("încapsulare"), "încapsul");});
test("încapsulării -> încapsulăr", function() {deepEqual( Stem("încapsulării"), "încapsulăr");});
test("încarcă -> încarc", function() {deepEqual( Stem("încarcă"), "încarc");});
test("încarce -> încarc", function() {deepEqual( Stem("încarce"), "încarc");});
test("încarcerat -> încarcer", function() {deepEqual( Stem("încarcerat"), "încarcer");});
test("încarcerată -> încarcer", function() {deepEqual( Stem("încarcerată"), "încarcer");});
test("încarnare -> încarn", function() {deepEqual( Stem("încarnare"), "încarn");});
test("încarnat -> încarn", function() {deepEqual( Stem("încarnat"), "încarn");});
test("încarnată -> încarn", function() {deepEqual( Stem("încarnată"), "încarn");});
test("încarnări -> încarnăr", function() {deepEqual( Stem("încarnări"), "încarnăr");});
test("încarnează -> încarn", function() {deepEqual( Stem("încarnează"), "încarn");});
test("încasare -> încas", function() {deepEqual( Stem("încasare"), "încas");});
test("încasat -> încas", function() {deepEqual( Stem("încasat"), "încas");});
test("încasăm -> încas", function() {deepEqual( Stem("încasăm"), "încas");});
test("încâlcite -> încâlc", function() {deepEqual( Stem("încâlcite"), "încâlc");});
test("încântat -> încânt", function() {deepEqual( Stem("încântat"), "încânt");});
test("încântată -> încânt", function() {deepEqual( Stem("încântată"), "încânt");});
test("încântaţi -> încânt", function() {deepEqual( Stem("încântaţi"), "încânt");});
test("încântă -> încânt", function() {deepEqual( Stem("încântă"), "încânt");});
test("încântătoare -> încânt", function() {deepEqual( Stem("încântătoare"), "încânt");});
test("încât -> încât", function() {deepEqual( Stem("încât"), "încât");});
test("încă -> încă", function() {deepEqual( Stem("încă"), "încă");});
test("încăierare -> încăier", function() {deepEqual( Stem("încăierare"), "încăier");});
test("încăierări -> încăierăr", function() {deepEqual( Stem("încăierări"), "încăierăr");});
test("încălcat -> încălc", function() {deepEqual( Stem("încălcat"), "încălc");});
test("încălcau -> încălc", function() {deepEqual( Stem("încălcau"), "încălc");});
test("încălcînd -> încălcînd", function() {deepEqual( Stem("încălcînd"), "încălcînd");});
test("încăleca -> încălec", function() {deepEqual( Stem("încăleca"), "încălec");});
test("încălecate -> încălec", function() {deepEqual( Stem("încălecate"), "încălec");});
test("încălecării -> încălecăr", function() {deepEqual( Stem("încălecării"), "încălecăr");});
test("încălecînd -> încălecînd", function() {deepEqual( Stem("încălecînd"), "încălecînd");});
test("încălţa -> încălţ", function() {deepEqual( Stem("încălţa"), "încălţ");});
test("încălţarea -> încălţ", function() {deepEqual( Stem("încălţarea"), "încălţ");});
test("încălţat -> încălţ", function() {deepEqual( Stem("încălţat"), "încălţ");});
test("încălţămintea -> încălţămint", function() {deepEqual( Stem("încălţămintea"), "încălţămint");});
test("încălzea -> încălz", function() {deepEqual( Stem("încălzea"), "încălz");});
test("încălzească -> încălz", function() {deepEqual( Stem("încălzească"), "încălz");});
test("încălzesc -> încălz", function() {deepEqual( Stem("încălzesc"), "încălz");});
test("încălzeşte -> încălz", function() {deepEqual( Stem("încălzeşte"), "încălz");});
test("încălzim -> încălz", function() {deepEqual( Stem("încălzim"), "încălz");});
test("încălzire -> încălz", function() {deepEqual( Stem("încălzire"), "încălz");});
test("încălzirii -> încălzir", function() {deepEqual( Stem("încălzirii"), "încălzir");});
test("încălzit -> încălz", function() {deepEqual( Stem("încălzit"), "încălz");});
test("încălzită -> încălz", function() {deepEqual( Stem("încălzită"), "încălz");});
test("încălzitul -> încălz", function() {deepEqual( Stem("încălzitul"), "încălz");});
test("încălziţi -> încălz", function() {deepEqual( Stem("încălziţi"), "încălz");});
test("încăpătoare -> încăp", function() {deepEqual( Stem("încăpătoare"), "încăp");});
test("încăpător -> încăp", function() {deepEqual( Stem("încăpător"), "încăp");});
test("încăpăţânare -> încăpăţân", function() {deepEqual( Stem("încăpăţânare"), "încăpăţân");});
test("încăpăţânarea -> încăpăţân", function() {deepEqual( Stem("încăpăţânarea"), "încăpăţân");});
test("încăpăţânat -> încăpăţân", function() {deepEqual( Stem("încăpăţânat"), "încăpăţân");});
test("încăpăţânaţi -> încăpăţân", function() {deepEqual( Stem("încăpăţânaţi"), "încăpăţân");});
test("încăpăţîna -> încăpăţîn", function() {deepEqual( Stem("încăpăţîna"), "încăpăţîn");});
test("încăpăţînare -> încăpăţîn", function() {deepEqual( Stem("încăpăţînare"), "încăpăţîn");});
test("încăpăţînează -> încăpăţîn", function() {deepEqual( Stem("încăpăţînează"), "încăpăţîn");});
test("încăpea -> încăp", function() {deepEqual( Stem("încăpea"), "încăp");});
test("încăpeau -> încăp", function() {deepEqual( Stem("încăpeau"), "încăp");});
test("încăpere -> încăp", function() {deepEqual( Stem("încăpere"), "încăp");});
test("încăperea -> încăp", function() {deepEqual( Stem("încăperea"), "încăp");});
test("încăperi -> încăper", function() {deepEqual( Stem("încăperi"), "încăper");});
test("încăput -> încăp", function() {deepEqual( Stem("încăput"), "încăp");});
test("încăpută -> încăp", function() {deepEqual( Stem("încăpută"), "încăp");});
test("încărca -> încărc", function() {deepEqual( Stem("încărca"), "încărc");});
test("încărcare -> încărc", function() {deepEqual( Stem("încărcare"), "încărc");});
test("încărcarea -> încărc", function() {deepEqual( Stem("încărcarea"), "încărc");});
test("încărcat -> încărc", function() {deepEqual( Stem("încărcat"), "încărc");});
test("încărcată -> încărc", function() {deepEqual( Stem("încărcată"), "încărc");});
test("încărcate -> încărc", function() {deepEqual( Stem("încărcate"), "încărc");});
test("încărcăm -> încărc", function() {deepEqual( Stem("încărcăm"), "încărc");});
test("încărcării -> încărcăr", function() {deepEqual( Stem("încărcării"), "încărcăr");});
test("încărcătoare -> încărc", function() {deepEqual( Stem("încărcătoare"), "încărc");});
test("încărcător -> încărc", function() {deepEqual( Stem("încărcător"), "încărc");});
test("încărcătura -> încărcătur", function() {deepEqual( Stem("încărcătura"), "încărcătur");});
test("încărcătură -> încărcăt", function() {deepEqual( Stem("încărcătură"), "încărcăt");});
test("încărcături -> încărcătur", function() {deepEqual( Stem("încărcături"), "încărcătur");});
test("încărcînd -> încărcînd", function() {deepEqual( Stem("încărcînd"), "încărcînd");});
test("încărunţită -> încărunţ", function() {deepEqual( Stem("încărunţită"), "încărunţ");});
test("înceapă -> înceap", function() {deepEqual( Stem("înceapă"), "înceap");});
test("încearcă -> încearc", function() {deepEqual( Stem("încearcă"), "încearc");});
test("înceată -> înceat", function() {deepEqual( Stem("înceată"), "înceat");});
test("încenuşarea -> încenuş", function() {deepEqual( Stem("încenuşarea"), "încenuş");});
test("încenuşează -> încenuş", function() {deepEqual( Stem("încenuşează"), "încenuş");});
test("încenuşeze -> încenuş", function() {deepEqual( Stem("încenuşeze"), "încenuş");});
test("încep -> încep", function() {deepEqual( Stem("încep"), "încep");});
test("începând -> încep", function() {deepEqual( Stem("începând"), "încep");});
test("începe -> încep", function() {deepEqual( Stem("începe"), "încep");});
test("începea -> încep", function() {deepEqual( Stem("începea"), "încep");});
test("începeam -> încep", function() {deepEqual( Stem("începeam"), "încep");});
test("începeau -> încep", function() {deepEqual( Stem("începeau"), "încep");});
test("începem -> încep", function() {deepEqual( Stem("începem"), "încep");});
test("începere -> încep", function() {deepEqual( Stem("începere"), "încep");});
test("începerea -> încep", function() {deepEqual( Stem("începerea"), "încep");});
test("începi -> încep", function() {deepEqual( Stem("începi"), "încep");});
test("începu -> începu", function() {deepEqual( Stem("începu"), "începu");});
test("începuse -> încep", function() {deepEqual( Stem("începuse"), "încep");});
test("începusem -> încep", function() {deepEqual( Stem("începusem"), "încep");});
test("începuseră -> încep", function() {deepEqual( Stem("începuseră"), "încep");});
test("început -> încep", function() {deepEqual( Stem("început"), "încep");});
test("începută -> încep", function() {deepEqual( Stem("începută"), "încep");});
test("începute -> încep", function() {deepEqual( Stem("începute"), "încep");});
test("începutul -> încep", function() {deepEqual( Stem("începutul"), "încep");});
test("începuturile -> începutur", function() {deepEqual( Stem("începuturile"), "începutur");});
test("încerc -> încerc", function() {deepEqual( Stem("încerc"), "încerc");});
test("încerca -> încerc", function() {deepEqual( Stem("încerca"), "încerc");});
test("încercam -> încerc", function() {deepEqual( Stem("încercam"), "încerc");});
test("încercare -> încerc", function() {deepEqual( Stem("încercare"), "încerc");});
test("încercarea -> încerc", function() {deepEqual( Stem("încercarea"), "încerc");});
test("încercase -> încerc", function() {deepEqual( Stem("încercase"), "încerc");});
test("încercasem -> încerc", function() {deepEqual( Stem("încercasem"), "încerc");});
test("încercat -> încerc", function() {deepEqual( Stem("încercat"), "încerc");});
test("încercată -> încerc", function() {deepEqual( Stem("încercată"), "încerc");});
test("încercaţi -> încerc", function() {deepEqual( Stem("încercaţi"), "încerc");});
test("încercau -> încerc", function() {deepEqual( Stem("încercau"), "încerc");});
test("încercând -> încerc", function() {deepEqual( Stem("încercând"), "încerc");});
test("încercăm -> încerc", function() {deepEqual( Stem("încercăm"), "încerc");});
test("încercări -> încercăr", function() {deepEqual( Stem("încercări"), "încercăr");});
test("încercările -> încercăr", function() {deepEqual( Stem("încercările"), "încercăr");});
test("încerci -> încerc", function() {deepEqual( Stem("încerci"), "încerc");});
test("încercuiască -> încercuiasc", function() {deepEqual( Stem("încercuiască"), "încercuiasc");});
test("încercuiesc -> încercui", function() {deepEqual( Stem("încercuiesc"), "încercui");});
test("încercuim -> încercu", function() {deepEqual( Stem("încercuim"), "încercu");});
test("încercuire -> încercu", function() {deepEqual( Stem("încercuire"), "încercu");});
test("încercuirea -> încercu", function() {deepEqual( Stem("încercuirea"), "încercu");});
test("încercuiri -> încercuir", function() {deepEqual( Stem("încercuiri"), "încercuir");});
test("încercuit -> încercu", function() {deepEqual( Stem("încercuit"), "încercu");});
test("încet -> încet", function() {deepEqual( Stem("încet"), "încet");});
test("încete -> încet", function() {deepEqual( Stem("încete"), "încet");});
test("încetează -> încet", function() {deepEqual( Stem("încetează"), "încet");});
test("înceteze -> încet", function() {deepEqual( Stem("înceteze"), "încet");});
test("încetineală -> încetineal", function() {deepEqual( Stem("încetineală"), "încetineal");});
test("încetul -> încet", function() {deepEqual( Stem("încetul"), "încet");});
test("încheagă -> încheag", function() {deepEqual( Stem("încheagă"), "încheag");});
test("închegare -> încheg", function() {deepEqual( Stem("închegare"), "încheg");});
test("închegat -> încheg", function() {deepEqual( Stem("închegat"), "încheg");});
test("închegate -> încheg", function() {deepEqual( Stem("închegate"), "încheg");});
test("închei -> înche", function() {deepEqual( Stem("închei"), "înche");});
test("încheia -> închei", function() {deepEqual( Stem("încheia"), "închei");});
test("încheiam -> închei", function() {deepEqual( Stem("încheiam"), "închei");});
test("încheiat -> închei", function() {deepEqual( Stem("încheiat"), "închei");});
test("încheiate -> închei", function() {deepEqual( Stem("încheiate"), "închei");});
test("încheie -> închei", function() {deepEqual( Stem("încheie"), "închei");});
test("încheiere -> închei", function() {deepEqual( Stem("încheiere"), "închei");});
test("încheierea -> închei", function() {deepEqual( Stem("încheierea"), "închei");});
test("încheieri -> încheier", function() {deepEqual( Stem("încheieri"), "încheier");});
test("încheietura -> încheietur", function() {deepEqual( Stem("încheietura"), "încheietur");});
test("închid -> închid", function() {deepEqual( Stem("închid"), "închid");});
test("închidă -> închid", function() {deepEqual( Stem("închidă"), "închid");});
test("închide -> închid", function() {deepEqual( Stem("închide"), "închid");});
test("închidem -> închid", function() {deepEqual( Stem("închidem"), "închid");});
test("închiderea -> închid", function() {deepEqual( Stem("închiderea"), "închid");});
test("închin -> închin", function() {deepEqual( Stem("închin"), "închin");});
test("închina -> închin", function() {deepEqual( Stem("închina"), "închin");});
test("închinare -> închin", function() {deepEqual( Stem("închinare"), "închin");});
test("închinat -> închin", function() {deepEqual( Stem("închinat"), "închin");});
test("închinată -> închin", function() {deepEqual( Stem("închinată"), "închin");});
test("închinându -> închin", function() {deepEqual( Stem("închinându"), "închin");});
test("închină -> închin", function() {deepEqual( Stem("închină"), "închin");});
test("închipui -> închip", function() {deepEqual( Stem("închipui"), "închip");});
test("închipuiam -> închipui", function() {deepEqual( Stem("închipuiam"), "închipui");});
test("închipuie -> închipui", function() {deepEqual( Stem("închipuie"), "închipui");});
test("închipuiesc -> închipui", function() {deepEqual( Stem("închipuiesc"), "închipui");});
test("închipuieşte -> închipui", function() {deepEqual( Stem("închipuieşte"), "închipui");});
test("închipuim -> închipu", function() {deepEqual( Stem("închipuim"), "închipu");});
test("închipuire -> închipu", function() {deepEqual( Stem("închipuire"), "închipu");});
test("închipuiri -> închipuir", function() {deepEqual( Stem("închipuiri"), "închipuir");});
test("închipuit -> închipu", function() {deepEqual( Stem("închipuit"), "închipu");});
test("închipuită -> închipu", function() {deepEqual( Stem("închipuită"), "închipu");});
test("închipuiţi -> închipu", function() {deepEqual( Stem("închipuiţi"), "închipu");});
test("închircite -> închirc", function() {deepEqual( Stem("închircite"), "închirc");});
test("închiriasem -> închiriasem", function() {deepEqual( Stem("închiriasem"), "închiriasem");});
test("închiriat -> închir", function() {deepEqual( Stem("închiriat"), "închir");});
test("închis -> închis", function() {deepEqual( Stem("închis"), "închis");});
test("închisă -> închis", function() {deepEqual( Stem("închisă"), "închis");});
test("închise -> închi", function() {deepEqual( Stem("închise"), "închi");});
test("închisoare -> închisoar", function() {deepEqual( Stem("închisoare"), "închisoar");});
test("închisorii -> închisor", function() {deepEqual( Stem("închisorii"), "închisor");});
test("închişi -> închiş", function() {deepEqual( Stem("închişi"), "închiş");});
test("încingă -> încing", function() {deepEqual( Stem("încingă"), "încing");});
test("încinge -> încing", function() {deepEqual( Stem("încinge"), "încing");});
test("încins -> încins", function() {deepEqual( Stem("încins"), "încins");});
test("încinsă -> încins", function() {deepEqual( Stem("încinsă"), "încins");});
test("încleştare -> încleşt", function() {deepEqual( Stem("încleştare"), "încleşt");});
test("încleştasem -> încleşt", function() {deepEqual( Stem("încleştasem"), "încleşt");});
test("încleştaseră -> încleşt", function() {deepEqual( Stem("încleştaseră"), "încleşt");});
test("încleştat -> încleşt", function() {deepEqual( Stem("încleştat"), "încleşt");});
test("încleştaţi -> încleşt", function() {deepEqual( Stem("încleştaţi"), "încleşt");});
test("încleştează -> încleşt", function() {deepEqual( Stem("încleştează"), "încleşt");});
test("încleştez -> încleşt", function() {deepEqual( Stem("încleştez"), "încleşt");});
test("încleştezi -> încleşt", function() {deepEqual( Stem("încleştezi"), "încleşt");});
test("înclinat -> înclin", function() {deepEqual( Stem("înclinat"), "înclin");});
test("înclinată -> înclin", function() {deepEqual( Stem("înclinată"), "înclin");});
test("înclinaţi -> înclin", function() {deepEqual( Stem("înclinaţi"), "înclin");});
test("înclinările -> înclinăr", function() {deepEqual( Stem("înclinările"), "înclinăr");});
test("încoa -> înco", function() {deepEqual( Stem("încoa"), "înco");});
test("încoace -> încoac", function() {deepEqual( Stem("încoace"), "încoac");});
test("încocârjaţi -> încocârj", function() {deepEqual( Stem("încocârjaţi"), "încocârj");});
test("încolăcirea -> încolăc", function() {deepEqual( Stem("încolăcirea"), "încolăc");});
test("încolăcită -> încolăc", function() {deepEqual( Stem("încolăcită"), "încolăc");});
test("încolăcite -> încolăc", function() {deepEqual( Stem("încolăcite"), "încolăc");});
test("încolo -> încolo", function() {deepEqual( Stem("încolo"), "încolo");});
test("încolonare -> încolon", function() {deepEqual( Stem("încolonare"), "încolon");});
test("încolonase -> încolon", function() {deepEqual( Stem("încolonase"), "încolon");});
test("încolonat -> încolon", function() {deepEqual( Stem("încolonat"), "încolon");});
test("încolonaţi -> încolon", function() {deepEqual( Stem("încolonaţi"), "încolon");});
test("încolonăm -> încolon", function() {deepEqual( Stem("încolonăm"), "încolon");});
test("încolonează -> încolon", function() {deepEqual( Stem("încolonează"), "încolon");});
test("încondeiază -> încondeiaz", function() {deepEqual( Stem("încondeiază"), "încondeiaz");});
test("înconjoară -> înconjoar", function() {deepEqual( Stem("înconjoară"), "înconjoar");});
test("înconjoare -> înconjoar", function() {deepEqual( Stem("înconjoare"), "înconjoar");});
test("înconjur -> înconjur", function() {deepEqual( Stem("înconjur"), "înconjur");});
test("înconjura -> înconjur", function() {deepEqual( Stem("înconjura"), "înconjur");});
test("înconjurase -> înconjur", function() {deepEqual( Stem("înconjurase"), "înconjur");});
test("înconjurat -> înconjur", function() {deepEqual( Stem("înconjurat"), "înconjur");});
test("înconjurată -> înconjur", function() {deepEqual( Stem("înconjurată"), "înconjur");});
test("înconjuraţi -> înconjur", function() {deepEqual( Stem("înconjuraţi"), "înconjur");});
test("înconjurătoare -> înconjur", function() {deepEqual( Stem("înconjurătoare"), "înconjur");});
test("înconjure -> înconjur", function() {deepEqual( Stem("înconjure"), "înconjur");});
test("înconjuri -> înconjur", function() {deepEqual( Stem("înconjuri"), "înconjur");});
test("încontinuu -> încontinuu", function() {deepEqual( Stem("încontinuu"), "încontinuu");});
test("încordare -> încord", function() {deepEqual( Stem("încordare"), "încord");});
test("încordează -> încord", function() {deepEqual( Stem("încordează"), "încord");});
test("încornorat -> încornor", function() {deepEqual( Stem("încornorat"), "încornor");});
test("încorporat -> încorpor", function() {deepEqual( Stem("încorporat"), "încorpor");});
test("încorporării -> încorporăr", function() {deepEqual( Stem("încorporării"), "încorporăr");});
test("încotro -> încotro", function() {deepEqual( Stem("încotro"), "încotro");});
test("încredere -> încred", function() {deepEqual( Stem("încredere"), "încred");});
test("încrederea -> încred", function() {deepEqual( Stem("încrederea"), "încred");});
test("încrederi -> încreder", function() {deepEqual( Stem("încrederi"), "încreder");});
test("încredinţam -> încredinţ", function() {deepEqual( Stem("încredinţam"), "încredinţ");});
test("încredinţat -> încredinţ", function() {deepEqual( Stem("încredinţat"), "încredinţ");});
test("încredinţate -> încredinţ", function() {deepEqual( Stem("încredinţate"), "încredinţ");});
test("încredinţăm -> încredinţ", function() {deepEqual( Stem("încredinţăm"), "încredinţ");});
test("încremenesc -> încremen", function() {deepEqual( Stem("încremenesc"), "încremen");});
test("încremeneşte -> încremen", function() {deepEqual( Stem("încremeneşte"), "încremen");});
test("încremenim -> încremen", function() {deepEqual( Stem("încremenim"), "încremen");});
test("încremenind -> încremen", function() {deepEqual( Stem("încremenind"), "încremen");});
test("încremeniri -> încremenir", function() {deepEqual( Stem("încremeniri"), "încremenir");});
test("încremenirii -> încremenir", function() {deepEqual( Stem("încremenirii"), "încremenir");});
test("încremenit -> încremen", function() {deepEqual( Stem("încremenit"), "încremen");});
test("încremenită -> încremen", function() {deepEqual( Stem("încremenită"), "încremen");});
test("încremeniţi -> încremen", function() {deepEqual( Stem("încremeniţi"), "încremen");});
test("încreţeşte -> încreţ", function() {deepEqual( Stem("încreţeşte"), "încreţ");});
test("încrezut -> încrez", function() {deepEqual( Stem("încrezut"), "încrez");});
test("încrucişate -> încruciş", function() {deepEqual( Stem("încrucişate"), "încruciş");});
test("încrucişându -> încruciş", function() {deepEqual( Stem("încrucişându"), "încruciş");});
test("încrucişări -> încrucişăr", function() {deepEqual( Stem("încrucişări"), "încrucişăr");});
test("încrunt -> încrunt", function() {deepEqual( Stem("încrunt"), "încrunt");});
test("încruntare -> încrunt", function() {deepEqual( Stem("încruntare"), "încrunt");});
test("încruntat -> încrunt", function() {deepEqual( Stem("încruntat"), "încrunt");});
test("încruntaţi -> încrunt", function() {deepEqual( Stem("încruntaţi"), "încrunt");});
test("încruntă -> încrunt", function() {deepEqual( Stem("încruntă"), "încrunt");});
test("încrustată -> încrust", function() {deepEqual( Stem("încrustată"), "încrust");});
test("încuie -> încui", function() {deepEqual( Stem("încuie"), "încui");});
test("încunoştinţez -> încunoştinţ", function() {deepEqual( Stem("încunoştinţez"), "încunoştinţ");});
test("încununat -> încunun", function() {deepEqual( Stem("încununat"), "încunun");});
test("încuraja -> încuraj", function() {deepEqual( Stem("încuraja"), "încuraj");});
test("încurajează -> încuraj", function() {deepEqual( Stem("încurajează"), "încuraj");});
test("încurajeze -> încuraj", function() {deepEqual( Stem("încurajeze"), "încuraj");});
test("încurc -> încurc", function() {deepEqual( Stem("încurc"), "încurc");});
test("încurcase -> încurc", function() {deepEqual( Stem("încurcase"), "încurc");});
test("încurcat -> încurc", function() {deepEqual( Stem("încurcat"), "încurc");});
test("încurcată -> încurc", function() {deepEqual( Stem("încurcată"), "încurc");});
test("încurcaţi -> încurc", function() {deepEqual( Stem("încurcaţi"), "încurc");});
test("încurcându -> încurc", function() {deepEqual( Stem("încurcându"), "încurc");});
test("încurcă -> încurc", function() {deepEqual( Stem("încurcă"), "încurc");});
test("încurcăm -> încurc", function() {deepEqual( Stem("încurcăm"), "încurc");});
test("încurcătură -> încurcăt", function() {deepEqual( Stem("încurcătură"), "încurcăt");});
test("încurcăturile -> încurcătur", function() {deepEqual( Stem("încurcăturile"), "încurcătur");});
test("îndată -> îndat", function() {deepEqual( Stem("îndată"), "îndat");});
test("îndatorat -> îndator", function() {deepEqual( Stem("îndatorat"), "îndator");});
test("îndatorire -> îndator", function() {deepEqual( Stem("îndatorire"), "îndator");});
test("îndârjeşte -> îndârj", function() {deepEqual( Stem("îndârjeşte"), "îndârj");});
test("îndârjire -> îndârj", function() {deepEqual( Stem("îndârjire"), "îndârj");});
test("îndârjirea -> îndârj", function() {deepEqual( Stem("îndârjirea"), "îndârj");});
test("îndârjit -> îndârj", function() {deepEqual( Stem("îndârjit"), "îndârj");});
test("îndârjită -> îndârj", function() {deepEqual( Stem("îndârjită"), "îndârj");});
test("îndârjiţi -> îndârj", function() {deepEqual( Stem("îndârjiţi"), "îndârj");});
test("îndărăt -> îndărăt", function() {deepEqual( Stem("îndărăt"), "îndărăt");});
test("îndărătnic -> îndărătn", function() {deepEqual( Stem("îndărătnic"), "îndărătn");});
test("îndărătnică -> îndărătn", function() {deepEqual( Stem("îndărătnică"), "îndărătn");});
test("îndărătnice -> îndărătn", function() {deepEqual( Stem("îndărătnice"), "îndărătn");});
test("îndărătnicia -> îndărătnic", function() {deepEqual( Stem("îndărătnicia"), "îndărătnic");});
test("îndeamnă -> îndeamn", function() {deepEqual( Stem("îndeamnă"), "îndeamn");});
test("îndeletnicesc -> îndeletnic", function() {deepEqual( Stem("îndeletnicesc"), "îndeletnic");});
test("îndelung -> îndelung", function() {deepEqual( Stem("îndelung"), "îndelung");});
test("îndelungat -> îndelung", function() {deepEqual( Stem("îndelungat"), "îndelung");});
test("îndelungată -> îndelung", function() {deepEqual( Stem("îndelungată"), "îndelung");});
test("îndelungate -> îndelung", function() {deepEqual( Stem("îndelungate"), "îndelung");});
test("îndelungaţi -> îndelung", function() {deepEqual( Stem("îndelungaţi"), "îndelung");});
test("îndelungă -> îndelung", function() {deepEqual( Stem("îndelungă"), "îndelung");});
test("îndelungi -> îndelung", function() {deepEqual( Stem("îndelungi"), "îndelung");});
test("îndemâna -> îndemân", function() {deepEqual( Stem("îndemâna"), "îndemân");});
test("îndemână -> îndemân", function() {deepEqual( Stem("îndemână"), "îndemân");});
test("îndemîna -> îndemîn", function() {deepEqual( Stem("îndemîna"), "îndemîn");});
test("îndemînă -> îndemîn", function() {deepEqual( Stem("îndemînă"), "îndemîn");});
test("îndemn -> îndemn", function() {deepEqual( Stem("îndemn"), "îndemn");});
test("îndemna -> îndemn", function() {deepEqual( Stem("îndemna"), "îndemn");});
test("îndemnase -> îndemn", function() {deepEqual( Stem("îndemnase"), "îndemn");});
test("îndemnat -> îndemn", function() {deepEqual( Stem("îndemnat"), "îndemn");});
test("îndemnaţi -> îndemn", function() {deepEqual( Stem("îndemnaţi"), "îndemn");});
test("îndemne -> îndemn", function() {deepEqual( Stem("îndemne"), "îndemn");});
test("îndemnul -> îndemn", function() {deepEqual( Stem("îndemnul"), "îndemn");});
test("îndemnuri -> îndemnur", function() {deepEqual( Stem("îndemnuri"), "îndemnur");});
test("îndeobşte -> îndeobşt", function() {deepEqual( Stem("îndeobşte"), "îndeobşt");});
test("îndeosebi -> îndeoseb", function() {deepEqual( Stem("îndeosebi"), "îndeoseb");});
test("îndepărta -> îndepărt", function() {deepEqual( Stem("îndepărta"), "îndepărt");});
test("îndepărtare -> îndepărt", function() {deepEqual( Stem("îndepărtare"), "îndepărt");});
test("îndepărtat -> îndepărt", function() {deepEqual( Stem("îndepărtat"), "îndepărt");});
test("îndepărtată -> îndepărt", function() {deepEqual( Stem("îndepărtată"), "îndepărt");});
test("îndepărtate -> îndepărt", function() {deepEqual( Stem("îndepărtate"), "îndepărt");});
test("îndepărtăm -> îndepărt", function() {deepEqual( Stem("îndepărtăm"), "îndepărt");});
test("îndepărtează -> îndepărt", function() {deepEqual( Stem("îndepărtează"), "îndepărt");});
test("îndepărtezi -> îndepărt", function() {deepEqual( Stem("îndepărtezi"), "îndepărt");});
test("îndeplinea -> îndeplin", function() {deepEqual( Stem("îndeplinea"), "îndeplin");});
test("îndeplinească -> îndeplin", function() {deepEqual( Stem("îndeplinească"), "îndeplin");});
test("îndeplinesc -> îndeplin", function() {deepEqual( Stem("îndeplinesc"), "îndeplin");});
test("îndeplineşte -> îndeplin", function() {deepEqual( Stem("îndeplineşte"), "îndeplin");});
test("îndeplinim -> îndeplin", function() {deepEqual( Stem("îndeplinim"), "îndeplin");});
test("îndeplinită -> îndeplin", function() {deepEqual( Stem("îndeplinită"), "îndeplin");});
test("îndesat -> îndes", function() {deepEqual( Stem("îndesat"), "îndes");});
test("îndesate -> îndes", function() {deepEqual( Stem("îndesate"), "îndes");});
test("îndestul -> îndest", function() {deepEqual( Stem("îndestul"), "îndest");});
test("îndestulă -> îndestul", function() {deepEqual( Stem("îndestulă"), "îndestul");});
test("îndestulării -> îndestulăr", function() {deepEqual( Stem("îndestulării"), "îndestulăr");});
test("îndiguire -> îndigu", function() {deepEqual( Stem("îndiguire"), "îndigu");});
test("îndoaie -> îndoai", function() {deepEqual( Stem("îndoaie"), "îndoai");});
test("îndoi -> îndo", function() {deepEqual( Stem("îndoi"), "îndo");});
test("îndoiala -> îndoial", function() {deepEqual( Stem("îndoiala"), "îndoial");});
test("îndoială -> îndoial", function() {deepEqual( Stem("îndoială"), "îndoial");});
test("îndoiam -> îndoi", function() {deepEqual( Stem("îndoiam"), "îndoi");});
test("îndoiască -> îndoiasc", function() {deepEqual( Stem("îndoiască"), "îndoiasc");});
test("îndoieli -> îndoiel", function() {deepEqual( Stem("îndoieli"), "îndoiel");});
test("îndoielile -> îndoiel", function() {deepEqual( Stem("îndoielile"), "îndoiel");});
test("îndoielilor -> îndoiel", function() {deepEqual( Stem("îndoielilor"), "îndoiel");});
test("îndoielnice -> îndoieln", function() {deepEqual( Stem("îndoielnice"), "îndoieln");});
test("îndoiesc -> îndoi", function() {deepEqual( Stem("îndoiesc"), "îndoi");});
test("îndoieşte -> îndoi", function() {deepEqual( Stem("îndoieşte"), "îndoi");});
test("îndoieşti -> îndoi", function() {deepEqual( Stem("îndoieşti"), "îndoi");});
test("îndoind -> îndoind", function() {deepEqual( Stem("îndoind"), "îndoind");});
test("îndoit -> îndoit", function() {deepEqual( Stem("îndoit"), "îndoit");});
test("îndoită -> îndoit", function() {deepEqual( Stem("îndoită"), "îndoit");});
test("îndoite -> îndoit", function() {deepEqual( Stem("îndoite"), "îndoit");});
test("îndoliate -> îndol", function() {deepEqual( Stem("îndoliate"), "îndol");});
test("îndoliaţi -> îndol", function() {deepEqual( Stem("îndoliaţi"), "îndol");});
test("îndrăcită -> îndrăc", function() {deepEqual( Stem("îndrăcită"), "îndrăc");});
test("îndrăgosteşte -> îndrăgost", function() {deepEqual( Stem("îndrăgosteşte"), "îndrăgost");});
test("îndrăgostit -> îndrăgost", function() {deepEqual( Stem("îndrăgostit"), "îndrăgost");});
test("îndrăgostită -> îndrăgost", function() {deepEqual( Stem("îndrăgostită"), "îndrăgost");});
test("îndrăzneala -> îndrăzneal", function() {deepEqual( Stem("îndrăzneala"), "îndrăzneal");});
test("îndrăzneală -> îndrăzneal", function() {deepEqual( Stem("îndrăzneală"), "îndrăzneal");});
test("îndrăznească -> îndrăzn", function() {deepEqual( Stem("îndrăznească"), "îndrăzn");});
test("îndrăzneaţă -> îndrăzneaţ", function() {deepEqual( Stem("îndrăzneaţă"), "îndrăzneaţ");});
test("îndrăznesc -> îndrăzn", function() {deepEqual( Stem("îndrăznesc"), "îndrăzn");});
test("îndrăzneşti -> îndrăzn", function() {deepEqual( Stem("îndrăzneşti"), "îndrăzn");});
test("îndrăznim -> îndrăzn", function() {deepEqual( Stem("îndrăznim"), "îndrăzn");});
test("îndreaptă -> îndreapt", function() {deepEqual( Stem("îndreaptă"), "îndreapt");});
test("îndrept -> îndrept", function() {deepEqual( Stem("îndrept"), "îndrept");});
test("îndrepta -> îndrept", function() {deepEqual( Stem("îndrepta"), "îndrept");});
test("îndreptat -> îndrept", function() {deepEqual( Stem("îndreptat"), "îndrept");});
test("îndreptate -> îndrept", function() {deepEqual( Stem("îndreptate"), "îndrept");});
test("îndreptări -> îndreptăr", function() {deepEqual( Stem("îndreptări"), "îndreptăr");});
test("îndreptăţească -> îndreptăţ", function() {deepEqual( Stem("îndreptăţească"), "îndreptăţ");});
test("îndreptăţesc -> îndreptăţ", function() {deepEqual( Stem("îndreptăţesc"), "îndreptăţ");});
test("îndreptăţeşte -> îndreptăţ", function() {deepEqual( Stem("îndreptăţeşte"), "îndreptăţ");});
test("îndreptăţire -> îndreptăţ", function() {deepEqual( Stem("îndreptăţire"), "îndreptăţ");});
test("îndreptăţirea -> îndreptăţ", function() {deepEqual( Stem("îndreptăţirea"), "îndreptăţ");});
test("îndreptăţirei -> îndreptăţire", function() {deepEqual( Stem("îndreptăţirei"), "îndreptăţire");});
test("îndreptăţit -> îndreptăţ", function() {deepEqual( Stem("îndreptăţit"), "îndreptăţ");});
test("îndreptăţită -> îndreptăţ", function() {deepEqual( Stem("îndreptăţită"), "îndreptăţ");});
test("îndrepte -> îndrept", function() {deepEqual( Stem("îndrepte"), "îndrept");});
test("înduioşase -> înduioş", function() {deepEqual( Stem("înduioşase"), "înduioş");});
test("înduioşat -> înduioş", function() {deepEqual( Stem("înduioşat"), "înduioş");});
test("înduioşată -> înduioş", function() {deepEqual( Stem("înduioşată"), "înduioş");});
test("înduioşate -> înduioş", function() {deepEqual( Stem("înduioşate"), "înduioş");});
test("înduioşaţi -> înduioş", function() {deepEqual( Stem("înduioşaţi"), "înduioş");});
test("înduioşătoare -> înduioş", function() {deepEqual( Stem("înduioşătoare"), "înduioş");});
test("înduioşează -> înduioş", function() {deepEqual( Stem("înduioşează"), "înduioş");});
test("înduioşeze -> înduioş", function() {deepEqual( Stem("înduioşeze"), "înduioş");});
test("îndulcită -> îndulc", function() {deepEqual( Stem("îndulcită"), "îndulc");});
test("îndulcite -> îndulc", function() {deepEqual( Stem("îndulcite"), "îndulc");});
test("înduplecaţi -> înduplec", function() {deepEqual( Stem("înduplecaţi"), "înduplec");});
test("îndur -> îndur", function() {deepEqual( Stem("îndur"), "îndur");});
test("îndura -> îndur", function() {deepEqual( Stem("îndura"), "îndur");});
test("înduram -> îndur", function() {deepEqual( Stem("înduram"), "îndur");});
test("îndurat -> îndur", function() {deepEqual( Stem("îndurat"), "îndur");});
test("îndurau -> îndur", function() {deepEqual( Stem("îndurau"), "îndur");});
test("îndură -> îndur", function() {deepEqual( Stem("îndură"), "îndur");});
test("îndure -> îndur", function() {deepEqual( Stem("îndure"), "îndur");});
test("îndurerat -> îndurer", function() {deepEqual( Stem("îndurerat"), "îndurer");});
test("îndurerată -> îndurer", function() {deepEqual( Stem("îndurerată"), "îndurer");});
test("îndureraţi -> îndurer", function() {deepEqual( Stem("îndureraţi"), "îndurer");});
test("înduşmănit -> înduşmăn", function() {deepEqual( Stem("înduşmănit"), "înduşmăn");});
test("înece -> înec", function() {deepEqual( Stem("înece"), "înec");});
test("îneci -> înec", function() {deepEqual( Stem("îneci"), "înec");});
test("înfăptuită -> înfăptu", function() {deepEqual( Stem("înfăptuită"), "înfăptu");});
test("înfăşat -> înfăş", function() {deepEqual( Stem("înfăşat"), "înfăş");});
test("înfăşaţi -> înfăş", function() {deepEqual( Stem("înfăşaţi"), "înfăş");});
test("înfăşur -> înfăşur", function() {deepEqual( Stem("înfăşur"), "înfăşur");});
test("înfăşurat -> înfăşur", function() {deepEqual( Stem("înfăşurat"), "înfăşur");});
test("înfăţişa -> înfăţiş", function() {deepEqual( Stem("înfăţişa"), "înfăţiş");});
test("înfăţişară -> înfăţiş", function() {deepEqual( Stem("înfăţişară"), "înfăţiş");});
test("înfăţişare -> înfăţiş", function() {deepEqual( Stem("înfăţişare"), "înfăţiş");});
test("înfăţişată -> înfăţiş", function() {deepEqual( Stem("înfăţişată"), "înfăţiş");});
test("înfăţişaţi -> înfăţiş", function() {deepEqual( Stem("înfăţişaţi"), "înfăţiş");});
test("înfăţişăm -> înfăţiş", function() {deepEqual( Stem("înfăţişăm"), "înfăţiş");});
test("înfăţişează -> înfăţiş", function() {deepEqual( Stem("înfăţişează"), "înfăţiş");});
test("înfierbântat -> înfierbânt", function() {deepEqual( Stem("înfierbântat"), "înfierbânt");});
test("înfierbântaţi -> înfierbânt", function() {deepEqual( Stem("înfierbântaţi"), "înfierbânt");});
test("înfig -> înfig", function() {deepEqual( Stem("înfig"), "înfig");});
test("înfigându -> înfig", function() {deepEqual( Stem("înfigându"), "înfig");});
test("înfigă -> înfig", function() {deepEqual( Stem("înfigă"), "înfig");});
test("înfige -> înfig", function() {deepEqual( Stem("înfige"), "înfig");});
test("înfiorat -> înfior", function() {deepEqual( Stem("înfiorat"), "înfior");});
test("înfiorată -> înfior", function() {deepEqual( Stem("înfiorată"), "înfior");});
test("înfioraţi -> înfior", function() {deepEqual( Stem("înfioraţi"), "înfior");});
test("înfiorau -> înfior", function() {deepEqual( Stem("înfiorau"), "înfior");});
test("înfiorătoare -> înfior", function() {deepEqual( Stem("înfiorătoare"), "înfior");});
test("înfipt -> înfipt", function() {deepEqual( Stem("înfipt"), "înfipt");});
test("înfipte -> înfipt", function() {deepEqual( Stem("înfipte"), "înfipt");});
test("înfipţi -> înfipţ", function() {deepEqual( Stem("înfipţi"), "înfipţ");});
test("înfiripat -> înfirip", function() {deepEqual( Stem("înfiripat"), "înfirip");});
test("înflăcărare -> înflăcăr", function() {deepEqual( Stem("înflăcărare"), "înflăcăr");});
test("înflăcărat -> înflăcăr", function() {deepEqual( Stem("înflăcărat"), "înflăcăr");});
test("înflăcărată -> înflăcăr", function() {deepEqual( Stem("înflăcărată"), "înflăcăr");});
test("înflăcărează -> înflăcăr", function() {deepEqual( Stem("înflăcărează"), "înflăcăr");});
test("înflorată -> înflor", function() {deepEqual( Stem("înflorată"), "înflor");});
test("înflorea -> înflor", function() {deepEqual( Stem("înflorea"), "înflor");});
test("înflorească -> înflor", function() {deepEqual( Stem("înflorească"), "înflor");});
test("înfloresc -> înflor", function() {deepEqual( Stem("înfloresc"), "înflor");});
test("înfloreşte -> înflor", function() {deepEqual( Stem("înfloreşte"), "înflor");});
test("înflori -> înflor", function() {deepEqual( Stem("înflori"), "înflor");});
test("înflorire -> înflor", function() {deepEqual( Stem("înflorire"), "înflor");});
test("înflorirea -> înflor", function() {deepEqual( Stem("înflorirea"), "înflor");});
test("înflorise -> înflor", function() {deepEqual( Stem("înflorise"), "înflor");});
test("înflorit -> înflor", function() {deepEqual( Stem("înflorit"), "înflor");});
test("înflorită -> înflor", function() {deepEqual( Stem("înflorită"), "înflor");});
test("înflorite -> înflor", function() {deepEqual( Stem("înflorite"), "înflor");});
test("înfloritoare -> înflor", function() {deepEqual( Stem("înfloritoare"), "înflor");});
test("înflorituri -> înfloritur", function() {deepEqual( Stem("înflorituri"), "înfloritur");});
test("înfrânările -> înfrânăr", function() {deepEqual( Stem("înfrânările"), "înfrânăr");});
test("înfrâng -> înfrâng", function() {deepEqual( Stem("înfrâng"), "înfrâng");});
test("înfrângere -> înfrâng", function() {deepEqual( Stem("înfrângere"), "înfrâng");});
test("înfrângerea -> înfrâng", function() {deepEqual( Stem("înfrângerea"), "înfrâng");});
test("înfrângerile -> înfrânger", function() {deepEqual( Stem("înfrângerile"), "înfrânger");});
test("înfrânt -> înfrânt", function() {deepEqual( Stem("înfrânt"), "înfrânt");});
test("înfrânţi -> înfrânţ", function() {deepEqual( Stem("înfrânţi"), "înfrânţ");});
test("înfricoşat -> înfricoş", function() {deepEqual( Stem("înfricoşat"), "înfricoş");});
test("înfrigurarea -> înfrigur", function() {deepEqual( Stem("înfrigurarea"), "înfrigur");});
test("înfrigurat -> înfrigur", function() {deepEqual( Stem("înfrigurat"), "înfrigur");});
test("înfrumuseţa -> înfrumuseţ", function() {deepEqual( Stem("înfrumuseţa"), "înfrumuseţ");});
test("înfrumuseţeze -> înfrumuseţ", function() {deepEqual( Stem("înfrumuseţeze"), "înfrumuseţ");});
test("înfundaseră -> înfund", function() {deepEqual( Stem("înfundaseră"), "înfund");});
test("înfundat -> înfund", function() {deepEqual( Stem("înfundat"), "înfund");});
test("înfundată -> înfund", function() {deepEqual( Stem("înfundată"), "înfund");});
test("înfundate -> înfund", function() {deepEqual( Stem("înfundate"), "înfund");});
test("înfuriat -> înfur", function() {deepEqual( Stem("înfuriat"), "înfur");});
test("înfuriată -> înfur", function() {deepEqual( Stem("înfuriată"), "înfur");});
test("înfurie -> înfur", function() {deepEqual( Stem("înfurie"), "înfur");});
test("îngâmfare -> îngâmf", function() {deepEqual( Stem("îngâmfare"), "îngâmf");});
test("îngâmfat -> îngâmf", function() {deepEqual( Stem("îngâmfat"), "îngâmf");});
test("îngânându -> îngân", function() {deepEqual( Stem("îngânându"), "îngân");});
test("îngândurat -> îngândur", function() {deepEqual( Stem("îngândurat"), "îngândur");});
test("îngândurată -> îngândur", function() {deepEqual( Stem("îngândurată"), "îngândur");});
test("îngăduie -> îngădui", function() {deepEqual( Stem("îngăduie"), "îngădui");});
test("îngăduinţa -> îngăduinţ", function() {deepEqual( Stem("îngăduinţa"), "îngăduinţ");});
test("îngăduinţă -> îngăduinţ", function() {deepEqual( Stem("îngăduinţă"), "îngăduinţ");});
test("îngăduit -> îngădu", function() {deepEqual( Stem("îngăduit"), "îngădu");});
test("îngăduite -> îngădu", function() {deepEqual( Stem("îngăduite"), "îngădu");});
test("îngăduitoare -> îngădu", function() {deepEqual( Stem("îngăduitoare"), "îngădu");});
test("îngăduitor -> îngădu", function() {deepEqual( Stem("îngăduitor"), "îngădu");});
test("îngălbenite -> îngălben", function() {deepEqual( Stem("îngălbenite"), "îngălben");});
test("îngenuncheat -> îngenunch", function() {deepEqual( Stem("îngenuncheat"), "îngenunch");});
test("înger -> înger", function() {deepEqual( Stem("înger"), "înger");});
test("îngeraş -> îngeraş", function() {deepEqual( Stem("îngeraş"), "îngeraş");});
test("îngeri -> înger", function() {deepEqual( Stem("îngeri"), "înger");});
test("îngerii -> înger", function() {deepEqual( Stem("îngerii"), "înger");});
test("îngheaţă -> îngheaţ", function() {deepEqual( Stem("îngheaţă"), "îngheaţ");});
test("înghesui -> înghes", function() {deepEqual( Stem("înghesui"), "înghes");});
test("înghesuia -> înghesui", function() {deepEqual( Stem("înghesuia"), "înghesui");});
test("înghesuiala -> înghesuial", function() {deepEqual( Stem("înghesuiala"), "înghesuial");});
test("înghesuiau -> înghesui", function() {deepEqual( Stem("înghesuiau"), "înghesui");});
test("înghesuim -> înghesu", function() {deepEqual( Stem("înghesuim"), "înghesu");});
test("înghesuirea -> înghesu", function() {deepEqual( Stem("înghesuirea"), "înghesu");});
test("înghesuit -> înghesu", function() {deepEqual( Stem("înghesuit"), "înghesu");});
test("înghesuiţi -> înghesu", function() {deepEqual( Stem("înghesuiţi"), "înghesu");});
test("îngheţ -> îngheţ", function() {deepEqual( Stem("îngheţ"), "îngheţ");});
test("îngheţat -> îngheţ", function() {deepEqual( Stem("îngheţat"), "îngheţ");});
test("îngheţată -> îngheţ", function() {deepEqual( Stem("îngheţată"), "îngheţ");});
test("îngheţate -> îngheţ", function() {deepEqual( Stem("îngheţate"), "îngheţ");});
test("înghit -> înghit", function() {deepEqual( Stem("înghit"), "înghit");});
test("înghită -> înghit", function() {deepEqual( Stem("înghită"), "înghit");});
test("înghite -> înghit", function() {deepEqual( Stem("înghite"), "înghit");});
test("înghiţit -> înghiţ", function() {deepEqual( Stem("înghiţit"), "înghiţ");});
test("înghiţita -> înghiţ", function() {deepEqual( Stem("înghiţita"), "înghiţ");});
test("îngloba -> înglob", function() {deepEqual( Stem("îngloba"), "înglob");});
test("înglobare -> înglob", function() {deepEqual( Stem("înglobare"), "înglob");});
test("înglobarea -> înglob", function() {deepEqual( Stem("înglobarea"), "înglob");});
test("înglobat -> înglob", function() {deepEqual( Stem("înglobat"), "înglob");});
test("înglobându -> înglob", function() {deepEqual( Stem("înglobându"), "înglob");});
test("înglobăm -> înglob", function() {deepEqual( Stem("înglobăm"), "înglob");});
test("înglobării -> înglobăr", function() {deepEqual( Stem("înglobării"), "înglobăr");});
test("înglobează -> înglob", function() {deepEqual( Stem("înglobează"), "înglob");});
test("îngrădite -> îngrăd", function() {deepEqual( Stem("îngrădite"), "îngrăd");});
test("îngrămădea -> îngrămăd", function() {deepEqual( Stem("îngrămădea"), "îngrămăd");});
test("îngrămădească -> îngrămăd", function() {deepEqual( Stem("îngrămădească"), "îngrămăd");});
test("îngrămădiseră -> îngrămăd", function() {deepEqual( Stem("îngrămădiseră"), "îngrămăd");});
test("îngrămădite -> îngrămăd", function() {deepEqual( Stem("îngrămădite"), "îngrămăd");});
test("îngrămădiţi -> îngrămăd", function() {deepEqual( Stem("îngrămădiţi"), "îngrămăd");});
test("îngrăşa -> îngrăş", function() {deepEqual( Stem("îngrăşa"), "îngrăş");});
test("îngrăşare -> îngrăş", function() {deepEqual( Stem("îngrăşare"), "îngrăş");});
test("îngrăşat -> îngrăş", function() {deepEqual( Stem("îngrăşat"), "îngrăş");});
test("îngrăşăminte -> îngrăşămint", function() {deepEqual( Stem("îngrăşăminte"), "îngrăşămint");});
test("îngreuia -> îngreu", function() {deepEqual( Stem("îngreuia"), "îngreu");});
test("îngreuiază -> îngreuiaz", function() {deepEqual( Stem("îngreuiază"), "îngreuiaz");});
test("îngreuind -> îngreu", function() {deepEqual( Stem("îngreuind"), "îngreu");});
test("îngreunau -> îngreun", function() {deepEqual( Stem("îngreunau"), "îngreun");});
test("îngrijea -> îngrij", function() {deepEqual( Stem("îngrijea"), "îngrij");});
test("îngrijească -> îngrij", function() {deepEqual( Stem("îngrijească"), "îngrij");});
test("îngrijesc -> îngrij", function() {deepEqual( Stem("îngrijesc"), "îngrij");});
test("îngrijeşte -> îngrij", function() {deepEqual( Stem("îngrijeşte"), "îngrij");});
test("îngriji -> îngrij", function() {deepEqual( Stem("îngriji"), "îngrij");});
test("îngrijirea -> îngrij", function() {deepEqual( Stem("îngrijirea"), "îngrij");});
test("îngrijit -> îngrij", function() {deepEqual( Stem("îngrijit"), "îngrij");});
test("îngrijită -> îngrij", function() {deepEqual( Stem("îngrijită"), "îngrij");});
test("îngrijiţi -> îngrij", function() {deepEqual( Stem("îngrijiţi"), "îngrij");});
test("îngrijora -> îngrijor", function() {deepEqual( Stem("îngrijora"), "îngrijor");});
test("îngrijorare -> îngrijor", function() {deepEqual( Stem("îngrijorare"), "îngrijor");});
test("îngrijorarea -> îngrijor", function() {deepEqual( Stem("îngrijorarea"), "îngrijor");});
test("îngrijorat -> îngrijor", function() {deepEqual( Stem("îngrijorat"), "îngrijor");});
test("îngrijorată -> îngrijor", function() {deepEqual( Stem("îngrijorată"), "îngrijor");});
test("îngrijorate -> îngrijor", function() {deepEqual( Stem("îngrijorate"), "îngrijor");});
test("îngrijoraţi -> îngrijor", function() {deepEqual( Stem("îngrijoraţi"), "îngrijor");});
test("îngrijorării -> îngrijorăr", function() {deepEqual( Stem("îngrijorării"), "îngrijorăr");});
test("îngrijorătoare -> îngrijor", function() {deepEqual( Stem("îngrijorătoare"), "îngrijor");});
test("îngrijorător -> îngrijor", function() {deepEqual( Stem("îngrijorător"), "îngrijor");});
test("îngrijorează -> îngrijor", function() {deepEqual( Stem("îngrijorează"), "îngrijor");});
test("îngrijoreze -> îngrijor", function() {deepEqual( Stem("îngrijoreze"), "îngrijor");});
test("îngroapă -> îngroap", function() {deepEqual( Stem("îngroapă"), "îngroap");});
test("îngroaşă -> îngroaş", function() {deepEqual( Stem("îngroaşă"), "îngroaş");});
test("îngroaşe -> îngroaş", function() {deepEqual( Stem("îngroaşe"), "îngroaş");});
test("îngropat -> îngrop", function() {deepEqual( Stem("îngropat"), "îngrop");});
test("îngropaţi -> îngrop", function() {deepEqual( Stem("îngropaţi"), "îngrop");});
test("îngropându -> îngrop", function() {deepEqual( Stem("îngropându"), "îngrop");});
test("îngroşare -> îngroş", function() {deepEqual( Stem("îngroşare"), "îngroş");});
test("îngrozea -> îngroz", function() {deepEqual( Stem("îngrozea"), "îngroz");});
test("îngrozesc -> îngroz", function() {deepEqual( Stem("îngrozesc"), "îngroz");});
test("îngrozeşte -> îngroz", function() {deepEqual( Stem("îngrozeşte"), "îngroz");});
test("îngrozeşti -> îngroz", function() {deepEqual( Stem("îngrozeşti"), "îngroz");});
test("îngrozit -> îngroz", function() {deepEqual( Stem("îngrozit"), "îngroz");});
test("îngrozită -> îngroz", function() {deepEqual( Stem("îngrozită"), "îngroz");});
test("îngrozitoare -> îngroz", function() {deepEqual( Stem("îngrozitoare"), "îngroz");});
test("îngrozitor -> îngroz", function() {deepEqual( Stem("îngrozitor"), "îngroz");});
test("îngroziţi -> îngroz", function() {deepEqual( Stem("îngroziţi"), "îngroz");});
test("îngurgitate -> îngurg", function() {deepEqual( Stem("îngurgitate"), "îngurg");});
test("îngustă -> îngust", function() {deepEqual( Stem("îngustă"), "îngust");});
test("înguste -> îngust", function() {deepEqual( Stem("înguste"), "îngust");});
test("înhăţase -> înhăţ", function() {deepEqual( Stem("înhăţase"), "înhăţ");});
test("înjghebare -> înjgheb", function() {deepEqual( Stem("înjghebare"), "înjgheb");});
test("înjumătăţeşte -> înjumătăţ", function() {deepEqual( Stem("înjumătăţeşte"), "înjumătăţ");});
test("înjumătăţi -> înjumătăţ", function() {deepEqual( Stem("înjumătăţi"), "înjumătăţ");});
test("înjumătăţit -> înjumătăţ", function() {deepEqual( Stem("înjumătăţit"), "înjumătăţ");});
test("înjumătăţită -> înjumătăţ", function() {deepEqual( Stem("înjumătăţită"), "înjumătăţ");});
test("înjunghiată -> înjungh", function() {deepEqual( Stem("înjunghiată"), "înjungh");});
test("înjunghie -> înjungh", function() {deepEqual( Stem("înjunghie"), "înjungh");});
test("înjunghiere -> înjunghier", function() {deepEqual( Stem("înjunghiere"), "înjunghier");});
test("înjura -> înjur", function() {deepEqual( Stem("înjura"), "înjur");});
test("înjură -> înjur", function() {deepEqual( Stem("înjură"), "înjur");});
test("înjurătura -> înjurătur", function() {deepEqual( Stem("înjurătura"), "înjurătur");});
test("înjurături -> înjurătur", function() {deepEqual( Stem("înjurături"), "înjurătur");});
test("înjurăturile -> înjurătur", function() {deepEqual( Stem("înjurăturile"), "înjurătur");});
test("înlăcrămaţi -> înlăcrăm", function() {deepEqual( Stem("înlăcrămaţi"), "înlăcrăm");});
test("înlăcrimat -> înlăcrim", function() {deepEqual( Stem("înlăcrimat"), "înlăcrim");});
test("înlăcrimată -> înlăcrim", function() {deepEqual( Stem("înlăcrimată"), "înlăcrim");});
test("înlăcrimate -> înlăcrim", function() {deepEqual( Stem("înlăcrimate"), "înlăcrim");});
test("înlăcrimaţi -> înlăcrim", function() {deepEqual( Stem("înlăcrimaţi"), "înlăcrim");});
test("înlănţuire -> înlănţu", function() {deepEqual( Stem("înlănţuire"), "înlănţu");});
test("înlănţuirea -> înlănţu", function() {deepEqual( Stem("înlănţuirea"), "înlănţu");});
test("înlătura -> înlătur", function() {deepEqual( Stem("înlătura"), "înlătur");});
test("înlăturat -> înlătur", function() {deepEqual( Stem("înlăturat"), "înlătur");});
test("înlătură -> înlăt", function() {deepEqual( Stem("înlătură"), "înlăt");});
test("înlăturăm -> înlăt", function() {deepEqual( Stem("înlăturăm"), "înlăt");});
test("înlăture -> înlătur", function() {deepEqual( Stem("înlăture"), "înlătur");});
test("înlemnit -> înlemn", function() {deepEqual( Stem("înlemnit"), "înlemn");});
test("înlemniţi -> înlemn", function() {deepEqual( Stem("înlemniţi"), "înlemn");});
test("înlesneşte -> înlesn", function() {deepEqual( Stem("înlesneşte"), "înlesn");});
test("înlesnită -> înlesn", function() {deepEqual( Stem("înlesnită"), "înlesn");});
test("înlocui -> înloc", function() {deepEqual( Stem("înlocui"), "înloc");});
test("înlocuiam -> înlocui", function() {deepEqual( Stem("înlocuiam"), "înlocui");});
test("înlocuiască -> înlocuiasc", function() {deepEqual( Stem("înlocuiască"), "înlocuiasc");});
test("înlocuim -> înlocu", function() {deepEqual( Stem("înlocuim"), "înlocu");});
test("înlocuiri -> înlocuir", function() {deepEqual( Stem("înlocuiri"), "înlocuir");});
test("înlocuit -> înlocu", function() {deepEqual( Stem("înlocuit"), "înlocu");});
test("înlocuită -> înlocu", function() {deepEqual( Stem("înlocuită"), "înlocu");});
test("înlocuite -> înlocu", function() {deepEqual( Stem("înlocuite"), "înlocu");});
test("înmănuşat -> înmănuş", function() {deepEqual( Stem("înmănuşat"), "înmănuş");});
test("înmormântare -> înmormânt", function() {deepEqual( Stem("înmormântare"), "înmormânt");});
test("înmuiat -> înmui", function() {deepEqual( Stem("înmuiat"), "înmui");});
test("înmuiată -> înmui", function() {deepEqual( Stem("înmuiată"), "înmui");});
test("înmuiate -> înmui", function() {deepEqual( Stem("înmuiate"), "înmui");});
test("înmuiaţi -> înmui", function() {deepEqual( Stem("înmuiaţi"), "înmui");});
test("înmulţeşte -> înmulţ", function() {deepEqual( Stem("înmulţeşte"), "înmulţ");});
test("înnebunea -> înnebun", function() {deepEqual( Stem("înnebunea"), "înnebun");});
test("înnebunească -> înnebun", function() {deepEqual( Stem("înnebunească"), "înnebun");});
test("înnebuneau -> înnebun", function() {deepEqual( Stem("înnebuneau"), "înnebun");});
test("înnebunesc -> înnebun", function() {deepEqual( Stem("înnebunesc"), "înnebun");});
test("înnebuni -> înnebun", function() {deepEqual( Stem("înnebuni"), "înnebun");});
test("înnebunit -> înnebun", function() {deepEqual( Stem("înnebunit"), "înnebun");});
test("înnebunită -> înnebun", function() {deepEqual( Stem("înnebunită"), "înnebun");});
test("înnebunite -> înnebun", function() {deepEqual( Stem("înnebunite"), "înnebun");});
test("înnebunitoare -> înnebun", function() {deepEqual( Stem("înnebunitoare"), "înnebun");});
test("înnebuniţi -> înnebun", function() {deepEqual( Stem("înnebuniţi"), "înnebun");});
test("înnegrea -> înnegr", function() {deepEqual( Stem("înnegrea"), "înnegr");});
test("înnegrit -> înnegr", function() {deepEqual( Stem("înnegrit"), "înnegr");});
test("înnod -> înnod", function() {deepEqual( Stem("înnod"), "înnod");});
test("înnoiesc -> înnoi", function() {deepEqual( Stem("înnoiesc"), "înnoi");});
test("înrâurirea -> înrâur", function() {deepEqual( Stem("înrâurirea"), "înrâur");});
test("înrâurit -> înrâur", function() {deepEqual( Stem("înrâurit"), "înrâur");});
test("înrădăcinat -> înrădăcin", function() {deepEqual( Stem("înrădăcinat"), "înrădăcin");});
test("înregistreze -> înregistr", function() {deepEqual( Stem("înregistreze"), "înregistr");});
test("înroşit -> înroş", function() {deepEqual( Stem("înroşit"), "înroş");});
test("înroşite -> înroş", function() {deepEqual( Stem("înroşite"), "înroş");});
test("înrourat -> înrour", function() {deepEqual( Stem("înrourat"), "înrour");});
test("înrourată -> înrour", function() {deepEqual( Stem("înrourată"), "înrour");});
test("înrudire -> înrud", function() {deepEqual( Stem("înrudire"), "înrud");});
test("înrudirea -> înrud", function() {deepEqual( Stem("înrudirea"), "înrud");});
test("înrudite -> înrud", function() {deepEqual( Stem("înrudite"), "înrud");});
test("însa -> însa", function() {deepEqual( Stem("însa"), "însa");});
test("însângerată -> însânger", function() {deepEqual( Stem("însângerată"), "însânger");});
test("însă -> însă", function() {deepEqual( Stem("însă"), "însă");});
test("însăileze -> însăil", function() {deepEqual( Stem("însăileze"), "însăil");});
test("însănătoşit -> însănătoş", function() {deepEqual( Stem("însănătoşit"), "însănătoş");});
test("însărcinare -> însărcin", function() {deepEqual( Stem("însărcinare"), "însărcin");});
test("însărcinată -> însărcin", function() {deepEqual( Stem("însărcinată"), "însărcin");});
test("însăşi -> însăş", function() {deepEqual( Stem("însăşi"), "însăş");});
test("însăţi -> însăţ", function() {deepEqual( Stem("însăţi"), "însăţ");});
test("înscorţoşate -> înscorţoş", function() {deepEqual( Stem("înscorţoşate"), "înscorţoş");});
test("înscrie -> înscrie", function() {deepEqual( Stem("înscrie"), "înscrie");});
test("înscris -> înscris", function() {deepEqual( Stem("înscris"), "înscris");});
test("înseamnă -> înseamn", function() {deepEqual( Stem("înseamnă"), "înseamn");});
test("înseilat -> înseil", function() {deepEqual( Stem("înseilat"), "înseil");});
test("însele -> înse", function() {deepEqual( Stem("însele"), "înse");});
test("însemna -> însemn", function() {deepEqual( Stem("însemna"), "însemn");});
test("însemnare -> însemn", function() {deepEqual( Stem("însemnare"), "însemn");});
test("însemnarea -> însemn", function() {deepEqual( Stem("însemnarea"), "însemn");});
test("însemnat -> însemn", function() {deepEqual( Stem("însemnat"), "însemn");});
test("însemnată -> însemn", function() {deepEqual( Stem("însemnată"), "însemn");});
test("însemnate -> însemn", function() {deepEqual( Stem("însemnate"), "însemn");});
test("însemnaţi -> însemn", function() {deepEqual( Stem("însemnaţi"), "însemn");});
test("însemnau -> însemn", function() {deepEqual( Stem("însemnau"), "însemn");});
test("însemnăm -> însemn", function() {deepEqual( Stem("însemnăm"), "însemn");});
test("însemnătate -> însemnăt", function() {deepEqual( Stem("însemnătate"), "însemnăt");});
test("însemne -> însemn", function() {deepEqual( Stem("însemne"), "însemn");});
test("însemnează -> însemn", function() {deepEqual( Stem("însemnează"), "însemn");});
test("însemnez -> însemn", function() {deepEqual( Stem("însemnez"), "însemn");});
test("înserare -> înser", function() {deepEqual( Stem("înserare"), "înser");});
test("înserarea -> înser", function() {deepEqual( Stem("înserarea"), "înser");});
test("înserat -> înser", function() {deepEqual( Stem("înserat"), "înser");});
test("înserate -> înser", function() {deepEqual( Stem("înserate"), "înser");});
test("înserează -> înser", function() {deepEqual( Stem("înserează"), "înser");});
test("înseriat -> înser", function() {deepEqual( Stem("înseriat"), "înser");});
test("înseşi -> înseş", function() {deepEqual( Stem("înseşi"), "înseş");});
test("însor -> însor", function() {deepEqual( Stem("însor"), "însor");});
test("însorită -> însor", function() {deepEqual( Stem("însorită"), "însor");});
test("însorite -> însor", function() {deepEqual( Stem("însorite"), "însor");});
test("însoţea -> însoţ", function() {deepEqual( Stem("însoţea"), "însoţ");});
test("însoţeau -> însoţ", function() {deepEqual( Stem("însoţeau"), "însoţ");});
test("înspăimântat -> înspăimânt", function() {deepEqual( Stem("înspăimântat"), "înspăimânt");});
test("înspăimântată -> înspăimânt", function() {deepEqual( Stem("înspăimântată"), "înspăimânt");});
test("înspăimântătoare -> înspăimânt", function() {deepEqual( Stem("înspăimântătoare"), "înspăimânt");});
test("înspre -> înspre", function() {deepEqual( Stem("înspre"), "înspre");});
test("înspumate -> înspum", function() {deepEqual( Stem("înspumate"), "înspum");});
test("înstrăina -> înstrăin", function() {deepEqual( Stem("înstrăina"), "înstrăin");});
test("înstrăinare -> înstrăin", function() {deepEqual( Stem("înstrăinare"), "înstrăin");});
test("înstrăinat -> înstrăin", function() {deepEqual( Stem("înstrăinat"), "înstrăin");});
test("înstrăineze -> înstrăin", function() {deepEqual( Stem("înstrăineze"), "înstrăin");});
test("însufleţit -> însufleţ", function() {deepEqual( Stem("însufleţit"), "însufleţ");});
test("însul -> îns", function() {deepEqual( Stem("însul"), "îns");});
test("însumi -> însum", function() {deepEqual( Stem("însumi"), "însum");});
test("însurat -> însur", function() {deepEqual( Stem("însurat"), "însur");});
test("însuşi -> însuş", function() {deepEqual( Stem("însuşi"), "însuş");});
test("însuşim -> însuş", function() {deepEqual( Stem("însuşim"), "însuş");});
test("însuţi -> însuţ", function() {deepEqual( Stem("însuţi"), "însuţ");});
test("înşală -> înşal", function() {deepEqual( Stem("înşală"), "înşal");});
test("înşeală -> înşeal", function() {deepEqual( Stem("înşeală"), "înşeal");});
test("înşela -> înşel", function() {deepEqual( Stem("înşela"), "înşel");});
test("înşelat -> înşel", function() {deepEqual( Stem("înşelat"), "înşel");});
test("înşelaţi -> înşel", function() {deepEqual( Stem("înşelaţi"), "înşel");});
test("înşelând -> înşel", function() {deepEqual( Stem("înşelând"), "înşel");});
test("înşelătoare -> înşel", function() {deepEqual( Stem("înşelătoare"), "înşel");});
test("înşelător -> înşel", function() {deepEqual( Stem("înşelător"), "înşel");});
test("înşele -> înşe", function() {deepEqual( Stem("înşele"), "înşe");});
test("înşeli -> înşel", function() {deepEqual( Stem("înşeli"), "înşel");});
test("înşfăca -> înşfăc", function() {deepEqual( Stem("înşfăca"), "înşfăc");});
test("înşine -> înşin", function() {deepEqual( Stem("înşine"), "înşin");});
test("înşir -> înşir", function() {deepEqual( Stem("înşir"), "înşir");});
test("înşirarea -> înşir", function() {deepEqual( Stem("înşirarea"), "înşir");});
test("înşirat -> înşir", function() {deepEqual( Stem("înşirat"), "înşir");});
test("înşirate -> înşir", function() {deepEqual( Stem("înşirate"), "înşir");});
test("înşiraţi -> înşir", function() {deepEqual( Stem("înşiraţi"), "înşir");});
test("înşiră -> înşir", function() {deepEqual( Stem("înşiră"), "înşir");});
test("înşiruire -> înşiru", function() {deepEqual( Stem("înşiruire"), "înşiru");});
test("înşiruit -> înşiru", function() {deepEqual( Stem("înşiruit"), "înşiru");});
test("înşişi -> înşiş", function() {deepEqual( Stem("înşişi"), "înşiş");});
test("înştiinţarea -> înştiinţ", function() {deepEqual( Stem("înştiinţarea"), "înştiinţ");});
test("înşurubare -> înşurub", function() {deepEqual( Stem("înşurubare"), "înşurub");});
test("întâi -> întâ", function() {deepEqual( Stem("întâi"), "întâ");});
test("întâia -> întâi", function() {deepEqual( Stem("întâia"), "întâi");});
test("întâie -> întâi", function() {deepEqual( Stem("întâie"), "întâi");});
test("întâile -> întâ", function() {deepEqual( Stem("întâile"), "întâ");});
test("întâiul -> întâi", function() {deepEqual( Stem("întâiul"), "întâi");});
test("întâlneam -> întâln", function() {deepEqual( Stem("întâlneam"), "întâln");});
test("întâlnească -> întâln", function() {deepEqual( Stem("întâlnească"), "întâln");});
test("întâlnesc -> întâln", function() {deepEqual( Stem("întâlnesc"), "întâln");});
test("întâlneşte -> întâln", function() {deepEqual( Stem("întâlneşte"), "întâln");});
test("întâlneşti -> întâln", function() {deepEqual( Stem("întâlneşti"), "întâln");});
test("întâlni -> întâln", function() {deepEqual( Stem("întâlni"), "întâln");});
test("întâlnim -> întâln", function() {deepEqual( Stem("întâlnim"), "întâln");});
test("întâlnire -> întâln", function() {deepEqual( Stem("întâlnire"), "întâln");});
test("întâlnirea -> întâln", function() {deepEqual( Stem("întâlnirea"), "întâln");});
test("întâlnisem -> întâln", function() {deepEqual( Stem("întâlnisem"), "întâln");});
test("întâlnit -> întâln", function() {deepEqual( Stem("întâlnit"), "întâln");});
test("întâlnită -> întâln", function() {deepEqual( Stem("întâlnită"), "întâln");});
test("întâmpina -> întâmpin", function() {deepEqual( Stem("întâmpina"), "întâmpin");});
test("întâmpină -> întâmpin", function() {deepEqual( Stem("întâmpină"), "întâmpin");});
test("întâmpinăm -> întâmpin", function() {deepEqual( Stem("întâmpinăm"), "întâmpin");});
test("întâmpla -> întâmpl", function() {deepEqual( Stem("întâmpla"), "întâmpl");});
test("întâmplare -> întâmpl", function() {deepEqual( Stem("întâmplare"), "întâmpl");});
test("întâmplarea -> întâmpl", function() {deepEqual( Stem("întâmplarea"), "întâmpl");});
test("întâmplase -> întâmpl", function() {deepEqual( Stem("întâmplase"), "întâmpl");});
test("întâmplat -> întâmpl", function() {deepEqual( Stem("întâmplat"), "întâmpl");});
test("întâmplate -> întâmpl", function() {deepEqual( Stem("întâmplate"), "întâmpl");});
test("întâmplau -> întâmpl", function() {deepEqual( Stem("întâmplau"), "întâmpl");});
test("întâmplă -> întâmpl", function() {deepEqual( Stem("întâmplă"), "întâmpl");});
test("întâmplări -> întâmplăr", function() {deepEqual( Stem("întâmplări"), "întâmplăr");});
test("întâmplării -> întâmplăr", function() {deepEqual( Stem("întâmplării"), "întâmplăr");});
test("întâmplările -> întâmplăr", function() {deepEqual( Stem("întâmplările"), "întâmplăr");});
test("întâmplărilor -> întâmplăr", function() {deepEqual( Stem("întâmplărilor"), "întâmplăr");});
test("întâmplătoare -> întâmpl", function() {deepEqual( Stem("întâmplătoare"), "întâmpl");});
test("întâmplător -> întâmpl", function() {deepEqual( Stem("întâmplător"), "întâmpl");});
test("întâmple -> întâmpl", function() {deepEqual( Stem("întâmple"), "întâmpl");});
test("întârzia -> întârz", function() {deepEqual( Stem("întârzia"), "întârz");});
test("întârziase -> întârzias", function() {deepEqual( Stem("întârziase"), "întârzias");});
test("întârziasem -> întârziasem", function() {deepEqual( Stem("întârziasem"), "întârziasem");});
test("întârziat -> întârz", function() {deepEqual( Stem("întârziat"), "întârz");});
test("întârziaţi -> întârz", function() {deepEqual( Stem("întârziaţi"), "întârz");});
test("întârzie -> întârz", function() {deepEqual( Stem("întârzie"), "întârz");});
test("întârziem -> întârz", function() {deepEqual( Stem("întârziem"), "întârz");});
test("întârziere -> întârzier", function() {deepEqual( Stem("întârziere"), "întârzier");});
test("întârzierea -> întârzier", function() {deepEqual( Stem("întârzierea"), "întârzier");});
test("întârzierilor -> întârzier", function() {deepEqual( Stem("întârzierilor"), "întârzier");});
test("întârzii -> întârz", function() {deepEqual( Stem("întârzii"), "întârz");});
test("întârziind -> întârziind", function() {deepEqual( Stem("întârziind"), "întârziind");});
test("întărâtat -> întărât", function() {deepEqual( Stem("întărâtat"), "întărât");});
test("întărâtată -> întărât", function() {deepEqual( Stem("întărâtată"), "întărât");});
test("întărâtaţi -> întărât", function() {deepEqual( Stem("întărâtaţi"), "întărât");});
test("întărâte -> întărât", function() {deepEqual( Stem("întărâte"), "întărât");});
test("întărească -> întăr", function() {deepEqual( Stem("întărească"), "întăr");});
test("întăresc -> întăr", function() {deepEqual( Stem("întăresc"), "întăr");});
test("întăreşte -> întăr", function() {deepEqual( Stem("întăreşte"), "întăr");});
test("întărim -> întăr", function() {deepEqual( Stem("întărim"), "întăr");});
test("întărire -> întăr", function() {deepEqual( Stem("întărire"), "întăr");});
test("întăriri -> întărir", function() {deepEqual( Stem("întăriri"), "întărir");});
test("întărit -> întăr", function() {deepEqual( Stem("întărit"), "întăr");});
test("întărite -> întăr", function() {deepEqual( Stem("întărite"), "întăr");});
test("întăriturile -> întăritur", function() {deepEqual( Stem("întăriturile"), "întăritur");});
test("întemeiate -> întemei", function() {deepEqual( Stem("întemeiate"), "întemei");});
test("întemeiază -> întemeiaz", function() {deepEqual( Stem("întemeiază"), "întemeiaz");});
test("întemeiem -> întemei", function() {deepEqual( Stem("întemeiem"), "întemei");});
test("întind -> întind", function() {deepEqual( Stem("întind"), "întind");});
test("întindă -> întind", function() {deepEqual( Stem("întindă"), "întind");});
test("întinde -> întind", function() {deepEqual( Stem("întinde"), "întind");});
test("întindea -> întind", function() {deepEqual( Stem("întindea"), "întind");});
test("întinderea -> întind", function() {deepEqual( Stem("întinderea"), "întind");});
test("întinderile -> întinder", function() {deepEqual( Stem("întinderile"), "întinder");});
test("întins -> întins", function() {deepEqual( Stem("întins"), "întins");});
test("întinsă -> întins", function() {deepEqual( Stem("întinsă"), "întins");});
test("întinse -> întin", function() {deepEqual( Stem("întinse"), "întin");});
test("întinşi -> întinş", function() {deepEqual( Stem("întinşi"), "întinş");});
test("întinzând -> întinz", function() {deepEqual( Stem("întinzând"), "întinz");});
test("întipăresc -> întipăr", function() {deepEqual( Stem("întipăresc"), "întipăr");});
test("întoarcă -> întoarc", function() {deepEqual( Stem("întoarcă"), "întoarc");});
test("întoarce -> întoarc", function() {deepEqual( Stem("întoarce"), "întoarc");});
test("întoarcem -> întoarc", function() {deepEqual( Stem("întoarcem"), "întoarc");});
test("întoarcere -> întoarc", function() {deepEqual( Stem("întoarcere"), "întoarc");});
test("întoarcerea -> întoarc", function() {deepEqual( Stem("întoarcerea"), "întoarc");});
test("întoarsă -> întoars", function() {deepEqual( Stem("întoarsă"), "întoars");});
test("întoarse -> întoar", function() {deepEqual( Stem("întoarse"), "întoar");});
test("întocmai -> întocm", function() {deepEqual( Stem("întocmai"), "întocm");});
test("întocmită -> întocm", function() {deepEqual( Stem("întocmită"), "întocm");});
test("întorc -> întorc", function() {deepEqual( Stem("întorc"), "întorc");});
test("întorcând -> întorc", function() {deepEqual( Stem("întorcând"), "întorc");});
test("întorcându -> întorc", function() {deepEqual( Stem("întorcându"), "întorc");});
test("întorcea -> întorc", function() {deepEqual( Stem("întorcea"), "întorc");});
test("întorceam -> întorc", function() {deepEqual( Stem("întorceam"), "întorc");});
test("întorci -> întorc", function() {deepEqual( Stem("întorci"), "întorc");});
test("întors -> întors", function() {deepEqual( Stem("întors"), "întors");});
test("întorsături -> întorsătur", function() {deepEqual( Stem("întorsături"), "întorsătur");});
test("întorşi -> întorş", function() {deepEqual( Stem("întorşi"), "întorş");});
test("întortocheat -> întortoch", function() {deepEqual( Stem("întortocheat"), "întortoch");});
test("întortocheată -> întortoch", function() {deepEqual( Stem("întortocheată"), "întortoch");});
test("întortocheate -> întortoch", function() {deepEqual( Stem("întortocheate"), "întortoch");});
test("întortocherile -> întortocher", function() {deepEqual( Stem("întortocherile"), "întortocher");});
test("întotdeaun -> întotdeaun", function() {deepEqual( Stem("întotdeaun"), "întotdeaun");});
test("întotdeauna -> întotdeaun", function() {deepEqual( Stem("întotdeauna"), "întotdeaun");});
test("întovărăşesc -> întovărăş", function() {deepEqual( Stem("întovărăşesc"), "întovărăş");});
test("întovărăşeşte -> întovărăş", function() {deepEqual( Stem("întovărăşeşte"), "întovărăş");});
test("întovărăşit -> întovărăş", function() {deepEqual( Stem("întovărăşit"), "întovărăş");});
test("întovărăşită -> întovărăş", function() {deepEqual( Stem("întovărăşită"), "întovărăş");});
test("întovărăşite -> întovărăş", function() {deepEqual( Stem("întovărăşite"), "întovărăş");});
test("într -> într", function() {deepEqual( Stem("într"), "într");});
test("între -> între", function() {deepEqual( Stem("între"), "între");});
test("întreabă -> întreab", function() {deepEqual( Stem("întreabă"), "întreab");});
test("întreaga -> întreag", function() {deepEqual( Stem("întreaga"), "întreag");});
test("întreagă -> întreag", function() {deepEqual( Stem("întreagă"), "întreag");});
test("întreb -> întreb", function() {deepEqual( Stem("întreb"), "întreb");});
test("întreba -> întreb", function() {deepEqual( Stem("întreba"), "întreb");});
test("întrebam -> întreb", function() {deepEqual( Stem("întrebam"), "întreb");});
test("întrebare -> întreb", function() {deepEqual( Stem("întrebare"), "întreb");});
test("întrebarea -> întreb", function() {deepEqual( Stem("întrebarea"), "întreb");});
test("întrebat -> întreb", function() {deepEqual( Stem("întrebat"), "întreb");});
test("întrebată -> întreb", function() {deepEqual( Stem("întrebată"), "întreb");});
test("întrebaţi -> întreb", function() {deepEqual( Stem("întrebaţi"), "întreb");});
test("întrebau -> întreb", function() {deepEqual( Stem("întrebau"), "întreb");});
test("întrebând -> întreb", function() {deepEqual( Stem("întrebând"), "întreb");});
test("întrebându -> întreb", function() {deepEqual( Stem("întrebându"), "întreb");});
test("întrebă -> întreb", function() {deepEqual( Stem("întrebă"), "întreb");});
test("întrebăm -> întreb", function() {deepEqual( Stem("întrebăm"), "întreb");});
test("întrebări -> întrebăr", function() {deepEqual( Stem("întrebări"), "întrebăr");});
test("întrebării -> întrebăr", function() {deepEqual( Stem("întrebării"), "întrebăr");});
test("întrebările -> întrebăr", function() {deepEqual( Stem("întrebările"), "întrebăr");});
test("întrebătoare -> întreb", function() {deepEqual( Stem("întrebătoare"), "întreb");});
test("întrebătoarea -> întreb", function() {deepEqual( Stem("întrebătoarea"), "întreb");});
test("întrebător -> întreb", function() {deepEqual( Stem("întrebător"), "întreb");});
test("întrebe -> întreb", function() {deepEqual( Stem("întrebe"), "întreb");});
test("întrebi -> întreb", function() {deepEqual( Stem("întrebi"), "întreb");});
test("întrebuinţa -> întrebuinţ", function() {deepEqual( Stem("întrebuinţa"), "întrebuinţ");});
test("întrebuinţare -> întrebuinţ", function() {deepEqual( Stem("întrebuinţare"), "întrebuinţ");});
test("întrebuinţarea -> întrebuinţ", function() {deepEqual( Stem("întrebuinţarea"), "întrebuinţ");});
test("întrebuinţat -> întrebuinţ", function() {deepEqual( Stem("întrebuinţat"), "întrebuinţ");});
test("întrebuinţată -> întrebuinţ", function() {deepEqual( Stem("întrebuinţată"), "întrebuinţ");});
test("întrebuinţăm -> întrebuinţ", function() {deepEqual( Stem("întrebuinţăm"), "întrebuinţ");});
test("întrebuinţări -> întrebuinţăr", function() {deepEqual( Stem("întrebuinţări"), "întrebuinţăr");});
test("întrebuinţării -> întrebuinţăr", function() {deepEqual( Stem("întrebuinţării"), "întrebuinţăr");});
test("întrebuinţează -> întrebuinţ", function() {deepEqual( Stem("întrebuinţează"), "întrebuinţ");});
test("întrebuinţez -> întrebuinţ", function() {deepEqual( Stem("întrebuinţez"), "întrebuinţ");});
test("întrecere -> întrec", function() {deepEqual( Stem("întrecere"), "întrec");});
test("întrecerea -> întrec", function() {deepEqual( Stem("întrecerea"), "întrec");});
test("întrecut -> întrec", function() {deepEqual( Stem("întrecut"), "întrec");});
test("întredeschiderea -> întredeschid", function() {deepEqual( Stem("întredeschiderea"), "întredeschid");});
test("întreg -> întreg", function() {deepEqual( Stem("întreg"), "întreg");});
test("întregei -> întrege", function() {deepEqual( Stem("întregei"), "întrege");});
test("întregesc -> întreg", function() {deepEqual( Stem("întregesc"), "întreg");});
test("întregeşte -> întreg", function() {deepEqual( Stem("întregeşte"), "întreg");});
test("întregi -> întreg", function() {deepEqual( Stem("întregi"), "întreg");});
test("întregii -> întreg", function() {deepEqual( Stem("întregii"), "întreg");});
test("întregime -> întregim", function() {deepEqual( Stem("întregime"), "întregim");});
test("întregire -> întreg", function() {deepEqual( Stem("întregire"), "întreg");});
test("întregit -> întreg", function() {deepEqual( Stem("întregit"), "întreg");});
test("întregul -> întreg", function() {deepEqual( Stem("întregul"), "întreg");});
test("întregului -> întreg", function() {deepEqual( Stem("întregului"), "întreg");});
test("întreprinderea -> întreprind", function() {deepEqual( Stem("întreprinderea"), "întreprind");});
test("întreprinderi -> întreprinder", function() {deepEqual( Stem("întreprinderi"), "întreprinder");});
test("întreprinderii -> întreprinder", function() {deepEqual( Stem("întreprinderii"), "întreprinder");});
test("întreprinderilor -> întreprinder", function() {deepEqual( Stem("întreprinderilor"), "întreprinder");});
test("întrerup -> întrerup", function() {deepEqual( Stem("întrerup"), "întrerup");});
test("întrerupând -> întrerup", function() {deepEqual( Stem("întrerupând"), "întrerup");});
test("întrerupându -> întrerup", function() {deepEqual( Stem("întrerupându"), "întrerup");});
test("întrerupă -> întrerup", function() {deepEqual( Stem("întrerupă"), "întrerup");});
test("întrerupe -> întrerup", function() {deepEqual( Stem("întrerupe"), "întrerup");});
test("întrerupere -> întrerup", function() {deepEqual( Stem("întrerupere"), "întrerup");});
test("întrerupt -> întrerupt", function() {deepEqual( Stem("întrerupt"), "întrerupt");});
test("întreruptă -> întrerupt", function() {deepEqual( Stem("întreruptă"), "întrerupt");});
test("întrerupte -> întrerupt", function() {deepEqual( Stem("întrerupte"), "întrerupt");});
test("întretaie -> întretai", function() {deepEqual( Stem("întretaie"), "întretai");});
test("întretăierea -> întretăi", function() {deepEqual( Stem("întretăierea"), "întretăi");});
test("întreţie -> întreţ", function() {deepEqual( Stem("întreţie"), "întreţ");});
test("întreţin -> întreţin", function() {deepEqual( Stem("întreţin"), "întreţin");});
test("întrevederea -> întreved", function() {deepEqual( Stem("întrevederea"), "întreved");});
test("întrevederi -> întreveder", function() {deepEqual( Stem("întrevederi"), "întreveder");});
test("întrezărită -> întrezăr", function() {deepEqual( Stem("întrezărită"), "întrezăr");});
test("întrista -> întrist", function() {deepEqual( Stem("întrista"), "întrist");});
test("întru -> întru", function() {deepEqual( Stem("întru"), "întru");});
test("întrucât -> întrucât", function() {deepEqual( Stem("întrucât"), "întrucât");});
test("întrucâtva -> întrucâtv", function() {deepEqual( Stem("întrucâtva"), "întrucâtv");});
test("întrucît -> întrucît", function() {deepEqual( Stem("întrucît"), "întrucît");});
test("întrucîtva -> întrucîtv", function() {deepEqual( Stem("întrucîtva"), "întrucîtv");});
test("întruna -> întrun", function() {deepEqual( Stem("întruna"), "întrun");});
test("întrunea -> întrun", function() {deepEqual( Stem("întrunea"), "întrun");});
test("întrunesc -> întrun", function() {deepEqual( Stem("întrunesc"), "întrun");});
test("întruneşte -> întrun", function() {deepEqual( Stem("întruneşte"), "întrun");});
test("întrunire -> întrun", function() {deepEqual( Stem("întrunire"), "întrun");});
test("întruniri -> întrunir", function() {deepEqual( Stem("întruniri"), "întrunir");});
test("întrunit -> întrun", function() {deepEqual( Stem("întrunit"), "întrun");});
test("întrunită -> întrun", function() {deepEqual( Stem("întrunită"), "întrun");});
test("întrunite -> întrun", function() {deepEqual( Stem("întrunite"), "întrun");});
test("întrupare -> întrup", function() {deepEqual( Stem("întrupare"), "întrup");});
test("întrupările -> întrupăr", function() {deepEqual( Stem("întrupările"), "întrupăr");});
test("întrupează -> întrup", function() {deepEqual( Stem("întrupează"), "întrup");});
test("întunec -> întunec", function() {deepEqual( Stem("întunec"), "întunec");});
test("întunecarea -> întunec", function() {deepEqual( Stem("întunecarea"), "întunec");});
test("întunecat -> întunec", function() {deepEqual( Stem("întunecat"), "întunec");});
test("întunecată -> întunec", function() {deepEqual( Stem("întunecată"), "întunec");});
test("întunecate -> întunec", function() {deepEqual( Stem("întunecate"), "întunec");});
test("întunecă -> întunec", function() {deepEqual( Stem("întunecă"), "întunec");});
test("întunece -> întunec", function() {deepEqual( Stem("întunece"), "întunec");});
test("întunecimea -> întunecim", function() {deepEqual( Stem("întunecimea"), "întunecim");});
test("întunecoasă -> întunec", function() {deepEqual( Stem("întunecoasă"), "întunec");});
test("întunecos -> întunec", function() {deepEqual( Stem("întunecos"), "întunec");});
test("întuneric -> întuner", function() {deepEqual( Stem("întuneric"), "întuner");});
test("întunericul -> întuner", function() {deepEqual( Stem("întunericul"), "întuner");});
test("întunericului -> întuner", function() {deepEqual( Stem("întunericului"), "întuner");});
test("înţeleagă -> înţeleag", function() {deepEqual( Stem("înţeleagă"), "înţeleag");});
test("înţeleasă -> înţeleas", function() {deepEqual( Stem("înţeleasă"), "înţeleas");});
test("înţeleg -> înţeleg", function() {deepEqual( Stem("înţeleg"), "înţeleg");});
test("înţelegând -> înţeleg", function() {deepEqual( Stem("înţelegând"), "înţeleg");});
test("înţelegându -> înţeleg", function() {deepEqual( Stem("înţelegându"), "înţeleg");});
test("înţelegătoarei -> înţelegătoare", function() {deepEqual( Stem("înţelegătoarei"), "înţelegătoare");});
test("înţelegători -> înţeleg", function() {deepEqual( Stem("înţelegători"), "înţeleg");});
test("înţelege -> înţeleg", function() {deepEqual( Stem("înţelege"), "înţeleg");});
test("înţelegea -> înţeleg", function() {deepEqual( Stem("înţelegea"), "înţeleg");});
test("înţelegeam -> înţeleg", function() {deepEqual( Stem("înţelegeam"), "înţeleg");});
test("înţelegeau -> înţeleg", function() {deepEqual( Stem("înţelegeau"), "înţeleg");});
test("înţelegem -> înţeleg", function() {deepEqual( Stem("înţelegem"), "înţeleg");});
test("înţelegere -> înţeleg", function() {deepEqual( Stem("înţelegere"), "înţeleg");});
test("înţelegerea -> înţeleg", function() {deepEqual( Stem("înţelegerea"), "înţeleg");});
test("înţelegeri -> înţeleger", function() {deepEqual( Stem("înţelegeri"), "înţeleger");});
test("înţelegerii -> înţeleger", function() {deepEqual( Stem("înţelegerii"), "înţeleger");});
test("înţelegeţi -> înţeleg", function() {deepEqual( Stem("înţelegeţi"), "înţeleg");});
test("înţelegi -> înţeleg", function() {deepEqual( Stem("înţelegi"), "înţeleg");});
test("înţelepciune -> înţelepciun", function() {deepEqual( Stem("înţelepciune"), "înţelepciun");});
test("înţelepciunea -> înţelepciun", function() {deepEqual( Stem("înţelepciunea"), "înţelepciun");});
test("înţelept -> înţelept", function() {deepEqual( Stem("înţelept"), "înţelept");});
test("înţelepte -> înţelept", function() {deepEqual( Stem("înţelepte"), "înţelept");});
test("înţeleptul -> înţelept", function() {deepEqual( Stem("înţeleptul"), "înţelept");});
test("înţelepţi -> înţelepţ", function() {deepEqual( Stem("înţelepţi"), "înţelepţ");});
test("înţelepţii -> înţelepţ", function() {deepEqual( Stem("înţelepţii"), "înţelepţ");});
test("înţelepţilor -> înţelepţ", function() {deepEqual( Stem("înţelepţilor"), "înţelepţ");});
test("înţeles -> înţeles", function() {deepEqual( Stem("înţeles"), "înţeles");});
test("înţeleseseră -> înţel", function() {deepEqual( Stem("înţeleseseră"), "înţel");});
test("înţelesul -> înţeles", function() {deepEqual( Stem("înţelesul"), "înţeles");});
test("înţelesuri -> înţelesur", function() {deepEqual( Stem("înţelesuri"), "înţelesur");});
test("înţelesurile -> înţelesur", function() {deepEqual( Stem("înţelesurile"), "înţelesur");});
test("înţep -> înţep", function() {deepEqual( Stem("înţep"), "înţep");});
test("înţepa -> înţep", function() {deepEqual( Stem("înţepa"), "înţep");});
test("înţepătura -> înţepătur", function() {deepEqual( Stem("înţepătura"), "înţepătur");});
test("înţepătură -> înţepăt", function() {deepEqual( Stem("înţepătură"), "înţepăt");});
test("înţepenesc -> înţepen", function() {deepEqual( Stem("înţepenesc"), "înţepen");});
test("înţesată -> înţes", function() {deepEqual( Stem("înţesată"), "înţes");});
test("înţesate -> înţes", function() {deepEqual( Stem("înţesate"), "înţes");});
test("învaţă -> învaţ", function() {deepEqual( Stem("învaţă"), "învaţ");});
test("învârstată -> învârst", function() {deepEqual( Stem("învârstată"), "învârst");});
test("învârte -> învârt", function() {deepEqual( Stem("învârte"), "învârt");});
test("învârtesc -> învârt", function() {deepEqual( Stem("învârtesc"), "învârt");});
test("învârteşte -> învârt", function() {deepEqual( Stem("învârteşte"), "învârt");});
test("învârtim -> învârt", function() {deepEqual( Stem("învârtim"), "învârt");});
test("învârtind -> învârt", function() {deepEqual( Stem("învârtind"), "învârt");});
test("învârtit -> învârt", function() {deepEqual( Stem("învârtit"), "învârt");});
test("învălmăşeala -> învălmăşeal", function() {deepEqual( Stem("învălmăşeala"), "învălmăşeal");});
test("învălmăşeală -> învălmăşeal", function() {deepEqual( Stem("învălmăşeală"), "învălmăşeal");});
test("învălui -> învăl", function() {deepEqual( Stem("învălui"), "învăl");});
test("învăluie -> învălui", function() {deepEqual( Stem("învăluie"), "învălui");});
test("învăluiri -> învăluir", function() {deepEqual( Stem("învăluiri"), "învăluir");});
test("învăluit -> învălu", function() {deepEqual( Stem("învăluit"), "învălu");});
test("învăluite -> învălu", function() {deepEqual( Stem("învăluite"), "învălu");});
test("învăpăiată -> învăpăi", function() {deepEqual( Stem("învăpăiată"), "învăpăi");});
test("învăţa -> învăţ", function() {deepEqual( Stem("învăţa"), "învăţ");});
test("învăţase -> învăţ", function() {deepEqual( Stem("învăţase"), "învăţ");});
test("învăţat -> învăţ", function() {deepEqual( Stem("învăţat"), "învăţ");});
test("învăţaţi -> învăţ", function() {deepEqual( Stem("învăţaţi"), "învăţ");});
test("învăţăm -> învăţ", function() {deepEqual( Stem("învăţăm"), "învăţ");});
test("învăţământul -> învăţământ", function() {deepEqual( Stem("învăţământul"), "învăţământ");});
test("învăţăminte -> învăţămint", function() {deepEqual( Stem("învăţăminte"), "învăţămint");});
test("învăţătura -> învăţătur", function() {deepEqual( Stem("învăţătura"), "învăţătur");});
test("învăţături -> învăţătur", function() {deepEqual( Stem("învăţături"), "învăţătur");});
test("învăţăturii -> învăţătur", function() {deepEqual( Stem("învăţăturii"), "învăţătur");});
test("învechite -> învech", function() {deepEqual( Stem("învechite"), "învech");});
test("învederează -> înveder", function() {deepEqual( Stem("învederează"), "înveder");});
test("învelesc -> învel", function() {deepEqual( Stem("învelesc"), "învel");});
test("înveli -> învel", function() {deepEqual( Stem("înveli"), "învel");});
test("învelitoare -> învel", function() {deepEqual( Stem("învelitoare"), "învel");});
test("înveliţi -> învel", function() {deepEqual( Stem("înveliţi"), "învel");});
test("înveninate -> învenin", function() {deepEqual( Stem("înveninate"), "învenin");});
test("înverşunare -> înverşun", function() {deepEqual( Stem("înverşunare"), "înverşun");});
test("înverşunarea -> înverşun", function() {deepEqual( Stem("înverşunarea"), "înverşun");});
test("înverşunat -> înverşun", function() {deepEqual( Stem("înverşunat"), "înverşun");});
test("înverşunată -> înverşun", function() {deepEqual( Stem("înverşunată"), "înverşun");});
test("înverşunate -> înverşun", function() {deepEqual( Stem("înverşunate"), "înverşun");});
test("înveselit -> învesel", function() {deepEqual( Stem("înveselit"), "învesel");});
test("înveţe -> înveţ", function() {deepEqual( Stem("înveţe"), "înveţ");});
test("învia -> învi", function() {deepEqual( Stem("învia"), "învi");});
test("învie -> învie", function() {deepEqual( Stem("învie"), "învie");});
test("învineţit -> învineţ", function() {deepEqual( Stem("învineţit"), "învineţ");});
test("învingă -> înving", function() {deepEqual( Stem("învingă"), "înving");});
test("învingător -> înving", function() {deepEqual( Stem("învingător"), "înving");});
test("învingătorul -> înving", function() {deepEqual( Stem("învingătorul"), "înving");});
test("învinge -> înving", function() {deepEqual( Stem("învinge"), "înving");});
test("învins -> învins", function() {deepEqual( Stem("învins"), "învins");});
test("învinsă -> învins", function() {deepEqual( Stem("învinsă"), "învins");});
test("învinşi -> învinş", function() {deepEqual( Stem("învinşi"), "învinş");});
test("învinuire -> învinu", function() {deepEqual( Stem("învinuire"), "învinu");});
test("înviorat -> învior", function() {deepEqual( Stem("înviorat"), "învior");});
test("învoiau -> învoi", function() {deepEqual( Stem("învoiau"), "învoi");});
test("învoieli -> învoiel", function() {deepEqual( Stem("învoieli"), "învoiel");});
test("învoiesc -> învoi", function() {deepEqual( Stem("învoiesc"), "învoi");});
test("învoire -> învoir", function() {deepEqual( Stem("învoire"), "învoir");});
test("învoirea -> învoir", function() {deepEqual( Stem("învoirea"), "învoir");});
test("învolată -> învol", function() {deepEqual( Stem("învolată"), "învol");});
test("înzăpezite -> înzăpez", function() {deepEqual( Stem("înzăpezite"), "înzăpez");});
test("înzecită -> înzec", function() {deepEqual( Stem("înzecită"), "înzec");});
test("înzestrarea -> înzestr", function() {deepEqual( Stem("înzestrarea"), "înzestr");});
test("înzestrat -> înzestr", function() {deepEqual( Stem("înzestrat"), "înzestr");});
test("înzestrată -> înzestr", function() {deepEqual( Stem("înzestrată"), "înzestr");});
test("înzestrate -> înzestr", function() {deepEqual( Stem("înzestrate"), "înzestr");});
test("înzestrează -> înzestr", function() {deepEqual( Stem("înzestrează"), "înzestr");});
test("înzorzonat -> înzorzon", function() {deepEqual( Stem("înzorzonat"), "înzorzon");});
test("îşi -> îşi", function() {deepEqual( Stem("îşi"), "îşi");});
test("îţi -> îţi", function() {deepEqual( Stem("îţi"), "îţi");});
test("jachetă -> jachet", function() {deepEqual( Stem("jachetă"), "jachet");});
test("jaf -> jaf", function() {deepEqual( Stem("jaf"), "jaf");});
test("jahre -> jahr", function() {deepEqual( Stem("jahre"), "jahr");});
test("jale -> jal", function() {deepEqual( Stem("jale"), "jal");});
test("jalnică -> jalnic", function() {deepEqual( Stem("jalnică"), "jalnic");});
test("jalnice -> jalnic", function() {deepEqual( Stem("jalnice"), "jalnic");});
test("jandarmi -> jandarm", function() {deepEqual( Stem("jandarmi"), "jandarm");});
test("japca -> japc", function() {deepEqual( Stem("japca"), "japc");});
test("japoneze -> japon", function() {deepEqual( Stem("japoneze"), "japon");});
test("jargon -> jargon", function() {deepEqual( Stem("jargon"), "jargon");});
test("jartierelor -> jartier", function() {deepEqual( Stem("jartierelor"), "jartier");});
test("jăratic -> jărat", function() {deepEqual( Stem("jăratic"), "jărat");});
test("jefui -> jefu", function() {deepEqual( Stem("jefui"), "jefu");});
test("jefuiesc -> jefui", function() {deepEqual( Stem("jefuiesc"), "jefui");});
test("jefuit -> jefuit", function() {deepEqual( Stem("jefuit"), "jefuit");});
test("jefuite -> jefuit", function() {deepEqual( Stem("jefuite"), "jefuit");});
test("jeluitoare -> jeluit", function() {deepEqual( Stem("jeluitoare"), "jeluit");});
test("jertfise -> jertf", function() {deepEqual( Stem("jertfise"), "jertf");});
test("jerusalem -> jerusal", function() {deepEqual( Stem("jerusalem"), "jerusal");});
test("jgheab -> jgheab", function() {deepEqual( Stem("jgheab"), "jgheab");});
test("jigărit -> jigăr", function() {deepEqual( Stem("jigărit"), "jigăr");});
test("jignea -> jign", function() {deepEqual( Stem("jignea"), "jign");});
test("jigneşte -> jign", function() {deepEqual( Stem("jigneşte"), "jign");});
test("jigneşti -> jign", function() {deepEqual( Stem("jigneşti"), "jign");});
test("jigni -> jign", function() {deepEqual( Stem("jigni"), "jign");});
test("jignire -> jign", function() {deepEqual( Stem("jignire"), "jign");});
test("jignirile -> jignir", function() {deepEqual( Stem("jignirile"), "jignir");});
test("jignit -> jignit", function() {deepEqual( Stem("jignit"), "jignit");});
test("jignitoare -> jignit", function() {deepEqual( Stem("jignitoare"), "jignit");});
test("joacă -> joac", function() {deepEqual( Stem("joacă"), "joac");});
test("joace -> joac", function() {deepEqual( Stem("joace"), "joac");});
test("joasă -> joas", function() {deepEqual( Stem("joasă"), "joas");});
test("joase -> joa", function() {deepEqual( Stem("joase"), "joa");});
test("joc -> joc", function() {deepEqual( Stem("joc"), "joc");});
test("joci -> joc", function() {deepEqual( Stem("joci"), "joc");});
test("jockey -> jockey", function() {deepEqual( Stem("jockey"), "jockey");});
test("jocul -> joc", function() {deepEqual( Stem("jocul"), "joc");});
test("jocului -> joc", function() {deepEqual( Stem("jocului"), "joc");});
test("jocuri -> jocur", function() {deepEqual( Stem("jocuri"), "jocur");});
test("jocurile -> jocur", function() {deepEqual( Stem("jocurile"), "jocur");});
test("jocurilor -> jocur", function() {deepEqual( Stem("jocurilor"), "jocur");});
test("joffre -> joffr", function() {deepEqual( Stem("joffre"), "joffr");});
test("john -> john", function() {deepEqual( Stem("john"), "john");});
test("joi -> joi", function() {deepEqual( Stem("joi"), "joi");});
test("joia -> joi", function() {deepEqual( Stem("joia"), "joi");});
test("jos -> jos", function() {deepEqual( Stem("jos"), "jos");});
test("josul -> jos", function() {deepEqual( Stem("josul"), "jos");});
test("jubilează -> jubil", function() {deepEqual( Stem("jubilează"), "jubil");});
test("juca -> juc", function() {deepEqual( Stem("juca"), "juc");});
test("jucam -> jucam", function() {deepEqual( Stem("jucam"), "jucam");});
test("jucasem -> jucasem", function() {deepEqual( Stem("jucasem"), "jucasem");});
test("jucaseră -> jucaser", function() {deepEqual( Stem("jucaseră"), "jucaser");});
test("jucat -> jucat", function() {deepEqual( Stem("jucat"), "jucat");});
test("jucate -> jucat", function() {deepEqual( Stem("jucate"), "jucat");});
test("jucau -> jucau", function() {deepEqual( Stem("jucau"), "jucau");});
test("jucând -> jucând", function() {deepEqual( Stem("jucând"), "jucând");});
test("jucându -> jucându", function() {deepEqual( Stem("jucându"), "jucându");});
test("jucărie -> jucăr", function() {deepEqual( Stem("jucărie"), "jucăr");});
test("jucării -> jucăr", function() {deepEqual( Stem("jucării"), "jucăr");});
test("jucător -> jucat", function() {deepEqual( Stem("jucător"), "jucat");});
test("jucătorii -> jucat", function() {deepEqual( Stem("jucătorii"), "jucat");});
test("jucătorului -> jucat", function() {deepEqual( Stem("jucătorului"), "jucat");});
test("jucăuşă -> jucăuş", function() {deepEqual( Stem("jucăuşă"), "jucăuş");});
test("judec -> judec", function() {deepEqual( Stem("judec"), "judec");});
test("judeca -> judec", function() {deepEqual( Stem("judeca"), "judec");});
test("judecare -> judec", function() {deepEqual( Stem("judecare"), "judec");});
test("judecarea -> judec", function() {deepEqual( Stem("judecarea"), "judec");});
test("judecata -> judec", function() {deepEqual( Stem("judecata"), "judec");});
test("judecată -> judec", function() {deepEqual( Stem("judecată"), "judec");});
test("judecând -> judec", function() {deepEqual( Stem("judecând"), "judec");});
test("judecă -> judec", function() {deepEqual( Stem("judecă"), "judec");});
test("judecăm -> judec", function() {deepEqual( Stem("judecăm"), "judec");});
test("judecător -> judec", function() {deepEqual( Stem("judecător"), "judec");});
test("judecătorii -> judec", function() {deepEqual( Stem("judecătorii"), "judec");});
test("judecătorul -> judec", function() {deepEqual( Stem("judecătorul"), "judec");});
test("judecăţi -> judecăţ", function() {deepEqual( Stem("judecăţi"), "judecăţ");});
test("judecăţii -> judecăţ", function() {deepEqual( Stem("judecăţii"), "judecăţ");});
test("judecăţile -> judecăţ", function() {deepEqual( Stem("judecăţile"), "judecăţ");});
test("judece -> judec", function() {deepEqual( Stem("judece"), "judec");});
test("judeci -> judec", function() {deepEqual( Stem("judeci"), "judec");});
test("judeţ -> judeţ", function() {deepEqual( Stem("judeţ"), "judeţ");});
test("judeţean -> judeţean", function() {deepEqual( Stem("judeţean"), "judeţean");});
test("judeţului -> judeţ", function() {deepEqual( Stem("judeţului"), "judeţ");});
test("judicioase -> judic", function() {deepEqual( Stem("judicioase"), "judic");});
test("julieta -> juliet", function() {deepEqual( Stem("julieta"), "juliet");});
test("jumătate -> jumăt", function() {deepEqual( Stem("jumătate"), "jumăt");});
test("jumătatea -> jumăt", function() {deepEqual( Stem("jumătatea"), "jumăt");});
test("jumătăţi -> jumătăţ", function() {deepEqual( Stem("jumătăţi"), "jumătăţ");});
test("junglă -> jungl", function() {deepEqual( Stem("junglă"), "jungl");});
test("junkeri -> junker", function() {deepEqual( Stem("junkeri"), "junker");});
test("jupâneasă -> jupâneas", function() {deepEqual( Stem("jupâneasă"), "jupâneas");});
test("jupiter -> jupiter", function() {deepEqual( Stem("jupiter"), "jupiter");});
test("jur -> jur", function() {deepEqual( Stem("jur"), "jur");});
test("jura -> jur", function() {deepEqual( Stem("jura"), "jur");});
test("juraseră -> juraser", function() {deepEqual( Stem("juraseră"), "juraser");});
test("jurat -> jurat", function() {deepEqual( Stem("jurat"), "jurat");});
test("jurate -> jurat", function() {deepEqual( Stem("jurate"), "jurat");});
test("juraţi -> jur", function() {deepEqual( Stem("juraţi"), "jur");});
test("juraţii -> jur", function() {deepEqual( Stem("juraţii"), "jur");});
test("juraţilor -> jur", function() {deepEqual( Stem("juraţilor"), "jur");});
test("jură -> jur", function() {deepEqual( Stem("jură"), "jur");});
test("jurăminţile -> jurăminţ", function() {deepEqual( Stem("jurăminţile"), "jurăminţ");});
test("juri -> jur", function() {deepEqual( Stem("juri"), "jur");});
test("juridică -> jurid", function() {deepEqual( Stem("juridică"), "jurid");});
test("jurisconsult -> jurisconsult", function() {deepEqual( Stem("jurisconsult"), "jurisconsult");});
test("jurnal -> jurnal", function() {deepEqual( Stem("jurnal"), "jurnal");});
test("jurnalist -> jurnalist", function() {deepEqual( Stem("jurnalist"), "jurnalist");});
test("jurul -> jur", function() {deepEqual( Stem("jurul"), "jur");});
test("just -> just", function() {deepEqual( Stem("just"), "just");});
test("justa -> just", function() {deepEqual( Stem("justa"), "just");});
test("justă -> just", function() {deepEqual( Stem("justă"), "just");});
test("juste -> just", function() {deepEqual( Stem("juste"), "just");});
test("justeţea -> justeţ", function() {deepEqual( Stem("justeţea"), "justeţ");});
test("justificabilă -> justific", function() {deepEqual( Stem("justificabilă"), "justific");});
test("justificare -> justific", function() {deepEqual( Stem("justificare"), "justific");});
test("justificarea -> justific", function() {deepEqual( Stem("justificarea"), "justific");});
test("justificat -> justific", function() {deepEqual( Stem("justificat"), "justific");});
test("justificată -> justific", function() {deepEqual( Stem("justificată"), "justific");});
test("justificând -> justific", function() {deepEqual( Stem("justificând"), "justific");});
test("justifică -> justif", function() {deepEqual( Stem("justifică"), "justif");});
test("justifice -> justif", function() {deepEqual( Stem("justifice"), "justif");});
test("justiţia -> justiţ", function() {deepEqual( Stem("justiţia"), "justiţ");});
test("justiţiar -> justiţiar", function() {deepEqual( Stem("justiţiar"), "justiţiar");});
test("k -> k", function() {deepEqual( Stem("k"), "k");});
test("kaiser -> kaiser", function() {deepEqual( Stem("kaiser"), "kaiser");});
test("kaiseriană -> kaiserian", function() {deepEqual( Stem("kaiseriană"), "kaiserian");});
test("kaiserul -> kaiser", function() {deepEqual( Stem("kaiserul"), "kaiser");});
test("kaiserului -> kaiser", function() {deepEqual( Stem("kaiserului"), "kaiser");});
test("kama -> kam", function() {deepEqual( Stem("kama"), "kam");});
test("kann -> kann", function() {deepEqual( Stem("kann"), "kann");});
test("kant -> kant", function() {deepEqual( Stem("kant"), "kant");});
test("kantian -> kantian", function() {deepEqual( Stem("kantian"), "kantian");});
test("kantiană -> kantian", function() {deepEqual( Stem("kantiană"), "kantian");});
test("kapp -> kapp", function() {deepEqual( Stem("kapp"), "kapp");});
test("kautsky -> kautsky", function() {deepEqual( Stem("kautsky"), "kautsky");});
test("kermeză -> kermez", function() {deepEqual( Stem("kermeză"), "kermez");});
test("keynes -> keynes", function() {deepEqual( Stem("keynes"), "keynes");});
test("ki -> ki", function() {deepEqual( Stem("ki"), "ki");});
test("kilograme -> kilogram", function() {deepEqual( Stem("kilograme"), "kilogram");});
test("kilogrammetri -> kilogrammetr", function() {deepEqual( Stem("kilogrammetri"), "kilogrammetr");});
test("kilometri -> kilometr", function() {deepEqual( Stem("kilometri"), "kilometr");});
test("kilometru -> kilometru", function() {deepEqual( Stem("kilometru"), "kilometru");});
test("kiss -> kiss", function() {deepEqual( Stem("kiss"), "kiss");});
test("krihalma -> krihalm", function() {deepEqual( Stem("krihalma"), "krihalm");});
test("l -> l", function() {deepEqual( Stem("l"), "l");});
test("la -> la", function() {deepEqual( Stem("la"), "la");});
test("laba -> lab", function() {deepEqual( Stem("laba"), "lab");});
test("labe -> lab", function() {deepEqual( Stem("labe"), "lab");});
test("laboratoriile -> labor", function() {deepEqual( Stem("laboratoriile"), "labor");});
test("laboratoriilor -> labor", function() {deepEqual( Stem("laboratoriilor"), "labor");});
test("lac -> lac", function() {deepEqual( Stem("lac"), "lac");});
test("lacăt -> lacăt", function() {deepEqual( Stem("lacăt"), "lacăt");});
test("lacheu -> lacheu", function() {deepEqual( Stem("lacheu"), "lacheu");});
test("lacom -> lacom", function() {deepEqual( Stem("lacom"), "lacom");});
test("lacomă -> lacom", function() {deepEqual( Stem("lacomă"), "lacom");});
test("lacrimi -> lacrim", function() {deepEqual( Stem("lacrimi"), "lacrim");});
test("lacrimile -> lacrim", function() {deepEqual( Stem("lacrimile"), "lacrim");});
test("lacrimilor -> lacrim", function() {deepEqual( Stem("lacrimilor"), "lacrim");});
test("lacurilor -> lacur", function() {deepEqual( Stem("lacurilor"), "lacur");});
test("lada -> lad", function() {deepEqual( Stem("lada"), "lad");});
test("lafargue -> lafargu", function() {deepEqual( Stem("lafargue"), "lafargu");});
test("laibach -> laibach", function() {deepEqual( Stem("laibach"), "laibach");});
test("lajos -> lajos", function() {deepEqual( Stem("lajos"), "lajos");});
test("lamă -> lam", function() {deepEqual( Stem("lamă"), "lam");});
test("lame -> lam", function() {deepEqual( Stem("lame"), "lam");});
test("lamentabile -> lament", function() {deepEqual( Stem("lamentabile"), "lament");});
test("lampa -> lamp", function() {deepEqual( Stem("lampa"), "lamp");});
test("lampă -> lamp", function() {deepEqual( Stem("lampă"), "lamp");});
test("lansată -> lansat", function() {deepEqual( Stem("lansată"), "lansat");});
test("lanţ -> lanţ", function() {deepEqual( Stem("lanţ"), "lanţ");});
test("lanţul -> lanţ", function() {deepEqual( Stem("lanţul"), "lanţ");});
test("lanţurile -> lanţur", function() {deepEqual( Stem("lanţurile"), "lanţur");});
test("laolaltă -> laolalt", function() {deepEqual( Stem("laolaltă"), "laolalt");});
test("lapte -> lapt", function() {deepEqual( Stem("lapte"), "lapt");});
test("larg -> larg", function() {deepEqual( Stem("larg"), "larg");});
test("largă -> larg", function() {deepEqual( Stem("largă"), "larg");});
test("largi -> larg", function() {deepEqual( Stem("largi"), "larg");});
test("largul -> larg", function() {deepEqual( Stem("largul"), "larg");});
test("larma -> larm", function() {deepEqual( Stem("larma"), "larm");});
test("larmă -> larm", function() {deepEqual( Stem("larmă"), "larm");});
test("larmei -> larme", function() {deepEqual( Stem("larmei"), "larme");});
test("larvară -> larv", function() {deepEqual( Stem("larvară"), "larv");});
test("larvele -> larv", function() {deepEqual( Stem("larvele"), "larv");});
test("las -> las", function() {deepEqual( Stem("las"), "las");});
test("lasă -> las", function() {deepEqual( Stem("lasă"), "las");});
test("lascar -> lascar", function() {deepEqual( Stem("lascar"), "lascar");});
test("lase -> las", function() {deepEqual( Stem("lase"), "las");});
test("laş -> laş", function() {deepEqual( Stem("laş"), "laş");});
test("laşi -> laş", function() {deepEqual( Stem("laşi"), "laş");});
test("laşitate -> laşitat", function() {deepEqual( Stem("laşitate"), "laşitat");});
test("laşitatea -> laşitat", function() {deepEqual( Stem("laşitatea"), "laşitat");});
test("lat -> lat", function() {deepEqual( Stem("lat"), "lat");});
test("lată -> lat", function() {deepEqual( Stem("lată"), "lat");});
test("latent -> latent", function() {deepEqual( Stem("latent"), "latent");});
test("latin -> latin", function() {deepEqual( Stem("latin"), "latin");});
test("latineasca -> latineasc", function() {deepEqual( Stem("latineasca"), "latineasc");});
test("latini -> latin", function() {deepEqual( Stem("latini"), "latin");});
test("latinii -> latin", function() {deepEqual( Stem("latinii"), "latin");});
test("latitudinea -> latitudin", function() {deepEqual( Stem("latitudinea"), "latitudin");});
test("latură -> latur", function() {deepEqual( Stem("latură"), "latur");});
test("laturi -> latur", function() {deepEqual( Stem("laturi"), "latur");});
test("laturile -> latur", function() {deepEqual( Stem("laturile"), "latur");});
test("laţi -> laţ", function() {deepEqual( Stem("laţi"), "laţ");});
test("lauda -> laud", function() {deepEqual( Stem("lauda"), "laud");});
test("laudă -> laud", function() {deepEqual( Stem("laudă"), "laud");});
test("laude -> laud", function() {deepEqual( Stem("laude"), "laud");});
test("laudele -> laud", function() {deepEqual( Stem("laudele"), "laud");});
test("lavra -> lavr", function() {deepEqual( Stem("lavra"), "lavr");});
test("lână -> lân", function() {deepEqual( Stem("lână"), "lân");});
test("lânced -> lânced", function() {deepEqual( Stem("lânced"), "lânced");});
test("lâncezea -> lânc", function() {deepEqual( Stem("lâncezea"), "lânc");});
test("lângă -> lâng", function() {deepEqual( Stem("lângă"), "lâng");});
test("lânos -> lânos", function() {deepEqual( Stem("lânos"), "lânos");});
test("lăcuită -> lăcuit", function() {deepEqual( Stem("lăcuită"), "lăcuit");});
test("lăcustele -> lăcust", function() {deepEqual( Stem("lăcustele"), "lăcust");});
test("lăieţ -> lăieţ", function() {deepEqual( Stem("lăieţ"), "lăieţ");});
test("lămâie -> lămâi", function() {deepEqual( Stem("lămâie"), "lămâi");});
test("lămpei -> lămpe", function() {deepEqual( Stem("lămpei"), "lămpe");});
test("lămpi -> lămp", function() {deepEqual( Stem("lămpi"), "lămp");});
test("lămpii -> lămp", function() {deepEqual( Stem("lămpii"), "lămp");});
test("lămurească -> lămur", function() {deepEqual( Stem("lămurească"), "lămur");});
test("lămuresc -> lămur", function() {deepEqual( Stem("lămuresc"), "lămur");});
test("lămureşte -> lămur", function() {deepEqual( Stem("lămureşte"), "lămur");});
test("lămuri -> lămur", function() {deepEqual( Stem("lămuri"), "lămur");});
test("lămurim -> lămur", function() {deepEqual( Stem("lămurim"), "lămur");});
test("lămurind -> lămur", function() {deepEqual( Stem("lămurind"), "lămur");});
test("lămurire -> lămur", function() {deepEqual( Stem("lămurire"), "lămur");});
test("lămurirea -> lămur", function() {deepEqual( Stem("lămurirea"), "lămur");});
test("lămuriri -> lămurir", function() {deepEqual( Stem("lămuriri"), "lămurir");});
test("lămuririle -> lămurir", function() {deepEqual( Stem("lămuririle"), "lămurir");});
test("lămurit -> lămur", function() {deepEqual( Stem("lămurit"), "lămur");});
test("lămurite -> lămur", function() {deepEqual( Stem("lămurite"), "lămur");});
test("lămuriţi -> lămur", function() {deepEqual( Stem("lămuriţi"), "lămur");});
test("lăptoasă -> lăptoas", function() {deepEqual( Stem("lăptoasă"), "lăptoas");});
test("lărgesc -> lărg", function() {deepEqual( Stem("lărgesc"), "lărg");});
test("lărgeşte -> lărg", function() {deepEqual( Stem("lărgeşte"), "lărg");});
test("lărgeşti -> lărg", function() {deepEqual( Stem("lărgeşti"), "lărg");});
test("lărgim -> lărg", function() {deepEqual( Stem("lărgim"), "lărg");});
test("lărgime -> lărgim", function() {deepEqual( Stem("lărgime"), "lărgim");});
test("lărgimea -> lărgim", function() {deepEqual( Stem("lărgimea"), "lărgim");});
test("lărgind -> lărg", function() {deepEqual( Stem("lărgind"), "lărg");});
test("lărgire -> lărg", function() {deepEqual( Stem("lărgire"), "lărg");});
test("lărgirea -> lărg", function() {deepEqual( Stem("lărgirea"), "lărg");});
test("lărgiri -> lărgir", function() {deepEqual( Stem("lărgiri"), "lărgir");});
test("lărgit -> lărgit", function() {deepEqual( Stem("lărgit"), "lărgit");});
test("lărgite -> lărgit", function() {deepEqual( Stem("lărgite"), "lărgit");});
test("lăsa -> lăs", function() {deepEqual( Stem("lăsa"), "lăs");});
test("lăsam -> lăsam", function() {deepEqual( Stem("lăsam"), "lăsam");});
test("lăsase -> lăsas", function() {deepEqual( Stem("lăsase"), "lăsas");});
test("lăsasem -> lăsasem", function() {deepEqual( Stem("lăsasem"), "lăsasem");});
test("lăsat -> lăsat", function() {deepEqual( Stem("lăsat"), "lăsat");});
test("lăsată -> lăsat", function() {deepEqual( Stem("lăsată"), "lăsat");});
test("lăsate -> lăsat", function() {deepEqual( Stem("lăsate"), "lăsat");});
test("lăsaţi -> lăs", function() {deepEqual( Stem("lăsaţi"), "lăs");});
test("lăsau -> lăsau", function() {deepEqual( Stem("lăsau"), "lăsau");});
test("lăsând -> lăsând", function() {deepEqual( Stem("lăsând"), "lăsând");});
test("lăsându -> lăsându", function() {deepEqual( Stem("lăsându"), "lăsându");});
test("lăsă -> lăs", function() {deepEqual( Stem("lăsă"), "lăs");});
test("lăsăm -> lăs", function() {deepEqual( Stem("lăsăm"), "lăs");});
test("lăsător -> lăsat", function() {deepEqual( Stem("lăsător"), "lăsat");});
test("lăstari -> lăstar", function() {deepEqual( Stem("lăstari"), "lăstar");});
test("lătrând -> lătr", function() {deepEqual( Stem("lătrând"), "lătr");});
test("lăturalnică -> lăturaln", function() {deepEqual( Stem("lăturalnică"), "lăturaln");});
test("lăturalnice -> lăturaln", function() {deepEqual( Stem("lăturalnice"), "lăturaln");});
test("lături -> lătur", function() {deepEqual( Stem("lături"), "lătur");});
test("lăţeşte -> lăţeşt", function() {deepEqual( Stem("lăţeşte"), "lăţeşt");});
test("lăţime -> lăţim", function() {deepEqual( Stem("lăţime"), "lăţim");});
test("lăuda -> lăud", function() {deepEqual( Stem("lăuda"), "lăud");});
test("lăudată -> lăudat", function() {deepEqual( Stem("lăudată"), "lăudat");});
test("lăudăros -> lăudăr", function() {deepEqual( Stem("lăudăros"), "lăudăr");});
test("lăuntric -> lăuntric", function() {deepEqual( Stem("lăuntric"), "lăuntric");});
test("lăuntrică -> lăuntric", function() {deepEqual( Stem("lăuntrică"), "lăuntric");});
test("lăutar -> lăutar", function() {deepEqual( Stem("lăutar"), "lăutar");});
test("lăutari -> lăutar", function() {deepEqual( Stem("lăutari"), "lăutar");});
test("lăutarii -> lăutar", function() {deepEqual( Stem("lăutarii"), "lăutar");});
test("le -> le", function() {deepEqual( Stem("le"), "le");});
test("lea -> lea", function() {deepEqual( Stem("lea"), "lea");});
test("leac -> leac", function() {deepEqual( Stem("leac"), "leac");});
test("leacuri -> leacur", function() {deepEqual( Stem("leacuri"), "leacur");});
test("leafa -> leaf", function() {deepEqual( Stem("leafa"), "leaf");});
test("leagă -> leag", function() {deepEqual( Stem("leagă"), "leag");});
test("leagăn -> leagăn", function() {deepEqual( Stem("leagăn"), "leagăn");});
test("leandri -> leandr", function() {deepEqual( Stem("leandri"), "leandr");});
test("leano -> leano", function() {deepEqual( Stem("leano"), "leano");});
test("lebădă -> lebăd", function() {deepEqual( Stem("lebădă"), "lebăd");});
test("lebedei -> lebede", function() {deepEqual( Stem("lebedei"), "lebede");});
test("lecturi -> lectur", function() {deepEqual( Stem("lecturi"), "lectur");});
test("lecturile -> lectur", function() {deepEqual( Stem("lecturile"), "lectur");});
test("lecţia -> lecţ", function() {deepEqual( Stem("lecţia"), "lecţ");});
test("lecţie -> lecţ", function() {deepEqual( Stem("lecţie"), "lecţ");});
test("lecţii -> lecţ", function() {deepEqual( Stem("lecţii"), "lecţ");});
test("lecţiile -> lecţ", function() {deepEqual( Stem("lecţiile"), "lecţ");});
test("lecţiune -> lecţiun", function() {deepEqual( Stem("lecţiune"), "lecţiun");});
test("lecţiunea -> lecţiun", function() {deepEqual( Stem("lecţiunea"), "lecţiun");});
test("lecţiuni -> lecţiun", function() {deepEqual( Stem("lecţiuni"), "lecţiun");});
test("lecţiunile -> lecţiun", function() {deepEqual( Stem("lecţiunile"), "lecţiun");});
test("leg -> leg", function() {deepEqual( Stem("leg"), "leg");});
test("lega -> leg", function() {deepEqual( Stem("lega"), "leg");});
test("legal -> legal", function() {deepEqual( Stem("legal"), "legal");});
test("legală -> legal", function() {deepEqual( Stem("legală"), "legal");});
test("legalmente -> legalment", function() {deepEqual( Stem("legalmente"), "legalment");});
test("legarea -> legar", function() {deepEqual( Stem("legarea"), "legar");});
test("legat -> legat", function() {deepEqual( Stem("legat"), "legat");});
test("legată -> legat", function() {deepEqual( Stem("legată"), "legat");});
test("legate -> legat", function() {deepEqual( Stem("legate"), "legat");});
test("legatele -> legat", function() {deepEqual( Stem("legatele"), "legat");});
test("legaţi -> leg", function() {deepEqual( Stem("legaţi"), "leg");});
test("legaţie -> leg", function() {deepEqual( Stem("legaţie"), "leg");});
test("legăm -> leg", function() {deepEqual( Stem("legăm"), "leg");});
test("legămintele -> legămint", function() {deepEqual( Stem("legămintele"), "legămint");});
test("legănarea -> legăn", function() {deepEqual( Stem("legănarea"), "legăn");});
test("legănat -> legăn", function() {deepEqual( Stem("legănat"), "legăn");});
test("legănată -> legăn", function() {deepEqual( Stem("legănată"), "legăn");});
test("legănatul -> legăn", function() {deepEqual( Stem("legănatul"), "legăn");});
test("legănând -> legăn", function() {deepEqual( Stem("legănând"), "legăn");});
test("legănându -> legăn", function() {deepEqual( Stem("legănându"), "legăn");});
test("legătura -> legătur", function() {deepEqual( Stem("legătura"), "legătur");});
test("legătură -> legăt", function() {deepEqual( Stem("legătură"), "legăt");});
test("legături -> legătur", function() {deepEqual( Stem("legături"), "legătur");});
test("legăturii -> legătur", function() {deepEqual( Stem("legăturii"), "legătur");});
test("legăturile -> legătur", function() {deepEqual( Stem("legăturile"), "legătur");});
test("lege -> leg", function() {deepEqual( Stem("lege"), "leg");});
test("legea -> leg", function() {deepEqual( Stem("legea"), "leg");});
test("legenda -> legend", function() {deepEqual( Stem("legenda"), "legend");});
test("legendară -> legend", function() {deepEqual( Stem("legendară"), "legend");});
test("legendari -> legendar", function() {deepEqual( Stem("legendari"), "legendar");});
test("legendă -> legend", function() {deepEqual( Stem("legendă"), "legend");});
test("legendele -> legend", function() {deepEqual( Stem("legendele"), "legend");});
test("legi -> leg", function() {deepEqual( Stem("legi"), "leg");});
test("legiferat -> legifer", function() {deepEqual( Stem("legiferat"), "legifer");});
test("legiferăm -> legifer", function() {deepEqual( Stem("legiferăm"), "legifer");});
test("legii -> leg", function() {deepEqual( Stem("legii"), "leg");});
test("legile -> leg", function() {deepEqual( Stem("legile"), "leg");});
test("legilor -> leg", function() {deepEqual( Stem("legilor"), "leg");});
test("legionar -> legionar", function() {deepEqual( Stem("legionar"), "legionar");});
test("legionari -> legionar", function() {deepEqual( Stem("legionari"), "legionar");});
test("legist -> legist", function() {deepEqual( Stem("legist"), "legist");});
test("legiunea -> legiun", function() {deepEqual( Stem("legiunea"), "legiun");});
test("legume -> legum", function() {deepEqual( Stem("legume"), "legum");});
test("lehrbuch -> lehrbuch", function() {deepEqual( Stem("lehrbuch"), "lehrbuch");});
test("lei -> lei", function() {deepEqual( Stem("lei"), "lei");});
test("leibniz -> leibniz", function() {deepEqual( Stem("leibniz"), "leibniz");});
test("leit -> leit", function() {deepEqual( Stem("leit"), "leit");});
test("lele -> lel", function() {deepEqual( Stem("lele"), "lel");});
test("lemn -> lemn", function() {deepEqual( Stem("lemn"), "lemn");});
test("lemnele -> lemn", function() {deepEqual( Stem("lemnele"), "lemn");});
test("lemnul -> lemn", function() {deepEqual( Stem("lemnul"), "lemn");});
test("lene -> len", function() {deepEqual( Stem("lene"), "len");});
test("lenea -> len", function() {deepEqual( Stem("lenea"), "len");});
test("leneş -> leneş", function() {deepEqual( Stem("leneş"), "leneş");});
test("leneşă -> leneş", function() {deepEqual( Stem("leneşă"), "leneş");});
test("lenevie -> lenev", function() {deepEqual( Stem("lenevie"), "lenev");});
test("lenevoase -> lenev", function() {deepEqual( Stem("lenevoase"), "lenev");});
test("lenin -> lenin", function() {deepEqual( Stem("lenin"), "lenin");});
test("leoarcă -> leoarc", function() {deepEqual( Stem("leoarcă"), "leoarc");});
test("lepăda -> lepăd", function() {deepEqual( Stem("lepăda"), "lepăd");});
test("lepros -> lepros", function() {deepEqual( Stem("lepros"), "lepros");});
test("leproşi -> leproş", function() {deepEqual( Stem("leproşi"), "leproş");});
test("lesne -> lesn", function() {deepEqual( Stem("lesne"), "lesn");});
test("leşina -> leşin", function() {deepEqual( Stem("leşina"), "leşin");});
test("leşinată -> leşin", function() {deepEqual( Stem("leşinată"), "leşin");});
test("leşios -> leşios", function() {deepEqual( Stem("leşios"), "leşios");});
test("leu -> leu", function() {deepEqual( Stem("leu"), "leu");});
test("leute -> leut", function() {deepEqual( Stem("leute"), "leut");});
test("levantinilor -> levantin", function() {deepEqual( Stem("levantinilor"), "levantin");});
test("li -> li", function() {deepEqual( Stem("li"), "li");});
test("liber -> liber", function() {deepEqual( Stem("liber"), "liber");});
test("libera -> liber", function() {deepEqual( Stem("libera"), "liber");});
test("liberal -> liberal", function() {deepEqual( Stem("liberal"), "liberal");});
test("liberă -> liber", function() {deepEqual( Stem("liberă"), "liber");});
test("libere -> liber", function() {deepEqual( Stem("libere"), "liber");});
test("liberează -> liber", function() {deepEqual( Stem("liberează"), "liber");});
test("liberi -> liber", function() {deepEqual( Stem("liberi"), "liber");});
test("libertar -> libertar", function() {deepEqual( Stem("libertar"), "libertar");});
test("libertare -> libert", function() {deepEqual( Stem("libertare"), "libert");});
test("libertate -> libert", function() {deepEqual( Stem("libertate"), "libert");});
test("libertatea -> libert", function() {deepEqual( Stem("libertatea"), "libert");});
test("librărie -> librăr", function() {deepEqual( Stem("librărie"), "librăr");});
test("licăriri -> licărir", function() {deepEqual( Stem("licăriri"), "licărir");});
test("liceeni -> liceen", function() {deepEqual( Stem("liceeni"), "liceen");});
test("licenţa -> licenţ", function() {deepEqual( Stem("licenţa"), "licenţ");});
test("licenţă -> licenţ", function() {deepEqual( Stem("licenţă"), "licenţ");});
test("licenţe -> licenţ", function() {deepEqual( Stem("licenţe"), "licenţ");});
test("liceu -> liceu", function() {deepEqual( Stem("liceu"), "liceu");});
test("liceul -> lic", function() {deepEqual( Stem("liceul"), "lic");});
test("liceului -> lic", function() {deepEqual( Stem("liceului"), "lic");});
test("lichefiase -> lichefias", function() {deepEqual( Stem("lichefiase"), "lichefias");});
test("lichelism -> lichelist", function() {deepEqual( Stem("lichelism"), "lichelist");});
test("lichid -> lichid", function() {deepEqual( Stem("lichid"), "lichid");});
test("lichidarea -> lichid", function() {deepEqual( Stem("lichidarea"), "lichid");});
test("lichidă -> lichid", function() {deepEqual( Stem("lichidă"), "lichid");});
test("lichidez -> lichid", function() {deepEqual( Stem("lichidez"), "lichid");});
test("lichideze -> lichid", function() {deepEqual( Stem("lichideze"), "lichid");});
test("lichior -> lichior", function() {deepEqual( Stem("lichior"), "lichior");});
test("lichioruri -> lichiorur", function() {deepEqual( Stem("lichioruri"), "lichiorur");});
test("licitaţia -> licit", function() {deepEqual( Stem("licitaţia"), "licit");});
test("licitaţie -> licit", function() {deepEqual( Stem("licitaţie"), "licit");});
test("licurg -> licurg", function() {deepEqual( Stem("licurg"), "licurg");});
test("liebermann -> liebermann", function() {deepEqual( Stem("liebermann"), "liebermann");});
test("liebknecht -> liebknecht", function() {deepEqual( Stem("liebknecht"), "liebknecht");});
test("ligheanul -> lighean", function() {deepEqual( Stem("ligheanul"), "lighean");});
test("liliac -> liliac", function() {deepEqual( Stem("liliac"), "liliac");});
test("liliachie -> liliach", function() {deepEqual( Stem("liliachie"), "liliach");});
test("liliacul -> liliac", function() {deepEqual( Stem("liliacul"), "liliac");});
test("limba -> limb", function() {deepEqual( Stem("limba"), "limb");});
test("limbagiul -> limbag", function() {deepEqual( Stem("limbagiul"), "limbag");});
test("limbaj -> limbaj", function() {deepEqual( Stem("limbaj"), "limbaj");});
test("limbajul -> limbaj", function() {deepEqual( Stem("limbajul"), "limbaj");});
test("limbajului -> limbaj", function() {deepEqual( Stem("limbajului"), "limbaj");});
test("limbă -> limb", function() {deepEqual( Stem("limbă"), "limb");});
test("limbii -> limb", function() {deepEqual( Stem("limbii"), "limb");});
test("limbile -> limb", function() {deepEqual( Stem("limbile"), "limb");});
test("limita -> limit", function() {deepEqual( Stem("limita"), "limit");});
test("limitare -> limit", function() {deepEqual( Stem("limitare"), "limit");});
test("limitat -> limit", function() {deepEqual( Stem("limitat"), "limit");});
test("limitată -> limit", function() {deepEqual( Stem("limitată"), "limit");});
test("limitativ -> limit", function() {deepEqual( Stem("limitativ"), "limit");});
test("limită -> limit", function() {deepEqual( Stem("limită"), "limit");});
test("limite -> limit", function() {deepEqual( Stem("limite"), "limit");});
test("limitele -> limit", function() {deepEqual( Stem("limitele"), "limit");});
test("limitelor -> limit", function() {deepEqual( Stem("limitelor"), "limit");});
test("limonadă -> limonad", function() {deepEqual( Stem("limonadă"), "limonad");});
test("limpede -> limped", function() {deepEqual( Stem("limpede"), "limped");});
test("limpezea -> limp", function() {deepEqual( Stem("limpezea"), "limp");});
test("limpezească -> limpez", function() {deepEqual( Stem("limpezească"), "limpez");});
test("limpezi -> limp", function() {deepEqual( Stem("limpezi"), "limp");});
test("limpezimi -> limpezim", function() {deepEqual( Stem("limpezimi"), "limpezim");});
test("limpiditate -> limpid", function() {deepEqual( Stem("limpiditate"), "limpid");});
test("limuzine -> limuzin", function() {deepEqual( Stem("limuzine"), "limuzin");});
test("line -> lin", function() {deepEqual( Stem("line"), "lin");});
test("linge -> ling", function() {deepEqual( Stem("linge"), "ling");});
test("lingoare -> lingoar", function() {deepEqual( Stem("lingoare"), "lingoar");});
test("lingurile -> lingur", function() {deepEqual( Stem("lingurile"), "lingur");});
test("linguşea -> linguş", function() {deepEqual( Stem("linguşea"), "linguş");});
test("linia -> lini", function() {deepEqual( Stem("linia"), "lini");});
test("linie -> lin", function() {deepEqual( Stem("linie"), "lin");});
test("liniei -> lin", function() {deepEqual( Stem("liniei"), "lin");});
test("linii -> lin", function() {deepEqual( Stem("linii"), "lin");});
test("liniile -> lin", function() {deepEqual( Stem("liniile"), "lin");});
test("linişte -> linişt", function() {deepEqual( Stem("linişte"), "linişt");});
test("liniştea -> linişt", function() {deepEqual( Stem("liniştea"), "linişt");});
test("liniştesc -> linişt", function() {deepEqual( Stem("liniştesc"), "linişt");});
test("linişteşte -> linişt", function() {deepEqual( Stem("linişteşte"), "linişt");});
test("liniştirea -> linişt", function() {deepEqual( Stem("liniştirea"), "linişt");});
test("liniştit -> linişt", function() {deepEqual( Stem("liniştit"), "linişt");});
test("liniştită -> linişt", function() {deepEqual( Stem("liniştită"), "linişt");});
test("liniştitoare -> linişt", function() {deepEqual( Stem("liniştitoare"), "linişt");});
test("liniştitor -> linişt", function() {deepEqual( Stem("liniştitor"), "linişt");});
test("liniştiţi -> linişt", function() {deepEqual( Stem("liniştiţi"), "linişt");});
test("liniuţa -> liniuţ", function() {deepEqual( Stem("liniuţa"), "liniuţ");});
test("liniuţă -> liniuţ", function() {deepEqual( Stem("liniuţă"), "liniuţ");});
test("lins -> lins", function() {deepEqual( Stem("lins"), "lins");});
test("linsese -> lin", function() {deepEqual( Stem("linsese"), "lin");});
test("linşat -> linşat", function() {deepEqual( Stem("linşat"), "linşat");});
test("linşeze -> linş", function() {deepEqual( Stem("linşeze"), "linş");});
test("linux -> linux", function() {deepEqual( Stem("linux"), "linux");});
test("linx -> linx", function() {deepEqual( Stem("linx"), "linx");});
test("liota -> liot", function() {deepEqual( Stem("liota"), "liot");});
test("lipea -> lip", function() {deepEqual( Stem("lipea"), "lip");});
test("lipeam -> lipeam", function() {deepEqual( Stem("lipeam"), "lipeam");});
test("lipesc -> lipesc", function() {deepEqual( Stem("lipesc"), "lipesc");});
test("lipeşte -> lipeşt", function() {deepEqual( Stem("lipeşte"), "lipeşt");});
test("lipi -> lip", function() {deepEqual( Stem("lipi"), "lip");});
test("lipici -> lipic", function() {deepEqual( Stem("lipici"), "lipic");});
test("lipicioasă -> lipic", function() {deepEqual( Stem("lipicioasă"), "lipic");});
test("lipicios -> lipic", function() {deepEqual( Stem("lipicios"), "lipic");});
test("lipiciul -> lipic", function() {deepEqual( Stem("lipiciul"), "lipic");});
test("lipirea -> lipir", function() {deepEqual( Stem("lipirea"), "lipir");});
test("lipit -> lipit", function() {deepEqual( Stem("lipit"), "lipit");});
test("lipită -> lipit", function() {deepEqual( Stem("lipită"), "lipit");});
test("lipite -> lipit", function() {deepEqual( Stem("lipite"), "lipit");});
test("lipitoare -> lipit", function() {deepEqual( Stem("lipitoare"), "lipit");});
test("lipitoarea -> lipit", function() {deepEqual( Stem("lipitoarea"), "lipit");});
test("lipitorile -> lipit", function() {deepEqual( Stem("lipitorile"), "lipit");});
test("lipitură -> lipit", function() {deepEqual( Stem("lipitură"), "lipit");});
test("lipituri -> lipitur", function() {deepEqual( Stem("lipituri"), "lipitur");});
test("lipiţi -> lip", function() {deepEqual( Stem("lipiţi"), "lip");});
test("lipsa -> lips", function() {deepEqual( Stem("lipsa"), "lips");});
test("lipsă -> lips", function() {deepEqual( Stem("lipsă"), "lips");});
test("lipsea -> lip", function() {deepEqual( Stem("lipsea"), "lip");});
test("lipsească -> lips", function() {deepEqual( Stem("lipsească"), "lips");});
test("lipsei -> lip", function() {deepEqual( Stem("lipsei"), "lip");});
test("lipsesc -> lips", function() {deepEqual( Stem("lipsesc"), "lips");});
test("lipseşte -> lips", function() {deepEqual( Stem("lipseşte"), "lips");});
test("lipsi -> lips", function() {deepEqual( Stem("lipsi"), "lips");});
test("lipsit -> lipsit", function() {deepEqual( Stem("lipsit"), "lipsit");});
test("lipsită -> lipsit", function() {deepEqual( Stem("lipsită"), "lipsit");});
test("lipsiţi -> lips", function() {deepEqual( Stem("lipsiţi"), "lips");});
test("lipsurile -> lipsur", function() {deepEqual( Stem("lipsurile"), "lipsur");});
test("liră -> lir", function() {deepEqual( Stem("liră"), "lir");});
test("lirei -> lire", function() {deepEqual( Stem("lirei"), "lire");});
test("lirele -> lir", function() {deepEqual( Stem("lirele"), "lir");});
test("lirelor -> lir", function() {deepEqual( Stem("lirelor"), "lir");});
test("lirică -> liric", function() {deepEqual( Stem("lirică"), "liric");});
test("lirice -> liric", function() {deepEqual( Stem("lirice"), "liric");});
test("lirism -> lirism", function() {deepEqual( Stem("lirism"), "lirism");});
test("lisandru -> lisandru", function() {deepEqual( Stem("lisandru"), "lisandru");});
test("lista -> list", function() {deepEqual( Stem("lista"), "list");});
test("litanie -> litan", function() {deepEqual( Stem("litanie"), "litan");});
test("litera -> liter", function() {deepEqual( Stem("litera"), "liter");});
test("literal -> literal", function() {deepEqual( Stem("literal"), "literal");});
test("literalmente -> literalment", function() {deepEqual( Stem("literalmente"), "literalment");});
test("literalului -> literal", function() {deepEqual( Stem("literalului"), "literal");});
test("literar -> literar", function() {deepEqual( Stem("literar"), "literar");});
test("literară -> liter", function() {deepEqual( Stem("literară"), "liter");});
test("literare -> liter", function() {deepEqual( Stem("literare"), "liter");});
test("literari -> literar", function() {deepEqual( Stem("literari"), "literar");});
test("literat -> liter", function() {deepEqual( Stem("literat"), "liter");});
test("literato -> literato", function() {deepEqual( Stem("literato"), "literato");});
test("literatori -> liter", function() {deepEqual( Stem("literatori"), "liter");});
test("literatorul -> liter", function() {deepEqual( Stem("literatorul"), "liter");});
test("literatul -> liter", function() {deepEqual( Stem("literatul"), "liter");});
test("literatului -> liter", function() {deepEqual( Stem("literatului"), "liter");});
test("literatura -> literatur", function() {deepEqual( Stem("literatura"), "literatur");});
test("literatură -> literat", function() {deepEqual( Stem("literatură"), "literat");});
test("literaturi -> literatur", function() {deepEqual( Stem("literaturi"), "literatur");});
test("literaturii -> literatur", function() {deepEqual( Stem("literaturii"), "literatur");});
test("literaţi -> liter", function() {deepEqual( Stem("literaţi"), "liter");});
test("literaţilor -> liter", function() {deepEqual( Stem("literaţilor"), "liter");});
test("literă -> liter", function() {deepEqual( Stem("literă"), "liter");});
test("litere -> liter", function() {deepEqual( Stem("litere"), "liter");});
test("literelor -> liter", function() {deepEqual( Stem("literelor"), "liter");});
test("litigii -> litig", function() {deepEqual( Stem("litigii"), "litig");});
test("litigioase -> litig", function() {deepEqual( Stem("litigioase"), "litig");});
test("litigiu -> litigiu", function() {deepEqual( Stem("litigiu"), "litigiu");});
test("litografiate -> litograf", function() {deepEqual( Stem("litografiate"), "litograf");});
test("litografie -> litograf", function() {deepEqual( Stem("litografie"), "litograf");});
test("litri -> litr", function() {deepEqual( Stem("litri"), "litr");});
test("litru -> litru", function() {deepEqual( Stem("litru"), "litru");});
test("litteram -> litter", function() {deepEqual( Stem("litteram"), "litter");});
test("liturghie -> liturgh", function() {deepEqual( Stem("liturghie"), "liturgh");});
test("liturgică -> liturg", function() {deepEqual( Stem("liturgică"), "liturg");});
test("liturgice -> liturg", function() {deepEqual( Stem("liturgice"), "liturg");});
test("livadă -> livad", function() {deepEqual( Stem("livadă"), "livad");});
test("livezi -> livez", function() {deepEqual( Stem("livezi"), "livez");});
test("livezile -> livez", function() {deepEqual( Stem("livezile"), "livez");});
test("livid -> livid", function() {deepEqual( Stem("livid"), "livid");});
test("lividă -> livid", function() {deepEqual( Stem("lividă"), "livid");});
test("livide -> livid", function() {deepEqual( Stem("livide"), "livid");});
test("liviu -> liviu", function() {deepEqual( Stem("liviu"), "liviu");});
test("livizi -> liviz", function() {deepEqual( Stem("livizi"), "liviz");});
test("livra -> livr", function() {deepEqual( Stem("livra"), "livr");});
test("livrare -> livr", function() {deepEqual( Stem("livrare"), "livr");});
test("livrat -> livrat", function() {deepEqual( Stem("livrat"), "livrat");});
test("livrată -> livrat", function() {deepEqual( Stem("livrată"), "livrat");});
test("livrăm -> livr", function() {deepEqual( Stem("livrăm"), "livr");});
test("livrării -> livrăr", function() {deepEqual( Stem("livrării"), "livrăr");});
test("livrările -> livrăr", function() {deepEqual( Stem("livrările"), "livrăr");});
test("livrează -> livr", function() {deepEqual( Stem("livrează"), "livr");});
test("livresc -> livr", function() {deepEqual( Stem("livresc"), "livr");});
test("livrescă -> livresc", function() {deepEqual( Stem("livrescă"), "livresc");});
test("livreşti -> livr", function() {deepEqual( Stem("livreşti"), "livr");});
test("livreze -> livr", function() {deepEqual( Stem("livreze"), "livr");});
test("livrînd -> livrînd", function() {deepEqual( Stem("livrînd"), "livrînd");});
test("lizibil -> lizibil", function() {deepEqual( Stem("lizibil"), "lizibil");});
test("lizibilă -> lizibil", function() {deepEqual( Stem("lizibilă"), "lizibil");});
test("lizibilitate -> lizibil", function() {deepEqual( Stem("lizibilitate"), "lizibil");});
test("lizibilităţii -> lizibil", function() {deepEqual( Stem("lizibilităţii"), "lizibil");});
test("lizozomi -> lizozom", function() {deepEqual( Stem("lizozomi"), "lizozom");});
test("llosa -> llos", function() {deepEqual( Stem("llosa"), "llos");});
test("lobacevski -> lobacevsk", function() {deepEqual( Stem("lobacevski"), "lobacevsk");});
test("lobi -> lob", function() {deepEqual( Stem("lobi"), "lob");});
test("loc -> loc", function() {deepEqual( Stem("loc"), "loc");});
test("local -> local", function() {deepEqual( Stem("local"), "local");});
test("locală -> local", function() {deepEqual( Stem("locală"), "local");});
test("locale -> local", function() {deepEqual( Stem("locale"), "local");});
test("localitate -> local", function() {deepEqual( Stem("localitate"), "local");});
test("localităţi -> local", function() {deepEqual( Stem("localităţi"), "local");});
test("localiza -> localiz", function() {deepEqual( Stem("localiza"), "localiz");});
test("localizarea -> localiz", function() {deepEqual( Stem("localizarea"), "localiz");});
test("localizat -> localiz", function() {deepEqual( Stem("localizat"), "localiz");});
test("localizată -> localiz", function() {deepEqual( Stem("localizată"), "localiz");});
test("localizate -> localiz", function() {deepEqual( Stem("localizate"), "localiz");});
test("localizării -> localizăr", function() {deepEqual( Stem("localizării"), "localizăr");});
test("localizeze -> localiz", function() {deepEqual( Stem("localizeze"), "localiz");});
test("localnic -> localn", function() {deepEqual( Stem("localnic"), "localn");});
test("localnicii -> localn", function() {deepEqual( Stem("localnicii"), "localn");});
test("localul -> local", function() {deepEqual( Stem("localul"), "local");});
test("localurile -> localur", function() {deepEqual( Stem("localurile"), "localur");});
test("locaş -> locaş", function() {deepEqual( Stem("locaş"), "locaş");});
test("locke -> lock", function() {deepEqual( Stem("locke"), "lock");});
test("locomotivă -> locomot", function() {deepEqual( Stem("locomotivă"), "locomot");});
test("locomotive -> locomot", function() {deepEqual( Stem("locomotive"), "locomot");});
test("locomoţiune -> locomot", function() {deepEqual( Stem("locomoţiune"), "locomot");});
test("locotenent -> locotenent", function() {deepEqual( Stem("locotenent"), "locotenent");});
test("locotenentul -> locotenent", function() {deepEqual( Stem("locotenentul"), "locotenent");});
test("locuia -> locui", function() {deepEqual( Stem("locuia"), "locui");});
test("locuiesc -> locui", function() {deepEqual( Stem("locuiesc"), "locui");});
test("locuieşte -> locui", function() {deepEqual( Stem("locuieşte"), "locui");});
test("locuim -> locu", function() {deepEqual( Stem("locuim"), "locu");});
test("locuinţa -> locuinţ", function() {deepEqual( Stem("locuinţa"), "locuinţ");});
test("locuinţă -> locuinţ", function() {deepEqual( Stem("locuinţă"), "locuinţ");});
test("locuinţe -> locuinţ", function() {deepEqual( Stem("locuinţe"), "locuinţ");});
test("locuise -> locu", function() {deepEqual( Stem("locuise"), "locu");});
test("locuite -> locuit", function() {deepEqual( Stem("locuite"), "locuit");});
test("locuitori -> locuit", function() {deepEqual( Stem("locuitori"), "locuit");});
test("locuitorii -> locuit", function() {deepEqual( Stem("locuitorii"), "locuit");});
test("locuitorilor -> locuit", function() {deepEqual( Stem("locuitorilor"), "locuit");});
test("locuitorul -> locuit", function() {deepEqual( Stem("locuitorul"), "locuit");});
test("locul -> loc", function() {deepEqual( Stem("locul"), "loc");});
test("locului -> loc", function() {deepEqual( Stem("locului"), "loc");});
test("locuri -> locur", function() {deepEqual( Stem("locuri"), "locur");});
test("locurile -> locur", function() {deepEqual( Stem("locurile"), "locur");});
test("locurilor -> locur", function() {deepEqual( Stem("locurilor"), "locur");});
test("locuţiune -> locut", function() {deepEqual( Stem("locuţiune"), "locut");});
test("logic -> logic", function() {deepEqual( Stem("logic"), "logic");});
test("logica -> logic", function() {deepEqual( Stem("logica"), "logic");});
test("logicae -> logica", function() {deepEqual( Stem("logicae"), "logica");});
test("logică -> logic", function() {deepEqual( Stem("logică"), "logic");});
test("logice -> logic", function() {deepEqual( Stem("logice"), "logic");});
test("logicei -> logice", function() {deepEqual( Stem("logicei"), "logice");});
test("logiceşte -> logic", function() {deepEqual( Stem("logiceşte"), "logic");});
test("logicieni -> logicien", function() {deepEqual( Stem("logicieni"), "logicien");});
test("logicienii -> logicien", function() {deepEqual( Stem("logicienii"), "logicien");});
test("logicii -> logic", function() {deepEqual( Stem("logicii"), "logic");});
test("logodnici -> logodn", function() {deepEqual( Stem("logodnici"), "logodn");});
test("loial -> loial", function() {deepEqual( Stem("loial"), "loial");});
test("loială -> loial", function() {deepEqual( Stem("loială"), "loial");});
test("loialitate -> loial", function() {deepEqual( Stem("loialitate"), "loial");});
test("loialitatea -> loial", function() {deepEqual( Stem("loialitatea"), "loial");});
test("loialităţii -> loial", function() {deepEqual( Stem("loialităţii"), "loial");});
test("longevitatea -> longev", function() {deepEqual( Stem("longevitatea"), "longev");});
test("lopeţi -> lop", function() {deepEqual( Stem("lopeţi"), "lop");});
test("lor -> lor", function() {deepEqual( Stem("lor"), "lor");});
test("lordului -> lord", function() {deepEqual( Stem("lordului"), "lord");});
test("lorenei -> lorene", function() {deepEqual( Stem("lorenei"), "lorene");});
test("lornion -> lornion", function() {deepEqual( Stem("lornion"), "lornion");});
test("lornionul -> lornion", function() {deepEqual( Stem("lornionul"), "lornion");});
test("loterie -> loter", function() {deepEqual( Stem("loterie"), "loter");});
test("lotul -> lot", function() {deepEqual( Stem("lotul"), "lot");});
test("lovea -> lov", function() {deepEqual( Stem("lovea"), "lov");});
test("lovească -> loveasc", function() {deepEqual( Stem("lovească"), "loveasc");});
test("lovesc -> lovesc", function() {deepEqual( Stem("lovesc"), "lovesc");});
test("loveşte -> loveşt", function() {deepEqual( Stem("loveşte"), "loveşt");});
test("loveşti -> loveşt", function() {deepEqual( Stem("loveşti"), "loveşt");});
test("lovi -> lov", function() {deepEqual( Stem("lovi"), "lov");});
test("lovim -> lov", function() {deepEqual( Stem("lovim"), "lov");});
test("lovind -> lovind", function() {deepEqual( Stem("lovind"), "lovind");});
test("lovirii -> lovir", function() {deepEqual( Stem("lovirii"), "lovir");});
test("lovise -> lovis", function() {deepEqual( Stem("lovise"), "lovis");});
test("lovit -> lovit", function() {deepEqual( Stem("lovit"), "lovit");});
test("lovite -> lovit", function() {deepEqual( Stem("lovite"), "lovit");});
test("lovitura -> lovitur", function() {deepEqual( Stem("lovitura"), "lovitur");});
test("lovitură -> lovit", function() {deepEqual( Stem("lovitură"), "lovit");});
test("lovituri -> lovitur", function() {deepEqual( Stem("lovituri"), "lovitur");});
test("loviturii -> lovitur", function() {deepEqual( Stem("loviturii"), "lovitur");});
test("loviturile -> lovitur", function() {deepEqual( Stem("loviturile"), "lovitur");});
test("loviţi -> lov", function() {deepEqual( Stem("loviţi"), "lov");});
test("lua -> lua", function() {deepEqual( Stem("lua"), "lua");});
test("luam -> luam", function() {deepEqual( Stem("luam"), "luam");});
test("luare -> luar", function() {deepEqual( Stem("luare"), "luar");});
test("luarea -> luar", function() {deepEqual( Stem("luarea"), "luar");});
test("luase -> lua", function() {deepEqual( Stem("luase"), "lua");});
test("luasem -> luas", function() {deepEqual( Stem("luasem"), "luas");});
test("luat -> luat", function() {deepEqual( Stem("luat"), "luat");});
test("luată -> luat", function() {deepEqual( Stem("luată"), "luat");});
test("luate -> luat", function() {deepEqual( Stem("luate"), "luat");});
test("luaţi -> luaţ", function() {deepEqual( Stem("luaţi"), "luaţ");});
test("luau -> luau", function() {deepEqual( Stem("luau"), "luau");});
test("luând -> luând", function() {deepEqual( Stem("luând"), "luând");});
test("luându -> luându", function() {deepEqual( Stem("luându"), "luându");});
test("luă -> luă", function() {deepEqual( Stem("luă"), "luă");});
test("luăm -> luăm", function() {deepEqual( Stem("luăm"), "luăm");});
test("lucica -> lucic", function() {deepEqual( Stem("lucica"), "lucic");});
test("lucid -> lucid", function() {deepEqual( Stem("lucid"), "lucid");});
test("lucidă -> lucid", function() {deepEqual( Stem("lucidă"), "lucid");});
test("lucide -> lucid", function() {deepEqual( Stem("lucide"), "lucid");});
test("luciditate -> lucid", function() {deepEqual( Stem("luciditate"), "lucid");});
test("luciditatea -> lucid", function() {deepEqual( Stem("luciditatea"), "lucid");});
test("lucilei -> lucile", function() {deepEqual( Stem("lucilei"), "lucile");});
test("lucioase -> lucioas", function() {deepEqual( Stem("lucioase"), "lucioas");});
test("lucire -> lucir", function() {deepEqual( Stem("lucire"), "lucir");});
test("luciri -> lucir", function() {deepEqual( Stem("luciri"), "lucir");});
test("luciul -> luc", function() {deepEqual( Stem("luciul"), "luc");});
test("lucra -> lucr", function() {deepEqual( Stem("lucra"), "lucr");});
test("lucrare -> lucr", function() {deepEqual( Stem("lucrare"), "lucr");});
test("lucrarea -> lucr", function() {deepEqual( Stem("lucrarea"), "lucr");});
test("lucrase -> lucr", function() {deepEqual( Stem("lucrase"), "lucr");});
test("lucrat -> lucrat", function() {deepEqual( Stem("lucrat"), "lucrat");});
test("lucrată -> lucrat", function() {deepEqual( Stem("lucrată"), "lucrat");});
test("lucrate -> lucrat", function() {deepEqual( Stem("lucrate"), "lucrat");});
test("lucraţi -> lucr", function() {deepEqual( Stem("lucraţi"), "lucr");});
test("lucrând -> lucr", function() {deepEqual( Stem("lucrând"), "lucr");});
test("lucrăm -> lucr", function() {deepEqual( Stem("lucrăm"), "lucr");});
test("lucrările -> lucrăr", function() {deepEqual( Stem("lucrările"), "lucrăr");});
test("lucrător -> lucrat", function() {deepEqual( Stem("lucrător"), "lucrat");});
test("lucrători -> lucrat", function() {deepEqual( Stem("lucrători"), "lucrat");});
test("lucrătorii -> lucrat", function() {deepEqual( Stem("lucrătorii"), "lucrat");});
test("lucrătorilor -> lucrat", function() {deepEqual( Stem("lucrătorilor"), "lucrat");});
test("lucrătorul -> lucrat", function() {deepEqual( Stem("lucrătorul"), "lucrat");});
test("lucrătorului -> lucrat", function() {deepEqual( Stem("lucrătorului"), "lucrat");});
test("lucrează -> lucr", function() {deepEqual( Stem("lucrează"), "lucr");});
test("lucrez -> lucr", function() {deepEqual( Stem("lucrez"), "lucr");});
test("lucreze -> lucr", function() {deepEqual( Stem("lucreze"), "lucr");});
test("lucru -> lucru", function() {deepEqual( Stem("lucru"), "lucru");});
test("lucrul -> lucr", function() {deepEqual( Stem("lucrul"), "lucr");});
test("lucrului -> lucr", function() {deepEqual( Stem("lucrului"), "lucr");});
test("lucruri -> lucrur", function() {deepEqual( Stem("lucruri"), "lucrur");});
test("lucrurile -> lucrur", function() {deepEqual( Stem("lucrurile"), "lucrur");});
test("lucrurilor -> lucrur", function() {deepEqual( Stem("lucrurilor"), "lucrur");});
test("ludendorff -> ludendorff", function() {deepEqual( Stem("ludendorff"), "ludendorff");});
test("lugubră -> lugubr", function() {deepEqual( Stem("lugubră"), "lugubr");});
test("lui -> lui", function() {deepEqual( Stem("lui"), "lui");});
test("lujerilor -> lujer", function() {deepEqual( Stem("lujerilor"), "lujer");});
test("lumânăraru -> lumânăraru", function() {deepEqual( Stem("lumânăraru"), "lumânăraru");});
test("lumânărarule -> lumânărarul", function() {deepEqual( Stem("lumânărarule"), "lumânărarul");});
test("lumânărarului -> lumânărar", function() {deepEqual( Stem("lumânărarului"), "lumânărar");});
test("lumânări -> lumânăr", function() {deepEqual( Stem("lumânări"), "lumânăr");});
test("lumânărilor -> lumânăr", function() {deepEqual( Stem("lumânărilor"), "lumânăr");});
test("lume -> lum", function() {deepEqual( Stem("lume"), "lum");});
test("lumea -> lum", function() {deepEqual( Stem("lumea"), "lum");});
test("lumei -> lume", function() {deepEqual( Stem("lumei"), "lume");});
test("lumi -> lum", function() {deepEqual( Stem("lumi"), "lum");});
test("lumii -> lum", function() {deepEqual( Stem("lumii"), "lum");});
test("lumile -> lum", function() {deepEqual( Stem("lumile"), "lum");});
test("lumina -> lumin", function() {deepEqual( Stem("lumina"), "lumin");});
test("luminarea -> lumin", function() {deepEqual( Stem("luminarea"), "lumin");});
test("luminat -> lumin", function() {deepEqual( Stem("luminat"), "lumin");});
test("luminată -> lumin", function() {deepEqual( Stem("luminată"), "lumin");});
test("luminate -> lumin", function() {deepEqual( Stem("luminate"), "lumin");});
test("luminaţi -> lumin", function() {deepEqual( Stem("luminaţi"), "lumin");});
test("lumină -> lumin", function() {deepEqual( Stem("lumină"), "lumin");});
test("luminătorul -> lumin", function() {deepEqual( Stem("luminătorul"), "lumin");});
test("luminează -> lumin", function() {deepEqual( Stem("luminează"), "lumin");});
test("lumineze -> lumin", function() {deepEqual( Stem("lumineze"), "lumin");});
test("lumini -> lumin", function() {deepEqual( Stem("lumini"), "lumin");});
test("luminii -> lumin", function() {deepEqual( Stem("luminii"), "lumin");});
test("luminiş -> luminiş", function() {deepEqual( Stem("luminiş"), "luminiş");});
test("luminişul -> luminiş", function() {deepEqual( Stem("luminişul"), "luminiş");});
test("luminişuri -> luminişur", function() {deepEqual( Stem("luminişuri"), "luminişur");});
test("luminişurile -> luminişur", function() {deepEqual( Stem("luminişurile"), "luminişur");});
test("luminoasă -> lumin", function() {deepEqual( Stem("luminoasă"), "lumin");});
test("luminoase -> lumin", function() {deepEqual( Stem("luminoase"), "lumin");});
test("luminos -> lumin", function() {deepEqual( Stem("luminos"), "lumin");});
test("luna -> lun", function() {deepEqual( Stem("luna"), "lun");});
test("lunare -> lunar", function() {deepEqual( Stem("lunare"), "lunar");});
test("lună -> lun", function() {deepEqual( Stem("lună"), "lun");});
test("lunca -> lunc", function() {deepEqual( Stem("lunca"), "lunc");});
test("luncă -> lunc", function() {deepEqual( Stem("luncă"), "lunc");});
test("luneca -> lunec", function() {deepEqual( Stem("luneca"), "lunec");});
test("lunecând -> lunec", function() {deepEqual( Stem("lunecând"), "lunec");});
test("lunecuşuri -> lunecuşur", function() {deepEqual( Stem("lunecuşuri"), "lunecuşur");});
test("lung -> lung", function() {deepEqual( Stem("lung"), "lung");});
test("lunga -> lung", function() {deepEqual( Stem("lunga"), "lung");});
test("lungă -> lung", function() {deepEqual( Stem("lungă"), "lung");});
test("lungea -> lung", function() {deepEqual( Stem("lungea"), "lung");});
test("lungesc -> lung", function() {deepEqual( Stem("lungesc"), "lung");});
test("lungeşte -> lung", function() {deepEqual( Stem("lungeşte"), "lung");});
test("lungi -> lung", function() {deepEqual( Stem("lungi"), "lung");});
test("lungile -> lung", function() {deepEqual( Stem("lungile"), "lung");});
test("lungim -> lung", function() {deepEqual( Stem("lungim"), "lung");});
test("lungime -> lungim", function() {deepEqual( Stem("lungime"), "lungim");});
test("lungimea -> lungim", function() {deepEqual( Stem("lungimea"), "lungim");});
test("lungind -> lung", function() {deepEqual( Stem("lungind"), "lung");});
test("lungisem -> lung", function() {deepEqual( Stem("lungisem"), "lung");});
test("lungit -> lungit", function() {deepEqual( Stem("lungit"), "lungit");});
test("lungită -> lungit", function() {deepEqual( Stem("lungită"), "lungit");});
test("lungite -> lungit", function() {deepEqual( Stem("lungite"), "lungit");});
test("lungiţi -> lung", function() {deepEqual( Stem("lungiţi"), "lung");});
test("lungul -> lung", function() {deepEqual( Stem("lungul"), "lung");});
test("luni -> lun", function() {deepEqual( Stem("luni"), "lun");});
test("lunii -> lun", function() {deepEqual( Stem("lunii"), "lun");});
test("lup -> lup", function() {deepEqual( Stem("lup"), "lup");});
test("lupaşcu -> lupaşcu", function() {deepEqual( Stem("lupaşcu"), "lupaşcu");});
test("lupă -> lup", function() {deepEqual( Stem("lupă"), "lup");});
test("lupi -> lup", function() {deepEqual( Stem("lupi"), "lup");});
test("lupt -> lupt", function() {deepEqual( Stem("lupt"), "lupt");});
test("lupta -> lupt", function() {deepEqual( Stem("lupta"), "lupt");});
test("luptam -> lupt", function() {deepEqual( Stem("luptam"), "lupt");});
test("luptasem -> lupt", function() {deepEqual( Stem("luptasem"), "lupt");});
test("luptat -> luptat", function() {deepEqual( Stem("luptat"), "luptat");});
test("luptând -> lupt", function() {deepEqual( Stem("luptând"), "lupt");});
test("luptându -> lupt", function() {deepEqual( Stem("luptându"), "lupt");});
test("luptă -> lupt", function() {deepEqual( Stem("luptă"), "lupt");});
test("luptăm -> lupt", function() {deepEqual( Stem("luptăm"), "lupt");});
test("luptători -> luptat", function() {deepEqual( Stem("luptători"), "luptat");});
test("luptătorii -> luptat", function() {deepEqual( Stem("luptătorii"), "luptat");});
test("lupte -> lupt", function() {deepEqual( Stem("lupte"), "lupt");});
test("luptei -> lupte", function() {deepEqual( Stem("luptei"), "lupte");});
test("luptele -> lupt", function() {deepEqual( Stem("luptele"), "lupt");});
test("luptelor -> lupt", function() {deepEqual( Stem("luptelor"), "lupt");});
test("lupţi -> lupţ", function() {deepEqual( Stem("lupţi"), "lupţ");});
test("lupul -> lup", function() {deepEqual( Stem("lupul"), "lup");});
test("lustru -> lustru", function() {deepEqual( Stem("lustru"), "lustru");});
test("lut -> lut", function() {deepEqual( Stem("lut"), "lut");});
test("lux -> lux", function() {deepEqual( Stem("lux"), "lux");});
test("luxemburg -> luxemburg", function() {deepEqual( Stem("luxemburg"), "luxemburg");});
test("luxoasă -> luxoas", function() {deepEqual( Stem("luxoasă"), "luxoas");});
test("luxoase -> luxoas", function() {deepEqual( Stem("luxoase"), "luxoas");});
test("luxului -> lux", function() {deepEqual( Stem("luxului"), "lux");});
test("lys -> lys", function() {deepEqual( Stem("lys"), "lys");});
test("m -> m", function() {deepEqual( Stem("m"), "m");});
test("ma -> ma", function() {deepEqual( Stem("ma"), "ma");});
test("macagiu -> macagiu", function() {deepEqual( Stem("macagiu"), "macagiu");});
test("macaroane -> macaroan", function() {deepEqual( Stem("macaroane"), "macaroan");});
test("macdonald -> macdonald", function() {deepEqual( Stem("macdonald"), "macdonald");});
test("macedoneană -> macedonean", function() {deepEqual( Stem("macedoneană"), "macedonean");});
test("mach -> mach", function() {deepEqual( Stem("mach"), "mach");});
test("machiat -> machiat", function() {deepEqual( Stem("machiat"), "machiat");});
test("machiată -> machiat", function() {deepEqual( Stem("machiată"), "machiat");});
test("macină -> macin", function() {deepEqual( Stem("macină"), "macin");});
test("mackensen -> mackensen", function() {deepEqual( Stem("mackensen"), "mackensen");});
test("madam -> madam", function() {deepEqual( Stem("madam"), "madam");});
test("madeleine -> madelein", function() {deepEqual( Stem("madeleine"), "madelein");});
test("madona -> madon", function() {deepEqual( Stem("madona"), "madon");});
test("madonă -> madon", function() {deepEqual( Stem("madonă"), "madon");});
test("magazia -> magaz", function() {deepEqual( Stem("magazia"), "magaz");});
test("magazin -> magazin", function() {deepEqual( Stem("magazin"), "magazin");});
test("magazinelor -> magazin", function() {deepEqual( Stem("magazinelor"), "magazin");});
test("magică -> magic", function() {deepEqual( Stem("magică"), "magic");});
test("magii -> mag", function() {deepEqual( Stem("magii"), "mag");});
test("magilor -> mag", function() {deepEqual( Stem("magilor"), "mag");});
test("magistrat -> magistr", function() {deepEqual( Stem("magistrat"), "magistr");});
test("magistraţi -> magistr", function() {deepEqual( Stem("magistraţi"), "magistr");});
test("magnetic -> magnet", function() {deepEqual( Stem("magnetic"), "magnet");});
test("magnetism -> magnetist", function() {deepEqual( Stem("magnetism"), "magnetist");});
test("magnific -> magnif", function() {deepEqual( Stem("magnific"), "magnif");});
test("magnifică -> magnif", function() {deepEqual( Stem("magnifică"), "magnif");});
test("mahala -> mahal", function() {deepEqual( Stem("mahala"), "mahal");});
test("mahalagiul -> mahalag", function() {deepEqual( Stem("mahalagiul"), "mahalag");});
test("mahalaua -> mahalau", function() {deepEqual( Stem("mahalaua"), "mahalau");});
test("mahmuri -> mahmur", function() {deepEqual( Stem("mahmuri"), "mahmur");});
test("mahrholz -> mahrholz", function() {deepEqual( Stem("mahrholz"), "mahrholz");});
test("mai -> mai", function() {deepEqual( Stem("mai"), "mai");});
test("maica -> maic", function() {deepEqual( Stem("maica"), "maic");});
test("maiestate -> maiest", function() {deepEqual( Stem("maiestate"), "maiest");});
test("maiestuos -> maiestu", function() {deepEqual( Stem("maiestuos"), "maiestu");});
test("maimuţăreală -> maimuţăreal", function() {deepEqual( Stem("maimuţăreală"), "maimuţăreal");});
test("maimuţărească -> maimuţăr", function() {deepEqual( Stem("maimuţărească"), "maimuţăr");});
test("maior -> maior", function() {deepEqual( Stem("maior"), "maior");});
test("maiori -> maior", function() {deepEqual( Stem("maiori"), "maior");});
test("maiorul -> maior", function() {deepEqual( Stem("maiorul"), "maior");});
test("maiorului -> maior", function() {deepEqual( Stem("maiorului"), "maior");});
test("maioul -> maio", function() {deepEqual( Stem("maioul"), "maio");});
test("maistru -> maistru", function() {deepEqual( Stem("maistru"), "maistru");});
test("maistrul -> maistr", function() {deepEqual( Stem("maistrul"), "maistr");});
test("maiştri -> maiştr", function() {deepEqual( Stem("maiştri"), "maiştr");});
test("maiul -> mai", function() {deepEqual( Stem("maiul"), "mai");});
test("majestatea -> majest", function() {deepEqual( Stem("majestatea"), "majest");});
test("majolică -> majol", function() {deepEqual( Stem("majolică"), "majol");});
test("major -> major", function() {deepEqual( Stem("major"), "major");});
test("majorat -> major", function() {deepEqual( Stem("majorat"), "major");});
test("majore -> major", function() {deepEqual( Stem("majore"), "major");});
test("majori -> major", function() {deepEqual( Stem("majori"), "major");});
test("majoritate -> major", function() {deepEqual( Stem("majoritate"), "major");});
test("majoritatea -> major", function() {deepEqual( Stem("majoritatea"), "major");});
test("majorităţi -> major", function() {deepEqual( Stem("majorităţi"), "major");});
test("majorităţii -> major", function() {deepEqual( Stem("majorităţii"), "major");});
test("mal -> mal", function() {deepEqual( Stem("mal"), "mal");});
test("maladii -> malad", function() {deepEqual( Stem("maladii"), "malad");});
test("maleabilitatea -> maleabil", function() {deepEqual( Stem("maleabilitatea"), "maleabil");});
test("maltratate -> maltrat", function() {deepEqual( Stem("maltratate"), "maltrat");});
test("maltratează -> maltrat", function() {deepEqual( Stem("maltratează"), "maltrat");});
test("malul -> mal", function() {deepEqual( Stem("malul"), "mal");});
test("malului -> mal", function() {deepEqual( Stem("malului"), "mal");});
test("maluri -> malur", function() {deepEqual( Stem("maluri"), "malur");});
test("mama -> mam", function() {deepEqual( Stem("mama"), "mam");});
test("mamaia -> mamai", function() {deepEqual( Stem("mamaia"), "mamai");});
test("mamă -> mam", function() {deepEqual( Stem("mamă"), "mam");});
test("mame -> mam", function() {deepEqual( Stem("mame"), "mam");});
test("mamei -> mame", function() {deepEqual( Stem("mamei"), "mame");});
test("manas -> manas", function() {deepEqual( Stem("manas"), "manas");});
test("manechin -> manechin", function() {deepEqual( Stem("manechin"), "manechin");});
test("manechine -> manechin", function() {deepEqual( Stem("manechine"), "manechin");});
test("manejuri -> manejur", function() {deepEqual( Stem("manejuri"), "manejur");});
test("manevrat -> manevr", function() {deepEqual( Stem("manevrat"), "manevr");});
test("manevră -> manevr", function() {deepEqual( Stem("manevră"), "manevr");});
test("manevre -> manevr", function() {deepEqual( Stem("manevre"), "manevr");});
test("manevrează -> manevr", function() {deepEqual( Stem("manevrează"), "manevr");});
test("manevreze -> manevr", function() {deepEqual( Stem("manevreze"), "manevr");});
test("mania -> mani", function() {deepEqual( Stem("mania"), "mani");});
test("maniac -> maniac", function() {deepEqual( Stem("maniac"), "maniac");});
test("maniacul -> maniac", function() {deepEqual( Stem("maniacul"), "maniac");});
test("manieră -> manier", function() {deepEqual( Stem("manieră"), "manier");});
test("manifesta -> manifest", function() {deepEqual( Stem("manifesta"), "manifest");});
test("manifestare -> manifest", function() {deepEqual( Stem("manifestare"), "manifest");});
test("manifestat -> manifest", function() {deepEqual( Stem("manifestat"), "manifest");});
test("manifestate -> manifest", function() {deepEqual( Stem("manifestate"), "manifest");});
test("manifestaţiilor -> manifest", function() {deepEqual( Stem("manifestaţiilor"), "manifest");});
test("manifestă -> manifest", function() {deepEqual( Stem("manifestă"), "manifest");});
test("manifestări -> manifestăr", function() {deepEqual( Stem("manifestări"), "manifestăr");});
test("manifeste -> manifest", function() {deepEqual( Stem("manifeste"), "manifest");});
test("manifestează -> manifest", function() {deepEqual( Stem("manifestează"), "manifest");});
test("manivelele -> manivel", function() {deepEqual( Stem("manivelele"), "manivel");});
test("manopere -> manop", function() {deepEqual( Stem("manopere"), "manop");});
test("manşetele -> manşet", function() {deepEqual( Stem("manşetele"), "manşet");});
test("manta -> mant", function() {deepEqual( Stem("manta"), "mant");});
test("mantale -> mantal", function() {deepEqual( Stem("mantale"), "mantal");});
test("mantalei -> mantale", function() {deepEqual( Stem("mantalei"), "mantale");});
test("mantaua -> mantau", function() {deepEqual( Stem("mantaua"), "mantau");});
test("manuale -> manual", function() {deepEqual( Stem("manuale"), "manual");});
test("manufactură -> manufact", function() {deepEqual( Stem("manufactură"), "manufact");});
test("manufacturismului -> manufacturist", function() {deepEqual( Stem("manufacturismului"), "manufacturist");});
test("manufacturist -> manufacturist", function() {deepEqual( Stem("manufacturist"), "manufacturist");});
test("manuscris -> manuscris", function() {deepEqual( Stem("manuscris"), "manuscris");});
test("marame -> maram", function() {deepEqual( Stem("marame"), "maram");});
test("marburg -> marburg", function() {deepEqual( Stem("marburg"), "marburg");});
test("marca -> marc", function() {deepEqual( Stem("marca"), "marc");});
test("marcat -> marcat", function() {deepEqual( Stem("marcat"), "marcat");});
test("marcă -> marc", function() {deepEqual( Stem("marcă"), "marc");});
test("marchitani -> marchitan", function() {deepEqual( Stem("marchitani"), "marchitan");});
test("marchiză -> marchiz", function() {deepEqual( Stem("marchiză"), "marchiz");});
test("marda -> mard", function() {deepEqual( Stem("marda"), "mard");});
test("mare -> mar", function() {deepEqual( Stem("mare"), "mar");});
test("marea -> mar", function() {deepEqual( Stem("marea"), "mar");});
test("marele -> mar", function() {deepEqual( Stem("marele"), "mar");});
test("marelui -> marel", function() {deepEqual( Stem("marelui"), "marel");});
test("marfă -> marf", function() {deepEqual( Stem("marfă"), "marf");});
test("margine -> margin", function() {deepEqual( Stem("margine"), "margin");});
test("marginea -> margin", function() {deepEqual( Stem("marginea"), "margin");});
test("margini -> margin", function() {deepEqual( Stem("margini"), "margin");});
test("marginile -> margin", function() {deepEqual( Stem("marginile"), "margin");});
test("marginilor -> margin", function() {deepEqual( Stem("marginilor"), "margin");});
test("marginirile -> marginir", function() {deepEqual( Stem("marginirile"), "marginir");});
test("mari -> mar", function() {deepEqual( Stem("mari"), "mar");});
test("maria -> mari", function() {deepEqual( Stem("maria"), "mari");});
test("mariaj -> mariaj", function() {deepEqual( Stem("mariaj"), "mariaj");});
test("mariale -> marial", function() {deepEqual( Stem("mariale"), "marial");});
test("marie -> mar", function() {deepEqual( Stem("marie"), "mar");});
test("mariei -> mar", function() {deepEqual( Stem("mariei"), "mar");});
test("marii -> mar", function() {deepEqual( Stem("marii"), "mar");});
test("marile -> mar", function() {deepEqual( Stem("marile"), "mar");});
test("marilor -> mar", function() {deepEqual( Stem("marilor"), "mar");});
test("marimbafon -> marimbafon", function() {deepEqual( Stem("marimbafon"), "marimbafon");});
test("marin -> marin", function() {deepEqual( Stem("marin"), "marin");});
test("marinar -> marinar", function() {deepEqual( Stem("marinar"), "marinar");});
test("marinate -> marin", function() {deepEqual( Stem("marinate"), "marin");});
test("marină -> marin", function() {deepEqual( Stem("marină"), "marin");});
test("marine -> marin", function() {deepEqual( Stem("marine"), "marin");});
test("marinescu -> marinescu", function() {deepEqual( Stem("marinescu"), "marinescu");});
test("marionetă -> marionet", function() {deepEqual( Stem("marionetă"), "marionet");});
test("marionete -> marionet", function() {deepEqual( Stem("marionete"), "marionet");});
test("marital -> marital", function() {deepEqual( Stem("marital"), "marital");});
test("maritimă -> maritim", function() {deepEqual( Stem("maritimă"), "maritim");});
test("maritime -> maritim", function() {deepEqual( Stem("maritime"), "maritim");});
test("marius -> marius", function() {deepEqual( Stem("marius"), "marius");});
test("marjă -> marj", function() {deepEqual( Stem("marjă"), "marj");});
test("markov -> markov", function() {deepEqual( Stem("markov"), "markov");});
test("marmotă -> marmot", function() {deepEqual( Stem("marmotă"), "marmot");});
test("marmură -> marm", function() {deepEqual( Stem("marmură"), "marm");});
test("marmurelor -> marmur", function() {deepEqual( Stem("marmurelor"), "marmur");});
test("marna -> marn", function() {deepEqual( Stem("marna"), "marn");});
test("maro -> maro", function() {deepEqual( Stem("maro"), "maro");});
test("marocan -> marocan", function() {deepEqual( Stem("marocan"), "marocan");});
test("marocul -> maroc", function() {deepEqual( Stem("marocul"), "maroc");});
test("maroniu -> maroniu", function() {deepEqual( Stem("maroniu"), "maroniu");});
test("marquez -> marqu", function() {deepEqual( Stem("marquez"), "marqu");});
test("marş -> marş", function() {deepEqual( Stem("marş"), "marş");});
test("marşa -> marş", function() {deepEqual( Stem("marşa"), "marş");});
test("marşat -> marşat", function() {deepEqual( Stem("marşat"), "marşat");});
test("marşul -> marş", function() {deepEqual( Stem("marşul"), "marş");});
test("marşului -> marş", function() {deepEqual( Stem("marşului"), "marş");});
test("marşuri -> marşur", function() {deepEqual( Stem("marşuri"), "marşur");});
test("marte -> mart", function() {deepEqual( Stem("marte"), "mart");});
test("martie -> mart", function() {deepEqual( Stem("martie"), "mart");});
test("martir -> martir", function() {deepEqual( Stem("martir"), "martir");});
test("martiraj -> martiraj", function() {deepEqual( Stem("martiraj"), "martiraj");});
test("martirajul -> martiraj", function() {deepEqual( Stem("martirajul"), "martiraj");});
test("martiri -> martir", function() {deepEqual( Stem("martiri"), "martir");});
test("martirice -> martir", function() {deepEqual( Stem("martirice"), "martir");});
test("martirii -> martir", function() {deepEqual( Stem("martirii"), "martir");});
test("martiriu -> martiriu", function() {deepEqual( Stem("martiriu"), "martiriu");});
test("martori -> martor", function() {deepEqual( Stem("martori"), "martor");});
test("marţi -> marţ", function() {deepEqual( Stem("marţi"), "marţ");});
test("marţială -> marţial", function() {deepEqual( Stem("marţială"), "marţial");});
test("marţiale -> marţial", function() {deepEqual( Stem("marţiale"), "marţial");});
test("marţian -> marţian", function() {deepEqual( Stem("marţian"), "marţian");});
test("marţiană -> marţian", function() {deepEqual( Stem("marţiană"), "marţian");});
test("marx -> marx", function() {deepEqual( Stem("marx"), "marx");});
test("marxismului -> marxism", function() {deepEqual( Stem("marxismului"), "marxism");});
test("marxist -> marxist", function() {deepEqual( Stem("marxist"), "marxist");});
test("marxiste -> marxist", function() {deepEqual( Stem("marxiste"), "marxist");});
test("marxistul -> marxist", function() {deepEqual( Stem("marxistul"), "marxist");});
test("masa -> mas", function() {deepEqual( Stem("masa"), "mas");});
test("masaje -> masaj", function() {deepEqual( Stem("masaje"), "masaj");});
test("masă -> mas", function() {deepEqual( Stem("masă"), "mas");});
test("mascarada -> mascarad", function() {deepEqual( Stem("mascarada"), "mascarad");});
test("mascare -> masc", function() {deepEqual( Stem("mascare"), "masc");});
test("mascat -> mascat", function() {deepEqual( Stem("mascat"), "mascat");});
test("mască -> masc", function() {deepEqual( Stem("mască"), "masc");});
test("mascheze -> masch", function() {deepEqual( Stem("mascheze"), "masch");});
test("mase -> mas", function() {deepEqual( Stem("mase"), "mas");});
test("masei -> mase", function() {deepEqual( Stem("masei"), "mase");});
test("masele -> mas", function() {deepEqual( Stem("masele"), "mas");});
test("maselor -> mas", function() {deepEqual( Stem("maselor"), "mas");});
test("masiv -> masiv", function() {deepEqual( Stem("masiv"), "masiv");});
test("masivă -> masiv", function() {deepEqual( Stem("masivă"), "masiv");});
test("maslu -> maslu", function() {deepEqual( Stem("maslu"), "maslu");});
test("maşina -> maşin", function() {deepEqual( Stem("maşina"), "maşin");});
test("maşinal -> maşinal", function() {deepEqual( Stem("maşinal"), "maşinal");});
test("maşină -> maşin", function() {deepEqual( Stem("maşină"), "maşin");});
test("maşinăria -> maşinăr", function() {deepEqual( Stem("maşinăria"), "maşinăr");});
test("maşini -> maşin", function() {deepEqual( Stem("maşini"), "maşin");});
test("maşinile -> maşin", function() {deepEqual( Stem("maşinile"), "maşin");});
test("matei -> mate", function() {deepEqual( Stem("matei"), "mate");});
test("mateiaş -> mateiaş", function() {deepEqual( Stem("mateiaş"), "mateiaş");});
test("mateiaşul -> mateiaş", function() {deepEqual( Stem("mateiaşul"), "mateiaş");});
test("mateiaşului -> mateiaş", function() {deepEqual( Stem("mateiaşului"), "mateiaş");});
test("matematic -> matemat", function() {deepEqual( Stem("matematic"), "matemat");});
test("matematica -> matemat", function() {deepEqual( Stem("matematica"), "matemat");});
test("matematică -> matemat", function() {deepEqual( Stem("matematică"), "matemat");});
test("matematice -> matemat", function() {deepEqual( Stem("matematice"), "matemat");});
test("matematicei -> matematice", function() {deepEqual( Stem("matematicei"), "matematice");});
test("matematiceşte -> matematic", function() {deepEqual( Stem("matematiceşte"), "matematic");});
test("matematici -> matemat", function() {deepEqual( Stem("matematici"), "matemat");});
test("matematicianul -> matematician", function() {deepEqual( Stem("matematicianul"), "matematician");});
test("matematicieni -> matematicien", function() {deepEqual( Stem("matematicieni"), "matematicien");});
test("matematicii -> matemat", function() {deepEqual( Stem("matematicii"), "matemat");});
test("matematicile -> matemat", function() {deepEqual( Stem("matematicile"), "matemat");});
test("matematicilor -> matemat", function() {deepEqual( Stem("matematicilor"), "matemat");});
test("materia -> mater", function() {deepEqual( Stem("materia"), "mater");});
test("material -> material", function() {deepEqual( Stem("material"), "material");});
test("materială -> material", function() {deepEqual( Stem("materială"), "material");});
test("materiale -> material", function() {deepEqual( Stem("materiale"), "material");});
test("materialism -> materialist", function() {deepEqual( Stem("materialism"), "materialist");});
test("materialiste -> materialist", function() {deepEqual( Stem("materialiste"), "materialist");});
test("materialitatea -> material", function() {deepEqual( Stem("materialitatea"), "material");});
test("materialul -> material", function() {deepEqual( Stem("materialul"), "material");});
test("materialului -> material", function() {deepEqual( Stem("materialului"), "material");});
test("materie -> mater", function() {deepEqual( Stem("materie"), "mater");});
test("materiile -> mater", function() {deepEqual( Stem("materiile"), "mater");});
test("matură -> matur", function() {deepEqual( Stem("matură"), "matur");});
test("maturitate -> matur", function() {deepEqual( Stem("maturitate"), "matur");});
test("maţele -> maţ", function() {deepEqual( Stem("maţele"), "maţ");});
test("max -> max", function() {deepEqual( Stem("max"), "max");});
test("maxime -> maxim", function() {deepEqual( Stem("maxime"), "maxim");});
test("maximilian -> maximilian", function() {deepEqual( Stem("maximilian"), "maximilian");});
test("maximul -> max", function() {deepEqual( Stem("maximul"), "max");});
test("maximum -> maximum", function() {deepEqual( Stem("maximum"), "maximum");});
test("mazuriene -> mazurien", function() {deepEqual( Stem("mazuriene"), "mazurien");});
test("mâine -> mâin", function() {deepEqual( Stem("mâine"), "mâin");});
test("mâini -> mâin", function() {deepEqual( Stem("mâini"), "mâin");});
test("mâinii -> mâin", function() {deepEqual( Stem("mâinii"), "mâin");});
test("mâinile -> mâin", function() {deepEqual( Stem("mâinile"), "mâin");});
test("mâlul -> mâl", function() {deepEqual( Stem("mâlul"), "mâl");});
test("mâna -> mân", function() {deepEqual( Stem("mâna"), "mân");});
test("mânat -> mânat", function() {deepEqual( Stem("mânat"), "mânat");});
test("mânaţi -> mân", function() {deepEqual( Stem("mânaţi"), "mân");});
test("mânându -> mânându", function() {deepEqual( Stem("mânându"), "mânându");});
test("mână -> mân", function() {deepEqual( Stem("mână"), "mân");});
test("mânăstirei -> mânăstire", function() {deepEqual( Stem("mânăstirei"), "mânăstire");});
test("mânca -> mânc", function() {deepEqual( Stem("mânca"), "mânc");});
test("mâncare -> mânc", function() {deepEqual( Stem("mâncare"), "mânc");});
test("mâncat -> mâncat", function() {deepEqual( Stem("mâncat"), "mâncat");});
test("mâncau -> mânc", function() {deepEqual( Stem("mâncau"), "mânc");});
test("mâncând -> mânc", function() {deepEqual( Stem("mâncând"), "mânc");});
test("mâncăm -> mânc", function() {deepEqual( Stem("mâncăm"), "mânc");});
test("mâncării -> mâncăr", function() {deepEqual( Stem("mâncării"), "mâncăr");});
test("mâncăruri -> mâncărur", function() {deepEqual( Stem("mâncăruri"), "mâncărur");});
test("mâncărurile -> mâncărur", function() {deepEqual( Stem("mâncărurile"), "mâncărur");});
test("mândră -> mândr", function() {deepEqual( Stem("mândră"), "mândr");});
test("mândri -> mândr", function() {deepEqual( Stem("mândri"), "mândr");});
test("mândria -> mândr", function() {deepEqual( Stem("mândria"), "mândr");});
test("mândrie -> mândr", function() {deepEqual( Stem("mândrie"), "mândr");});
test("mândriei -> mândr", function() {deepEqual( Stem("mândriei"), "mândr");});
test("mândro -> mândro", function() {deepEqual( Stem("mândro"), "mândro");});
test("mândru -> mândru", function() {deepEqual( Stem("mândru"), "mândru");});
test("mândruliţă -> mândruliţ", function() {deepEqual( Stem("mândruliţă"), "mândruliţ");});
test("mâne -> mân", function() {deepEqual( Stem("mâne"), "mân");});
test("mânei -> mâne", function() {deepEqual( Stem("mânei"), "mâne");});
test("mângâia -> mângâi", function() {deepEqual( Stem("mângâia"), "mângâi");});
test("mângâiat -> mângâi", function() {deepEqual( Stem("mângâiat"), "mângâi");});
test("mângâiate -> mângâi", function() {deepEqual( Stem("mângâiate"), "mângâi");});
test("mângâie -> mângâi", function() {deepEqual( Stem("mângâie"), "mângâi");});
test("mângâiere -> mângâi", function() {deepEqual( Stem("mângâiere"), "mângâi");});
test("mângâieri -> mângâier", function() {deepEqual( Stem("mângâieri"), "mângâier");});
test("mângâierile -> mângâier", function() {deepEqual( Stem("mângâierile"), "mângâier");});
test("mângâietoare -> mângâietoar", function() {deepEqual( Stem("mângâietoare"), "mângâietoar");});
test("mângâietor -> mângâietor", function() {deepEqual( Stem("mângâietor"), "mângâietor");});
test("mângâioasă -> mângâi", function() {deepEqual( Stem("mângâioasă"), "mângâi");});
test("mânie -> mân", function() {deepEqual( Stem("mânie"), "mân");});
test("mânioasă -> mânioas", function() {deepEqual( Stem("mânioasă"), "mânioas");});
test("mânios -> mânios", function() {deepEqual( Stem("mânios"), "mânios");});
test("mânjită -> mânjit", function() {deepEqual( Stem("mânjită"), "mânjit");});
test("mânjite -> mânjit", function() {deepEqual( Stem("mânjite"), "mânjit");});
test("mântuim -> mântu", function() {deepEqual( Stem("mântuim"), "mântu");});
test("mântuirea -> mântu", function() {deepEqual( Stem("mântuirea"), "mântu");});
test("mântuirii -> mântuir", function() {deepEqual( Stem("mântuirii"), "mântuir");});
test("mântuitoare -> mântuit", function() {deepEqual( Stem("mântuitoare"), "mântuit");});
test("mântuitorul -> mântuit", function() {deepEqual( Stem("mântuitorul"), "mântuit");});
test("mânui -> mânu", function() {deepEqual( Stem("mânui"), "mânu");});
test("mânuim -> mânu", function() {deepEqual( Stem("mânuim"), "mânu");});
test("mânuţele -> mânuţ", function() {deepEqual( Stem("mânuţele"), "mânuţ");});
test("mârâia -> mârâi", function() {deepEqual( Stem("mârâia"), "mârâi");});
test("mârţoage -> mârţoag", function() {deepEqual( Stem("mârţoage"), "mârţoag");});
test("mă -> mă", function() {deepEqual( Stem("mă"), "mă");});
test("măcar -> măcar", function() {deepEqual( Stem("măcar"), "măcar");});
test("măcelăreau -> măcelăr", function() {deepEqual( Stem("măcelăreau"), "măcelăr");});
test("măcelul -> măcel", function() {deepEqual( Stem("măcelul"), "măcel");});
test("măcinare -> măcin", function() {deepEqual( Stem("măcinare"), "măcin");});
test("măcinarea -> măcin", function() {deepEqual( Stem("măcinarea"), "măcin");});
test("măcinat -> măcin", function() {deepEqual( Stem("măcinat"), "măcin");});
test("măduva -> măduv", function() {deepEqual( Stem("măduva"), "măduv");});
test("măgulit -> măgul", function() {deepEqual( Stem("măgulit"), "măgul");});
test("măgura -> măgur", function() {deepEqual( Stem("măgura"), "măgur");});
test("măgurei -> măgure", function() {deepEqual( Stem("măgurei"), "măgure");});
test("măgurii -> măgur", function() {deepEqual( Stem("măgurii"), "măgur");});
test("măi -> măi", function() {deepEqual( Stem("măi"), "măi");});
test("măiculiţă -> măiculiţ", function() {deepEqual( Stem("măiculiţă"), "măiculiţ");});
test("mămăligă -> mămălig", function() {deepEqual( Stem("mămăligă"), "mămălig");});
test("mănânc -> mănânc", function() {deepEqual( Stem("mănânc"), "mănânc");});
test("mănâncă -> mănânc", function() {deepEqual( Stem("mănâncă"), "mănânc");});
test("mănânce -> mănânc", function() {deepEqual( Stem("mănânce"), "mănânc");});
test("mănânci -> mănânc", function() {deepEqual( Stem("mănânci"), "mănânc");});
test("mănăstire -> mănăst", function() {deepEqual( Stem("mănăstire"), "mănăst");});
test("mănciulea -> mănciul", function() {deepEqual( Stem("mănciulea"), "mănciul");});
test("mănuşa -> mănuş", function() {deepEqual( Stem("mănuşa"), "mănuş");});
test("mănuşă -> mănuş", function() {deepEqual( Stem("mănuşă"), "mănuş");});
test("mănuşi -> mănuş", function() {deepEqual( Stem("mănuşi"), "mănuş");});
test("mănuşile -> mănuş", function() {deepEqual( Stem("mănuşile"), "mănuş");});
test("măr -> măr", function() {deepEqual( Stem("măr"), "măr");});
test("măraru -> măraru", function() {deepEqual( Stem("măraru"), "măraru");});
test("mărcii -> mărc", function() {deepEqual( Stem("mărcii"), "mărc");});
test("măresc -> măresc", function() {deepEqual( Stem("măresc"), "măresc");});
test("măreşte -> măreşt", function() {deepEqual( Stem("măreşte"), "măreşt");});
test("măreţ -> măreţ", function() {deepEqual( Stem("măreţ"), "măreţ");});
test("mărginească -> mărgin", function() {deepEqual( Stem("mărginească"), "mărgin");});
test("mărginesc -> mărgin", function() {deepEqual( Stem("mărginesc"), "mărgin");});
test("mărgineşte -> mărgin", function() {deepEqual( Stem("mărgineşte"), "mărgin");});
test("mărginim -> mărgin", function() {deepEqual( Stem("mărginim"), "mărgin");});
test("mărginit -> mărgin", function() {deepEqual( Stem("mărginit"), "mărgin");});
test("mărginită -> mărgin", function() {deepEqual( Stem("mărginită"), "mărgin");});
test("mărginite -> mărgin", function() {deepEqual( Stem("mărginite"), "mărgin");});
test("mări -> măr", function() {deepEqual( Stem("mări"), "măr");});
test("măricele -> măric", function() {deepEqual( Stem("măricele"), "măric");});
test("măricică -> măric", function() {deepEqual( Stem("măricică"), "măric");});
test("mărie -> măr", function() {deepEqual( Stem("mărie"), "măr");});
test("măriei -> măr", function() {deepEqual( Stem("măriei"), "măr");});
test("mării -> măr", function() {deepEqual( Stem("mării"), "măr");});
test("mărim -> măr", function() {deepEqual( Stem("mărim"), "măr");});
test("mărime -> mărim", function() {deepEqual( Stem("mărime"), "mărim");});
test("mărimea -> mărim", function() {deepEqual( Stem("mărimea"), "mărim");});
test("mărimi -> mărim", function() {deepEqual( Stem("mărimi"), "mărim");});
test("mărimile -> mărim", function() {deepEqual( Stem("mărimile"), "mărim");});
test("mărind -> mărind", function() {deepEqual( Stem("mărind"), "mărind");});
test("mărinimie -> mărinim", function() {deepEqual( Stem("mărinimie"), "mărinim");});
test("mărioară -> mărioar", function() {deepEqual( Stem("mărioară"), "mărioar");});
test("mărire -> mărir", function() {deepEqual( Stem("mărire"), "mărir");});
test("măririle -> mărir", function() {deepEqual( Stem("măririle"), "mărir");});
test("măriseră -> măriser", function() {deepEqual( Stem("măriseră"), "măriser");});
test("mărişoară -> mărişoar", function() {deepEqual( Stem("mărişoară"), "mărişoar");});
test("mărit -> mărit", function() {deepEqual( Stem("mărit"), "mărit");});
test("măritat -> mărit", function() {deepEqual( Stem("măritat"), "mărit");});
test("măritată -> mărit", function() {deepEqual( Stem("măritată"), "mărit");});
test("măritate -> măritat", function() {deepEqual( Stem("măritate"), "măritat");});
test("mărită -> mărit", function() {deepEqual( Stem("mărită"), "mărit");});
test("mărite -> mărit", function() {deepEqual( Stem("mărite"), "mărit");});
test("măritoare -> mărit", function() {deepEqual( Stem("măritoare"), "mărit");});
test("măriţi -> măr", function() {deepEqual( Stem("măriţi"), "măr");});
test("mărşăluiască -> mărşăluiasc", function() {deepEqual( Stem("mărşăluiască"), "mărşăluiasc");});
test("mărşăluim -> mărşălu", function() {deepEqual( Stem("mărşăluim"), "mărşălu");});
test("mărturisesc -> mărturis", function() {deepEqual( Stem("mărturisesc"), "mărturis");});
test("mărturisim -> mărturis", function() {deepEqual( Stem("mărturisim"), "mărturis");});
test("mărturisind -> mărturis", function() {deepEqual( Stem("mărturisind"), "mărturis");});
test("mărturisire -> mărturis", function() {deepEqual( Stem("mărturisire"), "mărturis");});
test("mărturisiri -> mărturisir", function() {deepEqual( Stem("mărturisiri"), "mărturisir");});
test("mărturisit -> mărturis", function() {deepEqual( Stem("mărturisit"), "mărturis");});
test("mărturisită -> mărturis", function() {deepEqual( Stem("mărturisită"), "mărturis");});
test("mărunt -> mărunt", function() {deepEqual( Stem("mărunt"), "mărunt");});
test("măruntaiele -> măruntai", function() {deepEqual( Stem("măruntaiele"), "măruntai");});
test("măruntaielor -> măruntai", function() {deepEqual( Stem("măruntaielor"), "măruntai");});
test("măruntă -> mărunt", function() {deepEqual( Stem("măruntă"), "mărunt");});
test("mărunte -> mărunt", function() {deepEqual( Stem("mărunte"), "mărunt");});
test("mărunţişuri -> mărunţişur", function() {deepEqual( Stem("mărunţişuri"), "mărunţişur");});
test("măslinele -> măslin", function() {deepEqual( Stem("măslinele"), "măslin");});
test("măsliniu -> măsliniu", function() {deepEqual( Stem("măsliniu"), "măsliniu");});
test("măsoară -> măsoar", function() {deepEqual( Stem("măsoară"), "măsoar");});
test("măsor -> măsor", function() {deepEqual( Stem("măsor"), "măsor");});
test("măsura -> măsur", function() {deepEqual( Stem("măsura"), "măsur");});
test("măsurabil -> măsur", function() {deepEqual( Stem("măsurabil"), "măsur");});
test("măsurabilă -> măsur", function() {deepEqual( Stem("măsurabilă"), "măsur");});
test("măsurare -> măsur", function() {deepEqual( Stem("măsurare"), "măsur");});
test("măsurarea -> măsur", function() {deepEqual( Stem("măsurarea"), "măsur");});
test("măsurat -> măsur", function() {deepEqual( Stem("măsurat"), "măsur");});
test("măsurată -> măsur", function() {deepEqual( Stem("măsurată"), "măsur");});
test("măsurate -> măsur", function() {deepEqual( Stem("măsurate"), "măsur");});
test("măsurau -> măsur", function() {deepEqual( Stem("măsurau"), "măsur");});
test("măsură -> măsur", function() {deepEqual( Stem("măsură"), "măsur");});
test("măsurăm -> măsurăm", function() {deepEqual( Stem("măsurăm"), "măsurăm");});
test("măsurătoare -> măsur", function() {deepEqual( Stem("măsurătoare"), "măsur");});
test("măsurătoarea -> măsur", function() {deepEqual( Stem("măsurătoarea"), "măsur");});
test("măsurătorii -> măsur", function() {deepEqual( Stem("măsurătorii"), "măsur");});
test("măsurătorile -> măsur", function() {deepEqual( Stem("măsurătorile"), "măsur");});
test("măsuri -> măsur", function() {deepEqual( Stem("măsuri"), "măsur");});
test("măsurii -> măsur", function() {deepEqual( Stem("măsurii"), "măsur");});
test("măsurile -> măsur", function() {deepEqual( Stem("măsurile"), "măsur");});
test("măsurilor -> măsur", function() {deepEqual( Stem("măsurilor"), "măsur");});
test("măsuţa -> măsuţ", function() {deepEqual( Stem("măsuţa"), "măsuţ");});
test("măşti -> măşt", function() {deepEqual( Stem("măşti"), "măşt");});
test("mătase -> mătas", function() {deepEqual( Stem("mătase"), "mătas");});
test("măturând -> mătur", function() {deepEqual( Stem("măturând"), "mătur");});
test("mătuşa -> mătuş", function() {deepEqual( Stem("mătuşa"), "mătuş");});
test("mătuşă -> mătuş", function() {deepEqual( Stem("mătuşă"), "mătuş");});
test("mătuşi -> mătuş", function() {deepEqual( Stem("mătuşi"), "mătuş");});
test("mătuşii -> mătuş", function() {deepEqual( Stem("mătuşii"), "mătuş");});
test("mătuşile -> mătuş", function() {deepEqual( Stem("mătuşile"), "mătuş");});
test("mea -> mea", function() {deepEqual( Stem("mea"), "mea");});
test("meargă -> mearg", function() {deepEqual( Stem("meargă"), "mearg");});
test("mecanica -> mecan", function() {deepEqual( Stem("mecanica"), "mecan");});
test("mecanică -> mecan", function() {deepEqual( Stem("mecanică"), "mecan");});
test("mecanici -> mecan", function() {deepEqual( Stem("mecanici"), "mecan");});
test("mecanism -> mecanist", function() {deepEqual( Stem("mecanism"), "mecanist");});
test("mecanismul -> mecanist", function() {deepEqual( Stem("mecanismul"), "mecanist");});
test("mecanismului -> mecanist", function() {deepEqual( Stem("mecanismului"), "mecanist");});
test("mediată -> mediat", function() {deepEqual( Stem("mediată"), "mediat");});
test("medic -> medic", function() {deepEqual( Stem("medic"), "medic");});
test("medical -> medic", function() {deepEqual( Stem("medical"), "medic");});
test("medicală -> medic", function() {deepEqual( Stem("medicală"), "medic");});
test("medicamentaţie -> medicament", function() {deepEqual( Stem("medicamentaţie"), "medicament");});
test("medicaţia -> medic", function() {deepEqual( Stem("medicaţia"), "medic");});
test("medici -> medic", function() {deepEqual( Stem("medici"), "medic");});
test("medicii -> medic", function() {deepEqual( Stem("medicii"), "medic");});
test("medicina -> medicin", function() {deepEqual( Stem("medicina"), "medicin");});
test("medicină -> medicin", function() {deepEqual( Stem("medicină"), "medicin");});
test("medicul -> medic", function() {deepEqual( Stem("medicul"), "medic");});
test("medieval -> medieval", function() {deepEqual( Stem("medieval"), "medieval");});
test("medievale -> medieval", function() {deepEqual( Stem("medievale"), "medieval");});
test("mediocră -> mediocr", function() {deepEqual( Stem("mediocră"), "mediocr");});
test("mediocre -> mediocr", function() {deepEqual( Stem("mediocre"), "mediocr");});
test("mediocri -> mediocr", function() {deepEqual( Stem("mediocri"), "mediocr");});
test("mediocru -> mediocru", function() {deepEqual( Stem("mediocru"), "mediocru");});
test("meditaţie -> medit", function() {deepEqual( Stem("meditaţie"), "medit");});
test("meditaţiei -> medit", function() {deepEqual( Stem("meditaţiei"), "medit");});
test("medităm -> medit", function() {deepEqual( Stem("medităm"), "medit");});
test("mediteze -> medit", function() {deepEqual( Stem("mediteze"), "medit");});
test("mediu -> mediu", function() {deepEqual( Stem("mediu"), "mediu");});
test("mediul -> med", function() {deepEqual( Stem("mediul"), "med");});
test("meduză -> meduz", function() {deepEqual( Stem("meduză"), "meduz");});
test("mei -> mei", function() {deepEqual( Stem("mei"), "mei");});
test("melancolic -> melancol", function() {deepEqual( Stem("melancolic"), "melancol");});
test("melancolică -> melancol", function() {deepEqual( Stem("melancolică"), "melancol");});
test("melancolie -> melancol", function() {deepEqual( Stem("melancolie"), "melancol");});
test("melancoliei -> melancol", function() {deepEqual( Stem("melancoliei"), "melancol");});
test("melancolii -> melancol", function() {deepEqual( Stem("melancolii"), "melancol");});
test("melci -> melc", function() {deepEqual( Stem("melci"), "melc");});
test("mele -> mel", function() {deepEqual( Stem("mele"), "mel");});
test("melodiei -> melod", function() {deepEqual( Stem("melodiei"), "melod");});
test("melodramatic -> melodramat", function() {deepEqual( Stem("melodramatic"), "melodramat");});
test("melodramă -> melodram", function() {deepEqual( Stem("melodramă"), "melodram");});
test("membrele -> membr", function() {deepEqual( Stem("membrele"), "membr");});
test("membri -> membr", function() {deepEqual( Stem("membri"), "membr");});
test("membrii -> membr", function() {deepEqual( Stem("membrii"), "membr");});
test("membru -> membru", function() {deepEqual( Stem("membru"), "membru");});
test("memel -> memel", function() {deepEqual( Stem("memel"), "memel");});
test("memento -> memento", function() {deepEqual( Stem("memento"), "memento");});
test("memorabil -> memor", function() {deepEqual( Stem("memorabil"), "memor");});
test("memorabilă -> memor", function() {deepEqual( Stem("memorabilă"), "memor");});
test("memorează -> memor", function() {deepEqual( Stem("memorează"), "memor");});
test("memoria -> memor", function() {deepEqual( Stem("memoria"), "memor");});
test("memorie -> memor", function() {deepEqual( Stem("memorie"), "memor");});
test("memoriei -> memor", function() {deepEqual( Stem("memoriei"), "memor");});
test("memorizează -> memoriz", function() {deepEqual( Stem("memorizează"), "memoriz");});
test("menită -> menit", function() {deepEqual( Stem("menită"), "menit");});
test("menite -> menit", function() {deepEqual( Stem("menite"), "menit");});
test("meniul -> men", function() {deepEqual( Stem("meniul"), "men");});
test("mental -> mental", function() {deepEqual( Stem("mental"), "mental");});
test("mentalitate -> mental", function() {deepEqual( Stem("mentalitate"), "mental");});
test("mentalitatea -> mental", function() {deepEqual( Stem("mentalitatea"), "mental");});
test("mentalităţilor -> mental", function() {deepEqual( Stem("mentalităţilor"), "mental");});
test("menţinerea -> menţin", function() {deepEqual( Stem("menţinerea"), "menţin");});
test("menţinute -> menţin", function() {deepEqual( Stem("menţinute"), "menţin");});
test("mere -> mer", function() {deepEqual( Stem("mere"), "mer");});
test("merele -> mer", function() {deepEqual( Stem("merele"), "mer");});
test("mereu -> mereu", function() {deepEqual( Stem("mereu"), "mereu");});
test("merg -> merg", function() {deepEqual( Stem("merg"), "merg");});
test("mergând -> merg", function() {deepEqual( Stem("mergând"), "merg");});
test("merge -> merg", function() {deepEqual( Stem("merge"), "merg");});
test("mergea -> merg", function() {deepEqual( Stem("mergea"), "merg");});
test("mergeam -> merg", function() {deepEqual( Stem("mergeam"), "merg");});
test("mergeau -> merg", function() {deepEqual( Stem("mergeau"), "merg");});
test("mergem -> merg", function() {deepEqual( Stem("mergem"), "merg");});
test("mergeţi -> merg", function() {deepEqual( Stem("mergeţi"), "merg");});
test("mergi -> merg", function() {deepEqual( Stem("mergi"), "merg");});
test("meri -> mer", function() {deepEqual( Stem("meri"), "mer");});
test("meridian -> meridian", function() {deepEqual( Stem("meridian"), "meridian");});
test("meridional -> meridional", function() {deepEqual( Stem("meridional"), "meridional");});
test("meridionali -> meridional", function() {deepEqual( Stem("meridionali"), "meridional");});
test("merinde -> merind", function() {deepEqual( Stem("merinde"), "merind");});
test("merit -> merit", function() {deepEqual( Stem("merit"), "merit");});
test("merita -> merit", function() {deepEqual( Stem("merita"), "merit");});
test("meritam -> merit", function() {deepEqual( Stem("meritam"), "merit");});
test("merită -> merit", function() {deepEqual( Stem("merită"), "merit");});
test("merite -> merit", function() {deepEqual( Stem("merite"), "merit");});
test("meritul -> merit", function() {deepEqual( Stem("meritul"), "merit");});
test("mers -> mers", function() {deepEqual( Stem("mers"), "mers");});
test("mersese -> mer", function() {deepEqual( Stem("mersese"), "mer");});
test("mersul -> mers", function() {deepEqual( Stem("mersul"), "mers");});
test("meschină -> meschin", function() {deepEqual( Stem("meschină"), "meschin");});
test("meschinăriile -> meschinăr", function() {deepEqual( Stem("meschinăriile"), "meschinăr");});
test("meschinăriilor -> meschinăr", function() {deepEqual( Stem("meschinăriilor"), "meschinăr");});
test("mescioară -> mescioar", function() {deepEqual( Stem("mescioară"), "mescioar");});
test("mese -> mes", function() {deepEqual( Stem("mese"), "mes");});
test("mesei -> mese", function() {deepEqual( Stem("mesei"), "mese");});
test("mesele -> mes", function() {deepEqual( Stem("mesele"), "mes");});
test("meselor -> mes", function() {deepEqual( Stem("meselor"), "mes");});
test("meserie -> meser", function() {deepEqual( Stem("meserie"), "meser");});
test("meseriilor -> meser", function() {deepEqual( Stem("meseriilor"), "meser");});
test("mesteacăn -> mesteacăn", function() {deepEqual( Stem("mesteacăn"), "mesteacăn");});
test("meşter -> meşter", function() {deepEqual( Stem("meşter"), "meşter");});
test("meşterului -> meşter", function() {deepEqual( Stem("meşterului"), "meşter");});
test("meşteşug -> meşteşug", function() {deepEqual( Stem("meşteşug"), "meşteşug");});
test("meşteşugari -> meşteşugar", function() {deepEqual( Stem("meşteşugari"), "meşteşugar");});
test("meşteşugul -> meşteşug", function() {deepEqual( Stem("meşteşugul"), "meşteşug");});
test("meşteşugului -> meşteşug", function() {deepEqual( Stem("meşteşugului"), "meşteşug");});
test("metafizic -> metafiz", function() {deepEqual( Stem("metafizic"), "metafiz");});
test("metafizica -> metafiz", function() {deepEqual( Stem("metafizica"), "metafiz");});
test("metafizică -> metafiz", function() {deepEqual( Stem("metafizică"), "metafiz");});
test("metafizice -> metafiz", function() {deepEqual( Stem("metafizice"), "metafiz");});
test("metafizicei -> metafizice", function() {deepEqual( Stem("metafizicei"), "metafizice");});
test("metafora -> metafor", function() {deepEqual( Stem("metafora"), "metafor");});
test("metaforă -> metafor", function() {deepEqual( Stem("metaforă"), "metafor");});
test("metafore -> metafor", function() {deepEqual( Stem("metafore"), "metafor");});
test("metageometriei -> metageometr", function() {deepEqual( Stem("metageometriei"), "metageometr");});
test("metal -> metal", function() {deepEqual( Stem("metal"), "metal");});
test("metalic -> metal", function() {deepEqual( Stem("metalic"), "metal");});
test("metalice -> metal", function() {deepEqual( Stem("metalice"), "metal");});
test("metalului -> metal", function() {deepEqual( Stem("metalului"), "metal");});
test("metalurgie -> metalurg", function() {deepEqual( Stem("metalurgie"), "metalurg");});
test("meticuloasă -> meticul", function() {deepEqual( Stem("meticuloasă"), "meticul");});
test("metoda -> metod", function() {deepEqual( Stem("metoda"), "metod");});
test("metodă -> metod", function() {deepEqual( Stem("metodă"), "metod");});
test("metode -> metod", function() {deepEqual( Stem("metode"), "metod");});
test("metodei -> metode", function() {deepEqual( Stem("metodei"), "metode");});
test("metodele -> metod", function() {deepEqual( Stem("metodele"), "metod");});
test("metodelor -> metod", function() {deepEqual( Stem("metodelor"), "metod");});
test("metodică -> metod", function() {deepEqual( Stem("metodică"), "metod");});
test("metresă -> metres", function() {deepEqual( Stem("metresă"), "metres");});
test("metri -> metr", function() {deepEqual( Stem("metri"), "metr");});
test("metric -> metric", function() {deepEqual( Stem("metric"), "metric");});
test("metru -> metru", function() {deepEqual( Stem("metru"), "metru");});
test("metrul -> metr", function() {deepEqual( Stem("metrul"), "metr");});
test("meu -> meu", function() {deepEqual( Stem("meu"), "meu");});
test("mi -> mi", function() {deepEqual( Stem("mi"), "mi");});
test("miaună -> miaun", function() {deepEqual( Stem("miaună"), "miaun");});
test("miazăzi -> miazăz", function() {deepEqual( Stem("miazăzi"), "miazăz");});
test("mic -> mic", function() {deepEqual( Stem("mic"), "mic");});
test("mica -> mic", function() {deepEqual( Stem("mica"), "mic");});
test("mică -> mic", function() {deepEqual( Stem("mică"), "mic");});
test("michelin -> michelin", function() {deepEqual( Stem("michelin"), "michelin");});
test("mici -> mic", function() {deepEqual( Stem("mici"), "mic");});
test("micii -> mic", function() {deepEqual( Stem("micii"), "mic");});
test("micile -> mic", function() {deepEqual( Stem("micile"), "mic");});
test("microbii -> microb", function() {deepEqual( Stem("microbii"), "microb");});
test("micron -> micron", function() {deepEqual( Stem("micron"), "micron");});
test("micronilor -> micron", function() {deepEqual( Stem("micronilor"), "micron");});
test("microprocesoare -> microprocesoar", function() {deepEqual( Stem("microprocesoare"), "microprocesoar");});
test("microprocesoarelor -> microprocesoar", function() {deepEqual( Stem("microprocesoarelor"), "microprocesoar");});
test("microprocesor -> microprocesor", function() {deepEqual( Stem("microprocesor"), "microprocesor");});
test("microscop -> microscop", function() {deepEqual( Stem("microscop"), "microscop");});
test("microscopic -> microscop", function() {deepEqual( Stem("microscopic"), "microscop");});
test("microsecundă -> microsecund", function() {deepEqual( Stem("microsecundă"), "microsecund");});
test("microsecunde -> microsecund", function() {deepEqual( Stem("microsecunde"), "microsecund");});
test("microsoft -> microsoft", function() {deepEqual( Stem("microsoft"), "microsoft");});
test("microstructura -> microstructur", function() {deepEqual( Stem("microstructura"), "microstructur");});
test("microunde -> micround", function() {deepEqual( Stem("microunde"), "micround");});
test("microuniversul -> microunivers", function() {deepEqual( Stem("microuniversul"), "microunivers");});
test("micşora -> micşor", function() {deepEqual( Stem("micşora"), "micşor");});
test("micşorată -> micşor", function() {deepEqual( Stem("micşorată"), "micşor");});
test("micşorează -> micşor", function() {deepEqual( Stem("micşorează"), "micşor");});
test("micşoreze -> micşor", function() {deepEqual( Stem("micşoreze"), "micşor");});
test("micşorînd -> micşorînd", function() {deepEqual( Stem("micşorînd"), "micşorînd");});
test("micul -> mic", function() {deepEqual( Stem("micul"), "mic");});
test("micului -> mic", function() {deepEqual( Stem("micului"), "mic");});
test("micuţ -> micuţ", function() {deepEqual( Stem("micuţ"), "micuţ");});
test("micuţa -> micuţ", function() {deepEqual( Stem("micuţa"), "micuţ");});
test("micuţă -> micuţ", function() {deepEqual( Stem("micuţă"), "micuţ");});
test("micuţii -> micuţ", function() {deepEqual( Stem("micuţii"), "micuţ");});
test("mie -> mie", function() {deepEqual( Stem("mie"), "mie");});
test("mielul -> miel", function() {deepEqual( Stem("mielul"), "miel");});
test("miercurea -> miercur", function() {deepEqual( Stem("miercurea"), "miercur");});
test("miercuri -> miercur", function() {deepEqual( Stem("miercuri"), "miercur");});
test("mieroase -> mieroas", function() {deepEqual( Stem("mieroase"), "mieroas");});
test("mieros -> mieros", function() {deepEqual( Stem("mieros"), "mieros");});
test("mieunat -> mieunat", function() {deepEqual( Stem("mieunat"), "mieunat");});
test("mieunând -> mieun", function() {deepEqual( Stem("mieunând"), "mieun");});
test("miez -> miez", function() {deepEqual( Stem("miez"), "miez");});
test("miezul -> miez", function() {deepEqual( Stem("miezul"), "miez");});
test("migală -> migal", function() {deepEqual( Stem("migală"), "migal");});
test("migăloşiei -> migăl", function() {deepEqual( Stem("migăloşiei"), "migăl");});
test("migdale -> migdal", function() {deepEqual( Stem("migdale"), "migdal");});
test("migdalei -> migdale", function() {deepEqual( Stem("migdalei"), "migdale");});
test("migrator -> migrat", function() {deepEqual( Stem("migrator"), "migrat");});
test("migraţie -> migr", function() {deepEqual( Stem("migraţie"), "migr");});
test("migrări -> migrăr", function() {deepEqual( Stem("migrări"), "migrăr");});
test("mihai -> miha", function() {deepEqual( Stem("mihai"), "miha");});
test("mii -> mii", function() {deepEqual( Stem("mii"), "mii");});
test("miile -> miil", function() {deepEqual( Stem("miile"), "miil");});
test("miilor -> miilor", function() {deepEqual( Stem("miilor"), "miilor");});
test("mijită -> mijit", function() {deepEqual( Stem("mijită"), "mijit");});
test("mijloace -> mijloac", function() {deepEqual( Stem("mijloace"), "mijloac");});
test("mijloacele -> mijloac", function() {deepEqual( Stem("mijloacele"), "mijloac");});
test("mijloacelor -> mijloac", function() {deepEqual( Stem("mijloacelor"), "mijloac");});
test("mijloc -> mijloc", function() {deepEqual( Stem("mijloc"), "mijloc");});
test("mijlocie -> mijloc", function() {deepEqual( Stem("mijlocie"), "mijloc");});
test("mijlocire -> mijloc", function() {deepEqual( Stem("mijlocire"), "mijloc");});
test("mijlocit -> mijloc", function() {deepEqual( Stem("mijlocit"), "mijloc");});
test("mijlociu -> mijlociu", function() {deepEqual( Stem("mijlociu"), "mijlociu");});
test("mijlocul -> mijloc", function() {deepEqual( Stem("mijlocul"), "mijloc");});
test("mila -> mil", function() {deepEqual( Stem("mila"), "mil");});
test("milă -> mil", function() {deepEqual( Stem("milă"), "mil");});
test("milet -> milet", function() {deepEqual( Stem("milet"), "milet");});
test("miliard -> miliard", function() {deepEqual( Stem("miliard"), "miliard");});
test("milimetri -> milimetr", function() {deepEqual( Stem("milimetri"), "milimetr");});
test("milioana -> milioan", function() {deepEqual( Stem("milioana"), "milioan");});
test("milioane -> milioan", function() {deepEqual( Stem("milioane"), "milioan");});
test("milioanelor -> milioan", function() {deepEqual( Stem("milioanelor"), "milioan");});
test("milion -> milion", function() {deepEqual( Stem("milion"), "milion");});
test("milionar -> milionar", function() {deepEqual( Stem("milionar"), "milionar");});
test("milionare -> milion", function() {deepEqual( Stem("milionare"), "milion");});
test("militant -> milit", function() {deepEqual( Stem("militant"), "milit");});
test("militar -> militar", function() {deepEqual( Stem("militar"), "militar");});
test("militară -> milit", function() {deepEqual( Stem("militară"), "milit");});
test("militare -> milit", function() {deepEqual( Stem("militare"), "milit");});
test("militari -> militar", function() {deepEqual( Stem("militari"), "militar");});
test("militarizării -> militarizăr", function() {deepEqual( Stem("militarizării"), "militarizăr");});
test("militarul -> militar", function() {deepEqual( Stem("militarul"), "militar");});
test("militărească -> milităr", function() {deepEqual( Stem("militărească"), "milităr");});
test("milităreşte -> milităr", function() {deepEqual( Stem("milităreşte"), "milităr");});
test("milităreşti -> milităr", function() {deepEqual( Stem("milităreşti"), "milităr");});
test("militărie -> milităr", function() {deepEqual( Stem("militărie"), "milităr");});
test("milităriei -> milităr", function() {deepEqual( Stem("milităriei"), "milităr");});
test("militez -> milit", function() {deepEqual( Stem("militez"), "milit");});
test("miliţiilor -> mil", function() {deepEqual( Stem("miliţiilor"), "mil");});
test("miloagă -> miloag", function() {deepEqual( Stem("miloagă"), "miloag");});
test("mimică -> mimic", function() {deepEqual( Stem("mimică"), "mimic");});
test("mina -> min", function() {deepEqual( Stem("mina"), "min");});
test("minat -> minat", function() {deepEqual( Stem("minat"), "minat");});
test("minate -> minat", function() {deepEqual( Stem("minate"), "minat");});
test("mină -> min", function() {deepEqual( Stem("mină"), "min");});
test("mincinoasă -> mincin", function() {deepEqual( Stem("mincinoasă"), "mincin");});
test("mincinoase -> mincin", function() {deepEqual( Stem("mincinoase"), "mincin");});
test("mincinos -> mincin", function() {deepEqual( Stem("mincinos"), "mincin");});
test("minciuna -> minciun", function() {deepEqual( Stem("minciuna"), "minciun");});
test("minciună -> minciun", function() {deepEqual( Stem("minciună"), "minciun");});
test("minciuni -> minciun", function() {deepEqual( Stem("minciuni"), "minciun");});
test("minciunile -> minciun", function() {deepEqual( Stem("minciunile"), "minciun");});
test("mine -> min", function() {deepEqual( Stem("mine"), "min");});
test("minge -> ming", function() {deepEqual( Stem("minge"), "ming");});
test("miniaturală -> miniatural", function() {deepEqual( Stem("miniaturală"), "miniatural");});
test("miniaturale -> miniatural", function() {deepEqual( Stem("miniaturale"), "miniatural");});
test("miniaturalul -> miniatural", function() {deepEqual( Stem("miniaturalul"), "miniatural");});
test("miniatură -> miniat", function() {deepEqual( Stem("miniatură"), "miniat");});
test("miniaturizarea -> miniaturiz", function() {deepEqual( Stem("miniaturizarea"), "miniaturiz");});
test("miniaturizat -> miniaturiz", function() {deepEqual( Stem("miniaturizat"), "miniaturiz");});
test("miniaturizării -> miniaturizăr", function() {deepEqual( Stem("miniaturizării"), "miniaturizăr");});
test("minicalculatoare -> minicalcul", function() {deepEqual( Stem("minicalculatoare"), "minicalcul");});
test("minicalculatoarelor -> minicalcul", function() {deepEqual( Stem("minicalculatoarelor"), "minicalcul");});
test("minier -> minier", function() {deepEqual( Stem("minier"), "minier");});
test("minieră -> minier", function() {deepEqual( Stem("minieră"), "minier");});
test("minim -> min", function() {deepEqual( Stem("minim"), "min");});
test("minima -> minim", function() {deepEqual( Stem("minima"), "minim");});
test("minimal -> minimal", function() {deepEqual( Stem("minimal"), "minimal");});
test("minimalismului -> minimalist", function() {deepEqual( Stem("minimalismului"), "minimalist");});
test("minimalist -> minimalist", function() {deepEqual( Stem("minimalist"), "minimalist");});
test("minimaliza -> minimaliz", function() {deepEqual( Stem("minimaliza"), "minimaliz");});
test("minimalizante -> minimaliz", function() {deepEqual( Stem("minimalizante"), "minimaliz");});
test("minimalizate -> minimaliz", function() {deepEqual( Stem("minimalizate"), "minimaliz");});
test("minimalizatoare -> minimaliz", function() {deepEqual( Stem("minimalizatoare"), "minimaliz");});
test("minimalizeze -> minimaliz", function() {deepEqual( Stem("minimalizeze"), "minimaliz");});
test("minimă -> minim", function() {deepEqual( Stem("minimă"), "minim");});
test("minime -> minim", function() {deepEqual( Stem("minime"), "minim");});
test("minimiza -> minimiz", function() {deepEqual( Stem("minimiza"), "minimiz");});
test("minimizat -> minimiz", function() {deepEqual( Stem("minimizat"), "minimiz");});
test("minimizată -> minimiz", function() {deepEqual( Stem("minimizată"), "minimiz");});
test("minimizaţi -> minimiz", function() {deepEqual( Stem("minimizaţi"), "minimiz");});
test("minimizăm -> minimiz", function() {deepEqual( Stem("minimizăm"), "minimiz");});
test("minimizează -> minimiz", function() {deepEqual( Stem("minimizează"), "minimiz");});
test("minimum -> minimum", function() {deepEqual( Stem("minimum"), "minimum");});
test("minister -> minister", function() {deepEqual( Stem("minister"), "minister");});
test("ministere -> minist", function() {deepEqual( Stem("ministere"), "minist");});
test("ministerelor -> minist", function() {deepEqual( Stem("ministerelor"), "minist");});
test("ministerial -> ministerial", function() {deepEqual( Stem("ministerial"), "ministerial");});
test("ministerială -> ministerial", function() {deepEqual( Stem("ministerială"), "ministerial");});
test("ministerul -> minister", function() {deepEqual( Stem("ministerul"), "minister");});
test("ministerului -> minister", function() {deepEqual( Stem("ministerului"), "minister");});
test("ministru -> ministru", function() {deepEqual( Stem("ministru"), "ministru");});
test("ministrul -> ministr", function() {deepEqual( Stem("ministrul"), "ministr");});
test("miniştri -> miniştr", function() {deepEqual( Stem("miniştri"), "miniştr");});
test("miniu -> miniu", function() {deepEqual( Stem("miniu"), "miniu");});
test("minkowski -> minkowsk", function() {deepEqual( Stem("minkowski"), "minkowsk");});
test("minor -> minor", function() {deepEqual( Stem("minor"), "minor");});
test("minoră -> minor", function() {deepEqual( Stem("minoră"), "minor");});
test("minore -> minor", function() {deepEqual( Stem("minore"), "minor");});
test("minoritar -> minoritar", function() {deepEqual( Stem("minoritar"), "minoritar");});
test("minoritară -> minorit", function() {deepEqual( Stem("minoritară"), "minorit");});
test("minoritate -> minor", function() {deepEqual( Stem("minoritate"), "minor");});
test("minorităţi -> minor", function() {deepEqual( Stem("minorităţi"), "minor");});
test("minovici -> minov", function() {deepEqual( Stem("minovici"), "minov");});
test("mint -> mint", function() {deepEqual( Stem("mint"), "mint");});
test("mintal -> mintal", function() {deepEqual( Stem("mintal"), "mintal");});
test("mintală -> mintal", function() {deepEqual( Stem("mintală"), "mintal");});
test("mintale -> mintal", function() {deepEqual( Stem("mintale"), "mintal");});
test("mintă -> mint", function() {deepEqual( Stem("mintă"), "mint");});
test("minte -> mint", function() {deepEqual( Stem("minte"), "mint");});
test("mintea -> mint", function() {deepEqual( Stem("mintea"), "mint");});
test("mintenaş -> mintenaş", function() {deepEqual( Stem("mintenaş"), "mintenaş");});
test("minţeam -> minţ", function() {deepEqual( Stem("minţeam"), "minţ");});
test("minţi -> minţ", function() {deepEqual( Stem("minţi"), "minţ");});
test("minţii -> minţ", function() {deepEqual( Stem("minţii"), "minţ");});
test("minţile -> minţ", function() {deepEqual( Stem("minţile"), "minţ");});
test("minţim -> minţ", function() {deepEqual( Stem("minţim"), "minţ");});
test("minţind -> minţ", function() {deepEqual( Stem("minţind"), "minţ");});
test("minţisem -> minţ", function() {deepEqual( Stem("minţisem"), "minţ");});
test("minţiseră -> minţ", function() {deepEqual( Stem("minţiseră"), "minţ");});
test("minţit -> minţit", function() {deepEqual( Stem("minţit"), "minţit");});
test("minţită -> minţit", function() {deepEqual( Stem("minţită"), "minţit");});
test("minunat -> minun", function() {deepEqual( Stem("minunat"), "minun");});
test("minunată -> minun", function() {deepEqual( Stem("minunată"), "minun");});
test("minunate -> minun", function() {deepEqual( Stem("minunate"), "minun");});
test("minune -> minun", function() {deepEqual( Stem("minune"), "minun");});
test("minunea -> minun", function() {deepEqual( Stem("minunea"), "minun");});
test("minunează -> minun", function() {deepEqual( Stem("minunează"), "minun");});
test("minuni -> minun", function() {deepEqual( Stem("minuni"), "minun");});
test("minunile -> minun", function() {deepEqual( Stem("minunile"), "minun");});
test("minunilor -> minun", function() {deepEqual( Stem("minunilor"), "minun");});
test("minuscule -> minuscul", function() {deepEqual( Stem("minuscule"), "minuscul");});
test("minut -> minut", function() {deepEqual( Stem("minut"), "minut");});
test("minute -> minut", function() {deepEqual( Stem("minute"), "minut");});
test("minuţioşi -> minuţ", function() {deepEqual( Stem("minuţioşi"), "minuţ");});
test("minuţiozitate -> minuţioz", function() {deepEqual( Stem("minuţiozitate"), "minuţioz");});
test("mioapă -> mioap", function() {deepEqual( Stem("mioapă"), "mioap");});
test("mioară -> mioar", function() {deepEqual( Stem("mioară"), "mioar");});
test("miop -> miop", function() {deepEqual( Stem("miop"), "miop");});
test("miopia -> miop", function() {deepEqual( Stem("miopia"), "miop");});
test("mioritică -> miorit", function() {deepEqual( Stem("mioritică"), "miorit");});
test("mioritice -> miorit", function() {deepEqual( Stem("mioritice"), "miorit");});
test("mioriţa -> mioriţ", function() {deepEqual( Stem("mioriţa"), "mioriţ");});
test("miorlăie -> miorlăi", function() {deepEqual( Stem("miorlăie"), "miorlăi");});
test("miorlăitul -> miorlăit", function() {deepEqual( Stem("miorlăitul"), "miorlăit");});
test("miorlăiturile -> miorlăitur", function() {deepEqual( Stem("miorlăiturile"), "miorlăitur");});
test("mira -> mir", function() {deepEqual( Stem("mira"), "mir");});
test("mirabil -> mirabil", function() {deepEqual( Stem("mirabil"), "mirabil");});
test("miracol -> miracol", function() {deepEqual( Stem("miracol"), "miracol");});
test("miracolul -> miracol", function() {deepEqual( Stem("miracolul"), "miracol");});
test("miracolului -> miracol", function() {deepEqual( Stem("miracolului"), "miracol");});
test("miracule -> miracul", function() {deepEqual( Stem("miracule"), "miracul");});
test("miraculoasă -> miracul", function() {deepEqual( Stem("miraculoasă"), "miracul");});
test("miraculoase -> miracul", function() {deepEqual( Stem("miraculoase"), "miracul");});
test("miraculos -> miracul", function() {deepEqual( Stem("miraculos"), "miracul");});
test("miraj -> miraj", function() {deepEqual( Stem("miraj"), "miraj");});
test("miram -> miram", function() {deepEqual( Stem("miram"), "miram");});
test("mirare -> mirar", function() {deepEqual( Stem("mirare"), "mirar");});
test("mirarea -> mirar", function() {deepEqual( Stem("mirarea"), "mirar");});
test("mirase -> miras", function() {deepEqual( Stem("mirase"), "miras");});
test("mirat -> mirat", function() {deepEqual( Stem("mirat"), "mirat");});
test("mirată -> mirat", function() {deepEqual( Stem("mirată"), "mirat");});
test("miraţi -> mir", function() {deepEqual( Stem("miraţi"), "mir");});
test("miră -> mir", function() {deepEqual( Stem("miră"), "mir");});
test("mirăm -> mir", function() {deepEqual( Stem("mirăm"), "mir");});
test("mircea -> mirc", function() {deepEqual( Stem("mircea"), "mirc");});
test("mireasă -> mireas", function() {deepEqual( Stem("mireasă"), "mireas");});
test("mireasmă -> mireasm", function() {deepEqual( Stem("mireasmă"), "mireasm");});
test("miresei -> mir", function() {deepEqual( Stem("miresei"), "mir");});
test("miresele -> mir", function() {deepEqual( Stem("miresele"), "mir");});
test("miresmat -> miresm", function() {deepEqual( Stem("miresmat"), "miresm");});
test("miresmele -> miresm", function() {deepEqual( Stem("miresmele"), "miresm");});
test("miriapod -> miriapod", function() {deepEqual( Stem("miriapod"), "miriapod");});
test("mirific -> mirif", function() {deepEqual( Stem("mirific"), "mirif");});
test("mirifică -> mirif", function() {deepEqual( Stem("mirifică"), "mirif");});
test("miriştii -> mirişt", function() {deepEqual( Stem("miriştii"), "mirişt");});
test("miroasă -> miroas", function() {deepEqual( Stem("miroasă"), "miroas");});
test("miroase -> miroas", function() {deepEqual( Stem("miroase"), "miroas");});
test("miros -> miros", function() {deepEqual( Stem("miros"), "miros");});
test("mirosind -> miros", function() {deepEqual( Stem("mirosind"), "miros");});
test("mirosit -> miros", function() {deepEqual( Stem("mirosit"), "miros");});
test("mirosul -> miros", function() {deepEqual( Stem("mirosul"), "miros");});
test("mirosului -> miros", function() {deepEqual( Stem("mirosului"), "miros");});
test("mirosuri -> mirosur", function() {deepEqual( Stem("mirosuri"), "mirosur");});
test("misiunile -> misiun", function() {deepEqual( Stem("misiunile"), "misiun");});
test("mister -> mister", function() {deepEqual( Stem("mister"), "mister");});
test("misterioasă -> mister", function() {deepEqual( Stem("misterioasă"), "mister");});
test("misterioase -> mister", function() {deepEqual( Stem("misterioase"), "mister");});
test("misterios -> mister", function() {deepEqual( Stem("misterios"), "mister");});
test("misterul -> mister", function() {deepEqual( Stem("misterul"), "mister");});
test("mistic -> mistic", function() {deepEqual( Stem("mistic"), "mistic");});
test("mistică -> mistic", function() {deepEqual( Stem("mistică"), "mistic");});
test("mistice -> mistic", function() {deepEqual( Stem("mistice"), "mistic");});
test("misticismul -> misticist", function() {deepEqual( Stem("misticismul"), "misticist");});
test("mistuindu -> mistu", function() {deepEqual( Stem("mistuindu"), "mistu");});
test("mistuire -> mistu", function() {deepEqual( Stem("mistuire"), "mistu");});
test("mistuitoare -> mistuit", function() {deepEqual( Stem("mistuitoare"), "mistuit");});
test("mistuitoarea -> mistuit", function() {deepEqual( Stem("mistuitoarea"), "mistuit");});
test("mistuitor -> mistuit", function() {deepEqual( Stem("mistuitor"), "mistuit");});
test("mişc -> mişc", function() {deepEqual( Stem("mişc"), "mişc");});
test("mişca -> mişc", function() {deepEqual( Stem("mişca"), "mişc");});
test("mişcare -> mişc", function() {deepEqual( Stem("mişcare"), "mişc");});
test("mişcarea -> mişc", function() {deepEqual( Stem("mişcarea"), "mişc");});
test("mişcat -> mişcat", function() {deepEqual( Stem("mişcat"), "mişcat");});
test("mişcau -> mişc", function() {deepEqual( Stem("mişcau"), "mişc");});
test("mişcă -> mişc", function() {deepEqual( Stem("mişcă"), "mişc");});
test("mişcăm -> mişc", function() {deepEqual( Stem("mişcăm"), "mişc");});
test("mişcări -> mişcăr", function() {deepEqual( Stem("mişcări"), "mişcăr");});
test("mişcării -> mişcăr", function() {deepEqual( Stem("mişcării"), "mişcăr");});
test("mişcările -> mişcăr", function() {deepEqual( Stem("mişcările"), "mişcăr");});
test("mişcărilor -> mişcăr", function() {deepEqual( Stem("mişcărilor"), "mişcăr");});
test("mişoiu -> mişoiu", function() {deepEqual( Stem("mişoiu"), "mişoiu");});
test("mişte -> mişt", function() {deepEqual( Stem("mişte"), "mişt");});
test("mişună -> mişun", function() {deepEqual( Stem("mişună"), "mişun");});
test("mişune -> mişun", function() {deepEqual( Stem("mişune"), "mişun");});
test("mitică -> mitic", function() {deepEqual( Stem("mitică"), "mitic");});
test("miticismele -> miticist", function() {deepEqual( Stem("miticismele"), "miticist");});
test("mitingurile -> mitingur", function() {deepEqual( Stem("mitingurile"), "mitingur");});
test("mitocan -> mitocan", function() {deepEqual( Stem("mitocan"), "mitocan");});
test("mitocănos -> mitocăn", function() {deepEqual( Stem("mitocănos"), "mitocăn");});
test("mitologie -> mitolog", function() {deepEqual( Stem("mitologie"), "mitolog");});
test("mitologiei -> mitolog", function() {deepEqual( Stem("mitologiei"), "mitolog");});
test("mitraliera -> mitralier", function() {deepEqual( Stem("mitraliera"), "mitralier");});
test("mitralieră -> mitralier", function() {deepEqual( Stem("mitralieră"), "mitralier");});
test("mitraliere -> mitralier", function() {deepEqual( Stem("mitraliere"), "mitralier");});
test("mitralierei -> mitraliere", function() {deepEqual( Stem("mitralierei"), "mitraliere");});
test("mitralierele -> mitralier", function() {deepEqual( Stem("mitralierele"), "mitralier");});
test("mitralierelor -> mitralier", function() {deepEqual( Stem("mitralierelor"), "mitralier");});
test("mitralii -> mitral", function() {deepEqual( Stem("mitralii"), "mitral");});
test("mizează -> mizeaz", function() {deepEqual( Stem("mizează"), "mizeaz");});
test("mizerabil -> mizer", function() {deepEqual( Stem("mizerabil"), "mizer");});
test("mizerabilă -> mizer", function() {deepEqual( Stem("mizerabilă"), "mizer");});
test("mizerabile -> mizer", function() {deepEqual( Stem("mizerabile"), "mizer");});
test("mizeria -> mizer", function() {deepEqual( Stem("mizeria"), "mizer");});
test("mizerie -> mizer", function() {deepEqual( Stem("mizerie"), "mizer");});
test("mizeriei -> mizer", function() {deepEqual( Stem("mizeriei"), "mizer");});
test("mizerii -> mizer", function() {deepEqual( Stem("mizerii"), "mizer");});
test("mizeriile -> mizer", function() {deepEqual( Stem("mizeriile"), "mizer");});
test("mînios -> mînios", function() {deepEqual( Stem("mînios"), "mînios");});
test("mînji -> mînj", function() {deepEqual( Stem("mînji"), "mînj");});
test("mîntuire -> mîntu", function() {deepEqual( Stem("mîntuire"), "mîntu");});
test("mîntuirii -> mîntuir", function() {deepEqual( Stem("mîntuirii"), "mîntuir");});
test("mîrîia -> mîrîi", function() {deepEqual( Stem("mîrîia"), "mîrîi");});
test("mlaştină -> mlaştin", function() {deepEqual( Stem("mlaştină"), "mlaştin");});
test("mlădioasă -> mlădioas", function() {deepEqual( Stem("mlădioasă"), "mlădioas");});
test("mmda -> mmda", function() {deepEqual( Stem("mmda"), "mmda");});
test("moale -> moal", function() {deepEqual( Stem("moale"), "moal");});
test("moalele -> moal", function() {deepEqual( Stem("moalele"), "moal");});
test("moara -> moar", function() {deepEqual( Stem("moara"), "moar");});
test("moară -> moar", function() {deepEqual( Stem("moară"), "moar");});
test("moare -> moar", function() {deepEqual( Stem("moare"), "moar");});
test("moartă -> moart", function() {deepEqual( Stem("moartă"), "moart");});
test("moarte -> moart", function() {deepEqual( Stem("moarte"), "moart");});
test("moartea -> moart", function() {deepEqual( Stem("moartea"), "moart");});
test("moaşei -> moaşe", function() {deepEqual( Stem("moaşei"), "moaşe");});
test("mobil -> mobil", function() {deepEqual( Stem("mobil"), "mobil");});
test("mobila -> mobil", function() {deepEqual( Stem("mobila"), "mobil");});
test("mobilasem -> mobil", function() {deepEqual( Stem("mobilasem"), "mobil");});
test("mobilitate -> mobil", function() {deepEqual( Stem("mobilitate"), "mobil");});
test("mobilitatea -> mobil", function() {deepEqual( Stem("mobilitatea"), "mobil");});
test("mobilizare -> mobiliz", function() {deepEqual( Stem("mobilizare"), "mobiliz");});
test("mobilizat -> mobiliz", function() {deepEqual( Stem("mobilizat"), "mobiliz");});
test("mobilul -> mobil", function() {deepEqual( Stem("mobilul"), "mobil");});
test("mobilului -> mobil", function() {deepEqual( Stem("mobilului"), "mobil");});
test("mocirlă -> mocirl", function() {deepEqual( Stem("mocirlă"), "mocirl");});
test("mocirloasă -> mocirl", function() {deepEqual( Stem("mocirloasă"), "mocirl");});
test("mocirlos -> mocirl", function() {deepEqual( Stem("mocirlos"), "mocirl");});
test("mocnisem -> mocn", function() {deepEqual( Stem("mocnisem"), "mocn");});
test("mod -> mod", function() {deepEqual( Stem("mod"), "mod");});
test("modalităţile -> modal", function() {deepEqual( Stem("modalităţile"), "modal");});
test("modă -> mod", function() {deepEqual( Stem("modă"), "mod");});
test("mode -> mod", function() {deepEqual( Stem("mode"), "mod");});
test("modei -> mode", function() {deepEqual( Stem("modei"), "mode");});
test("model -> model", function() {deepEqual( Stem("model"), "model");});
test("modela -> model", function() {deepEqual( Stem("modela"), "model");});
test("modelator -> model", function() {deepEqual( Stem("modelator"), "model");});
test("modele -> mod", function() {deepEqual( Stem("modele"), "mod");});
test("modelează -> model", function() {deepEqual( Stem("modelează"), "model");});
test("modelele -> model", function() {deepEqual( Stem("modelele"), "model");});
test("modelelor -> model", function() {deepEqual( Stem("modelelor"), "model");});
test("modeleze -> model", function() {deepEqual( Stem("modeleze"), "model");});
test("modelul -> model", function() {deepEqual( Stem("modelul"), "model");});
test("modem -> mod", function() {deepEqual( Stem("modem"), "mod");});
test("moderat -> moder", function() {deepEqual( Stem("moderat"), "moder");});
test("moderată -> moder", function() {deepEqual( Stem("moderată"), "moder");});
test("moderate -> moder", function() {deepEqual( Stem("moderate"), "moder");});
test("moderator -> moder", function() {deepEqual( Stem("moderator"), "moder");});
test("moderaţi -> moder", function() {deepEqual( Stem("moderaţi"), "moder");});
test("moderaţie -> moder", function() {deepEqual( Stem("moderaţie"), "moder");});
test("moderează -> moder", function() {deepEqual( Stem("moderează"), "moder");});
test("modern -> modern", function() {deepEqual( Stem("modern"), "modern");});
test("modernă -> modern", function() {deepEqual( Stem("modernă"), "modern");});
test("moderne -> modern", function() {deepEqual( Stem("moderne"), "modern");});
test("modernii -> modern", function() {deepEqual( Stem("modernii"), "modern");});
test("modernism -> modernist", function() {deepEqual( Stem("modernism"), "modernist");});
test("modernismul -> modernist", function() {deepEqual( Stem("modernismul"), "modernist");});
test("modernist -> modernist", function() {deepEqual( Stem("modernist"), "modernist");});
test("modernistă -> modernist", function() {deepEqual( Stem("modernistă"), "modernist");});
test("moderniştilor -> modernist", function() {deepEqual( Stem("moderniştilor"), "modernist");});
test("modernitate -> modern", function() {deepEqual( Stem("modernitate"), "modern");});
test("modernitatea -> modern", function() {deepEqual( Stem("modernitatea"), "modern");});
test("modernităţii -> modern", function() {deepEqual( Stem("modernităţii"), "modern");});
test("moderniza -> moderniz", function() {deepEqual( Stem("moderniza"), "moderniz");});
test("modernizant -> moderniz", function() {deepEqual( Stem("modernizant"), "moderniz");});
test("modernizare -> moderniz", function() {deepEqual( Stem("modernizare"), "moderniz");});
test("modernizator -> moderniz", function() {deepEqual( Stem("modernizator"), "moderniz");});
test("modernizării -> modernizăr", function() {deepEqual( Stem("modernizării"), "modernizăr");});
test("modernizeze -> moderniz", function() {deepEqual( Stem("modernizeze"), "moderniz");});
test("modest -> modest", function() {deepEqual( Stem("modest"), "modest");});
test("modestă -> modest", function() {deepEqual( Stem("modestă"), "modest");});
test("modeste -> modest", function() {deepEqual( Stem("modeste"), "modest");});
test("modestelor -> modest", function() {deepEqual( Stem("modestelor"), "modest");});
test("modestia -> modest", function() {deepEqual( Stem("modestia"), "modest");});
test("modeşti -> modeşt", function() {deepEqual( Stem("modeşti"), "modeşt");});
test("modice -> modic", function() {deepEqual( Stem("modice"), "modic");});
test("modific -> modif", function() {deepEqual( Stem("modific"), "modif");});
test("modifica -> modif", function() {deepEqual( Stem("modifica"), "modif");});
test("modificabilă -> modific", function() {deepEqual( Stem("modificabilă"), "modific");});
test("modificare -> modific", function() {deepEqual( Stem("modificare"), "modific");});
test("modificarea -> modific", function() {deepEqual( Stem("modificarea"), "modific");});
test("modificat -> modific", function() {deepEqual( Stem("modificat"), "modific");});
test("modificată -> modific", function() {deepEqual( Stem("modificată"), "modific");});
test("modificate -> modific", function() {deepEqual( Stem("modificate"), "modific");});
test("modificatoare -> modific", function() {deepEqual( Stem("modificatoare"), "modific");});
test("modificatorul -> modif", function() {deepEqual( Stem("modificatorul"), "modif");});
test("modificaţi -> modific", function() {deepEqual( Stem("modificaţi"), "modific");});
test("modifică -> modif", function() {deepEqual( Stem("modifică"), "modif");});
test("modificăm -> modific", function() {deepEqual( Stem("modificăm"), "modific");});
test("modificări -> modificăr", function() {deepEqual( Stem("modificări"), "modificăr");});
test("modificările -> modificăr", function() {deepEqual( Stem("modificările"), "modificăr");});
test("modifice -> modif", function() {deepEqual( Stem("modifice"), "modif");});
test("modificînd -> modificînd", function() {deepEqual( Stem("modificînd"), "modificînd");});
test("modistă -> modist", function() {deepEqual( Stem("modistă"), "modist");});
test("modo -> modo", function() {deepEqual( Stem("modo"), "modo");});
test("modul -> mod", function() {deepEqual( Stem("modul"), "mod");});
test("modular -> modular", function() {deepEqual( Stem("modular"), "modular");});
test("modulară -> modul", function() {deepEqual( Stem("modulară"), "modul");});
test("modulare -> modul", function() {deepEqual( Stem("modulare"), "modul");});
test("modularitate -> modular", function() {deepEqual( Stem("modularitate"), "modular");});
test("modularităţii -> modular", function() {deepEqual( Stem("modularităţii"), "modular");});
test("modulat -> modul", function() {deepEqual( Stem("modulat"), "modul");});
test("modulată -> modul", function() {deepEqual( Stem("modulată"), "modul");});
test("module -> modul", function() {deepEqual( Stem("module"), "modul");});
test("modulelor -> modul", function() {deepEqual( Stem("modulelor"), "modul");});
test("modulii -> modul", function() {deepEqual( Stem("modulii"), "modul");});
test("modulo -> modulo", function() {deepEqual( Stem("modulo"), "modulo");});
test("moduri -> modur", function() {deepEqual( Stem("moduri"), "modur");});
test("moft -> moft", function() {deepEqual( Stem("moft"), "moft");});
test("moftul -> moft", function() {deepEqual( Stem("moftul"), "moft");});
test("mofturi -> moftur", function() {deepEqual( Stem("mofturi"), "moftur");});
test("mofturile -> moftur", function() {deepEqual( Stem("mofturile"), "moftur");});
test("mofturoase -> moftur", function() {deepEqual( Stem("mofturoase"), "moftur");});
test("mofturos -> moftur", function() {deepEqual( Stem("mofturos"), "moftur");});
test("mogâldeţe -> mogâldeţ", function() {deepEqual( Stem("mogâldeţe"), "mogâldeţ");});
test("mohorâtă -> mohorât", function() {deepEqual( Stem("mohorâtă"), "mohorât");});
test("mohrat -> mohrat", function() {deepEqual( Stem("mohrat"), "mohrat");});
test("moi -> moi", function() {deepEqual( Stem("moi"), "moi");});
test("moissan -> moissan", function() {deepEqual( Stem("moissan"), "moissan");});
test("molatic -> molat", function() {deepEqual( Stem("molatic"), "molat");});
test("molatică -> molat", function() {deepEqual( Stem("molatică"), "molat");});
test("molatici -> molat", function() {deepEqual( Stem("molatici"), "molat");});
test("molcome -> molcom", function() {deepEqual( Stem("molcome"), "molcom");});
test("moldova -> moldov", function() {deepEqual( Stem("moldova"), "moldov");});
test("moldoveanul -> moldovean", function() {deepEqual( Stem("moldoveanul"), "moldovean");});
test("moldovei -> moldove", function() {deepEqual( Stem("moldovei"), "moldove");});
test("moldovenească -> moldoven", function() {deepEqual( Stem("moldovenească"), "moldoven");});
test("moldovenilor -> moldoven", function() {deepEqual( Stem("moldovenilor"), "moldoven");});
test("moles -> moles", function() {deepEqual( Stem("moles"), "moles");});
test("moletiere -> moletier", function() {deepEqual( Stem("moletiere"), "moletier");});
test("moletierele -> moletier", function() {deepEqual( Stem("moletierele"), "moletier");});
test("molifţi -> molifţ", function() {deepEqual( Stem("molifţi"), "molifţ");});
test("molimilor -> molim", function() {deepEqual( Stem("molimilor"), "molim");});
test("molipsitoare -> molips", function() {deepEqual( Stem("molipsitoare"), "molips");});
test("momeala -> momeal", function() {deepEqual( Stem("momeala"), "momeal");});
test("momene -> momen", function() {deepEqual( Stem("momene"), "momen");});
test("moment -> moment", function() {deepEqual( Stem("moment"), "moment");});
test("momentana -> momentan", function() {deepEqual( Stem("momentana"), "momentan");});
test("momente -> moment", function() {deepEqual( Stem("momente"), "moment");});
test("momentele -> moment", function() {deepEqual( Stem("momentele"), "moment");});
test("momentelor -> moment", function() {deepEqual( Stem("momentelor"), "moment");});
test("momentul -> moment", function() {deepEqual( Stem("momentul"), "moment");});
test("momentului -> moment", function() {deepEqual( Stem("momentului"), "moment");});
test("mona -> mon", function() {deepEqual( Stem("mona"), "mon");});
test("monadelor -> monad", function() {deepEqual( Stem("monadelor"), "monad");});
test("monarchen -> monarchen", function() {deepEqual( Stem("monarchen"), "monarchen");});
test("monarhiei -> monarh", function() {deepEqual( Stem("monarhiei"), "monarh");});
test("monarhismul -> monarhist", function() {deepEqual( Stem("monarhismul"), "monarhist");});
test("monde -> mond", function() {deepEqual( Stem("monde"), "mond");});
test("monden -> monden", function() {deepEqual( Stem("monden"), "monden");});
test("mondenă -> monden", function() {deepEqual( Stem("mondenă"), "monden");});
test("mondene -> monden", function() {deepEqual( Stem("mondene"), "monden");});
test("mondeni -> monden", function() {deepEqual( Stem("mondeni"), "monden");});
test("mondenităţi -> monden", function() {deepEqual( Stem("mondenităţi"), "monden");});
test("mondială -> mondial", function() {deepEqual( Stem("mondială"), "mondial");});
test("mondirului -> mondir", function() {deepEqual( Stem("mondirului"), "mondir");});
test("monedă -> moned", function() {deepEqual( Stem("monedă"), "moned");});
test("monede -> moned", function() {deepEqual( Stem("monede"), "moned");});
test("monetă -> monet", function() {deepEqual( Stem("monetă"), "monet");});
test("mongolii -> mongol", function() {deepEqual( Stem("mongolii"), "mongol");});
test("monoclu -> monoclu", function() {deepEqual( Stem("monoclu"), "monoclu");});
test("monogenetic -> monogenet", function() {deepEqual( Stem("monogenetic"), "monogenet");});
test("monogenie -> monogen", function() {deepEqual( Stem("monogenie"), "monogen");});
test("monografice -> monograf", function() {deepEqual( Stem("monografice"), "monograf");});
test("monograma -> monogram", function() {deepEqual( Stem("monograma"), "monogram");});
test("monoideism -> monoideist", function() {deepEqual( Stem("monoideism"), "monoideist");});
test("monolit -> monol", function() {deepEqual( Stem("monolit"), "monol");});
test("monolitic -> monolit", function() {deepEqual( Stem("monolitic"), "monolit");});
test("monolitică -> monolit", function() {deepEqual( Stem("monolitică"), "monolit");});
test("monoliţi -> monol", function() {deepEqual( Stem("monoliţi"), "monol");});
test("monolog -> monolog", function() {deepEqual( Stem("monolog"), "monolog");});
test("monologal -> monologal", function() {deepEqual( Stem("monologal"), "monologal");});
test("monologurile -> monologur", function() {deepEqual( Stem("monologurile"), "monologur");});
test("monoman -> monoman", function() {deepEqual( Stem("monoman"), "monoman");});
test("monongahela -> monongahel", function() {deepEqual( Stem("monongahela"), "monongahel");});
test("monopol -> monopol", function() {deepEqual( Stem("monopol"), "monopol");});
test("monopolist -> monopolist", function() {deepEqual( Stem("monopolist"), "monopolist");});
test("monopoliza -> monopoliz", function() {deepEqual( Stem("monopoliza"), "monopoliz");});
test("monopolizat -> monopoliz", function() {deepEqual( Stem("monopolizat"), "monopoliz");});
test("monopolizeze -> monopoliz", function() {deepEqual( Stem("monopolizeze"), "monopoliz");});
test("monopolurilor -> monopolur", function() {deepEqual( Stem("monopolurilor"), "monopolur");});
test("monoteismul -> monoteist", function() {deepEqual( Stem("monoteismul"), "monoteist");});
test("monoton -> monoton", function() {deepEqual( Stem("monoton"), "monoton");});
test("monotonă -> monoton", function() {deepEqual( Stem("monotonă"), "monoton");});
test("monotonie -> monoton", function() {deepEqual( Stem("monotonie"), "monoton");});
test("monstru -> monstru", function() {deepEqual( Stem("monstru"), "monstru");});
test("monstrul -> monstr", function() {deepEqual( Stem("monstrul"), "monstr");});
test("monstruoasă -> monstruoas", function() {deepEqual( Stem("monstruoasă"), "monstruoas");});
test("monstruoase -> monstruoas", function() {deepEqual( Stem("monstruoase"), "monstruoas");});
test("monstruos -> monstruos", function() {deepEqual( Stem("monstruos"), "monstruos");});
test("monstruozitate -> monstruoz", function() {deepEqual( Stem("monstruozitate"), "monstruoz");});
test("monstruozităţi -> monstruoz", function() {deepEqual( Stem("monstruozităţi"), "monstruoz");});
test("monştri -> monştr", function() {deepEqual( Stem("monştri"), "monştr");});
test("monta -> mont", function() {deepEqual( Stem("monta"), "mont");});
test("montaigne -> montaign", function() {deepEqual( Stem("montaigne"), "montaign");});
test("montaje -> montaj", function() {deepEqual( Stem("montaje"), "montaj");});
test("montajului -> montaj", function() {deepEqual( Stem("montajului"), "montaj");});
test("montană -> montan", function() {deepEqual( Stem("montană"), "montan");});
test("monumentale -> monumental", function() {deepEqual( Stem("monumentale"), "monumental");});
test("monumente -> monument", function() {deepEqual( Stem("monumente"), "monument");});
test("monumentului -> monument", function() {deepEqual( Stem("monumentului"), "monument");});
test("mor -> mor", function() {deepEqual( Stem("mor"), "mor");});
test("moral -> moral", function() {deepEqual( Stem("moral"), "moral");});
test("morala -> moral", function() {deepEqual( Stem("morala"), "moral");});
test("morală -> moral", function() {deepEqual( Stem("morală"), "moral");});
test("morale -> moral", function() {deepEqual( Stem("morale"), "moral");});
test("moralistice -> moralist", function() {deepEqual( Stem("moralistice"), "moralist");});
test("moralizeze -> moraliz", function() {deepEqual( Stem("moralizeze"), "moraliz");});
test("moralmente -> moralment", function() {deepEqual( Stem("moralmente"), "moralment");});
test("moralo -> moralo", function() {deepEqual( Stem("moralo"), "moralo");});
test("morarul -> morar", function() {deepEqual( Stem("morarul"), "morar");});
test("morav -> morav", function() {deepEqual( Stem("morav"), "morav");});
test("moravurile -> moravur", function() {deepEqual( Stem("moravurile"), "moravur");});
test("morcovi -> morcov", function() {deepEqual( Stem("morcovi"), "morcov");});
test("mord -> mord", function() {deepEqual( Stem("mord"), "mord");});
test("morfeu -> morfeu", function() {deepEqual( Stem("morfeu"), "morfeu");});
test("morfina -> morfin", function() {deepEqual( Stem("morfina"), "morfin");});
test("morga -> morg", function() {deepEqual( Stem("morga"), "morg");});
test("morgă -> morg", function() {deepEqual( Stem("morgă"), "morg");});
test("mori -> mor", function() {deepEqual( Stem("mori"), "mor");});
test("morile -> mor", function() {deepEqual( Stem("morile"), "mor");});
test("morişcă -> morişc", function() {deepEqual( Stem("morişcă"), "morişc");});
test("mormane -> morman", function() {deepEqual( Stem("mormane"), "morman");});
test("mormânt -> mormânt", function() {deepEqual( Stem("mormânt"), "mormânt");});
test("mormăie -> mormăi", function() {deepEqual( Stem("mormăie"), "mormăi");});
test("morminte -> mormint", function() {deepEqual( Stem("morminte"), "mormint");});
test("mort -> mort", function() {deepEqual( Stem("mort"), "mort");});
test("mortal -> mortal", function() {deepEqual( Stem("mortal"), "mortal");});
test("mortală -> mortal", function() {deepEqual( Stem("mortală"), "mortal");});
test("mortăciuni -> mortăciun", function() {deepEqual( Stem("mortăciuni"), "mortăciun");});
test("morthomme -> morthomm", function() {deepEqual( Stem("morthomme"), "morthomm");});
test("mortului -> mort", function() {deepEqual( Stem("mortului"), "mort");});
test("morţi -> morţ", function() {deepEqual( Stem("morţi"), "morţ");});
test("morţii -> morţ", function() {deepEqual( Stem("morţii"), "morţ");});
test("morţilor -> morţ", function() {deepEqual( Stem("morţilor"), "morţ");});
test("morţiş -> morţiş", function() {deepEqual( Stem("morţiş"), "morţiş");});
test("moschee -> mosche", function() {deepEqual( Stem("moschee"), "mosche");});
test("mosoare -> mosoar", function() {deepEqual( Stem("mosoare"), "mosoar");});
test("moşească -> moşeasc", function() {deepEqual( Stem("moşească"), "moşeasc");});
test("moşi -> moş", function() {deepEqual( Stem("moşi"), "moş");});
test("moşie -> moş", function() {deepEqual( Stem("moşie"), "moş");});
test("moşieri -> moşier", function() {deepEqual( Stem("moşieri"), "moşier");});
test("moşioară -> moşioar", function() {deepEqual( Stem("moşioară"), "moşioar");});
test("moşneag -> moşneag", function() {deepEqual( Stem("moşneag"), "moşneag");});
test("moştenire -> moşten", function() {deepEqual( Stem("moştenire"), "moşten");});
test("moştenirea -> moşten", function() {deepEqual( Stem("moştenirea"), "moşten");});
test("moştenirii -> moştenir", function() {deepEqual( Stem("moştenirii"), "moştenir");});
test("moştenirile -> moştenir", function() {deepEqual( Stem("moştenirile"), "moştenir");});
test("moştenit -> moşten", function() {deepEqual( Stem("moştenit"), "moşten");});
test("moştenitoarea -> moşten", function() {deepEqual( Stem("moştenitoarea"), "moşten");});
test("moştenitori -> moşten", function() {deepEqual( Stem("moştenitori"), "moşten");});
test("motiv -> motiv", function() {deepEqual( Stem("motiv"), "motiv");});
test("motive -> motiv", function() {deepEqual( Stem("motive"), "motiv");});
test("motivele -> motiv", function() {deepEqual( Stem("motivele"), "motiv");});
test("motivul -> motiv", function() {deepEqual( Stem("motivul"), "motiv");});
test("motoarele -> motoar", function() {deepEqual( Stem("motoarele"), "motoar");});
test("motocicletă -> motociclet", function() {deepEqual( Stem("motocicletă"), "motociclet");});
test("motor -> motor", function() {deepEqual( Stem("motor"), "motor");});
test("motorul -> motor", function() {deepEqual( Stem("motorul"), "motor");});
test("mototolit -> mototol", function() {deepEqual( Stem("mototolit"), "mototol");});
test("mototolită -> mototol", function() {deepEqual( Stem("mototolită"), "mototol");});
test("mototolite -> mototol", function() {deepEqual( Stem("mototolite"), "mototol");});
test("motru -> motru", function() {deepEqual( Stem("motru"), "motru");});
test("moţ -> moţ", function() {deepEqual( Stem("moţ"), "moţ");});
test("moţăie -> moţăi", function() {deepEqual( Stem("moţăie"), "moţăi");});
test("mov -> mov", function() {deepEqual( Stem("mov"), "mov");});
test("movile -> mov", function() {deepEqual( Stem("movile"), "mov");});
test("mprejur -> mprejur", function() {deepEqual( Stem("mprejur"), "mprejur");});
test("mr -> mr", function() {deepEqual( Stem("mr"), "mr");});
test("mreană -> mrean", function() {deepEqual( Stem("mreană"), "mrean");});
test("mucenic -> mucen", function() {deepEqual( Stem("mucenic"), "mucen");});
test("muche -> much", function() {deepEqual( Stem("muche"), "much");});
test("muchia -> much", function() {deepEqual( Stem("muchia"), "much");});
test("muchie -> much", function() {deepEqual( Stem("muchie"), "much");});
test("muchii -> much", function() {deepEqual( Stem("muchii"), "much");});
test("muchiile -> much", function() {deepEqual( Stem("muchiile"), "much");});
test("mucius -> mucius", function() {deepEqual( Stem("mucius"), "mucius");});
test("mucul -> muc", function() {deepEqual( Stem("mucul"), "muc");});
test("mucuri -> mucur", function() {deepEqual( Stem("mucuri"), "mucur");});
test("mugurii -> mugur", function() {deepEqual( Stem("mugurii"), "mugur");});
test("muiat -> muiat", function() {deepEqual( Stem("muiat"), "muiat");});
test("mulată -> mulat", function() {deepEqual( Stem("mulată"), "mulat");});
test("mulează -> muleaz", function() {deepEqual( Stem("mulează"), "muleaz");});
test("mult -> mult", function() {deepEqual( Stem("mult"), "mult");});
test("multă -> mult", function() {deepEqual( Stem("multă"), "mult");});
test("multe -> mult", function() {deepEqual( Stem("multe"), "mult");});
test("multiplă -> multipl", function() {deepEqual( Stem("multiplă"), "multipl");});
test("multiplicare -> multiplic", function() {deepEqual( Stem("multiplicare"), "multiplic");});
test("multiplicat -> multiplic", function() {deepEqual( Stem("multiplicat"), "multiplic");});
test("multiplică -> multipl", function() {deepEqual( Stem("multiplică"), "multipl");});
test("multiplicăm -> multiplic", function() {deepEqual( Stem("multiplicăm"), "multiplic");});
test("multiplicitate -> multipl", function() {deepEqual( Stem("multiplicitate"), "multipl");});
test("multiplicitatea -> multipl", function() {deepEqual( Stem("multiplicitatea"), "multipl");});
test("multiplicităţi -> multipl", function() {deepEqual( Stem("multiplicităţi"), "multipl");});
test("multiplicităţii -> multipl", function() {deepEqual( Stem("multiplicităţii"), "multipl");});
test("multiplii -> multipl", function() {deepEqual( Stem("multiplii"), "multipl");});
test("multiplilor -> multipl", function() {deepEqual( Stem("multiplilor"), "multipl");});
test("multor -> multor", function() {deepEqual( Stem("multor"), "multor");});
test("mulţi -> mulţ", function() {deepEqual( Stem("mulţi"), "mulţ");});
test("mulţime -> mulţim", function() {deepEqual( Stem("mulţime"), "mulţim");});
test("mulţimea -> mulţim", function() {deepEqual( Stem("mulţimea"), "mulţim");});
test("mulţimii -> mulţim", function() {deepEqual( Stem("mulţimii"), "mulţim");});
test("mulţimile -> mulţim", function() {deepEqual( Stem("mulţimile"), "mulţim");});
test("mulţimilor -> mulţim", function() {deepEqual( Stem("mulţimilor"), "mulţim");});
test("mulţume -> mulţum", function() {deepEqual( Stem("mulţume"), "mulţum");});
test("mulţumeam -> mulţum", function() {deepEqual( Stem("mulţumeam"), "mulţum");});
test("mulţumească -> mulţum", function() {deepEqual( Stem("mulţumească"), "mulţum");});
test("mulţumesc -> mulţum", function() {deepEqual( Stem("mulţumesc"), "mulţum");});
test("mulţumeşte -> mulţum", function() {deepEqual( Stem("mulţumeşte"), "mulţum");});
test("mulţumi -> mulţum", function() {deepEqual( Stem("mulţumi"), "mulţum");});
test("mulţumim -> mulţum", function() {deepEqual( Stem("mulţumim"), "mulţum");});
test("mulţumire -> mulţum", function() {deepEqual( Stem("mulţumire"), "mulţum");});
test("mulţumiri -> mulţumir", function() {deepEqual( Stem("mulţumiri"), "mulţumir");});
test("mulţumirii -> mulţumir", function() {deepEqual( Stem("mulţumirii"), "mulţumir");});
test("mulţumit -> mulţum", function() {deepEqual( Stem("mulţumit"), "mulţum");});
test("mulţumită -> mulţum", function() {deepEqual( Stem("mulţumită"), "mulţum");});
test("mulţumitor -> mulţum", function() {deepEqual( Stem("mulţumitor"), "mulţum");});
test("mumii -> mum", function() {deepEqual( Stem("mumii"), "mum");});
test("mumm -> mumm", function() {deepEqual( Stem("mumm"), "mumm");});
test("munca -> munc", function() {deepEqual( Stem("munca"), "munc");});
test("muncă -> munc", function() {deepEqual( Stem("muncă"), "munc");});
test("munceşti -> munc", function() {deepEqual( Stem("munceşti"), "munc");});
test("muncile -> munc", function() {deepEqual( Stem("muncile"), "munc");});
test("muncim -> munc", function() {deepEqual( Stem("muncim"), "munc");});
test("muncind -> munc", function() {deepEqual( Stem("muncind"), "munc");});
test("muncit -> muncit", function() {deepEqual( Stem("muncit"), "muncit");});
test("muncitoare -> muncit", function() {deepEqual( Stem("muncitoare"), "muncit");});
test("muncitor -> muncit", function() {deepEqual( Stem("muncitor"), "muncit");});
test("muncitoresc -> muncitor", function() {deepEqual( Stem("muncitoresc"), "muncitor");});
test("muncitoreşti -> muncitor", function() {deepEqual( Stem("muncitoreşti"), "muncitor");});
test("muncitori -> muncit", function() {deepEqual( Stem("muncitori"), "muncit");});
test("muncitorimea -> muncitorim", function() {deepEqual( Stem("muncitorimea"), "muncitorim");});
test("municipal -> municipal", function() {deepEqual( Stem("municipal"), "municipal");});
test("municipală -> municipal", function() {deepEqual( Stem("municipală"), "municipal");});
test("municipii -> municip", function() {deepEqual( Stem("municipii"), "municip");});
test("municipiul -> municip", function() {deepEqual( Stem("municipiul"), "municip");});
test("municipiului -> municip", function() {deepEqual( Stem("municipiului"), "municip");});
test("munificent -> munificent", function() {deepEqual( Stem("munificent"), "munificent");});
test("muniţia -> muniţ", function() {deepEqual( Stem("muniţia"), "muniţ");});
test("muniţie -> muniţ", function() {deepEqual( Stem("muniţie"), "muniţ");});
test("muniţii -> mun", function() {deepEqual( Stem("muniţii"), "mun");});
test("muniţiile -> mun", function() {deepEqual( Stem("muniţiile"), "mun");});
test("munte -> munt", function() {deepEqual( Stem("munte"), "munt");});
test("muntean -> muntean", function() {deepEqual( Stem("muntean"), "muntean");});
test("munteanu -> munteanu", function() {deepEqual( Stem("munteanu"), "munteanu");});
test("muntele -> munt", function() {deepEqual( Stem("muntele"), "munt");});
test("muntelui -> muntel", function() {deepEqual( Stem("muntelui"), "muntel");});
test("muntence -> muntenc", function() {deepEqual( Stem("muntence"), "muntenc");});
test("muntene -> munten", function() {deepEqual( Stem("muntene"), "munten");});
test("muntenegrii -> muntenegr", function() {deepEqual( Stem("muntenegrii"), "muntenegr");});
test("muntenegru -> muntenegru", function() {deepEqual( Stem("muntenegru"), "muntenegru");});
test("munteni -> munten", function() {deepEqual( Stem("munteni"), "munten");});
test("muntenia -> munten", function() {deepEqual( Stem("muntenia"), "munten");});
test("muntoase -> muntoas", function() {deepEqual( Stem("muntoase"), "muntoas");});
test("muntos -> muntos", function() {deepEqual( Stem("muntos"), "muntos");});
test("munţi -> munţ", function() {deepEqual( Stem("munţi"), "munţ");});
test("munţii -> munţ", function() {deepEqual( Stem("munţii"), "munţ");});
test("munţilor -> munţ", function() {deepEqual( Stem("munţilor"), "munţ");});
test("mural -> mural", function() {deepEqual( Stem("mural"), "mural");});
test("murată -> murat", function() {deepEqual( Stem("murată"), "murat");});
test("muraţi -> mur", function() {deepEqual( Stem("muraţi"), "mur");});
test("mură -> mur", function() {deepEqual( Stem("mură"), "mur");});
test("murături -> murătur", function() {deepEqual( Stem("murături"), "murătur");});
test("murăturilor -> murătur", function() {deepEqual( Stem("murăturilor"), "murătur");});
test("murdar -> murdar", function() {deepEqual( Stem("murdar"), "murdar");});
test("murdară -> murd", function() {deepEqual( Stem("murdară"), "murd");});
test("murdare -> murd", function() {deepEqual( Stem("murdare"), "murd");});
test("murdărea -> murdăr", function() {deepEqual( Stem("murdărea"), "murdăr");});
test("murdăria -> murdăr", function() {deepEqual( Stem("murdăria"), "murdăr");});
test("murdărie -> murdăr", function() {deepEqual( Stem("murdărie"), "murdăr");});
test("murdărit -> murdăr", function() {deepEqual( Stem("murdărit"), "murdăr");});
test("mure -> mur", function() {deepEqual( Stem("mure"), "mur");});
test("murg -> murg", function() {deepEqual( Stem("murg"), "murg");});
test("muri -> mur", function() {deepEqual( Stem("muri"), "mur");});
test("murillo -> murillo", function() {deepEqual( Stem("murillo"), "murillo");});
test("murim -> mur", function() {deepEqual( Stem("murim"), "mur");});
test("murise -> muris", function() {deepEqual( Stem("murise"), "muris");});
test("murit -> murit", function() {deepEqual( Stem("murit"), "murit");});
test("muritoare -> murit", function() {deepEqual( Stem("muritoare"), "murit");});
test("muritor -> murit", function() {deepEqual( Stem("muritor"), "murit");});
test("muritori -> murit", function() {deepEqual( Stem("muritori"), "murit");});
test("murmură -> murm", function() {deepEqual( Stem("murmură"), "murm");});
test("murmure -> murmur", function() {deepEqual( Stem("murmure"), "murmur");});
test("musafir -> musafir", function() {deepEqual( Stem("musafir"), "musafir");});
test("musafiri -> musafir", function() {deepEqual( Stem("musafiri"), "musafir");});
test("musafirii -> musafir", function() {deepEqual( Stem("musafirii"), "musafir");});
test("musai -> musa", function() {deepEqual( Stem("musai"), "musa");});
test("mustaţa -> mustaţ", function() {deepEqual( Stem("mustaţa"), "mustaţ");});
test("mustaţă -> mustaţ", function() {deepEqual( Stem("mustaţă"), "mustaţ");});
test("mustăcioase -> mustăc", function() {deepEqual( Stem("mustăcioase"), "mustăc");});
test("mustăcios -> mustăc", function() {deepEqual( Stem("mustăcios"), "mustăc");});
test("mustăţi -> mustăţ", function() {deepEqual( Stem("mustăţi"), "mustăţ");});
test("mustăţii -> mustăţ", function() {deepEqual( Stem("mustăţii"), "mustăţ");});
test("mustăţile -> mustăţ", function() {deepEqual( Stem("mustăţile"), "mustăţ");});
test("musteala -> musteal", function() {deepEqual( Stem("musteala"), "musteal");});
test("mustre -> mustr", function() {deepEqual( Stem("mustre"), "mustr");});
test("muşc -> muşc", function() {deepEqual( Stem("muşc"), "muşc");});
test("muşca -> muşc", function() {deepEqual( Stem("muşca"), "muşc");});
test("muşcat -> muşcat", function() {deepEqual( Stem("muşcat"), "muşcat");});
test("muşcând -> muşc", function() {deepEqual( Stem("muşcând"), "muşc");});
test("muşcă -> muşc", function() {deepEqual( Stem("muşcă"), "muşc");});
test("muşchi -> muşch", function() {deepEqual( Stem("muşchi"), "muşch");});
test("muşchii -> muşch", function() {deepEqual( Stem("muşchii"), "muşch");});
test("muşchilor -> muşch", function() {deepEqual( Stem("muşchilor"), "muşch");});
test("muşchiulară -> muşchiul", function() {deepEqual( Stem("muşchiulară"), "muşchiul");});
test("muşchiulare -> muşchiul", function() {deepEqual( Stem("muşchiulare"), "muşchiul");});
test("muşte -> muşt", function() {deepEqual( Stem("muşte"), "muşt");});
test("muştele -> muşt", function() {deepEqual( Stem("muştele"), "muşt");});
test("muşteriii -> muşterii", function() {deepEqual( Stem("muşteriii"), "muşterii");});
test("muşti -> muşt", function() {deepEqual( Stem("muşti"), "muşt");});
test("muşuroaiele -> muşuroai", function() {deepEqual( Stem("muşuroaiele"), "muşuroai");});
test("muşuroi -> muşuro", function() {deepEqual( Stem("muşuroi"), "muşuro");});
test("mutarea -> mutar", function() {deepEqual( Stem("mutarea"), "mutar");});
test("mutat -> mutat", function() {deepEqual( Stem("mutat"), "mutat");});
test("mutate -> mutat", function() {deepEqual( Stem("mutate"), "mutat");});
test("mutând -> mutând", function() {deepEqual( Stem("mutând"), "mutând");});
test("mută -> mut", function() {deepEqual( Stem("mută"), "mut");});
test("mutăm -> mut", function() {deepEqual( Stem("mutăm"), "mut");});
test("mute -> mut", function() {deepEqual( Stem("mute"), "mut");});
test("muteşte -> muteşt", function() {deepEqual( Stem("muteşte"), "muteşt");});
test("mutra -> mutr", function() {deepEqual( Stem("mutra"), "mutr");});
test("mutră -> mutr", function() {deepEqual( Stem("mutră"), "mutr");});
test("mutre -> mutr", function() {deepEqual( Stem("mutre"), "mutr");});
test("mutrele -> mutr", function() {deepEqual( Stem("mutrele"), "mutr");});
test("mutual -> mutual", function() {deepEqual( Stem("mutual"), "mutual");});
test("muţi -> muţ", function() {deepEqual( Stem("muţi"), "muţ");});
test("muză -> muz", function() {deepEqual( Stem("muză"), "muz");});
test("muzeele -> muze", function() {deepEqual( Stem("muzeele"), "muze");});
test("muzeu -> muzeu", function() {deepEqual( Stem("muzeu"), "muzeu");});
test("muzica -> muzic", function() {deepEqual( Stem("muzica"), "muzic");});
test("muzicală -> muzic", function() {deepEqual( Stem("muzicală"), "muzic");});
test("muzicale -> muzic", function() {deepEqual( Stem("muzicale"), "muzic");});
test("muzicalităţii -> muzical", function() {deepEqual( Stem("muzicalităţii"), "muzical");});
test("muzică -> muzic", function() {deepEqual( Stem("muzică"), "muzic");});
test("muzician -> muzician", function() {deepEqual( Stem("muzician"), "muzician");});
test("muzicii -> muzic", function() {deepEqual( Stem("muzicii"), "muzic");});
test("n -> n", function() {deepEqual( Stem("n"), "n");});
test("nae -> nae", function() {deepEqual( Stem("nae"), "nae");});
test("nagy -> nagy", function() {deepEqual( Stem("nagy"), "nagy");});
test("nai -> nai", function() {deepEqual( Stem("nai"), "nai");});
test("naiba -> naib", function() {deepEqual( Stem("naiba"), "naib");});
test("naibii -> naib", function() {deepEqual( Stem("naibii"), "naib");});
test("naiv -> naiv", function() {deepEqual( Stem("naiv"), "naiv");});
test("naivă -> naiv", function() {deepEqual( Stem("naivă"), "naiv");});
test("naive -> naiv", function() {deepEqual( Stem("naive"), "naiv");});
test("naivi -> naiv", function() {deepEqual( Stem("naivi"), "naiv");});
test("naivitate -> naivitat", function() {deepEqual( Stem("naivitate"), "naivitat");});
test("naivitatea -> naivitat", function() {deepEqual( Stem("naivitatea"), "naivitat");});
test("naivităţi -> naivităţ", function() {deepEqual( Stem("naivităţi"), "naivităţ");});
test("namilă -> namil", function() {deepEqual( Stem("namilă"), "namil");});
test("napoleon -> napoleon", function() {deepEqual( Stem("napoleon"), "napoleon");});
test("napoleoni -> napoleon", function() {deepEqual( Stem("napoleoni"), "napoleon");});
test("napoleonian -> napoleonian", function() {deepEqual( Stem("napoleonian"), "napoleonian");});
test("narcotic -> narcot", function() {deepEqual( Stem("narcotic"), "narcot");});
test("nas -> nas", function() {deepEqual( Stem("nas"), "nas");});
test("nasc -> nasc", function() {deepEqual( Stem("nasc"), "nasc");});
test("nască -> nasc", function() {deepEqual( Stem("nască"), "nasc");});
test("nastratin -> nastratin", function() {deepEqual( Stem("nastratin"), "nastratin");});
test("nasture -> nastur", function() {deepEqual( Stem("nasture"), "nastur");});
test("nasturi -> nastur", function() {deepEqual( Stem("nasturi"), "nastur");});
test("nasul -> nas", function() {deepEqual( Stem("nasul"), "nas");});
test("naşte -> naşt", function() {deepEqual( Stem("naşte"), "naşt");});
test("naştere -> naşt", function() {deepEqual( Stem("naştere"), "naşt");});
test("naşterea -> naşt", function() {deepEqual( Stem("naşterea"), "naşt");});
test("naşti -> naşt", function() {deepEqual( Stem("naşti"), "naşt");});
test("nativ -> nativ", function() {deepEqual( Stem("nativ"), "nativ");});
test("nativă -> nativ", function() {deepEqual( Stem("nativă"), "nativ");});
test("natura -> natur", function() {deepEqual( Stem("natura"), "natur");});
test("natural -> natural", function() {deepEqual( Stem("natural"), "natural");});
test("naturală -> natural", function() {deepEqual( Stem("naturală"), "natural");});
test("naturale -> natural", function() {deepEqual( Stem("naturale"), "natural");});
test("naturaleţe -> naturaleţ", function() {deepEqual( Stem("naturaleţe"), "naturaleţ");});
test("naturaliste -> naturalist", function() {deepEqual( Stem("naturaliste"), "naturalist");});
test("naturalizarea -> naturaliz", function() {deepEqual( Stem("naturalizarea"), "naturaliz");});
test("naturalizării -> naturalizăr", function() {deepEqual( Stem("naturalizării"), "naturalizăr");});
test("naturalului -> natural", function() {deepEqual( Stem("naturalului"), "natural");});
test("natură -> natur", function() {deepEqual( Stem("natură"), "natur");});
test("naturei -> nature", function() {deepEqual( Stem("naturei"), "nature");});
test("naturi -> natur", function() {deepEqual( Stem("naturi"), "natur");});
test("naturii -> natur", function() {deepEqual( Stem("naturii"), "natur");});
test("naturile -> natur", function() {deepEqual( Stem("naturile"), "natur");});
test("naţie -> naţ", function() {deepEqual( Stem("naţie"), "naţ");});
test("naţiei -> naţ", function() {deepEqual( Stem("naţiei"), "naţ");});
test("naţii -> naţ", function() {deepEqual( Stem("naţii"), "naţ");});
test("naţional -> naţional", function() {deepEqual( Stem("naţional"), "naţional");});
test("naţională -> naţional", function() {deepEqual( Stem("naţională"), "naţional");});
test("naţionale -> naţional", function() {deepEqual( Stem("naţionale"), "naţional");});
test("naţionalism -> naţionalist", function() {deepEqual( Stem("naţionalism"), "naţionalist");});
test("naţionalist -> naţionalist", function() {deepEqual( Stem("naţionalist"), "naţionalist");});
test("naţionalistă -> naţionalist", function() {deepEqual( Stem("naţionalistă"), "naţionalist");});
test("naţionalişti -> naţionalist", function() {deepEqual( Stem("naţionalişti"), "naţionalist");});
test("naţionalitate -> naţional", function() {deepEqual( Stem("naţionalitate"), "naţional");});
test("naţionalităţi -> naţional", function() {deepEqual( Stem("naţionalităţi"), "naţional");});
test("naţionalizarea -> naţionaliz", function() {deepEqual( Stem("naţionalizarea"), "naţionaliz");});
test("naţionalizate -> naţionaliz", function() {deepEqual( Stem("naţionalizate"), "naţionaliz");});
test("naţionalizări -> naţionalizăr", function() {deepEqual( Stem("naţionalizări"), "naţionalizăr");});
test("naţiune -> naţiun", function() {deepEqual( Stem("naţiune"), "naţiun");});
test("naţiuni -> naţiun", function() {deepEqual( Stem("naţiuni"), "naţiun");});
test("naţiunii -> naţiun", function() {deepEqual( Stem("naţiunii"), "naţiun");});
test("naufragiat -> naufrag", function() {deepEqual( Stem("naufragiat"), "naufrag");});
test("naufragiez -> naufragiez", function() {deepEqual( Stem("naufragiez"), "naufragiez");});
test("naufragiu -> naufragiu", function() {deepEqual( Stem("naufragiu"), "naufragiu");});
test("naveta -> navet", function() {deepEqual( Stem("naveta"), "navet");});
test("năbuşită -> năbuş", function() {deepEqual( Stem("năbuşită"), "năbuş");});
test("nădăjduiesc -> nădăjdui", function() {deepEqual( Stem("nădăjduiesc"), "nădăjdui");});
test("nădăjduim -> nădăjdu", function() {deepEqual( Stem("nădăjduim"), "nădăjdu");});
test("nădăjduind -> nădăjdu", function() {deepEqual( Stem("nădăjduind"), "nădăjdu");});
test("nădejde -> nădejd", function() {deepEqual( Stem("nădejde"), "nădejd");});
test("nădejdea -> nădejd", function() {deepEqual( Stem("nădejdea"), "nădejd");});
test("nădejdile -> nădejd", function() {deepEqual( Stem("nădejdile"), "nădejd");});
test("năduşeală -> năduşeal", function() {deepEqual( Stem("năduşeală"), "năduşeal");});
test("năduşit -> năduş", function() {deepEqual( Stem("năduşit"), "năduş");});
test("năduşită -> năduş", function() {deepEqual( Stem("năduşită"), "năduş");});
test("năduşiţi -> năduş", function() {deepEqual( Stem("năduşiţi"), "năduş");});
test("nămăeşti -> nămăeşt", function() {deepEqual( Stem("nămăeşti"), "nămăeşt");});
test("năpădit -> năpăd", function() {deepEqual( Stem("năpădit"), "năpăd");});
test("năprasnic -> năprasn", function() {deepEqual( Stem("năprasnic"), "năprasn");});
test("năpraznică -> năprazn", function() {deepEqual( Stem("năpraznică"), "năprazn");});
test("năpustesc -> năpust", function() {deepEqual( Stem("năpustesc"), "năpust");});
test("năpusteşte -> năpust", function() {deepEqual( Stem("năpusteşte"), "năpust");});
test("năpustise -> năpust", function() {deepEqual( Stem("năpustise"), "năpust");});
test("nările -> năr", function() {deepEqual( Stem("nările"), "năr");});
test("năruire -> năru", function() {deepEqual( Stem("năruire"), "năru");});
test("năruite -> năruit", function() {deepEqual( Stem("năruite"), "năruit");});
test("născare -> născ", function() {deepEqual( Stem("născare"), "născ");});
test("născiorul -> născior", function() {deepEqual( Stem("născiorul"), "născior");});
test("născoceşte -> născoc", function() {deepEqual( Stem("născoceşte"), "născoc");});
test("născut -> născut", function() {deepEqual( Stem("născut"), "născut");});
test("născută -> născut", function() {deepEqual( Stem("născută"), "născut");});
test("născute -> născut", function() {deepEqual( Stem("născute"), "născut");});
test("născuţi -> născuţ", function() {deepEqual( Stem("născuţi"), "născuţ");});
test("năuc -> năuc", function() {deepEqual( Stem("năuc"), "năuc");});
test("năucea -> năuc", function() {deepEqual( Stem("năucea"), "năuc");});
test("năucesc -> năuc", function() {deepEqual( Stem("năucesc"), "năuc");});
test("năuceşte -> năuc", function() {deepEqual( Stem("năuceşte"), "năuc");});
test("năucindu -> năuc", function() {deepEqual( Stem("năucindu"), "năuc");});
test("năucit -> năucit", function() {deepEqual( Stem("năucit"), "năucit");});
test("năucitoare -> năucit", function() {deepEqual( Stem("năucitoare"), "năucit");});
test("năucitor -> năucit", function() {deepEqual( Stem("năucitor"), "năucit");});
test("năut -> năut", function() {deepEqual( Stem("năut"), "năut");});
test("năvală -> năval", function() {deepEqual( Stem("năvală"), "năval");});
test("năvalnic -> năvaln", function() {deepEqual( Stem("năvalnic"), "năvaln");});
test("năvăleam -> năvăl", function() {deepEqual( Stem("năvăleam"), "năvăl");});
test("năvălesc -> năvăl", function() {deepEqual( Stem("năvălesc"), "năvăl");});
test("năvăleşte -> năvăl", function() {deepEqual( Stem("năvăleşte"), "năvăl");});
test("năvăli -> năvăl", function() {deepEqual( Stem("năvăli"), "năvăl");});
test("năvălim -> năvăl", function() {deepEqual( Stem("năvălim"), "năvăl");});
test("năvălit -> năvăl", function() {deepEqual( Stem("năvălit"), "năvăl");});
test("năzbâtii -> năzbât", function() {deepEqual( Stem("năzbâtii"), "năzbât");});
test("năzdrăvană -> năzdrăvan", function() {deepEqual( Stem("năzdrăvană"), "năzdrăvan");});
test("năzdrăvănii -> năzdrăvăn", function() {deepEqual( Stem("năzdrăvănii"), "năzdrăvăn");});
test("năzdrăvăniile -> năzdrăvăn", function() {deepEqual( Stem("năzdrăvăniile"), "năzdrăvăn");});
test("ncep -> ncep", function() {deepEqual( Stem("ncep"), "ncep");});
test("ncerc -> ncerc", function() {deepEqual( Stem("ncerc"), "ncerc");});
test("ncoa -> nco", function() {deepEqual( Stem("ncoa"), "nco");});
test("ncolo -> ncolo", function() {deepEqual( Stem("ncolo"), "ncolo");});
test("ndaratelea -> ndaratel", function() {deepEqual( Stem("ndaratelea"), "ndaratel");});
test("ndemâna -> ndemân", function() {deepEqual( Stem("ndemâna"), "ndemân");});
test("ndemână -> ndemân", function() {deepEqual( Stem("ndemână"), "ndemân");});
test("ne -> ne", function() {deepEqual( Stem("ne"), "ne");});
test("neadaptată -> neadapt", function() {deepEqual( Stem("neadaptată"), "neadapt");});
test("neadăpostiţi -> neadăpost", function() {deepEqual( Stem("neadăpostiţi"), "neadăpost");});
test("neadecvată -> neadecv", function() {deepEqual( Stem("neadecvată"), "neadecv");});
test("neadevărată -> neadevăr", function() {deepEqual( Stem("neadevărată"), "neadevăr");});
test("neafişată -> neafiş", function() {deepEqual( Stem("neafişată"), "neafiş");});
test("neagă -> neag", function() {deepEqual( Stem("neagă"), "neag");});
test("neagoe -> neago", function() {deepEqual( Stem("neagoe"), "neago");});
test("neagră -> neagr", function() {deepEqual( Stem("neagră"), "neagr");});
test("neagu -> neagu", function() {deepEqual( Stem("neagu"), "neagu");});
test("neagule -> neagul", function() {deepEqual( Stem("neagule"), "neagul");});
test("neajuns -> neajuns", function() {deepEqual( Stem("neajuns"), "neajuns");});
test("nealambicate -> nealambic", function() {deepEqual( Stem("nealambicate"), "nealambic");});
test("nealese -> neal", function() {deepEqual( Stem("nealese"), "neal");});
test("nealterat -> nealter", function() {deepEqual( Stem("nealterat"), "nealter");});
test("nealterată -> nealter", function() {deepEqual( Stem("nealterată"), "nealter");});
test("neam -> neam", function() {deepEqual( Stem("neam"), "neam");});
test("neamţ -> neamţ", function() {deepEqual( Stem("neamţ"), "neamţ");});
test("neamţul -> neamţ", function() {deepEqual( Stem("neamţul"), "neamţ");});
test("neamul -> neam", function() {deepEqual( Stem("neamul"), "neam");});
test("neamului -> neam", function() {deepEqual( Stem("neamului"), "neam");});
test("neamurilor -> neamur", function() {deepEqual( Stem("neamurilor"), "neamur");});
test("neangrenat -> neangren", function() {deepEqual( Stem("neangrenat"), "neangren");});
test("neantul -> neant", function() {deepEqual( Stem("neantul"), "neant");});
test("neaoş -> neaoş", function() {deepEqual( Stem("neaoş"), "neaoş");});
test("neapărat -> neapăr", function() {deepEqual( Stem("neapărat"), "neapăr");});
test("neapărată -> neapăr", function() {deepEqual( Stem("neapărată"), "neapăr");});
test("neaprins -> neaprins", function() {deepEqual( Stem("neaprins"), "neaprins");});
test("neaprioric -> neaprior", function() {deepEqual( Stem("neaprioric"), "neaprior");});
test("nears -> nears", function() {deepEqual( Stem("nears"), "nears");});
test("neascunsă -> neascuns", function() {deepEqual( Stem("neascunsă"), "neascuns");});
test("neasemănat -> neasemăn", function() {deepEqual( Stem("neasemănat"), "neasemăn");});
test("neasemănată -> neasemăn", function() {deepEqual( Stem("neasemănată"), "neasemăn");});
test("neasemănate -> neasemăn", function() {deepEqual( Stem("neasemănate"), "neasemăn");});
test("neasemuit -> neasemu", function() {deepEqual( Stem("neasemuit"), "neasemu");});
test("neastâmpăr -> neastâmpăr", function() {deepEqual( Stem("neastâmpăr"), "neastâmpăr");});
test("neastâmpărat -> neastâmpăr", function() {deepEqual( Stem("neastâmpărat"), "neastâmpăr");});
test("neastâmpărata -> neastâmpăr", function() {deepEqual( Stem("neastâmpărata"), "neastâmpăr");});
test("neastâmpărată -> neastâmpăr", function() {deepEqual( Stem("neastâmpărată"), "neastâmpăr");});
test("neastâmpăraţi -> neastâmpăr", function() {deepEqual( Stem("neastâmpăraţi"), "neastâmpăr");});
test("neastâmpărul -> neastâmpăr", function() {deepEqual( Stem("neastâmpărul"), "neastâmpăr");});
test("neaşteptat -> neaştept", function() {deepEqual( Stem("neaşteptat"), "neaştept");});
test("neaşteptată -> neaştept", function() {deepEqual( Stem("neaşteptată"), "neaştept");});
test("neaşteptate -> neaştept", function() {deepEqual( Stem("neaşteptate"), "neaştept");});
test("neatenţia -> neatenţ", function() {deepEqual( Stem("neatenţia"), "neatenţ");});
test("neauzită -> neauzit", function() {deepEqual( Stem("neauzită"), "neauzit");});
test("neavând -> neav", function() {deepEqual( Stem("neavând"), "neav");});
test("nebăgare -> nebăg", function() {deepEqual( Stem("nebăgare"), "nebăg");});
test("nebăgaţi -> nebăg", function() {deepEqual( Stem("nebăgaţi"), "nebăg");});
test("nebănuite -> nebănu", function() {deepEqual( Stem("nebănuite"), "nebănu");});
test("nebărbierit -> nebărbier", function() {deepEqual( Stem("nebărbierit"), "nebărbier");});
test("nebuloasa -> nebul", function() {deepEqual( Stem("nebuloasa"), "nebul");});
test("nebuloasă -> nebul", function() {deepEqual( Stem("nebuloasă"), "nebul");});
test("nebun -> nebun", function() {deepEqual( Stem("nebun"), "nebun");});
test("nebună -> nebun", function() {deepEqual( Stem("nebună"), "nebun");});
test("nebune -> nebun", function() {deepEqual( Stem("nebune"), "nebun");});
test("nebunesc -> nebun", function() {deepEqual( Stem("nebunesc"), "nebun");});
test("nebuneşte -> nebun", function() {deepEqual( Stem("nebuneşte"), "nebun");});
test("nebunia -> nebun", function() {deepEqual( Stem("nebunia"), "nebun");});
test("nebunie -> nebun", function() {deepEqual( Stem("nebunie"), "nebun");});
test("nebuniei -> nebun", function() {deepEqual( Stem("nebuniei"), "nebun");});
test("nebunii -> nebun", function() {deepEqual( Stem("nebunii"), "nebun");});
test("nebuniilor -> nebun", function() {deepEqual( Stem("nebuniilor"), "nebun");});
test("nebunul -> nebun", function() {deepEqual( Stem("nebunul"), "nebun");});
test("nebunului -> nebun", function() {deepEqual( Stem("nebunului"), "nebun");});
test("necalculabilă -> necalcul", function() {deepEqual( Stem("necalculabilă"), "necalcul");});
test("necaz -> necaz", function() {deepEqual( Stem("necaz"), "necaz");});
test("necazul -> necaz", function() {deepEqual( Stem("necazul"), "necaz");});
test("necazuri -> necazur", function() {deepEqual( Stem("necazuri"), "necazur");});
test("necazurile -> necazur", function() {deepEqual( Stem("necazurile"), "necazur");});
test("necăjeşte -> necăj", function() {deepEqual( Stem("necăjeşte"), "necăj");});
test("necăjit -> necăj", function() {deepEqual( Stem("necăjit"), "necăj");});
test("necăjită -> necăj", function() {deepEqual( Stem("necăjită"), "necăj");});
test("necăjiţi -> necăj", function() {deepEqual( Stem("necăjiţi"), "necăj");});
test("necercetate -> necercet", function() {deepEqual( Stem("necercetate"), "necercet");});
test("necesar -> necesar", function() {deepEqual( Stem("necesar"), "necesar");});
test("necesară -> neces", function() {deepEqual( Stem("necesară"), "neces");});
test("necesare -> neces", function() {deepEqual( Stem("necesare"), "neces");});
test("necesari -> necesar", function() {deepEqual( Stem("necesari"), "necesar");});
test("necesitate -> neces", function() {deepEqual( Stem("necesitate"), "neces");});
test("necesitatea -> neces", function() {deepEqual( Stem("necesitatea"), "neces");});
test("necesităţi -> neces", function() {deepEqual( Stem("necesităţi"), "neces");});
test("necesităţii -> neces", function() {deepEqual( Stem("necesităţii"), "neces");});
test("necesităţile -> neces", function() {deepEqual( Stem("necesităţile"), "neces");});
test("necesităţilor -> neces", function() {deepEqual( Stem("necesităţilor"), "neces");});
test("neclar -> neclar", function() {deepEqual( Stem("neclar"), "neclar");});
test("neclintită -> neclint", function() {deepEqual( Stem("neclintită"), "neclint");});
test("necognoscibil -> necognosc", function() {deepEqual( Stem("necognoscibil"), "necognosc");});
test("neconformă -> neconform", function() {deepEqual( Stem("neconformă"), "neconform");});
test("necontenit -> neconten", function() {deepEqual( Stem("necontenit"), "neconten");});
test("necontrolabilă -> necontrol", function() {deepEqual( Stem("necontrolabilă"), "necontrol");});
test("necredincioasă -> necredinc", function() {deepEqual( Stem("necredincioasă"), "necredinc");});
test("necredincioase -> necredinc", function() {deepEqual( Stem("necredincioase"), "necredinc");});
test("necredinţa -> necredinţ", function() {deepEqual( Stem("necredinţa"), "necredinţ");});
test("necrezut -> necrez", function() {deepEqual( Stem("necrezut"), "necrez");});
test("necruţătoare -> necruţ", function() {deepEqual( Stem("necruţătoare"), "necruţ");});
test("neculcaţi -> neculc", function() {deepEqual( Stem("neculcaţi"), "neculc");});
test("necum -> necum", function() {deepEqual( Stem("necum"), "necum");});
test("necunoscut -> necunosc", function() {deepEqual( Stem("necunoscut"), "necunosc");});
test("necunoscută -> necunosc", function() {deepEqual( Stem("necunoscută"), "necunosc");});
test("necunoscute -> necunosc", function() {deepEqual( Stem("necunoscute"), "necunosc");});
test("necunoscutul -> necunosc", function() {deepEqual( Stem("necunoscutul"), "necunosc");});
test("necunoscutului -> necunosc", function() {deepEqual( Stem("necunoscutului"), "necunosc");});
test("necuprins -> necuprins", function() {deepEqual( Stem("necuprins"), "necuprins");});
test("necurat -> necur", function() {deepEqual( Stem("necurat"), "necur");});
test("nedelicat -> nedelic", function() {deepEqual( Stem("nedelicat"), "nedelic");});
test("nedelicate -> nedelic", function() {deepEqual( Stem("nedelicate"), "nedelic");});
test("nedelicateţea -> nedelicateţ", function() {deepEqual( Stem("nedelicateţea"), "nedelicateţ");});
test("nedemonstrabil -> nedemonstr", function() {deepEqual( Stem("nedemonstrabil"), "nedemonstr");});
test("nedemonstrabilă -> nedemonstr", function() {deepEqual( Stem("nedemonstrabilă"), "nedemonstr");});
test("nedeprinşi -> nedeprinş", function() {deepEqual( Stem("nedeprinşi"), "nedeprinş");});
test("nedespărţiţi -> nedespărţ", function() {deepEqual( Stem("nedespărţiţi"), "nedespărţ");});
test("nedestoinicia -> nedestoinic", function() {deepEqual( Stem("nedestoinicia"), "nedestoinic");});
test("nedestupate -> nedestup", function() {deepEqual( Stem("nedestupate"), "nedestup");});
test("nedezlegat -> nedezleg", function() {deepEqual( Stem("nedezlegat"), "nedezleg");});
test("nedezorganizată -> nedezorganiz", function() {deepEqual( Stem("nedezorganizată"), "nedezorganiz");});
test("nedibaci -> nedibac", function() {deepEqual( Stem("nedibaci"), "nedibac");});
test("nediferenţiat -> nediferenţ", function() {deepEqual( Stem("nediferenţiat"), "nediferenţ");});
test("nediferenţiate -> nediferenţ", function() {deepEqual( Stem("nediferenţiate"), "nediferenţ");});
test("nedisciplinat -> nedisciplin", function() {deepEqual( Stem("nedisciplinat"), "nedisciplin");});
test("nediscutată -> nediscut", function() {deepEqual( Stem("nediscutată"), "nediscut");});
test("nedormite -> nedorm", function() {deepEqual( Stem("nedormite"), "nedorm");});
test("nedovedită -> nedoved", function() {deepEqual( Stem("nedovedită"), "nedoved");});
test("nedrept -> nedrept", function() {deepEqual( Stem("nedrept"), "nedrept");});
test("nedreptatea -> nedrept", function() {deepEqual( Stem("nedreptatea"), "nedrept");});
test("nedreptăţeşte -> nedreptăţ", function() {deepEqual( Stem("nedreptăţeşte"), "nedreptăţ");});
test("nedreptăţiţi -> nedreptăţ", function() {deepEqual( Stem("nedreptăţiţi"), "nedreptăţ");});
test("nedumerire -> nedumer", function() {deepEqual( Stem("nedumerire"), "nedumer");});
test("nedumerirea -> nedumer", function() {deepEqual( Stem("nedumerirea"), "nedumer");});
test("nedumeriri -> nedumerir", function() {deepEqual( Stem("nedumeriri"), "nedumerir");});
test("nedumerit -> nedumer", function() {deepEqual( Stem("nedumerit"), "nedumer");});
test("nedumerită -> nedumer", function() {deepEqual( Stem("nedumerită"), "nedumer");});
test("nedumeriţi -> nedumer", function() {deepEqual( Stem("nedumeriţi"), "nedumer");});
test("neempirică -> neempir", function() {deepEqual( Stem("neempirică"), "neempir");});
test("neempirie -> neempir", function() {deepEqual( Stem("neempirie"), "neempir");});
test("neeuclidian -> neeuclidian", function() {deepEqual( Stem("neeuclidian"), "neeuclidian");});
test("neeuclidiană -> neeuclidian", function() {deepEqual( Stem("neeuclidiană"), "neeuclidian");});
test("neeuclidiene -> neeuclidien", function() {deepEqual( Stem("neeuclidiene"), "neeuclidien");});
test("neevoluaţi -> neevolu", function() {deepEqual( Stem("neevoluaţi"), "neevolu");});
test("neexistenţa -> neexistenţ", function() {deepEqual( Stem("neexistenţa"), "neexistenţ");});
test("neexprimat -> neexprim", function() {deepEqual( Stem("neexprimat"), "neexprim");});
test("nefericit -> neferic", function() {deepEqual( Stem("nefericit"), "neferic");});
test("nefericită -> neferic", function() {deepEqual( Stem("nefericită"), "neferic");});
test("nefericitul -> neferic", function() {deepEqual( Stem("nefericitul"), "neferic");});
test("nefiind -> nefiind", function() {deepEqual( Stem("nefiind"), "nefiind");});
test("nefiresc -> nefir", function() {deepEqual( Stem("nefiresc"), "nefir");});
test("nefolositor -> nefolos", function() {deepEqual( Stem("nefolositor"), "nefolos");});
test("nefundată -> nefund", function() {deepEqual( Stem("nefundată"), "nefund");});
test("nefurării -> nefurăr", function() {deepEqual( Stem("nefurării"), "nefurăr");});
test("neg -> neg", function() {deepEqual( Stem("neg"), "neg");});
test("nega -> neg", function() {deepEqual( Stem("nega"), "neg");});
test("negare -> negar", function() {deepEqual( Stem("negare"), "negar");});
test("negarea -> negar", function() {deepEqual( Stem("negarea"), "negar");});
test("negat -> negat", function() {deepEqual( Stem("negat"), "negat");});
test("negate -> negat", function() {deepEqual( Stem("negate"), "negat");});
test("negativ -> negat", function() {deepEqual( Stem("negativ"), "negat");});
test("negatorul -> negat", function() {deepEqual( Stem("negatorul"), "negat");});
test("negaţiilor -> neg", function() {deepEqual( Stem("negaţiilor"), "neg");});
test("negaţiune -> negat", function() {deepEqual( Stem("negaţiune"), "negat");});
test("negaţiunile -> negat", function() {deepEqual( Stem("negaţiunile"), "negat");});
test("negau -> negau", function() {deepEqual( Stem("negau"), "negau");});
test("negând -> negând", function() {deepEqual( Stem("negând"), "negând");});
test("negăm -> neg", function() {deepEqual( Stem("negăm"), "neg");});
test("negări -> negăr", function() {deepEqual( Stem("negări"), "negăr");});
test("negăsind -> negăs", function() {deepEqual( Stem("negăsind"), "negăs");});
test("nege -> neg", function() {deepEqual( Stem("nege"), "neg");});
test("neghiob -> neghiob", function() {deepEqual( Stem("neghiob"), "neghiob");});
test("neglijabil -> neglij", function() {deepEqual( Stem("neglijabil"), "neglij");});
test("neglijabilă -> neglij", function() {deepEqual( Stem("neglijabilă"), "neglij");});
test("neglijare -> neglij", function() {deepEqual( Stem("neglijare"), "neglij");});
test("neglijarea -> neglij", function() {deepEqual( Stem("neglijarea"), "neglij");});
test("neglijat -> neglij", function() {deepEqual( Stem("neglijat"), "neglij");});
test("neglijăm -> neglij", function() {deepEqual( Stem("neglijăm"), "neglij");});
test("neglijează -> neglij", function() {deepEqual( Stem("neglijează"), "neglij");});
test("neglijenţa -> neglijenţ", function() {deepEqual( Stem("neglijenţa"), "neglijenţ");});
test("neglijenţi -> neglijenţ", function() {deepEqual( Stem("neglijenţi"), "neglijenţ");});
test("negoţ -> negoţ", function() {deepEqual( Stem("negoţ"), "negoţ");});
test("negre -> negr", function() {deepEqual( Stem("negre"), "negr");});
test("negreşit -> negreş", function() {deepEqual( Stem("negreşit"), "negreş");});
test("negri -> negr", function() {deepEqual( Stem("negri"), "negr");});
test("negricioasă -> negric", function() {deepEqual( Stem("negricioasă"), "negric");});
test("negricios -> negric", function() {deepEqual( Stem("negricios"), "negric");});
test("negru -> negru", function() {deepEqual( Stem("negru"), "negru");});
test("negrul -> negr", function() {deepEqual( Stem("negrul"), "negr");});
test("negustor -> negustor", function() {deepEqual( Stem("negustor"), "negustor");});
test("negustoreasă -> negustoreas", function() {deepEqual( Stem("negustoreasă"), "negustoreas");});
test("negustori -> negustor", function() {deepEqual( Stem("negustori"), "negustor");});
test("negustoria -> negustor", function() {deepEqual( Stem("negustoria"), "negustor");});
test("negustorie -> negustor", function() {deepEqual( Stem("negustorie"), "negustor");});
test("negustorul -> negustor", function() {deepEqual( Stem("negustorul"), "negustor");});
test("nehotărâre -> nehotăr", function() {deepEqual( Stem("nehotărâre"), "nehotăr");});
test("neimaginate -> neimagin", function() {deepEqual( Stem("neimaginate"), "neimagin");});
test("neinfluenţat -> neinfluenţ", function() {deepEqual( Stem("neinfluenţat"), "neinfluenţ");});
test("neinteligibile -> neinteligib", function() {deepEqual( Stem("neinteligibile"), "neinteligib");});
test("neistovit -> neistov", function() {deepEqual( Stem("neistovit"), "neistov");});
test("neistovita -> neistov", function() {deepEqual( Stem("neistovita"), "neistov");});
test("neistovită -> neistov", function() {deepEqual( Stem("neistovită"), "neistov");});
test("neizbutind -> neizbut", function() {deepEqual( Stem("neizbutind"), "neizbut");});
test("neizbutită -> neizbut", function() {deepEqual( Stem("neizbutită"), "neizbut");});
test("neîmpăcaţi -> neîmpăc", function() {deepEqual( Stem("neîmpăcaţi"), "neîmpăc");});
test("neîncetat -> neîncet", function() {deepEqual( Stem("neîncetat"), "neîncet");});
test("neîncetată -> neîncet", function() {deepEqual( Stem("neîncetată"), "neîncet");});
test("neînchipuit -> neînchipu", function() {deepEqual( Stem("neînchipuit"), "neînchipu");});
test("neînchipuită -> neînchipu", function() {deepEqual( Stem("neînchipuită"), "neînchipu");});
test("neîncredere -> neîncred", function() {deepEqual( Stem("neîncredere"), "neîncred");});
test("neîncrederea -> neîncred", function() {deepEqual( Stem("neîncrederea"), "neîncred");});
test("neîncrezându -> neîncrez", function() {deepEqual( Stem("neîncrezându"), "neîncrez");});
test("neîndemânatic -> neîndemânat", function() {deepEqual( Stem("neîndemânatic"), "neîndemânat");});
test("neîndemânatici -> neîndemânat", function() {deepEqual( Stem("neîndemânatici"), "neîndemânat");});
test("neîndoielnic -> neîndoieln", function() {deepEqual( Stem("neîndoielnic"), "neîndoieln");});
test("neîndoios -> neîndoi", function() {deepEqual( Stem("neîndoios"), "neîndoi");});
test("neîndreptat -> neîndrept", function() {deepEqual( Stem("neîndreptat"), "neîndrept");});
test("neînduplecabil -> neînduplec", function() {deepEqual( Stem("neînduplecabil"), "neînduplec");});
test("neînduplecat -> neînduplec", function() {deepEqual( Stem("neînduplecat"), "neînduplec");});
test("neînduplecată -> neînduplec", function() {deepEqual( Stem("neînduplecată"), "neînduplec");});
test("neîndurat -> neîndur", function() {deepEqual( Stem("neîndurat"), "neîndur");});
test("neîngrădit -> neîngrăd", function() {deepEqual( Stem("neîngrădit"), "neîngrăd");});
test("neînjumătăţită -> neînjumătăţ", function() {deepEqual( Stem("neînjumătăţită"), "neînjumătăţ");});
test("neînlăturat -> neînlătur", function() {deepEqual( Stem("neînlăturat"), "neînlătur");});
test("neînsemnat -> neînsemn", function() {deepEqual( Stem("neînsemnat"), "neînsemn");});
test("neînsemnată -> neînsemn", function() {deepEqual( Stem("neînsemnată"), "neînsemn");});
test("neînsemnate -> neînsemn", function() {deepEqual( Stem("neînsemnate"), "neînsemn");});
test("neînsufleţit -> neînsufleţ", function() {deepEqual( Stem("neînsufleţit"), "neînsufleţ");});
test("neîntârziat -> neîntârz", function() {deepEqual( Stem("neîntârziat"), "neîntârz");});
test("neîntemeiată -> neîntemei", function() {deepEqual( Stem("neîntemeiată"), "neîntemei");});
test("neîntrerupt -> neîntrerupt", function() {deepEqual( Stem("neîntrerupt"), "neîntrerupt");});
test("neîntrerupta -> neîntrerupt", function() {deepEqual( Stem("neîntrerupta"), "neîntrerupt");});
test("neîntreruptă -> neîntrerupt", function() {deepEqual( Stem("neîntreruptă"), "neîntrerupt");});
test("neîntrerupte -> neîntrerupt", function() {deepEqual( Stem("neîntrerupte"), "neîntrerupt");});
test("neînţeleaptă -> neînţeleapt", function() {deepEqual( Stem("neînţeleaptă"), "neînţeleapt");});
test("neînţeleasă -> neînţeleas", function() {deepEqual( Stem("neînţeleasă"), "neînţeleas");});
test("neînţelegere -> neînţeleg", function() {deepEqual( Stem("neînţelegere"), "neînţeleg");});
test("neînţelegerea -> neînţeleg", function() {deepEqual( Stem("neînţelegerea"), "neînţeleg");});
test("neînţelegerile -> neînţeleger", function() {deepEqual( Stem("neînţelegerile"), "neînţeleger");});
test("neînţeles -> neînţeles", function() {deepEqual( Stem("neînţeles"), "neînţeles");});
test("neînţelese -> neînţel", function() {deepEqual( Stem("neînţelese"), "neînţel");});
test("neînvins -> neînvins", function() {deepEqual( Stem("neînvins"), "neînvins");});
test("nejucat -> nejuc", function() {deepEqual( Stem("nejucat"), "nejuc");});
test("nejudecate -> nejudec", function() {deepEqual( Stem("nejudecate"), "nejudec");});
test("nejustificat -> nejustific", function() {deepEqual( Stem("nejustificat"), "nejustific");});
test("nejustificată -> nejustific", function() {deepEqual( Stem("nejustificată"), "nejustific");});
test("nelaîndemâna -> nelaîndemân", function() {deepEqual( Stem("nelaîndemâna"), "nelaîndemân");});
test("nelalocul -> nelaloc", function() {deepEqual( Stem("nelalocul"), "nelaloc");});
test("nelămurire -> nelămur", function() {deepEqual( Stem("nelămurire"), "nelămur");});
test("nelămurită -> nelămur", function() {deepEqual( Stem("nelămurită"), "nelămur");});
test("nelămurite -> nelămur", function() {deepEqual( Stem("nelămurite"), "nelămur");});
test("nelăsate -> nelăs", function() {deepEqual( Stem("nelăsate"), "nelăs");});
test("nelegiuire -> nelegiu", function() {deepEqual( Stem("nelegiuire"), "nelegiu");});
test("nelegiuirea -> nelegiu", function() {deepEqual( Stem("nelegiuirea"), "nelegiu");});
test("nelinişte -> nelinişt", function() {deepEqual( Stem("nelinişte"), "nelinişt");});
test("neliniştea -> nelinişt", function() {deepEqual( Stem("neliniştea"), "nelinişt");});
test("neliniştit -> nelinişt", function() {deepEqual( Stem("neliniştit"), "nelinişt");});
test("neliniştite -> nelinişt", function() {deepEqual( Stem("neliniştite"), "nelinişt");});
test("neliniştiţi -> nelinişt", function() {deepEqual( Stem("neliniştiţi"), "nelinişt");});
test("nelipsit -> nelips", function() {deepEqual( Stem("nelipsit"), "nelips");});
test("nelipsite -> nelips", function() {deepEqual( Stem("nelipsite"), "nelips");});
test("nelocalizat -> nelocaliz", function() {deepEqual( Stem("nelocalizat"), "nelocaliz");});
test("nelogic -> nelog", function() {deepEqual( Stem("nelogic"), "nelog");});
test("nelovit -> nelov", function() {deepEqual( Stem("nelovit"), "nelov");});
test("nelumesc -> nelum", function() {deepEqual( Stem("nelumesc"), "nelum");});
test("nemaiavând -> nemaiav", function() {deepEqual( Stem("nemaiavând"), "nemaiav");});
test("nemaigăsind -> nemaigăs", function() {deepEqual( Stem("nemaigăsind"), "nemaigăs");});
test("nemaipomenit -> nemaipomen", function() {deepEqual( Stem("nemaipomenit"), "nemaipomen");});
test("nemaipomenită -> nemaipomen", function() {deepEqual( Stem("nemaipomenită"), "nemaipomen");});
test("nemaiputându -> nemaiput", function() {deepEqual( Stem("nemaiputându"), "nemaiput");});
test("nematur -> nematur", function() {deepEqual( Stem("nematur"), "nematur");});
test("nemângâiat -> nemângâi", function() {deepEqual( Stem("nemângâiat"), "nemângâi");});
test("nemângâiată -> nemângâi", function() {deepEqual( Stem("nemângâiată"), "nemângâi");});
test("nemărginirii -> nemărginir", function() {deepEqual( Stem("nemărginirii"), "nemărginir");});
test("nemărginit -> nemărgin", function() {deepEqual( Stem("nemărginit"), "nemărgin");});
test("nemărginită -> nemărgin", function() {deepEqual( Stem("nemărginită"), "nemărgin");});
test("nemăritată -> nemărit", function() {deepEqual( Stem("nemăritată"), "nemărit");});
test("nemărturisit -> nemărturis", function() {deepEqual( Stem("nemărturisit"), "nemărturis");});
test("nemărturisită -> nemărturis", function() {deepEqual( Stem("nemărturisită"), "nemărturis");});
test("nemărturisite -> nemărturis", function() {deepEqual( Stem("nemărturisite"), "nemărturis");});
test("nemăsurat -> nemăsur", function() {deepEqual( Stem("nemăsurat"), "nemăsur");});
test("nemeditată -> nemedit", function() {deepEqual( Stem("nemeditată"), "nemedit");});
test("nemereşte -> nemer", function() {deepEqual( Stem("nemereşte"), "nemer");});
test("nemeritată -> nemerit", function() {deepEqual( Stem("nemeritată"), "nemerit");});
test("nemeşteşugit -> nemeşteşug", function() {deepEqual( Stem("nemeşteşugit"), "nemeşteşug");});
test("nemijlocire -> nemijloc", function() {deepEqual( Stem("nemijlocire"), "nemijloc");});
test("nemijlocirea -> nemijloc", function() {deepEqual( Stem("nemijlocirea"), "nemijloc");});
test("nemijlocit -> nemijloc", function() {deepEqual( Stem("nemijlocit"), "nemijloc");});
test("nemijlocite -> nemijloc", function() {deepEqual( Stem("nemijlocite"), "nemijloc");});
test("nemilităreşti -> nemilităr", function() {deepEqual( Stem("nemilităreşti"), "nemilităr");});
test("nemilos -> nemil", function() {deepEqual( Stem("nemilos"), "nemil");});
test("nemiluita -> nemilu", function() {deepEqual( Stem("nemiluita"), "nemilu");});
test("nemişcare -> nemişc", function() {deepEqual( Stem("nemişcare"), "nemişc");});
test("nemişcat -> nemişc", function() {deepEqual( Stem("nemişcat"), "nemişc");});
test("nemişcată -> nemişc", function() {deepEqual( Stem("nemişcată"), "nemişc");});
test("nemişcaţi -> nemişc", function() {deepEqual( Stem("nemişcaţi"), "nemişc");});
test("nemţească -> nemţ", function() {deepEqual( Stem("nemţească"), "nemţ");});
test("nemţeşte -> nemţ", function() {deepEqual( Stem("nemţeşte"), "nemţ");});
test("nemţeşti -> nemţ", function() {deepEqual( Stem("nemţeşti"), "nemţ");});
test("nemţi -> nemţ", function() {deepEqual( Stem("nemţi"), "nemţ");});
test("nemţii -> nemţ", function() {deepEqual( Stem("nemţii"), "nemţ");});
test("nemţilor -> nemţ", function() {deepEqual( Stem("nemţilor"), "nemţ");});
test("nemţofil -> nemţofil", function() {deepEqual( Stem("nemţofil"), "nemţofil");});
test("nemulţumea -> nemulţum", function() {deepEqual( Stem("nemulţumea"), "nemulţum");});
test("nemulţumi -> nemulţum", function() {deepEqual( Stem("nemulţumi"), "nemulţum");});
test("nemulţumire -> nemulţum", function() {deepEqual( Stem("nemulţumire"), "nemulţum");});
test("nemulţumirea -> nemulţum", function() {deepEqual( Stem("nemulţumirea"), "nemulţum");});
test("nemulţumit -> nemulţum", function() {deepEqual( Stem("nemulţumit"), "nemulţum");});
test("nenatural -> nenatural", function() {deepEqual( Stem("nenatural"), "nenatural");});
test("nenaţionale -> nenaţional", function() {deepEqual( Stem("nenaţionale"), "nenaţional");});
test("nene -> nen", function() {deepEqual( Stem("nene"), "nen");});
test("nenorocească -> nenoroc", function() {deepEqual( Stem("nenorocească"), "nenoroc");});
test("nenorocire -> nenoroc", function() {deepEqual( Stem("nenorocire"), "nenoroc");});
test("nenorocirea -> nenoroc", function() {deepEqual( Stem("nenorocirea"), "nenoroc");});
test("nenorociri -> nenorocir", function() {deepEqual( Stem("nenorociri"), "nenorocir");});
test("nenorocirii -> nenorocir", function() {deepEqual( Stem("nenorocirii"), "nenorocir");});
test("nenorocirile -> nenorocir", function() {deepEqual( Stem("nenorocirile"), "nenorocir");});
test("nenorocit -> nenoroc", function() {deepEqual( Stem("nenorocit"), "nenoroc");});
test("nenorocită -> nenoroc", function() {deepEqual( Stem("nenorocită"), "nenoroc");});
test("nenorociţi -> nenoroc", function() {deepEqual( Stem("nenorociţi"), "nenoroc");});
test("nenorociţii -> nenoroc", function() {deepEqual( Stem("nenorociţii"), "nenoroc");});
test("nenumărate -> nenumăr", function() {deepEqual( Stem("nenumărate"), "nenumăr");});
test("nenumăraţi -> nenumăr", function() {deepEqual( Stem("nenumăraţi"), "nenumăr");});
test("neobicinuit -> neobicinu", function() {deepEqual( Stem("neobicinuit"), "neobicinu");});
test("neobişnuit -> neobişnu", function() {deepEqual( Stem("neobişnuit"), "neobişnu");});
test("neobişnuită -> neobişnu", function() {deepEqual( Stem("neobişnuită"), "neobişnu");});
test("neobosit -> neobos", function() {deepEqual( Stem("neobosit"), "neobos");});
test("neobosită -> neobos", function() {deepEqual( Stem("neobosită"), "neobos");});
test("neobosite -> neobos", function() {deepEqual( Stem("neobosite"), "neobos");});
test("neochite -> neochit", function() {deepEqual( Stem("neochite"), "neochit");});
test("neocolit -> neocol", function() {deepEqual( Stem("neocolit"), "neocol");});
test("neocolită -> neocol", function() {deepEqual( Stem("neocolită"), "neocol");});
test("neocupat -> neocup", function() {deepEqual( Stem("neocupat"), "neocup");});
test("neocupată -> neocup", function() {deepEqual( Stem("neocupată"), "neocup");});
test("neofeudalism -> neofeudalist", function() {deepEqual( Stem("neofeudalism"), "neofeudalist");});
test("neofeudalismul -> neofeudalist", function() {deepEqual( Stem("neofeudalismul"), "neofeudalist");});
test("neologismelor -> neologist", function() {deepEqual( Stem("neologismelor"), "neologist");});
test("neopozitiviştii -> neopozitivist", function() {deepEqual( Stem("neopozitiviştii"), "neopozitivist");});
test("neortodoxe -> neortodox", function() {deepEqual( Stem("neortodoxe"), "neortodox");});
test("neostenit -> neosten", function() {deepEqual( Stem("neostenit"), "neosten");});
test("nepământească -> nepământ", function() {deepEqual( Stem("nepământească"), "nepământ");});
test("nepăsare -> nepăs", function() {deepEqual( Stem("nepăsare"), "nepăs");});
test("nepăsătoare -> nepăs", function() {deepEqual( Stem("nepăsătoare"), "nepăs");});
test("nepătruns -> nepătruns", function() {deepEqual( Stem("nepătruns"), "nepătruns");});
test("nepermis -> nepermis", function() {deepEqual( Stem("nepermis"), "nepermis");});
test("neplăcere -> neplăc", function() {deepEqual( Stem("neplăcere"), "neplăc");});
test("neplăcerea -> neplăc", function() {deepEqual( Stem("neplăcerea"), "neplăc");});
test("neplăcut -> neplăc", function() {deepEqual( Stem("neplăcut"), "neplăc");});
test("neplăcută -> neplăc", function() {deepEqual( Stem("neplăcută"), "neplăc");});
test("neplăcute -> neplăc", function() {deepEqual( Stem("neplăcute"), "neplăc");});
test("neplăcutei -> neplăcute", function() {deepEqual( Stem("neplăcutei"), "neplăcute");});
test("nepoatele -> nepoat", function() {deepEqual( Stem("nepoatele"), "nepoat");});
test("nepolitic -> nepolit", function() {deepEqual( Stem("nepolitic"), "nepolit");});
test("nepoliticos -> nepolitic", function() {deepEqual( Stem("nepoliticos"), "nepolitic");});
test("nepot -> nepot", function() {deepEqual( Stem("nepot"), "nepot");});
test("nepotrivit -> nepotriv", function() {deepEqual( Stem("nepotrivit"), "nepotriv");});
test("nepotul -> nepot", function() {deepEqual( Stem("nepotul"), "nepot");});
test("nepotului -> nepot", function() {deepEqual( Stem("nepotului"), "nepot");});
test("nepoţii -> nepoţ", function() {deepEqual( Stem("nepoţii"), "nepoţ");});
test("nepractic -> nepract", function() {deepEqual( Stem("nepractic"), "nepract");});
test("neprecis -> neprecis", function() {deepEqual( Stem("neprecis"), "neprecis");});
test("nepreciziune -> nepreciziun", function() {deepEqual( Stem("nepreciziune"), "nepreciziun");});
test("nepreţuit -> nepreţu", function() {deepEqual( Stem("nepreţuit"), "nepreţu");});
test("neprevăzut -> neprevăz", function() {deepEqual( Stem("neprevăzut"), "neprevăz");});
test("neprevăzută -> neprevăz", function() {deepEqual( Stem("neprevăzută"), "neprevăz");});
test("neprevăzute -> neprevăz", function() {deepEqual( Stem("neprevăzute"), "neprevăz");});
test("neprevăzutul -> neprevăz", function() {deepEqual( Stem("neprevăzutul"), "neprevăz");});
test("neprevenit -> nepreven", function() {deepEqual( Stem("neprevenit"), "nepreven");});
test("neprevenită -> nepreven", function() {deepEqual( Stem("neprevenită"), "nepreven");});
test("nepricepere -> nepricep", function() {deepEqual( Stem("nepricepere"), "nepricep");});
test("neprihăniţi -> neprihăn", function() {deepEqual( Stem("neprihăniţi"), "neprihăn");});
test("neptun -> neptun", function() {deepEqual( Stem("neptun"), "neptun");});
test("nepusă -> nepus", function() {deepEqual( Stem("nepusă"), "nepus");});
test("nepuse -> nepus", function() {deepEqual( Stem("nepuse"), "nepus");});
test("neputincios -> neputinc", function() {deepEqual( Stem("neputincios"), "neputinc");});
test("neputinţa -> neputinţ", function() {deepEqual( Stem("neputinţa"), "neputinţ");});
test("neputinţă -> neputinţ", function() {deepEqual( Stem("neputinţă"), "neputinţ");});
test("neputinţei -> neputinţe", function() {deepEqual( Stem("neputinţei"), "neputinţe");});
test("nerăbdare -> nerăbd", function() {deepEqual( Stem("nerăbdare"), "nerăbd");});
test("nerăbdarea -> nerăbd", function() {deepEqual( Stem("nerăbdarea"), "nerăbd");});
test("nerăbdările -> nerăbdăr", function() {deepEqual( Stem("nerăbdările"), "nerăbdăr");});
test("nerăbdător -> nerăbd", function() {deepEqual( Stem("nerăbdător"), "nerăbd");});
test("nereale -> nereal", function() {deepEqual( Stem("nereale"), "nereal");});
test("nerealizabilă -> nerealiz", function() {deepEqual( Stem("nerealizabilă"), "nerealiz");});
test("nerecunoscut -> nerecunosc", function() {deepEqual( Stem("nerecunoscut"), "nerecunosc");});
test("neredus -> neredus", function() {deepEqual( Stem("neredus"), "neredus");});
test("nereflectată -> nereflect", function() {deepEqual( Stem("nereflectată"), "nereflect");});
test("neregularitate -> neregular", function() {deepEqual( Stem("neregularitate"), "neregular");});
test("neregularităţi -> neregular", function() {deepEqual( Stem("neregularităţi"), "neregular");});
test("neregulat -> neregul", function() {deepEqual( Stem("neregulat"), "neregul");});
test("neregulate -> neregul", function() {deepEqual( Stem("neregulate"), "neregul");});
test("nereparat -> nerepar", function() {deepEqual( Stem("nereparat"), "nerepar");});
test("nereuşit -> nereuş", function() {deepEqual( Stem("nereuşit"), "nereuş");});
test("nereuşite -> nereuş", function() {deepEqual( Stem("nereuşite"), "nereuş");});
test("neroadă -> neroad", function() {deepEqual( Stem("neroadă"), "neroad");});
test("neroade -> neroad", function() {deepEqual( Stem("neroade"), "neroad");});
test("nerozi -> neroz", function() {deepEqual( Stem("nerozi"), "neroz");});
test("nerozie -> neroz", function() {deepEqual( Stem("nerozie"), "neroz");});
test("nerozii -> neroz", function() {deepEqual( Stem("nerozii"), "neroz");});
test("neruşinare -> neruşin", function() {deepEqual( Stem("neruşinare"), "neruşin");});
test("neruşinarea -> neruşin", function() {deepEqual( Stem("neruşinarea"), "neruşin");});
test("neruşinat -> neruşin", function() {deepEqual( Stem("neruşinat"), "neruşin");});
test("neruşinările -> neruşinăr", function() {deepEqual( Stem("neruşinările"), "neruşinăr");});
test("nervi -> nerv", function() {deepEqual( Stem("nervi"), "nerv");});
test("nervii -> nerv", function() {deepEqual( Stem("nervii"), "nerv");});
test("nervilor -> nerv", function() {deepEqual( Stem("nervilor"), "nerv");});
test("nervoasă -> nervoas", function() {deepEqual( Stem("nervoasă"), "nervoas");});
test("nervoase -> nervoas", function() {deepEqual( Stem("nervoase"), "nervoas");});
test("nervos -> nervos", function() {deepEqual( Stem("nervos"), "nervos");});
test("nervoşi -> nervoş", function() {deepEqual( Stem("nervoşi"), "nervoş");});
test("nervozitate -> nervoz", function() {deepEqual( Stem("nervozitate"), "nervoz");});
test("nervozitatea -> nervoz", function() {deepEqual( Stem("nervozitatea"), "nervoz");});
test("nesaţiu -> nesaţiu", function() {deepEqual( Stem("nesaţiu"), "nesaţiu");});
test("nesăbuite -> nesăbu", function() {deepEqual( Stem("nesăbuite"), "nesăbu");});
test("nesănătoase -> nesănăt", function() {deepEqual( Stem("nesănătoase"), "nesănăt");});
test("nesecată -> nesec", function() {deepEqual( Stem("nesecată"), "nesec");});
test("neserioasă -> neser", function() {deepEqual( Stem("neserioasă"), "neser");});
test("neserioase -> neser", function() {deepEqual( Stem("neserioase"), "neser");});
test("neserios -> neser", function() {deepEqual( Stem("neserios"), "neser");});
test("neseriozitatea -> neserioz", function() {deepEqual( Stem("neseriozitatea"), "neserioz");});
test("nesfârşirea -> nesfârş", function() {deepEqual( Stem("nesfârşirea"), "nesfârş");});
test("nesfârşit -> nesfârş", function() {deepEqual( Stem("nesfârşit"), "nesfârş");});
test("nesfârşită -> nesfârş", function() {deepEqual( Stem("nesfârşită"), "nesfârş");});
test("nesfârşite -> nesfârş", function() {deepEqual( Stem("nesfârşite"), "nesfârş");});
test("nesigur -> nesigur", function() {deepEqual( Stem("nesigur"), "nesigur");});
test("nesiguranţa -> nesiguranţ", function() {deepEqual( Stem("nesiguranţa"), "nesiguranţ");});
test("nesigură -> nesig", function() {deepEqual( Stem("nesigură"), "nesig");});
test("nesigure -> nesigur", function() {deepEqual( Stem("nesigure"), "nesigur");});
test("nesilit -> nesil", function() {deepEqual( Stem("nesilit"), "nesil");});
test("nesiliţi -> nesil", function() {deepEqual( Stem("nesiliţi"), "nesil");});
test("nesimţire -> nesimţ", function() {deepEqual( Stem("nesimţire"), "nesimţ");});
test("nesimţirii -> nesimţir", function() {deepEqual( Stem("nesimţirii"), "nesimţir");});
test("nesimţit -> nesimţ", function() {deepEqual( Stem("nesimţit"), "nesimţ");});
test("nesimţite -> nesimţ", function() {deepEqual( Stem("nesimţite"), "nesimţ");});
test("nesimţitori -> nesimţ", function() {deepEqual( Stem("nesimţitori"), "nesimţ");});
test("nesimţiţi -> nesimţ", function() {deepEqual( Stem("nesimţiţi"), "nesimţ");});
test("nesincere -> nesinc", function() {deepEqual( Stem("nesincere"), "nesinc");});
test("nesincerităţii -> nesincer", function() {deepEqual( Stem("nesincerităţii"), "nesincer");});
test("nesocotească -> nesocot", function() {deepEqual( Stem("nesocotească"), "nesocot");});
test("nesocotinţă -> nesocotinţ", function() {deepEqual( Stem("nesocotinţă"), "nesocotinţ");});
test("nesocotirea -> nesocot", function() {deepEqual( Stem("nesocotirea"), "nesocot");});
test("nesocotitelor -> nesocot", function() {deepEqual( Stem("nesocotitelor"), "nesocot");});
test("nesolicitate -> nesol", function() {deepEqual( Stem("nesolicitate"), "nesol");});
test("nesomn -> nesomn", function() {deepEqual( Stem("nesomn"), "nesomn");});
test("nespălat -> nespăl", function() {deepEqual( Stem("nespălat"), "nespăl");});
test("nespecificate -> nespecific", function() {deepEqual( Stem("nespecificate"), "nespecific");});
test("nespecificaţi -> nespecific", function() {deepEqual( Stem("nespecificaţi"), "nespecific");});
test("nespecifice -> nespecif", function() {deepEqual( Stem("nespecifice"), "nespecif");});
test("nesperat -> nesper", function() {deepEqual( Stem("nesperat"), "nesper");});
test("nesperată -> nesper", function() {deepEqual( Stem("nesperată"), "nesper");});
test("nespus -> nespus", function() {deepEqual( Stem("nespus"), "nespus");});
test("nespusă -> nespus", function() {deepEqual( Stem("nespusă"), "nespus");});
test("nestabil -> nestabil", function() {deepEqual( Stem("nestabil"), "nestabil");});
test("nestandardizată -> nestandardiz", function() {deepEqual( Stem("nestandardizată"), "nestandardiz");});
test("nestatornică -> nestatorn", function() {deepEqual( Stem("nestatornică"), "nestatorn");});
test("nestatornicia -> nestatornic", function() {deepEqual( Stem("nestatornicia"), "nestatornic");});
test("nestavilită -> nestavil", function() {deepEqual( Stem("nestavilită"), "nestavil");});
test("nestăpânită -> nestăpân", function() {deepEqual( Stem("nestăpânită"), "nestăpân");});
test("nestăpînită -> nestăpîn", function() {deepEqual( Stem("nestăpînită"), "nestăpîn");});
test("nestăvilit -> nestăvil", function() {deepEqual( Stem("nestăvilit"), "nestăvil");});
test("nestrămutat -> nestrămut", function() {deepEqual( Stem("nestrămutat"), "nestrămut");});
test("nesuferind -> nesufer", function() {deepEqual( Stem("nesuferind"), "nesufer");});
test("nesuferită -> nesufer", function() {deepEqual( Stem("nesuferită"), "nesufer");});
test("nesuferite -> nesufer", function() {deepEqual( Stem("nesuferite"), "nesufer");});
test("nesuportat -> nesuport", function() {deepEqual( Stem("nesuportat"), "nesuport");});
test("neşlefuit -> neşlefu", function() {deepEqual( Stem("neşlefuit"), "neşlefu");});
test("neşovăitoare -> neşov", function() {deepEqual( Stem("neşovăitoare"), "neşov");});
test("neşters -> neşters", function() {deepEqual( Stem("neşters"), "neşters");});
test("neştiind -> neştiind", function() {deepEqual( Stem("neştiind"), "neştiind");});
test("neştiinţa -> neştiinţ", function() {deepEqual( Stem("neştiinţa"), "neştiinţ");});
test("neştiinţă -> neştiinţ", function() {deepEqual( Stem("neştiinţă"), "neştiinţ");});
test("neştiinţifizate -> neştiinţifiz", function() {deepEqual( Stem("neştiinţifizate"), "neştiinţifiz");});
test("neştiut -> neştiut", function() {deepEqual( Stem("neştiut"), "neştiut");});
test("neştiuţi -> neştiuţ", function() {deepEqual( Stem("neştiuţi"), "neştiuţ");});
test("net -> net", function() {deepEqual( Stem("net"), "net");});
test("netăgăduită -> netăgădu", function() {deepEqual( Stem("netăgăduită"), "netăgădu");});
test("neted -> neted", function() {deepEqual( Stem("neted"), "neted");});
test("netedă -> neted", function() {deepEqual( Stem("netedă"), "neted");});
test("netezind -> netez", function() {deepEqual( Stem("netezind"), "netez");});
test("netransformat -> netransform", function() {deepEqual( Stem("netransformat"), "netransform");});
test("netrăite -> netrăit", function() {deepEqual( Stem("netrăite"), "netrăit");});
test("netrimisă -> netrimis", function() {deepEqual( Stem("netrimisă"), "netrimis");});
test("netulburat -> netulbur", function() {deepEqual( Stem("netulburat"), "netulbur");});
test("netulburaţi -> netulbur", function() {deepEqual( Stem("netulburaţi"), "netulbur");});
test("netuns -> netuns", function() {deepEqual( Stem("netuns"), "netuns");});
test("neturburat -> neturbur", function() {deepEqual( Stem("neturburat"), "neturbur");});
test("neturburaţi -> neturbur", function() {deepEqual( Stem("neturburaţi"), "neturbur");});
test("neţinând -> neţin", function() {deepEqual( Stem("neţinând"), "neţin");});
test("neue -> neu", function() {deepEqual( Stem("neue"), "neu");});
test("neuitată -> neuit", function() {deepEqual( Stem("neuitată"), "neuit");});
test("neuniformitatea -> neuniform", function() {deepEqual( Stem("neuniformitatea"), "neuniform");});
test("neutralitate -> neutral", function() {deepEqual( Stem("neutralitate"), "neutral");});
test("neutralitatea -> neutral", function() {deepEqual( Stem("neutralitatea"), "neutral");});
test("neutralităţii -> neutral", function() {deepEqual( Stem("neutralităţii"), "neutral");});
test("neutră -> neutr", function() {deepEqual( Stem("neutră"), "neutr");});
test("neutri -> neutr", function() {deepEqual( Stem("neutri"), "neutr");});
test("nevalabile -> neval", function() {deepEqual( Stem("nevalabile"), "neval");});
test("nevasta -> nevast", function() {deepEqual( Stem("nevasta"), "nevast");});
test("nevastă -> nevast", function() {deepEqual( Stem("nevastă"), "nevast");});
test("nevârstnică -> nevârstn", function() {deepEqual( Stem("nevârstnică"), "nevârstn");});
test("nevăzut -> nevăz", function() {deepEqual( Stem("nevăzut"), "nevăz");});
test("nevăzută -> nevăz", function() {deepEqual( Stem("nevăzută"), "nevăz");});
test("nevăzuţi -> nevăzuţ", function() {deepEqual( Stem("nevăzuţi"), "nevăzuţ");});
test("neverbală -> neverbal", function() {deepEqual( Stem("neverbală"), "neverbal");});
test("neverbale -> neverbal", function() {deepEqual( Stem("neverbale"), "neverbal");});
test("neverosimilă -> neverosimil", function() {deepEqual( Stem("neverosimilă"), "neverosimil");});
test("neveste -> nevest", function() {deepEqual( Stem("neveste"), "nevest");});
test("nevestei -> neveste", function() {deepEqual( Stem("nevestei"), "neveste");});
test("nevestele -> nevest", function() {deepEqual( Stem("nevestele"), "nevest");});
test("nevestelor -> nevest", function() {deepEqual( Stem("nevestelor"), "nevest");});
test("nevesti -> nevest", function() {deepEqual( Stem("nevesti"), "nevest");});
test("nevinovat -> nevinov", function() {deepEqual( Stem("nevinovat"), "nevinov");});
test("nevinovată -> nevinov", function() {deepEqual( Stem("nevinovată"), "nevinov");});
test("nevoi -> nevo", function() {deepEqual( Stem("nevoi"), "nevo");});
test("nevoia -> nevoi", function() {deepEqual( Stem("nevoia"), "nevoi");});
test("nevoiaşă -> nevoiaş", function() {deepEqual( Stem("nevoiaşă"), "nevoiaş");});
test("nevoie -> nevoi", function() {deepEqual( Stem("nevoie"), "nevoi");});
test("nevoile -> nevo", function() {deepEqual( Stem("nevoile"), "nevo");});
test("nevoit -> nevoit", function() {deepEqual( Stem("nevoit"), "nevoit");});
test("nevoiţi -> nevo", function() {deepEqual( Stem("nevoiţi"), "nevo");});
test("nevrând -> nevr", function() {deepEqual( Stem("nevrând"), "nevr");});
test("nevroză -> nevroz", function() {deepEqual( Stem("nevroză"), "nevroz");});
test("newtonian -> newtonian", function() {deepEqual( Stem("newtonian"), "newtonian");});
test("ni -> ni", function() {deepEqual( Stem("ni"), "ni");});
test("nicăieri -> nicăier", function() {deepEqual( Stem("nicăieri"), "nicăier");});
test("nici -> nic", function() {deepEqual( Stem("nici"), "nic");});
test("nicidecum -> nicidecum", function() {deepEqual( Stem("nicidecum"), "nicidecum");});
test("niciodată -> niciod", function() {deepEqual( Stem("niciodată"), "niciod");});
test("nicolae -> nicola", function() {deepEqual( Stem("nicolae"), "nicola");});
test("niculae -> nicula", function() {deepEqual( Stem("niculae"), "nicula");});
test("nicule -> nicul", function() {deepEqual( Stem("nicule"), "nicul");});
test("nicuşor -> nicuşor", function() {deepEqual( Stem("nicuşor"), "nicuşor");});
test("nien -> nien", function() {deepEqual( Stem("nien"), "nien");});
test("nietzsche -> nietzsch", function() {deepEqual( Stem("nietzsche"), "nietzsch");});
test("nietzscheism -> nietzscheism", function() {deepEqual( Stem("nietzscheism"), "nietzscheism");});
test("nihil -> nihil", function() {deepEqual( Stem("nihil"), "nihil");});
test("nihilo -> nihilo", function() {deepEqual( Stem("nihilo"), "nihilo");});
test("nimănui -> nimăn", function() {deepEqual( Stem("nimănui"), "nimăn");});
test("nimeni -> nimen", function() {deepEqual( Stem("nimeni"), "nimen");});
test("nimeresc -> nimer", function() {deepEqual( Stem("nimeresc"), "nimer");});
test("nimeri -> nimer", function() {deepEqual( Stem("nimeri"), "nimer");});
test("nimerit -> nimer", function() {deepEqual( Stem("nimerit"), "nimer");});
test("nimeriţi -> nimer", function() {deepEqual( Stem("nimeriţi"), "nimer");});
test("nimfele -> nimf", function() {deepEqual( Stem("nimfele"), "nimf");});
test("nimic -> nimic", function() {deepEqual( Stem("nimic"), "nimic");});
test("nimicuri -> nimicur", function() {deepEqual( Stem("nimicuri"), "nimicur");});
test("nisip -> nisip", function() {deepEqual( Stem("nisip"), "nisip");});
test("nisipoase -> nisip", function() {deepEqual( Stem("nisipoase"), "nisip");});
test("nisipului -> nisip", function() {deepEqual( Stem("nisipului"), "nisip");});
test("nistor -> nistor", function() {deepEqual( Stem("nistor"), "nistor");});
test("nistore -> nistor", function() {deepEqual( Stem("nistore"), "nistor");});
test("nişte -> nişt", function() {deepEqual( Stem("nişte"), "nişt");});
test("nituri -> nitur", function() {deepEqual( Stem("nituri"), "nitur");});
test("niţeasca -> niţeasc", function() {deepEqual( Stem("niţeasca"), "niţeasc");});
test("niţel -> niţel", function() {deepEqual( Stem("niţel"), "niţel");});
test("niţică -> niţic", function() {deepEqual( Stem("niţică"), "niţic");});
test("nivelare -> nivel", function() {deepEqual( Stem("nivelare"), "nivel");});
test("nivelului -> nivel", function() {deepEqual( Stem("nivelului"), "nivel");});
test("noapte -> noapt", function() {deepEqual( Stem("noapte"), "noapt");});
test("noaptea -> noapt", function() {deepEqual( Stem("noaptea"), "noapt");});
test("noaste -> noast", function() {deepEqual( Stem("noaste"), "noast");});
test("noastră -> noastr", function() {deepEqual( Stem("noastră"), "noastr");});
test("noastre -> noastr", function() {deepEqual( Stem("noastre"), "noastr");});
test("nobil -> nobil", function() {deepEqual( Stem("nobil"), "nobil");});
test("nobilă -> nobil", function() {deepEqual( Stem("nobilă"), "nobil");});
test("nobiliare -> nobiliar", function() {deepEqual( Stem("nobiliare"), "nobiliar");});
test("nobilimea -> nobilim", function() {deepEqual( Stem("nobilimea"), "nobilim");});
test("nobilimii -> nobilim", function() {deepEqual( Stem("nobilimii"), "nobilim");});
test("nobilul -> nobil", function() {deepEqual( Stem("nobilul"), "nobil");});
test("nobilului -> nobil", function() {deepEqual( Stem("nobilului"), "nobil");});
test("nobleţe -> nobleţ", function() {deepEqual( Stem("nobleţe"), "nobleţ");});
test("nobleţea -> nobleţ", function() {deepEqual( Stem("nobleţea"), "nobleţ");});
test("nod -> nod", function() {deepEqual( Stem("nod"), "nod");});
test("nodul -> nod", function() {deepEqual( Stem("nodul"), "nod");});
test("noi -> noi", function() {deepEqual( Stem("noi"), "noi");});
test("noii -> noi", function() {deepEqual( Stem("noii"), "noi");});
test("noimă -> noim", function() {deepEqual( Stem("noimă"), "noim");});
test("nomenclatura -> nomenclatur", function() {deepEqual( Stem("nomenclatura"), "nomenclatur");});
test("non -> non", function() {deepEqual( Stem("non"), "non");});
test("noo -> noo", function() {deepEqual( Stem("noo"), "noo");});
test("nopţei -> nopţe", function() {deepEqual( Stem("nopţei"), "nopţe");});
test("nopţi -> nopţ", function() {deepEqual( Stem("nopţi"), "nopţ");});
test("nopţii -> nopţ", function() {deepEqual( Stem("nopţii"), "nopţ");});
test("nopţile -> nopţ", function() {deepEqual( Stem("nopţile"), "nopţ");});
test("nopţilor -> nopţ", function() {deepEqual( Stem("nopţilor"), "nopţ");});
test("nor -> nor", function() {deepEqual( Stem("nor"), "nor");});
test("nord -> nord", function() {deepEqual( Stem("nord"), "nord");});
test("nordul -> nord", function() {deepEqual( Stem("nordul"), "nord");});
test("nori -> nor", function() {deepEqual( Stem("nori"), "nor");});
test("norişorii -> norişor", function() {deepEqual( Stem("norişorii"), "norişor");});
test("normal -> normal", function() {deepEqual( Stem("normal"), "normal");});
test("normală -> normal", function() {deepEqual( Stem("normală"), "normal");});
test("normale -> normal", function() {deepEqual( Stem("normale"), "normal");});
test("normalitate -> normal", function() {deepEqual( Stem("normalitate"), "normal");});
test("normalul -> normal", function() {deepEqual( Stem("normalul"), "normal");});
test("norman -> norman", function() {deepEqual( Stem("norman"), "norman");});
test("normare -> norm", function() {deepEqual( Stem("normare"), "norm");});
test("normativ -> normat", function() {deepEqual( Stem("normativ"), "normat");});
test("normativă -> normat", function() {deepEqual( Stem("normativă"), "normat");});
test("normă -> norm", function() {deepEqual( Stem("normă"), "norm");});
test("norme -> norm", function() {deepEqual( Stem("norme"), "norm");});
test("normele -> norm", function() {deepEqual( Stem("normele"), "norm");});
test("normelor -> norm", function() {deepEqual( Stem("normelor"), "norm");});
test("noroc -> noroc", function() {deepEqual( Stem("noroc"), "noroc");});
test("norocul -> noroc", function() {deepEqual( Stem("norocul"), "noroc");});
test("norocului -> noroc", function() {deepEqual( Stem("norocului"), "noroc");});
test("norodul -> norod", function() {deepEqual( Stem("norodul"), "norod");});
test("noroi -> noro", function() {deepEqual( Stem("noroi"), "noro");});
test("noroioşi -> noroi", function() {deepEqual( Stem("noroioşi"), "noroi");});
test("noroiul -> noroi", function() {deepEqual( Stem("noroiul"), "noroi");});
test("noroiului -> noroi", function() {deepEqual( Stem("noroiului"), "noroi");});
test("norvegiei -> norveg", function() {deepEqual( Stem("norvegiei"), "norveg");});
test("nostru -> nostru", function() {deepEqual( Stem("nostru"), "nostru");});
test("noştri -> noştr", function() {deepEqual( Stem("noştri"), "noştr");});
test("nota -> not", function() {deepEqual( Stem("nota"), "not");});
test("notari -> notar", function() {deepEqual( Stem("notari"), "notar");});
test("notau -> notau", function() {deepEqual( Stem("notau"), "notau");});
test("notă -> not", function() {deepEqual( Stem("notă"), "not");});
test("notăm -> not", function() {deepEqual( Stem("notăm"), "not");});
test("note -> not", function() {deepEqual( Stem("note"), "not");});
test("notele -> not", function() {deepEqual( Stem("notele"), "not");});
test("notez -> notez", function() {deepEqual( Stem("notez"), "notez");});
test("noţiune -> noţiun", function() {deepEqual( Stem("noţiune"), "noţiun");});
test("noţiunea -> noţiun", function() {deepEqual( Stem("noţiunea"), "noţiun");});
test("noţiuni -> noţiun", function() {deepEqual( Stem("noţiuni"), "noţiun");});
test("noţiunile -> noţiun", function() {deepEqual( Stem("noţiunile"), "noţiun");});
test("nou -> nou", function() {deepEqual( Stem("nou"), "nou");});
test("noua -> nou", function() {deepEqual( Stem("noua"), "nou");});
test("nouă -> nou", function() {deepEqual( Stem("nouă"), "nou");});
test("nouăzeci -> nouăzec", function() {deepEqual( Stem("nouăzeci"), "nouăzec");});
test("noul -> noul", function() {deepEqual( Stem("noul"), "noul");});
test("noumen -> noumen", function() {deepEqual( Stem("noumen"), "noumen");});
test("noumenului -> noumen", function() {deepEqual( Stem("noumenului"), "noumen");});
test("nour -> nour", function() {deepEqual( Stem("nour"), "nour");});
test("noutate -> noutat", function() {deepEqual( Stem("noutate"), "noutat");});
test("noutatea -> noutat", function() {deepEqual( Stem("noutatea"), "noutat");});
test("noutăţi -> noutăţ", function() {deepEqual( Stem("noutăţi"), "noutăţ");});
test("noutăţii -> noutăţ", function() {deepEqual( Stem("noutăţii"), "noutăţ");});
test("novicea -> novic", function() {deepEqual( Stem("novicea"), "novic");});
test("novicii -> novic", function() {deepEqual( Stem("novicii"), "novic");});
test("nşală -> nşal", function() {deepEqual( Stem("nşală"), "nşal");});
test("nşel -> nşel", function() {deepEqual( Stem("nşel"), "nşel");});
test("ntreabă -> ntreab", function() {deepEqual( Stem("ntreabă"), "ntreab");});
test("ntregi -> ntreg", function() {deepEqual( Stem("ntregi"), "ntreg");});
test("nţelege -> nţeleg", function() {deepEqual( Stem("nţelege"), "nţeleg");});
test("nu -> nu", function() {deepEqual( Stem("nu"), "nu");});
test("nuanţa -> nuanţ", function() {deepEqual( Stem("nuanţa"), "nuanţ");});
test("nuanţă -> nuanţ", function() {deepEqual( Stem("nuanţă"), "nuanţ");});
test("nuanţe -> nuanţ", function() {deepEqual( Stem("nuanţe"), "nuanţ");});
test("nuanţele -> nuanţ", function() {deepEqual( Stem("nuanţele"), "nuanţ");});
test("nucleu -> nucleu", function() {deepEqual( Stem("nucleu"), "nucleu");});
test("nud -> nud", function() {deepEqual( Stem("nud"), "nud");});
test("nuiaua -> nuiau", function() {deepEqual( Stem("nuiaua"), "nuiau");});
test("nuiele -> nui", function() {deepEqual( Stem("nuiele"), "nui");});
test("nul -> nul", function() {deepEqual( Stem("nul"), "nul");});
test("nule -> nul", function() {deepEqual( Stem("nule"), "nul");});
test("numai -> numa", function() {deepEqual( Stem("numai"), "numa");});
test("numaidecât -> numaidecât", function() {deepEqual( Stem("numaidecât"), "numaidecât");});
test("număr -> număr", function() {deepEqual( Stem("număr"), "număr");});
test("numărând -> număr", function() {deepEqual( Stem("numărând"), "număr");});
test("numără -> număr", function() {deepEqual( Stem("numără"), "număr");});
test("numărul -> număr", function() {deepEqual( Stem("numărul"), "număr");});
test("numărului -> număr", function() {deepEqual( Stem("numărului"), "număr");});
test("nume -> num", function() {deepEqual( Stem("nume"), "num");});
test("numea -> num", function() {deepEqual( Stem("numea"), "num");});
test("numeam -> numeam", function() {deepEqual( Stem("numeam"), "numeam");});
test("numească -> numeasc", function() {deepEqual( Stem("numească"), "numeasc");});
test("numeau -> numeau", function() {deepEqual( Stem("numeau"), "numeau");});
test("numele -> num", function() {deepEqual( Stem("numele"), "num");});
test("numelui -> numel", function() {deepEqual( Stem("numelui"), "numel");});
test("numen -> numen", function() {deepEqual( Stem("numen"), "numen");});
test("numenul -> numen", function() {deepEqual( Stem("numenul"), "numen");});
test("numere -> numer", function() {deepEqual( Stem("numere"), "numer");});
test("numerele -> numer", function() {deepEqual( Stem("numerele"), "numer");});
test("numerelor -> numer", function() {deepEqual( Stem("numerelor"), "numer");});
test("numeric -> numer", function() {deepEqual( Stem("numeric"), "numer");});
test("numerică -> numer", function() {deepEqual( Stem("numerică"), "numer");});
test("numeroase -> numer", function() {deepEqual( Stem("numeroase"), "numer");});
test("numeroasele -> numer", function() {deepEqual( Stem("numeroasele"), "numer");});
test("numeros -> numer", function() {deepEqual( Stem("numeros"), "numer");});
test("numeroşi -> numer", function() {deepEqual( Stem("numeroşi"), "numer");});
test("numesc -> numesc", function() {deepEqual( Stem("numesc"), "numesc");});
test("numeşte -> numeşt", function() {deepEqual( Stem("numeşte"), "numeşt");});
test("numi -> num", function() {deepEqual( Stem("numi"), "num");});
test("numim -> num", function() {deepEqual( Stem("numim"), "num");});
test("numirea -> numir", function() {deepEqual( Stem("numirea"), "numir");});
test("numiri -> numir", function() {deepEqual( Stem("numiri"), "numir");});
test("numise -> numis", function() {deepEqual( Stem("numise"), "numis");});
test("numit -> numit", function() {deepEqual( Stem("numit"), "numit");});
test("numita -> numit", function() {deepEqual( Stem("numita"), "numit");});
test("numită -> numit", function() {deepEqual( Stem("numită"), "numit");});
test("numite -> numit", function() {deepEqual( Stem("numite"), "numit");});
test("numitei -> numite", function() {deepEqual( Stem("numitei"), "numite");});
test("numitele -> numit", function() {deepEqual( Stem("numitele"), "numit");});
test("numitelor -> numit", function() {deepEqual( Stem("numitelor"), "numit");});
test("numitul -> numit", function() {deepEqual( Stem("numitul"), "numit");});
test("numiţii -> num", function() {deepEqual( Stem("numiţii"), "num");});
test("nunta -> nunt", function() {deepEqual( Stem("nunta"), "nunt");});
test("nutreţ -> nutreţ", function() {deepEqual( Stem("nutreţ"), "nutreţ");});
test("nutrită -> nutrit", function() {deepEqual( Stem("nutrită"), "nutrit");});
test("nvăţa -> nvăţ", function() {deepEqual( Stem("nvăţa"), "nvăţ");});
test("o -> o", function() {deepEqual( Stem("o"), "o");});
test("oacheşă -> oacheş", function() {deepEqual( Stem("oacheşă"), "oacheş");});
test("oaie -> oai", function() {deepEqual( Stem("oaie"), "oai");});
test("oala -> oal", function() {deepEqual( Stem("oala"), "oal");});
test("oală -> oal", function() {deepEqual( Stem("oală"), "oal");});
test("oameni -> oamen", function() {deepEqual( Stem("oameni"), "oamen");});
test("oamenii -> oamen", function() {deepEqual( Stem("oamenii"), "oamen");});
test("oamenilor -> oamen", function() {deepEqual( Stem("oamenilor"), "oamen");});
test("oancea -> oanc", function() {deepEqual( Stem("oancea"), "oanc");});
test("oară -> oar", function() {deepEqual( Stem("oară"), "oar");});
test("oarbă -> oarb", function() {deepEqual( Stem("oarbă"), "oarb");});
test("oarbe -> oarb", function() {deepEqual( Stem("oarbe"), "oarb");});
test("oare -> oar", function() {deepEqual( Stem("oare"), "oar");});
test("oarecare -> oarec", function() {deepEqual( Stem("oarecare"), "oarec");});
test("oarecari -> oarecar", function() {deepEqual( Stem("oarecari"), "oarecar");});
test("oarece -> oarec", function() {deepEqual( Stem("oarece"), "oarec");});
test("oarecum -> oarecum", function() {deepEqual( Stem("oarecum"), "oarecum");});
test("oase -> oas", function() {deepEqual( Stem("oase"), "oas");});
test("oaselor -> oas", function() {deepEqual( Stem("oaselor"), "oas");});
test("oaspete -> oaspet", function() {deepEqual( Stem("oaspete"), "oaspet");});
test("oaspetelui -> oaspetel", function() {deepEqual( Stem("oaspetelui"), "oaspetel");});
test("oaspeţi -> oasp", function() {deepEqual( Stem("oaspeţi"), "oasp");});
test("oaste -> oast", function() {deepEqual( Stem("oaste"), "oast");});
test("oastea -> oast", function() {deepEqual( Stem("oastea"), "oast");});
test("oază -> oaz", function() {deepEqual( Stem("oază"), "oaz");});
test("oazei -> oaze", function() {deepEqual( Stem("oazei"), "oaze");});
test("obedient -> obedient", function() {deepEqual( Stem("obedient"), "obedient");});
test("obedienţă -> obedienţ", function() {deepEqual( Stem("obedienţă"), "obedienţ");});
test("obeze -> obez", function() {deepEqual( Stem("obeze"), "obez");});
test("obicei -> obice", function() {deepEqual( Stem("obicei"), "obice");});
test("obiceiul -> obicei", function() {deepEqual( Stem("obiceiul"), "obicei");});
test("obiceiuri -> obiceiur", function() {deepEqual( Stem("obiceiuri"), "obiceiur");});
test("obiceiurile -> obiceiur", function() {deepEqual( Stem("obiceiurile"), "obiceiur");});
test("obicinuia -> obicinui", function() {deepEqual( Stem("obicinuia"), "obicinui");});
test("obicinuit -> obicinu", function() {deepEqual( Stem("obicinuit"), "obicinu");});
test("obicinuită -> obicinu", function() {deepEqual( Stem("obicinuită"), "obicinu");});
test("obidă -> obid", function() {deepEqual( Stem("obidă"), "obid");});
test("obiect -> obiect", function() {deepEqual( Stem("obiect"), "obiect");});
test("obiecta -> obiect", function() {deepEqual( Stem("obiecta"), "obiect");});
test("obiectat -> obiect", function() {deepEqual( Stem("obiectat"), "obiect");});
test("obiecte -> obiect", function() {deepEqual( Stem("obiecte"), "obiect");});
test("obiectează -> obiect", function() {deepEqual( Stem("obiectează"), "obiect");});
test("obiectele -> obiect", function() {deepEqual( Stem("obiectele"), "obiect");});
test("obiectelor -> obiect", function() {deepEqual( Stem("obiectelor"), "obiect");});
test("obiectez -> obiect", function() {deepEqual( Stem("obiectez"), "obiect");});
test("obiectiv -> obiect", function() {deepEqual( Stem("obiectiv"), "obiect");});
test("obiectivă -> obiect", function() {deepEqual( Stem("obiectivă"), "obiect");});
test("obiective -> obiect", function() {deepEqual( Stem("obiective"), "obiect");});
test("obiectivelor -> obiect", function() {deepEqual( Stem("obiectivelor"), "obiect");});
test("obiectivitate -> obiect", function() {deepEqual( Stem("obiectivitate"), "obiect");});
test("obiectivitatea -> obiect", function() {deepEqual( Stem("obiectivitatea"), "obiect");});
test("obiectul -> obiect", function() {deepEqual( Stem("obiectul"), "obiect");});
test("obiectului -> obiect", function() {deepEqual( Stem("obiectului"), "obiect");});
test("obiecţia -> obiecţ", function() {deepEqual( Stem("obiecţia"), "obiecţ");});
test("obiecţie -> obiecţ", function() {deepEqual( Stem("obiecţie"), "obiecţ");});
test("obiecţii -> obiecţ", function() {deepEqual( Stem("obiecţii"), "obiecţ");});
test("obiecţiile -> obiecţ", function() {deepEqual( Stem("obiecţiile"), "obiecţ");});
test("obiecţiune -> obiect", function() {deepEqual( Stem("obiecţiune"), "obiect");});
test("obiecţiunea -> obiect", function() {deepEqual( Stem("obiecţiunea"), "obiect");});
test("obişnui -> obişn", function() {deepEqual( Stem("obişnui"), "obişn");});
test("obişnuia -> obişnui", function() {deepEqual( Stem("obişnuia"), "obişnui");});
test("obişnuieşte -> obişnui", function() {deepEqual( Stem("obişnuieşte"), "obişnui");});
test("obişnuieşti -> obişnui", function() {deepEqual( Stem("obişnuieşti"), "obişnui");});
test("obişnuinţe -> obişnuinţ", function() {deepEqual( Stem("obişnuinţe"), "obişnuinţ");});
test("obişnuit -> obişnu", function() {deepEqual( Stem("obişnuit"), "obişnu");});
test("obişnuită -> obişnu", function() {deepEqual( Stem("obişnuită"), "obişnu");});
test("obişnuite -> obişnu", function() {deepEqual( Stem("obişnuite"), "obişnu");});
test("obişnuiţi -> obişnu", function() {deepEqual( Stem("obişnuiţi"), "obişnu");});
test("oblic -> oblic", function() {deepEqual( Stem("oblic"), "oblic");});
test("oblică -> oblic", function() {deepEqual( Stem("oblică"), "oblic");});
test("obliga -> oblig", function() {deepEqual( Stem("obliga"), "oblig");});
test("obligase -> oblig", function() {deepEqual( Stem("obligase"), "oblig");});
test("obligat -> oblig", function() {deepEqual( Stem("obligat"), "oblig");});
test("obligativităţi -> oblig", function() {deepEqual( Stem("obligativităţi"), "oblig");});
test("obligator -> oblig", function() {deepEqual( Stem("obligator"), "oblig");});
test("obligatorie -> obligator", function() {deepEqual( Stem("obligatorie"), "obligator");});
test("obligaţia -> oblig", function() {deepEqual( Stem("obligaţia"), "oblig");});
test("obligaţie -> oblig", function() {deepEqual( Stem("obligaţie"), "oblig");});
test("obligaţii -> oblig", function() {deepEqual( Stem("obligaţii"), "oblig");});
test("obligaţiile -> oblig", function() {deepEqual( Stem("obligaţiile"), "oblig");});
test("obligaţiune -> oblig", function() {deepEqual( Stem("obligaţiune"), "oblig");});
test("obligă -> oblig", function() {deepEqual( Stem("obligă"), "oblig");});
test("oblige -> oblig", function() {deepEqual( Stem("oblige"), "oblig");});
test("obloane -> obloan", function() {deepEqual( Stem("obloane"), "obloan");});
test("obor -> obor", function() {deepEqual( Stem("obor"), "obor");});
test("oborului -> obor", function() {deepEqual( Stem("oborului"), "obor");});
test("oboseala -> oboseal", function() {deepEqual( Stem("oboseala"), "oboseal");});
test("oboseală -> oboseal", function() {deepEqual( Stem("oboseală"), "oboseal");});
test("oboselii -> obosel", function() {deepEqual( Stem("oboselii"), "obosel");});
test("obosim -> obos", function() {deepEqual( Stem("obosim"), "obos");});
test("obosit -> obos", function() {deepEqual( Stem("obosit"), "obos");});
test("obosită -> obos", function() {deepEqual( Stem("obosită"), "obos");});
test("obosite -> obos", function() {deepEqual( Stem("obosite"), "obos");});
test("obositoare -> obos", function() {deepEqual( Stem("obositoare"), "obos");});
test("obosiţi -> obos", function() {deepEqual( Stem("obosiţi"), "obos");});
test("obraji -> obraj", function() {deepEqual( Stem("obraji"), "obraj");});
test("obrajii -> obraj", function() {deepEqual( Stem("obrajii"), "obraj");});
test("obrajilor -> obraj", function() {deepEqual( Stem("obrajilor"), "obraj");});
test("obraz -> obraz", function() {deepEqual( Stem("obraz"), "obraz");});
test("obraznic -> obrazn", function() {deepEqual( Stem("obraznic"), "obrazn");});
test("obraznică -> obrazn", function() {deepEqual( Stem("obraznică"), "obrazn");});
test("obraznice -> obrazn", function() {deepEqual( Stem("obraznice"), "obrazn");});
test("obrazul -> obraz", function() {deepEqual( Stem("obrazul"), "obraz");});
test("obrazurile -> obrazur", function() {deepEqual( Stem("obrazurile"), "obrazur");});
test("obrăzniceşte -> obrăznic", function() {deepEqual( Stem("obrăzniceşte"), "obrăznic");});
test("obrăznicie -> obrăznic", function() {deepEqual( Stem("obrăznicie"), "obrăznic");});
test("obscure -> obscur", function() {deepEqual( Stem("obscure"), "obscur");});
test("obscuri -> obscur", function() {deepEqual( Stem("obscuri"), "obscur");});
test("obsedante -> obsed", function() {deepEqual( Stem("obsedante"), "obsed");});
test("obsedat -> obsed", function() {deepEqual( Stem("obsedat"), "obsed");});
test("obsedaţi -> obsed", function() {deepEqual( Stem("obsedaţi"), "obsed");});
test("observ -> observ", function() {deepEqual( Stem("observ"), "observ");});
test("observa -> observ", function() {deepEqual( Stem("observa"), "observ");});
test("observabil -> observ", function() {deepEqual( Stem("observabil"), "observ");});
test("observam -> observ", function() {deepEqual( Stem("observam"), "observ");});
test("observarea -> observ", function() {deepEqual( Stem("observarea"), "observ");});
test("observat -> observ", function() {deepEqual( Stem("observat"), "observ");});
test("observată -> observ", function() {deepEqual( Stem("observată"), "observ");});
test("observatorii -> observ", function() {deepEqual( Stem("observatorii"), "observ");});
test("observatorul -> observ", function() {deepEqual( Stem("observatorul"), "observ");});
test("observaţia -> observ", function() {deepEqual( Stem("observaţia"), "observ");});
test("observaţie -> observ", function() {deepEqual( Stem("observaţie"), "observ");});
test("observaţiei -> observ", function() {deepEqual( Stem("observaţiei"), "observ");});
test("observaţii -> observ", function() {deepEqual( Stem("observaţii"), "observ");});
test("observaţiile -> observ", function() {deepEqual( Stem("observaţiile"), "observ");});
test("observând -> observ", function() {deepEqual( Stem("observând"), "observ");});
test("observă -> observ", function() {deepEqual( Stem("observă"), "observ");});
test("observăm -> observ", function() {deepEqual( Stem("observăm"), "observ");});
test("observe -> observ", function() {deepEqual( Stem("observe"), "observ");});
test("observi -> observ", function() {deepEqual( Stem("observi"), "observ");});
test("obsesia -> obses", function() {deepEqual( Stem("obsesia"), "obses");});
test("obsesie -> obses", function() {deepEqual( Stem("obsesie"), "obses");});
test("obsesii -> obses", function() {deepEqual( Stem("obsesii"), "obses");});
test("obsesiune -> obsesiun", function() {deepEqual( Stem("obsesiune"), "obsesiun");});
test("obsesiuni -> obsesiun", function() {deepEqual( Stem("obsesiuni"), "obsesiun");});
test("obstacolele -> obstacol", function() {deepEqual( Stem("obstacolele"), "obstacol");});
test("obştesc -> obştesc", function() {deepEqual( Stem("obştesc"), "obştesc");});
test("obtuzi -> obtuz", function() {deepEqual( Stem("obtuzi"), "obtuz");});
test("obţin -> obţin", function() {deepEqual( Stem("obţin"), "obţin");});
test("obţină -> obţin", function() {deepEqual( Stem("obţină"), "obţin");});
test("obţine -> obţin", function() {deepEqual( Stem("obţine"), "obţin");});
test("obţinusem -> obţin", function() {deepEqual( Stem("obţinusem"), "obţin");});
test("obţinut -> obţin", function() {deepEqual( Stem("obţinut"), "obţin");});
test("obţinute -> obţin", function() {deepEqual( Stem("obţinute"), "obţin");});
test("obuz -> obuz", function() {deepEqual( Stem("obuz"), "obuz");});
test("obuze -> obuz", function() {deepEqual( Stem("obuze"), "obuz");});
test("obuzele -> obuz", function() {deepEqual( Stem("obuzele"), "obuz");});
test("obuzul -> obuz", function() {deepEqual( Stem("obuzul"), "obuz");});
test("obuzului -> obuz", function() {deepEqual( Stem("obuzului"), "obuz");});
test("ocazia -> ocaz", function() {deepEqual( Stem("ocazia"), "ocaz");});
test("ocazie -> ocaz", function() {deepEqual( Stem("ocazie"), "ocaz");});
test("ocazii -> ocaz", function() {deepEqual( Stem("ocazii"), "ocaz");});
test("ocaziune -> ocaziun", function() {deepEqual( Stem("ocaziune"), "ocaziun");});
test("ocărască -> ocărasc", function() {deepEqual( Stem("ocărască"), "ocărasc");});
test("ocări -> ocăr", function() {deepEqual( Stem("ocări"), "ocăr");});
test("occidental -> occidental", function() {deepEqual( Stem("occidental"), "occidental");});
test("occidentale -> occidental", function() {deepEqual( Stem("occidentale"), "occidental");});
test("ocean -> ocean", function() {deepEqual( Stem("ocean"), "ocean");});
test("ochească -> ocheasc", function() {deepEqual( Stem("ochească"), "ocheasc");});
test("ochelari -> ochelar", function() {deepEqual( Stem("ochelari"), "ochelar");});
test("ochelarii -> ochelar", function() {deepEqual( Stem("ochelarii"), "ochelar");});
test("ochesc -> ochesc", function() {deepEqual( Stem("ochesc"), "ochesc");});
test("ocheşte -> ocheşt", function() {deepEqual( Stem("ocheşte"), "ocheşt");});
test("ochi -> ochi", function() {deepEqual( Stem("ochi"), "ochi");});
test("ochii -> ochi", function() {deepEqual( Stem("ochii"), "ochi");});
test("ochilor -> ochi", function() {deepEqual( Stem("ochilor"), "ochi");});
test("ochit -> ochit", function() {deepEqual( Stem("ochit"), "ochit");});
test("ochite -> ochit", function() {deepEqual( Stem("ochite"), "ochit");});
test("ochiul -> ochi", function() {deepEqual( Stem("ochiul"), "ochi");});
test("ochiului -> ochi", function() {deepEqual( Stem("ochiului"), "ochi");});
test("ocna -> ocna", function() {deepEqual( Stem("ocna"), "ocna");});
test("ocnaşi -> ocnaş", function() {deepEqual( Stem("ocnaşi"), "ocnaş");});
test("ocnaşii -> ocnaş", function() {deepEqual( Stem("ocnaşii"), "ocnaş");});
test("ocnă -> ocnă", function() {deepEqual( Stem("ocnă"), "ocnă");});
test("ocnele -> ocne", function() {deepEqual( Stem("ocnele"), "ocne");});
test("ocol -> ocol", function() {deepEqual( Stem("ocol"), "ocol");});
test("ocolea -> ocol", function() {deepEqual( Stem("ocolea"), "ocol");});
test("ocolesc -> ocol", function() {deepEqual( Stem("ocolesc"), "ocol");});
test("ocoleşte -> ocol", function() {deepEqual( Stem("ocoleşte"), "ocol");});
test("ocoleşti -> ocol", function() {deepEqual( Stem("ocoleşti"), "ocol");});
test("ocoli -> ocol", function() {deepEqual( Stem("ocoli"), "ocol");});
test("ocolim -> ocol", function() {deepEqual( Stem("ocolim"), "ocol");});
test("ocolind -> ocol", function() {deepEqual( Stem("ocolind"), "ocol");});
test("ocolire -> ocol", function() {deepEqual( Stem("ocolire"), "ocol");});
test("ocolişuri -> ocolişur", function() {deepEqual( Stem("ocolişuri"), "ocolişur");});
test("ocolit -> ocol", function() {deepEqual( Stem("ocolit"), "ocol");});
test("ocolită -> ocol", function() {deepEqual( Stem("ocolită"), "ocol");});
test("ocoliţi -> ocol", function() {deepEqual( Stem("ocoliţi"), "ocol");});
test("ocolul -> ocol", function() {deepEqual( Stem("ocolul"), "ocol");});
test("ocoluri -> ocolur", function() {deepEqual( Stem("ocoluri"), "ocolur");});
test("ocolurile -> ocolur", function() {deepEqual( Stem("ocolurile"), "ocolur");});
test("ocrotit -> ocrot", function() {deepEqual( Stem("ocrotit"), "ocrot");});
test("ocrotitoare -> ocrot", function() {deepEqual( Stem("ocrotitoare"), "ocrot");});
test("ocrotitor -> ocrot", function() {deepEqual( Stem("ocrotitor"), "ocrot");});
test("ocrotiţi -> ocrot", function() {deepEqual( Stem("ocrotiţi"), "ocrot");});
test("octavă -> octav", function() {deepEqual( Stem("octavă"), "octav");});
test("octavian -> octavian", function() {deepEqual( Stem("octavian"), "octavian");});
test("octet -> octet", function() {deepEqual( Stem("octet"), "octet");});
test("octeţi -> octeţ", function() {deepEqual( Stem("octeţi"), "octeţ");});
test("octogenarul -> octogenar", function() {deepEqual( Stem("octogenarul"), "octogenar");});
test("octombrie -> octombr", function() {deepEqual( Stem("octombrie"), "octombr");});
test("ocular -> ocular", function() {deepEqual( Stem("ocular"), "ocular");});
test("ocult -> ocult", function() {deepEqual( Stem("ocult"), "ocult");});
test("ocultarea -> ocult", function() {deepEqual( Stem("ocultarea"), "ocult");});
test("ocultat -> ocult", function() {deepEqual( Stem("ocultat"), "ocult");});
test("ocultă -> ocult", function() {deepEqual( Stem("ocultă"), "ocult");});
test("ocultării -> ocultăr", function() {deepEqual( Stem("ocultării"), "ocultăr");});
test("oculţi -> oculţ", function() {deepEqual( Stem("oculţi"), "oculţ");});
test("ocup -> ocup", function() {deepEqual( Stem("ocup"), "ocup");});
test("ocupa -> ocup", function() {deepEqual( Stem("ocupa"), "ocup");});
test("ocupai -> ocup", function() {deepEqual( Stem("ocupai"), "ocup");});
test("ocupanţi -> ocupanţ", function() {deepEqual( Stem("ocupanţi"), "ocupanţ");});
test("ocupanţii -> ocupanţ", function() {deepEqual( Stem("ocupanţii"), "ocupanţ");});
test("ocupase -> ocup", function() {deepEqual( Stem("ocupase"), "ocup");});
test("ocupat -> ocup", function() {deepEqual( Stem("ocupat"), "ocup");});
test("ocupată -> ocup", function() {deepEqual( Stem("ocupată"), "ocup");});
test("ocupaţi -> ocup", function() {deepEqual( Stem("ocupaţi"), "ocup");});
test("ocupaţie -> ocup", function() {deepEqual( Stem("ocupaţie"), "ocup");});
test("ocupând -> ocup", function() {deepEqual( Stem("ocupând"), "ocup");});
test("ocupă -> ocup", function() {deepEqual( Stem("ocupă"), "ocup");});
test("ocupăm -> ocup", function() {deepEqual( Stem("ocupăm"), "ocup");});
test("ocupe -> ocup", function() {deepEqual( Stem("ocupe"), "ocup");});
test("odaia -> odai", function() {deepEqual( Stem("odaia"), "odai");});
test("odaie -> odai", function() {deepEqual( Stem("odaie"), "odai");});
test("odată -> odat", function() {deepEqual( Stem("odată"), "odat");});
test("odăi -> odă", function() {deepEqual( Stem("odăi"), "odă");});
test("odăii -> odăi", function() {deepEqual( Stem("odăii"), "odăi");});
test("odăiţa -> odăiţ", function() {deepEqual( Stem("odăiţa"), "odăiţ");});
test("odicolonului -> odicolon", function() {deepEqual( Stem("odicolonului"), "odicolon");});
test("odihna -> odihn", function() {deepEqual( Stem("odihna"), "odihn");});
test("odihnă -> odihn", function() {deepEqual( Stem("odihnă"), "odihn");});
test("odihneai -> odihn", function() {deepEqual( Stem("odihneai"), "odihn");});
test("odihnească -> odihn", function() {deepEqual( Stem("odihnească"), "odihn");});
test("odihnesc -> odihn", function() {deepEqual( Stem("odihnesc"), "odihn");});
test("odihnit -> odihn", function() {deepEqual( Stem("odihnit"), "odihn");});
test("odinioară -> odinioar", function() {deepEqual( Stem("odinioară"), "odinioar");});
test("odioasă -> odioas", function() {deepEqual( Stem("odioasă"), "odioas");});
test("odobeşti -> odob", function() {deepEqual( Stem("odobeşti"), "odob");});
test("odobeştilor -> odob", function() {deepEqual( Stem("odobeştilor"), "odob");});
test("odraslele -> odrasl", function() {deepEqual( Stem("odraslele"), "odrasl");});
test("of -> of", function() {deepEqual( Stem("of"), "of");});
test("ofensate -> ofens", function() {deepEqual( Stem("ofensate"), "ofens");});
test("ofensator -> ofens", function() {deepEqual( Stem("ofensator"), "ofens");});
test("ofensă -> ofens", function() {deepEqual( Stem("ofensă"), "ofens");});
test("ofense -> ofen", function() {deepEqual( Stem("ofense"), "ofen");});
test("ofensiva -> ofens", function() {deepEqual( Stem("ofensiva"), "ofens");});
test("ofensivă -> ofens", function() {deepEqual( Stem("ofensivă"), "ofens");});
test("ofer -> ofer", function() {deepEqual( Stem("ofer"), "ofer");});
test("oferă -> ofer", function() {deepEqual( Stem("oferă"), "ofer");});
test("ofere -> ofer", function() {deepEqual( Stem("ofere"), "ofer");});
test("oferea -> ofer", function() {deepEqual( Stem("oferea"), "ofer");});
test("oferi -> ofer", function() {deepEqual( Stem("oferi"), "ofer");});
test("oferim -> ofer", function() {deepEqual( Stem("oferim"), "ofer");});
test("oferind -> ofer", function() {deepEqual( Stem("oferind"), "ofer");});
test("oferisem -> ofer", function() {deepEqual( Stem("oferisem"), "ofer");});
test("oferit -> ofer", function() {deepEqual( Stem("oferit"), "ofer");});
test("oferite -> ofer", function() {deepEqual( Stem("oferite"), "ofer");});
test("oferiţi -> ofer", function() {deepEqual( Stem("oferiţi"), "ofer");});
test("oferta -> ofert", function() {deepEqual( Stem("oferta"), "ofert");});
test("ofertă -> ofert", function() {deepEqual( Stem("ofertă"), "ofert");});
test("oficial -> oficial", function() {deepEqual( Stem("oficial"), "oficial");});
test("oficială -> oficial", function() {deepEqual( Stem("oficială"), "oficial");});
test("oficiale -> oficial", function() {deepEqual( Stem("oficiale"), "oficial");});
test("oficializare -> oficializ", function() {deepEqual( Stem("oficializare"), "oficializ");});
test("ofiţer -> ofiţer", function() {deepEqual( Stem("ofiţer"), "ofiţer");});
test("ofiţeresc -> ofiţer", function() {deepEqual( Stem("ofiţeresc"), "ofiţer");});
test("ofiţeri -> ofiţer", function() {deepEqual( Stem("ofiţeri"), "ofiţer");});
test("ofiţerii -> ofiţer", function() {deepEqual( Stem("ofiţerii"), "ofiţer");});
test("ofiţerilor -> ofiţer", function() {deepEqual( Stem("ofiţerilor"), "ofiţer");});
test("ofiţerimea -> ofiţerim", function() {deepEqual( Stem("ofiţerimea"), "ofiţerim");});
test("ofiţerul -> ofiţer", function() {deepEqual( Stem("ofiţerul"), "ofiţer");});
test("ofiţerului -> ofiţer", function() {deepEqual( Stem("ofiţerului"), "ofiţer");});
test("ofta -> ofta", function() {deepEqual( Stem("ofta"), "ofta");});
test("oftică -> oftic", function() {deepEqual( Stem("oftică"), "oftic");});
test("ofuri -> ofur", function() {deepEqual( Stem("ofuri"), "ofur");});
test("oglinda -> oglind", function() {deepEqual( Stem("oglinda"), "oglind");});
test("oglindă -> oglind", function() {deepEqual( Stem("oglindă"), "oglind");});
test("oglinjoara -> oglinjoar", function() {deepEqual( Stem("oglinjoara"), "oglinjoar");});
test("oglinzi -> oglinz", function() {deepEqual( Stem("oglinzi"), "oglinz");});
test("oglinzile -> oglinz", function() {deepEqual( Stem("oglinzile"), "oglinz");});
test("oglinzilor -> oglinz", function() {deepEqual( Stem("oglinzilor"), "oglinz");});
test("ogor -> ogor", function() {deepEqual( Stem("ogor"), "ogor");});
test("ograda -> ograd", function() {deepEqual( Stem("ograda"), "ograd");});
test("oh -> oh", function() {deepEqual( Stem("oh"), "oh");});
test("oi -> oi", function() {deepEqual( Stem("oi"), "oi");});
test("olanda -> oland", function() {deepEqual( Stem("olanda"), "oland");});
test("olandă -> oland", function() {deepEqual( Stem("olandă"), "oland");});
test("olandeze -> oland", function() {deepEqual( Stem("olandeze"), "oland");});
test("olari -> olar", function() {deepEqual( Stem("olari"), "olar");});
test("olfactive -> olfact", function() {deepEqual( Stem("olfactive"), "olfact");});
test("olimpică -> olimp", function() {deepEqual( Stem("olimpică"), "olimp");});
test("olt -> olt", function() {deepEqual( Stem("olt"), "olt");});
test("oltenesc -> olten", function() {deepEqual( Stem("oltenesc"), "olten");});
test("oltul -> olt", function() {deepEqual( Stem("oltul"), "olt");});
test("oltului -> olt", function() {deepEqual( Stem("oltului"), "olt");});
test("om -> om", function() {deepEqual( Stem("om"), "om");});
test("omagiile -> omag", function() {deepEqual( Stem("omagiile"), "omag");});
test("omega -> omeg", function() {deepEqual( Stem("omega"), "omeg");});
test("omenească -> omen", function() {deepEqual( Stem("omenească"), "omen");});
test("omenesc -> omen", function() {deepEqual( Stem("omenesc"), "omen");});
test("omenescului -> omen", function() {deepEqual( Stem("omenescului"), "omen");});
test("omeneşti -> omen", function() {deepEqual( Stem("omeneşti"), "omen");});
test("omenie -> omen", function() {deepEqual( Stem("omenie"), "omen");});
test("omenire -> omen", function() {deepEqual( Stem("omenire"), "omen");});
test("omenirea -> omen", function() {deepEqual( Stem("omenirea"), "omen");});
test("omeniri -> omenir", function() {deepEqual( Stem("omeniri"), "omenir");});
test("omenirii -> omenir", function() {deepEqual( Stem("omenirii"), "omenir");});
test("omoară -> omoar", function() {deepEqual( Stem("omoară"), "omoar");});
test("omoare -> omoar", function() {deepEqual( Stem("omoare"), "omoar");});
test("omogen -> omogen", function() {deepEqual( Stem("omogen"), "omogen");});
test("omogenitate -> omogen", function() {deepEqual( Stem("omogenitate"), "omogen");});
test("omogenităţii -> omogen", function() {deepEqual( Stem("omogenităţii"), "omogen");});
test("omogenizarea -> omogeniz", function() {deepEqual( Stem("omogenizarea"), "omogeniz");});
test("omogenizat -> omogeniz", function() {deepEqual( Stem("omogenizat"), "omogeniz");});
test("omogenizează -> omogeniz", function() {deepEqual( Stem("omogenizează"), "omogeniz");});
test("omologare -> omolog", function() {deepEqual( Stem("omologare"), "omolog");});
test("omologii -> omolog", function() {deepEqual( Stem("omologii"), "omolog");});
test("omologilor -> omolog", function() {deepEqual( Stem("omologilor"), "omolog");});
test("omologul -> omolog", function() {deepEqual( Stem("omologul"), "omolog");});
test("omomastică -> omomast", function() {deepEqual( Stem("omomastică"), "omomast");});
test("omonim -> omon", function() {deepEqual( Stem("omonim"), "omon");});
test("omonimia -> omonim", function() {deepEqual( Stem("omonimia"), "omonim");});
test("omonimii -> omonim", function() {deepEqual( Stem("omonimii"), "omonim");});
test("omoplatului -> omopl", function() {deepEqual( Stem("omoplatului"), "omopl");});
test("omor -> omor", function() {deepEqual( Stem("omor"), "omor");});
test("omorâm -> omor", function() {deepEqual( Stem("omorâm"), "omor");});
test("omorât -> omorât", function() {deepEqual( Stem("omorât"), "omorât");});
test("omorâtoare -> omorâtoar", function() {deepEqual( Stem("omorâtoare"), "omorâtoar");});
test("omori -> omor", function() {deepEqual( Stem("omori"), "omor");});
test("omorî -> omorî", function() {deepEqual( Stem("omorî"), "omorî");});
test("omorîm -> omorîm", function() {deepEqual( Stem("omorîm"), "omorîm");});
test("omorîre -> omorîr", function() {deepEqual( Stem("omorîre"), "omorîr");});
test("omorît -> omorît", function() {deepEqual( Stem("omorît"), "omorît");});
test("omorîtă -> omorît", function() {deepEqual( Stem("omorîtă"), "omorît");});
test("omul -> om", function() {deepEqual( Stem("omul"), "om");});
test("omule -> omul", function() {deepEqual( Stem("omule"), "omul");});
test("omuleţul -> omuleţ", function() {deepEqual( Stem("omuleţul"), "omuleţ");});
test("omului -> om", function() {deepEqual( Stem("omului"), "om");});
test("on -> on", function() {deepEqual( Stem("on"), "on");});
test("onctuos -> onctuos", function() {deepEqual( Stem("onctuos"), "onctuos");});
test("ondulat -> ondul", function() {deepEqual( Stem("ondulat"), "ondul");});
test("oneroase -> oner", function() {deepEqual( Stem("oneroase"), "oner");});
test("onest -> onest", function() {deepEqual( Stem("onest"), "onest");});
test("onestă -> onest", function() {deepEqual( Stem("onestă"), "onest");});
test("onestitate -> onest", function() {deepEqual( Stem("onestitate"), "onest");});
test("onestităţi -> onest", function() {deepEqual( Stem("onestităţi"), "onest");});
test("onestităţii -> onest", function() {deepEqual( Stem("onestităţii"), "onest");});
test("oneşti -> oneşt", function() {deepEqual( Stem("oneşti"), "oneşt");});
test("oniric -> onir", function() {deepEqual( Stem("oniric"), "onir");});
test("onirică -> onir", function() {deepEqual( Stem("onirică"), "onir");});
test("onoare -> onoar", function() {deepEqual( Stem("onoare"), "onoar");});
test("onoarea -> onoar", function() {deepEqual( Stem("onoarea"), "onoar");});
test("onomastic -> onomast", function() {deepEqual( Stem("onomastic"), "onomast");});
test("onomastică -> onomast", function() {deepEqual( Stem("onomastică"), "onomast");});
test("onomatopee -> onomatope", function() {deepEqual( Stem("onomatopee"), "onomatope");});
test("onomatopeelor -> onomatope", function() {deepEqual( Stem("onomatopeelor"), "onomatope");});
test("onomatopeic -> onomatop", function() {deepEqual( Stem("onomatopeic"), "onomatop");});
test("onomatopeică -> onomatop", function() {deepEqual( Stem("onomatopeică"), "onomatop");});
test("onor -> onor", function() {deepEqual( Stem("onor"), "onor");});
test("onora -> onor", function() {deepEqual( Stem("onora"), "onor");});
test("onorabil -> onor", function() {deepEqual( Stem("onorabil"), "onor");});
test("onorabilă -> onor", function() {deepEqual( Stem("onorabilă"), "onor");});
test("onorabile -> onor", function() {deepEqual( Stem("onorabile"), "onor");});
test("onorabili -> onor", function() {deepEqual( Stem("onorabili"), "onor");});
test("onorabilitate -> onor", function() {deepEqual( Stem("onorabilitate"), "onor");});
test("onorabilităţii -> onor", function() {deepEqual( Stem("onorabilităţii"), "onor");});
test("onorabilului -> onor", function() {deepEqual( Stem("onorabilului"), "onor");});
test("onorarea -> onor", function() {deepEqual( Stem("onorarea"), "onor");});
test("onorariilor -> onorar", function() {deepEqual( Stem("onorariilor"), "onorar");});
test("onorariu -> onorariu", function() {deepEqual( Stem("onorariu"), "onorariu");});
test("onorat -> onor", function() {deepEqual( Stem("onorat"), "onor");});
test("onoratul -> onor", function() {deepEqual( Stem("onoratul"), "onor");});
test("onoraţii -> onor", function() {deepEqual( Stem("onoraţii"), "onor");});
test("onorau -> onor", function() {deepEqual( Stem("onorau"), "onor");});
test("onorează -> onor", function() {deepEqual( Stem("onorează"), "onor");});
test("onorific -> onorif", function() {deepEqual( Stem("onorific"), "onorif");});
test("onorifică -> onorif", function() {deepEqual( Stem("onorifică"), "onorif");});
test("onorifice -> onorif", function() {deepEqual( Stem("onorifice"), "onorif");});
test("onoruri -> onorur", function() {deepEqual( Stem("onoruri"), "onorur");});
test("onorurile -> onorur", function() {deepEqual( Stem("onorurile"), "onorur");});
test("ontogeneză -> ontogenez", function() {deepEqual( Stem("ontogeneză"), "ontogenez");});
test("ontologia -> ontolog", function() {deepEqual( Stem("ontologia"), "ontolog");});
test("ontologic -> ontolog", function() {deepEqual( Stem("ontologic"), "ontolog");});
test("ontologică -> ontolog", function() {deepEqual( Stem("ontologică"), "ontolog");});
test("ontologice -> ontolog", function() {deepEqual( Stem("ontologice"), "ontolog");});
test("ontologizat -> ontologiz", function() {deepEqual( Stem("ontologizat"), "ontologiz");});
test("opac -> opac", function() {deepEqual( Stem("opac"), "opac");});
test("opera -> oper", function() {deepEqual( Stem("opera"), "oper");});
test("operat -> oper", function() {deepEqual( Stem("operat"), "oper");});
test("operaţia -> oper", function() {deepEqual( Stem("operaţia"), "oper");});
test("operaţie -> oper", function() {deepEqual( Stem("operaţie"), "oper");});
test("operaţii -> oper", function() {deepEqual( Stem("operaţii"), "oper");});
test("operaţiile -> oper", function() {deepEqual( Stem("operaţiile"), "oper");});
test("operaţiune -> oper", function() {deepEqual( Stem("operaţiune"), "oper");});
test("operaţiunea -> oper", function() {deepEqual( Stem("operaţiunea"), "oper");});
test("operaţiuni -> operat", function() {deepEqual( Stem("operaţiuni"), "operat");});
test("operaţiunile -> operat", function() {deepEqual( Stem("operaţiunile"), "operat");});
test("operă -> oper", function() {deepEqual( Stem("operă"), "oper");});
test("operează -> oper", function() {deepEqual( Stem("operează"), "oper");});
test("operei -> opere", function() {deepEqual( Stem("operei"), "opere");});
test("operelor -> oper", function() {deepEqual( Stem("operelor"), "oper");});
test("operetă -> operet", function() {deepEqual( Stem("operetă"), "operet");});
test("opinci -> opinc", function() {deepEqual( Stem("opinci"), "opinc");});
test("opinia -> opin", function() {deepEqual( Stem("opinia"), "opin");});
test("opinie -> opin", function() {deepEqual( Stem("opinie"), "opin");});
test("opinii -> opin", function() {deepEqual( Stem("opinii"), "opin");});
test("opiniile -> opin", function() {deepEqual( Stem("opiniile"), "opin");});
test("opintindu -> opint", function() {deepEqual( Stem("opintindu"), "opint");});
test("opozant -> opoz", function() {deepEqual( Stem("opozant"), "opoz");});
test("opoziţie -> opoziţ", function() {deepEqual( Stem("opoziţie"), "opoziţ");});
test("opoziţiei -> opoz", function() {deepEqual( Stem("opoziţiei"), "opoz");});
test("opoziţii -> opoz", function() {deepEqual( Stem("opoziţii"), "opoz");});
test("opoziţionist -> opoziţionist", function() {deepEqual( Stem("opoziţionist"), "opoziţionist");});
test("oprească -> opreasc", function() {deepEqual( Stem("oprească"), "opreasc");});
test("opresc -> opresc", function() {deepEqual( Stem("opresc"), "opresc");});
test("opreşte -> opreşt", function() {deepEqual( Stem("opreşte"), "opreşt");});
test("opreşti -> opreşt", function() {deepEqual( Stem("opreşti"), "opreşt");});
test("opri -> opri", function() {deepEqual( Stem("opri"), "opri");});
test("oprim -> oprim", function() {deepEqual( Stem("oprim"), "oprim");});
test("oprind -> oprind", function() {deepEqual( Stem("oprind"), "oprind");});
test("oprindu -> oprindu", function() {deepEqual( Stem("oprindu"), "oprindu");});
test("oprire -> oprir", function() {deepEqual( Stem("oprire"), "oprir");});
test("oprirea -> oprir", function() {deepEqual( Stem("oprirea"), "oprir");});
test("opriri -> oprir", function() {deepEqual( Stem("opriri"), "oprir");});
test("oprise -> opri", function() {deepEqual( Stem("oprise"), "opri");});
test("oprit -> oprit", function() {deepEqual( Stem("oprit"), "oprit");});
test("oprită -> oprit", function() {deepEqual( Stem("oprită"), "oprit");});
test("opriţi -> opriţ", function() {deepEqual( Stem("opriţi"), "opriţ");});
test("opt -> opt", function() {deepEqual( Stem("opt"), "opt");});
test("opta -> opta", function() {deepEqual( Stem("opta"), "opta");});
test("optat -> optat", function() {deepEqual( Stem("optat"), "optat");});
test("optimism -> optimist", function() {deepEqual( Stem("optimism"), "optimist");});
test("optimismul -> optimist", function() {deepEqual( Stem("optimismul"), "optimist");});
test("optimistă -> optimist", function() {deepEqual( Stem("optimistă"), "optimist");});
test("optimişti -> optimist", function() {deepEqual( Stem("optimişti"), "optimist");});
test("optzeci -> optzec", function() {deepEqual( Stem("optzeci"), "optzec");});
test("opune -> opun", function() {deepEqual( Stem("opune"), "opun");});
test("opunere -> opun", function() {deepEqual( Stem("opunere"), "opun");});
test("opunerea -> opun", function() {deepEqual( Stem("opunerea"), "opun");});
test("opus -> opus", function() {deepEqual( Stem("opus"), "opus");});
test("opusă -> opus", function() {deepEqual( Stem("opusă"), "opus");});
test("opuse -> opu", function() {deepEqual( Stem("opuse"), "opu");});
test("or -> or", function() {deepEqual( Stem("or"), "or");});
test("ora -> ora", function() {deepEqual( Stem("ora"), "ora");});
test("oraş -> oraş", function() {deepEqual( Stem("oraş"), "oraş");});
test("oraşe -> oraş", function() {deepEqual( Stem("oraşe"), "oraş");});
test("oraşele -> oraş", function() {deepEqual( Stem("oraşele"), "oraş");});
test("oraşelor -> oraş", function() {deepEqual( Stem("oraşelor"), "oraş");});
test("oraşul -> oraş", function() {deepEqual( Stem("oraşul"), "oraş");});
test("oraşului -> oraş", function() {deepEqual( Stem("oraşului"), "oraş");});
test("orator -> orat", function() {deepEqual( Stem("orator"), "orat");});
test("oratori -> orat", function() {deepEqual( Stem("oratori"), "orat");});
test("oratoriei -> orat", function() {deepEqual( Stem("oratoriei"), "orat");});
test("oratorul -> orat", function() {deepEqual( Stem("oratorul"), "orat");});
test("orânduială -> orânduial", function() {deepEqual( Stem("orânduială"), "orânduial");});
test("oră -> oră", function() {deepEqual( Stem("oră"), "oră");});
test("orăşel -> orăşel", function() {deepEqual( Stem("orăşel"), "orăşel");});
test("orăşelul -> orăşel", function() {deepEqual( Stem("orăşelul"), "orăşel");});
test("orăşenească -> orăşen", function() {deepEqual( Stem("orăşenească"), "orăşen");});
test("orăşenilor -> orăşen", function() {deepEqual( Stem("orăşenilor"), "orăşen");});
test("orăşenizate -> orăşeniz", function() {deepEqual( Stem("orăşenizate"), "orăşeniz");});
test("orb -> orb", function() {deepEqual( Stem("orb"), "orb");});
test("orbeşte -> orbeşt", function() {deepEqual( Stem("orbeşte"), "orbeşt");});
test("orbi -> orbi", function() {deepEqual( Stem("orbi"), "orbi");});
test("orbire -> orbir", function() {deepEqual( Stem("orbire"), "orbir");});
test("orbita -> orbit", function() {deepEqual( Stem("orbita"), "orbit");});
test("orbite -> orbit", function() {deepEqual( Stem("orbite"), "orbit");});
test("orbitei -> orbite", function() {deepEqual( Stem("orbitei"), "orbite");});
test("orchestra -> orchestr", function() {deepEqual( Stem("orchestra"), "orchestr");});
test("orchestră -> orchestr", function() {deepEqual( Stem("orchestră"), "orchestr");});
test("ordin -> ordin", function() {deepEqual( Stem("ordin"), "ordin");});
test("ordinal -> ordinal", function() {deepEqual( Stem("ordinal"), "ordinal");});
test("ordinar -> ordinar", function() {deepEqual( Stem("ordinar"), "ordinar");});
test("ordine -> ordin", function() {deepEqual( Stem("ordine"), "ordin");});
test("ordinea -> ordin", function() {deepEqual( Stem("ordinea"), "ordin");});
test("ordinei -> ordine", function() {deepEqual( Stem("ordinei"), "ordine");});
test("ordinele -> ordin", function() {deepEqual( Stem("ordinele"), "ordin");});
test("ordinul -> ordin", function() {deepEqual( Stem("ordinul"), "ordin");});
test("ordon -> ordon", function() {deepEqual( Stem("ordon"), "ordon");});
test("ordonanţa -> ordonanţ", function() {deepEqual( Stem("ordonanţa"), "ordonanţ");});
test("ordonanţă -> ordonanţ", function() {deepEqual( Stem("ordonanţă"), "ordonanţ");});
test("ordonanţe -> ordonanţ", function() {deepEqual( Stem("ordonanţe"), "ordonanţ");});
test("ordonanţei -> ordonanţe", function() {deepEqual( Stem("ordonanţei"), "ordonanţe");});
test("ordonanţele -> ordonanţ", function() {deepEqual( Stem("ordonanţele"), "ordonanţ");});
test("ordonarea -> ordon", function() {deepEqual( Stem("ordonarea"), "ordon");});
test("ordonată -> ordon", function() {deepEqual( Stem("ordonată"), "ordon");});
test("ore -> ore", function() {deepEqual( Stem("ore"), "ore");});
test("orei -> ore", function() {deepEqual( Stem("orei"), "ore");});
test("orele -> ore", function() {deepEqual( Stem("orele"), "ore");});
test("orelor -> ore", function() {deepEqual( Stem("orelor"), "ore");});
test("orfeu -> orfeu", function() {deepEqual( Stem("orfeu"), "orfeu");});
test("organ -> organ", function() {deepEqual( Stem("organ"), "organ");});
test("organe -> organ", function() {deepEqual( Stem("organe"), "organ");});
test("organelor -> organ", function() {deepEqual( Stem("organelor"), "organ");});
test("organică -> organ", function() {deepEqual( Stem("organică"), "organ");});
test("organice -> organ", function() {deepEqual( Stem("organice"), "organ");});
test("organism -> organist", function() {deepEqual( Stem("organism"), "organist");});
test("organisme -> organist", function() {deepEqual( Stem("organisme"), "organist");});
test("organismul -> organist", function() {deepEqual( Stem("organismul"), "organist");});
test("organismului -> organist", function() {deepEqual( Stem("organismului"), "organist");});
test("organiza -> organiz", function() {deepEqual( Stem("organiza"), "organiz");});
test("organizarea -> organiz", function() {deepEqual( Stem("organizarea"), "organiz");});
test("organizat -> organiz", function() {deepEqual( Stem("organizat"), "organiz");});
test("organizată -> organiz", function() {deepEqual( Stem("organizată"), "organiz");});
test("organizate -> organiz", function() {deepEqual( Stem("organizate"), "organiz");});
test("organizatori -> organiz", function() {deepEqual( Stem("organizatori"), "organiz");});
test("organizaţia -> organiz", function() {deepEqual( Stem("organizaţia"), "organiz");});
test("organizaţii -> organiz", function() {deepEqual( Stem("organizaţii"), "organiz");});
test("organizări -> organizăr", function() {deepEqual( Stem("organizări"), "organizăr");});
test("organizării -> organizăr", function() {deepEqual( Stem("organizării"), "organizăr");});
test("organizează -> organiz", function() {deepEqual( Stem("organizează"), "organiz");});
test("organizeze -> organiz", function() {deepEqual( Stem("organizeze"), "organiz");});
test("orgie -> orgie", function() {deepEqual( Stem("orgie"), "orgie");});
test("orgiilor -> orgi", function() {deepEqual( Stem("orgiilor"), "orgi");});
test("orgolios -> orgol", function() {deepEqual( Stem("orgolios"), "orgol");});
test("orgoliu -> orgoliu", function() {deepEqual( Stem("orgoliu"), "orgoliu");});
test("orgoliul -> orgol", function() {deepEqual( Stem("orgoliul"), "orgol");});
test("orgoliului -> orgol", function() {deepEqual( Stem("orgoliului"), "orgol");});
test("ori -> ori", function() {deepEqual( Stem("ori"), "ori");});
test("oricare -> oric", function() {deepEqual( Stem("oricare"), "oric");});
test("oricând -> oric", function() {deepEqual( Stem("oricând"), "oric");});
test("oricât -> oricât", function() {deepEqual( Stem("oricât"), "oricât");});
test("oricărei -> oricăre", function() {deepEqual( Stem("oricărei"), "oricăre");});
test("oricăreia -> oricărei", function() {deepEqual( Stem("oricăreia"), "oricărei");});
test("oricăror -> oricăror", function() {deepEqual( Stem("oricăror"), "oricăror");});
test("oricărui -> oricăr", function() {deepEqual( Stem("oricărui"), "oricăr");});
test("oricăruia -> oricărui", function() {deepEqual( Stem("oricăruia"), "oricărui");});
test("orice -> oric", function() {deepEqual( Stem("orice"), "oric");});
test("oricine -> oricin", function() {deepEqual( Stem("oricine"), "oricin");});
test("oricui -> oric", function() {deepEqual( Stem("oricui"), "oric");});
test("oricum -> oricum", function() {deepEqual( Stem("oricum"), "oricum");});
test("oriental -> oriental", function() {deepEqual( Stem("oriental"), "oriental");});
test("orientale -> oriental", function() {deepEqual( Stem("orientale"), "oriental");});
test("orientalii -> oriental", function() {deepEqual( Stem("orientalii"), "oriental");});
test("orientare -> orient", function() {deepEqual( Stem("orientare"), "orient");});
test("orientarea -> orient", function() {deepEqual( Stem("orientarea"), "orient");});
test("orientat -> orient", function() {deepEqual( Stem("orientat"), "orient");});
test("orientate -> orient", function() {deepEqual( Stem("orientate"), "orient");});
test("orientării -> orientăr", function() {deepEqual( Stem("orientării"), "orientăr");});
test("orientează -> orient", function() {deepEqual( Stem("orientează"), "orient");});
test("orientez -> orient", function() {deepEqual( Stem("orientez"), "orient");});
test("orienteze -> orient", function() {deepEqual( Stem("orienteze"), "orient");});
test("original -> original", function() {deepEqual( Stem("original"), "original");});
test("originală -> original", function() {deepEqual( Stem("originală"), "original");});
test("originale -> original", function() {deepEqual( Stem("originale"), "original");});
test("originalitate -> original", function() {deepEqual( Stem("originalitate"), "original");});
test("originalitatea -> original", function() {deepEqual( Stem("originalitatea"), "original");});
test("originalităţii -> original", function() {deepEqual( Stem("originalităţii"), "original");});
test("originalităţile -> original", function() {deepEqual( Stem("originalităţile"), "original");});
test("originalul -> original", function() {deepEqual( Stem("originalul"), "original");});
test("originar -> originar", function() {deepEqual( Stem("originar"), "originar");});
test("originară -> origin", function() {deepEqual( Stem("originară"), "origin");});
test("origine -> origin", function() {deepEqual( Stem("origine"), "origin");});
test("originea -> origin", function() {deepEqual( Stem("originea"), "origin");});
test("originei -> origine", function() {deepEqual( Stem("originei"), "origine");});
test("originii -> origin", function() {deepEqual( Stem("originii"), "origin");});
test("originilor -> origin", function() {deepEqual( Stem("originilor"), "origin");});
test("orişan -> orişan", function() {deepEqual( Stem("orişan"), "orişan");});
test("orişicare -> orişic", function() {deepEqual( Stem("orişicare"), "orişic");});
test("orişicât -> orişicât", function() {deepEqual( Stem("orişicât"), "orişicât");});
test("oriunde -> oriund", function() {deepEqual( Stem("oriunde"), "oriund");});
test("orizont -> orizont", function() {deepEqual( Stem("orizont"), "orizont");});
test("orizontul -> orizont", function() {deepEqual( Stem("orizontul"), "orizont");});
test("orizontului -> orizont", function() {deepEqual( Stem("orizontului"), "orizont");});
test("ornament -> ornament", function() {deepEqual( Stem("ornament"), "ornament");});
test("ornamental -> ornamental", function() {deepEqual( Stem("ornamental"), "ornamental");});
test("ornamentală -> ornamental", function() {deepEqual( Stem("ornamentală"), "ornamental");});
test("ornamentale -> ornamental", function() {deepEqual( Stem("ornamentale"), "ornamental");});
test("ornamentul -> ornament", function() {deepEqual( Stem("ornamentul"), "ornament");});
test("oroare -> oroar", function() {deepEqual( Stem("oroare"), "oroar");});
test("oroarea -> oroar", function() {deepEqual( Stem("oroarea"), "oroar");});
test("orori -> oror", function() {deepEqual( Stem("orori"), "oror");});
test("orşova -> orşov", function() {deepEqual( Stem("orşova"), "orşov");});
test("ortodoxii -> ortodox", function() {deepEqual( Stem("ortodoxii"), "ortodox");});
test("ortografică -> ortograf", function() {deepEqual( Stem("ortografică"), "ortograf");});
test("orzaru -> orzaru", function() {deepEqual( Stem("orzaru"), "orzaru");});
test("os -> os", function() {deepEqual( Stem("os"), "os");});
test("osândiţi -> osând", function() {deepEqual( Stem("osândiţi"), "osând");});
test("osebit -> oseb", function() {deepEqual( Stem("osebit"), "oseb");});
test("osiile -> osi", function() {deepEqual( Stem("osiile"), "osi");});
test("osiris -> osiris", function() {deepEqual( Stem("osiris"), "osiris");});
test("osoasă -> osoas", function() {deepEqual( Stem("osoasă"), "osoas");});
test("ospitalier -> ospitalier", function() {deepEqual( Stem("ospitalier"), "ospitalier");});
test("ostatic -> ostat", function() {deepEqual( Stem("ostatic"), "ostat");});
test("osteneala -> osteneal", function() {deepEqual( Stem("osteneala"), "osteneal");});
test("osteneală -> osteneal", function() {deepEqual( Stem("osteneală"), "osteneal");});
test("ostenească -> osten", function() {deepEqual( Stem("ostenească"), "osten");});
test("ostenesc -> osten", function() {deepEqual( Stem("ostenesc"), "osten");});
test("ostenit -> osten", function() {deepEqual( Stem("ostenit"), "osten");});
test("ostentativ -> ostent", function() {deepEqual( Stem("ostentativ"), "ostent");});
test("ostentative -> ostent", function() {deepEqual( Stem("ostentative"), "ostent");});
test("ostentaţia -> ostent", function() {deepEqual( Stem("ostentaţia"), "ostent");});
test("ostentaţie -> ostent", function() {deepEqual( Stem("ostentaţie"), "ostent");});
test("ostilă -> ostil", function() {deepEqual( Stem("ostilă"), "ostil");});
test("ostile -> osti", function() {deepEqual( Stem("ostile"), "osti");});
test("ostilitate -> ostil", function() {deepEqual( Stem("ostilitate"), "ostil");});
test("ostilitatea -> ostil", function() {deepEqual( Stem("ostilitatea"), "ostil");});
test("oştenilor -> oşten", function() {deepEqual( Stem("oştenilor"), "oşten");});
test("oşti -> oşti", function() {deepEqual( Stem("oşti"), "oşti");});
test("oştirii -> oştir", function() {deepEqual( Stem("oştirii"), "oştir");});
test("otravă -> otrav", function() {deepEqual( Stem("otravă"), "otrav");});
test("otrăvit -> otrăv", function() {deepEqual( Stem("otrăvit"), "otrăv");});
test("otrăvitoare -> otrăv", function() {deepEqual( Stem("otrăvitoare"), "otrăv");});
test("otrăvurile -> otrăvur", function() {deepEqual( Stem("otrăvurile"), "otrăvur");});
test("oţel -> oţel", function() {deepEqual( Stem("oţel"), "oţel");});
test("ou -> ou", function() {deepEqual( Stem("ou"), "ou");});
test("ouă -> ouă", function() {deepEqual( Stem("ouă"), "ouă");});
test("ouăle -> ouăl", function() {deepEqual( Stem("ouăle"), "ouăl");});
test("oval -> oval", function() {deepEqual( Stem("oval"), "oval");});
test("ovarele -> ovar", function() {deepEqual( Stem("ovarele"), "ovar");});
test("ovarita -> ovar", function() {deepEqual( Stem("ovarita"), "ovar");});
test("ovidiu -> ovidiu", function() {deepEqual( Stem("ovidiu"), "ovidiu");});
test("ovină -> ovin", function() {deepEqual( Stem("ovină"), "ovin");});
test("ovrei -> ovre", function() {deepEqual( Stem("ovrei"), "ovre");});
test("ovreii -> ovrei", function() {deepEqual( Stem("ovreii"), "ovrei");});
test("oxford -> oxford", function() {deepEqual( Stem("oxford"), "oxford");});
test("oxigen -> oxigen", function() {deepEqual( Stem("oxigen"), "oxigen");});
test("oxigenat -> oxigen", function() {deepEqual( Stem("oxigenat"), "oxigen");});
test("oxigenul -> oxigen", function() {deepEqual( Stem("oxigenul"), "oxigen");});
test("p -> p", function() {deepEqual( Stem("p"), "p");});
test("pace -> pac", function() {deepEqual( Stem("pace"), "pac");});
test("pacea -> pac", function() {deepEqual( Stem("pacea"), "pac");});
test("pachet -> pachet", function() {deepEqual( Stem("pachet"), "pachet");});
test("pachete -> pachet", function() {deepEqual( Stem("pachete"), "pachet");});
test("pachetele -> pachet", function() {deepEqual( Stem("pachetele"), "pachet");});
test("pachetul -> pachet", function() {deepEqual( Stem("pachetul"), "pachet");});
test("pacienţei -> pacienţe", function() {deepEqual( Stem("pacienţei"), "pacienţe");});
test("paddoc -> paddoc", function() {deepEqual( Stem("paddoc"), "paddoc");});
test("paddocului -> paddoc", function() {deepEqual( Stem("paddocului"), "paddoc");});
test("pagina -> pagin", function() {deepEqual( Stem("pagina"), "pagin");});
test("pagină -> pagin", function() {deepEqual( Stem("pagină"), "pagin");});
test("paginei -> pagine", function() {deepEqual( Stem("paginei"), "pagine");});
test("pagini -> pagin", function() {deepEqual( Stem("pagini"), "pagin");});
test("pagubă -> pagub", function() {deepEqual( Stem("pagubă"), "pagub");});
test("pahar -> pahar", function() {deepEqual( Stem("pahar"), "pahar");});
test("pahare -> pahar", function() {deepEqual( Stem("pahare"), "pahar");});
test("paharele -> pahar", function() {deepEqual( Stem("paharele"), "pahar");});
test("paharul -> pahar", function() {deepEqual( Stem("paharul"), "pahar");});
test("paie -> pai", function() {deepEqual( Stem("paie"), "pai");});
test("paisprezece -> paisprezec", function() {deepEqual( Stem("paisprezece"), "paisprezec");});
test("pajişte -> pajişt", function() {deepEqual( Stem("pajişte"), "pajişt");});
test("pajiştei -> pajişte", function() {deepEqual( Stem("pajiştei"), "pajişte");});
test("pajiştii -> pajişt", function() {deepEqual( Stem("pajiştii"), "pajişt");});
test("palace -> palac", function() {deepEqual( Stem("palace"), "palac");});
test("palat -> palat", function() {deepEqual( Stem("palat"), "palat");});
test("palele -> pal", function() {deepEqual( Stem("palele"), "pal");});
test("paliativ -> paliat", function() {deepEqual( Stem("paliativ"), "paliat");});
test("palid -> palid", function() {deepEqual( Stem("palid"), "palid");});
test("palidă -> palid", function() {deepEqual( Stem("palidă"), "palid");});
test("paliere -> palier", function() {deepEqual( Stem("paliere"), "palier");});
test("palizi -> paliz", function() {deepEqual( Stem("palizi"), "paliz");});
test("palma -> palm", function() {deepEqual( Stem("palma"), "palm");});
test("palmă -> palm", function() {deepEqual( Stem("palmă"), "palm");});
test("palme -> palm", function() {deepEqual( Stem("palme"), "palm");});
test("palmei -> palme", function() {deepEqual( Stem("palmei"), "palme");});
test("palmele -> palm", function() {deepEqual( Stem("palmele"), "palm");});
test("palmelor -> palm", function() {deepEqual( Stem("palmelor"), "palm");});
test("paloare -> paloar", function() {deepEqual( Stem("paloare"), "paloar");});
test("paloşul -> paloş", function() {deepEqual( Stem("paloşul"), "paloş");});
test("palpabil -> palpabil", function() {deepEqual( Stem("palpabil"), "palpabil");});
test("palpabilă -> palpabil", function() {deepEqual( Stem("palpabilă"), "palpabil");});
test("palpabile -> palpabil", function() {deepEqual( Stem("palpabile"), "palpabil");});
test("pană -> pan", function() {deepEqual( Stem("pană"), "pan");});
test("pandant -> pandant", function() {deepEqual( Stem("pandant"), "pandant");});
test("panglici -> panglic", function() {deepEqual( Stem("panglici"), "panglic");});
test("panica -> panic", function() {deepEqual( Stem("panica"), "panic");});
test("panică -> panic", function() {deepEqual( Stem("panică"), "panic");});
test("pansamente -> pansament", function() {deepEqual( Stem("pansamente"), "pansament");});
test("pansamentului -> pansament", function() {deepEqual( Stem("pansamentului"), "pansament");});
test("pansexualismul -> pansexualist", function() {deepEqual( Stem("pansexualismul"), "pansexualist");});
test("pantaloni -> pantalon", function() {deepEqual( Stem("pantaloni"), "pantalon");});
test("pantalonii -> pantalon", function() {deepEqual( Stem("pantalonii"), "pantalon");});
test("panteismul -> panteism", function() {deepEqual( Stem("panteismul"), "panteism");});
test("panteră -> panter", function() {deepEqual( Stem("panteră"), "panter");});
test("pantof -> pantof", function() {deepEqual( Stem("pantof"), "pantof");});
test("pantofi -> pantof", function() {deepEqual( Stem("pantofi"), "pantof");});
test("pantoful -> pantof", function() {deepEqual( Stem("pantoful"), "pantof");});
test("paparudă -> paparud", function() {deepEqual( Stem("paparudă"), "paparud");});
test("papei -> pape", function() {deepEqual( Stem("papei"), "pape");});
test("papini -> papin", function() {deepEqual( Stem("papini"), "papin");});
test("papuci -> papuc", function() {deepEqual( Stem("papuci"), "papuc");});
test("papucii -> papuc", function() {deepEqual( Stem("papucii"), "papuc");});
test("par -> par", function() {deepEqual( Stem("par"), "par");});
test("para -> par", function() {deepEqual( Stem("para"), "par");});
test("paradă -> parad", function() {deepEqual( Stem("paradă"), "parad");});
test("paradisul -> paradis", function() {deepEqual( Stem("paradisul"), "paradis");});
test("paradoxal -> paradoxal", function() {deepEqual( Stem("paradoxal"), "paradoxal");});
test("paradoxală -> paradoxal", function() {deepEqual( Stem("paradoxală"), "paradoxal");});
test("paragraf -> paragraf", function() {deepEqual( Stem("paragraf"), "paragraf");});
test("paragrafe -> paragraf", function() {deepEqual( Stem("paragrafe"), "paragraf");});
test("parale -> paral", function() {deepEqual( Stem("parale"), "paral");});
test("paralel -> paralel", function() {deepEqual( Stem("paralel"), "paralel");});
test("paralelă -> paralel", function() {deepEqual( Stem("paralelă"), "paralel");});
test("paralele -> paral", function() {deepEqual( Stem("paralele"), "paral");});
test("paralelele -> paralel", function() {deepEqual( Stem("paralelele"), "paralel");});
test("paralelogramul -> paralelogr", function() {deepEqual( Stem("paralelogramul"), "paralelogr");});
test("paralitic -> paralit", function() {deepEqual( Stem("paralitic"), "paralit");});
test("paraliticului -> paralit", function() {deepEqual( Stem("paraliticului"), "paralit");});
test("paralizat -> paraliz", function() {deepEqual( Stem("paralizat"), "paraliz");});
test("paralizate -> paraliz", function() {deepEqual( Stem("paralizate"), "paraliz");});
test("paralizia -> paraliz", function() {deepEqual( Stem("paralizia"), "paraliz");});
test("paranteza -> parantez", function() {deepEqual( Stem("paranteza"), "parantez");});
test("paranteză -> parantez", function() {deepEqual( Stem("paranteză"), "parantez");});
test("paranteze -> parant", function() {deepEqual( Stem("paranteze"), "parant");});
test("parapetele -> parapet", function() {deepEqual( Stem("parapetele"), "parapet");});
test("paraschiv -> parasch", function() {deepEqual( Stem("paraschiv"), "parasch");});
test("paraschive -> parasch", function() {deepEqual( Stem("paraschive"), "parasch");});
test("parastasului -> parastas", function() {deepEqual( Stem("parastasului"), "parastas");});
test("paratrăsnet -> paratrăsnet", function() {deepEqual( Stem("paratrăsnet"), "paratrăsnet");});
test("parazitară -> parazit", function() {deepEqual( Stem("parazitară"), "parazit");});
test("pară -> par", function() {deepEqual( Stem("pară"), "par");});
test("parc -> parc", function() {deepEqual( Stem("parc"), "parc");});
test("parcă -> parc", function() {deepEqual( Stem("parcă"), "parc");});
test("parcul -> parc", function() {deepEqual( Stem("parcul"), "parc");});
test("parcurgea -> parcurg", function() {deepEqual( Stem("parcurgea"), "parcurg");});
test("parcurgerea -> parcurg", function() {deepEqual( Stem("parcurgerea"), "parcurg");});
test("parcurs -> parcurs", function() {deepEqual( Stem("parcurs"), "parcurs");});
test("pardon -> pardon", function() {deepEqual( Stem("pardon"), "pardon");});
test("pare -> par", function() {deepEqual( Stem("pare"), "par");});
test("paremiologică -> paremiolog", function() {deepEqual( Stem("paremiologică"), "paremiolog");});
test("parfum -> parfum", function() {deepEqual( Stem("parfum"), "parfum");});
test("parfumate -> parfum", function() {deepEqual( Stem("parfumate"), "parfum");});
test("parfumuri -> parfumur", function() {deepEqual( Stem("parfumuri"), "parfumur");});
test("pari -> par", function() {deepEqual( Stem("pari"), "par");});
test("pariase -> parias", function() {deepEqual( Stem("pariase"), "parias");});
test("pariază -> pariaz", function() {deepEqual( Stem("pariază"), "pariaz");});
test("pariez -> pariez", function() {deepEqual( Stem("pariez"), "pariez");});
test("paris -> paris", function() {deepEqual( Stem("paris"), "paris");});
test("parisului -> paris", function() {deepEqual( Stem("parisului"), "paris");});
test("paritate -> paritat", function() {deepEqual( Stem("paritate"), "paritat");});
test("parităţii -> parităţ", function() {deepEqual( Stem("parităţii"), "parităţ");});
test("pariu -> pariu", function() {deepEqual( Stem("pariu"), "pariu");});
test("pariului -> par", function() {deepEqual( Stem("pariului"), "par");});
test("pariurilor -> pariur", function() {deepEqual( Stem("pariurilor"), "pariur");});
test("parizian -> parizian", function() {deepEqual( Stem("parizian"), "parizian");});
test("pariziană -> parizian", function() {deepEqual( Stem("pariziană"), "parizian");});
test("parizianului -> parizian", function() {deepEqual( Stem("parizianului"), "parizian");});
test("pariziene -> parizien", function() {deepEqual( Stem("pariziene"), "parizien");});
test("parizieni -> parizien", function() {deepEqual( Stem("parizieni"), "parizien");});
test("parîme -> parîm", function() {deepEqual( Stem("parîme"), "parîm");});
test("parlamentar -> parlamentar", function() {deepEqual( Stem("parlamentar"), "parlamentar");});
test("parlamentară -> parlament", function() {deepEqual( Stem("parlamentară"), "parlament");});
test("parlamentare -> parlament", function() {deepEqual( Stem("parlamentare"), "parlament");});
test("parlamentari -> parlamentar", function() {deepEqual( Stem("parlamentari"), "parlamentar");});
test("parlamentarism -> parlamentarist", function() {deepEqual( Stem("parlamentarism"), "parlamentarist");});
test("parlamentări -> parlamentăr", function() {deepEqual( Stem("parlamentări"), "parlamentăr");});
test("parlamentele -> parlament", function() {deepEqual( Stem("parlamentele"), "parlament");});
test("parlamentul -> parlament", function() {deepEqual( Stem("parlamentul"), "parlament");});
test("parmalâc -> parmalâc", function() {deepEqual( Stem("parmalâc"), "parmalâc");});
test("parodiam -> parod", function() {deepEqual( Stem("parodiam"), "parod");});
test("parodie -> parod", function() {deepEqual( Stem("parodie"), "parod");});
test("parodieze -> parodiez", function() {deepEqual( Stem("parodieze"), "parodiez");});
test("paroxism -> paroxist", function() {deepEqual( Stem("paroxism"), "paroxist");});
test("parte -> part", function() {deepEqual( Stem("parte"), "part");});
test("partea -> part", function() {deepEqual( Stem("partea"), "part");});
test("partener -> partener", function() {deepEqual( Stem("partener"), "partener");});
test("partenera -> partener", function() {deepEqual( Stem("partenera"), "partener");});
test("partenerii -> partener", function() {deepEqual( Stem("partenerii"), "partener");});
test("partenerul -> partener", function() {deepEqual( Stem("partenerul"), "partener");});
test("partenerului -> partener", function() {deepEqual( Stem("partenerului"), "partener");});
test("participare -> particip", function() {deepEqual( Stem("participare"), "particip");});
test("participaţiei -> particip", function() {deepEqual( Stem("participaţiei"), "particip");});
test("participă -> particip", function() {deepEqual( Stem("participă"), "particip");});
test("participiului -> particip", function() {deepEqual( Stem("participiului"), "particip");});
test("particular -> particular", function() {deepEqual( Stem("particular"), "particular");});
test("particularitate -> particular", function() {deepEqual( Stem("particularitate"), "particular");});
test("particularului -> particular", function() {deepEqual( Stem("particularului"), "particular");});
test("particule -> particul", function() {deepEqual( Stem("particule"), "particul");});
test("partid -> partid", function() {deepEqual( Stem("partid"), "partid");});
test("partida -> partid", function() {deepEqual( Stem("partida"), "partid");});
test("partidă -> partid", function() {deepEqual( Stem("partidă"), "partid");});
test("partide -> partid", function() {deepEqual( Stem("partide"), "partid");});
test("partidele -> partid", function() {deepEqual( Stem("partidele"), "partid");});
test("partidelor -> partid", function() {deepEqual( Stem("partidelor"), "partid");});
test("partidul -> partid", function() {deepEqual( Stem("partidul"), "partid");});
test("partidului -> partid", function() {deepEqual( Stem("partidului"), "partid");});
test("partizan -> partizan", function() {deepEqual( Stem("partizan"), "partizan");});
test("partizanii -> partizan", function() {deepEqual( Stem("partizanii"), "partizan");});
test("partizanul -> partizan", function() {deepEqual( Stem("partizanul"), "partizan");});
test("parvenit -> parven", function() {deepEqual( Stem("parvenit"), "parven");});
test("parvenitism -> parvenitist", function() {deepEqual( Stem("parvenitism"), "parvenitist");});
test("parvenitismul -> parvenitist", function() {deepEqual( Stem("parvenitismul"), "parvenitist");});
test("parvenitismului -> parvenitist", function() {deepEqual( Stem("parvenitismului"), "parvenitist");});
test("parvenitul -> parven", function() {deepEqual( Stem("parvenitul"), "parven");});
test("parvenitului -> parven", function() {deepEqual( Stem("parvenitului"), "parven");});
test("parveniţi -> parven", function() {deepEqual( Stem("parveniţi"), "parven");});
test("pas -> pas", function() {deepEqual( Stem("pas"), "pas");});
test("pasă -> pas", function() {deepEqual( Stem("pasă"), "pas");});
test("pasămite -> pasăm", function() {deepEqual( Stem("pasămite"), "pasăm");});
test("pasăre -> pasăr", function() {deepEqual( Stem("pasăre"), "pasăr");});
test("pasărea -> pasăr", function() {deepEqual( Stem("pasărea"), "pasăr");});
test("pascal -> pascal", function() {deepEqual( Stem("pascal"), "pascal");});
test("pasibilă -> pasibil", function() {deepEqual( Stem("pasibilă"), "pasibil");});
test("pasibile -> pasib", function() {deepEqual( Stem("pasibile"), "pasib");});
test("pasibili -> pasibil", function() {deepEqual( Stem("pasibili"), "pasibil");});
test("pasiona -> pasion", function() {deepEqual( Stem("pasiona"), "pasion");});
test("pasional -> pasional", function() {deepEqual( Stem("pasional"), "pasional");});
test("pasionalitatea -> pasional", function() {deepEqual( Stem("pasionalitatea"), "pasional");});
test("pasionat -> pasion", function() {deepEqual( Stem("pasionat"), "pasion");});
test("pasionată -> pasion", function() {deepEqual( Stem("pasionată"), "pasion");});
test("pasionaţi -> pasion", function() {deepEqual( Stem("pasionaţi"), "pasion");});
test("pasionezi -> pasion", function() {deepEqual( Stem("pasionezi"), "pasion");});
test("pasiune -> pasiun", function() {deepEqual( Stem("pasiune"), "pasiun");});
test("pasiunea -> pasiun", function() {deepEqual( Stem("pasiunea"), "pasiun");});
test("pasiuni -> pasiun", function() {deepEqual( Stem("pasiuni"), "pasiun");});
test("pasiunii -> pasiun", function() {deepEqual( Stem("pasiunii"), "pasiun");});
test("pasiunile -> pasiun", function() {deepEqual( Stem("pasiunile"), "pasiun");});
test("pasiv -> pasiv", function() {deepEqual( Stem("pasiv"), "pasiv");});
test("pasivă -> pasiv", function() {deepEqual( Stem("pasivă"), "pasiv");});
test("pasivitatea -> pasiv", function() {deepEqual( Stem("pasivitatea"), "pasiv");});
test("pastă -> past", function() {deepEqual( Stem("pastă"), "past");});
test("pastelurile -> pastelur", function() {deepEqual( Stem("pastelurile"), "pastelur");});
test("pastiş -> pastiş", function() {deepEqual( Stem("pastiş"), "pastiş");});
test("pastor -> pastor", function() {deepEqual( Stem("pastor"), "pastor");});
test("pastori -> pastor", function() {deepEqual( Stem("pastori"), "pastor");});
test("pasul -> pas", function() {deepEqual( Stem("pasul"), "pas");});
test("paşaport -> paşaport", function() {deepEqual( Stem("paşaport"), "paşaport");});
test("paşi -> paş", function() {deepEqual( Stem("paşi"), "paş");});
test("paşii -> paş", function() {deepEqual( Stem("paşii"), "paş");});
test("paşnică -> paşnic", function() {deepEqual( Stem("paşnică"), "paşnic");});
test("paşnice -> paşnic", function() {deepEqual( Stem("paşnice"), "paşnic");});
test("paşte -> paşt", function() {deepEqual( Stem("paşte"), "paşt");});
test("paşti -> paşt", function() {deepEqual( Stem("paşti"), "paşt");});
test("paştilor -> paşt", function() {deepEqual( Stem("paştilor"), "paşt");});
test("pat -> pat", function() {deepEqual( Stem("pat"), "pat");});
test("pata -> pat", function() {deepEqual( Stem("pata"), "pat");});
test("pată -> pat", function() {deepEqual( Stem("pată"), "pat");});
test("patentă -> patent", function() {deepEqual( Stem("patentă"), "patent");});
test("paterne -> patern", function() {deepEqual( Stem("paterne"), "patern");});
test("patetice -> patet", function() {deepEqual( Stem("patetice"), "patet");});
test("pateticul -> patet", function() {deepEqual( Stem("pateticul"), "patet");});
test("patima -> patim", function() {deepEqual( Stem("patima"), "patim");});
test("patimă -> patim", function() {deepEqual( Stem("patimă"), "patim");});
test("patologic -> patolog", function() {deepEqual( Stem("patologic"), "patolog");});
test("patologică -> patolog", function() {deepEqual( Stem("patologică"), "patolog");});
test("patos -> patos", function() {deepEqual( Stem("patos"), "patos");});
test("patra -> patr", function() {deepEqual( Stem("patra"), "patr");});
test("patria -> patr", function() {deepEqual( Stem("patria"), "patr");});
test("patriarhal -> patriarhal", function() {deepEqual( Stem("patriarhal"), "patriarhal");});
test("patriarhală -> patriarhal", function() {deepEqual( Stem("patriarhală"), "patriarhal");});
test("patriarhale -> patriarhal", function() {deepEqual( Stem("patriarhale"), "patriarhal");});
test("patriarhului -> patriarh", function() {deepEqual( Stem("patriarhului"), "patriarh");});
test("patrie -> patr", function() {deepEqual( Stem("patrie"), "patr");});
test("patriei -> patr", function() {deepEqual( Stem("patriei"), "patr");});
test("patriot -> patriot", function() {deepEqual( Stem("patriot"), "patriot");});
test("patriotic -> patriot", function() {deepEqual( Stem("patriotic"), "patriot");});
test("patriotică -> patriot", function() {deepEqual( Stem("patriotică"), "patriot");});
test("patriotice -> patriot", function() {deepEqual( Stem("patriotice"), "patriot");});
test("patrioţilor -> patrioţ", function() {deepEqual( Stem("patrioţilor"), "patrioţ");});
test("patroni -> patron", function() {deepEqual( Stem("patroni"), "patron");});
test("patronul -> patron", function() {deepEqual( Stem("patronul"), "patron");});
test("patru -> patru", function() {deepEqual( Stem("patru"), "patru");});
test("patrula -> patrul", function() {deepEqual( Stem("patrula"), "patrul");});
test("patrulare -> patrul", function() {deepEqual( Stem("patrulare"), "patrul");});
test("patrulă -> patrul", function() {deepEqual( Stem("patrulă"), "patrul");});
test("patrule -> patrul", function() {deepEqual( Stem("patrule"), "patrul");});
test("patrulea -> patrul", function() {deepEqual( Stem("patrulea"), "patrul");});
test("patrulele -> patrul", function() {deepEqual( Stem("patrulele"), "patrul");});
test("patrulelor -> patrul", function() {deepEqual( Stem("patrulelor"), "patrul");});
test("patruzeci -> patruzec", function() {deepEqual( Stem("patruzeci"), "patruzec");});
test("patul -> pat", function() {deepEqual( Stem("patul"), "pat");});
test("patului -> pat", function() {deepEqual( Stem("patului"), "pat");});
test("paturi -> patur", function() {deepEqual( Stem("paturi"), "patur");});
test("paul -> paul", function() {deepEqual( Stem("paul"), "paul");});
test("pauză -> pauz", function() {deepEqual( Stem("pauză"), "pauz");});
test("pauze -> pauz", function() {deepEqual( Stem("pauze"), "pauz");});
test("pavată -> pavat", function() {deepEqual( Stem("pavată"), "pavat");});
test("pavate -> pavat", function() {deepEqual( Stem("pavate"), "pavat");});
test("pavilion -> pavilion", function() {deepEqual( Stem("pavilion"), "pavilion");});
test("paza -> paz", function() {deepEqual( Stem("paza"), "paz");});
test("pază -> paz", function() {deepEqual( Stem("pază"), "paz");});
test("pâine -> pâin", function() {deepEqual( Stem("pâine"), "pâin");});
test("pâinea -> pâin", function() {deepEqual( Stem("pâinea"), "pâin");});
test("pâini -> pâin", function() {deepEqual( Stem("pâini"), "pâin");});
test("pâinii -> pâin", function() {deepEqual( Stem("pâinii"), "pâin");});
test("pâlcul -> pâlc", function() {deepEqual( Stem("pâlcul"), "pâlc");});
test("pâlcuri -> pâlcur", function() {deepEqual( Stem("pâlcuri"), "pâlcur");});
test("pâlpâire -> pâlpâir", function() {deepEqual( Stem("pâlpâire"), "pâlpâir");});
test("până -> pân", function() {deepEqual( Stem("până"), "pân");});
test("pândă -> pând", function() {deepEqual( Stem("pândă"), "pând");});
test("pândea -> pând", function() {deepEqual( Stem("pândea"), "pând");});
test("pândeam -> pând", function() {deepEqual( Stem("pândeam"), "pând");});
test("pândesc -> pând", function() {deepEqual( Stem("pândesc"), "pând");});
test("pândeşte -> pând", function() {deepEqual( Stem("pândeşte"), "pând");});
test("pândim -> pând", function() {deepEqual( Stem("pândim"), "pând");});
test("pândind -> pând", function() {deepEqual( Stem("pândind"), "pând");});
test("pândisem -> pând", function() {deepEqual( Stem("pândisem"), "pând");});
test("pândit -> pândit", function() {deepEqual( Stem("pândit"), "pândit");});
test("pângăriri -> pângărir", function() {deepEqual( Stem("pângăriri"), "pângărir");});
test("pântec -> pântec", function() {deepEqual( Stem("pântec"), "pântec");});
test("pântece -> pântec", function() {deepEqual( Stem("pântece"), "pântec");});
test("pântecele -> pântec", function() {deepEqual( Stem("pântecele"), "pântec");});
test("pântecul -> pântec", function() {deepEqual( Stem("pântecul"), "pântec");});
test("pânza -> pânz", function() {deepEqual( Stem("pânza"), "pânz");});
test("pânză -> pânz", function() {deepEqual( Stem("pânză"), "pânz");});
test("pânze -> pânz", function() {deepEqual( Stem("pânze"), "pânz");});
test("pâraiele -> pârai", function() {deepEqual( Stem("pâraiele"), "pârai");});
test("pârâiaş -> pârâiaş", function() {deepEqual( Stem("pârâiaş"), "pârâiaş");});
test("pârâiaşe -> pârâiaş", function() {deepEqual( Stem("pârâiaşe"), "pârâiaş");});
test("pârâiaşul -> pârâiaş", function() {deepEqual( Stem("pârâiaşul"), "pârâiaş");});
test("pârâituri -> pârâitur", function() {deepEqual( Stem("pârâituri"), "pârâitur");});
test("pârâu -> pârâu", function() {deepEqual( Stem("pârâu"), "pârâu");});
test("pârâul -> pârâ", function() {deepEqual( Stem("pârâul"), "pârâ");});
test("pârâului -> pârâ", function() {deepEqual( Stem("pârâului"), "pârâ");});
test("pârăiaş -> pârăiaş", function() {deepEqual( Stem("pârăiaş"), "pârăiaş");});
test("pâslă -> pâsl", function() {deepEqual( Stem("pâslă"), "pâsl");});
test("păcaliţi -> păcal", function() {deepEqual( Stem("păcaliţi"), "păcal");});
test("păcat -> păcat", function() {deepEqual( Stem("păcat"), "păcat");});
test("păcatele -> păcat", function() {deepEqual( Stem("păcatele"), "păcat");});
test("păcatului -> păcat", function() {deepEqual( Stem("păcatului"), "păcat");});
test("păcălesc -> păcăl", function() {deepEqual( Stem("păcălesc"), "păcăl");});
test("păcălim -> păcăl", function() {deepEqual( Stem("păcălim"), "păcăl");});
test("păcălită -> păcăl", function() {deepEqual( Stem("păcălită"), "păcăl");});
test("păcănituri -> păcănitur", function() {deepEqual( Stem("păcănituri"), "păcănitur");});
test("păcătoşi -> păcăt", function() {deepEqual( Stem("păcătoşi"), "păcăt");});
test("păcătoşilor -> păcăt", function() {deepEqual( Stem("păcătoşilor"), "păcăt");});
test("păcii -> păc", function() {deepEqual( Stem("păcii"), "păc");});
test("păcura -> păcur", function() {deepEqual( Stem("păcura"), "păcur");});
test("păcură -> păcur", function() {deepEqual( Stem("păcură"), "păcur");});
test("păduchi -> păduch", function() {deepEqual( Stem("păduchi"), "păduch");});
test("pădurar -> pădurar", function() {deepEqual( Stem("pădurar"), "pădurar");});
test("pădure -> pădur", function() {deepEqual( Stem("pădure"), "pădur");});
test("pădurea -> pădur", function() {deepEqual( Stem("pădurea"), "pădur");});
test("păduri -> pădur", function() {deepEqual( Stem("păduri"), "pădur");});
test("pădurice -> pădur", function() {deepEqual( Stem("pădurice"), "pădur");});
test("păduricea -> pădur", function() {deepEqual( Stem("păduricea"), "pădur");});
test("pădurii -> pădur", function() {deepEqual( Stem("pădurii"), "pădur");});
test("pădurile -> pădur", function() {deepEqual( Stem("pădurile"), "pădur");});
test("pădurilor -> pădur", function() {deepEqual( Stem("pădurilor"), "pădur");});
test("păduros -> pădur", function() {deepEqual( Stem("păduros"), "pădur");});
test("păgân -> păgân", function() {deepEqual( Stem("păgân"), "păgân");});
test("păgubos -> păgub", function() {deepEqual( Stem("păgubos"), "păgub");});
test("păhărele -> păhăr", function() {deepEqual( Stem("păhărele"), "păhăr");});
test("păhăruţ -> păhăruţ", function() {deepEqual( Stem("păhăruţ"), "păhăruţ");});
test("păi -> păi", function() {deepEqual( Stem("păi"), "păi");});
test("păioasă -> păioas", function() {deepEqual( Stem("păioasă"), "păioas");});
test("pălăria -> pălăr", function() {deepEqual( Stem("pălăria"), "pălăr");});
test("pălărie -> pălăr", function() {deepEqual( Stem("pălărie"), "pălăr");});
test("pălăriei -> pălăr", function() {deepEqual( Stem("pălăriei"), "pălăr");});
test("pălării -> pălăr", function() {deepEqual( Stem("pălării"), "pălăr");});
test("pălăriile -> pălăr", function() {deepEqual( Stem("pălăriile"), "pălăr");});
test("pălăriilor -> pălăr", function() {deepEqual( Stem("pălăriilor"), "pălăr");});
test("pălăriuţe -> pălăriuţ", function() {deepEqual( Stem("pălăriuţe"), "pălăriuţ");});
test("pălmuieşti -> pălmui", function() {deepEqual( Stem("pălmuieşti"), "pălmui");});
test("pământ -> pământ", function() {deepEqual( Stem("pământ"), "pământ");});
test("pământeşti -> pământ", function() {deepEqual( Stem("pământeşti"), "pământ");});
test("pământul -> pământ", function() {deepEqual( Stem("pământul"), "pământ");});
test("pământului -> pământ", function() {deepEqual( Stem("pământului"), "pământ");});
test("păpuşa -> păpuş", function() {deepEqual( Stem("păpuşa"), "păpuş");});
test("păpuşii -> păpuş", function() {deepEqual( Stem("păpuşii"), "păpuş");});
test("păr -> păr", function() {deepEqual( Stem("păr"), "păr");});
test("părându -> părându", function() {deepEqual( Stem("părându"), "părându");});
test("părăsească -> părăs", function() {deepEqual( Stem("părăsească"), "părăs");});
test("părăsesc -> părăs", function() {deepEqual( Stem("părăsesc"), "părăs");});
test("părăseşte -> părăs", function() {deepEqual( Stem("părăseşte"), "părăs");});
test("părăseşti -> părăs", function() {deepEqual( Stem("părăseşti"), "părăs");});
test("părăsim -> părăs", function() {deepEqual( Stem("părăsim"), "părăs");});
test("părăsindu -> părăs", function() {deepEqual( Stem("părăsindu"), "părăs");});
test("părăsirii -> părăsir", function() {deepEqual( Stem("părăsirii"), "părăsir");});
test("părăsisem -> părăs", function() {deepEqual( Stem("părăsisem"), "părăs");});
test("părăsit -> părăs", function() {deepEqual( Stem("părăsit"), "părăs");});
test("părăsită -> părăs", function() {deepEqual( Stem("părăsită"), "părăs");});
test("părăsite -> părăs", function() {deepEqual( Stem("părăsite"), "părăs");});
test("părea -> păr", function() {deepEqual( Stem("părea"), "păr");});
test("păream -> păream", function() {deepEqual( Stem("păream"), "păream");});
test("păreau -> păreau", function() {deepEqual( Stem("păreau"), "păreau");});
test("părere -> părer", function() {deepEqual( Stem("părere"), "părer");});
test("părerea -> părer", function() {deepEqual( Stem("părerea"), "părer");});
test("păreri -> părer", function() {deepEqual( Stem("păreri"), "părer");});
test("părerile -> părer", function() {deepEqual( Stem("părerile"), "părer");});
test("păreţi -> păr", function() {deepEqual( Stem("păreţi"), "păr");});
test("părinte -> părint", function() {deepEqual( Stem("părinte"), "părint");});
test("părintele -> părint", function() {deepEqual( Stem("părintele"), "părint");});
test("părintelui -> părintel", function() {deepEqual( Stem("părintelui"), "părintel");});
test("părintesc -> părint", function() {deepEqual( Stem("părintesc"), "părint");});
test("părinteşte -> părint", function() {deepEqual( Stem("părinteşte"), "părint");});
test("părinţi -> părinţ", function() {deepEqual( Stem("părinţi"), "părinţ");});
test("părinţii -> părinţ", function() {deepEqual( Stem("părinţii"), "părinţ");});
test("părînd -> părînd", function() {deepEqual( Stem("părînd"), "părînd");});
test("părţi -> părţ", function() {deepEqual( Stem("părţi"), "părţ");});
test("părţii -> părţ", function() {deepEqual( Stem("părţii"), "părţ");});
test("părţile -> părţ", function() {deepEqual( Stem("părţile"), "părţ");});
test("părul -> păr", function() {deepEqual( Stem("părul"), "păr");});
test("părului -> păr", function() {deepEqual( Stem("părului"), "păr");});
test("păruse -> părus", function() {deepEqual( Stem("păruse"), "părus");});
test("părut -> părut", function() {deepEqual( Stem("părut"), "părut");});
test("păsărilor -> păsăr", function() {deepEqual( Stem("păsărilor"), "păsăr");});
test("păscând -> păsc", function() {deepEqual( Stem("păscând"), "păsc");});
test("păstra -> păstr", function() {deepEqual( Stem("păstra"), "păstr");});
test("păstram -> păstr", function() {deepEqual( Stem("păstram"), "păstr");});
test("păstrarea -> păstr", function() {deepEqual( Stem("păstrarea"), "păstr");});
test("păstrat -> păstrat", function() {deepEqual( Stem("păstrat"), "păstrat");});
test("păstrate -> păstrat", function() {deepEqual( Stem("păstrate"), "păstrat");});
test("păstraţi -> păstr", function() {deepEqual( Stem("păstraţi"), "păstr");});
test("păstrăm -> păstr", function() {deepEqual( Stem("păstrăm"), "păstr");});
test("păstrăv -> păstrăv", function() {deepEqual( Stem("păstrăv"), "păstrăv");});
test("păstrăvii -> păstrăv", function() {deepEqual( Stem("păstrăvii"), "păstrăv");});
test("păstrăvilor -> păstrăv", function() {deepEqual( Stem("păstrăvilor"), "păstrăv");});
test("păstrăvul -> păstrăv", function() {deepEqual( Stem("păstrăvul"), "păstrăv");});
test("păstrează -> păstr", function() {deepEqual( Stem("păstrează"), "păstr");});
test("păstrez -> păstr", function() {deepEqual( Stem("păstrez"), "păstr");});
test("păstreze -> păstr", function() {deepEqual( Stem("păstreze"), "păstr");});
test("păstrezi -> păstr", function() {deepEqual( Stem("păstrezi"), "păstr");});
test("păşească -> păşeasc", function() {deepEqual( Stem("păşească"), "păşeasc");});
test("păşune -> păşun", function() {deepEqual( Stem("păşune"), "păşun");});
test("păşunea -> păşun", function() {deepEqual( Stem("păşunea"), "păşun");});
test("păşuni -> păşun", function() {deepEqual( Stem("păşuni"), "păşun");});
test("păşunilor -> păşun", function() {deepEqual( Stem("păşunilor"), "păşun");});
test("pătată -> pătat", function() {deepEqual( Stem("pătată"), "pătat");});
test("pătimaş -> pătimaş", function() {deepEqual( Stem("pătimaş"), "pătimaş");});
test("pătimaşa -> pătimaş", function() {deepEqual( Stem("pătimaşa"), "pătimaş");});
test("pătimit -> pătim", function() {deepEqual( Stem("pătimit"), "pătim");});
test("pătrată -> pătrat", function() {deepEqual( Stem("pătrată"), "pătrat");});
test("pătrate -> pătrat", function() {deepEqual( Stem("pătrate"), "pătrat");});
test("pătratul -> pătrat", function() {deepEqual( Stem("pătratul"), "pătrat");});
test("pătrăţel -> pătrăţel", function() {deepEqual( Stem("pătrăţel"), "pătrăţel");});
test("pătrund -> pătrund", function() {deepEqual( Stem("pătrund"), "pătrund");});
test("pătrundă -> pătrund", function() {deepEqual( Stem("pătrundă"), "pătrund");});
test("pătrunde -> pătrund", function() {deepEqual( Stem("pătrunde"), "pătrund");});
test("pătrundem -> pătrund", function() {deepEqual( Stem("pătrundem"), "pătrund");});
test("pătrundere -> pătrund", function() {deepEqual( Stem("pătrundere"), "pătrund");});
test("pătruns -> pătruns", function() {deepEqual( Stem("pătruns"), "pătruns");});
test("pătrunsă -> pătruns", function() {deepEqual( Stem("pătrunsă"), "pătruns");});
test("pătrunseseră -> pătrun", function() {deepEqual( Stem("pătrunseseră"), "pătrun");});
test("pătrunză -> pătrunz", function() {deepEqual( Stem("pătrunză"), "pătrunz");});
test("pătrunzătoare -> pătrunz", function() {deepEqual( Stem("pătrunzătoare"), "pătrunz");});
test("pătrunzător -> pătrunz", function() {deepEqual( Stem("pătrunzător"), "pătrunz");});
test("pătrunzi -> pătrunz", function() {deepEqual( Stem("pătrunzi"), "pătrunz");});
test("pătura -> pătur", function() {deepEqual( Stem("pătura"), "pătur");});
test("pătură -> pătur", function() {deepEqual( Stem("pătură"), "pătur");});
test("pături -> pătur", function() {deepEqual( Stem("pături"), "pătur");});
test("păturile -> pătur", function() {deepEqual( Stem("păturile"), "pătur");});
test("păţanii -> păţan", function() {deepEqual( Stem("păţanii"), "păţan");});
test("păţit -> păţit", function() {deepEqual( Stem("păţit"), "păţit");});
test("păzesc -> păzesc", function() {deepEqual( Stem("păzesc"), "păzesc");});
test("păzeşte -> păzeşt", function() {deepEqual( Stem("păzeşte"), "păzeşt");});
test("păzeşti -> păzeşt", function() {deepEqual( Stem("păzeşti"), "păzeşt");});
test("păzit -> păzit", function() {deepEqual( Stem("păzit"), "păzit");});
test("păzită -> păzit", function() {deepEqual( Stem("păzită"), "păzit");});
test("păzite -> păzit", function() {deepEqual( Stem("păzite"), "păzit");});
test("păziţi -> păz", function() {deepEqual( Stem("păziţi"), "păz");});
test("pe -> pe", function() {deepEqual( Stem("pe"), "pe");});
test("pecetea -> pecet", function() {deepEqual( Stem("pecetea"), "pecet");});
test("pecetluită -> pecetlu", function() {deepEqual( Stem("pecetluită"), "pecetlu");});
test("pedagog -> pedagog", function() {deepEqual( Stem("pedagog"), "pedagog");});
test("pedagogul -> pedagog", function() {deepEqual( Stem("pedagogul"), "pedagog");});
test("pedant -> pedant", function() {deepEqual( Stem("pedant"), "pedant");});
test("pedantă -> pedant", function() {deepEqual( Stem("pedantă"), "pedant");});
test("pedeapsa -> pedeaps", function() {deepEqual( Stem("pedeapsa"), "pedeaps");});
test("pedeapsă -> pedeaps", function() {deepEqual( Stem("pedeapsă"), "pedeaps");});
test("pedepse -> pedep", function() {deepEqual( Stem("pedepse"), "pedep");});
test("pedepsească -> pedeps", function() {deepEqual( Stem("pedepsească"), "pedeps");});
test("pedepsise -> pedeps", function() {deepEqual( Stem("pedepsise"), "pedeps");});
test("pedepsite -> pedeps", function() {deepEqual( Stem("pedepsite"), "pedeps");});
test("pederaşti -> pederaşt", function() {deepEqual( Stem("pederaşti"), "pederaşt");});
test("peisaj -> peisaj", function() {deepEqual( Stem("peisaj"), "peisaj");});
test("peisaje -> peisaj", function() {deepEqual( Stem("peisaje"), "peisaj");});
test("peisajele -> peisaj", function() {deepEqual( Stem("peisajele"), "peisaj");});
test("peisajul -> peisaj", function() {deepEqual( Stem("peisajul"), "peisaj");});
test("pelagră -> pelagr", function() {deepEqual( Stem("pelagră"), "pelagr");});
test("pelerinaj -> pelerinaj", function() {deepEqual( Stem("pelerinaj"), "pelerinaj");});
test("pelerină -> pelerin", function() {deepEqual( Stem("pelerină"), "pelerin");});
test("pelerinul -> pelerin", function() {deepEqual( Stem("pelerinul"), "pelerin");});
test("peleş -> peleş", function() {deepEqual( Stem("peleş"), "peleş");});
test("peliculă -> pelicul", function() {deepEqual( Stem("peliculă"), "pelicul");});
test("peliculei -> pelicule", function() {deepEqual( Stem("peliculei"), "pelicule");});
test("pelin -> pelin", function() {deepEqual( Stem("pelin"), "pelin");});
test("peloponesului -> pelopones", function() {deepEqual( Stem("peloponesului"), "pelopones");});
test("peloponezului -> pelopon", function() {deepEqual( Stem("peloponezului"), "pelopon");});
test("penal -> penal", function() {deepEqual( Stem("penal"), "penal");});
test("penală -> penal", function() {deepEqual( Stem("penală"), "penal");});
test("penalizare -> penaliz", function() {deepEqual( Stem("penalizare"), "penaliz");});
test("penalizat -> penaliz", function() {deepEqual( Stem("penalizat"), "penaliz");});
test("penalizatoare -> penaliz", function() {deepEqual( Stem("penalizatoare"), "penaliz");});
test("pendularea -> pendul", function() {deepEqual( Stem("pendularea"), "pendul");});
test("pendulat -> pendul", function() {deepEqual( Stem("pendulat"), "pendul");});
test("pendulă -> pendul", function() {deepEqual( Stem("pendulă"), "pendul");});
test("pendulului -> pendul", function() {deepEqual( Stem("pendulului"), "pendul");});
test("pene -> pen", function() {deepEqual( Stem("pene"), "pen");});
test("penelopa -> penelop", function() {deepEqual( Stem("penelopa"), "penelop");});
test("penetra -> penetr", function() {deepEqual( Stem("penetra"), "penetr");});
test("penetrarea -> penetr", function() {deepEqual( Stem("penetrarea"), "penetr");});
test("penetrat -> penetr", function() {deepEqual( Stem("penetrat"), "penetr");});
test("penetraţi -> penetr", function() {deepEqual( Stem("penetraţi"), "penetr");});
test("penetraţiei -> penetr", function() {deepEqual( Stem("penetraţiei"), "penetr");});
test("penibil -> penibil", function() {deepEqual( Stem("penibil"), "penibil");});
test("penibilă -> penibil", function() {deepEqual( Stem("penibilă"), "penibil");});
test("penibile -> penib", function() {deepEqual( Stem("penibile"), "penib");});
test("peninsulari -> peninsular", function() {deepEqual( Stem("peninsulari"), "peninsular");});
test("peninsulă -> peninsul", function() {deepEqual( Stem("peninsulă"), "peninsul");});
test("peninsule -> peninsul", function() {deepEqual( Stem("peninsule"), "peninsul");});
test("peninsulei -> peninsule", function() {deepEqual( Stem("peninsulei"), "peninsule");});
test("penisurile -> penisur", function() {deepEqual( Stem("penisurile"), "penisur");});
test("penitenciar -> penitenciar", function() {deepEqual( Stem("penitenciar"), "penitenciar");});
test("penitenciare -> penitenciar", function() {deepEqual( Stem("penitenciare"), "penitenciar");});
test("penitenţă -> penitenţ", function() {deepEqual( Stem("penitenţă"), "penitenţ");});
test("peniţe -> peniţ", function() {deepEqual( Stem("peniţe"), "peniţ");});
test("peniţei -> peniţe", function() {deepEqual( Stem("peniţei"), "peniţe");});
test("pennsylvania -> pennsylvan", function() {deepEqual( Stem("pennsylvania"), "pennsylvan");});
test("pensetă -> penset", function() {deepEqual( Stem("pensetă"), "penset");});
test("pensete -> penset", function() {deepEqual( Stem("pensete"), "penset");});
test("pensia -> pens", function() {deepEqual( Stem("pensia"), "pens");});
test("pensie -> pens", function() {deepEqual( Stem("pensie"), "pens");});
test("pensii -> pens", function() {deepEqual( Stem("pensii"), "pens");});
test("pension -> pension", function() {deepEqual( Stem("pension"), "pension");});
test("pensionar -> pensionar", function() {deepEqual( Stem("pensionar"), "pensionar");});
test("pensionară -> pension", function() {deepEqual( Stem("pensionară"), "pension");});
test("pensionarii -> pensionar", function() {deepEqual( Stem("pensionarii"), "pensionar");});
test("pensiune -> pensiun", function() {deepEqual( Stem("pensiune"), "pensiun");});
test("pentagonal -> pentagonal", function() {deepEqual( Stem("pentagonal"), "pentagonal");});
test("pentagonul -> pentagon", function() {deepEqual( Stem("pentagonul"), "pentagon");});
test("pentagonului -> pentagon", function() {deepEqual( Stem("pentagonului"), "pentagon");});
test("pentasilab -> pentasilab", function() {deepEqual( Stem("pentasilab"), "pentasilab");});
test("pentium -> pentium", function() {deepEqual( Stem("pentium"), "pentium");});
test("pentru -> pentru", function() {deepEqual( Stem("pentru"), "pentru");});
test("penultim -> penult", function() {deepEqual( Stem("penultim"), "penult");});
test("penultima -> penultim", function() {deepEqual( Stem("penultima"), "penultim");});
test("penumbra -> penumbr", function() {deepEqual( Stem("penumbra"), "penumbr");});
test("penumbră -> penumbr", function() {deepEqual( Stem("penumbră"), "penumbr");});
test("penumbre -> penumbr", function() {deepEqual( Stem("penumbre"), "penumbr");});
test("penurie -> penur", function() {deepEqual( Stem("penurie"), "penur");});
test("pepene -> pepen", function() {deepEqual( Stem("pepene"), "pepen");});
test("pepinieră -> pepinier", function() {deepEqual( Stem("pepinieră"), "pepinier");});
test("perceapă -> perceap", function() {deepEqual( Stem("perceapă"), "perceap");});
test("percep -> percep", function() {deepEqual( Stem("percep"), "percep");});
test("percepe -> percep", function() {deepEqual( Stem("percepe"), "percep");});
test("percepeam -> percep", function() {deepEqual( Stem("percepeam"), "percep");});
test("percepem -> percep", function() {deepEqual( Stem("percepem"), "percep");});
test("perceperea -> percep", function() {deepEqual( Stem("perceperea"), "percep");});
test("perceptibil -> percept", function() {deepEqual( Stem("perceptibil"), "percept");});
test("perceptibilă -> percept", function() {deepEqual( Stem("perceptibilă"), "percept");});
test("perceptibile -> perceptib", function() {deepEqual( Stem("perceptibile"), "perceptib");});
test("perceptibilitate -> percept", function() {deepEqual( Stem("perceptibilitate"), "percept");});
test("percepţia -> percepţ", function() {deepEqual( Stem("percepţia"), "percepţ");});
test("percepţie -> percepţ", function() {deepEqual( Stem("percepţie"), "percepţ");});
test("percepţii -> percepţ", function() {deepEqual( Stem("percepţii"), "percepţ");});
test("percepţiile -> percepţ", function() {deepEqual( Stem("percepţiile"), "percepţ");});
test("percepţiune -> percept", function() {deepEqual( Stem("percepţiune"), "percept");});
test("percepţiunea -> percept", function() {deepEqual( Stem("percepţiunea"), "percept");});
test("percepţiuni -> percept", function() {deepEqual( Stem("percepţiuni"), "percept");});
test("percepţiunii -> percept", function() {deepEqual( Stem("percepţiunii"), "percept");});
test("percepţiunile -> percept", function() {deepEqual( Stem("percepţiunile"), "percept");});
test("percepţiunilor -> percept", function() {deepEqual( Stem("percepţiunilor"), "percept");});
test("perceput -> percep", function() {deepEqual( Stem("perceput"), "percep");});
test("percepută -> percep", function() {deepEqual( Stem("percepută"), "percep");});
test("percheziţie -> percheziţ", function() {deepEqual( Stem("percheziţie"), "percheziţ");});
test("percheziţiile -> perchez", function() {deepEqual( Stem("percheziţiile"), "perchez");});
test("percipi -> percip", function() {deepEqual( Stem("percipi"), "percip");});
test("percutante -> percut", function() {deepEqual( Stem("percutante"), "percut");});
test("perdea -> perd", function() {deepEqual( Stem("perdea"), "perd");});
test("perdeaua -> perdeau", function() {deepEqual( Stem("perdeaua"), "perdeau");});
test("perdele -> perd", function() {deepEqual( Stem("perdele"), "perd");});
test("perdelele -> perdel", function() {deepEqual( Stem("perdelele"), "perdel");});
test("perdeluţele -> perdeluţ", function() {deepEqual( Stem("perdeluţele"), "perdeluţ");});
test("pere -> per", function() {deepEqual( Stem("pere"), "per");});
test("pereche -> perech", function() {deepEqual( Stem("pereche"), "perech");});
test("perechea -> perech", function() {deepEqual( Stem("perechea"), "perech");});
test("perechi -> perech", function() {deepEqual( Stem("perechi"), "perech");});
test("perechilor -> perech", function() {deepEqual( Stem("perechilor"), "perech");});
test("perete -> peret", function() {deepEqual( Stem("perete"), "peret");});
test("peretele -> peret", function() {deepEqual( Stem("peretele"), "peret");});
test("pereţi -> per", function() {deepEqual( Stem("pereţi"), "per");});
test("pereţii -> per", function() {deepEqual( Stem("pereţii"), "per");});
test("perfect -> perfect", function() {deepEqual( Stem("perfect"), "perfect");});
test("perfecta -> perfect", function() {deepEqual( Stem("perfecta"), "perfect");});
test("perfectare -> perfect", function() {deepEqual( Stem("perfectare"), "perfect");});
test("perfectarea -> perfect", function() {deepEqual( Stem("perfectarea"), "perfect");});
test("perfectat -> perfect", function() {deepEqual( Stem("perfectat"), "perfect");});
test("perfectă -> perfect", function() {deepEqual( Stem("perfectă"), "perfect");});
test("perfecte -> perfect", function() {deepEqual( Stem("perfecte"), "perfect");});
test("perfecţie -> perfecţ", function() {deepEqual( Stem("perfecţie"), "perfecţ");});
test("perfecţionat -> perfecţion", function() {deepEqual( Stem("perfecţionat"), "perfecţion");});
test("perfid -> perfid", function() {deepEqual( Stem("perfid"), "perfid");});
test("perfide -> perfid", function() {deepEqual( Stem("perfide"), "perfid");});
test("peri -> per", function() {deepEqual( Stem("peri"), "per");});
test("pericol -> pericol", function() {deepEqual( Stem("pericol"), "pericol");});
test("pericolele -> pericol", function() {deepEqual( Stem("pericolele"), "pericol");});
test("pericolul -> pericol", function() {deepEqual( Stem("pericolul"), "pericol");});
test("periculoasă -> pericul", function() {deepEqual( Stem("periculoasă"), "pericul");});
test("periculos -> pericul", function() {deepEqual( Stem("periculos"), "pericul");});
test("periculoşi -> pericul", function() {deepEqual( Stem("periculoşi"), "pericul");});
test("periferică -> perifer", function() {deepEqual( Stem("periferică"), "perifer");});
test("periferice -> perifer", function() {deepEqual( Stem("periferice"), "perifer");});
test("perioada -> perioad", function() {deepEqual( Stem("perioada"), "perioad");});
test("perioadă -> perioad", function() {deepEqual( Stem("perioadă"), "perioad");});
test("peripeţii -> perip", function() {deepEqual( Stem("peripeţii"), "perip");});
test("peritonită -> periton", function() {deepEqual( Stem("peritonită"), "periton");});
test("perlele -> perl", function() {deepEqual( Stem("perlele"), "perl");});
test("permanentă -> permanent", function() {deepEqual( Stem("permanentă"), "permanent");});
test("permanenţă -> permanenţ", function() {deepEqual( Stem("permanenţă"), "permanenţ");});
test("permis -> permis", function() {deepEqual( Stem("permis"), "permis");});
test("permise -> perm", function() {deepEqual( Stem("permise"), "perm");});
test("permisie -> permis", function() {deepEqual( Stem("permisie"), "permis");});
test("permit -> permit", function() {deepEqual( Stem("permit"), "permit");});
test("permite -> permit", function() {deepEqual( Stem("permite"), "permit");});
test("permitea -> permit", function() {deepEqual( Stem("permitea"), "permit");});
test("permutări -> permutăr", function() {deepEqual( Stem("permutări"), "permutăr");});
test("perna -> pern", function() {deepEqual( Stem("perna"), "pern");});
test("pernă -> pern", function() {deepEqual( Stem("pernă"), "pern");});
test("perne -> pern", function() {deepEqual( Stem("perne"), "pern");});
test("pernele -> pern", function() {deepEqual( Stem("pernele"), "pern");});
test("pernelor -> pern", function() {deepEqual( Stem("pernelor"), "pern");});
test("pernicioasă -> pernic", function() {deepEqual( Stem("pernicioasă"), "pernic");});
test("pernicioase -> pernic", function() {deepEqual( Stem("pernicioase"), "pernic");});
test("pernicioasele -> pernic", function() {deepEqual( Stem("pernicioasele"), "pernic");});
test("peroane -> peroan", function() {deepEqual( Stem("peroane"), "peroan");});
test("peron -> peron", function() {deepEqual( Stem("peron"), "peron");});
test("perpendicular -> perpendicular", function() {deepEqual( Stem("perpendicular"), "perpendicular");});
test("perpendiculara -> perpendicular", function() {deepEqual( Stem("perpendiculara"), "perpendicular");});
test("perpendiculară -> perpendicul", function() {deepEqual( Stem("perpendiculară"), "perpendicul");});
test("perpendiculare -> perpendicul", function() {deepEqual( Stem("perpendiculare"), "perpendicul");});
test("perpetue -> perpetu", function() {deepEqual( Stem("perpetue"), "perpetu");});
test("perpetuează -> perpetu", function() {deepEqual( Stem("perpetuează"), "perpetu");});
test("perpetuu -> perpetuu", function() {deepEqual( Stem("perpetuu"), "perpetuu");});
test("perplexitate -> perplex", function() {deepEqual( Stem("perplexitate"), "perplex");});
test("perplexitatea -> perplex", function() {deepEqual( Stem("perplexitatea"), "perplex");});
test("persista -> persist", function() {deepEqual( Stem("persista"), "persist");});
test("persistă -> persist", function() {deepEqual( Stem("persistă"), "persist");});
test("persistente -> persistent", function() {deepEqual( Stem("persistente"), "persistent");});
test("persistenţa -> persistenţ", function() {deepEqual( Stem("persistenţa"), "persistenţ");});
test("persistenţă -> persistenţ", function() {deepEqual( Stem("persistenţă"), "persistenţ");});
test("persistenţe -> persistenţ", function() {deepEqual( Stem("persistenţe"), "persistenţ");});
test("persistenţei -> persistenţe", function() {deepEqual( Stem("persistenţei"), "persistenţe");});
test("persistenţele -> persistenţ", function() {deepEqual( Stem("persistenţele"), "persistenţ");});
test("persoana -> persoan", function() {deepEqual( Stem("persoana"), "persoan");});
test("persoană -> persoan", function() {deepEqual( Stem("persoană"), "persoan");});
test("persoane -> persoan", function() {deepEqual( Stem("persoane"), "persoan");});
test("persoanei -> persoane", function() {deepEqual( Stem("persoanei"), "persoane");});
test("persoanele -> persoan", function() {deepEqual( Stem("persoanele"), "persoan");});
test("persoanelor -> persoan", function() {deepEqual( Stem("persoanelor"), "persoan");});
test("personaj -> personaj", function() {deepEqual( Stem("personaj"), "personaj");});
test("personajelor -> personaj", function() {deepEqual( Stem("personajelor"), "personaj");});
test("personal -> personal", function() {deepEqual( Stem("personal"), "personal");});
test("personală -> personal", function() {deepEqual( Stem("personală"), "personal");});
test("personale -> personal", function() {deepEqual( Stem("personale"), "personal");});
test("personalitate -> personal", function() {deepEqual( Stem("personalitate"), "personal");});
test("personalitatea -> personal", function() {deepEqual( Stem("personalitatea"), "personal");});
test("personalităţii -> personal", function() {deepEqual( Stem("personalităţii"), "personal");});
test("personalităţilor -> personal", function() {deepEqual( Stem("personalităţilor"), "personal");});
test("perspectiva -> perspect", function() {deepEqual( Stem("perspectiva"), "perspect");});
test("perspectivă -> perspect", function() {deepEqual( Stem("perspectivă"), "perspect");});
test("perspective -> perspect", function() {deepEqual( Stem("perspective"), "perspect");});
test("perspectivele -> perspect", function() {deepEqual( Stem("perspectivele"), "perspect");});
test("perspicacitatea -> perspicac", function() {deepEqual( Stem("perspicacitatea"), "perspicac");});
test("perturbare -> perturb", function() {deepEqual( Stem("perturbare"), "perturb");});
test("perturbată -> perturb", function() {deepEqual( Stem("perturbată"), "perturb");});
test("perturbaţiunea -> perturb", function() {deepEqual( Stem("perturbaţiunea"), "perturb");});
test("perturbaţiuni -> perturbat", function() {deepEqual( Stem("perturbaţiuni"), "perturbat");});
test("perturbări -> perturbăr", function() {deepEqual( Stem("perturbări"), "perturbăr");});
test("perului -> per", function() {deepEqual( Stem("perului"), "per");});
test("perversă -> pervers", function() {deepEqual( Stem("perversă"), "pervers");});
test("perversitate -> pervers", function() {deepEqual( Stem("perversitate"), "pervers");});
test("perversiune -> perversiun", function() {deepEqual( Stem("perversiune"), "perversiun");});
test("perverşi -> perverş", function() {deepEqual( Stem("perverşi"), "perverş");});
test("pervertiţi -> pervert", function() {deepEqual( Stem("pervertiţi"), "pervert");});
test("pesemne -> pesemn", function() {deepEqual( Stem("pesemne"), "pesemn");});
test("pesimism -> pesimist", function() {deepEqual( Stem("pesimism"), "pesimist");});
test("pesimismul -> pesimist", function() {deepEqual( Stem("pesimismul"), "pesimist");});
test("pesimist -> pesimist", function() {deepEqual( Stem("pesimist"), "pesimist");});
test("pesimişti -> pesimist", function() {deepEqual( Stem("pesimişti"), "pesimist");});
test("pesmet -> pesmet", function() {deepEqual( Stem("pesmet"), "pesmet");});
test("peste -> pest", function() {deepEqual( Stem("peste"), "pest");});
test("pestriţă -> pestriţ", function() {deepEqual( Stem("pestriţă"), "pestriţ");});
test("peşte -> peşt", function() {deepEqual( Stem("peşte"), "peşt");});
test("peştele -> peşt", function() {deepEqual( Stem("peştele"), "peşt");});
test("peştera -> peşter", function() {deepEqual( Stem("peştera"), "peşter");});
test("petala -> petal", function() {deepEqual( Stem("petala"), "petal");});
test("petală -> petal", function() {deepEqual( Stem("petală"), "petal");});
test("petale -> petal", function() {deepEqual( Stem("petale"), "petal");});
test("pete -> pet", function() {deepEqual( Stem("pete"), "pet");});
test("petic -> petic", function() {deepEqual( Stem("petic"), "petic");});
test("petice -> petic", function() {deepEqual( Stem("petice"), "petic");});
test("petiţia -> petiţ", function() {deepEqual( Stem("petiţia"), "petiţ");});
test("petiţie -> petiţ", function() {deepEqual( Stem("petiţie"), "petiţ");});
test("petre -> petr", function() {deepEqual( Stem("petre"), "petr");});
test("petreacă -> petreac", function() {deepEqual( Stem("petreacă"), "petreac");});
test("petrec -> petrec", function() {deepEqual( Stem("petrec"), "petrec");});
test("petrecându -> petrec", function() {deepEqual( Stem("petrecându"), "petrec");});
test("petrece -> petrec", function() {deepEqual( Stem("petrece"), "petrec");});
test("petrecea -> petrec", function() {deepEqual( Stem("petrecea"), "petrec");});
test("petreceam -> petrec", function() {deepEqual( Stem("petreceam"), "petrec");});
test("petreceau -> petrec", function() {deepEqual( Stem("petreceau"), "petrec");});
test("petrecem -> petrec", function() {deepEqual( Stem("petrecem"), "petrec");});
test("petrecere -> petrec", function() {deepEqual( Stem("petrecere"), "petrec");});
test("petrecerea -> petrec", function() {deepEqual( Stem("petrecerea"), "petrec");});
test("petreceri -> petrecer", function() {deepEqual( Stem("petreceri"), "petrecer");});
test("petrecerile -> petrecer", function() {deepEqual( Stem("petrecerile"), "petrecer");});
test("petrecuse -> petrec", function() {deepEqual( Stem("petrecuse"), "petrec");});
test("petrecut -> petrec", function() {deepEqual( Stem("petrecut"), "petrec");});
test("petrecute -> petrec", function() {deepEqual( Stem("petrecute"), "petrec");});
test("petrograd -> petrograd", function() {deepEqual( Stem("petrograd"), "petrograd");});
test("petrol -> petrol", function() {deepEqual( Stem("petrol"), "petrol");});
test("petru -> petru", function() {deepEqual( Stem("petru"), "petru");});
test("petzoldt -> petzoldt", function() {deepEqual( Stem("petzoldt"), "petzoldt");});
test("pezevenghi -> pezevengh", function() {deepEqual( Stem("pezevenghi"), "pezevengh");});
test("phenomenon -> phenomenon", function() {deepEqual( Stem("phenomenon"), "phenomenon");});
test("pian -> pian", function() {deepEqual( Stem("pian"), "pian");});
test("pianişti -> pianişt", function() {deepEqual( Stem("pianişti"), "pianişt");});
test("pianul -> pian", function() {deepEqual( Stem("pianul"), "pian");});
test("piară -> piar", function() {deepEqual( Stem("piară"), "piar");});
test("piardă -> piard", function() {deepEqual( Stem("piardă"), "piard");});
test("piarză -> piarz", function() {deepEqual( Stem("piarză"), "piarz");});
test("piatra -> piatr", function() {deepEqual( Stem("piatra"), "piatr");});
test("piatră -> piatr", function() {deepEqual( Stem("piatră"), "piatr");});
test("piaţa -> piaţ", function() {deepEqual( Stem("piaţa"), "piaţ");});
test("piaţă -> piaţ", function() {deepEqual( Stem("piaţă"), "piaţ");});
test("piaţeta -> piaţet", function() {deepEqual( Stem("piaţeta"), "piaţet");});
test("pic -> pic", function() {deepEqual( Stem("pic"), "pic");});
test("picătură -> picăt", function() {deepEqual( Stem("picătură"), "picăt");});
test("picheri -> picher", function() {deepEqual( Stem("picheri"), "picher");});
test("picioare -> picioar", function() {deepEqual( Stem("picioare"), "picioar");});
test("picioarele -> picioar", function() {deepEqual( Stem("picioarele"), "picioar");});
test("picioarelor -> picioar", function() {deepEqual( Stem("picioarelor"), "picioar");});
test("picior -> picior", function() {deepEqual( Stem("picior"), "picior");});
test("piciorul -> picior", function() {deepEqual( Stem("piciorul"), "picior");});
test("pictată -> pictat", function() {deepEqual( Stem("pictată"), "pictat");});
test("pictate -> pictat", function() {deepEqual( Stem("pictate"), "pictat");});
test("pictor -> pictor", function() {deepEqual( Stem("pictor"), "pictor");});
test("pictorul -> pictor", function() {deepEqual( Stem("pictorul"), "pictor");});
test("pictura -> pictur", function() {deepEqual( Stem("pictura"), "pictur");});
test("picturală -> pictural", function() {deepEqual( Stem("picturală"), "pictural");});
test("pictură -> pict", function() {deepEqual( Stem("pictură"), "pict");});
test("picură -> picur", function() {deepEqual( Stem("picură"), "picur");});
test("piedestalul -> piedestal", function() {deepEqual( Stem("piedestalul"), "piedestal");});
test("piedică -> piedic", function() {deepEqual( Stem("piedică"), "piedic");});
test("piedici -> piedic", function() {deepEqual( Stem("piedici"), "piedic");});
test("piedicile -> piedic", function() {deepEqual( Stem("piedicile"), "piedic");});
test("piei -> pie", function() {deepEqual( Stem("piei"), "pie");});
test("pieilor -> pieilor", function() {deepEqual( Stem("pieilor"), "pieilor");});
test("pieire -> pieir", function() {deepEqual( Stem("pieire"), "pieir");});
test("piele -> piel", function() {deepEqual( Stem("piele"), "piel");});
test("pielea -> piel", function() {deepEqual( Stem("pielea"), "piel");});
test("pielii -> piel", function() {deepEqual( Stem("pielii"), "piel");});
test("pieliţa -> pieliţ", function() {deepEqual( Stem("pieliţa"), "pieliţ");});
test("piept -> piept", function() {deepEqual( Stem("piept"), "piept");});
test("pieptănat -> pieptăn", function() {deepEqual( Stem("pieptănat"), "pieptăn");});
test("piepteni -> piepten", function() {deepEqual( Stem("piepteni"), "piepten");});
test("pieptenii -> piepten", function() {deepEqual( Stem("pieptenii"), "piepten");});
test("pieptiş -> pieptiş", function() {deepEqual( Stem("pieptiş"), "pieptiş");});
test("pieptul -> piept", function() {deepEqual( Stem("pieptul"), "piept");});
test("pieptului -> piept", function() {deepEqual( Stem("pieptului"), "piept");});
test("pierd -> pierd", function() {deepEqual( Stem("pierd"), "pierd");});
test("pierde -> pierd", function() {deepEqual( Stem("pierde"), "pierd");});
test("pierdea -> pierd", function() {deepEqual( Stem("pierdea"), "pierd");});
test("pierdeam -> pierd", function() {deepEqual( Stem("pierdeam"), "pierd");});
test("pierdeau -> pierd", function() {deepEqual( Stem("pierdeau"), "pierd");});
test("pierdem -> pierd", function() {deepEqual( Stem("pierdem"), "pierd");});
test("pierdere -> pierd", function() {deepEqual( Stem("pierdere"), "pierd");});
test("pierderea -> pierd", function() {deepEqual( Stem("pierderea"), "pierd");});
test("pierderi -> pierder", function() {deepEqual( Stem("pierderi"), "pierder");});
test("pierderile -> pierder", function() {deepEqual( Stem("pierderile"), "pierder");});
test("pierderilor -> pierder", function() {deepEqual( Stem("pierderilor"), "pierder");});
test("pierdeţi -> pierd", function() {deepEqual( Stem("pierdeţi"), "pierd");});
test("pierduse -> pierd", function() {deepEqual( Stem("pierduse"), "pierd");});
test("pierdut -> pierdut", function() {deepEqual( Stem("pierdut"), "pierdut");});
test("pierdută -> pierdut", function() {deepEqual( Stem("pierdută"), "pierdut");});
test("pierdute -> pierdut", function() {deepEqual( Stem("pierdute"), "pierdut");});
test("pierduţi -> pierduţ", function() {deepEqual( Stem("pierduţi"), "pierduţ");});
test("pieri -> pier", function() {deepEqual( Stem("pieri"), "pier");});
test("pierim -> pier", function() {deepEqual( Stem("pierim"), "pier");});
test("pierit -> pierit", function() {deepEqual( Stem("pierit"), "pierit");});
test("pieritori -> pierit", function() {deepEqual( Stem("pieritori"), "pierit");});
test("pierson -> pierson", function() {deepEqual( Stem("pierson"), "pierson");});
test("pierzând -> pierz", function() {deepEqual( Stem("pierzând"), "pierz");});
test("pierzându -> pierz", function() {deepEqual( Stem("pierzându"), "pierz");});
test("pierzi -> pierz", function() {deepEqual( Stem("pierzi"), "pierz");});
test("pierzînd -> pierzînd", function() {deepEqual( Stem("pierzînd"), "pierzînd");});
test("piesa -> pies", function() {deepEqual( Stem("piesa"), "pies");});
test("piesă -> pies", function() {deepEqual( Stem("piesă"), "pies");});
test("piese -> pie", function() {deepEqual( Stem("piese"), "pie");});
test("piesele -> pie", function() {deepEqual( Stem("piesele"), "pie");});
test("pietate -> pietat", function() {deepEqual( Stem("pietate"), "pietat");});
test("pietoni -> pieton", function() {deepEqual( Stem("pietoni"), "pieton");});
test("pietre -> pietr", function() {deepEqual( Stem("pietre"), "pietr");});
test("pietrei -> pietre", function() {deepEqual( Stem("pietrei"), "pietre");});
test("pietrele -> pietr", function() {deepEqual( Stem("pietrele"), "pietr");});
test("pietriş -> pietriş", function() {deepEqual( Stem("pietriş"), "pietriş");});
test("pietroaie -> pietroai", function() {deepEqual( Stem("pietroaie"), "pietroai");});
test("pietroasă -> pietroas", function() {deepEqual( Stem("pietroasă"), "pietroas");});
test("pietroi -> pietro", function() {deepEqual( Stem("pietroi"), "pietro");});
test("pietruită -> pietruit", function() {deepEqual( Stem("pietruită"), "pietruit");});
test("pieţii -> pieţ", function() {deepEqual( Stem("pieţii"), "pieţ");});
test("pieziş -> pieziş", function() {deepEqual( Stem("pieziş"), "pieziş");});
test("piezişă -> pieziş", function() {deepEqual( Stem("piezişă"), "pieziş");});
test("piezişe -> pieziş", function() {deepEqual( Stem("piezişe"), "pieziş");});
test("pijamale -> pijamal", function() {deepEqual( Stem("pijamale"), "pijamal");});
test("pilda -> pild", function() {deepEqual( Stem("pilda"), "pild");});
test("pildă -> pild", function() {deepEqual( Stem("pildă"), "pild");});
test("pingeleam -> pingel", function() {deepEqual( Stem("pingeleam"), "pingel");});
test("pingeli -> pingel", function() {deepEqual( Stem("pingeli"), "pingel");});
test("pintenog -> pintenog", function() {deepEqual( Stem("pintenog"), "pintenog");});
test("pioasă -> pioas", function() {deepEqual( Stem("pioasă"), "pioas");});
test("pionierului -> pionier", function() {deepEqual( Stem("pionierului"), "pionier");});
test("pionii -> pion", function() {deepEqual( Stem("pionii"), "pion");});
test("pioşi -> pioş", function() {deepEqual( Stem("pioşi"), "pioş");});
test("pipă -> pip", function() {deepEqual( Stem("pipă"), "pip");});
test("pipăi -> pipă", function() {deepEqual( Stem("pipăi"), "pipă");});
test("pipăie -> pipăi", function() {deepEqual( Stem("pipăie"), "pipăi");});
test("pipăire -> pipăir", function() {deepEqual( Stem("pipăire"), "pipăir");});
test("pipăiri -> pipăir", function() {deepEqual( Stem("pipăiri"), "pipăir");});
test("pipăit -> pipăit", function() {deepEqual( Stem("pipăit"), "pipăit");});
test("pipăite -> pipăit", function() {deepEqual( Stem("pipăite"), "pipăit");});
test("pipăitul -> pipăit", function() {deepEqual( Stem("pipăitul"), "pipăit");});
test("pipărate -> pipăr", function() {deepEqual( Stem("pipărate"), "pipăr");});
test("pipernicit -> pipernic", function() {deepEqual( Stem("pipernicit"), "pipernic");});
test("piperul -> piper", function() {deepEqual( Stem("piperul"), "piper");});
test("piramida -> piramid", function() {deepEqual( Stem("piramida"), "piramid");});
test("piramidal -> piramidal", function() {deepEqual( Stem("piramidal"), "piramidal");});
test("piramidă -> piramid", function() {deepEqual( Stem("piramidă"), "piramid");});
test("piramidelor -> piramid", function() {deepEqual( Stem("piramidelor"), "piramid");});
test("pirandello -> pirandello", function() {deepEqual( Stem("pirandello"), "pirandello");});
test("pirateria -> pirater", function() {deepEqual( Stem("pirateria"), "pirater");});
test("piraţi -> pir", function() {deepEqual( Stem("piraţi"), "pir");});
test("pirmassens -> pirmassens", function() {deepEqual( Stem("pirmassens"), "pirmassens");});
test("pirogravată -> pirograv", function() {deepEqual( Stem("pirogravată"), "pirograv");});
test("piroman -> piroman", function() {deepEqual( Stem("piroman"), "piroman");});
test("piron -> piron", function() {deepEqual( Stem("piron"), "piron");});
test("pironesc -> piron", function() {deepEqual( Stem("pironesc"), "piron");});
test("pirpirie -> pirpir", function() {deepEqual( Stem("pirpirie"), "pirpir");});
test("piruetă -> piruet", function() {deepEqual( Stem("piruetă"), "piruet");});
test("piscurile -> piscur", function() {deepEqual( Stem("piscurile"), "piscur");});
test("pisemne -> pisemn", function() {deepEqual( Stem("pisemne"), "pisemn");});
test("pisică -> pisic", function() {deepEqual( Stem("pisică"), "pisic");});
test("pisicilor -> pisic", function() {deepEqual( Stem("pisicilor"), "pisic");});
test("pişcă -> pişc", function() {deepEqual( Stem("pişcă"), "pişc");});
test("pitagora -> pitagor", function() {deepEqual( Stem("pitagora"), "pitagor");});
test("piteşti -> piteşt", function() {deepEqual( Stem("piteşti"), "piteşt");});
test("pitici -> pitic", function() {deepEqual( Stem("pitici"), "pitic");});
test("pitorească -> pitor", function() {deepEqual( Stem("pitorească"), "pitor");});
test("pitoresc -> pitor", function() {deepEqual( Stem("pitoresc"), "pitor");});
test("pitorescul -> pitor", function() {deepEqual( Stem("pitorescul"), "pitor");});
test("pitoreşti -> pitor", function() {deepEqual( Stem("pitoreşti"), "pitor");});
test("piuit -> piuit", function() {deepEqual( Stem("piuit"), "piuit");});
test("piuitul -> piuit", function() {deepEqual( Stem("piuitul"), "piuit");});
test("piuituri -> piuitur", function() {deepEqual( Stem("piuituri"), "piuitur");});
test("pivniţă -> pivniţ", function() {deepEqual( Stem("pivniţă"), "pivniţ");});
test("pivniţele -> pivniţ", function() {deepEqual( Stem("pivniţele"), "pivniţ");});
test("pivniţi -> pivn", function() {deepEqual( Stem("pivniţi"), "pivn");});
test("pîră -> pîr", function() {deepEqual( Stem("pîră"), "pîr");});
test("pîrghie -> pîrgh", function() {deepEqual( Stem("pîrghie"), "pîrgh");});
test("pîrghiile -> pîrgh", function() {deepEqual( Stem("pîrghiile"), "pîrgh");});
test("pîrghiilor -> pîrgh", function() {deepEqual( Stem("pîrghiilor"), "pîrgh");});
test("pîrî -> pîrî", function() {deepEqual( Stem("pîrî"), "pîrî");});
test("pîrîu -> pîrîu", function() {deepEqual( Stem("pîrîu"), "pîrîu");});
test("pîrjolit -> pîrjol", function() {deepEqual( Stem("pîrjolit"), "pîrjol");});
test("pîrjolită -> pîrjol", function() {deepEqual( Stem("pîrjolită"), "pîrjol");});
test("pîrlit -> pîrlit", function() {deepEqual( Stem("pîrlit"), "pîrlit");});
test("pîrliţi -> pîrl", function() {deepEqual( Stem("pîrliţi"), "pîrl");});
test("pîrtia -> pîrt", function() {deepEqual( Stem("pîrtia"), "pîrt");});
test("plac -> plac", function() {deepEqual( Stem("plac"), "plac");});
test("placă -> plac", function() {deepEqual( Stem("placă"), "plac");});
test("place -> plac", function() {deepEqual( Stem("place"), "plac");});
test("placi -> plac", function() {deepEqual( Stem("placi"), "plac");});
test("plai -> pla", function() {deepEqual( Stem("plai"), "pla");});
test("plaiul -> plai", function() {deepEqual( Stem("plaiul"), "plai");});
test("plaiului -> plai", function() {deepEqual( Stem("plaiului"), "plai");});
test("plaiuri -> plaiur", function() {deepEqual( Stem("plaiuri"), "plaiur");});
test("plaiurile -> plaiur", function() {deepEqual( Stem("plaiurile"), "plaiur");});
test("plajă -> plaj", function() {deepEqual( Stem("plajă"), "plaj");});
test("plan -> plan", function() {deepEqual( Stem("plan"), "plan");});
test("planau -> plan", function() {deepEqual( Stem("planau"), "plan");});
test("plană -> plan", function() {deepEqual( Stem("plană"), "plan");});
test("planelor -> plan", function() {deepEqual( Stem("planelor"), "plan");});
test("planeta -> planet", function() {deepEqual( Stem("planeta"), "planet");});
test("planetar -> planetar", function() {deepEqual( Stem("planetar"), "planetar");});
test("planetă -> planet", function() {deepEqual( Stem("planetă"), "planet");});
test("planete -> planet", function() {deepEqual( Stem("planete"), "planet");});
test("planetei -> planete", function() {deepEqual( Stem("planetei"), "planete");});
test("planetele -> planet", function() {deepEqual( Stem("planetele"), "planet");});
test("planetelor -> planet", function() {deepEqual( Stem("planetelor"), "planet");});
test("plantaţii -> plant", function() {deepEqual( Stem("plantaţii"), "plant");});
test("plante -> plant", function() {deepEqual( Stem("plante"), "plant");});
test("plantele -> plant", function() {deepEqual( Stem("plantele"), "plant");});
test("planton -> planton", function() {deepEqual( Stem("planton"), "planton");});
test("planul -> plan", function() {deepEqual( Stem("planul"), "plan");});
test("planului -> plan", function() {deepEqual( Stem("planului"), "plan");});
test("planuri -> planur", function() {deepEqual( Stem("planuri"), "planur");});
test("planurile -> planur", function() {deepEqual( Stem("planurile"), "planur");});
test("planurilor -> planur", function() {deepEqual( Stem("planurilor"), "planur");});
test("plapuma -> plapum", function() {deepEqual( Stem("plapuma"), "plapum");});
test("plasa -> plas", function() {deepEqual( Stem("plasa"), "plas");});
test("plasat -> plasat", function() {deepEqual( Stem("plasat"), "plasat");});
test("plasă -> plas", function() {deepEqual( Stem("plasă"), "plas");});
test("plasează -> plas", function() {deepEqual( Stem("plasează"), "plas");});
test("plasez -> plas", function() {deepEqual( Stem("plasez"), "plas");});
test("plaseze -> plas", function() {deepEqual( Stem("plaseze"), "plas");});
test("plastic -> plastic", function() {deepEqual( Stem("plastic"), "plastic");});
test("plastice -> plastic", function() {deepEqual( Stem("plastice"), "plastic");});
test("plastron -> plastron", function() {deepEqual( Stem("plastron"), "plastron");});
test("plastronare -> plastron", function() {deepEqual( Stem("plastronare"), "plastron");});
test("plată -> plat", function() {deepEqual( Stem("plată"), "plat");});
test("platelor -> plat", function() {deepEqual( Stem("platelor"), "plat");});
test("platitudinea -> platitudin", function() {deepEqual( Stem("platitudinea"), "platitudin");});
test("platitudini -> platitudin", function() {deepEqual( Stem("platitudini"), "platitudin");});
test("platitudinilor -> platitudin", function() {deepEqual( Stem("platitudinilor"), "platitudin");});
test("platon -> platon", function() {deepEqual( Stem("platon"), "platon");});
test("platonic -> platon", function() {deepEqual( Stem("platonic"), "platon");});
test("platonica -> platon", function() {deepEqual( Stem("platonica"), "platon");});
test("platonică -> platon", function() {deepEqual( Stem("platonică"), "platon");});
test("platonice -> platon", function() {deepEqual( Stem("platonice"), "platon");});
test("platoniciană -> platonician", function() {deepEqual( Stem("platoniciană"), "platonician");});
test("platoniciene -> platonicien", function() {deepEqual( Stem("platoniciene"), "platonicien");});
test("platonismul -> platonist", function() {deepEqual( Stem("platonismul"), "platonist");});
test("platou -> platou", function() {deepEqual( Stem("platou"), "platou");});
test("platoul -> plato", function() {deepEqual( Stem("platoul"), "plato");});
test("platouri -> platour", function() {deepEqual( Stem("platouri"), "platour");});
test("plâng -> plâng", function() {deepEqual( Stem("plâng"), "plâng");});
test("plângând -> plâng", function() {deepEqual( Stem("plângând"), "plâng");});
test("plângându -> plâng", function() {deepEqual( Stem("plângându"), "plâng");});
test("plângă -> plâng", function() {deepEqual( Stem("plângă"), "plâng");});
test("plângăreţ -> plângăreţ", function() {deepEqual( Stem("plângăreţ"), "plângăreţ");});
test("plânge -> plâng", function() {deepEqual( Stem("plânge"), "plâng");});
test("plângea -> plâng", function() {deepEqual( Stem("plângea"), "plâng");});
test("plângeau -> plâng", function() {deepEqual( Stem("plângeau"), "plâng");});
test("plângerea -> plâng", function() {deepEqual( Stem("plângerea"), "plâng");});
test("plâns -> plâns", function() {deepEqual( Stem("plâns"), "plâns");});
test("plăcea -> plăc", function() {deepEqual( Stem("plăcea"), "plăc");});
test("plăceau -> plăc", function() {deepEqual( Stem("plăceau"), "plăc");});
test("plăcere -> plăc", function() {deepEqual( Stem("plăcere"), "plăc");});
test("plăcerea -> plăc", function() {deepEqual( Stem("plăcerea"), "plăc");});
test("plăcerii -> plăcer", function() {deepEqual( Stem("plăcerii"), "plăcer");});
test("plăcerile -> plăcer", function() {deepEqual( Stem("plăcerile"), "plăcer");});
test("plăcile -> plăc", function() {deepEqual( Stem("plăcile"), "plăc");});
test("plăcuse -> plăc", function() {deepEqual( Stem("plăcuse"), "plăc");});
test("plăcut -> plăcut", function() {deepEqual( Stem("plăcut"), "plăcut");});
test("plăcută -> plăcut", function() {deepEqual( Stem("plăcută"), "plăcut");});
test("plămânii -> plămân", function() {deepEqual( Stem("plămânii"), "plămân");});
test("plămădeală -> plămădeal", function() {deepEqual( Stem("plămădeală"), "plămădeal");});
test("plăpândă -> plăpând", function() {deepEqual( Stem("plăpândă"), "plăpând");});
test("plătea -> plăt", function() {deepEqual( Stem("plătea"), "plăt");});
test("plăteam -> plăt", function() {deepEqual( Stem("plăteam"), "plăt");});
test("plătească -> plăt", function() {deepEqual( Stem("plătească"), "plăt");});
test("plătesc -> plăt", function() {deepEqual( Stem("plătesc"), "plăt");});
test("plăteşte -> plăt", function() {deepEqual( Stem("plăteşte"), "plăt");});
test("plătind -> plăt", function() {deepEqual( Stem("plătind"), "plăt");});
test("plătit -> plătit", function() {deepEqual( Stem("plătit"), "plătit");});
test("plătite -> plătit", function() {deepEqual( Stem("plătite"), "plătit");});
test("plăţi -> plăţ", function() {deepEqual( Stem("plăţi"), "plăţ");});
test("plăzmui -> plăzm", function() {deepEqual( Stem("plăzmui"), "plăzm");});
test("pleacă -> pleac", function() {deepEqual( Stem("pleacă"), "pleac");});
test("plebee -> plebe", function() {deepEqual( Stem("plebee"), "plebe");});
test("plebeizare -> plebeiz", function() {deepEqual( Stem("plebeizare"), "plebeiz");});
test("plec -> plec", function() {deepEqual( Stem("plec"), "plec");});
test("pleca -> plec", function() {deepEqual( Stem("pleca"), "plec");});
test("plecam -> plec", function() {deepEqual( Stem("plecam"), "plec");});
test("plecare -> plec", function() {deepEqual( Stem("plecare"), "plec");});
test("plecarea -> plec", function() {deepEqual( Stem("plecarea"), "plec");});
test("plecase -> plec", function() {deepEqual( Stem("plecase"), "plec");});
test("plecasem -> plec", function() {deepEqual( Stem("plecasem"), "plec");});
test("plecaseră -> plec", function() {deepEqual( Stem("plecaseră"), "plec");});
test("plecat -> plecat", function() {deepEqual( Stem("plecat"), "plecat");});
test("plecată -> plecat", function() {deepEqual( Stem("plecată"), "plecat");});
test("plecaţi -> plec", function() {deepEqual( Stem("plecaţi"), "plec");});
test("plecau -> plec", function() {deepEqual( Stem("plecau"), "plec");});
test("plecând -> plec", function() {deepEqual( Stem("plecând"), "plec");});
test("plecăm -> plec", function() {deepEqual( Stem("plecăm"), "plec");});
test("plecări -> plecăr", function() {deepEqual( Stem("plecări"), "plecăr");});
test("plecării -> plecăr", function() {deepEqual( Stem("plecării"), "plecăr");});
test("plece -> plec", function() {deepEqual( Stem("plece"), "plec");});
test("pleci -> plec", function() {deepEqual( Stem("pleci"), "plec");});
test("pledează -> pled", function() {deepEqual( Stem("pledează"), "pled");});
test("plehanov -> plehanov", function() {deepEqual( Stem("plehanov"), "plehanov");});
test("pleoape -> pleoap", function() {deepEqual( Stem("pleoape"), "pleoap");});
test("pleoapele -> pleoap", function() {deepEqual( Stem("pleoapele"), "pleoap");});
test("plescăind -> plescăind", function() {deepEqual( Stem("plescăind"), "plescăind");});
test("plesnească -> plesn", function() {deepEqual( Stem("plesnească"), "plesn");});
test("plesneau -> plesn", function() {deepEqual( Stem("plesneau"), "plesn");});
test("plesnesc -> plesn", function() {deepEqual( Stem("plesnesc"), "plesn");});
test("plesneşte -> plesn", function() {deepEqual( Stem("plesneşte"), "plesn");});
test("plesnet -> plesnet", function() {deepEqual( Stem("plesnet"), "plesnet");});
test("plesnete -> plesnet", function() {deepEqual( Stem("plesnete"), "plesnet");});
test("plesnetele -> plesnet", function() {deepEqual( Stem("plesnetele"), "plesnet");});
test("plesni -> plesn", function() {deepEqual( Stem("plesni"), "plesn");});
test("plesnit -> plesnit", function() {deepEqual( Stem("plesnit"), "plesnit");});
test("plesnite -> plesnit", function() {deepEqual( Stem("plesnite"), "plesnit");});
test("plesnituri -> plesnitur", function() {deepEqual( Stem("plesnituri"), "plesnitur");});
test("pletos -> pletos", function() {deepEqual( Stem("pletos"), "pletos");});
test("pleziristă -> plezirist", function() {deepEqual( Stem("pleziristă"), "plezirist");});
test("plic -> plic", function() {deepEqual( Stem("plic"), "plic");});
test("plicticoasă -> plictic", function() {deepEqual( Stem("plicticoasă"), "plictic");});
test("plicticos -> plictic", function() {deepEqual( Stem("plicticos"), "plictic");});
test("plictisea -> plict", function() {deepEqual( Stem("plictisea"), "plict");});
test("plictiseala -> plictiseal", function() {deepEqual( Stem("plictiseala"), "plictiseal");});
test("plictiseală -> plictiseal", function() {deepEqual( Stem("plictiseală"), "plictiseal");});
test("plictiseau -> plictis", function() {deepEqual( Stem("plictiseau"), "plictis");});
test("plictisesc -> plictis", function() {deepEqual( Stem("plictisesc"), "plictis");});
test("plictiseşte -> plictis", function() {deepEqual( Stem("plictiseşte"), "plictis");});
test("plictiseşti -> plictis", function() {deepEqual( Stem("plictiseşti"), "plictis");});
test("plictisit -> plictis", function() {deepEqual( Stem("plictisit"), "plictis");});
test("plictisită -> plictis", function() {deepEqual( Stem("plictisită"), "plictis");});
test("plictisite -> plictis", function() {deepEqual( Stem("plictisite"), "plictis");});
test("plictisitoare -> plictis", function() {deepEqual( Stem("plictisitoare"), "plictis");});
test("plictisiţi -> plictis", function() {deepEqual( Stem("plictisiţi"), "plictis");});
test("plicul -> plic", function() {deepEqual( Stem("plicul"), "plic");});
test("plimba -> plimb", function() {deepEqual( Stem("plimba"), "plimb");});
test("plimbam -> plimb", function() {deepEqual( Stem("plimbam"), "plimb");});
test("plimbare -> plimb", function() {deepEqual( Stem("plimbare"), "plimb");});
test("plimbarea -> plimb", function() {deepEqual( Stem("plimbarea"), "plimb");});
test("plimbase -> plimb", function() {deepEqual( Stem("plimbase"), "plimb");});
test("plimbat -> plimbat", function() {deepEqual( Stem("plimbat"), "plimbat");});
test("plimbaţi -> plimb", function() {deepEqual( Stem("plimbaţi"), "plimb");});
test("plimbau -> plimb", function() {deepEqual( Stem("plimbau"), "plimb");});
test("plimbându -> plimb", function() {deepEqual( Stem("plimbându"), "plimb");});
test("plimbă -> plimb", function() {deepEqual( Stem("plimbă"), "plimb");});
test("plimbăm -> plimb", function() {deepEqual( Stem("plimbăm"), "plimb");});
test("plimbări -> plimbăr", function() {deepEqual( Stem("plimbări"), "plimbăr");});
test("plimbării -> plimbăr", function() {deepEqual( Stem("plimbării"), "plimbăr");});
test("plimbările -> plimbăr", function() {deepEqual( Stem("plimbările"), "plimbăr");});
test("plin -> plin", function() {deepEqual( Stem("plin"), "plin");});
test("plina -> plin", function() {deepEqual( Stem("plina"), "plin");});
test("plină -> plin", function() {deepEqual( Stem("plină"), "plin");});
test("pline -> plin", function() {deepEqual( Stem("pline"), "plin");});
test("plini -> plin", function() {deepEqual( Stem("plini"), "plin");});
test("plinul -> plin", function() {deepEqual( Stem("plinul"), "plin");});
test("plinuţ -> plinuţ", function() {deepEqual( Stem("plinuţ"), "plinuţ");});
test("plinuţe -> plinuţ", function() {deepEqual( Stem("plinuţe"), "plinuţ");});
test("pliscul -> plisc", function() {deepEqual( Stem("pliscul"), "plisc");});
test("ploaia -> ploai", function() {deepEqual( Stem("ploaia"), "ploai");});
test("ploaie -> ploai", function() {deepEqual( Stem("ploaie"), "ploai");});
test("ploi -> plo", function() {deepEqual( Stem("ploi"), "plo");});
test("ploieşti -> ploi", function() {deepEqual( Stem("ploieşti"), "ploi");});
test("ploii -> ploi", function() {deepEqual( Stem("ploii"), "ploi");});
test("ploile -> ploil", function() {deepEqual( Stem("ploile"), "ploil");});
test("ploioasă -> ploioas", function() {deepEqual( Stem("ploioasă"), "ploioas");});
test("plotin -> plotin", function() {deepEqual( Stem("plotin"), "plotin");});
test("plotonier -> plotonier", function() {deepEqual( Stem("plotonier"), "plotonier");});
test("plotonierul -> plotonier", function() {deepEqual( Stem("plotonierul"), "plotonier");});
test("plotonul -> ploton", function() {deepEqual( Stem("plotonul"), "ploton");});
test("plouase -> plou", function() {deepEqual( Stem("plouase"), "plou");});
test("plouat -> plouat", function() {deepEqual( Stem("plouat"), "plouat");});
test("plouată -> plouat", function() {deepEqual( Stem("plouată"), "plouat");});
test("plouate -> plouat", function() {deepEqual( Stem("plouate"), "plouat");});
test("plouă -> plou", function() {deepEqual( Stem("plouă"), "plou");});
test("plumb -> plumb", function() {deepEqual( Stem("plumb"), "plumb");});
test("plumbul -> plumb", function() {deepEqual( Stem("plumbul"), "plumb");});
test("plus -> plus", function() {deepEqual( Stem("plus"), "plus");});
test("plusurile -> plusur", function() {deepEqual( Stem("plusurile"), "plusur");});
test("plutea -> plut", function() {deepEqual( Stem("plutea"), "plut");});
test("pluteau -> plut", function() {deepEqual( Stem("pluteau"), "plut");});
test("pluteşte -> plut", function() {deepEqual( Stem("pluteşte"), "plut");});
test("plutim -> plut", function() {deepEqual( Stem("plutim"), "plut");});
test("plutind -> plut", function() {deepEqual( Stem("plutind"), "plut");});
test("plutire -> plut", function() {deepEqual( Stem("plutire"), "plut");});
test("plutit -> plutit", function() {deepEqual( Stem("plutit"), "plutit");});
test("plutoane -> plutoan", function() {deepEqual( Stem("plutoane"), "plutoan");});
test("pluton -> pluton", function() {deepEqual( Stem("pluton"), "pluton");});
test("plutonier -> plutonier", function() {deepEqual( Stem("plutonier"), "plutonier");});
test("plutonierii -> plutonier", function() {deepEqual( Stem("plutonierii"), "plutonier");});
test("plutonierilor -> plutonier", function() {deepEqual( Stem("plutonierilor"), "plutonier");});
test("plutonierul -> plutonier", function() {deepEqual( Stem("plutonierul"), "plutonier");});
test("plutonul -> pluton", function() {deepEqual( Stem("plutonul"), "pluton");});
test("pneu -> pneu", function() {deepEqual( Stem("pneu"), "pneu");});
test("poalele -> poal", function() {deepEqual( Stem("poalele"), "poal");});
test("poarta -> poart", function() {deepEqual( Stem("poarta"), "poart");});
test("poartă -> poart", function() {deepEqual( Stem("poartă"), "poart");});
test("poarte -> poart", function() {deepEqual( Stem("poarte"), "poart");});
test("poată -> poat", function() {deepEqual( Stem("poată"), "poat");});
test("poate -> poat", function() {deepEqual( Stem("poate"), "poat");});
test("pocăită -> pocăit", function() {deepEqual( Stem("pocăită"), "pocăit");});
test("pocească -> poceasc", function() {deepEqual( Stem("pocească"), "poceasc");});
test("pocher -> pocher", function() {deepEqual( Stem("pocher"), "pocher");});
test("pocker -> pocker", function() {deepEqual( Stem("pocker"), "pocker");});
test("pod -> pod", function() {deepEqual( Stem("pod"), "pod");});
test("podea -> pod", function() {deepEqual( Stem("podea"), "pod");});
test("podeala -> podeal", function() {deepEqual( Stem("podeala"), "podeal");});
test("podeţe -> podeţ", function() {deepEqual( Stem("podeţe"), "podeţ");});
test("podeţele -> podeţ", function() {deepEqual( Stem("podeţele"), "podeţ");});
test("podeţul -> podeţ", function() {deepEqual( Stem("podeţul"), "podeţ");});
test("podgorean -> podgorean", function() {deepEqual( Stem("podgorean"), "podgorean");});
test("podgorenilor -> podgoren", function() {deepEqual( Stem("podgorenilor"), "podgoren");});
test("podiş -> podiş", function() {deepEqual( Stem("podiş"), "podiş");});
test("podişul -> podiş", function() {deepEqual( Stem("podişul"), "podiş");});
test("podişului -> podiş", function() {deepEqual( Stem("podişului"), "podiş");});
test("podul -> pod", function() {deepEqual( Stem("podul"), "pod");});
test("poem -> poem", function() {deepEqual( Stem("poem"), "poem");});
test("poemele -> poem", function() {deepEqual( Stem("poemele"), "poem");});
test("poet -> poet", function() {deepEqual( Stem("poet"), "poet");});
test("poetic -> poetic", function() {deepEqual( Stem("poetic"), "poetic");});
test("poetică -> poetic", function() {deepEqual( Stem("poetică"), "poetic");});
test("poetice -> poetic", function() {deepEqual( Stem("poetice"), "poetic");});
test("poetico -> poetico", function() {deepEqual( Stem("poetico"), "poetico");});
test("poetizabil -> poetiz", function() {deepEqual( Stem("poetizabil"), "poetiz");});
test("poetizată -> poetiz", function() {deepEqual( Stem("poetizată"), "poetiz");});
test("poetizări -> poetizăr", function() {deepEqual( Stem("poetizări"), "poetizăr");});
test("poetizează -> poetiz", function() {deepEqual( Stem("poetizează"), "poetiz");});
test("poetul -> poet", function() {deepEqual( Stem("poetul"), "poet");});
test("poetului -> poet", function() {deepEqual( Stem("poetului"), "poet");});
test("poeţi -> poeţ", function() {deepEqual( Stem("poeţi"), "poeţ");});
test("poeţii -> poeţ", function() {deepEqual( Stem("poeţii"), "poeţ");});
test("poeţilor -> poeţ", function() {deepEqual( Stem("poeţilor"), "poeţ");});
test("poezia -> poez", function() {deepEqual( Stem("poezia"), "poez");});
test("poezie -> poez", function() {deepEqual( Stem("poezie"), "poez");});
test("poeziei -> poez", function() {deepEqual( Stem("poeziei"), "poez");});
test("poeziile -> poez", function() {deepEqual( Stem("poeziile"), "poez");});
test("pofta -> poft", function() {deepEqual( Stem("pofta"), "poft");});
test("poftă -> poft", function() {deepEqual( Stem("poftă"), "poft");});
test("pofte -> poft", function() {deepEqual( Stem("pofte"), "poft");});
test("poftele -> poft", function() {deepEqual( Stem("poftele"), "poft");});
test("poftim -> poft", function() {deepEqual( Stem("poftim"), "poft");});
test("poftit -> poftit", function() {deepEqual( Stem("poftit"), "poftit");});
test("poftiţi -> poft", function() {deepEqual( Stem("poftiţi"), "poft");});
test("poiana -> poian", function() {deepEqual( Stem("poiana"), "poian");});
test("poiană -> poian", function() {deepEqual( Stem("poiană"), "poian");});
test("poienii -> poien", function() {deepEqual( Stem("poienii"), "poien");});
test("poienile -> poien", function() {deepEqual( Stem("poienile"), "poien");});
test("poimâine -> poimâin", function() {deepEqual( Stem("poimâine"), "poimâin");});
test("poincare -> poinc", function() {deepEqual( Stem("poincare"), "poinc");});
test("pojghiţa -> pojghiţ", function() {deepEqual( Stem("pojghiţa"), "pojghiţ");});
test("pol -> pol", function() {deepEqual( Stem("pol"), "pol");});
test("poleia -> polei", function() {deepEqual( Stem("poleia"), "polei");});
test("poleit -> poleit", function() {deepEqual( Stem("poleit"), "poleit");});
test("polemică -> polem", function() {deepEqual( Stem("polemică"), "polem");});
test("polemice -> polem", function() {deepEqual( Stem("polemice"), "polem");});
test("polemizează -> polemiz", function() {deepEqual( Stem("polemizează"), "polemiz");});
test("poli -> pol", function() {deepEqual( Stem("poli"), "pol");});
test("poligoane -> poligoan", function() {deepEqual( Stem("poligoane"), "poligoan");});
test("poligon -> poligon", function() {deepEqual( Stem("poligon"), "poligon");});
test("poligonul -> poligon", function() {deepEqual( Stem("poligonul"), "poligon");});
test("polii -> pol", function() {deepEqual( Stem("polii"), "pol");});
test("politeţea -> politeţ", function() {deepEqual( Stem("politeţea"), "politeţ");});
test("politic -> polit", function() {deepEqual( Stem("politic"), "polit");});
test("politica -> polit", function() {deepEqual( Stem("politica"), "polit");});
test("politică -> polit", function() {deepEqual( Stem("politică"), "polit");});
test("politice -> polit", function() {deepEqual( Stem("politice"), "polit");});
test("politici -> polit", function() {deepEqual( Stem("politici"), "polit");});
test("politiciani -> politician", function() {deepEqual( Stem("politiciani"), "politician");});
test("politicianii -> politician", function() {deepEqual( Stem("politicianii"), "politician");});
test("politicii -> polit", function() {deepEqual( Stem("politicii"), "polit");});
test("politico -> politico", function() {deepEqual( Stem("politico"), "politico");});
test("politicos -> politic", function() {deepEqual( Stem("politicos"), "politic");});
test("politischer -> politischer", function() {deepEqual( Stem("politischer"), "politischer");});
test("poliţaiul -> poliţai", function() {deepEqual( Stem("poliţaiul"), "poliţai");});
test("poliţă -> poliţ", function() {deepEqual( Stem("poliţă"), "poliţ");});
test("poliţia -> poliţ", function() {deepEqual( Stem("poliţia"), "poliţ");});
test("poliţie -> poliţ", function() {deepEqual( Stem("poliţie"), "poliţ");});
test("poliţiei -> pol", function() {deepEqual( Stem("poliţiei"), "pol");});
test("poliţişti -> poliţist", function() {deepEqual( Stem("poliţişti"), "poliţist");});
test("polonez -> polon", function() {deepEqual( Stem("polonez"), "polon");});
test("poloneze -> polon", function() {deepEqual( Stem("poloneze"), "polon");});
test("polonezilor -> polon", function() {deepEqual( Stem("polonezilor"), "polon");});
test("poluat -> poluat", function() {deepEqual( Stem("poluat"), "poluat");});
test("polul -> pol", function() {deepEqual( Stem("polul"), "pol");});
test("pom -> pom", function() {deepEqual( Stem("pom"), "pom");});
test("pomeneam -> pomen", function() {deepEqual( Stem("pomeneam"), "pomen");});
test("pomenesc -> pomen", function() {deepEqual( Stem("pomenesc"), "pomen");});
test("pomeneşte -> pomen", function() {deepEqual( Stem("pomeneşte"), "pomen");});
test("pomenim -> pomen", function() {deepEqual( Stem("pomenim"), "pomen");});
test("pomenire -> pomen", function() {deepEqual( Stem("pomenire"), "pomen");});
test("pomenit -> pomen", function() {deepEqual( Stem("pomenit"), "pomen");});
test("pomenite -> pomen", function() {deepEqual( Stem("pomenite"), "pomen");});
test("pomi -> pom", function() {deepEqual( Stem("pomi"), "pom");});
test("pompă -> pomp", function() {deepEqual( Stem("pompă"), "pomp");});
test("pompos -> pompos", function() {deepEqual( Stem("pompos"), "pompos");});
test("poncife -> poncif", function() {deepEqual( Stem("poncife"), "poncif");});
test("poni -> pon", function() {deepEqual( Stem("poni"), "pon");});
test("popas -> popas", function() {deepEqual( Stem("popas"), "popas");});
test("popescu -> popescu", function() {deepEqual( Stem("popescu"), "popescu");});
test("popescule -> popescul", function() {deepEqual( Stem("popescule"), "popescul");});
test("popice -> popic", function() {deepEqual( Stem("popice"), "popic");});
test("popoare -> popoar", function() {deepEqual( Stem("popoare"), "popoar");});
test("popoarele -> popoar", function() {deepEqual( Stem("popoarele"), "popoar");});
test("popoarelor -> popoar", function() {deepEqual( Stem("popoarelor"), "popoar");});
test("popor -> popor", function() {deepEqual( Stem("popor"), "popor");});
test("poporul -> popor", function() {deepEqual( Stem("poporul"), "popor");});
test("poporului -> popor", function() {deepEqual( Stem("poporului"), "popor");});
test("poposim -> popos", function() {deepEqual( Stem("poposim"), "popos");});
test("popota -> popot", function() {deepEqual( Stem("popota"), "popot");});
test("popotar -> popotar", function() {deepEqual( Stem("popotar"), "popotar");});
test("popotarul -> popotar", function() {deepEqual( Stem("popotarul"), "popotar");});
test("popotarului -> popotar", function() {deepEqual( Stem("popotarului"), "popotar");});
test("popotă -> popot", function() {deepEqual( Stem("popotă"), "popot");});
test("popote -> popot", function() {deepEqual( Stem("popote"), "popot");});
test("popotei -> popote", function() {deepEqual( Stem("popotei"), "popote");});
test("poprire -> popr", function() {deepEqual( Stem("poprire"), "popr");});
test("popular -> popular", function() {deepEqual( Stem("popular"), "popular");});
test("populară -> popul", function() {deepEqual( Stem("populară"), "popul");});
test("populare -> popul", function() {deepEqual( Stem("populare"), "popul");});
test("populaţia -> popul", function() {deepEqual( Stem("populaţia"), "popul");});
test("populaţiei -> popul", function() {deepEqual( Stem("populaţiei"), "popul");});
test("populaţii -> popul", function() {deepEqual( Stem("populaţii"), "popul");});
test("populaţiile -> popul", function() {deepEqual( Stem("populaţiile"), "popul");});
test("populăm -> popul", function() {deepEqual( Stem("populăm"), "popul");});
test("populează -> popul", function() {deepEqual( Stem("populează"), "popul");});
test("porc -> porc", function() {deepEqual( Stem("porc"), "porc");});
test("porcărie -> porcăr", function() {deepEqual( Stem("porcărie"), "porcăr");});
test("porci -> porc", function() {deepEqual( Stem("porci"), "porc");});
test("porcine -> porcin", function() {deepEqual( Stem("porcine"), "porcin");});
test("porecla -> porecl", function() {deepEqual( Stem("porecla"), "porecl");});
test("poreclim -> porecl", function() {deepEqual( Stem("poreclim"), "porecl");});
test("poreclise -> porecl", function() {deepEqual( Stem("poreclise"), "porecl");});
test("pornea -> porn", function() {deepEqual( Stem("pornea"), "porn");});
test("pornească -> porn", function() {deepEqual( Stem("pornească"), "porn");});
test("porneaţi -> porn", function() {deepEqual( Stem("porneaţi"), "porn");});
test("pornesc -> porn", function() {deepEqual( Stem("pornesc"), "porn");});
test("porneşte -> porn", function() {deepEqual( Stem("porneşte"), "porn");});
test("porni -> porn", function() {deepEqual( Stem("porni"), "porn");});
test("pornim -> porn", function() {deepEqual( Stem("pornim"), "porn");});
test("pornind -> porn", function() {deepEqual( Stem("pornind"), "porn");});
test("pornire -> porn", function() {deepEqual( Stem("pornire"), "porn");});
test("pornirea -> porn", function() {deepEqual( Stem("pornirea"), "porn");});
test("porniri -> pornir", function() {deepEqual( Stem("porniri"), "pornir");});
test("pornirile -> pornir", function() {deepEqual( Stem("pornirile"), "pornir");});
test("pornirilor -> pornir", function() {deepEqual( Stem("pornirilor"), "pornir");});
test("pornise -> porn", function() {deepEqual( Stem("pornise"), "porn");});
test("porniseră -> porn", function() {deepEqual( Stem("porniseră"), "porn");});
test("porniserăm -> porn", function() {deepEqual( Stem("porniserăm"), "porn");});
test("pornit -> pornit", function() {deepEqual( Stem("pornit"), "pornit");});
test("pornite -> pornit", function() {deepEqual( Stem("pornite"), "pornit");});
test("porniţi -> porn", function() {deepEqual( Stem("porniţi"), "porn");});
test("poroasă -> poroas", function() {deepEqual( Stem("poroasă"), "poroas");});
test("port -> port", function() {deepEqual( Stem("port"), "port");});
test("portar -> portar", function() {deepEqual( Stem("portar"), "portar");});
test("portativ -> portat", function() {deepEqual( Stem("portativ"), "portat");});
test("portiţe -> portiţ", function() {deepEqual( Stem("portiţe"), "portiţ");});
test("portocală -> portocal", function() {deepEqual( Stem("portocală"), "portocal");});
test("portofel -> portofel", function() {deepEqual( Stem("portofel"), "portofel");});
test("portrete -> portret", function() {deepEqual( Stem("portrete"), "portret");});
test("portretul -> portret", function() {deepEqual( Stem("portretul"), "portret");});
test("portul -> port", function() {deepEqual( Stem("portul"), "port");});
test("porturile -> portur", function() {deepEqual( Stem("porturile"), "portur");});
test("porţelan -> porţelan", function() {deepEqual( Stem("porţelan"), "porţelan");});
test("porţi -> porţ", function() {deepEqual( Stem("porţi"), "porţ");});
test("porţii -> porţ", function() {deepEqual( Stem("porţii"), "porţ");});
test("porţile -> porţ", function() {deepEqual( Stem("porţile"), "porţ");});
test("porţiune -> porţiun", function() {deepEqual( Stem("porţiune"), "porţiun");});
test("porţiuni -> porţiun", function() {deepEqual( Stem("porţiuni"), "porţiun");});
test("porumb -> porumb", function() {deepEqual( Stem("porumb"), "porumb");});
test("porumbei -> porumbe", function() {deepEqual( Stem("porumbei"), "porumbe");});
test("porumbişte -> porumbişt", function() {deepEqual( Stem("porumbişte"), "porumbişt");});
test("porumbul -> porumb", function() {deepEqual( Stem("porumbul"), "porumb");});
test("porumbului -> porumb", function() {deepEqual( Stem("porumbului"), "porumb");});
test("poruncă -> porunc", function() {deepEqual( Stem("poruncă"), "porunc");});
test("poruncesc -> porunc", function() {deepEqual( Stem("poruncesc"), "porunc");});
test("porunceşte -> porunc", function() {deepEqual( Stem("porunceşte"), "porunc");});
test("porunci -> porunc", function() {deepEqual( Stem("porunci"), "porunc");});
test("poruncind -> porunc", function() {deepEqual( Stem("poruncind"), "porunc");});
test("poruncitor -> porunc", function() {deepEqual( Stem("poruncitor"), "porunc");});
test("porunciţi -> porunc", function() {deepEqual( Stem("porunciţi"), "porunc");});
test("posedăm -> posed", function() {deepEqual( Stem("posedăm"), "posed");});
test("posede -> posed", function() {deepEqual( Stem("posede"), "posed");});
test("posesiuni -> posesiun", function() {deepEqual( Stem("posesiuni"), "posesiun");});
test("posesiunii -> posesiun", function() {deepEqual( Stem("posesiunii"), "posesiun");});
test("posesorul -> posesor", function() {deepEqual( Stem("posesorul"), "posesor");});
test("posibil -> posibil", function() {deepEqual( Stem("posibil"), "posibil");});
test("posibilă -> posibil", function() {deepEqual( Stem("posibilă"), "posibil");});
test("posibile -> posib", function() {deepEqual( Stem("posibile"), "posib");});
test("posibilitate -> posibil", function() {deepEqual( Stem("posibilitate"), "posibil");});
test("posibilitatea -> posibil", function() {deepEqual( Stem("posibilitatea"), "posibil");});
test("posibilităţi -> posibil", function() {deepEqual( Stem("posibilităţi"), "posibil");});
test("posibilităţii -> posibil", function() {deepEqual( Stem("posibilităţii"), "posibil");});
test("posibilităţile -> posibil", function() {deepEqual( Stem("posibilităţile"), "posibil");});
test("posibilităţilor -> posibil", function() {deepEqual( Stem("posibilităţilor"), "posibil");});
test("posomorâtă -> posomorât", function() {deepEqual( Stem("posomorâtă"), "posomorât");});
test("post -> post", function() {deepEqual( Stem("post"), "post");});
test("postăvar -> postăvar", function() {deepEqual( Stem("postăvar"), "postăvar");});
test("postul -> post", function() {deepEqual( Stem("postul"), "post");});
test("postula -> postul", function() {deepEqual( Stem("postula"), "postul");});
test("postulare -> postul", function() {deepEqual( Stem("postulare"), "postul");});
test("postularea -> postul", function() {deepEqual( Stem("postularea"), "postul");});
test("postulat -> postul", function() {deepEqual( Stem("postulat"), "postul");});
test("postulate -> postul", function() {deepEqual( Stem("postulate"), "postul");});
test("postulatele -> postul", function() {deepEqual( Stem("postulatele"), "postul");});
test("postulatelor -> postul", function() {deepEqual( Stem("postulatelor"), "postul");});
test("postulatul -> postul", function() {deepEqual( Stem("postulatul"), "postul");});
test("postulatului -> postul", function() {deepEqual( Stem("postulatului"), "postul");});
test("postulăm -> postul", function() {deepEqual( Stem("postulăm"), "postul");});
test("postulează -> postul", function() {deepEqual( Stem("postulează"), "postul");});
test("postulez -> postul", function() {deepEqual( Stem("postulez"), "postul");});
test("postuleze -> postul", function() {deepEqual( Stem("postuleze"), "postul");});
test("posturi -> postur", function() {deepEqual( Stem("posturi"), "postur");});
test("posturile -> postur", function() {deepEqual( Stem("posturile"), "postur");});
test("posturilor -> postur", function() {deepEqual( Stem("posturilor"), "postur");});
test("poşetă -> poşet", function() {deepEqual( Stem("poşetă"), "poşet");});
test("poştală -> poştal", function() {deepEqual( Stem("poştală"), "poştal");});
test("poştali -> poştal", function() {deepEqual( Stem("poştali"), "poştal");});
test("poştă -> poşt", function() {deepEqual( Stem("poştă"), "poşt");});
test("poşte -> poşt", function() {deepEqual( Stem("poşte"), "poşt");});
test("pot -> pot", function() {deepEqual( Stem("pot"), "pot");});
test("potcoavă -> potcoav", function() {deepEqual( Stem("potcoavă"), "potcoav");});
test("potcoave -> potcoav", function() {deepEqual( Stem("potcoave"), "potcoav");});
test("potcovarului -> potcovar", function() {deepEqual( Stem("potcovarului"), "potcovar");});
test("potcovii -> potcov", function() {deepEqual( Stem("potcovii"), "potcov");});
test("potcovioară -> potcovioar", function() {deepEqual( Stem("potcovioară"), "potcovioar");});
test("poteca -> potec", function() {deepEqual( Stem("poteca"), "potec");});
test("potecă -> potec", function() {deepEqual( Stem("potecă"), "potec");});
test("poteci -> potec", function() {deepEqual( Stem("poteci"), "potec");});
test("potenţă -> potenţ", function() {deepEqual( Stem("potenţă"), "potenţ");});
test("poticneşte -> poticn", function() {deepEqual( Stem("poticneşte"), "poticn");});
test("poticnit -> poticn", function() {deepEqual( Stem("poticnit"), "poticn");});
test("potolească -> potol", function() {deepEqual( Stem("potolească"), "potol");});
test("potoleşte -> potol", function() {deepEqual( Stem("potoleşte"), "potol");});
test("potolim -> potol", function() {deepEqual( Stem("potolim"), "potol");});
test("potolit -> potol", function() {deepEqual( Stem("potolit"), "potol");});
test("potolită -> potol", function() {deepEqual( Stem("potolită"), "potol");});
test("potolite -> potol", function() {deepEqual( Stem("potolite"), "potol");});
test("potop -> potop", function() {deepEqual( Stem("potop"), "potop");});
test("potriva -> potriv", function() {deepEqual( Stem("potriva"), "potriv");});
test("potrivea -> potriv", function() {deepEqual( Stem("potrivea"), "potriv");});
test("potrivească -> potriv", function() {deepEqual( Stem("potrivească"), "potriv");});
test("potrivesc -> potriv", function() {deepEqual( Stem("potrivesc"), "potriv");});
test("potriveşte -> potriv", function() {deepEqual( Stem("potriveşte"), "potriv");});
test("potriviri -> potrivir", function() {deepEqual( Stem("potriviri"), "potrivir");});
test("potrivit -> potriv", function() {deepEqual( Stem("potrivit"), "potriv");});
test("potrivită -> potriv", function() {deepEqual( Stem("potrivită"), "potriv");});
test("potrivite -> potriv", function() {deepEqual( Stem("potrivite"), "potriv");});
test("potul -> pot", function() {deepEqual( Stem("potul"), "pot");});
test("poţi -> poţ", function() {deepEqual( Stem("poţi"), "poţ");});
test("pour -> pour", function() {deepEqual( Stem("pour"), "pour");});
test("pouvoir -> pouvoir", function() {deepEqual( Stem("pouvoir"), "pouvoir");});
test("povara -> povar", function() {deepEqual( Stem("povara"), "povar");});
test("povară -> povar", function() {deepEqual( Stem("povară"), "povar");});
test("povârniş -> povârniş", function() {deepEqual( Stem("povârniş"), "povârniş");});
test("povârnişul -> povârniş", function() {deepEqual( Stem("povârnişul"), "povârniş");});
test("povârnişuri -> povârnişur", function() {deepEqual( Stem("povârnişuri"), "povârnişur");});
test("povârnişurile -> povârnişur", function() {deepEqual( Stem("povârnişurile"), "povârnişur");});
test("poveste -> povest", function() {deepEqual( Stem("poveste"), "povest");});
test("povestea -> povest", function() {deepEqual( Stem("povestea"), "povest");});
test("povestească -> povest", function() {deepEqual( Stem("povestească"), "povest");});
test("povesteau -> povest", function() {deepEqual( Stem("povesteau"), "povest");});
test("povestesc -> povest", function() {deepEqual( Stem("povestesc"), "povest");});
test("povesteşte -> povest", function() {deepEqual( Stem("povesteşte"), "povest");});
test("povesti -> povest", function() {deepEqual( Stem("povesti"), "povest");});
test("povestim -> povest", function() {deepEqual( Stem("povestim"), "povest");});
test("povestindu -> povest", function() {deepEqual( Stem("povestindu"), "povest");});
test("povestire -> povest", function() {deepEqual( Stem("povestire"), "povest");});
test("povestit -> povest", function() {deepEqual( Stem("povestit"), "povest");});
test("povestite -> povest", function() {deepEqual( Stem("povestite"), "povest");});
test("povestitorul -> povest", function() {deepEqual( Stem("povestitorul"), "povest");});
test("poveşti -> poveşt", function() {deepEqual( Stem("poveşti"), "poveşt");});
test("poveştile -> poveşt", function() {deepEqual( Stem("poveştile"), "poveşt");});
test("poza -> poz", function() {deepEqual( Stem("poza"), "poz");});
test("poze -> poz", function() {deepEqual( Stem("poze"), "poz");});
test("pozitiv -> pozit", function() {deepEqual( Stem("pozitiv"), "pozit");});
test("pozitive -> pozit", function() {deepEqual( Stem("pozitive"), "pozit");});
test("pozitivismului -> pozitivist", function() {deepEqual( Stem("pozitivismului"), "pozitivist");});
test("pozitiviste -> pozitivist", function() {deepEqual( Stem("pozitiviste"), "pozitivist");});
test("pozitiviştilor -> pozitivist", function() {deepEqual( Stem("pozitiviştilor"), "pozitivist");});
test("poziţia -> poziţ", function() {deepEqual( Stem("poziţia"), "poziţ");});
test("poziţie -> poziţ", function() {deepEqual( Stem("poziţie"), "poziţ");});
test("poziţii -> poz", function() {deepEqual( Stem("poziţii"), "poz");});
test("poziţiile -> poz", function() {deepEqual( Stem("poziţiile"), "poz");});
test("poziţiune -> pozit", function() {deepEqual( Stem("poziţiune"), "pozit");});
test("poziţiunea -> pozit", function() {deepEqual( Stem("poziţiunea"), "pozit");});
test("poziţiuni -> pozit", function() {deepEqual( Stem("poziţiuni"), "pozit");});
test("poznaş -> poznaş", function() {deepEqual( Stem("poznaş"), "poznaş");});
test("pozne -> pozn", function() {deepEqual( Stem("pozne"), "pozn");});
test("poznele -> pozn", function() {deepEqual( Stem("poznele"), "pozn");});
test("practic -> practic", function() {deepEqual( Stem("practic"), "practic");});
test("practica -> practic", function() {deepEqual( Stem("practica"), "practic");});
test("practicat -> practic", function() {deepEqual( Stem("practicat"), "practic");});
test("practicată -> practic", function() {deepEqual( Stem("practicată"), "practic");});
test("practică -> practic", function() {deepEqual( Stem("practică"), "practic");});
test("practice -> practic", function() {deepEqual( Stem("practice"), "practic");});
test("practici -> practic", function() {deepEqual( Stem("practici"), "practic");});
test("practicii -> practic", function() {deepEqual( Stem("practicii"), "practic");});
test("prada -> prad", function() {deepEqual( Stem("prada"), "prad");});
test("pradă -> prad", function() {deepEqual( Stem("pradă"), "prad");});
test("praf -> praf", function() {deepEqual( Stem("praf"), "praf");});
test("praful -> praf", function() {deepEqual( Stem("praful"), "praf");});
test("prag -> prag", function() {deepEqual( Stem("prag"), "prag");});
test("pragmatismul -> pragmatist", function() {deepEqual( Stem("pragmatismul"), "pragmatist");});
test("pragul -> prag", function() {deepEqual( Stem("pragul"), "prag");});
test("prahovei -> prahove", function() {deepEqual( Stem("prahovei"), "prahove");});
test("prana -> pran", function() {deepEqual( Stem("prana"), "pran");});
test("praştie -> praşt", function() {deepEqual( Stem("praştie"), "praşt");});
test("prânz -> prânz", function() {deepEqual( Stem("prânz"), "prânz");});
test("prânzim -> prânz", function() {deepEqual( Stem("prânzim"), "prânz");});
test("prânzului -> prânz", function() {deepEqual( Stem("prânzului"), "prânz");});
test("prânzurile -> prânzur", function() {deepEqual( Stem("prânzurile"), "prânzur");});
test("prăbuşesc -> prăbuş", function() {deepEqual( Stem("prăbuşesc"), "prăbuş");});
test("prăbuşeşte -> prăbuş", function() {deepEqual( Stem("prăbuşeşte"), "prăbuş");});
test("prăbuşim -> prăbuş", function() {deepEqual( Stem("prăbuşim"), "prăbuş");});
test("prăbuşind -> prăbuş", function() {deepEqual( Stem("prăbuşind"), "prăbuş");});
test("prăbuşire -> prăbuş", function() {deepEqual( Stem("prăbuşire"), "prăbuş");});
test("prăbuşirea -> prăbuş", function() {deepEqual( Stem("prăbuşirea"), "prăbuş");});
test("prăbuşiri -> prăbuşir", function() {deepEqual( Stem("prăbuşiri"), "prăbuşir");});
test("prăbuşirile -> prăbuşir", function() {deepEqual( Stem("prăbuşirile"), "prăbuşir");});
test("prăbuşise -> prăbuş", function() {deepEqual( Stem("prăbuşise"), "prăbuş");});
test("prăbuşit -> prăbuş", function() {deepEqual( Stem("prăbuşit"), "prăbuş");});
test("prăbuşită -> prăbuş", function() {deepEqual( Stem("prăbuşită"), "prăbuş");});
test("prăbuşite -> prăbuş", function() {deepEqual( Stem("prăbuşite"), "prăbuş");});
test("prăfuit -> prăfuit", function() {deepEqual( Stem("prăfuit"), "prăfuit");});
test("prăfuite -> prăfuit", function() {deepEqual( Stem("prăfuite"), "prăfuit");});
test("prăfuroasă -> prăfur", function() {deepEqual( Stem("prăfuroasă"), "prăfur");});
test("prăjite -> prăjit", function() {deepEqual( Stem("prăjite"), "prăjit");});
test("prăjitura -> prăjitur", function() {deepEqual( Stem("prăjitura"), "prăjitur");});
test("prăpădea -> prăpăd", function() {deepEqual( Stem("prăpădea"), "prăpăd");});
test("prăpădim -> prăpăd", function() {deepEqual( Stem("prăpădim"), "prăpăd");});
test("prăpădit -> prăpăd", function() {deepEqual( Stem("prăpădit"), "prăpăd");});
test("prăpădiţi -> prăpăd", function() {deepEqual( Stem("prăpădiţi"), "prăpăd");});
test("prăpăstii -> prăpăst", function() {deepEqual( Stem("prăpăstii"), "prăpăst");});
test("prăpăstiile -> prăpăst", function() {deepEqual( Stem("prăpăstiile"), "prăpăst");});
test("prăpăstiilor -> prăpăst", function() {deepEqual( Stem("prăpăstiilor"), "prăpăst");});
test("prăpăstioasă -> prăpăst", function() {deepEqual( Stem("prăpăstioasă"), "prăpăst");});
test("prăpăstios -> prăpăst", function() {deepEqual( Stem("prăpăstios"), "prăpăst");});
test("prăsele -> pră", function() {deepEqual( Stem("prăsele"), "pră");});
test("prăvălească -> prăvăl", function() {deepEqual( Stem("prăvălească"), "prăvăl");});
test("prăvălie -> prăvăl", function() {deepEqual( Stem("prăvălie"), "prăvăl");});
test("prăvăliei -> prăvăl", function() {deepEqual( Stem("prăvăliei"), "prăvăl");});
test("prăvălii -> prăvăl", function() {deepEqual( Stem("prăvălii"), "prăvăl");});
test("prea -> pre", function() {deepEqual( Stem("prea"), "pre");});
test("preajma -> preajm", function() {deepEqual( Stem("preajma"), "preajm");});
test("preaplinul -> preaplin", function() {deepEqual( Stem("preaplinul"), "preaplin");});
test("precauţie -> precauţ", function() {deepEqual( Stem("precauţie"), "precauţ");});
test("precădere -> precăd", function() {deepEqual( Stem("precădere"), "precăd");});
test("precedat -> preced", function() {deepEqual( Stem("precedat"), "preced");});
test("precede -> preced", function() {deepEqual( Stem("precede"), "preced");});
test("precedent -> precedent", function() {deepEqual( Stem("precedent"), "precedent");});
test("precedentă -> precedent", function() {deepEqual( Stem("precedentă"), "precedent");});
test("precedente -> precedent", function() {deepEqual( Stem("precedente"), "precedent");});
test("precedenţi -> precedenţ", function() {deepEqual( Stem("precedenţi"), "precedenţ");});
test("preceptul -> precept", function() {deepEqual( Stem("preceptul"), "precept");});
test("precipitatul -> precipit", function() {deepEqual( Stem("precipitatul"), "precipit");});
test("precipită -> precip", function() {deepEqual( Stem("precipită"), "precip");});
test("precis -> precis", function() {deepEqual( Stem("precis"), "precis");});
test("precisă -> precis", function() {deepEqual( Stem("precisă"), "precis");});
test("precise -> prec", function() {deepEqual( Stem("precise"), "prec");});
test("preciz -> preciz", function() {deepEqual( Stem("preciz"), "preciz");});
test("preciza -> preciz", function() {deepEqual( Stem("preciza"), "preciz");});
test("precizare -> preciz", function() {deepEqual( Stem("precizare"), "preciz");});
test("precizarea -> preciz", function() {deepEqual( Stem("precizarea"), "preciz");});
test("precizat -> preciz", function() {deepEqual( Stem("precizat"), "preciz");});
test("preciză -> preciz", function() {deepEqual( Stem("preciză"), "preciz");});
test("precizări -> precizăr", function() {deepEqual( Stem("precizări"), "precizăr");});
test("precize -> preciz", function() {deepEqual( Stem("precize"), "preciz");});
test("precizează -> preciz", function() {deepEqual( Stem("precizează"), "preciz");});
test("precizez -> preciz", function() {deepEqual( Stem("precizez"), "preciz");});
test("precizeze -> preciz", function() {deepEqual( Stem("precizeze"), "preciz");});
test("precizia -> preciz", function() {deepEqual( Stem("precizia"), "preciz");});
test("precizie -> preciz", function() {deepEqual( Stem("precizie"), "preciz");});
test("preciziune -> preciziun", function() {deepEqual( Stem("preciziune"), "preciziun");});
test("preciziuni -> preciziun", function() {deepEqual( Stem("preciziuni"), "preciziun");});
test("preconcepute -> preconcep", function() {deepEqual( Stem("preconcepute"), "preconcep");});
test("precum -> precum", function() {deepEqual( Stem("precum"), "precum");});
test("predabile -> predabil", function() {deepEqual( Stem("predabile"), "predabil");});
test("predat -> predat", function() {deepEqual( Stem("predat"), "predat");});
test("predă -> pred", function() {deepEqual( Stem("predă"), "pred");});
test("predea -> pred", function() {deepEqual( Stem("predea"), "pred");});
test("predeal -> predeal", function() {deepEqual( Stem("predeal"), "predeal");});
test("predescu -> predescu", function() {deepEqual( Stem("predescu"), "predescu");});
test("predestinat -> predestin", function() {deepEqual( Stem("predestinat"), "predestin");});
test("predestinaţi -> predestin", function() {deepEqual( Stem("predestinaţi"), "predestin");});
test("predicatul -> predic", function() {deepEqual( Stem("predicatul"), "predic");});
test("predicatului -> predic", function() {deepEqual( Stem("predicatului"), "predic");});
test("preexistă -> preexist", function() {deepEqual( Stem("preexistă"), "preexist");});
test("preexiste -> preexist", function() {deepEqual( Stem("preexiste"), "preexist");});
test("preexistent -> preexistent", function() {deepEqual( Stem("preexistent"), "preexistent");});
test("preexistentă -> preexistent", function() {deepEqual( Stem("preexistentă"), "preexistent");});
test("preexistente -> preexistent", function() {deepEqual( Stem("preexistente"), "preexistent");});
test("prefac -> prefac", function() {deepEqual( Stem("prefac"), "prefac");});
test("prefacă -> prefac", function() {deepEqual( Stem("prefacă"), "prefac");});
test("prefacere -> prefac", function() {deepEqual( Stem("prefacere"), "prefac");});
test("prefaceri -> prefacer", function() {deepEqual( Stem("prefaceri"), "prefacer");});
test("prefăcându -> prefăc", function() {deepEqual( Stem("prefăcându"), "prefăc");});
test("prefăcătorie -> prefăcător", function() {deepEqual( Stem("prefăcătorie"), "prefăcător");});
test("prefăcea -> prefăc", function() {deepEqual( Stem("prefăcea"), "prefăc");});
test("prefăceau -> prefăc", function() {deepEqual( Stem("prefăceau"), "prefăc");});
test("prefăcut -> prefăc", function() {deepEqual( Stem("prefăcut"), "prefăc");});
test("prefăcută -> prefăc", function() {deepEqual( Stem("prefăcută"), "prefăc");});
test("prefectului -> prefect", function() {deepEqual( Stem("prefectului"), "prefect");});
test("prefectură -> prefect", function() {deepEqual( Stem("prefectură"), "prefect");});
test("prefecturilor -> prefectur", function() {deepEqual( Stem("prefecturilor"), "prefectur");});
test("prefer -> prefer", function() {deepEqual( Stem("prefer"), "prefer");});
test("prefera -> prefer", function() {deepEqual( Stem("prefera"), "prefer");});
test("preferam -> prefer", function() {deepEqual( Stem("preferam"), "prefer");});
test("preferasem -> prefer", function() {deepEqual( Stem("preferasem"), "prefer");});
test("preferat -> prefer", function() {deepEqual( Stem("preferat"), "prefer");});
test("preferată -> prefer", function() {deepEqual( Stem("preferată"), "prefer");});
test("preferau -> prefer", function() {deepEqual( Stem("preferau"), "prefer");});
test("preferă -> prefer", function() {deepEqual( Stem("preferă"), "prefer");});
test("preferi -> prefer", function() {deepEqual( Stem("preferi"), "prefer");});
test("preferinţa -> preferinţ", function() {deepEqual( Stem("preferinţa"), "preferinţ");});
test("preferinţă -> preferinţ", function() {deepEqual( Stem("preferinţă"), "preferinţ");});
test("preferinţe -> preferinţ", function() {deepEqual( Stem("preferinţe"), "preferinţ");});
test("preferinţei -> preferinţe", function() {deepEqual( Stem("preferinţei"), "preferinţe");});
test("preferinţele -> preferinţ", function() {deepEqual( Stem("preferinţele"), "preferinţ");});
test("pregătea -> pregăt", function() {deepEqual( Stem("pregătea"), "pregăt");});
test("pregătească -> pregăt", function() {deepEqual( Stem("pregătească"), "pregăt");});
test("pregătesc -> pregăt", function() {deepEqual( Stem("pregătesc"), "pregăt");});
test("pregăteşti -> pregăt", function() {deepEqual( Stem("pregăteşti"), "pregăt");});
test("pregătim -> pregăt", function() {deepEqual( Stem("pregătim"), "pregăt");});
test("pregătire -> pregăt", function() {deepEqual( Stem("pregătire"), "pregăt");});
test("pregătirea -> pregăt", function() {deepEqual( Stem("pregătirea"), "pregăt");});
test("pregătiri -> pregătir", function() {deepEqual( Stem("pregătiri"), "pregătir");});
test("pregătirilor -> pregătir", function() {deepEqual( Stem("pregătirilor"), "pregătir");});
test("pregătit -> pregăt", function() {deepEqual( Stem("pregătit"), "pregăt");});
test("pregătită -> pregăt", function() {deepEqual( Stem("pregătită"), "pregăt");});
test("pregătite -> pregăt", function() {deepEqual( Stem("pregătite"), "pregăt");});
test("pregătiţi -> pregăt", function() {deepEqual( Stem("pregătiţi"), "pregăt");});
test("preget -> preget", function() {deepEqual( Stem("preget"), "preget");});
test("preistoric -> preistor", function() {deepEqual( Stem("preistoric"), "preistor");});
test("preistorice -> preistor", function() {deepEqual( Stem("preistorice"), "preistor");});
test("prejudec -> prejudec", function() {deepEqual( Stem("prejudec"), "prejudec");});
test("prejudecare -> prejudec", function() {deepEqual( Stem("prejudecare"), "prejudec");});
test("prejudecăm -> prejudec", function() {deepEqual( Stem("prejudecăm"), "prejudec");});
test("prejudiciile -> prejud", function() {deepEqual( Stem("prejudiciile"), "prejud");});
test("prejudiciilor -> prejud", function() {deepEqual( Stem("prejudiciilor"), "prejud");});
test("prelegerea -> preleg", function() {deepEqual( Stem("prelegerea"), "preleg");});
test("prelegeri -> preleger", function() {deepEqual( Stem("prelegeri"), "preleger");});
test("prelegerile -> preleger", function() {deepEqual( Stem("prelegerile"), "preleger");});
test("prelungă -> prelung", function() {deepEqual( Stem("prelungă"), "prelung");});
test("prelungeam -> prelung", function() {deepEqual( Stem("prelungeam"), "prelung");});
test("prelungească -> prelung", function() {deepEqual( Stem("prelungească"), "prelung");});
test("prelungeau -> prelung", function() {deepEqual( Stem("prelungeau"), "prelung");});
test("prelungesc -> prelung", function() {deepEqual( Stem("prelungesc"), "prelung");});
test("prelungi -> prelung", function() {deepEqual( Stem("prelungi"), "prelung");});
test("prelungind -> prelung", function() {deepEqual( Stem("prelungind"), "prelung");});
test("prelungire -> prelung", function() {deepEqual( Stem("prelungire"), "prelung");});
test("prelungirea -> prelung", function() {deepEqual( Stem("prelungirea"), "prelung");});
test("prelungiri -> prelungir", function() {deepEqual( Stem("prelungiri"), "prelungir");});
test("prelungit -> prelung", function() {deepEqual( Stem("prelungit"), "prelung");});
test("prelungite -> prelung", function() {deepEqual( Stem("prelungite"), "prelung");});
test("prematur -> prematur", function() {deepEqual( Stem("prematur"), "prematur");});
test("premeditarea -> premedit", function() {deepEqual( Stem("premeditarea"), "premedit");});
test("premierele -> premier", function() {deepEqual( Stem("premierele"), "premier");});
test("premii -> prem", function() {deepEqual( Stem("premii"), "prem");});
test("premise -> prem", function() {deepEqual( Stem("premise"), "prem");});
test("premisele -> prem", function() {deepEqual( Stem("premisele"), "prem");});
test("preocupare -> preocup", function() {deepEqual( Stem("preocupare"), "preocup");});
test("preocuparea -> preocup", function() {deepEqual( Stem("preocuparea"), "preocup");});
test("preocupat -> preocup", function() {deepEqual( Stem("preocupat"), "preocup");});
test("preocupată -> preocup", function() {deepEqual( Stem("preocupată"), "preocup");});
test("preocupă -> preocup", function() {deepEqual( Stem("preocupă"), "preocup");});
test("preocupări -> preocupăr", function() {deepEqual( Stem("preocupări"), "preocupăr");});
test("preocupările -> preocupăr", function() {deepEqual( Stem("preocupările"), "preocupăr");});
test("preocupărilor -> preocupăr", function() {deepEqual( Stem("preocupărilor"), "preocupăr");});
test("preopinent -> preopinent", function() {deepEqual( Stem("preopinent"), "preopinent");});
test("preotului -> preot", function() {deepEqual( Stem("preotului"), "preot");});
test("preoţi -> preoţ", function() {deepEqual( Stem("preoţi"), "preoţ");});
test("preoţii -> preoţ", function() {deepEqual( Stem("preoţii"), "preoţ");});
test("preparat -> prepar", function() {deepEqual( Stem("preparat"), "prepar");});
test("prepară -> prep", function() {deepEqual( Stem("prepară"), "prep");});
test("presa -> pres", function() {deepEqual( Stem("presa"), "pres");});
test("presă -> pres", function() {deepEqual( Stem("presă"), "pres");});
test("presărat -> presăr", function() {deepEqual( Stem("presărat"), "presăr");});
test("prescrie -> prescr", function() {deepEqual( Stem("prescrie"), "prescr");});
test("prescripţiile -> prescripţ", function() {deepEqual( Stem("prescripţiile"), "prescripţ");});
test("prescris -> prescris", function() {deepEqual( Stem("prescris"), "prescris");});
test("presimţire -> presimţ", function() {deepEqual( Stem("presimţire"), "presimţ");});
test("presiune -> presiun", function() {deepEqual( Stem("presiune"), "presiun");});
test("pressan -> pressan", function() {deepEqual( Stem("pressan"), "pressan");});
test("presse -> pres", function() {deepEqual( Stem("presse"), "pres");});
test("prestigioase -> prestig", function() {deepEqual( Stem("prestigioase"), "prestig");});
test("prestigiu -> prestigiu", function() {deepEqual( Stem("prestigiu"), "prestigiu");});
test("prestigiul -> prestig", function() {deepEqual( Stem("prestigiul"), "prestig");});
test("presupozarea -> presupoz", function() {deepEqual( Stem("presupozarea"), "presupoz");});
test("presupoziţia -> presupoziţ", function() {deepEqual( Stem("presupoziţia"), "presupoziţ");});
test("presupoziţie -> presupoziţ", function() {deepEqual( Stem("presupoziţie"), "presupoziţ");});
test("presupoziţii -> presupoz", function() {deepEqual( Stem("presupoziţii"), "presupoz");});
test("presupoziţiile -> presupoz", function() {deepEqual( Stem("presupoziţiile"), "presupoz");});
test("presupun -> presupun", function() {deepEqual( Stem("presupun"), "presupun");});
test("presupunând -> presupun", function() {deepEqual( Stem("presupunând"), "presupun");});
test("presupună -> presupun", function() {deepEqual( Stem("presupună"), "presupun");});
test("presupune -> presupun", function() {deepEqual( Stem("presupune"), "presupun");});
test("presupunem -> presupun", function() {deepEqual( Stem("presupunem"), "presupun");});
test("presupunere -> presupun", function() {deepEqual( Stem("presupunere"), "presupun");});
test("presupunerea -> presupun", function() {deepEqual( Stem("presupunerea"), "presupun");});
test("presupuneţi -> presupun", function() {deepEqual( Stem("presupuneţi"), "presupun");});
test("presupus -> presupus", function() {deepEqual( Stem("presupus"), "presupus");});
test("presupusă -> presupus", function() {deepEqual( Stem("presupusă"), "presupus");});
test("presupuse -> presup", function() {deepEqual( Stem("presupuse"), "presup");});
test("presus -> presus", function() {deepEqual( Stem("presus"), "presus");});
test("preşedinte -> preşedint", function() {deepEqual( Stem("preşedinte"), "preşedint");});
test("preşedintele -> preşedint", function() {deepEqual( Stem("preşedintele"), "preşedint");});
test("preşedinţii -> preşedinţ", function() {deepEqual( Stem("preşedinţii"), "preşedinţ");});
test("preştiinţifică -> preştiinţif", function() {deepEqual( Stem("preştiinţifică"), "preştiinţif");});
test("preta -> pret", function() {deepEqual( Stem("preta"), "pret");});
test("pretenţia -> pretenţ", function() {deepEqual( Stem("pretenţia"), "pretenţ");});
test("pretenţie -> pretenţ", function() {deepEqual( Stem("pretenţie"), "pretenţ");});
test("pretenţii -> pretenţ", function() {deepEqual( Stem("pretenţii"), "pretenţ");});
test("pretenţioase -> pretenţ", function() {deepEqual( Stem("pretenţioase"), "pretenţ");});
test("pretenţios -> pretenţ", function() {deepEqual( Stem("pretenţios"), "pretenţ");});
test("pretenţiune -> pretent", function() {deepEqual( Stem("pretenţiune"), "pretent");});
test("pretenţiunea -> pretent", function() {deepEqual( Stem("pretenţiunea"), "pretent");});
test("pretenţiuni -> pretent", function() {deepEqual( Stem("pretenţiuni"), "pretent");});
test("pretext -> pretext", function() {deepEqual( Stem("pretext"), "pretext");});
test("pretexte -> pretext", function() {deepEqual( Stem("pretexte"), "pretext");});
test("pretind -> pret", function() {deepEqual( Stem("pretind"), "pret");});
test("pretinde -> pretind", function() {deepEqual( Stem("pretinde"), "pretind");});
test("pretindea -> pretind", function() {deepEqual( Stem("pretindea"), "pretind");});
test("pretinse -> pretin", function() {deepEqual( Stem("pretinse"), "pretin");});
test("pretinsele -> pretin", function() {deepEqual( Stem("pretinsele"), "pretin");});
test("pretinsul -> pretins", function() {deepEqual( Stem("pretinsul"), "pretins");});
test("pretinzându -> pretinz", function() {deepEqual( Stem("pretinzându"), "pretinz");});
test("pretutindeni -> pretutinden", function() {deepEqual( Stem("pretutindeni"), "pretutinden");});
test("preţ -> preţ", function() {deepEqual( Stem("preţ"), "preţ");});
test("preţioasă -> preţioas", function() {deepEqual( Stem("preţioasă"), "preţioas");});
test("preţioase -> preţioas", function() {deepEqual( Stem("preţioase"), "preţioas");});
test("preţios -> preţios", function() {deepEqual( Stem("preţios"), "preţios");});
test("preţui -> preţ", function() {deepEqual( Stem("preţui"), "preţ");});
test("preţuia -> preţui", function() {deepEqual( Stem("preţuia"), "preţui");});
test("preţuiască -> preţuiasc", function() {deepEqual( Stem("preţuiască"), "preţuiasc");});
test("preţuiau -> preţui", function() {deepEqual( Stem("preţuiau"), "preţui");});
test("preţuiesc -> preţui", function() {deepEqual( Stem("preţuiesc"), "preţui");});
test("preţuieşte -> preţui", function() {deepEqual( Stem("preţuieşte"), "preţui");});
test("preţuire -> preţu", function() {deepEqual( Stem("preţuire"), "preţu");});
test("preţuit -> preţuit", function() {deepEqual( Stem("preţuit"), "preţuit");});
test("preţuite -> preţuit", function() {deepEqual( Stem("preţuite"), "preţuit");});
test("preţul -> preţ", function() {deepEqual( Stem("preţul"), "preţ");});
test("preţuri -> preţur", function() {deepEqual( Stem("preţuri"), "preţur");});
test("prevadă -> prevad", function() {deepEqual( Stem("prevadă"), "prevad");});
test("prevăd -> prevăd", function() {deepEqual( Stem("prevăd"), "prevăd");});
test("prevăzând -> prevăz", function() {deepEqual( Stem("prevăzând"), "prevăz");});
test("prevăzut -> prevăz", function() {deepEqual( Stem("prevăzut"), "prevăz");});
test("prevedea -> preved", function() {deepEqual( Stem("prevedea"), "preved");});
test("prevedem -> preved", function() {deepEqual( Stem("prevedem"), "preved");});
test("prevedere -> preved", function() {deepEqual( Stem("prevedere"), "preved");});
test("prevederea -> preved", function() {deepEqual( Stem("prevederea"), "preved");});
test("prevederi -> preveder", function() {deepEqual( Stem("prevederi"), "preveder");});
test("prevederii -> preveder", function() {deepEqual( Stem("prevederii"), "preveder");});
test("prevederile -> preveder", function() {deepEqual( Stem("prevederile"), "preveder");});
test("prevenit -> preven", function() {deepEqual( Stem("prevenit"), "preven");});
test("prevezi -> prev", function() {deepEqual( Stem("prevezi"), "prev");});
test("previe -> prev", function() {deepEqual( Stem("previe"), "prev");});
test("previu -> previu", function() {deepEqual( Stem("previu"), "previu");});
test("previzibile -> previzib", function() {deepEqual( Stem("previzibile"), "previzib");});
test("prezan -> prezan", function() {deepEqual( Stem("prezan"), "prezan");});
test("prezent -> prezent", function() {deepEqual( Stem("prezent"), "prezent");});
test("prezenta -> prezent", function() {deepEqual( Stem("prezenta"), "prezent");});
test("prezentare -> prezent", function() {deepEqual( Stem("prezentare"), "prezent");});
test("prezentarea -> prezent", function() {deepEqual( Stem("prezentarea"), "prezent");});
test("prezentat -> prezent", function() {deepEqual( Stem("prezentat"), "prezent");});
test("prezentată -> prezent", function() {deepEqual( Stem("prezentată"), "prezent");});
test("prezentau -> prezent", function() {deepEqual( Stem("prezentau"), "prezent");});
test("prezentându -> prezent", function() {deepEqual( Stem("prezentându"), "prezent");});
test("prezentă -> prezent", function() {deepEqual( Stem("prezentă"), "prezent");});
test("prezente -> prezent", function() {deepEqual( Stem("prezente"), "prezent");});
test("prezentul -> prezent", function() {deepEqual( Stem("prezentul"), "prezent");});
test("prezentului -> prezent", function() {deepEqual( Stem("prezentului"), "prezent");});
test("prezenţa -> prezenţ", function() {deepEqual( Stem("prezenţa"), "prezenţ");});
test("prezenţă -> prezenţ", function() {deepEqual( Stem("prezenţă"), "prezenţ");});
test("prezenţei -> prezenţe", function() {deepEqual( Stem("prezenţei"), "prezenţe");});
test("preziceri -> prezicer", function() {deepEqual( Stem("preziceri"), "prezicer");});
test("prezidenţială -> prezidenţial", function() {deepEqual( Stem("prezidenţială"), "prezidenţial");});
test("prezint -> prezint", function() {deepEqual( Stem("prezint"), "prezint");});
test("prezintă -> prezint", function() {deepEqual( Stem("prezintă"), "prezint");});
test("prezinte -> prezint", function() {deepEqual( Stem("prezinte"), "prezint");});
test("priceapă -> priceap", function() {deepEqual( Stem("priceapă"), "priceap");});
test("pricep -> pricep", function() {deepEqual( Stem("pricep"), "pricep");});
test("pricepe -> pricep", function() {deepEqual( Stem("pricepe"), "pricep");});
test("pricepea -> pricep", function() {deepEqual( Stem("pricepea"), "pricep");});
test("pricepere -> pricep", function() {deepEqual( Stem("pricepere"), "pricep");});
test("pricepeţi -> pricep", function() {deepEqual( Stem("pricepeţi"), "pricep");});
test("pricepi -> pricep", function() {deepEqual( Stem("pricepi"), "pricep");});
test("priceput -> pricep", function() {deepEqual( Stem("priceput"), "pricep");});
test("pricepută -> pricep", function() {deepEqual( Stem("pricepută"), "pricep");});
test("pricepuţi -> pricepuţ", function() {deepEqual( Stem("pricepuţi"), "pricepuţ");});
test("pricina -> pricin", function() {deepEqual( Stem("pricina"), "pricin");});
test("pricină -> pricin", function() {deepEqual( Stem("pricină"), "pricin");});
test("pricinuită -> pricinu", function() {deepEqual( Stem("pricinuită"), "pricinu");});
test("pridvor -> pridvor", function() {deepEqual( Stem("pridvor"), "pridvor");});
test("pridvorul -> pridvor", function() {deepEqual( Stem("pridvorul"), "pridvor");});
test("pridvorului -> pridvor", function() {deepEqual( Stem("pridvorului"), "pridvor");});
test("prielnic -> prielnic", function() {deepEqual( Stem("prielnic"), "prielnic");});
test("prielnice -> prielnic", function() {deepEqual( Stem("prielnice"), "prielnic");});
test("prieten -> prieten", function() {deepEqual( Stem("prieten"), "prieten");});
test("prietena -> prieten", function() {deepEqual( Stem("prietena"), "prieten");});
test("prietenă -> prieten", function() {deepEqual( Stem("prietenă"), "prieten");});
test("prietene -> prieten", function() {deepEqual( Stem("prietene"), "prieten");});
test("prietenei -> prietene", function() {deepEqual( Stem("prietenei"), "prietene");});
test("prietenele -> prieten", function() {deepEqual( Stem("prietenele"), "prieten");});
test("prieteneşti -> prieten", function() {deepEqual( Stem("prieteneşti"), "prieten");});
test("prieteni -> prieten", function() {deepEqual( Stem("prieteni"), "prieten");});
test("prietenia -> prieten", function() {deepEqual( Stem("prietenia"), "prieten");});
test("prietenie -> prieten", function() {deepEqual( Stem("prietenie"), "prieten");});
test("prietenii -> prieten", function() {deepEqual( Stem("prietenii"), "prieten");});
test("prieteniile -> prieten", function() {deepEqual( Stem("prieteniile"), "prieten");});
test("prietenilor -> prieten", function() {deepEqual( Stem("prietenilor"), "prieten");});
test("prietenoasa -> prieten", function() {deepEqual( Stem("prietenoasa"), "prieten");});
test("prietenos -> prieten", function() {deepEqual( Stem("prietenos"), "prieten");});
test("prietenosul -> prieten", function() {deepEqual( Stem("prietenosul"), "prieten");});
test("prietenul -> prieten", function() {deepEqual( Stem("prietenul"), "prieten");});
test("prigonitor -> prigon", function() {deepEqual( Stem("prigonitor"), "prigon");});
test("prilej -> prilej", function() {deepEqual( Stem("prilej"), "prilej");});
test("prilejul -> prilej", function() {deepEqual( Stem("prilejul"), "prilej");});
test("prilejuri -> prilejur", function() {deepEqual( Stem("prilejuri"), "prilejur");});
test("prim -> prim", function() {deepEqual( Stem("prim"), "prim");});
test("prima -> prim", function() {deepEqual( Stem("prima"), "prim");});
test("primar -> primar", function() {deepEqual( Stem("primar"), "primar");});
test("primară -> prim", function() {deepEqual( Stem("primară"), "prim");});
test("primare -> prim", function() {deepEqual( Stem("primare"), "prim");});
test("primarul -> primar", function() {deepEqual( Stem("primarul"), "primar");});
test("primarului -> primar", function() {deepEqual( Stem("primarului"), "primar");});
test("primat -> primat", function() {deepEqual( Stem("primat"), "primat");});
test("primatul -> primat", function() {deepEqual( Stem("primatul"), "primat");});
test("primă -> prim", function() {deepEqual( Stem("primă"), "prim");});
test("primăria -> primăr", function() {deepEqual( Stem("primăria"), "primăr");});
test("primărie -> primăr", function() {deepEqual( Stem("primărie"), "primăr");});
test("primăvara -> primăvar", function() {deepEqual( Stem("primăvara"), "primăvar");});
test("primăvară -> primăv", function() {deepEqual( Stem("primăvară"), "primăv");});
test("primăvăratică -> primăvărat", function() {deepEqual( Stem("primăvăratică"), "primăvărat");});
test("primeam -> prim", function() {deepEqual( Stem("primeam"), "prim");});
test("primească -> prim", function() {deepEqual( Stem("primească"), "prim");});
test("primejdia -> primejd", function() {deepEqual( Stem("primejdia"), "primejd");});
test("primejdie -> primejd", function() {deepEqual( Stem("primejdie"), "primejd");});
test("primejduită -> primejdu", function() {deepEqual( Stem("primejduită"), "primejdu");});
test("primele -> prim", function() {deepEqual( Stem("primele"), "prim");});
test("primelor -> prim", function() {deepEqual( Stem("primelor"), "prim");});
test("primenite -> primen", function() {deepEqual( Stem("primenite"), "primen");});
test("primesc -> prim", function() {deepEqual( Stem("primesc"), "prim");});
test("primeşte -> prim", function() {deepEqual( Stem("primeşte"), "prim");});
test("primeşti -> prim", function() {deepEqual( Stem("primeşti"), "prim");});
test("primi -> prim", function() {deepEqual( Stem("primi"), "prim");});
test("primii -> prim", function() {deepEqual( Stem("primii"), "prim");});
test("primim -> prim", function() {deepEqual( Stem("primim"), "prim");});
test("primire -> prim", function() {deepEqual( Stem("primire"), "prim");});
test("primirea -> prim", function() {deepEqual( Stem("primirea"), "prim");});
test("primise -> prim", function() {deepEqual( Stem("primise"), "prim");});
test("primisem -> prim", function() {deepEqual( Stem("primisem"), "prim");});
test("primiseră -> prim", function() {deepEqual( Stem("primiseră"), "prim");});
test("primit -> primit", function() {deepEqual( Stem("primit"), "primit");});
test("primite -> primit", function() {deepEqual( Stem("primite"), "primit");});
test("primitiv -> primit", function() {deepEqual( Stem("primitiv"), "primit");});
test("primitivă -> primit", function() {deepEqual( Stem("primitivă"), "primit");});
test("primitive -> primit", function() {deepEqual( Stem("primitive"), "primit");});
test("primitivi -> primit", function() {deepEqual( Stem("primitivi"), "primit");});
test("primitor -> primit", function() {deepEqual( Stem("primitor"), "primit");});
test("primul -> prim", function() {deepEqual( Stem("primul"), "prim");});
test("primului -> prim", function() {deepEqual( Stem("primului"), "prim");});
test("prin -> prin", function() {deepEqual( Stem("prin"), "prin");});
test("principal -> principal", function() {deepEqual( Stem("principal"), "principal");});
test("principală -> principal", function() {deepEqual( Stem("principală"), "principal");});
test("principale -> principal", function() {deepEqual( Stem("principale"), "principal");});
test("principalele -> principal", function() {deepEqual( Stem("principalele"), "principal");});
test("principali -> principal", function() {deepEqual( Stem("principali"), "principal");});
test("principalul -> principal", function() {deepEqual( Stem("principalul"), "principal");});
test("principe -> princip", function() {deepEqual( Stem("principe"), "princip");});
test("principial -> principial", function() {deepEqual( Stem("principial"), "principial");});
test("principială -> principial", function() {deepEqual( Stem("principială"), "principial");});
test("principiale -> principial", function() {deepEqual( Stem("principiale"), "principial");});
test("principii -> princip", function() {deepEqual( Stem("principii"), "princip");});
test("principiile -> princip", function() {deepEqual( Stem("principiile"), "princip");});
test("principiilor -> princip", function() {deepEqual( Stem("principiilor"), "princip");});
test("principiu -> principiu", function() {deepEqual( Stem("principiu"), "principiu");});
test("principiul -> princip", function() {deepEqual( Stem("principiul"), "princip");});
test("principiului -> princip", function() {deepEqual( Stem("principiului"), "princip");});
test("prind -> prind", function() {deepEqual( Stem("prind"), "prind");});
test("prindă -> prind", function() {deepEqual( Stem("prindă"), "prind");});
test("prinde -> prind", function() {deepEqual( Stem("prinde"), "prind");});
test("prindeam -> prind", function() {deepEqual( Stem("prindeam"), "prind");});
test("prindeau -> prind", function() {deepEqual( Stem("prindeau"), "prind");});
test("prindem -> prind", function() {deepEqual( Stem("prindem"), "prind");});
test("prins -> prins", function() {deepEqual( Stem("prins"), "prins");});
test("prinsă -> prins", function() {deepEqual( Stem("prinsă"), "prins");});
test("prinse -> prin", function() {deepEqual( Stem("prinse"), "prin");});
test("prinsesem -> prin", function() {deepEqual( Stem("prinsesem"), "prin");});
test("prinsoare -> prinsoar", function() {deepEqual( Stem("prinsoare"), "prinsoar");});
test("prinsoarea -> prinsoar", function() {deepEqual( Stem("prinsoarea"), "prinsoar");});
test("prinşi -> prinş", function() {deepEqual( Stem("prinşi"), "prinş");});
test("printr -> printr", function() {deepEqual( Stem("printr"), "printr");});
test("printre -> printr", function() {deepEqual( Stem("printre"), "printr");});
test("prinţ -> prinţ", function() {deepEqual( Stem("prinţ"), "prinţ");});
test("prinţesă -> prinţes", function() {deepEqual( Stem("prinţesă"), "prinţes");});
test("prinzi -> prinz", function() {deepEqual( Stem("prinzi"), "prinz");});
test("pripit -> pripit", function() {deepEqual( Stem("pripit"), "pripit");});
test("pripită -> pripit", function() {deepEqual( Stem("pripită"), "pripit");});
test("prisos -> prisos", function() {deepEqual( Stem("prisos"), "prisos");});
test("prisosinţă -> prisosinţ", function() {deepEqual( Stem("prisosinţă"), "prisosinţ");});
test("prisosul -> prisos", function() {deepEqual( Stem("prisosul"), "prisos");});
test("prispă -> prisp", function() {deepEqual( Stem("prispă"), "prisp");});
test("privată -> privat", function() {deepEqual( Stem("privată"), "privat");});
test("privea -> priv", function() {deepEqual( Stem("privea"), "priv");});
test("priveai -> priv", function() {deepEqual( Stem("priveai"), "priv");});
test("priveam -> priv", function() {deepEqual( Stem("priveam"), "priv");});
test("privească -> priv", function() {deepEqual( Stem("privească"), "priv");});
test("priveau -> priv", function() {deepEqual( Stem("priveau"), "priv");});
test("privelişte -> privelişt", function() {deepEqual( Stem("privelişte"), "privelişt");});
test("priveliştea -> privelişt", function() {deepEqual( Stem("priveliştea"), "privelişt");});
test("privelişti -> privelist", function() {deepEqual( Stem("privelişti"), "privelist");});
test("priveliştii -> privelist", function() {deepEqual( Stem("priveliştii"), "privelist");});
test("privesc -> priv", function() {deepEqual( Stem("privesc"), "priv");});
test("priveşte -> priv", function() {deepEqual( Stem("priveşte"), "priv");});
test("priveşti -> priv", function() {deepEqual( Stem("priveşti"), "priv");});
test("privi -> priv", function() {deepEqual( Stem("privi"), "priv");});
test("privim -> priv", function() {deepEqual( Stem("privim"), "priv");});
test("privind -> priv", function() {deepEqual( Stem("privind"), "priv");});
test("privindu -> priv", function() {deepEqual( Stem("privindu"), "priv");});
test("privinţa -> privinţ", function() {deepEqual( Stem("privinţa"), "privinţ");});
test("privinţă -> privinţ", function() {deepEqual( Stem("privinţă"), "privinţ");});
test("privinţi -> privinţ", function() {deepEqual( Stem("privinţi"), "privinţ");});
test("privire -> priv", function() {deepEqual( Stem("privire"), "priv");});
test("privirea -> priv", function() {deepEqual( Stem("privirea"), "priv");});
test("priviri -> privir", function() {deepEqual( Stem("priviri"), "privir");});
test("privirii -> privir", function() {deepEqual( Stem("privirii"), "privir");});
test("privirile -> privir", function() {deepEqual( Stem("privirile"), "privir");});
test("privirilor -> privir", function() {deepEqual( Stem("privirilor"), "privir");});
test("privisem -> priv", function() {deepEqual( Stem("privisem"), "priv");});
test("privit -> privit", function() {deepEqual( Stem("privit"), "privit");});
test("privită -> privit", function() {deepEqual( Stem("privită"), "privit");});
test("privite -> privit", function() {deepEqual( Stem("privite"), "privit");});
test("privitoare -> privit", function() {deepEqual( Stem("privitoare"), "privit");});
test("priviţi -> priv", function() {deepEqual( Stem("priviţi"), "priv");});
test("prizonier -> prizonier", function() {deepEqual( Stem("prizonier"), "prizonier");});
test("prizonieră -> prizonier", function() {deepEqual( Stem("prizonieră"), "prizonier");});
test("prizonieri -> prizonier", function() {deepEqual( Stem("prizonieri"), "prizonier");});
test("prizonierul -> prizonier", function() {deepEqual( Stem("prizonierul"), "prizonier");});
test("pro -> pro", function() {deepEqual( Stem("pro"), "pro");});
test("proaspăt -> proaspăt", function() {deepEqual( Stem("proaspăt"), "proaspăt");});
test("proaspătă -> proaspăt", function() {deepEqual( Stem("proaspătă"), "proaspăt");});
test("proaspătul -> proaspăt", function() {deepEqual( Stem("proaspătul"), "proaspăt");});
test("proaspete -> proaspet", function() {deepEqual( Stem("proaspete"), "proaspet");});
test("proaspeţi -> proasp", function() {deepEqual( Stem("proaspeţi"), "proasp");});
test("proastă -> proast", function() {deepEqual( Stem("proastă"), "proast");});
test("proba -> prob", function() {deepEqual( Stem("proba"), "prob");});
test("probabil -> probabil", function() {deepEqual( Stem("probabil"), "probabil");});
test("probabilă -> probabil", function() {deepEqual( Stem("probabilă"), "probabil");});
test("probabilitate -> probabil", function() {deepEqual( Stem("probabilitate"), "probabil");});
test("probabilitatea -> probabil", function() {deepEqual( Stem("probabilitatea"), "probabil");});
test("probabilităţi -> probabil", function() {deepEqual( Stem("probabilităţi"), "probabil");});
test("probă -> prob", function() {deepEqual( Stem("probă"), "prob");});
test("probele -> prob", function() {deepEqual( Stem("probele"), "prob");});
test("problema -> problem", function() {deepEqual( Stem("problema"), "problem");});
test("problematica -> problemat", function() {deepEqual( Stem("problematica"), "problemat");});
test("problematică -> problemat", function() {deepEqual( Stem("problematică"), "problemat");});
test("problemă -> problem", function() {deepEqual( Stem("problemă"), "problem");});
test("probleme -> problem", function() {deepEqual( Stem("probleme"), "problem");});
test("problemei -> probleme", function() {deepEqual( Stem("problemei"), "probleme");});
test("problemele -> problem", function() {deepEqual( Stem("problemele"), "problem");});
test("problemelor -> problem", function() {deepEqual( Stem("problemelor"), "problem");});
test("procedăm -> proced", function() {deepEqual( Stem("procedăm"), "proced");});
test("procedările -> procedăr", function() {deepEqual( Stem("procedările"), "procedăr");});
test("procede -> proced", function() {deepEqual( Stem("procede"), "proced");});
test("procedează -> proced", function() {deepEqual( Stem("procedează"), "proced");});
test("procedeele -> procede", function() {deepEqual( Stem("procedeele"), "procede");});
test("procedeu -> procedeu", function() {deepEqual( Stem("procedeu"), "procedeu");});
test("procedeul -> proced", function() {deepEqual( Stem("procedeul"), "proced");});
test("procedez -> proced", function() {deepEqual( Stem("procedez"), "proced");});
test("procedeze -> proced", function() {deepEqual( Stem("procedeze"), "proced");});
test("procedura -> procedur", function() {deepEqual( Stem("procedura"), "procedur");});
test("procedură -> proced", function() {deepEqual( Stem("procedură"), "proced");});
test("proces -> proces", function() {deepEqual( Stem("proces"), "proces");});
test("procese -> proc", function() {deepEqual( Stem("procese"), "proc");});
test("proceselor -> proc", function() {deepEqual( Stem("proceselor"), "proc");});
test("procesul -> proces", function() {deepEqual( Stem("procesul"), "proces");});
test("procesului -> proces", function() {deepEqual( Stem("procesului"), "proces");});
test("proclamat -> proclam", function() {deepEqual( Stem("proclamat"), "proclam");});
test("proclamau -> proclam", function() {deepEqual( Stem("proclamau"), "proclam");});
test("procură -> proc", function() {deepEqual( Stem("procură"), "proc");});
test("procuror -> procuror", function() {deepEqual( Stem("procuror"), "procuror");});
test("produc -> produc", function() {deepEqual( Stem("produc"), "produc");});
test("producă -> produc", function() {deepEqual( Stem("producă"), "produc");});
test("produce -> produc", function() {deepEqual( Stem("produce"), "produc");});
test("producerea -> produc", function() {deepEqual( Stem("producerea"), "produc");});
test("producerii -> producer", function() {deepEqual( Stem("producerii"), "producer");});
test("producerile -> producer", function() {deepEqual( Stem("producerile"), "producer");});
test("producţia -> producţ", function() {deepEqual( Stem("producţia"), "producţ");});
test("producţie -> producţ", function() {deepEqual( Stem("producţie"), "producţ");});
test("producţiei -> producţ", function() {deepEqual( Stem("producţiei"), "producţ");});
test("produs -> produs", function() {deepEqual( Stem("produs"), "produs");});
test("produse -> prod", function() {deepEqual( Stem("produse"), "prod");});
test("produsele -> prod", function() {deepEqual( Stem("produsele"), "prod");});
test("profanare -> profan", function() {deepEqual( Stem("profanare"), "profan");});
test("profanării -> profanăr", function() {deepEqual( Stem("profanării"), "profanăr");});
test("profanez -> profan", function() {deepEqual( Stem("profanez"), "profan");});
test("profaneze -> profan", function() {deepEqual( Stem("profaneze"), "profan");});
test("profanii -> profan", function() {deepEqual( Stem("profanii"), "profan");});
test("profanilor -> profan", function() {deepEqual( Stem("profanilor"), "profan");});
test("profesie -> profes", function() {deepEqual( Stem("profesie"), "profes");});
test("profesii -> profes", function() {deepEqual( Stem("profesii"), "profes");});
test("profesională -> profesional", function() {deepEqual( Stem("profesională"), "profesional");});
test("profesionist -> profesionist", function() {deepEqual( Stem("profesionist"), "profesionist");});
test("profesioniste -> profesionist", function() {deepEqual( Stem("profesioniste"), "profesionist");});
test("profesionişti -> profesionist", function() {deepEqual( Stem("profesionişti"), "profesionist");});
test("profesioniştii -> profesionist", function() {deepEqual( Stem("profesioniştii"), "profesionist");});
test("profesor -> profesor", function() {deepEqual( Stem("profesor"), "profesor");});
test("profesori -> profesor", function() {deepEqual( Stem("profesori"), "profesor");});
test("profesorii -> profesor", function() {deepEqual( Stem("profesorii"), "profesor");});
test("profesorul -> profesor", function() {deepEqual( Stem("profesorul"), "profesor");});
test("profesorului -> profesor", function() {deepEqual( Stem("profesorului"), "profesor");});
test("profet -> profet", function() {deepEqual( Stem("profet"), "profet");});
test("profetism -> profetist", function() {deepEqual( Stem("profetism"), "profetist");});
test("profetizat -> profetiz", function() {deepEqual( Stem("profetizat"), "profetiz");});
test("profetul -> profet", function() {deepEqual( Stem("profetul"), "profet");});
test("profetului -> profet", function() {deepEqual( Stem("profetului"), "profet");});
test("profeţi -> prof", function() {deepEqual( Stem("profeţi"), "prof");});
test("profeţia -> profeţ", function() {deepEqual( Stem("profeţia"), "profeţ");});
test("profeţii -> prof", function() {deepEqual( Stem("profeţii"), "prof");});
test("profil -> profil", function() {deepEqual( Stem("profil"), "profil");});
test("profilează -> profil", function() {deepEqual( Stem("profilează"), "profil");});
test("profilul -> profil", function() {deepEqual( Stem("profilul"), "profil");});
test("profit -> profit", function() {deepEqual( Stem("profit"), "profit");});
test("profitând -> profit", function() {deepEqual( Stem("profitând"), "profit");});
test("profite -> profit", function() {deepEqual( Stem("profite"), "profit");});
test("profund -> profund", function() {deepEqual( Stem("profund"), "profund");});
test("profunda -> profund", function() {deepEqual( Stem("profunda"), "profund");});
test("profundă -> profund", function() {deepEqual( Stem("profundă"), "profund");});
test("profunde -> profund", function() {deepEqual( Stem("profunde"), "profund");});
test("profunzime -> profunzim", function() {deepEqual( Stem("profunzime"), "profunzim");});
test("profunzimea -> profunzim", function() {deepEqual( Stem("profunzimea"), "profunzim");});
test("progenitură -> progenit", function() {deepEqual( Stem("progenitură"), "progenit");});
test("program -> progr", function() {deepEqual( Stem("program"), "progr");});
test("programatic -> programat", function() {deepEqual( Stem("programatic"), "programat");});
test("programe -> program", function() {deepEqual( Stem("programe"), "program");});
test("progres -> progres", function() {deepEqual( Stem("progres"), "progres");});
test("progresului -> progres", function() {deepEqual( Stem("progresului"), "progres");});
test("proiectarea -> proiect", function() {deepEqual( Stem("proiectarea"), "proiect");});
test("proiectat -> proiect", function() {deepEqual( Stem("proiectat"), "proiect");});
test("proiectaţi -> proiect", function() {deepEqual( Stem("proiectaţi"), "proiect");});
test("proiectându -> proiect", function() {deepEqual( Stem("proiectându"), "proiect");});
test("proiectează -> proiect", function() {deepEqual( Stem("proiectează"), "proiect");});
test("proiectez -> proiect", function() {deepEqual( Stem("proiectez"), "proiect");});
test("proiectil -> proiectil", function() {deepEqual( Stem("proiectil"), "proiectil");});
test("proiectilul -> proiectil", function() {deepEqual( Stem("proiectilul"), "proiectil");});
test("proiectilului -> proiectil", function() {deepEqual( Stem("proiectilului"), "proiectil");});
test("proiectoare -> proiectoar", function() {deepEqual( Stem("proiectoare"), "proiectoar");});
test("proiecţie -> proiecţ", function() {deepEqual( Stem("proiecţie"), "proiecţ");});
test("proiecţiune -> proiect", function() {deepEqual( Stem("proiecţiune"), "proiect");});
test("proletară -> prolet", function() {deepEqual( Stem("proletară"), "prolet");});
test("proletari -> proletar", function() {deepEqual( Stem("proletari"), "proletar");});
test("proletariatului -> proletar", function() {deepEqual( Stem("proletariatului"), "proletar");});
test("proletarizare -> proletariz", function() {deepEqual( Stem("proletarizare"), "proletariz");});
test("proletarizarea -> proletariz", function() {deepEqual( Stem("proletarizarea"), "proletariz");});
test("proletarizaţi -> proletariz", function() {deepEqual( Stem("proletarizaţi"), "proletariz");});
test("proletarizări -> proletarizăr", function() {deepEqual( Stem("proletarizări"), "proletarizăr");});
test("proletarizează -> proletariz", function() {deepEqual( Stem("proletarizează"), "proletariz");});
test("proletarului -> proletar", function() {deepEqual( Stem("proletarului"), "proletar");});
test("prombul -> promb", function() {deepEqual( Stem("prombul"), "promb");});
test("promenadă -> promenad", function() {deepEqual( Stem("promenadă"), "promenad");});
test("promis -> promis", function() {deepEqual( Stem("promis"), "promis");});
test("promiscuitate -> promiscu", function() {deepEqual( Stem("promiscuitate"), "promiscu");});
test("promisiile -> promis", function() {deepEqual( Stem("promisiile"), "promis");});
test("promisiune -> promisiun", function() {deepEqual( Stem("promisiune"), "promisiun");});
test("promisiunea -> promisiun", function() {deepEqual( Stem("promisiunea"), "promisiun");});
test("promisiuni -> promisiun", function() {deepEqual( Stem("promisiuni"), "promisiun");});
test("promite -> promit", function() {deepEqual( Stem("promite"), "promit");});
test("promitea -> promit", function() {deepEqual( Stem("promitea"), "promit");});
test("promiţătoare -> promiţ", function() {deepEqual( Stem("promiţătoare"), "promiţ");});
test("promptă -> prompt", function() {deepEqual( Stem("promptă"), "prompt");});
test("prompte -> prompt", function() {deepEqual( Stem("prompte"), "prompt");});
test("pronosticuri -> pronosticur", function() {deepEqual( Stem("pronosticuri"), "pronosticur");});
test("pronunţa -> pronunţ", function() {deepEqual( Stem("pronunţa"), "pronunţ");});
test("pronunţare -> pronunţ", function() {deepEqual( Stem("pronunţare"), "pronunţ");});
test("pronunţată -> pronunţ", function() {deepEqual( Stem("pronunţată"), "pronunţ");});
test("pronunţăm -> pronunţ", function() {deepEqual( Stem("pronunţăm"), "pronunţ");});
test("pronunţări -> pronunţăr", function() {deepEqual( Stem("pronunţări"), "pronunţăr");});
test("propaga -> propag", function() {deepEqual( Stem("propaga"), "propag");});
test("propagandă -> propagand", function() {deepEqual( Stem("propagandă"), "propagand");});
test("propagarea -> propag", function() {deepEqual( Stem("propagarea"), "propag");});
test("propagat -> propag", function() {deepEqual( Stem("propagat"), "propag");});
test("propagator -> propag", function() {deepEqual( Stem("propagator"), "propag");});
test("propagării -> propagăr", function() {deepEqual( Stem("propagării"), "propagăr");});
test("propăşire -> propăş", function() {deepEqual( Stem("propăşire"), "propăş");});
test("propedeutică -> propedeut", function() {deepEqual( Stem("propedeutică"), "propedeut");});
test("propedeutice -> propedeut", function() {deepEqual( Stem("propedeutice"), "propedeut");});
test("propensiunea -> propensiun", function() {deepEqual( Stem("propensiunea"), "propensiun");});
test("propice -> propic", function() {deepEqual( Stem("propice"), "propic");});
test("proporţia -> proporţ", function() {deepEqual( Stem("proporţia"), "proporţ");});
test("proporţie -> proporţ", function() {deepEqual( Stem("proporţie"), "proporţ");});
test("proporţii -> proporţ", function() {deepEqual( Stem("proporţii"), "proporţ");});
test("proporţiile -> proporţ", function() {deepEqual( Stem("proporţiile"), "proporţ");});
test("proporţional -> proporţional", function() {deepEqual( Stem("proporţional"), "proporţional");});
test("proporţională -> proporţional", function() {deepEqual( Stem("proporţională"), "proporţional");});
test("proporţionalitate -> proporţional", function() {deepEqual( Stem("proporţionalitate"), "proporţional");});
test("proporţionalitatea -> proporţional", function() {deepEqual( Stem("proporţionalitatea"), "proporţional");});
test("proporţionalităţii -> proporţional", function() {deepEqual( Stem("proporţionalităţii"), "proporţional");});
test("propovăduind -> propovădu", function() {deepEqual( Stem("propovăduind"), "propovădu");});
test("propovăduitor -> propovădu", function() {deepEqual( Stem("propovăduitor"), "propovădu");});
test("propoziţia -> propoziţ", function() {deepEqual( Stem("propoziţia"), "propoziţ");});
test("propoziţii -> propoz", function() {deepEqual( Stem("propoziţii"), "propoz");});
test("propoziţiile -> propoz", function() {deepEqual( Stem("propoziţiile"), "propoz");});
test("propoziţiilor -> propoz", function() {deepEqual( Stem("propoziţiilor"), "propoz");});
test("propoziţiune -> propoz", function() {deepEqual( Stem("propoziţiune"), "propoz");});
test("propoziţiunea -> propoz", function() {deepEqual( Stem("propoziţiunea"), "propoz");});
test("propoziţiuni -> propozit", function() {deepEqual( Stem("propoziţiuni"), "propozit");});
test("propria -> propr", function() {deepEqual( Stem("propria"), "propr");});
test("proprie -> propr", function() {deepEqual( Stem("proprie"), "propr");});
test("propriei -> propr", function() {deepEqual( Stem("propriei"), "propr");});
test("proprietar -> proprietar", function() {deepEqual( Stem("proprietar"), "proprietar");});
test("proprietară -> propriet", function() {deepEqual( Stem("proprietară"), "propriet");});
test("proprietari -> proprietar", function() {deepEqual( Stem("proprietari"), "proprietar");});
test("proprietarii -> proprietar", function() {deepEqual( Stem("proprietarii"), "proprietar");});
test("proprietarul -> proprietar", function() {deepEqual( Stem("proprietarul"), "proprietar");});
test("proprietate -> propriet", function() {deepEqual( Stem("proprietate"), "propriet");});
test("proprietatea -> propriet", function() {deepEqual( Stem("proprietatea"), "propriet");});
test("proprietăreasă -> proprietăreas", function() {deepEqual( Stem("proprietăreasă"), "proprietăreas");});
test("proprietăţi -> proprietăţ", function() {deepEqual( Stem("proprietăţi"), "proprietăţ");});
test("proprietăţile -> proprietăţ", function() {deepEqual( Stem("proprietăţile"), "proprietăţ");});
test("proprii -> propr", function() {deepEqual( Stem("proprii"), "propr");});
test("propriile -> propr", function() {deepEqual( Stem("propriile"), "propr");});
test("propriu -> propriu", function() {deepEqual( Stem("propriu"), "propriu");});
test("propriul -> propr", function() {deepEqual( Stem("propriul"), "propr");});
test("propter -> propter", function() {deepEqual( Stem("propter"), "propter");});
test("proptesc -> propt", function() {deepEqual( Stem("proptesc"), "propt");});
test("propulsa -> propuls", function() {deepEqual( Stem("propulsa"), "propuls");});
test("propulsat -> propuls", function() {deepEqual( Stem("propulsat"), "propuls");});
test("propulseze -> propuls", function() {deepEqual( Stem("propulseze"), "propuls");});
test("propun -> propun", function() {deepEqual( Stem("propun"), "propun");});
test("propunerea -> propun", function() {deepEqual( Stem("propunerea"), "propun");});
test("propus -> propus", function() {deepEqual( Stem("propus"), "propus");});
test("prospectarea -> prospect", function() {deepEqual( Stem("prospectarea"), "prospect");});
test("prosperă -> prosper", function() {deepEqual( Stem("prosperă"), "prosper");});
test("prosperitatea -> prosper", function() {deepEqual( Stem("prosperitatea"), "prosper");});
test("prospeţime -> prospeţim", function() {deepEqual( Stem("prospeţime"), "prospeţim");});
test("prost -> prost", function() {deepEqual( Stem("prost"), "prost");});
test("prostcrescut -> prostcresc", function() {deepEqual( Stem("prostcrescut"), "prostcresc");});
test("prosteşte -> prost", function() {deepEqual( Stem("prosteşte"), "prost");});
test("prostia -> prost", function() {deepEqual( Stem("prostia"), "prost");});
test("prostie -> prost", function() {deepEqual( Stem("prostie"), "prost");});
test("prostii -> prost", function() {deepEqual( Stem("prostii"), "prost");});
test("prostiile -> prost", function() {deepEqual( Stem("prostiile"), "prost");});
test("prostituarea -> prostitu", function() {deepEqual( Stem("prostituarea"), "prostitu");});
test("prostituate -> prostitu", function() {deepEqual( Stem("prostituate"), "prostitu");});
test("proşti -> proşt", function() {deepEqual( Stem("proşti"), "proşt");});
test("proştii -> proşt", function() {deepEqual( Stem("proştii"), "proşt");});
test("protectoare -> protectoar", function() {deepEqual( Stem("protectoare"), "protectoar");});
test("protector -> protector", function() {deepEqual( Stem("protector"), "protector");});
test("protecţia -> protecţ", function() {deepEqual( Stem("protecţia"), "protecţ");});
test("protecţie -> protecţ", function() {deepEqual( Stem("protecţie"), "protecţ");});
test("proteja -> protej", function() {deepEqual( Stem("proteja"), "protej");});
test("protejare -> protej", function() {deepEqual( Stem("protejare"), "protej");});
test("protejat -> protej", function() {deepEqual( Stem("protejat"), "protej");});
test("protejată -> protej", function() {deepEqual( Stem("protejată"), "protej");});
test("protejatul -> protej", function() {deepEqual( Stem("protejatul"), "protej");});
test("protesta -> protest", function() {deepEqual( Stem("protesta"), "protest");});
test("protestante -> protest", function() {deepEqual( Stem("protestante"), "protest");});
test("protestare -> protest", function() {deepEqual( Stem("protestare"), "protest");});
test("protestări -> protestăr", function() {deepEqual( Stem("protestări"), "protestăr");});
test("protestează -> protest", function() {deepEqual( Stem("protestează"), "protest");});
test("protestez -> protest", function() {deepEqual( Stem("protestez"), "protest");});
test("protesteze -> protest", function() {deepEqual( Stem("protesteze"), "protest");});
test("protestezi -> protest", function() {deepEqual( Stem("protestezi"), "protest");});
test("protivnic -> protivn", function() {deepEqual( Stem("protivnic"), "protivn");});
test("prototipul -> prototip", function() {deepEqual( Stem("prototipul"), "prototip");});
test("provenienţă -> provenienţ", function() {deepEqual( Stem("provenienţă"), "provenienţ");});
test("provenind -> proven", function() {deepEqual( Stem("provenind"), "proven");});
test("proverb -> proverb", function() {deepEqual( Stem("proverb"), "proverb");});
test("proverbiabili -> proverb", function() {deepEqual( Stem("proverbiabili"), "proverb");});
test("proverbial -> proverbial", function() {deepEqual( Stem("proverbial"), "proverbial");});
test("proverbul -> proverb", function() {deepEqual( Stem("proverbul"), "proverb");});
test("provincia -> provinc", function() {deepEqual( Stem("provincia"), "provinc");});
test("provinciali -> provincial", function() {deepEqual( Stem("provinciali"), "provincial");});
test("provincialii -> provincial", function() {deepEqual( Stem("provincialii"), "provincial");});
test("provincie -> provinc", function() {deepEqual( Stem("provincie"), "provinc");});
test("provinciile -> provinc", function() {deepEqual( Stem("provinciile"), "provinc");});
test("provine -> provin", function() {deepEqual( Stem("provine"), "provin");});
test("provizorie -> provizor", function() {deepEqual( Stem("provizorie"), "provizor");});
test("provizorii -> provizor", function() {deepEqual( Stem("provizorii"), "provizor");});
test("provoacă -> provoac", function() {deepEqual( Stem("provoacă"), "provoac");});
test("provoace -> provoac", function() {deepEqual( Stem("provoace"), "provoac");});
test("provoc -> provoc", function() {deepEqual( Stem("provoc"), "provoc");});
test("provoca -> provoc", function() {deepEqual( Stem("provoca"), "provoc");});
test("provocant -> provoc", function() {deepEqual( Stem("provocant"), "provoc");});
test("provocat -> provoc", function() {deepEqual( Stem("provocat"), "provoc");});
test("provocată -> provoc", function() {deepEqual( Stem("provocată"), "provoc");});
test("provocate -> provoc", function() {deepEqual( Stem("provocate"), "provoc");});
test("provocând -> provoc", function() {deepEqual( Stem("provocând"), "provoc");});
test("provocându -> provoc", function() {deepEqual( Stem("provocându"), "provoc");});
test("provoci -> provoc", function() {deepEqual( Stem("provoci"), "provoc");});
test("prudent -> prudent", function() {deepEqual( Stem("prudent"), "prudent");});
test("prudenţă -> prudenţ", function() {deepEqual( Stem("prudenţă"), "prudenţ");});
test("prudenţei -> prudenţe", function() {deepEqual( Stem("prudenţei"), "prudenţe");});
test("prundiş -> prundiş", function() {deepEqual( Stem("prundiş"), "prundiş");});
test("prundişul -> prundiş", function() {deepEqual( Stem("prundişul"), "prundiş");});
test("prundişuri -> prundişur", function() {deepEqual( Stem("prundişuri"), "prundişur");});
test("prune -> prun", function() {deepEqual( Stem("prune"), "prun");});
test("pruni -> prun", function() {deepEqual( Stem("pruni"), "prun");});
test("prusac -> prusac", function() {deepEqual( Stem("prusac"), "prusac");});
test("prusacii -> prusac", function() {deepEqual( Stem("prusacii"), "prusac");});
test("prusian -> prusian", function() {deepEqual( Stem("prusian"), "prusian");});
test("prusiană -> prusian", function() {deepEqual( Stem("prusiană"), "prusian");});
test("prusie -> prus", function() {deepEqual( Stem("prusie"), "prus");});
test("prusiei -> prus", function() {deepEqual( Stem("prusiei"), "prus");});
test("prusiene -> prusien", function() {deepEqual( Stem("prusiene"), "prusien");});
test("prusienilor -> prusien", function() {deepEqual( Stem("prusienilor"), "prusien");});
test("pseudobunătate -> pseudobunăt", function() {deepEqual( Stem("pseudobunătate"), "pseudobunăt");});
test("pseudolux -> pseudolux", function() {deepEqual( Stem("pseudolux"), "pseudolux");});
test("pseudosubstanţă -> pseudosubstanţ", function() {deepEqual( Stem("pseudosubstanţă"), "pseudosubstanţ");});
test("psihiatrii -> psihiatr", function() {deepEqual( Stem("psihiatrii"), "psihiatr");});
test("psihică -> psihic", function() {deepEqual( Stem("psihică"), "psihic");});
test("psihice -> psihic", function() {deepEqual( Stem("psihice"), "psihic");});
test("psiholog -> psiholog", function() {deepEqual( Stem("psiholog"), "psiholog");});
test("psihologia -> psiholog", function() {deepEqual( Stem("psihologia"), "psiholog");});
test("psihologic -> psiholog", function() {deepEqual( Stem("psihologic"), "psiholog");});
test("psihologică -> psiholog", function() {deepEqual( Stem("psihologică"), "psiholog");});
test("psihologice -> psiholog", function() {deepEqual( Stem("psihologice"), "psiholog");});
test("psihologiceşte -> psihologic", function() {deepEqual( Stem("psihologiceşte"), "psihologic");});
test("psihologie -> psiholog", function() {deepEqual( Stem("psihologie"), "psiholog");});
test("psihologii -> psiholog", function() {deepEqual( Stem("psihologii"), "psiholog");});
test("psihologistă -> psihologist", function() {deepEqual( Stem("psihologistă"), "psihologist");});
test("psychologie -> psycholog", function() {deepEqual( Stem("psychologie"), "psycholog");});
test("public -> public", function() {deepEqual( Stem("public"), "public");});
test("publicase -> public", function() {deepEqual( Stem("publicase"), "public");});
test("publicat -> public", function() {deepEqual( Stem("publicat"), "public");});
test("publicată -> public", function() {deepEqual( Stem("publicată"), "public");});
test("publicaţia -> public", function() {deepEqual( Stem("publicaţia"), "public");});
test("publică -> public", function() {deepEqual( Stem("publică"), "public");});
test("publice -> public", function() {deepEqual( Stem("publice"), "public");});
test("publicist -> publicist", function() {deepEqual( Stem("publicist"), "publicist");});
test("publicitate -> public", function() {deepEqual( Stem("publicitate"), "public");});
test("publiciza -> publiciz", function() {deepEqual( Stem("publiciza"), "publiciz");});
test("publicul -> public", function() {deepEqual( Stem("publicul"), "public");});
test("publicului -> public", function() {deepEqual( Stem("publicului"), "public");});
test("pudoare -> pudoar", function() {deepEqual( Stem("pudoare"), "pudoar");});
test("pudra -> pudr", function() {deepEqual( Stem("pudra"), "pudr");});
test("pudrat -> pudrat", function() {deepEqual( Stem("pudrat"), "pudrat");});
test("pudră -> pudr", function() {deepEqual( Stem("pudră"), "pudr");});
test("pudreze -> pudr", function() {deepEqual( Stem("pudreze"), "pudr");});
test("pueril -> pueril", function() {deepEqual( Stem("pueril"), "pueril");});
test("puerilă -> pueril", function() {deepEqual( Stem("puerilă"), "pueril");});
test("puerile -> puer", function() {deepEqual( Stem("puerile"), "puer");});
test("puerilitatea -> pueril", function() {deepEqual( Stem("puerilitatea"), "pueril");});
test("puerilităţii -> pueril", function() {deepEqual( Stem("puerilităţii"), "pueril");});
test("puf -> puf", function() {deepEqual( Stem("puf"), "puf");});
test("pufneşte -> pufn", function() {deepEqual( Stem("pufneşte"), "pufn");});
test("pugilatorii -> pugil", function() {deepEqual( Stem("pugilatorii"), "pugil");});
test("puhav -> puhav", function() {deepEqual( Stem("puhav"), "puhav");});
test("puhoi -> puho", function() {deepEqual( Stem("puhoi"), "puho");});
test("puhoiul -> puhoi", function() {deepEqual( Stem("puhoiul"), "puhoi");});
test("pui -> pui", function() {deepEqual( Stem("pui"), "pui");});
test("puica -> puic", function() {deepEqual( Stem("puica"), "puic");});
test("puie -> pui", function() {deepEqual( Stem("puie"), "pui");});
test("puii -> pui", function() {deepEqual( Stem("puii"), "pui");});
test("puişorul -> puişor", function() {deepEqual( Stem("puişorul"), "puişor");});
test("puiul -> pui", function() {deepEqual( Stem("puiul"), "pui");});
test("puiule -> puiul", function() {deepEqual( Stem("puiule"), "puiul");});
test("pulbere -> pulb", function() {deepEqual( Stem("pulbere"), "pulb");});
test("pulpei -> pulpe", function() {deepEqual( Stem("pulpei"), "pulpe");});
test("pulpele -> pulp", function() {deepEqual( Stem("pulpele"), "pulp");});
test("pulsează -> puls", function() {deepEqual( Stem("pulsează"), "puls");});
test("pulsul -> puls", function() {deepEqual( Stem("pulsul"), "puls");});
test("pulverizează -> pulveriz", function() {deepEqual( Stem("pulverizează"), "pulveriz");});
test("pumn -> pumn", function() {deepEqual( Stem("pumn"), "pumn");});
test("pumni -> pumn", function() {deepEqual( Stem("pumni"), "pumn");});
test("pumnii -> pumn", function() {deepEqual( Stem("pumnii"), "pumn");});
test("pumnul -> pumn", function() {deepEqual( Stem("pumnul"), "pumn");});
test("pun -> pun", function() {deepEqual( Stem("pun"), "pun");});
test("punând -> punând", function() {deepEqual( Stem("punând"), "punând");});
test("punându -> punându", function() {deepEqual( Stem("punându"), "punându");});
test("pună -> pun", function() {deepEqual( Stem("pună"), "pun");});
test("punct -> punct", function() {deepEqual( Stem("punct"), "punct");});
test("punctată -> punctat", function() {deepEqual( Stem("punctată"), "punctat");});
test("puncte -> punct", function() {deepEqual( Stem("puncte"), "punct");});
test("punctele -> punct", function() {deepEqual( Stem("punctele"), "punct");});
test("punctelor -> punct", function() {deepEqual( Stem("punctelor"), "punct");});
test("punctul -> punct", function() {deepEqual( Stem("punctul"), "punct");});
test("punctului -> punct", function() {deepEqual( Stem("punctului"), "punct");});
test("pune -> pun", function() {deepEqual( Stem("pune"), "pun");});
test("punea -> pun", function() {deepEqual( Stem("punea"), "pun");});
test("punem -> pun", function() {deepEqual( Stem("punem"), "pun");});
test("punere -> puner", function() {deepEqual( Stem("punere"), "puner");});
test("punerea -> puner", function() {deepEqual( Stem("punerea"), "puner");});
test("puneri -> puner", function() {deepEqual( Stem("puneri"), "puner");});
test("puneţi -> pun", function() {deepEqual( Stem("puneţi"), "pun");});
test("pungi -> pung", function() {deepEqual( Stem("pungi"), "pung");});
test("punte -> punt", function() {deepEqual( Stem("punte"), "punt");});
test("puntea -> punt", function() {deepEqual( Stem("puntea"), "punt");});
test("pur -> pur", function() {deepEqual( Stem("pur"), "pur");});
test("pură -> pur", function() {deepEqual( Stem("pură"), "pur");});
test("pure -> pur", function() {deepEqual( Stem("pure"), "pur");});
test("puri -> pur", function() {deepEqual( Stem("puri"), "pur");});
test("purificare -> purific", function() {deepEqual( Stem("purificare"), "purific");});
test("purificatoare -> purific", function() {deepEqual( Stem("purificatoare"), "purific");});
test("purificări -> purificăr", function() {deepEqual( Stem("purificări"), "purificăr");});
test("purismul -> purism", function() {deepEqual( Stem("purismul"), "purism");});
test("purismului -> purism", function() {deepEqual( Stem("purismului"), "purism");});
test("puritană -> puritan", function() {deepEqual( Stem("puritană"), "puritan");});
test("puritanii -> puritan", function() {deepEqual( Stem("puritanii"), "puritan");});
test("puritanismul -> puritanist", function() {deepEqual( Stem("puritanismul"), "puritanist");});
test("puritate -> puritat", function() {deepEqual( Stem("puritate"), "puritat");});
test("purităţii -> purităţ", function() {deepEqual( Stem("purităţii"), "purităţ");});
test("puroi -> puro", function() {deepEqual( Stem("puroi"), "puro");});
test("purpură -> purp", function() {deepEqual( Stem("purpură"), "purp");});
test("pursângelui -> pursângel", function() {deepEqual( Stem("pursângelui"), "pursângel");});
test("purta -> purt", function() {deepEqual( Stem("purta"), "purt");});
test("purtam -> purt", function() {deepEqual( Stem("purtam"), "purt");});
test("purtare -> purt", function() {deepEqual( Stem("purtare"), "purt");});
test("purtarea -> purt", function() {deepEqual( Stem("purtarea"), "purt");});
test("purtase -> purt", function() {deepEqual( Stem("purtase"), "purt");});
test("purtat -> purtat", function() {deepEqual( Stem("purtat"), "purtat");});
test("purtată -> purtat", function() {deepEqual( Stem("purtată"), "purtat");});
test("purtaţi -> purt", function() {deepEqual( Stem("purtaţi"), "purt");});
test("purtau -> purt", function() {deepEqual( Stem("purtau"), "purt");});
test("purtând -> purt", function() {deepEqual( Stem("purtând"), "purt");});
test("purtându -> purt", function() {deepEqual( Stem("purtându"), "purt");});
test("purtăm -> purt", function() {deepEqual( Stem("purtăm"), "purt");});
test("purtări -> purtăr", function() {deepEqual( Stem("purtări"), "purtăr");});
test("purtării -> purtăr", function() {deepEqual( Stem("purtării"), "purtăr");});
test("purtătoare -> purtat", function() {deepEqual( Stem("purtătoare"), "purtat");});
test("purtător -> purtat", function() {deepEqual( Stem("purtător"), "purtat");});
test("purtători -> purtat", function() {deepEqual( Stem("purtători"), "purtat");});
test("purtînd -> purtînd", function() {deepEqual( Stem("purtînd"), "purtînd");});
test("purulent -> purulent", function() {deepEqual( Stem("purulent"), "purulent");});
test("pururea -> purur", function() {deepEqual( Stem("pururea"), "purur");});
test("pus -> pus", function() {deepEqual( Stem("pus"), "pus");});
test("pusă -> pus", function() {deepEqual( Stem("pusă"), "pus");});
test("puse -> pus", function() {deepEqual( Stem("puse"), "pus");});
test("pusese -> pus", function() {deepEqual( Stem("pusese"), "pus");});
test("pusesem -> puses", function() {deepEqual( Stem("pusesem"), "puses");});
test("pustii -> pust", function() {deepEqual( Stem("pustii"), "pust");});
test("pustiit -> pustiit", function() {deepEqual( Stem("pustiit"), "pustiit");});
test("pustiu -> pustiu", function() {deepEqual( Stem("pustiu"), "pustiu");});
test("pustiurile -> pustiur", function() {deepEqual( Stem("pustiurile"), "pustiur");});
test("puşca -> puşc", function() {deepEqual( Stem("puşca"), "puşc");});
test("puşcă -> puşc", function() {deepEqual( Stem("puşcă"), "puşc");});
test("puşcărie -> puşcăr", function() {deepEqual( Stem("puşcărie"), "puşcăr");});
test("puşcoace -> puşcoac", function() {deepEqual( Stem("puşcoace"), "puşcoac");});
test("puşi -> puş", function() {deepEqual( Stem("puşi"), "puş");});
test("putând -> putând", function() {deepEqual( Stem("putând"), "putând");});
test("putea -> put", function() {deepEqual( Stem("putea"), "put");});
test("puteai -> putea", function() {deepEqual( Stem("puteai"), "putea");});
test("puteam -> puteam", function() {deepEqual( Stem("puteam"), "puteam");});
test("puteau -> puteau", function() {deepEqual( Stem("puteau"), "puteau");});
test("putem -> put", function() {deepEqual( Stem("putem"), "put");});
test("putere -> puter", function() {deepEqual( Stem("putere"), "puter");});
test("puterea -> puter", function() {deepEqual( Stem("puterea"), "puter");});
test("puteri -> puter", function() {deepEqual( Stem("puteri"), "puter");});
test("puterii -> puter", function() {deepEqual( Stem("puterii"), "puter");});
test("puterile -> puter", function() {deepEqual( Stem("puterile"), "puter");});
test("puterilor -> puter", function() {deepEqual( Stem("puterilor"), "puter");});
test("puternic -> putern", function() {deepEqual( Stem("puternic"), "putern");});
test("puternică -> putern", function() {deepEqual( Stem("puternică"), "putern");});
test("puternice -> putern", function() {deepEqual( Stem("puternice"), "putern");});
test("puteţi -> put", function() {deepEqual( Stem("puteţi"), "put");});
test("putifar -> putifar", function() {deepEqual( Stem("putifar"), "putifar");});
test("putineiul -> putinei", function() {deepEqual( Stem("putineiul"), "putinei");});
test("putini -> putin", function() {deepEqual( Stem("putini"), "putin");});
test("putinile -> putin", function() {deepEqual( Stem("putinile"), "putin");});
test("putinţa -> putinţ", function() {deepEqual( Stem("putinţa"), "putinţ");});
test("putinţă -> putinţ", function() {deepEqual( Stem("putinţă"), "putinţ");});
test("putrede -> putred", function() {deepEqual( Stem("putrede"), "putred");});
test("putrezesc -> putrez", function() {deepEqual( Stem("putrezesc"), "putrez");});
test("putu -> putu", function() {deepEqual( Stem("putu"), "putu");});
test("puturoase -> putur", function() {deepEqual( Stem("puturoase"), "putur");});
test("puturoşi -> putur", function() {deepEqual( Stem("puturoşi"), "putur");});
test("putusem -> putusem", function() {deepEqual( Stem("putusem"), "putusem");});
test("putuseră -> putuser", function() {deepEqual( Stem("putuseră"), "putuser");});
test("putut -> putut", function() {deepEqual( Stem("putut"), "putut");});
test("puţin -> puţin", function() {deepEqual( Stem("puţin"), "puţin");});
test("puţină -> puţin", function() {deepEqual( Stem("puţină"), "puţin");});
test("puţinătatea -> puţinăt", function() {deepEqual( Stem("puţinătatea"), "puţinăt");});
test("puţine -> puţin", function() {deepEqual( Stem("puţine"), "puţin");});
test("puţinele -> puţin", function() {deepEqual( Stem("puţinele"), "puţin");});
test("puţini -> puţin", function() {deepEqual( Stem("puţini"), "puţin");});
test("puţinii -> puţin", function() {deepEqual( Stem("puţinii"), "puţin");});
test("puţintel -> puţintel", function() {deepEqual( Stem("puţintel"), "puţintel");});
test("puţuri -> puţur", function() {deepEqual( Stem("puţuri"), "puţur");});
test("pytagora -> pytagor", function() {deepEqual( Stem("pytagora"), "pytagor");});
test("que -> que", function() {deepEqual( Stem("que"), "que");});
test("quelques -> quelques", function() {deepEqual( Stem("quelques"), "quelques");});
test("qui -> qui", function() {deepEqual( Stem("qui"), "qui");});
test("quotitate -> quotitat", function() {deepEqual( Stem("quotitate"), "quotitat");});
test("quotitatea -> quotitat", function() {deepEqual( Stem("quotitatea"), "quotitat");});
test("r -> r", function() {deepEqual( Stem("r"), "r");});
test("rachetă -> rachet", function() {deepEqual( Stem("rachetă"), "rachet");});
test("rachetele -> rachet", function() {deepEqual( Stem("rachetele"), "rachet");});
test("radă -> rad", function() {deepEqual( Stem("radă"), "rad");});
test("radical -> radic", function() {deepEqual( Stem("radical"), "radic");});
test("radicală -> radic", function() {deepEqual( Stem("radicală"), "radic");});
test("radicale -> radic", function() {deepEqual( Stem("radicale"), "radic");});
test("radioactivă -> radioact", function() {deepEqual( Stem("radioactivă"), "radioact");});
test("radioactive -> radioact", function() {deepEqual( Stem("radioactive"), "radioact");});
test("radios -> radios", function() {deepEqual( Stem("radios"), "radios");});
test("radium -> radium", function() {deepEqual( Stem("radium"), "radium");});
test("rafael -> rafael", function() {deepEqual( Stem("rafael"), "rafael");});
test("rafinată -> rafin", function() {deepEqual( Stem("rafinată"), "rafin");});
test("rahitismul -> rahitist", function() {deepEqual( Stem("rahitismul"), "rahitist");});
test("raicu -> raicu", function() {deepEqual( Stem("raicu"), "raicu");});
test("raidurile -> raidur", function() {deepEqual( Stem("raidurile"), "raidur");});
test("raitcort -> raitcort", function() {deepEqual( Stem("raitcort"), "raitcort");});
test("ramificare -> ramific", function() {deepEqual( Stem("ramificare"), "ramific");});
test("rampă -> ramp", function() {deepEqual( Stem("rampă"), "ramp");});
test("ramură -> ramur", function() {deepEqual( Stem("ramură"), "ramur");});
test("ramuri -> ramur", function() {deepEqual( Stem("ramuri"), "ramur");});
test("ramurile -> ramur", function() {deepEqual( Stem("ramurile"), "ramur");});
test("rana -> ran", function() {deepEqual( Stem("rana"), "ran");});
test("rană -> ran", function() {deepEqual( Stem("rană"), "ran");});
test("rang -> rang", function() {deepEqual( Stem("rang"), "rang");});
test("raniţa -> raniţ", function() {deepEqual( Stem("raniţa"), "raniţ");});
test("raniţă -> raniţ", function() {deepEqual( Stem("raniţă"), "raniţ");});
test("raniţe -> raniţ", function() {deepEqual( Stem("raniţe"), "raniţ");});
test("raniţele -> raniţ", function() {deepEqual( Stem("raniţele"), "raniţ");});
test("rapidă -> rapid", function() {deepEqual( Stem("rapidă"), "rapid");});
test("rapoarte -> rapoart", function() {deepEqual( Stem("rapoarte"), "rapoart");});
test("raport -> raport", function() {deepEqual( Stem("raport"), "raport");});
test("raporta -> raport", function() {deepEqual( Stem("raporta"), "raport");});
test("raportare -> raport", function() {deepEqual( Stem("raportare"), "raport");});
test("raportarea -> raport", function() {deepEqual( Stem("raportarea"), "raport");});
test("raportate -> raport", function() {deepEqual( Stem("raportate"), "raport");});
test("raportă -> raport", function() {deepEqual( Stem("raportă"), "raport");});
test("raportăm -> raport", function() {deepEqual( Stem("raportăm"), "raport");});
test("raportează -> raport", function() {deepEqual( Stem("raportează"), "raport");});
test("raportez -> raport", function() {deepEqual( Stem("raportez"), "raport");});
test("raporteze -> raport", function() {deepEqual( Stem("raporteze"), "raport");});
test("raportul -> raport", function() {deepEqual( Stem("raportul"), "raport");});
test("raportului -> raport", function() {deepEqual( Stem("raportului"), "raport");});
test("raporturi -> raportur", function() {deepEqual( Stem("raporturi"), "raportur");});
test("raporturile -> raportur", function() {deepEqual( Stem("raporturile"), "raportur");});
test("raporturilor -> raportur", function() {deepEqual( Stem("raporturilor"), "raportur");});
test("rar -> rar", function() {deepEqual( Stem("rar"), "rar");});
test("rară -> rar", function() {deepEqual( Stem("rară"), "rar");});
test("rare -> rar", function() {deepEqual( Stem("rare"), "rar");});
test("rareori -> rareor", function() {deepEqual( Stem("rareori"), "rareor");});
test("rari -> rar", function() {deepEqual( Stem("rari"), "rar");});
test("raritate -> raritat", function() {deepEqual( Stem("raritate"), "raritat");});
test("ras -> ras", function() {deepEqual( Stem("ras"), "ras");});
test("rasa -> ras", function() {deepEqual( Stem("rasa"), "ras");});
test("rasă -> ras", function() {deepEqual( Stem("rasă"), "ras");});
test("rathenau -> rathen", function() {deepEqual( Stem("rathenau"), "rathen");});
test("ratific -> ratif", function() {deepEqual( Stem("ratific"), "ratif");});
test("raţiile -> raţ", function() {deepEqual( Stem("raţiile"), "raţ");});
test("raţional -> raţional", function() {deepEqual( Stem("raţional"), "raţional");});
test("raţională -> raţional", function() {deepEqual( Stem("raţională"), "raţional");});
test("raţionalism -> raţionalist", function() {deepEqual( Stem("raţionalism"), "raţionalist");});
test("raţionalismul -> raţionalist", function() {deepEqual( Stem("raţionalismul"), "raţionalist");});
test("raţionalist -> raţionalist", function() {deepEqual( Stem("raţionalist"), "raţionalist");});
test("raţionalistă -> raţionalist", function() {deepEqual( Stem("raţionalistă"), "raţionalist");});
test("raţionaliştii -> raţionalist", function() {deepEqual( Stem("raţionaliştii"), "raţionalist");});
test("raţionalitate -> raţional", function() {deepEqual( Stem("raţionalitate"), "raţional");});
test("raţionalitatea -> raţional", function() {deepEqual( Stem("raţionalitatea"), "raţional");});
test("raţionament -> raţionament", function() {deepEqual( Stem("raţionament"), "raţionament");});
test("raţionamente -> raţionament", function() {deepEqual( Stem("raţionamente"), "raţionament");});
test("raţionamentele -> raţionament", function() {deepEqual( Stem("raţionamentele"), "raţionament");});
test("raţionamentul -> raţionament", function() {deepEqual( Stem("raţionamentul"), "raţionament");});
test("raţionamentului -> raţionament", function() {deepEqual( Stem("raţionamentului"), "raţionament");});
test("raţionare -> raţion", function() {deepEqual( Stem("raţionare"), "raţion");});
test("raţionez -> raţion", function() {deepEqual( Stem("raţionez"), "raţion");});
test("raţiune -> raţiun", function() {deepEqual( Stem("raţiune"), "raţiun");});
test("raţiunea -> raţiun", function() {deepEqual( Stem("raţiunea"), "raţiun");});
test("raţiunei -> raţiune", function() {deepEqual( Stem("raţiunei"), "raţiune");});
test("raţiunii -> raţiun", function() {deepEqual( Stem("raţiunii"), "raţiun");});
test("rază -> raz", function() {deepEqual( Stem("rază"), "raz");});
test("raze -> raz", function() {deepEqual( Stem("raze"), "raz");});
test("razna -> razn", function() {deepEqual( Stem("razna"), "razn");});
test("râcâie -> râcâi", function() {deepEqual( Stem("râcâie"), "râcâi");});
test("râd -> râd", function() {deepEqual( Stem("râd"), "râd");});
test("râdă -> râd", function() {deepEqual( Stem("râdă"), "râd");});
test("râde -> râd", function() {deepEqual( Stem("râde"), "râd");});
test("râdea -> râd", function() {deepEqual( Stem("râdea"), "râd");});
test("râdem -> râd", function() {deepEqual( Stem("râdem"), "râd");});
test("râmat -> râmat", function() {deepEqual( Stem("râmat"), "râmat");});
test("râme -> râm", function() {deepEqual( Stem("râme"), "râm");});
test("râmnicu -> râmnicu", function() {deepEqual( Stem("râmnicu"), "râmnicu");});
test("rână -> rân", function() {deepEqual( Stem("rână"), "rân");});
test("rând -> rând", function() {deepEqual( Stem("rând"), "rând");});
test("rânduit -> rânduit", function() {deepEqual( Stem("rânduit"), "rânduit");});
test("rândul -> rând", function() {deepEqual( Stem("rândul"), "rând");});
test("rândului -> rând", function() {deepEqual( Stem("rândului"), "rând");});
test("rândunele -> rândun", function() {deepEqual( Stem("rândunele"), "rândun");});
test("rânduri -> rândur", function() {deepEqual( Stem("rânduri"), "rândur");});
test("rândurile -> rândur", function() {deepEqual( Stem("rândurile"), "rândur");});
test("rânjeşte -> rânj", function() {deepEqual( Stem("rânjeşte"), "rânj");});
test("rânza -> rânz", function() {deepEqual( Stem("rânza"), "rânz");});
test("râpa -> râp", function() {deepEqual( Stem("râpa"), "râp");});
test("râpă -> râp", function() {deepEqual( Stem("râpă"), "râp");});
test("râpei -> râpe", function() {deepEqual( Stem("râpei"), "râpe");});
test("râpi -> râp", function() {deepEqual( Stem("râpi"), "râp");});
test("râpii -> râp", function() {deepEqual( Stem("râpii"), "râp");});
test("râpoasă -> râpoas", function() {deepEqual( Stem("râpoasă"), "râpoas");});
test("râpos -> râpos", function() {deepEqual( Stem("râpos"), "râpos");});
test("râs -> râs", function() {deepEqual( Stem("râs"), "râs");});
test("râsete -> râset", function() {deepEqual( Stem("râsete"), "râset");});
test("râşnov -> râşnov", function() {deepEqual( Stem("râşnov"), "râşnov");});
test("râturi -> râtur", function() {deepEqual( Stem("râturi"), "râtur");});
test("râu -> râu", function() {deepEqual( Stem("râu"), "râu");});
test("râului -> râul", function() {deepEqual( Stem("râului"), "râul");});
test("râuri -> râur", function() {deepEqual( Stem("râuri"), "râur");});
test("râvna -> râvn", function() {deepEqual( Stem("râvna"), "râvn");});
test("râvneşte -> râvn", function() {deepEqual( Stem("râvneşte"), "râvn");});
test("râzând -> râzând", function() {deepEqual( Stem("râzând"), "râzând");});
test("râzători -> râzat", function() {deepEqual( Stem("râzători"), "râzat");});
test("răbda -> răbd", function() {deepEqual( Stem("răbda"), "răbd");});
test("răbdam -> răbd", function() {deepEqual( Stem("răbdam"), "răbd");});
test("răbdare -> răbd", function() {deepEqual( Stem("răbdare"), "răbd");});
test("răbdarea -> răbd", function() {deepEqual( Stem("răbdarea"), "răbd");});
test("răbdat -> răbdat", function() {deepEqual( Stem("răbdat"), "răbdat");});
test("răcească -> răceasc", function() {deepEqual( Stem("răcească"), "răceasc");});
test("răceşte -> răceşt", function() {deepEqual( Stem("răceşte"), "răceşt");});
test("răchită -> răchit", function() {deepEqual( Stem("răchită"), "răchit");});
test("răchite -> răchit", function() {deepEqual( Stem("răchite"), "răchit");});
test("răchiţi -> răch", function() {deepEqual( Stem("răchiţi"), "răch");});
test("răcit -> răcit", function() {deepEqual( Stem("răcit"), "răcit");});
test("răcnesc -> răcn", function() {deepEqual( Stem("răcnesc"), "răcn");});
test("răcnetul -> răcnet", function() {deepEqual( Stem("răcnetul"), "răcnet");});
test("răcnind -> răcn", function() {deepEqual( Stem("răcnind"), "răcn");});
test("răcnite -> răcnit", function() {deepEqual( Stem("răcnite"), "răcnit");});
test("răcniţi -> răcn", function() {deepEqual( Stem("răcniţi"), "răcn");});
test("răcoare -> răcoar", function() {deepEqual( Stem("răcoare"), "răcoar");});
test("răcoresc -> răcor", function() {deepEqual( Stem("răcoresc"), "răcor");});
test("răcori -> răcor", function() {deepEqual( Stem("răcori"), "răcor");});
test("răcoritor -> răcor", function() {deepEqual( Stem("răcoritor"), "răcor");});
test("răcoros -> răcor", function() {deepEqual( Stem("răcoros"), "răcor");});
test("rădăcina -> rădăcin", function() {deepEqual( Stem("rădăcina"), "rădăcin");});
test("rădăcini -> rădăcin", function() {deepEqual( Stem("rădăcini"), "rădăcin");});
test("rădăcinile -> rădăcin", function() {deepEqual( Stem("rădăcinile"), "rădăcin");});
test("rădulescu -> rădulescu", function() {deepEqual( Stem("rădulescu"), "rădulescu");});
test("răfuială -> răfuial", function() {deepEqual( Stem("răfuială"), "răfuial");});
test("răfuiesc -> răfui", function() {deepEqual( Stem("răfuiesc"), "răfui");});
test("răgazuri -> răgazur", function() {deepEqual( Stem("răgazuri"), "răgazur");});
test("răi -> răi", function() {deepEqual( Stem("răi"), "răi");});
test("rămas -> rămas", function() {deepEqual( Stem("rămas"), "rămas");});
test("rămasă -> rămas", function() {deepEqual( Stem("rămasă"), "rămas");});
test("rămase -> rămas", function() {deepEqual( Stem("rămase"), "rămas");});
test("rămaşi -> rămaş", function() {deepEqual( Stem("rămaşi"), "rămaş");});
test("rămâi -> rămâ", function() {deepEqual( Stem("rămâi"), "rămâ");});
test("rămâie -> rămâi", function() {deepEqual( Stem("rămâie"), "rămâi");});
test("rămân -> rămân", function() {deepEqual( Stem("rămân"), "rămân");});
test("rămânând -> rămân", function() {deepEqual( Stem("rămânând"), "rămân");});
test("rămână -> rămân", function() {deepEqual( Stem("rămână"), "rămân");});
test("rămâne -> rămân", function() {deepEqual( Stem("rămâne"), "rămân");});
test("rămânea -> rămân", function() {deepEqual( Stem("rămânea"), "rămân");});
test("rămâneam -> rămân", function() {deepEqual( Stem("rămâneam"), "rămân");});
test("rămânem -> rămân", function() {deepEqual( Stem("rămânem"), "rămân");});
test("rămânere -> rămân", function() {deepEqual( Stem("rămânere"), "rămân");});
test("rămânerea -> rămân", function() {deepEqual( Stem("rămânerea"), "rămân");});
test("rămâneţi -> rămân", function() {deepEqual( Stem("rămâneţi"), "rămân");});
test("rămăsese -> răm", function() {deepEqual( Stem("rămăsese"), "răm");});
test("rămăsesem -> răm", function() {deepEqual( Stem("rămăsesem"), "răm");});
test("rămăseseră -> răm", function() {deepEqual( Stem("rămăseseră"), "răm");});
test("răneşte -> răneşt", function() {deepEqual( Stem("răneşte"), "răneşt");});
test("răni -> răn", function() {deepEqual( Stem("răni"), "răn");});
test("rănii -> răn", function() {deepEqual( Stem("rănii"), "răn");});
test("rănile -> răn", function() {deepEqual( Stem("rănile"), "răn");});
test("rănit -> rănit", function() {deepEqual( Stem("rănit"), "rănit");});
test("rănită -> rănit", function() {deepEqual( Stem("rănită"), "rănit");});
test("răniţi -> răn", function() {deepEqual( Stem("răniţi"), "răn");});
test("răniţii -> răn", function() {deepEqual( Stem("răniţii"), "răn");});
test("răpăiala -> răpăial", function() {deepEqual( Stem("răpăiala"), "răpăial");});
test("răpăială -> răpăial", function() {deepEqual( Stem("răpăială"), "răpăial");});
test("răpăieli -> răpăiel", function() {deepEqual( Stem("răpăieli"), "răpăiel");});
test("răpăielile -> răpăiel", function() {deepEqual( Stem("răpăielile"), "răpăiel");});
test("răpăit -> răpăit", function() {deepEqual( Stem("răpăit"), "răpăit");});
test("răpăitura -> răpăitur", function() {deepEqual( Stem("răpăitura"), "răpăitur");});
test("răposate -> răpos", function() {deepEqual( Stem("răposate"), "răpos");});
test("răposatul -> răpos", function() {deepEqual( Stem("răposatul"), "răpos");});
test("răposaţii -> răpos", function() {deepEqual( Stem("răposaţii"), "răpos");});
test("răpune -> răpun", function() {deepEqual( Stem("răpune"), "răpun");});
test("răresc -> răresc", function() {deepEqual( Stem("răresc"), "răresc");});
test("răreşte -> răreşt", function() {deepEqual( Stem("răreşte"), "răreşt");});
test("răriseră -> răriser", function() {deepEqual( Stem("răriseră"), "răriser");});
test("rărit -> rărit", function() {deepEqual( Stem("rărit"), "rărit");});
test("rărită -> rărit", function() {deepEqual( Stem("rărită"), "rărit");});
test("rărunchi -> rărunch", function() {deepEqual( Stem("rărunchi"), "rărunch");});
test("rărunchii -> rărunch", function() {deepEqual( Stem("rărunchii"), "rărunch");});
test("răsaduri -> răsadur", function() {deepEqual( Stem("răsaduri"), "răsadur");});
test("răsar -> răsar", function() {deepEqual( Stem("răsar"), "răsar");});
test("răsăreau -> răsăr", function() {deepEqual( Stem("răsăreau"), "răsăr");});
test("răsărise -> răsăr", function() {deepEqual( Stem("răsărise"), "răsăr");});
test("răsărit -> răsăr", function() {deepEqual( Stem("răsărit"), "răsăr");});
test("răsărite -> răsăr", function() {deepEqual( Stem("răsărite"), "răsăr");});
test("răsăritul -> răsăr", function() {deepEqual( Stem("răsăritul"), "răsăr");});
test("răscoalelor -> răscoal", function() {deepEqual( Stem("răscoalelor"), "răscoal");});
test("răscolind -> răscol", function() {deepEqual( Stem("răscolind"), "răscol");});
test("răscolire -> răscol", function() {deepEqual( Stem("răscolire"), "răscol");});
test("răscoliri -> răscolir", function() {deepEqual( Stem("răscoliri"), "răscolir");});
test("răscolit -> răscol", function() {deepEqual( Stem("răscolit"), "răscol");});
test("răscolitor -> răscol", function() {deepEqual( Stem("răscolitor"), "răscol");});
test("răsculaţii -> răscul", function() {deepEqual( Stem("răsculaţii"), "răscul");});
test("răsfăţa -> răsfăţ", function() {deepEqual( Stem("răsfăţa"), "răsfăţ");});
test("răsfăţatul -> răsfăţ", function() {deepEqual( Stem("răsfăţatul"), "răsfăţ");});
test("răsfrânge -> răsfrâng", function() {deepEqual( Stem("răsfrânge"), "răsfrâng");});
test("răsfrângere -> răsfrâng", function() {deepEqual( Stem("răsfrângere"), "răsfrâng");});
test("răsfrângerea -> răsfrâng", function() {deepEqual( Stem("răsfrângerea"), "răsfrâng");});
test("răsfrânt -> răsfrânt", function() {deepEqual( Stem("răsfrânt"), "răsfrânt");});
test("răsfrântă -> răsfrânt", function() {deepEqual( Stem("răsfrântă"), "răsfrânt");});
test("răsfrânte -> răsfrânt", function() {deepEqual( Stem("răsfrânte"), "răsfrânt");});
test("răspândirea -> răspând", function() {deepEqual( Stem("răspândirea"), "răspând");});
test("răspândit -> răspând", function() {deepEqual( Stem("răspândit"), "răspând");});
test("răspândită -> răspând", function() {deepEqual( Stem("răspândită"), "răspând");});
test("răspândiţi -> răspând", function() {deepEqual( Stem("răspândiţi"), "răspând");});
test("răspântia -> răspânt", function() {deepEqual( Stem("răspântia"), "răspânt");});
test("răspântie -> răspânt", function() {deepEqual( Stem("răspântie"), "răspânt");});
test("răspicat -> răspic", function() {deepEqual( Stem("răspicat"), "răspic");});
test("răspică -> răspic", function() {deepEqual( Stem("răspică"), "răspic");});
test("răsplătit -> răsplăt", function() {deepEqual( Stem("răsplătit"), "răsplăt");});
test("răspund -> răspund", function() {deepEqual( Stem("răspund"), "răspund");});
test("răspundă -> răspund", function() {deepEqual( Stem("răspundă"), "răspund");});
test("răspunde -> răspund", function() {deepEqual( Stem("răspunde"), "răspund");});
test("răspundea -> răspund", function() {deepEqual( Stem("răspundea"), "răspund");});
test("răspundeau -> răspund", function() {deepEqual( Stem("răspundeau"), "răspund");});
test("răspundem -> răspund", function() {deepEqual( Stem("răspundem"), "răspund");});
test("răspundere -> răspund", function() {deepEqual( Stem("răspundere"), "răspund");});
test("răspunderea -> răspund", function() {deepEqual( Stem("răspunderea"), "răspund");});
test("răspunderii -> răspunder", function() {deepEqual( Stem("răspunderii"), "răspunder");});
test("răspundeţi -> răspund", function() {deepEqual( Stem("răspundeţi"), "răspund");});
test("răspuns -> răspuns", function() {deepEqual( Stem("răspuns"), "răspuns");});
test("răspunse -> răspun", function() {deepEqual( Stem("răspunse"), "răspun");});
test("răspunsese -> răspun", function() {deepEqual( Stem("răspunsese"), "răspun");});
test("răspunsul -> răspuns", function() {deepEqual( Stem("răspunsul"), "răspuns");});
test("răspunsului -> răspuns", function() {deepEqual( Stem("răspunsului"), "răspuns");});
test("răspunsuri -> răspunsur", function() {deepEqual( Stem("răspunsuri"), "răspunsur");});
test("răspunsurile -> răspunsur", function() {deepEqual( Stem("răspunsurile"), "răspunsur");});
test("răspunzător -> răspunz", function() {deepEqual( Stem("răspunzător"), "răspunz");});
test("răspunzi -> răspunz", function() {deepEqual( Stem("răspunzi"), "răspunz");});
test("răstimpuri -> răstimpur", function() {deepEqual( Stem("răstimpuri"), "răstimpur");});
test("răstit -> răstit", function() {deepEqual( Stem("răstit"), "răstit");});
test("răstoarnă -> răstoarn", function() {deepEqual( Stem("răstoarnă"), "răstoarn");});
test("răstoarne -> răstoarn", function() {deepEqual( Stem("răstoarne"), "răstoarn");});
test("răsturna -> răsturn", function() {deepEqual( Stem("răsturna"), "răsturn");});
test("răsturnare -> răsturn", function() {deepEqual( Stem("răsturnare"), "răsturn");});
test("răsturnat -> răsturn", function() {deepEqual( Stem("răsturnat"), "răsturn");});
test("răsturnată -> răsturn", function() {deepEqual( Stem("răsturnată"), "răsturn");});
test("răsturnate -> răsturn", function() {deepEqual( Stem("răsturnate"), "răsturn");});
test("răsturnaţi -> răsturn", function() {deepEqual( Stem("răsturnaţi"), "răsturn");});
test("răsturnările -> răsturnăr", function() {deepEqual( Stem("răsturnările"), "răsturnăr");});
test("răsucea -> răsuc", function() {deepEqual( Stem("răsucea"), "răsuc");});
test("răsucească -> răsuc", function() {deepEqual( Stem("răsucească"), "răsuc");});
test("răsucesc -> răsuc", function() {deepEqual( Stem("răsucesc"), "răsuc");});
test("răsuciri -> răsucir", function() {deepEqual( Stem("răsuciri"), "răsucir");});
test("răsucit -> răsuc", function() {deepEqual( Stem("răsucit"), "răsuc");});
test("răsucită -> răsuc", function() {deepEqual( Stem("răsucită"), "răsuc");});
test("răsucite -> răsuc", function() {deepEqual( Stem("răsucite"), "răsuc");});
test("răsuflarea -> răsufl", function() {deepEqual( Stem("răsuflarea"), "răsufl");});
test("răsuflate -> răsufl", function() {deepEqual( Stem("răsuflate"), "răsufl");});
test("răsuflând -> răsufl", function() {deepEqual( Stem("răsuflând"), "răsufl");});
test("răsuflă -> răsufl", function() {deepEqual( Stem("răsuflă"), "răsufl");});
test("răsuflăm -> răsufl", function() {deepEqual( Stem("răsuflăm"), "răsufl");});
test("răsuflet -> răsuflet", function() {deepEqual( Stem("răsuflet"), "răsuflet");});
test("răsuflu -> răsuflu", function() {deepEqual( Stem("răsuflu"), "răsuflu");});
test("răsunat -> răsun", function() {deepEqual( Stem("răsunat"), "răsun");});
test("răsună -> răsun", function() {deepEqual( Stem("răsună"), "răsun");});
test("răsunătoare -> răsun", function() {deepEqual( Stem("răsunătoare"), "răsun");});
test("răşina -> răşin", function() {deepEqual( Stem("răşina"), "răşin");});
test("rătăcească -> rătăc", function() {deepEqual( Stem("rătăcească"), "rătăc");});
test("rătăcirii -> rătăcir", function() {deepEqual( Stem("rătăcirii"), "rătăcir");});
test("rătăcise -> rătăc", function() {deepEqual( Stem("rătăcise"), "rătăc");});
test("rătăcit -> rătăc", function() {deepEqual( Stem("rătăcit"), "rătăc");});
test("rătăciţi -> rătăc", function() {deepEqual( Stem("rătăciţi"), "rătăc");});
test("rău -> rău", function() {deepEqual( Stem("rău"), "rău");});
test("răul -> răul", function() {deepEqual( Stem("răul"), "răul");});
test("răutate -> răutat", function() {deepEqual( Stem("răutate"), "răutat");});
test("răvăşită -> răvăş", function() {deepEqual( Stem("răvăşită"), "răvăş");});
test("răzbată -> răzbat", function() {deepEqual( Stem("răzbată"), "răzbat");});
test("răzbătea -> răzbăt", function() {deepEqual( Stem("răzbătea"), "răzbăt");});
test("răzbească -> răzb", function() {deepEqual( Stem("răzbească"), "răzb");});
test("răzbi -> răzb", function() {deepEqual( Stem("răzbi"), "răzb");});
test("răzbind -> răzb", function() {deepEqual( Stem("răzbind"), "răzb");});
test("războaie -> războai", function() {deepEqual( Stem("războaie"), "războai");});
test("războaiele -> războai", function() {deepEqual( Stem("războaiele"), "războai");});
test("războaielor -> războai", function() {deepEqual( Stem("războaielor"), "războai");});
test("război -> războ", function() {deepEqual( Stem("război"), "războ");});
test("războinică -> războin", function() {deepEqual( Stem("războinică"), "războin");});
test("războinice -> războin", function() {deepEqual( Stem("războinice"), "războin");});
test("războinicilor -> războin", function() {deepEqual( Stem("războinicilor"), "războin");});
test("războinicului -> războin", function() {deepEqual( Stem("războinicului"), "războin");});
test("războiul -> război", function() {deepEqual( Stem("războiul"), "război");});
test("războiului -> război", function() {deepEqual( Stem("războiului"), "război");});
test("răzbunare -> răzbun", function() {deepEqual( Stem("răzbunare"), "răzbun");});
test("răzbună -> răzbun", function() {deepEqual( Stem("răzbună"), "răzbun");});
test("răzbunării -> răzbunăr", function() {deepEqual( Stem("răzbunării"), "răzbunăr");});
test("răzgândeşte -> răzgând", function() {deepEqual( Stem("răzgândeşte"), "răzgând");});
test("răzvrătind -> răzvrăt", function() {deepEqual( Stem("răzvrătind"), "răzvrăt");});
test("răzvrătirea -> răzvrăt", function() {deepEqual( Stem("răzvrătirea"), "răzvrăt");});
test("răzvrătiţi -> răzvrăt", function() {deepEqual( Stem("răzvrătiţi"), "răzvrăt");});
test("re -> re", function() {deepEqual( Stem("re"), "re");});
test("rea -> rea", function() {deepEqual( Stem("rea"), "rea");});
test("reabilitând -> reabilit", function() {deepEqual( Stem("reabilitând"), "reabilit");});
test("reacţiona -> reacţion", function() {deepEqual( Stem("reacţiona"), "reacţion");});
test("reacţionară -> reacţion", function() {deepEqual( Stem("reacţionară"), "reacţion");});
test("reacţionare -> reacţion", function() {deepEqual( Stem("reacţionare"), "reacţion");});
test("reacţionari -> reacţionar", function() {deepEqual( Stem("reacţionari"), "reacţionar");});
test("reacţiune -> reacţiun", function() {deepEqual( Stem("reacţiune"), "reacţiun");});
test("reacţiuni -> reacţiun", function() {deepEqual( Stem("reacţiuni"), "reacţiun");});
test("reacţiunii -> reacţiun", function() {deepEqual( Stem("reacţiunii"), "reacţiun");});
test("readuc -> readuc", function() {deepEqual( Stem("readuc"), "readuc");});
test("readucă -> readuc", function() {deepEqual( Stem("readucă"), "readuc");});
test("readuce -> readuc", function() {deepEqual( Stem("readuce"), "readuc");});
test("readus -> readus", function() {deepEqual( Stem("readus"), "readus");});
test("real -> real", function() {deepEqual( Stem("real"), "real");});
test("reală -> real", function() {deepEqual( Stem("reală"), "real");});
test("reale -> real", function() {deepEqual( Stem("reale"), "real");});
test("realist -> realist", function() {deepEqual( Stem("realist"), "realist");});
test("realistă -> realist", function() {deepEqual( Stem("realistă"), "realist");});
test("realitate -> realitat", function() {deepEqual( Stem("realitate"), "realitat");});
test("realitatea -> realitat", function() {deepEqual( Stem("realitatea"), "realitat");});
test("realităţi -> realităţ", function() {deepEqual( Stem("realităţi"), "realităţ");});
test("realităţii -> realităţ", function() {deepEqual( Stem("realităţii"), "realităţ");});
test("realităţile -> realităţ", function() {deepEqual( Stem("realităţile"), "realităţ");});
test("realităţilor -> realităţ", function() {deepEqual( Stem("realităţilor"), "realităţ");});
test("realiter -> realiter", function() {deepEqual( Stem("realiter"), "realiter");});
test("realiza -> realiz", function() {deepEqual( Stem("realiza"), "realiz");});
test("realizabile -> realiz", function() {deepEqual( Stem("realizabile"), "realiz");});
test("realizam -> realiz", function() {deepEqual( Stem("realizam"), "realiz");});
test("realizare -> realiz", function() {deepEqual( Stem("realizare"), "realiz");});
test("realizarea -> realiz", function() {deepEqual( Stem("realizarea"), "realiz");});
test("realizase -> realiz", function() {deepEqual( Stem("realizase"), "realiz");});
test("realizaseră -> realiz", function() {deepEqual( Stem("realizaseră"), "realiz");});
test("realizat -> realiz", function() {deepEqual( Stem("realizat"), "realiz");});
test("realizată -> realiz", function() {deepEqual( Stem("realizată"), "realiz");});
test("realizate -> realiz", function() {deepEqual( Stem("realizate"), "realiz");});
test("realizatoare -> realiz", function() {deepEqual( Stem("realizatoare"), "realiz");});
test("realizatoarei -> realizatoare", function() {deepEqual( Stem("realizatoarei"), "realizatoare");});
test("realizator -> realiz", function() {deepEqual( Stem("realizator"), "realiz");});
test("realizatori -> realiz", function() {deepEqual( Stem("realizatori"), "realiz");});
test("realizaţi -> realiz", function() {deepEqual( Stem("realizaţi"), "realiz");});
test("realizări -> realizăr", function() {deepEqual( Stem("realizări"), "realizăr");});
test("realizării -> realizăr", function() {deepEqual( Stem("realizării"), "realizăr");});
test("realizările -> realizăr", function() {deepEqual( Stem("realizările"), "realizăr");});
test("realizează -> realiz", function() {deepEqual( Stem("realizează"), "realiz");});
test("realizez -> realiz", function() {deepEqual( Stem("realizez"), "realiz");});
test("realizeze -> realiz", function() {deepEqual( Stem("realizeze"), "realiz");});
test("realizînd -> realizînd", function() {deepEqual( Stem("realizînd"), "realizînd");});
test("realmente -> realment", function() {deepEqual( Stem("realmente"), "realment");});
test("realocare -> realoc", function() {deepEqual( Stem("realocare"), "realoc");});
test("realulers -> realulers", function() {deepEqual( Stem("realulers"), "realulers");});
test("reaminti -> reamint", function() {deepEqual( Stem("reaminti"), "reamint");});
test("reamintită -> reamint", function() {deepEqual( Stem("reamintită"), "reamint");});
test("reanimarea -> reanim", function() {deepEqual( Stem("reanimarea"), "reanim");});
test("reapăreau -> reapăr", function() {deepEqual( Stem("reapăreau"), "reapăr");});
test("reapărut -> reapăr", function() {deepEqual( Stem("reapărut"), "reapăr");});
test("rearanja -> rearanj", function() {deepEqual( Stem("rearanja"), "rearanj");});
test("rearanjăm -> rearanj", function() {deepEqual( Stem("rearanjăm"), "rearanj");});
test("reasamblările -> reasamblăr", function() {deepEqual( Stem("reasamblările"), "reasamblăr");});
test("reasamblînd -> reasamblînd", function() {deepEqual( Stem("reasamblînd"), "reasamblînd");});
test("reaua -> reau", function() {deepEqual( Stem("reaua"), "reau");});
test("reazem -> reaz", function() {deepEqual( Stem("reazem"), "reaz");});
test("reba -> reb", function() {deepEqual( Stem("reba"), "reb");});
test("rebarbativ -> rebarb", function() {deepEqual( Stem("rebarbativ"), "rebarb");});
test("rebătut -> rebăt", function() {deepEqual( Stem("rebătut"), "rebăt");});
test("rebegiţi -> rebeg", function() {deepEqual( Stem("rebegiţi"), "rebeg");});
test("rebours -> rebours", function() {deepEqual( Stem("rebours"), "rebours");});
test("rece -> rec", function() {deepEqual( Stem("rece"), "rec");});
test("recent -> recent", function() {deepEqual( Stem("recent"), "recent");});
test("recente -> recent", function() {deepEqual( Stem("recente"), "recent");});
test("recenzentul -> recenzent", function() {deepEqual( Stem("recenzentul"), "recenzent");});
test("recenzeze -> recenz", function() {deepEqual( Stem("recenzeze"), "recenz");});
test("recenzie -> recenz", function() {deepEqual( Stem("recenzie"), "recenz");});
test("recenzii -> recenz", function() {deepEqual( Stem("recenzii"), "recenz");});
test("recepta -> recept", function() {deepEqual( Stem("recepta"), "recept");});
test("receptare -> recept", function() {deepEqual( Stem("receptare"), "recept");});
test("receptat -> recept", function() {deepEqual( Stem("receptat"), "recept");});
test("receptată -> recept", function() {deepEqual( Stem("receptată"), "recept");});
test("receptaţi -> recept", function() {deepEqual( Stem("receptaţi"), "recept");});
test("receptăm -> recept", function() {deepEqual( Stem("receptăm"), "recept");});
test("receptării -> receptăr", function() {deepEqual( Stem("receptării"), "receptăr");});
test("receptează -> recept", function() {deepEqual( Stem("receptează"), "recept");});
test("recepteze -> recept", function() {deepEqual( Stem("recepteze"), "recept");});
test("receptivă -> recept", function() {deepEqual( Stem("receptivă"), "recept");});
test("receptivi -> recept", function() {deepEqual( Stem("receptivi"), "recept");});
test("receptor -> receptor", function() {deepEqual( Stem("receptor"), "receptor");});
test("receptori -> receptor", function() {deepEqual( Stem("receptori"), "receptor");});
test("receptorul -> receptor", function() {deepEqual( Stem("receptorul"), "receptor");});
test("recepţia -> recepţ", function() {deepEqual( Stem("recepţia"), "recepţ");});
test("recepţie -> recepţ", function() {deepEqual( Stem("recepţie"), "recepţ");});
test("recepţii -> recepţ", function() {deepEqual( Stem("recepţii"), "recepţ");});
test("recepţiona -> recepţion", function() {deepEqual( Stem("recepţiona"), "recepţion");});
test("recepţionarea -> recepţion", function() {deepEqual( Stem("recepţionarea"), "recepţion");});
test("recepţionat -> recepţion", function() {deepEqual( Stem("recepţionat"), "recepţion");});
test("recepţionată -> recepţion", function() {deepEqual( Stem("recepţionată"), "recepţion");});
test("recepţionează -> recepţion", function() {deepEqual( Stem("recepţionează"), "recepţion");});
test("recepţioneze -> recepţion", function() {deepEqual( Stem("recepţioneze"), "recepţion");});
test("rechini -> rechin", function() {deepEqual( Stem("rechini"), "rechin");});
test("rechizit -> rechiz", function() {deepEqual( Stem("rechizit"), "rechiz");});
test("rechizitoriu -> rechizitoriu", function() {deepEqual( Stem("rechizitoriu"), "rechizitoriu");});
test("rechiziţie -> rechiziţ", function() {deepEqual( Stem("rechiziţie"), "rechiziţ");});
test("rechiziţionate -> rechiziţion", function() {deepEqual( Stem("rechiziţionate"), "rechiziţion");});
test("rechiziţionând -> rechiziţion", function() {deepEqual( Stem("rechiziţionând"), "rechiziţion");});
test("reci -> rec", function() {deepEqual( Stem("reci"), "rec");});
test("reciclat -> recicl", function() {deepEqual( Stem("reciclat"), "recicl");});
test("reciclaţi -> recicl", function() {deepEqual( Stem("reciclaţi"), "recicl");});
test("recipient -> recipient", function() {deepEqual( Stem("recipient"), "recipient");});
test("recipienţi -> recipienţ", function() {deepEqual( Stem("recipienţi"), "recipienţ");});
test("reciproc -> reciproc", function() {deepEqual( Stem("reciproc"), "reciproc");});
test("reciprocă -> reciproc", function() {deepEqual( Stem("reciprocă"), "reciproc");});
test("reciproce -> reciproc", function() {deepEqual( Stem("reciproce"), "reciproc");});
test("reciprocitate -> reciproc", function() {deepEqual( Stem("reciprocitate"), "reciproc");});
test("reciprocitatea -> reciproc", function() {deepEqual( Stem("reciprocitatea"), "reciproc");});
test("recital -> recital", function() {deepEqual( Stem("recital"), "recital");});
test("recitară -> recit", function() {deepEqual( Stem("recitară"), "recit");});
test("recite -> recit", function() {deepEqual( Stem("recite"), "recit");});
test("recitesc -> recit", function() {deepEqual( Stem("recitesc"), "recit");});
test("reciteşte -> recit", function() {deepEqual( Stem("reciteşte"), "recit");});
test("reciteşti -> recit", function() {deepEqual( Stem("reciteşti"), "recit");});
test("recitit -> recit", function() {deepEqual( Stem("recitit"), "recit");});
test("recitînd -> recitînd", function() {deepEqual( Stem("recitînd"), "recitînd");});
test("reclama -> reclam", function() {deepEqual( Stem("reclama"), "reclam");});
test("reclamaţie -> reclam", function() {deepEqual( Stem("reclamaţie"), "reclam");});
test("reclamaţii -> reclam", function() {deepEqual( Stem("reclamaţii"), "reclam");});
test("reclamă -> reclam", function() {deepEqual( Stem("reclamă"), "reclam");});
test("reclame -> reclam", function() {deepEqual( Stem("reclame"), "reclam");});
test("reclamînd -> reclamînd", function() {deepEqual( Stem("reclamînd"), "reclamînd");});
test("reclădească -> reclăd", function() {deepEqual( Stem("reclădească"), "reclăd");});
test("reclădite -> reclăd", function() {deepEqual( Stem("reclădite"), "reclăd");});
test("recluziunea -> recluziun", function() {deepEqual( Stem("recluziunea"), "recluziun");});
test("recognoscibilă -> recognosc", function() {deepEqual( Stem("recognoscibilă"), "recognosc");});
test("recolta -> recolt", function() {deepEqual( Stem("recolta"), "recolt");});
test("recoltat -> recolt", function() {deepEqual( Stem("recoltat"), "recolt");});
test("recoltaţi -> recolt", function() {deepEqual( Stem("recoltaţi"), "recolt");});
test("recoltau -> recolt", function() {deepEqual( Stem("recoltau"), "recolt");});
test("recoltă -> recolt", function() {deepEqual( Stem("recoltă"), "recolt");});
test("recolte -> recolt", function() {deepEqual( Stem("recolte"), "recolt");});
test("recomandabil -> recomand", function() {deepEqual( Stem("recomandabil"), "recomand");});
test("recomandabilă -> recomand", function() {deepEqual( Stem("recomandabilă"), "recomand");});
test("recomandare -> recomand", function() {deepEqual( Stem("recomandare"), "recomand");});
test("recomandat -> recomand", function() {deepEqual( Stem("recomandat"), "recomand");});
test("recomandă -> recomand", function() {deepEqual( Stem("recomandă"), "recomand");});
test("recomandăm -> recomand", function() {deepEqual( Stem("recomandăm"), "recomand");});
test("recomandări -> recomandăr", function() {deepEqual( Stem("recomandări"), "recomandăr");});
test("reconfortant -> reconfort", function() {deepEqual( Stem("reconfortant"), "reconfort");});
test("reconfortantă -> reconfort", function() {deepEqual( Stem("reconfortantă"), "reconfort");});
test("reconstitui -> reconstit", function() {deepEqual( Stem("reconstitui"), "reconstit");});
test("reconstituim -> reconstitu", function() {deepEqual( Stem("reconstituim"), "reconstitu");});
test("reconstituiţi -> reconstitu", function() {deepEqual( Stem("reconstituiţi"), "reconstitu");});
test("reconstrui -> reconstr", function() {deepEqual( Stem("reconstrui"), "reconstr");});
test("reconstruiesc -> reconstrui", function() {deepEqual( Stem("reconstruiesc"), "reconstrui");});
test("reconstruieşti -> reconstrui", function() {deepEqual( Stem("reconstruieşti"), "reconstrui");});
test("reconstruim -> reconstru", function() {deepEqual( Stem("reconstruim"), "reconstru");});
test("reconstruirea -> reconstru", function() {deepEqual( Stem("reconstruirea"), "reconstru");});
test("rectangulaţie -> rectangul", function() {deepEqual( Stem("rectangulaţie"), "rectangul");});
test("recucerit -> recucer", function() {deepEqual( Stem("recucerit"), "recucer");});
test("recunoască -> recunoasc", function() {deepEqual( Stem("recunoască"), "recunoasc");});
test("recunoaşte -> recunoaşt", function() {deepEqual( Stem("recunoaşte"), "recunoaşt");});
test("recunoaştem -> recunoaşt", function() {deepEqual( Stem("recunoaştem"), "recunoaşt");});
test("recunoaştere -> recunoaşt", function() {deepEqual( Stem("recunoaştere"), "recunoaşt");});
test("recunoaşterea -> recunoaşt", function() {deepEqual( Stem("recunoaşterea"), "recunoaşt");});
test("recunoaşterilor -> recunoaşter", function() {deepEqual( Stem("recunoaşterilor"), "recunoaşter");});
test("recunosc -> recunosc", function() {deepEqual( Stem("recunosc"), "recunosc");});
test("recunoscător -> recunosc", function() {deepEqual( Stem("recunoscător"), "recunosc");});
test("recunoscut -> recunosc", function() {deepEqual( Stem("recunoscut"), "recunosc");});
test("recunoscute -> recunosc", function() {deepEqual( Stem("recunoscute"), "recunosc");});
test("recunoşteam -> recunoşt", function() {deepEqual( Stem("recunoşteam"), "recunoşt");});
test("recunoşti -> recunoşt", function() {deepEqual( Stem("recunoşti"), "recunoşt");});
test("recunoştinţă -> recunoştinţ", function() {deepEqual( Stem("recunoştinţă"), "recunoştinţ");});
test("recurgă -> recurg", function() {deepEqual( Stem("recurgă"), "recurg");});
test("recurge -> recurg", function() {deepEqual( Stem("recurge"), "recurg");});
test("redactat -> redact", function() {deepEqual( Stem("redactat"), "redact");});
test("redactor -> redactor", function() {deepEqual( Stem("redactor"), "redactor");});
test("redau -> redau", function() {deepEqual( Stem("redau"), "redau");});
test("redea -> red", function() {deepEqual( Stem("redea"), "red");});
test("redelea -> redel", function() {deepEqual( Stem("redelea"), "redel");});
test("redeşteaptă -> redeşteapt", function() {deepEqual( Stem("redeşteaptă"), "redeşteapt");});
test("redevenit -> redeven", function() {deepEqual( Stem("redevenit"), "redeven");});
test("reducă -> reduc", function() {deepEqual( Stem("reducă"), "reduc");});
test("reduce -> reduc", function() {deepEqual( Stem("reduce"), "reduc");});
test("reducem -> reduc", function() {deepEqual( Stem("reducem"), "reduc");});
test("reducere -> reduc", function() {deepEqual( Stem("reducere"), "reduc");});
test("reduceri -> reducer", function() {deepEqual( Stem("reduceri"), "reducer");});
test("reducţiune -> reduct", function() {deepEqual( Stem("reducţiune"), "reduct");});
test("reducţiunea -> reduct", function() {deepEqual( Stem("reducţiunea"), "reduct");});
test("redus -> redus", function() {deepEqual( Stem("redus"), "redus");});
test("redusă -> redus", function() {deepEqual( Stem("redusă"), "redus");});
test("reduse -> redus", function() {deepEqual( Stem("reduse"), "redus");});
test("reduşi -> reduş", function() {deepEqual( Stem("reduşi"), "reduş");});
test("reedita -> reedit", function() {deepEqual( Stem("reedita"), "reedit");});
test("reeditat -> reedit", function() {deepEqual( Stem("reeditat"), "reedit");});
test("refac -> refac", function() {deepEqual( Stem("refac"), "refac");});
test("refacă -> refac", function() {deepEqual( Stem("refacă"), "refac");});
test("reface -> refac", function() {deepEqual( Stem("reface"), "refac");});
test("refăcea -> refăc", function() {deepEqual( Stem("refăcea"), "refăc");});
test("refăceau -> refăc", function() {deepEqual( Stem("refăceau"), "refăc");});
test("refăcută -> refăc", function() {deepEqual( Stem("refăcută"), "refăc");});
test("refăcute -> refăc", function() {deepEqual( Stem("refăcute"), "refăc");});
test("referat -> refer", function() {deepEqual( Stem("referat"), "refer");});
test("referă -> refer", function() {deepEqual( Stem("referă"), "refer");});
test("reflectează -> reflect", function() {deepEqual( Stem("reflectează"), "reflect");});
test("reflecteze -> reflect", function() {deepEqual( Stem("reflecteze"), "reflect");});
test("reflecţia -> reflecţ", function() {deepEqual( Stem("reflecţia"), "reflecţ");});
test("reflecţie -> reflecţ", function() {deepEqual( Stem("reflecţie"), "reflecţ");});
test("reflecţiei -> reflecţ", function() {deepEqual( Stem("reflecţiei"), "reflecţ");});
test("reflecţiune -> reflect", function() {deepEqual( Stem("reflecţiune"), "reflect");});
test("reflex -> reflex", function() {deepEqual( Stem("reflex"), "reflex");});
test("reflexe -> reflex", function() {deepEqual( Stem("reflexe"), "reflex");});
test("reflexivă -> reflex", function() {deepEqual( Stem("reflexivă"), "reflex");});
test("reflexul -> reflex", function() {deepEqual( Stem("reflexul"), "reflex");});
test("refugiu -> refugiu", function() {deepEqual( Stem("refugiu"), "refugiu");});
test("refulate -> reful", function() {deepEqual( Stem("refulate"), "reful");});
test("refuza -> refuz", function() {deepEqual( Stem("refuza"), "refuz");});
test("refuzasem -> refuz", function() {deepEqual( Stem("refuzasem"), "refuz");});
test("refuzat -> refuz", function() {deepEqual( Stem("refuzat"), "refuz");});
test("refuzate -> refuz", function() {deepEqual( Stem("refuzate"), "refuz");});
test("refuzând -> refuz", function() {deepEqual( Stem("refuzând"), "refuz");});
test("refuză -> refuz", function() {deepEqual( Stem("refuză"), "refuz");});
test("refuzăm -> refuz", function() {deepEqual( Stem("refuzăm"), "refuz");});
test("refuze -> refuz", function() {deepEqual( Stem("refuze"), "refuz");});
test("refuzi -> refuz", function() {deepEqual( Stem("refuzi"), "refuz");});
test("refuzul -> refuz", function() {deepEqual( Stem("refuzul"), "refuz");});
test("regat -> regat", function() {deepEqual( Stem("regat"), "regat");});
test("regăsesc -> regăs", function() {deepEqual( Stem("regăsesc"), "regăs");});
test("regăseşte -> regăs", function() {deepEqual( Stem("regăseşte"), "regăs");});
test("regăsirăm -> regăs", function() {deepEqual( Stem("regăsirăm"), "regăs");});
test("regăsiri -> regăsir", function() {deepEqual( Stem("regăsiri"), "regăsir");});
test("regăsise -> regăs", function() {deepEqual( Stem("regăsise"), "regăs");});
test("rege -> reg", function() {deepEqual( Stem("rege"), "reg");});
test("regele -> reg", function() {deepEqual( Stem("regele"), "reg");});
test("regelui -> regel", function() {deepEqual( Stem("regelui"), "regel");});
test("regenerării -> regenerăr", function() {deepEqual( Stem("regenerării"), "regenerăr");});
test("regim -> reg", function() {deepEqual( Stem("regim"), "reg");});
test("regiment -> regiment", function() {deepEqual( Stem("regiment"), "regiment");});
test("regimentare -> regiment", function() {deepEqual( Stem("regimentare"), "regiment");});
test("regimente -> regiment", function() {deepEqual( Stem("regimente"), "regiment");});
test("regimentele -> regiment", function() {deepEqual( Stem("regimentele"), "regiment");});
test("regimentelor -> regiment", function() {deepEqual( Stem("regimentelor"), "regiment");});
test("regimentul -> regiment", function() {deepEqual( Stem("regimentul"), "regiment");});
test("regimentului -> regiment", function() {deepEqual( Stem("regimentului"), "regiment");});
test("regina -> regin", function() {deepEqual( Stem("regina"), "regin");});
test("reginei -> regine", function() {deepEqual( Stem("reginei"), "regine");});
test("registre -> registr", function() {deepEqual( Stem("registre"), "registr");});
test("regitur -> regitur", function() {deepEqual( Stem("regitur"), "regitur");});
test("regiunea -> regiun", function() {deepEqual( Stem("regiunea"), "regiun");});
test("regizor -> regizor", function() {deepEqual( Stem("regizor"), "regizor");});
test("reglementar -> reglementar", function() {deepEqual( Stem("reglementar"), "reglementar");});
test("reglementare -> reglement", function() {deepEqual( Stem("reglementare"), "reglement");});
test("regnier -> regnier", function() {deepEqual( Stem("regnier"), "regnier");});
test("regnurilor -> regnur", function() {deepEqual( Stem("regnurilor"), "regnur");});
test("regresiune -> regresiun", function() {deepEqual( Stem("regresiune"), "regresiun");});
test("regret -> regret", function() {deepEqual( Stem("regret"), "regret");});
test("regretabil -> regret", function() {deepEqual( Stem("regretabil"), "regret");});
test("regretat -> regret", function() {deepEqual( Stem("regretat"), "regret");});
test("regretă -> regret", function() {deepEqual( Stem("regretă"), "regret");});
test("regretăm -> regret", function() {deepEqual( Stem("regretăm"), "regret");});
test("regretul -> regret", function() {deepEqual( Stem("regretul"), "regret");});
test("regrupări -> regrupăr", function() {deepEqual( Stem("regrupări"), "regrupăr");});
test("regula -> regul", function() {deepEqual( Stem("regula"), "regul");});
test("regulament -> regulament", function() {deepEqual( Stem("regulament"), "regulament");});
test("regulamentele -> regulament", function() {deepEqual( Stem("regulamentele"), "regulament");});
test("regulamentelor -> regulament", function() {deepEqual( Stem("regulamentelor"), "regulament");});
test("regulamentul -> regulament", function() {deepEqual( Stem("regulamentul"), "regulament");});
test("regularea -> regul", function() {deepEqual( Stem("regularea"), "regul");});
test("regularitate -> regular", function() {deepEqual( Stem("regularitate"), "regular");});
test("regularitatea -> regular", function() {deepEqual( Stem("regularitatea"), "regular");});
test("regularităţi -> regular", function() {deepEqual( Stem("regularităţi"), "regular");});
test("regularităţii -> regular", function() {deepEqual( Stem("regularităţii"), "regular");});
test("regularităţile -> regular", function() {deepEqual( Stem("regularităţile"), "regular");});
test("regulat -> regul", function() {deepEqual( Stem("regulat"), "regul");});
test("regulată -> regul", function() {deepEqual( Stem("regulată"), "regul");});
test("regulate -> regul", function() {deepEqual( Stem("regulate"), "regul");});
test("regulativ -> regul", function() {deepEqual( Stem("regulativ"), "regul");});
test("regulativă -> regul", function() {deepEqual( Stem("regulativă"), "regul");});
test("regulative -> regul", function() {deepEqual( Stem("regulative"), "regul");});
test("regulaţi -> regul", function() {deepEqual( Stem("regulaţi"), "regul");});
test("regulă -> regul", function() {deepEqual( Stem("regulă"), "regul");});
test("regulele -> regul", function() {deepEqual( Stem("regulele"), "regul");});
test("reguli -> regul", function() {deepEqual( Stem("reguli"), "regul");});
test("regulile -> regul", function() {deepEqual( Stem("regulile"), "regul");});
test("reia -> rei", function() {deepEqual( Stem("reia"), "rei");});
test("reiau -> reiau", function() {deepEqual( Stem("reiau"), "reiau");});
test("reid -> reid", function() {deepEqual( Stem("reid"), "reid");});
test("reiei -> reie", function() {deepEqual( Stem("reiei"), "reie");});
test("reieşea -> reieş", function() {deepEqual( Stem("reieşea"), "reieş");});
test("reintegrată -> reintegr", function() {deepEqual( Stem("reintegrată"), "reintegr");});
test("reîncep -> reîncep", function() {deepEqual( Stem("reîncep"), "reîncep");});
test("reîncepe -> reîncep", function() {deepEqual( Stem("reîncepe"), "reîncep");});
test("reîncepea -> reîncep", function() {deepEqual( Stem("reîncepea"), "reîncep");});
test("reînfiinţeze -> reînfiinţ", function() {deepEqual( Stem("reînfiinţeze"), "reînfiinţ");});
test("reînvia -> reînv", function() {deepEqual( Stem("reînvia"), "reînv");});
test("reînviere -> reînvier", function() {deepEqual( Stem("reînviere"), "reînvier");});
test("reînvierea -> reînvier", function() {deepEqual( Stem("reînvierea"), "reînvier");});
test("reînvieri -> reînvier", function() {deepEqual( Stem("reînvieri"), "reînvier");});
test("relansam -> relans", function() {deepEqual( Stem("relansam"), "relans");});
test("relatau -> relat", function() {deepEqual( Stem("relatau"), "relat");});
test("relativ -> relat", function() {deepEqual( Stem("relativ"), "relat");});
test("relativă -> relat", function() {deepEqual( Stem("relativă"), "relat");});
test("relative -> relat", function() {deepEqual( Stem("relative"), "relat");});
test("relativităţii -> relat", function() {deepEqual( Stem("relativităţii"), "relat");});
test("relativizată -> relativiz", function() {deepEqual( Stem("relativizată"), "relativiz");});
test("relaţii -> rel", function() {deepEqual( Stem("relaţii"), "rel");});
test("relaţiile -> rel", function() {deepEqual( Stem("relaţiile"), "rel");});
test("relaţiunea -> relat", function() {deepEqual( Stem("relaţiunea"), "relat");});
test("relaţiunile -> relat", function() {deepEqual( Stem("relaţiunile"), "relat");});
test("relaxau -> relax", function() {deepEqual( Stem("relaxau"), "relax");});
test("relaxez -> relax", function() {deepEqual( Stem("relaxez"), "relax");});
test("rele -> rel", function() {deepEqual( Stem("rele"), "rel");});
test("relee -> rele", function() {deepEqual( Stem("relee"), "rele");});
test("releg -> releg", function() {deepEqual( Stem("releg"), "releg");});
test("relelor -> rel", function() {deepEqual( Stem("relelor"), "rel");});
test("relev -> relev", function() {deepEqual( Stem("relev"), "relev");});
test("releva -> relev", function() {deepEqual( Stem("releva"), "relev");});
test("relevabile -> relev", function() {deepEqual( Stem("relevabile"), "relev");});
test("relevant -> relev", function() {deepEqual( Stem("relevant"), "relev");});
test("relevantă -> relev", function() {deepEqual( Stem("relevantă"), "relev");});
test("relevanters -> relevanters", function() {deepEqual( Stem("relevanters"), "relevanters");});
test("relevanţa -> relevanţ", function() {deepEqual( Stem("relevanţa"), "relevanţ");});
test("relevanţă -> relevanţ", function() {deepEqual( Stem("relevanţă"), "relevanţ");});
test("relevarea -> relev", function() {deepEqual( Stem("relevarea"), "relev");});
test("relevat -> relev", function() {deepEqual( Stem("relevat"), "relev");});
test("relevăm -> relev", function() {deepEqual( Stem("relevăm"), "relev");});
test("releveze -> relev", function() {deepEqual( Stem("releveze"), "relev");});
test("relevînd -> relevînd", function() {deepEqual( Stem("relevînd"), "relevînd");});
test("relicvă -> relicv", function() {deepEqual( Stem("relicvă"), "relicv");});
test("relicve -> relicv", function() {deepEqual( Stem("relicve"), "relicv");});
test("relief -> relief", function() {deepEqual( Stem("relief"), "relief");});
test("reliefat -> relief", function() {deepEqual( Stem("reliefat"), "relief");});
test("reliefate -> relief", function() {deepEqual( Stem("reliefate"), "relief");});
test("reliefau -> relief", function() {deepEqual( Stem("reliefau"), "relief");});
test("religia -> relig", function() {deepEqual( Stem("religia"), "relig");});
test("religie -> relig", function() {deepEqual( Stem("religie"), "relig");});
test("religiilor -> relig", function() {deepEqual( Stem("religiilor"), "relig");});
test("religioasă -> relig", function() {deepEqual( Stem("religioasă"), "relig");});
test("religioase -> relig", function() {deepEqual( Stem("religioase"), "relig");});
test("religios -> relig", function() {deepEqual( Stem("religios"), "relig");});
test("religioşi -> relig", function() {deepEqual( Stem("religioşi"), "relig");});
test("religious -> religious", function() {deepEqual( Stem("religious"), "religious");});
test("religiozitatea -> religioz", function() {deepEqual( Stem("religiozitatea"), "religioz");});
test("relinia -> relin", function() {deepEqual( Stem("relinia"), "relin");});
test("relua -> relu", function() {deepEqual( Stem("relua"), "relu");});
test("reluam -> relu", function() {deepEqual( Stem("reluam"), "relu");});
test("reluasem -> relu", function() {deepEqual( Stem("reluasem"), "relu");});
test("reluat -> reluat", function() {deepEqual( Stem("reluat"), "reluat");});
test("reluată -> reluat", function() {deepEqual( Stem("reluată"), "reluat");});
test("reluând -> relu", function() {deepEqual( Stem("reluând"), "relu");});
test("reluăm -> relu", function() {deepEqual( Stem("reluăm"), "relu");});
test("remanieri -> remanier", function() {deepEqual( Stem("remanieri"), "remanier");});
test("remarcabilă -> remarc", function() {deepEqual( Stem("remarcabilă"), "remarc");});
test("remarcabile -> remarc", function() {deepEqual( Stem("remarcabile"), "remarc");});
test("remarcându -> remarc", function() {deepEqual( Stem("remarcându"), "remarc");});
test("remarcă -> remarc", function() {deepEqual( Stem("remarcă"), "remarc");});
test("rembrandt -> rembrandt", function() {deepEqual( Stem("rembrandt"), "rembrandt");});
test("remorcher -> remorcher", function() {deepEqual( Stem("remorcher"), "remorcher");});
test("remorţi -> remorţ", function() {deepEqual( Stem("remorţi"), "remorţ");});
test("remuşcare -> remuşc", function() {deepEqual( Stem("remuşcare"), "remuşc");});
test("remuşcării -> remuşcăr", function() {deepEqual( Stem("remuşcării"), "remuşcăr");});
test("remuşcările -> remuşcăr", function() {deepEqual( Stem("remuşcările"), "remuşcăr");});
test("renală -> renal", function() {deepEqual( Stem("renală"), "renal");});
test("renană -> renan", function() {deepEqual( Stem("renană"), "renan");});
test("renascentismului -> renascentist", function() {deepEqual( Stem("renascentismului"), "renascentist");});
test("renascentistă -> renascentist", function() {deepEqual( Stem("renascentistă"), "renascentist");});
test("renaştere -> renaşt", function() {deepEqual( Stem("renaştere"), "renaşt");});
test("renaşterii -> renaşter", function() {deepEqual( Stem("renaşterii"), "renaşter");});
test("rendez -> rend", function() {deepEqual( Stem("rendez"), "rend");});
test("renegat -> reneg", function() {deepEqual( Stem("renegat"), "reneg");});
test("renevoie -> renevoi", function() {deepEqual( Stem("renevoie"), "renevoi");});
test("renormal -> renormal", function() {deepEqual( Stem("renormal"), "renormal");});
test("renouvier -> renouvier", function() {deepEqual( Stem("renouvier"), "renouvier");});
test("renova -> renov", function() {deepEqual( Stem("renova"), "renov");});
test("renovată -> renov", function() {deepEqual( Stem("renovată"), "renov");});
test("renovatorul -> renov", function() {deepEqual( Stem("renovatorul"), "renov");});
test("renscentistă -> renscentist", function() {deepEqual( Stem("renscentistă"), "renscentist");});
test("rentabil -> rentabil", function() {deepEqual( Stem("rentabil"), "rentabil");});
test("rentabilă -> rentabil", function() {deepEqual( Stem("rentabilă"), "rentabil");});
test("rentabilitatea -> rentabil", function() {deepEqual( Stem("rentabilitatea"), "rentabil");});
test("rentabilizate -> rentabiliz", function() {deepEqual( Stem("rentabilizate"), "rentabiliz");});
test("rentabilizării -> rentabilizăr", function() {deepEqual( Stem("rentabilizării"), "rentabilizăr");});
test("rentă -> rent", function() {deepEqual( Stem("rentă"), "rent");});
test("rente -> rent", function() {deepEqual( Stem("rente"), "rent");});
test("rentează -> rent", function() {deepEqual( Stem("rentează"), "rent");});
test("rentele -> rent", function() {deepEqual( Stem("rentele"), "rent");});
test("rentieri -> rentier", function() {deepEqual( Stem("rentieri"), "rentier");});
test("rentierii -> rentier", function() {deepEqual( Stem("rentierii"), "rentier");});
test("rentierilor -> rentier", function() {deepEqual( Stem("rentierilor"), "rentier");});
test("rentierul -> rentier", function() {deepEqual( Stem("rentierul"), "rentier");});
test("rentierului -> rentier", function() {deepEqual( Stem("rentierului"), "rentier");});
test("renul -> ren", function() {deepEqual( Stem("renul"), "ren");});
test("renume -> renum", function() {deepEqual( Stem("renume"), "renum");});
test("renumit -> renum", function() {deepEqual( Stem("renumit"), "renum");});
test("renumită -> renum", function() {deepEqual( Stem("renumită"), "renum");});
test("renumitor -> renum", function() {deepEqual( Stem("renumitor"), "renum");});
test("renumiţi -> renum", function() {deepEqual( Stem("renumiţi"), "renum");});
test("renunţ -> renunţ", function() {deepEqual( Stem("renunţ"), "renunţ");});
test("renunţa -> renunţ", function() {deepEqual( Stem("renunţa"), "renunţ");});
test("renunţare -> renunţ", function() {deepEqual( Stem("renunţare"), "renunţ");});
test("renunţat -> renunţ", function() {deepEqual( Stem("renunţat"), "renunţ");});
test("renunţând -> renunţ", function() {deepEqual( Stem("renunţând"), "renunţ");});
test("renunţă -> renunţ", function() {deepEqual( Stem("renunţă"), "renunţ");});
test("renunţăm -> renunţ", function() {deepEqual( Stem("renunţăm"), "renunţ");});
test("renunţe -> renunţ", function() {deepEqual( Stem("renunţe"), "renunţ");});
test("repaos -> repaos", function() {deepEqual( Stem("repaos"), "repaos");});
test("repaosul -> repaos", function() {deepEqual( Stem("repaosul"), "repaos");});
test("repaosurilor -> repaosur", function() {deepEqual( Stem("repaosurilor"), "repaosur");});
test("reparată -> repar", function() {deepEqual( Stem("reparată"), "repar");});
test("repară -> repar", function() {deepEqual( Stem("repară"), "repar");});
test("repare -> repar", function() {deepEqual( Stem("repare"), "repar");});
test("repeadă -> repead", function() {deepEqual( Stem("repeadă"), "repead");});
test("reped -> reped", function() {deepEqual( Stem("reped"), "reped");});
test("repede -> reped", function() {deepEqual( Stem("repede"), "reped");});
test("reper -> reper", function() {deepEqual( Stem("reper"), "reper");});
test("repera -> reper", function() {deepEqual( Stem("repera"), "reper");});
test("reperarea -> reper", function() {deepEqual( Stem("reperarea"), "reper");});
test("repercusiuni -> repercusiun", function() {deepEqual( Stem("repercusiuni"), "repercusiun");});
test("repere -> reper", function() {deepEqual( Stem("repere"), "reper");});
test("reperează -> reper", function() {deepEqual( Stem("reperează"), "reper");});
test("repereze -> reper", function() {deepEqual( Stem("repereze"), "reper");});
test("repertoriu -> repertoriu", function() {deepEqual( Stem("repertoriu"), "repertoriu");});
test("repet -> repet", function() {deepEqual( Stem("repet"), "repet");});
test("repeta -> repet", function() {deepEqual( Stem("repeta"), "repet");});
test("repetam -> repet", function() {deepEqual( Stem("repetam"), "repet");});
test("repetarea -> repet", function() {deepEqual( Stem("repetarea"), "repet");});
test("repetat -> repet", function() {deepEqual( Stem("repetat"), "repet");});
test("repetată -> repet", function() {deepEqual( Stem("repetată"), "repet");});
test("repetate -> repet", function() {deepEqual( Stem("repetate"), "repet");});
test("repetă -> repet", function() {deepEqual( Stem("repetă"), "repet");});
test("repetăm -> repet", function() {deepEqual( Stem("repetăm"), "repet");});
test("repetări -> repetăr", function() {deepEqual( Stem("repetări"), "repetăr");});
test("repete -> repet", function() {deepEqual( Stem("repete"), "repet");});
test("repetent -> repetent", function() {deepEqual( Stem("repetent"), "repetent");});
test("repetenţi -> repetenţ", function() {deepEqual( Stem("repetenţi"), "repetenţ");});
test("repetitiv -> repet", function() {deepEqual( Stem("repetitiv"), "repet");});
test("repetitivă -> repet", function() {deepEqual( Stem("repetitivă"), "repet");});
test("repetivitatea -> repet", function() {deepEqual( Stem("repetivitatea"), "repet");});
test("repetînd -> repetînd", function() {deepEqual( Stem("repetînd"), "repetînd");});
test("repeţi -> rep", function() {deepEqual( Stem("repeţi"), "rep");});
test("repezeală -> repezeal", function() {deepEqual( Stem("repezeală"), "repezeal");});
test("repezi -> repez", function() {deepEqual( Stem("repezi"), "repez");});
test("repezim -> repez", function() {deepEqual( Stem("repezim"), "repez");});
test("repezindu -> repez", function() {deepEqual( Stem("repezindu"), "repez");});
test("repezirea -> repez", function() {deepEqual( Stem("repezirea"), "repez");});
test("repezit -> repez", function() {deepEqual( Stem("repezit"), "repez");});
test("repezite -> repez", function() {deepEqual( Stem("repezite"), "repez");});
test("replantări -> replantăr", function() {deepEqual( Stem("replantări"), "replantăr");});
test("repleca -> replec", function() {deepEqual( Stem("repleca"), "replec");});
test("replica -> replic", function() {deepEqual( Stem("replica"), "replic");});
test("replicarea -> replic", function() {deepEqual( Stem("replicarea"), "replic");});
test("replicat -> replic", function() {deepEqual( Stem("replicat"), "replic");});
test("replică -> replic", function() {deepEqual( Stem("replică"), "replic");});
test("replicelor -> replic", function() {deepEqual( Stem("replicelor"), "replic");});
test("replicile -> replic", function() {deepEqual( Stem("replicile"), "replic");});
test("reportajul -> reportaj", function() {deepEqual( Stem("reportajul"), "reportaj");});
test("represalii -> represal", function() {deepEqual( Stem("represalii"), "represal");});
test("represiunea -> represiun", function() {deepEqual( Stem("represiunea"), "represiun");});
test("represiunile -> represiun", function() {deepEqual( Stem("represiunile"), "represiun");});
test("reprezenta -> reprezent", function() {deepEqual( Stem("reprezenta"), "reprezent");});
test("reprezentantul -> reprezent", function() {deepEqual( Stem("reprezentantul"), "reprezent");});
test("reprezentantului -> reprezent", function() {deepEqual( Stem("reprezentantului"), "reprezent");});
test("reprezentanţii -> reprezentanţ", function() {deepEqual( Stem("reprezentanţii"), "reprezentanţ");});
test("reprezentare -> reprezent", function() {deepEqual( Stem("reprezentare"), "reprezent");});
test("reprezentarea -> reprezent", function() {deepEqual( Stem("reprezentarea"), "reprezent");});
test("reprezentat -> reprezent", function() {deepEqual( Stem("reprezentat"), "reprezent");});
test("reprezentată -> reprezent", function() {deepEqual( Stem("reprezentată"), "reprezent");});
test("reprezentate -> reprezent", function() {deepEqual( Stem("reprezentate"), "reprezent");});
test("reprezentativ -> reprezent", function() {deepEqual( Stem("reprezentativ"), "reprezent");});
test("reprezentativă -> reprezent", function() {deepEqual( Stem("reprezentativă"), "reprezent");});
test("reprezentativi -> reprezent", function() {deepEqual( Stem("reprezentativi"), "reprezent");});
test("reprezentativitate -> reprezent", function() {deepEqual( Stem("reprezentativitate"), "reprezent");});
test("reprezentaţie -> reprezent", function() {deepEqual( Stem("reprezentaţie"), "reprezent");});
test("reprezentând -> reprezent", function() {deepEqual( Stem("reprezentând"), "reprezent");});
test("reprezentări -> reprezentăr", function() {deepEqual( Stem("reprezentări"), "reprezentăr");});
test("reprezentării -> reprezentăr", function() {deepEqual( Stem("reprezentării"), "reprezentăr");});
test("reprezentările -> reprezentăr", function() {deepEqual( Stem("reprezentările"), "reprezentăr");});
test("reprezentărilor -> reprezentăr", function() {deepEqual( Stem("reprezentărilor"), "reprezentăr");});
test("reprezint -> reprezint", function() {deepEqual( Stem("reprezint"), "reprezint");});
test("reprezintă -> reprezint", function() {deepEqual( Stem("reprezintă"), "reprezint");});
test("reprezinte -> reprezint", function() {deepEqual( Stem("reprezinte"), "reprezint");});
test("reprimarea -> reprim", function() {deepEqual( Stem("reprimarea"), "reprim");});
test("reprimate -> reprim", function() {deepEqual( Stem("reprimate"), "reprim");});
test("reprimăm -> reprim", function() {deepEqual( Stem("reprimăm"), "reprim");});
test("reprime -> reprim", function() {deepEqual( Stem("reprime"), "reprim");});
test("reprimea -> reprim", function() {deepEqual( Stem("reprimea"), "reprim");});
test("reprize -> repriz", function() {deepEqual( Stem("reprize"), "repriz");});
test("reprizei -> reprize", function() {deepEqual( Stem("reprizei"), "reprize");});
test("reprobabilă -> reprob", function() {deepEqual( Stem("reprobabilă"), "reprob");});
test("reprobarea -> reprob", function() {deepEqual( Stem("reprobarea"), "reprob");});
test("reproduc -> reproduc", function() {deepEqual( Stem("reproduc"), "reproduc");});
test("reproduce -> reproduc", function() {deepEqual( Stem("reproduce"), "reproduc");});
test("reproducem -> reproduc", function() {deepEqual( Stem("reproducem"), "reproduc");});
test("reproducere -> reproduc", function() {deepEqual( Stem("reproducere"), "reproduc");});
test("reproducerea -> reproduc", function() {deepEqual( Stem("reproducerea"), "reproduc");});
test("reproduceri -> reproducer", function() {deepEqual( Stem("reproduceri"), "reproducer");});
test("reproducerii -> reproducer", function() {deepEqual( Stem("reproducerii"), "reproducer");});
test("reproducerile -> reproducer", function() {deepEqual( Stem("reproducerile"), "reproducer");});
test("reproducţie -> reproducţ", function() {deepEqual( Stem("reproducţie"), "reproducţ");});
test("reprodus -> reprodus", function() {deepEqual( Stem("reprodus"), "reprodus");});
test("reprogramat -> reprogram", function() {deepEqual( Stem("reprogramat"), "reprogram");});
test("reproş -> reproş", function() {deepEqual( Stem("reproş"), "reproş");});
test("reproşa -> reproş", function() {deepEqual( Stem("reproşa"), "reproş");});
test("reproşam -> reproş", function() {deepEqual( Stem("reproşam"), "reproş");});
test("reproşat -> reproş", function() {deepEqual( Stem("reproşat"), "reproş");});
test("reproşează -> reproş", function() {deepEqual( Stem("reproşează"), "reproş");});
test("reproşez -> reproş", function() {deepEqual( Stem("reproşez"), "reproş");});
test("reproşuri -> reproşur", function() {deepEqual( Stem("reproşuri"), "reproşur");});
test("republica -> republ", function() {deepEqual( Stem("republica"), "republ");});
test("republican -> republican", function() {deepEqual( Stem("republican"), "republican");});
test("republicană -> republican", function() {deepEqual( Stem("republicană"), "republican");});
test("republică -> republ", function() {deepEqual( Stem("republică"), "republ");});
test("republicii -> republ", function() {deepEqual( Stem("republicii"), "republ");});
test("repugna -> repugn", function() {deepEqual( Stem("repugna"), "repugn");});
test("reputat -> reput", function() {deepEqual( Stem("reputat"), "reput");});
test("reputate -> reput", function() {deepEqual( Stem("reputate"), "reput");});
test("reputaţi -> reput", function() {deepEqual( Stem("reputaţi"), "reput");});
test("reputaţia -> reput", function() {deepEqual( Stem("reputaţia"), "reput");});
test("reputaţie -> reput", function() {deepEqual( Stem("reputaţie"), "reput");});
test("resemnare -> resemn", function() {deepEqual( Stem("resemnare"), "resemn");});
test("resemnat -> resemn", function() {deepEqual( Stem("resemnat"), "resemn");});
test("resemnate -> resemn", function() {deepEqual( Stem("resemnate"), "resemn");});
test("resentiment -> resentiment", function() {deepEqual( Stem("resentiment"), "resentiment");});
test("resfirate -> resfir", function() {deepEqual( Stem("resfirate"), "resfir");});
test("resignare -> resign", function() {deepEqual( Stem("resignare"), "resign");});
test("resimte -> resimt", function() {deepEqual( Stem("resimte"), "resimt");});
test("resort -> resort", function() {deepEqual( Stem("resort"), "resort");});
test("resortul -> resort", function() {deepEqual( Stem("resortul"), "resort");});
test("resorturile -> resortur", function() {deepEqual( Stem("resorturile"), "resortur");});
test("respect -> respect", function() {deepEqual( Stem("respect"), "respect");});
test("respecta -> respect", function() {deepEqual( Stem("respecta"), "respect");});
test("respectabil -> respect", function() {deepEqual( Stem("respectabil"), "respect");});
test("respectabilă -> respect", function() {deepEqual( Stem("respectabilă"), "respect");});
test("respectat -> respect", function() {deepEqual( Stem("respectat"), "respect");});
test("respectate -> respect", function() {deepEqual( Stem("respectate"), "respect");});
test("respectând -> respect", function() {deepEqual( Stem("respectând"), "respect");});
test("respectându -> respect", function() {deepEqual( Stem("respectându"), "respect");});
test("respectiv -> respect", function() {deepEqual( Stem("respectiv"), "respect");});
test("respectivă -> respect", function() {deepEqual( Stem("respectivă"), "respect");});
test("respectivele -> respect", function() {deepEqual( Stem("respectivele"), "respect");});
test("respectivul -> respect", function() {deepEqual( Stem("respectivul"), "respect");});
test("respectul -> respect", function() {deepEqual( Stem("respectul"), "respect");});
test("respectuos -> respectu", function() {deepEqual( Stem("respectuos"), "respectu");});
test("respecţi -> respecţ", function() {deepEqual( Stem("respecţi"), "respecţ");});
test("resping -> resping", function() {deepEqual( Stem("resping"), "resping");});
test("respingând -> resping", function() {deepEqual( Stem("respingând"), "resping");});
test("respingătoare -> resping", function() {deepEqual( Stem("respingătoare"), "resping");});
test("respins -> respins", function() {deepEqual( Stem("respins"), "respins");});
test("respira -> respir", function() {deepEqual( Stem("respira"), "respir");});
test("respiraţia -> respir", function() {deepEqual( Stem("respiraţia"), "respir");});
test("respiraţie -> respir", function() {deepEqual( Stem("respiraţie"), "respir");});
test("respirăm -> resp", function() {deepEqual( Stem("respirăm"), "resp");});
test("respire -> resp", function() {deepEqual( Stem("respire"), "resp");});
test("responsabilă -> respons", function() {deepEqual( Stem("responsabilă"), "respons");});
test("rest -> rest", function() {deepEqual( Stem("rest"), "rest");});
test("restabilesc -> restabil", function() {deepEqual( Stem("restabilesc"), "restabil");});
test("restaurant -> restaur", function() {deepEqual( Stem("restaurant"), "restaur");});
test("restaurante -> restaur", function() {deepEqual( Stem("restaurante"), "restaur");});
test("restaurantele -> restaur", function() {deepEqual( Stem("restaurantele"), "restaur");});
test("restaurantelor -> restaur", function() {deepEqual( Stem("restaurantelor"), "restaur");});
test("restaurantul -> restaur", function() {deepEqual( Stem("restaurantul"), "restaur");});
test("restaurarea -> restaur", function() {deepEqual( Stem("restaurarea"), "restaur");});
test("restituie -> restitui", function() {deepEqual( Stem("restituie"), "restitui");});
test("restrânge -> restrâng", function() {deepEqual( Stem("restrânge"), "restrâng");});
test("restul -> rest", function() {deepEqual( Stem("restul"), "rest");});
test("restului -> rest", function() {deepEqual( Stem("restului"), "rest");});
test("resturi -> restur", function() {deepEqual( Stem("resturi"), "restur");});
test("resturile -> restur", function() {deepEqual( Stem("resturile"), "restur");});
test("reşedinţa -> reşedinţ", function() {deepEqual( Stem("reşedinţa"), "reşedinţ");});
test("retează -> reteaz", function() {deepEqual( Stem("retează"), "reteaz");});
test("retezat -> retez", function() {deepEqual( Stem("retezat"), "retez");});
test("retezate -> retez", function() {deepEqual( Stem("retezate"), "retez");});
test("reteze -> retez", function() {deepEqual( Stem("reteze"), "retez");});
test("reticenţe -> reticenţ", function() {deepEqual( Stem("reticenţe"), "reticenţ");});
test("retoric -> retor", function() {deepEqual( Stem("retoric"), "retor");});
test("retorică -> retor", function() {deepEqual( Stem("retorică"), "retor");});
test("retractez -> retract", function() {deepEqual( Stem("retractez"), "retract");});
test("retrag -> retrag", function() {deepEqual( Stem("retrag"), "retrag");});
test("retrage -> retrag", function() {deepEqual( Stem("retrage"), "retrag");});
test("retragem -> retrag", function() {deepEqual( Stem("retragem"), "retrag");});
test("retragere -> retrag", function() {deepEqual( Stem("retragere"), "retrag");});
test("retragerea -> retrag", function() {deepEqual( Stem("retragerea"), "retrag");});
test("retrageri -> retrager", function() {deepEqual( Stem("retrageri"), "retrager");});
test("retragerii -> retrager", function() {deepEqual( Stem("retragerii"), "retrager");});
test("retragi -> retrag", function() {deepEqual( Stem("retragi"), "retrag");});
test("retransform -> retransform", function() {deepEqual( Stem("retransform"), "retransform");});
test("retranşantă -> retranş", function() {deepEqual( Stem("retranşantă"), "retranş");});
test("retras -> retras", function() {deepEqual( Stem("retras"), "retras");});
test("retrasă -> retras", function() {deepEqual( Stem("retrasă"), "retras");});
test("retrase -> retr", function() {deepEqual( Stem("retrase"), "retr");});
test("retroactivă -> retroact", function() {deepEqual( Stem("retroactivă"), "retroact");});
test("retten -> retten", function() {deepEqual( Stem("retten"), "retten");});
test("reţea -> reţ", function() {deepEqual( Stem("reţea"), "reţ");});
test("reţele -> reţ", function() {deepEqual( Stem("reţele"), "reţ");});
test("reţete -> reţet", function() {deepEqual( Stem("reţete"), "reţet");});
test("reţetelor -> reţet", function() {deepEqual( Stem("reţetelor"), "reţet");});
test("reţie -> reţ", function() {deepEqual( Stem("reţie"), "reţ");});
test("reţin -> reţin", function() {deepEqual( Stem("reţin"), "reţin");});
test("reţinându -> reţin", function() {deepEqual( Stem("reţinându"), "reţin");});
test("reţine -> reţin", function() {deepEqual( Stem("reţine"), "reţin");});
test("reţineţi -> reţin", function() {deepEqual( Stem("reţineţi"), "reţin");});
test("reţinut -> reţin", function() {deepEqual( Stem("reţinut"), "reţin");});
test("reţinute -> reţin", function() {deepEqual( Stem("reţinute"), "reţin");});
test("reumatic -> reumat", function() {deepEqual( Stem("reumatic"), "reumat");});
test("reuşeşte -> reuş", function() {deepEqual( Stem("reuşeşte"), "reuş");});
test("reuşit -> reuşit", function() {deepEqual( Stem("reuşit"), "reuşit");});
test("revarsă -> revars", function() {deepEqual( Stem("revarsă"), "revars");});
test("revărsa -> revărs", function() {deepEqual( Stem("revărsa"), "revărs");});
test("revărsat -> revărs", function() {deepEqual( Stem("revărsat"), "revărs");});
test("revărsată -> revărs", function() {deepEqual( Stem("revărsată"), "revărs");});
test("revedea -> reved", function() {deepEqual( Stem("revedea"), "reved");});
test("revedem -> reved", function() {deepEqual( Stem("revedem"), "reved");});
test("revederea -> reved", function() {deepEqual( Stem("revederea"), "reved");});
test("revederii -> reveder", function() {deepEqual( Stem("revederii"), "reveder");});
test("revelator -> revel", function() {deepEqual( Stem("revelator"), "revel");});
test("reveneau -> reven", function() {deepEqual( Stem("reveneau"), "reven");});
test("reveni -> reven", function() {deepEqual( Stem("reveni"), "reven");});
test("revenim -> reven", function() {deepEqual( Stem("revenim"), "reven");});
test("revenire -> reven", function() {deepEqual( Stem("revenire"), "reven");});
test("reveniri -> revenir", function() {deepEqual( Stem("reveniri"), "revenir");});
test("revenirii -> revenir", function() {deepEqual( Stem("revenirii"), "revenir");});
test("revenit -> reven", function() {deepEqual( Stem("revenit"), "reven");});
test("revenită -> reven", function() {deepEqual( Stem("revenită"), "reven");});
test("reveniţi -> reven", function() {deepEqual( Stem("reveniţi"), "reven");});
test("reverberaţii -> reverber", function() {deepEqual( Stem("reverberaţii"), "reverber");});
test("reverii -> rever", function() {deepEqual( Stem("reverii"), "rever");});
test("reverul -> rever", function() {deepEqual( Stem("reverul"), "rever");});
test("revie -> rev", function() {deepEqual( Stem("revie"), "rev");});
test("revin -> revin", function() {deepEqual( Stem("revin"), "revin");});
test("revină -> revin", function() {deepEqual( Stem("revină"), "revin");});
test("revine -> revin", function() {deepEqual( Stem("revine"), "revin");});
test("revistă -> revist", function() {deepEqual( Stem("revistă"), "revist");});
test("revistele -> revist", function() {deepEqual( Stem("revistele"), "revist");});
test("reviu -> reviu", function() {deepEqual( Stem("reviu"), "reviu");});
test("revoltat -> revolt", function() {deepEqual( Stem("revoltat"), "revolt");});
test("revoltau -> revolt", function() {deepEqual( Stem("revoltau"), "revolt");});
test("revoltă -> revolt", function() {deepEqual( Stem("revoltă"), "revolt");});
test("revoltător -> revolt", function() {deepEqual( Stem("revoltător"), "revolt");});
test("revoluţia -> revoluţ", function() {deepEqual( Stem("revoluţia"), "revoluţ");});
test("revoluţie -> revoluţ", function() {deepEqual( Stem("revoluţie"), "revoluţ");});
test("revoluţiei -> revoluţ", function() {deepEqual( Stem("revoluţiei"), "revoluţ");});
test("revoluţiile -> revoluţ", function() {deepEqual( Stem("revoluţiile"), "revoluţ");});
test("revoluţionar -> revoluţionar", function() {deepEqual( Stem("revoluţionar"), "revoluţionar");});
test("revoluţionară -> revoluţion", function() {deepEqual( Stem("revoluţionară"), "revoluţion");});
test("revoluţionare -> revoluţion", function() {deepEqual( Stem("revoluţionare"), "revoluţion");});
test("revoluţionarii -> revoluţionar", function() {deepEqual( Stem("revoluţionarii"), "revoluţionar");});
test("revoluţionarilor -> revoluţionar", function() {deepEqual( Stem("revoluţionarilor"), "revoluţionar");});
test("revoluţioneze -> revoluţion", function() {deepEqual( Stem("revoluţioneze"), "revoluţion");});
test("revolver -> revolver", function() {deepEqual( Stem("revolver"), "revolver");});
test("revolverele -> revolv", function() {deepEqual( Stem("revolverele"), "revolv");});
test("revolverelor -> revolv", function() {deepEqual( Stem("revolverelor"), "revolv");});
test("revolverul -> revolver", function() {deepEqual( Stem("revolverul"), "revolver");});
test("revuistice -> revuist", function() {deepEqual( Stem("revuistice"), "revuist");});
test("rezema -> rezem", function() {deepEqual( Stem("rezema"), "rezem");});
test("rezemat -> rezem", function() {deepEqual( Stem("rezemat"), "rezem");});
test("rezemată -> rezem", function() {deepEqual( Stem("rezemată"), "rezem");});
test("rezemându -> rezem", function() {deepEqual( Stem("rezemându"), "rezem");});
test("rezerva -> rezerv", function() {deepEqual( Stem("rezerva"), "rezerv");});
test("rezervasem -> rezerv", function() {deepEqual( Stem("rezervasem"), "rezerv");});
test("rezervat -> rezerv", function() {deepEqual( Stem("rezervat"), "rezerv");});
test("rezervată -> rezerv", function() {deepEqual( Stem("rezervată"), "rezerv");});
test("rezervate -> rezerv", function() {deepEqual( Stem("rezervate"), "rezerv");});
test("rezervă -> rezerv", function() {deepEqual( Stem("rezervă"), "rezerv");});
test("rezerve -> rezerv", function() {deepEqual( Stem("rezerve"), "rezerv");});
test("rezervei -> rezerve", function() {deepEqual( Stem("rezervei"), "rezerve");});
test("rezervele -> rezerv", function() {deepEqual( Stem("rezervele"), "rezerv");});
test("rezervoarele -> rezervoar", function() {deepEqual( Stem("rezervoarele"), "rezervoar");});
test("rezilientă -> rezilient", function() {deepEqual( Stem("rezilientă"), "rezilient");});
test("rezilienţi -> rezilienţ", function() {deepEqual( Stem("rezilienţi"), "rezilienţ");});
test("rezista -> rezist", function() {deepEqual( Stem("rezista"), "rezist");});
test("rezistam -> rezist", function() {deepEqual( Stem("rezistam"), "rezist");});
test("rezistat -> rezist", function() {deepEqual( Stem("rezistat"), "rezist");});
test("rezistau -> rezist", function() {deepEqual( Stem("rezistau"), "rezist");});
test("rezistând -> rezist", function() {deepEqual( Stem("rezistând"), "rezist");});
test("rezistă -> rezist", function() {deepEqual( Stem("rezistă"), "rezist");});
test("reziste -> rezist", function() {deepEqual( Stem("reziste"), "rezist");});
test("rezistent -> rezistent", function() {deepEqual( Stem("rezistent"), "rezistent");});
test("rezistente -> rezistent", function() {deepEqual( Stem("rezistente"), "rezistent");});
test("rezistenţa -> rezistenţ", function() {deepEqual( Stem("rezistenţa"), "rezistenţ");});
test("rezistenţă -> rezistenţ", function() {deepEqual( Stem("rezistenţă"), "rezistenţ");});
test("rezistenţe -> rezistenţ", function() {deepEqual( Stem("rezistenţe"), "rezistenţ");});
test("rezistenţei -> rezistenţe", function() {deepEqual( Stem("rezistenţei"), "rezistenţe");});
test("rezistenţi -> rezistenţ", function() {deepEqual( Stem("rezistenţi"), "rezistenţ");});
test("rezistînd -> rezistînd", function() {deepEqual( Stem("rezistînd"), "rezistînd");});
test("rezistori -> rezistor", function() {deepEqual( Stem("rezistori"), "rezistor");});
test("rezoluţia -> rezoluţ", function() {deepEqual( Stem("rezoluţia"), "rezoluţ");});
test("rezoluţii -> rezoluţ", function() {deepEqual( Stem("rezoluţii"), "rezoluţ");});
test("rezolva -> rezolv", function() {deepEqual( Stem("rezolva"), "rezolv");});
test("rezolvabile -> rezolv", function() {deepEqual( Stem("rezolvabile"), "rezolv");});
test("rezolvare -> rezolv", function() {deepEqual( Stem("rezolvare"), "rezolv");});
test("rezolvat -> rezolv", function() {deepEqual( Stem("rezolvat"), "rezolv");});
test("rezolvată -> rezolv", function() {deepEqual( Stem("rezolvată"), "rezolv");});
test("rezolvaţi -> rezolv", function() {deepEqual( Stem("rezolvaţi"), "rezolv");});
test("rezolvau -> rezolv", function() {deepEqual( Stem("rezolvau"), "rezolv");});
test("rezolvă -> rezolv", function() {deepEqual( Stem("rezolvă"), "rezolv");});
test("rezolvăm -> rezolv", function() {deepEqual( Stem("rezolvăm"), "rezolv");});
test("rezolvări -> rezolvăr", function() {deepEqual( Stem("rezolvări"), "rezolvăr");});
test("rezolve -> rezolv", function() {deepEqual( Stem("rezolve"), "rezolv");});
test("rezolvim -> rezolv", function() {deepEqual( Stem("rezolvim"), "rezolv");});
test("rezolvire -> rezolv", function() {deepEqual( Stem("rezolvire"), "rezolv");});
test("rezolvirea -> rezolv", function() {deepEqual( Stem("rezolvirea"), "rezolv");});
test("rezolvînd -> rezolvînd", function() {deepEqual( Stem("rezolvînd"), "rezolvînd");});
test("rezonabil -> rezon", function() {deepEqual( Stem("rezonabil"), "rezon");});
test("rezonabilă -> rezon", function() {deepEqual( Stem("rezonabilă"), "rezon");});
test("rezonant -> rezon", function() {deepEqual( Stem("rezonant"), "rezon");});
test("rezulta -> rezult", function() {deepEqual( Stem("rezulta"), "rezult");});
test("rezultat -> rezult", function() {deepEqual( Stem("rezultat"), "rezult");});
test("rezultate -> rezult", function() {deepEqual( Stem("rezultate"), "rezult");});
test("rezultatele -> rezult", function() {deepEqual( Stem("rezultatele"), "rezult");});
test("rezultatelor -> rezult", function() {deepEqual( Stem("rezultatelor"), "rezult");});
test("rezultatul -> rezult", function() {deepEqual( Stem("rezultatul"), "rezult");});
test("rezultă -> rezult", function() {deepEqual( Stem("rezultă"), "rezult");});
test("rezum -> rezum", function() {deepEqual( Stem("rezum"), "rezum");});
test("rezumare -> rezum", function() {deepEqual( Stem("rezumare"), "rezum");});
test("rezumat -> rezum", function() {deepEqual( Stem("rezumat"), "rezum");});
test("rezumate -> rezum", function() {deepEqual( Stem("rezumate"), "rezum");});
test("rezumă -> rezum", function() {deepEqual( Stem("rezumă"), "rezum");});
test("ridic -> ridic", function() {deepEqual( Stem("ridic"), "ridic");});
test("ridica -> ridic", function() {deepEqual( Stem("ridica"), "ridic");});
test("ridicare -> ridic", function() {deepEqual( Stem("ridicare"), "ridic");});
test("ridicarea -> ridic", function() {deepEqual( Stem("ridicarea"), "ridic");});
test("ridicat -> ridic", function() {deepEqual( Stem("ridicat"), "ridic");});
test("ridicată -> ridic", function() {deepEqual( Stem("ridicată"), "ridic");});
test("ridicate -> ridic", function() {deepEqual( Stem("ridicate"), "ridic");});
test("ridicaţi -> ridic", function() {deepEqual( Stem("ridicaţi"), "ridic");});
test("ridicau -> ridic", function() {deepEqual( Stem("ridicau"), "ridic");});
test("ridicând -> ridic", function() {deepEqual( Stem("ridicând"), "ridic");});
test("ridicându -> ridic", function() {deepEqual( Stem("ridicându"), "ridic");});
test("ridică -> ridic", function() {deepEqual( Stem("ridică"), "ridic");});
test("ridicăm -> ridic", function() {deepEqual( Stem("ridicăm"), "ridic");});
test("ridicături -> ridicătur", function() {deepEqual( Stem("ridicături"), "ridicătur");});
test("ridice -> ridic", function() {deepEqual( Stem("ridice"), "ridic");});
test("ridici -> ridic", function() {deepEqual( Stem("ridici"), "ridic");});
test("ridicole -> ridicol", function() {deepEqual( Stem("ridicole"), "ridicol");});
test("ridicolul -> ridicol", function() {deepEqual( Stem("ridicolul"), "ridicol");});
test("ridicul -> ridic", function() {deepEqual( Stem("ridicul"), "ridic");});
test("ridiculă -> ridicul", function() {deepEqual( Stem("ridiculă"), "ridicul");});
test("ridicule -> ridicul", function() {deepEqual( Stem("ridicule"), "ridicul");});
test("ridiculi -> ridicul", function() {deepEqual( Stem("ridiculi"), "ridicul");});
test("riehl -> riehl", function() {deepEqual( Stem("riehl"), "riehl");});
test("riemann -> riemann", function() {deepEqual( Stem("riemann"), "riemann");});
test("riemannian -> riemannian", function() {deepEqual( Stem("riemannian"), "riemannian");});
test("rigid -> rigid", function() {deepEqual( Stem("rigid"), "rigid");});
test("rigidă -> rigid", function() {deepEqual( Stem("rigidă"), "rigid");});
test("rigoare -> rigoar", function() {deepEqual( Stem("rigoare"), "rigoar");});
test("rigoarea -> rigoar", function() {deepEqual( Stem("rigoarea"), "rigoar");});
test("riguroasă -> rigur", function() {deepEqual( Stem("riguroasă"), "rigur");});
test("riguroase -> rigur", function() {deepEqual( Stem("riguroase"), "rigur");});
test("riguros -> rigur", function() {deepEqual( Stem("riguros"), "rigur");});
test("rinocerului -> rinocer", function() {deepEqual( Stem("rinocerului"), "rinocer");});
test("riposta -> ripost", function() {deepEqual( Stem("riposta"), "ripost");});
test("ripostează -> ripost", function() {deepEqual( Stem("ripostează"), "ripost");});
test("risc -> risc", function() {deepEqual( Stem("risc"), "risc");});
test("riscam -> risc", function() {deepEqual( Stem("riscam"), "risc");});
test("riscase -> risc", function() {deepEqual( Stem("riscase"), "risc");});
test("riscă -> risc", function() {deepEqual( Stem("riscă"), "risc");});
test("riscăm -> risc", function() {deepEqual( Stem("riscăm"), "risc");});
test("riscul -> risc", function() {deepEqual( Stem("riscul"), "risc");});
test("riscurile -> riscur", function() {deepEqual( Stem("riscurile"), "riscur");});
test("risipa -> risip", function() {deepEqual( Stem("risipa"), "risip");});
test("risipea -> risip", function() {deepEqual( Stem("risipea"), "risip");});
test("risipesc -> risip", function() {deepEqual( Stem("risipesc"), "risip");});
test("risipi -> risip", function() {deepEqual( Stem("risipi"), "risip");});
test("risipit -> risip", function() {deepEqual( Stem("risipit"), "risip");});
test("risipite -> risip", function() {deepEqual( Stem("risipite"), "risip");});
test("risipiţi -> risip", function() {deepEqual( Stem("risipiţi"), "risip");});
test("ritmic -> ritmic", function() {deepEqual( Stem("ritmic"), "ritmic");});
test("ritmică -> ritmic", function() {deepEqual( Stem("ritmică"), "ritmic");});
test("ritmul -> ritm", function() {deepEqual( Stem("ritmul"), "ritm");});
test("rivalizare -> rivaliz", function() {deepEqual( Stem("rivalizare"), "rivaliz");});
test("ro -> ro", function() {deepEqual( Stem("ro"), "ro");});
test("roadele -> road", function() {deepEqual( Stem("roadele"), "road");});
test("roagă -> roag", function() {deepEqual( Stem("roagă"), "roag");});
test("roata -> roat", function() {deepEqual( Stem("roata"), "roat");});
test("roate -> roat", function() {deepEqual( Stem("roate"), "roat");});
test("robească -> robeasc", function() {deepEqual( Stem("robească"), "robeasc");});
test("robi -> rob", function() {deepEqual( Stem("robi"), "rob");});
test("robit -> robit", function() {deepEqual( Stem("robit"), "robit");});
test("robite -> robit", function() {deepEqual( Stem("robite"), "robit");});
test("robust -> robust", function() {deepEqual( Stem("robust"), "robust");});
test("robustă -> robust", function() {deepEqual( Stem("robustă"), "robust");});
test("robuste -> robust", function() {deepEqual( Stem("robuste"), "robust");});
test("robuşti -> robuşt", function() {deepEqual( Stem("robuşti"), "robuşt");});
test("rochia -> roch", function() {deepEqual( Stem("rochia"), "roch");});
test("rochie -> roch", function() {deepEqual( Stem("rochie"), "roch");});
test("rochii -> roch", function() {deepEqual( Stem("rochii"), "roch");});
test("rochiile -> roch", function() {deepEqual( Stem("rochiile"), "roch");});
test("rodea -> rod", function() {deepEqual( Stem("rodea"), "rod");});
test("rodească -> rodeasc", function() {deepEqual( Stem("rodească"), "rodeasc");});
test("rodnică -> rodnic", function() {deepEqual( Stem("rodnică"), "rodnic");});
test("rodul -> rod", function() {deepEqual( Stem("rodul"), "rod");});
test("rog -> rog", function() {deepEqual( Stem("rog"), "rog");});
test("roger -> roger", function() {deepEqual( Stem("roger"), "roger");});
test("rohde -> rohd", function() {deepEqual( Stem("rohde"), "rohd");});
test("roi -> roi", function() {deepEqual( Stem("roi"), "roi");});
test("roib -> roib", function() {deepEqual( Stem("roib"), "roib");});
test("roibul -> roib", function() {deepEqual( Stem("roibul"), "roib");});
test("roibului -> roib", function() {deepEqual( Stem("roibului"), "roib");});
test("roiul -> roi", function() {deepEqual( Stem("roiul"), "roi");});
test("rol -> rol", function() {deepEqual( Stem("rol"), "rol");});
test("rolul -> rol", function() {deepEqual( Stem("rolul"), "rol");});
test("rolului -> rol", function() {deepEqual( Stem("rolului"), "rol");});
test("roma -> rom", function() {deepEqual( Stem("roma"), "rom");});
test("roman -> roman", function() {deepEqual( Stem("roman"), "roman");});
test("romanaţi -> roman", function() {deepEqual( Stem("romanaţi"), "roman");});
test("romană -> roman", function() {deepEqual( Stem("romană"), "roman");});
test("romancierilor -> romancier", function() {deepEqual( Stem("romancierilor"), "romancier");});
test("romane -> roman", function() {deepEqual( Stem("romane"), "roman");});
test("romanele -> roman", function() {deepEqual( Stem("romanele"), "roman");});
test("romani -> roman", function() {deepEqual( Stem("romani"), "roman");});
test("romanii -> roman", function() {deepEqual( Stem("romanii"), "roman");});
test("romanilor -> roman", function() {deepEqual( Stem("romanilor"), "roman");});
test("romantică -> romant", function() {deepEqual( Stem("romantică"), "romant");});
test("romantice -> romant", function() {deepEqual( Stem("romantice"), "romant");});
test("romantici -> romant", function() {deepEqual( Stem("romantici"), "romant");});
test("romanticilor -> romant", function() {deepEqual( Stem("romanticilor"), "romant");});
test("romantism -> romantist", function() {deepEqual( Stem("romantism"), "romantist");});
test("romantismul -> romantist", function() {deepEqual( Stem("romantismul"), "romantist");});
test("romanţa -> romanţ", function() {deepEqual( Stem("romanţa"), "romanţ");});
test("romanul -> roman", function() {deepEqual( Stem("romanul"), "roman");});
test("român -> român", function() {deepEqual( Stem("român"), "român");});
test("româna -> român", function() {deepEqual( Stem("româna"), "român");});
test("română -> român", function() {deepEqual( Stem("română"), "român");});
test("româncă -> românc", function() {deepEqual( Stem("româncă"), "românc");});
test("românce -> românc", function() {deepEqual( Stem("românce"), "românc");});
test("româncele -> românc", function() {deepEqual( Stem("româncele"), "românc");});
test("române -> român", function() {deepEqual( Stem("române"), "român");});
test("românească -> român", function() {deepEqual( Stem("românească"), "român");});
test("românesc -> român", function() {deepEqual( Stem("românesc"), "român");});
test("româneşte -> român", function() {deepEqual( Stem("româneşte"), "român");});
test("româneşti -> român", function() {deepEqual( Stem("româneşti"), "român");});
test("români -> român", function() {deepEqual( Stem("români"), "român");});
test("românia -> român", function() {deepEqual( Stem("românia"), "român");});
test("românie -> român", function() {deepEqual( Stem("românie"), "român");});
test("româniei -> român", function() {deepEqual( Stem("româniei"), "român");});
test("românii -> român", function() {deepEqual( Stem("românii"), "român");});
test("românul -> român", function() {deepEqual( Stem("românul"), "român");});
test("românului -> român", function() {deepEqual( Stem("românului"), "român");});
test("romburi -> rombur", function() {deepEqual( Stem("romburi"), "rombur");});
test("rond -> rond", function() {deepEqual( Stem("rond"), "rond");});
test("rondul -> rond", function() {deepEqual( Stem("rondul"), "rond");});
test("ropot -> ropot", function() {deepEqual( Stem("ropot"), "ropot");});
test("ros -> ros", function() {deepEqual( Stem("ros"), "ros");});
test("rose -> ros", function() {deepEqual( Stem("rose"), "ros");});
test("rosetti -> rosett", function() {deepEqual( Stem("rosetti"), "rosett");});
test("rossetti -> rossett", function() {deepEqual( Stem("rossetti"), "rossett");});
test("rost -> rost", function() {deepEqual( Stem("rost"), "rost");});
test("rostea -> rost", function() {deepEqual( Stem("rostea"), "rost");});
test("rosteşte -> rost", function() {deepEqual( Stem("rosteşte"), "rost");});
test("rostim -> rost", function() {deepEqual( Stem("rostim"), "rost");});
test("rostit -> rostit", function() {deepEqual( Stem("rostit"), "rostit");});
test("rostoganisme -> rostoganist", function() {deepEqual( Stem("rostoganisme"), "rostoganist");});
test("rostogolindu -> rostogol", function() {deepEqual( Stem("rostogolindu"), "rostogol");});
test("rostogolit -> rostogol", function() {deepEqual( Stem("rostogolit"), "rostogol");});
test("rostogoliţi -> rostogol", function() {deepEqual( Stem("rostogoliţi"), "rostogol");});
test("rostul -> rost", function() {deepEqual( Stem("rostul"), "rost");});
test("rosturi -> rostur", function() {deepEqual( Stem("rosturi"), "rostur");});
test("rosturile -> rostur", function() {deepEqual( Stem("rosturile"), "rostur");});
test("rosturilor -> rostur", function() {deepEqual( Stem("rosturilor"), "rostur");});
test("roş -> roş", function() {deepEqual( Stem("roş"), "roş");});
test("roşcată -> roşcat", function() {deepEqual( Stem("roşcată"), "roşcat");});
test("roşiatic -> roşiat", function() {deepEqual( Stem("roşiatic"), "roşiat");});
test("roşiatică -> roşiat", function() {deepEqual( Stem("roşiatică"), "roşiat");});
test("roşie -> roş", function() {deepEqual( Stem("roşie"), "roş");});
test("roşii -> roş", function() {deepEqual( Stem("roşii"), "roş");});
test("roşu -> roşu", function() {deepEqual( Stem("roşu"), "roşu");});
test("roşul -> roş", function() {deepEqual( Stem("roşul"), "roş");});
test("rotesc -> rotesc", function() {deepEqual( Stem("rotesc"), "rotesc");});
test("roteşte -> roteşt", function() {deepEqual( Stem("roteşte"), "roteşt");});
test("rothschild -> rothschild", function() {deepEqual( Stem("rothschild"), "rothschild");});
test("roti -> rot", function() {deepEqual( Stem("roti"), "rot");});
test("rotim -> rot", function() {deepEqual( Stem("rotim"), "rot");});
test("rotind -> rotind", function() {deepEqual( Stem("rotind"), "rotind");});
test("rotire -> rotir", function() {deepEqual( Stem("rotire"), "rotir");});
test("rotite -> rotit", function() {deepEqual( Stem("rotite"), "rotit");});
test("rotiţă -> rotiţ", function() {deepEqual( Stem("rotiţă"), "rotiţ");});
test("rotiţele -> rotiţ", function() {deepEqual( Stem("rotiţele"), "rotiţ");});
test("rotocoală -> rotocoal", function() {deepEqual( Stem("rotocoală"), "rotocoal");});
test("rotund -> rotund", function() {deepEqual( Stem("rotund"), "rotund");});
test("rotundă -> rotund", function() {deepEqual( Stem("rotundă"), "rotund");});
test("rotunjească -> rotunj", function() {deepEqual( Stem("rotunjească"), "rotunj");});
test("rotunjesc -> rotunj", function() {deepEqual( Stem("rotunjesc"), "rotunj");});
test("rotunjeste -> rotunjest", function() {deepEqual( Stem("rotunjeste"), "rotunjest");});
test("rotunjeşte -> rotunj", function() {deepEqual( Stem("rotunjeşte"), "rotunj");});
test("rotunji -> rotunj", function() {deepEqual( Stem("rotunji"), "rotunj");});
test("rotunjimi -> rotunjim", function() {deepEqual( Stem("rotunjimi"), "rotunjim");});
test("rotunjimile -> rotunjim", function() {deepEqual( Stem("rotunjimile"), "rotunjim");});
test("rotunjind -> rotunj", function() {deepEqual( Stem("rotunjind"), "rotunj");});
test("rotunjire -> rotunj", function() {deepEqual( Stem("rotunjire"), "rotunj");});
test("rotunjirii -> rotunjir", function() {deepEqual( Stem("rotunjirii"), "rotunjir");});
test("rotunjit -> rotunj", function() {deepEqual( Stem("rotunjit"), "rotunj");});
test("rotunjită -> rotunj", function() {deepEqual( Stem("rotunjită"), "rotunj");});
test("rotunzi -> rotunz", function() {deepEqual( Stem("rotunzi"), "rotunz");});
test("rotunzimile -> rotunzim", function() {deepEqual( Stem("rotunzimile"), "rotunzim");});
test("roţi -> roţ", function() {deepEqual( Stem("roţi"), "roţ");});
test("roţii -> roţ", function() {deepEqual( Stem("roţii"), "roţ");});
test("roţile -> roţ", function() {deepEqual( Stem("roţile"), "roţ");});
test("roţilor -> roţ", function() {deepEqual( Stem("roţilor"), "roţ");});
test("roua -> rou", function() {deepEqual( Stem("roua"), "rou");});
test("rouă -> rou", function() {deepEqual( Stem("rouă"), "rou");});
test("rouge -> roug", function() {deepEqual( Stem("rouge"), "roug");});
test("rousseau -> rouss", function() {deepEqual( Stem("rousseau"), "rouss");});
test("roz -> roz", function() {deepEqual( Stem("roz"), "roz");});
test("rozei -> roze", function() {deepEqual( Stem("rozei"), "roze");});
test("rozelor -> roz", function() {deepEqual( Stem("rozelor"), "roz");});
test("rozetti -> rozett", function() {deepEqual( Stem("rozetti"), "rozett");});
test("ruajul -> ruaj", function() {deepEqual( Stem("ruajul"), "ruaj");});
test("rubedeniilor -> rubeden", function() {deepEqual( Stem("rubedeniilor"), "rubeden");});
test("rubrici -> rubric", function() {deepEqual( Stem("rubrici"), "rubric");});
test("rucăr -> rucăr", function() {deepEqual( Stem("rucăr"), "rucăr");});
test("rucărului -> rucăr", function() {deepEqual( Stem("rucărului"), "rucăr");});
test("rude -> rud", function() {deepEqual( Stem("rude"), "rud");});
test("rudele -> rud", function() {deepEqual( Stem("rudele"), "rud");});
test("rudelor -> rud", function() {deepEqual( Stem("rudelor"), "rud");});
test("rudenie -> ruden", function() {deepEqual( Stem("rudenie"), "ruden");});
test("rudenii -> ruden", function() {deepEqual( Stem("rudenii"), "ruden");});
test("rudimentarele -> rudiment", function() {deepEqual( Stem("rudimentarele"), "rudiment");});
test("rudis -> rudis", function() {deepEqual( Stem("rudis"), "rudis");});
test("rufăria -> rufăr", function() {deepEqual( Stem("rufăria"), "rufăr");});
test("ruga -> rug", function() {deepEqual( Stem("ruga"), "rug");});
test("rugam -> rugam", function() {deepEqual( Stem("rugam"), "rugam");});
test("rugasem -> rugasem", function() {deepEqual( Stem("rugasem"), "rugasem");});
test("rugat -> rugat", function() {deepEqual( Stem("rugat"), "rugat");});
test("rugate -> rugat", function() {deepEqual( Stem("rugate"), "rugat");});
test("rugaţi -> rug", function() {deepEqual( Stem("rugaţi"), "rug");});
test("rugăciune -> rugăciun", function() {deepEqual( Stem("rugăciune"), "rugăciun");});
test("rugul -> rug", function() {deepEqual( Stem("rugul"), "rug");});
test("ruine -> ruin", function() {deepEqual( Stem("ruine"), "ruin");});
test("rula -> rul", function() {deepEqual( Stem("rula"), "rul");});
test("ruletă -> rulet", function() {deepEqual( Stem("ruletă"), "rulet");});
test("rum -> rum", function() {deepEqual( Stem("rum"), "rum");});
test("rumanien -> rumanien", function() {deepEqual( Stem("rumanien"), "rumanien");});
test("rumene -> rumen", function() {deepEqual( Stem("rumene"), "rumen");});
test("rumeni -> rumen", function() {deepEqual( Stem("rumeni"), "rumen");});
test("rumenită -> rumen", function() {deepEqual( Stem("rumenită"), "rumen");});
test("rumeoară -> rumeoar", function() {deepEqual( Stem("rumeoară"), "rumeoar");});
test("rumoarea -> rumoar", function() {deepEqual( Stem("rumoarea"), "rumoar");});
test("rup -> rup", function() {deepEqual( Stem("rup"), "rup");});
test("rupa -> rup", function() {deepEqual( Stem("rupa"), "rup");});
test("rupând -> rupând", function() {deepEqual( Stem("rupând"), "rupând");});
test("rupându -> rupându", function() {deepEqual( Stem("rupându"), "rupându");});
test("rupă -> rup", function() {deepEqual( Stem("rupă"), "rup");});
test("rupe -> rup", function() {deepEqual( Stem("rupe"), "rup");});
test("rupere -> ruper", function() {deepEqual( Stem("rupere"), "ruper");});
test("ruperea -> ruper", function() {deepEqual( Stem("ruperea"), "ruper");});
test("rupi -> rup", function() {deepEqual( Stem("rupi"), "rup");});
test("rupsese -> rup", function() {deepEqual( Stem("rupsese"), "rup");});
test("rupt -> rupt", function() {deepEqual( Stem("rupt"), "rupt");});
test("ruptă -> rupt", function() {deepEqual( Stem("ruptă"), "rupt");});
test("rupte -> rupt", function() {deepEqual( Stem("rupte"), "rupt");});
test("ruptura -> ruptur", function() {deepEqual( Stem("ruptura"), "ruptur");});
test("ruptură -> rupt", function() {deepEqual( Stem("ruptură"), "rupt");});
test("rupturi -> ruptur", function() {deepEqual( Stem("rupturi"), "ruptur");});
test("rural -> rural", function() {deepEqual( Stem("rural"), "rural");});
test("rurală -> rural", function() {deepEqual( Stem("rurală"), "rural");});
test("ruralii -> rural", function() {deepEqual( Stem("ruralii"), "rural");});
test("ruralul -> rural", function() {deepEqual( Stem("ruralul"), "rural");});
test("ruralului -> rural", function() {deepEqual( Stem("ruralului"), "rural");});
test("rus -> rus", function() {deepEqual( Stem("rus"), "rus");});
test("rusă -> rus", function() {deepEqual( Stem("rusă"), "rus");});
test("ruse -> rus", function() {deepEqual( Stem("ruse"), "rus");});
test("rusească -> ruseasc", function() {deepEqual( Stem("rusească"), "ruseasc");});
test("rusesc -> rusesc", function() {deepEqual( Stem("rusesc"), "rusesc");});
test("rusia -> rusi", function() {deepEqual( Stem("rusia"), "rusi");});
test("rusiei -> rus", function() {deepEqual( Stem("rusiei"), "rus");});
test("rusoaică -> rusoaic", function() {deepEqual( Stem("rusoaică"), "rusoaic");});
test("rustice -> rustic", function() {deepEqual( Stem("rustice"), "rustic");});
test("rusul -> rus", function() {deepEqual( Stem("rusul"), "rus");});
test("rusului -> rus", function() {deepEqual( Stem("rusului"), "rus");});
test("ruşi -> ruş", function() {deepEqual( Stem("ruşi"), "ruş");});
test("ruşii -> ruş", function() {deepEqual( Stem("ruşii"), "ruş");});
test("ruşilor -> ruş", function() {deepEqual( Stem("ruşilor"), "ruş");});
test("ruşine -> ruşin", function() {deepEqual( Stem("ruşine"), "ruşin");});
test("ruşinea -> ruşin", function() {deepEqual( Stem("ruşinea"), "ruşin");});
test("ruşinoasă -> ruşin", function() {deepEqual( Stem("ruşinoasă"), "ruşin");});
test("ruşinos -> ruşin", function() {deepEqual( Stem("ruşinos"), "ruşin");});
test("s -> s", function() {deepEqual( Stem("s"), "s");});
test("sa -> sa", function() {deepEqual( Stem("sa"), "sa");});
test("sabia -> sabi", function() {deepEqual( Stem("sabia"), "sabi");});
test("sabie -> sab", function() {deepEqual( Stem("sabie"), "sab");});
test("sac -> sac", function() {deepEqual( Stem("sac"), "sac");});
test("sacadele -> sacad", function() {deepEqual( Stem("sacadele"), "sacad");});
test("saci -> sac", function() {deepEqual( Stem("saci"), "sac");});
test("sacoul -> saco", function() {deepEqual( Stem("sacoul"), "saco");});
test("sacrific -> sacrif", function() {deepEqual( Stem("sacrific"), "sacrif");});
test("sacrificii -> sacrif", function() {deepEqual( Stem("sacrificii"), "sacrif");});
test("sacrificiile -> sacrif", function() {deepEqual( Stem("sacrificiile"), "sacrif");});
test("sacrificiu -> sacrificiu", function() {deepEqual( Stem("sacrificiu"), "sacrificiu");});
test("sacrificiul -> sacrif", function() {deepEqual( Stem("sacrificiul"), "sacrif");});
test("sacul -> sac", function() {deepEqual( Stem("sacul"), "sac");});
test("sala -> sal", function() {deepEqual( Stem("sala"), "sal");});
test("salariaţii -> salar", function() {deepEqual( Stem("salariaţii"), "salar");});
test("sală -> sal", function() {deepEqual( Stem("sală"), "sal");});
test("salcie -> salc", function() {deepEqual( Stem("salcie"), "salc");});
test("sale -> sal", function() {deepEqual( Stem("sale"), "sal");});
test("saloane -> saloan", function() {deepEqual( Stem("saloane"), "saloan");});
test("saloanele -> saloan", function() {deepEqual( Stem("saloanele"), "saloan");});
test("saloanelor -> saloan", function() {deepEqual( Stem("saloanelor"), "saloan");});
test("salon -> salon", function() {deepEqual( Stem("salon"), "salon");});
test("salonaş -> salonaş", function() {deepEqual( Stem("salonaş"), "salonaş");});
test("salonaşul -> salonaş", function() {deepEqual( Stem("salonaşul"), "salonaş");});
test("salonic -> salon", function() {deepEqual( Stem("salonic"), "salon");});
test("salt -> salt", function() {deepEqual( Stem("salt"), "salt");});
test("saltă -> salt", function() {deepEqual( Stem("saltă"), "salt");});
test("salturi -> saltur", function() {deepEqual( Stem("salturi"), "saltur");});
test("salut -> salut", function() {deepEqual( Stem("salut"), "salut");});
test("salutară -> salut", function() {deepEqual( Stem("salutară"), "salut");});
test("salutare -> salut", function() {deepEqual( Stem("salutare"), "salut");});
test("salutat -> salut", function() {deepEqual( Stem("salutat"), "salut");});
test("salută -> salut", function() {deepEqual( Stem("salută"), "salut");});
test("saluturi -> salutur", function() {deepEqual( Stem("saluturi"), "salutur");});
test("saluţi -> saluţ", function() {deepEqual( Stem("saluţi"), "saluţ");});
test("salva -> salv", function() {deepEqual( Stem("salva"), "salv");});
test("salvare -> salv", function() {deepEqual( Stem("salvare"), "salv");});
test("salvarea -> salv", function() {deepEqual( Stem("salvarea"), "salv");});
test("salvase -> salv", function() {deepEqual( Stem("salvase"), "salv");});
test("salvat -> salvat", function() {deepEqual( Stem("salvat"), "salvat");});
test("salvată -> salvat", function() {deepEqual( Stem("salvată"), "salvat");});
test("salvator -> salvat", function() {deepEqual( Stem("salvator"), "salvat");});
test("salvaţi -> salv", function() {deepEqual( Stem("salvaţi"), "salv");});
test("salvă -> salv", function() {deepEqual( Stem("salvă"), "salv");});
test("salvăm -> salv", function() {deepEqual( Stem("salvăm"), "salv");});
test("salvării -> salvăr", function() {deepEqual( Stem("salvării"), "salvăr");});
test("salve -> salv", function() {deepEqual( Stem("salve"), "salv");});
test("salvează -> salv", function() {deepEqual( Stem("salvează"), "salv");});
test("salvele -> salv", function() {deepEqual( Stem("salvele"), "salv");});
test("samsarii -> samsar", function() {deepEqual( Stem("samsarii"), "samsar");});
test("samsarlâcuri -> samsarlâcur", function() {deepEqual( Stem("samsarlâcuri"), "samsarlâcur");});
test("sanatoriu -> sanatoriu", function() {deepEqual( Stem("sanatoriu"), "sanatoriu");});
test("sanatoriului -> sanat", function() {deepEqual( Stem("sanatoriului"), "sanat");});
test("sancţiuni -> sancţiun", function() {deepEqual( Stem("sancţiuni"), "sancţiun");});
test("sanfter -> sanfter", function() {deepEqual( Stem("sanfter"), "sanfter");});
test("sania -> sani", function() {deepEqual( Stem("sania"), "sani");});
test("sanitar -> sanitar", function() {deepEqual( Stem("sanitar"), "sanitar");});
test("sanitare -> sanit", function() {deepEqual( Stem("sanitare"), "sanit");});
test("sankt -> sankt", function() {deepEqual( Stem("sankt"), "sankt");});
test("sanscrită -> sanscrit", function() {deepEqual( Stem("sanscrită"), "sanscrit");});
test("santinela -> santinel", function() {deepEqual( Stem("santinela"), "santinel");});
test("santinelă -> santinel", function() {deepEqual( Stem("santinelă"), "santinel");});
test("santinele -> santin", function() {deepEqual( Stem("santinele"), "santin");});
test("sap -> sap", function() {deepEqual( Stem("sap"), "sap");});
test("sapă -> sap", function() {deepEqual( Stem("sapă"), "sap");});
test("sapienţei -> sapienţe", function() {deepEqual( Stem("sapienţei"), "sapienţe");});
test("sar -> sar", function() {deepEqual( Stem("sar"), "sar");});
test("sarabandă -> saraband", function() {deepEqual( Stem("sarabandă"), "saraband");});
test("sarajevo -> sarajevo", function() {deepEqual( Stem("sarajevo"), "sarajevo");});
test("saramură -> saram", function() {deepEqual( Stem("saramură"), "saram");});
test("sară -> sar", function() {deepEqual( Stem("sară"), "sar");});
test("sarăcită -> sarăc", function() {deepEqual( Stem("sarăcită"), "sarăc");});
test("sarbede -> sarbed", function() {deepEqual( Stem("sarbede"), "sarbed");});
test("sarcasm -> sarcasm", function() {deepEqual( Stem("sarcasm"), "sarcasm");});
test("sarcasmul -> sarcasm", function() {deepEqual( Stem("sarcasmul"), "sarcasm");});
test("sarcastic -> sarcast", function() {deepEqual( Stem("sarcastic"), "sarcast");});
test("sarcina -> sarcin", function() {deepEqual( Stem("sarcina"), "sarcin");});
test("sarcină -> sarcin", function() {deepEqual( Stem("sarcină"), "sarcin");});
test("sarcini -> sarcin", function() {deepEqual( Stem("sarcini"), "sarcin");});
test("sarcofagele -> sarcofag", function() {deepEqual( Stem("sarcofagele"), "sarcofag");});
test("sardele -> sard", function() {deepEqual( Stem("sardele"), "sard");});
test("sardinia -> sardin", function() {deepEqual( Stem("sardinia"), "sardin");});
test("sardonic -> sardon", function() {deepEqual( Stem("sardonic"), "sardon");});
test("sare -> sar", function() {deepEqual( Stem("sare"), "sar");});
test("sas -> sas", function() {deepEqual( Stem("sas"), "sas");});
test("sasă -> sas", function() {deepEqual( Stem("sasă"), "sas");});
test("sasul -> sas", function() {deepEqual( Stem("sasul"), "sas");});
test("sasului -> sas", function() {deepEqual( Stem("sasului"), "sas");});
test("saşi -> saş", function() {deepEqual( Stem("saşi"), "saş");});
test("saşii -> saş", function() {deepEqual( Stem("saşii"), "saş");});
test("sat -> sat", function() {deepEqual( Stem("sat"), "sat");});
test("sate -> sat", function() {deepEqual( Stem("sate"), "sat");});
test("satele -> sat", function() {deepEqual( Stem("satele"), "sat");});
test("satiric -> satir", function() {deepEqual( Stem("satiric"), "satir");});
test("satisfac -> satisfac", function() {deepEqual( Stem("satisfac"), "satisfac");});
test("satisfacă -> satisfac", function() {deepEqual( Stem("satisfacă"), "satisfac");});
test("satisface -> satisfac", function() {deepEqual( Stem("satisface"), "satisfac");});
test("satisfacerea -> satisfac", function() {deepEqual( Stem("satisfacerea"), "satisfac");});
test("satisfacţia -> satisfacţ", function() {deepEqual( Stem("satisfacţia"), "satisfacţ");});
test("satisfacţie -> satisfacţ", function() {deepEqual( Stem("satisfacţie"), "satisfacţ");});
test("satisfacţii -> satisfacţ", function() {deepEqual( Stem("satisfacţii"), "satisfacţ");});
test("satisfacţiion -> satisfacţiion", function() {deepEqual( Stem("satisfacţiion"), "satisfacţiion");});
test("satisfăcătoare -> satisfăc", function() {deepEqual( Stem("satisfăcătoare"), "satisfăc");});
test("satisfăcînd -> satisfăcînd", function() {deepEqual( Stem("satisfăcînd"), "satisfăcînd");});
test("satisfăcut -> satisfăc", function() {deepEqual( Stem("satisfăcut"), "satisfăc");});
test("satisfăcută -> satisfăc", function() {deepEqual( Stem("satisfăcută"), "satisfăc");});
test("satisfăcuţi -> satisfăcuţ", function() {deepEqual( Stem("satisfăcuţi"), "satisfăcuţ");});
test("satisfiabilă -> satisf", function() {deepEqual( Stem("satisfiabilă"), "satisf");});
test("satisfiabile -> satisf", function() {deepEqual( Stem("satisfiabile"), "satisf");});
test("satisfiabilitate -> satisf", function() {deepEqual( Stem("satisfiabilitate"), "satisf");});
test("satisfiabilităţii -> satisf", function() {deepEqual( Stem("satisfiabilităţii"), "satisf");});
test("satrapi -> satrap", function() {deepEqual( Stem("satrapi"), "satrap");});
test("satul -> sat", function() {deepEqual( Stem("satul"), "sat");});
test("satului -> sat", function() {deepEqual( Stem("satului"), "sat");});
test("saturat -> satur", function() {deepEqual( Stem("saturat"), "satur");});
test("saturate -> satur", function() {deepEqual( Stem("saturate"), "satur");});
test("saturaţie -> satur", function() {deepEqual( Stem("saturaţie"), "satur");});
test("sature -> satur", function() {deepEqual( Stem("sature"), "satur");});
test("saturn -> saturn", function() {deepEqual( Stem("saturn"), "saturn");});
test("sau -> sau", function() {deepEqual( Stem("sau"), "sau");});
test("sauer -> sauer", function() {deepEqual( Stem("sauer"), "sauer");});
test("savana -> savan", function() {deepEqual( Stem("savana"), "savan");});
test("savant -> savant", function() {deepEqual( Stem("savant"), "savant");});
test("savantă -> savant", function() {deepEqual( Stem("savantă"), "savant");});
test("savante -> savant", function() {deepEqual( Stem("savante"), "savant");});
test("savanţi -> savanţ", function() {deepEqual( Stem("savanţi"), "savanţ");});
test("savanţii -> savanţ", function() {deepEqual( Stem("savanţii"), "savanţ");});
test("savanţilor -> savanţ", function() {deepEqual( Stem("savanţilor"), "savanţ");});
test("savoare -> savoar", function() {deepEqual( Stem("savoare"), "savoar");});
test("savoarea -> savoar", function() {deepEqual( Stem("savoarea"), "savoar");});
test("savopol -> savopol", function() {deepEqual( Stem("savopol"), "savopol");});
test("saxa -> sax", function() {deepEqual( Stem("saxa"), "sax");});
test("saxonă -> saxon", function() {deepEqual( Stem("saxonă"), "saxon");});
test("saxoni -> saxon", function() {deepEqual( Stem("saxoni"), "saxon");});
test("sâcâit -> sâcâit", function() {deepEqual( Stem("sâcâit"), "sâcâit");});
test("sâcâită -> sâcâit", function() {deepEqual( Stem("sâcâită"), "sâcâit");});
test("sâcâitoare -> sâcâit", function() {deepEqual( Stem("sâcâitoare"), "sâcâit");});
test("sâcâiţi -> sâcâ", function() {deepEqual( Stem("sâcâiţi"), "sâcâ");});
test("sâmbăta -> sâmbăt", function() {deepEqual( Stem("sâmbăta"), "sâmbăt");});
test("sâmbătă -> sâmbăt", function() {deepEqual( Stem("sâmbătă"), "sâmbăt");});
test("sân -> sân", function() {deepEqual( Stem("sân"), "sân");});
test("sânge -> sâng", function() {deepEqual( Stem("sânge"), "sâng");});
test("sângele -> sâng", function() {deepEqual( Stem("sângele"), "sâng");});
test("sângerat -> sânger", function() {deepEqual( Stem("sângerat"), "sânger");});
test("sângeros -> sânger", function() {deepEqual( Stem("sângeros"), "sânger");});
test("sâni -> sân", function() {deepEqual( Stem("sâni"), "sân");});
test("sânii -> sân", function() {deepEqual( Stem("sânii"), "sân");});
test("sânilor -> sân", function() {deepEqual( Stem("sânilor"), "sân");});
test("sânta -> sânt", function() {deepEqual( Stem("sânta"), "sânt");});
test("sânul -> sân", function() {deepEqual( Stem("sânul"), "sân");});
test("sârb -> sârb", function() {deepEqual( Stem("sârb"), "sârb");});
test("sârbii -> sârb", function() {deepEqual( Stem("sârbii"), "sârb");});
test("sârma -> sârm", function() {deepEqual( Stem("sârma"), "sârm");});
test("sârmă -> sârm", function() {deepEqual( Stem("sârmă"), "sârm");});
test("sârme -> sârm", function() {deepEqual( Stem("sârme"), "sârm");});
test("sârmele -> sârm", function() {deepEqual( Stem("sârmele"), "sârm");});
test("să -> să", function() {deepEqual( Stem("să"), "să");});
test("săbii -> săb", function() {deepEqual( Stem("săbii"), "săb");});
test("sădită -> sădit", function() {deepEqual( Stem("sădită"), "sădit");});
test("săgeţi -> săg", function() {deepEqual( Stem("săgeţi"), "săg");});
test("săgeţile -> săg", function() {deepEqual( Stem("săgeţile"), "săg");});
test("săi -> săi", function() {deepEqual( Stem("săi"), "săi");});
test("sălbatic -> sălbat", function() {deepEqual( Stem("sălbatic"), "sălbat");});
test("sălcii -> sălc", function() {deepEqual( Stem("sălcii"), "sălc");});
test("săli -> săl", function() {deepEqual( Stem("săli"), "săl");});
test("sălile -> săl", function() {deepEqual( Stem("sălile"), "săl");});
test("săliţa -> săliţ", function() {deepEqual( Stem("săliţa"), "săliţ");});
test("sălta -> sălt", function() {deepEqual( Stem("sălta"), "sălt");});
test("săltat -> săltat", function() {deepEqual( Stem("săltat"), "săltat");});
test("săltate -> săltat", function() {deepEqual( Stem("săltate"), "săltat");});
test("săltând -> sălt", function() {deepEqual( Stem("săltând"), "sălt");});
test("săltăreţ -> săltăreţ", function() {deepEqual( Stem("săltăreţ"), "săltăreţ");});
test("sănătate -> sănăt", function() {deepEqual( Stem("sănătate"), "sănăt");});
test("sănătoasă -> sănăt", function() {deepEqual( Stem("sănătoasă"), "sănăt");});
test("sănătos -> sănăt", function() {deepEqual( Stem("sănătos"), "sănăt");});
test("săpa -> săp", function() {deepEqual( Stem("săpa"), "săp");});
test("săparea -> săpar", function() {deepEqual( Stem("săparea"), "săpar");});
test("săpate -> săpat", function() {deepEqual( Stem("săpate"), "săpat");});
test("săpatură -> săpat", function() {deepEqual( Stem("săpatură"), "săpat");});
test("săpătură -> săpăt", function() {deepEqual( Stem("săpătură"), "săpăt");});
test("săptămâna -> săptămân", function() {deepEqual( Stem("săptămâna"), "săptămân");});
test("săptămână -> săptămân", function() {deepEqual( Stem("săptămână"), "săptămân");});
test("săptămâni -> săptămân", function() {deepEqual( Stem("săptămâni"), "săptămân");});
test("săptămânile -> săptămân", function() {deepEqual( Stem("săptămânile"), "săptămân");});
test("săptămîna -> săptămîn", function() {deepEqual( Stem("săptămîna"), "săptămîn");});
test("săptămînal -> săptămînal", function() {deepEqual( Stem("săptămînal"), "săptămînal");});
test("săptămînală -> săptămînal", function() {deepEqual( Stem("săptămînală"), "săptămînal");});
test("săptămînale -> săptămînal", function() {deepEqual( Stem("săptămînale"), "săptămînal");});
test("săptămînalelor -> săptămînal", function() {deepEqual( Stem("săptămînalelor"), "săptămînal");});
test("săptămînă -> săptămîn", function() {deepEqual( Stem("săptămînă"), "săptămîn");});
test("săptămîni -> săptămîn", function() {deepEqual( Stem("săptămîni"), "săptămîn");});
test("săpun -> săpun", function() {deepEqual( Stem("săpun"), "săpun");});
test("sărac -> sărac", function() {deepEqual( Stem("sărac"), "sărac");});
test("săracă -> sărac", function() {deepEqual( Stem("săracă"), "sărac");});
test("sărace -> sărac", function() {deepEqual( Stem("sărace"), "sărac");});
test("săraci -> sărac", function() {deepEqual( Stem("săraci"), "sărac");});
test("săracii -> sărac", function() {deepEqual( Stem("săracii"), "sărac");});
test("sărat -> sărat", function() {deepEqual( Stem("sărat"), "sărat");});
test("sărăcăcioasă -> sărăcăc", function() {deepEqual( Stem("sărăcăcioasă"), "sărăcăc");});
test("sărăcăcios -> sărăcăc", function() {deepEqual( Stem("sărăcăcios"), "sărăcăc");});
test("sărăcea -> sărăc", function() {deepEqual( Stem("sărăcea"), "sărăc");});
test("sărăcia -> sărăc", function() {deepEqual( Stem("sărăcia"), "sărăc");});
test("sărăcie -> sărăc", function() {deepEqual( Stem("sărăcie"), "sărăc");});
test("sărăcimea -> sărăcim", function() {deepEqual( Stem("sărăcimea"), "sărăcim");});
test("sărăcimii -> sărăcim", function() {deepEqual( Stem("sărăcimii"), "sărăcim");});
test("sărăcire -> sărăc", function() {deepEqual( Stem("sărăcire"), "sărăc");});
test("sărăcit -> sărăc", function() {deepEqual( Stem("sărăcit"), "sărăc");});
test("sărăcute -> sărăc", function() {deepEqual( Stem("sărăcute"), "sărăc");});
test("sărăcuţ -> sărăcuţ", function() {deepEqual( Stem("sărăcuţ"), "sărăcuţ");});
test("sărăcuţă -> sărăcuţ", function() {deepEqual( Stem("sărăcuţă"), "sărăcuţ");});
test("sărăntoc -> sărăntoc", function() {deepEqual( Stem("sărăntoc"), "sărăntoc");});
test("sărbătoare -> sărbat", function() {deepEqual( Stem("sărbătoare"), "sărbat");});
test("sărbătoarea -> sărbat", function() {deepEqual( Stem("sărbătoarea"), "sărbat");});
test("sărbătorească -> sărbător", function() {deepEqual( Stem("sărbătorească"), "sărbător");});
test("sărbătoresc -> sărbător", function() {deepEqual( Stem("sărbătoresc"), "sărbător");});
test("sărbători -> sărbat", function() {deepEqual( Stem("sărbători"), "sărbat");});
test("sărbătorire -> sărbător", function() {deepEqual( Stem("sărbătorire"), "sărbător");});
test("sărbătoririi -> sărbătorir", function() {deepEqual( Stem("sărbătoririi"), "sărbătorir");});
test("sărbătorisem -> sărbător", function() {deepEqual( Stem("sărbătorisem"), "sărbător");});
test("sărbătorit -> sărbător", function() {deepEqual( Stem("sărbătorit"), "sărbător");});
test("sărbătoriţi -> sărbător", function() {deepEqual( Stem("sărbătoriţi"), "sărbător");});
test("sărea -> săr", function() {deepEqual( Stem("sărea"), "săr");});
test("săream -> săream", function() {deepEqual( Stem("săream"), "săream");});
test("săreau -> săreau", function() {deepEqual( Stem("săreau"), "săreau");});
test("sări -> săr", function() {deepEqual( Stem("sări"), "săr");});
test("sărim -> săr", function() {deepEqual( Stem("sărim"), "săr");});
test("sărise -> săris", function() {deepEqual( Stem("sărise"), "săris");});
test("sărit -> sărit", function() {deepEqual( Stem("sărit"), "sărit");});
test("sărite -> sărit", function() {deepEqual( Stem("sărite"), "sărit");});
test("săritoare -> sărit", function() {deepEqual( Stem("săritoare"), "sărit");});
test("săritură -> sărit", function() {deepEqual( Stem("săritură"), "sărit");});
test("sărituri -> săritur", function() {deepEqual( Stem("sărituri"), "săritur");});
test("săriturii -> săritur", function() {deepEqual( Stem("săriturii"), "săritur");});
test("sărut -> sărut", function() {deepEqual( Stem("sărut"), "sărut");});
test("săruta -> sărut", function() {deepEqual( Stem("săruta"), "sărut");});
test("sărutam -> sărut", function() {deepEqual( Stem("sărutam"), "sărut");});
test("sărutat -> sărut", function() {deepEqual( Stem("sărutat"), "sărut");});
test("sărutându -> sărut", function() {deepEqual( Stem("sărutându"), "sărut");});
test("sărută -> sărut", function() {deepEqual( Stem("sărută"), "sărut");});
test("sărutăm -> sărut", function() {deepEqual( Stem("sărutăm"), "sărut");});
test("sărutări -> sărutăr", function() {deepEqual( Stem("sărutări"), "sărutăr");});
test("sărute -> sărut", function() {deepEqual( Stem("sărute"), "sărut");});
test("sărutul -> sărut", function() {deepEqual( Stem("sărutul"), "sărut");});
test("sărutului -> sărut", function() {deepEqual( Stem("sărutului"), "sărut");});
test("săruţi -> săruţ", function() {deepEqual( Stem("săruţi"), "săruţ");});
test("săsăuş -> săsăuş", function() {deepEqual( Stem("săsăuş"), "săsăuş");});
test("săsăuşul -> săsăuş", function() {deepEqual( Stem("săsăuşul"), "săsăuş");});
test("săsească -> săseasc", function() {deepEqual( Stem("săsească"), "săseasc");});
test("săseşti -> săseşt", function() {deepEqual( Stem("săseşti"), "săseşt");});
test("săsoaica -> săsoaic", function() {deepEqual( Stem("săsoaica"), "săsoaic");});
test("săsoaică -> săsoaic", function() {deepEqual( Stem("săsoaică"), "săsoaic");});
test("săsoaicele -> săsoaic", function() {deepEqual( Stem("săsoaicele"), "săsoaic");});
test("sătească -> săteasc", function() {deepEqual( Stem("sătească"), "săteasc");});
test("săteni -> săten", function() {deepEqual( Stem("săteni"), "săten");});
test("sătui -> sătu", function() {deepEqual( Stem("sătui"), "sătu");});
test("sătulă -> sătul", function() {deepEqual( Stem("sătulă"), "sătul");});
test("săturaseră -> sătur", function() {deepEqual( Stem("săturaseră"), "sătur");});
test("săturat -> sătur", function() {deepEqual( Stem("săturat"), "sătur");});
test("săţios -> săţios", function() {deepEqual( Stem("săţios"), "săţios");});
test("său -> său", function() {deepEqual( Stem("său"), "său");});
test("săvârşise -> săvârş", function() {deepEqual( Stem("săvârşise"), "săvârş");});
test("săvîrşesc -> săvîrş", function() {deepEqual( Stem("săvîrşesc"), "săvîrş");});
test("săvîrşeşte -> săvîrş", function() {deepEqual( Stem("săvîrşeşte"), "săvîrş");});
test("săvulescu -> săvulescu", function() {deepEqual( Stem("săvulescu"), "săvulescu");});
test("scad -> scad", function() {deepEqual( Stem("scad"), "scad");});
test("scade -> scad", function() {deepEqual( Stem("scade"), "scad");});
test("scald -> scald", function() {deepEqual( Stem("scald"), "scald");});
test("scalen -> scalen", function() {deepEqual( Stem("scalen"), "scalen");});
test("scamator -> scamat", function() {deepEqual( Stem("scamator"), "scamat");});
test("scamatorie -> scamator", function() {deepEqual( Stem("scamatorie"), "scamator");});
test("scandal -> scandal", function() {deepEqual( Stem("scandal"), "scandal");});
test("scandalizaţi -> scandaliz", function() {deepEqual( Stem("scandalizaţi"), "scandaliz");});
test("scandaloasă -> scandal", function() {deepEqual( Stem("scandaloasă"), "scandal");});
test("scandalos -> scandal", function() {deepEqual( Stem("scandalos"), "scandal");});
test("scandalului -> scandal", function() {deepEqual( Stem("scandalului"), "scandal");});
test("scandaluri -> scandalur", function() {deepEqual( Stem("scandaluri"), "scandalur");});
test("scandă -> scand", function() {deepEqual( Stem("scandă"), "scand");});
test("scap -> scap", function() {deepEqual( Stem("scap"), "scap");});
test("scapă -> scap", function() {deepEqual( Stem("scapă"), "scap");});
test("scape -> scap", function() {deepEqual( Stem("scape"), "scap");});
test("scapi -> scap", function() {deepEqual( Stem("scapi"), "scap");});
test("scara -> scar", function() {deepEqual( Stem("scara"), "scar");});
test("scară -> scar", function() {deepEqual( Stem("scară"), "scar");});
test("scarpine -> scarpin", function() {deepEqual( Stem("scarpine"), "scarpin");});
test("scaun -> scaun", function() {deepEqual( Stem("scaun"), "scaun");});
test("scaune -> scaun", function() {deepEqual( Stem("scaune"), "scaun");});
test("scaunele -> scaun", function() {deepEqual( Stem("scaunele"), "scaun");});
test("scaunul -> scaun", function() {deepEqual( Stem("scaunul"), "scaun");});
test("scaunului -> scaun", function() {deepEqual( Stem("scaunului"), "scaun");});
test("scâlciaseră -> scâlciaser", function() {deepEqual( Stem("scâlciaseră"), "scâlciaser");});
test("scâncesc -> scânc", function() {deepEqual( Stem("scâncesc"), "scânc");});
test("scâncit -> scâncit", function() {deepEqual( Stem("scâncit"), "scâncit");});
test("scâncite -> scâncit", function() {deepEqual( Stem("scâncite"), "scâncit");});
test("scânduri -> scândur", function() {deepEqual( Stem("scânduri"), "scândur");});
test("scânteia -> scântei", function() {deepEqual( Stem("scânteia"), "scântei");});
test("scârboase -> scârboas", function() {deepEqual( Stem("scârboase"), "scârboas");});
test("scădea -> scăd", function() {deepEqual( Stem("scădea"), "scăd");});
test("scădere -> scăd", function() {deepEqual( Stem("scădere"), "scăd");});
test("scăderi -> scăder", function() {deepEqual( Stem("scăderi"), "scăder");});
test("scăfârlie -> scăfârl", function() {deepEqual( Stem("scăfârlie"), "scăfârl");});
test("scăldat -> scăldat", function() {deepEqual( Stem("scăldat"), "scăldat");});
test("scăldată -> scăldat", function() {deepEqual( Stem("scăldată"), "scăldat");});
test("scăldate -> scăldat", function() {deepEqual( Stem("scăldate"), "scăldat");});
test("scăpa -> scăp", function() {deepEqual( Stem("scăpa"), "scăp");});
test("scăpat -> scăpat", function() {deepEqual( Stem("scăpat"), "scăpat");});
test("scăpaţi -> scăp", function() {deepEqual( Stem("scăpaţi"), "scăp");});
test("scăpăm -> scăp", function() {deepEqual( Stem("scăpăm"), "scăp");});
test("scării -> scăr", function() {deepEqual( Stem("scării"), "scăr");});
test("scările -> scăr", function() {deepEqual( Stem("scările"), "scăr");});
test("scăzut -> scăzut", function() {deepEqual( Stem("scăzut"), "scăzut");});
test("scăzută -> scăzut", function() {deepEqual( Stem("scăzută"), "scăzut");});
test("scena -> scen", function() {deepEqual( Stem("scena"), "scen");});
test("scenă -> scen", function() {deepEqual( Stem("scenă"), "scen");});
test("scene -> scen", function() {deepEqual( Stem("scene"), "scen");});
test("scenele -> scen", function() {deepEqual( Stem("scenele"), "scen");});
test("sceptic -> sceptic", function() {deepEqual( Stem("sceptic"), "sceptic");});
test("scepticism -> scepticist", function() {deepEqual( Stem("scepticism"), "scepticist");});
test("scepticismul -> scepticist", function() {deepEqual( Stem("scepticismul"), "scepticist");});
test("scepticul -> sceptic", function() {deepEqual( Stem("scepticul"), "sceptic");});
test("scevola -> scevol", function() {deepEqual( Stem("scevola"), "scevol");});
test("scheler -> scheler", function() {deepEqual( Stem("scheler"), "scheler");});
test("scheletul -> schelet", function() {deepEqual( Stem("scheletul"), "schelet");});
test("schema -> schem", function() {deepEqual( Stem("schema"), "schem");});
test("schematic -> schemat", function() {deepEqual( Stem("schematic"), "schemat");});
test("schematică -> schemat", function() {deepEqual( Stem("schematică"), "schemat");});
test("schemă -> schem", function() {deepEqual( Stem("schemă"), "schem");});
test("schijă -> schij", function() {deepEqual( Stem("schijă"), "schij");});
test("schimb -> schimb", function() {deepEqual( Stem("schimb"), "schimb");});
test("schimba -> schimb", function() {deepEqual( Stem("schimba"), "schimb");});
test("schimbam -> schimb", function() {deepEqual( Stem("schimbam"), "schimb");});
test("schimbare -> schimb", function() {deepEqual( Stem("schimbare"), "schimb");});
test("schimbarea -> schimb", function() {deepEqual( Stem("schimbarea"), "schimb");});
test("schimbase -> schimb", function() {deepEqual( Stem("schimbase"), "schimb");});
test("schimbat -> schimbat", function() {deepEqual( Stem("schimbat"), "schimbat");});
test("schimbată -> schimbat", function() {deepEqual( Stem("schimbată"), "schimbat");});
test("schimbate -> schimbat", function() {deepEqual( Stem("schimbate"), "schimbat");});
test("schimbaţi -> schimb", function() {deepEqual( Stem("schimbaţi"), "schimb");});
test("schimbau -> schimb", function() {deepEqual( Stem("schimbau"), "schimb");});
test("schimbând -> schimb", function() {deepEqual( Stem("schimbând"), "schimb");});
test("schimbându -> schimb", function() {deepEqual( Stem("schimbându"), "schimb");});
test("schimbă -> schimb", function() {deepEqual( Stem("schimbă"), "schimb");});
test("schimbăm -> schimb", function() {deepEqual( Stem("schimbăm"), "schimb");});
test("schimbări -> schimbăr", function() {deepEqual( Stem("schimbări"), "schimbăr");});
test("schimbării -> schimbăr", function() {deepEqual( Stem("schimbării"), "schimbăr");});
test("schimbările -> schimbăr", function() {deepEqual( Stem("schimbările"), "schimbăr");});
test("schimbărilor -> schimbăr", function() {deepEqual( Stem("schimbărilor"), "schimbăr");});
test("schimbe -> schimb", function() {deepEqual( Stem("schimbe"), "schimb");});
test("schimbul -> schimb", function() {deepEqual( Stem("schimbul"), "schimb");});
test("schimburi -> schimbur", function() {deepEqual( Stem("schimburi"), "schimbur");});
test("schimonosirea -> schimonos", function() {deepEqual( Stem("schimonosirea"), "schimonos");});
test("schitului -> schit", function() {deepEqual( Stem("schitului"), "schit");});
test("schiţat -> schiţat", function() {deepEqual( Stem("schiţat"), "schiţat");});
test("schiţă -> schiţ", function() {deepEqual( Stem("schiţă"), "schiţ");});
test("schlief -> schlief", function() {deepEqual( Stem("schlief"), "schlief");});
test("schnorchen -> schnorchen", function() {deepEqual( Stem("schnorchen"), "schnorchen");});
test("schopenhauer -> schopenhauer", function() {deepEqual( Stem("schopenhauer"), "schopenhauer");});
test("schulpforta -> schulpfort", function() {deepEqual( Stem("schulpforta"), "schulpfort");});
test("schweizer -> schweizer", function() {deepEqual( Stem("schweizer"), "schweizer");});
test("sclav -> sclav", function() {deepEqual( Stem("sclav"), "sclav");});
test("sclipitoare -> sclipit", function() {deepEqual( Stem("sclipitoare"), "sclipit");});
test("scoală -> scoal", function() {deepEqual( Stem("scoală"), "scoal");});
test("scoale -> scoal", function() {deepEqual( Stem("scoale"), "scoal");});
test("scoarţă -> scoarţ", function() {deepEqual( Stem("scoarţă"), "scoarţ");});
test("scoarţe -> scoarţ", function() {deepEqual( Stem("scoarţe"), "scoarţ");});
test("scoasă -> scoas", function() {deepEqual( Stem("scoasă"), "scoas");});
test("scoase -> scoas", function() {deepEqual( Stem("scoase"), "scoas");});
test("scoată -> scoat", function() {deepEqual( Stem("scoată"), "scoat");});
test("scoate -> scoat", function() {deepEqual( Stem("scoate"), "scoat");});
test("scoatem -> scoat", function() {deepEqual( Stem("scoatem"), "scoat");});
test("scoaţă -> scoaţ", function() {deepEqual( Stem("scoaţă"), "scoaţ");});
test("scobirea -> scob", function() {deepEqual( Stem("scobirea"), "scob");});
test("scobitoare -> scobit", function() {deepEqual( Stem("scobitoare"), "scobit");});
test("scoboare -> scoboar", function() {deepEqual( Stem("scoboare"), "scoboar");});
test("scocul -> scoc", function() {deepEqual( Stem("scocul"), "scoc");});
test("scol -> scol", function() {deepEqual( Stem("scol"), "scol");});
test("scolastică -> scolast", function() {deepEqual( Stem("scolastică"), "scolast");});
test("scolasticii -> scolast", function() {deepEqual( Stem("scolasticii"), "scolast");});
test("scop -> scop", function() {deepEqual( Stem("scop"), "scop");});
test("scormonind -> scormon", function() {deepEqual( Stem("scormonind"), "scormon");});
test("scornitură -> scornit", function() {deepEqual( Stem("scornitură"), "scornit");});
test("scorojit -> scoroj", function() {deepEqual( Stem("scorojit"), "scoroj");});
test("scorojiţi -> scoroj", function() {deepEqual( Stem("scorojiţi"), "scoroj");});
test("scorţoase -> scorţoas", function() {deepEqual( Stem("scorţoase"), "scorţoas");});
test("scorţos -> scorţos", function() {deepEqual( Stem("scorţos"), "scorţos");});
test("scos -> scos", function() {deepEqual( Stem("scos"), "scos");});
test("scosese -> sco", function() {deepEqual( Stem("scosese"), "sco");});
test("scoşi -> scoş", function() {deepEqual( Stem("scoşi"), "scoş");});
test("scot -> scot", function() {deepEqual( Stem("scot"), "scot");});
test("scotea -> scot", function() {deepEqual( Stem("scotea"), "scot");});
test("scoteau -> scot", function() {deepEqual( Stem("scoteau"), "scot");});
test("scotocesc -> scotoc", function() {deepEqual( Stem("scotocesc"), "scotoc");});
test("scotocind -> scotoc", function() {deepEqual( Stem("scotocind"), "scotoc");});
test("scotociri -> scotocir", function() {deepEqual( Stem("scotociri"), "scotocir");});
test("scoţând -> scoţ", function() {deepEqual( Stem("scoţând"), "scoţ");});
test("scoţi -> scoţ", function() {deepEqual( Stem("scoţi"), "scoţ");});
test("scoţiene -> scoţien", function() {deepEqual( Stem("scoţiene"), "scoţien");});
test("scria -> scri", function() {deepEqual( Stem("scria"), "scri");});
test("scriau -> scriau", function() {deepEqual( Stem("scriau"), "scriau");});
test("scribe -> scrib", function() {deepEqual( Stem("scribe"), "scrib");});
test("scribi -> scrib", function() {deepEqual( Stem("scribi"), "scrib");});
test("scrie -> scrie", function() {deepEqual( Stem("scrie"), "scrie");});
test("scrierii -> scrier", function() {deepEqual( Stem("scrierii"), "scrier");});
test("scrii -> scri", function() {deepEqual( Stem("scrii"), "scri");});
test("scriind -> scriind", function() {deepEqual( Stem("scriind"), "scriind");});
test("scriitoare -> scriitoar", function() {deepEqual( Stem("scriitoare"), "scriitoar");});
test("scriitor -> scriitor", function() {deepEqual( Stem("scriitor"), "scriitor");});
test("scriitorii -> scriitor", function() {deepEqual( Stem("scriitorii"), "scriitor");});
test("scriitorul -> scriitor", function() {deepEqual( Stem("scriitorul"), "scriitor");});
test("scriitorului -> scriitor", function() {deepEqual( Stem("scriitorului"), "scriitor");});
test("scrijelat -> scrijel", function() {deepEqual( Stem("scrijelat"), "scrijel");});
test("scris -> scris", function() {deepEqual( Stem("scris"), "scris");});
test("scrisă -> scris", function() {deepEqual( Stem("scrisă"), "scris");});
test("scrise -> scri", function() {deepEqual( Stem("scrise"), "scri");});
test("scrisoare -> scrisoar", function() {deepEqual( Stem("scrisoare"), "scrisoar");});
test("scrisoarea -> scrisoar", function() {deepEqual( Stem("scrisoarea"), "scrisoar");});
test("scrisori -> scrisor", function() {deepEqual( Stem("scrisori"), "scrisor");});
test("scrisul -> scris", function() {deepEqual( Stem("scrisul"), "scris");});
test("scriu -> scriu", function() {deepEqual( Stem("scriu"), "scriu");});
test("scrobit -> scrobit", function() {deepEqual( Stem("scrobit"), "scrobit");});
test("scrobită -> scrobit", function() {deepEqual( Stem("scrobită"), "scrobit");});
test("scrumiera -> scrumier", function() {deepEqual( Stem("scrumiera"), "scrumier");});
test("scrumiere -> scrumier", function() {deepEqual( Stem("scrumiere"), "scrumier");});
test("scrumierele -> scrumier", function() {deepEqual( Stem("scrumierele"), "scrumier");});
test("scrupul -> scrup", function() {deepEqual( Stem("scrupul"), "scrup");});
test("scrupule -> scrupul", function() {deepEqual( Stem("scrupule"), "scrupul");});
test("scrupulele -> scrupul", function() {deepEqual( Stem("scrupulele"), "scrupul");});
test("scrutează -> scrut", function() {deepEqual( Stem("scrutează"), "scrut");});
test("scrutin -> scrutin", function() {deepEqual( Stem("scrutin"), "scrutin");});
test("scrutine -> scrutin", function() {deepEqual( Stem("scrutine"), "scrutin");});
test("scrutinelor -> scrutin", function() {deepEqual( Stem("scrutinelor"), "scrutin");});
test("scrutinurilor -> scrutinur", function() {deepEqual( Stem("scrutinurilor"), "scrutinur");});
test("scufia -> scuf", function() {deepEqual( Stem("scufia"), "scuf");});
test("scufiţă -> scufiţ", function() {deepEqual( Stem("scufiţă"), "scufiţ");});
test("scufunda -> scufund", function() {deepEqual( Stem("scufunda"), "scufund");});
test("scufundare -> scufund", function() {deepEqual( Stem("scufundare"), "scufund");});
test("scufundarea -> scufund", function() {deepEqual( Stem("scufundarea"), "scufund");});
test("scufundă -> scufund", function() {deepEqual( Stem("scufundă"), "scufund");});
test("scufundări -> scufundăr", function() {deepEqual( Stem("scufundări"), "scufundăr");});
test("scufunzi -> scufunz", function() {deepEqual( Stem("scufunzi"), "scufunz");});
test("scuipa -> scuip", function() {deepEqual( Stem("scuipa"), "scuip");});
test("scuipară -> scuip", function() {deepEqual( Stem("scuipară"), "scuip");});
test("scuipat -> scuipat", function() {deepEqual( Stem("scuipat"), "scuipat");});
test("scula -> scul", function() {deepEqual( Stem("scula"), "scul");});
test("sculat -> sculat", function() {deepEqual( Stem("sculat"), "sculat");});
test("sculă -> scul", function() {deepEqual( Stem("sculă"), "scul");});
test("scule -> scul", function() {deepEqual( Stem("scule"), "scul");});
test("sculelor -> scul", function() {deepEqual( Stem("sculelor"), "scul");});
test("sculpta -> sculpt", function() {deepEqual( Stem("sculpta"), "sculpt");});
test("sculptate -> sculptat", function() {deepEqual( Stem("sculptate"), "sculptat");});
test("sculptează -> sculpt", function() {deepEqual( Stem("sculptează"), "sculpt");});
test("sculptor -> sculptor", function() {deepEqual( Stem("sculptor"), "sculptor");});
test("sculptură -> sculpt", function() {deepEqual( Stem("sculptură"), "sculpt");});
test("sculpturi -> sculptur", function() {deepEqual( Stem("sculpturi"), "sculptur");});
test("scump -> scump", function() {deepEqual( Stem("scump"), "scump");});
test("scumpă -> scump", function() {deepEqual( Stem("scumpă"), "scump");});
test("scumpe -> scump", function() {deepEqual( Stem("scumpe"), "scump");});
test("scumpesc -> scump", function() {deepEqual( Stem("scumpesc"), "scump");});
test("scumpire -> scump", function() {deepEqual( Stem("scumpire"), "scump");});
test("scumpiri -> scumpir", function() {deepEqual( Stem("scumpiri"), "scumpir");});
test("scumpit -> scumpit", function() {deepEqual( Stem("scumpit"), "scumpit");});
test("scund -> scund", function() {deepEqual( Stem("scund"), "scund");});
test("scundă -> scund", function() {deepEqual( Stem("scundă"), "scund");});
test("scurgă -> scurg", function() {deepEqual( Stem("scurgă"), "scurg");});
test("scurge -> scurg", function() {deepEqual( Stem("scurge"), "scurg");});
test("scurgere -> scurg", function() {deepEqual( Stem("scurgere"), "scurg");});
test("scurgerea -> scurg", function() {deepEqual( Stem("scurgerea"), "scurg");});
test("scurs -> scurs", function() {deepEqual( Stem("scurs"), "scurs");});
test("scurt -> scurt", function() {deepEqual( Stem("scurt"), "scurt");});
test("scurtat -> scurtat", function() {deepEqual( Stem("scurtat"), "scurtat");});
test("scurtă -> scurt", function() {deepEqual( Stem("scurtă"), "scurt");});
test("scurte -> scurt", function() {deepEqual( Stem("scurte"), "scurt");});
test("scutite -> scutit", function() {deepEqual( Stem("scutite"), "scutit");});
test("scutur -> scutur", function() {deepEqual( Stem("scutur"), "scutur");});
test("scuturate -> scutur", function() {deepEqual( Stem("scuturate"), "scutur");});
test("scuturi -> scutur", function() {deepEqual( Stem("scuturi"), "scutur");});
test("scuza -> scuz", function() {deepEqual( Stem("scuza"), "scuz");});
test("scuză -> scuz", function() {deepEqual( Stem("scuză"), "scuz");});
test("scuze -> scuz", function() {deepEqual( Stem("scuze"), "scuz");});
test("se -> se", function() {deepEqual( Stem("se"), "se");});
test("seacă -> seac", function() {deepEqual( Stem("seacă"), "seac");});
test("seama -> seam", function() {deepEqual( Stem("seama"), "seam");});
test("seamă -> seam", function() {deepEqual( Stem("seamă"), "seam");});
test("seamăn -> seamăn", function() {deepEqual( Stem("seamăn"), "seamăn");});
test("seamănă -> seamăn", function() {deepEqual( Stem("seamănă"), "seamăn");});
test("seara -> sear", function() {deepEqual( Stem("seara"), "sear");});
test("seară -> sear", function() {deepEqual( Stem("seară"), "sear");});
test("sec -> sec", function() {deepEqual( Stem("sec"), "sec");});
test("secătuită -> secătu", function() {deepEqual( Stem("secătuită"), "secătu");});
test("sechsunddreissig -> sechsunddreissig", function() {deepEqual( Stem("sechsunddreissig"), "sechsunddreissig");});
test("secol -> secol", function() {deepEqual( Stem("secol"), "secol");});
test("secolele -> secol", function() {deepEqual( Stem("secolele"), "secol");});
test("secolul -> secol", function() {deepEqual( Stem("secolul"), "secol");});
test("secolului -> secol", function() {deepEqual( Stem("secolului"), "secol");});
test("secret -> secret", function() {deepEqual( Stem("secret"), "secret");});
test("secretar -> secretar", function() {deepEqual( Stem("secretar"), "secretar");});
test("secretarul -> secretar", function() {deepEqual( Stem("secretarul"), "secretar");});
test("secretarului -> secretar", function() {deepEqual( Stem("secretarului"), "secretar");});
test("secretă -> secret", function() {deepEqual( Stem("secretă"), "secret");});
test("secrete -> secret", function() {deepEqual( Stem("secrete"), "secret");});
test("secretează -> secret", function() {deepEqual( Stem("secretează"), "secret");});
test("secretul -> secret", function() {deepEqual( Stem("secretul"), "secret");});
test("sectar -> sectar", function() {deepEqual( Stem("sectar"), "sectar");});
test("sectoare -> sectoar", function() {deepEqual( Stem("sectoare"), "sectoar");});
test("secţie -> secţ", function() {deepEqual( Stem("secţie"), "secţ");});
test("secţiunea -> secţiun", function() {deepEqual( Stem("secţiunea"), "secţiun");});
test("secţiunile -> secţiun", function() {deepEqual( Stem("secţiunile"), "secţiun");});
test("secundar -> secundar", function() {deepEqual( Stem("secundar"), "secundar");});
test("secundară -> secund", function() {deepEqual( Stem("secundară"), "secund");});
test("secundare -> secund", function() {deepEqual( Stem("secundare"), "secund");});
test("secundarele -> secund", function() {deepEqual( Stem("secundarele"), "secund");});
test("secundari -> secundar", function() {deepEqual( Stem("secundari"), "secundar");});
test("secundă -> secund", function() {deepEqual( Stem("secundă"), "secund");});
test("secunde -> secund", function() {deepEqual( Stem("secunde"), "secund");});
test("secvenţă -> secvenţ", function() {deepEqual( Stem("secvenţă"), "secvenţ");});
test("secvenţe -> secvenţ", function() {deepEqual( Stem("secvenţe"), "secvenţ");});
test("sedentară -> sedent", function() {deepEqual( Stem("sedentară"), "sedent");});
test("seducţie -> seducţ", function() {deepEqual( Stem("seducţie"), "seducţ");});
test("seducţiilor -> seducţ", function() {deepEqual( Stem("seducţiilor"), "seducţ");});
test("sedus -> sedus", function() {deepEqual( Stem("sedus"), "sedus");});
test("segmente -> segment", function() {deepEqual( Stem("segmente"), "segment");});
test("segmentului -> segment", function() {deepEqual( Stem("segmentului"), "segment");});
test("sejurului -> sejur", function() {deepEqual( Stem("sejurului"), "sejur");});
test("selecta -> select", function() {deepEqual( Stem("selecta"), "select");});
test("selectare -> select", function() {deepEqual( Stem("selectare"), "select");});
test("selectat -> select", function() {deepEqual( Stem("selectat"), "select");});
test("selectaţi -> select", function() {deepEqual( Stem("selectaţi"), "select");});
test("selectează -> select", function() {deepEqual( Stem("selectează"), "select");});
test("selectiv -> select", function() {deepEqual( Stem("selectiv"), "select");});
test("selectînd -> selectînd", function() {deepEqual( Stem("selectînd"), "selectînd");});
test("selector -> selector", function() {deepEqual( Stem("selector"), "selector");});
test("selectorul -> selector", function() {deepEqual( Stem("selectorul"), "selector");});
test("selecţia -> selecţ", function() {deepEqual( Stem("selecţia"), "selecţ");});
test("selecţii -> selecţ", function() {deepEqual( Stem("selecţii"), "selecţ");});
test("selecţionare -> selecţion", function() {deepEqual( Stem("selecţionare"), "selecţion");});
test("selecţionat -> selecţion", function() {deepEqual( Stem("selecţionat"), "selecţion");});
test("selecţionează -> selecţion", function() {deepEqual( Stem("selecţionează"), "selecţion");});
test("selecţiuni -> select", function() {deepEqual( Stem("selecţiuni"), "select");});
test("selenară -> selen", function() {deepEqual( Stem("selenară"), "selen");});
test("semafoare -> semafoar", function() {deepEqual( Stem("semafoare"), "semafoar");});
test("semafoarelor -> semafoar", function() {deepEqual( Stem("semafoarelor"), "semafoar");});
test("semafor -> semafor", function() {deepEqual( Stem("semafor"), "semafor");});
test("semantic -> semant", function() {deepEqual( Stem("semantic"), "semant");});
test("semantica -> semant", function() {deepEqual( Stem("semantica"), "semant");});
test("semantică -> semant", function() {deepEqual( Stem("semantică"), "semant");});
test("semăna -> semăn", function() {deepEqual( Stem("semăna"), "semăn");});
test("semănată -> semăn", function() {deepEqual( Stem("semănată"), "semăn");});
test("semănînd -> semănînd", function() {deepEqual( Stem("semănînd"), "semănînd");});
test("semeaţă -> semeaţ", function() {deepEqual( Stem("semeaţă"), "semeaţ");});
test("semene -> semen", function() {deepEqual( Stem("semene"), "semen");});
test("semeni -> semen", function() {deepEqual( Stem("semeni"), "semen");});
test("semenii -> semen", function() {deepEqual( Stem("semenii"), "semen");});
test("semenul -> semen", function() {deepEqual( Stem("semenul"), "semen");});
test("semenului -> semen", function() {deepEqual( Stem("semenului"), "semen");});
test("semeţ -> semeţ", function() {deepEqual( Stem("semeţ"), "semeţ");});
test("semeţie -> semeţ", function() {deepEqual( Stem("semeţie"), "semeţ");});
test("semidocţi -> semidocţ", function() {deepEqual( Stem("semidocţi"), "semidocţ");});
test("seminar -> seminar", function() {deepEqual( Stem("seminar"), "seminar");});
test("semipercutantă -> semipercut", function() {deepEqual( Stem("semipercutantă"), "semipercut");});
test("semitonuri -> semitonur", function() {deepEqual( Stem("semitonuri"), "semitonur");});
test("semn -> semn", function() {deepEqual( Stem("semn"), "semn");});
test("semnal -> semnal", function() {deepEqual( Stem("semnal"), "semnal");});
test("semnalată -> semnal", function() {deepEqual( Stem("semnalată"), "semnal");});
test("semnale -> semnal", function() {deepEqual( Stem("semnale"), "semnal");});
test("semnalează -> semnal", function() {deepEqual( Stem("semnalează"), "semnal");});
test("semnalul -> semnal", function() {deepEqual( Stem("semnalul"), "semnal");});
test("semnat -> semnat", function() {deepEqual( Stem("semnat"), "semnat");});
test("semnate -> semnat", function() {deepEqual( Stem("semnate"), "semnat");});
test("semnând -> semn", function() {deepEqual( Stem("semnând"), "semn");});
test("semnării -> semnăr", function() {deepEqual( Stem("semnării"), "semnăr");});
test("semnătura -> semnătur", function() {deepEqual( Stem("semnătura"), "semnătur");});
test("semnăturile -> semnătur", function() {deepEqual( Stem("semnăturile"), "semnătur");});
test("semne -> semn", function() {deepEqual( Stem("semne"), "semn");});
test("semnează -> semn", function() {deepEqual( Stem("semnează"), "semn");});
test("semnele -> semn", function() {deepEqual( Stem("semnele"), "semn");});
test("semneze -> semn", function() {deepEqual( Stem("semneze"), "semn");});
test("semnificativ -> semnific", function() {deepEqual( Stem("semnificativ"), "semnific");});
test("semnificativă -> semnific", function() {deepEqual( Stem("semnificativă"), "semnific");});
test("semnificaţie -> semnific", function() {deepEqual( Stem("semnificaţie"), "semnific");});
test("semnifică -> semnif", function() {deepEqual( Stem("semnifică"), "semnif");});
test("semnul -> semn", function() {deepEqual( Stem("semnul"), "semn");});
test("senat -> senat", function() {deepEqual( Stem("senat"), "senat");});
test("senin -> senin", function() {deepEqual( Stem("senin"), "senin");});
test("senină -> senin", function() {deepEqual( Stem("senină"), "senin");});
test("seninătate -> seninăt", function() {deepEqual( Stem("seninătate"), "seninăt");});
test("seninătatea -> seninăt", function() {deepEqual( Stem("seninătatea"), "seninăt");});
test("sens -> sens", function() {deepEqual( Stem("sens"), "sens");});
test("sensibil -> sensibil", function() {deepEqual( Stem("sensibil"), "sensibil");});
test("sensibilă -> sensibil", function() {deepEqual( Stem("sensibilă"), "sensibil");});
test("sensibile -> sensib", function() {deepEqual( Stem("sensibile"), "sensib");});
test("sensibili -> sensibil", function() {deepEqual( Stem("sensibili"), "sensibil");});
test("sensibilitate -> sensibil", function() {deepEqual( Stem("sensibilitate"), "sensibil");});
test("sensibilitatea -> sensibil", function() {deepEqual( Stem("sensibilitatea"), "sensibil");});
test("sensibilităţii -> sensibil", function() {deepEqual( Stem("sensibilităţii"), "sensibil");});
test("sensibilite -> sensibil", function() {deepEqual( Stem("sensibilite"), "sensibil");});
test("sensibilizat -> sensibiliz", function() {deepEqual( Stem("sensibilizat"), "sensibiliz");});
test("sensu -> sensu", function() {deepEqual( Stem("sensu"), "sensu");});
test("sensul -> sens", function() {deepEqual( Stem("sensul"), "sens");});
test("sensului -> sens", function() {deepEqual( Stem("sensului"), "sens");});
test("sensuri -> sensur", function() {deepEqual( Stem("sensuri"), "sensur");});
test("sensurile -> sensur", function() {deepEqual( Stem("sensurile"), "sensur");});
test("sentiment -> sentiment", function() {deepEqual( Stem("sentiment"), "sentiment");});
test("sentimental -> sentimental", function() {deepEqual( Stem("sentimental"), "sentimental");});
test("sentimentală -> sentimental", function() {deepEqual( Stem("sentimentală"), "sentimental");});
test("sentimentale -> sentimental", function() {deepEqual( Stem("sentimentale"), "sentimental");});
test("sentimentali -> sentimental", function() {deepEqual( Stem("sentimentali"), "sentimental");});
test("sentimentalism -> sentimentalist", function() {deepEqual( Stem("sentimentalism"), "sentimentalist");});
test("sentimentalismul -> sentimentalist", function() {deepEqual( Stem("sentimentalismul"), "sentimentalist");});
test("sentimente -> sentiment", function() {deepEqual( Stem("sentimente"), "sentiment");});
test("sentimentele -> sentiment", function() {deepEqual( Stem("sentimentele"), "sentiment");});
test("sentimentelor -> sentiment", function() {deepEqual( Stem("sentimentelor"), "sentiment");});
test("sentimentul -> sentiment", function() {deepEqual( Stem("sentimentul"), "sentiment");});
test("sentimentului -> sentiment", function() {deepEqual( Stem("sentimentului"), "sentiment");});
test("sentinţă -> sentinţ", function() {deepEqual( Stem("sentinţă"), "sentinţ");});
test("sentinţe -> sentinţ", function() {deepEqual( Stem("sentinţe"), "sentinţ");});
test("senzaţia -> senz", function() {deepEqual( Stem("senzaţia"), "senz");});
test("senzaţie -> senz", function() {deepEqual( Stem("senzaţie"), "senz");});
test("senzaţiei -> senz", function() {deepEqual( Stem("senzaţiei"), "senz");});
test("senzaţii -> senz", function() {deepEqual( Stem("senzaţii"), "senz");});
test("senzaţiile -> senz", function() {deepEqual( Stem("senzaţiile"), "senz");});
test("senzaţiilor -> senz", function() {deepEqual( Stem("senzaţiilor"), "senz");});
test("senzaţionale -> senzaţional", function() {deepEqual( Stem("senzaţionale"), "senzaţional");});
test("senzaţiune -> senzat", function() {deepEqual( Stem("senzaţiune"), "senzat");});
test("senzaţiunea -> senzat", function() {deepEqual( Stem("senzaţiunea"), "senzat");});
test("senzaţiunile -> senzat", function() {deepEqual( Stem("senzaţiunile"), "senzat");});
test("senzoriale -> senzorial", function() {deepEqual( Stem("senzoriale"), "senzorial");});
test("senzual -> senzual", function() {deepEqual( Stem("senzual"), "senzual");});
test("senzualism -> senzualist", function() {deepEqual( Stem("senzualism"), "senzualist");});
test("senzualitate -> senzual", function() {deepEqual( Stem("senzualitate"), "senzual");});
test("separat -> separ", function() {deepEqual( Stem("separat"), "separ");});
test("separată -> separ", function() {deepEqual( Stem("separată"), "separ");});
test("separatiste -> separatist", function() {deepEqual( Stem("separatiste"), "separatist");});
test("separaţi -> separ", function() {deepEqual( Stem("separaţi"), "separ");});
test("separaţia -> separ", function() {deepEqual( Stem("separaţia"), "separ");});
test("septembrie -> septembr", function() {deepEqual( Stem("septembrie"), "septembr");});
test("septuagenarilor -> septuagenar", function() {deepEqual( Stem("septuagenarilor"), "septuagenar");});
test("serbare -> serb", function() {deepEqual( Stem("serbare"), "serb");});
test("sergent -> sergent", function() {deepEqual( Stem("sergent"), "sergent");});
test("sergentul -> sergent", function() {deepEqual( Stem("sergentul"), "sergent");});
test("sergentului -> sergent", function() {deepEqual( Stem("sergentului"), "sergent");});
test("sergenţi -> sergenţ", function() {deepEqual( Stem("sergenţi"), "sergenţ");});
test("sergenţii -> sergenţ", function() {deepEqual( Stem("sergenţii"), "sergenţ");});
test("seri -> ser", function() {deepEqual( Stem("seri"), "ser");});
test("seria -> seri", function() {deepEqual( Stem("seria"), "seri");});
test("serie -> ser", function() {deepEqual( Stem("serie"), "ser");});
test("serii -> ser", function() {deepEqual( Stem("serii"), "ser");});
test("seriile -> ser", function() {deepEqual( Stem("seriile"), "ser");});
test("serioasă -> serioas", function() {deepEqual( Stem("serioasă"), "serioas");});
test("serioase -> serioas", function() {deepEqual( Stem("serioase"), "serioas");});
test("serios -> serios", function() {deepEqual( Stem("serios"), "serios");});
test("serioşi -> serioş", function() {deepEqual( Stem("serioşi"), "serioş");});
test("seriozitatea -> serioz", function() {deepEqual( Stem("seriozitatea"), "serioz");});
test("sertare -> sert", function() {deepEqual( Stem("sertare"), "sert");});
test("sertarele -> sert", function() {deepEqual( Stem("sertarele"), "sert");});
test("servea -> serv", function() {deepEqual( Stem("servea"), "serv");});
test("servească -> serv", function() {deepEqual( Stem("servească"), "serv");});
test("servesc -> serv", function() {deepEqual( Stem("servesc"), "serv");});
test("serveşte -> serv", function() {deepEqual( Stem("serveşte"), "serv");});
test("servi -> serv", function() {deepEqual( Stem("servi"), "serv");});
test("servicii -> servic", function() {deepEqual( Stem("servicii"), "servic");});
test("serviciile -> servic", function() {deepEqual( Stem("serviciile"), "servic");});
test("serviciu -> serviciu", function() {deepEqual( Stem("serviciu"), "serviciu");});
test("serviciul -> servic", function() {deepEqual( Stem("serviciul"), "servic");});
test("serviciului -> servic", function() {deepEqual( Stem("serviciului"), "servic");});
test("servil -> servil", function() {deepEqual( Stem("servil"), "servil");});
test("servilitate -> servil", function() {deepEqual( Stem("servilitate"), "servil");});
test("servise -> serv", function() {deepEqual( Stem("servise"), "serv");});
test("servit -> servit", function() {deepEqual( Stem("servit"), "servit");});
test("servitoare -> servit", function() {deepEqual( Stem("servitoare"), "servit");});
test("servitoarea -> servit", function() {deepEqual( Stem("servitoarea"), "servit");});
test("servitoarei -> servitoare", function() {deepEqual( Stem("servitoarei"), "servitoare");});
test("servitor -> servit", function() {deepEqual( Stem("servitor"), "servit");});
test("servitorului -> servit", function() {deepEqual( Stem("servitorului"), "servit");});
test("servituţii -> servituţ", function() {deepEqual( Stem("servituţii"), "servituţ");});
test("sesiunea -> sesiun", function() {deepEqual( Stem("sesiunea"), "sesiun");});
test("sete -> set", function() {deepEqual( Stem("sete"), "set");});
test("setea -> set", function() {deepEqual( Stem("setea"), "set");});
test("setoasă -> setoas", function() {deepEqual( Stem("setoasă"), "setoas");});
test("seu -> seu", function() {deepEqual( Stem("seu"), "seu");});
test("seva -> sev", function() {deepEqual( Stem("seva"), "sev");});
test("sevă -> sev", function() {deepEqual( Stem("sevă"), "sev");});
test("sever -> sever", function() {deepEqual( Stem("sever"), "sever");});
test("severă -> sever", function() {deepEqual( Stem("severă"), "sever");});
test("severe -> sever", function() {deepEqual( Stem("severe"), "sever");});
test("severitate -> sever", function() {deepEqual( Stem("severitate"), "sever");});
test("severitatea -> sever", function() {deepEqual( Stem("severitatea"), "sever");});
test("sexe -> sex", function() {deepEqual( Stem("sexe"), "sex");});
test("sexual -> sexual", function() {deepEqual( Stem("sexual"), "sexual");});
test("sexuală -> sexual", function() {deepEqual( Stem("sexuală"), "sexual");});
test("sexuale -> sexual", function() {deepEqual( Stem("sexuale"), "sexual");});
test("sexualiste -> sexualist", function() {deepEqual( Stem("sexualiste"), "sexualist");});
test("sexul -> sex", function() {deepEqual( Stem("sexul"), "sex");});
test("sezion -> sezion", function() {deepEqual( Stem("sezion"), "sezion");});
test("seziune -> seziun", function() {deepEqual( Stem("seziune"), "seziun");});
test("sfanţ -> sfanţ", function() {deepEqual( Stem("sfanţ"), "sfanţ");});
test("sfat -> sfat", function() {deepEqual( Stem("sfat"), "sfat");});
test("sfatul -> sfat", function() {deepEqual( Stem("sfatul"), "sfat");});
test("sfaturi -> sfatur", function() {deepEqual( Stem("sfaturi"), "sfatur");});
test("sfânt -> sfânt", function() {deepEqual( Stem("sfânt"), "sfânt");});
test("sfânta -> sfânt", function() {deepEqual( Stem("sfânta"), "sfânt");});
test("sfântă -> sfânt", function() {deepEqual( Stem("sfântă"), "sfânt");});
test("sfântu -> sfântu", function() {deepEqual( Stem("sfântu"), "sfântu");});
test("sfântul -> sfânt", function() {deepEqual( Stem("sfântul"), "sfânt");});
test("sfârşeală -> sfârşeal", function() {deepEqual( Stem("sfârşeală"), "sfârşeal");});
test("sfârşească -> sfârş", function() {deepEqual( Stem("sfârşească"), "sfârş");});
test("sfârşesc -> sfârş", function() {deepEqual( Stem("sfârşesc"), "sfârş");});
test("sfârşeşte -> sfârş", function() {deepEqual( Stem("sfârşeşte"), "sfârş");});
test("sfârşi -> sfârş", function() {deepEqual( Stem("sfârşi"), "sfârş");});
test("sfârşise -> sfârş", function() {deepEqual( Stem("sfârşise"), "sfârş");});
test("sfârşit -> sfârşit", function() {deepEqual( Stem("sfârşit"), "sfârşit");});
test("sfârşită -> sfârşit", function() {deepEqual( Stem("sfârşită"), "sfârşit");});
test("sfârşite -> sfârşit", function() {deepEqual( Stem("sfârşite"), "sfârşit");});
test("sfârşitul -> sfârşit", function() {deepEqual( Stem("sfârşitul"), "sfârşit");});
test("sfârşiturile -> sfârşitur", function() {deepEqual( Stem("sfârşiturile"), "sfârşitur");});
test("sfârşiţi -> sfârş", function() {deepEqual( Stem("sfârşiţi"), "sfârş");});
test("sfâşia -> sfâş", function() {deepEqual( Stem("sfâşia"), "sfâş");});
test("sfâşiat -> sfâşiat", function() {deepEqual( Stem("sfâşiat"), "sfâşiat");});
test("sfâşiată -> sfâşiat", function() {deepEqual( Stem("sfâşiată"), "sfâşiat");});
test("sfâşie -> sfâş", function() {deepEqual( Stem("sfâşie"), "sfâş");});
test("sfâşietor -> sfâşietor", function() {deepEqual( Stem("sfâşietor"), "sfâşietor");});
test("sfărâmat -> sfărâm", function() {deepEqual( Stem("sfărâmat"), "sfărâm");});
test("sfărâmate -> sfărâm", function() {deepEqual( Stem("sfărâmate"), "sfărâm");});
test("sfărâmături -> sfărâmătur", function() {deepEqual( Stem("sfărâmături"), "sfărâmătur");});
test("sfărâme -> sfărâm", function() {deepEqual( Stem("sfărâme"), "sfărâm");});
test("sfătos -> sfătos", function() {deepEqual( Stem("sfătos"), "sfătos");});
test("sfătuiesc -> sfătui", function() {deepEqual( Stem("sfătuiesc"), "sfătui");});
test("sfătuieşte -> sfătui", function() {deepEqual( Stem("sfătuieşte"), "sfătui");});
test("sfeclă -> sfecl", function() {deepEqual( Stem("sfeclă"), "sfecl");});
test("sfera -> sfer", function() {deepEqual( Stem("sfera"), "sfer");});
test("sferă -> sfer", function() {deepEqual( Stem("sferă"), "sfer");});
test("sfere -> sfer", function() {deepEqual( Stem("sfere"), "sfer");});
test("sferei -> sfere", function() {deepEqual( Stem("sferei"), "sfere");});
test("sferele -> sfer", function() {deepEqual( Stem("sferele"), "sfer");});
test("sferic -> sferic", function() {deepEqual( Stem("sferic"), "sferic");});
test("sferică -> sferic", function() {deepEqual( Stem("sferică"), "sferic");});
test("sfert -> sfert", function() {deepEqual( Stem("sfert"), "sfert");});
test("sfertul -> sfert", function() {deepEqual( Stem("sfertul"), "sfert");});
test("sferturi -> sfertur", function() {deepEqual( Stem("sferturi"), "sfertur");});
test("sfiala -> sfial", function() {deepEqual( Stem("sfiala"), "sfial");});
test("sfială -> sfial", function() {deepEqual( Stem("sfială"), "sfial");});
test("sfiiciune -> sfiiciun", function() {deepEqual( Stem("sfiiciune"), "sfiiciun");});
test("sfinte -> sfint", function() {deepEqual( Stem("sfinte"), "sfint");});
test("sfinţenie -> sfinţen", function() {deepEqual( Stem("sfinţenie"), "sfinţen");});
test("sfinţii -> sfinţ", function() {deepEqual( Stem("sfinţii"), "sfinţ");});
test("sfinţilor -> sfinţ", function() {deepEqual( Stem("sfinţilor"), "sfinţ");});
test("sfinţite -> sfinţit", function() {deepEqual( Stem("sfinţite"), "sfinţit");});
test("sfioasă -> sfioas", function() {deepEqual( Stem("sfioasă"), "sfioas");});
test("sfioase -> sfioas", function() {deepEqual( Stem("sfioase"), "sfioas");});
test("sfios -> sfios", function() {deepEqual( Stem("sfios"), "sfios");});
test("sfînt -> sfînt", function() {deepEqual( Stem("sfînt"), "sfînt");});
test("sfîrc -> sfîrc", function() {deepEqual( Stem("sfîrc"), "sfîrc");});
test("sfîrşeau -> sfîrş", function() {deepEqual( Stem("sfîrşeau"), "sfîrş");});
test("sfîrşesc -> sfîrş", function() {deepEqual( Stem("sfîrşesc"), "sfîrş");});
test("sfîrşeşte -> sfîrş", function() {deepEqual( Stem("sfîrşeşte"), "sfîrş");});
test("sfîrşi -> sfîrş", function() {deepEqual( Stem("sfîrşi"), "sfîrş");});
test("sfîrşind -> sfîrş", function() {deepEqual( Stem("sfîrşind"), "sfîrş");});
test("sfîrşirea -> sfîrş", function() {deepEqual( Stem("sfîrşirea"), "sfîrş");});
test("sfîrşit -> sfîrşit", function() {deepEqual( Stem("sfîrşit"), "sfîrşit");});
test("sfîrşită -> sfîrşit", function() {deepEqual( Stem("sfîrşită"), "sfîrşit");});
test("sfîrtecat -> sfîrtec", function() {deepEqual( Stem("sfîrtecat"), "sfîrtec");});
test("sfîşia -> sfîş", function() {deepEqual( Stem("sfîşia"), "sfîş");});
test("sfîşiat -> sfîşiat", function() {deepEqual( Stem("sfîşiat"), "sfîşiat");});
test("sfîşierii -> sfîşier", function() {deepEqual( Stem("sfîşierii"), "sfîşier");});
test("sfoară -> sfoar", function() {deepEqual( Stem("sfoară"), "sfoar");});
test("sforăitoare -> sforăit", function() {deepEqual( Stem("sforăitoare"), "sforăit");});
test("sforăitului -> sforăit", function() {deepEqual( Stem("sforăitului"), "sforăit");});
test("sfori -> sfor", function() {deepEqual( Stem("sfori"), "sfor");});
test("sforţa -> sforţ", function() {deepEqual( Stem("sforţa"), "sforţ");});
test("sforţare -> sforţ", function() {deepEqual( Stem("sforţare"), "sforţ");});
test("sforţări -> sforţăr", function() {deepEqual( Stem("sforţări"), "sforţăr");});
test("sforţările -> sforţăr", function() {deepEqual( Stem("sforţările"), "sforţăr");});
test("sfredeli -> sfredel", function() {deepEqual( Stem("sfredeli"), "sfredel");});
test("sfrijit -> sfrijit", function() {deepEqual( Stem("sfrijit"), "sfrijit");});
test("sfruntată -> sfruntat", function() {deepEqual( Stem("sfruntată"), "sfruntat");});
test("sfruntate -> sfruntat", function() {deepEqual( Stem("sfruntate"), "sfruntat");});
test("shakespeare -> shakespear", function() {deepEqual( Stem("shakespeare"), "shakespear");});
test("shostacovitch -> shostacovitch", function() {deepEqual( Stem("shostacovitch"), "shostacovitch");});
test("shotokan -> shotokan", function() {deepEqual( Stem("shotokan"), "shotokan");});
test("shylock -> shylock", function() {deepEqual( Stem("shylock"), "shylock");});
test("si -> si", function() {deepEqual( Stem("si"), "si");});
test("siberia -> siber", function() {deepEqual( Stem("siberia"), "siber");});
test("sibilinic -> sibilin", function() {deepEqual( Stem("sibilinic"), "sibilin");});
test("sibiu -> sibiu", function() {deepEqual( Stem("sibiu"), "sibiu");});
test("sich -> sich", function() {deepEqual( Stem("sich"), "sich");});
test("sidef -> sidef", function() {deepEqual( Stem("sidef"), "sidef");});
test("sidneyului -> sidney", function() {deepEqual( Stem("sidneyului"), "sidney");});
test("sie -> sie", function() {deepEqual( Stem("sie"), "sie");});
test("siesta -> siest", function() {deepEqual( Stem("siesta"), "siest");});
test("siestă -> siest", function() {deepEqual( Stem("siestă"), "siest");});
test("sighişoara -> sighişoar", function() {deepEqual( Stem("sighişoara"), "sighişoar");});
test("sigiliu -> sigiliu", function() {deepEqual( Stem("sigiliu"), "sigiliu");});
test("sigismund -> sigismund", function() {deepEqual( Stem("sigismund"), "sigismund");});
test("sigur -> sigur", function() {deepEqual( Stem("sigur"), "sigur");});
test("siguranţa -> siguranţ", function() {deepEqual( Stem("siguranţa"), "siguranţ");});
test("siguranţă -> siguranţ", function() {deepEqual( Stem("siguranţă"), "siguranţ");});
test("sigură -> sigur", function() {deepEqual( Stem("sigură"), "sigur");});
test("sigure -> sigur", function() {deepEqual( Stem("sigure"), "sigur");});
test("siguri -> sigur", function() {deepEqual( Stem("siguri"), "sigur");});
test("sila -> sil", function() {deepEqual( Stem("sila"), "sil");});
test("silabă -> silab", function() {deepEqual( Stem("silabă"), "silab");});
test("silabe -> silab", function() {deepEqual( Stem("silabe"), "silab");});
test("silabele -> silab", function() {deepEqual( Stem("silabele"), "silab");});
test("silabisea -> silab", function() {deepEqual( Stem("silabisea"), "silab");});
test("silabisind -> silabis", function() {deepEqual( Stem("silabisind"), "silabis");});
test("silă -> sil", function() {deepEqual( Stem("silă"), "sil");});
test("silească -> sileasc", function() {deepEqual( Stem("silească"), "sileasc");});
test("silesc -> silesc", function() {deepEqual( Stem("silesc"), "silesc");});
test("siliciului -> silic", function() {deepEqual( Stem("siliciului"), "silic");});
test("silindu -> silindu", function() {deepEqual( Stem("silindu"), "silindu");});
test("silinţele -> silinţ", function() {deepEqual( Stem("silinţele"), "silinţ");});
test("silit -> silit", function() {deepEqual( Stem("silit"), "silit");});
test("silită -> silit", function() {deepEqual( Stem("silită"), "silit");});
test("silnică -> silnic", function() {deepEqual( Stem("silnică"), "silnic");});
test("silnicie -> silnic", function() {deepEqual( Stem("silnicie"), "silnic");});
test("silueta -> siluet", function() {deepEqual( Stem("silueta"), "siluet");});
test("siluetă -> siluet", function() {deepEqual( Stem("siluetă"), "siluet");});
test("siluete -> siluet", function() {deepEqual( Stem("siluete"), "siluet");});
test("siluetele -> siluet", function() {deepEqual( Stem("siluetele"), "siluet");});
test("siluieşti -> silui", function() {deepEqual( Stem("siluieşti"), "silui");});
test("siluindu -> silu", function() {deepEqual( Stem("siluindu"), "silu");});
test("siluirea -> silu", function() {deepEqual( Stem("siluirea"), "silu");});
test("siluit -> siluit", function() {deepEqual( Stem("siluit"), "siluit");});
test("siluitor -> siluit", function() {deepEqual( Stem("siluitor"), "siluit");});
test("simbioză -> simbioz", function() {deepEqual( Stem("simbioză"), "simbioz");});
test("simboalele -> simboal", function() {deepEqual( Stem("simboalele"), "simboal");});
test("simboalelor -> simboal", function() {deepEqual( Stem("simboalelor"), "simboal");});
test("simbolic -> simbol", function() {deepEqual( Stem("simbolic"), "simbol");});
test("simbolică -> simbol", function() {deepEqual( Stem("simbolică"), "simbol");});
test("simbolice -> simbol", function() {deepEqual( Stem("simbolice"), "simbol");});
test("simbolizează -> simboliz", function() {deepEqual( Stem("simbolizează"), "simboliz");});
test("simbolului -> simbol", function() {deepEqual( Stem("simbolului"), "simbol");});
test("simboluri -> simbolur", function() {deepEqual( Stem("simboluri"), "simbolur");});
test("simfonic -> simfon", function() {deepEqual( Stem("simfonic"), "simfon");});
test("simfonică -> simfon", function() {deepEqual( Stem("simfonică"), "simfon");});
test("simpatic -> simpat", function() {deepEqual( Stem("simpatic"), "simpat");});
test("simpatie -> simpat", function() {deepEqual( Stem("simpatie"), "simpat");});
test("simpatizat -> simpatiz", function() {deepEqual( Stem("simpatizat"), "simpatiz");});
test("simpla -> simpl", function() {deepEqual( Stem("simpla"), "simpl");});
test("simplă -> simpl", function() {deepEqual( Stem("simplă"), "simpl");});
test("simple -> simpl", function() {deepEqual( Stem("simple"), "simpl");});
test("simplei -> simple", function() {deepEqual( Stem("simplei"), "simple");});
test("simplele -> simpl", function() {deepEqual( Stem("simplele"), "simpl");});
test("simpli -> simpl", function() {deepEqual( Stem("simpli"), "simpl");});
test("simplicitatea -> simplic", function() {deepEqual( Stem("simplicitatea"), "simplic");});
test("simplific -> simplif", function() {deepEqual( Stem("simplific"), "simplif");});
test("simplificate -> simplific", function() {deepEqual( Stem("simplificate"), "simplific");});
test("simplifică -> simplif", function() {deepEqual( Stem("simplifică"), "simplif");});
test("simplismul -> simplism", function() {deepEqual( Stem("simplismul"), "simplism");});
test("simplist -> simplist", function() {deepEqual( Stem("simplist"), "simplist");});
test("simplistă -> simplist", function() {deepEqual( Stem("simplistă"), "simplist");});
test("simpliste -> simplist", function() {deepEqual( Stem("simpliste"), "simplist");});
test("simplişti -> simplişt", function() {deepEqual( Stem("simplişti"), "simplişt");});
test("simplitate -> simplitat", function() {deepEqual( Stem("simplitate"), "simplitat");});
test("simplu -> simplu", function() {deepEqual( Stem("simplu"), "simplu");});
test("simplul -> simpl", function() {deepEqual( Stem("simplul"), "simpl");});
test("simptom -> simptom", function() {deepEqual( Stem("simptom"), "simptom");});
test("simptomatic -> simptomat", function() {deepEqual( Stem("simptomatic"), "simptomat");});
test("simptomatică -> simptomat", function() {deepEqual( Stem("simptomatică"), "simptomat");});
test("simt -> simt", function() {deepEqual( Stem("simt"), "simt");});
test("simtă -> simt", function() {deepEqual( Stem("simtă"), "simt");});
test("simte -> simt", function() {deepEqual( Stem("simte"), "simt");});
test("simţ -> simţ", function() {deepEqual( Stem("simţ"), "simţ");});
test("simţă -> simţ", function() {deepEqual( Stem("simţă"), "simţ");});
test("simţăminte -> simţămint", function() {deepEqual( Stem("simţăminte"), "simţămint");});
test("simţea -> simţ", function() {deepEqual( Stem("simţea"), "simţ");});
test("simţeai -> simţ", function() {deepEqual( Stem("simţeai"), "simţ");});
test("simţeam -> simţ", function() {deepEqual( Stem("simţeam"), "simţ");});
test("simţeau -> simţ", function() {deepEqual( Stem("simţeau"), "simţ");});
test("simţi -> simţ", function() {deepEqual( Stem("simţi"), "simţ");});
test("simţim -> simţ", function() {deepEqual( Stem("simţim"), "simţ");});
test("simţind -> simţ", function() {deepEqual( Stem("simţind"), "simţ");});
test("simţindu -> simţ", function() {deepEqual( Stem("simţindu"), "simţ");});
test("simţirea -> simţ", function() {deepEqual( Stem("simţirea"), "simţ");});
test("simţiri -> simţir", function() {deepEqual( Stem("simţiri"), "simţir");});
test("simţit -> simţit", function() {deepEqual( Stem("simţit"), "simţit");});
test("simţită -> simţit", function() {deepEqual( Stem("simţită"), "simţit");});
test("simţitoare -> simţit", function() {deepEqual( Stem("simţitoare"), "simţit");});
test("simţitori -> simţit", function() {deepEqual( Stem("simţitori"), "simţit");});
test("simţiţi -> simţ", function() {deepEqual( Stem("simţiţi"), "simţ");});
test("simţul -> simţ", function() {deepEqual( Stem("simţul"), "simţ");});
test("simţului -> simţ", function() {deepEqual( Stem("simţului"), "simţ");});
test("simţuri -> simţur", function() {deepEqual( Stem("simţuri"), "simţur");});
test("simţurile -> simţur", function() {deepEqual( Stem("simţurile"), "simţur");});
test("simţurilor -> simţur", function() {deepEqual( Stem("simţurilor"), "simţur");});
test("simulează -> simul", function() {deepEqual( Stem("simulează"), "simul");});
test("simultan -> simultan", function() {deepEqual( Stem("simultan"), "simultan");});
test("sinaia -> sinai", function() {deepEqual( Stem("sinaia"), "sinai");});
test("sincer -> sincer", function() {deepEqual( Stem("sincer"), "sincer");});
test("sinceră -> sincer", function() {deepEqual( Stem("sinceră"), "sincer");});
test("sincere -> sinc", function() {deepEqual( Stem("sincere"), "sinc");});
test("sinceri -> sincer", function() {deepEqual( Stem("sinceri"), "sincer");});
test("sinceritate -> sincer", function() {deepEqual( Stem("sinceritate"), "sincer");});
test("sincerităţii -> sincer", function() {deepEqual( Stem("sincerităţii"), "sincer");});
test("sincerităţile -> sincer", function() {deepEqual( Stem("sincerităţile"), "sincer");});
test("sinchisească -> sinchis", function() {deepEqual( Stem("sinchisească"), "sinchis");});
test("sine -> sin", function() {deepEqual( Stem("sine"), "sin");});
test("sinea -> sin", function() {deepEqual( Stem("sinea"), "sin");});
test("singular -> singular", function() {deepEqual( Stem("singular"), "singular");});
test("singur -> singur", function() {deepEqual( Stem("singur"), "singur");});
test("singura -> singur", function() {deepEqual( Stem("singura"), "singur");});
test("singuratice -> singurat", function() {deepEqual( Stem("singuratice"), "singurat");});
test("singuratici -> singurat", function() {deepEqual( Stem("singuratici"), "singurat");});
test("singură -> sing", function() {deepEqual( Stem("singură"), "sing");});
test("singurătate -> singurăt", function() {deepEqual( Stem("singurătate"), "singurăt");});
test("singurătatea -> singurăt", function() {deepEqual( Stem("singurătatea"), "singurăt");});
test("singure -> singur", function() {deepEqual( Stem("singure"), "singur");});
test("singurele -> singur", function() {deepEqual( Stem("singurele"), "singur");});
test("singuri -> singur", function() {deepEqual( Stem("singuri"), "singur");});
test("singurii -> singur", function() {deepEqual( Stem("singurii"), "singur");});
test("singurul -> singur", function() {deepEqual( Stem("singurul"), "singur");});
test("sinistră -> sinistr", function() {deepEqual( Stem("sinistră"), "sinistr");});
test("sinistru -> sinistru", function() {deepEqual( Stem("sinistru"), "sinistru");});
test("sinoadele -> sinoad", function() {deepEqual( Stem("sinoadele"), "sinoad");});
test("sintetic -> sintet", function() {deepEqual( Stem("sintetic"), "sintet");});
test("sintetică -> sintet", function() {deepEqual( Stem("sintetică"), "sintet");});
test("sintetice -> sintet", function() {deepEqual( Stem("sintetice"), "sintet");});
test("sinteza -> sintez", function() {deepEqual( Stem("sinteza"), "sintez");});
test("sinteză -> sintez", function() {deepEqual( Stem("sinteză"), "sintez");});
test("sinucid -> sinucid", function() {deepEqual( Stem("sinucid"), "sinucid");});
test("sinucidă -> sinucid", function() {deepEqual( Stem("sinucidă"), "sinucid");});
test("sinucide -> sinucid", function() {deepEqual( Stem("sinucide"), "sinucid");});
test("sinucigaş -> sinucigaş", function() {deepEqual( Stem("sinucigaş"), "sinucigaş");});
test("sirenelor -> siren", function() {deepEqual( Stem("sirenelor"), "siren");});
test("siscovitz -> siscovitz", function() {deepEqual( Stem("siscovitz"), "siscovitz");});
test("sistem -> sist", function() {deepEqual( Stem("sistem"), "sist");});
test("sistematic -> sistemat", function() {deepEqual( Stem("sistematic"), "sistemat");});
test("sistematica -> sistemat", function() {deepEqual( Stem("sistematica"), "sistemat");});
test("sistematică -> sistemat", function() {deepEqual( Stem("sistematică"), "sistemat");});
test("sistematizat -> sistematiz", function() {deepEqual( Stem("sistematizat"), "sistematiz");});
test("sistematizate -> sistematiz", function() {deepEqual( Stem("sistematizate"), "sistematiz");});
test("sistematizăm -> sistematiz", function() {deepEqual( Stem("sistematizăm"), "sistematiz");});
test("sistematizării -> sistematizăr", function() {deepEqual( Stem("sistematizării"), "sistematizăr");});
test("sistemă -> sistem", function() {deepEqual( Stem("sistemă"), "sistem");});
test("sisteme -> sistem", function() {deepEqual( Stem("sisteme"), "sistem");});
test("sistemele -> sistem", function() {deepEqual( Stem("sistemele"), "sistem");});
test("sistemelor -> sistem", function() {deepEqual( Stem("sistemelor"), "sistem");});
test("sistemul -> sist", function() {deepEqual( Stem("sistemul"), "sist");});
test("sistemului -> sist", function() {deepEqual( Stem("sistemului"), "sist");});
test("situaţi -> situ", function() {deepEqual( Stem("situaţi"), "situ");});
test("situaţia -> situ", function() {deepEqual( Stem("situaţia"), "situ");});
test("situaţie -> situ", function() {deepEqual( Stem("situaţie"), "situ");});
test("situaţiei -> situ", function() {deepEqual( Stem("situaţiei"), "situ");});
test("situaţii -> situ", function() {deepEqual( Stem("situaţii"), "situ");});
test("situaţiile -> situ", function() {deepEqual( Stem("situaţiile"), "situ");});
test("situaţiune -> situat", function() {deepEqual( Stem("situaţiune"), "situat");});
test("situaţiunea -> situat", function() {deepEqual( Stem("situaţiunea"), "situat");});
test("sixtină -> sixtin", function() {deepEqual( Stem("sixtină"), "sixtin");});
test("slab -> slab", function() {deepEqual( Stem("slab"), "slab");});
test("slabă -> slab", function() {deepEqual( Stem("slabă"), "slab");});
test("slabe -> slab", function() {deepEqual( Stem("slabe"), "slab");});
test("slabele -> slab", function() {deepEqual( Stem("slabele"), "slab");});
test("slabi -> slab", function() {deepEqual( Stem("slabi"), "slab");});
test("slatina -> slatin", function() {deepEqual( Stem("slatina"), "slatin");});
test("slav -> slav", function() {deepEqual( Stem("slav"), "slav");});
test("slavă -> slav", function() {deepEqual( Stem("slavă"), "slav");});
test("slave -> slav", function() {deepEqual( Stem("slave"), "slav");});
test("slavii -> slav", function() {deepEqual( Stem("slavii"), "slav");});
test("slăbiciune -> slăbiciun", function() {deepEqual( Stem("slăbiciune"), "slăbiciun");});
test("slăbiciunea -> slăbiciun", function() {deepEqual( Stem("slăbiciunea"), "slăbiciun");});
test("slăbire -> slăb", function() {deepEqual( Stem("slăbire"), "slăb");});
test("slăbise -> slăb", function() {deepEqual( Stem("slăbise"), "slăb");});
test("slăbisem -> slăb", function() {deepEqual( Stem("slăbisem"), "slăb");});
test("slăbit -> slăbit", function() {deepEqual( Stem("slăbit"), "slăbit");});
test("sleeping -> sleeping", function() {deepEqual( Stem("sleeping"), "sleeping");});
test("sleit -> sleit", function() {deepEqual( Stem("sleit"), "sleit");});
test("sleitoare -> sleitoar", function() {deepEqual( Stem("sleitoare"), "sleitoar");});
test("sleiţi -> sle", function() {deepEqual( Stem("sleiţi"), "sle");});
test("slobodă -> slobod", function() {deepEqual( Stem("slobodă"), "slobod");});
test("slovele -> slov", function() {deepEqual( Stem("slovele"), "slov");});
test("slugă -> slug", function() {deepEqual( Stem("slugă"), "slug");});
test("slugeru -> slugeru", function() {deepEqual( Stem("slugeru"), "slugeru");});
test("slujba -> slujb", function() {deepEqual( Stem("slujba"), "slujb");});
test("slujbă -> slujb", function() {deepEqual( Stem("slujbă"), "slujb");});
test("slujea -> sluj", function() {deepEqual( Stem("slujea"), "sluj");});
test("slujesc -> sluj", function() {deepEqual( Stem("slujesc"), "sluj");});
test("slujeşte -> sluj", function() {deepEqual( Stem("slujeşte"), "sluj");});
test("sluji -> sluj", function() {deepEqual( Stem("sluji"), "sluj");});
test("slujit -> slujit", function() {deepEqual( Stem("slujit"), "slujit");});
test("slută -> slut", function() {deepEqual( Stem("slută"), "slut");});
test("sluţenia -> sluţen", function() {deepEqual( Stem("sluţenia"), "sluţen");});
test("sluţenie -> sluţen", function() {deepEqual( Stem("sluţenie"), "sluţen");});
test("sluţi -> sluţ", function() {deepEqual( Stem("sluţi"), "sluţ");});
test("sluţită -> sluţit", function() {deepEqual( Stem("sluţită"), "sluţit");});
test("smalţ -> smalţ", function() {deepEqual( Stem("smalţ"), "smalţ");});
test("smintit -> smintit", function() {deepEqual( Stem("smintit"), "smintit");});
test("smintita -> smintit", function() {deepEqual( Stem("smintita"), "smintit");});
test("smoc -> smoc", function() {deepEqual( Stem("smoc"), "smoc");});
test("smocuri -> smocur", function() {deepEqual( Stem("smocuri"), "smocur");});
test("smocurile -> smocur", function() {deepEqual( Stem("smocurile"), "smocur");});
test("smucea -> smuc", function() {deepEqual( Stem("smucea"), "smuc");});
test("smucesc -> smuc", function() {deepEqual( Stem("smucesc"), "smuc");});
test("smucit -> smucit", function() {deepEqual( Stem("smucit"), "smucit");});
test("smulg -> smulg", function() {deepEqual( Stem("smulg"), "smulg");});
test("smulgă -> smulg", function() {deepEqual( Stem("smulgă"), "smulg");});
test("smulgeţi -> smulg", function() {deepEqual( Stem("smulgeţi"), "smulg");});
test("smuls -> smuls", function() {deepEqual( Stem("smuls"), "smuls");});
test("smulse -> smul", function() {deepEqual( Stem("smulse"), "smul");});
test("snob -> snob", function() {deepEqual( Stem("snob"), "snob");});
test("snobii -> snob", function() {deepEqual( Stem("snobii"), "snob");});
test("snop -> snop", function() {deepEqual( Stem("snop"), "snop");});
test("snopul -> snop", function() {deepEqual( Stem("snopul"), "snop");});
test("so -> so", function() {deepEqual( Stem("so"), "so");});
test("soacră -> soacr", function() {deepEqual( Stem("soacră"), "soacr");});
test("soare -> soar", function() {deepEqual( Stem("soare"), "soar");});
test("soarele -> soar", function() {deepEqual( Stem("soarele"), "soar");});
test("soarelui -> soarel", function() {deepEqual( Stem("soarelui"), "soarel");});
test("soarta -> soart", function() {deepEqual( Stem("soarta"), "soart");});
test("soba -> sob", function() {deepEqual( Stem("soba"), "sob");});
test("sociabil -> sociabil", function() {deepEqual( Stem("sociabil"), "sociabil");});
test("sociabilitate -> sociabil", function() {deepEqual( Stem("sociabilitate"), "sociabil");});
test("sociabilitatea -> sociabil", function() {deepEqual( Stem("sociabilitatea"), "sociabil");});
test("social -> social", function() {deepEqual( Stem("social"), "social");});
test("socială -> social", function() {deepEqual( Stem("socială"), "social");});
test("sociale -> social", function() {deepEqual( Stem("sociale"), "social");});
test("sociali -> social", function() {deepEqual( Stem("sociali"), "social");});
test("socialism -> socialist", function() {deepEqual( Stem("socialism"), "socialist");});
test("socialismul -> socialist", function() {deepEqual( Stem("socialismul"), "socialist");});
test("socialismului -> socialist", function() {deepEqual( Stem("socialismului"), "socialist");});
test("socialist -> socialist", function() {deepEqual( Stem("socialist"), "socialist");});
test("socialiste -> socialist", function() {deepEqual( Stem("socialiste"), "socialist");});
test("socialiştii -> socialist", function() {deepEqual( Stem("socialiştii"), "socialist");});
test("societate -> societ", function() {deepEqual( Stem("societate"), "societ");});
test("societatea -> societ", function() {deepEqual( Stem("societatea"), "societ");});
test("societăţi -> societăţ", function() {deepEqual( Stem("societăţi"), "societăţ");});
test("societăţii -> societăţ", function() {deepEqual( Stem("societăţii"), "societăţ");});
test("societăţile -> societăţ", function() {deepEqual( Stem("societăţile"), "societăţ");});
test("societăţilor -> societăţ", function() {deepEqual( Stem("societăţilor"), "societăţ");});
test("sociologia -> sociolog", function() {deepEqual( Stem("sociologia"), "sociolog");});
test("sociologic -> sociolog", function() {deepEqual( Stem("sociologic"), "sociolog");});
test("sociologică -> sociolog", function() {deepEqual( Stem("sociologică"), "sociolog");});
test("sociologie -> sociolog", function() {deepEqual( Stem("sociologie"), "sociolog");});
test("sociologiei -> sociolog", function() {deepEqual( Stem("sociologiei"), "sociolog");});
test("soclu -> soclu", function() {deepEqual( Stem("soclu"), "soclu");});
test("socoată -> socoat", function() {deepEqual( Stem("socoată"), "socoat");});
test("socoate -> socoat", function() {deepEqual( Stem("socoate"), "socoat");});
test("socot -> socot", function() {deepEqual( Stem("socot"), "socot");});
test("socotea -> socot", function() {deepEqual( Stem("socotea"), "socot");});
test("socoteala -> socoteal", function() {deepEqual( Stem("socoteala"), "socoteal");});
test("socoteală -> socoteal", function() {deepEqual( Stem("socoteală"), "socoteal");});
test("socoteam -> socot", function() {deepEqual( Stem("socoteam"), "socot");});
test("socoteau -> socot", function() {deepEqual( Stem("socoteau"), "socot");});
test("socoteli -> socotel", function() {deepEqual( Stem("socoteli"), "socotel");});
test("socotelile -> socotel", function() {deepEqual( Stem("socotelile"), "socotel");});
test("socotesc -> socot", function() {deepEqual( Stem("socotesc"), "socot");});
test("socoteşte -> socot", function() {deepEqual( Stem("socoteşte"), "socot");});
test("socotim -> socot", function() {deepEqual( Stem("socotim"), "socot");});
test("socotind -> socot", function() {deepEqual( Stem("socotind"), "socot");});
test("socotise -> socot", function() {deepEqual( Stem("socotise"), "socot");});
test("socotit -> socot", function() {deepEqual( Stem("socotit"), "socot");});
test("socotită -> socot", function() {deepEqual( Stem("socotită"), "socot");});
test("socotiţi -> socot", function() {deepEqual( Stem("socotiţi"), "socot");});
test("socoţi -> socoţ", function() {deepEqual( Stem("socoţi"), "socoţ");});
test("socrat -> socrat", function() {deepEqual( Stem("socrat"), "socrat");});
test("socrate -> socrat", function() {deepEqual( Stem("socrate"), "socrat");});
test("sofa -> sof", function() {deepEqual( Stem("sofa"), "sof");});
test("sofale -> sofal", function() {deepEqual( Stem("sofale"), "sofal");});
test("sofalei -> sofale", function() {deepEqual( Stem("sofalei"), "sofale");});
test("sofaua -> sofau", function() {deepEqual( Stem("sofaua"), "sofau");});
test("sofia -> sofi", function() {deepEqual( Stem("sofia"), "sofi");});
test("sofica -> sofic", function() {deepEqual( Stem("sofica"), "sofic");});
test("sofism -> sofism", function() {deepEqual( Stem("sofism"), "sofism");});
test("sofisme -> sofism", function() {deepEqual( Stem("sofisme"), "sofism");});
test("sofismele -> sofism", function() {deepEqual( Stem("sofismele"), "sofism");});
test("sofismelor -> sofism", function() {deepEqual( Stem("sofismelor"), "sofism");});
test("sofismului -> sofism", function() {deepEqual( Stem("sofismului"), "sofism");});
test("sofistică -> sofist", function() {deepEqual( Stem("sofistică"), "sofist");});
test("sofistul -> sofist", function() {deepEqual( Stem("sofistul"), "sofist");});
test("sofiştii -> sofişt", function() {deepEqual( Stem("sofiştii"), "sofişt");});
test("sofiştilor -> sofişt", function() {deepEqual( Stem("sofiştilor"), "sofişt");});
test("soi -> soi", function() {deepEqual( Stem("soi"), "soi");});
test("soiul -> soi", function() {deepEqual( Stem("soiul"), "soi");});
test("soiuri -> soiur", function() {deepEqual( Stem("soiuri"), "soiur");});
test("solar -> solar", function() {deepEqual( Stem("solar"), "solar");});
test("solches -> solches", function() {deepEqual( Stem("solches"), "solches");});
test("solda -> sold", function() {deepEqual( Stem("solda"), "sold");});
test("soldat -> soldat", function() {deepEqual( Stem("soldat"), "soldat");});
test("soldatul -> soldat", function() {deepEqual( Stem("soldatul"), "soldat");});
test("soldaţi -> sold", function() {deepEqual( Stem("soldaţi"), "sold");});
test("soldaţii -> sold", function() {deepEqual( Stem("soldaţii"), "sold");});
test("soldaţilor -> sold", function() {deepEqual( Stem("soldaţilor"), "sold");});
test("soldăţească -> soldăţ", function() {deepEqual( Stem("soldăţească"), "soldăţ");});
test("soldăţeşte -> soldăţ", function() {deepEqual( Stem("soldăţeşte"), "soldăţ");});
test("soldele -> sold", function() {deepEqual( Stem("soldele"), "sold");});
test("solemn -> solemn", function() {deepEqual( Stem("solemn"), "solemn");});
test("solemnă -> solemn", function() {deepEqual( Stem("solemnă"), "solemn");});
test("solemne -> solemn", function() {deepEqual( Stem("solemne"), "solemn");});
test("solemnitate -> solemn", function() {deepEqual( Stem("solemnitate"), "solemn");});
test("solid -> solid", function() {deepEqual( Stem("solid"), "solid");});
test("solidaritate -> solidar", function() {deepEqual( Stem("solidaritate"), "solidar");});
test("solidă -> solid", function() {deepEqual( Stem("solidă"), "solid");});
test("solidificată -> solidific", function() {deepEqual( Stem("solidificată"), "solidific");});
test("solie -> sol", function() {deepEqual( Stem("solie"), "sol");});
test("solipsism -> solipsist", function() {deepEqual( Stem("solipsism"), "solipsist");});
test("solipsismul -> solipsist", function() {deepEqual( Stem("solipsismul"), "solipsist");});
test("solipsismului -> solipsist", function() {deepEqual( Stem("solipsismului"), "solipsist");});
test("solipsist -> solipsist", function() {deepEqual( Stem("solipsist"), "solipsist");});
test("solipsistă -> solipsist", function() {deepEqual( Stem("solipsistă"), "solipsist");});
test("solipsiste -> solipsist", function() {deepEqual( Stem("solipsiste"), "solipsist");});
test("solipsistul -> solipsist", function() {deepEqual( Stem("solipsistul"), "solipsist");});
test("solitare -> solit", function() {deepEqual( Stem("solitare"), "solit");});
test("sollest -> sollest", function() {deepEqual( Stem("sollest"), "sollest");});
test("solniţa -> solniţ", function() {deepEqual( Stem("solniţa"), "solniţ");});
test("soluţia -> soluţ", function() {deepEqual( Stem("soluţia"), "soluţ");});
test("soluţie -> soluţ", function() {deepEqual( Stem("soluţie"), "soluţ");});
test("soluţiile -> soluţ", function() {deepEqual( Stem("soluţiile"), "soluţ");});
test("soluţionare -> soluţion", function() {deepEqual( Stem("soluţionare"), "soluţion");});
test("soluţionarea -> soluţion", function() {deepEqual( Stem("soluţionarea"), "soluţion");});
test("soluţionări -> soluţionăr", function() {deepEqual( Stem("soluţionări"), "soluţionăr");});
test("soluţiune -> solut", function() {deepEqual( Stem("soluţiune"), "solut");});
test("soluţiuni -> solut", function() {deepEqual( Stem("soluţiuni"), "solut");});
test("soluţiunii -> solut", function() {deepEqual( Stem("soluţiunii"), "solut");});
test("somată -> somat", function() {deepEqual( Stem("somată"), "somat");});
test("sombart -> sombart", function() {deepEqual( Stem("sombart"), "sombart");});
test("somme -> somm", function() {deepEqual( Stem("somme"), "somm");});
test("somn -> somn", function() {deepEqual( Stem("somn"), "somn");});
test("somnambul -> somnamb", function() {deepEqual( Stem("somnambul"), "somnamb");});
test("somnoroase -> somnor", function() {deepEqual( Stem("somnoroase"), "somnor");});
test("somnoroşilor -> somnor", function() {deepEqual( Stem("somnoroşilor"), "somnor");});
test("somnul -> somn", function() {deepEqual( Stem("somnul"), "somn");});
test("somnului -> somn", function() {deepEqual( Stem("somnului"), "somn");});
test("soneriile -> soner", function() {deepEqual( Stem("soneriile"), "soner");});
test("sonet -> sonet", function() {deepEqual( Stem("sonet"), "sonet");});
test("sonia -> soni", function() {deepEqual( Stem("sonia"), "soni");});
test("sonor -> sonor", function() {deepEqual( Stem("sonor"), "sonor");});
test("sonoră -> sonor", function() {deepEqual( Stem("sonoră"), "sonor");});
test("sonore -> sonor", function() {deepEqual( Stem("sonore"), "sonor");});
test("sonoritate -> sonor", function() {deepEqual( Stem("sonoritate"), "sonor");});
test("sonorităţi -> sonor", function() {deepEqual( Stem("sonorităţi"), "sonor");});
test("sonorităţilor -> sonor", function() {deepEqual( Stem("sonorităţilor"), "sonor");});
test("sora -> sor", function() {deepEqual( Stem("sora"), "sor");});
test("soră -> sor", function() {deepEqual( Stem("soră"), "sor");});
test("sorbim -> sorb", function() {deepEqual( Stem("sorbim"), "sorb");});
test("sortează -> sort", function() {deepEqual( Stem("sortează"), "sort");});
test("sortimente -> sortiment", function() {deepEqual( Stem("sortimente"), "sortiment");});
test("sortimentul -> sortiment", function() {deepEqual( Stem("sortimentul"), "sortiment");});
test("sortit -> sortit", function() {deepEqual( Stem("sortit"), "sortit");});
test("sortită -> sortit", function() {deepEqual( Stem("sortită"), "sortit");});
test("sortiţi -> sort", function() {deepEqual( Stem("sortiţi"), "sort");});
test("sorţi -> sorţ", function() {deepEqual( Stem("sorţi"), "sorţ");});
test("sos -> sos", function() {deepEqual( Stem("sos"), "sos");});
test("sosească -> soseasc", function() {deepEqual( Stem("sosească"), "soseasc");});
test("sosesc -> sosesc", function() {deepEqual( Stem("sosesc"), "sosesc");});
test("soseşte -> soseşt", function() {deepEqual( Stem("soseşte"), "soseşt");});
test("sosi -> sos", function() {deepEqual( Stem("sosi"), "sos");});
test("sosim -> sos", function() {deepEqual( Stem("sosim"), "sos");});
test("sosind -> sosind", function() {deepEqual( Stem("sosind"), "sosind");});
test("sosire -> sosir", function() {deepEqual( Stem("sosire"), "sosir");});
test("sosirea -> sosir", function() {deepEqual( Stem("sosirea"), "sosir");});
test("sosirii -> sosir", function() {deepEqual( Stem("sosirii"), "sosir");});
test("sosise -> sosis", function() {deepEqual( Stem("sosise"), "sosis");});
test("sosisem -> sosisem", function() {deepEqual( Stem("sosisem"), "sosisem");});
test("sosit -> sosit", function() {deepEqual( Stem("sosit"), "sosit");});
test("sosiţi -> sos", function() {deepEqual( Stem("sosiţi"), "sos");});
test("sosul -> sos", function() {deepEqual( Stem("sosul"), "sos");});
test("soţ -> soţ", function() {deepEqual( Stem("soţ"), "soţ");});
test("soţia -> soţi", function() {deepEqual( Stem("soţia"), "soţi");});
test("soţie -> soţ", function() {deepEqual( Stem("soţie"), "soţ");});
test("soţii -> soţ", function() {deepEqual( Stem("soţii"), "soţ");});
test("soţiile -> soţ", function() {deepEqual( Stem("soţiile"), "soţ");});
test("soţioară -> soţioar", function() {deepEqual( Stem("soţioară"), "soţioar");});
test("soţul -> soţ", function() {deepEqual( Stem("soţul"), "soţ");});
test("sovietice -> soviet", function() {deepEqual( Stem("sovietice"), "soviet");});
test("sovietici -> soviet", function() {deepEqual( Stem("sovietici"), "soviet");});
test("spaima -> spaim", function() {deepEqual( Stem("spaima"), "spaim");});
test("spaimă -> spaim", function() {deepEqual( Stem("spaimă"), "spaim");});
test("spală -> spal", function() {deepEqual( Stem("spală"), "spal");});
test("spanacul -> spanac", function() {deepEqual( Stem("spanacul"), "spanac");});
test("spaniei -> span", function() {deepEqual( Stem("spaniei"), "span");});
test("spargă -> sparg", function() {deepEqual( Stem("spargă"), "sparg");});
test("sparge -> sparg", function() {deepEqual( Stem("sparge"), "sparg");});
test("spargem -> sparg", function() {deepEqual( Stem("spargem"), "sparg");});
test("spart -> spart", function() {deepEqual( Stem("spart"), "spart");});
test("spartachismului -> spartachist", function() {deepEqual( Stem("spartachismului"), "spartachist");});
test("spartă -> spart", function() {deepEqual( Stem("spartă"), "spart");});
test("sparte -> spart", function() {deepEqual( Stem("sparte"), "spart");});
test("spasm -> spasm", function() {deepEqual( Stem("spasm"), "spasm");});
test("spate -> spat", function() {deepEqual( Stem("spate"), "spat");});
test("spatele -> spat", function() {deepEqual( Stem("spatele"), "spat");});
test("spaţial -> spaţial", function() {deepEqual( Stem("spaţial"), "spaţial");});
test("spaţială -> spaţial", function() {deepEqual( Stem("spaţială"), "spaţial");});
test("spaţiale -> spaţial", function() {deepEqual( Stem("spaţiale"), "spaţial");});
test("spaţialitate -> spaţial", function() {deepEqual( Stem("spaţialitate"), "spaţial");});
test("spaţialitatea -> spaţial", function() {deepEqual( Stem("spaţialitatea"), "spaţial");});
test("spaţiile -> spaţ", function() {deepEqual( Stem("spaţiile"), "spaţ");});
test("spaţiu -> spaţiu", function() {deepEqual( Stem("spaţiu"), "spaţiu");});
test("spaţiul -> spaţ", function() {deepEqual( Stem("spaţiul"), "spaţ");});
test("spaţiului -> spaţ", function() {deepEqual( Stem("spaţiului"), "spaţ");});
test("spânzurat -> spânzur", function() {deepEqual( Stem("spânzurat"), "spânzur");});
test("spânzuraţi -> spânzur", function() {deepEqual( Stem("spânzuraţi"), "spânzur");});
test("spânzurătoare -> spânzur", function() {deepEqual( Stem("spânzurătoare"), "spânzur");});
test("spăl -> spăl", function() {deepEqual( Stem("spăl"), "spăl");});
test("spăla -> spăl", function() {deepEqual( Stem("spăla"), "spăl");});
test("spălat -> spălat", function() {deepEqual( Stem("spălat"), "spălat");});
test("spălate -> spălat", function() {deepEqual( Stem("spălate"), "spălat");});
test("spălături -> spălătur", function() {deepEqual( Stem("spălături"), "spălătur");});
test("spărtura -> spărtur", function() {deepEqual( Stem("spărtura"), "spărtur");});
test("spărturi -> spărtur", function() {deepEqual( Stem("spărturi"), "spărtur");});
test("spătarul -> spătar", function() {deepEqual( Stem("spătarul"), "spătar");});
test("specia -> spec", function() {deepEqual( Stem("specia"), "spec");});
test("special -> special", function() {deepEqual( Stem("special"), "special");});
test("specială -> special", function() {deepEqual( Stem("specială"), "special");});
test("speciale -> special", function() {deepEqual( Stem("speciale"), "special");});
test("specialist -> specialist", function() {deepEqual( Stem("specialist"), "specialist");});
test("specialiştii -> specialist", function() {deepEqual( Stem("specialiştii"), "specialist");});
test("specialitate -> special", function() {deepEqual( Stem("specialitate"), "special");});
test("specie -> spec", function() {deepEqual( Stem("specie"), "spec");});
test("speciei -> spec", function() {deepEqual( Stem("speciei"), "spec");});
test("specific -> specif", function() {deepEqual( Stem("specific"), "specif");});
test("specifică -> specif", function() {deepEqual( Stem("specifică"), "specif");});
test("specificării -> specificăr", function() {deepEqual( Stem("specificării"), "specificăr");});
test("specifice -> specif", function() {deepEqual( Stem("specifice"), "specif");});
test("specificii -> specif", function() {deepEqual( Stem("specificii"), "specif");});
test("specii -> spec", function() {deepEqual( Stem("specii"), "spec");});
test("specimenelor -> specimen", function() {deepEqual( Stem("specimenelor"), "specimen");});
test("spectacol -> spectacol", function() {deepEqual( Stem("spectacol"), "spectacol");});
test("spectacole -> spectacol", function() {deepEqual( Stem("spectacole"), "spectacol");});
test("spectacolele -> spectacol", function() {deepEqual( Stem("spectacolele"), "spectacol");});
test("spectacolul -> spectacol", function() {deepEqual( Stem("spectacolul"), "spectacol");});
test("spectacolului -> spectacol", function() {deepEqual( Stem("spectacolului"), "spectacol");});
test("spectator -> spectat", function() {deepEqual( Stem("spectator"), "spectat");});
test("spectatori -> spectat", function() {deepEqual( Stem("spectatori"), "spectat");});
test("speculat -> specul", function() {deepEqual( Stem("speculat"), "specul");});
test("speculativă -> specul", function() {deepEqual( Stem("speculativă"), "specul");});
test("speculative -> specul", function() {deepEqual( Stem("speculative"), "specul");});
test("speculaţiei -> specul", function() {deepEqual( Stem("speculaţiei"), "specul");});
test("speculaţiune -> specul", function() {deepEqual( Stem("speculaţiune"), "specul");});
test("speculaţiuni -> speculat", function() {deepEqual( Stem("speculaţiuni"), "speculat");});
test("speculaţiunile -> speculat", function() {deepEqual( Stem("speculaţiunile"), "speculat");});
test("speculează -> specul", function() {deepEqual( Stem("speculează"), "specul");});
test("speculeze -> specul", function() {deepEqual( Stem("speculeze"), "specul");});
test("spele -> spel", function() {deepEqual( Stem("spele"), "spel");});
test("spencer -> spencer", function() {deepEqual( Stem("spencer"), "spencer");});
test("spengler -> spengler", function() {deepEqual( Stem("spengler"), "spengler");});
test("sper -> sper", function() {deepEqual( Stem("sper"), "sper");});
test("spera -> sper", function() {deepEqual( Stem("spera"), "sper");});
test("speram -> sper", function() {deepEqual( Stem("speram"), "sper");});
test("speranţa -> speranţ", function() {deepEqual( Stem("speranţa"), "speranţ");});
test("speranţe -> speranţ", function() {deepEqual( Stem("speranţe"), "speranţ");});
test("speranţei -> speranţe", function() {deepEqual( Stem("speranţei"), "speranţe");});
test("speranţele -> speranţ", function() {deepEqual( Stem("speranţele"), "speranţ");});
test("speră -> sper", function() {deepEqual( Stem("speră"), "sper");});
test("sperăm -> sper", function() {deepEqual( Stem("sperăm"), "sper");});
test("speriat -> speriat", function() {deepEqual( Stem("speriat"), "speriat");});
test("speriată -> speriat", function() {deepEqual( Stem("speriată"), "speriat");});
test("speriaţi -> sper", function() {deepEqual( Stem("speriaţi"), "sper");});
test("sperie -> sper", function() {deepEqual( Stem("sperie"), "sper");});
test("sperioase -> sperioas", function() {deepEqual( Stem("sperioase"), "sperioas");});
test("sperios -> sperios", function() {deepEqual( Stem("sperios"), "sperios");});
test("sperioşi -> sperioş", function() {deepEqual( Stem("sperioşi"), "sperioş");});
test("speţa -> speţ", function() {deepEqual( Stem("speţa"), "speţ");});
test("spinare -> spin", function() {deepEqual( Stem("spinare"), "spin");});
test("spinarea -> spin", function() {deepEqual( Stem("spinarea"), "spin");});
test("spinării -> spinăr", function() {deepEqual( Stem("spinării"), "spinăr");});
test("spinoza -> spinoz", function() {deepEqual( Stem("spinoza"), "spinoz");});
test("spinozismului -> spinozist", function() {deepEqual( Stem("spinozismului"), "spinozist");});
test("spinozist -> spinozist", function() {deepEqual( Stem("spinozist"), "spinozist");});
test("spinozistă -> spinozist", function() {deepEqual( Stem("spinozistă"), "spinozist");});
test("spinoziste -> spinozist", function() {deepEqual( Stem("spinoziste"), "spinozist");});
test("spintecat -> spintec", function() {deepEqual( Stem("spintecat"), "spintec");});
test("spintecate -> spintec", function() {deepEqual( Stem("spintecate"), "spintec");});
test("spintecând -> spintec", function() {deepEqual( Stem("spintecând"), "spintec");});
test("spioana -> spioan", function() {deepEqual( Stem("spioana"), "spioan");});
test("spioane -> spioan", function() {deepEqual( Stem("spioane"), "spioan");});
test("spioanele -> spioan", function() {deepEqual( Stem("spioanele"), "spioan");});
test("spion -> spion", function() {deepEqual( Stem("spion"), "spion");});
test("spionaj -> spionaj", function() {deepEqual( Stem("spionaj"), "spionaj");});
test("spionat -> spionat", function() {deepEqual( Stem("spionat"), "spionat");});
test("spionându -> spion", function() {deepEqual( Stem("spionându"), "spion");});
test("spionii -> spion", function() {deepEqual( Stem("spionii"), "spion");});
test("spionilor -> spion", function() {deepEqual( Stem("spionilor"), "spion");});
test("spirală -> spiral", function() {deepEqual( Stem("spirală"), "spiral");});
test("spirea -> spir", function() {deepEqual( Stem("spirea"), "spir");});
test("spirit -> spirit", function() {deepEqual( Stem("spirit"), "spirit");});
test("spirite -> spirit", function() {deepEqual( Stem("spirite"), "spirit");});
test("spiritele -> spirit", function() {deepEqual( Stem("spiritele"), "spirit");});
test("spiritism -> spiritist", function() {deepEqual( Stem("spiritism"), "spiritist");});
test("spiritismului -> spiritist", function() {deepEqual( Stem("spiritismului"), "spiritist");});
test("spiritual -> spiritual", function() {deepEqual( Stem("spiritual"), "spiritual");});
test("spirituală -> spiritual", function() {deepEqual( Stem("spirituală"), "spiritual");});
test("spirituale -> spiritual", function() {deepEqual( Stem("spirituale"), "spiritual");});
test("spiritul -> spirit", function() {deepEqual( Stem("spiritul"), "spirit");});
test("spiritului -> spirit", function() {deepEqual( Stem("spiritului"), "spirit");});
test("spital -> spital", function() {deepEqual( Stem("spital"), "spital");});
test("spitale -> spital", function() {deepEqual( Stem("spitale"), "spital");});
test("spitalelor -> spital", function() {deepEqual( Stem("spitalelor"), "spital");});
test("spitalul -> spital", function() {deepEqual( Stem("spitalul"), "spital");});
test("spitalurile -> spitalur", function() {deepEqual( Stem("spitalurile"), "spitalur");});
test("spitteler -> spitteler", function() {deepEqual( Stem("spitteler"), "spitteler");});
test("spiţa -> spiţ", function() {deepEqual( Stem("spiţa"), "spiţ");});
test("splendid -> splendid", function() {deepEqual( Stem("splendid"), "splendid");});
test("splendida -> splendid", function() {deepEqual( Stem("splendida"), "splendid");});
test("splendidă -> splendid", function() {deepEqual( Stem("splendidă"), "splendid");});
test("splendide -> splendid", function() {deepEqual( Stem("splendide"), "splendid");});
test("spontană -> spontan", function() {deepEqual( Stem("spontană"), "spontan");});
test("spontane -> spontan", function() {deepEqual( Stem("spontane"), "spontan");});
test("spontaneitate -> spontan", function() {deepEqual( Stem("spontaneitate"), "spontan");});
test("spontaneitatea -> spontan", function() {deepEqual( Stem("spontaneitatea"), "spontan");});
test("spor -> spor", function() {deepEqual( Stem("spor"), "spor");});
test("sporească -> spor", function() {deepEqual( Stem("sporească"), "spor");});
test("sporesc -> spor", function() {deepEqual( Stem("sporesc"), "spor");});
test("sporeşte -> spor", function() {deepEqual( Stem("sporeşte"), "spor");});
test("sporind -> spor", function() {deepEqual( Stem("sporind"), "spor");});
test("sporire -> spor", function() {deepEqual( Stem("sporire"), "spor");});
test("sporise -> spor", function() {deepEqual( Stem("sporise"), "spor");});
test("sporit -> sporit", function() {deepEqual( Stem("sporit"), "sporit");});
test("sporită -> sporit", function() {deepEqual( Stem("sporită"), "sporit");});
test("sport -> sport", function() {deepEqual( Stem("sport"), "sport");});
test("sportivă -> sportiv", function() {deepEqual( Stem("sportivă"), "sportiv");});
test("sportmen -> sportmen", function() {deepEqual( Stem("sportmen"), "sportmen");});
test("sporturi -> sportur", function() {deepEqual( Stem("sporturi"), "sportur");});
test("sprâncene -> sprâncen", function() {deepEqual( Stem("sprâncene"), "sprâncen");});
test("sprâncenele -> sprâncen", function() {deepEqual( Stem("sprâncenele"), "sprâncen");});
test("sprâncenelor -> sprâncen", function() {deepEqual( Stem("sprâncenelor"), "sprâncen");});
test("spre -> spre", function() {deepEqual( Stem("spre"), "spre");});
test("sprijin -> sprijin", function() {deepEqual( Stem("sprijin"), "sprijin");});
test("sprijină -> sprijin", function() {deepEqual( Stem("sprijină"), "sprijin");});
test("sprijinim -> sprijin", function() {deepEqual( Stem("sprijinim"), "sprijin");});
test("sprijinit -> sprijin", function() {deepEqual( Stem("sprijinit"), "sprijin");});
test("sprijinită -> sprijin", function() {deepEqual( Stem("sprijinită"), "sprijin");});
test("sprijiniţi -> sprijin", function() {deepEqual( Stem("sprijiniţi"), "sprijin");});
test("sprinten -> sprinten", function() {deepEqual( Stem("sprinten"), "sprinten");});
test("sprintene -> sprinten", function() {deepEqual( Stem("sprintene"), "sprinten");});
test("sprinteneala -> sprinteneal", function() {deepEqual( Stem("sprinteneala"), "sprinteneal");});
test("spui -> spu", function() {deepEqual( Stem("spui"), "spu");});
test("spuie -> spui", function() {deepEqual( Stem("spuie"), "spui");});
test("spumă -> spum", function() {deepEqual( Stem("spumă"), "spum");});
test("spumoasă -> spumoas", function() {deepEqual( Stem("spumoasă"), "spumoas");});
test("spumoase -> spumoas", function() {deepEqual( Stem("spumoase"), "spumoas");});
test("spun -> spun", function() {deepEqual( Stem("spun"), "spun");});
test("spunând -> spun", function() {deepEqual( Stem("spunând"), "spun");});
test("spunându -> spun", function() {deepEqual( Stem("spunându"), "spun");});
test("spună -> spun", function() {deepEqual( Stem("spună"), "spun");});
test("spune -> spun", function() {deepEqual( Stem("spune"), "spun");});
test("spunea -> spun", function() {deepEqual( Stem("spunea"), "spun");});
test("spuneai -> spun", function() {deepEqual( Stem("spuneai"), "spun");});
test("spuneam -> spun", function() {deepEqual( Stem("spuneam"), "spun");});
test("spuneau -> spun", function() {deepEqual( Stem("spuneau"), "spun");});
test("spunei -> spune", function() {deepEqual( Stem("spunei"), "spune");});
test("spunem -> spun", function() {deepEqual( Stem("spunem"), "spun");});
test("spuneţi -> spun", function() {deepEqual( Stem("spuneţi"), "spun");});
test("spus -> spus", function() {deepEqual( Stem("spus"), "spus");});
test("spusă -> spus", function() {deepEqual( Stem("spusă"), "spus");});
test("spuse -> spu", function() {deepEqual( Stem("spuse"), "spu");});
test("spusei -> spu", function() {deepEqual( Stem("spusei"), "spu");});
test("spusese -> spu", function() {deepEqual( Stem("spusese"), "spu");});
test("spusesem -> spu", function() {deepEqual( Stem("spusesem"), "spu");});
test("spuzeală -> spuzeal", function() {deepEqual( Stem("spuzeală"), "spuzeal");});
test("sta -> sta", function() {deepEqual( Stem("sta"), "sta");});
test("stabil -> stabil", function() {deepEqual( Stem("stabil"), "stabil");});
test("stabilea -> stabil", function() {deepEqual( Stem("stabilea"), "stabil");});
test("stabilească -> stabil", function() {deepEqual( Stem("stabilească"), "stabil");});
test("stabilesc -> stabil", function() {deepEqual( Stem("stabilesc"), "stabil");});
test("stabileşte -> stabil", function() {deepEqual( Stem("stabileşte"), "stabil");});
test("stabileşti -> stabil", function() {deepEqual( Stem("stabileşti"), "stabil");});
test("stabili -> stabil", function() {deepEqual( Stem("stabili"), "stabil");});
test("stabilim -> stabil", function() {deepEqual( Stem("stabilim"), "stabil");});
test("stabiliment -> stabiliment", function() {deepEqual( Stem("stabiliment"), "stabiliment");});
test("stabilimente -> stabiliment", function() {deepEqual( Stem("stabilimente"), "stabiliment");});
test("stabilimentelor -> stabiliment", function() {deepEqual( Stem("stabilimentelor"), "stabiliment");});
test("stabilind -> stabil", function() {deepEqual( Stem("stabilind"), "stabil");});
test("stabilion -> stabilion", function() {deepEqual( Stem("stabilion"), "stabilion");});
test("stabilire -> stabil", function() {deepEqual( Stem("stabilire"), "stabil");});
test("stabilirea -> stabil", function() {deepEqual( Stem("stabilirea"), "stabil");});
test("stabilirii -> stabilir", function() {deepEqual( Stem("stabilirii"), "stabilir");});
test("stabilise -> stabil", function() {deepEqual( Stem("stabilise"), "stabil");});
test("stabilisem -> stabil", function() {deepEqual( Stem("stabilisem"), "stabil");});
test("stabilit -> stabil", function() {deepEqual( Stem("stabilit"), "stabil");});
test("stabilitate -> stabil", function() {deepEqual( Stem("stabilitate"), "stabil");});
test("stabilitateaen -> stabilitateaen", function() {deepEqual( Stem("stabilitateaen"), "stabilitateaen");});
test("stabilitation -> stabilitation", function() {deepEqual( Stem("stabilitation"), "stabilitation");});
test("stabilită -> stabil", function() {deepEqual( Stem("stabilită"), "stabil");});
test("stabilităţii -> stabil", function() {deepEqual( Stem("stabilităţii"), "stabil");});
test("stabilite -> stabil", function() {deepEqual( Stem("stabilite"), "stabil");});
test("stabiliţi -> stabil", function() {deepEqual( Stem("stabiliţi"), "stabil");});
test("stabiliza -> stabiliz", function() {deepEqual( Stem("stabiliza"), "stabiliz");});
test("stabilizare -> stabiliz", function() {deepEqual( Stem("stabilizare"), "stabiliz");});
test("stabilizarea -> stabiliz", function() {deepEqual( Stem("stabilizarea"), "stabiliz");});
test("stabilizatoare -> stabiliz", function() {deepEqual( Stem("stabilizatoare"), "stabiliz");});
test("stabilizator -> stabiliz", function() {deepEqual( Stem("stabilizator"), "stabiliz");});
test("stabilizeze -> stabiliz", function() {deepEqual( Stem("stabilizeze"), "stabiliz");});
test("stacojise -> stacoj", function() {deepEqual( Stem("stacojise"), "stacoj");});
test("stacojiu -> stacojiu", function() {deepEqual( Stem("stacojiu"), "stacojiu");});
test("stadii -> stad", function() {deepEqual( Stem("stadii"), "stad");});
test("stadioanele -> stadioan", function() {deepEqual( Stem("stadioanele"), "stadioan");});
test("stadion -> stadion", function() {deepEqual( Stem("stadion"), "stadion");});
test("stadiu -> stadiu", function() {deepEqual( Stem("stadiu"), "stadiu");});
test("stadiul -> stad", function() {deepEqual( Stem("stadiul"), "stad");});
test("stafia -> staf", function() {deepEqual( Stem("stafia"), "staf");});
test("stafide -> stafid", function() {deepEqual( Stem("stafide"), "stafid");});
test("stafie -> staf", function() {deepEqual( Stem("stafie"), "staf");});
test("stafii -> staf", function() {deepEqual( Stem("stafii"), "staf");});
test("stafiile -> staf", function() {deepEqual( Stem("stafiile"), "staf");});
test("stai -> sta", function() {deepEqual( Stem("stai"), "sta");});
test("stam -> stam", function() {deepEqual( Stem("stam"), "stam");});
test("stanca -> stanc", function() {deepEqual( Stem("stanca"), "stanc");});
test("stancii -> stanc", function() {deepEqual( Stem("stancii"), "stanc");});
test("stand -> stand", function() {deepEqual( Stem("stand"), "stand");});
test("stare -> star", function() {deepEqual( Stem("stare"), "star");});
test("starea -> star", function() {deepEqual( Stem("starea"), "star");});
test("stareţul -> stareţ", function() {deepEqual( Stem("stareţul"), "stareţ");});
test("stat -> stat", function() {deepEqual( Stem("stat"), "stat");});
test("statală -> statal", function() {deepEqual( Stem("statală"), "statal");});
test("statale -> statal", function() {deepEqual( Stem("statale"), "statal");});
test("state -> stat", function() {deepEqual( Stem("state"), "stat");});
test("statele -> stat", function() {deepEqual( Stem("statele"), "stat");});
test("statelor -> stat", function() {deepEqual( Stem("statelor"), "stat");});
test("static -> static", function() {deepEqual( Stem("static"), "static");});
test("statică -> static", function() {deepEqual( Stem("statică"), "static");});
test("staticismul -> staticist", function() {deepEqual( Stem("staticismul"), "staticist");});
test("statistic -> statist", function() {deepEqual( Stem("statistic"), "statist");});
test("statistica -> statist", function() {deepEqual( Stem("statistica"), "statist");});
test("statistică -> statist", function() {deepEqual( Stem("statistică"), "statist");});
test("statistici -> statist", function() {deepEqual( Stem("statistici"), "statist");});
test("statisticieni -> statisticien", function() {deepEqual( Stem("statisticieni"), "statisticien");});
test("statisticile -> statist", function() {deepEqual( Stem("statisticile"), "statist");});
test("statornic -> statorn", function() {deepEqual( Stem("statornic"), "statorn");});
test("statornică -> statorn", function() {deepEqual( Stem("statornică"), "statorn");});
test("statornice -> statorn", function() {deepEqual( Stem("statornice"), "statorn");});
test("statornicească -> statornic", function() {deepEqual( Stem("statornicească"), "statornic");});
test("statornicite -> statornic", function() {deepEqual( Stem("statornicite"), "statornic");});
test("statuetă -> statuet", function() {deepEqual( Stem("statuetă"), "statuet");});
test("statuie -> statui", function() {deepEqual( Stem("statuie"), "statui");});
test("statul -> stat", function() {deepEqual( Stem("statul"), "stat");});
test("statului -> stat", function() {deepEqual( Stem("statului"), "stat");});
test("statură -> stat", function() {deepEqual( Stem("statură"), "stat");});
test("staţi -> staţ", function() {deepEqual( Stem("staţi"), "staţ");});
test("staţia -> staţ", function() {deepEqual( Stem("staţia"), "staţ");});
test("staţie -> staţ", function() {deepEqual( Stem("staţie"), "staţ");});
test("staţii -> staţ", function() {deepEqual( Stem("staţii"), "staţ");});
test("staţiile -> staţ", function() {deepEqual( Stem("staţiile"), "staţ");});
test("staţiona -> staţion", function() {deepEqual( Stem("staţiona"), "staţion");});
test("staţionar -> staţionar", function() {deepEqual( Stem("staţionar"), "staţionar");});
test("staţionare -> staţion", function() {deepEqual( Stem("staţionare"), "staţion");});
test("staţioneze -> staţion", function() {deepEqual( Stem("staţioneze"), "staţion");});
test("staţiune -> staţiun", function() {deepEqual( Stem("staţiune"), "staţiun");});
test("staţiunea -> staţiun", function() {deepEqual( Stem("staţiunea"), "staţiun");});
test("stau -> stau", function() {deepEqual( Stem("stau"), "stau");});
test("stâlp -> stâlp", function() {deepEqual( Stem("stâlp"), "stâlp");});
test("stâlpi -> stâlp", function() {deepEqual( Stem("stâlpi"), "stâlp");});
test("stâna -> stân", function() {deepEqual( Stem("stâna"), "stân");});
test("stână -> stân", function() {deepEqual( Stem("stână"), "stân");});
test("stâncă -> stânc", function() {deepEqual( Stem("stâncă"), "stânc");});
test("stânci -> stânc", function() {deepEqual( Stem("stânci"), "stânc");});
test("stâncile -> stânc", function() {deepEqual( Stem("stâncile"), "stânc");});
test("stâncoase -> stâncoas", function() {deepEqual( Stem("stâncoase"), "stâncoas");});
test("stâncos -> stâncos", function() {deepEqual( Stem("stâncos"), "stâncos");});
test("stâncoşi -> stâncoş", function() {deepEqual( Stem("stâncoşi"), "stâncoş");});
test("stând -> stând", function() {deepEqual( Stem("stând"), "stând");});
test("stâng -> stâng", function() {deepEqual( Stem("stâng"), "stâng");});
test("stânga -> stâng", function() {deepEqual( Stem("stânga"), "stâng");});
test("stângaci -> stângac", function() {deepEqual( Stem("stângaci"), "stângac");});
test("stângă -> stâng", function() {deepEqual( Stem("stângă"), "stâng");});
test("stângăcia -> stângăc", function() {deepEqual( Stem("stângăcia"), "stângăc");});
test("stânjenea -> stânjen", function() {deepEqual( Stem("stânjenea"), "stânjen");});
test("stânjeni -> stânjen", function() {deepEqual( Stem("stânjeni"), "stânjen");});
test("stânjenire -> stânjen", function() {deepEqual( Stem("stânjenire"), "stânjen");});
test("stânjenit -> stânjen", function() {deepEqual( Stem("stânjenit"), "stânjen");});
test("stânjenita -> stânjen", function() {deepEqual( Stem("stânjenita"), "stânjen");});
test("stânjenitor -> stânjen", function() {deepEqual( Stem("stânjenitor"), "stânjen");});
test("stârneşte -> stârn", function() {deepEqual( Stem("stârneşte"), "stârn");});
test("stârnind -> stârn", function() {deepEqual( Stem("stârnind"), "stârn");});
test("stârnit -> stârnit", function() {deepEqual( Stem("stârnit"), "stârnit");});
test("stă -> stă", function() {deepEqual( Stem("stă"), "stă");});
test("stăm -> stăm", function() {deepEqual( Stem("stăm"), "stăm");});
test("stănescu -> stănescu", function() {deepEqual( Stem("stănescu"), "stănescu");});
test("stăpân -> stăpân", function() {deepEqual( Stem("stăpân"), "stăpân");});
test("stăpâna -> stăpân", function() {deepEqual( Stem("stăpâna"), "stăpân");});
test("stăpână -> stăpân", function() {deepEqual( Stem("stăpână"), "stăpân");});
test("stăpânea -> stăpân", function() {deepEqual( Stem("stăpânea"), "stăpân");});
test("stăpânească -> stăpân", function() {deepEqual( Stem("stăpânească"), "stăpân");});
test("stăpâneau -> stăpân", function() {deepEqual( Stem("stăpâneau"), "stăpân");});
test("stăpânesc -> stăpân", function() {deepEqual( Stem("stăpânesc"), "stăpân");});
test("stăpâneşte -> stăpân", function() {deepEqual( Stem("stăpâneşte"), "stăpân");});
test("stăpâni -> stăpân", function() {deepEqual( Stem("stăpâni"), "stăpân");});
test("stăpânii -> stăpân", function() {deepEqual( Stem("stăpânii"), "stăpân");});
test("stăpânim -> stăpân", function() {deepEqual( Stem("stăpânim"), "stăpân");});
test("stăpânindu -> stăpân", function() {deepEqual( Stem("stăpânindu"), "stăpân");});
test("stăpânire -> stăpân", function() {deepEqual( Stem("stăpânire"), "stăpân");});
test("stăpânirea -> stăpân", function() {deepEqual( Stem("stăpânirea"), "stăpân");});
test("stăpânirii -> stăpânir", function() {deepEqual( Stem("stăpânirii"), "stăpânir");});
test("stăpânit -> stăpân", function() {deepEqual( Stem("stăpânit"), "stăpân");});
test("stăpânită -> stăpân", function() {deepEqual( Stem("stăpânită"), "stăpân");});
test("stăpânitoare -> stăpân", function() {deepEqual( Stem("stăpânitoare"), "stăpân");});
test("stăpânul -> stăpân", function() {deepEqual( Stem("stăpânul"), "stăpân");});
test("stăpânului -> stăpân", function() {deepEqual( Stem("stăpânului"), "stăpân");});
test("stări -> stăr", function() {deepEqual( Stem("stări"), "stăr");});
test("stările -> stăr", function() {deepEqual( Stem("stările"), "stăr");});
test("stărilor -> stăr", function() {deepEqual( Stem("stărilor"), "stăr");});
test("stărui -> stăr", function() {deepEqual( Stem("stărui"), "stăr");});
test("stăruia -> stărui", function() {deepEqual( Stem("stăruia"), "stărui");});
test("stăruie -> stărui", function() {deepEqual( Stem("stăruie"), "stărui");});
test("stăruim -> stăru", function() {deepEqual( Stem("stăruim"), "stăru");});
test("stăruinţa -> stăruinţ", function() {deepEqual( Stem("stăruinţa"), "stăruinţ");});
test("stăruinţă -> stăruinţ", function() {deepEqual( Stem("stăruinţă"), "stăruinţ");});
test("stăruinţe -> stăruinţ", function() {deepEqual( Stem("stăruinţe"), "stăruinţ");});
test("stăruinţele -> stăruinţ", function() {deepEqual( Stem("stăruinţele"), "stăruinţ");});
test("stăruit -> stăruit", function() {deepEqual( Stem("stăruit"), "stăruit");});
test("stăruitoare -> stăruit", function() {deepEqual( Stem("stăruitoare"), "stăruit");});
test("stăruitor -> stăruit", function() {deepEqual( Stem("stăruitor"), "stăruit");});
test("stătătoare -> stătat", function() {deepEqual( Stem("stătătoare"), "stătat");});
test("stătător -> stătat", function() {deepEqual( Stem("stătător"), "stătat");});
test("stătea -> stăt", function() {deepEqual( Stem("stătea"), "stăt");});
test("stăteai -> stăt", function() {deepEqual( Stem("stăteai"), "stăt");});
test("stăteam -> stăt", function() {deepEqual( Stem("stăteam"), "stăt");});
test("stăteau -> stăt", function() {deepEqual( Stem("stăteau"), "stăt");});
test("stătuse -> stăt", function() {deepEqual( Stem("stătuse"), "stăt");});
test("stătut -> stătut", function() {deepEqual( Stem("stătut"), "stătut");});
test("stea -> ste", function() {deepEqual( Stem("stea"), "ste");});
test("steag -> steag", function() {deepEqual( Stem("steag"), "steag");});
test("steaguri -> steagur", function() {deepEqual( Stem("steaguri"), "steagur");});
test("steaua -> steau", function() {deepEqual( Stem("steaua"), "steau");});
test("stegar -> stegar", function() {deepEqual( Stem("stegar"), "stegar");});
test("stegarul -> stegar", function() {deepEqual( Stem("stegarul"), "stegar");});
test("stejar -> stejar", function() {deepEqual( Stem("stejar"), "stejar");});
test("stejăriş -> stejăriş", function() {deepEqual( Stem("stejăriş"), "stejăriş");});
test("stelară -> stel", function() {deepEqual( Stem("stelară"), "stel");});
test("stele -> stel", function() {deepEqual( Stem("stele"), "stel");});
test("stelei -> stele", function() {deepEqual( Stem("stelei"), "stele");});
test("stelele -> stel", function() {deepEqual( Stem("stelele"), "stel");});
test("stelelor -> stel", function() {deepEqual( Stem("stelelor"), "stel");});
test("steluţa -> steluţ", function() {deepEqual( Stem("steluţa"), "steluţ");});
test("steluţă -> steluţ", function() {deepEqual( Stem("steluţă"), "steluţ");});
test("stemă -> stem", function() {deepEqual( Stem("stemă"), "stem");});
test("stena -> sten", function() {deepEqual( Stem("stena"), "sten");});
test("stenograf -> stenograf", function() {deepEqual( Stem("stenograf"), "stenograf");});
test("stenografiase -> stenografias", function() {deepEqual( Stem("stenografiase"), "stenografias");});
test("stenografiate -> stenograf", function() {deepEqual( Stem("stenografiate"), "stenograf");});
test("stenogramă -> stenogram", function() {deepEqual( Stem("stenogramă"), "stenogram");});
test("stenograme -> stenogram", function() {deepEqual( Stem("stenograme"), "stenogram");});
test("stenogramei -> stenograme", function() {deepEqual( Stem("stenogramei"), "stenograme");});
test("stepele -> step", function() {deepEqual( Stem("stepele"), "step");});
test("stepelor -> step", function() {deepEqual( Stem("stepelor"), "step");});
test("stereo -> stereo", function() {deepEqual( Stem("stereo"), "stereo");});
test("stereoscopia -> stereoscop", function() {deepEqual( Stem("stereoscopia"), "stereoscop");});
test("stereoscopic -> stereoscop", function() {deepEqual( Stem("stereoscopic"), "stereoscop");});
test("stereoscopică -> stereoscop", function() {deepEqual( Stem("stereoscopică"), "stereoscop");});
test("stereoscopice -> stereoscop", function() {deepEqual( Stem("stereoscopice"), "stereoscop");});
test("stereoscopie -> stereoscop", function() {deepEqual( Stem("stereoscopie"), "stereoscop");});
test("stereoscopiei -> stereoscop", function() {deepEqual( Stem("stereoscopiei"), "stereoscop");});
test("stereosimetrie -> stereosimetr", function() {deepEqual( Stem("stereosimetrie"), "stereosimetr");});
test("stereotip -> stereotip", function() {deepEqual( Stem("stereotip"), "stereotip");});
test("stereotipă -> stereotip", function() {deepEqual( Stem("stereotipă"), "stereotip");});
test("stereotipii -> stereotip", function() {deepEqual( Stem("stereotipii"), "stereotip");});
test("stereotipurile -> stereotipur", function() {deepEqual( Stem("stereotipurile"), "stereotipur");});
test("steril -> steril", function() {deepEqual( Stem("steril"), "steril");});
test("sterilă -> steril", function() {deepEqual( Stem("sterilă"), "steril");});
test("sterpe -> sterp", function() {deepEqual( Stem("sterpe"), "sterp");});
test("steyerul -> steyer", function() {deepEqual( Stem("steyerul"), "steyer");});
test("sticla -> sticl", function() {deepEqual( Stem("sticla"), "sticl");});
test("sticlă -> sticl", function() {deepEqual( Stem("sticlă"), "sticl");});
test("sticle -> sticl", function() {deepEqual( Stem("sticle"), "sticl");});
test("sticleau -> sticl", function() {deepEqual( Stem("sticleau"), "sticl");});
test("sticlei -> sticle", function() {deepEqual( Stem("sticlei"), "sticle");});
test("sticlele -> sticl", function() {deepEqual( Stem("sticlele"), "sticl");});
test("sticloşi -> sticloş", function() {deepEqual( Stem("sticloşi"), "sticloş");});
test("stil -> stil", function() {deepEqual( Stem("stil"), "stil");});
test("stilet -> stilet", function() {deepEqual( Stem("stilet"), "stilet");});
test("stilistică -> stilist", function() {deepEqual( Stem("stilistică"), "stilist");});
test("stilizare -> stiliz", function() {deepEqual( Stem("stilizare"), "stiliz");});
test("stilizată -> stiliz", function() {deepEqual( Stem("stilizată"), "stiliz");});
test("stilul -> stil", function() {deepEqual( Stem("stilul"), "stil");});
test("stilului -> stil", function() {deepEqual( Stem("stilului"), "stil");});
test("stilurile -> stilur", function() {deepEqual( Stem("stilurile"), "stilur");});
test("stilurilor -> stilur", function() {deepEqual( Stem("stilurilor"), "stilur");});
test("stimabile -> stimabil", function() {deepEqual( Stem("stimabile"), "stimabil");});
test("stimă -> stim", function() {deepEqual( Stem("stimă"), "stim");});
test("stimez -> stim", function() {deepEqual( Stem("stimez"), "stim");});
test("stimulent -> stimulent", function() {deepEqual( Stem("stimulent"), "stimulent");});
test("stimulente -> stimulent", function() {deepEqual( Stem("stimulente"), "stimulent");});
test("sting -> sting", function() {deepEqual( Stem("sting"), "sting");});
test("stinge -> sting", function() {deepEqual( Stem("stinge"), "sting");});
test("stingher -> stingher", function() {deepEqual( Stem("stingher"), "stingher");});
test("stingherească -> stingher", function() {deepEqual( Stem("stingherească"), "stingher");});
test("stingheritoare -> stingher", function() {deepEqual( Stem("stingheritoare"), "stingher");});
test("stingheritor -> stingher", function() {deepEqual( Stem("stingheritor"), "stingher");});
test("stinghie -> stingh", function() {deepEqual( Stem("stinghie"), "stingh");});
test("stinjeniţi -> stinjen", function() {deepEqual( Stem("stinjeniţi"), "stinjen");});
test("stins -> stins", function() {deepEqual( Stem("stins"), "stins");});
test("stinsă -> stins", function() {deepEqual( Stem("stinsă"), "stins");});
test("stinse -> stin", function() {deepEqual( Stem("stinse"), "stin");});
test("stipendii -> stipend", function() {deepEqual( Stem("stipendii"), "stipend");});
test("stipula -> stipul", function() {deepEqual( Stem("stipula"), "stipul");});
test("stipulează -> stipul", function() {deepEqual( Stem("stipulează"), "stipul");});
test("stipulînd -> stipulînd", function() {deepEqual( Stem("stipulînd"), "stipulînd");});
test("stîngul -> stîng", function() {deepEqual( Stem("stîngul"), "stîng");});
test("stînjen -> stînjen", function() {deepEqual( Stem("stînjen"), "stînjen");});
test("stînjenit -> stînjen", function() {deepEqual( Stem("stînjenit"), "stînjen");});
test("stînjenitoare -> stînjen", function() {deepEqual( Stem("stînjenitoare"), "stînjen");});
test("stîrnea -> stîrn", function() {deepEqual( Stem("stîrnea"), "stîrn");});
test("stîrnească -> stîrn", function() {deepEqual( Stem("stîrnească"), "stîrn");});
test("stîrnesc -> stîrn", function() {deepEqual( Stem("stîrnesc"), "stîrn");});
test("stîrneşte -> stîrn", function() {deepEqual( Stem("stîrneşte"), "stîrn");});
test("stîrni -> stîrn", function() {deepEqual( Stem("stîrni"), "stîrn");});
test("stîrnim -> stîrn", function() {deepEqual( Stem("stîrnim"), "stîrn");});
test("stîrnind -> stîrn", function() {deepEqual( Stem("stîrnind"), "stîrn");});
test("stoarsă -> stoars", function() {deepEqual( Stem("stoarsă"), "stoars");});
test("stofă -> stof", function() {deepEqual( Stem("stofă"), "stof");});
test("stofei -> stofe", function() {deepEqual( Stem("stofei"), "stofe");});
test("stol -> stol", function() {deepEqual( Stem("stol"), "stol");});
test("stomac -> stomac", function() {deepEqual( Stem("stomac"), "stomac");});
test("stomacul -> stomac", function() {deepEqual( Stem("stomacul"), "stomac");});
test("stomacului -> stomac", function() {deepEqual( Stem("stomacului"), "stomac");});
test("storurile -> storur", function() {deepEqual( Stem("storurile"), "storur");});
test("stosmaşine -> stosmaşin", function() {deepEqual( Stem("stosmaşine"), "stosmaşin");});
test("str -> str", function() {deepEqual( Stem("str"), "str");});
test("strachină -> strachin", function() {deepEqual( Stem("strachină"), "strachin");});
test("strada -> strad", function() {deepEqual( Stem("strada"), "strad");});
test("stradă -> strad", function() {deepEqual( Stem("stradă"), "strad");});
test("strade -> strad", function() {deepEqual( Stem("strade"), "strad");});
test("strania -> stran", function() {deepEqual( Stem("strania"), "stran");});
test("stranie -> stran", function() {deepEqual( Stem("stranie"), "stran");});
test("stranietate -> straniet", function() {deepEqual( Stem("stranietate"), "straniet");});
test("straniu -> straniu", function() {deepEqual( Stem("straniu"), "straniu");});
test("strapontinele -> strapontin", function() {deepEqual( Stem("strapontinele"), "strapontin");});
test("strasbourg -> strasbourg", function() {deepEqual( Stem("strasbourg"), "strasbourg");});
test("straşnic -> straşnic", function() {deepEqual( Stem("straşnic"), "straşnic");});
test("straşnică -> straşnic", function() {deepEqual( Stem("straşnică"), "straşnic");});
test("straşnice -> straşnic", function() {deepEqual( Stem("straşnice"), "straşnic");});
test("strat -> strat", function() {deepEqual( Stem("strat"), "strat");});
test("stratagemă -> stratagem", function() {deepEqual( Stem("stratagemă"), "stratagem");});
test("strateg -> strateg", function() {deepEqual( Stem("strateg"), "strateg");});
test("strategi -> strateg", function() {deepEqual( Stem("strategi"), "strateg");});
test("strategia -> strateg", function() {deepEqual( Stem("strategia"), "strateg");});
test("strategic -> strateg", function() {deepEqual( Stem("strategic"), "strateg");});
test("strategică -> strateg", function() {deepEqual( Stem("strategică"), "strateg");});
test("strategie -> strateg", function() {deepEqual( Stem("strategie"), "strateg");});
test("strategii -> strateg", function() {deepEqual( Stem("strategii"), "strateg");});
test("stratificare -> stratific", function() {deepEqual( Stem("stratificare"), "stratific");});
test("stratificat -> stratific", function() {deepEqual( Stem("stratificat"), "stratific");});
test("straturi -> stratur", function() {deepEqual( Stem("straturi"), "stratur");});
test("straturile -> stratur", function() {deepEqual( Stem("straturile"), "stratur");});
test("strâmba -> strâmb", function() {deepEqual( Stem("strâmba"), "strâmb");});
test("strâmbai -> strâmb", function() {deepEqual( Stem("strâmbai"), "strâmb");});
test("strâmbare -> strâmb", function() {deepEqual( Stem("strâmbare"), "strâmb");});
test("strâmbaseră -> strâmb", function() {deepEqual( Stem("strâmbaseră"), "strâmb");});
test("strâmbat -> strâmbat", function() {deepEqual( Stem("strâmbat"), "strâmbat");});
test("strâmbă -> strâmb", function() {deepEqual( Stem("strâmbă"), "strâmb");});
test("strâmbături -> strâmbătur", function() {deepEqual( Stem("strâmbături"), "strâmbătur");});
test("strâmbăturile -> strâmbătur", function() {deepEqual( Stem("strâmbăturile"), "strâmbătur");});
test("strâmbe -> strâmb", function() {deepEqual( Stem("strâmbe"), "strâmb");});
test("strâmt -> strâmt", function() {deepEqual( Stem("strâmt"), "strâmt");});
test("strâmtare -> strâmt", function() {deepEqual( Stem("strâmtare"), "strâmt");});
test("strâmtorat -> strâmtor", function() {deepEqual( Stem("strâmtorat"), "strâmtor");});
test("strâng -> strâng", function() {deepEqual( Stem("strâng"), "strâng");});
test("strângă -> strâng", function() {deepEqual( Stem("strângă"), "strâng");});
test("strângător -> strângat", function() {deepEqual( Stem("strângător"), "strângat");});
test("strânge -> strâng", function() {deepEqual( Stem("strânge"), "strâng");});
test("strângea -> strâng", function() {deepEqual( Stem("strângea"), "strâng");});
test("strângere -> strâng", function() {deepEqual( Stem("strângere"), "strâng");});
test("strângerea -> strâng", function() {deepEqual( Stem("strângerea"), "strâng");});
test("strângeri -> strânger", function() {deepEqual( Stem("strângeri"), "strânger");});
test("strâns -> strâns", function() {deepEqual( Stem("strâns"), "strâns");});
test("strânsă -> strâns", function() {deepEqual( Stem("strânsă"), "strâns");});
test("strânsoare -> strânsoar", function() {deepEqual( Stem("strânsoare"), "strânsoar");});
test("strânsoarea -> strânsoar", function() {deepEqual( Stem("strânsoarea"), "strânsoar");});
test("strânşi -> strânş", function() {deepEqual( Stem("strânşi"), "strânş");});
test("străbat -> străbat", function() {deepEqual( Stem("străbat"), "străbat");});
test("străbatem -> străbat", function() {deepEqual( Stem("străbatem"), "străbat");});
test("străbătut -> străbăt", function() {deepEqual( Stem("străbătut"), "străbăt");});
test("străbunii -> străbun", function() {deepEqual( Stem("străbunii"), "străbun");});
test("străchini -> străchin", function() {deepEqual( Stem("străchini"), "străchin");});
test("străfulgerări -> străfulgerăr", function() {deepEqual( Stem("străfulgerări"), "străfulgerăr");});
test("străin -> străin", function() {deepEqual( Stem("străin"), "străin");});
test("străină -> străin", function() {deepEqual( Stem("străină"), "străin");});
test("străinătate -> străinăt", function() {deepEqual( Stem("străinătate"), "străinăt");});
test("străine -> străin", function() {deepEqual( Stem("străine"), "străin");});
test("străini -> străin", function() {deepEqual( Stem("străini"), "străin");});
test("strălucească -> străluc", function() {deepEqual( Stem("strălucească"), "străluc");});
test("strălucind -> străluc", function() {deepEqual( Stem("strălucind"), "străluc");});
test("strălucire -> străluc", function() {deepEqual( Stem("strălucire"), "străluc");});
test("străluciri -> strălucir", function() {deepEqual( Stem("străluciri"), "strălucir");});
test("strălucit -> străluc", function() {deepEqual( Stem("strălucit"), "străluc");});
test("strălucită -> străluc", function() {deepEqual( Stem("strălucită"), "străluc");});
test("strălucitoare -> străluc", function() {deepEqual( Stem("strălucitoare"), "străluc");});
test("strălucitori -> străluc", function() {deepEqual( Stem("strălucitori"), "străluc");});
test("strămoş -> strămoş", function() {deepEqual( Stem("strămoş"), "strămoş");});
test("strămoşesc -> strămoş", function() {deepEqual( Stem("strămoşesc"), "strămoş");});
test("strămoşeşti -> strămoş", function() {deepEqual( Stem("strămoşeşti"), "strămoş");});
test("strămoşi -> strămoş", function() {deepEqual( Stem("strămoşi"), "strămoş");});
test("strămoşii -> strămoş", function() {deepEqual( Stem("strămoşii"), "strămoş");});
test("strămoşul -> strămoş", function() {deepEqual( Stem("strămoşul"), "strămoş");});
test("strămutare -> strămut", function() {deepEqual( Stem("strămutare"), "strămut");});
test("strămutaţi -> strămut", function() {deepEqual( Stem("strămutaţi"), "strămut");});
test("străngulaţi -> străngul", function() {deepEqual( Stem("străngulaţi"), "străngul");});
test("strănuta -> strănut", function() {deepEqual( Stem("strănuta"), "strănut");});
test("străpezită -> străpez", function() {deepEqual( Stem("străpezită"), "străpez");});
test("străpung -> străpung", function() {deepEqual( Stem("străpung"), "străpung");});
test("străpunge -> străpung", function() {deepEqual( Stem("străpunge"), "străpung");});
test("străpungerea -> străpung", function() {deepEqual( Stem("străpungerea"), "străpung");});
test("străpunse -> străpun", function() {deepEqual( Stem("străpunse"), "străpun");});
test("străşnicie -> străşnic", function() {deepEqual( Stem("străşnicie"), "străşnic");});
test("străveche -> străvech", function() {deepEqual( Stem("străveche"), "străvech");});
test("străvechi -> străvech", function() {deepEqual( Stem("străvechi"), "străvech");});
test("străvedeam -> străved", function() {deepEqual( Stem("străvedeam"), "străved");});
test("străvezii -> străv", function() {deepEqual( Stem("străvezii"), "străv");});
test("străveziu -> străveziu", function() {deepEqual( Stem("străveziu"), "străveziu");});
test("străzi -> străz", function() {deepEqual( Stem("străzi"), "străz");});
test("străzii -> străz", function() {deepEqual( Stem("străzii"), "străz");});
test("străzile -> străz", function() {deepEqual( Stem("străzile"), "străz");});
test("străzilor -> străz", function() {deepEqual( Stem("străzilor"), "străz");});
test("strecoară -> strecoar", function() {deepEqual( Stem("strecoară"), "strecoar");});
test("strecoare -> strecoar", function() {deepEqual( Stem("strecoare"), "strecoar");});
test("strecura -> strecur", function() {deepEqual( Stem("strecura"), "strecur");});
test("strecurându -> strecur", function() {deepEqual( Stem("strecurându"), "strecur");});
test("strica -> stric", function() {deepEqual( Stem("strica"), "stric");});
test("stricarea -> stric", function() {deepEqual( Stem("stricarea"), "stric");});
test("stricat -> stricat", function() {deepEqual( Stem("stricat"), "stricat");});
test("stricau -> stric", function() {deepEqual( Stem("stricau"), "stric");});
test("strică -> stric", function() {deepEqual( Stem("strică"), "stric");});
test("stricătoare -> stricat", function() {deepEqual( Stem("stricătoare"), "stricat");});
test("strice -> stric", function() {deepEqual( Stem("strice"), "stric");});
test("strict -> strict", function() {deepEqual( Stem("strict"), "strict");});
test("strictă -> strict", function() {deepEqual( Stem("strictă"), "strict");});
test("stricteţă -> stricteţ", function() {deepEqual( Stem("stricteţă"), "stricteţ");});
test("stricteţe -> stricteţ", function() {deepEqual( Stem("stricteţe"), "stricteţ");});
test("stricteţea -> stricteţ", function() {deepEqual( Stem("stricteţea"), "stricteţ");});
test("stricto -> stricto", function() {deepEqual( Stem("stricto"), "stricto");});
test("stridentele -> strident", function() {deepEqual( Stem("stridentele"), "strident");});
test("strig -> strig", function() {deepEqual( Stem("strig"), "strig");});
test("striga -> strig", function() {deepEqual( Stem("striga"), "strig");});
test("strigat -> strigat", function() {deepEqual( Stem("strigat"), "strigat");});
test("strigate -> strigat", function() {deepEqual( Stem("strigate"), "strigat");});
test("strigaţi -> strig", function() {deepEqual( Stem("strigaţi"), "strig");});
test("strigau -> strig", function() {deepEqual( Stem("strigau"), "strig");});
test("strigând -> strig", function() {deepEqual( Stem("strigând"), "strig");});
test("strigându -> strig", function() {deepEqual( Stem("strigându"), "strig");});
test("strigă -> strig", function() {deepEqual( Stem("strigă"), "strig");});
test("strigăm -> strig", function() {deepEqual( Stem("strigăm"), "strig");});
test("strigăt -> strigăt", function() {deepEqual( Stem("strigăt"), "strigăt");});
test("strigăte -> strigăt", function() {deepEqual( Stem("strigăte"), "strigăt");});
test("strigătele -> strigăt", function() {deepEqual( Stem("strigătele"), "strigăt");});
test("strigătoare -> strigat", function() {deepEqual( Stem("strigătoare"), "strigat");});
test("strigătul -> strigăt", function() {deepEqual( Stem("strigătul"), "strigăt");});
test("strigătură -> strigăt", function() {deepEqual( Stem("strigătură"), "strigăt");});
test("strigînd -> strigînd", function() {deepEqual( Stem("strigînd"), "strigînd");});
test("strigoi -> strigo", function() {deepEqual( Stem("strigoi"), "strigo");});
test("strindberg -> strindberg", function() {deepEqual( Stem("strindberg"), "strindberg");});
test("stringent -> stringent", function() {deepEqual( Stem("stringent"), "stringent");});
test("stringente -> stringent", function() {deepEqual( Stem("stringente"), "stringent");});
test("stringenţă -> stringenţ", function() {deepEqual( Stem("stringenţă"), "stringenţ");});
test("stringenţe -> stringenţ", function() {deepEqual( Stem("stringenţe"), "stringenţ");});
test("strivească -> striv", function() {deepEqual( Stem("strivească"), "striv");});
test("strivesc -> striv", function() {deepEqual( Stem("strivesc"), "striv");});
test("strivită -> strivit", function() {deepEqual( Stem("strivită"), "strivit");});
test("strîmbat -> strîmbat", function() {deepEqual( Stem("strîmbat"), "strîmbat");});
test("strîmbă -> strîmb", function() {deepEqual( Stem("strîmbă"), "strîmb");});
test("strîmbătură -> strîmbăt", function() {deepEqual( Stem("strîmbătură"), "strîmbăt");});
test("strîmbe -> strîmb", function() {deepEqual( Stem("strîmbe"), "strîmb");});
test("strîmt -> strîmt", function() {deepEqual( Stem("strîmt"), "strîmt");});
test("strîmtă -> strîmt", function() {deepEqual( Stem("strîmtă"), "strîmt");});
test("strîmtoare -> strîmtoar", function() {deepEqual( Stem("strîmtoare"), "strîmtoar");});
test("strîmtorat -> strîmtor", function() {deepEqual( Stem("strîmtorat"), "strîmtor");});
test("strîngă -> strîng", function() {deepEqual( Stem("strîngă"), "strîng");});
test("strîngător -> strîngat", function() {deepEqual( Stem("strîngător"), "strîngat");});
test("strînge -> strîng", function() {deepEqual( Stem("strînge"), "strîng");});
test("strîngeau -> strîng", function() {deepEqual( Stem("strîngeau"), "strîng");});
test("strîngem -> strîng", function() {deepEqual( Stem("strîngem"), "strîng");});
test("strop -> strop", function() {deepEqual( Stem("strop"), "strop");});
test("stropea -> strop", function() {deepEqual( Stem("stropea"), "strop");});
test("stropit -> stropit", function() {deepEqual( Stem("stropit"), "stropit");});
test("structura -> structur", function() {deepEqual( Stem("structura"), "structur");});
test("structural -> structural", function() {deepEqual( Stem("structural"), "structural");});
test("structurală -> structural", function() {deepEqual( Stem("structurală"), "structural");});
test("structurale -> structural", function() {deepEqual( Stem("structurale"), "structural");});
test("structură -> struct", function() {deepEqual( Stem("structură"), "struct");});
test("structurii -> structur", function() {deepEqual( Stem("structurii"), "structur");});
test("strungă -> strung", function() {deepEqual( Stem("strungă"), "strung");});
test("struţi -> struţ", function() {deepEqual( Stem("struţi"), "struţ");});
test("student -> student", function() {deepEqual( Stem("student"), "student");});
test("studentă -> student", function() {deepEqual( Stem("studentă"), "student");});
test("studente -> student", function() {deepEqual( Stem("studente"), "student");});
test("studentul -> student", function() {deepEqual( Stem("studentul"), "student");});
test("studenţească -> studenţ", function() {deepEqual( Stem("studenţească"), "studenţ");});
test("studenţii -> studenţ", function() {deepEqual( Stem("studenţii"), "studenţ");});
test("studia -> stud", function() {deepEqual( Stem("studia"), "stud");});
test("studiat -> studiat", function() {deepEqual( Stem("studiat"), "studiat");});
test("studiată -> studiat", function() {deepEqual( Stem("studiată"), "studiat");});
test("studiaţi -> stud", function() {deepEqual( Stem("studiaţi"), "stud");});
test("studiază -> studiaz", function() {deepEqual( Stem("studiază"), "studiaz");});
test("studiem -> stud", function() {deepEqual( Stem("studiem"), "stud");});
test("studiez -> studiez", function() {deepEqual( Stem("studiez"), "studiez");});
test("studieze -> studiez", function() {deepEqual( Stem("studieze"), "studiez");});
test("studii -> stud", function() {deepEqual( Stem("studii"), "stud");});
test("studiile -> stud", function() {deepEqual( Stem("studiile"), "stud");});
test("studiu -> studiu", function() {deepEqual( Stem("studiu"), "studiu");});
test("studiul -> stud", function() {deepEqual( Stem("studiul"), "stud");});
test("studiului -> stud", function() {deepEqual( Stem("studiului"), "stud");});
test("stufoase -> stufoas", function() {deepEqual( Stem("stufoase"), "stufoas");});
test("stupid -> stupid", function() {deepEqual( Stem("stupid"), "stupid");});
test("stupidă -> stupid", function() {deepEqual( Stem("stupidă"), "stupid");});
test("stupide -> stupid", function() {deepEqual( Stem("stupide"), "stupid");});
test("stupiditatea -> stupid", function() {deepEqual( Stem("stupiditatea"), "stupid");});
test("stupidităţi -> stupid", function() {deepEqual( Stem("stupidităţi"), "stupid");});
test("suav -> suav", function() {deepEqual( Stem("suav"), "suav");});
test("suavă -> suav", function() {deepEqual( Stem("suavă"), "suav");});
test("sub -> sub", function() {deepEqual( Stem("sub"), "sub");});
test("subaltern -> subaltern", function() {deepEqual( Stem("subaltern"), "subaltern");});
test("subevenimente -> subeveniment", function() {deepEqual( Stem("subevenimente"), "subeveniment");});
test("subiect -> subiect", function() {deepEqual( Stem("subiect"), "subiect");});
test("subiecte -> subiect", function() {deepEqual( Stem("subiecte"), "subiect");});
test("subiectiv -> subiect", function() {deepEqual( Stem("subiectiv"), "subiect");});
test("subiectivă -> subiect", function() {deepEqual( Stem("subiectivă"), "subiect");});
test("subiectul -> subiect", function() {deepEqual( Stem("subiectul"), "subiect");});
test("subiectului -> subiect", function() {deepEqual( Stem("subiectului"), "subiect");});
test("subit -> subit", function() {deepEqual( Stem("subit"), "subit");});
test("subînţelege -> subînţeleg", function() {deepEqual( Stem("subînţelege"), "subînţeleg");});
test("sublim -> subl", function() {deepEqual( Stem("sublim"), "subl");});
test("sublimă -> sublim", function() {deepEqual( Stem("sublimă"), "sublim");});
test("sublime -> sublim", function() {deepEqual( Stem("sublime"), "sublim");});
test("sublimi -> sublim", function() {deepEqual( Stem("sublimi"), "sublim");});
test("sublinia -> sublin", function() {deepEqual( Stem("sublinia"), "sublin");});
test("subliniat -> sublin", function() {deepEqual( Stem("subliniat"), "sublin");});
test("subliniez -> subliniez", function() {deepEqual( Stem("subliniez"), "subliniez");});
test("sublinieze -> subliniez", function() {deepEqual( Stem("sublinieze"), "subliniez");});
test("subliniind -> subliniind", function() {deepEqual( Stem("subliniind"), "subliniind");});
test("sublocotenent -> sublocotenent", function() {deepEqual( Stem("sublocotenent"), "sublocotenent");});
test("sublocotenentul -> sublocotenent", function() {deepEqual( Stem("sublocotenentul"), "sublocotenent");});
test("sublocotenenţi -> sublocotenenţ", function() {deepEqual( Stem("sublocotenenţi"), "sublocotenenţ");});
test("sublocotenenţii -> sublocotenenţ", function() {deepEqual( Stem("sublocotenenţii"), "sublocotenenţ");});
test("subordonează -> subordon", function() {deepEqual( Stem("subordonează"), "subordon");});
test("subprefecţi -> subprefecţ", function() {deepEqual( Stem("subprefecţi"), "subprefecţ");});
test("subsol -> subsol", function() {deepEqual( Stem("subsol"), "subsol");});
test("substanţa -> substanţ", function() {deepEqual( Stem("substanţa"), "substanţ");});
test("substanţă -> substanţ", function() {deepEqual( Stem("substanţă"), "substanţ");});
test("substanţe -> substanţ", function() {deepEqual( Stem("substanţe"), "substanţ");});
test("substanţei -> substanţe", function() {deepEqual( Stem("substanţei"), "substanţe");});
test("substanţele -> substanţ", function() {deepEqual( Stem("substanţele"), "substanţ");});
test("substanţială -> substanţial", function() {deepEqual( Stem("substanţială"), "substanţial");});
test("substanţialistă -> substanţialist", function() {deepEqual( Stem("substanţialistă"), "substanţialist");});
test("substrat -> substrat", function() {deepEqual( Stem("substrat"), "substrat");});
test("substratul -> substrat", function() {deepEqual( Stem("substratul"), "substrat");});
test("substraturi -> substratur", function() {deepEqual( Stem("substraturi"), "substratur");});
test("subsuoară -> subsuoar", function() {deepEqual( Stem("subsuoară"), "subsuoar");});
test("subteran -> subteran", function() {deepEqual( Stem("subteran"), "subteran");});
test("subterane -> subteran", function() {deepEqual( Stem("subterane"), "subteran");});
test("subtil -> subtil", function() {deepEqual( Stem("subtil"), "subtil");});
test("subtilă -> subtil", function() {deepEqual( Stem("subtilă"), "subtil");});
test("subtile -> subt", function() {deepEqual( Stem("subtile"), "subt");});
test("subtilitate -> subtil", function() {deepEqual( Stem("subtilitate"), "subtil");});
test("subtilizat -> subtiliz", function() {deepEqual( Stem("subtilizat"), "subtiliz");});
test("subtilizări -> subtilizăr", function() {deepEqual( Stem("subtilizări"), "subtilizăr");});
test("subţiat -> subţiat", function() {deepEqual( Stem("subţiat"), "subţiat");});
test("subţire -> subţ", function() {deepEqual( Stem("subţire"), "subţ");});
test("subţirel -> subţirel", function() {deepEqual( Stem("subţirel"), "subţirel");});
test("subţiri -> subţir", function() {deepEqual( Stem("subţiri"), "subţir");});
test("subţirică -> subţir", function() {deepEqual( Stem("subţirică"), "subţir");});
test("subţirimea -> subţirim", function() {deepEqual( Stem("subţirimea"), "subţirim");});
test("subversiv -> subvers", function() {deepEqual( Stem("subversiv"), "subvers");});
test("subversivă -> subvers", function() {deepEqual( Stem("subversivă"), "subvers");});
test("subversivi -> subvers", function() {deepEqual( Stem("subversivi"), "subvers");});
test("subzistă -> subzist", function() {deepEqual( Stem("subzistă"), "subzist");});
test("subziste -> subzist", function() {deepEqual( Stem("subziste"), "subzist");});
test("succeadă -> succead", function() {deepEqual( Stem("succeadă"), "succead");});
test("succed -> succed", function() {deepEqual( Stem("succed"), "succed");});
test("succede -> succed", function() {deepEqual( Stem("succede"), "succed");});
test("succes -> succes", function() {deepEqual( Stem("succes"), "succes");});
test("succese -> succ", function() {deepEqual( Stem("succese"), "succ");});
test("succesiune -> succesiun", function() {deepEqual( Stem("succesiune"), "succesiun");});
test("succesiunea -> succesiun", function() {deepEqual( Stem("succesiunea"), "succesiun");});
test("succesiunei -> succesiune", function() {deepEqual( Stem("succesiunei"), "succesiune");});
test("succesiuni -> succesiun", function() {deepEqual( Stem("succesiuni"), "succesiun");});
test("succesiunii -> succesiun", function() {deepEqual( Stem("succesiunii"), "succesiun");});
test("succesive -> succes", function() {deepEqual( Stem("succesive"), "succes");});
test("succesul -> succes", function() {deepEqual( Stem("succesul"), "succes");});
test("suceşte -> suceşt", function() {deepEqual( Stem("suceşte"), "suceşt");});
test("sucind -> sucind", function() {deepEqual( Stem("sucind"), "sucind");});
test("sucit -> sucit", function() {deepEqual( Stem("sucit"), "sucit");});
test("sucită -> sucit", function() {deepEqual( Stem("sucită"), "sucit");});
test("sucite -> sucit", function() {deepEqual( Stem("sucite"), "sucit");});
test("sud -> sud", function() {deepEqual( Stem("sud"), "sud");});
test("sudare -> sudar", function() {deepEqual( Stem("sudare"), "sudar");});
test("sudălmi -> sudălm", function() {deepEqual( Stem("sudălmi"), "sudălm");});
test("sudorile -> sudor", function() {deepEqual( Stem("sudorile"), "sudor");});
test("sufăr -> sufăr", function() {deepEqual( Stem("sufăr"), "sufăr");});
test("suferă -> sufer", function() {deepEqual( Stem("suferă"), "sufer");});
test("sufere -> sufer", function() {deepEqual( Stem("sufere"), "sufer");});
test("suferea -> sufer", function() {deepEqual( Stem("suferea"), "sufer");});
test("sufeream -> sufer", function() {deepEqual( Stem("sufeream"), "sufer");});
test("suferi -> sufer", function() {deepEqual( Stem("suferi"), "sufer");});
test("suferinde -> suferind", function() {deepEqual( Stem("suferinde"), "suferind");});
test("suferindei -> suferinde", function() {deepEqual( Stem("suferindei"), "suferinde");});
test("suferinţa -> suferinţ", function() {deepEqual( Stem("suferinţa"), "suferinţ");});
test("suferinţă -> suferinţ", function() {deepEqual( Stem("suferinţă"), "suferinţ");});
test("suferinţe -> suferinţ", function() {deepEqual( Stem("suferinţe"), "suferinţ");});
test("suferinţi -> suferinţ", function() {deepEqual( Stem("suferinţi"), "suferinţ");});
test("suferisem -> sufer", function() {deepEqual( Stem("suferisem"), "sufer");});
test("suferit -> sufer", function() {deepEqual( Stem("suferit"), "sufer");});
test("suficient -> suficient", function() {deepEqual( Stem("suficient"), "suficient");});
test("suficientă -> suficient", function() {deepEqual( Stem("suficientă"), "suficient");});
test("suficiente -> suficient", function() {deepEqual( Stem("suficiente"), "suficient");});
test("suflăm -> sufl", function() {deepEqual( Stem("suflăm"), "sufl");});
test("suflet -> suflet", function() {deepEqual( Stem("suflet"), "suflet");});
test("suflete -> suflet", function() {deepEqual( Stem("suflete"), "suflet");});
test("sufletească -> suflet", function() {deepEqual( Stem("sufletească"), "suflet");});
test("sufletele -> suflet", function() {deepEqual( Stem("sufletele"), "suflet");});
test("sufletelor -> suflet", function() {deepEqual( Stem("sufletelor"), "suflet");});
test("sufletesc -> suflet", function() {deepEqual( Stem("sufletesc"), "suflet");});
test("sufleteşti -> suflet", function() {deepEqual( Stem("sufleteşti"), "suflet");});
test("sufletul -> suflet", function() {deepEqual( Stem("sufletul"), "suflet");});
test("sufletului -> suflet", function() {deepEqual( Stem("sufletului"), "suflet");});
test("suflu -> suflu", function() {deepEqual( Stem("suflu"), "suflu");});
test("sufocau -> sufoc", function() {deepEqual( Stem("sufocau"), "sufoc");});
test("sufrageria -> sufrager", function() {deepEqual( Stem("sufrageria"), "sufrager");});
test("sufragerie -> sufrager", function() {deepEqual( Stem("sufragerie"), "sufrager");});
test("suge -> sug", function() {deepEqual( Stem("suge"), "sug");});
test("sugerat -> suger", function() {deepEqual( Stem("sugerat"), "suger");});
test("sugestia -> sugest", function() {deepEqual( Stem("sugestia"), "sugest");});
test("sugestibil -> sugest", function() {deepEqual( Stem("sugestibil"), "sugest");});
test("sugestie -> sugest", function() {deepEqual( Stem("sugestie"), "sugest");});
test("sugestii -> sugest", function() {deepEqual( Stem("sugestii"), "sugest");});
test("sugestiile -> sugest", function() {deepEqual( Stem("sugestiile"), "sugest");});
test("sugestiilor -> sugest", function() {deepEqual( Stem("sugestiilor"), "sugest");});
test("sugestivă -> sugest", function() {deepEqual( Stem("sugestivă"), "sugest");});
test("sugrumate -> sugrum", function() {deepEqual( Stem("sugrumate"), "sugrum");});
test("sugrume -> sugrum", function() {deepEqual( Stem("sugrume"), "sugrum");});
test("suia -> sui", function() {deepEqual( Stem("suia"), "sui");});
test("suie -> sui", function() {deepEqual( Stem("suie"), "sui");});
test("suii -> sui", function() {deepEqual( Stem("suii"), "sui");});
test("suit -> suit", function() {deepEqual( Stem("suit"), "suit");});
test("sul -> sul", function() {deepEqual( Stem("sul"), "sul");});
test("sulemenite -> sulemen", function() {deepEqual( Stem("sulemenite"), "sulemen");});
test("suliţe -> suliţ", function() {deepEqual( Stem("suliţe"), "suliţ");});
test("suluri -> sulur", function() {deepEqual( Stem("suluri"), "sulur");});
test("suma -> sum", function() {deepEqual( Stem("suma"), "sum");});
test("sumar -> sumar", function() {deepEqual( Stem("sumar"), "sumar");});
test("sumarul -> sumar", function() {deepEqual( Stem("sumarul"), "sumar");});
test("sumă -> sum", function() {deepEqual( Stem("sumă"), "sum");});
test("sumbre -> sumbr", function() {deepEqual( Stem("sumbre"), "sumbr");});
test("sume -> sum", function() {deepEqual( Stem("sume"), "sum");});
test("sumei -> sume", function() {deepEqual( Stem("sumei"), "sume");});
test("suna -> sun", function() {deepEqual( Stem("suna"), "sun");});
test("sunase -> sunas", function() {deepEqual( Stem("sunase"), "sunas");});
test("sunat -> sunat", function() {deepEqual( Stem("sunat"), "sunat");});
test("sunând -> sunând", function() {deepEqual( Stem("sunând"), "sunând");});
test("sună -> sun", function() {deepEqual( Stem("sună"), "sun");});
test("sune -> sun", function() {deepEqual( Stem("sune"), "sun");});
test("sunet -> sunet", function() {deepEqual( Stem("sunet"), "sunet");});
test("sunetelor -> sunet", function() {deepEqual( Stem("sunetelor"), "sunet");});
test("sunetul -> sunet", function() {deepEqual( Stem("sunetul"), "sunet");});
test("sunt -> sunt", function() {deepEqual( Stem("sunt"), "sunt");});
test("suntem -> sunt", function() {deepEqual( Stem("suntem"), "sunt");});
test("sunteţi -> sunt", function() {deepEqual( Stem("sunteţi"), "sunt");});
test("supă -> sup", function() {deepEqual( Stem("supă"), "sup");});
test("supăr -> supăr", function() {deepEqual( Stem("supăr"), "supăr");});
test("supăra -> supăr", function() {deepEqual( Stem("supăra"), "supăr");});
test("supărare -> supăr", function() {deepEqual( Stem("supărare"), "supăr");});
test("supărarea -> supăr", function() {deepEqual( Stem("supărarea"), "supăr");});
test("supărase -> supăr", function() {deepEqual( Stem("supărase"), "supăr");});
test("supărat -> supăr", function() {deepEqual( Stem("supărat"), "supăr");});
test("supărată -> supăr", function() {deepEqual( Stem("supărată"), "supăr");});
test("supăraţi -> supăr", function() {deepEqual( Stem("supăraţi"), "supăr");});
test("supără -> supăr", function() {deepEqual( Stem("supără"), "supăr");});
test("supărări -> supărăr", function() {deepEqual( Stem("supărări"), "supărăr");});
test("supărătoare -> supăr", function() {deepEqual( Stem("supărătoare"), "supăr");});
test("supărător -> supăr", function() {deepEqual( Stem("supărător"), "supăr");});
test("super -> super", function() {deepEqual( Stem("super"), "super");});
test("superb -> superb", function() {deepEqual( Stem("superb"), "superb");});
test("superba -> superb", function() {deepEqual( Stem("superba"), "superb");});
test("superbă -> superb", function() {deepEqual( Stem("superbă"), "superb");});
test("superdelicaţii -> superdelic", function() {deepEqual( Stem("superdelicaţii"), "superdelic");});
test("supere -> super", function() {deepEqual( Stem("supere"), "super");});
test("superficială -> superficial", function() {deepEqual( Stem("superficială"), "superficial");});
test("superficialii -> superficial", function() {deepEqual( Stem("superficialii"), "superficial");});
test("superi -> super", function() {deepEqual( Stem("superi"), "super");});
test("superioară -> superioar", function() {deepEqual( Stem("superioară"), "superioar");});
test("superioare -> superioar", function() {deepEqual( Stem("superioare"), "superioar");});
test("superior -> superior", function() {deepEqual( Stem("superior"), "superior");});
test("superiori -> superior", function() {deepEqual( Stem("superiori"), "superior");});
test("superiorii -> superior", function() {deepEqual( Stem("superiorii"), "superior");});
test("superiorilor -> superior", function() {deepEqual( Stem("superiorilor"), "superior");});
test("superioritate -> superior", function() {deepEqual( Stem("superioritate"), "superior");});
test("superioritatea -> superior", function() {deepEqual( Stem("superioritatea"), "superior");});
test("superiorităţi -> superior", function() {deepEqual( Stem("superiorităţi"), "superior");});
test("superiorului -> superior", function() {deepEqual( Stem("superiorului"), "superior");});
test("superlativ -> superl", function() {deepEqual( Stem("superlativ"), "superl");});
test("superstiţia -> superstiţ", function() {deepEqual( Stem("superstiţia"), "superstiţ");});
test("superstiţie -> superstiţ", function() {deepEqual( Stem("superstiţie"), "superstiţ");});
test("superstiţii -> superst", function() {deepEqual( Stem("superstiţii"), "superst");});
test("supeu -> supeu", function() {deepEqual( Stem("supeu"), "supeu");});
test("supliment -> supliment", function() {deepEqual( Stem("supliment"), "supliment");});
test("suport -> suport", function() {deepEqual( Stem("suport"), "suport");});
test("suporta -> suport", function() {deepEqual( Stem("suporta"), "suport");});
test("suportabil -> suport", function() {deepEqual( Stem("suportabil"), "suport");});
test("suportabile -> suport", function() {deepEqual( Stem("suportabile"), "suport");});
test("suportam -> suport", function() {deepEqual( Stem("suportam"), "suport");});
test("suportat -> suport", function() {deepEqual( Stem("suportat"), "suport");});
test("suportă -> suport", function() {deepEqual( Stem("suportă"), "suport");});
test("suportul -> suport", function() {deepEqual( Stem("suportul"), "suport");});
test("suportului -> suport", function() {deepEqual( Stem("suportului"), "suport");});
test("suporturi -> suportur", function() {deepEqual( Stem("suporturi"), "suportur");});
test("supraevaluasem -> supraevalu", function() {deepEqual( Stem("supraevaluasem"), "supraevalu");});
test("suprafaţa -> suprafaţ", function() {deepEqual( Stem("suprafaţa"), "suprafaţ");});
test("suprafaţă -> suprafaţ", function() {deepEqual( Stem("suprafaţă"), "suprafaţ");});
test("supranaturală -> supranatural", function() {deepEqual( Stem("supranaturală"), "supranatural");});
test("supraoameni -> supraoamen", function() {deepEqual( Stem("supraoameni"), "supraoamen");});
test("suprapun -> suprapun", function() {deepEqual( Stem("suprapun"), "suprapun");});
test("suprapune -> suprapun", function() {deepEqual( Stem("suprapune"), "suprapun");});
test("suprapunea -> suprapun", function() {deepEqual( Stem("suprapunea"), "suprapun");});
test("suprapunere -> suprapun", function() {deepEqual( Stem("suprapunere"), "suprapun");});
test("suprapuneri -> suprapuner", function() {deepEqual( Stem("suprapuneri"), "suprapuner");});
test("suprapus -> suprapus", function() {deepEqual( Stem("suprapus"), "suprapus");});
test("suprapuse -> suprap", function() {deepEqual( Stem("suprapuse"), "suprap");});
test("supravalorizare -> supravaloriz", function() {deepEqual( Stem("supravalorizare"), "supravaloriz");});
test("supraveghea -> supravegh", function() {deepEqual( Stem("supraveghea"), "supravegh");});
test("supraveghează -> supravegh", function() {deepEqual( Stem("supraveghează"), "supravegh");});
test("supravegherea -> supravegh", function() {deepEqual( Stem("supravegherea"), "supravegh");});
test("supravegheze -> supravegh", function() {deepEqual( Stem("supravegheze"), "supravegh");});
test("supraveghind -> supravegh", function() {deepEqual( Stem("supraveghind"), "supravegh");});
test("supravieţuiam -> supravieţui", function() {deepEqual( Stem("supravieţuiam"), "supravieţui");});
test("suprem -> supr", function() {deepEqual( Stem("suprem"), "supr");});
test("supremă -> suprem", function() {deepEqual( Stem("supremă"), "suprem");});
test("supreme -> suprem", function() {deepEqual( Stem("supreme"), "suprem");});
test("supremul -> supr", function() {deepEqual( Stem("supremul"), "supr");});
test("suprimarea -> suprim", function() {deepEqual( Stem("suprimarea"), "suprim");});
test("suprimată -> suprim", function() {deepEqual( Stem("suprimată"), "suprim");});
test("suprimăm -> suprim", function() {deepEqual( Stem("suprimăm"), "suprim");});
test("supt -> supt", function() {deepEqual( Stem("supt"), "supt");});
test("supui -> supu", function() {deepEqual( Stem("supui"), "supu");});
test("supuie -> supui", function() {deepEqual( Stem("supuie"), "supui");});
test("supun -> supun", function() {deepEqual( Stem("supun"), "supun");});
test("supună -> supun", function() {deepEqual( Stem("supună"), "supun");});
test("supune -> supun", function() {deepEqual( Stem("supune"), "supun");});
test("supunem -> supun", function() {deepEqual( Stem("supunem"), "supun");});
test("supunere -> supun", function() {deepEqual( Stem("supunere"), "supun");});
test("supunerea -> supun", function() {deepEqual( Stem("supunerea"), "supun");});
test("supus -> supus", function() {deepEqual( Stem("supus"), "supus");});
test("supusă -> supus", function() {deepEqual( Stem("supusă"), "supus");});
test("supuse -> supus", function() {deepEqual( Stem("supuse"), "supus");});
test("supusul -> supus", function() {deepEqual( Stem("supusul"), "supus");});
test("supusului -> supus", function() {deepEqual( Stem("supusului"), "supus");});
test("supuşii -> supuş", function() {deepEqual( Stem("supuşii"), "supuş");});
test("surâd -> surâd", function() {deepEqual( Stem("surâd"), "surâd");});
test("surâde -> surâd", function() {deepEqual( Stem("surâde"), "surâd");});
test("surâdea -> surâd", function() {deepEqual( Stem("surâdea"), "surâd");});
test("surâdeam -> surâd", function() {deepEqual( Stem("surâdeam"), "surâd");});
test("surâdeau -> surâd", function() {deepEqual( Stem("surâdeau"), "surâd");});
test("surâs -> surâs", function() {deepEqual( Stem("surâs"), "surâs");});
test("surâsul -> surâs", function() {deepEqual( Stem("surâsul"), "surâs");});
test("surâsului -> surâs", function() {deepEqual( Stem("surâsului"), "surâs");});
test("surâsuri -> surâsur", function() {deepEqual( Stem("surâsuri"), "surâsur");});
test("surâsurile -> surâsur", function() {deepEqual( Stem("surâsurile"), "surâsur");});
test("surâzând -> surâz", function() {deepEqual( Stem("surâzând"), "surâz");});
test("surâzătoare -> surâz", function() {deepEqual( Stem("surâzătoare"), "surâz");});
test("surâzător -> surâz", function() {deepEqual( Stem("surâzător"), "surâz");});
test("sură -> sur", function() {deepEqual( Stem("sură"), "sur");});
test("surd -> surd", function() {deepEqual( Stem("surd"), "surd");});
test("surdină -> surdin", function() {deepEqual( Stem("surdină"), "surdin");});
test("sure -> sur", function() {deepEqual( Stem("sure"), "sur");});
test("surogate -> surog", function() {deepEqual( Stem("surogate"), "surog");});
test("surori -> suror", function() {deepEqual( Stem("surori"), "suror");});
test("surorile -> suror", function() {deepEqual( Stem("surorile"), "suror");});
test("surpat -> surpat", function() {deepEqual( Stem("surpat"), "surpat");});
test("surpă -> surp", function() {deepEqual( Stem("surpă"), "surp");});
test("surpături -> surpătur", function() {deepEqual( Stem("surpături"), "surpătur");});
test("surpe -> surp", function() {deepEqual( Stem("surpe"), "surp");});
test("surprinde -> surprind", function() {deepEqual( Stem("surprinde"), "surprind");});
test("surprindem -> surprind", function() {deepEqual( Stem("surprindem"), "surprind");});
test("surprindere -> surprind", function() {deepEqual( Stem("surprindere"), "surprind");});
test("surprinderea -> surprind", function() {deepEqual( Stem("surprinderea"), "surprind");});
test("surprins -> surprins", function() {deepEqual( Stem("surprins"), "surprins");});
test("surprinsă -> surprins", function() {deepEqual( Stem("surprinsă"), "surprins");});
test("surprinse -> surprin", function() {deepEqual( Stem("surprinse"), "surprin");});
test("surprinşi -> surprinş", function() {deepEqual( Stem("surprinşi"), "surprinş");});
test("surprinzătoare -> surprinz", function() {deepEqual( Stem("surprinzătoare"), "surprinz");});
test("surprinzător -> surprinz", function() {deepEqual( Stem("surprinzător"), "surprinz");});
test("surpriza -> surpriz", function() {deepEqual( Stem("surpriza"), "surpriz");});
test("surpriză -> surpriz", function() {deepEqual( Stem("surpriză"), "surpriz");});
test("surprize -> surpriz", function() {deepEqual( Stem("surprize"), "surpriz");});
test("surprizele -> surpriz", function() {deepEqual( Stem("surprizele"), "surpriz");});
test("surprizelor -> surpriz", function() {deepEqual( Stem("surprizelor"), "surpriz");});
test("surtucarul -> surtucar", function() {deepEqual( Stem("surtucarul"), "surtucar");});
test("sus -> sus", function() {deepEqual( Stem("sus"), "sus");});
test("suspect -> suspect", function() {deepEqual( Stem("suspect"), "suspect");});
test("suspecta -> suspect", function() {deepEqual( Stem("suspecta"), "suspect");});
test("suspectând -> suspect", function() {deepEqual( Stem("suspectând"), "suspect");});
test("suspectă -> suspect", function() {deepEqual( Stem("suspectă"), "suspect");});
test("suspend -> suspend", function() {deepEqual( Stem("suspend"), "suspend");});
test("suspenda -> suspend", function() {deepEqual( Stem("suspenda"), "suspend");});
test("suspendat -> suspend", function() {deepEqual( Stem("suspendat"), "suspend");});
test("suspendată -> suspend", function() {deepEqual( Stem("suspendată"), "suspend");});
test("suspensie -> suspens", function() {deepEqual( Stem("suspensie"), "suspens");});
test("suspensiune -> suspensiun", function() {deepEqual( Stem("suspensiune"), "suspensiun");});
test("suspensiunea -> suspensiun", function() {deepEqual( Stem("suspensiunea"), "suspensiun");});
test("suspină -> suspin", function() {deepEqual( Stem("suspină"), "suspin");});
test("sustragă -> sustrag", function() {deepEqual( Stem("sustragă"), "sustrag");});
test("sustrage -> sustrag", function() {deepEqual( Stem("sustrage"), "sustrag");});
test("susţii -> susţ", function() {deepEqual( Stem("susţii"), "susţ");});
test("susţin -> susţin", function() {deepEqual( Stem("susţin"), "susţin");});
test("susţină -> susţin", function() {deepEqual( Stem("susţină"), "susţin");});
test("susţine -> susţin", function() {deepEqual( Stem("susţine"), "susţin");});
test("susţineau -> susţin", function() {deepEqual( Stem("susţineau"), "susţin");});
test("susţinem -> susţin", function() {deepEqual( Stem("susţinem"), "susţin");});
test("susţineţi -> susţin", function() {deepEqual( Stem("susţineţi"), "susţin");});
test("susţinuse -> susţin", function() {deepEqual( Stem("susţinuse"), "susţin");});
test("susţinut -> susţin", function() {deepEqual( Stem("susţinut"), "susţin");});
test("susţinută -> susţin", function() {deepEqual( Stem("susţinută"), "susţin");});
test("susţinute -> susţin", function() {deepEqual( Stem("susţinute"), "susţin");});
test("suta -> sut", function() {deepEqual( Stem("suta"), "sut");});
test("sută -> sut", function() {deepEqual( Stem("sută"), "sut");});
test("sute -> sut", function() {deepEqual( Stem("sute"), "sut");});
test("sutele -> sut", function() {deepEqual( Stem("sutele"), "sut");});
test("suveică -> suveic", function() {deepEqual( Stem("suveică"), "suveic");});
test("suveran -> suveran", function() {deepEqual( Stem("suveran"), "suveran");});
test("sviţera -> sviţer", function() {deepEqual( Stem("sviţera"), "sviţer");});
test("ş -> ş", function() {deepEqual( Stem("ş"), "ş");});
test("şa -> şa", function() {deepEqual( Stem("şa"), "şa");});
test("şabace -> şabac", function() {deepEqual( Stem("şabace"), "şabac");});
test("şablon -> şablon", function() {deepEqual( Stem("şablon"), "şablon");});
test("şablonul -> şablon", function() {deepEqual( Stem("şablonul"), "şablon");});
test("şade -> şad", function() {deepEqual( Stem("şade"), "şad");});
test("şah -> şah", function() {deepEqual( Stem("şah"), "şah");});
test("şaisprezece -> şaisprezec", function() {deepEqual( Stem("şaisprezece"), "şaisprezec");});
test("şaizeci -> şaizec", function() {deepEqual( Stem("şaizeci"), "şaizec");});
test("şal -> şal", function() {deepEqual( Stem("şal"), "şal");});
test("şamanilor -> şaman", function() {deepEqual( Stem("şamanilor"), "şaman");});
test("şampania -> şampan", function() {deepEqual( Stem("şampania"), "şampan");});
test("şampanie -> şampan", function() {deepEqual( Stem("şampanie"), "şampan");});
test("şampionului -> şampion", function() {deepEqual( Stem("şampionului"), "şampion");});
test("şansă -> şans", function() {deepEqual( Stem("şansă"), "şans");});
test("şantierele -> şantier", function() {deepEqual( Stem("şantierele"), "şantier");});
test("şanţ -> şanţ", function() {deepEqual( Stem("şanţ"), "şanţ");});
test("şanţul -> şanţ", function() {deepEqual( Stem("şanţul"), "şanţ");});
test("şanţuri -> şanţur", function() {deepEqual( Stem("şanţuri"), "şanţur");});
test("şanţurile -> şanţur", function() {deepEqual( Stem("şanţurile"), "şanţur");});
test("şapca -> şapc", function() {deepEqual( Stem("şapca"), "şapc");});
test("şapte -> şapt", function() {deepEqual( Stem("şapte"), "şapt");});
test("şaptea -> şapt", function() {deepEqual( Stem("şaptea"), "şapt");});
test("şaptesprezece -> şaptesprezec", function() {deepEqual( Stem("şaptesprezece"), "şaptesprezec");});
test("şaptesprezecelea -> şaptesprezecel", function() {deepEqual( Stem("şaptesprezecelea"), "şaptesprezecel");});
test("şaptezeci -> şaptezec", function() {deepEqual( Stem("şaptezeci"), "şaptezec");});
test("şarlatanilor -> şarlatan", function() {deepEqual( Stem("şarlatanilor"), "şarlatan");});
test("şarmantă -> şarmant", function() {deepEqual( Stem("şarmantă"), "şarmant");});
test("şarmante -> şarmant", function() {deepEqual( Stem("şarmante"), "şarmant");});
test("şarpe -> şarp", function() {deepEqual( Stem("şarpe"), "şarp");});
test("şarpele -> şarp", function() {deepEqual( Stem("şarpele"), "şarp");});
test("şase -> şas", function() {deepEqual( Stem("şase"), "şas");});
test("şasea -> şas", function() {deepEqual( Stem("şasea"), "şas");});
test("şaua -> şau", function() {deepEqual( Stem("şaua"), "şau");});
test("şază -> şaz", function() {deepEqual( Stem("şază"), "şaz");});
test("şăgalnic -> şăgaln", function() {deepEqual( Stem("şăgalnic"), "şăgaln");});
test("şănţuleţ -> şănţuleţ", function() {deepEqual( Stem("şănţuleţ"), "şănţuleţ");});
test("şănţuleţe -> şănţuleţ", function() {deepEqual( Stem("şănţuleţe"), "şănţuleţ");});
test("şchioapătă -> şchioapăt", function() {deepEqual( Stem("şchioapătă"), "şchioapăt");});
test("şchiopătând -> şchiopăt", function() {deepEqual( Stem("şchiopătând"), "şchiopăt");});
test("şcoala -> şcoal", function() {deepEqual( Stem("şcoala"), "şcoal");});
test("şcoală -> şcoal", function() {deepEqual( Stem("şcoală"), "şcoal");});
test("şcoalei -> şcoale", function() {deepEqual( Stem("şcoalei"), "şcoale");});
test("şcolăreşte -> şcolăr", function() {deepEqual( Stem("şcolăreşte"), "şcolăr");});
test("şcolăriţă -> şcolăriţ", function() {deepEqual( Stem("şcolăriţă"), "şcolăriţ");});
test("şcoli -> şcol", function() {deepEqual( Stem("şcoli"), "şcol");});
test("şcolii -> şcol", function() {deepEqual( Stem("şcolii"), "şcol");});
test("şea -> şea", function() {deepEqual( Stem("şea"), "şea");});
test("şedea -> şed", function() {deepEqual( Stem("şedea"), "şed");});
test("şedinţă -> şedinţ", function() {deepEqual( Stem("şedinţă"), "şedinţ");});
test("şedinţele -> şedinţ", function() {deepEqual( Stem("şedinţele"), "şedinţ");});
test("şef -> şef", function() {deepEqual( Stem("şef"), "şef");});
test("şefii -> şef", function() {deepEqual( Stem("şefii"), "şef");});
test("şeful -> şef", function() {deepEqual( Stem("şeful"), "şef");});
test("şefului -> şef", function() {deepEqual( Stem("şefului"), "şef");});
test("şei -> şei", function() {deepEqual( Stem("şei"), "şei");});
test("şeile -> şeil", function() {deepEqual( Stem("şeile"), "şeil");});
test("şerpi -> şerp", function() {deepEqual( Stem("şerpi"), "şerp");});
test("şerpilor -> şerp", function() {deepEqual( Stem("şerpilor"), "şerp");});
test("şerpoaică -> şerpoaic", function() {deepEqual( Stem("şerpoaică"), "şerpoaic");});
test("şerpuieşte -> şerpui", function() {deepEqual( Stem("şerpuieşte"), "şerpui");});
test("şervetul -> şervet", function() {deepEqual( Stem("şervetul"), "şervet");});
test("şes -> şes", function() {deepEqual( Stem("şes"), "şes");});
test("şeviot -> şeviot", function() {deepEqual( Stem("şeviot"), "şeviot");});
test("şevro -> şevro", function() {deepEqual( Stem("şevro"), "şevro");});
test("şi -> şi", function() {deepEqual( Stem("şi"), "şi");});
test("şic -> şic", function() {deepEqual( Stem("şic"), "şic");});
test("şicană -> şican", function() {deepEqual( Stem("şicană"), "şican");});
test("şicul -> şic", function() {deepEqual( Stem("şicul"), "şic");});
test("şicului -> şic", function() {deepEqual( Stem("şicului"), "şic");});
test("şifon -> şifon", function() {deepEqual( Stem("şifon"), "şifon");});
test("şipci -> şipc", function() {deepEqual( Stem("şipci"), "şipc");});
test("şir -> şir", function() {deepEqual( Stem("şir"), "şir");});
test("şiră -> şir", function() {deepEqual( Stem("şiră"), "şir");});
test("şire -> şir", function() {deepEqual( Stem("şire"), "şir");});
test("şireată -> şireat", function() {deepEqual( Stem("şireată"), "şireat");});
test("şiretlicul -> şiretl", function() {deepEqual( Stem("şiretlicul"), "şiretl");});
test("şireturi -> şiretur", function() {deepEqual( Stem("şireturi"), "şiretur");});
test("şiroaie -> şiroai", function() {deepEqual( Stem("şiroaie"), "şiroai");});
test("şirul -> şir", function() {deepEqual( Stem("şirul"), "şir");});
test("şiruri -> şirur", function() {deepEqual( Stem("şiruri"), "şirur");});
test("şirurile -> şirur", function() {deepEqual( Stem("şirurile"), "şirur");});
test("şivoaie -> şivoai", function() {deepEqual( Stem("şivoaie"), "şivoai");});
test("şivoi -> şivo", function() {deepEqual( Stem("şivoi"), "şivo");});
test("şivoiul -> şivoi", function() {deepEqual( Stem("şivoiul"), "şivoi");});
test("şoaptă -> şoapt", function() {deepEqual( Stem("şoaptă"), "şoapt");});
test("şoapte -> şoapt", function() {deepEqual( Stem("şoapte"), "şoapt");});
test("şoaptele -> şoapt", function() {deepEqual( Stem("şoaptele"), "şoapt");});
test("şoarece -> şoarec", function() {deepEqual( Stem("şoarece"), "şoarec");});
test("şofer -> şofer", function() {deepEqual( Stem("şofer"), "şofer");});
test("şoferului -> şofer", function() {deepEqual( Stem("şoferului"), "şofer");});
test("şold -> şold", function() {deepEqual( Stem("şold"), "şold");});
test("şoldul -> şold", function() {deepEqual( Stem("şoldul"), "şold");});
test("şolduri -> şoldur", function() {deepEqual( Stem("şolduri"), "şoldur");});
test("şoldurile -> şoldur", function() {deepEqual( Stem("şoldurile"), "şoldur");});
test("şoldurilor -> şoldur", function() {deepEqual( Stem("şoldurilor"), "şoldur");});
test("şopârle -> şopârl", function() {deepEqual( Stem("şopârle"), "şopârl");});
test("şoptea -> şopt", function() {deepEqual( Stem("şoptea"), "şopt");});
test("şoptesc -> şopt", function() {deepEqual( Stem("şoptesc"), "şopt");});
test("şopteşte -> şopt", function() {deepEqual( Stem("şopteşte"), "şopt");});
test("şoptind -> şopt", function() {deepEqual( Stem("şoptind"), "şopt");});
test("şoptit -> şoptit", function() {deepEqual( Stem("şoptit"), "şoptit");});
test("şoptită -> şoptit", function() {deepEqual( Stem("şoptită"), "şoptit");});
test("şorţ -> şorţ", function() {deepEqual( Stem("şorţ"), "şorţ");});
test("şorţul -> şorţ", function() {deepEqual( Stem("şorţul"), "şorţ");});
test("şorţuleţul -> şorţuleţ", function() {deepEqual( Stem("şorţuleţul"), "şorţuleţ");});
test("şosea -> şos", function() {deepEqual( Stem("şosea"), "şos");});
test("şoseaua -> şoseau", function() {deepEqual( Stem("şoseaua"), "şoseau");});
test("şosele -> şos", function() {deepEqual( Stem("şosele"), "şos");});
test("şoselei -> şosele", function() {deepEqual( Stem("şoselei"), "şosele");});
test("şoselele -> şosel", function() {deepEqual( Stem("şoselele"), "şosel");});
test("şoselelor -> şosel", function() {deepEqual( Stem("şoselelor"), "şosel");});
test("şosete -> şoset", function() {deepEqual( Stem("şosete"), "şoset");});
test("şovăie -> şovăi", function() {deepEqual( Stem("şovăie"), "şovăi");});
test("şovăieli -> şovăiel", function() {deepEqual( Stem("şovăieli"), "şovăiel");});
test("şovăielnic -> şovăieln", function() {deepEqual( Stem("şovăielnic"), "şovăieln");});
test("şovăire -> şovăir", function() {deepEqual( Stem("şovăire"), "şovăir");});
test("şpioană -> şpioan", function() {deepEqual( Stem("şpioană"), "şpioan");});
test("şpriţ -> şpriţ", function() {deepEqual( Stem("şpriţ"), "şpriţ");});
test("şpriţuri -> şpriţur", function() {deepEqual( Stem("şpriţuri"), "şpriţur");});
test("ştachetă -> ştachet", function() {deepEqual( Stem("ştachetă"), "ştachet");});
test("ştafetă -> ştafet", function() {deepEqual( Stem("ştafetă"), "ştafet");});
test("şteargă -> ştearg", function() {deepEqual( Stem("şteargă"), "ştearg");});
test("ştearsă -> ştears", function() {deepEqual( Stem("ştearsă"), "ştears");});
test("ştef -> ştef", function() {deepEqual( Stem("ştef"), "ştef");});
test("ştefan -> ştefan", function() {deepEqual( Stem("ştefan"), "ştefan");});
test("ştefane -> ştefan", function() {deepEqual( Stem("ştefane"), "ştefan");});
test("ştefănescu -> ştefănescu", function() {deepEqual( Stem("ştefănescu"), "ştefănescu");});
test("ştergându -> şterg", function() {deepEqual( Stem("ştergându"), "şterg");});
test("şterge -> şterg", function() {deepEqual( Stem("şterge"), "şterg");});
test("şters -> şters", function() {deepEqual( Stem("şters"), "şters");});
test("şterse -> şter", function() {deepEqual( Stem("şterse"), "şter");});
test("ştersese -> şter", function() {deepEqual( Stem("ştersese"), "şter");});
test("şterşi -> şterş", function() {deepEqual( Stem("şterşi"), "şterş");});
test("şti -> şti", function() {deepEqual( Stem("şti"), "şti");});
test("ştia -> şti", function() {deepEqual( Stem("ştia"), "şti");});
test("ştiam -> ştiam", function() {deepEqual( Stem("ştiam"), "ştiam");});
test("ştiau -> ştiau", function() {deepEqual( Stem("ştiau"), "ştiau");});
test("ştie -> ştie", function() {deepEqual( Stem("ştie"), "ştie");});
test("ştienţifist -> ştienţifist", function() {deepEqual( Stem("ştienţifist"), "ştienţifist");});
test("ştii -> şti", function() {deepEqual( Stem("ştii"), "şti");});
test("ştiind -> ştiind", function() {deepEqual( Stem("ştiind"), "ştiind");});
test("ştiinţa -> ştiinţ", function() {deepEqual( Stem("ştiinţa"), "ştiinţ");});
test("ştiinţă -> ştiinţ", function() {deepEqual( Stem("ştiinţă"), "ştiinţ");});
test("ştiinţe -> ştiinţ", function() {deepEqual( Stem("ştiinţe"), "ştiinţ");});
test("ştiinţei -> ştiinţe", function() {deepEqual( Stem("ştiinţei"), "ştiinţe");});
test("ştiinţele -> ştiinţ", function() {deepEqual( Stem("ştiinţele"), "ştiinţ");});
test("ştiinţelor -> ştiinţ", function() {deepEqual( Stem("ştiinţelor"), "ştiinţ");});
test("ştiinţific -> ştiinţif", function() {deepEqual( Stem("ştiinţific"), "ştiinţif");});
test("ştiinţifică -> ştiinţif", function() {deepEqual( Stem("ştiinţifică"), "ştiinţif");});
test("ştiinţifice -> ştiinţif", function() {deepEqual( Stem("ştiinţifice"), "ştiinţif");});
test("ştiinţificeşte -> ştiinţific", function() {deepEqual( Stem("ştiinţificeşte"), "ştiinţific");});
test("ştim -> ştim", function() {deepEqual( Stem("ştim"), "ştim");});
test("ştirbă -> ştirb", function() {deepEqual( Stem("ştirbă"), "ştirb");});
test("ştirbei -> ştirbe", function() {deepEqual( Stem("ştirbei"), "ştirbe");});
test("ştirbesc -> ştirb", function() {deepEqual( Stem("ştirbesc"), "ştirb");});
test("ştirbi -> ştirb", function() {deepEqual( Stem("ştirbi"), "ştirb");});
test("ştirbită -> ştirbit", function() {deepEqual( Stem("ştirbită"), "ştirbit");});
test("ştire -> ştir", function() {deepEqual( Stem("ştire"), "ştir");});
test("ştirea -> ştir", function() {deepEqual( Stem("ştirea"), "ştir");});
test("ştiri -> ştir", function() {deepEqual( Stem("ştiri"), "ştir");});
test("ştirile -> ştir", function() {deepEqual( Stem("ştirile"), "ştir");});
test("ştiţi -> ştiţ", function() {deepEqual( Stem("ştiţi"), "ştiţ");});
test("ştiu -> ştiu", function() {deepEqual( Stem("ştiu"), "ştiu");});
test("ştiut -> ştiut", function() {deepEqual( Stem("ştiut"), "ştiut");});
test("ştiută -> ştiut", function() {deepEqual( Stem("ştiută"), "ştiut");});
test("ştiutor -> ştiutor", function() {deepEqual( Stem("ştiutor"), "ştiutor");});
test("ştiutul -> ştiut", function() {deepEqual( Stem("ştiutul"), "ştiut");});
test("ştiuţi -> ştiuţ", function() {deepEqual( Stem("ştiuţi"), "ştiuţ");});
test("ştrandul -> ştrand", function() {deepEqual( Stem("ştrandul"), "ştrand");});
test("ştrengăria -> ştrengăr", function() {deepEqual( Stem("ştrengăria"), "ştrengăr");});
test("şubredă -> şubred", function() {deepEqual( Stem("şubredă"), "şubred");});
test("şuierat -> şuier", function() {deepEqual( Stem("şuierat"), "şuier");});
test("şuierate -> şuier", function() {deepEqual( Stem("şuierate"), "şuier");});
test("şuierătoare -> şuier", function() {deepEqual( Stem("şuierătoare"), "şuier");});
test("şuierături -> şuierătur", function() {deepEqual( Stem("şuierături"), "şuierătur");});
test("şuierăturile -> şuierătur", function() {deepEqual( Stem("şuierăturile"), "şuierătur");});
test("şurupuri -> şurupur", function() {deepEqual( Stem("şurupuri"), "şurupur");});
test("şurupurile -> şurupur", function() {deepEqual( Stem("şurupurile"), "şurupur");});
test("şuviţe -> şuviţ", function() {deepEqual( Stem("şuviţe"), "şuviţ");});
test("şuvoaie -> şuvoai", function() {deepEqual( Stem("şuvoaie"), "şuvoai");});
test("şuvoi -> şuvo", function() {deepEqual( Stem("şuvoi"), "şuvo");});
test("t -> t", function() {deepEqual( Stem("t"), "t");});
test("ta -> ta", function() {deepEqual( Stem("ta"), "ta");});
test("tabacheră -> tabacher", function() {deepEqual( Stem("tabacheră"), "tabacher");});
test("tabără -> tabăr", function() {deepEqual( Stem("tabără"), "tabăr");});
test("tabelă -> tabel", function() {deepEqual( Stem("tabelă"), "tabel");});
test("tabere -> taber", function() {deepEqual( Stem("tabere"), "taber");});
test("taberei -> tabere", function() {deepEqual( Stem("taberei"), "tabere");});
test("tablă -> tabl", function() {deepEqual( Stem("tablă"), "tabl");});
test("table -> tabl", function() {deepEqual( Stem("table"), "tabl");});
test("tablei -> table", function() {deepEqual( Stem("tablei"), "table");});
test("tablou -> tablou", function() {deepEqual( Stem("tablou"), "tablou");});
test("tabloul -> tablo", function() {deepEqual( Stem("tabloul"), "tablo");});
test("tabloului -> tablo", function() {deepEqual( Stem("tabloului"), "tablo");});
test("tablouri -> tablour", function() {deepEqual( Stem("tablouri"), "tablour");});
test("tablourilor -> tablour", function() {deepEqual( Stem("tablourilor"), "tablour");});
test("tabolul -> tabol", function() {deepEqual( Stem("tabolul"), "tabol");});
test("tabula -> tabul", function() {deepEqual( Stem("tabula"), "tabul");});
test("taburele -> tabur", function() {deepEqual( Stem("taburele"), "tabur");});
test("tac -> tac", function() {deepEqual( Stem("tac"), "tac");});
test("tacâm -> tac", function() {deepEqual( Stem("tacâm"), "tac");});
test("tacâmul -> tac", function() {deepEqual( Stem("tacâmul"), "tac");});
test("tacâmuri -> tacâmur", function() {deepEqual( Stem("tacâmuri"), "tacâmur");});
test("tacâmurile -> tacâmur", function() {deepEqual( Stem("tacâmurile"), "tacâmur");});
test("tacă -> tac", function() {deepEqual( Stem("tacă"), "tac");});
test("tace -> tac", function() {deepEqual( Stem("tace"), "tac");});
test("tache -> tach", function() {deepEqual( Stem("tache"), "tach");});
test("tachinerie -> tachiner", function() {deepEqual( Stem("tachinerie"), "tachiner");});
test("taci -> tac", function() {deepEqual( Stem("taci"), "tac");});
test("tacită -> tacit", function() {deepEqual( Stem("tacită"), "tacit");});
test("tacite -> tacit", function() {deepEqual( Stem("tacite"), "tacit");});
test("tact -> tact", function() {deepEqual( Stem("tact"), "tact");});
test("tactic -> tactic", function() {deepEqual( Stem("tactic"), "tactic");});
test("tactica -> tactic", function() {deepEqual( Stem("tactica"), "tactic");});
test("tactică -> tactic", function() {deepEqual( Stem("tactică"), "tactic");});
test("tactice -> tactic", function() {deepEqual( Stem("tactice"), "tactic");});
test("tacticei -> tactice", function() {deepEqual( Stem("tacticei"), "tactice");});
test("tacticos -> tactic", function() {deepEqual( Stem("tacticos"), "tactic");});
test("tactilă -> tactil", function() {deepEqual( Stem("tactilă"), "tactil");});
test("tagma -> tagm", function() {deepEqual( Stem("tagma"), "tagm");});
test("tai -> tai", function() {deepEqual( Stem("tai"), "tai");});
test("taică -> taic", function() {deepEqual( Stem("taică"), "taic");});
test("taie -> tai", function() {deepEqual( Stem("taie"), "tai");});
test("taifas -> taifas", function() {deepEqual( Stem("taifas"), "taifas");});
test("taină -> tain", function() {deepEqual( Stem("taină"), "tain");});
test("taine -> tain", function() {deepEqual( Stem("taine"), "tain");});
test("tainele -> tain", function() {deepEqual( Stem("tainele"), "tain");});
test("tainic -> tainic", function() {deepEqual( Stem("tainic"), "tainic");});
test("tainică -> tainic", function() {deepEqual( Stem("tainică"), "tainic");});
test("tainul -> tain", function() {deepEqual( Stem("tainul"), "tain");});
test("taiorul -> taior", function() {deepEqual( Stem("taiorul"), "taior");});
test("taipei -> taipe", function() {deepEqual( Stem("taipei"), "taipe");});
test("taivan -> taivan", function() {deepEqual( Stem("taivan"), "taivan");});
test("taiwaneze -> taiwan", function() {deepEqual( Stem("taiwaneze"), "taiwan");});
test("take -> tak", function() {deepEqual( Stem("take"), "tak");});
test("talaz -> talaz", function() {deepEqual( Stem("talaz"), "talaz");});
test("talc -> talc", function() {deepEqual( Stem("talc"), "talc");});
test("talciocurile -> talciocur", function() {deepEqual( Stem("talciocurile"), "talciocur");});
test("tale -> tal", function() {deepEqual( Stem("tale"), "tal");});
test("talent -> talent", function() {deepEqual( Stem("talent"), "talent");});
test("talente -> talent", function() {deepEqual( Stem("talente"), "talent");});
test("talentele -> talent", function() {deepEqual( Stem("talentele"), "talent");});
test("talentul -> talent", function() {deepEqual( Stem("talentul"), "talent");});
test("talentului -> talent", function() {deepEqual( Stem("talentului"), "talent");});
test("tales -> tales", function() {deepEqual( Stem("tales"), "tales");});
test("talger -> talger", function() {deepEqual( Stem("talger"), "talger");});
test("talia -> tali", function() {deepEqual( Stem("talia"), "tali");});
test("talie -> tal", function() {deepEqual( Stem("talie"), "tal");});
test("taliei -> tal", function() {deepEqual( Stem("taliei"), "tal");});
test("talpa -> talp", function() {deepEqual( Stem("talpa"), "talp");});
test("talpă -> talp", function() {deepEqual( Stem("talpă"), "talp");});
test("tamponul -> tampon", function() {deepEqual( Stem("tamponul"), "tampon");});
test("tandră -> tandr", function() {deepEqual( Stem("tandră"), "tandr");});
test("tandre -> tandr", function() {deepEqual( Stem("tandre"), "tandr");});
test("tandru -> tandru", function() {deepEqual( Stem("tandru"), "tandru");});
test("tango -> tango", function() {deepEqual( Stem("tango"), "tango");});
test("tanti -> tant", function() {deepEqual( Stem("tanti"), "tant");});
test("tanţi -> tanţ", function() {deepEqual( Stem("tanţi"), "tanţ");});
test("tapează -> tapeaz", function() {deepEqual( Stem("tapează"), "tapeaz");});
test("tapeusele -> tapeus", function() {deepEqual( Stem("tapeusele"), "tapeus");});
test("tarabe -> tarab", function() {deepEqual( Stem("tarabe"), "tarab");});
test("tarasconade -> tarasconad", function() {deepEqual( Stem("tarasconade"), "tarasconad");});
test("tară -> tar", function() {deepEqual( Stem("tară"), "tar");});
test("tare -> tar", function() {deepEqual( Stem("tare"), "tar");});
test("targa -> targ", function() {deepEqual( Stem("targa"), "targ");});
test("tari -> tar", function() {deepEqual( Stem("tari"), "tar");});
test("tarlalei -> tarlale", function() {deepEqual( Stem("tarlalei"), "tarlale");});
test("tarlalele -> tarlal", function() {deepEqual( Stem("tarlalele"), "tarlal");});
test("tarlalelor -> tarlal", function() {deepEqual( Stem("tarlalelor"), "tarlal");});
test("tarlaua -> tarlau", function() {deepEqual( Stem("tarlaua"), "tarlau");});
test("tata -> tat", function() {deepEqual( Stem("tata"), "tat");});
test("tată -> tat", function() {deepEqual( Stem("tată"), "tat");});
test("tatăl -> tatăl", function() {deepEqual( Stem("tatăl"), "tatăl");});
test("tatălui -> tatăl", function() {deepEqual( Stem("tatălui"), "tatăl");});
test("tatei -> tate", function() {deepEqual( Stem("tatei"), "tate");});
test("taumaturgi -> taumaturg", function() {deepEqual( Stem("taumaturgi"), "taumaturg");});
test("tautologie -> tautolog", function() {deepEqual( Stem("tautologie"), "tautolog");});
test("tavan -> tavan", function() {deepEqual( Stem("tavan"), "tavan");});
test("tavă -> tav", function() {deepEqual( Stem("tavă"), "tav");});
test("taxate -> taxat", function() {deepEqual( Stem("taxate"), "taxat");});
test("taxezi -> taxez", function() {deepEqual( Stem("taxezi"), "taxez");});
test("tâlcul -> tâlc", function() {deepEqual( Stem("tâlcul"), "tâlc");});
test("tâlhar -> tâlhar", function() {deepEqual( Stem("tâlhar"), "tâlhar");});
test("tâmpa -> tâmp", function() {deepEqual( Stem("tâmpa"), "tâmp");});
test("tâmpenie -> tâmpen", function() {deepEqual( Stem("tâmpenie"), "tâmpen");});
test("tâmpite -> tâmpit", function() {deepEqual( Stem("tâmpite"), "tâmpit");});
test("tâmpla -> tâmpl", function() {deepEqual( Stem("tâmpla"), "tâmpl");});
test("tâmplă -> tâmpl", function() {deepEqual( Stem("tâmplă"), "tâmpl");});
test("tâmple -> tâmpl", function() {deepEqual( Stem("tâmple"), "tâmpl");});
test("tâmplele -> tâmpl", function() {deepEqual( Stem("tâmplele"), "tâmpl");});
test("tânăr -> tânăr", function() {deepEqual( Stem("tânăr"), "tânăr");});
test("tânăra -> tânăr", function() {deepEqual( Stem("tânăra"), "tânăr");});
test("tânără -> tânăr", function() {deepEqual( Stem("tânără"), "tânăr");});
test("tânărul -> tânăr", function() {deepEqual( Stem("tânărul"), "tânăr");});
test("tânărului -> tânăr", function() {deepEqual( Stem("tânărului"), "tânăr");});
test("tânguirea -> tângu", function() {deepEqual( Stem("tânguirea"), "tângu");});
test("târând -> târând", function() {deepEqual( Stem("târând"), "târând");});
test("târându -> târându", function() {deepEqual( Stem("târându"), "târându");});
test("târât -> târât", function() {deepEqual( Stem("târât"), "târât");});
test("târâte -> târât", function() {deepEqual( Stem("târâte"), "târât");});
test("târăsc -> târăsc", function() {deepEqual( Stem("târăsc"), "târăsc");});
test("târăşte -> târăşt", function() {deepEqual( Stem("târăşte"), "târăşt");});
test("târfă -> târf", function() {deepEqual( Stem("târfă"), "târf");});
test("târg -> târg", function() {deepEqual( Stem("târg"), "târg");});
test("târgoveţ -> târgoveţ", function() {deepEqual( Stem("târgoveţ"), "târgoveţ");});
test("târguieli -> târguiel", function() {deepEqual( Stem("târguieli"), "târguiel");});
test("târguielile -> târguiel", function() {deepEqual( Stem("târguielile"), "târguiel");});
test("târguind -> târgu", function() {deepEqual( Stem("târguind"), "târgu");});
test("târgul -> târg", function() {deepEqual( Stem("târgul"), "târg");});
test("târgului -> târg", function() {deepEqual( Stem("târgului"), "târg");});
test("târzie -> târz", function() {deepEqual( Stem("târzie"), "târz");});
test("târzii -> târz", function() {deepEqual( Stem("târzii"), "târz");});
test("târziu -> târziu", function() {deepEqual( Stem("târziu"), "târziu");});
test("tăbăcăriei -> tăbăcăr", function() {deepEqual( Stem("tăbăcăriei"), "tăbăcăr");});
test("tăbliţa -> tăbliţ", function() {deepEqual( Stem("tăbliţa"), "tăbliţ");});
test("tăcând -> tăcând", function() {deepEqual( Stem("tăcând"), "tăcând");});
test("tăceam -> tăceam", function() {deepEqual( Stem("tăceam"), "tăceam");});
test("tăcem -> tăc", function() {deepEqual( Stem("tăcem"), "tăc");});
test("tăcere -> tăcer", function() {deepEqual( Stem("tăcere"), "tăcer");});
test("tăcerea -> tăcer", function() {deepEqual( Stem("tăcerea"), "tăcer");});
test("tăceţi -> tăc", function() {deepEqual( Stem("tăceţi"), "tăc");});
test("tăcut -> tăcut", function() {deepEqual( Stem("tăcut"), "tăcut");});
test("tăcută -> tăcut", function() {deepEqual( Stem("tăcută"), "tăcut");});
test("tăcute -> tăcut", function() {deepEqual( Stem("tăcute"), "tăcut");});
test("tăcuţi -> tăcuţ", function() {deepEqual( Stem("tăcuţi"), "tăcuţ");});
test("tăgăduială -> tăgăduial", function() {deepEqual( Stem("tăgăduială"), "tăgăduial");});
test("tăgăduiască -> tăgăduiasc", function() {deepEqual( Stem("tăgăduiască"), "tăgăduiasc");});
test("tăgăduiau -> tăgădui", function() {deepEqual( Stem("tăgăduiau"), "tăgădui");});
test("tăgăduieşte -> tăgădui", function() {deepEqual( Stem("tăgăduieşte"), "tăgădui");});
test("tăgăduit -> tăgădu", function() {deepEqual( Stem("tăgăduit"), "tăgădu");});
test("tăi -> tăi", function() {deepEqual( Stem("tăi"), "tăi");});
test("tăia -> tăi", function() {deepEqual( Stem("tăia"), "tăi");});
test("tăiat -> tăiat", function() {deepEqual( Stem("tăiat"), "tăiat");});
test("tăiată -> tăiat", function() {deepEqual( Stem("tăiată"), "tăiat");});
test("tăiate -> tăiat", function() {deepEqual( Stem("tăiate"), "tăiat");});
test("tăiaţi -> tăi", function() {deepEqual( Stem("tăiaţi"), "tăi");});
test("tăiau -> tăiau", function() {deepEqual( Stem("tăiau"), "tăiau");});
test("tăiem -> tăi", function() {deepEqual( Stem("tăiem"), "tăi");});
test("tăiere -> tăier", function() {deepEqual( Stem("tăiere"), "tăier");});
test("tăierii -> tăier", function() {deepEqual( Stem("tăierii"), "tăier");});
test("tăierilor -> tăier", function() {deepEqual( Stem("tăierilor"), "tăier");});
test("tăietor -> tăietor", function() {deepEqual( Stem("tăietor"), "tăietor");});
test("tăietura -> tăietur", function() {deepEqual( Stem("tăietura"), "tăietur");});
test("tăieturi -> tăietur", function() {deepEqual( Stem("tăieturi"), "tăietur");});
test("tăind -> tăind", function() {deepEqual( Stem("tăind"), "tăind");});
test("tăinui -> tăin", function() {deepEqual( Stem("tăinui"), "tăin");});
test("tăinuirea -> tăinu", function() {deepEqual( Stem("tăinuirea"), "tăinu");});
test("tăinuită -> tăinuit", function() {deepEqual( Stem("tăinuită"), "tăinuit");});
test("tăioasă -> tăioas", function() {deepEqual( Stem("tăioasă"), "tăioas");});
test("tăios -> tăios", function() {deepEqual( Stem("tăios"), "tăios");});
test("tăiş -> tăiş", function() {deepEqual( Stem("tăiş"), "tăiş");});
test("tălăzuim -> tălăzu", function() {deepEqual( Stem("tălăzuim"), "tălăzu");});
test("tălpi -> tălp", function() {deepEqual( Stem("tălpi"), "tălp");});
test("tămâieze -> tămâi", function() {deepEqual( Stem("tămâieze"), "tămâi");});
test("tămâioasă -> tămâi", function() {deepEqual( Stem("tămâioasă"), "tămâi");});
test("tănase -> tănas", function() {deepEqual( Stem("tănase"), "tănas");});
test("tărâm -> tăr", function() {deepEqual( Stem("tărâm"), "tăr");});
test("tărâmul -> tăr", function() {deepEqual( Stem("tărâmul"), "tăr");});
test("tărâmurile -> tărâmur", function() {deepEqual( Stem("tărâmurile"), "tărâmur");});
test("tărăgănat -> tărăgăn", function() {deepEqual( Stem("tărăgănat"), "tărăgăn");});
test("tărăgănate -> tărăgăn", function() {deepEqual( Stem("tărăgănate"), "tărăgăn");});
test("tărgi -> tărg", function() {deepEqual( Stem("tărgi"), "tărg");});
test("tăria -> tări", function() {deepEqual( Stem("tăria"), "tări");});
test("tăriei -> tăr", function() {deepEqual( Stem("tăriei"), "tăr");});
test("tătarii -> tătar", function() {deepEqual( Stem("tătarii"), "tătar");});
test("tăticule -> tăticul", function() {deepEqual( Stem("tăticule"), "tăticul");});
test("tău -> tău", function() {deepEqual( Stem("tău"), "tău");});
test("tăvălug -> tăvălug", function() {deepEqual( Stem("tăvălug"), "tăvălug");});
test("te -> te", function() {deepEqual( Stem("te"), "te");});
test("teafăr -> teafăr", function() {deepEqual( Stem("teafăr"), "teafăr");});
test("teama -> team", function() {deepEqual( Stem("teama"), "team");});
test("teamă -> team", function() {deepEqual( Stem("teamă"), "team");});
test("teanc -> teanc", function() {deepEqual( Stem("teanc"), "teanc");});
test("teancurile -> teancur", function() {deepEqual( Stem("teancurile"), "teancur");});
test("teapa -> teap", function() {deepEqual( Stem("teapa"), "teap");});
test("teatrală -> teatral", function() {deepEqual( Stem("teatrală"), "teatral");});
test("teatre -> teatr", function() {deepEqual( Stem("teatre"), "teatr");});
test("teatrele -> teatr", function() {deepEqual( Stem("teatrele"), "teatr");});
test("teatru -> teatru", function() {deepEqual( Stem("teatru"), "teatru");});
test("teatrul -> teatr", function() {deepEqual( Stem("teatrul"), "teatr");});
test("tehnic -> tehnic", function() {deepEqual( Stem("tehnic"), "tehnic");});
test("tehnica -> tehnic", function() {deepEqual( Stem("tehnica"), "tehnic");});
test("tehnică -> tehnic", function() {deepEqual( Stem("tehnică"), "tehnic");});
test("tehnice -> tehnic", function() {deepEqual( Stem("tehnice"), "tehnic");});
test("tehnici -> tehnic", function() {deepEqual( Stem("tehnici"), "tehnic");});
test("tehnicianului -> tehnician", function() {deepEqual( Stem("tehnicianului"), "tehnician");});
test("tehnicieni -> tehnicien", function() {deepEqual( Stem("tehnicieni"), "tehnicien");});
test("tehnicii -> tehnic", function() {deepEqual( Stem("tehnicii"), "tehnic");});
test("teilor -> teilor", function() {deepEqual( Stem("teilor"), "teilor");});
test("telefoanelor -> telefoan", function() {deepEqual( Stem("telefoanelor"), "telefoan");});
test("telefon -> telefon", function() {deepEqual( Stem("telefon"), "telefon");});
test("telefona -> telefon", function() {deepEqual( Stem("telefona"), "telefon");});
test("telefonat -> telefon", function() {deepEqual( Stem("telefonat"), "telefon");});
test("telefonez -> telefon", function() {deepEqual( Stem("telefonez"), "telefon");});
test("telefonică -> telefon", function() {deepEqual( Stem("telefonică"), "telefon");});
test("telefonul -> telefon", function() {deepEqual( Stem("telefonul"), "telefon");});
test("telefonului -> telefon", function() {deepEqual( Stem("telefonului"), "telefon");});
test("telegraf -> telegraf", function() {deepEqual( Stem("telegraf"), "telegraf");});
test("telegrafia -> telegraf", function() {deepEqual( Stem("telegrafia"), "telegraf");});
test("telegrama -> telegram", function() {deepEqual( Stem("telegrama"), "telegram");});
test("telegramă -> telegram", function() {deepEqual( Stem("telegramă"), "telegram");});
test("telegrame -> telegram", function() {deepEqual( Stem("telegrame"), "telegram");});
test("telegramele -> telegram", function() {deepEqual( Stem("telegramele"), "telegram");});
test("teleleică -> telel", function() {deepEqual( Stem("teleleică"), "telel");});
test("tem -> tem", function() {deepEqual( Stem("tem"), "tem");});
test("tema -> tem", function() {deepEqual( Stem("tema"), "tem");});
test("temă -> tem", function() {deepEqual( Stem("temă"), "tem");});
test("temeau -> temeau", function() {deepEqual( Stem("temeau"), "temeau");});
test("temei -> teme", function() {deepEqual( Stem("temei"), "teme");});
test("temeinic -> temein", function() {deepEqual( Stem("temeinic"), "temein");});
test("temele -> tem", function() {deepEqual( Stem("temele"), "tem");});
test("temelia -> temel", function() {deepEqual( Stem("temelia"), "temel");});
test("temere -> temer", function() {deepEqual( Stem("temere"), "temer");});
test("temerilor -> temer", function() {deepEqual( Stem("temerilor"), "temer");});
test("temniţă -> temniţ", function() {deepEqual( Stem("temniţă"), "temniţ");});
test("temniţe -> temniţ", function() {deepEqual( Stem("temniţe"), "temniţ");});
test("temperament -> temperament", function() {deepEqual( Stem("temperament"), "temperament");});
test("temperamentul -> temperament", function() {deepEqual( Stem("temperamentul"), "temperament");});
test("temperamentului -> temperament", function() {deepEqual( Stem("temperamentului"), "temperament");});
test("temperatura -> temperatur", function() {deepEqual( Stem("temperatura"), "temperatur");});
test("temperatură -> temperat", function() {deepEqual( Stem("temperatură"), "temperat");});
test("temperaturi -> temperatur", function() {deepEqual( Stem("temperaturi"), "temperatur");});
test("temperaturii -> temperatur", function() {deepEqual( Stem("temperaturii"), "temperatur");});
test("temperări -> temperăr", function() {deepEqual( Stem("temperări"), "temperăr");});
test("templu -> templu", function() {deepEqual( Stem("templu"), "templu");});
test("tempo -> tempo", function() {deepEqual( Stem("tempo"), "tempo");});
test("temporal -> temporal", function() {deepEqual( Stem("temporal"), "temporal");});
test("temporală -> temporal", function() {deepEqual( Stem("temporală"), "temporal");});
test("temporale -> temporal", function() {deepEqual( Stem("temporale"), "temporal");});
test("temporalitate -> temporal", function() {deepEqual( Stem("temporalitate"), "temporal");});
test("temporalitatea -> temporal", function() {deepEqual( Stem("temporalitatea"), "temporal");});
test("temporar -> temporar", function() {deepEqual( Stem("temporar"), "temporar");});
test("temporară -> tempor", function() {deepEqual( Stem("temporară"), "tempor");});
test("temură -> temur", function() {deepEqual( Stem("temură"), "temur");});
test("temut -> temut", function() {deepEqual( Stem("temut"), "temut");});
test("temutei -> temute", function() {deepEqual( Stem("temutei"), "temute");});
test("temuţi -> temuţ", function() {deepEqual( Stem("temuţi"), "temuţ");});
test("ten -> ten", function() {deepEqual( Stem("ten"), "ten");});
test("tenace -> tenac", function() {deepEqual( Stem("tenace"), "tenac");});
test("tenacitate -> tenac", function() {deepEqual( Stem("tenacitate"), "tenac");});
test("tenacitatea -> tenac", function() {deepEqual( Stem("tenacitatea"), "tenac");});
test("tenculeţe -> tenculeţ", function() {deepEqual( Stem("tenculeţe"), "tenculeţ");});
test("tendenţioasă -> tendenţ", function() {deepEqual( Stem("tendenţioasă"), "tendenţ");});
test("tendenţioase -> tendenţ", function() {deepEqual( Stem("tendenţioase"), "tendenţ");});
test("tendenţios -> tendenţ", function() {deepEqual( Stem("tendenţios"), "tendenţ");});
test("tendinţa -> tendinţ", function() {deepEqual( Stem("tendinţa"), "tendinţ");});
test("tendinţă -> tendinţ", function() {deepEqual( Stem("tendinţă"), "tendinţ");});
test("tendinţele -> tendinţ", function() {deepEqual( Stem("tendinţele"), "tendinţ");});
test("tenebre -> tenebr", function() {deepEqual( Stem("tenebre"), "tenebr");});
test("tenebrelor -> tenebr", function() {deepEqual( Stem("tenebrelor"), "tenebr");});
test("tenebros -> tenebr", function() {deepEqual( Stem("tenebros"), "tenebr");});
test("tenis -> tenis", function() {deepEqual( Stem("tenis"), "tenis");});
test("tensional -> tensional", function() {deepEqual( Stem("tensional"), "tensional");});
test("tensională -> tensional", function() {deepEqual( Stem("tensională"), "tensional");});
test("tensionată -> tension", function() {deepEqual( Stem("tensionată"), "tension");});
test("tensionate -> tension", function() {deepEqual( Stem("tensionate"), "tension");});
test("tensionează -> tension", function() {deepEqual( Stem("tensionează"), "tension");});
test("tentaculele -> tentacul", function() {deepEqual( Stem("tentaculele"), "tentacul");});
test("tentat -> tentat", function() {deepEqual( Stem("tentat"), "tentat");});
test("tentată -> tentat", function() {deepEqual( Stem("tentată"), "tentat");});
test("teodorescu -> teodorescu", function() {deepEqual( Stem("teodorescu"), "teodorescu");});
test("teologi -> teolog", function() {deepEqual( Stem("teologi"), "teolog");});
test("teologia -> teolog", function() {deepEqual( Stem("teologia"), "teolog");});
test("teoreme -> teorem", function() {deepEqual( Stem("teoreme"), "teorem");});
test("teoretic -> teoret", function() {deepEqual( Stem("teoretic"), "teoret");});
test("teoretică -> teoret", function() {deepEqual( Stem("teoretică"), "teoret");});
test("teoretice -> teoret", function() {deepEqual( Stem("teoretice"), "teoret");});
test("teoreticeşte -> teoretic", function() {deepEqual( Stem("teoreticeşte"), "teoretic");});
test("teoretiza -> teoretiz", function() {deepEqual( Stem("teoretiza"), "teoretiz");});
test("teoretizarea -> teoretiz", function() {deepEqual( Stem("teoretizarea"), "teoretiz");});
test("teoretizări -> teoretizăr", function() {deepEqual( Stem("teoretizări"), "teoretizăr");});
test("teoretizează -> teoretiz", function() {deepEqual( Stem("teoretizează"), "teoretiz");});
test("teoria -> teor", function() {deepEqual( Stem("teoria"), "teor");});
test("teorie -> teor", function() {deepEqual( Stem("teorie"), "teor");});
test("teoriei -> teor", function() {deepEqual( Stem("teoriei"), "teor");});
test("teorii -> teor", function() {deepEqual( Stem("teorii"), "teor");});
test("teoriilor -> teor", function() {deepEqual( Stem("teoriilor"), "teor");});
test("teosofie -> teosof", function() {deepEqual( Stem("teosofie"), "teosof");});
test("teosofilor -> teosof", function() {deepEqual( Stem("teosofilor"), "teosof");});
test("terasamentul -> terasament", function() {deepEqual( Stem("terasamentul"), "terasament");});
test("terasamentului -> terasament", function() {deepEqual( Stem("terasamentului"), "terasament");});
test("terci -> terc", function() {deepEqual( Stem("terci"), "terc");});
test("teren -> teren", function() {deepEqual( Stem("teren"), "teren");});
test("terenul -> teren", function() {deepEqual( Stem("terenul"), "teren");});
test("terenuri -> terenur", function() {deepEqual( Stem("terenuri"), "terenur");});
test("teribil -> teribil", function() {deepEqual( Stem("teribil"), "teribil");});
test("teribilă -> teribil", function() {deepEqual( Stem("teribilă"), "teribil");});
test("termen -> termen", function() {deepEqual( Stem("termen"), "termen");});
test("termeni -> termen", function() {deepEqual( Stem("termeni"), "termen");});
test("termenii -> termen", function() {deepEqual( Stem("termenii"), "termen");});
test("termenul -> termen", function() {deepEqual( Stem("termenul"), "termen");});
test("termenului -> termen", function() {deepEqual( Stem("termenului"), "termen");});
test("termin -> termin", function() {deepEqual( Stem("termin"), "termin");});
test("termina -> termin", function() {deepEqual( Stem("termina"), "termin");});
test("terminase -> termin", function() {deepEqual( Stem("terminase"), "termin");});
test("terminat -> termin", function() {deepEqual( Stem("terminat"), "termin");});
test("terminau -> termin", function() {deepEqual( Stem("terminau"), "termin");});
test("termină -> termin", function() {deepEqual( Stem("termină"), "termin");});
test("terminăm -> termin", function() {deepEqual( Stem("terminăm"), "termin");});
test("termine -> termin", function() {deepEqual( Stem("termine"), "termin");});
test("terminologiei -> terminolog", function() {deepEqual( Stem("terminologiei"), "terminolog");});
test("termocauterul -> termocauter", function() {deepEqual( Stem("termocauterul"), "termocauter");});
test("termopile -> termop", function() {deepEqual( Stem("termopile"), "termop");});
test("tern -> tern", function() {deepEqual( Stem("tern"), "tern");});
test("terţiu -> terţiu", function() {deepEqual( Stem("terţiu"), "terţiu");});
test("terţiului -> terţ", function() {deepEqual( Stem("terţiului"), "terţ");});
test("tescui -> tesc", function() {deepEqual( Stem("tescui"), "tesc");});
test("test -> test", function() {deepEqual( Stem("test"), "test");});
test("testament -> testament", function() {deepEqual( Stem("testament"), "testament");});
test("testamentar -> testamentar", function() {deepEqual( Stem("testamentar"), "testamentar");});
test("testamentul -> testament", function() {deepEqual( Stem("testamentul"), "testament");});
test("testamentului -> testament", function() {deepEqual( Stem("testamentului"), "testament");});
test("testare -> test", function() {deepEqual( Stem("testare"), "test");});
test("testat -> testat", function() {deepEqual( Stem("testat"), "testat");});
test("testată -> testat", function() {deepEqual( Stem("testată"), "testat");});
test("testaţi -> test", function() {deepEqual( Stem("testaţi"), "test");});
test("testăm -> test", function() {deepEqual( Stem("testăm"), "test");});
test("testări -> testăr", function() {deepEqual( Stem("testări"), "testăr");});
test("teste -> test", function() {deepEqual( Stem("teste"), "test");});
test("testează -> test", function() {deepEqual( Stem("testează"), "test");});
test("testelor -> test", function() {deepEqual( Stem("testelor"), "test");});
test("testez -> test", function() {deepEqual( Stem("testez"), "test");});
test("testezi -> test", function() {deepEqual( Stem("testezi"), "test");});
test("testiculele -> testicul", function() {deepEqual( Stem("testiculele"), "testicul");});
test("testînd -> testînd", function() {deepEqual( Stem("testînd"), "testînd");});
test("teşit -> teşit", function() {deepEqual( Stem("teşit"), "teşit");});
test("teşite -> teşit", function() {deepEqual( Stem("teşite"), "teşit");});
test("tetanos -> tetan", function() {deepEqual( Stem("tetanos"), "tetan");});
test("tetanosului -> tetan", function() {deepEqual( Stem("tetanosului"), "tetan");});
test("tevatură -> tevat", function() {deepEqual( Stem("tevatură"), "tevat");});
test("texas -> texas", function() {deepEqual( Stem("texas"), "texas");});
test("text -> text", function() {deepEqual( Stem("text"), "text");});
test("texte -> text", function() {deepEqual( Stem("texte"), "text");});
test("textelor -> text", function() {deepEqual( Stem("textelor"), "text");});
test("textual -> textual", function() {deepEqual( Stem("textual"), "textual");});
test("textuală -> textual", function() {deepEqual( Stem("textuală"), "textual");});
test("textuale -> textual", function() {deepEqual( Stem("textuale"), "textual");});
test("textul -> text", function() {deepEqual( Stem("textul"), "text");});
test("textului -> text", function() {deepEqual( Stem("textului"), "text");});
test("textura -> textur", function() {deepEqual( Stem("textura"), "textur");});
test("teza -> tez", function() {deepEqual( Stem("teza"), "tez");});
test("teză -> tez", function() {deepEqual( Stem("teză"), "tez");});
test("thomas -> thomas", function() {deepEqual( Stem("thomas"), "thomas");});
test("tic -> tic", function() {deepEqual( Stem("tic"), "tic");});
test("ticălosule -> ticălosul", function() {deepEqual( Stem("ticălosule"), "ticălosul");});
test("ticluită -> ticluit", function() {deepEqual( Stem("ticluită"), "ticluit");});
test("ticsit -> ticsit", function() {deepEqual( Stem("ticsit"), "ticsit");});
test("ticsite -> ticsit", function() {deepEqual( Stem("ticsite"), "ticsit");});
test("ticuri -> ticur", function() {deepEqual( Stem("ticuri"), "ticur");});
test("ticurile -> ticur", function() {deepEqual( Stem("ticurile"), "ticur");});
test("tifoidă -> tifoid", function() {deepEqual( Stem("tifoidă"), "tifoid");});
test("tifos -> tifos", function() {deepEqual( Stem("tifos"), "tifos");});
test("tifosului -> tifos", function() {deepEqual( Stem("tifosului"), "tifos");});
test("tigroaică -> tigroaic", function() {deepEqual( Stem("tigroaică"), "tigroaic");});
test("tigru -> tigru", function() {deepEqual( Stem("tigru"), "tigru");});
test("tigrului -> tigr", function() {deepEqual( Stem("tigrului"), "tigr");});
test("tihnă -> tihn", function() {deepEqual( Stem("tihnă"), "tihn");});
test("tihnit -> tihnit", function() {deepEqual( Stem("tihnit"), "tihnit");});
test("tihnita -> tihnit", function() {deepEqual( Stem("tihnita"), "tihnit");});
test("tihnită -> tihnit", function() {deepEqual( Stem("tihnită"), "tihnit");});
test("tihnite -> tihnit", function() {deepEqual( Stem("tihnite"), "tihnit");});
test("timid -> timid", function() {deepEqual( Stem("timid"), "timid");});
test("timidă -> timid", function() {deepEqual( Stem("timidă"), "timid");});
test("timiditate -> timid", function() {deepEqual( Stem("timiditate"), "timid");});
test("timiditatea -> timid", function() {deepEqual( Stem("timiditatea"), "timid");});
test("timp -> timp", function() {deepEqual( Stem("timp"), "timp");});
test("timpane -> timpan", function() {deepEqual( Stem("timpane"), "timpan");});
test("timpul -> timp", function() {deepEqual( Stem("timpul"), "timp");});
test("timpului -> timp", function() {deepEqual( Stem("timpului"), "timp");});
test("timpuri -> timpur", function() {deepEqual( Stem("timpuri"), "timpur");});
test("timpurie -> timpur", function() {deepEqual( Stem("timpurie"), "timpur");});
test("timpurile -> timpur", function() {deepEqual( Stem("timpurile"), "timpur");});
test("timpuriu -> timpuriu", function() {deepEqual( Stem("timpuriu"), "timpuriu");});
test("tind -> tind", function() {deepEqual( Stem("tind"), "tind");});
test("tinde -> tind", function() {deepEqual( Stem("tinde"), "tind");});
test("tine -> tin", function() {deepEqual( Stem("tine"), "tin");});
test("tinere -> tiner", function() {deepEqual( Stem("tinere"), "tiner");});
test("tinerei -> tinere", function() {deepEqual( Stem("tinerei"), "tinere");});
test("tinerele -> tiner", function() {deepEqual( Stem("tinerele"), "tiner");});
test("tineretul -> tineret", function() {deepEqual( Stem("tineretul"), "tineret");});
test("tinereţe -> tinereţ", function() {deepEqual( Stem("tinereţe"), "tinereţ");});
test("tinereţii -> tiner", function() {deepEqual( Stem("tinereţii"), "tiner");});
test("tineri -> tiner", function() {deepEqual( Stem("tineri"), "tiner");});
test("tinerii -> tiner", function() {deepEqual( Stem("tinerii"), "tiner");});
test("tinichea -> tinich", function() {deepEqual( Stem("tinichea"), "tinich");});
test("tip -> tip", function() {deepEqual( Stem("tip"), "tip");});
test("tipărea -> tipăr", function() {deepEqual( Stem("tipărea"), "tipăr");});
test("tipăresc -> tipăr", function() {deepEqual( Stem("tipăresc"), "tipăr");});
test("tipăreşte -> tipăr", function() {deepEqual( Stem("tipăreşte"), "tipăr");});
test("tipărit -> tipăr", function() {deepEqual( Stem("tipărit"), "tipăr");});
test("tipărite -> tipăr", function() {deepEqual( Stem("tipărite"), "tipăr");});
test("tipic -> tipic", function() {deepEqual( Stem("tipic"), "tipic");});
test("tipică -> tipic", function() {deepEqual( Stem("tipică"), "tipic");});
test("tipograf -> tipograf", function() {deepEqual( Stem("tipograf"), "tipograf");});
test("tipografie -> tipograf", function() {deepEqual( Stem("tipografie"), "tipograf");});
test("tipograful -> tipograf", function() {deepEqual( Stem("tipograful"), "tipograf");});
test("tipul -> tip", function() {deepEqual( Stem("tipul"), "tip");});
test("tipului -> tip", function() {deepEqual( Stem("tipului"), "tip");});
test("tipuri -> tipur", function() {deepEqual( Stem("tipuri"), "tipur");});
test("tir -> tir", function() {deepEqual( Stem("tir"), "tir");});
test("tirania -> tiran", function() {deepEqual( Stem("tirania"), "tiran");});
test("tirul -> tir", function() {deepEqual( Stem("tirul"), "tir");});
test("tirului -> tir", function() {deepEqual( Stem("tirului"), "tir");});
test("titanică -> titan", function() {deepEqual( Stem("titanică"), "titan");});
test("titlu -> titlu", function() {deepEqual( Stem("titlu"), "titlu");});
test("titlul -> titl", function() {deepEqual( Stem("titlul"), "titl");});
test("titluri -> titlur", function() {deepEqual( Stem("titluri"), "titlur");});
test("titlurile -> titlur", function() {deepEqual( Stem("titlurile"), "titlur");});
test("titular -> titular", function() {deepEqual( Stem("titular"), "titular");});
test("titulatură -> titulat", function() {deepEqual( Stem("titulatură"), "titulat");});
test("tiveşte -> tiveşt", function() {deepEqual( Stem("tiveşte"), "tiveşt");});
test("tivit -> tivit", function() {deepEqual( Stem("tivit"), "tivit");});
test("tiviţi -> tiv", function() {deepEqual( Stem("tiviţi"), "tiv");});
test("toacă -> toac", function() {deepEqual( Stem("toacă"), "toac");});
test("toaletă -> toalet", function() {deepEqual( Stem("toaletă"), "toalet");});
test("toamna -> toamn", function() {deepEqual( Stem("toamna"), "toamn");});
test("toamnă -> toamn", function() {deepEqual( Stem("toamnă"), "toamn");});
test("toamnei -> toamne", function() {deepEqual( Stem("toamnei"), "toamne");});
test("toane -> toan", function() {deepEqual( Stem("toane"), "toan");});
test("toante -> toant", function() {deepEqual( Stem("toante"), "toant");});
test("toarcem -> toarc", function() {deepEqual( Stem("toarcem"), "toarc");});
test("toarnă -> toarn", function() {deepEqual( Stem("toarnă"), "toarn");});
test("toarne -> toarn", function() {deepEqual( Stem("toarne"), "toarn");});
test("toasturi -> toastur", function() {deepEqual( Stem("toasturi"), "toastur");});
test("toată -> toat", function() {deepEqual( Stem("toată"), "toat");});
test("toate -> toat", function() {deepEqual( Stem("toate"), "toat");});
test("tobă -> tob", function() {deepEqual( Stem("tobă"), "tob");});
test("toc -> toc", function() {deepEqual( Stem("toc"), "toc");});
test("tocat -> tocat", function() {deepEqual( Stem("tocat"), "tocat");});
test("tocată -> tocat", function() {deepEqual( Stem("tocată"), "tocat");});
test("tocând -> tocând", function() {deepEqual( Stem("tocând"), "tocând");});
test("tocător -> tocat", function() {deepEqual( Stem("tocător"), "tocat");});
test("toceşte -> toceşt", function() {deepEqual( Stem("toceşte"), "toceşt");});
test("tocmai -> tocm", function() {deepEqual( Stem("tocmai"), "tocm");});
test("tocmească -> tocm", function() {deepEqual( Stem("tocmească"), "tocm");});
test("tocmiţi -> tocm", function() {deepEqual( Stem("tocmiţi"), "tocm");});
test("tocul -> toc", function() {deepEqual( Stem("tocul"), "toc");});
test("tocului -> toc", function() {deepEqual( Stem("tocului"), "toc");});
test("tohanul -> tohan", function() {deepEqual( Stem("tohanul"), "tohan");});
test("toi -> toi", function() {deepEqual( Stem("toi"), "toi");});
test("tolănească -> tolăn", function() {deepEqual( Stem("tolănească"), "tolăn");});
test("tolănită -> tolăn", function() {deepEqual( Stem("tolănită"), "tolăn");});
test("tolera -> toler", function() {deepEqual( Stem("tolera"), "toler");});
test("tolerabile -> toler", function() {deepEqual( Stem("tolerabile"), "toler");});
test("tolerantă -> toler", function() {deepEqual( Stem("tolerantă"), "toler");});
test("toleranţa -> toleranţ", function() {deepEqual( Stem("toleranţa"), "toleranţ");});
test("toleranţei -> toleranţe", function() {deepEqual( Stem("toleranţei"), "toleranţe");});
test("tolerat -> toler", function() {deepEqual( Stem("tolerat"), "toler");});
test("toma -> tom", function() {deepEqual( Stem("toma"), "tom");});
test("tomnatică -> tomnat", function() {deepEqual( Stem("tomnatică"), "tomnat");});
test("tomnatice -> tomnat", function() {deepEqual( Stem("tomnatice"), "tomnat");});
test("ton -> ton", function() {deepEqual( Stem("ton"), "ton");});
test("tonă -> ton", function() {deepEqual( Stem("tonă"), "ton");});
test("tone -> ton", function() {deepEqual( Stem("tone"), "ton");});
test("tonitu -> tonitu", function() {deepEqual( Stem("tonitu"), "tonitu");});
test("tonul -> ton", function() {deepEqual( Stem("tonul"), "ton");});
test("tonului -> ton", function() {deepEqual( Stem("tonului"), "ton");});
test("tonuri -> tonur", function() {deepEqual( Stem("tonuri"), "tonur");});
test("tonurile -> tonur", function() {deepEqual( Stem("tonurile"), "tonur");});
test("topaz -> topaz", function() {deepEqual( Stem("topaz"), "topaz");});
test("topească -> topeasc", function() {deepEqual( Stem("topească"), "topeasc");});
test("topire -> topir", function() {deepEqual( Stem("topire"), "topir");});
test("topirea -> topir", function() {deepEqual( Stem("topirea"), "topir");});
test("topit -> topit", function() {deepEqual( Stem("topit"), "topit");});
test("topită -> topit", function() {deepEqual( Stem("topită"), "topit");});
test("topor -> topor", function() {deepEqual( Stem("topor"), "topor");});
test("toptanul -> toptan", function() {deepEqual( Stem("toptanul"), "toptan");});
test("torente -> torent", function() {deepEqual( Stem("torente"), "torent");});
test("torni -> torn", function() {deepEqual( Stem("torni"), "torn");});
test("toropeşte -> torop", function() {deepEqual( Stem("toropeşte"), "torop");});
test("tortură -> tort", function() {deepEqual( Stem("tortură"), "tort");});
test("torţe -> torţ", function() {deepEqual( Stem("torţe"), "torţ");});
test("tot -> tot", function() {deepEqual( Stem("tot"), "tot");});
test("total -> total", function() {deepEqual( Stem("total"), "total");});
test("totală -> total", function() {deepEqual( Stem("totală"), "total");});
test("totale -> total", function() {deepEqual( Stem("totale"), "total");});
test("totalitate -> total", function() {deepEqual( Stem("totalitate"), "total");});
test("totalitatea -> total", function() {deepEqual( Stem("totalitatea"), "total");});
test("totalităţii -> total", function() {deepEqual( Stem("totalităţii"), "total");});
test("totalizare -> totaliz", function() {deepEqual( Stem("totalizare"), "totaliz");});
test("totdeauna -> totdeaun", function() {deepEqual( Stem("totdeauna"), "totdeaun");});
test("totdeodată -> totdeod", function() {deepEqual( Stem("totdeodată"), "totdeod");});
test("totodată -> totod", function() {deepEqual( Stem("totodată"), "totod");});
test("totul -> tot", function() {deepEqual( Stem("totul"), "tot");});
test("totuna -> totun", function() {deepEqual( Stem("totuna"), "totun");});
test("totuşi -> totuş", function() {deepEqual( Stem("totuşi"), "totuş");});
test("toţi -> toţ", function() {deepEqual( Stem("toţi"), "toţ");});
test("toţii -> toţ", function() {deepEqual( Stem("toţii"), "toţ");});
test("tournoi -> tourno", function() {deepEqual( Stem("tournoi"), "tourno");});
test("tout -> tout", function() {deepEqual( Stem("tout"), "tout");});
test("tovarăş -> tovarăş", function() {deepEqual( Stem("tovarăş"), "tovarăş");});
test("tovarăşa -> tovarăş", function() {deepEqual( Stem("tovarăşa"), "tovarăş");});
test("tovarăşi -> tovarăş", function() {deepEqual( Stem("tovarăşi"), "tovarăş");});
test("tovarăşii -> tovarăş", function() {deepEqual( Stem("tovarăşii"), "tovarăş");});
test("tovarăşilor -> tovarăş", function() {deepEqual( Stem("tovarăşilor"), "tovarăş");});
test("tovarăşul -> tovarăş", function() {deepEqual( Stem("tovarăşul"), "tovarăş");});
test("tovarăşului -> tovarăş", function() {deepEqual( Stem("tovarăşului"), "tovarăş");});
test("tovărăşia -> tovărăş", function() {deepEqual( Stem("tovărăşia"), "tovărăş");});
test("tovărăşie -> tovărăş", function() {deepEqual( Stem("tovărăşie"), "tovărăş");});
test("tradiţie -> tradiţ", function() {deepEqual( Stem("tradiţie"), "tradiţ");});
test("tradiţii -> trad", function() {deepEqual( Stem("tradiţii"), "trad");});
test("tradiţional -> tradiţional", function() {deepEqual( Stem("tradiţional"), "tradiţional");});
test("tradiţională -> tradiţional", function() {deepEqual( Stem("tradiţională"), "tradiţional");});
test("tradiţionale -> tradiţional", function() {deepEqual( Stem("tradiţionale"), "tradiţional");});
test("tradiţionalismului -> tradiţionalist", function() {deepEqual( Stem("tradiţionalismului"), "tradiţionalist");});
test("tradiţiunea -> tradit", function() {deepEqual( Stem("tradiţiunea"), "tradit");});
test("traducă -> traduc", function() {deepEqual( Stem("traducă"), "traduc");});
test("traduce -> traduc", function() {deepEqual( Stem("traduce"), "traduc");});
test("traducea -> traduc", function() {deepEqual( Stem("traducea"), "traduc");});
test("traducere -> traduc", function() {deepEqual( Stem("traducere"), "traduc");});
test("traducerea -> traduc", function() {deepEqual( Stem("traducerea"), "traduc");});
test("traduceri -> traducer", function() {deepEqual( Stem("traduceri"), "traducer");});
test("tradus -> tradus", function() {deepEqual( Stem("tradus"), "tradus");});
test("trag -> trag", function() {deepEqual( Stem("trag"), "trag");});
test("tragă -> trag", function() {deepEqual( Stem("tragă"), "trag");});
test("trage -> trag", function() {deepEqual( Stem("trage"), "trag");});
test("tragedia -> traged", function() {deepEqual( Stem("tragedia"), "traged");});
test("tragedie -> traged", function() {deepEqual( Stem("tragedie"), "traged");});
test("tragedii -> traged", function() {deepEqual( Stem("tragedii"), "traged");});
test("tragediile -> traged", function() {deepEqual( Stem("tragediile"), "traged");});
test("tragem -> trag", function() {deepEqual( Stem("tragem"), "trag");});
test("tragere -> trag", function() {deepEqual( Stem("tragere"), "trag");});
test("tragerea -> trag", function() {deepEqual( Stem("tragerea"), "trag");});
test("trageţi -> trag", function() {deepEqual( Stem("trageţi"), "trag");});
test("tragic -> tragic", function() {deepEqual( Stem("tragic"), "tragic");});
test("tragică -> tragic", function() {deepEqual( Stem("tragică"), "tragic");});
test("tragicii -> tragic", function() {deepEqual( Stem("tragicii"), "tragic");});
test("trai -> tra", function() {deepEqual( Stem("trai"), "tra");});
test("traiectoria -> traiector", function() {deepEqual( Stem("traiectoria"), "traiector");});
test("traiectorie -> traiector", function() {deepEqual( Stem("traiectorie"), "traiector");});
test("traiul -> trai", function() {deepEqual( Stem("traiul"), "trai");});
test("traiului -> trai", function() {deepEqual( Stem("traiului"), "trai");});
test("tramvai -> tramv", function() {deepEqual( Stem("tramvai"), "tramv");});
test("tramvaielor -> tramvai", function() {deepEqual( Stem("tramvaielor"), "tramvai");});
test("tramvaiul -> tramvai", function() {deepEqual( Stem("tramvaiul"), "tramvai");});
test("trandafir -> trandafir", function() {deepEqual( Stem("trandafir"), "trandafir");});
test("trandafiri -> trandafir", function() {deepEqual( Stem("trandafiri"), "trandafir");});
test("trandafiriu -> trandafiriu", function() {deepEqual( Stem("trandafiriu"), "trandafiriu");});
test("trandafirul -> trandafir", function() {deepEqual( Stem("trandafirul"), "trandafir");});
test("transceandă -> transceand", function() {deepEqual( Stem("transceandă"), "transceand");});
test("transcend -> transcend", function() {deepEqual( Stem("transcend"), "transcend");});
test("transcende -> transcend", function() {deepEqual( Stem("transcende"), "transcend");});
test("transcendem -> transcend", function() {deepEqual( Stem("transcendem"), "transcend");});
test("transcendent -> transcendent", function() {deepEqual( Stem("transcendent"), "transcendent");});
test("transcendental -> transcendental", function() {deepEqual( Stem("transcendental"), "transcendental");});
test("transcendentale -> transcendental", function() {deepEqual( Stem("transcendentale"), "transcendental");});
test("transcendentă -> transcendent", function() {deepEqual( Stem("transcendentă"), "transcendent");});
test("transcendente -> transcendent", function() {deepEqual( Stem("transcendente"), "transcendent");});
test("transcendenţa -> transcendenţ", function() {deepEqual( Stem("transcendenţa"), "transcendenţ");});
test("transcendenţă -> transcendenţ", function() {deepEqual( Stem("transcendenţă"), "transcendenţ");});
test("transcendenţe -> transcendenţ", function() {deepEqual( Stem("transcendenţe"), "transcendenţ");});
test("transcris -> transcris", function() {deepEqual( Stem("transcris"), "transcris");});
test("transform -> transform", function() {deepEqual( Stem("transform"), "transform");});
test("transforma -> transform", function() {deepEqual( Stem("transforma"), "transform");});
test("transformare -> transform", function() {deepEqual( Stem("transformare"), "transform");});
test("transformarea -> transform", function() {deepEqual( Stem("transformarea"), "transform");});
test("transformat -> transform", function() {deepEqual( Stem("transformat"), "transform");});
test("transformată -> transform", function() {deepEqual( Stem("transformată"), "transform");});
test("transformate -> transform", function() {deepEqual( Stem("transformate"), "transform");});
test("transformând -> transform", function() {deepEqual( Stem("transformând"), "transform");});
test("transformându -> transform", function() {deepEqual( Stem("transformându"), "transform");});
test("transformă -> transform", function() {deepEqual( Stem("transformă"), "transform");});
test("transformări -> transformăr", function() {deepEqual( Stem("transformări"), "transformăr");});
test("transformării -> transformăr", function() {deepEqual( Stem("transformării"), "transformăr");});
test("transformările -> transformăr", function() {deepEqual( Stem("transformările"), "transformăr");});
test("transforme -> transform", function() {deepEqual( Stem("transforme"), "transform");});
test("transfug -> transfug", function() {deepEqual( Stem("transfug"), "transfug");});
test("transgresa -> transgres", function() {deepEqual( Stem("transgresa"), "transgres");});
test("transgresarea -> transgres", function() {deepEqual( Stem("transgresarea"), "transgres");});
test("transgresăm -> transgres", function() {deepEqual( Stem("transgresăm"), "transgres");});
test("transgresează -> transgres", function() {deepEqual( Stem("transgresează"), "transgres");});
test("transilvania -> transilvan", function() {deepEqual( Stem("transilvania"), "transilvan");});
test("transmis -> transmis", function() {deepEqual( Stem("transmis"), "transmis");});
test("transmite -> transmit", function() {deepEqual( Stem("transmite"), "transmit");});
test("transport -> transport", function() {deepEqual( Stem("transport"), "transport");});
test("transportat -> transport", function() {deepEqual( Stem("transportat"), "transport");});
test("transportată -> transport", function() {deepEqual( Stem("transportată"), "transport");});
test("transportaţi -> transport", function() {deepEqual( Stem("transportaţi"), "transport");});
test("transportă -> transport", function() {deepEqual( Stem("transportă"), "transport");});
test("transportul -> transport", function() {deepEqual( Stem("transportul"), "transport");});
test("transportului -> transport", function() {deepEqual( Stem("transportului"), "transport");});
test("transporturile -> transportur", function() {deepEqual( Stem("transporturile"), "transportur");});
test("transpun -> transpun", function() {deepEqual( Stem("transpun"), "transpun");});
test("transpunere -> transpun", function() {deepEqual( Stem("transpunere"), "transpun");});
test("transpuneri -> transpuner", function() {deepEqual( Stem("transpuneri"), "transpuner");});
test("transpus -> transpus", function() {deepEqual( Stem("transpus"), "transpus");});
test("transpusă -> transpus", function() {deepEqual( Stem("transpusă"), "transpus");});
test("tranşee -> tranşe", function() {deepEqual( Stem("tranşee"), "tranşe");});
test("tranşeele -> tranşe", function() {deepEqual( Stem("tranşeele"), "tranşe");});
test("tranşeelor -> tranşe", function() {deepEqual( Stem("tranşeelor"), "tranşe");});
test("trap -> trap", function() {deepEqual( Stem("trap"), "trap");});
test("trapul -> trap", function() {deepEqual( Stem("trapul"), "trap");});
test("tras -> tras", function() {deepEqual( Stem("tras"), "tras");});
test("trasă -> tras", function() {deepEqual( Stem("trasă"), "tras");});
test("trase -> tra", function() {deepEqual( Stem("trase"), "tra");});
test("traşi -> traş", function() {deepEqual( Stem("traşi"), "traş");});
test("tratament -> tratament", function() {deepEqual( Stem("tratament"), "tratament");});
test("tratamentul -> tratament", function() {deepEqual( Stem("tratamentul"), "tratament");});
test("tratamentului -> tratament", function() {deepEqual( Stem("tratamentului"), "tratament");});
test("tratarea -> trat", function() {deepEqual( Stem("tratarea"), "trat");});
test("tratat -> tratat", function() {deepEqual( Stem("tratat"), "tratat");});
test("tratată -> tratat", function() {deepEqual( Stem("tratată"), "tratat");});
test("tratate -> tratat", function() {deepEqual( Stem("tratate"), "tratat");});
test("tratăm -> trat", function() {deepEqual( Stem("tratăm"), "trat");});
test("tratează -> trat", function() {deepEqual( Stem("tratează"), "trat");});
test("traversa -> travers", function() {deepEqual( Stem("traversa"), "travers");});
test("traversat -> travers", function() {deepEqual( Stem("traversat"), "travers");});
test("traversând -> travers", function() {deepEqual( Stem("traversând"), "travers");});
test("traversăm -> travers", function() {deepEqual( Stem("traversăm"), "travers");});
test("trâmbă -> trâmb", function() {deepEqual( Stem("trâmbă"), "trâmb");});
test("trâmbe -> trâmb", function() {deepEqual( Stem("trâmbe"), "trâmb");});
test("trândave -> trândav", function() {deepEqual( Stem("trândave"), "trândav");});
test("trândăvia -> trândăv", function() {deepEqual( Stem("trândăvia"), "trândăv");});
test("trândăviei -> trândăv", function() {deepEqual( Stem("trândăviei"), "trândăv");});
test("trântea -> trânt", function() {deepEqual( Stem("trântea"), "trânt");});
test("trântească -> trânt", function() {deepEqual( Stem("trântească"), "trânt");});
test("trântesc -> trânt", function() {deepEqual( Stem("trântesc"), "trânt");});
test("trânteşte -> trânt", function() {deepEqual( Stem("trânteşte"), "trânt");});
test("trânti -> trânt", function() {deepEqual( Stem("trânti"), "trânt");});
test("trântim -> trânt", function() {deepEqual( Stem("trântim"), "trânt");});
test("trântind -> trânt", function() {deepEqual( Stem("trântind"), "trânt");});
test("trântise -> trânt", function() {deepEqual( Stem("trântise"), "trânt");});
test("trântit -> trântit", function() {deepEqual( Stem("trântit"), "trântit");});
test("trântite -> trântit", function() {deepEqual( Stem("trântite"), "trântit");});
test("trântiţi -> trânt", function() {deepEqual( Stem("trântiţi"), "trânt");});
test("trădează -> trăd", function() {deepEqual( Stem("trădează"), "trăd");});
test("trădez -> trăd", function() {deepEqual( Stem("trădez"), "trăd");});
test("trădeze -> trăd", function() {deepEqual( Stem("trădeze"), "trăd");});
test("trăgaciul -> trăgac", function() {deepEqual( Stem("trăgaciul"), "trăgac");});
test("trăgând -> trăg", function() {deepEqual( Stem("trăgând"), "trăg");});
test("trăgător -> trăgat", function() {deepEqual( Stem("trăgător"), "trăgat");});
test("trăgători -> trăgat", function() {deepEqual( Stem("trăgători"), "trăgat");});
test("trăgea -> trăg", function() {deepEqual( Stem("trăgea"), "trăg");});
test("trăgeam -> trăg", function() {deepEqual( Stem("trăgeam"), "trăg");});
test("trăi -> tră", function() {deepEqual( Stem("trăi"), "tră");});
test("trăia -> trăi", function() {deepEqual( Stem("trăia"), "trăi");});
test("trăiască -> trăiasc", function() {deepEqual( Stem("trăiască"), "trăiasc");});
test("trăiau -> trăi", function() {deepEqual( Stem("trăiau"), "trăi");});
test("trăiesc -> trăi", function() {deepEqual( Stem("trăiesc"), "trăi");});
test("trăieşte -> trăi", function() {deepEqual( Stem("trăieşte"), "trăi");});
test("trăieşti -> trăi", function() {deepEqual( Stem("trăieşti"), "trăi");});
test("trăim -> tră", function() {deepEqual( Stem("trăim"), "tră");});
test("trăirea -> trăir", function() {deepEqual( Stem("trăirea"), "trăir");});
test("trăiseră -> trăiser", function() {deepEqual( Stem("trăiseră"), "trăiser");});
test("trăit -> trăit", function() {deepEqual( Stem("trăit"), "trăit");});
test("trăite -> trăit", function() {deepEqual( Stem("trăite"), "trăit");});
test("trăiţi -> tră", function() {deepEqual( Stem("trăiţi"), "tră");});
test("trăsătură -> trăsăt", function() {deepEqual( Stem("trăsătură"), "trăsăt");});
test("trăsături -> trăsătur", function() {deepEqual( Stem("trăsături"), "trăsătur");});
test("trăsăturile -> trăsătur", function() {deepEqual( Stem("trăsăturile"), "trăsătur");});
test("trăsăturilor -> trăsătur", function() {deepEqual( Stem("trăsăturilor"), "trăsătur");});
test("trăsese -> tră", function() {deepEqual( Stem("trăsese"), "tră");});
test("trăsnet -> trăsnet", function() {deepEqual( Stem("trăsnet"), "trăsnet");});
test("trăsnete -> trăsnet", function() {deepEqual( Stem("trăsnete"), "trăsnet");});
test("trăsnetele -> trăsnet", function() {deepEqual( Stem("trăsnetele"), "trăsnet");});
test("trăsnetul -> trăsnet", function() {deepEqual( Stem("trăsnetul"), "trăsnet");});
test("trăsni -> trăsn", function() {deepEqual( Stem("trăsni"), "trăsn");});
test("trăsnind -> trăsn", function() {deepEqual( Stem("trăsnind"), "trăsn");});
test("trăsnit -> trăsnit", function() {deepEqual( Stem("trăsnit"), "trăsnit");});
test("trăsura -> trăsur", function() {deepEqual( Stem("trăsura"), "trăsur");});
test("trăsură -> trăs", function() {deepEqual( Stem("trăsură"), "trăs");});
test("trăsuri -> trăsur", function() {deepEqual( Stem("trăsuri"), "trăsur");});
test("trăsurii -> trăsur", function() {deepEqual( Stem("trăsurii"), "trăsur");});
test("trăsurilor -> trăsur", function() {deepEqual( Stem("trăsurilor"), "trăsur");});
test("treaba -> treab", function() {deepEqual( Stem("treaba"), "treab");});
test("treabă -> treab", function() {deepEqual( Stem("treabă"), "treab");});
test("treacă -> treac", function() {deepEqual( Stem("treacă"), "treac");});
test("treacăt -> treacăt", function() {deepEqual( Stem("treacăt"), "treacăt");});
test("treapta -> treapt", function() {deepEqual( Stem("treapta"), "treapt");});
test("treaptă -> treapt", function() {deepEqual( Stem("treaptă"), "treapt");});
test("treaz -> treaz", function() {deepEqual( Stem("treaz"), "treaz");});
test("trebilor -> treb", function() {deepEqual( Stem("trebilor"), "treb");});
test("trebui -> treb", function() {deepEqual( Stem("trebui"), "treb");});
test("trebuia -> trebui", function() {deepEqual( Stem("trebuia"), "trebui");});
test("trebuiască -> trebuiasc", function() {deepEqual( Stem("trebuiască"), "trebuiasc");});
test("trebuiau -> trebui", function() {deepEqual( Stem("trebuiau"), "trebui");});
test("trebuie -> trebui", function() {deepEqual( Stem("trebuie"), "trebui");});
test("trebuiesc -> trebui", function() {deepEqual( Stem("trebuiesc"), "trebui");});
test("trebuieşte -> trebui", function() {deepEqual( Stem("trebuieşte"), "trebui");});
test("trebuinţa -> trebuinţ", function() {deepEqual( Stem("trebuinţa"), "trebuinţ");});
test("trebuinţă -> trebuinţ", function() {deepEqual( Stem("trebuinţă"), "trebuinţ");});
test("trebuinţe -> trebuinţ", function() {deepEqual( Stem("trebuinţe"), "trebuinţ");});
test("trebuinţelor -> trebuinţ", function() {deepEqual( Stem("trebuinţelor"), "trebuinţ");});
test("trebuit -> trebuit", function() {deepEqual( Stem("trebuit"), "trebuit");});
test("treburi -> trebur", function() {deepEqual( Stem("treburi"), "trebur");});
test("trec -> trec", function() {deepEqual( Stem("trec"), "trec");});
test("trecând -> trec", function() {deepEqual( Stem("trecând"), "trec");});
test("trecându -> trec", function() {deepEqual( Stem("trecându"), "trec");});
test("trecătoare -> trecat", function() {deepEqual( Stem("trecătoare"), "trecat");});
test("trecător -> trecat", function() {deepEqual( Stem("trecător"), "trecat");});
test("trecătorii -> trecat", function() {deepEqual( Stem("trecătorii"), "trecat");});
test("trece -> trec", function() {deepEqual( Stem("trece"), "trec");});
test("trecea -> trec", function() {deepEqual( Stem("trecea"), "trec");});
test("treceam -> trec", function() {deepEqual( Stem("treceam"), "trec");});
test("treceau -> trec", function() {deepEqual( Stem("treceau"), "trec");});
test("trecem -> trec", function() {deepEqual( Stem("trecem"), "trec");});
test("trecere -> trec", function() {deepEqual( Stem("trecere"), "trec");});
test("trecerea -> trec", function() {deepEqual( Stem("trecerea"), "trec");});
test("treceri -> trecer", function() {deepEqual( Stem("treceri"), "trecer");});
test("trecerii -> trecer", function() {deepEqual( Stem("trecerii"), "trecer");});
test("treceţi -> trec", function() {deepEqual( Stem("treceţi"), "trec");});
test("treci -> trec", function() {deepEqual( Stem("treci"), "trec");});
test("trecu -> trecu", function() {deepEqual( Stem("trecu"), "trecu");});
test("trecuse -> trec", function() {deepEqual( Stem("trecuse"), "trec");});
test("trecusem -> trec", function() {deepEqual( Stem("trecusem"), "trec");});
test("trecuseră -> trec", function() {deepEqual( Stem("trecuseră"), "trec");});
test("trecuserăm -> trec", function() {deepEqual( Stem("trecuserăm"), "trec");});
test("trecut -> trecut", function() {deepEqual( Stem("trecut"), "trecut");});
test("trecută -> trecut", function() {deepEqual( Stem("trecută"), "trecut");});
test("trecute -> trecut", function() {deepEqual( Stem("trecute"), "trecut");});
test("trecutul -> trecut", function() {deepEqual( Stem("trecutul"), "trecut");});
test("trecutului -> trecut", function() {deepEqual( Stem("trecutului"), "trecut");});
test("trecuţi -> trecuţ", function() {deepEqual( Stem("trecuţi"), "trecuţ");});
test("trei -> tre", function() {deepEqual( Stem("trei"), "tre");});
test("treia -> trei", function() {deepEqual( Stem("treia"), "trei");});
test("treilea -> treil", function() {deepEqual( Stem("treilea"), "treil");});
test("treimii -> treim", function() {deepEqual( Stem("treimii"), "treim");});
test("treizeci -> treizec", function() {deepEqual( Stem("treizeci"), "treizec");});
test("treji -> trej", function() {deepEqual( Stem("treji"), "trej");});
test("tremur -> tremur", function() {deepEqual( Stem("tremur"), "tremur");});
test("tremura -> tremur", function() {deepEqual( Stem("tremura"), "tremur");});
test("tremuram -> tremur", function() {deepEqual( Stem("tremuram"), "tremur");});
test("tremurând -> tremur", function() {deepEqual( Stem("tremurând"), "tremur");});
test("tremură -> trem", function() {deepEqual( Stem("tremură"), "trem");});
test("tremurăm -> trem", function() {deepEqual( Stem("tremurăm"), "trem");});
test("tren -> tren", function() {deepEqual( Stem("tren"), "tren");});
test("trenul -> tren", function() {deepEqual( Stem("trenul"), "tren");});
test("trenului -> tren", function() {deepEqual( Stem("trenului"), "tren");});
test("trenuri -> trenur", function() {deepEqual( Stem("trenuri"), "trenur");});
test("trenurile -> trenur", function() {deepEqual( Stem("trenurile"), "trenur");});
test("trepidaţia -> trepid", function() {deepEqual( Stem("trepidaţia"), "trepid");});
test("treptat -> treptat", function() {deepEqual( Stem("treptat"), "treptat");});
test("trepte -> trept", function() {deepEqual( Stem("trepte"), "trept");});
test("tresar -> tresar", function() {deepEqual( Stem("tresar"), "tresar");});
test("tresară -> tres", function() {deepEqual( Stem("tresară"), "tres");});
test("tresărea -> tresăr", function() {deepEqual( Stem("tresărea"), "tresăr");});
test("tresăreau -> tresăr", function() {deepEqual( Stem("tresăreau"), "tresăr");});
test("tresări -> tresăr", function() {deepEqual( Stem("tresări"), "tresăr");});
test("tresărim -> tresăr", function() {deepEqual( Stem("tresărim"), "tresăr");});
test("tresărind -> tresăr", function() {deepEqual( Stem("tresărind"), "tresăr");});
test("tresărirea -> tresăr", function() {deepEqual( Stem("tresărirea"), "tresăr");});
test("tresărit -> tresăr", function() {deepEqual( Stem("tresărit"), "tresăr");});
test("tresăriţi -> tresăr", function() {deepEqual( Stem("tresăriţi"), "tresăr");});
test("trestie -> trest", function() {deepEqual( Stem("trestie"), "trest");});
test("trezea -> trez", function() {deepEqual( Stem("trezea"), "trez");});
test("trezească -> trez", function() {deepEqual( Stem("trezească"), "trez");});
test("trezesc -> trez", function() {deepEqual( Stem("trezesc"), "trez");});
test("trezeşte -> trez", function() {deepEqual( Stem("trezeşte"), "trez");});
test("trezeşti -> trez", function() {deepEqual( Stem("trezeşti"), "trez");});
test("trezi -> trez", function() {deepEqual( Stem("trezi"), "trez");});
test("trezim -> trez", function() {deepEqual( Stem("trezim"), "trez");});
test("treziră -> trez", function() {deepEqual( Stem("treziră"), "trez");});
test("trezire -> trez", function() {deepEqual( Stem("trezire"), "trez");});
test("trezirii -> trezir", function() {deepEqual( Stem("trezirii"), "trezir");});
test("trezise -> trez", function() {deepEqual( Stem("trezise"), "trez");});
test("trezit -> trezit", function() {deepEqual( Stem("trezit"), "trezit");});
test("trezită -> trezit", function() {deepEqual( Stem("trezită"), "trezit");});
test("trezite -> trezit", function() {deepEqual( Stem("trezite"), "trezit");});
test("treziţi -> trez", function() {deepEqual( Stem("treziţi"), "trez");});
test("tria -> tri", function() {deepEqual( Stem("tria"), "tri");});
test("triadă -> triad", function() {deepEqual( Stem("triadă"), "triad");});
test("triadei -> triade", function() {deepEqual( Stem("triadei"), "triade");});
test("triaj -> triaj", function() {deepEqual( Stem("triaj"), "triaj");});
test("triajul -> triaj", function() {deepEqual( Stem("triajul"), "triaj");});
test("trib -> trib", function() {deepEqual( Stem("trib"), "trib");});
test("tribal -> tribal", function() {deepEqual( Stem("tribal"), "tribal");});
test("tribală -> tribal", function() {deepEqual( Stem("tribală"), "tribal");});
test("tribalităţi -> tribal", function() {deepEqual( Stem("tribalităţi"), "tribal");});
test("tribord -> tribord", function() {deepEqual( Stem("tribord"), "tribord");});
test("tribulaţiile -> tribul", function() {deepEqual( Stem("tribulaţiile"), "tribul");});
test("tribuna -> tribun", function() {deepEqual( Stem("tribuna"), "tribun");});
test("tribunal -> tribunal", function() {deepEqual( Stem("tribunal"), "tribunal");});
test("tribunale -> tribunal", function() {deepEqual( Stem("tribunale"), "tribunal");});
test("tribunalelor -> tribunal", function() {deepEqual( Stem("tribunalelor"), "tribunal");});
test("tribună -> tribun", function() {deepEqual( Stem("tribună"), "tribun");});
test("tribunei -> tribune", function() {deepEqual( Stem("tribunei"), "tribune");});
test("tribunele -> tribun", function() {deepEqual( Stem("tribunele"), "tribun");});
test("tricolore -> tricolor", function() {deepEqual( Stem("tricolore"), "tricolor");});
test("tridimensional -> tridimensional", function() {deepEqual( Stem("tridimensional"), "tridimensional");});
test("trimis -> trimis", function() {deepEqual( Stem("trimis"), "trimis");});
test("trimise -> trim", function() {deepEqual( Stem("trimise"), "trim");});
test("trimisese -> trim", function() {deepEqual( Stem("trimisese"), "trim");});
test("trimisesem -> trim", function() {deepEqual( Stem("trimisesem"), "trim");});
test("trimişi -> trim", function() {deepEqual( Stem("trimişi"), "trim");});
test("trimit -> trimit", function() {deepEqual( Stem("trimit"), "trimit");});
test("trimită -> trimit", function() {deepEqual( Stem("trimită"), "trimit");});
test("trimite -> trimit", function() {deepEqual( Stem("trimite"), "trimit");});
test("trimitem -> trimit", function() {deepEqual( Stem("trimitem"), "trimit");});
test("trimiteri -> trimiter", function() {deepEqual( Stem("trimiteri"), "trimiter");});
test("trimiţându -> trimiţ", function() {deepEqual( Stem("trimiţându"), "trimiţ");});
test("trimiţi -> trim", function() {deepEqual( Stem("trimiţi"), "trim");});
test("tripticul -> triptic", function() {deepEqual( Stem("tripticul"), "triptic");});
test("trist -> trist", function() {deepEqual( Stem("trist"), "trist");});
test("tristă -> trist", function() {deepEqual( Stem("tristă"), "trist");});
test("triste -> trist", function() {deepEqual( Stem("triste"), "trist");});
test("tristeţe -> tristeţ", function() {deepEqual( Stem("tristeţe"), "tristeţ");});
test("tristeţi -> trist", function() {deepEqual( Stem("tristeţi"), "trist");});
test("tristeţile -> trist", function() {deepEqual( Stem("tristeţile"), "trist");});
test("trişajul -> trişaj", function() {deepEqual( Stem("trişajul"), "trişaj");});
test("trişti -> trişt", function() {deepEqual( Stem("trişti"), "trişt");});
test("triumfase -> triumf", function() {deepEqual( Stem("triumfase"), "triumf");});
test("triumfător -> triumfat", function() {deepEqual( Stem("triumfător"), "triumfat");});
test("triumfe -> triumf", function() {deepEqual( Stem("triumfe"), "triumf");});
test("triumful -> triumf", function() {deepEqual( Stem("triumful"), "triumf");});
test("triumfurile -> triumfur", function() {deepEqual( Stem("triumfurile"), "triumfur");});
test("triunghi -> triungh", function() {deepEqual( Stem("triunghi"), "triungh");});
test("triunghiul -> triungh", function() {deepEqual( Stem("triunghiul"), "triungh");});
test("triunghiului -> triungh", function() {deepEqual( Stem("triunghiului"), "triungh");});
test("triungi -> triung", function() {deepEqual( Stem("triungi"), "triung");});
test("trivial -> trivial", function() {deepEqual( Stem("trivial"), "trivial");});
test("trivială -> trivial", function() {deepEqual( Stem("trivială"), "trivial");});
test("triviale -> trivial", function() {deepEqual( Stem("triviale"), "trivial");});
test("trivialitatea -> trivial", function() {deepEqual( Stem("trivialitatea"), "trivial");});
test("trivialităţile -> trivial", function() {deepEqual( Stem("trivialităţile"), "trivial");});
test("troienise -> troien", function() {deepEqual( Stem("troienise"), "troien");});
test("trombă -> tromb", function() {deepEqual( Stem("trombă"), "tromb");});
test("trombe -> tromb", function() {deepEqual( Stem("trombe"), "tromb");});
test("trombele -> tromb", function() {deepEqual( Stem("trombele"), "tromb");});
test("trommelfeuer -> trommelfeuer", function() {deepEqual( Stem("trommelfeuer"), "trommelfeuer");});
test("trompetele -> trompet", function() {deepEqual( Stem("trompetele"), "trompet");});
test("trompetică -> trompet", function() {deepEqual( Stem("trompetică"), "trompet");});
test("tropical -> tropic", function() {deepEqual( Stem("tropical"), "tropic");});
test("tropot -> tropot", function() {deepEqual( Stem("tropot"), "tropot");});
test("trosnitor -> trosnit", function() {deepEqual( Stem("trosnitor"), "trosnit");});
test("trotuar -> trotuar", function() {deepEqual( Stem("trotuar"), "trotuar");});
test("trotuarul -> trotuar", function() {deepEqual( Stem("trotuarul"), "trotuar");});
test("truc -> truc", function() {deepEqual( Stem("truc"), "truc");});
test("truda -> trud", function() {deepEqual( Stem("truda"), "trud");});
test("trudă -> trud", function() {deepEqual( Stem("trudă"), "trud");});
test("trudeam -> trud", function() {deepEqual( Stem("trudeam"), "trud");});
test("trudesc -> trud", function() {deepEqual( Stem("trudesc"), "trud");});
test("trudi -> trud", function() {deepEqual( Stem("trudi"), "trud");});
test("trudnici -> trudnic", function() {deepEqual( Stem("trudnici"), "trudnic");});
test("trufanda -> trufand", function() {deepEqual( Stem("trufanda"), "trufand");});
test("trufandalele -> trufandal", function() {deepEqual( Stem("trufandalele"), "trufandal");});
test("trunchi -> trunch", function() {deepEqual( Stem("trunchi"), "trunch");});
test("trunchiul -> trunch", function() {deepEqual( Stem("trunchiul"), "trunch");});
test("trunchiuri -> trunchiur", function() {deepEqual( Stem("trunchiuri"), "trunchiur");});
test("trunchiurile -> trunchiur", function() {deepEqual( Stem("trunchiurile"), "trunchiur");});
test("trup -> trup", function() {deepEqual( Stem("trup"), "trup");});
test("trupa -> trup", function() {deepEqual( Stem("trupa"), "trup");});
test("trupă -> trup", function() {deepEqual( Stem("trupă"), "trup");});
test("trupe -> trup", function() {deepEqual( Stem("trupe"), "trup");});
test("trupei -> trupe", function() {deepEqual( Stem("trupei"), "trupe");});
test("trupele -> trup", function() {deepEqual( Stem("trupele"), "trup");});
test("trupelor -> trup", function() {deepEqual( Stem("trupelor"), "trup");});
test("trupeşă -> trupeş", function() {deepEqual( Stem("trupeşă"), "trupeş");});
test("trupul -> trup", function() {deepEqual( Stem("trupul"), "trup");});
test("trupului -> trup", function() {deepEqual( Stem("trupului"), "trup");});
test("trupuri -> trupur", function() {deepEqual( Stem("trupuri"), "trupur");});
test("trupurile -> trupur", function() {deepEqual( Stem("trupurile"), "trupur");});
test("trupurilor -> trupur", function() {deepEqual( Stem("trupurilor"), "trupur");});
test("tu -> tu", function() {deepEqual( Stem("tu"), "tu");});
test("tuberculoşilor -> tubercul", function() {deepEqual( Stem("tuberculoşilor"), "tubercul");});
test("tuberculoză -> tuberculoz", function() {deepEqual( Stem("tuberculoză"), "tuberculoz");});
test("tuburi -> tubur", function() {deepEqual( Stem("tuburi"), "tubur");});
test("tuchei -> tuche", function() {deepEqual( Stem("tuchei"), "tuche");});
test("tudor -> tudor", function() {deepEqual( Stem("tudor"), "tudor");});
test("tudora -> tudor", function() {deepEqual( Stem("tudora"), "tudor");});
test("tudose -> tudo", function() {deepEqual( Stem("tudose"), "tudo");});
test("tufă -> tuf", function() {deepEqual( Stem("tufă"), "tuf");});
test("tufele -> tuf", function() {deepEqual( Stem("tufele"), "tuf");});
test("tufiş -> tufiş", function() {deepEqual( Stem("tufiş"), "tufiş");});
test("tufişuri -> tufişur", function() {deepEqual( Stem("tufişuri"), "tufişur");});
test("tulburarea -> tulbur", function() {deepEqual( Stem("tulburarea"), "tulbur");});
test("tulburat -> tulbur", function() {deepEqual( Stem("tulburat"), "tulbur");});
test("tulburau -> tulbur", function() {deepEqual( Stem("tulburau"), "tulbur");});
test("tulbură -> tulb", function() {deepEqual( Stem("tulbură"), "tulb");});
test("tulburări -> tulburăr", function() {deepEqual( Stem("tulburări"), "tulburăr");});
test("tulburătoare -> tulbur", function() {deepEqual( Stem("tulburătoare"), "tulbur");});
test("tulburător -> tulbur", function() {deepEqual( Stem("tulburător"), "tulbur");});
test("tulbure -> tulbur", function() {deepEqual( Stem("tulbure"), "tulbur");});
test("tulburi -> tulbur", function() {deepEqual( Stem("tulburi"), "tulbur");});
test("tulpan -> tulpan", function() {deepEqual( Stem("tulpan"), "tulpan");});
test("tumbe -> tumb", function() {deepEqual( Stem("tumbe"), "tumb");});
test("tumultuoasă -> tumultu", function() {deepEqual( Stem("tumultuoasă"), "tumultu");});
test("tumultuoase -> tumultu", function() {deepEqual( Stem("tumultuoase"), "tumultu");});
test("tun -> tun", function() {deepEqual( Stem("tun"), "tun");});
test("tunari -> tunar", function() {deepEqual( Stem("tunari"), "tunar");});
test("tună -> tun", function() {deepEqual( Stem("tună"), "tun");});
test("tunde -> tund", function() {deepEqual( Stem("tunde"), "tund");});
test("tunel -> tunel", function() {deepEqual( Stem("tunel"), "tunel");});
test("tuns -> tuns", function() {deepEqual( Stem("tuns"), "tuns");});
test("tunsă -> tuns", function() {deepEqual( Stem("tunsă"), "tuns");});
test("tunul -> tun", function() {deepEqual( Stem("tunul"), "tun");});
test("tunuri -> tunur", function() {deepEqual( Stem("tunuri"), "tunur");});
test("tunurile -> tunur", function() {deepEqual( Stem("tunurile"), "tunur");});
test("turbarea -> turb", function() {deepEqual( Stem("turbarea"), "turb");});
test("turbat -> turbat", function() {deepEqual( Stem("turbat"), "turbat");});
test("turbată -> turbat", function() {deepEqual( Stem("turbată"), "turbat");});
test("turbate -> turbat", function() {deepEqual( Stem("turbate"), "turbat");});
test("turburată -> turbur", function() {deepEqual( Stem("turburată"), "turbur");});
test("turbură -> turb", function() {deepEqual( Stem("turbură"), "turb");});
test("turci -> turc", function() {deepEqual( Stem("turci"), "turc");});
test("turcii -> turc", function() {deepEqual( Stem("turcii"), "turc");});
test("tureatca -> tureatc", function() {deepEqual( Stem("tureatca"), "tureatc");});
test("turla -> turl", function() {deepEqual( Stem("turla"), "turl");});
test("turlă -> turl", function() {deepEqual( Stem("turlă"), "turl");});
test("turmă -> turm", function() {deepEqual( Stem("turmă"), "turm");});
test("turn -> turn", function() {deepEqual( Stem("turn"), "turn");});
test("turnat -> turnat", function() {deepEqual( Stem("turnat"), "turnat");});
test("turnând -> turn", function() {deepEqual( Stem("turnând"), "turn");});
test("turnându -> turn", function() {deepEqual( Stem("turnându"), "turn");});
test("turnătoria -> turnător", function() {deepEqual( Stem("turnătoria"), "turnător");});
test("turnul -> turn", function() {deepEqual( Stem("turnul"), "turn");});
test("turnuri -> turnur", function() {deepEqual( Stem("turnuri"), "turnur");});
test("turtă -> turt", function() {deepEqual( Stem("turtă"), "turt");});
test("turtit -> turtit", function() {deepEqual( Stem("turtit"), "turtit");});
test("turtite -> turtit", function() {deepEqual( Stem("turtite"), "turtit");});
test("turtucaia -> turtucai", function() {deepEqual( Stem("turtucaia"), "turtucai");});
test("turtucaiei -> turtucaie", function() {deepEqual( Stem("turtucaiei"), "turtucaie");});
test("tutun -> tutun", function() {deepEqual( Stem("tutun"), "tutun");});
test("tutunaru -> tutunaru", function() {deepEqual( Stem("tutunaru"), "tutunaru");});
test("tutungerie -> tutunger", function() {deepEqual( Stem("tutungerie"), "tutunger");});
test("tuturor -> tuturor", function() {deepEqual( Stem("tuturor"), "tuturor");});
test("ţambalagiu -> ţambalagiu", function() {deepEqual( Stem("ţambalagiu"), "ţambalagiu");});
test("ţambalul -> ţambal", function() {deepEqual( Stem("ţambalul"), "ţambal");});
test("ţap -> ţap", function() {deepEqual( Stem("ţap"), "ţap");});
test("ţara -> ţar", function() {deepEqual( Stem("ţara"), "ţar");});
test("ţară -> ţar", function() {deepEqual( Stem("ţară"), "ţar");});
test("ţarc -> ţarc", function() {deepEqual( Stem("ţarc"), "ţarc");});
test("ţarcuri -> ţarcur", function() {deepEqual( Stem("ţarcuri"), "ţarcur");});
test("ţarismului -> ţarism", function() {deepEqual( Stem("ţarismului"), "ţarism");});
test("ţânţar -> ţânţar", function() {deepEqual( Stem("ţânţar"), "ţânţar");});
test("ţârcovnic -> ţârcovn", function() {deepEqual( Stem("ţârcovnic"), "ţârcovn");});
test("ţâşnesc -> ţâşn", function() {deepEqual( Stem("ţâşnesc"), "ţâşn");});
test("ţâşnirea -> ţâşn", function() {deepEqual( Stem("ţâşnirea"), "ţâşn");});
test("ţâşnit -> ţâşnit", function() {deepEqual( Stem("ţâşnit"), "ţâşnit");});
test("ţâşnitoare -> ţâşnit", function() {deepEqual( Stem("ţâşnitoare"), "ţâşnit");});
test("ţâşnitură -> ţâşnit", function() {deepEqual( Stem("ţâşnitură"), "ţâşnit");});
test("ţăran -> ţăran", function() {deepEqual( Stem("ţăran"), "ţăran");});
test("ţărance -> ţăranc", function() {deepEqual( Stem("ţărance"), "ţăranc");});
test("ţărani -> ţăran", function() {deepEqual( Stem("ţărani"), "ţăran");});
test("ţăranii -> ţăran", function() {deepEqual( Stem("ţăranii"), "ţăran");});
test("ţăranilor -> ţăran", function() {deepEqual( Stem("ţăranilor"), "ţăran");});
test("ţăranul -> ţăran", function() {deepEqual( Stem("ţăranul"), "ţăran");});
test("ţăranului -> ţăran", function() {deepEqual( Stem("ţăranului"), "ţăran");});
test("ţărână -> ţărân", function() {deepEqual( Stem("ţărână"), "ţărân");});
test("ţărăncuţă -> ţărăncuţ", function() {deepEqual( Stem("ţărăncuţă"), "ţărăncuţ");});
test("ţărănească -> ţărăn", function() {deepEqual( Stem("ţărănească"), "ţărăn");});
test("ţărănesc -> ţărăn", function() {deepEqual( Stem("ţărănesc"), "ţărăn");});
test("ţărăneşte -> ţărăn", function() {deepEqual( Stem("ţărăneşte"), "ţărăn");});
test("ţărăneşti -> ţărăn", function() {deepEqual( Stem("ţărăneşti"), "ţărăn");});
test("ţărănimea -> ţărănim", function() {deepEqual( Stem("ţărănimea"), "ţărănim");});
test("ţărănisme -> ţărănist", function() {deepEqual( Stem("ţărănisme"), "ţărănist");});
test("ţărănizare -> ţărăniz", function() {deepEqual( Stem("ţărănizare"), "ţărăniz");});
test("ţări -> ţăr", function() {deepEqual( Stem("ţări"), "ţăr");});
test("ţării -> ţăr", function() {deepEqual( Stem("ţării"), "ţăr");});
test("ţările -> ţăr", function() {deepEqual( Stem("ţările"), "ţăr");});
test("ţăruş -> ţăruş", function() {deepEqual( Stem("ţăruş"), "ţăruş");});
test("ţeapă -> ţeap", function() {deepEqual( Stem("ţeapă"), "ţeap");});
test("ţeasta -> ţeast", function() {deepEqual( Stem("ţeasta"), "ţeast");});
test("ţeavă -> ţeav", function() {deepEqual( Stem("ţeavă"), "ţeav");});
test("ţepeni -> ţepen", function() {deepEqual( Stem("ţepeni"), "ţepen");});
test("ţepeş -> ţepeş", function() {deepEqual( Stem("ţepeş"), "ţepeş");});
test("ţepi -> ţep", function() {deepEqual( Stem("ţepi"), "ţep");});
test("ţes -> ţes", function() {deepEqual( Stem("ţes"), "ţes");});
test("ţesătură -> ţesăt", function() {deepEqual( Stem("ţesătură"), "ţesăt");});
test("ţestoase -> ţestoas", function() {deepEqual( Stem("ţestoase"), "ţestoas");});
test("ţesuse -> ţesus", function() {deepEqual( Stem("ţesuse"), "ţesus");});
test("ţesut -> ţesut", function() {deepEqual( Stem("ţesut"), "ţesut");});
test("ţesută -> ţesut", function() {deepEqual( Stem("ţesută"), "ţesut");});
test("ţesuturi -> ţesutur", function() {deepEqual( Stem("ţesuturi"), "ţesutur");});
test("ţevi -> ţev", function() {deepEqual( Stem("ţevi"), "ţev");});
test("ţevile -> ţev", function() {deepEqual( Stem("ţevile"), "ţev");});
test("ţi -> ţi", function() {deepEqual( Stem("ţi"), "ţi");});
test("ţie -> ţie", function() {deepEqual( Stem("ţie"), "ţie");});
test("ţigan -> ţigan", function() {deepEqual( Stem("ţigan"), "ţigan");});
test("ţigane -> ţigan", function() {deepEqual( Stem("ţigane"), "ţigan");});
test("ţigani -> ţigan", function() {deepEqual( Stem("ţigani"), "ţigan");});
test("ţiganiada -> ţiganiad", function() {deepEqual( Stem("ţiganiada"), "ţiganiad");});
test("ţiganii -> ţigan", function() {deepEqual( Stem("ţiganii"), "ţigan");});
test("ţigara -> ţigar", function() {deepEqual( Stem("ţigara"), "ţigar");});
test("ţigară -> ţigar", function() {deepEqual( Stem("ţigară"), "ţigar");});
test("ţigarete -> ţigaret", function() {deepEqual( Stem("ţigarete"), "ţigaret");});
test("ţigaretul -> ţigaret", function() {deepEqual( Stem("ţigaretul"), "ţigaret");});
test("ţigăncuşă -> ţigăncuş", function() {deepEqual( Stem("ţigăncuşă"), "ţigăncuş");});
test("ţigăneşte -> ţigăn", function() {deepEqual( Stem("ţigăneşte"), "ţigăn");});
test("ţigăneşti -> ţigăn", function() {deepEqual( Stem("ţigăneşti"), "ţigăn");});
test("ţigănimea -> ţigănim", function() {deepEqual( Stem("ţigănimea"), "ţigănim");});
test("ţigănimii -> ţigănim", function() {deepEqual( Stem("ţigănimii"), "ţigănim");});
test("ţigănuşi -> ţigăn", function() {deepEqual( Stem("ţigănuşi"), "ţigăn");});
test("ţigănuşii -> ţigăn", function() {deepEqual( Stem("ţigănuşii"), "ţigăn");});
test("ţigări -> ţigăr", function() {deepEqual( Stem("ţigări"), "ţigăr");});
test("ţigările -> ţigăr", function() {deepEqual( Stem("ţigările"), "ţigăr");});
test("ţiglă -> ţigl", function() {deepEqual( Stem("ţiglă"), "ţigl");});
test("ţignale -> ţignal", function() {deepEqual( Stem("ţignale"), "ţignal");});
test("ţii -> ţii", function() {deepEqual( Stem("ţii"), "ţii");});
test("ţin -> ţin", function() {deepEqual( Stem("ţin"), "ţin");});
test("ţinând -> ţinând", function() {deepEqual( Stem("ţinând"), "ţinând");});
test("ţinându -> ţinându", function() {deepEqual( Stem("ţinându"), "ţinându");});
test("ţină -> ţin", function() {deepEqual( Stem("ţină"), "ţin");});
test("ţine -> ţin", function() {deepEqual( Stem("ţine"), "ţin");});
test("ţinea -> ţin", function() {deepEqual( Stem("ţinea"), "ţin");});
test("ţineam -> ţineam", function() {deepEqual( Stem("ţineam"), "ţineam");});
test("ţineau -> ţineau", function() {deepEqual( Stem("ţineau"), "ţineau");});
test("ţinem -> ţin", function() {deepEqual( Stem("ţinem"), "ţin");});
test("ţinere -> ţiner", function() {deepEqual( Stem("ţinere"), "ţiner");});
test("ţineţi -> ţin", function() {deepEqual( Stem("ţineţi"), "ţin");});
test("ţinta -> ţint", function() {deepEqual( Stem("ţinta"), "ţint");});
test("ţintă -> ţint", function() {deepEqual( Stem("ţintă"), "ţint");});
test("ţintea -> ţint", function() {deepEqual( Stem("ţintea"), "ţint");});
test("ţintele -> ţint", function() {deepEqual( Stem("ţintele"), "ţint");});
test("ţintisem -> ţint", function() {deepEqual( Stem("ţintisem"), "ţint");});
test("ţinut -> ţinut", function() {deepEqual( Stem("ţinut"), "ţinut");});
test("ţinuta -> ţinut", function() {deepEqual( Stem("ţinuta"), "ţinut");});
test("ţinută -> ţinut", function() {deepEqual( Stem("ţinută"), "ţinut");});
test("ţinutul -> ţinut", function() {deepEqual( Stem("ţinutul"), "ţinut");});
test("ţinuturile -> ţinutur", function() {deepEqual( Stem("ţinuturile"), "ţinutur");});
test("ţinuţi -> ţinuţ", function() {deepEqual( Stem("ţinuţi"), "ţinuţ");});
test("ţipat -> ţipat", function() {deepEqual( Stem("ţipat"), "ţipat");});
test("ţipă -> ţip", function() {deepEqual( Stem("ţipă"), "ţip");});
test("ţipăcioasă -> ţipăc", function() {deepEqual( Stem("ţipăcioasă"), "ţipăc");});
test("ţipete -> ţipet", function() {deepEqual( Stem("ţipete"), "ţipet");});
test("ţuguiată -> ţugui", function() {deepEqual( Stem("ţuguiată"), "ţugui");});
test("ţuica -> ţuic", function() {deepEqual( Stem("ţuica"), "ţuic");});
test("ţuică -> ţuic", function() {deepEqual( Stem("ţuică"), "ţuic");});
test("uchronia -> uchron", function() {deepEqual( Stem("uchronia"), "uchron");});
test("ucid -> ucid", function() {deepEqual( Stem("ucid"), "ucid");});
test("ucidă -> ucid", function() {deepEqual( Stem("ucidă"), "ucid");});
test("ucide -> ucid", function() {deepEqual( Stem("ucide"), "ucid");});
test("uciderea -> ucid", function() {deepEqual( Stem("uciderea"), "ucid");});
test("ucis -> ucis", function() {deepEqual( Stem("ucis"), "ucis");});
test("ucisă -> ucis", function() {deepEqual( Stem("ucisă"), "ucis");});
test("ucizi -> uciz", function() {deepEqual( Stem("ucizi"), "uciz");});
test("ud -> ud", function() {deepEqual( Stem("ud"), "ud");});
test("udă -> udă", function() {deepEqual( Stem("udă"), "udă");});
test("ude -> ude", function() {deepEqual( Stem("ude"), "ude");});
test("uf -> uf", function() {deepEqual( Stem("uf"), "uf");});
test("uimească -> uimeasc", function() {deepEqual( Stem("uimească"), "uimeasc");});
test("uimeşte -> uimeşt", function() {deepEqual( Stem("uimeşte"), "uimeşt");});
test("uimire -> uimir", function() {deepEqual( Stem("uimire"), "uimir");});
test("uimirea -> uimir", function() {deepEqual( Stem("uimirea"), "uimir");});
test("uimit -> uimit", function() {deepEqual( Stem("uimit"), "uimit");});
test("uimită -> uimit", function() {deepEqual( Stem("uimită"), "uimit");});
test("uimitoare -> uimit", function() {deepEqual( Stem("uimitoare"), "uimit");});
test("uimitor -> uimit", function() {deepEqual( Stem("uimitor"), "uimit");});
test("uimiţi -> uim", function() {deepEqual( Stem("uimiţi"), "uim");});
test("uit -> uit", function() {deepEqual( Stem("uit"), "uit");});
test("uita -> uit", function() {deepEqual( Stem("uita"), "uit");});
test("uitam -> uitam", function() {deepEqual( Stem("uitam"), "uitam");});
test("uitare -> uitar", function() {deepEqual( Stem("uitare"), "uitar");});
test("uitasem -> uitasem", function() {deepEqual( Stem("uitasem"), "uitasem");});
test("uitat -> uitat", function() {deepEqual( Stem("uitat"), "uitat");});
test("uitată -> uitat", function() {deepEqual( Stem("uitată"), "uitat");});
test("uitate -> uitat", function() {deepEqual( Stem("uitate"), "uitat");});
test("uitaţi -> uit", function() {deepEqual( Stem("uitaţi"), "uit");});
test("uitând -> uitând", function() {deepEqual( Stem("uitând"), "uitând");});
test("uitându -> uitându", function() {deepEqual( Stem("uitându"), "uitându");});
test("uită -> uit", function() {deepEqual( Stem("uită"), "uit");});
test("uităm -> uit", function() {deepEqual( Stem("uităm"), "uit");});
test("uite -> uit", function() {deepEqual( Stem("uite"), "uit");});
test("uiţi -> uiţ", function() {deepEqual( Stem("uiţi"), "uiţ");});
test("ulcelele -> ulcel", function() {deepEqual( Stem("ulcelele"), "ulcel");});
test("ulcer -> ulcer", function() {deepEqual( Stem("ulcer"), "ulcer");});
test("ulceroase -> ulcer", function() {deepEqual( Stem("ulceroase"), "ulcer");});
test("uleioasă -> ulei", function() {deepEqual( Stem("uleioasă"), "ulei");});
test("ulguz -> ulguz", function() {deepEqual( Stem("ulguz"), "ulguz");});
test("uliţa -> uliţ", function() {deepEqual( Stem("uliţa"), "uliţ");});
test("uliţă -> uliţ", function() {deepEqual( Stem("uliţă"), "uliţ");});
test("uliţele -> uliţ", function() {deepEqual( Stem("uliţele"), "uliţ");});
test("ulterioare -> ulterioar", function() {deepEqual( Stem("ulterioare"), "ulterioar");});
test("ulterior -> ulterior", function() {deepEqual( Stem("ulterior"), "ulterior");});
test("ultim -> ultim", function() {deepEqual( Stem("ultim"), "ultim");});
test("ultima -> ultim", function() {deepEqual( Stem("ultima"), "ultim");});
test("ultimă -> ultim", function() {deepEqual( Stem("ultimă"), "ultim");});
test("ultime -> ultim", function() {deepEqual( Stem("ultime"), "ultim");});
test("ultimei -> ultime", function() {deepEqual( Stem("ultimei"), "ultime");});
test("ultimele -> ultim", function() {deepEqual( Stem("ultimele"), "ultim");});
test("ultimii -> ultim", function() {deepEqual( Stem("ultimii"), "ultim");});
test("ultimul -> ultim", function() {deepEqual( Stem("ultimul"), "ultim");});
test("ultralucizi -> ultraluciz", function() {deepEqual( Stem("ultralucizi"), "ultraluciz");});
test("ultramodernă -> ultramodern", function() {deepEqual( Stem("ultramodernă"), "ultramodern");});
test("ultraoccidentale -> ultraoccidental", function() {deepEqual( Stem("ultraoccidentale"), "ultraoccidental");});
test("uluc -> uluc", function() {deepEqual( Stem("uluc"), "uluc");});
test("ulucile -> uluc", function() {deepEqual( Stem("ulucile"), "uluc");});
test("ului -> ulu", function() {deepEqual( Stem("ului"), "ulu");});
test("uluieşte -> ului", function() {deepEqual( Stem("uluieşte"), "ului");});
test("uluit -> uluit", function() {deepEqual( Stem("uluit"), "uluit");});
test("uluită -> uluit", function() {deepEqual( Stem("uluită"), "uluit");});
test("uluitoare -> uluit", function() {deepEqual( Stem("uluitoare"), "uluit");});
test("uluitoarea -> uluit", function() {deepEqual( Stem("uluitoarea"), "uluit");});
test("uluitoarei -> uluitoare", function() {deepEqual( Stem("uluitoarei"), "uluitoare");});
test("uluitor -> uluit", function() {deepEqual( Stem("uluitor"), "uluit");});
test("uluiţi -> ulu", function() {deepEqual( Stem("uluiţi"), "ulu");});
test("uman -> uman", function() {deepEqual( Stem("uman"), "uman");});
test("umană -> uman", function() {deepEqual( Stem("umană"), "uman");});
test("umane -> uman", function() {deepEqual( Stem("umane"), "uman");});
test("umanist -> umanist", function() {deepEqual( Stem("umanist"), "umanist");});
test("umaniste -> umanist", function() {deepEqual( Stem("umaniste"), "umanist");});
test("umanitar -> umanitar", function() {deepEqual( Stem("umanitar"), "umanitar");});
test("umanitare -> umanit", function() {deepEqual( Stem("umanitare"), "umanit");});
test("umanitate -> uman", function() {deepEqual( Stem("umanitate"), "uman");});
test("umanităţi -> uman", function() {deepEqual( Stem("umanităţi"), "uman");});
test("umăr -> umăr", function() {deepEqual( Stem("umăr"), "umăr");});
test("umărul -> umăr", function() {deepEqual( Stem("umărul"), "umăr");});
test("umbla -> umbla", function() {deepEqual( Stem("umbla"), "umbla");});
test("umblam -> umblam", function() {deepEqual( Stem("umblam"), "umblam");});
test("umblat -> umblat", function() {deepEqual( Stem("umblat"), "umblat");});
test("umblau -> umblau", function() {deepEqual( Stem("umblau"), "umblau");});
test("umblă -> umblă", function() {deepEqual( Stem("umblă"), "umblă");});
test("umbli -> umbli", function() {deepEqual( Stem("umbli"), "umbli");});
test("umblu -> umblu", function() {deepEqual( Stem("umblu"), "umblu");});
test("umbra -> umbra", function() {deepEqual( Stem("umbra"), "umbra");});
test("umbrar -> umbrar", function() {deepEqual( Stem("umbrar"), "umbrar");});
test("umbrarul -> umbrar", function() {deepEqual( Stem("umbrarul"), "umbrar");});
test("umbră -> umbră", function() {deepEqual( Stem("umbră"), "umbră");});
test("umbre -> umbre", function() {deepEqual( Stem("umbre"), "umbre");});
test("umbrela -> umbrel", function() {deepEqual( Stem("umbrela"), "umbrel");});
test("umbrelă -> umbrel", function() {deepEqual( Stem("umbrelă"), "umbrel");});
test("umbrele -> umbre", function() {deepEqual( Stem("umbrele"), "umbre");});
test("umbreluţa -> umbreluţ", function() {deepEqual( Stem("umbreluţa"), "umbreluţ");});
test("umbreluţă -> umbreluţ", function() {deepEqual( Stem("umbreluţă"), "umbreluţ");});
test("umbrit -> umbrit", function() {deepEqual( Stem("umbrit"), "umbrit");});
test("umbrită -> umbrit", function() {deepEqual( Stem("umbrită"), "umbrit");});
test("umbroase -> umbroas", function() {deepEqual( Stem("umbroase"), "umbroas");});
test("umed -> umed", function() {deepEqual( Stem("umed"), "umed");});
test("umedă -> umed", function() {deepEqual( Stem("umedă"), "umed");});
test("umede -> umed", function() {deepEqual( Stem("umede"), "umed");});
test("umeri -> umer", function() {deepEqual( Stem("umeri"), "umer");});
test("umerii -> umer", function() {deepEqual( Stem("umerii"), "umer");});
test("umezeala -> umezeal", function() {deepEqual( Stem("umezeala"), "umezeal");});
test("umezeală -> umezeal", function() {deepEqual( Stem("umezeală"), "umezeal");});
test("umezi -> umez", function() {deepEqual( Stem("umezi"), "umez");});
test("umflate -> umflat", function() {deepEqual( Stem("umflate"), "umflat");});
test("umflă -> umflă", function() {deepEqual( Stem("umflă"), "umflă");});
test("umilească -> umil", function() {deepEqual( Stem("umilească"), "umil");});
test("umilesc -> umil", function() {deepEqual( Stem("umilesc"), "umil");});
test("umileşte -> umil", function() {deepEqual( Stem("umileşte"), "umil");});
test("umilinţă -> umilinţ", function() {deepEqual( Stem("umilinţă"), "umilinţ");});
test("umilinţe -> umilinţ", function() {deepEqual( Stem("umilinţe"), "umilinţ");});
test("umilit -> umil", function() {deepEqual( Stem("umilit"), "umil");});
test("umilită -> umil", function() {deepEqual( Stem("umilită"), "umil");});
test("umilitoare -> umil", function() {deepEqual( Stem("umilitoare"), "umil");});
test("umilitor -> umil", function() {deepEqual( Stem("umilitor"), "umil");});
test("umorul -> umor", function() {deepEqual( Stem("umorul"), "umor");});
test("umplând -> umplând", function() {deepEqual( Stem("umplând"), "umplând");});
test("umplându -> umplându", function() {deepEqual( Stem("umplându"), "umplându");});
test("umple -> umple", function() {deepEqual( Stem("umple"), "umple");});
test("umplea -> umple", function() {deepEqual( Stem("umplea"), "umple");});
test("umpleau -> umpleau", function() {deepEqual( Stem("umpleau"), "umpleau");});
test("umplut -> umplut", function() {deepEqual( Stem("umplut"), "umplut");});
test("umpluţi -> umpluţ", function() {deepEqual( Stem("umpluţi"), "umpluţ");});
test("un -> un", function() {deepEqual( Stem("un"), "un");});
test("una -> una", function() {deepEqual( Stem("una"), "una");});
test("unchi -> unchi", function() {deepEqual( Stem("unchi"), "unchi");});
test("unchiaş -> unchiaş", function() {deepEqual( Stem("unchiaş"), "unchiaş");});
test("unchiaşul -> unchiaş", function() {deepEqual( Stem("unchiaşul"), "unchiaş");});
test("unchiaşului -> unchiaş", function() {deepEqual( Stem("unchiaşului"), "unchiaş");});
test("unchiu -> unchiu", function() {deepEqual( Stem("unchiu"), "unchiu");});
test("unchiul -> unchi", function() {deepEqual( Stem("unchiul"), "unchi");});
test("unchiule -> unchiul", function() {deepEqual( Stem("unchiule"), "unchiul");});
test("unchiului -> unchi", function() {deepEqual( Stem("unchiului"), "unchi");});
test("und -> und", function() {deepEqual( Stem("und"), "und");});
test("unda -> unda", function() {deepEqual( Stem("unda"), "unda");});
test("undă -> undă", function() {deepEqual( Stem("undă"), "undă");});
test("unde -> unde", function() {deepEqual( Stem("unde"), "unde");});
test("undeva -> undev", function() {deepEqual( Stem("undeva"), "undev");});
test("unduit -> unduit", function() {deepEqual( Stem("unduit"), "unduit");});
test("une -> une", function() {deepEqual( Stem("une"), "une");});
test("unei -> une", function() {deepEqual( Stem("unei"), "une");});
test("uneia -> unei", function() {deepEqual( Stem("uneia"), "unei");});
test("unele -> une", function() {deepEqual( Stem("unele"), "une");});
test("uneori -> uneor", function() {deepEqual( Stem("uneori"), "uneor");});
test("unghia -> unghi", function() {deepEqual( Stem("unghia"), "unghi");});
test("unghiile -> unghi", function() {deepEqual( Stem("unghiile"), "unghi");});
test("unghiul -> unghi", function() {deepEqual( Stem("unghiul"), "unghi");});
test("unghiuri -> unghiur", function() {deepEqual( Stem("unghiuri"), "unghiur");});
test("unghiurilor -> unghiur", function() {deepEqual( Stem("unghiurilor"), "unghiur");});
test("ungur -> ungur", function() {deepEqual( Stem("ungur"), "ungur");});
test("ungurească -> ungur", function() {deepEqual( Stem("ungurească"), "ungur");});
test("ungureşti -> ungur", function() {deepEqual( Stem("ungureşti"), "ungur");});
test("unguri -> ungur", function() {deepEqual( Stem("unguri"), "ungur");});
test("ungurii -> ungur", function() {deepEqual( Stem("ungurii"), "ungur");});
test("ungurilor -> ungur", function() {deepEqual( Stem("ungurilor"), "ungur");});
test("ungurul -> ungur", function() {deepEqual( Stem("ungurul"), "ungur");});
test("uni -> uni", function() {deepEqual( Stem("uni"), "uni");});
test("unic -> unic", function() {deepEqual( Stem("unic"), "unic");});
test("unică -> unic", function() {deepEqual( Stem("unică"), "unic");});
test("unice -> unic", function() {deepEqual( Stem("unice"), "unic");});
test("unidimensional -> unidimensional", function() {deepEqual( Stem("unidimensional"), "unidimensional");});
test("unidimensională -> unidimensional", function() {deepEqual( Stem("unidimensională"), "unidimensional");});
test("unifică -> unif", function() {deepEqual( Stem("unifică"), "unif");});
test("uniform -> uniform", function() {deepEqual( Stem("uniform"), "uniform");});
test("uniforma -> uniform", function() {deepEqual( Stem("uniforma"), "uniform");});
test("uniformă -> uniform", function() {deepEqual( Stem("uniformă"), "uniform");});
test("uniforme -> uniform", function() {deepEqual( Stem("uniforme"), "uniform");});
test("uniformele -> uniform", function() {deepEqual( Stem("uniformele"), "uniform");});
test("uniformitate -> uniform", function() {deepEqual( Stem("uniformitate"), "uniform");});
test("uniformitatea -> uniform", function() {deepEqual( Stem("uniformitatea"), "uniform");});
test("uniformităţi -> uniform", function() {deepEqual( Stem("uniformităţi"), "uniform");});
test("uniformităţii -> uniform", function() {deepEqual( Stem("uniformităţii"), "uniform");});
test("unii -> uni", function() {deepEqual( Stem("unii"), "uni");});
test("unilaterală -> unilateral", function() {deepEqual( Stem("unilaterală"), "unilateral");});
test("unilaterale -> unilateral", function() {deepEqual( Stem("unilaterale"), "unilateral");});
test("unilineară -> unilinear", function() {deepEqual( Stem("unilineară"), "unilinear");});
test("uniliniară -> uniliniar", function() {deepEqual( Stem("uniliniară"), "uniliniar");});
test("unirea -> unir", function() {deepEqual( Stem("unirea"), "unir");});
test("unitar -> unitar", function() {deepEqual( Stem("unitar"), "unitar");});
test("unitate -> unitat", function() {deepEqual( Stem("unitate"), "unitat");});
test("unitatea -> unitat", function() {deepEqual( Stem("unitatea"), "unitat");});
test("unităţi -> unităţ", function() {deepEqual( Stem("unităţi"), "unităţ");});
test("unităţii -> unităţ", function() {deepEqual( Stem("unităţii"), "unităţ");});
test("unităţile -> unităţ", function() {deepEqual( Stem("unităţile"), "unităţ");});
test("uniţi -> uniţ", function() {deepEqual( Stem("uniţi"), "uniţ");});
test("univers -> univers", function() {deepEqual( Stem("univers"), "univers");});
test("universală -> universal", function() {deepEqual( Stem("universală"), "universal");});
test("universale -> universal", function() {deepEqual( Stem("universale"), "universal");});
test("universalitate -> universal", function() {deepEqual( Stem("universalitate"), "universal");});
test("universalitatea -> universal", function() {deepEqual( Stem("universalitatea"), "universal");});
test("universalităţii -> universal", function() {deepEqual( Stem("universalităţii"), "universal");});
test("universitar -> universitar", function() {deepEqual( Stem("universitar"), "universitar");});
test("universitate -> univers", function() {deepEqual( Stem("universitate"), "univers");});
test("universitatea -> univers", function() {deepEqual( Stem("universitatea"), "univers");});
test("universităţii -> univers", function() {deepEqual( Stem("universităţii"), "univers");});
test("universul -> univers", function() {deepEqual( Stem("universul"), "univers");});
test("universului -> univers", function() {deepEqual( Stem("universului"), "univers");});
test("univoc -> univoc", function() {deepEqual( Stem("univoc"), "univoc");});
test("univocitatea -> univoc", function() {deepEqual( Stem("univocitatea"), "univoc");});
test("unor -> unor", function() {deepEqual( Stem("unor"), "unor");});
test("unora -> unor", function() {deepEqual( Stem("unora"), "unor");});
test("unsprezece -> unsprezec", function() {deepEqual( Stem("unsprezece"), "unsprezec");});
test("unsuroşi -> unsur", function() {deepEqual( Stem("unsuroşi"), "unsur");});
test("untărofiţeri -> untărofiţer", function() {deepEqual( Stem("untărofiţeri"), "untărofiţer");});
test("untdelemnul -> untdelemn", function() {deepEqual( Stem("untdelemnul"), "untdelemn");});
test("unter -> unter", function() {deepEqual( Stem("unter"), "unter");});
test("untul -> unt", function() {deepEqual( Stem("untul"), "unt");});
test("untură -> untur", function() {deepEqual( Stem("untură"), "untur");});
test("unu -> unu", function() {deepEqual( Stem("unu"), "unu");});
test("unui -> unu", function() {deepEqual( Stem("unui"), "unu");});
test("unuia -> unui", function() {deepEqual( Stem("unuia"), "unui");});
test("unul -> un", function() {deepEqual( Stem("unul"), "un");});
test("ura -> ura", function() {deepEqual( Stem("ura"), "ura");});
test("uragan -> uragan", function() {deepEqual( Stem("uragan"), "uragan");});
test("uragane -> uragan", function() {deepEqual( Stem("uragane"), "uragan");});
test("uraganul -> uragan", function() {deepEqual( Stem("uraganul"), "uragan");});
test("uraganului -> uragan", function() {deepEqual( Stem("uraganului"), "uragan");});
test("urale -> ural", function() {deepEqual( Stem("urale"), "ural");});
test("uranus -> uranus", function() {deepEqual( Stem("uranus"), "uranus");});
test("urâciunea -> urâciun", function() {deepEqual( Stem("urâciunea"), "urâciun");});
test("urâciuni -> urâciun", function() {deepEqual( Stem("urâciuni"), "urâciun");});
test("urât -> urât", function() {deepEqual( Stem("urât"), "urât");});
test("urâtă -> urât", function() {deepEqual( Stem("urâtă"), "urât");});
test("urâţi -> urâţ", function() {deepEqual( Stem("urâţi"), "urâţ");});
test("urâţică -> urâţ", function() {deepEqual( Stem("urâţică"), "urâţ");});
test("ură -> ură", function() {deepEqual( Stem("ură"), "ură");});
test("urări -> urăr", function() {deepEqual( Stem("urări"), "urăr");});
test("urbană -> urban", function() {deepEqual( Stem("urbană"), "urban");});
test("urbane -> urban", function() {deepEqual( Stem("urbane"), "urban");});
test("urbea -> urbe", function() {deepEqual( Stem("urbea"), "urbe");});
test("urbei -> urbe", function() {deepEqual( Stem("urbei"), "urbe");});
test("urc -> urc", function() {deepEqual( Stem("urc"), "urc");});
test("urca -> urca", function() {deepEqual( Stem("urca"), "urca");});
test("urcam -> urcam", function() {deepEqual( Stem("urcam"), "urcam");});
test("urcarea -> urcar", function() {deepEqual( Stem("urcarea"), "urcar");});
test("urcat -> urcat", function() {deepEqual( Stem("urcat"), "urcat");});
test("urcată -> urcat", function() {deepEqual( Stem("urcată"), "urcat");});
test("urcate -> urcat", function() {deepEqual( Stem("urcate"), "urcat");});
test("urcaţi -> urcaţ", function() {deepEqual( Stem("urcaţi"), "urcaţ");});
test("urcau -> urcau", function() {deepEqual( Stem("urcau"), "urcau");});
test("urcând -> urcând", function() {deepEqual( Stem("urcând"), "urcând");});
test("urcă -> urcă", function() {deepEqual( Stem("urcă"), "urcă");});
test("urcăm -> urcăm", function() {deepEqual( Stem("urcăm"), "urcăm");});
test("urce -> urce", function() {deepEqual( Stem("urce"), "urce");});
test("urcuş -> urcuş", function() {deepEqual( Stem("urcuş"), "urcuş");});
test("urcuşul -> urcuş", function() {deepEqual( Stem("urcuşul"), "urcuş");});
test("ureche -> urech", function() {deepEqual( Stem("ureche"), "urech");});
test("urechea -> urech", function() {deepEqual( Stem("urechea"), "urech");});
test("urecheat -> urech", function() {deepEqual( Stem("urecheat"), "urech");});
test("urechi -> urech", function() {deepEqual( Stem("urechi"), "urech");});
test("urechii -> urech", function() {deepEqual( Stem("urechii"), "urech");});
test("urechile -> urech", function() {deepEqual( Stem("urechile"), "urech");});
test("urechiuşe -> urechiuş", function() {deepEqual( Stem("urechiuşe"), "urechiuş");});
test("uremie -> urem", function() {deepEqual( Stem("uremie"), "urem");});
test("urgent -> urgent", function() {deepEqual( Stem("urgent"), "urgent");});
test("uri -> uri", function() {deepEqual( Stem("uri"), "uri");});
test("uriaş -> uriaş", function() {deepEqual( Stem("uriaş"), "uriaş");});
test("uriaşă -> uriaş", function() {deepEqual( Stem("uriaşă"), "uriaş");});
test("uriaşe -> uriaş", function() {deepEqual( Stem("uriaşe"), "uriaş");});
test("uriaşi -> uriaş", function() {deepEqual( Stem("uriaşi"), "uriaş");});
test("urlam -> urlam", function() {deepEqual( Stem("urlam"), "urlam");});
test("urlat -> urlat", function() {deepEqual( Stem("urlat"), "urlat");});
test("urlând -> urlând", function() {deepEqual( Stem("urlând"), "urlând");});
test("urlându -> urlându", function() {deepEqual( Stem("urlându"), "urlându");});
test("urlă -> urlă", function() {deepEqual( Stem("urlă"), "urlă");});
test("urlător -> urlat", function() {deepEqual( Stem("urlător"), "urlat");});
test("urle -> urle", function() {deepEqual( Stem("urle"), "urle");});
test("urlet -> urlet", function() {deepEqual( Stem("urlet"), "urlet");});
test("urlete -> urlet", function() {deepEqual( Stem("urlete"), "urlet");});
test("urletele -> urlet", function() {deepEqual( Stem("urletele"), "urlet");});
test("urletul -> urlet", function() {deepEqual( Stem("urletul"), "urlet");});
test("urlu -> urlu", function() {deepEqual( Stem("urlu"), "urlu");});
test("urma -> urma", function() {deepEqual( Stem("urma"), "urma");});
test("urmare -> urmar", function() {deepEqual( Stem("urmare"), "urmar");});
test("urmarea -> urmar", function() {deepEqual( Stem("urmarea"), "urmar");});
test("urmaşii -> urmaş", function() {deepEqual( Stem("urmaşii"), "urmaş");});
test("urmat -> urmat", function() {deepEqual( Stem("urmat"), "urmat");});
test("urmată -> urmat", function() {deepEqual( Stem("urmată"), "urmat");});
test("urmate -> urmat", function() {deepEqual( Stem("urmate"), "urmat");});
test("urmând -> urmând", function() {deepEqual( Stem("urmând"), "urmând");});
test("urmă -> urmă", function() {deepEqual( Stem("urmă"), "urmă");});
test("urmăm -> urmăm", function() {deepEqual( Stem("urmăm"), "urmăm");});
test("urmărea -> urmăr", function() {deepEqual( Stem("urmărea"), "urmăr");});
test("urmărească -> urmăr", function() {deepEqual( Stem("urmărească"), "urmăr");});
test("urmăreau -> urmăr", function() {deepEqual( Stem("urmăreau"), "urmăr");});
test("urmăresc -> urmăr", function() {deepEqual( Stem("urmăresc"), "urmăr");});
test("urmăreşte -> urmăr", function() {deepEqual( Stem("urmăreşte"), "urmăr");});
test("urmări -> urmăr", function() {deepEqual( Stem("urmări"), "urmăr");});
test("urmărim -> urmăr", function() {deepEqual( Stem("urmărim"), "urmăr");});
test("urmărind -> urmăr", function() {deepEqual( Stem("urmărind"), "urmăr");});
test("urmărindu -> urmăr", function() {deepEqual( Stem("urmărindu"), "urmăr");});
test("urmărirea -> urmăr", function() {deepEqual( Stem("urmărirea"), "urmăr");});
test("urmăririi -> urmărir", function() {deepEqual( Stem("urmăririi"), "urmărir");});
test("urmărit -> urmăr", function() {deepEqual( Stem("urmărit"), "urmăr");});
test("urmăriţi -> urmăr", function() {deepEqual( Stem("urmăriţi"), "urmăr");});
test("următoare -> urmat", function() {deepEqual( Stem("următoare"), "urmat");});
test("următoarele -> urmat", function() {deepEqual( Stem("următoarele"), "urmat");});
test("următor -> urmat", function() {deepEqual( Stem("următor"), "urmat");});
test("următori -> urmat", function() {deepEqual( Stem("următori"), "urmat");});
test("următorul -> urmat", function() {deepEqual( Stem("următorul"), "urmat");});
test("urme -> urme", function() {deepEqual( Stem("urme"), "urme");});
test("urmează -> urmeaz", function() {deepEqual( Stem("urmează"), "urmeaz");});
test("urmei -> urme", function() {deepEqual( Stem("urmei"), "urme");});
test("urmele -> urme", function() {deepEqual( Stem("urmele"), "urme");});
test("urmelor -> urme", function() {deepEqual( Stem("urmelor"), "urme");});
test("urmeze -> urmez", function() {deepEqual( Stem("urmeze"), "urmez");});
test("urs -> urs", function() {deepEqual( Stem("urs"), "urs");});
test("ursuz -> ursuz", function() {deepEqual( Stem("ursuz"), "ursuz");});
test("urşi -> urşi", function() {deepEqual( Stem("urşi"), "urşi");});
test("uruială -> uruial", function() {deepEqual( Stem("uruială"), "uruial");});
test("uruie -> urui", function() {deepEqual( Stem("uruie"), "urui");});
test("uruind -> uruind", function() {deepEqual( Stem("uruind"), "uruind");});
test("uruit -> uruit", function() {deepEqual( Stem("uruit"), "uruit");});
test("uruitul -> uruit", function() {deepEqual( Stem("uruitul"), "uruit");});
test("urzeala -> urzeal", function() {deepEqual( Stem("urzeala"), "urzeal");});
test("uscase -> usca", function() {deepEqual( Stem("uscase"), "usca");});
test("uscat -> uscat", function() {deepEqual( Stem("uscat"), "uscat");});
test("uscată -> uscat", function() {deepEqual( Stem("uscată"), "uscat");});
test("uscate -> uscat", function() {deepEqual( Stem("uscate"), "uscat");});
test("uscaţi -> uscaţ", function() {deepEqual( Stem("uscaţi"), "uscaţ");});
test("usturătoare -> ustur", function() {deepEqual( Stem("usturătoare"), "ustur");});
test("usuc -> usuc", function() {deepEqual( Stem("usuc"), "usuc");});
test("usucă -> usuc", function() {deepEqual( Stem("usucă"), "usuc");});
test("uşa -> uşa", function() {deepEqual( Stem("uşa"), "uşa");});
test("uşă -> uşă", function() {deepEqual( Stem("uşă"), "uşă");});
test("uşile -> uşi", function() {deepEqual( Stem("uşile"), "uşi");});
test("uşoară -> uşoar", function() {deepEqual( Stem("uşoară"), "uşoar");});
test("uşoare -> uşoar", function() {deepEqual( Stem("uşoare"), "uşoar");});
test("uşor -> uşor", function() {deepEqual( Stem("uşor"), "uşor");});
test("uşori -> uşor", function() {deepEqual( Stem("uşori"), "uşor");});
test("uşurare -> uşur", function() {deepEqual( Stem("uşurare"), "uşur");});
test("uşurat -> uşur", function() {deepEqual( Stem("uşurat"), "uşur");});
test("uşuratic -> uşurat", function() {deepEqual( Stem("uşuratic"), "uşurat");});
test("uşuraţi -> uşur", function() {deepEqual( Stem("uşuraţi"), "uşur");});
test("uşurinţa -> uşurinţ", function() {deepEqual( Stem("uşurinţa"), "uşurinţ");});
test("uşurinţă -> uşurinţ", function() {deepEqual( Stem("uşurinţă"), "uşurinţ");});
test("ut -> ut", function() {deepEqual( Stem("ut"), "ut");});
test("utilă -> util", function() {deepEqual( Stem("utilă"), "util");});
test("utile -> uti", function() {deepEqual( Stem("utile"), "uti");});
test("utilitate -> util", function() {deepEqual( Stem("utilitate"), "util");});
test("utilitatea -> util", function() {deepEqual( Stem("utilitatea"), "util");});
test("utopia -> utop", function() {deepEqual( Stem("utopia"), "utop");});
test("utopii -> utop", function() {deepEqual( Stem("utopii"), "utop");});
test("uvrieri -> uvrier", function() {deepEqual( Stem("uvrieri"), "uvrier");});
test("uvrierilor -> uvrier", function() {deepEqual( Stem("uvrierilor"), "uvrier");});
test("uza -> uza", function() {deepEqual( Stem("uza"), "uza");});
test("uzat -> uzat", function() {deepEqual( Stem("uzat"), "uzat");});
test("uzi -> uzi", function() {deepEqual( Stem("uzi"), "uzi");});
test("uzina -> uzin", function() {deepEqual( Stem("uzina"), "uzin");});
test("uzină -> uzin", function() {deepEqual( Stem("uzină"), "uzin");});
test("uzinei -> uzine", function() {deepEqual( Stem("uzinei"), "uzine");});
test("uzul -> uz", function() {deepEqual( Stem("uzul"), "uz");});
test("uzurpare -> uzurp", function() {deepEqual( Stem("uzurpare"), "uzurp");});
test("v -> v", function() {deepEqual( Stem("v"), "v");});
test("va -> va", function() {deepEqual( Stem("va"), "va");});
test("vacanţă -> vacanţ", function() {deepEqual( Stem("vacanţă"), "vacanţ");});
test("vacă -> vac", function() {deepEqual( Stem("vacă"), "vac");});
test("vad -> vad", function() {deepEqual( Stem("vad"), "vad");});
test("vadă -> vad", function() {deepEqual( Stem("vadă"), "vad");});
test("vadul -> vad", function() {deepEqual( Stem("vadul"), "vad");});
test("vag -> vag", function() {deepEqual( Stem("vag"), "vag");});
test("vagabonzi -> vagabonz", function() {deepEqual( Stem("vagabonzi"), "vagabonz");});
test("vagă -> vag", function() {deepEqual( Stem("vagă"), "vag");});
test("vagi -> vag", function() {deepEqual( Stem("vagi"), "vag");});
test("vagoane -> vagoan", function() {deepEqual( Stem("vagoane"), "vagoan");});
test("vagoanele -> vagoan", function() {deepEqual( Stem("vagoanele"), "vagoan");});
test("vagon -> vagon", function() {deepEqual( Stem("vagon"), "vagon");});
test("vagonete -> vagonet", function() {deepEqual( Stem("vagonete"), "vagonet");});
test("vagonul -> vagon", function() {deepEqual( Stem("vagonul"), "vagon");});
test("vagonului -> vagon", function() {deepEqual( Stem("vagonului"), "vagon");});
test("vai -> vai", function() {deepEqual( Stem("vai"), "vai");});
test("vaietă -> vaiet", function() {deepEqual( Stem("vaietă"), "vaiet");});
test("vaiete -> vaiet", function() {deepEqual( Stem("vaiete"), "vaiet");});
test("vaită -> vait", function() {deepEqual( Stem("vaită"), "vait");});
test("vajnici -> vajnic", function() {deepEqual( Stem("vajnici"), "vajnic");});
test("val -> val", function() {deepEqual( Stem("val"), "val");});
test("valabil -> valabil", function() {deepEqual( Stem("valabil"), "valabil");});
test("valabilă -> valabil", function() {deepEqual( Stem("valabilă"), "valabil");});
test("valabile -> valabil", function() {deepEqual( Stem("valabile"), "valabil");});
test("valabilitate -> valabil", function() {deepEqual( Stem("valabilitate"), "valabil");});
test("valabilitatea -> valabil", function() {deepEqual( Stem("valabilitatea"), "valabil");});
test("valabilităţii -> valabil", function() {deepEqual( Stem("valabilităţii"), "valabil");});
test("valah -> valah", function() {deepEqual( Stem("valah"), "valah");});
test("valahia -> valah", function() {deepEqual( Stem("valahia"), "valah");});
test("vale -> val", function() {deepEqual( Stem("vale"), "val");});
test("valea -> val", function() {deepEqual( Stem("valea"), "val");});
test("valentin -> valentin", function() {deepEqual( Stem("valentin"), "valentin");});
test("valenţe -> valenţ", function() {deepEqual( Stem("valenţe"), "valenţ");});
test("valenţelor -> valenţ", function() {deepEqual( Stem("valenţelor"), "valenţ");});
test("valeriu -> valeriu", function() {deepEqual( Stem("valeriu"), "valeriu");});
test("valery -> valery", function() {deepEqual( Stem("valery"), "valery");});
test("valet -> valet", function() {deepEqual( Stem("valet"), "valet");});
test("valid -> valid", function() {deepEqual( Stem("valid"), "valid");});
test("valida -> valid", function() {deepEqual( Stem("valida"), "valid");});
test("validare -> valid", function() {deepEqual( Stem("validare"), "valid");});
test("validareaen -> validareaen", function() {deepEqual( Stem("validareaen"), "validareaen");});
test("validau -> valid", function() {deepEqual( Stem("validau"), "valid");});
test("validă -> valid", function() {deepEqual( Stem("validă"), "valid");});
test("validării -> validăr", function() {deepEqual( Stem("validării"), "validăr");});
test("valideaza -> valideaz", function() {deepEqual( Stem("valideaza"), "valideaz");});
test("validen -> validen", function() {deepEqual( Stem("validen"), "validen");});
test("validitate -> valid", function() {deepEqual( Stem("validitate"), "valid");});
test("validităţii -> valid", function() {deepEqual( Stem("validităţii"), "valid");});
test("valiză -> valiz", function() {deepEqual( Stem("valiză"), "valiz");});
test("valma -> valm", function() {deepEqual( Stem("valma"), "valm");});
test("valoare -> valoar", function() {deepEqual( Stem("valoare"), "valoar");});
test("valoarea -> valoar", function() {deepEqual( Stem("valoarea"), "valoar");});
test("valon -> valon", function() {deepEqual( Stem("valon"), "valon");});
test("valora -> valor", function() {deepEqual( Stem("valora"), "valor");});
test("valorează -> valor", function() {deepEqual( Stem("valorează"), "valor");});
test("valori -> valor", function() {deepEqual( Stem("valori"), "valor");});
test("valorică -> valor", function() {deepEqual( Stem("valorică"), "valor");});
test("valorific -> valorif", function() {deepEqual( Stem("valorific"), "valorif");});
test("valorifica -> valorif", function() {deepEqual( Stem("valorifica"), "valorif");});
test("valorificare -> valorific", function() {deepEqual( Stem("valorificare"), "valorific");});
test("valorificarea -> valorific", function() {deepEqual( Stem("valorificarea"), "valorific");});
test("valorifică -> valorif", function() {deepEqual( Stem("valorifică"), "valorif");});
test("valorificările -> valorificăr", function() {deepEqual( Stem("valorificările"), "valorificăr");});
test("valorii -> valor", function() {deepEqual( Stem("valorii"), "valor");});
test("valorile -> valor", function() {deepEqual( Stem("valorile"), "valor");});
test("valorilor -> valor", function() {deepEqual( Stem("valorilor"), "valor");});
test("valoros -> valor", function() {deepEqual( Stem("valoros"), "valor");});
test("vals -> vals", function() {deepEqual( Stem("vals"), "vals");});
test("valurile -> valur", function() {deepEqual( Stem("valurile"), "valur");});
test("valută -> valut", function() {deepEqual( Stem("valută"), "valut");});
test("valutelor -> valut", function() {deepEqual( Stem("valutelor"), "valut");});
test("vama -> vam", function() {deepEqual( Stem("vama"), "vam");});
test("vamă -> vam", function() {deepEqual( Stem("vamă"), "vam");});
test("vameşul -> vameş", function() {deepEqual( Stem("vameşul"), "vameş");});
test("vana -> van", function() {deepEqual( Stem("vana"), "van");});
test("vanitate -> vanitat", function() {deepEqual( Stem("vanitate"), "vanitat");});
test("vanitatea -> vanitat", function() {deepEqual( Stem("vanitatea"), "vanitat");});
test("vanităţi -> vanităţ", function() {deepEqual( Stem("vanităţi"), "vanităţ");});
test("vanităţii -> vanităţ", function() {deepEqual( Stem("vanităţii"), "vanităţ");});
test("vanitoase -> vanit", function() {deepEqual( Stem("vanitoase"), "vanit");});
test("vapoarele -> vapoar", function() {deepEqual( Stem("vapoarele"), "vapoar");});
test("vapori -> vapor", function() {deepEqual( Stem("vapori"), "vapor");});
test("var -> var", function() {deepEqual( Stem("var"), "var");});
test("vara -> var", function() {deepEqual( Stem("vara"), "var");});
test("vară -> var", function() {deepEqual( Stem("vară"), "var");});
test("vargă -> varg", function() {deepEqual( Stem("vargă"), "varg");});
test("varia -> vari", function() {deepEqual( Stem("varia"), "vari");});
test("variate -> variat", function() {deepEqual( Stem("variate"), "variat");});
test("variaţia -> variaţ", function() {deepEqual( Stem("variaţia"), "variaţ");});
test("variaţie -> variaţ", function() {deepEqual( Stem("variaţie"), "variaţ");});
test("variaţii -> variaţ", function() {deepEqual( Stem("variaţii"), "variaţ");});
test("varietate -> variet", function() {deepEqual( Stem("varietate"), "variet");});
test("varietatea -> variet", function() {deepEqual( Stem("varietatea"), "variet");});
test("varietăţi -> varietăţ", function() {deepEqual( Stem("varietăţi"), "varietăţ");});
test("varietăţile -> varietăţ", function() {deepEqual( Stem("varietăţile"), "varietăţ");});
test("variez -> variez", function() {deepEqual( Stem("variez"), "variez");});
test("varniţele -> varniţ", function() {deepEqual( Stem("varniţele"), "varniţ");});
test("varosului -> varos", function() {deepEqual( Stem("varosului"), "varos");});
test("varşovia -> varşov", function() {deepEqual( Stem("varşovia"), "varşov");});
test("varul -> var", function() {deepEqual( Stem("varul"), "var");});
test("varză -> varz", function() {deepEqual( Stem("varză"), "varz");});
test("vas -> vas", function() {deepEqual( Stem("vas"), "vas");});
test("vasăzică -> vasăz", function() {deepEqual( Stem("vasăzică"), "vasăz");});
test("vase -> vas", function() {deepEqual( Stem("vase"), "vas");});
test("vasile -> vas", function() {deepEqual( Stem("vasile"), "vas");});
test("vasilescu -> vasilescu", function() {deepEqual( Stem("vasilescu"), "vasilescu");});
test("vasilică -> vasil", function() {deepEqual( Stem("vasilică"), "vasil");});
test("vasiliu -> vasiliu", function() {deepEqual( Stem("vasiliu"), "vasiliu");});
test("vasiliule -> vasiliul", function() {deepEqual( Stem("vasiliule"), "vasiliul");});
test("vaslui -> vasl", function() {deepEqual( Stem("vaslui"), "vasl");});
test("vast -> vast", function() {deepEqual( Stem("vast"), "vast");});
test("vasta -> vast", function() {deepEqual( Stem("vasta"), "vast");});
test("vastă -> vast", function() {deepEqual( Stem("vastă"), "vast");});
test("vaste -> vast", function() {deepEqual( Stem("vaste"), "vast");});
test("vastei -> vaste", function() {deepEqual( Stem("vastei"), "vaste");});
test("vastele -> vast", function() {deepEqual( Stem("vastele"), "vast");});
test("vasu -> vasu", function() {deepEqual( Stem("vasu"), "vasu");});
test("vasul -> vas", function() {deepEqual( Stem("vasul"), "vas");});
test("vată -> vat", function() {deepEqual( Stem("vată"), "vat");});
test("vaterland -> vaterland", function() {deepEqual( Stem("vaterland"), "vaterland");});
test("vatra -> vatr", function() {deepEqual( Stem("vatra"), "vatr");});
test("vatră -> vatr", function() {deepEqual( Stem("vatră"), "vatr");});
test("vază -> vaz", function() {deepEqual( Stem("vază"), "vaz");});
test("vâjâie -> vâjâi", function() {deepEqual( Stem("vâjâie"), "vâjâi");});
test("vâjâind -> vâjâind", function() {deepEqual( Stem("vâjâind"), "vâjâind");});
test("vâjâit -> vâjâit", function() {deepEqual( Stem("vâjâit"), "vâjâit");});
test("vâjâitoare -> vâjâit", function() {deepEqual( Stem("vâjâitoare"), "vâjâit");});
test("vâjâitura -> vâjâitur", function() {deepEqual( Stem("vâjâitura"), "vâjâitur");});
test("vâjâituri -> vâjâitur", function() {deepEqual( Stem("vâjâituri"), "vâjâitur");});
test("vâjâiturile -> vâjâitur", function() {deepEqual( Stem("vâjâiturile"), "vâjâitur");});
test("vâlcea -> vâlc", function() {deepEqual( Stem("vâlcea"), "vâlc");});
test("vâlceaua -> vâlceau", function() {deepEqual( Stem("vâlceaua"), "vâlceau");});
test("vâlceluşa -> vâlceluş", function() {deepEqual( Stem("vâlceluşa"), "vâlceluş");});
test("vâlceluşă -> vâlceluş", function() {deepEqual( Stem("vâlceluşă"), "vâlceluş");});
test("vâlceluşe -> vâlceluş", function() {deepEqual( Stem("vâlceluşe"), "vâlceluş");});
test("vâlceluşei -> vâlceluşe", function() {deepEqual( Stem("vâlceluşei"), "vâlceluşe");});
test("vâlceluşile -> vâlcel", function() {deepEqual( Stem("vâlceluşile"), "vâlcel");});
test("vâlvătăi -> vâlvătă", function() {deepEqual( Stem("vâlvătăi"), "vâlvătă");});
test("vânam -> vânam", function() {deepEqual( Stem("vânam"), "vânam");});
test("vânat -> vânat", function() {deepEqual( Stem("vânat"), "vânat");});
test("vânatul -> vânat", function() {deepEqual( Stem("vânatul"), "vânat");});
test("vânătaia -> vânătai", function() {deepEqual( Stem("vânătaia"), "vânătai");});
test("vânătă -> vânăt", function() {deepEqual( Stem("vânătă"), "vânăt");});
test("vânătoare -> vânat", function() {deepEqual( Stem("vânătoare"), "vânat");});
test("vânător -> vânat", function() {deepEqual( Stem("vânător"), "vânat");});
test("vânători -> vânat", function() {deepEqual( Stem("vânători"), "vânat");});
test("vânătorii -> vânat", function() {deepEqual( Stem("vânătorii"), "vânat");});
test("vând -> vând", function() {deepEqual( Stem("vând"), "vând");});
test("vândut -> vândut", function() {deepEqual( Stem("vândut"), "vândut");});
test("vândute -> vândut", function() {deepEqual( Stem("vândute"), "vândut");});
test("vânează -> vâneaz", function() {deepEqual( Stem("vânează"), "vâneaz");});
test("vâneze -> vânez", function() {deepEqual( Stem("vâneze"), "vânez");});
test("vânjoase -> vânjoas", function() {deepEqual( Stem("vânjoase"), "vânjoas");});
test("vânjos -> vânjos", function() {deepEqual( Stem("vânjos"), "vânjos");});
test("vânt -> vânt", function() {deepEqual( Stem("vânt"), "vânt");});
test("vântul -> vânt", function() {deepEqual( Stem("vântul"), "vânt");});
test("vânzare -> vânz", function() {deepEqual( Stem("vânzare"), "vânz");});
test("vânzolea -> vânzol", function() {deepEqual( Stem("vânzolea"), "vânzol");});
test("vâr -> vâr", function() {deepEqual( Stem("vâr"), "vâr");});
test("vârând -> vârând", function() {deepEqual( Stem("vârând"), "vârând");});
test("vârâte -> vârât", function() {deepEqual( Stem("vârâte"), "vârât");});
test("vâră -> vâr", function() {deepEqual( Stem("vâră"), "vâr");});
test("vâre -> vâr", function() {deepEqual( Stem("vâre"), "vâr");});
test("vârf -> vârf", function() {deepEqual( Stem("vârf"), "vârf");});
test("vârful -> vârf", function() {deepEqual( Stem("vârful"), "vârf");});
test("vârfurile -> vârfur", function() {deepEqual( Stem("vârfurile"), "vârfur");});
test("vârsta -> vârst", function() {deepEqual( Stem("vârsta"), "vârst");});
test("vârstă -> vârst", function() {deepEqual( Stem("vârstă"), "vârst");});
test("vârtos -> vârtos", function() {deepEqual( Stem("vârtos"), "vârtos");});
test("vâslind -> vâsl", function() {deepEqual( Stem("vâslind"), "vâsl");});
test("vă -> vă", function() {deepEqual( Stem("vă"), "vă");});
test("văcăreşti -> văcăr", function() {deepEqual( Stem("văcăreşti"), "văcăr");});
test("văd -> văd", function() {deepEqual( Stem("văd"), "văd");});
test("vădea -> văd", function() {deepEqual( Stem("vădea"), "văd");});
test("vădind -> vădind", function() {deepEqual( Stem("vădind"), "vădind");});
test("vădit -> vădit", function() {deepEqual( Stem("vădit"), "vădit");});
test("vădite -> vădit", function() {deepEqual( Stem("vădite"), "vădit");});
test("văduva -> văduv", function() {deepEqual( Stem("văduva"), "văduv");});
test("văduvă -> văduv", function() {deepEqual( Stem("văduvă"), "văduv");});
test("văi -> văi", function() {deepEqual( Stem("văi"), "văi");});
test("văicărească -> văicăr", function() {deepEqual( Stem("văicărească"), "văicăr");});
test("văicăresc -> văicăr", function() {deepEqual( Stem("văicăresc"), "văicăr");});
test("văii -> văi", function() {deepEqual( Stem("văii"), "văi");});
test("văile -> văil", function() {deepEqual( Stem("văile"), "văil");});
test("văilor -> văilor", function() {deepEqual( Stem("văilor"), "văilor");});
test("văleni -> vălen", function() {deepEqual( Stem("văleni"), "vălen");});
test("vămii -> văm", function() {deepEqual( Stem("vămii"), "văm");});
test("văpaie -> văpai", function() {deepEqual( Stem("văpaie"), "văpai");});
test("văr -> văr", function() {deepEqual( Stem("văr"), "văr");});
test("văraru -> văraru", function() {deepEqual( Stem("văraru"), "văraru");});
test("vărarule -> vărarul", function() {deepEqual( Stem("vărarule"), "vărarul");});
test("văratice -> vărat", function() {deepEqual( Stem("văratice"), "vărat");});
test("vărgată -> vărgat", function() {deepEqual( Stem("vărgată"), "vărgat");});
test("văros -> văros", function() {deepEqual( Stem("văros"), "văros");});
test("vărsat -> vărsat", function() {deepEqual( Stem("vărsat"), "vărsat");});
test("vărsau -> vărs", function() {deepEqual( Stem("vărsau"), "vărs");});
test("vărsându -> vărs", function() {deepEqual( Stem("vărsându"), "vărs");});
test("văru -> văru", function() {deepEqual( Stem("văru"), "văru");});
test("văruită -> văruit", function() {deepEqual( Stem("văruită"), "văruit");});
test("vătămătoare -> vătăm", function() {deepEqual( Stem("vătămătoare"), "vătăm");});
test("văz -> văz", function() {deepEqual( Stem("văz"), "văz");});
test("văzând -> văzând", function() {deepEqual( Stem("văzând"), "văzând");});
test("văzându -> văzându", function() {deepEqual( Stem("văzându"), "văzându");});
test("văzduh -> văzduh", function() {deepEqual( Stem("văzduh"), "văzduh");});
test("văzduhul -> văzduh", function() {deepEqual( Stem("văzduhul"), "văzduh");});
test("văzduhului -> văzduh", function() {deepEqual( Stem("văzduhului"), "văzduh");});
test("văzului -> văz", function() {deepEqual( Stem("văzului"), "văz");});
test("văzuse -> văzus", function() {deepEqual( Stem("văzuse"), "văzus");});
test("văzusem -> văzusem", function() {deepEqual( Stem("văzusem"), "văzusem");});
test("văzuseră -> văzuser", function() {deepEqual( Stem("văzuseră"), "văzuser");});
test("văzut -> văzut", function() {deepEqual( Stem("văzut"), "văzut");});
test("văzută -> văzut", function() {deepEqual( Stem("văzută"), "văzut");});
test("văzute -> văzut", function() {deepEqual( Stem("văzute"), "văzut");});
test("văzuţi -> văzuţ", function() {deepEqual( Stem("văzuţi"), "văzuţ");});
test("veac -> veac", function() {deepEqual( Stem("veac"), "veac");});
test("veacul -> veac", function() {deepEqual( Stem("veacul"), "veac");});
test("veacului -> veac", function() {deepEqual( Stem("veacului"), "veac");});
test("veacuri -> veacur", function() {deepEqual( Stem("veacuri"), "veacur");});
test("veacurile -> veacur", function() {deepEqual( Stem("veacurile"), "veacur");});
test("veacurilor -> veacur", function() {deepEqual( Stem("veacurilor"), "veacur");});
test("veche -> vech", function() {deepEqual( Stem("veche"), "vech");});
test("vechea -> vech", function() {deepEqual( Stem("vechea"), "vech");});
test("vechi -> vech", function() {deepEqual( Stem("vechi"), "vech");});
test("vechii -> vech", function() {deepEqual( Stem("vechii"), "vech");});
test("vechile -> vech", function() {deepEqual( Stem("vechile"), "vech");});
test("vechime -> vechim", function() {deepEqual( Stem("vechime"), "vechim");});
test("vechimea -> vechim", function() {deepEqual( Stem("vechimea"), "vechim");});
test("vechimii -> vechim", function() {deepEqual( Stem("vechimii"), "vechim");});
test("vechiul -> vech", function() {deepEqual( Stem("vechiul"), "vech");});
test("veci -> vec", function() {deepEqual( Stem("veci"), "vec");});
test("vecii -> vec", function() {deepEqual( Stem("vecii"), "vec");});
test("vecilor -> vec", function() {deepEqual( Stem("vecilor"), "vec");});
test("vecin -> vecin", function() {deepEqual( Stem("vecin"), "vecin");});
test("vecina -> vecin", function() {deepEqual( Stem("vecina"), "vecin");});
test("vecină -> vecin", function() {deepEqual( Stem("vecină"), "vecin");});
test("vecine -> vecin", function() {deepEqual( Stem("vecine"), "vecin");});
test("vecinei -> vecine", function() {deepEqual( Stem("vecinei"), "vecine");});
test("vecini -> vecin", function() {deepEqual( Stem("vecini"), "vecin");});
test("vecinii -> vecin", function() {deepEqual( Stem("vecinii"), "vecin");});
test("vecinilor -> vecin", function() {deepEqual( Stem("vecinilor"), "vecin");});
test("vecinul -> vecin", function() {deepEqual( Stem("vecinul"), "vecin");});
test("vecinului -> vecin", function() {deepEqual( Stem("vecinului"), "vecin");});
test("vectori -> vector", function() {deepEqual( Stem("vectori"), "vector");});
test("vede -> ved", function() {deepEqual( Stem("vede"), "ved");});
test("vedea -> ved", function() {deepEqual( Stem("vedea"), "ved");});
test("vedeam -> vedeam", function() {deepEqual( Stem("vedeam"), "vedeam");});
test("vedeau -> vedeau", function() {deepEqual( Stem("vedeau"), "vedeau");});
test("vedem -> ved", function() {deepEqual( Stem("vedem"), "ved");});
test("vedenii -> veden", function() {deepEqual( Stem("vedenii"), "veden");});
test("vedere -> veder", function() {deepEqual( Stem("vedere"), "veder");});
test("vederea -> veder", function() {deepEqual( Stem("vederea"), "veder");});
test("vederi -> veder", function() {deepEqual( Stem("vederi"), "veder");});
test("vederilor -> veder", function() {deepEqual( Stem("vederilor"), "veder");});
test("vedete -> vedet", function() {deepEqual( Stem("vedete"), "vedet");});
test("vedeţi -> ved", function() {deepEqual( Stem("vedeţi"), "ved");});
test("vegetal -> vegetal", function() {deepEqual( Stem("vegetal"), "vegetal");});
test("vegetaţie -> veget", function() {deepEqual( Stem("vegetaţie"), "veget");});
test("veghe -> vegh", function() {deepEqual( Stem("veghe"), "vegh");});
test("vegheaseră -> vegheaser", function() {deepEqual( Stem("vegheaseră"), "vegheaser");});
test("vehementă -> vehement", function() {deepEqual( Stem("vehementă"), "vehement");});
test("vehemenţă -> vehemenţ", function() {deepEqual( Stem("vehemenţă"), "vehemenţ");});
test("vehemenţi -> vehemenţ", function() {deepEqual( Stem("vehemenţi"), "vehemenţ");});
test("vehicule -> vehicul", function() {deepEqual( Stem("vehicule"), "vehicul");});
test("vei -> vei", function() {deepEqual( Stem("vei"), "vei");});
test("velinţe -> velinţ", function() {deepEqual( Stem("velinţe"), "velinţ");});
test("venea -> ven", function() {deepEqual( Stem("venea"), "ven");});
test("veneam -> veneam", function() {deepEqual( Stem("veneam"), "veneam");});
test("veneau -> veneau", function() {deepEqual( Stem("veneau"), "veneau");});
test("venerabila -> vener", function() {deepEqual( Stem("venerabila"), "vener");});
test("veneratul -> vener", function() {deepEqual( Stem("veneratul"), "vener");});
test("venerei -> venere", function() {deepEqual( Stem("venerei"), "venere");});
test("veneţia -> veneţ", function() {deepEqual( Stem("veneţia"), "veneţ");});
test("veni -> ven", function() {deepEqual( Stem("veni"), "ven");});
test("venim -> ven", function() {deepEqual( Stem("venim"), "ven");});
test("venin -> venin", function() {deepEqual( Stem("venin"), "venin");});
test("venind -> venind", function() {deepEqual( Stem("venind"), "venind");});
test("veninoasă -> venin", function() {deepEqual( Stem("veninoasă"), "venin");});
test("veninoase -> venin", function() {deepEqual( Stem("veninoase"), "venin");});
test("venire -> venir", function() {deepEqual( Stem("venire"), "venir");});
test("venirea -> venir", function() {deepEqual( Stem("venirea"), "venir");});
test("venirilor -> venir", function() {deepEqual( Stem("venirilor"), "venir");});
test("venise -> venis", function() {deepEqual( Stem("venise"), "venis");});
test("venit -> venit", function() {deepEqual( Stem("venit"), "venit");});
test("venită -> venit", function() {deepEqual( Stem("venită"), "venit");});
test("venite -> venit", function() {deepEqual( Stem("venite"), "venit");});
test("venituri -> venitur", function() {deepEqual( Stem("venituri"), "venitur");});
test("veniturile -> venitur", function() {deepEqual( Stem("veniturile"), "venitur");});
test("veniţi -> ven", function() {deepEqual( Stem("veniţi"), "ven");});
test("verbal -> verbal", function() {deepEqual( Stem("verbal"), "verbal");});
test("verbală -> verbal", function() {deepEqual( Stem("verbală"), "verbal");});
test("verbale -> verbal", function() {deepEqual( Stem("verbale"), "verbal");});
test("verbali -> verbal", function() {deepEqual( Stem("verbali"), "verbal");});
test("verbalism -> verbalist", function() {deepEqual( Stem("verbalism"), "verbalist");});
test("verbalismul -> verbalist", function() {deepEqual( Stem("verbalismul"), "verbalist");});
test("verbalismului -> verbalist", function() {deepEqual( Stem("verbalismului"), "verbalist");});
test("verbalist -> verbalist", function() {deepEqual( Stem("verbalist"), "verbalist");});
test("verbaliste -> verbalist", function() {deepEqual( Stem("verbaliste"), "verbalist");});
test("verde -> verd", function() {deepEqual( Stem("verde"), "verd");});
test("verdeaţă -> verdeaţ", function() {deepEqual( Stem("verdeaţă"), "verdeaţ");});
test("verdele -> verd", function() {deepEqual( Stem("verdele"), "verd");});
test("verdun -> verdun", function() {deepEqual( Stem("verdun"), "verdun");});
test("verdunul -> verdun", function() {deepEqual( Stem("verdunul"), "verdun");});
test("verifica -> verif", function() {deepEqual( Stem("verifica"), "verif");});
test("verificare -> verific", function() {deepEqual( Stem("verificare"), "verific");});
test("verificarea -> verific", function() {deepEqual( Stem("verificarea"), "verific");});
test("verificat -> verific", function() {deepEqual( Stem("verificat"), "verific");});
test("verificată -> verific", function() {deepEqual( Stem("verificată"), "verific");});
test("verificatoare -> verific", function() {deepEqual( Stem("verificatoare"), "verific");});
test("verifică -> verif", function() {deepEqual( Stem("verifică"), "verif");});
test("verificăm -> verific", function() {deepEqual( Stem("verificăm"), "verific");});
test("verificări -> verificăr", function() {deepEqual( Stem("verificări"), "verificăr");});
test("verifice -> verif", function() {deepEqual( Stem("verifice"), "verif");});
test("verifici -> verif", function() {deepEqual( Stem("verifici"), "verif");});
test("verii -> ver", function() {deepEqual( Stem("verii"), "ver");});
test("verişoară -> verişoar", function() {deepEqual( Stem("verişoară"), "verişoar");});
test("verişoare -> verişoar", function() {deepEqual( Stem("verişoare"), "verişoar");});
test("verlaineiană -> verlaineian", function() {deepEqual( Stem("verlaineiană"), "verlaineian");});
test("verminei -> vermine", function() {deepEqual( Stem("verminei"), "vermine");});
test("vermouth -> vermouth", function() {deepEqual( Stem("vermouth"), "vermouth");});
test("veroase -> veroas", function() {deepEqual( Stem("veroase"), "veroas");});
test("verosimilă -> verosimil", function() {deepEqual( Stem("verosimilă"), "verosimil");});
test("verrier -> verrier", function() {deepEqual( Stem("verrier"), "verrier");});
test("versailles -> versailles", function() {deepEqual( Stem("versailles"), "versailles");});
test("versuri -> versur", function() {deepEqual( Stem("versuri"), "versur");});
test("versurile -> versur", function() {deepEqual( Stem("versurile"), "versur");});
test("vertiginoasă -> vertigin", function() {deepEqual( Stem("vertiginoasă"), "vertigin");});
test("vertiginoase -> vertigin", function() {deepEqual( Stem("vertiginoase"), "vertigin");});
test("vervă -> verv", function() {deepEqual( Stem("vervă"), "verv");});
test("very -> very", function() {deepEqual( Stem("very"), "very");});
test("verzi -> verz", function() {deepEqual( Stem("verzi"), "verz");});
test("verzui -> verz", function() {deepEqual( Stem("verzui"), "verz");});
test("verzuie -> verzui", function() {deepEqual( Stem("verzuie"), "verzui");});
test("vesel -> vesel", function() {deepEqual( Stem("vesel"), "vesel");});
test("veselă -> vesel", function() {deepEqual( Stem("veselă"), "vesel");});
test("vesele -> ves", function() {deepEqual( Stem("vesele"), "ves");});
test("veseli -> vesel", function() {deepEqual( Stem("veseli"), "vesel");});
test("veselia -> vesel", function() {deepEqual( Stem("veselia"), "vesel");});
test("veselie -> vesel", function() {deepEqual( Stem("veselie"), "vesel");});
test("vest -> vest", function() {deepEqual( Stem("vest"), "vest");});
test("veste -> vest", function() {deepEqual( Stem("veste"), "vest");});
test("vestea -> vest", function() {deepEqual( Stem("vestea"), "vest");});
test("vestei -> veste", function() {deepEqual( Stem("vestei"), "veste");});
test("vesteji -> vestej", function() {deepEqual( Stem("vesteji"), "vestej");});
test("vestesc -> vest", function() {deepEqual( Stem("vestesc"), "vest");});
test("vestit -> vestit", function() {deepEqual( Stem("vestit"), "vestit");});
test("vestită -> vestit", function() {deepEqual( Stem("vestită"), "vestit");});
test("vestite -> vestit", function() {deepEqual( Stem("vestite"), "vestit");});
test("vestitul -> vestit", function() {deepEqual( Stem("vestitul"), "vestit");});
test("vestoane -> vestoan", function() {deepEqual( Stem("vestoane"), "vestoan");});
test("veston -> veston", function() {deepEqual( Stem("veston"), "veston");});
test("vestonul -> veston", function() {deepEqual( Stem("vestonul"), "veston");});
test("vestonului -> veston", function() {deepEqual( Stem("vestonului"), "veston");});
test("veşnic -> veşnic", function() {deepEqual( Stem("veşnic"), "veşnic");});
test("veşnică -> veşnic", function() {deepEqual( Stem("veşnică"), "veşnic");});
test("veşnice -> veşnic", function() {deepEqual( Stem("veşnice"), "veşnic");});
test("veşnicia -> veşnic", function() {deepEqual( Stem("veşnicia"), "veşnic");});
test("veşnicie -> veşnic", function() {deepEqual( Stem("veşnicie"), "veşnic");});
test("veşniciei -> veşnic", function() {deepEqual( Stem("veşniciei"), "veşnic");});
test("veşnicii -> veşnic", function() {deepEqual( Stem("veşnicii"), "veşnic");});
test("veştejitului -> veştej", function() {deepEqual( Stem("veştejitului"), "veştej");});
test("veşti -> veşt", function() {deepEqual( Stem("veşti"), "veşt");});
test("veştile -> veşt", function() {deepEqual( Stem("veştile"), "veşt");});
test("veţi -> veţ", function() {deepEqual( Stem("veţi"), "veţ");});
test("vezi -> vez", function() {deepEqual( Stem("vezi"), "vez");});
test("vi -> vi", function() {deepEqual( Stem("vi"), "vi");});
test("via -> via", function() {deepEqual( Stem("via"), "via");});
test("viaţa -> viaţ", function() {deepEqual( Stem("viaţa"), "viaţ");});
test("viaţă -> viaţ", function() {deepEqual( Stem("viaţă"), "viaţ");});
test("viceversa -> vicevers", function() {deepEqual( Stem("viceversa"), "vicevers");});
test("vicioasă -> vicioas", function() {deepEqual( Stem("vicioasă"), "vicioas");});
test("viclean -> viclean", function() {deepEqual( Stem("viclean"), "viclean");});
test("vicleană -> viclean", function() {deepEqual( Stem("vicleană"), "viclean");});
test("vicleniile -> viclen", function() {deepEqual( Stem("vicleniile"), "viclen");});
test("vicleşug -> vicleşug", function() {deepEqual( Stem("vicleşug"), "vicleşug");});
test("victima -> victim", function() {deepEqual( Stem("victima"), "victim");});
test("victimă -> victim", function() {deepEqual( Stem("victimă"), "victim");});
test("victime -> victim", function() {deepEqual( Stem("victime"), "victim");});
test("victimei -> victime", function() {deepEqual( Stem("victimei"), "victime");});
test("victimele -> victim", function() {deepEqual( Stem("victimele"), "victim");});
test("victimelor -> victim", function() {deepEqual( Stem("victimelor"), "victim");});
test("victimizarea -> victimiz", function() {deepEqual( Stem("victimizarea"), "victimiz");});
test("victimizării -> victimizăr", function() {deepEqual( Stem("victimizării"), "victimizăr");});
test("victor -> victor", function() {deepEqual( Stem("victor"), "victor");});
test("victoria -> victor", function() {deepEqual( Stem("victoria"), "victor");});
test("victoriei -> victor", function() {deepEqual( Stem("victoriei"), "victor");});
test("victoriene -> victorien", function() {deepEqual( Stem("victoriene"), "victorien");});
test("victorii -> victor", function() {deepEqual( Stem("victorii"), "victor");});
test("victorioasă -> victor", function() {deepEqual( Stem("victorioasă"), "victor");});
test("victorioase -> victor", function() {deepEqual( Stem("victorioase"), "victor");});
test("victorios -> victor", function() {deepEqual( Stem("victorios"), "victor");});
test("victorioşi -> victor", function() {deepEqual( Stem("victorioşi"), "victor");});
test("vid -> vid", function() {deepEqual( Stem("vid"), "vid");});
test("vidă -> vid", function() {deepEqual( Stem("vidă"), "vid");});
test("video -> video", function() {deepEqual( Stem("video"), "video");});
test("vie -> vie", function() {deepEqual( Stem("vie"), "vie");});
test("viena -> vien", function() {deepEqual( Stem("viena"), "vien");});
test("vienez -> vien", function() {deepEqual( Stem("vienez"), "vien");});
test("vieneză -> vienez", function() {deepEqual( Stem("vieneză"), "vienez");});
test("vier -> vier", function() {deepEqual( Stem("vier"), "vier");});
test("vierme -> vierm", function() {deepEqual( Stem("vierme"), "vierm");});
test("viermuielii -> viermuiel", function() {deepEqual( Stem("viermuielii"), "viermuiel");});
test("viermuire -> viermu", function() {deepEqual( Stem("viermuire"), "viermu");});
test("viers -> viers", function() {deepEqual( Stem("viers"), "viers");});
test("viesparul -> viespar", function() {deepEqual( Stem("viesparul"), "viespar");});
test("viespe -> viesp", function() {deepEqual( Stem("viespe"), "viesp");});
test("viespea -> viesp", function() {deepEqual( Stem("viespea"), "viesp");});
test("vietate -> vietat", function() {deepEqual( Stem("vietate"), "vietat");});
test("vietăţile -> vietăţ", function() {deepEqual( Stem("vietăţile"), "vietăţ");});
test("vietnam -> vietn", function() {deepEqual( Stem("vietnam"), "vietn");});
test("vieţi -> vieţ", function() {deepEqual( Stem("vieţi"), "vieţ");});
test("vieţii -> vieţ", function() {deepEqual( Stem("vieţii"), "vieţ");});
test("vigoarea -> vigoar", function() {deepEqual( Stem("vigoarea"), "vigoar");});
test("viguroasă -> vigur", function() {deepEqual( Stem("viguroasă"), "vigur");});
test("viguros -> vigur", function() {deepEqual( Stem("viguros"), "vigur");});
test("vigurosul -> vigur", function() {deepEqual( Stem("vigurosul"), "vigur");});
test("viguroşi -> vigur", function() {deepEqual( Stem("viguroşi"), "vigur");});
test("vii -> vii", function() {deepEqual( Stem("vii"), "vii");});
test("viilor -> viilor", function() {deepEqual( Stem("viilor"), "viilor");});
test("viitoare -> viitoar", function() {deepEqual( Stem("viitoare"), "viitoar");});
test("viitoarea -> viitoar", function() {deepEqual( Stem("viitoarea"), "viitoar");});
test("viitoarei -> viitoare", function() {deepEqual( Stem("viitoarei"), "viitoare");});
test("viitor -> viitor", function() {deepEqual( Stem("viitor"), "viitor");});
test("viitorul -> viitor", function() {deepEqual( Stem("viitorul"), "viitor");});
test("viitorului -> viitor", function() {deepEqual( Stem("viitorului"), "viitor");});
test("vijelioasă -> vijel", function() {deepEqual( Stem("vijelioasă"), "vijel");});
test("vila -> vil", function() {deepEqual( Stem("vila"), "vil");});
test("vilă -> vil", function() {deepEqual( Stem("vilă"), "vil");});
test("vile -> vil", function() {deepEqual( Stem("vile"), "vil");});
test("vilegiatură -> vilegiat", function() {deepEqual( Stem("vilegiatură"), "vilegiat");});
test("vilegiaturişti -> vilegiaturist", function() {deepEqual( Stem("vilegiaturişti"), "vilegiaturist");});
test("vilegiaturiştilor -> vilegiaturist", function() {deepEqual( Stem("vilegiaturiştilor"), "vilegiaturist");});
test("vin -> vin", function() {deepEqual( Stem("vin"), "vin");});
test("vina -> vin", function() {deepEqual( Stem("vina"), "vin");});
test("vină -> vin", function() {deepEqual( Stem("vină"), "vin");});
test("vinde -> vind", function() {deepEqual( Stem("vinde"), "vind");});
test("vindea -> vind", function() {deepEqual( Stem("vindea"), "vind");});
test("vindeam -> vind", function() {deepEqual( Stem("vindeam"), "vind");});
test("vindeca -> vindec", function() {deepEqual( Stem("vindeca"), "vindec");});
test("vindecare -> vindec", function() {deepEqual( Stem("vindecare"), "vindec");});
test("vindecat -> vindec", function() {deepEqual( Stem("vindecat"), "vindec");});
test("vindecă -> vindec", function() {deepEqual( Stem("vindecă"), "vindec");});
test("vine -> vin", function() {deepEqual( Stem("vine"), "vin");});
test("vinei -> vine", function() {deepEqual( Stem("vinei"), "vine");});
test("vinele -> vin", function() {deepEqual( Stem("vinele"), "vin");});
test("vineri -> viner", function() {deepEqual( Stem("vineri"), "viner");});
test("vinete -> vinet", function() {deepEqual( Stem("vinete"), "vinet");});
test("vino -> vino", function() {deepEqual( Stem("vino"), "vino");});
test("vinovat -> vinov", function() {deepEqual( Stem("vinovat"), "vinov");});
test("vinovată -> vinov", function() {deepEqual( Stem("vinovată"), "vinov");});
test("vinovate -> vinov", function() {deepEqual( Stem("vinovate"), "vinov");});
test("vinovaţi -> vinov", function() {deepEqual( Stem("vinovaţi"), "vinov");});
test("vinovaţii -> vinov", function() {deepEqual( Stem("vinovaţii"), "vinov");});
test("vinovăţie -> vinovăţ", function() {deepEqual( Stem("vinovăţie"), "vinovăţ");});
test("vinul -> vin", function() {deepEqual( Stem("vinul"), "vin");});
test("vinului -> vin", function() {deepEqual( Stem("vinului"), "vin");});
test("vinzi -> vinz", function() {deepEqual( Stem("vinzi"), "vinz");});
test("vioaie -> vioai", function() {deepEqual( Stem("vioaie"), "vioai");});
test("vioară -> vioar", function() {deepEqual( Stem("vioară"), "vioar");});
test("vioi -> vio", function() {deepEqual( Stem("vioi"), "vio");});
test("vioiciunea -> vioiciun", function() {deepEqual( Stem("vioiciunea"), "vioiciun");});
test("violent -> violent", function() {deepEqual( Stem("violent"), "violent");});
test("violentă -> violent", function() {deepEqual( Stem("violentă"), "violent");});
test("violente -> violent", function() {deepEqual( Stem("violente"), "violent");});
test("violenţa -> violenţ", function() {deepEqual( Stem("violenţa"), "violenţ");});
test("violenţă -> violenţ", function() {deepEqual( Stem("violenţă"), "violenţ");});
test("violenţei -> violenţe", function() {deepEqual( Stem("violenţei"), "violenţe");});
test("violenţele -> violenţ", function() {deepEqual( Stem("violenţele"), "violenţ");});
test("violetă -> violet", function() {deepEqual( Stem("violetă"), "violet");});
test("violete -> violet", function() {deepEqual( Stem("violete"), "violet");});
test("violonist -> violonist", function() {deepEqual( Stem("violonist"), "violonist");});
test("viorie -> vior", function() {deepEqual( Stem("viorie"), "vior");});
test("viorii -> vior", function() {deepEqual( Stem("viorii"), "vior");});
test("viorist -> viorist", function() {deepEqual( Stem("viorist"), "viorist");});
test("virajului -> viraj", function() {deepEqual( Stem("virajului"), "viraj");});
test("viran -> viran", function() {deepEqual( Stem("viran"), "viran");});
test("virtual -> virtual", function() {deepEqual( Stem("virtual"), "virtual");});
test("virtualitatea -> virtual", function() {deepEqual( Stem("virtualitatea"), "virtual");});
test("virtuozitate -> virtuoz", function() {deepEqual( Stem("virtuozitate"), "virtuoz");});
test("virtutea -> virtut", function() {deepEqual( Stem("virtutea"), "virtut");});
test("virus -> virus", function() {deepEqual( Stem("virus"), "virus");});
test("vis -> vis", function() {deepEqual( Stem("vis"), "vis");});
test("visa -> vis", function() {deepEqual( Stem("visa"), "vis");});
test("visam -> visam", function() {deepEqual( Stem("visam"), "visam");});
test("visările -> visăr", function() {deepEqual( Stem("visările"), "visăr");});
test("visătoare -> visat", function() {deepEqual( Stem("visătoare"), "visat");});
test("visător -> visat", function() {deepEqual( Stem("visător"), "visat");});
test("viscol -> viscol", function() {deepEqual( Stem("viscol"), "viscol");});
test("vise -> vis", function() {deepEqual( Stem("vise"), "vis");});
test("visează -> viseaz", function() {deepEqual( Stem("visează"), "viseaz");});
test("visele -> vis", function() {deepEqual( Stem("visele"), "vis");});
test("visez -> visez", function() {deepEqual( Stem("visez"), "visez");});
test("viseze -> visez", function() {deepEqual( Stem("viseze"), "visez");});
test("visteria -> vister", function() {deepEqual( Stem("visteria"), "vister");});
test("visul -> vis", function() {deepEqual( Stem("visul"), "vis");});
test("visului -> vis", function() {deepEqual( Stem("visului"), "vis");});
test("visurile -> visur", function() {deepEqual( Stem("visurile"), "visur");});
test("visurilor -> visur", function() {deepEqual( Stem("visurilor"), "visur");});
test("vişinie -> vişin", function() {deepEqual( Stem("vişinie"), "vişin");});
test("vital -> vital", function() {deepEqual( Stem("vital"), "vital");});
test("vitală -> vital", function() {deepEqual( Stem("vitală"), "vital");});
test("vitale -> vital", function() {deepEqual( Stem("vitale"), "vital");});
test("vitalitate -> vital", function() {deepEqual( Stem("vitalitate"), "vital");});
test("vitaminele -> vitamin", function() {deepEqual( Stem("vitaminele"), "vitamin");});
test("vite -> vit", function() {deepEqual( Stem("vite"), "vit");});
test("viteaz -> viteaz", function() {deepEqual( Stem("viteaz"), "viteaz");});
test("viteazul -> viteaz", function() {deepEqual( Stem("viteazul"), "viteaz");});
test("vitele -> vit", function() {deepEqual( Stem("vitele"), "vit");});
test("vitelor -> vit", function() {deepEqual( Stem("vitelor"), "vit");});
test("viteză -> vitez", function() {deepEqual( Stem("viteză"), "vitez");});
test("vitraliu -> vitraliu", function() {deepEqual( Stem("vitraliu"), "vitraliu");});
test("vitrina -> vitrin", function() {deepEqual( Stem("vitrina"), "vitrin");});
test("vitrină -> vitrin", function() {deepEqual( Stem("vitrină"), "vitrin");});
test("vitrine -> vitrin", function() {deepEqual( Stem("vitrine"), "vitrin");});
test("vitrinei -> vitrine", function() {deepEqual( Stem("vitrinei"), "vitrine");});
test("viţios -> viţios", function() {deepEqual( Stem("viţios"), "viţios");});
test("viu -> viu", function() {deepEqual( Stem("viu"), "viu");});
test("vivacitate -> vivac", function() {deepEqual( Stem("vivacitate"), "vivac");});
test("vivacitatea -> vivac", function() {deepEqual( Stem("vivacitatea"), "vivac");});
test("vizavi -> vizav", function() {deepEqual( Stem("vizavi"), "vizav");});
test("vizibil -> vizibil", function() {deepEqual( Stem("vizibil"), "vizibil");});
test("vizibile -> vizib", function() {deepEqual( Stem("vizibile"), "vizib");});
test("vizita -> vizit", function() {deepEqual( Stem("vizita"), "vizit");});
test("vizitat -> vizit", function() {deepEqual( Stem("vizitat"), "vizit");});
test("vizitatorii -> vizit", function() {deepEqual( Stem("vizitatorii"), "vizit");});
test("vizită -> vizit", function() {deepEqual( Stem("vizită"), "vizit");});
test("vizităm -> vizit", function() {deepEqual( Stem("vizităm"), "vizit");});
test("vizite -> vizit", function() {deepEqual( Stem("vizite"), "vizit");});
test("vizitează -> vizit", function() {deepEqual( Stem("vizitează"), "vizit");});
test("vizitei -> vizite", function() {deepEqual( Stem("vizitei"), "vizite");});
test("vizitiu -> vizitiu", function() {deepEqual( Stem("vizitiu"), "vizitiu");});
test("vizitiului -> vizit", function() {deepEqual( Stem("vizitiului"), "vizit");});
test("viziune -> viziun", function() {deepEqual( Stem("viziune"), "viziun");});
test("viziunea -> viziun", function() {deepEqual( Stem("viziunea"), "viziun");});
test("viziuni -> viziun", function() {deepEqual( Stem("viziuni"), "viziun");});
test("viziunii -> viziun", function() {deepEqual( Stem("viziunii"), "viziun");});
test("vizuală -> vizual", function() {deepEqual( Stem("vizuală"), "vizual");});
test("vizuale -> vizual", function() {deepEqual( Stem("vizuale"), "vizual");});
test("vizualitate -> vizual", function() {deepEqual( Stem("vizualitate"), "vizual");});
test("voaluri -> voalur", function() {deepEqual( Stem("voaluri"), "voalur");});
test("voastră -> voastr", function() {deepEqual( Stem("voastră"), "voastr");});
test("voastre -> voastr", function() {deepEqual( Stem("voastre"), "voastr");});
test("vocabularul -> vocabular", function() {deepEqual( Stem("vocabularul"), "vocabular");});
test("vocabule -> vocabul", function() {deepEqual( Stem("vocabule"), "vocabul");});
test("vocală -> vocal", function() {deepEqual( Stem("vocală"), "vocal");});
test("vocale -> vocal", function() {deepEqual( Stem("vocale"), "vocal");});
test("vocaţie -> voc", function() {deepEqual( Stem("vocaţie"), "voc");});
test("vocaţii -> voc", function() {deepEqual( Stem("vocaţii"), "voc");});
test("voce -> voc", function() {deepEqual( Stem("voce"), "voc");});
test("vocea -> voc", function() {deepEqual( Stem("vocea"), "voc");});
test("vocifereze -> vocifer", function() {deepEqual( Stem("vocifereze"), "vocifer");});
test("vocii -> voc", function() {deepEqual( Stem("vocii"), "voc");});
test("vocile -> voc", function() {deepEqual( Stem("vocile"), "voc");});
test("voi -> voi", function() {deepEqual( Stem("voi"), "voi");});
test("voia -> voi", function() {deepEqual( Stem("voia"), "voi");});
test("voiajor -> voiajor", function() {deepEqual( Stem("voiajor"), "voiajor");});
test("voiau -> voiau", function() {deepEqual( Stem("voiau"), "voiau");});
test("voicu -> voicu", function() {deepEqual( Stem("voicu"), "voicu");});
test("voiculescule -> voiculescul", function() {deepEqual( Stem("voiculescule"), "voiculescul");});
test("voie -> voi", function() {deepEqual( Stem("voie"), "voi");});
test("voiesc -> voiesc", function() {deepEqual( Stem("voiesc"), "voiesc");});
test("voim -> voim", function() {deepEqual( Stem("voim"), "voim");});
test("voinic -> voinic", function() {deepEqual( Stem("voinic"), "voinic");});
test("voinică -> voinic", function() {deepEqual( Stem("voinică"), "voinic");});
test("voinţa -> voinţ", function() {deepEqual( Stem("voinţa"), "voinţ");});
test("voinţă -> voinţ", function() {deepEqual( Stem("voinţă"), "voinţ");});
test("voinţei -> voinţe", function() {deepEqual( Stem("voinţei"), "voinţe");});
test("voit -> voit", function() {deepEqual( Stem("voit"), "voit");});
test("voiţi -> voiţ", function() {deepEqual( Stem("voiţi"), "voiţ");});
test("vollmar -> vollmar", function() {deepEqual( Stem("vollmar"), "vollmar");});
test("voltaire -> voltair", function() {deepEqual( Stem("voltaire"), "voltair");});
test("volum -> volum", function() {deepEqual( Stem("volum"), "volum");});
test("volume -> volum", function() {deepEqual( Stem("volume"), "volum");});
test("volumul -> volum", function() {deepEqual( Stem("volumul"), "volum");});
test("volumului -> volum", function() {deepEqual( Stem("volumului"), "volum");});
test("voluntar -> voluntar", function() {deepEqual( Stem("voluntar"), "voluntar");});
test("voluntari -> voluntar", function() {deepEqual( Stem("voluntari"), "voluntar");});
test("voluptate -> volupt", function() {deepEqual( Stem("voluptate"), "volupt");});
test("voluptatea -> volupt", function() {deepEqual( Stem("voluptatea"), "volupt");});
test("voluptăţii -> voluptăţ", function() {deepEqual( Stem("voluptăţii"), "voluptăţ");});
test("voluptăţile -> voluptăţ", function() {deepEqual( Stem("voluptăţile"), "voluptăţ");});
test("voluptuoasă -> voluptu", function() {deepEqual( Stem("voluptuoasă"), "voluptu");});
test("voluptuos -> voluptu", function() {deepEqual( Stem("voluptuos"), "voluptu");});
test("voluptuoşi -> voluptu", function() {deepEqual( Stem("voluptuoşi"), "voluptu");});
test("volută -> volut", function() {deepEqual( Stem("volută"), "volut");});
test("vom -> vom", function() {deepEqual( Stem("vom"), "vom");});
test("vomitive -> vomit", function() {deepEqual( Stem("vomitive"), "vomit");});
test("vomiţiuni -> vomit", function() {deepEqual( Stem("vomiţiuni"), "vomit");});
test("von -> von", function() {deepEqual( Stem("von"), "von");});
test("vopsea -> vop", function() {deepEqual( Stem("vopsea"), "vop");});
test("vopseala -> vopseal", function() {deepEqual( Stem("vopseala"), "vopseal");});
test("vopseaua -> vopseau", function() {deepEqual( Stem("vopseaua"), "vopseau");});
test("vopsit -> vopsit", function() {deepEqual( Stem("vopsit"), "vopsit");});
test("vopsită -> vopsit", function() {deepEqual( Stem("vopsită"), "vopsit");});
test("vopsite -> vopsit", function() {deepEqual( Stem("vopsite"), "vopsit");});
test("vor -> vor", function() {deepEqual( Stem("vor"), "vor");});
test("vorba -> vorb", function() {deepEqual( Stem("vorba"), "vorb");});
test("vorbă -> vorb", function() {deepEqual( Stem("vorbă"), "vorb");});
test("vorbăreaţă -> vorbăreaţ", function() {deepEqual( Stem("vorbăreaţă"), "vorbăreaţ");});
test("vorbăreţ -> vorbăreţ", function() {deepEqual( Stem("vorbăreţ"), "vorbăreţ");});
test("vorbărie -> vorbăr", function() {deepEqual( Stem("vorbărie"), "vorbăr");});
test("vorbe -> vorb", function() {deepEqual( Stem("vorbe"), "vorb");});
test("vorbea -> vorb", function() {deepEqual( Stem("vorbea"), "vorb");});
test("vorbeai -> vorb", function() {deepEqual( Stem("vorbeai"), "vorb");});
test("vorbeam -> vorb", function() {deepEqual( Stem("vorbeam"), "vorb");});
test("vorbească -> vorb", function() {deepEqual( Stem("vorbească"), "vorb");});
test("vorbeau -> vorb", function() {deepEqual( Stem("vorbeau"), "vorb");});
test("vorbei -> vorbe", function() {deepEqual( Stem("vorbei"), "vorbe");});
test("vorbele -> vorb", function() {deepEqual( Stem("vorbele"), "vorb");});
test("vorbesc -> vorb", function() {deepEqual( Stem("vorbesc"), "vorb");});
test("vorbeşte -> vorb", function() {deepEqual( Stem("vorbeşte"), "vorb");});
test("vorbeşti -> vorb", function() {deepEqual( Stem("vorbeşti"), "vorb");});
test("vorbi -> vorb", function() {deepEqual( Stem("vorbi"), "vorb");});
test("vorbim -> vorb", function() {deepEqual( Stem("vorbim"), "vorb");});
test("vorbind -> vorb", function() {deepEqual( Stem("vorbind"), "vorb");});
test("vorbindu -> vorb", function() {deepEqual( Stem("vorbindu"), "vorb");});
test("vorbire -> vorb", function() {deepEqual( Stem("vorbire"), "vorb");});
test("vorbirea -> vorb", function() {deepEqual( Stem("vorbirea"), "vorb");});
test("vorbirii -> vorbir", function() {deepEqual( Stem("vorbirii"), "vorbir");});
test("vorbise -> vorb", function() {deepEqual( Stem("vorbise"), "vorb");});
test("vorbisem -> vorb", function() {deepEqual( Stem("vorbisem"), "vorb");});
test("vorbit -> vorbit", function() {deepEqual( Stem("vorbit"), "vorbit");});
test("vorbitor -> vorbit", function() {deepEqual( Stem("vorbitor"), "vorbit");});
test("vorwaerts -> vorwaerts", function() {deepEqual( Stem("vorwaerts"), "vorwaerts");});
test("vossische -> vossisch", function() {deepEqual( Stem("vossische"), "vossisch");});
test("votul -> vot", function() {deepEqual( Stem("votul"), "vot");});
test("voturi -> votur", function() {deepEqual( Stem("voturi"), "votur");});
test("vouă -> vou", function() {deepEqual( Stem("vouă"), "vou");});
test("vous -> vous", function() {deepEqual( Stem("vous"), "vous");});
test("vrabia -> vrab", function() {deepEqual( Stem("vrabia"), "vrab");});
test("vrând -> vrând", function() {deepEqual( Stem("vrând"), "vrând");});
test("vrăjmaşi -> vrăjm", function() {deepEqual( Stem("vrăjmaşi"), "vrăjm");});
test("vrăjmăşie -> vrăjmăş", function() {deepEqual( Stem("vrăjmăşie"), "vrăjmăş");});
test("vrea -> vre", function() {deepEqual( Stem("vrea"), "vre");});
test("vreai -> vrea", function() {deepEqual( Stem("vreai"), "vrea");});
test("vream -> vream", function() {deepEqual( Stem("vream"), "vream");});
test("vreau -> vreau", function() {deepEqual( Stem("vreau"), "vreau");});
test("vrednică -> vrednic", function() {deepEqual( Stem("vrednică"), "vrednic");});
test("vrednice -> vrednic", function() {deepEqual( Stem("vrednice"), "vrednic");});
test("vrei -> vre", function() {deepEqual( Stem("vrei"), "vre");});
test("vrem -> vrem", function() {deepEqual( Stem("vrem"), "vrem");});
test("vreme -> vrem", function() {deepEqual( Stem("vreme"), "vrem");});
test("vremea -> vrem", function() {deepEqual( Stem("vremea"), "vrem");});
test("vremi -> vrem", function() {deepEqual( Stem("vremi"), "vrem");});
test("vremii -> vrem", function() {deepEqual( Stem("vremii"), "vrem");});
test("vremilor -> vrem", function() {deepEqual( Stem("vremilor"), "vrem");});
test("vremuri -> vremur", function() {deepEqual( Stem("vremuri"), "vremur");});
test("vremurile -> vremur", function() {deepEqual( Stem("vremurile"), "vremur");});
test("vremurilor -> vremur", function() {deepEqual( Stem("vremurilor"), "vremur");});
test("vreo -> vreo", function() {deepEqual( Stem("vreo"), "vreo");});
test("vreodată -> vreodat", function() {deepEqual( Stem("vreodată"), "vreodat");});
test("vreţi -> vreţ", function() {deepEqual( Stem("vreţi"), "vreţ");});
test("vreun -> vreun", function() {deepEqual( Stem("vreun"), "vreun");});
test("vreuna -> vreun", function() {deepEqual( Stem("vreuna"), "vreun");});
test("vreunui -> vreun", function() {deepEqual( Stem("vreunui"), "vreun");});
test("vreunul -> vreun", function() {deepEqual( Stem("vreunul"), "vreun");});
test("vroia -> vroi", function() {deepEqual( Stem("vroia"), "vroi");});
test("vroiam -> vroi", function() {deepEqual( Stem("vroiam"), "vroi");});
test("vroim -> vro", function() {deepEqual( Stem("vroim"), "vro");});
test("vroit -> vroit", function() {deepEqual( Stem("vroit"), "vroit");});
test("vrusese -> vru", function() {deepEqual( Stem("vrusese"), "vru");});
test("vrut -> vrut", function() {deepEqual( Stem("vrut"), "vrut");});
test("vuiască -> vuiasc", function() {deepEqual( Stem("vuiască"), "vuiasc");});
test("vuieşte -> vuieşt", function() {deepEqual( Stem("vuieşte"), "vuieşt");});
test("vulcan -> vulcan", function() {deepEqual( Stem("vulcan"), "vulcan");});
test("vulcani -> vulcan", function() {deepEqual( Stem("vulcani"), "vulcan");});
test("vulcanic -> vulcan", function() {deepEqual( Stem("vulcanic"), "vulcan");});
test("vulgar -> vulgar", function() {deepEqual( Stem("vulgar"), "vulgar");});
test("vulgară -> vulg", function() {deepEqual( Stem("vulgară"), "vulg");});
test("vulgare -> vulg", function() {deepEqual( Stem("vulgare"), "vulg");});
test("vulgaritate -> vulgar", function() {deepEqual( Stem("vulgaritate"), "vulgar");});
test("vulgaritatea -> vulgar", function() {deepEqual( Stem("vulgaritatea"), "vulgar");});
test("vultur -> vultur", function() {deepEqual( Stem("vultur"), "vultur");});
test("vulturii -> vultur", function() {deepEqual( Stem("vulturii"), "vultur");});
test("weimar -> weimar", function() {deepEqual( Stem("weimar"), "weimar");});
test("wer -> wer", function() {deepEqual( Stem("wer"), "wer");});
test("werner -> werner", function() {deepEqual( Stem("werner"), "werner");});
test("wiederkunft -> wiederkunft", function() {deepEqual( Stem("wiederkunft"), "wiederkunft");});
test("wilamowitz -> wilamowitz", function() {deepEqual( Stem("wilamowitz"), "wilamowitz");});
test("wilde -> wild", function() {deepEqual( Stem("wilde"), "wild");});
test("wilhelm -> wilhelm", function() {deepEqual( Stem("wilhelm"), "wilhelm");});
test("wundt -> wundt", function() {deepEqual( Stem("wundt"), "wundt");});
test("x -> x", function() {deepEqual( Stem("x"), "x");});
test("xiv -> xiv", function() {deepEqual( Stem("xiv"), "xiv");});
test("xix -> xix", function() {deepEqual( Stem("xix"), "xix");});
test("xm -> xm", function() {deepEqual( Stem("xm"), "xm");});
test("xn -> xn", function() {deepEqual( Stem("xn"), "xn");});
test("xr -> xr", function() {deepEqual( Stem("xr"), "xr");});
test("xvi -> xvi", function() {deepEqual( Stem("xvi"), "xvi");});
test("xviii -> xvii", function() {deepEqual( Stem("xviii"), "xvii");});
test("xx -> xx", function() {deepEqual( Stem("xx"), "xx");});
test("xy -> xy", function() {deepEqual( Stem("xy"), "xy");});
test("y -> y", function() {deepEqual( Stem("y"), "y");});
test("ypres -> ypres", function() {deepEqual( Stem("ypres"), "ypres");});
test("z -> z", function() {deepEqual( Stem("z"), "z");});
test("zac -> zac", function() {deepEqual( Stem("zac"), "zac");});
test("zace -> zac", function() {deepEqual( Stem("zace"), "zac");});
test("zadarnic -> zadarn", function() {deepEqual( Stem("zadarnic"), "zadarn");});
test("zahăr -> zahăr", function() {deepEqual( Stem("zahăr"), "zahăr");});
test("zamfir -> zamfir", function() {deepEqual( Stem("zamfir"), "zamfir");});
test("zamfire -> zamf", function() {deepEqual( Stem("zamfire"), "zamf");});
test("zar -> zar", function() {deepEqual( Stem("zar"), "zar");});
test("zarul -> zar", function() {deepEqual( Stem("zarul"), "zar");});
test("zarului -> zar", function() {deepEqual( Stem("zarului"), "zar");});
test("zarurile -> zarur", function() {deepEqual( Stem("zarurile"), "zarur");});
test("zarzavaturi -> zarzavatur", function() {deepEqual( Stem("zarzavaturi"), "zarzavatur");});
test("zarzărele -> zarzăr", function() {deepEqual( Stem("zarzărele"), "zarzăr");});
test("zâmbeam -> zâmb", function() {deepEqual( Stem("zâmbeam"), "zâmb");});
test("zâmbească -> zâmb", function() {deepEqual( Stem("zâmbească"), "zâmb");});
test("zâmbesc -> zâmb", function() {deepEqual( Stem("zâmbesc"), "zâmb");});
test("zâmbeşte -> zâmb", function() {deepEqual( Stem("zâmbeşte"), "zâmb");});
test("zâmbeşti -> zâmb", function() {deepEqual( Stem("zâmbeşti"), "zâmb");});
test("zâmbet -> zâmbet", function() {deepEqual( Stem("zâmbet"), "zâmbet");});
test("zâmbetul -> zâmbet", function() {deepEqual( Stem("zâmbetul"), "zâmbet");});
test("zâmbim -> zâmb", function() {deepEqual( Stem("zâmbim"), "zâmb");});
test("zâmbind -> zâmb", function() {deepEqual( Stem("zâmbind"), "zâmb");});
test("zâmbit -> zâmbit", function() {deepEqual( Stem("zâmbit"), "zâmbit");});
test("zâmbitoare -> zâmbit", function() {deepEqual( Stem("zâmbitoare"), "zâmbit");});
test("zâzâieli -> zâzâiel", function() {deepEqual( Stem("zâzâieli"), "zâzâiel");});
test("zăbranic -> zăbran", function() {deepEqual( Stem("zăbranic"), "zăbran");});
test("zăcând -> zăcând", function() {deepEqual( Stem("zăcând"), "zăcând");});
test("zăcătorilor -> zăcat", function() {deepEqual( Stem("zăcătorilor"), "zăcat");});
test("zăceam -> zăceam", function() {deepEqual( Stem("zăceam"), "zăceam");});
test("zăceau -> zăceau", function() {deepEqual( Stem("zăceau"), "zăceau");});
test("zăcusem -> zăcusem", function() {deepEqual( Stem("zăcusem"), "zăcusem");});
test("zădărire -> zădăr", function() {deepEqual( Stem("zădărire"), "zădăr");});
test("zădărniceşte -> zădărnic", function() {deepEqual( Stem("zădărniceşte"), "zădărnic");});
test("zădărnici -> zădărn", function() {deepEqual( Stem("zădărnici"), "zădărn");});
test("zămislesc -> zămisl", function() {deepEqual( Stem("zămislesc"), "zămisl");});
test("zănatic -> zănat", function() {deepEqual( Stem("zănatic"), "zănat");});
test("zăpada -> zăpad", function() {deepEqual( Stem("zăpada"), "zăpad");});
test("zăpăceala -> zăpăceal", function() {deepEqual( Stem("zăpăceala"), "zăpăceal");});
test("zăpăceşte -> zăpăc", function() {deepEqual( Stem("zăpăceşte"), "zăpăc");});
test("zăpăcim -> zăpăc", function() {deepEqual( Stem("zăpăcim"), "zăpăc");});
test("zăpăcit -> zăpăc", function() {deepEqual( Stem("zăpăcit"), "zăpăc");});
test("zăpăcită -> zăpăc", function() {deepEqual( Stem("zăpăcită"), "zăpăc");});
test("zăpăcite -> zăpăc", function() {deepEqual( Stem("zăpăcite"), "zăpăc");});
test("zăpezii -> zăpez", function() {deepEqual( Stem("zăpezii"), "zăpez");});
test("zăpuşeală -> zăpuşeal", function() {deepEqual( Stem("zăpuşeală"), "zăpuşeal");});
test("zărească -> zăreasc", function() {deepEqual( Stem("zărească"), "zăreasc");});
test("zăresc -> zăresc", function() {deepEqual( Stem("zăresc"), "zăresc");});
test("zău -> zău", function() {deepEqual( Stem("zău"), "zău");});
test("zăvor -> zăvor", function() {deepEqual( Stem("zăvor"), "zăvor");});
test("zăvorâte -> zăvorât", function() {deepEqual( Stem("zăvorâte"), "zăvorât");});
test("zbat -> zbat", function() {deepEqual( Stem("zbat"), "zbat");});
test("zbate -> zbat", function() {deepEqual( Stem("zbate"), "zbat");});
test("zbătându -> zbăt", function() {deepEqual( Stem("zbătându"), "zbăt");});
test("zbiară -> zbiar", function() {deepEqual( Stem("zbiară"), "zbiar");});
test("zbierăt -> zbierăt", function() {deepEqual( Stem("zbierăt"), "zbierăt");});
test("zboară -> zboar", function() {deepEqual( Stem("zboară"), "zboar");});
test("zbor -> zbor", function() {deepEqual( Stem("zbor"), "zbor");});
test("zboruri -> zborur", function() {deepEqual( Stem("zboruri"), "zborur");});
test("zbucium -> zbucium", function() {deepEqual( Stem("zbucium"), "zbucium");});
test("zbuciuma -> zbucium", function() {deepEqual( Stem("zbuciuma"), "zbucium");});
test("zbuciumat -> zbucium", function() {deepEqual( Stem("zbuciumat"), "zbucium");});
test("zbuciumul -> zbucium", function() {deepEqual( Stem("zbuciumul"), "zbucium");});
test("zburat -> zburat", function() {deepEqual( Stem("zburat"), "zburat");});
test("zdravănă -> zdravăn", function() {deepEqual( Stem("zdravănă"), "zdravăn");});
test("zdraveni -> zdraven", function() {deepEqual( Stem("zdraveni"), "zdraven");});
test("zdrobi -> zdrob", function() {deepEqual( Stem("zdrobi"), "zdrob");});
test("zdrobim -> zdrob", function() {deepEqual( Stem("zdrobim"), "zdrob");});
test("zdrobit -> zdrobit", function() {deepEqual( Stem("zdrobit"), "zdrobit");});
test("zdrobită -> zdrobit", function() {deepEqual( Stem("zdrobită"), "zdrobit");});
test("zdrobiţi -> zdrob", function() {deepEqual( Stem("zdrobiţi"), "zdrob");});
test("zdruncinarea -> zdruncin", function() {deepEqual( Stem("zdruncinarea"), "zdruncin");});
test("zdruncinat -> zdruncin", function() {deepEqual( Stem("zdruncinat"), "zdruncin");});
test("zece -> zec", function() {deepEqual( Stem("zece"), "zec");});
test("zecea -> zec", function() {deepEqual( Stem("zecea"), "zec");});
test("zeci -> zec", function() {deepEqual( Stem("zeci"), "zec");});
test("zecile -> zec", function() {deepEqual( Stem("zecile"), "zec");});
test("zefir -> zefir", function() {deepEqual( Stem("zefir"), "zefir");});
test("zefirului -> zefir", function() {deepEqual( Stem("zefirului"), "zefir");});
test("zeit -> zeit", function() {deepEqual( Stem("zeit"), "zeit");});
test("zeitung -> zeitung", function() {deepEqual( Stem("zeitung"), "zeitung");});
test("zel -> zel", function() {deepEqual( Stem("zel"), "zel");});
test("zelosul -> zelos", function() {deepEqual( Stem("zelosul"), "zelos");});
test("zelul -> zel", function() {deepEqual( Stem("zelul"), "zel");});
test("zemuit -> zemuit", function() {deepEqual( Stem("zemuit"), "zemuit");});
test("zenit -> zenit", function() {deepEqual( Stem("zenit"), "zenit");});
test("zenon -> zenon", function() {deepEqual( Stem("zenon"), "zenon");});
test("zepelinurilor -> zepelinur", function() {deepEqual( Stem("zepelinurilor"), "zepelinur");});
test("zestre -> zestr", function() {deepEqual( Stem("zestre"), "zestr");});
test("zgâlţâia -> zgâlţâi", function() {deepEqual( Stem("zgâlţâia"), "zgâlţâi");});
test("zgâria -> zgâr", function() {deepEqual( Stem("zgâria"), "zgâr");});
test("zgomot -> zgomot", function() {deepEqual( Stem("zgomot"), "zgomot");});
test("zgomotoasă -> zgomot", function() {deepEqual( Stem("zgomotoasă"), "zgomot");});
test("zgomotoase -> zgomot", function() {deepEqual( Stem("zgomotoase"), "zgomot");});
test("zgomotos -> zgomot", function() {deepEqual( Stem("zgomotos"), "zgomot");});
test("zgomotul -> zgomot", function() {deepEqual( Stem("zgomotul"), "zgomot");});
test("zgrunţuros -> zgrunţur", function() {deepEqual( Stem("zgrunţuros"), "zgrunţur");});
test("zgudui -> zgud", function() {deepEqual( Stem("zgudui"), "zgud");});
test("zguduie -> zgudui", function() {deepEqual( Stem("zguduie"), "zgudui");});
test("zguduitor -> zguduit", function() {deepEqual( Stem("zguduitor"), "zguduit");});
test("zi -> zi", function() {deepEqual( Stem("zi"), "zi");});
test("ziar -> ziar", function() {deepEqual( Stem("ziar"), "ziar");});
test("ziare -> ziar", function() {deepEqual( Stem("ziare"), "ziar");});
test("ziarele -> ziar", function() {deepEqual( Stem("ziarele"), "ziar");});
test("ziarist -> ziarist", function() {deepEqual( Stem("ziarist"), "ziarist");});
test("ziaristică -> ziarist", function() {deepEqual( Stem("ziaristică"), "ziarist");});
test("ziaristul -> ziarist", function() {deepEqual( Stem("ziaristul"), "ziarist");});
test("ziarişti -> ziarişt", function() {deepEqual( Stem("ziarişti"), "ziarişt");});
test("ziarul -> ziar", function() {deepEqual( Stem("ziarul"), "ziar");});
test("ziarului -> ziar", function() {deepEqual( Stem("ziarului"), "ziar");});
test("zic -> zic", function() {deepEqual( Stem("zic"), "zic");});
test("zică -> zic", function() {deepEqual( Stem("zică"), "zic");});
test("zicătoare -> zicat", function() {deepEqual( Stem("zicătoare"), "zicat");});
test("zicătorii -> zicat", function() {deepEqual( Stem("zicătorii"), "zicat");});
test("zice -> zic", function() {deepEqual( Stem("zice"), "zic");});
test("zicea -> zic", function() {deepEqual( Stem("zicea"), "zic");});
test("ziceai -> zicea", function() {deepEqual( Stem("ziceai"), "zicea");});
test("ziceam -> ziceam", function() {deepEqual( Stem("ziceam"), "ziceam");});
test("ziceaţi -> ziceaţ", function() {deepEqual( Stem("ziceaţi"), "ziceaţ");});
test("ziceau -> ziceau", function() {deepEqual( Stem("ziceau"), "ziceau");});
test("zicem -> zic", function() {deepEqual( Stem("zicem"), "zic");});
test("ziceţi -> zic", function() {deepEqual( Stem("ziceţi"), "zic");});
test("zici -> zic", function() {deepEqual( Stem("zici"), "zic");});
test("zid -> zid", function() {deepEqual( Stem("zid"), "zid");});
test("ziduri -> zidur", function() {deepEqual( Stem("ziduri"), "zidur");});
test("zidurile -> zidur", function() {deepEqual( Stem("zidurile"), "zidur");});
test("ziegler -> ziegler", function() {deepEqual( Stem("ziegler"), "ziegler");});
test("zile -> zil", function() {deepEqual( Stem("zile"), "zil");});
test("zilei -> zile", function() {deepEqual( Stem("zilei"), "zile");});
test("zilele -> zil", function() {deepEqual( Stem("zilele"), "zil");});
test("zilelor -> zil", function() {deepEqual( Stem("zilelor"), "zil");});
test("zilnic -> zilnic", function() {deepEqual( Stem("zilnic"), "zilnic");});
test("zilnică -> zilnic", function() {deepEqual( Stem("zilnică"), "zilnic");});
test("zis -> zis", function() {deepEqual( Stem("zis"), "zis");});
test("zisa -> zis", function() {deepEqual( Stem("zisa"), "zis");});
test("zisă -> zis", function() {deepEqual( Stem("zisă"), "zis");});
test("zise -> zis", function() {deepEqual( Stem("zise"), "zis");});
test("zişi -> ziş", function() {deepEqual( Stem("zişi"), "ziş");});
test("zişii -> ziş", function() {deepEqual( Stem("zişii"), "ziş");});
test("ziua -> ziu", function() {deepEqual( Stem("ziua"), "ziu");});
test("ziuă -> ziu", function() {deepEqual( Stem("ziuă"), "ziu");});
test("zloţi -> zloţ", function() {deepEqual( Stem("zloţi"), "zloţ");});
test("zmeilor -> zmeilor", function() {deepEqual( Stem("zmeilor"), "zmeilor");});
test("zmeu -> zmeu", function() {deepEqual( Stem("zmeu"), "zmeu");});
test("zmeul -> zmeul", function() {deepEqual( Stem("zmeul"), "zmeul");});
test("zmeură -> zmeur", function() {deepEqual( Stem("zmeură"), "zmeur");});
test("zodia -> zodi", function() {deepEqual( Stem("zodia"), "zodi");});
test("zodiilor -> zod", function() {deepEqual( Stem("zodiilor"), "zod");});
test("zoica -> zoic", function() {deepEqual( Stem("zoica"), "zoic");});
test("zona -> zon", function() {deepEqual( Stem("zona"), "zon");});
test("zonă -> zon", function() {deepEqual( Stem("zonă"), "zon");});
test("zone -> zon", function() {deepEqual( Stem("zone"), "zon");});
test("zonelor -> zon", function() {deepEqual( Stem("zonelor"), "zon");});
test("zonia -> zoni", function() {deepEqual( Stem("zonia"), "zoni");});
test("zoologia -> zoolog", function() {deepEqual( Stem("zoologia"), "zoolog");});
test("zoologice -> zoolog", function() {deepEqual( Stem("zoologice"), "zoolog");});
test("zoologie -> zoolog", function() {deepEqual( Stem("zoologie"), "zoolog");});
test("zootehnic -> zootehn", function() {deepEqual( Stem("zootehnic"), "zootehn");});
test("zootehnică -> zootehn", function() {deepEqual( Stem("zootehnică"), "zootehn");});
test("zootehniei -> zootehn", function() {deepEqual( Stem("zootehniei"), "zootehn");});
test("zor -> zor", function() {deepEqual( Stem("zor"), "zor");});
test("zorele -> zor", function() {deepEqual( Stem("zorele"), "zor");});
test("zori -> zor", function() {deepEqual( Stem("zori"), "zor");});
test("zorii -> zor", function() {deepEqual( Stem("zorii"), "zor");});
test("zorile -> zor", function() {deepEqual( Stem("zorile"), "zor");});
test("zorilor -> zor", function() {deepEqual( Stem("zorilor"), "zor");});
test("zorit -> zorit", function() {deepEqual( Stem("zorit"), "zorit");});
test("zornăit -> zornăit", function() {deepEqual( Stem("zornăit"), "zornăit");});
test("zorzoanele -> zorzoan", function() {deepEqual( Stem("zorzoanele"), "zorzoan");});
test("zossima -> zossim", function() {deepEqual( Stem("zossima"), "zossim");});
test("zugrăvesc -> zugrăv", function() {deepEqual( Stem("zugrăvesc"), "zugrăv");});
test("zugrăveşte -> zugrăv", function() {deepEqual( Stem("zugrăveşte"), "zugrăv");});
test("zugrăvi -> zugrăv", function() {deepEqual( Stem("zugrăvi"), "zugrăv");});
test("zugrăvită -> zugrăv", function() {deepEqual( Stem("zugrăvită"), "zugrăv");});
test("zumzet -> zumzet", function() {deepEqual( Stem("zumzet"), "zumzet");});
test("zumzetul -> zumzet", function() {deepEqual( Stem("zumzetul"), "zumzet");});
test("zvâcneşte -> zvâcn", function() {deepEqual( Stem("zvâcneşte"), "zvâcn");});
test("zvâcnind -> zvâcn", function() {deepEqual( Stem("zvâcnind"), "zvâcn");});
test("zvâcnirile -> zvâcnir", function() {deepEqual( Stem("zvâcnirile"), "zvâcnir");});
test("zvâcnit -> zvâcnit", function() {deepEqual( Stem("zvâcnit"), "zvâcnit");});
test("zvântate -> zvântat", function() {deepEqual( Stem("zvântate"), "zvântat");});
test("zvârlind -> zvârl", function() {deepEqual( Stem("zvârlind"), "zvârl");});
test("zvârlite -> zvârlit", function() {deepEqual( Stem("zvârlite"), "zvârlit");});
test("zvârlugă -> zvârlug", function() {deepEqual( Stem("zvârlugă"), "zvârlug");});
test("zvîcneau -> zvîcn", function() {deepEqual( Stem("zvîcneau"), "zvîcn");});
test("zvîcni -> zvîcn", function() {deepEqual( Stem("zvîcni"), "zvîcn");});
test("zvîcnind -> zvîcn", function() {deepEqual( Stem("zvîcnind"), "zvîcn");});
test("zvîcniri -> zvîcnir", function() {deepEqual( Stem("zvîcniri"), "zvîcnir");});
test("zvîcnit -> zvîcnit", function() {deepEqual( Stem("zvîcnit"), "zvîcnit");});
test("zvîrcoli -> zvîrcol", function() {deepEqual( Stem("zvîrcoli"), "zvîrcol");});
test("zvîrcolirile -> zvîrcolir", function() {deepEqual( Stem("zvîrcolirile"), "zvîrcolir");});
test("zvîrle -> zvîrl", function() {deepEqual( Stem("zvîrle"), "zvîrl");});
test("zvîrlînd -> zvîrlînd", function() {deepEqual( Stem("zvîrlînd"), "zvîrlînd");});
test("zvonul -> zvon", function() {deepEqual( Stem("zvonul"), "zvon");});
test("zvonuri -> zvonur", function() {deepEqual( Stem("zvonuri"), "zvonur");});
test("zvonurile -> zvonur", function() {deepEqual( Stem("zvonurile"), "zvonur");});
