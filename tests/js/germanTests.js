QUnit.config.hidepassed = true;
var Stem = snowballFactory.newStemmer('german').stem;
test("a -> a", function() {deepEqual( Stem("a"), "a");});
test("aa -> aa", function() {deepEqual( Stem("aa"), "aa");});
test("aalglatten -> aalglatt", function() {deepEqual( Stem("aalglatten"), "aalglatt");});
test("aargau -> aargau", function() {deepEqual( Stem("aargau"), "aargau");});
test("aargauer -> aargau", function() {deepEqual( Stem("aargauer"), "aargau");});
test("aasen -> aas", function() {deepEqual( Stem("aasen"), "aas");});
test("aasgeruch -> aasgeruch", function() {deepEqual( Stem("aasgeruch"), "aasgeruch");});
test("aashöllen -> aasholl", function() {deepEqual( Stem("aashöllen"), "aasholl");});
test("ab -> ab", function() {deepEqual( Stem("ab"), "ab");});
test("abaddon -> abaddon", function() {deepEqual( Stem("abaddon"), "abaddon");});
test("abarten -> abart", function() {deepEqual( Stem("abarten"), "abart");});
test("abbeisst -> abbeisst", function() {deepEqual( Stem("abbeisst"), "abbeisst");});
test("abbild -> abbild", function() {deepEqual( Stem("abbild"), "abbild");});
test("abbildung -> abbild", function() {deepEqual( Stem("abbildung"), "abbild");});
test("abbiss -> abbiss", function() {deepEqual( Stem("abbiss"), "abbiss");});
test("abbrechen -> abbrech", function() {deepEqual( Stem("abbrechen"), "abbrech");});
test("abbruch -> abbruch", function() {deepEqual( Stem("abbruch"), "abbruch");});
test("abend -> abend", function() {deepEqual( Stem("abend"), "abend");});
test("abendbrot -> abendbrot", function() {deepEqual( Stem("abendbrot"), "abendbrot");});
test("abenddämmerung -> abenddammer", function() {deepEqual( Stem("abenddämmerung"), "abenddammer");});
test("abenddunklen -> abenddunkl", function() {deepEqual( Stem("abenddunklen"), "abenddunkl");});
test("abende -> abend", function() {deepEqual( Stem("abende"), "abend");});
test("abendessen -> abendess", function() {deepEqual( Stem("abendessen"), "abendess");});
test("abendherren -> abendherr", function() {deepEqual( Stem("abendherren"), "abendherr");});
test("abendhimmel -> abendhimmel", function() {deepEqual( Stem("abendhimmel"), "abendhimmel");});
test("abendländischem -> abendland", function() {deepEqual( Stem("abendländischem"), "abendland");});
test("abendländischen -> abendland", function() {deepEqual( Stem("abendländischen"), "abendland");});
test("abendlichen -> abend", function() {deepEqual( Stem("abendlichen"), "abend");});
test("abendlichte -> abendlicht", function() {deepEqual( Stem("abendlichte"), "abendlicht");});
test("abendluft -> abendluft", function() {deepEqual( Stem("abendluft"), "abendluft");});
test("abendmahl -> abendmahl", function() {deepEqual( Stem("abendmahl"), "abendmahl");});
test("abendröte -> abendrot", function() {deepEqual( Stem("abendröte"), "abendrot");});
test("abends -> abend", function() {deepEqual( Stem("abends"), "abend");});
test("abendschein -> abendschein", function() {deepEqual( Stem("abendschein"), "abendschein");});
test("abendscheine -> abendschein", function() {deepEqual( Stem("abendscheine"), "abendschein");});
test("abendschöppchen -> abendschoppch", function() {deepEqual( Stem("abendschöppchen"), "abendschoppch");});
test("abendsonne -> abendsonn", function() {deepEqual( Stem("abendsonne"), "abendsonn");});
test("abendstern -> abend", function() {deepEqual( Stem("abendstern"), "abend");});
test("abendtanz -> abendtanz", function() {deepEqual( Stem("abendtanz"), "abendtanz");});
test("abendwind -> abendwind", function() {deepEqual( Stem("abendwind"), "abendwind");});
test("abendzeit -> abendzeit", function() {deepEqual( Stem("abendzeit"), "abendzeit");});
test("abenteuer -> abenteu", function() {deepEqual( Stem("abenteuer"), "abenteu");});
test("abenteuerlich -> abenteu", function() {deepEqual( Stem("abenteuerlich"), "abenteu");});
test("abenteuerliche -> abenteu", function() {deepEqual( Stem("abenteuerliche"), "abenteu");});
test("abenteuerlichem -> abenteu", function() {deepEqual( Stem("abenteuerlichem"), "abenteu");});
test("abenteuerliches -> abenteu", function() {deepEqual( Stem("abenteuerliches"), "abenteu");});
test("abenteuern -> abenteu", function() {deepEqual( Stem("abenteuern"), "abenteu");});
test("abenteuers -> abenteu", function() {deepEqual( Stem("abenteuers"), "abenteu");});
test("abenteuerspielplätzen -> abenteuerspielplatz", function() {deepEqual( Stem("abenteuerspielplätzen"), "abenteuerspielplatz");});
test("abenteurer -> abenteur", function() {deepEqual( Stem("abenteurer"), "abenteur");});
test("aber -> aber", function() {deepEqual( Stem("aber"), "aber");});
test("aberglaube -> aberglaub", function() {deepEqual( Stem("aberglaube"), "aberglaub");});
test("aberglauben -> aberglaub", function() {deepEqual( Stem("aberglauben"), "aberglaub");});
test("abermalige -> abermal", function() {deepEqual( Stem("abermalige"), "abermal");});
test("abermaligen -> abermal", function() {deepEqual( Stem("abermaligen"), "abermal");});
test("abermals -> abermal", function() {deepEqual( Stem("abermals"), "abermal");});
test("abertausend -> abertaus", function() {deepEqual( Stem("abertausend"), "abertaus");});
test("aberwitzigen -> aberwitz", function() {deepEqual( Stem("aberwitzigen"), "aberwitz");});
test("abfahrt -> abfahrt", function() {deepEqual( Stem("abfahrt"), "abfahrt");});
test("abfall -> abfall", function() {deepEqual( Stem("abfall"), "abfall");});
test("abfallen -> abfall", function() {deepEqual( Stem("abfallen"), "abfall");});
test("abfällige -> abfall", function() {deepEqual( Stem("abfällige"), "abfall");});
test("abfallkorb -> abfallkorb", function() {deepEqual( Stem("abfallkorb"), "abfallkorb");});
test("abfällsel -> abfallsel", function() {deepEqual( Stem("abfällsel"), "abfallsel");});
test("abfällt -> abfallt", function() {deepEqual( Stem("abfällt"), "abfallt");});
test("abfeuernd -> abfeuernd", function() {deepEqual( Stem("abfeuernd"), "abfeuernd");});
test("abfielen -> abfiel", function() {deepEqual( Stem("abfielen"), "abfiel");});
test("abfinden -> abfind", function() {deepEqual( Stem("abfinden"), "abfind");});
test("abflughalle -> abflughall", function() {deepEqual( Stem("abflughalle"), "abflughall");});
test("abfressen -> abfress", function() {deepEqual( Stem("abfressen"), "abfress");});
test("abfuhr -> abfuhr", function() {deepEqual( Stem("abfuhr"), "abfuhr");});
test("abführung -> abfuhr", function() {deepEqual( Stem("abführung"), "abfuhr");});
test("abgab -> abgab", function() {deepEqual( Stem("abgab"), "abgab");});
test("abgabe -> abgab", function() {deepEqual( Stem("abgabe"), "abgab");});
test("abgaben -> abgab", function() {deepEqual( Stem("abgaben"), "abgab");});
test("abgang -> abgang", function() {deepEqual( Stem("abgang"), "abgang");});
test("abge -> abg", function() {deepEqual( Stem("abge"), "abg");});
test("abgebe -> abgeb", function() {deepEqual( Stem("abgebe"), "abgeb");});
test("abgeben -> abgeb", function() {deepEqual( Stem("abgeben"), "abgeb");});
test("abgebildet -> abgebildet", function() {deepEqual( Stem("abgebildet"), "abgebildet");});
test("abgebracht -> abgebracht", function() {deepEqual( Stem("abgebracht"), "abgebracht");});
test("abgebrannten -> abgebrannt", function() {deepEqual( Stem("abgebrannten"), "abgebrannt");});
test("abgebrochen -> abgebroch", function() {deepEqual( Stem("abgebrochen"), "abgebroch");});
test("abgebrochene -> abgebroch", function() {deepEqual( Stem("abgebrochene"), "abgebroch");});
test("abgebrochenes -> abgebroch", function() {deepEqual( Stem("abgebrochenes"), "abgebroch");});
test("abgebürstet -> abgeburstet", function() {deepEqual( Stem("abgebürstet"), "abgeburstet");});
test("abgedient -> abgedient", function() {deepEqual( Stem("abgedient"), "abgedient");});
test("abgedruckt -> abgedruckt", function() {deepEqual( Stem("abgedruckt"), "abgedruckt");});
test("abgefallen -> abgefall", function() {deepEqual( Stem("abgefallen"), "abgefall");});
test("abgefangen -> abgefang", function() {deepEqual( Stem("abgefangen"), "abgefang");});
test("abgefertigt -> abgefertigt", function() {deepEqual( Stem("abgefertigt"), "abgefertigt");});
test("abgeführt -> abgefuhrt", function() {deepEqual( Stem("abgeführt"), "abgefuhrt");});
test("abgefunden -> abgefund", function() {deepEqual( Stem("abgefunden"), "abgefund");});
test("abgegebene -> abgegeb", function() {deepEqual( Stem("abgegebene"), "abgegeb");});
test("abgegrenzt -> abgegrenzt", function() {deepEqual( Stem("abgegrenzt"), "abgegrenzt");});
test("abgegriffene -> abgegriff", function() {deepEqual( Stem("abgegriffene"), "abgegriff");});
test("abgehalten -> abgehalt", function() {deepEqual( Stem("abgehalten"), "abgehalt");});
test("abgehandelt -> abgehandelt", function() {deepEqual( Stem("abgehandelt"), "abgehandelt");});
test("abgehandelten -> abgehandelt", function() {deepEqual( Stem("abgehandelten"), "abgehandelt");});
test("abgehängen -> abgehang", function() {deepEqual( Stem("abgehängen"), "abgehang");});
test("abgehärmte -> abgeharmt", function() {deepEqual( Stem("abgehärmte"), "abgeharmt");});
test("abgehärteten -> abgehartet", function() {deepEqual( Stem("abgehärteten"), "abgehartet");});
test("abgehauen -> abgehau", function() {deepEqual( Stem("abgehauen"), "abgehau");});
test("abgehen -> abgeh", function() {deepEqual( Stem("abgehen"), "abgeh");});
test("abgeholt -> abgeholt", function() {deepEqual( Stem("abgeholt"), "abgeholt");});
test("abgehört -> abgehort", function() {deepEqual( Stem("abgehört"), "abgehort");});
test("abgeht -> abgeht", function() {deepEqual( Stem("abgeht"), "abgeht");});
test("abgekauft -> abgekauft", function() {deepEqual( Stem("abgekauft"), "abgekauft");});
test("abgekommen -> abgekomm", function() {deepEqual( Stem("abgekommen"), "abgekomm");});
test("abgeladen -> abgelad", function() {deepEqual( Stem("abgeladen"), "abgelad");});
test("abgelagertes -> abgelagert", function() {deepEqual( Stem("abgelagertes"), "abgelagert");});
test("abgelassen -> abgelass", function() {deepEqual( Stem("abgelassen"), "abgelass");});
test("abgelaufen -> abgelauf", function() {deepEqual( Stem("abgelaufen"), "abgelauf");});
test("abgelebte -> abgelebt", function() {deepEqual( Stem("abgelebte"), "abgelebt");});
test("abgelegenen -> abgeleg", function() {deepEqual( Stem("abgelegenen"), "abgeleg");});
test("abgelegt -> abgelegt", function() {deepEqual( Stem("abgelegt"), "abgelegt");});
test("abgelehnt -> abgelehnt", function() {deepEqual( Stem("abgelehnt"), "abgelehnt");});
test("abgeleitet -> abgeleitet", function() {deepEqual( Stem("abgeleitet"), "abgeleitet");});
test("abgeleitete -> abgeleitet", function() {deepEqual( Stem("abgeleitete"), "abgeleitet");});
test("abgeleiteten -> abgeleitet", function() {deepEqual( Stem("abgeleiteten"), "abgeleitet");});
test("abgeleitetes -> abgeleitet", function() {deepEqual( Stem("abgeleitetes"), "abgeleitet");});
test("abgelenkt -> abgelenkt", function() {deepEqual( Stem("abgelenkt"), "abgelenkt");});
test("abgeleugnet -> abgeleugnet", function() {deepEqual( Stem("abgeleugnet"), "abgeleugnet");});
test("abgelöst -> abgelost", function() {deepEqual( Stem("abgelöst"), "abgelost");});
test("abgemagert -> abgemagert", function() {deepEqual( Stem("abgemagert"), "abgemagert");});
test("abgemessenheit -> abgemess", function() {deepEqual( Stem("abgemessenheit"), "abgemess");});
test("abgenagten -> abgenagt", function() {deepEqual( Stem("abgenagten"), "abgenagt");});
test("abgeneigt -> abgeneigt", function() {deepEqual( Stem("abgeneigt"), "abgeneigt");});
test("abgenommen -> abgenomm", function() {deepEqual( Stem("abgenommen"), "abgenomm");});
test("abgenutzten -> abgenutzt", function() {deepEqual( Stem("abgenutzten"), "abgenutzt");});
test("abgeödet -> abgeodet", function() {deepEqual( Stem("abgeödet"), "abgeodet");});
test("abgeödete -> abgeodet", function() {deepEqual( Stem("abgeödete"), "abgeodet");});
test("abgeordnetenversammlung -> abgeordnetenversamml", function() {deepEqual( Stem("abgeordnetenversammlung"), "abgeordnetenversamml");});
test("abgeordneter -> abgeordnet", function() {deepEqual( Stem("abgeordneter"), "abgeordnet");});
test("abgepfändet -> abgepfandet", function() {deepEqual( Stem("abgepfändet"), "abgepfandet");});
test("abgepflückt -> abgepfluckt", function() {deepEqual( Stem("abgepflückt"), "abgepfluckt");});
test("abgeplatzt -> abgeplatzt", function() {deepEqual( Stem("abgeplatzt"), "abgeplatzt");});
test("abgeraten -> abgerat", function() {deepEqual( Stem("abgeraten"), "abgerat");});
test("abgerieben -> abgerieb", function() {deepEqual( Stem("abgerieben"), "abgerieb");});
test("abgerissen -> abgeriss", function() {deepEqual( Stem("abgerissen"), "abgeriss");});
test("abgerissenen -> abgeriss", function() {deepEqual( Stem("abgerissenen"), "abgeriss");});
test("abgesandt -> abgesandt", function() {deepEqual( Stem("abgesandt"), "abgesandt");});
test("abgeschabtes -> abgeschabt", function() {deepEqual( Stem("abgeschabtes"), "abgeschabt");});
test("abgescheuert -> abgescheuert", function() {deepEqual( Stem("abgescheuert"), "abgescheuert");});
test("abgeschieden -> abgeschied", function() {deepEqual( Stem("abgeschieden"), "abgeschied");});
test("abgeschiedenen -> abgeschied", function() {deepEqual( Stem("abgeschiedenen"), "abgeschied");});
test("abgeschlagen -> abgeschlag", function() {deepEqual( Stem("abgeschlagen"), "abgeschlag");});
test("abgeschliffen -> abgeschliff", function() {deepEqual( Stem("abgeschliffen"), "abgeschliff");});
test("abgeschmolzen -> abgeschmolz", function() {deepEqual( Stem("abgeschmolzen"), "abgeschmolz");});
test("abgeschnitten -> abgeschnitt", function() {deepEqual( Stem("abgeschnitten"), "abgeschnitt");});
test("abgeschossenes -> abgeschoss", function() {deepEqual( Stem("abgeschossenes"), "abgeschoss");});
test("abgeschreckt -> abgeschreckt", function() {deepEqual( Stem("abgeschreckt"), "abgeschreckt");});
test("abgeschwächt -> abgeschwacht", function() {deepEqual( Stem("abgeschwächt"), "abgeschwacht");});
test("abgesehen -> abgeseh", function() {deepEqual( Stem("abgesehen"), "abgeseh");});
test("abgesessen -> abgesess", function() {deepEqual( Stem("abgesessen"), "abgesess");});
test("abgesondert -> abgesondert", function() {deepEqual( Stem("abgesondert"), "abgesondert");});
test("abgesonderten -> abgesondert", function() {deepEqual( Stem("abgesonderten"), "abgesondert");});
test("abgespannt -> abgespannt", function() {deepEqual( Stem("abgespannt"), "abgespannt");});
test("abgesperrt -> abgesperrt", function() {deepEqual( Stem("abgesperrt"), "abgesperrt");});
test("abgesprochen -> abgesproch", function() {deepEqual( Stem("abgesprochen"), "abgesproch");});
test("abgesprungen -> abgespr", function() {deepEqual( Stem("abgesprungen"), "abgespr");});
test("abgestellt -> abgestellt", function() {deepEqual( Stem("abgestellt"), "abgestellt");});
test("abgestohlene -> abgestohl", function() {deepEqual( Stem("abgestohlene"), "abgestohl");});
test("abgestossene -> abgestoss", function() {deepEqual( Stem("abgestossene"), "abgestoss");});
test("abgestritten -> abgestritt", function() {deepEqual( Stem("abgestritten"), "abgestritt");});
test("abgetan -> abgetan", function() {deepEqual( Stem("abgetan"), "abgetan");});
test("abgeteilt -> abgeteilt", function() {deepEqual( Stem("abgeteilt"), "abgeteilt");});
test("abgeteilten -> abgeteilt", function() {deepEqual( Stem("abgeteilten"), "abgeteilt");});
test("abgetötet -> abgetotet", function() {deepEqual( Stem("abgetötet"), "abgetotet");});
test("abgetreten -> abgetret", function() {deepEqual( Stem("abgetreten"), "abgetret");});
test("abgewandt -> abgewandt", function() {deepEqual( Stem("abgewandt"), "abgewandt");});
test("abgewandte -> abgewandt", function() {deepEqual( Stem("abgewandte"), "abgewandt");});
test("abgewandtem -> abgewandt", function() {deepEqual( Stem("abgewandtem"), "abgewandt");});
test("abgewartet -> abgewartet", function() {deepEqual( Stem("abgewartet"), "abgewartet");});
test("abgewaschen -> abgewasch", function() {deepEqual( Stem("abgewaschen"), "abgewasch");});
test("abgewendet -> abgewendet", function() {deepEqual( Stem("abgewendet"), "abgewendet");});
test("abgewetzte -> abgewetzt", function() {deepEqual( Stem("abgewetzte"), "abgewetzt");});
test("abgewetzten -> abgewetzt", function() {deepEqual( Stem("abgewetzten"), "abgewetzt");});
test("abgewichen -> abgewich", function() {deepEqual( Stem("abgewichen"), "abgewich");});
test("abgewickelt -> abgewickelt", function() {deepEqual( Stem("abgewickelt"), "abgewickelt");});
test("abgewinnen -> abgewinn", function() {deepEqual( Stem("abgewinnen"), "abgewinn");});
test("abgewirtschaftet -> abgewirtschaftet", function() {deepEqual( Stem("abgewirtschaftet"), "abgewirtschaftet");});
test("abgewogen -> abgewog", function() {deepEqual( Stem("abgewogen"), "abgewog");});
test("abgewöhnen -> abgewohn", function() {deepEqual( Stem("abgewöhnen"), "abgewohn");});
test("abgewürdigt -> abgewurdigt", function() {deepEqual( Stem("abgewürdigt"), "abgewurdigt");});
test("abgezäunt -> abgezaunt", function() {deepEqual( Stem("abgezäunt"), "abgezaunt");});
test("abgezehrt -> abgezehrt", function() {deepEqual( Stem("abgezehrt"), "abgezehrt");});
test("abgezirkelten -> abgezirkelt", function() {deepEqual( Stem("abgezirkelten"), "abgezirkelt");});
test("abgezogen -> abgezog", function() {deepEqual( Stem("abgezogen"), "abgezog");});
test("abgezogene -> abgezog", function() {deepEqual( Stem("abgezogene"), "abgezog");});
test("abgezogenen -> abgezog", function() {deepEqual( Stem("abgezogenen"), "abgezog");});
test("abgezogenheit -> abgezog", function() {deepEqual( Stem("abgezogenheit"), "abgezog");});
test("abgibt -> abgibt", function() {deepEqual( Stem("abgibt"), "abgibt");});
test("abglitten -> abglitt", function() {deepEqual( Stem("abglitten"), "abglitt");});
test("abgötterei -> abgotterei", function() {deepEqual( Stem("abgötterei"), "abgotterei");});
test("abgöttereien -> abgotterei", function() {deepEqual( Stem("abgöttereien"), "abgotterei");});
test("abgöttisches -> abgott", function() {deepEqual( Stem("abgöttisches"), "abgott");});
test("abgrund -> abgrund", function() {deepEqual( Stem("abgrund"), "abgrund");});
test("abgrunde -> abgrund", function() {deepEqual( Stem("abgrunde"), "abgrund");});
test("abgründe -> abgrund", function() {deepEqual( Stem("abgründe"), "abgrund");});
test("abgründen -> abgrund", function() {deepEqual( Stem("abgründen"), "abgrund");});
test("abgrundes -> abgrund", function() {deepEqual( Stem("abgrundes"), "abgrund");});
test("abgrunds -> abgrund", function() {deepEqual( Stem("abgrunds"), "abgrund");});
test("abhalten -> abhalt", function() {deepEqual( Stem("abhalten"), "abhalt");});
test("abhandlung -> abhandl", function() {deepEqual( Stem("abhandlung"), "abhandl");});
test("abhang -> abhang", function() {deepEqual( Stem("abhang"), "abhang");});
test("abhange -> abhang", function() {deepEqual( Stem("abhange"), "abhang");});
test("abhänge -> abhang", function() {deepEqual( Stem("abhänge"), "abhang");});
test("abhängen -> abhang", function() {deepEqual( Stem("abhängen"), "abhang");});
test("abhängend -> abhang", function() {deepEqual( Stem("abhängend"), "abhang");});
test("abhängig -> abhang", function() {deepEqual( Stem("abhängig"), "abhang");});
test("abhängigen -> abhang", function() {deepEqual( Stem("abhängigen"), "abhang");});
test("abhängiger -> abhang", function() {deepEqual( Stem("abhängiger"), "abhang");});
test("abhängigkeit -> abhang", function() {deepEqual( Stem("abhängigkeit"), "abhang");});
test("abhängt -> abhangt", function() {deepEqual( Stem("abhängt"), "abhangt");});
test("abhauen -> abhau", function() {deepEqual( Stem("abhauen"), "abhau");});
test("abhaut -> abhaut", function() {deepEqual( Stem("abhaut"), "abhaut");});
test("abhebenden -> abheb", function() {deepEqual( Stem("abhebenden"), "abheb");});
test("abhelfen -> abhelf", function() {deepEqual( Stem("abhelfen"), "abhelf");});
test("abhielten -> abhielt", function() {deepEqual( Stem("abhielten"), "abhielt");});
test("abhob -> abhob", function() {deepEqual( Stem("abhob"), "abhob");});
test("abhoben -> abhob", function() {deepEqual( Stem("abhoben"), "abhob");});
test("abholen -> abhol", function() {deepEqual( Stem("abholen"), "abhol");});
test("abholt -> abholt", function() {deepEqual( Stem("abholt"), "abholt");});
test("abhören -> abhor", function() {deepEqual( Stem("abhören"), "abhor");});
test("abi -> abi", function() {deepEqual( Stem("abi"), "abi");});
test("abiasaph -> abiasaph", function() {deepEqual( Stem("abiasaph"), "abiasaph");});
test("abigrissen -> abigriss", function() {deepEqual( Stem("abigrissen"), "abigriss");});
test("abigstiegen -> abigstieg", function() {deepEqual( Stem("abigstiegen"), "abigstieg");});
test("abihu -> abihu", function() {deepEqual( Stem("abihu"), "abihu");});
test("abimelech -> abimelech", function() {deepEqual( Stem("abimelech"), "abimelech");});
test("abirrung -> abirr", function() {deepEqual( Stem("abirrung"), "abirr");});
test("abirrungen -> abirr", function() {deepEqual( Stem("abirrungen"), "abirr");});
test("abjagen -> abjag", function() {deepEqual( Stem("abjagen"), "abjag");});
test("abkartelt -> abkartelt", function() {deepEqual( Stem("abkartelt"), "abkartelt");});
test("abkaufen -> abkauf", function() {deepEqual( Stem("abkaufen"), "abkauf");});
test("abkehr -> abkehr", function() {deepEqual( Stem("abkehr"), "abkehr");});
test("abklärungen -> abklar", function() {deepEqual( Stem("abklärungen"), "abklar");});
test("abkommens -> abkomm", function() {deepEqual( Stem("abkommens"), "abkomm");});
test("abkühlendes -> abkuhl", function() {deepEqual( Stem("abkühlendes"), "abkuhl");});
test("abkühlung -> abkuhl", function() {deepEqual( Stem("abkühlung"), "abkuhl");});
test("abkunft -> abkunft", function() {deepEqual( Stem("abkunft"), "abkunft");});
test("ablasse -> ablass", function() {deepEqual( Stem("ablasse"), "ablass");});
test("ablassen -> ablass", function() {deepEqual( Stem("ablassen"), "ablass");});
test("ablässt -> ablasst", function() {deepEqual( Stem("ablässt"), "ablasst");});
test("abläßt -> ablasst", function() {deepEqual( Stem("abläßt"), "ablasst");});
test("ablauf -> ablauf", function() {deepEqual( Stem("ablauf"), "ablauf");});
test("ablaufen -> ablauf", function() {deepEqual( Stem("ablaufen"), "ablauf");});
test("ablaufende -> ablauf", function() {deepEqual( Stem("ablaufende"), "ablauf");});
test("abläutete -> ablautet", function() {deepEqual( Stem("abläutete"), "ablautet");});
test("ablegen -> ableg", function() {deepEqual( Stem("ablegen"), "ableg");});
test("ablehnen -> ablehn", function() {deepEqual( Stem("ablehnen"), "ablehn");});
test("ablehnung -> ablehn", function() {deepEqual( Stem("ablehnung"), "ablehn");});
test("ableiten -> ableit", function() {deepEqual( Stem("ableiten"), "ableit");});
test("ableiter -> ableit", function() {deepEqual( Stem("ableiter"), "ableit");});
test("ableitet -> ableitet", function() {deepEqual( Stem("ableitet"), "ableitet");});
test("ableitungen -> ableit", function() {deepEqual( Stem("ableitungen"), "ableit");});
test("ablenken -> ablenk", function() {deepEqual( Stem("ablenken"), "ablenk");});
test("ablenkend -> ablenk", function() {deepEqual( Stem("ablenkend"), "ablenk");});
test("ablesen -> ables", function() {deepEqual( Stem("ablesen"), "ables");});
test("ablesend -> ables", function() {deepEqual( Stem("ablesend"), "ables");});
test("ablief -> ablief", function() {deepEqual( Stem("ablief"), "ablief");});
test("abliefe -> ablief", function() {deepEqual( Stem("abliefe"), "ablief");});
test("ablösung -> ablos", function() {deepEqual( Stem("ablösung"), "ablos");});
test("ablutschen -> ablutsch", function() {deepEqual( Stem("ablutschen"), "ablutsch");});
test("abmarschiert -> abmarschiert", function() {deepEqual( Stem("abmarschiert"), "abmarschiert");});
test("abmühten -> abmuht", function() {deepEqual( Stem("abmühten"), "abmuht");});
test("abnahm -> abnahm", function() {deepEqual( Stem("abnahm"), "abnahm");});
test("abnahme -> abnahm", function() {deepEqual( Stem("abnahme"), "abnahm");});
test("abnehmen -> abnehm", function() {deepEqual( Stem("abnehmen"), "abnehm");});
test("abnehmende -> abnehm", function() {deepEqual( Stem("abnehmende"), "abnehm");});
test("abnehmenden -> abnehm", function() {deepEqual( Stem("abnehmenden"), "abnehm");});
test("abneigung -> abneig", function() {deepEqual( Stem("abneigung"), "abneig");});
test("abnimmt -> abnimmt", function() {deepEqual( Stem("abnimmt"), "abnimmt");});
test("abnutzen -> abnutz", function() {deepEqual( Stem("abnutzen"), "abnutz");});
test("aböden -> abod", function() {deepEqual( Stem("aböden"), "abod");});
test("abödet -> abodet", function() {deepEqual( Stem("abödet"), "abodet");});
test("abödung -> abod", function() {deepEqual( Stem("abödung"), "abod");});
test("abödungen -> abod", function() {deepEqual( Stem("abödungen"), "abod");});
test("abolent -> abolent", function() {deepEqual( Stem("abolent"), "abolent");});
test("abonnieren -> abonni", function() {deepEqual( Stem("abonnieren"), "abonni");});
test("about -> about", function() {deepEqual( Stem("about"), "about");});
test("abquälen -> abqual", function() {deepEqual( Stem("abquälen"), "abqual");});
test("abraham -> abraham", function() {deepEqual( Stem("abraham"), "abraham");});
test("abrahams -> abraham", function() {deepEqual( Stem("abrahams"), "abraham");});
test("abram -> abram", function() {deepEqual( Stem("abram"), "abram");});
test("abrams -> abram", function() {deepEqual( Stem("abrams"), "abram");});
test("abraten -> abrat", function() {deepEqual( Stem("abraten"), "abrat");});
test("abrechnen -> abrechn", function() {deepEqual( Stem("abrechnen"), "abrechn");});
test("abrede -> abred", function() {deepEqual( Stem("abrede"), "abred");});
test("abreiben -> abreib", function() {deepEqual( Stem("abreiben"), "abreib");});
test("abreise -> abreis", function() {deepEqual( Stem("abreise"), "abreis");});
test("abreissen -> abreiss", function() {deepEqual( Stem("abreissen"), "abreiss");});
test("abreißen -> abreiss", function() {deepEqual( Stem("abreißen"), "abreiss");});
test("abrisse -> abriss", function() {deepEqual( Stem("abrisse"), "abriss");});
test("abrufen -> abruf", function() {deepEqual( Stem("abrufen"), "abruf");});
test("abrundung -> abrund", function() {deepEqual( Stem("abrundung"), "abrund");});
test("absage -> absag", function() {deepEqual( Stem("absage"), "absag");});
test("absalon -> absalon", function() {deepEqual( Stem("absalon"), "absalon");});
test("absatz -> absatz", function() {deepEqual( Stem("absatz"), "absatz");});
test("abschaffen -> abschaff", function() {deepEqual( Stem("abschaffen"), "abschaff");});
test("abschaffung -> abschaff", function() {deepEqual( Stem("abschaffung"), "abschaff");});
test("abschaum -> abschaum", function() {deepEqual( Stem("abschaum"), "abschaum");});
test("abscheu -> abscheu", function() {deepEqual( Stem("abscheu"), "abscheu");});
test("abscheuern -> abscheu", function() {deepEqual( Stem("abscheuern"), "abscheu");});
test("abscheues -> abscheu", function() {deepEqual( Stem("abscheues"), "abscheu");});
test("abscheulich -> abscheulich", function() {deepEqual( Stem("abscheulich"), "abscheulich");});
test("abscheuliche -> abscheulich", function() {deepEqual( Stem("abscheuliche"), "abscheulich");});
test("abscheulichen -> abscheulich", function() {deepEqual( Stem("abscheulichen"), "abscheulich");});
test("abscheulicher -> abscheulich", function() {deepEqual( Stem("abscheulicher"), "abscheulich");});
test("abscheulicheres -> abscheulich", function() {deepEqual( Stem("abscheulicheres"), "abscheulich");});
test("abscheuliches -> abscheulich", function() {deepEqual( Stem("abscheuliches"), "abscheulich");});
test("abscheulichste -> abscheulich", function() {deepEqual( Stem("abscheulichste"), "abscheulich");});
test("abscheus -> abscheus", function() {deepEqual( Stem("abscheus"), "abscheus");});
test("abschied -> abschied", function() {deepEqual( Stem("abschied"), "abschied");});
test("abschiedes -> abschied", function() {deepEqual( Stem("abschiedes"), "abschied");});
test("abschiessen -> abschiess", function() {deepEqual( Stem("abschiessen"), "abschiess");});
test("abschlagen -> abschlag", function() {deepEqual( Stem("abschlagen"), "abschlag");});
test("abschlägt -> abschlagt", function() {deepEqual( Stem("abschlägt"), "abschlagt");});
test("abschliessen -> abschliess", function() {deepEqual( Stem("abschliessen"), "abschliess");});
test("abschliessender -> abschliess", function() {deepEqual( Stem("abschliessender"), "abschliess");});
test("abschliesst -> abschliesst", function() {deepEqual( Stem("abschliesst"), "abschliesst");});
test("abschließt -> abschliesst", function() {deepEqual( Stem("abschließt"), "abschliesst");});
test("abschliessung -> abschliess", function() {deepEqual( Stem("abschliessung"), "abschliess");});
test("abschließung -> abschliess", function() {deepEqual( Stem("abschließung"), "abschliess");});
test("abschloss -> abschloss", function() {deepEqual( Stem("abschloss"), "abschloss");});
test("abschlug -> abschlug", function() {deepEqual( Stem("abschlug"), "abschlug");});
test("abschluss -> abschluss", function() {deepEqual( Stem("abschluss"), "abschluss");});
test("abschluß -> abschluss", function() {deepEqual( Stem("abschluß"), "abschluss");});
test("abschneiden -> abschneid", function() {deepEqual( Stem("abschneiden"), "abschneid");});
test("abschneidung -> abschneid", function() {deepEqual( Stem("abschneidung"), "abschneid");});
test("abschnitt -> abschnitt", function() {deepEqual( Stem("abschnitt"), "abschnitt");});
test("abschnitte -> abschnitt", function() {deepEqual( Stem("abschnitte"), "abschnitt");});
test("abschnitten -> abschnitt", function() {deepEqual( Stem("abschnitten"), "abschnitt");});
test("abschnitts -> abschnitt", function() {deepEqual( Stem("abschnitts"), "abschnitt");});
test("abschrecken -> abschreck", function() {deepEqual( Stem("abschrecken"), "abschreck");});
test("abschrieb -> abschrieb", function() {deepEqual( Stem("abschrieb"), "abschrieb");});
test("abschrift -> abschrift", function() {deepEqual( Stem("abschrift"), "abschrift");});
test("abschüsse -> abschuss", function() {deepEqual( Stem("abschüsse"), "abschuss");});
test("abschüssigen -> abschuss", function() {deepEqual( Stem("abschüssigen"), "abschuss");});
test("abschütteln -> abschutteln", function() {deepEqual( Stem("abschütteln"), "abschutteln");});
test("abschüttelten -> abschuttelt", function() {deepEqual( Stem("abschüttelten"), "abschuttelt");});
test("abschwächt -> abschwacht", function() {deepEqual( Stem("abschwächt"), "abschwacht");});
test("abschweifungen -> abschweif", function() {deepEqual( Stem("abschweifungen"), "abschweif");});
test("abschwenken -> abschwenk", function() {deepEqual( Stem("abschwenken"), "abschwenk");});
test("absehbar -> absehbar", function() {deepEqual( Stem("absehbar"), "absehbar");});
test("absehen -> abseh", function() {deepEqual( Stem("absehen"), "abseh");});
test("absehlichen -> abseh", function() {deepEqual( Stem("absehlichen"), "abseh");});
test("abseits -> abseit", function() {deepEqual( Stem("abseits"), "abseit");});
test("absenden -> absend", function() {deepEqual( Stem("absenden"), "absend");});
test("absender -> absend", function() {deepEqual( Stem("absender"), "absend");});
test("absetzen -> absetz", function() {deepEqual( Stem("absetzen"), "absetz");});
test("absetzte -> absetzt", function() {deepEqual( Stem("absetzte"), "absetzt");});
test("absicht -> absicht", function() {deepEqual( Stem("absicht"), "absicht");});
test("absichten -> absicht", function() {deepEqual( Stem("absichten"), "absicht");});
test("absichtlich -> absicht", function() {deepEqual( Stem("absichtlich"), "absicht");});
test("absieht -> absieht", function() {deepEqual( Stem("absieht"), "absieht");});
test("absingung -> absing", function() {deepEqual( Stem("absingung"), "absing");});
test("absolut -> absolut", function() {deepEqual( Stem("absolut"), "absolut");});
test("absolute -> absolut", function() {deepEqual( Stem("absolute"), "absolut");});
test("absolutes -> absolut", function() {deepEqual( Stem("absolutes"), "absolut");});
test("absolviert -> absolviert", function() {deepEqual( Stem("absolviert"), "absolviert");});
test("absolvierte -> absolviert", function() {deepEqual( Stem("absolvierte"), "absolviert");});
test("absonderliche -> absond", function() {deepEqual( Stem("absonderliche"), "absond");});
test("absonderlichen -> absond", function() {deepEqual( Stem("absonderlichen"), "absond");});
test("absonderlicher -> absond", function() {deepEqual( Stem("absonderlicher"), "absond");});
test("absondert -> absondert", function() {deepEqual( Stem("absondert"), "absondert");});
test("absonderungen -> absonder", function() {deepEqual( Stem("absonderungen"), "absonder");});
test("abspenstig -> abspenst", function() {deepEqual( Stem("abspenstig"), "abspenst");});
test("abspielten -> abspielt", function() {deepEqual( Stem("abspielten"), "abspielt");});
test("absprang -> absprang", function() {deepEqual( Stem("absprang"), "absprang");});
test("abspringend -> abspring", function() {deepEqual( Stem("abspringend"), "abspring");});
test("abspülen -> abspul", function() {deepEqual( Stem("abspülen"), "abspul");});
test("abstahl -> abstahl", function() {deepEqual( Stem("abstahl"), "abstahl");});
test("abstamme -> abstamm", function() {deepEqual( Stem("abstamme"), "abstamm");});
test("abstammen -> abstamm", function() {deepEqual( Stem("abstammen"), "abstamm");});
test("abstammenden -> abstamm", function() {deepEqual( Stem("abstammenden"), "abstamm");});
test("abstammte -> abstammt", function() {deepEqual( Stem("abstammte"), "abstammt");});
test("abstammten -> abstammt", function() {deepEqual( Stem("abstammten"), "abstammt");});
test("abstammung -> abstamm", function() {deepEqual( Stem("abstammung"), "abstamm");});
test("abstammungen -> abstamm", function() {deepEqual( Stem("abstammungen"), "abstamm");});
test("abstatten -> abstatt", function() {deepEqual( Stem("abstatten"), "abstatt");});
test("abstechend -> abstech", function() {deepEqual( Stem("abstechend"), "abstech");});
test("abstecher -> abstech", function() {deepEqual( Stem("abstecher"), "abstech");});
test("abstehen -> absteh", function() {deepEqual( Stem("abstehen"), "absteh");});
test("absteht -> absteht", function() {deepEqual( Stem("absteht"), "absteht");});
test("absteigen -> absteig", function() {deepEqual( Stem("absteigen"), "absteig");});
test("abstellte -> abstellt", function() {deepEqual( Stem("abstellte"), "abstellt");});
test("abstimmung -> abstimm", function() {deepEqual( Stem("abstimmung"), "abstimm");});
test("abstimmungdie -> abstimmungdi", function() {deepEqual( Stem("abstimmungdie"), "abstimmungdi");});
test("abstirbt -> abstirbt", function() {deepEqual( Stem("abstirbt"), "abstirbt");});
test("abstossendes -> abstoss", function() {deepEqual( Stem("abstossendes"), "abstoss");});
test("abstoßendes -> abstoss", function() {deepEqual( Stem("abstoßendes"), "abstoss");});
test("abstracto -> abstracto", function() {deepEqual( Stem("abstracto"), "abstracto");});
test("abstrahieren -> abstrahi", function() {deepEqual( Stem("abstrahieren"), "abstrahi");});
test("abstrahiert -> abstrahiert", function() {deepEqual( Stem("abstrahiert"), "abstrahiert");});
test("abstrakt -> abstrakt", function() {deepEqual( Stem("abstrakt"), "abstrakt");});
test("abstrakten -> abstrakt", function() {deepEqual( Stem("abstrakten"), "abstrakt");});
test("abstrakter -> abstrakt", function() {deepEqual( Stem("abstrakter"), "abstrakt");});
test("abstraktion -> abstraktion", function() {deepEqual( Stem("abstraktion"), "abstraktion");});
test("abstreiten -> abstreit", function() {deepEqual( Stem("abstreiten"), "abstreit");});
test("abstufungen -> abstuf", function() {deepEqual( Stem("abstufungen"), "abstuf");});
test("abstumpfung -> abstumpf", function() {deepEqual( Stem("abstumpfung"), "abstumpf");});
test("absturz -> absturz", function() {deepEqual( Stem("absturz"), "absturz");});
test("abstürze -> absturz", function() {deepEqual( Stem("abstürze"), "absturz");});
test("abstürzen -> absturz", function() {deepEqual( Stem("abstürzen"), "absturz");});
test("absuchen -> absuch", function() {deepEqual( Stem("absuchen"), "absuch");});
test("absuchte -> absucht", function() {deepEqual( Stem("absuchte"), "absucht");});
test("absurden -> absurd", function() {deepEqual( Stem("absurden"), "absurd");});
test("abteilung -> abteil", function() {deepEqual( Stem("abteilung"), "abteil");});
test("abteilungen -> abteil", function() {deepEqual( Stem("abteilungen"), "abteil");});
test("abtraten -> abtrat", function() {deepEqual( Stem("abtraten"), "abtrat");});
test("abtreiben -> abtreib", function() {deepEqual( Stem("abtreiben"), "abtreib");});
test("abtreten -> abtret", function() {deepEqual( Stem("abtreten"), "abtret");});
test("abtun -> abtun", function() {deepEqual( Stem("abtun"), "abtun");});
test("aburteilen -> aburteil", function() {deepEqual( Stem("aburteilen"), "aburteil");});
test("abwandte -> abwandt", function() {deepEqual( Stem("abwandte"), "abwandt");});
test("abwarten -> abwart", function() {deepEqual( Stem("abwarten"), "abwart");});
test("abwärts -> abwart", function() {deepEqual( Stem("abwärts"), "abwart");});
test("abwärtsrichtung -> abwartsricht", function() {deepEqual( Stem("abwärtsrichtung"), "abwartsricht");});
test("abwaschbaren -> abwaschbar", function() {deepEqual( Stem("abwaschbaren"), "abwaschbar");});
test("abwaschen -> abwasch", function() {deepEqual( Stem("abwaschen"), "abwasch");});
test("abwaschung -> abwasch", function() {deepEqual( Stem("abwaschung"), "abwasch");});
test("abwechselnd -> abwechselnd", function() {deepEqual( Stem("abwechselnd"), "abwechselnd");});
test("abwechselndem -> abwechselnd", function() {deepEqual( Stem("abwechselndem"), "abwechselnd");});
test("abwechselnder -> abwechselnd", function() {deepEqual( Stem("abwechselnder"), "abwechselnd");});
test("abwechselung -> abwechsel", function() {deepEqual( Stem("abwechselung"), "abwechsel");});
test("abwechslung -> abwechsl", function() {deepEqual( Stem("abwechslung"), "abwechsl");});
test("abwege -> abweg", function() {deepEqual( Stem("abwege"), "abweg");});
test("abwehr -> abwehr", function() {deepEqual( Stem("abwehr"), "abwehr");});
test("abwehrend -> abwehr", function() {deepEqual( Stem("abwehrend"), "abwehr");});
test("abwehrendes -> abwehr", function() {deepEqual( Stem("abwehrendes"), "abwehr");});
test("abwehrmassnahme -> abwehrmassnahm", function() {deepEqual( Stem("abwehrmassnahme"), "abwehrmassnahm");});
test("abwehrung -> abwehr", function() {deepEqual( Stem("abwehrung"), "abwehr");});
test("abweichen -> abweich", function() {deepEqual( Stem("abweichen"), "abweich");});
test("abweicht -> abweicht", function() {deepEqual( Stem("abweicht"), "abweicht");});
test("abweichung -> abweich", function() {deepEqual( Stem("abweichung"), "abweich");});
test("abweiden -> abweid", function() {deepEqual( Stem("abweiden"), "abweid");});
test("abweisen -> abweis", function() {deepEqual( Stem("abweisen"), "abweis");});
test("abweisend -> abweis", function() {deepEqual( Stem("abweisend"), "abweis");});
test("abweist -> abweist", function() {deepEqual( Stem("abweist"), "abweist");});
test("abweisung -> abweis", function() {deepEqual( Stem("abweisung"), "abweis");});
test("abwende -> abwend", function() {deepEqual( Stem("abwende"), "abwend");});
test("abwenden -> abwend", function() {deepEqual( Stem("abwenden"), "abwend");});
test("abwendend -> abwend", function() {deepEqual( Stem("abwendend"), "abwend");});
test("abwendet -> abwendet", function() {deepEqual( Stem("abwendet"), "abwendet");});
test("abwendig -> abwend", function() {deepEqual( Stem("abwendig"), "abwend");});
test("abwendung -> abwend", function() {deepEqual( Stem("abwendung"), "abwend");});
test("abwerfen -> abwerf", function() {deepEqual( Stem("abwerfen"), "abwerf");});
test("abwesend -> abwes", function() {deepEqual( Stem("abwesend"), "abwes");});
test("abwesenden -> abwes", function() {deepEqual( Stem("abwesenden"), "abwes");});
test("abwesenheit -> abwes", function() {deepEqual( Stem("abwesenheit"), "abwes");});
test("abwich -> abwich", function() {deepEqual( Stem("abwich"), "abwich");});
test("abwickeln -> abwickeln", function() {deepEqual( Stem("abwickeln"), "abwickeln");});
test("abwinkte -> abwinkt", function() {deepEqual( Stem("abwinkte"), "abwinkt");});
test("abwischen -> abwisch", function() {deepEqual( Stem("abwischen"), "abwisch");});
test("abwischte -> abwischt", function() {deepEqual( Stem("abwischte"), "abwischt");});
test("abwürdigten -> abwurdigt", function() {deepEqual( Stem("abwürdigten"), "abwurdigt");});
test("abwusch -> abwusch", function() {deepEqual( Stem("abwusch"), "abwusch");});
test("abzehrung -> abzehr", function() {deepEqual( Stem("abzehrung"), "abzehr");});
test("abziehen -> abzieh", function() {deepEqual( Stem("abziehen"), "abzieh");});
test("abziehenden -> abzieh", function() {deepEqual( Stem("abziehenden"), "abzieh");});
test("abzielen -> abziel", function() {deepEqual( Stem("abzielen"), "abziel");});
test("abzielt -> abzielt", function() {deepEqual( Stem("abzielt"), "abzielt");});
test("abzubeuteln -> abzubeuteln", function() {deepEqual( Stem("abzubeuteln"), "abzubeuteln");});
test("abzubinden -> abzubind", function() {deepEqual( Stem("abzubinden"), "abzubind");});
test("abzubringen -> abzubring", function() {deepEqual( Stem("abzubringen"), "abzubring");});
test("abzufinden -> abzufind", function() {deepEqual( Stem("abzufinden"), "abzufind");});
test("abzuflauen -> abzuflau", function() {deepEqual( Stem("abzuflauen"), "abzuflau");});
test("abzug -> abzug", function() {deepEqual( Stem("abzug"), "abzug");});
test("abzuge -> abzug", function() {deepEqual( Stem("abzuge"), "abzug");});
test("abzugeben -> abzugeb", function() {deepEqual( Stem("abzugeben"), "abzugeb");});
test("abzugewinnen -> abzugewinn", function() {deepEqual( Stem("abzugewinnen"), "abzugewinn");});
test("abzugsgräben -> abzugsgrab", function() {deepEqual( Stem("abzugsgräben"), "abzugsgrab");});
test("abzugsschnur -> abzugsschnur", function() {deepEqual( Stem("abzugsschnur"), "abzugsschnur");});
test("abzuhalten -> abzuhalt", function() {deepEqual( Stem("abzuhalten"), "abzuhalt");});
test("abzuholen -> abzuhol", function() {deepEqual( Stem("abzuholen"), "abzuhol");});
test("abzuhören -> abzuhor", function() {deepEqual( Stem("abzuhören"), "abzuhor");});
test("abzukühlen -> abzukuhl", function() {deepEqual( Stem("abzukühlen"), "abzukuhl");});
test("abzukürzen -> abzukurz", function() {deepEqual( Stem("abzukürzen"), "abzukurz");});
test("abzuladen -> abzulad", function() {deepEqual( Stem("abzuladen"), "abzulad");});
test("abzulassen -> abzulass", function() {deepEqual( Stem("abzulassen"), "abzulass");});
test("abzulaufen -> abzulauf", function() {deepEqual( Stem("abzulaufen"), "abzulauf");});
test("abzulauschen -> abzulausch", function() {deepEqual( Stem("abzulauschen"), "abzulausch");});
test("abzulegen -> abzuleg", function() {deepEqual( Stem("abzulegen"), "abzuleg");});
test("abzulehnenden -> abzulehn", function() {deepEqual( Stem("abzulehnenden"), "abzulehn");});
test("abzuleugnen -> abzuleugn", function() {deepEqual( Stem("abzuleugnen"), "abzuleugn");});
test("abzumachen -> abzumach", function() {deepEqual( Stem("abzumachen"), "abzumach");});
test("abzupflücken -> abzupfluck", function() {deepEqual( Stem("abzupflücken"), "abzupfluck");});
test("abzureisen -> abzureis", function() {deepEqual( Stem("abzureisen"), "abzureis");});
test("abzureissen -> abzureiss", function() {deepEqual( Stem("abzureissen"), "abzureiss");});
test("abzuschicken -> abzuschick", function() {deepEqual( Stem("abzuschicken"), "abzuschick");});
test("abzuschlagen -> abzuschlag", function() {deepEqual( Stem("abzuschlagen"), "abzuschlag");});
test("abzuschliessen -> abzuschliess", function() {deepEqual( Stem("abzuschliessen"), "abzuschliess");});
test("abzuschrecken -> abzuschreck", function() {deepEqual( Stem("abzuschrecken"), "abzuschreck");});
test("abzuschütteln -> abzuschutteln", function() {deepEqual( Stem("abzuschütteln"), "abzuschutteln");});
test("abzusehen -> abzuseh", function() {deepEqual( Stem("abzusehen"), "abzuseh");});
test("abzusprengen -> abzuspreng", function() {deepEqual( Stem("abzusprengen"), "abzuspreng");});
test("abzustehen -> abzusteh", function() {deepEqual( Stem("abzustehen"), "abzusteh");});
test("abzustreiten -> abzustreit", function() {deepEqual( Stem("abzustreiten"), "abzustreit");});
test("abzustumpfen -> abzustumpf", function() {deepEqual( Stem("abzustumpfen"), "abzustumpf");});
test("abzutreten -> abzutret", function() {deepEqual( Stem("abzutreten"), "abzutret");});
test("abzuwarten -> abzuwart", function() {deepEqual( Stem("abzuwarten"), "abzuwart");});
test("abzuwehren -> abzuwehr", function() {deepEqual( Stem("abzuwehren"), "abzuwehr");});
test("abzuwenden -> abzuw", function() {deepEqual( Stem("abzuwenden"), "abzuw");});
test("abzuwischen -> abzuw", function() {deepEqual( Stem("abzuwischen"), "abzuw");});
test("abzuziehen -> abzuzieh", function() {deepEqual( Stem("abzuziehen"), "abzuzieh");});
test("abzweckt -> abzweckt", function() {deepEqual( Stem("abzweckt"), "abzweckt");});
test("abzweckung -> abzweck", function() {deepEqual( Stem("abzweckung"), "abzweck");});
test("accidens -> accid", function() {deepEqual( Stem("accidens"), "accid");});
test("ach -> ach", function() {deepEqual( Stem("ach"), "ach");});
test("achias -> achias", function() {deepEqual( Stem("achias"), "achias");});
test("achijas -> achijas", function() {deepEqual( Stem("achijas"), "achijas");});
test("achis -> achis", function() {deepEqual( Stem("achis"), "achis");});
test("achitophel -> achitophel", function() {deepEqual( Stem("achitophel"), "achitophel");});
test("achseln -> achseln", function() {deepEqual( Stem("achseln"), "achseln");});
test("achselzucken -> achselzuck", function() {deepEqual( Stem("achselzucken"), "achselzuck");});
test("achselzuckend -> achselzuck", function() {deepEqual( Stem("achselzuckend"), "achselzuck");});
test("acht -> acht", function() {deepEqual( Stem("acht"), "acht");});
test("achtbarsten -> achtbarst", function() {deepEqual( Stem("achtbarsten"), "achtbarst");});
test("achte -> acht", function() {deepEqual( Stem("achte"), "acht");});
test("achten -> acht", function() {deepEqual( Stem("achten"), "acht");});
test("achtes -> acht", function() {deepEqual( Stem("achtes"), "acht");});
test("achtet -> achtet", function() {deepEqual( Stem("achtet"), "achtet");});
test("achtete -> achtet", function() {deepEqual( Stem("achtete"), "achtet");});
test("achteten -> achtet", function() {deepEqual( Stem("achteten"), "achtet");});
test("achtgab -> achtgab", function() {deepEqual( Stem("achtgab"), "achtgab");});
test("achtgeben -> achtgeb", function() {deepEqual( Stem("achtgeben"), "achtgeb");});
test("achtgegeben -> achtgegeb", function() {deepEqual( Stem("achtgegeben"), "achtgegeb");});
test("achthundert -> achthundert", function() {deepEqual( Stem("achthundert"), "achthundert");});
test("achtjähriges -> achtjahr", function() {deepEqual( Stem("achtjähriges"), "achtjahr");});
test("achtliche -> achtlich", function() {deepEqual( Stem("achtliche"), "achtlich");});
test("achtlos -> achtlos", function() {deepEqual( Stem("achtlos"), "achtlos");});
test("achtlose -> achtlos", function() {deepEqual( Stem("achtlose"), "achtlos");});
test("achtsam -> achtsam", function() {deepEqual( Stem("achtsam"), "achtsam");});
test("achtsamkeit -> achtsam", function() {deepEqual( Stem("achtsamkeit"), "achtsam");});
test("achtundvierzig -> achtundvierz", function() {deepEqual( Stem("achtundvierzig"), "achtundvierz");});
test("achtundzwanzig -> achtundzwanz", function() {deepEqual( Stem("achtundzwanzig"), "achtundzwanz");});
test("achtung -> achtung", function() {deepEqual( Stem("achtung"), "achtung");});
test("achtungsvoller -> achtungsvoll", function() {deepEqual( Stem("achtungsvoller"), "achtungsvoll");});
test("achtungsvolles -> achtungsvoll", function() {deepEqual( Stem("achtungsvolles"), "achtungsvoll");});
test("achtungswerten -> achtungswert", function() {deepEqual( Stem("achtungswerten"), "achtungswert");});
test("achtzehn -> achtzehn", function() {deepEqual( Stem("achtzehn"), "achtzehn");});
test("achtzehnjährigem -> achtzehnjahr", function() {deepEqual( Stem("achtzehnjährigem"), "achtzehnjahr");});
test("achtzehnjährigen -> achtzehnjahr", function() {deepEqual( Stem("achtzehnjährigen"), "achtzehnjahr");});
test("achtzig -> achtzig", function() {deepEqual( Stem("achtzig"), "achtzig");});
test("achtziger -> achtzig", function() {deepEqual( Stem("achtziger"), "achtzig");});
test("achtzugeben -> achtzugeb", function() {deepEqual( Stem("achtzugeben"), "achtzugeb");});
test("ächzen -> achz", function() {deepEqual( Stem("ächzen"), "achz");});
test("ächzendes -> achzend", function() {deepEqual( Stem("ächzendes"), "achzend");});
test("acker -> ack", function() {deepEqual( Stem("acker"), "ack");});
test("äcker -> ack", function() {deepEqual( Stem("äcker"), "ack");});
test("ackerfeld -> ackerfeld", function() {deepEqual( Stem("ackerfeld"), "ackerfeld");});
test("ackerland -> ackerland", function() {deepEqual( Stem("ackerland"), "ackerland");});
test("ackerleute -> ackerleut", function() {deepEqual( Stem("ackerleute"), "ackerleut");});
test("äckern -> ack", function() {deepEqual( Stem("äckern"), "ack");});
test("ackers -> ack", function() {deepEqual( Stem("ackers"), "ack");});
test("ackersmann -> ackersmann", function() {deepEqual( Stem("ackersmann"), "ackersmann");});
test("ackerstein -> ackerstein", function() {deepEqual( Stem("ackerstein"), "ackerstein");});
test("ackerstreifen -> ackerstreif", function() {deepEqual( Stem("ackerstreifen"), "ackerstreif");});
test("ackerwirtschaft -> ackerwirtschaft", function() {deepEqual( Stem("ackerwirtschaft"), "ackerwirtschaft");});
test("ackerzipfel -> ackerzipfel", function() {deepEqual( Stem("ackerzipfel"), "ackerzipfel");});
test("ackerzipfelchen -> ackerzipfelch", function() {deepEqual( Stem("ackerzipfelchen"), "ackerzipfelch");});
test("ad -> ad", function() {deepEqual( Stem("ad"), "ad");});
test("ada -> ada", function() {deepEqual( Stem("ada"), "ada");});
test("adah -> adah", function() {deepEqual( Stem("adah"), "adah");});
test("adam -> adam", function() {deepEqual( Stem("adam"), "adam");});
test("adamah -> adamah", function() {deepEqual( Stem("adamah"), "adamah");});
test("adams -> adam", function() {deepEqual( Stem("adams"), "adam");});
test("adamshof -> adamshof", function() {deepEqual( Stem("adamshof"), "adamshof");});
test("adäquat -> adaquat", function() {deepEqual( Stem("adäquat"), "adaquat");});
test("adäquaten -> adaquat", function() {deepEqual( Stem("adäquaten"), "adaquat");});
test("ade -> ade", function() {deepEqual( Stem("ade"), "ade");});
test("adel -> adel", function() {deepEqual( Stem("adel"), "adel");});
test("adelaide -> adelaid", function() {deepEqual( Stem("adelaide"), "adelaid");});
test("adele -> adel", function() {deepEqual( Stem("adele"), "adel");});
test("adelsgespons -> adelsgespon", function() {deepEqual( Stem("adelsgespons"), "adelsgespon");});
test("adelsherrn -> adelsherrn", function() {deepEqual( Stem("adelsherrn"), "adelsherrn");});
test("adelshochmut -> adelshochmut", function() {deepEqual( Stem("adelshochmut"), "adelshochmut");});
test("adelsliebchen -> adelsliebch", function() {deepEqual( Stem("adelsliebchen"), "adelsliebch");});
test("adepten -> adept", function() {deepEqual( Stem("adepten"), "adept");});
test("ader -> ader", function() {deepEqual( Stem("ader"), "ader");});
test("aderlassen -> aderlass", function() {deepEqual( Stem("aderlassen"), "aderlass");});
test("aderlassmännchen -> aderlassmannch", function() {deepEqual( Stem("aderlassmännchen"), "aderlassmannch");});
test("adern -> adern", function() {deepEqual( Stem("adern"), "adern");});
test("adieu -> adieu", function() {deepEqual( Stem("adieu"), "adieu");});
test("adjektiv -> adjektiv", function() {deepEqual( Stem("adjektiv"), "adjektiv");});
test("adler -> adl", function() {deepEqual( Stem("adler"), "adl");});
test("adlerflügeln -> adlerflugeln", function() {deepEqual( Stem("adlerflügeln"), "adlerflugeln");});
test("adlerweibchen -> adlerweibch", function() {deepEqual( Stem("adlerweibchen"), "adlerweibch");});
test("adn -> adn", function() {deepEqual( Stem("adn"), "adn");});
test("adoration -> adoration", function() {deepEqual( Stem("adoration"), "adoration");});
test("adresse -> adress", function() {deepEqual( Stem("adresse"), "adress");});
test("advanced -> advanced", function() {deepEqual( Stem("advanced"), "advanced");});
test("advokat -> advokat", function() {deepEqual( Stem("advokat"), "advokat");});
test("advokaten -> advokat", function() {deepEqual( Stem("advokaten"), "advokat");});
test("advokatenarbeit -> advokatenarbeit", function() {deepEqual( Stem("advokatenarbeit"), "advokatenarbeit");});
test("advokatenkreisen -> advokatenkreis", function() {deepEqual( Stem("advokatenkreisen"), "advokatenkreis");});
test("advokatenzimmer -> advokatenzimm", function() {deepEqual( Stem("advokatenzimmer"), "advokatenzimm");});
test("aeternitatis -> aeternitatis", function() {deepEqual( Stem("aeternitatis"), "aeternitatis");});
test("affäre -> affar", function() {deepEqual( Stem("affäre"), "affar");});
test("äffchen -> affch", function() {deepEqual( Stem("äffchen"), "affch");});
test("affe -> aff", function() {deepEqual( Stem("affe"), "aff");});
test("affectio -> affectio", function() {deepEqual( Stem("affectio"), "affectio");});
test("affectiones -> affection", function() {deepEqual( Stem("affectiones"), "affection");});
test("affekt -> affekt", function() {deepEqual( Stem("affekt"), "affekt");});
test("affen -> aff", function() {deepEqual( Stem("affen"), "aff");});
test("äffen -> aff", function() {deepEqual( Stem("äffen"), "aff");});
test("affenschwänze -> affenschwanz", function() {deepEqual( Stem("affenschwänze"), "affenschwanz");});
test("affinitates -> affinitat", function() {deepEqual( Stem("affinitates"), "affinitat");});
test("affizierenden -> affizier", function() {deepEqual( Stem("affizierenden"), "affizier");});
test("affiziert -> affiziert", function() {deepEqual( Stem("affiziert"), "affiziert");});
test("affizierten -> affiziert", function() {deepEqual( Stem("affizierten"), "affiziert");});
test("afrika -> afrika", function() {deepEqual( Stem("afrika"), "afrika");});
test("afrikanischen -> afrikan", function() {deepEqual( Stem("afrikanischen"), "afrikan");});
test("aftermiete -> aftermiet", function() {deepEqual( Stem("aftermiete"), "aftermiet");});
test("againdabei -> againdabei", function() {deepEqual( Stem("againdabei"), "againdabei");});
test("agathon -> agathon", function() {deepEqual( Stem("agathon"), "agathon");});
test("agck -> agck", function() {deepEqual( Stem("agck"), "agck");});
test("agent -> agent", function() {deepEqual( Stem("agent"), "agent");});
test("agenten -> agent", function() {deepEqual( Stem("agenten"), "agent");});
test("ager -> ager", function() {deepEqual( Stem("ager"), "ager");});
test("agnetendorfer -> agnetendorf", function() {deepEqual( Stem("agnetendorfer"), "agnetendorf");});
test("agwnistikon -> agwnistikon", function() {deepEqual( Stem("agwnistikon"), "agwnistikon");});
test("ägypten -> agypt", function() {deepEqual( Stem("ägypten"), "agypt");});
test("ägyptenland -> agyptenland", function() {deepEqual( Stem("ägyptenland"), "agyptenland");});
test("ägyptenlandes -> agyptenland", function() {deepEqual( Stem("ägyptenlandes"), "agyptenland");});
test("ägyptenlands -> agyptenland", function() {deepEqual( Stem("ägyptenlands"), "agyptenland");});
test("ägyptens -> agypt", function() {deepEqual( Stem("ägyptens"), "agypt");});
test("ägypter -> agypt", function() {deepEqual( Stem("ägypter"), "agypt");});
test("ägyptern -> agypt", function() {deepEqual( Stem("ägyptern"), "agypt");});
test("ägypters -> agypt", function() {deepEqual( Stem("ägypters"), "agypt");});
test("ägyptischen -> agypt", function() {deepEqual( Stem("ägyptischen"), "agypt");});
test("ägyptischer -> agypt", function() {deepEqual( Stem("ägyptischer"), "agypt");});
test("ah -> ah", function() {deepEqual( Stem("ah"), "ah");});
test("aharon -> aharon", function() {deepEqual( Stem("aharon"), "aharon");});
test("aharons -> aharon", function() {deepEqual( Stem("aharons"), "aharon");});
test("ahmten -> ahmt", function() {deepEqual( Stem("ahmten"), "ahmt");});
test("ahndung -> ahndung", function() {deepEqual( Stem("ahndung"), "ahndung");});
test("ahne -> ahn", function() {deepEqual( Stem("ahne"), "ahn");});
test("ahnen -> ahn", function() {deepEqual( Stem("ahnen"), "ahn");});
test("ahnherr -> ahnherr", function() {deepEqual( Stem("ahnherr"), "ahnherr");});
test("ahnl -> ahnl", function() {deepEqual( Stem("ahnl"), "ahnl");});
test("ähnlich -> ahnlich", function() {deepEqual( Stem("ähnlich"), "ahnlich");});
test("ähnliche -> ahnlich", function() {deepEqual( Stem("ähnliche"), "ahnlich");});
test("ähnlichem -> ahnlich", function() {deepEqual( Stem("ähnlichem"), "ahnlich");});
test("ähnlichen -> ahnlich", function() {deepEqual( Stem("ähnlichen"), "ahnlich");});
test("ähnlicher -> ahnlich", function() {deepEqual( Stem("ähnlicher"), "ahnlich");});
test("ahnliches -> ahnlich", function() {deepEqual( Stem("ahnliches"), "ahnlich");});
test("ähnliches -> ahnlich", function() {deepEqual( Stem("ähnliches"), "ahnlich");});
test("ähnlichkeit -> ahnlich", function() {deepEqual( Stem("ähnlichkeit"), "ahnlich");});
test("ähnlichkeiten -> ahnlich", function() {deepEqual( Stem("ähnlichkeiten"), "ahnlich");});
test("ahnt -> ahnt", function() {deepEqual( Stem("ahnt"), "ahnt");});
test("ahnte -> ahnt", function() {deepEqual( Stem("ahnte"), "ahnt");});
test("ahnung -> ahnung", function() {deepEqual( Stem("ahnung"), "ahnung");});
test("ahnungen -> ahnung", function() {deepEqual( Stem("ahnungen"), "ahnung");});
test("ahnungslos -> ahnungslos", function() {deepEqual( Stem("ahnungslos"), "ahnungslos");});
test("ahornbäume -> ahornbaum", function() {deepEqual( Stem("ahornbäume"), "ahornbaum");});
test("ahornstämmchen -> ahornstammch", function() {deepEqual( Stem("ahornstämmchen"), "ahornstammch");});
test("ähre -> ahr", function() {deepEqual( Stem("ähre"), "ahr");});
test("ähren -> ahr", function() {deepEqual( Stem("ähren"), "ahr");});
test("ai -> ai", function() {deepEqual( Stem("ai"), "ai");});
test("aimer -> aim", function() {deepEqual( Stem("aimer"), "aim");});
test("airfares -> airfar", function() {deepEqual( Stem("airfares"), "airfar");});
test("airline -> airlin", function() {deepEqual( Stem("airline"), "airlin");});
test("aiso -> aiso", function() {deepEqual( Stem("aiso"), "aiso");});
test("akazien -> akazi", function() {deepEqual( Stem("akazien"), "akazi");});
test("akkommodements -> akkommodement", function() {deepEqual( Stem("akkommodements"), "akkommodement");});
test("akkompagnierend -> akkompagnier", function() {deepEqual( Stem("akkompagnierend"), "akkompagnier");});
test("akkorde -> akkord", function() {deepEqual( Stem("akkorde"), "akkord");});
test("akkorden -> akkord", function() {deepEqual( Stem("akkorden"), "akkord");});
test("akkordes -> akkord", function() {deepEqual( Stem("akkordes"), "akkord");});
test("akkusativ -> akkusativ", function() {deepEqual( Stem("akkusativ"), "akkusativ");});
test("akkusative -> akkusativ", function() {deepEqual( Stem("akkusative"), "akkusativ");});
test("akrat -> akrat", function() {deepEqual( Stem("akrat"), "akrat");});
test("akt -> akt", function() {deepEqual( Stem("akt"), "akt");});
test("akten -> akt", function() {deepEqual( Stem("akten"), "akt");});
test("aktendiebstählen -> aktendiebstahl", function() {deepEqual( Stem("aktendiebstählen"), "aktendiebstahl");});
test("aktien -> akti", function() {deepEqual( Stem("aktien"), "akti");});
test("aktienbierbrauerei -> aktienbierbrauerei", function() {deepEqual( Stem("aktienbierbrauerei"), "aktienbierbrauerei");});
test("aktienbrauerei -> aktienbrauerei", function() {deepEqual( Stem("aktienbrauerei"), "aktienbrauerei");});
test("aktienhopfenpflanzung -> aktienhopfenpflanz", function() {deepEqual( Stem("aktienhopfenpflanzung"), "aktienhopfenpflanz");});
test("aktienschwindels -> aktienschwindel", function() {deepEqual( Stem("aktienschwindels"), "aktienschwindel");});
test("aktion -> aktion", function() {deepEqual( Stem("aktion"), "aktion");});
test("aktionen -> aktion", function() {deepEqual( Stem("aktionen"), "aktion");});
test("aktivdienstgeneration -> aktivdienstgeneration", function() {deepEqual( Stem("aktivdienstgeneration"), "aktivdienstgeneration");});
test("aktiven -> aktiv", function() {deepEqual( Stem("aktiven"), "aktiv");});
test("aktivitäten -> aktivitat", function() {deepEqual( Stem("aktivitäten"), "aktivitat");});
test("aktuell -> aktuell", function() {deepEqual( Stem("aktuell"), "aktuell");});
test("akustik -> akust", function() {deepEqual( Stem("akustik"), "akust");});
test("akustikfreien -> akustikfrei", function() {deepEqual( Stem("akustikfreien"), "akustikfrei");});
test("akustische -> akust", function() {deepEqual( Stem("akustische"), "akust");});
test("akustisehen -> akustiseh", function() {deepEqual( Stem("akustisehen"), "akustiseh");});
test("akzeptiert -> akzeptiert", function() {deepEqual( Stem("akzeptiert"), "akzeptiert");});
test("akzidentell -> akzidentell", function() {deepEqual( Stem("akzidentell"), "akzidentell");});
test("alar -> alar", function() {deepEqual( Stem("alar"), "alar");});
test("alarm -> alarm", function() {deepEqual( Stem("alarm"), "alarm");});
test("alarmknopf -> alarmknopf", function() {deepEqual( Stem("alarmknopf"), "alarmknopf");});
test("alato -> alato", function() {deepEqual( Stem("alato"), "alato");});
test("albern -> alb", function() {deepEqual( Stem("albern"), "alb");});
test("albernen -> albern", function() {deepEqual( Stem("albernen"), "albern");});
test("albernes -> albern", function() {deepEqual( Stem("albernes"), "albern");});
test("albernheit -> albern", function() {deepEqual( Stem("albernheit"), "albern");});
test("album -> album", function() {deepEqual( Stem("album"), "album");});
test("alcopops -> alcopops", function() {deepEqual( Stem("alcopops"), "alcopops");});
test("aleviten -> alevit", function() {deepEqual( Stem("aleviten"), "alevit");});
test("alex -> alex", function() {deepEqual( Stem("alex"), "alex");});
test("alfred -> alfred", function() {deepEqual( Stem("alfred"), "alfred");});
test("alga -> alga", function() {deepEqual( Stem("alga"), "alga");});
test("algen -> alg", function() {deepEqual( Stem("algen"), "alg");});
test("algier -> algi", function() {deepEqual( Stem("algier"), "algi");});
test("alhjeia -> alhjeia", function() {deepEqual( Stem("alhjeia"), "alhjeia");});
test("aliud -> aliud", function() {deepEqual( Stem("aliud"), "aliud");});
test("alkali -> alkali", function() {deepEqual( Stem("alkali"), "alkali");});
test("alkohol -> alkohol", function() {deepEqual( Stem("alkohol"), "alkohol");});
test("alkoholgesetz -> alkoholgesetz", function() {deepEqual( Stem("alkoholgesetz"), "alkoholgesetz");});
test("alkoholhaltige -> alkoholhalt", function() {deepEqual( Stem("alkoholhaltige"), "alkoholhalt");});
test("alkoholiker -> alkohol", function() {deepEqual( Stem("alkoholiker"), "alkohol");});
test("alkoholischer -> alkohol", function() {deepEqual( Stem("alkoholischer"), "alkohol");});
test("alkoholkonsum -> alkoholkonsum", function() {deepEqual( Stem("alkoholkonsum"), "alkoholkonsum");});
test("alkoholverwaltung -> alkoholverwalt", function() {deepEqual( Stem("alkoholverwaltung"), "alkoholverwalt");});
test("all -> all", function() {deepEqual( Stem("all"), "all");});
test("allabendlich -> allabend", function() {deepEqual( Stem("allabendlich"), "allabend");});
test("allabentlich -> allabent", function() {deepEqual( Stem("allabentlich"), "allabent");});
test("allbereits -> allbereit", function() {deepEqual( Stem("allbereits"), "allbereit");});
test("allda -> allda", function() {deepEqual( Stem("allda"), "allda");});
test("alldem -> alld", function() {deepEqual( Stem("alldem"), "alld");});
test("alle -> all", function() {deepEqual( Stem("alle"), "all");});
test("alledem -> alled", function() {deepEqual( Stem("alledem"), "alled");});
test("allee -> alle", function() {deepEqual( Stem("allee"), "alle");});
test("alleebäumen -> alleebaum", function() {deepEqual( Stem("alleebäumen"), "alleebaum");});
test("allegorie -> allegori", function() {deepEqual( Stem("allegorie"), "allegori");});
test("allein -> allein", function() {deepEqual( Stem("allein"), "allein");});
test("alleinherrschaft -> alleinherrschaft", function() {deepEqual( Stem("alleinherrschaft"), "alleinherrschaft");});
test("alleinige -> allein", function() {deepEqual( Stem("alleinige"), "allein");});
test("alleinigen -> allein", function() {deepEqual( Stem("alleinigen"), "allein");});
test("allem -> all", function() {deepEqual( Stem("allem"), "all");});
test("allemal -> allemal", function() {deepEqual( Stem("allemal"), "allemal");});
test("allen -> all", function() {deepEqual( Stem("allen"), "all");});
test("allendlich -> allend", function() {deepEqual( Stem("allendlich"), "allend");});
test("allenfalls -> allenfall", function() {deepEqual( Stem("allenfalls"), "allenfall");});
test("allenthalben -> allenthalb", function() {deepEqual( Stem("allenthalben"), "allenthalb");});
test("aller -> all", function() {deepEqual( Stem("aller"), "all");});
test("allerallgemeinste -> allerallgemein", function() {deepEqual( Stem("allerallgemeinste"), "allerallgemein");});
test("allerallgemeinsten -> allerallgemein", function() {deepEqual( Stem("allerallgemeinsten"), "allerallgemein");});
test("alleräusserlichste -> allerauss", function() {deepEqual( Stem("alleräusserlichste"), "allerauss");});
test("allerbescheidenstes -> allerbescheiden", function() {deepEqual( Stem("allerbescheidenstes"), "allerbescheiden");});
test("allerdings -> allerding", function() {deepEqual( Stem("allerdings"), "allerding");});
test("allerdurchtriebenste -> allerdurchtrieben", function() {deepEqual( Stem("allerdurchtriebenste"), "allerdurchtrieben");});
test("allereinzelnsten -> allereinzeln", function() {deepEqual( Stem("allereinzelnsten"), "allereinzeln");});
test("allerengsten -> allereng", function() {deepEqual( Stem("allerengsten"), "allereng");});
test("allerentferntesten -> allerentfernt", function() {deepEqual( Stem("allerentferntesten"), "allerentfernt");});
test("allererst -> allererst", function() {deepEqual( Stem("allererst"), "allererst");});
test("allerersten -> allererst", function() {deepEqual( Stem("allerersten"), "allererst");});
test("allergelindeste -> allergelind", function() {deepEqual( Stem("allergelindeste"), "allergelind");});
test("allergrösste -> allergrosst", function() {deepEqual( Stem("allergrösste"), "allergrosst");});
test("allerhand -> allerhand", function() {deepEqual( Stem("allerhand"), "allerhand");});
test("allerheiligste -> allerheil", function() {deepEqual( Stem("allerheiligste"), "allerheil");});
test("allerherzlichste -> allerherz", function() {deepEqual( Stem("allerherzlichste"), "allerherz");});
test("allerkleinsten -> allerklein", function() {deepEqual( Stem("allerkleinsten"), "allerklein");});
test("allerkleinstes -> allerklein", function() {deepEqual( Stem("allerkleinstes"), "allerklein");});
test("allerkostbarsten -> allerkostbarst", function() {deepEqual( Stem("allerkostbarsten"), "allerkostbarst");});
test("allerkürzeste -> allerkurz", function() {deepEqual( Stem("allerkürzeste"), "allerkurz");});
test("allerlei -> allerlei", function() {deepEqual( Stem("allerlei"), "allerlei");});
test("allerletzt -> allerletzt", function() {deepEqual( Stem("allerletzt"), "allerletzt");});
test("allerliebste -> allerlieb", function() {deepEqual( Stem("allerliebste"), "allerlieb");});
test("allerliebstes -> allerlieb", function() {deepEqual( Stem("allerliebstes"), "allerlieb");});
test("allernächster -> allernach", function() {deepEqual( Stem("allernächster"), "allernach");});
test("allerniederträchtigstes -> allerniedertracht", function() {deepEqual( Stem("allerniederträchtigstes"), "allerniedertracht");});
test("allerorten -> allerort", function() {deepEqual( Stem("allerorten"), "allerort");});
test("allerschlimmste -> allerschlimm", function() {deepEqual( Stem("allerschlimmste"), "allerschlimm");});
test("allerschlimmsten -> allerschlimm", function() {deepEqual( Stem("allerschlimmsten"), "allerschlimm");});
test("allerschönste -> allerschon", function() {deepEqual( Stem("allerschönste"), "allerschon");});
test("allerschönsten -> allerschon", function() {deepEqual( Stem("allerschönsten"), "allerschon");});
test("allerseits -> allerseit", function() {deepEqual( Stem("allerseits"), "allerseit");});
test("allerseltsamsten -> allerseltsam", function() {deepEqual( Stem("allerseltsamsten"), "allerseltsam");});
test("allerunheimlichste -> allerunheim", function() {deepEqual( Stem("allerunheimlichste"), "allerunheim");});
test("allerunterste -> allerunterst", function() {deepEqual( Stem("allerunterste"), "allerunterst");});
test("allerverkehrteste -> allerverkehrt", function() {deepEqual( Stem("allerverkehrteste"), "allerverkehrt");});
test("allervernünftigsten -> allervernunft", function() {deepEqual( Stem("allervernünftigsten"), "allervernunft");});
test("allerwegen -> allerweg", function() {deepEqual( Stem("allerwegen"), "allerweg");});
test("allerweissesten -> allerweiss", function() {deepEqual( Stem("allerweissesten"), "allerweiss");});
test("allerwenigsten -> allerwen", function() {deepEqual( Stem("allerwenigsten"), "allerwen");});
test("alles -> all", function() {deepEqual( Stem("alles"), "all");});
test("allezeit -> allezeit", function() {deepEqual( Stem("allezeit"), "allezeit");});
test("allfort -> allfort", function() {deepEqual( Stem("allfort"), "allfort");});
test("allgegenwart -> allgegenwart", function() {deepEqual( Stem("allgegenwart"), "allgegenwart");});
test("allgegenwärtig -> allgegenwart", function() {deepEqual( Stem("allgegenwärtig"), "allgegenwart");});
test("allgemein -> allgemein", function() {deepEqual( Stem("allgemein"), "allgemein");});
test("allgemeine -> allgemein", function() {deepEqual( Stem("allgemeine"), "allgemein");});
test("allgemeinem -> allgemein", function() {deepEqual( Stem("allgemeinem"), "allgemein");});
test("allgemeinen -> allgemein", function() {deepEqual( Stem("allgemeinen"), "allgemein");});
test("allgemeiner -> allgemein", function() {deepEqual( Stem("allgemeiner"), "allgemein");});
test("allgemeinere -> allgemein", function() {deepEqual( Stem("allgemeinere"), "allgemein");});
test("allgemeineren -> allgemein", function() {deepEqual( Stem("allgemeineren"), "allgemein");});
test("allgemeines -> allgemein", function() {deepEqual( Stem("allgemeines"), "allgemein");});
test("allgemeingültigkeit -> allgemeingult", function() {deepEqual( Stem("allgemeingültigkeit"), "allgemeingult");});
test("allgemeinheit -> allgemein", function() {deepEqual( Stem("allgemeinheit"), "allgemein");});
test("allgemeinste -> allgemein", function() {deepEqual( Stem("allgemeinste"), "allgemein");});
test("allgemeinsten -> allgemein", function() {deepEqual( Stem("allgemeinsten"), "allgemein");});
test("allgemeinstes -> allgemein", function() {deepEqual( Stem("allgemeinstes"), "allgemein");});
test("allgewaltige -> allgewalt", function() {deepEqual( Stem("allgewaltige"), "allgewalt");});
test("allgewaltigen -> allgewalt", function() {deepEqual( Stem("allgewaltigen"), "allgewalt");});
test("allgütigkeit -> allgut", function() {deepEqual( Stem("allgütigkeit"), "allgut");});
test("allherbstlich -> allherbst", function() {deepEqual( Stem("allherbstlich"), "allherbst");});
test("allhier -> allhi", function() {deepEqual( Stem("allhier"), "allhi");});
test("alljährlich -> alljahr", function() {deepEqual( Stem("alljährlich"), "alljahr");});
test("allmacht -> allmacht", function() {deepEqual( Stem("allmacht"), "allmacht");});
test("allmächtig -> allmacht", function() {deepEqual( Stem("allmächtig"), "allmacht");});
test("allmächtige -> allmacht", function() {deepEqual( Stem("allmächtige"), "allmacht");});
test("allmächtigen -> allmacht", function() {deepEqual( Stem("allmächtigen"), "allmacht");});
test("allmählich -> allmah", function() {deepEqual( Stem("allmählich"), "allmah");});
test("allmähliche -> allmah", function() {deepEqual( Stem("allmähliche"), "allmah");});
test("allmählig -> allmahl", function() {deepEqual( Stem("allmählig"), "allmahl");});
test("allmal -> allmal", function() {deepEqual( Stem("allmal"), "allmal");});
test("allnächtlich -> allnacht", function() {deepEqual( Stem("allnächtlich"), "allnacht");});
test("allnirgends -> allnirg", function() {deepEqual( Stem("allnirgends"), "allnirg");});
test("allobrogische -> allobrog", function() {deepEqual( Stem("allobrogische"), "allobrog");});
test("allobrogischen -> allobrog", function() {deepEqual( Stem("allobrogischen"), "allobrog");});
test("alls -> all", function() {deepEqual( Stem("alls"), "all");});
test("alltag -> alltag", function() {deepEqual( Stem("alltag"), "alltag");});
test("alltäglich -> alltag", function() {deepEqual( Stem("alltäglich"), "alltag");});
test("alltägliche -> alltag", function() {deepEqual( Stem("alltägliche"), "alltag");});
test("allumfassende -> allumfass", function() {deepEqual( Stem("allumfassende"), "allumfass");});
test("allumfassenden -> allumfass", function() {deepEqual( Stem("allumfassenden"), "allumfass");});
test("allwaltende -> allwalt", function() {deepEqual( Stem("allwaltende"), "allwalt");});
test("allwärts -> allwart", function() {deepEqual( Stem("allwärts"), "allwart");});
test("allweg -> allweg", function() {deepEqual( Stem("allweg"), "allweg");});
test("allweil -> allweil", function() {deepEqual( Stem("allweil"), "allweil");});
test("allwissend -> allwiss", function() {deepEqual( Stem("allwissend"), "allwiss");});
test("allwissenheit -> allwiss", function() {deepEqual( Stem("allwissenheit"), "allwiss");});
test("allwo -> allwo", function() {deepEqual( Stem("allwo"), "allwo");});
test("allwöchentlich -> allwochent", function() {deepEqual( Stem("allwöchentlich"), "allwochent");});
test("allzeit -> allzeit", function() {deepEqual( Stem("allzeit"), "allzeit");});
test("allzu -> allzu", function() {deepEqual( Stem("allzu"), "allzu");});
test("allzulange -> allzulang", function() {deepEqual( Stem("allzulange"), "allzulang");});
test("allzumal -> allzumal", function() {deepEqual( Stem("allzumal"), "allzumal");});
test("allzunahen -> allzunah", function() {deepEqual( Stem("allzunahen"), "allzunah");});
test("allzusehr -> allzusehr", function() {deepEqual( Stem("allzusehr"), "allzusehr");});
test("alm -> alm", function() {deepEqual( Stem("alm"), "alm");});
test("almen -> alm", function() {deepEqual( Stem("almen"), "alm");});
test("almrausch -> almrausch", function() {deepEqual( Stem("almrausch"), "almrausch");});
test("alpennatur -> alpennatur", function() {deepEqual( Stem("alpennatur"), "alpennatur");});
test("als -> als", function() {deepEqual( Stem("als"), "als");});
test("alsbald -> alsbald", function() {deepEqual( Stem("alsbald"), "alsbald");});
test("alsdann -> alsdann", function() {deepEqual( Stem("alsdann"), "alsdann");});
test("also -> also", function() {deepEqual( Stem("also"), "also");});
test("alsobald -> alsobald", function() {deepEqual( Stem("alsobald"), "alsobald");});
test("alsogleich -> alsogleich", function() {deepEqual( Stem("alsogleich"), "alsogleich");});
test("alt -> alt", function() {deepEqual( Stem("alt"), "alt");});
test("altar -> altar", function() {deepEqual( Stem("altar"), "altar");});
test("altare -> altar", function() {deepEqual( Stem("altare"), "altar");});
test("altäre -> altar", function() {deepEqual( Stem("altäre"), "altar");});
test("altären -> altar", function() {deepEqual( Stem("altären"), "altar");});
test("altars -> altar", function() {deepEqual( Stem("altars"), "altar");});
test("altbekannten -> altbekannt", function() {deepEqual( Stem("altbekannten"), "altbekannt");});
test("alte -> alt", function() {deepEqual( Stem("alte"), "alt");});
test("altem -> alt", function() {deepEqual( Stem("altem"), "alt");});
test("alten -> alt", function() {deepEqual( Stem("alten"), "alt");});
test("alter -> alt", function() {deepEqual( Stem("alter"), "alt");});
test("älter -> alt", function() {deepEqual( Stem("älter"), "alt");});
test("ältere -> alt", function() {deepEqual( Stem("ältere"), "alt");});
test("älteren -> alt", function() {deepEqual( Stem("älteren"), "alt");});
test("älterer -> alt", function() {deepEqual( Stem("älterer"), "alt");});
test("ältern -> alt", function() {deepEqual( Stem("ältern"), "alt");});
test("alternative -> alternativ", function() {deepEqual( Stem("alternative"), "alternativ");});
test("alternativen -> alternativ", function() {deepEqual( Stem("alternativen"), "alternativ");});
test("alternativpolitik -> alternativpolit", function() {deepEqual( Stem("alternativpolitik"), "alternativpolit");});
test("alternde -> alternd", function() {deepEqual( Stem("alternde"), "alternd");});
test("alternden -> alternd", function() {deepEqual( Stem("alternden"), "alternd");});
test("alters -> alt", function() {deepEqual( Stem("alters"), "alt");});
test("altersleiden -> altersleid", function() {deepEqual( Stem("altersleiden"), "altersleid");});
test("altersschwäche -> altersschwach", function() {deepEqual( Stem("altersschwäche"), "altersschwach");});
test("altert -> altert", function() {deepEqual( Stem("altert"), "altert");});
test("altertum -> altertum", function() {deepEqual( Stem("altertum"), "altertum");});
test("altertümlichen -> altertum", function() {deepEqual( Stem("altertümlichen"), "altertum");});
test("altertums -> altertum", function() {deepEqual( Stem("altertums"), "altertum");});
test("altes -> alt", function() {deepEqual( Stem("altes"), "alt");});
test("älteste -> alt", function() {deepEqual( Stem("älteste"), "alt");});
test("ältesten -> alt", function() {deepEqual( Stem("ältesten"), "alt");});
test("alteweibersommers -> alteweibersomm", function() {deepEqual( Stem("alteweibersommers"), "alteweibersomm");});
test("altjungferngesicht -> altjungferngesicht", function() {deepEqual( Stem("altjungferngesicht"), "altjungferngesicht");});
test("ältliche -> altlich", function() {deepEqual( Stem("ältliche"), "altlich");});
test("altmodisch -> altmod", function() {deepEqual( Stem("altmodisch"), "altmod");});
test("altranning -> altranning", function() {deepEqual( Stem("altranning"), "altranning");});
test("alts -> alt", function() {deepEqual( Stem("alts"), "alt");});
test("altstimme -> altstimm", function() {deepEqual( Stem("altstimme"), "altstimm");});
test("altväterische -> altvater", function() {deepEqual( Stem("altväterische"), "altvater");});
test("altväterischer -> altvater", function() {deepEqual( Stem("altväterischer"), "altvater");});
test("alumnus -> alumnus", function() {deepEqual( Stem("alumnus"), "alumnus");});
test("am -> am", function() {deepEqual( Stem("am"), "am");});
test("amal -> amal", function() {deepEqual( Stem("amal"), "amal");});
test("amalek -> amalek", function() {deepEqual( Stem("amalek"), "amalek");});
test("amalie -> amali", function() {deepEqual( Stem("amalie"), "amali");});
test("amazonenhafter -> amazonenhaft", function() {deepEqual( Stem("amazonenhafter"), "amazonenhaft");});
test("ambiente -> ambient", function() {deepEqual( Stem("ambiente"), "ambient");});
test("ambros -> ambros", function() {deepEqual( Stem("ambros"), "ambros");});
test("ameise -> ameis", function() {deepEqual( Stem("ameise"), "ameis");});
test("ameisen -> ameis", function() {deepEqual( Stem("ameisen"), "ameis");});
test("amen -> amen", function() {deepEqual( Stem("amen"), "amen");});
test("amer -> amer", function() {deepEqual( Stem("amer"), "amer");});
test("amerika -> amerika", function() {deepEqual( Stem("amerika"), "amerika");});
test("amerikaner -> amerikan", function() {deepEqual( Stem("amerikaner"), "amerikan");});
test("amerikanern -> amerikan", function() {deepEqual( Stem("amerikanern"), "amerikan");});
test("amerikanische -> amerikan", function() {deepEqual( Stem("amerikanische"), "amerikan");});
test("amerikanischen -> amerikan", function() {deepEqual( Stem("amerikanischen"), "amerikan");});
test("amhag -> amhag", function() {deepEqual( Stem("amhag"), "amhag");});
test("amiga -> amiga", function() {deepEqual( Stem("amiga"), "amiga");});
test("amme -> amm", function() {deepEqual( Stem("amme"), "amm");});
test("amminadabs -> amminadab", function() {deepEqual( Stem("amminadabs"), "amminadab");});
test("ammoniter -> ammonit", function() {deepEqual( Stem("ammoniter"), "ammonit");});
test("ammons -> ammon", function() {deepEqual( Stem("ammons"), "ammon");});
test("amnestie -> amnesti", function() {deepEqual( Stem("amnestie"), "amnesti");});
test("amnesty -> amnesty", function() {deepEqual( Stem("amnesty"), "amnesty");});
test("amol -> amol", function() {deepEqual( Stem("amol"), "amol");});
test("amor -> amor", function() {deepEqual( Stem("amor"), "amor");});
test("amörchen -> amorch", function() {deepEqual( Stem("amörchen"), "amorch");});
test("amores -> amor", function() {deepEqual( Stem("amores"), "amor");});
test("amoribus -> amoribus", function() {deepEqual( Stem("amoribus"), "amoribus");});
test("amoriter -> amorit", function() {deepEqual( Stem("amoriter"), "amorit");});
test("amoriters -> amorit", function() {deepEqual( Stem("amoriters"), "amorit");});
test("amos -> amos", function() {deepEqual( Stem("amos"), "amos");});
test("amour -> amour", function() {deepEqual( Stem("amour"), "amour");});
test("amrain -> amrain", function() {deepEqual( Stem("amrain"), "amrain");});
test("amram -> amram", function() {deepEqual( Stem("amram"), "amram");});
test("amrans -> amran", function() {deepEqual( Stem("amrans"), "amran");});
test("amsterdam -> amsterdam", function() {deepEqual( Stem("amsterdam"), "amsterdam");});
test("amt -> amt", function() {deepEqual( Stem("amt"), "amt");});
test("ämtchen -> amtch", function() {deepEqual( Stem("ämtchen"), "amtch");});
test("amte -> amt", function() {deepEqual( Stem("amte"), "amt");});
test("ämter -> amt", function() {deepEqual( Stem("ämter"), "amt");});
test("amtes -> amt", function() {deepEqual( Stem("amtes"), "amt");});
test("amtleute -> amtleut", function() {deepEqual( Stem("amtleute"), "amtleut");});
test("amtleuten -> amtleut", function() {deepEqual( Stem("amtleuten"), "amtleut");});
test("amtlich -> amtlich", function() {deepEqual( Stem("amtlich"), "amtlich");});
test("amtsdauer -> amtsdau", function() {deepEqual( Stem("amtsdauer"), "amtsdau");});
test("amtsdauern -> amtsdau", function() {deepEqual( Stem("amtsdauern"), "amtsdau");});
test("amtsgeheimnisse -> amtsgeheimnis", function() {deepEqual( Stem("amtsgeheimnisse"), "amtsgeheimnis");});
test("amtsrat -> amtsrat", function() {deepEqual( Stem("amtsrat"), "amtsrat");});
test("amtsrates -> amtsrat", function() {deepEqual( Stem("amtsrates"), "amtsrat");});
test("amtsrats -> amtsrat", function() {deepEqual( Stem("amtsrats"), "amtsrat");});
test("amtssprache -> amtssprach", function() {deepEqual( Stem("amtssprache"), "amtssprach");});
test("amtsstube -> amtsstub", function() {deepEqual( Stem("amtsstube"), "amtsstub");});
test("amüsant -> amusant", function() {deepEqual( Stem("amüsant"), "amusant");});
test("amüsieren -> amusi", function() {deepEqual( Stem("amüsieren"), "amusi");});
test("amüsiert -> amusiert", function() {deepEqual( Stem("amüsiert"), "amusiert");});
test("an -> an", function() {deepEqual( Stem("an"), "an");});
test("anaks -> anak", function() {deepEqual( Stem("anaks"), "anak");});
test("analogie -> analogi", function() {deepEqual( Stem("analogie"), "analogi");});
test("analogisch -> analog", function() {deepEqual( Stem("analogisch"), "analog");});
test("analogon -> analogon", function() {deepEqual( Stem("analogon"), "analogon");});
test("analysierbarer -> analysierbar", function() {deepEqual( Stem("analysierbarer"), "analysierbar");});
test("analysieren -> analysi", function() {deepEqual( Stem("analysieren"), "analysi");});
test("analyticis -> analyticis", function() {deepEqual( Stem("analyticis"), "analyticis");});
test("analytik -> analyt", function() {deepEqual( Stem("analytik"), "analyt");});
test("analytisch -> analyt", function() {deepEqual( Stem("analytisch"), "analyt");});
test("analytischen -> analyt", function() {deepEqual( Stem("analytischen"), "analyt");});
test("anap -> anap", function() {deepEqual( Stem("anap"), "anap");});
test("anarchie -> anarchi", function() {deepEqual( Stem("anarchie"), "anarchi");});
test("anarchischen -> anarch", function() {deepEqual( Stem("anarchischen"), "anarch");});
test("anaskeuazein -> anaskeuazein", function() {deepEqual( Stem("anaskeuazein"), "anaskeuazein");});
test("anaskeuazomen -> anaskeuazom", function() {deepEqual( Stem("anaskeuazomen"), "anaskeuazom");});
test("anaxagoras -> anaxagoras", function() {deepEqual( Stem("anaxagoras"), "anaxagoras");});
test("anbaueten -> anbauet", function() {deepEqual( Stem("anbaueten"), "anbauet");});
test("anbeginn -> anbeginn", function() {deepEqual( Stem("anbeginn"), "anbeginn");});
test("anbehalten -> anbehalt", function() {deepEqual( Stem("anbehalten"), "anbehalt");});
test("anbelangt -> anbelangt", function() {deepEqual( Stem("anbelangt"), "anbelangt");});
test("anbellte -> anbellt", function() {deepEqual( Stem("anbellte"), "anbellt");});
test("anbeten -> anbet", function() {deepEqual( Stem("anbeten"), "anbet");});
test("anbeter -> anbet", function() {deepEqual( Stem("anbeter"), "anbet");});
test("anbetern -> anbet", function() {deepEqual( Stem("anbetern"), "anbet");});
test("anbetet -> anbetet", function() {deepEqual( Stem("anbetet"), "anbetet");});
test("anbetete -> anbetet", function() {deepEqual( Stem("anbetete"), "anbetet");});
test("anbeteten -> anbetet", function() {deepEqual( Stem("anbeteten"), "anbetet");});
test("anbetrifft -> anbetrifft", function() {deepEqual( Stem("anbetrifft"), "anbetrifft");});
test("anbetung -> anbet", function() {deepEqual( Stem("anbetung"), "anbet");});
test("anbey -> anbey", function() {deepEqual( Stem("anbey"), "anbey");});
test("anbieten -> anbiet", function() {deepEqual( Stem("anbieten"), "anbiet");});
test("anbietend -> anbiet", function() {deepEqual( Stem("anbietend"), "anbiet");});
test("anbietet -> anbietet", function() {deepEqual( Stem("anbietet"), "anbietet");});
test("anbildet -> anbildet", function() {deepEqual( Stem("anbildet"), "anbildet");});
test("anbinden -> anbind", function() {deepEqual( Stem("anbinden"), "anbind");});
test("anbindung -> anbind", function() {deepEqual( Stem("anbindung"), "anbind");});
test("anbissen -> anbiss", function() {deepEqual( Stem("anbissen"), "anbiss");});
test("anblick -> anblick", function() {deepEqual( Stem("anblick"), "anblick");});
test("anblicke -> anblick", function() {deepEqual( Stem("anblicke"), "anblick");});
test("anblicken -> anblick", function() {deepEqual( Stem("anblicken"), "anblick");});
test("anblicks -> anblick", function() {deepEqual( Stem("anblicks"), "anblick");});
test("anblickte -> anblickt", function() {deepEqual( Stem("anblickte"), "anblickt");});
test("anbot -> anbot", function() {deepEqual( Stem("anbot"), "anbot");});
test("anböten -> anbot", function() {deepEqual( Stem("anböten"), "anbot");});
test("anbringen -> anbring", function() {deepEqual( Stem("anbringen"), "anbring");});
test("anbruch -> anbruch", function() {deepEqual( Stem("anbruch"), "anbruch");});
test("and -> and", function() {deepEqual( Stem("and"), "and");});
test("andacht -> andacht", function() {deepEqual( Stem("andacht"), "andacht");});
test("andächtig -> andacht", function() {deepEqual( Stem("andächtig"), "andacht");});
test("andächtige -> andacht", function() {deepEqual( Stem("andächtige"), "andacht");});
test("andächtigen -> andacht", function() {deepEqual( Stem("andächtigen"), "andacht");});
test("andächtiger -> andacht", function() {deepEqual( Stem("andächtiger"), "andacht");});
test("andauernde -> andauernd", function() {deepEqual( Stem("andauernde"), "andauernd");});
test("andenken -> andenk", function() {deepEqual( Stem("andenken"), "andenk");});
test("andenkens -> andenk", function() {deepEqual( Stem("andenkens"), "andenk");});
test("ander -> and", function() {deepEqual( Stem("ander"), "and");});
test("anderau -> anderau", function() {deepEqual( Stem("anderau"), "anderau");});
test("anderckens -> anderck", function() {deepEqual( Stem("anderckens"), "anderck");});
test("andere -> and", function() {deepEqual( Stem("andere"), "and");});
test("anderem -> and", function() {deepEqual( Stem("anderem"), "and");});
test("anderen -> and", function() {deepEqual( Stem("anderen"), "and");});
test("anderer -> and", function() {deepEqual( Stem("anderer"), "and");});
test("andererseits -> andererseit", function() {deepEqual( Stem("andererseits"), "andererseit");});
test("anderes -> and", function() {deepEqual( Stem("anderes"), "and");});
test("anderl -> anderl", function() {deepEqual( Stem("anderl"), "anderl");});
test("anderls -> anderl", function() {deepEqual( Stem("anderls"), "anderl");});
test("anderm -> anderm", function() {deepEqual( Stem("anderm"), "anderm");});
test("andern -> and", function() {deepEqual( Stem("andern"), "and");});
test("ändern -> and", function() {deepEqual( Stem("ändern"), "and");});
test("anders -> and", function() {deepEqual( Stem("anders"), "and");});
test("anderseits -> anderseit", function() {deepEqual( Stem("anderseits"), "anderseit");});
test("anderswo -> anderswo", function() {deepEqual( Stem("anderswo"), "anderswo");});
test("anderswoher -> anderswoh", function() {deepEqual( Stem("anderswoher"), "anderswoh");});
test("anderswohin -> anderswohin", function() {deepEqual( Stem("anderswohin"), "anderswohin");});
test("ändert -> andert", function() {deepEqual( Stem("ändert"), "andert");});
test("änderte -> andert", function() {deepEqual( Stem("änderte"), "andert");});
test("anderthalb -> anderthalb", function() {deepEqual( Stem("anderthalb"), "anderthalb");});
test("änderung -> ander", function() {deepEqual( Stem("änderung"), "ander");});
test("änderungen -> ander", function() {deepEqual( Stem("änderungen"), "ander");});
test("anderwärts -> anderwart", function() {deepEqual( Stem("anderwärts"), "anderwart");});
test("anderweis -> anderweis", function() {deepEqual( Stem("anderweis"), "anderweis");});
test("anderweitig -> anderweit", function() {deepEqual( Stem("anderweitig"), "anderweit");});
test("anderweitige -> anderweit", function() {deepEqual( Stem("anderweitige"), "anderweit");});
test("anderweitigen -> anderweit", function() {deepEqual( Stem("anderweitigen"), "anderweit");});
test("andeutet -> andeutet", function() {deepEqual( Stem("andeutet"), "andeutet");});
test("andeutungsweise -> andeutungsweis", function() {deepEqual( Stem("andeutungsweise"), "andeutungsweis");});
test("andre -> andr", function() {deepEqual( Stem("andre"), "andr");});
test("andreas -> andreas", function() {deepEqual( Stem("andreas"), "andreas");});
test("andrer -> andr", function() {deepEqual( Stem("andrer"), "andr");});
test("andrerseits -> andrerseit", function() {deepEqual( Stem("andrerseits"), "andrerseit");});
test("andres -> andr", function() {deepEqual( Stem("andres"), "andr");});
test("andringling -> andringling", function() {deepEqual( Stem("andringling"), "andringling");});
test("androhung -> androh", function() {deepEqual( Stem("androhung"), "androh");});
test("androhungen -> androh", function() {deepEqual( Stem("androhungen"), "androh");});
test("aneignen -> aneign", function() {deepEqual( Stem("aneignen"), "aneign");});
test("aneignet -> aneignet", function() {deepEqual( Stem("aneignet"), "aneignet");});
test("aneignete -> aneignet", function() {deepEqual( Stem("aneignete"), "aneignet");});
test("aneigneten -> aneignet", function() {deepEqual( Stem("aneigneten"), "aneignet");});
test("aneignung -> aneign", function() {deepEqual( Stem("aneignung"), "aneign");});
test("aneinander -> aneinand", function() {deepEqual( Stem("aneinander"), "aneinand");});
test("aneinandergebracht -> aneinandergebracht", function() {deepEqual( Stem("aneinandergebracht"), "aneinandergebracht");});
test("aneinandergelehnt -> aneinandergelehnt", function() {deepEqual( Stem("aneinandergelehnt"), "aneinandergelehnt");});
test("aneinandergeschmiegt -> aneinandergeschmiegt", function() {deepEqual( Stem("aneinandergeschmiegt"), "aneinandergeschmiegt");});
test("anerbieten -> anerbiet", function() {deepEqual( Stem("anerbieten"), "anerbiet");});
test("anererbtem -> anererbt", function() {deepEqual( Stem("anererbtem"), "anererbt");});
test("anererbten -> anererbt", function() {deepEqual( Stem("anererbten"), "anererbt");});
test("anererbtes -> anererbt", function() {deepEqual( Stem("anererbtes"), "anererbt");});
test("anerkannt -> anerkannt", function() {deepEqual( Stem("anerkannt"), "anerkannt");});
test("anerkannte -> anerkannt", function() {deepEqual( Stem("anerkannte"), "anerkannt");});
test("anerkannten -> anerkannt", function() {deepEqual( Stem("anerkannten"), "anerkannt");});
test("anerkanntesten -> anerkannt", function() {deepEqual( Stem("anerkanntesten"), "anerkannt");});
test("anerkenne -> anerkenn", function() {deepEqual( Stem("anerkenne"), "anerkenn");});
test("anerkennen -> anerkenn", function() {deepEqual( Stem("anerkennen"), "anerkenn");});
test("anerkennt -> anerkennt", function() {deepEqual( Stem("anerkennt"), "anerkennt");});
test("anerkennung -> anerkenn", function() {deepEqual( Stem("anerkennung"), "anerkenn");});
test("anfahren -> anfahr", function() {deepEqual( Stem("anfahren"), "anfahr");});
test("anfall -> anfall", function() {deepEqual( Stem("anfall"), "anfall");});
test("anfälle -> anfall", function() {deepEqual( Stem("anfälle"), "anfall");});
test("anfällen -> anfall", function() {deepEqual( Stem("anfällen"), "anfall");});
test("anfang -> anfang", function() {deepEqual( Stem("anfang"), "anfang");});
test("anfange -> anfang", function() {deepEqual( Stem("anfange"), "anfang");});
test("anfänge -> anfang", function() {deepEqual( Stem("anfänge"), "anfang");});
test("anfangen -> anfang", function() {deepEqual( Stem("anfangen"), "anfang");});
test("anfängen -> anfang", function() {deepEqual( Stem("anfängen"), "anfang");});
test("anfangend -> anfang", function() {deepEqual( Stem("anfangend"), "anfang");});
test("anfanges -> anfang", function() {deepEqual( Stem("anfanges"), "anfang");});
test("anfänglich -> anfang", function() {deepEqual( Stem("anfänglich"), "anfang");});
test("anfangs -> anfang", function() {deepEqual( Stem("anfangs"), "anfang");});
test("anfängt -> anfangt", function() {deepEqual( Stem("anfängt"), "anfangt");});
test("anfassen -> anfass", function() {deepEqual( Stem("anfassen"), "anfass");});
test("anfechten -> anfecht", function() {deepEqual( Stem("anfechten"), "anfecht");});
test("anfechtende -> anfecht", function() {deepEqual( Stem("anfechtende"), "anfecht");});
test("anfechtenden -> anfecht", function() {deepEqual( Stem("anfechtenden"), "anfecht");});
test("anfechter -> anfecht", function() {deepEqual( Stem("anfechter"), "anfecht");});
test("anfechtern -> anfecht", function() {deepEqual( Stem("anfechtern"), "anfecht");});
test("anfechtung -> anfecht", function() {deepEqual( Stem("anfechtung"), "anfecht");});
test("anfechtungen -> anfecht", function() {deepEqual( Stem("anfechtungen"), "anfecht");});
test("anfeinden -> anfeind", function() {deepEqual( Stem("anfeinden"), "anfeind");});
test("anfertigen -> anfert", function() {deepEqual( Stem("anfertigen"), "anfert");});
test("anficht -> anficht", function() {deepEqual( Stem("anficht"), "anficht");});
test("anfing -> anfing", function() {deepEqual( Stem("anfing"), "anfing");});
test("anfinge -> anfing", function() {deepEqual( Stem("anfinge"), "anfing");});
test("anfingen -> anfing", function() {deepEqual( Stem("anfingen"), "anfing");});
test("anflehen -> anfleh", function() {deepEqual( Stem("anflehen"), "anfleh");});
test("anflehend -> anfleh", function() {deepEqual( Stem("anflehend"), "anfleh");});
test("anfleht -> anfleht", function() {deepEqual( Stem("anfleht"), "anfleht");});
test("anflehte -> anfleht", function() {deepEqual( Stem("anflehte"), "anfleht");});
test("anflug -> anflug", function() {deepEqual( Stem("anflug"), "anflug");});
test("anfocht -> anfocht", function() {deepEqual( Stem("anfocht"), "anfocht");});
test("anfochten -> anfocht", function() {deepEqual( Stem("anfochten"), "anfocht");});
test("anforderungen -> anforder", function() {deepEqual( Stem("anforderungen"), "anforder");});
test("anforderungsprofil -> anforderungsprofil", function() {deepEqual( Stem("anforderungsprofil"), "anforderungsprofil");});
test("anfrage -> anfrag", function() {deepEqual( Stem("anfrage"), "anfrag");});
test("anfragen -> anfrag", function() {deepEqual( Stem("anfragen"), "anfrag");});
test("anführen -> anfuhr", function() {deepEqual( Stem("anführen"), "anfuhr");});
test("anfüllen -> anfull", function() {deepEqual( Stem("anfüllen"), "anfull");});
test("anfüllte -> anfullt", function() {deepEqual( Stem("anfüllte"), "anfullt");});
test("ang -> ang", function() {deepEqual( Stem("ang"), "ang");});
test("angab -> angab", function() {deepEqual( Stem("angab"), "angab");});
test("angabe -> angab", function() {deepEqual( Stem("angabe"), "angab");});
test("angaben -> angab", function() {deepEqual( Stem("angaben"), "angab");});
test("angafften -> angafft", function() {deepEqual( Stem("angafften"), "angafft");});
test("angähnte -> angahnt", function() {deepEqual( Stem("angähnte"), "angahnt");});
test("angeb -> angeb", function() {deepEqual( Stem("angeb"), "angeb");});
test("angebaut -> angebaut", function() {deepEqual( Stem("angebaut"), "angebaut");});
test("angeben -> angeb", function() {deepEqual( Stem("angeben"), "angeb");});
test("angebetet -> angebetet", function() {deepEqual( Stem("angebetet"), "angebetet");});
test("angebissene -> angebiss", function() {deepEqual( Stem("angebissene"), "angebiss");});
test("angeblich -> angeb", function() {deepEqual( Stem("angeblich"), "angeb");});
test("angeblichen -> angeb", function() {deepEqual( Stem("angeblichen"), "angeb");});
test("angeblicher -> angeb", function() {deepEqual( Stem("angeblicher"), "angeb");});
test("angeboren -> angebor", function() {deepEqual( Stem("angeboren"), "angebor");});
test("angeborenen -> angebor", function() {deepEqual( Stem("angeborenen"), "angebor");});
test("angeborener -> angebor", function() {deepEqual( Stem("angeborener"), "angebor");});
test("angeborne -> angeborn", function() {deepEqual( Stem("angeborne"), "angeborn");});
test("angebornen -> angeborn", function() {deepEqual( Stem("angebornen"), "angeborn");});
test("angebot -> angebot", function() {deepEqual( Stem("angebot"), "angebot");});
test("angebote -> angebot", function() {deepEqual( Stem("angebote"), "angebot");});
test("angeboten -> angebot", function() {deepEqual( Stem("angeboten"), "angebot");});
test("angebotenem -> angebot", function() {deepEqual( Stem("angebotenem"), "angebot");});
test("angebotenen -> angebot", function() {deepEqual( Stem("angebotenen"), "angebot");});
test("angebotenes -> angebot", function() {deepEqual( Stem("angebotenes"), "angebot");});
test("angebotes -> angebot", function() {deepEqual( Stem("angebotes"), "angebot");});
test("angebracht -> angebracht", function() {deepEqual( Stem("angebracht"), "angebracht");});
test("angebrannt -> angebrannt", function() {deepEqual( Stem("angebrannt"), "angebrannt");});
test("angebrochen -> angebroch", function() {deepEqual( Stem("angebrochen"), "angebroch");});
test("angebunden -> angebund", function() {deepEqual( Stem("angebunden"), "angebund");});
test("angebundenen -> angebund", function() {deepEqual( Stem("angebundenen"), "angebund");});
test("angedeutet -> angedeutet", function() {deepEqual( Stem("angedeutet"), "angedeutet");});
test("angedreht -> angedreht", function() {deepEqual( Stem("angedreht"), "angedreht");});
test("angedroht -> angedroht", function() {deepEqual( Stem("angedroht"), "angedroht");});
test("angeeignet -> angeeignet", function() {deepEqual( Stem("angeeignet"), "angeeignet");});
test("angefangen -> angefang", function() {deepEqual( Stem("angefangen"), "angefang");});
test("angefangenen -> angefang", function() {deepEqual( Stem("angefangenen"), "angefang");});
test("angefasst -> angefasst", function() {deepEqual( Stem("angefasst"), "angefasst");});
test("angefaßt -> angefasst", function() {deepEqual( Stem("angefaßt"), "angefasst");});
test("angefeindet -> angefeindet", function() {deepEqual( Stem("angefeindet"), "angefeindet");});
test("angefeuert -> angefeuert", function() {deepEqual( Stem("angefeuert"), "angefeuert");});
test("angefleht -> angefleht", function() {deepEqual( Stem("angefleht"), "angefleht");});
test("angefochten -> angefocht", function() {deepEqual( Stem("angefochten"), "angefocht");});
test("angefragt -> angefragt", function() {deepEqual( Stem("angefragt"), "angefragt");});
test("angeführt -> angefuhrt", function() {deepEqual( Stem("angeführt"), "angefuhrt");});
test("angeführten -> angefuhrt", function() {deepEqual( Stem("angeführten"), "angefuhrt");});
test("angefüllt -> angefullt", function() {deepEqual( Stem("angefüllt"), "angefullt");});
test("angefüllten -> angefullt", function() {deepEqual( Stem("angefüllten"), "angefullt");});
test("angegeben -> angegeb", function() {deepEqual( Stem("angegeben"), "angegeb");});
test("angegebenen -> angegeb", function() {deepEqual( Stem("angegebenen"), "angegeb");});
test("angegriffen -> angegriff", function() {deepEqual( Stem("angegriffen"), "angegriff");});
test("angehaftet -> angehaftet", function() {deepEqual( Stem("angehaftet"), "angehaftet");});
test("angehalten -> angehalt", function() {deepEqual( Stem("angehalten"), "angehalt");});
test("angehängt -> angehangt", function() {deepEqual( Stem("angehängt"), "angehangt");});
test("angehängte -> angehangt", function() {deepEqual( Stem("angehängte"), "angehangt");});
test("angehängten -> angehangt", function() {deepEqual( Stem("angehängten"), "angehangt");});
test("angehe -> angeh", function() {deepEqual( Stem("angehe"), "angeh");});
test("angehende -> angeh", function() {deepEqual( Stem("angehende"), "angeh");});
test("angehenden -> angeh", function() {deepEqual( Stem("angehenden"), "angeh");});
test("angehoben -> angehob", function() {deepEqual( Stem("angehoben"), "angehob");});
test("angehör -> angehor", function() {deepEqual( Stem("angehör"), "angehor");});
test("angehöre -> angehor", function() {deepEqual( Stem("angehöre"), "angehor");});
test("angehören -> angehor", function() {deepEqual( Stem("angehören"), "angehor");});
test("angehörend -> angehor", function() {deepEqual( Stem("angehörend"), "angehor");});
test("angehöret -> angehoret", function() {deepEqual( Stem("angehöret"), "angehoret");});
test("angehörig -> angehor", function() {deepEqual( Stem("angehörig"), "angehor");});
test("angehörige -> angehor", function() {deepEqual( Stem("angehörige"), "angehor");});
test("angehörigen -> angehor", function() {deepEqual( Stem("angehörigen"), "angehor");});
test("angehöriges -> angehor", function() {deepEqual( Stem("angehöriges"), "angehor");});
test("angehört -> angehort", function() {deepEqual( Stem("angehört"), "angehort");});
test("angehörte -> angehort", function() {deepEqual( Stem("angehörte"), "angehort");});
test("angehörten -> angehort", function() {deepEqual( Stem("angehörten"), "angehort");});
test("angeht -> angeht", function() {deepEqual( Stem("angeht"), "angeht");});
test("angekauften -> angekauft", function() {deepEqual( Stem("angekauften"), "angekauft");});
test("angeklagt -> angeklagt", function() {deepEqual( Stem("angeklagt"), "angeklagt");});
test("angeklagte -> angeklagt", function() {deepEqual( Stem("angeklagte"), "angeklagt");});
test("angeklagten -> angeklagt", function() {deepEqual( Stem("angeklagten"), "angeklagt");});
test("angeklagter -> angeklagt", function() {deepEqual( Stem("angeklagter"), "angeklagt");});
test("angeklammert -> angeklammert", function() {deepEqual( Stem("angeklammert"), "angeklammert");});
test("angeklatschtem -> angeklatscht", function() {deepEqual( Stem("angeklatschtem"), "angeklatscht");});
test("angeklebt -> angeklebt", function() {deepEqual( Stem("angeklebt"), "angeklebt");});
test("angeklebte -> angeklebt", function() {deepEqual( Stem("angeklebte"), "angeklebt");});
test("angekleidet -> angekleidet", function() {deepEqual( Stem("angekleidet"), "angekleidet");});
test("angeknüpft -> angeknupft", function() {deepEqual( Stem("angeknüpft"), "angeknupft");});
test("angeknurrt -> angeknurrt", function() {deepEqual( Stem("angeknurrt"), "angeknurrt");});
test("angekommen -> angekomm", function() {deepEqual( Stem("angekommen"), "angekomm");});
test("angekündigt -> angekundigt", function() {deepEqual( Stem("angekündigt"), "angekundigt");});
test("angel -> angel", function() {deepEqual( Stem("angel"), "angel");});
test("angelangt -> angelangt", function() {deepEqual( Stem("angelangt"), "angelangt");});
test("angelaufen -> angelauf", function() {deepEqual( Stem("angelaufen"), "angelauf");});
test("angelegenen -> angeleg", function() {deepEqual( Stem("angelegenen"), "angeleg");});
test("angelegenheit -> angeleg", function() {deepEqual( Stem("angelegenheit"), "angeleg");});
test("angelegenheiten -> angeleg", function() {deepEqual( Stem("angelegenheiten"), "angeleg");});
test("angelegentlich -> angelegent", function() {deepEqual( Stem("angelegentlich"), "angelegent");});
test("angelegentlichen -> angelegent", function() {deepEqual( Stem("angelegentlichen"), "angelegent");});
test("angelegentlicher -> angelegent", function() {deepEqual( Stem("angelegentlicher"), "angelegent");});
test("angelegentlichste -> angelegent", function() {deepEqual( Stem("angelegentlichste"), "angelegent");});
test("angelegt -> angelegt", function() {deepEqual( Stem("angelegt"), "angelegt");});
test("angelegten -> angelegt", function() {deepEqual( Stem("angelegten"), "angelegt");});
test("angelegtes -> angelegt", function() {deepEqual( Stem("angelegtes"), "angelegt");});
test("angeleitet -> angeleitet", function() {deepEqual( Stem("angeleitet"), "angeleitet");});
test("angelika -> angelika", function() {deepEqual( Stem("angelika"), "angelika");});
test("angeln -> angeln", function() {deepEqual( Stem("angeln"), "angeln");});
test("angelrute -> angelrut", function() {deepEqual( Stem("angelrute"), "angelrut");});
test("angelte -> angelt", function() {deepEqual( Stem("angelte"), "angelt");});
test("angemachten -> angemacht", function() {deepEqual( Stem("angemachten"), "angemacht");});
test("angemasst -> angemasst", function() {deepEqual( Stem("angemasst"), "angemasst");});
test("angemaßt -> angemasst", function() {deepEqual( Stem("angemaßt"), "angemasst");});
test("angemassten -> angemasst", function() {deepEqual( Stem("angemassten"), "angemasst");});
test("angemessen -> angemess", function() {deepEqual( Stem("angemessen"), "angemess");});
test("angemessene -> angemess", function() {deepEqual( Stem("angemessene"), "angemess");});
test("angemessenen -> angemess", function() {deepEqual( Stem("angemessenen"), "angemess");});
test("angemessener -> angemess", function() {deepEqual( Stem("angemessener"), "angemess");});
test("angemessenheit -> angemess", function() {deepEqual( Stem("angemessenheit"), "angemess");});
test("angenagelt -> angenagelt", function() {deepEqual( Stem("angenagelt"), "angenagelt");});
test("angenehm -> angenehm", function() {deepEqual( Stem("angenehm"), "angenehm");});
test("angenehme -> angenehm", function() {deepEqual( Stem("angenehme"), "angenehm");});
test("angenehmen -> angenehm", function() {deepEqual( Stem("angenehmen"), "angenehm");});
test("angenehmer -> angenehm", function() {deepEqual( Stem("angenehmer"), "angenehm");});
test("angenehmeres -> angenehm", function() {deepEqual( Stem("angenehmeres"), "angenehm");});
test("angenehmes -> angenehm", function() {deepEqual( Stem("angenehmes"), "angenehm");});
test("angenehmste -> angenehm", function() {deepEqual( Stem("angenehmste"), "angenehm");});
test("angenehmsten -> angenehm", function() {deepEqual( Stem("angenehmsten"), "angenehm");});
test("angenommen -> angenomm", function() {deepEqual( Stem("angenommen"), "angenomm");});
test("angenommene -> angenomm", function() {deepEqual( Stem("angenommene"), "angenomm");});
test("angenommenen -> angenomm", function() {deepEqual( Stem("angenommenen"), "angenomm");});
test("angenommenes -> angenomm", function() {deepEqual( Stem("angenommenes"), "angenomm");});
test("angeordnet -> angeordnet", function() {deepEqual( Stem("angeordnet"), "angeordnet");});
test("angepasst -> angepasst", function() {deepEqual( Stem("angepasst"), "angepasst");});
test("angepaßt -> angepasst", function() {deepEqual( Stem("angepaßt"), "angepasst");});
test("angepflanzt -> angepflanzt", function() {deepEqual( Stem("angepflanzt"), "angepflanzt");});
test("angeplanscht -> angeplanscht", function() {deepEqual( Stem("angeplanscht"), "angeplanscht");});
test("angepumpt -> angepumpt", function() {deepEqual( Stem("angepumpt"), "angepumpt");});
test("anger -> ang", function() {deepEqual( Stem("anger"), "ang");});
test("angeredet -> angeredet", function() {deepEqual( Stem("angeredet"), "angeredet");});
test("angeregt -> angeregt", function() {deepEqual( Stem("angeregt"), "angeregt");});
test("angeregter -> angeregt", function() {deepEqual( Stem("angeregter"), "angeregt");});
test("angereist -> angereist", function() {deepEqual( Stem("angereist"), "angereist");});
test("angerichtet -> angerichtet", function() {deepEqual( Stem("angerichtet"), "angerichtet");});
test("angeriemten -> angeriemt", function() {deepEqual( Stem("angeriemten"), "angeriemt");});
test("angerufen -> angeruf", function() {deepEqual( Stem("angerufen"), "angeruf");});
test("angerührt -> angeruhrt", function() {deepEqual( Stem("angerührt"), "angeruhrt");});
test("angesagteste -> angesagt", function() {deepEqual( Stem("angesagteste"), "angesagt");});
test("angesammelte -> angesammelt", function() {deepEqual( Stem("angesammelte"), "angesammelt");});
test("angeschafft -> angeschafft", function() {deepEqual( Stem("angeschafft"), "angeschafft");});
test("angeschaut -> angeschaut", function() {deepEqual( Stem("angeschaut"), "angeschaut");});
test("angeschickt -> angeschickt", function() {deepEqual( Stem("angeschickt"), "angeschickt");});
test("angeschlossen -> angeschloss", function() {deepEqual( Stem("angeschlossen"), "angeschloss");});
test("angeschlurft -> angeschlurft", function() {deepEqual( Stem("angeschlurft"), "angeschlurft");});
test("angeschrieben -> angeschrieb", function() {deepEqual( Stem("angeschrieben"), "angeschrieb");});
test("angeschrien -> angeschri", function() {deepEqual( Stem("angeschrien"), "angeschri");});
test("angeschwollen -> angeschwoll", function() {deepEqual( Stem("angeschwollen"), "angeschwoll");});
test("angesehen -> angeseh", function() {deepEqual( Stem("angesehen"), "angeseh");});
test("angesehensten -> angesehen", function() {deepEqual( Stem("angesehensten"), "angesehen");});
test("angesetzt -> angesetzt", function() {deepEqual( Stem("angesetzt"), "angesetzt");});
test("angesicht -> angesicht", function() {deepEqual( Stem("angesicht"), "angesicht");});
test("angesichte -> angesicht", function() {deepEqual( Stem("angesichte"), "angesicht");});
test("angesichten -> angesicht", function() {deepEqual( Stem("angesichten"), "angesicht");});
test("angesichter -> angesicht", function() {deepEqual( Stem("angesichter"), "angesicht");});
test("angesichtern -> angesicht", function() {deepEqual( Stem("angesichtern"), "angesicht");});
test("angesichtes -> angesicht", function() {deepEqual( Stem("angesichtes"), "angesicht");});
test("angesichts -> angesicht", function() {deepEqual( Stem("angesichts"), "angesicht");});
test("angesiedelt -> angesiedelt", function() {deepEqual( Stem("angesiedelt"), "angesiedelt");});
test("angesprochen -> angesproch", function() {deepEqual( Stem("angesprochen"), "angesproch");});
test("angesteckt -> angesteckt", function() {deepEqual( Stem("angesteckt"), "angesteckt");});
test("angestellt -> angestellt", function() {deepEqual( Stem("angestellt"), "angestellt");});
test("angestellte -> angestellt", function() {deepEqual( Stem("angestellte"), "angestellt");});
test("angestellten -> angestellt", function() {deepEqual( Stem("angestellten"), "angestellt");});
test("angestellter -> angestellt", function() {deepEqual( Stem("angestellter"), "angestellt");});
test("angestiert -> angestiert", function() {deepEqual( Stem("angestiert"), "angestiert");});
test("angestrengt -> angestrengt", function() {deepEqual( Stem("angestrengt"), "angestrengt");});
test("angestrengten -> angestrengt", function() {deepEqual( Stem("angestrengten"), "angestrengt");});
test("angestrengter -> angestrengt", function() {deepEqual( Stem("angestrengter"), "angestrengt");});
test("angestrengteste -> angestrengt", function() {deepEqual( Stem("angestrengteste"), "angestrengt");});
test("angestrichen -> angestrich", function() {deepEqual( Stem("angestrichen"), "angestrich");});
test("angestrichene -> angestrich", function() {deepEqual( Stem("angestrichene"), "angestrich");});
test("angetan -> angetan", function() {deepEqual( Stem("angetan"), "angetan");});
test("angetane -> angetan", function() {deepEqual( Stem("angetane"), "angetan");});
test("angetastet -> angetastet", function() {deepEqual( Stem("angetastet"), "angetastet");});
test("angetrieben -> angetrieb", function() {deepEqual( Stem("angetrieben"), "angetrieb");});
test("angetroffen -> angetroff", function() {deepEqual( Stem("angetroffen"), "angetroff");});
test("angewachsen -> angewachs", function() {deepEqual( Stem("angewachsen"), "angewachs");});
test("angewandt -> angewandt", function() {deepEqual( Stem("angewandt"), "angewandt");});
test("angewandte -> angewandt", function() {deepEqual( Stem("angewandte"), "angewandt");});
test("angewendet -> angewendet", function() {deepEqual( Stem("angewendet"), "angewendet");});
test("angewiesen -> angewies", function() {deepEqual( Stem("angewiesen"), "angewies");});
test("angewöhnt -> angewohnt", function() {deepEqual( Stem("angewöhnt"), "angewohnt");});
test("angezeigt -> angezeigt", function() {deepEqual( Stem("angezeigt"), "angezeigt");});
test("angezogen -> angezog", function() {deepEqual( Stem("angezogen"), "angezog");});
test("angezogene -> angezog", function() {deepEqual( Stem("angezogene"), "angezog");});
test("angezündet -> angezundet", function() {deepEqual( Stem("angezündet"), "angezundet");});
test("angezweckt -> angezweckt", function() {deepEqual( Stem("angezweckt"), "angezweckt");});
test("angfangt -> angfangt", function() {deepEqual( Stem("angfangt"), "angfangt");});
test("anghört -> anghort", function() {deepEqual( Stem("anghört"), "anghort");});
test("angibt -> angibt", function() {deepEqual( Stem("angibt"), "angibt");});
test("anging -> anging", function() {deepEqual( Stem("anging"), "anging");});
test("angreifen -> angreif", function() {deepEqual( Stem("angreifen"), "angreif");});
test("angreifenden -> angreif", function() {deepEqual( Stem("angreifenden"), "angreif");});
test("angreifern -> angreif", function() {deepEqual( Stem("angreifern"), "angreif");});
test("angrenzenden -> angrenz", function() {deepEqual( Stem("angrenzenden"), "angrenz");});
test("angriff -> angriff", function() {deepEqual( Stem("angriff"), "angriff");});
test("angriffe -> angriff", function() {deepEqual( Stem("angriffe"), "angriff");});
test("angschaut -> angschaut", function() {deepEqual( Stem("angschaut"), "angschaut");});
test("angst -> angst", function() {deepEqual( Stem("angst"), "angst");});
test("ängste -> angst", function() {deepEqual( Stem("ängste"), "angst");});
test("angstfrühstück -> angstfruhstuck", function() {deepEqual( Stem("angstfrühstück"), "angstfruhstuck");});
test("ängstigte -> angstigt", function() {deepEqual( Stem("ängstigte"), "angstigt");});
test("ängstlich -> angstlich", function() {deepEqual( Stem("ängstlich"), "angstlich");});
test("angstvoll -> angstvoll", function() {deepEqual( Stem("angstvoll"), "angstvoll");});
test("anguckte -> anguckt", function() {deepEqual( Stem("anguckte"), "anguckt");});
test("anguckten -> anguckt", function() {deepEqual( Stem("anguckten"), "anguckt");});
test("angues -> angu", function() {deepEqual( Stem("angues"), "angu");});
test("angustia -> angustia", function() {deepEqual( Stem("angustia"), "angustia");});
test("anhabe -> anhab", function() {deepEqual( Stem("anhabe"), "anhab");});
test("anhaben -> anhab", function() {deepEqual( Stem("anhaben"), "anhab");});
test("anhaftende -> anhaft", function() {deepEqual( Stem("anhaftende"), "anhaft");});
test("anhaltend -> anhalt", function() {deepEqual( Stem("anhaltend"), "anhalt");});
test("anhaltende -> anhalt", function() {deepEqual( Stem("anhaltende"), "anhalt");});
test("anhaltenden -> anhalt", function() {deepEqual( Stem("anhaltenden"), "anhalt");});
test("anhaltender -> anhalt", function() {deepEqual( Stem("anhaltender"), "anhalt");});
test("anhaltst -> anhalt", function() {deepEqual( Stem("anhaltst"), "anhalt");});
test("anhang -> anhang", function() {deepEqual( Stem("anhang"), "anhang");});
test("anhangen -> anhang", function() {deepEqual( Stem("anhangen"), "anhang");});
test("anhängen -> anhang", function() {deepEqual( Stem("anhängen"), "anhang");});
test("anhänger -> anhang", function() {deepEqual( Stem("anhänger"), "anhang");});
test("anhängerinnen -> anhangerinn", function() {deepEqual( Stem("anhängerinnen"), "anhangerinn");});
test("anhänglich -> anhang", function() {deepEqual( Stem("anhänglich"), "anhang");});
test("anhänglichkeit -> anhang", function() {deepEqual( Stem("anhänglichkeit"), "anhang");});
test("anhängsel -> anhangsel", function() {deepEqual( Stem("anhängsel"), "anhangsel");});
test("anhängt -> anhangt", function() {deepEqual( Stem("anhängt"), "anhangt");});
test("anhat -> anhat", function() {deepEqual( Stem("anhat"), "anhat");});
test("anhäuft -> anhauft", function() {deepEqual( Stem("anhäuft"), "anhauft");});
test("anhäuften -> anhauft", function() {deepEqual( Stem("anhäuften"), "anhauft");});
test("anhebt -> anhebt", function() {deepEqual( Stem("anhebt"), "anhebt");});
test("anheilte -> anheilt", function() {deepEqual( Stem("anheilte"), "anheilt");});
test("anheim -> anheim", function() {deepEqual( Stem("anheim"), "anheim");});
test("anheimfallen -> anheimfall", function() {deepEqual( Stem("anheimfallen"), "anheimfall");});
test("anheimfällt -> anheimfallt", function() {deepEqual( Stem("anheimfällt"), "anheimfallt");});
test("anheimfiel -> anheimfiel", function() {deepEqual( Stem("anheimfiel"), "anheimfiel");});
test("anheimgegeben -> anheimgegeb", function() {deepEqual( Stem("anheimgegeben"), "anheimgegeb");});
test("anher -> anh", function() {deepEqual( Stem("anher"), "anh");});
test("anhieb -> anhieb", function() {deepEqual( Stem("anhieb"), "anhieb");});
test("anhielt -> anhielt", function() {deepEqual( Stem("anhielt"), "anhielt");});
test("anhing -> anhing", function() {deepEqual( Stem("anhing"), "anhing");});
test("anhinge -> anhing", function() {deepEqual( Stem("anhinge"), "anhing");});
test("anhingen -> anhing", function() {deepEqual( Stem("anhingen"), "anhing");});
test("anhöhe -> anhoh", function() {deepEqual( Stem("anhöhe"), "anhoh");});
test("anhören -> anhor", function() {deepEqual( Stem("anhören"), "anhor");});
test("anhört -> anhort", function() {deepEqual( Stem("anhört"), "anhort");});
test("anhörte -> anhort", function() {deepEqual( Stem("anhörte"), "anhort");});
test("anhörten -> anhort", function() {deepEqual( Stem("anhörten"), "anhort");});
test("anima -> anima", function() {deepEqual( Stem("anima"), "anima");});
test("animadvertentia -> animadvertentia", function() {deepEqual( Stem("animadvertentia"), "animadvertentia");});
test("animalia -> animalia", function() {deepEqual( Stem("animalia"), "animalia");});
test("animalium -> animalium", function() {deepEqual( Stem("animalium"), "animalium");});
test("animi -> animi", function() {deepEqual( Stem("animi"), "animi");});
test("anjene -> anj", function() {deepEqual( Stem("anjene"), "anj");});
test("anjetzt -> anjetzt", function() {deepEqual( Stem("anjetzt"), "anjetzt");});
test("ankam -> ankam", function() {deepEqual( Stem("ankam"), "ankam");});
test("ankäme -> ankam", function() {deepEqual( Stem("ankäme"), "ankam");});
test("ankamen -> ankam", function() {deepEqual( Stem("ankamen"), "ankam");});
test("ankara -> ankara", function() {deepEqual( Stem("ankara"), "ankara");});
test("ankäufe -> ankauf", function() {deepEqual( Stem("ankäufe"), "ankauf");});
test("anker -> ank", function() {deepEqual( Stem("anker"), "ank");});
test("anklage -> anklag", function() {deepEqual( Stem("anklage"), "anklag");});
test("anklagen -> anklag", function() {deepEqual( Stem("anklagen"), "anklag");});
test("anklagend -> anklag", function() {deepEqual( Stem("anklagend"), "anklag");});
test("anklagepunkte -> anklagepunkt", function() {deepEqual( Stem("anklagepunkte"), "anklagepunkt");});
test("anklageschrift -> anklageschrift", function() {deepEqual( Stem("anklageschrift"), "anklageschrift");});
test("anklagt -> anklagt", function() {deepEqual( Stem("anklagt"), "anklagt");});
test("anklagte -> anklagt", function() {deepEqual( Stem("anklagte"), "anklagt");});
test("anklagten -> anklagt", function() {deepEqual( Stem("anklagten"), "anklagt");});
test("ankleben -> ankleb", function() {deepEqual( Stem("ankleben"), "ankleb");});
test("anklebenden -> ankleb", function() {deepEqual( Stem("anklebenden"), "ankleb");});
test("anklebte -> anklebt", function() {deepEqual( Stem("anklebte"), "anklebt");});
test("anklopfen -> anklopf", function() {deepEqual( Stem("anklopfen"), "anklopf");});
test("anknabbern -> anknabb", function() {deepEqual( Stem("anknabbern"), "anknabb");});
test("ankomme -> ankomm", function() {deepEqual( Stem("ankomme"), "ankomm");});
test("ankommen -> ankomm", function() {deepEqual( Stem("ankommen"), "ankomm");});
test("ankommender -> ankomm", function() {deepEqual( Stem("ankommender"), "ankomm");});
test("ankömmlingen -> ankommling", function() {deepEqual( Stem("ankömmlingen"), "ankommling");});
test("ankommt -> ankommt", function() {deepEqual( Stem("ankommt"), "ankommt");});
test("ankündigen -> ankund", function() {deepEqual( Stem("ankündigen"), "ankund");});
test("ankündigte -> ankundigt", function() {deepEqual( Stem("ankündigte"), "ankundigt");});
test("ankündigung -> ankund", function() {deepEqual( Stem("ankündigung"), "ankund");});
test("ankunft -> ankunft", function() {deepEqual( Stem("ankunft"), "ankunft");});
test("ankunfthalle -> ankunfthall", function() {deepEqual( Stem("ankunfthalle"), "ankunfthall");});
test("anlächelte -> anlachelt", function() {deepEqual( Stem("anlächelte"), "anlachelt");});
test("anlachen -> anlach", function() {deepEqual( Stem("anlachen"), "anlach");});
test("anlachte -> anlacht", function() {deepEqual( Stem("anlachte"), "anlacht");});
test("anlage -> anlag", function() {deepEqual( Stem("anlage"), "anlag");});
test("anlagen -> anlag", function() {deepEqual( Stem("anlagen"), "anlag");});
test("anlangt -> anlangt", function() {deepEqual( Stem("anlangt"), "anlangt");});
test("anlangte -> anlangt", function() {deepEqual( Stem("anlangte"), "anlangt");});
test("anlass -> anlass", function() {deepEqual( Stem("anlass"), "anlass");});
test("anlaß -> anlass", function() {deepEqual( Stem("anlaß"), "anlass");});
test("anlässe -> anlass", function() {deepEqual( Stem("anlässe"), "anlass");});
test("anlaufstelle -> anlaufstell", function() {deepEqual( Stem("anlaufstelle"), "anlaufstell");});
test("anläuft -> anlauft", function() {deepEqual( Stem("anläuft"), "anlauft");});
test("anlegen -> anleg", function() {deepEqual( Stem("anlegen"), "anleg");});
test("anlegte -> anlegt", function() {deepEqual( Stem("anlegte"), "anlegt");});
test("anlegten -> anlegt", function() {deepEqual( Stem("anlegten"), "anlegt");});
test("anlegung -> anleg", function() {deepEqual( Stem("anlegung"), "anleg");});
test("anlehnung -> anlehn", function() {deepEqual( Stem("anlehnung"), "anlehn");});
test("anleitung -> anleit", function() {deepEqual( Stem("anleitung"), "anleit");});
test("anleitungen -> anleit", function() {deepEqual( Stem("anleitungen"), "anleit");});
test("anliegen -> anlieg", function() {deepEqual( Stem("anliegen"), "anlieg");});
test("anliegendes -> anlieg", function() {deepEqual( Stem("anliegendes"), "anlieg");});
test("anlockte -> anlockt", function() {deepEqual( Stem("anlockte"), "anlockt");});
test("anlockungen -> anlock", function() {deepEqual( Stem("anlockungen"), "anlock");});
test("anlügt -> anlugt", function() {deepEqual( Stem("anlügt"), "anlugt");});
test("anm -> anm", function() {deepEqual( Stem("anm"), "anm");});
test("anmassen -> anmass", function() {deepEqual( Stem("anmassen"), "anmass");});
test("anmaßen -> anmass", function() {deepEqual( Stem("anmaßen"), "anmass");});
test("anmasst -> anmasst", function() {deepEqual( Stem("anmasst"), "anmasst");});
test("anmassung -> anmass", function() {deepEqual( Stem("anmassung"), "anmass");});
test("anmassungen -> anmass", function() {deepEqual( Stem("anmassungen"), "anmass");});
test("anmelden -> anmeld", function() {deepEqual( Stem("anmelden"), "anmeld");});
test("anmerkung -> anmerk", function() {deepEqual( Stem("anmerkung"), "anmerk");});
test("anmerkungen -> anmerk", function() {deepEqual( Stem("anmerkungen"), "anmerk");});
test("anmut -> anmut", function() {deepEqual( Stem("anmut"), "anmut");});
test("anmutig -> anmut", function() {deepEqual( Stem("anmutig"), "anmut");});
test("anmutige -> anmut", function() {deepEqual( Stem("anmutige"), "anmut");});
test("anmutigen -> anmut", function() {deepEqual( Stem("anmutigen"), "anmut");});
test("anmutiger -> anmut", function() {deepEqual( Stem("anmutiger"), "anmut");});
test("anmutiges -> anmut", function() {deepEqual( Stem("anmutiges"), "anmut");});
test("anmutigste -> anmut", function() {deepEqual( Stem("anmutigste"), "anmut");});
test("anmutungen -> anmut", function() {deepEqual( Stem("anmutungen"), "anmut");});
test("anna -> anna", function() {deepEqual( Stem("anna"), "anna");});
test("annäherung -> annaher", function() {deepEqual( Stem("annäherung"), "annaher");});
test("annäherungsweise -> annaherungsweis", function() {deepEqual( Stem("annäherungsweise"), "annaherungsweis");});
test("annahm -> annahm", function() {deepEqual( Stem("annahm"), "annahm");});
test("annahme -> annahm", function() {deepEqual( Stem("annahme"), "annahm");});
test("annähme -> annahm", function() {deepEqual( Stem("annähme"), "annahm");});
test("annahmen -> annahm", function() {deepEqual( Stem("annahmen"), "annahm");});
test("anne -> ann", function() {deepEqual( Stem("anne"), "ann");});
test("annehmbaren -> annehmbar", function() {deepEqual( Stem("annehmbaren"), "annehmbar");});
test("annehme -> annehm", function() {deepEqual( Stem("annehme"), "annehm");});
test("annehmen -> annehm", function() {deepEqual( Stem("annehmen"), "annehm");});
test("annehmlich -> annehm", function() {deepEqual( Stem("annehmlich"), "annehm");});
test("annehmlichkeit -> annehm", function() {deepEqual( Stem("annehmlichkeit"), "annehm");});
test("annehmung -> annehm", function() {deepEqual( Stem("annehmung"), "annehm");});
test("annelieschen -> anneliesch", function() {deepEqual( Stem("annelieschen"), "anneliesch");});
test("anneliese -> annelies", function() {deepEqual( Stem("anneliese"), "annelies");});
test("annelieses -> annelies", function() {deepEqual( Stem("annelieses"), "annelies");});
test("annimmst -> annimm", function() {deepEqual( Stem("annimmst"), "annimm");});
test("annimmt -> annimmt", function() {deepEqual( Stem("annimmt"), "annimmt");});
test("annneliese -> annnelies", function() {deepEqual( Stem("annneliese"), "annnelies");});
test("anno -> anno", function() {deepEqual( Stem("anno"), "anno");});
test("anordnung -> anordn", function() {deepEqual( Stem("anordnung"), "anordn");});
test("anpacken -> anpack", function() {deepEqual( Stem("anpacken"), "anpack");});
test("anpackt -> anpackt", function() {deepEqual( Stem("anpackt"), "anpackt");});
test("anprallen -> anprall", function() {deepEqual( Stem("anprallen"), "anprall");});
test("anpreisen -> anpreis", function() {deepEqual( Stem("anpreisen"), "anpreis");});
test("anpumpen -> anpump", function() {deepEqual( Stem("anpumpen"), "anpump");});
test("anrätig -> anrat", function() {deepEqual( Stem("anrätig"), "anrat");});
test("anratungswürdiger -> anratungswurd", function() {deepEqual( Stem("anratungswürdiger"), "anratungswurd");});
test("anreden -> anred", function() {deepEqual( Stem("anreden"), "anred");});
test("anredete -> anredet", function() {deepEqual( Stem("anredete"), "anredet");});
test("anregen -> anreg", function() {deepEqual( Stem("anregen"), "anreg");});
test("anregend -> anreg", function() {deepEqual( Stem("anregend"), "anreg");});
test("anregt -> anregt", function() {deepEqual( Stem("anregt"), "anregt");});
test("anregung -> anreg", function() {deepEqual( Stem("anregung"), "anreg");});
test("anregungen -> anreg", function() {deepEqual( Stem("anregungen"), "anreg");});
test("anreihte -> anreiht", function() {deepEqual( Stem("anreihte"), "anreiht");});
test("anreizen -> anreiz", function() {deepEqual( Stem("anreizen"), "anreiz");});
test("anrichten -> anricht", function() {deepEqual( Stem("anrichten"), "anricht");});
test("anrichtete -> anrichtet", function() {deepEqual( Stem("anrichtete"), "anrichtet");});
test("anrief -> anrief", function() {deepEqual( Stem("anrief"), "anrief");});
test("anruf -> anruf", function() {deepEqual( Stem("anruf"), "anruf");});
test("anrufbeantworter -> anrufbeantwort", function() {deepEqual( Stem("anrufbeantworter"), "anrufbeantwort");});
test("anrufen -> anruf", function() {deepEqual( Stem("anrufen"), "anruf");});
test("anrufung -> anruf", function() {deepEqual( Stem("anrufung"), "anruf");});
test("anrühren -> anruhr", function() {deepEqual( Stem("anrühren"), "anruhr");});
test("anrührte -> anruhrt", function() {deepEqual( Stem("anrührte"), "anruhrt");});
test("ans -> ans", function() {deepEqual( Stem("ans"), "ans");});
test("ansagen -> ansag", function() {deepEqual( Stem("ansagen"), "ansag");});
test("ansah -> ansah", function() {deepEqual( Stem("ansah"), "ansah");});
test("ansähe -> ansah", function() {deepEqual( Stem("ansähe"), "ansah");});
test("ansahen -> ansah", function() {deepEqual( Stem("ansahen"), "ansah");});
test("ansammelten -> ansammelt", function() {deepEqual( Stem("ansammelten"), "ansammelt");});
test("ansammlungen -> ansamml", function() {deepEqual( Stem("ansammlungen"), "ansamml");});
test("ansatz -> ansatz", function() {deepEqual( Stem("ansatz"), "ansatz");});
test("anschafft -> anschafft", function() {deepEqual( Stem("anschafft"), "anschafft");});
test("anschauen -> anschau", function() {deepEqual( Stem("anschauen"), "anschau");});
test("anschauend -> anschau", function() {deepEqual( Stem("anschauend"), "anschau");});
test("anschaulich -> anschaulich", function() {deepEqual( Stem("anschaulich"), "anschaulich");});
test("anschaun -> anschaun", function() {deepEqual( Stem("anschaun"), "anschaun");});
test("anschaut -> anschaut", function() {deepEqual( Stem("anschaut"), "anschaut");});
test("anschauung -> anschau", function() {deepEqual( Stem("anschauung"), "anschau");});
test("anschauungen -> anschau", function() {deepEqual( Stem("anschauungen"), "anschau");});
test("anschauungsfähigkeit -> anschauungsfah", function() {deepEqual( Stem("anschauungsfähigkeit"), "anschauungsfah");});
test("anschauungsweise -> anschauungsweis", function() {deepEqual( Stem("anschauungsweise"), "anschauungsweis");});
test("anschein -> anschein", function() {deepEqual( Stem("anschein"), "anschein");});
test("anscheine -> anschein", function() {deepEqual( Stem("anscheine"), "anschein");});
test("anscheinend -> anschein", function() {deepEqual( Stem("anscheinend"), "anschein");});
test("anscheinender -> anschein", function() {deepEqual( Stem("anscheinender"), "anschein");});
test("anschlag -> anschlag", function() {deepEqual( Stem("anschlag"), "anschlag");});
test("anschlagen -> anschlag", function() {deepEqual( Stem("anschlagen"), "anschlag");});
test("anschlägt -> anschlagt", function() {deepEqual( Stem("anschlägt"), "anschlagt");});
test("anschliessen -> anschliess", function() {deepEqual( Stem("anschliessen"), "anschliess");});
test("anschließen -> anschliess", function() {deepEqual( Stem("anschließen"), "anschliess");});
test("anschliessend -> anschliess", function() {deepEqual( Stem("anschliessend"), "anschliess");});
test("anschliesst -> anschliesst", function() {deepEqual( Stem("anschliesst"), "anschliesst");});
test("anschließt -> anschliesst", function() {deepEqual( Stem("anschließt"), "anschliesst");});
test("anschloss -> anschloss", function() {deepEqual( Stem("anschloss"), "anschloss");});
test("anschloß -> anschloss", function() {deepEqual( Stem("anschloß"), "anschloss");});
test("anschluss -> anschluss", function() {deepEqual( Stem("anschluss"), "anschluss");});
test("anschluß -> anschluss", function() {deepEqual( Stem("anschluß"), "anschluss");});
test("anschneiden -> anschneid", function() {deepEqual( Stem("anschneiden"), "anschneid");});
test("ansehe -> anseh", function() {deepEqual( Stem("ansehe"), "anseh");});
test("ansehen -> anseh", function() {deepEqual( Stem("ansehen"), "anseh");});
test("ansehn -> ansehn", function() {deepEqual( Stem("ansehn"), "ansehn");});
test("ansehnliche -> ansehn", function() {deepEqual( Stem("ansehnliche"), "ansehn");});
test("ansehnlicher -> ansehn", function() {deepEqual( Stem("ansehnlicher"), "ansehn");});
test("ansehnliches -> ansehn", function() {deepEqual( Stem("ansehnliches"), "ansehn");});
test("ansehung -> anseh", function() {deepEqual( Stem("ansehung"), "anseh");});
test("ansicht -> ansicht", function() {deepEqual( Stem("ansicht"), "ansicht");});
test("ansichten -> ansicht", function() {deepEqual( Stem("ansichten"), "ansicht");});
test("ansieht -> ansieht", function() {deepEqual( Stem("ansieht"), "ansieht");});
test("ansitz -> ansitz", function() {deepEqual( Stem("ansitz"), "ansitz");});
test("ansitzen -> ansitz", function() {deepEqual( Stem("ansitzen"), "ansitz");});
test("ansonst -> anson", function() {deepEqual( Stem("ansonst"), "anson");});
test("ansonsten -> anson", function() {deepEqual( Stem("ansonsten"), "anson");});
test("anspannen -> anspann", function() {deepEqual( Stem("anspannen"), "anspann");});
test("anspielte -> anspielt", function() {deepEqual( Stem("anspielte"), "anspielt");});
test("anspielung -> anspiel", function() {deepEqual( Stem("anspielung"), "anspiel");});
test("anspielungen -> anspiel", function() {deepEqual( Stem("anspielungen"), "anspiel");});
test("anspornung -> ansporn", function() {deepEqual( Stem("anspornung"), "ansporn");});
test("ansprache -> ansprach", function() {deepEqual( Stem("ansprache"), "ansprach");});
test("ansprechen -> ansprech", function() {deepEqual( Stem("ansprechen"), "ansprech");});
test("ansprechend -> ansprech", function() {deepEqual( Stem("ansprechend"), "ansprech");});
test("ansprechende -> ansprech", function() {deepEqual( Stem("ansprechende"), "ansprech");});
test("anspricht -> anspricht", function() {deepEqual( Stem("anspricht"), "anspricht");});
test("anspringt -> anspringt", function() {deepEqual( Stem("anspringt"), "anspringt");});
test("anspruch -> anspruch", function() {deepEqual( Stem("anspruch"), "anspruch");});
test("ansprüche -> anspruch", function() {deepEqual( Stem("ansprüche"), "anspruch");});
test("anspruchlosen -> anspruchlos", function() {deepEqual( Stem("anspruchlosen"), "anspruchlos");});
test("anspruchlosesten -> anspruchlos", function() {deepEqual( Stem("anspruchlosesten"), "anspruchlos");});
test("anspruchsvollen -> anspruchsvoll", function() {deepEqual( Stem("anspruchsvollen"), "anspruchsvoll");});
test("anstach -> anstach", function() {deepEqual( Stem("anstach"), "anstach");});
test("anstalt -> anstalt", function() {deepEqual( Stem("anstalt"), "anstalt");});
test("anstalten -> anstalt", function() {deepEqual( Stem("anstalten"), "anstalt");});
test("anstand -> anstand", function() {deepEqual( Stem("anstand"), "anstand");});
test("anständig -> anstand", function() {deepEqual( Stem("anständig"), "anstand");});
test("anständige -> anstand", function() {deepEqual( Stem("anständige"), "anstand");});
test("anständigen -> anstand", function() {deepEqual( Stem("anständigen"), "anstand");});
test("anständiger -> anstand", function() {deepEqual( Stem("anständiger"), "anstand");});
test("anständigere -> anstand", function() {deepEqual( Stem("anständigere"), "anstand");});
test("anständiges -> anstand", function() {deepEqual( Stem("anständiges"), "anstand");});
test("anstarren -> anstarr", function() {deepEqual( Stem("anstarren"), "anstarr");});
test("anstatt -> anstatt", function() {deepEqual( Stem("anstatt"), "anstatt");});
test("ansteckend -> ansteck", function() {deepEqual( Stem("ansteckend"), "ansteck");});
test("anstehe -> ansteh", function() {deepEqual( Stem("anstehe"), "ansteh");});
test("ansteht -> ansteht", function() {deepEqual( Stem("ansteht"), "ansteht");});
test("ansteigende -> ansteig", function() {deepEqual( Stem("ansteigende"), "ansteig");});
test("ansteigenden -> ansteig", function() {deepEqual( Stem("ansteigenden"), "ansteig");});
test("anstelle -> anstell", function() {deepEqual( Stem("anstelle"), "anstell");});
test("anstellen -> anstell", function() {deepEqual( Stem("anstellen"), "anstell");});
test("anstellig -> anstell", function() {deepEqual( Stem("anstellig"), "anstell");});
test("anstellte -> anstellt", function() {deepEqual( Stem("anstellte"), "anstellt");});
test("anstiess -> anstiess", function() {deepEqual( Stem("anstiess"), "anstiess");});
test("anstoss -> anstoss", function() {deepEqual( Stem("anstoss"), "anstoss");});
test("anstoß -> anstoss", function() {deepEqual( Stem("anstoß"), "anstoss");});
test("anstösse -> anstoss", function() {deepEqual( Stem("anstösse"), "anstoss");});
test("anstöße -> anstoss", function() {deepEqual( Stem("anstöße"), "anstoss");});
test("anstossen -> anstoss", function() {deepEqual( Stem("anstossen"), "anstoss");});
test("anstoßen -> anstoss", function() {deepEqual( Stem("anstoßen"), "anstoss");});
test("anstosses -> anstoss", function() {deepEqual( Stem("anstosses"), "anstoss");});
test("anstoßes -> anstoss", function() {deepEqual( Stem("anstoßes"), "anstoss");});
test("anstösst -> anstosst", function() {deepEqual( Stem("anstösst"), "anstosst");});
test("anstößt -> anstosst", function() {deepEqual( Stem("anstößt"), "anstosst");});
test("anstrengend -> anstreng", function() {deepEqual( Stem("anstrengend"), "anstreng");});
test("anstrengende -> anstreng", function() {deepEqual( Stem("anstrengende"), "anstreng");});
test("anstrengenden -> anstreng", function() {deepEqual( Stem("anstrengenden"), "anstreng");});
test("anstrengung -> anstreng", function() {deepEqual( Stem("anstrengung"), "anstreng");});
test("anstrengungen -> anstreng", function() {deepEqual( Stem("anstrengungen"), "anstreng");});
test("anstrich -> anstrich", function() {deepEqual( Stem("anstrich"), "anstrich");});
test("anstürmen -> ansturm", function() {deepEqual( Stem("anstürmen"), "ansturm");});
test("antat -> antat", function() {deepEqual( Stem("antat"), "antat");});
test("anteil -> anteil", function() {deepEqual( Stem("anteil"), "anteil");});
test("anteilhaber -> anteilhab", function() {deepEqual( Stem("anteilhaber"), "anteilhab");});
test("anteils -> anteil", function() {deepEqual( Stem("anteils"), "anteil");});
test("antelephoniert -> antelephoniert", function() {deepEqual( Stem("antelephoniert"), "antelephoniert");});
test("anthropomorphismen -> anthropomorphism", function() {deepEqual( Stem("anthropomorphismen"), "anthropomorphism");});
test("anthropomorphismus -> anthropomorphismus", function() {deepEqual( Stem("anthropomorphismus"), "anthropomorphismus");});
test("anthropomorphistisch -> anthropomorphist", function() {deepEqual( Stem("anthropomorphistisch"), "anthropomorphist");});
test("anthropomorphistische -> anthropomorphist", function() {deepEqual( Stem("anthropomorphistische"), "anthropomorphist");});
test("anti -> anti", function() {deepEqual( Stem("anti"), "anti");});
test("antikeimenon -> antikeimenon", function() {deepEqual( Stem("antikeimenon"), "antikeimenon");});
test("antin -> antin", function() {deepEqual( Stem("antin"), "antin");});
test("antinomie -> antinomi", function() {deepEqual( Stem("antinomie"), "antinomi");});
test("antipathie -> antipathi", function() {deepEqual( Stem("antipathie"), "antipathi");});
test("antlitz -> antlitz", function() {deepEqual( Stem("antlitz"), "antlitz");});
test("antorten -> antort", function() {deepEqual( Stem("antorten"), "antort");});
test("anträfe -> antraf", function() {deepEqual( Stem("anträfe"), "antraf");});
test("anträge -> antrag", function() {deepEqual( Stem("anträge"), "antrag");});
test("antragsteller -> antragstell", function() {deepEqual( Stem("antragsteller"), "antragstell");});
test("antreffen -> antreff", function() {deepEqual( Stem("antreffen"), "antreff");});
test("antreiben -> antreib", function() {deepEqual( Stem("antreiben"), "antreib");});
test("antreibend -> antreib", function() {deepEqual( Stem("antreibend"), "antreib");});
test("antreibt -> antreibt", function() {deepEqual( Stem("antreibt"), "antreibt");});
test("antretet -> antretet", function() {deepEqual( Stem("antretet"), "antretet");});
test("antrieb -> antrieb", function() {deepEqual( Stem("antrieb"), "antrieb");});
test("antriebe -> antrieb", function() {deepEqual( Stem("antriebe"), "antrieb");});
test("antrieben -> antrieb", function() {deepEqual( Stem("antrieben"), "antrieb");});
test("antriebs -> antrieb", function() {deepEqual( Stem("antriebs"), "antrieb");});
test("antrifft -> antrifft", function() {deepEqual( Stem("antrifft"), "antrifft");});
test("antritt -> antritt", function() {deepEqual( Stem("antritt"), "antritt");});
test("antun -> antun", function() {deepEqual( Stem("antun"), "antun");});
test("antut -> antut", function() {deepEqual( Stem("antut"), "antut");});
test("antwort -> antwort", function() {deepEqual( Stem("antwort"), "antwort");});
test("antworte -> antwort", function() {deepEqual( Stem("antworte"), "antwort");});
test("antworten -> antwort", function() {deepEqual( Stem("antworten"), "antwort");});
test("antwortet -> antwortet", function() {deepEqual( Stem("antwortet"), "antwortet");});
test("antwortete -> antwortet", function() {deepEqual( Stem("antwortete"), "antwortet");});
test("antworteten -> antwortet", function() {deepEqual( Stem("antworteten"), "antwortet");});
test("anvertraue -> anvertrau", function() {deepEqual( Stem("anvertraue"), "anvertrau");});
test("anvertrauet -> anvertrauet", function() {deepEqual( Stem("anvertrauet"), "anvertrauet");});
test("anvertraute -> anvertraut", function() {deepEqual( Stem("anvertraute"), "anvertraut");});
test("anvertrauten -> anvertraut", function() {deepEqual( Stem("anvertrauten"), "anvertraut");});
test("anverwandten -> anverwandt", function() {deepEqual( Stem("anverwandten"), "anverwandt");});
test("anvisierte -> anvisiert", function() {deepEqual( Stem("anvisierte"), "anvisiert");});
test("anwachs -> anwach", function() {deepEqual( Stem("anwachs"), "anwach");});
test("anwachsen -> anwachs", function() {deepEqual( Stem("anwachsen"), "anwachs");});
test("anwälten -> anwalt", function() {deepEqual( Stem("anwälten"), "anwalt");});
test("anwandeln -> anwandeln", function() {deepEqual( Stem("anwandeln"), "anwandeln");});
test("anwandlung -> anwandl", function() {deepEqual( Stem("anwandlung"), "anwandl");});
test("anwandten -> anwandt", function() {deepEqual( Stem("anwandten"), "anwandt");});
test("anweisung -> anweis", function() {deepEqual( Stem("anweisung"), "anweis");});
test("anweisungen -> anweis", function() {deepEqual( Stem("anweisungen"), "anweis");});
test("anwendbar -> anwendbar", function() {deepEqual( Stem("anwendbar"), "anwendbar");});
test("anwendbare -> anwendbar", function() {deepEqual( Stem("anwendbare"), "anwendbar");});
test("anwenden -> anwend", function() {deepEqual( Stem("anwenden"), "anwend");});
test("anwendet -> anwendet", function() {deepEqual( Stem("anwendet"), "anwendet");});
test("anwendeten -> anwendet", function() {deepEqual( Stem("anwendeten"), "anwendet");});
test("anwendung -> anwend", function() {deepEqual( Stem("anwendung"), "anwend");});
test("anwerben -> anwerb", function() {deepEqual( Stem("anwerben"), "anwerb");});
test("anwesen -> anwes", function() {deepEqual( Stem("anwesen"), "anwes");});
test("anwesend -> anwes", function() {deepEqual( Stem("anwesend"), "anwes");});
test("anwesenden -> anwes", function() {deepEqual( Stem("anwesenden"), "anwes");});
test("anwesenheit -> anwes", function() {deepEqual( Stem("anwesenheit"), "anwes");});
test("anwünscht -> anwunscht", function() {deepEqual( Stem("anwünscht"), "anwunscht");});
test("anzahl -> anzahl", function() {deepEqual( Stem("anzahl"), "anzahl");});
test("anzeichen -> anzeich", function() {deepEqual( Stem("anzeichen"), "anzeich");});
test("anzeige -> anzeig", function() {deepEqual( Stem("anzeige"), "anzeig");});
test("anzeigen -> anzeig", function() {deepEqual( Stem("anzeigen"), "anzeig");});
test("anzeigete -> anzeiget", function() {deepEqual( Stem("anzeigete"), "anzeiget");});
test("anzengruber -> anzengrub", function() {deepEqual( Stem("anzengruber"), "anzengrub");});
test("anziehen -> anzieh", function() {deepEqual( Stem("anziehen"), "anzieh");});
test("anziehend -> anzieh", function() {deepEqual( Stem("anziehend"), "anzieh");});
test("anziehende -> anzieh", function() {deepEqual( Stem("anziehende"), "anzieh");});
test("anziehungskraft -> anziehungskraft", function() {deepEqual( Stem("anziehungskraft"), "anziehungskraft");});
test("anzog -> anzog", function() {deepEqual( Stem("anzog"), "anzog");});
test("anzogen -> anzog", function() {deepEqual( Stem("anzogen"), "anzog");});
test("anzublicken -> anzublick", function() {deepEqual( Stem("anzublicken"), "anzublick");});
test("anzudrehen -> anzudreh", function() {deepEqual( Stem("anzudrehen"), "anzudreh");});
test("anzuerkennen -> anzuerkenn", function() {deepEqual( Stem("anzuerkennen"), "anzuerkenn");});
test("anzufahren -> anzufahr", function() {deepEqual( Stem("anzufahren"), "anzufahr");});
test("anzufangen -> anzufang", function() {deepEqual( Stem("anzufangen"), "anzufang");});
test("anzufechten -> anzufecht", function() {deepEqual( Stem("anzufechten"), "anzufecht");});
test("anzufertigen -> anzufert", function() {deepEqual( Stem("anzufertigen"), "anzufert");});
test("anzuführen -> anzufuhr", function() {deepEqual( Stem("anzuführen"), "anzufuhr");});
test("anzug -> anzug", function() {deepEqual( Stem("anzug"), "anzug");});
test("anzuge -> anzug", function() {deepEqual( Stem("anzuge"), "anzug");});
test("anzüge -> anzug", function() {deepEqual( Stem("anzüge"), "anzug");});
test("anzugeben -> anzugeb", function() {deepEqual( Stem("anzugeben"), "anzugeb");});
test("anzugreifen -> anzugreif", function() {deepEqual( Stem("anzugreifen"), "anzugreif");});
test("anzuhalten -> anzuhalt", function() {deepEqual( Stem("anzuhalten"), "anzuhalt");});
test("anzuhängen -> anzuhang", function() {deepEqual( Stem("anzuhängen"), "anzuhang");});
test("anzuheben -> anzuheb", function() {deepEqual( Stem("anzuheben"), "anzuheb");});
test("anzukämpfen -> anzukampf", function() {deepEqual( Stem("anzukämpfen"), "anzukampf");});
test("anzukaufen -> anzukauf", function() {deepEqual( Stem("anzukaufen"), "anzukauf");});
test("anzuklingen -> anzukling", function() {deepEqual( Stem("anzuklingen"), "anzukling");});
test("anzuklopfen -> anzuklopf", function() {deepEqual( Stem("anzuklopfen"), "anzuklopf");});
test("anzukünden -> anzukund", function() {deepEqual( Stem("anzukünden"), "anzukund");});
test("anzulachen -> anzulach", function() {deepEqual( Stem("anzulachen"), "anzulach");});
test("anzulegen -> anzuleg", function() {deepEqual( Stem("anzulegen"), "anzuleg");});
test("anzumassen -> anzumass", function() {deepEqual( Stem("anzumassen"), "anzumass");});
test("anzünden -> anzund", function() {deepEqual( Stem("anzünden"), "anzund");});
test("anzündet -> anzundet", function() {deepEqual( Stem("anzündet"), "anzundet");});
test("anzündete -> anzundet", function() {deepEqual( Stem("anzündete"), "anzundet");});
test("anzunehmen -> anzunehm", function() {deepEqual( Stem("anzunehmen"), "anzunehm");});
test("anzupeilen -> anzupeil", function() {deepEqual( Stem("anzupeilen"), "anzupeil");});
test("anzurufen -> anzuruf", function() {deepEqual( Stem("anzurufen"), "anzuruf");});
test("anzuschauen -> anzuschau", function() {deepEqual( Stem("anzuschauen"), "anzuschau");});
test("anzuschauenden -> anzuschau", function() {deepEqual( Stem("anzuschauenden"), "anzuschau");});
test("anzuschliessen -> anzuschliess", function() {deepEqual( Stem("anzuschliessen"), "anzuschliess");});
test("anzuschließen -> anzuschliess", function() {deepEqual( Stem("anzuschließen"), "anzuschliess");});
test("anzusehen -> anzuseh", function() {deepEqual( Stem("anzusehen"), "anzuseh");});
test("anzusetzen -> anzusetz", function() {deepEqual( Stem("anzusetzen"), "anzusetz");});
test("anzusiedeln -> anzusiedeln", function() {deepEqual( Stem("anzusiedeln"), "anzusiedeln");});
test("anzuspannen -> anzuspann", function() {deepEqual( Stem("anzuspannen"), "anzuspann");});
test("anzusprechen -> anzusprech", function() {deepEqual( Stem("anzusprechen"), "anzusprech");});
test("anzustellen -> anzustell", function() {deepEqual( Stem("anzustellen"), "anzustell");});
test("anzutreffen -> anzutreff", function() {deepEqual( Stem("anzutreffen"), "anzutreff");});
test("anzutreiben -> anzutreib", function() {deepEqual( Stem("anzutreiben"), "anzutreib");});
test("anzuweisen -> anzuweis", function() {deepEqual( Stem("anzuweisen"), "anzuweis");});
test("anzuwenden -> anzuw", function() {deepEqual( Stem("anzuwenden"), "anzuw");});
test("anzuzeigen -> anzuzeig", function() {deepEqual( Stem("anzuzeigen"), "anzuzeig");});
test("anzuzetteln -> anzuzetteln", function() {deepEqual( Stem("anzuzetteln"), "anzuzetteln");});
test("anzuziehen -> anzuzieh", function() {deepEqual( Stem("anzuziehen"), "anzuzieh");});
test("apfel -> apfel", function() {deepEqual( Stem("apfel"), "apfel");});
test("äpfel -> apfel", function() {deepEqual( Stem("äpfel"), "apfel");});
test("apfelbaum -> apfelbaum", function() {deepEqual( Stem("apfelbaum"), "apfelbaum");});
test("apfelbäumchens -> apfelbaumch", function() {deepEqual( Stem("apfelbäumchens"), "apfelbaumch");});
test("apfelbaumes -> apfelbaum", function() {deepEqual( Stem("apfelbaumes"), "apfelbaum");});
test("apfelblüten -> apfelblut", function() {deepEqual( Stem("apfelblüten"), "apfelblut");});
test("apfelblütenhauchen -> apfelblutenhauch", function() {deepEqual( Stem("apfelblütenhauchen"), "apfelblutenhauch");});
test("äpfelchen -> apfelch", function() {deepEqual( Stem("äpfelchen"), "apfelch");});
test("äpfeln -> apfeln", function() {deepEqual( Stem("äpfeln"), "apfeln");});
test("apfelsaft -> apfelsaft", function() {deepEqual( Stem("apfelsaft"), "apfelsaft");});
test("aphras -> aphras", function() {deepEqual( Stem("aphras"), "aphras");});
test("apodiktisch -> apodikt", function() {deepEqual( Stem("apodiktisch"), "apodikt");});
test("apodiktischen -> apodikt", function() {deepEqual( Stem("apodiktischen"), "apodikt");});
test("apodiktischer -> apodikt", function() {deepEqual( Stem("apodiktischer"), "apodikt");});
test("apodiktisches -> apodikt", function() {deepEqual( Stem("apodiktisches"), "apodikt");});
test("apokrisewv -> apokrisewv", function() {deepEqual( Stem("apokrisewv"), "apokrisewv");});
test("apollyon -> apollyon", function() {deepEqual( Stem("apollyon"), "apollyon");});
test("apologie -> apologi", function() {deepEqual( Stem("apologie"), "apologi");});
test("apostel -> apostel", function() {deepEqual( Stem("apostel"), "apostel");});
test("apostolische -> apostol", function() {deepEqual( Stem("apostolische"), "apostol");});
test("apparat -> apparat", function() {deepEqual( Stem("apparat"), "apparat");});
test("apparentia -> apparentia", function() {deepEqual( Stem("apparentia"), "apparentia");});
test("apparet -> apparet", function() {deepEqual( Stem("apparet"), "apparet");});
test("appartement -> appartement", function() {deepEqual( Stem("appartement"), "appartement");});
test("appell -> appell", function() {deepEqual( Stem("appell"), "appell");});
test("appetimus -> appetimus", function() {deepEqual( Stem("appetimus"), "appetimus");});
test("appetit -> appetit", function() {deepEqual( Stem("appetit"), "appetit");});
test("applaus -> applaus", function() {deepEqual( Stem("applaus"), "applaus");});
test("applicat -> applicat", function() {deepEqual( Stem("applicat"), "applicat");});
test("approbation -> approbation", function() {deepEqual( Stem("approbation"), "approbation");});
test("aprikosen -> aprikos", function() {deepEqual( Stem("aprikosen"), "aprikos");});
test("april -> april", function() {deepEqual( Stem("april"), "april");});
test("aquarien -> aquari", function() {deepEqual( Stem("aquarien"), "aquari");});
test("ara -> ara", function() {deepEqual( Stem("ara"), "ara");});
test("arabien -> arabi", function() {deepEqual( Stem("arabien"), "arabi");});
test("arabiens -> arabi", function() {deepEqual( Stem("arabiens"), "arabi");});
test("arabische -> arab", function() {deepEqual( Stem("arabische"), "arab");});
test("arbeit -> arbeit", function() {deepEqual( Stem("arbeit"), "arbeit");});
test("arbeite -> arbeit", function() {deepEqual( Stem("arbeite"), "arbeit");});
test("arbeiten -> arbeit", function() {deepEqual( Stem("arbeiten"), "arbeit");});
test("arbeitenden -> arbeit", function() {deepEqual( Stem("arbeitenden"), "arbeit");});
test("arbeiter -> arbeit", function() {deepEqual( Stem("arbeiter"), "arbeit");});
test("arbeiterkittel -> arbeiterkittel", function() {deepEqual( Stem("arbeiterkittel"), "arbeiterkittel");});
test("arbeitern -> arbeit", function() {deepEqual( Stem("arbeitern"), "arbeit");});
test("arbeitet -> arbeitet", function() {deepEqual( Stem("arbeitet"), "arbeitet");});
test("arbeitete -> arbeitet", function() {deepEqual( Stem("arbeitete"), "arbeitet");});
test("arbeiteten -> arbeitet", function() {deepEqual( Stem("arbeiteten"), "arbeitet");});
test("arbeitsam -> arbeitsam", function() {deepEqual( Stem("arbeitsam"), "arbeitsam");});
test("arbeitsamen -> arbeitsam", function() {deepEqual( Stem("arbeitsamen"), "arbeitsam");});
test("arbeitsaufnahme -> arbeitsaufnahm", function() {deepEqual( Stem("arbeitsaufnahme"), "arbeitsaufnahm");});
test("arbeitsbeschaffung -> arbeitsbeschaff", function() {deepEqual( Stem("arbeitsbeschaffung"), "arbeitsbeschaff");});
test("arbeitserfolge -> arbeitserfolg", function() {deepEqual( Stem("arbeitserfolge"), "arbeitserfolg");});
test("arbeitserlaubnis -> arbeitserlaubnis", function() {deepEqual( Stem("arbeitserlaubnis"), "arbeitserlaubnis");});
test("arbeitsfähigkeit -> arbeitsfah", function() {deepEqual( Stem("arbeitsfähigkeit"), "arbeitsfah");});
test("arbeitsgemeinschaft -> arbeitsgemeinschaft", function() {deepEqual( Stem("arbeitsgemeinschaft"), "arbeitsgemeinschaft");});
test("arbeitsgemeinschaften -> arbeitsgemeinschaft", function() {deepEqual( Stem("arbeitsgemeinschaften"), "arbeitsgemeinschaft");});
test("arbeitsgeminschaft -> arbeitsgeminschaft", function() {deepEqual( Stem("arbeitsgeminschaft"), "arbeitsgeminschaft");});
test("arbeitskraft -> arbeitskraft", function() {deepEqual( Stem("arbeitskraft"), "arbeitskraft");});
test("arbeitslohn -> arbeitslohn", function() {deepEqual( Stem("arbeitslohn"), "arbeitslohn");});
test("arbeitslosigkeit -> arbeitslos", function() {deepEqual( Stem("arbeitslosigkeit"), "arbeitslos");});
test("arbeitsplatzes -> arbeitsplatz", function() {deepEqual( Stem("arbeitsplatzes"), "arbeitsplatz");});
test("arbeitsschurz -> arbeitsschurz", function() {deepEqual( Stem("arbeitsschurz"), "arbeitsschurz");});
test("arbeitsstelle -> arbeitsstell", function() {deepEqual( Stem("arbeitsstelle"), "arbeitsstell");});
test("arbeitsstrenge -> arbeitsstreng", function() {deepEqual( Stem("arbeitsstrenge"), "arbeitsstreng");});
test("arbeitsstube -> arbeitsstub", function() {deepEqual( Stem("arbeitsstube"), "arbeitsstub");});
test("arbeitsteilung -> arbeitsteil", function() {deepEqual( Stem("arbeitsteilung"), "arbeitsteil");});
test("arbeitstreue -> arbeitstreu", function() {deepEqual( Stem("arbeitstreue"), "arbeitstreu");});
test("arbeitsverkehr -> arbeitsverkehr", function() {deepEqual( Stem("arbeitsverkehr"), "arbeitsverkehr");});
test("arbeitsvermittlung -> arbeitsvermittl", function() {deepEqual( Stem("arbeitsvermittlung"), "arbeitsvermittl");});
test("arbeitsvertrag -> arbeitsvertrag", function() {deepEqual( Stem("arbeitsvertrag"), "arbeitsvertrag");});
test("arbeitsvolles -> arbeitsvoll", function() {deepEqual( Stem("arbeitsvolles"), "arbeitsvoll");});
test("arbeitszimmer -> arbeitszimm", function() {deepEqual( Stem("arbeitszimmer"), "arbeitszimm");});
test("arbeitszimmers -> arbeitszimm", function() {deepEqual( Stem("arbeitszimmers"), "arbeitszimm");});
test("arbet -> arbet", function() {deepEqual( Stem("arbet"), "arbet");});
test("archetypa -> archetypa", function() {deepEqual( Stem("archetypa"), "archetypa");});
test("architekt -> architekt", function() {deepEqual( Stem("architekt"), "architekt");});
test("archiv -> archiv", function() {deepEqual( Stem("archiv"), "archiv");});
test("arg -> arg", function() {deepEqual( Stem("arg"), "arg");});
test("arge -> arg", function() {deepEqual( Stem("arge"), "arg");});
test("argen -> arg", function() {deepEqual( Stem("argen"), "arg");});
test("ärger -> arg", function() {deepEqual( Stem("ärger"), "arg");});
test("ärgere -> arg", function() {deepEqual( Stem("ärgere"), "arg");});
test("ärgeren -> arg", function() {deepEqual( Stem("ärgeren"), "arg");});
test("ärgerlich -> arg", function() {deepEqual( Stem("ärgerlich"), "arg");});
test("ärgerlichen -> arg", function() {deepEqual( Stem("ärgerlichen"), "arg");});
test("ärgern -> arg", function() {deepEqual( Stem("ärgern"), "arg");});
test("ärgernis -> argernis", function() {deepEqual( Stem("ärgernis"), "argernis");});
test("ärgernisse -> argernis", function() {deepEqual( Stem("ärgernisse"), "argernis");});
test("ärgert -> argert", function() {deepEqual( Stem("ärgert"), "argert");});
test("ärgerte -> argert", function() {deepEqual( Stem("ärgerte"), "argert");});
test("ärgerten -> argert", function() {deepEqual( Stem("ärgerten"), "argert");});
test("arges -> arg", function() {deepEqual( Stem("arges"), "arg");});
test("arglos -> arglos", function() {deepEqual( Stem("arglos"), "arglos");});
test("arglosen -> arglos", function() {deepEqual( Stem("arglosen"), "arglos");});
test("argloser -> arglos", function() {deepEqual( Stem("argloser"), "arglos");});
test("argloses -> arglos", function() {deepEqual( Stem("argloses"), "arglos");});
test("ärgste -> argst", function() {deepEqual( Stem("ärgste"), "argst");});
test("ärgsten -> argst", function() {deepEqual( Stem("ärgsten"), "argst");});
test("arguet -> arguet", function() {deepEqual( Stem("arguet"), "arguet");});
test("argument -> argument", function() {deepEqual( Stem("argument"), "argument");});
test("argumentation -> argumentation", function() {deepEqual( Stem("argumentation"), "argumentation");});
test("argumente -> argument", function() {deepEqual( Stem("argumente"), "argument");});
test("argumentiert -> argumentiert", function() {deepEqual( Stem("argumentiert"), "argumentiert");});
test("argwohn -> argwohn", function() {deepEqual( Stem("argwohn"), "argwohn");});
test("aristokraten -> aristokrat", function() {deepEqual( Stem("aristokraten"), "aristokrat");});
test("aristokratie -> aristokrati", function() {deepEqual( Stem("aristokratie"), "aristokrati");});
test("aristokratischer -> aristokrat", function() {deepEqual( Stem("aristokratischer"), "aristokrat");});
test("aristoteles -> aristotel", function() {deepEqual( Stem("aristoteles"), "aristotel");});
test("aristotelischen -> aristotel", function() {deepEqual( Stem("aristotelischen"), "aristotel");});
test("arm -> arm", function() {deepEqual( Stem("arm"), "arm");});
test("armbändern -> armband", function() {deepEqual( Stem("armbändern"), "armband");});
test("armbrust -> armbrust", function() {deepEqual( Stem("armbrust"), "armbrust");});
test("ärmchen -> armch", function() {deepEqual( Stem("ärmchen"), "armch");});
test("arme -> arm", function() {deepEqual( Stem("arme"), "arm");});
test("armee -> arme", function() {deepEqual( Stem("armee"), "arme");});
test("armeeabschaffungsinitiative -> armeeabschaffungsinitiativ", function() {deepEqual( Stem("armeeabschaffungsinitiative"), "armeeabschaffungsinitiativ");});
test("armen -> arm", function() {deepEqual( Stem("armen"), "arm");});
test("armenisch -> armen", function() {deepEqual( Stem("armenisch"), "armen");});
test("armenpfleger -> armenpfleg", function() {deepEqual( Stem("armenpfleger"), "armenpfleg");});
test("armenti -> armenti", function() {deepEqual( Stem("armenti"), "armenti");});
test("armer -> arm", function() {deepEqual( Stem("armer"), "arm");});
test("ärmere -> arm", function() {deepEqual( Stem("ärmere"), "arm");});
test("armes -> arm", function() {deepEqual( Stem("armes"), "arm");});
test("armhöhe -> armhoh", function() {deepEqual( Stem("armhöhe"), "armhoh");});
test("armin -> armin", function() {deepEqual( Stem("armin"), "armin");});
test("armkraft -> armkraft", function() {deepEqual( Stem("armkraft"), "armkraft");});
test("ärmlich -> armlich", function() {deepEqual( Stem("ärmlich"), "armlich");});
test("ärmlichen -> armlich", function() {deepEqual( Stem("ärmlichen"), "armlich");});
test("ärmlicher -> armlich", function() {deepEqual( Stem("ärmlicher"), "armlich");});
test("arms -> arm", function() {deepEqual( Stem("arms"), "arm");});
test("armselige -> armsel", function() {deepEqual( Stem("armselige"), "armsel");});
test("armseligste -> armsel", function() {deepEqual( Stem("armseligste"), "armsel");});
test("ärmste -> armst", function() {deepEqual( Stem("ärmste"), "armst");});
test("ärmsten -> armst", function() {deepEqual( Stem("ärmsten"), "armst");});
test("armut -> armut", function() {deepEqual( Stem("armut"), "armut");});
test("army -> army", function() {deepEqual( Stem("army"), "army");});
test("arphachsad -> arphachsad", function() {deepEqual( Stem("arphachsad"), "arphachsad");});
test("arrnbrust -> arrnbrust", function() {deepEqual( Stem("arrnbrust"), "arrnbrust");});
test("arrogantia -> arrogantia", function() {deepEqual( Stem("arrogantia"), "arrogantia");});
test("arroganz -> arroganz", function() {deepEqual( Stem("arroganz"), "arroganz");});
test("art -> art", function() {deepEqual( Stem("art"), "art");});
test("arten -> art", function() {deepEqual( Stem("arten"), "art");});
test("artes -> art", function() {deepEqual( Stem("artes"), "art");});
test("arthur -> arthur", function() {deepEqual( Stem("arthur"), "arthur");});
test("artig -> artig", function() {deepEqual( Stem("artig"), "artig");});
test("artige -> artig", function() {deepEqual( Stem("artige"), "artig");});
test("artigen -> artig", function() {deepEqual( Stem("artigen"), "artig");});
test("artiger -> artig", function() {deepEqual( Stem("artiger"), "artig");});
test("artiges -> artig", function() {deepEqual( Stem("artiges"), "artig");});
test("artigkeit -> artig", function() {deepEqual( Stem("artigkeit"), "artig");});
test("artikel -> artikel", function() {deepEqual( Stem("artikel"), "artikel");});
test("artikeln -> artikeln", function() {deepEqual( Stem("artikeln"), "artikeln");});
test("artikulierten -> artikuliert", function() {deepEqual( Stem("artikulierten"), "artikuliert");});
test("artilleriegeneral -> artilleriegeneral", function() {deepEqual( Stem("artilleriegeneral"), "artilleriegeneral");});
test("artilleriewesen -> artilleriewes", function() {deepEqual( Stem("artilleriewesen"), "artilleriewes");});
test("artlich -> artlich", function() {deepEqual( Stem("artlich"), "artlich");});
test("arts -> art", function() {deepEqual( Stem("arts"), "art");});
test("arznei -> arznei", function() {deepEqual( Stem("arznei"), "arznei");});
test("arzneimittel -> arzneimittel", function() {deepEqual( Stem("arzneimittel"), "arzneimittel");});
test("arzneimittelvertreter -> arzneimittelvertret", function() {deepEqual( Stem("arzneimittelvertreter"), "arzneimittelvertret");});
test("ärzte -> arzt", function() {deepEqual( Stem("ärzte"), "arzt");});
test("ärztliche -> arztlich", function() {deepEqual( Stem("ärztliche"), "arztlich");});
test("ärztlicher -> arztlich", function() {deepEqual( Stem("ärztlicher"), "arztlich");});
test("ascendenten -> ascendent", function() {deepEqual( Stem("ascendenten"), "ascendent");});
test("asche -> asch", function() {deepEqual( Stem("asche"), "asch");});
test("aschen -> asch", function() {deepEqual( Stem("aschen"), "asch");});
test("aschenbecher -> aschenbech", function() {deepEqual( Stem("aschenbecher"), "aschenbech");});
test("aschenbechern -> aschenbech", function() {deepEqual( Stem("aschenbechern"), "aschenbech");});
test("ascher -> asch", function() {deepEqual( Stem("ascher"), "asch");});
test("aschgraue -> aschgrau", function() {deepEqual( Stem("aschgraue"), "aschgrau");});
test("aschur -> aschur", function() {deepEqual( Stem("aschur"), "aschur");});
test("aschurs -> aschur", function() {deepEqual( Stem("aschurs"), "aschur");});
test("aseka -> aseka", function() {deepEqual( Stem("aseka"), "aseka");});
test("äsen -> asen", function() {deepEqual( Stem("äsen"), "asen");});
test("äsend -> asend", function() {deepEqual( Stem("äsend"), "asend");});
test("äser -> aser", function() {deepEqual( Stem("äser"), "aser");});
test("asiatische -> asiat", function() {deepEqual( Stem("asiatische"), "asiat");});
test("asien -> asi", function() {deepEqual( Stem("asien"), "asi");});
test("aspekt -> aspekt", function() {deepEqual( Stem("aspekt"), "aspekt");});
test("aspekte -> aspekt", function() {deepEqual( Stem("aspekte"), "aspekt");});
test("aspides -> aspid", function() {deepEqual( Stem("aspides"), "aspid");});
test("aspik -> aspik", function() {deepEqual( Stem("aspik"), "aspik");});
test("ass -> ass", function() {deepEqual( Stem("ass"), "ass");});
test("aß -> ass", function() {deepEqual( Stem("aß"), "ass");});
test("assen -> ass", function() {deepEqual( Stem("assen"), "ass");});
test("aßen -> ass", function() {deepEqual( Stem("aßen"), "ass");});
test("ässen -> ass", function() {deepEqual( Stem("ässen"), "ass");});
test("äßen -> ass", function() {deepEqual( Stem("äßen"), "ass");});
test("assertorisch -> assertor", function() {deepEqual( Stem("assertorisch"), "assertor");});
test("assir -> assir", function() {deepEqual( Stem("assir"), "assir");});
test("assistieren -> assisti", function() {deepEqual( Stem("assistieren"), "assisti");});
test("associated -> associated", function() {deepEqual( Stem("associated"), "associated");});
test("associe -> associ", function() {deepEqual( Stem("associe"), "associ");});
test("assoziationen -> assoziation", function() {deepEqual( Stem("assoziationen"), "assoziation");});
test("assoziativer -> assoziativ", function() {deepEqual( Stem("assoziativer"), "assoziativ");});
test("assoziierung -> assoziier", function() {deepEqual( Stem("assoziierung"), "assoziier");});
test("assyrer -> assyr", function() {deepEqual( Stem("assyrer"), "assyr");});
test("ast -> ast", function() {deepEqual( Stem("ast"), "ast");});
test("aste -> ast", function() {deepEqual( Stem("aste"), "ast");});
test("äste -> ast", function() {deepEqual( Stem("äste"), "ast");});
test("asten -> ast", function() {deepEqual( Stem("asten"), "ast");});
test("ästen -> ast", function() {deepEqual( Stem("ästen"), "ast");});
test("aster -> ast", function() {deepEqual( Stem("aster"), "ast");});
test("astern -> ast", function() {deepEqual( Stem("astern"), "ast");});
test("ästhetik -> asthet", function() {deepEqual( Stem("ästhetik"), "asthet");});
test("ästhetisch -> asthet", function() {deepEqual( Stem("ästhetisch"), "asthet");});
test("ästhetische -> asthet", function() {deepEqual( Stem("ästhetische"), "asthet");});
test("ästhetischen -> asthet", function() {deepEqual( Stem("ästhetischen"), "asthet");});
test("ästhetisches -> asthet", function() {deepEqual( Stem("ästhetisches"), "asthet");});
test("aststümpchen -> aststumpch", function() {deepEqual( Stem("aststümpchen"), "aststumpch");});
test("asung -> asung", function() {deepEqual( Stem("asung"), "asung");});
test("atak -> atak", function() {deepEqual( Stem("atak"), "atak");});
test("atelier -> ateli", function() {deepEqual( Stem("atelier"), "ateli");});
test("ateliers -> ateli", function() {deepEqual( Stem("ateliers"), "ateli");});
test("atem -> atem", function() {deepEqual( Stem("atem"), "atem");});
test("atemlos -> atemlos", function() {deepEqual( Stem("atemlos"), "atemlos");});
test("atemlose -> atemlos", function() {deepEqual( Stem("atemlose"), "atemlos");});
test("atemlosen -> atemlos", function() {deepEqual( Stem("atemlosen"), "atemlos");});
test("atemnot -> atemnot", function() {deepEqual( Stem("atemnot"), "atemnot");});
test("atemzug -> atemzug", function() {deepEqual( Stem("atemzug"), "atemzug");});
test("atemzüge -> atemzug", function() {deepEqual( Stem("atemzüge"), "atemzug");});
test("atemzügen -> atemzug", function() {deepEqual( Stem("atemzügen"), "atemzug");});
test("atheist -> atheist", function() {deepEqual( Stem("atheist"), "atheist");});
test("äther -> ath", function() {deepEqual( Stem("äther"), "ath");});
test("ätherglast -> atherglast", function() {deepEqual( Stem("ätherglast"), "atherglast");});
test("ätherglocke -> atherglock", function() {deepEqual( Stem("ätherglocke"), "atherglock");});
test("ätherisches -> ather", function() {deepEqual( Stem("ätherisches"), "ather");});
test("ätherlüfte -> atherluft", function() {deepEqual( Stem("ätherlüfte"), "atherluft");});
test("äthiopien -> athiopi", function() {deepEqual( Stem("äthiopien"), "athiopi");});
test("äthiopiens -> athiopi", function() {deepEqual( Stem("äthiopiens"), "athiopi");});
test("äthiopier -> athiopi", function() {deepEqual( Stem("äthiopier"), "athiopi");});
test("atlantischen -> atlant", function() {deepEqual( Stem("atlantischen"), "atlant");});
test("atmen -> atm", function() {deepEqual( Stem("atmen"), "atm");});
test("atmend -> atmend", function() {deepEqual( Stem("atmend"), "atmend");});
test("atmens -> atm", function() {deepEqual( Stem("atmens"), "atm");});
test("atmet -> atmet", function() {deepEqual( Stem("atmet"), "atmet");});
test("atmete -> atmet", function() {deepEqual( Stem("atmete"), "atmet");});
test("atmeten -> atmet", function() {deepEqual( Stem("atmeten"), "atmet");});
test("atmosphäre -> atmosphar", function() {deepEqual( Stem("atmosphäre"), "atmosphar");});
test("atmungsbeschwerde -> atmungsbeschwerd", function() {deepEqual( Stem("atmungsbeschwerde"), "atmungsbeschwerd");});
test("atome -> atom", function() {deepEqual( Stem("atome"), "atom");});
test("ätsch -> atsch", function() {deepEqual( Stem("ätsch"), "atsch");});
test("attribute -> attribut", function() {deepEqual( Stem("attribute"), "attribut");});
test("au -> au", function() {deepEqual( Stem("au"), "au");});
test("auch -> auch", function() {deepEqual( Stem("auch"), "auch");});
test("aue -> aue", function() {deepEqual( Stem("aue"), "aue");});
test("auen -> auen", function() {deepEqual( Stem("auen"), "auen");});
test("auerhahn -> auerhahn", function() {deepEqual( Stem("auerhahn"), "auerhahn");});
test("auf -> auf", function() {deepEqual( Stem("auf"), "auf");});
test("aufatmen -> aufatm", function() {deepEqual( Stem("aufatmen"), "aufatm");});
test("aufatmend -> aufatm", function() {deepEqual( Stem("aufatmend"), "aufatm");});
test("aufatmenden -> aufatm", function() {deepEqual( Stem("aufatmenden"), "aufatm");});
test("aufatmete -> aufatmet", function() {deepEqual( Stem("aufatmete"), "aufatmet");});
test("aufbau -> aufbau", function() {deepEqual( Stem("aufbau"), "aufbau");});
test("aufbauen -> aufbau", function() {deepEqual( Stem("aufbauen"), "aufbau");});
test("aufbaute -> aufbaut", function() {deepEqual( Stem("aufbaute"), "aufbaut");});
test("aufbauten -> aufbaut", function() {deepEqual( Stem("aufbauten"), "aufbaut");});
test("aufbehalten -> aufbehalt", function() {deepEqual( Stem("aufbehalten"), "aufbehalt");});
test("aufbewahren -> aufbewahr", function() {deepEqual( Stem("aufbewahren"), "aufbewahr");});
test("aufbewahrerin -> aufbewahrerin", function() {deepEqual( Stem("aufbewahrerin"), "aufbewahrerin");});
test("aufbewahrt -> aufbewahrt", function() {deepEqual( Stem("aufbewahrt"), "aufbewahrt");});
test("aufbewahrte -> aufbewahrt", function() {deepEqual( Stem("aufbewahrte"), "aufbewahrt");});
test("aufbewahrten -> aufbewahrt", function() {deepEqual( Stem("aufbewahrten"), "aufbewahrt");});
test("aufbewahrung -> aufbewahr", function() {deepEqual( Stem("aufbewahrung"), "aufbewahr");});
test("aufbietung -> aufbiet", function() {deepEqual( Stem("aufbietung"), "aufbiet");});
test("aufblicken -> aufblick", function() {deepEqual( Stem("aufblicken"), "aufblick");});
test("aufblickte -> aufblickt", function() {deepEqual( Stem("aufblickte"), "aufblickt");});
test("aufblies -> aufbli", function() {deepEqual( Stem("aufblies"), "aufbli");});
test("aufblitzen -> aufblitz", function() {deepEqual( Stem("aufblitzen"), "aufblitz");});
test("aufblitzte -> aufblitzt", function() {deepEqual( Stem("aufblitzte"), "aufblitzt");});
test("aufblühende -> aufbluh", function() {deepEqual( Stem("aufblühende"), "aufbluh");});
test("aufblühenden -> aufbluh", function() {deepEqual( Stem("aufblühenden"), "aufbluh");});
test("aufblühten -> aufbluht", function() {deepEqual( Stem("aufblühten"), "aufbluht");});
test("aufbrechen -> aufbrech", function() {deepEqual( Stem("aufbrechen"), "aufbrech");});
test("aufbrennenden -> aufbrenn", function() {deepEqual( Stem("aufbrennenden"), "aufbrenn");});
test("aufbringen -> aufbring", function() {deepEqual( Stem("aufbringen"), "aufbring");});
test("aufbrochen -> aufbroch", function() {deepEqual( Stem("aufbrochen"), "aufbroch");});
test("aufbruch -> aufbruch", function() {deepEqual( Stem("aufbruch"), "aufbruch");});
test("aufbürdete -> aufburdet", function() {deepEqual( Stem("aufbürdete"), "aufburdet");});
test("aufdeckte -> aufdeckt", function() {deepEqual( Stem("aufdeckte"), "aufdeckt");});
test("aufdermauer -> aufdermau", function() {deepEqual( Stem("aufdermauer"), "aufdermau");});
test("aufdringen -> aufdring", function() {deepEqual( Stem("aufdringen"), "aufdring");});
test("aufdringlich -> aufdring", function() {deepEqual( Stem("aufdringlich"), "aufdring");});
test("aufdringt -> aufdringt", function() {deepEqual( Stem("aufdringt"), "aufdringt");});
test("aufeinander -> aufeinand", function() {deepEqual( Stem("aufeinander"), "aufeinand");});
test("aufeinanderbiss -> aufeinanderbiss", function() {deepEqual( Stem("aufeinanderbiss"), "aufeinanderbiss");});
test("aufeinanderfolge -> aufeinanderfolg", function() {deepEqual( Stem("aufeinanderfolge"), "aufeinanderfolg");});
test("aufeinanderfolgen -> aufeinanderfolg", function() {deepEqual( Stem("aufeinanderfolgen"), "aufeinanderfolg");});
test("aufeinanderfolgend -> aufeinanderfolg", function() {deepEqual( Stem("aufeinanderfolgend"), "aufeinanderfolg");});
test("aufeinanderfolgende -> aufeinanderfolg", function() {deepEqual( Stem("aufeinanderfolgende"), "aufeinanderfolg");});
test("aufeinanderfolgenden -> aufeinanderfolg", function() {deepEqual( Stem("aufeinanderfolgenden"), "aufeinanderfolg");});
test("aufeinanderfolgender -> aufeinanderfolg", function() {deepEqual( Stem("aufeinanderfolgender"), "aufeinanderfolg");});
test("aufeinanderfolgt -> aufeinanderfolgt", function() {deepEqual( Stem("aufeinanderfolgt"), "aufeinanderfolgt");});
test("aufeinanderfolgten -> aufeinanderfolgt", function() {deepEqual( Stem("aufeinanderfolgten"), "aufeinanderfolgt");});
test("aufeinanderschlügen -> aufeinanderschlug", function() {deepEqual( Stem("aufeinanderschlügen"), "aufeinanderschlug");});
test("aufenthalt -> aufenthalt", function() {deepEqual( Stem("aufenthalt"), "aufenthalt");});
test("aufenthalten -> aufenthalt", function() {deepEqual( Stem("aufenthalten"), "aufenthalt");});
test("aufenthaltes -> aufenthalt", function() {deepEqual( Stem("aufenthaltes"), "aufenthalt");});
test("auferlegen -> auferleg", function() {deepEqual( Stem("auferlegen"), "auferleg");});
test("auferlegt -> auferlegt", function() {deepEqual( Stem("auferlegt"), "auferlegt");});
test("auferlegten -> auferlegt", function() {deepEqual( Stem("auferlegten"), "auferlegt");});
test("auferstand -> auferstand", function() {deepEqual( Stem("auferstand"), "auferstand");});
test("auferstanden -> auferstand", function() {deepEqual( Stem("auferstanden"), "auferstand");});
test("auferstehen -> aufersteh", function() {deepEqual( Stem("auferstehen"), "aufersteh");});
test("aufersteht -> aufersteht", function() {deepEqual( Stem("aufersteht"), "aufersteht");});
test("auferstehung -> aufersteh", function() {deepEqual( Stem("auferstehung"), "aufersteh");});
test("auferstünde -> auferstund", function() {deepEqual( Stem("auferstünde"), "auferstund");});
test("auferwecken -> auferweck", function() {deepEqual( Stem("auferwecken"), "auferweck");});
test("auferweckt -> auferweckt", function() {deepEqual( Stem("auferweckt"), "auferweckt");});
test("auferzogen -> auferzog", function() {deepEqual( Stem("auferzogen"), "auferzog");});
test("aufessen -> aufess", function() {deepEqual( Stem("aufessen"), "aufess");});
test("auffa -> auffa", function() {deepEqual( Stem("auffa"), "auffa");});
test("auffallen -> auffall", function() {deepEqual( Stem("auffallen"), "auffall");});
test("auffallend -> auffall", function() {deepEqual( Stem("auffallend"), "auffall");});
test("auffallenden -> auffall", function() {deepEqual( Stem("auffallenden"), "auffall");});
test("auffallender -> auffall", function() {deepEqual( Stem("auffallender"), "auffall");});
test("auffällig -> auffall", function() {deepEqual( Stem("auffällig"), "auffall");});
test("auffälligen -> auffall", function() {deepEqual( Stem("auffälligen"), "auffall");});
test("auffälliges -> auffall", function() {deepEqual( Stem("auffälliges"), "auffall");});
test("auffassen -> auffass", function() {deepEqual( Stem("auffassen"), "auffass");});
test("auffasst -> auffasst", function() {deepEqual( Stem("auffasst"), "auffasst");});
test("auffaßt -> auffasst", function() {deepEqual( Stem("auffaßt"), "auffasst");});
test("auffassung -> auffass", function() {deepEqual( Stem("auffassung"), "auffass");});
test("auffassungsvermögen -> auffassungsvermog", function() {deepEqual( Stem("auffassungsvermögen"), "auffassungsvermog");});
test("auffi -> auffi", function() {deepEqual( Stem("auffi"), "auffi");});
test("auffiel -> auffiel", function() {deepEqual( Stem("auffiel"), "auffiel");});
test("auffinden -> auffind", function() {deepEqual( Stem("auffinden"), "auffind");});
test("auffindung -> auffind", function() {deepEqual( Stem("auffindung"), "auffind");});
test("aufflammt -> aufflammt", function() {deepEqual( Stem("aufflammt"), "aufflammt");});
test("aufforderden -> aufforderd", function() {deepEqual( Stem("aufforderden"), "aufforderd");});
test("auffordern -> aufford", function() {deepEqual( Stem("auffordern"), "aufford");});
test("aufforderte -> auffordert", function() {deepEqual( Stem("aufforderte"), "auffordert");});
test("aufforderung -> aufforder", function() {deepEqual( Stem("aufforderung"), "aufforder");});
test("auffrass -> auffrass", function() {deepEqual( Stem("auffrass"), "auffrass");});
test("auffraß -> auffrass", function() {deepEqual( Stem("auffraß"), "auffrass");});
test("auffressen -> auffress", function() {deepEqual( Stem("auffressen"), "auffress");});
test("auffuhren -> auffuhr", function() {deepEqual( Stem("auffuhren"), "auffuhr");});
test("aufführen -> auffuhr", function() {deepEqual( Stem("aufführen"), "auffuhr");});
test("aufführung -> auffuhr", function() {deepEqual( Stem("aufführung"), "auffuhr");});
test("aufg -> aufg", function() {deepEqual( Stem("aufg"), "aufg");});
test("aufgab -> aufgab", function() {deepEqual( Stem("aufgab"), "aufgab");});
test("aufgabe -> aufgab", function() {deepEqual( Stem("aufgabe"), "aufgab");});
test("aufgaben -> aufgab", function() {deepEqual( Stem("aufgaben"), "aufgab");});
test("aufgabenfeld -> aufgabenfeld", function() {deepEqual( Stem("aufgabenfeld"), "aufgabenfeld");});
test("aufgang -> aufgang", function() {deepEqual( Stem("aufgang"), "aufgang");});
test("aufgange -> aufgang", function() {deepEqual( Stem("aufgange"), "aufgang");});
test("aufgangs -> aufgang", function() {deepEqual( Stem("aufgangs"), "aufgang");});
test("aufgearbeitet -> aufgearbeitet", function() {deepEqual( Stem("aufgearbeitet"), "aufgearbeitet");});
test("aufgebaut -> aufgebaut", function() {deepEqual( Stem("aufgebaut"), "aufgebaut");});
test("aufgebe -> aufgeb", function() {deepEqual( Stem("aufgebe"), "aufgeb");});
test("aufgeben -> aufgeb", function() {deepEqual( Stem("aufgeben"), "aufgeb");});
test("aufgebläht -> aufgeblaht", function() {deepEqual( Stem("aufgebläht"), "aufgeblaht");});
test("aufgeblasen -> aufgeblas", function() {deepEqual( Stem("aufgeblasen"), "aufgeblas");});
test("aufgebracht -> aufgebracht", function() {deepEqual( Stem("aufgebracht"), "aufgebracht");});
test("aufgebrachte -> aufgebracht", function() {deepEqual( Stem("aufgebrachte"), "aufgebracht");});
test("aufgebrachter -> aufgebracht", function() {deepEqual( Stem("aufgebrachter"), "aufgebracht");});
test("aufgebrochen -> aufgebroch", function() {deepEqual( Stem("aufgebrochen"), "aufgebroch");});
test("aufgedeckt -> aufgedeckt", function() {deepEqual( Stem("aufgedeckt"), "aufgedeckt");});
test("aufgedrungenes -> aufgedr", function() {deepEqual( Stem("aufgedrungenes"), "aufgedr");});
test("aufgefahren -> aufgefahr", function() {deepEqual( Stem("aufgefahren"), "aufgefahr");});
test("aufgefallen -> aufgefall", function() {deepEqual( Stem("aufgefallen"), "aufgefall");});
test("aufgefangen -> aufgefang", function() {deepEqual( Stem("aufgefangen"), "aufgefang");});
test("aufgefasst -> aufgefasst", function() {deepEqual( Stem("aufgefasst"), "aufgefasst");});
test("aufgefaßt -> aufgefasst", function() {deepEqual( Stem("aufgefaßt"), "aufgefasst");});
test("aufgefressen -> aufgefress", function() {deepEqual( Stem("aufgefressen"), "aufgefress");});
test("aufgeführt -> aufgefuhrt", function() {deepEqual( Stem("aufgeführt"), "aufgefuhrt");});
test("aufgefunden -> aufgefund", function() {deepEqual( Stem("aufgefunden"), "aufgefund");});
test("aufgegangen -> aufgegang", function() {deepEqual( Stem("aufgegangen"), "aufgegang");});
test("aufgegeben -> aufgegeb", function() {deepEqual( Stem("aufgegeben"), "aufgegeb");});
test("aufgegebenen -> aufgegeb", function() {deepEqual( Stem("aufgegebenen"), "aufgegeb");});
test("aufgegessen -> aufgegess", function() {deepEqual( Stem("aufgegessen"), "aufgegess");});
test("aufgehalten -> aufgehalt", function() {deepEqual( Stem("aufgehalten"), "aufgehalt");});
test("aufgehängt -> aufgehangt", function() {deepEqual( Stem("aufgehängt"), "aufgehangt");});
test("aufgehäuft -> aufgehauft", function() {deepEqual( Stem("aufgehäuft"), "aufgehauft");});
test("aufgehellt -> aufgehellt", function() {deepEqual( Stem("aufgehellt"), "aufgehellt");});
test("aufgehen -> aufgeh", function() {deepEqual( Stem("aufgehen"), "aufgeh");});
test("aufgehenden -> aufgeh", function() {deepEqual( Stem("aufgehenden"), "aufgeh");});
test("aufgehoben -> aufgehob", function() {deepEqual( Stem("aufgehoben"), "aufgehob");});
test("aufgehobene -> aufgehob", function() {deepEqual( Stem("aufgehobene"), "aufgehob");});
test("aufgehört -> aufgehort", function() {deepEqual( Stem("aufgehört"), "aufgehort");});
test("aufgeht -> aufgeht", function() {deepEqual( Stem("aufgeht"), "aufgeht");});
test("aufgeklärt -> aufgeklart", function() {deepEqual( Stem("aufgeklärt"), "aufgeklart");});
test("aufgeklärten -> aufgeklart", function() {deepEqual( Stem("aufgeklärten"), "aufgeklart");});
test("aufgekommen -> aufgekomm", function() {deepEqual( Stem("aufgekommen"), "aufgekomm");});
test("aufgekommenen -> aufgekomm", function() {deepEqual( Stem("aufgekommenen"), "aufgekomm");});
test("aufgeladen -> aufgelad", function() {deepEqual( Stem("aufgeladen"), "aufgelad");});
test("aufgelegt -> aufgelegt", function() {deepEqual( Stem("aufgelegt"), "aufgelegt");});
test("aufgelegte -> aufgelegt", function() {deepEqual( Stem("aufgelegte"), "aufgelegt");});
test("aufgelesen -> aufgeles", function() {deepEqual( Stem("aufgelesen"), "aufgeles");});
test("aufgelöset -> aufgeloset", function() {deepEqual( Stem("aufgelöset"), "aufgeloset");});
test("aufgelöst -> aufgelost", function() {deepEqual( Stem("aufgelöst"), "aufgelost");});
test("aufgemacht -> aufgemacht", function() {deepEqual( Stem("aufgemacht"), "aufgemacht");});
test("aufgemerkt -> aufgemerkt", function() {deepEqual( Stem("aufgemerkt"), "aufgemerkt");});
test("aufgemuntert -> aufgemuntert", function() {deepEqual( Stem("aufgemuntert"), "aufgemuntert");});
test("aufgenommen -> aufgenomm", function() {deepEqual( Stem("aufgenommen"), "aufgenomm");});
test("aufgepasst -> aufgepasst", function() {deepEqual( Stem("aufgepasst"), "aufgepasst");});
test("aufgepflanzt -> aufgepflanzt", function() {deepEqual( Stem("aufgepflanzt"), "aufgepflanzt");});
test("aufgepluschtem -> aufgepluscht", function() {deepEqual( Stem("aufgepluschtem"), "aufgepluscht");});
test("aufgeplusterten -> aufgeplustert", function() {deepEqual( Stem("aufgeplusterten"), "aufgeplustert");});
test("aufgeräumt -> aufgeraumt", function() {deepEqual( Stem("aufgeräumt"), "aufgeraumt");});
test("aufgereckt -> aufgereckt", function() {deepEqual( Stem("aufgereckt"), "aufgereckt");});
test("aufgeregt -> aufgeregt", function() {deepEqual( Stem("aufgeregt"), "aufgeregt");});
test("aufgeregten -> aufgeregt", function() {deepEqual( Stem("aufgeregten"), "aufgeregt");});
test("aufgeregter -> aufgeregt", function() {deepEqual( Stem("aufgeregter"), "aufgeregt");});
test("aufgeregtes -> aufgeregt", function() {deepEqual( Stem("aufgeregtes"), "aufgeregt");});
test("aufgereihten -> aufgereiht", function() {deepEqual( Stem("aufgereihten"), "aufgereiht");});
test("aufgerichtet -> aufgerichtet", function() {deepEqual( Stem("aufgerichtet"), "aufgerichtet");});
test("aufgerieben -> aufgerieb", function() {deepEqual( Stem("aufgerieben"), "aufgerieb");});
test("aufgerissen -> aufgeriss", function() {deepEqual( Stem("aufgerissen"), "aufgeriss");});
test("aufgerissenen -> aufgeriss", function() {deepEqual( Stem("aufgerissenen"), "aufgeriss");});
test("aufgerüttelt -> aufgeruttelt", function() {deepEqual( Stem("aufgerüttelt"), "aufgeruttelt");});
test("aufgesammelt -> aufgesammelt", function() {deepEqual( Stem("aufgesammelt"), "aufgesammelt");});
test("aufgeschaltet -> aufgeschaltet", function() {deepEqual( Stem("aufgeschaltet"), "aufgeschaltet");});
test("aufgeschichtet -> aufgeschichtet", function() {deepEqual( Stem("aufgeschichtet"), "aufgeschichtet");});
test("aufgeschlagen -> aufgeschlag", function() {deepEqual( Stem("aufgeschlagen"), "aufgeschlag");});
test("aufgeschlossen -> aufgeschloss", function() {deepEqual( Stem("aufgeschlossen"), "aufgeschloss");});
test("aufgeschossener -> aufgeschoss", function() {deepEqual( Stem("aufgeschossener"), "aufgeschoss");});
test("aufgeschreckt -> aufgeschreckt", function() {deepEqual( Stem("aufgeschreckt"), "aufgeschreckt");});
test("aufgeschrieben -> aufgeschrieb", function() {deepEqual( Stem("aufgeschrieben"), "aufgeschrieb");});
test("aufgeschürzt -> aufgeschurzt", function() {deepEqual( Stem("aufgeschürzt"), "aufgeschurzt");});
test("aufgesehen -> aufgeseh", function() {deepEqual( Stem("aufgesehen"), "aufgeseh");});
test("aufgesperrten -> aufgesperrt", function() {deepEqual( Stem("aufgesperrten"), "aufgesperrt");});
test("aufgesprungen -> aufgespr", function() {deepEqual( Stem("aufgesprungen"), "aufgespr");});
test("aufgestachelt -> aufgestachelt", function() {deepEqual( Stem("aufgestachelt"), "aufgestachelt");});
test("aufgestanden -> aufgestand", function() {deepEqual( Stem("aufgestanden"), "aufgestand");});
test("aufgestapelt -> aufgestapelt", function() {deepEqual( Stem("aufgestapelt"), "aufgestapelt");});
test("aufgestellt -> aufgestellt", function() {deepEqual( Stem("aufgestellt"), "aufgestellt");});
test("aufgestellte -> aufgestellt", function() {deepEqual( Stem("aufgestellte"), "aufgestellt");});
test("aufgestellten -> aufgestellt", function() {deepEqual( Stem("aufgestellten"), "aufgestellt");});
test("aufgestiegen -> aufgestieg", function() {deepEqual( Stem("aufgestiegen"), "aufgestieg");});
test("aufgetan -> aufgetan", function() {deepEqual( Stem("aufgetan"), "aufgetan");});
test("aufgetaucht -> aufgetaucht", function() {deepEqual( Stem("aufgetaucht"), "aufgetaucht");});
test("aufgeteilt -> aufgeteilt", function() {deepEqual( Stem("aufgeteilt"), "aufgeteilt");});
test("aufgetragen -> aufgetrag", function() {deepEqual( Stem("aufgetragen"), "aufgetrag");});
test("aufgewachsen -> aufgewachs", function() {deepEqual( Stem("aufgewachsen"), "aufgewachs");});
test("aufgeweckt -> aufgeweckt", function() {deepEqual( Stem("aufgeweckt"), "aufgeweckt");});
test("aufgeweckten -> aufgeweckt", function() {deepEqual( Stem("aufgeweckten"), "aufgeweckt");});
test("aufgeworfene -> aufgeworf", function() {deepEqual( Stem("aufgeworfene"), "aufgeworf");});
test("aufgeworfenen -> aufgeworf", function() {deepEqual( Stem("aufgeworfenen"), "aufgeworf");});
test("aufgezählt -> aufgezahlt", function() {deepEqual( Stem("aufgezählt"), "aufgezahlt");});
test("aufgezehrt -> aufgezehrt", function() {deepEqual( Stem("aufgezehrt"), "aufgezehrt");});
test("aufgezeichnet -> aufgezeichnet", function() {deepEqual( Stem("aufgezeichnet"), "aufgezeichnet");});
test("aufgezettelt -> aufgezettelt", function() {deepEqual( Stem("aufgezettelt"), "aufgezettelt");});
test("aufging -> aufging", function() {deepEqual( Stem("aufging"), "aufging");});
test("aufginge -> aufging", function() {deepEqual( Stem("aufginge"), "aufging");});
test("aufgreifen -> aufgreif", function() {deepEqual( Stem("aufgreifen"), "aufgreif");});
test("aufgriff -> aufgriff", function() {deepEqual( Stem("aufgriff"), "aufgriff");});
test("aufgrund -> aufgrund", function() {deepEqual( Stem("aufgrund"), "aufgrund");});
test("aufgschnauft -> aufgschnauft", function() {deepEqual( Stem("aufgschnauft"), "aufgschnauft");});
test("aufgsprungen -> aufgsprung", function() {deepEqual( Stem("aufgsprungen"), "aufgsprung");});
test("aufhalsen -> aufhals", function() {deepEqual( Stem("aufhalsen"), "aufhals");});
test("aufhält -> aufhalt", function() {deepEqual( Stem("aufhält"), "aufhalt");});
test("aufhalte -> aufhalt", function() {deepEqual( Stem("aufhalte"), "aufhalt");});
test("aufhalten -> aufhalt", function() {deepEqual( Stem("aufhalten"), "aufhalt");});
test("aufhängen -> aufhang", function() {deepEqual( Stem("aufhängen"), "aufhang");});
test("aufhäuften -> aufhauft", function() {deepEqual( Stem("aufhäuften"), "aufhauft");});
test("aufheben -> aufheb", function() {deepEqual( Stem("aufheben"), "aufheb");});
test("aufhebt -> aufhebt", function() {deepEqual( Stem("aufhebt"), "aufhebt");});
test("aufhebung -> aufheb", function() {deepEqual( Stem("aufhebung"), "aufheb");});
test("aufheiternde -> aufheiternd", function() {deepEqual( Stem("aufheiternde"), "aufheiternd");});
test("aufhellen -> aufhell", function() {deepEqual( Stem("aufhellen"), "aufhell");});
test("aufheulen -> aufheul", function() {deepEqual( Stem("aufheulen"), "aufheul");});
test("aufheulend -> aufheul", function() {deepEqual( Stem("aufheulend"), "aufheul");});
test("aufhielt -> aufhielt", function() {deepEqual( Stem("aufhielt"), "aufhielt");});
test("aufhob -> aufhob", function() {deepEqual( Stem("aufhob"), "aufhob");});
test("aufhorchte -> aufhorcht", function() {deepEqual( Stem("aufhorchte"), "aufhorcht");});
test("aufhören -> aufhor", function() {deepEqual( Stem("aufhören"), "aufhor");});
test("aufhört -> aufhort", function() {deepEqual( Stem("aufhört"), "aufhort");});
test("aufhörte -> aufhort", function() {deepEqual( Stem("aufhörte"), "aufhort");});
test("aufhörten -> aufhort", function() {deepEqual( Stem("aufhörten"), "aufhort");});
test("aufkam -> aufkam", function() {deepEqual( Stem("aufkam"), "aufkam");});
test("aufkeimt -> aufkeimt", function() {deepEqual( Stem("aufkeimt"), "aufkeimt");});
test("aufklappte -> aufklappt", function() {deepEqual( Stem("aufklappte"), "aufklappt");});
test("aufklärte -> aufklart", function() {deepEqual( Stem("aufklärte"), "aufklart");});
test("aufklärung -> aufklar", function() {deepEqual( Stem("aufklärung"), "aufklar");});
test("aufkomme -> aufkomm", function() {deepEqual( Stem("aufkomme"), "aufkomm");});
test("aufkommen -> aufkomm", function() {deepEqual( Stem("aufkommen"), "aufkomm");});
test("aufkroch -> aufkroch", function() {deepEqual( Stem("aufkroch"), "aufkroch");});
test("aufkrochen -> aufkroch", function() {deepEqual( Stem("aufkrochen"), "aufkroch");});
test("auflachen -> auflach", function() {deepEqual( Stem("auflachen"), "auflach");});
test("auflachten -> auflacht", function() {deepEqual( Stem("auflachten"), "auflacht");});
test("auflage -> auflag", function() {deepEqual( Stem("auflage"), "auflag");});
test("auflas -> auflas", function() {deepEqual( Stem("auflas"), "auflas");});
test("aufläufen -> auflauf", function() {deepEqual( Stem("aufläufen"), "auflauf");});
test("auflegen -> aufleg", function() {deepEqual( Stem("auflegen"), "aufleg");});
test("aufleuchtende -> aufleucht", function() {deepEqual( Stem("aufleuchtende"), "aufleucht");});
test("aufleuchtenden -> aufleucht", function() {deepEqual( Stem("aufleuchtenden"), "aufleucht");});
test("auflösen -> auflos", function() {deepEqual( Stem("auflösen"), "auflos");});
test("auflösung -> auflos", function() {deepEqual( Stem("auflösung"), "auflos");});
test("aufmache -> aufmach", function() {deepEqual( Stem("aufmache"), "aufmach");});
test("aufmachen -> aufmach", function() {deepEqual( Stem("aufmachen"), "aufmach");});
test("aufmachte -> aufmacht", function() {deepEqual( Stem("aufmachte"), "aufmacht");});
test("aufmerken -> aufmerk", function() {deepEqual( Stem("aufmerken"), "aufmerk");});
test("aufmerkend -> aufmerk", function() {deepEqual( Stem("aufmerkend"), "aufmerk");});
test("aufmerkende -> aufmerk", function() {deepEqual( Stem("aufmerkende"), "aufmerk");});
test("aufmerkens -> aufmerk", function() {deepEqual( Stem("aufmerkens"), "aufmerk");});
test("aufmerksam -> aufmerksam", function() {deepEqual( Stem("aufmerksam"), "aufmerksam");});
test("aufmerksame -> aufmerksam", function() {deepEqual( Stem("aufmerksame"), "aufmerksam");});
test("aufmerksamen -> aufmerksam", function() {deepEqual( Stem("aufmerksamen"), "aufmerksam");});
test("aufmerksamer -> aufmerksam", function() {deepEqual( Stem("aufmerksamer"), "aufmerksam");});
test("aufmerksamkeit -> aufmerksam", function() {deepEqual( Stem("aufmerksamkeit"), "aufmerksam");});
test("aufmerksamkeiten -> aufmerksam", function() {deepEqual( Stem("aufmerksamkeiten"), "aufmerksam");});
test("aufmerkt -> aufmerkt", function() {deepEqual( Stem("aufmerkt"), "aufmerkt");});
test("aufmerkte -> aufmerkt", function() {deepEqual( Stem("aufmerkte"), "aufmerkt");});
test("aufmunterung -> aufmunter", function() {deepEqual( Stem("aufmunterung"), "aufmunter");});
test("aufnahm -> aufnahm", function() {deepEqual( Stem("aufnahm"), "aufnahm");});
test("aufnahme -> aufnahm", function() {deepEqual( Stem("aufnahme"), "aufnahm");});
test("aufnahmegefäss -> aufnahmegefass", function() {deepEqual( Stem("aufnahmegefäss"), "aufnahmegefass");});
test("aufnahmegefäß -> aufnahmegefass", function() {deepEqual( Stem("aufnahmegefäß"), "aufnahmegefass");});
test("aufnahmegefässe -> aufnahmegefass", function() {deepEqual( Stem("aufnahmegefässe"), "aufnahmegefass");});
test("aufnahmegefäße -> aufnahmegefass", function() {deepEqual( Stem("aufnahmegefäße"), "aufnahmegefass");});
test("aufnahmen -> aufnahm", function() {deepEqual( Stem("aufnahmen"), "aufnahm");});
test("aufnahmeprüfungen -> aufnahmepruf", function() {deepEqual( Stem("aufnahmeprüfungen"), "aufnahmepruf");});
test("aufnahmsfähig -> aufnahmsfah", function() {deepEqual( Stem("aufnahmsfähig"), "aufnahmsfah");});
test("aufnahmsfähigkeit -> aufnahmsfah", function() {deepEqual( Stem("aufnahmsfähigkeit"), "aufnahmsfah");});
test("aufnahmsorgan -> aufnahmsorgan", function() {deepEqual( Stem("aufnahmsorgan"), "aufnahmsorgan");});
test("aufnehme -> aufnehm", function() {deepEqual( Stem("aufnehme"), "aufnehm");});
test("aufnehmen -> aufnehm", function() {deepEqual( Stem("aufnehmen"), "aufnehm");});
test("aufnehmende -> aufnehm", function() {deepEqual( Stem("aufnehmende"), "aufnehm");});
test("aufnehmenden -> aufnehm", function() {deepEqual( Stem("aufnehmenden"), "aufnehm");});
test("aufnehmendes -> aufnehm", function() {deepEqual( Stem("aufnehmendes"), "aufnehm");});
test("äufner -> aufn", function() {deepEqual( Stem("äufner"), "aufn");});
test("äufnete -> aufnet", function() {deepEqual( Stem("äufnete"), "aufnet");});
test("aufnimmt -> aufnimmt", function() {deepEqual( Stem("aufnimmt"), "aufnimmt");});
test("aufopfernd -> aufopfernd", function() {deepEqual( Stem("aufopfernd"), "aufopfernd");});
test("aufopferung -> aufopfer", function() {deepEqual( Stem("aufopferung"), "aufopfer");});
test("aufpassen -> aufpass", function() {deepEqual( Stem("aufpassen"), "aufpass");});
test("aufpasser -> aufpass", function() {deepEqual( Stem("aufpasser"), "aufpass");});
test("aufpasst -> aufpasst", function() {deepEqual( Stem("aufpasst"), "aufpasst");});
test("aufpassten -> aufpasst", function() {deepEqual( Stem("aufpassten"), "aufpasst");});
test("aufpflanzte -> aufpflanzt", function() {deepEqual( Stem("aufpflanzte"), "aufpflanzt");});
test("aufputz -> aufputz", function() {deepEqual( Stem("aufputz"), "aufputz");});
test("aufragen -> aufrag", function() {deepEqual( Stem("aufragen"), "aufrag");});
test("aufrappeln -> aufrappeln", function() {deepEqual( Stem("aufrappeln"), "aufrappeln");});
test("aufräume -> aufraum", function() {deepEqual( Stem("aufräume"), "aufraum");});
test("aufrechnen -> aufrechn", function() {deepEqual( Stem("aufrechnen"), "aufrechn");});
test("aufrecht -> aufrecht", function() {deepEqual( Stem("aufrecht"), "aufrecht");});
test("aufrechten -> aufrecht", function() {deepEqual( Stem("aufrechten"), "aufrecht");});
test("aufrechterhalten -> aufrechterhalt", function() {deepEqual( Stem("aufrechterhalten"), "aufrechterhalt");});
test("aufregen -> aufreg", function() {deepEqual( Stem("aufregen"), "aufreg");});
test("aufregende -> aufreg", function() {deepEqual( Stem("aufregende"), "aufreg");});
test("aufregendsten -> aufreg", function() {deepEqual( Stem("aufregendsten"), "aufreg");});
test("aufreger -> aufreg", function() {deepEqual( Stem("aufreger"), "aufreg");});
test("aufregung -> aufreg", function() {deepEqual( Stem("aufregung"), "aufreg");});
test("aufregungen -> aufreg", function() {deepEqual( Stem("aufregungen"), "aufreg");});
test("aufreiben -> aufreib", function() {deepEqual( Stem("aufreiben"), "aufreib");});
test("aufreissend -> aufreiss", function() {deepEqual( Stem("aufreissend"), "aufreiss");});
test("aufreißend -> aufreiss", function() {deepEqual( Stem("aufreißend"), "aufreiss");});
test("aufrichten -> aufricht", function() {deepEqual( Stem("aufrichten"), "aufricht");});
test("aufrichtete -> aufrichtet", function() {deepEqual( Stem("aufrichtete"), "aufrichtet");});
test("aufrichteten -> aufrichtet", function() {deepEqual( Stem("aufrichteten"), "aufrichtet");});
test("aufrichtig -> aufricht", function() {deepEqual( Stem("aufrichtig"), "aufricht");});
test("aufrichtige -> aufricht", function() {deepEqual( Stem("aufrichtige"), "aufricht");});
test("aufrichtigen -> aufricht", function() {deepEqual( Stem("aufrichtigen"), "aufricht");});
test("aufrichtiger -> aufricht", function() {deepEqual( Stem("aufrichtiger"), "aufricht");});
test("aufrichtigkeit -> aufricht", function() {deepEqual( Stem("aufrichtigkeit"), "aufricht");});
test("aufriss -> aufriss", function() {deepEqual( Stem("aufriss"), "aufriss");});
test("aufriß -> aufriss", function() {deepEqual( Stem("aufriß"), "aufriss");});
test("aufrissen -> aufriss", function() {deepEqual( Stem("aufrissen"), "aufriss");});
test("aufrollten -> aufrollt", function() {deepEqual( Stem("aufrollten"), "aufrollt");});
test("aufrufe -> aufruf", function() {deepEqual( Stem("aufrufe"), "aufruf");});
test("aufruhr -> aufruhr", function() {deepEqual( Stem("aufruhr"), "aufruhr");});
test("aufrühren -> aufruhr", function() {deepEqual( Stem("aufrühren"), "aufruhr");});
test("aufrührend -> aufruhr", function() {deepEqual( Stem("aufrührend"), "aufruhr");});
test("aufs -> auf", function() {deepEqual( Stem("aufs"), "auf");});
test("aufsagen -> aufsag", function() {deepEqual( Stem("aufsagen"), "aufsag");});
test("aufsah -> aufsah", function() {deepEqual( Stem("aufsah"), "aufsah");});
test("aufsätze -> aufsatz", function() {deepEqual( Stem("aufsätze"), "aufsatz");});
test("aufschauten -> aufschaut", function() {deepEqual( Stem("aufschauten"), "aufschaut");});
test("aufschichtete -> aufschichtet", function() {deepEqual( Stem("aufschichtete"), "aufschichtet");});
test("aufschieben -> aufschieb", function() {deepEqual( Stem("aufschieben"), "aufschieb");});
test("aufschlag -> aufschlag", function() {deepEqual( Stem("aufschlag"), "aufschlag");});
test("aufschlagen -> aufschlag", function() {deepEqual( Stem("aufschlagen"), "aufschlag");});
test("aufschlug -> aufschlug", function() {deepEqual( Stem("aufschlug"), "aufschlug");});
test("aufschlugen -> aufschlug", function() {deepEqual( Stem("aufschlugen"), "aufschlug");});
test("aufschluss -> aufschluss", function() {deepEqual( Stem("aufschluss"), "aufschluss");});
test("aufschluß -> aufschluss", function() {deepEqual( Stem("aufschluß"), "aufschluss");});
test("aufschlüsse -> aufschluss", function() {deepEqual( Stem("aufschlüsse"), "aufschluss");});
test("aufschrei -> aufschrei", function() {deepEqual( Stem("aufschrei"), "aufschrei");});
test("aufschreiben -> aufschreib", function() {deepEqual( Stem("aufschreiben"), "aufschreib");});
test("aufschreiende -> aufschreiend", function() {deepEqual( Stem("aufschreiende"), "aufschreiend");});
test("aufschriften -> aufschrift", function() {deepEqual( Stem("aufschriften"), "aufschrift");});
test("aufschub -> aufschub", function() {deepEqual( Stem("aufschub"), "aufschub");});
test("aufschwung -> aufschwung", function() {deepEqual( Stem("aufschwung"), "aufschwung");});
test("aufsehen -> aufseh", function() {deepEqual( Stem("aufsehen"), "aufseh");});
test("aufseher -> aufseh", function() {deepEqual( Stem("aufseher"), "aufseh");});
test("aufsetzen -> aufsetz", function() {deepEqual( Stem("aufsetzen"), "aufsetz");});
test("aufsetzte -> aufsetzt", function() {deepEqual( Stem("aufsetzte"), "aufsetzt");});
test("aufseufzte -> aufseufzt", function() {deepEqual( Stem("aufseufzte"), "aufseufzt");});
test("aufsicht -> aufsicht", function() {deepEqual( Stem("aufsicht"), "aufsicht");});
test("aufsperrte -> aufsperrt", function() {deepEqual( Stem("aufsperrte"), "aufsperrt");});
test("aufspielen -> aufspiel", function() {deepEqual( Stem("aufspielen"), "aufspiel");});
test("aufspielt -> aufspielt", function() {deepEqual( Stem("aufspielt"), "aufspielt");});
test("aufspiessen -> aufspiess", function() {deepEqual( Stem("aufspiessen"), "aufspiess");});
test("aufspießen -> aufspiess", function() {deepEqual( Stem("aufspießen"), "aufspiess");});
test("aufsprang -> aufsprang", function() {deepEqual( Stem("aufsprang"), "aufsprang");});
test("aufsprangen -> aufsprang", function() {deepEqual( Stem("aufsprangen"), "aufsprang");});
test("aufspringen -> aufspring", function() {deepEqual( Stem("aufspringen"), "aufspring");});
test("aufspringenden -> aufspring", function() {deepEqual( Stem("aufspringenden"), "aufspring");});
test("aufsprossen -> aufspross", function() {deepEqual( Stem("aufsprossen"), "aufspross");});
test("aufsprosst -> aufsprosst", function() {deepEqual( Stem("aufsprosst"), "aufsprosst");});
test("aufsproßt -> aufsprosst", function() {deepEqual( Stem("aufsproßt"), "aufsprosst");});
test("aufsprosste -> aufsprosst", function() {deepEqual( Stem("aufsprosste"), "aufsprosst");});
test("aufsproßte -> aufsprosst", function() {deepEqual( Stem("aufsproßte"), "aufsprosst");});
test("aufstand -> aufstand", function() {deepEqual( Stem("aufstand"), "aufstand");});
test("aufstanden -> aufstand", function() {deepEqual( Stem("aufstanden"), "aufstand");});
test("aufstehen -> aufsteh", function() {deepEqual( Stem("aufstehen"), "aufsteh");});
test("aufstehend -> aufsteh", function() {deepEqual( Stem("aufstehend"), "aufsteh");});
test("aufstehn -> aufstehn", function() {deepEqual( Stem("aufstehn"), "aufstehn");});
test("aufsteht -> aufsteht", function() {deepEqual( Stem("aufsteht"), "aufsteht");});
test("aufsteigen -> aufsteig", function() {deepEqual( Stem("aufsteigen"), "aufsteig");});
test("aufsteigendem -> aufsteig", function() {deepEqual( Stem("aufsteigendem"), "aufsteig");});
test("aufsteigenden -> aufsteig", function() {deepEqual( Stem("aufsteigenden"), "aufsteig");});
test("aufsteigt -> aufsteigt", function() {deepEqual( Stem("aufsteigt"), "aufsteigt");});
test("aufstellen -> aufstell", function() {deepEqual( Stem("aufstellen"), "aufstell");});
test("aufstellt -> aufstellt", function() {deepEqual( Stem("aufstellt"), "aufstellt");});
test("aufstellte -> aufstellt", function() {deepEqual( Stem("aufstellte"), "aufstellt");});
test("aufstellung -> aufstell", function() {deepEqual( Stem("aufstellung"), "aufstell");});
test("aufstieg -> aufstieg", function() {deepEqual( Stem("aufstieg"), "aufstieg");});
test("aufstiegsangebote -> aufstiegsangebot", function() {deepEqual( Stem("aufstiegsangebote"), "aufstiegsangebot");});
test("aufstiegschancen -> aufstiegschanc", function() {deepEqual( Stem("aufstiegschancen"), "aufstiegschanc");});
test("aufstiess -> aufstiess", function() {deepEqual( Stem("aufstiess"), "aufstiess");});
test("aufstieß -> aufstiess", function() {deepEqual( Stem("aufstieß"), "aufstiess");});
test("aufstöhnend -> aufstohn", function() {deepEqual( Stem("aufstöhnend"), "aufstohn");});
test("aufsuchen -> aufsuch", function() {deepEqual( Stem("aufsuchen"), "aufsuch");});
test("aufsucht -> aufsucht", function() {deepEqual( Stem("aufsucht"), "aufsucht");});
test("aufsuchte -> aufsucht", function() {deepEqual( Stem("aufsuchte"), "aufsucht");});
test("auftat -> auftat", function() {deepEqual( Stem("auftat"), "auftat");});
test("auftaucht -> auftaucht", function() {deepEqual( Stem("auftaucht"), "auftaucht");});
test("auftauchten -> auftaucht", function() {deepEqual( Stem("auftauchten"), "auftaucht");});
test("auftrag -> auftrag", function() {deepEqual( Stem("auftrag"), "auftrag");});
test("auftrage -> auftrag", function() {deepEqual( Stem("auftrage"), "auftrag");});
test("aufträge -> auftrag", function() {deepEqual( Stem("aufträge"), "auftrag");});
test("auftrags -> auftrag", function() {deepEqual( Stem("auftrags"), "auftrag");});
test("auftragt -> auftragt", function() {deepEqual( Stem("auftragt"), "auftragt");});
test("auftreiben -> auftreib", function() {deepEqual( Stem("auftreiben"), "auftreib");});
test("auftreten -> auftret", function() {deepEqual( Stem("auftreten"), "auftret");});
test("auftrieb -> auftrieb", function() {deepEqual( Stem("auftrieb"), "auftrieb");});
test("auftrieben -> auftrieb", function() {deepEqual( Stem("auftrieben"), "auftrieb");});
test("auftritt -> auftritt", function() {deepEqual( Stem("auftritt"), "auftritt");});
test("auftritten -> auftritt", function() {deepEqual( Stem("auftritten"), "auftritt");});
test("auftrittslied -> auftrittslied", function() {deepEqual( Stem("auftrittslied"), "auftrittslied");});
test("auftut -> auftut", function() {deepEqual( Stem("auftut"), "auftut");});
test("aufwach -> aufwach", function() {deepEqual( Stem("aufwach"), "aufwach");});
test("aufwachst -> aufwach", function() {deepEqual( Stem("aufwachst"), "aufwach");});
test("aufwachte -> aufwacht", function() {deepEqual( Stem("aufwachte"), "aufwacht");});
test("aufwachten -> aufwacht", function() {deepEqual( Stem("aufwachten"), "aufwacht");});
test("aufwallten -> aufwallt", function() {deepEqual( Stem("aufwallten"), "aufwallt");});
test("aufwallung -> aufwall", function() {deepEqual( Stem("aufwallung"), "aufwall");});
test("aufwallungen -> aufwall", function() {deepEqual( Stem("aufwallungen"), "aufwall");});
test("aufwand -> aufwand", function() {deepEqual( Stem("aufwand"), "aufwand");});
test("aufwarten -> aufwart", function() {deepEqual( Stem("aufwarten"), "aufwart");});
test("aufwartenden -> aufwart", function() {deepEqual( Stem("aufwartenden"), "aufwart");});
test("aufwärter -> aufwart", function() {deepEqual( Stem("aufwärter"), "aufwart");});
test("aufwärts -> aufwart", function() {deepEqual( Stem("aufwärts"), "aufwart");});
test("aufweist -> aufweist", function() {deepEqual( Stem("aufweist"), "aufweist");});
test("aufwendige -> aufwend", function() {deepEqual( Stem("aufwendige"), "aufwend");});
test("aufwüchse -> aufwuchs", function() {deepEqual( Stem("aufwüchse"), "aufwuchs");});
test("aufwuchsen -> aufwuchs", function() {deepEqual( Stem("aufwuchsen"), "aufwuchs");});
test("aufzählt -> aufzahlt", function() {deepEqual( Stem("aufzählt"), "aufzahlt");});
test("aufzählung -> aufzahl", function() {deepEqual( Stem("aufzählung"), "aufzahl");});
test("aufzehren -> aufzehr", function() {deepEqual( Stem("aufzehren"), "aufzehr");});
test("aufzeichnung -> aufzeichn", function() {deepEqual( Stem("aufzeichnung"), "aufzeichn");});
test("aufzeigen -> aufzeig", function() {deepEqual( Stem("aufzeigen"), "aufzeig");});
test("aufziehenden -> aufzieh", function() {deepEqual( Stem("aufziehenden"), "aufzieh");});
test("aufzuatmen -> aufzuatm", function() {deepEqual( Stem("aufzuatmen"), "aufzuatm");});
test("aufzubauen -> aufzubau", function() {deepEqual( Stem("aufzubauen"), "aufzubau");});
test("aufzublasen -> aufzublas", function() {deepEqual( Stem("aufzublasen"), "aufzublas");});
test("aufzublicken -> aufzublick", function() {deepEqual( Stem("aufzublicken"), "aufzublick");});
test("aufzubrauchen -> aufzubrauch", function() {deepEqual( Stem("aufzubrauchen"), "aufzubrauch");});
test("aufzubrechen -> aufzubrech", function() {deepEqual( Stem("aufzubrechen"), "aufzubrech");});
test("aufzubringen -> aufzubring", function() {deepEqual( Stem("aufzubringen"), "aufzubring");});
test("aufzubürden -> aufzuburd", function() {deepEqual( Stem("aufzubürden"), "aufzuburd");});
test("aufzuckt -> aufzuckt", function() {deepEqual( Stem("aufzuckt"), "aufzuckt");});
test("aufzuessen -> aufzuess", function() {deepEqual( Stem("aufzuessen"), "aufzuess");});
test("aufzufassen -> aufzufass", function() {deepEqual( Stem("aufzufassen"), "aufzufass");});
test("aufzuführen -> aufzufuhr", function() {deepEqual( Stem("aufzuführen"), "aufzufuhr");});
test("aufzug -> aufzug", function() {deepEqual( Stem("aufzug"), "aufzug");});
test("aufzuge -> aufzug", function() {deepEqual( Stem("aufzuge"), "aufzug");});
test("aufzugeben -> aufzugeb", function() {deepEqual( Stem("aufzugeben"), "aufzugeb");});
test("aufzugskabine -> aufzugskabin", function() {deepEqual( Stem("aufzugskabine"), "aufzugskabin");});
test("aufzuhalsen -> aufzuhals", function() {deepEqual( Stem("aufzuhalsen"), "aufzuhals");});
test("aufzuhalten -> aufzuhalt", function() {deepEqual( Stem("aufzuhalten"), "aufzuhalt");});
test("aufzuheben -> aufzuheb", function() {deepEqual( Stem("aufzuheben"), "aufzuheb");});
test("aufzuheitern -> aufzuheit", function() {deepEqual( Stem("aufzuheitern"), "aufzuheit");});
test("aufzuhören -> aufzuhor", function() {deepEqual( Stem("aufzuhören"), "aufzuhor");});
test("aufzukommen -> aufzukomm", function() {deepEqual( Stem("aufzukommen"), "aufzukomm");});
test("aufzulösen -> aufzulos", function() {deepEqual( Stem("aufzulösen"), "aufzulos");});
test("aufzumachen -> aufzumach", function() {deepEqual( Stem("aufzumachen"), "aufzumach");});
test("aufzumuntern -> aufzumunt", function() {deepEqual( Stem("aufzumuntern"), "aufzumunt");});
test("aufzunehmen -> aufzunehm", function() {deepEqual( Stem("aufzunehmen"), "aufzunehm");});
test("aufzupassen -> aufzupass", function() {deepEqual( Stem("aufzupassen"), "aufzupass");});
test("aufzuraffen -> aufzuraff", function() {deepEqual( Stem("aufzuraffen"), "aufzuraff");});
test("aufzurollen -> aufzuroll", function() {deepEqual( Stem("aufzurollen"), "aufzuroll");});
test("aufzuschlagen -> aufzuschlag", function() {deepEqual( Stem("aufzuschlagen"), "aufzuschlag");});
test("aufzuschreiben -> aufzuschreib", function() {deepEqual( Stem("aufzuschreiben"), "aufzuschreib");});
test("aufzusehen -> aufzuseh", function() {deepEqual( Stem("aufzusehen"), "aufzuseh");});
test("aufzusparen -> aufzuspar", function() {deepEqual( Stem("aufzusparen"), "aufzuspar");});
test("aufzuspringen -> aufzuspring", function() {deepEqual( Stem("aufzuspringen"), "aufzuspring");});
test("aufzustellen -> aufzustell", function() {deepEqual( Stem("aufzustellen"), "aufzustell");});
test("aufzustellende -> aufzustell", function() {deepEqual( Stem("aufzustellende"), "aufzustell");});
test("aufzusuchen -> aufzusuch", function() {deepEqual( Stem("aufzusuchen"), "aufzusuch");});
test("aufzutragen -> aufzutrag", function() {deepEqual( Stem("aufzutragen"), "aufzutrag");});
test("aufzutreiben -> aufzutreib", function() {deepEqual( Stem("aufzutreiben"), "aufzutreib");});
test("aufzutun -> aufzutun", function() {deepEqual( Stem("aufzutun"), "aufzutun");});
test("aufzuwecken -> aufzuweck", function() {deepEqual( Stem("aufzuwecken"), "aufzuweck");});
test("aufzuweisen -> aufzuweis", function() {deepEqual( Stem("aufzuweisen"), "aufzuweis");});
test("aufzuwerten -> aufzuwert", function() {deepEqual( Stem("aufzuwerten"), "aufzuwert");});
test("aufzuwiegen -> aufzuwieg", function() {deepEqual( Stem("aufzuwiegen"), "aufzuwieg");});
test("aug -> aug", function() {deepEqual( Stem("aug"), "aug");});
test("auge -> aug", function() {deepEqual( Stem("auge"), "aug");});
test("äugelchen -> augelch", function() {deepEqual( Stem("äugelchen"), "augelch");});
test("äugelein -> augelein", function() {deepEqual( Stem("äugelein"), "augelein");});
test("augen -> aug", function() {deepEqual( Stem("augen"), "aug");});
test("augenaufschlag -> augenaufschlag", function() {deepEqual( Stem("augenaufschlag"), "augenaufschlag");});
test("augenblick -> augenblick", function() {deepEqual( Stem("augenblick"), "augenblick");});
test("augenblicke -> augenblick", function() {deepEqual( Stem("augenblicke"), "augenblick");});
test("augenblicken -> augenblick", function() {deepEqual( Stem("augenblicken"), "augenblick");});
test("augenblicklich -> augenblick", function() {deepEqual( Stem("augenblicklich"), "augenblick");});
test("augenblicklichen -> augenblick", function() {deepEqual( Stem("augenblicklichen"), "augenblick");});
test("augenbogen -> augenbog", function() {deepEqual( Stem("augenbogen"), "augenbog");});
test("augenbraunen -> augenbraun", function() {deepEqual( Stem("augenbraunen"), "augenbraun");});
test("äugender -> augend", function() {deepEqual( Stem("äugender"), "augend");});
test("augenlider -> augenlid", function() {deepEqual( Stem("augenlider"), "augenlid");});
test("augenmerk -> augenmerk", function() {deepEqual( Stem("augenmerk"), "augenmerk");});
test("augenschein -> augenschein", function() {deepEqual( Stem("augenschein"), "augenschein");});
test("augenscheinlich -> augenschein", function() {deepEqual( Stem("augenscheinlich"), "augenschein");});
test("augenscheinliche -> augenschein", function() {deepEqual( Stem("augenscheinliche"), "augenschein");});
test("augenscheinlicher -> augenschein", function() {deepEqual( Stem("augenscheinlicher"), "augenschein");});
test("augenschwache -> augenschwach", function() {deepEqual( Stem("augenschwache"), "augenschwach");});
test("augenwinkel -> augenwinkel", function() {deepEqual( Stem("augenwinkel"), "augenwinkel");});
test("auges -> aug", function() {deepEqual( Stem("auges"), "aug");});
test("äuglein -> auglein", function() {deepEqual( Stem("äuglein"), "auglein");});
test("augsburg -> augsburg", function() {deepEqual( Stem("augsburg"), "augsburg");});
test("augst -> augst", function() {deepEqual( Stem("augst"), "augst");});
test("august -> august", function() {deepEqual( Stem("august"), "august");});
test("aura -> aura", function() {deepEqual( Stem("aura"), "aura");});
test("aus -> aus", function() {deepEqual( Stem("aus"), "aus");});
test("ausarbeiten -> ausarbeit", function() {deepEqual( Stem("ausarbeiten"), "ausarbeit");});
test("ausartet -> ausartet", function() {deepEqual( Stem("ausartet"), "ausartet");});
test("ausartung -> ausart", function() {deepEqual( Stem("ausartung"), "ausart");});
test("ausbesserung -> ausbesser", function() {deepEqual( Stem("ausbesserung"), "ausbesser");});
test("ausbeutete -> ausbeutet", function() {deepEqual( Stem("ausbeutete"), "ausbeutet");});
test("ausbeutung -> ausbeut", function() {deepEqual( Stem("ausbeutung"), "ausbeut");});
test("ausbilden -> ausbild", function() {deepEqual( Stem("ausbilden"), "ausbild");});
test("ausbildete -> ausbildet", function() {deepEqual( Stem("ausbildete"), "ausbildet");});
test("ausbildung -> ausbild", function() {deepEqual( Stem("ausbildung"), "ausbild");});
test("ausblase -> ausblas", function() {deepEqual( Stem("ausblase"), "ausblas");});
test("ausbleiben -> ausbleib", function() {deepEqual( Stem("ausbleiben"), "ausbleib");});
test("ausbleibt -> ausbleibt", function() {deepEqual( Stem("ausbleibt"), "ausbleibt");});
test("ausblick -> ausblick", function() {deepEqual( Stem("ausblick"), "ausblick");});
test("ausbrach -> ausbrach", function() {deepEqual( Stem("ausbrach"), "ausbrach");});
test("ausbreche -> ausbrech", function() {deepEqual( Stem("ausbreche"), "ausbrech");});
test("ausbrechen -> ausbrech", function() {deepEqual( Stem("ausbrechen"), "ausbrech");});
test("ausbrechend -> ausbrech", function() {deepEqual( Stem("ausbrechend"), "ausbrech");});
test("ausbrechendem -> ausbrech", function() {deepEqual( Stem("ausbrechendem"), "ausbrech");});
test("ausbrechenden -> ausbrech", function() {deepEqual( Stem("ausbrechenden"), "ausbrech");});
test("ausbreite -> ausbreit", function() {deepEqual( Stem("ausbreite"), "ausbreit");});
test("ausbreiten -> ausbreit", function() {deepEqual( Stem("ausbreiten"), "ausbreit");});
test("ausbreitet -> ausbreitet", function() {deepEqual( Stem("ausbreitet"), "ausbreitet");});
test("ausbreitete -> ausbreitet", function() {deepEqual( Stem("ausbreitete"), "ausbreitet");});
test("ausbreiteten -> ausbreitet", function() {deepEqual( Stem("ausbreiteten"), "ausbreitet");});
test("ausbreitung -> ausbreit", function() {deepEqual( Stem("ausbreitung"), "ausbreit");});
test("ausbricht -> ausbricht", function() {deepEqual( Stem("ausbricht"), "ausbricht");});
test("ausbruch -> ausbruch", function() {deepEqual( Stem("ausbruch"), "ausbruch");});
test("ausbrüten -> ausbrut", function() {deepEqual( Stem("ausbrüten"), "ausbrut");});
test("ausbund -> ausbund", function() {deepEqual( Stem("ausbund"), "ausbund");});
test("ausdachte -> ausdacht", function() {deepEqual( Stem("ausdachte"), "ausdacht");});
test("ausdauer -> ausdau", function() {deepEqual( Stem("ausdauer"), "ausdau");});
test("ausdauernd -> ausdauernd", function() {deepEqual( Stem("ausdauernd"), "ausdauernd");});
test("ausdehnen -> ausdehn", function() {deepEqual( Stem("ausdehnen"), "ausdehn");});
test("ausdehnt -> ausdehnt", function() {deepEqual( Stem("ausdehnt"), "ausdehnt");});
test("ausdehnung -> ausdehn", function() {deepEqual( Stem("ausdehnung"), "ausdehn");});
test("ausdenken -> ausdenk", function() {deepEqual( Stem("ausdenken"), "ausdenk");});
test("ausdeuteten -> ausdeutet", function() {deepEqual( Stem("ausdeuteten"), "ausdeutet");});
test("ausdruck -> ausdruck", function() {deepEqual( Stem("ausdruck"), "ausdruck");});
test("ausdrucke -> ausdruck", function() {deepEqual( Stem("ausdrucke"), "ausdruck");});
test("ausdrücke -> ausdruck", function() {deepEqual( Stem("ausdrücke"), "ausdruck");});
test("ausdrücken -> ausdruck", function() {deepEqual( Stem("ausdrücken"), "ausdruck");});
test("ausdrücklich -> ausdruck", function() {deepEqual( Stem("ausdrücklich"), "ausdruck");});
test("ausdrückliche -> ausdruck", function() {deepEqual( Stem("ausdrückliche"), "ausdruck");});
test("ausdrucks -> ausdruck", function() {deepEqual( Stem("ausdrucks"), "ausdruck");});
test("ausdrucksweise -> ausdrucksweis", function() {deepEqual( Stem("ausdrucksweise"), "ausdrucksweis");});
test("ausdrückt -> ausdruckt", function() {deepEqual( Stem("ausdrückt"), "ausdruckt");});
test("ausdrückte -> ausdruckt", function() {deepEqual( Stem("ausdrückte"), "ausdruckt");});
test("ausdrückten -> ausdruckt", function() {deepEqual( Stem("ausdrückten"), "ausdruckt");});
test("ausdünstet -> ausdunstet", function() {deepEqual( Stem("ausdünstet"), "ausdunstet");});
test("ausdünstungen -> ausdunst", function() {deepEqual( Stem("ausdünstungen"), "ausdunst");});
test("auseinander -> auseinand", function() {deepEqual( Stem("auseinander"), "auseinand");});
test("auseinanderfahren -> auseinanderfahr", function() {deepEqual( Stem("auseinanderfahren"), "auseinanderfahr");});
test("auseinanderfalteten -> auseinanderfaltet", function() {deepEqual( Stem("auseinanderfalteten"), "auseinanderfaltet");});
test("auseinandergeschnitten -> auseinandergeschnitt", function() {deepEqual( Stem("auseinandergeschnitten"), "auseinandergeschnitt");});
test("auseinanderhuschten -> auseinanderhuscht", function() {deepEqual( Stem("auseinanderhuschten"), "auseinanderhuscht");});
test("auseinanderjagte -> auseinanderjagt", function() {deepEqual( Stem("auseinanderjagte"), "auseinanderjagt");});
test("auseinanderschneiden -> auseinanderschneid", function() {deepEqual( Stem("auseinanderschneiden"), "auseinanderschneid");});
test("auseinandersetzen -> auseinandersetz", function() {deepEqual( Stem("auseinandersetzen"), "auseinandersetz");});
test("auseinandersetzt -> auseinandersetzt", function() {deepEqual( Stem("auseinandersetzt"), "auseinandersetzt");});
test("auseinandersetzung -> auseinandersetz", function() {deepEqual( Stem("auseinandersetzung"), "auseinandersetz");});
test("auseinanderteilte -> auseinanderteilt", function() {deepEqual( Stem("auseinanderteilte"), "auseinanderteilt");});
test("auseinanderzugehen -> auseinanderzugeh", function() {deepEqual( Stem("auseinanderzugehen"), "auseinanderzugeh");});
test("auseinanderzukeilen -> auseinanderzukeil", function() {deepEqual( Stem("auseinanderzukeilen"), "auseinanderzukeil");});
test("auseinanderzusetzen -> auseinanderzusetz", function() {deepEqual( Stem("auseinanderzusetzen"), "auseinanderzusetz");});
test("ausersehen -> auserseh", function() {deepEqual( Stem("ausersehen"), "auserseh");});
test("auserwählen -> auserwahl", function() {deepEqual( Stem("auserwählen"), "auserwahl");});
test("auserwählt -> auserwahlt", function() {deepEqual( Stem("auserwählt"), "auserwahlt");});
test("auserwählte -> auserwahlt", function() {deepEqual( Stem("auserwählte"), "auserwahlt");});
test("auserwählten -> auserwahlt", function() {deepEqual( Stem("auserwählten"), "auserwahlt");});
test("auserwähltes -> auserwahlt", function() {deepEqual( Stem("auserwähltes"), "auserwahlt");});
test("ausfallen -> ausfall", function() {deepEqual( Stem("ausfallen"), "ausfall");});
test("ausfiel -> ausfiel", function() {deepEqual( Stem("ausfiel"), "ausfiel");});
test("ausfiele -> ausfiel", function() {deepEqual( Stem("ausfiele"), "ausfiel");});
test("ausfindig -> ausfind", function() {deepEqual( Stem("ausfindig"), "ausfind");});
test("ausfliesst -> ausfliesst", function() {deepEqual( Stem("ausfliesst"), "ausfliesst");});
test("ausfließt -> ausfliesst", function() {deepEqual( Stem("ausfließt"), "ausfliesst");});
test("ausflucht -> ausflucht", function() {deepEqual( Stem("ausflucht"), "ausflucht");});
test("ausflüge -> ausflug", function() {deepEqual( Stem("ausflüge"), "ausflug");});
test("ausflüsse -> ausfluss", function() {deepEqual( Stem("ausflüsse"), "ausfluss");});
test("ausflüssen -> ausfluss", function() {deepEqual( Stem("ausflüssen"), "ausfluss");});
test("ausforschen -> ausforsch", function() {deepEqual( Stem("ausforschen"), "ausforsch");});
test("ausführen -> ausfuhr", function() {deepEqual( Stem("ausführen"), "ausfuhr");});
test("ausführlich -> ausfuhr", function() {deepEqual( Stem("ausführlich"), "ausfuhr");});
test("ausführlichen -> ausfuhr", function() {deepEqual( Stem("ausführlichen"), "ausfuhr");});
test("ausführlicher -> ausfuhr", function() {deepEqual( Stem("ausführlicher"), "ausfuhr");});
test("ausführlichere -> ausfuhr", function() {deepEqual( Stem("ausführlichere"), "ausfuhr");});
test("ausführlichst -> ausfuhr", function() {deepEqual( Stem("ausführlichst"), "ausfuhr");});
test("ausführst -> ausfuhrst", function() {deepEqual( Stem("ausführst"), "ausfuhrst");});
test("ausführt -> ausfuhrt", function() {deepEqual( Stem("ausführt"), "ausfuhrt");});
test("ausführte -> ausfuhrt", function() {deepEqual( Stem("ausführte"), "ausfuhrt");});
test("ausführung -> ausfuhr", function() {deepEqual( Stem("ausführung"), "ausfuhr");});
test("ausfüllen -> ausfull", function() {deepEqual( Stem("ausfüllen"), "ausfull");});
test("ausg -> ausg", function() {deepEqual( Stem("ausg"), "ausg");});
test("ausgab -> ausgab", function() {deepEqual( Stem("ausgab"), "ausgab");});
test("ausgabe -> ausgab", function() {deepEqual( Stem("ausgabe"), "ausgab");});
test("ausgaben -> ausgab", function() {deepEqual( Stem("ausgaben"), "ausgab");});
test("ausgäben -> ausgab", function() {deepEqual( Stem("ausgäben"), "ausgab");});
test("ausgang -> ausgang", function() {deepEqual( Stem("ausgang"), "ausgang");});
test("ausgangs -> ausgang", function() {deepEqual( Stem("ausgangs"), "ausgang");});
test("ausgangspunkt -> ausgangspunkt", function() {deepEqual( Stem("ausgangspunkt"), "ausgangspunkt");});
test("ausgearbeitet -> ausgearbeitet", function() {deepEqual( Stem("ausgearbeitet"), "ausgearbeitet");});
test("ausgeben -> ausgeb", function() {deepEqual( Stem("ausgeben"), "ausgeb");});
test("ausgebeutet -> ausgebeutet", function() {deepEqual( Stem("ausgebeutet"), "ausgebeutet");});
test("ausgebildet -> ausgebildet", function() {deepEqual( Stem("ausgebildet"), "ausgebildet");});
test("ausgebildete -> ausgebildet", function() {deepEqual( Stem("ausgebildete"), "ausgebildet");});
test("ausgeblasen -> ausgeblas", function() {deepEqual( Stem("ausgeblasen"), "ausgeblas");});
test("ausgeblasene -> ausgeblas", function() {deepEqual( Stem("ausgeblasene"), "ausgeblas");});
test("ausgeblieben -> ausgeblieb", function() {deepEqual( Stem("ausgeblieben"), "ausgeblieb");});
test("ausgebliebenen -> ausgeblieb", function() {deepEqual( Stem("ausgebliebenen"), "ausgeblieb");});
test("ausgeboren -> ausgebor", function() {deepEqual( Stem("ausgeboren"), "ausgebor");});
test("ausgebrannt -> ausgebrannt", function() {deepEqual( Stem("ausgebrannt"), "ausgebrannt");});
test("ausgebreitet -> ausgebreitet", function() {deepEqual( Stem("ausgebreitet"), "ausgebreitet");});
test("ausgebrüteten -> ausgebrutet", function() {deepEqual( Stem("ausgebrüteten"), "ausgebrutet");});
test("ausgedacht -> ausgedacht", function() {deepEqual( Stem("ausgedacht"), "ausgedacht");});
test("ausgedehnt -> ausgedehnt", function() {deepEqual( Stem("ausgedehnt"), "ausgedehnt");});
test("ausgedehnten -> ausgedehnt", function() {deepEqual( Stem("ausgedehnten"), "ausgedehnt");});
test("ausgedehntes -> ausgedehnt", function() {deepEqual( Stem("ausgedehntes"), "ausgedehnt");});
test("ausgediente -> ausgedient", function() {deepEqual( Stem("ausgediente"), "ausgedient");});
test("ausgedienten -> ausgedient", function() {deepEqual( Stem("ausgedienten"), "ausgedient");});
test("ausgedientes -> ausgedient", function() {deepEqual( Stem("ausgedientes"), "ausgedient");});
test("ausgedörrten -> ausgedorrt", function() {deepEqual( Stem("ausgedörrten"), "ausgedorrt");});
test("ausgedörrtes -> ausgedorrt", function() {deepEqual( Stem("ausgedörrtes"), "ausgedorrt");});
test("ausgedrückt -> ausgedruckt", function() {deepEqual( Stem("ausgedrückt"), "ausgedruckt");});
test("ausgedruckte -> ausgedruckt", function() {deepEqual( Stem("ausgedruckte"), "ausgedruckt");});
test("ausgefallen -> ausgefall", function() {deepEqual( Stem("ausgefallen"), "ausgefall");});
test("ausgeflossen -> ausgefloss", function() {deepEqual( Stem("ausgeflossen"), "ausgefloss");});
test("ausgeforscht -> ausgeforscht", function() {deepEqual( Stem("ausgeforscht"), "ausgeforscht");});
test("ausgefragt -> ausgefragt", function() {deepEqual( Stem("ausgefragt"), "ausgefragt");});
test("ausgeführt -> ausgefuhrt", function() {deepEqual( Stem("ausgeführt"), "ausgefuhrt");});
test("ausgefüllt -> ausgefullt", function() {deepEqual( Stem("ausgefüllt"), "ausgefullt");});
test("ausgegangen -> ausgegang", function() {deepEqual( Stem("ausgegangen"), "ausgegang");});
test("ausgegangene -> ausgegang", function() {deepEqual( Stem("ausgegangene"), "ausgegang");});
test("ausgegeben -> ausgegeb", function() {deepEqual( Stem("ausgegeben"), "ausgegeb");});
test("ausgegebendie -> ausgegebendi", function() {deepEqual( Stem("ausgegebendie"), "ausgegebendi");});
test("ausgeglichen -> ausgeg", function() {deepEqual( Stem("ausgeglichen"), "ausgeg");});
test("ausgegossen -> ausgegoss", function() {deepEqual( Stem("ausgegossen"), "ausgegoss");});
test("ausgegraben -> ausgegrab", function() {deepEqual( Stem("ausgegraben"), "ausgegrab");});
test("ausgehaucht -> ausgehaucht", function() {deepEqual( Stem("ausgehaucht"), "ausgehaucht");});
test("ausgehauen -> ausgehau", function() {deepEqual( Stem("ausgehauen"), "ausgehau");});
test("ausgehe -> ausgeh", function() {deepEqual( Stem("ausgehe"), "ausgeh");});
test("ausgeheckt -> ausgeheckt", function() {deepEqual( Stem("ausgeheckt"), "ausgeheckt");});
test("ausgehen -> ausgeh", function() {deepEqual( Stem("ausgehen"), "ausgeh");});
test("ausgehend -> ausgeh", function() {deepEqual( Stem("ausgehend"), "ausgeh");});
test("ausgehende -> ausgeh", function() {deepEqual( Stem("ausgehende"), "ausgeh");});
test("ausgehenden -> ausgeh", function() {deepEqual( Stem("ausgehenden"), "ausgeh");});
test("ausgehn -> ausgehn", function() {deepEqual( Stem("ausgehn"), "ausgehn");});
test("ausgehorcht -> ausgehorcht", function() {deepEqual( Stem("ausgehorcht"), "ausgehorcht");});
test("ausgeht -> ausgeht", function() {deepEqual( Stem("ausgeht"), "ausgeht");});
test("ausgehungerte -> ausgehungert", function() {deepEqual( Stem("ausgehungerte"), "ausgehungert");});
test("ausgehungertes -> ausgehungert", function() {deepEqual( Stem("ausgehungertes"), "ausgehungert");});
test("ausgeklügelt -> ausgeklugelt", function() {deepEqual( Stem("ausgeklügelt"), "ausgeklugelt");});
test("ausgekratzt -> ausgekratzt", function() {deepEqual( Stem("ausgekratzt"), "ausgekratzt");});
test("ausgelacht -> ausgelacht", function() {deepEqual( Stem("ausgelacht"), "ausgelacht");});
test("ausgelassen -> ausgelass", function() {deepEqual( Stem("ausgelassen"), "ausgelass");});
test("ausgelassene -> ausgelass", function() {deepEqual( Stem("ausgelassene"), "ausgelass");});
test("ausgelassenheit -> ausgelass", function() {deepEqual( Stem("ausgelassenheit"), "ausgelass");});
test("ausgelassenste -> ausgelassen", function() {deepEqual( Stem("ausgelassenste"), "ausgelassen");});
test("ausgelassensten -> ausgelassen", function() {deepEqual( Stem("ausgelassensten"), "ausgelassen");});
test("ausgelastet -> ausgelastet", function() {deepEqual( Stem("ausgelastet"), "ausgelastet");});
test("ausgelegt -> ausgelegt", function() {deepEqual( Stem("ausgelegt"), "ausgelegt");});
test("ausgelöscht -> ausgeloscht", function() {deepEqual( Stem("ausgelöscht"), "ausgeloscht");});
test("ausgelöschte -> ausgeloscht", function() {deepEqual( Stem("ausgelöschte"), "ausgeloscht");});
test("ausgemacht -> ausgemacht", function() {deepEqual( Stem("ausgemacht"), "ausgemacht");});
test("ausgemachte -> ausgemacht", function() {deepEqual( Stem("ausgemachte"), "ausgemacht");});
test("ausgemalten -> ausgemalt", function() {deepEqual( Stem("ausgemalten"), "ausgemalt");});
test("ausgemittelt -> ausgemittelt", function() {deepEqual( Stem("ausgemittelt"), "ausgemittelt");});
test("ausgenommen -> ausgenomm", function() {deepEqual( Stem("ausgenommen"), "ausgenomm");});
test("ausgenommene -> ausgenomm", function() {deepEqual( Stem("ausgenommene"), "ausgenomm");});
test("ausgenossen -> ausgenoss", function() {deepEqual( Stem("ausgenossen"), "ausgenoss");});
test("ausgenutzt -> ausgenutzt", function() {deepEqual( Stem("ausgenutzt"), "ausgenutzt");});
test("ausgepeitscht -> ausgepeitscht", function() {deepEqual( Stem("ausgepeitscht"), "ausgepeitscht");});
test("ausgepustet -> ausgepustet", function() {deepEqual( Stem("ausgepustet"), "ausgepustet");});
test("ausgeputzt -> ausgeputzt", function() {deepEqual( Stem("ausgeputzt"), "ausgeputzt");});
test("ausgequetschten -> ausgequetscht", function() {deepEqual( Stem("ausgequetschten"), "ausgequetscht");});
test("ausgerechnet -> ausgerechnet", function() {deepEqual( Stem("ausgerechnet"), "ausgerechnet");});
test("ausgereckt -> ausgereckt", function() {deepEqual( Stem("ausgereckt"), "ausgereckt");});
test("ausgereiften -> ausgereift", function() {deepEqual( Stem("ausgereiften"), "ausgereift");});
test("ausgerichtet -> ausgerichtet", function() {deepEqual( Stem("ausgerichtet"), "ausgerichtet");});
test("ausgerissen -> ausgeriss", function() {deepEqual( Stem("ausgerissen"), "ausgeriss");});
test("ausgeritten -> ausgeritt", function() {deepEqual( Stem("ausgeritten"), "ausgeritt");});
test("ausgerottet -> ausgerottet", function() {deepEqual( Stem("ausgerottet"), "ausgerottet");});
test("ausgerückt -> ausgeruckt", function() {deepEqual( Stem("ausgerückt"), "ausgeruckt");});
test("ausgerufen -> ausgeruf", function() {deepEqual( Stem("ausgerufen"), "ausgeruf");});
test("ausgerufenen -> ausgeruf", function() {deepEqual( Stem("ausgerufenen"), "ausgeruf");});
test("ausgerüstet -> ausgerustet", function() {deepEqual( Stem("ausgerüstet"), "ausgerustet");});
test("ausgesagt -> ausgesagt", function() {deepEqual( Stem("ausgesagt"), "ausgesagt");});
test("ausgesandt -> ausgesandt", function() {deepEqual( Stem("ausgesandt"), "ausgesandt");});
test("ausgesandte -> ausgesandt", function() {deepEqual( Stem("ausgesandte"), "ausgesandt");});
test("ausgeschaltet -> ausgeschaltet", function() {deepEqual( Stem("ausgeschaltet"), "ausgeschaltet");});
test("ausgeschickt -> ausgeschickt", function() {deepEqual( Stem("ausgeschickt"), "ausgeschickt");});
test("ausgeschieden -> ausgeschied", function() {deepEqual( Stem("ausgeschieden"), "ausgeschied");});
test("ausgeschlachtet -> ausgeschlachtet", function() {deepEqual( Stem("ausgeschlachtet"), "ausgeschlachtet");});
test("ausgeschlafen -> ausgeschlaf", function() {deepEqual( Stem("ausgeschlafen"), "ausgeschlaf");});
test("ausgeschlagen -> ausgeschlag", function() {deepEqual( Stem("ausgeschlagen"), "ausgeschlag");});
test("ausgeschlossen -> ausgeschloss", function() {deepEqual( Stem("ausgeschlossen"), "ausgeschloss");});
test("ausgeschnitzt -> ausgeschnitzt", function() {deepEqual( Stem("ausgeschnitzt"), "ausgeschnitzt");});
test("ausgeschoben -> ausgeschob", function() {deepEqual( Stem("ausgeschoben"), "ausgeschob");});
test("ausgeschrieben -> ausgeschrieb", function() {deepEqual( Stem("ausgeschrieben"), "ausgeschrieb");});
test("ausgeschrieen -> ausgeschrie", function() {deepEqual( Stem("ausgeschrieen"), "ausgeschrie");});
test("ausgeschüttet -> ausgeschuttet", function() {deepEqual( Stem("ausgeschüttet"), "ausgeschuttet");});
test("ausgeschweiften -> ausgeschweift", function() {deepEqual( Stem("ausgeschweiften"), "ausgeschweift");});
test("ausgesehen -> ausgeseh", function() {deepEqual( Stem("ausgesehen"), "ausgeseh");});
test("ausgesetzt -> ausgesetzt", function() {deepEqual( Stem("ausgesetzt"), "ausgesetzt");});
test("ausgesetzte -> ausgesetzt", function() {deepEqual( Stem("ausgesetzte"), "ausgesetzt");});
test("ausgesondert -> ausgesondert", function() {deepEqual( Stem("ausgesondert"), "ausgesondert");});
test("ausgesonnen -> ausgesonn", function() {deepEqual( Stem("ausgesonnen"), "ausgesonn");});
test("ausgespannt -> ausgespannt", function() {deepEqual( Stem("ausgespannt"), "ausgespannt");});
test("ausgespart -> ausgespart", function() {deepEqual( Stem("ausgespart"), "ausgespart");});
test("ausgesprochen -> ausgesproch", function() {deepEqual( Stem("ausgesprochen"), "ausgesproch");});
test("ausgesprochenen -> ausgesproch", function() {deepEqual( Stem("ausgesprochenen"), "ausgesproch");});
test("ausgestaltung -> ausgestalt", function() {deepEqual( Stem("ausgestaltung"), "ausgestalt");});
test("ausgestattet -> ausgestattet", function() {deepEqual( Stem("ausgestattet"), "ausgestattet");});
test("ausgestatteter -> ausgestattet", function() {deepEqual( Stem("ausgestatteter"), "ausgestattet");});
test("ausgesteckt -> ausgesteckt", function() {deepEqual( Stem("ausgesteckt"), "ausgesteckt");});
test("ausgesteckten -> ausgesteckt", function() {deepEqual( Stem("ausgesteckten"), "ausgesteckt");});
test("ausgestellt -> ausgestellt", function() {deepEqual( Stem("ausgestellt"), "ausgestellt");});
test("ausgestorben -> ausgestorb", function() {deepEqual( Stem("ausgestorben"), "ausgestorb");});
test("ausgestossen -> ausgestoss", function() {deepEqual( Stem("ausgestossen"), "ausgestoss");});
test("ausgestoßen -> ausgestoss", function() {deepEqual( Stem("ausgestoßen"), "ausgestoss");});
test("ausgestrahlt -> ausgestrahlt", function() {deepEqual( Stem("ausgestrahlt"), "ausgestrahlt");});
test("ausgestreckt -> ausgestreckt", function() {deepEqual( Stem("ausgestreckt"), "ausgestreckt");});
test("ausgestreckte -> ausgestreckt", function() {deepEqual( Stem("ausgestreckte"), "ausgestreckt");});
test("ausgestrecktem -> ausgestreckt", function() {deepEqual( Stem("ausgestrecktem"), "ausgestreckt");});
test("ausgestreckten -> ausgestreckt", function() {deepEqual( Stem("ausgestreckten"), "ausgestreckt");});
test("ausgesuchte -> ausgesucht", function() {deepEqual( Stem("ausgesuchte"), "ausgesucht");});
test("ausgesuchten -> ausgesucht", function() {deepEqual( Stem("ausgesuchten"), "ausgesucht");});
test("ausgetauscht -> ausgetauscht", function() {deepEqual( Stem("ausgetauscht"), "ausgetauscht");});
test("ausgeteilt -> ausgeteilt", function() {deepEqual( Stem("ausgeteilt"), "ausgeteilt");});
test("ausgeteilte -> ausgeteilt", function() {deepEqual( Stem("ausgeteilte"), "ausgeteilt");});
test("ausgetilgt -> ausgetilgt", function() {deepEqual( Stem("ausgetilgt"), "ausgetilgt");});
test("ausgetragen -> ausgetrag", function() {deepEqual( Stem("ausgetragen"), "ausgetrag");});
test("ausgetreten -> ausgetret", function() {deepEqual( Stem("ausgetreten"), "ausgetret");});
test("ausgetretene -> ausgetret", function() {deepEqual( Stem("ausgetretene"), "ausgetret");});
test("ausgetrieben -> ausgetrieb", function() {deepEqual( Stem("ausgetrieben"), "ausgetrieb");});
test("ausgetrocknet -> ausgetrocknet", function() {deepEqual( Stem("ausgetrocknet"), "ausgetrocknet");});
test("ausgeübt -> ausgeubt", function() {deepEqual( Stem("ausgeübt"), "ausgeubt");});
test("ausgewandert -> ausgewandert", function() {deepEqual( Stem("ausgewandert"), "ausgewandert");});
test("ausgeweidet -> ausgeweidet", function() {deepEqual( Stem("ausgeweidet"), "ausgeweidet");});
test("ausgewischt -> ausgewischt", function() {deepEqual( Stem("ausgewischt"), "ausgewischt");});
test("ausgewogen -> ausgewog", function() {deepEqual( Stem("ausgewogen"), "ausgewog");});
test("ausgeworfen -> ausgeworf", function() {deepEqual( Stem("ausgeworfen"), "ausgeworf");});
test("ausgezackten -> ausgezackt", function() {deepEqual( Stem("ausgezackten"), "ausgezackt");});
test("ausgezeichnet -> ausgezeichnet", function() {deepEqual( Stem("ausgezeichnet"), "ausgezeichnet");});
test("ausgezeichnete -> ausgezeichnet", function() {deepEqual( Stem("ausgezeichnete"), "ausgezeichnet");});
test("ausgezeichneten -> ausgezeichnet", function() {deepEqual( Stem("ausgezeichneten"), "ausgezeichnet");});
test("ausgezeichnetes -> ausgezeichnet", function() {deepEqual( Stem("ausgezeichnetes"), "ausgezeichnet");});
test("ausgezeichnetrückbesinnung -> ausgezeichnetruckbesinn", function() {deepEqual( Stem("ausgezeichnetrückbesinnung"), "ausgezeichnetruckbesinn");});
test("ausgeziechnet -> ausgeziechnet", function() {deepEqual( Stem("ausgeziechnet"), "ausgeziechnet");});
test("ausgezogen -> ausgezog", function() {deepEqual( Stem("ausgezogen"), "ausgezog");});
test("ausgezogene -> ausgezog", function() {deepEqual( Stem("ausgezogene"), "ausgezog");});
test("ausgezogenen -> ausgezog", function() {deepEqual( Stem("ausgezogenen"), "ausgezog");});
test("ausgiebigen -> ausgieb", function() {deepEqual( Stem("ausgiebigen"), "ausgieb");});
test("ausgiebigkeit -> ausgieb", function() {deepEqual( Stem("ausgiebigkeit"), "ausgieb");});
test("ausgiessen -> ausgiess", function() {deepEqual( Stem("ausgiessen"), "ausgiess");});
test("ausgießen -> ausgiess", function() {deepEqual( Stem("ausgießen"), "ausgiess");});
test("ausging -> ausging", function() {deepEqual( Stem("ausging"), "ausging");});
test("ausginge -> ausging", function() {deepEqual( Stem("ausginge"), "ausging");});
test("ausgingen -> ausging", function() {deepEqual( Stem("ausgingen"), "ausging");});
test("ausgmacht -> ausgmacht", function() {deepEqual( Stem("ausgmacht"), "ausgmacht");});
test("ausgoss -> ausgoss", function() {deepEqual( Stem("ausgoss"), "ausgoss");});
test("ausgoß -> ausgoss", function() {deepEqual( Stem("ausgoß"), "ausgoss");});
test("ausgredt -> ausgredt", function() {deepEqual( Stem("ausgredt"), "ausgredt");});
test("ausgstossen -> ausgstoss", function() {deepEqual( Stem("ausgstossen"), "ausgstoss");});
test("ausgwichen -> ausgwich", function() {deepEqual( Stem("ausgwichen"), "ausgwich");});
test("ausgworfen -> ausgworf", function() {deepEqual( Stem("ausgworfen"), "ausgworf");});
test("aushalt -> aushalt", function() {deepEqual( Stem("aushalt"), "aushalt");});
test("aushält -> aushalt", function() {deepEqual( Stem("aushält"), "aushalt");});
test("aushalten -> aushalt", function() {deepEqual( Stem("aushalten"), "aushalt");});
test("ausharren -> ausharr", function() {deepEqual( Stem("ausharren"), "ausharr");});
test("aushauchte -> aushaucht", function() {deepEqual( Stem("aushauchte"), "aushaucht");});
test("aushauen -> aushau", function() {deepEqual( Stem("aushauen"), "aushau");});
test("aushielt -> aushielt", function() {deepEqual( Stem("aushielt"), "aushielt");});
test("aushilfe -> aushilf", function() {deepEqual( Stem("aushilfe"), "aushilf");});
test("ausholend -> aushol", function() {deepEqual( Stem("ausholend"), "aushol");});
test("aushungern -> aushung", function() {deepEqual( Stem("aushungern"), "aushung");});
test("auskennen -> auskenn", function() {deepEqual( Stem("auskennen"), "auskenn");});
test("ausklang -> ausklang", function() {deepEqual( Stem("ausklang"), "ausklang");});
test("auskneifer -> auskneif", function() {deepEqual( Stem("auskneifer"), "auskneif");});
test("auskommen -> auskomm", function() {deepEqual( Stem("auskommen"), "auskomm");});
test("auskommens -> auskomm", function() {deepEqual( Stem("auskommens"), "auskomm");});
test("auskröchen -> auskroch", function() {deepEqual( Stem("auskröchen"), "auskroch");});
test("auskunft -> auskunft", function() {deepEqual( Stem("auskunft"), "auskunft");});
test("auslachen -> auslach", function() {deepEqual( Stem("auslachen"), "auslach");});
test("auslachte -> auslacht", function() {deepEqual( Stem("auslachte"), "auslacht");});
test("ausladungen -> auslad", function() {deepEqual( Stem("ausladungen"), "auslad");});
test("auslagen -> auslag", function() {deepEqual( Stem("auslagen"), "auslag");});
test("ausland -> ausland", function() {deepEqual( Stem("ausland"), "ausland");});
test("ausländischen -> ausland", function() {deepEqual( Stem("ausländischen"), "ausland");});
test("auslassen -> auslass", function() {deepEqual( Stem("auslassen"), "auslass");});
test("auslaufen -> auslauf", function() {deepEqual( Stem("auslaufen"), "auslauf");});
test("ausläuft -> auslauft", function() {deepEqual( Stem("ausläuft"), "auslauft");});
test("auslebte -> auslebt", function() {deepEqual( Stem("auslebte"), "auslebt");});
test("ausleeren -> ausle", function() {deepEqual( Stem("ausleeren"), "ausle");});
test("auslegen -> ausleg", function() {deepEqual( Stem("auslegen"), "ausleg");});
test("auslegt -> auslegt", function() {deepEqual( Stem("auslegt"), "auslegt");});
test("auslegung -> ausleg", function() {deepEqual( Stem("auslegung"), "ausleg");});
test("ausliesse -> ausliess", function() {deepEqual( Stem("ausliesse"), "ausliess");});
test("ausließe -> ausliess", function() {deepEqual( Stem("ausließe"), "ausliess");});
test("auslöschen -> auslosch", function() {deepEqual( Stem("auslöschen"), "auslosch");});
test("auslöscht -> ausloscht", function() {deepEqual( Stem("auslöscht"), "ausloscht");});
test("auslöschte -> ausloscht", function() {deepEqual( Stem("auslöschte"), "ausloscht");});
test("auslöschung -> auslosch", function() {deepEqual( Stem("auslöschung"), "auslosch");});
test("ausmache -> ausmach", function() {deepEqual( Stem("ausmache"), "ausmach");});
test("ausmachen -> ausmach", function() {deepEqual( Stem("ausmachen"), "ausmach");});
test("ausmacht -> ausmacht", function() {deepEqual( Stem("ausmacht"), "ausmacht");});
test("ausmachte -> ausmacht", function() {deepEqual( Stem("ausmachte"), "ausmacht");});
test("ausmachten -> ausmacht", function() {deepEqual( Stem("ausmachten"), "ausmacht");});
test("ausmass -> ausmass", function() {deepEqual( Stem("ausmass"), "ausmass");});
test("ausmaß -> ausmass", function() {deepEqual( Stem("ausmaß"), "ausmass");});
test("ausmündung -> ausmund", function() {deepEqual( Stem("ausmündung"), "ausmund");});
test("ausnahme -> ausnahm", function() {deepEqual( Stem("ausnahme"), "ausnahm");});
test("ausnähme -> ausnahm", function() {deepEqual( Stem("ausnähme"), "ausnahm");});
test("ausnahmen -> ausnahm", function() {deepEqual( Stem("ausnahmen"), "ausnahm");});
test("ausnahmsweise -> ausnahmsweis", function() {deepEqual( Stem("ausnahmsweise"), "ausnahmsweis");});
test("ausnehmen -> ausnehm", function() {deepEqual( Stem("ausnehmen"), "ausnehm");});
test("ausnehmend -> ausnehm", function() {deepEqual( Stem("ausnehmend"), "ausnehm");});
test("ausnutzen -> ausnutz", function() {deepEqual( Stem("ausnutzen"), "ausnutz");});
test("auspfiff -> auspfiff", function() {deepEqual( Stem("auspfiff"), "auspfiff");});
test("ausräumen -> ausraum", function() {deepEqual( Stem("ausräumen"), "ausraum");});
test("ausrecken -> ausreck", function() {deepEqual( Stem("ausrecken"), "ausreck");});
test("ausreden -> ausred", function() {deepEqual( Stem("ausreden"), "ausred");});
test("ausreichenden -> ausreich", function() {deepEqual( Stem("ausreichenden"), "ausreich");});
test("ausreicht -> ausreicht", function() {deepEqual( Stem("ausreicht"), "ausreicht");});
test("ausreissen -> ausreiss", function() {deepEqual( Stem("ausreissen"), "ausreiss");});
test("ausrichten -> ausricht", function() {deepEqual( Stem("ausrichten"), "ausricht");});
test("ausrichtet -> ausrichtet", function() {deepEqual( Stem("ausrichtet"), "ausrichtet");});
test("ausrief -> ausrief", function() {deepEqual( Stem("ausrief"), "ausrief");});
test("ausrotten -> ausrott", function() {deepEqual( Stem("ausrotten"), "ausrott");});
test("ausrottet -> ausrottet", function() {deepEqual( Stem("ausrottet"), "ausrottet");});
test("ausrücken -> ausruck", function() {deepEqual( Stem("ausrücken"), "ausruck");});
test("ausrückt -> ausruckt", function() {deepEqual( Stem("ausrückt"), "ausruckt");});
test("ausruf -> ausruf", function() {deepEqual( Stem("ausruf"), "ausruf");});
test("ausrufe -> ausruf", function() {deepEqual( Stem("ausrufe"), "ausruf");});
test("ausruhen -> ausruh", function() {deepEqual( Stem("ausruhen"), "ausruh");});
test("ausruhet -> ausruhet", function() {deepEqual( Stem("ausruhet"), "ausruhet");});
test("ausrüstung -> ausrust", function() {deepEqual( Stem("ausrüstung"), "ausrust");});
test("ausrüstungsgegenständen -> ausrustungsgegenstand", function() {deepEqual( Stem("ausrüstungsgegenständen"), "ausrustungsgegenstand");});
test("aussaat -> aussaat", function() {deepEqual( Stem("aussaat"), "aussaat");});
test("aussage -> aussag", function() {deepEqual( Stem("aussage"), "aussag");});
test("aussagen -> aussag", function() {deepEqual( Stem("aussagen"), "aussag");});
test("aussagenden -> aussag", function() {deepEqual( Stem("aussagenden"), "aussag");});
test("aussah -> aussah", function() {deepEqual( Stem("aussah"), "aussah");});
test("aussähe -> aussah", function() {deepEqual( Stem("aussähe"), "aussah");});
test("aussahen -> aussah", function() {deepEqual( Stem("aussahen"), "aussah");});
test("aussatz -> aussatz", function() {deepEqual( Stem("aussatz"), "aussatz");});
test("aussatzes -> aussatz", function() {deepEqual( Stem("aussatzes"), "aussatz");});
test("aussätzig -> aussatz", function() {deepEqual( Stem("aussätzig"), "aussatz");});
test("aussätzige -> aussatz", function() {deepEqual( Stem("aussätzige"), "aussatz");});
test("aussätzigen -> aussatz", function() {deepEqual( Stem("aussätzigen"), "aussatz");});
test("ausschalten -> ausschalt", function() {deepEqual( Stem("ausschalten"), "ausschalt");});
test("ausschicken -> ausschick", function() {deepEqual( Stem("ausschicken"), "ausschick");});
test("ausschied -> ausschied", function() {deepEqual( Stem("ausschied"), "ausschied");});
test("ausschlag -> ausschlag", function() {deepEqual( Stem("ausschlag"), "ausschlag");});
test("ausschließen -> ausschliess", function() {deepEqual( Stem("ausschließen"), "ausschliess");});
test("ausschliesslich -> ausschliess", function() {deepEqual( Stem("ausschliesslich"), "ausschliess");});
test("ausschließlich -> ausschliess", function() {deepEqual( Stem("ausschließlich"), "ausschliess");});
test("ausschliessliches -> ausschliess", function() {deepEqual( Stem("ausschliessliches"), "ausschliess");});
test("ausschließliches -> ausschliess", function() {deepEqual( Stem("ausschließliches"), "ausschliess");});
test("ausschliesst -> ausschliesst", function() {deepEqual( Stem("ausschliesst"), "ausschliesst");});
test("ausschliessungsweise -> ausschliessungsweis", function() {deepEqual( Stem("ausschliessungsweise"), "ausschliessungsweis");});
test("ausschlugen -> ausschlug", function() {deepEqual( Stem("ausschlugen"), "ausschlug");});
test("ausschmückten -> ausschmuckt", function() {deepEqual( Stem("ausschmückten"), "ausschmuckt");});
test("ausschneiden -> ausschneid", function() {deepEqual( Stem("ausschneiden"), "ausschneid");});
test("ausschnitt -> ausschnitt", function() {deepEqual( Stem("ausschnitt"), "ausschnitt");});
test("ausschnitte -> ausschnitt", function() {deepEqual( Stem("ausschnitte"), "ausschnitt");});
test("ausschuss -> ausschuss", function() {deepEqual( Stem("ausschuss"), "ausschuss");});
test("ausschütten -> ausschutt", function() {deepEqual( Stem("ausschütten"), "ausschutt");});
test("ausschwenkend -> ausschwenk", function() {deepEqual( Stem("ausschwenkend"), "ausschwenk");});
test("aussehe -> ausseh", function() {deepEqual( Stem("aussehe"), "ausseh");});
test("aussehen -> ausseh", function() {deepEqual( Stem("aussehen"), "ausseh");});
test("aussehender -> ausseh", function() {deepEqual( Stem("aussehender"), "ausseh");});
test("aussehens -> ausseh", function() {deepEqual( Stem("aussehens"), "ausseh");});
test("aussen -> auss", function() {deepEqual( Stem("aussen"), "auss");});
test("außen -> auss", function() {deepEqual( Stem("außen"), "auss");});
test("aussenden -> aussend", function() {deepEqual( Stem("aussenden"), "aussend");});
test("aussendung -> aussend", function() {deepEqual( Stem("aussendung"), "aussend");});
test("aussenminister -> aussenminist", function() {deepEqual( Stem("aussenminister"), "aussenminist");});
test("aussenpolitik -> aussenpolit", function() {deepEqual( Stem("aussenpolitik"), "aussenpolit");});
test("aussenwerke -> aussenwerk", function() {deepEqual( Stem("aussenwerke"), "aussenwerk");});
test("außenwerke -> aussenwerk", function() {deepEqual( Stem("außenwerke"), "aussenwerk");});
test("ausser -> auss", function() {deepEqual( Stem("ausser"), "auss");});
test("außer -> auss", function() {deepEqual( Stem("außer"), "auss");});
test("ausserdem -> ausserd", function() {deepEqual( Stem("ausserdem"), "ausserd");});
test("außerdem -> ausserd", function() {deepEqual( Stem("außerdem"), "ausserd");});
test("äussere -> auss", function() {deepEqual( Stem("äussere"), "auss");});
test("äußere -> auss", function() {deepEqual( Stem("äußere"), "auss");});
test("äusserem -> auss", function() {deepEqual( Stem("äusserem"), "auss");});
test("äußerem -> auss", function() {deepEqual( Stem("äußerem"), "auss");});
test("äusseren -> auss", function() {deepEqual( Stem("äusseren"), "auss");});
test("äußeren -> auss", function() {deepEqual( Stem("äußeren"), "auss");});
test("äusserer -> auss", function() {deepEqual( Stem("äusserer"), "auss");});
test("äußerer -> auss", function() {deepEqual( Stem("äußerer"), "auss");});
test("äusseres -> auss", function() {deepEqual( Stem("äusseres"), "auss");});
test("äußeres -> auss", function() {deepEqual( Stem("äußeres"), "auss");});
test("aussergewöhnliche -> aussergewohn", function() {deepEqual( Stem("aussergewöhnliche"), "aussergewohn");});
test("außergewöhnliche -> aussergewohn", function() {deepEqual( Stem("außergewöhnliche"), "aussergewohn");});
test("aussergewöhnliches -> aussergewohn", function() {deepEqual( Stem("aussergewöhnliches"), "aussergewohn");});
test("ausserhalb -> ausserhalb", function() {deepEqual( Stem("ausserhalb"), "ausserhalb");});
test("außerhalb -> ausserhalb", function() {deepEqual( Stem("außerhalb"), "ausserhalb");});
test("äusserlich -> auss", function() {deepEqual( Stem("äusserlich"), "auss");});
test("äußerlich -> auss", function() {deepEqual( Stem("äußerlich"), "auss");});
test("äusserliche -> auss", function() {deepEqual( Stem("äusserliche"), "auss");});
test("äußerliche -> auss", function() {deepEqual( Stem("äußerliche"), "auss");});
test("äusserlichen -> auss", function() {deepEqual( Stem("äusserlichen"), "auss");});
test("äußerlichen -> auss", function() {deepEqual( Stem("äußerlichen"), "auss");});
test("äusserlicher -> auss", function() {deepEqual( Stem("äusserlicher"), "auss");});
test("äußerlicher -> auss", function() {deepEqual( Stem("äußerlicher"), "auss");});
test("äusserliches -> auss", function() {deepEqual( Stem("äusserliches"), "auss");});
test("äußerliches -> auss", function() {deepEqual( Stem("äußerliches"), "auss");});
test("äusserlichkeiten -> ausser", function() {deepEqual( Stem("äusserlichkeiten"), "ausser");});
test("äußerlichkeiten -> ausser", function() {deepEqual( Stem("äußerlichkeiten"), "ausser");});
test("äusserlichsten -> auss", function() {deepEqual( Stem("äusserlichsten"), "auss");});
test("äußerlichsten -> auss", function() {deepEqual( Stem("äußerlichsten"), "auss");});
test("äussern -> auss", function() {deepEqual( Stem("äussern"), "auss");});
test("äußern -> auss", function() {deepEqual( Stem("äußern"), "auss");});
test("äussernden -> aussernd", function() {deepEqual( Stem("äussernden"), "aussernd");});
test("ausserordentlich -> ausserordent", function() {deepEqual( Stem("ausserordentlich"), "ausserordent");});
test("außerordentlich -> ausserordent", function() {deepEqual( Stem("außerordentlich"), "ausserordent");});
test("ausserordentliche -> ausserordent", function() {deepEqual( Stem("ausserordentliche"), "ausserordent");});
test("ausserordentlichen -> ausserordent", function() {deepEqual( Stem("ausserordentlichen"), "ausserordent");});
test("außerordentlichen -> ausserordent", function() {deepEqual( Stem("außerordentlichen"), "ausserordent");});
test("äusserst -> ausserst", function() {deepEqual( Stem("äusserst"), "ausserst");});
test("äußerst -> ausserst", function() {deepEqual( Stem("äußerst"), "ausserst");});
test("äusserste -> ausserst", function() {deepEqual( Stem("äusserste"), "ausserst");});
test("äußerste -> ausserst", function() {deepEqual( Stem("äußerste"), "ausserst");});
test("äussersten -> ausserst", function() {deepEqual( Stem("äussersten"), "ausserst");});
test("äußersten -> ausserst", function() {deepEqual( Stem("äußersten"), "ausserst");});
test("äusserster -> ausserst", function() {deepEqual( Stem("äusserster"), "ausserst");});
test("äußerster -> ausserst", function() {deepEqual( Stem("äußerster"), "ausserst");});
test("äusserstes -> ausserst", function() {deepEqual( Stem("äusserstes"), "ausserst");});
test("äußerstes -> ausserst", function() {deepEqual( Stem("äußerstes"), "ausserst");});
test("äussert -> aussert", function() {deepEqual( Stem("äussert"), "aussert");});
test("äußert -> aussert", function() {deepEqual( Stem("äußert"), "aussert");});
test("äusserung -> ausser", function() {deepEqual( Stem("äusserung"), "ausser");});
test("äußerung -> ausser", function() {deepEqual( Stem("äußerung"), "ausser");});
test("äusserungen -> ausser", function() {deepEqual( Stem("äusserungen"), "ausser");});
test("äußerungen -> ausser", function() {deepEqual( Stem("äußerungen"), "ausser");});
test("aussetzen -> aussetz", function() {deepEqual( Stem("aussetzen"), "aussetz");});
test("aussetzend -> aussetz", function() {deepEqual( Stem("aussetzend"), "aussetz");});
test("aussetzte -> aussetzt", function() {deepEqual( Stem("aussetzte"), "aussetzt");});
test("aussetzten -> aussetzt", function() {deepEqual( Stem("aussetzten"), "aussetzt");});
test("aussi -> aussi", function() {deepEqual( Stem("aussi"), "aussi");});
test("aussicht -> aussicht", function() {deepEqual( Stem("aussicht"), "aussicht");});
test("aussichten -> aussicht", function() {deepEqual( Stem("aussichten"), "aussicht");});
test("aussichtslos -> aussichtslos", function() {deepEqual( Stem("aussichtslos"), "aussichtslos");});
test("aussichtspunkte -> aussichtspunkt", function() {deepEqual( Stem("aussichtspunkte"), "aussichtspunkt");});
test("aussiehst -> aussieh", function() {deepEqual( Stem("aussiehst"), "aussieh");});
test("aussieht -> aussieht", function() {deepEqual( Stem("aussieht"), "aussieht");});
test("aussigraspelt -> aussigraspelt", function() {deepEqual( Stem("aussigraspelt"), "aussigraspelt");});
test("aussigsprungen -> aussigspr", function() {deepEqual( Stem("aussigsprungen"), "aussigspr");});
test("aussiheiret -> aussiheiret", function() {deepEqual( Stem("aussiheiret"), "aussiheiret");});
test("aussilassen -> aussilass", function() {deepEqual( Stem("aussilassen"), "aussilass");});
test("aussinnen -> aussinn", function() {deepEqual( Stem("aussinnen"), "aussinn");});
test("aussischickt -> aussischickt", function() {deepEqual( Stem("aussischickt"), "aussischickt");});
test("aussizahlt -> aussizahlt", function() {deepEqual( Stem("aussizahlt"), "aussizahlt");});
test("ausspähenden -> ausspah", function() {deepEqual( Stem("ausspähenden"), "ausspah");});
test("ausspannen -> ausspann", function() {deepEqual( Stem("ausspannen"), "ausspann");});
test("ausspannt -> ausspannt", function() {deepEqual( Stem("ausspannt"), "ausspannt");});
test("ausspannung -> ausspann", function() {deepEqual( Stem("ausspannung"), "ausspann");});
test("ausspielen -> ausspiel", function() {deepEqual( Stem("ausspielen"), "ausspiel");});
test("aussprach -> aussprach", function() {deepEqual( Stem("aussprach"), "aussprach");});
test("aussprache -> aussprach", function() {deepEqual( Stem("aussprache"), "aussprach");});
test("aussprachen -> aussprach", function() {deepEqual( Stem("aussprachen"), "aussprach");});
test("aussprechen -> aussprech", function() {deepEqual( Stem("aussprechen"), "aussprech");});
test("ausspricht -> ausspricht", function() {deepEqual( Stem("ausspricht"), "ausspricht");});
test("ausspruch -> ausspruch", function() {deepEqual( Stem("ausspruch"), "ausspruch");});
test("ausspruche -> ausspruch", function() {deepEqual( Stem("ausspruche"), "ausspruch");});
test("aussprüchen -> ausspruch", function() {deepEqual( Stem("aussprüchen"), "ausspruch");});
test("ausspuckend -> ausspuck", function() {deepEqual( Stem("ausspuckend"), "ausspuck");});
test("ausspüren -> ausspur", function() {deepEqual( Stem("ausspüren"), "ausspur");});
test("ausstand -> ausstand", function() {deepEqual( Stem("ausstand"), "ausstand");});
test("ausstarb -> ausstarb", function() {deepEqual( Stem("ausstarb"), "ausstarb");});
test("ausstattung -> ausstatt", function() {deepEqual( Stem("ausstattung"), "ausstatt");});
test("ausstehen -> aussteh", function() {deepEqual( Stem("ausstehen"), "aussteh");});
test("ausstehendes -> aussteh", function() {deepEqual( Stem("ausstehendes"), "aussteh");});
test("aussteigen -> aussteig", function() {deepEqual( Stem("aussteigen"), "aussteig");});
test("ausstellung -> ausstell", function() {deepEqual( Stem("ausstellung"), "ausstell");});
test("aussteuer -> aussteu", function() {deepEqual( Stem("aussteuer"), "aussteu");});
test("ausstieg -> ausstieg", function() {deepEqual( Stem("ausstieg"), "ausstieg");});
test("ausstiess -> ausstiess", function() {deepEqual( Stem("ausstiess"), "ausstiess");});
test("ausstieß -> ausstiess", function() {deepEqual( Stem("ausstieß"), "ausstiess");});
test("ausstossen -> ausstoss", function() {deepEqual( Stem("ausstossen"), "ausstoss");});
test("ausstoßen -> ausstoss", function() {deepEqual( Stem("ausstoßen"), "ausstoss");});
test("ausstrahlen -> ausstrahl", function() {deepEqual( Stem("ausstrahlen"), "ausstrahl");});
test("ausstrahlt -> ausstrahlt", function() {deepEqual( Stem("ausstrahlt"), "ausstrahlt");});
test("ausstrahlung -> ausstrahl", function() {deepEqual( Stem("ausstrahlung"), "ausstrahl");});
test("ausstrecke -> ausstreck", function() {deepEqual( Stem("ausstrecke"), "ausstreck");});
test("ausstrecken -> ausstreck", function() {deepEqual( Stem("ausstrecken"), "ausstreck");});
test("ausstreckt -> ausstreckt", function() {deepEqual( Stem("ausstreckt"), "ausstreckt");});
test("ausstreckte -> ausstreckt", function() {deepEqual( Stem("ausstreckte"), "ausstreckt");});
test("ausstreckung -> ausstreck", function() {deepEqual( Stem("ausstreckung"), "ausstreck");});
test("ausströmen -> ausstrom", function() {deepEqual( Stem("ausströmen"), "ausstrom");});
test("aussuchst -> aussuch", function() {deepEqual( Stem("aussuchst"), "aussuch");});
test("austausch -> austausch", function() {deepEqual( Stem("austausch"), "austausch");});
test("austauschen -> austausch", function() {deepEqual( Stem("austauschen"), "austausch");});
test("austauschte -> austauscht", function() {deepEqual( Stem("austauschte"), "austauscht");});
test("austeilende -> austeil", function() {deepEqual( Stem("austeilende"), "austeil");});
test("austellers -> austell", function() {deepEqual( Stem("austellers"), "austell");});
test("austern -> aust", function() {deepEqual( Stem("austern"), "aust");});
test("austilgten -> austilgt", function() {deepEqual( Stem("austilgten"), "austilgt");});
test("australien -> australi", function() {deepEqual( Stem("australien"), "australi");});
test("austraten -> austrat", function() {deepEqual( Stem("austraten"), "austrat");});
test("austreibe -> austreib", function() {deepEqual( Stem("austreibe"), "austreib");});
test("austrinken -> austrink", function() {deepEqual( Stem("austrinken"), "austrink");});
test("austritte -> austritt", function() {deepEqual( Stem("austritte"), "austritt");});
test("austrittstrenddie -> austrittstrenddi", function() {deepEqual( Stem("austrittstrenddie"), "austrittstrenddi");});
test("austrittswelle -> austrittswell", function() {deepEqual( Stem("austrittswelle"), "austrittswell");});
test("austrocknen -> austrockn", function() {deepEqual( Stem("austrocknen"), "austrockn");});
test("austrocknet -> austrocknet", function() {deepEqual( Stem("austrocknet"), "austrocknet");});
test("austrocknete -> austrocknet", function() {deepEqual( Stem("austrocknete"), "austrocknet");});
test("ausübe -> ausub", function() {deepEqual( Stem("ausübe"), "ausub");});
test("ausüben -> ausub", function() {deepEqual( Stem("ausüben"), "ausub");});
test("ausübt -> ausubt", function() {deepEqual( Stem("ausübt"), "ausubt");});
test("ausübung -> ausub", function() {deepEqual( Stem("ausübung"), "ausub");});
test("auswahl -> auswahl", function() {deepEqual( Stem("auswahl"), "auswahl");});
test("auswandern -> auswand", function() {deepEqual( Stem("auswandern"), "auswand");});
test("auswanderung -> auswander", function() {deepEqual( Stem("auswanderung"), "auswander");});
test("auswanderungsziel -> auswanderungsziel", function() {deepEqual( Stem("auswanderungsziel"), "auswanderungsziel");});
test("auswarf -> auswarf", function() {deepEqual( Stem("auswarf"), "auswarf");});
test("auswärtige -> auswart", function() {deepEqual( Stem("auswärtige"), "auswart");});
test("auswärtigem -> auswart", function() {deepEqual( Stem("auswärtigem"), "auswart");});
test("auswärtigen -> auswart", function() {deepEqual( Stem("auswärtigen"), "auswart");});
test("auswärts -> auswart", function() {deepEqual( Stem("auswärts"), "auswart");});
test("ausweg -> ausweg", function() {deepEqual( Stem("ausweg"), "ausweg");});
test("auswege -> ausweg", function() {deepEqual( Stem("auswege"), "ausweg");});
test("ausweis -> ausweis", function() {deepEqual( Stem("ausweis"), "ausweis");});
test("ausweisen -> ausweis", function() {deepEqual( Stem("ausweisen"), "ausweis");});
test("ausweiset -> ausweiset", function() {deepEqual( Stem("ausweiset"), "ausweiset");});
test("ausweisst -> ausweisst", function() {deepEqual( Stem("ausweisst"), "ausweisst");});
test("auswendig -> auswend", function() {deepEqual( Stem("auswendig"), "auswend");});
test("auswendige -> auswend", function() {deepEqual( Stem("auswendige"), "auswend");});
test("auswendigere -> auswend", function() {deepEqual( Stem("auswendigere"), "auswend");});
test("auswendigeren -> auswend", function() {deepEqual( Stem("auswendigeren"), "auswend");});
test("auswendigeres -> auswend", function() {deepEqual( Stem("auswendigeres"), "auswend");});
test("auswendiges -> auswend", function() {deepEqual( Stem("auswendiges"), "auswend");});
test("auswendiglernen -> auswendiglern", function() {deepEqual( Stem("auswendiglernen"), "auswendiglern");});
test("auswendigsten -> auswend", function() {deepEqual( Stem("auswendigsten"), "auswend");});
test("auswerfen -> auswerf", function() {deepEqual( Stem("auswerfen"), "auswerf");});
test("auswichen -> auswich", function() {deepEqual( Stem("auswichen"), "auswich");});
test("auswirft -> auswirft", function() {deepEqual( Stem("auswirft"), "auswirft");});
test("auswüchse -> auswuchs", function() {deepEqual( Stem("auswüchse"), "auswuchs");});
test("auswuchsen -> auswuchs", function() {deepEqual( Stem("auswuchsen"), "auswuchs");});
test("auszahlen -> auszahl", function() {deepEqual( Stem("auszahlen"), "auszahl");});
test("auszahlte -> auszahlt", function() {deepEqual( Stem("auszahlte"), "auszahlt");});
test("auszählung -> auszahl", function() {deepEqual( Stem("auszählung"), "auszahl");});
test("auszehrung -> auszehr", function() {deepEqual( Stem("auszehrung"), "auszehr");});
test("auszeichnen -> auszeichn", function() {deepEqual( Stem("auszeichnen"), "auszeichn");});
test("auszeichnender -> auszeichn", function() {deepEqual( Stem("auszeichnender"), "auszeichn");});
test("auszeichnet -> auszeichnet", function() {deepEqual( Stem("auszeichnet"), "auszeichnet");});
test("auszeichnung -> auszeichn", function() {deepEqual( Stem("auszeichnung"), "auszeichn");});
test("ausziehen -> auszieh", function() {deepEqual( Stem("ausziehen"), "auszieh");});
test("ausziehenden -> auszieh", function() {deepEqual( Stem("ausziehenden"), "auszieh");});
test("auszieht -> auszieht", function() {deepEqual( Stem("auszieht"), "auszieht");});
test("ausziehtisch -> auszieht", function() {deepEqual( Stem("ausziehtisch"), "auszieht");});
test("auszog -> auszog", function() {deepEqual( Stem("auszog"), "auszog");});
test("auszogen -> auszog", function() {deepEqual( Stem("auszogen"), "auszog");});
test("auszuarbeiten -> auszuarbeit", function() {deepEqual( Stem("auszuarbeiten"), "auszuarbeit");});
test("auszubauen -> auszubau", function() {deepEqual( Stem("auszubauen"), "auszubau");});
test("auszubilden -> auszubild", function() {deepEqual( Stem("auszubilden"), "auszubild");});
test("auszudehnen -> auszudehn", function() {deepEqual( Stem("auszudehnen"), "auszudehn");});
test("auszudrücken -> auszudruck", function() {deepEqual( Stem("auszudrücken"), "auszudruck");});
test("auszufahren -> auszufahr", function() {deepEqual( Stem("auszufahren"), "auszufahr");});
test("auszuführen -> auszufuhr", function() {deepEqual( Stem("auszuführen"), "auszufuhr");});
test("auszufüllen -> auszufull", function() {deepEqual( Stem("auszufüllen"), "auszufull");});
test("auszug -> auszug", function() {deepEqual( Stem("auszug"), "auszug");});
test("auszüge -> auszug", function() {deepEqual( Stem("auszüge"), "auszug");});
test("auszugeben -> auszugeb", function() {deepEqual( Stem("auszugeben"), "auszugeb");});
test("auszugehen -> auszugeh", function() {deepEqual( Stem("auszugehen"), "auszugeh");});
test("auszügen -> auszug", function() {deepEqual( Stem("auszügen"), "auszug");});
test("auszuhalten -> auszuhalt", function() {deepEqual( Stem("auszuhalten"), "auszuhalt");});
test("auszuklagen -> auszuklag", function() {deepEqual( Stem("auszuklagen"), "auszuklag");});
test("auszukneifen -> auszukneif", function() {deepEqual( Stem("auszukneifen"), "auszukneif");});
test("auszukochen -> auszukoch", function() {deepEqual( Stem("auszukochen"), "auszukoch");});
test("auszukosten -> auszukost", function() {deepEqual( Stem("auszukosten"), "auszukost");});
test("auszulachen -> auszulach", function() {deepEqual( Stem("auszulachen"), "auszulach");});
test("auszulassen -> auszulass", function() {deepEqual( Stem("auszulassen"), "auszulass");});
test("auszulöschen -> auszulosch", function() {deepEqual( Stem("auszulöschen"), "auszulosch");});
test("auszumachen -> auszumach", function() {deepEqual( Stem("auszumachen"), "auszumach");});
test("auszunutzen -> auszunutz", function() {deepEqual( Stem("auszunutzen"), "auszunutz");});
test("auszupacken -> auszupack", function() {deepEqual( Stem("auszupacken"), "auszupack");});
test("auszuputzen -> auszuputz", function() {deepEqual( Stem("auszuputzen"), "auszuputz");});
test("auszureissen -> auszureiss", function() {deepEqual( Stem("auszureissen"), "auszureiss");});
test("auszureuten -> auszureut", function() {deepEqual( Stem("auszureuten"), "auszureut");});
test("auszurichten -> auszuricht", function() {deepEqual( Stem("auszurichten"), "auszuricht");});
test("auszurotten -> auszurott", function() {deepEqual( Stem("auszurotten"), "auszurott");});
test("auszurücken -> auszuruck", function() {deepEqual( Stem("auszurücken"), "auszuruck");});
test("auszurufen -> auszuruf", function() {deepEqual( Stem("auszurufen"), "auszuruf");});
test("auszuruhen -> auszuruh", function() {deepEqual( Stem("auszuruhen"), "auszuruh");});
test("auszurüsten -> auszurust", function() {deepEqual( Stem("auszurüsten"), "auszurust");});
test("auszuschlagen -> auszuschlag", function() {deepEqual( Stem("auszuschlagen"), "auszuschlag");});
test("auszuschliessen -> auszuschliess", function() {deepEqual( Stem("auszuschliessen"), "auszuschliess");});
test("auszuschmücken -> auszuschmuck", function() {deepEqual( Stem("auszuschmücken"), "auszuschmuck");});
test("auszuschreiten -> auszuschreit", function() {deepEqual( Stem("auszuschreiten"), "auszuschreit");});
test("auszusehen -> auszuseh", function() {deepEqual( Stem("auszusehen"), "auszuseh");});
test("auszusetzen -> auszusetz", function() {deepEqual( Stem("auszusetzen"), "auszusetz");});
test("auszusinnen -> auszusinn", function() {deepEqual( Stem("auszusinnen"), "auszusinn");});
test("auszuspannen -> auszuspann", function() {deepEqual( Stem("auszuspannen"), "auszuspann");});
test("auszusperren -> auszusperr", function() {deepEqual( Stem("auszusperren"), "auszusperr");});
test("auszusprechen -> auszusprech", function() {deepEqual( Stem("auszusprechen"), "auszusprech");});
test("auszustaffieren -> auszustaffi", function() {deepEqual( Stem("auszustaffieren"), "auszustaffi");});
test("auszustossen -> auszustoss", function() {deepEqual( Stem("auszustossen"), "auszustoss");});
test("auszustrecken -> auszustreck", function() {deepEqual( Stem("auszustrecken"), "auszustreck");});
test("auszuteilen -> auszuteil", function() {deepEqual( Stem("auszuteilen"), "auszuteil");});
test("auszuweichen -> auszuweich", function() {deepEqual( Stem("auszuweichen"), "auszuweich");});
test("auszuziehen -> auszuzieh", function() {deepEqual( Stem("auszuziehen"), "auszuzieh");});
test("auto -> auto", function() {deepEqual( Stem("auto"), "auto");});
test("autokratischen -> autokrat", function() {deepEqual( Stem("autokratischen"), "autokrat");});
test("automatisch -> automat", function() {deepEqual( Stem("automatisch"), "automat");});
test("automobil -> automobil", function() {deepEqual( Stem("automobil"), "automobil");});
test("autonomie -> autonomi", function() {deepEqual( Stem("autonomie"), "autonomi");});
test("autor -> autor", function() {deepEqual( Stem("autor"), "autor");});
test("autorität -> autoritat", function() {deepEqual( Stem("autorität"), "autoritat");});
test("autos -> autos", function() {deepEqual( Stem("autos"), "autos");});
test("autoverkäufen -> autoverkauf", function() {deepEqual( Stem("autoverkäufen"), "autoverkauf");});
test("available -> availabl", function() {deepEqual( Stem("available"), "availabl");});
test("avancierte -> avanciert", function() {deepEqual( Stem("avancierte"), "avanciert");});
test("avanti -> avanti", function() {deepEqual( Stem("avanti"), "avanti");});
test("aven -> aven", function() {deepEqual( Stem("aven"), "aven");});
test("aversamur -> aversamur", function() {deepEqual( Stem("aversamur"), "aversamur");});
test("axt -> axt", function() {deepEqual( Stem("axt"), "axt");});
test("äxten -> axt", function() {deepEqual( Stem("äxten"), "axt");});
test("aydin -> aydin", function() {deepEqual( Stem("aydin"), "aydin");});
test("b -> b", function() {deepEqual( Stem("b"), "b");});
test("baam -> baam", function() {deepEqual( Stem("baam"), "baam");});
test("baaselbieterdütsch -> baaselbieterdutsch", function() {deepEqual( Stem("baaselbieterdütsch"), "baaselbieterdutsch");});
test("babel -> babel", function() {deepEqual( Stem("babel"), "babel");});
test("babels -> babel", function() {deepEqual( Stem("babels"), "babel");});
test("baby -> baby", function() {deepEqual( Stem("baby"), "baby");});
test("babylon -> babylon", function() {deepEqual( Stem("babylon"), "babylon");});
test("babylonische -> babylon", function() {deepEqual( Stem("babylonische"), "babylon");});
test("bacchanal -> bacchanal", function() {deepEqual( Stem("bacchanal"), "bacchanal");});
test("bach -> bach", function() {deepEqual( Stem("bach"), "bach");});
test("bache -> bach", function() {deepEqual( Stem("bache"), "bach");});
test("bäche -> bach", function() {deepEqual( Stem("bäche"), "bach");});
test("bächen -> bach", function() {deepEqual( Stem("bächen"), "bach");});
test("baches -> bach", function() {deepEqual( Stem("baches"), "bach");});
test("bachforellen -> bachforell", function() {deepEqual( Stem("bachforellen"), "bachforell");});
test("bächlein -> bachlein", function() {deepEqual( Stem("bächlein"), "bachlein");});
test("bachs -> bach", function() {deepEqual( Stem("bachs"), "bach");});
test("bachtal -> bachtal", function() {deepEqual( Stem("bachtal"), "bachtal");});
test("bachweiden -> bachweid", function() {deepEqual( Stem("bachweiden"), "bachweid");});
test("bachwellen -> bachwell", function() {deepEqual( Stem("bachwellen"), "bachwell");});
test("backbirnen -> backbirn", function() {deepEqual( Stem("backbirnen"), "backbirn");});
test("bäckchen -> backch", function() {deepEqual( Stem("bäckchen"), "backch");});
test("backe -> back", function() {deepEqual( Stem("backe"), "back");});
test("backen -> back", function() {deepEqual( Stem("backen"), "back");});
test("backenbärtchen -> backenbartch", function() {deepEqual( Stem("backenbärtchen"), "backenbartch");});
test("bäcker -> back", function() {deepEqual( Stem("bäcker"), "back");});
test("backofen -> backof", function() {deepEqual( Stem("backofen"), "backof");});
test("backsteinplatte -> backsteinplatt", function() {deepEqual( Stem("backsteinplatte"), "backsteinplatt");});
test("backtröge -> backtrog", function() {deepEqual( Stem("backtröge"), "backtrog");});
test("backwerk -> backwerk", function() {deepEqual( Stem("backwerk"), "backwerk");});
test("baco -> baco", function() {deepEqual( Stem("baco"), "baco");});
test("bad -> bad", function() {deepEqual( Stem("bad"), "bad");});
test("bademantels -> bademantel", function() {deepEqual( Stem("bademantels"), "bademantel");});
test("baden -> bad", function() {deepEqual( Stem("baden"), "bad");});
test("badeplatz -> badeplatz", function() {deepEqual( Stem("badeplatz"), "badeplatz");});
test("badepüppchen -> badepuppch", function() {deepEqual( Stem("badepüppchen"), "badepuppch");});
test("badewanne -> badewann", function() {deepEqual( Stem("badewanne"), "badewann");});
test("badische -> badisch", function() {deepEqual( Stem("badische"), "badisch");});
test("bagatellwechseln -> bagatellwechseln", function() {deepEqual( Stem("bagatellwechseln"), "bagatellwechseln");});
test("bagels -> bagel", function() {deepEqual( Stem("bagels"), "bagel");});
test("bah -> bah", function() {deepEqual( Stem("bah"), "bah");});
test("bahn -> bahn", function() {deepEqual( Stem("bahn"), "bahn");});
test("bahnbrechenden -> bahnbrech", function() {deepEqual( Stem("bahnbrechenden"), "bahnbrech");});
test("bahnen -> bahn", function() {deepEqual( Stem("bahnen"), "bahn");});
test("bahnhof -> bahnhof", function() {deepEqual( Stem("bahnhof"), "bahnhof");});
test("bahnhofes -> bahnhof", function() {deepEqual( Stem("bahnhofes"), "bahnhof");});
test("bahnte -> bahnt", function() {deepEqual( Stem("bahnte"), "bahnt");});
test("bahrtuch -> bahrtuch", function() {deepEqual( Stem("bahrtuch"), "bahrtuch");});
test("bajonett -> bajonett", function() {deepEqual( Stem("bajonett"), "bajonett");});
test("balaenae -> balaena", function() {deepEqual( Stem("balaenae"), "balaena");});
test("balance -> balanc", function() {deepEqual( Stem("balance"), "balanc");});
test("bald -> bald", function() {deepEqual( Stem("bald"), "bald");});
test("baldige -> baldig", function() {deepEqual( Stem("baldige"), "baldig");});
test("balester -> bal", function() {deepEqual( Stem("balester"), "bal");});
test("balken -> balk", function() {deepEqual( Stem("balken"), "balk");});
test("balkone -> balkon", function() {deepEqual( Stem("balkone"), "balkon");});
test("balkonen -> balkon", function() {deepEqual( Stem("balkonen"), "balkon");});
test("ball -> ball", function() {deepEqual( Stem("ball"), "ball");});
test("ballade -> ballad", function() {deepEqual( Stem("ballade"), "ballad");});
test("balles -> ball", function() {deepEqual( Stem("balles"), "ball");});
test("balsam -> balsam", function() {deepEqual( Stem("balsam"), "balsam");});
test("balsamfläschchen -> balsamflaschch", function() {deepEqual( Stem("balsamfläschchen"), "balsamflaschch");});
test("band -> band", function() {deepEqual( Stem("band"), "band");});
test("bandapparat -> bandapparat", function() {deepEqual( Stem("bandapparat"), "bandapparat");});
test("bändchen -> bandch", function() {deepEqual( Stem("bändchen"), "bandch");});
test("bande -> band", function() {deepEqual( Stem("bande"), "band");});
test("bände -> band", function() {deepEqual( Stem("bände"), "band");});
test("bandelier -> bandeli", function() {deepEqual( Stem("bandelier"), "bandeli");});
test("bandeliere -> bandeli", function() {deepEqual( Stem("bandeliere"), "bandeli");});
test("banden -> band", function() {deepEqual( Stem("banden"), "band");});
test("bänder -> band", function() {deepEqual( Stem("bänder"), "band");});
test("bändern -> band", function() {deepEqual( Stem("bändern"), "band");});
test("bandgerät -> bandgerat", function() {deepEqual( Stem("bandgerät"), "bandgerat");});
test("bändigen -> bandig", function() {deepEqual( Stem("bändigen"), "bandig");});
test("bändigung -> bandig", function() {deepEqual( Stem("bändigung"), "bandig");});
test("banditenähnlichen -> banditenahn", function() {deepEqual( Stem("banditenähnlichen"), "banditenahn");});
test("bandschnippel -> bandschnippel", function() {deepEqual( Stem("bandschnippel"), "bandschnippel");});
test("bang -> bang", function() {deepEqual( Stem("bang"), "bang");});
test("bange -> bang", function() {deepEqual( Stem("bange"), "bang");});
test("bangen -> bang", function() {deepEqual( Stem("bangen"), "bang");});
test("banger -> bang", function() {deepEqual( Stem("banger"), "bang");});
test("bangigkeit -> bangig", function() {deepEqual( Stem("bangigkeit"), "bangig");});
test("bänglich -> banglich", function() {deepEqual( Stem("bänglich"), "banglich");});
test("bank -> bank", function() {deepEqual( Stem("bank"), "bank");});
test("bankbeamte -> bankbeamt", function() {deepEqual( Stem("bankbeamte"), "bankbeamt");});
test("bankbeamten -> bankbeamt", function() {deepEqual( Stem("bankbeamten"), "bankbeamt");});
test("bankel -> bankel", function() {deepEqual( Stem("bankel"), "bankel");});
test("banken -> bank", function() {deepEqual( Stem("banken"), "bank");});
test("bänken -> bank", function() {deepEqual( Stem("bänken"), "bank");});
test("bankett -> bankett", function() {deepEqual( Stem("bankett"), "bankett");});
test("bankgeschäft -> bankgeschaft", function() {deepEqual( Stem("bankgeschäft"), "bankgeschaft");});
test("bankhause -> bankhaus", function() {deepEqual( Stem("bankhause"), "bankhaus");});
test("bankier -> banki", function() {deepEqual( Stem("bankier"), "banki");});
test("bankiere -> banki", function() {deepEqual( Stem("bankiere"), "banki");});
test("bankiers -> banki", function() {deepEqual( Stem("bankiers"), "banki");});
test("bankiervereinigung -> bankierverein", function() {deepEqual( Stem("bankiervereinigung"), "bankierverein");});
test("bankkonto -> bankkonto", function() {deepEqual( Stem("bankkonto"), "bankkonto");});
test("bankl -> bankl", function() {deepEqual( Stem("bankl"), "bankl");});
test("bänklein -> banklein", function() {deepEqual( Stem("bänklein"), "banklein");});
test("banknote -> banknot", function() {deepEqual( Stem("banknote"), "banknot");});
test("bankratib -> bankratib", function() {deepEqual( Stem("bankratib"), "bankratib");});
test("bankraub -> bankraub", function() {deepEqual( Stem("bankraub"), "bankraub");});
test("bankräuber -> bankraub", function() {deepEqual( Stem("bankräuber"), "bankraub");});
test("bankräuberin -> bankrauberin", function() {deepEqual( Stem("bankräuberin"), "bankrauberin");});
test("banküberfall -> bankuberfall", function() {deepEqual( Stem("banküberfall"), "bankuberfall");});
test("banküberfällen -> bankuberfall", function() {deepEqual( Stem("banküberfällen"), "bankuberfall");});
test("bann -> bann", function() {deepEqual( Stem("bann"), "bann");});
test("bar -> bar", function() {deepEqual( Stem("bar"), "bar");});
test("bär -> bar", function() {deepEqual( Stem("bär"), "bar");});
test("barauslage -> barauslag", function() {deepEqual( Stem("barauslage"), "barauslag");});
test("barbaren -> barbar", function() {deepEqual( Stem("barbaren"), "barbar");});
test("barbarischen -> barbar", function() {deepEqual( Stem("barbarischen"), "barbar");});
test("barbiergesellen -> barbiergesell", function() {deepEqual( Stem("barbiergesellen"), "barbiergesell");});
test("bare -> bar", function() {deepEqual( Stem("bare"), "bar");});
test("baren -> bar", function() {deepEqual( Stem("baren"), "bar");});
test("bären -> bar", function() {deepEqual( Stem("bären"), "bar");});
test("bärenfell -> barenfell", function() {deepEqual( Stem("bärenfell"), "barenfell");});
test("bärenschinken -> barenschink", function() {deepEqual( Stem("bärenschinken"), "barenschink");});
test("bärenstall -> barenstall", function() {deepEqual( Stem("bärenstall"), "barenstall");});
test("bärentanz -> barentanz", function() {deepEqual( Stem("bärentanz"), "barentanz");});
test("bares -> bar", function() {deepEqual( Stem("bares"), "bar");});
test("barfuss -> barfuss", function() {deepEqual( Stem("barfuss"), "barfuss");});
test("barfuß -> barfuss", function() {deepEqual( Stem("barfuß"), "barfuss");});
test("barg -> barg", function() {deepEqual( Stem("barg"), "barg");});
test("barhäuptig -> barhaupt", function() {deepEqual( Stem("barhäuptig"), "barhaupt");});
test("barmherzig -> barmherz", function() {deepEqual( Stem("barmherzig"), "barmherz");});
test("barmherziger -> barmherz", function() {deepEqual( Stem("barmherziger"), "barmherz");});
test("barmherzigkeit -> barmherz", function() {deepEqual( Stem("barmherzigkeit"), "barmherz");});
test("barmherzigkeiten -> barmherz", function() {deepEqual( Stem("barmherzigkeiten"), "barmherz");});
test("bars -> bar", function() {deepEqual( Stem("bars"), "bar");});
test("barsängerin -> barsangerin", function() {deepEqual( Stem("barsängerin"), "barsangerin");});
test("barsch -> barsch", function() {deepEqual( Stem("barsch"), "barsch");});
test("barschaft -> barschaft", function() {deepEqual( Stem("barschaft"), "barschaft");});
test("barsche -> barsch", function() {deepEqual( Stem("barsche"), "barsch");});
test("barsches -> barsch", function() {deepEqual( Stem("barsches"), "barsch");});
test("bart -> bart", function() {deepEqual( Stem("bart"), "bart");});
test("barte -> bart", function() {deepEqual( Stem("barte"), "bart");});
test("bartes -> bart", function() {deepEqual( Stem("bartes"), "bart");});
test("barthaare -> barthaar", function() {deepEqual( Stem("barthaare"), "barthaar");});
test("barthel -> barthel", function() {deepEqual( Stem("barthel"), "barthel");});
test("bartholomaios -> bartholomaios", function() {deepEqual( Stem("bartholomaios"), "bartholomaios");});
test("bartstrahn -> bartstrahn", function() {deepEqual( Stem("bartstrahn"), "bartstrahn");});
test("bartwichse -> bartwichs", function() {deepEqual( Stem("bartwichse"), "bartwichs");});
test("baschans -> baschan", function() {deepEqual( Stem("baschans"), "baschan");});
test("bäschen -> basch", function() {deepEqual( Stem("bäschen"), "basch");});
test("base -> bas", function() {deepEqual( Stem("base"), "bas");});
test("basel -> basel", function() {deepEqual( Stem("basel"), "basel");});
test("baselder -> baseld", function() {deepEqual( Stem("baselder"), "baseld");});
test("baseler -> basel", function() {deepEqual( Stem("baseler"), "basel");});
test("baselland -> baselland", function() {deepEqual( Stem("baselland"), "baselland");});
test("basellandschäftler -> basellandschaftl", function() {deepEqual( Stem("basellandschäftler"), "basellandschaftl");});
test("basilisk -> basilisk", function() {deepEqual( Stem("basilisk"), "basilisk");});
test("basilisken -> basilisk", function() {deepEqual( Stem("basilisken"), "basilisk");});
test("basiliskeneier -> basiliskenei", function() {deepEqual( Stem("basiliskeneier"), "basiliskenei");});
test("basis -> basis", function() {deepEqual( Stem("basis"), "basis");});
test("basler -> basl", function() {deepEqual( Stem("basler"), "basl");});
test("bass -> bass", function() {deepEqual( Stem("bass"), "bass");});
test("bassewitz -> bassewitz", function() {deepEqual( Stem("bassewitz"), "bassewitz");});
test("bassgeige -> bassgeig", function() {deepEqual( Stem("bassgeige"), "bassgeig");});
test("bassgeigenkonzert -> bassgeigenkonzert", function() {deepEqual( Stem("bassgeigenkonzert"), "bassgeigenkonzert");});
test("bassgeiger -> bassgeig", function() {deepEqual( Stem("bassgeiger"), "bassgeig");});
test("bassstimme -> bassstimm", function() {deepEqual( Stem("bassstimme"), "bassstimm");});
test("baßstimme -> bassstimm", function() {deepEqual( Stem("baßstimme"), "bassstimm");});
test("bast -> bast", function() {deepEqual( Stem("bast"), "bast");});
test("basteln -> basteln", function() {deepEqual( Stem("basteln"), "basteln");});
test("bastelten -> bastelt", function() {deepEqual( Stem("bastelten"), "bastelt");});
test("basthaar -> basthaar", function() {deepEqual( Stem("basthaar"), "basthaar");});
test("bat -> bat", function() {deepEqual( Stem("bat"), "bat");});
test("baten -> bat", function() {deepEqual( Stem("baten"), "bat");});
test("bath -> bath", function() {deepEqual( Stem("bath"), "bath");});
test("batley -> batley", function() {deepEqual( Stem("batley"), "batley");});
test("batterie -> batteri", function() {deepEqual( Stem("batterie"), "batteri");});
test("batzen -> batz", function() {deepEqual( Stem("batzen"), "batz");});
test("bau -> bau", function() {deepEqual( Stem("bau"), "bau");});
test("bauamtsleiter -> bauamtsleit", function() {deepEqual( Stem("bauamtsleiter"), "bauamtsleit");});
test("bauart -> bauart", function() {deepEqual( Stem("bauart"), "bauart");});
test("bauch -> bauch", function() {deepEqual( Stem("bauch"), "bauch");});
test("bauche -> bauch", function() {deepEqual( Stem("bauche"), "bauch");});
test("bäuchen -> bauch", function() {deepEqual( Stem("bäuchen"), "bauch");});
test("bauches -> bauch", function() {deepEqual( Stem("bauches"), "bauch");});
test("bauchflasche -> bauchflasch", function() {deepEqual( Stem("bauchflasche"), "bauchflasch");});
test("bäuchlein -> bauchlein", function() {deepEqual( Stem("bäuchlein"), "bauchlein");});
test("bauchschmerzen -> bauchschmerz", function() {deepEqual( Stem("bauchschmerzen"), "bauchschmerz");});
test("bauchwitz -> bauchwitz", function() {deepEqual( Stem("bauchwitz"), "bauchwitz");});
test("baudenweibe -> baudenweib", function() {deepEqual( Stem("baudenweibe"), "baudenweib");});
test("bauen -> bau", function() {deepEqual( Stem("bauen"), "bau");});
test("bauer -> bau", function() {deepEqual( Stem("bauer"), "bau");});
test("bäuerin -> bauerin", function() {deepEqual( Stem("bäuerin"), "bauerin");});
test("bäuerinnen -> bauerinn", function() {deepEqual( Stem("bäuerinnen"), "bauerinn");});
test("bäuerlein -> bauerlein", function() {deepEqual( Stem("bäuerlein"), "bauerlein");});
test("bäuerliche -> bau", function() {deepEqual( Stem("bäuerliche"), "bau");});
test("bäuerlichen -> bau", function() {deepEqual( Stem("bäuerlichen"), "bau");});
test("bäuerlicher -> bau", function() {deepEqual( Stem("bäuerlicher"), "bau");});
test("bauern -> bau", function() {deepEqual( Stem("bauern"), "bau");});
test("bauerngehöftes -> bauerngehoft", function() {deepEqual( Stem("bauerngehöftes"), "bauerngehoft");});
test("bauernhand -> bauernhand", function() {deepEqual( Stem("bauernhand"), "bauernhand");});
test("bauernhause -> bauernhaus", function() {deepEqual( Stem("bauernhause"), "bauernhaus");});
test("bauernhof -> bauernhof", function() {deepEqual( Stem("bauernhof"), "bauernhof");});
test("bauernhöfe -> bauernhof", function() {deepEqual( Stem("bauernhöfe"), "bauernhof");});
test("bauernklotzes -> bauernklotz", function() {deepEqual( Stem("bauernklotzes"), "bauernklotz");});
test("bauernknecht -> bauernknecht", function() {deepEqual( Stem("bauernknecht"), "bauernknecht");});
test("bauernmadl -> bauernmadl", function() {deepEqual( Stem("bauernmadl"), "bauernmadl");});
test("bauernpack -> bauernpack", function() {deepEqual( Stem("bauernpack"), "bauernpack");});
test("bauernregeln -> bauernregeln", function() {deepEqual( Stem("bauernregeln"), "bauernregeln");});
test("bauernsohn -> bauernsohn", function() {deepEqual( Stem("bauernsohn"), "bauernsohn");});
test("bauernstube -> bauernstub", function() {deepEqual( Stem("bauernstube"), "bauernstub");});
test("bauernwirt -> bauernwirt", function() {deepEqual( Stem("bauernwirt"), "bauernwirt");});
test("bauers -> bau", function() {deepEqual( Stem("bauers"), "bau");});
test("bauersleute -> bauersleut", function() {deepEqual( Stem("bauersleute"), "bauersleut");});
test("bauersmann -> bauersmann", function() {deepEqual( Stem("bauersmann"), "bauersmann");});
test("bauerssohn -> bauerssohn", function() {deepEqual( Stem("bauerssohn"), "bauerssohn");});
test("baues -> bau", function() {deepEqual( Stem("baues"), "bau");});
test("bauet -> bauet", function() {deepEqual( Stem("bauet"), "bauet");});
test("bauete -> bauet", function() {deepEqual( Stem("bauete"), "bauet");});
test("baufälliges -> baufall", function() {deepEqual( Stem("baufälliges"), "baufall");});
test("baulichkeiten -> baulich", function() {deepEqual( Stem("baulichkeiten"), "baulich");});
test("baum -> baum", function() {deepEqual( Stem("baum"), "baum");});
test("baumast -> baumast", function() {deepEqual( Stem("baumast"), "baumast");});
test("baumblätter -> baumblatt", function() {deepEqual( Stem("baumblätter"), "baumblatt");});
test("bäumchen -> baumch", function() {deepEqual( Stem("bäumchen"), "baumch");});
test("baume -> baum", function() {deepEqual( Stem("baume"), "baum");});
test("bäume -> baum", function() {deepEqual( Stem("bäume"), "baum");});
test("baumeln -> baumeln", function() {deepEqual( Stem("baumeln"), "baumeln");});
test("baumelnd -> baumelnd", function() {deepEqual( Stem("baumelnd"), "baumelnd");});
test("baumelte -> baumelt", function() {deepEqual( Stem("baumelte"), "baumelt");});
test("bäumen -> baum", function() {deepEqual( Stem("bäumen"), "baum");});
test("baumes -> baum", function() {deepEqual( Stem("baumes"), "baum");});
test("baumgespenster -> baumgespen", function() {deepEqual( Stem("baumgespenster"), "baumgespen");});
test("baumhöhe -> baumhoh", function() {deepEqual( Stem("baumhöhe"), "baumhoh");});
test("baumklötze -> baumklotz", function() {deepEqual( Stem("baumklötze"), "baumklotz");});
test("baumknospen -> baumknosp", function() {deepEqual( Stem("baumknospen"), "baumknosp");});
test("baumstamm -> baumstamm", function() {deepEqual( Stem("baumstamm"), "baumstamm");});
test("baumstamme -> baumstamm", function() {deepEqual( Stem("baumstamme"), "baumstamm");});
test("baumstöcke -> baumstock", function() {deepEqual( Stem("baumstöcke"), "baumstock");});
test("baumstumpf -> baumstumpf", function() {deepEqual( Stem("baumstumpf"), "baumstumpf");});
test("baumwipfel -> baumwipfel", function() {deepEqual( Stem("baumwipfel"), "baumwipfel");});
test("baumwipfeln -> baumwipfeln", function() {deepEqual( Stem("baumwipfeln"), "baumwipfeln");});
test("baumwolle -> baumwoll", function() {deepEqual( Stem("baumwolle"), "baumwoll");});
test("baumwollene -> baumwoll", function() {deepEqual( Stem("baumwollene"), "baumwoll");});
test("baumwurzel -> baumwurzel", function() {deepEqual( Stem("baumwurzel"), "baumwurzel");});
test("bäurin -> baurin", function() {deepEqual( Stem("bäurin"), "baurin");});
test("baut -> baut", function() {deepEqual( Stem("baut"), "baut");});
test("baute -> baut", function() {deepEqual( Stem("baute"), "baut");});
test("bauten -> baut", function() {deepEqual( Stem("bauten"), "baut");});
test("bauverständiger -> bauverstand", function() {deepEqual( Stem("bauverständiger"), "bauverstand");});
test("bauwerk -> bauwerk", function() {deepEqual( Stem("bauwerk"), "bauwerk");});
test("bauz -> bauz", function() {deepEqual( Stem("bauz"), "bauz");});
test("bayer -> bay", function() {deepEqual( Stem("bayer"), "bay");});
test("bayerischer -> bayer", function() {deepEqual( Stem("bayerischer"), "bayer");});
test("bayern -> bay", function() {deepEqual( Stem("bayern"), "bay");});
test("bayers -> bay", function() {deepEqual( Stem("bayers"), "bay");});
test("baz -> baz", function() {deepEqual( Stem("baz"), "baz");});
test("bdellium -> bdellium", function() {deepEqual( Stem("bdellium"), "bdellium");});
test("be -> be", function() {deepEqual( Stem("be"), "be");});
test("bea -> bea", function() {deepEqual( Stem("bea"), "bea");});
test("beabsichtige -> beabsicht", function() {deepEqual( Stem("beabsichtige"), "beabsicht");});
test("beabsichtigen -> beabsicht", function() {deepEqual( Stem("beabsichtigen"), "beabsicht");});
test("beabsichtigt -> beabsichtigt", function() {deepEqual( Stem("beabsichtigt"), "beabsichtigt");});
test("beabsichtigte -> beabsichtigt", function() {deepEqual( Stem("beabsichtigte"), "beabsichtigt");});
test("beabsichtigten -> beabsichtigt", function() {deepEqual( Stem("beabsichtigten"), "beabsichtigt");});
test("beachte -> beacht", function() {deepEqual( Stem("beachte"), "beacht");});
test("beachten -> beacht", function() {deepEqual( Stem("beachten"), "beacht");});
test("beachtet -> beachtet", function() {deepEqual( Stem("beachtet"), "beachtet");});
test("beachtete -> beachtet", function() {deepEqual( Stem("beachtete"), "beachtet");});
test("beachteten -> beachtet", function() {deepEqual( Stem("beachteten"), "beachtet");});
test("beachtung -> beachtung", function() {deepEqual( Stem("beachtung"), "beachtung");});
test("beamte -> beamt", function() {deepEqual( Stem("beamte"), "beamt");});
test("beamten -> beamt", function() {deepEqual( Stem("beamten"), "beamt");});
test("beamtenschaft -> beamtenschaft", function() {deepEqual( Stem("beamtenschaft"), "beamtenschaft");});
test("beamtenstellen -> beamtenstell", function() {deepEqual( Stem("beamtenstellen"), "beamtenstell");});
test("beamtenwelt -> beamtenwelt", function() {deepEqual( Stem("beamtenwelt"), "beamtenwelt");});
test("beamter -> beamt", function() {deepEqual( Stem("beamter"), "beamt");});
test("beängstigt -> beangstigt", function() {deepEqual( Stem("beängstigt"), "beangstigt");});
test("beängstigung -> beangstig", function() {deepEqual( Stem("beängstigung"), "beangstig");});
test("beanstanden -> beanstand", function() {deepEqual( Stem("beanstanden"), "beanstand");});
test("beantworten -> beantwort", function() {deepEqual( Stem("beantworten"), "beantwort");});
test("beantwortete -> beantwortet", function() {deepEqual( Stem("beantwortete"), "beantwortet");});
test("beantwortung -> beantwort", function() {deepEqual( Stem("beantwortung"), "beantwort");});
test("bearbeiten -> bearbeit", function() {deepEqual( Stem("bearbeiten"), "bearbeit");});
test("bearbeitend -> bearbeit", function() {deepEqual( Stem("bearbeitend"), "bearbeit");});
test("bearbeitet -> bearbeitet", function() {deepEqual( Stem("bearbeitet"), "bearbeitet");});
test("bearbeitung -> bearbeit", function() {deepEqual( Stem("bearbeitung"), "bearbeit");});
test("beatrix -> beatrix", function() {deepEqual( Stem("beatrix"), "beatrix");});
test("beaufsichtigen -> beaufsicht", function() {deepEqual( Stem("beaufsichtigen"), "beaufsicht");});
test("beaufsichtigungsrecht -> beaufsichtigungsrecht", function() {deepEqual( Stem("beaufsichtigungsrecht"), "beaufsichtigungsrecht");});
test("beauftragen -> beauftrag", function() {deepEqual( Stem("beauftragen"), "beauftrag");});
test("beauftragt -> beauftragt", function() {deepEqual( Stem("beauftragt"), "beauftragt");});
test("beauftragte -> beauftragt", function() {deepEqual( Stem("beauftragte"), "beauftragt");});
test("beauftragter -> beauftragt", function() {deepEqual( Stem("beauftragter"), "beauftragt");});
test("bebauen -> bebau", function() {deepEqual( Stem("bebauen"), "bebau");});
test("bebaut -> bebaut", function() {deepEqual( Stem("bebaut"), "bebaut");});
test("bebaute -> bebaut", function() {deepEqual( Stem("bebaute"), "bebaut");});
test("bebauung -> bebau", function() {deepEqual( Stem("bebauung"), "bebau");});
test("beben -> beb", function() {deepEqual( Stem("beben"), "beb");});
test("bebend -> bebend", function() {deepEqual( Stem("bebend"), "bebend");});
test("beblühte -> bebluht", function() {deepEqual( Stem("beblühte"), "bebluht");});
test("bebte -> bebt", function() {deepEqual( Stem("bebte"), "bebt");});
test("becher -> bech", function() {deepEqual( Stem("becher"), "bech");});
test("becken -> beck", function() {deepEqual( Stem("becken"), "beck");});
test("bedacht -> bedacht", function() {deepEqual( Stem("bedacht"), "bedacht");});
test("bedachte -> bedacht", function() {deepEqual( Stem("bedachte"), "bedacht");});
test("bedachtem -> bedacht", function() {deepEqual( Stem("bedachtem"), "bedacht");});
test("bedächtig -> bedacht", function() {deepEqual( Stem("bedächtig"), "bedacht");});
test("bedachtlosen -> bedachtlos", function() {deepEqual( Stem("bedachtlosen"), "bedachtlos");});
test("bedachtsam -> bedachtsam", function() {deepEqual( Stem("bedachtsam"), "bedachtsam");});
test("bedanke -> bedank", function() {deepEqual( Stem("bedanke"), "bedank");});
test("bedanken -> bedank", function() {deepEqual( Stem("bedanken"), "bedank");});
test("bedankt -> bedankt", function() {deepEqual( Stem("bedankt"), "bedankt");});
test("bedankten -> bedankt", function() {deepEqual( Stem("bedankten"), "bedankt");});
test("bedarf -> bedarf", function() {deepEqual( Stem("bedarf"), "bedarf");});
test("bedauere -> bedau", function() {deepEqual( Stem("bedauere"), "bedau");});
test("bedauerlich -> bedau", function() {deepEqual( Stem("bedauerlich"), "bedau");});
test("bedauern -> bedau", function() {deepEqual( Stem("bedauern"), "bedau");});
test("bedauernswerter -> bedauernswert", function() {deepEqual( Stem("bedauernswerter"), "bedauernswert");});
test("bedauerte -> bedauert", function() {deepEqual( Stem("bedauerte"), "bedauert");});
test("bedecken -> bedeck", function() {deepEqual( Stem("bedecken"), "bedeck");});
test("bedeckt -> bedeckt", function() {deepEqual( Stem("bedeckt"), "bedeckt");});
test("bedeckte -> bedeckt", function() {deepEqual( Stem("bedeckte"), "bedeckt");});
test("bedeckten -> bedeckt", function() {deepEqual( Stem("bedeckten"), "bedeckt");});
test("bedeckung -> bedeck", function() {deepEqual( Stem("bedeckung"), "bedeck");});
test("bedenke -> bedenk", function() {deepEqual( Stem("bedenke"), "bedenk");});
test("bedenken -> bedenk", function() {deepEqual( Stem("bedenken"), "bedenk");});
test("bedenkendie -> bedenkendi", function() {deepEqual( Stem("bedenkendie"), "bedenkendi");});
test("bedenklich -> bedenk", function() {deepEqual( Stem("bedenklich"), "bedenk");});
test("bedenkliche -> bedenk", function() {deepEqual( Stem("bedenkliche"), "bedenk");});
test("bedenklichen -> bedenk", function() {deepEqual( Stem("bedenklichen"), "bedenk");});
test("bedenklicher -> bedenk", function() {deepEqual( Stem("bedenklicher"), "bedenk");});
test("bedenklichsten -> bedenk", function() {deepEqual( Stem("bedenklichsten"), "bedenk");});
test("bedenkt -> bedenkt", function() {deepEqual( Stem("bedenkt"), "bedenkt");});
test("bedeute -> bedeut", function() {deepEqual( Stem("bedeute"), "bedeut");});
test("bedeuten -> bedeut", function() {deepEqual( Stem("bedeuten"), "bedeut");});
test("bedeutend -> bedeut", function() {deepEqual( Stem("bedeutend"), "bedeut");});
test("bedeutende -> bedeut", function() {deepEqual( Stem("bedeutende"), "bedeut");});
test("bedeutenden -> bedeut", function() {deepEqual( Stem("bedeutenden"), "bedeut");});
test("bedeutendsten -> bedeut", function() {deepEqual( Stem("bedeutendsten"), "bedeut");});
test("bedeutet -> bedeutet", function() {deepEqual( Stem("bedeutet"), "bedeutet");});
test("bedeutete -> bedeutet", function() {deepEqual( Stem("bedeutete"), "bedeutet");});
test("bedeuteten -> bedeutet", function() {deepEqual( Stem("bedeuteten"), "bedeutet");});
test("bedeutsam -> bedeutsam", function() {deepEqual( Stem("bedeutsam"), "bedeutsam");});
test("bedeutsames -> bedeutsam", function() {deepEqual( Stem("bedeutsames"), "bedeutsam");});
test("bedeutsamkeit -> bedeutsam", function() {deepEqual( Stem("bedeutsamkeit"), "bedeutsam");});
test("bedeutsamsten -> bedeutsam", function() {deepEqual( Stem("bedeutsamsten"), "bedeutsam");});
test("bedeutung -> bedeut", function() {deepEqual( Stem("bedeutung"), "bedeut");});
test("bedeutungen -> bedeut", function() {deepEqual( Stem("bedeutungen"), "bedeut");});
test("bedeutungslos -> bedeutungslos", function() {deepEqual( Stem("bedeutungslos"), "bedeutungslos");});
test("bedeutungslose -> bedeutungslos", function() {deepEqual( Stem("bedeutungslose"), "bedeutungslos");});
test("bedeutungsvollen -> bedeutungsvoll", function() {deepEqual( Stem("bedeutungsvollen"), "bedeutungsvoll");});
test("bediene -> bedi", function() {deepEqual( Stem("bediene"), "bedi");});
test("bedienen -> bedi", function() {deepEqual( Stem("bedienen"), "bedi");});
test("bedient -> bedient", function() {deepEqual( Stem("bedient"), "bedient");});
test("bediente -> bedient", function() {deepEqual( Stem("bediente"), "bedient");});
test("bedienten -> bedient", function() {deepEqual( Stem("bedienten"), "bedient");});
test("bedienung -> bedien", function() {deepEqual( Stem("bedienung"), "bedien");});
test("bedinge -> beding", function() {deepEqual( Stem("bedinge"), "beding");});
test("bedingt -> bedingt", function() {deepEqual( Stem("bedingt"), "bedingt");});
test("bedingte -> bedingt", function() {deepEqual( Stem("bedingte"), "bedingt");});
test("bedingten -> bedingt", function() {deepEqual( Stem("bedingten"), "bedingt");});
test("bedingter -> bedingt", function() {deepEqual( Stem("bedingter"), "bedingt");});
test("bedingung -> beding", function() {deepEqual( Stem("bedingung"), "beding");});
test("bedingungen -> beding", function() {deepEqual( Stem("bedingungen"), "beding");});
test("bedrängen -> bedrang", function() {deepEqual( Stem("bedrängen"), "bedrang");});
test("bedrängt -> bedrangt", function() {deepEqual( Stem("bedrängt"), "bedrangt");});
test("bedrängte -> bedrangt", function() {deepEqual( Stem("bedrängte"), "bedrangt");});
test("bedrohete -> bedrohet", function() {deepEqual( Stem("bedrohete"), "bedrohet");});
test("bedroht -> bedroht", function() {deepEqual( Stem("bedroht"), "bedroht");});
test("bedrohung -> bedroh", function() {deepEqual( Stem("bedrohung"), "bedroh");});
test("bedrücken -> bedruck", function() {deepEqual( Stem("bedrücken"), "bedruck");});
test("bedrückende -> bedruck", function() {deepEqual( Stem("bedrückende"), "bedruck");});
test("bedrückt -> bedruckt", function() {deepEqual( Stem("bedrückt"), "bedruckt");});
test("bedrückten -> bedruckt", function() {deepEqual( Stem("bedrückten"), "bedruckt");});
test("beduinen -> beduin", function() {deepEqual( Stem("beduinen"), "beduin");});
test("bedünken -> bedunk", function() {deepEqual( Stem("bedünken"), "bedunk");});
test("bedünkte -> bedunkt", function() {deepEqual( Stem("bedünkte"), "bedunkt");});
test("bedürfe -> bedurf", function() {deepEqual( Stem("bedürfe"), "bedurf");});
test("bedürfen -> bedurf", function() {deepEqual( Stem("bedürfen"), "bedurf");});
test("bedürfnis -> bedurfnis", function() {deepEqual( Stem("bedürfnis"), "bedurfnis");});
test("bedürfnisse -> bedurfnis", function() {deepEqual( Stem("bedürfnisse"), "bedurfnis");});
test("bedürfnissen -> bedurfnis", function() {deepEqual( Stem("bedürfnissen"), "bedurfnis");});
test("bedürfnisses -> bedurfnis", function() {deepEqual( Stem("bedürfnisses"), "bedurfnis");});
test("bedurfte -> bedurft", function() {deepEqual( Stem("bedurfte"), "bedurft");});
test("bedurften -> bedurft", function() {deepEqual( Stem("bedurften"), "bedurft");});
test("bedürftig -> bedurft", function() {deepEqual( Stem("bedürftig"), "bedurft");});
test("bedürftige -> bedurft", function() {deepEqual( Stem("bedürftige"), "bedurft");});
test("bedürftiger -> bedurft", function() {deepEqual( Stem("bedürftiger"), "bedurft");});
test("bedürftiges -> bedurft", function() {deepEqual( Stem("bedürftiges"), "bedurft");});
test("beeile -> beeil", function() {deepEqual( Stem("beeile"), "beeil");});
test("beeilen -> beeil", function() {deepEqual( Stem("beeilen"), "beeil");});
test("beeilte -> beeilt", function() {deepEqual( Stem("beeilte"), "beeilt");});
test("beeilten -> beeilt", function() {deepEqual( Stem("beeilten"), "beeilt");});
test("beeindruckendsten -> beeindruck", function() {deepEqual( Stem("beeindruckendsten"), "beeindruck");});
test("beeindruckt -> beeindruckt", function() {deepEqual( Stem("beeindruckt"), "beeindruckt");});
test("beeindruckte -> beeindruckt", function() {deepEqual( Stem("beeindruckte"), "beeindruckt");});
test("beeinflusst -> beeinflusst", function() {deepEqual( Stem("beeinflusst"), "beeinflusst");});
test("beeinflußt -> beeinflusst", function() {deepEqual( Stem("beeinflußt"), "beeinflusst");});
test("beeinträchtigen -> beeintracht", function() {deepEqual( Stem("beeinträchtigen"), "beeintracht");});
test("beenden -> beend", function() {deepEqual( Stem("beenden"), "beend");});
test("beendet -> beendet", function() {deepEqual( Stem("beendet"), "beendet");});
test("beendigt -> beendigt", function() {deepEqual( Stem("beendigt"), "beendigt");});
test("beendigung -> beendig", function() {deepEqual( Stem("beendigung"), "beendig");});
test("beengte -> beengt", function() {deepEqual( Stem("beengte"), "beengt");});
test("beengung -> beengung", function() {deepEqual( Stem("beengung"), "beengung");});
test("beer -> beer", function() {deepEqual( Stem("beer"), "beer");});
test("beerchen -> beerch", function() {deepEqual( Stem("beerchen"), "beerch");});
test("beerdigt -> beerdigt", function() {deepEqual( Stem("beerdigt"), "beerdigt");});
test("beerdigungsinstitutes -> beerdigungsinstitut", function() {deepEqual( Stem("beerdigungsinstitutes"), "beerdigungsinstitut");});
test("beere -> beer", function() {deepEqual( Stem("beere"), "beer");});
test("beeren -> beer", function() {deepEqual( Stem("beeren"), "beer");});
test("beerenkraut -> beerenkraut", function() {deepEqual( Stem("beerenkraut"), "beerenkraut");});
test("beerensträucher -> beerenstrauch", function() {deepEqual( Stem("beerensträucher"), "beerenstrauch");});
test("beerensträuchern -> beerenstrauch", function() {deepEqual( Stem("beerensträuchern"), "beerenstrauch");});
test("beerscheba -> beerscheba", function() {deepEqual( Stem("beerscheba"), "beerscheba");});
test("beet -> beet", function() {deepEqual( Stem("beet"), "beet");});
test("beete -> beet", function() {deepEqual( Stem("beete"), "beet");});
test("beethovens -> beethov", function() {deepEqual( Stem("beethovens"), "beethov");});
test("befähigt -> befahigt", function() {deepEqual( Stem("befähigt"), "befahigt");});
test("befahl -> befahl", function() {deepEqual( Stem("befahl"), "befahl");});
test("befahlen -> befahl", function() {deepEqual( Stem("befahlen"), "befahl");});
test("befällt -> befallt", function() {deepEqual( Stem("befällt"), "befallt");});
test("befand -> befand", function() {deepEqual( Stem("befand"), "befand");});
test("befanden -> befand", function() {deepEqual( Stem("befanden"), "befand");});
test("befänden -> befand", function() {deepEqual( Stem("befänden"), "befand");});
test("befangen -> befang", function() {deepEqual( Stem("befangen"), "befang");});
test("befangenheit -> befang", function() {deepEqual( Stem("befangenheit"), "befang");});
test("befassen -> befass", function() {deepEqual( Stem("befassen"), "befass");});
test("befassend -> befass", function() {deepEqual( Stem("befassend"), "befass");});
test("befassete -> befasset", function() {deepEqual( Stem("befassete"), "befasset");});
test("befasst -> befasst", function() {deepEqual( Stem("befasst"), "befasst");});
test("befehden -> befehd", function() {deepEqual( Stem("befehden"), "befehd");});
test("befehl -> befehl", function() {deepEqual( Stem("befehl"), "befehl");});
test("befehle -> befehl", function() {deepEqual( Stem("befehle"), "befehl");});
test("befehlen -> befehl", function() {deepEqual( Stem("befehlen"), "befehl");});
test("befehls -> befehl", function() {deepEqual( Stem("befehls"), "befehl");});
test("befehlsartig -> befehlsart", function() {deepEqual( Stem("befehlsartig"), "befehlsart");});
test("befehlshaber -> befehlshab", function() {deepEqual( Stem("befehlshaber"), "befehlshab");});
test("befehlt -> befehlt", function() {deepEqual( Stem("befehlt"), "befehlt");});
test("befestigen -> befest", function() {deepEqual( Stem("befestigen"), "befest");});
test("befestigt -> befestigt", function() {deepEqual( Stem("befestigt"), "befestigt");});
test("befestigte -> befestigt", function() {deepEqual( Stem("befestigte"), "befestigt");});
test("befestigten -> befestigt", function() {deepEqual( Stem("befestigten"), "befestigt");});
test("befiel -> befiel", function() {deepEqual( Stem("befiel"), "befiel");});
test("befinde -> befind", function() {deepEqual( Stem("befinde"), "befind");});
test("befinden -> befind", function() {deepEqual( Stem("befinden"), "befind");});
test("befindet -> befindet", function() {deepEqual( Stem("befindet"), "befindet");});
test("befindliche -> befind", function() {deepEqual( Stem("befindliche"), "befind");});
test("befindlichen -> befind", function() {deepEqual( Stem("befindlichen"), "befind");});
test("befleckt -> befleckt", function() {deepEqual( Stem("befleckt"), "befleckt");});
test("befleissigt -> befleissigt", function() {deepEqual( Stem("befleissigt"), "befleissigt");});
test("befleissigte -> befleissigt", function() {deepEqual( Stem("befleissigte"), "befleissigt");});
test("beflissen -> befliss", function() {deepEqual( Stem("beflissen"), "befliss");});
test("beflügeltes -> beflugelt", function() {deepEqual( Stem("beflügeltes"), "beflugelt");});
test("befohlen -> befohl", function() {deepEqual( Stem("befohlen"), "befohl");});
test("befolgen -> befolg", function() {deepEqual( Stem("befolgen"), "befolg");});
test("befolgt -> befolgt", function() {deepEqual( Stem("befolgt"), "befolgt");});
test("befolgte -> befolgt", function() {deepEqual( Stem("befolgte"), "befolgt");});
test("befolgten -> befolgt", function() {deepEqual( Stem("befolgten"), "befolgt");});
test("befolgung -> befolg", function() {deepEqual( Stem("befolgung"), "befolg");});
test("beförderlich -> beford", function() {deepEqual( Stem("beförderlich"), "beford");});
test("befördern -> beford", function() {deepEqual( Stem("befördern"), "beford");});
test("befördert -> befordert", function() {deepEqual( Stem("befördert"), "befordert");});
test("beförderung -> beforder", function() {deepEqual( Stem("beförderung"), "beforder");});
test("beförderungsmittel -> beforderungsmittel", function() {deepEqual( Stem("beförderungsmittel"), "beforderungsmittel");});
test("befrachten -> befracht", function() {deepEqual( Stem("befrachten"), "befracht");});
test("befrage -> befrag", function() {deepEqual( Stem("befrage"), "befrag");});
test("befragen -> befrag", function() {deepEqual( Stem("befragen"), "befrag");});
test("befragt -> befragt", function() {deepEqual( Stem("befragt"), "befragt");});
test("befragungen -> befrag", function() {deepEqual( Stem("befragungen"), "befrag");});
test("befreie -> befrei", function() {deepEqual( Stem("befreie"), "befrei");});
test("befreien -> befrei", function() {deepEqual( Stem("befreien"), "befrei");});
test("befreit -> befreit", function() {deepEqual( Stem("befreit"), "befreit");});
test("befreite -> befreit", function() {deepEqual( Stem("befreite"), "befreit");});
test("befreiung -> befreiung", function() {deepEqual( Stem("befreiung"), "befreiung");});
test("befremden -> befremd", function() {deepEqual( Stem("befremden"), "befremd");});
test("befremdet -> befremdet", function() {deepEqual( Stem("befremdet"), "befremdet");});
test("befreundet -> befreundet", function() {deepEqual( Stem("befreundet"), "befreundet");});
test("befriedigen -> befried", function() {deepEqual( Stem("befriedigen"), "befried");});
test("befriedigt -> befriedigt", function() {deepEqual( Stem("befriedigt"), "befriedigt");});
test("befriedigte -> befriedigt", function() {deepEqual( Stem("befriedigte"), "befriedigt");});
test("befriedigten -> befriedigt", function() {deepEqual( Stem("befriedigten"), "befriedigt");});
test("befriedigung -> befried", function() {deepEqual( Stem("befriedigung"), "befried");});
test("befristet -> befristet", function() {deepEqual( Stem("befristet"), "befristet");});
test("befruchten -> befrucht", function() {deepEqual( Stem("befruchten"), "befrucht");});
test("befruchtet -> befruchtet", function() {deepEqual( Stem("befruchtet"), "befruchtet");});
test("befruchtung -> befrucht", function() {deepEqual( Stem("befruchtung"), "befrucht");});
test("befruchtungen -> befrucht", function() {deepEqual( Stem("befruchtungen"), "befrucht");});
test("befugnis -> befugnis", function() {deepEqual( Stem("befugnis"), "befugnis");});
test("befugnisse -> befugnis", function() {deepEqual( Stem("befugnisse"), "befugnis");});
test("befugt -> befugt", function() {deepEqual( Stem("befugt"), "befugt");});
test("befühlt -> befuhlt", function() {deepEqual( Stem("befühlt"), "befuhlt");});
test("befühlten -> befuhlt", function() {deepEqual( Stem("befühlten"), "befuhlt");});
test("befunden -> befund", function() {deepEqual( Stem("befunden"), "befund");});
test("befürchten -> befurcht", function() {deepEqual( Stem("befürchten"), "befurcht");});
test("befürchtend -> befurcht", function() {deepEqual( Stem("befürchtend"), "befurcht");});
test("befürchtete -> befurchtet", function() {deepEqual( Stem("befürchtete"), "befurchtet");});
test("befürchteten -> befurchtet", function() {deepEqual( Stem("befürchteten"), "befurchtet");});
test("befürchtung -> befurcht", function() {deepEqual( Stem("befürchtung"), "befurcht");});
test("befürchtungen -> befurcht", function() {deepEqual( Stem("befürchtungen"), "befurcht");});
test("begab -> begab", function() {deepEqual( Stem("begab"), "begab");});
test("begaben -> begab", function() {deepEqual( Stem("begaben"), "begab");});
test("begabt -> begabt", function() {deepEqual( Stem("begabt"), "begabt");});
test("begabteste -> begabt", function() {deepEqual( Stem("begabteste"), "begabt");});
test("begangen -> begang", function() {deepEqual( Stem("begangen"), "begang");});
test("begangene -> begang", function() {deepEqual( Stem("begangene"), "begang");});
test("begangenen -> begang", function() {deepEqual( Stem("begangenen"), "begang");});
test("begann -> begann", function() {deepEqual( Stem("begann"), "begann");});
test("begannen -> begann", function() {deepEqual( Stem("begannen"), "begann");});
test("begeben -> begeb", function() {deepEqual( Stem("begeben"), "begeb");});
test("begebend -> begeb", function() {deepEqual( Stem("begebend"), "begeb");});
test("begebenheit -> begeb", function() {deepEqual( Stem("begebenheit"), "begeb");});
test("begebenheiten -> begeb", function() {deepEqual( Stem("begebenheiten"), "begeb");});
test("begegnen -> begegn", function() {deepEqual( Stem("begegnen"), "begegn");});
test("begegnet -> begegnet", function() {deepEqual( Stem("begegnet"), "begegnet");});
test("begegnete -> begegnet", function() {deepEqual( Stem("begegnete"), "begegnet");});
test("begegneten -> begegnet", function() {deepEqual( Stem("begegneten"), "begegnet");});
test("begegnung -> begegn", function() {deepEqual( Stem("begegnung"), "begegn");});
test("begegnungen -> begegn", function() {deepEqual( Stem("begegnungen"), "begegn");});
test("begehen -> begeh", function() {deepEqual( Stem("begehen"), "begeh");});
test("begehre -> begehr", function() {deepEqual( Stem("begehre"), "begehr");});
test("begehren -> begehr", function() {deepEqual( Stem("begehren"), "begehr");});
test("begehrens -> begehr", function() {deepEqual( Stem("begehrens"), "begehr");});
test("begehrenswert -> begehrenswert", function() {deepEqual( Stem("begehrenswert"), "begehrenswert");});
test("begehret -> begehret", function() {deepEqual( Stem("begehret"), "begehret");});
test("begehrlichkeit -> begehr", function() {deepEqual( Stem("begehrlichkeit"), "begehr");});
test("begehrt -> begehrt", function() {deepEqual( Stem("begehrt"), "begehrt");});
test("begehrte -> begehrt", function() {deepEqual( Stem("begehrte"), "begehrt");});
test("begehrten -> begehrt", function() {deepEqual( Stem("begehrten"), "begehrt");});
test("begehrung -> begehr", function() {deepEqual( Stem("begehrung"), "begehr");});
test("begehrungen -> begehr", function() {deepEqual( Stem("begehrungen"), "begehr");});
test("begehrungs -> begehr", function() {deepEqual( Stem("begehrungs"), "begehr");});
test("begehrungsvermögen -> begehrungsvermog", function() {deepEqual( Stem("begehrungsvermögen"), "begehrungsvermog");});
test("begehrungsvermögens -> begehrungsvermog", function() {deepEqual( Stem("begehrungsvermögens"), "begehrungsvermog");});
test("begeht -> begeht", function() {deepEqual( Stem("begeht"), "begeht");});
test("begeistert -> begeistert", function() {deepEqual( Stem("begeistert"), "begeistert");});
test("begeisterung -> begeister", function() {deepEqual( Stem("begeisterung"), "begeister");});
test("begeisterungsstürmen -> begeisterungssturm", function() {deepEqual( Stem("begeisterungsstürmen"), "begeisterungssturm");});
test("begib -> begib", function() {deepEqual( Stem("begib"), "begib");});
test("begibt -> begibt", function() {deepEqual( Stem("begibt"), "begibt");});
test("begiedren -> begiedr", function() {deepEqual( Stem("begiedren"), "begiedr");});
test("begierde -> begierd", function() {deepEqual( Stem("begierde"), "begierd");});
test("begierden -> begierd", function() {deepEqual( Stem("begierden"), "begierd");});
test("begierig -> begier", function() {deepEqual( Stem("begierig"), "begier");});
test("begierigen -> begier", function() {deepEqual( Stem("begierigen"), "begier");});
test("begieriger -> begier", function() {deepEqual( Stem("begieriger"), "begier");});
test("begiessen -> begiess", function() {deepEqual( Stem("begiessen"), "begiess");});
test("begine -> begin", function() {deepEqual( Stem("begine"), "begin");});
test("beging -> beging", function() {deepEqual( Stem("beging"), "beging");});
test("beginn -> beginn", function() {deepEqual( Stem("beginn"), "beginn");});
test("beginne -> beginn", function() {deepEqual( Stem("beginne"), "beginn");});
test("beginnen -> beginn", function() {deepEqual( Stem("beginnen"), "beginn");});
test("beginnt -> beginnt", function() {deepEqual( Stem("beginnt"), "beginnt");});
test("beglaubigen -> beglaub", function() {deepEqual( Stem("beglaubigen"), "beglaub");});
test("beglaubigt -> beglaubigt", function() {deepEqual( Stem("beglaubigt"), "beglaubigt");});
test("beglaubigte -> beglaubigt", function() {deepEqual( Stem("beglaubigte"), "beglaubigt");});
test("begleiten -> begleit", function() {deepEqual( Stem("begleiten"), "begleit");});
test("begleitend -> begleit", function() {deepEqual( Stem("begleitend"), "begleit");});
test("begleiter -> begleit", function() {deepEqual( Stem("begleiter"), "begleit");});
test("begleitern -> begleit", function() {deepEqual( Stem("begleitern"), "begleit");});
test("begleiters -> begleit", function() {deepEqual( Stem("begleiters"), "begleit");});
test("begleitet -> begleitet", function() {deepEqual( Stem("begleitet"), "begleitet");});
test("begleitete -> begleitet", function() {deepEqual( Stem("begleitete"), "begleitet");});
test("begleiteten -> begleitet", function() {deepEqual( Stem("begleiteten"), "begleitet");});
test("begleitherren -> begleitherr", function() {deepEqual( Stem("begleitherren"), "begleitherr");});
test("begleitung -> begleit", function() {deepEqual( Stem("begleitung"), "begleit");});
test("beglücken -> begluck", function() {deepEqual( Stem("beglücken"), "begluck");});
test("beglückte -> begluckt", function() {deepEqual( Stem("beglückte"), "begluckt");});
test("beglückwünschen -> begluckwunsch", function() {deepEqual( Stem("beglückwünschen"), "begluckwunsch");});
test("begnüge -> begnug", function() {deepEqual( Stem("begnüge"), "begnug");});
test("begnügt -> begnugt", function() {deepEqual( Stem("begnügt"), "begnugt");});
test("begnügte -> begnugt", function() {deepEqual( Stem("begnügte"), "begnugt");});
test("begonnen -> begonn", function() {deepEqual( Stem("begonnen"), "begonn");});
test("begoss -> begoss", function() {deepEqual( Stem("begoss"), "begoss");});
test("begossenen -> begoss", function() {deepEqual( Stem("begossenen"), "begoss");});
test("begraben -> begrab", function() {deepEqual( Stem("begraben"), "begrab");});
test("begräbnis -> begrabnis", function() {deepEqual( Stem("begräbnis"), "begrabnis");});
test("begräbnisse -> begrabnis", function() {deepEqual( Stem("begräbnisse"), "begrabnis");});
test("begrasten -> begrast", function() {deepEqual( Stem("begrasten"), "begrast");});
test("begreif -> begreif", function() {deepEqual( Stem("begreif"), "begreif");});
test("begreife -> begreif", function() {deepEqual( Stem("begreife"), "begreif");});
test("begreifen -> begreif", function() {deepEqual( Stem("begreifen"), "begreif");});
test("begreiflich -> begreif", function() {deepEqual( Stem("begreiflich"), "begreif");});
test("begreiflichen -> begreif", function() {deepEqual( Stem("begreiflichen"), "begreif");});
test("begreiflicher -> begreif", function() {deepEqual( Stem("begreiflicher"), "begreif");});
test("begreiflichkeit -> begreif", function() {deepEqual( Stem("begreiflichkeit"), "begreif");});
test("begreift -> begreift", function() {deepEqual( Stem("begreift"), "begreift");});
test("begrenzen -> begrenz", function() {deepEqual( Stem("begrenzen"), "begrenz");});
test("begrenzt -> begrenzt", function() {deepEqual( Stem("begrenzt"), "begrenzt");});
test("begrenzte -> begrenzt", function() {deepEqual( Stem("begrenzte"), "begrenzt");});
test("begrenztheit -> begrenzt", function() {deepEqual( Stem("begrenztheit"), "begrenzt");});
test("begrenzung -> begrenz", function() {deepEqual( Stem("begrenzung"), "begrenz");});
test("begriff -> begriff", function() {deepEqual( Stem("begriff"), "begriff");});
test("begriffe -> begriff", function() {deepEqual( Stem("begriffe"), "begriff");});
test("begriffen -> begriff", function() {deepEqual( Stem("begriffen"), "begriff");});
test("begriffener -> begriff", function() {deepEqual( Stem("begriffener"), "begriff");});
test("begriffenes -> begriff", function() {deepEqual( Stem("begriffenes"), "begriff");});
test("begriffes -> begriff", function() {deepEqual( Stem("begriffes"), "begriff");});
test("begriffs -> begriff", function() {deepEqual( Stem("begriffs"), "begriff");});
test("begriffsstutziger -> begriffsstutz", function() {deepEqual( Stem("begriffsstutziger"), "begriffsstutz");});
test("begriffsverhältnisse -> begriffsverhaltnis", function() {deepEqual( Stem("begriffsverhältnisse"), "begriffsverhaltnis");});
test("begrub -> begrub", function() {deepEqual( Stem("begrub"), "begrub");});
test("begruben -> begrub", function() {deepEqual( Stem("begruben"), "begrub");});
test("begründe -> begrund", function() {deepEqual( Stem("begründe"), "begrund");});
test("begründen -> begrund", function() {deepEqual( Stem("begründen"), "begrund");});
test("begründendem -> begrund", function() {deepEqual( Stem("begründendem"), "begrund");});
test("begründendes -> begrund", function() {deepEqual( Stem("begründendes"), "begrund");});
test("begründet -> begrundet", function() {deepEqual( Stem("begründet"), "begrundet");});
test("begründete -> begrundet", function() {deepEqual( Stem("begründete"), "begrundet");});
test("begründeten -> begrundet", function() {deepEqual( Stem("begründeten"), "begrundet");});
test("begründung -> begrund", function() {deepEqual( Stem("begründung"), "begrund");});
test("begründungen -> begrund", function() {deepEqual( Stem("begründungen"), "begrund");});
test("begrüssen -> begruss", function() {deepEqual( Stem("begrüssen"), "begruss");});
test("begrüßen -> begruss", function() {deepEqual( Stem("begrüßen"), "begruss");});
test("begrüssend -> begruss", function() {deepEqual( Stem("begrüssend"), "begruss");});
test("begrüssenden -> begruss", function() {deepEqual( Stem("begrüssenden"), "begruss");});
test("begrüsst -> begrusst", function() {deepEqual( Stem("begrüsst"), "begrusst");});
test("begrüßt -> begrusst", function() {deepEqual( Stem("begrüßt"), "begrusst");});
test("begrüsste -> begrusst", function() {deepEqual( Stem("begrüsste"), "begrusst");});
test("begrüssten -> begrusst", function() {deepEqual( Stem("begrüssten"), "begrusst");});
test("begrüssung -> begruss", function() {deepEqual( Stem("begrüssung"), "begruss");});
test("begrüßung -> begruss", function() {deepEqual( Stem("begrüßung"), "begruss");});
test("begrüssungsknicks -> begrussungsknick", function() {deepEqual( Stem("begrüssungsknicks"), "begrussungsknick");});
test("begucken -> beguck", function() {deepEqual( Stem("begucken"), "beguck");});
test("beguckten -> beguckt", function() {deepEqual( Stem("beguckten"), "beguckt");});
test("begünstigen -> begunst", function() {deepEqual( Stem("begünstigen"), "begunst");});
test("begünstigt -> begunstigt", function() {deepEqual( Stem("begünstigt"), "begunstigt");});
test("begünstigte -> begunstigt", function() {deepEqual( Stem("begünstigte"), "begunstigt");});
test("begünstigung -> begunst", function() {deepEqual( Stem("begünstigung"), "begunst");});
test("begürtet -> begurtet", function() {deepEqual( Stem("begürtet"), "begurtet");});
test("begürtete -> begurtet", function() {deepEqual( Stem("begürtete"), "begurtet");});
test("begüterte -> begutert", function() {deepEqual( Stem("begüterte"), "begutert");});
test("behaarung -> behaar", function() {deepEqual( Stem("behaarung"), "behaar");});
test("behaftet -> behaftet", function() {deepEqual( Stem("behaftet"), "behaftet");});
test("behagen -> behag", function() {deepEqual( Stem("behagen"), "behag");});
test("behaglich -> behag", function() {deepEqual( Stem("behaglich"), "behag");});
test("behaglicher -> behag", function() {deepEqual( Stem("behaglicher"), "behag");});
test("behagliches -> behag", function() {deepEqual( Stem("behagliches"), "behag");});
test("behaglichkeit -> behag", function() {deepEqual( Stem("behaglichkeit"), "behag");});
test("behagte -> behagt", function() {deepEqual( Stem("behagte"), "behagt");});
test("behagten -> behagt", function() {deepEqual( Stem("behagten"), "behagt");});
test("behält -> behalt", function() {deepEqual( Stem("behält"), "behalt");});
test("behalte -> behalt", function() {deepEqual( Stem("behalte"), "behalt");});
test("behalten -> behalt", function() {deepEqual( Stem("behalten"), "behalt");});
test("behälter -> behalt", function() {deepEqual( Stem("behälter"), "behalt");});
test("behältern -> behalt", function() {deepEqual( Stem("behältern"), "behalt");});
test("behaltet -> behaltet", function() {deepEqual( Stem("behaltet"), "behaltet");});
test("behältnis -> behaltnis", function() {deepEqual( Stem("behältnis"), "behaltnis");});
test("behältnisse -> behaltnis", function() {deepEqual( Stem("behältnisse"), "behaltnis");});
test("behandeln -> behandeln", function() {deepEqual( Stem("behandeln"), "behandeln");});
test("behandelt -> behandelt", function() {deepEqual( Stem("behandelt"), "behandelt");});
test("behandelte -> behandelt", function() {deepEqual( Stem("behandelte"), "behandelt");});
test("behandelten -> behandelt", function() {deepEqual( Stem("behandelten"), "behandelt");});
test("behandle -> behandl", function() {deepEqual( Stem("behandle"), "behandl");});
test("behandlung -> behandl", function() {deepEqual( Stem("behandlung"), "behandl");});
test("behängt -> behangt", function() {deepEqual( Stem("behängt"), "behangt");});
test("beharre -> beharr", function() {deepEqual( Stem("beharre"), "beharr");});
test("beharren -> beharr", function() {deepEqual( Stem("beharren"), "beharr");});
test("beharrlich -> beharr", function() {deepEqual( Stem("beharrlich"), "beharr");});
test("beharrlichkeit -> beharr", function() {deepEqual( Stem("beharrlichkeit"), "beharr");});
test("beharrt -> beharrt", function() {deepEqual( Stem("beharrt"), "beharrt");});
test("beharrte -> beharrt", function() {deepEqual( Stem("beharrte"), "beharrt");});
test("beharrungsvermögen -> beharrungsvermog", function() {deepEqual( Stem("beharrungsvermögen"), "beharrungsvermog");});
test("behauchten -> behaucht", function() {deepEqual( Stem("behauchten"), "behaucht");});
test("behaupte -> behaupt", function() {deepEqual( Stem("behaupte"), "behaupt");});
test("behaupten -> behaupt", function() {deepEqual( Stem("behaupten"), "behaupt");});
test("behauptend -> behaupt", function() {deepEqual( Stem("behauptend"), "behaupt");});
test("behauptet -> behauptet", function() {deepEqual( Stem("behauptet"), "behauptet");});
test("behauptete -> behauptet", function() {deepEqual( Stem("behauptete"), "behauptet");});
test("behaupteten -> behauptet", function() {deepEqual( Stem("behaupteten"), "behauptet");});
test("behauptung -> behaupt", function() {deepEqual( Stem("behauptung"), "behaupt");});
test("behauptungen -> behaupt", function() {deepEqual( Stem("behauptungen"), "behaupt");});
test("behausung -> behaus", function() {deepEqual( Stem("behausung"), "behaus");});
test("behelfen -> behelf", function() {deepEqual( Stem("behelfen"), "behelf");});
test("behende -> behend", function() {deepEqual( Stem("behende"), "behend");});
test("beherbergen -> beherberg", function() {deepEqual( Stem("beherbergen"), "beherberg");});
test("beherbergte -> beherbergt", function() {deepEqual( Stem("beherbergte"), "beherbergt");});
test("beherrschen -> beherrsch", function() {deepEqual( Stem("beherrschen"), "beherrsch");});
test("beherrschend -> beherrsch", function() {deepEqual( Stem("beherrschend"), "beherrsch");});
test("beherrschenden -> beherrsch", function() {deepEqual( Stem("beherrschenden"), "beherrsch");});
test("beherrscht -> beherrscht", function() {deepEqual( Stem("beherrscht"), "beherrscht");});
test("beherrschte -> beherrscht", function() {deepEqual( Stem("beherrschte"), "beherrscht");});
test("beherrschung -> beherrsch", function() {deepEqual( Stem("beherrschung"), "beherrsch");});
test("beherzten -> beherzt", function() {deepEqual( Stem("beherzten"), "beherzt");});
test("beherzter -> beherzt", function() {deepEqual( Stem("beherzter"), "beherzt");});
test("behielt -> behielt", function() {deepEqual( Stem("behielt"), "behielt");});
test("behilflich -> behilf", function() {deepEqual( Stem("behilflich"), "behilf");});
test("behindern -> behind", function() {deepEqual( Stem("behindern"), "behind");});
test("behindert -> behindert", function() {deepEqual( Stem("behindert"), "behindert");});
test("behörde -> behord", function() {deepEqual( Stem("behörde"), "behord");});
test("behörden -> behord", function() {deepEqual( Stem("behörden"), "behord");});
test("behuf -> behuf", function() {deepEqual( Stem("behuf"), "behuf");});
test("behufe -> behuf", function() {deepEqual( Stem("behufe"), "behuf");});
test("behufs -> behuf", function() {deepEqual( Stem("behufs"), "behuf");});
test("behüt -> behut", function() {deepEqual( Stem("behüt"), "behut");});
test("behüte -> behut", function() {deepEqual( Stem("behüte"), "behut");});
test("behüten -> behut", function() {deepEqual( Stem("behüten"), "behut");});
test("behütet -> behutet", function() {deepEqual( Stem("behütet"), "behutet");});
test("behutsam -> behutsam", function() {deepEqual( Stem("behutsam"), "behutsam");});
test("behutsames -> behutsam", function() {deepEqual( Stem("behutsames"), "behutsam");});
test("bei -> bei", function() {deepEqual( Stem("bei"), "bei");});
test("beibehalten -> beibehalt", function() {deepEqual( Stem("beibehalten"), "beibehalt");});
test("beibehaltender -> beibehalt", function() {deepEqual( Stem("beibehaltender"), "beibehalt");});
test("beibrachte -> beibracht", function() {deepEqual( Stem("beibrachte"), "beibracht");});
test("beibringen -> beibring", function() {deepEqual( Stem("beibringen"), "beibring");});
test("beichte -> beicht", function() {deepEqual( Stem("beichte"), "beicht");});
test("beichtete -> beichtet", function() {deepEqual( Stem("beichtete"), "beichtet");});
test("beichtstuhl -> beichtstuhl", function() {deepEqual( Stem("beichtstuhl"), "beichtstuhl");});
test("beide -> beid", function() {deepEqual( Stem("beide"), "beid");});
test("beiden -> beid", function() {deepEqual( Stem("beiden"), "beid");});
test("beider -> beid", function() {deepEqual( Stem("beider"), "beid");});
test("beiderlei -> beiderlei", function() {deepEqual( Stem("beiderlei"), "beiderlei");});
test("beiderseitig -> beiderseit", function() {deepEqual( Stem("beiderseitig"), "beiderseit");});
test("beiderseits -> beiderseit", function() {deepEqual( Stem("beiderseits"), "beiderseit");});
test("beides -> beid", function() {deepEqual( Stem("beides"), "beid");});
test("beieinander -> beieinand", function() {deepEqual( Stem("beieinander"), "beieinand");});
test("beifall -> beifall", function() {deepEqual( Stem("beifall"), "beifall");});
test("beifälligem -> beifall", function() {deepEqual( Stem("beifälligem"), "beifall");});
test("beifälliges -> beifall", function() {deepEqual( Stem("beifälliges"), "beifall");});
test("beifallklatschen -> beifallklatsch", function() {deepEqual( Stem("beifallklatschen"), "beifallklatsch");});
test("beifalls -> beifall", function() {deepEqual( Stem("beifalls"), "beifall");});
test("beifallsgeschrei -> beifallsgeschrei", function() {deepEqual( Stem("beifallsgeschrei"), "beifallsgeschrei");});
test("beifügen -> beifug", function() {deepEqual( Stem("beifügen"), "beifug");});
test("beifügten -> beifugt", function() {deepEqual( Stem("beifügten"), "beifugt");});
test("beigebracht -> beigebracht", function() {deepEqual( Stem("beigebracht"), "beigebracht");});
test("beigefallen -> beigefall", function() {deepEqual( Stem("beigefallen"), "beigefall");});
test("beigefügt -> beigefugt", function() {deepEqual( Stem("beigefügt"), "beigefugt");});
test("beigegeben -> beigegeb", function() {deepEqual( Stem("beigegeben"), "beigegeb");});
test("beigegebene -> beigegeb", function() {deepEqual( Stem("beigegebene"), "beigegeb");});
test("beigegebenes -> beigegeb", function() {deepEqual( Stem("beigegebenes"), "beigegeb");});
test("beigelegt -> beigelegt", function() {deepEqual( Stem("beigelegt"), "beigelegt");});
test("beigemessen -> beigemess", function() {deepEqual( Stem("beigemessen"), "beigemess");});
test("beigemischt -> beigemischt", function() {deepEqual( Stem("beigemischt"), "beigemischt");});
test("beigeordnet -> beigeordnet", function() {deepEqual( Stem("beigeordnet"), "beigeordnet");});
test("beigesellen -> beigesell", function() {deepEqual( Stem("beigesellen"), "beigesell");});
test("beigesellet -> beigesellet", function() {deepEqual( Stem("beigesellet"), "beigesellet");});
test("beigesellt -> beigesellt", function() {deepEqual( Stem("beigesellt"), "beigesellt");});
test("beigesellte -> beigesellt", function() {deepEqual( Stem("beigesellte"), "beigesellt");});
test("beigesellten -> beigesellt", function() {deepEqual( Stem("beigesellten"), "beigesellt");});
test("beigesellung -> beigesell", function() {deepEqual( Stem("beigesellung"), "beigesell");});
test("beigesetzt -> beigesetzt", function() {deepEqual( Stem("beigesetzt"), "beigesetzt");});
test("beigesteckt -> beigesteckt", function() {deepEqual( Stem("beigesteckt"), "beigesteckt");});
test("beigestimmt -> beigestimmt", function() {deepEqual( Stem("beigestimmt"), "beigestimmt");});
test("beigewohnt -> beigewohnt", function() {deepEqual( Stem("beigewohnt"), "beigewohnt");});
test("beihilfe -> beihilf", function() {deepEqual( Stem("beihilfe"), "beihilf");});
test("beikommen -> beikomm", function() {deepEqual( Stem("beikommen"), "beikomm");});
test("beile -> beil", function() {deepEqual( Stem("beile"), "beil");});
test("beilege -> beileg", function() {deepEqual( Stem("beilege"), "beileg");});
test("beilegen -> beileg", function() {deepEqual( Stem("beilegen"), "beileg");});
test("beilegt -> beilegt", function() {deepEqual( Stem("beilegt"), "beilegt");});
test("beilegte -> beilegt", function() {deepEqual( Stem("beilegte"), "beilegt");});
test("beilegung -> beileg", function() {deepEqual( Stem("beilegung"), "beileg");});
test("beileib -> beileib", function() {deepEqual( Stem("beileib"), "beileib");});
test("beiliegend -> beilieg", function() {deepEqual( Stem("beiliegend"), "beilieg");});
test("beim -> beim", function() {deepEqual( Stem("beim"), "beim");});
test("beimessen -> beimess", function() {deepEqual( Stem("beimessen"), "beimess");});
test("beimischung -> beimisch", function() {deepEqual( Stem("beimischung"), "beimisch");});
test("bein -> bein", function() {deepEqual( Stem("bein"), "bein");});
test("beinah -> beinah", function() {deepEqual( Stem("beinah"), "beinah");});
test("beinahe -> beinah", function() {deepEqual( Stem("beinahe"), "beinah");});
test("beinamen -> beinam", function() {deepEqual( Stem("beinamen"), "beinam");});
test("beinchen -> beinch", function() {deepEqual( Stem("beinchen"), "beinch");});
test("beinchenende -> beinchen", function() {deepEqual( Stem("beinchenende"), "beinchen");});
test("beincheneroberung -> beinchenerober", function() {deepEqual( Stem("beincheneroberung"), "beinchenerober");});
test("beinchengeschichte -> beinchengeschicht", function() {deepEqual( Stem("beinchengeschichte"), "beinchengeschicht");});
test("beinchens -> beinch", function() {deepEqual( Stem("beinchens"), "beinch");});
test("beine -> bein", function() {deepEqual( Stem("beine"), "bein");});
test("beinen -> bein", function() {deepEqual( Stem("beinen"), "bein");});
test("beines -> bein", function() {deepEqual( Stem("beines"), "bein");});
test("beinkleider -> beinkleid", function() {deepEqual( Stem("beinkleider"), "beinkleid");});
test("beinkleidern -> beinkleid", function() {deepEqual( Stem("beinkleidern"), "beinkleid");});
test("beinwerks -> beinwerk", function() {deepEqual( Stem("beinwerks"), "beinwerk");});
test("beirrte -> beirrt", function() {deepEqual( Stem("beirrte"), "beirrt");});
test("beisammen -> beisamm", function() {deepEqual( Stem("beisammen"), "beisamm");});
test("beisatz -> beisatz", function() {deepEqual( Stem("beisatz"), "beisatz");});
test("beiseit -> beiseit", function() {deepEqual( Stem("beiseit"), "beiseit");});
test("beiseite -> beiseit", function() {deepEqual( Stem("beiseite"), "beiseit");});
test("beispiel -> beispiel", function() {deepEqual( Stem("beispiel"), "beispiel");});
test("beispiele -> beispiel", function() {deepEqual( Stem("beispiele"), "beispiel");});
test("beispielen -> beispiel", function() {deepEqual( Stem("beispielen"), "beispiel");});
test("beispielsweise -> beispielsweis", function() {deepEqual( Stem("beispielsweise"), "beispielsweis");});
test("beissbares -> beissbar", function() {deepEqual( Stem("beissbares"), "beissbar");});
test("beissen -> beiss", function() {deepEqual( Stem("beissen"), "beiss");});
test("beißen -> beiss", function() {deepEqual( Stem("beißen"), "beiss");});
test("beissend -> beissend", function() {deepEqual( Stem("beissend"), "beissend");});
test("beißend -> beissend", function() {deepEqual( Stem("beißend"), "beissend");});
test("beissenden -> beissend", function() {deepEqual( Stem("beissenden"), "beissend");});
test("beisst -> beisst", function() {deepEqual( Stem("beisst"), "beisst");});
test("beißt -> beisst", function() {deepEqual( Stem("beißt"), "beisst");});
test("beistand -> beistand", function() {deepEqual( Stem("beistand"), "beistand");});
test("beistehen -> beisteh", function() {deepEqual( Stem("beistehen"), "beisteh");});
test("beisteher -> beisteh", function() {deepEqual( Stem("beisteher"), "beisteh");});
test("beistimmendes -> beistimm", function() {deepEqual( Stem("beistimmendes"), "beistimm");});
test("beistimmt -> beistimmt", function() {deepEqual( Stem("beistimmt"), "beistimmt");});
test("beistimmte -> beistimmt", function() {deepEqual( Stem("beistimmte"), "beistimmt");});
test("beistimmung -> beistimm", function() {deepEqual( Stem("beistimmung"), "beistimm");});
test("beitrag -> beitrag", function() {deepEqual( Stem("beitrag"), "beitrag");});
test("beitragen -> beitrag", function() {deepEqual( Stem("beitragen"), "beitrag");});
test("beitritt -> beitritt", function() {deepEqual( Stem("beitritt"), "beitritt");});
test("beitritte -> beitritt", function() {deepEqual( Stem("beitritte"), "beitritt");});
test("beiwohnen -> beiwohn", function() {deepEqual( Stem("beiwohnen"), "beiwohn");});
test("beizeiten -> beizeit", function() {deepEqual( Stem("beizeiten"), "beizeit");});
test("beizte -> beizt", function() {deepEqual( Stem("beizte"), "beizt");});
test("beizubringen -> beizubring", function() {deepEqual( Stem("beizubringen"), "beizubring");});
test("beizulegen -> beizuleg", function() {deepEqual( Stem("beizulegen"), "beizuleg");});
test("beizuspringen -> beizuspring", function() {deepEqual( Stem("beizuspringen"), "beizuspring");});
test("beizustehen -> beizusteh", function() {deepEqual( Stem("beizustehen"), "beizusteh");});
test("beizusteuern -> beizusteu", function() {deepEqual( Stem("beizusteuern"), "beizusteu");});
test("beizutragen -> beizutrag", function() {deepEqual( Stem("beizutragen"), "beizutrag");});
test("beizutreiben -> beizutreib", function() {deepEqual( Stem("beizutreiben"), "beizutreib");});
test("beizutreten -> beizutret", function() {deepEqual( Stem("beizutreten"), "beizutret");});
test("beizuwohnen -> beizuwohn", function() {deepEqual( Stem("beizuwohnen"), "beizuwohn");});
test("bejahend -> bejah", function() {deepEqual( Stem("bejahend"), "bejah");});
test("bejahrten -> bejahrt", function() {deepEqual( Stem("bejahrten"), "bejahrt");});
test("bejahung -> bejah", function() {deepEqual( Stem("bejahung"), "bejah");});
test("bekam -> bekam", function() {deepEqual( Stem("bekam"), "bekam");});
test("bekäme -> bekam", function() {deepEqual( Stem("bekäme"), "bekam");});
test("bekamen -> bekam", function() {deepEqual( Stem("bekamen"), "bekam");});
test("bekämen -> bekam", function() {deepEqual( Stem("bekämen"), "bekam");});
test("bekämpfen -> bekampf", function() {deepEqual( Stem("bekämpfen"), "bekampf");});
test("bekämpft -> bekampft", function() {deepEqual( Stem("bekämpft"), "bekampft");});
test("bekämpfung -> bekampf", function() {deepEqual( Stem("bekämpfung"), "bekampf");});
test("bekannt -> bekannt", function() {deepEqual( Stem("bekannt"), "bekannt");});
test("bekannte -> bekannt", function() {deepEqual( Stem("bekannte"), "bekannt");});
test("bekannten -> bekannt", function() {deepEqual( Stem("bekannten"), "bekannt");});
test("bekanntgeworden -> bekanntgeword", function() {deepEqual( Stem("bekanntgeworden"), "bekanntgeword");});
test("bekanntlich -> bekannt", function() {deepEqual( Stem("bekanntlich"), "bekannt");});
test("bekanntschaft -> bekanntschaft", function() {deepEqual( Stem("bekanntschaft"), "bekanntschaft");});
test("bekanntschaften -> bekanntschaft", function() {deepEqual( Stem("bekanntschaften"), "bekanntschaft");});
test("bekehre -> bekehr", function() {deepEqual( Stem("bekehre"), "bekehr");});
test("bekehren -> bekehr", function() {deepEqual( Stem("bekehren"), "bekehr");});
test("bekehrer -> bekehr", function() {deepEqual( Stem("bekehrer"), "bekehr");});
test("bekehret -> bekehret", function() {deepEqual( Stem("bekehret"), "bekehret");});
test("bekehrt -> bekehrt", function() {deepEqual( Stem("bekehrt"), "bekehrt");});
test("bekehrten -> bekehrt", function() {deepEqual( Stem("bekehrten"), "bekehrt");});
test("bekehrung -> bekehr", function() {deepEqual( Stem("bekehrung"), "bekehr");});
test("bekenne -> bekenn", function() {deepEqual( Stem("bekenne"), "bekenn");});
test("bekennen -> bekenn", function() {deepEqual( Stem("bekennen"), "bekenn");});
test("bekennt -> bekennt", function() {deepEqual( Stem("bekennt"), "bekennt");});
test("bekenntnis -> bekenntnis", function() {deepEqual( Stem("bekenntnis"), "bekenntnis");});
test("bekenntnisse -> bekenntnis", function() {deepEqual( Stem("bekenntnisse"), "bekenntnis");});
test("bekenntnissen -> bekenntnis", function() {deepEqual( Stem("bekenntnissen"), "bekenntnis");});
test("bekir -> bekir", function() {deepEqual( Stem("bekir"), "bekir");});
test("beklagen -> beklag", function() {deepEqual( Stem("beklagen"), "beklag");});
test("beklagenswert -> beklagenswert", function() {deepEqual( Stem("beklagenswert"), "beklagenswert");});
test("beklagt -> beklagt", function() {deepEqual( Stem("beklagt"), "beklagt");});
test("beklagte -> beklagt", function() {deepEqual( Stem("beklagte"), "beklagt");});
test("beklebt -> beklebt", function() {deepEqual( Stem("beklebt"), "beklebt");});
test("bekleiden -> bekleid", function() {deepEqual( Stem("bekleiden"), "bekleid");});
test("bekleidet -> bekleidet", function() {deepEqual( Stem("bekleidet"), "bekleidet");});
test("bekleidete -> bekleidet", function() {deepEqual( Stem("bekleidete"), "bekleidet");});
test("bekleidung -> bekleid", function() {deepEqual( Stem("bekleidung"), "bekleid");});
test("beklemmung -> beklemm", function() {deepEqual( Stem("beklemmung"), "beklemm");});
test("beklommen -> beklomm", function() {deepEqual( Stem("beklommen"), "beklomm");});
test("beklommenheit -> beklomm", function() {deepEqual( Stem("beklommenheit"), "beklomm");});
test("bekomm -> bekomm", function() {deepEqual( Stem("bekomm"), "bekomm");});
test("bekomme -> bekomm", function() {deepEqual( Stem("bekomme"), "bekomm");});
test("bekommen -> bekomm", function() {deepEqual( Stem("bekommen"), "bekomm");});
test("bekommst -> bekomm", function() {deepEqual( Stem("bekommst"), "bekomm");});
test("bekommt -> bekommt", function() {deepEqual( Stem("bekommt"), "bekommt");});
test("beköstigung -> bekost", function() {deepEqual( Stem("beköstigung"), "bekost");});
test("bekräftigt -> bekraftigt", function() {deepEqual( Stem("bekräftigt"), "bekraftigt");});
test("bekräftigung -> bekraft", function() {deepEqual( Stem("bekräftigung"), "bekraft");});
test("bekräftigungen -> bekraft", function() {deepEqual( Stem("bekräftigungen"), "bekraft");});
test("bekränzt -> bekranzt", function() {deepEqual( Stem("bekränzt"), "bekranzt");});
test("bekreuzte -> bekreuzt", function() {deepEqual( Stem("bekreuzte"), "bekreuzt");});
test("bekreuzten -> bekreuzt", function() {deepEqual( Stem("bekreuzten"), "bekreuzt");});
test("bekriegten -> bekriegt", function() {deepEqual( Stem("bekriegten"), "bekriegt");});
test("bekümmern -> bekumm", function() {deepEqual( Stem("bekümmern"), "bekumm");});
test("bekümmert -> bekummert", function() {deepEqual( Stem("bekümmert"), "bekummert");});
test("bekümmerte -> bekummert", function() {deepEqual( Stem("bekümmerte"), "bekummert");});
test("beladen -> belad", function() {deepEqual( Stem("beladen"), "belad");});
test("beladenes -> belad", function() {deepEqual( Stem("beladenes"), "belad");});
test("belagern -> belag", function() {deepEqual( Stem("belagern"), "belag");});
test("belagert -> belagert", function() {deepEqual( Stem("belagert"), "belagert");});
test("belagerung -> belager", function() {deepEqual( Stem("belagerung"), "belager");});
test("belanglos -> belanglos", function() {deepEqual( Stem("belanglos"), "belanglos");});
test("belangloseste -> belanglos", function() {deepEqual( Stem("belangloseste"), "belanglos");});
test("belangt -> belangt", function() {deepEqual( Stem("belangt"), "belangt");});
test("belassen -> belass", function() {deepEqual( Stem("belassen"), "belass");});
test("belastend -> belast", function() {deepEqual( Stem("belastend"), "belast");});
test("belastet -> belastet", function() {deepEqual( Stem("belastet"), "belastet");});
test("belastete -> belastet", function() {deepEqual( Stem("belastete"), "belastet");});
test("belästigen -> belast", function() {deepEqual( Stem("belästigen"), "belast");});
test("belästigt -> belastigt", function() {deepEqual( Stem("belästigt"), "belastigt");});
test("belästigte -> belastigt", function() {deepEqual( Stem("belästigte"), "belastigt");});
test("belastung -> belast", function() {deepEqual( Stem("belastung"), "belast");});
test("belaubte -> belaubt", function() {deepEqual( Stem("belaubte"), "belaubt");});
test("belaubter -> belaubt", function() {deepEqual( Stem("belaubter"), "belaubt");});
test("belebbar -> belebbar", function() {deepEqual( Stem("belebbar"), "belebbar");});
test("belebe -> beleb", function() {deepEqual( Stem("belebe"), "beleb");});
test("beleben -> beleb", function() {deepEqual( Stem("beleben"), "beleb");});
test("belebende -> beleb", function() {deepEqual( Stem("belebende"), "beleb");});
test("belebt -> belebt", function() {deepEqual( Stem("belebt"), "belebt");});
test("belebte -> belebt", function() {deepEqual( Stem("belebte"), "belebt");});
test("belebtes -> belebt", function() {deepEqual( Stem("belebtes"), "belebt");});
test("belege -> beleg", function() {deepEqual( Stem("belege"), "beleg");});
test("belegen -> beleg", function() {deepEqual( Stem("belegen"), "beleg");});
test("belegexemplar -> belegexemplar", function() {deepEqual( Stem("belegexemplar"), "belegexemplar");});
test("belegt -> belegt", function() {deepEqual( Stem("belegt"), "belegt");});
test("belehren -> belehr", function() {deepEqual( Stem("belehren"), "belehr");});
test("belehrt -> belehrt", function() {deepEqual( Stem("belehrt"), "belehrt");});
test("belehrte -> belehrt", function() {deepEqual( Stem("belehrte"), "belehrt");});
test("belehrung -> belehr", function() {deepEqual( Stem("belehrung"), "belehr");});
test("beleibt -> beleibt", function() {deepEqual( Stem("beleibt"), "beleibt");});
test("beleibtheit -> beleibt", function() {deepEqual( Stem("beleibtheit"), "beleibt");});
test("beleidigen -> beleid", function() {deepEqual( Stem("beleidigen"), "beleid");});
test("beleidigend -> beleid", function() {deepEqual( Stem("beleidigend"), "beleid");});
test("beleidigender -> beleid", function() {deepEqual( Stem("beleidigender"), "beleid");});
test("beleidigendste -> beleid", function() {deepEqual( Stem("beleidigendste"), "beleid");});
test("beleidigt -> beleidigt", function() {deepEqual( Stem("beleidigt"), "beleidigt");});
test("beleidigte -> beleidigt", function() {deepEqual( Stem("beleidigte"), "beleidigt");});
test("beleidigten -> beleidigt", function() {deepEqual( Stem("beleidigten"), "beleidigt");});
test("beleidigung -> beleid", function() {deepEqual( Stem("beleidigung"), "beleid");});
test("beleidigungen -> beleid", function() {deepEqual( Stem("beleidigungen"), "beleid");});
test("beleidung -> beleid", function() {deepEqual( Stem("beleidung"), "beleid");});
test("beleuchtet -> beleuchtet", function() {deepEqual( Stem("beleuchtet"), "beleuchtet");});
test("beleuchtete -> beleuchtet", function() {deepEqual( Stem("beleuchtete"), "beleuchtet");});
test("beleuchteten -> beleuchtet", function() {deepEqual( Stem("beleuchteten"), "beleuchtet");});
test("beleuchtung -> beleucht", function() {deepEqual( Stem("beleuchtung"), "beleucht");});
test("belial -> belial", function() {deepEqual( Stem("belial"), "belial");});
test("belieben -> belieb", function() {deepEqual( Stem("belieben"), "belieb");});
test("beliebig -> belieb", function() {deepEqual( Stem("beliebig"), "belieb");});
test("beliebige -> belieb", function() {deepEqual( Stem("beliebige"), "belieb");});
test("beliebigen -> belieb", function() {deepEqual( Stem("beliebigen"), "belieb");});
test("beliebt -> beliebt", function() {deepEqual( Stem("beliebt"), "beliebt");});
test("beliebte -> beliebt", function() {deepEqual( Stem("beliebte"), "beliebt");});
test("beliebten -> beliebt", function() {deepEqual( Stem("beliebten"), "beliebt");});
test("beliefen -> belief", function() {deepEqual( Stem("beliefen"), "belief");});
test("bellen -> bell", function() {deepEqual( Stem("bellen"), "bell");});
test("bellkommando -> bellkommando", function() {deepEqual( Stem("bellkommando"), "bellkommando");});
test("bellprobe -> bellprob", function() {deepEqual( Stem("bellprobe"), "bellprob");});
test("bellstrophe -> bellstroph", function() {deepEqual( Stem("bellstrophe"), "bellstroph");});
test("bellte -> bellt", function() {deepEqual( Stem("bellte"), "bellt");});
test("belobt -> belobt", function() {deepEqual( Stem("belobt"), "belobt");});
test("belobte -> belobt", function() {deepEqual( Stem("belobte"), "belobt");});
test("belog -> belog", function() {deepEqual( Stem("belog"), "belog");});
test("belohnen -> belohn", function() {deepEqual( Stem("belohnen"), "belohn");});
test("belohnt -> belohnt", function() {deepEqual( Stem("belohnt"), "belohnt");});
test("belohnung -> belohn", function() {deepEqual( Stem("belohnung"), "belohn");});
test("belud -> belud", function() {deepEqual( Stem("belud"), "belud");});
test("beluden -> belud", function() {deepEqual( Stem("beluden"), "belud");});
test("belüftung -> beluft", function() {deepEqual( Stem("belüftung"), "beluft");});
test("belügst -> belug", function() {deepEqual( Stem("belügst"), "belug");});
test("belustigen -> belust", function() {deepEqual( Stem("belustigen"), "belust");});
test("belustigt -> belustigt", function() {deepEqual( Stem("belustigt"), "belustigt");});
test("belustigten -> belustigt", function() {deepEqual( Stem("belustigten"), "belustigt");});
test("belustigung -> belust", function() {deepEqual( Stem("belustigung"), "belust");});
test("bemächtigen -> bemacht", function() {deepEqual( Stem("bemächtigen"), "bemacht");});
test("bemalt -> bemalt", function() {deepEqual( Stem("bemalt"), "bemalt");});
test("bemalte -> bemalt", function() {deepEqual( Stem("bemalte"), "bemalt");});
test("bemalten -> bemalt", function() {deepEqual( Stem("bemalten"), "bemalt");});
test("bemaltes -> bemalt", function() {deepEqual( Stem("bemaltes"), "bemalt");});
test("bemassen -> bemass", function() {deepEqual( Stem("bemassen"), "bemass");});
test("bemerke -> bemerk", function() {deepEqual( Stem("bemerke"), "bemerk");});
test("bemerken -> bemerk", function() {deepEqual( Stem("bemerken"), "bemerk");});
test("bemerklich -> bemerk", function() {deepEqual( Stem("bemerklich"), "bemerk");});
test("bemerkt -> bemerkt", function() {deepEqual( Stem("bemerkt"), "bemerkt");});
test("bemerkte -> bemerkt", function() {deepEqual( Stem("bemerkte"), "bemerkt");});
test("bemerkten -> bemerkt", function() {deepEqual( Stem("bemerkten"), "bemerkt");});
test("bemerkung -> bemerk", function() {deepEqual( Stem("bemerkung"), "bemerk");});
test("bemerkungen -> bemerk", function() {deepEqual( Stem("bemerkungen"), "bemerk");});
test("bemesset -> bemesset", function() {deepEqual( Stem("bemesset"), "bemesset");});
test("bemitleiden -> bemitleid", function() {deepEqual( Stem("bemitleiden"), "bemitleid");});
test("bemoosten -> bemoost", function() {deepEqual( Stem("bemoosten"), "bemoost");});
test("bemühen -> bemuh", function() {deepEqual( Stem("bemühen"), "bemuh");});
test("bemühet -> bemuhet", function() {deepEqual( Stem("bemühet"), "bemuhet");});
test("bemüht -> bemuht", function() {deepEqual( Stem("bemüht"), "bemuht");});
test("bemühte -> bemuht", function() {deepEqual( Stem("bemühte"), "bemuht");});
test("bemühung -> bemuh", function() {deepEqual( Stem("bemühung"), "bemuh");});
test("bemühungen -> bemuh", function() {deepEqual( Stem("bemühungen"), "bemuh");});
test("ben -> ben", function() {deepEqual( Stem("ben"), "ben");});
test("benachbarte -> benachbart", function() {deepEqual( Stem("benachbarte"), "benachbart");});
test("benachbarten -> benachbart", function() {deepEqual( Stem("benachbarten"), "benachbart");});
test("benahm -> benahm", function() {deepEqual( Stem("benahm"), "benahm");});
test("benahmen -> benahm", function() {deepEqual( Stem("benahmen"), "benahm");});
test("benannt -> benannt", function() {deepEqual( Stem("benannt"), "benannt");});
test("benannten -> benannt", function() {deepEqual( Stem("benannten"), "benannt");});
test("benediktinerpater -> benediktinerpat", function() {deepEqual( Stem("benediktinerpater"), "benediktinerpat");});
test("benediktus -> benediktus", function() {deepEqual( Stem("benediktus"), "benediktus");});
test("benefizanlass -> benefizanlass", function() {deepEqual( Stem("benefizanlass"), "benefizanlass");});
test("benehmen -> benehm", function() {deepEqual( Stem("benehmen"), "benehm");});
test("benehmens -> benehm", function() {deepEqual( Stem("benehmens"), "benehm");});
test("beneiden -> beneid", function() {deepEqual( Stem("beneiden"), "beneid");});
test("beneidenswürdige -> beneidenswurd", function() {deepEqual( Stem("beneidenswürdige"), "beneidenswurd");});
test("beneidet -> beneidet", function() {deepEqual( Stem("beneidet"), "beneidet");});
test("beneidete -> beneidet", function() {deepEqual( Stem("beneidete"), "beneidet");});
test("benennen -> benenn", function() {deepEqual( Stem("benennen"), "benenn");});
test("benennens -> benenn", function() {deepEqual( Stem("benennens"), "benenn");});
test("benennung -> benenn", function() {deepEqual( Stem("benennung"), "benenn");});
test("benennungen -> benenn", function() {deepEqual( Stem("benennungen"), "benenn");});
test("benetzt -> benetzt", function() {deepEqual( Stem("benetzt"), "benetzt");});
test("benetzte -> benetzt", function() {deepEqual( Stem("benetzte"), "benetzt");});
test("benieselt -> benieselt", function() {deepEqual( Stem("benieselt"), "benieselt");});
test("benimm -> benimm", function() {deepEqual( Stem("benimm"), "benimm");});
test("benimmt -> benimmt", function() {deepEqual( Stem("benimmt"), "benimmt");});
test("benjamin -> benjamin", function() {deepEqual( Stem("benjamin"), "benjamin");});
test("benkert -> benkert", function() {deepEqual( Stem("benkert"), "benkert");});
test("benommen -> benomm", function() {deepEqual( Stem("benommen"), "benomm");});
test("benötigen -> benot", function() {deepEqual( Stem("benötigen"), "benot");});
test("benötigt -> benotigt", function() {deepEqual( Stem("benötigt"), "benotigt");});
test("benötigte -> benotigt", function() {deepEqual( Stem("benötigte"), "benotigt");});
test("benötigten -> benotigt", function() {deepEqual( Stem("benötigten"), "benotigt");});
test("benutzen -> benutz", function() {deepEqual( Stem("benutzen"), "benutz");});
test("benutzt -> benutzt", function() {deepEqual( Stem("benutzt"), "benutzt");});
test("benutzte -> benutzt", function() {deepEqual( Stem("benutzte"), "benutzt");});
test("benützte -> benutzt", function() {deepEqual( Stem("benützte"), "benutzt");});
test("benutzten -> benutzt", function() {deepEqual( Stem("benutzten"), "benutzt");});
test("benützten -> benutzt", function() {deepEqual( Stem("benützten"), "benutzt");});
test("benützung -> benutz", function() {deepEqual( Stem("benützung"), "benutz");});
test("beobachte -> beobacht", function() {deepEqual( Stem("beobachte"), "beobacht");});
test("beobachten -> beobacht", function() {deepEqual( Stem("beobachten"), "beobacht");});
test("beobachtens -> beobacht", function() {deepEqual( Stem("beobachtens"), "beobacht");});
test("beobachter -> beobacht", function() {deepEqual( Stem("beobachter"), "beobacht");});
test("beobachtet -> beobachtet", function() {deepEqual( Stem("beobachtet"), "beobachtet");});
test("beobachtete -> beobachtet", function() {deepEqual( Stem("beobachtete"), "beobachtet");});
test("beobachteten -> beobachtet", function() {deepEqual( Stem("beobachteten"), "beobachtet");});
test("beobachtung -> beobacht", function() {deepEqual( Stem("beobachtung"), "beobacht");});
test("beobachtungen -> beobacht", function() {deepEqual( Stem("beobachtungen"), "beobacht");});
test("beordert -> beordert", function() {deepEqual( Stem("beordert"), "beordert");});
test("bepackt -> bepackt", function() {deepEqual( Stem("bepackt"), "bepackt");});
test("bepflanzt -> bepflanzt", function() {deepEqual( Stem("bepflanzt"), "bepflanzt");});
test("bequem -> bequ", function() {deepEqual( Stem("bequem"), "bequ");});
test("bequeme -> bequem", function() {deepEqual( Stem("bequeme"), "bequem");});
test("bequemen -> bequem", function() {deepEqual( Stem("bequemen"), "bequem");});
test("bequemer -> bequem", function() {deepEqual( Stem("bequemer"), "bequem");});
test("bequemes -> bequem", function() {deepEqual( Stem("bequemes"), "bequem");});
test("bequemliche -> bequem", function() {deepEqual( Stem("bequemliche"), "bequem");});
test("bequemlichkeit -> bequem", function() {deepEqual( Stem("bequemlichkeit"), "bequem");});
test("bequemlichkeiten -> bequem", function() {deepEqual( Stem("bequemlichkeiten"), "bequem");});
test("bequemte -> bequemt", function() {deepEqual( Stem("bequemte"), "bequemt");});
test("beranger -> berang", function() {deepEqual( Stem("beranger"), "berang");});
test("beraten -> berat", function() {deepEqual( Stem("beraten"), "berat");});
test("berater -> berat", function() {deepEqual( Stem("berater"), "berat");});
test("beratschlagen -> beratschlag", function() {deepEqual( Stem("beratschlagen"), "beratschlag");});
test("beratschlagt -> beratschlagt", function() {deepEqual( Stem("beratschlagt"), "beratschlagt");});
test("beratung -> berat", function() {deepEqual( Stem("beratung"), "berat");});
test("beratungen -> berat", function() {deepEqual( Stem("beratungen"), "berat");});
test("beratungsstelle -> beratungsstell", function() {deepEqual( Stem("beratungsstelle"), "beratungsstell");});
test("beratungsstellen -> beratungsstell", function() {deepEqual( Stem("beratungsstellen"), "beratungsstell");});
test("berauben -> beraub", function() {deepEqual( Stem("berauben"), "beraub");});
test("beraubt -> beraubt", function() {deepEqual( Stem("beraubt"), "beraubt");});
test("beraubte -> beraubt", function() {deepEqual( Stem("beraubte"), "beraubt");});
test("beraubten -> beraubt", function() {deepEqual( Stem("beraubten"), "beraubt");});
test("beraubter -> beraubt", function() {deepEqual( Stem("beraubter"), "beraubt");});
test("beraubung -> beraub", function() {deepEqual( Stem("beraubung"), "beraub");});
test("berauscht -> berauscht", function() {deepEqual( Stem("berauscht"), "berauscht");});
test("berchtesgaden -> berchtesgad", function() {deepEqual( Stem("berchtesgaden"), "berchtesgad");});
test("berchtesgadenerland -> berchtesgadenerland", function() {deepEqual( Stem("berchtesgadenerland"), "berchtesgadenerland");});
test("berechnet -> berechnet", function() {deepEqual( Stem("berechnet"), "berechnet");});
test("berechnung -> berechn", function() {deepEqual( Stem("berechnung"), "berechn");});
test("berechtigen -> berecht", function() {deepEqual( Stem("berechtigen"), "berecht");});
test("berechtigt -> berechtigt", function() {deepEqual( Stem("berechtigt"), "berechtigt");});
test("berechtigung -> berecht", function() {deepEqual( Stem("berechtigung"), "berecht");});
test("bereden -> bered", function() {deepEqual( Stem("bereden"), "bered");});
test("beredet -> beredet", function() {deepEqual( Stem("beredet"), "beredet");});
test("beredete -> beredet", function() {deepEqual( Stem("beredete"), "beredet");});
test("beredeten -> beredet", function() {deepEqual( Stem("beredeten"), "beredet");});
test("beredsamkeit -> beredsam", function() {deepEqual( Stem("beredsamkeit"), "beredsam");});
test("beredt -> beredt", function() {deepEqual( Stem("beredt"), "beredt");});
test("beredten -> beredt", function() {deepEqual( Stem("beredten"), "beredt");});
test("beredteste -> beredt", function() {deepEqual( Stem("beredteste"), "beredt");});
test("beredung -> bered", function() {deepEqual( Stem("beredung"), "bered");});
test("beredungen -> bered", function() {deepEqual( Stem("beredungen"), "bered");});
test("beredungsglauben -> beredungsglaub", function() {deepEqual( Stem("beredungsglauben"), "beredungsglaub");});
test("beredungsglaubens -> beredungsglaub", function() {deepEqual( Stem("beredungsglaubens"), "beredungsglaub");});
test("beredungswahrheit -> beredungswahr", function() {deepEqual( Stem("beredungswahrheit"), "beredungswahr");});
test("bereffend -> bereff", function() {deepEqual( Stem("bereffend"), "bereff");});
test("bereich -> bereich", function() {deepEqual( Stem("bereich"), "bereich");});
test("bereichern -> bereich", function() {deepEqual( Stem("bereichern"), "bereich");});
test("bereichert -> bereichert", function() {deepEqual( Stem("bereichert"), "bereichert");});
test("bereicherten -> bereichert", function() {deepEqual( Stem("bereicherten"), "bereichert");});
test("bereicherung -> bereicher", function() {deepEqual( Stem("bereicherung"), "bereicher");});
test("bereiften -> bereift", function() {deepEqual( Stem("bereiften"), "bereift");});
test("bereit -> bereit", function() {deepEqual( Stem("bereit"), "bereit");});
test("bereiten -> bereit", function() {deepEqual( Stem("bereiten"), "bereit");});
test("bereitet -> bereitet", function() {deepEqual( Stem("bereitet"), "bereitet");});
test("bereitete -> bereitet", function() {deepEqual( Stem("bereitete"), "bereitet");});
test("bereiteten -> bereitet", function() {deepEqual( Stem("bereiteten"), "bereitet");});
test("bereitlagen -> bereitlag", function() {deepEqual( Stem("bereitlagen"), "bereitlag");});
test("bereitliege -> bereitlieg", function() {deepEqual( Stem("bereitliege"), "bereitlieg");});
test("bereits -> bereit", function() {deepEqual( Stem("bereits"), "bereit");});
test("bereitschaft -> bereitschaft", function() {deepEqual( Stem("bereitschaft"), "bereitschaft");});
test("bereitstand -> bereitstand", function() {deepEqual( Stem("bereitstand"), "bereitstand");});
test("bereitstellen -> bereitstell", function() {deepEqual( Stem("bereitstellen"), "bereitstell");});
test("bereitung -> bereit", function() {deepEqual( Stem("bereitung"), "bereit");});
test("bereitwillig -> bereitwill", function() {deepEqual( Stem("bereitwillig"), "bereitwill");});
test("bereitwilligkeit -> bereitwill", function() {deepEqual( Stem("bereitwilligkeit"), "bereitwill");});
test("bereue -> bereu", function() {deepEqual( Stem("bereue"), "bereu");});
test("bereust -> bereust", function() {deepEqual( Stem("bereust"), "bereust");});
test("bereut -> bereut", function() {deepEqual( Stem("bereut"), "bereut");});
test("bereute -> bereut", function() {deepEqual( Stem("bereute"), "bereut");});
test("berg -> berg", function() {deepEqual( Stem("berg"), "berg");});
test("bergamsel -> bergamsel", function() {deepEqual( Stem("bergamsel"), "bergamsel");});
test("berge -> berg", function() {deepEqual( Stem("berge"), "berg");});
test("bergen -> berg", function() {deepEqual( Stem("bergen"), "berg");});
test("bergend -> bergend", function() {deepEqual( Stem("bergend"), "bergend");});
test("berges -> berg", function() {deepEqual( Stem("berges"), "berg");});
test("bergfeuer -> bergfeu", function() {deepEqual( Stem("bergfeuer"), "bergfeu");});
test("bergfeuern -> bergfeu", function() {deepEqual( Stem("bergfeuern"), "bergfeu");});
test("berggeist -> berggeist", function() {deepEqual( Stem("berggeist"), "berggeist");});
test("berggipfel -> berggipfel", function() {deepEqual( Stem("berggipfel"), "berggipfel");});
test("berggipfels -> berggipfel", function() {deepEqual( Stem("berggipfels"), "berggipfel");});
test("berghalde -> berghald", function() {deepEqual( Stem("berghalde"), "berghald");});
test("berghang -> berghang", function() {deepEqual( Stem("berghang"), "berghang");});
test("bergherz -> bergherz", function() {deepEqual( Stem("bergherz"), "bergherz");});
test("berghöhlen -> berghohl", function() {deepEqual( Stem("berghöhlen"), "berghohl");});
test("bergier -> bergi", function() {deepEqual( Stem("bergier"), "bergi");});
test("bergigen -> bergig", function() {deepEqual( Stem("bergigen"), "bergig");});
test("bergkessel -> bergkessel", function() {deepEqual( Stem("bergkessel"), "bergkessel");});
test("bergkräuter -> bergkraut", function() {deepEqual( Stem("bergkräuter"), "bergkraut");});
test("bergland -> bergland", function() {deepEqual( Stem("bergland"), "bergland");});
test("berglüften -> bergluft", function() {deepEqual( Stem("berglüften"), "bergluft");});
test("bergmann -> bergmann", function() {deepEqual( Stem("bergmann"), "bergmann");});
test("bergnase -> bergnas", function() {deepEqual( Stem("bergnase"), "bergnas");});
test("bergnebel -> bergnebel", function() {deepEqual( Stem("bergnebel"), "bergnebel");});
test("bergraben -> bergrab", function() {deepEqual( Stem("bergraben"), "bergrab");});
test("bergschatten -> bergschatt", function() {deepEqual( Stem("bergschatten"), "bergschatt");});
test("bergschenke -> bergschenk", function() {deepEqual( Stem("bergschenke"), "bergschenk");});
test("bergschlucht -> bergschlucht", function() {deepEqual( Stem("bergschlucht"), "bergschlucht");});
test("bergschluchten -> bergschlucht", function() {deepEqual( Stem("bergschluchten"), "bergschlucht");});
test("bergstämmen -> bergstamm", function() {deepEqual( Stem("bergstämmen"), "bergstamm");});
test("bergsteiger -> bergsteig", function() {deepEqual( Stem("bergsteiger"), "bergsteig");});
test("bergstimmen -> bergstimm", function() {deepEqual( Stem("bergstimmen"), "bergstimm");});
test("bergstock -> bergstock", function() {deepEqual( Stem("bergstock"), "bergstock");});
test("bergwald -> bergwald", function() {deepEqual( Stem("bergwald"), "bergwald");});
test("bergwaldes -> bergwald", function() {deepEqual( Stem("bergwaldes"), "bergwald");});
test("bergwand -> bergwand", function() {deepEqual( Stem("bergwand"), "bergwand");});
test("bergwasser -> bergwass", function() {deepEqual( Stem("bergwasser"), "bergwass");});
test("bergweg -> bergweg", function() {deepEqual( Stem("bergweg"), "bergweg");});
test("bergwege -> bergweg", function() {deepEqual( Stem("bergwege"), "bergweg");});
test("bergwegen -> bergweg", function() {deepEqual( Stem("bergwegen"), "bergweg");});
test("bergwellen -> bergwell", function() {deepEqual( Stem("bergwellen"), "bergwell");});
test("bergwerk -> bergwerk", function() {deepEqual( Stem("bergwerk"), "bergwerk");});
test("bergwiesen -> bergwies", function() {deepEqual( Stem("bergwiesen"), "bergwies");});
test("bergwind -> bergwind", function() {deepEqual( Stem("bergwind"), "bergwind");});
test("bergzinne -> bergzinn", function() {deepEqual( Stem("bergzinne"), "bergzinn");});
test("berhren -> berhr", function() {deepEqual( Stem("berhren"), "berhr");});
test("bericht -> bericht", function() {deepEqual( Stem("bericht"), "bericht");});
test("berichte -> bericht", function() {deepEqual( Stem("berichte"), "bericht");});
test("berichten -> bericht", function() {deepEqual( Stem("berichten"), "bericht");});
test("berichtet -> berichtet", function() {deepEqual( Stem("berichtet"), "berichtet");});
test("berichtete -> berichtet", function() {deepEqual( Stem("berichtete"), "berichtet");});
test("berichtigung -> bericht", function() {deepEqual( Stem("berichtigung"), "bericht");});
test("beriechen -> beriech", function() {deepEqual( Stem("beriechen"), "beriech");});
test("berief -> berief", function() {deepEqual( Stem("berief"), "berief");});
test("berieselt -> berieselt", function() {deepEqual( Stem("berieselt"), "berieselt");});
test("berieten -> beriet", function() {deepEqual( Stem("berieten"), "beriet");});
test("berlin -> berlin", function() {deepEqual( Stem("berlin"), "berlin");});
test("berliner -> berlin", function() {deepEqual( Stem("berliner"), "berlin");});
test("berlinfergus -> berlinfergus", function() {deepEqual( Stem("berlinfergus"), "berlinfergus");});
test("bern -> bern", function() {deepEqual( Stem("bern"), "bern");});
test("bernan -> bernan", function() {deepEqual( Stem("bernan"), "bernan");});
test("bernard -> bernard", function() {deepEqual( Stem("bernard"), "bernard");});
test("berner -> bern", function() {deepEqual( Stem("berner"), "bern");});
test("bernischen -> bernisch", function() {deepEqual( Stem("bernischen"), "bernisch");});
test("berns -> bern", function() {deepEqual( Stem("berns"), "bern");});
test("bernstein -> bernstein", function() {deepEqual( Stem("bernstein"), "bernstein");});
test("bernwas -> bernwas", function() {deepEqual( Stem("bernwas"), "bernwas");});
test("berthold -> berthold", function() {deepEqual( Stem("berthold"), "berthold");});
test("berücken -> beruck", function() {deepEqual( Stem("berücken"), "beruck");});
test("berücksichtigen -> berucksicht", function() {deepEqual( Stem("berücksichtigen"), "berucksicht");});
test("berücksichtigt -> berucksichtigt", function() {deepEqual( Stem("berücksichtigt"), "berucksichtigt");});
test("berückt -> beruckt", function() {deepEqual( Stem("berückt"), "beruckt");});
test("beruf -> beruf", function() {deepEqual( Stem("beruf"), "beruf");});
test("berufen -> beruf", function() {deepEqual( Stem("berufen"), "beruf");});
test("berufenen -> beruf", function() {deepEqual( Stem("berufenen"), "beruf");});
test("beruflichen -> beruf", function() {deepEqual( Stem("beruflichen"), "beruf");});
test("berufsabsichten -> berufsabsicht", function() {deepEqual( Stem("berufsabsichten"), "berufsabsicht");});
test("berufsgenossen -> berufsgenoss", function() {deepEqual( Stem("berufsgenossen"), "berufsgenoss");});
test("berufsmäßigen -> berufsmass", function() {deepEqual( Stem("berufsmäßigen"), "berufsmass");});
test("berufsmäßiger -> berufsmass", function() {deepEqual( Stem("berufsmäßiger"), "berufsmass");});
test("berufsschulen -> berufsschul", function() {deepEqual( Stem("berufsschulen"), "berufsschul");});
test("berufssoldat -> berufssoldat", function() {deepEqual( Stem("berufssoldat"), "berufssoldat");});
test("berufswunsch -> berufswunsch", function() {deepEqual( Stem("berufswunsch"), "berufswunsch");});
test("berufung -> beruf", function() {deepEqual( Stem("berufung"), "beruf");});
test("beruhe -> beruh", function() {deepEqual( Stem("beruhe"), "beruh");});
test("beruhen -> beruh", function() {deepEqual( Stem("beruhen"), "beruh");});
test("beruhenden -> beruh", function() {deepEqual( Stem("beruhenden"), "beruh");});
test("beruhet -> beruhet", function() {deepEqual( Stem("beruhet"), "beruhet");});
test("beruhigen -> beruh", function() {deepEqual( Stem("beruhigen"), "beruh");});
test("beruhigend -> beruh", function() {deepEqual( Stem("beruhigend"), "beruh");});
test("beruhigenden -> beruh", function() {deepEqual( Stem("beruhigenden"), "beruh");});
test("beruhigt -> beruhigt", function() {deepEqual( Stem("beruhigt"), "beruhigt");});
test("beruhigte -> beruhigt", function() {deepEqual( Stem("beruhigte"), "beruhigt");});
test("beruhigten -> beruhigt", function() {deepEqual( Stem("beruhigten"), "beruhigt");});
test("beruhigung -> beruh", function() {deepEqual( Stem("beruhigung"), "beruh");});
test("beruhigungsmittel -> beruhigungsmittel", function() {deepEqual( Stem("beruhigungsmittel"), "beruhigungsmittel");});
test("berühmen -> beruhm", function() {deepEqual( Stem("berühmen"), "beruhm");});
test("berühmt -> beruhmt", function() {deepEqual( Stem("berühmt"), "beruhmt");});
test("berühmte -> beruhmt", function() {deepEqual( Stem("berühmte"), "beruhmt");});
test("berühmten -> beruhmt", function() {deepEqual( Stem("berühmten"), "beruhmt");});
test("berühmtesten -> beruhmt", function() {deepEqual( Stem("berühmtesten"), "beruhmt");});
test("berühmtheit -> beruhmt", function() {deepEqual( Stem("berühmtheit"), "beruhmt");});
test("berühre -> beruhr", function() {deepEqual( Stem("berühre"), "beruhr");});
test("berühren -> beruhr", function() {deepEqual( Stem("berühren"), "beruhr");});
test("berührende -> beruhr", function() {deepEqual( Stem("berührende"), "beruhr");});
test("berührt -> beruhrt", function() {deepEqual( Stem("berührt"), "beruhrt");});
test("berührte -> beruhrt", function() {deepEqual( Stem("berührte"), "beruhrt");});
test("berührten -> beruhrt", function() {deepEqual( Stem("berührten"), "beruhrt");});
test("berührung -> beruhr", function() {deepEqual( Stem("berührung"), "beruhr");});
test("beruht -> beruht", function() {deepEqual( Stem("beruht"), "beruht");});
test("beruhte -> beruht", function() {deepEqual( Stem("beruhte"), "beruht");});
test("berusstem -> berusst", function() {deepEqual( Stem("berusstem"), "berusst");});
test("besäen -> besa", function() {deepEqual( Stem("besäen"), "besa");});
test("besäest -> besa", function() {deepEqual( Stem("besäest"), "besa");});
test("besäet -> besaet", function() {deepEqual( Stem("besäet"), "besaet");});
test("besagt -> besagt", function() {deepEqual( Stem("besagt"), "besagt");});
test("besagte -> besagt", function() {deepEqual( Stem("besagte"), "besagt");});
test("besagtem -> besagt", function() {deepEqual( Stem("besagtem"), "besagt");});
test("besagten -> besagt", function() {deepEqual( Stem("besagten"), "besagt");});
test("besagtes -> besagt", function() {deepEqual( Stem("besagtes"), "besagt");});
test("besah -> besah", function() {deepEqual( Stem("besah"), "besah");});
test("besahen -> besah", function() {deepEqual( Stem("besahen"), "besah");});
test("besamen -> besam", function() {deepEqual( Stem("besamen"), "besam");});
test("besamende -> besam", function() {deepEqual( Stem("besamende"), "besam");});
test("besamt -> besamt", function() {deepEqual( Stem("besamt"), "besamt");});
test("besänftigen -> besanft", function() {deepEqual( Stem("besänftigen"), "besanft");});
test("besänftigt -> besanftigt", function() {deepEqual( Stem("besänftigt"), "besanftigt");});
test("besänftigte -> besanftigt", function() {deepEqual( Stem("besänftigte"), "besanftigt");});
test("besänftigung -> besanft", function() {deepEqual( Stem("besänftigung"), "besanft");});
test("besann -> besann", function() {deepEqual( Stem("besann"), "besann");});
test("besannen -> besann", function() {deepEqual( Stem("besannen"), "besann");});
test("besass -> besass", function() {deepEqual( Stem("besass"), "besass");});
test("besaß -> besass", function() {deepEqual( Stem("besaß"), "besass");});
test("besässe -> besass", function() {deepEqual( Stem("besässe"), "besass");});
test("besassen -> besass", function() {deepEqual( Stem("besassen"), "besass");});
test("besaßen -> besass", function() {deepEqual( Stem("besaßen"), "besass");});
test("besät -> besat", function() {deepEqual( Stem("besät"), "besat");});
test("besaufen -> besauf", function() {deepEqual( Stem("besaufen"), "besauf");});
test("beschädigen -> beschad", function() {deepEqual( Stem("beschädigen"), "beschad");});
test("beschädigt -> beschadigt", function() {deepEqual( Stem("beschädigt"), "beschadigt");});
test("beschädigte -> beschadigt", function() {deepEqual( Stem("beschädigte"), "beschadigt");});
test("beschädigten -> beschadigt", function() {deepEqual( Stem("beschädigten"), "beschadigt");});
test("beschaffen -> beschaff", function() {deepEqual( Stem("beschaffen"), "beschaff");});
test("beschaffenen -> beschaff", function() {deepEqual( Stem("beschaffenen"), "beschaff");});
test("beschaffenheit -> beschaff", function() {deepEqual( Stem("beschaffenheit"), "beschaff");});
test("beschäftige -> beschaft", function() {deepEqual( Stem("beschäftige"), "beschaft");});
test("beschäftigen -> beschaft", function() {deepEqual( Stem("beschäftigen"), "beschaft");});
test("beschäftigt -> beschaftigt", function() {deepEqual( Stem("beschäftigt"), "beschaftigt");});
test("beschäftigte -> beschaftigt", function() {deepEqual( Stem("beschäftigte"), "beschaftigt");});
test("beschäftigten -> beschaftigt", function() {deepEqual( Stem("beschäftigten"), "beschaftigt");});
test("beschäftigter -> beschaftigt", function() {deepEqual( Stem("beschäftigter"), "beschaftigt");});
test("beschäftigung -> beschaft", function() {deepEqual( Stem("beschäftigung"), "beschaft");});
test("beschämen -> bescham", function() {deepEqual( Stem("beschämen"), "bescham");});
test("beschämt -> beschamt", function() {deepEqual( Stem("beschämt"), "beschamt");});
test("beschämte -> beschamt", function() {deepEqual( Stem("beschämte"), "beschamt");});
test("beschattet -> beschattet", function() {deepEqual( Stem("beschattet"), "beschattet");});
test("beschaulich -> beschaulich", function() {deepEqual( Stem("beschaulich"), "beschaulich");});
test("beschaulichen -> beschaulich", function() {deepEqual( Stem("beschaulichen"), "beschaulich");});
test("beschaulichkeit -> beschaulich", function() {deepEqual( Stem("beschaulichkeit"), "beschaulich");});
test("beschaust -> beschaust", function() {deepEqual( Stem("beschaust"), "beschaust");});
test("beschaute -> beschaut", function() {deepEqual( Stem("beschaute"), "beschaut");});
test("bescheid -> bescheid", function() {deepEqual( Stem("bescheid"), "bescheid");});
test("bescheiden -> bescheid", function() {deepEqual( Stem("bescheiden"), "bescheid");});
test("bescheidend -> bescheid", function() {deepEqual( Stem("bescheidend"), "bescheid");});
test("bescheidenem -> bescheid", function() {deepEqual( Stem("bescheidenem"), "bescheid");});
test("bescheidenen -> bescheid", function() {deepEqual( Stem("bescheidenen"), "bescheid");});
test("bescheidener -> bescheid", function() {deepEqual( Stem("bescheidener"), "bescheid");});
test("bescheidenere -> bescheiden", function() {deepEqual( Stem("bescheidenere"), "bescheiden");});
test("bescheidenes -> bescheid", function() {deepEqual( Stem("bescheidenes"), "bescheid");});
test("bescheidenheit -> bescheid", function() {deepEqual( Stem("bescheidenheit"), "bescheid");});
test("bescheinen -> beschein", function() {deepEqual( Stem("bescheinen"), "beschein");});
test("beschenkt -> beschenkt", function() {deepEqual( Stem("beschenkt"), "beschenkt");});
test("bescherung -> bescher", function() {deepEqual( Stem("bescherung"), "bescher");});
test("beschieden -> beschied", function() {deepEqual( Stem("beschieden"), "beschied");});
test("beschien -> beschi", function() {deepEqual( Stem("beschien"), "beschi");});
test("beschienenen -> beschien", function() {deepEqual( Stem("beschienenen"), "beschien");});
test("beschimmelten -> beschimmelt", function() {deepEqual( Stem("beschimmelten"), "beschimmelt");});
test("beschimpft -> beschimpft", function() {deepEqual( Stem("beschimpft"), "beschimpft");});
test("beschimpfte -> beschimpft", function() {deepEqual( Stem("beschimpfte"), "beschimpft");});
test("beschimpfung -> beschimpf", function() {deepEqual( Stem("beschimpfung"), "beschimpf");});
test("beschirmt -> beschirmt", function() {deepEqual( Stem("beschirmt"), "beschirmt");});
test("beschirmung -> beschirm", function() {deepEqual( Stem("beschirmung"), "beschirm");});
test("beschlag -> beschlag", function() {deepEqual( Stem("beschlag"), "beschlag");});
test("beschlagnahmt -> beschlagnahmt", function() {deepEqual( Stem("beschlagnahmt"), "beschlagnahmt");});
test("beschleunigen -> beschleun", function() {deepEqual( Stem("beschleunigen"), "beschleun");});
test("beschleunigt -> beschleunigt", function() {deepEqual( Stem("beschleunigt"), "beschleunigt");});
test("beschleunigte -> beschleunigt", function() {deepEqual( Stem("beschleunigte"), "beschleunigt");});
test("beschleunigung -> beschleun", function() {deepEqual( Stem("beschleunigung"), "beschleun");});
test("beschlich -> beschlich", function() {deepEqual( Stem("beschlich"), "beschlich");});
test("beschliessen -> beschliess", function() {deepEqual( Stem("beschliessen"), "beschliess");});
test("beschloss -> beschloss", function() {deepEqual( Stem("beschloss"), "beschloss");});
test("beschloß -> beschloss", function() {deepEqual( Stem("beschloß"), "beschloss");});
test("beschlossen -> beschloss", function() {deepEqual( Stem("beschlossen"), "beschloss");});
test("beschlossenen -> beschloss", function() {deepEqual( Stem("beschlossenen"), "beschloss");});
test("beschluss -> beschluss", function() {deepEqual( Stem("beschluss"), "beschluss");});
test("beschmiert -> beschmiert", function() {deepEqual( Stem("beschmiert"), "beschmiert");});
test("beschmierte -> beschmiert", function() {deepEqual( Stem("beschmierte"), "beschmiert");});
test("beschneiden -> beschneid", function() {deepEqual( Stem("beschneiden"), "beschneid");});
test("beschneidung -> beschneid", function() {deepEqual( Stem("beschneidung"), "beschneid");});
test("beschneit -> beschneit", function() {deepEqual( Stem("beschneit"), "beschneit");});
test("beschnitt -> beschnitt", function() {deepEqual( Stem("beschnitt"), "beschnitt");});
test("beschnitten -> beschnitt", function() {deepEqual( Stem("beschnitten"), "beschnitt");});
test("beschnüffelte -> beschnuffelt", function() {deepEqual( Stem("beschnüffelte"), "beschnuffelt");});
test("beschönigen -> beschon", function() {deepEqual( Stem("beschönigen"), "beschon");});
test("beschönigt -> beschonigt", function() {deepEqual( Stem("beschönigt"), "beschonigt");});
test("beschränken -> beschrank", function() {deepEqual( Stem("beschränken"), "beschrank");});
test("beschränkt -> beschrankt", function() {deepEqual( Stem("beschränkt"), "beschrankt");});
test("beschränkte -> beschrankt", function() {deepEqual( Stem("beschränkte"), "beschrankt");});
test("beschränkteste -> beschrankt", function() {deepEqual( Stem("beschränkteste"), "beschrankt");});
test("beschränktheit -> beschrankt", function() {deepEqual( Stem("beschränktheit"), "beschrankt");});
test("beschreiben -> beschreib", function() {deepEqual( Stem("beschreiben"), "beschreib");});
test("beschreibt -> beschreibt", function() {deepEqual( Stem("beschreibt"), "beschreibt");});
test("beschreibung -> beschreib", function() {deepEqual( Stem("beschreibung"), "beschreib");});
test("beschrieb -> beschrieb", function() {deepEqual( Stem("beschrieb"), "beschrieb");});
test("beschriebe -> beschrieb", function() {deepEqual( Stem("beschriebe"), "beschrieb");});
test("beschrieben -> beschrieb", function() {deepEqual( Stem("beschrieben"), "beschrieb");});
test("beschriebene -> beschrieb", function() {deepEqual( Stem("beschriebene"), "beschrieb");});
test("beschriebenen -> beschrieb", function() {deepEqual( Stem("beschriebenen"), "beschrieb");});
test("beschritt -> beschritt", function() {deepEqual( Stem("beschritt"), "beschritt");});
test("beschuhte -> beschuht", function() {deepEqual( Stem("beschuhte"), "beschuht");});
test("beschuldigungen -> beschuld", function() {deepEqual( Stem("beschuldigungen"), "beschuld");});
test("beschützen -> beschutz", function() {deepEqual( Stem("beschützen"), "beschutz");});
test("beschützer -> beschutz", function() {deepEqual( Stem("beschützer"), "beschutz");});
test("beschützern -> beschutz", function() {deepEqual( Stem("beschützern"), "beschutz");});
test("beschützt -> beschutzt", function() {deepEqual( Stem("beschützt"), "beschutzt");});
test("beschweige -> beschweig", function() {deepEqual( Stem("beschweige"), "beschweig");});
test("beschweigen -> beschweig", function() {deepEqual( Stem("beschweigen"), "beschweig");});
test("beschwer -> beschw", function() {deepEqual( Stem("beschwer"), "beschw");});
test("beschwerden -> beschwerd", function() {deepEqual( Stem("beschwerden"), "beschwerd");});
test("beschweren -> beschw", function() {deepEqual( Stem("beschweren"), "beschw");});
test("beschwerliche -> beschw", function() {deepEqual( Stem("beschwerliche"), "beschw");});
test("beschwerlichkeiten -> beschwer", function() {deepEqual( Stem("beschwerlichkeiten"), "beschwer");});
test("beschwert -> beschwert", function() {deepEqual( Stem("beschwert"), "beschwert");});
test("beschwerte -> beschwert", function() {deepEqual( Stem("beschwerte"), "beschwert");});
test("beschwerung -> beschwer", function() {deepEqual( Stem("beschwerung"), "beschwer");});
test("beschwichtigen -> beschwicht", function() {deepEqual( Stem("beschwichtigen"), "beschwicht");});
test("beschwor -> beschwor", function() {deepEqual( Stem("beschwor"), "beschwor");});
test("beschworen -> beschwor", function() {deepEqual( Stem("beschworen"), "beschwor");});
test("beschwören -> beschwor", function() {deepEqual( Stem("beschwören"), "beschwor");});
test("beschwörer -> beschwor", function() {deepEqual( Stem("beschwörer"), "beschwor");});
test("beschwörung -> beschwor", function() {deepEqual( Stem("beschwörung"), "beschwor");});
test("beschwörungen -> beschwor", function() {deepEqual( Stem("beschwörungen"), "beschwor");});
test("beseelt -> beseelt", function() {deepEqual( Stem("beseelt"), "beseelt");});
test("beseelte -> beseelt", function() {deepEqual( Stem("beseelte"), "beseelt");});
test("beseeltes -> beseelt", function() {deepEqual( Stem("beseeltes"), "beseelt");});
test("besehen -> beseh", function() {deepEqual( Stem("besehen"), "beseh");});
test("besehn -> besehn", function() {deepEqual( Stem("besehn"), "besehn");});
test("beseitigen -> beseit", function() {deepEqual( Stem("beseitigen"), "beseit");});
test("beseitigt -> beseitigt", function() {deepEqual( Stem("beseitigt"), "beseitigt");});
test("beseitigung -> beseit", function() {deepEqual( Stem("beseitigung"), "beseit");});
test("besen -> bes", function() {deepEqual( Stem("besen"), "bes");});
test("besens -> bes", function() {deepEqual( Stem("besens"), "bes");});
test("besenstiel -> besenstiel", function() {deepEqual( Stem("besenstiel"), "besenstiel");});
test("besessen -> besess", function() {deepEqual( Stem("besessen"), "besess");});
test("besessener -> besess", function() {deepEqual( Stem("besessener"), "besess");});
test("besetzen -> besetz", function() {deepEqual( Stem("besetzen"), "besetz");});
test("besetzerkneipen -> besetzerkneip", function() {deepEqual( Stem("besetzerkneipen"), "besetzerkneip");});
test("besetzerleben -> besetzerleb", function() {deepEqual( Stem("besetzerleben"), "besetzerleb");});
test("besetzt -> besetzt", function() {deepEqual( Stem("besetzt"), "besetzt");});
test("besetzten -> besetzt", function() {deepEqual( Stem("besetzten"), "besetzt");});
test("besichtigen -> besicht", function() {deepEqual( Stem("besichtigen"), "besicht");});
test("besichtigung -> besicht", function() {deepEqual( Stem("besichtigung"), "besicht");});
test("besiegen -> besieg", function() {deepEqual( Stem("besiegen"), "besieg");});
test("besiegt -> besiegt", function() {deepEqual( Stem("besiegt"), "besiegt");});
test("besiegte -> besiegt", function() {deepEqual( Stem("besiegte"), "besiegt");});
test("besinne -> besinn", function() {deepEqual( Stem("besinne"), "besinn");});
test("besinnen -> besinn", function() {deepEqual( Stem("besinnen"), "besinn");});
test("besinnt -> besinnt", function() {deepEqual( Stem("besinnt"), "besinnt");});
test("besinnung -> besinn", function() {deepEqual( Stem("besinnung"), "besinn");});
test("besinnungslose -> besinnungslos", function() {deepEqual( Stem("besinnungslose"), "besinnungslos");});
test("besitz -> besitz", function() {deepEqual( Stem("besitz"), "besitz");});
test("besitze -> besitz", function() {deepEqual( Stem("besitze"), "besitz");});
test("besitzen -> besitz", function() {deepEqual( Stem("besitzen"), "besitz");});
test("besitzer -> besitz", function() {deepEqual( Stem("besitzer"), "besitz");});
test("besitzerin -> besitzerin", function() {deepEqual( Stem("besitzerin"), "besitzerin");});
test("besitzes -> besitz", function() {deepEqual( Stem("besitzes"), "besitz");});
test("besitzlustige -> besitzlust", function() {deepEqual( Stem("besitzlustige"), "besitzlust");});
test("besitzstände -> besitzstand", function() {deepEqual( Stem("besitzstände"), "besitzstand");});
test("besitzt -> besitzt", function() {deepEqual( Stem("besitzt"), "besitzt");});
test("besitztum -> besitztum", function() {deepEqual( Stem("besitztum"), "besitztum");});
test("besitztume -> besitztum", function() {deepEqual( Stem("besitztume"), "besitztum");});
test("besitztümer -> besitztum", function() {deepEqual( Stem("besitztümer"), "besitztum");});
test("besitzungen -> besitz", function() {deepEqual( Stem("besitzungen"), "besitz");});
test("besoldet -> besoldet", function() {deepEqual( Stem("besoldet"), "besoldet");});
test("besondere -> besond", function() {deepEqual( Stem("besondere"), "besond");});
test("besonderem -> besond", function() {deepEqual( Stem("besonderem"), "besond");});
test("besonderen -> besond", function() {deepEqual( Stem("besonderen"), "besond");});
test("besonderer -> besond", function() {deepEqual( Stem("besonderer"), "besond");});
test("besonderes -> besond", function() {deepEqual( Stem("besonderes"), "besond");});
test("besonderheiten -> besond", function() {deepEqual( Stem("besonderheiten"), "besond");});
test("besondern -> besond", function() {deepEqual( Stem("besondern"), "besond");});
test("besonders -> besond", function() {deepEqual( Stem("besonders"), "besond");});
test("besonnen -> besonn", function() {deepEqual( Stem("besonnen"), "besonn");});
test("besonnener -> besonn", function() {deepEqual( Stem("besonnener"), "besonn");});
test("besonnenheit -> besonn", function() {deepEqual( Stem("besonnenheit"), "besonn");});
test("besonnten -> besonnt", function() {deepEqual( Stem("besonnten"), "besonnt");});
test("besonnter -> besonnt", function() {deepEqual( Stem("besonnter"), "besonnt");});
test("besorgen -> besorg", function() {deepEqual( Stem("besorgen"), "besorg");});
test("besorgnis -> besorgnis", function() {deepEqual( Stem("besorgnis"), "besorgnis");});
test("besorgnisse -> besorgnis", function() {deepEqual( Stem("besorgnisse"), "besorgnis");});
test("besorgt -> besorgt", function() {deepEqual( Stem("besorgt"), "besorgt");});
test("besorgte -> besorgt", function() {deepEqual( Stem("besorgte"), "besorgt");});
test("besorgten -> besorgt", function() {deepEqual( Stem("besorgten"), "besorgt");});
test("besorgter -> besorgt", function() {deepEqual( Stem("besorgter"), "besorgt");});
test("besorgtes -> besorgt", function() {deepEqual( Stem("besorgtes"), "besorgt");});
test("bespannt -> bespannt", function() {deepEqual( Stem("bespannt"), "bespannt");});
test("bespanntes -> bespannt", function() {deepEqual( Stem("bespanntes"), "bespannt");});
test("besponnen -> besponn", function() {deepEqual( Stem("besponnen"), "besponn");});
test("besprechen -> besprech", function() {deepEqual( Stem("besprechen"), "besprech");});
test("besprechungen -> besprech", function() {deepEqual( Stem("besprechungen"), "besprech");});
test("besprengung -> bespreng", function() {deepEqual( Stem("besprengung"), "bespreng");});
test("besprochen -> besproch", function() {deepEqual( Stem("besprochen"), "besproch");});
test("besprochene -> besproch", function() {deepEqual( Stem("besprochene"), "besproch");});
test("besser -> bess", function() {deepEqual( Stem("besser"), "bess");});
test("bessere -> bess", function() {deepEqual( Stem("bessere"), "bess");});
test("besseren -> bess", function() {deepEqual( Stem("besseren"), "bess");});
test("besserer -> bess", function() {deepEqual( Stem("besserer"), "bess");});
test("besseres -> bess", function() {deepEqual( Stem("besseres"), "bess");});
test("bessern -> bess", function() {deepEqual( Stem("bessern"), "bess");});
test("bessers -> bess", function() {deepEqual( Stem("bessers"), "bess");});
test("bessert -> bessert", function() {deepEqual( Stem("bessert"), "bessert");});
test("besserte -> bessert", function() {deepEqual( Stem("besserte"), "bessert");});
test("besserung -> besser", function() {deepEqual( Stem("besserung"), "besser");});
test("besserungen -> besser", function() {deepEqual( Stem("besserungen"), "besser");});
test("besserungswerk -> besserungswerk", function() {deepEqual( Stem("besserungswerk"), "besserungswerk");});
test("best -> best", function() {deepEqual( Stem("best"), "best");});
test("bestand -> bestand", function() {deepEqual( Stem("bestand"), "bestand");});
test("bestände -> bestand", function() {deepEqual( Stem("bestände"), "bestand");});
test("bestanden -> bestand", function() {deepEqual( Stem("bestanden"), "bestand");});
test("beständig -> bestand", function() {deepEqual( Stem("beständig"), "bestand");});
test("beständiger -> bestand", function() {deepEqual( Stem("beständiger"), "bestand");});
test("beständiges -> bestand", function() {deepEqual( Stem("beständiges"), "bestand");});
test("bestandstück -> bestandstuck", function() {deepEqual( Stem("bestandstück"), "bestandstuck");});
test("bestandstücks -> bestandstuck", function() {deepEqual( Stem("bestandstücks"), "bestandstuck");});
test("bestandteile -> bestandteil", function() {deepEqual( Stem("bestandteile"), "bestandteil");});
test("bestandteilen -> bestandteil", function() {deepEqual( Stem("bestandteilen"), "bestandteil");});
test("bestani -> bestani", function() {deepEqual( Stem("bestani"), "bestani");});
test("bestärken -> bestark", function() {deepEqual( Stem("bestärken"), "bestark");});
test("bestärkt -> bestarkt", function() {deepEqual( Stem("bestärkt"), "bestarkt");});
test("bestärkte -> bestarkt", function() {deepEqual( Stem("bestärkte"), "bestarkt");});
test("bestärkung -> bestark", function() {deepEqual( Stem("bestärkung"), "bestark");});
test("bestätigen -> bestat", function() {deepEqual( Stem("bestätigen"), "bestat");});
test("bestätigend -> bestat", function() {deepEqual( Stem("bestätigend"), "bestat");});
test("bestätigenden -> bestat", function() {deepEqual( Stem("bestätigenden"), "bestat");});
test("bestätigt -> bestatigt", function() {deepEqual( Stem("bestätigt"), "bestatigt");});
test("bestätigte -> bestatigt", function() {deepEqual( Stem("bestätigte"), "bestatigt");});
test("bestätigten -> bestatigt", function() {deepEqual( Stem("bestätigten"), "bestatigt");});
test("bestätigung -> bestat", function() {deepEqual( Stem("bestätigung"), "bestat");});
test("bestätigungen -> bestat", function() {deepEqual( Stem("bestätigungen"), "bestat");});
test("bestätigungsgründe -> bestatigungsgrund", function() {deepEqual( Stem("bestätigungsgründe"), "bestatigungsgrund");});
test("bestaunten -> bestaunt", function() {deepEqual( Stem("bestaunten"), "bestaunt");});
test("beste -> best", function() {deepEqual( Stem("beste"), "best");});
test("besteche -> bestech", function() {deepEqual( Stem("besteche"), "bestech");});
test("bestechen -> bestech", function() {deepEqual( Stem("bestechen"), "bestech");});
test("bestechende -> bestech", function() {deepEqual( Stem("bestechende"), "bestech");});
test("bestechliche -> bestech", function() {deepEqual( Stem("bestechliche"), "bestech");});
test("bestechung -> bestech", function() {deepEqual( Stem("bestechung"), "bestech");});
test("bestechungssumme -> bestechungssumm", function() {deepEqual( Stem("bestechungssumme"), "bestechungssumm");});
test("besteck -> besteck", function() {deepEqual( Stem("besteck"), "besteck");});
test("besteckt -> besteckt", function() {deepEqual( Stem("besteckt"), "besteckt");});
test("bestehe -> besteh", function() {deepEqual( Stem("bestehe"), "besteh");});
test("bestehen -> besteh", function() {deepEqual( Stem("bestehen"), "besteh");});
test("bestehend -> besteh", function() {deepEqual( Stem("bestehend"), "besteh");});
test("bestehende -> besteh", function() {deepEqual( Stem("bestehende"), "besteh");});
test("bestehendes -> besteh", function() {deepEqual( Stem("bestehendes"), "besteh");});
test("besteht -> besteht", function() {deepEqual( Stem("besteht"), "besteht");});
test("besteigen -> besteig", function() {deepEqual( Stem("besteigen"), "besteig");});
test("bestellen -> bestell", function() {deepEqual( Stem("bestellen"), "bestell");});
test("bestellenhintergrundregelmässig -> bestellenhintergrundregelmass", function() {deepEqual( Stem("bestellenhintergrundregelmässig"), "bestellenhintergrundregelmass");});
test("bestellt -> bestellt", function() {deepEqual( Stem("bestellt"), "bestellt");});
test("bestellte -> bestellt", function() {deepEqual( Stem("bestellte"), "bestellt");});
test("bestellung -> bestell", function() {deepEqual( Stem("bestellung"), "bestell");});
test("bestellungen -> bestell", function() {deepEqual( Stem("bestellungen"), "bestell");});
test("bestem -> best", function() {deepEqual( Stem("bestem"), "best");});
test("besten -> best", function() {deepEqual( Stem("besten"), "best");});
test("bestenfalls -> bestenfall", function() {deepEqual( Stem("bestenfalls"), "bestenfall");});
test("bestens -> best", function() {deepEqual( Stem("bestens"), "best");});
test("bester -> best", function() {deepEqual( Stem("bester"), "best");});
test("bestia -> bestia", function() {deepEqual( Stem("bestia"), "bestia");});
test("bestiae -> bestia", function() {deepEqual( Stem("bestiae"), "bestia");});
test("besticht -> besticht", function() {deepEqual( Stem("besticht"), "besticht");});
test("bestickt -> bestickt", function() {deepEqual( Stem("bestickt"), "bestickt");});
test("bestie -> besti", function() {deepEqual( Stem("bestie"), "besti");});
test("bestieg -> bestieg", function() {deepEqual( Stem("bestieg"), "bestieg");});
test("bestiegen -> bestieg", function() {deepEqual( Stem("bestiegen"), "bestieg");});
test("bestien -> besti", function() {deepEqual( Stem("bestien"), "besti");});
test("bestiis -> bestiis", function() {deepEqual( Stem("bestiis"), "bestiis");});
test("bestimmbar -> bestimmbar", function() {deepEqual( Stem("bestimmbar"), "bestimmbar");});
test("bestimmbare -> bestimmbar", function() {deepEqual( Stem("bestimmbare"), "bestimmbar");});
test("bestimmbaren -> bestimmbar", function() {deepEqual( Stem("bestimmbaren"), "bestimmbar");});
test("bestimmbares -> bestimmbar", function() {deepEqual( Stem("bestimmbares"), "bestimmbar");});
test("bestimmbarkeit -> bestimmbar", function() {deepEqual( Stem("bestimmbarkeit"), "bestimmbar");});
test("bestimme -> bestimm", function() {deepEqual( Stem("bestimme"), "bestimm");});
test("bestimmen -> bestimm", function() {deepEqual( Stem("bestimmen"), "bestimm");});
test("bestimmende -> bestimm", function() {deepEqual( Stem("bestimmende"), "bestimm");});
test("bestimmenden -> bestimm", function() {deepEqual( Stem("bestimmenden"), "bestimm");});
test("bestimmt -> bestimmt", function() {deepEqual( Stem("bestimmt"), "bestimmt");});
test("bestimmte -> bestimmt", function() {deepEqual( Stem("bestimmte"), "bestimmt");});
test("bestimmten -> bestimmt", function() {deepEqual( Stem("bestimmten"), "bestimmt");});
test("bestimmter -> bestimmt", function() {deepEqual( Stem("bestimmter"), "bestimmt");});
test("bestimmtes -> bestimmt", function() {deepEqual( Stem("bestimmtes"), "bestimmt");});
test("bestimmtesten -> bestimmt", function() {deepEqual( Stem("bestimmtesten"), "bestimmt");});
test("bestimmtheit -> bestimmt", function() {deepEqual( Stem("bestimmtheit"), "bestimmt");});
test("bestimmung -> bestimm", function() {deepEqual( Stem("bestimmung"), "bestimm");});
test("bestimmungen -> bestimm", function() {deepEqual( Stem("bestimmungen"), "bestimm");});
test("bestimmungsgrund -> bestimmungsgrund", function() {deepEqual( Stem("bestimmungsgrund"), "bestimmungsgrund");});
test("bestimmungsgrunde -> bestimmungsgrund", function() {deepEqual( Stem("bestimmungsgrunde"), "bestimmungsgrund");});
test("bestimmungsgründe -> bestimmungsgrund", function() {deepEqual( Stem("bestimmungsgründe"), "bestimmungsgrund");});
test("bestimmungsgründen -> bestimmungsgrund", function() {deepEqual( Stem("bestimmungsgründen"), "bestimmungsgrund");});
test("bestimmungsgrundes -> bestimmungsgrund", function() {deepEqual( Stem("bestimmungsgrundes"), "bestimmungsgrund");});
test("bestirnte -> bestirnt", function() {deepEqual( Stem("bestirnte"), "bestirnt");});
test("bestmöglichst -> bestmog", function() {deepEqual( Stem("bestmöglichst"), "bestmog");});
test("bestochen -> bestoch", function() {deepEqual( Stem("bestochen"), "bestoch");});
test("bestrafen -> bestraf", function() {deepEqual( Stem("bestrafen"), "bestraf");});
test("bestraft -> bestraft", function() {deepEqual( Stem("bestraft"), "bestraft");});
test("bestrafung -> bestraf", function() {deepEqual( Stem("bestrafung"), "bestraf");});
test("bestrafungen -> bestraf", function() {deepEqual( Stem("bestrafungen"), "bestraf");});
test("bestreben -> bestreb", function() {deepEqual( Stem("bestreben"), "bestreb");});
test("bestrebt -> bestrebt", function() {deepEqual( Stem("bestrebt"), "bestrebt");});
test("bestrebung -> bestreb", function() {deepEqual( Stem("bestrebung"), "bestreb");});
test("bestrebungen -> bestreb", function() {deepEqual( Stem("bestrebungen"), "bestreb");});
test("bestreift -> bestreift", function() {deepEqual( Stem("bestreift"), "bestreift");});
test("bestreiten -> bestreit", function() {deepEqual( Stem("bestreiten"), "bestreit");});
test("bestreitet -> bestreitet", function() {deepEqual( Stem("bestreitet"), "bestreitet");});
test("bestreut -> bestreut", function() {deepEqual( Stem("bestreut"), "bestreut");});
test("bestreuten -> bestreut", function() {deepEqual( Stem("bestreuten"), "bestreut");});
test("bestritt -> bestritt", function() {deepEqual( Stem("bestritt"), "bestritt");});
test("bestünde -> bestund", function() {deepEqual( Stem("bestünde"), "bestund");});
test("bestürmte -> besturmt", function() {deepEqual( Stem("bestürmte"), "besturmt");});
test("bestürmten -> besturmt", function() {deepEqual( Stem("bestürmten"), "besturmt");});
test("bestürzt -> besturzt", function() {deepEqual( Stem("bestürzt"), "besturzt");});
test("bestürzten -> besturzt", function() {deepEqual( Stem("bestürzten"), "besturzt");});
test("besuch -> besuch", function() {deepEqual( Stem("besuch"), "besuch");});
test("besuche -> besuch", function() {deepEqual( Stem("besuche"), "besuch");});
test("besuchen -> besuch", function() {deepEqual( Stem("besuchen"), "besuch");});
test("besucher -> besuch", function() {deepEqual( Stem("besucher"), "besuch");});
test("besucht -> besucht", function() {deepEqual( Stem("besucht"), "besucht");});
test("besuchte -> besucht", function() {deepEqual( Stem("besuchte"), "besucht");});
test("besuchten -> besucht", function() {deepEqual( Stem("besuchten"), "besucht");});
test("besudelt -> besudelt", function() {deepEqual( Stem("besudelt"), "besudelt");});
test("besudelten -> besudelt", function() {deepEqual( Stem("besudelten"), "besudelt");});
test("betaste -> betast", function() {deepEqual( Stem("betaste"), "betast");});
test("betasten -> betast", function() {deepEqual( Stem("betasten"), "betast");});
test("betastete -> betastet", function() {deepEqual( Stem("betastete"), "betastet");});
test("betätigt -> betatigt", function() {deepEqual( Stem("betätigt"), "betatigt");});
test("betäuben -> betaub", function() {deepEqual( Stem("betäuben"), "betaub");});
test("betäubt -> betaubt", function() {deepEqual( Stem("betäubt"), "betaubt");});
test("betäubung -> betaub", function() {deepEqual( Stem("betäubung"), "betaub");});
test("betbüchl -> betbuchl", function() {deepEqual( Stem("betbüchl"), "betbuchl");});
test("beteiligt -> beteiligt", function() {deepEqual( Stem("beteiligt"), "beteiligt");});
test("beteiligten -> beteiligt", function() {deepEqual( Stem("beteiligten"), "beteiligt");});
test("beten -> bet", function() {deepEqual( Stem("beten"), "bet");});
test("betend -> betend", function() {deepEqual( Stem("betend"), "betend");});
test("betet -> betet", function() {deepEqual( Stem("betet"), "betet");});
test("betete -> betet", function() {deepEqual( Stem("betete"), "betet");});
test("beteten -> betet", function() {deepEqual( Stem("beteten"), "betet");});
test("beteuerte -> beteuert", function() {deepEqual( Stem("beteuerte"), "beteuert");});
test("beth -> beth", function() {deepEqual( Stem("beth"), "beth");});
test("bethesda -> bethesda", function() {deepEqual( Stem("bethesda"), "bethesda");});
test("betitelt -> betitelt", function() {deepEqual( Stem("betitelt"), "betitelt");});
test("betont -> betont", function() {deepEqual( Stem("betont"), "betont");});
test("betörenden -> betor", function() {deepEqual( Stem("betörenden"), "betor");});
test("betört -> betort", function() {deepEqual( Stem("betört"), "betort");});
test("betracht -> betracht", function() {deepEqual( Stem("betracht"), "betracht");});
test("betrachte -> betracht", function() {deepEqual( Stem("betrachte"), "betracht");});
test("betrachten -> betracht", function() {deepEqual( Stem("betrachten"), "betracht");});
test("betrachtend -> betracht", function() {deepEqual( Stem("betrachtend"), "betracht");});
test("betrachtet -> betrachtet", function() {deepEqual( Stem("betrachtet"), "betrachtet");});
test("betrachtete -> betrachtet", function() {deepEqual( Stem("betrachtete"), "betrachtet");});
test("betrachteten -> betrachtet", function() {deepEqual( Stem("betrachteten"), "betrachtet");});
test("beträchtlich -> betracht", function() {deepEqual( Stem("beträchtlich"), "betracht");});
test("beträchtliche -> betracht", function() {deepEqual( Stem("beträchtliche"), "betracht");});
test("betrachtung -> betracht", function() {deepEqual( Stem("betrachtung"), "betracht");});
test("betrachtungen -> betracht", function() {deepEqual( Stem("betrachtungen"), "betracht");});
test("betraf -> betraf", function() {deepEqual( Stem("betraf"), "betraf");});
test("beträfe -> betraf", function() {deepEqual( Stem("beträfe"), "betraf");});
test("betragen -> betrag", function() {deepEqual( Stem("betragen"), "betrag");});
test("betragens -> betrag", function() {deepEqual( Stem("betragens"), "betrag");});
test("beträgt -> betragt", function() {deepEqual( Stem("beträgt"), "betragt");});
test("betrat -> betrat", function() {deepEqual( Stem("betrat"), "betrat");});
test("betraten -> betrat", function() {deepEqual( Stem("betraten"), "betrat");});
test("betraut -> betraut", function() {deepEqual( Stem("betraut"), "betraut");});
test("betrauten -> betraut", function() {deepEqual( Stem("betrauten"), "betraut");});
test("betreff -> betreff", function() {deepEqual( Stem("betreff"), "betreff");});
test("betreffen -> betreff", function() {deepEqual( Stem("betreffen"), "betreff");});
test("betreffend -> betreff", function() {deepEqual( Stem("betreffend"), "betreff");});
test("betreffende -> betreff", function() {deepEqual( Stem("betreffende"), "betreff");});
test("betreffenden -> betreff", function() {deepEqual( Stem("betreffenden"), "betreff");});
test("betreffs -> betreff", function() {deepEqual( Stem("betreffs"), "betreff");});
test("betreiben -> betreib", function() {deepEqual( Stem("betreiben"), "betreib");});
test("betreibt -> betreibt", function() {deepEqual( Stem("betreibt"), "betreibt");});
test("betreibung -> betreib", function() {deepEqual( Stem("betreibung"), "betreib");});
test("betresst -> betresst", function() {deepEqual( Stem("betresst"), "betresst");});
test("betreßt -> betresst", function() {deepEqual( Stem("betreßt"), "betresst");});
test("betreten -> betret", function() {deepEqual( Stem("betreten"), "betret");});
test("betreuen -> betreu", function() {deepEqual( Stem("betreuen"), "betreu");});
test("betrieb -> betrieb", function() {deepEqual( Stem("betrieb"), "betrieb");});
test("betrieben -> betrieb", function() {deepEqual( Stem("betrieben"), "betrieb");});
test("betrifft -> betrifft", function() {deepEqual( Stem("betrifft"), "betrifft");});
test("betritt -> betritt", function() {deepEqual( Stem("betritt"), "betritt");});
test("betroffen -> betroff", function() {deepEqual( Stem("betroffen"), "betroff");});
test("betrogen -> betrog", function() {deepEqual( Stem("betrogen"), "betrog");});
test("betrogene -> betrog", function() {deepEqual( Stem("betrogene"), "betrog");});
test("betrogenen -> betrog", function() {deepEqual( Stem("betrogenen"), "betrog");});
test("betrübe -> betrub", function() {deepEqual( Stem("betrübe"), "betrub");});
test("betrüblich -> betrub", function() {deepEqual( Stem("betrüblich"), "betrub");});
test("betrübnis -> betrubnis", function() {deepEqual( Stem("betrübnis"), "betrubnis");});
test("betrübt -> betrubt", function() {deepEqual( Stem("betrübt"), "betrubt");});
test("betrübte -> betrubt", function() {deepEqual( Stem("betrübte"), "betrubt");});
test("betrübten -> betrubt", function() {deepEqual( Stem("betrübten"), "betrubt");});
test("betrug -> betrug", function() {deepEqual( Stem("betrug"), "betrug");});
test("betrüge -> betrug", function() {deepEqual( Stem("betrüge"), "betrug");});
test("betrügen -> betrug", function() {deepEqual( Stem("betrügen"), "betrug");});
test("betrüger -> betrug", function() {deepEqual( Stem("betrüger"), "betrug");});
test("betrügereien -> betrugerei", function() {deepEqual( Stem("betrügereien"), "betrugerei");});
test("betrügerisch -> betruger", function() {deepEqual( Stem("betrügerisch"), "betruger");});
test("betrügerisches -> betruger", function() {deepEqual( Stem("betrügerisches"), "betruger");});
test("betrüglich -> betrug", function() {deepEqual( Stem("betrüglich"), "betrug");});
test("betrügst -> betrug", function() {deepEqual( Stem("betrügst"), "betrug");});
test("betrunken -> betrunk", function() {deepEqual( Stem("betrunken"), "betrunk");});
test("betrunkenen -> betrunk", function() {deepEqual( Stem("betrunkenen"), "betrunk");});
test("betrunkener -> betrunk", function() {deepEqual( Stem("betrunkener"), "betrunk");});
test("bett -> bett", function() {deepEqual( Stem("bett"), "bett");});
test("bettchen -> bettch", function() {deepEqual( Stem("bettchen"), "bettch");});
test("bette -> bett", function() {deepEqual( Stem("bette"), "bett");});
test("bettelei -> bettelei", function() {deepEqual( Stem("bettelei"), "bettelei");});
test("betteljunge -> bettelj", function() {deepEqual( Stem("betteljunge"), "bettelj");});
test("betteln -> betteln", function() {deepEqual( Stem("betteln"), "betteln");});
test("bettelte -> bettelt", function() {deepEqual( Stem("bettelte"), "bettelt");});
test("betten -> bett", function() {deepEqual( Stem("betten"), "bett");});
test("bettentruhe -> bettentruh", function() {deepEqual( Stem("bettentruhe"), "bettentruh");});
test("bettes -> bett", function() {deepEqual( Stem("bettes"), "bett");});
test("betteten -> bettet", function() {deepEqual( Stem("betteten"), "bettet");});
test("bettlächrig -> bettlachr", function() {deepEqual( Stem("bettlächrig"), "bettlachr");});
test("bettstatt -> bettstatt", function() {deepEqual( Stem("bettstatt"), "bettstatt");});
test("bettstelle -> bettstell", function() {deepEqual( Stem("bettstelle"), "bettstell");});
test("bettzeug -> bettzeug", function() {deepEqual( Stem("bettzeug"), "bettzeug");});
test("betupft -> betupft", function() {deepEqual( Stem("betupft"), "betupft");});
test("beugen -> beug", function() {deepEqual( Stem("beugen"), "beug");});
test("beugt -> beugt", function() {deepEqual( Stem("beugt"), "beugt");});
test("beugte -> beugt", function() {deepEqual( Stem("beugte"), "beugt");});
test("beugten -> beugt", function() {deepEqual( Stem("beugten"), "beugt");});
test("beule -> beul", function() {deepEqual( Stem("beule"), "beul");});
test("beulen -> beul", function() {deepEqual( Stem("beulen"), "beul");});
test("beunruhigen -> beunruh", function() {deepEqual( Stem("beunruhigen"), "beunruh");});
test("beunruhigende -> beunruh", function() {deepEqual( Stem("beunruhigende"), "beunruh");});
test("beunruhigt -> beunruhigt", function() {deepEqual( Stem("beunruhigt"), "beunruhigt");});
test("beunruhigung -> beunruh", function() {deepEqual( Stem("beunruhigung"), "beunruh");});
test("beurkundet -> beurkundet", function() {deepEqual( Stem("beurkundet"), "beurkundet");});
test("beurkundete -> beurkundet", function() {deepEqual( Stem("beurkundete"), "beurkundet");});
test("beurlaube -> beurlaub", function() {deepEqual( Stem("beurlaube"), "beurlaub");});
test("beurlaubten -> beurlaubt", function() {deepEqual( Stem("beurlaubten"), "beurlaubt");});
test("beurlaubung -> beurlaub", function() {deepEqual( Stem("beurlaubung"), "beurlaub");});
test("beurteilen -> beurteil", function() {deepEqual( Stem("beurteilen"), "beurteil");});
test("beurteilenden -> beurteil", function() {deepEqual( Stem("beurteilenden"), "beurteil");});
test("beurteilt -> beurteilt", function() {deepEqual( Stem("beurteilt"), "beurteilt");});
test("beurteilte -> beurteilt", function() {deepEqual( Stem("beurteilte"), "beurteilt");});
test("beurteilung -> beurteil", function() {deepEqual( Stem("beurteilung"), "beurteil");});
test("beurteilungen -> beurteil", function() {deepEqual( Stem("beurteilungen"), "beurteil");});
test("beute -> beut", function() {deepEqual( Stem("beute"), "beut");});
test("beutel -> beutel", function() {deepEqual( Stem("beutel"), "beutel");});
test("beutelchen -> beutelch", function() {deepEqual( Stem("beutelchen"), "beutelch");});
test("beuten -> beut", function() {deepEqual( Stem("beuten"), "beut");});
test("bevölkert -> bevolkert", function() {deepEqual( Stem("bevölkert"), "bevolkert");});
test("bevölkerung -> bevolker", function() {deepEqual( Stem("bevölkerung"), "bevolker");});
test("bevor -> bevor", function() {deepEqual( Stem("bevor"), "bevor");});
test("bevorhautet -> bevorhautet", function() {deepEqual( Stem("bevorhautet"), "bevorhautet");});
test("bevorhautete -> bevorhautet", function() {deepEqual( Stem("bevorhautete"), "bevorhautet");});
test("bevorstand -> bevorstand", function() {deepEqual( Stem("bevorstand"), "bevorstand");});
test("bevorstehenden -> bevorsteh", function() {deepEqual( Stem("bevorstehenden"), "bevorsteh");});
test("bevorsteht -> bevorsteht", function() {deepEqual( Stem("bevorsteht"), "bevorsteht");});
test("bewachsen -> bewachs", function() {deepEqual( Stem("bewachsen"), "bewachs");});
test("bewachsenen -> bewachs", function() {deepEqual( Stem("bewachsenen"), "bewachs");});
test("bewaffnet -> bewaffnet", function() {deepEqual( Stem("bewaffnet"), "bewaffnet");});
test("bewaffnete -> bewaffnet", function() {deepEqual( Stem("bewaffnete"), "bewaffnet");});
test("bewaffneten -> bewaffnet", function() {deepEqual( Stem("bewaffneten"), "bewaffnet");});
test("bewaffneter -> bewaffnet", function() {deepEqual( Stem("bewaffneter"), "bewaffnet");});
test("bewahre -> bewahr", function() {deepEqual( Stem("bewahre"), "bewahr");});
test("bewahren -> bewahr", function() {deepEqual( Stem("bewahren"), "bewahr");});
test("bewähren -> bewahr", function() {deepEqual( Stem("bewähren"), "bewahr");});
test("bewahrt -> bewahrt", function() {deepEqual( Stem("bewahrt"), "bewahrt");});
test("bewährt -> bewahrt", function() {deepEqual( Stem("bewährt"), "bewahrt");});
test("bewahrte -> bewahrt", function() {deepEqual( Stem("bewahrte"), "bewahrt");});
test("bewährte -> bewahrt", function() {deepEqual( Stem("bewährte"), "bewahrt");});
test("bewährter -> bewahrt", function() {deepEqual( Stem("bewährter"), "bewahrt");});
test("bewährtes -> bewahrt", function() {deepEqual( Stem("bewährtes"), "bewahrt");});
test("bewahrtest -> bewahrt", function() {deepEqual( Stem("bewahrtest"), "bewahrt");});
test("bewahrung -> bewahr", function() {deepEqual( Stem("bewahrung"), "bewahr");});
test("bewältigen -> bewalt", function() {deepEqual( Stem("bewältigen"), "bewalt");});
test("bewandt -> bewandt", function() {deepEqual( Stem("bewandt"), "bewandt");});
test("bewandtnis -> bewandtnis", function() {deepEqual( Stem("bewandtnis"), "bewandtnis");});
test("bewarben -> bewarb", function() {deepEqual( Stem("bewarben"), "bewarb");});
test("bewässern -> bewass", function() {deepEqual( Stem("bewässern"), "bewass");});
test("bewässert -> bewassert", function() {deepEqual( Stem("bewässert"), "bewassert");});
test("bewässerte -> bewassert", function() {deepEqual( Stem("bewässerte"), "bewassert");});
test("bewässerten -> bewassert", function() {deepEqual( Stem("bewässerten"), "bewassert");});
test("bewässerter -> bewassert", function() {deepEqual( Stem("bewässerter"), "bewassert");});
test("bewege -> beweg", function() {deepEqual( Stem("bewege"), "beweg");});
test("bewegen -> beweg", function() {deepEqual( Stem("bewegen"), "beweg");});
test("bewegende -> beweg", function() {deepEqual( Stem("bewegende"), "beweg");});
test("bewegenden -> beweg", function() {deepEqual( Stem("bewegenden"), "beweg");});
test("beweggründe -> beweggrund", function() {deepEqual( Stem("beweggründe"), "beweggrund");});
test("beweglich -> beweg", function() {deepEqual( Stem("beweglich"), "beweg");});
test("bewegliche -> beweg", function() {deepEqual( Stem("bewegliche"), "beweg");});
test("beweglichkeit -> beweg", function() {deepEqual( Stem("beweglichkeit"), "beweg");});
test("bewegt -> bewegt", function() {deepEqual( Stem("bewegt"), "bewegt");});
test("bewegte -> bewegt", function() {deepEqual( Stem("bewegte"), "bewegt");});
test("bewegten -> bewegt", function() {deepEqual( Stem("bewegten"), "bewegt");});
test("bewegtes -> bewegt", function() {deepEqual( Stem("bewegtes"), "bewegt");});
test("bewegung -> beweg", function() {deepEqual( Stem("bewegung"), "beweg");});
test("bewegungen -> beweg", function() {deepEqual( Stem("bewegungen"), "beweg");});
test("bewegungsgrund -> bewegungsgrund", function() {deepEqual( Stem("bewegungsgrund"), "bewegungsgrund");});
test("bewegungsgrunde -> bewegungsgrund", function() {deepEqual( Stem("bewegungsgrunde"), "bewegungsgrund");});
test("bewegungsgründe -> bewegungsgrund", function() {deepEqual( Stem("bewegungsgründe"), "bewegungsgrund");});
test("bewegungsgründen -> bewegungsgrund", function() {deepEqual( Stem("bewegungsgründen"), "bewegungsgrund");});
test("bewegursache -> bewegursach", function() {deepEqual( Stem("bewegursache"), "bewegursach");});
test("bewegursachen -> bewegursach", function() {deepEqual( Stem("bewegursachen"), "bewegursach");});
test("beweis -> beweis", function() {deepEqual( Stem("beweis"), "beweis");});
test("beweise -> beweis", function() {deepEqual( Stem("beweise"), "beweis");});
test("beweisen -> beweis", function() {deepEqual( Stem("beweisen"), "beweis");});
test("beweisend -> beweis", function() {deepEqual( Stem("beweisend"), "beweis");});
test("beweises -> beweis", function() {deepEqual( Stem("beweises"), "beweis");});
test("beweiset -> beweiset", function() {deepEqual( Stem("beweiset"), "beweiset");});
test("beweisführende -> beweisfuhr", function() {deepEqual( Stem("beweisführende"), "beweisfuhr");});
test("beweisgründen -> beweisgrund", function() {deepEqual( Stem("beweisgründen"), "beweisgrund");});
test("beweist -> beweist", function() {deepEqual( Stem("beweist"), "beweist");});
test("beweistümer -> beweistum", function() {deepEqual( Stem("beweistümer"), "beweistum");});
test("bewerben -> bewerb", function() {deepEqual( Stem("bewerben"), "bewerb");});
test("bewerbung -> bewerb", function() {deepEqual( Stem("bewerbung"), "bewerb");});
test("bewerkstelligte -> bewerkstelligt", function() {deepEqual( Stem("bewerkstelligte"), "bewerkstelligt");});
test("bewies -> bewi", function() {deepEqual( Stem("bewies"), "bewi");});
test("bewiesen -> bewies", function() {deepEqual( Stem("bewiesen"), "bewies");});
test("bewilligen -> bewill", function() {deepEqual( Stem("bewilligen"), "bewill");});
test("bewilligt -> bewilligt", function() {deepEqual( Stem("bewilligt"), "bewilligt");});
test("bewimpelt -> bewimpelt", function() {deepEqual( Stem("bewimpelt"), "bewimpelt");});
test("bewirbt -> bewirbt", function() {deepEqual( Stem("bewirbt"), "bewirbt");});
test("bewirke -> bewirk", function() {deepEqual( Stem("bewirke"), "bewirk");});
test("bewirken -> bewirk", function() {deepEqual( Stem("bewirken"), "bewirk");});
test("bewirkt -> bewirkt", function() {deepEqual( Stem("bewirkt"), "bewirkt");});
test("bewirkte -> bewirkt", function() {deepEqual( Stem("bewirkte"), "bewirkt");});
test("bewirkten -> bewirkt", function() {deepEqual( Stem("bewirkten"), "bewirkt");});
test("bewirkung -> bewirk", function() {deepEqual( Stem("bewirkung"), "bewirk");});
test("bewirte -> bewirt", function() {deepEqual( Stem("bewirte"), "bewirt");});
test("bewirtete -> bewirtet", function() {deepEqual( Stem("bewirtete"), "bewirtet");});
test("bewirtung -> bewirt", function() {deepEqual( Stem("bewirtung"), "bewirt");});
test("bewogen -> bewog", function() {deepEqual( Stem("bewogen"), "bewog");});
test("bewohnen -> bewohn", function() {deepEqual( Stem("bewohnen"), "bewohn");});
test("bewohner -> bewohn", function() {deepEqual( Stem("bewohner"), "bewohn");});
test("bewohnern -> bewohn", function() {deepEqual( Stem("bewohnern"), "bewohn");});
test("bewohners -> bewohn", function() {deepEqual( Stem("bewohners"), "bewohn");});
test("bewohnt -> bewohnt", function() {deepEqual( Stem("bewohnt"), "bewohnt");});
test("bewohnte -> bewohnt", function() {deepEqual( Stem("bewohnte"), "bewohnt");});
test("bewohnten -> bewohnt", function() {deepEqual( Stem("bewohnten"), "bewohnt");});
test("bewölkten -> bewolkt", function() {deepEqual( Stem("bewölkten"), "bewolkt");});
test("bewundern -> bewund", function() {deepEqual( Stem("bewundern"), "bewund");});
test("bewundernd -> bewundernd", function() {deepEqual( Stem("bewundernd"), "bewundernd");});
test("bewunderten -> bewundert", function() {deepEqual( Stem("bewunderten"), "bewundert");});
test("bewunderung -> bewunder", function() {deepEqual( Stem("bewunderung"), "bewunder");});
test("bewurf -> bewurf", function() {deepEqual( Stem("bewurf"), "bewurf");});
test("bewusst -> bewusst", function() {deepEqual( Stem("bewusst"), "bewusst");});
test("bewußt -> bewusst", function() {deepEqual( Stem("bewußt"), "bewusst");});
test("bewusste -> bewusst", function() {deepEqual( Stem("bewusste"), "bewusst");});
test("bewußte -> bewusst", function() {deepEqual( Stem("bewußte"), "bewusst");});
test("bewussten -> bewusst", function() {deepEqual( Stem("bewussten"), "bewusst");});
test("bewußten -> bewusst", function() {deepEqual( Stem("bewußten"), "bewusst");});
test("bewusster -> bewusst", function() {deepEqual( Stem("bewusster"), "bewusst");});
test("bewusstlos -> bewusstlos", function() {deepEqual( Stem("bewusstlos"), "bewusstlos");});
test("bewusstlosen -> bewusstlos", function() {deepEqual( Stem("bewusstlosen"), "bewusstlos");});
test("bewusstsein -> bewusstsein", function() {deepEqual( Stem("bewusstsein"), "bewusstsein");});
test("bewußtsein -> bewusstsein", function() {deepEqual( Stem("bewußtsein"), "bewusstsein");});
test("bewusstseins -> bewusstsein", function() {deepEqual( Stem("bewusstseins"), "bewusstsein");});
test("bewußtseins -> bewusstsein", function() {deepEqual( Stem("bewußtseins"), "bewusstsein");});
test("bezahlbarer -> bezahlbar", function() {deepEqual( Stem("bezahlbarer"), "bezahlbar");});
test("bezahlen -> bezahl", function() {deepEqual( Stem("bezahlen"), "bezahl");});
test("bezahlt -> bezahlt", function() {deepEqual( Stem("bezahlt"), "bezahlt");});
test("bezahlte -> bezahlt", function() {deepEqual( Stem("bezahlte"), "bezahlt");});
test("bezahlung -> bezahl", function() {deepEqual( Stem("bezahlung"), "bezahl");});
test("bezähmt -> bezahmt", function() {deepEqual( Stem("bezähmt"), "bezahmt");});
test("bezaleel -> bezaleel", function() {deepEqual( Stem("bezaleel"), "bezaleel");});
test("bezankenden -> bezank", function() {deepEqual( Stem("bezankenden"), "bezank");});
test("bezaubern -> bezaub", function() {deepEqual( Stem("bezaubern"), "bezaub");});
test("bezeichne -> bezeichn", function() {deepEqual( Stem("bezeichne"), "bezeichn");});
test("bezeichnen -> bezeichn", function() {deepEqual( Stem("bezeichnen"), "bezeichn");});
test("bezeichnend -> bezeichn", function() {deepEqual( Stem("bezeichnend"), "bezeichn");});
test("bezeichnende -> bezeichn", function() {deepEqual( Stem("bezeichnende"), "bezeichn");});
test("bezeichnendes -> bezeichn", function() {deepEqual( Stem("bezeichnendes"), "bezeichn");});
test("bezeichnet -> bezeichnet", function() {deepEqual( Stem("bezeichnet"), "bezeichnet");});
test("bezeichnete -> bezeichnet", function() {deepEqual( Stem("bezeichnete"), "bezeichnet");});
test("bezeichneten -> bezeichnet", function() {deepEqual( Stem("bezeichneten"), "bezeichnet");});
test("bezeichnung -> bezeichn", function() {deepEqual( Stem("bezeichnung"), "bezeichn");});
test("bezeichnungen -> bezeichn", function() {deepEqual( Stem("bezeichnungen"), "bezeichn");});
test("bezeigen -> bezeig", function() {deepEqual( Stem("bezeigen"), "bezeig");});
test("bezeigten -> bezeigt", function() {deepEqual( Stem("bezeigten"), "bezeigt");});
test("bezeugen -> bezeug", function() {deepEqual( Stem("bezeugen"), "bezeug");});
test("bezeugst -> bezeug", function() {deepEqual( Stem("bezeugst"), "bezeug");});
test("bezeugten -> bezeugt", function() {deepEqual( Stem("bezeugten"), "bezeugt");});
test("beziehe -> bezieh", function() {deepEqual( Stem("beziehe"), "bezieh");});
test("beziehen -> bezieh", function() {deepEqual( Stem("beziehen"), "bezieh");});
test("bezieht -> bezieht", function() {deepEqual( Stem("bezieht"), "bezieht");});
test("beziehung -> bezieh", function() {deepEqual( Stem("beziehung"), "bezieh");});
test("beziehungen -> bezieh", function() {deepEqual( Stem("beziehungen"), "bezieh");});
test("beziehungsweise -> beziehungsweis", function() {deepEqual( Stem("beziehungsweise"), "beziehungsweis");});
test("beziele -> beziel", function() {deepEqual( Stem("beziele"), "beziel");});
test("bezielt -> bezielt", function() {deepEqual( Stem("bezielt"), "bezielt");});
test("bezirk -> bezirk", function() {deepEqual( Stem("bezirk"), "bezirk");});
test("bezirke -> bezirk", function() {deepEqual( Stem("bezirke"), "bezirk");});
test("bezirksrat -> bezirksrat", function() {deepEqual( Stem("bezirksrat"), "bezirksrat");});
test("bezirksversammlung -> bezirksversamml", function() {deepEqual( Stem("bezirksversammlung"), "bezirksversamml");});
test("bezog -> bezog", function() {deepEqual( Stem("bezog"), "bezog");});
test("bezogen -> bezog", function() {deepEqual( Stem("bezogen"), "bezog");});
test("bezug -> bezug", function() {deepEqual( Stem("bezug"), "bezug");});
test("bezüglich -> bezug", function() {deepEqual( Stem("bezüglich"), "bezug");});
test("bezüglichen -> bezug", function() {deepEqual( Stem("bezüglichen"), "bezug");});
test("bezwang -> bezwang", function() {deepEqual( Stem("bezwang"), "bezwang");});
test("bezwecken -> bezweck", function() {deepEqual( Stem("bezwecken"), "bezweck");});
test("bezweckt -> bezweckt", function() {deepEqual( Stem("bezweckt"), "bezweckt");});
test("bezweckte -> bezweckt", function() {deepEqual( Stem("bezweckte"), "bezweckt");});
test("bezweifeln -> bezweifeln", function() {deepEqual( Stem("bezweifeln"), "bezweifeln");});
test("bezweifle -> bezweifl", function() {deepEqual( Stem("bezweifle"), "bezweifl");});
test("bezwingen -> bezwing", function() {deepEqual( Stem("bezwingen"), "bezwing");});
test("bezwingt -> bezwingt", function() {deepEqual( Stem("bezwingt"), "bezwingt");});
test("bezwingung -> bezwing", function() {deepEqual( Stem("bezwingung"), "bezwing");});
test("bezwungen -> bezwung", function() {deepEqual( Stem("bezwungen"), "bezwung");});
test("bfu -> bfu", function() {deepEqual( Stem("bfu"), "bfu");});
test("bibberten -> bibbert", function() {deepEqual( Stem("bibberten"), "bibbert");});
test("bibel -> bibel", function() {deepEqual( Stem("bibel"), "bibel");});
test("bibelan -> bibelan", function() {deepEqual( Stem("bibelan"), "bibelan");});
test("bibelgesellschaft -> bibelgesellschaft", function() {deepEqual( Stem("bibelgesellschaft"), "bibelgesellschaft");});
test("biberach -> biberach", function() {deepEqual( Stem("biberach"), "biberach");});
test("bibliothek -> bibliothek", function() {deepEqual( Stem("bibliothek"), "bibliothek");});
test("bibliotheken -> bibliothek", function() {deepEqual( Stem("bibliotheken"), "bibliothek");});
test("biblische -> biblisch", function() {deepEqual( Stem("biblische"), "biblisch");});
test("biedenkopf -> biedenkopf", function() {deepEqual( Stem("biedenkopf"), "biedenkopf");});
test("biederen -> bied", function() {deepEqual( Stem("biederen"), "bied");});
test("biederer -> bied", function() {deepEqual( Stem("biederer"), "bied");});
test("biegen -> bieg", function() {deepEqual( Stem("biegen"), "bieg");});
test("biegung -> biegung", function() {deepEqual( Stem("biegung"), "biegung");});
test("biene -> bien", function() {deepEqual( Stem("biene"), "bien");});
test("bienen -> bien", function() {deepEqual( Stem("bienen"), "bien");});
test("bienenwachs -> bienenwach", function() {deepEqual( Stem("bienenwachs"), "bienenwach");});
test("bier -> bier", function() {deepEqual( Stem("bier"), "bier");});
test("bieranstalt -> bieranstalt", function() {deepEqual( Stem("bieranstalt"), "bieranstalt");});
test("bierkrug -> bierkrug", function() {deepEqual( Stem("bierkrug"), "bierkrug");});
test("bierkrügen -> bierkrug", function() {deepEqual( Stem("bierkrügen"), "bierkrug");});
test("bierkutscher -> bierkutsch", function() {deepEqual( Stem("bierkutscher"), "bierkutsch");});
test("biertrinken -> biertrink", function() {deepEqual( Stem("biertrinken"), "biertrink");});
test("biertrinker -> biertrink", function() {deepEqual( Stem("biertrinker"), "biertrink");});
test("biest -> biest", function() {deepEqual( Stem("biest"), "biest");});
test("biestigen -> biestig", function() {deepEqual( Stem("biestigen"), "biestig");});
test("bieten -> biet", function() {deepEqual( Stem("bieten"), "biet");});
test("bietend -> bietend", function() {deepEqual( Stem("bietend"), "bietend");});
test("bietet -> bietet", function() {deepEqual( Stem("bietet"), "bietet");});
test("bild -> bild", function() {deepEqual( Stem("bild"), "bild");});
test("bildchen -> bildch", function() {deepEqual( Stem("bildchen"), "bildch");});
test("bilde -> bild", function() {deepEqual( Stem("bilde"), "bild");});
test("bilden -> bild", function() {deepEqual( Stem("bilden"), "bild");});
test("bildende -> bildend", function() {deepEqual( Stem("bildende"), "bildend");});
test("bilder -> bild", function() {deepEqual( Stem("bilder"), "bild");});
test("bilderbücher -> bilderbuch", function() {deepEqual( Stem("bilderbücher"), "bilderbuch");});
test("bilderbücherwiese -> bilderbucherwies", function() {deepEqual( Stem("bilderbücherwiese"), "bilderbucherwies");});
test("bilderchen -> bilderch", function() {deepEqual( Stem("bilderchen"), "bilderch");});
test("bildern -> bild", function() {deepEqual( Stem("bildern"), "bild");});
test("bildet -> bildet", function() {deepEqual( Stem("bildet"), "bildet");});
test("bildete -> bildet", function() {deepEqual( Stem("bildete"), "bildet");});
test("bildeten -> bildet", function() {deepEqual( Stem("bildeten"), "bildet");});
test("bildner -> bildn", function() {deepEqual( Stem("bildner"), "bildn");});
test("bildsauber -> bildsaub", function() {deepEqual( Stem("bildsauber"), "bildsaub");});
test("bildsaubre -> bildsaubr", function() {deepEqual( Stem("bildsaubre"), "bildsaubr");});
test("bildsäule -> bildsaul", function() {deepEqual( Stem("bildsäule"), "bildsaul");});
test("bildschöne -> bildschon", function() {deepEqual( Stem("bildschöne"), "bildschon");});
test("bildschönes -> bildschon", function() {deepEqual( Stem("bildschönes"), "bildschon");});
test("bildung -> bildung", function() {deepEqual( Stem("bildung"), "bildung");});
test("bildungen -> bildung", function() {deepEqual( Stem("bildungen"), "bildung");});
test("bildungschancen -> bildungschanc", function() {deepEqual( Stem("bildungschancen"), "bildungschanc");});
test("bildungsgut -> bildungsgut", function() {deepEqual( Stem("bildungsgut"), "bildungsgut");});
test("bildzeitung -> bildzeit", function() {deepEqual( Stem("bildzeitung"), "bildzeit");});
test("bileam -> bileam", function() {deepEqual( Stem("bileam"), "bileam");});
test("bileams -> bileam", function() {deepEqual( Stem("bileams"), "bileam");});
test("billige -> billig", function() {deepEqual( Stem("billige"), "billig");});
test("billigen -> billig", function() {deepEqual( Stem("billigen"), "billig");});
test("billigenden -> billig", function() {deepEqual( Stem("billigenden"), "billig");});
test("billiger -> billig", function() {deepEqual( Stem("billiger"), "billig");});
test("billigkeit -> billig", function() {deepEqual( Stem("billigkeit"), "billig");});
test("billigste -> billig", function() {deepEqual( Stem("billigste"), "billig");});
test("billigung -> billig", function() {deepEqual( Stem("billigung"), "billig");});
test("bimmelglöcklein -> bimmelglocklein", function() {deepEqual( Stem("bimmelglöcklein"), "bimmelglocklein");});
test("bin -> bin", function() {deepEqual( Stem("bin"), "bin");});
test("bind -> bind", function() {deepEqual( Stem("bind"), "bind");});
test("binde -> bind", function() {deepEqual( Stem("binde"), "bind");});
test("binden -> bind", function() {deepEqual( Stem("binden"), "bind");});
test("bindet -> bindet", function() {deepEqual( Stem("bindet"), "bindet");});
test("bindfaden -> bindfad", function() {deepEqual( Stem("bindfaden"), "bindfad");});
test("binse -> bins", function() {deepEqual( Stem("binse"), "bins");});
test("biographien -> biographi", function() {deepEqual( Stem("biographien"), "biographi");});
test("birgt -> birgt", function() {deepEqual( Stem("birgt"), "birgt");});
test("birke -> birk", function() {deepEqual( Stem("birke"), "birk");});
test("birkenzweiglein -> birkenzweiglein", function() {deepEqual( Stem("birkenzweiglein"), "birkenzweiglein");});
test("birnen -> birn", function() {deepEqual( Stem("birnen"), "birn");});
test("birnenstiel -> birnenstiel", function() {deepEqual( Stem("birnenstiel"), "birnenstiel");});
test("bis -> bis", function() {deepEqual( Stem("bis"), "bis");});
test("bischof -> bischof", function() {deepEqual( Stem("bischof"), "bischof");});
test("bischöfe -> bischof", function() {deepEqual( Stem("bischöfe"), "bischof");});
test("bischofs -> bischof", function() {deepEqual( Stem("bischofs"), "bischof");});
test("bischofskonferenz -> bischofskonferenz", function() {deepEqual( Stem("bischofskonferenz"), "bischofskonferenz");});
test("bischofswiesen -> bischofswies", function() {deepEqual( Stem("bischofswiesen"), "bischofswies");});
test("bisher -> bish", function() {deepEqual( Stem("bisher"), "bish");});
test("bisherige -> bisher", function() {deepEqual( Stem("bisherige"), "bisher");});
test("bisherigen -> bisher", function() {deepEqual( Stem("bisherigen"), "bisher");});
test("bisheriges -> bisher", function() {deepEqual( Stem("bisheriges"), "bisher");});
test("bislang -> bislang", function() {deepEqual( Stem("bislang"), "bislang");});
test("biss -> biss", function() {deepEqual( Stem("biss"), "biss");});
test("bisschen -> bissch", function() {deepEqual( Stem("bisschen"), "bissch");});
test("bißchen -> bissch", function() {deepEqual( Stem("bißchen"), "bissch");});
test("bissel -> bissel", function() {deepEqual( Stem("bissel"), "bissel");});
test("bissen -> biss", function() {deepEqual( Stem("bissen"), "biss");});
test("bisserl -> bisserl", function() {deepEqual( Stem("bisserl"), "bisserl");});
test("bissl -> bissl", function() {deepEqual( Stem("bissl"), "bissl");});
test("bist -> bist", function() {deepEqual( Stem("bist"), "bist");});
test("bistum -> bistum", function() {deepEqual( Stem("bistum"), "bistum");});
test("bisweilen -> bisweil", function() {deepEqual( Stem("bisweilen"), "bisweil");});
test("bitt -> bitt", function() {deepEqual( Stem("bitt"), "bitt");});
test("bitte -> bitt", function() {deepEqual( Stem("bitte"), "bitt");});
test("bitten -> bitt", function() {deepEqual( Stem("bitten"), "bitt");});
test("bittend -> bittend", function() {deepEqual( Stem("bittend"), "bittend");});
test("bittenden -> bittend", function() {deepEqual( Stem("bittenden"), "bittend");});
test("bitter -> bitt", function() {deepEqual( Stem("bitter"), "bitt");});
test("bittere -> bitt", function() {deepEqual( Stem("bittere"), "bitt");});
test("bitteren -> bitt", function() {deepEqual( Stem("bitteren"), "bitt");});
test("bitterer -> bitt", function() {deepEqual( Stem("bitterer"), "bitt");});
test("bitteres -> bitt", function() {deepEqual( Stem("bitteres"), "bitt");});
test("bitterkalten -> bitterkalt", function() {deepEqual( Stem("bitterkalten"), "bitterkalt");});
test("bitterkeit -> bitter", function() {deepEqual( Stem("bitterkeit"), "bitter");});
test("bitterlich -> bitt", function() {deepEqual( Stem("bitterlich"), "bitt");});
test("bitterlicher -> bitt", function() {deepEqual( Stem("bitterlicher"), "bitt");});
test("bittern -> bitt", function() {deepEqual( Stem("bittern"), "bitt");});
test("bitterste -> bitterst", function() {deepEqual( Stem("bitterste"), "bitterst");});
test("bittersten -> bitterst", function() {deepEqual( Stem("bittersten"), "bitterst");});
test("bittest -> bitt", function() {deepEqual( Stem("bittest"), "bitt");});
test("bittet -> bittet", function() {deepEqual( Stem("bittet"), "bittet");});
test("biwakspässe -> biwakspass", function() {deepEqual( Stem("biwakspässe"), "biwakspass");});
test("biwakspäße -> biwakspass", function() {deepEqual( Stem("biwakspäße"), "biwakspass");});
test("blachfeld -> blachfeld", function() {deepEqual( Stem("blachfeld"), "blachfeld");});
test("blagen -> blag", function() {deepEqual( Stem("blagen"), "blag");});
test("blähet -> blahet", function() {deepEqual( Stem("blähet"), "blahet");});
test("blähte -> blaht", function() {deepEqual( Stem("blähte"), "blaht");});
test("blank -> blank", function() {deepEqual( Stem("blank"), "blank");});
test("blanke -> blank", function() {deepEqual( Stem("blanke"), "blank");});
test("blanken -> blank", function() {deepEqual( Stem("blanken"), "blank");});
test("blanker -> blank", function() {deepEqual( Stem("blanker"), "blank");});
test("blankes -> blank", function() {deepEqual( Stem("blankes"), "blank");});
test("blankgepanzerte -> blankgepanzert", function() {deepEqual( Stem("blankgepanzerte"), "blankgepanzert");});
test("bläschen -> blasch", function() {deepEqual( Stem("bläschen"), "blasch");});
test("blase -> blas", function() {deepEqual( Stem("blase"), "blas");});
test("blasebalg -> blasebalg", function() {deepEqual( Stem("blasebalg"), "blasebalg");});
test("blasebälgen -> blasebalg", function() {deepEqual( Stem("blasebälgen"), "blasebalg");});
test("blasen -> blas", function() {deepEqual( Stem("blasen"), "blas");});
test("blasensteigen -> blasensteig", function() {deepEqual( Stem("blasensteigen"), "blasensteig");});
test("blasiert -> blasiert", function() {deepEqual( Stem("blasiert"), "blasiert");});
test("blasierten -> blasiert", function() {deepEqual( Stem("blasierten"), "blasiert");});
test("blasinstrument -> blasinstrument", function() {deepEqual( Stem("blasinstrument"), "blasinstrument");});
test("blasinstrumente -> blasinstrument", function() {deepEqual( Stem("blasinstrumente"), "blasinstrument");});
test("blass -> blass", function() {deepEqual( Stem("blass"), "blass");});
test("blaß -> blass", function() {deepEqual( Stem("blaß"), "blass");});
test("blasse -> blass", function() {deepEqual( Stem("blasse"), "blass");});
test("blässe -> blass", function() {deepEqual( Stem("blässe"), "blass");});
test("blassen -> blass", function() {deepEqual( Stem("blassen"), "blass");});
test("blasser -> blass", function() {deepEqual( Stem("blasser"), "blass");});
test("blasses -> blass", function() {deepEqual( Stem("blasses"), "blass");});
test("bläst -> blast", function() {deepEqual( Stem("bläst"), "blast");});
test("blatt -> blatt", function() {deepEqual( Stem("blatt"), "blatt");});
test("blättchen -> blattch", function() {deepEqual( Stem("blättchen"), "blattch");});
test("blatte -> blatt", function() {deepEqual( Stem("blatte"), "blatt");});
test("blatteln -> blatteln", function() {deepEqual( Stem("blatteln"), "blatteln");});
test("blatten -> blatt", function() {deepEqual( Stem("blatten"), "blatt");});
test("blätter -> blatt", function() {deepEqual( Stem("blätter"), "blatt");});
test("blattern -> blatt", function() {deepEqual( Stem("blattern"), "blatt");});
test("blättern -> blatt", function() {deepEqual( Stem("blättern"), "blatt");});
test("blatterngeschwüre -> blatterngeschwur", function() {deepEqual( Stem("blatterngeschwüre"), "blatterngeschwur");});
test("blätterreste -> blatterr", function() {deepEqual( Stem("blätterreste"), "blatterr");});
test("blätterte -> blattert", function() {deepEqual( Stem("blätterte"), "blattert");});
test("blätterten -> blattert", function() {deepEqual( Stem("blätterten"), "blattert");});
test("blattes -> blatt", function() {deepEqual( Stem("blattes"), "blatt");});
test("blau -> blau", function() {deepEqual( Stem("blau"), "blau");});
test("blaue -> blau", function() {deepEqual( Stem("blaue"), "blau");});
test("blauem -> blau", function() {deepEqual( Stem("blauem"), "blau");});
test("blauen -> blau", function() {deepEqual( Stem("blauen"), "blau");});
test("blaues -> blau", function() {deepEqual( Stem("blaues"), "blau");});
test("blauesten -> blau", function() {deepEqual( Stem("blauesten"), "blau");});
test("blaufärber -> blaufarb", function() {deepEqual( Stem("blaufärber"), "blaufarb");});
test("blaugefärbter -> blaugefarbt", function() {deepEqual( Stem("blaugefärbter"), "blaugefarbt");});
test("blaugrün -> blaugrun", function() {deepEqual( Stem("blaugrün"), "blaugrun");});
test("bläulich -> blaulich", function() {deepEqual( Stem("bläulich"), "blaulich");});
test("bläulichen -> blaulich", function() {deepEqual( Stem("bläulichen"), "blaulich");});
test("blausamt -> blausamt", function() {deepEqual( Stem("blausamt"), "blausamt");});
test("blauseidenen -> blauseid", function() {deepEqual( Stem("blauseidenen"), "blauseid");});
test("blauweissen -> blauweiss", function() {deepEqual( Stem("blauweissen"), "blauweiss");});
test("bleamerln -> bleamerln", function() {deepEqual( Stem("bleamerln"), "bleamerln");});
test("blech -> blech", function() {deepEqual( Stem("blech"), "blech");});
test("blecherne -> blechern", function() {deepEqual( Stem("blecherne"), "blechern");});
test("blechkerl -> blechkerl", function() {deepEqual( Stem("blechkerl"), "blechkerl");});
test("blechlöffeln -> blechloffeln", function() {deepEqual( Stem("blechlöffeln"), "blechloffeln");});
test("blechmusik -> blechmus", function() {deepEqual( Stem("blechmusik"), "blechmus");});
test("blechschachtel -> blechschachtel", function() {deepEqual( Stem("blechschachtel"), "blechschachtel");});
test("blechschilde -> blechschild", function() {deepEqual( Stem("blechschilde"), "blechschild");});
test("blei -> blei", function() {deepEqual( Stem("blei"), "blei");});
test("bleib -> bleib", function() {deepEqual( Stem("bleib"), "bleib");});
test("bleibe -> bleib", function() {deepEqual( Stem("bleibe"), "bleib");});
test("bleiben -> bleib", function() {deepEqual( Stem("bleiben"), "bleib");});
test("bleibend -> bleibend", function() {deepEqual( Stem("bleibend"), "bleibend");});
test("bleibende -> bleibend", function() {deepEqual( Stem("bleibende"), "bleibend");});
test("bleibenden -> bleibend", function() {deepEqual( Stem("bleibenden"), "bleibend");});
test("bleibender -> bleibend", function() {deepEqual( Stem("bleibender"), "bleibend");});
test("bleibendes -> bleibend", function() {deepEqual( Stem("bleibendes"), "bleibend");});
test("bleibestätten -> bleibestatt", function() {deepEqual( Stem("bleibestätten"), "bleibestatt");});
test("bleibet -> bleibet", function() {deepEqual( Stem("bleibet"), "bleibet");});
test("bleibn -> bleibn", function() {deepEqual( Stem("bleibn"), "bleibn");});
test("bleibst -> bleib", function() {deepEqual( Stem("bleibst"), "bleib");});
test("bleibt -> bleibt", function() {deepEqual( Stem("bleibt"), "bleibt");});
test("bleich -> bleich", function() {deepEqual( Stem("bleich"), "bleich");});
test("bleiche -> bleich", function() {deepEqual( Stem("bleiche"), "bleich");});
test("bleichen -> bleich", function() {deepEqual( Stem("bleichen"), "bleich");});
test("bleicher -> bleich", function() {deepEqual( Stem("bleicher"), "bleich");});
test("bleihände -> bleihand", function() {deepEqual( Stem("bleihände"), "bleihand");});
test("bleikugeln -> bleikugeln", function() {deepEqual( Stem("bleikugeln"), "bleikugeln");});
test("bleischweren -> bleischw", function() {deepEqual( Stem("bleischweren"), "bleischw");});
test("bleistift -> bleistift", function() {deepEqual( Stem("bleistift"), "bleistift");});
test("bleistifte -> bleistift", function() {deepEqual( Stem("bleistifte"), "bleistift");});
test("blendend -> blendend", function() {deepEqual( Stem("blendend"), "blendend");});
test("blendenden -> blendend", function() {deepEqual( Stem("blendenden"), "blendend");});
test("blendendes -> blendend", function() {deepEqual( Stem("blendendes"), "blendend");});
test("blendendweisse -> blendendweiss", function() {deepEqual( Stem("blendendweisse"), "blendendweiss");});
test("blendet -> blendet", function() {deepEqual( Stem("blendet"), "blendet");});
test("blendlaterne -> blendlatern", function() {deepEqual( Stem("blendlaterne"), "blendlatern");});
test("blendwerk -> blendwerk", function() {deepEqual( Stem("blendwerk"), "blendwerk");});
test("blessierter -> blessiert", function() {deepEqual( Stem("blessierter"), "blessiert");});
test("blick -> blick", function() {deepEqual( Stem("blick"), "blick");});
test("blicke -> blick", function() {deepEqual( Stem("blicke"), "blick");});
test("blicken -> blick", function() {deepEqual( Stem("blicken"), "blick");});
test("blickend -> blickend", function() {deepEqual( Stem("blickend"), "blickend");});
test("blickenden -> blickend", function() {deepEqual( Stem("blickenden"), "blickend");});
test("blickes -> blick", function() {deepEqual( Stem("blickes"), "blick");});
test("blickt -> blickt", function() {deepEqual( Stem("blickt"), "blickt");});
test("blickte -> blickt", function() {deepEqual( Stem("blickte"), "blickt");});
test("blickten -> blickt", function() {deepEqual( Stem("blickten"), "blickt");});
test("blieb -> blieb", function() {deepEqual( Stem("blieb"), "blieb");});
test("bliebe -> blieb", function() {deepEqual( Stem("bliebe"), "blieb");});
test("blieben -> blieb", function() {deepEqual( Stem("blieben"), "blieb");});
test("bliebn -> bliebn", function() {deepEqual( Stem("bliebn"), "bliebn");});
test("bliem -> bliem", function() {deepEqual( Stem("bliem"), "bliem");});
test("blies -> blies", function() {deepEqual( Stem("blies"), "blies");});
test("bliesen -> blies", function() {deepEqual( Stem("bliesen"), "blies");});
test("blind -> blind", function() {deepEqual( Stem("blind"), "blind");});
test("blinde -> blind", function() {deepEqual( Stem("blinde"), "blind");});
test("blinden -> blind", function() {deepEqual( Stem("blinden"), "blind");});
test("blinder -> blind", function() {deepEqual( Stem("blinder"), "blind");});
test("blindes -> blind", function() {deepEqual( Stem("blindes"), "blind");});
test("blindgeborenen -> blindgebor", function() {deepEqual( Stem("blindgeborenen"), "blindgebor");});
test("blindlings -> blindling", function() {deepEqual( Stem("blindlings"), "blindling");});
test("blinkend -> blinkend", function() {deepEqual( Stem("blinkend"), "blinkend");});
test("blinkenden -> blinkend", function() {deepEqual( Stem("blinkenden"), "blinkend");});
test("blinkten -> blinkt", function() {deepEqual( Stem("blinkten"), "blinkt");});
test("blinzeln -> blinzeln", function() {deepEqual( Stem("blinzeln"), "blinzeln");});
test("blinzelnd -> blinzelnd", function() {deepEqual( Stem("blinzelnd"), "blinzelnd");});
test("blinzelte -> blinzelt", function() {deepEqual( Stem("blinzelte"), "blinzelt");});
test("blitz -> blitz", function() {deepEqual( Stem("blitz"), "blitz");});
test("blitzblank -> blitzblank", function() {deepEqual( Stem("blitzblank"), "blitzblank");});
test("blitze -> blitz", function() {deepEqual( Stem("blitze"), "blitz");});
test("blitzeblank -> blitzeblank", function() {deepEqual( Stem("blitzeblank"), "blitzeblank");});
test("blitzen -> blitz", function() {deepEqual( Stem("blitzen"), "blitz");});
test("blitzend -> blitzend", function() {deepEqual( Stem("blitzend"), "blitzend");});
test("blitzende -> blitzend", function() {deepEqual( Stem("blitzende"), "blitzend");});
test("blitzenden -> blitzend", function() {deepEqual( Stem("blitzenden"), "blitzend");});
test("blitzender -> blitzend", function() {deepEqual( Stem("blitzender"), "blitzend");});
test("blitzendes -> blitzend", function() {deepEqual( Stem("blitzendes"), "blitzend");});
test("blitzhexe -> blitzhex", function() {deepEqual( Stem("blitzhexe"), "blitzhex");});
test("blitzschnell -> blitzschnell", function() {deepEqual( Stem("blitzschnell"), "blitzschnell");});
test("blitzschnelle -> blitzschnell", function() {deepEqual( Stem("blitzschnelle"), "blitzschnell");});
test("blitzschnellen -> blitzschnell", function() {deepEqual( Stem("blitzschnellen"), "blitzschnell");});
test("blitzschrecken -> blitzschreck", function() {deepEqual( Stem("blitzschrecken"), "blitzschreck");});
test("blitzt -> blitzt", function() {deepEqual( Stem("blitzt"), "blitzt");});
test("blitzten -> blitzt", function() {deepEqual( Stem("blitzten"), "blitzt");});
test("block -> block", function() {deepEqual( Stem("block"), "block");});
test("blöcke -> block", function() {deepEqual( Stem("blöcke"), "block");});
test("blockiert -> blockiert", function() {deepEqual( Stem("blockiert"), "blockiert");});
test("blocksberg -> blocksberg", function() {deepEqual( Stem("blocksberg"), "blocksberg");});
test("blödigkeit -> blodig", function() {deepEqual( Stem("blödigkeit"), "blodig");});
test("blödsinne -> blodsinn", function() {deepEqual( Stem("blödsinne"), "blodsinn");});
test("blödsinnig -> blodsinn", function() {deepEqual( Stem("blödsinnig"), "blodsinn");});
test("blödsinnige -> blodsinn", function() {deepEqual( Stem("blödsinnige"), "blodsinn");});
test("blökende -> blokend", function() {deepEqual( Stem("blökende"), "blokend");});
test("blökender -> blokend", function() {deepEqual( Stem("blökender"), "blokend");});
test("blond -> blond", function() {deepEqual( Stem("blond"), "blond");});
test("blonden -> blond", function() {deepEqual( Stem("blonden"), "blond");});
test("blondes -> blond", function() {deepEqual( Stem("blondes"), "blond");});
test("blondhaar -> blondhaar", function() {deepEqual( Stem("blondhaar"), "blondhaar");});
test("bloss -> bloss", function() {deepEqual( Stem("bloss"), "bloss");});
test("bloß -> bloss", function() {deepEqual( Stem("bloß"), "bloss");});
test("blosse -> bloss", function() {deepEqual( Stem("blosse"), "bloss");});
test("bloße -> bloss", function() {deepEqual( Stem("bloße"), "bloss");});
test("blösse -> bloss", function() {deepEqual( Stem("blösse"), "bloss");});
test("blöße -> bloss", function() {deepEqual( Stem("blöße"), "bloss");});
test("blossem -> bloss", function() {deepEqual( Stem("blossem"), "bloss");});
test("blossen -> bloss", function() {deepEqual( Stem("blossen"), "bloss");});
test("bloßen -> bloss", function() {deepEqual( Stem("bloßen"), "bloss");});
test("blosser -> bloss", function() {deepEqual( Stem("blosser"), "bloss");});
test("bloßer -> bloss", function() {deepEqual( Stem("bloßer"), "bloss");});
test("blosses -> bloss", function() {deepEqual( Stem("blosses"), "bloss");});
test("bloßes -> bloss", function() {deepEqual( Stem("bloßes"), "bloss");});
test("blossfüssiger -> blossfuss", function() {deepEqual( Stem("blossfüssiger"), "blossfuss");});
test("bloßfüßiger -> blossfuss", function() {deepEqual( Stem("bloßfüßiger"), "blossfuss");});
test("blosslegung -> blossleg", function() {deepEqual( Stem("blosslegung"), "blossleg");});
test("bloßlegung -> blossleg", function() {deepEqual( Stem("bloßlegung"), "blossleg");});
test("blouse -> blous", function() {deepEqual( Stem("blouse"), "blous");});
test("blousengestalt -> blousengestalt", function() {deepEqual( Stem("blousengestalt"), "blousengestalt");});
test("blousenmann -> blousenmann", function() {deepEqual( Stem("blousenmann"), "blousenmann");});
test("blousenmannes -> blousenmann", function() {deepEqual( Stem("blousenmannes"), "blousenmann");});
test("blubber -> blubb", function() {deepEqual( Stem("blubber"), "blubb");});
test("blubberquacks -> blubberquack", function() {deepEqual( Stem("blubberquacks"), "blubberquack");});
test("bluet -> bluet", function() {deepEqual( Stem("bluet"), "bluet");});
test("blühen -> bluh", function() {deepEqual( Stem("blühen"), "bluh");});
test("blühend -> bluhend", function() {deepEqual( Stem("blühend"), "bluhend");});
test("blühendem -> bluhend", function() {deepEqual( Stem("blühendem"), "bluhend");});
test("blühenden -> bluhend", function() {deepEqual( Stem("blühenden"), "bluhend");});
test("blühendes -> bluhend", function() {deepEqual( Stem("blühendes"), "bluhend");});
test("blühendsten -> bluhend", function() {deepEqual( Stem("blühendsten"), "bluhend");});
test("blühn -> bluhn", function() {deepEqual( Stem("blühn"), "bluhn");});
test("blüht -> bluht", function() {deepEqual( Stem("blüht"), "bluht");});
test("blühte -> bluht", function() {deepEqual( Stem("blühte"), "bluht");});
test("blühten -> bluht", function() {deepEqual( Stem("blühten"), "bluht");});
test("blümchen -> blumch", function() {deepEqual( Stem("blümchen"), "blumch");});
test("blume -> blum", function() {deepEqual( Stem("blume"), "blum");});
test("blumen -> blum", function() {deepEqual( Stem("blumen"), "blum");});
test("blumenbouquets -> blumenbouquet", function() {deepEqual( Stem("blumenbouquets"), "blumenbouquet");});
test("blumenduft -> blumenduft", function() {deepEqual( Stem("blumenduft"), "blumenduft");});
test("blumengeschmückte -> blumengeschmuckt", function() {deepEqual( Stem("blumengeschmückte"), "blumengeschmuckt");});
test("blumenglas -> blumenglas", function() {deepEqual( Stem("blumenglas"), "blumenglas");});
test("blumenhaufen -> blumenhauf", function() {deepEqual( Stem("blumenhaufen"), "blumenhauf");});
test("blumenköpfe -> blumenkopf", function() {deepEqual( Stem("blumenköpfe"), "blumenkopf");});
test("blumenkränzen -> blumenkranz", function() {deepEqual( Stem("blumenkränzen"), "blumenkranz");});
test("blumenstrauss -> blumenstrauss", function() {deepEqual( Stem("blumenstrauss"), "blumenstrauss");});
test("blumenstrauß -> blumenstrauss", function() {deepEqual( Stem("blumenstrauß"), "blumenstrauss");});
test("blumentöpfe -> blumentopf", function() {deepEqual( Stem("blumentöpfe"), "blumentopf");});
test("blut -> blut", function() {deepEqual( Stem("blut"), "blut");});
test("blutarmen -> blutarm", function() {deepEqual( Stem("blutarmen"), "blutarm");});
test("blutbräutigam -> blutbrautigam", function() {deepEqual( Stem("blutbräutigam"), "blutbrautigam");});
test("blutbräutigams -> blutbrautigam", function() {deepEqual( Stem("blutbräutigams"), "blutbrautigam");});
test("blutdürstige -> blutdurst", function() {deepEqual( Stem("blutdürstige"), "blutdurst");});
test("blute -> blut", function() {deepEqual( Stem("blute"), "blut");});
test("blüte -> blut", function() {deepEqual( Stem("blüte"), "blut");});
test("blüten -> blut", function() {deepEqual( Stem("blüten"), "blut");});
test("blütenknopsen -> blutenknops", function() {deepEqual( Stem("blütenknopsen"), "blutenknops");});
test("blutes -> blut", function() {deepEqual( Stem("blutes"), "blut");});
test("blutete -> blutet", function() {deepEqual( Stem("blutete"), "blutet");});
test("blütezeit -> blutezeit", function() {deepEqual( Stem("blütezeit"), "blutezeit");});
test("blutgericht -> blutgericht", function() {deepEqual( Stem("blutgericht"), "blutgericht");});
test("blutgeruch -> blutgeruch", function() {deepEqual( Stem("blutgeruch"), "blutgeruch");});
test("blutgestank -> blutgestank", function() {deepEqual( Stem("blutgestank"), "blutgestank");});
test("blutgieriges -> blutgier", function() {deepEqual( Stem("blutgieriges"), "blutgier");});
test("blutig -> blutig", function() {deepEqual( Stem("blutig"), "blutig");});
test("blutigel -> blutigel", function() {deepEqual( Stem("blutigel"), "blutigel");});
test("blutigen -> blutig", function() {deepEqual( Stem("blutigen"), "blutig");});
test("blutlose -> blutlos", function() {deepEqual( Stem("blutlose"), "blutlos");});
test("blutmensch -> blutmensch", function() {deepEqual( Stem("blutmensch"), "blutmensch");});
test("blutrot -> blutrot", function() {deepEqual( Stem("blutrot"), "blutrot");});
test("blutroten -> blutrot", function() {deepEqual( Stem("blutroten"), "blutrot");});
test("blutschlangen -> blutschlang", function() {deepEqual( Stem("blutschlangen"), "blutschlang");});
test("blutschulden -> blutschuld", function() {deepEqual( Stem("blutschulden"), "blutschuld");});
test("blutsfreundschaft -> blutsfreundschaft", function() {deepEqual( Stem("blutsfreundschaft"), "blutsfreundschaft");});
test("blutsfreundschaften -> blutsfreundschaft", function() {deepEqual( Stem("blutsfreundschaften"), "blutsfreundschaft");});
test("blutstropfen -> blutstropf", function() {deepEqual( Stem("blutstropfen"), "blutstropf");});
test("blutsverwandten -> blutsverwandt", function() {deepEqual( Stem("blutsverwandten"), "blutsverwandt");});
test("blutumlauf -> blutumlauf", function() {deepEqual( Stem("blutumlauf"), "blutumlauf");});
test("blutungen -> blutung", function() {deepEqual( Stem("blutungen"), "blutung");});
test("blutwelle -> blutwell", function() {deepEqual( Stem("blutwelle"), "blutwell");});
test("bm -> bm", function() {deepEqual( Stem("bm"), "bm");});
test("bock -> bock", function() {deepEqual( Stem("bock"), "bock");});
test("böckchen -> bockch", function() {deepEqual( Stem("böckchen"), "bockch");});
test("bocke -> bock", function() {deepEqual( Stem("bocke"), "bock");});
test("böcke -> bock", function() {deepEqual( Stem("böcke"), "bock");});
test("bockelt -> bockelt", function() {deepEqual( Stem("bockelt"), "bockelt");});
test("böcken -> bock", function() {deepEqual( Stem("böcken"), "bock");});
test("bockes -> bock", function() {deepEqual( Stem("bockes"), "bock");});
test("bockreiter -> bockreit", function() {deepEqual( Stem("bockreiter"), "bockreit");});
test("bocksbeutel -> bocksbeutel", function() {deepEqual( Stem("bocksbeutel"), "bocksbeutel");});
test("bocksgemäcker -> bocksgemack", function() {deepEqual( Stem("bocksgemäcker"), "bocksgemack");});
test("bockt -> bockt", function() {deepEqual( Stem("bockt"), "bockt");});
test("boden -> bod", function() {deepEqual( Stem("boden"), "bod");});
test("bodenraum -> bodenraum", function() {deepEqual( Stem("bodenraum"), "bodenraum");});
test("bodens -> bod", function() {deepEqual( Stem("bodens"), "bod");});
test("boell -> boell", function() {deepEqual( Stem("boell"), "boell");});
test("bog -> bog", function() {deepEqual( Stem("bog"), "bog");});
test("bogen -> bog", function() {deepEqual( Stem("bogen"), "bog");});
test("böhmerwald -> bohmerwald", function() {deepEqual( Stem("böhmerwald"), "bohmerwald");});
test("bohnen -> bohn", function() {deepEqual( Stem("bohnen"), "bohn");});
test("bohnenstangen -> bohnenstang", function() {deepEqual( Stem("bohnenstangen"), "bohnenstang");});
test("bohnenwäldchen -> bohnenwaldch", function() {deepEqual( Stem("bohnenwäldchen"), "bohnenwaldch");});
test("böhni -> bohni", function() {deepEqual( Stem("böhni"), "bohni");});
test("bohrt -> bohrt", function() {deepEqual( Stem("bohrt"), "bohrt");});
test("bohrten -> bohrt", function() {deepEqual( Stem("bohrten"), "bohrt");});
test("bold -> bold", function() {deepEqual( Stem("bold"), "bold");});
test("bolen -> bol", function() {deepEqual( Stem("bolen"), "bol");});
test("böll -> boll", function() {deepEqual( Stem("böll"), "boll");});
test("böllerschüsse -> bollerschuss", function() {deepEqual( Stem("böllerschüsse"), "bollerschuss");});
test("bollwerk -> bollwerk", function() {deepEqual( Stem("bollwerk"), "bollwerk");});
test("bologna -> bologna", function() {deepEqual( Stem("bologna"), "bologna");});
test("bologneser -> bolognes", function() {deepEqual( Stem("bologneser"), "bolognes");});
test("bolzenburg -> bolzenburg", function() {deepEqual( Stem("bolzenburg"), "bolzenburg");});
test("bombardierte -> bombardiert", function() {deepEqual( Stem("bombardierte"), "bombardiert");});
test("bomben -> bomb", function() {deepEqual( Stem("bomben"), "bomb");});
test("bombenschlag -> bombenschlag", function() {deepEqual( Stem("bombenschlag"), "bombenschlag");});
test("bona -> bona", function() {deepEqual( Stem("bona"), "bona");});
test("bonbonbüchse -> bonbonbuchs", function() {deepEqual( Stem("bonbonbüchse"), "bonbonbuchs");});
test("bonbonknospen -> bonbonknosp", function() {deepEqual( Stem("bonbonknospen"), "bonbonknosp");});
test("bonbons -> bonbon", function() {deepEqual( Stem("bonbons"), "bonbon");});
test("bonbonsträucher -> bonbonstrauch", function() {deepEqual( Stem("bonbonsträucher"), "bonbonstrauch");});
test("bondevik -> bondev", function() {deepEqual( Stem("bondevik"), "bondev");});
test("boni -> boni", function() {deepEqual( Stem("boni"), "boni");});
test("bonum -> bonum", function() {deepEqual( Stem("bonum"), "bonum");});
test("bonus -> bonus", function() {deepEqual( Stem("bonus"), "bonus");});
test("boot -> boot", function() {deepEqual( Stem("boot"), "boot");});
test("bootes -> boot", function() {deepEqual( Stem("bootes"), "boot");});
test("bordeaux -> bordeaux", function() {deepEqual( Stem("bordeaux"), "bordeaux");});
test("borden -> bord", function() {deepEqual( Stem("borden"), "bord");});
test("borer -> bor", function() {deepEqual( Stem("borer"), "bor");});
test("born -> born", function() {deepEqual( Stem("born"), "born");});
test("börse -> bors", function() {deepEqual( Stem("börse"), "bors");});
test("borste -> borst", function() {deepEqual( Stem("borste"), "borst");});
test("bös -> bos", function() {deepEqual( Stem("bös"), "bos");});
test("bösartig -> bosart", function() {deepEqual( Stem("bösartig"), "bosart");});
test("bösartiger -> bosart", function() {deepEqual( Stem("bösartiger"), "bosart");});
test("bösartigkeit -> bosart", function() {deepEqual( Stem("bösartigkeit"), "bosart");});
test("böschung -> boschung", function() {deepEqual( Stem("böschung"), "boschung");});
test("böse -> bos", function() {deepEqual( Stem("böse"), "bos");});
test("bösem -> bos", function() {deepEqual( Stem("bösem"), "bos");});
test("bösen -> bos", function() {deepEqual( Stem("bösen"), "bos");});
test("böser -> bos", function() {deepEqual( Stem("böser"), "bos");});
test("böses -> bos", function() {deepEqual( Stem("böses"), "bos");});
test("bösestun -> bosestun", function() {deepEqual( Stem("bösestun"), "bosestun");});
test("bösewicht -> bosewicht", function() {deepEqual( Stem("bösewicht"), "bosewicht");});
test("bösewichte -> bosewicht", function() {deepEqual( Stem("bösewichte"), "bosewicht");});
test("boshafte -> boshaft", function() {deepEqual( Stem("boshafte"), "boshaft");});
test("boshaftes -> boshaft", function() {deepEqual( Stem("boshaftes"), "boshaft");});
test("bosheit -> bosheit", function() {deepEqual( Stem("bosheit"), "bosheit");});
test("bössein -> bossein", function() {deepEqual( Stem("bössein"), "bossein");});
test("böswillige -> boswill", function() {deepEqual( Stem("böswillige"), "boswill");});
test("böswilliges -> boswill", function() {deepEqual( Stem("böswilliges"), "boswill");});
test("böswilligkeit -> boswill", function() {deepEqual( Stem("böswilligkeit"), "boswill");});
test("bot -> bot", function() {deepEqual( Stem("bot"), "bot");});
test("bote -> bot", function() {deepEqual( Stem("bote"), "bot");});
test("boten -> bot", function() {deepEqual( Stem("boten"), "bot");});
test("botschaft -> botschaft", function() {deepEqual( Stem("botschaft"), "botschaft");});
test("botschafter -> botschaft", function() {deepEqual( Stem("botschafter"), "botschaft");});
test("botschafters -> botschaft", function() {deepEqual( Stem("botschafters"), "botschaft");});
test("botta -> botta", function() {deepEqual( Stem("botta"), "botta");});
test("böttcher -> bottch", function() {deepEqual( Stem("böttcher"), "bottch");});
test("bouffonerie -> bouffoneri", function() {deepEqual( Stem("bouffonerie"), "bouffoneri");});
test("boutique -> boutiqu", function() {deepEqual( Stem("boutique"), "boutiqu");});
test("boykottieren -> boykotti", function() {deepEqual( Stem("boykottieren"), "boykotti");});
test("brabanter -> brabant", function() {deepEqual( Stem("brabanter"), "brabant");});
test("brach -> brach", function() {deepEqual( Stem("brach"), "brach");});
test("brachen -> brach", function() {deepEqual( Stem("brachen"), "brach");});
test("brachlägen -> brachlag", function() {deepEqual( Stem("brachlägen"), "brachlag");});
test("bracht -> bracht", function() {deepEqual( Stem("bracht"), "bracht");});
test("brächt -> bracht", function() {deepEqual( Stem("brächt"), "bracht");});
test("brachte -> bracht", function() {deepEqual( Stem("brachte"), "bracht");});
test("brächte -> bracht", function() {deepEqual( Stem("brächte"), "bracht");});
test("brachten -> bracht", function() {deepEqual( Stem("brachten"), "bracht");});
test("brächten -> bracht", function() {deepEqual( Stem("brächten"), "bracht");});
test("bracken -> brack", function() {deepEqual( Stem("bracken"), "brack");});
test("braffs -> braff", function() {deepEqual( Stem("braffs"), "braff");});
test("brand -> brand", function() {deepEqual( Stem("brand"), "brand");});
test("brande -> brand", function() {deepEqual( Stem("brande"), "brand");});
test("brände -> brand", function() {deepEqual( Stem("brände"), "brand");});
test("branden -> brand", function() {deepEqual( Stem("branden"), "brand");});
test("brandenburg -> brandenburg", function() {deepEqual( Stem("brandenburg"), "brandenburg");});
test("brandgefilde -> brandgefild", function() {deepEqual( Stem("brandgefilde"), "brandgefild");});
test("brandmauern -> brandmau", function() {deepEqual( Stem("brandmauern"), "brandmau");});
test("brandopfer -> brandopf", function() {deepEqual( Stem("brandopfer"), "brandopf");});
test("brandopfern -> brandopf", function() {deepEqual( Stem("brandopfern"), "brandopf");});
test("brandroten -> brandrot", function() {deepEqual( Stem("brandroten"), "brandrot");});
test("brandrotes -> brandrot", function() {deepEqual( Stem("brandrotes"), "brandrot");});
test("brandschnur -> brandschnur", function() {deepEqual( Stem("brandschnur"), "brandschnur");});
test("brandung -> brandung", function() {deepEqual( Stem("brandung"), "brandung");});
test("brannte -> brannt", function() {deepEqual( Stem("brannte"), "brannt");});
test("brannten -> brannt", function() {deepEqual( Stem("brannten"), "brannt");});
test("bratapfel -> bratapfel", function() {deepEqual( Stem("bratapfel"), "bratapfel");});
test("brate -> brat", function() {deepEqual( Stem("brate"), "brat");});
test("braten -> brat", function() {deepEqual( Stem("braten"), "brat");});
test("bratenfett -> bratenfett", function() {deepEqual( Stem("bratenfett"), "bratenfett");});
test("bratenspässen -> bratenspass", function() {deepEqual( Stem("bratenspässen"), "bratenspass");});
test("bratenspiess -> bratenspiess", function() {deepEqual( Stem("bratenspiess"), "bratenspiess");});
test("bratenspieß -> bratenspiess", function() {deepEqual( Stem("bratenspieß"), "bratenspiess");});
test("bratspiess -> bratspiess", function() {deepEqual( Stem("bratspiess"), "bratspiess");});
test("bratwurst -> bratwurst", function() {deepEqual( Stem("bratwurst"), "bratwurst");});
test("brauch -> brauch", function() {deepEqual( Stem("brauch"), "brauch");});
test("brauchbar -> brauchbar", function() {deepEqual( Stem("brauchbar"), "brauchbar");});
test("brauchbaren -> brauchbar", function() {deepEqual( Stem("brauchbaren"), "brauchbar");});
test("brauchbarer -> brauchbar", function() {deepEqual( Stem("brauchbarer"), "brauchbar");});
test("brauche -> brauch", function() {deepEqual( Stem("brauche"), "brauch");});
test("brauchen -> brauch", function() {deepEqual( Stem("brauchen"), "brauch");});
test("brauchet -> brauchet", function() {deepEqual( Stem("brauchet"), "brauchet");});
test("brauchst -> brauch", function() {deepEqual( Stem("brauchst"), "brauch");});
test("braucht -> braucht", function() {deepEqual( Stem("braucht"), "braucht");});
test("brauchte -> braucht", function() {deepEqual( Stem("brauchte"), "braucht");});
test("brauchten -> braucht", function() {deepEqual( Stem("brauchten"), "braucht");});
test("brauchtet -> brauchtet", function() {deepEqual( Stem("brauchtet"), "brauchtet");});
test("brauen -> brau", function() {deepEqual( Stem("brauen"), "brau");});
test("brauervieh -> brauervieh", function() {deepEqual( Stem("brauervieh"), "brauervieh");});
test("braun -> braun", function() {deepEqual( Stem("braun"), "braun");});
test("braune -> braun", function() {deepEqual( Stem("braune"), "braun");});
test("braunem -> braun", function() {deepEqual( Stem("braunem"), "braun");});
test("braunen -> braun", function() {deepEqual( Stem("braunen"), "braun");});
test("brauner -> braun", function() {deepEqual( Stem("brauner"), "braun");});
test("braunes -> braun", function() {deepEqual( Stem("braunes"), "braun");});
test("braungebranntem -> braungebrannt", function() {deepEqual( Stem("braungebranntem"), "braungebrannt");});
test("braungoldene -> braungold", function() {deepEqual( Stem("braungoldene"), "braungold");});
test("braunkariertes -> braunkariert", function() {deepEqual( Stem("braunkariertes"), "braunkariert");});
test("bräunliche -> braunlich", function() {deepEqual( Stem("bräunliche"), "braunlich");});
test("bräunlichen -> braunlich", function() {deepEqual( Stem("bräunlichen"), "braunlich");});
test("braunrotes -> braunrot", function() {deepEqual( Stem("braunrotes"), "braunrot");});
test("braunschweig -> braunschweig", function() {deepEqual( Stem("braunschweig"), "braunschweig");});
test("brausen -> braus", function() {deepEqual( Stem("brausen"), "braus");});
test("brauste -> braust", function() {deepEqual( Stem("brauste"), "braust");});
test("brausten -> braust", function() {deepEqual( Stem("brausten"), "braust");});
test("braut -> braut", function() {deepEqual( Stem("braut"), "braut");});
test("brautbett -> brautbett", function() {deepEqual( Stem("brautbett"), "brautbett");});
test("brautgeschenke -> brautgeschenk", function() {deepEqual( Stem("brautgeschenke"), "brautgeschenk");});
test("bräutigam -> brautigam", function() {deepEqual( Stem("bräutigam"), "brautigam");});
test("bräutigams -> brautigam", function() {deepEqual( Stem("bräutigams"), "brautigam");});
test("bräutlein -> brautlein", function() {deepEqual( Stem("bräutlein"), "brautlein");});
test("brautpaar -> brautpaar", function() {deepEqual( Stem("brautpaar"), "brautpaar");});
test("brautwesen -> brautwes", function() {deepEqual( Stem("brautwesen"), "brautwes");});
test("brav -> brav", function() {deepEqual( Stem("brav"), "brav");});
test("brave -> brav", function() {deepEqual( Stem("brave"), "brav");});
test("braven -> brav", function() {deepEqual( Stem("braven"), "brav");});
test("braver -> brav", function() {deepEqual( Stem("braver"), "brav");});
test("braves -> brav", function() {deepEqual( Stem("braves"), "brav");});
test("bravo -> bravo", function() {deepEqual( Stem("bravo"), "bravo");});
test("breche -> brech", function() {deepEqual( Stem("breche"), "brech");});
test("brechen -> brech", function() {deepEqual( Stem("brechen"), "brech");});
test("brechend -> brechend", function() {deepEqual( Stem("brechend"), "brechend");});
test("brechenden -> brechend", function() {deepEqual( Stem("brechenden"), "brechend");});
test("brei -> brei", function() {deepEqual( Stem("brei"), "brei");});
test("breies -> breies", function() {deepEqual( Stem("breies"), "breies");});
test("breit -> breit", function() {deepEqual( Stem("breit"), "breit");});
test("breite -> breit", function() {deepEqual( Stem("breite"), "breit");});
test("breiten -> breit", function() {deepEqual( Stem("breiten"), "breit");});
test("breiter -> breit", function() {deepEqual( Stem("breiter"), "breit");});
test("breites -> breit", function() {deepEqual( Stem("breites"), "breit");});
test("breitet -> breitet", function() {deepEqual( Stem("breitet"), "breitet");});
test("breitete -> breitet", function() {deepEqual( Stem("breitete"), "breitet");});
test("breiteten -> breitet", function() {deepEqual( Stem("breiteten"), "breitet");});
test("breitgerissenen -> breitgeriss", function() {deepEqual( Stem("breitgerissenen"), "breitgeriss");});
test("breitgewordenen -> breitgeword", function() {deepEqual( Stem("breitgewordenen"), "breitgeword");});
test("breitkrempigen -> breitkremp", function() {deepEqual( Stem("breitkrempigen"), "breitkremp");});
test("breitschultrige -> breitschultr", function() {deepEqual( Stem("breitschultrige"), "breitschultr");});
test("breitspurigkeit -> breitspur", function() {deepEqual( Stem("breitspurigkeit"), "breitspur");});
test("bremner -> bremn", function() {deepEqual( Stem("bremner"), "bremn");});
test("brenne -> brenn", function() {deepEqual( Stem("brenne"), "brenn");});
test("brennen -> brenn", function() {deepEqual( Stem("brennen"), "brenn");});
test("brennend -> brennend", function() {deepEqual( Stem("brennend"), "brennend");});
test("brennendem -> brennend", function() {deepEqual( Stem("brennendem"), "brennend");});
test("brennenden -> brennend", function() {deepEqual( Stem("brennenden"), "brennend");});
test("brennendes -> brennend", function() {deepEqual( Stem("brennendes"), "brennend");});
test("brennt -> brennt", function() {deepEqual( Stem("brennt"), "brennt");});
test("brenzelte -> brenzelt", function() {deepEqual( Stem("brenzelte"), "brenzelt");});
test("brenzlig -> brenzlig", function() {deepEqual( Stem("brenzlig"), "brenzlig");});
test("brett -> brett", function() {deepEqual( Stem("brett"), "brett");});
test("brette -> brett", function() {deepEqual( Stem("brette"), "brett");});
test("bretter -> brett", function() {deepEqual( Stem("bretter"), "brett");});
test("bretternägel -> bretternagel", function() {deepEqual( Stem("bretternägel"), "bretternagel");});
test("bricht -> bricht", function() {deepEqual( Stem("bricht"), "bricht");});
test("bridge -> bridg", function() {deepEqual( Stem("bridge"), "bridg");});
test("bridgefreundinnen -> bridgefreundinn", function() {deepEqual( Stem("bridgefreundinnen"), "bridgefreundinn");});
test("brief -> brief", function() {deepEqual( Stem("brief"), "brief");});
test("briefe -> brief", function() {deepEqual( Stem("briefe"), "brief");});
test("briefes -> brief", function() {deepEqual( Stem("briefes"), "brief");});
test("brieflich -> brieflich", function() {deepEqual( Stem("brieflich"), "brieflich");});
test("briefstelle -> briefstell", function() {deepEqual( Stem("briefstelle"), "briefstell");});
test("briefsteller -> briefstell", function() {deepEqual( Stem("briefsteller"), "briefstell");});
test("brieftasche -> brieftasch", function() {deepEqual( Stem("brieftasche"), "brieftasch");});
test("briet -> briet", function() {deepEqual( Stem("briet"), "briet");});
test("brille -> brill", function() {deepEqual( Stem("brille"), "brill");});
test("bring -> bring", function() {deepEqual( Stem("bring"), "bring");});
test("bringe -> bring", function() {deepEqual( Stem("bringe"), "bring");});
test("bringen -> bring", function() {deepEqual( Stem("bringen"), "bring");});
test("bringenden -> bringend", function() {deepEqual( Stem("bringenden"), "bringend");});
test("bringet -> bringet", function() {deepEqual( Stem("bringet"), "bringet");});
test("bringt -> bringt", function() {deepEqual( Stem("bringt"), "bringt");});
test("brite -> brit", function() {deepEqual( Stem("brite"), "brit");});
test("briten -> brit", function() {deepEqual( Stem("briten"), "brit");});
test("britische -> britisch", function() {deepEqual( Stem("britische"), "britisch");});
test("britischen -> britisch", function() {deepEqual( Stem("britischen"), "britisch");});
test("brits -> brit", function() {deepEqual( Stem("brits"), "brit");});
test("brochen -> broch", function() {deepEqual( Stem("brochen"), "broch");});
test("bröckeln -> brockeln", function() {deepEqual( Stem("bröckeln"), "brockeln");});
test("bröckelt -> brockelt", function() {deepEqual( Stem("bröckelt"), "brockelt");});
test("brocken -> brock", function() {deepEqual( Stem("brocken"), "brock");});
test("brokatene -> brokat", function() {deepEqual( Stem("brokatene"), "brokat");});
test("broldin -> broldin", function() {deepEqual( Stem("broldin"), "broldin");});
test("brosamen -> brosam", function() {deepEqual( Stem("brosamen"), "brosam");});
test("broschek -> broschek", function() {deepEqual( Stem("broschek"), "broschek");});
test("broscheks -> broschek", function() {deepEqual( Stem("broscheks"), "broschek");});
test("broschüre -> broschur", function() {deepEqual( Stem("broschüre"), "broschur");});
test("brot -> brot", function() {deepEqual( Stem("brot"), "brot");});
test("brotbissen -> brotbiss", function() {deepEqual( Stem("brotbissen"), "brotbiss");});
test("brötchen -> brotch", function() {deepEqual( Stem("brötchen"), "brotch");});
test("brote -> brot", function() {deepEqual( Stem("brote"), "brot");});
test("broten -> brot", function() {deepEqual( Stem("broten"), "brot");});
test("brotes -> brot", function() {deepEqual( Stem("brotes"), "brot");});
test("brotessen -> brotess", function() {deepEqual( Stem("brotessen"), "brotess");});
test("brotlaib -> brotlaib", function() {deepEqual( Stem("brotlaib"), "brotlaib");});
test("brotrinde -> brotrind", function() {deepEqual( Stem("brotrinde"), "brotrind");});
test("brots -> brot", function() {deepEqual( Stem("brots"), "brot");});
test("brotteller -> brottell", function() {deepEqual( Stem("brotteller"), "brottell");});
test("brrrrrrrr -> brrrrrrrr", function() {deepEqual( Stem("brrrrrrrr"), "brrrrrrrr");});
test("brsg -> brsg", function() {deepEqual( Stem("brsg"), "brsg");});
test("bruch -> bruch", function() {deepEqual( Stem("bruch"), "bruch");});
test("brüche -> bruch", function() {deepEqual( Stem("brüche"), "bruch");});
test("bruchstückweise -> bruchstuckweis", function() {deepEqual( Stem("bruchstückweise"), "bruchstuckweis");});
test("bruchus -> bruchus", function() {deepEqual( Stem("bruchus"), "bruchus");});
test("bruchwand -> bruchwand", function() {deepEqual( Stem("bruchwand"), "bruchwand");});
test("brücke -> bruck", function() {deepEqual( Stem("brücke"), "bruck");});
test("brückenbauer -> bruckenbau", function() {deepEqual( Stem("brückenbauer"), "bruckenbau");});
test("brudder -> brudd", function() {deepEqual( Stem("brudder"), "brudd");});
test("bruder -> brud", function() {deepEqual( Stem("bruder"), "brud");});
test("brüder -> brud", function() {deepEqual( Stem("brüder"), "brud");});
test("brüderlich -> brud", function() {deepEqual( Stem("brüderlich"), "brud");});
test("brüdern -> brud", function() {deepEqual( Stem("brüdern"), "brud");});
test("bruders -> brud", function() {deepEqual( Stem("bruders"), "brud");});
test("bruderschaft -> bruderschaft", function() {deepEqual( Stem("bruderschaft"), "bruderschaft");});
test("brüderschaft -> bruderschaft", function() {deepEqual( Stem("brüderschaft"), "bruderschaft");});
test("bruderschaften -> bruderschaft", function() {deepEqual( Stem("bruderschaften"), "bruderschaft");});
test("brühe -> bruh", function() {deepEqual( Stem("brühe"), "bruh");});
test("brüllen -> brull", function() {deepEqual( Stem("brüllen"), "brull");});
test("brüllend -> brullend", function() {deepEqual( Stem("brüllend"), "brullend");});
test("brüller -> brull", function() {deepEqual( Stem("brüller"), "brull");});
test("brüllet -> brullet", function() {deepEqual( Stem("brüllet"), "brullet");});
test("brüllte -> brullt", function() {deepEqual( Stem("brüllte"), "brullt");});
test("brumm -> brumm", function() {deepEqual( Stem("brumm"), "brumm");});
test("brummbass -> brummbass", function() {deepEqual( Stem("brummbass"), "brummbass");});
test("brummbässe -> brummbass", function() {deepEqual( Stem("brummbässe"), "brummbass");});
test("brummbassgezeter -> brummbassgezet", function() {deepEqual( Stem("brummbassgezeter"), "brummbassgezet");});
test("brummbaßgezeter -> brummbassgezet", function() {deepEqual( Stem("brummbaßgezeter"), "brummbassgezet");});
test("brummen -> brumm", function() {deepEqual( Stem("brummen"), "brumm");});
test("brummend -> brummend", function() {deepEqual( Stem("brummend"), "brummend");});
test("brummenden -> brummend", function() {deepEqual( Stem("brummenden"), "brummend");});
test("brummkonzert -> brummkonzert", function() {deepEqual( Stem("brummkonzert"), "brummkonzert");});
test("brummt -> brummt", function() {deepEqual( Stem("brummt"), "brummt");});
test("brummte -> brummt", function() {deepEqual( Stem("brummte"), "brummt");});
test("brunnen -> brunn", function() {deepEqual( Stem("brunnen"), "brunn");});
test("brunnenbank -> brunnenbank", function() {deepEqual( Stem("brunnenbank"), "brunnenbank");});
test("brunnens -> brunn", function() {deepEqual( Stem("brunnens"), "brunn");});
test("brunnenschwengel -> brunnenschwengel", function() {deepEqual( Stem("brunnenschwengel"), "brunnenschwengel");});
test("brunnenschwengeln -> brunnenschwengeln", function() {deepEqual( Stem("brunnenschwengeln"), "brunnenschwengeln");});
test("brunnenstrahl -> brunnenstrahl", function() {deepEqual( Stem("brunnenstrahl"), "brunnenstrahl");});
test("brünstig -> brunstig", function() {deepEqual( Stem("brünstig"), "brunstig");});
test("brünstigem -> brunstig", function() {deepEqual( Stem("brünstigem"), "brunstig");});
test("brüssel -> brussel", function() {deepEqual( Stem("brüssel"), "brussel");});
test("brust -> brust", function() {deepEqual( Stem("brust"), "brust");});
test("brustbildern -> brustbild", function() {deepEqual( Stem("brustbildern"), "brustbild");});
test("brüste -> brust", function() {deepEqual( Stem("brüste"), "brust");});
test("brustfleck -> brustfleck", function() {deepEqual( Stem("brustfleck"), "brustfleck");});
test("brustgewand -> brustgewand", function() {deepEqual( Stem("brustgewand"), "brustgewand");});
test("brustkorb -> brustkorb", function() {deepEqual( Stem("brustkorb"), "brustkorb");});
test("brustlatz -> brustlatz", function() {deepEqual( Stem("brustlatz"), "brustlatz");});
test("brustschild -> brustschild", function() {deepEqual( Stem("brustschild"), "brustschild");});
test("brustschildlein -> brustschildlein", function() {deepEqual( Stem("brustschildlein"), "brustschildlein");});
test("brusttasche -> brusttasch", function() {deepEqual( Stem("brusttasche"), "brusttasch");});
test("brüstung -> brustung", function() {deepEqual( Stem("brüstung"), "brustung");});
test("brustwehr -> brustwehr", function() {deepEqual( Stem("brustwehr"), "brustwehr");});
test("brütend -> brutend", function() {deepEqual( Stem("brütend"), "brutend");});
test("brüteten -> brutet", function() {deepEqual( Stem("brüteten"), "brutet");});
test("brütige -> brutig", function() {deepEqual( Stem("brütige"), "brutig");});
test("bschlachter -> bschlacht", function() {deepEqual( Stem("bschlachter"), "bschlacht");});
test("bscht -> bscht", function() {deepEqual( Stem("bscht"), "bscht");});
test("bsorgen -> bsorg", function() {deepEqual( Stem("bsorgen"), "bsorg");});
test("bsucht -> bsucht", function() {deepEqual( Stem("bsucht"), "bsucht");});
test("bua -> bua", function() {deepEqual( Stem("bua"), "bua");});
test("bub -> bub", function() {deepEqual( Stem("bub"), "bub");});
test("bübchen -> bubch", function() {deepEqual( Stem("bübchen"), "bubch");});
test("buben -> bub", function() {deepEqual( Stem("buben"), "bub");});
test("bubenmädchen -> bubenmadch", function() {deepEqual( Stem("bubenmädchen"), "bubenmadch");});
test("bübisch -> bubisch", function() {deepEqual( Stem("bübisch"), "bubisch");});
test("buch -> buch", function() {deepEqual( Stem("buch"), "buch");});
test("buchbinder -> buchbind", function() {deepEqual( Stem("buchbinder"), "buchbind");});
test("buchbindergesellen -> buchbindergesell", function() {deepEqual( Stem("buchbindergesellen"), "buchbindergesell");});
test("buchbinders -> buchbind", function() {deepEqual( Stem("buchbinders"), "buchbind");});
test("buche -> buch", function() {deepEqual( Stem("buche"), "buch");});
test("büchelchen -> buchelch", function() {deepEqual( Stem("büchelchen"), "buchelch");});
test("buchen -> buch", function() {deepEqual( Stem("buchen"), "buch");});
test("buchenast -> buchenast", function() {deepEqual( Stem("buchenast"), "buchenast");});
test("buchenholz -> buchenholz", function() {deepEqual( Stem("buchenholz"), "buchenholz");});
test("buchenknorren -> buchenknorr", function() {deepEqual( Stem("buchenknorren"), "buchenknorr");});
test("buchenlaub -> buchenlaub", function() {deepEqual( Stem("buchenlaub"), "buchenlaub");});
test("buchenwäldchen -> buchenwaldch", function() {deepEqual( Stem("buchenwäldchen"), "buchenwaldch");});
test("buchenwipfel -> buchenwipfel", function() {deepEqual( Stem("buchenwipfel"), "buchenwipfel");});
test("bücher -> buch", function() {deepEqual( Stem("bücher"), "buch");});
test("büchereien -> bucherei", function() {deepEqual( Stem("büchereien"), "bucherei");});
test("büchern -> buch", function() {deepEqual( Stem("büchern"), "buch");});
test("bücherschränken -> bucherschrank", function() {deepEqual( Stem("bücherschränken"), "bucherschrank");});
test("buches -> buch", function() {deepEqual( Stem("buches"), "buch");});
test("buchhalter -> buchhalt", function() {deepEqual( Stem("buchhalter"), "buchhalt");});
test("buchhandlungen -> buchhandl", function() {deepEqual( Stem("buchhandlungen"), "buchhandl");});
test("büchlein -> buchlein", function() {deepEqual( Stem("büchlein"), "buchlein");});
test("büchschen -> buchsch", function() {deepEqual( Stem("büchschen"), "buchsch");});
test("büchse -> buchs", function() {deepEqual( Stem("büchse"), "buchs");});
test("büchsen -> buchs", function() {deepEqual( Stem("büchsen"), "buchs");});
test("büchsenlicht -> buchsenlicht", function() {deepEqual( Stem("büchsenlicht"), "buchsenlicht");});
test("büchsenmacher -> buchsenmach", function() {deepEqual( Stem("büchsenmacher"), "buchsenmach");});
test("büchsenmacherei -> buchsenmacherei", function() {deepEqual( Stem("büchsenmacherei"), "buchsenmacherei");});
test("büchsenschmied -> buchsenschmied", function() {deepEqual( Stem("büchsenschmied"), "buchsenschmied");});
test("büchsenschuss -> buchsenschuss", function() {deepEqual( Stem("büchsenschuss"), "buchsenschuss");});
test("büchsenstein -> buchsenstein", function() {deepEqual( Stem("büchsenstein"), "buchsenstein");});
test("büchsflinte -> buchsflint", function() {deepEqual( Stem("büchsflinte"), "buchsflint");});
test("buchstabe -> buchstab", function() {deepEqual( Stem("buchstabe"), "buchstab");});
test("buchstaben -> buchstab", function() {deepEqual( Stem("buchstaben"), "buchstab");});
test("buchstabens -> buchstab", function() {deepEqual( Stem("buchstabens"), "buchstab");});
test("buchstabensinn -> buchstabensinn", function() {deepEqual( Stem("buchstabensinn"), "buchstabensinn");});
test("buchstabensinne -> buchstabensinn", function() {deepEqual( Stem("buchstabensinne"), "buchstabensinn");});
test("buchstabensinns -> buchstabensinn", function() {deepEqual( Stem("buchstabensinns"), "buchstabensinn");});
test("buchstäbliche -> buchstab", function() {deepEqual( Stem("buchstäbliche"), "buchstab");});
test("buchstäblichen -> buchstab", function() {deepEqual( Stem("buchstäblichen"), "buchstab");});
test("buchungsbelegen -> buchungsbeleg", function() {deepEqual( Stem("buchungsbelegen"), "buchungsbeleg");});
test("bücke -> buck", function() {deepEqual( Stem("bücke"), "buck");});
test("buckel -> buckel", function() {deepEqual( Stem("buckel"), "buckel");});
test("bücken -> buck", function() {deepEqual( Stem("bücken"), "buck");});
test("bucklige -> bucklig", function() {deepEqual( Stem("bucklige"), "bucklig");});
test("buckligen -> bucklig", function() {deepEqual( Stem("buckligen"), "bucklig");});
test("buckliger -> bucklig", function() {deepEqual( Stem("buckliger"), "bucklig");});
test("buckliges -> bucklig", function() {deepEqual( Stem("buckliges"), "bucklig");});
test("buckskin -> buckskin", function() {deepEqual( Stem("buckskin"), "buckskin");});
test("bückt -> buckt", function() {deepEqual( Stem("bückt"), "buckt");});
test("bückte -> buckt", function() {deepEqual( Stem("bückte"), "buckt");});
test("buden -> bud", function() {deepEqual( Stem("buden"), "bud");});
test("budgetiert -> budgetiert", function() {deepEqual( Stem("budgetiert"), "budgetiert");});
test("büfettier -> bufetti", function() {deepEqual( Stem("büfettier"), "bufetti");});
test("büffel -> buffel", function() {deepEqual( Stem("büffel"), "buffel");});
test("büffet -> buffet", function() {deepEqual( Stem("büffet"), "buffet");});
test("bügeleisen -> bugeleis", function() {deepEqual( Stem("bügeleisen"), "bugeleis");});
test("bügelgestemmte -> bugelgestemmt", function() {deepEqual( Stem("bügelgestemmte"), "bugelgestemmt");});
test("bügelte -> bugelt", function() {deepEqual( Stem("bügelte"), "bugelt");});
test("buhlerisches -> buhler", function() {deepEqual( Stem("buhlerisches"), "buhler");});
test("buhlerlohn -> buhlerlohn", function() {deepEqual( Stem("buhlerlohn"), "buhlerlohn");});
test("buhleten -> buhlet", function() {deepEqual( Stem("buhleten"), "buhlet");});
test("bühnenmanagerin -> buhnenmanagerin", function() {deepEqual( Stem("bühnenmanagerin"), "buhnenmanagerin");});
test("bujv -> bujv", function() {deepEqual( Stem("bujv"), "bujv");});
test("bulle -> bull", function() {deepEqual( Stem("bulle"), "bull");});
test("bullern -> bull", function() {deepEqual( Stem("bullern"), "bull");});
test("bullerte -> bullert", function() {deepEqual( Stem("bullerte"), "bullert");});
test("bum -> bum", function() {deepEqual( Stem("bum"), "bum");});
test("bums -> bum", function() {deepEqual( Stem("bums"), "bum");});
test("bund -> bund", function() {deepEqual( Stem("bund"), "bund");});
test("bunde -> bund", function() {deepEqual( Stem("bunde"), "bund");});
test("bünde -> bund", function() {deepEqual( Stem("bünde"), "bund");});
test("bündel -> bundel", function() {deepEqual( Stem("bündel"), "bundel");});
test("bündelchen -> bundelch", function() {deepEqual( Stem("bündelchen"), "bundelch");});
test("bündelein -> bundelein", function() {deepEqual( Stem("bündelein"), "bundelein");});
test("bündeln -> bundeln", function() {deepEqual( Stem("bündeln"), "bundeln");});
test("bündelturme -> bundelturm", function() {deepEqual( Stem("bündelturme"), "bundelturm");});
test("bündelweise -> bundelweis", function() {deepEqual( Stem("bündelweise"), "bundelweis");});
test("bundes -> bund", function() {deepEqual( Stem("bundes"), "bund");});
test("bundesebene -> bundeseb", function() {deepEqual( Stem("bundesebene"), "bundeseb");});
test("bundesgenossen -> bundesgenoss", function() {deepEqual( Stem("bundesgenossen"), "bundesgenoss");});
test("bundesgetz -> bundesgetz", function() {deepEqual( Stem("bundesgetz"), "bundesgetz");});
test("bundeslade -> bundeslad", function() {deepEqual( Stem("bundeslade"), "bundeslad");});
test("bundesland -> bundesland", function() {deepEqual( Stem("bundesland"), "bundesland");});
test("bundeslandes -> bundesland", function() {deepEqual( Stem("bundeslandes"), "bundesland");});
test("bundesleben -> bundesleb", function() {deepEqual( Stem("bundesleben"), "bundesleb");});
test("bundespräsident -> bundesprasident", function() {deepEqual( Stem("bundespräsident"), "bundesprasident");});
test("bundesrat -> bundesrat", function() {deepEqual( Stem("bundesrat"), "bundesrat");});
test("bundesräte -> bundesrat", function() {deepEqual( Stem("bundesräte"), "bundesrat");});
test("bundessache -> bundessach", function() {deepEqual( Stem("bundessache"), "bundessach");});
test("bundesverwaltung -> bundesverwalt", function() {deepEqual( Stem("bundesverwaltung"), "bundesverwalt");});
test("bundeswehr -> bundeswehr", function() {deepEqual( Stem("bundeswehr"), "bundeswehr");});
test("bündner -> bundn", function() {deepEqual( Stem("bündner"), "bundn");});
test("bündnis -> bundnis", function() {deepEqual( Stem("bündnis"), "bundnis");});
test("bündnisse -> bundnis", function() {deepEqual( Stem("bündnisse"), "bundnis");});
test("bündnissen -> bundnis", function() {deepEqual( Stem("bündnissen"), "bundnis");});
test("bünger -> bung", function() {deepEqual( Stem("bünger"), "bung");});
test("bunt -> bunt", function() {deepEqual( Stem("bunt"), "bunt");});
test("buntbemalte -> buntbemalt", function() {deepEqual( Stem("buntbemalte"), "buntbemalt");});
test("bunte -> bunt", function() {deepEqual( Stem("bunte"), "bunt");});
test("buntem -> bunt", function() {deepEqual( Stem("buntem"), "bunt");});
test("bunten -> bunt", function() {deepEqual( Stem("bunten"), "bunt");});
test("bunter -> bunt", function() {deepEqual( Stem("bunter"), "bunt");});
test("buntes -> bunt", function() {deepEqual( Stem("buntes"), "bunt");});
test("buntesten -> bunt", function() {deepEqual( Stem("buntesten"), "bunt");});
test("buntester -> bunt", function() {deepEqual( Stem("buntester"), "bunt");});
test("buntscheckigen -> buntscheck", function() {deepEqual( Stem("buntscheckigen"), "buntscheck");});
test("bünzli -> bunzli", function() {deepEqual( Stem("bünzli"), "bunzli");});
test("bünzlin -> bunzlin", function() {deepEqual( Stem("bünzlin"), "bunzlin");});
test("buomberger -> buomberg", function() {deepEqual( Stem("buomberger"), "buomberg");});
test("bur -> bur", function() {deepEqual( Stem("bur"), "bur");});
test("bureau -> bureau", function() {deepEqual( Stem("bureau"), "bureau");});
test("bureaus -> bureaus", function() {deepEqual( Stem("bureaus"), "bureaus");});
test("burg -> burg", function() {deepEqual( Stem("burg"), "burg");});
test("burgen -> burg", function() {deepEqual( Stem("burgen"), "burg");});
test("bürger -> burg", function() {deepEqual( Stem("bürger"), "burg");});
test("bürgerhut -> burgerhut", function() {deepEqual( Stem("bürgerhut"), "burgerhut");});
test("bürgerinnen -> burgerinn", function() {deepEqual( Stem("bürgerinnen"), "burgerinn");});
test("bürgerkriegen -> burgerkrieg", function() {deepEqual( Stem("bürgerkriegen"), "burgerkrieg");});
test("bürgerlich -> burg", function() {deepEqual( Stem("bürgerlich"), "burg");});
test("bürgerliche -> burg", function() {deepEqual( Stem("bürgerliche"), "burg");});
test("bürgerlichem -> burg", function() {deepEqual( Stem("bürgerlichem"), "burg");});
test("bürgerlichen -> burg", function() {deepEqual( Stem("bürgerlichen"), "burg");});
test("bürgermeister -> burgermeist", function() {deepEqual( Stem("bürgermeister"), "burgermeist");});
test("bürgern -> burg", function() {deepEqual( Stem("bürgern"), "burg");});
test("bürgernest -> burgern", function() {deepEqual( Stem("bürgernest"), "burgern");});
test("bürgerrock -> burgerrock", function() {deepEqual( Stem("bürgerrock"), "burgerrock");});
test("bürgerschaft -> burgerschaft", function() {deepEqual( Stem("bürgerschaft"), "burgerschaft");});
test("bürgersinn -> burgersinn", function() {deepEqual( Stem("bürgersinn"), "burgersinn");});
test("bürgertugend -> burgertug", function() {deepEqual( Stem("bürgertugend"), "burgertug");});
test("burgfenster -> burgfen", function() {deepEqual( Stem("burgfenster"), "burgfen");});
test("burghofe -> burghof", function() {deepEqual( Stem("burghofe"), "burghof");});
test("bürgschaft -> burgschaft", function() {deepEqual( Stem("bürgschaft"), "burgschaft");});
test("burgtor -> burgtor", function() {deepEqual( Stem("burgtor"), "burgtor");});
test("burnus -> burnus", function() {deepEqual( Stem("burnus"), "burnus");});
test("burnusträgern -> burnustrag", function() {deepEqual( Stem("burnusträgern"), "burnustrag");});
test("büro -> buro", function() {deepEqual( Stem("büro"), "buro");});
test("bürokratischer -> burokrat", function() {deepEqual( Stem("bürokratischer"), "burokrat");});
test("büroräume -> buroraum", function() {deepEqual( Stem("büroräume"), "buroraum");});
test("büros -> buros", function() {deepEqual( Stem("büros"), "buros");});
test("bürozeit -> burozeit", function() {deepEqual( Stem("bürozeit"), "burozeit");});
test("bursch -> bursch", function() {deepEqual( Stem("bursch"), "bursch");});
test("bürschchen -> burschch", function() {deepEqual( Stem("bürschchen"), "burschch");});
test("bursche -> bursch", function() {deepEqual( Stem("bursche"), "bursch");});
test("burschen -> bursch", function() {deepEqual( Stem("burschen"), "bursch");});
test("burschikosen -> burschikos", function() {deepEqual( Stem("burschikosen"), "burschikos");});
test("bürschlein -> burschlein", function() {deepEqual( Stem("bürschlein"), "burschlein");});
test("bürstchen -> burstch", function() {deepEqual( Stem("bürstchen"), "burstch");});
test("bürste -> burst", function() {deepEqual( Stem("bürste"), "burst");});
test("bürstete -> burstet", function() {deepEqual( Stem("bürstete"), "burstet");});
test("bürstner -> burstn", function() {deepEqual( Stem("bürstner"), "burstn");});
test("bürstners -> burstn", function() {deepEqual( Stem("bürstners"), "burstn");});
test("bus -> bus", function() {deepEqual( Stem("bus"), "bus");});
test("busch -> busch", function() {deepEqual( Stem("busch"), "busch");});
test("büsche -> busch", function() {deepEqual( Stem("büsche"), "busch");});
test("büschel -> buschel", function() {deepEqual( Stem("büschel"), "buschel");});
test("büschen -> busch", function() {deepEqual( Stem("büschen"), "busch");});
test("buschigem -> buschig", function() {deepEqual( Stem("buschigem"), "buschig");});
test("buschigen -> buschig", function() {deepEqual( Stem("buschigen"), "buschig");});
test("buschwerk -> buschwerk", function() {deepEqual( Stem("buschwerk"), "buschwerk");});
test("busen -> bus", function() {deepEqual( Stem("busen"), "bus");});
test("busens -> bus", function() {deepEqual( Stem("busens"), "bus");});
test("busse -> buss", function() {deepEqual( Stem("busse"), "buss");});
test("buße -> buss", function() {deepEqual( Stem("buße"), "buss");});
test("büste -> bust", function() {deepEqual( Stem("büste"), "bust");});
test("bütte -> butt", function() {deepEqual( Stem("bütte"), "butt");});
test("butter -> butt", function() {deepEqual( Stem("butter"), "butt");});
test("butterblume -> butterblum", function() {deepEqual( Stem("butterblume"), "butterblum");});
test("butterbrot -> butterbrot", function() {deepEqual( Stem("butterbrot"), "butterbrot");});
test("butterfett -> butterfett", function() {deepEqual( Stem("butterfett"), "butterfett");});
test("buttertopf -> buttertopf", function() {deepEqual( Stem("buttertopf"), "buttertopf");});
test("byssus -> byssus", function() {deepEqual( Stem("byssus"), "byssus");});
test("bz -> bz", function() {deepEqual( Stem("bz"), "bz");});
test("bzw -> bzw", function() {deepEqual( Stem("bzw"), "bzw");});
test("ca -> ca", function() {deepEqual( Stem("ca"), "ca");});
test("cabaret -> cabaret", function() {deepEqual( Stem("cabaret"), "cabaret");});
test("cadens -> cad", function() {deepEqual( Stem("cadens"), "cad");});
test("café -> café", function() {deepEqual( Stem("café"), "café");});
test("camelia -> camelia", function() {deepEqual( Stem("camelia"), "camelia");});
test("canaille -> canaill", function() {deepEqual( Stem("canaille"), "canaill");});
test("canailles -> canaill", function() {deepEqual( Stem("canailles"), "canaill");});
test("canoro -> canoro", function() {deepEqual( Stem("canoro"), "canoro");});
test("capua -> capua", function() {deepEqual( Stem("capua"), "capua");});
test("care -> car", function() {deepEqual( Stem("care"), "car");});
test("caritas -> caritas", function() {deepEqual( Stem("caritas"), "caritas");});
test("carl -> carl", function() {deepEqual( Stem("carl"), "carl");});
test("carriere -> carri", function() {deepEqual( Stem("carriere"), "carri");});
test("castor -> castor", function() {deepEqual( Stem("castor"), "castor");});
test("catigo -> catigo", function() {deepEqual( Stem("catigo"), "catigo");});
test("causa -> causa", function() {deepEqual( Stem("causa"), "causa");});
test("causam -> causam", function() {deepEqual( Stem("causam"), "causam");});
test("causas -> causas", function() {deepEqual( Stem("causas"), "causas");});
test("cd -> cd", function() {deepEqual( Stem("cd"), "cd");});
test("cdu -> cdu", function() {deepEqual( Stem("cdu"), "cdu");});
test("cenis -> cenis", function() {deepEqual( Stem("cenis"), "cenis");});
test("center -> cent", function() {deepEqual( Stem("center"), "cent");});
test("central -> central", function() {deepEqual( Stem("central"), "central");});
test("centre -> centr", function() {deepEqual( Stem("centre"), "centr");});
test("ch -> ch", function() {deepEqual( Stem("ch"), "ch");});
test("chaldäer -> chalda", function() {deepEqual( Stem("chaldäer"), "chalda");});
test("chaldäern -> chalda", function() {deepEqual( Stem("chaldäern"), "chalda");});
test("cham -> cham", function() {deepEqual( Stem("cham"), "cham");});
test("chambery -> chambery", function() {deepEqual( Stem("chambery"), "chambery");});
test("champagner -> champagn", function() {deepEqual( Stem("champagner"), "champagn");});
test("champagnerflasche -> champagnerflasch", function() {deepEqual( Stem("champagnerflasche"), "champagnerflasch");});
test("champagnerkelch -> champagnerkelch", function() {deepEqual( Stem("champagnerkelch"), "champagnerkelch");});
test("chance -> chanc", function() {deepEqual( Stem("chance"), "chanc");});
test("chancen -> chanc", function() {deepEqual( Stem("chancen"), "chanc");});
test("channa -> channa", function() {deepEqual( Stem("channa"), "channa");});
test("chanoch -> chanoch", function() {deepEqual( Stem("chanoch"), "chanoch");});
test("chanochs -> chanoch", function() {deepEqual( Stem("chanochs"), "chanoch");});
test("chaos -> chaos", function() {deepEqual( Stem("chaos"), "chaos");});
test("chaotischen -> chaotisch", function() {deepEqual( Stem("chaotischen"), "chaotisch");});
test("character -> charact", function() {deepEqual( Stem("character"), "charact");});
test("charakter -> charakt", function() {deepEqual( Stem("charakter"), "charakt");});
test("charakterisieren -> charakterisi", function() {deepEqual( Stem("charakterisieren"), "charakterisi");});
test("charakteristik -> charakterist", function() {deepEqual( Stem("charakteristik"), "charakterist");});
test("charakteristisch -> charakterist", function() {deepEqual( Stem("charakteristisch"), "charakterist");});
test("charakteristische -> charakterist", function() {deepEqual( Stem("charakteristische"), "charakterist");});
test("charakters -> charakt", function() {deepEqual( Stem("charakters"), "charakt");});
test("charakterzug -> charakterzug", function() {deepEqual( Stem("charakterzug"), "charakterzug");});
test("charitas -> charitas", function() {deepEqual( Stem("charitas"), "charitas");});
test("chateau -> chateau", function() {deepEqual( Stem("chateau"), "chateau");});
test("chaussee -> chausse", function() {deepEqual( Stem("chaussee"), "chausse");});
test("chavah -> chavah", function() {deepEqual( Stem("chavah"), "chavah");});
test("chavillah -> chavillah", function() {deepEqual( Stem("chavillah"), "chavillah");});
test("chazors -> chazor", function() {deepEqual( Stem("chazors"), "chazor");});
test("che -> che", function() {deepEqual( Stem("che"), "che");});
test("chebron -> chebron", function() {deepEqual( Stem("chebron"), "chebron");});
test("check -> check", function() {deepEqual( Stem("check"), "check");});
test("checque -> checqu", function() {deepEqual( Stem("checque"), "checqu");});
test("cheese -> chees", function() {deepEqual( Stem("cheese"), "chees");});
test("chef -> chef", function() {deepEqual( Stem("chef"), "chef");});
test("cheflektor -> cheflektor", function() {deepEqual( Stem("cheflektor"), "cheflektor");});
test("chemie -> chemi", function() {deepEqual( Stem("chemie"), "chemi");});
test("chemikalien -> chemikali", function() {deepEqual( Stem("chemikalien"), "chemikali");});
test("chemist -> chemist", function() {deepEqual( Stem("chemist"), "chemist");});
test("chen -> chen", function() {deepEqual( Stem("chen"), "chen");});
test("cheres -> cher", function() {deepEqual( Stem("cheres"), "cher");});
test("cherub -> cherub", function() {deepEqual( Stem("cherub"), "cherub");});
test("cherube -> cherub", function() {deepEqual( Stem("cherube"), "cherub");});
test("cheruben -> cherub", function() {deepEqual( Stem("cheruben"), "cherub");});
test("cherubim -> cherubim", function() {deepEqual( Stem("cherubim"), "cherubim");});
test("cherubs -> cherub", function() {deepEqual( Stem("cherubs"), "cherub");});
test("chethiterin -> chethiterin", function() {deepEqual( Stem("chethiterin"), "chethiterin");});
test("chezron -> chezron", function() {deepEqual( Stem("chezron"), "chezron");});
test("chiddekel -> chiddekel", function() {deepEqual( Stem("chiddekel"), "chiddekel");});
test("chigen -> chig", function() {deepEqual( Stem("chigen"), "chig");});
test("chimärische -> chimar", function() {deepEqual( Stem("chimärische"), "chimar");});
test("china -> china", function() {deepEqual( Stem("china"), "china");});
test("chinesischen -> chines", function() {deepEqual( Stem("chinesischen"), "chines");});
test("chinesischer -> chines", function() {deepEqual( Stem("chinesischer"), "chines");});
test("chips -> chips", function() {deepEqual( Stem("chips"), "chips");});
test("chirurgen -> chirurg", function() {deepEqual( Stem("chirurgen"), "chirurg");});
test("chirurgiegehilfen -> chirurgiegehilf", function() {deepEqual( Stem("chirurgiegehilfen"), "chirurgiegehilf");});
test("chirurgische -> chirurg", function() {deepEqual( Stem("chirurgische"), "chirurg");});
test("choke -> chok", function() {deepEqual( Stem("choke"), "chok");});
test("choleriker -> choler", function() {deepEqual( Stem("choleriker"), "choler");});
test("chomer -> chom", function() {deepEqual( Stem("chomer"), "chom");});
test("chomers -> chom", function() {deepEqual( Stem("chomers"), "chom");});
test("chöre -> chor", function() {deepEqual( Stem("chöre"), "chor");});
test("chören -> chor", function() {deepEqual( Stem("chören"), "chor");});
test("chp -> chp", function() {deepEqual( Stem("chp"), "chp");});
test("christ -> christ", function() {deepEqual( Stem("christ"), "christ");});
test("christa -> christa", function() {deepEqual( Stem("christa"), "christa");});
test("christdemokratischen -> christdemokrat", function() {deepEqual( Stem("christdemokratischen"), "christdemokrat");});
test("christen -> christ", function() {deepEqual( Stem("christen"), "christ");});
test("christenglauben -> christenglaub", function() {deepEqual( Stem("christenglauben"), "christenglaub");});
test("christenheit -> christ", function() {deepEqual( Stem("christenheit"), "christ");});
test("christentum -> christentum", function() {deepEqual( Stem("christentum"), "christentum");});
test("christentums -> christentum", function() {deepEqual( Stem("christentums"), "christentum");});
test("christi -> christi", function() {deepEqual( Stem("christi"), "christi");});
test("christian -> christian", function() {deepEqual( Stem("christian"), "christian");});
test("christinnen -> christinn", function() {deepEqual( Stem("christinnen"), "christinn");});
test("christkindchen -> christkindch", function() {deepEqual( Stem("christkindchen"), "christkindch");});
test("christkindchens -> christkindch", function() {deepEqual( Stem("christkindchens"), "christkindch");});
test("christl -> christl", function() {deepEqual( Stem("christl"), "christl");});
test("christlich -> christlich", function() {deepEqual( Stem("christlich"), "christlich");});
test("christliche -> christlich", function() {deepEqual( Stem("christliche"), "christlich");});
test("christlichen -> christlich", function() {deepEqual( Stem("christlichen"), "christlich");});
test("christlicher -> christlich", function() {deepEqual( Stem("christlicher"), "christlich");});
test("christlicherseits -> christlicherseit", function() {deepEqual( Stem("christlicherseits"), "christlicherseit");});
test("christls -> christl", function() {deepEqual( Stem("christls"), "christl");});
test("christo -> christo", function() {deepEqual( Stem("christo"), "christo");});
test("christoph -> christoph", function() {deepEqual( Stem("christoph"), "christoph");});
test("christopher -> christoph", function() {deepEqual( Stem("christopher"), "christoph");});
test("christus -> christus", function() {deepEqual( Stem("christus"), "christus");});
test("chronik -> chronik", function() {deepEqual( Stem("chronik"), "chronik");});
test("chronischen -> chronisch", function() {deepEqual( Stem("chronischen"), "chronisch");});
test("chrysopras -> chrysopras", function() {deepEqual( Stem("chrysopras"), "chrysopras");});
test("cicero -> cicero", function() {deepEqual( Stem("cicero"), "cicero");});
test("citi -> citi", function() {deepEqual( Stem("citi"), "citi");});
test("city -> city", function() {deepEqual( Stem("city"), "city");});
test("claire -> clair", function() {deepEqual( Stem("claire"), "clair");});
test("claude -> claud", function() {deepEqual( Stem("claude"), "claud");});
test("close -> clos", function() {deepEqual( Stem("close"), "clos");});
test("club -> club", function() {deepEqual( Stem("club"), "club");});
test("co -> co", function() {deepEqual( Stem("co"), "co");});
test("coeleste -> coel", function() {deepEqual( Stem("coeleste"), "coel");});
test("coelesti -> coelesti", function() {deepEqual( Stem("coelesti"), "coelesti");});
test("coelestis -> coelestis", function() {deepEqual( Stem("coelestis"), "coelestis");});
test("cogitare -> cogitar", function() {deepEqual( Stem("cogitare"), "cogitar");});
test("coles -> col", function() {deepEqual( Stem("coles"), "col");});
test("college -> colleg", function() {deepEqual( Stem("college"), "colleg");});
test("colores -> color", function() {deepEqual( Stem("colores"), "color");});
test("comedian -> comedian", function() {deepEqual( Stem("comedian"), "comedian");});
test("committee -> committe", function() {deepEqual( Stem("committee"), "committe");});
test("communia -> communia", function() {deepEqual( Stem("communia"), "communia");});
test("communique -> communiqu", function() {deepEqual( Stem("communique"), "communiqu");});
test("comparationis -> comparationis", function() {deepEqual( Stem("comparationis"), "comparationis");});
test("computer -> comput", function() {deepEqual( Stem("computer"), "comput");});
test("computern -> comput", function() {deepEqual( Stem("computern"), "comput");});
test("computertomographie -> computertomographi", function() {deepEqual( Stem("computertomographie"), "computertomographi");});
test("concreto -> concreto", function() {deepEqual( Stem("concreto"), "concreto");});
test("condito -> condito", function() {deepEqual( Stem("condito"), "condito");});
test("conference -> conferenc", function() {deepEqual( Stem("conference"), "conferenc");});
test("conjugio -> conjugio", function() {deepEqual( Stem("conjugio"), "conjugio");});
test("consatant -> consatant", function() {deepEqual( Stem("consatant"), "consatant");});
test("consummatum -> consummatum", function() {deepEqual( Stem("consummatum"), "consummatum");});
test("continens -> contin", function() {deepEqual( Stem("continens"), "contin");});
test("contraria -> contraria", function() {deepEqual( Stem("contraria"), "contraria");});
test("contrarias -> contrarias", function() {deepEqual( Stem("contrarias"), "contrarias");});
test("copulatus -> copulatus", function() {deepEqual( Stem("copulatus"), "copulatus");});
test("copy -> copy", function() {deepEqual( Stem("copy"), "copy");});
test("corpora -> corpora", function() {deepEqual( Stem("corpora"), "corpora");});
test("corporis -> corporis", function() {deepEqual( Stem("corporis"), "corporis");});
test("corpus -> corpus", function() {deepEqual( Stem("corpus"), "corpus");});
test("cosmic -> cosmic", function() {deepEqual( Stem("cosmic"), "cosmic");});
test("costum -> costum", function() {deepEqual( Stem("costum"), "costum");});
test("cotti -> cotti", function() {deepEqual( Stem("cotti"), "cotti");});
test("couch -> couch", function() {deepEqual( Stem("couch"), "couch");});
test("council -> council", function() {deepEqual( Stem("council"), "council");});
test("couplet -> couplet", function() {deepEqual( Stem("couplet"), "couplet");});
test("cream -> cream", function() {deepEqual( Stem("cream"), "cream");});
test("credos -> credos", function() {deepEqual( Stem("credos"), "credos");});
test("crescenz -> crescenz", function() {deepEqual( Stem("crescenz"), "crescenz");});
test("crossair -> crossair", function() {deepEqual( Stem("crossair"), "crossair");});
test("csp -> csp", function() {deepEqual( Stem("csp"), "csp");});
test("cultores -> cultor", function() {deepEqual( Stem("cultores"), "cultor");});
test("cum -> cum", function() {deepEqual( Stem("cum"), "cum");});
test("customer -> custom", function() {deepEqual( Stem("customer"), "custom");});
test("cutta -> cutta", function() {deepEqual( Stem("cutta"), "cutta");});
test("cylinderhut -> cylinderhut", function() {deepEqual( Stem("cylinderhut"), "cylinderhut");});
test("cyperwein -> cyperwein", function() {deepEqual( Stem("cyperwein"), "cyperwein");});
test("d -> d", function() {deepEqual( Stem("d"), "d");});
test("da -> da", function() {deepEqual( Stem("da"), "da");});
test("dabei -> dabei", function() {deepEqual( Stem("dabei"), "dabei");});
test("dabeistand -> dabeistand", function() {deepEqual( Stem("dabeistand"), "dabeistand");});
test("dabeizusein -> dabeizusein", function() {deepEqual( Stem("dabeizusein"), "dabeizusein");});
test("dableiben -> dableib", function() {deepEqual( Stem("dableiben"), "dableib");});
test("dach -> dach", function() {deepEqual( Stem("dach"), "dach");});
test("dachboden -> dachbod", function() {deepEqual( Stem("dachboden"), "dachbod");});
test("dache -> dach", function() {deepEqual( Stem("dache"), "dach");});
test("dächer -> dach", function() {deepEqual( Stem("dächer"), "dach");});
test("dächern -> dach", function() {deepEqual( Stem("dächern"), "dach");});
test("daches -> dach", function() {deepEqual( Stem("daches"), "dach");});
test("dachorganisation -> dachorganisation", function() {deepEqual( Stem("dachorganisation"), "dachorganisation");});
test("dachrinne -> dachrinn", function() {deepEqual( Stem("dachrinne"), "dachrinn");});
test("dachs -> dach", function() {deepEqual( Stem("dachs"), "dach");});
test("dachse -> dachs", function() {deepEqual( Stem("dachse"), "dachs");});
test("dachsfell -> dachsfell", function() {deepEqual( Stem("dachsfell"), "dachsfell");});
test("dachsfellen -> dachsfell", function() {deepEqual( Stem("dachsfellen"), "dachsfell");});
test("dachte -> dacht", function() {deepEqual( Stem("dachte"), "dacht");});
test("dachten -> dacht", function() {deepEqual( Stem("dachten"), "dacht");});
test("dächten -> dacht", function() {deepEqual( Stem("dächten"), "dacht");});
test("dachtraufe -> dachtrauf", function() {deepEqual( Stem("dachtraufe"), "dachtrauf");});
test("dachtürmchen -> dachturmch", function() {deepEqual( Stem("dachtürmchen"), "dachturmch");});
test("dackel -> dackel", function() {deepEqual( Stem("dackel"), "dackel");});
test("dackeln -> dackeln", function() {deepEqual( Stem("dackeln"), "dackeln");});
test("dackels -> dackel", function() {deepEqual( Stem("dackels"), "dackel");});
test("dackelzüchterei -> dackelzuchterei", function() {deepEqual( Stem("dackelzüchterei"), "dackelzuchterei");});
test("dadrauf -> dadrauf", function() {deepEqual( Stem("dadrauf"), "dadrauf");});
test("dadurch -> dadurch", function() {deepEqual( Stem("dadurch"), "dadurch");});
test("dafür -> dafur", function() {deepEqual( Stem("dafür"), "dafur");});
test("dag -> dag", function() {deepEqual( Stem("dag"), "dag");});
test("dageblieben -> dageblieb", function() {deepEqual( Stem("dageblieben"), "dageblieb");});
test("dagegen -> dageg", function() {deepEqual( Stem("dagegen"), "dageg");});
test("dagesessen -> dagesess", function() {deepEqual( Stem("dagesessen"), "dagesess");});
test("dagestanden -> dagestand", function() {deepEqual( Stem("dagestanden"), "dagestand");});
test("dagewesen -> dagewes", function() {deepEqual( Stem("dagewesen"), "dagewes");});
test("daheim -> daheim", function() {deepEqual( Stem("daheim"), "daheim");});
test("daher -> dah", function() {deepEqual( Stem("daher"), "dah");});
test("dahergefahren -> dahergefahr", function() {deepEqual( Stem("dahergefahren"), "dahergefahr");});
test("dahergerannt -> dahergerannt", function() {deepEqual( Stem("dahergerannt"), "dahergerannt");});
test("dahergeschlenkert -> dahergeschlenkert", function() {deepEqual( Stem("dahergeschlenkert"), "dahergeschlenkert");});
test("daherging -> daherging", function() {deepEqual( Stem("daherging"), "daherging");});
test("daherkam -> daherkam", function() {deepEqual( Stem("daherkam"), "daherkam");});
test("daherkommenden -> daherkomm", function() {deepEqual( Stem("daherkommenden"), "daherkomm");});
test("daherkommt -> daherkommt", function() {deepEqual( Stem("daherkommt"), "daherkommt");});
test("daherspringen -> daherspring", function() {deepEqual( Stem("daherspringen"), "daherspring");});
test("dahi -> dahi", function() {deepEqual( Stem("dahi"), "dahi");});
test("dahin -> dahin", function() {deepEqual( Stem("dahin"), "dahin");});
test("dahinfährt -> dahinfahrt", function() {deepEqual( Stem("dahinfährt"), "dahinfahrt");});
test("dahinfuhr -> dahinfuhr", function() {deepEqual( Stem("dahinfuhr"), "dahinfuhr");});
test("dahingerafft -> dahingerafft", function() {deepEqual( Stem("dahingerafft"), "dahingerafft");});
test("dahingezogen -> dahingezog", function() {deepEqual( Stem("dahingezogen"), "dahingezog");});
test("dahingingen -> dahinging", function() {deepEqual( Stem("dahingingen"), "dahinging");});
test("dahinschritt -> dahinschritt", function() {deepEqual( Stem("dahinschritt"), "dahinschritt");});
test("dahinter -> dahint", function() {deepEqual( Stem("dahinter"), "dahint");});
test("dahinterkomme -> dahinterkomm", function() {deepEqual( Stem("dahinterkomme"), "dahinterkomm");});
test("dahintersteckte -> dahintersteckt", function() {deepEqual( Stem("dahintersteckte"), "dahintersteckt");});
test("dahinzog -> dahinzog", function() {deepEqual( Stem("dahinzog"), "dahinzog");});
test("dalag -> dalag", function() {deepEqual( Stem("dalag"), "dalag");});
test("daliegen -> dalieg", function() {deepEqual( Stem("daliegen"), "dalieg");});
test("daliegende -> dalieg", function() {deepEqual( Stem("daliegende"), "dalieg");});
test("daliegenden -> dalieg", function() {deepEqual( Stem("daliegenden"), "dalieg");});
test("daliessest -> daliess", function() {deepEqual( Stem("daliessest"), "daliess");});
test("damal -> damal", function() {deepEqual( Stem("damal"), "damal");});
test("damalige -> damal", function() {deepEqual( Stem("damalige"), "damal");});
test("damaligen -> damal", function() {deepEqual( Stem("damaligen"), "damal");});
test("damaliger -> damal", function() {deepEqual( Stem("damaliger"), "damal");});
test("damals -> damal", function() {deepEqual( Stem("damals"), "damal");});
test("damaskus -> damaskus", function() {deepEqual( Stem("damaskus"), "damaskus");});
test("damc -> damc", function() {deepEqual( Stem("damc"), "damc");});
test("dame -> dam", function() {deepEqual( Stem("dame"), "dam");});
test("damen -> dam", function() {deepEqual( Stem("damen"), "dam");});
test("damenbesuch -> damenbesuch", function() {deepEqual( Stem("damenbesuch"), "damenbesuch");});
test("damenuhr -> damenuhr", function() {deepEqual( Stem("damenuhr"), "damenuhr");});
test("damenwelt -> damenwelt", function() {deepEqual( Stem("damenwelt"), "damenwelt");});
test("damit -> damit", function() {deepEqual( Stem("damit"), "damit");});
test("dämme -> damm", function() {deepEqual( Stem("dämme"), "damm");});
test("dämmerigen -> dammer", function() {deepEqual( Stem("dämmerigen"), "dammer");});
test("dämmeriges -> dammer", function() {deepEqual( Stem("dämmeriges"), "dammer");});
test("dämmerlicht -> dammerlicht", function() {deepEqual( Stem("dämmerlicht"), "dammerlicht");});
test("dämmern -> damm", function() {deepEqual( Stem("dämmern"), "damm");});
test("dämmerschein -> dammerschein", function() {deepEqual( Stem("dämmerschein"), "dammerschein");});
test("dämmerte -> dammert", function() {deepEqual( Stem("dämmerte"), "dammert");});
test("dämmerung -> dammer", function() {deepEqual( Stem("dämmerung"), "dammer");});
test("dämmrigen -> dammrig", function() {deepEqual( Stem("dämmrigen"), "dammrig");});
test("dämon -> damon", function() {deepEqual( Stem("dämon"), "damon");});
test("dämonen -> damon", function() {deepEqual( Stem("dämonen"), "damon");});
test("dämonische -> damon", function() {deepEqual( Stem("dämonische"), "damon");});
test("dampfenden -> dampfend", function() {deepEqual( Stem("dampfenden"), "dampfend");});
test("dampfstrahl -> dampfstrahl", function() {deepEqual( Stem("dampfstrahl"), "dampfstrahl");});
test("dämpfte -> dampft", function() {deepEqual( Stem("dämpfte"), "dampft");});
test("dan -> dan", function() {deepEqual( Stem("dan"), "dan");});
test("danach -> danach", function() {deepEqual( Stem("danach"), "danach");});
test("daneben -> daneb", function() {deepEqual( Stem("daneben"), "daneb");});
test("dänemark -> danemark", function() {deepEqual( Stem("dänemark"), "danemark");});
test("danggen -> dangg", function() {deepEqual( Stem("danggen"), "dangg");});
test("daniel -> daniel", function() {deepEqual( Stem("daniel"), "daniel");});
test("dänischen -> danisch", function() {deepEqual( Stem("dänischen"), "danisch");});
test("dank -> dank", function() {deepEqual( Stem("dank"), "dank");});
test("dankbar -> dankbar", function() {deepEqual( Stem("dankbar"), "dankbar");});
test("dankbare -> dankbar", function() {deepEqual( Stem("dankbare"), "dankbar");});
test("dankbarer -> dankbar", function() {deepEqual( Stem("dankbarer"), "dankbar");});
test("dankbares -> dankbar", function() {deepEqual( Stem("dankbares"), "dankbar");});
test("dankbarkeit -> dankbar", function() {deepEqual( Stem("dankbarkeit"), "dankbar");});
test("dankbarst -> dankbarst", function() {deepEqual( Stem("dankbarst"), "dankbarst");});
test("danke -> dank", function() {deepEqual( Stem("danke"), "dank");});
test("danken -> dank", function() {deepEqual( Stem("danken"), "dank");});
test("dankes -> dank", function() {deepEqual( Stem("dankes"), "dank");});
test("danket -> danket", function() {deepEqual( Stem("danket"), "danket");});
test("dankte -> dankt", function() {deepEqual( Stem("dankte"), "dankt");});
test("dann -> dann", function() {deepEqual( Stem("dann"), "dann");});
test("dannen -> dann", function() {deepEqual( Stem("dannen"), "dann");});
test("dantine -> dantin", function() {deepEqual( Stem("dantine"), "dantin");});
test("dar -> dar", function() {deepEqual( Stem("dar"), "dar");});
test("daran -> daran", function() {deepEqual( Stem("daran"), "daran");});
test("darangehen -> darangeh", function() {deepEqual( Stem("darangehen"), "darangeh");});
test("darangesetzt -> darangesetzt", function() {deepEqual( Stem("darangesetzt"), "darangesetzt");});
test("darauf -> darauf", function() {deepEqual( Stem("darauf"), "darauf");});
test("darauffolgenden -> darauffolg", function() {deepEqual( Stem("darauffolgenden"), "darauffolg");});
test("daraufstellen -> daraufstell", function() {deepEqual( Stem("daraufstellen"), "daraufstell");});
test("daraus -> daraus", function() {deepEqual( Stem("daraus"), "daraus");});
test("darben -> darb", function() {deepEqual( Stem("darben"), "darb");});
test("darbieten -> darbiet", function() {deepEqual( Stem("darbieten"), "darbiet");});
test("darbietende -> darbiet", function() {deepEqual( Stem("darbietende"), "darbiet");});
test("darbietendes -> darbiet", function() {deepEqual( Stem("darbietendes"), "darbiet");});
test("darbietet -> darbietet", function() {deepEqual( Stem("darbietet"), "darbietet");});
test("darbrachte -> darbracht", function() {deepEqual( Stem("darbrachte"), "darbracht");});
test("darbrachten -> darbracht", function() {deepEqual( Stem("darbrachten"), "darbracht");});
test("darbringen -> darbring", function() {deepEqual( Stem("darbringen"), "darbring");});
test("darbringt -> darbringt", function() {deepEqual( Stem("darbringt"), "darbringt");});
test("darbringung -> darbring", function() {deepEqual( Stem("darbringung"), "darbring");});
test("darein -> darein", function() {deepEqual( Stem("darein"), "darein");});
test("darf -> darf", function() {deepEqual( Stem("darf"), "darf");});
test("darfst -> darf", function() {deepEqual( Stem("darfst"), "darf");});
test("därfst -> darf", function() {deepEqual( Stem("därfst"), "darf");});
test("dargebracht -> dargebracht", function() {deepEqual( Stem("dargebracht"), "dargebracht");});
test("dargelegt -> dargelegt", function() {deepEqual( Stem("dargelegt"), "dargelegt");});
test("dargereicht -> dargereicht", function() {deepEqual( Stem("dargereicht"), "dargereicht");});
test("dargestellt -> dargestellt", function() {deepEqual( Stem("dargestellt"), "dargestellt");});
test("dargetan -> dargetan", function() {deepEqual( Stem("dargetan"), "dargetan");});
test("darin -> darin", function() {deepEqual( Stem("darin"), "darin");});
test("darinnen -> darinn", function() {deepEqual( Stem("darinnen"), "darinn");});
test("darlegen -> darleg", function() {deepEqual( Stem("darlegen"), "darleg");});
test("darlegt -> darlegt", function() {deepEqual( Stem("darlegt"), "darlegt");});
test("darlehen -> darleh", function() {deepEqual( Stem("darlehen"), "darleh");});
test("darling -> darling", function() {deepEqual( Stem("darling"), "darling");});
test("darnach -> darnach", function() {deepEqual( Stem("darnach"), "darnach");});
test("darnieder -> darnied", function() {deepEqual( Stem("darnieder"), "darnied");});
test("darniederliegen -> darniederlieg", function() {deepEqual( Stem("darniederliegen"), "darniederlieg");});
test("darreichen -> darreich", function() {deepEqual( Stem("darreichen"), "darreich");});
test("darreichte -> darreicht", function() {deepEqual( Stem("darreichte"), "darreicht");});
test("darstelle -> darstell", function() {deepEqual( Stem("darstelle"), "darstell");});
test("darstellen -> darstell", function() {deepEqual( Stem("darstellen"), "darstell");});
test("darstellenden -> darstell", function() {deepEqual( Stem("darstellenden"), "darstell");});
test("darstelleten -> darstellet", function() {deepEqual( Stem("darstelleten"), "darstellet");});
test("darstellt -> darstellt", function() {deepEqual( Stem("darstellt"), "darstellt");});
test("darstellte -> darstellt", function() {deepEqual( Stem("darstellte"), "darstellt");});
test("darstellten -> darstellt", function() {deepEqual( Stem("darstellten"), "darstellt");});
test("darstellung -> darstell", function() {deepEqual( Stem("darstellung"), "darstell");});
test("darstellungsbild -> darstellungsbild", function() {deepEqual( Stem("darstellungsbild"), "darstellungsbild");});
test("dartun -> dartun", function() {deepEqual( Stem("dartun"), "dartun");});
test("dartust -> dartust", function() {deepEqual( Stem("dartust"), "dartust");});
test("darüber -> darub", function() {deepEqual( Stem("darüber"), "darub");});
test("darüberhinaus -> daruberhinaus", function() {deepEqual( Stem("darüberhinaus"), "daruberhinaus");});
test("darum -> darum", function() {deepEqual( Stem("darum"), "darum");});
test("darunter -> darunt", function() {deepEqual( Stem("darunter"), "darunt");});
test("darzustellen -> darzustell", function() {deepEqual( Stem("darzustellen"), "darzustell");});
test("das -> das", function() {deepEqual( Stem("das"), "das");});
test("dasass -> dasass", function() {deepEqual( Stem("dasass"), "dasass");});
test("dasassen -> dasass", function() {deepEqual( Stem("dasassen"), "dasass");});
test("dasaßen -> dasass", function() {deepEqual( Stem("dasaßen"), "dasass");});
test("daschiesst -> daschiesst", function() {deepEqual( Stem("daschiesst"), "daschiesst");});
test("daseiende -> daseiend", function() {deepEqual( Stem("daseiende"), "daseiend");});
test("dasein -> dasein", function() {deepEqual( Stem("dasein"), "dasein");});
test("daseins -> dasein", function() {deepEqual( Stem("daseins"), "dasein");});
test("daselbst -> daselb", function() {deepEqual( Stem("daselbst"), "daselb");});
test("dasige -> dasig", function() {deepEqual( Stem("dasige"), "dasig");});
test("dasitzen -> dasitz", function() {deepEqual( Stem("dasitzen"), "dasitz");});
test("dasitzenden -> dasitz", function() {deepEqual( Stem("dasitzenden"), "dasitz");});
test("dasjenige -> dasjen", function() {deepEqual( Stem("dasjenige"), "dasjen");});
test("dasmal -> dasmal", function() {deepEqual( Stem("dasmal"), "dasmal");});
test("dass -> dass", function() {deepEqual( Stem("dass"), "dass");});
test("daß -> dass", function() {deepEqual( Stem("daß"), "dass");});
test("dasselbe -> dasselb", function() {deepEqual( Stem("dasselbe"), "dasselb");});
test("dastand -> dastand", function() {deepEqual( Stem("dastand"), "dastand");});
test("dastehen -> dasteh", function() {deepEqual( Stem("dastehen"), "dasteh");});
test("dasteht -> dasteht", function() {deepEqual( Stem("dasteht"), "dasteht");});
test("data -> data", function() {deepEqual( Stem("data"), "data");});
test("datis -> datis", function() {deepEqual( Stem("datis"), "datis");});
test("dativ -> dativ", function() {deepEqual( Stem("dativ"), "dativ");});
test("dative -> dativ", function() {deepEqual( Stem("dative"), "dativ");});
test("dativen -> dativ", function() {deepEqual( Stem("dativen"), "dativ");});
test("dato -> dato", function() {deepEqual( Stem("dato"), "dato");});
test("datum -> datum", function() {deepEqual( Stem("datum"), "datum");});
test("dauer -> dau", function() {deepEqual( Stem("dauer"), "dau");});
test("dauerhaft -> dauerhaft", function() {deepEqual( Stem("dauerhaft"), "dauerhaft");});
test("dauerhafte -> dauerhaft", function() {deepEqual( Stem("dauerhafte"), "dauerhaft");});
test("dauerhaftem -> dauerhaft", function() {deepEqual( Stem("dauerhaftem"), "dauerhaft");});
test("dauerhaften -> dauerhaft", function() {deepEqual( Stem("dauerhaften"), "dauerhaft");});
test("dauerhaftigkeit -> dauerhaft", function() {deepEqual( Stem("dauerhaftigkeit"), "dauerhaft");});
test("dauern -> dau", function() {deepEqual( Stem("dauern"), "dau");});
test("dauernd -> dauernd", function() {deepEqual( Stem("dauernd"), "dauernd");});
test("dauernde -> dauernd", function() {deepEqual( Stem("dauernde"), "dauernd");});
test("dauernden -> dauernd", function() {deepEqual( Stem("dauernden"), "dauernd");});
test("dauert -> dauert", function() {deepEqual( Stem("dauert"), "dauert");});
test("dauerte -> dauert", function() {deepEqual( Stem("dauerte"), "dauert");});
test("dauerten -> dauert", function() {deepEqual( Stem("dauerten"), "dauert");});
test("daumen -> daum", function() {deepEqual( Stem("daumen"), "daum");});
test("daumschrauben -> daumschraub", function() {deepEqual( Stem("daumschrauben"), "daumschraub");});
test("david -> david", function() {deepEqual( Stem("david"), "david");});
test("davids -> david", function() {deepEqual( Stem("davids"), "david");});
test("davon -> davon", function() {deepEqual( Stem("davon"), "davon");});
test("davonfuhr -> davonfuhr", function() {deepEqual( Stem("davonfuhr"), "davonfuhr");});
test("davongangen -> davongang", function() {deepEqual( Stem("davongangen"), "davongang");});
test("davongegangen -> davongegang", function() {deepEqual( Stem("davongegangen"), "davongegang");});
test("davonging -> davonging", function() {deepEqual( Stem("davonging"), "davonging");});
test("davonkäme -> davonkam", function() {deepEqual( Stem("davonkäme"), "davonkam");});
test("davonlief -> davonlief", function() {deepEqual( Stem("davonlief"), "davonlief");});
test("davonrannte -> davonrannt", function() {deepEqual( Stem("davonrannte"), "davonrannt");});
test("davonzureisen -> davonzureis", function() {deepEqual( Stem("davonzureisen"), "davonzureis");});
test("davonzutragen -> davonzutrag", function() {deepEqual( Stem("davonzutragen"), "davonzutrag");});
test("davor -> davor", function() {deepEqual( Stem("davor"), "davor");});
test("dawider -> dawid", function() {deepEqual( Stem("dawider"), "dawid");});
test("dazu -> dazu", function() {deepEqual( Stem("dazu"), "dazu");});
test("dazua -> dazua", function() {deepEqual( Stem("dazua"), "dazua");});
test("dazubleiben -> dazubleib", function() {deepEqual( Stem("dazubleiben"), "dazubleib");});
test("dazumal -> dazumal", function() {deepEqual( Stem("dazumal"), "dazumal");});
test("dazustehen -> dazusteh", function() {deepEqual( Stem("dazustehen"), "dazusteh");});
test("dazutun -> dazutun", function() {deepEqual( Stem("dazutun"), "dazutun");});
test("dazwischen -> dazwisch", function() {deepEqual( Stem("dazwischen"), "dazwisch");});
test("dazwischenliegender -> dazwischenlieg", function() {deepEqual( Stem("dazwischenliegender"), "dazwischenlieg");});
test("ddr -> ddr", function() {deepEqual( Stem("ddr"), "ddr");});
test("de -> de", function() {deepEqual( Stem("de"), "de");});
test("deandl -> deandl", function() {deepEqual( Stem("deandl"), "deandl");});
test("deanerl -> deanerl", function() {deepEqual( Stem("deanerl"), "deanerl");});
test("debatte -> debatt", function() {deepEqual( Stem("debatte"), "debatt");});
test("debatten -> debatt", function() {deepEqual( Stem("debatten"), "debatt");});
test("deberjackl -> deberjackl", function() {deepEqual( Stem("deberjackl"), "deberjackl");});
test("december -> decemb", function() {deepEqual( Stem("december"), "decemb");});
test("deckbett -> deckbett", function() {deepEqual( Stem("deckbett"), "deckbett");});
test("deckchen -> deckch", function() {deepEqual( Stem("deckchen"), "deckch");});
test("decke -> deck", function() {deepEqual( Stem("decke"), "deck");});
test("deckel -> deckel", function() {deepEqual( Stem("deckel"), "deckel");});
test("decken -> deck", function() {deepEqual( Stem("decken"), "deck");});
test("deckte -> deckt", function() {deepEqual( Stem("deckte"), "deckt");});
test("deckten -> deckt", function() {deepEqual( Stem("deckten"), "deckt");});
test("deckung -> deckung", function() {deepEqual( Stem("deckung"), "deckung");});
test("deduktion -> deduktion", function() {deepEqual( Stem("deduktion"), "deduktion");});
test("deduzieren -> deduzi", function() {deepEqual( Stem("deduzieren"), "deduzi");});
test("defekt -> defekt", function() {deepEqual( Stem("defekt"), "defekt");});
test("definieren -> defini", function() {deepEqual( Stem("definieren"), "defini");});
test("definiert -> definiert", function() {deepEqual( Stem("definiert"), "definiert");});
test("definition -> definition", function() {deepEqual( Stem("definition"), "definition");});
test("definitum -> definitum", function() {deepEqual( Stem("definitum"), "definitum");});
test("degen -> deg", function() {deepEqual( Stem("degen"), "deg");});
test("degengehänge -> degengehang", function() {deepEqual( Stem("degengehänge"), "degengehang");});
test("degradieren -> degradi", function() {deepEqual( Stem("degradieren"), "degradi");});
test("dehne -> dehn", function() {deepEqual( Stem("dehne"), "dehn");});
test("dehnt -> dehnt", function() {deepEqual( Stem("dehnt"), "dehnt");});
test("dehnte -> dehnt", function() {deepEqual( Stem("dehnte"), "dehnt");});
test("dehnten -> dehnt", function() {deepEqual( Stem("dehnten"), "dehnt");});
test("dei -> dei", function() {deepEqual( Stem("dei"), "dei");});
test("deiche -> deich", function() {deepEqual( Stem("deiche"), "deich");});
test("dein -> dein", function() {deepEqual( Stem("dein"), "dein");});
test("deine -> dein", function() {deepEqual( Stem("deine"), "dein");});
test("deinem -> dein", function() {deepEqual( Stem("deinem"), "dein");});
test("deinen -> dein", function() {deepEqual( Stem("deinen"), "dein");});
test("deiner -> dein", function() {deepEqual( Stem("deiner"), "dein");});
test("deines -> dein", function() {deepEqual( Stem("deines"), "dein");});
test("deinetwillen -> deinetwill", function() {deepEqual( Stem("deinetwillen"), "deinetwill");});
test("deinigen -> deinig", function() {deepEqual( Stem("deinigen"), "deinig");});
test("dekalog -> dekalog", function() {deepEqual( Stem("dekalog"), "dekalog");});
test("dekalogs -> dekalog", function() {deepEqual( Stem("dekalogs"), "dekalog");});
test("dekalogus -> dekalogus", function() {deepEqual( Stem("dekalogus"), "dekalogus");});
test("deklinierbuch -> deklinierbuch", function() {deepEqual( Stem("deklinierbuch"), "deklinierbuch");});
test("delegationen -> delegation", function() {deepEqual( Stem("delegationen"), "delegation");});
test("delegieren -> delegi", function() {deepEqual( Stem("delegieren"), "delegi");});
test("delegiertenversammlungen -> delegiertenversamml", function() {deepEqual( Stem("delegiertenversammlungen"), "delegiertenversamml");});
test("delicatessen -> delicatess", function() {deepEqual( Stem("delicatessen"), "delicatess");});
test("delikaten -> delikat", function() {deepEqual( Stem("delikaten"), "delikat");});
test("delikatesse -> delikatess", function() {deepEqual( Stem("delikatesse"), "delikatess");});
test("delikt -> delikt", function() {deepEqual( Stem("delikt"), "delikt");});
test("delphin -> delphin", function() {deepEqual( Stem("delphin"), "delphin");});
test("dem -> dem", function() {deepEqual( Stem("dem"), "dem");});
test("demgemäss -> demgemass", function() {deepEqual( Stem("demgemäss"), "demgemass");});
test("demgemäß -> demgemass", function() {deepEqual( Stem("demgemäß"), "demgemass");});
test("demjenigen -> demjen", function() {deepEqual( Stem("demjenigen"), "demjen");});
test("demnach -> demnach", function() {deepEqual( Stem("demnach"), "demnach");});
test("demokratische -> demokrat", function() {deepEqual( Stem("demokratische"), "demokrat");});
test("demokrit -> demokrit", function() {deepEqual( Stem("demokrit"), "demokrit");});
test("demoliert -> demoliert", function() {deepEqual( Stem("demoliert"), "demoliert");});
test("demolierten -> demoliert", function() {deepEqual( Stem("demolierten"), "demoliert");});
test("demonstration -> demonstration", function() {deepEqual( Stem("demonstration"), "demonstration");});
test("demselben -> demselb", function() {deepEqual( Stem("demselben"), "demselb");});
test("demselbigen -> demselb", function() {deepEqual( Stem("demselbigen"), "demselb");});
test("demut -> demut", function() {deepEqual( Stem("demut"), "demut");});
test("demütig -> demut", function() {deepEqual( Stem("demütig"), "demut");});
test("demütige -> demut", function() {deepEqual( Stem("demütige"), "demut");});
test("demütigen -> demut", function() {deepEqual( Stem("demütigen"), "demut");});
test("demütigend -> demut", function() {deepEqual( Stem("demütigend"), "demut");});
test("demütiger -> demut", function() {deepEqual( Stem("demütiger"), "demut");});
test("demütigt -> demutigt", function() {deepEqual( Stem("demütigt"), "demutigt");});
test("demütigte -> demutigt", function() {deepEqual( Stem("demütigte"), "demutigt");});
test("demütigung -> demut", function() {deepEqual( Stem("demütigung"), "demut");});
test("demutshaltung -> demutshalt", function() {deepEqual( Stem("demutshaltung"), "demutshalt");});
test("demutvollen -> demutvoll", function() {deepEqual( Stem("demutvollen"), "demutvoll");});
test("demzufolge -> demzufolg", function() {deepEqual( Stem("demzufolge"), "demzufolg");});
test("den -> den", function() {deepEqual( Stem("den"), "den");});
test("dene -> den", function() {deepEqual( Stem("dene"), "den");});
test("denen -> den", function() {deepEqual( Stem("denen"), "den");});
test("denjenigen -> denjen", function() {deepEqual( Stem("denjenigen"), "denjen");});
test("denk -> denk", function() {deepEqual( Stem("denk"), "denk");});
test("denkbar -> denkbar", function() {deepEqual( Stem("denkbar"), "denkbar");});
test("denkbaren -> denkbar", function() {deepEqual( Stem("denkbaren"), "denkbar");});
test("denkbarer -> denkbar", function() {deepEqual( Stem("denkbarer"), "denkbar");});
test("denke -> denk", function() {deepEqual( Stem("denke"), "denk");});
test("denken -> denk", function() {deepEqual( Stem("denken"), "denk");});
test("denkende -> denkend", function() {deepEqual( Stem("denkende"), "denkend");});
test("denkens -> denk", function() {deepEqual( Stem("denkens"), "denk");});
test("denker -> denk", function() {deepEqual( Stem("denker"), "denk");});
test("denket -> denket", function() {deepEqual( Stem("denket"), "denket");});
test("denkmal -> denkmal", function() {deepEqual( Stem("denkmal"), "denkmal");});
test("denkst -> denk", function() {deepEqual( Stem("denkst"), "denk");});
test("denkt -> denkt", function() {deepEqual( Stem("denkt"), "denkt");});
test("denkungsart -> denkungsart", function() {deepEqual( Stem("denkungsart"), "denkungsart");});
test("denkvorstellung -> denkvorstell", function() {deepEqual( Stem("denkvorstellung"), "denkvorstell");});
test("denkvorstellungen -> denkvorstell", function() {deepEqual( Stem("denkvorstellungen"), "denkvorstell");});
test("denkweise -> denkweis", function() {deepEqual( Stem("denkweise"), "denkweis");});
test("denn -> denn", function() {deepEqual( Stem("denn"), "denn");});
test("dennoch -> dennoch", function() {deepEqual( Stem("dennoch"), "dennoch");});
test("denselben -> denselb", function() {deepEqual( Stem("denselben"), "denselb");});
test("dep -> dep", function() {deepEqual( Stem("dep"), "dep");});
test("departements -> departement", function() {deepEqual( Stem("departements"), "departement");});
test("departementschef -> departementschef", function() {deepEqual( Stem("departementschef"), "departementschef");});
test("deperditum -> deperditum", function() {deepEqual( Stem("deperditum"), "deperditum");});
test("depeschen -> depesch", function() {deepEqual( Stem("depeschen"), "depesch");});
test("deponierten -> deponiert", function() {deepEqual( Stem("deponierten"), "deponiert");});
test("depot -> depot", function() {deepEqual( Stem("depot"), "depot");});
test("depressionen -> depression", function() {deepEqual( Stem("depressionen"), "depression");});
test("der -> der", function() {deepEqual( Stem("der"), "der");});
test("derart -> derart", function() {deepEqual( Stem("derart"), "derart");});
test("derartig -> derart", function() {deepEqual( Stem("derartig"), "derart");});
test("derartige -> derart", function() {deepEqual( Stem("derartige"), "derart");});
test("derartigen -> derart", function() {deepEqual( Stem("derartigen"), "derart");});
test("derartiger -> derart", function() {deepEqual( Stem("derartiger"), "derart");});
test("derartiges -> derart", function() {deepEqual( Stem("derartiges"), "derart");});
test("derbarmt -> derbarmt", function() {deepEqual( Stem("derbarmt"), "derbarmt");});
test("derbe -> derb", function() {deepEqual( Stem("derbe"), "derb");});
test("derben -> derb", function() {deepEqual( Stem("derben"), "derb");});
test("derbknochige -> derbknoch", function() {deepEqual( Stem("derbknochige"), "derbknoch");});
test("derbsten -> derb", function() {deepEqual( Stem("derbsten"), "derb");});
test("dereinst -> derein", function() {deepEqual( Stem("dereinst"), "derein");});
test("deren -> der", function() {deepEqual( Stem("deren"), "der");});
test("derentweg -> derentweg", function() {deepEqual( Stem("derentweg"), "derentweg");});
test("derentwillen -> derentwill", function() {deepEqual( Stem("derentwillen"), "derentwill");});
test("derer -> der", function() {deepEqual( Stem("derer"), "der");});
test("dergestalt -> dergestalt", function() {deepEqual( Stem("dergestalt"), "dergestalt");});
test("dergibt -> dergibt", function() {deepEqual( Stem("dergibt"), "dergibt");});
test("dergl -> dergl", function() {deepEqual( Stem("dergl"), "dergl");});
test("dergleichen -> dergleich", function() {deepEqual( Stem("dergleichen"), "dergleich");});
test("derheim -> derheim", function() {deepEqual( Stem("derheim"), "derheim");});
test("derjenige -> derjen", function() {deepEqual( Stem("derjenige"), "derjen");});
test("derjenigen -> derjen", function() {deepEqual( Stem("derjenigen"), "derjen");});
test("derleb -> derleb", function() {deepEqual( Stem("derleb"), "derleb");});
test("derlebt -> derlebt", function() {deepEqual( Stem("derlebt"), "derlebt");});
test("derlei -> derlei", function() {deepEqual( Stem("derlei"), "derlei");});
test("derleiden -> derleid", function() {deepEqual( Stem("derleiden"), "derleid");});
test("dermassen -> dermass", function() {deepEqual( Stem("dermassen"), "dermass");});
test("dern -> dern", function() {deepEqual( Stem("dern"), "dern");});
test("dero -> dero", function() {deepEqual( Stem("dero"), "dero");});
test("derschlagen -> derschlag", function() {deepEqual( Stem("derschlagen"), "derschlag");});
test("derselbe -> derselb", function() {deepEqual( Stem("derselbe"), "derselb");});
test("derselben -> derselb", function() {deepEqual( Stem("derselben"), "derselb");});
test("derwart -> derwart", function() {deepEqual( Stem("derwart"), "derwart");});
test("derweil -> derweil", function() {deepEqual( Stem("derweil"), "derweil");});
test("derwischt -> derwischt", function() {deepEqual( Stem("derwischt"), "derwischt");});
test("des -> des", function() {deepEqual( Stem("des"), "des");});
test("desdemona -> desdemona", function() {deepEqual( Stem("desdemona"), "desdemona");});
test("deserteur -> deserteur", function() {deepEqual( Stem("deserteur"), "deserteur");});
test("deserteure -> deserteur", function() {deepEqual( Stem("deserteure"), "deserteur");});
test("desertion -> desertion", function() {deepEqual( Stem("desertion"), "desertion");});
test("desgleichen -> desgleich", function() {deepEqual( Stem("desgleichen"), "desgleich");});
test("deshalb -> deshalb", function() {deepEqual( Stem("deshalb"), "deshalb");});
test("deshalben -> deshalb", function() {deepEqual( Stem("deshalben"), "deshalb");});
test("design -> design", function() {deepEqual( Stem("design"), "design");});
test("designer -> design", function() {deepEqual( Stem("designer"), "design");});
test("desinteressiert -> desinteressiert", function() {deepEqual( Stem("desinteressiert"), "desinteressiert");});
test("desjenigen -> desjen", function() {deepEqual( Stem("desjenigen"), "desjen");});
test("desna -> desna", function() {deepEqual( Stem("desna"), "desna");});
test("desolatio -> desolatio", function() {deepEqual( Stem("desolatio"), "desolatio");});
test("desolationes -> desolation", function() {deepEqual( Stem("desolationes"), "desolation");});
test("desselben -> desselb", function() {deepEqual( Stem("desselben"), "desselb");});
test("dessen -> dess", function() {deepEqual( Stem("dessen"), "dess");});
test("dessentwegen -> dessentweg", function() {deepEqual( Stem("dessentwegen"), "dessentweg");});
test("dessentwillen -> dessentwill", function() {deepEqual( Stem("dessentwillen"), "dessentwill");});
test("dessert -> dessert", function() {deepEqual( Stem("dessert"), "dessert");});
test("desto -> desto", function() {deepEqual( Stem("desto"), "desto");});
test("deswegen -> desweg", function() {deepEqual( Stem("deswegen"), "desweg");});
test("deswillen -> deswill", function() {deepEqual( Stem("deswillen"), "deswill");});
test("detailliert -> detailliert", function() {deepEqual( Stem("detailliert"), "detailliert");});
test("details -> detail", function() {deepEqual( Stem("details"), "detail");});
test("determinatum -> determinatum", function() {deepEqual( Stem("determinatum"), "determinatum");});
test("detonation -> detonation", function() {deepEqual( Stem("detonation"), "detonation");});
test("deuchte -> deucht", function() {deepEqual( Stem("deuchte"), "deucht");});
test("deuschland -> deuschland", function() {deepEqual( Stem("deuschland"), "deuschland");});
test("deut -> deut", function() {deepEqual( Stem("deut"), "deut");});
test("deutbare -> deutbar", function() {deepEqual( Stem("deutbare"), "deutbar");});
test("deuten -> deut", function() {deepEqual( Stem("deuten"), "deut");});
test("deutete -> deutet", function() {deepEqual( Stem("deutete"), "deutet");});
test("deutlich -> deutlich", function() {deepEqual( Stem("deutlich"), "deutlich");});
test("deutliche -> deutlich", function() {deepEqual( Stem("deutliche"), "deutlich");});
test("deutlichen -> deutlich", function() {deepEqual( Stem("deutlichen"), "deutlich");});
test("deutlicher -> deutlich", function() {deepEqual( Stem("deutlicher"), "deutlich");});
test("deutlichere -> deutlich", function() {deepEqual( Stem("deutlichere"), "deutlich");});
test("deutliches -> deutlich", function() {deepEqual( Stem("deutliches"), "deutlich");});
test("deutlichkeit -> deutlich", function() {deepEqual( Stem("deutlichkeit"), "deutlich");});
test("deutlichste -> deutlich", function() {deepEqual( Stem("deutlichste"), "deutlich");});
test("deutsch -> deutsch", function() {deepEqual( Stem("deutsch"), "deutsch");});
test("deutsche -> deutsch", function() {deepEqual( Stem("deutsche"), "deutsch");});
test("deutschen -> deutsch", function() {deepEqual( Stem("deutschen"), "deutsch");});
test("deutscher -> deutsch", function() {deepEqual( Stem("deutscher"), "deutsch");});
test("deutschland -> deutschland", function() {deepEqual( Stem("deutschland"), "deutschland");});
test("deutschlands -> deutschland", function() {deepEqual( Stem("deutschlands"), "deutschland");});
test("deutschlehrerin -> deutschlehrerin", function() {deepEqual( Stem("deutschlehrerin"), "deutschlehrerin");});
test("deutschschweiz -> deutschschweiz", function() {deepEqual( Stem("deutschschweiz"), "deutschschweiz");});
test("deutschsein -> deutschsein", function() {deepEqual( Stem("deutschsein"), "deutschsein");});
test("deutseher -> deutseh", function() {deepEqual( Stem("deutseher"), "deutseh");});
test("deza -> deza", function() {deepEqual( Stem("deza"), "deza");});
test("dezember -> dezemb", function() {deepEqual( Stem("dezember"), "dezemb");});
test("dezenz -> dezenz", function() {deepEqual( Stem("dezenz"), "dezenz");});
test("dgl -> dgl", function() {deepEqual( Stem("dgl"), "dgl");});
test("di -> di", function() {deepEqual( Stem("di"), "di");});
test("diabolischen -> diabol", function() {deepEqual( Stem("diabolischen"), "diabol");});
test("diademe -> diadem", function() {deepEqual( Stem("diademe"), "diadem");});
test("diademen -> diadem", function() {deepEqual( Stem("diademen"), "diadem");});
test("diakonie -> diakoni", function() {deepEqual( Stem("diakonie"), "diakoni");});
test("diakoniekapitel -> diakoniekapitel", function() {deepEqual( Stem("diakoniekapitel"), "diakoniekapitel");});
test("dialectica -> dialectica", function() {deepEqual( Stem("dialectica"), "dialectica");});
test("dialekt -> dialekt", function() {deepEqual( Stem("dialekt"), "dialekt");});
test("dialektik -> dialekt", function() {deepEqual( Stem("dialektik"), "dialekt");});
test("dialektikh -> dialektikh", function() {deepEqual( Stem("dialektikh"), "dialektikh");});
test("dialektisch -> dialekt", function() {deepEqual( Stem("dialektisch"), "dialekt");});
test("dialektische -> dialekt", function() {deepEqual( Stem("dialektische"), "dialekt");});
test("dialektischen -> dialekt", function() {deepEqual( Stem("dialektischen"), "dialekt");});
test("dialektliedern -> dialektlied", function() {deepEqual( Stem("dialektliedern"), "dialektlied");});
test("dialog -> dialog", function() {deepEqual( Stem("dialog"), "dialog");});
test("dialogorientierung -> dialogorientier", function() {deepEqual( Stem("dialogorientierung"), "dialogorientier");});
test("dialogs -> dialog", function() {deepEqual( Stem("dialogs"), "dialog");});
test("diamant -> diamant", function() {deepEqual( Stem("diamant"), "diamant");});
test("diamanten -> diamant", function() {deepEqual( Stem("diamanten"), "diamant");});
test("diamantenschimmer -> diamantenschimm", function() {deepEqual( Stem("diamantenschimmer"), "diamantenschimm");});
test("dich -> dich", function() {deepEqual( Stem("dich"), "dich");});
test("dicht -> dicht", function() {deepEqual( Stem("dicht"), "dicht");});
test("dichte -> dicht", function() {deepEqual( Stem("dichte"), "dicht");});
test("dichtem -> dicht", function() {deepEqual( Stem("dichtem"), "dicht");});
test("dichten -> dicht", function() {deepEqual( Stem("dichten"), "dicht");});
test("dichter -> dicht", function() {deepEqual( Stem("dichter"), "dicht");});
test("dichtes -> dicht", function() {deepEqual( Stem("dichtes"), "dicht");});
test("dichteste -> dicht", function() {deepEqual( Stem("dichteste"), "dicht");});
test("dichtesten -> dicht", function() {deepEqual( Stem("dichtesten"), "dicht");});
test("dichtester -> dicht", function() {deepEqual( Stem("dichtester"), "dicht");});
test("dichtgeschlossenen -> dichtgeschloss", function() {deepEqual( Stem("dichtgeschlossenen"), "dichtgeschloss");});
test("dichtheit -> dichtheit", function() {deepEqual( Stem("dichtheit"), "dichtheit");});
test("dick -> dick", function() {deepEqual( Stem("dick"), "dick");});
test("dickbauch -> dickbauch", function() {deepEqual( Stem("dickbauch"), "dickbauch");});
test("dicke -> dick", function() {deepEqual( Stem("dicke"), "dick");});
test("dickem -> dick", function() {deepEqual( Stem("dickem"), "dick");});
test("dicken -> dick", function() {deepEqual( Stem("dicken"), "dick");});
test("dicker -> dick", function() {deepEqual( Stem("dicker"), "dick");});
test("dickeren -> dick", function() {deepEqual( Stem("dickeren"), "dick");});
test("dickicht -> dickicht", function() {deepEqual( Stem("dickicht"), "dickicht");});
test("dickichts -> dickicht", function() {deepEqual( Stem("dickichts"), "dickicht");});
test("dickleibig -> dickleib", function() {deepEqual( Stem("dickleibig"), "dickleib");});
test("dicks -> dick", function() {deepEqual( Stem("dicks"), "dick");});
test("dicksten -> dick", function() {deepEqual( Stem("dicksten"), "dick");});
test("dickung -> dickung", function() {deepEqual( Stem("dickung"), "dickung");});
test("dictamen -> dictam", function() {deepEqual( Stem("dictamen"), "dictam");});
test("dictavit -> dictavit", function() {deepEqual( Stem("dictavit"), "dictavit");});
test("didac -> didac", function() {deepEqual( Stem("didac"), "didac");});
test("dideldudeldei -> dideldudeldei", function() {deepEqual( Stem("dideldudeldei"), "dideldudeldei");});
test("dideldumdei -> dideldumdei", function() {deepEqual( Stem("dideldumdei"), "dideldumdei");});
test("die -> die", function() {deepEqual( Stem("die"), "die");});
test("dieb -> dieb", function() {deepEqual( Stem("dieb"), "dieb");});
test("diebe -> dieb", function() {deepEqual( Stem("diebe"), "dieb");});
test("diebin -> diebin", function() {deepEqual( Stem("diebin"), "diebin");});
test("diebshehler -> diebshehl", function() {deepEqual( Stem("diebshehler"), "diebshehl");});
test("diebstahl -> diebstahl", function() {deepEqual( Stem("diebstahl"), "diebstahl");});
test("diefer -> dief", function() {deepEqual( Stem("diefer"), "dief");});
test("diejenige -> diejen", function() {deepEqual( Stem("diejenige"), "diejen");});
test("diejenigen -> diejen", function() {deepEqual( Stem("diejenigen"), "diejen");});
test("diele -> diel", function() {deepEqual( Stem("diele"), "diel");});
test("diemal -> diemal", function() {deepEqual( Stem("diemal"), "diemal");});
test("diene -> dien", function() {deepEqual( Stem("diene"), "dien");});
test("dienen -> dien", function() {deepEqual( Stem("dienen"), "dien");});
test("dienend -> dienend", function() {deepEqual( Stem("dienend"), "dienend");});
test("diener -> dien", function() {deepEqual( Stem("diener"), "dien");});
test("dienern -> dien", function() {deepEqual( Stem("dienern"), "dien");});
test("dienerschaft -> dienerschaft", function() {deepEqual( Stem("dienerschaft"), "dienerschaft");});
test("dienerten -> dienert", function() {deepEqual( Stem("dienerten"), "dienert");});
test("dienet -> dienet", function() {deepEqual( Stem("dienet"), "dienet");});
test("dienete -> dienet", function() {deepEqual( Stem("dienete"), "dienet");});
test("dienlich -> dienlich", function() {deepEqual( Stem("dienlich"), "dienlich");});
test("dienst -> dien", function() {deepEqual( Stem("dienst"), "dien");});
test("dienstag -> dienstag", function() {deepEqual( Stem("dienstag"), "dienstag");});
test("dienstagmorgen -> dienstagmorg", function() {deepEqual( Stem("dienstagmorgen"), "dienstagmorg");});
test("dienstbar -> dienstbar", function() {deepEqual( Stem("dienstbar"), "dienstbar");});
test("dienstbarer -> dienstbar", function() {deepEqual( Stem("dienstbarer"), "dienstbar");});
test("dienstbarkeit -> dienstbar", function() {deepEqual( Stem("dienstbarkeit"), "dienstbar");});
test("dienstbarkeiten -> dienstbar", function() {deepEqual( Stem("dienstbarkeiten"), "dienstbar");});
test("dienstboten -> dienstbot", function() {deepEqual( Stem("dienstboten"), "dienstbot");});
test("dienstbuben -> dienstbub", function() {deepEqual( Stem("dienstbuben"), "dienstbub");});
test("dienste -> dien", function() {deepEqual( Stem("dienste"), "dien");});
test("diensten -> dien", function() {deepEqual( Stem("diensten"), "dien");});
test("dienstes -> dien", function() {deepEqual( Stem("dienstes"), "dien");});
test("dienstfertig -> dienstfert", function() {deepEqual( Stem("dienstfertig"), "dienstfert");});
test("dienstleistung -> dienstleist", function() {deepEqual( Stem("dienstleistung"), "dienstleist");});
test("dienstleistungen -> dienstleist", function() {deepEqual( Stem("dienstleistungen"), "dienstleist");});
test("dienstliche -> dienstlich", function() {deepEqual( Stem("dienstliche"), "dienstlich");});
test("dienstmädchen -> dienstmadch", function() {deepEqual( Stem("dienstmädchen"), "dienstmadch");});
test("dienstmägde -> dienstmagd", function() {deepEqual( Stem("dienstmägde"), "dienstmagd");});
test("dienstmägden -> dienstmagd", function() {deepEqual( Stem("dienstmägden"), "dienstmagd");});
test("dienstmänner -> dienstmann", function() {deepEqual( Stem("dienstmänner"), "dienstmann");});
test("dienstrevier -> dienstrevi", function() {deepEqual( Stem("dienstrevier"), "dienstrevi");});
test("dienstverkehr -> dienstverkehr", function() {deepEqual( Stem("dienstverkehr"), "dienstverkehr");});
test("dienstvorschriften -> dienstvorschrift", function() {deepEqual( Stem("dienstvorschriften"), "dienstvorschrift");});
test("dienstzeit -> dienstzeit", function() {deepEqual( Stem("dienstzeit"), "dienstzeit");});
test("dient -> dient", function() {deepEqual( Stem("dient"), "dient");});
test("diente -> dient", function() {deepEqual( Stem("diente"), "dient");});
test("dienten -> dient", function() {deepEqual( Stem("dienten"), "dient");});
test("dies -> dies", function() {deepEqual( Stem("dies"), "dies");});
test("diesbezüglich -> diesbezug", function() {deepEqual( Stem("diesbezüglich"), "diesbezug");});
test("diese -> dies", function() {deepEqual( Stem("diese"), "dies");});
test("dieselbe -> dieselb", function() {deepEqual( Stem("dieselbe"), "dieselb");});
test("dieselben -> dieselb", function() {deepEqual( Stem("dieselben"), "dieselb");});
test("diesem -> dies", function() {deepEqual( Stem("diesem"), "dies");});
test("diesen -> dies", function() {deepEqual( Stem("diesen"), "dies");});
test("diesenging -> diesenging", function() {deepEqual( Stem("diesenging"), "diesenging");});
test("dieser -> dies", function() {deepEqual( Stem("dieser"), "dies");});
test("diesergestalt -> diesergestalt", function() {deepEqual( Stem("diesergestalt"), "diesergestalt");});
test("dieserhalb -> dieserhalb", function() {deepEqual( Stem("dieserhalb"), "dieserhalb");});
test("dieses -> dies", function() {deepEqual( Stem("dieses"), "dies");});
test("diesjährigen -> diesjahr", function() {deepEqual( Stem("diesjährigen"), "diesjahr");});
test("diesmal -> diesmal", function() {deepEqual( Stem("diesmal"), "diesmal");});
test("diesseitigen -> diesseit", function() {deepEqual( Stem("diesseitigen"), "diesseit");});
test("dietegen -> dieteg", function() {deepEqual( Stem("dietegen"), "dieteg");});
test("dietrich -> dietrich", function() {deepEqual( Stem("dietrich"), "dietrich");});
test("dieweil -> dieweil", function() {deepEqual( Stem("dieweil"), "dieweil");});
test("differenz -> differenz", function() {deepEqual( Stem("differenz"), "differenz");});
test("differenzen -> differenz", function() {deepEqual( Stem("differenzen"), "differenz");});
test("differenzierter -> differenziert", function() {deepEqual( Stem("differenzierter"), "differenziert");});
test("differieren -> differi", function() {deepEqual( Stem("differieren"), "differi");});
test("dimension -> dimension", function() {deepEqual( Stem("dimension"), "dimension");});
test("dimensionen -> dimension", function() {deepEqual( Stem("dimensionen"), "dimension");});
test("ding -> ding", function() {deepEqual( Stem("ding"), "ding");});
test("dinge -> ding", function() {deepEqual( Stem("dinge"), "ding");});
test("dingen -> ding", function() {deepEqual( Stem("dingen"), "ding");});
test("dinger -> ding", function() {deepEqual( Stem("dinger"), "ding");});
test("dinges -> ding", function() {deepEqual( Stem("dinges"), "ding");});
test("dinkel -> dinkel", function() {deepEqual( Stem("dinkel"), "dinkel");});
test("dinkels -> dinkel", function() {deepEqual( Stem("dinkels"), "dinkel");});
test("dinte -> dint", function() {deepEqual( Stem("dinte"), "dint");});
test("diog -> diog", function() {deepEqual( Stem("diog"), "diog");});
test("diogenes -> diog", function() {deepEqual( Stem("diogenes"), "diog");});
test("diplom -> diplom", function() {deepEqual( Stem("diplom"), "diplom");});
test("dir -> dir", function() {deepEqual( Stem("dir"), "dir");});
test("diras -> diras", function() {deepEqual( Stem("diras"), "diras");});
test("direkt -> direkt", function() {deepEqual( Stem("direkt"), "direkt");});
test("direkten -> direkt", function() {deepEqual( Stem("direkten"), "direkt");});
test("direktion -> direktion", function() {deepEqual( Stem("direktion"), "direktion");});
test("direktionszimmer -> direktionszimm", function() {deepEqual( Stem("direktionszimmer"), "direktionszimm");});
test("direktor -> direktor", function() {deepEqual( Stem("direktor"), "direktor");});
test("direktorium -> direktorium", function() {deepEqual( Stem("direktorium"), "direktorium");});
test("direktors -> direktor", function() {deepEqual( Stem("direktors"), "direktor");});
test("dirn -> dirn", function() {deepEqual( Stem("dirn"), "dirn");});
test("dirnchen -> dirnch", function() {deepEqual( Stem("dirnchen"), "dirnch");});
test("dirndl -> dirndl", function() {deepEqual( Stem("dirndl"), "dirndl");});
test("dirne -> dirn", function() {deepEqual( Stem("dirne"), "dirn");});
test("discover -> discov", function() {deepEqual( Stem("discover"), "discov");});
test("diskursiv -> diskursiv", function() {deepEqual( Stem("diskursiv"), "diskursiv");});
test("diskussion -> diskussion", function() {deepEqual( Stem("diskussion"), "diskussion");});
test("diskussionen -> diskussion", function() {deepEqual( Stem("diskussionen"), "diskussion");});
test("diskutieren -> diskuti", function() {deepEqual( Stem("diskutieren"), "diskuti");});
test("diskutierend -> diskutier", function() {deepEqual( Stem("diskutierend"), "diskutier");});
test("diskutiert -> diskutiert", function() {deepEqual( Stem("diskutiert"), "diskutiert");});
test("disneyland -> disneyland", function() {deepEqual( Stem("disneyland"), "disneyland");});
test("disposition -> disposition", function() {deepEqual( Stem("disposition"), "disposition");});
test("disputation -> disputation", function() {deepEqual( Stem("disputation"), "disputation");});
test("disputieren -> disputi", function() {deepEqual( Stem("disputieren"), "disputi");});
test("disputierende -> disputier", function() {deepEqual( Stem("disputierende"), "disputier");});
test("disputierens -> disputier", function() {deepEqual( Stem("disputierens"), "disputier");});
test("disputiert -> disputiert", function() {deepEqual( Stem("disputiert"), "disputiert");});
test("distel -> distel", function() {deepEqual( Stem("distel"), "distel");});
test("disteln -> disteln", function() {deepEqual( Stem("disteln"), "disteln");});
test("distelstauden -> distelstaud", function() {deepEqual( Stem("distelstauden"), "distelstaud");});
test("distinktionen -> distinktion", function() {deepEqual( Stem("distinktionen"), "distinktion");});
test("disziplin -> disziplin", function() {deepEqual( Stem("disziplin"), "disziplin");});
test("disziplinarverfahren -> disziplinarverfahr", function() {deepEqual( Stem("disziplinarverfahren"), "disziplinarverfahr");});
test("dithyrambische -> dithyramb", function() {deepEqual( Stem("dithyrambische"), "dithyramb");});
test("divergieren -> divergi", function() {deepEqual( Stem("divergieren"), "divergi");});
test("diversa -> diversa", function() {deepEqual( Stem("diversa"), "diversa");});
test("diverse -> divers", function() {deepEqual( Stem("diverse"), "divers");});
test("dntt -> dntt", function() {deepEqual( Stem("dntt"), "dntt");});
test("do -> do", function() {deepEqual( Stem("do"), "do");});
test("dö -> do", function() {deepEqual( Stem("dö"), "do");});
test("docet -> docet", function() {deepEqual( Stem("docet"), "docet");});
test("doch -> doch", function() {deepEqual( Stem("doch"), "doch");});
test("docht -> docht", function() {deepEqual( Stem("docht"), "docht");});
test("doctrina -> doctrina", function() {deepEqual( Stem("doctrina"), "doctrina");});
test("doctrinalia -> doctrinalia", function() {deepEqual( Stem("doctrinalia"), "doctrinalia");});
test("document -> document", function() {deepEqual( Stem("document"), "document");});
test("dogder -> dogd", function() {deepEqual( Stem("dogder"), "dogd");});
test("dogmata -> dogmata", function() {deepEqual( Stem("dogmata"), "dogmata");});
test("doktor -> doktor", function() {deepEqual( Stem("doktor"), "doktor");});
test("dokumentieren -> dokumenti", function() {deepEqual( Stem("dokumentieren"), "dokumenti");});
test("dolmetscherin -> dolmetscherin", function() {deepEqual( Stem("dolmetscherin"), "dolmetscherin");});
test("dolmusfahrer -> dolmusfahr", function() {deepEqual( Stem("dolmusfahrer"), "dolmusfahr");});
test("dom -> dom", function() {deepEqual( Stem("dom"), "dom");});
test("domes -> dom", function() {deepEqual( Stem("domes"), "dom");});
test("domini -> domini", function() {deepEqual( Stem("domini"), "domini");});
test("dominicus -> dominicus", function() {deepEqual( Stem("dominicus"), "dominicus");});
test("dominierten -> dominiert", function() {deepEqual( Stem("dominierten"), "dominiert");});
test("dominikus -> dominikus", function() {deepEqual( Stem("dominikus"), "dominikus");});
test("domplatz -> domplatz", function() {deepEqual( Stem("domplatz"), "domplatz");});
test("domui -> domui", function() {deepEqual( Stem("domui"), "domui");});
test("domus -> domus", function() {deepEqual( Stem("domus"), "domus");});
test("don -> don", function() {deepEqual( Stem("don"), "don");});
test("donner -> donn", function() {deepEqual( Stem("donner"), "donn");});
test("donnerbrummen -> donnerbrumm", function() {deepEqual( Stem("donnerbrummen"), "donnerbrumm");});
test("dönnerchen -> donnerch", function() {deepEqual( Stem("dönnerchen"), "donnerch");});
test("donnergetümmel -> donnergetummel", function() {deepEqual( Stem("donnergetümmel"), "donnergetummel");});
test("donnermann -> donnermann", function() {deepEqual( Stem("donnermann"), "donnermann");});
test("donnern -> donn", function() {deepEqual( Stem("donnern"), "donn");});
test("donnernd -> donnernd", function() {deepEqual( Stem("donnernd"), "donnernd");});
test("donnerndes -> donnernd", function() {deepEqual( Stem("donnerndes"), "donnernd");});
test("donnerriese -> donnerries", function() {deepEqual( Stem("donnerriese"), "donnerries");});
test("donnerriesen -> donnerries", function() {deepEqual( Stem("donnerriesen"), "donnerries");});
test("donners -> donn", function() {deepEqual( Stem("donners"), "donn");});
test("donnerschlag -> donnerschlag", function() {deepEqual( Stem("donnerschlag"), "donnerschlag");});
test("donnerstag -> donnerstag", function() {deepEqual( Stem("donnerstag"), "donnerstag");});
test("donnerstimmen -> donnerstimm", function() {deepEqual( Stem("donnerstimmen"), "donnerstimm");});
test("donnerte -> donnert", function() {deepEqual( Stem("donnerte"), "donnert");});
test("donnerwetter -> donnerwett", function() {deepEqual( Stem("donnerwetter"), "donnerwett");});
test("doppelbüchse -> doppelbuchs", function() {deepEqual( Stem("doppelbüchse"), "doppelbuchs");});
test("doppelgänger -> doppelgang", function() {deepEqual( Stem("doppelgänger"), "doppelgang");});
test("doppelglas -> doppelglas", function() {deepEqual( Stem("doppelglas"), "doppelglas");});
test("doppelkinns -> doppelkinn", function() {deepEqual( Stem("doppelkinns"), "doppelkinn");});
test("doppelt -> doppelt", function() {deepEqual( Stem("doppelt"), "doppelt");});
test("doppelte -> doppelt", function() {deepEqual( Stem("doppelte"), "doppelt");});
test("doppelten -> doppelt", function() {deepEqual( Stem("doppelten"), "doppelt");});
test("doppelter -> doppelt", function() {deepEqual( Stem("doppelter"), "doppelt");});
test("dorf -> dorf", function() {deepEqual( Stem("dorf"), "dorf");});
test("dörfchens -> dorfch", function() {deepEqual( Stem("dörfchens"), "dorfch");});
test("dorfe -> dorf", function() {deepEqual( Stem("dorfe"), "dorf");});
test("dörfer -> dorf", function() {deepEqual( Stem("dörfer"), "dorf");});
test("dörfern -> dorf", function() {deepEqual( Stem("dörfern"), "dorf");});
test("dorfes -> dorf", function() {deepEqual( Stem("dorfes"), "dorf");});
test("dorfgenossen -> dorfgenoss", function() {deepEqual( Stem("dorfgenossen"), "dorfgenoss");});
test("dorfhange -> dorfhang", function() {deepEqual( Stem("dorfhange"), "dorfhang");});
test("dorfköter -> dorfkot", function() {deepEqual( Stem("dorfköter"), "dorfkot");});
test("dorfkretscham -> dorfkretscham", function() {deepEqual( Stem("dorfkretscham"), "dorfkretscham");});
test("dörfler -> dorfl", function() {deepEqual( Stem("dörfler"), "dorfl");});
test("dörflerische -> dorfler", function() {deepEqual( Stem("dörflerische"), "dorfler");});
test("dorfschaften -> dorfschaft", function() {deepEqual( Stem("dorfschaften"), "dorfschaft");});
test("dorfschönen -> dorfschon", function() {deepEqual( Stem("dorfschönen"), "dorfschon");});
test("dorfschulmeistern -> dorfschulmeist", function() {deepEqual( Stem("dorfschulmeistern"), "dorfschulmeist");});
test("dorfschützer -> dorfschutz", function() {deepEqual( Stem("dorfschützer"), "dorfschutz");});
test("dorfschützern -> dorfschutz", function() {deepEqual( Stem("dorfschützern"), "dorfschutz");});
test("dorfspaziergängen -> dorfspaziergang", function() {deepEqual( Stem("dorfspaziergängen"), "dorfspaziergang");});
test("dorfvorsteher -> dorfvorsteh", function() {deepEqual( Stem("dorfvorsteher"), "dorfvorsteh");});
test("dorfvorstehers -> dorfvorsteh", function() {deepEqual( Stem("dorfvorstehers"), "dorfvorsteh");});
test("dorn -> dorn", function() {deepEqual( Stem("dorn"), "dorn");});
test("dornbusch -> dornbusch", function() {deepEqual( Stem("dornbusch"), "dornbusch");});
test("dornbusche -> dornbusch", function() {deepEqual( Stem("dornbusche"), "dornbusch");});
test("dornbusches -> dornbusch", function() {deepEqual( Stem("dornbusches"), "dornbusch");});
test("dornbuschs -> dornbusch", function() {deepEqual( Stem("dornbuschs"), "dornbusch");});
test("dornen -> dorn", function() {deepEqual( Stem("dornen"), "dorn");});
test("dornengesträuch -> dornengestrauch", function() {deepEqual( Stem("dornengesträuch"), "dornengestrauch");});
test("dornenrüstung -> dornenrust", function() {deepEqual( Stem("dornenrüstung"), "dornenrust");});
test("dornsträucher -> dornstrauch", function() {deepEqual( Stem("dornsträucher"), "dornstrauch");});
test("dort -> dort", function() {deepEqual( Stem("dort"), "dort");});
test("dorthin -> dorthin", function() {deepEqual( Stem("dorthin"), "dorthin");});
test("dortige -> dortig", function() {deepEqual( Stem("dortige"), "dortig");});
test("dortigen -> dortig", function() {deepEqual( Stem("dortigen"), "dortig");});
test("dortiger -> dortig", function() {deepEqual( Stem("dortiger"), "dortig");});
test("dös -> dos", function() {deepEqual( Stem("dös"), "dos");});
test("döschen -> dosch", function() {deepEqual( Stem("döschen"), "dosch");});
test("dose -> dos", function() {deepEqual( Stem("dose"), "dos");});
test("doxa -> doxa", function() {deepEqual( Stem("doxa"), "doxa");});
test("dozentin -> dozentin", function() {deepEqual( Stem("dozentin"), "dozentin");});
test("dr -> dr", function() {deepEqual( Stem("dr"), "dr");});
test("drache -> drach", function() {deepEqual( Stem("drache"), "drach");});
test("drachen -> drach", function() {deepEqual( Stem("drachen"), "drach");});
test("drachengift -> drachengift", function() {deepEqual( Stem("drachengift"), "drachengift");});
test("drachenknopf -> drachenknopf", function() {deepEqual( Stem("drachenknopf"), "drachenknopf");});
test("drachenschlange -> drachenschlang", function() {deepEqual( Stem("drachenschlange"), "drachenschlang");});
test("draht -> draht", function() {deepEqual( Stem("draht"), "draht");});
test("drahtig -> drahtig", function() {deepEqual( Stem("drahtig"), "drahtig");});
test("dramatischen -> dramat", function() {deepEqual( Stem("dramatischen"), "dramat");});
test("dran -> dran", function() {deepEqual( Stem("dran"), "dran");});
test("drang -> drang", function() {deepEqual( Stem("drang"), "drang");});
test("drange -> drang", function() {deepEqual( Stem("drange"), "drang");});
test("drangegeben -> drangegeb", function() {deepEqual( Stem("drangegeben"), "drangegeb");});
test("drangen -> drang", function() {deepEqual( Stem("drangen"), "drang");});
test("drängen -> drang", function() {deepEqual( Stem("drängen"), "drang");});
test("drangsal -> drangsal", function() {deepEqual( Stem("drangsal"), "drangsal");});
test("drängt -> drangt", function() {deepEqual( Stem("drängt"), "drangt");});
test("drängte -> drangt", function() {deepEqual( Stem("drängte"), "drangt");});
test("drängten -> drangt", function() {deepEqual( Stem("drängten"), "drangt");});
test("drapierte -> drapiert", function() {deepEqual( Stem("drapierte"), "drapiert");});
test("drauf -> drauf", function() {deepEqual( Stem("drauf"), "drauf");});
test("draufging -> draufging", function() {deepEqual( Stem("draufging"), "draufging");});
test("draus -> draus", function() {deepEqual( Stem("draus"), "draus");});
test("draussen -> drauss", function() {deepEqual( Stem("draussen"), "drauss");});
test("draußen -> drauss", function() {deepEqual( Stem("draußen"), "drauss");});
test("dreck -> dreck", function() {deepEqual( Stem("dreck"), "dreck");});
test("drehen -> dreh", function() {deepEqual( Stem("drehen"), "dreh");});
test("drehend -> drehend", function() {deepEqual( Stem("drehend"), "drehend");});
test("drehscheibe -> drehscheib", function() {deepEqual( Stem("drehscheibe"), "drehscheib");});
test("dreht -> dreht", function() {deepEqual( Stem("dreht"), "dreht");});
test("drehte -> dreht", function() {deepEqual( Stem("drehte"), "dreht");});
test("drehten -> dreht", function() {deepEqual( Stem("drehten"), "dreht");});
test("drei -> drei", function() {deepEqual( Stem("drei"), "drei");});
test("dreiangel -> dreiangel", function() {deepEqual( Stem("dreiangel"), "dreiangel");});
test("dreibeinigen -> dreibein", function() {deepEqual( Stem("dreibeinigen"), "dreibein");});
test("dreieck -> dreieck", function() {deepEqual( Stem("dreieck"), "dreieck");});
test("dreiecke -> dreieck", function() {deepEqual( Stem("dreiecke"), "dreieck");});
test("dreieckes -> dreieck", function() {deepEqual( Stem("dreieckes"), "dreieck");});
test("dreieckiger -> dreieckig", function() {deepEqual( Stem("dreieckiger"), "dreieckig");});
test("dreieinige -> dreieinig", function() {deepEqual( Stem("dreieinige"), "dreieinig");});
test("dreieinigkeit -> dreieinig", function() {deepEqual( Stem("dreieinigkeit"), "dreieinig");});
test("dreien -> dreien", function() {deepEqual( Stem("dreien"), "dreien");});
test("dreier -> dreier", function() {deepEqual( Stem("dreier"), "dreier");});
test("dreifach -> dreifach", function() {deepEqual( Stem("dreifach"), "dreifach");});
test("dreifache -> dreifach", function() {deepEqual( Stem("dreifache"), "dreifach");});
test("dreifachen -> dreifach", function() {deepEqual( Stem("dreifachen"), "dreifach");});
test("dreihundert -> dreihundert", function() {deepEqual( Stem("dreihundert"), "dreihundert");});
test("dreihundertfünfzig -> dreihundertfunfz", function() {deepEqual( Stem("dreihundertfünfzig"), "dreihundertfunfz");});
test("dreihundertfünfzigtausend -> dreihundertfunfzigtaus", function() {deepEqual( Stem("dreihundertfünfzigtausend"), "dreihundertfunfzigtaus");});
test("dreimal -> dreimal", function() {deepEqual( Stem("dreimal"), "dreimal");});
test("drein -> drein", function() {deepEqual( Stem("drein"), "drein");});
test("dreingeb -> dreingeb", function() {deepEqual( Stem("dreingeb"), "dreingeb");});
test("dreinsah -> dreinsah", function() {deepEqual( Stem("dreinsah"), "dreinsah");});
test("dreinschicken -> dreinschick", function() {deepEqual( Stem("dreinschicken"), "dreinschick");});
test("dreiröhrenhut -> dreirohrenhut", function() {deepEqual( Stem("dreiröhrenhut"), "dreirohrenhut");});
test("dreissig -> dreissig", function() {deepEqual( Stem("dreissig"), "dreissig");});
test("dreißig -> dreissig", function() {deepEqual( Stem("dreißig"), "dreissig");});
test("dreissiger -> dreissig", function() {deepEqual( Stem("dreissiger"), "dreissig");});
test("dreissigster -> dreissig", function() {deepEqual( Stem("dreissigster"), "dreissig");});
test("dreißigster -> dreissig", function() {deepEqual( Stem("dreißigster"), "dreissig");});
test("dreißiig -> dreissiig", function() {deepEqual( Stem("dreißiig"), "dreissiig");});
test("dreist -> dreist", function() {deepEqual( Stem("dreist"), "dreist");});
test("dreiundachtzig -> dreiundachtz", function() {deepEqual( Stem("dreiundachtzig"), "dreiundachtz");});
test("dreiundzwanzigstem -> dreiundzwanz", function() {deepEqual( Stem("dreiundzwanzigstem"), "dreiundzwanz");});
test("dreizackigen -> dreizack", function() {deepEqual( Stem("dreizackigen"), "dreizack");});
test("dreizehn -> dreizehn", function() {deepEqual( Stem("dreizehn"), "dreizehn");});
test("dreschen -> dresch", function() {deepEqual( Stem("dreschen"), "dresch");});
test("dresden -> dresd", function() {deepEqual( Stem("dresden"), "dresd");});
test("drewes -> drew", function() {deepEqual( Stem("drewes"), "drew");});
test("drfe -> drfe", function() {deepEqual( Stem("drfe"), "drfe");});
test("drin -> drin", function() {deepEqual( Stem("drin"), "drin");});
test("dringen -> dring", function() {deepEqual( Stem("dringen"), "dring");});
test("dringend -> dringend", function() {deepEqual( Stem("dringend"), "dringend");});
test("dringende -> dringend", function() {deepEqual( Stem("dringende"), "dringend");});
test("dringendes -> dringend", function() {deepEqual( Stem("dringendes"), "dringend");});
test("dringendste -> dringend", function() {deepEqual( Stem("dringendste"), "dringend");});
test("dringlich -> dringlich", function() {deepEqual( Stem("dringlich"), "dringlich");});
test("dringt -> dringt", function() {deepEqual( Stem("dringt"), "dringt");});
test("drinks -> drink", function() {deepEqual( Stem("drinks"), "drink");});
test("drinnen -> drinn", function() {deepEqual( Stem("drinnen"), "drinn");});
test("drisch -> drisch", function() {deepEqual( Stem("drisch"), "drisch");});
test("dritt -> dritt", function() {deepEqual( Stem("dritt"), "dritt");});
test("dritte -> dritt", function() {deepEqual( Stem("dritte"), "dritt");});
test("drittehalb -> drittehalb", function() {deepEqual( Stem("drittehalb"), "drittehalb");});
test("drittel -> drittel", function() {deepEqual( Stem("drittel"), "drittel");});
test("drittem -> dritt", function() {deepEqual( Stem("drittem"), "dritt");});
test("dritten -> dritt", function() {deepEqual( Stem("dritten"), "dritt");});
test("drittenmal -> drittenmal", function() {deepEqual( Stem("drittenmal"), "drittenmal");});
test("drittens -> dritt", function() {deepEqual( Stem("drittens"), "dritt");});
test("dritter -> dritt", function() {deepEqual( Stem("dritter"), "dritt");});
test("drittes -> dritt", function() {deepEqual( Stem("drittes"), "dritt");});
test("dritthalb -> dritthalb", function() {deepEqual( Stem("dritthalb"), "dritthalb");});
test("droben -> drob", function() {deepEqual( Stem("droben"), "drob");});
test("drogenpolitik -> drogenpolit", function() {deepEqual( Stem("drogenpolitik"), "drogenpolit");});
test("drohen -> droh", function() {deepEqual( Stem("drohen"), "droh");});
test("drohend -> drohend", function() {deepEqual( Stem("drohend"), "drohend");});
test("drohende -> drohend", function() {deepEqual( Stem("drohende"), "drohend");});
test("drohenden -> drohend", function() {deepEqual( Stem("drohenden"), "drohend");});
test("drohendes -> drohend", function() {deepEqual( Stem("drohendes"), "drohend");});
test("drohete -> drohet", function() {deepEqual( Stem("drohete"), "drohet");});
test("dröhnend -> drohnend", function() {deepEqual( Stem("dröhnend"), "drohnend");});
test("dröhnte -> drohnt", function() {deepEqual( Stem("dröhnte"), "drohnt");});
test("droht -> droht", function() {deepEqual( Stem("droht"), "droht");});
test("drohte -> droht", function() {deepEqual( Stem("drohte"), "droht");});
test("drohten -> droht", function() {deepEqual( Stem("drohten"), "droht");});
test("drohungen -> drohung", function() {deepEqual( Stem("drohungen"), "drohung");});
test("drollig -> drollig", function() {deepEqual( Stem("drollig"), "drollig");});
test("drollige -> drollig", function() {deepEqual( Stem("drollige"), "drollig");});
test("drolligen -> drollig", function() {deepEqual( Stem("drolligen"), "drollig");});
test("drolliges -> drollig", function() {deepEqual( Stem("drolliges"), "drollig");});
test("dromedare -> dromedar", function() {deepEqual( Stem("dromedare"), "dromedar");});
test("drüben -> drub", function() {deepEqual( Stem("drüben"), "drub");});
test("drüber -> drub", function() {deepEqual( Stem("drüber"), "drub");});
test("druck -> druck", function() {deepEqual( Stem("druck"), "druck");});
test("drucke -> druck", function() {deepEqual( Stem("drucke"), "druck");});
test("drücken -> druck", function() {deepEqual( Stem("drücken"), "druck");});
test("drückend -> druckend", function() {deepEqual( Stem("drückend"), "druckend");});
test("drückenden -> druckend", function() {deepEqual( Stem("drückenden"), "druckend");});
test("druckes -> druck", function() {deepEqual( Stem("druckes"), "druck");});
test("drucks -> druck", function() {deepEqual( Stem("drucks"), "druck");});
test("drucksorten -> drucksort", function() {deepEqual( Stem("drucksorten"), "drucksort");});
test("druckt -> druckt", function() {deepEqual( Stem("druckt"), "druckt");});
test("drückte -> druckt", function() {deepEqual( Stem("drückte"), "druckt");});
test("drückten -> druckt", function() {deepEqual( Stem("drückten"), "druckt");});
test("drum -> drum", function() {deepEqual( Stem("drum"), "drum");});
test("drunt -> drunt", function() {deepEqual( Stem("drunt"), "drunt");});
test("drunten -> drunt", function() {deepEqual( Stem("drunten"), "drunt");});
test("drüppelei -> druppelei", function() {deepEqual( Stem("drüppelei"), "druppelei");});
test("drüppeln -> druppeln", function() {deepEqual( Stem("drüppeln"), "druppeln");});
test("drüppelü -> druppelu", function() {deepEqual( Stem("drüppelü"), "druppelu");});
test("drüsen -> drus", function() {deepEqual( Stem("drüsen"), "drus");});
test("du -> du", function() {deepEqual( Stem("du"), "du");});
test("ducken -> duck", function() {deepEqual( Stem("ducken"), "duck");});
test("duckmäuser -> duckmaus", function() {deepEqual( Stem("duckmäuser"), "duckmaus");});
test("duckt -> duckt", function() {deepEqual( Stem("duckt"), "duckt");});
test("duckte -> duckt", function() {deepEqual( Stem("duckte"), "duckt");});
test("duckten -> duckt", function() {deepEqual( Stem("duckten"), "duckt");});
test("dudlerei -> dudlerei", function() {deepEqual( Stem("dudlerei"), "dudlerei");});
test("duell -> duell", function() {deepEqual( Stem("duell"), "duell");});
test("duft -> duft", function() {deepEqual( Stem("duft"), "duft");});
test("duftende -> duftend", function() {deepEqual( Stem("duftende"), "duftend");});
test("duftenden -> duftend", function() {deepEqual( Stem("duftenden"), "duftend");});
test("duftet -> duftet", function() {deepEqual( Stem("duftet"), "duftet");});
test("duftete -> duftet", function() {deepEqual( Stem("duftete"), "duftet");});
test("duftgewebe -> duftgeweb", function() {deepEqual( Stem("duftgewebe"), "duftgeweb");});
test("duftig -> duftig", function() {deepEqual( Stem("duftig"), "duftig");});
test("duftwolken -> duftwolk", function() {deepEqual( Stem("duftwolken"), "duftwolk");});
test("duht -> duht", function() {deepEqual( Stem("duht"), "duht");});
test("dukaten -> dukat", function() {deepEqual( Stem("dukaten"), "dukat");});
test("dulden -> duld", function() {deepEqual( Stem("dulden"), "duld");});
test("dulderin -> dulderin", function() {deepEqual( Stem("dulderin"), "dulderin");});
test("duldete -> duldet", function() {deepEqual( Stem("duldete"), "duldet");});
test("duldeten -> duldet", function() {deepEqual( Stem("duldeten"), "duldet");});
test("duldsamkeit -> duldsam", function() {deepEqual( Stem("duldsamkeit"), "duldsam");});
test("duldung -> duldung", function() {deepEqual( Stem("duldung"), "duldung");});
test("dumm -> dumm", function() {deepEqual( Stem("dumm"), "dumm");});
test("dumme -> dumm", function() {deepEqual( Stem("dumme"), "dumm");});
test("dummen -> dumm", function() {deepEqual( Stem("dummen"), "dumm");});
test("dummer -> dumm", function() {deepEqual( Stem("dummer"), "dumm");});
test("dümmer -> dumm", function() {deepEqual( Stem("dümmer"), "dumm");});
test("dummes -> dumm", function() {deepEqual( Stem("dummes"), "dumm");});
test("dummglotzenden -> dummglotz", function() {deepEqual( Stem("dummglotzenden"), "dummglotz");});
test("dummheit -> dummheit", function() {deepEqual( Stem("dummheit"), "dummheit");});
test("dummheiten -> dummheit", function() {deepEqual( Stem("dummheiten"), "dummheit");});
test("dummkopf -> dummkopf", function() {deepEqual( Stem("dummkopf"), "dummkopf");});
test("dummköpfe -> dummkopf", function() {deepEqual( Stem("dummköpfe"), "dummkopf");});
test("dummköpfen -> dummkopf", function() {deepEqual( Stem("dummköpfen"), "dummkopf");});
test("dümmling -> dummling", function() {deepEqual( Stem("dümmling"), "dummling");});
test("dumms -> dumm", function() {deepEqual( Stem("dumms"), "dumm");});
test("dumpf -> dumpf", function() {deepEqual( Stem("dumpf"), "dumpf");});
test("dumpfem -> dumpf", function() {deepEqual( Stem("dumpfem"), "dumpf");});
test("dumpfen -> dumpf", function() {deepEqual( Stem("dumpfen"), "dumpf");});
test("dumpfhallend -> dumpfhall", function() {deepEqual( Stem("dumpfhallend"), "dumpfhall");});
test("dunggestank -> dunggestank", function() {deepEqual( Stem("dunggestank"), "dunggestank");});
test("dunkel -> dunkel", function() {deepEqual( Stem("dunkel"), "dunkel");});
test("dunkelblau -> dunkelblau", function() {deepEqual( Stem("dunkelblau"), "dunkelblau");});
test("dunkelblauen -> dunkelblau", function() {deepEqual( Stem("dunkelblauen"), "dunkelblau");});
test("dunkelbraunen -> dunkelbraun", function() {deepEqual( Stem("dunkelbraunen"), "dunkelbraun");});
test("dunkele -> dunkel", function() {deepEqual( Stem("dunkele"), "dunkel");});
test("dunkelgrauen -> dunkelgrau", function() {deepEqual( Stem("dunkelgrauen"), "dunkelgrau");});
test("dunkelgrüne -> dunkelgrun", function() {deepEqual( Stem("dunkelgrüne"), "dunkelgrun");});
test("dunkelgrünen -> dunkelgrun", function() {deepEqual( Stem("dunkelgrünen"), "dunkelgrun");});
test("dunkelhaariges -> dunkelhaar", function() {deepEqual( Stem("dunkelhaariges"), "dunkelhaar");});
test("dunkelheit -> dunkel", function() {deepEqual( Stem("dunkelheit"), "dunkel");});
test("dunkelheiten -> dunkel", function() {deepEqual( Stem("dunkelheiten"), "dunkel");});
test("dunkeln -> dunkeln", function() {deepEqual( Stem("dunkeln"), "dunkeln");});
test("dunkelrot -> dunkelrot", function() {deepEqual( Stem("dunkelrot"), "dunkelrot");});
test("dunkelrotem -> dunkelrot", function() {deepEqual( Stem("dunkelrotem"), "dunkelrot");});
test("dunkelrotes -> dunkelrot", function() {deepEqual( Stem("dunkelrotes"), "dunkelrot");});
test("dunkels -> dunkel", function() {deepEqual( Stem("dunkels"), "dunkel");});
test("dunkeltal -> dunkeltal", function() {deepEqual( Stem("dunkeltal"), "dunkeltal");});
test("dunkelte -> dunkelt", function() {deepEqual( Stem("dunkelte"), "dunkelt");});
test("dünkelvoller -> dunkelvoll", function() {deepEqual( Stem("dünkelvoller"), "dunkelvoll");});
test("dünken -> dunk", function() {deepEqual( Stem("dünken"), "dunk");});
test("dünkenden -> dunkend", function() {deepEqual( Stem("dünkenden"), "dunkend");});
test("dunkle -> dunkl", function() {deepEqual( Stem("dunkle"), "dunkl");});
test("dunklem -> dunkl", function() {deepEqual( Stem("dunklem"), "dunkl");});
test("dunklen -> dunkl", function() {deepEqual( Stem("dunklen"), "dunkl");});
test("dunkler -> dunkl", function() {deepEqual( Stem("dunkler"), "dunkl");});
test("dunkleren -> dunkl", function() {deepEqual( Stem("dunkleren"), "dunkl");});
test("dunkleres -> dunkl", function() {deepEqual( Stem("dunkleres"), "dunkl");});
test("dunkles -> dunkl", function() {deepEqual( Stem("dunkles"), "dunkl");});
test("dünkt -> dunkt", function() {deepEqual( Stem("dünkt"), "dunkt");});
test("dünkte -> dunkt", function() {deepEqual( Stem("dünkte"), "dunkt");});
test("dünkten -> dunkt", function() {deepEqual( Stem("dünkten"), "dunkt");});
test("dünn -> dunn", function() {deepEqual( Stem("dünn"), "dunn");});
test("dünne -> dunn", function() {deepEqual( Stem("dünne"), "dunn");});
test("dünnen -> dunn", function() {deepEqual( Stem("dünnen"), "dunn");});
test("dünner -> dunn", function() {deepEqual( Stem("dünner"), "dunn");});
test("dünnes -> dunn", function() {deepEqual( Stem("dünnes"), "dunn");});
test("dunst -> dunst", function() {deepEqual( Stem("dunst"), "dunst");});
test("dünste -> dunst", function() {deepEqual( Stem("dünste"), "dunst");});
test("dünsten -> dunst", function() {deepEqual( Stem("dünsten"), "dunst");});
test("dunstwölkchen -> dunstwolkch", function() {deepEqual( Stem("dunstwölkchen"), "dunstwolkch");});
test("durch -> durch", function() {deepEqual( Stem("durch"), "durch");});
test("durcharbeiten -> durcharbeit", function() {deepEqual( Stem("durcharbeiten"), "durcharbeit");});
test("durchaus -> durchaus", function() {deepEqual( Stem("durchaus"), "durchaus");});
test("durchblättern -> durchblatt", function() {deepEqual( Stem("durchblättern"), "durchblatt");});
test("durchblätterte -> durchblattert", function() {deepEqual( Stem("durchblätterte"), "durchblattert");});
test("durchblicken -> durchblick", function() {deepEqual( Stem("durchblicken"), "durchblick");});
test("durchbohrt -> durchbohrt", function() {deepEqual( Stem("durchbohrt"), "durchbohrt");});
test("durchbohrte -> durchbohrt", function() {deepEqual( Stem("durchbohrte"), "durchbohrt");});
test("durchbohrten -> durchbohrt", function() {deepEqual( Stem("durchbohrten"), "durchbohrt");});
test("durchbohrter -> durchbohrt", function() {deepEqual( Stem("durchbohrter"), "durchbohrt");});
test("durchbohrung -> durchbohr", function() {deepEqual( Stem("durchbohrung"), "durchbohr");});
test("durchbrechen -> durchbrech", function() {deepEqual( Stem("durchbrechen"), "durchbrech");});
test("durchbrochen -> durchbroch", function() {deepEqual( Stem("durchbrochen"), "durchbroch");});
test("durchbrochenem -> durchbroch", function() {deepEqual( Stem("durchbrochenem"), "durchbroch");});
test("durchbruch -> durchbruch", function() {deepEqual( Stem("durchbruch"), "durchbruch");});
test("durchdacht -> durchdacht", function() {deepEqual( Stem("durchdacht"), "durchdacht");});
test("durchdrang -> durchdrang", function() {deepEqual( Stem("durchdrang"), "durchdrang");});
test("durchdringen -> durchdring", function() {deepEqual( Stem("durchdringen"), "durchdring");});
test("durchdrungen -> durchdrung", function() {deepEqual( Stem("durchdrungen"), "durchdrung");});
test("durchduftete -> durchduftet", function() {deepEqual( Stem("durchduftete"), "durchduftet");});
test("durcheinander -> durcheinand", function() {deepEqual( Stem("durcheinander"), "durcheinand");});
test("durcheinanderhingen -> durcheinanderhing", function() {deepEqual( Stem("durcheinanderhingen"), "durcheinanderhing");});
test("durcheinanderliefen -> durcheinanderlief", function() {deepEqual( Stem("durcheinanderliefen"), "durcheinanderlief");});
test("durcheinanderwimmelnden -> durcheinanderwimmelnd", function() {deepEqual( Stem("durcheinanderwimmelnden"), "durcheinanderwimmelnd");});
test("durcheinanderwirbelte -> durcheinanderwirbelt", function() {deepEqual( Stem("durcheinanderwirbelte"), "durcheinanderwirbelt");});
test("durchfallen -> durchfall", function() {deepEqual( Stem("durchfallen"), "durchfall");});
test("durchfliessen -> durchfliess", function() {deepEqual( Stem("durchfliessen"), "durchfliess");});
test("durchfließen -> durchfliess", function() {deepEqual( Stem("durchfließen"), "durchfliess");});
test("durchforscht -> durchforscht", function() {deepEqual( Stem("durchforscht"), "durchforscht");});
test("durchfuhr -> durchfuhr", function() {deepEqual( Stem("durchfuhr"), "durchfuhr");});
test("durchfuhren -> durchfuhr", function() {deepEqual( Stem("durchfuhren"), "durchfuhr");});
test("durchführte -> durchfuhrt", function() {deepEqual( Stem("durchführte"), "durchfuhrt");});
test("durchführung -> durchfuhr", function() {deepEqual( Stem("durchführung"), "durchfuhr");});
test("durchgackerten -> durchgackert", function() {deepEqual( Stem("durchgackerten"), "durchgackert");});
test("durchgang -> durchgang", function() {deepEqual( Stem("durchgang"), "durchgang");});
test("durchgängig -> durchgang", function() {deepEqual( Stem("durchgängig"), "durchgang");});
test("durchgängigen -> durchgang", function() {deepEqual( Stem("durchgängigen"), "durchgang");});
test("durchgangsasyl -> durchgangsasyl", function() {deepEqual( Stem("durchgangsasyl"), "durchgangsasyl");});
test("durchgeführt -> durchgefuhrt", function() {deepEqual( Stem("durchgeführt"), "durchgefuhrt");});
test("durchgegeben -> durchgegeb", function() {deepEqual( Stem("durchgegeben"), "durchgegeb");});
test("durchgehechelt -> durchgehechelt", function() {deepEqual( Stem("durchgehechelt"), "durchgehechelt");});
test("durchgehen -> durchgeh", function() {deepEqual( Stem("durchgehen"), "durchgeh");});
test("durchgeht -> durchgeht", function() {deepEqual( Stem("durchgeht"), "durchgeht");});
test("durchgekämpft -> durchgekampft", function() {deepEqual( Stem("durchgekämpft"), "durchgekampft");});
test("durchgekaute -> durchgekaut", function() {deepEqual( Stem("durchgekaute"), "durchgekaut");});
test("durchgelassen -> durchgelass", function() {deepEqual( Stem("durchgelassen"), "durchgelass");});
test("durchgelaufen -> durchgelauf", function() {deepEqual( Stem("durchgelaufen"), "durchgelauf");});
test("durchgereist -> durchgereist", function() {deepEqual( Stem("durchgereist"), "durchgereist");});
test("durchgeschleppt -> durchgeschleppt", function() {deepEqual( Stem("durchgeschleppt"), "durchgeschleppt");});
test("durchgreifende -> durchgreif", function() {deepEqual( Stem("durchgreifende"), "durchgreif");});
test("durchkommen -> durchkomm", function() {deepEqual( Stem("durchkommen"), "durchkomm");});
test("durchläuft -> durchlauft", function() {deepEqual( Stem("durchläuft"), "durchlauft");});
test("durchleben -> durchleb", function() {deepEqual( Stem("durchleben"), "durchleb");});
test("durchlief -> durchlief", function() {deepEqual( Stem("durchlief"), "durchlief");});
test("durchliess -> durchliess", function() {deepEqual( Stem("durchliess"), "durchliess");});
test("durchlöchern -> durchloch", function() {deepEqual( Stem("durchlöchern"), "durchloch");});
test("durchmass -> durchmass", function() {deepEqual( Stem("durchmass"), "durchmass");});
test("durchmustern -> durchmust", function() {deepEqual( Stem("durchmustern"), "durchmust");});
test("durchmusterte -> durchmustert", function() {deepEqual( Stem("durchmusterte"), "durchmustert");});
test("durchquerte -> durchquert", function() {deepEqual( Stem("durchquerte"), "durchquert");});
test("durchs -> durch", function() {deepEqual( Stem("durchs"), "durch");});
test("durchschauerte -> durchschauert", function() {deepEqual( Stem("durchschauerte"), "durchschauert");});
test("durchschaute -> durchschaut", function() {deepEqual( Stem("durchschaute"), "durchschaut");});
test("durchschauten -> durchschaut", function() {deepEqual( Stem("durchschauten"), "durchschaut");});
test("durchscheinen -> durchschein", function() {deepEqual( Stem("durchscheinen"), "durchschein");});
test("durchscheinend -> durchschein", function() {deepEqual( Stem("durchscheinend"), "durchschein");});
test("durchscheinenden -> durchschein", function() {deepEqual( Stem("durchscheinenden"), "durchschein");});
test("durchschimmern -> durchschimm", function() {deepEqual( Stem("durchschimmern"), "durchschimm");});
test("durchschimmerte -> durchschimmert", function() {deepEqual( Stem("durchschimmerte"), "durchschimmert");});
test("durchschlagen -> durchschlag", function() {deepEqual( Stem("durchschlagen"), "durchschlag");});
test("durchschneiden -> durchschneid", function() {deepEqual( Stem("durchschneiden"), "durchschneid");});
test("durchschnittenen -> durchschnitt", function() {deepEqual( Stem("durchschnittenen"), "durchschnitt");});
test("durchschnittsleben -> durchschnittsleb", function() {deepEqual( Stem("durchschnittsleben"), "durchschnittsleb");});
test("durchschritten -> durchschritt", function() {deepEqual( Stem("durchschritten"), "durchschritt");});
test("durchschwemmt -> durchschwemmt", function() {deepEqual( Stem("durchschwemmt"), "durchschwemmt");});
test("durchsetzen -> durchsetz", function() {deepEqual( Stem("durchsetzen"), "durchsetz");});
test("durchsetzt -> durchsetzt", function() {deepEqual( Stem("durchsetzt"), "durchsetzt");});
test("durchsetzung -> durchsetz", function() {deepEqual( Stem("durchsetzung"), "durchsetz");});
test("durchsichtig -> durchsicht", function() {deepEqual( Stem("durchsichtig"), "durchsicht");});
test("durchsichtige -> durchsicht", function() {deepEqual( Stem("durchsichtige"), "durchsicht");});
test("durchsichtigem -> durchsicht", function() {deepEqual( Stem("durchsichtigem"), "durchsicht");});
test("durchsichtigen -> durchsicht", function() {deepEqual( Stem("durchsichtigen"), "durchsicht");});
test("durchsichtiger -> durchsicht", function() {deepEqual( Stem("durchsichtiger"), "durchsicht");});
test("durchsichtigkeit -> durchsicht", function() {deepEqual( Stem("durchsichtigkeit"), "durchsicht");});
test("durchsickern -> durchsick", function() {deepEqual( Stem("durchsickern"), "durchsick");});
test("durchsonnte -> durchsonnt", function() {deepEqual( Stem("durchsonnte"), "durchsonnt");});
test("durchstrichen -> durchstrich", function() {deepEqual( Stem("durchstrichen"), "durchstrich");});
test("durchströmt -> durchstromt", function() {deepEqual( Stem("durchströmt"), "durchstromt");});
test("durchsuchen -> durchsuch", function() {deepEqual( Stem("durchsuchen"), "durchsuch");});
test("durchsucht -> durchsucht", function() {deepEqual( Stem("durchsucht"), "durchsucht");});
test("durchsuchte -> durchsucht", function() {deepEqual( Stem("durchsuchte"), "durchsucht");});
test("durchsuchten -> durchsucht", function() {deepEqual( Stem("durchsuchten"), "durchsucht");});
test("durchsuchungen -> durchsuch", function() {deepEqual( Stem("durchsuchungen"), "durchsuch");});
test("durchtrieben -> durchtrieb", function() {deepEqual( Stem("durchtrieben"), "durchtrieb");});
test("durchtriebener -> durchtrieb", function() {deepEqual( Stem("durchtriebener"), "durchtrieb");});
test("durchwanderten -> durchwandert", function() {deepEqual( Stem("durchwanderten"), "durchwandert");});
test("durchweg -> durchweg", function() {deepEqual( Stem("durchweg"), "durchweg");});
test("durchwegs -> durchweg", function() {deepEqual( Stem("durchwegs"), "durchweg");});
test("durchweicht -> durchweicht", function() {deepEqual( Stem("durchweicht"), "durchweicht");});
test("durchzogen -> durchzog", function() {deepEqual( Stem("durchzogen"), "durchzog");});
test("durchzogener -> durchzog", function() {deepEqual( Stem("durchzogener"), "durchzog");});
test("durchzuckte -> durchzuckt", function() {deepEqual( Stem("durchzuckte"), "durchzuckt");});
test("durchzulesen -> durchzules", function() {deepEqual( Stem("durchzulesen"), "durchzules");});
test("durchzuschlagen -> durchzuschlag", function() {deepEqual( Stem("durchzuschlagen"), "durchzuschlag");});
test("durchzusehen -> durchzuseh", function() {deepEqual( Stem("durchzusehen"), "durchzuseh");});
test("durchzuwandern -> durchzuwand", function() {deepEqual( Stem("durchzuwandern"), "durchzuwand");});
test("dürfe -> durf", function() {deepEqual( Stem("dürfe"), "durf");});
test("dürfen -> durf", function() {deepEqual( Stem("dürfen"), "durf");});
test("dürfet -> durfet", function() {deepEqual( Stem("dürfet"), "durfet");});
test("dürft -> durft", function() {deepEqual( Stem("dürft"), "durft");});
test("durfte -> durft", function() {deepEqual( Stem("durfte"), "durft");});
test("dürfte -> durft", function() {deepEqual( Stem("dürfte"), "durft");});
test("durften -> durft", function() {deepEqual( Stem("durften"), "durft");});
test("dürften -> durft", function() {deepEqual( Stem("dürften"), "durft");});
test("dürftet -> durftet", function() {deepEqual( Stem("dürftet"), "durftet");});
test("dürftig -> durftig", function() {deepEqual( Stem("dürftig"), "durftig");});
test("dürftige -> durftig", function() {deepEqual( Stem("dürftige"), "durftig");});
test("dürftigem -> durftig", function() {deepEqual( Stem("dürftigem"), "durftig");});
test("dürftigen -> durftig", function() {deepEqual( Stem("dürftigen"), "durftig");});
test("dürftigkeit -> durftig", function() {deepEqual( Stem("dürftigkeit"), "durftig");});
test("dürr -> durr", function() {deepEqual( Stem("dürr"), "durr");});
test("dürre -> durr", function() {deepEqual( Stem("dürre"), "durr");});
test("dürrem -> durr", function() {deepEqual( Stem("dürrem"), "durr");});
test("dürren -> durr", function() {deepEqual( Stem("dürren"), "durr");});
test("dürrer -> durr", function() {deepEqual( Stem("dürrer"), "durr");});
test("dürres -> durr", function() {deepEqual( Stem("dürres"), "durr");});
test("durst -> durst", function() {deepEqual( Stem("durst"), "durst");});
test("dürste -> durst", function() {deepEqual( Stem("dürste"), "durst");});
test("dursten -> durst", function() {deepEqual( Stem("dursten"), "durst");});
test("dürsten -> durst", function() {deepEqual( Stem("dürsten"), "durst");});
test("dürstende -> durstend", function() {deepEqual( Stem("dürstende"), "durstend");});
test("dürstenden -> durstend", function() {deepEqual( Stem("dürstenden"), "durstend");});
test("durstet -> durstet", function() {deepEqual( Stem("durstet"), "durstet");});
test("dürsteten -> durstet", function() {deepEqual( Stem("dürsteten"), "durstet");});
test("durstige -> durstig", function() {deepEqual( Stem("durstige"), "durstig");});
test("durstiger -> durstig", function() {deepEqual( Stem("durstiger"), "durstig");});
test("duselnden -> duselnd", function() {deepEqual( Stem("duselnden"), "duselnd");});
test("duselt -> duselt", function() {deepEqual( Stem("duselt"), "duselt");});
test("düster -> dust", function() {deepEqual( Stem("düster"), "dust");});
test("düstere -> dust", function() {deepEqual( Stem("düstere"), "dust");});
test("düsterem -> dust", function() {deepEqual( Stem("düsterem"), "dust");});
test("düsterer -> dust", function() {deepEqual( Stem("düsterer"), "dust");});
test("düte -> dut", function() {deepEqual( Stem("düte"), "dut");});
test("düten -> dut", function() {deepEqual( Stem("düten"), "dut");});
test("dutzend -> dutzend", function() {deepEqual( Stem("dutzend"), "dutzend");});
test("dutzenden -> dutzend", function() {deepEqual( Stem("dutzenden"), "dutzend");});
test("dutzendmal -> dutzendmal", function() {deepEqual( Stem("dutzendmal"), "dutzendmal");});
test("dutzendweise -> dutzendweis", function() {deepEqual( Stem("dutzendweise"), "dutzendweis");});
test("dv -> dv", function() {deepEqual( Stem("dv"), "dv");});
test("dynamischen -> dynam", function() {deepEqual( Stem("dynamischen"), "dynam");});
test("dyp -> dyp", function() {deepEqual( Stem("dyp"), "dyp");});
test("e -> e", function() {deepEqual( Stem("e"), "e");});
test("eahm -> eahm", function() {deepEqual( Stem("eahm"), "eahm");});
test("eandemque -> eandemqu", function() {deepEqual( Stem("eandemque"), "eandemqu");});
test("earth -> earth", function() {deepEqual( Stem("earth"), "earth");});
test("easy -> easy", function() {deepEqual( Stem("easy"), "easy");});
test("ebbes -> ebb", function() {deepEqual( Stem("ebbes"), "ebb");});
test("eben -> eben", function() {deepEqual( Stem("eben"), "eben");});
test("ebenbild -> ebenbild", function() {deepEqual( Stem("ebenbild"), "ebenbild");});
test("ebenbürtig -> ebenburt", function() {deepEqual( Stem("ebenbürtig"), "ebenburt");});
test("ebenbürtigen -> ebenburt", function() {deepEqual( Stem("ebenbürtigen"), "ebenburt");});
test("ebendaher -> ebendah", function() {deepEqual( Stem("ebendaher"), "ebendah");});
test("ebendamit -> ebendamit", function() {deepEqual( Stem("ebendamit"), "ebendamit");});
test("ebendarum -> ebendarum", function() {deepEqual( Stem("ebendarum"), "ebendarum");});
test("ebendaselbst -> ebendaselb", function() {deepEqual( Stem("ebendaselbst"), "ebendaselb");});
test("ebendasselbe -> ebendasselb", function() {deepEqual( Stem("ebendasselbe"), "ebendasselb");});
test("ebendenselben -> ebendenselb", function() {deepEqual( Stem("ebendenselben"), "ebendenselb");});
test("ebenderselben -> ebenderselb", function() {deepEqual( Stem("ebenderselben"), "ebenderselb");});
test("ebendiese -> ebendies", function() {deepEqual( Stem("ebendiese"), "ebendies");});
test("ebendieselbe -> ebendieselb", function() {deepEqual( Stem("ebendieselbe"), "ebendieselb");});
test("ebendieselben -> ebendieselb", function() {deepEqual( Stem("ebendieselben"), "ebendieselb");});
test("ebendort -> ebendort", function() {deepEqual( Stem("ebendort"), "ebendort");});
test("ebene -> eben", function() {deepEqual( Stem("ebene"), "eben");});
test("ebenen -> eben", function() {deepEqual( Stem("ebenen"), "eben");});
test("ebenerdige -> ebenerd", function() {deepEqual( Stem("ebenerdige"), "ebenerd");});
test("ebenfahls -> ebenfahl", function() {deepEqual( Stem("ebenfahls"), "ebenfahl");});
test("ebenfalls -> ebenfall", function() {deepEqual( Stem("ebenfalls"), "ebenfall");});
test("ebenso -> ebenso", function() {deepEqual( Stem("ebenso"), "ebenso");});
test("ebensogut -> ebensogut", function() {deepEqual( Stem("ebensogut"), "ebensogut");});
test("ebensoviel -> ebensoviel", function() {deepEqual( Stem("ebensoviel"), "ebensoviel");});
test("ebensowenig -> ebensowen", function() {deepEqual( Stem("ebensowenig"), "ebensowen");});
test("ebensowohl -> ebensowohl", function() {deepEqual( Stem("ebensowohl"), "ebensowohl");});
test("eber -> eber", function() {deepEqual( Stem("eber"), "eber");});
test("ebereschen -> eberesch", function() {deepEqual( Stem("ebereschen"), "eberesch");});
test("ebne -> ebn", function() {deepEqual( Stem("ebne"), "ebn");});
test("ebnete -> ebnet", function() {deepEqual( Stem("ebnete"), "ebnet");});
test("ecclesiae -> ecclesia", function() {deepEqual( Stem("ecclesiae"), "ecclesia");});
test("echo -> echo", function() {deepEqual( Stem("echo"), "echo");});
test("echt -> echt", function() {deepEqual( Stem("echt"), "echt");});
test("echte -> echt", function() {deepEqual( Stem("echte"), "echt");});
test("echten -> echt", function() {deepEqual( Stem("echten"), "echt");});
test("echter -> echt", function() {deepEqual( Stem("echter"), "echt");});
test("ecke -> eck", function() {deepEqual( Stem("ecke"), "eck");});
test("ecken -> eck", function() {deepEqual( Stem("ecken"), "eck");});
test("eckig -> eckig", function() {deepEqual( Stem("eckig"), "eckig");});
test("ecksäulen -> ecksaul", function() {deepEqual( Stem("ecksäulen"), "ecksaul");});
test("eckzimmer -> eckzimm", function() {deepEqual( Stem("eckzimmer"), "eckzimm");});
test("ectypa -> ectypa", function() {deepEqual( Stem("ectypa"), "ectypa");});
test("eda -> eda", function() {deepEqual( Stem("eda"), "eda");});
test("edel -> edel", function() {deepEqual( Stem("edel"), "edel");});
test("edelgeformten -> edelgeformt", function() {deepEqual( Stem("edelgeformten"), "edelgeformt");});
test("edelherr -> edelherr", function() {deepEqual( Stem("edelherr"), "edelherr");});
test("edelherren -> edelherr", function() {deepEqual( Stem("edelherren"), "edelherr");});
test("edelherrn -> edelherrn", function() {deepEqual( Stem("edelherrn"), "edelherrn");});
test("edelmann -> edelmann", function() {deepEqual( Stem("edelmann"), "edelmann");});
test("edelmanns -> edelmann", function() {deepEqual( Stem("edelmanns"), "edelmann");});
test("edelmannstracht -> edelmannstracht", function() {deepEqual( Stem("edelmannstracht"), "edelmannstracht");});
test("edelmütig -> edelmut", function() {deepEqual( Stem("edelmütig"), "edelmut");});
test("edelpferden -> edelpferd", function() {deepEqual( Stem("edelpferden"), "edelpferd");});
test("edelste -> edel", function() {deepEqual( Stem("edelste"), "edel");});
test("edelstein -> edelstein", function() {deepEqual( Stem("edelstein"), "edelstein");});
test("edelsteine -> edelstein", function() {deepEqual( Stem("edelsteine"), "edelstein");});
test("edelsteinen -> edelstein", function() {deepEqual( Stem("edelsteinen"), "edelstein");});
test("edelsten -> edel", function() {deepEqual( Stem("edelsten"), "edel");});
test("edelweib -> edelweib", function() {deepEqual( Stem("edelweib"), "edelweib");});
test("edelweiss -> edelweiss", function() {deepEqual( Stem("edelweiss"), "edelweiss");});
test("eden -> eden", function() {deepEqual( Stem("eden"), "eden");});
test("edens -> eden", function() {deepEqual( Stem("edens"), "eden");});
test("ediert -> ediert", function() {deepEqual( Stem("ediert"), "ediert");});
test("edith -> edith", function() {deepEqual( Stem("edith"), "edith");});
test("edle -> edl", function() {deepEqual( Stem("edle"), "edl");});
test("edlem -> edl", function() {deepEqual( Stem("edlem"), "edl");});
test("edlen -> edl", function() {deepEqual( Stem("edlen"), "edl");});
test("edler -> edl", function() {deepEqual( Stem("edler"), "edl");});
test("edlere -> edl", function() {deepEqual( Stem("edlere"), "edl");});
test("edleren -> edl", function() {deepEqual( Stem("edleren"), "edl");});
test("edleres -> edl", function() {deepEqual( Stem("edleres"), "edl");});
test("edles -> edl", function() {deepEqual( Stem("edles"), "edl");});
test("edom -> edom", function() {deepEqual( Stem("edom"), "edom");});
test("edoms -> edom", function() {deepEqual( Stem("edoms"), "edom");});
test("eeccs -> eeccs", function() {deepEqual( Stem("eeccs"), "eeccs");});
test("eerv -> eerv", function() {deepEqual( Stem("eerv"), "eerv");});
test("efeu -> efeu", function() {deepEqual( Stem("efeu"), "efeu");});
test("effekt -> effekt", function() {deepEqual( Stem("effekt"), "effekt");});
test("efficere -> effic", function() {deepEqual( Stem("efficere"), "effic");});
test("effigies -> effigi", function() {deepEqual( Stem("effigies"), "effigi");});
test("egal -> egal", function() {deepEqual( Stem("egal"), "egal");});
test("eglaim -> eglaim", function() {deepEqual( Stem("eglaim"), "eglaim");});
test("eh -> eh", function() {deepEqual( Stem("eh"), "eh");});
test("ehandelt -> ehandelt", function() {deepEqual( Stem("ehandelt"), "ehandelt");});
test("ehe -> ehe", function() {deepEqual( Stem("ehe"), "ehe");});
test("ehebrechen -> ehebrech", function() {deepEqual( Stem("ehebrechen"), "ehebrech");});
test("ehebrecher -> ehebrech", function() {deepEqual( Stem("ehebrecher"), "ehebrech");});
test("ehebrechers -> ehebrech", function() {deepEqual( Stem("ehebrechers"), "ehebrech");});
test("ehebruch -> ehebruch", function() {deepEqual( Stem("ehebruch"), "ehebruch");});
test("ehebrüche -> ehebruch", function() {deepEqual( Stem("ehebrüche"), "ehebruch");});
test("ehebruchs -> ehebruch", function() {deepEqual( Stem("ehebruchs"), "ehebruch");});
test("ehedem -> ehed", function() {deepEqual( Stem("ehedem"), "ehed");});
test("ehefrau -> ehefrau", function() {deepEqual( Stem("ehefrau"), "ehefrau");});
test("ehegemahls -> ehegemahl", function() {deepEqual( Stem("ehegemahls"), "ehegemahl");});
test("ehegesponsin -> ehegesponsin", function() {deepEqual( Stem("ehegesponsin"), "ehegesponsin");});
test("eheherren -> eheherr", function() {deepEqual( Stem("eheherren"), "eheherr");});
test("eheleuten -> eheleut", function() {deepEqual( Stem("eheleuten"), "eheleut");});
test("eheliche -> ehelich", function() {deepEqual( Stem("eheliche"), "ehelich");});
test("ehelichen -> ehelich", function() {deepEqual( Stem("ehelichen"), "ehelich");});
test("ehemalige -> ehemal", function() {deepEqual( Stem("ehemalige"), "ehemal");});
test("ehemaligen -> ehemal", function() {deepEqual( Stem("ehemaligen"), "ehemal");});
test("ehemaliger -> ehemal", function() {deepEqual( Stem("ehemaliger"), "ehemal");});
test("ehemaliges -> ehemal", function() {deepEqual( Stem("ehemaliges"), "ehemal");});
test("ehemals -> ehemal", function() {deepEqual( Stem("ehemals"), "ehemal");});
test("ehemann -> ehemann", function() {deepEqual( Stem("ehemann"), "ehemann");});
test("ehemannes -> ehemann", function() {deepEqual( Stem("ehemannes"), "ehemann");});
test("ehen -> ehen", function() {deepEqual( Stem("ehen"), "ehen");});
test("ehepaar -> ehepaar", function() {deepEqual( Stem("ehepaar"), "ehepaar");});
test("eher -> eher", function() {deepEqual( Stem("eher"), "eher");});
test("eherne -> ehern", function() {deepEqual( Stem("eherne"), "ehern");});
test("ehesten -> ehest", function() {deepEqual( Stem("ehesten"), "ehest");});
test("ehestens -> ehest", function() {deepEqual( Stem("ehestens"), "ehest");});
test("eheweiber -> eheweib", function() {deepEqual( Stem("eheweiber"), "eheweib");});
test("ehr -> ehr", function() {deepEqual( Stem("ehr"), "ehr");});
test("ehrbar -> ehrbar", function() {deepEqual( Stem("ehrbar"), "ehrbar");});
test("ehrbare -> ehrbar", function() {deepEqual( Stem("ehrbare"), "ehrbar");});
test("ehrbarem -> ehrbar", function() {deepEqual( Stem("ehrbarem"), "ehrbar");});
test("ehrbaren -> ehrbar", function() {deepEqual( Stem("ehrbaren"), "ehrbar");});
test("ehrbarer -> ehrbar", function() {deepEqual( Stem("ehrbarer"), "ehrbar");});
test("ehrbareres -> ehrbar", function() {deepEqual( Stem("ehrbareres"), "ehrbar");});
test("ehrbares -> ehrbar", function() {deepEqual( Stem("ehrbares"), "ehrbar");});
test("ehrbarkeit -> ehrbar", function() {deepEqual( Stem("ehrbarkeit"), "ehrbar");});
test("ehre -> ehr", function() {deepEqual( Stem("ehre"), "ehr");});
test("ehren -> ehr", function() {deepEqual( Stem("ehren"), "ehr");});
test("ehrenamtliche -> ehrenamt", function() {deepEqual( Stem("ehrenamtliche"), "ehrenamt");});
test("ehrenbürgerin -> ehrenburgerin", function() {deepEqual( Stem("ehrenbürgerin"), "ehrenburgerin");});
test("ehrenbürgerinfür -> ehrenburgerinfur", function() {deepEqual( Stem("ehrenbürgerinfür"), "ehrenburgerinfur");});
test("ehrenbürgerrecht -> ehrenburgerrecht", function() {deepEqual( Stem("ehrenbürgerrecht"), "ehrenburgerrecht");});
test("ehrend -> ehrend", function() {deepEqual( Stem("ehrend"), "ehrend");});
test("ehrenfest -> ehrenf", function() {deepEqual( Stem("ehrenfest"), "ehrenf");});
test("ehrenfesten -> ehrenf", function() {deepEqual( Stem("ehrenfesten"), "ehrenf");});
test("ehrennamen -> ehrennam", function() {deepEqual( Stem("ehrennamen"), "ehrennam");});
test("ehrenplatz -> ehrenplatz", function() {deepEqual( Stem("ehrenplatz"), "ehrenplatz");});
test("ehrenreich -> ehrenreich", function() {deepEqual( Stem("ehrenreich"), "ehrenreich");});
test("ehrenstellen -> ehrenstell", function() {deepEqual( Stem("ehrenstellen"), "ehrenstell");});
test("ehrenstellung -> ehrenstell", function() {deepEqual( Stem("ehrenstellung"), "ehrenstell");});
test("ehrentitel -> ehrentitel", function() {deepEqual( Stem("ehrentitel"), "ehrentitel");});
test("ehrenwerte -> ehrenwert", function() {deepEqual( Stem("ehrenwerte"), "ehrenwert");});
test("ehrerbietig -> ehrerbiet", function() {deepEqual( Stem("ehrerbietig"), "ehrerbiet");});
test("ehrerbietung -> ehrerbiet", function() {deepEqual( Stem("ehrerbietung"), "ehrerbiet");});
test("ehrest -> ehr", function() {deepEqual( Stem("ehrest"), "ehr");});
test("ehrfurcht -> ehrfurcht", function() {deepEqual( Stem("ehrfurcht"), "ehrfurcht");});
test("ehrfurchtsvolle -> ehrfurchtsvoll", function() {deepEqual( Stem("ehrfurchtsvolle"), "ehrfurchtsvoll");});
test("ehrgeizigen -> ehrgeiz", function() {deepEqual( Stem("ehrgeizigen"), "ehrgeiz");});
test("ehrgeiziger -> ehrgeiz", function() {deepEqual( Stem("ehrgeiziger"), "ehrgeiz");});
test("ehrlich -> ehrlich", function() {deepEqual( Stem("ehrlich"), "ehrlich");});
test("ehrliche -> ehrlich", function() {deepEqual( Stem("ehrliche"), "ehrlich");});
test("ehrlichen -> ehrlich", function() {deepEqual( Stem("ehrlichen"), "ehrlich");});
test("ehrlicher -> ehrlich", function() {deepEqual( Stem("ehrlicher"), "ehrlich");});
test("ehrlichkeit -> ehrlich", function() {deepEqual( Stem("ehrlichkeit"), "ehrlich");});
test("ehrsame -> ehrsam", function() {deepEqual( Stem("ehrsame"), "ehrsam");});
test("ehrsames -> ehrsam", function() {deepEqual( Stem("ehrsames"), "ehrsam");});
test("ehrt -> ehrt", function() {deepEqual( Stem("ehrt"), "ehrt");});
test("ehrte -> ehrt", function() {deepEqual( Stem("ehrte"), "ehrt");});
test("ehrvergessenen -> ehrvergess", function() {deepEqual( Stem("ehrvergessenen"), "ehrvergess");});
test("ehrwürdig -> ehrwurd", function() {deepEqual( Stem("ehrwürdig"), "ehrwurd");});
test("ehrwürdige -> ehrwurd", function() {deepEqual( Stem("ehrwürdige"), "ehrwurd");});
test("ehrwürdiger -> ehrwurd", function() {deepEqual( Stem("ehrwürdiger"), "ehrwurd");});
test("ei -> ei", function() {deepEqual( Stem("ei"), "ei");});
test("eia -> eia", function() {deepEqual( Stem("eia"), "eia");});
test("eibenbäumchen -> eibenbaumch", function() {deepEqual( Stem("eibenbäumchen"), "eibenbaumch");});
test("eiche -> eich", function() {deepEqual( Stem("eiche"), "eich");});
test("eichen -> eich", function() {deepEqual( Stem("eichen"), "eich");});
test("eichenast -> eichenast", function() {deepEqual( Stem("eichenast"), "eichenast");});
test("eichendorff -> eichendorff", function() {deepEqual( Stem("eichendorff"), "eichendorff");});
test("eichenen -> eich", function() {deepEqual( Stem("eichenen"), "eich");});
test("eichenstämme -> eichenstamm", function() {deepEqual( Stem("eichenstämme"), "eichenstamm");});
test("eichentisch -> eichent", function() {deepEqual( Stem("eichentisch"), "eichent");});
test("eichhörnchen -> eichhornch", function() {deepEqual( Stem("eichhörnchen"), "eichhornch");});
test("eichkatzl -> eichkatzl", function() {deepEqual( Stem("eichkatzl"), "eichkatzl");});
test("eichwald -> eichwald", function() {deepEqual( Stem("eichwald"), "eichwald");});
test("eiden -> eid", function() {deepEqual( Stem("eiden"), "eid");});
test("eidgenossenschaft -> eidgenossenschaft", function() {deepEqual( Stem("eidgenossenschaft"), "eidgenossenschaft");});
test("eidgenössische -> eidgenoss", function() {deepEqual( Stem("eidgenössische"), "eidgenoss");});
test("eidgenössischen -> eidgenoss", function() {deepEqual( Stem("eidgenössischen"), "eidgenoss");});
test("eier -> eier", function() {deepEqual( Stem("eier"), "eier");});
test("eierbecher -> eierbech", function() {deepEqual( Stem("eierbecher"), "eierbech");});
test("eierbrot -> eierbrot", function() {deepEqual( Stem("eierbrot"), "eierbrot");});
test("eierkuchen -> eierkuch", function() {deepEqual( Stem("eierkuchen"), "eierkuch");});
test("eierkuchens -> eierkuch", function() {deepEqual( Stem("eierkuchens"), "eierkuch");});
test("eierlast -> eierlast", function() {deepEqual( Stem("eierlast"), "eierlast");});
test("eiern -> eiern", function() {deepEqual( Stem("eiern"), "eiern");});
test("eiertanz -> eiertanz", function() {deepEqual( Stem("eiertanz"), "eiertanz");});
test("eifer -> eif", function() {deepEqual( Stem("eifer"), "eif");});
test("eifers -> eif", function() {deepEqual( Stem("eifers"), "eif");});
test("eifersucht -> eifersucht", function() {deepEqual( Stem("eifersucht"), "eifersucht");});
test("eifersüchtig -> eifersucht", function() {deepEqual( Stem("eifersüchtig"), "eifersucht");});
test("eiferten -> eifert", function() {deepEqual( Stem("eiferten"), "eifert");});
test("eiffelturm -> eiffelturm", function() {deepEqual( Stem("eiffelturm"), "eiffelturm");});
test("eifrig -> eifrig", function() {deepEqual( Stem("eifrig"), "eifrig");});
test("eifrige -> eifrig", function() {deepEqual( Stem("eifrige"), "eifrig");});
test("eifrigen -> eifrig", function() {deepEqual( Stem("eifrigen"), "eifrig");});
test("eifriger -> eifrig", function() {deepEqual( Stem("eifriger"), "eifrig");});
test("eifrigsten -> eifrig", function() {deepEqual( Stem("eifrigsten"), "eifrig");});
test("eigen -> eig", function() {deepEqual( Stem("eigen"), "eig");});
test("eigenanteile -> eigenanteil", function() {deepEqual( Stem("eigenanteile"), "eigenanteil");});
test("eigenartige -> eigenart", function() {deepEqual( Stem("eigenartige"), "eigenart");});
test("eigendünkel -> eigendunkel", function() {deepEqual( Stem("eigendünkel"), "eigendunkel");});
test("eigene -> eig", function() {deepEqual( Stem("eigene"), "eig");});
test("eigenem -> eig", function() {deepEqual( Stem("eigenem"), "eig");});
test("eigenen -> eig", function() {deepEqual( Stem("eigenen"), "eig");});
test("eigener -> eig", function() {deepEqual( Stem("eigener"), "eig");});
test("eigenes -> eig", function() {deepEqual( Stem("eigenes"), "eig");});
test("eigenhändig -> eigenhand", function() {deepEqual( Stem("eigenhändig"), "eigenhand");});
test("eigenheiten -> eig", function() {deepEqual( Stem("eigenheiten"), "eig");});
test("eigenliebe -> eigenlieb", function() {deepEqual( Stem("eigenliebe"), "eigenlieb");});
test("eigenliebige -> eigenlieb", function() {deepEqual( Stem("eigenliebige"), "eigenlieb");});
test("eigenname -> eigennam", function() {deepEqual( Stem("eigenname"), "eigennam");});
test("eigennutz -> eigennutz", function() {deepEqual( Stem("eigennutz"), "eigennutz");});
test("eigennützige -> eigennutz", function() {deepEqual( Stem("eigennützige"), "eigennutz");});
test("eigennützigen -> eigennutz", function() {deepEqual( Stem("eigennützigen"), "eigennutz");});
test("eigennütziger -> eigennutz", function() {deepEqual( Stem("eigennütziger"), "eigennutz");});
test("eigens -> eig", function() {deepEqual( Stem("eigens"), "eig");});
test("eigenschafren -> eigenschafr", function() {deepEqual( Stem("eigenschafren"), "eigenschafr");});
test("eigenschaft -> eigenschaft", function() {deepEqual( Stem("eigenschaft"), "eigenschaft");});
test("eigenschaften -> eigenschaft", function() {deepEqual( Stem("eigenschaften"), "eigenschaft");});
test("eigenschaftung -> eigenschaft", function() {deepEqual( Stem("eigenschaftung"), "eigenschaft");});
test("eigensinn -> eigensinn", function() {deepEqual( Stem("eigensinn"), "eigensinn");});
test("eigensinnig -> eigensinn", function() {deepEqual( Stem("eigensinnig"), "eigensinn");});
test("eigensinnigen -> eigensinn", function() {deepEqual( Stem("eigensinnigen"), "eigensinn");});
test("eigensinniger -> eigensinn", function() {deepEqual( Stem("eigensinniger"), "eigensinn");});
test("eigenst -> eigen", function() {deepEqual( Stem("eigenst"), "eigen");});
test("eigenste -> eigen", function() {deepEqual( Stem("eigenste"), "eigen");});
test("eigensten -> eigen", function() {deepEqual( Stem("eigensten"), "eigen");});
test("eigenstes -> eigen", function() {deepEqual( Stem("eigenstes"), "eigen");});
test("eigensüchtigen -> eigensucht", function() {deepEqual( Stem("eigensüchtigen"), "eigensucht");});
test("eigentlich -> eigent", function() {deepEqual( Stem("eigentlich"), "eigent");});
test("eigentliche -> eigent", function() {deepEqual( Stem("eigentliche"), "eigent");});
test("eigentlichen -> eigent", function() {deepEqual( Stem("eigentlichen"), "eigent");});
test("eigentliches -> eigent", function() {deepEqual( Stem("eigentliches"), "eigent");});
test("eigentlichst -> eigent", function() {deepEqual( Stem("eigentlichst"), "eigent");});
test("eigentlichste -> eigent", function() {deepEqual( Stem("eigentlichste"), "eigent");});
test("eigentum -> eigentum", function() {deepEqual( Stem("eigentum"), "eigentum");});
test("eigentümer -> eigentum", function() {deepEqual( Stem("eigentümer"), "eigentum");});
test("eigentümers -> eigentum", function() {deepEqual( Stem("eigentümers"), "eigentum");});
test("eigentümlich -> eigentum", function() {deepEqual( Stem("eigentümlich"), "eigentum");});
test("eigentümliche -> eigentum", function() {deepEqual( Stem("eigentümliche"), "eigentum");});
test("eigentümlichem -> eigentum", function() {deepEqual( Stem("eigentümlichem"), "eigentum");});
test("eigentümlichen -> eigentum", function() {deepEqual( Stem("eigentümlichen"), "eigentum");});
test("eigentümlicher -> eigentum", function() {deepEqual( Stem("eigentümlicher"), "eigentum");});
test("eigentümlicherweise -> eigentumlicherweis", function() {deepEqual( Stem("eigentümlicherweise"), "eigentumlicherweis");});
test("eigentümliches -> eigentum", function() {deepEqual( Stem("eigentümliches"), "eigentum");});
test("eigentümlichkeit -> eigentum", function() {deepEqual( Stem("eigentümlichkeit"), "eigentum");});
test("eigentümlichkeiten -> eigentum", function() {deepEqual( Stem("eigentümlichkeiten"), "eigentum");});
test("eigentums -> eigentum", function() {deepEqual( Stem("eigentums"), "eigentum");});
test("eigenwillen -> eigenwill", function() {deepEqual( Stem("eigenwillen"), "eigenwill");});
test("eigne -> eign", function() {deepEqual( Stem("eigne"), "eign");});
test("eignen -> eign", function() {deepEqual( Stem("eignen"), "eign");});
test("eignet -> eignet", function() {deepEqual( Stem("eignet"), "eignet");});
test("eignungsprüfung -> eignungspruf", function() {deepEqual( Stem("eignungsprüfung"), "eignungspruf");});
test("eil -> eil", function() {deepEqual( Stem("eil"), "eil");});
test("eilanden -> eiland", function() {deepEqual( Stem("eilanden"), "eiland");});
test("eile -> eil", function() {deepEqual( Stem("eile"), "eil");});
test("eilen -> eil", function() {deepEqual( Stem("eilen"), "eil");});
test("eilend -> eilend", function() {deepEqual( Stem("eilend"), "eilend");});
test("eilenden -> eilend", function() {deepEqual( Stem("eilenden"), "eilend");});
test("eilender -> eilend", function() {deepEqual( Stem("eilender"), "eilend");});
test("eilendes -> eilend", function() {deepEqual( Stem("eilendes"), "eilend");});
test("eilends -> eilend", function() {deepEqual( Stem("eilends"), "eilend");});
test("eilet -> eilet", function() {deepEqual( Stem("eilet"), "eilet");});
test("eilfertig -> eilfert", function() {deepEqual( Stem("eilfertig"), "eilfert");});
test("eilig -> eilig", function() {deepEqual( Stem("eilig"), "eilig");});
test("eiligen -> eilig", function() {deepEqual( Stem("eiligen"), "eilig");});
test("eiligst -> eilig", function() {deepEqual( Stem("eiligst"), "eilig");});
test("eilt -> eilt", function() {deepEqual( Stem("eilt"), "eilt");});
test("eilte -> eilt", function() {deepEqual( Stem("eilte"), "eilt");});
test("eilten -> eilt", function() {deepEqual( Stem("eilten"), "eilt");});
test("eim -> eim", function() {deepEqual( Stem("eim"), "eim");});
test("eimer -> eim", function() {deepEqual( Stem("eimer"), "eim");});
test("eimern -> eim", function() {deepEqual( Stem("eimern"), "eim");});
test("eimers -> eim", function() {deepEqual( Stem("eimers"), "eim");});
test("ein -> ein", function() {deepEqual( Stem("ein"), "ein");});
test("einander -> einand", function() {deepEqual( Stem("einander"), "einand");});
test("einband -> einband", function() {deepEqual( Stem("einband"), "einband");});
test("einbanddeckel -> einbanddeckel", function() {deepEqual( Stem("einbanddeckel"), "einbanddeckel");});
test("einberufung -> einberuf", function() {deepEqual( Stem("einberufung"), "einberuf");});
test("einbilde -> einbild", function() {deepEqual( Stem("einbilde"), "einbild");});
test("einbilden -> einbild", function() {deepEqual( Stem("einbilden"), "einbild");});
test("einbildete -> einbildet", function() {deepEqual( Stem("einbildete"), "einbildet");});
test("einbildeten -> einbildet", function() {deepEqual( Stem("einbildeten"), "einbildet");});
test("einbildung -> einbild", function() {deepEqual( Stem("einbildung"), "einbild");});
test("einbildungen -> einbild", function() {deepEqual( Stem("einbildungen"), "einbild");});
test("einbildungskraft -> einbildungskraft", function() {deepEqual( Stem("einbildungskraft"), "einbildungskraft");});
test("einblick -> einblick", function() {deepEqual( Stem("einblick"), "einblick");});
test("einbrächten -> einbracht", function() {deepEqual( Stem("einbrächten"), "einbracht");});
test("einbrechende -> einbrech", function() {deepEqual( Stem("einbrechende"), "einbrech");});
test("einbringen -> einbring", function() {deepEqual( Stem("einbringen"), "einbring");});
test("einbringt -> einbringt", function() {deepEqual( Stem("einbringt"), "einbringt");});
test("einbringung -> einbring", function() {deepEqual( Stem("einbringung"), "einbring");});
test("einbruch -> einbruch", function() {deepEqual( Stem("einbruch"), "einbruch");});
test("einbürgern -> einburg", function() {deepEqual( Stem("einbürgern"), "einburg");});
test("einbusse -> einbuss", function() {deepEqual( Stem("einbusse"), "einbuss");});
test("einbuße -> einbuss", function() {deepEqual( Stem("einbuße"), "einbuss");});
test("einbüssung -> einbuss", function() {deepEqual( Stem("einbüssung"), "einbuss");});
test("einchecken -> eincheck", function() {deepEqual( Stem("einchecken"), "eincheck");});
test("eincheckens -> eincheck", function() {deepEqual( Stem("eincheckens"), "eincheck");});
test("eindeutig -> eindeut", function() {deepEqual( Stem("eindeutig"), "eindeut");});
test("eindrang -> eindrang", function() {deepEqual( Stem("eindrang"), "eindrang");});
test("eindringe -> eindring", function() {deepEqual( Stem("eindringe"), "eindring");});
test("eindringen -> eindring", function() {deepEqual( Stem("eindringen"), "eindring");});
test("eindringendsten -> eindring", function() {deepEqual( Stem("eindringendsten"), "eindring");});
test("eindringlich -> eindring", function() {deepEqual( Stem("eindringlich"), "eindring");});
test("eindringlichen -> eindring", function() {deepEqual( Stem("eindringlichen"), "eindring");});
test("eindringlichkeit -> eindring", function() {deepEqual( Stem("eindringlichkeit"), "eindring");});
test("eindringlinge -> eindringling", function() {deepEqual( Stem("eindringlinge"), "eindringling");});
test("eindringt -> eindringt", function() {deepEqual( Stem("eindringt"), "eindringt");});
test("eindruck -> eindruck", function() {deepEqual( Stem("eindruck"), "eindruck");});
test("eindrücken -> eindruck", function() {deepEqual( Stem("eindrücken"), "eindruck");});
test("eine -> ein", function() {deepEqual( Stem("eine"), "ein");});
test("eineinviertel -> eineinviertel", function() {deepEqual( Stem("eineinviertel"), "eineinviertel");});
test("einem -> ein", function() {deepEqual( Stem("einem"), "ein");});
test("einen -> ein", function() {deepEqual( Stem("einen"), "ein");});
test("einer -> ein", function() {deepEqual( Stem("einer"), "ein");});
test("einerlei -> einerlei", function() {deepEqual( Stem("einerlei"), "einerlei");});
test("einerleiheit -> einerlei", function() {deepEqual( Stem("einerleiheit"), "einerlei");});
test("einernten -> einernt", function() {deepEqual( Stem("einernten"), "einernt");});
test("einerseits -> einerseit", function() {deepEqual( Stem("einerseits"), "einerseit");});
test("eines -> ein", function() {deepEqual( Stem("eines"), "ein");});
test("einesteils -> einesteil", function() {deepEqual( Stem("einesteils"), "einesteil");});
test("einfach -> einfach", function() {deepEqual( Stem("einfach"), "einfach");});
test("einfachbauweise -> einfachbauweis", function() {deepEqual( Stem("einfachbauweise"), "einfachbauweis");});
test("einfache -> einfach", function() {deepEqual( Stem("einfache"), "einfach");});
test("einfachen -> einfach", function() {deepEqual( Stem("einfachen"), "einfach");});
test("einfacher -> einfach", function() {deepEqual( Stem("einfacher"), "einfach");});
test("einfaches -> einfach", function() {deepEqual( Stem("einfaches"), "einfach");});
test("einfachheit -> einfach", function() {deepEqual( Stem("einfachheit"), "einfach");});
test("einfachste -> einfach", function() {deepEqual( Stem("einfachste"), "einfach");});
test("einfachsten -> einfach", function() {deepEqual( Stem("einfachsten"), "einfach");});
test("einfahrt -> einfahrt", function() {deepEqual( Stem("einfahrt"), "einfahrt");});
test("einfall -> einfall", function() {deepEqual( Stem("einfall"), "einfall");});
test("einfälle -> einfall", function() {deepEqual( Stem("einfälle"), "einfall");});
test("einfallen -> einfall", function() {deepEqual( Stem("einfallen"), "einfall");});
test("einfällt -> einfallt", function() {deepEqual( Stem("einfällt"), "einfallt");});
test("einfalt -> einfalt", function() {deepEqual( Stem("einfalt"), "einfalt");});
test("einfältig -> einfalt", function() {deepEqual( Stem("einfältig"), "einfalt");});
test("einfältige -> einfalt", function() {deepEqual( Stem("einfältige"), "einfalt");});
test("einfältigem -> einfalt", function() {deepEqual( Stem("einfältigem"), "einfalt");});
test("einfältigen -> einfalt", function() {deepEqual( Stem("einfältigen"), "einfalt");});
test("einfältiger -> einfalt", function() {deepEqual( Stem("einfältiger"), "einfalt");});
test("einfältiges -> einfalt", function() {deepEqual( Stem("einfältiges"), "einfalt");});
test("einfand -> einfand", function() {deepEqual( Stem("einfand"), "einfand");});
test("einfanden -> einfand", function() {deepEqual( Stem("einfanden"), "einfand");});
test("einfange -> einfang", function() {deepEqual( Stem("einfange"), "einfang");});
test("einfangen -> einfang", function() {deepEqual( Stem("einfangen"), "einfang");});
test("einfasste -> einfasst", function() {deepEqual( Stem("einfasste"), "einfasst");});
test("einfenstrige -> einfenstr", function() {deepEqual( Stem("einfenstrige"), "einfenstr");});
test("einfenstriges -> einfenstr", function() {deepEqual( Stem("einfenstriges"), "einfenstr");});
test("einfiel -> einfiel", function() {deepEqual( Stem("einfiel"), "einfiel");});
test("einfinden -> einfind", function() {deepEqual( Stem("einfinden"), "einfind");});
test("einfindet -> einfindet", function() {deepEqual( Stem("einfindet"), "einfindet");});
test("einfliesse -> einfliess", function() {deepEqual( Stem("einfliesse"), "einfliess");});
test("einfließe -> einfliess", function() {deepEqual( Stem("einfließe"), "einfliess");});
test("einfliessen -> einfliess", function() {deepEqual( Stem("einfliessen"), "einfliess");});
test("einfließen -> einfliess", function() {deepEqual( Stem("einfließen"), "einfliess");});
test("einfliessende -> einfliess", function() {deepEqual( Stem("einfliessende"), "einfliess");});
test("einfließende -> einfliess", function() {deepEqual( Stem("einfließende"), "einfliess");});
test("einfliessenden -> einfliess", function() {deepEqual( Stem("einfliessenden"), "einfliess");});
test("einfließenden -> einfliess", function() {deepEqual( Stem("einfließenden"), "einfliess");});
test("einfliessendes -> einfliess", function() {deepEqual( Stem("einfliessendes"), "einfliess");});
test("einfließendes -> einfliess", function() {deepEqual( Stem("einfließendes"), "einfliess");});
test("einfliesst -> einfliesst", function() {deepEqual( Stem("einfliesst"), "einfliesst");});
test("einfließt -> einfliesst", function() {deepEqual( Stem("einfließt"), "einfliesst");});
test("einfloss -> einfloss", function() {deepEqual( Stem("einfloss"), "einfloss");});
test("einfloß -> einfloss", function() {deepEqual( Stem("einfloß"), "einfloss");});
test("einflösse -> einfloss", function() {deepEqual( Stem("einflösse"), "einfloss");});
test("einflöße -> einfloss", function() {deepEqual( Stem("einflöße"), "einfloss");});
test("einflössen -> einfloss", function() {deepEqual( Stem("einflössen"), "einfloss");});
test("einflößen -> einfloss", function() {deepEqual( Stem("einflößen"), "einfloss");});
test("einflösst -> einflosst", function() {deepEqual( Stem("einflösst"), "einflosst");});
test("einflößt -> einflosst", function() {deepEqual( Stem("einflößt"), "einflosst");});
test("einflössten -> einflosst", function() {deepEqual( Stem("einflössten"), "einflosst");});
test("einflößten -> einflosst", function() {deepEqual( Stem("einflößten"), "einflosst");});
test("einflössung -> einfloss", function() {deepEqual( Stem("einflössung"), "einfloss");});
test("einflößung -> einfloss", function() {deepEqual( Stem("einflößung"), "einfloss");});
test("einfluss -> einfluss", function() {deepEqual( Stem("einfluss"), "einfluss");});
test("einfluß -> einfluss", function() {deepEqual( Stem("einfluß"), "einfluss");});
test("einflusse -> einfluss", function() {deepEqual( Stem("einflusse"), "einfluss");});
test("einflüsse -> einfluss", function() {deepEqual( Stem("einflüsse"), "einfluss");});
test("einflusses -> einfluss", function() {deepEqual( Stem("einflusses"), "einfluss");});
test("einflussreiche -> einflussreich", function() {deepEqual( Stem("einflussreiche"), "einflussreich");});
test("einflußreiche -> einflussreich", function() {deepEqual( Stem("einflußreiche"), "einflussreich");});
test("einflussreichen -> einflussreich", function() {deepEqual( Stem("einflussreichen"), "einflussreich");});
test("einflußreichen -> einflussreich", function() {deepEqual( Stem("einflußreichen"), "einflussreich");});
test("einflüstern -> einflust", function() {deepEqual( Stem("einflüstern"), "einflust");});
test("einförmig -> einform", function() {deepEqual( Stem("einförmig"), "einform");});
test("einförmige -> einform", function() {deepEqual( Stem("einförmige"), "einform");});
test("einfühlungsvermögen -> einfuhlungsvermog", function() {deepEqual( Stem("einfühlungsvermögen"), "einfuhlungsvermog");});
test("einfuhr -> einfuhr", function() {deepEqual( Stem("einfuhr"), "einfuhr");});
test("einführen -> einfuhr", function() {deepEqual( Stem("einführen"), "einfuhr");});
test("einführung -> einfuhr", function() {deepEqual( Stem("einführung"), "einfuhr");});
test("eingab -> eingab", function() {deepEqual( Stem("eingab"), "eingab");});
test("eingabe -> eingab", function() {deepEqual( Stem("eingabe"), "eingab");});
test("eingaben -> eingab", function() {deepEqual( Stem("eingaben"), "eingab");});
test("eingang -> eingang", function() {deepEqual( Stem("eingang"), "eingang");});
test("eingange -> eingang", function() {deepEqual( Stem("eingange"), "eingang");});
test("eingänge -> eingang", function() {deepEqual( Stem("eingänge"), "eingang");});
test("eingangen -> eingang", function() {deepEqual( Stem("eingangen"), "eingang");});
test("eingängen -> eingang", function() {deepEqual( Stem("eingängen"), "eingang");});
test("eingangstor -> eingangstor", function() {deepEqual( Stem("eingangstor"), "eingangstor");});
test("eingangstür -> eingangstur", function() {deepEqual( Stem("eingangstür"), "eingangstur");});
test("eingeäscherten -> eingeaschert", function() {deepEqual( Stem("eingeäscherten"), "eingeaschert");});
test("eingebildet -> eingebildet", function() {deepEqual( Stem("eingebildet"), "eingebildet");});
test("eingebildete -> eingebildet", function() {deepEqual( Stem("eingebildete"), "eingebildet");});
test("eingebildeten -> eingebildet", function() {deepEqual( Stem("eingebildeten"), "eingebildet");});
test("eingebildetes -> eingebildet", function() {deepEqual( Stem("eingebildetes"), "eingebildet");});
test("eingeblasen -> eingeblas", function() {deepEqual( Stem("eingeblasen"), "eingeblas");});
test("eingebogen -> eingebog", function() {deepEqual( Stem("eingebogen"), "eingebog");});
test("eingeborene -> eingebor", function() {deepEqual( Stem("eingeborene"), "eingebor");});
test("eingeborenen -> eingebor", function() {deepEqual( Stem("eingeborenen"), "eingebor");});
test("eingebracht -> eingebracht", function() {deepEqual( Stem("eingebracht"), "eingebracht");});
test("eingebunden -> eingebund", function() {deepEqual( Stem("eingebunden"), "eingebund");});
test("eingebung -> eingeb", function() {deepEqual( Stem("eingebung"), "eingeb");});
test("eingebüsst -> eingebusst", function() {deepEqual( Stem("eingebüsst"), "eingebusst");});
test("eingedämmt -> eingedammt", function() {deepEqual( Stem("eingedämmt"), "eingedammt");});
test("eingedenk -> eingedenk", function() {deepEqual( Stem("eingedenk"), "eingedenk");});
test("eingedrückten -> eingedruckt", function() {deepEqual( Stem("eingedrückten"), "eingedruckt");});
test("eingefahren -> eingefahr", function() {deepEqual( Stem("eingefahren"), "eingefahr");});
test("eingefallen -> eingefall", function() {deepEqual( Stem("eingefallen"), "eingefall");});
test("eingefasst -> eingefasst", function() {deepEqual( Stem("eingefasst"), "eingefasst");});
test("eingefaßt -> eingefasst", function() {deepEqual( Stem("eingefaßt"), "eingefasst");});
test("eingefleischten -> eingefleischt", function() {deepEqual( Stem("eingefleischten"), "eingefleischt");});
test("eingeflochten -> eingeflocht", function() {deepEqual( Stem("eingeflochten"), "eingeflocht");});
test("eingeflösst -> eingeflosst", function() {deepEqual( Stem("eingeflösst"), "eingeflosst");});
test("eingeflößt -> eingeflosst", function() {deepEqual( Stem("eingeflößt"), "eingeflosst");});
test("eingeflösste -> eingeflosst", function() {deepEqual( Stem("eingeflösste"), "eingeflosst");});
test("eingeflößte -> eingeflosst", function() {deepEqual( Stem("eingeflößte"), "eingeflosst");});
test("eingeflösstes -> eingeflosst", function() {deepEqual( Stem("eingeflösstes"), "eingeflosst");});
test("eingeflößtes -> eingeflosst", function() {deepEqual( Stem("eingeflößtes"), "eingeflosst");});
test("eingefügt -> eingefugt", function() {deepEqual( Stem("eingefügt"), "eingefugt");});
test("eingeführt -> eingefuhrt", function() {deepEqual( Stem("eingeführt"), "eingefuhrt");});
test("eingefunden -> eingefund", function() {deepEqual( Stem("eingefunden"), "eingefund");});
test("eingegangen -> eingegang", function() {deepEqual( Stem("eingegangen"), "eingegang");});
test("eingegangenen -> eingegang", function() {deepEqual( Stem("eingegangenen"), "eingegang");});
test("eingegeben -> eingegeb", function() {deepEqual( Stem("eingegeben"), "eingegeb");});
test("eingegebnen -> eingegebn", function() {deepEqual( Stem("eingegebnen"), "eingegebn");});
test("eingegitterten -> eingegittert", function() {deepEqual( Stem("eingegitterten"), "eingegittert");});
test("eingegraben -> eingegrab", function() {deepEqual( Stem("eingegraben"), "eingegrab");});
test("eingehandelt -> eingehandelt", function() {deepEqual( Stem("eingehandelt"), "eingehandelt");});
test("eingehängt -> eingehangt", function() {deepEqual( Stem("eingehängt"), "eingehangt");});
test("eingehaucht -> eingehaucht", function() {deepEqual( Stem("eingehaucht"), "eingehaucht");});
test("eingehen -> eingeh", function() {deepEqual( Stem("eingehen"), "eingeh");});
test("eingehenden -> eingeh", function() {deepEqual( Stem("eingehenden"), "eingeh");});
test("eingehet -> eingehet", function() {deepEqual( Stem("eingehet"), "eingehet");});
test("eingeholt -> eingeholt", function() {deepEqual( Stem("eingeholt"), "eingeholt");});
test("eingeht -> eingeht", function() {deepEqual( Stem("eingeht"), "eingeht");});
test("eingehüllt -> eingehullt", function() {deepEqual( Stem("eingehüllt"), "eingehullt");});
test("eingekauft -> eingekauft", function() {deepEqual( Stem("eingekauft"), "eingekauft");});
test("eingeklebt -> eingeklebt", function() {deepEqual( Stem("eingeklebt"), "eingeklebt");});
test("eingekleidet -> eingekleidet", function() {deepEqual( Stem("eingekleidet"), "eingekleidet");});
test("eingeklemmt -> eingeklemmt", function() {deepEqual( Stem("eingeklemmt"), "eingeklemmt");});
test("eingekniffenem -> eingekniff", function() {deepEqual( Stem("eingekniffenem"), "eingekniff");});
test("eingeladen -> eingelad", function() {deepEqual( Stem("eingeladen"), "eingelad");});
test("eingelassen -> eingelass", function() {deepEqual( Stem("eingelassen"), "eingelass");});
test("eingelassenen -> eingelass", function() {deepEqual( Stem("eingelassenen"), "eingelass");});
test("eingelassenwerden -> eingelassenwerd", function() {deepEqual( Stem("eingelassenwerden"), "eingelassenwerd");});
test("eingelegt -> eingelegt", function() {deepEqual( Stem("eingelegt"), "eingelegt");});
test("eingelegte -> eingelegt", function() {deepEqual( Stem("eingelegte"), "eingelegt");});
test("eingeleitet -> eingeleitet", function() {deepEqual( Stem("eingeleitet"), "eingeleitet");});
test("eingeleitete -> eingeleitet", function() {deepEqual( Stem("eingeleitete"), "eingeleitet");});
test("eingemachte -> eingemacht", function() {deepEqual( Stem("eingemachte"), "eingemacht");});
test("eingemengt -> eingemengt", function() {deepEqual( Stem("eingemengt"), "eingemengt");});
test("eingemischt -> eingemischt", function() {deepEqual( Stem("eingemischt"), "eingemischt");});
test("eingenommen -> eingenomm", function() {deepEqual( Stem("eingenommen"), "eingenomm");});
test("eingenommenen -> eingenomm", function() {deepEqual( Stem("eingenommenen"), "eingenomm");});
test("eingepackt -> eingepackt", function() {deepEqual( Stem("eingepackt"), "eingepackt");});
test("eingepackten -> eingepackt", function() {deepEqual( Stem("eingepackten"), "eingepackt");});
test("eingepferchte -> eingepfercht", function() {deepEqual( Stem("eingepferchte"), "eingepfercht");});
test("eingepflanzt -> eingepflanzt", function() {deepEqual( Stem("eingepflanzt"), "eingepflanzt");});
test("eingepflanzte -> eingepflanzt", function() {deepEqual( Stem("eingepflanzte"), "eingepflanzt");});
test("eingepflanzten -> eingepflanzt", function() {deepEqual( Stem("eingepflanzten"), "eingepflanzt");});
test("eingepflanztes -> eingepflanzt", function() {deepEqual( Stem("eingepflanztes"), "eingepflanzt");});
test("eingepfropfte -> eingepfropft", function() {deepEqual( Stem("eingepfropfte"), "eingepfropft");});
test("eingeprägt -> eingepragt", function() {deepEqual( Stem("eingeprägt"), "eingepragt");});
test("eingeräumt -> eingeraumt", function() {deepEqual( Stem("eingeräumt"), "eingeraumt");});
test("eingeräumte -> eingeraumt", function() {deepEqual( Stem("eingeräumte"), "eingeraumt");});
test("eingeredet -> eingeredet", function() {deepEqual( Stem("eingeredet"), "eingeredet");});
test("eingeredeten -> eingeredet", function() {deepEqual( Stem("eingeredeten"), "eingeredet");});
test("eingereiht -> eingereiht", function() {deepEqual( Stem("eingereiht"), "eingereiht");});
test("eingerichtet -> eingerichtet", function() {deepEqual( Stem("eingerichtet"), "eingerichtet");});
test("eingerichteten -> eingerichtet", function() {deepEqual( Stem("eingerichteten"), "eingerichtet");});
test("eingerichtetes -> eingerichtet", function() {deepEqual( Stem("eingerichtetes"), "eingerichtet");});
test("eingerissenes -> eingeriss", function() {deepEqual( Stem("eingerissenes"), "eingeriss");});
test("eingesät -> eingesat", function() {deepEqual( Stem("eingesät"), "eingesat");});
test("eingeschenkten -> eingeschenkt", function() {deepEqual( Stem("eingeschenkten"), "eingeschenkt");});
test("eingeschlafen -> eingeschlaf", function() {deepEqual( Stem("eingeschlafen"), "eingeschlaf");});
test("eingeschlagen -> eingeschlag", function() {deepEqual( Stem("eingeschlagen"), "eingeschlag");});
test("eingeschlagenen -> eingeschlag", function() {deepEqual( Stem("eingeschlagenen"), "eingeschlag");});
test("eingeschlossen -> eingeschloss", function() {deepEqual( Stem("eingeschlossen"), "eingeschloss");});
test("eingeschlossene -> eingeschloss", function() {deepEqual( Stem("eingeschlossene"), "eingeschloss");});
test("eingeschlossenen -> eingeschloss", function() {deepEqual( Stem("eingeschlossenen"), "eingeschloss");});
test("eingeschmiert -> eingeschmiert", function() {deepEqual( Stem("eingeschmiert"), "eingeschmiert");});
test("eingeschossen -> eingeschoss", function() {deepEqual( Stem("eingeschossen"), "eingeschoss");});
test("eingeschränkt -> eingeschrankt", function() {deepEqual( Stem("eingeschränkt"), "eingeschrankt");});
test("eingeschränkten -> eingeschrankt", function() {deepEqual( Stem("eingeschränkten"), "eingeschrankt");});
test("eingeschrieben -> eingeschrieb", function() {deepEqual( Stem("eingeschrieben"), "eingeschrieb");});
test("eingeschriebene -> eingeschrieb", function() {deepEqual( Stem("eingeschriebene"), "eingeschrieb");});
test("eingeschüchterten -> eingeschuchtert", function() {deepEqual( Stem("eingeschüchterten"), "eingeschuchtert");});
test("eingeschult -> eingeschult", function() {deepEqual( Stem("eingeschult"), "eingeschult");});
test("eingesehen -> eingeseh", function() {deepEqual( Stem("eingesehen"), "eingeseh");});
test("eingesetzt -> eingesetzt", function() {deepEqual( Stem("eingesetzt"), "eingesetzt");});
test("eingesperrt -> eingesperrt", function() {deepEqual( Stem("eingesperrt"), "eingesperrt");});
test("eingeständlich -> eingestand", function() {deepEqual( Stem("eingeständlich"), "eingestand");});
test("eingestehe -> eingesteh", function() {deepEqual( Stem("eingestehe"), "eingesteh");});
test("eingestehen -> eingesteh", function() {deepEqual( Stem("eingestehen"), "eingesteh");});
test("eingestellt -> eingestellt", function() {deepEqual( Stem("eingestellt"), "eingestellt");});
test("eingestreut -> eingestreut", function() {deepEqual( Stem("eingestreut"), "eingestreut");});
test("eingetan -> eingetan", function() {deepEqual( Stem("eingetan"), "eingetan");});
test("eingeteilt -> eingeteilt", function() {deepEqual( Stem("eingeteilt"), "eingeteilt");});
test("eingetragen -> eingetrag", function() {deepEqual( Stem("eingetragen"), "eingetrag");});
test("eingetreten -> eingetret", function() {deepEqual( Stem("eingetreten"), "eingetret");});
test("eingetrieben -> eingetrieb", function() {deepEqual( Stem("eingetrieben"), "eingetrieb");});
test("eingetrockneten -> eingetrocknet", function() {deepEqual( Stem("eingetrockneten"), "eingetrocknet");});
test("eingetroffen -> eingetroff", function() {deepEqual( Stem("eingetroffen"), "eingetroff");});
test("eingetürmt -> eingeturmt", function() {deepEqual( Stem("eingetürmt"), "eingeturmt");});
test("eingeübt -> eingeubt", function() {deepEqual( Stem("eingeübt"), "eingeubt");});
test("eingeübten -> eingeubt", function() {deepEqual( Stem("eingeübten"), "eingeubt");});
test("eingeweide -> eingeweid", function() {deepEqual( Stem("eingeweide"), "eingeweid");});
test("eingeweiden -> eingeweid", function() {deepEqual( Stem("eingeweiden"), "eingeweid");});
test("eingeweiht -> eingeweiht", function() {deepEqual( Stem("eingeweiht"), "eingeweiht");});
test("eingeweihten -> eingeweiht", function() {deepEqual( Stem("eingeweihten"), "eingeweiht");});
test("eingewickelte -> eingewickelt", function() {deepEqual( Stem("eingewickelte"), "eingewickelt");});
test("eingewirkt -> eingewirkt", function() {deepEqual( Stem("eingewirkt"), "eingewirkt");});
test("eingewobene -> eingewob", function() {deepEqual( Stem("eingewobene"), "eingewob");});
test("eingeworfene -> eingeworf", function() {deepEqual( Stem("eingeworfene"), "eingeworf");});
test("eingewurzelt -> eingewurzelt", function() {deepEqual( Stem("eingewurzelt"), "eingewurzelt");});
test("eingewurzelte -> eingewurzelt", function() {deepEqual( Stem("eingewurzelte"), "eingewurzelt");});
test("eingezogen -> eingezog", function() {deepEqual( Stem("eingezogen"), "eingezog");});
test("eingezogenheit -> eingezog", function() {deepEqual( Stem("eingezogenheit"), "eingezog");});
test("eingezwängt -> eingezwangt", function() {deepEqual( Stem("eingezwängt"), "eingezwangt");});
test("eingiessen -> eingiess", function() {deepEqual( Stem("eingiessen"), "eingiess");});
test("eingießen -> eingiess", function() {deepEqual( Stem("eingießen"), "eingiess");});
test("eingingen -> einging", function() {deepEqual( Stem("eingingen"), "einging");});
test("eingoss -> eingoss", function() {deepEqual( Stem("eingoss"), "eingoss");});
test("eingoß -> eingoss", function() {deepEqual( Stem("eingoß"), "eingoss");});
test("eingossen -> eingoss", function() {deepEqual( Stem("eingossen"), "eingoss");});
test("eingraben -> eingrab", function() {deepEqual( Stem("eingraben"), "eingrab");});
test("eingreifen -> eingreif", function() {deepEqual( Stem("eingreifen"), "eingreif");});
test("eingreifens -> eingreif", function() {deepEqual( Stem("eingreifens"), "eingreif");});
test("eingriff -> eingriff", function() {deepEqual( Stem("eingriff"), "eingriff");});
test("eingschlafen -> eingschlaf", function() {deepEqual( Stem("eingschlafen"), "eingschlaf");});
test("eingsperrt -> eingsperrt", function() {deepEqual( Stem("eingsperrt"), "eingsperrt");});
test("eingstanden -> eingstand", function() {deepEqual( Stem("eingstanden"), "eingstand");});
test("einhängen -> einhang", function() {deepEqual( Stem("einhängen"), "einhang");});
test("einhauchen -> einhauch", function() {deepEqual( Stem("einhauchen"), "einhauch");});
test("einheimische -> einheim", function() {deepEqual( Stem("einheimische"), "einheim");});
test("einheimsen -> einheims", function() {deepEqual( Stem("einheimsen"), "einheims");});
test("einheit -> einheit", function() {deepEqual( Stem("einheit"), "einheit");});
test("einheiten -> einheit", function() {deepEqual( Stem("einheiten"), "einheit");});
test("einheitenkillenden -> einheitenkill", function() {deepEqual( Stem("einheitenkillenden"), "einheitenkill");});
test("einhellig -> einhell", function() {deepEqual( Stem("einhellig"), "einhell");});
test("einher -> einh", function() {deepEqual( Stem("einher"), "einh");});
test("einherfährt -> einherfahrt", function() {deepEqual( Stem("einherfährt"), "einherfahrt");});
test("einhergejagt -> einhergejagt", function() {deepEqual( Stem("einhergejagt"), "einhergejagt");});
test("einherging -> einherging", function() {deepEqual( Stem("einherging"), "einherging");});
test("einherkrabbelte -> einherkrabbelt", function() {deepEqual( Stem("einherkrabbelte"), "einherkrabbelt");});
test("einherliefen -> einherlief", function() {deepEqual( Stem("einherliefen"), "einherlief");});
test("einherschritt -> einherschritt", function() {deepEqual( Stem("einherschritt"), "einherschritt");});
test("einherspringen -> einherspring", function() {deepEqual( Stem("einherspringen"), "einherspring");});
test("einhertanzten -> einhertanzt", function() {deepEqual( Stem("einhertanzten"), "einhertanzt");});
test("einholen -> einhol", function() {deepEqual( Stem("einholen"), "einhol");});
test("einhorn -> einhorn", function() {deepEqual( Stem("einhorn"), "einhorn");});
test("einhundertvierunddreißigmal -> einhundertvierunddreissigmal", function() {deepEqual( Stem("einhundertvierunddreißigmal"), "einhundertvierunddreissigmal");});
test("einhundertzwanzig -> einhundertzwanz", function() {deepEqual( Stem("einhundertzwanzig"), "einhundertzwanz");});
test("eini -> eini", function() {deepEqual( Stem("eini"), "eini");});
test("einifoahrn -> einifoahrn", function() {deepEqual( Stem("einifoahrn"), "einifoahrn");});
test("einig -> einig", function() {deepEqual( Stem("einig"), "einig");});
test("einige -> einig", function() {deepEqual( Stem("einige"), "einig");});
test("einigem -> einig", function() {deepEqual( Stem("einigem"), "einig");});
test("einigemal -> einigemal", function() {deepEqual( Stem("einigemal"), "einigemal");});
test("einigen -> einig", function() {deepEqual( Stem("einigen"), "einig");});
test("einiger -> einig", function() {deepEqual( Stem("einiger"), "einig");});
test("einigermassen -> einigermass", function() {deepEqual( Stem("einigermassen"), "einigermass");});
test("einigermaßen -> einigermass", function() {deepEqual( Stem("einigermaßen"), "einigermass");});
test("einiges -> einig", function() {deepEqual( Stem("einiges"), "einig");});
test("einigkeit -> einig", function() {deepEqual( Stem("einigkeit"), "einig");});
test("einigsprungen -> einigspr", function() {deepEqual( Stem("einigsprungen"), "einigspr");});
test("einigten -> einigt", function() {deepEqual( Stem("einigten"), "einigt");});
test("einikommt -> einikommt", function() {deepEqual( Stem("einikommt"), "einikommt");});
test("einischütten -> einischutt", function() {deepEqual( Stem("einischütten"), "einischutt");});
test("einispringen -> einispring", function() {deepEqual( Stem("einispringen"), "einispring");});
test("einjagt -> einjagt", function() {deepEqual( Stem("einjagt"), "einjagt");});
test("einjährige -> einjahr", function() {deepEqual( Stem("einjährige"), "einjahr");});
test("einkassierte -> einkassiert", function() {deepEqual( Stem("einkassierte"), "einkassiert");});
test("einkauf -> einkauf", function() {deepEqual( Stem("einkauf"), "einkauf");});
test("einkäufe -> einkauf", function() {deepEqual( Stem("einkäufe"), "einkauf");});
test("einkaufen -> einkauf", function() {deepEqual( Stem("einkaufen"), "einkauf");});
test("einkaufszentrum -> einkaufszentrum", function() {deepEqual( Stem("einkaufszentrum"), "einkaufszentrum");});
test("einkaufszentrumdie -> einkaufszentrumdi", function() {deepEqual( Stem("einkaufszentrumdie"), "einkaufszentrumdi");});
test("einkehr -> einkehr", function() {deepEqual( Stem("einkehr"), "einkehr");});
test("einkehren -> einkehr", function() {deepEqual( Stem("einkehren"), "einkehr");});
test("einkleben -> einkleb", function() {deepEqual( Stem("einkleben"), "einkleb");});
test("einkommen -> einkomm", function() {deepEqual( Stem("einkommen"), "einkomm");});
test("einkommens -> einkomm", function() {deepEqual( Stem("einkommens"), "einkomm");});
test("einkommensunterschiede -> einkommensunterschied", function() {deepEqual( Stem("einkommensunterschiede"), "einkommensunterschied");});
test("einkrümmung -> einkrumm", function() {deepEqual( Stem("einkrümmung"), "einkrumm");});
test("einkünfte -> einkunft", function() {deepEqual( Stem("einkünfte"), "einkunft");});
test("einladend -> einlad", function() {deepEqual( Stem("einladend"), "einlad");});
test("einladung -> einlad", function() {deepEqual( Stem("einladung"), "einlad");});
test("einlassen -> einlass", function() {deepEqual( Stem("einlassen"), "einlass");});
test("einlässt -> einlasst", function() {deepEqual( Stem("einlässt"), "einlasst");});
test("einläßt -> einlasst", function() {deepEqual( Stem("einläßt"), "einlasst");});
test("einlaufen -> einlauf", function() {deepEqual( Stem("einlaufen"), "einlauf");});
test("einlegte -> einlegt", function() {deepEqual( Stem("einlegte"), "einlegt");});
test("einleitenden -> einleit", function() {deepEqual( Stem("einleitenden"), "einleit");});
test("einleitendes -> einleit", function() {deepEqual( Stem("einleitendes"), "einleit");});
test("einleitung -> einleit", function() {deepEqual( Stem("einleitung"), "einleit");});
test("einlenkte -> einlenkt", function() {deepEqual( Stem("einlenkte"), "einlenkt");});
test("einleuchten -> einleucht", function() {deepEqual( Stem("einleuchten"), "einleucht");});
test("einleuchtend -> einleucht", function() {deepEqual( Stem("einleuchtend"), "einleucht");});
test("einlud -> einlud", function() {deepEqual( Stem("einlud"), "einlud");});
test("einluden -> einlud", function() {deepEqual( Stem("einluden"), "einlud");});
test("einmal -> einmal", function() {deepEqual( Stem("einmal"), "einmal");});
test("einmalige -> einmal", function() {deepEqual( Stem("einmalige"), "einmal");});
test("einmaliger -> einmal", function() {deepEqual( Stem("einmaliger"), "einmal");});
test("einmengende -> einmeng", function() {deepEqual( Stem("einmengende"), "einmeng");});
test("einmischt -> einmischt", function() {deepEqual( Stem("einmischt"), "einmischt");});
test("einmischte -> einmischt", function() {deepEqual( Stem("einmischte"), "einmischt");});
test("einnahm -> einnahm", function() {deepEqual( Stem("einnahm"), "einnahm");});
test("einnahmen -> einnahm", function() {deepEqual( Stem("einnahmen"), "einnahm");});
test("einnahmenüberschuss -> einnahmenuberschuss", function() {deepEqual( Stem("einnahmenüberschuss"), "einnahmenuberschuss");});
test("einnehme -> einnehm", function() {deepEqual( Stem("einnehme"), "einnehm");});
test("einnehmen -> einnehm", function() {deepEqual( Stem("einnehmen"), "einnehm");});
test("einnimmt -> einnimmt", function() {deepEqual( Stem("einnimmt"), "einnimmt");});
test("einöde -> einod", function() {deepEqual( Stem("einöde"), "einod");});
test("einöden -> einod", function() {deepEqual( Stem("einöden"), "einod");});
test("einpersonenhaushalte -> einpersonenhaushalt", function() {deepEqual( Stem("einpersonenhaushalte"), "einpersonenhaushalt");});
test("einpflanzt -> einpflanzt", function() {deepEqual( Stem("einpflanzt"), "einpflanzt");});
test("einpflanzte -> einpflanzt", function() {deepEqual( Stem("einpflanzte"), "einpflanzt");});
test("einpflanzung -> einpflanz", function() {deepEqual( Stem("einpflanzung"), "einpflanz");});
test("einpfropfung -> einpfropf", function() {deepEqual( Stem("einpfropfung"), "einpfropf");});
test("einprägte -> einpragt", function() {deepEqual( Stem("einprägte"), "einpragt");});
test("einprägten -> einpragt", function() {deepEqual( Stem("einprägten"), "einpragt");});
test("einquartierungen -> einquartier", function() {deepEqual( Stem("einquartierungen"), "einquartier");});
test("einräumen -> einraum", function() {deepEqual( Stem("einräumen"), "einraum");});
test("einräumte -> einraumt", function() {deepEqual( Stem("einräumte"), "einraumt");});
test("einreden -> einred", function() {deepEqual( Stem("einreden"), "einred");});
test("einredet -> einredet", function() {deepEqual( Stem("einredet"), "einredet");});
test("einreissen -> einreiss", function() {deepEqual( Stem("einreissen"), "einreiss");});
test("einreisst -> einreisst", function() {deepEqual( Stem("einreisst"), "einreisst");});
test("einrichten -> einricht", function() {deepEqual( Stem("einrichten"), "einricht");});
test("einrichtet -> einrichtet", function() {deepEqual( Stem("einrichtet"), "einrichtet");});
test("einrichtung -> einricht", function() {deepEqual( Stem("einrichtung"), "einricht");});
test("einrichtungen -> einricht", function() {deepEqual( Stem("einrichtungen"), "einricht");});
test("einrichtungsfanatikern -> einrichtungsfanat", function() {deepEqual( Stem("einrichtungsfanatikern"), "einrichtungsfanat");});
test("einrückte -> einruckt", function() {deepEqual( Stem("einrückte"), "einruckt");});
test("eins -> ein", function() {deepEqual( Stem("eins"), "ein");});
test("einsah -> einsah", function() {deepEqual( Stem("einsah"), "einsah");});
test("einsähe -> einsah", function() {deepEqual( Stem("einsähe"), "einsah");});
test("einsam -> einsam", function() {deepEqual( Stem("einsam"), "einsam");});
test("einsame -> einsam", function() {deepEqual( Stem("einsame"), "einsam");});
test("einsamen -> einsam", function() {deepEqual( Stem("einsamen"), "einsam");});
test("einsames -> einsam", function() {deepEqual( Stem("einsames"), "einsam");});
test("einsamkeit -> einsam", function() {deepEqual( Stem("einsamkeit"), "einsam");});
test("einsamkeiten -> einsam", function() {deepEqual( Stem("einsamkeiten"), "einsam");});
test("einsammeln -> einsammeln", function() {deepEqual( Stem("einsammeln"), "einsammeln");});
test("einsamsten -> einsam", function() {deepEqual( Stem("einsamsten"), "einsam");});
test("einsatz -> einsatz", function() {deepEqual( Stem("einsatz"), "einsatz");});
test("einsatze -> einsatz", function() {deepEqual( Stem("einsatze"), "einsatz");});
test("einsaugt -> einsaugt", function() {deepEqual( Stem("einsaugt"), "einsaugt");});
test("einschätzung -> einschatz", function() {deepEqual( Stem("einschätzung"), "einschatz");});
test("einschenken -> einschenk", function() {deepEqual( Stem("einschenken"), "einschenk");});
test("einschlafen -> einschlaf", function() {deepEqual( Stem("einschlafen"), "einschlaf");});
test("einschläft -> einschlaft", function() {deepEqual( Stem("einschläft"), "einschlaft");});
test("einschlagen -> einschlag", function() {deepEqual( Stem("einschlagen"), "einschlag");});
test("einschleichen -> einschleich", function() {deepEqual( Stem("einschleichen"), "einschleich");});
test("einschlief -> einschlief", function() {deepEqual( Stem("einschlief"), "einschlief");});
test("einschliefen -> einschlief", function() {deepEqual( Stem("einschliefen"), "einschlief");});
test("einschliessen -> einschliess", function() {deepEqual( Stem("einschliessen"), "einschliess");});
test("einschließen -> einschliess", function() {deepEqual( Stem("einschließen"), "einschliess");});
test("einschliesst -> einschliesst", function() {deepEqual( Stem("einschliesst"), "einschliesst");});
test("einschließt -> einschliesst", function() {deepEqual( Stem("einschließt"), "einschliesst");});
test("einschlossen -> einschloss", function() {deepEqual( Stem("einschlossen"), "einschloss");});
test("einschlug -> einschlug", function() {deepEqual( Stem("einschlug"), "einschlug");});
test("einschmeichelnd -> einschmeichelnd", function() {deepEqual( Stem("einschmeichelnd"), "einschmeichelnd");});
test("einschmeichelndsten -> einschmeichelnd", function() {deepEqual( Stem("einschmeichelndsten"), "einschmeichelnd");});
test("einschmuggelten -> einschmuggelt", function() {deepEqual( Stem("einschmuggelten"), "einschmuggelt");});
test("einschränke -> einschrank", function() {deepEqual( Stem("einschränke"), "einschrank");});
test("einschränken -> einschrank", function() {deepEqual( Stem("einschränken"), "einschrank");});
test("einschränkende -> einschrank", function() {deepEqual( Stem("einschränkende"), "einschrank");});
test("einschränkenden -> einschrank", function() {deepEqual( Stem("einschränkenden"), "einschrank");});
test("einschränkt -> einschrankt", function() {deepEqual( Stem("einschränkt"), "einschrankt");});
test("einschränkung -> einschrank", function() {deepEqual( Stem("einschränkung"), "einschrank");});
test("einschränkungen -> einschrank", function() {deepEqual( Stem("einschränkungen"), "einschrank");});
test("einschreiten -> einschreit", function() {deepEqual( Stem("einschreiten"), "einschreit");});
test("einsehen -> einseh", function() {deepEqual( Stem("einsehen"), "einseh");});
test("einseht -> einseht", function() {deepEqual( Stem("einseht"), "einseht");});
test("einseitige -> einseit", function() {deepEqual( Stem("einseitige"), "einseit");});
test("einsetzen -> einsetz", function() {deepEqual( Stem("einsetzen"), "einsetz");});
test("einsetzte -> einsetzt", function() {deepEqual( Stem("einsetzte"), "einsetzt");});
test("einsetzung -> einsetz", function() {deepEqual( Stem("einsetzung"), "einsetz");});
test("einsicht -> einsicht", function() {deepEqual( Stem("einsicht"), "einsicht");});
test("einsichten -> einsicht", function() {deepEqual( Stem("einsichten"), "einsicht");});
test("einsichtsfähigkeit -> einsichtsfah", function() {deepEqual( Stem("einsichtsfähigkeit"), "einsichtsfah");});
test("einsichtsvoll -> einsichtsvoll", function() {deepEqual( Stem("einsichtsvoll"), "einsichtsvoll");});
test("einsichtsvolle -> einsichtsvoll", function() {deepEqual( Stem("einsichtsvolle"), "einsichtsvoll");});
test("einsichtsvollen -> einsichtsvoll", function() {deepEqual( Stem("einsichtsvollen"), "einsichtsvoll");});
test("einsichtsvolleren -> einsichtsvoll", function() {deepEqual( Stem("einsichtsvolleren"), "einsichtsvoll");});
test("einsiedler -> einsiedl", function() {deepEqual( Stem("einsiedler"), "einsiedl");});
test("einsieht -> einsieht", function() {deepEqual( Stem("einsieht"), "einsieht");});
test("einsilbig -> einsilb", function() {deepEqual( Stem("einsilbig"), "einsilb");});
test("einsilbigen -> einsilb", function() {deepEqual( Stem("einsilbigen"), "einsilb");});
test("einsilbiger -> einsilb", function() {deepEqual( Stem("einsilbiger"), "einsilb");});
test("einsilbiges -> einsilb", function() {deepEqual( Stem("einsilbiges"), "einsilb");});
test("einsinkt -> einsinkt", function() {deepEqual( Stem("einsinkt"), "einsinkt");});
test("einsmals -> einsmal", function() {deepEqual( Stem("einsmals"), "einsmal");});
test("einsogen -> einsog", function() {deepEqual( Stem("einsogen"), "einsog");});
test("einspänner -> einspann", function() {deepEqual( Stem("einspänner"), "einspann");});
test("einsperrte -> einsperrt", function() {deepEqual( Stem("einsperrte"), "einsperrt");});
test("einsprache -> einsprach", function() {deepEqual( Stem("einsprache"), "einsprach");});
test("einsprechen -> einsprech", function() {deepEqual( Stem("einsprechen"), "einsprech");});
test("einst -> einst", function() {deepEqual( Stem("einst"), "einst");});
test("einsteckte -> einsteckt", function() {deepEqual( Stem("einsteckte"), "einsteckt");});
test("einstellen -> einstell", function() {deepEqual( Stem("einstellen"), "einstell");});
test("einstellt -> einstellt", function() {deepEqual( Stem("einstellt"), "einstellt");});
test("einstiges -> einstig", function() {deepEqual( Stem("einstiges"), "einstig");});
test("einstimmen -> einstimm", function() {deepEqual( Stem("einstimmen"), "einstimm");});
test("einstimmig -> einstimm", function() {deepEqual( Stem("einstimmig"), "einstimm");});
test("einstimmige -> einstimm", function() {deepEqual( Stem("einstimmige"), "einstimm");});
test("einstimmung -> einstimm", function() {deepEqual( Stem("einstimmung"), "einstimm");});
test("einstudierten -> einstudiert", function() {deepEqual( Stem("einstudierten"), "einstudiert");});
test("einstündige -> einstund", function() {deepEqual( Stem("einstündige"), "einstund");});
test("einstweilen -> einstweil", function() {deepEqual( Stem("einstweilen"), "einstweil");});
test("einstweilige -> einstweil", function() {deepEqual( Stem("einstweilige"), "einstweil");});
test("eintägigen -> eintag", function() {deepEqual( Stem("eintägigen"), "eintag");});
test("eintauche -> eintauch", function() {deepEqual( Stem("eintauche"), "eintauch");});
test("eintausend -> eintaus", function() {deepEqual( Stem("eintausend"), "eintaus");});
test("einteilen -> einteil", function() {deepEqual( Stem("einteilen"), "einteil");});
test("einteilenden -> einteil", function() {deepEqual( Stem("einteilenden"), "einteil");});
test("einteilung -> einteil", function() {deepEqual( Stem("einteilung"), "einteil");});
test("eintönig -> einton", function() {deepEqual( Stem("eintönig"), "einton");});
test("eintönigen -> einton", function() {deepEqual( Stem("eintönigen"), "einton");});
test("eintöniger -> einton", function() {deepEqual( Stem("eintöniger"), "einton");});
test("eintraccht -> eintraccht", function() {deepEqual( Stem("eintraccht"), "eintraccht");});
test("eintracht -> eintracht", function() {deepEqual( Stem("eintracht"), "eintracht");});
test("einträchtig -> eintracht", function() {deepEqual( Stem("einträchtig"), "eintracht");});
test("einträchtiger -> eintracht", function() {deepEqual( Stem("einträchtiger"), "eintracht");});
test("eintrafen -> eintraf", function() {deepEqual( Stem("eintrafen"), "eintraf");});
test("eintrag -> eintrag", function() {deepEqual( Stem("eintrag"), "eintrag");});
test("eintragt -> eintragt", function() {deepEqual( Stem("eintragt"), "eintragt");});
test("eintrat -> eintrat", function() {deepEqual( Stem("eintrat"), "eintrat");});
test("eintraten -> eintrat", function() {deepEqual( Stem("eintraten"), "eintrat");});
test("eintreffen -> eintreff", function() {deepEqual( Stem("eintreffen"), "eintreff");});
test("eintreiben -> eintreib", function() {deepEqual( Stem("eintreiben"), "eintreib");});
test("eintrete -> eintret", function() {deepEqual( Stem("eintrete"), "eintret");});
test("eintreten -> eintret", function() {deepEqual( Stem("eintreten"), "eintret");});
test("eintretende -> eintret", function() {deepEqual( Stem("eintretende"), "eintret");});
test("eintretenden -> eintret", function() {deepEqual( Stem("eintretenden"), "eintret");});
test("eintretens -> eintret", function() {deepEqual( Stem("eintretens"), "eintret");});
test("eintrieb -> eintrieb", function() {deepEqual( Stem("eintrieb"), "eintrieb");});
test("eintrieben -> eintrieb", function() {deepEqual( Stem("eintrieben"), "eintrieb");});
test("eintrinken -> eintrink", function() {deepEqual( Stem("eintrinken"), "eintrink");});
test("eintritt -> eintritt", function() {deepEqual( Stem("eintritt"), "eintritt");});
test("eintritte -> eintritt", function() {deepEqual( Stem("eintritte"), "eintritt");});
test("eintrittskarte -> eintrittskart", function() {deepEqual( Stem("eintrittskarte"), "eintrittskart");});
test("einunddreissigsten -> einunddreiss", function() {deepEqual( Stem("einunddreissigsten"), "einunddreiss");});
test("einunddreißigsten -> einunddreiss", function() {deepEqual( Stem("einunddreißigsten"), "einunddreiss");});
test("einundsechzigjährige -> einundsechzigjahr", function() {deepEqual( Stem("einundsechzigjährige"), "einundsechzigjahr");});
test("einverleibt -> einverleibt", function() {deepEqual( Stem("einverleibt"), "einverleibt");});
test("einvernahme -> einvernahm", function() {deepEqual( Stem("einvernahme"), "einvernahm");});
test("einvernahmen -> einvernahm", function() {deepEqual( Stem("einvernahmen"), "einvernahm");});
test("einverstanden -> einverstand", function() {deepEqual( Stem("einverstanden"), "einverstand");});
test("einverständnis -> einverstandnis", function() {deepEqual( Stem("einverständnis"), "einverstandnis");});
test("einwand -> einwand", function() {deepEqual( Stem("einwand"), "einwand");});
test("einwände -> einwand", function() {deepEqual( Stem("einwände"), "einwand");});
test("einwanderer -> einwand", function() {deepEqual( Stem("einwanderer"), "einwand");});
test("einwanderungsland -> einwanderungsland", function() {deepEqual( Stem("einwanderungsland"), "einwanderungsland");});
test("einwandfrei -> einwandfrei", function() {deepEqual( Stem("einwandfrei"), "einwandfrei");});
test("einwandfreien -> einwandfrei", function() {deepEqual( Stem("einwandfreien"), "einwandfrei");});
test("einwärts -> einwart", function() {deepEqual( Stem("einwärts"), "einwart");});
test("einweihen -> einweih", function() {deepEqual( Stem("einweihen"), "einweih");});
test("einweihung -> einweih", function() {deepEqual( Stem("einweihung"), "einweih");});
test("einweihungen -> einweih", function() {deepEqual( Stem("einweihungen"), "einweih");});
test("einwende -> einwend", function() {deepEqual( Stem("einwende"), "einwend");});
test("einwendung -> einwend", function() {deepEqual( Stem("einwendung"), "einwend");});
test("einwendungen -> einwend", function() {deepEqual( Stem("einwendungen"), "einwend");});
test("einwickelpapier -> einwickelpapi", function() {deepEqual( Stem("einwickelpapier"), "einwickelpapi");});
test("einwilligung -> einwill", function() {deepEqual( Stem("einwilligung"), "einwill");});
test("einwirken -> einwirk", function() {deepEqual( Stem("einwirken"), "einwirk");});
test("einwirkt -> einwirkt", function() {deepEqual( Stem("einwirkt"), "einwirkt");});
test("einwirkte -> einwirkt", function() {deepEqual( Stem("einwirkte"), "einwirkt");});
test("einwirkung -> einwirk", function() {deepEqual( Stem("einwirkung"), "einwirk");});
test("einwohner -> einwohn", function() {deepEqual( Stem("einwohner"), "einwohn");});
test("einwohnerin -> einwohnerin", function() {deepEqual( Stem("einwohnerin"), "einwohnerin");});
test("einwürfe -> einwurf", function() {deepEqual( Stem("einwürfe"), "einwurf");});
test("einwurzelt -> einwurzelt", function() {deepEqual( Stem("einwurzelt"), "einwurzelt");});
test("einzahl -> einzahl", function() {deepEqual( Stem("einzahl"), "einzahl");});
test("einzahlen -> einzahl", function() {deepEqual( Stem("einzahlen"), "einzahl");});
test("einzelfragen -> einzelfrag", function() {deepEqual( Stem("einzelfragen"), "einzelfrag");});
test("einzelheit -> einzel", function() {deepEqual( Stem("einzelheit"), "einzel");});
test("einzelheiten -> einzel", function() {deepEqual( Stem("einzelheiten"), "einzel");});
test("einzeln -> einzeln", function() {deepEqual( Stem("einzeln"), "einzeln");});
test("einzelne -> einzeln", function() {deepEqual( Stem("einzelne"), "einzeln");});
test("einzelnen -> einzeln", function() {deepEqual( Stem("einzelnen"), "einzeln");});
test("einzelner -> einzeln", function() {deepEqual( Stem("einzelner"), "einzeln");});
test("einzelnes -> einzeln", function() {deepEqual( Stem("einzelnes"), "einzeln");});
test("einzelnheiten -> einzeln", function() {deepEqual( Stem("einzelnheiten"), "einzeln");});
test("einzelnste -> einzeln", function() {deepEqual( Stem("einzelnste"), "einzeln");});
test("einzelnsten -> einzeln", function() {deepEqual( Stem("einzelnsten"), "einzeln");});
test("einziehen -> einzieh", function() {deepEqual( Stem("einziehen"), "einzieh");});
test("einzig -> einzig", function() {deepEqual( Stem("einzig"), "einzig");});
test("einzige -> einzig", function() {deepEqual( Stem("einzige"), "einzig");});
test("einzigem -> einzig", function() {deepEqual( Stem("einzigem"), "einzig");});
test("einzigen -> einzig", function() {deepEqual( Stem("einzigen"), "einzig");});
test("einziger -> einzig", function() {deepEqual( Stem("einziger"), "einzig");});
test("einziges -> einzig", function() {deepEqual( Stem("einziges"), "einzig");});
test("einzog -> einzog", function() {deepEqual( Stem("einzog"), "einzog");});
test("einzubalsamieren -> einzubalsami", function() {deepEqual( Stem("einzubalsamieren"), "einzubalsami");});
test("einzubilden -> einzubild", function() {deepEqual( Stem("einzubilden"), "einzubild");});
test("einzubohren -> einzubohr", function() {deepEqual( Stem("einzubohren"), "einzubohr");});
test("einzubürgern -> einzuburg", function() {deepEqual( Stem("einzubürgern"), "einzuburg");});
test("einzudringen -> einzudring", function() {deepEqual( Stem("einzudringen"), "einzudring");});
test("einzufinden -> einzufind", function() {deepEqual( Stem("einzufinden"), "einzufind");});
test("einzuflössen -> einzufloss", function() {deepEqual( Stem("einzuflössen"), "einzufloss");});
test("einzuflößen -> einzufloss", function() {deepEqual( Stem("einzuflößen"), "einzufloss");});
test("einzuführen -> einzufuhr", function() {deepEqual( Stem("einzuführen"), "einzufuhr");});
test("einzug -> einzug", function() {deepEqual( Stem("einzug"), "einzug");});
test("einzugehen -> einzugeh", function() {deepEqual( Stem("einzugehen"), "einzugeh");});
test("einzugehn -> einzugehn", function() {deepEqual( Stem("einzugehn"), "einzugehn");});
test("einzuges -> einzug", function() {deepEqual( Stem("einzuges"), "einzug");});
test("einzugestehen -> einzugesteh", function() {deepEqual( Stem("einzugestehen"), "einzugesteh");});
test("einzugreifen -> einzugreif", function() {deepEqual( Stem("einzugreifen"), "einzugreif");});
test("einzuhängen -> einzuhang", function() {deepEqual( Stem("einzuhängen"), "einzuhang");});
test("einzuholen -> einzuhol", function() {deepEqual( Stem("einzuholen"), "einzuhol");});
test("einzuknöpfen -> einzuknopf", function() {deepEqual( Stem("einzuknöpfen"), "einzuknopf");});
test("einzulassen -> einzulass", function() {deepEqual( Stem("einzulassen"), "einzulass");});
test("einzuräumen -> einzuraum", function() {deepEqual( Stem("einzuräumen"), "einzuraum");});
test("einzureichen -> einzureich", function() {deepEqual( Stem("einzureichen"), "einzureich");});
test("einzureiten -> einzureit", function() {deepEqual( Stem("einzureiten"), "einzureit");});
test("einzuschlagen -> einzuschlag", function() {deepEqual( Stem("einzuschlagen"), "einzuschlag");});
test("einzuschüchtern -> einzuschucht", function() {deepEqual( Stem("einzuschüchtern"), "einzuschucht");});
test("einzusehen -> einzuseh", function() {deepEqual( Stem("einzusehen"), "einzuseh");});
test("einzusperren -> einzusperr", function() {deepEqual( Stem("einzusperren"), "einzusperr");});
test("einzustehen -> einzusteh", function() {deepEqual( Stem("einzustehen"), "einzusteh");});
test("einzutreffen -> einzutreff", function() {deepEqual( Stem("einzutreffen"), "einzutreff");});
test("einzutreten -> einzutret", function() {deepEqual( Stem("einzutreten"), "einzutret");});
test("einzuwenden -> einzuw", function() {deepEqual( Stem("einzuwenden"), "einzuw");});
test("einzuwerfen -> einzuwerf", function() {deepEqual( Stem("einzuwerfen"), "einzuwerf");});
test("einzuwirken -> einzuwirk", function() {deepEqual( Stem("einzuwirken"), "einzuwirk");});
test("einzuwühlen -> einzuwuhl", function() {deepEqual( Stem("einzuwühlen"), "einzuwuhl");});
test("einzuziehen -> einzuzieh", function() {deepEqual( Stem("einzuziehen"), "einzuzieh");});
test("eis -> eis", function() {deepEqual( Stem("eis"), "eis");});
test("eisbärenmässig -> eisbarenmass", function() {deepEqual( Stem("eisbärenmässig"), "eisbarenmass");});
test("eisblumensträusschen -> eisblumenstraussch", function() {deepEqual( Stem("eisblumensträusschen"), "eisblumenstraussch");});
test("eisekalt -> eisekalt", function() {deepEqual( Stem("eisekalt"), "eisekalt");});
test("eisen -> eis", function() {deepEqual( Stem("eisen"), "eis");});
test("eisenbahn -> eisenbahn", function() {deepEqual( Stem("eisenbahn"), "eisenbahn");});
test("eisenbahnkönige -> eisenbahnkon", function() {deepEqual( Stem("eisenbahnkönige"), "eisenbahnkon");});
test("eisengeschienten -> eisengeschient", function() {deepEqual( Stem("eisengeschienten"), "eisengeschient");});
test("eisenhaken -> eisenhak", function() {deepEqual( Stem("eisenhaken"), "eisenhak");});
test("eisenhut -> eisenhut", function() {deepEqual( Stem("eisenhut"), "eisenhut");});
test("eisenketten -> eisenkett", function() {deepEqual( Stem("eisenketten"), "eisenkett");});
test("eisenkörben -> eisenkorb", function() {deepEqual( Stem("eisenkörben"), "eisenkorb");});
test("eisens -> eis", function() {deepEqual( Stem("eisens"), "eis");});
test("eisenschimmel -> eisenschimmel", function() {deepEqual( Stem("eisenschimmel"), "eisenschimmel");});
test("eisenstange -> eisenstang", function() {deepEqual( Stem("eisenstange"), "eisenstang");});
test("eisenwerk -> eisenwerk", function() {deepEqual( Stem("eisenwerk"), "eisenwerk");});
test("eiserne -> eisern", function() {deepEqual( Stem("eiserne"), "eisern");});
test("eiserner -> eisern", function() {deepEqual( Stem("eiserner"), "eisern");});
test("eisgeschwister -> eisgeschwist", function() {deepEqual( Stem("eisgeschwister"), "eisgeschwist");});
test("eisgeschwistern -> eisgeschwist", function() {deepEqual( Stem("eisgeschwistern"), "eisgeschwist");});
test("eisgraue -> eisgrau", function() {deepEqual( Stem("eisgraue"), "eisgrau");});
test("eisgrauer -> eisgrau", function() {deepEqual( Stem("eisgrauer"), "eisgrau");});
test("eisig -> eisig", function() {deepEqual( Stem("eisig"), "eisig");});
test("eiskalten -> eiskalt", function() {deepEqual( Stem("eiskalten"), "eiskalt");});
test("eiskalter -> eiskalt", function() {deepEqual( Stem("eiskalter"), "eiskalt");});
test("eiskristallen -> eiskristall", function() {deepEqual( Stem("eiskristallen"), "eiskristall");});
test("eismax -> eismax", function() {deepEqual( Stem("eismax"), "eismax");});
test("eisschloss -> eisschloss", function() {deepEqual( Stem("eisschloss"), "eisschloss");});
test("eitel -> eitel", function() {deepEqual( Stem("eitel"), "eitel");});
test("eitelkeit -> eitel", function() {deepEqual( Stem("eitelkeit"), "eitel");});
test("eitelkeiten -> eitel", function() {deepEqual( Stem("eitelkeiten"), "eitel");});
test("eiteln -> eiteln", function() {deepEqual( Stem("eiteln"), "eiteln");});
test("eitle -> eitl", function() {deepEqual( Stem("eitle"), "eitl");});
test("eitlen -> eitl", function() {deepEqual( Stem("eitlen"), "eitl");});
test("eitler -> eitl", function() {deepEqual( Stem("eitler"), "eitl");});
test("eitles -> eitl", function() {deepEqual( Stem("eitles"), "eitl");});
test("eitrig -> eitrig", function() {deepEqual( Stem("eitrig"), "eitrig");});
test("ekd -> ekd", function() {deepEqual( Stem("ekd"), "ekd");});
test("ekelhafter -> ekelhaft", function() {deepEqual( Stem("ekelhafter"), "ekelhaft");});
test("ekeln -> ekeln", function() {deepEqual( Stem("ekeln"), "ekeln");});
test("ekels -> ekel", function() {deepEqual( Stem("ekels"), "ekel");});
test("ekelte -> ekelt", function() {deepEqual( Stem("ekelte"), "ekelt");});
test("ekkehard -> ekkehard", function() {deepEqual( Stem("ekkehard"), "ekkehard");});
test("elastisch -> elast", function() {deepEqual( Stem("elastisch"), "elast");});
test("elastisches -> elast", function() {deepEqual( Stem("elastisches"), "elast");});
test("elater -> elat", function() {deepEqual( Stem("elater"), "elat");});
test("eleasar -> eleasar", function() {deepEqual( Stem("eleasar"), "eleasar");});
test("elefant -> elefant", function() {deepEqual( Stem("elefant"), "elefant");});
test("elefanten -> elefant", function() {deepEqual( Stem("elefanten"), "elefant");});
test("elefantenzähnen -> elefantenzahn", function() {deepEqual( Stem("elefantenzähnen"), "elefantenzahn");});
test("elegant -> elegant", function() {deepEqual( Stem("elegant"), "elegant");});
test("elegante -> elegant", function() {deepEqual( Stem("elegante"), "elegant");});
test("elegantem -> elegant", function() {deepEqual( Stem("elegantem"), "elegant");});
test("eleganten -> elegant", function() {deepEqual( Stem("eleganten"), "elegant");});
test("elektrische -> elektr", function() {deepEqual( Stem("elektrische"), "elektr");});
test("elektrischen -> elektr", function() {deepEqual( Stem("elektrischen"), "elektr");});
test("elektrizität -> elektrizitat", function() {deepEqual( Stem("elektrizität"), "elektrizitat");});
test("element -> element", function() {deepEqual( Stem("element"), "element");});
test("elementarbegriffe -> elementarbegriff", function() {deepEqual( Stem("elementarbegriffe"), "elementarbegriff");});
test("elementare -> elementar", function() {deepEqual( Stem("elementare"), "elementar");});
test("elementarfeuer -> elementarfeu", function() {deepEqual( Stem("elementarfeuer"), "elementarfeu");});
test("elementarlehre -> elementarlehr", function() {deepEqual( Stem("elementarlehre"), "elementarlehr");});
test("elemente -> element", function() {deepEqual( Stem("elemente"), "element");});
test("elements -> element", function() {deepEqual( Stem("elements"), "element");});
test("elenchis -> elenchis", function() {deepEqual( Stem("elenchis"), "elenchis");});
test("elend -> elend", function() {deepEqual( Stem("elend"), "elend");});
test("elende -> elend", function() {deepEqual( Stem("elende"), "elend");});
test("elenden -> elend", function() {deepEqual( Stem("elenden"), "elend");});
test("elender -> elend", function() {deepEqual( Stem("elender"), "elend");});
test("elenderfüllten -> elenderfullt", function() {deepEqual( Stem("elenderfüllten"), "elenderfullt");});
test("elendern -> elend", function() {deepEqual( Stem("elendern"), "elend");});
test("elendes -> elend", function() {deepEqual( Stem("elendes"), "elend");});
test("elendiglich -> elendig", function() {deepEqual( Stem("elendiglich"), "elendig");});
test("elends -> elend", function() {deepEqual( Stem("elends"), "elend");});
test("elf -> elf", function() {deepEqual( Stem("elf"), "elf");});
test("elfenbein -> elfenbein", function() {deepEqual( Stem("elfenbein"), "elfenbein");});
test("elfenbeinfarbenen -> elfenbeinfarb", function() {deepEqual( Stem("elfenbeinfarbenen"), "elfenbeinfarb");});
test("elfjährigen -> elfjahr", function() {deepEqual( Stem("elfjährigen"), "elfjahr");});
test("elften -> elft", function() {deepEqual( Stem("elften"), "elft");});
test("elias -> elias", function() {deepEqual( Stem("elias"), "elias");});
test("elisa -> elisa", function() {deepEqual( Stem("elisa"), "elisa");});
test("elisabeth -> elisabeth", function() {deepEqual( Stem("elisabeth"), "elisabeth");});
test("elisabethen -> elisabeth", function() {deepEqual( Stem("elisabethen"), "elisabeth");});
test("elisabethenkrankenhaus -> elisabethenkrankenhaus", function() {deepEqual( Stem("elisabethenkrankenhaus"), "elisabethenkrankenhaus");});
test("eliseba -> eliseba", function() {deepEqual( Stem("eliseba"), "eliseba");});
test("elkanah -> elkanah", function() {deepEqual( Stem("elkanah"), "elkanah");});
test("ellbög -> ellbog", function() {deepEqual( Stem("ellbög"), "ellbog");});
test("ellbogen -> ellbog", function() {deepEqual( Stem("ellbogen"), "ellbog");});
test("elle -> ell", function() {deepEqual( Stem("elle"), "ell");});
test("ellen -> ell", function() {deepEqual( Stem("ellen"), "ell");});
test("ellenbogen -> ellenbog", function() {deepEqual( Stem("ellenbogen"), "ellenbog");});
test("elmsfeuerchen -> elmsfeuerch", function() {deepEqual( Stem("elmsfeuerchen"), "elmsfeuerch");});
test("elohim -> elohim", function() {deepEqual( Stem("elohim"), "elohim");});
test("eltern -> elt", function() {deepEqual( Stem("eltern"), "elt");});
test("elternhauses -> elternhaus", function() {deepEqual( Stem("elternhauses"), "elternhaus");});
test("elternpaar -> elternpaar", function() {deepEqual( Stem("elternpaar"), "elternpaar");});
test("elzaphan -> elzaphan", function() {deepEqual( Stem("elzaphan"), "elzaphan");});
test("emanuel -> emanuel", function() {deepEqual( Stem("emanuel"), "emanuel");});
test("emanuela -> emanuela", function() {deepEqual( Stem("emanuela"), "emanuela");});
test("emes -> emes", function() {deepEqual( Stem("emes"), "emes");});
test("emigranten -> emigrant", function() {deepEqual( Stem("emigranten"), "emigrant");});
test("emigrierten -> emigriert", function() {deepEqual( Stem("emigrierten"), "emigriert");});
test("emim -> emim", function() {deepEqual( Stem("emim"), "emim");});
test("emin -> emin", function() {deepEqual( Stem("emin"), "emin");});
test("eminenten -> eminent", function() {deepEqual( Stem("eminenten"), "eminent");});
test("eminonü -> eminonu", function() {deepEqual( Stem("eminonü"), "eminonu");});
test("emmeline -> emmelin", function() {deepEqual( Stem("emmeline"), "emmelin");});
test("empfahl -> empfahl", function() {deepEqual( Stem("empfahl"), "empfahl");});
test("empfand -> empfand", function() {deepEqual( Stem("empfand"), "empfand");});
test("empfanden -> empfand", function() {deepEqual( Stem("empfanden"), "empfand");});
test("empfänden -> empfand", function() {deepEqual( Stem("empfänden"), "empfand");});
test("empfang -> empfang", function() {deepEqual( Stem("empfang"), "empfang");});
test("empfangen -> empfang", function() {deepEqual( Stem("empfangen"), "empfang");});
test("empfangene -> empfang", function() {deepEqual( Stem("empfangene"), "empfang");});
test("empfangenen -> empfang", function() {deepEqual( Stem("empfangenen"), "empfang");});
test("empfänglichkeit -> empfang", function() {deepEqual( Stem("empfänglichkeit"), "empfang");});
test("empfängnis -> empfangnis", function() {deepEqual( Stem("empfängnis"), "empfangnis");});
test("empfängnisse -> empfangnis", function() {deepEqual( Stem("empfängnisse"), "empfangnis");});
test("empfangszimmer -> empfangszimm", function() {deepEqual( Stem("empfangszimmer"), "empfangszimm");});
test("empfängt -> empfangt", function() {deepEqual( Stem("empfängt"), "empfangt");});
test("empfehlen -> empfehl", function() {deepEqual( Stem("empfehlen"), "empfehl");});
test("empfehlende -> empfehl", function() {deepEqual( Stem("empfehlende"), "empfehl");});
test("empfehlung -> empfehl", function() {deepEqual( Stem("empfehlung"), "empfehl");});
test("empfiehlt -> empfiehlt", function() {deepEqual( Stem("empfiehlt"), "empfiehlt");});
test("empfinde -> empfind", function() {deepEqual( Stem("empfinde"), "empfind");});
test("empfinden -> empfind", function() {deepEqual( Stem("empfinden"), "empfind");});
test("empfindenden -> empfind", function() {deepEqual( Stem("empfindenden"), "empfind");});
test("empfindet -> empfindet", function() {deepEqual( Stem("empfindet"), "empfindet");});
test("empfindlich -> empfind", function() {deepEqual( Stem("empfindlich"), "empfind");});
test("empfindliches -> empfind", function() {deepEqual( Stem("empfindliches"), "empfind");});
test("empfindsamen -> empfindsam", function() {deepEqual( Stem("empfindsamen"), "empfindsam");});
test("empfindsamkeit -> empfindsam", function() {deepEqual( Stem("empfindsamkeit"), "empfindsam");});
test("empfindung -> empfind", function() {deepEqual( Stem("empfindung"), "empfind");});
test("empfindungen -> empfind", function() {deepEqual( Stem("empfindungen"), "empfind");});
test("empfindungszustand -> empfindungszustand", function() {deepEqual( Stem("empfindungszustand"), "empfindungszustand");});
test("empfing -> empfing", function() {deepEqual( Stem("empfing"), "empfing");});
test("empfingen -> empfing", function() {deepEqual( Stem("empfingen"), "empfing");});
test("empfmg -> empfmg", function() {deepEqual( Stem("empfmg"), "empfmg");});
test("empfohlen -> empfohl", function() {deepEqual( Stem("empfohlen"), "empfohl");});
test("empfunden -> empfund", function() {deepEqual( Stem("empfunden"), "empfund");});
test("emphatisch -> emphat", function() {deepEqual( Stem("emphatisch"), "emphat");});
test("empirisch -> empir", function() {deepEqual( Stem("empirisch"), "empir");});
test("empirische -> empir", function() {deepEqual( Stem("empirische"), "empir");});
test("empirischen -> empir", function() {deepEqual( Stem("empirischen"), "empir");});
test("empirischer -> empir", function() {deepEqual( Stem("empirischer"), "empir");});
test("empirisches -> empir", function() {deepEqual( Stem("empirisches"), "empir");});
test("empirismus -> empirismus", function() {deepEqual( Stem("empirismus"), "empirismus");});
test("empor -> empor", function() {deepEqual( Stem("empor"), "empor");});
test("empörend -> empor", function() {deepEqual( Stem("empörend"), "empor");});
test("empörender -> empor", function() {deepEqual( Stem("empörender"), "empor");});
test("emporgehoben -> emporgehob", function() {deepEqual( Stem("emporgehoben"), "emporgehob");});
test("emporgeschossene -> emporgeschoss", function() {deepEqual( Stem("emporgeschossene"), "emporgeschoss");});
test("emporgestiegen -> emporgestieg", function() {deepEqual( Stem("emporgestiegen"), "emporgestieg");});
test("emporhebt -> emporhebt", function() {deepEqual( Stem("emporhebt"), "emporhebt");});
test("emporhob -> emporhob", function() {deepEqual( Stem("emporhob"), "emporhob");});
test("emporkommen -> emporkomm", function() {deepEqual( Stem("emporkommen"), "emporkomm");});
test("emporkömmlinge -> emporkommling", function() {deepEqual( Stem("emporkömmlinge"), "emporkommling");});
test("emporragte -> emporragt", function() {deepEqual( Stem("emporragte"), "emporragt");});
test("emporragten -> emporragt", function() {deepEqual( Stem("emporragten"), "emporragt");});
test("emporschwangen -> emporschwang", function() {deepEqual( Stem("emporschwangen"), "emporschwang");});
test("emporschwimmt -> emporschwimmt", function() {deepEqual( Stem("emporschwimmt"), "emporschwimmt");});
test("emporstarren -> emporstarr", function() {deepEqual( Stem("emporstarren"), "emporstarr");});
test("empört -> emport", function() {deepEqual( Stem("empört"), "emport");});
test("emportauchen -> emportauch", function() {deepEqual( Stem("emportauchen"), "emportauch");});
test("empörter -> emport", function() {deepEqual( Stem("empörter"), "emport");});
test("emportürmte -> emporturmt", function() {deepEqual( Stem("emportürmte"), "emporturmt");});
test("emporzuheben -> emporzuheb", function() {deepEqual( Stem("emporzuheben"), "emporzuheb");});
test("emporzutragen -> emporzutrag", function() {deepEqual( Stem("emporzutragen"), "emporzutrag");});
test("emsig -> emsig", function() {deepEqual( Stem("emsig"), "emsig");});
test("emsigkeit -> emsig", function() {deepEqual( Stem("emsigkeit"), "emsig");});
test("emsigsten -> emsig", function() {deepEqual( Stem("emsigsten"), "emsig");});
test("en -> en", function() {deepEqual( Stem("en"), "en");});
test("enakim -> enakim", function() {deepEqual( Stem("enakim"), "enakim");});
test("enaks -> enak", function() {deepEqual( Stem("enaks"), "enak");});
test("end -> end", function() {deepEqual( Stem("end"), "end");});
test("endchen -> endch", function() {deepEqual( Stem("endchen"), "endch");});
test("ende -> end", function() {deepEqual( Stem("ende"), "end");});
test("enden -> end", function() {deepEqual( Stem("enden"), "end");});
test("endete -> endet", function() {deepEqual( Stem("endete"), "endet");});
test("endgültig -> endgult", function() {deepEqual( Stem("endgültig"), "endgult");});
test("endgültige -> endgult", function() {deepEqual( Stem("endgültige"), "endgult");});
test("endgültigen -> endgult", function() {deepEqual( Stem("endgültigen"), "endgult");});
test("endigen -> endig", function() {deepEqual( Stem("endigen"), "endig");});
test("endigt -> endigt", function() {deepEqual( Stem("endigt"), "endigt");});
test("endigte -> endigt", function() {deepEqual( Stem("endigte"), "endigt");});
test("endlich -> endlich", function() {deepEqual( Stem("endlich"), "endlich");});
test("endliche -> endlich", function() {deepEqual( Stem("endliche"), "endlich");});
test("endlichen -> endlich", function() {deepEqual( Stem("endlichen"), "endlich");});
test("endlicher -> endlich", function() {deepEqual( Stem("endlicher"), "endlich");});
test("endliches -> endlich", function() {deepEqual( Stem("endliches"), "endlich");});
test("endlichkeit -> endlich", function() {deepEqual( Stem("endlichkeit"), "endlich");});
test("endlos -> endlos", function() {deepEqual( Stem("endlos"), "endlos");});
test("endlosen -> endlos", function() {deepEqual( Stem("endlosen"), "endlos");});
test("endoxa -> endoxa", function() {deepEqual( Stem("endoxa"), "endoxa");});
test("endpunkt -> endpunkt", function() {deepEqual( Stem("endpunkt"), "endpunkt");});
test("endpunkte -> endpunkt", function() {deepEqual( Stem("endpunkte"), "endpunkt");});
test("endstücke -> endstuck", function() {deepEqual( Stem("endstücke"), "endstuck");});
test("endzweck -> endzweck", function() {deepEqual( Stem("endzweck"), "endzweck");});
test("enen -> enen", function() {deepEqual( Stem("enen"), "enen");});
test("energie -> energi", function() {deepEqual( Stem("energie"), "energi");});
test("energisch -> energ", function() {deepEqual( Stem("energisch"), "energ");});
test("energischer -> energ", function() {deepEqual( Stem("energischer"), "energ");});
test("energisches -> energ", function() {deepEqual( Stem("energisches"), "energ");});
test("eng -> eng", function() {deepEqual( Stem("eng"), "eng");});
test("engadiner -> engadin", function() {deepEqual( Stem("engadiner"), "engadin");});
test("engagement -> engagement", function() {deepEqual( Stem("engagement"), "engagement");});
test("engagieren -> engagi", function() {deepEqual( Stem("engagieren"), "engagi");});
test("engagiert -> engagiert", function() {deepEqual( Stem("engagiert"), "engagiert");});
test("engagierte -> engagiert", function() {deepEqual( Stem("engagierte"), "engagiert");});
test("engagierter -> engagiert", function() {deepEqual( Stem("engagierter"), "engagiert");});
test("enge -> eng", function() {deepEqual( Stem("enge"), "eng");});
test("engedi -> engedi", function() {deepEqual( Stem("engedi"), "engedi");});
test("engel -> engel", function() {deepEqual( Stem("engel"), "engel");});
test("engelartig -> engelart", function() {deepEqual( Stem("engelartig"), "engelart");});
test("engelchören -> engelchor", function() {deepEqual( Stem("engelchören"), "engelchor");});
test("engelgeister -> engelgeist", function() {deepEqual( Stem("engelgeister"), "engelgeist");});
test("engelgeistes -> engelgeist", function() {deepEqual( Stem("engelgeistes"), "engelgeist");});
test("engelische -> engel", function() {deepEqual( Stem("engelische"), "engel");});
test("engelischen -> engel", function() {deepEqual( Stem("engelischen"), "engel");});
test("engelland -> engelland", function() {deepEqual( Stem("engelland"), "engelland");});
test("engeln -> engeln", function() {deepEqual( Stem("engeln"), "engeln");});
test("engels -> engel", function() {deepEqual( Stem("engels"), "engel");});
test("engelscharen -> engelschar", function() {deepEqual( Stem("engelscharen"), "engelschar");});
test("engelsgeistern -> engelsgeist", function() {deepEqual( Stem("engelsgeistern"), "engelsgeist");});
test("engelshimmel -> engelshimmel", function() {deepEqual( Stem("engelshimmel"), "engelshimmel");});
test("engelsrede -> engelsred", function() {deepEqual( Stem("engelsrede"), "engelsred");});
test("engelstimmchen -> engelstimmch", function() {deepEqual( Stem("engelstimmchen"), "engelstimmch");});
test("engelswesen -> engelswes", function() {deepEqual( Stem("engelswesen"), "engelswes");});
test("engen -> eng", function() {deepEqual( Stem("engen"), "eng");});
test("enger -> eng", function() {deepEqual( Stem("enger"), "eng");});
test("engere -> eng", function() {deepEqual( Stem("engere"), "eng");});
test("engeren -> eng", function() {deepEqual( Stem("engeren"), "eng");});
test("engerer -> eng", function() {deepEqual( Stem("engerer"), "eng");});
test("england -> england", function() {deepEqual( Stem("england"), "england");});
test("engländer -> england", function() {deepEqual( Stem("engländer"), "england");});
test("engländern -> england", function() {deepEqual( Stem("engländern"), "england");});
test("englisch -> englisch", function() {deepEqual( Stem("englisch"), "englisch");});
test("englische -> englisch", function() {deepEqual( Stem("englische"), "englisch");});
test("englischen -> englisch", function() {deepEqual( Stem("englischen"), "englisch");});
test("englischer -> englisch", function() {deepEqual( Stem("englischer"), "englisch");});
test("englisches -> englisch", function() {deepEqual( Stem("englisches"), "englisch");});
test("englischlehrerin -> englischlehrerin", function() {deepEqual( Stem("englischlehrerin"), "englischlehrerin");});
test("englischsprachige -> englischsprach", function() {deepEqual( Stem("englischsprachige"), "englischsprach");});
test("englischsprachigen -> englischsprach", function() {deepEqual( Stem("englischsprachigen"), "englischsprach");});
test("english -> english", function() {deepEqual( Stem("english"), "english");});
test("engschlucht -> engschlucht", function() {deepEqual( Stem("engschlucht"), "engschlucht");});
test("engste -> engst", function() {deepEqual( Stem("engste"), "engst");});
test("engsten -> engst", function() {deepEqual( Stem("engsten"), "engst");});
test("engtälern -> engtal", function() {deepEqual( Stem("engtälern"), "engtal");});
test("enim -> enim", function() {deepEqual( Stem("enim"), "enim");});
test("enk -> enk", function() {deepEqual( Stem("enk"), "enk");});
test("enkel -> enkel", function() {deepEqual( Stem("enkel"), "enkel");});
test("enkelin -> enkelin", function() {deepEqual( Stem("enkelin"), "enkelin");});
test("enosch -> enosch", function() {deepEqual( Stem("enosch"), "enosch");});
test("enoschs -> enosch", function() {deepEqual( Stem("enoschs"), "enosch");});
test("ent -> ent", function() {deepEqual( Stem("ent"), "ent");});
test("entartung -> entart", function() {deepEqual( Stem("entartung"), "entart");});
test("entbehren -> entbehr", function() {deepEqual( Stem("entbehren"), "entbehr");});
test("entbehrlich -> entbehr", function() {deepEqual( Stem("entbehrlich"), "entbehr");});
test("entbehrt -> entbehrt", function() {deepEqual( Stem("entbehrt"), "entbehrt");});
test("entbehrte -> entbehrt", function() {deepEqual( Stem("entbehrte"), "entbehrt");});
test("entbehrung -> entbehr", function() {deepEqual( Stem("entbehrung"), "entbehr");});
test("entblösst -> entblosst", function() {deepEqual( Stem("entblösst"), "entblosst");});
test("entblößt -> entblosst", function() {deepEqual( Stem("entblößt"), "entblosst");});
test("entbrannt -> entbrannt", function() {deepEqual( Stem("entbrannt"), "entbrannt");});
test("entbrannte -> entbrannt", function() {deepEqual( Stem("entbrannte"), "entbrannt");});
test("entbrannten -> entbrannt", function() {deepEqual( Stem("entbrannten"), "entbrannt");});
test("entbrennen -> entbrenn", function() {deepEqual( Stem("entbrennen"), "entbrenn");});
test("entdecken -> entdeck", function() {deepEqual( Stem("entdecken"), "entdeck");});
test("entdecker -> entdeck", function() {deepEqual( Stem("entdecker"), "entdeck");});
test("entdeckt -> entdeckt", function() {deepEqual( Stem("entdeckt"), "entdeckt");});
test("entdeckte -> entdeckt", function() {deepEqual( Stem("entdeckte"), "entdeckt");});
test("entdeckten -> entdeckt", function() {deepEqual( Stem("entdeckten"), "entdeckt");});
test("entdeckung -> entdeck", function() {deepEqual( Stem("entdeckung"), "entdeck");});
test("entehrt -> entehrt", function() {deepEqual( Stem("entehrt"), "entehrt");});
test("enten -> ent", function() {deepEqual( Stem("enten"), "ent");});
test("entenadler -> entenadl", function() {deepEqual( Stem("entenadler"), "entenadl");});
test("entenfüssen -> entenfuss", function() {deepEqual( Stem("entenfüssen"), "entenfuss");});
test("enterben -> enterb", function() {deepEqual( Stem("enterben"), "enterb");});
test("entfallen -> entfall", function() {deepEqual( Stem("entfallen"), "entfall");});
test("entfalten -> entfalt", function() {deepEqual( Stem("entfalten"), "entfalt");});
test("entfaltet -> entfaltet", function() {deepEqual( Stem("entfaltet"), "entfaltet");});
test("entfaltete -> entfaltet", function() {deepEqual( Stem("entfaltete"), "entfaltet");});
test("entfärbt -> entfarbt", function() {deepEqual( Stem("entfärbt"), "entfarbt");});
test("entferne -> entfern", function() {deepEqual( Stem("entferne"), "entfern");});
test("entfernen -> entfern", function() {deepEqual( Stem("entfernen"), "entfern");});
test("entfernet -> entfernet", function() {deepEqual( Stem("entfernet"), "entfernet");});
test("entfernst -> entfern", function() {deepEqual( Stem("entfernst"), "entfern");});
test("entfernt -> entfernt", function() {deepEqual( Stem("entfernt"), "entfernt");});
test("entfernte -> entfernt", function() {deepEqual( Stem("entfernte"), "entfernt");});
test("entfernten -> entfernt", function() {deepEqual( Stem("entfernten"), "entfernt");});
test("entfernter -> entfernt", function() {deepEqual( Stem("entfernter"), "entfernt");});
test("entfernteres -> entfernt", function() {deepEqual( Stem("entfernteres"), "entfernt");});
test("entferntesten -> entfernt", function() {deepEqual( Stem("entferntesten"), "entfernt");});
test("entferntwerden -> entferntwerd", function() {deepEqual( Stem("entferntwerden"), "entferntwerd");});
test("entfernung -> entfern", function() {deepEqual( Stem("entfernung"), "entfern");});
test("entfernungen -> entfern", function() {deepEqual( Stem("entfernungen"), "entfern");});
test("entfessle -> entfessl", function() {deepEqual( Stem("entfessle"), "entfessl");});
test("entfeßle -> entfessl", function() {deepEqual( Stem("entfeßle"), "entfessl");});
test("entflammen -> entflamm", function() {deepEqual( Stem("entflammen"), "entflamm");});
test("entfliehen -> entflieh", function() {deepEqual( Stem("entfliehen"), "entflieh");});
test("entfloh -> entfloh", function() {deepEqual( Stem("entfloh"), "entfloh");});
test("entflohen -> entfloh", function() {deepEqual( Stem("entflohen"), "entfloh");});
test("entflohene -> entfloh", function() {deepEqual( Stem("entflohene"), "entfloh");});
test("entflohenen -> entfloh", function() {deepEqual( Stem("entflohenen"), "entfloh");});
test("entfremdet -> entfremdet", function() {deepEqual( Stem("entfremdet"), "entfremdet");});
test("entfremdete -> entfremdet", function() {deepEqual( Stem("entfremdete"), "entfremdet");});
test("entfremdetem -> entfremdet", function() {deepEqual( Stem("entfremdetem"), "entfremdet");});
test("entfremdeten -> entfremdet", function() {deepEqual( Stem("entfremdeten"), "entfremdet");});
test("entfremdung -> entfremd", function() {deepEqual( Stem("entfremdung"), "entfremd");});
test("entführten -> entfuhrt", function() {deepEqual( Stem("entführten"), "entfuhrt");});
test("entgangen -> entgang", function() {deepEqual( Stem("entgangen"), "entgang");});
test("entgegen -> entgeg", function() {deepEqual( Stem("entgegen"), "entgeg");});
test("entgegenarbeiten -> entgegenarbeit", function() {deepEqual( Stem("entgegenarbeiten"), "entgegenarbeit");});
test("entgegenbringen -> entgegenbring", function() {deepEqual( Stem("entgegenbringen"), "entgegenbring");});
test("entgegeneilen -> entgegeneil", function() {deepEqual( Stem("entgegeneilen"), "entgegeneil");});
test("entgegenflossen -> entgegenfloss", function() {deepEqual( Stem("entgegenflossen"), "entgegenfloss");});
test("entgegengefahren -> entgegengefahr", function() {deepEqual( Stem("entgegengefahren"), "entgegengefahr");});
test("entgegengehen -> entgegengeh", function() {deepEqual( Stem("entgegengehen"), "entgegengeh");});
test("entgegengekehrt -> entgegengekehrt", function() {deepEqual( Stem("entgegengekehrt"), "entgegengekehrt");});
test("entgegengesetzt -> entgegengesetzt", function() {deepEqual( Stem("entgegengesetzt"), "entgegengesetzt");});
test("entgegengesetzte -> entgegengesetzt", function() {deepEqual( Stem("entgegengesetzte"), "entgegengesetzt");});
test("entgegengesetzten -> entgegengesetzt", function() {deepEqual( Stem("entgegengesetzten"), "entgegengesetzt");});
test("entgegengesetzter -> entgegengesetzt", function() {deepEqual( Stem("entgegengesetzter"), "entgegengesetzt");});
test("entgegengesetztes -> entgegengesetzt", function() {deepEqual( Stem("entgegengesetztes"), "entgegengesetzt");});
test("entgegengetreten -> entgegengetret", function() {deepEqual( Stem("entgegengetreten"), "entgegengetret");});
test("entgegenhandle -> entgegenhandl", function() {deepEqual( Stem("entgegenhandle"), "entgegenhandl");});
test("entgegenhielt -> entgegenhielt", function() {deepEqual( Stem("entgegenhielt"), "entgegenhielt");});
test("entgegenkam -> entgegenkam", function() {deepEqual( Stem("entgegenkam"), "entgegenkam");});
test("entgegenkommen -> entgegenkomm", function() {deepEqual( Stem("entgegenkommen"), "entgegenkomm");});
test("entgegenkommende -> entgegenkomm", function() {deepEqual( Stem("entgegenkommende"), "entgegenkomm");});
test("entgegennehmen -> entgegennehm", function() {deepEqual( Stem("entgegennehmen"), "entgegennehm");});
test("entgegensetzen -> entgegensetz", function() {deepEqual( Stem("entgegensetzen"), "entgegensetz");});
test("entgegensetzt -> entgegensetzt", function() {deepEqual( Stem("entgegensetzt"), "entgegensetzt");});
test("entgegensetzung -> entgegensetz", function() {deepEqual( Stem("entgegensetzung"), "entgegensetz");});
test("entgegenstehende -> entgegensteh", function() {deepEqual( Stem("entgegenstehende"), "entgegensteh");});
test("entgegensteht -> entgegensteht", function() {deepEqual( Stem("entgegensteht"), "entgegensteht");});
test("entgegenstellen -> entgegenstell", function() {deepEqual( Stem("entgegenstellen"), "entgegenstell");});
test("entgegenstellte -> entgegenstellt", function() {deepEqual( Stem("entgegenstellte"), "entgegenstellt");});
test("entgegenstreckte -> entgegenstreckt", function() {deepEqual( Stem("entgegenstreckte"), "entgegenstreckt");});
test("entgegenstrich -> entgegenstrich", function() {deepEqual( Stem("entgegenstrich"), "entgegenstrich");});
test("entgegentrat -> entgegentrat", function() {deepEqual( Stem("entgegentrat"), "entgegentrat");});
test("entgegenwandernd -> entgegenwandernd", function() {deepEqual( Stem("entgegenwandernd"), "entgegenwandernd");});
test("entgegenzusehen -> entgegenzuseh", function() {deepEqual( Stem("entgegenzusehen"), "entgegenzuseh");});
test("entgegnete -> entgegnet", function() {deepEqual( Stem("entgegnete"), "entgegnet");});
test("entgehe -> entgeh", function() {deepEqual( Stem("entgehe"), "entgeh");});
test("entgehen -> entgeh", function() {deepEqual( Stem("entgehen"), "entgeh");});
test("entgeht -> entgeht", function() {deepEqual( Stem("entgeht"), "entgeht");});
test("entgeld -> entgeld", function() {deepEqual( Stem("entgeld"), "entgeld");});
test("entging -> entging", function() {deepEqual( Stem("entging"), "entging");});
test("entgleiten -> entgleit", function() {deepEqual( Stem("entgleiten"), "entgleit");});
test("enthält -> enthalt", function() {deepEqual( Stem("enthält"), "enthalt");});
test("enthalte -> enthalt", function() {deepEqual( Stem("enthalte"), "enthalt");});
test("enthalten -> enthalt", function() {deepEqual( Stem("enthalten"), "enthalt");});
test("enthaltende -> enthalt", function() {deepEqual( Stem("enthaltende"), "enthalt");});
test("enthaltenden -> enthalt", function() {deepEqual( Stem("enthaltenden"), "enthalt");});
test("enthaltene -> enthalt", function() {deepEqual( Stem("enthaltene"), "enthalt");});
test("enthaltsam -> enthaltsam", function() {deepEqual( Stem("enthaltsam"), "enthaltsam");});
test("enthaltsamkeit -> enthaltsam", function() {deepEqual( Stem("enthaltsamkeit"), "enthaltsam");});
test("entheiligt -> entheiligt", function() {deepEqual( Stem("entheiligt"), "entheiligt");});
test("entheiligung -> entheil", function() {deepEqual( Stem("entheiligung"), "entheil");});
test("entheiligungen -> entheil", function() {deepEqual( Stem("entheiligungen"), "entheil");});
test("enthielt -> enthielt", function() {deepEqual( Stem("enthielt"), "enthielt");});
test("enthielte -> enthielt", function() {deepEqual( Stem("enthielte"), "enthielt");});
test("enthielten -> enthielt", function() {deepEqual( Stem("enthielten"), "enthielt");});
test("enthoben -> enthob", function() {deepEqual( Stem("enthoben"), "enthob");});
test("enthüllen -> enthull", function() {deepEqual( Stem("enthüllen"), "enthull");});
test("enthüllt -> enthullt", function() {deepEqual( Stem("enthüllt"), "enthullt");});
test("enthusiasmus -> enthusiasmus", function() {deepEqual( Stem("enthusiasmus"), "enthusiasmus");});
test("enthusiasten -> enthusiast", function() {deepEqual( Stem("enthusiasten"), "enthusiast");});
test("entkam -> entkam", function() {deepEqual( Stem("entkam"), "entkam");});
test("entkleidet -> entkleidet", function() {deepEqual( Stem("entkleidet"), "entkleidet");});
test("entkleidete -> entkleidet", function() {deepEqual( Stem("entkleidete"), "entkleidet");});
test("entkleideten -> entkleidet", function() {deepEqual( Stem("entkleideten"), "entkleidet");});
test("entkommen -> entkomm", function() {deepEqual( Stem("entkommen"), "entkomm");});
test("entkommene -> entkomm", function() {deepEqual( Stem("entkommene"), "entkomm");});
test("entkorkten -> entkorkt", function() {deepEqual( Stem("entkorkten"), "entkorkt");});
test("entkräften -> entkraft", function() {deepEqual( Stem("entkräften"), "entkraft");});
test("entkräfteter -> entkraftet", function() {deepEqual( Stem("entkräfteter"), "entkraftet");});
test("entlang -> entlang", function() {deepEqual( Stem("entlang"), "entlang");});
test("entlanggerast -> entlanggerast", function() {deepEqual( Stem("entlanggerast"), "entlanggerast");});
test("entlass -> entlass", function() {deepEqual( Stem("entlass"), "entlass");});
test("entlaß -> entlass", function() {deepEqual( Stem("entlaß"), "entlass");});
test("entlasse -> entlass", function() {deepEqual( Stem("entlasse"), "entlass");});
test("entlassen -> entlass", function() {deepEqual( Stem("entlassen"), "entlass");});
test("entlässest -> entlass", function() {deepEqual( Stem("entlässest"), "entlass");});
test("entlässet -> entlasset", function() {deepEqual( Stem("entlässet"), "entlasset");});
test("entlässt -> entlasst", function() {deepEqual( Stem("entlässt"), "entlasst");});
test("entläßt -> entlasst", function() {deepEqual( Stem("entläßt"), "entlasst");});
test("entlassung -> entlass", function() {deepEqual( Stem("entlassung"), "entlass");});
test("entlassungen -> entlass", function() {deepEqual( Stem("entlassungen"), "entlass");});
test("entlastet -> entlastet", function() {deepEqual( Stem("entlastet"), "entlastet");});
test("entlastetder -> entlastetd", function() {deepEqual( Stem("entlastetder"), "entlastetd");});
test("entledigen -> entled", function() {deepEqual( Stem("entledigen"), "entled");});
test("entledigt -> entledigt", function() {deepEqual( Stem("entledigt"), "entledigt");});
test("entledigung -> entled", function() {deepEqual( Stem("entledigung"), "entled");});
test("entleeren -> entle", function() {deepEqual( Stem("entleeren"), "entle");});
test("entleerte -> entleert", function() {deepEqual( Stem("entleerte"), "entleert");});
test("entleerten -> entleert", function() {deepEqual( Stem("entleerten"), "entleert");});
test("entlegene -> entleg", function() {deepEqual( Stem("entlegene"), "entleg");});
test("entlegenen -> entleg", function() {deepEqual( Stem("entlegenen"), "entleg");});
test("entlegenste -> entlegen", function() {deepEqual( Stem("entlegenste"), "entlegen");});
test("entlehnen -> entlehn", function() {deepEqual( Stem("entlehnen"), "entlehn");});
test("entlehnten -> entlehnt", function() {deepEqual( Stem("entlehnten"), "entlehnt");});
test("entliess -> entliess", function() {deepEqual( Stem("entliess"), "entliess");});
test("entließ -> entliess", function() {deepEqual( Stem("entließ"), "entliess");});
test("entliessen -> entliess", function() {deepEqual( Stem("entliessen"), "entliess");});
test("entlocken -> entlock", function() {deepEqual( Stem("entlocken"), "entlock");});
test("entlockte -> entlockt", function() {deepEqual( Stem("entlockte"), "entlockt");});
test("entlohnen -> entlohn", function() {deepEqual( Stem("entlohnen"), "entlohn");});
test("entnahm -> entnahm", function() {deepEqual( Stem("entnahm"), "entnahm");});
test("entnehmen -> entnehm", function() {deepEqual( Stem("entnehmen"), "entnehm");});
test("entnommen -> entnomm", function() {deepEqual( Stem("entnommen"), "entnomm");});
test("entpuppte -> entpuppt", function() {deepEqual( Stem("entpuppte"), "entpuppt");});
test("entränne -> entrann", function() {deepEqual( Stem("entränne"), "entrann");});
test("entreissen -> entreiss", function() {deepEqual( Stem("entreissen"), "entreiss");});
test("entreißen -> entreiss", function() {deepEqual( Stem("entreißen"), "entreiss");});
test("entrinnen -> entrinn", function() {deepEqual( Stem("entrinnen"), "entrinn");});
test("entriss -> entriss", function() {deepEqual( Stem("entriss"), "entriss");});
test("entrissen -> entriss", function() {deepEqual( Stem("entrissen"), "entriss");});
test("entronnenen -> entronn", function() {deepEqual( Stem("entronnenen"), "entronn");});
test("entrüstet -> entrustet", function() {deepEqual( Stem("entrüstet"), "entrustet");});
test("entrüstung -> entrust", function() {deepEqual( Stem("entrüstung"), "entrust");});
test("entsage -> entsag", function() {deepEqual( Stem("entsage"), "entsag");});
test("entsagen -> entsag", function() {deepEqual( Stem("entsagen"), "entsag");});
test("entsagens -> entsag", function() {deepEqual( Stem("entsagens"), "entsag");});
test("entsagung -> entsag", function() {deepEqual( Stem("entsagung"), "entsag");});
test("entsagungsfähigkeit -> entsagungsfah", function() {deepEqual( Stem("entsagungsfähigkeit"), "entsagungsfah");});
test("entsandet -> entsandet", function() {deepEqual( Stem("entsandet"), "entsandet");});
test("entschädigen -> entschad", function() {deepEqual( Stem("entschädigen"), "entschad");});
test("entschädigung -> entschad", function() {deepEqual( Stem("entschädigung"), "entschad");});
test("entscheiden -> entscheid", function() {deepEqual( Stem("entscheiden"), "entscheid");});
test("entscheidend -> entscheid", function() {deepEqual( Stem("entscheidend"), "entscheid");});
test("entscheidende -> entscheid", function() {deepEqual( Stem("entscheidende"), "entscheid");});
test("entscheidenden -> entscheid", function() {deepEqual( Stem("entscheidenden"), "entscheid");});
test("entscheidender -> entscheid", function() {deepEqual( Stem("entscheidender"), "entscheid");});
test("entscheidendes -> entscheid", function() {deepEqual( Stem("entscheidendes"), "entscheid");});
test("entscheidet -> entscheidet", function() {deepEqual( Stem("entscheidet"), "entscheidet");});
test("entscheidung -> entscheid", function() {deepEqual( Stem("entscheidung"), "entscheid");});
test("entscheidungen -> entscheid", function() {deepEqual( Stem("entscheidungen"), "entscheid");});
test("entscheidungsgrund -> entscheidungsgrund", function() {deepEqual( Stem("entscheidungsgrund"), "entscheidungsgrund");});
test("entscheidungskampf -> entscheidungskampf", function() {deepEqual( Stem("entscheidungskampf"), "entscheidungskampf");});
test("entschiede -> entschied", function() {deepEqual( Stem("entschiede"), "entschied");});
test("entschieden -> entschied", function() {deepEqual( Stem("entschieden"), "entschied");});
test("entschiedene -> entschied", function() {deepEqual( Stem("entschiedene"), "entschied");});
test("entschiedenen -> entschied", function() {deepEqual( Stem("entschiedenen"), "entschied");});
test("entschiedenheit -> entschied", function() {deepEqual( Stem("entschiedenheit"), "entschied");});
test("entschlafen -> entschlaf", function() {deepEqual( Stem("entschlafen"), "entschlaf");});
test("entschlief -> entschlief", function() {deepEqual( Stem("entschlief"), "entschlief");});
test("entschliessen -> entschliess", function() {deepEqual( Stem("entschliessen"), "entschliess");});
test("entschliessung -> entschliess", function() {deepEqual( Stem("entschliessung"), "entschliess");});
test("entschließung -> entschliess", function() {deepEqual( Stem("entschließung"), "entschliess");});
test("entschliessungen -> entschliess", function() {deepEqual( Stem("entschliessungen"), "entschliess");});
test("entschloss -> entschloss", function() {deepEqual( Stem("entschloss"), "entschloss");});
test("entschloß -> entschloss", function() {deepEqual( Stem("entschloß"), "entschloss");});
test("entschlossen -> entschloss", function() {deepEqual( Stem("entschlossen"), "entschloss");});
test("entschlossene -> entschloss", function() {deepEqual( Stem("entschlossene"), "entschloss");});
test("entschlossenen -> entschloss", function() {deepEqual( Stem("entschlossenen"), "entschloss");});
test("entschlossener -> entschloss", function() {deepEqual( Stem("entschlossener"), "entschloss");});
test("entschlossenes -> entschloss", function() {deepEqual( Stem("entschlossenes"), "entschloss");});
test("entschlossenheit -> entschloss", function() {deepEqual( Stem("entschlossenheit"), "entschloss");});
test("entschlüpfe -> entschlupf", function() {deepEqual( Stem("entschlüpfe"), "entschlupf");});
test("entschlüpfen -> entschlupf", function() {deepEqual( Stem("entschlüpfen"), "entschlupf");});
test("entschluss -> entschluss", function() {deepEqual( Stem("entschluss"), "entschluss");});
test("entschluß -> entschluss", function() {deepEqual( Stem("entschluß"), "entschluss");});
test("entschlusse -> entschluss", function() {deepEqual( Stem("entschlusse"), "entschluss");});
test("entschuldige -> entschuld", function() {deepEqual( Stem("entschuldige"), "entschuld");});
test("entschuldigen -> entschuld", function() {deepEqual( Stem("entschuldigen"), "entschuld");});
test("entschuldigende -> entschuld", function() {deepEqual( Stem("entschuldigende"), "entschuld");});
test("entschuldigt -> entschuldigt", function() {deepEqual( Stem("entschuldigt"), "entschuldigt");});
test("entschuldigung -> entschuld", function() {deepEqual( Stem("entschuldigung"), "entschuld");});
test("entschwand -> entschwand", function() {deepEqual( Stem("entschwand"), "entschwand");});
test("entschwebte -> entschwebt", function() {deepEqual( Stem("entschwebte"), "entschwebt");});
test("entschwindet -> entschwindet", function() {deepEqual( Stem("entschwindet"), "entschwindet");});
test("entschwunden -> entschwund", function() {deepEqual( Stem("entschwunden"), "entschwund");});
test("entseelt -> entseelt", function() {deepEqual( Stem("entseelt"), "entseelt");});
test("entsetzen -> entsetz", function() {deepEqual( Stem("entsetzen"), "entsetz");});
test("entsetzlich -> entsetz", function() {deepEqual( Stem("entsetzlich"), "entsetz");});
test("entsetzliche -> entsetz", function() {deepEqual( Stem("entsetzliche"), "entsetz");});
test("entsetzlichen -> entsetz", function() {deepEqual( Stem("entsetzlichen"), "entsetz");});
test("entsetzliches -> entsetz", function() {deepEqual( Stem("entsetzliches"), "entsetz");});
test("entsetzt -> entsetzt", function() {deepEqual( Stem("entsetzt"), "entsetzt");});
test("entsinne -> entsinn", function() {deepEqual( Stem("entsinne"), "entsinn");});
test("entsinnen -> entsinn", function() {deepEqual( Stem("entsinnen"), "entsinn");});
test("entsinnst -> entsinn", function() {deepEqual( Stem("entsinnst"), "entsinn");});
test("entsittlichung -> entsittlich", function() {deepEqual( Stem("entsittlichung"), "entsittlich");});
test("entspann -> entspann", function() {deepEqual( Stem("entspann"), "entspann");});
test("entspannt -> entspannt", function() {deepEqual( Stem("entspannt"), "entspannt");});
test("entsprach -> entsprach", function() {deepEqual( Stem("entsprach"), "entsprach");});
test("entspränge -> entsprang", function() {deepEqual( Stem("entspränge"), "entsprang");});
test("entsprangen -> entsprang", function() {deepEqual( Stem("entsprangen"), "entsprang");});
test("entspreche -> entsprech", function() {deepEqual( Stem("entspreche"), "entsprech");});
test("entsprechen -> entsprech", function() {deepEqual( Stem("entsprechen"), "entsprech");});
test("entsprechend -> entsprech", function() {deepEqual( Stem("entsprechend"), "entsprech");});
test("entsprechende -> entsprech", function() {deepEqual( Stem("entsprechende"), "entsprech");});
test("entsprechenden -> entsprech", function() {deepEqual( Stem("entsprechenden"), "entsprech");});
test("entsprechender -> entsprech", function() {deepEqual( Stem("entsprechender"), "entsprech");});
test("entsprechendes -> entsprech", function() {deepEqual( Stem("entsprechendes"), "entsprech");});
test("entsprechung -> entsprech", function() {deepEqual( Stem("entsprechung"), "entsprech");});
test("entsprechungen -> entsprech", function() {deepEqual( Stem("entsprechungen"), "entsprech");});
test("entsprechungsverhältnis -> entsprechungsverhaltnis", function() {deepEqual( Stem("entsprechungsverhältnis"), "entsprechungsverhaltnis");});
test("entspricht -> entspricht", function() {deepEqual( Stem("entspricht"), "entspricht");});
test("entspringe -> entspring", function() {deepEqual( Stem("entspringe"), "entspring");});
test("entspringen -> entspring", function() {deepEqual( Stem("entspringen"), "entspring");});
test("entspringend -> entspring", function() {deepEqual( Stem("entspringend"), "entspring");});
test("entspringt -> entspringt", function() {deepEqual( Stem("entspringt"), "entspringt");});
test("entsprungen -> entsprung", function() {deepEqual( Stem("entsprungen"), "entsprung");});
test("entstand -> entstand", function() {deepEqual( Stem("entstand"), "entstand");});
test("entstände -> entstand", function() {deepEqual( Stem("entstände"), "entstand");});
test("entstanden -> entstand", function() {deepEqual( Stem("entstanden"), "entstand");});
test("entstehe -> entsteh", function() {deepEqual( Stem("entstehe"), "entsteh");});
test("entstehen -> entsteh", function() {deepEqual( Stem("entstehen"), "entsteh");});
test("entstehende -> entsteh", function() {deepEqual( Stem("entstehende"), "entsteh");});
test("entstehens -> entsteh", function() {deepEqual( Stem("entstehens"), "entsteh");});
test("entstehn -> entstehn", function() {deepEqual( Stem("entstehn"), "entstehn");});
test("entsteht -> entsteht", function() {deepEqual( Stem("entsteht"), "entsteht");});
test("entstehung -> entsteh", function() {deepEqual( Stem("entstehung"), "entsteh");});
test("entstehungsursache -> entstehungsursach", function() {deepEqual( Stem("entstehungsursache"), "entstehungsursach");});
test("entstehungsursachen -> entstehungsursach", function() {deepEqual( Stem("entstehungsursachen"), "entstehungsursach");});
test("entströmen -> entstrom", function() {deepEqual( Stem("entströmen"), "entstrom");});
test("entströmten -> entstromt", function() {deepEqual( Stem("entströmten"), "entstromt");});
test("entsündigen -> entsund", function() {deepEqual( Stem("entsündigen"), "entsund");});
test("entsündigung -> entsund", function() {deepEqual( Stem("entsündigung"), "entsund");});
test("enttäuschend -> enttausch", function() {deepEqual( Stem("enttäuschend"), "enttausch");});
test("enttäuschung -> enttausch", function() {deepEqual( Stem("enttäuschung"), "enttausch");});
test("enttäuschungen -> enttausch", function() {deepEqual( Stem("enttäuschungen"), "enttausch");});
test("entvölkerte -> entvolkert", function() {deepEqual( Stem("entvölkerte"), "entvolkert");});
test("entwaffnet -> entwaffnet", function() {deepEqual( Stem("entwaffnet"), "entwaffnet");});
test("entwand -> entwand", function() {deepEqual( Stem("entwand"), "entwand");});
test("entwarf -> entwarf", function() {deepEqual( Stem("entwarf"), "entwarf");});
test("entweder -> entwed", function() {deepEqual( Stem("entweder"), "entwed");});
test("entweicht -> entweicht", function() {deepEqual( Stem("entweicht"), "entweicht");});
test("entweihe -> entweih", function() {deepEqual( Stem("entweihe"), "entweih");});
test("entweihen -> entweih", function() {deepEqual( Stem("entweihen"), "entweih");});
test("entweiher -> entweih", function() {deepEqual( Stem("entweiher"), "entweih");});
test("entweihern -> entweih", function() {deepEqual( Stem("entweihern"), "entweih");});
test("entweiht -> entweiht", function() {deepEqual( Stem("entweiht"), "entweiht");});
test("entweihte -> entweiht", function() {deepEqual( Stem("entweihte"), "entweiht");});
test("entweihten -> entweiht", function() {deepEqual( Stem("entweihten"), "entweiht");});
test("entweihtes -> entweiht", function() {deepEqual( Stem("entweihtes"), "entweiht");});
test("entweihung -> entweih", function() {deepEqual( Stem("entweihung"), "entweih");});
test("entweihungen -> entweih", function() {deepEqual( Stem("entweihungen"), "entweih");});
test("entwendet -> entwendet", function() {deepEqual( Stem("entwendet"), "entwendet");});
test("entwendete -> entwendet", function() {deepEqual( Stem("entwendete"), "entwendet");});
test("entwerfen -> entwerf", function() {deepEqual( Stem("entwerfen"), "entwerf");});
test("entwich -> entwich", function() {deepEqual( Stem("entwich"), "entwich");});
test("entwichen -> entwich", function() {deepEqual( Stem("entwichen"), "entwich");});
test("entwichene -> entwich", function() {deepEqual( Stem("entwichene"), "entwich");});
test("entwichenen -> entwich", function() {deepEqual( Stem("entwichenen"), "entwich");});
test("entwickeln -> entwickeln", function() {deepEqual( Stem("entwickeln"), "entwickeln");});
test("entwickelt -> entwickelt", function() {deepEqual( Stem("entwickelt"), "entwickelt");});
test("entwickelte -> entwickelt", function() {deepEqual( Stem("entwickelte"), "entwickelt");});
test("entwickelten -> entwickelt", function() {deepEqual( Stem("entwickelten"), "entwickelt");});
test("entwickelung -> entwickel", function() {deepEqual( Stem("entwickelung"), "entwickel");});
test("entwicklung -> entwickl", function() {deepEqual( Stem("entwicklung"), "entwickl");});
test("entwicklungen -> entwickl", function() {deepEqual( Stem("entwicklungen"), "entwickl");});
test("entwicklungsstufe -> entwicklungsstuf", function() {deepEqual( Stem("entwicklungsstufe"), "entwicklungsstuf");});
test("entwinden -> entwind", function() {deepEqual( Stem("entwinden"), "entwind");});
test("entwirft -> entwirft", function() {deepEqual( Stem("entwirft"), "entwirft");});
test("entwischen -> entwisch", function() {deepEqual( Stem("entwischen"), "entwisch");});
test("entwischest -> entwisch", function() {deepEqual( Stem("entwischest"), "entwisch");});
test("entwöhnt -> entwohnt", function() {deepEqual( Stem("entwöhnt"), "entwohnt");});
test("entwölkte -> entwolkt", function() {deepEqual( Stem("entwölkte"), "entwolkt");});
test("entworfen -> entworf", function() {deepEqual( Stem("entworfen"), "entworf");});
test("entworfenen -> entworf", function() {deepEqual( Stem("entworfenen"), "entworf");});
test("entwürdigend -> entwurd", function() {deepEqual( Stem("entwürdigend"), "entwurd");});
test("entwurfes -> entwurf", function() {deepEqual( Stem("entwurfes"), "entwurf");});
test("entziehen -> entzieh", function() {deepEqual( Stem("entziehen"), "entzieh");});
test("entziehung -> entzieh", function() {deepEqual( Stem("entziehung"), "entzieh");});
test("entzog -> entzog", function() {deepEqual( Stem("entzog"), "entzog");});
test("entzogen -> entzog", function() {deepEqual( Stem("entzogen"), "entzog");});
test("entzögen -> entzog", function() {deepEqual( Stem("entzögen"), "entzog");});
test("entzücken -> entzuck", function() {deepEqual( Stem("entzücken"), "entzuck");});
test("entzückend -> entzuck", function() {deepEqual( Stem("entzückend"), "entzuck");});
test("entzückt -> entzuckt", function() {deepEqual( Stem("entzückt"), "entzuckt");});
test("entzünden -> entzund", function() {deepEqual( Stem("entzünden"), "entzund");});
test("entzündete -> entzundet", function() {deepEqual( Stem("entzündete"), "entzundet");});
test("entzündliches -> entzund", function() {deepEqual( Stem("entzündliches"), "entzund");});
test("entzwei -> entzwei", function() {deepEqual( Stem("entzwei"), "entzwei");});
test("entzweigesägt -> entzweigesagt", function() {deepEqual( Stem("entzweigesägt"), "entzweigesagt");});
test("entzweiging -> entzweiging", function() {deepEqual( Stem("entzweiging"), "entzweiging");});
test("eorum -> eorum", function() {deepEqual( Stem("eorum"), "eorum");});
test("epd -> epd", function() {deepEqual( Stem("epd"), "epd");});
test("epha -> epha", function() {deepEqual( Stem("epha"), "epha");});
test("ephas -> ephas", function() {deepEqual( Stem("ephas"), "ephas");});
test("ephod -> ephod", function() {deepEqual( Stem("ephod"), "ephod");});
test("ephode -> ephod", function() {deepEqual( Stem("ephode"), "ephod");});
test("ephods -> ephod", function() {deepEqual( Stem("ephods"), "ephod");});
test("ephraim -> ephraim", function() {deepEqual( Stem("ephraim"), "ephraim");});
test("epidermis -> epidermis", function() {deepEqual( Stem("epidermis"), "epidermis");});
test("epijumhtikon -> epijumhtikon", function() {deepEqual( Stem("epijumhtikon"), "epijumhtikon");});
test("epikur -> epikur", function() {deepEqual( Stem("epikur"), "epikur");});
test("epikureer -> epikure", function() {deepEqual( Stem("epikureer"), "epikure");});
test("epods -> epod", function() {deepEqual( Stem("epods"), "epod");});
test("er -> er", function() {deepEqual( Stem("er"), "er");});
test("erbarme -> erbarm", function() {deepEqual( Stem("erbarme"), "erbarm");});
test("erbarmen -> erbarm", function() {deepEqual( Stem("erbarmen"), "erbarm");});
test("erbarmer -> erbarm", function() {deepEqual( Stem("erbarmer"), "erbarm");});
test("erbärmlich -> erbarm", function() {deepEqual( Stem("erbärmlich"), "erbarm");});
test("erbärmliche -> erbarm", function() {deepEqual( Stem("erbärmliche"), "erbarm");});
test("erbärmlichen -> erbarm", function() {deepEqual( Stem("erbärmlichen"), "erbarm");});
test("erbärmliches -> erbarm", function() {deepEqual( Stem("erbärmliches"), "erbarm");});
test("erbärmlichsten -> erbarm", function() {deepEqual( Stem("erbärmlichsten"), "erbarm");});
test("erbarmt -> erbarmt", function() {deepEqual( Stem("erbarmt"), "erbarmt");});
test("erbarmte -> erbarmt", function() {deepEqual( Stem("erbarmte"), "erbarmt");});
test("erbarmung -> erbarm", function() {deepEqual( Stem("erbarmung"), "erbarm");});
test("erbarmungen -> erbarm", function() {deepEqual( Stem("erbarmungen"), "erbarm");});
test("erbarmungslosen -> erbarmungslos", function() {deepEqual( Stem("erbarmungslosen"), "erbarmungslos");});
test("erbat -> erbat", function() {deepEqual( Stem("erbat"), "erbat");});
test("erbauer -> erbau", function() {deepEqual( Stem("erbauer"), "erbau");});
test("erbaulich -> erbaulich", function() {deepEqual( Stem("erbaulich"), "erbaulich");});
test("erbaulichen -> erbaulich", function() {deepEqual( Stem("erbaulichen"), "erbaulich");});
test("erbaulicher -> erbaulich", function() {deepEqual( Stem("erbaulicher"), "erbaulich");});
test("erbauliches -> erbaulich", function() {deepEqual( Stem("erbauliches"), "erbaulich");});
test("erbaut -> erbaut", function() {deepEqual( Stem("erbaut"), "erbaut");});
test("erbaute -> erbaut", function() {deepEqual( Stem("erbaute"), "erbaut");});
test("erbauungsbuch -> erbauungsbuch", function() {deepEqual( Stem("erbauungsbuch"), "erbauungsbuch");});
test("erbböse -> erbbos", function() {deepEqual( Stem("erbböse"), "erbbos");});
test("erbbösen -> erbbos", function() {deepEqual( Stem("erbbösen"), "erbbos");});
test("erbböses -> erbbos", function() {deepEqual( Stem("erbböses"), "erbbos");});
test("erbe -> erb", function() {deepEqual( Stem("erbe"), "erb");});
test("erbeben -> erbeb", function() {deepEqual( Stem("erbeben"), "erbeb");});
test("erbebt -> erbebt", function() {deepEqual( Stem("erbebt"), "erbebt");});
test("erbebte -> erbebt", function() {deepEqual( Stem("erbebte"), "erbebt");});
test("erben -> erb", function() {deepEqual( Stem("erben"), "erb");});
test("erbes -> erb", function() {deepEqual( Stem("erbes"), "erb");});
test("erbeten -> erbet", function() {deepEqual( Stem("erbeten"), "erbet");});
test("erbetenen -> erbet", function() {deepEqual( Stem("erbetenen"), "erbet");});
test("erbeutete -> erbeutet", function() {deepEqual( Stem("erbeutete"), "erbeutet");});
test("erbeuteten -> erbeutet", function() {deepEqual( Stem("erbeuteten"), "erbeutet");});
test("erbeutung -> erbeut", function() {deepEqual( Stem("erbeutung"), "erbeut");});
test("erbfeind -> erbfeind", function() {deepEqual( Stem("erbfeind"), "erbfeind");});
test("erbgrafen -> erbgraf", function() {deepEqual( Stem("erbgrafen"), "erbgraf");});
test("erbgüter -> erbgut", function() {deepEqual( Stem("erbgüter"), "erbgut");});
test("erbherren -> erbherr", function() {deepEqual( Stem("erbherren"), "erbherr");});
test("erbherrn -> erbherrn", function() {deepEqual( Stem("erbherrn"), "erbherrn");});
test("erbinnen -> erbinn", function() {deepEqual( Stem("erbinnen"), "erbinn");});
test("erbittere -> erbitt", function() {deepEqual( Stem("erbittere"), "erbitt");});
test("erbittert -> erbittert", function() {deepEqual( Stem("erbittert"), "erbittert");});
test("erblassen -> erblass", function() {deepEqual( Stem("erblassen"), "erblass");});
test("erblasste -> erblasst", function() {deepEqual( Stem("erblasste"), "erblasst");});
test("erblassten -> erblasst", function() {deepEqual( Stem("erblassten"), "erblasst");});
test("erbleichende -> erbleich", function() {deepEqual( Stem("erbleichende"), "erbleich");});
test("erbleichte -> erbleicht", function() {deepEqual( Stem("erbleichte"), "erbleicht");});
test("erblich -> erblich", function() {deepEqual( Stem("erblich"), "erblich");});
test("erbliche -> erblich", function() {deepEqual( Stem("erbliche"), "erblich");});
test("erblicke -> erblick", function() {deepEqual( Stem("erblicke"), "erblick");});
test("erblicken -> erblick", function() {deepEqual( Stem("erblicken"), "erblick");});
test("erblickt -> erblickt", function() {deepEqual( Stem("erblickt"), "erblickt");});
test("erblickte -> erblickt", function() {deepEqual( Stem("erblickte"), "erblickt");});
test("erblindeten -> erblindet", function() {deepEqual( Stem("erblindeten"), "erblindet");});
test("erbost -> erbost", function() {deepEqual( Stem("erbost"), "erbost");});
test("erboste -> erbost", function() {deepEqual( Stem("erboste"), "erbost");});
test("erbosten -> erbost", function() {deepEqual( Stem("erbosten"), "erbost");});
test("erboster -> erbost", function() {deepEqual( Stem("erboster"), "erbost");});
test("erbracht -> erbracht", function() {deepEqual( Stem("erbracht"), "erbracht");});
test("erbrechen -> erbrech", function() {deepEqual( Stem("erbrechen"), "erbrech");});
test("erbringen -> erbring", function() {deepEqual( Stem("erbringen"), "erbring");});
test("erbschaft -> erbschaft", function() {deepEqual( Stem("erbschaft"), "erbschaft");});
test("erbschaften -> erbschaft", function() {deepEqual( Stem("erbschaften"), "erbschaft");});
test("erbsen -> erbs", function() {deepEqual( Stem("erbsen"), "erbs");});
test("erbsenkost -> erbsenkost", function() {deepEqual( Stem("erbsenkost"), "erbsenkost");});
test("erbte -> erbt", function() {deepEqual( Stem("erbte"), "erbt");});
test("erbteil -> erbteil", function() {deepEqual( Stem("erbteil"), "erbteil");});
test("erbtum -> erbtum", function() {deepEqual( Stem("erbtum"), "erbtum");});
test("erdacht -> erdacht", function() {deepEqual( Stem("erdacht"), "erdacht");});
test("erdachten -> erdacht", function() {deepEqual( Stem("erdachten"), "erdacht");});
test("erdball -> erdball", function() {deepEqual( Stem("erdball"), "erdball");});
test("erdbeben -> erdbeb", function() {deepEqual( Stem("erdbeben"), "erdbeb");});
test("erdbeere -> erdbe", function() {deepEqual( Stem("erdbeere"), "erdbe");});
test("erdboden -> erdbod", function() {deepEqual( Stem("erdboden"), "erdbod");});
test("erdbodens -> erdbod", function() {deepEqual( Stem("erdbodens"), "erdbod");});
test("erde -> erd", function() {deepEqual( Stem("erde"), "erd");});
test("erden -> erd", function() {deepEqual( Stem("erden"), "erd");});
test("erdenken -> erdenk", function() {deepEqual( Stem("erdenken"), "erdenk");});
test("erdenklichen -> erdenk", function() {deepEqual( Stem("erdenklichen"), "erdenk");});
test("erdgeruch -> erdgeruch", function() {deepEqual( Stem("erdgeruch"), "erdgeruch");});
test("erdgeschoss -> erdgeschoss", function() {deepEqual( Stem("erdgeschoss"), "erdgeschoss");});
test("erdgeschoßwerkstätten -> erdgeschosswerkstatt", function() {deepEqual( Stem("erdgeschoßwerkstätten"), "erdgeschosswerkstatt");});
test("erdharz -> erdharz", function() {deepEqual( Stem("erdharz"), "erdharz");});
test("erdharzes -> erdharz", function() {deepEqual( Stem("erdharzes"), "erdharz");});
test("erdichten -> erdicht", function() {deepEqual( Stem("erdichten"), "erdicht");});
test("erdichtete -> erdichtet", function() {deepEqual( Stem("erdichtete"), "erdichtet");});
test("erdichtetem -> erdichtet", function() {deepEqual( Stem("erdichtetem"), "erdichtet");});
test("erdichteten -> erdichtet", function() {deepEqual( Stem("erdichteten"), "erdichtet");});
test("erdichtetes -> erdichtet", function() {deepEqual( Stem("erdichtetes"), "erdichtet");});
test("erdkreis -> erdkreis", function() {deepEqual( Stem("erdkreis"), "erdkreis");});
test("erdkreises -> erdkreis", function() {deepEqual( Stem("erdkreises"), "erdkreis");});
test("erdmolch -> erdmolch", function() {deepEqual( Stem("erdmolch"), "erdmolch");});
test("erdreich -> erdreich", function() {deepEqual( Stem("erdreich"), "erdreich");});
test("erdrosselt -> erdrosselt", function() {deepEqual( Stem("erdrosselt"), "erdrosselt");});
test("erdulden -> erduld", function() {deepEqual( Stem("erdulden"), "erduld");});
test("erduldet -> erduldet", function() {deepEqual( Stem("erduldet"), "erduldet");});
test("erdwelle -> erdwell", function() {deepEqual( Stem("erdwelle"), "erdwell");});
test("ereignen -> ereign", function() {deepEqual( Stem("ereignen"), "ereign");});
test("ereignenden -> ereign", function() {deepEqual( Stem("ereignenden"), "ereign");});
test("ereignet -> ereignet", function() {deepEqual( Stem("ereignet"), "ereignet");});
test("ereignete -> ereignet", function() {deepEqual( Stem("ereignete"), "ereignet");});
test("ereignis -> ereignis", function() {deepEqual( Stem("ereignis"), "ereignis");});
test("ereignisse -> ereignis", function() {deepEqual( Stem("ereignisse"), "ereignis");});
test("ereignissen -> ereignis", function() {deepEqual( Stem("ereignissen"), "ereignis");});
test("ereignisses -> ereignis", function() {deepEqual( Stem("ereignisses"), "ereignis");});
test("ererbt -> ererbt", function() {deepEqual( Stem("ererbt"), "ererbt");});
test("ererbten -> ererbt", function() {deepEqual( Stem("ererbten"), "ererbt");});
test("erfahre -> erfahr", function() {deepEqual( Stem("erfahre"), "erfahr");});
test("erfahren -> erfahr", function() {deepEqual( Stem("erfahren"), "erfahr");});
test("erfahrene -> erfahr", function() {deepEqual( Stem("erfahrene"), "erfahr");});
test("erfahrenern -> erfahr", function() {deepEqual( Stem("erfahrenern"), "erfahr");});
test("erfahrner -> erfahrn", function() {deepEqual( Stem("erfahrner"), "erfahrn");});
test("erfährt -> erfahrt", function() {deepEqual( Stem("erfährt"), "erfahrt");});
test("erfahrung -> erfahr", function() {deepEqual( Stem("erfahrung"), "erfahr");});
test("erfahrungen -> erfahr", function() {deepEqual( Stem("erfahrungen"), "erfahr");});
test("erfahrungsbeweise -> erfahrungsbeweis", function() {deepEqual( Stem("erfahrungsbeweise"), "erfahrungsbeweis");});
test("erfahrungsfalle -> erfahrungsfall", function() {deepEqual( Stem("erfahrungsfalle"), "erfahrungsfall");});
test("erfahrungsfolgen -> erfahrungsfolg", function() {deepEqual( Stem("erfahrungsfolgen"), "erfahrungsfolg");});
test("erfahrungsgegenstände -> erfahrungsgegenstand", function() {deepEqual( Stem("erfahrungsgegenstände"), "erfahrungsgegenstand");});
test("erfahrungsgemäss -> erfahrungsgemass", function() {deepEqual( Stem("erfahrungsgemäss"), "erfahrungsgemass");});
test("erfahrungsgemäß -> erfahrungsgemass", function() {deepEqual( Stem("erfahrungsgemäß"), "erfahrungsgemass");});
test("erfahrungsurteilen -> erfahrungsurteil", function() {deepEqual( Stem("erfahrungsurteilen"), "erfahrungsurteil");});
test("erfand -> erfand", function() {deepEqual( Stem("erfand"), "erfand");});
test("erfanden -> erfand", function() {deepEqual( Stem("erfanden"), "erfand");});
test("erfassen -> erfass", function() {deepEqual( Stem("erfassen"), "erfass");});
test("erfasst -> erfasst", function() {deepEqual( Stem("erfasst"), "erfasst");});
test("erfaßt -> erfasst", function() {deepEqual( Stem("erfaßt"), "erfasst");});
test("erfasste -> erfasst", function() {deepEqual( Stem("erfasste"), "erfasst");});
test("erfinde -> erfind", function() {deepEqual( Stem("erfinde"), "erfind");});
test("erfinden -> erfind", function() {deepEqual( Stem("erfinden"), "erfind");});
test("erfindung -> erfind", function() {deepEqual( Stem("erfindung"), "erfind");});
test("erfindungsgabe -> erfindungsgab", function() {deepEqual( Stem("erfindungsgabe"), "erfindungsgab");});
test("erfindungsgenie -> erfindungsgeni", function() {deepEqual( Stem("erfindungsgenie"), "erfindungsgeni");});
test("erfindungsreiche -> erfindungsreich", function() {deepEqual( Stem("erfindungsreiche"), "erfindungsreich");});
test("erfindungsreiches -> erfindungsreich", function() {deepEqual( Stem("erfindungsreiches"), "erfindungsreich");});
test("erflehen -> erfleh", function() {deepEqual( Stem("erflehen"), "erfleh");});
test("erfolg -> erfolg", function() {deepEqual( Stem("erfolg"), "erfolg");});
test("erfolge -> erfolg", function() {deepEqual( Stem("erfolge"), "erfolg");});
test("erfolgen -> erfolg", function() {deepEqual( Stem("erfolgen"), "erfolg");});
test("erfolgenden -> erfolg", function() {deepEqual( Stem("erfolgenden"), "erfolg");});
test("erfolges -> erfolg", function() {deepEqual( Stem("erfolges"), "erfolg");});
test("erfolglos -> erfolglos", function() {deepEqual( Stem("erfolglos"), "erfolglos");});
test("erfolglosen -> erfolglos", function() {deepEqual( Stem("erfolglosen"), "erfolglos");});
test("erfolgreich -> erfolgreich", function() {deepEqual( Stem("erfolgreich"), "erfolgreich");});
test("erfolgsrezept -> erfolgsrezept", function() {deepEqual( Stem("erfolgsrezept"), "erfolgsrezept");});
test("erfolgt -> erfolgt", function() {deepEqual( Stem("erfolgt"), "erfolgt");});
test("erfolgte -> erfolgt", function() {deepEqual( Stem("erfolgte"), "erfolgt");});
test("erforderlich -> erford", function() {deepEqual( Stem("erforderlich"), "erford");});
test("erforderliche -> erford", function() {deepEqual( Stem("erforderliche"), "erford");});
test("erforderlichen -> erford", function() {deepEqual( Stem("erforderlichen"), "erford");});
test("erfordern -> erford", function() {deepEqual( Stem("erfordern"), "erford");});
test("erfordert -> erfordert", function() {deepEqual( Stem("erfordert"), "erfordert");});
test("erforderte -> erfordert", function() {deepEqual( Stem("erforderte"), "erfordert");});
test("erforsche -> erforsch", function() {deepEqual( Stem("erforsche"), "erforsch");});
test("erforschen -> erforsch", function() {deepEqual( Stem("erforschen"), "erforsch");});
test("erforscht -> erforscht", function() {deepEqual( Stem("erforscht"), "erforscht");});
test("erforschten -> erforscht", function() {deepEqual( Stem("erforschten"), "erforscht");});
test("erforschung -> erforsch", function() {deepEqual( Stem("erforschung"), "erforsch");});
test("erforschungen -> erforsch", function() {deepEqual( Stem("erforschungen"), "erforsch");});
test("erfreuen -> erfreu", function() {deepEqual( Stem("erfreuen"), "erfreu");});
test("erfreuete -> erfreuet", function() {deepEqual( Stem("erfreuete"), "erfreuet");});
test("erfreulich -> erfreulich", function() {deepEqual( Stem("erfreulich"), "erfreulich");});
test("erfreuliche -> erfreulich", function() {deepEqual( Stem("erfreuliche"), "erfreulich");});
test("erfreut -> erfreut", function() {deepEqual( Stem("erfreut"), "erfreut");});
test("erfreute -> erfreut", function() {deepEqual( Stem("erfreute"), "erfreut");});
test("erfreuten -> erfreut", function() {deepEqual( Stem("erfreuten"), "erfreut");});
test("erfrischen -> erfrisch", function() {deepEqual( Stem("erfrischen"), "erfrisch");});
test("erfrischte -> erfrischt", function() {deepEqual( Stem("erfrischte"), "erfrischt");});
test("erfrischung -> erfrisch", function() {deepEqual( Stem("erfrischung"), "erfrisch");});
test("erfroren -> erfror", function() {deepEqual( Stem("erfroren"), "erfror");});
test("erfrorenen -> erfror", function() {deepEqual( Stem("erfrorenen"), "erfror");});
test("erfuhr -> erfuhr", function() {deepEqual( Stem("erfuhr"), "erfuhr");});
test("erfuhren -> erfuhr", function() {deepEqual( Stem("erfuhren"), "erfuhr");});
test("erfüllen -> erfull", function() {deepEqual( Stem("erfüllen"), "erfull");});
test("erfüllet -> erfullet", function() {deepEqual( Stem("erfüllet"), "erfullet");});
test("erfüllt -> erfullt", function() {deepEqual( Stem("erfüllt"), "erfullt");});
test("erfüllte -> erfullt", function() {deepEqual( Stem("erfüllte"), "erfullt");});
test("erfüllten -> erfullt", function() {deepEqual( Stem("erfüllten"), "erfullt");});
test("erfüllung -> erfull", function() {deepEqual( Stem("erfüllung"), "erfull");});
test("erfunden -> erfund", function() {deepEqual( Stem("erfunden"), "erfund");});
test("erfundenen -> erfund", function() {deepEqual( Stem("erfundenen"), "erfund");});
test("ergab -> ergab", function() {deepEqual( Stem("ergab"), "ergab");});
test("ergaben -> ergab", function() {deepEqual( Stem("ergaben"), "ergab");});
test("ergangen -> ergang", function() {deepEqual( Stem("ergangen"), "ergang");});
test("ergänzen -> erganz", function() {deepEqual( Stem("ergänzen"), "erganz");});
test("ergänzenden -> erganz", function() {deepEqual( Stem("ergänzenden"), "erganz");});
test("ergänzt -> erganzt", function() {deepEqual( Stem("ergänzt"), "erganzt");});
test("ergänzte -> erganzt", function() {deepEqual( Stem("ergänzte"), "erganzt");});
test("ergänzung -> erganz", function() {deepEqual( Stem("ergänzung"), "erganz");});
test("ergänzungsband -> erganzungsband", function() {deepEqual( Stem("ergänzungsband"), "erganzungsband");});
test("ergebe -> ergeb", function() {deepEqual( Stem("ergebe"), "ergeb");});
test("ergeben -> ergeb", function() {deepEqual( Stem("ergeben"), "ergeb");});
test("ergebenen -> ergeb", function() {deepEqual( Stem("ergebenen"), "ergeb");});
test("ergebenheit -> ergeb", function() {deepEqual( Stem("ergebenheit"), "ergeb");});
test("ergebenst -> ergeben", function() {deepEqual( Stem("ergebenst"), "ergeben");});
test("ergebnis -> ergebnis", function() {deepEqual( Stem("ergebnis"), "ergebnis");});
test("ergebnisse -> ergebnis", function() {deepEqual( Stem("ergebnisse"), "ergebnis");});
test("ergebnissen -> ergebnis", function() {deepEqual( Stem("ergebnissen"), "ergebnis");});
test("ergebung -> ergeb", function() {deepEqual( Stem("ergebung"), "ergeb");});
test("ergebungsvoll -> ergebungsvoll", function() {deepEqual( Stem("ergebungsvoll"), "ergebungsvoll");});
test("ergehen -> ergeh", function() {deepEqual( Stem("ergehen"), "ergeh");});
test("ergeht -> ergeht", function() {deepEqual( Stem("ergeht"), "ergeht");});
test("ergibt -> ergibt", function() {deepEqual( Stem("ergibt"), "ergibt");});
test("ergiebiger -> ergieb", function() {deepEqual( Stem("ergiebiger"), "ergieb");});
test("ergiessen -> ergiess", function() {deepEqual( Stem("ergiessen"), "ergiess");});
test("ergießen -> ergiess", function() {deepEqual( Stem("ergießen"), "ergiess");});
test("ergiessung -> ergiess", function() {deepEqual( Stem("ergiessung"), "ergiess");});
test("ergießung -> ergiess", function() {deepEqual( Stem("ergießung"), "ergiess");});
test("erging -> erging", function() {deepEqual( Stem("erging"), "erging");});
test("erglänzten -> erglanzt", function() {deepEqual( Stem("erglänzten"), "erglanzt");});
test("erglühen -> ergluh", function() {deepEqual( Stem("erglühen"), "ergluh");});
test("ergoss -> ergoss", function() {deepEqual( Stem("ergoss"), "ergoss");});
test("ergoß -> ergoss", function() {deepEqual( Stem("ergoß"), "ergoss");});
test("ergötzen -> ergotz", function() {deepEqual( Stem("ergötzen"), "ergotz");});
test("ergötzlich -> ergotz", function() {deepEqual( Stem("ergötzlich"), "ergotz");});
test("ergötzt -> ergotzt", function() {deepEqual( Stem("ergötzt"), "ergotzt");});
test("ergötzte -> ergotzt", function() {deepEqual( Stem("ergötzte"), "ergotzt");});
test("ergötzten -> ergotzt", function() {deepEqual( Stem("ergötzten"), "ergotzt");});
test("ergötzung -> ergotz", function() {deepEqual( Stem("ergötzung"), "ergotz");});
test("ergötzungen -> ergotz", function() {deepEqual( Stem("ergötzungen"), "ergotz");});
test("ergraute -> ergraut", function() {deepEqual( Stem("ergraute"), "ergraut");});
test("ergrauten -> ergraut", function() {deepEqual( Stem("ergrauten"), "ergraut");});
test("ergreife -> ergreif", function() {deepEqual( Stem("ergreife"), "ergreif");});
test("ergreifen -> ergreif", function() {deepEqual( Stem("ergreifen"), "ergreif");});
test("ergreifend -> ergreif", function() {deepEqual( Stem("ergreifend"), "ergreif");});
test("ergreift -> ergreift", function() {deepEqual( Stem("ergreift"), "ergreift");});
test("ergriff -> ergriff", function() {deepEqual( Stem("ergriff"), "ergriff");});
test("ergriffen -> ergriff", function() {deepEqual( Stem("ergriffen"), "ergriff");});
test("ergrimmt -> ergrimmt", function() {deepEqual( Stem("ergrimmt"), "ergrimmt");});
test("ergrübeln -> ergrubeln", function() {deepEqual( Stem("ergrübeln"), "ergrubeln");});
test("ergründen -> ergrund", function() {deepEqual( Stem("ergründen"), "ergrund");});
test("erhaben -> erhab", function() {deepEqual( Stem("erhaben"), "erhab");});
test("erhabene -> erhab", function() {deepEqual( Stem("erhabene"), "erhab");});
test("erhabenes -> erhab", function() {deepEqual( Stem("erhabenes"), "erhab");});
test("erhabenheit -> erhab", function() {deepEqual( Stem("erhabenheit"), "erhab");});
test("erhabnen -> erhabn", function() {deepEqual( Stem("erhabnen"), "erhabn");});
test("erhalt -> erhalt", function() {deepEqual( Stem("erhalt"), "erhalt");});
test("erhält -> erhalt", function() {deepEqual( Stem("erhält"), "erhalt");});
test("erhalte -> erhalt", function() {deepEqual( Stem("erhalte"), "erhalt");});
test("erhalten -> erhalt", function() {deepEqual( Stem("erhalten"), "erhalt");});
test("erhaltende -> erhalt", function() {deepEqual( Stem("erhaltende"), "erhalt");});
test("erhalter -> erhalt", function() {deepEqual( Stem("erhalter"), "erhalt");});
test("erhältst -> erhalt", function() {deepEqual( Stem("erhältst"), "erhalt");});
test("erhaltung -> erhalt", function() {deepEqual( Stem("erhaltung"), "erhalt");});
test("erhandelt -> erhandelt", function() {deepEqual( Stem("erhandelt"), "erhandelt");});
test("erhängt -> erhangt", function() {deepEqual( Stem("erhängt"), "erhangt");});
test("erhängte -> erhangt", function() {deepEqual( Stem("erhängte"), "erhangt");});
test("erhärtet -> erhartet", function() {deepEqual( Stem("erhärtet"), "erhartet");});
test("erhaschen -> erhasch", function() {deepEqual( Stem("erhaschen"), "erhasch");});
test("erhebe -> erheb", function() {deepEqual( Stem("erhebe"), "erheb");});
test("erheben -> erheb", function() {deepEqual( Stem("erheben"), "erheb");});
test("erhebend -> erheb", function() {deepEqual( Stem("erhebend"), "erheb");});
test("erhebenden -> erheb", function() {deepEqual( Stem("erhebenden"), "erheb");});
test("erheblich -> erheb", function() {deepEqual( Stem("erheblich"), "erheb");});
test("erheblichen -> erheb", function() {deepEqual( Stem("erheblichen"), "erheb");});
test("erheblichkeit -> erheb", function() {deepEqual( Stem("erheblichkeit"), "erheb");});
test("erhebst -> erheb", function() {deepEqual( Stem("erhebst"), "erheb");});
test("erhebt -> erhebt", function() {deepEqual( Stem("erhebt"), "erhebt");});
test("erhebung -> erheb", function() {deepEqual( Stem("erhebung"), "erheb");});
test("erhebungen -> erheb", function() {deepEqual( Stem("erhebungen"), "erheb");});
test("erheischt -> erheischt", function() {deepEqual( Stem("erheischt"), "erheischt");});
test("erhellen -> erhell", function() {deepEqual( Stem("erhellen"), "erhell");});
test("erhellt -> erhellt", function() {deepEqual( Stem("erhellt"), "erhellt");});
test("erhellte -> erhellt", function() {deepEqual( Stem("erhellte"), "erhellt");});
test("erheucheltes -> erheuchelt", function() {deepEqual( Stem("erheucheltes"), "erheuchelt");});
test("erhielt -> erhielt", function() {deepEqual( Stem("erhielt"), "erhielt");});
test("erhielten -> erhielt", function() {deepEqual( Stem("erhielten"), "erhielt");});
test("erhieltst -> erhielt", function() {deepEqual( Stem("erhieltst"), "erhielt");});
test("erhitzen -> erhitz", function() {deepEqual( Stem("erhitzen"), "erhitz");});
test("erhitzt -> erhitzt", function() {deepEqual( Stem("erhitzt"), "erhitzt");});
test("erhitzten -> erhitzt", function() {deepEqual( Stem("erhitzten"), "erhitzt");});
test("erhob -> erhob", function() {deepEqual( Stem("erhob"), "erhob");});
test("erhoben -> erhob", function() {deepEqual( Stem("erhoben"), "erhob");});
test("erhobenen -> erhob", function() {deepEqual( Stem("erhobenen"), "erhob");});
test("erhobener -> erhob", function() {deepEqual( Stem("erhobener"), "erhob");});
test("erhofft -> erhofft", function() {deepEqual( Stem("erhofft"), "erhofft");});
test("erhofften -> erhofft", function() {deepEqual( Stem("erhofften"), "erhofft");});
test("erhöhen -> erhoh", function() {deepEqual( Stem("erhöhen"), "erhoh");});
test("erhöht -> erhoht", function() {deepEqual( Stem("erhöht"), "erhoht");});
test("erhöhte -> erhoht", function() {deepEqual( Stem("erhöhte"), "erhoht");});
test("erhöhten -> erhoht", function() {deepEqual( Stem("erhöhten"), "erhoht");});
test("erhöhter -> erhoht", function() {deepEqual( Stem("erhöhter"), "erhoht");});
test("erhöhung -> erhoh", function() {deepEqual( Stem("erhöhung"), "erhoh");});
test("erholt -> erholt", function() {deepEqual( Stem("erholt"), "erholt");});
test("erholte -> erholt", function() {deepEqual( Stem("erholte"), "erholt");});
test("erholten -> erholt", function() {deepEqual( Stem("erholten"), "erholt");});
test("erholung -> erhol", function() {deepEqual( Stem("erholung"), "erhol");});
test("erholungspause -> erholungspaus", function() {deepEqual( Stem("erholungspause"), "erholungspaus");});
test("erhörest -> erhor", function() {deepEqual( Stem("erhörest"), "erhor");});
test("erhört -> erhort", function() {deepEqual( Stem("erhört"), "erhort");});
test("erich -> erich", function() {deepEqual( Stem("erich"), "erich");});
test("erinnere -> erinn", function() {deepEqual( Stem("erinnere"), "erinn");});
test("erinnerlich -> erinn", function() {deepEqual( Stem("erinnerlich"), "erinn");});
test("erinnern -> erinn", function() {deepEqual( Stem("erinnern"), "erinn");});
test("erinnernd -> erinnernd", function() {deepEqual( Stem("erinnernd"), "erinnernd");});
test("erinnert -> erinnert", function() {deepEqual( Stem("erinnert"), "erinnert");});
test("erinnerte -> erinnert", function() {deepEqual( Stem("erinnerte"), "erinnert");});
test("erinnerten -> erinnert", function() {deepEqual( Stem("erinnerten"), "erinnert");});
test("erinnerung -> erinner", function() {deepEqual( Stem("erinnerung"), "erinner");});
test("erinnerungen -> erinner", function() {deepEqual( Stem("erinnerungen"), "erinner");});
test("erinnerungskräfte -> erinnerungskraft", function() {deepEqual( Stem("erinnerungskräfte"), "erinnerungskraft");});
test("eristica -> eristica", function() {deepEqual( Stem("eristica"), "eristica");});
test("eristik -> erist", function() {deepEqual( Stem("eristik"), "erist");});
test("eristikouv -> eristikouv", function() {deepEqual( Stem("eristikouv"), "eristikouv");});
test("eristische -> erist", function() {deepEqual( Stem("eristische"), "erist");});
test("eristischen -> erist", function() {deepEqual( Stem("eristischen"), "erist");});
test("eriugena -> eriugena", function() {deepEqual( Stem("eriugena"), "eriugena");});
test("erjagen -> erjag", function() {deepEqual( Stem("erjagen"), "erjag");});
test("erjebenst -> erjeben", function() {deepEqual( Stem("erjebenst"), "erjeben");});
test("erkämpfen -> erkampf", function() {deepEqual( Stem("erkämpfen"), "erkampf");});
test("erkannt -> erkannt", function() {deepEqual( Stem("erkannt"), "erkannt");});
test("erkannte -> erkannt", function() {deepEqual( Stem("erkannte"), "erkannt");});
test("erkannten -> erkannt", function() {deepEqual( Stem("erkannten"), "erkannt");});
test("erkaufen -> erkauf", function() {deepEqual( Stem("erkaufen"), "erkauf");});
test("erkennbar -> erkennbar", function() {deepEqual( Stem("erkennbar"), "erkennbar");});
test("erkennbarem -> erkennbar", function() {deepEqual( Stem("erkennbarem"), "erkennbar");});
test("erkennbaren -> erkennbar", function() {deepEqual( Stem("erkennbaren"), "erkennbar");});
test("erkenne -> erkenn", function() {deepEqual( Stem("erkenne"), "erkenn");});
test("erkennen -> erkenn", function() {deepEqual( Stem("erkennen"), "erkenn");});
test("erkennenden -> erkenn", function() {deepEqual( Stem("erkennenden"), "erkenn");});
test("erkennest -> erkenn", function() {deepEqual( Stem("erkennest"), "erkenn");});
test("erkennet -> erkennet", function() {deepEqual( Stem("erkennet"), "erkennet");});
test("erkennst -> erkenn", function() {deepEqual( Stem("erkennst"), "erkenn");});
test("erkennt -> erkennt", function() {deepEqual( Stem("erkennt"), "erkennt");});
test("erkenntnis -> erkenntnis", function() {deepEqual( Stem("erkenntnis"), "erkenntnis");});
test("erkenntnisgründe -> erkenntnisgrund", function() {deepEqual( Stem("erkenntnisgründe"), "erkenntnisgrund");});
test("erkenntnisgründen -> erkenntnisgrund", function() {deepEqual( Stem("erkenntnisgründen"), "erkenntnisgrund");});
test("erkenntnisse -> erkenntnis", function() {deepEqual( Stem("erkenntnisse"), "erkenntnis");});
test("erkenntnissen -> erkenntnis", function() {deepEqual( Stem("erkenntnissen"), "erkenntnis");});
test("erkenntnisses -> erkenntnis", function() {deepEqual( Stem("erkenntnisses"), "erkenntnis");});
test("erkenntnisvermögen -> erkenntnisvermog", function() {deepEqual( Stem("erkenntnisvermögen"), "erkenntnisvermog");});
test("erkenntnisvermögens -> erkenntnisvermog", function() {deepEqual( Stem("erkenntnisvermögens"), "erkenntnisvermog");});
test("erkennung -> erkenn", function() {deepEqual( Stem("erkennung"), "erkenn");});
test("erker -> erk", function() {deepEqual( Stem("erker"), "erk");});
test("erkläre -> erklar", function() {deepEqual( Stem("erkläre"), "erklar");});
test("erklären -> erklar", function() {deepEqual( Stem("erklären"), "erklar");});
test("erklärlich -> erklar", function() {deepEqual( Stem("erklärlich"), "erklar");});
test("erklärliche -> erklar", function() {deepEqual( Stem("erklärliche"), "erklar");});
test("erklärst -> erklarst", function() {deepEqual( Stem("erklärst"), "erklarst");});
test("erklärt -> erklart", function() {deepEqual( Stem("erklärt"), "erklart");});
test("erklärte -> erklart", function() {deepEqual( Stem("erklärte"), "erklart");});
test("erklärten -> erklart", function() {deepEqual( Stem("erklärten"), "erklart");});
test("erklärung -> erklar", function() {deepEqual( Stem("erklärung"), "erklar");});
test("erklärungen -> erklar", function() {deepEqual( Stem("erklärungen"), "erklar");});
test("erklärungsgrund -> erklarungsgrund", function() {deepEqual( Stem("erklärungsgrund"), "erklarungsgrund");});
test("erklärungsweise -> erklarungsweis", function() {deepEqual( Stem("erklärungsweise"), "erklarungsweis");});
test("erkleckliche -> erkleck", function() {deepEqual( Stem("erkleckliche"), "erkleck");});
test("erklecklichen -> erkleck", function() {deepEqual( Stem("erklecklichen"), "erkleck");});
test("erkleckliches -> erkleck", function() {deepEqual( Stem("erkleckliches"), "erkleck");});
test("erkletterten -> erklettert", function() {deepEqual( Stem("erkletterten"), "erklettert");});
test("erkundigt -> erkundigt", function() {deepEqual( Stem("erkundigt"), "erkundigt");});
test("erkundigte -> erkundigt", function() {deepEqual( Stem("erkundigte"), "erkundigt");});
test("erkünstelt -> erkunstelt", function() {deepEqual( Stem("erkünstelt"), "erkunstelt");});
test("erlahmten -> erlahmt", function() {deepEqual( Stem("erlahmten"), "erlahmt");});
test("erlangen -> erlang", function() {deepEqual( Stem("erlangen"), "erlang");});
test("erlangende -> erlang", function() {deepEqual( Stem("erlangende"), "erlang");});
test("erlangte -> erlangt", function() {deepEqual( Stem("erlangte"), "erlangt");});
test("erlassen -> erlass", function() {deepEqual( Stem("erlassen"), "erlass");});
test("erlassung -> erlass", function() {deepEqual( Stem("erlassung"), "erlass");});
test("erlaube -> erlaub", function() {deepEqual( Stem("erlaube"), "erlaub");});
test("erlauben -> erlaub", function() {deepEqual( Stem("erlauben"), "erlaub");});
test("erlaubnis -> erlaubnis", function() {deepEqual( Stem("erlaubnis"), "erlaubnis");});
test("erlaubt -> erlaubt", function() {deepEqual( Stem("erlaubt"), "erlaubt");});
test("erlaubte -> erlaubt", function() {deepEqual( Stem("erlaubte"), "erlaubt");});
test("erlaubten -> erlaubt", function() {deepEqual( Stem("erlaubten"), "erlaubt");});
test("erlaucht -> erlaucht", function() {deepEqual( Stem("erlaucht"), "erlaucht");});
test("erlauchte -> erlaucht", function() {deepEqual( Stem("erlauchte"), "erlaucht");});
test("erlauchten -> erlaucht", function() {deepEqual( Stem("erlauchten"), "erlaucht");});
test("erläutert -> erlautert", function() {deepEqual( Stem("erläutert"), "erlautert");});
test("erläuterung -> erlauter", function() {deepEqual( Stem("erläuterung"), "erlauter");});
test("erle -> erl", function() {deepEqual( Stem("erle"), "erl");});
test("erlebe -> erleb", function() {deepEqual( Stem("erlebe"), "erleb");});
test("erleben -> erleb", function() {deepEqual( Stem("erleben"), "erleb");});
test("erlebnis -> erlebnis", function() {deepEqual( Stem("erlebnis"), "erlebnis");});
test("erlebnisse -> erlebnis", function() {deepEqual( Stem("erlebnisse"), "erlebnis");});
test("erlebnissen -> erlebnis", function() {deepEqual( Stem("erlebnissen"), "erlebnis");});
test("erlebt -> erlebt", function() {deepEqual( Stem("erlebt"), "erlebt");});
test("erlebte -> erlebt", function() {deepEqual( Stem("erlebte"), "erlebt");});
test("erledigen -> erled", function() {deepEqual( Stem("erledigen"), "erled");});
test("erledigt -> erledigt", function() {deepEqual( Stem("erledigt"), "erledigt");});
test("erledigung -> erled", function() {deepEqual( Stem("erledigung"), "erled");});
test("erlegt -> erlegt", function() {deepEqual( Stem("erlegt"), "erlegt");});
test("erlegten -> erlegt", function() {deepEqual( Stem("erlegten"), "erlegt");});
test("erlegung -> erleg", function() {deepEqual( Stem("erlegung"), "erleg");});
test("erleichtern -> erleicht", function() {deepEqual( Stem("erleichtern"), "erleicht");});
test("erleichternder -> erleichternd", function() {deepEqual( Stem("erleichternder"), "erleichternd");});
test("erleichtert -> erleichtert", function() {deepEqual( Stem("erleichtert"), "erleichtert");});
test("erleichterte -> erleichtert", function() {deepEqual( Stem("erleichterte"), "erleichtert");});
test("erleiden -> erleid", function() {deepEqual( Stem("erleiden"), "erleid");});
test("erlenzeilen -> erlenzeil", function() {deepEqual( Stem("erlenzeilen"), "erlenzeil");});
test("erlernen -> erlern", function() {deepEqual( Stem("erlernen"), "erlern");});
test("erlernt -> erlernt", function() {deepEqual( Stem("erlernt"), "erlernt");});
test("erlernte -> erlernt", function() {deepEqual( Stem("erlernte"), "erlernt");});
test("erleuchte -> erleucht", function() {deepEqual( Stem("erleuchte"), "erleucht");});
test("erleuchten -> erleucht", function() {deepEqual( Stem("erleuchten"), "erleucht");});
test("erleuchtet -> erleuchtet", function() {deepEqual( Stem("erleuchtet"), "erleuchtet");});
test("erleuchtete -> erleuchtet", function() {deepEqual( Stem("erleuchtete"), "erleuchtet");});
test("erleuchteten -> erleuchtet", function() {deepEqual( Stem("erleuchteten"), "erleuchtet");});
test("erleuchtung -> erleucht", function() {deepEqual( Stem("erleuchtung"), "erleucht");});
test("erleuchtungen -> erleucht", function() {deepEqual( Stem("erleuchtungen"), "erleucht");});
test("erlitt -> erlitt", function() {deepEqual( Stem("erlitt"), "erlitt");});
test("erlitten -> erlitt", function() {deepEqual( Stem("erlitten"), "erlitt");});
test("erlittenen -> erlitt", function() {deepEqual( Stem("erlittenen"), "erlitt");});
test("erlös -> erlos", function() {deepEqual( Stem("erlös"), "erlos");});
test("erloschen -> erlosch", function() {deepEqual( Stem("erloschen"), "erlosch");});
test("erlöschen -> erlosch", function() {deepEqual( Stem("erlöschen"), "erlosch");});
test("erlöse -> erlos", function() {deepEqual( Stem("erlöse"), "erlos");});
test("erlösen -> erlos", function() {deepEqual( Stem("erlösen"), "erlos");});
test("erlöser -> erlos", function() {deepEqual( Stem("erlöser"), "erlos");});
test("erlöset -> erloset", function() {deepEqual( Stem("erlöset"), "erloset");});
test("erlöst -> erlost", function() {deepEqual( Stem("erlöst"), "erlost");});
test("erlösten -> erlost", function() {deepEqual( Stem("erlösten"), "erlost");});
test("erlösung -> erlos", function() {deepEqual( Stem("erlösung"), "erlos");});
test("erlösungsgelder -> erlosungsgeld", function() {deepEqual( Stem("erlösungsgelder"), "erlosungsgeld");});
test("erlösungswerk -> erlosungswerk", function() {deepEqual( Stem("erlösungswerk"), "erlosungswerk");});
test("erlustigen -> erlust", function() {deepEqual( Stem("erlustigen"), "erlust");});
test("ermächtigt -> ermachtigt", function() {deepEqual( Stem("ermächtigt"), "ermachtigt");});
test("ermahne -> ermahn", function() {deepEqual( Stem("ermahne"), "ermahn");});
test("ermahnen -> ermahn", function() {deepEqual( Stem("ermahnen"), "ermahn");});
test("ermahnt -> ermahnt", function() {deepEqual( Stem("ermahnt"), "ermahnt");});
test("ermahnte -> ermahnt", function() {deepEqual( Stem("ermahnte"), "ermahnt");});
test("ermahnung -> ermahn", function() {deepEqual( Stem("ermahnung"), "ermahn");});
test("ermahnungen -> ermahn", function() {deepEqual( Stem("ermahnungen"), "ermahn");});
test("ermangelte -> ermangelt", function() {deepEqual( Stem("ermangelte"), "ermangelt");});
test("ermangelung -> ermangel", function() {deepEqual( Stem("ermangelung"), "ermangel");});
test("ermannen -> ermann", function() {deepEqual( Stem("ermannen"), "ermann");});
test("ermannte -> ermannt", function() {deepEqual( Stem("ermannte"), "ermannt");});
test("ermattetes -> ermattet", function() {deepEqual( Stem("ermattetes"), "ermattet");});
test("ermattung -> ermatt", function() {deepEqual( Stem("ermattung"), "ermatt");});
test("ermessens -> ermess", function() {deepEqual( Stem("ermessens"), "ermess");});
test("ermessensspielraum -> ermessensspielraum", function() {deepEqual( Stem("ermessensspielraum"), "ermessensspielraum");});
test("ermesset -> ermesset", function() {deepEqual( Stem("ermesset"), "ermesset");});
test("ermöglichen -> ermog", function() {deepEqual( Stem("ermöglichen"), "ermog");});
test("ermöglicht -> ermoglicht", function() {deepEqual( Stem("ermöglicht"), "ermoglicht");});
test("ermordet -> ermordet", function() {deepEqual( Stem("ermordet"), "ermordet");});
test("ermordete -> ermordet", function() {deepEqual( Stem("ermordete"), "ermordet");});
test("ermordeten -> ermordet", function() {deepEqual( Stem("ermordeten"), "ermordet");});
test("ermüden -> ermud", function() {deepEqual( Stem("ermüden"), "ermud");});
test("ermüdenden -> ermud", function() {deepEqual( Stem("ermüdenden"), "ermud");});
test("ermüdet -> ermudet", function() {deepEqual( Stem("ermüdet"), "ermudet");});
test("ermüdeten -> ermudet", function() {deepEqual( Stem("ermüdeten"), "ermudet");});
test("ermüdetes -> ermudet", function() {deepEqual( Stem("ermüdetes"), "ermudet");});
test("ermuntern -> ermunt", function() {deepEqual( Stem("ermuntern"), "ermunt");});
test("ermunterte -> ermuntert", function() {deepEqual( Stem("ermunterte"), "ermuntert");});
test("ermunterten -> ermuntert", function() {deepEqual( Stem("ermunterten"), "ermuntert");});
test("ermutigungen -> ermut", function() {deepEqual( Stem("ermutigungen"), "ermut");});
test("erna -> erna", function() {deepEqual( Stem("erna"), "erna");});
test("ernähren -> ernahr", function() {deepEqual( Stem("ernähren"), "ernahr");});
test("ernährer -> ernahr", function() {deepEqual( Stem("ernährer"), "ernahr");});
test("ernährt -> ernahrt", function() {deepEqual( Stem("ernährt"), "ernahrt");});
test("ernährung -> ernahr", function() {deepEqual( Stem("ernährung"), "ernahr");});
test("ernährungsmethode -> ernahrungsmethod", function() {deepEqual( Stem("ernährungsmethode"), "ernahrungsmethod");});
test("ernannt -> ernannt", function() {deepEqual( Stem("ernannt"), "ernannt");});
test("ernannte -> ernannt", function() {deepEqual( Stem("ernannte"), "ernannt");});
test("ernennung -> ernenn", function() {deepEqual( Stem("ernennung"), "ernenn");});
test("erneuere -> erneu", function() {deepEqual( Stem("erneuere"), "erneu");});
test("erneuern -> erneu", function() {deepEqual( Stem("erneuern"), "erneu");});
test("erneuerst -> erneuerst", function() {deepEqual( Stem("erneuerst"), "erneuerst");});
test("erneuert -> erneuert", function() {deepEqual( Stem("erneuert"), "erneuert");});
test("erneuerte -> erneuert", function() {deepEqual( Stem("erneuerte"), "erneuert");});
test("erneuerung -> erneuer", function() {deepEqual( Stem("erneuerung"), "erneuer");});
test("erneure -> erneur", function() {deepEqual( Stem("erneure"), "erneur");});
test("erniedrige -> erniedr", function() {deepEqual( Stem("erniedrige"), "erniedr");});
test("erniedrigen -> erniedr", function() {deepEqual( Stem("erniedrigen"), "erniedr");});
test("erniedrigten -> erniedrigt", function() {deepEqual( Stem("erniedrigten"), "erniedrigt");});
test("erniedrigung -> erniedr", function() {deepEqual( Stem("erniedrigung"), "erniedr");});
test("ernst -> ernst", function() {deepEqual( Stem("ernst"), "ernst");});
test("ernste -> ernst", function() {deepEqual( Stem("ernste"), "ernst");});
test("ernsten -> ernst", function() {deepEqual( Stem("ernsten"), "ernst");});
test("ernster -> ernst", function() {deepEqual( Stem("ernster"), "ernst");});
test("ernstes -> ernst", function() {deepEqual( Stem("ernstes"), "ernst");});
test("ernstesten -> ernst", function() {deepEqual( Stem("ernstesten"), "ernst");});
test("ernsthaft -> ernsthaft", function() {deepEqual( Stem("ernsthaft"), "ernsthaft");});
test("ernsthafte -> ernsthaft", function() {deepEqual( Stem("ernsthafte"), "ernsthaft");});
test("ernsthaften -> ernsthaft", function() {deepEqual( Stem("ernsthaften"), "ernsthaft");});
test("ernsthafter -> ernsthaft", function() {deepEqual( Stem("ernsthafter"), "ernsthaft");});
test("ernsthaftes -> ernsthaft", function() {deepEqual( Stem("ernsthaftes"), "ernsthaft");});
test("ernstlich -> ernstlich", function() {deepEqual( Stem("ernstlich"), "ernstlich");});
test("ernstliche -> ernstlich", function() {deepEqual( Stem("ernstliche"), "ernstlich");});
test("ernte -> ernt", function() {deepEqual( Stem("ernte"), "ernt");});
test("erntesegen -> ernteseg", function() {deepEqual( Stem("erntesegen"), "ernteseg");});
test("erntete -> erntet", function() {deepEqual( Stem("erntete"), "erntet");});
test("erobern -> erob", function() {deepEqual( Stem("erobern"), "erob");});
test("erobert -> erobert", function() {deepEqual( Stem("erobert"), "erobert");});
test("eroberung -> erober", function() {deepEqual( Stem("eroberung"), "erober");});
test("eroberungen -> erober", function() {deepEqual( Stem("eroberungen"), "erober");});
test("eröffnen -> eroffn", function() {deepEqual( Stem("eröffnen"), "eroffn");});
test("eröffnet -> eroffnet", function() {deepEqual( Stem("eröffnet"), "eroffnet");});
test("eröffnete -> eroffnet", function() {deepEqual( Stem("eröffnete"), "eroffnet");});
test("eröffnung -> eroffn", function() {deepEqual( Stem("eröffnung"), "eroffn");});
test("erörtert -> erortert", function() {deepEqual( Stem("erörtert"), "erortert");});
test("erörterten -> erortert", function() {deepEqual( Stem("erörterten"), "erortert");});
test("erproben -> erprob", function() {deepEqual( Stem("erproben"), "erprob");});
test("erprüften -> erpruft", function() {deepEqual( Stem("erprüften"), "erpruft");});
test("erquicken -> erquick", function() {deepEqual( Stem("erquicken"), "erquick");});
test("erquickt -> erquickt", function() {deepEqual( Stem("erquickt"), "erquickt");});
test("erquickte -> erquickt", function() {deepEqual( Stem("erquickte"), "erquickt");});
test("erquickung -> erquick", function() {deepEqual( Stem("erquickung"), "erquick");});
test("erraten -> errat", function() {deepEqual( Stem("erraten"), "errat");});
test("erregen -> erreg", function() {deepEqual( Stem("erregen"), "erreg");});
test("erregend -> erreg", function() {deepEqual( Stem("erregend"), "erreg");});
test("erregt -> erregt", function() {deepEqual( Stem("erregt"), "erregt");});
test("erregte -> erregt", function() {deepEqual( Stem("erregte"), "erregt");});
test("erregten -> erregt", function() {deepEqual( Stem("erregten"), "erregt");});
test("erregung -> erreg", function() {deepEqual( Stem("erregung"), "erreg");});
test("erregungen -> erreg", function() {deepEqual( Stem("erregungen"), "erreg");});
test("erreichbar -> erreichbar", function() {deepEqual( Stem("erreichbar"), "erreichbar");});
test("erreichbare -> erreichbar", function() {deepEqual( Stem("erreichbare"), "erreichbar");});
test("erreiche -> erreich", function() {deepEqual( Stem("erreiche"), "erreich");});
test("erreichen -> erreich", function() {deepEqual( Stem("erreichen"), "erreich");});
test("erreicht -> erreicht", function() {deepEqual( Stem("erreicht"), "erreicht");});
test("erreichte -> erreicht", function() {deepEqual( Stem("erreichte"), "erreicht");});
test("erreichten -> erreicht", function() {deepEqual( Stem("erreichten"), "erreicht");});
test("erreichung -> erreich", function() {deepEqual( Stem("erreichung"), "erreich");});
test("errette -> errett", function() {deepEqual( Stem("errette"), "errett");});
test("erretten -> errett", function() {deepEqual( Stem("erretten"), "errett");});
test("errettet -> errettet", function() {deepEqual( Stem("errettet"), "errettet");});
test("errichten -> erricht", function() {deepEqual( Stem("errichten"), "erricht");});
test("errichtet -> errichtet", function() {deepEqual( Stem("errichtet"), "errichtet");});
test("errichtete -> errichtet", function() {deepEqual( Stem("errichtete"), "errichtet");});
test("errichteten -> errichtet", function() {deepEqual( Stem("errichteten"), "errichtet");});
test("errichtung -> erricht", function() {deepEqual( Stem("errichtung"), "erricht");});
test("erriet -> erriet", function() {deepEqual( Stem("erriet"), "erriet");});
test("erringen -> erring", function() {deepEqual( Stem("erringen"), "erring");});
test("erröte -> errot", function() {deepEqual( Stem("erröte"), "errot");});
test("erröten -> errot", function() {deepEqual( Stem("erröten"), "errot");});
test("errötend -> errot", function() {deepEqual( Stem("errötend"), "errot");});
test("errötete -> errotet", function() {deepEqual( Stem("errötete"), "errotet");});
test("erröteten -> errotet", function() {deepEqual( Stem("erröteten"), "errotet");});
test("errungenschaft -> errungenschaft", function() {deepEqual( Stem("errungenschaft"), "errungenschaft");});
test("ersah -> ersah", function() {deepEqual( Stem("ersah"), "ersah");});
test("ersann -> ersann", function() {deepEqual( Stem("ersann"), "ersann");});
test("ersannen -> ersann", function() {deepEqual( Stem("ersannen"), "ersann");});
test("ersatz -> ersatz", function() {deepEqual( Stem("ersatz"), "ersatz");});
test("ersäufen -> ersauf", function() {deepEqual( Stem("ersäufen"), "ersauf");});
test("ersäuft -> ersauft", function() {deepEqual( Stem("ersäuft"), "ersauft");});
test("erschaffen -> erschaff", function() {deepEqual( Stem("erschaffen"), "erschaff");});
test("erschaffenden -> erschaff", function() {deepEqual( Stem("erschaffenden"), "erschaff");});
test("erschaffene -> erschaff", function() {deepEqual( Stem("erschaffene"), "erschaff");});
test("erschaffenen -> erschaff", function() {deepEqual( Stem("erschaffenen"), "erschaff");});
test("erschauten -> erschaut", function() {deepEqual( Stem("erschauten"), "erschaut");});
test("erscheine -> erschein", function() {deepEqual( Stem("erscheine"), "erschein");});
test("erscheinen -> erschein", function() {deepEqual( Stem("erscheinen"), "erschein");});
test("erscheinende -> erschein", function() {deepEqual( Stem("erscheinende"), "erschein");});
test("erscheinenden -> erschein", function() {deepEqual( Stem("erscheinenden"), "erschein");});
test("erscheinens -> erschein", function() {deepEqual( Stem("erscheinens"), "erschein");});
test("erscheint -> erscheint", function() {deepEqual( Stem("erscheint"), "erscheint");});
test("erscheinung -> erschein", function() {deepEqual( Stem("erscheinung"), "erschein");});
test("erscheinungen -> erschein", function() {deepEqual( Stem("erscheinungen"), "erschein");});
test("erscheinungsformen -> erscheinungsform", function() {deepEqual( Stem("erscheinungsformen"), "erscheinungsform");});
test("erschien -> erschi", function() {deepEqual( Stem("erschien"), "erschi");});
test("erschiene -> erschi", function() {deepEqual( Stem("erschiene"), "erschi");});
test("erschienen -> erschi", function() {deepEqual( Stem("erschienen"), "erschi");});
test("erschienenen -> erschien", function() {deepEqual( Stem("erschienenen"), "erschien");});
test("erschlage -> erschlag", function() {deepEqual( Stem("erschlage"), "erschlag");});
test("erschlagen -> erschlag", function() {deepEqual( Stem("erschlagen"), "erschlag");});
test("erschlagener -> erschlag", function() {deepEqual( Stem("erschlagener"), "erschlag");});
test("erschleichens -> erschleich", function() {deepEqual( Stem("erschleichens"), "erschleich");});
test("erschlichen -> erschlich", function() {deepEqual( Stem("erschlichen"), "erschlich");});
test("erschlichene -> erschlich", function() {deepEqual( Stem("erschlichene"), "erschlich");});
test("erschliessen -> erschliess", function() {deepEqual( Stem("erschliessen"), "erschliess");});
test("erschließen -> erschliess", function() {deepEqual( Stem("erschließen"), "erschliess");});
test("erschlüge -> erschlug", function() {deepEqual( Stem("erschlüge"), "erschlug");});
test("erschnappt -> erschnappt", function() {deepEqual( Stem("erschnappt"), "erschnappt");});
test("erscholl -> erscholl", function() {deepEqual( Stem("erscholl"), "erscholl");});
test("erschöpfen -> erschopf", function() {deepEqual( Stem("erschöpfen"), "erschopf");});
test("erschöpfend -> erschopf", function() {deepEqual( Stem("erschöpfend"), "erschopf");});
test("erschöpft -> erschopft", function() {deepEqual( Stem("erschöpft"), "erschopft");});
test("erschossen -> erschoss", function() {deepEqual( Stem("erschossen"), "erschoss");});
test("erschrak -> erschrak", function() {deepEqual( Stem("erschrak"), "erschrak");});
test("erschrecken -> erschreck", function() {deepEqual( Stem("erschrecken"), "erschreck");});
test("erschrecklicher -> erschreck", function() {deepEqual( Stem("erschrecklicher"), "erschreck");});
test("erschreckt -> erschreckt", function() {deepEqual( Stem("erschreckt"), "erschreckt");});
test("erschreckte -> erschreckt", function() {deepEqual( Stem("erschreckte"), "erschreckt");});
test("erschreckter -> erschreckt", function() {deepEqual( Stem("erschreckter"), "erschreckt");});
test("erschrocken -> erschrock", function() {deepEqual( Stem("erschrocken"), "erschrock");});
test("erschrockenen -> erschrock", function() {deepEqual( Stem("erschrockenen"), "erschrock");});
test("erschrockener -> erschrock", function() {deepEqual( Stem("erschrockener"), "erschrock");});
test("erschüttern -> erschutt", function() {deepEqual( Stem("erschüttern"), "erschutt");});
test("erschütternd -> erschutternd", function() {deepEqual( Stem("erschütternd"), "erschutternd");});
test("erschüttert -> erschuttert", function() {deepEqual( Stem("erschüttert"), "erschuttert");});
test("erschütterte -> erschuttert", function() {deepEqual( Stem("erschütterte"), "erschuttert");});
test("erschütterten -> erschuttert", function() {deepEqual( Stem("erschütterten"), "erschuttert");});
test("erschütterung -> erschutter", function() {deepEqual( Stem("erschütterung"), "erschutter");});
test("erschwert -> erschwert", function() {deepEqual( Stem("erschwert"), "erschwert");});
test("ersehe -> erseh", function() {deepEqual( Stem("ersehe"), "erseh");});
test("ersehen -> erseh", function() {deepEqual( Stem("ersehen"), "erseh");});
test("ersehnt -> ersehnt", function() {deepEqual( Stem("ersehnt"), "ersehnt");});
test("ersehnte -> ersehnt", function() {deepEqual( Stem("ersehnte"), "ersehnt");});
test("ersehnten -> ersehnt", function() {deepEqual( Stem("ersehnten"), "ersehnt");});
test("ersetzen -> ersetz", function() {deepEqual( Stem("ersetzen"), "ersetz");});
test("ersetzt -> ersetzt", function() {deepEqual( Stem("ersetzt"), "ersetzt");});
test("ersetzte -> ersetzt", function() {deepEqual( Stem("ersetzte"), "ersetzt");});
test("ersichtlich -> ersicht", function() {deepEqual( Stem("ersichtlich"), "ersicht");});
test("ersieht -> ersieht", function() {deepEqual( Stem("ersieht"), "ersieht");});
test("ersinnen -> ersinn", function() {deepEqual( Stem("ersinnen"), "ersinn");});
test("ersonnen -> ersonn", function() {deepEqual( Stem("ersonnen"), "ersonn");});
test("erspähen -> erspah", function() {deepEqual( Stem("erspähen"), "erspah");});
test("erspähend -> erspah", function() {deepEqual( Stem("erspähend"), "erspah");});
test("erspäht -> erspaht", function() {deepEqual( Stem("erspäht"), "erspaht");});
test("erspare -> erspar", function() {deepEqual( Stem("erspare"), "erspar");});
test("ersparen -> erspar", function() {deepEqual( Stem("ersparen"), "erspar");});
test("ersparnis -> ersparnis", function() {deepEqual( Stem("ersparnis"), "ersparnis");});
test("ersparnisse -> ersparnis", function() {deepEqual( Stem("ersparnisse"), "ersparnis");});
test("ersparnissen -> ersparnis", function() {deepEqual( Stem("ersparnissen"), "ersparnis");});
test("erspart -> erspart", function() {deepEqual( Stem("erspart"), "erspart");});
test("ersparten -> erspart", function() {deepEqual( Stem("ersparten"), "erspart");});
test("erspriesslich -> erspriess", function() {deepEqual( Stem("erspriesslich"), "erspriess");});
test("ersprießlich -> erspriess", function() {deepEqual( Stem("ersprießlich"), "erspriess");});
test("erspriessliche -> erspriess", function() {deepEqual( Stem("erspriessliche"), "erspriess");});
test("erspriessliches -> erspriess", function() {deepEqual( Stem("erspriessliches"), "erspriess");});
test("erst -> erst", function() {deepEqual( Stem("erst"), "erst");});
test("erstand -> erstand", function() {deepEqual( Stem("erstand"), "erstand");});
test("erstanden -> erstand", function() {deepEqual( Stem("erstanden"), "erstand");});
test("erstandenen -> erstand", function() {deepEqual( Stem("erstandenen"), "erstand");});
test("erstarben -> erstarb", function() {deepEqual( Stem("erstarben"), "erstarb");});
test("erstarken -> erstark", function() {deepEqual( Stem("erstarken"), "erstark");});
test("erstarkt -> erstarkt", function() {deepEqual( Stem("erstarkt"), "erstarkt");});
test("erstarrt -> erstarrt", function() {deepEqual( Stem("erstarrt"), "erstarrt");});
test("erstarrten -> erstarrt", function() {deepEqual( Stem("erstarrten"), "erstarrt");});
test("erstarrung -> erstarr", function() {deepEqual( Stem("erstarrung"), "erstarr");});
test("erstatte -> erstatt", function() {deepEqual( Stem("erstatte"), "erstatt");});
test("erstattet -> erstattet", function() {deepEqual( Stem("erstattet"), "erstattet");});
test("erstattete -> erstattet", function() {deepEqual( Stem("erstattete"), "erstattet");});
test("erstaunen -> erstaun", function() {deepEqual( Stem("erstaunen"), "erstaun");});
test("erstaunlich -> erstaun", function() {deepEqual( Stem("erstaunlich"), "erstaun");});
test("erstaunlichen -> erstaun", function() {deepEqual( Stem("erstaunlichen"), "erstaun");});
test("erstaunt -> erstaunt", function() {deepEqual( Stem("erstaunt"), "erstaunt");});
test("erstaunte -> erstaunt", function() {deepEqual( Stem("erstaunte"), "erstaunt");});
test("erstaunten -> erstaunt", function() {deepEqual( Stem("erstaunten"), "erstaunt");});
test("erstauntes -> erstaunt", function() {deepEqual( Stem("erstauntes"), "erstaunt");});
test("erstdruck -> erstdruck", function() {deepEqual( Stem("erstdruck"), "erstdruck");});
test("erste -> erst", function() {deepEqual( Stem("erste"), "erst");});
test("erstehen -> ersteh", function() {deepEqual( Stem("erstehen"), "ersteh");});
test("ersteht -> ersteht", function() {deepEqual( Stem("ersteht"), "ersteht");});
test("erstellt -> erstellt", function() {deepEqual( Stem("erstellt"), "erstellt");});
test("erstellung -> erstell", function() {deepEqual( Stem("erstellung"), "erstell");});
test("erstemal -> erstemal", function() {deepEqual( Stem("erstemal"), "erstemal");});
test("ersten -> erst", function() {deepEqual( Stem("ersten"), "erst");});
test("erstenmal -> erstenmal", function() {deepEqual( Stem("erstenmal"), "erstenmal");});
test("erstens -> erst", function() {deepEqual( Stem("erstens"), "erst");});
test("erster -> erst", function() {deepEqual( Stem("erster"), "erst");});
test("erstere -> erst", function() {deepEqual( Stem("erstere"), "erst");});
test("ersteren -> erst", function() {deepEqual( Stem("ersteren"), "erst");});
test("ersterer -> erst", function() {deepEqual( Stem("ersterer"), "erst");});
test("ersterm -> ersterm", function() {deepEqual( Stem("ersterm"), "ersterm");});
test("erstern -> erst", function() {deepEqual( Stem("erstern"), "erst");});
test("erstes -> erst", function() {deepEqual( Stem("erstes"), "erst");});
test("erstgeborene -> erstgebor", function() {deepEqual( Stem("erstgeborene"), "erstgebor");});
test("erstgeborenen -> erstgebor", function() {deepEqual( Stem("erstgeborenen"), "erstgebor");});
test("erstgeborener -> erstgebor", function() {deepEqual( Stem("erstgeborener"), "erstgebor");});
test("erstgeburt -> erstgeburt", function() {deepEqual( Stem("erstgeburt"), "erstgeburt");});
test("erstgeburten -> erstgeburt", function() {deepEqual( Stem("erstgeburten"), "erstgeburt");});
test("ersticken -> erstick", function() {deepEqual( Stem("ersticken"), "erstick");});
test("erstickend -> erstick", function() {deepEqual( Stem("erstickend"), "erstick");});
test("erstickenden -> erstick", function() {deepEqual( Stem("erstickenden"), "erstick");});
test("erstickt -> erstickt", function() {deepEqual( Stem("erstickt"), "erstickt");});
test("erstickte -> erstickt", function() {deepEqual( Stem("erstickte"), "erstickt");});
test("erstickung -> erstick", function() {deepEqual( Stem("erstickung"), "erstick");});
test("erstige -> erstig", function() {deepEqual( Stem("erstige"), "erstig");});
test("erstirbt -> erstirbt", function() {deepEqual( Stem("erstirbt"), "erstirbt");});
test("erstlich -> erstlich", function() {deepEqual( Stem("erstlich"), "erstlich");});
test("erstlinge -> erstling", function() {deepEqual( Stem("erstlinge"), "erstling");});
test("erstmals -> erstmal", function() {deepEqual( Stem("erstmals"), "erstmal");});
test("erstochene -> erstoch", function() {deepEqual( Stem("erstochene"), "erstoch");});
test("erstreckt -> erstreckt", function() {deepEqual( Stem("erstreckt"), "erstreckt");});
test("erstreckte -> erstreckt", function() {deepEqual( Stem("erstreckte"), "erstreckt");});
test("erstreckten -> erstreckt", function() {deepEqual( Stem("erstreckten"), "erstreckt");});
test("erstritt -> erstritt", function() {deepEqual( Stem("erstritt"), "erstritt");});
test("ersuche -> ersuch", function() {deepEqual( Stem("ersuche"), "ersuch");});
test("ersucht -> ersucht", function() {deepEqual( Stem("ersucht"), "ersucht");});
test("ersuchten -> ersucht", function() {deepEqual( Stem("ersuchten"), "ersucht");});
test("ertappen -> ertapp", function() {deepEqual( Stem("ertappen"), "ertapp");});
test("ertappte -> ertappt", function() {deepEqual( Stem("ertappte"), "ertappt");});
test("erteilen -> erteil", function() {deepEqual( Stem("erteilen"), "erteil");});
test("erteilt -> erteilt", function() {deepEqual( Stem("erteilt"), "erteilt");});
test("erteilte -> erteilt", function() {deepEqual( Stem("erteilte"), "erteilt");});
test("ertönen -> erton", function() {deepEqual( Stem("ertönen"), "erton");});
test("ertönt -> ertont", function() {deepEqual( Stem("ertönt"), "ertont");});
test("ertönte -> ertont", function() {deepEqual( Stem("ertönte"), "ertont");});
test("ertönten -> ertont", function() {deepEqual( Stem("ertönten"), "ertont");});
test("ertötet -> ertotet", function() {deepEqual( Stem("ertötet"), "ertotet");});
test("ertrag -> ertrag", function() {deepEqual( Stem("ertrag"), "ertrag");});
test("ertrage -> ertrag", function() {deepEqual( Stem("ertrage"), "ertrag");});
test("ertragen -> ertrag", function() {deepEqual( Stem("ertragen"), "ertrag");});
test("ertragener -> ertrag", function() {deepEqual( Stem("ertragener"), "ertrag");});
test("erträglichen -> ertrag", function() {deepEqual( Stem("erträglichen"), "ertrag");});
test("erträglicher -> ertrag", function() {deepEqual( Stem("erträglicher"), "ertrag");});
test("erträgliches -> ertrag", function() {deepEqual( Stem("erträgliches"), "ertrag");});
test("erträgt -> ertragt", function() {deepEqual( Stem("erträgt"), "ertragt");});
test("ertrank -> ertrank", function() {deepEqual( Stem("ertrank"), "ertrank");});
test("ertrinkens -> ertrink", function() {deepEqual( Stem("ertrinkens"), "ertrink");});
test("ertrotzen -> ertrotz", function() {deepEqual( Stem("ertrotzen"), "ertrotz");});
test("ertrug -> ertrug", function() {deepEqual( Stem("ertrug"), "ertrug");});
test("ertrugen -> ertrug", function() {deepEqual( Stem("ertrugen"), "ertrug");});
test("erwachend -> erwach", function() {deepEqual( Stem("erwachend"), "erwach");});
test("erwachende -> erwach", function() {deepEqual( Stem("erwachende"), "erwach");});
test("erwachendem -> erwach", function() {deepEqual( Stem("erwachendem"), "erwach");});
test("erwachenden -> erwach", function() {deepEqual( Stem("erwachenden"), "erwach");});
test("erwachender -> erwach", function() {deepEqual( Stem("erwachender"), "erwach");});
test("erwachsen -> erwachs", function() {deepEqual( Stem("erwachsen"), "erwachs");});
test("erwachsene -> erwachs", function() {deepEqual( Stem("erwachsene"), "erwachs");});
test("erwachsenem -> erwachs", function() {deepEqual( Stem("erwachsenem"), "erwachs");});
test("erwachsenen -> erwachs", function() {deepEqual( Stem("erwachsenen"), "erwachs");});
test("erwachsener -> erwachs", function() {deepEqual( Stem("erwachsener"), "erwachs");});
test("erwächst -> erwach", function() {deepEqual( Stem("erwächst"), "erwach");});
test("erwacht -> erwacht", function() {deepEqual( Stem("erwacht"), "erwacht");});
test("erwachte -> erwacht", function() {deepEqual( Stem("erwachte"), "erwacht");});
test("erwachten -> erwacht", function() {deepEqual( Stem("erwachten"), "erwacht");});
test("erwägen -> erwag", function() {deepEqual( Stem("erwägen"), "erwag");});
test("erwägt -> erwagt", function() {deepEqual( Stem("erwägt"), "erwagt");});
test("erwählen -> erwahl", function() {deepEqual( Stem("erwählen"), "erwahl");});
test("erwählet -> erwahlet", function() {deepEqual( Stem("erwählet"), "erwahlet");});
test("erwählt -> erwahlt", function() {deepEqual( Stem("erwählt"), "erwahlt");});
test("erwählten -> erwahlt", function() {deepEqual( Stem("erwählten"), "erwahlt");});
test("erwählung -> erwahl", function() {deepEqual( Stem("erwählung"), "erwahl");});
test("erwähnen -> erwahn", function() {deepEqual( Stem("erwähnen"), "erwahn");});
test("erwähnt -> erwahnt", function() {deepEqual( Stem("erwähnt"), "erwahnt");});
test("erwähnte -> erwahnt", function() {deepEqual( Stem("erwähnte"), "erwahnt");});
test("erwähnten -> erwahnt", function() {deepEqual( Stem("erwähnten"), "erwahnt");});
test("erwähnung -> erwahn", function() {deepEqual( Stem("erwähnung"), "erwahn");});
test("erwähnungen -> erwahn", function() {deepEqual( Stem("erwähnungen"), "erwahn");});
test("erwarb -> erwarb", function() {deepEqual( Stem("erwarb"), "erwarb");});
test("erwärmt -> erwarmt", function() {deepEqual( Stem("erwärmt"), "erwarmt");});
test("erwarte -> erwart", function() {deepEqual( Stem("erwarte"), "erwart");});
test("erwarten -> erwart", function() {deepEqual( Stem("erwarten"), "erwart");});
test("erwartest -> erwart", function() {deepEqual( Stem("erwartest"), "erwart");});
test("erwartet -> erwartet", function() {deepEqual( Stem("erwartet"), "erwartet");});
test("erwartete -> erwartet", function() {deepEqual( Stem("erwartete"), "erwartet");});
test("erwarteten -> erwartet", function() {deepEqual( Stem("erwarteten"), "erwartet");});
test("erwartung -> erwart", function() {deepEqual( Stem("erwartung"), "erwart");});
test("erwartungen -> erwart", function() {deepEqual( Stem("erwartungen"), "erwart");});
test("erwartungsvollem -> erwartungsvoll", function() {deepEqual( Stem("erwartungsvollem"), "erwartungsvoll");});
test("erwecken -> erweck", function() {deepEqual( Stem("erwecken"), "erweck");});
test("erweckt -> erweckt", function() {deepEqual( Stem("erweckt"), "erweckt");});
test("erweckte -> erweckt", function() {deepEqual( Stem("erweckte"), "erweckt");});
test("erweckten -> erweckt", function() {deepEqual( Stem("erweckten"), "erweckt");});
test("erweicht -> erweicht", function() {deepEqual( Stem("erweicht"), "erweicht");});
test("erweisen -> erweis", function() {deepEqual( Stem("erweisen"), "erweis");});
test("erweislichen -> erweis", function() {deepEqual( Stem("erweislichen"), "erweis");});
test("erweisung -> erweis", function() {deepEqual( Stem("erweisung"), "erweis");});
test("erweitern -> erweit", function() {deepEqual( Stem("erweitern"), "erweit");});
test("erweiternd -> erweiternd", function() {deepEqual( Stem("erweiternd"), "erweiternd");});
test("erweiterndes -> erweiternd", function() {deepEqual( Stem("erweiterndes"), "erweiternd");});
test("erweitert -> erweitert", function() {deepEqual( Stem("erweitert"), "erweitert");});
test("erweiterte -> erweitert", function() {deepEqual( Stem("erweiterte"), "erweitert");});
test("erweiterten -> erweitert", function() {deepEqual( Stem("erweiterten"), "erweitert");});
test("erweiterung -> erweiter", function() {deepEqual( Stem("erweiterung"), "erweiter");});
test("erweiterungen -> erweiter", function() {deepEqual( Stem("erweiterungen"), "erweiter");});
test("erwerb -> erwerb", function() {deepEqual( Stem("erwerb"), "erwerb");});
test("erwerben -> erwerb", function() {deepEqual( Stem("erwerben"), "erwerb");});
test("erwerbende -> erwerb", function() {deepEqual( Stem("erwerbende"), "erwerb");});
test("erwerbenden -> erwerb", function() {deepEqual( Stem("erwerbenden"), "erwerb");});
test("erwerbmittel -> erwerbmittel", function() {deepEqual( Stem("erwerbmittel"), "erwerbmittel");});
test("erwerbs -> erwerb", function() {deepEqual( Stem("erwerbs"), "erwerb");});
test("erwidern -> erwid", function() {deepEqual( Stem("erwidern"), "erwid");});
test("erwiderte -> erwidert", function() {deepEqual( Stem("erwiderte"), "erwidert");});
test("erwiderung -> erwider", function() {deepEqual( Stem("erwiderung"), "erwider");});
test("erwies -> erwi", function() {deepEqual( Stem("erwies"), "erwi");});
test("erwiesen -> erwies", function() {deepEqual( Stem("erwiesen"), "erwies");});
test("erwiesenermassen -> erwiesenermass", function() {deepEqual( Stem("erwiesenermassen"), "erwiesenermass");});
test("erwirbt -> erwirbt", function() {deepEqual( Stem("erwirbt"), "erwirbt");});
test("erwischen -> erwisch", function() {deepEqual( Stem("erwischen"), "erwisch");});
test("erwischt -> erwischt", function() {deepEqual( Stem("erwischt"), "erwischt");});
test("erwischte -> erwischt", function() {deepEqual( Stem("erwischte"), "erwischt");});
test("erwogen -> erwog", function() {deepEqual( Stem("erwogen"), "erwog");});
test("erworben -> erworb", function() {deepEqual( Stem("erworben"), "erworb");});
test("erworbene -> erworb", function() {deepEqual( Stem("erworbene"), "erworb");});
test("erworbenen -> erworb", function() {deepEqual( Stem("erworbenen"), "erworb");});
test("erwthsewv -> erwthsewv", function() {deepEqual( Stem("erwthsewv"), "erwthsewv");});
test("erwünscht -> erwunscht", function() {deepEqual( Stem("erwünscht"), "erwunscht");});
test("erwünschte -> erwunscht", function() {deepEqual( Stem("erwünschte"), "erwunscht");});
test("erwürge -> erwurg", function() {deepEqual( Stem("erwürge"), "erwurg");});
test("erwürgen -> erwurg", function() {deepEqual( Stem("erwürgen"), "erwurg");});
test("erwürgt -> erwurgt", function() {deepEqual( Stem("erwürgt"), "erwurgt");});
test("erwürgte -> erwurgt", function() {deepEqual( Stem("erwürgte"), "erwurgt");});
test("erz -> erz", function() {deepEqual( Stem("erz"), "erz");});
test("erzähl -> erzahl", function() {deepEqual( Stem("erzähl"), "erzahl");});
test("erzähle -> erzahl", function() {deepEqual( Stem("erzähle"), "erzahl");});
test("erzählen -> erzahl", function() {deepEqual( Stem("erzählen"), "erzahl");});
test("erzählende -> erzahl", function() {deepEqual( Stem("erzählende"), "erzahl");});
test("erzähler -> erzahl", function() {deepEqual( Stem("erzähler"), "erzahl");});
test("erzählest -> erzahl", function() {deepEqual( Stem("erzählest"), "erzahl");});
test("erzählet -> erzahlet", function() {deepEqual( Stem("erzählet"), "erzahlet");});
test("erzählst -> erzahl", function() {deepEqual( Stem("erzählst"), "erzahl");});
test("erzählt -> erzahlt", function() {deepEqual( Stem("erzählt"), "erzahlt");});
test("erzählte -> erzahlt", function() {deepEqual( Stem("erzählte"), "erzahlt");});
test("erzählten -> erzahlt", function() {deepEqual( Stem("erzählten"), "erzahlt");});
test("erzähltwerden -> erzahltwerd", function() {deepEqual( Stem("erzähltwerden"), "erzahltwerd");});
test("erzählung -> erzahl", function() {deepEqual( Stem("erzählung"), "erzahl");});
test("erzählungen -> erzahl", function() {deepEqual( Stem("erzählungen"), "erzahl");});
test("erzeigen -> erzeig", function() {deepEqual( Stem("erzeigen"), "erzeig");});
test("erzeigt -> erzeigt", function() {deepEqual( Stem("erzeigt"), "erzeigt");});
test("erzengel -> erzengel", function() {deepEqual( Stem("erzengel"), "erzengel");});
test("erzes -> erz", function() {deepEqual( Stem("erzes"), "erz");});
test("erzeugen -> erzeug", function() {deepEqual( Stem("erzeugen"), "erzeug");});
test("erzeuger -> erzeug", function() {deepEqual( Stem("erzeuger"), "erzeug");});
test("erzeugerin -> erzeugerin", function() {deepEqual( Stem("erzeugerin"), "erzeugerin");});
test("erzeugnis -> erzeugnis", function() {deepEqual( Stem("erzeugnis"), "erzeugnis");});
test("erzeugnisse -> erzeugnis", function() {deepEqual( Stem("erzeugnisse"), "erzeugnis");});
test("erzeugnisses -> erzeugnis", function() {deepEqual( Stem("erzeugnisses"), "erzeugnis");});
test("erzeugt -> erzeugt", function() {deepEqual( Stem("erzeugt"), "erzeugt");});
test("erzeugte -> erzeugt", function() {deepEqual( Stem("erzeugte"), "erzeugt");});
test("erziehen -> erzieh", function() {deepEqual( Stem("erziehen"), "erzieh");});
test("erzieher -> erzieh", function() {deepEqual( Stem("erzieher"), "erzieh");});
test("erzieherei -> erzieherei", function() {deepEqual( Stem("erzieherei"), "erzieherei");});
test("erzieherin -> erzieherin", function() {deepEqual( Stem("erzieherin"), "erzieherin");});
test("erzieherisch -> erzieher", function() {deepEqual( Stem("erzieherisch"), "erzieher");});
test("erziehung -> erzieh", function() {deepEqual( Stem("erziehung"), "erzieh");});
test("erziehungskunst -> erziehungskun", function() {deepEqual( Stem("erziehungskunst"), "erziehungskun");});
test("erziehungsleute -> erziehungsleut", function() {deepEqual( Stem("erziehungsleute"), "erziehungsleut");});
test("erziehungsmassregeln -> erziehungsmassregeln", function() {deepEqual( Stem("erziehungsmassregeln"), "erziehungsmassregeln");});
test("erziehungsmühe -> erziehungsmuh", function() {deepEqual( Stem("erziehungsmühe"), "erziehungsmuh");});
test("erziehungsresultat -> erziehungsresultat", function() {deepEqual( Stem("erziehungsresultat"), "erziehungsresultat");});
test("erziehungswerk -> erziehungswerk", function() {deepEqual( Stem("erziehungswerk"), "erziehungswerk");});
test("erziele -> erziel", function() {deepEqual( Stem("erziele"), "erziel");});
test("erzielen -> erziel", function() {deepEqual( Stem("erzielen"), "erziel");});
test("erzielt -> erzielt", function() {deepEqual( Stem("erzielt"), "erzielt");});
test("erzittere -> erzitt", function() {deepEqual( Stem("erzittere"), "erzitt");});
test("erzittern -> erzitt", function() {deepEqual( Stem("erzittern"), "erzitt");});
test("erzitterte -> erzittert", function() {deepEqual( Stem("erzitterte"), "erzittert");});
test("erzog -> erzog", function() {deepEqual( Stem("erzog"), "erzog");});
test("erzogen -> erzog", function() {deepEqual( Stem("erzogen"), "erzog");});
test("erzürnt -> erzurnt", function() {deepEqual( Stem("erzürnt"), "erzurnt");});
test("erzürnte -> erzurnt", function() {deepEqual( Stem("erzürnte"), "erzurnt");});
test("erzwungene -> erzwung", function() {deepEqual( Stem("erzwungene"), "erzwung");});
test("erzwungenen -> erzwung", function() {deepEqual( Stem("erzwungenen"), "erzwung");});
test("es -> es", function() {deepEqual( Stem("es"), "es");});
test("esau -> esau", function() {deepEqual( Stem("esau"), "esau");});
test("esaus -> esaus", function() {deepEqual( Stem("esaus"), "esaus");});
test("eschenstab -> eschenstab", function() {deepEqual( Stem("eschenstab"), "eschenstab");});
test("esel -> esel", function() {deepEqual( Stem("esel"), "esel");});
test("eselein -> eselein", function() {deepEqual( Stem("eselein"), "eselein");});
test("eselfüllen -> eselfull", function() {deepEqual( Stem("eselfüllen"), "eselfull");});
test("eseln -> eseln", function() {deepEqual( Stem("eseln"), "eseln");});
test("esels -> esel", function() {deepEqual( Stem("esels"), "esel");});
test("esers -> eser", function() {deepEqual( Stem("esers"), "eser");});
test("espenlaub -> espenlaub", function() {deepEqual( Stem("espenlaub"), "espenlaub");});
test("essangelegenheiten -> essangeleg", function() {deepEqual( Stem("essangelegenheiten"), "essangeleg");});
test("essayistischen -> essayist", function() {deepEqual( Stem("essayistischen"), "essayist");});
test("essbare -> essbar", function() {deepEqual( Stem("essbare"), "essbar");});
test("essbares -> essbar", function() {deepEqual( Stem("essbares"), "essbar");});
test("essbegierige -> essbegier", function() {deepEqual( Stem("essbegierige"), "essbegier");});
test("essbestecke -> essbesteck", function() {deepEqual( Stem("essbestecke"), "essbesteck");});
test("esse -> ess", function() {deepEqual( Stem("esse"), "ess");});
test("essen -> ess", function() {deepEqual( Stem("essen"), "ess");});
test("essend -> essend", function() {deepEqual( Stem("essend"), "essend");});
test("essens -> ess", function() {deepEqual( Stem("essens"), "ess");});
test("esser -> ess", function() {deepEqual( Stem("esser"), "ess");});
test("esset -> esset", function() {deepEqual( Stem("esset"), "esset");});
test("essig -> essig", function() {deepEqual( Stem("essig"), "essig");});
test("essighafen -> essighaf", function() {deepEqual( Stem("essighafen"), "essighaf");});
test("esst -> esst", function() {deepEqual( Stem("esst"), "esst");});
test("eßt -> esst", function() {deepEqual( Stem("eßt"), "esst");});
test("esszimmer -> esszimm", function() {deepEqual( Stem("esszimmer"), "esszimm");});
test("eßzimmer -> esszimm", function() {deepEqual( Stem("eßzimmer"), "esszimm");});
test("esszimmers -> esszimm", function() {deepEqual( Stem("esszimmers"), "esszimm");});
test("eßzimmers -> esszimm", function() {deepEqual( Stem("eßzimmers"), "esszimm");});
test("est -> est", function() {deepEqual( Stem("est"), "est");});
test("estherchen -> estherch", function() {deepEqual( Stem("estherchen"), "estherch");});
test("estherchens -> estherch", function() {deepEqual( Stem("estherchens"), "estherch");});
test("estherlein -> estherlein", function() {deepEqual( Stem("estherlein"), "estherlein");});
test("esti -> esti", function() {deepEqual( Stem("esti"), "esti");});
test("estrich -> estrich", function() {deepEqual( Stem("estrich"), "estrich");});
test("estrichs -> estrich", function() {deepEqual( Stem("estrichs"), "estrich");});
test("et -> et", function() {deepEqual( Stem("et"), "et");});
test("etc -> etc", function() {deepEqual( Stem("etc"), "etc");});
test("ethische -> ethisch", function() {deepEqual( Stem("ethische"), "ethisch");});
test("ethnographischer -> ethnograph", function() {deepEqual( Stem("ethnographischer"), "ethnograph");});
test("etliche -> etlich", function() {deepEqual( Stem("etliche"), "etlich");});
test("etlicher -> etlich", function() {deepEqual( Stem("etlicher"), "etlich");});
test("etwa -> etwa", function() {deepEqual( Stem("etwa"), "etwa");});
test("etwaigen -> etwaig", function() {deepEqual( Stem("etwaigen"), "etwaig");});
test("etwanigen -> etwan", function() {deepEqual( Stem("etwanigen"), "etwan");});
test("etwas -> etwas", function() {deepEqual( Stem("etwas"), "etwas");});
test("euch -> euch", function() {deepEqual( Stem("euch"), "euch");});
test("euer -> euer", function() {deepEqual( Stem("euer"), "euer");});
test("euere -> euer", function() {deepEqual( Stem("euere"), "euer");});
test("euerm -> euerm", function() {deepEqual( Stem("euerm"), "euerm");});
test("euern -> euern", function() {deepEqual( Stem("euern"), "euern");});
test("eule -> eul", function() {deepEqual( Stem("eule"), "eul");});
test("eulen -> eul", function() {deepEqual( Stem("eulen"), "eul");});
test("eulenspiegelei -> eulenspiegelei", function() {deepEqual( Stem("eulenspiegelei"), "eulenspiegelei");});
test("eulenvogel -> eulenvogel", function() {deepEqual( Stem("eulenvogel"), "eulenvogel");});
test("euphrat -> euphrat", function() {deepEqual( Stem("euphrat"), "euphrat");});
test("eure -> eur", function() {deepEqual( Stem("eure"), "eur");});
test("eurem -> eur", function() {deepEqual( Stem("eurem"), "eur");});
test("euren -> eur", function() {deepEqual( Stem("euren"), "eur");});
test("eurer -> eur", function() {deepEqual( Stem("eurer"), "eur");});
test("eures -> eur", function() {deepEqual( Stem("eures"), "eur");});
test("euretwegen -> euretweg", function() {deepEqual( Stem("euretwegen"), "euretweg");});
test("europa -> europa", function() {deepEqual( Stem("europa"), "europa");});
test("europäern -> europa", function() {deepEqual( Stem("europäern"), "europa");});
test("europäische -> europa", function() {deepEqual( Stem("europäische"), "europa");});
test("europäischen -> europa", function() {deepEqual( Stem("europäischen"), "europa");});
test("europapokal -> europapokal", function() {deepEqual( Stem("europapokal"), "europapokal");});
test("europas -> europas", function() {deepEqual( Stem("europas"), "europas");});
test("eustachius -> eustachius", function() {deepEqual( Stem("eustachius"), "eustachius");});
test("eva -> eva", function() {deepEqual( Stem("eva"), "eva");});
test("evangelii -> evangelii", function() {deepEqual( Stem("evangelii"), "evangelii");});
test("evangelikale -> evangelikal", function() {deepEqual( Stem("evangelikale"), "evangelikal");});
test("evangelikalen -> evangelikal", function() {deepEqual( Stem("evangelikalen"), "evangelikal");});
test("evangelikalenin -> evangelikalenin", function() {deepEqual( Stem("evangelikalenin"), "evangelikalenin");});
test("evangelisch -> evangel", function() {deepEqual( Stem("evangelisch"), "evangel");});
test("evangelische -> evangel", function() {deepEqual( Stem("evangelische"), "evangel");});
test("evangelischen -> evangel", function() {deepEqual( Stem("evangelischen"), "evangel");});
test("evangelischer -> evangel", function() {deepEqual( Stem("evangelischer"), "evangel");});
test("evangelisches -> evangel", function() {deepEqual( Stem("evangelisches"), "evangel");});
test("evangelium -> evangelium", function() {deepEqual( Stem("evangelium"), "evangelium");});
test("eventuelle -> eventuell", function() {deepEqual( Stem("eventuelle"), "eventuell");});
test("evident -> evident", function() {deepEqual( Stem("evident"), "evident");});
test("evidenz -> evidenz", function() {deepEqual( Stem("evidenz"), "evidenz");});
test("ewig -> ewig", function() {deepEqual( Stem("ewig"), "ewig");});
test("ewige -> ewig", function() {deepEqual( Stem("ewige"), "ewig");});
test("ewigem -> ewig", function() {deepEqual( Stem("ewigem"), "ewig");});
test("ewigen -> ewig", function() {deepEqual( Stem("ewigen"), "ewig");});
test("ewiger -> ewig", function() {deepEqual( Stem("ewiger"), "ewig");});
test("ewiges -> ewig", function() {deepEqual( Stem("ewiges"), "ewig");});
test("ewigkeit -> ewig", function() {deepEqual( Stem("ewigkeit"), "ewig");});
test("ewigkeiten -> ewig", function() {deepEqual( Stem("ewigkeiten"), "ewig");});
test("ewiglich -> ewig", function() {deepEqual( Stem("ewiglich"), "ewig");});
test("ex -> ex", function() {deepEqual( Stem("ex"), "ex");});
test("exakte -> exakt", function() {deepEqual( Stem("exakte"), "exakt");});
test("exakten -> exakt", function() {deepEqual( Stem("exakten"), "exakt");});
test("excitatur -> excitatur", function() {deepEqual( Stem("excitatur"), "excitatur");});
test("exekutive -> exekutiv", function() {deepEqual( Stem("exekutive"), "exekutiv");});
test("exempel -> exempel", function() {deepEqual( Stem("exempel"), "exempel");});
test("exemplar -> exemplar", function() {deepEqual( Stem("exemplar"), "exemplar");});
test("exerzieren -> exerzi", function() {deepEqual( Stem("exerzieren"), "exerzi");});
test("exerziermeistern -> exerziermeist", function() {deepEqual( Stem("exerziermeistern"), "exerziermeist");});
test("exil -> exil", function() {deepEqual( Stem("exil"), "exil");});
test("existat -> existat", function() {deepEqual( Stem("existat"), "existat");});
test("existentialsatz -> existentialsatz", function() {deepEqual( Stem("existentialsatz"), "existentialsatz");});
test("existentiellen -> existentiell", function() {deepEqual( Stem("existentiellen"), "existentiell");});
test("existenz -> existenz", function() {deepEqual( Stem("existenz"), "existenz");});
test("existenzminimum -> existenzminimum", function() {deepEqual( Stem("existenzminimum"), "existenzminimum");});
test("existiere -> existi", function() {deepEqual( Stem("existiere"), "existi");});
test("existieren -> existi", function() {deepEqual( Stem("existieren"), "existi");});
test("existierenden -> existier", function() {deepEqual( Stem("existierenden"), "existier");});
test("existiert -> existiert", function() {deepEqual( Stem("existiert"), "existiert");});
test("existit -> existit", function() {deepEqual( Stem("existit"), "existit");});
test("exit -> exit", function() {deepEqual( Stem("exit"), "exit");});
test("exklusi -> exklusi", function() {deepEqual( Stem("exklusi"), "exklusi");});
test("exklusives -> exklusiv", function() {deepEqual( Stem("exklusives"), "exklusiv");});
test("exkrementen -> exkrement", function() {deepEqual( Stem("exkrementen"), "exkrement");});
test("expedition -> expedition", function() {deepEqual( Stem("expedition"), "expedition");});
test("experientia -> experientia", function() {deepEqual( Stem("experientia"), "experientia");});
test("experiment -> experiment", function() {deepEqual( Stem("experiment"), "experiment");});
test("expertenkommission -> expertenkommission", function() {deepEqual( Stem("expertenkommission"), "expertenkommission");});
test("explorare -> explorar", function() {deepEqual( Stem("explorare"), "explorar");});
test("explosion -> explosion", function() {deepEqual( Stem("explosion"), "explosion");});
test("explosiv -> explosiv", function() {deepEqual( Stem("explosiv"), "explosiv");});
test("explosive -> explosiv", function() {deepEqual( Stem("explosive"), "explosiv");});
test("expressen -> express", function() {deepEqual( Stem("expressen"), "express");});
test("extra -> extra", function() {deepEqual( Stem("extra"), "extra");});
test("extrapostillion -> extrapostillion", function() {deepEqual( Stem("extrapostillion"), "extrapostillion");});
test("extras -> extras", function() {deepEqual( Stem("extras"), "extras");});
test("extraurlaub -> extraurlaub", function() {deepEqual( Stem("extraurlaub"), "extraurlaub");});
test("exzellenz -> exzellenz", function() {deepEqual( Stem("exzellenz"), "exzellenz");});
test("ezw -> ezw", function() {deepEqual( Stem("ezw"), "ezw");});
test("f -> f", function() {deepEqual( Stem("f"), "f");});
test("fabelhafte -> fabelhaft", function() {deepEqual( Stem("fabelhafte"), "fabelhaft");});
test("fabelhaftes -> fabelhaft", function() {deepEqual( Stem("fabelhaftes"), "fabelhaft");});
test("fabeln -> fabeln", function() {deepEqual( Stem("fabeln"), "fabeln");});
test("fabrik -> fabrik", function() {deepEqual( Stem("fabrik"), "fabrik");});
test("fabrikant -> fabrikant", function() {deepEqual( Stem("fabrikant"), "fabrikant");});
test("fabrikanten -> fabrikant", function() {deepEqual( Stem("fabrikanten"), "fabrikant");});
test("fabriken -> fabrik", function() {deepEqual( Stem("fabriken"), "fabrik");});
test("fächern -> fach", function() {deepEqual( Stem("fächern"), "fach");});
test("faciles -> facil", function() {deepEqual( Stem("faciles"), "facil");});
test("facit -> facit", function() {deepEqual( Stem("facit"), "facit");});
test("fackel -> fackel", function() {deepEqual( Stem("fackel"), "fackel");});
test("fackeln -> fackeln", function() {deepEqual( Stem("fackeln"), "fackeln");});
test("facto -> facto", function() {deepEqual( Stem("facto"), "facto");});
test("factor -> factor", function() {deepEqual( Stem("factor"), "factor");});
test("faden -> fad", function() {deepEqual( Stem("faden"), "fad");});
test("fäden -> fad", function() {deepEqual( Stem("fäden"), "fad");});
test("fadendünnen -> fadendunn", function() {deepEqual( Stem("fadendünnen"), "fadendunn");});
test("fadenscheinigen -> fadenschein", function() {deepEqual( Stem("fadenscheinigen"), "fadenschein");});
test("fades -> fad", function() {deepEqual( Stem("fades"), "fad");});
test("fähig -> fahig", function() {deepEqual( Stem("fähig"), "fahig");});
test("fähiger -> fahig", function() {deepEqual( Stem("fähiger"), "fahig");});
test("fähigkeit -> fahig", function() {deepEqual( Stem("fähigkeit"), "fahig");});
test("fähigkeiten -> fahig", function() {deepEqual( Stem("fähigkeiten"), "fahig");});
test("fahl -> fahl", function() {deepEqual( Stem("fahl"), "fahl");});
test("fahlen -> fahl", function() {deepEqual( Stem("fahlen"), "fahl");});
test("fahler -> fahl", function() {deepEqual( Stem("fahler"), "fahl");});
test("fahne -> fahn", function() {deepEqual( Stem("fahne"), "fahn");});
test("fahnen -> fahn", function() {deepEqual( Stem("fahnen"), "fahn");});
test("fähnlein -> fahnlein", function() {deepEqual( Stem("fähnlein"), "fahnlein");});
test("fähnleins -> fahnlein", function() {deepEqual( Stem("fähnleins"), "fahnlein");});
test("fahr -> fahr", function() {deepEqual( Stem("fahr"), "fahr");});
test("fahren -> fahr", function() {deepEqual( Stem("fahren"), "fahr");});
test("fahrenden -> fahrend", function() {deepEqual( Stem("fahrenden"), "fahrend");});
test("fahrendes -> fahrend", function() {deepEqual( Stem("fahrendes"), "fahrend");});
test("fahrenzum -> fahrenzum", function() {deepEqual( Stem("fahrenzum"), "fahrenzum");});
test("fahrer -> fahr", function() {deepEqual( Stem("fahrer"), "fahr");});
test("fahrhabe -> fahrhab", function() {deepEqual( Stem("fahrhabe"), "fahrhab");});
test("fährlichkeit -> fahrlich", function() {deepEqual( Stem("fährlichkeit"), "fahrlich");});
test("fahrst -> fahrst", function() {deepEqual( Stem("fahrst"), "fahrst");});
test("fahrt -> fahrt", function() {deepEqual( Stem("fahrt"), "fahrt");});
test("fährt -> fahrt", function() {deepEqual( Stem("fährt"), "fahrt");});
test("fährte -> fahrt", function() {deepEqual( Stem("fährte"), "fahrt");});
test("fahrten -> fahrt", function() {deepEqual( Stem("fahrten"), "fahrt");});
test("fährten -> fahrt", function() {deepEqual( Stem("fährten"), "fahrt");});
test("fahrwasser -> fahrwass", function() {deepEqual( Stem("fahrwasser"), "fahrwass");});
test("fahrweg -> fahrweg", function() {deepEqual( Stem("fahrweg"), "fahrweg");});
test("fahrzeit -> fahrzeit", function() {deepEqual( Stem("fahrzeit"), "fahrzeit");});
test("fahrzeug -> fahrzeug", function() {deepEqual( Stem("fahrzeug"), "fahrzeug");});
test("fahrzeugs -> fahrzeug", function() {deepEqual( Stem("fahrzeugs"), "fahrzeug");});
test("fair -> fair", function() {deepEqual( Stem("fair"), "fair");});
test("faktischen -> faktisch", function() {deepEqual( Stem("faktischen"), "faktisch");});
test("faktotum -> faktotum", function() {deepEqual( Stem("faktotum"), "faktotum");});
test("faktum -> faktum", function() {deepEqual( Stem("faktum"), "faktum");});
test("fakultät -> fakultat", function() {deepEqual( Stem("fakultät"), "fakultat");});
test("fall -> fall", function() {deepEqual( Stem("fall"), "fall");});
test("falle -> fall", function() {deepEqual( Stem("falle"), "fall");});
test("fälle -> fall", function() {deepEqual( Stem("fälle"), "fall");});
test("fallen -> fall", function() {deepEqual( Stem("fallen"), "fall");});
test("fällen -> fall", function() {deepEqual( Stem("fällen"), "fall");});
test("fallend -> fallend", function() {deepEqual( Stem("fallend"), "fallend");});
test("fallende -> fallend", function() {deepEqual( Stem("fallende"), "fallend");});
test("fallenden -> fallend", function() {deepEqual( Stem("fallenden"), "fallend");});
test("falles -> fall", function() {deepEqual( Stem("falles"), "fall");});
test("fallet -> fallet", function() {deepEqual( Stem("fallet"), "fallet");});
test("falliert -> falliert", function() {deepEqual( Stem("falliert"), "falliert");});
test("fallimentes -> falliment", function() {deepEqual( Stem("fallimentes"), "falliment");});
test("falliten -> fallit", function() {deepEqual( Stem("falliten"), "fallit");});
test("falls -> fall", function() {deepEqual( Stem("falls"), "fall");});
test("fallstrick -> fallstrick", function() {deepEqual( Stem("fallstrick"), "fallstrick");});
test("fallstricke -> fallstrick", function() {deepEqual( Stem("fallstricke"), "fallstrick");});
test("fallt -> fallt", function() {deepEqual( Stem("fallt"), "fallt");});
test("fällt -> fallt", function() {deepEqual( Stem("fällt"), "fallt");});
test("falsch -> falsch", function() {deepEqual( Stem("falsch"), "falsch");});
test("falsche -> falsch", function() {deepEqual( Stem("falsche"), "falsch");});
test("falschem -> falsch", function() {deepEqual( Stem("falschem"), "falsch");});
test("falschen -> falsch", function() {deepEqual( Stem("falschen"), "falsch");});
test("falscher -> falsch", function() {deepEqual( Stem("falscher"), "falsch");});
test("falsches -> falsch", function() {deepEqual( Stem("falsches"), "falsch");});
test("falschesten -> falsch", function() {deepEqual( Stem("falschesten"), "falsch");});
test("falschheit -> falschheit", function() {deepEqual( Stem("falschheit"), "falschheit");});
test("falschheiten -> falschheit", function() {deepEqual( Stem("falschheiten"), "falschheit");});
test("fälschlich -> falschlich", function() {deepEqual( Stem("fälschlich"), "falschlich");});
test("fälschungen -> falschung", function() {deepEqual( Stem("fälschungen"), "falschung");});
test("falte -> falt", function() {deepEqual( Stem("falte"), "falt");});
test("falten -> falt", function() {deepEqual( Stem("falten"), "falt");});
test("falter -> falt", function() {deepEqual( Stem("falter"), "falt");});
test("faltete -> faltet", function() {deepEqual( Stem("faltete"), "faltet");});
test("falteten -> faltet", function() {deepEqual( Stem("falteten"), "faltet");});
test("faltigen -> faltig", function() {deepEqual( Stem("faltigen"), "faltig");});
test("fameses -> fames", function() {deepEqual( Stem("fameses"), "fames");});
test("familie -> famili", function() {deepEqual( Stem("familie"), "famili");});
test("familien -> famili", function() {deepEqual( Stem("familien"), "famili");});
test("familienerbstück -> familienerbstuck", function() {deepEqual( Stem("familienerbstück"), "familienerbstuck");});
test("familiengeschichte -> familiengeschicht", function() {deepEqual( Stem("familiengeschichte"), "familiengeschicht");});
test("familienglück -> familiengluck", function() {deepEqual( Stem("familienglück"), "familiengluck");});
test("familienvater -> familienvat", function() {deepEqual( Stem("familienvater"), "familienvat");});
test("familienverfolgung -> familienverfolg", function() {deepEqual( Stem("familienverfolgung"), "familienverfolg");});
test("famosen -> famos", function() {deepEqual( Stem("famosen"), "famos");});
test("fanatisierten -> fanatisiert", function() {deepEqual( Stem("fanatisierten"), "fanatisiert");});
test("fanatizismus -> fanatizismus", function() {deepEqual( Stem("fanatizismus"), "fanatizismus");});
test("fanchon -> fanchon", function() {deepEqual( Stem("fanchon"), "fanchon");});
test("fand -> fand", function() {deepEqual( Stem("fand"), "fand");});
test("fände -> fand", function() {deepEqual( Stem("fände"), "fand");});
test("fanden -> fand", function() {deepEqual( Stem("fanden"), "fand");});
test("fanfaren -> fanfar", function() {deepEqual( Stem("fanfaren"), "fanfar");});
test("fang -> fang", function() {deepEqual( Stem("fang"), "fang");});
test("fangen -> fang", function() {deepEqual( Stem("fangen"), "fang");});
test("fanges -> fang", function() {deepEqual( Stem("fanges"), "fang");});
test("fangnetze -> fangnetz", function() {deepEqual( Stem("fangnetze"), "fangnetz");});
test("fängst -> fang", function() {deepEqual( Stem("fängst"), "fang");});
test("fangt -> fangt", function() {deepEqual( Stem("fangt"), "fangt");});
test("fängt -> fangt", function() {deepEqual( Stem("fängt"), "fangt");});
test("fantasie -> fantasi", function() {deepEqual( Stem("fantasie"), "fantasi");});
test("fantastischen -> fantast", function() {deepEqual( Stem("fantastischen"), "fantast");});
test("farbe -> farb", function() {deepEqual( Stem("farbe"), "farb");});
test("farben -> farb", function() {deepEqual( Stem("farben"), "farb");});
test("färbende -> farbend", function() {deepEqual( Stem("färbende"), "farbend");});
test("farbenwesen -> farbenwes", function() {deepEqual( Stem("farbenwesen"), "farbenwes");});
test("farbigen -> farbig", function() {deepEqual( Stem("farbigen"), "farbig");});
test("farbiges -> farbig", function() {deepEqual( Stem("farbiges"), "farbig");});
test("farblosen -> farblos", function() {deepEqual( Stem("farblosen"), "farblos");});
test("farbtupfer -> farbtupf", function() {deepEqual( Stem("farbtupfer"), "farbtupf");});
test("fare -> far", function() {deepEqual( Stem("fare"), "far");});
test("farnblättern -> farnblatt", function() {deepEqual( Stem("farnblättern"), "farnblatt");});
test("farnen -> farn", function() {deepEqual( Stem("farnen"), "farn");});
test("farren -> farr", function() {deepEqual( Stem("farren"), "farr");});
test("fas -> fas", function() {deepEqual( Stem("fas"), "fas");});
test("fasching -> fasching", function() {deepEqual( Stem("fasching"), "fasching");});
test("faselnackt -> faselnackt", function() {deepEqual( Stem("faselnackt"), "faselnackt");});
test("faseriges -> faser", function() {deepEqual( Stem("faseriges"), "faser");});
test("fasern -> fas", function() {deepEqual( Stem("fasern"), "fas");});
test("fass -> fass", function() {deepEqual( Stem("fass"), "fass");});
test("fässchen -> fassch", function() {deepEqual( Stem("fässchen"), "fassch");});
test("fasse -> fass", function() {deepEqual( Stem("fasse"), "fass");});
test("fassen -> fass", function() {deepEqual( Stem("fassen"), "fass");});
test("fässer -> fass", function() {deepEqual( Stem("fässer"), "fass");});
test("fasset -> fasset", function() {deepEqual( Stem("fasset"), "fasset");});
test("fasslich -> fasslich", function() {deepEqual( Stem("fasslich"), "fasslich");});
test("faßlich -> fasslich", function() {deepEqual( Stem("faßlich"), "fasslich");});
test("fasst -> fasst", function() {deepEqual( Stem("fasst"), "fasst");});
test("faßt -> fasst", function() {deepEqual( Stem("faßt"), "fasst");});
test("fasste -> fasst", function() {deepEqual( Stem("fasste"), "fasst");});
test("faßte -> fasst", function() {deepEqual( Stem("faßte"), "fasst");});
test("fassten -> fasst", function() {deepEqual( Stem("fassten"), "fasst");});
test("faßten -> fasst", function() {deepEqual( Stem("faßten"), "fasst");});
test("fassung -> fassung", function() {deepEqual( Stem("fassung"), "fassung");});
test("fassungen -> fassung", function() {deepEqual( Stem("fassungen"), "fassung");});
test("fassungskraft -> fassungskraft", function() {deepEqual( Stem("fassungskraft"), "fassungskraft");});
test("fast -> fast", function() {deepEqual( Stem("fast"), "fast");});
test("fasten -> fast", function() {deepEqual( Stem("fasten"), "fast");});
test("fastenopfer -> fastenopf", function() {deepEqual( Stem("fastenopfer"), "fastenopf");});
test("fastnacht -> fastnacht", function() {deepEqual( Stem("fastnacht"), "fastnacht");});
test("fastnachtslüge -> fastnachtslug", function() {deepEqual( Stem("fastnachtslüge"), "fastnachtslug");});
test("fastnachtszeit -> fastnachtszeit", function() {deepEqual( Stem("fastnachtszeit"), "fastnachtszeit");});
test("fasziniert -> fasziniert", function() {deepEqual( Stem("fasziniert"), "fasziniert");});
test("fatale -> fatal", function() {deepEqual( Stem("fatale"), "fatal");});
test("fatalen -> fatal", function() {deepEqual( Stem("fatalen"), "fatal");});
test("fatum -> fatum", function() {deepEqual( Stem("fatum"), "fatum");});
test("fauchende -> fauchend", function() {deepEqual( Stem("fauchende"), "fauchend");});
test("fauchte -> faucht", function() {deepEqual( Stem("fauchte"), "faucht");});
test("faul -> faul", function() {deepEqual( Stem("faul"), "faul");});
test("faule -> faul", function() {deepEqual( Stem("faule"), "faul");});
test("faulenzen -> faulenz", function() {deepEqual( Stem("faulenzen"), "faulenz");});
test("fauler -> faul", function() {deepEqual( Stem("fauler"), "faul");});
test("faulheit -> faulheit", function() {deepEqual( Stem("faulheit"), "faulheit");});
test("faust -> faust", function() {deepEqual( Stem("faust"), "faust");});
test("fäustchen -> faustch", function() {deepEqual( Stem("fäustchen"), "faustch");});
test("fäuste -> faust", function() {deepEqual( Stem("fäuste"), "faust");});
test("fäusten -> faust", function() {deepEqual( Stem("fäusten"), "faust");});
test("faustgrosse -> faustgross", function() {deepEqual( Stem("faustgrosse"), "faustgross");});
test("faustrechtes -> faustrecht", function() {deepEqual( Stem("faustrechtes"), "faustrecht");});
test("fauteuil -> fauteuil", function() {deepEqual( Stem("fauteuil"), "fauteuil");});
test("fauteuils -> fauteuil", function() {deepEqual( Stem("fauteuils"), "fauteuil");});
test("fax -> fax", function() {deepEqual( Stem("fax"), "fax");});
test("faxen -> fax", function() {deepEqual( Stem("faxen"), "fax");});
test("fazit -> fazit", function() {deepEqual( Stem("fazit"), "fazit");});
test("feature -> featur", function() {deepEqual( Stem("feature"), "featur");});
test("febr -> febr", function() {deepEqual( Stem("febr"), "febr");});
test("februar -> februar", function() {deepEqual( Stem("februar"), "februar");});
test("fecht -> fecht", function() {deepEqual( Stem("fecht"), "fecht");});
test("fechten -> fecht", function() {deepEqual( Stem("fechten"), "fecht");});
test("fechtenden -> fechtend", function() {deepEqual( Stem("fechtenden"), "fechtend");});
test("fechtkunst -> fechtkun", function() {deepEqual( Stem("fechtkunst"), "fechtkun");});
test("fechtmeister -> fechtmeist", function() {deepEqual( Stem("fechtmeister"), "fechtmeist");});
test("fechtschul -> fechtschul", function() {deepEqual( Stem("fechtschul"), "fechtschul");});
test("feder -> fed", function() {deepEqual( Stem("feder"), "fed");});
test("federführung -> federfuhr", function() {deepEqual( Stem("federführung"), "federfuhr");});
test("federhüte -> federhut", function() {deepEqual( Stem("federhüte"), "federhut");});
test("federkraft -> federkraft", function() {deepEqual( Stem("federkraft"), "federkraft");});
test("federlesens -> federles", function() {deepEqual( Stem("federlesens"), "federles");});
test("federn -> fed", function() {deepEqual( Stem("federn"), "fed");});
test("fee -> fee", function() {deepEqual( Stem("fee"), "fee");});
test("feenhafte -> feenhaft", function() {deepEqual( Stem("feenhafte"), "feenhaft");});
test("fegefeuer -> fegefeu", function() {deepEqual( Stem("fegefeuer"), "fegefeu");});
test("fegenden -> fegend", function() {deepEqual( Stem("fegenden"), "fegend");});
test("fegezeit -> fegezeit", function() {deepEqual( Stem("fegezeit"), "fegezeit");});
test("fehl -> fehl", function() {deepEqual( Stem("fehl"), "fehl");});
test("fehle -> fehl", function() {deepEqual( Stem("fehle"), "fehl");});
test("fehlen -> fehl", function() {deepEqual( Stem("fehlen"), "fehl");});
test("fehler -> fehl", function() {deepEqual( Stem("fehler"), "fehl");});
test("fehlern -> fehl", function() {deepEqual( Stem("fehlern"), "fehl");});
test("fehlete -> fehlet", function() {deepEqual( Stem("fehlete"), "fehlet");});
test("fehlschlug -> fehlschlug", function() {deepEqual( Stem("fehlschlug"), "fehlschlug");});
test("fehlschusses -> fehlschuss", function() {deepEqual( Stem("fehlschusses"), "fehlschuss");});
test("fehlt -> fehlt", function() {deepEqual( Stem("fehlt"), "fehlt");});
test("fehlte -> fehlt", function() {deepEqual( Stem("fehlte"), "fehlt");});
test("fehlten -> fehlt", function() {deepEqual( Stem("fehlten"), "fehlt");});
test("feier -> feier", function() {deepEqual( Stem("feier"), "feier");});
test("feierabend -> feierab", function() {deepEqual( Stem("feierabend"), "feierab");});
test("feiere -> feier", function() {deepEqual( Stem("feiere"), "feier");});
test("feierlich -> feierlich", function() {deepEqual( Stem("feierlich"), "feierlich");});
test("feierliche -> feierlich", function() {deepEqual( Stem("feierliche"), "feierlich");});
test("feierlichen -> feierlich", function() {deepEqual( Stem("feierlichen"), "feierlich");});
test("feierlicher -> feierlich", function() {deepEqual( Stem("feierlicher"), "feierlich");});
test("feierliches -> feierlich", function() {deepEqual( Stem("feierliches"), "feierlich");});
test("feiern -> feiern", function() {deepEqual( Stem("feiern"), "feiern");});
test("feiert -> feiert", function() {deepEqual( Stem("feiert"), "feiert");});
test("feiertage -> feiertag", function() {deepEqual( Stem("feiertage"), "feiertag");});
test("feiertagen -> feiertag", function() {deepEqual( Stem("feiertagen"), "feiertag");});
test("feiertagsgwand -> feiertagsgwand", function() {deepEqual( Stem("feiertagsgwand"), "feiertagsgwand");});
test("feiertagsröcken -> feiertagsrock", function() {deepEqual( Stem("feiertagsröcken"), "feiertagsrock");});
test("feierte -> feiert", function() {deepEqual( Stem("feierte"), "feiert");});
test("feierten -> feiert", function() {deepEqual( Stem("feierten"), "feiert");});
test("feig -> feig", function() {deepEqual( Stem("feig"), "feig");});
test("feige -> feig", function() {deepEqual( Stem("feige"), "feig");});
test("feigen -> feig", function() {deepEqual( Stem("feigen"), "feig");});
test("feigenbaum -> feigenbaum", function() {deepEqual( Stem("feigenbaum"), "feigenbaum");});
test("feigenbäume -> feigenbaum", function() {deepEqual( Stem("feigenbäume"), "feigenbaum");});
test("feigenbaumes -> feigenbaum", function() {deepEqual( Stem("feigenbaumes"), "feigenbaum");});
test("feigenbaums -> feigenbaum", function() {deepEqual( Stem("feigenbaums"), "feigenbaum");});
test("feigenblätter -> feigenblatt", function() {deepEqual( Stem("feigenblätter"), "feigenblatt");});
test("feigern -> feig", function() {deepEqual( Stem("feigern"), "feig");});
test("feigheit -> feigheit", function() {deepEqual( Stem("feigheit"), "feigheit");});
test("feigling -> feigling", function() {deepEqual( Stem("feigling"), "feigling");});
test("feigwarzen -> feigwarz", function() {deepEqual( Stem("feigwarzen"), "feigwarz");});
test("feilenstaub -> feilenstaub", function() {deepEqual( Stem("feilenstaub"), "feilenstaub");});
test("fein -> fein", function() {deepEqual( Stem("fein"), "fein");});
test("feind -> feind", function() {deepEqual( Stem("feind"), "feind");});
test("feinde -> feind", function() {deepEqual( Stem("feinde"), "feind");});
test("feinden -> feind", function() {deepEqual( Stem("feinden"), "feind");});
test("feindes -> feind", function() {deepEqual( Stem("feindes"), "feind");});
test("feindin -> feindin", function() {deepEqual( Stem("feindin"), "feindin");});
test("feindlich -> feindlich", function() {deepEqual( Stem("feindlich"), "feindlich");});
test("feindlichen -> feindlich", function() {deepEqual( Stem("feindlichen"), "feindlich");});
test("feindschaft -> feindschaft", function() {deepEqual( Stem("feindschaft"), "feindschaft");});
test("feindselig -> feindsel", function() {deepEqual( Stem("feindselig"), "feindsel");});
test("feindseligen -> feindsel", function() {deepEqual( Stem("feindseligen"), "feindsel");});
test("feindseligkeit -> feindsel", function() {deepEqual( Stem("feindseligkeit"), "feindsel");});
test("feindseligkeiten -> feindsel", function() {deepEqual( Stem("feindseligkeiten"), "feindsel");});
test("feine -> fein", function() {deepEqual( Stem("feine"), "fein");});
test("feinem -> fein", function() {deepEqual( Stem("feinem"), "fein");});
test("feinen -> fein", function() {deepEqual( Stem("feinen"), "fein");});
test("feiner -> fein", function() {deepEqual( Stem("feiner"), "fein");});
test("feinere -> fein", function() {deepEqual( Stem("feinere"), "fein");});
test("feineren -> fein", function() {deepEqual( Stem("feineren"), "fein");});
test("feinern -> fein", function() {deepEqual( Stem("feinern"), "fein");});
test("feines -> fein", function() {deepEqual( Stem("feines"), "fein");});
test("feinfühlend -> feinfuhl", function() {deepEqual( Stem("feinfühlend"), "feinfuhl");});
test("feinschaft -> feinschaft", function() {deepEqual( Stem("feinschaft"), "feinschaft");});
test("feinschmecker -> feinschmeck", function() {deepEqual( Stem("feinschmecker"), "feinschmeck");});
test("feinsten -> fein", function() {deepEqual( Stem("feinsten"), "fein");});
test("feist -> feist", function() {deepEqual( Stem("feist"), "feist");});
test("feistes -> feist", function() {deepEqual( Stem("feistes"), "feist");});
test("feisthirsch -> feisthirsch", function() {deepEqual( Stem("feisthirsch"), "feisthirsch");});
test("feistzeit -> feistzeit", function() {deepEqual( Stem("feistzeit"), "feistzeit");});
test("feixt -> feixt", function() {deepEqual( Stem("feixt"), "feixt");});
test("feld -> feld", function() {deepEqual( Stem("feld"), "feld");});
test("felde -> feld", function() {deepEqual( Stem("felde"), "feld");});
test("felder -> feld", function() {deepEqual( Stem("felder"), "feld");});
test("feldern -> feld", function() {deepEqual( Stem("feldern"), "feld");});
test("felderzeugnis -> felderzeugnis", function() {deepEqual( Stem("felderzeugnis"), "felderzeugnis");});
test("feldes -> feld", function() {deepEqual( Stem("feldes"), "feld");});
test("feldfrüchte -> feldfrucht", function() {deepEqual( Stem("feldfrüchte"), "feldfrucht");});
test("feldfutter -> feldfutt", function() {deepEqual( Stem("feldfutter"), "feldfutt");});
test("feldgeschrei -> feldgeschrei", function() {deepEqual( Stem("feldgeschrei"), "feldgeschrei");});
test("feldherde -> feldherd", function() {deepEqual( Stem("feldherde"), "feldherd");});
test("feldherr -> feldherr", function() {deepEqual( Stem("feldherr"), "feldherr");});
test("feldleutnant -> feldleutnant", function() {deepEqual( Stem("feldleutnant"), "feldleutnant");});
test("feldprediger -> feldpred", function() {deepEqual( Stem("feldprediger"), "feldpred");});
test("feldrande -> feldrand", function() {deepEqual( Stem("feldrande"), "feldrand");});
test("feldseite -> feldseit", function() {deepEqual( Stem("feldseite"), "feldseit");});
test("feldsteinen -> feldstein", function() {deepEqual( Stem("feldsteinen"), "feldstein");});
test("feldwebelsgang -> feldwebelsgang", function() {deepEqual( Stem("feldwebelsgang"), "feldwebelsgang");});
test("feldweg -> feldweg", function() {deepEqual( Stem("feldweg"), "feldweg");});
test("feldzug -> feldzug", function() {deepEqual( Stem("feldzug"), "feldzug");});
test("feldzuges -> feldzug", function() {deepEqual( Stem("feldzuges"), "feldzug");});
test("felix -> felix", function() {deepEqual( Stem("felix"), "felix");});
test("fell -> fell", function() {deepEqual( Stem("fell"), "fell");});
test("fellchen -> fellch", function() {deepEqual( Stem("fellchen"), "fellch");});
test("felle -> fell", function() {deepEqual( Stem("felle"), "fell");});
test("felleisen -> felleis", function() {deepEqual( Stem("felleisen"), "felleis");});
test("felleisenfuhrwerke -> felleisenfuhrwerk", function() {deepEqual( Stem("felleisenfuhrwerke"), "felleisenfuhrwerk");});
test("felleisens -> felleis", function() {deepEqual( Stem("felleisens"), "felleis");});
test("fellen -> fell", function() {deepEqual( Stem("fellen"), "fell");});
test("fels -> fel", function() {deepEqual( Stem("fels"), "fel");});
test("felsan -> felsan", function() {deepEqual( Stem("felsan"), "felsan");});
test("felsblock -> felsblock", function() {deepEqual( Stem("felsblock"), "felsblock");});
test("felsblöcke -> felsblock", function() {deepEqual( Stem("felsblöcke"), "felsblock");});
test("felsen -> fels", function() {deepEqual( Stem("felsen"), "fels");});
test("felsenkette -> felsenkett", function() {deepEqual( Stem("felsenkette"), "felsenkett");});
test("felsennase -> felsennas", function() {deepEqual( Stem("felsennase"), "felsennas");});
test("felsentor -> felsentor", function() {deepEqual( Stem("felsentor"), "felsentor");});
test("felsgestalten -> felsgestalt", function() {deepEqual( Stem("felsgestalten"), "felsgestalt");});
test("felsgetürme -> felsgeturm", function() {deepEqual( Stem("felsgetürme"), "felsgeturm");});
test("felskegel -> felskegel", function() {deepEqual( Stem("felskegel"), "felskegel");});
test("felskolossen -> felskoloss", function() {deepEqual( Stem("felskolossen"), "felskoloss");});
test("felsmassen -> felsmass", function() {deepEqual( Stem("felsmassen"), "felsmass");});
test("felsnase -> felsnas", function() {deepEqual( Stem("felsnase"), "felsnas");});
test("felsplateau -> felsplateau", function() {deepEqual( Stem("felsplateau"), "felsplateau");});
test("felsplatte -> felsplatt", function() {deepEqual( Stem("felsplatte"), "felsplatt");});
test("felsplatten -> felsplatt", function() {deepEqual( Stem("felsplatten"), "felsplatt");});
test("felssteine -> felsstein", function() {deepEqual( Stem("felssteine"), "felsstein");});
test("felstisch -> felstisch", function() {deepEqual( Stem("felstisch"), "felstisch");});
test("felswand -> felswand", function() {deepEqual( Stem("felswand"), "felswand");});
test("felswänden -> felswand", function() {deepEqual( Stem("felswänden"), "felswand");});
test("felszacke -> felszack", function() {deepEqual( Stem("felszacke"), "felszack");});
test("femgesehen -> femgeseh", function() {deepEqual( Stem("femgesehen"), "femgeseh");});
test("fenn -> fenn", function() {deepEqual( Stem("fenn"), "fenn");});
test("fenster -> fenst", function() {deepEqual( Stem("fenster"), "fenst");});
test("fensterbrett -> fensterbrett", function() {deepEqual( Stem("fensterbrett"), "fensterbrett");});
test("fensterchen -> fensterch", function() {deepEqual( Stem("fensterchen"), "fensterch");});
test("fensterflügel -> fensterflugel", function() {deepEqual( Stem("fensterflügel"), "fensterflugel");});
test("fenstern -> fenst", function() {deepEqual( Stem("fenstern"), "fenst");});
test("fensternische -> fenstern", function() {deepEqual( Stem("fensternische"), "fenstern");});
test("fensterrand -> fensterrand", function() {deepEqual( Stem("fensterrand"), "fensterrand");});
test("fensters -> fenst", function() {deepEqual( Stem("fensters"), "fenst");});
test("fensterscheiben -> fensterscheib", function() {deepEqual( Stem("fensterscheiben"), "fensterscheib");});
test("fenstersimse -> fenstersims", function() {deepEqual( Stem("fenstersimse"), "fenstersims");});
test("fenstervorhänge -> fenstervorhang", function() {deepEqual( Stem("fenstervorhänge"), "fenstervorhang");});
test("fergus -> fergus", function() {deepEqual( Stem("fergus"), "fergus");});
test("ferien -> feri", function() {deepEqual( Stem("ferien"), "feri");});
test("ferienjob -> ferienjob", function() {deepEqual( Stem("ferienjob"), "ferienjob");});
test("ferienstübchens -> ferienstubch", function() {deepEqual( Stem("ferienstübchens"), "ferienstubch");});
test("feris -> feris", function() {deepEqual( Stem("feris"), "feris");});
test("ferkelgequiek -> ferkelgequiek", function() {deepEqual( Stem("ferkelgequiek"), "ferkelgequiek");});
test("fern -> fern", function() {deepEqual( Stem("fern"), "fern");});
test("fernab -> fernab", function() {deepEqual( Stem("fernab"), "fernab");});
test("ferne -> fern", function() {deepEqual( Stem("ferne"), "fern");});
test("fernem -> fern", function() {deepEqual( Stem("fernem"), "fern");});
test("fernen -> fern", function() {deepEqual( Stem("fernen"), "fern");});
test("ferner -> fern", function() {deepEqual( Stem("ferner"), "fern");});
test("fernere -> fern", function() {deepEqual( Stem("fernere"), "fern");});
test("ferneren -> fern", function() {deepEqual( Stem("ferneren"), "fern");});
test("ferneres -> fern", function() {deepEqual( Stem("ferneres"), "fern");});
test("fernerhin -> fernerhin", function() {deepEqual( Stem("fernerhin"), "fernerhin");});
test("fernes -> fern", function() {deepEqual( Stem("fernes"), "fern");});
test("fernher -> fernh", function() {deepEqual( Stem("fernher"), "fernh");});
test("fernrohr -> fernrohr", function() {deepEqual( Stem("fernrohr"), "fernrohr");});
test("fernrohrs -> fernrohr", function() {deepEqual( Stem("fernrohrs"), "fernrohr");});
test("fernsehen -> fernseh", function() {deepEqual( Stem("fernsehen"), "fernseh");});
test("fernsichtige -> fernsicht", function() {deepEqual( Stem("fernsichtige"), "fernsicht");});
test("fernsten -> fern", function() {deepEqual( Stem("fernsten"), "fern");});
test("ferse -> fers", function() {deepEqual( Stem("ferse"), "fers");});
test("fersen -> fers", function() {deepEqual( Stem("fersen"), "fers");});
test("fertig -> fertig", function() {deepEqual( Stem("fertig"), "fertig");});
test("fertigbrachte -> fertigbracht", function() {deepEqual( Stem("fertigbrachte"), "fertigbracht");});
test("fertige -> fertig", function() {deepEqual( Stem("fertige"), "fertig");});
test("fertigen -> fertig", function() {deepEqual( Stem("fertigen"), "fertig");});
test("fertiggestellt -> fertiggestellt", function() {deepEqual( Stem("fertiggestellt"), "fertiggestellt");});
test("fertigzubringen -> fertigzubring", function() {deepEqual( Stem("fertigzubringen"), "fertigzubring");});
test("fesseln -> fesseln", function() {deepEqual( Stem("fesseln"), "fesseln");});
test("fesselte -> fesselt", function() {deepEqual( Stem("fesselte"), "fesselt");});
test("fest -> fest", function() {deepEqual( Stem("fest"), "fest");});
test("festband -> festband", function() {deepEqual( Stem("festband"), "festband");});
test("feste -> fest", function() {deepEqual( Stem("feste"), "fest");});
test("festem -> fest", function() {deepEqual( Stem("festem"), "fest");});
test("festen -> fest", function() {deepEqual( Stem("festen"), "fest");});
test("fester -> fest", function() {deepEqual( Stem("fester"), "fest");});
test("festerem -> fest", function() {deepEqual( Stem("festerem"), "fest");});
test("festes -> fest", function() {deepEqual( Stem("festes"), "fest");});
test("festgebannt -> festgebannt", function() {deepEqual( Stem("festgebannt"), "festgebannt");});
test("festgebauten -> festgebaut", function() {deepEqual( Stem("festgebauten"), "festgebaut");});
test("festgebunden -> festgebund", function() {deepEqual( Stem("festgebunden"), "festgebund");});
test("festgehalten -> festgehalt", function() {deepEqual( Stem("festgehalten"), "festgehalt");});
test("festgeklebt -> festgeklebt", function() {deepEqual( Stem("festgeklebt"), "festgeklebt");});
test("festgeklemmt -> festgeklemmt", function() {deepEqual( Stem("festgeklemmt"), "festgeklemmt");});
test("festgelegt -> festgelegt", function() {deepEqual( Stem("festgelegt"), "festgelegt");});
test("festgemachte -> festgemacht", function() {deepEqual( Stem("festgemachte"), "festgemacht");});
test("festgesetzte -> festgesetzt", function() {deepEqual( Stem("festgesetzte"), "festgesetzt");});
test("festgestellt -> festgestellt", function() {deepEqual( Stem("festgestellt"), "festgestellt");});
test("festgottesdienst -> festgottesdien", function() {deepEqual( Stem("festgottesdienst"), "festgottesdien");});
test("festhalten -> festhalt", function() {deepEqual( Stem("festhalten"), "festhalt");});
test("festivitatum -> festivitatum", function() {deepEqual( Stem("festivitatum"), "festivitatum");});
test("festland -> festland", function() {deepEqual( Stem("festland"), "festland");});
test("festlich -> festlich", function() {deepEqual( Stem("festlich"), "festlich");});
test("festlichen -> festlich", function() {deepEqual( Stem("festlichen"), "festlich");});
test("festmal -> festmal", function() {deepEqual( Stem("festmal"), "festmal");});
test("festnahme -> festnahm", function() {deepEqual( Stem("festnahme"), "festnahm");});
test("festnehmen -> festnehm", function() {deepEqual( Stem("festnehmen"), "festnehm");});
test("festpredigt -> festpredigt", function() {deepEqual( Stem("festpredigt"), "festpredigt");});
test("festsaale -> festsaal", function() {deepEqual( Stem("festsaale"), "festsaal");});
test("festschmaus -> festschmaus", function() {deepEqual( Stem("festschmaus"), "festschmaus");});
test("festsetzt -> festsetzt", function() {deepEqual( Stem("festsetzt"), "festsetzt");});
test("festsetzte -> festsetzt", function() {deepEqual( Stem("festsetzte"), "festsetzt");});
test("festsetzten -> festsetzt", function() {deepEqual( Stem("festsetzten"), "festsetzt");});
test("feststehende -> feststeh", function() {deepEqual( Stem("feststehende"), "feststeh");});
test("feststellen -> feststell", function() {deepEqual( Stem("feststellen"), "feststell");});
test("feststellt -> feststellt", function() {deepEqual( Stem("feststellt"), "feststellt");});
test("feststellung -> feststell", function() {deepEqual( Stem("feststellung"), "feststell");});
test("festung -> festung", function() {deepEqual( Stem("festung"), "festung");});
test("festungen -> festung", function() {deepEqual( Stem("festungen"), "festung");});
test("festzuhalten -> festzuhalt", function() {deepEqual( Stem("festzuhalten"), "festzuhalt");});
test("festzusetzen -> festzusetz", function() {deepEqual( Stem("festzusetzen"), "festzusetz");});
test("festzustellen -> festzustell", function() {deepEqual( Stem("festzustellen"), "festzustell");});
test("fett -> fett", function() {deepEqual( Stem("fett"), "fett");});
test("fette -> fett", function() {deepEqual( Stem("fette"), "fett");});
test("fetten -> fett", function() {deepEqual( Stem("fetten"), "fett");});
test("fetter -> fett", function() {deepEqual( Stem("fetter"), "fett");});
test("fettes -> fett", function() {deepEqual( Stem("fettes"), "fett");});
test("fettigkeit -> fettig", function() {deepEqual( Stem("fettigkeit"), "fettig");});
test("fettigkeiten -> fettig", function() {deepEqual( Stem("fettigkeiten"), "fettig");});
test("fettwerden -> fettwerd", function() {deepEqual( Stem("fettwerden"), "fettwerd");});
test("fetzchen -> fetzch", function() {deepEqual( Stem("fetzchen"), "fetzch");});
test("fetzel -> fetzel", function() {deepEqual( Stem("fetzel"), "fetzel");});
test("fetzen -> fetz", function() {deepEqual( Stem("fetzen"), "fetz");});
test("feucht -> feucht", function() {deepEqual( Stem("feucht"), "feucht");});
test("feuchten -> feucht", function() {deepEqual( Stem("feuchten"), "feucht");});
test("feuchtes -> feucht", function() {deepEqual( Stem("feuchtes"), "feucht");});
test("feuer -> feu", function() {deepEqual( Stem("feuer"), "feu");});
test("feuerbauche -> feuerbauch", function() {deepEqual( Stem("feuerbauche"), "feuerbauch");});
test("feuerberg -> feuerberg", function() {deepEqual( Stem("feuerberg"), "feuerberg");});
test("feuerchen -> feuerch", function() {deepEqual( Stem("feuerchen"), "feuerch");});
test("feuerduft -> feuerduft", function() {deepEqual( Stem("feuerduft"), "feuerduft");});
test("feuerfarben -> feuerfarb", function() {deepEqual( Stem("feuerfarben"), "feuerfarb");});
test("feuerflamme -> feuerflamm", function() {deepEqual( Stem("feuerflamme"), "feuerflamm");});
test("feuerflammen -> feuerflamm", function() {deepEqual( Stem("feuerflammen"), "feuerflamm");});
test("feuerglanz -> feuerglanz", function() {deepEqual( Stem("feuerglanz"), "feuerglanz");});
test("feuerherde -> feuerherd", function() {deepEqual( Stem("feuerherde"), "feuerherd");});
test("feuerhölle -> feuerholl", function() {deepEqual( Stem("feuerhölle"), "feuerholl");});
test("feuerkohlen -> feuerkohl", function() {deepEqual( Stem("feuerkohlen"), "feuerkohl");});
test("feuern -> feu", function() {deepEqual( Stem("feuern"), "feu");});
test("feuerofen -> feuerof", function() {deepEqual( Stem("feuerofen"), "feuerof");});
test("feuerpfuhl -> feuerpfuhl", function() {deepEqual( Stem("feuerpfuhl"), "feuerpfuhl");});
test("feuerrot -> feuerrot", function() {deepEqual( Stem("feuerrot"), "feuerrot");});
test("feuerröte -> feuerrot", function() {deepEqual( Stem("feuerröte"), "feuerrot");});
test("feuers -> feu", function() {deepEqual( Stem("feuers"), "feu");});
test("feuersäule -> feuersaul", function() {deepEqual( Stem("feuersäule"), "feuersaul");});
test("feuersbrünsten -> feuersbrun", function() {deepEqual( Stem("feuersbrünsten"), "feuersbrun");});
test("feuerschlacht -> feuerschlacht", function() {deepEqual( Stem("feuerschlacht"), "feuerschlacht");});
test("feuerschlange -> feuerschlang", function() {deepEqual( Stem("feuerschlange"), "feuerschlang");});
test("feuerspeienden -> feuerspei", function() {deepEqual( Stem("feuerspeienden"), "feuerspei");});
test("feuerstrom -> feuerstrom", function() {deepEqual( Stem("feuerstrom"), "feuerstrom");});
test("feuerung -> feuer", function() {deepEqual( Stem("feuerung"), "feuer");});
test("feuerwaffen -> feuerwaff", function() {deepEqual( Stem("feuerwaffen"), "feuerwaff");});
test("feuerwehrmann -> feuerwehrmann", function() {deepEqual( Stem("feuerwehrmann"), "feuerwehrmann");});
test("feuerwerk -> feuerwerk", function() {deepEqual( Stem("feuerwerk"), "feuerwerk");});
test("feuerzungen -> feuerz", function() {deepEqual( Stem("feuerzungen"), "feuerz");});
test("feurig -> feurig", function() {deepEqual( Stem("feurig"), "feurig");});
test("feurige -> feurig", function() {deepEqual( Stem("feurige"), "feurig");});
test("feurigem -> feurig", function() {deepEqual( Stem("feurigem"), "feurig");});
test("feurigen -> feurig", function() {deepEqual( Stem("feurigen"), "feurig");});
test("feuriges -> feurig", function() {deepEqual( Stem("feuriges"), "feurig");});
test("feurigsten -> feurig", function() {deepEqual( Stem("feurigsten"), "feurig");});
test("fiber -> fib", function() {deepEqual( Stem("fiber"), "fib");});
test("fiberchen -> fiberch", function() {deepEqual( Stem("fiberchen"), "fiberch");});
test("fibern -> fib", function() {deepEqual( Stem("fibern"), "fib");});
test("ficht -> ficht", function() {deepEqual( Stem("ficht"), "ficht");});
test("fichten -> ficht", function() {deepEqual( Stem("fichten"), "ficht");});
test("fichtenast -> fichtenast", function() {deepEqual( Stem("fichtenast"), "fichtenast");});
test("fichtenbusch -> fichtenbusch", function() {deepEqual( Stem("fichtenbusch"), "fichtenbusch");});
test("fichtenbüschlein -> fichtenbuschlein", function() {deepEqual( Stem("fichtenbüschlein"), "fichtenbuschlein");});
test("fichtengebüsche -> fichtengebusch", function() {deepEqual( Stem("fichtengebüsche"), "fichtengebusch");});
test("fichtengestrüpp -> fichtengestrupp", function() {deepEqual( Stem("fichtengestrüpp"), "fichtengestrupp");});
test("fichtenwipfel -> fichtenwipfel", function() {deepEqual( Stem("fichtenwipfel"), "fichtenwipfel");});
test("fichtenzweigen -> fichtenzweig", function() {deepEqual( Stem("fichtenzweigen"), "fichtenzweig");});
test("fidel -> fidel", function() {deepEqual( Stem("fidel"), "fidel");});
test("fieber -> fieb", function() {deepEqual( Stem("fieber"), "fieb");});
test("fieberhaft -> fieberhaft", function() {deepEqual( Stem("fieberhaft"), "fieberhaft");});
test("fieberhaften -> fieberhaft", function() {deepEqual( Stem("fieberhaften"), "fieberhaft");});
test("fiebernde -> fiebernd", function() {deepEqual( Stem("fiebernde"), "fiebernd");});
test("fiebernder -> fiebernd", function() {deepEqual( Stem("fiebernder"), "fiebernd");});
test("fieberte -> fiebert", function() {deepEqual( Stem("fieberte"), "fiebert");});
test("fiedelmann -> fiedelmann", function() {deepEqual( Stem("fiedelmann"), "fiedelmann");});
test("fiel -> fiel", function() {deepEqual( Stem("fiel"), "fiel");});
test("fiele -> fiel", function() {deepEqual( Stem("fiele"), "fiel");});
test("fielen -> fiel", function() {deepEqual( Stem("fielen"), "fiel");});
test("figur -> figur", function() {deepEqual( Stem("figur"), "figur");});
test("figürchen -> figurch", function() {deepEqual( Stem("figürchen"), "figurch");});
test("figuren -> figur", function() {deepEqual( Stem("figuren"), "figur");});
test("filiale -> filial", function() {deepEqual( Stem("filiale"), "filial");});
test("film -> film", function() {deepEqual( Stem("film"), "film");});
test("filmfestival -> filmfestival", function() {deepEqual( Stem("filmfestival"), "filmfestival");});
test("filmfirma -> filmfirma", function() {deepEqual( Stem("filmfirma"), "filmfirma");});
test("filmversion -> filmversion", function() {deepEqual( Stem("filmversion"), "filmversion");});
test("filz -> filz", function() {deepEqual( Stem("filz"), "filz");});
test("filzhütchen -> filzhutch", function() {deepEqual( Stem("filzhütchen"), "filzhutch");});
test("filzkleider -> filzkleid", function() {deepEqual( Stem("filzkleider"), "filzkleid");});
test("finanziell -> finanziell", function() {deepEqual( Stem("finanziell"), "finanziell");});
test("finanzielle -> finanziell", function() {deepEqual( Stem("finanzielle"), "finanziell");});
test("finanziellen -> finanziell", function() {deepEqual( Stem("finanziellen"), "finanziell");});
test("finanzieren -> finanzi", function() {deepEqual( Stem("finanzieren"), "finanzi");});
test("finanziert -> finanziert", function() {deepEqual( Stem("finanziert"), "finanziert");});
test("finanzleistungen -> finanzleist", function() {deepEqual( Stem("finanzleistungen"), "finanzleist");});
test("finanzpolitisches -> finanzpolit", function() {deepEqual( Stem("finanzpolitisches"), "finanzpolit");});
test("finanzstadt -> finanzstadt", function() {deepEqual( Stem("finanzstadt"), "finanzstadt");});
test("find -> find", function() {deepEqual( Stem("find"), "find");});
test("finde -> find", function() {deepEqual( Stem("finde"), "find");});
test("finden -> find", function() {deepEqual( Stem("finden"), "find");});
test("findende -> findend", function() {deepEqual( Stem("findende"), "findend");});
test("finder -> find", function() {deepEqual( Stem("finder"), "find");});
test("findest -> find", function() {deepEqual( Stem("findest"), "find");});
test("findet -> findet", function() {deepEqual( Stem("findet"), "findet");});
test("findige -> findig", function() {deepEqual( Stem("findige"), "findig");});
test("findt -> findt", function() {deepEqual( Stem("findt"), "findt");});
test("fing -> fing", function() {deepEqual( Stem("fing"), "fing");});
test("fingen -> fing", function() {deepEqual( Stem("fingen"), "fing");});
test("finger -> fing", function() {deepEqual( Stem("finger"), "fing");});
test("fingerabdruck -> fingerabdruck", function() {deepEqual( Stem("fingerabdruck"), "fingerabdruck");});
test("fingerchen -> fingerch", function() {deepEqual( Stem("fingerchen"), "fingerch");});
test("fingerhut -> fingerhut", function() {deepEqual( Stem("fingerhut"), "fingerhut");});
test("fingern -> fing", function() {deepEqual( Stem("fingern"), "fing");});
test("fingers -> fing", function() {deepEqual( Stem("fingers"), "fing");});
test("fingerspitzen -> fingerspitz", function() {deepEqual( Stem("fingerspitzen"), "fingerspitz");});
test("fingerstellung -> fingerstell", function() {deepEqual( Stem("fingerstellung"), "fingerstell");});
test("fink -> fink", function() {deepEqual( Stem("fink"), "fink");});
test("finken -> fink", function() {deepEqual( Stem("finken"), "fink");});
test("finster -> finst", function() {deepEqual( Stem("finster"), "finst");});
test("finstere -> finst", function() {deepEqual( Stem("finstere"), "finst");});
test("finsteren -> finst", function() {deepEqual( Stem("finsteren"), "finst");});
test("finsteres -> finst", function() {deepEqual( Stem("finsteres"), "finst");});
test("finsterm -> finsterm", function() {deepEqual( Stem("finsterm"), "finsterm");});
test("finstern -> finst", function() {deepEqual( Stem("finstern"), "finst");});
test("finsternis -> finsternis", function() {deepEqual( Stem("finsternis"), "finsternis");});
test("finsternissen -> finsternis", function() {deepEqual( Stem("finsternissen"), "finsternis");});
test("finten -> fint", function() {deepEqual( Stem("finten"), "fint");});
test("fir -> fir", function() {deepEqual( Stem("fir"), "fir");});
test("firlefanz -> firlefanz", function() {deepEqual( Stem("firlefanz"), "firlefanz");});
test("firma -> firma", function() {deepEqual( Stem("firma"), "firma");});
test("firmen -> firm", function() {deepEqual( Stem("firmen"), "firm");});
test("first -> first", function() {deepEqual( Stem("first"), "first");});
test("firste -> first", function() {deepEqual( Stem("firste"), "first");});
test("firti -> firti", function() {deepEqual( Stem("firti"), "firti");});
test("fisch -> fisch", function() {deepEqual( Stem("fisch"), "fisch");});
test("fischblattern -> fischblatt", function() {deepEqual( Stem("fischblattern"), "fischblatt");});
test("fischchen -> fischch", function() {deepEqual( Stem("fischchen"), "fischch");});
test("fische -> fisch", function() {deepEqual( Stem("fische"), "fisch");});
test("fischeimer -> fischeim", function() {deepEqual( Stem("fischeimer"), "fischeim");});
test("fischen -> fisch", function() {deepEqual( Stem("fischen"), "fisch");});
test("fischer -> fisch", function() {deepEqual( Stem("fischer"), "fisch");});
test("fischerei -> fischerei", function() {deepEqual( Stem("fischerei"), "fischerei");});
test("fischergeräte -> fischergerat", function() {deepEqual( Stem("fischergeräte"), "fischergerat");});
test("fischern -> fisch", function() {deepEqual( Stem("fischern"), "fisch");});
test("fisches -> fisch", function() {deepEqual( Stem("fisches"), "fisch");});
test("fischesser -> fischess", function() {deepEqual( Stem("fischesser"), "fischess");});
test("fischest -> fisch", function() {deepEqual( Stem("fischest"), "fisch");});
test("fischgattungen -> fischgatt", function() {deepEqual( Stem("fischgattungen"), "fischgatt");});
test("fischlein -> fischlein", function() {deepEqual( Stem("fischlein"), "fischlein");});
test("fish -> fish", function() {deepEqual( Stem("fish"), "fish");});
test("fittiche -> fittich", function() {deepEqual( Stem("fittiche"), "fittich");});
test("fittichen -> fittich", function() {deepEqual( Stem("fittichen"), "fittich");});
test("fittichs -> fittich", function() {deepEqual( Stem("fittichs"), "fittich");});
test("fixe -> fix", function() {deepEqual( Stem("fixe"), "fix");});
test("fixen -> fix", function() {deepEqual( Stem("fixen"), "fix");});
test("fläche -> flach", function() {deepEqual( Stem("fläche"), "flach");});
test("flachen -> flach", function() {deepEqual( Stem("flachen"), "flach");});
test("flächen -> flach", function() {deepEqual( Stem("flächen"), "flach");});
test("flächendeckend -> flachendeck", function() {deepEqual( Stem("flächendeckend"), "flachendeck");});
test("flachs -> flach", function() {deepEqual( Stem("flachs"), "flach");});
test("flächsenen -> flachs", function() {deepEqual( Stem("flächsenen"), "flachs");});
test("flachses -> flachs", function() {deepEqual( Stem("flachses"), "flachs");});
test("flackernde -> flackernd", function() {deepEqual( Stem("flackernde"), "flackernd");});
test("flackerten -> flackert", function() {deepEqual( Stem("flackerten"), "flackert");});
test("fladenkuchen -> fladenkuch", function() {deepEqual( Stem("fladenkuchen"), "fladenkuch");});
test("flair -> flair", function() {deepEqual( Stem("flair"), "flair");});
test("flämmchen -> flammch", function() {deepEqual( Stem("flämmchen"), "flammch");});
test("flamme -> flamm", function() {deepEqual( Stem("flamme"), "flamm");});
test("flammen -> flamm", function() {deepEqual( Stem("flammen"), "flamm");});
test("flammenbart -> flammenbart", function() {deepEqual( Stem("flammenbart"), "flammenbart");});
test("flammende -> flammend", function() {deepEqual( Stem("flammende"), "flammend");});
test("flammenden -> flammend", function() {deepEqual( Stem("flammenden"), "flammend");});
test("flammendes -> flammend", function() {deepEqual( Stem("flammendes"), "flammend");});
test("flammenmeer -> flammenme", function() {deepEqual( Stem("flammenmeer"), "flammenme");});
test("flanke -> flank", function() {deepEqual( Stem("flanke"), "flank");});
test("fläschchen -> flaschch", function() {deepEqual( Stem("fläschchen"), "flaschch");});
test("flasche -> flasch", function() {deepEqual( Stem("flasche"), "flasch");});
test("flaschen -> flasch", function() {deepEqual( Stem("flaschen"), "flasch");});
test("flats -> flat", function() {deepEqual( Stem("flats"), "flat");});
test("flattergeräusch -> flattergerausch", function() {deepEqual( Stem("flattergeräusch"), "flattergerausch");});
test("flattern -> flatt", function() {deepEqual( Stem("flattern"), "flatt");});
test("flatternde -> flatternd", function() {deepEqual( Stem("flatternde"), "flatternd");});
test("flatternden -> flatternd", function() {deepEqual( Stem("flatternden"), "flatternd");});
test("flatterspiel -> flatterspiel", function() {deepEqual( Stem("flatterspiel"), "flatterspiel");});
test("flatterte -> flattert", function() {deepEqual( Stem("flatterte"), "flattert");});
test("flatterten -> flattert", function() {deepEqual( Stem("flatterten"), "flattert");});
test("flaum -> flaum", function() {deepEqual( Stem("flaum"), "flaum");});
test("flaumkissen -> flaumkiss", function() {deepEqual( Stem("flaumkissen"), "flaumkiss");});
test("flavio -> flavio", function() {deepEqual( Stem("flavio"), "flavio");});
test("flechte -> flecht", function() {deepEqual( Stem("flechte"), "flecht");});
test("flechtenfelde -> flechtenfeld", function() {deepEqual( Stem("flechtenfelde"), "flechtenfeld");});
test("flechtengetrümmer -> flechtengetrumm", function() {deepEqual( Stem("flechtengetrümmer"), "flechtengetrumm");});
test("fleck -> fleck", function() {deepEqual( Stem("fleck"), "fleck");});
test("fleckchen -> fleckch", function() {deepEqual( Stem("fleckchen"), "fleckch");});
test("flecken -> fleck", function() {deepEqual( Stem("flecken"), "fleck");});
test("fledermäuschen -> fledermausch", function() {deepEqual( Stem("fledermäuschen"), "fledermausch");});
test("flegelei -> flegelei", function() {deepEqual( Stem("flegelei"), "flegelei");});
test("flehen -> fleh", function() {deepEqual( Stem("flehen"), "fleh");});
test("flehend -> flehend", function() {deepEqual( Stem("flehend"), "flehend");});
test("flehenden -> flehend", function() {deepEqual( Stem("flehenden"), "flehend");});
test("flehens -> fleh", function() {deepEqual( Stem("flehens"), "fleh");});
test("flehet -> flehet", function() {deepEqual( Stem("flehet"), "flehet");});
test("fleht -> fleht", function() {deepEqual( Stem("fleht"), "fleht");});
test("flehte -> fleht", function() {deepEqual( Stem("flehte"), "fleht");});
test("fleisch -> fleisch", function() {deepEqual( Stem("fleisch"), "fleisch");});
test("fleischbrühe -> fleischbruh", function() {deepEqual( Stem("fleischbrühe"), "fleischbruh");});
test("fleische -> fleisch", function() {deepEqual( Stem("fleische"), "fleisch");});
test("fleischer -> fleisch", function() {deepEqual( Stem("fleischer"), "fleisch");});
test("fleischermesser -> fleischermess", function() {deepEqual( Stem("fleischermesser"), "fleischermess");});
test("fleisches -> fleisch", function() {deepEqual( Stem("fleisches"), "fleisch");});
test("fleischigem -> fleischig", function() {deepEqual( Stem("fleischigem"), "fleischig");});
test("fleischlich -> fleischlich", function() {deepEqual( Stem("fleischlich"), "fleischlich");});
test("fleischliche -> fleischlich", function() {deepEqual( Stem("fleischliche"), "fleischlich");});
test("fleischlichen -> fleischlich", function() {deepEqual( Stem("fleischlichen"), "fleischlich");});
test("fleiss -> fleiss", function() {deepEqual( Stem("fleiss"), "fleiss");});
test("fleiß -> fleiss", function() {deepEqual( Stem("fleiß"), "fleiss");});
test("fleissig -> fleissig", function() {deepEqual( Stem("fleissig"), "fleissig");});
test("fleißig -> fleissig", function() {deepEqual( Stem("fleißig"), "fleissig");});
test("fleissigen -> fleissig", function() {deepEqual( Stem("fleissigen"), "fleissig");});
test("fleissiger -> fleissig", function() {deepEqual( Stem("fleissiger"), "fleissig");});
test("fleißiger -> fleissig", function() {deepEqual( Stem("fleißiger"), "fleissig");});
test("fleissigsten -> fleissig", function() {deepEqual( Stem("fleissigsten"), "fleissig");});
test("fleißigsten -> fleissig", function() {deepEqual( Stem("fleißigsten"), "fleissig");});
test("fletschte -> fletscht", function() {deepEqual( Stem("fletschte"), "fletscht");});
test("flicht -> flicht", function() {deepEqual( Stem("flicht"), "flicht");});
test("flickte -> flickt", function() {deepEqual( Stem("flickte"), "flickt");});
test("fliederbusch -> fliederbusch", function() {deepEqual( Stem("fliederbusch"), "fliederbusch");});
test("fliederwerk -> fliederwerk", function() {deepEqual( Stem("fliederwerk"), "fliederwerk");});
test("fliege -> flieg", function() {deepEqual( Stem("fliege"), "flieg");});
test("fliegeliedchen -> fliegeliedch", function() {deepEqual( Stem("fliegeliedchen"), "fliegeliedch");});
test("fliegen -> flieg", function() {deepEqual( Stem("fliegen"), "flieg");});
test("fliegend -> fliegend", function() {deepEqual( Stem("fliegend"), "fliegend");});
test("fliegende -> fliegend", function() {deepEqual( Stem("fliegende"), "fliegend");});
test("fliegenden -> fliegend", function() {deepEqual( Stem("fliegenden"), "fliegend");});
test("fliegender -> fliegend", function() {deepEqual( Stem("fliegender"), "fliegend");});
test("fliegenmutter -> fliegenmutt", function() {deepEqual( Stem("fliegenmutter"), "fliegenmutt");});
test("fliegt -> fliegt", function() {deepEqual( Stem("fliegt"), "fliegt");});
test("fliehen -> flieh", function() {deepEqual( Stem("fliehen"), "flieh");});
test("fliehet -> fliehet", function() {deepEqual( Stem("fliehet"), "fliehet");});
test("flieht -> flieht", function() {deepEqual( Stem("flieht"), "flieht");});
test("fliese -> flies", function() {deepEqual( Stem("fliese"), "flies");});
test("fliesen -> flies", function() {deepEqual( Stem("fliesen"), "flies");});
test("fliessen -> fliess", function() {deepEqual( Stem("fliessen"), "fliess");});
test("fließen -> fliess", function() {deepEqual( Stem("fließen"), "fliess");});
test("fliessende -> fliessend", function() {deepEqual( Stem("fliessende"), "fliessend");});
test("fliessendes -> fliessend", function() {deepEqual( Stem("fliessendes"), "fliessend");});
test("fliesst -> fliesst", function() {deepEqual( Stem("fliesst"), "fliesst");});
test("fließt -> fliesst", function() {deepEqual( Stem("fließt"), "fliesst");});
test("flimmerte -> flimmert", function() {deepEqual( Stem("flimmerte"), "flimmert");});
test("flink -> flink", function() {deepEqual( Stem("flink"), "flink");});
test("flinke -> flink", function() {deepEqual( Stem("flinke"), "flink");});
test("flinker -> flink", function() {deepEqual( Stem("flinker"), "flink");});
test("flinkfüssigen -> flinkfuss", function() {deepEqual( Stem("flinkfüssigen"), "flinkfuss");});
test("flinten -> flint", function() {deepEqual( Stem("flinten"), "flint");});
test("flittchen -> flittch", function() {deepEqual( Stem("flittchen"), "flittch");});
test("flittergoldes -> flittergold", function() {deepEqual( Stem("flittergoldes"), "flittergold");});
test("flitterstaat -> flitterstaat", function() {deepEqual( Stem("flitterstaat"), "flitterstaat");});
test("flocht -> flocht", function() {deepEqual( Stem("flocht"), "flocht");});
test("flochten -> flocht", function() {deepEqual( Stem("flochten"), "flocht");});
test("flocke -> flock", function() {deepEqual( Stem("flocke"), "flock");});
test("flocken -> flock", function() {deepEqual( Stem("flocken"), "flock");});
test("flog -> flog", function() {deepEqual( Stem("flog"), "flog");});
test("flogen -> flog", function() {deepEqual( Stem("flogen"), "flog");});
test("flögen -> flog", function() {deepEqual( Stem("flögen"), "flog");});
test("floh -> floh", function() {deepEqual( Stem("floh"), "floh");});
test("flohen -> floh", function() {deepEqual( Stem("flohen"), "floh");});
test("flor -> flor", function() {deepEqual( Stem("flor"), "flor");});
test("florenz -> florenz", function() {deepEqual( Stem("florenz"), "florenz");});
test("florian -> florian", function() {deepEqual( Stem("florian"), "florian");});
test("floss -> floss", function() {deepEqual( Stem("floss"), "floss");});
test("floß -> floss", function() {deepEqual( Stem("floß"), "floss");});
test("flossen -> floss", function() {deepEqual( Stem("flossen"), "floss");});
test("flössen -> floss", function() {deepEqual( Stem("flössen"), "floss");});
test("flößen -> floss", function() {deepEqual( Stem("flößen"), "floss");});
test("flösste -> flosst", function() {deepEqual( Stem("flösste"), "flosst");});
test("flöte -> flot", function() {deepEqual( Stem("flöte"), "flot");});
test("flöten -> flot", function() {deepEqual( Stem("flöten"), "flot");});
test("flötenden -> flotend", function() {deepEqual( Stem("flötenden"), "flotend");});
test("flötenspieler -> flotenspiel", function() {deepEqual( Stem("flötenspieler"), "flotenspiel");});
test("flottmachen -> flottmach", function() {deepEqual( Stem("flottmachen"), "flottmach");});
test("fluch -> fluch", function() {deepEqual( Stem("fluch"), "fluch");});
test("flüche -> fluch", function() {deepEqual( Stem("flüche"), "fluch");});
test("fluchen -> fluch", function() {deepEqual( Stem("fluchen"), "fluch");});
test("fluchens -> fluch", function() {deepEqual( Stem("fluchens"), "fluch");});
test("flucht -> flucht", function() {deepEqual( Stem("flucht"), "flucht");});
test("fluchte -> flucht", function() {deepEqual( Stem("fluchte"), "flucht");});
test("fluchten -> flucht", function() {deepEqual( Stem("fluchten"), "flucht");});
test("flüchteten -> fluchtet", function() {deepEqual( Stem("flüchteten"), "fluchtet");});
test("fluchtgedanken -> fluchtgedank", function() {deepEqual( Stem("fluchtgedanken"), "fluchtgedank");});
test("fluchtgelder -> fluchtgeld", function() {deepEqual( Stem("fluchtgelder"), "fluchtgeld");});
test("flüchtig -> fluchtig", function() {deepEqual( Stem("flüchtig"), "fluchtig");});
test("flüchtige -> fluchtig", function() {deepEqual( Stem("flüchtige"), "fluchtig");});
test("flüchtigem -> fluchtig", function() {deepEqual( Stem("flüchtigem"), "fluchtig");});
test("flüchtigen -> fluchtig", function() {deepEqual( Stem("flüchtigen"), "fluchtig");});
test("flüchtiger -> fluchtig", function() {deepEqual( Stem("flüchtiger"), "fluchtig");});
test("flüchtiges -> fluchtig", function() {deepEqual( Stem("flüchtiges"), "fluchtig");});
test("flüchtigsten -> fluchtig", function() {deepEqual( Stem("flüchtigsten"), "fluchtig");});
test("flüchtling -> fluchtling", function() {deepEqual( Stem("flüchtling"), "fluchtling");});
test("flüchtlinge -> fluchtling", function() {deepEqual( Stem("flüchtlinge"), "fluchtling");});
test("flüchtlingscamp -> fluchtlingscamp", function() {deepEqual( Stem("flüchtlingscamp"), "fluchtlingscamp");});
test("flüchtlingslager -> fluchtlingslag", function() {deepEqual( Stem("flüchtlingslager"), "fluchtlingslag");});
test("flüchtlingslagers -> fluchtlingslag", function() {deepEqual( Stem("flüchtlingslagers"), "fluchtlingslag");});
test("fluchtriss -> fluchtriss", function() {deepEqual( Stem("fluchtriss"), "fluchtriss");});
test("flug -> flug", function() {deepEqual( Stem("flug"), "flug");});
test("fluge -> flug", function() {deepEqual( Stem("fluge"), "flug");});
test("flügel -> flugel", function() {deepEqual( Stem("flügel"), "flugel");});
test("flügelchen -> flugelch", function() {deepEqual( Stem("flügelchen"), "flugelch");});
test("flügelein -> flugelein", function() {deepEqual( Stem("flügelein"), "flugelein");});
test("flügelmann -> flugelmann", function() {deepEqual( Stem("flügelmann"), "flugelmann");});
test("flügeln -> flugeln", function() {deepEqual( Stem("flügeln"), "flugeln");});
test("flügelschläge -> flugelschlag", function() {deepEqual( Stem("flügelschläge"), "flugelschlag");});
test("flügeltüren -> flugeltur", function() {deepEqual( Stem("flügeltüren"), "flugeltur");});
test("flügelzuge -> flugelzug", function() {deepEqual( Stem("flügelzuge"), "flugelzug");});
test("fluggästen -> fluggast", function() {deepEqual( Stem("fluggästen"), "fluggast");});
test("flügge -> flugg", function() {deepEqual( Stem("flügge"), "flugg");});
test("flüggen -> flugg", function() {deepEqual( Stem("flüggen"), "flugg");});
test("fluggesellschaft -> fluggesellschaft", function() {deepEqual( Stem("fluggesellschaft"), "fluggesellschaft");});
test("flughafen -> flughaf", function() {deepEqual( Stem("flughafen"), "flughaf");});
test("flughafengebäude -> flughafengebaud", function() {deepEqual( Stem("flughafengebäude"), "flughafengebaud");});
test("flughafenpolizei -> flughafenpolizei", function() {deepEqual( Stem("flughafenpolizei"), "flughafenpolizei");});
test("flughafens -> flughaf", function() {deepEqual( Stem("flughafens"), "flughaf");});
test("flugmaschinchen -> flugmaschinch", function() {deepEqual( Stem("flugmaschinchen"), "flugmaschinch");});
test("flugmaschinen -> flugmaschin", function() {deepEqual( Stem("flugmaschinen"), "flugmaschin");});
test("flugplatz -> flugplatz", function() {deepEqual( Stem("flugplatz"), "flugplatz");});
test("flugs -> flug", function() {deepEqual( Stem("flugs"), "flug");});
test("flugzeug -> flugzeug", function() {deepEqual( Stem("flugzeug"), "flugzeug");});
test("fluktuationsrate -> fluktuationsrat", function() {deepEqual( Stem("fluktuationsrate"), "fluktuationsrat");});
test("flur -> flur", function() {deepEqual( Stem("flur"), "flur");});
test("flure -> flur", function() {deepEqual( Stem("flure"), "flur");});
test("fluren -> flur", function() {deepEqual( Stem("fluren"), "flur");});
test("fluss -> fluss", function() {deepEqual( Stem("fluss"), "fluss");});
test("fluß -> fluss", function() {deepEqual( Stem("fluß"), "fluss");});
test("flusse -> fluss", function() {deepEqual( Stem("flusse"), "fluss");});
test("flüsse -> fluss", function() {deepEqual( Stem("flüsse"), "fluss");});
test("flüssen -> fluss", function() {deepEqual( Stem("flüssen"), "fluss");});
test("flusses -> fluss", function() {deepEqual( Stem("flusses"), "fluss");});
test("flüstern -> flust", function() {deepEqual( Stem("flüstern"), "flust");});
test("flüsternde -> flusternd", function() {deepEqual( Stem("flüsternde"), "flusternd");});
test("flüstert -> flustert", function() {deepEqual( Stem("flüstert"), "flustert");});
test("flüsterte -> flustert", function() {deepEqual( Stem("flüsterte"), "flustert");});
test("flüsterten -> flustert", function() {deepEqual( Stem("flüsterten"), "flustert");});
test("flut -> flut", function() {deepEqual( Stem("flut"), "flut");});
test("fluten -> flut", function() {deepEqual( Stem("fluten"), "flut");});
test("focht -> focht", function() {deepEqual( Stem("focht"), "focht");});
test("focis -> focis", function() {deepEqual( Stem("focis"), "focis");});
test("fodern -> fod", function() {deepEqual( Stem("fodern"), "fod");});
test("foemina -> foemina", function() {deepEqual( Stem("foemina"), "foemina");});
test("föhnstiefel -> fohnstiefel", function() {deepEqual( Stem("föhnstiefel"), "fohnstiefel");});
test("föhre -> fohr", function() {deepEqual( Stem("föhre"), "fohr");});
test("föhrenstrunke -> fohrenstrunk", function() {deepEqual( Stem("föhrenstrunke"), "fohrenstrunk");});
test("folg -> folg", function() {deepEqual( Stem("folg"), "folg");});
test("folge -> folg", function() {deepEqual( Stem("folge"), "folg");});
test("folgen -> folg", function() {deepEqual( Stem("folgen"), "folg");});
test("folgend -> folgend", function() {deepEqual( Stem("folgend"), "folgend");});
test("folgende -> folgend", function() {deepEqual( Stem("folgende"), "folgend");});
test("folgendem -> folgend", function() {deepEqual( Stem("folgendem"), "folgend");});
test("folgenden -> folgend", function() {deepEqual( Stem("folgenden"), "folgend");});
test("folgender -> folgend", function() {deepEqual( Stem("folgender"), "folgend");});
test("folgendermassen -> folgendermass", function() {deepEqual( Stem("folgendermassen"), "folgendermass");});
test("folgendermaßen -> folgendermass", function() {deepEqual( Stem("folgendermaßen"), "folgendermass");});
test("folgendes -> folgend", function() {deepEqual( Stem("folgendes"), "folgend");});
test("folgern -> folg", function() {deepEqual( Stem("folgern"), "folg");});
test("folgerung -> folger", function() {deepEqual( Stem("folgerung"), "folger");});
test("folgerungen -> folger", function() {deepEqual( Stem("folgerungen"), "folger");});
test("folget -> folget", function() {deepEqual( Stem("folget"), "folget");});
test("folgezeit -> folgezeit", function() {deepEqual( Stem("folgezeit"), "folgezeit");});
test("folglich -> folglich", function() {deepEqual( Stem("folglich"), "folglich");});
test("folgsam -> folgsam", function() {deepEqual( Stem("folgsam"), "folgsam");});
test("folgsames -> folgsam", function() {deepEqual( Stem("folgsames"), "folgsam");});
test("folgsamkeit -> folgsam", function() {deepEqual( Stem("folgsamkeit"), "folgsam");});
test("folgt -> folgt", function() {deepEqual( Stem("folgt"), "folgt");});
test("folgte -> folgt", function() {deepEqual( Stem("folgte"), "folgt");});
test("folgten -> folgt", function() {deepEqual( Stem("folgten"), "folgt");});
test("folie -> foli", function() {deepEqual( Stem("folie"), "foli");});
test("folter -> folt", function() {deepEqual( Stem("folter"), "folt");});
test("foltern -> folt", function() {deepEqual( Stem("foltern"), "folt");});
test("fonds -> fond", function() {deepEqual( Stem("fonds"), "fond");});
test("fontenelle -> fontenell", function() {deepEqual( Stem("fontenelle"), "fontenell");});
test("foppe -> fopp", function() {deepEqual( Stem("foppe"), "fopp");});
test("for -> for", function() {deepEqual( Stem("for"), "for");});
test("force -> forc", function() {deepEqual( Stem("force"), "forc");});
test("fordere -> ford", function() {deepEqual( Stem("fordere"), "ford");});
test("förderer -> ford", function() {deepEqual( Stem("förderer"), "ford");});
test("fordern -> ford", function() {deepEqual( Stem("fordern"), "ford");});
test("fördern -> ford", function() {deepEqual( Stem("fördern"), "ford");});
test("fordert -> fordert", function() {deepEqual( Stem("fordert"), "fordert");});
test("forderten -> fordert", function() {deepEqual( Stem("forderten"), "fordert");});
test("forderung -> forder", function() {deepEqual( Stem("forderung"), "forder");});
test("forderungen -> forder", function() {deepEqual( Stem("forderungen"), "forder");});
test("forelle -> forell", function() {deepEqual( Stem("forelle"), "forell");});
test("forellen -> forell", function() {deepEqual( Stem("forellen"), "forell");});
test("foren -> for", function() {deepEqual( Stem("foren"), "for");});
test("form -> form", function() {deepEqual( Stem("form"), "form");});
test("formal -> formal", function() {deepEqual( Stem("formal"), "formal");});
test("formalen -> formal", function() {deepEqual( Stem("formalen"), "formal");});
test("formaler -> formal", function() {deepEqual( Stem("formaler"), "formal");});
test("formalien -> formali", function() {deepEqual( Stem("formalien"), "formali");});
test("formationen -> formation", function() {deepEqual( Stem("formationen"), "formation");});
test("formel -> formel", function() {deepEqual( Stem("formel"), "formel");});
test("formell -> formell", function() {deepEqual( Stem("formell"), "formell");});
test("formelle -> formell", function() {deepEqual( Stem("formelle"), "formell");});
test("formeln -> formeln", function() {deepEqual( Stem("formeln"), "formeln");});
test("formen -> form", function() {deepEqual( Stem("formen"), "form");});
test("formenwesens -> formenwes", function() {deepEqual( Stem("formenwesens"), "formenwes");});
test("formierte -> formiert", function() {deepEqual( Stem("formierte"), "formiert");});
test("formierten -> formiert", function() {deepEqual( Stem("formierten"), "formiert");});
test("förmig -> formig", function() {deepEqual( Stem("förmig"), "formig");});
test("förmlich -> formlich", function() {deepEqual( Stem("förmlich"), "formlich");});
test("förmliche -> formlich", function() {deepEqual( Stem("förmliche"), "formlich");});
test("förmlichen -> formlich", function() {deepEqual( Stem("förmlichen"), "formlich");});
test("förmlichkeit -> formlich", function() {deepEqual( Stem("förmlichkeit"), "formlich");});
test("formulieren -> formuli", function() {deepEqual( Stem("formulieren"), "formuli");});
test("formulierung -> formulier", function() {deepEqual( Stem("formulierung"), "formulier");});
test("forschen -> forsch", function() {deepEqual( Stem("forschen"), "forsch");});
test("forschend -> forschend", function() {deepEqual( Stem("forschend"), "forschend");});
test("forschende -> forschend", function() {deepEqual( Stem("forschende"), "forschend");});
test("forscherin -> forscherin", function() {deepEqual( Stem("forscherin"), "forscherin");});
test("forschung -> forschung", function() {deepEqual( Stem("forschung"), "forschung");});
test("forschungen -> forschung", function() {deepEqual( Stem("forschungen"), "forschung");});
test("förster -> forst", function() {deepEqual( Stem("förster"), "forst");});
test("försterbart -> forsterbart", function() {deepEqual( Stem("försterbart"), "forsterbart");});
test("försterin -> forsterin", function() {deepEqual( Stem("försterin"), "forsterin");});
test("forstgehilfen -> forstgehilf", function() {deepEqual( Stem("forstgehilfen"), "forstgehilf");});
test("forsthaus -> forsthaus", function() {deepEqual( Stem("forsthaus"), "forsthaus");});
test("forsthauses -> forsthaus", function() {deepEqual( Stem("forsthauses"), "forsthaus");});
test("forstmannsuniformen -> forstmannsuniform", function() {deepEqual( Stem("forstmannsuniformen"), "forstmannsuniform");});
test("forstmeister -> forstmeist", function() {deepEqual( Stem("forstmeister"), "forstmeist");});
test("forstverwaltung -> forstverwalt", function() {deepEqual( Stem("forstverwaltung"), "forstverwalt");});
test("fort -> fort", function() {deepEqual( Stem("fort"), "fort");});
test("fortan -> fortan", function() {deepEqual( Stem("fortan"), "fortan");});
test("fortbestand -> fortbestand", function() {deepEqual( Stem("fortbestand"), "fortbestand");});
test("fortbestehen -> fortbesteh", function() {deepEqual( Stem("fortbestehen"), "fortbesteh");});
test("fortbetrieb -> fortbetrieb", function() {deepEqual( Stem("fortbetrieb"), "fortbetrieb");});
test("fortbewegte -> fortbewegt", function() {deepEqual( Stem("fortbewegte"), "fortbewegt");});
test("fortdauer -> fortdau", function() {deepEqual( Stem("fortdauer"), "fortdau");});
test("fortdauern -> fortdau", function() {deepEqual( Stem("fortdauern"), "fortdau");});
test("fortdauernde -> fortdauernd", function() {deepEqual( Stem("fortdauernde"), "fortdauernd");});
test("fortdauernden -> fortdauernd", function() {deepEqual( Stem("fortdauernden"), "fortdauernd");});
test("fortdauert -> fortdauert", function() {deepEqual( Stem("fortdauert"), "fortdauert");});
test("fortdauerten -> fortdauert", function() {deepEqual( Stem("fortdauerten"), "fortdauert");});
test("fortfahren -> fortfahr", function() {deepEqual( Stem("fortfahren"), "fortfahr");});
test("fortfahrend -> fortfahr", function() {deepEqual( Stem("fortfahrend"), "fortfahr");});
test("fortflog -> fortflog", function() {deepEqual( Stem("fortflog"), "fortflog");});
test("fortfuhr -> fortfuhr", function() {deepEqual( Stem("fortfuhr"), "fortfuhr");});
test("fortführte -> fortfuhrt", function() {deepEqual( Stem("fortführte"), "fortfuhrt");});
test("fortgang -> fortgang", function() {deepEqual( Stem("fortgang"), "fortgang");});
test("fortgange -> fortgang", function() {deepEqual( Stem("fortgange"), "fortgang");});
test("fortgeführt -> fortgefuhrt", function() {deepEqual( Stem("fortgeführt"), "fortgefuhrt");});
test("fortgegangen -> fortgegang", function() {deepEqual( Stem("fortgegangen"), "fortgegang");});
test("fortgeh -> fortgeh", function() {deepEqual( Stem("fortgeh"), "fortgeh");});
test("fortgehen -> fortgeh", function() {deepEqual( Stem("fortgehen"), "fortgeh");});
test("fortgehend -> fortgeh", function() {deepEqual( Stem("fortgehend"), "fortgeh");});
test("fortgehender -> fortgeh", function() {deepEqual( Stem("fortgehender"), "fortgeh");});
test("fortgejagt -> fortgejagt", function() {deepEqual( Stem("fortgejagt"), "fortgejagt");});
test("fortgeleitet -> fortgeleitet", function() {deepEqual( Stem("fortgeleitet"), "fortgeleitet");});
test("fortgepflanzt -> fortgepflanzt", function() {deepEqual( Stem("fortgepflanzt"), "fortgepflanzt");});
test("fortgepustet -> fortgepustet", function() {deepEqual( Stem("fortgepustet"), "fortgepustet");});
test("fortgeritten -> fortgeritt", function() {deepEqual( Stem("fortgeritten"), "fortgeritt");});
test("fortgerückt -> fortgeruckt", function() {deepEqual( Stem("fortgerückt"), "fortgeruckt");});
test("fortgesetzt -> fortgesetzt", function() {deepEqual( Stem("fortgesetzt"), "fortgesetzt");});
test("fortgesetzte -> fortgesetzt", function() {deepEqual( Stem("fortgesetzte"), "fortgesetzt");});
test("fortgesetzten -> fortgesetzt", function() {deepEqual( Stem("fortgesetzten"), "fortgesetzt");});
test("fortgetrieben -> fortgetrieb", function() {deepEqual( Stem("fortgetrieben"), "fortgetrieb");});
test("fortgeworfen -> fortgeworf", function() {deepEqual( Stem("fortgeworfen"), "fortgeworf");});
test("fortgezogen -> fortgezog", function() {deepEqual( Stem("fortgezogen"), "fortgezog");});
test("fortging -> fortging", function() {deepEqual( Stem("fortging"), "fortging");});
test("fortkomme -> fortkomm", function() {deepEqual( Stem("fortkomme"), "fortkomm");});
test("fortkommen -> fortkomm", function() {deepEqual( Stem("fortkommen"), "fortkomm");});
test("fortlassen -> fortlass", function() {deepEqual( Stem("fortlassen"), "fortlass");});
test("fortlaufend -> fortlauf", function() {deepEqual( Stem("fortlaufend"), "fortlauf");});
test("fortlaufende -> fortlauf", function() {deepEqual( Stem("fortlaufende"), "fortlauf");});
test("fortlaufenden -> fortlauf", function() {deepEqual( Stem("fortlaufenden"), "fortlauf");});
test("fortleben -> fortleb", function() {deepEqual( Stem("fortleben"), "fortleb");});
test("fortlebend -> fortleb", function() {deepEqual( Stem("fortlebend"), "fortleb");});
test("fortpflanzung -> fortpflanz", function() {deepEqual( Stem("fortpflanzung"), "fortpflanz");});
test("fortpflanzungen -> fortpflanz", function() {deepEqual( Stem("fortpflanzungen"), "fortpflanz");});
test("fortreisst -> fortreisst", function() {deepEqual( Stem("fortreisst"), "fortreisst");});
test("fortreißt -> fortreisst", function() {deepEqual( Stem("fortreißt"), "fortreisst");});
test("fortriss -> fortriss", function() {deepEqual( Stem("fortriss"), "fortriss");});
test("fortriß -> fortriss", function() {deepEqual( Stem("fortriß"), "fortriss");});
test("fortschickte -> fortschickt", function() {deepEqual( Stem("fortschickte"), "fortschickt");});
test("fortschreite -> fortschreit", function() {deepEqual( Stem("fortschreite"), "fortschreit");});
test("fortschreiten -> fortschreit", function() {deepEqual( Stem("fortschreiten"), "fortschreit");});
test("fortschreitend -> fortschreit", function() {deepEqual( Stem("fortschreitend"), "fortschreit");});
test("fortschreitende -> fortschreit", function() {deepEqual( Stem("fortschreitende"), "fortschreit");});
test("fortschreitens -> fortschreit", function() {deepEqual( Stem("fortschreitens"), "fortschreit");});
test("fortschreitet -> fortschreitet", function() {deepEqual( Stem("fortschreitet"), "fortschreitet");});
test("fortschreitung -> fortschreit", function() {deepEqual( Stem("fortschreitung"), "fortschreit");});
test("fortschritt -> fortschritt", function() {deepEqual( Stem("fortschritt"), "fortschritt");});
test("fortschritte -> fortschritt", function() {deepEqual( Stem("fortschritte"), "fortschritt");});
test("fortschritten -> fortschritt", function() {deepEqual( Stem("fortschritten"), "fortschritt");});
test("fortsetzen -> fortsetz", function() {deepEqual( Stem("fortsetzen"), "fortsetz");});
test("fortsetzte -> fortsetzt", function() {deepEqual( Stem("fortsetzte"), "fortsetzt");});
test("fortsetzung -> fortsetz", function() {deepEqual( Stem("fortsetzung"), "fortsetz");});
test("forttragen -> forttrag", function() {deepEqual( Stem("forttragen"), "forttrag");});
test("forttreiben -> forttreib", function() {deepEqual( Stem("forttreiben"), "forttreib");});
test("fortuna -> fortuna", function() {deepEqual( Stem("fortuna"), "fortuna");});
test("fortwährend -> fortwahr", function() {deepEqual( Stem("fortwährend"), "fortwahr");});
test("fortwährende -> fortwahr", function() {deepEqual( Stem("fortwährende"), "fortwahr");});
test("fortwährenden -> fortwahr", function() {deepEqual( Stem("fortwährenden"), "fortwahr");});
test("fortwährender -> fortwahr", function() {deepEqual( Stem("fortwährender"), "fortwahr");});
test("fortwährendes -> fortwahr", function() {deepEqual( Stem("fortwährendes"), "fortwahr");});
test("fortwarf -> fortwarf", function() {deepEqual( Stem("fortwarf"), "fortwarf");});
test("fortwuchern -> fortwuch", function() {deepEqual( Stem("fortwuchern"), "fortwuch");});
test("fortzeugen -> fortzeug", function() {deepEqual( Stem("fortzeugen"), "fortzeug");});
test("fortzog -> fortzog", function() {deepEqual( Stem("fortzog"), "fortzog");});
test("fortzubewegen -> fortzubeweg", function() {deepEqual( Stem("fortzubewegen"), "fortzubeweg");});
test("fortzureissen -> fortzureiss", function() {deepEqual( Stem("fortzureissen"), "fortzureiss");});
test("fortzuscheuchen -> fortzuscheuch", function() {deepEqual( Stem("fortzuscheuchen"), "fortzuscheuch");});
test("fortzusetzen -> fortzusetz", function() {deepEqual( Stem("fortzusetzen"), "fortzusetz");});
test("forum -> forum", function() {deepEqual( Stem("forum"), "forum");});
test("forumein -> forumein", function() {deepEqual( Stem("forumein"), "forumein");});
test("fotografiert -> fotografiert", function() {deepEqual( Stem("fotografiert"), "fotografiert");});
test("fotomodell -> fotomodell", function() {deepEqual( Stem("fotomodell"), "fotomodell");});
test("fotos -> fotos", function() {deepEqual( Stem("fotos"), "fotos");});
test("foyer -> foy", function() {deepEqual( Stem("foyer"), "foy");});
test("frack -> frack", function() {deepEqual( Stem("frack"), "frack");});
test("frag -> frag", function() {deepEqual( Stem("frag"), "frag");});
test("frage -> frag", function() {deepEqual( Stem("frage"), "frag");});
test("fragebogen -> fragebog", function() {deepEqual( Stem("fragebogen"), "fragebog");});
test("fragen -> frag", function() {deepEqual( Stem("fragen"), "frag");});
test("fragend -> fragend", function() {deepEqual( Stem("fragend"), "fragend");});
test("fraget -> fraget", function() {deepEqual( Stem("fraget"), "fraget");});
test("fragliche -> fraglich", function() {deepEqual( Stem("fragliche"), "fraglich");});
test("fraglichen -> fraglich", function() {deepEqual( Stem("fraglichen"), "fraglich");});
test("fragsucht -> fragsucht", function() {deepEqual( Stem("fragsucht"), "fragsucht");});
test("fragt -> fragt", function() {deepEqual( Stem("fragt"), "fragt");});
test("fragte -> fragt", function() {deepEqual( Stem("fragte"), "fragt");});
test("fragten -> fragt", function() {deepEqual( Stem("fragten"), "fragt");});
test("françois -> françois", function() {deepEqual( Stem("françois"), "françois");});
test("frank -> frank", function() {deepEqual( Stem("frank"), "frank");});
test("franken -> frank", function() {deepEqual( Stem("franken"), "frank");});
test("frankfurt -> frankfurt", function() {deepEqual( Stem("frankfurt"), "frankfurt");});
test("frankierten -> frankiert", function() {deepEqual( Stem("frankierten"), "frankiert");});
test("frankreich -> frankreich", function() {deepEqual( Stem("frankreich"), "frankreich");});
test("frankreichs -> frankreich", function() {deepEqual( Stem("frankreichs"), "frankreich");});
test("fransen -> frans", function() {deepEqual( Stem("fransen"), "frans");});
test("franz -> franz", function() {deepEqual( Stem("franz"), "franz");});
test("franzens -> franz", function() {deepEqual( Stem("franzens"), "franz");});
test("franziskus -> franziskus", function() {deepEqual( Stem("franziskus"), "franziskus");});
test("franzl -> franzl", function() {deepEqual( Stem("franzl"), "franzl");});
test("franzosen -> franzos", function() {deepEqual( Stem("franzosen"), "franzos");});
test("französisch -> franzos", function() {deepEqual( Stem("französisch"), "franzos");});
test("französische -> franzos", function() {deepEqual( Stem("französische"), "franzos");});
test("französischen -> franzos", function() {deepEqual( Stem("französischen"), "franzos");});
test("französischer -> franzos", function() {deepEqual( Stem("französischer"), "franzos");});
test("frass -> frass", function() {deepEqual( Stem("frass"), "frass");});
test("frassen -> frass", function() {deepEqual( Stem("frassen"), "frass");});
test("fraßen -> frass", function() {deepEqual( Stem("fraßen"), "frass");});
test("frau -> frau", function() {deepEqual( Stem("frau"), "frau");});
test("frauchen -> frauch", function() {deepEqual( Stem("frauchen"), "frauch");});
test("frauen -> frau", function() {deepEqual( Stem("frauen"), "frau");});
test("frauenbild -> frauenbild", function() {deepEqual( Stem("frauenbild"), "frauenbild");});
test("frauenbund -> frauenbund", function() {deepEqual( Stem("frauenbund"), "frauenbund");});
test("frauenbusen -> frauenbus", function() {deepEqual( Stem("frauenbusen"), "frauenbus");});
test("frauenfahrzeug -> frauenfahrzeug", function() {deepEqual( Stem("frauenfahrzeug"), "frauenfahrzeug");});
test("frauengemütes -> frauengemut", function() {deepEqual( Stem("frauengemütes"), "frauengemut");});
test("frauengesichter -> frauengesicht", function() {deepEqual( Stem("frauengesichter"), "frauengesicht");});
test("frauenhilfe -> frauenhilf", function() {deepEqual( Stem("frauenhilfe"), "frauenhilf");});
test("frauenkirche -> frauenkirch", function() {deepEqual( Stem("frauenkirche"), "frauenkirch");});
test("frauenkleider -> frauenkleid", function() {deepEqual( Stem("frauenkleider"), "frauenkleid");});
test("frauenmund -> frauenmund", function() {deepEqual( Stem("frauenmund"), "frauenmund");});
test("frauennamen -> frauennam", function() {deepEqual( Stem("frauennamen"), "frauennam");});
test("frauensarg -> frauensarg", function() {deepEqual( Stem("frauensarg"), "frauensarg");});
test("frauensleute -> frauensleut", function() {deepEqual( Stem("frauensleute"), "frauensleut");});
test("frauensperson -> frauensperson", function() {deepEqual( Stem("frauensperson"), "frauensperson");});
test("frauenstimmen -> frauenstimm", function() {deepEqual( Stem("frauenstimmen"), "frauenstimm");});
test("frauentums -> frauentum", function() {deepEqual( Stem("frauentums"), "frauentum");});
test("frauenzimmer -> frauenzimm", function() {deepEqual( Stem("frauenzimmer"), "frauenzimm");});
test("frauenzimmerchen -> frauenzimmerch", function() {deepEqual( Stem("frauenzimmerchen"), "frauenzimmerch");});
test("frauenzimmern -> frauenzimm", function() {deepEqual( Stem("frauenzimmern"), "frauenzimm");});
test("frauenzimmers -> frauenzimm", function() {deepEqual( Stem("frauenzimmers"), "frauenzimm");});
test("fräulein -> fraulein", function() {deepEqual( Stem("fräulein"), "fraulein");});
test("fräuleins -> fraulein", function() {deepEqual( Stem("fräuleins"), "fraulein");});
test("freakszene -> freaksz", function() {deepEqual( Stem("freakszene"), "freaksz");});
test("frech -> frech", function() {deepEqual( Stem("frech"), "frech");});
test("freche -> frech", function() {deepEqual( Stem("freche"), "frech");});
test("frechen -> frech", function() {deepEqual( Stem("frechen"), "frech");});
test("frecher -> frech", function() {deepEqual( Stem("frecher"), "frech");});
test("freches -> frech", function() {deepEqual( Stem("freches"), "frech");});
test("frechheit -> frechheit", function() {deepEqual( Stem("frechheit"), "frechheit");});
test("frechheiten -> frechheit", function() {deepEqual( Stem("frechheiten"), "frechheit");});
test("frechste -> frech", function() {deepEqual( Stem("frechste"), "frech");});
test("frechstem -> frech", function() {deepEqual( Stem("frechstem"), "frech");});
test("frechsten -> frech", function() {deepEqual( Stem("frechsten"), "frech");});
test("free -> free", function() {deepEqual( Stem("free"), "free");});
test("frei -> frei", function() {deepEqual( Stem("frei"), "frei");});
test("freiblieb -> freiblieb", function() {deepEqual( Stem("freiblieb"), "freiblieb");});
test("freiburg -> freiburg", function() {deepEqual( Stem("freiburg"), "freiburg");});
test("freiburger -> freiburg", function() {deepEqual( Stem("freiburger"), "freiburg");});
test("freie -> freie", function() {deepEqual( Stem("freie"), "freie");});
test("freiem -> freiem", function() {deepEqual( Stem("freiem"), "freiem");});
test("freien -> freien", function() {deepEqual( Stem("freien"), "freien");});
test("freier -> freier", function() {deepEqual( Stem("freier"), "freier");});
test("freiern -> freiern", function() {deepEqual( Stem("freiern"), "freiern");});
test("freiersleuten -> freiersleut", function() {deepEqual( Stem("freiersleuten"), "freiersleut");});
test("freies -> freies", function() {deepEqual( Stem("freies"), "freies");});
test("freigebe -> freigeb", function() {deepEqual( Stem("freigebe"), "freigeb");});
test("freigeben -> freigeb", function() {deepEqual( Stem("freigeben"), "freigeb");});
test("freigebig -> freigeb", function() {deepEqual( Stem("freigebig"), "freigeb");});
test("freigebiger -> freigeb", function() {deepEqual( Stem("freigebiger"), "freigeb");});
test("freigegeben -> freigegeb", function() {deepEqual( Stem("freigegeben"), "freigegeb");});
test("freigelassen -> freigelass", function() {deepEqual( Stem("freigelassen"), "freigelass");});
test("freiheit -> freiheit", function() {deepEqual( Stem("freiheit"), "freiheit");});
test("freiheiten -> freiheit", function() {deepEqual( Stem("freiheiten"), "freiheit");});
test("freiheitliche -> freiheit", function() {deepEqual( Stem("freiheitliche"), "freiheit");});
test("freilassen -> freilass", function() {deepEqual( Stem("freilassen"), "freilass");});
test("freilich -> freilich", function() {deepEqual( Stem("freilich"), "freilich");});
test("freiliessen -> freiliess", function() {deepEqual( Stem("freiliessen"), "freiliess");});
test("freiließen -> freiliess", function() {deepEqual( Stem("freiließen"), "freiliess");});
test("freimännin -> freimannin", function() {deepEqual( Stem("freimännin"), "freimannin");});
test("freimanns -> freimann", function() {deepEqual( Stem("freimanns"), "freimann");});
test("freimannsenkelin -> freimannsenkelin", function() {deepEqual( Stem("freimannsenkelin"), "freimannsenkelin");});
test("freimannshäusl -> freimannshausl", function() {deepEqual( Stem("freimannshäusl"), "freimannshausl");});
test("freischaren -> freischar", function() {deepEqual( Stem("freischaren"), "freischar");});
test("freischärler -> freischarl", function() {deepEqual( Stem("freischärler"), "freischarl");});
test("freisinnig -> freisinn", function() {deepEqual( Stem("freisinnig"), "freisinn");});
test("freisinnigen -> freisinn", function() {deepEqual( Stem("freisinnigen"), "freisinn");});
test("freisinnigkeit -> freisinn", function() {deepEqual( Stem("freisinnigkeit"), "freisinn");});
test("freitag -> freitag", function() {deepEqual( Stem("freitag"), "freitag");});
test("freitreppe -> freitrepp", function() {deepEqual( Stem("freitreppe"), "freitrepp");});
test("freiwillig -> freiwill", function() {deepEqual( Stem("freiwillig"), "freiwill");});
test("freiwillige -> freiwill", function() {deepEqual( Stem("freiwillige"), "freiwill");});
test("freiwilligem -> freiwill", function() {deepEqual( Stem("freiwilligem"), "freiwill");});
test("freiwilligen -> freiwill", function() {deepEqual( Stem("freiwilligen"), "freiwill");});
test("freiwilliger -> freiwill", function() {deepEqual( Stem("freiwilliger"), "freiwill");});
test("freiwilliges -> freiwill", function() {deepEqual( Stem("freiwilliges"), "freiwill");});
test("freiwilligkeit -> freiwill", function() {deepEqual( Stem("freiwilligkeit"), "freiwill");});
test("freizügern -> freizug", function() {deepEqual( Stem("freizügern"), "freizug");});
test("freizulassen -> freizulass", function() {deepEqual( Stem("freizulassen"), "freizulass");});
test("freizustellen -> freizustell", function() {deepEqual( Stem("freizustellen"), "freizustell");});
test("frelmännin -> frelmannin", function() {deepEqual( Stem("frelmännin"), "frelmannin");});
test("fremd -> fremd", function() {deepEqual( Stem("fremd"), "fremd");});
test("fremdartig -> fremdart", function() {deepEqual( Stem("fremdartig"), "fremdart");});
test("fremdartigen -> fremdart", function() {deepEqual( Stem("fremdartigen"), "fremdart");});
test("fremdartiger -> fremdart", function() {deepEqual( Stem("fremdartiger"), "fremdart");});
test("fremdartigkeit -> fremdart", function() {deepEqual( Stem("fremdartigkeit"), "fremdart");});
test("fremde -> fremd", function() {deepEqual( Stem("fremde"), "fremd");});
test("fremden -> fremd", function() {deepEqual( Stem("fremden"), "fremd");});
test("fremder -> fremd", function() {deepEqual( Stem("fremder"), "fremd");});
test("fremdes -> fremd", function() {deepEqual( Stem("fremdes"), "fremd");});
test("fremdling -> fremdling", function() {deepEqual( Stem("fremdling"), "fremdling");});
test("fremdlinge -> fremdling", function() {deepEqual( Stem("fremdlinge"), "fremdling");});
test("freskomalereien -> freskomalerei", function() {deepEqual( Stem("freskomalereien"), "freskomalerei");});
test("fress -> fress", function() {deepEqual( Stem("fress"), "fress");});
test("fresse -> fress", function() {deepEqual( Stem("fresse"), "fress");});
test("fressen -> fress", function() {deepEqual( Stem("fressen"), "fress");});
test("fresser -> fress", function() {deepEqual( Stem("fresser"), "fress");});
test("freud -> freud", function() {deepEqual( Stem("freud"), "freud");});
test("freude -> freud", function() {deepEqual( Stem("freude"), "freud");});
test("freuden -> freud", function() {deepEqual( Stem("freuden"), "freud");});
test("freudenähnliches -> freudenahn", function() {deepEqual( Stem("freudenähnliches"), "freudenahn");});
test("freudenberg -> freudenberg", function() {deepEqual( Stem("freudenberg"), "freudenberg");});
test("freudenfest -> freudenf", function() {deepEqual( Stem("freudenfest"), "freudenf");});
test("freudenreichen -> freudenreich", function() {deepEqual( Stem("freudenreichen"), "freudenreich");});
test("freudenruf -> freudenruf", function() {deepEqual( Stem("freudenruf"), "freudenruf");});
test("freudenrufs -> freudenruf", function() {deepEqual( Stem("freudenrufs"), "freudenruf");});
test("freudenschüsse -> freudenschuss", function() {deepEqual( Stem("freudenschüsse"), "freudenschuss");});
test("freudentage -> freudentag", function() {deepEqual( Stem("freudentage"), "freudentag");});
test("freudentanz -> freudentanz", function() {deepEqual( Stem("freudentanz"), "freudentanz");});
test("freudestrahlend -> freudestrahl", function() {deepEqual( Stem("freudestrahlend"), "freudestrahl");});
test("freudig -> freudig", function() {deepEqual( Stem("freudig"), "freudig");});
test("freudigem -> freudig", function() {deepEqual( Stem("freudigem"), "freudig");});
test("freudigen -> freudig", function() {deepEqual( Stem("freudigen"), "freudig");});
test("freudiger -> freudig", function() {deepEqual( Stem("freudiger"), "freudig");});
test("freudigkeit -> freudig", function() {deepEqual( Stem("freudigkeit"), "freudig");});
test("freue -> freu", function() {deepEqual( Stem("freue"), "freu");});
test("freuen -> freu", function() {deepEqual( Stem("freuen"), "freu");});
test("freuend -> freuend", function() {deepEqual( Stem("freuend"), "freuend");});
test("freuet -> freuet", function() {deepEqual( Stem("freuet"), "freuet");});
test("freuete -> freuet", function() {deepEqual( Stem("freuete"), "freuet");});
test("freund -> freund", function() {deepEqual( Stem("freund"), "freund");});
test("freunde -> freund", function() {deepEqual( Stem("freunde"), "freund");});
test("freunden -> freund", function() {deepEqual( Stem("freunden"), "freund");});
test("freundes -> freund", function() {deepEqual( Stem("freundes"), "freund");});
test("freundesarme -> freundesarm", function() {deepEqual( Stem("freundesarme"), "freundesarm");});
test("freundin -> freundin", function() {deepEqual( Stem("freundin"), "freundin");});
test("freundinnen -> freundinn", function() {deepEqual( Stem("freundinnen"), "freundinn");});
test("freundlich -> freundlich", function() {deepEqual( Stem("freundlich"), "freundlich");});
test("freundliche -> freundlich", function() {deepEqual( Stem("freundliche"), "freundlich");});
test("freundlichem -> freundlich", function() {deepEqual( Stem("freundlichem"), "freundlich");});
test("freundlichen -> freundlich", function() {deepEqual( Stem("freundlichen"), "freundlich");});
test("freundlicher -> freundlich", function() {deepEqual( Stem("freundlicher"), "freundlich");});
test("freundliches -> freundlich", function() {deepEqual( Stem("freundliches"), "freundlich");});
test("freundlichkeit -> freundlich", function() {deepEqual( Stem("freundlichkeit"), "freundlich");});
test("freundlichste -> freundlich", function() {deepEqual( Stem("freundlichste"), "freundlich");});
test("freundnachbarliche -> freundnachbar", function() {deepEqual( Stem("freundnachbarliche"), "freundnachbar");});
test("freundschaft -> freundschaft", function() {deepEqual( Stem("freundschaft"), "freundschaft");});
test("freundschaftlich -> freundschaft", function() {deepEqual( Stem("freundschaftlich"), "freundschaft");});
test("freundschaftlichen -> freundschaft", function() {deepEqual( Stem("freundschaftlichen"), "freundschaft");});
test("freut -> freut", function() {deepEqual( Stem("freut"), "freut");});
test("freute -> freut", function() {deepEqual( Stem("freute"), "freut");});
test("freuten -> freut", function() {deepEqual( Stem("freuten"), "freut");});
test("frevel -> frevel", function() {deepEqual( Stem("frevel"), "frevel");});
test("frevelhaft -> frevelhaft", function() {deepEqual( Stem("frevelhaft"), "frevelhaft");});
test("frevels -> frevel", function() {deepEqual( Stem("frevels"), "frevel");});
test("fridolin -> fridolin", function() {deepEqual( Stem("fridolin"), "fridolin");});
test("fridolins -> fridolin", function() {deepEqual( Stem("fridolins"), "fridolin");});
test("friede -> fried", function() {deepEqual( Stem("friede"), "fried");});
test("frieden -> fried", function() {deepEqual( Stem("frieden"), "fried");});
test("friedens -> fried", function() {deepEqual( Stem("friedens"), "fried");});
test("friedensbewegung -> friedensbeweg", function() {deepEqual( Stem("friedensbewegung"), "friedensbeweg");});
test("friedensbruch -> friedensbruch", function() {deepEqual( Stem("friedensbruch"), "friedensbruch");});
test("friedensbund -> friedensbund", function() {deepEqual( Stem("friedensbund"), "friedensbund");});
test("friedensopfers -> friedensopf", function() {deepEqual( Stem("friedensopfers"), "friedensopf");});
test("friedensprodukte -> friedensprodukt", function() {deepEqual( Stem("friedensprodukte"), "friedensprodukt");});
test("friedensrichter -> friedensricht", function() {deepEqual( Stem("friedensrichter"), "friedensricht");});
test("friedensruhe -> friedensruh", function() {deepEqual( Stem("friedensruhe"), "friedensruh");});
test("friedenszeiten -> friedenszeit", function() {deepEqual( Stem("friedenszeiten"), "friedenszeit");});
test("friedfertig -> friedfert", function() {deepEqual( Stem("friedfertig"), "friedfert");});
test("friedfertigen -> friedfert", function() {deepEqual( Stem("friedfertigen"), "friedfert");});
test("friedfertiges -> friedfert", function() {deepEqual( Stem("friedfertiges"), "friedfert");});
test("friedfertigkeit -> friedfert", function() {deepEqual( Stem("friedfertigkeit"), "friedfert");});
test("friedhofscafe -> friedhofscaf", function() {deepEqual( Stem("friedhofscafe"), "friedhofscaf");});
test("friedhofsmauer -> friedhofsmau", function() {deepEqual( Stem("friedhofsmauer"), "friedhofsmau");});
test("friedlich -> friedlich", function() {deepEqual( Stem("friedlich"), "friedlich");});
test("friedliche -> friedlich", function() {deepEqual( Stem("friedliche"), "friedlich");});
test("friedlichen -> friedlich", function() {deepEqual( Stem("friedlichen"), "friedlich");});
test("friedliches -> friedlich", function() {deepEqual( Stem("friedliches"), "friedlich");});
test("friedlichsten -> friedlich", function() {deepEqual( Stem("friedlichsten"), "friedlich");});
test("friedliebende -> friedlieb", function() {deepEqual( Stem("friedliebende"), "friedlieb");});
test("friedrich -> friedrich", function() {deepEqual( Stem("friedrich"), "friedrich");});
test("friends -> friend", function() {deepEqual( Stem("friends"), "friend");});
test("frierenden -> frierend", function() {deepEqual( Stem("frierenden"), "frierend");});
test("friert -> friert", function() {deepEqual( Stem("friert"), "friert");});
test("friher -> frih", function() {deepEqual( Stem("friher"), "frih");});
test("frisch -> frisch", function() {deepEqual( Stem("frisch"), "frisch");});
test("frischduftende -> frischduft", function() {deepEqual( Stem("frischduftende"), "frischduft");});
test("frische -> frisch", function() {deepEqual( Stem("frische"), "frisch");});
test("frischen -> frisch", function() {deepEqual( Stem("frischen"), "frisch");});
test("frischer -> frisch", function() {deepEqual( Stem("frischer"), "frisch");});
test("frisches -> frisch", function() {deepEqual( Stem("frisches"), "frisch");});
test("frisierten -> frisiert", function() {deepEqual( Stem("frisierten"), "frisiert");});
test("friss -> friss", function() {deepEqual( Stem("friss"), "friss");});
test("frissest -> friss", function() {deepEqual( Stem("frissest"), "friss");});
test("frisst -> frisst", function() {deepEqual( Stem("frisst"), "frisst");});
test("frißt -> frisst", function() {deepEqual( Stem("frißt"), "frisst");});
test("frist -> frist", function() {deepEqual( Stem("frist"), "frist");});
test("fristen -> frist", function() {deepEqual( Stem("fristen"), "frist");});
test("fristeten -> fristet", function() {deepEqual( Stem("fristeten"), "fristet");});
test("fritz -> fritz", function() {deepEqual( Stem("fritz"), "fritz");});
test("fritzchen -> fritzch", function() {deepEqual( Stem("fritzchen"), "fritzch");});
test("fritzens -> fritz", function() {deepEqual( Stem("fritzens"), "fritz");});
test("froh -> froh", function() {deepEqual( Stem("froh"), "froh");});
test("frohe -> froh", function() {deepEqual( Stem("frohe"), "froh");});
test("frohen -> froh", function() {deepEqual( Stem("frohen"), "froh");});
test("fröhlich -> frohlich", function() {deepEqual( Stem("fröhlich"), "frohlich");});
test("fröhliche -> frohlich", function() {deepEqual( Stem("fröhliche"), "frohlich");});
test("fröhlichen -> frohlich", function() {deepEqual( Stem("fröhlichen"), "frohlich");});
test("fröhlicher -> frohlich", function() {deepEqual( Stem("fröhlicher"), "frohlich");});
test("fröhliches -> frohlich", function() {deepEqual( Stem("fröhliches"), "frohlich");});
test("fröhlichkeit -> frohlich", function() {deepEqual( Stem("fröhlichkeit"), "frohlich");});
test("fröhlichste -> frohlich", function() {deepEqual( Stem("fröhlichste"), "frohlich");});
test("fröhlichsten -> frohlich", function() {deepEqual( Stem("fröhlichsten"), "frohlich");});
test("frohlocken -> frohlock", function() {deepEqual( Stem("frohlocken"), "frohlock");});
test("frohsinn -> frohsinn", function() {deepEqual( Stem("frohsinn"), "frohsinn");});
test("fromm -> fromm", function() {deepEqual( Stem("fromm"), "fromm");});
test("fromme -> fromm", function() {deepEqual( Stem("fromme"), "fromm");});
test("frommen -> fromm", function() {deepEqual( Stem("frommen"), "fromm");});
test("frommer -> fromm", function() {deepEqual( Stem("frommer"), "fromm");});
test("frommes -> fromm", function() {deepEqual( Stem("frommes"), "fromm");});
test("frömmigkeit -> frommig", function() {deepEqual( Stem("frömmigkeit"), "frommig");});
test("frömmlichen -> frommlich", function() {deepEqual( Stem("frömmlichen"), "frommlich");});
test("frommt -> frommt", function() {deepEqual( Stem("frommt"), "frommt");});
test("fronen -> fron", function() {deepEqual( Stem("fronen"), "fron");});
test("frönen -> fron", function() {deepEqual( Stem("frönen"), "fron");});
test("front -> front", function() {deepEqual( Stem("front"), "front");});
test("frönte -> front", function() {deepEqual( Stem("frönte"), "front");});
test("fronten -> front", function() {deepEqual( Stem("fronten"), "front");});
test("frontpage -> frontpag", function() {deepEqual( Stem("frontpage"), "frontpag");});
test("fronvögte -> fronvogt", function() {deepEqual( Stem("fronvögte"), "fronvogt");});
test("froren -> fror", function() {deepEqual( Stem("froren"), "fror");});
test("frosch -> frosch", function() {deepEqual( Stem("frosch"), "frosch");});
test("froscharme -> froscharm", function() {deepEqual( Stem("froscharme"), "froscharm");});
test("frösche -> frosch", function() {deepEqual( Stem("frösche"), "frosch");});
test("fröschen -> frosch", function() {deepEqual( Stem("fröschen"), "frosch");});
test("froschmaul -> froschmaul", function() {deepEqual( Stem("froschmaul"), "froschmaul");});
test("froschmäulig -> froschmaul", function() {deepEqual( Stem("froschmäulig"), "froschmaul");});
test("frost -> frost", function() {deepEqual( Stem("frost"), "frost");});
test("froste -> frost", function() {deepEqual( Stem("froste"), "frost");});
test("fröstelte -> frostelt", function() {deepEqual( Stem("fröstelte"), "frostelt");});
test("frucht -> frucht", function() {deepEqual( Stem("frucht"), "frucht");});
test("fruchtbar -> fruchtbar", function() {deepEqual( Stem("fruchtbar"), "fruchtbar");});
test("fruchtbaren -> fruchtbar", function() {deepEqual( Stem("fruchtbaren"), "fruchtbar");});
test("fruchtbarer -> fruchtbar", function() {deepEqual( Stem("fruchtbarer"), "fruchtbar");});
test("fruchtbaum -> fruchtbaum", function() {deepEqual( Stem("fruchtbaum"), "fruchtbaum");});
test("früchte -> frucht", function() {deepEqual( Stem("früchte"), "frucht");});
test("fruchten -> frucht", function() {deepEqual( Stem("fruchten"), "frucht");});
test("früchten -> frucht", function() {deepEqual( Stem("früchten"), "frucht");});
test("fruchtlos -> fruchtlos", function() {deepEqual( Stem("fruchtlos"), "fruchtlos");});
test("fruchtsaft -> fruchtsaft", function() {deepEqual( Stem("fruchtsaft"), "fruchtsaft");});
test("früh -> fruh", function() {deepEqual( Stem("früh"), "fruh");});
test("frühaufsteher -> fruhaufsteh", function() {deepEqual( Stem("frühaufsteher"), "fruhaufsteh");});
test("frühe -> fruh", function() {deepEqual( Stem("frühe"), "fruh");});
test("frühen -> fruh", function() {deepEqual( Stem("frühen"), "fruh");});
test("früher -> fruh", function() {deepEqual( Stem("früher"), "fruh");});
test("frühere -> fruh", function() {deepEqual( Stem("frühere"), "fruh");});
test("früheren -> fruh", function() {deepEqual( Stem("früheren"), "fruh");});
test("früherer -> fruh", function() {deepEqual( Stem("früherer"), "fruh");});
test("früheres -> fruh", function() {deepEqual( Stem("früheres"), "fruh");});
test("frühesten -> fruh", function() {deepEqual( Stem("frühesten"), "fruh");});
test("frühester -> fruh", function() {deepEqual( Stem("frühester"), "fruh");});
test("frühjahr -> fruhjahr", function() {deepEqual( Stem("frühjahr"), "fruhjahr");});
test("frühleben -> fruhleb", function() {deepEqual( Stem("frühleben"), "fruhleb");});
test("frühlicht -> fruhlicht", function() {deepEqual( Stem("frühlicht"), "fruhlicht");});
test("frühling -> fruhling", function() {deepEqual( Stem("frühling"), "fruhling");});
test("frühlings -> fruhling", function() {deepEqual( Stem("frühlings"), "fruhling");});
test("frühlingsanfang -> fruhlingsanfang", function() {deepEqual( Stem("frühlingsanfang"), "fruhlingsanfang");});
test("frühlingsbäche -> fruhlingsbach", function() {deepEqual( Stem("frühlingsbäche"), "fruhlingsbach");});
test("frühlingshimmel -> fruhlingshimmel", function() {deepEqual( Stem("frühlingshimmel"), "fruhlingshimmel");});
test("frühlingslebens -> fruhlingsleb", function() {deepEqual( Stem("frühlingslebens"), "fruhlingsleb");});
test("frühlingslicht -> fruhlingslicht", function() {deepEqual( Stem("frühlingslicht"), "fruhlingslicht");});
test("frühlingslied -> fruhlingslied", function() {deepEqual( Stem("frühlingslied"), "fruhlingslied");});
test("frühlingslüftlein -> fruhlingsluftlein", function() {deepEqual( Stem("frühlingslüftlein"), "fruhlingsluftlein");});
test("frühlingsmorgen -> fruhlingsmorg", function() {deepEqual( Stem("frühlingsmorgen"), "fruhlingsmorg");});
test("frühlingsritt -> fruhlingsritt", function() {deepEqual( Stem("frühlingsritt"), "fruhlingsritt");});
test("frühlingsritter -> fruhlingsritt", function() {deepEqual( Stem("frühlingsritter"), "fruhlingsritt");});
test("frühlingssonne -> fruhlingssonn", function() {deepEqual( Stem("frühlingssonne"), "fruhlingssonn");});
test("frühlingssonnenwelt -> fruhlingssonnenwelt", function() {deepEqual( Stem("frühlingssonnenwelt"), "fruhlingssonnenwelt");});
test("frühlingstag -> fruhlingstag", function() {deepEqual( Stem("frühlingstag"), "fruhlingstag");});
test("frühlingstage -> fruhlingstag", function() {deepEqual( Stem("frühlingstage"), "fruhlingstag");});
test("frühlingstagen -> fruhlingstag", function() {deepEqual( Stem("frühlingstagen"), "fruhlingstag");});
test("frühlingstages -> fruhlingstag", function() {deepEqual( Stem("frühlingstages"), "fruhlingstag");});
test("frühlingswärme -> fruhlingswarm", function() {deepEqual( Stem("frühlingswärme"), "fruhlingswarm");});
test("frühpirsch -> fruhpirsch", function() {deepEqual( Stem("frühpirsch"), "fruhpirsch");});
test("frühreifen -> fruhreif", function() {deepEqual( Stem("frühreifen"), "fruhreif");});
test("frührot -> fruhrot", function() {deepEqual( Stem("frührot"), "fruhrot");});
test("frühschoppen -> fruhschopp", function() {deepEqual( Stem("frühschoppen"), "fruhschopp");});
test("frühstück -> fruhstuck", function() {deepEqual( Stem("frühstück"), "fruhstuck");});
test("frühstücken -> fruhstuck", function() {deepEqual( Stem("frühstücken"), "fruhstuck");});
test("frühstücks -> fruhstuck", function() {deepEqual( Stem("frühstücks"), "fruhstuck");});
test("frühstücksei -> fruhstucksei", function() {deepEqual( Stem("frühstücksei"), "fruhstucksei");});
test("frühstücksgeschirr -> fruhstucksgeschirr", function() {deepEqual( Stem("frühstücksgeschirr"), "fruhstucksgeschirr");});
test("frühwolken -> fruhwolk", function() {deepEqual( Stem("frühwolken"), "fruhwolk");});
test("frumm -> frumm", function() {deepEqual( Stem("frumm"), "frumm");});
test("frummen -> frumm", function() {deepEqual( Stem("frummen"), "frumm");});
test("frustra -> frustra", function() {deepEqual( Stem("frustra"), "frustra");});
test("fuchs -> fuch", function() {deepEqual( Stem("fuchs"), "fuch");});
test("füchs -> fuch", function() {deepEqual( Stem("füchs"), "fuch");});
test("füchse -> fuchs", function() {deepEqual( Stem("füchse"), "fuchs");});
test("fuchsen -> fuchs", function() {deepEqual( Stem("fuchsen"), "fuchs");});
test("füchsin -> fuchsin", function() {deepEqual( Stem("füchsin"), "fuchsin");});
test("fuchsriegeln -> fuchsriegeln", function() {deepEqual( Stem("fuchsriegeln"), "fuchsriegeln");});
test("fuchtelnd -> fuchtelnd", function() {deepEqual( Stem("fuchtelnd"), "fuchtelnd");});
test("fuchtelte -> fuchtelt", function() {deepEqual( Stem("fuchtelte"), "fuchtelt");});
test("fuerunt -> fuerunt", function() {deepEqual( Stem("fuerunt"), "fuerunt");});
test("fufzg -> fufzg", function() {deepEqual( Stem("fufzg"), "fufzg");});
test("füge -> fug", function() {deepEqual( Stem("füge"), "fug");});
test("fügen -> fug", function() {deepEqual( Stem("fügen"), "fug");});
test("fügt -> fugt", function() {deepEqual( Stem("fügt"), "fugt");});
test("fügte -> fugt", function() {deepEqual( Stem("fügte"), "fugt");});
test("fügung -> fugung", function() {deepEqual( Stem("fügung"), "fugung");});
test("fühlbar -> fuhlbar", function() {deepEqual( Stem("fühlbar"), "fuhlbar");});
test("fühlbare -> fuhlbar", function() {deepEqual( Stem("fühlbare"), "fuhlbar");});
test("fühle -> fuhl", function() {deepEqual( Stem("fühle"), "fuhl");});
test("fühlen -> fuhl", function() {deepEqual( Stem("fühlen"), "fuhl");});
test("fühlend -> fuhlend", function() {deepEqual( Stem("fühlend"), "fuhlend");});
test("fühlenden -> fuhlend", function() {deepEqual( Stem("fühlenden"), "fuhlend");});
test("fühlerhörnchen -> fuhlerhornch", function() {deepEqual( Stem("fühlerhörnchen"), "fuhlerhornch");});
test("fühlern -> fuhl", function() {deepEqual( Stem("fühlern"), "fuhl");});
test("fühlhörnchen -> fuhlhornch", function() {deepEqual( Stem("fühlhörnchen"), "fuhlhornch");});
test("fühlhörner -> fuhlhorn", function() {deepEqual( Stem("fühlhörner"), "fuhlhorn");});
test("fühllosen -> fuhllos", function() {deepEqual( Stem("fühllosen"), "fuhllos");});
test("fühllosigkeit -> fuhllos", function() {deepEqual( Stem("fühllosigkeit"), "fuhllos");});
test("fühlst -> fuhl", function() {deepEqual( Stem("fühlst"), "fuhl");});
test("fühlt -> fuhlt", function() {deepEqual( Stem("fühlt"), "fuhlt");});
test("fühlte -> fuhlt", function() {deepEqual( Stem("fühlte"), "fuhlt");});
test("fühlten -> fuhlt", function() {deepEqual( Stem("fühlten"), "fuhlt");});
test("fuhr -> fuhr", function() {deepEqual( Stem("fuhr"), "fuhr");});
test("fuhre -> fuhr", function() {deepEqual( Stem("fuhre"), "fuhr");});
test("führe -> fuhr", function() {deepEqual( Stem("führe"), "fuhr");});
test("fuhren -> fuhr", function() {deepEqual( Stem("fuhren"), "fuhr");});
test("führen -> fuhr", function() {deepEqual( Stem("führen"), "fuhr");});
test("führende -> fuhrend", function() {deepEqual( Stem("führende"), "fuhrend");});
test("führenden -> fuhrend", function() {deepEqual( Stem("führenden"), "fuhrend");});
test("führer -> fuhr", function() {deepEqual( Stem("führer"), "fuhr");});
test("führerschein -> fuhrerschein", function() {deepEqual( Stem("führerschein"), "fuhrerschein");});
test("führest -> fuhr", function() {deepEqual( Stem("führest"), "fuhr");});
test("führet -> fuhret", function() {deepEqual( Stem("führet"), "fuhret");});
test("führete -> fuhret", function() {deepEqual( Stem("führete"), "fuhret");});
test("fuhrknecht -> fuhrknecht", function() {deepEqual( Stem("fuhrknecht"), "fuhrknecht");});
test("fuhrleute -> fuhrleut", function() {deepEqual( Stem("fuhrleute"), "fuhrleut");});
test("führt -> fuhrt", function() {deepEqual( Stem("führt"), "fuhrt");});
test("führte -> fuhrt", function() {deepEqual( Stem("führte"), "fuhrt");});
test("führten -> fuhrt", function() {deepEqual( Stem("führten"), "fuhrt");});
test("führung -> fuhrung", function() {deepEqual( Stem("führung"), "fuhrung");});
test("führungsleute -> fuhrungsleut", function() {deepEqual( Stem("führungsleute"), "fuhrungsleut");});
test("führungszeugnis -> fuhrungszeugnis", function() {deepEqual( Stem("führungszeugnis"), "fuhrungszeugnis");});
test("fuhrwerk -> fuhrwerk", function() {deepEqual( Stem("fuhrwerk"), "fuhrwerk");});
test("fuhrwerke -> fuhrwerk", function() {deepEqual( Stem("fuhrwerke"), "fuhrwerk");});
test("fuhrwerklein -> fuhrwerklein", function() {deepEqual( Stem("fuhrwerklein"), "fuhrwerklein");});
test("füll -> full", function() {deepEqual( Stem("füll"), "full");});
test("fülle -> full", function() {deepEqual( Stem("fülle"), "full");});
test("füllen -> full", function() {deepEqual( Stem("füllen"), "full");});
test("füllenden -> fullend", function() {deepEqual( Stem("füllenden"), "fullend");});
test("füllet -> fullet", function() {deepEqual( Stem("füllet"), "fullet");});
test("füllfederhalter -> fullfederhalt", function() {deepEqual( Stem("füllfederhalter"), "fullfederhalt");});
test("füllt -> fullt", function() {deepEqual( Stem("füllt"), "fullt");});
test("füllte -> fullt", function() {deepEqual( Stem("füllte"), "fullt");});
test("füllten -> fullt", function() {deepEqual( Stem("füllten"), "fullt");});
test("fummelt -> fummelt", function() {deepEqual( Stem("fummelt"), "fummelt");});
test("fun -> fun", function() {deepEqual( Stem("fun"), "fun");});
test("fundament -> fundament", function() {deepEqual( Stem("fundament"), "fundament");});
test("fundamente -> fundament", function() {deepEqual( Stem("fundamente"), "fundament");});
test("funden -> fund", function() {deepEqual( Stem("funden"), "fund");});
test("fundenseetauern -> fundenseetau", function() {deepEqual( Stem("fundenseetauern"), "fundenseetau");});
test("fundiert -> fundiert", function() {deepEqual( Stem("fundiert"), "fundiert");});
test("fünf -> funf", function() {deepEqual( Stem("fünf"), "funf");});
test("fünfbeiniges -> funfbein", function() {deepEqual( Stem("fünfbeiniges"), "funfbein");});
test("fünfe -> funf", function() {deepEqual( Stem("fünfe"), "funf");});
test("fünfen -> funf", function() {deepEqual( Stem("fünfen"), "funf");});
test("fünfer -> funf", function() {deepEqual( Stem("fünfer"), "funf");});
test("fünfhundert -> funfhundert", function() {deepEqual( Stem("fünfhundert"), "funfhundert");});
test("fünfhundertmarkscheine -> funfhundertmarkschein", function() {deepEqual( Stem("fünfhundertmarkscheine"), "funfhundertmarkschein");});
test("fünfhundertmarkscheinen -> funfhundertmarkschein", function() {deepEqual( Stem("fünfhundertmarkscheinen"), "funfhundertmarkschein");});
test("fünfjähriges -> funfjahr", function() {deepEqual( Stem("fünfjähriges"), "funfjahr");});
test("fünfte -> funft", function() {deepEqual( Stem("fünfte"), "funft");});
test("fünftelminute -> funftelminut", function() {deepEqual( Stem("fünftelminute"), "funftelminut");});
test("fünften -> funft", function() {deepEqual( Stem("fünften"), "funft");});
test("fünftes -> funft", function() {deepEqual( Stem("fünftes"), "funft");});
test("fünfunddreissigjährigen -> funfunddreissigjahr", function() {deepEqual( Stem("fünfunddreissigjährigen"), "funfunddreissigjahr");});
test("fünfunddreißigmal -> funfunddreissigmal", function() {deepEqual( Stem("fünfunddreißigmal"), "funfunddreissigmal");});
test("fünfundneunzig -> funfundneunz", function() {deepEqual( Stem("fünfundneunzig"), "funfundneunz");});
test("fünfundsechzig -> funfundsechz", function() {deepEqual( Stem("fünfundsechzig"), "funfundsechz");});
test("fünfundvierziger -> funfundvierz", function() {deepEqual( Stem("fünfundvierziger"), "funfundvierz");});
test("fünfundzwanzig -> funfundzwanz", function() {deepEqual( Stem("fünfundzwanzig"), "funfundzwanz");});
test("fünfzehn -> funfzehn", function() {deepEqual( Stem("fünfzehn"), "funfzehn");});
test("fünfzehnmal -> funfzehnmal", function() {deepEqual( Stem("fünfzehnmal"), "funfzehnmal");});
test("fünfzehnten -> funfzehnt", function() {deepEqual( Stem("fünfzehnten"), "funfzehnt");});
test("fünfzig -> funfzig", function() {deepEqual( Stem("fünfzig"), "funfzig");});
test("fünfziger -> funfzig", function() {deepEqual( Stem("fünfziger"), "funfzig");});
test("fünfzigjährigen -> funfzigjahr", function() {deepEqual( Stem("fünfzigjährigen"), "funfzigjahr");});
test("fünfzigsten -> funfzig", function() {deepEqual( Stem("fünfzigsten"), "funfzig");});
test("fungiert -> fungiert", function() {deepEqual( Stem("fungiert"), "fungiert");});
test("funk -> funk", function() {deepEqual( Stem("funk"), "funk");});
test("fünkchen -> funkch", function() {deepEqual( Stem("fünkchen"), "funkch");});
test("funkelhelle -> funkelhell", function() {deepEqual( Stem("funkelhelle"), "funkelhell");});
test("funkeln -> funkeln", function() {deepEqual( Stem("funkeln"), "funkeln");});
test("funkelnden -> funkelnd", function() {deepEqual( Stem("funkelnden"), "funkelnd");});
test("funkelte -> funkelt", function() {deepEqual( Stem("funkelte"), "funkelt");});
test("funkelten -> funkelt", function() {deepEqual( Stem("funkelten"), "funkelt");});
test("funken -> funk", function() {deepEqual( Stem("funken"), "funk");});
test("funkendampf -> funkendampf", function() {deepEqual( Stem("funkendampf"), "funkendampf");});
test("funkenknopf -> funkenknopf", function() {deepEqual( Stem("funkenknopf"), "funkenknopf");});
test("funkhaus -> funkhaus", function() {deepEqual( Stem("funkhaus"), "funkhaus");});
test("funkhauses -> funkhaus", function() {deepEqual( Stem("funkhauses"), "funkhaus");});
test("funkleute -> funkleut", function() {deepEqual( Stem("funkleute"), "funkleut");});
test("funktion -> funktion", function() {deepEqual( Stem("funktion"), "funktion");});
test("funktionen -> funktion", function() {deepEqual( Stem("funktionen"), "funktion");});
test("funktionieren -> funktioni", function() {deepEqual( Stem("funktionieren"), "funktioni");});
test("funktionierende -> funktionier", function() {deepEqual( Stem("funktionierende"), "funktionier");});
test("funktionierte -> funktioniert", function() {deepEqual( Stem("funktionierte"), "funktioniert");});
test("fur -> fur", function() {deepEqual( Stem("fur"), "fur");});
test("für -> fur", function() {deepEqual( Stem("für"), "fur");});
test("fürbass -> furbass", function() {deepEqual( Stem("fürbass"), "furbass");});
test("fürbaß -> furbass", function() {deepEqual( Stem("fürbaß"), "furbass");});
test("fürbittbuch -> furbittbuch", function() {deepEqual( Stem("fürbittbuch"), "furbittbuch");});
test("fürbitte -> furbitt", function() {deepEqual( Stem("fürbitte"), "furbitt");});
test("fürbittgebet -> furbittgebet", function() {deepEqual( Stem("fürbittgebet"), "furbittgebet");});
test("fürbringen -> furbring", function() {deepEqual( Stem("fürbringen"), "furbring");});
test("furche -> furch", function() {deepEqual( Stem("furche"), "furch");});
test("furchen -> furch", function() {deepEqual( Stem("furchen"), "furch");});
test("furcht -> furcht", function() {deepEqual( Stem("furcht"), "furcht");});
test("fürcht -> furcht", function() {deepEqual( Stem("fürcht"), "furcht");});
test("furchtbar -> furchtbar", function() {deepEqual( Stem("furchtbar"), "furchtbar");});
test("furchtbare -> furchtbar", function() {deepEqual( Stem("furchtbare"), "furchtbar");});
test("furchtbarem -> furchtbar", function() {deepEqual( Stem("furchtbarem"), "furchtbar");});
test("furchtbaren -> furchtbar", function() {deepEqual( Stem("furchtbaren"), "furchtbar");});
test("furchtbarste -> furchtbarst", function() {deepEqual( Stem("furchtbarste"), "furchtbarst");});
test("fürchte -> furcht", function() {deepEqual( Stem("fürchte"), "furcht");});
test("fürchten -> furcht", function() {deepEqual( Stem("fürchten"), "furcht");});
test("fürchtende -> furchtend", function() {deepEqual( Stem("fürchtende"), "furchtend");});
test("fürchtenden -> furchtend", function() {deepEqual( Stem("fürchtenden"), "furchtend");});
test("fürchterlich -> furcht", function() {deepEqual( Stem("fürchterlich"), "furcht");});
test("fürchterliche -> furcht", function() {deepEqual( Stem("fürchterliche"), "furcht");});
test("fürchterlichen -> furcht", function() {deepEqual( Stem("fürchterlichen"), "furcht");});
test("fürchterliches -> furcht", function() {deepEqual( Stem("fürchterliches"), "furcht");});
test("fürchtet -> furchtet", function() {deepEqual( Stem("fürchtet"), "furchtet");});
test("fürchtete -> furchtet", function() {deepEqual( Stem("fürchtete"), "furchtet");});
test("fürchteten -> furchtet", function() {deepEqual( Stem("fürchteten"), "furchtet");});
test("furchtlosigkeit -> furchtlos", function() {deepEqual( Stem("furchtlosigkeit"), "furchtlos");});
test("furchtsam -> furchtsam", function() {deepEqual( Stem("furchtsam"), "furchtsam");});
test("furchtsamen -> furchtsam", function() {deepEqual( Stem("furchtsamen"), "furchtsam");});
test("furchtsames -> furchtsam", function() {deepEqual( Stem("furchtsames"), "furchtsam");});
test("fürder -> furd", function() {deepEqual( Stem("fürder"), "furd");});
test("fürdere -> furd", function() {deepEqual( Stem("fürdere"), "furd");});
test("füreinander -> fureinand", function() {deepEqual( Stem("füreinander"), "fureinand");});
test("fürgschützt -> furgschutzt", function() {deepEqual( Stem("fürgschützt"), "furgschutzt");});
test("fürgstreckt -> furgstreckt", function() {deepEqual( Stem("fürgstreckt"), "furgstreckt");});
test("fürnehmere -> furnehm", function() {deepEqual( Stem("fürnehmere"), "furnehm");});
test("fürplärren -> furplarr", function() {deepEqual( Stem("fürplärren"), "furplarr");});
test("fürs -> fur", function() {deepEqual( Stem("fürs"), "fur");});
test("fürschlag -> furschlag", function() {deepEqual( Stem("fürschlag"), "furschlag");});
test("fürsichtige -> fursicht", function() {deepEqual( Stem("fürsichtige"), "fursicht");});
test("fürst -> furst", function() {deepEqual( Stem("fürst"), "furst");});
test("fürsten -> furst", function() {deepEqual( Stem("fürsten"), "furst");});
test("fürstenhochzeit -> furstenhochzeit", function() {deepEqual( Stem("fürstenhochzeit"), "furstenhochzeit");});
test("fürstenmantel -> furstenmantel", function() {deepEqual( Stem("fürstenmantel"), "furstenmantel");});
test("fürstentodes -> furstentod", function() {deepEqual( Stem("fürstentodes"), "furstentod");});
test("fürstlich -> furstlich", function() {deepEqual( Stem("fürstlich"), "furstlich");});
test("fürstlichen -> furstlich", function() {deepEqual( Stem("fürstlichen"), "furstlich");});
test("fürstpröpstlichen -> furstpropst", function() {deepEqual( Stem("fürstpröpstlichen"), "furstpropst");});
test("furt -> furt", function() {deepEqual( Stem("furt"), "furt");});
test("furtghadert -> furtghadert", function() {deepEqual( Stem("furtghadert"), "furtghadert");});
test("fürwahr -> furwahr", function() {deepEqual( Stem("fürwahr"), "furwahr");});
test("fürwahrhalten -> furwahrhalt", function() {deepEqual( Stem("fürwahrhalten"), "furwahrhalt");});
test("fürwahrhaltens -> furwahrhalt", function() {deepEqual( Stem("fürwahrhaltens"), "furwahrhalt");});
test("fuss -> fuss", function() {deepEqual( Stem("fuss"), "fuss");});
test("fuß -> fuss", function() {deepEqual( Stem("fuß"), "fuss");});
test("füss -> fuss", function() {deepEqual( Stem("füss"), "fuss");});
test("fussball -> fussball", function() {deepEqual( Stem("fussball"), "fussball");});
test("fussballteam -> fussballteam", function() {deepEqual( Stem("fussballteam"), "fussballteam");});
test("fussballverein -> fussballverein", function() {deepEqual( Stem("fussballverein"), "fussballverein");});
test("fussboden -> fussbod", function() {deepEqual( Stem("fussboden"), "fussbod");});
test("fußboden -> fussbod", function() {deepEqual( Stem("fußboden"), "fussbod");});
test("füsschen -> fussch", function() {deepEqual( Stem("füsschen"), "fussch");});
test("fusse -> fuss", function() {deepEqual( Stem("fusse"), "fuss");});
test("fuße -> fuss", function() {deepEqual( Stem("fuße"), "fuss");});
test("füsse -> fuss", function() {deepEqual( Stem("füsse"), "fuss");});
test("füße -> fuss", function() {deepEqual( Stem("füße"), "fuss");});
test("füssen -> fuss", function() {deepEqual( Stem("füssen"), "fuss");});
test("füßen -> fuss", function() {deepEqual( Stem("füßen"), "fuss");});
test("fussende -> fussend", function() {deepEqual( Stem("fussende"), "fussend");});
test("fusses -> fuss", function() {deepEqual( Stem("fusses"), "fuss");});
test("fußes -> fuss", function() {deepEqual( Stem("fußes"), "fuss");});
test("fussgänger -> fussgang", function() {deepEqual( Stem("fussgänger"), "fussgang");});
test("fusspfad -> fusspfad", function() {deepEqual( Stem("fusspfad"), "fusspfad");});
test("fussschemelchen -> fussschemelch", function() {deepEqual( Stem("fussschemelchen"), "fussschemelch");});
test("fusssohle -> fusssohl", function() {deepEqual( Stem("fusssohle"), "fusssohl");});
test("fußsohle -> fusssohl", function() {deepEqual( Stem("fußsohle"), "fusssohl");});
test("fusssohlen -> fusssohl", function() {deepEqual( Stem("fusssohlen"), "fusssohl");});
test("fußsohlen -> fusssohl", function() {deepEqual( Stem("fußsohlen"), "fusssohl");});
test("fussspitze -> fussspitz", function() {deepEqual( Stem("fussspitze"), "fussspitz");});
test("fußspitze -> fussspitz", function() {deepEqual( Stem("fußspitze"), "fussspitz");});
test("fussspitzen -> fussspitz", function() {deepEqual( Stem("fussspitzen"), "fussspitz");});
test("fußspitzen -> fussspitz", function() {deepEqual( Stem("fußspitzen"), "fussspitz");});
test("fusstritt -> fusstritt", function() {deepEqual( Stem("fusstritt"), "fusstritt");});
test("fusstritten -> fusstritt", function() {deepEqual( Stem("fusstritten"), "fusstritt");});
test("futter -> futt", function() {deepEqual( Stem("futter"), "futt");});
test("futterbarren -> futterbarr", function() {deepEqual( Stem("futterbarren"), "futterbarr");});
test("füttere -> futt", function() {deepEqual( Stem("füttere"), "futt");});
test("füttern -> futt", function() {deepEqual( Stem("füttern"), "futt");});
test("füttert -> futtert", function() {deepEqual( Stem("füttert"), "futtert");});
test("g -> g", function() {deepEqual( Stem("g"), "g");});
test("gab -> gab", function() {deepEqual( Stem("gab"), "gab");});
test("gäb -> gab", function() {deepEqual( Stem("gäb"), "gab");});
test("gabe -> gab", function() {deepEqual( Stem("gabe"), "gab");});
test("gäbe -> gab", function() {deepEqual( Stem("gäbe"), "gab");});
test("gabel -> gabel", function() {deepEqual( Stem("gabel"), "gabel");});
test("gabelhirsch -> gabelhirsch", function() {deepEqual( Stem("gabelhirsch"), "gabelhirsch");});
test("gaben -> gab", function() {deepEqual( Stem("gaben"), "gab");});
test("gäbst -> gabst", function() {deepEqual( Stem("gäbst"), "gabst");});
test("gackernden -> gackernd", function() {deepEqual( Stem("gackernden"), "gackernd");});
test("gad -> gad", function() {deepEqual( Stem("gad"), "gad");});
test("gaffen -> gaff", function() {deepEqual( Stem("gaffen"), "gaff");});
test("gaffende -> gaffend", function() {deepEqual( Stem("gaffende"), "gaffend");});
test("gaffer -> gaff", function() {deepEqual( Stem("gaffer"), "gaff");});
test("gahlings -> gahling", function() {deepEqual( Stem("gahlings"), "gahling");});
test("gähnte -> gahnt", function() {deepEqual( Stem("gähnte"), "gahnt");});
test("galantinen -> galantin", function() {deepEqual( Stem("galantinen"), "galantin");});
test("galerie -> galeri", function() {deepEqual( Stem("galerie"), "galeri");});
test("galgen -> galg", function() {deepEqual( Stem("galgen"), "galg");});
test("galgenhund -> galgenhund", function() {deepEqual( Stem("galgenhund"), "galgenhund");});
test("galgenlaune -> galgenlaun", function() {deepEqual( Stem("galgenlaune"), "galgenlaun");});
test("galion -> galion", function() {deepEqual( Stem("galion"), "galion");});
test("galions -> galion", function() {deepEqual( Stem("galions"), "galion");});
test("galle -> gall", function() {deepEqual( Stem("galle"), "gall");});
test("gallen -> gall", function() {deepEqual( Stem("gallen"), "gall");});
test("galler -> gall", function() {deepEqual( Stem("galler"), "gall");});
test("gallige -> gallig", function() {deepEqual( Stem("gallige"), "gallig");});
test("galligen -> gallig", function() {deepEqual( Stem("galligen"), "gallig");});
test("galopp -> galopp", function() {deepEqual( Stem("galopp"), "galopp");});
test("galoppierte -> galoppiert", function() {deepEqual( Stem("galoppierte"), "galoppiert");});
test("galt -> galt", function() {deepEqual( Stem("galt"), "galt");});
test("gälte -> galt", function() {deepEqual( Stem("gälte"), "galt");});
test("galten -> galt", function() {deepEqual( Stem("galten"), "galt");});
test("gamsbart -> gamsbart", function() {deepEqual( Stem("gamsbart"), "gamsbart");});
test("gan -> gan", function() {deepEqual( Stem("gan"), "gan");});
test("gang -> gang", function() {deepEqual( Stem("gang"), "gang");});
test("gangbar -> gangbar", function() {deepEqual( Stem("gangbar"), "gangbar");});
test("gangbaren -> gangbar", function() {deepEqual( Stem("gangbaren"), "gangbar");});
test("gange -> gang", function() {deepEqual( Stem("gange"), "gang");});
test("gänge -> gang", function() {deepEqual( Stem("gänge"), "gang");});
test("gängelband -> gangelband", function() {deepEqual( Stem("gängelband"), "gangelband");});
test("gangen -> gang", function() {deepEqual( Stem("gangen"), "gang");});
test("gängen -> gang", function() {deepEqual( Stem("gängen"), "gang");});
test("gans -> gan", function() {deepEqual( Stem("gans"), "gan");});
test("gäns -> gan", function() {deepEqual( Stem("gäns"), "gan");});
test("gänse -> gans", function() {deepEqual( Stem("gänse"), "gans");});
test("gänsen -> gans", function() {deepEqual( Stem("gänsen"), "gans");});
test("gänsestall -> gansestall", function() {deepEqual( Stem("gänsestall"), "gansestall");});
test("ganz -> ganz", function() {deepEqual( Stem("ganz"), "ganz");});
test("ganze -> ganz", function() {deepEqual( Stem("ganze"), "ganz");});
test("ganzem -> ganz", function() {deepEqual( Stem("ganzem"), "ganz");});
test("ganzen -> ganz", function() {deepEqual( Stem("ganzen"), "ganz");});
test("ganzer -> ganz", function() {deepEqual( Stem("ganzer"), "ganz");});
test("ganzes -> ganz", function() {deepEqual( Stem("ganzes"), "ganz");});
test("gänzlich -> ganzlich", function() {deepEqual( Stem("gänzlich"), "ganzlich");});
test("gänzliche -> ganzlich", function() {deepEqual( Stem("gänzliche"), "ganzlich");});
test("gänzlichen -> ganzlich", function() {deepEqual( Stem("gänzlichen"), "ganzlich");});
test("gänzlicher -> ganzlich", function() {deepEqual( Stem("gänzlicher"), "ganzlich");});
test("gar -> gar", function() {deepEqual( Stem("gar"), "gar");});
test("garantie -> garanti", function() {deepEqual( Stem("garantie"), "garanti");});
test("garaus -> garaus", function() {deepEqual( Stem("garaus"), "garaus");});
test("garben -> garb", function() {deepEqual( Stem("garben"), "garb");});
test("garderobe -> garderob", function() {deepEqual( Stem("garderobe"), "garderob");});
test("garderobestücken -> garderobestuck", function() {deepEqual( Stem("garderobestücken"), "garderobestuck");});
test("gardine -> gardin", function() {deepEqual( Stem("gardine"), "gardin");});
test("gardinen -> gardin", function() {deepEqual( Stem("gardinen"), "gardin");});
test("gardinenstange -> gardinenstang", function() {deepEqual( Stem("gardinenstange"), "gardinenstang");});
test("gare -> gar", function() {deepEqual( Stem("gare"), "gar");});
test("gärende -> garend", function() {deepEqual( Stem("gärende"), "garend");});
test("gärenden -> garend", function() {deepEqual( Stem("gärenden"), "garend");});
test("garn -> garn", function() {deepEqual( Stem("garn"), "garn");});
test("garne -> garn", function() {deepEqual( Stem("garne"), "garn");});
test("garnflechten -> garnflecht", function() {deepEqual( Stem("garnflechten"), "garnflecht");});
test("garniert -> garniert", function() {deepEqual( Stem("garniert"), "garniert");});
test("garnsbock -> garnsbock", function() {deepEqual( Stem("garnsbock"), "garnsbock");});
test("garstig -> garstig", function() {deepEqual( Stem("garstig"), "garstig");});
test("garstige -> garstig", function() {deepEqual( Stem("garstige"), "garstig");});
test("garstiger -> garstig", function() {deepEqual( Stem("garstiger"), "garstig");});
test("garstiges -> garstig", function() {deepEqual( Stem("garstiges"), "garstig");});
test("garten -> gart", function() {deepEqual( Stem("garten"), "gart");});
test("gärten -> gart", function() {deepEqual( Stem("gärten"), "gart");});
test("garteng -> garteng", function() {deepEqual( Stem("garteng"), "garteng");});
test("gartenhäuschen -> gartenhausch", function() {deepEqual( Stem("gartenhäuschen"), "gartenhausch");});
test("gartenmitte -> gartenmitt", function() {deepEqual( Stem("gartenmitte"), "gartenmitt");});
test("gartens -> gart", function() {deepEqual( Stem("gartens"), "gart");});
test("gartenwege -> gartenweg", function() {deepEqual( Stem("gartenwege"), "gartenweg");});
test("gartenzaun -> gartenzaun", function() {deepEqual( Stem("gartenzaun"), "gartenzaun");});
test("gärtner -> gartn", function() {deepEqual( Stem("gärtner"), "gartn");});
test("gässchen -> gassch", function() {deepEqual( Stem("gässchen"), "gassch");});
test("gasse -> gass", function() {deepEqual( Stem("gasse"), "gass");});
test("gassen -> gass", function() {deepEqual( Stem("gassen"), "gass");});
test("gassenbuben -> gassenbub", function() {deepEqual( Stem("gassenbuben"), "gassenbub");});
test("gassenjunge -> gassenj", function() {deepEqual( Stem("gassenjunge"), "gassenj");});
test("gassenjungen -> gassenj", function() {deepEqual( Stem("gassenjungen"), "gassenj");});
test("gassenmädchen -> gassenmadch", function() {deepEqual( Stem("gassenmädchen"), "gassenmadch");});
test("gast -> gast", function() {deepEqual( Stem("gast"), "gast");});
test("gaste -> gast", function() {deepEqual( Stem("gaste"), "gast");});
test("gäste -> gast", function() {deepEqual( Stem("gäste"), "gast");});
test("gästen -> gast", function() {deepEqual( Stem("gästen"), "gast");});
test("gastes -> gast", function() {deepEqual( Stem("gastes"), "gast");});
test("gastfreunde -> gastfreund", function() {deepEqual( Stem("gastfreunde"), "gastfreund");});
test("gastfreundlichen -> gastfreund", function() {deepEqual( Stem("gastfreundlichen"), "gastfreund");});
test("gastgebenden -> gastgeb", function() {deepEqual( Stem("gastgebenden"), "gastgeb");});
test("gastgeber -> gastgeb", function() {deepEqual( Stem("gastgeber"), "gastgeb");});
test("gastgebers -> gastgeb", function() {deepEqual( Stem("gastgebers"), "gastgeb");});
test("gasthaus -> gasthaus", function() {deepEqual( Stem("gasthaus"), "gasthaus");});
test("gasthause -> gasthaus", function() {deepEqual( Stem("gasthause"), "gasthaus");});
test("gasthauses -> gasthaus", function() {deepEqual( Stem("gasthauses"), "gasthaus");});
test("gasthof -> gasthof", function() {deepEqual( Stem("gasthof"), "gasthof");});
test("gasthofe -> gasthof", function() {deepEqual( Stem("gasthofe"), "gasthof");});
test("gasthofes -> gasthof", function() {deepEqual( Stem("gasthofes"), "gasthof");});
test("gastliche -> gastlich", function() {deepEqual( Stem("gastliche"), "gastlich");});
test("gastlichen -> gastlich", function() {deepEqual( Stem("gastlichen"), "gastlich");});
test("gastmahle -> gastmahl", function() {deepEqual( Stem("gastmahle"), "gastmahl");});
test("gastspiel -> gastspiel", function() {deepEqual( Stem("gastspiel"), "gastspiel");});
test("gaststube -> gaststub", function() {deepEqual( Stem("gaststube"), "gaststub");});
test("gaststuben -> gaststub", function() {deepEqual( Stem("gaststuben"), "gaststub");});
test("gastwirt -> gastwirt", function() {deepEqual( Stem("gastwirt"), "gastwirt");});
test("gates -> gat", function() {deepEqual( Stem("gates"), "gat");});
test("gatte -> gatt", function() {deepEqual( Stem("gatte"), "gatt");});
test("gatten -> gatt", function() {deepEqual( Stem("gatten"), "gatt");});
test("gattentreue -> gattentreu", function() {deepEqual( Stem("gattentreue"), "gattentreu");});
test("gattin -> gattin", function() {deepEqual( Stem("gattin"), "gattin");});
test("gattung -> gattung", function() {deepEqual( Stem("gattung"), "gattung");});
test("gattungen -> gattung", function() {deepEqual( Stem("gattungen"), "gattung");});
test("gattungs -> gattung", function() {deepEqual( Stem("gattungs"), "gattung");});
test("gau -> gau", function() {deepEqual( Stem("gau"), "gau");});
test("gaukelei -> gaukelei", function() {deepEqual( Stem("gaukelei"), "gaukelei");});
test("gäule -> gaul", function() {deepEqual( Stem("gäule"), "gaul");});
test("gaumen -> gaum", function() {deepEqual( Stem("gaumen"), "gaum");});
test("gazegewänder -> gazegewand", function() {deepEqual( Stem("gazegewänder"), "gazegewand");});
test("gazeschleier -> gazeschlei", function() {deepEqual( Stem("gazeschleier"), "gazeschlei");});
test("gb -> gb", function() {deepEqual( Stem("gb"), "gb");});
test("ge -> ge", function() {deepEqual( Stem("ge"), "ge");});
test("geachtet -> geachtet", function() {deepEqual( Stem("geachtet"), "geachtet");});
test("geädert -> geadert", function() {deepEqual( Stem("geädert"), "geadert");});
test("geahnt -> geahnt", function() {deepEqual( Stem("geahnt"), "geahnt");});
test("gealterten -> gealtert", function() {deepEqual( Stem("gealterten"), "gealtert");});
test("gealttätige -> gealttat", function() {deepEqual( Stem("gealttätige"), "gealttat");});
test("geändert -> geandert", function() {deepEqual( Stem("geändert"), "geandert");});
test("geängstigtes -> geangstigt", function() {deepEqual( Stem("geängstigtes"), "geangstigt");});
test("geantwortet -> geantwortet", function() {deepEqual( Stem("geantwortet"), "geantwortet");});
test("gearbeitet -> gearbeitet", function() {deepEqual( Stem("gearbeitet"), "gearbeitet");});
test("gearbeiteten -> gearbeitet", function() {deepEqual( Stem("gearbeiteten"), "gearbeitet");});
test("geärgert -> geargert", function() {deepEqual( Stem("geärgert"), "geargert");});
test("geartet -> geartet", function() {deepEqual( Stem("geartet"), "geartet");});
test("geäussert -> geaussert", function() {deepEqual( Stem("geäussert"), "geaussert");});
test("geäußert -> geaussert", function() {deepEqual( Stem("geäußert"), "geaussert");});
test("geb -> geb", function() {deepEqual( Stem("geb"), "geb");});
test("gebacken -> geback", function() {deepEqual( Stem("gebacken"), "geback");});
test("gebackene -> geback", function() {deepEqual( Stem("gebackene"), "geback");});
test("gebackenen -> geback", function() {deepEqual( Stem("gebackenen"), "geback");});
test("gebadet -> gebadet", function() {deepEqual( Stem("gebadet"), "gebadet");});
test("gebahnt -> gebahnt", function() {deepEqual( Stem("gebahnt"), "gebahnt");});
test("gebälks -> gebalk", function() {deepEqual( Stem("gebälks"), "gebalk");});
test("geballt -> geballt", function() {deepEqual( Stem("geballt"), "geballt");});
test("geballte -> geballt", function() {deepEqual( Stem("geballte"), "geballt");});
test("gebar -> gebar", function() {deepEqual( Stem("gebar"), "gebar");});
test("gebärde -> gebard", function() {deepEqual( Stem("gebärde"), "gebard");});
test("gebärden -> gebard", function() {deepEqual( Stem("gebärden"), "gebard");});
test("gebärdend -> gebard", function() {deepEqual( Stem("gebärdend"), "gebard");});
test("gebärdenden -> gebard", function() {deepEqual( Stem("gebärdenden"), "gebard");});
test("gebärdenspiel -> gebardenspiel", function() {deepEqual( Stem("gebärdenspiel"), "gebardenspiel");});
test("gebärdet -> gebardet", function() {deepEqual( Stem("gebärdet"), "gebardet");});
test("gebärdete -> gebardet", function() {deepEqual( Stem("gebärdete"), "gebardet");});
test("gebären -> gebar", function() {deepEqual( Stem("gebären"), "gebar");});
test("gebärerin -> gebarerin", function() {deepEqual( Stem("gebärerin"), "gebarerin");});
test("gebäude -> gebaud", function() {deepEqual( Stem("gebäude"), "gebaud");});
test("gebauet -> gebauet", function() {deepEqual( Stem("gebauet"), "gebauet");});
test("gebaumelt -> gebaumelt", function() {deepEqual( Stem("gebaumelt"), "gebaumelt");});
test("gebaut -> gebaut", function() {deepEqual( Stem("gebaut"), "gebaut");});
test("gebaute -> gebaut", function() {deepEqual( Stem("gebaute"), "gebaut");});
test("gebe -> geb", function() {deepEqual( Stem("gebe"), "geb");});
test("gebein -> gebein", function() {deepEqual( Stem("gebein"), "gebein");});
test("gebeine -> gebein", function() {deepEqual( Stem("gebeine"), "gebein");});
test("gebeinen -> gebein", function() {deepEqual( Stem("gebeinen"), "gebein");});
test("gebell -> gebell", function() {deepEqual( Stem("gebell"), "gebell");});
test("gebellt -> gebellt", function() {deepEqual( Stem("gebellt"), "gebellt");});
test("geben -> geb", function() {deepEqual( Stem("geben"), "geb");});
test("gebend -> gebend", function() {deepEqual( Stem("gebend"), "gebend");});
test("gebessert -> gebessert", function() {deepEqual( Stem("gebessert"), "gebessert");});
test("gebest -> geb", function() {deepEqual( Stem("gebest"), "geb");});
test("gebet -> gebet", function() {deepEqual( Stem("gebet"), "gebet");});
test("gebetbuch -> gebetbuch", function() {deepEqual( Stem("gebetbuch"), "gebetbuch");});
test("gebete -> gebet", function() {deepEqual( Stem("gebete"), "gebet");});
test("gebeten -> gebet", function() {deepEqual( Stem("gebeten"), "gebet");});
test("gebetet -> gebetet", function() {deepEqual( Stem("gebetet"), "gebetet");});
test("gebetläuten -> gebetlaut", function() {deepEqual( Stem("gebetläuten"), "gebetlaut");});
test("gebetskapelle -> gebetskapell", function() {deepEqual( Stem("gebetskapelle"), "gebetskapell");});
test("gebettet -> gebettet", function() {deepEqual( Stem("gebettet"), "gebettet");});
test("gebeugt -> gebeugt", function() {deepEqual( Stem("gebeugt"), "gebeugt");});
test("gebeugte -> gebeugt", function() {deepEqual( Stem("gebeugte"), "gebeugt");});
test("gebeugtes -> gebeugt", function() {deepEqual( Stem("gebeugtes"), "gebeugt");});
test("gebiert -> gebiert", function() {deepEqual( Stem("gebiert"), "gebiert");});
test("gebiet -> gebiet", function() {deepEqual( Stem("gebiet"), "gebiet");});
test("gebiete -> gebiet", function() {deepEqual( Stem("gebiete"), "gebiet");});
test("gebieten -> gebiet", function() {deepEqual( Stem("gebieten"), "gebiet");});
test("gebietenden -> gebiet", function() {deepEqual( Stem("gebietenden"), "gebiet");});
test("gebieter -> gebiet", function() {deepEqual( Stem("gebieter"), "gebiet");});
test("gebieterin -> gebieterin", function() {deepEqual( Stem("gebieterin"), "gebieterin");});
test("gebieterisch -> gebieter", function() {deepEqual( Stem("gebieterisch"), "gebieter");});
test("gebietes -> gebiet", function() {deepEqual( Stem("gebietes"), "gebiet");});
test("gebietet -> gebietet", function() {deepEqual( Stem("gebietet"), "gebietet");});
test("gebilde -> gebild", function() {deepEqual( Stem("gebilde"), "gebild");});
test("gebilden -> gebild", function() {deepEqual( Stem("gebilden"), "gebild");});
test("gebildet -> gebildet", function() {deepEqual( Stem("gebildet"), "gebildet");});
test("gebildeten -> gebildet", function() {deepEqual( Stem("gebildeten"), "gebildet");});
test("gebildeter -> gebildet", function() {deepEqual( Stem("gebildeter"), "gebildet");});
test("gebirg -> gebirg", function() {deepEqual( Stem("gebirg"), "gebirg");});
test("gebirge -> gebirg", function() {deepEqual( Stem("gebirge"), "gebirg");});
test("gebirges -> gebirg", function() {deepEqual( Stem("gebirges"), "gebirg");});
test("gebirgsflecken -> gebirgsfleck", function() {deepEqual( Stem("gebirgsflecken"), "gebirgsfleck");});
test("gebirgskräutermilch -> gebirgskrautermilch", function() {deepEqual( Stem("gebirgskräutermilch"), "gebirgskrautermilch");});
test("gebirgsweib -> gebirgsweib", function() {deepEqual( Stem("gebirgsweib"), "gebirgsweib");});
test("gebirgswildnis -> gebirgswildnis", function() {deepEqual( Stem("gebirgswildnis"), "gebirgswildnis");});
test("gebissen -> gebiss", function() {deepEqual( Stem("gebissen"), "gebiss");});
test("geblähten -> geblaht", function() {deepEqual( Stem("geblähten"), "geblaht");});
test("gebläuter -> geblaut", function() {deepEqual( Stem("gebläuter"), "geblaut");});
test("geblendet -> geblendet", function() {deepEqual( Stem("geblendet"), "geblendet");});
test("geblickt -> geblickt", function() {deepEqual( Stem("geblickt"), "geblickt");});
test("geblieben -> geblieb", function() {deepEqual( Stem("geblieben"), "geblieb");});
test("gebliebener -> geblieb", function() {deepEqual( Stem("gebliebener"), "geblieb");});
test("geblüt -> geblut", function() {deepEqual( Stem("geblüt"), "geblut");});
test("geblüte -> geblut", function() {deepEqual( Stem("geblüte"), "geblut");});
test("geblütes -> geblut", function() {deepEqual( Stem("geblütes"), "geblut");});
test("gebogen -> gebog", function() {deepEqual( Stem("gebogen"), "gebog");});
test("gebogenen -> gebog", function() {deepEqual( Stem("gebogenen"), "gebog");});
test("gebohntem -> gebohnt", function() {deepEqual( Stem("gebohntem"), "gebohnt");});
test("geboren -> gebor", function() {deepEqual( Stem("geboren"), "gebor");});
test("geborene -> gebor", function() {deepEqual( Stem("geborene"), "gebor");});
test("geborener -> gebor", function() {deepEqual( Stem("geborener"), "gebor");});
test("geborgen -> geborg", function() {deepEqual( Stem("geborgen"), "geborg");});
test("geborgene -> geborg", function() {deepEqual( Stem("geborgene"), "geborg");});
test("geborgt -> geborgt", function() {deepEqual( Stem("geborgt"), "geborgt");});
test("gebot -> gebot", function() {deepEqual( Stem("gebot"), "gebot");});
test("gebote -> gebot", function() {deepEqual( Stem("gebote"), "gebot");});
test("geboten -> gebot", function() {deepEqual( Stem("geboten"), "gebot");});
test("gebotene -> gebot", function() {deepEqual( Stem("gebotene"), "gebot");});
test("gebotenen -> gebot", function() {deepEqual( Stem("gebotenen"), "gebot");});
test("gebots -> gebot", function() {deepEqual( Stem("gebots"), "gebot");});
test("gebrach -> gebrach", function() {deepEqual( Stem("gebrach"), "gebrach");});
test("gebracht -> gebracht", function() {deepEqual( Stem("gebracht"), "gebracht");});
test("gebrachte -> gebracht", function() {deepEqual( Stem("gebrachte"), "gebracht");});
test("gebrannt -> gebrannt", function() {deepEqual( Stem("gebrannt"), "gebrannt");});
test("gebraten -> gebrat", function() {deepEqual( Stem("gebraten"), "gebrat");});
test("gebratene -> gebrat", function() {deepEqual( Stem("gebratene"), "gebrat");});
test("gebratenen -> gebrat", function() {deepEqual( Stem("gebratenen"), "gebrat");});
test("gebrauch -> gebrauch", function() {deepEqual( Stem("gebrauch"), "gebrauch");});
test("gebrauche -> gebrauch", function() {deepEqual( Stem("gebrauche"), "gebrauch");});
test("gebräuche -> gebrauch", function() {deepEqual( Stem("gebräuche"), "gebrauch");});
test("gebrauchen -> gebrauch", function() {deepEqual( Stem("gebrauchen"), "gebrauch");});
test("gebräuchen -> gebrauch", function() {deepEqual( Stem("gebräuchen"), "gebrauch");});
test("gebrauches -> gebrauch", function() {deepEqual( Stem("gebrauches"), "gebrauch");});
test("gebräuchlich -> gebrauch", function() {deepEqual( Stem("gebräuchlich"), "gebrauch");});
test("gebräuchlicher -> gebrauch", function() {deepEqual( Stem("gebräuchlicher"), "gebrauch");});
test("gebrauchs -> gebrauch", function() {deepEqual( Stem("gebrauchs"), "gebrauch");});
test("gebraucht -> gebraucht", function() {deepEqual( Stem("gebraucht"), "gebraucht");});
test("gebrauchte -> gebraucht", function() {deepEqual( Stem("gebrauchte"), "gebraucht");});
test("gebrauchten -> gebraucht", function() {deepEqual( Stem("gebrauchten"), "gebraucht");});
test("gebräunte -> gebraunt", function() {deepEqual( Stem("gebräunte"), "gebraunt");});
test("gebräunten -> gebraunt", function() {deepEqual( Stem("gebräunten"), "gebraunt");});
test("gebräuntes -> gebraunt", function() {deepEqual( Stem("gebräuntes"), "gebraunt");});
test("gebreitet -> gebreitet", function() {deepEqual( Stem("gebreitet"), "gebreitet");});
test("gebremst -> gebrem", function() {deepEqual( Stem("gebremst"), "gebrem");});
test("gebricht -> gebricht", function() {deepEqual( Stem("gebricht"), "gebricht");});
test("gebrochen -> gebroch", function() {deepEqual( Stem("gebrochen"), "gebroch");});
test("gebrochener -> gebroch", function() {deepEqual( Stem("gebrochener"), "gebroch");});
test("gebrüll -> gebrull", function() {deepEqual( Stem("gebrüll"), "gebrull");});
test("gebrumm -> gebrumm", function() {deepEqual( Stem("gebrumm"), "gebrumm");});
test("gebrummt -> gebrummt", function() {deepEqual( Stem("gebrummt"), "gebrummt");});
test("gebt -> gebt", function() {deepEqual( Stem("gebt"), "gebt");});
test("gebückt -> gebuckt", function() {deepEqual( Stem("gebückt"), "gebuckt");});
test("gebühr -> gebuhr", function() {deepEqual( Stem("gebühr"), "gebuhr");});
test("gebührend -> gebuhr", function() {deepEqual( Stem("gebührend"), "gebuhr");});
test("gebührt -> gebuhrt", function() {deepEqual( Stem("gebührt"), "gebuhrt");});
test("gebührte -> gebuhrt", function() {deepEqual( Stem("gebührte"), "gebuhrt");});
test("gebumst -> gebum", function() {deepEqual( Stem("gebumst"), "gebum");});
test("gebunden -> gebund", function() {deepEqual( Stem("gebunden"), "gebund");});
test("gebundenen -> gebund", function() {deepEqual( Stem("gebundenen"), "gebund");});
test("gebundenes -> gebund", function() {deepEqual( Stem("gebundenes"), "gebund");});
test("gebürsteten -> geburstet", function() {deepEqual( Stem("gebürsteten"), "geburstet");});
test("geburt -> geburt", function() {deepEqual( Stem("geburt"), "geburt");});
test("geburten -> geburt", function() {deepEqual( Stem("geburten"), "geburt");});
test("gebürtig -> geburt", function() {deepEqual( Stem("gebürtig"), "geburt");});
test("geburtsorte -> geburtsort", function() {deepEqual( Stem("geburtsorte"), "geburtsort");});
test("geburtsschein -> geburtsschein", function() {deepEqual( Stem("geburtsschein"), "geburtsschein");});
test("geburtstag -> geburtstag", function() {deepEqual( Stem("geburtstag"), "geburtstag");});
test("geburtstage -> geburtstag", function() {deepEqual( Stem("geburtstage"), "geburtstag");});
test("geburtstages -> geburtstag", function() {deepEqual( Stem("geburtstages"), "geburtstag");});
test("geburtstags -> geburtstag", function() {deepEqual( Stem("geburtstags"), "geburtstag");});
test("gebüsch -> gebusch", function() {deepEqual( Stem("gebüsch"), "gebusch");});
test("gebüsche -> gebusch", function() {deepEqual( Stem("gebüsche"), "gebusch");});
test("gebüsst -> gebusst", function() {deepEqual( Stem("gebüsst"), "gebusst");});
test("gedacht -> gedacht", function() {deepEqual( Stem("gedacht"), "gedacht");});
test("gedachte -> gedacht", function() {deepEqual( Stem("gedachte"), "gedacht");});
test("gedachten -> gedacht", function() {deepEqual( Stem("gedachten"), "gedacht");});
test("gedächten -> gedacht", function() {deepEqual( Stem("gedächten"), "gedacht");});
test("gedächtnis -> gedachtnis", function() {deepEqual( Stem("gedächtnis"), "gedachtnis");});
test("gedächtnisglauben -> gedachtnisglaub", function() {deepEqual( Stem("gedächtnisglauben"), "gedachtnisglaub");});
test("gedächtnisse -> gedachtnis", function() {deepEqual( Stem("gedächtnisse"), "gedachtnis");});
test("gedächtnissen -> gedachtnis", function() {deepEqual( Stem("gedächtnissen"), "gedachtnis");});
test("gedächtnisses -> gedachtnis", function() {deepEqual( Stem("gedächtnisses"), "gedachtnis");});
test("gedämpft -> gedampft", function() {deepEqual( Stem("gedämpft"), "gedampft");});
test("gedämpftes -> gedampft", function() {deepEqual( Stem("gedämpftes"), "gedampft");});
test("gedanke -> gedank", function() {deepEqual( Stem("gedanke"), "gedank");});
test("gedanken -> gedank", function() {deepEqual( Stem("gedanken"), "gedank");});
test("gedankenaustausch -> gedankenaustausch", function() {deepEqual( Stem("gedankenaustausch"), "gedankenaustausch");});
test("gedankenform -> gedankenform", function() {deepEqual( Stem("gedankenform"), "gedankenform");});
test("gedankengang -> gedankengang", function() {deepEqual( Stem("gedankengang"), "gedankengang");});
test("gedankenlos -> gedankenlos", function() {deepEqual( Stem("gedankenlos"), "gedankenlos");});
test("gedankenlose -> gedankenlos", function() {deepEqual( Stem("gedankenlose"), "gedankenlos");});
test("gedankenlosen -> gedankenlos", function() {deepEqual( Stem("gedankenlosen"), "gedankenlos");});
test("gedankenlosigkeit -> gedankenlos", function() {deepEqual( Stem("gedankenlosigkeit"), "gedankenlos");});
test("gedankenplanes -> gedankenplan", function() {deepEqual( Stem("gedankenplanes"), "gedankenplan");});
test("gedankenreichen -> gedankenreich", function() {deepEqual( Stem("gedankenreichen"), "gedankenreich");});
test("gedankenreihen -> gedankenreih", function() {deepEqual( Stem("gedankenreihen"), "gedankenreih");});
test("gedankens -> gedank", function() {deepEqual( Stem("gedankens"), "gedank");});
test("gedankenspäne -> gedankenspan", function() {deepEqual( Stem("gedankenspäne"), "gedankenspan");});
test("gedankenspielen -> gedankenspiel", function() {deepEqual( Stem("gedankenspielen"), "gedankenspiel");});
test("gedankensprung -> gedankenspr", function() {deepEqual( Stem("gedankensprung"), "gedankenspr");});
test("gedeckt -> gedeckt", function() {deepEqual( Stem("gedeckt"), "gedeckt");});
test("gedeckten -> gedeckt", function() {deepEqual( Stem("gedeckten"), "gedeckt");});
test("gedehnt -> gedehnt", function() {deepEqual( Stem("gedehnt"), "gedehnt");});
test("gedeihen -> gedeih", function() {deepEqual( Stem("gedeihen"), "gedeih");});
test("gedeihens -> gedeih", function() {deepEqual( Stem("gedeihens"), "gedeih");});
test("gedeihliche -> gedeih", function() {deepEqual( Stem("gedeihliche"), "gedeih");});
test("gedeihlichste -> gedeih", function() {deepEqual( Stem("gedeihlichste"), "gedeih");});
test("gedeiht -> gedeiht", function() {deepEqual( Stem("gedeiht"), "gedeiht");});
test("gedemütigt -> gedemutigt", function() {deepEqual( Stem("gedemütigt"), "gedemutigt");});
test("gedenk -> gedenk", function() {deepEqual( Stem("gedenk"), "gedenk");});
test("gedenke -> gedenk", function() {deepEqual( Stem("gedenke"), "gedenk");});
test("gedenken -> gedenk", function() {deepEqual( Stem("gedenken"), "gedenk");});
test("gedenket -> gedenket", function() {deepEqual( Stem("gedenket"), "gedenket");});
test("gedenkfeiern -> gedenkfei", function() {deepEqual( Stem("gedenkfeiern"), "gedenkfei");});
test("gedenkmedaille -> gedenkmedaill", function() {deepEqual( Stem("gedenkmedaille"), "gedenkmedaill");});
test("gedenkst -> gedenk", function() {deepEqual( Stem("gedenkst"), "gedenk");});
test("gedenkt -> gedenkt", function() {deepEqual( Stem("gedenkt"), "gedenkt");});
test("gedenktag -> gedenktag", function() {deepEqual( Stem("gedenktag"), "gedenktag");});
test("gedicht -> gedicht", function() {deepEqual( Stem("gedicht"), "gedicht");});
test("gedichten -> gedicht", function() {deepEqual( Stem("gedichten"), "gedicht");});
test("gediegenes -> gedieg", function() {deepEqual( Stem("gediegenes"), "gedieg");});
test("gediegne -> gediegn", function() {deepEqual( Stem("gediegne"), "gediegn");});
test("gedieh -> gedieh", function() {deepEqual( Stem("gedieh"), "gedieh");});
test("gediehen -> gedieh", function() {deepEqual( Stem("gediehen"), "gedieh");});
test("gedient -> gedient", function() {deepEqual( Stem("gedient"), "gedient");});
test("gediente -> gedient", function() {deepEqual( Stem("gediente"), "gedient");});
test("gedonnerkracht -> gedonnerkracht", function() {deepEqual( Stem("gedonnerkracht"), "gedonnerkracht");});
test("gedörrt -> gedorrt", function() {deepEqual( Stem("gedörrt"), "gedorrt");});
test("gedörrte -> gedorrt", function() {deepEqual( Stem("gedörrte"), "gedorrt");});
test("gedörrten -> gedorrt", function() {deepEqual( Stem("gedörrten"), "gedorrt");});
test("gedränge -> gedrang", function() {deepEqual( Stem("gedränge"), "gedrang");});
test("gedrängt -> gedrangt", function() {deepEqual( Stem("gedrängt"), "gedrangt");});
test("gedreht -> gedreht", function() {deepEqual( Stem("gedreht"), "gedreht");});
test("gedrehter -> gedreht", function() {deepEqual( Stem("gedrehter"), "gedreht");});
test("gedruckt -> gedruckt", function() {deepEqual( Stem("gedruckt"), "gedruckt");});
test("gedrückt -> gedruckt", function() {deepEqual( Stem("gedrückt"), "gedruckt");});
test("gedruckten -> gedruckt", function() {deepEqual( Stem("gedruckten"), "gedruckt");});
test("gedrucktes -> gedruckt", function() {deepEqual( Stem("gedrucktes"), "gedruckt");});
test("gedrücktes -> gedruckt", function() {deepEqual( Stem("gedrücktes"), "gedruckt");});
test("gedrücktheit -> gedruckt", function() {deepEqual( Stem("gedrücktheit"), "gedruckt");});
test("geduld -> geduld", function() {deepEqual( Stem("geduld"), "geduld");});
test("geduldet -> geduldet", function() {deepEqual( Stem("geduldet"), "geduldet");});
test("geduldig -> geduld", function() {deepEqual( Stem("geduldig"), "geduld");});
test("geduldigen -> geduld", function() {deepEqual( Stem("geduldigen"), "geduld");});
test("geduldspiel -> geduldspiel", function() {deepEqual( Stem("geduldspiel"), "geduldspiel");});
test("geduscht -> geduscht", function() {deepEqual( Stem("geduscht"), "geduscht");});
test("geehrt -> geehrt", function() {deepEqual( Stem("geehrt"), "geehrt");});
test("geehrtam -> geehrtam", function() {deepEqual( Stem("geehrtam"), "geehrtam");});
test("geehrte -> geehrt", function() {deepEqual( Stem("geehrte"), "geehrt");});
test("geehrten -> geehrt", function() {deepEqual( Stem("geehrten"), "geehrt");});
test("geehrter -> geehrt", function() {deepEqual( Stem("geehrter"), "geehrt");});
test("geeignet -> geeignet", function() {deepEqual( Stem("geeignet"), "geeignet");});
test("geeigneten -> geeignet", function() {deepEqual( Stem("geeigneten"), "geeignet");});
test("geeigneter -> geeignet", function() {deepEqual( Stem("geeigneter"), "geeignet");});
test("geeilt -> geeilt", function() {deepEqual( Stem("geeilt"), "geeilt");});
test("geeinten -> geeint", function() {deepEqual( Stem("geeinten"), "geeint");});
test("geendet -> geendet", function() {deepEqual( Stem("geendet"), "geendet");});
test("geendigt -> geendigt", function() {deepEqual( Stem("geendigt"), "geendigt");});
test("geerbt -> geerbt", function() {deepEqual( Stem("geerbt"), "geerbt");});
test("geerntet -> geerntet", function() {deepEqual( Stem("geerntet"), "geerntet");});
test("gefahr -> gefahr", function() {deepEqual( Stem("gefahr"), "gefahr");});
test("gefährde -> gefahrd", function() {deepEqual( Stem("gefährde"), "gefahrd");});
test("gefährdet -> gefahrdet", function() {deepEqual( Stem("gefährdet"), "gefahrdet");});
test("gefährdung -> gefahrd", function() {deepEqual( Stem("gefährdung"), "gefahrd");});
test("gefahren -> gefahr", function() {deepEqual( Stem("gefahren"), "gefahr");});
test("gefährlich -> gefahr", function() {deepEqual( Stem("gefährlich"), "gefahr");});
test("gefährliche -> gefahr", function() {deepEqual( Stem("gefährliche"), "gefahr");});
test("gefährlichen -> gefahr", function() {deepEqual( Stem("gefährlichen"), "gefahr");});
test("gefährlicher -> gefahr", function() {deepEqual( Stem("gefährlicher"), "gefahr");});
test("gefährliches -> gefahr", function() {deepEqual( Stem("gefährliches"), "gefahr");});
test("gefährlichkeit -> gefahr", function() {deepEqual( Stem("gefährlichkeit"), "gefahr");});
test("gefahrlos -> gefahrlos", function() {deepEqual( Stem("gefahrlos"), "gefahrlos");});
test("gefährt -> gefahrt", function() {deepEqual( Stem("gefährt"), "gefahrt");});
test("gefährte -> gefahrt", function() {deepEqual( Stem("gefährte"), "gefahrt");});
test("gefährten -> gefahrt", function() {deepEqual( Stem("gefährten"), "gefahrt");});
test("gefährtin -> gefahrtin", function() {deepEqual( Stem("gefährtin"), "gefahrtin");});
test("gefallen -> gefall", function() {deepEqual( Stem("gefallen"), "gefall");});
test("gefällig -> gefall", function() {deepEqual( Stem("gefällig"), "gefall");});
test("gefälligkeit -> gefall", function() {deepEqual( Stem("gefälligkeit"), "gefall");});
test("gefälligst -> gefall", function() {deepEqual( Stem("gefälligst"), "gefall");});
test("gefällt -> gefallt", function() {deepEqual( Stem("gefällt"), "gefallt");});
test("gefälschte -> gefalscht", function() {deepEqual( Stem("gefälschte"), "gefalscht");});
test("gefälseht -> gefalseht", function() {deepEqual( Stem("gefälseht"), "gefalseht");});
test("gefaltet -> gefaltet", function() {deepEqual( Stem("gefaltet"), "gefaltet");});
test("gefalteten -> gefaltet", function() {deepEqual( Stem("gefalteten"), "gefaltet");});
test("gefangen -> gefang", function() {deepEqual( Stem("gefangen"), "gefang");});
test("gefangene -> gefang", function() {deepEqual( Stem("gefangene"), "gefang");});
test("gefangenen -> gefang", function() {deepEqual( Stem("gefangenen"), "gefang");});
test("gefangener -> gefang", function() {deepEqual( Stem("gefangener"), "gefang");});
test("gefangennahme -> gefangennahm", function() {deepEqual( Stem("gefangennahme"), "gefangennahm");});
test("gefangennehmung -> gefangennehm", function() {deepEqual( Stem("gefangennehmung"), "gefangennehm");});
test("gefangenschaft -> gefangenschaft", function() {deepEqual( Stem("gefangenschaft"), "gefangenschaft");});
test("gefangenschaften -> gefangenschaft", function() {deepEqual( Stem("gefangenschaften"), "gefangenschaft");});
test("gefängnis -> gefangnis", function() {deepEqual( Stem("gefängnis"), "gefangnis");});
test("gefängnisses -> gefangnis", function() {deepEqual( Stem("gefängnisses"), "gefangnis");});
test("gefärbt -> gefarbt", function() {deepEqual( Stem("gefärbt"), "gefarbt");});
test("gefärbte -> gefarbt", function() {deepEqual( Stem("gefärbte"), "gefarbt");});
test("gefärbten -> gefarbt", function() {deepEqual( Stem("gefärbten"), "gefarbt");});
test("gefäss -> gefass", function() {deepEqual( Stem("gefäss"), "gefass");});
test("gefäß -> gefass", function() {deepEqual( Stem("gefäß"), "gefass");});
test("gefässe -> gefass", function() {deepEqual( Stem("gefässe"), "gefass");});
test("gefäße -> gefass", function() {deepEqual( Stem("gefäße"), "gefass");});
test("gefässen -> gefass", function() {deepEqual( Stem("gefässen"), "gefass");});
test("gefäßen -> gefass", function() {deepEqual( Stem("gefäßen"), "gefass");});
test("gefasst -> gefasst", function() {deepEqual( Stem("gefasst"), "gefasst");});
test("gefaßt -> gefasst", function() {deepEqual( Stem("gefaßt"), "gefasst");});
test("gefasste -> gefasst", function() {deepEqual( Stem("gefasste"), "gefasst");});
test("gefassten -> gefasst", function() {deepEqual( Stem("gefassten"), "gefasst");});
test("gefastet -> gefastet", function() {deepEqual( Stem("gefastet"), "gefastet");});
test("gefecht -> gefecht", function() {deepEqual( Stem("gefecht"), "gefecht");});
test("gefechtlärmens -> gefechtlarm", function() {deepEqual( Stem("gefechtlärmens"), "gefechtlarm");});
test("gefegt -> gefegt", function() {deepEqual( Stem("gefegt"), "gefegt");});
test("gefehlt -> gefehlt", function() {deepEqual( Stem("gefehlt"), "gefehlt");});
test("gefeiert -> gefeiert", function() {deepEqual( Stem("gefeiert"), "gefeiert");});
test("gefeierte -> gefeiert", function() {deepEqual( Stem("gefeierte"), "gefeiert");});
test("gefeit -> gefeit", function() {deepEqual( Stem("gefeit"), "gefeit");});
test("gefertigt -> gefertigt", function() {deepEqual( Stem("gefertigt"), "gefertigt");});
test("gefesselt -> gefesselt", function() {deepEqual( Stem("gefesselt"), "gefesselt");});
test("gefiel -> gefiel", function() {deepEqual( Stem("gefiel"), "gefiel");});
test("gefilde -> gefild", function() {deepEqual( Stem("gefilde"), "gefild");});
test("gefilmt -> gefilmt", function() {deepEqual( Stem("gefilmt"), "gefilmt");});
test("gefilzt -> gefilzt", function() {deepEqual( Stem("gefilzt"), "gefilzt");});
test("geflammten -> geflammt", function() {deepEqual( Stem("geflammten"), "geflammt");});
test("geflecht -> geflecht", function() {deepEqual( Stem("geflecht"), "geflecht");});
test("geflochten -> geflocht", function() {deepEqual( Stem("geflochten"), "geflocht");});
test("geflogen -> geflog", function() {deepEqual( Stem("geflogen"), "geflog");});
test("geflohen -> gefloh", function() {deepEqual( Stem("geflohen"), "gefloh");});
test("geflüchtet -> gefluchtet", function() {deepEqual( Stem("geflüchtet"), "gefluchtet");});
test("geflügelte -> geflugelt", function() {deepEqual( Stem("geflügelte"), "geflugelt");});
test("geflügelten -> geflugelt", function() {deepEqual( Stem("geflügelten"), "geflugelt");});
test("gefolge -> gefolg", function() {deepEqual( Stem("gefolge"), "gefolg");});
test("gefolgt -> gefolgt", function() {deepEqual( Stem("gefolgt"), "gefolgt");});
test("gefordert -> gefordert", function() {deepEqual( Stem("gefordert"), "gefordert");});
test("gefördert -> gefordert", function() {deepEqual( Stem("gefördert"), "gefordert");});
test("geformt -> geformt", function() {deepEqual( Stem("geformt"), "geformt");});
test("geformte -> geformt", function() {deepEqual( Stem("geformte"), "geformt");});
test("geformten -> geformt", function() {deepEqual( Stem("geformten"), "geformt");});
test("geformtes -> geformt", function() {deepEqual( Stem("geformtes"), "geformt");});
test("gefragt -> gefragt", function() {deepEqual( Stem("gefragt"), "gefragt");});
test("gefressen -> gefress", function() {deepEqual( Stem("gefressen"), "gefress");});
test("gefrorener -> gefror", function() {deepEqual( Stem("gefrorener"), "gefror");});
test("gefrühstückt -> gefruhstuckt", function() {deepEqual( Stem("gefrühstückt"), "gefruhstuckt");});
test("gefühl -> gefuhl", function() {deepEqual( Stem("gefühl"), "gefuhl");});
test("gefühle -> gefuhl", function() {deepEqual( Stem("gefühle"), "gefuhl");});
test("gefühlen -> gefuhl", function() {deepEqual( Stem("gefühlen"), "gefuhl");});
test("gefühllos -> gefuhllos", function() {deepEqual( Stem("gefühllos"), "gefuhllos");});
test("gefühllosigkeit -> gefuhllos", function() {deepEqual( Stem("gefühllosigkeit"), "gefuhllos");});
test("gefühls -> gefuhl", function() {deepEqual( Stem("gefühls"), "gefuhl");});
test("gefühlt -> gefuhlt", function() {deepEqual( Stem("gefühlt"), "gefuhlt");});
test("gefühlvoller -> gefuhlvoll", function() {deepEqual( Stem("gefühlvoller"), "gefuhlvoll");});
test("geführet -> gefuhret", function() {deepEqual( Stem("geführet"), "gefuhret");});
test("geführt -> gefuhrt", function() {deepEqual( Stem("geführt"), "gefuhrt");});
test("gefüllt -> gefullt", function() {deepEqual( Stem("gefüllt"), "gefullt");});
test("gefüllte -> gefullt", function() {deepEqual( Stem("gefüllte"), "gefullt");});
test("gefunden -> gefund", function() {deepEqual( Stem("gefunden"), "gefund");});
test("gefundenen -> gefund", function() {deepEqual( Stem("gefundenen"), "gefund");});
test("gefundenes -> gefund", function() {deepEqual( Stem("gefundenes"), "gefund");});
test("gefurchte -> gefurcht", function() {deepEqual( Stem("gefurchte"), "gefurcht");});
test("gefurchten -> gefurcht", function() {deepEqual( Stem("gefurchten"), "gefurcht");});
test("gefürchtet -> gefurchtet", function() {deepEqual( Stem("gefürchtet"), "gefurchtet");});
test("gefürchtete -> gefurchtet", function() {deepEqual( Stem("gefürchtete"), "gefurchtet");});
test("gefüttert -> gefuttert", function() {deepEqual( Stem("gefüttert"), "gefuttert");});
test("gegangen -> gegang", function() {deepEqual( Stem("gegangen"), "gegang");});
test("gegangenen -> gegang", function() {deepEqual( Stem("gegangenen"), "gegang");});
test("gegeben -> gegeb", function() {deepEqual( Stem("gegeben"), "gegeb");});
test("gegebene -> gegeb", function() {deepEqual( Stem("gegebene"), "gegeb");});
test("gegebenen -> gegeb", function() {deepEqual( Stem("gegebenen"), "gegeb");});
test("gegebenheiten -> gegeb", function() {deepEqual( Stem("gegebenheiten"), "gegeb");});
test("gegen -> geg", function() {deepEqual( Stem("gegen"), "geg");});
test("gegenargument -> gegenargument", function() {deepEqual( Stem("gegenargument"), "gegenargument");});
test("gegenbild -> gegenbild", function() {deepEqual( Stem("gegenbild"), "gegenbild");});
test("gegend -> gegend", function() {deepEqual( Stem("gegend"), "gegend");});
test("gegenden -> gegend", function() {deepEqual( Stem("gegenden"), "gegend");});
test("gegeneinander -> gegeneinand", function() {deepEqual( Stem("gegeneinander"), "gegeneinand");});
test("gegenfinanzierung -> gegenfinanzier", function() {deepEqual( Stem("gegenfinanzierung"), "gegenfinanzier");});
test("gegengewichts -> gegengewicht", function() {deepEqual( Stem("gegengewichts"), "gegengewicht");});
test("gegengründe -> gegengrund", function() {deepEqual( Stem("gegengründe"), "gegengrund");});
test("gegenliebe -> gegenlieb", function() {deepEqual( Stem("gegenliebe"), "gegenlieb");});
test("gegensatz -> gegensatz", function() {deepEqual( Stem("gegensatz"), "gegensatz");});
test("gegensatze -> gegensatz", function() {deepEqual( Stem("gegensatze"), "gegensatz");});
test("gegensätze -> gegensatz", function() {deepEqual( Stem("gegensätze"), "gegensatz");});
test("gegensätzen -> gegensatz", function() {deepEqual( Stem("gegensätzen"), "gegensatz");});
test("gegenseitig -> gegenseit", function() {deepEqual( Stem("gegenseitig"), "gegenseit");});
test("gegenseitige -> gegenseit", function() {deepEqual( Stem("gegenseitige"), "gegenseit");});
test("gegenseitigkeit -> gegenseit", function() {deepEqual( Stem("gegenseitigkeit"), "gegenseit");});
test("gegenstand -> gegenstand", function() {deepEqual( Stem("gegenstand"), "gegenstand");});
test("gegenstande -> gegenstand", function() {deepEqual( Stem("gegenstande"), "gegenstand");});
test("gegenstände -> gegenstand", function() {deepEqual( Stem("gegenstände"), "gegenstand");});
test("gegenständen -> gegenstand", function() {deepEqual( Stem("gegenständen"), "gegenstand");});
test("gegenstandes -> gegenstand", function() {deepEqual( Stem("gegenstandes"), "gegenstand");});
test("gegenteil -> gegenteil", function() {deepEqual( Stem("gegenteil"), "gegenteil");});
test("gegenüber -> gegenub", function() {deepEqual( Stem("gegenüber"), "gegenub");});
test("gegenüberliegende -> gegenuberlieg", function() {deepEqual( Stem("gegenüberliegende"), "gegenuberlieg");});
test("gegenüberliegenden -> gegenuberlieg", function() {deepEqual( Stem("gegenüberliegenden"), "gegenuberlieg");});
test("gegenüberstanden -> gegenuberstand", function() {deepEqual( Stem("gegenüberstanden"), "gegenuberstand");});
test("gegenüberstehende -> gegenubersteh", function() {deepEqual( Stem("gegenüberstehende"), "gegenubersteh");});
test("gegenwart -> gegenwart", function() {deepEqual( Stem("gegenwart"), "gegenwart");});
test("gegenwärtig -> gegenwart", function() {deepEqual( Stem("gegenwärtig"), "gegenwart");});
test("gegenwärtige -> gegenwart", function() {deepEqual( Stem("gegenwärtige"), "gegenwart");});
test("gegenwärtigem -> gegenwart", function() {deepEqual( Stem("gegenwärtigem"), "gegenwart");});
test("gegenwärtigen -> gegenwart", function() {deepEqual( Stem("gegenwärtigen"), "gegenwart");});
test("gegenwärtiger -> gegenwart", function() {deepEqual( Stem("gegenwärtiger"), "gegenwart");});
test("gegenwärtigeren -> gegenwart", function() {deepEqual( Stem("gegenwärtigeren"), "gegenwart");});
test("gegenwehr -> gegenwehr", function() {deepEqual( Stem("gegenwehr"), "gegenwehr");});
test("gegenwirkung -> gegenwirk", function() {deepEqual( Stem("gegenwirkung"), "gegenwirk");});
test("gegessen -> gegess", function() {deepEqual( Stem("gegessen"), "gegess");});
test("gegewelt -> gegewelt", function() {deepEqual( Stem("gegewelt"), "gegewelt");});
test("geglänzt -> geglanzt", function() {deepEqual( Stem("geglänzt"), "geglanzt");});
test("geglättete -> geglattet", function() {deepEqual( Stem("geglättete"), "geglattet");});
test("geglätteten -> geglattet", function() {deepEqual( Stem("geglätteten"), "geglattet");});
test("geglaubt -> geglaubt", function() {deepEqual( Stem("geglaubt"), "geglaubt");});
test("geglückt -> gegluckt", function() {deepEqual( Stem("geglückt"), "gegluckt");});
test("geglückte -> gegluckt", function() {deepEqual( Stem("geglückte"), "gegluckt");});
test("geglückten -> gegluckt", function() {deepEqual( Stem("geglückten"), "gegluckt");});
test("geglüht -> gegluht", function() {deepEqual( Stem("geglüht"), "gegluht");});
test("gegner -> gegn", function() {deepEqual( Stem("gegner"), "gegn");});
test("gegnerische -> gegner", function() {deepEqual( Stem("gegnerische"), "gegner");});
test("gegnern -> gegn", function() {deepEqual( Stem("gegnern"), "gegn");});
test("gegners -> gegn", function() {deepEqual( Stem("gegners"), "gegn");});
test("gegolten -> gegolt", function() {deepEqual( Stem("gegolten"), "gegolt");});
test("gegönnt -> gegonnt", function() {deepEqual( Stem("gegönnt"), "gegonnt");});
test("gegraben -> gegrab", function() {deepEqual( Stem("gegraben"), "gegrab");});
test("gegröl -> gegrol", function() {deepEqual( Stem("gegröl"), "gegrol");});
test("gegrübelt -> gegrubelt", function() {deepEqual( Stem("gegrübelt"), "gegrubelt");});
test("gegründet -> gegrundet", function() {deepEqual( Stem("gegründet"), "gegrundet");});
test("gegründeten -> gegrundet", function() {deepEqual( Stem("gegründeten"), "gegrundet");});
test("gegrüsst -> gegrusst", function() {deepEqual( Stem("gegrüsst"), "gegrusst");});
test("geguckt -> geguckt", function() {deepEqual( Stem("geguckt"), "geguckt");});
test("geh -> geh", function() {deepEqual( Stem("geh"), "geh");});
test("gehabt -> gehabt", function() {deepEqual( Stem("gehabt"), "gehabt");});
test("gehaftet -> gehaftet", function() {deepEqual( Stem("gehaftet"), "gehaftet");});
test("gehalt -> gehalt", function() {deepEqual( Stem("gehalt"), "gehalt");});
test("gehalten -> gehalt", function() {deepEqual( Stem("gehalten"), "gehalt");});
test("gehaltene -> gehalt", function() {deepEqual( Stem("gehaltene"), "gehalt");});
test("gehaltenes -> gehalt", function() {deepEqual( Stem("gehaltenes"), "gehalt");});
test("gehaltlosigkeiten -> gehaltlos", function() {deepEqual( Stem("gehaltlosigkeiten"), "gehaltlos");});
test("gehalts -> gehalt", function() {deepEqual( Stem("gehalts"), "gehalt");});
test("gehaltvollste -> gehaltvoll", function() {deepEqual( Stem("gehaltvollste"), "gehaltvoll");});
test("gehandelt -> gehandelt", function() {deepEqual( Stem("gehandelt"), "gehandelt");});
test("gehänge -> gehang", function() {deepEqual( Stem("gehänge"), "gehang");});
test("gehangen -> gehang", function() {deepEqual( Stem("gehangen"), "gehang");});
test("gehängen -> gehang", function() {deepEqual( Stem("gehängen"), "gehang");});
test("gehängt -> gehangt", function() {deepEqual( Stem("gehängt"), "gehangt");});
test("gehängten -> gehangt", function() {deepEqual( Stem("gehängten"), "gehangt");});
test("gehänselt -> gehanselt", function() {deepEqual( Stem("gehänselt"), "gehanselt");});
test("geharrt -> geharrt", function() {deepEqual( Stem("geharrt"), "geharrt");});
test("gehässigkeiten -> gehass", function() {deepEqual( Stem("gehässigkeiten"), "gehass");});
test("gehasst -> gehasst", function() {deepEqual( Stem("gehasst"), "gehasst");});
test("gehaßt -> gehasst", function() {deepEqual( Stem("gehaßt"), "gehasst");});
test("gehassten -> gehasst", function() {deepEqual( Stem("gehassten"), "gehasst");});
test("gehätschelt -> gehatschelt", function() {deepEqual( Stem("gehätschelt"), "gehatschelt");});
test("gehaucht -> gehaucht", function() {deepEqual( Stem("gehaucht"), "gehaucht");});
test("gehauen -> gehau", function() {deepEqual( Stem("gehauen"), "gehau");});
test("gehauenen -> gehau", function() {deepEqual( Stem("gehauenen"), "gehau");});
test("gehäuft -> gehauft", function() {deepEqual( Stem("gehäuft"), "gehauft");});
test("gehäufte -> gehauft", function() {deepEqual( Stem("gehäufte"), "gehauft");});
test("gehäuften -> gehauft", function() {deepEqual( Stem("gehäuften"), "gehauft");});
test("gehaust -> gehaust", function() {deepEqual( Stem("gehaust"), "gehaust");});
test("gehe -> geh", function() {deepEqual( Stem("gehe"), "geh");});
test("geheftet -> geheftet", function() {deepEqual( Stem("geheftet"), "geheftet");});
test("gehefteten -> geheftet", function() {deepEqual( Stem("gehefteten"), "geheftet");});
test("gehege -> geheg", function() {deepEqual( Stem("gehege"), "geheg");});
test("geheiliget -> geheiliget", function() {deepEqual( Stem("geheiliget"), "geheiliget");});
test("geheiligt -> geheiligt", function() {deepEqual( Stem("geheiligt"), "geheiligt");});
test("geheiligte -> geheiligt", function() {deepEqual( Stem("geheiligte"), "geheiligt");});
test("geheilt -> geheilt", function() {deepEqual( Stem("geheilt"), "geheilt");});
test("geheim -> geheim", function() {deepEqual( Stem("geheim"), "geheim");});
test("geheime -> geheim", function() {deepEqual( Stem("geheime"), "geheim");});
test("geheimen -> geheim", function() {deepEqual( Stem("geheimen"), "geheim");});
test("geheimer -> geheim", function() {deepEqual( Stem("geheimer"), "geheim");});
test("geheimes -> geheim", function() {deepEqual( Stem("geheimes"), "geheim");});
test("geheimnis -> geheimnis", function() {deepEqual( Stem("geheimnis"), "geheimnis");});
test("geheimnisse -> geheimnis", function() {deepEqual( Stem("geheimnisse"), "geheimnis");});
test("geheimnissen -> geheimnis", function() {deepEqual( Stem("geheimnissen"), "geheimnis");});
test("geheimnisses -> geheimnis", function() {deepEqual( Stem("geheimnisses"), "geheimnis");});
test("geheimnisvoll -> geheimnisvoll", function() {deepEqual( Stem("geheimnisvoll"), "geheimnisvoll");});
test("geheimnisvolle -> geheimnisvoll", function() {deepEqual( Stem("geheimnisvolle"), "geheimnisvoll");});
test("geheimnisvollen -> geheimnisvoll", function() {deepEqual( Stem("geheimnisvollen"), "geheimnisvoll");});
test("geheimnisvoller -> geheimnisvoll", function() {deepEqual( Stem("geheimnisvoller"), "geheimnisvoll");});
test("geheimnisvolles -> geheimnisvoll", function() {deepEqual( Stem("geheimnisvolles"), "geheimnisvoll");});
test("geheimnisvollste -> geheimnisvoll", function() {deepEqual( Stem("geheimnisvollste"), "geheimnisvoll");});
test("geheimsten -> geheim", function() {deepEqual( Stem("geheimsten"), "geheim");});
test("geheiratet -> geheiratet", function() {deepEqual( Stem("geheiratet"), "geheiratet");});
test("geheissen -> geheiss", function() {deepEqual( Stem("geheissen"), "geheiss");});
test("geheißen -> geheiss", function() {deepEqual( Stem("geheißen"), "geheiss");});
test("geheizt -> geheizt", function() {deepEqual( Stem("geheizt"), "geheizt");});
test("gehemmt -> gehemmt", function() {deepEqual( Stem("gehemmt"), "gehemmt");});
test("gehen -> geh", function() {deepEqual( Stem("gehen"), "geh");});
test("gehend -> gehend", function() {deepEqual( Stem("gehend"), "gehend");});
test("gehenden -> gehend", function() {deepEqual( Stem("gehenden"), "gehend");});
test("gehenkter -> gehenkt", function() {deepEqual( Stem("gehenkter"), "gehenkt");});
test("gehet -> gehet", function() {deepEqual( Stem("gehet"), "gehet");});
test("gehetzt -> gehetzt", function() {deepEqual( Stem("gehetzt"), "gehetzt");});
test("gehetzten -> gehetzt", function() {deepEqual( Stem("gehetzten"), "gehetzt");});
test("geheuer -> geheu", function() {deepEqual( Stem("geheuer"), "geheu");});
test("gehilfe -> gehilf", function() {deepEqual( Stem("gehilfe"), "gehilf");});
test("gehilfenprüfung -> gehilfenpruf", function() {deepEqual( Stem("gehilfenprüfung"), "gehilfenpruf");});
test("gehindert -> gehindert", function() {deepEqual( Stem("gehindert"), "gehindert");});
test("gehirn -> gehirn", function() {deepEqual( Stem("gehirn"), "gehirn");});
test("gehirne -> gehirn", function() {deepEqual( Stem("gehirne"), "gehirn");});
test("gehirns -> gehirn", function() {deepEqual( Stem("gehirns"), "gehirn");});
test("gehn -> gehn", function() {deepEqual( Stem("gehn"), "gehn");});
test("gehoben -> gehob", function() {deepEqual( Stem("gehoben"), "gehob");});
test("gehofft -> gehofft", function() {deepEqual( Stem("gehofft"), "gehofft");});
test("gehoffte -> gehofft", function() {deepEqual( Stem("gehoffte"), "gehofft");});
test("gehöften -> gehoft", function() {deepEqual( Stem("gehöften"), "gehoft");});
test("geholfen -> geholf", function() {deepEqual( Stem("geholfen"), "geholf");});
test("geholt -> geholt", function() {deepEqual( Stem("geholt"), "geholt");});
test("gehölz -> geholz", function() {deepEqual( Stem("gehölz"), "geholz");});
test("gehölze -> geholz", function() {deepEqual( Stem("gehölze"), "geholz");});
test("gehölzes -> geholz", function() {deepEqual( Stem("gehölzes"), "geholz");});
test("gehör -> gehor", function() {deepEqual( Stem("gehör"), "gehor");});
test("gehorchen -> gehorch", function() {deepEqual( Stem("gehorchen"), "gehorch");});
test("gehorchend -> gehorch", function() {deepEqual( Stem("gehorchend"), "gehorch");});
test("gehorchet -> gehorchet", function() {deepEqual( Stem("gehorchet"), "gehorchet");});
test("gehorchst -> gehorch", function() {deepEqual( Stem("gehorchst"), "gehorch");});
test("gehorcht -> gehorcht", function() {deepEqual( Stem("gehorcht"), "gehorcht");});
test("gehorchten -> gehorcht", function() {deepEqual( Stem("gehorchten"), "gehorcht");});
test("gehöre -> gehor", function() {deepEqual( Stem("gehöre"), "gehor");});
test("gehören -> gehor", function() {deepEqual( Stem("gehören"), "gehor");});
test("gehörig -> gehor", function() {deepEqual( Stem("gehörig"), "gehor");});
test("gehörige -> gehor", function() {deepEqual( Stem("gehörige"), "gehor");});
test("gehörigen -> gehor", function() {deepEqual( Stem("gehörigen"), "gehor");});
test("gehöriger -> gehor", function() {deepEqual( Stem("gehöriger"), "gehor");});
test("gehöriges -> gehor", function() {deepEqual( Stem("gehöriges"), "gehor");});
test("gehörnte -> gehornt", function() {deepEqual( Stem("gehörnte"), "gehornt");});
test("gehörs -> gehor", function() {deepEqual( Stem("gehörs"), "gehor");});
test("gehorsam -> gehorsam", function() {deepEqual( Stem("gehorsam"), "gehorsam");});
test("gehörst -> gehorst", function() {deepEqual( Stem("gehörst"), "gehorst");});
test("gehört -> gehort", function() {deepEqual( Stem("gehört"), "gehort");});
test("gehörte -> gehort", function() {deepEqual( Stem("gehörte"), "gehort");});
test("gehörten -> gehort", function() {deepEqual( Stem("gehörten"), "gehort");});
test("gehörtest -> gehort", function() {deepEqual( Stem("gehörtest"), "gehort");});
test("gehrock -> gehrock", function() {deepEqual( Stem("gehrock"), "gehrock");});
test("gehröcken -> gehrock", function() {deepEqual( Stem("gehröcken"), "gehrock");});
test("gehst -> gehst", function() {deepEqual( Stem("gehst"), "gehst");});
test("geht -> geht", function() {deepEqual( Stem("geht"), "geht");});
test("gehüllt -> gehullt", function() {deepEqual( Stem("gehüllt"), "gehullt");});
test("gehuret -> gehuret", function() {deepEqual( Stem("gehuret"), "gehuret");});
test("gehuscht -> gehuscht", function() {deepEqual( Stem("gehuscht"), "gehuscht");});
test("gehütet -> gehutet", function() {deepEqual( Stem("gehütet"), "gehutet");});
test("geige -> geig", function() {deepEqual( Stem("geige"), "geig");});
test("geigelein -> geigelein", function() {deepEqual( Stem("geigelein"), "geigelein");});
test("geigen -> geig", function() {deepEqual( Stem("geigen"), "geig");});
test("geigender -> geigend", function() {deepEqual( Stem("geigender"), "geigend");});
test("geigensumsemann -> geigensumsemann", function() {deepEqual( Stem("geigensumsemann"), "geigensumsemann");});
test("geiger -> geig", function() {deepEqual( Stem("geiger"), "geig");});
test("geigers -> geig", function() {deepEqual( Stem("geigers"), "geig");});
test("geigte -> geigt", function() {deepEqual( Stem("geigte"), "geigt");});
test("geirrt -> geirrt", function() {deepEqual( Stem("geirrt"), "geirrt");});
test("geiss -> geiss", function() {deepEqual( Stem("geiss"), "geiss");});
test("geissel -> geissel", function() {deepEqual( Stem("geissel"), "geissel");});
test("geißel -> geissel", function() {deepEqual( Stem("geißel"), "geissel");});
test("geist -> geist", function() {deepEqual( Stem("geist"), "geist");});
test("geiste -> geist", function() {deepEqual( Stem("geiste"), "geist");});
test("geister -> geist", function() {deepEqual( Stem("geister"), "geist");});
test("geisterblaue -> geisterblau", function() {deepEqual( Stem("geisterblaue"), "geisterblau");});
test("geistergesellschaft -> geistergesellschaft", function() {deepEqual( Stem("geistergesellschaft"), "geistergesellschaft");});
test("geistergrauen -> geistergrau", function() {deepEqual( Stem("geistergrauen"), "geistergrau");});
test("geisterheere -> geisterhe", function() {deepEqual( Stem("geisterheere"), "geisterhe");});
test("geistern -> geist", function() {deepEqual( Stem("geistern"), "geist");});
test("geisterrede -> geisterred", function() {deepEqual( Stem("geisterrede"), "geisterred");});
test("geistersprache -> geistersprach", function() {deepEqual( Stem("geistersprache"), "geistersprach");});
test("geisterwelt -> geisterwelt", function() {deepEqual( Stem("geisterwelt"), "geisterwelt");});
test("geistes -> geist", function() {deepEqual( Stem("geistes"), "geist");});
test("geistesgaben -> geistesgab", function() {deepEqual( Stem("geistesgaben"), "geistesgab");});
test("geistesgegenwart -> geistesgegenwart", function() {deepEqual( Stem("geistesgegenwart"), "geistesgegenwart");});
test("geisteskräfte -> geisteskraft", function() {deepEqual( Stem("geisteskräfte"), "geisteskraft");});
test("geisteskranke -> geisteskrank", function() {deepEqual( Stem("geisteskranke"), "geisteskrank");});
test("geistestalente -> geistestalent", function() {deepEqual( Stem("geistestalente"), "geistestalent");});
test("geistesübung -> geistesub", function() {deepEqual( Stem("geistesübung"), "geistesub");});
test("geistig -> geistig", function() {deepEqual( Stem("geistig"), "geistig");});
test("geistige -> geistig", function() {deepEqual( Stem("geistige"), "geistig");});
test("geistigem -> geistig", function() {deepEqual( Stem("geistigem"), "geistig");});
test("geistigen -> geistig", function() {deepEqual( Stem("geistigen"), "geistig");});
test("geistiger -> geistig", function() {deepEqual( Stem("geistiger"), "geistig");});
test("geistigeren -> geistig", function() {deepEqual( Stem("geistigeren"), "geistig");});
test("geistigeres -> geistig", function() {deepEqual( Stem("geistigeres"), "geistig");});
test("geistiges -> geistig", function() {deepEqual( Stem("geistiges"), "geistig");});
test("geistigkeit -> geistig", function() {deepEqual( Stem("geistigkeit"), "geistig");});
test("geistigste -> geistig", function() {deepEqual( Stem("geistigste"), "geistig");});
test("geistigsten -> geistig", function() {deepEqual( Stem("geistigsten"), "geistig");});
test("geistlich -> geistlich", function() {deepEqual( Stem("geistlich"), "geistlich");});
test("geistliche -> geistlich", function() {deepEqual( Stem("geistliche"), "geistlich");});
test("geistlichen -> geistlich", function() {deepEqual( Stem("geistlichen"), "geistlich");});
test("geistlichkeit -> geistlich", function() {deepEqual( Stem("geistlichkeit"), "geistlich");});
test("geistlose -> geistlos", function() {deepEqual( Stem("geistlose"), "geistlos");});
test("geistreich -> geistreich", function() {deepEqual( Stem("geistreich"), "geistreich");});
test("geistreiches -> geistreich", function() {deepEqual( Stem("geistreiches"), "geistreich");});
test("geistreichste -> geistreich", function() {deepEqual( Stem("geistreichste"), "geistreich");});
test("geiz -> geiz", function() {deepEqual( Stem("geiz"), "geiz");});
test("gejagt -> gejagt", function() {deepEqual( Stem("gejagt"), "gejagt");});
test("gekämmt -> gekammt", function() {deepEqual( Stem("gekämmt"), "gekammt");});
test("gekämpft -> gekampft", function() {deepEqual( Stem("gekämpft"), "gekampft");});
test("gekannt -> gekannt", function() {deepEqual( Stem("gekannt"), "gekannt");});
test("gekauft -> gekauft", function() {deepEqual( Stem("gekauft"), "gekauft");});
test("gekauften -> gekauft", function() {deepEqual( Stem("gekauften"), "gekauft");});
test("gekehrt -> gekehrt", function() {deepEqual( Stem("gekehrt"), "gekehrt");});
test("gekeltert -> gekeltert", function() {deepEqual( Stem("gekeltert"), "gekeltert");});
test("gekerbt -> gekerbt", function() {deepEqual( Stem("gekerbt"), "gekerbt");});
test("gekitzelt -> gekitzelt", function() {deepEqual( Stem("gekitzelt"), "gekitzelt");});
test("gekläff -> geklaff", function() {deepEqual( Stem("gekläff"), "geklaff");});
test("geklagt -> geklagt", function() {deepEqual( Stem("geklagt"), "geklagt");});
test("geklammert -> geklammert", function() {deepEqual( Stem("geklammert"), "geklammert");});
test("geklappert -> geklappert", function() {deepEqual( Stem("geklappert"), "geklappert");});
test("geklaut -> geklaut", function() {deepEqual( Stem("geklaut"), "geklaut");});
test("geklebt -> geklebt", function() {deepEqual( Stem("geklebt"), "geklebt");});
test("geklebten -> geklebt", function() {deepEqual( Stem("geklebten"), "geklebt");});
test("gekleidet -> gekleidet", function() {deepEqual( Stem("gekleidet"), "gekleidet");});
test("gekleideten -> gekleidet", function() {deepEqual( Stem("gekleideten"), "gekleidet");});
test("gekleidetes -> gekleidet", function() {deepEqual( Stem("gekleidetes"), "gekleidet");});
test("geklemmt -> geklemmt", function() {deepEqual( Stem("geklemmt"), "geklemmt");});
test("geklettert -> geklettert", function() {deepEqual( Stem("geklettert"), "geklettert");});
test("gekneift -> gekneift", function() {deepEqual( Stem("gekneift"), "gekneift");});
test("geknurre -> geknurr", function() {deepEqual( Stem("geknurre"), "geknurr");});
test("gekocht -> gekocht", function() {deepEqual( Stem("gekocht"), "gekocht");});
test("gekommen -> gekomm", function() {deepEqual( Stem("gekommen"), "gekomm");});
test("gekonnt -> gekonnt", function() {deepEqual( Stem("gekonnt"), "gekonnt");});
test("geköpft -> gekopft", function() {deepEqual( Stem("geköpft"), "gekopft");});
test("gekostet -> gekostet", function() {deepEqual( Stem("gekostet"), "gekostet");});
test("gekränkt -> gekrankt", function() {deepEqual( Stem("gekränkt"), "gekrankt");});
test("gekräuselte -> gekrauselt", function() {deepEqual( Stem("gekräuselte"), "gekrauselt");});
test("gekreisst -> gekreisst", function() {deepEqual( Stem("gekreisst"), "gekreisst");});
test("gekreißt -> gekreisst", function() {deepEqual( Stem("gekreißt"), "gekreisst");});
test("gekreuzigt -> gekreuzigt", function() {deepEqual( Stem("gekreuzigt"), "gekreuzigt");});
test("gekreuzt -> gekreuzt", function() {deepEqual( Stem("gekreuzt"), "gekreuzt");});
test("gekreuzten -> gekreuzt", function() {deepEqual( Stem("gekreuzten"), "gekreuzt");});
test("gekriegt -> gekriegt", function() {deepEqual( Stem("gekriegt"), "gekriegt");});
test("gekrönt -> gekront", function() {deepEqual( Stem("gekrönt"), "gekront");});
test("gekrönten -> gekront", function() {deepEqual( Stem("gekrönten"), "gekront");});
test("gekühlt -> gekuhlt", function() {deepEqual( Stem("gekühlt"), "gekuhlt");});
test("gelächelt -> gelachelt", function() {deepEqual( Stem("gelächelt"), "gelachelt");});
test("gelacht -> gelacht", function() {deepEqual( Stem("gelacht"), "gelacht");});
test("gelächter -> gelacht", function() {deepEqual( Stem("gelächter"), "gelacht");});
test("gelächters -> gelacht", function() {deepEqual( Stem("gelächters"), "gelacht");});
test("geladen -> gelad", function() {deepEqual( Stem("geladen"), "gelad");});
test("geladenen -> gelad", function() {deepEqual( Stem("geladenen"), "gelad");});
test("gelage -> gelag", function() {deepEqual( Stem("gelage"), "gelag");});
test("gelagen -> gelag", function() {deepEqual( Stem("gelagen"), "gelag");});
test("gelagerten -> gelagert", function() {deepEqual( Stem("gelagerten"), "gelagert");});
test("gelähmte -> gelahmt", function() {deepEqual( Stem("gelähmte"), "gelahmt");});
test("gelähmten -> gelahmt", function() {deepEqual( Stem("gelähmten"), "gelahmt");});
test("gelände -> geland", function() {deepEqual( Stem("gelände"), "geland");});
test("geländer -> geland", function() {deepEqual( Stem("geländer"), "geland");});
test("gelandet -> gelandet", function() {deepEqual( Stem("gelandet"), "gelandet");});
test("gelang -> gelang", function() {deepEqual( Stem("gelang"), "gelang");});
test("gelänge -> gelang", function() {deepEqual( Stem("gelänge"), "gelang");});
test("gelangen -> gelang", function() {deepEqual( Stem("gelangen"), "gelang");});
test("gelangest -> gelang", function() {deepEqual( Stem("gelangest"), "gelang");});
test("gelangt -> gelangt", function() {deepEqual( Stem("gelangt"), "gelangt");});
test("gelangte -> gelangt", function() {deepEqual( Stem("gelangte"), "gelangt");});
test("gelangten -> gelangt", function() {deepEqual( Stem("gelangten"), "gelangt");});
test("gelangung -> gelang", function() {deepEqual( Stem("gelangung"), "gelang");});
test("gelangweilt -> gelangweilt", function() {deepEqual( Stem("gelangweilt"), "gelangweilt");});
test("gelass -> gelass", function() {deepEqual( Stem("gelass"), "gelass");});
test("gelassen -> gelass", function() {deepEqual( Stem("gelassen"), "gelass");});
test("gelassenen -> gelass", function() {deepEqual( Stem("gelassenen"), "gelass");});
test("gelassener -> gelass", function() {deepEqual( Stem("gelassener"), "gelass");});
test("gelassenheit -> gelass", function() {deepEqual( Stem("gelassenheit"), "gelass");});
test("gelaufe -> gelauf", function() {deepEqual( Stem("gelaufe"), "gelauf");});
test("gelaufen -> gelauf", function() {deepEqual( Stem("gelaufen"), "gelauf");});
test("gelaunt -> gelaunt", function() {deepEqual( Stem("gelaunt"), "gelaunt");});
test("gelauscht -> gelauscht", function() {deepEqual( Stem("gelauscht"), "gelauscht");});
test("geläute -> gelaut", function() {deepEqual( Stem("geläute"), "gelaut");});
test("geläutet -> gelautet", function() {deepEqual( Stem("geläutet"), "gelautet");});
test("gelb -> gelb", function() {deepEqual( Stem("gelb"), "gelb");});
test("gelbe -> gelb", function() {deepEqual( Stem("gelbe"), "gelb");});
test("gelben -> gelb", function() {deepEqual( Stem("gelben"), "gelb");});
test("gelber -> gelb", function() {deepEqual( Stem("gelber"), "gelb");});
test("gelbes -> gelb", function() {deepEqual( Stem("gelbes"), "gelb");});
test("gelbleuchtende -> gelbleucht", function() {deepEqual( Stem("gelbleuchtende"), "gelbleucht");});
test("gelblich -> gelblich", function() {deepEqual( Stem("gelblich"), "gelblich");});
test("geld -> geld", function() {deepEqual( Stem("geld"), "geld");});
test("geldabfluss -> geldabfluss", function() {deepEqual( Stem("geldabfluss"), "geldabfluss");});
test("geldaufzählens -> geldaufzahl", function() {deepEqual( Stem("geldaufzählens"), "geldaufzahl");});
test("geldbeutel -> geldbeutel", function() {deepEqual( Stem("geldbeutel"), "geldbeutel");});
test("geldbörse -> geldbors", function() {deepEqual( Stem("geldbörse"), "geldbors");});
test("geldbürgschaft -> geldburgschaft", function() {deepEqual( Stem("geldbürgschaft"), "geldburgschaft");});
test("geldbussen -> geldbuss", function() {deepEqual( Stem("geldbussen"), "geldbuss");});
test("geldchen -> geldch", function() {deepEqual( Stem("geldchen"), "geldch");});
test("gelde -> geld", function() {deepEqual( Stem("gelde"), "geld");});
test("gelder -> geld", function() {deepEqual( Stem("gelder"), "geld");});
test("geldes -> geld", function() {deepEqual( Stem("geldes"), "geld");});
test("geldgier -> geldgi", function() {deepEqual( Stem("geldgier"), "geldgi");});
test("geldklemme -> geldklemm", function() {deepEqual( Stem("geldklemme"), "geldklemm");});
test("geldmachen -> geldmach", function() {deepEqual( Stem("geldmachen"), "geldmach");});
test("geldmännern -> geldmann", function() {deepEqual( Stem("geldmännern"), "geldmann");});
test("geldmittel -> geldmittel", function() {deepEqual( Stem("geldmittel"), "geldmittel");});
test("geldmitteln -> geldmitteln", function() {deepEqual( Stem("geldmitteln"), "geldmitteln");});
test("geldnöten -> geldnot", function() {deepEqual( Stem("geldnöten"), "geldnot");});
test("geldstück -> geldstuck", function() {deepEqual( Stem("geldstück"), "geldstuck");});
test("geldsummen -> geldsumm", function() {deepEqual( Stem("geldsummen"), "geldsumm");});
test("geldtransfer -> geldtransf", function() {deepEqual( Stem("geldtransfer"), "geldtransf");});
test("gelebt -> gelebt", function() {deepEqual( Stem("gelebt"), "gelebt");});
test("geleckten -> geleckt", function() {deepEqual( Stem("geleckten"), "geleckt");});
test("geleert -> geleert", function() {deepEqual( Stem("geleert"), "geleert");});
test("gelees -> gele", function() {deepEqual( Stem("gelees"), "gele");});
test("gelegen -> geleg", function() {deepEqual( Stem("gelegen"), "geleg");});
test("gelegenen -> geleg", function() {deepEqual( Stem("gelegenen"), "geleg");});
test("gelegenheit -> geleg", function() {deepEqual( Stem("gelegenheit"), "geleg");});
test("gelegenheiten -> geleg", function() {deepEqual( Stem("gelegenheiten"), "geleg");});
test("gelegentlich -> gelegent", function() {deepEqual( Stem("gelegentlich"), "gelegent");});
test("gelegentliche -> gelegent", function() {deepEqual( Stem("gelegentliche"), "gelegent");});
test("gelegt -> gelegt", function() {deepEqual( Stem("gelegt"), "gelegt");});
test("gelegtes -> gelegt", function() {deepEqual( Stem("gelegtes"), "gelegt");});
test("gelehnt -> gelehnt", function() {deepEqual( Stem("gelehnt"), "gelehnt");});
test("gelehret -> gelehret", function() {deepEqual( Stem("gelehret"), "gelehret");});
test("gelehrsamkeit -> gelehrsam", function() {deepEqual( Stem("gelehrsamkeit"), "gelehrsam");});
test("gelehrt -> gelehrt", function() {deepEqual( Stem("gelehrt"), "gelehrt");});
test("gelehrte -> gelehrt", function() {deepEqual( Stem("gelehrte"), "gelehrt");});
test("gelehrten -> gelehrt", function() {deepEqual( Stem("gelehrten"), "gelehrt");});
test("gelehrter -> gelehrt", function() {deepEqual( Stem("gelehrter"), "gelehrt");});
test("gelehrteste -> gelehrt", function() {deepEqual( Stem("gelehrteste"), "gelehrt");});
test("geleistet -> geleistet", function() {deepEqual( Stem("geleistet"), "geleistet");});
test("geleit -> geleit", function() {deepEqual( Stem("geleit"), "geleit");});
test("geleitet -> geleitet", function() {deepEqual( Stem("geleitet"), "geleitet");});
test("geleitete -> geleitet", function() {deepEqual( Stem("geleitete"), "geleitet");});
test("gelenkchen -> gelenkch", function() {deepEqual( Stem("gelenkchen"), "gelenkch");});
test("gelenken -> gelenk", function() {deepEqual( Stem("gelenken"), "gelenk");});
test("gelenkige -> gelenk", function() {deepEqual( Stem("gelenkige"), "gelenk");});
test("gelenkt -> gelenkt", function() {deepEqual( Stem("gelenkt"), "gelenkt");});
test("gelernt -> gelernt", function() {deepEqual( Stem("gelernt"), "gelernt");});
test("gelesen -> geles", function() {deepEqual( Stem("gelesen"), "geles");});
test("geleuchtet -> geleuchtet", function() {deepEqual( Stem("geleuchtet"), "geleuchtet");});
test("geleugnet -> geleugnet", function() {deepEqual( Stem("geleugnet"), "geleugnet");});
test("geliebet -> geliebet", function() {deepEqual( Stem("geliebet"), "geliebet");});
test("geliebt -> geliebt", function() {deepEqual( Stem("geliebt"), "geliebt");});
test("geliebte -> geliebt", function() {deepEqual( Stem("geliebte"), "geliebt");});
test("geliebten -> geliebt", function() {deepEqual( Stem("geliebten"), "geliebt");});
test("geliebter -> geliebt", function() {deepEqual( Stem("geliebter"), "geliebt");});
test("geliebtesten -> geliebt", function() {deepEqual( Stem("geliebtesten"), "geliebt");});
test("geliefert -> geliefert", function() {deepEqual( Stem("geliefert"), "geliefert");});
test("geliehen -> gelieh", function() {deepEqual( Stem("geliehen"), "gelieh");});
test("gelinde -> gelind", function() {deepEqual( Stem("gelinde"), "gelind");});
test("gelinden -> gelind", function() {deepEqual( Stem("gelinden"), "gelind");});
test("gelindert -> gelindert", function() {deepEqual( Stem("gelindert"), "gelindert");});
test("gelindes -> gelind", function() {deepEqual( Stem("gelindes"), "gelind");});
test("gelindesten -> gelind", function() {deepEqual( Stem("gelindesten"), "gelind");});
test("gelingen -> geling", function() {deepEqual( Stem("gelingen"), "geling");});
test("gelingens -> geling", function() {deepEqual( Stem("gelingens"), "geling");});
test("gelingt -> gelingt", function() {deepEqual( Stem("gelingt"), "gelingt");});
test("gelitten -> gelitt", function() {deepEqual( Stem("gelitten"), "gelitt");});
test("gellend -> gellend", function() {deepEqual( Stem("gellend"), "gellend");});
test("gellenden -> gellend", function() {deepEqual( Stem("gellenden"), "gellend");});
test("gellte -> gellt", function() {deepEqual( Stem("gellte"), "gellt");});
test("gelobet -> gelobet", function() {deepEqual( Stem("gelobet"), "gelobet");});
test("gelobt -> gelobt", function() {deepEqual( Stem("gelobt"), "gelobt");});
test("gelobte -> gelobt", function() {deepEqual( Stem("gelobte"), "gelobt");});
test("gelockt -> gelockt", function() {deepEqual( Stem("gelockt"), "gelockt");});
test("gelogen -> gelog", function() {deepEqual( Stem("gelogen"), "gelog");});
test("gelöscht -> geloscht", function() {deepEqual( Stem("gelöscht"), "geloscht");});
test("gelöst -> gelost", function() {deepEqual( Stem("gelöst"), "gelost");});
test("gelt -> gelt", function() {deepEqual( Stem("gelt"), "gelt");});
test("gelte -> gelt", function() {deepEqual( Stem("gelte"), "gelt");});
test("gelten -> gelt", function() {deepEqual( Stem("gelten"), "gelt");});
test("geltend -> geltend", function() {deepEqual( Stem("geltend"), "geltend");});
test("geltende -> geltend", function() {deepEqual( Stem("geltende"), "geltend");});
test("geltenden -> geltend", function() {deepEqual( Stem("geltenden"), "geltend");});
test("geltendmachen -> geltendmach", function() {deepEqual( Stem("geltendmachen"), "geltendmach");});
test("geltens -> gelt", function() {deepEqual( Stem("geltens"), "gelt");});
test("gelübde -> gelubd", function() {deepEqual( Stem("gelübde"), "gelubd");});
test("gelübden -> gelubd", function() {deepEqual( Stem("gelübden"), "gelubd");});
test("gelungen -> gelung", function() {deepEqual( Stem("gelungen"), "gelung");});
test("gelungene -> gelung", function() {deepEqual( Stem("gelungene"), "gelung");});
test("gelungenen -> gelung", function() {deepEqual( Stem("gelungenen"), "gelung");});
test("gelüste -> gelust", function() {deepEqual( Stem("gelüste"), "gelust");});
test("gelüsten -> gelust", function() {deepEqual( Stem("gelüsten"), "gelust");});
test("gelüstig -> gelust", function() {deepEqual( Stem("gelüstig"), "gelust");});
test("gelüstigkeit -> gelust", function() {deepEqual( Stem("gelüstigkeit"), "gelust");});
test("gemach -> gemach", function() {deepEqual( Stem("gemach"), "gemach");});
test("gemächer -> gemach", function() {deepEqual( Stem("gemächer"), "gemach");});
test("gemächern -> gemach", function() {deepEqual( Stem("gemächern"), "gemach");});
test("gemächlich -> gemach", function() {deepEqual( Stem("gemächlich"), "gemach");});
test("gemächliches -> gemach", function() {deepEqual( Stem("gemächliches"), "gemach");});
test("gemachs -> gemach", function() {deepEqual( Stem("gemachs"), "gemach");});
test("gemacht -> gemacht", function() {deepEqual( Stem("gemacht"), "gemacht");});
test("gemachten -> gemacht", function() {deepEqual( Stem("gemachten"), "gemacht");});
test("gemachter -> gemacht", function() {deepEqual( Stem("gemachter"), "gemacht");});
test("gemahl -> gemahl", function() {deepEqual( Stem("gemahl"), "gemahl");});
test("gemahle -> gemahl", function() {deepEqual( Stem("gemahle"), "gemahl");});
test("gemahlin -> gemahlin", function() {deepEqual( Stem("gemahlin"), "gemahlin");});
test("gemahnt -> gemahnt", function() {deepEqual( Stem("gemahnt"), "gemahnt");});
test("gemahnte -> gemahnt", function() {deepEqual( Stem("gemahnte"), "gemahnt");});
test("gemähte -> gemaht", function() {deepEqual( Stem("gemähte"), "gemaht");});
test("gemähtes -> gemaht", function() {deepEqual( Stem("gemähtes"), "gemaht");});
test("gemälde -> gemald", function() {deepEqual( Stem("gemälde"), "gemald");});
test("gemalt -> gemalt", function() {deepEqual( Stem("gemalt"), "gemalt");});
test("gemalten -> gemalt", function() {deepEqual( Stem("gemalten"), "gemalt");});
test("gemarterten -> gemartert", function() {deepEqual( Stem("gemarterten"), "gemartert");});
test("gemäss -> gemass", function() {deepEqual( Stem("gemäss"), "gemass");});
test("gemäß -> gemass", function() {deepEqual( Stem("gemäß"), "gemass");});
test("gemässe -> gemass", function() {deepEqual( Stem("gemässe"), "gemass");});
test("gemässes -> gemass", function() {deepEqual( Stem("gemässes"), "gemass");});
test("gemäßes -> gemass", function() {deepEqual( Stem("gemäßes"), "gemass");});
test("gemässigt -> gemassigt", function() {deepEqual( Stem("gemässigt"), "gemassigt");});
test("gemäßigt -> gemassigt", function() {deepEqual( Stem("gemäßigt"), "gemassigt");});
test("gemästet -> gemastet", function() {deepEqual( Stem("gemästet"), "gemastet");});
test("gemästeten -> gemastet", function() {deepEqual( Stem("gemästeten"), "gemastet");});
test("gemäuer -> gemau", function() {deepEqual( Stem("gemäuer"), "gemau");});
test("gemecker -> gemeck", function() {deepEqual( Stem("gemecker"), "gemeck");});
test("gemehret -> gemehret", function() {deepEqual( Stem("gemehret"), "gemehret");});
test("gemein -> gemein", function() {deepEqual( Stem("gemein"), "gemein");});
test("gemeinde -> gemeind", function() {deepEqual( Stem("gemeinde"), "gemeind");});
test("gemeindeammann -> gemeindeammann", function() {deepEqual( Stem("gemeindeammann"), "gemeindeammann");});
test("gemeindedienste -> gemeindedien", function() {deepEqual( Stem("gemeindedienste"), "gemeindedien");});
test("gemeindegliedern -> gemeindeglied", function() {deepEqual( Stem("gemeindegliedern"), "gemeindeglied");});
test("gemeindegutes -> gemeindegut", function() {deepEqual( Stem("gemeindegutes"), "gemeindegut");});
test("gemeinden -> gemeind", function() {deepEqual( Stem("gemeinden"), "gemeind");});
test("gemeindepfarrer -> gemeindepfarr", function() {deepEqual( Stem("gemeindepfarrer"), "gemeindepfarr");});
test("gemeindepräsident -> gemeindeprasident", function() {deepEqual( Stem("gemeindepräsident"), "gemeindeprasident");});
test("gemeindeschreiber -> gemeindeschreib", function() {deepEqual( Stem("gemeindeschreiber"), "gemeindeschreib");});
test("gemeindespritze -> gemeindespritz", function() {deepEqual( Stem("gemeindespritze"), "gemeindespritz");});
test("gemeine -> gemein", function() {deepEqual( Stem("gemeine"), "gemein");});
test("gemeinen -> gemein", function() {deepEqual( Stem("gemeinen"), "gemein");});
test("gemeiner -> gemein", function() {deepEqual( Stem("gemeiner"), "gemein");});
test("gemeingut -> gemeingut", function() {deepEqual( Stem("gemeingut"), "gemeingut");});
test("gemeinheit -> gemein", function() {deepEqual( Stem("gemeinheit"), "gemein");});
test("gemeinhin -> gemeinhin", function() {deepEqual( Stem("gemeinhin"), "gemeinhin");});
test("gemeiniglich -> gemeinig", function() {deepEqual( Stem("gemeiniglich"), "gemeinig");});
test("gemeinnützig -> gemeinnutz", function() {deepEqual( Stem("gemeinnützig"), "gemeinnutz");});
test("gemeinnützige -> gemeinnutz", function() {deepEqual( Stem("gemeinnützige"), "gemeinnutz");});
test("gemeinsam -> gemeinsam", function() {deepEqual( Stem("gemeinsam"), "gemeinsam");});
test("gemeinsame -> gemeinsam", function() {deepEqual( Stem("gemeinsame"), "gemeinsam");});
test("gemeinsamen -> gemeinsam", function() {deepEqual( Stem("gemeinsamen"), "gemeinsam");});
test("gemeinsamkeiten -> gemeinsam", function() {deepEqual( Stem("gemeinsamkeiten"), "gemeinsam");});
test("gemeinschaft -> gemeinschaft", function() {deepEqual( Stem("gemeinschaft"), "gemeinschaft");});
test("gemeinschaften -> gemeinschaft", function() {deepEqual( Stem("gemeinschaften"), "gemeinschaft");});
test("gemeinschaftlich -> gemeinschaft", function() {deepEqual( Stem("gemeinschaftlich"), "gemeinschaft");});
test("gemeinschaftliche -> gemeinschaft", function() {deepEqual( Stem("gemeinschaftliche"), "gemeinschaft");});
test("gemeinschaftlichen -> gemeinschaft", function() {deepEqual( Stem("gemeinschaftlichen"), "gemeinschaft");});
test("gemeinschaftliches -> gemeinschaft", function() {deepEqual( Stem("gemeinschaftliches"), "gemeinschaft");});
test("gemeinschaftsbadezimmern -> gemeinschaftsbadezimm", function() {deepEqual( Stem("gemeinschaftsbadezimmern"), "gemeinschaftsbadezimm");});
test("gemeinste -> gemein", function() {deepEqual( Stem("gemeinste"), "gemein");});
test("gemeinsten -> gemein", function() {deepEqual( Stem("gemeinsten"), "gemein");});
test("gemeint -> gemeint", function() {deepEqual( Stem("gemeint"), "gemeint");});
test("gemeinte -> gemeint", function() {deepEqual( Stem("gemeinte"), "gemeint");});
test("gemeinwesen -> gemeinwes", function() {deepEqual( Stem("gemeinwesen"), "gemeinwes");});
test("gemeisselt -> gemeisselt", function() {deepEqual( Stem("gemeisselt"), "gemeisselt");});
test("gemeldet -> gemeldet", function() {deepEqual( Stem("gemeldet"), "gemeldet");});
test("gemengt -> gemengt", function() {deepEqual( Stem("gemengt"), "gemengt");});
test("gemerkt -> gemerkt", function() {deepEqual( Stem("gemerkt"), "gemerkt");});
test("gemessene -> gemess", function() {deepEqual( Stem("gemessene"), "gemess");});
test("gemessenen -> gemess", function() {deepEqual( Stem("gemessenen"), "gemess");});
test("gemessener -> gemess", function() {deepEqual( Stem("gemessener"), "gemess");});
test("gemieden -> gemied", function() {deepEqual( Stem("gemieden"), "gemied");});
test("gemiedene -> gemied", function() {deepEqual( Stem("gemiedene"), "gemied");});
test("gemieteten -> gemietet", function() {deepEqual( Stem("gemieteten"), "gemietet");});
test("gemildert -> gemildert", function() {deepEqual( Stem("gemildert"), "gemildert");});
test("gemindert -> gemindert", function() {deepEqual( Stem("gemindert"), "gemindert");});
test("gemisch -> gemisch", function() {deepEqual( Stem("gemisch"), "gemisch");});
test("gemischt -> gemischt", function() {deepEqual( Stem("gemischt"), "gemischt");});
test("gemischten -> gemischt", function() {deepEqual( Stem("gemischten"), "gemischt");});
test("gemischtes -> gemischt", function() {deepEqual( Stem("gemischtes"), "gemischt");});
test("gemordet -> gemordet", function() {deepEqual( Stem("gemordet"), "gemordet");});
test("gemsbart -> gemsbart", function() {deepEqual( Stem("gemsbart"), "gemsbart");});
test("gemsbärte -> gemsbart", function() {deepEqual( Stem("gemsbärte"), "gemsbart");});
test("gemshorn -> gemshorn", function() {deepEqual( Stem("gemshorn"), "gemshorn");});
test("gemüllhaufen -> gemullhauf", function() {deepEqual( Stem("gemüllhaufen"), "gemullhauf");});
test("gemurrt -> gemurrt", function() {deepEqual( Stem("gemurrt"), "gemurrt");});
test("gemüse -> gemus", function() {deepEqual( Stem("gemüse"), "gemus");});
test("gemüsegarten -> gemusegart", function() {deepEqual( Stem("gemüsegarten"), "gemusegart");});
test("gemüsegartens -> gemusegart", function() {deepEqual( Stem("gemüsegartens"), "gemusegart");});
test("gemüseplatz -> gemuseplatz", function() {deepEqual( Stem("gemüseplatz"), "gemuseplatz");});
test("gemusst -> gemusst", function() {deepEqual( Stem("gemusst"), "gemusst");});
test("gemüt -> gemut", function() {deepEqual( Stem("gemüt"), "gemut");});
test("gemüte -> gemut", function() {deepEqual( Stem("gemüte"), "gemut");});
test("gemüter -> gemut", function() {deepEqual( Stem("gemüter"), "gemut");});
test("gemütes -> gemut", function() {deepEqual( Stem("gemütes"), "gemut");});
test("gemütlich -> gemut", function() {deepEqual( Stem("gemütlich"), "gemut");});
test("gemütliche -> gemut", function() {deepEqual( Stem("gemütliche"), "gemut");});
test("gemütlichen -> gemut", function() {deepEqual( Stem("gemütlichen"), "gemut");});
test("gemütlicher -> gemut", function() {deepEqual( Stem("gemütlicher"), "gemut");});
test("gemütlichkeit -> gemut", function() {deepEqual( Stem("gemütlichkeit"), "gemut");});
test("gemüts -> gemut", function() {deepEqual( Stem("gemüts"), "gemut");});
test("gemütsanlage -> gemutsanlag", function() {deepEqual( Stem("gemütsanlage"), "gemutsanlag");});
test("gemütsart -> gemutsart", function() {deepEqual( Stem("gemütsart"), "gemutsart");});
test("gemütsbeschaffenheit -> gemutsbeschaff", function() {deepEqual( Stem("gemütsbeschaffenheit"), "gemutsbeschaff");});
test("gemütskräfte -> gemutskraft", function() {deepEqual( Stem("gemütskräfte"), "gemutskraft");});
test("gemütsverfassung -> gemutsverfass", function() {deepEqual( Stem("gemütsverfassung"), "gemutsverfass");});
test("gemütswesen -> gemutswes", function() {deepEqual( Stem("gemütswesen"), "gemutswes");});
test("gemütvolle -> gemutvoll", function() {deepEqual( Stem("gemütvolle"), "gemutvoll");});
test("gen -> gen", function() {deepEqual( Stem("gen"), "gen");});
test("genagelt -> genagelt", function() {deepEqual( Stem("genagelt"), "genagelt");});
test("genähert -> genahert", function() {deepEqual( Stem("genähert"), "genahert");});
test("genährt -> genahrt", function() {deepEqual( Stem("genährt"), "genahrt");});
test("genannt -> genannt", function() {deepEqual( Stem("genannt"), "genannt");});
test("genannte -> genannt", function() {deepEqual( Stem("genannte"), "genannt");});
test("genanntem -> genannt", function() {deepEqual( Stem("genanntem"), "genannt");});
test("genannten -> genannt", function() {deepEqual( Stem("genannten"), "genannt");});
test("genarrtes -> genarrt", function() {deepEqual( Stem("genarrtes"), "genarrt");});
test("genau -> genau", function() {deepEqual( Stem("genau"), "genau");});
test("genaue -> genau", function() {deepEqual( Stem("genaue"), "genau");});
test("genauen -> genau", function() {deepEqual( Stem("genauen"), "genau");});
test("genauer -> genau", function() {deepEqual( Stem("genauer"), "genau");});
test("genauere -> genau", function() {deepEqual( Stem("genauere"), "genau");});
test("genaueres -> genau", function() {deepEqual( Stem("genaueres"), "genau");});
test("genaues -> genau", function() {deepEqual( Stem("genaues"), "genau");});
test("genaueste -> genau", function() {deepEqual( Stem("genaueste"), "genau");});
test("genauso -> genauso", function() {deepEqual( Stem("genauso"), "genauso");});
test("genausten -> genaust", function() {deepEqual( Stem("genausten"), "genaust");});
test("genehm -> genehm", function() {deepEqual( Stem("genehm"), "genehm");});
test("genehmigt -> genehmigt", function() {deepEqual( Stem("genehmigt"), "genehmigt");});
test("geneigt -> geneigt", function() {deepEqual( Stem("geneigt"), "geneigt");});
test("geneigte -> geneigt", function() {deepEqual( Stem("geneigte"), "geneigt");});
test("geneigtem -> geneigt", function() {deepEqual( Stem("geneigtem"), "geneigt");});
test("geneigter -> geneigt", function() {deepEqual( Stem("geneigter"), "geneigt");});
test("geneigtheit -> geneigt", function() {deepEqual( Stem("geneigtheit"), "geneigt");});
test("genera -> genera", function() {deepEqual( Stem("genera"), "genera");});
test("general -> general", function() {deepEqual( Stem("general"), "general");});
test("generäle -> general", function() {deepEqual( Stem("generäle"), "general");});
test("generalen -> general", function() {deepEqual( Stem("generalen"), "general");});
test("generalsekretär -> generalsekretar", function() {deepEqual( Stem("generalsekretär"), "generalsekretar");});
test("generalstreik -> generalstreik", function() {deepEqual( Stem("generalstreik"), "generalstreik");});
test("generalsynode -> generalsynod", function() {deepEqual( Stem("generalsynode"), "generalsynod");});
test("generation -> generation", function() {deepEqual( Stem("generation"), "generation");});
test("generell -> generell", function() {deepEqual( Stem("generell"), "generell");});
test("generelles -> generell", function() {deepEqual( Stem("generelles"), "generell");});
test("genesen -> genes", function() {deepEqual( Stem("genesen"), "genes");});
test("genesis -> genesis", function() {deepEqual( Stem("genesis"), "genesis");});
test("genesung -> genes", function() {deepEqual( Stem("genesung"), "genes");});
test("genf -> genf", function() {deepEqual( Stem("genf"), "genf");});
test("genfer -> genf", function() {deepEqual( Stem("genfer"), "genf");});
test("genialen -> genial", function() {deepEqual( Stem("genialen"), "genial");});
test("genick -> genick", function() {deepEqual( Stem("genick"), "genick");});
test("genickt -> genickt", function() {deepEqual( Stem("genickt"), "genickt");});
test("genie -> geni", function() {deepEqual( Stem("genie"), "geni");});
test("genien -> geni", function() {deepEqual( Stem("genien"), "geni");});
test("genieren -> geni", function() {deepEqual( Stem("genieren"), "geni");});
test("geniert -> geniert", function() {deepEqual( Stem("geniert"), "geniert");});
test("genies -> geni", function() {deepEqual( Stem("genies"), "geni");});
test("genieschwüngen -> genieschwung", function() {deepEqual( Stem("genieschwüngen"), "genieschwung");});
test("geniessen -> geniess", function() {deepEqual( Stem("geniessen"), "geniess");});
test("genießen -> geniess", function() {deepEqual( Stem("genießen"), "geniess");});
test("geniessest -> geniess", function() {deepEqual( Stem("geniessest"), "geniess");});
test("geniesst -> geniesst", function() {deepEqual( Stem("geniesst"), "geniesst");});
test("genießt -> geniesst", function() {deepEqual( Stem("genießt"), "geniesst");});
test("genitiv -> genitiv", function() {deepEqual( Stem("genitiv"), "genitiv");});
test("genitive -> genitiv", function() {deepEqual( Stem("genitive"), "genitiv");});
test("genius -> genius", function() {deepEqual( Stem("genius"), "genius");});
test("genommen -> genomm", function() {deepEqual( Stem("genommen"), "genomm");});
test("genommnen -> genommn", function() {deepEqual( Stem("genommnen"), "genommn");});
test("genoss -> genoss", function() {deepEqual( Stem("genoss"), "genoss");});
test("genoß -> genoss", function() {deepEqual( Stem("genoß"), "genoss");});
test("genosse -> genoss", function() {deepEqual( Stem("genosse"), "genoss");});
test("genossen -> genoss", function() {deepEqual( Stem("genossen"), "genoss");});
test("genossene -> genoss", function() {deepEqual( Stem("genossene"), "genoss");});
test("genossenen -> genoss", function() {deepEqual( Stem("genossenen"), "genoss");});
test("genossin -> genossin", function() {deepEqual( Stem("genossin"), "genossin");});
test("genötigt -> genotigt", function() {deepEqual( Stem("genötigt"), "genotigt");});
test("gens -> gen", function() {deepEqual( Stem("gens"), "gen");});
test("gentliche -> gentlich", function() {deepEqual( Stem("gentliche"), "gentlich");});
test("genug -> genug", function() {deepEqual( Stem("genug"), "genug");});
test("genüge -> genug", function() {deepEqual( Stem("genüge"), "genug");});
test("genügen -> genug", function() {deepEqual( Stem("genügen"), "genug");});
test("genügend -> genug", function() {deepEqual( Stem("genügend"), "genug");});
test("genügenden -> genug", function() {deepEqual( Stem("genügenden"), "genug");});
test("genügender -> genug", function() {deepEqual( Stem("genügender"), "genug");});
test("genugsam -> genugsam", function() {deepEqual( Stem("genugsam"), "genugsam");});
test("genügsam -> genugsam", function() {deepEqual( Stem("genügsam"), "genugsam");});
test("genugsamem -> genugsam", function() {deepEqual( Stem("genugsamem"), "genugsam");});
test("genugsamer -> genugsam", function() {deepEqual( Stem("genugsamer"), "genugsam");});
test("genügsamkeit -> genugsam", function() {deepEqual( Stem("genügsamkeit"), "genugsam");});
test("genügt -> genugt", function() {deepEqual( Stem("genügt"), "genugt");});
test("genügte -> genugt", function() {deepEqual( Stem("genügte"), "genugt");});
test("genugtuung -> genugtu", function() {deepEqual( Stem("genugtuung"), "genugtu");});
test("genus -> genus", function() {deepEqual( Stem("genus"), "genus");});
test("genuss -> genuss", function() {deepEqual( Stem("genuss"), "genuss");});
test("genuß -> genuss", function() {deepEqual( Stem("genuß"), "genuss");});
test("genussarten -> genussart", function() {deepEqual( Stem("genussarten"), "genussart");});
test("genusse -> genuss", function() {deepEqual( Stem("genusse"), "genuss");});
test("genüsse -> genuss", function() {deepEqual( Stem("genüsse"), "genuss");});
test("genüssen -> genuss", function() {deepEqual( Stem("genüssen"), "genuss");});
test("genusses -> genuss", function() {deepEqual( Stem("genusses"), "genuss");});
test("genussreich -> genussreich", function() {deepEqual( Stem("genussreich"), "genussreich");});
test("genußreich -> genussreich", function() {deepEqual( Stem("genußreich"), "genussreich");});
test("genützt -> genutzt", function() {deepEqual( Stem("genützt"), "genutzt");});
test("geoffenbart -> geoffenbart", function() {deepEqual( Stem("geoffenbart"), "geoffenbart");});
test("geoffenbarte -> geoffenbart", function() {deepEqual( Stem("geoffenbarte"), "geoffenbart");});
test("geoffenbartem -> geoffenbart", function() {deepEqual( Stem("geoffenbartem"), "geoffenbart");});
test("geoffenbarten -> geoffenbart", function() {deepEqual( Stem("geoffenbarten"), "geoffenbart");});
test("geöffnet -> geoffnet", function() {deepEqual( Stem("geöffnet"), "geoffnet");});
test("geöffnete -> geoffnet", function() {deepEqual( Stem("geöffnete"), "geoffnet");});
test("geöffneten -> geoffnet", function() {deepEqual( Stem("geöffneten"), "geoffnet");});
test("geöffnetwerden -> geoffnetwerd", function() {deepEqual( Stem("geöffnetwerden"), "geoffnetwerd");});
test("geographiebuch -> geographiebuch", function() {deepEqual( Stem("geographiebuch"), "geographiebuch");});
test("geographiebuche -> geographiebuch", function() {deepEqual( Stem("geographiebuche"), "geographiebuch");});
test("geographiebuches -> geographiebuch", function() {deepEqual( Stem("geographiebuches"), "geographiebuch");});
test("geohrfeigt -> geohrfeigt", function() {deepEqual( Stem("geohrfeigt"), "geohrfeigt");});
test("geölte -> geolt", function() {deepEqual( Stem("geölte"), "geolt");});
test("geometer -> geomet", function() {deepEqual( Stem("geometer"), "geomet");});
test("geometrie -> geometri", function() {deepEqual( Stem("geometrie"), "geometri");});
test("geometrische -> geometr", function() {deepEqual( Stem("geometrische"), "geometr");});
test("geometrischen -> geometr", function() {deepEqual( Stem("geometrischen"), "geometr");});
test("geopfert -> geopfert", function() {deepEqual( Stem("geopfert"), "geopfert");});
test("geordnet -> geordnet", function() {deepEqual( Stem("geordnet"), "geordnet");});
test("georg -> georg", function() {deepEqual( Stem("georg"), "georg");});
test("gepaart -> gepaart", function() {deepEqual( Stem("gepaart"), "gepaart");});
test("gepäck -> gepack", function() {deepEqual( Stem("gepäck"), "gepack");});
test("gepäckes -> gepack", function() {deepEqual( Stem("gepäckes"), "gepack");});
test("gepackt -> gepackt", function() {deepEqual( Stem("gepackt"), "gepackt");});
test("gepäckwagen -> gepackwag", function() {deepEqual( Stem("gepäckwagen"), "gepackwag");});
test("gepanzerter -> gepanzert", function() {deepEqual( Stem("gepanzerter"), "gepanzert");});
test("gepasst -> gepasst", function() {deepEqual( Stem("gepasst"), "gepasst");});
test("gepaßt -> gepasst", function() {deepEqual( Stem("gepaßt"), "gepasst");});
test("gepeinigt -> gepeinigt", function() {deepEqual( Stem("gepeinigt"), "gepeinigt");});
test("gepeinigter -> gepeinigt", function() {deepEqual( Stem("gepeinigter"), "gepeinigt");});
test("gepeitscht -> gepeitscht", function() {deepEqual( Stem("gepeitscht"), "gepeitscht");});
test("gepfeife -> gepfeif", function() {deepEqual( Stem("gepfeife"), "gepfeif");});
test("gepflanzt -> gepflanzt", function() {deepEqual( Stem("gepflanzt"), "gepflanzt");});
test("gepflanzte -> gepflanzt", function() {deepEqual( Stem("gepflanzte"), "gepflanzt");});
test("gepflasterten -> gepflastert", function() {deepEqual( Stem("gepflasterten"), "gepflastert");});
test("gepflegt -> gepflegt", function() {deepEqual( Stem("gepflegt"), "gepflegt");});
test("gepflegte -> gepflegt", function() {deepEqual( Stem("gepflegte"), "gepflegt");});
test("gepflegter -> gepflegt", function() {deepEqual( Stem("gepflegter"), "gepflegt");});
test("gepflogen -> gepflog", function() {deepEqual( Stem("gepflogen"), "gepflog");});
test("gepflückt -> gepfluckt", function() {deepEqual( Stem("gepflückt"), "gepfluckt");});
test("gepflügt -> gepflugt", function() {deepEqual( Stem("gepflügt"), "gepflugt");});
test("gepfropft -> gepfropft", function() {deepEqual( Stem("gepfropft"), "gepfropft");});
test("geplagt -> geplagt", function() {deepEqual( Stem("geplagt"), "geplagt");});
test("geplante -> geplant", function() {deepEqual( Stem("geplante"), "geplant");});
test("geplanten -> geplant", function() {deepEqual( Stem("geplanten"), "geplant");});
test("geplättet -> geplattet", function() {deepEqual( Stem("geplättet"), "geplattet");});
test("geplauder -> geplaud", function() {deepEqual( Stem("geplauder"), "geplaud");});
test("geplünderten -> geplundert", function() {deepEqual( Stem("geplünderten"), "geplundert");});
test("gepolsterter -> gepolstert", function() {deepEqual( Stem("gepolsterter"), "gepolstert");});
test("geprägt -> gepragt", function() {deepEqual( Stem("geprägt"), "gepragt");});
test("gepränge -> geprang", function() {deepEqual( Stem("gepränge"), "geprang");});
test("gepredigt -> gepredigt", function() {deepEqual( Stem("gepredigt"), "gepredigt");});
test("gepressten -> gepresst", function() {deepEqual( Stem("gepressten"), "gepresst");});
test("gepresster -> gepresst", function() {deepEqual( Stem("gepresster"), "gepresst");});
test("gepriesen -> gepries", function() {deepEqual( Stem("gepriesen"), "gepries");});
test("geprüft -> gepruft", function() {deepEqual( Stem("geprüft"), "gepruft");});
test("geprügelt -> geprugelt", function() {deepEqual( Stem("geprügelt"), "geprugelt");});
test("geprügelten -> geprugelt", function() {deepEqual( Stem("geprügelten"), "geprugelt");});
test("geputzt -> geputzt", function() {deepEqual( Stem("geputzt"), "geputzt");});
test("geputzte -> geputzt", function() {deepEqual( Stem("geputzte"), "geputzt");});
test("geputzter -> geputzt", function() {deepEqual( Stem("geputzter"), "geputzt");});
test("gequält -> gequalt", function() {deepEqual( Stem("gequält"), "gequalt");});
test("gequälten -> gequalt", function() {deepEqual( Stem("gequälten"), "gequalt");});
test("gerächt -> geracht", function() {deepEqual( Stem("gerächt"), "geracht");});
test("gerade -> gerad", function() {deepEqual( Stem("gerade"), "gerad");});
test("geraden -> gerad", function() {deepEqual( Stem("geraden"), "gerad");});
test("gerader -> gerad", function() {deepEqual( Stem("gerader"), "gerad");});
test("geradeso -> geradeso", function() {deepEqual( Stem("geradeso"), "geradeso");});
test("geradewegs -> geradeweg", function() {deepEqual( Stem("geradewegs"), "geradeweg");});
test("geradezu -> geradezu", function() {deepEqual( Stem("geradezu"), "geradezu");});
test("geradheit -> gerad", function() {deepEqual( Stem("geradheit"), "gerad");});
test("geradso -> geradso", function() {deepEqual( Stem("geradso"), "geradso");});
test("gerannt -> gerannt", function() {deepEqual( Stem("gerannt"), "gerannt");});
test("gerassel -> gerassel", function() {deepEqual( Stem("gerassel"), "gerassel");});
test("gerasselt -> gerasselt", function() {deepEqual( Stem("gerasselt"), "gerasselt");});
test("gerast -> gerast", function() {deepEqual( Stem("gerast"), "gerast");});
test("gerastet -> gerastet", function() {deepEqual( Stem("gerastet"), "gerastet");});
test("gerät -> gerat", function() {deepEqual( Stem("gerät"), "gerat");});
test("geraten -> gerat", function() {deepEqual( Stem("geraten"), "gerat");});
test("gerätes -> gerat", function() {deepEqual( Stem("gerätes"), "gerat");});
test("geratewohl -> geratewohl", function() {deepEqual( Stem("geratewohl"), "geratewohl");});
test("gerattere -> geratt", function() {deepEqual( Stem("gerattere"), "geratt");});
test("gerauft -> gerauft", function() {deepEqual( Stem("gerauft"), "gerauft");});
test("geraume -> geraum", function() {deepEqual( Stem("geraume"), "geraum");});
test("geraumer -> geraum", function() {deepEqual( Stem("geraumer"), "geraum");});
test("geräumige -> geraum", function() {deepEqual( Stem("geräumige"), "geraum");});
test("geräumigen -> geraum", function() {deepEqual( Stem("geräumigen"), "geraum");});
test("geräusch -> gerausch", function() {deepEqual( Stem("geräusch"), "gerausch");});
test("geräusches -> gerausch", function() {deepEqual( Stem("geräusches"), "gerausch");});
test("geräuschlosen -> gerauschlos", function() {deepEqual( Stem("geräuschlosen"), "gerauschlos");});
test("geräuschvollen -> gerauschvoll", function() {deepEqual( Stem("geräuschvollen"), "gerauschvoll");});
test("geräuschvollsten -> gerauschvoll", function() {deepEqual( Stem("geräuschvollsten"), "gerauschvoll");});
test("gerdt -> gerdt", function() {deepEqual( Stem("gerdt"), "gerdt");});
test("gerechnet -> gerechnet", function() {deepEqual( Stem("gerechnet"), "gerechnet");});
test("gerecht -> gerecht", function() {deepEqual( Stem("gerecht"), "gerecht");});
test("gerechte -> gerecht", function() {deepEqual( Stem("gerechte"), "gerecht");});
test("gerechten -> gerecht", function() {deepEqual( Stem("gerechten"), "gerecht");});
test("gerechter -> gerecht", function() {deepEqual( Stem("gerechter"), "gerecht");});
test("gerechtfertigt -> gerechtfertigt", function() {deepEqual( Stem("gerechtfertigt"), "gerechtfertigt");});
test("gerechtfertigter -> gerechtfertigt", function() {deepEqual( Stem("gerechtfertigter"), "gerechtfertigt");});
test("gerechtigkeit -> gerecht", function() {deepEqual( Stem("gerechtigkeit"), "gerecht");});
test("gerechtigkeitsformen -> gerechtigkeitsform", function() {deepEqual( Stem("gerechtigkeitsformen"), "gerechtigkeitsform");});
test("gerede -> gered", function() {deepEqual( Stem("gerede"), "gered");});
test("geredet -> geredet", function() {deepEqual( Stem("geredet"), "geredet");});
test("geregnet -> geregnet", function() {deepEqual( Stem("geregnet"), "geregnet");});
test("gereicht -> gereicht", function() {deepEqual( Stem("gereicht"), "gereicht");});
test("gereigte -> gereigt", function() {deepEqual( Stem("gereigte"), "gereigt");});
test("gereimtes -> gereimt", function() {deepEqual( Stem("gereimtes"), "gereimt");});
test("gereinigt -> gereinigt", function() {deepEqual( Stem("gereinigt"), "gereinigt");});
test("gereinigten -> gereinigt", function() {deepEqual( Stem("gereinigten"), "gereinigt");});
test("gereist -> gereist", function() {deepEqual( Stem("gereist"), "gereist");});
test("gereizt -> gereizt", function() {deepEqual( Stem("gereizt"), "gereizt");});
test("gereiztheit -> gereizt", function() {deepEqual( Stem("gereiztheit"), "gereizt");});
test("gerettet -> gerettet", function() {deepEqual( Stem("gerettet"), "gerettet");});
test("gerettete -> gerettet", function() {deepEqual( Stem("gerettete"), "gerettet");});
test("geretteten -> gerettet", function() {deepEqual( Stem("geretteten"), "gerettet");});
test("gereue -> gereu", function() {deepEqual( Stem("gereue"), "gereu");});
test("gereuen -> gereu", function() {deepEqual( Stem("gereuen"), "gereu");});
test("gereuend -> gereu", function() {deepEqual( Stem("gereuend"), "gereu");});
test("gereut -> gereut", function() {deepEqual( Stem("gereut"), "gereut");});
test("gereute -> gereut", function() {deepEqual( Stem("gereute"), "gereut");});
test("gereuungen -> gereu", function() {deepEqual( Stem("gereuungen"), "gereu");});
test("gericht -> gericht", function() {deepEqual( Stem("gericht"), "gericht");});
test("gerichte -> gericht", function() {deepEqual( Stem("gerichte"), "gericht");});
test("gerichten -> gericht", function() {deepEqual( Stem("gerichten"), "gericht");});
test("gerichtes -> gericht", function() {deepEqual( Stem("gerichtes"), "gericht");});
test("gerichtet -> gerichtet", function() {deepEqual( Stem("gerichtet"), "gerichtet");});
test("gerichtete -> gerichtet", function() {deepEqual( Stem("gerichtete"), "gerichtet");});
test("gerichtetes -> gerichtet", function() {deepEqual( Stem("gerichtetes"), "gerichtet");});
test("gerichtlich -> gericht", function() {deepEqual( Stem("gerichtlich"), "gericht");});
test("gerichts -> gericht", function() {deepEqual( Stem("gerichts"), "gericht");});
test("gerichtsbeamten -> gerichtsbeamt", function() {deepEqual( Stem("gerichtsbeamten"), "gerichtsbeamt");});
test("gerichtsbeschluss -> gerichtsbeschluss", function() {deepEqual( Stem("gerichtsbeschluss"), "gerichtsbeschluss");});
test("gerichtsbeschluß -> gerichtsbeschluss", function() {deepEqual( Stem("gerichtsbeschluß"), "gerichtsbeschluss");});
test("gerichtsdiener -> gerichtsdi", function() {deepEqual( Stem("gerichtsdiener"), "gerichtsdi");});
test("gerichtshöfe -> gerichtshof", function() {deepEqual( Stem("gerichtshöfe"), "gerichtshof");});
test("gerichtshöfen -> gerichtshof", function() {deepEqual( Stem("gerichtshöfen"), "gerichtshof");});
test("gerichtskanzleien -> gerichtskanzlei", function() {deepEqual( Stem("gerichtskanzleien"), "gerichtskanzlei");});
test("gerichtsorganisation -> gerichtsorganisation", function() {deepEqual( Stem("gerichtsorganisation"), "gerichtsorganisation");});
test("gerichtsorganismus -> gerichtsorganismus", function() {deepEqual( Stem("gerichtsorganismus"), "gerichtsorganismus");});
test("gerichtssache -> gerichtssach", function() {deepEqual( Stem("gerichtssache"), "gerichtssach");});
test("gerichtsschranken -> gerichtsschrank", function() {deepEqual( Stem("gerichtsschranken"), "gerichtsschrank");});
test("gerichtsschriften -> gerichtsschrift", function() {deepEqual( Stem("gerichtsschriften"), "gerichtsschrift");});
test("gerichtsverhandlung -> gerichtsverhandl", function() {deepEqual( Stem("gerichtsverhandlung"), "gerichtsverhandl");});
test("gerichtswesens -> gerichtswes", function() {deepEqual( Stem("gerichtswesens"), "gerichtswes");});
test("gerichtszimmer -> gerichtszimm", function() {deepEqual( Stem("gerichtszimmer"), "gerichtszimm");});
test("gerieben -> gerieb", function() {deepEqual( Stem("gerieben"), "gerieb");});
test("geriebener -> gerieb", function() {deepEqual( Stem("geriebener"), "gerieb");});
test("geriegelt -> geriegelt", function() {deepEqual( Stem("geriegelt"), "geriegelt");});
test("geriet -> geriet", function() {deepEqual( Stem("geriet"), "geriet");});
test("gerieten -> geriet", function() {deepEqual( Stem("gerieten"), "geriet");});
test("gering -> gering", function() {deepEqual( Stem("gering"), "gering");});
test("geringe -> gering", function() {deepEqual( Stem("geringe"), "gering");});
test("geringem -> gering", function() {deepEqual( Stem("geringem"), "gering");});
test("geringen -> gering", function() {deepEqual( Stem("geringen"), "gering");});
test("geringer -> gering", function() {deepEqual( Stem("geringer"), "gering");});
test("geringere -> gering", function() {deepEqual( Stem("geringere"), "gering");});
test("geringerer -> gering", function() {deepEqual( Stem("geringerer"), "gering");});
test("geringeres -> gering", function() {deepEqual( Stem("geringeres"), "gering");});
test("geringes -> gering", function() {deepEqual( Stem("geringes"), "gering");});
test("geringfügig -> geringfug", function() {deepEqual( Stem("geringfügig"), "geringfug");});
test("geringfügige -> geringfug", function() {deepEqual( Stem("geringfügige"), "geringfug");});
test("geringfügigsten -> geringfug", function() {deepEqual( Stem("geringfügigsten"), "geringfug");});
test("geringgeschätzt -> geringgeschatzt", function() {deepEqual( Stem("geringgeschätzt"), "geringgeschatzt");});
test("geringschätzig -> geringschatz", function() {deepEqual( Stem("geringschätzig"), "geringschatz");});
test("geringschätzung -> geringschatz", function() {deepEqual( Stem("geringschätzung"), "geringschatz");});
test("geringste -> gering", function() {deepEqual( Stem("geringste"), "gering");});
test("geringsten -> gering", function() {deepEqual( Stem("geringsten"), "gering");});
test("gerinnen -> gerinn", function() {deepEqual( Stem("gerinnen"), "gerinn");});
test("gerippe -> geripp", function() {deepEqual( Stem("gerippe"), "geripp");});
test("geripptes -> gerippt", function() {deepEqual( Stem("geripptes"), "gerippt");});
test("gerissen -> geriss", function() {deepEqual( Stem("gerissen"), "geriss");});
test("geritten -> geritt", function() {deepEqual( Stem("geritten"), "geritt");});
test("german -> german", function() {deepEqual( Stem("german"), "german");});
test("germanen -> german", function() {deepEqual( Stem("germanen"), "german");});
test("germanischen -> german", function() {deepEqual( Stem("germanischen"), "german");});
test("gern -> gern", function() {deepEqual( Stem("gern"), "gern");});
test("gerne -> gern", function() {deepEqual( Stem("gerne"), "gern");});
test("gerochen -> geroch", function() {deepEqual( Stem("gerochen"), "geroch");});
test("geröllhalde -> gerollhald", function() {deepEqual( Stem("geröllhalde"), "gerollhald");});
test("geröllhalden -> gerollhald", function() {deepEqual( Stem("geröllhalden"), "gerollhald");});
test("geröllhang -> gerollhang", function() {deepEqual( Stem("geröllhang"), "gerollhang");});
test("geröstete -> gerostet", function() {deepEqual( Stem("geröstete"), "gerostet");});
test("gerösteten -> gerostet", function() {deepEqual( Stem("gerösteten"), "gerostet");});
test("geröstetes -> gerostet", function() {deepEqual( Stem("geröstetes"), "gerostet");});
test("gerötet -> gerotet", function() {deepEqual( Stem("gerötet"), "gerotet");});
test("gerötete -> gerotet", function() {deepEqual( Stem("gerötete"), "gerotet");});
test("geröteter -> gerotet", function() {deepEqual( Stem("geröteter"), "gerotet");});
test("gersom -> gersom", function() {deepEqual( Stem("gersom"), "gersom");});
test("gerson -> gerson", function() {deepEqual( Stem("gerson"), "gerson");});
test("gersons -> gerson", function() {deepEqual( Stem("gersons"), "gerson");});
test("gerste -> gerst", function() {deepEqual( Stem("gerste"), "gerst");});
test("gerstenbrot -> gerstenbrot", function() {deepEqual( Stem("gerstenbrot"), "gerstenbrot");});
test("gerte -> gert", function() {deepEqual( Stem("gerte"), "gert");});
test("geruch -> geruch", function() {deepEqual( Stem("geruch"), "geruch");});
test("gerüche -> geruch", function() {deepEqual( Stem("gerüche"), "geruch");});
test("geruches -> geruch", function() {deepEqual( Stem("geruches"), "geruch");});
test("geruchs -> geruch", function() {deepEqual( Stem("geruchs"), "geruch");});
test("gerücht -> gerucht", function() {deepEqual( Stem("gerücht"), "gerucht");});
test("gerüchte -> gerucht", function() {deepEqual( Stem("gerüchte"), "gerucht");});
test("gerüchteweise -> geruchteweis", function() {deepEqual( Stem("gerüchteweise"), "geruchteweis");});
test("gerüchtweise -> geruchtweis", function() {deepEqual( Stem("gerüchtweise"), "geruchtweis");});
test("gerufen -> geruf", function() {deepEqual( Stem("gerufen"), "geruf");});
test("gerufenwerdens -> gerufenwerd", function() {deepEqual( Stem("gerufenwerdens"), "gerufenwerd");});
test("gerührt -> geruhrt", function() {deepEqual( Stem("gerührt"), "geruhrt");});
test("gerührter -> geruhrt", function() {deepEqual( Stem("gerührter"), "geruhrt");});
test("geruhsamen -> geruhsam", function() {deepEqual( Stem("geruhsamen"), "geruhsam");});
test("geruht -> geruht", function() {deepEqual( Stem("geruht"), "geruht");});
test("gerumpel -> gerumpel", function() {deepEqual( Stem("gerumpel"), "gerumpel");});
test("gerümpel -> gerumpel", function() {deepEqual( Stem("gerümpel"), "gerumpel");});
test("gerümpelfuhre -> gerumpelfuhr", function() {deepEqual( Stem("gerümpelfuhre"), "gerumpelfuhr");});
test("gerüste -> gerust", function() {deepEqual( Stem("gerüste"), "gerust");});
test("gerüstet -> gerustet", function() {deepEqual( Stem("gerüstet"), "gerustet");});
test("gerüsteten -> gerustet", function() {deepEqual( Stem("gerüsteten"), "gerustet");});
test("gerutscht -> gerutscht", function() {deepEqual( Stem("gerutscht"), "gerutscht");});
test("gerüttelt -> geruttelt", function() {deepEqual( Stem("gerüttelt"), "geruttelt");});
test("gerütteltes -> geruttelt", function() {deepEqual( Stem("gerütteltes"), "geruttelt");});
test("gesäet -> gesaet", function() {deepEqual( Stem("gesäet"), "gesaet");});
test("gesagt -> gesagt", function() {deepEqual( Stem("gesagt"), "gesagt");});
test("gesagten -> gesagt", function() {deepEqual( Stem("gesagten"), "gesagt");});
test("gesäht -> gesaht", function() {deepEqual( Stem("gesäht"), "gesaht");});
test("gesalbt -> gesalbt", function() {deepEqual( Stem("gesalbt"), "gesalbt");});
test("gesalbte -> gesalbt", function() {deepEqual( Stem("gesalbte"), "gesalbt");});
test("gesalbten -> gesalbt", function() {deepEqual( Stem("gesalbten"), "gesalbt");});
test("gesalzenem -> gesalz", function() {deepEqual( Stem("gesalzenem"), "gesalz");});
test("gesammelt -> gesammelt", function() {deepEqual( Stem("gesammelt"), "gesammelt");});
test("gesammelte -> gesammelt", function() {deepEqual( Stem("gesammelte"), "gesammelt");});
test("gesammeltes -> gesammelt", function() {deepEqual( Stem("gesammeltes"), "gesammelt");});
test("gesamt -> gesamt", function() {deepEqual( Stem("gesamt"), "gesamt");});
test("gesamtanschauung -> gesamtanschau", function() {deepEqual( Stem("gesamtanschauung"), "gesamtanschau");});
test("gesamte -> gesamt", function() {deepEqual( Stem("gesamte"), "gesamt");});
test("gesamten -> gesamt", function() {deepEqual( Stem("gesamten"), "gesamt");});
test("gesamtheit -> gesamt", function() {deepEqual( Stem("gesamtheit"), "gesamt");});
test("gesamtlage -> gesamtlag", function() {deepEqual( Stem("gesamtlage"), "gesamtlag");});
test("gesamtleistung -> gesamtleist", function() {deepEqual( Stem("gesamtleistung"), "gesamtleist");});
test("gesandt -> gesandt", function() {deepEqual( Stem("gesandt"), "gesandt");});
test("gesandte -> gesandt", function() {deepEqual( Stem("gesandte"), "gesandt");});
test("gesandten -> gesandt", function() {deepEqual( Stem("gesandten"), "gesandt");});
test("gesandtschaft -> gesandtschaft", function() {deepEqual( Stem("gesandtschaft"), "gesandtschaft");});
test("gesang -> gesang", function() {deepEqual( Stem("gesang"), "gesang");});
test("gesänge -> gesang", function() {deepEqual( Stem("gesänge"), "gesang");});
test("gesängen -> gesang", function() {deepEqual( Stem("gesängen"), "gesang");});
test("gesanges -> gesang", function() {deepEqual( Stem("gesanges"), "gesang");});
test("gesangs -> gesang", function() {deepEqual( Stem("gesangs"), "gesang");});
test("gesangsstimmen -> gesangsstimm", function() {deepEqual( Stem("gesangsstimmen"), "gesangsstimm");});
test("gesät -> gesat", function() {deepEqual( Stem("gesät"), "gesat");});
test("gesättigt -> gesattigt", function() {deepEqual( Stem("gesättigt"), "gesattigt");});
test("gesäuberten -> gesaubert", function() {deepEqual( Stem("gesäuberten"), "gesaubert");});
test("gesäugt -> gesaugt", function() {deepEqual( Stem("gesäugt"), "gesaugt");});
test("gesaust -> gesaust", function() {deepEqual( Stem("gesaust"), "gesaust");});
test("geschadet -> geschadet", function() {deepEqual( Stem("geschadet"), "geschadet");});
test("geschaffen -> geschaff", function() {deepEqual( Stem("geschaffen"), "geschaff");});
test("geschaffene -> geschaff", function() {deepEqual( Stem("geschaffene"), "geschaff");});
test("geschaffenen -> geschaff", function() {deepEqual( Stem("geschaffenen"), "geschaff");});
test("geschaffenes -> geschaff", function() {deepEqual( Stem("geschaffenes"), "geschaff");});
test("geschafft -> geschafft", function() {deepEqual( Stem("geschafft"), "geschafft");});
test("geschäft -> geschaft", function() {deepEqual( Stem("geschäft"), "geschaft");});
test("geschäfte -> geschaft", function() {deepEqual( Stem("geschäfte"), "geschaft");});
test("geschäften -> geschaft", function() {deepEqual( Stem("geschäften"), "geschaft");});
test("geschäftes -> geschaft", function() {deepEqual( Stem("geschäftes"), "geschaft");});
test("geschäftig -> geschaft", function() {deepEqual( Stem("geschäftig"), "geschaft");});
test("geschäftige -> geschaft", function() {deepEqual( Stem("geschäftige"), "geschaft");});
test("geschäftigkeit -> geschaft", function() {deepEqual( Stem("geschäftigkeit"), "geschaft");});
test("geschäftliche -> geschaft", function() {deepEqual( Stem("geschäftliche"), "geschaft");});
test("geschäftlichen -> geschaft", function() {deepEqual( Stem("geschäftlichen"), "geschaft");});
test("geschäftsauslagen -> geschaftsauslag", function() {deepEqual( Stem("geschäftsauslagen"), "geschaftsauslag");});
test("geschäftsbuch -> geschaftsbuch", function() {deepEqual( Stem("geschäftsbuch"), "geschaftsbuch");});
test("geschäftsfragen -> geschaftsfrag", function() {deepEqual( Stem("geschäftsfragen"), "geschaftsfrag");});
test("geschäftsfreund -> geschaftsfreund", function() {deepEqual( Stem("geschäftsfreund"), "geschaftsfreund");});
test("geschäftsführung -> geschaftsfuhr", function() {deepEqual( Stem("geschäftsführung"), "geschaftsfuhr");});
test("geschäftsjahren -> geschaftsjahr", function() {deepEqual( Stem("geschäftsjahren"), "geschaftsjahr");});
test("geschäftsleiter -> geschaftsleit", function() {deepEqual( Stem("geschäftsleiter"), "geschaftsleit");});
test("geschäftsleuten -> geschaftsleut", function() {deepEqual( Stem("geschäftsleuten"), "geschaftsleut");});
test("geschäftsmann -> geschaftsmann", function() {deepEqual( Stem("geschäftsmann"), "geschaftsmann");});
test("geschäftsmänner -> geschaftsmann", function() {deepEqual( Stem("geschäftsmänner"), "geschaftsmann");});
test("geschäftsmännern -> geschaftsmann", function() {deepEqual( Stem("geschäftsmännern"), "geschaftsmann");});
test("geschäftsprüfungskommission -> geschaftsprufungskommission", function() {deepEqual( Stem("geschäftsprüfungskommission"), "geschaftsprufungskommission");});
test("geschäftsreise -> geschaftsreis", function() {deepEqual( Stem("geschäftsreise"), "geschaftsreis");});
test("geschäftsschwankung -> geschaftsschwank", function() {deepEqual( Stem("geschäftsschwankung"), "geschaftsschwank");});
test("geschäftsstelle -> geschaftsstell", function() {deepEqual( Stem("geschäftsstelle"), "geschaftsstell");});
test("geschäftsweg -> geschaftsweg", function() {deepEqual( Stem("geschäftsweg"), "geschaftsweg");});
test("geschah -> geschah", function() {deepEqual( Stem("geschah"), "geschah");});
test("geschahen -> geschah", function() {deepEqual( Stem("geschahen"), "geschah");});
test("geschändete -> geschandet", function() {deepEqual( Stem("geschändete"), "geschandet");});
test("geschärft -> gescharft", function() {deepEqual( Stem("geschärft"), "gescharft");});
test("geschärftes -> gescharft", function() {deepEqual( Stem("geschärftes"), "gescharft");});
test("geschätzt -> geschatzt", function() {deepEqual( Stem("geschätzt"), "geschatzt");});
test("geschätzten -> geschatzt", function() {deepEqual( Stem("geschätzten"), "geschatzt");});
test("geschaut -> geschaut", function() {deepEqual( Stem("geschaut"), "geschaut");});
test("geschehe -> gescheh", function() {deepEqual( Stem("geschehe"), "gescheh");});
test("geschehen -> gescheh", function() {deepEqual( Stem("geschehen"), "gescheh");});
test("geschehene -> gescheh", function() {deepEqual( Stem("geschehene"), "gescheh");});
test("geschehenen -> gescheh", function() {deepEqual( Stem("geschehenen"), "gescheh");});
test("geschehnisse -> geschehnis", function() {deepEqual( Stem("geschehnisse"), "geschehnis");});
test("gescheit -> gescheit", function() {deepEqual( Stem("gescheit"), "gescheit");});
test("gescheitert -> gescheitert", function() {deepEqual( Stem("gescheitert"), "gescheitert");});
test("gescheites -> gescheit", function() {deepEqual( Stem("gescheites"), "gescheit");});
test("gescheiteste -> gescheit", function() {deepEqual( Stem("gescheiteste"), "gescheit");});
test("geschenk -> geschenk", function() {deepEqual( Stem("geschenk"), "geschenk");});
test("geschenke -> geschenk", function() {deepEqual( Stem("geschenke"), "geschenk");});
test("geschenken -> geschenk", function() {deepEqual( Stem("geschenken"), "geschenk");});
test("geschenkt -> geschenkt", function() {deepEqual( Stem("geschenkt"), "geschenkt");});
test("gescherzt -> gescherzt", function() {deepEqual( Stem("gescherzt"), "gescherzt");});
test("gescheucht -> gescheucht", function() {deepEqual( Stem("gescheucht"), "gescheucht");});
test("gescheuchten -> gescheucht", function() {deepEqual( Stem("gescheuchten"), "gescheucht");});
test("gescheuerte -> gescheuert", function() {deepEqual( Stem("gescheuerte"), "gescheuert");});
test("geschichtartig -> geschichtart", function() {deepEqual( Stem("geschichtartig"), "geschichtart");});
test("geschichtartigen -> geschichtart", function() {deepEqual( Stem("geschichtartigen"), "geschichtart");});
test("geschichte -> geschicht", function() {deepEqual( Stem("geschichte"), "geschicht");});
test("geschichten -> geschicht", function() {deepEqual( Stem("geschichten"), "geschicht");});
test("geschichtliche -> geschicht", function() {deepEqual( Stem("geschichtliche"), "geschicht");});
test("geschichtlichen -> geschicht", function() {deepEqual( Stem("geschichtlichen"), "geschicht");});
test("geschichtliches -> geschicht", function() {deepEqual( Stem("geschichtliches"), "geschicht");});
test("geschichts -> geschicht", function() {deepEqual( Stem("geschichts"), "geschicht");});
test("geschick -> geschick", function() {deepEqual( Stem("geschick"), "geschick");});
test("geschicke -> geschick", function() {deepEqual( Stem("geschicke"), "geschick");});
test("geschickes -> geschick", function() {deepEqual( Stem("geschickes"), "geschick");});
test("geschicklichkeit -> geschick", function() {deepEqual( Stem("geschicklichkeit"), "geschick");});
test("geschickt -> geschickt", function() {deepEqual( Stem("geschickt"), "geschickt");});
test("geschickte -> geschickt", function() {deepEqual( Stem("geschickte"), "geschickt");});
test("geschickten -> geschickt", function() {deepEqual( Stem("geschickten"), "geschickt");});
test("geschickter -> geschickt", function() {deepEqual( Stem("geschickter"), "geschickt");});
test("geschieden -> geschied", function() {deepEqual( Stem("geschieden"), "geschied");});
test("geschiedenen -> geschied", function() {deepEqual( Stem("geschiedenen"), "geschied");});
test("geschiedener -> geschied", function() {deepEqual( Stem("geschiedener"), "geschied");});
test("geschiedenes -> geschied", function() {deepEqual( Stem("geschiedenes"), "geschied");});
test("geschieht -> geschieht", function() {deepEqual( Stem("geschieht"), "geschieht");});
test("geschielt -> geschielt", function() {deepEqual( Stem("geschielt"), "geschielt");});
test("geschildert -> geschildert", function() {deepEqual( Stem("geschildert"), "geschildert");});
test("geschirr -> geschirr", function() {deepEqual( Stem("geschirr"), "geschirr");});
test("geschirre -> geschirr", function() {deepEqual( Stem("geschirre"), "geschirr");});
test("geschirrkasten -> geschirrkast", function() {deepEqual( Stem("geschirrkasten"), "geschirrkast");});
test("geschlafen -> geschlaf", function() {deepEqual( Stem("geschlafen"), "geschlaf");});
test("geschlagen -> geschlag", function() {deepEqual( Stem("geschlagen"), "geschlag");});
test("geschlagener -> geschlag", function() {deepEqual( Stem("geschlagener"), "geschlag");});
test("geschlagenes -> geschlag", function() {deepEqual( Stem("geschlagenes"), "geschlag");});
test("geschlecht -> geschlecht", function() {deepEqual( Stem("geschlecht"), "geschlecht");});
test("geschlechte -> geschlecht", function() {deepEqual( Stem("geschlechte"), "geschlecht");});
test("geschlechter -> geschlecht", function() {deepEqual( Stem("geschlechter"), "geschlecht");});
test("geschlechtern -> geschlecht", function() {deepEqual( Stem("geschlechtern"), "geschlecht");});
test("geschlechtes -> geschlecht", function() {deepEqual( Stem("geschlechtes"), "geschlecht");});
test("geschlechts -> geschlecht", function() {deepEqual( Stem("geschlechts"), "geschlecht");});
test("geschlechtsverzeichnis -> geschlechtsverzeichnis", function() {deepEqual( Stem("geschlechtsverzeichnis"), "geschlechtsverzeichnis");});
test("geschleift -> geschleift", function() {deepEqual( Stem("geschleift"), "geschleift");});
test("geschleudert -> geschleudert", function() {deepEqual( Stem("geschleudert"), "geschleudert");});
test("geschlossen -> geschloss", function() {deepEqual( Stem("geschlossen"), "geschloss");});
test("geschlossene -> geschloss", function() {deepEqual( Stem("geschlossene"), "geschloss");});
test("geschlossenen -> geschloss", function() {deepEqual( Stem("geschlossenen"), "geschloss");});
test("geschlossener -> geschloss", function() {deepEqual( Stem("geschlossener"), "geschloss");});
test("geschlungen -> geschlung", function() {deepEqual( Stem("geschlungen"), "geschlung");});
test("geschmack -> geschmack", function() {deepEqual( Stem("geschmack"), "geschmack");});
test("geschmacke -> geschmack", function() {deepEqual( Stem("geschmacke"), "geschmack");});
test("geschmacklos -> geschmacklos", function() {deepEqual( Stem("geschmacklos"), "geschmacklos");});
test("geschmacks -> geschmack", function() {deepEqual( Stem("geschmacks"), "geschmack");});
test("geschmacksgründen -> geschmacksgrund", function() {deepEqual( Stem("geschmacksgründen"), "geschmacksgrund");});
test("geschmackvolle -> geschmackvoll", function() {deepEqual( Stem("geschmackvolle"), "geschmackvoll");});
test("geschmackvollen -> geschmackvoll", function() {deepEqual( Stem("geschmackvollen"), "geschmackvoll");});
test("geschmälerten -> geschmalert", function() {deepEqual( Stem("geschmälerten"), "geschmalert");});
test("geschmeckt -> geschmeckt", function() {deepEqual( Stem("geschmeckt"), "geschmeckt");});
test("geschmeichelt -> geschmeichelt", function() {deepEqual( Stem("geschmeichelt"), "geschmeichelt");});
test("geschmeidigen -> geschmeid", function() {deepEqual( Stem("geschmeidigen"), "geschmeid");});
test("geschmerzt -> geschmerzt", function() {deepEqual( Stem("geschmerzt"), "geschmerzt");});
test("geschmiedetes -> geschmiedet", function() {deepEqual( Stem("geschmiedetes"), "geschmiedet");});
test("geschmiegt -> geschmiegt", function() {deepEqual( Stem("geschmiegt"), "geschmiegt");});
test("geschmissen -> geschmiss", function() {deepEqual( Stem("geschmissen"), "geschmiss");});
test("geschmolzenes -> geschmolz", function() {deepEqual( Stem("geschmolzenes"), "geschmolz");});
test("geschmückt -> geschmuckt", function() {deepEqual( Stem("geschmückt"), "geschmuckt");});
test("geschmückten -> geschmuckt", function() {deepEqual( Stem("geschmückten"), "geschmuckt");});
test("geschmücktes -> geschmuckt", function() {deepEqual( Stem("geschmücktes"), "geschmuckt");});
test("geschnappt -> geschnappt", function() {deepEqual( Stem("geschnappt"), "geschnappt");});
test("geschnatterwesen -> geschnatterwes", function() {deepEqual( Stem("geschnatterwesen"), "geschnatterwes");});
test("geschnaubt -> geschnaubt", function() {deepEqual( Stem("geschnaubt"), "geschnaubt");});
test("geschneit -> geschneit", function() {deepEqual( Stem("geschneit"), "geschneit");});
test("geschniegelten -> geschniegelt", function() {deepEqual( Stem("geschniegelten"), "geschniegelt");});
test("geschnitten -> geschnitt", function() {deepEqual( Stem("geschnitten"), "geschnitt");});
test("geschnittenen -> geschnitt", function() {deepEqual( Stem("geschnittenen"), "geschnitt");});
test("geschnitzte -> geschnitzt", function() {deepEqual( Stem("geschnitzte"), "geschnitzt");});
test("geschnitzten -> geschnitzt", function() {deepEqual( Stem("geschnitzten"), "geschnitzt");});
test("geschnürt -> geschnurt", function() {deepEqual( Stem("geschnürt"), "geschnurt");});
test("geschoben -> geschob", function() {deepEqual( Stem("geschoben"), "geschob");});
test("gescholten -> gescholt", function() {deepEqual( Stem("gescholten"), "gescholt");});
test("geschöpf -> geschopf", function() {deepEqual( Stem("geschöpf"), "geschopf");});
test("geschöpfchen -> geschopfch", function() {deepEqual( Stem("geschöpfchen"), "geschopfch");});
test("geschöpfe -> geschopf", function() {deepEqual( Stem("geschöpfe"), "geschopf");});
test("geschöpfen -> geschopf", function() {deepEqual( Stem("geschöpfen"), "geschopf");});
test("geschöpfes -> geschopf", function() {deepEqual( Stem("geschöpfes"), "geschopf");});
test("geschöpfs -> geschopf", function() {deepEqual( Stem("geschöpfs"), "geschopf");});
test("geschöpft -> geschopft", function() {deepEqual( Stem("geschöpft"), "geschopft");});
test("geschoren -> geschor", function() {deepEqual( Stem("geschoren"), "geschor");});
test("geschossen -> geschoss", function() {deepEqual( Stem("geschossen"), "geschoss");});
test("geschrei -> geschrei", function() {deepEqual( Stem("geschrei"), "geschrei");});
test("geschreis -> geschreis", function() {deepEqual( Stem("geschreis"), "geschreis");});
test("geschrieben -> geschrieb", function() {deepEqual( Stem("geschrieben"), "geschrieb");});
test("geschriebene -> geschrieb", function() {deepEqual( Stem("geschriebene"), "geschrieb");});
test("geschriebenen -> geschrieb", function() {deepEqual( Stem("geschriebenen"), "geschrieb");});
test("geschriebenes -> geschrieb", function() {deepEqual( Stem("geschriebenes"), "geschrieb");});
test("geschrieen -> geschrie", function() {deepEqual( Stem("geschrieen"), "geschrie");});
test("geschrien -> geschri", function() {deepEqual( Stem("geschrien"), "geschri");});
test("geschrumpft -> geschrumpft", function() {deepEqual( Stem("geschrumpft"), "geschrumpft");});
test("geschulten -> geschult", function() {deepEqual( Stem("geschulten"), "geschult");});
test("geschüttelt -> geschuttelt", function() {deepEqual( Stem("geschüttelt"), "geschuttelt");});
test("geschüttet -> geschuttet", function() {deepEqual( Stem("geschüttet"), "geschuttet");});
test("geschützt -> geschutzt", function() {deepEqual( Stem("geschützt"), "geschutzt");});
test("geschwächt -> geschwacht", function() {deepEqual( Stem("geschwächt"), "geschwacht");});
test("geschwächten -> geschwacht", function() {deepEqual( Stem("geschwächten"), "geschwacht");});
test("geschwader -> geschwad", function() {deepEqual( Stem("geschwader"), "geschwad");});
test("geschwänzelt -> geschwanzelt", function() {deepEqual( Stem("geschwänzelt"), "geschwanzelt");});
test("geschwärzt -> geschwarzt", function() {deepEqual( Stem("geschwärzt"), "geschwarzt");});
test("geschwätz -> geschwatz", function() {deepEqual( Stem("geschwätz"), "geschwatz");});
test("geschwätzig -> geschwatz", function() {deepEqual( Stem("geschwätzig"), "geschwatz");});
test("geschwätzigen -> geschwatz", function() {deepEqual( Stem("geschwätzigen"), "geschwatz");});
test("geschwätzigkeit -> geschwatz", function() {deepEqual( Stem("geschwätzigkeit"), "geschwatz");});
test("geschwatzt -> geschwatzt", function() {deepEqual( Stem("geschwatzt"), "geschwatzt");});
test("geschwebt -> geschwebt", function() {deepEqual( Stem("geschwebt"), "geschwebt");});
test("geschweifte -> geschweift", function() {deepEqual( Stem("geschweifte"), "geschweift");});
test("geschweige -> geschweig", function() {deepEqual( Stem("geschweige"), "geschweig");});
test("geschwiegen -> geschwieg", function() {deepEqual( Stem("geschwiegen"), "geschwieg");});
test("geschwind -> geschwind", function() {deepEqual( Stem("geschwind"), "geschwind");});
test("geschwindigkeit -> geschwind", function() {deepEqual( Stem("geschwindigkeit"), "geschwind");});
test("geschwister -> geschwist", function() {deepEqual( Stem("geschwister"), "geschwist");});
test("geschwistern -> geschwist", function() {deepEqual( Stem("geschwistern"), "geschwist");});
test("geschwollen -> geschwoll", function() {deepEqual( Stem("geschwollen"), "geschwoll");});
test("geschwollnen -> geschwolln", function() {deepEqual( Stem("geschwollnen"), "geschwolln");});
test("geschworen -> geschwor", function() {deepEqual( Stem("geschworen"), "geschwor");});
test("geschwulst -> geschwul", function() {deepEqual( Stem("geschwulst"), "geschwul");});
test("geschwunden -> geschwund", function() {deepEqual( Stem("geschwunden"), "geschwund");});
test("geschwungen -> geschwung", function() {deepEqual( Stem("geschwungen"), "geschwung");});
test("geschwungener -> geschwung", function() {deepEqual( Stem("geschwungener"), "geschwung");});
test("geschwür -> geschwur", function() {deepEqual( Stem("geschwür"), "geschwur");});
test("geschwüre -> geschwur", function() {deepEqual( Stem("geschwüre"), "geschwur");});
test("geschwüren -> geschwur", function() {deepEqual( Stem("geschwüren"), "geschwur");});
test("geschwürs -> geschwur", function() {deepEqual( Stem("geschwürs"), "geschwur");});
test("gesegnen -> gesegn", function() {deepEqual( Stem("gesegnen"), "gesegn");});
test("gesegnet -> gesegnet", function() {deepEqual( Stem("gesegnet"), "gesegnet");});
test("gesegneten -> gesegnet", function() {deepEqual( Stem("gesegneten"), "gesegnet");});
test("gesegnetes -> gesegnet", function() {deepEqual( Stem("gesegnetes"), "gesegnet");});
test("gesehen -> geseh", function() {deepEqual( Stem("gesehen"), "geseh");});
test("gesehene -> geseh", function() {deepEqual( Stem("gesehene"), "geseh");});
test("gesehn -> gesehn", function() {deepEqual( Stem("gesehn"), "gesehn");});
test("gesehnt -> gesehnt", function() {deepEqual( Stem("gesehnt"), "gesehnt");});
test("gesell -> gesell", function() {deepEqual( Stem("gesell"), "gesell");});
test("geselle -> gesell", function() {deepEqual( Stem("geselle"), "gesell");});
test("gesellen -> gesell", function() {deepEqual( Stem("gesellen"), "gesell");});
test("gesellenschritt -> gesellenschritt", function() {deepEqual( Stem("gesellenschritt"), "gesellenschritt");});
test("gesellschaft -> gesellschaft", function() {deepEqual( Stem("gesellschaft"), "gesellschaft");});
test("gesellschaften -> gesellschaft", function() {deepEqual( Stem("gesellschaften"), "gesellschaft");});
test("gesellschafter -> gesellschaft", function() {deepEqual( Stem("gesellschafter"), "gesellschaft");});
test("gesellschaftliche -> gesellschaft", function() {deepEqual( Stem("gesellschaftliche"), "gesellschaft");});
test("gesellschaftlichen -> gesellschaft", function() {deepEqual( Stem("gesellschaftlichen"), "gesellschaft");});
test("gesellschafts -> gesellschaft", function() {deepEqual( Stem("gesellschafts"), "gesellschaft");});
test("gesellt -> gesellt", function() {deepEqual( Stem("gesellt"), "gesellt");});
test("gesellte -> gesellt", function() {deepEqual( Stem("gesellte"), "gesellt");});
test("gesellten -> gesellt", function() {deepEqual( Stem("gesellten"), "gesellt");});
test("gesendet -> gesendet", function() {deepEqual( Stem("gesendet"), "gesendet");});
test("gesenkt -> gesenkt", function() {deepEqual( Stem("gesenkt"), "gesenkt");});
test("gesenktem -> gesenkt", function() {deepEqual( Stem("gesenktem"), "gesenkt");});
test("gesenkten -> gesenkt", function() {deepEqual( Stem("gesenkten"), "gesenkt");});
test("gesessen -> gesess", function() {deepEqual( Stem("gesessen"), "gesess");});
test("gesetz -> gesetz", function() {deepEqual( Stem("gesetz"), "gesetz");});
test("gesetzbücher -> gesetzbuch", function() {deepEqual( Stem("gesetzbücher"), "gesetzbuch");});
test("gesetze -> gesetz", function() {deepEqual( Stem("gesetze"), "gesetz");});
test("gesetzen -> gesetz", function() {deepEqual( Stem("gesetzen"), "gesetz");});
test("gesetzes -> gesetz", function() {deepEqual( Stem("gesetzes"), "gesetz");});
test("gesetzesstelle -> gesetzesstell", function() {deepEqual( Stem("gesetzesstelle"), "gesetzesstell");});
test("gesetzestreue -> gesetzestreu", function() {deepEqual( Stem("gesetzestreue"), "gesetzestreu");});
test("gesetzesübertretungen -> gesetzesubertret", function() {deepEqual( Stem("gesetzesübertretungen"), "gesetzesubertret");});
test("gesetzgebend -> gesetzgeb", function() {deepEqual( Stem("gesetzgebend"), "gesetzgeb");});
test("gesetzgebenden -> gesetzgeb", function() {deepEqual( Stem("gesetzgebenden"), "gesetzgeb");});
test("gesetzgeber -> gesetzgeb", function() {deepEqual( Stem("gesetzgeber"), "gesetzgeb");});
test("gesetzgeberin -> gesetzgeberin", function() {deepEqual( Stem("gesetzgeberin"), "gesetzgeberin");});
test("gesetzgebung -> gesetzgeb", function() {deepEqual( Stem("gesetzgebung"), "gesetzgeb");});
test("gesetzlich -> gesetz", function() {deepEqual( Stem("gesetzlich"), "gesetz");});
test("gesetzliche -> gesetz", function() {deepEqual( Stem("gesetzliche"), "gesetz");});
test("gesetzlichen -> gesetz", function() {deepEqual( Stem("gesetzlichen"), "gesetz");});
test("gesetzmässig -> gesetzmass", function() {deepEqual( Stem("gesetzmässig"), "gesetzmass");});
test("gesetzmässige -> gesetzmass", function() {deepEqual( Stem("gesetzmässige"), "gesetzmass");});
test("gesetzmässigen -> gesetzmass", function() {deepEqual( Stem("gesetzmässigen"), "gesetzmass");});
test("gesetzmässigkeit -> gesetzmass", function() {deepEqual( Stem("gesetzmässigkeit"), "gesetzmass");});
test("gesetzsammlung -> gesetzsamml", function() {deepEqual( Stem("gesetzsammlung"), "gesetzsamml");});
test("gesetzt -> gesetzt", function() {deepEqual( Stem("gesetzt"), "gesetzt");});
test("gesetzte -> gesetzt", function() {deepEqual( Stem("gesetzte"), "gesetzt");});
test("gesetzwidrig -> gesetzwidr", function() {deepEqual( Stem("gesetzwidrig"), "gesetzwidr");});
test("gesichert -> gesichert", function() {deepEqual( Stem("gesichert"), "gesichert");});
test("gesicherte -> gesichert", function() {deepEqual( Stem("gesicherte"), "gesichert");});
test("gesicht -> gesicht", function() {deepEqual( Stem("gesicht"), "gesicht");});
test("gesichtchen -> gesichtch", function() {deepEqual( Stem("gesichtchen"), "gesichtch");});
test("gesichte -> gesicht", function() {deepEqual( Stem("gesichte"), "gesicht");});
test("gesichter -> gesicht", function() {deepEqual( Stem("gesichter"), "gesicht");});
test("gesichtern -> gesicht", function() {deepEqual( Stem("gesichtern"), "gesicht");});
test("gesichtes -> gesicht", function() {deepEqual( Stem("gesichtes"), "gesicht");});
test("gesichts -> gesicht", function() {deepEqual( Stem("gesichts"), "gesicht");});
test("gesichtsart -> gesichtsart", function() {deepEqual( Stem("gesichtsart"), "gesichtsart");});
test("gesichtsfarbe -> gesichtsfarb", function() {deepEqual( Stem("gesichtsfarbe"), "gesichtsfarb");});
test("gesichtskreis -> gesichtskreis", function() {deepEqual( Stem("gesichtskreis"), "gesichtskreis");});
test("gesichtskreise -> gesichtskreis", function() {deepEqual( Stem("gesichtskreise"), "gesichtskreis");});
test("gesichtspunkt -> gesichtspunkt", function() {deepEqual( Stem("gesichtspunkt"), "gesichtspunkt");});
test("gesichtszüge -> gesichtszug", function() {deepEqual( Stem("gesichtszüge"), "gesichtszug");});
test("gesichtszügen -> gesichtszug", function() {deepEqual( Stem("gesichtszügen"), "gesichtszug");});
test("gesiegt -> gesiegt", function() {deepEqual( Stem("gesiegt"), "gesiegt");});
test("gesimse -> gesims", function() {deepEqual( Stem("gesimse"), "gesims");});
test("gesimsen -> gesims", function() {deepEqual( Stem("gesimsen"), "gesims");});
test("gesind -> gesind", function() {deepEqual( Stem("gesind"), "gesind");});
test("gesinde -> gesind", function() {deepEqual( Stem("gesinde"), "gesind");});
test("gesindehaus -> gesindehaus", function() {deepEqual( Stem("gesindehaus"), "gesindehaus");});
test("gesindel -> gesindel", function() {deepEqual( Stem("gesindel"), "gesindel");});
test("gesindes -> gesind", function() {deepEqual( Stem("gesindes"), "gesind");});
test("gesinnt -> gesinnt", function() {deepEqual( Stem("gesinnt"), "gesinnt");});
test("gesinnung -> gesinn", function() {deepEqual( Stem("gesinnung"), "gesinn");});
test("gesinnungen -> gesinn", function() {deepEqual( Stem("gesinnungen"), "gesinn");});
test("gesinnungsart -> gesinnungsart", function() {deepEqual( Stem("gesinnungsart"), "gesinnungsart");});
test("gesinnungslosigkeit -> gesinnungslos", function() {deepEqual( Stem("gesinnungslosigkeit"), "gesinnungslos");});
test("gesoffen -> gesoff", function() {deepEqual( Stem("gesoffen"), "gesoff");});
test("gesonnen -> gesonn", function() {deepEqual( Stem("gesonnen"), "gesonn");});
test("gesorgt -> gesorgt", function() {deepEqual( Stem("gesorgt"), "gesorgt");});
test("gespann -> gespann", function() {deepEqual( Stem("gespann"), "gespann");});
test("gespannt -> gespannt", function() {deepEqual( Stem("gespannt"), "gespannt");});
test("gespannte -> gespannt", function() {deepEqual( Stem("gespannte"), "gespannt");});
test("gespannten -> gespannt", function() {deepEqual( Stem("gespannten"), "gespannt");});
test("gespannter -> gespannt", function() {deepEqual( Stem("gespannter"), "gespannt");});
test("gespart -> gespart", function() {deepEqual( Stem("gespart"), "gespart");});
test("gespeistwerden -> gespeistwerd", function() {deepEqual( Stem("gespeistwerden"), "gespeistwerd");});
test("gespenst -> gespen", function() {deepEqual( Stem("gespenst"), "gespen");});
test("gespenste -> gespen", function() {deepEqual( Stem("gespenste"), "gespen");});
test("gespensterbäume -> gespensterbaum", function() {deepEqual( Stem("gespensterbäume"), "gespensterbaum");});
test("gespenstisch -> gespenst", function() {deepEqual( Stem("gespenstisch"), "gespenst");});
test("gesperrt -> gesperrt", function() {deepEqual( Stem("gesperrt"), "gesperrt");});
test("gespickt -> gespickt", function() {deepEqual( Stem("gespickt"), "gespickt");});
test("gespickten -> gespickt", function() {deepEqual( Stem("gespickten"), "gespickt");});
test("gespielt -> gespielt", function() {deepEqual( Stem("gespielt"), "gespielt");});
test("gespiesen -> gespies", function() {deepEqual( Stem("gespiesen"), "gespies");});
test("gespitzt -> gespitzt", function() {deepEqual( Stem("gespitzt"), "gespitzt");});
test("gesplittertes -> gesplittert", function() {deepEqual( Stem("gesplittertes"), "gesplittert");});
test("gesponnen -> gesponn", function() {deepEqual( Stem("gesponnen"), "gesponn");});
test("gespornt -> gespornt", function() {deepEqual( Stem("gespornt"), "gespornt");});
test("gespornten -> gespornt", function() {deepEqual( Stem("gespornten"), "gespornt");});
test("gespött -> gespott", function() {deepEqual( Stem("gespött"), "gespott");});
test("gespötte -> gespott", function() {deepEqual( Stem("gespötte"), "gespott");});
test("gespräch -> gesprach", function() {deepEqual( Stem("gespräch"), "gesprach");});
test("gespräche -> gesprach", function() {deepEqual( Stem("gespräche"), "gesprach");});
test("gesprächen -> gesprach", function() {deepEqual( Stem("gesprächen"), "gesprach");});
test("gesprächigkeit -> gesprach", function() {deepEqual( Stem("gesprächigkeit"), "gesprach");});
test("gesprächs -> gesprach", function() {deepEqual( Stem("gesprächs"), "gesprach");});
test("gesprächskapitel -> gesprachskapitel", function() {deepEqual( Stem("gesprächskapitel"), "gesprachskapitel");});
test("gesprächsthema -> gesprachsthema", function() {deepEqual( Stem("gesprächsthema"), "gesprachsthema");});
test("gespreizt -> gespreizt", function() {deepEqual( Stem("gespreizt"), "gespreizt");});
test("gespreizten -> gespreizt", function() {deepEqual( Stem("gespreizten"), "gespreizt");});
test("gesprengt -> gesprengt", function() {deepEqual( Stem("gesprengt"), "gesprengt");});
test("gesprenkelte -> gesprenkelt", function() {deepEqual( Stem("gesprenkelte"), "gesprenkelt");});
test("gespritzt -> gespritzt", function() {deepEqual( Stem("gespritzt"), "gespritzt");});
test("gesprochen -> gesproch", function() {deepEqual( Stem("gesprochen"), "gesproch");});
test("gesprochenen -> gesproch", function() {deepEqual( Stem("gesprochenen"), "gesproch");});
test("gesprochenes -> gesproch", function() {deepEqual( Stem("gesprochenes"), "gesproch");});
test("gesprosst -> gesprosst", function() {deepEqual( Stem("gesprosst"), "gesprosst");});
test("gesproßt -> gesprosst", function() {deepEqual( Stem("gesproßt"), "gesprosst");});
test("gesprungen -> gesprung", function() {deepEqual( Stem("gesprungen"), "gesprung");});
test("gessen -> gess", function() {deepEqual( Stem("gessen"), "gess");});
test("gestalt -> gestalt", function() {deepEqual( Stem("gestalt"), "gestalt");});
test("gestalten -> gestalt", function() {deepEqual( Stem("gestalten"), "gestalt");});
test("gestaltet -> gestaltet", function() {deepEqual( Stem("gestaltet"), "gestaltet");});
test("gestaltete -> gestaltet", function() {deepEqual( Stem("gestaltete"), "gestaltet");});
test("gestaltung -> gestalt", function() {deepEqual( Stem("gestaltung"), "gestalt");});
test("gestand -> gestand", function() {deepEqual( Stem("gestand"), "gestand");});
test("gestanden -> gestand", function() {deepEqual( Stem("gestanden"), "gestand");});
test("geständnis -> gestandnis", function() {deepEqual( Stem("geständnis"), "gestandnis");});
test("geständnisse -> gestandnis", function() {deepEqual( Stem("geständnisse"), "gestandnis");});
test("gestank -> gestank", function() {deepEqual( Stem("gestank"), "gestank");});
test("gestärkt -> gestarkt", function() {deepEqual( Stem("gestärkt"), "gestarkt");});
test("gestatten -> gestatt", function() {deepEqual( Stem("gestatten"), "gestatt");});
test("gestattet -> gestattet", function() {deepEqual( Stem("gestattet"), "gestattet");});
test("gestattete -> gestattet", function() {deepEqual( Stem("gestattete"), "gestattet");});
test("geste -> gest", function() {deepEqual( Stem("geste"), "gest");});
test("gesteckt -> gesteckt", function() {deepEqual( Stem("gesteckt"), "gesteckt");});
test("gesteckten -> gesteckt", function() {deepEqual( Stem("gesteckten"), "gesteckt");});
test("gestehen -> gesteh", function() {deepEqual( Stem("gestehen"), "gesteh");});
test("gestehn -> gestehn", function() {deepEqual( Stem("gestehn"), "gestehn");});
test("gesteigert -> gesteigert", function() {deepEqual( Stem("gesteigert"), "gesteigert");});
test("gesteigertem -> gesteigert", function() {deepEqual( Stem("gesteigertem"), "gesteigert");});
test("gestein -> gestein", function() {deepEqual( Stem("gestein"), "gestein");});
test("gesteinigt -> gesteinigt", function() {deepEqual( Stem("gesteinigt"), "gesteinigt");});
test("gestellt -> gestellt", function() {deepEqual( Stem("gestellt"), "gestellt");});
test("gestellter -> gestellt", function() {deepEqual( Stem("gestellter"), "gestellt");});
test("gestemmt -> gestemmt", function() {deepEqual( Stem("gestemmt"), "gestemmt");});
test("gestern -> gest", function() {deepEqual( Stem("gestern"), "gest");});
test("gestiefelt -> gestiefelt", function() {deepEqual( Stem("gestiefelt"), "gestiefelt");});
test("gestiefelten -> gestiefelt", function() {deepEqual( Stem("gestiefelten"), "gestiefelt");});
test("gestiegen -> gestieg", function() {deepEqual( Stem("gestiegen"), "gestieg");});
test("gestiftet -> gestiftet", function() {deepEqual( Stem("gestiftet"), "gestiftet");});
test("gestikulieren -> gestikuli", function() {deepEqual( Stem("gestikulieren"), "gestikuli");});
test("gestimmt -> gestimmt", function() {deepEqual( Stem("gestimmt"), "gestimmt");});
test("gestirn -> gestirn", function() {deepEqual( Stem("gestirn"), "gestirn");});
test("gestirne -> gestirn", function() {deepEqual( Stem("gestirne"), "gestirn");});
test("gestirnes -> gestirn", function() {deepEqual( Stem("gestirnes"), "gestirn");});
test("gestochen -> gestoch", function() {deepEqual( Stem("gestochen"), "gestoch");});
test("gestohlen -> gestohl", function() {deepEqual( Stem("gestohlen"), "gestohl");});
test("gestohlenen -> gestohl", function() {deepEqual( Stem("gestohlenen"), "gestohl");});
test("gestopft -> gestopft", function() {deepEqual( Stem("gestopft"), "gestopft");});
test("gestorben -> gestorb", function() {deepEqual( Stem("gestorben"), "gestorb");});
test("gestört -> gestort", function() {deepEqual( Stem("gestört"), "gestort");});
test("gestossen -> gestoss", function() {deepEqual( Stem("gestossen"), "gestoss");});
test("gestoßen -> gestoss", function() {deepEqual( Stem("gestoßen"), "gestoss");});
test("gestraft -> gestraft", function() {deepEqual( Stem("gestraft"), "gestraft");});
test("gestrahlt -> gestrahlt", function() {deepEqual( Stem("gestrahlt"), "gestrahlt");});
test("gesträuch -> gestrauch", function() {deepEqual( Stem("gesträuch"), "gestrauch");});
test("gesträuche -> gestrauch", function() {deepEqual( Stem("gesträuche"), "gestrauch");});
test("gestrebt -> gestrebt", function() {deepEqual( Stem("gestrebt"), "gestrebt");});
test("gestreckt -> gestreckt", function() {deepEqual( Stem("gestreckt"), "gestreckt");});
test("gestreckten -> gestreckt", function() {deepEqual( Stem("gestreckten"), "gestreckt");});
test("gestreift -> gestreift", function() {deepEqual( Stem("gestreift"), "gestreift");});
test("gestreifte -> gestreift", function() {deepEqual( Stem("gestreifte"), "gestreift");});
test("gestreiften -> gestreift", function() {deepEqual( Stem("gestreiften"), "gestreift");});
test("gestrenge -> gestreng", function() {deepEqual( Stem("gestrenge"), "gestreng");});
test("gestrengen -> gestreng", function() {deepEqual( Stem("gestrengen"), "gestreng");});
test("gestressten -> gestresst", function() {deepEqual( Stem("gestressten"), "gestresst");});
test("gestreut -> gestreut", function() {deepEqual( Stem("gestreut"), "gestreut");});
test("gestrichen -> gestrich", function() {deepEqual( Stem("gestrichen"), "gestrich");});
test("gestrichenen -> gestrich", function() {deepEqual( Stem("gestrichenen"), "gestrich");});
test("gestrickte -> gestrickt", function() {deepEqual( Stem("gestrickte"), "gestrickt");});
test("gestrige -> gestrig", function() {deepEqual( Stem("gestrige"), "gestrig");});
test("gestrigen -> gestrig", function() {deepEqual( Stem("gestrigen"), "gestrig");});
test("gestritten -> gestritt", function() {deepEqual( Stem("gestritten"), "gestritt");});
test("gestrüpp -> gestrupp", function() {deepEqual( Stem("gestrüpp"), "gestrupp");});
test("gesturm -> gesturm", function() {deepEqual( Stem("gesturm"), "gesturm");});
test("gestürzt -> gesturzt", function() {deepEqual( Stem("gestürzt"), "gesturzt");});
test("gestützt -> gestutzt", function() {deepEqual( Stem("gestützt"), "gestutzt");});
test("gesuch -> gesuch", function() {deepEqual( Stem("gesuch"), "gesuch");});
test("gesucht -> gesucht", function() {deepEqual( Stem("gesucht"), "gesucht");});
test("gesuchten -> gesucht", function() {deepEqual( Stem("gesuchten"), "gesucht");});
test("gesuchter -> gesucht", function() {deepEqual( Stem("gesuchter"), "gesucht");});
test("gesumm -> gesumm", function() {deepEqual( Stem("gesumm"), "gesumm");});
test("gesund -> gesund", function() {deepEqual( Stem("gesund"), "gesund");});
test("gesunde -> gesund", function() {deepEqual( Stem("gesunde"), "gesund");});
test("gesunden -> gesund", function() {deepEqual( Stem("gesunden"), "gesund");});
test("gesunder -> gesund", function() {deepEqual( Stem("gesunder"), "gesund");});
test("gesünderen -> gesund", function() {deepEqual( Stem("gesünderen"), "gesund");});
test("gesünderer -> gesund", function() {deepEqual( Stem("gesünderer"), "gesund");});
test("gesundes -> gesund", function() {deepEqual( Stem("gesundes"), "gesund");});
test("gesundheit -> gesund", function() {deepEqual( Stem("gesundheit"), "gesund");});
test("gesundheitsamt -> gesundheitsamt", function() {deepEqual( Stem("gesundheitsamt"), "gesundheitsamt");});
test("gesündigt -> gesundigt", function() {deepEqual( Stem("gesündigt"), "gesundigt");});
test("gesungen -> gesung", function() {deepEqual( Stem("gesungen"), "gesung");});
test("gesungenen -> gesung", function() {deepEqual( Stem("gesungenen"), "gesung");});
test("gesunken -> gesunk", function() {deepEqual( Stem("gesunken"), "gesunk");});
test("getäfelten -> getafelt", function() {deepEqual( Stem("getäfelten"), "getafelt");});
test("getan -> getan", function() {deepEqual( Stem("getan"), "getan");});
test("getändelt -> getandelt", function() {deepEqual( Stem("getändelt"), "getandelt");});
test("getanzt -> getanzt", function() {deepEqual( Stem("getanzt"), "getanzt");});
test("getauchte -> getaucht", function() {deepEqual( Stem("getauchte"), "getaucht");});
test("getauchten -> getaucht", function() {deepEqual( Stem("getauchten"), "getaucht");});
test("getauft -> getauft", function() {deepEqual( Stem("getauft"), "getauft");});
test("getauften -> getauft", function() {deepEqual( Stem("getauften"), "getauft");});
test("getaumelt -> getaumelt", function() {deepEqual( Stem("getaumelt"), "getaumelt");});
test("getauscht -> getauscht", function() {deepEqual( Stem("getauscht"), "getauscht");});
test("getäuscht -> getauscht", function() {deepEqual( Stem("getäuscht"), "getauscht");});
test("geteilt -> geteilt", function() {deepEqual( Stem("geteilt"), "geteilt");});
test("gethsemane -> gethseman", function() {deepEqual( Stem("gethsemane"), "gethseman");});
test("getier -> geti", function() {deepEqual( Stem("getier"), "geti");});
test("getilgt -> getilgt", function() {deepEqual( Stem("getilgt"), "getilgt");});
test("getöne -> geton", function() {deepEqual( Stem("getöne"), "geton");});
test("getönt -> getont", function() {deepEqual( Stem("getönt"), "getont");});
test("getöse -> getos", function() {deepEqual( Stem("getöse"), "getos");});
test("getötet -> getotet", function() {deepEqual( Stem("getötet"), "getotet");});
test("getöteten -> getotet", function() {deepEqual( Stem("getöteten"), "getotet");});
test("getöteter -> getotet", function() {deepEqual( Stem("getöteter"), "getotet");});
test("getragen -> getrag", function() {deepEqual( Stem("getragen"), "getrag");});
test("getragene -> getrag", function() {deepEqual( Stem("getragene"), "getrag");});
test("getragenen -> getrag", function() {deepEqual( Stem("getragenen"), "getrag");});
test("geträllert -> getrallert", function() {deepEqual( Stem("geträllert"), "getrallert");});
test("getränk -> getrank", function() {deepEqual( Stem("getränk"), "getrank");});
test("getränke -> getrank", function() {deepEqual( Stem("getränke"), "getrank");});
test("getränkemischungen -> getrankemisch", function() {deepEqual( Stem("getränkemischungen"), "getrankemisch");});
test("getränken -> getrank", function() {deepEqual( Stem("getränken"), "getrank");});
test("getränkes -> getrank", function() {deepEqual( Stem("getränkes"), "getrank");});
test("getränkt -> getrankt", function() {deepEqual( Stem("getränkt"), "getrankt");});
test("getränkter -> getrankt", function() {deepEqual( Stem("getränkter"), "getrankt");});
test("getrauert -> getrauert", function() {deepEqual( Stem("getrauert"), "getrauert");});
test("geträumt -> getraumt", function() {deepEqual( Stem("geträumt"), "getraumt");});
test("geträumte -> getraumt", function() {deepEqual( Stem("geträumte"), "getraumt");});
test("getraut -> getraut", function() {deepEqual( Stem("getraut"), "getraut");});
test("getraute -> getraut", function() {deepEqual( Stem("getraute"), "getraut");});
test("getreide -> getreid", function() {deepEqual( Stem("getreide"), "getreid");});
test("getrennt -> getrennt", function() {deepEqual( Stem("getrennt"), "getrennt");});
test("getrennte -> getrennt", function() {deepEqual( Stem("getrennte"), "getrennt");});
test("getrennten -> getrennt", function() {deepEqual( Stem("getrennten"), "getrennt");});
test("getrennter -> getrennt", function() {deepEqual( Stem("getrennter"), "getrennt");});
test("getreten -> getret", function() {deepEqual( Stem("getreten"), "getret");});
test("getreu -> getreu", function() {deepEqual( Stem("getreu"), "getreu");});
test("getreue -> getreu", function() {deepEqual( Stem("getreue"), "getreu");});
test("getreuen -> getreu", function() {deepEqual( Stem("getreuen"), "getreu");});
test("getreulich -> getreulich", function() {deepEqual( Stem("getreulich"), "getreulich");});
test("getriebe -> getrieb", function() {deepEqual( Stem("getriebe"), "getrieb");});
test("getrieben -> getrieb", function() {deepEqual( Stem("getrieben"), "getrieb");});
test("getriebene -> getrieb", function() {deepEqual( Stem("getriebene"), "getrieb");});
test("getriebenes -> getrieb", function() {deepEqual( Stem("getriebenes"), "getrieb");});
test("getroffen -> getroff", function() {deepEqual( Stem("getroffen"), "getroff");});
test("getroffenen -> getroff", function() {deepEqual( Stem("getroffenen"), "getroff");});
test("getrost -> getrost", function() {deepEqual( Stem("getrost"), "getrost");});
test("getröstet -> getrostet", function() {deepEqual( Stem("getröstet"), "getrostet");});
test("getrübt -> getrubt", function() {deepEqual( Stem("getrübt"), "getrubt");});
test("getrunken -> getrunk", function() {deepEqual( Stem("getrunken"), "getrunk");});
test("gets -> get", function() {deepEqual( Stem("gets"), "get");});
test("getupf -> getupf", function() {deepEqual( Stem("getupf"), "getupf");});
test("geübt -> geubt", function() {deepEqual( Stem("geübt"), "geubt");});
test("geübter -> geubt", function() {deepEqual( Stem("geübter"), "geubt");});
test("geurteilt -> geurteilt", function() {deepEqual( Stem("geurteilt"), "geurteilt");});
test("gevatter -> gevatt", function() {deepEqual( Stem("gevatter"), "gevatt");});
test("gevatterschaften -> gevatterschaft", function() {deepEqual( Stem("gevatterschaften"), "gevatterschaft");});
test("gevattersfrau -> gevattersfrau", function() {deepEqual( Stem("gevattersfrau"), "gevattersfrau");});
test("gewächs -> gewach", function() {deepEqual( Stem("gewächs"), "gewach");});
test("gewächse -> gewachs", function() {deepEqual( Stem("gewächse"), "gewachs");});
test("gewachsen -> gewachs", function() {deepEqual( Stem("gewachsen"), "gewachs");});
test("gewachsenes -> gewachs", function() {deepEqual( Stem("gewachsenes"), "gewachs");});
test("gewacht -> gewacht", function() {deepEqual( Stem("gewacht"), "gewacht");});
test("gewagt -> gewagt", function() {deepEqual( Stem("gewagt"), "gewagt");});
test("gewählt -> gewahlt", function() {deepEqual( Stem("gewählt"), "gewahlt");});
test("gewählte -> gewahlt", function() {deepEqual( Stem("gewählte"), "gewahlt");});
test("gewählten -> gewahlt", function() {deepEqual( Stem("gewählten"), "gewahlt");});
test("gewähltfranks -> gewahltfrank", function() {deepEqual( Stem("gewähltfranks"), "gewahltfrank");});
test("gewähnt -> gewahnt", function() {deepEqual( Stem("gewähnt"), "gewahnt");});
test("gewahren -> gewahr", function() {deepEqual( Stem("gewahren"), "gewahr");});
test("gewähren -> gewahr", function() {deepEqual( Stem("gewähren"), "gewahr");});
test("gewahrend -> gewahr", function() {deepEqual( Stem("gewahrend"), "gewahr");});
test("gewahrsam -> gewahrsam", function() {deepEqual( Stem("gewahrsam"), "gewahrsam");});
test("gewahrt -> gewahrt", function() {deepEqual( Stem("gewahrt"), "gewahrt");});
test("gewährt -> gewahrt", function() {deepEqual( Stem("gewährt"), "gewahrt");});
test("gewahrte -> gewahrt", function() {deepEqual( Stem("gewahrte"), "gewahrt");});
test("gewährte -> gewahrt", function() {deepEqual( Stem("gewährte"), "gewahrt");});
test("gewahrten -> gewahrt", function() {deepEqual( Stem("gewahrten"), "gewahrt");});
test("gewährten -> gewahrt", function() {deepEqual( Stem("gewährten"), "gewahrt");});
test("gewalt -> gewalt", function() {deepEqual( Stem("gewalt"), "gewalt");});
test("gewaltder -> gewaltd", function() {deepEqual( Stem("gewaltder"), "gewaltd");});
test("gewalthabende -> gewalthab", function() {deepEqual( Stem("gewalthabende"), "gewalthab");});
test("gewaltig -> gewalt", function() {deepEqual( Stem("gewaltig"), "gewalt");});
test("gewaltige -> gewalt", function() {deepEqual( Stem("gewaltige"), "gewalt");});
test("gewaltigem -> gewalt", function() {deepEqual( Stem("gewaltigem"), "gewalt");});
test("gewaltigen -> gewalt", function() {deepEqual( Stem("gewaltigen"), "gewalt");});
test("gewaltiger -> gewalt", function() {deepEqual( Stem("gewaltiger"), "gewalt");});
test("gewaltiges -> gewalt", function() {deepEqual( Stem("gewaltiges"), "gewalt");});
test("gewaltigsten -> gewalt", function() {deepEqual( Stem("gewaltigsten"), "gewalt");});
test("gewaltlos -> gewaltlos", function() {deepEqual( Stem("gewaltlos"), "gewaltlos");});
test("gewaltlosen -> gewaltlos", function() {deepEqual( Stem("gewaltlosen"), "gewaltlos");});
test("gewaltsam -> gewaltsam", function() {deepEqual( Stem("gewaltsam"), "gewaltsam");});
test("gewaltsamer -> gewaltsam", function() {deepEqual( Stem("gewaltsamer"), "gewaltsam");});
test("gewalttat -> gewalttat", function() {deepEqual( Stem("gewalttat"), "gewalttat");});
test("gewalttätigen -> gewalttat", function() {deepEqual( Stem("gewalttätigen"), "gewalttat");});
test("gewalttätiger -> gewalttat", function() {deepEqual( Stem("gewalttätiger"), "gewalttat");});
test("gewalttätigkeit -> gewalttat", function() {deepEqual( Stem("gewalttätigkeit"), "gewalttat");});
test("gewand -> gewand", function() {deepEqual( Stem("gewand"), "gewand");});
test("gewande -> gewand", function() {deepEqual( Stem("gewande"), "gewand");});
test("gewandelt -> gewandelt", function() {deepEqual( Stem("gewandelt"), "gewandelt");});
test("gewänder -> gewand", function() {deepEqual( Stem("gewänder"), "gewand");});
test("gewandert -> gewandert", function() {deepEqual( Stem("gewandert"), "gewandert");});
test("gewandes -> gewand", function() {deepEqual( Stem("gewandes"), "gewand");});
test("gewandt -> gewandt", function() {deepEqual( Stem("gewandt"), "gewandt");});
test("gewandte -> gewandt", function() {deepEqual( Stem("gewandte"), "gewandt");});
test("gewandten -> gewandt", function() {deepEqual( Stem("gewandten"), "gewandt");});
test("gewandtheit -> gewandt", function() {deepEqual( Stem("gewandtheit"), "gewandt");});
test("gewann -> gewann", function() {deepEqual( Stem("gewann"), "gewann");});
test("gewannen -> gewann", function() {deepEqual( Stem("gewannen"), "gewann");});
test("gewarnt -> gewarnt", function() {deepEqual( Stem("gewarnt"), "gewarnt");});
test("gewartet -> gewartet", function() {deepEqual( Stem("gewartet"), "gewartet");});
test("gewärtig -> gewart", function() {deepEqual( Stem("gewärtig"), "gewart");});
test("gewärtigen -> gewart", function() {deepEqual( Stem("gewärtigen"), "gewart");});
test("gewaschen -> gewasch", function() {deepEqual( Stem("gewaschen"), "gewasch");});
test("gewaschene -> gewasch", function() {deepEqual( Stem("gewaschene"), "gewasch");});
test("gewässer -> gewass", function() {deepEqual( Stem("gewässer"), "gewass");});
test("gewässerter -> gewassert", function() {deepEqual( Stem("gewässerter"), "gewassert");});
test("gewebe -> geweb", function() {deepEqual( Stem("gewebe"), "geweb");});
test("gewebeproben -> gewebeprob", function() {deepEqual( Stem("gewebeproben"), "gewebeprob");});
test("gewechselt -> gewechselt", function() {deepEqual( Stem("gewechselt"), "gewechselt");});
test("geweckt -> geweckt", function() {deepEqual( Stem("geweckt"), "geweckt");});
test("gewehlbe -> gewehlb", function() {deepEqual( Stem("gewehlbe"), "gewehlb");});
test("gewehr -> gewehr", function() {deepEqual( Stem("gewehr"), "gewehr");});
test("gewehre -> gewehr", function() {deepEqual( Stem("gewehre"), "gewehr");});
test("gewehren -> gewehr", function() {deepEqual( Stem("gewehren"), "gewehr");});
test("gewehrlauf -> gewehrlauf", function() {deepEqual( Stem("gewehrlauf"), "gewehrlauf");});
test("geweigert -> geweigert", function() {deepEqual( Stem("geweigert"), "geweigert");});
test("geweih -> geweih", function() {deepEqual( Stem("geweih"), "geweih");});
test("geweihbildung -> geweihbild", function() {deepEqual( Stem("geweihbildung"), "geweihbild");});
test("geweihes -> geweih", function() {deepEqual( Stem("geweihes"), "geweih");});
test("geweihete -> geweihet", function() {deepEqual( Stem("geweihete"), "geweihet");});
test("geweissagt -> geweissagt", function() {deepEqual( Stem("geweissagt"), "geweissagt");});
test("geweisst -> geweisst", function() {deepEqual( Stem("geweisst"), "geweisst");});
test("geweisstes -> geweisst", function() {deepEqual( Stem("geweisstes"), "geweisst");});
test("gewendet -> gewendet", function() {deepEqual( Stem("gewendet"), "gewendet");});
test("gewendeter -> gewendet", function() {deepEqual( Stem("gewendeter"), "gewendet");});
test("gewerbe -> gewerb", function() {deepEqual( Stem("gewerbe"), "gewerb");});
test("gewerkschaft -> gewerkschaft", function() {deepEqual( Stem("gewerkschaft"), "gewerkschaft");});
test("gewerkschaftsdemonstration -> gewerkschaftsdemonstration", function() {deepEqual( Stem("gewerkschaftsdemonstration"), "gewerkschaftsdemonstration");});
test("gewesen -> gewes", function() {deepEqual( Stem("gewesen"), "gewes");});
test("gewesenen -> gewes", function() {deepEqual( Stem("gewesenen"), "gewes");});
test("gewichen -> gewich", function() {deepEqual( Stem("gewichen"), "gewich");});
test("gewicht -> gewicht", function() {deepEqual( Stem("gewicht"), "gewicht");});
test("gewichtigen -> gewicht", function() {deepEqual( Stem("gewichtigen"), "gewicht");});
test("gewickelt -> gewickelt", function() {deepEqual( Stem("gewickelt"), "gewickelt");});
test("gewiegter -> gewiegt", function() {deepEqual( Stem("gewiegter"), "gewiegt");});
test("gewiesen -> gewies", function() {deepEqual( Stem("gewiesen"), "gewies");});
test("gewildes -> gewild", function() {deepEqual( Stem("gewildes"), "gewild");});
test("gewillt -> gewillt", function() {deepEqual( Stem("gewillt"), "gewillt");});
test("gewinn -> gewinn", function() {deepEqual( Stem("gewinn"), "gewinn");});
test("gewinne -> gewinn", function() {deepEqual( Stem("gewinne"), "gewinn");});
test("gewinnen -> gewinn", function() {deepEqual( Stem("gewinnen"), "gewinn");});
test("gewinnende -> gewinn", function() {deepEqual( Stem("gewinnende"), "gewinn");});
test("gewinnes -> gewinn", function() {deepEqual( Stem("gewinnes"), "gewinn");});
test("gewinnt -> gewinnt", function() {deepEqual( Stem("gewinnt"), "gewinnt");});
test("gewirkt -> gewirkt", function() {deepEqual( Stem("gewirkt"), "gewirkt");});
test("gewiss -> gewiss", function() {deepEqual( Stem("gewiss"), "gewiss");});
test("gewiß -> gewiss", function() {deepEqual( Stem("gewiß"), "gewiss");});
test("gewisse -> gewiss", function() {deepEqual( Stem("gewisse"), "gewiss");});
test("gewissem -> gewiss", function() {deepEqual( Stem("gewissem"), "gewiss");});
test("gewissen -> gewiss", function() {deepEqual( Stem("gewissen"), "gewiss");});
test("gewissenhaft -> gewissenhaft", function() {deepEqual( Stem("gewissenhaft"), "gewissenhaft");});
test("gewissenhafter -> gewissenhaft", function() {deepEqual( Stem("gewissenhafter"), "gewissenhaft");});
test("gewissenlos -> gewissenlos", function() {deepEqual( Stem("gewissenlos"), "gewissenlos");});
test("gewissenloser -> gewissenlos", function() {deepEqual( Stem("gewissenloser"), "gewissenlos");});
test("gewissenlosigkeit -> gewissenlos", function() {deepEqual( Stem("gewissenlosigkeit"), "gewissenlos");});
test("gewissenlosigkeiten -> gewissenlos", function() {deepEqual( Stem("gewissenlosigkeiten"), "gewissenlos");});
test("gewissens -> gewiss", function() {deepEqual( Stem("gewissens"), "gewiss");});
test("gewissensangst -> gewissensang", function() {deepEqual( Stem("gewissensangst"), "gewissensang");});
test("gewissensbedenken -> gewissensbedenk", function() {deepEqual( Stem("gewissensbedenken"), "gewissensbedenk");});
test("gewissensbisse -> gewissensbiss", function() {deepEqual( Stem("gewissensbisse"), "gewissensbiss");});
test("gewissensbürde -> gewissensburd", function() {deepEqual( Stem("gewissensbürde"), "gewissensburd");});
test("gewissensfreien -> gewissensfrei", function() {deepEqual( Stem("gewissensfreien"), "gewissensfrei");});
test("gewissensgründen -> gewissensgrund", function() {deepEqual( Stem("gewissensgründen"), "gewissensgrund");});
test("gewissenskonflikt -> gewissenskonflikt", function() {deepEqual( Stem("gewissenskonflikt"), "gewissenskonflikt");});
test("gewissenskonfliktes -> gewissenskonflikt", function() {deepEqual( Stem("gewissenskonfliktes"), "gewissenskonflikt");});
test("gewissenspein -> gewissenspein", function() {deepEqual( Stem("gewissenspein"), "gewissenspein");});
test("gewissensqualen -> gewissensqual", function() {deepEqual( Stem("gewissensqualen"), "gewissensqual");});
test("gewisser -> gewiss", function() {deepEqual( Stem("gewisser"), "gewiss");});
test("gewissermassen -> gewissermass", function() {deepEqual( Stem("gewissermassen"), "gewissermass");});
test("gewissermaßen -> gewissermass", function() {deepEqual( Stem("gewissermaßen"), "gewissermass");});
test("gewisses -> gewiss", function() {deepEqual( Stem("gewisses"), "gewiss");});
test("gewisseste -> gewiss", function() {deepEqual( Stem("gewisseste"), "gewiss");});
test("gewissesten -> gewiss", function() {deepEqual( Stem("gewissesten"), "gewiss");});
test("gewissheit -> gewiss", function() {deepEqual( Stem("gewissheit"), "gewiss");});
test("gewißheit -> gewiss", function() {deepEqual( Stem("gewißheit"), "gewiss");});
test("gewisslich -> gewiss", function() {deepEqual( Stem("gewisslich"), "gewiss");});
test("gewißlich -> gewiss", function() {deepEqual( Stem("gewißlich"), "gewiss");});
test("gewitter -> gewitt", function() {deepEqual( Stem("gewitter"), "gewitt");});
test("gewitterregen -> gewitterreg", function() {deepEqual( Stem("gewitterregen"), "gewitterreg");});
test("gewitterstürme -> gewittersturm", function() {deepEqual( Stem("gewitterstürme"), "gewittersturm");});
test("gewitterwolken -> gewitterwolk", function() {deepEqual( Stem("gewitterwolken"), "gewitterwolk");});
test("gewitzter -> gewitzt", function() {deepEqual( Stem("gewitzter"), "gewitzt");});
test("gewogen -> gewog", function() {deepEqual( Stem("gewogen"), "gewog");});
test("gewogt -> gewogt", function() {deepEqual( Stem("gewogt"), "gewogt");});
test("gewöhnen -> gewohn", function() {deepEqual( Stem("gewöhnen"), "gewohn");});
test("gewohnheit -> gewohn", function() {deepEqual( Stem("gewohnheit"), "gewohn");});
test("gewohnheiten -> gewohn", function() {deepEqual( Stem("gewohnheiten"), "gewohn");});
test("gewöhnlich -> gewohn", function() {deepEqual( Stem("gewöhnlich"), "gewohn");});
test("gewöhnliche -> gewohn", function() {deepEqual( Stem("gewöhnliche"), "gewohn");});
test("gewöhnlichen -> gewohn", function() {deepEqual( Stem("gewöhnlichen"), "gewohn");});
test("gewöhnlicher -> gewohn", function() {deepEqual( Stem("gewöhnlicher"), "gewohn");});
test("gewöhnlichste -> gewohn", function() {deepEqual( Stem("gewöhnlichste"), "gewohn");});
test("gewöhnlichsten -> gewohn", function() {deepEqual( Stem("gewöhnlichsten"), "gewohn");});
test("gewohnt -> gewohnt", function() {deepEqual( Stem("gewohnt"), "gewohnt");});
test("gewöhnt -> gewohnt", function() {deepEqual( Stem("gewöhnt"), "gewohnt");});
test("gewöhnte -> gewohnt", function() {deepEqual( Stem("gewöhnte"), "gewohnt");});
test("gewohnten -> gewohnt", function() {deepEqual( Stem("gewohnten"), "gewohnt");});
test("gewohnterweise -> gewohnterweis", function() {deepEqual( Stem("gewohnterweise"), "gewohnterweis");});
test("gewöhnung -> gewohn", function() {deepEqual( Stem("gewöhnung"), "gewohn");});
test("gewölk -> gewolk", function() {deepEqual( Stem("gewölk"), "gewolk");});
test("gewollt -> gewollt", function() {deepEqual( Stem("gewollt"), "gewollt");});
test("gewönne -> gewonn", function() {deepEqual( Stem("gewönne"), "gewonn");});
test("gewonnen -> gewonn", function() {deepEqual( Stem("gewonnen"), "gewonn");});
test("gewonnenen -> gewonn", function() {deepEqual( Stem("gewonnenen"), "gewonn");});
test("geworben -> geworb", function() {deepEqual( Stem("geworben"), "geworb");});
test("geworden -> geword", function() {deepEqual( Stem("geworden"), "geword");});
test("gewordene -> geword", function() {deepEqual( Stem("gewordene"), "geword");});
test("gewordenen -> geword", function() {deepEqual( Stem("gewordenen"), "geword");});
test("gewordener -> geword", function() {deepEqual( Stem("gewordener"), "geword");});
test("geworfen -> geworf", function() {deepEqual( Stem("geworfen"), "geworf");});
test("geworfene -> geworf", function() {deepEqual( Stem("geworfene"), "geworf");});
test("geworfenen -> geworf", function() {deepEqual( Stem("geworfenen"), "geworf");});
test("gewühl -> gewuhl", function() {deepEqual( Stem("gewühl"), "gewuhl");});
test("gewunden -> gewund", function() {deepEqual( Stem("gewunden"), "gewund");});
test("gewundene -> gewund", function() {deepEqual( Stem("gewundene"), "gewund");});
test("gewünschtdie -> gewunschtdi", function() {deepEqual( Stem("gewünschtdie"), "gewunschtdi");});
test("gewünschten -> gewunscht", function() {deepEqual( Stem("gewünschten"), "gewunscht");});
test("gewünschtes -> gewunscht", function() {deepEqual( Stem("gewünschtes"), "gewunscht");});
test("gewürdigt -> gewurdigt", function() {deepEqual( Stem("gewürdigt"), "gewurdigt");});
test("gewürfelte -> gewurfelt", function() {deepEqual( Stem("gewürfelte"), "gewurfelt");});
test("gewürm -> gewurm", function() {deepEqual( Stem("gewürm"), "gewurm");});
test("gewürme -> gewurm", function() {deepEqual( Stem("gewürme"), "gewurm");});
test("gewürms -> gewurm", function() {deepEqual( Stem("gewürms"), "gewurm");});
test("gewurzelt -> gewurzelt", function() {deepEqual( Stem("gewurzelt"), "gewurzelt");});
test("gewürzen -> gewurz", function() {deepEqual( Stem("gewürzen"), "gewurz");});
test("gewürzes -> gewurz", function() {deepEqual( Stem("gewürzes"), "gewurz");});
test("gewürzmörser -> gewurzmors", function() {deepEqual( Stem("gewürzmörser"), "gewurzmors");});
test("gewürznägelein -> gewurznagelein", function() {deepEqual( Stem("gewürznägelein"), "gewurznagelein");});
test("gewürzt -> gewurzt", function() {deepEqual( Stem("gewürzt"), "gewurzt");});
test("gewusst -> gewusst", function() {deepEqual( Stem("gewusst"), "gewusst");});
test("gewußt -> gewusst", function() {deepEqual( Stem("gewußt"), "gewusst");});
test("gezählt -> gezahlt", function() {deepEqual( Stem("gezählt"), "gezahlt");});
test("gezahnten -> gezahnt", function() {deepEqual( Stem("gezahnten"), "gezahnt");});
test("gezaubert -> gezaubert", function() {deepEqual( Stem("gezaubert"), "gezaubert");});
test("gezecht -> gezecht", function() {deepEqual( Stem("gezecht"), "gezecht");});
test("gezeichnet -> gezeichnet", function() {deepEqual( Stem("gezeichnet"), "gezeichnet");});
test("gezeigt -> gezeigt", function() {deepEqual( Stem("gezeigt"), "gezeigt");});
test("gezeigten -> gezeigt", function() {deepEqual( Stem("gezeigten"), "gezeigt");});
test("gezerrt -> gezerrt", function() {deepEqual( Stem("gezerrt"), "gezerrt");});
test("gezeugt -> gezeugt", function() {deepEqual( Stem("gezeugt"), "gezeugt");});
test("gezielt -> gezielt", function() {deepEqual( Stem("gezielt"), "gezielt");});
test("geziemenden -> geziem", function() {deepEqual( Stem("geziemenden"), "geziem");});
test("geziemender -> geziem", function() {deepEqual( Stem("geziemender"), "geziem");});
test("geziemt -> geziemt", function() {deepEqual( Stem("geziemt"), "geziemt");});
test("geziere -> gezi", function() {deepEqual( Stem("geziere"), "gezi");});
test("geziert -> geziert", function() {deepEqual( Stem("geziert"), "geziert");});
test("gezierten -> geziert", function() {deepEqual( Stem("gezierten"), "geziert");});
test("gezimmerte -> gezimmert", function() {deepEqual( Stem("gezimmerte"), "gezimmert");});
test("gezittert -> gezittert", function() {deepEqual( Stem("gezittert"), "gezittert");});
test("gezogen -> gezog", function() {deepEqual( Stem("gezogen"), "gezog");});
test("gezogene -> gezog", function() {deepEqual( Stem("gezogene"), "gezog");});
test("gezogenen -> gezog", function() {deepEqual( Stem("gezogenen"), "gezog");});
test("gezücht -> gezucht", function() {deepEqual( Stem("gezücht"), "gezucht");});
test("gezüchtet -> gezuchtet", function() {deepEqual( Stem("gezüchtet"), "gezuchtet");});
test("gezüchtigt -> gezuchtigt", function() {deepEqual( Stem("gezüchtigt"), "gezuchtigt");});
test("gezweig -> gezweig", function() {deepEqual( Stem("gezweig"), "gezweig");});
test("gezwitscher -> gezwitsch", function() {deepEqual( Stem("gezwitscher"), "gezwitsch");});
test("gezwungen -> gezwung", function() {deepEqual( Stem("gezwungen"), "gezwung");});
test("gezwungene -> gezwung", function() {deepEqual( Stem("gezwungene"), "gezwung");});
test("gfahln -> gfahln", function() {deepEqual( Stem("gfahln"), "gfahln");});
test("gfallen -> gfall", function() {deepEqual( Stem("gfallen"), "gfall");});
test("gfallt -> gfallt", function() {deepEqual( Stem("gfallt"), "gfallt");});
test("gflickt -> gflickt", function() {deepEqual( Stem("gflickt"), "gflickt");});
test("gfressen -> gfress", function() {deepEqual( Stem("gfressen"), "gfress");});
test("gfunden -> gfund", function() {deepEqual( Stem("gfunden"), "gfund");});
test("ghabt -> ghabt", function() {deepEqual( Stem("ghabt"), "ghabt");});
test("ghear -> ghear", function() {deepEqual( Stem("ghear"), "ghear");});
test("gheart -> gheart", function() {deepEqual( Stem("gheart"), "gheart");});
test("ghört -> ghort", function() {deepEqual( Stem("ghört"), "ghort");});
test("gian -> gian", function() {deepEqual( Stem("gian"), "gian");});
test("gib -> gib", function() {deepEqual( Stem("gib"), "gib");});
test("gibeon -> gibeon", function() {deepEqual( Stem("gibeon"), "gibeon");});
test("gibeoniten -> gibeonit", function() {deepEqual( Stem("gibeoniten"), "gibeonit");});
test("gibeoniter -> gibeonit", function() {deepEqual( Stem("gibeoniter"), "gibeonit");});
test("gibst -> gibst", function() {deepEqual( Stem("gibst"), "gibst");});
test("gibt -> gibt", function() {deepEqual( Stem("gibt"), "gibt");});
test("gibts -> gibt", function() {deepEqual( Stem("gibts"), "gibt");});
test("gichon -> gichon", function() {deepEqual( Stem("gichon"), "gichon");});
test("gichtschmerzen -> gichtschmerz", function() {deepEqual( Stem("gichtschmerzen"), "gichtschmerz");});
test("gideon -> gideon", function() {deepEqual( Stem("gideon"), "gideon");});
test("gier -> gier", function() {deepEqual( Stem("gier"), "gier");});
test("gierig -> gierig", function() {deepEqual( Stem("gierig"), "gierig");});
test("gierigkeit -> gierig", function() {deepEqual( Stem("gierigkeit"), "gierig");});
test("gierten -> giert", function() {deepEqual( Stem("gierten"), "giert");});
test("giessbach -> giessbach", function() {deepEqual( Stem("giessbach"), "giessbach");});
test("gießbach -> giessbach", function() {deepEqual( Stem("gießbach"), "giessbach");});
test("giessbäche -> giessbach", function() {deepEqual( Stem("giessbäche"), "giessbach");});
test("gießbäche -> giessbach", function() {deepEqual( Stem("gießbäche"), "giessbach");});
test("giesse -> giess", function() {deepEqual( Stem("giesse"), "giess");});
test("gieße -> giess", function() {deepEqual( Stem("gieße"), "giess");});
test("giessen -> giess", function() {deepEqual( Stem("giessen"), "giess");});
test("giesskanne -> giesskann", function() {deepEqual( Stem("giesskanne"), "giesskann");});
test("giesst -> giesst", function() {deepEqual( Stem("giesst"), "giesst");});
test("gießt -> giesst", function() {deepEqual( Stem("gießt"), "giesst");});
test("gift -> gift", function() {deepEqual( Stem("gift"), "gift");});
test("gifte -> gift", function() {deepEqual( Stem("gifte"), "gift");});
test("giftes -> gift", function() {deepEqual( Stem("giftes"), "gift");});
test("giftig -> giftig", function() {deepEqual( Stem("giftig"), "giftig");});
test("giftige -> giftig", function() {deepEqual( Stem("giftige"), "giftig");});
test("giftigen -> giftig", function() {deepEqual( Stem("giftigen"), "giftig");});
test("giftmischerinnen -> giftmischerinn", function() {deepEqual( Stem("giftmischerinnen"), "giftmischerinn");});
test("giftpilzen -> giftpilz", function() {deepEqual( Stem("giftpilzen"), "giftpilz");});
test("gilead -> gilead", function() {deepEqual( Stem("gilead"), "gilead");});
test("gilt -> gilt", function() {deepEqual( Stem("gilt"), "gilt");});
test("ging -> ging", function() {deepEqual( Stem("ging"), "ging");});
test("ginge -> ging", function() {deepEqual( Stem("ginge"), "ging");});
test("gingen -> ging", function() {deepEqual( Stem("gingen"), "ging");});
test("gipfel -> gipfel", function() {deepEqual( Stem("gipfel"), "gipfel");});
test("gipfeln -> gipfeln", function() {deepEqual( Stem("gipfeln"), "gipfeln");});
test("gipfelpunkt -> gipfelpunkt", function() {deepEqual( Stem("gipfelpunkt"), "gipfelpunkt");});
test("gipsarbeiter -> gipsarbeit", function() {deepEqual( Stem("gipsarbeiter"), "gipsarbeit");});
test("gissgen -> gissg", function() {deepEqual( Stem("gissgen"), "gissg");});
test("gitarre -> gitarr", function() {deepEqual( Stem("gitarre"), "gitarr");});
test("gitarrebegleiten -> gitarrebegleit", function() {deepEqual( Stem("gitarrebegleiten"), "gitarrebegleit");});
test("gitter -> gitt", function() {deepEqual( Stem("gitter"), "gitt");});
test("gitterchen -> gitterch", function() {deepEqual( Stem("gitterchen"), "gitterch");});
test("glacht -> glacht", function() {deepEqual( Stem("glacht"), "glacht");});
test("gladiolos -> gladiolos", function() {deepEqual( Stem("gladiolos"), "gladiolos");});
test("glanz -> glanz", function() {deepEqual( Stem("glanz"), "glanz");});
test("glanzalter -> glanzalt", function() {deepEqual( Stem("glanzalter"), "glanzalt");});
test("glanze -> glanz", function() {deepEqual( Stem("glanze"), "glanz");});
test("glänzen -> glanz", function() {deepEqual( Stem("glänzen"), "glanz");});
test("glänzend -> glanzend", function() {deepEqual( Stem("glänzend"), "glanzend");});
test("glänzende -> glanzend", function() {deepEqual( Stem("glänzende"), "glanzend");});
test("glänzendem -> glanzend", function() {deepEqual( Stem("glänzendem"), "glanzend");});
test("glänzenden -> glanzend", function() {deepEqual( Stem("glänzenden"), "glanzend");});
test("glänzender -> glanzend", function() {deepEqual( Stem("glänzender"), "glanzend");});
test("glänzendes -> glanzend", function() {deepEqual( Stem("glänzendes"), "glanzend");});
test("glänzendsten -> glanzend", function() {deepEqual( Stem("glänzendsten"), "glanzend");});
test("glanzlosen -> glanzlos", function() {deepEqual( Stem("glanzlosen"), "glanzlos");});
test("glänzt -> glanzt", function() {deepEqual( Stem("glänzt"), "glanzt");});
test("glänzte -> glanzt", function() {deepEqual( Stem("glänzte"), "glanzt");});
test("glänzten -> glanzt", function() {deepEqual( Stem("glänzten"), "glanzt");});
test("glanzzeit -> glanzzeit", function() {deepEqual( Stem("glanzzeit"), "glanzzeit");});
test("glas -> glas", function() {deepEqual( Stem("glas"), "glas");});
test("gläschen -> glasch", function() {deepEqual( Stem("gläschen"), "glasch");});
test("glase -> glas", function() {deepEqual( Stem("glase"), "glas");});
test("glaser -> glas", function() {deepEqual( Stem("glaser"), "glas");});
test("gläser -> glas", function() {deepEqual( Stem("gläser"), "glas");});
test("gläsern -> glas", function() {deepEqual( Stem("gläsern"), "glas");});
test("gläserne -> glasern", function() {deepEqual( Stem("gläserne"), "glasern");});
test("gläsernen -> glasern", function() {deepEqual( Stem("gläsernen"), "glasern");});
test("glasglöckchen -> glasglockch", function() {deepEqual( Stem("glasglöckchen"), "glasglockch");});
test("glashelle -> glashell", function() {deepEqual( Stem("glashelle"), "glashell");});
test("glaskanzel -> glaskanzel", function() {deepEqual( Stem("glaskanzel"), "glaskanzel");});
test("glaskästchen -> glaskastch", function() {deepEqual( Stem("glaskästchen"), "glaskastch");});
test("glaskeulen -> glaskeul", function() {deepEqual( Stem("glaskeulen"), "glaskeul");});
test("glaskutsche -> glaskutsch", function() {deepEqual( Stem("glaskutsche"), "glaskutsch");});
test("glasperlen -> glasperl", function() {deepEqual( Stem("glasperlen"), "glasperl");});
test("glasschneiden -> glasschneid", function() {deepEqual( Stem("glasschneiden"), "glasschneid");});
test("glassteinchen -> glassteinch", function() {deepEqual( Stem("glassteinchen"), "glassteinch");});
test("glasstoff -> glasstoff", function() {deepEqual( Stem("glasstoff"), "glasstoff");});
test("glaswand -> glaswand", function() {deepEqual( Stem("glaswand"), "glaswand");});
test("glasziegeln -> glasziegeln", function() {deepEqual( Stem("glasziegeln"), "glasziegeln");});
test("glatt -> glatt", function() {deepEqual( Stem("glatt"), "glatt");});
test("glätte -> glatt", function() {deepEqual( Stem("glätte"), "glatt");});
test("glatten -> glatt", function() {deepEqual( Stem("glatten"), "glatt");});
test("glätten -> glatt", function() {deepEqual( Stem("glätten"), "glatt");});
test("glättete -> glattet", function() {deepEqual( Stem("glättete"), "glattet");});
test("glaub -> glaub", function() {deepEqual( Stem("glaub"), "glaub");});
test("glaube -> glaub", function() {deepEqual( Stem("glaube"), "glaub");});
test("glauben -> glaub", function() {deepEqual( Stem("glauben"), "glaub");});
test("glaubenden -> glaubend", function() {deepEqual( Stem("glaubenden"), "glaubend");});
test("glaubens -> glaub", function() {deepEqual( Stem("glaubens"), "glaub");});
test("glaubensartikel -> glaubensartikel", function() {deepEqual( Stem("glaubensartikel"), "glaubensartikel");});
test("glaubensbekenntnis -> glaubensbekenntnis", function() {deepEqual( Stem("glaubensbekenntnis"), "glaubensbekenntnis");});
test("glaubenserkenntnisse -> glaubenserkenntnis", function() {deepEqual( Stem("glaubenserkenntnisse"), "glaubenserkenntnis");});
test("glaubenserkenntnissen -> glaubenserkenntnis", function() {deepEqual( Stem("glaubenserkenntnissen"), "glaubenserkenntnis");});
test("glaubensfragen -> glaubensfrag", function() {deepEqual( Stem("glaubensfragen"), "glaubensfrag");});
test("glaubensgeheimnis -> glaubensgeheimnis", function() {deepEqual( Stem("glaubensgeheimnis"), "glaubensgeheimnis");});
test("glaubensgeheimnisse -> glaubensgeheimnis", function() {deepEqual( Stem("glaubensgeheimnisse"), "glaubensgeheimnis");});
test("glaubensguten -> glaubensgut", function() {deepEqual( Stem("glaubensguten"), "glaubensgut");});
test("glaubensleben -> glaubensleb", function() {deepEqual( Stem("glaubensleben"), "glaubensleb");});
test("glaubenslebens -> glaubensleb", function() {deepEqual( Stem("glaubenslebens"), "glaubensleb");});
test("glaubenslehre -> glaubenslehr", function() {deepEqual( Stem("glaubenslehre"), "glaubenslehr");});
test("glaubenslehren -> glaubenslehr", function() {deepEqual( Stem("glaubenslehren"), "glaubenslehr");});
test("glaubenssache -> glaubenssach", function() {deepEqual( Stem("glaubenssache"), "glaubenssach");});
test("glaubenssachen -> glaubenssach", function() {deepEqual( Stem("glaubenssachen"), "glaubenssach");});
test("glaubensüberreste -> glaubensuberr", function() {deepEqual( Stem("glaubensüberreste"), "glaubensuberr");});
test("glaubensvorschriften -> glaubensvorschrift", function() {deepEqual( Stem("glaubensvorschriften"), "glaubensvorschrift");});
test("glaubenswahre -> glaubenswahr", function() {deepEqual( Stem("glaubenswahre"), "glaubenswahr");});
test("glaubenswahren -> glaubenswahr", function() {deepEqual( Stem("glaubenswahren"), "glaubenswahr");});
test("glaubenswahres -> glaubenswahr", function() {deepEqual( Stem("glaubenswahres"), "glaubenswahr");});
test("glaubenswahrheit -> glaubenswahr", function() {deepEqual( Stem("glaubenswahrheit"), "glaubenswahr");});
test("glaubenswahrheiten -> glaubenswahr", function() {deepEqual( Stem("glaubenswahrheiten"), "glaubenswahr");});
test("glaubenswissenschaft -> glaubenswissenschaft", function() {deepEqual( Stem("glaubenswissenschaft"), "glaubenswissenschaft");});
test("glaubest -> glaub", function() {deepEqual( Stem("glaubest"), "glaub");});
test("glaubet -> glaubet", function() {deepEqual( Stem("glaubet"), "glaubet");});
test("gläubige -> glaubig", function() {deepEqual( Stem("gläubige"), "glaubig");});
test("gläubigen -> glaubig", function() {deepEqual( Stem("gläubigen"), "glaubig");});
test("gläubiger -> glaubig", function() {deepEqual( Stem("gläubiger"), "glaubig");});
test("gläubigern -> glaubig", function() {deepEqual( Stem("gläubigern"), "glaubig");});
test("glaubst -> glaub", function() {deepEqual( Stem("glaubst"), "glaub");});
test("glaubt -> glaubt", function() {deepEqual( Stem("glaubt"), "glaubt");});
test("glaubte -> glaubt", function() {deepEqual( Stem("glaubte"), "glaubt");});
test("glaubten -> glaubt", function() {deepEqual( Stem("glaubten"), "glaubt");});
test("glaubtet -> glaubtet", function() {deepEqual( Stem("glaubtet"), "glaubtet");});
test("glaubwürdig -> glaubwurd", function() {deepEqual( Stem("glaubwürdig"), "glaubwurd");});
test("glaubwürdige -> glaubwurd", function() {deepEqual( Stem("glaubwürdige"), "glaubwurd");});
test("glaubwürdigkeit -> glaubwurd", function() {deepEqual( Stem("glaubwürdigkeit"), "glaubwurd");});
test("glegen -> gleg", function() {deepEqual( Stem("glegen"), "gleg");});
test("glegenheit -> gleg", function() {deepEqual( Stem("glegenheit"), "gleg");});
test("gleich -> gleich", function() {deepEqual( Stem("gleich"), "gleich");});
test("gleichartig -> gleichart", function() {deepEqual( Stem("gleichartig"), "gleichart");});
test("gleichartiges -> gleichart", function() {deepEqual( Stem("gleichartiges"), "gleichart");});
test("gleichbedeutend -> gleichbedeut", function() {deepEqual( Stem("gleichbedeutend"), "gleichbedeut");});
test("gleiche -> gleich", function() {deepEqual( Stem("gleiche"), "gleich");});
test("gleichem -> gleich", function() {deepEqual( Stem("gleichem"), "gleich");});
test("gleichen -> gleich", function() {deepEqual( Stem("gleichen"), "gleich");});
test("gleichentags -> gleichentag", function() {deepEqual( Stem("gleichentags"), "gleichentag");});
test("gleicher -> gleich", function() {deepEqual( Stem("gleicher"), "gleich");});
test("gleichermassen -> gleichermass", function() {deepEqual( Stem("gleichermassen"), "gleichermass");});
test("gleicherzeit -> gleicherzeit", function() {deepEqual( Stem("gleicherzeit"), "gleicherzeit");});
test("gleiches -> gleich", function() {deepEqual( Stem("gleiches"), "gleich");});
test("gleichfalls -> gleichfall", function() {deepEqual( Stem("gleichfalls"), "gleichfall");});
test("gleichförmig -> gleichform", function() {deepEqual( Stem("gleichförmig"), "gleichform");});
test("gleichgeschätzt -> gleichgeschatzt", function() {deepEqual( Stem("gleichgeschätzt"), "gleichgeschatzt");});
test("gleichgesetzt -> gleichgesetzt", function() {deepEqual( Stem("gleichgesetzt"), "gleichgesetzt");});
test("gleichgewicht -> gleichgewicht", function() {deepEqual( Stem("gleichgewicht"), "gleichgewicht");});
test("gleichgültig -> gleichgult", function() {deepEqual( Stem("gleichgültig"), "gleichgult");});
test("gleichgültigkeit -> gleichgult", function() {deepEqual( Stem("gleichgültigkeit"), "gleichgult");});
test("gleichgültigste -> gleichgult", function() {deepEqual( Stem("gleichgültigste"), "gleichgult");});
test("gleichheit -> gleichheit", function() {deepEqual( Stem("gleichheit"), "gleichheit");});
test("gleichmass -> gleichmass", function() {deepEqual( Stem("gleichmass"), "gleichmass");});
test("gleichmaß -> gleichmass", function() {deepEqual( Stem("gleichmaß"), "gleichmass");});
test("gleichmässig -> gleichmass", function() {deepEqual( Stem("gleichmässig"), "gleichmass");});
test("gleichmässige -> gleichmass", function() {deepEqual( Stem("gleichmässige"), "gleichmass");});
test("gleichmässigen -> gleichmass", function() {deepEqual( Stem("gleichmässigen"), "gleichmass");});
test("gleichmut -> gleichmut", function() {deepEqual( Stem("gleichmut"), "gleichmut");});
test("gleichmütig -> gleichmut", function() {deepEqual( Stem("gleichmütig"), "gleichmut");});
test("gleichnis -> gleichnis", function() {deepEqual( Stem("gleichnis"), "gleichnis");});
test("gleichnissen -> gleichnis", function() {deepEqual( Stem("gleichnissen"), "gleichnis");});
test("gleichsah -> gleichsah", function() {deepEqual( Stem("gleichsah"), "gleichsah");});
test("gleichsam -> gleichsam", function() {deepEqual( Stem("gleichsam"), "gleichsam");});
test("gleichsehend -> gleichseh", function() {deepEqual( Stem("gleichsehend"), "gleichseh");});
test("gleichstellte -> gleichstellt", function() {deepEqual( Stem("gleichstellte"), "gleichstellt");});
test("gleicht -> gleicht", function() {deepEqual( Stem("gleicht"), "gleicht");});
test("gleichung -> gleichung", function() {deepEqual( Stem("gleichung"), "gleichung");});
test("gleichviel -> gleichviel", function() {deepEqual( Stem("gleichviel"), "gleichviel");});
test("gleichwie -> gleichwi", function() {deepEqual( Stem("gleichwie"), "gleichwi");});
test("gleichwohl -> gleichwohl", function() {deepEqual( Stem("gleichwohl"), "gleichwohl");});
test("gleichzeitig -> gleichzeit", function() {deepEqual( Stem("gleichzeitig"), "gleichzeit");});
test("gleichzeitigen -> gleichzeit", function() {deepEqual( Stem("gleichzeitigen"), "gleichzeit");});
test("gleichzumachen -> gleichzumach", function() {deepEqual( Stem("gleichzumachen"), "gleichzumach");});
test("gleis -> gleis", function() {deepEqual( Stem("gleis"), "gleis");});
test("gleise -> gleis", function() {deepEqual( Stem("gleise"), "gleis");});
test("gleissnerei -> gleissnerei", function() {deepEqual( Stem("gleissnerei"), "gleissnerei");});
test("gleitet -> gleitet", function() {deepEqual( Stem("gleitet"), "gleitet");});
test("glesen -> gles", function() {deepEqual( Stem("glesen"), "gles");});
test("glich -> glich", function() {deepEqual( Stem("glich"), "glich");});
test("glichen -> glich", function() {deepEqual( Stem("glichen"), "glich");});
test("glied -> glied", function() {deepEqual( Stem("glied"), "glied");});
test("glieder -> glied", function() {deepEqual( Stem("glieder"), "glied");});
test("gliederlein -> gliederlein", function() {deepEqual( Stem("gliederlein"), "gliederlein");});
test("gliedern -> glied", function() {deepEqual( Stem("gliedern"), "glied");});
test("glimmenden -> glimmend", function() {deepEqual( Stem("glimmenden"), "glimmend");});
test("glimmrigen -> glimmrig", function() {deepEqual( Stem("glimmrigen"), "glimmrig");});
test("glitt -> glitt", function() {deepEqual( Stem("glitt"), "glitt");});
test("glitten -> glitt", function() {deepEqual( Stem("glitten"), "glitt");});
test("glitzernde -> glitzernd", function() {deepEqual( Stem("glitzernde"), "glitzernd");});
test("glitzernden -> glitzernd", function() {deepEqual( Stem("glitzernden"), "glitzernd");});
test("glöckchen -> glockch", function() {deepEqual( Stem("glöckchen"), "glockch");});
test("glocke -> glock", function() {deepEqual( Stem("glocke"), "glock");});
test("glocken -> glock", function() {deepEqual( Stem("glocken"), "glock");});
test("glockengeläute -> glockengelaut", function() {deepEqual( Stem("glockengeläute"), "glockengelaut");});
test("glockenschläge -> glockenschlag", function() {deepEqual( Stem("glockenschläge"), "glockenschlag");});
test("glockenschnur -> glockenschnur", function() {deepEqual( Stem("glockenschnur"), "glockenschnur");});
test("glockenschönen -> glockenschon", function() {deepEqual( Stem("glockenschönen"), "glockenschon");});
test("glockenspiel -> glockenspiel", function() {deepEqual( Stem("glockenspiel"), "glockenspiel");});
test("glockenstimme -> glockenstimm", function() {deepEqual( Stem("glockenstimme"), "glockenstimm");});
test("glöcklein -> glocklein", function() {deepEqual( Stem("glöcklein"), "glocklein");});
test("gloria -> gloria", function() {deepEqual( Stem("gloria"), "gloria");});
test("glorie -> glori", function() {deepEqual( Stem("glorie"), "glori");});
test("glorreichen -> glorreich", function() {deepEqual( Stem("glorreichen"), "glorreich");});
test("glotzäugelchen -> glotzaugelch", function() {deepEqual( Stem("glotzäugelchen"), "glotzaugelch");});
test("glotzaugen -> glotzaug", function() {deepEqual( Stem("glotzaugen"), "glotzaug");});
test("glotzäugig -> glotzaug", function() {deepEqual( Stem("glotzäugig"), "glotzaug");});
test("glotzte -> glotzt", function() {deepEqual( Stem("glotzte"), "glotzt");});
test("glotzten -> glotzt", function() {deepEqual( Stem("glotzten"), "glotzt");});
test("glück -> gluck", function() {deepEqual( Stem("glück"), "gluck");});
test("glücke -> gluck", function() {deepEqual( Stem("glücke"), "gluck");});
test("glückes -> gluck", function() {deepEqual( Stem("glückes"), "gluck");});
test("glückhaften -> gluckhaft", function() {deepEqual( Stem("glückhaften"), "gluckhaft");});
test("glücklich -> glucklich", function() {deepEqual( Stem("glücklich"), "glucklich");});
test("glückliche -> glucklich", function() {deepEqual( Stem("glückliche"), "glucklich");});
test("glücklichen -> glucklich", function() {deepEqual( Stem("glücklichen"), "glucklich");});
test("glücklicher -> glucklich", function() {deepEqual( Stem("glücklicher"), "glucklich");});
test("glücklicheren -> glucklich", function() {deepEqual( Stem("glücklicheren"), "glucklich");});
test("glücklichern -> glucklich", function() {deepEqual( Stem("glücklichern"), "glucklich");});
test("glücklicherweise -> glucklicherweis", function() {deepEqual( Stem("glücklicherweise"), "glucklicherweis");});
test("glücklichste -> glucklich", function() {deepEqual( Stem("glücklichste"), "glucklich");});
test("glücklichsten -> glucklich", function() {deepEqual( Stem("glücklichsten"), "glucklich");});
test("glücks -> gluck", function() {deepEqual( Stem("glücks"), "gluck");});
test("glückselig -> glucksel", function() {deepEqual( Stem("glückselig"), "glucksel");});
test("glückselige -> glucksel", function() {deepEqual( Stem("glückselige"), "glucksel");});
test("glückseligen -> glucksel", function() {deepEqual( Stem("glückseligen"), "glucksel");});
test("glückseliger -> glucksel", function() {deepEqual( Stem("glückseliger"), "glucksel");});
test("glückseligkeit -> glucksel", function() {deepEqual( Stem("glückseligkeit"), "glucksel");});
test("glückseligkeitslehre -> gluckseligkeitslehr", function() {deepEqual( Stem("glückseligkeitslehre"), "gluckseligkeitslehr");});
test("glückseligkeitsprinzip -> gluckseligkeitsprinzip", function() {deepEqual( Stem("glückseligkeitsprinzip"), "gluckseligkeitsprinzip");});
test("glückseligkeitsprinzips -> gluckseligkeitsprinzips", function() {deepEqual( Stem("glückseligkeitsprinzips"), "gluckseligkeitsprinzips");});
test("glucksen -> glucks", function() {deepEqual( Stem("glucksen"), "glucks");});
test("glücksfall -> glucksfall", function() {deepEqual( Stem("glücksfall"), "glucksfall");});
test("glücksgefühle -> glucksgefuhl", function() {deepEqual( Stem("glücksgefühle"), "glucksgefuhl");});
test("glückskind -> gluckskind", function() {deepEqual( Stem("glückskind"), "gluckskind");});
test("glückt -> gluckt", function() {deepEqual( Stem("glückt"), "gluckt");});
test("glückwunsch -> gluckwunsch", function() {deepEqual( Stem("glückwunsch"), "gluckwunsch");});
test("glühen -> gluh", function() {deepEqual( Stem("glühen"), "gluh");});
test("glühend -> gluhend", function() {deepEqual( Stem("glühend"), "gluhend");});
test("glühende -> gluhend", function() {deepEqual( Stem("glühende"), "gluhend");});
test("glühenden -> gluhend", function() {deepEqual( Stem("glühenden"), "gluhend");});
test("glühender -> gluhend", function() {deepEqual( Stem("glühender"), "gluhend");});
test("glühendes -> gluhend", function() {deepEqual( Stem("glühendes"), "gluhend");});
test("glühendrot -> gluhendrot", function() {deepEqual( Stem("glühendrot"), "gluhendrot");});
test("glühendste -> gluhend", function() {deepEqual( Stem("glühendste"), "gluhend");});
test("glühlampe -> gluhlamp", function() {deepEqual( Stem("glühlampe"), "gluhlamp");});
test("glühte -> gluht", function() {deepEqual( Stem("glühte"), "gluht");});
test("glühten -> gluht", function() {deepEqual( Stem("glühten"), "gluht");});
test("glühwürmchen -> gluhwurmch", function() {deepEqual( Stem("glühwürmchen"), "gluhwurmch");});
test("glupft -> glupft", function() {deepEqual( Stem("glupft"), "glupft");});
test("glut -> glut", function() {deepEqual( Stem("glut"), "glut");});
test("gmacht -> gmacht", function() {deepEqual( Stem("gmacht"), "gmacht");});
test("gmeint -> gmeint", function() {deepEqual( Stem("gmeint"), "gmeint");});
test("gmerkt -> gmerkt", function() {deepEqual( Stem("gmerkt"), "gmerkt");});
test("gnade -> gnad", function() {deepEqual( Stem("gnade"), "gnad");});
test("gnaden -> gnad", function() {deepEqual( Stem("gnaden"), "gnad");});
test("gnadenbrot -> gnadenbrot", function() {deepEqual( Stem("gnadenbrot"), "gnadenbrot");});
test("gnadensonne -> gnadensonn", function() {deepEqual( Stem("gnadensonne"), "gnadensonn");});
test("gnadenstuhl -> gnadenstuhl", function() {deepEqual( Stem("gnadenstuhl"), "gnadenstuhl");});
test("gnadenstuhls -> gnadenstuhl", function() {deepEqual( Stem("gnadenstuhls"), "gnadenstuhl");});
test("gnädig -> gnadig", function() {deepEqual( Stem("gnädig"), "gnadig");});
test("gnädige -> gnadig", function() {deepEqual( Stem("gnädige"), "gnadig");});
test("gnädiger -> gnadig", function() {deepEqual( Stem("gnädiger"), "gnadig");});
test("gnädiglich -> gnadig", function() {deepEqual( Stem("gnädiglich"), "gnadig");});
test("gnädigste -> gnadig", function() {deepEqual( Stem("gnädigste"), "gnadig");});
test("gnante -> gnant", function() {deepEqual( Stem("gnante"), "gnant");});
test("gnau -> gnau", function() {deepEqual( Stem("gnau"), "gnau");});
test("gnommen -> gnomm", function() {deepEqual( Stem("gnommen"), "gnomm");});
test("gnug -> gnug", function() {deepEqual( Stem("gnug"), "gnug");});
test("gockelhahn -> gockelhahn", function() {deepEqual( Stem("gockelhahn"), "gockelhahn");});
test("gockelhahns -> gockelhahn", function() {deepEqual( Stem("gockelhahns"), "gockelhahn");});
test("goethe -> goeth", function() {deepEqual( Stem("goethe"), "goeth");});
test("gog -> gog", function() {deepEqual( Stem("gog"), "gog");});
test("göhl -> gohl", function() {deepEqual( Stem("göhl"), "gohl");});
test("gold -> gold", function() {deepEqual( Stem("gold"), "gold");});
test("goldach -> goldach", function() {deepEqual( Stem("goldach"), "goldach");});
test("goldacher -> goldach", function() {deepEqual( Stem("goldacher"), "goldach");});
test("goldbecher -> goldbech", function() {deepEqual( Stem("goldbecher"), "goldbech");});
test("goldbefrackter -> goldbefrackt", function() {deepEqual( Stem("goldbefrackter"), "goldbefrackt");});
test("goldbestecke -> goldbesteck", function() {deepEqual( Stem("goldbestecke"), "goldbesteck");});
test("goldbeutel -> goldbeutel", function() {deepEqual( Stem("goldbeutel"), "goldbeutel");});
test("goldblatt -> goldblatt", function() {deepEqual( Stem("goldblatt"), "goldblatt");});
test("goldblätter -> goldblatt", function() {deepEqual( Stem("goldblätter"), "goldblatt");});
test("goldblonden -> goldblond", function() {deepEqual( Stem("goldblonden"), "goldblond");});
test("goldbörtchen -> goldbortch", function() {deepEqual( Stem("goldbörtchen"), "goldbortch");});
test("goldbuchstaben -> goldbuchstab", function() {deepEqual( Stem("goldbuchstaben"), "goldbuchstab");});
test("golddress -> golddress", function() {deepEqual( Stem("golddress"), "golddress");});
test("golddreß -> golddress", function() {deepEqual( Stem("golddreß"), "golddress");});
test("golddukaten -> golddukat", function() {deepEqual( Stem("golddukaten"), "golddukat");});
test("golde -> gold", function() {deepEqual( Stem("golde"), "gold");});
test("goldene -> gold", function() {deepEqual( Stem("goldene"), "gold");});
test("goldenem -> gold", function() {deepEqual( Stem("goldenem"), "gold");});
test("goldenen -> gold", function() {deepEqual( Stem("goldenen"), "gold");});
test("goldener -> gold", function() {deepEqual( Stem("goldener"), "gold");});
test("goldenes -> gold", function() {deepEqual( Stem("goldenes"), "gold");});
test("goldes -> gold", function() {deepEqual( Stem("goldes"), "gold");});
test("goldfische -> goldfisch", function() {deepEqual( Stem("goldfische"), "goldfisch");});
test("goldfuchs -> goldfuch", function() {deepEqual( Stem("goldfuchs"), "goldfuch");});
test("goldfuchse -> goldfuchs", function() {deepEqual( Stem("goldfuchse"), "goldfuchs");});
test("goldgelbes -> goldgelb", function() {deepEqual( Stem("goldgelbes"), "goldgelb");});
test("goldgeschäfte -> goldgeschaft", function() {deepEqual( Stem("goldgeschäfte"), "goldgeschaft");});
test("goldgrube -> goldgrub", function() {deepEqual( Stem("goldgrube"), "goldgrub");});
test("goldgülden -> goldguld", function() {deepEqual( Stem("goldgülden"), "goldguld");});
test("goldhäubchen -> goldhaubch", function() {deepEqual( Stem("goldhäubchen"), "goldhaubch");});
test("goldhelm -> goldhelm", function() {deepEqual( Stem("goldhelm"), "goldhelm");});
test("goldig -> goldig", function() {deepEqual( Stem("goldig"), "goldig");});
test("goldigen -> goldig", function() {deepEqual( Stem("goldigen"), "goldig");});
test("goldketten -> goldkett", function() {deepEqual( Stem("goldketten"), "goldkett");});
test("goldkieswege -> goldkiesweg", function() {deepEqual( Stem("goldkieswege"), "goldkiesweg");});
test("goldknechte -> goldknecht", function() {deepEqual( Stem("goldknechte"), "goldknecht");});
test("goldkugeln -> goldkugeln", function() {deepEqual( Stem("goldkugeln"), "goldkugeln");});
test("goldlack -> goldlack", function() {deepEqual( Stem("goldlack"), "goldlack");});
test("goldne -> goldn", function() {deepEqual( Stem("goldne"), "goldn");});
test("goldnen -> goldn", function() {deepEqual( Stem("goldnen"), "goldn");});
test("goldpapier -> goldpapi", function() {deepEqual( Stem("goldpapier"), "goldpapi");});
test("goldreserven -> goldreserv", function() {deepEqual( Stem("goldreserven"), "goldreserv");});
test("goldscheibe -> goldscheib", function() {deepEqual( Stem("goldscheibe"), "goldscheib");});
test("goldschlangen -> goldschlang", function() {deepEqual( Stem("goldschlangen"), "goldschlang");});
test("goldschmied -> goldschmied", function() {deepEqual( Stem("goldschmied"), "goldschmied");});
test("goldschnüren -> goldschnur", function() {deepEqual( Stem("goldschnüren"), "goldschnur");});
test("goldstickereien -> goldstickerei", function() {deepEqual( Stem("goldstickereien"), "goldstickerei");});
test("goldstück -> goldstuck", function() {deepEqual( Stem("goldstück"), "goldstuck");});
test("goldstücke -> goldstuck", function() {deepEqual( Stem("goldstücke"), "goldstuck");});
test("goldtaler -> goldtal", function() {deepEqual( Stem("goldtaler"), "goldtal");});
test("goldtalern -> goldtal", function() {deepEqual( Stem("goldtalern"), "goldtal");});
test("goldtresse -> goldtress", function() {deepEqual( Stem("goldtresse"), "goldtress");});
test("goldwaage -> goldwaag", function() {deepEqual( Stem("goldwaage"), "goldwaag");});
test("gölte -> golt", function() {deepEqual( Stem("gölte"), "golt");});
test("gomorrah -> gomorrah", function() {deepEqual( Stem("gomorrah"), "gomorrah");});
test("gomorrahs -> gomorrah", function() {deepEqual( Stem("gomorrahs"), "gomorrah");});
test("gönne -> gonn", function() {deepEqual( Stem("gönne"), "gonn");});
test("gönnen -> gonn", function() {deepEqual( Stem("gönnen"), "gonn");});
test("gönner -> gonn", function() {deepEqual( Stem("gönner"), "gonn");});
test("gönnte -> gonnt", function() {deepEqual( Stem("gönnte"), "gonnt");});
test("goodbye -> goodby", function() {deepEqual( Stem("goodbye"), "goodby");});
test("gopher -> goph", function() {deepEqual( Stem("gopher"), "goph");});
test("gosen -> gos", function() {deepEqual( Stem("gosen"), "gos");});
test("goss -> goss", function() {deepEqual( Stem("goss"), "goss");});
test("goß -> goss", function() {deepEqual( Stem("goß"), "goss");});
test("gotisches -> gotisch", function() {deepEqual( Stem("gotisches"), "gotisch");});
test("gott -> gott", function() {deepEqual( Stem("gott"), "gott");});
test("götter -> gott", function() {deepEqual( Stem("götter"), "gott");});
test("götterbilder -> gotterbild", function() {deepEqual( Stem("götterbilder"), "gotterbild");});
test("göttern -> gott", function() {deepEqual( Stem("göttern"), "gott");});
test("gottes -> gott", function() {deepEqual( Stem("gottes"), "gott");});
test("gottesdienst -> gottesdien", function() {deepEqual( Stem("gottesdienst"), "gottesdien");});
test("gottesdienstbesucher -> gottesdienstbesuch", function() {deepEqual( Stem("gottesdienstbesucher"), "gottesdienstbesuch");});
test("gottesdienste -> gottesdien", function() {deepEqual( Stem("gottesdienste"), "gottesdien");});
test("gottesdiensten -> gottesdien", function() {deepEqual( Stem("gottesdiensten"), "gottesdien");});
test("gottesdienstes -> gottesdien", function() {deepEqual( Stem("gottesdienstes"), "gottesdien");});
test("gottesgelehrten -> gottesgelehrt", function() {deepEqual( Stem("gottesgelehrten"), "gottesgelehrt");});
test("gottesgelehrter -> gottesgelehrt", function() {deepEqual( Stem("gottesgelehrter"), "gottesgelehrt");});
test("gottesgläubig -> gottesglaub", function() {deepEqual( Stem("gottesgläubig"), "gottesglaub");});
test("gotteslästerlichsten -> gotteslast", function() {deepEqual( Stem("gotteslästerlichsten"), "gotteslast");});
test("gottesmannes -> gottesmann", function() {deepEqual( Stem("gottesmannes"), "gottesmann");});
test("gottesverehrung -> gottesverehr", function() {deepEqual( Stem("gottesverehrung"), "gottesverehr");});
test("gottfried -> gottfried", function() {deepEqual( Stem("gottfried"), "gottfried");});
test("gotthard -> gotthard", function() {deepEqual( Stem("gotthard"), "gotthard");});
test("gottheit -> gottheit", function() {deepEqual( Stem("gottheit"), "gottheit");});
test("göttin -> gottin", function() {deepEqual( Stem("göttin"), "gottin");});
test("göttlich -> gottlich", function() {deepEqual( Stem("göttlich"), "gottlich");});
test("göttliche -> gottlich", function() {deepEqual( Stem("göttliche"), "gottlich");});
test("göttlichen -> gottlich", function() {deepEqual( Stem("göttlichen"), "gottlich");});
test("göttlicher -> gottlich", function() {deepEqual( Stem("göttlicher"), "gottlich");});
test("göttliches -> gottlich", function() {deepEqual( Stem("göttliches"), "gottlich");});
test("gottlose -> gottlos", function() {deepEqual( Stem("gottlose"), "gottlos");});
test("gottlosen -> gottlos", function() {deepEqual( Stem("gottlosen"), "gottlos");});
test("gottloser -> gottlos", function() {deepEqual( Stem("gottloser"), "gottlos");});
test("gotts -> gott", function() {deepEqual( Stem("gotts"), "gott");});
test("gottsnamen -> gottsnam", function() {deepEqual( Stem("gottsnamen"), "gottsnam");});
test("gottverfluchts -> gottverflucht", function() {deepEqual( Stem("gottverfluchts"), "gottverflucht");});
test("gottverlassene -> gottverlass", function() {deepEqual( Stem("gottverlassene"), "gottverlass");});
test("götzen -> gotz", function() {deepEqual( Stem("götzen"), "gotz");});
test("götzenbild -> gotzenbild", function() {deepEqual( Stem("götzenbild"), "gotzenbild");});
test("götzenbilder -> gotzenbild", function() {deepEqual( Stem("götzenbilder"), "gotzenbild");});
test("götzenbildes -> gotzenbild", function() {deepEqual( Stem("götzenbildes"), "gotzenbild");});
test("götzendienerisch -> gotzendiener", function() {deepEqual( Stem("götzendienerisch"), "gotzendiener");});
test("götzendienerische -> gotzendiener", function() {deepEqual( Stem("götzendienerische"), "gotzendiener");});
test("götzendienerischen -> gotzendiener", function() {deepEqual( Stem("götzendienerischen"), "gotzendiener");});
test("götzendienerisches -> gotzendiener", function() {deepEqual( Stem("götzendienerisches"), "gotzendiener");});
test("götzendienst -> gotzendien", function() {deepEqual( Stem("götzendienst"), "gotzendien");});
test("götzensteine -> gotzenstein", function() {deepEqual( Stem("götzensteine"), "gotzenstein");});
test("gouvernement -> gouvernement", function() {deepEqual( Stem("gouvernement"), "gouvernement");});
test("gouverneur -> gouverneur", function() {deepEqual( Stem("gouverneur"), "gouverneur");});
test("gouverneurs -> gouverneur", function() {deepEqual( Stem("gouverneurs"), "gouverneur");});
test("grab -> grab", function() {deepEqual( Stem("grab"), "grab");});
test("grabbegleitung -> grabbegleit", function() {deepEqual( Stem("grabbegleitung"), "grabbegleit");});
test("grabe -> grab", function() {deepEqual( Stem("grabe"), "grab");});
test("graben -> grab", function() {deepEqual( Stem("graben"), "grab");});
test("gräben -> grab", function() {deepEqual( Stem("gräben"), "grab");});
test("gräber -> grab", function() {deepEqual( Stem("gräber"), "grab");});
test("gräbern -> grab", function() {deepEqual( Stem("gräbern"), "grab");});
test("grabesstill -> grabesstill", function() {deepEqual( Stem("grabesstill"), "grabesstill");});
test("grabtuch -> grabtuch", function() {deepEqual( Stem("grabtuch"), "grabtuch");});
test("grabtuchs -> grabtuch", function() {deepEqual( Stem("grabtuchs"), "grabtuch");});
test("grad -> grad", function() {deepEqual( Stem("grad"), "grad");});
test("gradaus -> gradaus", function() {deepEqual( Stem("gradaus"), "gradaus");});
test("gradausfahrendes -> gradausfahr", function() {deepEqual( Stem("gradausfahrendes"), "gradausfahr");});
test("grade -> grad", function() {deepEqual( Stem("grade"), "grad");});
test("graden -> grad", function() {deepEqual( Stem("graden"), "grad");});
test("grades -> grad", function() {deepEqual( Stem("grades"), "grad");});
test("gradezu -> gradezu", function() {deepEqual( Stem("gradezu"), "gradezu");});
test("gradheit -> gradheit", function() {deepEqual( Stem("gradheit"), "gradheit");});
test("gradlinigen -> gradlin", function() {deepEqual( Stem("gradlinigen"), "gradlin");});
test("graf -> graf", function() {deepEqual( Stem("graf"), "graf");});
test("grafen -> graf", function() {deepEqual( Stem("grafen"), "graf");});
test("grafenrock -> grafenrock", function() {deepEqual( Stem("grafenrock"), "grafenrock");});
test("grafensohn -> grafensohn", function() {deepEqual( Stem("grafensohn"), "grafensohn");});
test("gräfin -> grafin", function() {deepEqual( Stem("gräfin"), "grafin");});
test("gräfliche -> graflich", function() {deepEqual( Stem("gräfliche"), "graflich");});
test("gräflichem -> graflich", function() {deepEqual( Stem("gräflichem"), "graflich");});
test("gräflichen -> graflich", function() {deepEqual( Stem("gräflichen"), "graflich");});
test("gram -> gram", function() {deepEqual( Stem("gram"), "gram");});
test("grämen -> gram", function() {deepEqual( Stem("grämen"), "gram");});
test("grammaticale -> grammatical", function() {deepEqual( Stem("grammaticale"), "grammatical");});
test("grammatik -> grammat", function() {deepEqual( Stem("grammatik"), "grammat");});
test("grammophon -> grammophon", function() {deepEqual( Stem("grammophon"), "grammophon");});
test("gramvollen -> gramvoll", function() {deepEqual( Stem("gramvollen"), "gramvoll");});
test("granatbaum -> granatbaum", function() {deepEqual( Stem("granatbaum"), "granatbaum");});
test("granatblütenstrauss -> granatblutenstrauss", function() {deepEqual( Stem("granatblütenstrauss"), "granatblutenstrauss");});
test("granatwerfer -> granatwerf", function() {deepEqual( Stem("granatwerfer"), "granatwerf");});
test("granen -> gran", function() {deepEqual( Stem("granen"), "gran");});
test("granitklotz -> granitklotz", function() {deepEqual( Stem("granitklotz"), "granitklotz");});
test("gras -> gras", function() {deepEqual( Stem("gras"), "gras");});
test("grase -> gras", function() {deepEqual( Stem("grase"), "gras");});
test("grasen -> gras", function() {deepEqual( Stem("grasen"), "gras");});
test("gräser -> gras", function() {deepEqual( Stem("gräser"), "gras");});
test("gräsern -> gras", function() {deepEqual( Stem("gräsern"), "gras");});
test("grashälmchen -> grashalmch", function() {deepEqual( Stem("grashälmchen"), "grashalmch");});
test("grasigen -> grasig", function() {deepEqual( Stem("grasigen"), "grasig");});
test("grasreich -> grasreich", function() {deepEqual( Stem("grasreich"), "grasreich");});
test("grasreichen -> grasreich", function() {deepEqual( Stem("grasreichen"), "grasreich");});
test("gräßlich -> grasslich", function() {deepEqual( Stem("gräßlich"), "grasslich");});
test("grässliche -> grasslich", function() {deepEqual( Stem("grässliche"), "grasslich");});
test("gräßliche -> grasslich", function() {deepEqual( Stem("gräßliche"), "grasslich");});
test("grässlichen -> grasslich", function() {deepEqual( Stem("grässlichen"), "grasslich");});
test("gräßlichen -> grasslich", function() {deepEqual( Stem("gräßlichen"), "grasslich");});
test("grässlichsten -> grasslich", function() {deepEqual( Stem("grässlichsten"), "grasslich");});
test("grasten -> grast", function() {deepEqual( Stem("grasten"), "grast");});
test("grasteufeln -> grasteufeln", function() {deepEqual( Stem("grasteufeln"), "grasteufeln");});
test("grasüberwachsene -> grasuberwachs", function() {deepEqual( Stem("grasüberwachsene"), "grasuberwachs");});
test("grat -> grat", function() {deepEqual( Stem("grat"), "grat");});
test("gratis -> gratis", function() {deepEqual( Stem("gratis"), "gratis");});
test("gratulierte -> gratuliert", function() {deepEqual( Stem("gratulierte"), "gratuliert");});
test("grau -> grau", function() {deepEqual( Stem("grau"), "grau");});
test("graubärtigen -> graubart", function() {deepEqual( Stem("graubärtigen"), "graubart");});
test("graublauen -> graublau", function() {deepEqual( Stem("graublauen"), "graublau");});
test("graue -> grau", function() {deepEqual( Stem("graue"), "grau");});
test("grauem -> grau", function() {deepEqual( Stem("grauem"), "grau");});
test("grauen -> grau", function() {deepEqual( Stem("grauen"), "grau");});
test("grauendem -> grauend", function() {deepEqual( Stem("grauendem"), "grauend");});
test("grauenvollen -> grauenvoll", function() {deepEqual( Stem("grauenvollen"), "grauenvoll");});
test("grauer -> grau", function() {deepEqual( Stem("grauer"), "grau");});
test("graues -> grau", function() {deepEqual( Stem("graues"), "grau");});
test("graumeliertes -> graumeliert", function() {deepEqual( Stem("graumeliertes"), "graumeliert");});
test("grausam -> grausam", function() {deepEqual( Stem("grausam"), "grausam");});
test("grausamen -> grausam", function() {deepEqual( Stem("grausamen"), "grausam");});
test("grausamerweise -> grausamerweis", function() {deepEqual( Stem("grausamerweise"), "grausamerweis");});
test("grausames -> grausam", function() {deepEqual( Stem("grausames"), "grausam");});
test("grausamkeit -> grausam", function() {deepEqual( Stem("grausamkeit"), "grausam");});
test("grauschwarzen -> grauschwarz", function() {deepEqual( Stem("grauschwarzen"), "grauschwarz");});
test("grausen -> graus", function() {deepEqual( Stem("grausen"), "graus");});
test("grausens -> graus", function() {deepEqual( Stem("grausens"), "graus");});
test("graute -> graut", function() {deepEqual( Stem("graute"), "graut");});
test("grauweiss -> grauweiss", function() {deepEqual( Stem("grauweiss"), "grauweiss");});
test("grauweissen -> grauweiss", function() {deepEqual( Stem("grauweissen"), "grauweiss");});
test("grauzone -> grauzon", function() {deepEqual( Stem("grauzone"), "grauzon");});
test("gravierende -> gravier", function() {deepEqual( Stem("gravierende"), "gravier");});
test("gravierenden -> gravier", function() {deepEqual( Stem("gravierenden"), "gravier");});
test("gravität -> gravitat", function() {deepEqual( Stem("gravität"), "gravitat");});
test("gravitätisch -> gravitat", function() {deepEqual( Stem("gravitätisch"), "gravitat");});
test("grazilsten -> grazil", function() {deepEqual( Stem("grazilsten"), "grazil");});
test("gredt -> gredt", function() {deepEqual( Stem("gredt"), "gredt");});
test("grehm -> grehm", function() {deepEqual( Stem("grehm"), "grehm");});
test("greifen -> greif", function() {deepEqual( Stem("greifen"), "greif");});
test("greifenden -> greifend", function() {deepEqual( Stem("greifenden"), "greifend");});
test("greifliche -> greiflich", function() {deepEqual( Stem("greifliche"), "greiflich");});
test("greift -> greift", function() {deepEqual( Stem("greift"), "greift");});
test("greinige -> greinig", function() {deepEqual( Stem("greinige"), "greinig");});
test("greinstimme -> greinstimm", function() {deepEqual( Stem("greinstimme"), "greinstimm");});
test("greis -> greis", function() {deepEqual( Stem("greis"), "greis");});
test("greise -> greis", function() {deepEqual( Stem("greise"), "greis");});
test("greisen -> greis", function() {deepEqual( Stem("greisen"), "greis");});
test("greisenalter -> greisenalt", function() {deepEqual( Stem("greisenalter"), "greisenalt");});
test("greisengestalt -> greisengestalt", function() {deepEqual( Stem("greisengestalt"), "greisengestalt");});
test("greisenhafter -> greisenhaft", function() {deepEqual( Stem("greisenhafter"), "greisenhaft");});
test("greisenhaftigkeit -> greisenhaft", function() {deepEqual( Stem("greisenhaftigkeit"), "greisenhaft");});
test("greisentums -> greisentum", function() {deepEqual( Stem("greisentums"), "greisentum");});
test("grell -> grell", function() {deepEqual( Stem("grell"), "grell");});
test("grellen -> grell", function() {deepEqual( Stem("grellen"), "grell");});
test("gremium -> gremium", function() {deepEqual( Stem("gremium"), "gremium");});
test("grendelmeier -> grendelmei", function() {deepEqual( Stem("grendelmeier"), "grendelmei");});
test("grenz -> grenz", function() {deepEqual( Stem("grenz"), "grenz");});
test("grenzbauden -> grenzbaud", function() {deepEqual( Stem("grenzbauden"), "grenzbaud");});
test("grenzbestimmung -> grenzbestimm", function() {deepEqual( Stem("grenzbestimmung"), "grenzbestimm");});
test("grenzbezirk -> grenzbezirk", function() {deepEqual( Stem("grenzbezirk"), "grenzbezirk");});
test("grenze -> grenz", function() {deepEqual( Stem("grenze"), "grenz");});
test("grenzen -> grenz", function() {deepEqual( Stem("grenzen"), "grenz");});
test("grenzenlos -> grenzenlos", function() {deepEqual( Stem("grenzenlos"), "grenzenlos");});
test("grenzenlose -> grenzenlos", function() {deepEqual( Stem("grenzenlose"), "grenzenlos");});
test("grenzenlosen -> grenzenlos", function() {deepEqual( Stem("grenzenlosen"), "grenzenlos");});
test("grenzscheide -> grenzscheid", function() {deepEqual( Stem("grenzscheide"), "grenzscheid");});
test("grenzschenke -> grenzschenk", function() {deepEqual( Stem("grenzschenke"), "grenzschenk");});
test("grenzt -> grenzt", function() {deepEqual( Stem("grenzt"), "grenzt");});
test("grenzte -> grenzt", function() {deepEqual( Stem("grenzte"), "grenzt");});
test("grete -> gret", function() {deepEqual( Stem("grete"), "gret");});
test("greuel -> greuel", function() {deepEqual( Stem("greuel"), "greuel");});
test("greuelhafte -> greuelhaft", function() {deepEqual( Stem("greuelhafte"), "greuelhaft");});
test("greuelhaftes -> greuelhaft", function() {deepEqual( Stem("greuelhaftes"), "greuelhaft");});
test("greueln -> greueln", function() {deepEqual( Stem("greueln"), "greueln");});
test("greuels -> greuel", function() {deepEqual( Stem("greuels"), "greuel");});
test("greueltaten -> greueltat", function() {deepEqual( Stem("greueltaten"), "greueltat");});
test("greulich -> greulich", function() {deepEqual( Stem("greulich"), "greulich");});
test("greuliche -> greulich", function() {deepEqual( Stem("greuliche"), "greulich");});
test("greulichem -> greulich", function() {deepEqual( Stem("greulichem"), "greulich");});
test("greulichen -> greulich", function() {deepEqual( Stem("greulichen"), "greulich");});
test("greulicher -> greulich", function() {deepEqual( Stem("greulicher"), "greulich");});
test("greuliches -> greulich", function() {deepEqual( Stem("greuliches"), "greulich");});
test("greve -> grev", function() {deepEqual( Stem("greve"), "grev");});
test("griechen -> griech", function() {deepEqual( Stem("griechen"), "griech");});
test("griechenland -> griechenland", function() {deepEqual( Stem("griechenland"), "griechenland");});
test("griechische -> griechisch", function() {deepEqual( Stem("griechische"), "griechisch");});
test("griechischem -> griechisch", function() {deepEqual( Stem("griechischem"), "griechisch");});
test("griechischen -> griechisch", function() {deepEqual( Stem("griechischen"), "griechisch");});
test("griff -> griff", function() {deepEqual( Stem("griff"), "griff");});
test("griffen -> griff", function() {deepEqual( Stem("griffen"), "griff");});
test("grille -> grill", function() {deepEqual( Stem("grille"), "grill");});
test("grillen -> grill", function() {deepEqual( Stem("grillen"), "grill");});
test("grimassen -> grimass", function() {deepEqual( Stem("grimassen"), "grimass");});
test("grimm -> grimm", function() {deepEqual( Stem("grimm"), "grimm");});
test("grimmig -> grimmig", function() {deepEqual( Stem("grimmig"), "grimmig");});
test("grimmige -> grimmig", function() {deepEqual( Stem("grimmige"), "grimmig");});
test("grimmigem -> grimmig", function() {deepEqual( Stem("grimmigem"), "grimmig");});
test("grimmigen -> grimmig", function() {deepEqual( Stem("grimmigen"), "grimmig");});
test("grimmiger -> grimmig", function() {deepEqual( Stem("grimmiger"), "grimmig");});
test("grimmiges -> grimmig", function() {deepEqual( Stem("grimmiges"), "grimmig");});
test("grimmigste -> grimmig", function() {deepEqual( Stem("grimmigste"), "grimmig");});
test("grimms -> grimm", function() {deepEqual( Stem("grimms"), "grimm");});
test("grind -> grind", function() {deepEqual( Stem("grind"), "grind");});
test("gringsten -> gring", function() {deepEqual( Stem("gringsten"), "gring");});
test("grinsend -> grinsend", function() {deepEqual( Stem("grinsend"), "grinsend");});
test("grinste -> grin", function() {deepEqual( Stem("grinste"), "grin");});
test("grissen -> griss", function() {deepEqual( Stem("grissen"), "griss");});
test("grissend -> grissend", function() {deepEqual( Stem("grissend"), "grissend");});
test("grob -> grob", function() {deepEqual( Stem("grob"), "grob");});
test("grobe -> grob", function() {deepEqual( Stem("grobe"), "grob");});
test("grobem -> grob", function() {deepEqual( Stem("grobem"), "grob");});
test("groben -> grob", function() {deepEqual( Stem("groben"), "grob");});
test("grober -> grob", function() {deepEqual( Stem("grober"), "grob");});
test("gröber -> grob", function() {deepEqual( Stem("gröber"), "grob");});
test("gröberen -> grob", function() {deepEqual( Stem("gröberen"), "grob");});
test("gröbern -> grob", function() {deepEqual( Stem("gröbern"), "grob");});
test("grobes -> grob", function() {deepEqual( Stem("grobes"), "grob");});
test("grobheit -> grobheit", function() {deepEqual( Stem("grobheit"), "grobheit");});
test("gröblich -> groblich", function() {deepEqual( Stem("gröblich"), "groblich");});
test("gröbsten -> grob", function() {deepEqual( Stem("gröbsten"), "grob");});
test("grölen -> grol", function() {deepEqual( Stem("grölen"), "grol");});
test("groll -> groll", function() {deepEqual( Stem("groll"), "groll");});
test("grolle -> groll", function() {deepEqual( Stem("grolle"), "groll");});
test("grollend -> grollend", function() {deepEqual( Stem("grollend"), "grollend");});
test("grollendem -> grollend", function() {deepEqual( Stem("grollendem"), "grollend");});
test("grollenden -> grollend", function() {deepEqual( Stem("grollenden"), "grollend");});
test("grollte -> grollt", function() {deepEqual( Stem("grollte"), "grollt");});
test("groove -> groov", function() {deepEqual( Stem("groove"), "groov");});
test("gross -> gross", function() {deepEqual( Stem("gross"), "gross");});
test("groß -> gross", function() {deepEqual( Stem("groß"), "gross");});
test("grossartig -> grossart", function() {deepEqual( Stem("grossartig"), "grossart");});
test("großartig -> grossart", function() {deepEqual( Stem("großartig"), "grossart");});
test("grossartige -> grossart", function() {deepEqual( Stem("grossartige"), "grossart");});
test("großartige -> grossart", function() {deepEqual( Stem("großartige"), "grossart");});
test("grossartiger -> grossart", function() {deepEqual( Stem("grossartiger"), "grossart");});
test("großartiger -> grossart", function() {deepEqual( Stem("großartiger"), "grossart");});
test("großartiges -> grossart", function() {deepEqual( Stem("großartiges"), "grossart");});
test("grossartigte -> grossartigt", function() {deepEqual( Stem("grossartigte"), "grossartigt");});
test("grossaupa -> grossaupa", function() {deepEqual( Stem("grossaupa"), "grossaupa");});
test("großaupa -> grossaupa", function() {deepEqual( Stem("großaupa"), "grossaupa");});
test("grossbanken -> grossbank", function() {deepEqual( Stem("grossbanken"), "grossbank");});
test("grossblumigen -> grossblum", function() {deepEqual( Stem("grossblumigen"), "grossblum");});
test("grossbritannien -> grossbritanni", function() {deepEqual( Stem("grossbritannien"), "grossbritanni");});
test("grosse -> gross", function() {deepEqual( Stem("grosse"), "gross");});
test("große -> gross", function() {deepEqual( Stem("große"), "gross");});
test("grösse -> gross", function() {deepEqual( Stem("grösse"), "gross");});
test("größe -> gross", function() {deepEqual( Stem("größe"), "gross");});
test("grossem -> gross", function() {deepEqual( Stem("grossem"), "gross");});
test("großem -> gross", function() {deepEqual( Stem("großem"), "gross");});
test("grossen -> gross", function() {deepEqual( Stem("grossen"), "gross");});
test("großen -> gross", function() {deepEqual( Stem("großen"), "gross");});
test("grössen -> gross", function() {deepEqual( Stem("grössen"), "gross");});
test("grosser -> gross", function() {deepEqual( Stem("grosser"), "gross");});
test("großer -> gross", function() {deepEqual( Stem("großer"), "gross");});
test("grösser -> gross", function() {deepEqual( Stem("grösser"), "gross");});
test("größer -> gross", function() {deepEqual( Stem("größer"), "gross");});
test("grössere -> gross", function() {deepEqual( Stem("grössere"), "gross");});
test("größere -> gross", function() {deepEqual( Stem("größere"), "gross");});
test("grösserem -> gross", function() {deepEqual( Stem("grösserem"), "gross");});
test("größerem -> gross", function() {deepEqual( Stem("größerem"), "gross");});
test("grösseren -> gross", function() {deepEqual( Stem("grösseren"), "gross");});
test("größeren -> gross", function() {deepEqual( Stem("größeren"), "gross");});
test("grösserer -> gross", function() {deepEqual( Stem("grösserer"), "gross");});
test("größerer -> gross", function() {deepEqual( Stem("größerer"), "gross");});
test("grösseres -> gross", function() {deepEqual( Stem("grösseres"), "gross");});
test("größeres -> gross", function() {deepEqual( Stem("größeres"), "gross");});
test("grösserm -> grosserm", function() {deepEqual( Stem("grösserm"), "grosserm");});
test("grössern -> gross", function() {deepEqual( Stem("grössern"), "gross");});
test("grosses -> gross", function() {deepEqual( Stem("grosses"), "gross");});
test("großes -> gross", function() {deepEqual( Stem("großes"), "gross");});
test("grossherrn -> grossherrn", function() {deepEqual( Stem("grossherrn"), "grossherrn");});
test("großkariertes -> grosskariert", function() {deepEqual( Stem("großkariertes"), "grosskariert");});
test("grosskhan -> grosskhan", function() {deepEqual( Stem("grosskhan"), "grosskhan");});
test("grossknecht -> grossknecht", function() {deepEqual( Stem("grossknecht"), "grossknecht");});
test("grossmächtige -> grossmacht", function() {deepEqual( Stem("grossmächtige"), "grossmacht");});
test("grossmächtigen -> grossmacht", function() {deepEqual( Stem("grossmächtigen"), "grossmacht");});
test("grossmächtiges -> grossmacht", function() {deepEqual( Stem("grossmächtiges"), "grossmacht");});
test("grossmut -> grossmut", function() {deepEqual( Stem("grossmut"), "grossmut");});
test("grossmütige -> grossmut", function() {deepEqual( Stem("grossmütige"), "grossmut");});
test("grossmütigen -> grossmut", function() {deepEqual( Stem("grossmütigen"), "grossmut");});
test("grossmutter -> grossmutt", function() {deepEqual( Stem("grossmutter"), "grossmutt");});
test("großmutter -> grossmutt", function() {deepEqual( Stem("großmutter"), "grossmutt");});
test("großmütter -> grossmutt", function() {deepEqual( Stem("großmütter"), "grossmutt");});
test("grossratsmitglied -> grossratsmitglied", function() {deepEqual( Stem("grossratsmitglied"), "grossratsmitglied");});
test("großstadt -> grossstadt", function() {deepEqual( Stem("großstadt"), "grossstadt");});
test("grossstädte -> grossstadt", function() {deepEqual( Stem("grossstädte"), "grossstadt");});
test("grösste -> grosst", function() {deepEqual( Stem("grösste"), "grosst");});
test("größte -> grosst", function() {deepEqual( Stem("größte"), "grosst");});
test("grössten -> grosst", function() {deepEqual( Stem("grössten"), "grosst");});
test("größten -> grosst", function() {deepEqual( Stem("größten"), "grosst");});
test("grösstenteils -> grosstenteil", function() {deepEqual( Stem("grösstenteils"), "grosstenteil");});
test("größtenteils -> grosstenteil", function() {deepEqual( Stem("größtenteils"), "grosstenteil");});
test("grösster -> grosst", function() {deepEqual( Stem("grösster"), "grosst");});
test("grösstes -> grosst", function() {deepEqual( Stem("grösstes"), "grosst");});
test("größtes -> grosst", function() {deepEqual( Stem("größtes"), "grosst");});
test("grösstmögliche -> grosstmog", function() {deepEqual( Stem("grösstmögliche"), "grosstmog");});
test("grosstuerei -> grosstuerei", function() {deepEqual( Stem("grosstuerei"), "grosstuerei");});
test("grossvater -> grossvat", function() {deepEqual( Stem("grossvater"), "grossvat");});
test("großvater -> grossvat", function() {deepEqual( Stem("großvater"), "grossvat");});
test("grossvaters -> grossvat", function() {deepEqual( Stem("grossvaters"), "grossvat");});
test("großvaters -> grossvat", function() {deepEqual( Stem("großvaters"), "grossvat");});
test("grossvaterstuhl -> grossvaterstuhl", function() {deepEqual( Stem("grossvaterstuhl"), "grossvaterstuhl");});
test("grosszügigen -> grosszug", function() {deepEqual( Stem("grosszügigen"), "grosszug");});
test("grosszuziehen -> grosszuzieh", function() {deepEqual( Stem("grosszuziehen"), "grosszuzieh");});
test("grub -> grub", function() {deepEqual( Stem("grub"), "grub");});
test("grubach -> grubach", function() {deepEqual( Stem("grubach"), "grubach");});
test("grube -> grub", function() {deepEqual( Stem("grube"), "grub");});
test("grübeleien -> grubelei", function() {deepEqual( Stem("grübeleien"), "grubelei");});
test("grübelt -> grubelt", function() {deepEqual( Stem("grübelt"), "grubelt");});
test("grübelte -> grubelt", function() {deepEqual( Stem("grübelte"), "grubelt");});
test("gruben -> grub", function() {deepEqual( Stem("gruben"), "grub");});
test("grubenkessel -> grubenkessel", function() {deepEqual( Stem("grubenkessel"), "grubenkessel");});
test("grüblerisch -> grubler", function() {deepEqual( Stem("grüblerisch"), "grubler");});
test("grüblerische -> grubler", function() {deepEqual( Stem("grüblerische"), "grubler");});
test("grumpelt -> grumpelt", function() {deepEqual( Stem("grumpelt"), "grumpelt");});
test("grün -> grun", function() {deepEqual( Stem("grün"), "grun");});
test("grünbemaltes -> grunbemalt", function() {deepEqual( Stem("grünbemaltes"), "grunbemalt");});
test("grund -> grund", function() {deepEqual( Stem("grund"), "grund");});
test("grundbegriff -> grundbegriff", function() {deepEqual( Stem("grundbegriff"), "grundbegriff");});
test("grundbesitzer -> grundbesitz", function() {deepEqual( Stem("grundbesitzer"), "grundbesitz");});
test("grunddienst -> grunddien", function() {deepEqual( Stem("grunddienst"), "grunddien");});
test("grunde -> grund", function() {deepEqual( Stem("grunde"), "grund");});
test("gründe -> grund", function() {deepEqual( Stem("gründe"), "grund");});
test("gründen -> grund", function() {deepEqual( Stem("gründen"), "grund");});
test("gründende -> grundend", function() {deepEqual( Stem("gründende"), "grundend");});
test("gründer -> grund", function() {deepEqual( Stem("gründer"), "grund");});
test("grundes -> grund", function() {deepEqual( Stem("grundes"), "grund");});
test("gründet -> grundet", function() {deepEqual( Stem("gründet"), "grundet");});
test("gründete -> grundet", function() {deepEqual( Stem("gründete"), "grundet");});
test("grundfalschen -> grundfalsch", function() {deepEqual( Stem("grundfalschen"), "grundfalsch");});
test("grundfesten -> grundf", function() {deepEqual( Stem("grundfesten"), "grundf");});
test("grundgesetz -> grundgesetz", function() {deepEqual( Stem("grundgesetz"), "grundgesetz");});
test("grundgesetzes -> grundgesetz", function() {deepEqual( Stem("grundgesetzes"), "grundgesetz");});
test("grundherrlichen -> grundherr", function() {deepEqual( Stem("grundherrlichen"), "grundherr");});
test("grundlage -> grundlag", function() {deepEqual( Stem("grundlage"), "grundlag");});
test("grundlagen -> grundlag", function() {deepEqual( Stem("grundlagen"), "grundlag");});
test("grundlegenden -> grundleg", function() {deepEqual( Stem("grundlegenden"), "grundleg");});
test("gründlich -> grundlich", function() {deepEqual( Stem("gründlich"), "grundlich");});
test("gründlichen -> grundlich", function() {deepEqual( Stem("gründlichen"), "grundlich");});
test("gründliches -> grundlich", function() {deepEqual( Stem("gründliches"), "grundlich");});
test("gründlinge -> grundling", function() {deepEqual( Stem("gründlinge"), "grundling");});
test("grundlos -> grundlos", function() {deepEqual( Stem("grundlos"), "grundlos");});
test("grundlose -> grundlos", function() {deepEqual( Stem("grundlose"), "grundlos");});
test("grundmauern -> grundmau", function() {deepEqual( Stem("grundmauern"), "grundmau");});
test("gründonnerstag -> grundonnerstag", function() {deepEqual( Stem("gründonnerstag"), "grundonnerstag");});
test("grundsatz -> grundsatz", function() {deepEqual( Stem("grundsatz"), "grundsatz");});
test("grundsatze -> grundsatz", function() {deepEqual( Stem("grundsatze"), "grundsatz");});
test("grundsätze -> grundsatz", function() {deepEqual( Stem("grundsätze"), "grundsatz");});
test("grundsätzen -> grundsatz", function() {deepEqual( Stem("grundsätzen"), "grundsatz");});
test("grundsatzes -> grundsatz", function() {deepEqual( Stem("grundsatzes"), "grundsatz");});
test("grundsätzlich -> grundsatz", function() {deepEqual( Stem("grundsätzlich"), "grundsatz");});
test("grundsprache -> grundsprach", function() {deepEqual( Stem("grundsprache"), "grundsprach");});
test("grundstein -> grundstein", function() {deepEqual( Stem("grundstein"), "grundstein");});
test("grundtext -> grundtext", function() {deepEqual( Stem("grundtext"), "grundtext");});
test("grundtone -> grundton", function() {deepEqual( Stem("grundtone"), "grundton");});
test("gründung -> grundung", function() {deepEqual( Stem("gründung"), "grundung");});
test("grüne -> grun", function() {deepEqual( Stem("grüne"), "grun");});
test("grünem -> grun", function() {deepEqual( Stem("grünem"), "grun");});
test("grünen -> grun", function() {deepEqual( Stem("grünen"), "grun");});
test("grüner -> grun", function() {deepEqual( Stem("grüner"), "grun");});
test("grünes -> grun", function() {deepEqual( Stem("grünes"), "grun");});
test("grünfräckiger -> grunfrack", function() {deepEqual( Stem("grünfräckiger"), "grunfrack");});
test("grünliche -> grunlich", function() {deepEqual( Stem("grünliche"), "grunlich");});
test("grünlichen -> grunlich", function() {deepEqual( Stem("grünlichen"), "grunlich");});
test("grünrot -> grunrot", function() {deepEqual( Stem("grünrot"), "grunrot");});
test("grünseidenen -> grunseid", function() {deepEqual( Stem("grünseidenen"), "grunseid");});
test("grünspecht -> grunspecht", function() {deepEqual( Stem("grünspecht"), "grunspecht");});
test("grünst -> grun", function() {deepEqual( Stem("grünst"), "grun");});
test("grunzen -> grunz", function() {deepEqual( Stem("grunzen"), "grunz");});
test("grunzend -> grunzend", function() {deepEqual( Stem("grunzend"), "grunzend");});
test("gruppe -> grupp", function() {deepEqual( Stem("gruppe"), "grupp");});
test("gruppen -> grupp", function() {deepEqual( Stem("gruppen"), "grupp");});
test("gruppenweise -> gruppenweis", function() {deepEqual( Stem("gruppenweise"), "gruppenweis");});
test("gruseligen -> grusel", function() {deepEqual( Stem("gruseligen"), "grusel");});
test("gruss -> gruss", function() {deepEqual( Stem("gruss"), "gruss");});
test("gruß -> gruss", function() {deepEqual( Stem("gruß"), "gruss");});
test("grüss -> gruss", function() {deepEqual( Stem("grüss"), "gruss");});
test("grussadresse -> grussadress", function() {deepEqual( Stem("grussadresse"), "grussadress");});
test("grusse -> gruss", function() {deepEqual( Stem("grusse"), "gruss");});
test("grüsse -> gruss", function() {deepEqual( Stem("grüsse"), "gruss");});
test("grüße -> gruss", function() {deepEqual( Stem("grüße"), "gruss");});
test("grüssen -> gruss", function() {deepEqual( Stem("grüssen"), "gruss");});
test("grüssend -> grussend", function() {deepEqual( Stem("grüssend"), "grussend");});
test("grüßend -> grussend", function() {deepEqual( Stem("grüßend"), "grussend");});
test("grüsste -> grusst", function() {deepEqual( Stem("grüsste"), "grusst");});
test("grüßte -> grusst", function() {deepEqual( Stem("grüßte"), "grusst");});
test("grüssten -> grusst", function() {deepEqual( Stem("grüssten"), "grusst");});
test("grüßten -> grusst", function() {deepEqual( Stem("grüßten"), "grusst");});
test("grusswort -> grusswort", function() {deepEqual( Stem("grusswort"), "grusswort");});
test("gsagt -> gsagt", function() {deepEqual( Stem("gsagt"), "gsagt");});
test("gsangl -> gsangl", function() {deepEqual( Stem("gsangl"), "gsangl");});
test("gsangln -> gsangln", function() {deepEqual( Stem("gsangln"), "gsangln");});
test("gschäft -> gschaft", function() {deepEqual( Stem("gschäft"), "gschaft");});
test("gscheid -> gscheid", function() {deepEqual( Stem("gscheid"), "gscheid");});
test("gscheids -> gscheid", function() {deepEqual( Stem("gscheids"), "gscheid");});
test("gschicht -> gschicht", function() {deepEqual( Stem("gschicht"), "gschicht");});
test("gschieht -> gschieht", function() {deepEqual( Stem("gschieht"), "gschieht");});
test("gschwind -> gschwind", function() {deepEqual( Stem("gschwind"), "gschwind");});
test("gschwister -> gschwist", function() {deepEqual( Stem("gschwister"), "gschwist");});
test("gsessen -> gsess", function() {deepEqual( Stem("gsessen"), "gsess");});
test("gsetzt -> gsetzt", function() {deepEqual( Stem("gsetzt"), "gsetzt");});
test("gsicht -> gsicht", function() {deepEqual( Stem("gsicht"), "gsicht");});
test("gspart -> gspart", function() {deepEqual( Stem("gspart"), "gspart");});
test("gsperrt -> gsperrt", function() {deepEqual( Stem("gsperrt"), "gsperrt");});
test("gspitzt -> gspitzt", function() {deepEqual( Stem("gspitzt"), "gspitzt");});
test("gstanden -> gstand", function() {deepEqual( Stem("gstanden"), "gstand");});
test("gstanzln -> gstanzln", function() {deepEqual( Stem("gstanzln"), "gstanzln");});
test("gstorben -> gstorb", function() {deepEqual( Stem("gstorben"), "gstorb");});
test("gstorbener -> gstorb", function() {deepEqual( Stem("gstorbener"), "gstorb");});
test("gstritten -> gstritt", function() {deepEqual( Stem("gstritten"), "gstritt");});
test("gsucht -> gsucht", function() {deepEqual( Stem("gsucht"), "gsucht");});
test("gsungen -> gsung", function() {deepEqual( Stem("gsungen"), "gsung");});
test("guck -> guck", function() {deepEqual( Stem("guck"), "guck");});
test("gucken -> guck", function() {deepEqual( Stem("gucken"), "guck");});
test("guckfenster -> guckfen", function() {deepEqual( Stem("guckfenster"), "guckfen");});
test("guckt -> guckt", function() {deepEqual( Stem("guckt"), "guckt");});
test("guckte -> guckt", function() {deepEqual( Stem("guckte"), "guckt");});
test("guckten -> guckt", function() {deepEqual( Stem("guckten"), "guckt");});
test("guet -> guet", function() {deepEqual( Stem("guet"), "guet");});
test("guillotine -> guillotin", function() {deepEqual( Stem("guillotine"), "guillotin");});
test("guisan -> guisan", function() {deepEqual( Stem("guisan"), "guisan");});
test("gulden -> guld", function() {deepEqual( Stem("gulden"), "guld");});
test("gültbrief -> gultbrief", function() {deepEqual( Stem("gültbrief"), "gultbrief");});
test("gültig -> gultig", function() {deepEqual( Stem("gültig"), "gultig");});
test("gültige -> gultig", function() {deepEqual( Stem("gültige"), "gultig");});
test("gültiges -> gultig", function() {deepEqual( Stem("gültiges"), "gultig");});
test("gültigkeit -> gultig", function() {deepEqual( Stem("gültigkeit"), "gultig");});
test("gummi -> gummi", function() {deepEqual( Stem("gummi"), "gummi");});
test("gummigegend -> gummigeg", function() {deepEqual( Stem("gummigegend"), "gummigeg");});
test("gummiteich -> gummiteich", function() {deepEqual( Stem("gummiteich"), "gummiteich");});
test("gummiteichen -> gummiteich", function() {deepEqual( Stem("gummiteichen"), "gummiteich");});
test("gündem -> gund", function() {deepEqual( Stem("gündem"), "gund");});
test("gungeline -> gungelin", function() {deepEqual( Stem("gungeline"), "gungelin");});
test("gunnar -> gunnar", function() {deepEqual( Stem("gunnar"), "gunnar");});
test("gunst -> gunst", function() {deepEqual( Stem("gunst"), "gunst");});
test("gunsten -> gunst", function() {deepEqual( Stem("gunsten"), "gunst");});
test("günstig -> gunstig", function() {deepEqual( Stem("günstig"), "gunstig");});
test("günstige -> gunstig", function() {deepEqual( Stem("günstige"), "gunstig");});
test("günstigem -> gunstig", function() {deepEqual( Stem("günstigem"), "gunstig");});
test("günstigen -> gunstig", function() {deepEqual( Stem("günstigen"), "gunstig");});
test("günstiger -> gunstig", function() {deepEqual( Stem("günstiger"), "gunstig");});
test("günstiges -> gunstig", function() {deepEqual( Stem("günstiges"), "gunstig");});
test("gür -> gur", function() {deepEqual( Stem("gür"), "gur");});
test("gurgel -> gurgel", function() {deepEqual( Stem("gurgel"), "gurgel");});
test("gurgeln -> gurgeln", function() {deepEqual( Stem("gurgeln"), "gurgeln");});
test("gurgelnden -> gurgelnd", function() {deepEqual( Stem("gurgelnden"), "gurgelnd");});
test("gurken -> gurk", function() {deepEqual( Stem("gurken"), "gurk");});
test("gürpinar -> gurpinar", function() {deepEqual( Stem("gürpinar"), "gurpinar");});
test("gurren -> gurr", function() {deepEqual( Stem("gurren"), "gurr");});
test("gurt -> gurt", function() {deepEqual( Stem("gurt"), "gurt");});
test("gürtel -> gurtel", function() {deepEqual( Stem("gürtel"), "gurtel");});
test("gürteln -> gurteln", function() {deepEqual( Stem("gürteln"), "gurteln");});
test("gürten -> gurt", function() {deepEqual( Stem("gürten"), "gurt");});
test("gürteten -> gurtet", function() {deepEqual( Stem("gürteten"), "gurtet");});
test("gussbild -> gussbild", function() {deepEqual( Stem("gussbild"), "gussbild");});
test("gußbild -> gussbild", function() {deepEqual( Stem("gußbild"), "gussbild");});
test("gut -> gut", function() {deepEqual( Stem("gut"), "gut");});
test("gutartig -> gutart", function() {deepEqual( Stem("gutartig"), "gutart");});
test("gutartige -> gutart", function() {deepEqual( Stem("gutartige"), "gutart");});
test("gutbesorgten -> gutbesorgt", function() {deepEqual( Stem("gutbesorgten"), "gutbesorgt");});
test("gutdünkt -> gutdunkt", function() {deepEqual( Stem("gutdünkt"), "gutdunkt");});
test("gute -> gut", function() {deepEqual( Stem("gute"), "gut");});
test("güte -> gut", function() {deepEqual( Stem("güte"), "gut");});
test("gutem -> gut", function() {deepEqual( Stem("gutem"), "gut");});
test("guten -> gut", function() {deepEqual( Stem("guten"), "gut");});
test("gutenacht -> gutenacht", function() {deepEqual( Stem("gutenacht"), "gutenacht");});
test("gutenmorgenkuss -> gutenmorgenkuss", function() {deepEqual( Stem("gutenmorgenkuss"), "gutenmorgenkuss");});
test("guter -> gut", function() {deepEqual( Stem("guter"), "gut");});
test("güter -> gut", function() {deepEqual( Stem("güter"), "gut");});
test("gütern -> gut", function() {deepEqual( Stem("gütern"), "gut");});
test("gutes -> gut", function() {deepEqual( Stem("gutes"), "gut");});
test("gutestun -> gutestun", function() {deepEqual( Stem("gutestun"), "gutestun");});
test("gutgesinntheit -> gutgesinnt", function() {deepEqual( Stem("gutgesinntheit"), "gutgesinnt");});
test("gutheiten -> gutheit", function() {deepEqual( Stem("gutheiten"), "gutheit");});
test("gütige -> gutig", function() {deepEqual( Stem("gütige"), "gutig");});
test("gütigen -> gutig", function() {deepEqual( Stem("gütigen"), "gutig");});
test("gütiges -> gutig", function() {deepEqual( Stem("gütiges"), "gutig");});
test("gütigkeit -> gutig", function() {deepEqual( Stem("gütigkeit"), "gutig");});
test("gütigst -> gutig", function() {deepEqual( Stem("gütigst"), "gutig");});
test("gütlich -> gutlich", function() {deepEqual( Stem("gütlich"), "gutlich");});
test("gutmachen -> gutmach", function() {deepEqual( Stem("gutmachen"), "gutmach");});
test("gutmütig -> gutmut", function() {deepEqual( Stem("gutmütig"), "gutmut");});
test("gutmütige -> gutmut", function() {deepEqual( Stem("gutmütige"), "gutmut");});
test("gutmütigkeit -> gutmut", function() {deepEqual( Stem("gutmütigkeit"), "gutmut");});
test("gutnacht -> gutnacht", function() {deepEqual( Stem("gutnacht"), "gutnacht");});
test("guts -> gut", function() {deepEqual( Stem("guts"), "gut");});
test("gutsherren -> gutsherr", function() {deepEqual( Stem("gutsherren"), "gutsherr");});
test("gutsherrn -> gutsherrn", function() {deepEqual( Stem("gutsherrn"), "gutsherrn");});
test("güzel -> guzel", function() {deepEqual( Stem("güzel"), "guzel");});
test("gwalt -> gwalt", function() {deepEqual( Stem("gwalt"), "gwalt");});
test("gwaltsame -> gwaltsam", function() {deepEqual( Stem("gwaltsame"), "gwaltsam");});
test("gwart -> gwart", function() {deepEqual( Stem("gwart"), "gwart");});
test("gweint -> gweint", function() {deepEqual( Stem("gweint"), "gweint");});
test("gwesen -> gwes", function() {deepEqual( Stem("gwesen"), "gwes");});
test("gwitter -> gwitt", function() {deepEqual( Stem("gwitter"), "gwitt");});
test("gwöhnen -> gwohn", function() {deepEqual( Stem("gwöhnen"), "gwohn");});
test("gwöhnt -> gwohnt", function() {deepEqual( Stem("gwöhnt"), "gwohnt");});
test("gymnasiastin -> gymnasiastin", function() {deepEqual( Stem("gymnasiastin"), "gymnasiastin");});
test("gynäkologen -> gynakolog", function() {deepEqual( Stem("gynäkologen"), "gynakolog");});
test("h -> h", function() {deepEqual( Stem("h"), "h");});
test("ha -> ha", function() {deepEqual( Stem("ha"), "ha");});
test("haar -> haar", function() {deepEqual( Stem("haar"), "haar");});
test("haarbürste -> haarburst", function() {deepEqual( Stem("haarbürste"), "haarburst");});
test("haardenkmal -> haardenkmal", function() {deepEqual( Stem("haardenkmal"), "haardenkmal");});
test("haare -> haar", function() {deepEqual( Stem("haare"), "haar");});
test("haaren -> haar", function() {deepEqual( Stem("haaren"), "haar");});
test("haares -> haar", function() {deepEqual( Stem("haares"), "haar");});
test("haarflechten -> haarflecht", function() {deepEqual( Stem("haarflechten"), "haarflecht");});
test("haarige -> haarig", function() {deepEqual( Stem("haarige"), "haarig");});
test("haarschnitt -> haarschnitt", function() {deepEqual( Stem("haarschnitt"), "haarschnitt");});
test("haarwild -> haarwild", function() {deepEqual( Stem("haarwild"), "haarwild");});
test("haarwuchs -> haarwuch", function() {deepEqual( Stem("haarwuchs"), "haarwuch");});
test("hab -> hab", function() {deepEqual( Stem("hab"), "hab");});
test("habe -> hab", function() {deepEqual( Stem("habe"), "hab");});
test("habel -> habel", function() {deepEqual( Stem("habel"), "habel");});
test("habels -> habel", function() {deepEqual( Stem("habels"), "habel");});
test("haben -> hab", function() {deepEqual( Stem("haben"), "hab");});
test("habenichts -> habenicht", function() {deepEqual( Stem("habenichts"), "habenicht");});
test("häberlin -> haberlin", function() {deepEqual( Stem("häberlin"), "haberlin");});
test("habermus -> habermus", function() {deepEqual( Stem("habermus"), "habermus");});
test("habet -> habet", function() {deepEqual( Stem("habet"), "habet");});
test("habhaft -> habhaft", function() {deepEqual( Stem("habhaft"), "habhaft");});
test("habicht -> habicht", function() {deepEqual( Stem("habicht"), "habicht");});
test("habit -> habit", function() {deepEqual( Stem("habit"), "habit");});
test("habitus -> habitus", function() {deepEqual( Stem("habitus"), "habitus");});
test("habs -> hab", function() {deepEqual( Stem("habs"), "hab");});
test("habseliges -> habsel", function() {deepEqual( Stem("habseliges"), "habsel");});
test("habseligkeit -> habsel", function() {deepEqual( Stem("habseligkeit"), "habsel");});
test("habseligkeiten -> habsel", function() {deepEqual( Stem("habseligkeiten"), "habsel");});
test("habsucht -> habsucht", function() {deepEqual( Stem("habsucht"), "habsucht");});
test("habt -> habt", function() {deepEqual( Stem("habt"), "habt");});
test("haci -> haci", function() {deepEqual( Stem("haci"), "haci");});
test("hacken -> hack", function() {deepEqual( Stem("hacken"), "hack");});
test("hackn -> hackn", function() {deepEqual( Stem("hackn"), "hackn");});
test("häcksel -> hacksel", function() {deepEqual( Stem("häcksel"), "hacksel");});
test("hackte -> hackt", function() {deepEqual( Stem("hackte"), "hackt");});
test("hadad -> hadad", function() {deepEqual( Stem("hadad"), "hadad");});
test("hadep -> hadep", function() {deepEqual( Stem("hadep"), "hadep");});
test("hader -> had", function() {deepEqual( Stem("hader"), "had");});
test("haderlumpen -> haderlump", function() {deepEqual( Stem("haderlumpen"), "haderlump");});
test("hadern -> had", function() {deepEqual( Stem("hadern"), "had");});
test("haemorrheos -> haemorrheos", function() {deepEqual( Stem("haemorrheos"), "haemorrheos");});
test("häfelein -> hafelein", function() {deepEqual( Stem("häfelein"), "hafelein");});
test("haferbrei -> haferbrei", function() {deepEqual( Stem("haferbrei"), "haferbrei");});
test("haft -> haft", function() {deepEqual( Stem("haft"), "haft");});
test("hafte -> haft", function() {deepEqual( Stem("hafte"), "haft");});
test("haften -> haft", function() {deepEqual( Stem("haften"), "haft");});
test("haftet -> haftet", function() {deepEqual( Stem("haftet"), "haftet");});
test("häftlein -> haftlein", function() {deepEqual( Stem("häftlein"), "haftlein");});
test("haftstrafen -> haftstraf", function() {deepEqual( Stem("haftstrafen"), "haftstraf");});
test("hag -> hag", function() {deepEqual( Stem("hag"), "hag");});
test("hagel -> hagel", function() {deepEqual( Stem("hagel"), "hagel");});
test("hagelflut -> hagelflut", function() {deepEqual( Stem("hagelflut"), "hagelflut");});
test("hagelhans -> hagelhan", function() {deepEqual( Stem("hagelhans"), "hagelhan");});
test("hageln -> hageln", function() {deepEqual( Stem("hageln"), "hageln");});
test("hagelperlen -> hagelperl", function() {deepEqual( Stem("hagelperlen"), "hagelperl");});
test("hagelregen -> hagelreg", function() {deepEqual( Stem("hagelregen"), "hagelreg");});
test("hagelregens -> hagelreg", function() {deepEqual( Stem("hagelregens"), "hagelreg");});
test("hagels -> hagel", function() {deepEqual( Stem("hagels"), "hagel");});
test("hagelschlag -> hagelschlag", function() {deepEqual( Stem("hagelschlag"), "hagelschlag");});
test("hagelstein -> hagelstein", function() {deepEqual( Stem("hagelstein"), "hagelstein");});
test("hagelsteine -> hagelstein", function() {deepEqual( Stem("hagelsteine"), "hagelstein");});
test("hagelsteinen -> hagelstein", function() {deepEqual( Stem("hagelsteinen"), "hagelstein");});
test("hagelstücke -> hagelstuck", function() {deepEqual( Stem("hagelstücke"), "hagelstuck");});
test("hagen -> hag", function() {deepEqual( Stem("hagen"), "hag");});
test("hagere -> hag", function() {deepEqual( Stem("hagere"), "hag");});
test("hagerer -> hag", function() {deepEqual( Stem("hagerer"), "hag");});
test("haggai -> haggai", function() {deepEqual( Stem("haggai"), "haggai");});
test("haha -> haha", function() {deepEqual( Stem("haha"), "haha");});
test("hahahaha -> hahahaha", function() {deepEqual( Stem("hahahaha"), "hahahaha");});
test("häher -> hah", function() {deepEqual( Stem("häher"), "hah");});
test("hahn -> hahn", function() {deepEqual( Stem("hahn"), "hahn");});
test("hähnekrähen -> hahnekrah", function() {deepEqual( Stem("hähnekrähen"), "hahnekrah");});
test("haider -> haid", function() {deepEqual( Stem("haider"), "haid");});
test("hain -> hain", function() {deepEqual( Stem("hain"), "hain");});
test("hains -> hain", function() {deepEqual( Stem("hains"), "hain");});
test("häkchen -> hakch", function() {deepEqual( Stem("häkchen"), "hakch");});
test("haken -> hak", function() {deepEqual( Stem("haken"), "hak");});
test("hakkari -> hakkari", function() {deepEqual( Stem("hakkari"), "hakkari");});
test("häklich -> haklich", function() {deepEqual( Stem("häklich"), "haklich");});
test("häklichen -> haklich", function() {deepEqual( Stem("häklichen"), "haklich");});
test("halb -> halb", function() {deepEqual( Stem("halb"), "halb");});
test("halbbogen -> halbbog", function() {deepEqual( Stem("halbbogen"), "halbbog");});
test("halbdunkel -> halbdunkel", function() {deepEqual( Stem("halbdunkel"), "halbdunkel");});
test("halbe -> halb", function() {deepEqual( Stem("halbe"), "halb");});
test("halbem -> halb", function() {deepEqual( Stem("halbem"), "halb");});
test("halben -> halb", function() {deepEqual( Stem("halben"), "halb");});
test("halber -> halb", function() {deepEqual( Stem("halber"), "halb");});
test("halbes -> halb", function() {deepEqual( Stem("halbes"), "halb");});
test("halbfinal -> halbfinal", function() {deepEqual( Stem("halbfinal"), "halbfinal");});
test("halbfinalder -> halbfinald", function() {deepEqual( Stem("halbfinalder"), "halbfinald");});
test("halbgeschlossenen -> halbgeschloss", function() {deepEqual( Stem("halbgeschlossenen"), "halbgeschloss");});
test("halbheit -> halbheit", function() {deepEqual( Stem("halbheit"), "halbheit");});
test("halbjährigen -> halbjahr", function() {deepEqual( Stem("halbjährigen"), "halbjahr");});
test("halbkreis -> halbkreis", function() {deepEqual( Stem("halbkreis"), "halbkreis");});
test("halbkreise -> halbkreis", function() {deepEqual( Stem("halbkreise"), "halbkreis");});
test("halbkugel -> halbkugel", function() {deepEqual( Stem("halbkugel"), "halbkugel");});
test("halbkugeln -> halbkugeln", function() {deepEqual( Stem("halbkugeln"), "halbkugeln");});
test("halblange -> halblang", function() {deepEqual( Stem("halblange"), "halblang");});
test("halblauten -> halblaut", function() {deepEqual( Stem("halblauten"), "halblaut");});
test("halblauter -> halblaut", function() {deepEqual( Stem("halblauter"), "halblaut");});
test("halbreife -> halbreif", function() {deepEqual( Stem("halbreife"), "halbreif");});
test("halbring -> halbring", function() {deepEqual( Stem("halbring"), "halbring");});
test("halbschatten -> halbschatt", function() {deepEqual( Stem("halbschatten"), "halbschatt");});
test("halbstummen -> halbstumm", function() {deepEqual( Stem("halbstummen"), "halbstumm");});
test("halbstündigen -> halbstund", function() {deepEqual( Stem("halbstündigen"), "halbstund");});
test("halbstündiger -> halbstund", function() {deepEqual( Stem("halbstündiger"), "halbstund");});
test("halbtagsjob -> halbtagsjob", function() {deepEqual( Stem("halbtagsjob"), "halbtagsjob");});
test("halbtot -> halbtot", function() {deepEqual( Stem("halbtot"), "halbtot");});
test("halbtotes -> halbtot", function() {deepEqual( Stem("halbtotes"), "halbtot");});
test("halbträumender -> halbtraum", function() {deepEqual( Stem("halbträumender"), "halbtraum");});
test("halbvermoderte -> halbvermodert", function() {deepEqual( Stem("halbvermoderte"), "halbvermodert");});
test("halbvollendeten -> halbvollendet", function() {deepEqual( Stem("halbvollendeten"), "halbvollendet");});
test("halbwegs -> halbweg", function() {deepEqual( Stem("halbwegs"), "halbweg");});
test("halbwüchsige -> halbwuchs", function() {deepEqual( Stem("halbwüchsige"), "halbwuchs");});
test("halden -> hald", function() {deepEqual( Stem("halden"), "hald");});
test("half -> half", function() {deepEqual( Stem("half"), "half");});
test("halfen -> half", function() {deepEqual( Stem("halfen"), "half");});
test("hälfte -> halft", function() {deepEqual( Stem("hälfte"), "halft");});
test("hall -> hall", function() {deepEqual( Stem("hall"), "hall");});
test("halle -> hall", function() {deepEqual( Stem("halle"), "hall");});
test("hallen -> hall", function() {deepEqual( Stem("hallen"), "hall");});
test("halleo -> halleo", function() {deepEqual( Stem("halleo"), "halleo");});
test("hallo -> hallo", function() {deepEqual( Stem("hallo"), "hallo");});
test("hallunkischen -> hallunk", function() {deepEqual( Stem("hallunkischen"), "hallunk");});
test("halm -> halm", function() {deepEqual( Stem("halm"), "halm");});
test("halmen -> halm", function() {deepEqual( Stem("halmen"), "halm");});
test("hals -> hal", function() {deepEqual( Stem("hals"), "hal");});
test("halsband -> halsband", function() {deepEqual( Stem("halsband"), "halsband");});
test("halse -> hals", function() {deepEqual( Stem("halse"), "hals");});
test("hälse -> hals", function() {deepEqual( Stem("hälse"), "hals");});
test("halskette -> halskett", function() {deepEqual( Stem("halskette"), "halskett");});
test("halskragen -> halskrag", function() {deepEqual( Stem("halskragen"), "halskrag");});
test("halstuch -> halstuch", function() {deepEqual( Stem("halstuch"), "halstuch");});
test("halstüchelchen -> halstuchelch", function() {deepEqual( Stem("halstüchelchen"), "halstuchelch");});
test("halt -> halt", function() {deepEqual( Stem("halt"), "halt");});
test("hält -> halt", function() {deepEqual( Stem("hält"), "halt");});
test("haltbare -> haltbar", function() {deepEqual( Stem("haltbare"), "haltbar");});
test("haltbaren -> haltbar", function() {deepEqual( Stem("haltbaren"), "haltbar");});
test("halte -> halt", function() {deepEqual( Stem("halte"), "halt");});
test("halten -> halt", function() {deepEqual( Stem("halten"), "halt");});
test("haltend -> haltend", function() {deepEqual( Stem("haltend"), "haltend");});
test("haltenden -> haltend", function() {deepEqual( Stem("haltenden"), "haltend");});
test("haltet -> haltet", function() {deepEqual( Stem("haltet"), "haltet");});
test("haltlosen -> haltlos", function() {deepEqual( Stem("haltlosen"), "haltlos");});
test("haltrufen -> haltruf", function() {deepEqual( Stem("haltrufen"), "haltruf");});
test("haltrufer -> haltruf", function() {deepEqual( Stem("haltrufer"), "haltruf");});
test("hältst -> halt", function() {deepEqual( Stem("hältst"), "halt");});
test("haltung -> haltung", function() {deepEqual( Stem("haltung"), "haltung");});
test("halunkische -> halunk", function() {deepEqual( Stem("halunkische"), "halunk");});
test("ham -> ham", function() {deepEqual( Stem("ham"), "ham");});
test("hamburg -> hamburg", function() {deepEqual( Stem("hamburg"), "hamburg");});
test("hamburger -> hamburg", function() {deepEqual( Stem("hamburger"), "hamburg");});
test("hämisch -> hamisch", function() {deepEqual( Stem("hämisch"), "hamisch");});
test("hamlet -> hamlet", function() {deepEqual( Stem("hamlet"), "hamlet");});
test("hammelbraten -> hammelbrat", function() {deepEqual( Stem("hammelbraten"), "hammelbrat");});
test("hammelkeule -> hammelkeul", function() {deepEqual( Stem("hammelkeule"), "hammelkeul");});
test("hammer -> hamm", function() {deepEqual( Stem("hammer"), "hamm");});
test("hämmern -> hamm", function() {deepEqual( Stem("hämmern"), "hamm");});
test("hämmerte -> hammert", function() {deepEqual( Stem("hämmerte"), "hammert");});
test("hämmerten -> hammert", function() {deepEqual( Stem("hämmerten"), "hammert");});
test("hammerwerk -> hammerwerk", function() {deepEqual( Stem("hammerwerk"), "hammerwerk");});
test("hampelhänschen -> hampelhansch", function() {deepEqual( Stem("hampelhänschen"), "hampelhansch");});
test("hampelmann -> hampelmann", function() {deepEqual( Stem("hampelmann"), "hampelmann");});
test("hampelmänner -> hampelmann", function() {deepEqual( Stem("hampelmänner"), "hampelmann");});
test("hampelmännern -> hampelmann", function() {deepEqual( Stem("hampelmännern"), "hampelmann");});
test("hand -> hand", function() {deepEqual( Stem("hand"), "hand");});
test("handbewegung -> handbeweg", function() {deepEqual( Stem("handbewegung"), "handbeweg");});
test("handbibel -> handbibel", function() {deepEqual( Stem("handbibel"), "handbibel");});
test("handbuch -> handbuch", function() {deepEqual( Stem("handbuch"), "handbuch");});
test("händchen -> handch", function() {deepEqual( Stem("händchen"), "handch");});
test("hände -> hand", function() {deepEqual( Stem("hände"), "hand");});
test("händeklatschen -> handeklatsch", function() {deepEqual( Stem("händeklatschen"), "handeklatsch");});
test("handel -> handel", function() {deepEqual( Stem("handel"), "handel");});
test("händel -> handel", function() {deepEqual( Stem("händel"), "handel");});
test("händelführer -> handelfuhr", function() {deepEqual( Stem("händelführer"), "handelfuhr");});
test("handeln -> handeln", function() {deepEqual( Stem("handeln"), "handeln");});
test("händeln -> handeln", function() {deepEqual( Stem("händeln"), "handeln");});
test("handelnde -> handelnd", function() {deepEqual( Stem("handelnde"), "handelnd");});
test("händels -> handel", function() {deepEqual( Stem("händels"), "handel");});
test("handelsabkommen -> handelsabkomm", function() {deepEqual( Stem("handelsabkommen"), "handelsabkomm");});
test("handelsanfang -> handelsanfang", function() {deepEqual( Stem("handelsanfang"), "handelsanfang");});
test("handelserwerb -> handelserwerb", function() {deepEqual( Stem("handelserwerb"), "handelserwerb");});
test("handelsfreunden -> handelsfreund", function() {deepEqual( Stem("handelsfreunden"), "handelsfreund");});
test("handelsgeschäfte -> handelsgeschaft", function() {deepEqual( Stem("handelsgeschäfte"), "handelsgeschaft");});
test("handelsgeschäften -> handelsgeschaft", function() {deepEqual( Stem("handelsgeschäften"), "handelsgeschaft");});
test("handelskrisen -> handelskris", function() {deepEqual( Stem("handelskrisen"), "handelskris");});
test("handelsleute -> handelsleut", function() {deepEqual( Stem("handelsleute"), "handelsleut");});
test("handelsstadt -> handelsstadt", function() {deepEqual( Stem("handelsstadt"), "handelsstadt");});
test("handelsvertretungen -> handelsvertret", function() {deepEqual( Stem("handelsvertretungen"), "handelsvertret");});
test("handelt -> handelt", function() {deepEqual( Stem("handelt"), "handelt");});
test("handelte -> handelt", function() {deepEqual( Stem("handelte"), "handelt");});
test("händen -> hand", function() {deepEqual( Stem("händen"), "hand");});
test("händereibend -> handereib", function() {deepEqual( Stem("händereibend"), "handereib");});
test("handfeste -> handf", function() {deepEqual( Stem("handfeste"), "handf");});
test("handfester -> handf", function() {deepEqual( Stem("handfester"), "handf");});
test("handfestes -> handf", function() {deepEqual( Stem("handfestes"), "handf");});
test("handgelenken -> handgelenk", function() {deepEqual( Stem("handgelenken"), "handgelenk");});
test("handgreiflichen -> handgreif", function() {deepEqual( Stem("handgreiflichen"), "handgreif");});
test("handgriffe -> handgriff", function() {deepEqual( Stem("handgriffe"), "handgriff");});
test("handgrosses -> handgross", function() {deepEqual( Stem("handgrosses"), "handgross");});
test("handhabe -> handhab", function() {deepEqual( Stem("handhabe"), "handhab");});
test("handhaben -> handhab", function() {deepEqual( Stem("handhaben"), "handhab");});
test("handhabte -> handhabt", function() {deepEqual( Stem("handhabte"), "handhabt");});
test("handhabten -> handhabt", function() {deepEqual( Stem("handhabten"), "handhabt");});
test("handkarren -> handkarr", function() {deepEqual( Stem("handkarren"), "handkarr");});
test("handkuss -> handkuss", function() {deepEqual( Stem("handkuss"), "handkuss");});
test("handkuß -> handkuss", function() {deepEqual( Stem("handkuß"), "handkuss");});
test("handle -> handl", function() {deepEqual( Stem("handle"), "handl");});
test("händler -> handl", function() {deepEqual( Stem("händler"), "handl");});
test("händlerin -> handlerin", function() {deepEqual( Stem("händlerin"), "handlerin");});
test("handlich -> handlich", function() {deepEqual( Stem("handlich"), "handlich");});
test("handlichen -> handlich", function() {deepEqual( Stem("handlichen"), "handlich");});
test("handlichkeit -> handlich", function() {deepEqual( Stem("handlichkeit"), "handlich");});
test("handlung -> handlung", function() {deepEqual( Stem("handlung"), "handlung");});
test("handlungen -> handlung", function() {deepEqual( Stem("handlungen"), "handlung");});
test("handlungsart -> handlungsart", function() {deepEqual( Stem("handlungsart"), "handlungsart");});
test("handlungsschwanger -> handlungsschwang", function() {deepEqual( Stem("handlungsschwanger"), "handlungsschwang");});
test("handlungsschwangerer -> handlungsschwang", function() {deepEqual( Stem("handlungsschwangerer"), "handlungsschwang");});
test("handlungsstarke -> handlungsstark", function() {deepEqual( Stem("handlungsstarke"), "handlungsstark");});
test("handlungsweise -> handlungsweis", function() {deepEqual( Stem("handlungsweise"), "handlungsweis");});
test("handreibungen -> handreib", function() {deepEqual( Stem("handreibungen"), "handreib");});
test("handreichung -> handreich", function() {deepEqual( Stem("handreichung"), "handreich");});
test("handschrift -> handschrift", function() {deepEqual( Stem("handschrift"), "handschrift");});
test("handschuh -> handschuh", function() {deepEqual( Stem("handschuh"), "handschuh");});
test("handschuhe -> handschuh", function() {deepEqual( Stem("handschuhe"), "handschuh");});
test("handschuhen -> handschuh", function() {deepEqual( Stem("handschuhen"), "handschuh");});
test("handstreich -> handstreich", function() {deepEqual( Stem("handstreich"), "handstreich");});
test("handstreiche -> handstreich", function() {deepEqual( Stem("handstreiche"), "handstreich");});
test("handtäschchen -> handtaschch", function() {deepEqual( Stem("handtäschchen"), "handtaschch");});
test("handtasche -> handtasch", function() {deepEqual( Stem("handtasche"), "handtasch");});
test("handumdrehen -> handumdreh", function() {deepEqual( Stem("handumdrehen"), "handumdreh");});
test("handvoll -> handvoll", function() {deepEqual( Stem("handvoll"), "handvoll");});
test("handwerk -> handwerk", function() {deepEqual( Stem("handwerk"), "handwerk");});
test("handwerksbursch -> handwerksbursch", function() {deepEqual( Stem("handwerksbursch"), "handwerksbursch");});
test("handwerksburschen -> handwerksbursch", function() {deepEqual( Stem("handwerksburschen"), "handwerksbursch");});
test("handwerksgesell -> handwerksgesell", function() {deepEqual( Stem("handwerksgesell"), "handwerksgesell");});
test("handwerksgesellen -> handwerksgesell", function() {deepEqual( Stem("handwerksgesellen"), "handwerksgesell");});
test("handzwehle -> handzwehl", function() {deepEqual( Stem("handzwehle"), "handzwehl");});
test("hanfschnüren -> hanfschnur", function() {deepEqual( Stem("hanfschnüren"), "hanfschnur");});
test("hang -> hang", function() {deepEqual( Stem("hang"), "hang");});
test("hange -> hang", function() {deepEqual( Stem("hange"), "hang");});
test("hänge -> hang", function() {deepEqual( Stem("hänge"), "hang");});
test("hangen -> hang", function() {deepEqual( Stem("hangen"), "hang");});
test("hängen -> hang", function() {deepEqual( Stem("hängen"), "hang");});
test("hängend -> hangend", function() {deepEqual( Stem("hängend"), "hangend");});
test("hängenden -> hangend", function() {deepEqual( Stem("hängenden"), "hangend");});
test("hängengeblieben -> hangengeblieb", function() {deepEqual( Stem("hängengeblieben"), "hangengeblieb");});
test("hanges -> hang", function() {deepEqual( Stem("hanges"), "hang");});
test("hängt -> hangt", function() {deepEqual( Stem("hängt"), "hangt");});
test("hängte -> hangt", function() {deepEqual( Stem("hängte"), "hangt");});
test("hängten -> hangt", function() {deepEqual( Stem("hängten"), "hangt");});
test("hannibal -> hannibal", function() {deepEqual( Stem("hannibal"), "hannibal");});
test("hans -> han", function() {deepEqual( Stem("hans"), "han");});
test("hänse -> hans", function() {deepEqual( Stem("hänse"), "hans");});
test("hansnarren -> hansnarr", function() {deepEqual( Stem("hansnarren"), "hansnarr");});
test("hantierte -> hantiert", function() {deepEqual( Stem("hantierte"), "hantiert");});
test("hantierung -> hantier", function() {deepEqual( Stem("hantierung"), "hantier");});
test("hantierungen -> hantier", function() {deepEqual( Stem("hantierungen"), "hantier");});
test("hapert -> hapert", function() {deepEqual( Stem("hapert"), "hapert");});
test("hapertes -> hapert", function() {deepEqual( Stem("hapertes"), "hapert");});
test("happening -> happening", function() {deepEqual( Stem("happening"), "happening");});
test("happs -> happs", function() {deepEqual( Stem("happs"), "happs");});
test("happy -> happy", function() {deepEqual( Stem("happy"), "happy");});
test("harald -> harald", function() {deepEqual( Stem("harald"), "harald");});
test("harbst -> harb", function() {deepEqual( Stem("harbst"), "harb");});
test("häretische -> haret", function() {deepEqual( Stem("häretische"), "haret");});
test("harfe -> harf", function() {deepEqual( Stem("harfe"), "harf");});
test("harfen -> harf", function() {deepEqual( Stem("harfen"), "harf");});
test("harfenspieler -> harfenspiel", function() {deepEqual( Stem("harfenspieler"), "harfenspiel");});
test("harfentöne -> harfenton", function() {deepEqual( Stem("harfentöne"), "harfenton");});
test("harkenstiel -> harkenstiel", function() {deepEqual( Stem("harkenstiel"), "harkenstiel");});
test("harmlos -> harmlos", function() {deepEqual( Stem("harmlos"), "harmlos");});
test("harmlose -> harmlos", function() {deepEqual( Stem("harmlose"), "harmlos");});
test("harmlosen -> harmlos", function() {deepEqual( Stem("harmlosen"), "harmlos");});
test("harmloser -> harmlos", function() {deepEqual( Stem("harmloser"), "harmlos");});
test("harmlosigkeit -> harmlos", function() {deepEqual( Stem("harmlosigkeit"), "harmlos");});
test("harmlosigkeiten -> harmlos", function() {deepEqual( Stem("harmlosigkeiten"), "harmlos");});
test("harmonie -> harmoni", function() {deepEqual( Stem("harmonie"), "harmoni");});
test("harmonien -> harmoni", function() {deepEqual( Stem("harmonien"), "harmoni");});
test("harmonikaförmigen -> harmonikaform", function() {deepEqual( Stem("harmonikaförmigen"), "harmonikaform");});
test("harmonisch -> harmon", function() {deepEqual( Stem("harmonisch"), "harmon");});
test("harmonische -> harmon", function() {deepEqual( Stem("harmonische"), "harmon");});
test("harmonists -> harmonist", function() {deepEqual( Stem("harmonists"), "harmonist");});
test("härmte -> harmt", function() {deepEqual( Stem("härmte"), "harmt");});
test("harnisch -> harnisch", function() {deepEqual( Stem("harnisch"), "harnisch");});
test("harnischreste -> harnischr", function() {deepEqual( Stem("harnischreste"), "harnischr");});
test("harren -> harr", function() {deepEqual( Stem("harren"), "harr");});
test("harrend -> harrend", function() {deepEqual( Stem("harrend"), "harrend");});
test("harrten -> harrt", function() {deepEqual( Stem("harrten"), "harrt");});
test("hart -> hart", function() {deepEqual( Stem("hart"), "hart");});
test("harte -> hart", function() {deepEqual( Stem("harte"), "hart");});
test("härte -> hart", function() {deepEqual( Stem("härte"), "hart");});
test("hartem -> hart", function() {deepEqual( Stem("hartem"), "hart");});
test("harten -> hart", function() {deepEqual( Stem("harten"), "hart");});
test("harter -> hart", function() {deepEqual( Stem("harter"), "hart");});
test("härter -> hart", function() {deepEqual( Stem("härter"), "hart");});
test("härtere -> hart", function() {deepEqual( Stem("härtere"), "hart");});
test("härteres -> hart", function() {deepEqual( Stem("härteres"), "hart");});
test("hartes -> hart", function() {deepEqual( Stem("hartes"), "hart");});
test("härteste -> hart", function() {deepEqual( Stem("härteste"), "hart");});
test("hartherzige -> hartherz", function() {deepEqual( Stem("hartherzige"), "hartherz");});
test("hartherzigem -> hartherz", function() {deepEqual( Stem("hartherzigem"), "hartherz");});
test("hartherzigen -> hartherz", function() {deepEqual( Stem("hartherzigen"), "hartherz");});
test("hartherzigkeiten -> hartherz", function() {deepEqual( Stem("hartherzigkeiten"), "hartherz");});
test("hartmann -> hartmann", function() {deepEqual( Stem("hartmann"), "hartmann");});
test("hartnäckig -> hartnack", function() {deepEqual( Stem("hartnäckig"), "hartnack");});
test("hartnäckige -> hartnack", function() {deepEqual( Stem("hartnäckige"), "hartnack");});
test("hartnäckigen -> hartnack", function() {deepEqual( Stem("hartnäckigen"), "hartnack");});
test("hartnäckiger -> hartnack", function() {deepEqual( Stem("hartnäckiger"), "hartnack");});
test("hartnäckigeren -> hartnack", function() {deepEqual( Stem("hartnäckigeren"), "hartnack");});
test("hartnäckigkeit -> hartnack", function() {deepEqual( Stem("hartnäckigkeit"), "hartnack");});
test("hartnäckigste -> hartnack", function() {deepEqual( Stem("hartnäckigste"), "hartnack");});
test("hartwerden -> hartwerd", function() {deepEqual( Stem("hartwerden"), "hartwerd");});
test("harz -> harz", function() {deepEqual( Stem("harz"), "harz");});
test("hasan -> hasan", function() {deepEqual( Stem("hasan"), "hasan");});
test("hasardspiel -> hasardspiel", function() {deepEqual( Stem("hasardspiel"), "hasardspiel");});
test("haschen -> hasch", function() {deepEqual( Stem("haschen"), "hasch");});
test("häschen -> hasch", function() {deepEqual( Stem("häschen"), "hasch");});
test("haschte -> hascht", function() {deepEqual( Stem("haschte"), "hascht");});
test("haselanten -> haselant", function() {deepEqual( Stem("haselanten"), "haselant");});
test("haselnussstauden -> haselnussstaud", function() {deepEqual( Stem("haselnussstauden"), "haselnussstaud");});
test("haselwanter -> haselwant", function() {deepEqual( Stem("haselwanter"), "haselwant");});
test("hasen -> has", function() {deepEqual( Stem("hasen"), "has");});
test("haserl -> haserl", function() {deepEqual( Stem("haserl"), "haserl");});
test("häslein -> haslein", function() {deepEqual( Stem("häslein"), "haslein");});
test("haslers -> hasl", function() {deepEqual( Stem("haslers"), "hasl");});
test("haspelte -> haspelt", function() {deepEqual( Stem("haspelte"), "haspelt");});
test("hass -> hass", function() {deepEqual( Stem("hass"), "hass");});
test("haß -> hass", function() {deepEqual( Stem("haß"), "hass");});
test("hasse -> hass", function() {deepEqual( Stem("hasse"), "hass");});
test("hassen -> hass", function() {deepEqual( Stem("hassen"), "hass");});
test("hasser -> hass", function() {deepEqual( Stem("hasser"), "hass");});
test("haßerfüllten -> hasserfullt", function() {deepEqual( Stem("haßerfüllten"), "hasserfullt");});
test("hasses -> hass", function() {deepEqual( Stem("hasses"), "hass");});
test("hässiges -> hassig", function() {deepEqual( Stem("hässiges"), "hassig");});
test("hässlich -> hasslich", function() {deepEqual( Stem("hässlich"), "hasslich");});
test("häßlich -> hasslich", function() {deepEqual( Stem("häßlich"), "hasslich");});
test("hässliche -> hasslich", function() {deepEqual( Stem("hässliche"), "hasslich");});
test("häßliche -> hasslich", function() {deepEqual( Stem("häßliche"), "hasslich");});
test("hässlichen -> hasslich", function() {deepEqual( Stem("hässlichen"), "hasslich");});
test("häßlichen -> hasslich", function() {deepEqual( Stem("häßlichen"), "hasslich");});
test("hässlicheres -> hasslich", function() {deepEqual( Stem("hässlicheres"), "hasslich");});
test("häßlicheres -> hasslich", function() {deepEqual( Stem("häßlicheres"), "hasslich");});
test("hässliches -> hasslich", function() {deepEqual( Stem("hässliches"), "hasslich");});
test("häßliches -> hasslich", function() {deepEqual( Stem("häßliches"), "hasslich");});
test("hässlichsten -> hasslich", function() {deepEqual( Stem("hässlichsten"), "hasslich");});
test("hasst -> hasst", function() {deepEqual( Stem("hasst"), "hasst");});
test("haßt -> hasst", function() {deepEqual( Stem("haßt"), "hasst");});
test("hasste -> hasst", function() {deepEqual( Stem("hasste"), "hasst");});
test("haßte -> hasst", function() {deepEqual( Stem("haßte"), "hasst");});
test("hast -> hast", function() {deepEqual( Stem("hast"), "hast");});
test("hasterer -> hast", function() {deepEqual( Stem("hasterer"), "hast");});
test("hastig -> hastig", function() {deepEqual( Stem("hastig"), "hastig");});
test("hastige -> hastig", function() {deepEqual( Stem("hastige"), "hastig");});
test("hastigen -> hastig", function() {deepEqual( Stem("hastigen"), "hastig");});
test("hat -> hat", function() {deepEqual( Stem("hat"), "hat");});
test("hatr -> hatr", function() {deepEqual( Stem("hatr"), "hatr");});
test("hats -> hat", function() {deepEqual( Stem("hats"), "hat");});
test("hätschelte -> hatschelt", function() {deepEqual( Stem("hätschelte"), "hatschelt");});
test("hatschen -> hatsch", function() {deepEqual( Stem("hatschen"), "hatsch");});
test("hatt -> hatt", function() {deepEqual( Stem("hatt"), "hatt");});
test("hätt -> hatt", function() {deepEqual( Stem("hätt"), "hatt");});
test("hatte -> hatt", function() {deepEqual( Stem("hatte"), "hatt");});
test("hätte -> hatt", function() {deepEqual( Stem("hätte"), "hatt");});
test("hatten -> hatt", function() {deepEqual( Stem("hatten"), "hatt");});
test("hätten -> hatt", function() {deepEqual( Stem("hätten"), "hatt");});
test("hättens -> hatt", function() {deepEqual( Stem("hättens"), "hatt");});
test("hattest -> hatt", function() {deepEqual( Stem("hattest"), "hatt");});
test("hättest -> hatt", function() {deepEqual( Stem("hättest"), "hatt");});
test("hättet -> hattet", function() {deepEqual( Stem("hättet"), "hattet");});
test("hau -> hau", function() {deepEqual( Stem("hau"), "hau");});
test("haube -> haub", function() {deepEqual( Stem("haube"), "haub");});
test("hauben -> haub", function() {deepEqual( Stem("hauben"), "haub");});
test("hauch -> hauch", function() {deepEqual( Stem("hauch"), "hauch");});
test("hauchen -> hauch", function() {deepEqual( Stem("hauchen"), "hauch");});
test("hauchte -> haucht", function() {deepEqual( Stem("hauchte"), "haucht");});
test("hauchten -> haucht", function() {deepEqual( Stem("hauchten"), "haucht");});
test("hauen -> hau", function() {deepEqual( Stem("hauen"), "hau");});
test("häufchen -> haufch", function() {deepEqual( Stem("häufchen"), "haufch");});
test("haufe -> hauf", function() {deepEqual( Stem("haufe"), "hauf");});
test("haufen -> hauf", function() {deepEqual( Stem("haufen"), "hauf");});
test("häufen -> hauf", function() {deepEqual( Stem("häufen"), "hauf");});
test("haufenweise -> haufenweis", function() {deepEqual( Stem("haufenweise"), "haufenweis");});
test("häufig -> haufig", function() {deepEqual( Stem("häufig"), "haufig");});
test("häufige -> haufig", function() {deepEqual( Stem("häufige"), "haufig");});
test("häufiger -> haufig", function() {deepEqual( Stem("häufiger"), "haufig");});
test("häuflein -> hauflein", function() {deepEqual( Stem("häuflein"), "hauflein");});
test("häuft -> hauft", function() {deepEqual( Stem("häuft"), "hauft");});
test("haupt -> haupt", function() {deepEqual( Stem("haupt"), "haupt");});
test("hauptaufgabe -> hauptaufgab", function() {deepEqual( Stem("hauptaufgabe"), "hauptaufgab");});
test("hauptbeschäftigung -> hauptbeschaft", function() {deepEqual( Stem("hauptbeschäftigung"), "hauptbeschaft");});
test("hauptbestandteil -> hauptbestandteil", function() {deepEqual( Stem("hauptbestandteil"), "hauptbestandteil");});
test("hauptbürde -> hauptburd", function() {deepEqual( Stem("hauptbürde"), "hauptburd");});
test("hauptchristen -> hauptchrist", function() {deepEqual( Stem("hauptchristen"), "hauptchrist");});
test("haupte -> haupt", function() {deepEqual( Stem("haupte"), "haupt");});
test("haupteingang -> haupteingang", function() {deepEqual( Stem("haupteingang"), "haupteingang");});
test("häupten -> haupt", function() {deepEqual( Stem("häupten"), "haupt");});
test("häupter -> haupt", function() {deepEqual( Stem("häupter"), "haupt");});
test("häuptern -> haupt", function() {deepEqual( Stem("häuptern"), "haupt");});
test("hauptes -> haupt", function() {deepEqual( Stem("hauptes"), "haupt");});
test("hauptgattungen -> hauptgatt", function() {deepEqual( Stem("hauptgattungen"), "hauptgatt");});
test("hauptgebäude -> hauptgebaud", function() {deepEqual( Stem("hauptgebäude"), "hauptgebaud");});
test("hauptgegenstände -> hauptgegenstand", function() {deepEqual( Stem("hauptgegenstände"), "hauptgegenstand");});
test("hauptliebhaberei -> hauptliebhaberei", function() {deepEqual( Stem("hauptliebhaberei"), "hauptliebhaberei");});
test("häuptling -> hauptling", function() {deepEqual( Stem("häuptling"), "hauptling");});
test("häuptlingen -> hauptling", function() {deepEqual( Stem("häuptlingen"), "hauptling");});
test("hauptmann -> hauptmann", function() {deepEqual( Stem("hauptmann"), "hauptmann");});
test("hauptmittel -> hauptmittel", function() {deepEqual( Stem("hauptmittel"), "hauptmittel");});
test("hauptort -> hauptort", function() {deepEqual( Stem("hauptort"), "hauptort");});
test("hauptperson -> hauptperson", function() {deepEqual( Stem("hauptperson"), "hauptperson");});
test("hauptpunkte -> hauptpunkt", function() {deepEqual( Stem("hauptpunkte"), "hauptpunkt");});
test("hauptpunkten -> hauptpunkt", function() {deepEqual( Stem("hauptpunkten"), "hauptpunkt");});
test("hauptquartier -> hauptquarti", function() {deepEqual( Stem("hauptquartier"), "hauptquarti");});
test("hauptredaktor -> hauptredaktor", function() {deepEqual( Stem("hauptredaktor"), "hauptredaktor");});
test("hauptsache -> hauptsach", function() {deepEqual( Stem("hauptsache"), "hauptsach");});
test("hauptsachen -> hauptsach", function() {deepEqual( Stem("hauptsachen"), "hauptsach");});
test("hauptsächlich -> hauptsach", function() {deepEqual( Stem("hauptsächlich"), "hauptsach");});
test("hauptsächlichstes -> hauptsach", function() {deepEqual( Stem("hauptsächlichstes"), "hauptsach");});
test("hauptschmuckes -> hauptschmuck", function() {deepEqual( Stem("hauptschmuckes"), "hauptschmuck");});
test("hauptsitzung -> hauptsitz", function() {deepEqual( Stem("hauptsitzung"), "hauptsitz");});
test("hauptspass -> hauptspass", function() {deepEqual( Stem("hauptspass"), "hauptspass");});
test("hauptstadt -> hauptstadt", function() {deepEqual( Stem("hauptstadt"), "hauptstadt");});
test("hauptstrasse -> hauptstrass", function() {deepEqual( Stem("hauptstrasse"), "hauptstrass");});
test("hauptstück -> hauptstuck", function() {deepEqual( Stem("hauptstück"), "hauptstuck");});
test("hauptstücke -> hauptstuck", function() {deepEqual( Stem("hauptstücke"), "hauptstuck");});
test("haupttafel -> haupttafel", function() {deepEqual( Stem("haupttafel"), "haupttafel");});
test("haupttätigkeit -> haupttat", function() {deepEqual( Stem("haupttätigkeit"), "haupttat");});
test("haupttreppe -> haupttrepp", function() {deepEqual( Stem("haupttreppe"), "haupttrepp");});
test("hauptursache -> hauptursach", function() {deepEqual( Stem("hauptursache"), "hauptursach");});
test("hauptveränderung -> hauptverander", function() {deepEqual( Stem("hauptveränderung"), "hauptverander");});
test("hauptverkehrsstrasse -> hauptverkehrsstrass", function() {deepEqual( Stem("hauptverkehrsstrasse"), "hauptverkehrsstrass");});
test("hauptwahlen -> hauptwahl", function() {deepEqual( Stem("hauptwahlen"), "hauptwahl");});
test("hauptwechsel -> hauptwechsel", function() {deepEqual( Stem("hauptwechsel"), "hauptwechsel");});
test("hauptweg -> hauptweg", function() {deepEqual( Stem("hauptweg"), "hauptweg");});
test("hauptwert -> hauptwert", function() {deepEqual( Stem("hauptwert"), "hauptwert");});
test("hauptziel -> hauptziel", function() {deepEqual( Stem("hauptziel"), "hauptziel");});
test("hauptzierde -> hauptzierd", function() {deepEqual( Stem("hauptzierde"), "hauptzierd");});
test("hauptzweck -> hauptzweck", function() {deepEqual( Stem("hauptzweck"), "hauptzweck");});
test("haus -> haus", function() {deepEqual( Stem("haus"), "haus");});
test("hausapotheke -> hausapothek", function() {deepEqual( Stem("hausapotheke"), "hausapothek");});
test("hausbackenes -> hausback", function() {deepEqual( Stem("hausbackenes"), "hausback");});
test("hausbau -> hausbau", function() {deepEqual( Stem("hausbau"), "hausbau");});
test("hausbesetzer -> hausbesetz", function() {deepEqual( Stem("hausbesetzer"), "hausbesetz");});
test("häuschen -> hausch", function() {deepEqual( Stem("häuschen"), "hausch");});
test("hausdurchsuchungen -> hausdurchsuch", function() {deepEqual( Stem("hausdurchsuchungen"), "hausdurchsuch");});
test("hause -> haus", function() {deepEqual( Stem("hause"), "haus");});
test("hausecke -> hauseck", function() {deepEqual( Stem("hausecke"), "hauseck");});
test("hausehre -> hausehr", function() {deepEqual( Stem("hausehre"), "hausehr");});
test("hausen -> haus", function() {deepEqual( Stem("hausen"), "haus");});
test("häuser -> haus", function() {deepEqual( Stem("häuser"), "haus");});
test("häusermauer -> hausermau", function() {deepEqual( Stem("häusermauer"), "hausermau");});
test("häusermauern -> hausermau", function() {deepEqual( Stem("häusermauern"), "hausermau");});
test("häusern -> haus", function() {deepEqual( Stem("häusern"), "haus");});
test("hauses -> haus", function() {deepEqual( Stem("hauses"), "haus");});
test("hausflur -> hausflur", function() {deepEqual( Stem("hausflur"), "hausflur");});
test("hausfrau -> hausfrau", function() {deepEqual( Stem("hausfrau"), "hausfrau");});
test("hausfreund -> hausfreund", function() {deepEqual( Stem("hausfreund"), "hausfreund");});
test("hausgebrauch -> hausgebrauch", function() {deepEqual( Stem("hausgebrauch"), "hausgebrauch");});
test("hausgeister -> hausgeist", function() {deepEqual( Stem("hausgeister"), "hausgeist");});
test("hausgenossin -> hausgenossin", function() {deepEqual( Stem("hausgenossin"), "hausgenossin");});
test("hausglocke -> hausglock", function() {deepEqual( Stem("hausglocke"), "hausglock");});
test("haushalte -> haushalt", function() {deepEqual( Stem("haushalte"), "haushalt");});
test("hausherr -> hausherr", function() {deepEqual( Stem("hausherr"), "hausherr");});
test("hausknecht -> hausknecht", function() {deepEqual( Stem("hausknecht"), "hausknecht");});
test("hausknechte -> hausknecht", function() {deepEqual( Stem("hausknechte"), "hausknecht");});
test("häusl -> hausl", function() {deepEqual( Stem("häusl"), "hausl");});
test("häuslich -> hauslich", function() {deepEqual( Stem("häuslich"), "hauslich");});
test("häusliche -> hauslich", function() {deepEqual( Stem("häusliche"), "hauslich");});
test("häuslichen -> hauslich", function() {deepEqual( Stem("häuslichen"), "hauslich");});
test("hausmütterlich -> hausmutt", function() {deepEqual( Stem("hausmütterlich"), "hausmutt");});
test("hausrat -> hausrat", function() {deepEqual( Stem("hausrat"), "hausrat");});
test("hausschlüssel -> hausschlussel", function() {deepEqual( Stem("hausschlüssel"), "hausschlussel");});
test("hausschwelle -> hausschwell", function() {deepEqual( Stem("hausschwelle"), "hausschwell");});
test("hausstande -> hausstand", function() {deepEqual( Stem("hausstande"), "hausstand");});
test("hauste -> haust", function() {deepEqual( Stem("hauste"), "haust");});
test("haustierchen -> haustierch", function() {deepEqual( Stem("haustierchen"), "haustierch");});
test("haustracht -> haustracht", function() {deepEqual( Stem("haustracht"), "haustracht");});
test("haustür -> haustur", function() {deepEqual( Stem("haustür"), "haustur");});
test("haustüre -> haustur", function() {deepEqual( Stem("haustüre"), "haustur");});
test("haustüren -> haustur", function() {deepEqual( Stem("haustüren"), "haustur");});
test("hausvater -> hausvat", function() {deepEqual( Stem("hausvater"), "hausvat");});
test("hauswesen -> hauswes", function() {deepEqual( Stem("hauswesen"), "hauswes");});
test("haut -> haut", function() {deepEqual( Stem("haut"), "haut");});
test("häutchen -> hautch", function() {deepEqual( Stem("häutchen"), "hautch");});
test("häute -> haut", function() {deepEqual( Stem("häute"), "haut");});
test("hautfalte -> hautfalt", function() {deepEqual( Stem("hautfalte"), "hautfalt");});
test("hautfarbe -> hautfarb", function() {deepEqual( Stem("hautfarbe"), "hautfarb");});
test("häutige -> hautig", function() {deepEqual( Stem("häutige"), "hautig");});
test("hautnah -> hautnah", function() {deepEqual( Stem("hautnah"), "hautnah");});
test("hazim -> hazim", function() {deepEqual( Stem("hazim"), "hazim");});
test("hazims -> hazim", function() {deepEqual( Stem("hazims"), "hazim");});
test("hc -> hc", function() {deepEqual( Stem("hc"), "hc");});
test("hebe -> heb", function() {deepEqual( Stem("hebe"), "heb");});
test("heben -> heb", function() {deepEqual( Stem("heben"), "heb");});
test("hebend -> hebend", function() {deepEqual( Stem("hebend"), "hebend");});
test("hebet -> hebet", function() {deepEqual( Stem("hebet"), "hebet");});
test("hebopfer -> hebopf", function() {deepEqual( Stem("hebopfer"), "hebopf");});
test("hebr -> hebr", function() {deepEqual( Stem("hebr"), "hebr");});
test("hebräer -> hebra", function() {deepEqual( Stem("hebräer"), "hebra");});
test("hebräerinnen -> hebraerinn", function() {deepEqual( Stem("hebräerinnen"), "hebraerinn");});
test("hebräisch -> hebraisch", function() {deepEqual( Stem("hebräisch"), "hebraisch");});
test("hebräische -> hebraisch", function() {deepEqual( Stem("hebräische"), "hebraisch");});
test("hebräischen -> hebraisch", function() {deepEqual( Stem("hebräischen"), "hebraisch");});
test("hebt -> hebt", function() {deepEqual( Stem("hebt"), "hebt");});
test("hecht -> hecht", function() {deepEqual( Stem("hecht"), "hecht");});
test("hechtbauche -> hechtbauch", function() {deepEqual( Stem("hechtbauche"), "hechtbauch");});
test("hechte -> hecht", function() {deepEqual( Stem("hechte"), "hecht");});
test("hechtes -> hecht", function() {deepEqual( Stem("hechtes"), "hecht");});
test("hechtseiten -> hechtseit", function() {deepEqual( Stem("hechtseiten"), "hechtseit");});
test("hecken -> heck", function() {deepEqual( Stem("hecken"), "heck");});
test("heer -> heer", function() {deepEqual( Stem("heer"), "heer");});
test("heere -> heer", function() {deepEqual( Stem("heere"), "heer");});
test("heeren -> heer", function() {deepEqual( Stem("heeren"), "heer");});
test("heeres -> heer", function() {deepEqual( Stem("heeres"), "heer");});
test("heerhaufen -> heerhauf", function() {deepEqual( Stem("heerhaufen"), "heerhauf");});
test("heerlager -> heerlag", function() {deepEqual( Stem("heerlager"), "heerlag");});
test("hefe -> hef", function() {deepEqual( Stem("hefe"), "hef");});
test("heft -> heft", function() {deepEqual( Stem("heft"), "heft");});
test("heften -> heft", function() {deepEqual( Stem("heften"), "heft");});
test("heftete -> heftet", function() {deepEqual( Stem("heftete"), "heftet");});
test("heftig -> heftig", function() {deepEqual( Stem("heftig"), "heftig");});
test("heftige -> heftig", function() {deepEqual( Stem("heftige"), "heftig");});
test("heftigem -> heftig", function() {deepEqual( Stem("heftigem"), "heftig");});
test("heftigen -> heftig", function() {deepEqual( Stem("heftigen"), "heftig");});
test("heftiger -> heftig", function() {deepEqual( Stem("heftiger"), "heftig");});
test("heftiges -> heftig", function() {deepEqual( Stem("heftiges"), "heftig");});
test("heftigkeit -> heftig", function() {deepEqual( Stem("heftigkeit"), "heftig");});
test("heftigste -> heftig", function() {deepEqual( Stem("heftigste"), "heftig");});
test("heftigsten -> heftig", function() {deepEqual( Stem("heftigsten"), "heftig");});
test("hege -> heg", function() {deepEqual( Stem("hege"), "heg");});
test("hegen -> heg", function() {deepEqual( Stem("hegen"), "heg");});
test("hegt -> hegt", function() {deepEqual( Stem("hegt"), "hegt");});
test("hegte -> hegt", function() {deepEqual( Stem("hegte"), "hegt");});
test("hegten -> hegt", function() {deepEqual( Stem("hegten"), "hegt");});
test("hehr -> hehr", function() {deepEqual( Stem("hehr"), "hehr");});
test("hei -> hei", function() {deepEqual( Stem("hei"), "hei");});
test("heiden -> heid", function() {deepEqual( Stem("heiden"), "heid");});
test("heidengeld -> heidengeld", function() {deepEqual( Stem("heidengeld"), "heidengeld");});
test("heidi -> heidi", function() {deepEqual( Stem("heidi"), "heidi");});
test("heidnischen -> heidnisch", function() {deepEqual( Stem("heidnischen"), "heidnisch");});
test("heiducken -> heiduck", function() {deepEqual( Stem("heiducken"), "heiduck");});
test("heil -> heil", function() {deepEqual( Stem("heil"), "heil");});
test("heiland -> heiland", function() {deepEqual( Stem("heiland"), "heiland");});
test("heilbar -> heilbar", function() {deepEqual( Stem("heilbar"), "heilbar");});
test("heile -> heil", function() {deepEqual( Stem("heile"), "heil");});
test("heilig -> heilig", function() {deepEqual( Stem("heilig"), "heilig");});
test("heilige -> heilig", function() {deepEqual( Stem("heilige"), "heilig");});
test("heiligem -> heilig", function() {deepEqual( Stem("heiligem"), "heilig");});
test("heiligen -> heilig", function() {deepEqual( Stem("heiligen"), "heilig");});
test("heiligenschein -> heiligenschein", function() {deepEqual( Stem("heiligenschein"), "heiligenschein");});
test("heiliger -> heilig", function() {deepEqual( Stem("heiliger"), "heilig");});
test("heiliges -> heilig", function() {deepEqual( Stem("heiliges"), "heilig");});
test("heiligkeit -> heilig", function() {deepEqual( Stem("heiligkeit"), "heilig");});
test("heiligste -> heilig", function() {deepEqual( Stem("heiligste"), "heilig");});
test("heiligsten -> heilig", function() {deepEqual( Stem("heiligsten"), "heilig");});
test("heiligte -> heiligt", function() {deepEqual( Stem("heiligte"), "heiligt");});
test("heiligtum -> heiligtum", function() {deepEqual( Stem("heiligtum"), "heiligtum");});
test("heiligtümer -> heiligtum", function() {deepEqual( Stem("heiligtümer"), "heiligtum");});
test("heiligung -> heilig", function() {deepEqual( Stem("heiligung"), "heilig");});
test("heiligungen -> heilig", function() {deepEqual( Stem("heiligungen"), "heilig");});
test("heillosen -> heillos", function() {deepEqual( Stem("heillosen"), "heillos");});
test("heils -> heil", function() {deepEqual( Stem("heils"), "heil");});
test("heilsamer -> heilsam", function() {deepEqual( Stem("heilsamer"), "heilsam");});
test("heilsamkeit -> heilsam", function() {deepEqual( Stem("heilsamkeit"), "heilsam");});
test("heilstoll -> heilstoll", function() {deepEqual( Stem("heilstoll"), "heilstoll");});
test("heilt -> heilt", function() {deepEqual( Stem("heilt"), "heilt");});
test("heilte -> heilt", function() {deepEqual( Stem("heilte"), "heilt");});
test("heilung -> heilung", function() {deepEqual( Stem("heilung"), "heilung");});
test("heim -> heim", function() {deepEqual( Stem("heim"), "heim");});
test("heimat -> heimat", function() {deepEqual( Stem("heimat"), "heimat");});
test("heimatdorf -> heimatdorf", function() {deepEqual( Stem("heimatdorf"), "heimatdorf");});
test("heimatkunde -> heimatkund", function() {deepEqual( Stem("heimatkunde"), "heimatkund");});
test("heimatlich -> heimat", function() {deepEqual( Stem("heimatlich"), "heimat");});
test("heimatlichen -> heimat", function() {deepEqual( Stem("heimatlichen"), "heimat");});
test("heimatlosen -> heimatlos", function() {deepEqual( Stem("heimatlosen"), "heimatlos");});
test("heimatschein -> heimatschein", function() {deepEqual( Stem("heimatschein"), "heimatschein");});
test("heimatsrecht -> heimatsrecht", function() {deepEqual( Stem("heimatsrecht"), "heimatsrecht");});
test("heimattal -> heimattal", function() {deepEqual( Stem("heimattal"), "heimattal");});
test("heimgalopp -> heimgalopp", function() {deepEqual( Stem("heimgalopp"), "heimgalopp");});
test("heimgebracht -> heimgebracht", function() {deepEqual( Stem("heimgebracht"), "heimgebracht");});
test("heimgekehrt -> heimgekehrt", function() {deepEqual( Stem("heimgekehrt"), "heimgekehrt");});
test("heimgekommen -> heimgekomm", function() {deepEqual( Stem("heimgekommen"), "heimgekomm");});
test("heimgeschickt -> heimgeschickt", function() {deepEqual( Stem("heimgeschickt"), "heimgeschickt");});
test("heimgeschickten -> heimgeschickt", function() {deepEqual( Stem("heimgeschickten"), "heimgeschickt");});
test("heimgesucht -> heimgesucht", function() {deepEqual( Stem("heimgesucht"), "heimgesucht");});
test("heimisch -> heimisch", function() {deepEqual( Stem("heimisch"), "heimisch");});
test("heimischen -> heimisch", function() {deepEqual( Stem("heimischen"), "heimisch");});
test("heimkam -> heimkam", function() {deepEqual( Stem("heimkam"), "heimkam");});
test("heimkehr -> heimkehr", function() {deepEqual( Stem("heimkehr"), "heimkehr");});
test("heimkommen -> heimkomm", function() {deepEqual( Stem("heimkommen"), "heimkomm");});
test("heimkommt -> heimkommt", function() {deepEqual( Stem("heimkommt"), "heimkommt");});
test("heimlaufen -> heimlauf", function() {deepEqual( Stem("heimlaufen"), "heimlauf");});
test("heimlich -> heimlich", function() {deepEqual( Stem("heimlich"), "heimlich");});
test("heimliche -> heimlich", function() {deepEqual( Stem("heimliche"), "heimlich");});
test("heimlichem -> heimlich", function() {deepEqual( Stem("heimlichem"), "heimlich");});
test("heimlichen -> heimlich", function() {deepEqual( Stem("heimlichen"), "heimlich");});
test("heimlicher -> heimlich", function() {deepEqual( Stem("heimlicher"), "heimlich");});
test("heimlicherweise -> heimlicherweis", function() {deepEqual( Stem("heimlicherweise"), "heimlicherweis");});
test("heimliches -> heimlich", function() {deepEqual( Stem("heimliches"), "heimlich");});
test("heimschicken -> heimschick", function() {deepEqual( Stem("heimschicken"), "heimschick");});
test("heimsuchen -> heimsuch", function() {deepEqual( Stem("heimsuchen"), "heimsuch");});
test("heimsuchung -> heimsuch", function() {deepEqual( Stem("heimsuchung"), "heimsuch");});
test("heimtückisch -> heimtuck", function() {deepEqual( Stem("heimtückisch"), "heimtuck");});
test("heimtückische -> heimtuck", function() {deepEqual( Stem("heimtückische"), "heimtuck");});
test("heimwärts -> heimwart", function() {deepEqual( Stem("heimwärts"), "heimwart");});
test("heimweg -> heimweg", function() {deepEqual( Stem("heimweg"), "heimweg");});
test("heimwege -> heimweg", function() {deepEqual( Stem("heimwege"), "heimweg");});
test("heimwegs -> heimweg", function() {deepEqual( Stem("heimwegs"), "heimweg");});
test("heimweh -> heimweh", function() {deepEqual( Stem("heimweh"), "heimweh");});
test("heimzog -> heimzog", function() {deepEqual( Stem("heimzog"), "heimzog");});
test("heimzukehren -> heimzukehr", function() {deepEqual( Stem("heimzukehren"), "heimzukehr");});
test("heimzusuchen -> heimzusuch", function() {deepEqual( Stem("heimzusuchen"), "heimzusuch");});
test("heimzuweisen -> heimzuweis", function() {deepEqual( Stem("heimzuweisen"), "heimzuweis");});
test("heinrich -> heinrich", function() {deepEqual( Stem("heinrich"), "heinrich");});
test("heinrichs -> heinrich", function() {deepEqual( Stem("heinrichs"), "heinrich");});
test("heinze -> heinz", function() {deepEqual( Stem("heinze"), "heinz");});
test("heinzer -> heinz", function() {deepEqual( Stem("heinzer"), "heinz");});
test("heirat -> heirat", function() {deepEqual( Stem("heirat"), "heirat");});
test("heiraten -> heirat", function() {deepEqual( Stem("heiraten"), "heirat");});
test("heiratest -> heirat", function() {deepEqual( Stem("heiratest"), "heirat");});
test("heiratet -> heiratet", function() {deepEqual( Stem("heiratet"), "heiratet");});
test("heiratete -> heiratet", function() {deepEqual( Stem("heiratete"), "heiratet");});
test("heiratsabsichten -> heiratsabsicht", function() {deepEqual( Stem("heiratsabsichten"), "heiratsabsicht");});
test("heiratsfrage -> heiratsfrag", function() {deepEqual( Stem("heiratsfrage"), "heiratsfrag");});
test("heiratsgut -> heiratsgut", function() {deepEqual( Stem("heiratsgut"), "heiratsgut");});
test("heiratslustigen -> heiratslust", function() {deepEqual( Stem("heiratslustigen"), "heiratslust");});
test("heiratssachen -> heiratssach", function() {deepEqual( Stem("heiratssachen"), "heiratssach");});
test("heiret -> heiret", function() {deepEqual( Stem("heiret"), "heiret");});
test("heiss -> heiss", function() {deepEqual( Stem("heiss"), "heiss");});
test("heiß -> heiss", function() {deepEqual( Stem("heiß"), "heiss");});
test("heisse -> heiss", function() {deepEqual( Stem("heisse"), "heiss");});
test("heiße -> heiss", function() {deepEqual( Stem("heiße"), "heiss");});
test("heissen -> heiss", function() {deepEqual( Stem("heissen"), "heiss");});
test("heißen -> heiss", function() {deepEqual( Stem("heißen"), "heiss");});
test("heisser -> heiss", function() {deepEqual( Stem("heisser"), "heiss");});
test("heisses -> heiss", function() {deepEqual( Stem("heisses"), "heiss");});
test("heisset -> heisset", function() {deepEqual( Stem("heisset"), "heisset");});
test("heißet -> heisset", function() {deepEqual( Stem("heißet"), "heisset");});
test("heisshunger -> heisshung", function() {deepEqual( Stem("heisshunger"), "heisshung");});
test("heissmachen -> heissmach", function() {deepEqual( Stem("heissmachen"), "heissmach");});
test("heisst -> heisst", function() {deepEqual( Stem("heisst"), "heisst");});
test("heißt -> heisst", function() {deepEqual( Stem("heißt"), "heisst");});
test("heiter -> heit", function() {deepEqual( Stem("heiter"), "heit");});
test("heitere -> heit", function() {deepEqual( Stem("heitere"), "heit");});
test("heiteren -> heit", function() {deepEqual( Stem("heiteren"), "heit");});
test("heiterer -> heit", function() {deepEqual( Stem("heiterer"), "heit");});
test("heiterkeit -> heiter", function() {deepEqual( Stem("heiterkeit"), "heiter");});
test("heiterm -> heiterm", function() {deepEqual( Stem("heiterm"), "heiterm");});
test("heizen -> heiz", function() {deepEqual( Stem("heizen"), "heiz");});
test("heizet -> heizet", function() {deepEqual( Stem("heizet"), "heizet");});
test("heks -> hek", function() {deepEqual( Stem("heks"), "hek");});
test("hektik -> hektik", function() {deepEqual( Stem("hektik"), "hektik");});
test("hektor -> hektor", function() {deepEqual( Stem("hektor"), "hektor");});
test("helas -> helas", function() {deepEqual( Stem("helas"), "helas");});
test("helbart -> helbart", function() {deepEqual( Stem("helbart"), "helbart");});
test("helbarte -> helbart", function() {deepEqual( Stem("helbarte"), "helbart");});
test("held -> held", function() {deepEqual( Stem("held"), "held");});
test("helden -> held", function() {deepEqual( Stem("helden"), "held");});
test("heldenhaftes -> heldenhaft", function() {deepEqual( Stem("heldenhaftes"), "heldenhaft");});
test("heldenwerk -> heldenwerk", function() {deepEqual( Stem("heldenwerk"), "heldenwerk");});
test("helena -> helena", function() {deepEqual( Stem("helena"), "helena");});
test("helfe -> helf", function() {deepEqual( Stem("helfe"), "helf");});
test("helfen -> helf", function() {deepEqual( Stem("helfen"), "helf");});
test("helfet -> helfet", function() {deepEqual( Stem("helfet"), "helfet");});
test("hell -> hell", function() {deepEqual( Stem("hell"), "hell");});
test("hellauf -> hellauf", function() {deepEqual( Stem("hellauf"), "hellauf");});
test("helldunklen -> helldunkl", function() {deepEqual( Stem("helldunklen"), "helldunkl");});
test("helle -> hell", function() {deepEqual( Stem("helle"), "hell");});
test("hellem -> hell", function() {deepEqual( Stem("hellem"), "hell");});
test("hellen -> hell", function() {deepEqual( Stem("hellen"), "hell");});
test("heller -> hell", function() {deepEqual( Stem("heller"), "hell");});
test("hellerleuchteten -> hellerleuchtet", function() {deepEqual( Stem("hellerleuchteten"), "hellerleuchtet");});
test("hellerlichten -> hellerlicht", function() {deepEqual( Stem("hellerlichten"), "hellerlicht");});
test("helles -> hell", function() {deepEqual( Stem("helles"), "hell");});
test("hellgrüner -> hellgrun", function() {deepEqual( Stem("hellgrüner"), "hellgrun");});
test("hellichten -> hellicht", function() {deepEqual( Stem("hellichten"), "hellicht");});
test("hellsehend -> hellseh", function() {deepEqual( Stem("hellsehend"), "hellseh");});
test("hellsehenden -> hellseh", function() {deepEqual( Stem("hellsehenden"), "hellseh");});
test("hellste -> hell", function() {deepEqual( Stem("hellste"), "hell");});
test("helmspitze -> helmspitz", function() {deepEqual( Stem("helmspitze"), "helmspitz");});
test("helmzier -> helmzi", function() {deepEqual( Stem("helmzier"), "helmzi");});
test("helvetas -> helvetas", function() {deepEqual( Stem("helvetas"), "helvetas");});
test("hemd -> hemd", function() {deepEqual( Stem("hemd"), "hemd");});
test("hemdärmel -> hemdarmel", function() {deepEqual( Stem("hemdärmel"), "hemdarmel");});
test("hemdärmeln -> hemdarmeln", function() {deepEqual( Stem("hemdärmeln"), "hemdarmeln");});
test("hemdärmliche -> hemdarm", function() {deepEqual( Stem("hemdärmliche"), "hemdarm");});
test("hemdchen -> hemdch", function() {deepEqual( Stem("hemdchen"), "hemdch");});
test("hemde -> hemd", function() {deepEqual( Stem("hemde"), "hemd");});
test("hemdenmätze -> hemdenmatz", function() {deepEqual( Stem("hemdenmätze"), "hemdenmatz");});
test("hemdenmätzen -> hemdenmatz", function() {deepEqual( Stem("hemdenmätzen"), "hemdenmatz");});
test("hemdkragen -> hemdkrag", function() {deepEqual( Stem("hemdkragen"), "hemdkrag");});
test("hemdzipfelchen -> hemdzipfelch", function() {deepEqual( Stem("hemdzipfelchen"), "hemdzipfelch");});
test("hemmen -> hemm", function() {deepEqual( Stem("hemmen"), "hemm");});
test("hendeln -> hendeln", function() {deepEqual( Stem("hendeln"), "hendeln");});
test("henkel -> henkel", function() {deepEqual( Stem("henkel"), "henkel");});
test("henken -> henk", function() {deepEqual( Stem("henken"), "henk");});
test("henker -> henk", function() {deepEqual( Stem("henker"), "henk");});
test("henkers -> henk", function() {deepEqual( Stem("henkers"), "henk");});
test("henne -> henn", function() {deepEqual( Stem("henne"), "henn");});
test("hennensteigen -> hennensteig", function() {deepEqual( Stem("hennensteigen"), "hennensteig");});
test("henrici -> henrici", function() {deepEqual( Stem("henrici"), "henrici");});
test("henriettental -> henriettental", function() {deepEqual( Stem("henriettental"), "henriettental");});
test("hep -> hep", function() {deepEqual( Stem("hep"), "hep");});
test("her -> her", function() {deepEqual( Stem("her"), "her");});
test("herab -> herab", function() {deepEqual( Stem("herab"), "herab");});
test("herabfallen -> herabfall", function() {deepEqual( Stem("herabfallen"), "herabfall");});
test("herabfliesst -> herabfliesst", function() {deepEqual( Stem("herabfliesst"), "herabfliesst");});
test("herabfließt -> herabfliesst", function() {deepEqual( Stem("herabfließt"), "herabfliesst");});
test("herabgebracht -> herabgebracht", function() {deepEqual( Stem("herabgebracht"), "herabgebracht");});
test("herabgekommen -> herabgekomm", function() {deepEqual( Stem("herabgekommen"), "herabgekomm");});
test("herabgekommener -> herabgekomm", function() {deepEqual( Stem("herabgekommener"), "herabgekomm");});
test("herabgelassen -> herabgelass", function() {deepEqual( Stem("herabgelassen"), "herabgelass");});
test("herabgeworfen -> herabgeworf", function() {deepEqual( Stem("herabgeworfen"), "herabgeworf");});
test("herabhing -> herabhing", function() {deepEqual( Stem("herabhing"), "herabhing");});
test("herabkam -> herabkam", function() {deepEqual( Stem("herabkam"), "herabkam");});
test("herabkommen -> herabkomm", function() {deepEqual( Stem("herabkommen"), "herabkomm");});
test("herabkommt -> herabkommt", function() {deepEqual( Stem("herabkommt"), "herabkommt");});
test("herablassen -> herablass", function() {deepEqual( Stem("herablassen"), "herablass");});
test("herablassend -> herablass", function() {deepEqual( Stem("herablassend"), "herablass");});
test("herablässt -> herablasst", function() {deepEqual( Stem("herablässt"), "herablasst");});
test("herabläßt -> herablasst", function() {deepEqual( Stem("herabläßt"), "herablasst");});
test("herabredete -> herabredet", function() {deepEqual( Stem("herabredete"), "herabredet");});
test("herabregnen -> herabregn", function() {deepEqual( Stem("herabregnen"), "herabregn");});
test("herabsehend -> herabseh", function() {deepEqual( Stem("herabsehend"), "herabseh");});
test("herabsetzt -> herabsetzt", function() {deepEqual( Stem("herabsetzt"), "herabsetzt");});
test("herabsinken -> herabsink", function() {deepEqual( Stem("herabsinken"), "herabsink");});
test("herabsinkt -> herabsinkt", function() {deepEqual( Stem("herabsinkt"), "herabsinkt");});
test("herabstimmen -> herabstimm", function() {deepEqual( Stem("herabstimmen"), "herabstimm");});
test("herabzusetzen -> herabzusetz", function() {deepEqual( Stem("herabzusetzen"), "herabzusetz");});
test("herabzustimmen -> herabzustimm", function() {deepEqual( Stem("herabzustimmen"), "herabzustimm");});
test("heran -> heran", function() {deepEqual( Stem("heran"), "heran");});
test("heranbrach -> heranbrach", function() {deepEqual( Stem("heranbrach"), "heranbrach");});
test("heranbrüllte -> heranbrullt", function() {deepEqual( Stem("heranbrüllte"), "heranbrullt");});
test("herandrängte -> herandrangt", function() {deepEqual( Stem("herandrängte"), "herandrangt");});
test("heranfuhren -> heranfuhr", function() {deepEqual( Stem("heranfuhren"), "heranfuhr");});
test("herangebraust -> herangebraust", function() {deepEqual( Stem("herangebraust"), "herangebraust");});
test("herangeflogen -> herangeflog", function() {deepEqual( Stem("herangeflogen"), "herangeflog");});
test("herangeholt -> herangeholt", function() {deepEqual( Stem("herangeholt"), "herangeholt");});
test("herangekommen -> herangekomm", function() {deepEqual( Stem("herangekommen"), "herangekomm");});
test("herangesaust -> herangesaust", function() {deepEqual( Stem("herangesaust"), "herangesaust");});
test("herangeschwänzelt -> herangeschwanzelt", function() {deepEqual( Stem("herangeschwänzelt"), "herangeschwanzelt");});
test("herangetanzt -> herangetanzt", function() {deepEqual( Stem("herangetanzt"), "herangetanzt");});
test("herangetreten -> herangetret", function() {deepEqual( Stem("herangetreten"), "herangetret");});
test("herangewachsen -> herangewachs", function() {deepEqual( Stem("herangewachsen"), "herangewachs");});
test("herankommen -> herankomm", function() {deepEqual( Stem("herankommen"), "herankomm");});
test("heranmachten -> heranmacht", function() {deepEqual( Stem("heranmachten"), "heranmacht");});
test("herannahen -> herannah", function() {deepEqual( Stem("herannahen"), "herannah");});
test("heranrollte -> heranrollt", function() {deepEqual( Stem("heranrollte"), "heranrollt");});
test("heranrutschte -> heranrutscht", function() {deepEqual( Stem("heranrutschte"), "heranrutscht");});
test("heranschwoll -> heranschwoll", function() {deepEqual( Stem("heranschwoll"), "heranschwoll");});
test("herantobenden -> herantob", function() {deepEqual( Stem("herantobenden"), "herantob");});
test("herantritt -> herantritt", function() {deepEqual( Stem("herantritt"), "herantritt");});
test("heranziehen -> heranzieh", function() {deepEqual( Stem("heranziehen"), "heranzieh");});
test("heranzubilden -> heranzubild", function() {deepEqual( Stem("heranzubilden"), "heranzubild");});
test("heranzukommen -> heranzukomm", function() {deepEqual( Stem("heranzukommen"), "heranzukomm");});
test("heranzuwehen -> heranzuweh", function() {deepEqual( Stem("heranzuwehen"), "heranzuweh");});
test("herauf -> herauf", function() {deepEqual( Stem("herauf"), "herauf");});
test("heraufbeförderte -> heraufbefordert", function() {deepEqual( Stem("heraufbeförderte"), "heraufbefordert");});
test("heraufbeschworen -> heraufbeschwor", function() {deepEqual( Stem("heraufbeschworen"), "heraufbeschwor");});
test("heraufbringen -> heraufbring", function() {deepEqual( Stem("heraufbringen"), "heraufbring");});
test("heraufführen -> herauffuhr", function() {deepEqual( Stem("heraufführen"), "herauffuhr");});
test("heraufgefahren -> heraufgefahr", function() {deepEqual( Stem("heraufgefahren"), "heraufgefahr");});
test("heraufgewundenen -> heraufgewund", function() {deepEqual( Stem("heraufgewundenen"), "heraufgewund");});
test("heraufkäme -> heraufkam", function() {deepEqual( Stem("heraufkäme"), "heraufkam");});
test("heraufkamen -> heraufkam", function() {deepEqual( Stem("heraufkamen"), "heraufkam");});
test("heraufkommen -> heraufkomm", function() {deepEqual( Stem("heraufkommen"), "heraufkomm");});
test("heraufsteigen -> heraufsteig", function() {deepEqual( Stem("heraufsteigen"), "heraufsteig");});
test("heraufsteigt -> heraufsteigt", function() {deepEqual( Stem("heraufsteigt"), "heraufsteigt");});
test("heraufziehen -> heraufzieh", function() {deepEqual( Stem("heraufziehen"), "heraufzieh");});
test("heraufzuholen -> heraufzuhol", function() {deepEqual( Stem("heraufzuholen"), "heraufzuhol");});
test("heraufzusäuseln -> heraufzusauseln", function() {deepEqual( Stem("heraufzusäuseln"), "heraufzusauseln");});
test("heraus -> heraus", function() {deepEqual( Stem("heraus"), "heraus");});
test("herausbrachte -> herausbracht", function() {deepEqual( Stem("herausbrachte"), "herausbracht");});
test("herausbringen -> herausbring", function() {deepEqual( Stem("herausbringen"), "herausbring");});
test("herausbrüllten -> herausbrullt", function() {deepEqual( Stem("herausbrüllten"), "herausbrullt");});
test("herausfischen -> herausf", function() {deepEqual( Stem("herausfischen"), "herausf");});
test("herausfliegen -> herausflieg", function() {deepEqual( Stem("herausfliegen"), "herausflieg");});
test("herausforderung -> herausforder", function() {deepEqual( Stem("herausforderung"), "herausforder");});
test("herausführen -> herausfuhr", function() {deepEqual( Stem("herausführen"), "herausfuhr");});
test("herausführt -> herausfuhrt", function() {deepEqual( Stem("herausführt"), "herausfuhrt");});
test("herausgeben -> herausgeb", function() {deepEqual( Stem("herausgeben"), "herausgeb");});
test("herausgefordert -> herausgefordert", function() {deepEqual( Stem("herausgefordert"), "herausgefordert");});
test("herausgeführt -> herausgefuhrt", function() {deepEqual( Stem("herausgeführt"), "herausgefuhrt");});
test("herausgegeben -> herausgegeb", function() {deepEqual( Stem("herausgegeben"), "herausgegeb");});
test("herausgegriffen -> herausgegriff", function() {deepEqual( Stem("herausgegriffen"), "herausgegriff");});
test("herausgehen -> herausgeh", function() {deepEqual( Stem("herausgehen"), "herausgeh");});
test("herausgeholt -> herausgeholt", function() {deepEqual( Stem("herausgeholt"), "herausgeholt");});
test("herausgekommen -> herausgekomm", function() {deepEqual( Stem("herausgekommen"), "herausgekomm");});
test("herausgelassen -> herausgelass", function() {deepEqual( Stem("herausgelassen"), "herausgelass");});
test("herausgelesen -> herausgeles", function() {deepEqual( Stem("herausgelesen"), "herausgeles");});
test("herausgenommen -> herausgenomm", function() {deepEqual( Stem("herausgenommen"), "herausgenomm");});
test("herausgereicht -> herausgereicht", function() {deepEqual( Stem("herausgereicht"), "herausgereicht");});
test("herausgeschnitten -> herausgeschnitt", function() {deepEqual( Stem("herausgeschnitten"), "herausgeschnitt");});
test("herausgestellt -> herausgestellt", function() {deepEqual( Stem("herausgestellt"), "herausgestellt");});
test("herausgezaubert -> herausgezaubert", function() {deepEqual( Stem("herausgezaubert"), "herausgezaubert");});
test("herausgezogen -> herausgezog", function() {deepEqual( Stem("herausgezogen"), "herausgezog");});
test("herausgezupft -> herausgezupft", function() {deepEqual( Stem("herausgezupft"), "herausgezupft");});
test("herausguckten -> herausguckt", function() {deepEqual( Stem("herausguckten"), "herausguckt");});
test("heraushilft -> heraushilft", function() {deepEqual( Stem("heraushilft"), "heraushilft");});
test("herausholen -> heraushol", function() {deepEqual( Stem("herausholen"), "heraushol");});
test("herauskam -> herauskam", function() {deepEqual( Stem("herauskam"), "herauskam");});
test("herauskamen -> herauskam", function() {deepEqual( Stem("herauskamen"), "herauskam");});
test("herausklauben -> herausklaub", function() {deepEqual( Stem("herausklauben"), "herausklaub");});
test("herauskommen -> herauskomm", function() {deepEqual( Stem("herauskommen"), "herauskomm");});
test("herauskommt -> herauskommt", function() {deepEqual( Stem("herauskommt"), "herauskommt");});
test("herauskriegen -> herauskrieg", function() {deepEqual( Stem("herauskriegen"), "herauskrieg");});
test("herauslügens -> herauslug", function() {deepEqual( Stem("herauslügens"), "herauslug");});
test("herausmachen -> herausmach", function() {deepEqual( Stem("herausmachen"), "herausmach");});
test("herausnehmen -> herausnehm", function() {deepEqual( Stem("herausnehmen"), "herausnehm");});
test("herausnimmt -> herausnimmt", function() {deepEqual( Stem("herausnimmt"), "herausnimmt");});
test("herausplatzt -> herausplatzt", function() {deepEqual( Stem("herausplatzt"), "herausplatzt");});
test("herauspurzelten -> herauspurzelt", function() {deepEqual( Stem("herauspurzelten"), "herauspurzelt");});
test("herausreisst -> herausreisst", function() {deepEqual( Stem("herausreisst"), "herausreisst");});
test("herausreißt -> herausreisst", function() {deepEqual( Stem("herausreißt"), "herausreisst");});
test("herausschneiden -> herausschneid", function() {deepEqual( Stem("herausschneiden"), "herausschneid");});
test("herausschrieb -> herausschrieb", function() {deepEqual( Stem("herausschrieb"), "herausschrieb");});
test("heraussen -> herauss", function() {deepEqual( Stem("heraussen"), "herauss");});
test("herausspritzte -> herausspritzt", function() {deepEqual( Stem("herausspritzte"), "herausspritzt");});
test("heraussteigt -> heraussteigt", function() {deepEqual( Stem("heraussteigt"), "heraussteigt");});
test("herausstellen -> herausstell", function() {deepEqual( Stem("herausstellen"), "herausstell");});
test("herausstellt -> herausstellt", function() {deepEqual( Stem("herausstellt"), "herausstellt");});
test("herausstiess -> herausstiess", function() {deepEqual( Stem("herausstiess"), "herausstiess");});
test("heraustauchte -> heraustaucht", function() {deepEqual( Stem("heraustauchte"), "heraustaucht");});
test("heraustraten -> heraustrat", function() {deepEqual( Stem("heraustraten"), "heraustrat");});
test("heraustritt -> heraustritt", function() {deepEqual( Stem("heraustritt"), "heraustritt");});
test("herausziehen -> herauszieh", function() {deepEqual( Stem("herausziehen"), "herauszieh");});
test("herauszubringen -> herauszubring", function() {deepEqual( Stem("herauszubringen"), "herauszubring");});
test("herauszufordern -> herauszuford", function() {deepEqual( Stem("herauszufordern"), "herauszuford");});
test("herauszufragen -> herauszufrag", function() {deepEqual( Stem("herauszufragen"), "herauszufrag");});
test("herauszuführen -> herauszufuhr", function() {deepEqual( Stem("herauszuführen"), "herauszufuhr");});
test("herauszugehen -> herauszugeh", function() {deepEqual( Stem("herauszugehen"), "herauszugeh");});
test("herauszukommen -> herauszukomm", function() {deepEqual( Stem("herauszukommen"), "herauszukomm");});
test("herauszuschneiden -> herauszuschneid", function() {deepEqual( Stem("herauszuschneiden"), "herauszuschneid");});
test("herauszuschreiben -> herauszuschreib", function() {deepEqual( Stem("herauszuschreiben"), "herauszuschreib");});
test("herauszustreichen -> herauszustreich", function() {deepEqual( Stem("herauszustreichen"), "herauszustreich");});
test("herauszwingen -> herauszwing", function() {deepEqual( Stem("herauszwingen"), "herauszwing");});
test("herbe -> herb", function() {deepEqual( Stem("herbe"), "herb");});
test("herbei -> herbei", function() {deepEqual( Stem("herbei"), "herbei");});
test("herbeibringen -> herbeibring", function() {deepEqual( Stem("herbeibringen"), "herbeibring");});
test("herbeieilenden -> herbeieil", function() {deepEqual( Stem("herbeieilenden"), "herbeieil");});
test("herbeiführe -> herbeifuhr", function() {deepEqual( Stem("herbeiführe"), "herbeifuhr");});
test("herbeiführt -> herbeifuhrt", function() {deepEqual( Stem("herbeiführt"), "herbeifuhrt");});
test("herbeiführte -> herbeifuhrt", function() {deepEqual( Stem("herbeiführte"), "herbeifuhrt");});
test("herbeiführung -> herbeifuhr", function() {deepEqual( Stem("herbeiführung"), "herbeifuhr");});
test("herbeigebracht -> herbeigebracht", function() {deepEqual( Stem("herbeigebracht"), "herbeigebracht");});
test("herbeigeführt -> herbeigefuhrt", function() {deepEqual( Stem("herbeigeführt"), "herbeigefuhrt");});
test("herbeigeführte -> herbeigefuhrt", function() {deepEqual( Stem("herbeigeführte"), "herbeigefuhrt");});
test("herbeigekommen -> herbeigekomm", function() {deepEqual( Stem("herbeigekommen"), "herbeigekomm");});
test("herbeigelaufen -> herbeigelauf", function() {deepEqual( Stem("herbeigelaufen"), "herbeigelauf");});
test("herbeigetragen -> herbeigetrag", function() {deepEqual( Stem("herbeigetragen"), "herbeigetrag");});
test("herbeigezogen -> herbeigezog", function() {deepEqual( Stem("herbeigezogen"), "herbeigezog");});
test("herbeikam -> herbeikam", function() {deepEqual( Stem("herbeikam"), "herbeikam");});
test("herbeikamen -> herbeikam", function() {deepEqual( Stem("herbeikamen"), "herbeikam");});
test("herbeikommen -> herbeikomm", function() {deepEqual( Stem("herbeikommen"), "herbeikomm");});
test("herbeikommt -> herbeikommt", function() {deepEqual( Stem("herbeikommt"), "herbeikommt");});
test("herbeiströmen -> herbeistrom", function() {deepEqual( Stem("herbeiströmen"), "herbeistrom");});
test("herbeizuführen -> herbeizufuhr", function() {deepEqual( Stem("herbeizuführen"), "herbeizufuhr");});
test("herbeizuholen -> herbeizuhol", function() {deepEqual( Stem("herbeizuholen"), "herbeizuhol");});
test("herbeizuschaffen -> herbeizuschaff", function() {deepEqual( Stem("herbeizuschaffen"), "herbeizuschaff");});
test("herberge -> herberg", function() {deepEqual( Stem("herberge"), "herberg");});
test("herbergskammern -> herbergskamm", function() {deepEqual( Stem("herbergskammern"), "herbergskamm");});
test("herbeste -> herb", function() {deepEqual( Stem("herbeste"), "herb");});
test("herbringen -> herbring", function() {deepEqual( Stem("herbringen"), "herbring");});
test("herbst -> herb", function() {deepEqual( Stem("herbst"), "herb");});
test("herbstabendhimmel -> herbstabendhimmel", function() {deepEqual( Stem("herbstabendhimmel"), "herbstabendhimmel");});
test("herbstabends -> herbstab", function() {deepEqual( Stem("herbstabends"), "herbstab");});
test("herbsteigen -> herbsteig", function() {deepEqual( Stem("herbsteigen"), "herbsteig");});
test("herbstes -> herb", function() {deepEqual( Stem("herbstes"), "herb");});
test("herbstmorgens -> herbstmorg", function() {deepEqual( Stem("herbstmorgens"), "herbstmorg");});
test("herbstnachmittag -> herbstnachmittag", function() {deepEqual( Stem("herbstnachmittag"), "herbstnachmittag");});
test("herbstnebel -> herbstnebel", function() {deepEqual( Stem("herbstnebel"), "herbstnebel");});
test("herbstsonnenschein -> herbstsonnenschein", function() {deepEqual( Stem("herbstsonnenschein"), "herbstsonnenschein");});
test("herbstwetter -> herbstwett", function() {deepEqual( Stem("herbstwetter"), "herbstwett");});
test("herchen -> herch", function() {deepEqual( Stem("herchen"), "herch");});
test("herd -> herd", function() {deepEqual( Stem("herd"), "herd");});
test("herde -> herd", function() {deepEqual( Stem("herde"), "herd");});
test("herden -> herd", function() {deepEqual( Stem("herden"), "herd");});
test("herdfeuer -> herdfeu", function() {deepEqual( Stem("herdfeuer"), "herdfeu");});
test("herein -> herein", function() {deepEqual( Stem("herein"), "herein");});
test("hereinbräche -> hereinbrach", function() {deepEqual( Stem("hereinbräche"), "hereinbrach");});
test("hereinbrächen -> hereinbrach", function() {deepEqual( Stem("hereinbrächen"), "hereinbrach");});
test("hereinbrechen -> hereinbrech", function() {deepEqual( Stem("hereinbrechen"), "hereinbrech");});
test("hereinbricht -> hereinbricht", function() {deepEqual( Stem("hereinbricht"), "hereinbricht");});
test("hereingebrachte -> hereingebracht", function() {deepEqual( Stem("hereingebrachte"), "hereingebracht");});
test("hereingebrachtes -> hereingebracht", function() {deepEqual( Stem("hereingebrachtes"), "hereingebracht");});
test("hereingepeitscht -> hereingepeitscht", function() {deepEqual( Stem("hereingepeitscht"), "hereingepeitscht");});
test("hereingesendet -> hereingesendet", function() {deepEqual( Stem("hereingesendet"), "hereingesendet");});
test("hereingetölpelt -> hereingetolpelt", function() {deepEqual( Stem("hereingetölpelt"), "hereingetolpelt");});
test("hereingeworfenes -> hereingeworf", function() {deepEqual( Stem("hereingeworfenes"), "hereingeworf");});
test("hereinguckte -> hereinguckt", function() {deepEqual( Stem("hereinguckte"), "hereinguckt");});
test("hereinkam -> hereinkam", function() {deepEqual( Stem("hereinkam"), "hereinkam");});
test("hereinkommen -> hereinkomm", function() {deepEqual( Stem("hereinkommen"), "hereinkomm");});
test("hereinragte -> hereinragt", function() {deepEqual( Stem("hereinragte"), "hereinragt");});
test("hereinwatschelte -> hereinwatschelt", function() {deepEqual( Stem("hereinwatschelte"), "hereinwatschelt");});
test("hereinzukommen -> hereinzukomm", function() {deepEqual( Stem("hereinzukommen"), "hereinzukomm");});
test("heresibus -> heresibus", function() {deepEqual( Stem("heresibus"), "heresibus");});
test("herfahren -> herfahr", function() {deepEqual( Stem("herfahren"), "herfahr");});
test("herflatterte -> herflattert", function() {deepEqual( Stem("herflatterte"), "herflattert");});
test("herflatterten -> herflattert", function() {deepEqual( Stem("herflatterten"), "herflattert");});
test("herg -> herg", function() {deepEqual( Stem("herg"), "herg");});
test("hergeben -> hergeb", function() {deepEqual( Stem("hergeben"), "hergeb");});
test("hergefahren -> hergefahr", function() {deepEqual( Stem("hergefahren"), "hergefahr");});
test("hergeführt -> hergefuhrt", function() {deepEqual( Stem("hergeführt"), "hergefuhrt");});
test("hergegeben -> hergegeb", function() {deepEqual( Stem("hergegeben"), "hergegeb");});
test("hergehen -> hergeh", function() {deepEqual( Stem("hergehen"), "hergeh");});
test("hergehend -> hergeh", function() {deepEqual( Stem("hergehend"), "hergeh");});
test("hergehst -> hergeh", function() {deepEqual( Stem("hergehst"), "hergeh");});
test("hergeht -> hergeht", function() {deepEqual( Stem("hergeht"), "hergeht");});
test("hergekommen -> hergekomm", function() {deepEqual( Stem("hergekommen"), "hergekomm");});
test("hergeleitet -> hergeleitet", function() {deepEqual( Stem("hergeleitet"), "hergeleitet");});
test("hergeleuchtet -> hergeleuchtet", function() {deepEqual( Stem("hergeleuchtet"), "hergeleuchtet");});
test("hergemacht -> hergemacht", function() {deepEqual( Stem("hergemacht"), "hergemacht");});
test("hergenommen -> hergenomm", function() {deepEqual( Stem("hergenommen"), "hergenomm");});
test("hergerufen -> hergeruf", function() {deepEqual( Stem("hergerufen"), "hergeruf");});
test("hergesagt -> hergesagt", function() {deepEqual( Stem("hergesagt"), "hergesagt");});
test("hergesandt -> hergesandt", function() {deepEqual( Stem("hergesandt"), "hergesandt");});
test("hergestellt -> hergestellt", function() {deepEqual( Stem("hergestellt"), "hergestellt");});
test("hergestellten -> hergestellt", function() {deepEqual( Stem("hergestellten"), "hergestellt");});
test("hergetrieben -> hergetrieb", function() {deepEqual( Stem("hergetrieben"), "hergetrieb");});
test("hergewandert -> hergewandert", function() {deepEqual( Stem("hergewandert"), "hergewandert");});
test("hergezogen -> hergezog", function() {deepEqual( Stem("hergezogen"), "hergezog");});
test("herging -> herging", function() {deepEqual( Stem("herging"), "herging");});
test("hering -> hering", function() {deepEqual( Stem("hering"), "hering");});
test("heringe -> hering", function() {deepEqual( Stem("heringe"), "hering");});
test("heringen -> hering", function() {deepEqual( Stem("heringen"), "hering");});
test("herjagte -> herjagt", function() {deepEqual( Stem("herjagte"), "herjagt");});
test("herkam -> herkam", function() {deepEqual( Stem("herkam"), "herkam");});
test("herkämen -> herkam", function() {deepEqual( Stem("herkämen"), "herkam");});
test("herkomme -> herkomm", function() {deepEqual( Stem("herkomme"), "herkomm");});
test("herkommen -> herkomm", function() {deepEqual( Stem("herkommen"), "herkomm");});
test("herkommenden -> herkomm", function() {deepEqual( Stem("herkommenden"), "herkomm");});
test("herkommt -> herkommt", function() {deepEqual( Stem("herkommt"), "herkommt");});
test("herkunft -> herkunft", function() {deepEqual( Stem("herkunft"), "herkunft");});
test("hermann -> hermann", function() {deepEqual( Stem("hermann"), "hermann");});
test("hermarschiert -> hermarschiert", function() {deepEqual( Stem("hermarschiert"), "hermarschiert");});
test("hermsdorf -> hermsdorf", function() {deepEqual( Stem("hermsdorf"), "hermsdorf");});
test("hernach -> hernach", function() {deepEqual( Stem("hernach"), "hernach");});
test("hernahm -> hernahm", function() {deepEqual( Stem("hernahm"), "hernahm");});
test("hernehmen -> hernehm", function() {deepEqual( Stem("hernehmen"), "hernehm");});
test("hernehmt -> hernehmt", function() {deepEqual( Stem("hernehmt"), "hernehmt");});
test("hernieder -> hernied", function() {deepEqual( Stem("hernieder"), "hernied");});
test("herniederregneten -> herniederregnet", function() {deepEqual( Stem("herniederregneten"), "herniederregnet");});
test("herniedersahen -> herniedersah", function() {deepEqual( Stem("herniedersahen"), "herniedersah");});
test("herniedersank -> herniedersank", function() {deepEqual( Stem("herniedersank"), "herniedersank");});
test("hernimmt -> hernimmt", function() {deepEqual( Stem("hernimmt"), "hernimmt");});
test("heroisch -> heroisch", function() {deepEqual( Stem("heroisch"), "heroisch");});
test("heroischer -> heroisch", function() {deepEqual( Stem("heroischer"), "heroisch");});
test("heroismus -> heroismus", function() {deepEqual( Stem("heroismus"), "heroismus");});
test("heros -> heros", function() {deepEqual( Stem("heros"), "heros");});
test("herr -> herr", function() {deepEqual( Stem("herr"), "herr");});
test("herreden -> herred", function() {deepEqual( Stem("herreden"), "herred");});
test("herren -> herr", function() {deepEqual( Stem("herren"), "herr");});
test("herrengesellschaften -> herrengesellschaft", function() {deepEqual( Stem("herrengesellschaften"), "herrengesellschaft");});
test("herrenhaus -> herrenhaus", function() {deepEqual( Stem("herrenhaus"), "herrenhaus");});
test("herrenlos -> herrenlos", function() {deepEqual( Stem("herrenlos"), "herrenlos");});
test("herrenlose -> herrenlos", function() {deepEqual( Stem("herrenlose"), "herrenlos");});
test("herrenlosen -> herrenlos", function() {deepEqual( Stem("herrenlosen"), "herrenlos");});
test("herrenrointhütte -> herrenrointhutt", function() {deepEqual( Stem("herrenrointhütte"), "herrenrointhutt");});
test("herrentafel -> herrentafel", function() {deepEqual( Stem("herrentafel"), "herrentafel");});
test("herrentross -> herrentross", function() {deepEqual( Stem("herrentross"), "herrentross");});
test("herrentroß -> herrentross", function() {deepEqual( Stem("herrentroß"), "herrentross");});
test("herrgott -> herrgott", function() {deepEqual( Stem("herrgott"), "herrgott");});
test("herrgottswinkel -> herrgottswinkel", function() {deepEqual( Stem("herrgottswinkel"), "herrgottswinkel");});
test("herrin -> herrin", function() {deepEqual( Stem("herrin"), "herrin");});
test("herrisch -> herrisch", function() {deepEqual( Stem("herrisch"), "herrisch");});
test("herrlich -> herrlich", function() {deepEqual( Stem("herrlich"), "herrlich");});
test("herrliche -> herrlich", function() {deepEqual( Stem("herrliche"), "herrlich");});
test("herrlichem -> herrlich", function() {deepEqual( Stem("herrlichem"), "herrlich");});
test("herrlichen -> herrlich", function() {deepEqual( Stem("herrlichen"), "herrlich");});
test("herrlicher -> herrlich", function() {deepEqual( Stem("herrlicher"), "herrlich");});
test("herrliches -> herrlich", function() {deepEqual( Stem("herrliches"), "herrlich");});
test("herrlichkeit -> herrlich", function() {deepEqual( Stem("herrlichkeit"), "herrlich");});
test("herrlichkeiten -> herrlich", function() {deepEqual( Stem("herrlichkeiten"), "herrlich");});
test("herrlichste -> herrlich", function() {deepEqual( Stem("herrlichste"), "herrlich");});
test("herrlichsten -> herrlich", function() {deepEqual( Stem("herrlichsten"), "herrlich");});
test("herrn -> herrn", function() {deepEqual( Stem("herrn"), "herrn");});
test("herrsch -> herrsch", function() {deepEqual( Stem("herrsch"), "herrsch");});
test("herrschaft -> herrschaft", function() {deepEqual( Stem("herrschaft"), "herrschaft");});
test("herrschaften -> herrschaft", function() {deepEqual( Stem("herrschaften"), "herrschaft");});
test("herrschaftlichen -> herrschaft", function() {deepEqual( Stem("herrschaftlichen"), "herrschaft");});
test("herrschaftlicher -> herrschaft", function() {deepEqual( Stem("herrschaftlicher"), "herrschaft");});
test("herrsche -> herrsch", function() {deepEqual( Stem("herrsche"), "herrsch");});
test("herrschen -> herrsch", function() {deepEqual( Stem("herrschen"), "herrsch");});
test("herrschend -> herrschend", function() {deepEqual( Stem("herrschend"), "herrschend");});
test("herrschende -> herrschend", function() {deepEqual( Stem("herrschende"), "herrschend");});
test("herrschenden -> herrschend", function() {deepEqual( Stem("herrschenden"), "herrschend");});
test("herrschens -> herrsch", function() {deepEqual( Stem("herrschens"), "herrsch");});
test("herrscherinnen -> herrscherinn", function() {deepEqual( Stem("herrscherinnen"), "herrscherinn");});
test("herrschest -> herrsch", function() {deepEqual( Stem("herrschest"), "herrsch");});
test("herrschet -> herrschet", function() {deepEqual( Stem("herrschet"), "herrschet");});
test("herrscht -> herrscht", function() {deepEqual( Stem("herrscht"), "herrscht");});
test("herrschte -> herrscht", function() {deepEqual( Stem("herrschte"), "herrscht");});
test("herrschten -> herrscht", function() {deepEqual( Stem("herrschten"), "herrscht");});
test("herrühre -> herruhr", function() {deepEqual( Stem("herrühre"), "herruhr");});
test("herrührt -> herruhrt", function() {deepEqual( Stem("herrührt"), "herruhrt");});
test("herrührten -> herruhrt", function() {deepEqual( Stem("herrührten"), "herruhrt");});
test("herschritt -> herschritt", function() {deepEqual( Stem("herschritt"), "herschritt");});
test("herstammend -> herstamm", function() {deepEqual( Stem("herstammend"), "herstamm");});
test("herstammende -> herstamm", function() {deepEqual( Stem("herstammende"), "herstamm");});
test("herstammenden -> herstamm", function() {deepEqual( Stem("herstammenden"), "herstamm");});
test("herstammt -> herstammt", function() {deepEqual( Stem("herstammt"), "herstammt");});
test("herstammte -> herstammt", function() {deepEqual( Stem("herstammte"), "herstammt");});
test("herstammten -> herstammt", function() {deepEqual( Stem("herstammten"), "herstammt");});
test("herstelle -> herstell", function() {deepEqual( Stem("herstelle"), "herstell");});
test("herstellen -> herstell", function() {deepEqual( Stem("herstellen"), "herstell");});
test("hersteller -> herstell", function() {deepEqual( Stem("hersteller"), "herstell");});
test("herstellung -> herstell", function() {deepEqual( Stem("herstellung"), "herstell");});
test("herüber -> herub", function() {deepEqual( Stem("herüber"), "herub");});
test("herübergeworfen -> herubergeworf", function() {deepEqual( Stem("herübergeworfen"), "herubergeworf");});
test("herüberkommen -> heruberkomm", function() {deepEqual( Stem("herüberkommen"), "heruberkomm");});
test("herüberzukommen -> heruberzukomm", function() {deepEqual( Stem("herüberzukommen"), "heruberzukomm");});
test("herum -> herum", function() {deepEqual( Stem("herum"), "herum");});
test("herumbiegend -> herumbieg", function() {deepEqual( Stem("herumbiegend"), "herumbieg");});
test("herumfliegt -> herumfliegt", function() {deepEqual( Stem("herumfliegt"), "herumfliegt");});
test("herumflog -> herumflog", function() {deepEqual( Stem("herumflog"), "herumflog");});
test("herumführte -> herumfuhrt", function() {deepEqual( Stem("herumführte"), "herumfuhrt");});
test("herumgeflogen -> herumgeflog", function() {deepEqual( Stem("herumgeflogen"), "herumgeflog");});
test("herumgefuchtelt -> herumgefuchtelt", function() {deepEqual( Stem("herumgefuchtelt"), "herumgefuchtelt");});
test("herumgehen -> herumgeh", function() {deepEqual( Stem("herumgehen"), "herumgeh");});
test("herumgeschlagen -> herumgeschlag", function() {deepEqual( Stem("herumgeschlagen"), "herumgeschlag");});
test("herumgeschlüpft -> herumgeschlupft", function() {deepEqual( Stem("herumgeschlüpft"), "herumgeschlupft");});
test("herumgeschnitten -> herumgeschnitt", function() {deepEqual( Stem("herumgeschnitten"), "herumgeschnitt");});
test("herumgesprochen -> herumgesproch", function() {deepEqual( Stem("herumgesprochen"), "herumgesproch");});
test("herumgetrieben -> herumgetrieb", function() {deepEqual( Stem("herumgetrieben"), "herumgetrieb");});
test("herumging -> herumging", function() {deepEqual( Stem("herumging"), "herumging");});
test("herumhing -> herumhing", function() {deepEqual( Stem("herumhing"), "herumhing");});
test("herumhocken -> herumhock", function() {deepEqual( Stem("herumhocken"), "herumhock");});
test("herumhuschten -> herumhuscht", function() {deepEqual( Stem("herumhuschten"), "herumhuscht");});
test("herumkollerte -> herumkollert", function() {deepEqual( Stem("herumkollerte"), "herumkollert");});
test("herumlagen -> herumlag", function() {deepEqual( Stem("herumlagen"), "herumlag");});
test("herumlaufe -> herumlauf", function() {deepEqual( Stem("herumlaufe"), "herumlauf");});
test("herumlaufen -> herumlauf", function() {deepEqual( Stem("herumlaufen"), "herumlauf");});
test("herumlief -> herumlief", function() {deepEqual( Stem("herumlief"), "herumlief");});
test("herumliefe -> herumlief", function() {deepEqual( Stem("herumliefe"), "herumlief");});
test("herumliegen -> herumlieg", function() {deepEqual( Stem("herumliegen"), "herumlieg");});
test("herumlungern -> heruml", function() {deepEqual( Stem("herumlungern"), "heruml");});
test("herumlungerns -> herumlungern", function() {deepEqual( Stem("herumlungerns"), "herumlungern");});
test("herumplätscherte -> herumplatschert", function() {deepEqual( Stem("herumplätscherte"), "herumplatschert");});
test("herumrutschten -> herumrutscht", function() {deepEqual( Stem("herumrutschten"), "herumrutscht");});
test("herumsäete -> herumsaet", function() {deepEqual( Stem("herumsäete"), "herumsaet");});
test("herumscharrten -> herumscharrt", function() {deepEqual( Stem("herumscharrten"), "herumscharrt");});
test("herumschleichen -> herumschleich", function() {deepEqual( Stem("herumschleichen"), "herumschleich");});
test("herumschleppte -> herumschleppt", function() {deepEqual( Stem("herumschleppte"), "herumschleppt");});
test("herumschlichen -> herumsch", function() {deepEqual( Stem("herumschlichen"), "herumsch");});
test("herumschlug -> herumschlug", function() {deepEqual( Stem("herumschlug"), "herumschlug");});
test("herumschlugen -> herumschlug", function() {deepEqual( Stem("herumschlugen"), "herumschlug");});
test("herumschweben -> herumschweb", function() {deepEqual( Stem("herumschweben"), "herumschweb");});
test("herumschweifen -> herumschweif", function() {deepEqual( Stem("herumschweifen"), "herumschweif");});
test("herumschwenken -> herumschwenk", function() {deepEqual( Stem("herumschwenken"), "herumschwenk");});
test("herumspazieren -> herumspazi", function() {deepEqual( Stem("herumspazieren"), "herumspazi");});
test("herumsprang -> herumsprang", function() {deepEqual( Stem("herumsprang"), "herumsprang");});
test("herumsprangen -> herumsprang", function() {deepEqual( Stem("herumsprangen"), "herumsprang");});
test("herumstand -> herumstand", function() {deepEqual( Stem("herumstand"), "herumstand");});
test("herumstanden -> herumstand", function() {deepEqual( Stem("herumstanden"), "herumstand");});
test("herumständern -> herumstand", function() {deepEqual( Stem("herumständern"), "herumstand");});
test("herumstocherte -> herumstochert", function() {deepEqual( Stem("herumstocherte"), "herumstochert");});
test("herumstreicht -> herumstreicht", function() {deepEqual( Stem("herumstreicht"), "herumstreicht");});
test("herumstreifende -> herumstreif", function() {deepEqual( Stem("herumstreifende"), "herumstreif");});
test("herumstreifte -> herumstreift", function() {deepEqual( Stem("herumstreifte"), "herumstreift");});
test("herumstreite -> herumstreit", function() {deepEqual( Stem("herumstreite"), "herumstreit");});
test("herumstrich -> herumstrich", function() {deepEqual( Stem("herumstrich"), "herumstrich");});
test("herumtänzeln -> herumtanzeln", function() {deepEqual( Stem("herumtänzeln"), "herumtanzeln");});
test("herumtappt -> herumtappt", function() {deepEqual( Stem("herumtappt"), "herumtappt");});
test("herumtragen -> herumtrag", function() {deepEqual( Stem("herumtragen"), "herumtrag");});
test("herumtreibe -> herumtreib", function() {deepEqual( Stem("herumtreibe"), "herumtreib");});
test("herumtreiben -> herumtreib", function() {deepEqual( Stem("herumtreiben"), "herumtreib");});
test("herumtreiber -> herumtreib", function() {deepEqual( Stem("herumtreiber"), "herumtreib");});
test("herumtrug -> herumtrug", function() {deepEqual( Stem("herumtrug"), "herumtrug");});
test("herumtrüge -> herumtrug", function() {deepEqual( Stem("herumtrüge"), "herumtrug");});
test("herumtummelte -> herumtummelt", function() {deepEqual( Stem("herumtummelte"), "herumtummelt");});
test("herumwälzte -> herumwalzt", function() {deepEqual( Stem("herumwälzte"), "herumwalzt");});
test("herumwandle -> herumwandl", function() {deepEqual( Stem("herumwandle"), "herumwandl");});
test("herumwarf -> herumwarf", function() {deepEqual( Stem("herumwarf"), "herumwarf");});
test("herumzerrt -> herumzerrt", function() {deepEqual( Stem("herumzerrt"), "herumzerrt");});
test("herumzerrte -> herumzerrt", function() {deepEqual( Stem("herumzerrte"), "herumzerrt");});
test("herumziehende -> herumzieh", function() {deepEqual( Stem("herumziehende"), "herumzieh");});
test("herumzuärgern -> herumzuarg", function() {deepEqual( Stem("herumzuärgern"), "herumzuarg");});
test("herumzufuchteln -> herumzufuchteln", function() {deepEqual( Stem("herumzufuchteln"), "herumzufuchteln");});
test("herumzukreuzen -> herumzukreuz", function() {deepEqual( Stem("herumzukreuzen"), "herumzukreuz");});
test("herumzurasen -> herumzuras", function() {deepEqual( Stem("herumzurasen"), "herumzuras");});
test("herumzuschweifen -> herumzuschweif", function() {deepEqual( Stem("herumzuschweifen"), "herumzuschweif");});
test("herumzustreichen -> herumzustreich", function() {deepEqual( Stem("herumzustreichen"), "herumzustreich");});
test("herumzusummen -> herumzusumm", function() {deepEqual( Stem("herumzusummen"), "herumzusumm");});
test("herumzutummeln -> herumzutummeln", function() {deepEqual( Stem("herumzutummeln"), "herumzutummeln");});
test("herumzuturnen -> herumzuturn", function() {deepEqual( Stem("herumzuturnen"), "herumzuturn");});
test("herumzuziehen -> herumzuzieh", function() {deepEqual( Stem("herumzuziehen"), "herumzuzieh");});
test("herunter -> herunt", function() {deepEqual( Stem("herunter"), "herunt");});
test("herunterblickte -> herunterblickt", function() {deepEqual( Stem("herunterblickte"), "herunterblickt");});
test("herunterfinden -> herunterfind", function() {deepEqual( Stem("herunterfinden"), "herunterfind");});
test("herunterflog -> herunterflog", function() {deepEqual( Stem("herunterflog"), "herunterflog");});
test("heruntergebracht -> heruntergebracht", function() {deepEqual( Stem("heruntergebracht"), "heruntergebracht");});
test("heruntergebrannt -> heruntergebrannt", function() {deepEqual( Stem("heruntergebrannt"), "heruntergebrannt");});
test("heruntergekommen -> heruntergekomm", function() {deepEqual( Stem("heruntergekommen"), "heruntergekomm");});
test("heruntergekommene -> heruntergekomm", function() {deepEqual( Stem("heruntergekommene"), "heruntergekomm");});
test("herunterholen -> herunterhol", function() {deepEqual( Stem("herunterholen"), "herunterhol");});
test("herunterkam -> herunterkam", function() {deepEqual( Stem("herunterkam"), "herunterkam");});
test("herunterkommen -> herunterkomm", function() {deepEqual( Stem("herunterkommen"), "herunterkomm");});
test("herunternehmen -> herunternehm", function() {deepEqual( Stem("herunternehmen"), "herunternehm");});
test("herunterpurzeln -> herunterpurzeln", function() {deepEqual( Stem("herunterpurzeln"), "herunterpurzeln");});
test("herunterpurzelten -> herunterpurzelt", function() {deepEqual( Stem("herunterpurzelten"), "herunterpurzelt");});
test("herunterstreifte -> herunterstreift", function() {deepEqual( Stem("herunterstreifte"), "herunterstreift");});
test("herunterwarf -> herunterwarf", function() {deepEqual( Stem("herunterwarf"), "herunterwarf");});
test("herunterwehte -> herunterweht", function() {deepEqual( Stem("herunterwehte"), "herunterweht");});
test("herunterwickelte -> herunterwickelt", function() {deepEqual( Stem("herunterwickelte"), "herunterwickelt");});
test("herunterziehen -> herunterzieh", function() {deepEqual( Stem("herunterziehen"), "herunterzieh");});
test("herunterzuholen -> herunterzuhol", function() {deepEqual( Stem("herunterzuholen"), "herunterzuhol");});
test("herunterzuschlagen -> herunterzuschlag", function() {deepEqual( Stem("herunterzuschlagen"), "herunterzuschlag");});
test("herunterzustossen -> herunterzustoss", function() {deepEqual( Stem("herunterzustossen"), "herunterzustoss");});
test("hervor -> hervor", function() {deepEqual( Stem("hervor"), "hervor");});
test("hervorblitzte -> hervorblitzt", function() {deepEqual( Stem("hervorblitzte"), "hervorblitzt");});
test("hervorbrach -> hervorbrach", function() {deepEqual( Stem("hervorbrach"), "hervorbrach");});
test("hervorbrachte -> hervorbracht", function() {deepEqual( Stem("hervorbrachte"), "hervorbracht");});
test("hervorbrechen -> hervorbrech", function() {deepEqual( Stem("hervorbrechen"), "hervorbrech");});
test("hervorbrechenden -> hervorbrech", function() {deepEqual( Stem("hervorbrechenden"), "hervorbrech");});
test("hervorbricht -> hervorbricht", function() {deepEqual( Stem("hervorbricht"), "hervorbricht");});
test("hervorbringe -> hervorbring", function() {deepEqual( Stem("hervorbringe"), "hervorbring");});
test("hervorbringen -> hervorbring", function() {deepEqual( Stem("hervorbringen"), "hervorbring");});
test("hervorbringt -> hervorbringt", function() {deepEqual( Stem("hervorbringt"), "hervorbringt");});
test("hervorbringung -> hervorbring", function() {deepEqual( Stem("hervorbringung"), "hervorbring");});
test("hervorfliessen -> hervorfliess", function() {deepEqual( Stem("hervorfliessen"), "hervorfliess");});
test("hervorfließen -> hervorfliess", function() {deepEqual( Stem("hervorfließen"), "hervorfliess");});
test("hervorgebracht -> hervorgebracht", function() {deepEqual( Stem("hervorgebracht"), "hervorgebracht");});
test("hervorgebrochen -> hervorgebroch", function() {deepEqual( Stem("hervorgebrochen"), "hervorgebroch");});
test("hervorgegangen -> hervorgegang", function() {deepEqual( Stem("hervorgegangen"), "hervorgegang");});
test("hervorgegangene -> hervorgegang", function() {deepEqual( Stem("hervorgegangene"), "hervorgegang");});
test("hervorgehen -> hervorgeh", function() {deepEqual( Stem("hervorgehen"), "hervorgeh");});
test("hervorgehende -> hervorgeh", function() {deepEqual( Stem("hervorgehende"), "hervorgeh");});
test("hervorgehenden -> hervorgeh", function() {deepEqual( Stem("hervorgehenden"), "hervorgeh");});
test("hervorgeholt -> hervorgeholt", function() {deepEqual( Stem("hervorgeholt"), "hervorgeholt");});
test("hervorgeht -> hervorgeht", function() {deepEqual( Stem("hervorgeht"), "hervorgeht");});
test("hervorgerufen -> hervorgeruf", function() {deepEqual( Stem("hervorgerufen"), "hervorgeruf");});
test("hervorgetan -> hervorgetan", function() {deepEqual( Stem("hervorgetan"), "hervorgetan");});
test("hervorgetreten -> hervorgetret", function() {deepEqual( Stem("hervorgetreten"), "hervorgetret");});
test("hervorgewandelt -> hervorgewandelt", function() {deepEqual( Stem("hervorgewandelt"), "hervorgewandelt");});
test("hervorgezogen -> hervorgezog", function() {deepEqual( Stem("hervorgezogen"), "hervorgezog");});
test("hervorgingen -> hervorging", function() {deepEqual( Stem("hervorgingen"), "hervorging");});
test("hervorheben -> hervorheb", function() {deepEqual( Stem("hervorheben"), "hervorheb");});
test("hervorholen -> hervorhol", function() {deepEqual( Stem("hervorholen"), "hervorhol");});
test("hervorholten -> hervorholt", function() {deepEqual( Stem("hervorholten"), "hervorholt");});
test("hervorkehrte -> hervorkehrt", function() {deepEqual( Stem("hervorkehrte"), "hervorkehrt");});
test("hervorkommt -> hervorkommt", function() {deepEqual( Stem("hervorkommt"), "hervorkommt");});
test("hervorkriechen -> hervorkriech", function() {deepEqual( Stem("hervorkriechen"), "hervorkriech");});
test("hervorleuchtet -> hervorleuchtet", function() {deepEqual( Stem("hervorleuchtet"), "hervorleuchtet");});
test("hervorleuchtete -> hervorleuchtet", function() {deepEqual( Stem("hervorleuchtete"), "hervorleuchtet");});
test("hervornahm -> hervornahm", function() {deepEqual( Stem("hervornahm"), "hervornahm");});
test("hervorquillt -> hervorquillt", function() {deepEqual( Stem("hervorquillt"), "hervorquillt");});
test("hervorragender -> hervorrag", function() {deepEqual( Stem("hervorragender"), "hervorrag");});
test("hervorragten -> hervorragt", function() {deepEqual( Stem("hervorragten"), "hervorragt");});
test("hervorsahen -> hervorsah", function() {deepEqual( Stem("hervorsahen"), "hervorsah");});
test("hervorschielte -> hervorschielt", function() {deepEqual( Stem("hervorschielte"), "hervorschielt");});
test("hervorschimmern -> hervorschimm", function() {deepEqual( Stem("hervorschimmern"), "hervorschimm");});
test("hervorschimmerten -> hervorschimmert", function() {deepEqual( Stem("hervorschimmerten"), "hervorschimmert");});
test("hervorsprang -> hervorsprang", function() {deepEqual( Stem("hervorsprang"), "hervorsprang");});
test("hervorsprossen -> hervorspross", function() {deepEqual( Stem("hervorsprossen"), "hervorspross");});
test("hervorsprudeln -> hervorsprudeln", function() {deepEqual( Stem("hervorsprudeln"), "hervorsprudeln");});
test("hervorstechend -> hervorstech", function() {deepEqual( Stem("hervorstechend"), "hervorstech");});
test("hervorstrahlende -> hervorstrahl", function() {deepEqual( Stem("hervorstrahlende"), "hervorstrahl");});
test("hervorstrahlt -> hervorstrahlt", function() {deepEqual( Stem("hervorstrahlt"), "hervorstrahlt");});
test("hervorstrahlte -> hervorstrahlt", function() {deepEqual( Stem("hervorstrahlte"), "hervorstrahlt");});
test("hervorsuchte -> hervorsucht", function() {deepEqual( Stem("hervorsuchte"), "hervorsucht");});
test("hervortaten -> hervortat", function() {deepEqual( Stem("hervortaten"), "hervortat");});
test("hervortrat -> hervortrat", function() {deepEqual( Stem("hervortrat"), "hervortrat");});
test("hervortraten -> hervortrat", function() {deepEqual( Stem("hervortraten"), "hervortrat");});
test("hervortreten -> hervortret", function() {deepEqual( Stem("hervortreten"), "hervortret");});
test("hervortritt -> hervortritt", function() {deepEqual( Stem("hervortritt"), "hervortritt");});
test("hervortrittst -> hervortritt", function() {deepEqual( Stem("hervortrittst"), "hervortritt");});
test("hervortut -> hervortut", function() {deepEqual( Stem("hervortut"), "hervortut");});
test("hervorwallenden -> hervorwall", function() {deepEqual( Stem("hervorwallenden"), "hervorwall");});
test("hervorwimmeln -> hervorwimmeln", function() {deepEqual( Stem("hervorwimmeln"), "hervorwimmeln");});
test("hervorziehen -> hervorzieh", function() {deepEqual( Stem("hervorziehen"), "hervorzieh");});
test("hervorzog -> hervorzog", function() {deepEqual( Stem("hervorzog"), "hervorzog");});
test("hervorzubringen -> hervorzubring", function() {deepEqual( Stem("hervorzubringen"), "hervorzubring");});
test("hervorzuheben -> hervorzuheb", function() {deepEqual( Stem("hervorzuheben"), "hervorzuheb");});
test("hervorzuholen -> hervorzuhol", function() {deepEqual( Stem("hervorzuholen"), "hervorzuhol");});
test("hervorzutreten -> hervorzutret", function() {deepEqual( Stem("hervorzutreten"), "hervorzutret");});
test("herwachsen -> herwachs", function() {deepEqual( Stem("herwachsen"), "herwachs");});
test("herweg -> herweg", function() {deepEqual( Stem("herweg"), "herweg");});
test("herz -> herz", function() {deepEqual( Stem("herz"), "herz");});
test("herze -> herz", function() {deepEqual( Stem("herze"), "herz");});
test("herzeleid -> herzeleid", function() {deepEqual( Stem("herzeleid"), "herzeleid");});
test("herzen -> herz", function() {deepEqual( Stem("herzen"), "herz");});
test("herzens -> herz", function() {deepEqual( Stem("herzens"), "herz");});
test("herzensfröhlichkeit -> herzensfroh", function() {deepEqual( Stem("herzensfröhlichkeit"), "herzensfroh");});
test("herzensgründen -> herzensgrund", function() {deepEqual( Stem("herzensgründen"), "herzensgrund");});
test("herzensgutes -> herzensgut", function() {deepEqual( Stem("herzensgutes"), "herzensgut");});
test("herzenshärtigkeit -> herzenshart", function() {deepEqual( Stem("herzenshärtigkeit"), "herzenshart");});
test("herzensqual -> herzensqual", function() {deepEqual( Stem("herzensqual"), "herzensqual");});
test("herzensunterwerfung -> herzensunterwerf", function() {deepEqual( Stem("herzensunterwerfung"), "herzensunterwerf");});
test("herzensweh -> herzensweh", function() {deepEqual( Stem("herzensweh"), "herzensweh");});
test("herzerl -> herzerl", function() {deepEqual( Stem("herzerl"), "herzerl");});
test("herzhafte -> herzhaft", function() {deepEqual( Stem("herzhafte"), "herzhaft");});
test("herziehen -> herzieh", function() {deepEqual( Stem("herziehen"), "herzieh");});
test("herziehens -> herzieh", function() {deepEqual( Stem("herziehens"), "herzieh");});
test("herziges -> herzig", function() {deepEqual( Stem("herziges"), "herzig");});
test("herzigs -> herzig", function() {deepEqual( Stem("herzigs"), "herzig");});
test("herzklopfen -> herzklopf", function() {deepEqual( Stem("herzklopfen"), "herzklopf");});
test("herzlich -> herzlich", function() {deepEqual( Stem("herzlich"), "herzlich");});
test("herzliche -> herzlich", function() {deepEqual( Stem("herzliche"), "herzlich");});
test("herzlichen -> herzlich", function() {deepEqual( Stem("herzlichen"), "herzlich");});
test("herzlos -> herzlos", function() {deepEqual( Stem("herzlos"), "herzlos");});
test("herzloser -> herzlos", function() {deepEqual( Stem("herzloser"), "herzlos");});
test("herzmanndi -> herzmanndi", function() {deepEqual( Stem("herzmanndi"), "herzmanndi");});
test("herzmannskerl -> herzmannskerl", function() {deepEqual( Stem("herzmannskerl"), "herzmannskerl");});
test("herzmannski -> herzmannski", function() {deepEqual( Stem("herzmannski"), "herzmannski");});
test("herzmannskis -> herzmannskis", function() {deepEqual( Stem("herzmannskis"), "herzmannskis");});
test("herzog -> herzog", function() {deepEqual( Stem("herzog"), "herzog");});
test("herzogin -> herzogin", function() {deepEqual( Stem("herzogin"), "herzogin");});
test("herzogs -> herzog", function() {deepEqual( Stem("herzogs"), "herzog");});
test("herzschlag -> herzschlag", function() {deepEqual( Stem("herzschlag"), "herzschlag");});
test("herzschlägen -> herzschlag", function() {deepEqual( Stem("herzschlägen"), "herzschlag");});
test("herzu -> herzu", function() {deepEqual( Stem("herzu"), "herzu");});
test("herzufallen -> herzufall", function() {deepEqual( Stem("herzufallen"), "herzufall");});
test("herzuführen -> herzufuhr", function() {deepEqual( Stem("herzuführen"), "herzufuhr");});
test("herzugeben -> herzugeb", function() {deepEqual( Stem("herzugeben"), "herzugeb");});
test("herzugebrachten -> herzugebracht", function() {deepEqual( Stem("herzugebrachten"), "herzugebracht");});
test("herzugeritten -> herzugeritt", function() {deepEqual( Stem("herzugeritten"), "herzugeritt");});
test("herzugetragen -> herzugetrag", function() {deepEqual( Stem("herzugetragen"), "herzugetrag");});
test("herzunahen -> herzunah", function() {deepEqual( Stem("herzunahen"), "herzunah");});
test("herzurühren -> herzuruhr", function() {deepEqual( Stem("herzurühren"), "herzuruhr");});
test("herzuschaffen -> herzuschaff", function() {deepEqual( Stem("herzuschaffen"), "herzuschaff");});
test("herzustellen -> herzustell", function() {deepEqual( Stem("herzustellen"), "herzustell");});
test("herzutragen -> herzutrag", function() {deepEqual( Stem("herzutragen"), "herzutrag");});
test("herzuträte -> herzutrat", function() {deepEqual( Stem("herzuträte"), "herzutrat");});
test("herzutreten -> herzutret", function() {deepEqual( Stem("herzutreten"), "herzutret");});
test("hes -> hes", function() {deepEqual( Stem("hes"), "hes");});
test("hesekiel -> hesekiel", function() {deepEqual( Stem("hesekiel"), "hesekiel");});
test("heteronomie -> heteronomi", function() {deepEqual( Stem("heteronomie"), "heteronomi");});
test("hethiter -> hethit", function() {deepEqual( Stem("hethiter"), "hethit");});
test("hettlinger -> hettling", function() {deepEqual( Stem("hettlinger"), "hettling");});
test("hetze -> hetz", function() {deepEqual( Stem("hetze"), "hetz");});
test("hetzen -> hetz", function() {deepEqual( Stem("hetzen"), "hetz");});
test("hetzjagd -> hetzjagd", function() {deepEqual( Stem("hetzjagd"), "hetzjagd");});
test("hetzte -> hetzt", function() {deepEqual( Stem("hetzte"), "hetzt");});
test("heu -> heu", function() {deepEqual( Stem("heu"), "heu");});
test("heuboden -> heubod", function() {deepEqual( Stem("heuboden"), "heubod");});
test("heuchelei -> heuchelei", function() {deepEqual( Stem("heuchelei"), "heuchelei");});
test("heucheln -> heucheln", function() {deepEqual( Stem("heucheln"), "heucheln");});
test("heuchelt -> heuchelt", function() {deepEqual( Stem("heuchelt"), "heuchelt");});
test("heuchler -> heuchl", function() {deepEqual( Stem("heuchler"), "heuchl");});
test("heuchlerischem -> heuchler", function() {deepEqual( Stem("heuchlerischem"), "heuchler");});
test("heugabel -> heugabel", function() {deepEqual( Stem("heugabel"), "heugabel");});
test("heulen -> heul", function() {deepEqual( Stem("heulen"), "heul");});
test("heulend -> heulend", function() {deepEqual( Stem("heulend"), "heulend");});
test("heulender -> heulend", function() {deepEqual( Stem("heulender"), "heulend");});
test("heulet -> heulet", function() {deepEqual( Stem("heulet"), "heulet");});
test("heult -> heult", function() {deepEqual( Stem("heult"), "heult");});
test("heulte -> heult", function() {deepEqual( Stem("heulte"), "heult");});
test("heulten -> heult", function() {deepEqual( Stem("heulten"), "heult");});
test("heuschiff -> heuschiff", function() {deepEqual( Stem("heuschiff"), "heuschiff");});
test("heuschrecke -> heuschreck", function() {deepEqual( Stem("heuschrecke"), "heuschreck");});
test("heuschrecken -> heuschreck", function() {deepEqual( Stem("heuschrecken"), "heuschreck");});
test("heuschreckenschwarm -> heuschreckenschwarm", function() {deepEqual( Stem("heuschreckenschwarm"), "heuschreckenschwarm");});
test("heuss -> heuss", function() {deepEqual( Stem("heuss"), "heuss");});
test("heustock -> heustock", function() {deepEqual( Stem("heustock"), "heustock");});
test("heut -> heut", function() {deepEqual( Stem("heut"), "heut");});
test("heute -> heut", function() {deepEqual( Stem("heute"), "heut");});
test("heutige -> heutig", function() {deepEqual( Stem("heutige"), "heutig");});
test("heutigen -> heutig", function() {deepEqual( Stem("heutigen"), "heutig");});
test("heutiges -> heutig", function() {deepEqual( Stem("heutiges"), "heutig");});
test("heutzutage -> heutzutag", function() {deepEqual( Stem("heutzutage"), "heutzutag");});
test("heviter -> hevit", function() {deepEqual( Stem("heviter"), "hevit");});
test("heviters -> hevit", function() {deepEqual( Stem("heviters"), "hevit");});
test("hexe -> hex", function() {deepEqual( Stem("hexe"), "hex");});
test("hexen -> hex", function() {deepEqual( Stem("hexen"), "hex");});
test("hexenküche -> hexenkuch", function() {deepEqual( Stem("hexenküche"), "hexenkuch");});
test("hexenmeister -> hexenmeist", function() {deepEqual( Stem("hexenmeister"), "hexenmeist");});
test("hexenmeisters -> hexenmeist", function() {deepEqual( Stem("hexenmeisters"), "hexenmeist");});
test("hexenwerk -> hexenwerk", function() {deepEqual( Stem("hexenwerk"), "hexenwerk");});
test("hexer -> hex", function() {deepEqual( Stem("hexer"), "hex");});
test("hexerei -> hexerei", function() {deepEqual( Stem("hexerei"), "hexerei");});
test("hg -> hg", function() {deepEqual( Stem("hg"), "hg");});
test("hie -> hie", function() {deepEqual( Stem("hie"), "hie");});
test("hieb -> hieb", function() {deepEqual( Stem("hieb"), "hieb");});
test("hiebe -> hieb", function() {deepEqual( Stem("hiebe"), "hieb");});
test("hiebei -> hiebei", function() {deepEqual( Stem("hiebei"), "hiebei");});
test("hieber -> hieb", function() {deepEqual( Stem("hieber"), "hieb");});
test("hiedurch -> hiedurch", function() {deepEqual( Stem("hiedurch"), "hiedurch");});
test("hiefür -> hiefur", function() {deepEqual( Stem("hiefür"), "hiefur");});
test("hiegegen -> hiegeg", function() {deepEqual( Stem("hiegegen"), "hiegeg");});
test("hieher -> hieh", function() {deepEqual( Stem("hieher"), "hieh");});
test("hielt -> hielt", function() {deepEqual( Stem("hielt"), "hielt");});
test("hielte -> hielt", function() {deepEqual( Stem("hielte"), "hielt");});
test("hielten -> hielt", function() {deepEqual( Stem("hielten"), "hielt");});
test("hiemit -> hiemit", function() {deepEqual( Stem("hiemit"), "hiemit");});
test("hienach -> hienach", function() {deepEqual( Stem("hienach"), "hienach");});
test("hier -> hier", function() {deepEqual( Stem("hier"), "hier");});
test("hieran -> hieran", function() {deepEqual( Stem("hieran"), "hieran");});
test("hierarchie -> hierarchi", function() {deepEqual( Stem("hierarchie"), "hierarchi");});
test("hierauf -> hierauf", function() {deepEqual( Stem("hierauf"), "hierauf");});
test("hieraus -> hieraus", function() {deepEqual( Stem("hieraus"), "hieraus");});
test("hierbei -> hierbei", function() {deepEqual( Stem("hierbei"), "hierbei");});
test("hierbleiben -> hierbleib", function() {deepEqual( Stem("hierbleiben"), "hierbleib");});
test("hierdurch -> hierdurch", function() {deepEqual( Stem("hierdurch"), "hierdurch");});
test("hierfür -> hierfur", function() {deepEqual( Stem("hierfür"), "hierfur");});
test("hierher -> hierh", function() {deepEqual( Stem("hierher"), "hierh");});
test("hierhergekommen -> hierhergekomm", function() {deepEqual( Stem("hierhergekommen"), "hierhergekomm");});
test("hierherkamen -> hierherkam", function() {deepEqual( Stem("hierherkamen"), "hierherkam");});
test("hierherzukommen -> hierherzukomm", function() {deepEqual( Stem("hierherzukommen"), "hierherzukomm");});
test("hierhin -> hierhin", function() {deepEqual( Stem("hierhin"), "hierhin");});
test("hierin -> hierin", function() {deepEqual( Stem("hierin"), "hierin");});
test("hierlassen -> hierlass", function() {deepEqual( Stem("hierlassen"), "hierlass");});
test("hiermit -> hiermit", function() {deepEqual( Stem("hiermit"), "hiermit");});
test("hieroglyphen -> hieroglyph", function() {deepEqual( Stem("hieroglyphen"), "hieroglyph");});
test("hierüber -> hierub", function() {deepEqual( Stem("hierüber"), "hierub");});
test("hierunter -> hierunt", function() {deepEqual( Stem("hierunter"), "hierunt");});
test("hiervon -> hiervon", function() {deepEqual( Stem("hiervon"), "hiervon");});
test("hierzu -> hierzu", function() {deepEqual( Stem("hierzu"), "hierzu");});
test("hierzubleiben -> hierzubleib", function() {deepEqual( Stem("hierzubleiben"), "hierzubleib");});
test("hierzulande -> hierzuland", function() {deepEqual( Stem("hierzulande"), "hierzuland");});
test("hiesigen -> hiesig", function() {deepEqual( Stem("hiesigen"), "hiesig");});
test("hiess -> hiess", function() {deepEqual( Stem("hiess"), "hiess");});
test("hieß -> hiess", function() {deepEqual( Stem("hieß"), "hiess");});
test("hiesse -> hiess", function() {deepEqual( Stem("hiesse"), "hiess");});
test("hieße -> hiess", function() {deepEqual( Stem("hieße"), "hiess");});
test("hiessen -> hiess", function() {deepEqual( Stem("hiessen"), "hiess");});
test("hießen -> hiess", function() {deepEqual( Stem("hießen"), "hiess");});
test("hievon -> hievon", function() {deepEqual( Stem("hievon"), "hievon");});
test("hiezu -> hiezu", function() {deepEqual( Stem("hiezu"), "hiezu");});
test("hiifsregisseur -> hiifsregisseur", function() {deepEqual( Stem("hiifsregisseur"), "hiifsregisseur");});
test("hildegard -> hildegard", function() {deepEqual( Stem("hildegard"), "hildegard");});
test("hildesheim -> hildesheim", function() {deepEqual( Stem("hildesheim"), "hildesheim");});
test("hilf -> hilf", function() {deepEqual( Stem("hilf"), "hilf");});
test("hilfe -> hilf", function() {deepEqual( Stem("hilfe"), "hilf");});
test("hilflos -> hilflos", function() {deepEqual( Stem("hilflos"), "hilflos");});
test("hilflosigkeit -> hilflos", function() {deepEqual( Stem("hilflosigkeit"), "hilflos");});
test("hilfsbereitschaft -> hilfsbereitschaft", function() {deepEqual( Stem("hilfsbereitschaft"), "hilfsbereitschaft");});
test("hilfsbremser -> hilfsbrems", function() {deepEqual( Stem("hilfsbremser"), "hilfsbrems");});
test("hilfskräfte -> hilfskraft", function() {deepEqual( Stem("hilfskräfte"), "hilfskraft");});
test("hilfsmittel -> hilfsmittel", function() {deepEqual( Stem("hilfsmittel"), "hilfsmittel");});
test("hilfsquellen -> hilfsquell", function() {deepEqual( Stem("hilfsquellen"), "hilfsquell");});
test("hilfsregisseur -> hilfsregisseur", function() {deepEqual( Stem("hilfsregisseur"), "hilfsregisseur");});
test("hilfsregisseurs -> hilfsregisseur", function() {deepEqual( Stem("hilfsregisseurs"), "hilfsregisseur");});
test("hilfswerk -> hilfswerk", function() {deepEqual( Stem("hilfswerk"), "hilfswerk");});
test("hilfswerke -> hilfswerk", function() {deepEqual( Stem("hilfswerke"), "hilfswerk");});
test("hilft -> hilft", function() {deepEqual( Stem("hilft"), "hilft");});
test("himmel -> himmel", function() {deepEqual( Stem("himmel"), "himmel");});
test("himmelbett -> himmelbett", function() {deepEqual( Stem("himmelbett"), "himmelbett");});
test("himmelblaue -> himmelblau", function() {deepEqual( Stem("himmelblaue"), "himmelblau");});
test("himmelblauen -> himmelblau", function() {deepEqual( Stem("himmelblauen"), "himmelblau");});
test("himmelblaues -> himmelblau", function() {deepEqual( Stem("himmelblaues"), "himmelblau");});
test("himmelerschütterndem -> himmelerschutternd", function() {deepEqual( Stem("himmelerschütterndem"), "himmelerschutternd");});
test("himmelhoch -> himmelhoch", function() {deepEqual( Stem("himmelhoch"), "himmelhoch");});
test("himmelhohe -> himmelhoh", function() {deepEqual( Stem("himmelhohe"), "himmelhoh");});
test("himmelhohen -> himmelhoh", function() {deepEqual( Stem("himmelhohen"), "himmelhoh");});
test("himmeln -> himmeln", function() {deepEqual( Stem("himmeln"), "himmeln");});
test("himmelreich -> himmelreich", function() {deepEqual( Stem("himmelreich"), "himmelreich");});
test("himmels -> himmel", function() {deepEqual( Stem("himmels"), "himmel");});
test("himmelsbesen -> himmelsbes", function() {deepEqual( Stem("himmelsbesen"), "himmelsbes");});
test("himmelsbewohnern -> himmelsbewohn", function() {deepEqual( Stem("himmelsbewohnern"), "himmelsbewohn");});
test("himmelschoten -> himmelschot", function() {deepEqual( Stem("himmelschoten"), "himmelschot");});
test("himmelschreiendes -> himmelschrei", function() {deepEqual( Stem("himmelschreiendes"), "himmelschrei");});
test("himmelsfeste -> himmelsf", function() {deepEqual( Stem("himmelsfeste"), "himmelsf");});
test("himmelsfürst -> himmelsfurst", function() {deepEqual( Stem("himmelsfürst"), "himmelsfurst");});
test("himmelsgeheimnissen -> himmelsgeheimnis", function() {deepEqual( Stem("himmelsgeheimnissen"), "himmelsgeheimnis");});
test("himmelsgestirn -> himmelsgestirn", function() {deepEqual( Stem("himmelsgestirn"), "himmelsgestirn");});
test("himmelsgrund -> himmelsgrund", function() {deepEqual( Stem("himmelsgrund"), "himmelsgrund");});
test("himmelsheeren -> himmelshe", function() {deepEqual( Stem("himmelsheeren"), "himmelshe");});
test("himmelsheim -> himmelsheim", function() {deepEqual( Stem("himmelsheim"), "himmelsheim");});
test("himmelshöhen -> himmelshoh", function() {deepEqual( Stem("himmelshöhen"), "himmelshoh");});
test("himmelskühe -> himmelskuh", function() {deepEqual( Stem("himmelskühe"), "himmelskuh");});
test("himmelslicht -> himmelslicht", function() {deepEqual( Stem("himmelslicht"), "himmelslicht");});
test("himmelslichtes -> himmelslicht", function() {deepEqual( Stem("himmelslichtes"), "himmelslicht");});
test("himmelsraketenmässig -> himmelsraketenmass", function() {deepEqual( Stem("himmelsraketenmässig"), "himmelsraketenmass");});
test("himmelsraum -> himmelsraum", function() {deepEqual( Stem("himmelsraum"), "himmelsraum");});
test("himmelsraums -> himmelsraum", function() {deepEqual( Stem("himmelsraums"), "himmelsraum");});
test("himmelsrichtungen -> himmelsricht", function() {deepEqual( Stem("himmelsrichtungen"), "himmelsricht");});
test("himmelsschön -> himmelsschon", function() {deepEqual( Stem("himmelsschön"), "himmelsschon");});
test("himmelssphäre -> himmelssphar", function() {deepEqual( Stem("himmelssphäre"), "himmelssphar");});
test("himmelsweide -> himmelsweid", function() {deepEqual( Stem("himmelsweide"), "himmelsweid");});
test("himmelswiese -> himmelswies", function() {deepEqual( Stem("himmelswiese"), "himmelswies");});
test("himmelszelt -> himmelszelt", function() {deepEqual( Stem("himmelszelt"), "himmelszelt");});
test("himmelsziegen -> himmelszieg", function() {deepEqual( Stem("himmelsziegen"), "himmelszieg");});
test("himmelsziegenhörnchen -> himmelsziegenhornch", function() {deepEqual( Stem("himmelsziegenhörnchen"), "himmelsziegenhornch");});
test("himmelwärts -> himmelwart", function() {deepEqual( Stem("himmelwärts"), "himmelwart");});
test("himmelweit -> himmelweit", function() {deepEqual( Stem("himmelweit"), "himmelweit");});
test("himmlisch -> himmlisch", function() {deepEqual( Stem("himmlisch"), "himmlisch");});
test("himmlische -> himmlisch", function() {deepEqual( Stem("himmlische"), "himmlisch");});
test("himmlischem -> himmlisch", function() {deepEqual( Stem("himmlischem"), "himmlisch");});
test("himmlischen -> himmlisch", function() {deepEqual( Stem("himmlischen"), "himmlisch");});
test("himmlischer -> himmlisch", function() {deepEqual( Stem("himmlischer"), "himmlisch");});
test("himmlisches -> himmlisch", function() {deepEqual( Stem("himmlisches"), "himmlisch");});
test("hin -> hin", function() {deepEqual( Stem("hin"), "hin");});
test("hinab -> hinab", function() {deepEqual( Stem("hinab"), "hinab");});
test("hinabfahren -> hinabfahr", function() {deepEqual( Stem("hinabfahren"), "hinabfahr");});
test("hinabfuhr -> hinabfuhr", function() {deepEqual( Stem("hinabfuhr"), "hinabfuhr");});
test("hinabgegangen -> hinabgegang", function() {deepEqual( Stem("hinabgegangen"), "hinabgegang");});
test("hinabgelassen -> hinabgelass", function() {deepEqual( Stem("hinabgelassen"), "hinabgelass");});
test("hinabgerissen -> hinabgeriss", function() {deepEqual( Stem("hinabgerissen"), "hinabgeriss");});
test("hinabgesprungen -> hinabgespr", function() {deepEqual( Stem("hinabgesprungen"), "hinabgespr");});
test("hinabgestossen -> hinabgestoss", function() {deepEqual( Stem("hinabgestossen"), "hinabgestoss");});
test("hinabgestoßen -> hinabgestoss", function() {deepEqual( Stem("hinabgestoßen"), "hinabgestoss");});
test("hinabgestürzt -> hinabgesturzt", function() {deepEqual( Stem("hinabgestürzt"), "hinabgesturzt");});
test("hinabgeworfen -> hinabgeworf", function() {deepEqual( Stem("hinabgeworfen"), "hinabgeworf");});
test("hinabgingen -> hinabging", function() {deepEqual( Stem("hinabgingen"), "hinabging");});
test("hinabkommen -> hinabkomm", function() {deepEqual( Stem("hinabkommen"), "hinabkomm");});
test("hinablassen -> hinablass", function() {deepEqual( Stem("hinablassen"), "hinablass");});
test("hinabsanken -> hinabsank", function() {deepEqual( Stem("hinabsanken"), "hinabsank");});
test("hinabsankst -> hinabsank", function() {deepEqual( Stem("hinabsankst"), "hinabsank");});
test("hinabsausten -> hinabsaust", function() {deepEqual( Stem("hinabsausten"), "hinabsaust");});
test("hinabsenkt -> hinabsenkt", function() {deepEqual( Stem("hinabsenkt"), "hinabsenkt");});
test("hinabsinken -> hinabsink", function() {deepEqual( Stem("hinabsinken"), "hinabsink");});
test("hinabspringen -> hinabspring", function() {deepEqual( Stem("hinabspringen"), "hinabspring");});
test("hinabsteigen -> hinabsteig", function() {deepEqual( Stem("hinabsteigen"), "hinabsteig");});
test("hinabstossen -> hinabstoss", function() {deepEqual( Stem("hinabstossen"), "hinabstoss");});
test("hinabstoßen -> hinabstoss", function() {deepEqual( Stem("hinabstoßen"), "hinabstoss");});
test("hinabtauchte -> hinabtaucht", function() {deepEqual( Stem("hinabtauchte"), "hinabtaucht");});
test("hinabtreibend -> hinabtreib", function() {deepEqual( Stem("hinabtreibend"), "hinabtreib");});
test("hinabversetzt -> hinabversetzt", function() {deepEqual( Stem("hinabversetzt"), "hinabversetzt");});
test("hinabwerfen -> hinabwerf", function() {deepEqual( Stem("hinabwerfen"), "hinabwerf");});
test("hinabziehen -> hinabzieh", function() {deepEqual( Stem("hinabziehen"), "hinabzieh");});
test("hinabzog -> hinabzog", function() {deepEqual( Stem("hinabzog"), "hinabzog");});
test("hinabzugehen -> hinabzugeh", function() {deepEqual( Stem("hinabzugehen"), "hinabzugeh");});
test("hinabzusteigen -> hinabzusteig", function() {deepEqual( Stem("hinabzusteigen"), "hinabzusteig");});
test("hinabzustürzen -> hinabzusturz", function() {deepEqual( Stem("hinabzustürzen"), "hinabzusturz");});
test("hinan -> hinan", function() {deepEqual( Stem("hinan"), "hinan");});
test("hinanfuhren -> hinanfuhr", function() {deepEqual( Stem("hinanfuhren"), "hinanfuhr");});
test("hinangeleiten -> hinangeleit", function() {deepEqual( Stem("hinangeleiten"), "hinangeleit");});
test("hinanstieg -> hinanstieg", function() {deepEqual( Stem("hinanstieg"), "hinanstieg");});
test("hinauf -> hinauf", function() {deepEqual( Stem("hinauf"), "hinauf");});
test("hinaufbringen -> hinaufbring", function() {deepEqual( Stem("hinaufbringen"), "hinaufbring");});
test("hinaufführen -> hinauffuhr", function() {deepEqual( Stem("hinaufführen"), "hinauffuhr");});
test("hinaufführte -> hinauffuhrt", function() {deepEqual( Stem("hinaufführte"), "hinauffuhrt");});
test("hinauffuhrwerkte -> hinauffuhrwerkt", function() {deepEqual( Stem("hinauffuhrwerkte"), "hinauffuhrwerkt");});
test("hinaufgefahren -> hinaufgefahr", function() {deepEqual( Stem("hinaufgefahren"), "hinaufgefahr");});
test("hinaufgehen -> hinaufgeh", function() {deepEqual( Stem("hinaufgehen"), "hinaufgeh");});
test("hinaufgehoben -> hinaufgehob", function() {deepEqual( Stem("hinaufgehoben"), "hinaufgehob");});
test("hinaufgeschossen -> hinaufgeschoss", function() {deepEqual( Stem("hinaufgeschossen"), "hinaufgeschoss");});
test("hinaufgestiegen -> hinaufgestieg", function() {deepEqual( Stem("hinaufgestiegen"), "hinaufgestieg");});
test("hinaufgestrauchelt -> hinaufgestrauchelt", function() {deepEqual( Stem("hinaufgestrauchelt"), "hinaufgestrauchelt");});
test("hinaufgetrieben -> hinaufgetrieb", function() {deepEqual( Stem("hinaufgetrieben"), "hinaufgetrieb");});
test("hinaufging -> hinaufging", function() {deepEqual( Stem("hinaufging"), "hinaufging");});
test("hinaufkommen -> hinaufkomm", function() {deepEqual( Stem("hinaufkommen"), "hinaufkomm");});
test("hinauflief -> hinauflief", function() {deepEqual( Stem("hinauflief"), "hinauflief");});
test("hinaufrufen -> hinaufruf", function() {deepEqual( Stem("hinaufrufen"), "hinaufruf");});
test("hinaufspähte -> hinaufspaht", function() {deepEqual( Stem("hinaufspähte"), "hinaufspaht");});
test("hinaufsprang -> hinaufsprang", function() {deepEqual( Stem("hinaufsprang"), "hinaufsprang");});
test("hinaufsteigen -> hinaufsteig", function() {deepEqual( Stem("hinaufsteigen"), "hinaufsteig");});
test("hinaufstieg -> hinaufstieg", function() {deepEqual( Stem("hinaufstieg"), "hinaufstieg");});
test("hinaufstreckte -> hinaufstreckt", function() {deepEqual( Stem("hinaufstreckte"), "hinaufstreckt");});
test("hinaufstürmte -> hinaufsturmt", function() {deepEqual( Stem("hinaufstürmte"), "hinaufsturmt");});
test("hinaufwollte -> hinaufwollt", function() {deepEqual( Stem("hinaufwollte"), "hinaufwollt");});
test("hinaufzuführen -> hinaufzufuhr", function() {deepEqual( Stem("hinaufzuführen"), "hinaufzufuhr");});
test("hinaufzukommen -> hinaufzukomm", function() {deepEqual( Stem("hinaufzukommen"), "hinaufzukomm");});
test("hinaufzutreiben -> hinaufzutreib", function() {deepEqual( Stem("hinaufzutreiben"), "hinaufzutreib");});
test("hinaus -> hinaus", function() {deepEqual( Stem("hinaus"), "hinaus");});
test("hinausarbeiten -> hinausarbeit", function() {deepEqual( Stem("hinausarbeiten"), "hinausarbeit");});
test("hinausbefördert -> hinausbefordert", function() {deepEqual( Stem("hinausbefördert"), "hinausbefordert");});
test("hinausbegleiten -> hinausbegleit", function() {deepEqual( Stem("hinausbegleiten"), "hinausbegleit");});
test("hinausfliehen -> hinausflieh", function() {deepEqual( Stem("hinausfliehen"), "hinausflieh");});
test("hinausg -> hinausg", function() {deepEqual( Stem("hinausg"), "hinausg");});
test("hinausgebauten -> hinausgebaut", function() {deepEqual( Stem("hinausgebauten"), "hinausgebaut");});
test("hinausgeführt -> hinausgefuhrt", function() {deepEqual( Stem("hinausgeführt"), "hinausgefuhrt");});
test("hinausgegangen -> hinausgegang", function() {deepEqual( Stem("hinausgegangen"), "hinausgegang");});
test("hinausgehe -> hinausgeh", function() {deepEqual( Stem("hinausgehe"), "hinausgeh");});
test("hinausgehen -> hinausgeh", function() {deepEqual( Stem("hinausgehen"), "hinausgeh");});
test("hinausgeht -> hinausgeht", function() {deepEqual( Stem("hinausgeht"), "hinausgeht");});
test("hinausgeleitet -> hinausgeleitet", function() {deepEqual( Stem("hinausgeleitet"), "hinausgeleitet");});
test("hinausgerücktes -> hinausgeruckt", function() {deepEqual( Stem("hinausgerücktes"), "hinausgeruckt");});
test("hinausgeschafft -> hinausgeschafft", function() {deepEqual( Stem("hinausgeschafft"), "hinausgeschafft");});
test("hinausgeschlichen -> hinausgesch", function() {deepEqual( Stem("hinausgeschlichen"), "hinausgesch");});
test("hinausgeschnitten -> hinausgeschnitt", function() {deepEqual( Stem("hinausgeschnitten"), "hinausgeschnitt");});
test("hinausgesetzt -> hinausgesetzt", function() {deepEqual( Stem("hinausgesetzt"), "hinausgesetzt");});
test("hinausgesprengt -> hinausgesprengt", function() {deepEqual( Stem("hinausgesprengt"), "hinausgesprengt");});
test("hinausgeworfen -> hinausgeworf", function() {deepEqual( Stem("hinausgeworfen"), "hinausgeworf");});
test("hinausginge -> hinausging", function() {deepEqual( Stem("hinausginge"), "hinausging");});
test("hinausgingen -> hinausging", function() {deepEqual( Stem("hinausgingen"), "hinausging");});
test("hinauskommen -> hinauskomm", function() {deepEqual( Stem("hinauskommen"), "hinauskomm");});
test("hinauskomplementiert -> hinauskomplementiert", function() {deepEqual( Stem("hinauskomplementiert"), "hinauskomplementiert");});
test("hinausläuft -> hinauslauft", function() {deepEqual( Stem("hinausläuft"), "hinauslauft");});
test("hinaussahen -> hinaussah", function() {deepEqual( Stem("hinaussahen"), "hinaussah");});
test("hinausschallte -> hinausschallt", function() {deepEqual( Stem("hinausschallte"), "hinausschallt");});
test("hinausschauen -> hinausschau", function() {deepEqual( Stem("hinausschauen"), "hinausschau");});
test("hinausschaute -> hinausschaut", function() {deepEqual( Stem("hinausschaute"), "hinausschaut");});
test("hinausschieben -> hinausschieb", function() {deepEqual( Stem("hinausschieben"), "hinausschieb");});
test("hinausschrie -> hinausschri", function() {deepEqual( Stem("hinausschrie"), "hinausschri");});
test("hinausschweift -> hinausschweift", function() {deepEqual( Stem("hinausschweift"), "hinausschweift");});
test("hinaussieht -> hinaussieht", function() {deepEqual( Stem("hinaussieht"), "hinaussieht");});
test("hinausspringen -> hinausspring", function() {deepEqual( Stem("hinausspringen"), "hinausspring");});
test("hinausspringenden -> hinausspring", function() {deepEqual( Stem("hinausspringenden"), "hinausspring");});
test("hinausstossen -> hinausstoss", function() {deepEqual( Stem("hinausstossen"), "hinausstoss");});
test("hinausstoßen -> hinausstoss", function() {deepEqual( Stem("hinausstoßen"), "hinausstoss");});
test("hinaustrat -> hinaustrat", function() {deepEqual( Stem("hinaustrat"), "hinaustrat");});
test("hinaustreten -> hinaustret", function() {deepEqual( Stem("hinaustreten"), "hinaustret");});
test("hinaustrollte -> hinaustrollt", function() {deepEqual( Stem("hinaustrollte"), "hinaustrollt");});
test("hinauswandern -> hinauswand", function() {deepEqual( Stem("hinauswandern"), "hinauswand");});
test("hinauswillst -> hinauswill", function() {deepEqual( Stem("hinauswillst"), "hinauswill");});
test("hinauszufliegen -> hinauszuflieg", function() {deepEqual( Stem("hinauszufliegen"), "hinauszuflieg");});
test("hinauszustossen -> hinauszustoss", function() {deepEqual( Stem("hinauszustossen"), "hinauszustoss");});
test("hinauszustoßen -> hinauszustoss", function() {deepEqual( Stem("hinauszustoßen"), "hinauszustoss");});
test("hinauszuziehen -> hinauszuzieh", function() {deepEqual( Stem("hinauszuziehen"), "hinauszuzieh");});
test("hinbeugte -> hinbeugt", function() {deepEqual( Stem("hinbeugte"), "hinbeugt");});
test("hinblicken -> hinblick", function() {deepEqual( Stem("hinblicken"), "hinblick");});
test("hinblickte -> hinblickt", function() {deepEqual( Stem("hinblickte"), "hinblickt");});
test("hindern -> hind", function() {deepEqual( Stem("hindern"), "hind");});
test("hindernis -> hindernis", function() {deepEqual( Stem("hindernis"), "hindernis");});
test("hindernisse -> hindernis", function() {deepEqual( Stem("hindernisse"), "hindernis");});
test("hindernisses -> hindernis", function() {deepEqual( Stem("hindernisses"), "hindernis");});
test("hindert -> hindert", function() {deepEqual( Stem("hindert"), "hindert");});
test("hinderte -> hindert", function() {deepEqual( Stem("hinderte"), "hindert");});
test("hindin -> hindin", function() {deepEqual( Stem("hindin"), "hindin");});
test("hindinnen -> hindinn", function() {deepEqual( Stem("hindinnen"), "hindinn");});
test("hindostanische -> hindostan", function() {deepEqual( Stem("hindostanische"), "hindostan");});
test("hindu -> hindu", function() {deepEqual( Stem("hindu"), "hindu");});
test("hindurch -> hindurch", function() {deepEqual( Stem("hindurch"), "hindurch");});
test("hindurchfliessen -> hindurchfliess", function() {deepEqual( Stem("hindurchfliessen"), "hindurchfliess");});
test("hindurchfließen -> hindurchfliess", function() {deepEqual( Stem("hindurchfließen"), "hindurchfliess");});
test("hindurchfliessens -> hindurchfliess", function() {deepEqual( Stem("hindurchfliessens"), "hindurchfliess");});
test("hindurchfließens -> hindurchfliess", function() {deepEqual( Stem("hindurchfließens"), "hindurchfliess");});
test("hindurchfliesst -> hindurchfliesst", function() {deepEqual( Stem("hindurchfliesst"), "hindurchfliesst");});
test("hindurchfließt -> hindurchfliesst", function() {deepEqual( Stem("hindurchfließt"), "hindurchfliesst");});
test("hindurchfloss -> hindurchfloss", function() {deepEqual( Stem("hindurchfloss"), "hindurchfloss");});
test("hindurchfloß -> hindurchfloss", function() {deepEqual( Stem("hindurchfloß"), "hindurchfloss");});
test("hindurchführte -> hindurchfuhrt", function() {deepEqual( Stem("hindurchführte"), "hindurchfuhrt");});
test("hindurchgegangen -> hindurchgegang", function() {deepEqual( Stem("hindurchgegangen"), "hindurchgegang");});
test("hindurchgehende -> hindurchgeh", function() {deepEqual( Stem("hindurchgehende"), "hindurchgeh");});
test("hindurchgeht -> hindurchgeht", function() {deepEqual( Stem("hindurchgeht"), "hindurchgeht");});
test("hindurchgeschlüpft -> hindurchgeschlupft", function() {deepEqual( Stem("hindurchgeschlüpft"), "hindurchgeschlupft");});
test("hindurchging -> hindurchging", function() {deepEqual( Stem("hindurchging"), "hindurchging");});
test("hineilte -> hineilt", function() {deepEqual( Stem("hineilte"), "hineilt");});
test("hinein -> hinein", function() {deepEqual( Stem("hinein"), "hinein");});
test("hineinbringen -> hineinbring", function() {deepEqual( Stem("hineinbringen"), "hineinbring");});
test("hineinfahren -> hineinfahr", function() {deepEqual( Stem("hineinfahren"), "hineinfahr");});
test("hineinfällt -> hineinfallt", function() {deepEqual( Stem("hineinfällt"), "hineinfallt");});
test("hineingebaut -> hineingebaut", function() {deepEqual( Stem("hineingebaut"), "hineingebaut");});
test("hineingebracht -> hineingebracht", function() {deepEqual( Stem("hineingebracht"), "hineingebracht");});
test("hineingefahren -> hineingefahr", function() {deepEqual( Stem("hineingefahren"), "hineingefahr");});
test("hineingegangen -> hineingegang", function() {deepEqual( Stem("hineingegangen"), "hineingegang");});
test("hineingehen -> hineingeh", function() {deepEqual( Stem("hineingehen"), "hineingeh");});
test("hineingeht -> hineingeht", function() {deepEqual( Stem("hineingeht"), "hineingeht");});
test("hineingekrochen -> hineingekroch", function() {deepEqual( Stem("hineingekrochen"), "hineingekroch");});
test("hineingeladen -> hineingelad", function() {deepEqual( Stem("hineingeladen"), "hineingelad");});
test("hineingelegten -> hineingelegt", function() {deepEqual( Stem("hineingelegten"), "hineingelegt");});
test("hineingeraten -> hineingerat", function() {deepEqual( Stem("hineingeraten"), "hineingerat");});
test("hineingesehen -> hineingeseh", function() {deepEqual( Stem("hineingesehen"), "hineingeseh");});
test("hineingesperrt -> hineingesperrt", function() {deepEqual( Stem("hineingesperrt"), "hineingesperrt");});
test("hineingeworfen -> hineingeworf", function() {deepEqual( Stem("hineingeworfen"), "hineingeworf");});
test("hineingeworfene -> hineingeworf", function() {deepEqual( Stem("hineingeworfene"), "hineingeworf");});
test("hineinging -> hineinging", function() {deepEqual( Stem("hineinging"), "hineinging");});
test("hineingrub -> hineingrub", function() {deepEqual( Stem("hineingrub"), "hineingrub");});
test("hineinkleben -> hineinkleb", function() {deepEqual( Stem("hineinkleben"), "hineinkleb");});
test("hineinkomme -> hineinkomm", function() {deepEqual( Stem("hineinkomme"), "hineinkomm");});
test("hineinkommen -> hineinkomm", function() {deepEqual( Stem("hineinkommen"), "hineinkomm");});
test("hineinladen -> hineinlad", function() {deepEqual( Stem("hineinladen"), "hineinlad");});
test("hineinlegen -> hineinleg", function() {deepEqual( Stem("hineinlegen"), "hineinleg");});
test("hineinliess -> hineinliess", function() {deepEqual( Stem("hineinliess"), "hineinliess");});
test("hineinritt -> hineinritt", function() {deepEqual( Stem("hineinritt"), "hineinritt");});
test("hineinschien -> hineinschi", function() {deepEqual( Stem("hineinschien"), "hineinschi");});
test("hineinschrie -> hineinschri", function() {deepEqual( Stem("hineinschrie"), "hineinschri");});
test("hineinsprang -> hineinsprang", function() {deepEqual( Stem("hineinsprang"), "hineinsprang");});
test("hineinstellte -> hineinstellt", function() {deepEqual( Stem("hineinstellte"), "hineinstellt");});
test("hineinstrecken -> hineinstreck", function() {deepEqual( Stem("hineinstrecken"), "hineinstreck");});
test("hineinträgt -> hineintragt", function() {deepEqual( Stem("hineinträgt"), "hineintragt");});
test("hineintrugen -> hineintrug", function() {deepEqual( Stem("hineintrugen"), "hineintrug");});
test("hineinversetzen -> hineinversetz", function() {deepEqual( Stem("hineinversetzen"), "hineinversetz");});
test("hineinversetzt -> hineinversetzt", function() {deepEqual( Stem("hineinversetzt"), "hineinversetzt");});
test("hineinwerfen -> hineinwerf", function() {deepEqual( Stem("hineinwerfen"), "hineinwerf");});
test("hineinwuchs -> hineinwuch", function() {deepEqual( Stem("hineinwuchs"), "hineinwuch");});
test("hineinzukleben -> hineinzukleb", function() {deepEqual( Stem("hineinzukleben"), "hineinzukleb");});
test("hineinzulassen -> hineinzulass", function() {deepEqual( Stem("hineinzulassen"), "hineinzulass");});
test("hineinzuschreiten -> hineinzuschreit", function() {deepEqual( Stem("hineinzuschreiten"), "hineinzuschreit");});
test("hineinzusehen -> hineinzuseh", function() {deepEqual( Stem("hineinzusehen"), "hineinzuseh");});
test("hineinzuspringen -> hineinzuspring", function() {deepEqual( Stem("hineinzuspringen"), "hineinzuspring");});
test("hineinzuwandeln -> hineinzuwandeln", function() {deepEqual( Stem("hineinzuwandeln"), "hineinzuwandeln");});
test("hinfiel -> hinfiel", function() {deepEqual( Stem("hinfiel"), "hinfiel");});
test("hinfort -> hinfort", function() {deepEqual( Stem("hinfort"), "hinfort");});
test("hinführen -> hinfuhr", function() {deepEqual( Stem("hinführen"), "hinfuhr");});
test("hing -> hing", function() {deepEqual( Stem("hing"), "hing");});
test("hingabe -> hingab", function() {deepEqual( Stem("hingabe"), "hingab");});
test("hingaben -> hingab", function() {deepEqual( Stem("hingaben"), "hingab");});
test("hingeben -> hingeb", function() {deepEqual( Stem("hingeben"), "hingeb");});
test("hingebettet -> hingebettet", function() {deepEqual( Stem("hingebettet"), "hingebettet");});
test("hingebung -> hingeb", function() {deepEqual( Stem("hingebung"), "hingeb");});
test("hingebungsvoll -> hingebungsvoll", function() {deepEqual( Stem("hingebungsvoll"), "hingebungsvoll");});
test("hingeführt -> hingefuhrt", function() {deepEqual( Stem("hingeführt"), "hingefuhrt");});
test("hingegangen -> hingegang", function() {deepEqual( Stem("hingegangen"), "hingegang");});
test("hingegeben -> hingegeb", function() {deepEqual( Stem("hingegeben"), "hingegeb");});
test("hingegebenes -> hingegeb", function() {deepEqual( Stem("hingegebenes"), "hingegeb");});
test("hingegen -> hingeg", function() {deepEqual( Stem("hingegen"), "hingeg");});
test("hingehalten -> hingehalt", function() {deepEqual( Stem("hingehalten"), "hingehalt");});
test("hingehen -> hingeh", function() {deepEqual( Stem("hingehen"), "hingeh");});
test("hingekommen -> hingekomm", function() {deepEqual( Stem("hingekommen"), "hingekomm");});
test("hingeleiten -> hingeleit", function() {deepEqual( Stem("hingeleiten"), "hingeleit");});
test("hingelenkt -> hingelenkt", function() {deepEqual( Stem("hingelenkt"), "hingelenkt");});
test("hingen -> hing", function() {deepEqual( Stem("hingen"), "hing");});
test("hingenommen -> hingenomm", function() {deepEqual( Stem("hingenommen"), "hingenomm");});
test("hingerissen -> hingeriss", function() {deepEqual( Stem("hingerissen"), "hingeriss");});
test("hingeschickt -> hingeschickt", function() {deepEqual( Stem("hingeschickt"), "hingeschickt");});
test("hingeschieden -> hingeschied", function() {deepEqual( Stem("hingeschieden"), "hingeschied");});
test("hingesehen -> hingeseh", function() {deepEqual( Stem("hingesehen"), "hingeseh");});
test("hingestellt -> hingestellt", function() {deepEqual( Stem("hingestellt"), "hingestellt");});
test("hingestreckt -> hingestreckt", function() {deepEqual( Stem("hingestreckt"), "hingestreckt");});
test("hingestreut -> hingestreut", function() {deepEqual( Stem("hingestreut"), "hingestreut");});
test("hingetragen -> hingetrag", function() {deepEqual( Stem("hingetragen"), "hingetrag");});
test("hingetreten -> hingetret", function() {deepEqual( Stem("hingetreten"), "hingetret");});
test("hingewandert -> hingewandert", function() {deepEqual( Stem("hingewandert"), "hingewandert");});
test("hingewandt -> hingewandt", function() {deepEqual( Stem("hingewandt"), "hingewandt");});
test("hingewendet -> hingewendet", function() {deepEqual( Stem("hingewendet"), "hingewendet");});
test("hingewiesen -> hingewies", function() {deepEqual( Stem("hingewiesen"), "hingewies");});
test("hingeworfen -> hingeworf", function() {deepEqual( Stem("hingeworfen"), "hingeworf");});
test("hinging -> hinging", function() {deepEqual( Stem("hinging"), "hinging");});
test("hinglitt -> hinglitt", function() {deepEqual( Stem("hinglitt"), "hinglitt");});
test("hinhalten -> hinhalt", function() {deepEqual( Stem("hinhalten"), "hinhalt");});
test("hinhältst -> hinhalt", function() {deepEqual( Stem("hinhältst"), "hinhalt");});
test("hinirren -> hinirr", function() {deepEqual( Stem("hinirren"), "hinirr");});
test("hinkam -> hinkam", function() {deepEqual( Stem("hinkam"), "hinkam");});
test("hinken -> hink", function() {deepEqual( Stem("hinken"), "hink");});
test("hinkenden -> hinkend", function() {deepEqual( Stem("hinkenden"), "hinkend");});
test("hinkendes -> hinkend", function() {deepEqual( Stem("hinkendes"), "hinkend");});
test("hinklopft -> hinklopft", function() {deepEqual( Stem("hinklopft"), "hinklopft");});
test("hinkommen -> hinkomm", function() {deepEqual( Stem("hinkommen"), "hinkomm");});
test("hinkt -> hinkt", function() {deepEqual( Stem("hinkt"), "hinkt");});
test("hinlänglich -> hinlang", function() {deepEqual( Stem("hinlänglich"), "hinlang");});
test("hinlängliche -> hinlang", function() {deepEqual( Stem("hinlängliche"), "hinlang");});
test("hinleg -> hinleg", function() {deepEqual( Stem("hinleg"), "hinleg");});
test("hinlegen -> hinleg", function() {deepEqual( Stem("hinlegen"), "hinleg");});
test("hinlief -> hinlief", function() {deepEqual( Stem("hinlief"), "hinlief");});
test("hinnahm -> hinnahm", function() {deepEqual( Stem("hinnahm"), "hinnahm");});
test("hinnehmen -> hinnehm", function() {deepEqual( Stem("hinnehmen"), "hinnehm");});
test("hinneigen -> hinneig", function() {deepEqual( Stem("hinneigen"), "hinneig");});
test("hinneigt -> hinneigt", function() {deepEqual( Stem("hinneigt"), "hinneigt");});
test("hinneigten -> hinneigt", function() {deepEqual( Stem("hinneigten"), "hinneigt");});
test("hinnen -> hinn", function() {deepEqual( Stem("hinnen"), "hinn");});
test("hinrasen -> hinras", function() {deepEqual( Stem("hinrasen"), "hinras");});
test("hinreiche -> hinreich", function() {deepEqual( Stem("hinreiche"), "hinreich");});
test("hinreichen -> hinreich", function() {deepEqual( Stem("hinreichen"), "hinreich");});
test("hinreichend -> hinreich", function() {deepEqual( Stem("hinreichend"), "hinreich");});
test("hinreichende -> hinreich", function() {deepEqual( Stem("hinreichende"), "hinreich");});
test("hinreichenden -> hinreich", function() {deepEqual( Stem("hinreichenden"), "hinreich");});
test("hinreichender -> hinreich", function() {deepEqual( Stem("hinreichender"), "hinreich");});
test("hinreichte -> hinreicht", function() {deepEqual( Stem("hinreichte"), "hinreicht");});
test("hinreissen -> hinreiss", function() {deepEqual( Stem("hinreissen"), "hinreiss");});
test("hinreißen -> hinreiss", function() {deepEqual( Stem("hinreißen"), "hinreiss");});
test("hinreissend -> hinreiss", function() {deepEqual( Stem("hinreissend"), "hinreiss");});
test("hinsah -> hinsah", function() {deepEqual( Stem("hinsah"), "hinsah");});
test("hinsandte -> hinsandt", function() {deepEqual( Stem("hinsandte"), "hinsandt");});
test("hinschauten -> hinschaut", function() {deepEqual( Stem("hinschauten"), "hinschaut");});
test("hinscheiden -> hinscheid", function() {deepEqual( Stem("hinscheiden"), "hinscheid");});
test("hinschiessenden -> hinschiess", function() {deepEqual( Stem("hinschiessenden"), "hinschiess");});
test("hinschnitt -> hinschnitt", function() {deepEqual( Stem("hinschnitt"), "hinschnitt");});
test("hinschob -> hinschob", function() {deepEqual( Stem("hinschob"), "hinschob");});
test("hinschritt -> hinschritt", function() {deepEqual( Stem("hinschritt"), "hinschritt");});
test("hinschwebte -> hinschwebt", function() {deepEqual( Stem("hinschwebte"), "hinschwebt");});
test("hinsehen -> hinseh", function() {deepEqual( Stem("hinsehen"), "hinseh");});
test("hinsetzend -> hinsetz", function() {deepEqual( Stem("hinsetzend"), "hinsetz");});
test("hinsicht -> hinsicht", function() {deepEqual( Stem("hinsicht"), "hinsicht");});
test("hinsichtlich -> hinsicht", function() {deepEqual( Stem("hinsichtlich"), "hinsicht");});
test("hinsieht -> hinsieht", function() {deepEqual( Stem("hinsieht"), "hinsieht");});
test("hinsingt -> hinsingt", function() {deepEqual( Stem("hinsingt"), "hinsingt");});
test("hinspediert -> hinspediert", function() {deepEqual( Stem("hinspediert"), "hinspediert");});
test("hinstellen -> hinstell", function() {deepEqual( Stem("hinstellen"), "hinstell");});
test("hinstellte -> hinstellt", function() {deepEqual( Stem("hinstellte"), "hinstellt");});
test("hinsterben -> hinsterb", function() {deepEqual( Stem("hinsterben"), "hinsterb");});
test("hinstreckten -> hinstreckt", function() {deepEqual( Stem("hinstreckten"), "hinstreckt");});
test("hinstürzt -> hinsturzt", function() {deepEqual( Stem("hinstürzt"), "hinsturzt");});
test("hinstürzte -> hinsturzt", function() {deepEqual( Stem("hinstürzte"), "hinsturzt");});
test("hinten -> hint", function() {deepEqual( Stem("hinten"), "hint");});
test("hintendrein -> hintendrein", function() {deepEqual( Stem("hintendrein"), "hintendrein");});
test("hinter -> hint", function() {deepEqual( Stem("hinter"), "hint");});
test("hintereinander -> hintereinand", function() {deepEqual( Stem("hintereinander"), "hintereinand");});
test("hinteren -> hint", function() {deepEqual( Stem("hinteren"), "hint");});
test("hinterfragen -> hinterfrag", function() {deepEqual( Stem("hinterfragen"), "hinterfrag");});
test("hinterfragt -> hinterfragt", function() {deepEqual( Stem("hinterfragt"), "hinterfragt");});
test("hinterfüsse -> hinterfuss", function() {deepEqual( Stem("hinterfüsse"), "hinterfuss");});
test("hintergehen -> hintergeh", function() {deepEqual( Stem("hintergehen"), "hintergeh");});
test("hintergestell -> hintergestell", function() {deepEqual( Stem("hintergestell"), "hintergestell");});
test("hintergrund -> hintergrund", function() {deepEqual( Stem("hintergrund"), "hintergrund");});
test("hintergrunde -> hintergrund", function() {deepEqual( Stem("hintergrunde"), "hintergrund");});
test("hintergrundes -> hintergrund", function() {deepEqual( Stem("hintergrundes"), "hintergrund");});
test("hintergrundregelmässig -> hintergrundregelmass", function() {deepEqual( Stem("hintergrundregelmässig"), "hintergrundregelmass");});
test("hinterhalt -> hinterhalt", function() {deepEqual( Stem("hinterhalt"), "hinterhalt");});
test("hinterher -> hinterh", function() {deepEqual( Stem("hinterher"), "hinterh");});
test("hinterhoftheater -> hinterhoftheat", function() {deepEqual( Stem("hinterhoftheater"), "hinterhoftheat");});
test("hinterlassen -> hinterlass", function() {deepEqual( Stem("hinterlassen"), "hinterlass");});
test("hinterlegten -> hinterlegt", function() {deepEqual( Stem("hinterlegten"), "hinterlegt");});
test("hinterliess -> hinterliess", function() {deepEqual( Stem("hinterliess"), "hinterliess");});
test("hinterlist -> hinterlist", function() {deepEqual( Stem("hinterlist"), "hinterlist");});
test("hinterlistigen -> hinterlist", function() {deepEqual( Stem("hinterlistigen"), "hinterlist");});
test("hintern -> hint", function() {deepEqual( Stem("hintern"), "hint");});
test("hinterrücks -> hinterruck", function() {deepEqual( Stem("hinterrücks"), "hinterruck");});
test("hinters -> hint", function() {deepEqual( Stem("hinters"), "hint");});
test("hinterstübchen -> hinterstubch", function() {deepEqual( Stem("hinterstübchen"), "hinterstubch");});
test("hintertreiben -> hintertreib", function() {deepEqual( Stem("hintertreiben"), "hintertreib");});
test("hintrat -> hintrat", function() {deepEqual( Stem("hintrat"), "hintrat");});
test("hintreten -> hintret", function() {deepEqual( Stem("hintreten"), "hintret");});
test("hintri -> hintri", function() {deepEqual( Stem("hintri"), "hintri");});
test("hinüber -> hinub", function() {deepEqual( Stem("hinüber"), "hinub");});
test("hinübergehen -> hinubergeh", function() {deepEqual( Stem("hinübergehen"), "hinubergeh");});
test("hinübergetragen -> hinubergetrag", function() {deepEqual( Stem("hinübergetragen"), "hinubergetrag");});
test("hinübergewandt -> hinubergewandt", function() {deepEqual( Stem("hinübergewandt"), "hinubergewandt");});
test("hinüberkommen -> hinuberkomm", function() {deepEqual( Stem("hinüberkommen"), "hinuberkomm");});
test("hinüberreiten -> hinuberreit", function() {deepEqual( Stem("hinüberreiten"), "hinuberreit");});
test("hinüberrudern -> hinuberrud", function() {deepEqual( Stem("hinüberrudern"), "hinuberrud");});
test("hinübersah -> hinubersah", function() {deepEqual( Stem("hinübersah"), "hinubersah");});
test("hinüberschritten -> hinuberschritt", function() {deepEqual( Stem("hinüberschritten"), "hinuberschritt");});
test("hinübersehen -> hinuberseh", function() {deepEqual( Stem("hinübersehen"), "hinuberseh");});
test("hinübertragen -> hinubertrag", function() {deepEqual( Stem("hinübertragen"), "hinubertrag");});
test("hinunter -> hinunt", function() {deepEqual( Stem("hinunter"), "hinunt");});
test("hinunterblicken -> hinunterblick", function() {deepEqual( Stem("hinunterblicken"), "hinunterblick");});
test("hinunterfahren -> hinunterfahr", function() {deepEqual( Stem("hinunterfahren"), "hinunterfahr");});
test("hinunterführte -> hinunterfuhrt", function() {deepEqual( Stem("hinunterführte"), "hinunterfuhrt");});
test("hinuntergebeugt -> hinuntergebeugt", function() {deepEqual( Stem("hinuntergebeugt"), "hinuntergebeugt");});
test("hinuntergesprungen -> hinuntergespr", function() {deepEqual( Stem("hinuntergesprungen"), "hinuntergespr");});
test("hinuntergestossen -> hinuntergestoss", function() {deepEqual( Stem("hinuntergestossen"), "hinuntergestoss");});
test("hinuntergestoßen -> hinuntergestoss", function() {deepEqual( Stem("hinuntergestoßen"), "hinuntergestoss");});
test("hinunterging -> hinunterging", function() {deepEqual( Stem("hinunterging"), "hinunterging");});
test("hinunterhängenden -> hinunterhang", function() {deepEqual( Stem("hinunterhängenden"), "hinunterhang");});
test("hinunterkommen -> hinunterkomm", function() {deepEqual( Stem("hinunterkommen"), "hinunterkomm");});
test("hinunterlachte -> hinunterlacht", function() {deepEqual( Stem("hinunterlachte"), "hinunterlacht");});
test("hinunterrutschen -> hinunterrutsch", function() {deepEqual( Stem("hinunterrutschen"), "hinunterrutsch");});
test("hinuntersah -> hinuntersah", function() {deepEqual( Stem("hinuntersah"), "hinuntersah");});
test("hinunterschaute -> hinunterschaut", function() {deepEqual( Stem("hinunterschaute"), "hinunterschaut");});
test("hinuntersenkte -> hinuntersenkt", function() {deepEqual( Stem("hinuntersenkte"), "hinuntersenkt");});
test("hinunterstossen -> hinunterstoss", function() {deepEqual( Stem("hinunterstossen"), "hinunterstoss");});
test("hinunterstoßen -> hinunterstoss", function() {deepEqual( Stem("hinunterstoßen"), "hinunterstoss");});
test("hinuntertragen -> hinuntertrag", function() {deepEqual( Stem("hinuntertragen"), "hinuntertrag");});
test("hinunterwerfen -> hinunterwerf", function() {deepEqual( Stem("hinunterwerfen"), "hinunterwerf");});
test("hinunterzerrte -> hinunterzerrt", function() {deepEqual( Stem("hinunterzerrte"), "hinunterzerrt");});
test("hinwandelt -> hinwandelt", function() {deepEqual( Stem("hinwandelt"), "hinwandelt");});
test("hinwanderten -> hinwandert", function() {deepEqual( Stem("hinwanderten"), "hinwandert");});
test("hinwandte -> hinwandt", function() {deepEqual( Stem("hinwandte"), "hinwandt");});
test("hinweg -> hinweg", function() {deepEqual( Stem("hinweg"), "hinweg");});
test("hinweggegangen -> hinweggegang", function() {deepEqual( Stem("hinweggegangen"), "hinweggegang");});
test("hinweggehen -> hinweggeh", function() {deepEqual( Stem("hinweggehen"), "hinweggeh");});
test("hinweggeholfen -> hinweggeholf", function() {deepEqual( Stem("hinweggeholfen"), "hinweggeholf");});
test("hinweggerattert -> hinweggerattert", function() {deepEqual( Stem("hinweggerattert"), "hinweggerattert");});
test("hinwegkommen -> hinwegkomm", function() {deepEqual( Stem("hinwegkommen"), "hinwegkomm");});
test("hinwegliefen -> hinweglief", function() {deepEqual( Stem("hinwegliefen"), "hinweglief");});
test("hinwegnehmen -> hinwegnehm", function() {deepEqual( Stem("hinwegnehmen"), "hinwegnehm");});
test("hinwegschaffen -> hinwegschaff", function() {deepEqual( Stem("hinwegschaffen"), "hinwegschaff");});
test("hinweise -> hinweis", function() {deepEqual( Stem("hinweise"), "hinweis");});
test("hinweisen -> hinweis", function() {deepEqual( Stem("hinweisen"), "hinweis");});
test("hinwenden -> hinwend", function() {deepEqual( Stem("hinwenden"), "hinwend");});
test("hinwendung -> hinwend", function() {deepEqual( Stem("hinwendung"), "hinwend");});
test("hinwerfen -> hinwerf", function() {deepEqual( Stem("hinwerfen"), "hinwerf");});
test("hinwerfung -> hinwerf", function() {deepEqual( Stem("hinwerfung"), "hinwerf");});
test("hinwieder -> hinwied", function() {deepEqual( Stem("hinwieder"), "hinwied");});
test("hinziehen -> hinzieh", function() {deepEqual( Stem("hinziehen"), "hinzieh");});
test("hinzog -> hinzog", function() {deepEqual( Stem("hinzog"), "hinzog");});
test("hinzogen -> hinzog", function() {deepEqual( Stem("hinzogen"), "hinzog");});
test("hinzu -> hinzu", function() {deepEqual( Stem("hinzu"), "hinzu");});
test("hinzubegeben -> hinzubegeb", function() {deepEqual( Stem("hinzubegeben"), "hinzubegeb");});
test("hinzublicken -> hinzublick", function() {deepEqual( Stem("hinzublicken"), "hinzublick");});
test("hinzufüge -> hinzufug", function() {deepEqual( Stem("hinzufüge"), "hinzufug");});
test("hinzufügen -> hinzufug", function() {deepEqual( Stem("hinzufügen"), "hinzufug");});
test("hinzufügt -> hinzufugt", function() {deepEqual( Stem("hinzufügt"), "hinzufugt");});
test("hinzuführen -> hinzufuhr", function() {deepEqual( Stem("hinzuführen"), "hinzufuhr");});
test("hinzugefügt -> hinzugefugt", function() {deepEqual( Stem("hinzugefügt"), "hinzugefugt");});
test("hinzugehen -> hinzugeh", function() {deepEqual( Stem("hinzugehen"), "hinzugeh");});
test("hinzugekommen -> hinzugekomm", function() {deepEqual( Stem("hinzugekommen"), "hinzugekomm");});
test("hinzugesetzt -> hinzugesetzt", function() {deepEqual( Stem("hinzugesetzt"), "hinzugesetzt");});
test("hinzugetan -> hinzugetan", function() {deepEqual( Stem("hinzugetan"), "hinzugetan");});
test("hinzuhalten -> hinzuhalt", function() {deepEqual( Stem("hinzuhalten"), "hinzuhalt");});
test("hinzukommen -> hinzukomm", function() {deepEqual( Stem("hinzukommen"), "hinzukomm");});
test("hinzukommenden -> hinzukomm", function() {deepEqual( Stem("hinzukommenden"), "hinzukomm");});
test("hinzulegen -> hinzuleg", function() {deepEqual( Stem("hinzulegen"), "hinzuleg");});
test("hinzuschielen -> hinzuschiel", function() {deepEqual( Stem("hinzuschielen"), "hinzuschiel");});
test("hinzuschleichen -> hinzuschleich", function() {deepEqual( Stem("hinzuschleichen"), "hinzuschleich");});
test("hinzusehen -> hinzuseh", function() {deepEqual( Stem("hinzusehen"), "hinzuseh");});
test("hinzustrecken -> hinzustreck", function() {deepEqual( Stem("hinzustrecken"), "hinzustreck");});
test("hinzustürzen -> hinzusturz", function() {deepEqual( Stem("hinzustürzen"), "hinzusturz");});
test("hinzutraten -> hinzutrat", function() {deepEqual( Stem("hinzutraten"), "hinzutrat");});
test("hinzutreten -> hinzutret", function() {deepEqual( Stem("hinzutreten"), "hinzutret");});
test("hinzutun -> hinzutun", function() {deepEqual( Stem("hinzutun"), "hinzutun");});
test("hinzuweisen -> hinzuweis", function() {deepEqual( Stem("hinzuweisen"), "hinzuweis");});
test("hinzuzufügen -> hinzuzufug", function() {deepEqual( Stem("hinzuzufügen"), "hinzuzufug");});
test("hiob -> hiob", function() {deepEqual( Stem("hiob"), "hiob");});
test("hirn -> hirn", function() {deepEqual( Stem("hirn"), "hirn");});
test("hirngespenstern -> hirngespen", function() {deepEqual( Stem("hirngespenstern"), "hirngespen");});
test("hirngespinst -> hirngespin", function() {deepEqual( Stem("hirngespinst"), "hirngespin");});
test("hirngespinste -> hirngespin", function() {deepEqual( Stem("hirngespinste"), "hirngespin");});
test("hirnhäute -> hirnhaut", function() {deepEqual( Stem("hirnhäute"), "hirnhaut");});
test("hirnschale -> hirnschal", function() {deepEqual( Stem("hirnschale"), "hirnschal");});
test("hirsch -> hirsch", function() {deepEqual( Stem("hirsch"), "hirsch");});
test("hirsche -> hirsch", function() {deepEqual( Stem("hirsche"), "hirsch");});
test("hirschen -> hirsch", function() {deepEqual( Stem("hirschen"), "hirsch");});
test("hirsches -> hirsch", function() {deepEqual( Stem("hirsches"), "hirsch");});
test("hirschgeweih -> hirschgeweih", function() {deepEqual( Stem("hirschgeweih"), "hirschgeweih");});
test("hirschkuh -> hirschkuh", function() {deepEqual( Stem("hirschkuh"), "hirschkuh");});
test("hirt -> hirt", function() {deepEqual( Stem("hirt"), "hirt");});
test("hirte -> hirt", function() {deepEqual( Stem("hirte"), "hirt");});
test("hirten -> hirt", function() {deepEqual( Stem("hirten"), "hirt");});
test("historie -> histori", function() {deepEqual( Stem("historie"), "histori");});
test("historiker -> histor", function() {deepEqual( Stem("historiker"), "histor");});
test("historikerin -> historikerin", function() {deepEqual( Stem("historikerin"), "historikerin");});
test("historikers -> histor", function() {deepEqual( Stem("historikers"), "histor");});
test("historisch -> histor", function() {deepEqual( Stem("historisch"), "histor");});
test("historische -> histor", function() {deepEqual( Stem("historische"), "histor");});
test("historischen -> histor", function() {deepEqual( Stem("historischen"), "histor");});
test("historischer -> histor", function() {deepEqual( Stem("historischer"), "histor");});
test("hitler -> hitl", function() {deepEqual( Stem("hitler"), "hitl");});
test("hitlerrede -> hitlerred", function() {deepEqual( Stem("hitlerrede"), "hitlerred");});
test("hitz -> hitz", function() {deepEqual( Stem("hitz"), "hitz");});
test("hitze -> hitz", function() {deepEqual( Stem("hitze"), "hitz");});
test("hitzige -> hitzig", function() {deepEqual( Stem("hitzige"), "hitzig");});
test("hitzigen -> hitzig", function() {deepEqual( Stem("hitzigen"), "hitzig");});
test("hitziger -> hitzig", function() {deepEqual( Stem("hitziger"), "hitzig");});
test("hitzkopf -> hitzkopf", function() {deepEqual( Stem("hitzkopf"), "hitzkopf");});
test("hm -> hm", function() {deepEqual( Stem("hm"), "hm");});
test("hmmm -> hmmm", function() {deepEqual( Stem("hmmm"), "hmmm");});
test("ho -> ho", function() {deepEqual( Stem("ho"), "ho");});
test("hob -> hob", function() {deepEqual( Stem("hob"), "hob");});
test("hobelbänke -> hobelbank", function() {deepEqual( Stem("hobelbänke"), "hobelbank");});
test("hoben -> hob", function() {deepEqual( Stem("hoben"), "hob");});
test("hoc -> hoc", function() {deepEqual( Stem("hoc"), "hoc");});
test("hoch -> hoch", function() {deepEqual( Stem("hoch"), "hoch");});
test("hochachtung -> hochacht", function() {deepEqual( Stem("hochachtung"), "hochacht");});
test("hochachtungsvohlst -> hochachtungsvohl", function() {deepEqual( Stem("hochachtungsvohlst"), "hochachtungsvohl");});
test("hochamt -> hochamt", function() {deepEqual( Stem("hochamt"), "hochamt");});
test("hochaufatmend -> hochaufatm", function() {deepEqual( Stem("hochaufatmend"), "hochaufatm");});
test("hochdeutsch -> hochdeutsch", function() {deepEqual( Stem("hochdeutsch"), "hochdeutsch");});
test("hochebene -> hocheb", function() {deepEqual( Stem("hochebene"), "hocheb");});
test("hochfahrenden -> hochfahr", function() {deepEqual( Stem("hochfahrenden"), "hochfahr");});
test("hochfuhr -> hochfuhr", function() {deepEqual( Stem("hochfuhr"), "hochfuhr");});
test("hochgebettete -> hochgebettet", function() {deepEqual( Stem("hochgebettete"), "hochgebettet");});
test("hochgebrochenen -> hochgebroch", function() {deepEqual( Stem("hochgebrochenen"), "hochgebroch");});
test("hochgefahren -> hochgefahr", function() {deepEqual( Stem("hochgefahren"), "hochgefahr");});
test("hochgehoben -> hochgehob", function() {deepEqual( Stem("hochgehoben"), "hochgehob");});
test("hochgelegen -> hochgeleg", function() {deepEqual( Stem("hochgelegen"), "hochgeleg");});
test("hochgenuss -> hochgenuss", function() {deepEqual( Stem("hochgenuss"), "hochgenuss");});
test("hochgepriesene -> hochgepries", function() {deepEqual( Stem("hochgepriesene"), "hochgepries");});
test("hochgeschäfteten -> hochgeschaftet", function() {deepEqual( Stem("hochgeschäfteten"), "hochgeschaftet");});
test("hochgewölbten -> hochgewolbt", function() {deepEqual( Stem("hochgewölbten"), "hochgewolbt");});
test("hochgipfel -> hochgipfel", function() {deepEqual( Stem("hochgipfel"), "hochgipfel");});
test("hochheilig -> hochheil", function() {deepEqual( Stem("hochheilig"), "hochheil");});
test("hochheilige -> hochheil", function() {deepEqual( Stem("hochheilige"), "hochheil");});
test("hochheiliges -> hochheil", function() {deepEqual( Stem("hochheiliges"), "hochheil");});
test("hochkam -> hochkam", function() {deepEqual( Stem("hochkam"), "hochkam");});
test("hochklingenden -> hochkling", function() {deepEqual( Stem("hochklingenden"), "hochkling");});
test("höchlich -> hochlich", function() {deepEqual( Stem("höchlich"), "hochlich");});
test("hochmoore -> hochmoor", function() {deepEqual( Stem("hochmoore"), "hochmoor");});
test("hochmut -> hochmut", function() {deepEqual( Stem("hochmut"), "hochmut");});
test("hochmütig -> hochmut", function() {deepEqual( Stem("hochmütig"), "hochmut");});
test("hochmütige -> hochmut", function() {deepEqual( Stem("hochmütige"), "hochmut");});
test("hochnäsig -> hochnas", function() {deepEqual( Stem("hochnäsig"), "hochnas");});
test("hochnäsige -> hochnas", function() {deepEqual( Stem("hochnäsige"), "hochnas");});
test("hochpreisungen -> hochpreis", function() {deepEqual( Stem("hochpreisungen"), "hochpreis");});
test("hochsahen -> hochsah", function() {deepEqual( Stem("hochsahen"), "hochsah");});
test("hochschätzung -> hochschatz", function() {deepEqual( Stem("hochschätzung"), "hochschatz");});
test("hochsitze -> hochsitz", function() {deepEqual( Stem("hochsitze"), "hochsitz");});
test("hochsommer -> hochsomm", function() {deepEqual( Stem("hochsommer"), "hochsomm");});
test("höchst -> hoch", function() {deepEqual( Stem("höchst"), "hoch");});
test("hochstämmige -> hochstamm", function() {deepEqual( Stem("hochstämmige"), "hochstamm");});
test("hochstapfen -> hochstapf", function() {deepEqual( Stem("hochstapfen"), "hochstapf");});
test("höchste -> hoch", function() {deepEqual( Stem("höchste"), "hoch");});
test("höchstem -> hoch", function() {deepEqual( Stem("höchstem"), "hoch");});
test("höchsten -> hoch", function() {deepEqual( Stem("höchsten"), "hoch");});
test("höchstens -> hochst", function() {deepEqual( Stem("höchstens"), "hochst");});
test("höchster -> hoch", function() {deepEqual( Stem("höchster"), "hoch");});
test("höchstes -> hoch", function() {deepEqual( Stem("höchstes"), "hoch");});
test("höchstnötig -> hochstnot", function() {deepEqual( Stem("höchstnötig"), "hochstnot");});
test("hochtrabende -> hochtrab", function() {deepEqual( Stem("hochtrabende"), "hochtrab");});
test("hochverpönt -> hochverpont", function() {deepEqual( Stem("hochverpönt"), "hochverpont");});
test("hochverpönte -> hochverpont", function() {deepEqual( Stem("hochverpönte"), "hochverpont");});
test("hochverpöntes -> hochverpont", function() {deepEqual( Stem("hochverpöntes"), "hochverpont");});
test("hochverrat -> hochverrat", function() {deepEqual( Stem("hochverrat"), "hochverrat");});
test("hochwild -> hochwild", function() {deepEqual( Stem("hochwild"), "hochwild");});
test("hochzeit -> hochzeit", function() {deepEqual( Stem("hochzeit"), "hochzeit");});
test("hochzeitbett -> hochzeitbett", function() {deepEqual( Stem("hochzeitbett"), "hochzeitbett");});
test("hochzeiten -> hochzeit", function() {deepEqual( Stem("hochzeiten"), "hochzeit");});
test("hochzeiter -> hochzeit", function() {deepEqual( Stem("hochzeiter"), "hochzeit");});
test("hochzeitgäste -> hochzeitgast", function() {deepEqual( Stem("hochzeitgäste"), "hochzeitgast");});
test("hochzeitgeleite -> hochzeitgeleit", function() {deepEqual( Stem("hochzeitgeleite"), "hochzeitgeleit");});
test("hochzeitkammer -> hochzeitkamm", function() {deepEqual( Stem("hochzeitkammer"), "hochzeitkamm");});
test("hochzeitmahl -> hochzeitmahl", function() {deepEqual( Stem("hochzeitmahl"), "hochzeitmahl");});
test("hochzeitmorgen -> hochzeitmorg", function() {deepEqual( Stem("hochzeitmorgen"), "hochzeitmorg");});
test("hochzeitpaar -> hochzeitpaar", function() {deepEqual( Stem("hochzeitpaar"), "hochzeitpaar");});
test("hochzeitstruhe -> hochzeitstruh", function() {deepEqual( Stem("hochzeitstruhe"), "hochzeitstruh");});
test("hochzet -> hochzet", function() {deepEqual( Stem("hochzet"), "hochzet");});
test("hochzubrüllen -> hochzubrull", function() {deepEqual( Stem("hochzubrüllen"), "hochzubrull");});
test("hockte -> hockt", function() {deepEqual( Stem("hockte"), "hockt");});
test("hockten -> hockt", function() {deepEqual( Stem("hockten"), "hockt");});
test("hof -> hof", function() {deepEqual( Stem("hof"), "hof");});
test("hofe -> hof", function() {deepEqual( Stem("hofe"), "hof");});
test("höfe -> hof", function() {deepEqual( Stem("höfe"), "hof");});
test("höfen -> hof", function() {deepEqual( Stem("höfen"), "hof");});
test("hofes -> hof", function() {deepEqual( Stem("hofes"), "hof");});
test("hoffart -> hoffart", function() {deepEqual( Stem("hoffart"), "hoffart");});
test("hoffärtigen -> hoffart", function() {deepEqual( Stem("hoffärtigen"), "hoffart");});
test("hoffärtiger -> hoffart", function() {deepEqual( Stem("hoffärtiger"), "hoffart");});
test("hoffe -> hoff", function() {deepEqual( Stem("hoffe"), "hoff");});
test("hoffen -> hoff", function() {deepEqual( Stem("hoffen"), "hoff");});
test("hoffend -> hoffend", function() {deepEqual( Stem("hoffend"), "hoffend");});
test("hoffenster -> hoffen", function() {deepEqual( Stem("hoffenster"), "hoffen");});
test("hoffentlich -> hoffent", function() {deepEqual( Stem("hoffentlich"), "hoffent");});
test("hoffmann -> hoffmann", function() {deepEqual( Stem("hoffmann"), "hoffmann");});
test("hoffmannstropfen -> hoffmannstropf", function() {deepEqual( Stem("hoffmannstropfen"), "hoffmannstropf");});
test("hoffnung -> hoffnung", function() {deepEqual( Stem("hoffnung"), "hoffnung");});
test("hoffnungen -> hoffnung", function() {deepEqual( Stem("hoffnungen"), "hoffnung");});
test("hoffnungsarme -> hoffnungsarm", function() {deepEqual( Stem("hoffnungsarme"), "hoffnungsarm");});
test("hoffnungsfaser -> hoffnungsfas", function() {deepEqual( Stem("hoffnungsfaser"), "hoffnungsfas");});
test("hoffnungsfreudig -> hoffnungsfreud", function() {deepEqual( Stem("hoffnungsfreudig"), "hoffnungsfreud");});
test("hoffnungslos -> hoffnungslos", function() {deepEqual( Stem("hoffnungslos"), "hoffnungslos");});
test("hoffnungslose -> hoffnungslos", function() {deepEqual( Stem("hoffnungslose"), "hoffnungslos");});
test("hoffnungsloser -> hoffnungslos", function() {deepEqual( Stem("hoffnungsloser"), "hoffnungslos");});
test("hoffnungslosigkeit -> hoffnungslos", function() {deepEqual( Stem("hoffnungslosigkeit"), "hoffnungslos");});
test("hoffnungsreichem -> hoffnungsreich", function() {deepEqual( Stem("hoffnungsreichem"), "hoffnungsreich");});
test("hoffnungsvolle -> hoffnungsvoll", function() {deepEqual( Stem("hoffnungsvolle"), "hoffnungsvoll");});
test("hoffte -> hofft", function() {deepEqual( Stem("hoffte"), "hofft");});
test("hofhaltung -> hofhalt", function() {deepEqual( Stem("hofhaltung"), "hofhalt");});
test("hofleben -> hofleb", function() {deepEqual( Stem("hofleben"), "hofleb");});
test("hofleute -> hofleut", function() {deepEqual( Stem("hofleute"), "hofleut");});
test("höflich -> hoflich", function() {deepEqual( Stem("höflich"), "hoflich");});
test("höfliche -> hoflich", function() {deepEqual( Stem("höfliche"), "hoflich");});
test("höflichem -> hoflich", function() {deepEqual( Stem("höflichem"), "hoflich");});
test("höflichen -> hoflich", function() {deepEqual( Stem("höflichen"), "hoflich");});
test("höflicher -> hoflich", function() {deepEqual( Stem("höflicher"), "hoflich");});
test("höflichkeit -> hoflich", function() {deepEqual( Stem("höflichkeit"), "hoflich");});
test("höflichkeiten -> hoflich", function() {deepEqual( Stem("höflichkeiten"), "hoflich");});
test("hofrat -> hofrat", function() {deepEqual( Stem("hofrat"), "hofrat");});
test("hofraum -> hofraum", function() {deepEqual( Stem("hofraum"), "hofraum");});
test("hofstaats -> hofstaat", function() {deepEqual( Stem("hofstaats"), "hofstaat");});
test("höft -> hoft", function() {deepEqual( Stem("höft"), "hoft");});
test("hofwinkels -> hofwinkel", function() {deepEqual( Stem("hofwinkels"), "hofwinkel");});
test("höh -> hoh", function() {deepEqual( Stem("höh"), "hoh");});
test("hohe -> hoh", function() {deepEqual( Stem("hohe"), "hoh");});
test("höhe -> hoh", function() {deepEqual( Stem("höhe"), "hoh");});
test("hoheit -> hoheit", function() {deepEqual( Stem("hoheit"), "hoheit");});
test("hohem -> hoh", function() {deepEqual( Stem("hohem"), "hoh");});
test("hohen -> hoh", function() {deepEqual( Stem("hohen"), "hoh");});
test("höhen -> hoh", function() {deepEqual( Stem("höhen"), "hoh");});
test("höhenflüge -> hohenflug", function() {deepEqual( Stem("höhenflüge"), "hohenflug");});
test("höhenlüften -> hohenluft", function() {deepEqual( Stem("höhenlüften"), "hohenluft");});
test("höhenstrichen -> hohenstrich", function() {deepEqual( Stem("höhenstrichen"), "hohenstrich");});
test("höhepunktes -> hohepunkt", function() {deepEqual( Stem("höhepunktes"), "hohepunkt");});
test("hoher -> hoh", function() {deepEqual( Stem("hoher"), "hoh");});
test("höher -> hoh", function() {deepEqual( Stem("höher"), "hoh");});
test("höhere -> hoh", function() {deepEqual( Stem("höhere"), "hoh");});
test("höherem -> hoh", function() {deepEqual( Stem("höherem"), "hoh");});
test("höheren -> hoh", function() {deepEqual( Stem("höheren"), "hoh");});
test("höherer -> hoh", function() {deepEqual( Stem("höherer"), "hoh");});
test("höheres -> hoh", function() {deepEqual( Stem("höheres"), "hoh");});
test("höhern -> hoh", function() {deepEqual( Stem("höhern"), "hoh");});
test("hohes -> hoh", function() {deepEqual( Stem("hohes"), "hoh");});
test("hohfentlich -> hohfent", function() {deepEqual( Stem("hohfentlich"), "hohfent");});
test("hohle -> hohl", function() {deepEqual( Stem("hohle"), "hohl");});
test("hohlem -> hohl", function() {deepEqual( Stem("hohlem"), "hohl");});
test("hohlen -> hohl", function() {deepEqual( Stem("hohlen"), "hohl");});
test("höhlen -> hohl", function() {deepEqual( Stem("höhlen"), "hohl");});
test("hohler -> hohl", function() {deepEqual( Stem("hohler"), "hohl");});
test("hohles -> hohl", function() {deepEqual( Stem("hohles"), "hohl");});
test("höhlung -> hohlung", function() {deepEqual( Stem("höhlung"), "hohlung");});
test("hohlziegel -> hohlziegel", function() {deepEqual( Stem("hohlziegel"), "hohlziegel");});
test("hohn -> hohn", function() {deepEqual( Stem("hohn"), "hohn");});
test("höhnisch -> hohnisch", function() {deepEqual( Stem("höhnisch"), "hohnisch");});
test("höhnischen -> hohnisch", function() {deepEqual( Stem("höhnischen"), "hohnisch");});
test("höhnisches -> hohnisch", function() {deepEqual( Stem("höhnisches"), "hohnisch");});
test("höhnten -> hohnt", function() {deepEqual( Stem("höhnten"), "hohnt");});
test("hoho -> hoho", function() {deepEqual( Stem("hoho"), "hoho");});
test("höi -> hoi", function() {deepEqual( Stem("höi"), "hoi");});
test("hol -> hol", function() {deepEqual( Stem("hol"), "hol");});
test("hold -> hold", function() {deepEqual( Stem("hold"), "hold");});
test("holde -> hold", function() {deepEqual( Stem("holde"), "hold");});
test("holden -> hold", function() {deepEqual( Stem("holden"), "hold");});
test("holdes -> hold", function() {deepEqual( Stem("holdes"), "hold");});
test("holdselig -> holdsel", function() {deepEqual( Stem("holdselig"), "holdsel");});
test("holdseligste -> holdsel", function() {deepEqual( Stem("holdseligste"), "holdsel");});
test("hole -> hol", function() {deepEqual( Stem("hole"), "hol");});
test("holen -> hol", function() {deepEqual( Stem("holen"), "hol");});
test("holimanns -> holimann", function() {deepEqual( Stem("holimanns"), "holimann");});
test("holla -> holla", function() {deepEqual( Stem("holla"), "holla");});
test("holle -> holl", function() {deepEqual( Stem("holle"), "holl");});
test("hölle -> holl", function() {deepEqual( Stem("hölle"), "holl");});
test("höllen -> holl", function() {deepEqual( Stem("höllen"), "holl");});
test("höllenfeuer -> hollenfeu", function() {deepEqual( Stem("höllenfeuer"), "hollenfeu");});
test("höllengeister -> hollengeist", function() {deepEqual( Stem("höllengeister"), "hollengeist");});
test("höllengeistern -> hollengeist", function() {deepEqual( Stem("höllengeistern"), "hollengeist");});
test("höllenlärm -> hollenlarm", function() {deepEqual( Stem("höllenlärm"), "hollenlarm");});
test("höllisch -> hollisch", function() {deepEqual( Stem("höllisch"), "hollisch");});
test("höllische -> hollisch", function() {deepEqual( Stem("höllische"), "hollisch");});
test("höllischem -> hollisch", function() {deepEqual( Stem("höllischem"), "hollisch");});
test("höllischen -> hollisch", function() {deepEqual( Stem("höllischen"), "hollisch");});
test("höllischer -> hollisch", function() {deepEqual( Stem("höllischer"), "hollisch");});
test("höllisches -> hollisch", function() {deepEqual( Stem("höllisches"), "hollisch");});
test("holocaust -> holocaust", function() {deepEqual( Stem("holocaust"), "holocaust");});
test("holsteiner -> holstein", function() {deepEqual( Stem("holsteiner"), "holstein");});
test("holt -> holt", function() {deepEqual( Stem("holt"), "holt");});
test("holte -> holt", function() {deepEqual( Stem("holte"), "holt");});
test("holten -> holt", function() {deepEqual( Stem("holten"), "holt");});
test("holterdiepolter -> holterdiepolt", function() {deepEqual( Stem("holterdiepolter"), "holterdiepolt");});
test("holunderbäume -> holunderbaum", function() {deepEqual( Stem("holunderbäume"), "holunderbaum");});
test("holz -> holz", function() {deepEqual( Stem("holz"), "holz");});
test("holzbank -> holzbank", function() {deepEqual( Stem("holzbank"), "holzbank");});
test("hölzchen -> holzch", function() {deepEqual( Stem("hölzchen"), "holzch");});
test("holzdieb -> holzdieb", function() {deepEqual( Stem("holzdieb"), "holzdieb");});
test("holze -> holz", function() {deepEqual( Stem("holze"), "holz");});
test("hölzerne -> holzern", function() {deepEqual( Stem("hölzerne"), "holzern");});
test("hölzernen -> holzern", function() {deepEqual( Stem("hölzernen"), "holzern");});
test("hölzerner -> holzern", function() {deepEqual( Stem("hölzerner"), "holzern");});
test("hölzernes -> holzern", function() {deepEqual( Stem("hölzernes"), "holzern");});
test("holzes -> holz", function() {deepEqual( Stem("holzes"), "holz");});
test("holzgetäfel -> holzgetafel", function() {deepEqual( Stem("holzgetäfel"), "holzgetafel");});
test("holzhauer -> holzhau", function() {deepEqual( Stem("holzhauer"), "holzhau");});
test("holzkannen -> holzkann", function() {deepEqual( Stem("holzkannen"), "holzkann");});
test("holzkeil -> holzkeil", function() {deepEqual( Stem("holzkeil"), "holzkeil");});
test("holzknecht -> holzknecht", function() {deepEqual( Stem("holzknecht"), "holzknecht");});
test("holzknechte -> holzknecht", function() {deepEqual( Stem("holzknechte"), "holzknecht");});
test("holzkreuz -> holzkreuz", function() {deepEqual( Stem("holzkreuz"), "holzkreuz");});
test("holzscheite -> holzscheit", function() {deepEqual( Stem("holzscheite"), "holzscheit");});
test("holzschwert -> holzschwert", function() {deepEqual( Stem("holzschwert"), "holzschwert");});
test("holzstall -> holzstall", function() {deepEqual( Stem("holzstall"), "holzstall");});
test("holzstoss -> holzstoss", function() {deepEqual( Stem("holzstoss"), "holzstoss");});
test("holztisch -> holztisch", function() {deepEqual( Stem("holztisch"), "holztisch");});
test("holztreppe -> holztrepp", function() {deepEqual( Stem("holztreppe"), "holztrepp");});
test("home -> hom", function() {deepEqual( Stem("home"), "hom");});
test("homepage -> homepag", function() {deepEqual( Stem("homepage"), "homepag");});
test("homers -> hom", function() {deepEqual( Stem("homers"), "hom");});
test("hon -> hon", function() {deepEqual( Stem("hon"), "hon");});
test("honecker -> honeck", function() {deepEqual( Stem("honecker"), "honeck");});
test("honetter -> honett", function() {deepEqual( Stem("honetter"), "honett");});
test("honig -> honig", function() {deepEqual( Stem("honig"), "honig");});
test("honigfässchen -> honigfassch", function() {deepEqual( Stem("honigfässchen"), "honigfassch");});
test("honigfäßchen -> honigfassch", function() {deepEqual( Stem("honigfäßchen"), "honigfassch");});
test("honigs -> honig", function() {deepEqual( Stem("honigs"), "honig");});
test("honigscheibe -> honigscheib", function() {deepEqual( Stem("honigscheibe"), "honigscheib");});
test("honneurs -> honneur", function() {deepEqual( Stem("honneurs"), "honneur");});
test("honorar -> honorar", function() {deepEqual( Stem("honorar"), "honorar");});
test("hooch -> hooch", function() {deepEqual( Stem("hooch"), "hooch");});
test("hopp -> hopp", function() {deepEqual( Stem("hopp"), "hopp");});
test("hoppelt -> hoppelt", function() {deepEqual( Stem("hoppelt"), "hoppelt");});
test("hoppla -> hoppla", function() {deepEqual( Stem("hoppla"), "hoppla");});
test("hopsele -> hopsel", function() {deepEqual( Stem("hopsele"), "hopsel");});
test("hör -> hor", function() {deepEqual( Stem("hör"), "hor");});
test("hörbar -> horbar", function() {deepEqual( Stem("hörbar"), "horbar");});
test("horche -> horch", function() {deepEqual( Stem("horche"), "horch");});
test("horchen -> horch", function() {deepEqual( Stem("horchen"), "horch");});
test("horcht -> horcht", function() {deepEqual( Stem("horcht"), "horcht");});
test("horchte -> horcht", function() {deepEqual( Stem("horchte"), "horcht");});
test("horchten -> horcht", function() {deepEqual( Stem("horchten"), "horcht");});
test("höre -> hor", function() {deepEqual( Stem("höre"), "hor");});
test("horeb -> horeb", function() {deepEqual( Stem("horeb"), "horeb");});
test("hören -> hor", function() {deepEqual( Stem("hören"), "hor");});
test("hörend -> horend", function() {deepEqual( Stem("hörend"), "horend");});
test("hörende -> horend", function() {deepEqual( Stem("hörende"), "horend");});
test("hörer -> hor", function() {deepEqual( Stem("hörer"), "hor");});
test("hörerbrief -> horerbrief", function() {deepEqual( Stem("hörerbrief"), "horerbrief");});
test("hörerin -> horerin", function() {deepEqual( Stem("hörerin"), "horerin");});
test("hörest -> hor", function() {deepEqual( Stem("hörest"), "hor");});
test("höret -> horet", function() {deepEqual( Stem("höret"), "horet");});
test("hörfolge -> horfolg", function() {deepEqual( Stem("hörfolge"), "horfolg");});
test("horizonte -> horizont", function() {deepEqual( Stem("horizonte"), "horizont");});
test("horlinger -> horling", function() {deepEqual( Stem("horlinger"), "horling");});
test("horn -> horn", function() {deepEqual( Stem("horn"), "horn");});
test("hornbläsern -> hornblas", function() {deepEqual( Stem("hornbläsern"), "hornblas");});
test("hörnchen -> hornch", function() {deepEqual( Stem("hörnchen"), "hornch");});
test("hörner -> horn", function() {deepEqual( Stem("hörner"), "horn");});
test("hörnern -> horn", function() {deepEqual( Stem("hörnern"), "horn");});
test("hornstriegeln -> hornstriegeln", function() {deepEqual( Stem("hornstriegeln"), "hornstriegeln");});
test("horon -> horon", function() {deepEqual( Stem("horon"), "horon");});
test("hörrohr -> horrohr", function() {deepEqual( Stem("hörrohr"), "horrohr");});
test("hörspielabteilung -> horspielabteil", function() {deepEqual( Stem("hörspielabteilung"), "horspielabteil");});
test("horst -> horst", function() {deepEqual( Stem("horst"), "horst");});
test("hörst -> horst", function() {deepEqual( Stem("hörst"), "horst");});
test("horste -> horst", function() {deepEqual( Stem("horste"), "horst");});
test("hört -> hort", function() {deepEqual( Stem("hört"), "hort");});
test("hörte -> hort", function() {deepEqual( Stem("hörte"), "hort");});
test("hörten -> hort", function() {deepEqual( Stem("hörten"), "hort");});
test("hörtest -> hort", function() {deepEqual( Stem("hörtest"), "hort");});
test("hos -> hos", function() {deepEqual( Stem("hos"), "hos");});
test("hosas -> hosas", function() {deepEqual( Stem("hosas"), "hosas");});
test("hose -> hos", function() {deepEqual( Stem("hose"), "hos");});
test("hosen -> hos", function() {deepEqual( Stem("hosen"), "hos");});
test("hosengürtel -> hosengurtel", function() {deepEqual( Stem("hosengürtel"), "hosengurtel");});
test("hosenträgern -> hosentrag", function() {deepEqual( Stem("hosenträgern"), "hosentrag");});
test("hosianna -> hosianna", function() {deepEqual( Stem("hosianna"), "hosianna");});
test("hospiz -> hospiz", function() {deepEqual( Stem("hospiz"), "hospiz");});
test("hospizgruppe -> hospizgrupp", function() {deepEqual( Stem("hospizgruppe"), "hospizgrupp");});
test("hotel -> hotel", function() {deepEqual( Stem("hotel"), "hotel");});
test("hoteltür -> hoteltur", function() {deepEqual( Stem("hoteltür"), "hoteltur");});
test("hub -> hub", function() {deepEqual( Stem("hub"), "hub");});
test("hüben -> hub", function() {deepEqual( Stem("hüben"), "hub");});
test("huber -> hub", function() {deepEqual( Stem("huber"), "hub");});
test("hubertus -> hubertus", function() {deepEqual( Stem("hubertus"), "hubertus");});
test("hubertusjüngern -> hubertusjung", function() {deepEqual( Stem("hubertusjüngern"), "hubertusjung");});
test("hübsch -> hubsch", function() {deepEqual( Stem("hübsch"), "hubsch");});
test("hübsche -> hubsch", function() {deepEqual( Stem("hübsche"), "hubsch");});
test("hübschen -> hubsch", function() {deepEqual( Stem("hübschen"), "hubsch");});
test("hübscher -> hubsch", function() {deepEqual( Stem("hübscher"), "hubsch");});
test("hübsches -> hubsch", function() {deepEqual( Stem("hübsches"), "hubsch");});
test("huckepack -> huckepack", function() {deepEqual( Stem("huckepack"), "huckepack");});
test("huckige -> huckig", function() {deepEqual( Stem("huckige"), "huckig");});
test("hudelkopf -> hudelkopf", function() {deepEqual( Stem("hudelkopf"), "hudelkopf");});
test("hudelvölkchen -> hudelvolkch", function() {deepEqual( Stem("hudelvölkchen"), "hudelvolkch");});
test("huf -> huf", function() {deepEqual( Stem("huf"), "huf");});
test("hufe -> huf", function() {deepEqual( Stem("hufe"), "huf");});
test("hufeisentreppe -> hufeisentrepp", function() {deepEqual( Stem("hufeisentreppe"), "hufeisentrepp");});
test("hufen -> huf", function() {deepEqual( Stem("hufen"), "huf");});
test("hüfte -> huft", function() {deepEqual( Stem("hüfte"), "huft");});
test("hüften -> huft", function() {deepEqual( Stem("hüften"), "huft");});
test("hügel -> hugel", function() {deepEqual( Stem("hügel"), "hugel");});
test("hügelchen -> hugelch", function() {deepEqual( Stem("hügelchen"), "hugelch");});
test("hügeligen -> hugel", function() {deepEqual( Stem("hügeligen"), "hugel");});
test("hügeliges -> hugel", function() {deepEqual( Stem("hügeliges"), "hugel");});
test("hügeln -> hugeln", function() {deepEqual( Stem("hügeln"), "hugeln");});
test("hügels -> hugel", function() {deepEqual( Stem("hügels"), "hugel");});
test("huglieme -> hugliem", function() {deepEqual( Stem("huglieme"), "hugliem");});
test("huhn -> huhn", function() {deepEqual( Stem("huhn"), "huhn");});
test("hühner -> huhn", function() {deepEqual( Stem("hühner"), "huhn");});
test("hühnerjagd -> huhnerjagd", function() {deepEqual( Stem("hühnerjagd"), "huhnerjagd");});
test("hühnern -> huhn", function() {deepEqual( Stem("hühnern"), "huhn");});
test("hühnerschwärmen -> huhnerschwarm", function() {deepEqual( Stem("hühnerschwärmen"), "huhnerschwarm");});
test("huhnes -> huhn", function() {deepEqual( Stem("huhnes"), "huhn");});
test("huhu -> huhu", function() {deepEqual( Stem("huhu"), "huhu");});
test("hui -> hui", function() {deepEqual( Stem("hui"), "hui");});
test("huld -> huld", function() {deepEqual( Stem("huld"), "huld");});
test("huldigten -> huldigt", function() {deepEqual( Stem("huldigten"), "huldigt");});
test("huldreich -> huldreich", function() {deepEqual( Stem("huldreich"), "huldreich");});
test("huldreichen -> huldreich", function() {deepEqual( Stem("huldreichen"), "huldreich");});
test("hülfe -> hulf", function() {deepEqual( Stem("hülfe"), "hulf");});
test("hülflos -> hulflos", function() {deepEqual( Stem("hülflos"), "hulflos");});
test("hülle -> hull", function() {deepEqual( Stem("hülle"), "hull");});
test("hüllen -> hull", function() {deepEqual( Stem("hüllen"), "hull");});
test("hüllte -> hullt", function() {deepEqual( Stem("hüllte"), "hullt");});
test("hülse -> huls", function() {deepEqual( Stem("hülse"), "huls");});
test("humane -> human", function() {deepEqual( Stem("humane"), "human");});
test("humanen -> human", function() {deepEqual( Stem("humanen"), "human");});
test("humanismus -> humanismus", function() {deepEqual( Stem("humanismus"), "humanismus");});
test("humanistischen -> humanist", function() {deepEqual( Stem("humanistischen"), "humanist");});
test("humanitäre -> humanitar", function() {deepEqual( Stem("humanitäre"), "humanitar");});
test("humanitären -> humanitar", function() {deepEqual( Stem("humanitären"), "humanitar");});
test("hume -> hum", function() {deepEqual( Stem("hume"), "hum");});
test("humes -> hum", function() {deepEqual( Stem("humes"), "hum");});
test("humische -> humisch", function() {deepEqual( Stem("humische"), "humisch");});
test("humkoke -> humkok", function() {deepEqual( Stem("humkoke"), "humkok");});
test("hummeln -> hummeln", function() {deepEqual( Stem("hummeln"), "hummeln");});
test("humor -> humor", function() {deepEqual( Stem("humor"), "humor");});
test("humorlose -> humorlos", function() {deepEqual( Stem("humorlose"), "humorlos");});
test("humus -> humus", function() {deepEqual( Stem("humus"), "humus");});
test("hund -> hund", function() {deepEqual( Stem("hund"), "hund");});
test("hunde -> hund", function() {deepEqual( Stem("hunde"), "hund");});
test("hunden -> hund", function() {deepEqual( Stem("hunden"), "hund");});
test("hunderl -> hunderl", function() {deepEqual( Stem("hunderl"), "hunderl");});
test("hundert -> hundert", function() {deepEqual( Stem("hundert"), "hundert");});
test("hundertdreiunddreissig -> hundertdreiunddreiss", function() {deepEqual( Stem("hundertdreiunddreissig"), "hundertdreiunddreiss");});
test("hundertdreiunddreißig -> hundertdreiunddreiss", function() {deepEqual( Stem("hundertdreiunddreißig"), "hundertdreiunddreiss");});
test("hunderte -> hundert", function() {deepEqual( Stem("hunderte"), "hundert");});
test("hunderten -> hundert", function() {deepEqual( Stem("hunderten"), "hundert");});
test("hunderterlei -> hunderterlei", function() {deepEqual( Stem("hunderterlei"), "hunderterlei");});
test("hundertfach -> hundertfach", function() {deepEqual( Stem("hundertfach"), "hundertfach");});
test("hundertfacher -> hundertfach", function() {deepEqual( Stem("hundertfacher"), "hundertfach");});
test("hundertfältig -> hundertfalt", function() {deepEqual( Stem("hundertfältig"), "hundertfalt");});
test("hundertmal -> hundertmal", function() {deepEqual( Stem("hundertmal"), "hundertmal");});
test("hundertsiebenunddreissig -> hundertsiebenunddreiss", function() {deepEqual( Stem("hundertsiebenunddreissig"), "hundertsiebenunddreiss");});
test("hundertsiebenunddreißig -> hundertsiebenunddreiss", function() {deepEqual( Stem("hundertsiebenunddreißig"), "hundertsiebenunddreiss");});
test("hundertsten -> hundert", function() {deepEqual( Stem("hundertsten"), "hundert");});
test("hundertstimmigem -> hundertstimm", function() {deepEqual( Stem("hundertstimmigem"), "hundertstimm");});
test("hunderttausend -> hunderttaus", function() {deepEqual( Stem("hunderttausend"), "hunderttaus");});
test("hunderttausende -> hunderttaus", function() {deepEqual( Stem("hunderttausende"), "hunderttaus");});
test("hundertundfünfzig -> hundertundfunfz", function() {deepEqual( Stem("hundertundfünfzig"), "hundertundfunfz");});
test("hundertvierundvierzig -> hundertvierundvierz", function() {deepEqual( Stem("hundertvierundvierzig"), "hundertvierundvierz");});
test("hundertvierzig -> hundertvierz", function() {deepEqual( Stem("hundertvierzig"), "hundertvierz");});
test("hundertzwanzig -> hundertzwanz", function() {deepEqual( Stem("hundertzwanzig"), "hundertzwanz");});
test("hundes -> hund", function() {deepEqual( Stem("hundes"), "hund");});
test("hundeseele -> hundeseel", function() {deepEqual( Stem("hundeseele"), "hundeseel");});
test("hundl -> hundl", function() {deepEqual( Stem("hundl"), "hundl");});
test("hündlein -> hundlein", function() {deepEqual( Stem("hündlein"), "hundlein");});
test("hundsfott -> hundsfott", function() {deepEqual( Stem("hundsfott"), "hundsfott");});
test("hundsseele -> hundsseel", function() {deepEqual( Stem("hundsseele"), "hundsseel");});
test("hunger -> hung", function() {deepEqual( Stem("hunger"), "hung");});
test("hungerlohn -> hungerlohn", function() {deepEqual( Stem("hungerlohn"), "hungerlohn");});
test("hungern -> hung", function() {deepEqual( Stem("hungern"), "hung");});
test("hungers -> hung", function() {deepEqual( Stem("hungers"), "hung");});
test("hungerte -> hungert", function() {deepEqual( Stem("hungerte"), "hungert");});
test("hungrig -> hungrig", function() {deepEqual( Stem("hungrig"), "hungrig");});
test("hungrige -> hungrig", function() {deepEqual( Stem("hungrige"), "hungrig");});
test("hungrigen -> hungrig", function() {deepEqual( Stem("hungrigen"), "hungrig");});
test("hungriger -> hungrig", function() {deepEqual( Stem("hungriger"), "hungrig");});
test("hüpfende -> hupfend", function() {deepEqual( Stem("hüpfende"), "hupfend");});
test("hüpfenden -> hupfend", function() {deepEqual( Stem("hüpfenden"), "hupfend");});
test("hüpfte -> hupft", function() {deepEqual( Stem("hüpfte"), "hupft");});
test("hupften -> hupft", function() {deepEqual( Stem("hupften"), "hupft");});
test("hüpften -> hupft", function() {deepEqual( Stem("hüpften"), "hupft");});
test("hupschi -> hupschi", function() {deepEqual( Stem("hupschi"), "hupschi");});
test("hürde -> hurd", function() {deepEqual( Stem("hürde"), "hurd");});
test("hürden -> hurd", function() {deepEqual( Stem("hürden"), "hurd");});
test("hure -> hur", function() {deepEqual( Stem("hure"), "hur");});
test("hurend -> hurend", function() {deepEqual( Stem("hurend"), "hurend");});
test("hurerei -> hurerei", function() {deepEqual( Stem("hurerei"), "hurerei");});
test("hurereien -> hurerei", function() {deepEqual( Stem("hurereien"), "hurerei");});
test("hurra -> hurra", function() {deepEqual( Stem("hurra"), "hurra");});
test("hurtig -> hurtig", function() {deepEqual( Stem("hurtig"), "hurtig");});
test("husaren -> husar", function() {deepEqual( Stem("husaren"), "husar");});
test("husch -> husch", function() {deepEqual( Stem("husch"), "husch");});
test("huschen -> husch", function() {deepEqual( Stem("huschen"), "husch");});
test("huschte -> huscht", function() {deepEqual( Stem("huschte"), "huscht");});
test("huschten -> huscht", function() {deepEqual( Stem("huschten"), "huscht");});
test("hüseyin -> huseyin", function() {deepEqual( Stem("hüseyin"), "huseyin");});
test("hüstelte -> hustelt", function() {deepEqual( Stem("hüstelte"), "hustelt");});
test("husten -> hust", function() {deepEqual( Stem("husten"), "hust");});
test("hut -> hut", function() {deepEqual( Stem("hut"), "hut");});
test("hüt -> hut", function() {deepEqual( Stem("hüt"), "hut");});
test("hütchen -> hutch", function() {deepEqual( Stem("hütchen"), "hutch");});
test("hute -> hut", function() {deepEqual( Stem("hute"), "hut");});
test("hüte -> hut", function() {deepEqual( Stem("hüte"), "hut");});
test("hüten -> hut", function() {deepEqual( Stem("hüten"), "hut");});
test("hüter -> hut", function() {deepEqual( Stem("hüter"), "hut");});
test("hüterbub -> huterbub", function() {deepEqual( Stem("hüterbub"), "huterbub");});
test("hütet -> hutet", function() {deepEqual( Stem("hütet"), "hutet");});
test("hütete -> hutet", function() {deepEqual( Stem("hütete"), "hutet");});
test("hüteten -> hutet", function() {deepEqual( Stem("hüteten"), "hutet");});
test("hütl -> hutl", function() {deepEqual( Stem("hütl"), "hutl");});
test("hütte -> hutt", function() {deepEqual( Stem("hütte"), "hutt");});
test("hütten -> hutt", function() {deepEqual( Stem("hütten"), "hutt");});
test("hüttenfest -> huttenf", function() {deepEqual( Stem("hüttenfest"), "huttenf");});
test("huwiler -> huwil", function() {deepEqual( Stem("huwiler"), "huwil");});
test("hv -> hv", function() {deepEqual( Stem("hv"), "hv");});
test("hyazinth -> hyazinth", function() {deepEqual( Stem("hyazinth"), "hyazinth");});
test("hyazinthfarbe -> hyazinthfarb", function() {deepEqual( Stem("hyazinthfarbe"), "hyazinthfarb");});
test("hypochondrischen -> hypochondr", function() {deepEqual( Stem("hypochondrischen"), "hypochondr");});
test("hypothekschulden -> hypothekschuld", function() {deepEqual( Stem("hypothekschulden"), "hypothekschuld");});
test("hypothese -> hypothes", function() {deepEqual( Stem("hypothese"), "hypothes");});
test("hypothesen -> hypothes", function() {deepEqual( Stem("hypothesen"), "hypothes");});
test("hypothetische -> hypothet", function() {deepEqual( Stem("hypothetische"), "hypothet");});
test("hysterisch -> hyster", function() {deepEqual( Stem("hysterisch"), "hyster");});
test("i -> i", function() {deepEqual( Stem("i"), "i");});
test("iang -> iang", function() {deepEqual( Stem("iang"), "iang");});
test("ich -> ich", function() {deepEqual( Stem("ich"), "ich");});
test("ichs -> ich", function() {deepEqual( Stem("ichs"), "ich");});
test("idea -> idea", function() {deepEqual( Stem("idea"), "idea");});
test("ideal -> ideal", function() {deepEqual( Stem("ideal"), "ideal");});
test("ideale -> ideal", function() {deepEqual( Stem("ideale"), "ideal");});
test("idealisch -> ideal", function() {deepEqual( Stem("idealisch"), "ideal");});
test("idealischen -> ideal", function() {deepEqual( Stem("idealischen"), "ideal");});
test("idee -> ide", function() {deepEqual( Stem("idee"), "ide");});
test("ideen -> ide", function() {deepEqual( Stem("ideen"), "ide");});
test("ideenkiste -> ideenkist", function() {deepEqual( Stem("ideenkiste"), "ideenkist");});
test("ideenulrich -> ideenulrich", function() {deepEqual( Stem("ideenulrich"), "ideenulrich");});
test("identische -> ident", function() {deepEqual( Stem("identische"), "ident");});
test("identität -> identitat", function() {deepEqual( Stem("identität"), "identitat");});
test("identitizierung -> identitizier", function() {deepEqual( Stem("identitizierung"), "identitizier");});
test("ideologisierung -> ideologisier", function() {deepEqual( Stem("ideologisierung"), "ideologisier");});
test("idion -> idion", function() {deepEqual( Stem("idion"), "idion");});
test("idioten -> idiot", function() {deepEqual( Stem("idioten"), "idiot");});
test("ieh -> ieh", function() {deepEqual( Stem("ieh"), "ieh");});
test("ierte -> iert", function() {deepEqual( Stem("ierte"), "iert");});
test("igel -> igel", function() {deepEqual( Stem("igel"), "igel");});
test("igelbürste -> igelburst", function() {deepEqual( Stem("igelbürste"), "igelburst");});
test("ignorieren -> ignori", function() {deepEqual( Stem("ignorieren"), "ignori");});
test("ihd -> ihd", function() {deepEqual( Stem("ihd"), "ihd");});
test("ihm -> ihm", function() {deepEqual( Stem("ihm"), "ihm");});
test("ihn -> ihn", function() {deepEqual( Stem("ihn"), "ihn");});
test("ihnen -> ihn", function() {deepEqual( Stem("ihnen"), "ihn");});
test("ihr -> ihr", function() {deepEqual( Stem("ihr"), "ihr");});
test("ihre -> ihr", function() {deepEqual( Stem("ihre"), "ihr");});
test("ihrem -> ihr", function() {deepEqual( Stem("ihrem"), "ihr");});
test("ihren -> ihr", function() {deepEqual( Stem("ihren"), "ihr");});
test("ihrer -> ihr", function() {deepEqual( Stem("ihrer"), "ihr");});
test("ihres -> ihr", function() {deepEqual( Stem("ihres"), "ihr");});
test("ihrethalben -> ihrethalb", function() {deepEqual( Stem("ihrethalben"), "ihrethalb");});
test("ihretwegen -> ihretweg", function() {deepEqual( Stem("ihretwegen"), "ihretweg");});
test("ihrige -> ihrig", function() {deepEqual( Stem("ihrige"), "ihrig");});
test("ihrigen -> ihrig", function() {deepEqual( Stem("ihrigen"), "ihrig");});
test("ihro -> ihro", function() {deepEqual( Stem("ihro"), "ihro");});
test("ii -> ii", function() {deepEqual( Stem("ii"), "ii");});
test("iii -> iii", function() {deepEqual( Stem("iii"), "iii");});
test("ikea -> ikea", function() {deepEqual( Stem("ikea"), "ikea");});
test("illa -> illa", function() {deepEqual( Stem("illa"), "illa");});
test("ille -> ill", function() {deepEqual( Stem("ille"), "ill");});
test("illegal -> illegal", function() {deepEqual( Stem("illegal"), "illegal");});
test("illegalen -> illegal", function() {deepEqual( Stem("illegalen"), "illegal");});
test("illud -> illud", function() {deepEqual( Stem("illud"), "illud");});
test("illumination -> illumination", function() {deepEqual( Stem("illumination"), "illumination");});
test("illusion -> illusion", function() {deepEqual( Stem("illusion"), "illusion");});
test("illusorisch -> illusor", function() {deepEqual( Stem("illusorisch"), "illusor");});
test("im -> im", function() {deepEqual( Stem("im"), "im");});
test("image -> imag", function() {deepEqual( Stem("image"), "imag");});
test("imago -> imago", function() {deepEqual( Stem("imago"), "imago");});
test("imbiss -> imbiss", function() {deepEqual( Stem("imbiss"), "imbiss");});
test("imgleichen -> imgleich", function() {deepEqual( Stem("imgleichen"), "imgleich");});
test("immanent -> immanent", function() {deepEqual( Stem("immanent"), "immanent");});
test("immanuel -> immanuel", function() {deepEqual( Stem("immanuel"), "immanuel");});
test("immaterielle -> immateriell", function() {deepEqual( Stem("immaterielle"), "immateriell");});
test("immateriellen -> immateriell", function() {deepEqual( Stem("immateriellen"), "immateriell");});
test("immenstand -> immenstand", function() {deepEqual( Stem("immenstand"), "immenstand");});
test("immer -> imm", function() {deepEqual( Stem("immer"), "imm");});
test("immerdar -> immerdar", function() {deepEqual( Stem("immerdar"), "immerdar");});
test("immerfort -> immerfort", function() {deepEqual( Stem("immerfort"), "immerfort");});
test("immergrünen -> immergrun", function() {deepEqual( Stem("immergrünen"), "immergrun");});
test("immerhin -> immerhin", function() {deepEqual( Stem("immerhin"), "immerhin");});
test("immerwährend -> immerwahr", function() {deepEqual( Stem("immerwährend"), "immerwahr");});
test("immerwährende -> immerwahr", function() {deepEqual( Stem("immerwährende"), "immerwahr");});
test("immerwährendes -> immerwahr", function() {deepEqual( Stem("immerwährendes"), "immerwahr");});
test("immerzu -> immerzu", function() {deepEqual( Stem("immerzu"), "immerzu");});
test("imogen -> imog", function() {deepEqual( Stem("imogen"), "imog");});
test("imperativ -> imperativ", function() {deepEqual( Stem("imperativ"), "imperativ");});
test("imperative -> imperativ", function() {deepEqual( Stem("imperative"), "imperativ");});
test("imperativen -> imperativ", function() {deepEqual( Stem("imperativen"), "imperativ");});
test("imperativs -> imperativs", function() {deepEqual( Stem("imperativs"), "imperativs");});
test("impressum -> impressum", function() {deepEqual( Stem("impressum"), "impressum");});
test("impulse -> impuls", function() {deepEqual( Stem("impulse"), "impuls");});
test("imstande -> imstand", function() {deepEqual( Stem("imstande"), "imstand");});
test("in -> in", function() {deepEqual( Stem("in"), "in");});
test("inan -> inan", function() {deepEqual( Stem("inan"), "inan");});
test("inbegriff -> inbegriff", function() {deepEqual( Stem("inbegriff"), "inbegriff");});
test("inbesondere -> inbesond", function() {deepEqual( Stem("inbesondere"), "inbesond");});
test("inbrunst -> inbrun", function() {deepEqual( Stem("inbrunst"), "inbrun");});
test("inbrünstig -> inbrunst", function() {deepEqual( Stem("inbrünstig"), "inbrunst");});
test("indem -> ind", function() {deepEqual( Stem("indem"), "ind");});
test("indes -> ind", function() {deepEqual( Stem("indes"), "ind");});
test("indessen -> indess", function() {deepEqual( Stem("indessen"), "indess");});
test("indianer -> indian", function() {deepEqual( Stem("indianer"), "indian");});
test("indie -> indi", function() {deepEqual( Stem("indie"), "indi");});
test("indien -> indi", function() {deepEqual( Stem("indien"), "indi");});
test("indiennekleid -> indiennekleid", function() {deepEqual( Stem("indiennekleid"), "indiennekleid");});
test("indierinnen -> indierinn", function() {deepEqual( Stem("indierinnen"), "indierinn");});
test("indifferent -> indifferent", function() {deepEqual( Stem("indifferent"), "indifferent");});
test("indirekt -> indirekt", function() {deepEqual( Stem("indirekt"), "indirekt");});
test("indischen -> indisch", function() {deepEqual( Stem("indischen"), "indisch");});
test("indobritischen -> indobrit", function() {deepEqual( Stem("indobritischen"), "indobrit");});
test("indoles -> indol", function() {deepEqual( Stem("indoles"), "indol");});
test("indulgent -> indulgent", function() {deepEqual( Stem("indulgent"), "indulgent");});
test("industrie -> industri", function() {deepEqual( Stem("industrie"), "industri");});
test("ineinander -> ineinand", function() {deepEqual( Stem("ineinander"), "ineinand");});
test("ineinandergefahren -> ineinandergefahr", function() {deepEqual( Stem("ineinandergefahren"), "ineinandergefahr");});
test("inernet -> inernet", function() {deepEqual( Stem("inernet"), "inernet");});
test("infam -> infam", function() {deepEqual( Stem("infam"), "infam");});
test("infanteriegewehr -> infanteriegewehr", function() {deepEqual( Stem("infanteriegewehr"), "infanteriegewehr");});
test("infanteriekaserne -> infanteriekasern", function() {deepEqual( Stem("infanteriekaserne"), "infanteriekasern");});
test("inferiore -> inferior", function() {deepEqual( Stem("inferiore"), "inferior");});
test("inferiorität -> inferioritat", function() {deepEqual( Stem("inferiorität"), "inferioritat");});
test("info -> info", function() {deepEqual( Stem("info"), "info");});
test("infolge -> infolg", function() {deepEqual( Stem("infolge"), "infolg");});
test("infolgedessen -> infolgedess", function() {deepEqual( Stem("infolgedessen"), "infolgedess");});
test("information -> information", function() {deepEqual( Stem("information"), "information");});
test("informationen -> information", function() {deepEqual( Stem("informationen"), "information");});
test("informationsbeauftragte -> informationsbeauftragt", function() {deepEqual( Stem("informationsbeauftragte"), "informationsbeauftragt");});
test("informieren -> informi", function() {deepEqual( Stem("informieren"), "informi");});
test("informiert -> informiert", function() {deepEqual( Stem("informiert"), "informiert");});
test("infos -> infos", function() {deepEqual( Stem("infos"), "infos");});
test("ingenio -> ingenio", function() {deepEqual( Stem("ingenio"), "ingenio");});
test("ingrimm -> ingrimm", function() {deepEqual( Stem("ingrimm"), "ingrimm");});
test("ingwer -> ingw", function() {deepEqual( Stem("ingwer"), "ingw");});
test("inhaber -> inhab", function() {deepEqual( Stem("inhaber"), "inhab");});
test("inhalt -> inhalt", function() {deepEqual( Stem("inhalt"), "inhalt");});
test("inhalte -> inhalt", function() {deepEqual( Stem("inhalte"), "inhalt");});
test("inhaltlich -> inhalt", function() {deepEqual( Stem("inhaltlich"), "inhalt");});
test("inhalts -> inhalt", function() {deepEqual( Stem("inhalts"), "inhalt");});
test("inhaltsverzeichnissen -> inhaltsverzeichnis", function() {deepEqual( Stem("inhaltsverzeichnissen"), "inhaltsverzeichnis");});
test("initiative -> initiativ", function() {deepEqual( Stem("initiative"), "initiativ");});
test("inland -> inland", function() {deepEqual( Stem("inland"), "inland");});
test("inländischen -> inland", function() {deepEqual( Stem("inländischen"), "inland");});
test("inlandsarbeit -> inlandsarbeit", function() {deepEqual( Stem("inlandsarbeit"), "inlandsarbeit");});
test("inmitten -> inmitt", function() {deepEqual( Stem("inmitten"), "inmitt");});
test("inne -> inn", function() {deepEqual( Stem("inne"), "inn");});
test("innegewordene -> innegeword", function() {deepEqual( Stem("innegewordene"), "innegeword");});
test("innegewordenen -> innegeword", function() {deepEqual( Stem("innegewordenen"), "innegeword");});
test("innehalten -> innehalt", function() {deepEqual( Stem("innehalten"), "innehalt");});
test("innehat -> innehat", function() {deepEqual( Stem("innehat"), "innehat");});
test("innehielt -> innehielt", function() {deepEqual( Stem("innehielt"), "innehielt");});
test("innehielten -> innehielt", function() {deepEqual( Stem("innehielten"), "innehielt");});
test("innen -> inn", function() {deepEqual( Stem("innen"), "inn");});
test("innere -> inn", function() {deepEqual( Stem("innere"), "inn");});
test("innerem -> inn", function() {deepEqual( Stem("innerem"), "inn");});
test("inneren -> inn", function() {deepEqual( Stem("inneren"), "inn");});
test("innerer -> inn", function() {deepEqual( Stem("innerer"), "inn");});
test("inneres -> inn", function() {deepEqual( Stem("inneres"), "inn");});
test("innerhalb -> innerhalb", function() {deepEqual( Stem("innerhalb"), "innerhalb");});
test("innerlich -> inn", function() {deepEqual( Stem("innerlich"), "inn");});
test("innerliche -> inn", function() {deepEqual( Stem("innerliche"), "inn");});
test("innerlichen -> inn", function() {deepEqual( Stem("innerlichen"), "inn");});
test("innerlicher -> inn", function() {deepEqual( Stem("innerlicher"), "inn");});
test("innerlichere -> inn", function() {deepEqual( Stem("innerlichere"), "inn");});
test("innerlicheres -> inn", function() {deepEqual( Stem("innerlicheres"), "inn");});
test("innerliches -> inn", function() {deepEqual( Stem("innerliches"), "inn");});
test("innern -> inn", function() {deepEqual( Stem("innern"), "inn");});
test("innerste -> innerst", function() {deepEqual( Stem("innerste"), "innerst");});
test("innerstem -> innerst", function() {deepEqual( Stem("innerstem"), "innerst");});
test("innersten -> innerst", function() {deepEqual( Stem("innersten"), "innerst");});
test("innerster -> innerst", function() {deepEqual( Stem("innerster"), "innerst");});
test("innerstes -> innerst", function() {deepEqual( Stem("innerstes"), "innerst");});
test("innewerden -> innewerd", function() {deepEqual( Stem("innewerden"), "innewerd");});
test("innewerdend -> innewerd", function() {deepEqual( Stem("innewerdend"), "innewerd");});
test("innewerdende -> innewerd", function() {deepEqual( Stem("innewerdende"), "innewerd");});
test("innewerdens -> innewerd", function() {deepEqual( Stem("innewerdens"), "innewerd");});
test("innewerdungen -> innewerd", function() {deepEqual( Stem("innewerdungen"), "innewerd");});
test("innewohnen -> innewohn", function() {deepEqual( Stem("innewohnen"), "innewohn");});
test("innewohnend -> innewohn", function() {deepEqual( Stem("innewohnend"), "innewohn");});
test("innewohnt -> innewohnt", function() {deepEqual( Stem("innewohnt"), "innewohnt");});
test("innewohnte -> innewohnt", function() {deepEqual( Stem("innewohnte"), "innewohnt");});
test("innewurde -> innewurd", function() {deepEqual( Stem("innewurde"), "innewurd");});
test("innezuwerden -> innezuwerd", function() {deepEqual( Stem("innezuwerden"), "innezuwerd");});
test("innig -> innig", function() {deepEqual( Stem("innig"), "innig");});
test("innige -> innig", function() {deepEqual( Stem("innige"), "innig");});
test("innigen -> innig", function() {deepEqual( Stem("innigen"), "innig");});
test("inniger -> innig", function() {deepEqual( Stem("inniger"), "innig");});
test("innigere -> innig", function() {deepEqual( Stem("innigere"), "innig");});
test("innigkeit -> innig", function() {deepEqual( Stem("innigkeit"), "innig");});
test("inniglich -> innig", function() {deepEqual( Stem("inniglich"), "innig");});
test("innigsten -> innig", function() {deepEqual( Stem("innigsten"), "innig");});
test("inningst -> inning", function() {deepEqual( Stem("inningst"), "inning");});
test("innre -> innr", function() {deepEqual( Stem("innre"), "innr");});
test("ins -> ins", function() {deepEqual( Stem("ins"), "ins");});
test("insbesondere -> insbesond", function() {deepEqual( Stem("insbesondere"), "insbesond");});
test("insbesondereeine -> insbesondereein", function() {deepEqual( Stem("insbesondereeine"), "insbesondereein");});
test("insbesonders -> insbesond", function() {deepEqual( Stem("insbesonders"), "insbesond");});
test("inschrift -> inschrift", function() {deepEqual( Stem("inschrift"), "inschrift");});
test("insekt -> insekt", function() {deepEqual( Stem("insekt"), "insekt");});
test("insekten -> insekt", function() {deepEqual( Stem("insekten"), "insekt");});
test("insektenbefall -> insektenbefall", function() {deepEqual( Stem("insektenbefall"), "insektenbefall");});
test("insel -> insel", function() {deepEqual( Stem("insel"), "insel");});
test("inselgruppe -> inselgrupp", function() {deepEqual( Stem("inselgruppe"), "inselgrupp");});
test("inseln -> inseln", function() {deepEqual( Stem("inseln"), "inseln");});
test("inseratenkampagne -> inseratenkampagn", function() {deepEqual( Stem("inseratenkampagne"), "inseratenkampagn");});
test("inservit -> inservit", function() {deepEqual( Stem("inservit"), "inservit");});
test("insgeheim -> insgeheim", function() {deepEqual( Stem("insgeheim"), "insgeheim");});
test("insgesamt -> insgesamt", function() {deepEqual( Stem("insgesamt"), "insgesamt");});
test("insitam -> insitam", function() {deepEqual( Stem("insitam"), "insitam");});
test("insofern -> insof", function() {deepEqual( Stem("insofern"), "insof");});
test("insonderheit -> insond", function() {deepEqual( Stem("insonderheit"), "insond");});
test("insonderlich -> insond", function() {deepEqual( Stem("insonderlich"), "insond");});
test("insoweit -> insoweit", function() {deepEqual( Stem("insoweit"), "insoweit");});
test("inspiration -> inspiration", function() {deepEqual( Stem("inspiration"), "inspiration");});
test("instant -> instant", function() {deepEqual( Stem("instant"), "instant");});
test("instinkt -> instinkt", function() {deepEqual( Stem("instinkt"), "instinkt");});
test("instinkte -> instinkt", function() {deepEqual( Stem("instinkte"), "instinkt");});
test("instinkten -> instinkt", function() {deepEqual( Stem("instinkten"), "instinkt");});
test("instinktiv -> instinktiv", function() {deepEqual( Stem("instinktiv"), "instinktiv");});
test("institut -> institut", function() {deepEqual( Stem("institut"), "institut");});
test("institution -> institution", function() {deepEqual( Stem("institution"), "institution");});
test("institutionen -> institution", function() {deepEqual( Stem("institutionen"), "institution");});
test("instituts -> institut", function() {deepEqual( Stem("instituts"), "institut");});
test("instrument -> instrument", function() {deepEqual( Stem("instrument"), "instrument");});
test("instrumente -> instrument", function() {deepEqual( Stem("instrumente"), "instrument");});
test("instrumenten -> instrument", function() {deepEqual( Stem("instrumenten"), "instrument");});
test("inszenierte -> inszeniert", function() {deepEqual( Stem("inszenierte"), "inszeniert");});
test("integration -> integration", function() {deepEqual( Stem("integration"), "integration");});
test("intellecta -> intellecta", function() {deepEqual( Stem("intellecta"), "intellecta");});
test("intellectuales -> intellectual", function() {deepEqual( Stem("intellectuales"), "intellectual");});
test("intellektuell -> intellektuell", function() {deepEqual( Stem("intellektuell"), "intellektuell");});
test("intellektuelle -> intellektuell", function() {deepEqual( Stem("intellektuelle"), "intellektuell");});
test("intellektuellem -> intellektuell", function() {deepEqual( Stem("intellektuellem"), "intellektuell");});
test("intellektuellen -> intellektuell", function() {deepEqual( Stem("intellektuellen"), "intellektuell");});
test("intellektuelles -> intellektuell", function() {deepEqual( Stem("intellektuelles"), "intellektuell");});
test("intelligent -> intelligent", function() {deepEqual( Stem("intelligent"), "intelligent");});
test("intelligente -> intelligent", function() {deepEqual( Stem("intelligente"), "intelligent");});
test("intelligenz -> intelligenz", function() {deepEqual( Stem("intelligenz"), "intelligenz");});
test("intelligenzen -> intelligenz", function() {deepEqual( Stem("intelligenzen"), "intelligenz");});
test("intelligibele -> intelligibel", function() {deepEqual( Stem("intelligibele"), "intelligibel");});
test("intelligibelen -> intelligibel", function() {deepEqual( Stem("intelligibelen"), "intelligibel");});
test("intendant -> intendant", function() {deepEqual( Stem("intendant"), "intendant");});
test("intendanten -> intendant", function() {deepEqual( Stem("intendanten"), "intendant");});
test("intensivität -> intensivitat", function() {deepEqual( Stem("intensivität"), "intensivitat");});
test("inter -> int", function() {deepEqual( Stem("inter"), "int");});
test("interessant -> interessant", function() {deepEqual( Stem("interessant"), "interessant");});
test("interessante -> interessant", function() {deepEqual( Stem("interessante"), "interessant");});
test("interessanten -> interessant", function() {deepEqual( Stem("interessanten"), "interessant");});
test("interessanter -> interessant", function() {deepEqual( Stem("interessanter"), "interessant");});
test("interessanterweise -> interessanterweis", function() {deepEqual( Stem("interessanterweise"), "interessanterweis");});
test("interessantes -> interessant", function() {deepEqual( Stem("interessantes"), "interessant");});
test("interesse -> interess", function() {deepEqual( Stem("interesse"), "interess");});
test("interessen -> interess", function() {deepEqual( Stem("interessen"), "interess");});
test("interessenvertretung -> interessenvertret", function() {deepEqual( Stem("interessenvertretung"), "interessenvertret");});
test("interesses -> interess", function() {deepEqual( Stem("interesses"), "interess");});
test("interessieren -> interessi", function() {deepEqual( Stem("interessieren"), "interessi");});
test("interessiert -> interessiert", function() {deepEqual( Stem("interessiert"), "interessiert");});
test("interessierte -> interessiert", function() {deepEqual( Stem("interessierte"), "interessiert");});
test("interessierten -> interessiert", function() {deepEqual( Stem("interessierten"), "interessiert");});
test("interesssant -> interesssant", function() {deepEqual( Stem("interesssant"), "interesssant");});
test("interiori -> interiori", function() {deepEqual( Stem("interiori"), "interiori");});
test("interius -> interius", function() {deepEqual( Stem("interius"), "interius");});
test("intermezzo -> intermezzo", function() {deepEqual( Stem("intermezzo"), "intermezzo");});
test("international -> international", function() {deepEqual( Stem("international"), "international");});
test("internationale -> international", function() {deepEqual( Stem("internationale"), "international");});
test("internationalen -> international", function() {deepEqual( Stem("internationalen"), "international");});
test("internes -> intern", function() {deepEqual( Stem("internes"), "intern");});
test("internet -> internet", function() {deepEqual( Stem("internet"), "internet");});
test("internetdie -> internetdi", function() {deepEqual( Stem("internetdie"), "internetdi");});
test("interneteine -> internetein", function() {deepEqual( Stem("interneteine"), "internetein");});
test("internetseiten -> internetseit", function() {deepEqual( Stem("internetseiten"), "internetseit");});
test("internetsurfenam -> internetsurfenam", function() {deepEqual( Stem("internetsurfenam"), "internetsurfenam");});
test("interpretation -> interpretation", function() {deepEqual( Stem("interpretation"), "interpretation");});
test("interpretieren -> interpreti", function() {deepEqual( Stem("interpretieren"), "interpreti");});
test("interview -> interview", function() {deepEqual( Stem("interview"), "interview");});
test("intimeren -> intim", function() {deepEqual( Stem("intimeren"), "intim");});
test("inwendig -> inwend", function() {deepEqual( Stem("inwendig"), "inwend");});
test("inwendige -> inwend", function() {deepEqual( Stem("inwendige"), "inwend");});
test("inwendigem -> inwend", function() {deepEqual( Stem("inwendigem"), "inwend");});
test("inwendigen -> inwend", function() {deepEqual( Stem("inwendigen"), "inwend");});
test("inwendiger -> inwend", function() {deepEqual( Stem("inwendiger"), "inwend");});
test("inwendigere -> inwend", function() {deepEqual( Stem("inwendigere"), "inwend");});
test("inwendigerem -> inwend", function() {deepEqual( Stem("inwendigerem"), "inwend");});
test("inwendigeren -> inwend", function() {deepEqual( Stem("inwendigeren"), "inwend");});
test("inwendigeres -> inwend", function() {deepEqual( Stem("inwendigeres"), "inwend");});
test("inwendiges -> inwend", function() {deepEqual( Stem("inwendiges"), "inwend");});
test("inwendigst -> inwend", function() {deepEqual( Stem("inwendigst"), "inwend");});
test("inwendigste -> inwend", function() {deepEqual( Stem("inwendigste"), "inwend");});
test("inwendigsten -> inwend", function() {deepEqual( Stem("inwendigsten"), "inwend");});
test("inwendigster -> inwend", function() {deepEqual( Stem("inwendigster"), "inwend");});
test("inwieweit -> inwieweit", function() {deepEqual( Stem("inwieweit"), "inwieweit");});
test("inzichten -> inzicht", function() {deepEqual( Stem("inzichten"), "inzicht");});
test("inzwischen -> inzwisch", function() {deepEqual( Stem("inzwischen"), "inzwisch");});
test("ipso -> ipso", function() {deepEqual( Stem("ipso"), "ipso");});
test("irad -> irad", function() {deepEqual( Stem("irad"), "irad");});
test("irard -> irard", function() {deepEqual( Stem("irard"), "irard");});
test("irdene -> ird", function() {deepEqual( Stem("irdene"), "ird");});
test("irdenen -> ird", function() {deepEqual( Stem("irdenen"), "ird");});
test("irdisch -> irdisch", function() {deepEqual( Stem("irdisch"), "irdisch");});
test("irdische -> irdisch", function() {deepEqual( Stem("irdische"), "irdisch");});
test("irdischen -> irdisch", function() {deepEqual( Stem("irdischen"), "irdisch");});
test("irdisches -> irdisch", function() {deepEqual( Stem("irdisches"), "irdisch");});
test("irdisdien -> irdisdi", function() {deepEqual( Stem("irdisdien"), "irdisdi");});
test("irgend -> irgend", function() {deepEqual( Stem("irgend"), "irgend");});
test("irgendein -> irgendein", function() {deepEqual( Stem("irgendein"), "irgendein");});
test("irgendeine -> irgendein", function() {deepEqual( Stem("irgendeine"), "irgendein");});
test("irgendeinem -> irgendein", function() {deepEqual( Stem("irgendeinem"), "irgendein");});
test("irgendeinen -> irgendein", function() {deepEqual( Stem("irgendeinen"), "irgendein");});
test("irgendeiner -> irgendein", function() {deepEqual( Stem("irgendeiner"), "irgendein");});
test("irgendeines -> irgendein", function() {deepEqual( Stem("irgendeines"), "irgendein");});
test("irgendetwas -> irgendetwas", function() {deepEqual( Stem("irgendetwas"), "irgendetwas");});
test("irgendwann -> irgendwann", function() {deepEqual( Stem("irgendwann"), "irgendwann");});
test("irgendwelche -> irgendwelch", function() {deepEqual( Stem("irgendwelche"), "irgendwelch");});
test("irgendwelchen -> irgendwelch", function() {deepEqual( Stem("irgendwelchen"), "irgendwelch");});
test("irgendwelches -> irgendwelch", function() {deepEqual( Stem("irgendwelches"), "irgendwelch");});
test("irgendwie -> irgendwi", function() {deepEqual( Stem("irgendwie"), "irgendwi");});
test("irgendwo -> irgendwo", function() {deepEqual( Stem("irgendwo"), "irgendwo");});
test("irland -> irland", function() {deepEqual( Stem("irland"), "irland");});
test("irländischen -> irland", function() {deepEqual( Stem("irländischen"), "irland");});
test("irn -> irn", function() {deepEqual( Stem("irn"), "irn");});
test("ironie -> ironi", function() {deepEqual( Stem("ironie"), "ironi");});
test("ironisch -> iron", function() {deepEqual( Stem("ironisch"), "iron");});
test("ironischen -> iron", function() {deepEqual( Stem("ironischen"), "iron");});
test("irre -> irr", function() {deepEqual( Stem("irre"), "irr");});
test("irreführendem -> irrefuhr", function() {deepEqual( Stem("irreführendem"), "irrefuhr");});
test("irregeführt -> irregefuhrt", function() {deepEqual( Stem("irregeführt"), "irregefuhrt");});
test("irregeführte -> irregefuhrt", function() {deepEqual( Stem("irregeführte"), "irregefuhrt");});
test("irreleitend -> irreleit", function() {deepEqual( Stem("irreleitend"), "irreleit");});
test("irren -> irr", function() {deepEqual( Stem("irren"), "irr");});
test("irrenden -> irrend", function() {deepEqual( Stem("irrenden"), "irrend");});
test("irret -> irret", function() {deepEqual( Stem("irret"), "irret");});
test("irrgänger -> irrgang", function() {deepEqual( Stem("irrgänger"), "irrgang");});
test("irrlehre -> irrlehr", function() {deepEqual( Stem("irrlehre"), "irrlehr");});
test("irrlehren -> irrlehr", function() {deepEqual( Stem("irrlehren"), "irrlehr");});
test("irrlichter -> irrlicht", function() {deepEqual( Stem("irrlichter"), "irrlicht");});
test("irrlichterfischchen -> irrlichterfischch", function() {deepEqual( Stem("irrlichterfischchen"), "irrlichterfischch");});
test("irrsinnig -> irrsinn", function() {deepEqual( Stem("irrsinnig"), "irrsinn");});
test("irrt -> irrt", function() {deepEqual( Stem("irrt"), "irrt");});
test("irrte -> irrt", function() {deepEqual( Stem("irrte"), "irrt");});
test("irrten -> irrt", function() {deepEqual( Stem("irrten"), "irrt");});
test("irrtum -> irrtum", function() {deepEqual( Stem("irrtum"), "irrtum");});
test("irrtümer -> irrtum", function() {deepEqual( Stem("irrtümer"), "irrtum");});
test("irrtümern -> irrtum", function() {deepEqual( Stem("irrtümern"), "irrtum");});
test("irrwegen -> irrweg", function() {deepEqual( Stem("irrwegen"), "irrweg");});
test("is -> is", function() {deepEqual( Stem("is"), "is");});
test("isabelle -> isabell", function() {deepEqual( Stem("isabelle"), "isabell");});
test("isabellen -> isabell", function() {deepEqual( Stem("isabellen"), "isabell");});
test("isabellengespann -> isabellengespann", function() {deepEqual( Stem("isabellengespann"), "isabellengespann");});
test("isabellenpferden -> isabellenpferd", function() {deepEqual( Stem("isabellenpferden"), "isabellenpferd");});
test("isgard -> isgard", function() {deepEqual( Stem("isgard"), "isgard");});
test("isherwood -> isherwood", function() {deepEqual( Stem("isherwood"), "isherwood");});
test("ismail -> ismail", function() {deepEqual( Stem("ismail"), "ismail");});
test("isolation -> isolation", function() {deepEqual( Stem("isolation"), "isolation");});
test("isolationistische -> isolationist", function() {deepEqual( Stem("isolationistische"), "isolationist");});
test("isoliert -> isoliert", function() {deepEqual( Stem("isoliert"), "isoliert");});
test("israel -> israel", function() {deepEqual( Stem("israel"), "israel");});
test("israeliten -> israelit", function() {deepEqual( Stem("israeliten"), "israelit");});
test("israelitische -> israelit", function() {deepEqual( Stem("israelitische"), "israelit");});
test("israelitischen -> israelit", function() {deepEqual( Stem("israelitischen"), "israelit");});
test("israels -> israel", function() {deepEqual( Stem("israels"), "israel");});
test("iss -> iss", function() {deepEqual( Stem("iss"), "iss");});
test("issest -> iss", function() {deepEqual( Stem("issest"), "iss");});
test("isset -> isset", function() {deepEqual( Stem("isset"), "isset");});
test("isst -> isst", function() {deepEqual( Stem("isst"), "isst");});
test("ißt -> isst", function() {deepEqual( Stem("ißt"), "isst");});
test("ist -> ist", function() {deepEqual( Stem("ist"), "ist");});
test("istanbul -> istanbul", function() {deepEqual( Stem("istanbul"), "istanbul");});
test("istanbuler -> istanbul", function() {deepEqual( Stem("istanbuler"), "istanbul");});
test("ists -> ist", function() {deepEqual( Stem("ists"), "ist");});
test("italian -> italian", function() {deepEqual( Stem("italian"), "italian");});
test("italien -> itali", function() {deepEqual( Stem("italien"), "itali");});
test("italiener -> itali", function() {deepEqual( Stem("italiener"), "itali");});
test("italienisch -> italien", function() {deepEqual( Stem("italienisch"), "italien");});
test("italienische -> italien", function() {deepEqual( Stem("italienische"), "italien");});
test("italienischen -> italien", function() {deepEqual( Stem("italienischen"), "italien");});
test("italienisches -> italien", function() {deepEqual( Stem("italienisches"), "italien");});
test("item -> item", function() {deepEqual( Stem("item"), "item");});
test("ithamar -> ithamar", function() {deepEqual( Stem("ithamar"), "ithamar");});
test("iv -> iv", function() {deepEqual( Stem("iv"), "iv");});
test("ix -> ix", function() {deepEqual( Stem("ix"), "ix");});
test("izmir -> izmir", function() {deepEqual( Stem("izmir"), "izmir");});
test("j -> j", function() {deepEqual( Stem("j"), "j");});
test("ja -> ja", function() {deepEqual( Stem("ja"), "ja");});
test("jaaa -> jaaa", function() {deepEqual( Stem("jaaa"), "jaaa");});
test("jabal -> jabal", function() {deepEqual( Stem("jabal"), "jabal");});
test("jaccoud -> jaccoud", function() {deepEqual( Stem("jaccoud"), "jaccoud");});
test("jach -> jach", function() {deepEqual( Stem("jach"), "jach");});
test("jache -> jach", function() {deepEqual( Stem("jache"), "jach");});
test("jachen -> jach", function() {deepEqual( Stem("jachen"), "jach");});
test("jachenau -> jachenau", function() {deepEqual( Stem("jachenau"), "jachenau");});
test("jachenauer -> jachenau", function() {deepEqual( Stem("jachenauer"), "jachenau");});
test("jacher -> jach", function() {deepEqual( Stem("jacher"), "jach");});
test("jachin -> jachin", function() {deepEqual( Stem("jachin"), "jachin");});
test("jachsten -> jach", function() {deepEqual( Stem("jachsten"), "jach");});
test("jacke -> jack", function() {deepEqual( Stem("jacke"), "jack");});
test("jacobi -> jacobi", function() {deepEqual( Stem("jacobi"), "jacobi");});
test("jadwiga -> jadwiga", function() {deepEqual( Stem("jadwiga"), "jadwiga");});
test("jaels -> jael", function() {deepEqual( Stem("jaels"), "jael");});
test("jagd -> jagd", function() {deepEqual( Stem("jagd"), "jagd");});
test("jagdart -> jagdart", function() {deepEqual( Stem("jagdart"), "jagdart");});
test("jagdaufseher -> jagdaufseh", function() {deepEqual( Stem("jagdaufseher"), "jagdaufseh");});
test("jagdausflügen -> jagdausflug", function() {deepEqual( Stem("jagdausflügen"), "jagdausflug");});
test("jagdausrüstung -> jagdausrust", function() {deepEqual( Stem("jagdausrüstung"), "jagdausrust");});
test("jagdführer -> jagdfuhr", function() {deepEqual( Stem("jagdführer"), "jagdfuhr");});
test("jagdgast -> jagdgast", function() {deepEqual( Stem("jagdgast"), "jagdgast");});
test("jagdgebieten -> jagdgebiet", function() {deepEqual( Stem("jagdgebieten"), "jagdgebiet");});
test("jagdgehilf -> jagdgehilf", function() {deepEqual( Stem("jagdgehilf"), "jagdgehilf");});
test("jagdgehilfe -> jagdgehilf", function() {deepEqual( Stem("jagdgehilfe"), "jagdgehilf");});
test("jagdgehilfen -> jagdgehilf", function() {deepEqual( Stem("jagdgehilfen"), "jagdgehilf");});
test("jagdgeräte -> jagdgerat", function() {deepEqual( Stem("jagdgeräte"), "jagdgerat");});
test("jagdgeschichten -> jagdgeschicht", function() {deepEqual( Stem("jagdgeschichten"), "jagdgeschicht");});
test("jagdgrenze -> jagdgrenz", function() {deepEqual( Stem("jagdgrenze"), "jagdgrenz");});
test("jagdgrund -> jagdgrund", function() {deepEqual( Stem("jagdgrund"), "jagdgrund");});
test("jagdherr -> jagdherr", function() {deepEqual( Stem("jagdherr"), "jagdherr");});
test("jagdhütte -> jagdhutt", function() {deepEqual( Stem("jagdhütte"), "jagdhutt");});
test("jagdkarte -> jagdkart", function() {deepEqual( Stem("jagdkarte"), "jagdkart");});
test("jagdtrophäen -> jagdtropha", function() {deepEqual( Stem("jagdtrophäen"), "jagdtropha");});
test("jagdwagen -> jagdwag", function() {deepEqual( Stem("jagdwagen"), "jagdwag");});
test("jagen -> jag", function() {deepEqual( Stem("jagen"), "jag");});
test("jagend -> jagend", function() {deepEqual( Stem("jagend"), "jagend");});
test("jagender -> jagend", function() {deepEqual( Stem("jagender"), "jagend");});
test("jager -> jag", function() {deepEqual( Stem("jager"), "jag");});
test("jäger -> jag", function() {deepEqual( Stem("jäger"), "jag");});
test("jägerarbeit -> jagerarbeit", function() {deepEqual( Stem("jägerarbeit"), "jagerarbeit");});
test("jägerei -> jagerei", function() {deepEqual( Stem("jägerei"), "jagerei");});
test("jägerheim -> jagerheim", function() {deepEqual( Stem("jägerheim"), "jagerheim");});
test("jagerischen -> jager", function() {deepEqual( Stem("jagerischen"), "jager");});
test("jägerlatein -> jagerlatein", function() {deepEqual( Stem("jägerlatein"), "jagerlatein");});
test("jägerleben -> jagerleb", function() {deepEqual( Stem("jägerleben"), "jagerleb");});
test("jägermässigem -> jagermass", function() {deepEqual( Stem("jägermässigem"), "jagermass");});
test("jagern -> jag", function() {deepEqual( Stem("jagern"), "jag");});
test("jägern -> jag", function() {deepEqual( Stem("jägern"), "jag");});
test("jägerohren -> jagerohr", function() {deepEqual( Stem("jägerohren"), "jagerohr");});
test("jägerruhe -> jagerruh", function() {deepEqual( Stem("jägerruhe"), "jagerruh");});
test("jägers -> jag", function() {deepEqual( Stem("jägers"), "jag");});
test("jägersleute -> jagersleut", function() {deepEqual( Stem("jägersleute"), "jagersleut");});
test("jägersmann -> jagersmann", function() {deepEqual( Stem("jägersmann"), "jagersmann");});
test("jägersmanne -> jagersmann", function() {deepEqual( Stem("jägersmanne"), "jagersmann");});
test("jägersprache -> jagersprach", function() {deepEqual( Stem("jägersprache"), "jagersprach");});
test("jägerssohn -> jagerssohn", function() {deepEqual( Stem("jägerssohn"), "jagerssohn");});
test("jaget -> jaget", function() {deepEqual( Stem("jaget"), "jaget");});
test("jagt -> jagt", function() {deepEqual( Stem("jagt"), "jagt");});
test("jagte -> jagt", function() {deepEqual( Stem("jagte"), "jagt");});
test("jah -> jah", function() {deepEqual( Stem("jah"), "jah");});
test("jäh -> jah", function() {deepEqual( Stem("jäh"), "jah");});
test("jähen -> jah", function() {deepEqual( Stem("jähen"), "jah");});
test("jähes -> jah", function() {deepEqual( Stem("jähes"), "jah");});
test("jählings -> jahling", function() {deepEqual( Stem("jählings"), "jahling");});
test("jahr -> jahr", function() {deepEqual( Stem("jahr"), "jahr");});
test("jahraus -> jahraus", function() {deepEqual( Stem("jahraus"), "jahraus");});
test("jährchen -> jahrch", function() {deepEqual( Stem("jährchen"), "jahrch");});
test("jahre -> jahr", function() {deepEqual( Stem("jahre"), "jahr");});
test("jahrein -> jahrein", function() {deepEqual( Stem("jahrein"), "jahrein");});
test("jahrelang -> jahrelang", function() {deepEqual( Stem("jahrelang"), "jahrelang");});
test("jahren -> jahr", function() {deepEqual( Stem("jahren"), "jahr");});
test("jahres -> jahr", function() {deepEqual( Stem("jahres"), "jahr");});
test("jahresbericht -> jahresbericht", function() {deepEqual( Stem("jahresbericht"), "jahresbericht");});
test("jahresrechnung -> jahresrechn", function() {deepEqual( Stem("jahresrechnung"), "jahresrechn");});
test("jahresrente -> jahresrent", function() {deepEqual( Stem("jahresrente"), "jahresrent");});
test("jahrestagung -> jahrestag", function() {deepEqual( Stem("jahrestagung"), "jahrestag");});
test("jahreszahlen -> jahreszahl", function() {deepEqual( Stem("jahreszahlen"), "jahreszahl");});
test("jahreszeit -> jahreszeit", function() {deepEqual( Stem("jahreszeit"), "jahreszeit");});
test("jahrhundert -> jahrhundert", function() {deepEqual( Stem("jahrhundert"), "jahrhundert");});
test("jahrhunderte -> jahrhundert", function() {deepEqual( Stem("jahrhunderte"), "jahrhundert");});
test("jahrhunderten -> jahrhundert", function() {deepEqual( Stem("jahrhunderten"), "jahrhundert");});
test("jahrhunderts -> jahrhundert", function() {deepEqual( Stem("jahrhunderts"), "jahrhundert");});
test("jährige -> jahrig", function() {deepEqual( Stem("jährige"), "jahrig");});
test("jährigen -> jahrig", function() {deepEqual( Stem("jährigen"), "jahrig");});
test("jahrl -> jahrl", function() {deepEqual( Stem("jahrl"), "jahrl");});
test("jährlich -> jahrlich", function() {deepEqual( Stem("jährlich"), "jahrlich");});
test("jährliche -> jahrlich", function() {deepEqual( Stem("jährliche"), "jahrlich");});
test("jahrln -> jahrln", function() {deepEqual( Stem("jahrln"), "jahrln");});
test("jahrmarkt -> jahrmarkt", function() {deepEqual( Stem("jahrmarkt"), "jahrmarkt");});
test("jahrmärkte -> jahrmarkt", function() {deepEqual( Stem("jahrmärkte"), "jahrmarkt");});
test("jahrs -> jahr", function() {deepEqual( Stem("jahrs"), "jahr");});
test("jahrshoffnungen -> jahrshoffn", function() {deepEqual( Stem("jahrshoffnungen"), "jahrshoffn");});
test("jahrszeit -> jahrszeit", function() {deepEqual( Stem("jahrszeit"), "jahrszeit");});
test("jahrtausendwende -> jahrtausendw", function() {deepEqual( Stem("jahrtausendwende"), "jahrtausendw");});
test("jahrzahlen -> jahrzahl", function() {deepEqual( Stem("jahrzahlen"), "jahrzahl");});
test("jahrzehnten -> jahrzehnt", function() {deepEqual( Stem("jahrzehnten"), "jahrzehnt");});
test("jähsten -> jahst", function() {deepEqual( Stem("jähsten"), "jahst");});
test("jähzorn -> jahzorn", function() {deepEqual( Stem("jähzorn"), "jahzorn");});
test("jähzornig -> jahzorn", function() {deepEqual( Stem("jähzornig"), "jahzorn");});
test("jähzornige -> jahzorn", function() {deepEqual( Stem("jähzornige"), "jahzorn");});
test("jähzornigen -> jahzorn", function() {deepEqual( Stem("jähzornigen"), "jahzorn");});
test("jähzorniger -> jahzorn", function() {deepEqual( Stem("jähzorniger"), "jahzorn");});
test("jaja -> jaja", function() {deepEqual( Stem("jaja"), "jaja");});
test("jakob -> jakob", function() {deepEqual( Stem("jakob"), "jakob");});
test("jakobiner -> jakobin", function() {deepEqual( Stem("jakobiner"), "jakobin");});
test("jakobs -> jakob", function() {deepEqual( Stem("jakobs"), "jakob");});
test("jakobsbrunnen -> jakobsbrunn", function() {deepEqual( Stem("jakobsbrunnen"), "jakobsbrunn");});
test("jamin -> jamin", function() {deepEqual( Stem("jamin"), "jamin");});
test("jammer -> jamm", function() {deepEqual( Stem("jammer"), "jamm");});
test("jammerbild -> jammerbild", function() {deepEqual( Stem("jammerbild"), "jammerbild");});
test("jammerfalten -> jammerfalt", function() {deepEqual( Stem("jammerfalten"), "jammerfalt");});
test("jammergeschrei -> jammergeschrei", function() {deepEqual( Stem("jammergeschrei"), "jammergeschrei");});
test("jämmerlich -> jamm", function() {deepEqual( Stem("jämmerlich"), "jamm");});
test("jämmerlichem -> jamm", function() {deepEqual( Stem("jämmerlichem"), "jamm");});
test("jämmerlichen -> jamm", function() {deepEqual( Stem("jämmerlichen"), "jamm");});
test("jämmerlicher -> jamm", function() {deepEqual( Stem("jämmerlicher"), "jamm");});
test("jämmerliches -> jamm", function() {deepEqual( Stem("jämmerliches"), "jamm");});
test("jämmerlichste -> jamm", function() {deepEqual( Stem("jämmerlichste"), "jamm");});
test("jammern -> jamm", function() {deepEqual( Stem("jammern"), "jamm");});
test("jammernd -> jammernd", function() {deepEqual( Stem("jammernd"), "jammernd");});
test("jammerpipps -> jammerpipps", function() {deepEqual( Stem("jammerpipps"), "jammerpipps");});
test("jammerte -> jammert", function() {deepEqual( Stem("jammerte"), "jammert");});
test("januar -> januar", function() {deepEqual( Stem("januar"), "januar");});
test("janzer -> janz", function() {deepEqual( Stem("janzer"), "janz");});
test("japanischer -> japan", function() {deepEqual( Stem("japanischer"), "japan");});
test("japheth -> japheth", function() {deepEqual( Stem("japheth"), "japheth");});
test("jappender -> jappend", function() {deepEqual( Stem("jappender"), "jappend");});
test("jared -> jared", function() {deepEqual( Stem("jared"), "jared");});
test("jareds -> jared", function() {deepEqual( Stem("jareds"), "jared");});
test("jaspis -> jaspis", function() {deepEqual( Stem("jaspis"), "jaspis");});
test("jätete -> jatet", function() {deepEqual( Stem("jätete"), "jatet");});
test("jatz -> jatz", function() {deepEqual( Stem("jatz"), "jatz");});
test("jauchzen -> jauchz", function() {deepEqual( Stem("jauchzen"), "jauchz");});
test("jauchzend -> jauchzend", function() {deepEqual( Stem("jauchzend"), "jauchzend");});
test("jauchzende -> jauchzend", function() {deepEqual( Stem("jauchzende"), "jauchzend");});
test("jauchzer -> jauchz", function() {deepEqual( Stem("jauchzer"), "jauchz");});
test("jauchzet -> jauchzet", function() {deepEqual( Stem("jauchzet"), "jauchzet");});
test("jaulte -> jault", function() {deepEqual( Stem("jaulte"), "jault");});
test("javan -> javan", function() {deepEqual( Stem("javan"), "javan");});
test("jawohl -> jawohl", function() {deepEqual( Stem("jawohl"), "jawohl");});
test("je -> je", function() {deepEqual( Stem("je"), "je");});
test("jean -> jean", function() {deepEqual( Stem("jean"), "jean");});
test("jebusiter -> jebusit", function() {deepEqual( Stem("jebusiter"), "jebusit");});
test("jebusiters -> jebusit", function() {deepEqual( Stem("jebusiters"), "jebusit");});
test("jede -> jed", function() {deepEqual( Stem("jede"), "jed");});
test("jedem -> jed", function() {deepEqual( Stem("jedem"), "jed");});
test("jeden -> jed", function() {deepEqual( Stem("jeden"), "jed");});
test("jedenfalls -> jedenfall", function() {deepEqual( Stem("jedenfalls"), "jedenfall");});
test("jeder -> jed", function() {deepEqual( Stem("jeder"), "jed");});
test("jedermann -> jedermann", function() {deepEqual( Stem("jedermann"), "jedermann");});
test("jederzeit -> jederzeit", function() {deepEqual( Stem("jederzeit"), "jederzeit");});
test("jedes -> jed", function() {deepEqual( Stem("jedes"), "jed");});
test("jedesmal -> jedesmal", function() {deepEqual( Stem("jedesmal"), "jedesmal");});
test("jedoch -> jedoch", function() {deepEqual( Stem("jedoch"), "jedoch");});
test("jedsmal -> jedsmal", function() {deepEqual( Stem("jedsmal"), "jedsmal");});
test("jedweden -> jedwed", function() {deepEqual( Stem("jedweden"), "jedwed");});
test("jedweder -> jedwed", function() {deepEqual( Stem("jedweder"), "jedwed");});
test("jefreut -> jefreut", function() {deepEqual( Stem("jefreut"), "jefreut");});
test("jegliche -> jeglich", function() {deepEqual( Stem("jegliche"), "jeglich");});
test("jeglichem -> jeglich", function() {deepEqual( Stem("jeglichem"), "jeglich");});
test("jeglichen -> jeglich", function() {deepEqual( Stem("jeglichen"), "jeglich");});
test("jeglicher -> jeglich", function() {deepEqual( Stem("jeglicher"), "jeglich");});
test("jegliches -> jeglich", function() {deepEqual( Stem("jegliches"), "jeglich");});
test("jeher -> jeh", function() {deepEqual( Stem("jeher"), "jeh");});
test("jehorsamst -> jehorsam", function() {deepEqual( Stem("jehorsamst"), "jehorsam");});
test("jehova -> jehova", function() {deepEqual( Stem("jehova"), "jehova");});
test("jehovah -> jehovah", function() {deepEqual( Stem("jehovah"), "jehovah");});
test("jehovahs -> jehovah", function() {deepEqual( Stem("jehovahs"), "jehovah");});
test("jehovas -> jehovas", function() {deepEqual( Stem("jehovas"), "jehovas");});
test("jehovih -> jehovih", function() {deepEqual( Stem("jehovih"), "jehovih");});
test("jehudah -> jehudah", function() {deepEqual( Stem("jehudah"), "jehudah");});
test("jehudahs -> jehudah", function() {deepEqual( Stem("jehudahs"), "jehudah");});
test("jehus -> jehus", function() {deepEqual( Stem("jehus"), "jehus");});
test("jekühlte -> jekuhlt", function() {deepEqual( Stem("jekühlte"), "jekuhlt");});
test("jelek -> jelek", function() {deepEqual( Stem("jelek"), "jelek");});
test("jemals -> jemal", function() {deepEqual( Stem("jemals"), "jemal");});
test("jemand -> jemand", function() {deepEqual( Stem("jemand"), "jemand");});
test("jemandem -> jemand", function() {deepEqual( Stem("jemandem"), "jemand");});
test("jemanden -> jemand", function() {deepEqual( Stem("jemanden"), "jemand");});
test("jemandes -> jemand", function() {deepEqual( Stem("jemandes"), "jemand");});
test("jemands -> jemand", function() {deepEqual( Stem("jemands"), "jemand");});
test("jemuel -> jemuel", function() {deepEqual( Stem("jemuel"), "jemuel");});
test("jene -> jen", function() {deepEqual( Stem("jene"), "jen");});
test("jenem -> jen", function() {deepEqual( Stem("jenem"), "jen");});
test("jenen -> jen", function() {deepEqual( Stem("jenen"), "jen");});
test("jener -> jen", function() {deepEqual( Stem("jener"), "jen");});
test("jenes -> jen", function() {deepEqual( Stem("jenes"), "jen");});
test("jenseitigen -> jenseit", function() {deepEqual( Stem("jenseitigen"), "jenseit");});
test("jenseits -> jenseit", function() {deepEqual( Stem("jenseits"), "jenseit");});
test("jereist -> jereist", function() {deepEqual( Stem("jereist"), "jereist");});
test("jerem -> jer", function() {deepEqual( Stem("jerem"), "jer");});
test("jeremias -> jeremias", function() {deepEqual( Stem("jeremias"), "jeremias");});
test("jerusalem -> jerusal", function() {deepEqual( Stem("jerusalem"), "jerusal");});
test("jerusalems -> jerusalem", function() {deepEqual( Stem("jerusalems"), "jerusalem");});
test("jes -> jes", function() {deepEqual( Stem("jes"), "jes");});
test("jesaja -> jesaja", function() {deepEqual( Stem("jesaja"), "jesaja");});
test("jesajas -> jesajas", function() {deepEqual( Stem("jesajas"), "jesajas");});
test("jesses -> jess", function() {deepEqual( Stem("jesses"), "jess");});
test("jesu -> jesu", function() {deepEqual( Stem("jesu"), "jesu");});
test("jesum -> jesum", function() {deepEqual( Stem("jesum"), "jesum");});
test("jesus -> jesus", function() {deepEqual( Stem("jesus"), "jesus");});
test("jethro -> jethro", function() {deepEqual( Stem("jethro"), "jethro");});
test("jethros -> jethros", function() {deepEqual( Stem("jethros"), "jethros");});
test("jetzigen -> jetzig", function() {deepEqual( Stem("jetzigen"), "jetzig");});
test("jetziges -> jetzig", function() {deepEqual( Stem("jetziges"), "jetzig");});
test("jetzo -> jetzo", function() {deepEqual( Stem("jetzo"), "jetzo");});
test("jetzt -> jetzt", function() {deepEqual( Stem("jetzt"), "jetzt");});
test("jeweilige -> jeweil", function() {deepEqual( Stem("jeweilige"), "jeweil");});
test("jeweiligen -> jeweil", function() {deepEqual( Stem("jeweiligen"), "jeweil");});
test("jeweils -> jeweil", function() {deepEqual( Stem("jeweils"), "jeweil");});
test("jewish -> jewish", function() {deepEqual( Stem("jewish"), "jewish");});
test("jewriav -> jewriav", function() {deepEqual( Stem("jewriav"), "jewriav");});
test("jez -> jez", function() {deepEqual( Stem("jez"), "jez");});
test("jezuweilen -> jezuweil", function() {deepEqual( Stem("jezuweilen"), "jezuweil");});
test("jhdt -> jhdt", function() {deepEqual( Stem("jhdt"), "jhdt");});
test("jim -> jim", function() {deepEqual( Stem("jim"), "jim");});
test("jisaschar -> jisaschar", function() {deepEqual( Stem("jisaschar"), "jisaschar");});
test("jischak -> jischak", function() {deepEqual( Stem("jischak"), "jischak");});
test("jischaks -> jischak", function() {deepEqual( Stem("jischaks"), "jischak");});
test("jischmael -> jischmael", function() {deepEqual( Stem("jischmael"), "jischmael");});
test("jischmaels -> jischmael", function() {deepEqual( Stem("jischmaels"), "jischmael");});
test("jizhar -> jizhar", function() {deepEqual( Stem("jizhar"), "jizhar");});
test("jizhars -> jizhar", function() {deepEqual( Stem("jizhars"), "jizhar");});
test("jletscherhafter -> jletscherhaft", function() {deepEqual( Stem("jletscherhafter"), "jletscherhaft");});
test("jobbt -> jobbt", function() {deepEqual( Stem("jobbt"), "jobbt");});
test("jobbte -> jobbt", function() {deepEqual( Stem("jobbte"), "jobbt");});
test("jobs -> job", function() {deepEqual( Stem("jobs"), "job");});
test("jobst -> jobst", function() {deepEqual( Stem("jobst"), "jobst");});
test("jobsten -> jobst", function() {deepEqual( Stem("jobsten"), "jobst");});
test("jobstens -> jobst", function() {deepEqual( Stem("jobstens"), "jobst");});
test("joch -> joch", function() {deepEqual( Stem("joch"), "joch");});
test("jochebed -> jochebed", function() {deepEqual( Stem("jochebed"), "jochebed");});
test("joches -> joch", function() {deepEqual( Stem("joches"), "joch");});
test("jochs -> joch", function() {deepEqual( Stem("jochs"), "joch");});
test("jodelläufen -> jodellauf", function() {deepEqual( Stem("jodelläufen"), "jodellauf");});
test("jodler -> jodl", function() {deepEqual( Stem("jodler"), "jodl");});
test("joel -> joel", function() {deepEqual( Stem("joel"), "joel");});
test("joh -> joh", function() {deepEqual( Stem("joh"), "joh");});
test("johann -> johann", function() {deepEqual( Stem("johann"), "johann");});
test("johannes -> johann", function() {deepEqual( Stem("johannes"), "johann");});
test("johannis -> johannis", function() {deepEqual( Stem("johannis"), "johannis");});
test("johlend -> johlend", function() {deepEqual( Stem("johlend"), "johlend");});
test("john -> john", function() {deepEqual( Stem("john"), "john");});
test("jon -> jon", function() {deepEqual( Stem("jon"), "jon");});
test("jona -> jona", function() {deepEqual( Stem("jona"), "jona");});
test("jonas -> jonas", function() {deepEqual( Stem("jonas"), "jonas");});
test("jonathan -> jonathan", function() {deepEqual( Stem("jonathan"), "jonathan");});
test("jöppchens -> joppch", function() {deepEqual( Stem("jöppchens"), "joppch");});
test("joppe -> jopp", function() {deepEqual( Stem("joppe"), "jopp");});
test("joppentasche -> joppentasch", function() {deepEqual( Stem("joppentasche"), "joppentasch");});
test("jordan -> jordan", function() {deepEqual( Stem("jordan"), "jordan");});
test("jordans -> jordan", function() {deepEqual( Stem("jordans"), "jordan");});
test("jörg -> jorg", function() {deepEqual( Stem("jörg"), "jorg");});
test("jos -> jos", function() {deepEqual( Stem("jos"), "jos");});
test("josef -> josef", function() {deepEqual( Stem("josef"), "josef");});
test("joseph -> joseph", function() {deepEqual( Stem("joseph"), "joseph");});
test("josephs -> joseph", function() {deepEqual( Stem("josephs"), "joseph");});
test("josias -> josias", function() {deepEqual( Stem("josias"), "josias");});
test("josua -> josua", function() {deepEqual( Stem("josua"), "josua");});
test("josuas -> josuas", function() {deepEqual( Stem("josuas"), "josuas");});
test("jota -> jota", function() {deepEqual( Stem("jota"), "jota");});
test("journalisten -> journalist", function() {deepEqual( Stem("journalisten"), "journalist");});
test("jreuliche -> jreulich", function() {deepEqual( Stem("jreuliche"), "jreulich");});
test("juan -> juan", function() {deepEqual( Stem("juan"), "juan");});
test("jubal -> jubal", function() {deepEqual( Stem("jubal"), "jubal");});
test("jubel -> jubel", function() {deepEqual( Stem("jubel"), "jubel");});
test("jubelfeier -> jubelfei", function() {deepEqual( Stem("jubelfeier"), "jubelfei");});
test("jubelfreude -> jubelfreud", function() {deepEqual( Stem("jubelfreude"), "jubelfreud");});
test("jubelnd -> jubelnd", function() {deepEqual( Stem("jubelnd"), "jubelnd");});
test("jubelnder -> jubelnd", function() {deepEqual( Stem("jubelnder"), "jubelnd");});
test("jubelsang -> jubelsang", function() {deepEqual( Stem("jubelsang"), "jubelsang");});
test("jubelschrei -> jubelschrei", function() {deepEqual( Stem("jubelschrei"), "jubelschrei");});
test("jubelt -> jubelt", function() {deepEqual( Stem("jubelt"), "jubelt");});
test("jubelten -> jubelt", function() {deepEqual( Stem("jubelten"), "jubelt");});
test("jubilieren -> jubili", function() {deepEqual( Stem("jubilieren"), "jubili");});
test("jubilierende -> jubilier", function() {deepEqual( Stem("jubilierende"), "jubilier");});
test("juble -> jubl", function() {deepEqual( Stem("juble"), "jubl");});
test("juchezt -> juchezt", function() {deepEqual( Stem("juchezt"), "juchezt");});
test("juchheen -> juchhe", function() {deepEqual( Stem("juchheen"), "juchhe");});
test("juchhei -> juchhei", function() {deepEqual( Stem("juchhei"), "juchhei");});
test("juchzend -> juchzend", function() {deepEqual( Stem("juchzend"), "juchzend");});
test("jückt -> juckt", function() {deepEqual( Stem("jückt"), "juckt");});
test("judah -> judah", function() {deepEqual( Stem("judah"), "judah");});
test("judas -> judas", function() {deepEqual( Stem("judas"), "judas");});
test("jude -> jud", function() {deepEqual( Stem("jude"), "jud");});
test("juden -> jud", function() {deepEqual( Stem("juden"), "jud");});
test("judentum -> judentum", function() {deepEqual( Stem("judentum"), "judentum");});
test("jüdisch -> judisch", function() {deepEqual( Stem("jüdisch"), "judisch");});
test("jüdische -> judisch", function() {deepEqual( Stem("jüdische"), "judisch");});
test("jüdischen -> judisch", function() {deepEqual( Stem("jüdischen"), "judisch");});
test("jüdischer -> judisch", function() {deepEqual( Stem("jüdischer"), "judisch");});
test("jüdisches -> judisch", function() {deepEqual( Stem("jüdisches"), "judisch");});
test("judith -> judith", function() {deepEqual( Stem("judith"), "judith");});
test("judithsie -> judithsi", function() {deepEqual( Stem("judithsie"), "judithsi");});
test("jugend -> jugend", function() {deepEqual( Stem("jugend"), "jugend");});
test("jugendarbeit -> jugendarbeit", function() {deepEqual( Stem("jugendarbeit"), "jugendarbeit");});
test("jugendgarten -> jugendgart", function() {deepEqual( Stem("jugendgarten"), "jugendgart");});
test("jugendgespielen -> jugendgespiel", function() {deepEqual( Stem("jugendgespielen"), "jugendgespiel");});
test("jugendheimat -> jugendheimat", function() {deepEqual( Stem("jugendheimat"), "jugendheimat");});
test("jugendliche -> jugend", function() {deepEqual( Stem("jugendliche"), "jugend");});
test("jugendlichen -> jugend", function() {deepEqual( Stem("jugendlichen"), "jugend");});
test("jugendlicher -> jugend", function() {deepEqual( Stem("jugendlicher"), "jugend");});
test("jugendlichkeit -> jugend", function() {deepEqual( Stem("jugendlichkeit"), "jugend");});
test("jugendschutzmassnahmen -> jugendschutzmassnahm", function() {deepEqual( Stem("jugendschutzmassnahmen"), "jugendschutzmassnahm");});
test("jugendweihe -> jugendweih", function() {deepEqual( Stem("jugendweihe"), "jugendweih");});
test("jugendzeit -> jugendzeit", function() {deepEqual( Stem("jugendzeit"), "jugendzeit");});
test("juju -> juju", function() {deepEqual( Stem("juju"), "juju");});
test("juli -> juli", function() {deepEqual( Stem("juli"), "juli");});
test("julia -> julia", function() {deepEqual( Stem("julia"), "julia");});
test("julie -> juli", function() {deepEqual( Stem("julie"), "juli");});
test("julimonat -> julimonat", function() {deepEqual( Stem("julimonat"), "julimonat");});
test("julisonne -> julisonn", function() {deepEqual( Stem("julisonne"), "julisonn");});
test("julitag -> julitag", function() {deepEqual( Stem("julitag"), "julitag");});
test("julius -> julius", function() {deepEqual( Stem("julius"), "julius");});
test("juliusstrasse -> juliusstrass", function() {deepEqual( Stem("juliusstrasse"), "juliusstrass");});
test("juliusstraße -> juliusstrass", function() {deepEqual( Stem("juliusstraße"), "juliusstrass");});
test("jumoeidev -> jumoeidev", function() {deepEqual( Stem("jumoeidev"), "jumoeidev");});
test("jung -> jung", function() {deepEqual( Stem("jung"), "jung");});
test("junge -> jung", function() {deepEqual( Stem("junge"), "jung");});
test("jungem -> jung", function() {deepEqual( Stem("jungem"), "jung");});
test("jungen -> jung", function() {deepEqual( Stem("jungen"), "jung");});
test("jungeninternat -> jungeninternat", function() {deepEqual( Stem("jungeninternat"), "jungeninternat");});
test("junger -> jung", function() {deepEqual( Stem("junger"), "jung");});
test("jünger -> jung", function() {deepEqual( Stem("jünger"), "jung");});
test("jüngere -> jung", function() {deepEqual( Stem("jüngere"), "jung");});
test("jüngern -> jung", function() {deepEqual( Stem("jüngern"), "jung");});
test("junges -> jung", function() {deepEqual( Stem("junges"), "jung");});
test("jungfer -> jungf", function() {deepEqual( Stem("jungfer"), "jungf");});
test("jungfern -> jungf", function() {deepEqual( Stem("jungfern"), "jungf");});
test("jungfilmer -> jungfilm", function() {deepEqual( Stem("jungfilmer"), "jungfilm");});
test("jungfrau -> jungfrau", function() {deepEqual( Stem("jungfrau"), "jungfrau");});
test("jungfrauen -> jungfrau", function() {deepEqual( Stem("jungfrauen"), "jungfrau");});
test("jungfrauenalters -> jungfrauenalt", function() {deepEqual( Stem("jungfrauenalters"), "jungfrauenalt");});
test("jungfräulein -> jungfraulein", function() {deepEqual( Stem("jungfräulein"), "jungfraulein");});
test("jungfrauschaft -> jungfrauschaft", function() {deepEqual( Stem("jungfrauschaft"), "jungfrauschaft");});
test("junggesellen -> junggesell", function() {deepEqual( Stem("junggesellen"), "junggesell");});
test("jungholz -> jungholz", function() {deepEqual( Stem("jungholz"), "jungholz");});
test("jüngling -> jungling", function() {deepEqual( Stem("jüngling"), "jungling");});
test("jünglinge -> jungling", function() {deepEqual( Stem("jünglinge"), "jungling");});
test("jünglings -> jungling", function() {deepEqual( Stem("jünglings"), "jungling");});
test("jünglingsalter -> junglingsalt", function() {deepEqual( Stem("jünglingsalter"), "junglingsalt");});
test("jüngste -> jung", function() {deepEqual( Stem("jüngste"), "jung");});
test("jüngsten -> jung", function() {deepEqual( Stem("jüngsten"), "jung");});
test("jüngster -> jung", function() {deepEqual( Stem("jüngster"), "jung");});
test("jungunternehmer -> jungunternehm", function() {deepEqual( Stem("jungunternehmer"), "jungunternehm");});
test("jungweibe -> jungweib", function() {deepEqual( Stem("jungweibe"), "jungweib");});
test("juni -> juni", function() {deepEqual( Stem("juni"), "juni");});
test("junker -> junk", function() {deepEqual( Stem("junker"), "junk");});
test("jüppe -> jupp", function() {deepEqual( Stem("jüppe"), "jupp");});
test("jürgen -> jurg", function() {deepEqual( Stem("jürgen"), "jurg");});
test("juristen -> jurist", function() {deepEqual( Stem("juristen"), "jurist");});
test("juristische -> jurist", function() {deepEqual( Stem("juristische"), "jurist");});
test("juristischen -> jurist", function() {deepEqual( Stem("juristischen"), "jurist");});
test("just -> just", function() {deepEqual( Stem("just"), "just");});
test("juvenes -> juv", function() {deepEqual( Stem("juvenes"), "juv");});
test("k -> k", function() {deepEqual( Stem("k"), "k");});
test("kabine -> kabin", function() {deepEqual( Stem("kabine"), "kabin");});
test("kabylen -> kabyl", function() {deepEqual( Stem("kabylen"), "kabyl");});
test("kachelofen -> kachelof", function() {deepEqual( Stem("kachelofen"), "kachelof");});
test("käfer -> kaf", function() {deepEqual( Stem("käfer"), "kaf");});
test("käferchen -> kaferch", function() {deepEqual( Stem("käferchen"), "kaferch");});
test("käferherzens -> kaferherz", function() {deepEqual( Stem("käferherzens"), "kaferherz");});
test("käferlein -> kaferlein", function() {deepEqual( Stem("käferlein"), "kaferlein");});
test("käfermann -> kafermann", function() {deepEqual( Stem("käfermann"), "kafermann");});
test("käfermatz -> kafermatz", function() {deepEqual( Stem("käfermatz"), "kafermatz");});
test("käfern -> kaf", function() {deepEqual( Stem("käfern"), "kaf");});
test("käfertierchen -> kafertierch", function() {deepEqual( Stem("käfertierchen"), "kafertierch");});
test("kaffee -> kaffe", function() {deepEqual( Stem("kaffee"), "kaffe");});
test("kaffeegesellschaften -> kaffeegesellschaft", function() {deepEqual( Stem("kaffeegesellschaften"), "kaffeegesellschaft");});
test("kaffeehaus -> kaffeehaus", function() {deepEqual( Stem("kaffeehaus"), "kaffeehaus");});
test("kaffeehauses -> kaffeehaus", function() {deepEqual( Stem("kaffeehauses"), "kaffeehaus");});
test("kaffeekanne -> kaffeekann", function() {deepEqual( Stem("kaffeekanne"), "kaffeekann");});
test("kaffeekannen -> kaffeekann", function() {deepEqual( Stem("kaffeekannen"), "kaffeekann");});
test("kaffeeklatsch -> kaffeeklatsch", function() {deepEqual( Stem("kaffeeklatsch"), "kaffeeklatsch");});
test("kaffeelöffelchen -> kaffeeloffelch", function() {deepEqual( Stem("kaffeelöffelchen"), "kaffeeloffelch");});
test("kaffeetasse -> kaffeetass", function() {deepEqual( Stem("kaffeetasse"), "kaffeetass");});
test("käfig -> kafig", function() {deepEqual( Stem("käfig"), "kafig");});
test("kafka -> kafka", function() {deepEqual( Stem("kafka"), "kafka");});
test("kahl -> kahl", function() {deepEqual( Stem("kahl"), "kahl");});
test("kahle -> kahl", function() {deepEqual( Stem("kahle"), "kahl");});
test("kahlen -> kahl", function() {deepEqual( Stem("kahlen"), "kahl");});
test("kahlköpfiger -> kahlkopf", function() {deepEqual( Stem("kahlköpfiger"), "kahlkopf");});
test("kahn -> kahn", function() {deepEqual( Stem("kahn"), "kahn");});
test("kähnchens -> kahnch", function() {deepEqual( Stem("kähnchens"), "kahnch");});
test("kahne -> kahn", function() {deepEqual( Stem("kahne"), "kahn");});
test("kai -> kai", function() {deepEqual( Stem("kai"), "kai");});
test("kain -> kain", function() {deepEqual( Stem("kain"), "kain");});
test("kainiten -> kainit", function() {deepEqual( Stem("kainiten"), "kainit");});
test("kains -> kain", function() {deepEqual( Stem("kains"), "kain");});
test("kaiser -> kais", function() {deepEqual( Stem("kaiser"), "kais");});
test("kaiserlichen -> kais", function() {deepEqual( Stem("kaiserlichen"), "kais");});
test("kaiserreich -> kaiserreich", function() {deepEqual( Stem("kaiserreich"), "kaiserreich");});
test("kaiserstadt -> kaiserstadt", function() {deepEqual( Stem("kaiserstadt"), "kaiserstadt");});
test("kakan -> kakan", function() {deepEqual( Stem("kakan"), "kakan");});
test("kakaobüchse -> kakaobuchs", function() {deepEqual( Stem("kakaobüchse"), "kakaobuchs");});
test("kalaschnikows -> kalaschnikows", function() {deepEqual( Stem("kalaschnikows"), "kalaschnikows");});
test("kalb -> kalb", function() {deepEqual( Stem("kalb"), "kalb");});
test("kalben -> kalb", function() {deepEqual( Stem("kalben"), "kalb");});
test("kälbern -> kalb", function() {deepEqual( Stem("kälbern"), "kalb");});
test("kälberstücke -> kalberstuck", function() {deepEqual( Stem("kälberstücke"), "kalberstuck");});
test("kalbes -> kalb", function() {deepEqual( Stem("kalbes"), "kalb");});
test("kalender -> kalend", function() {deepEqual( Stem("kalender"), "kalend");});
test("kalifornien -> kaliforni", function() {deepEqual( Stem("kalifornien"), "kaliforni");});
test("kalk -> kalk", function() {deepEqual( Stem("kalk"), "kalk");});
test("kalkerde -> kalkerd", function() {deepEqual( Stem("kalkerde"), "kalkerd");});
test("kalmus -> kalmus", function() {deepEqual( Stem("kalmus"), "kalmus");});
test("kalt -> kalt", function() {deepEqual( Stem("kalt"), "kalt");});
test("kaltblütig -> kaltblut", function() {deepEqual( Stem("kaltblütig"), "kaltblut");});
test("kalte -> kalt", function() {deepEqual( Stem("kalte"), "kalt");});
test("kälte -> kalt", function() {deepEqual( Stem("kälte"), "kalt");});
test("kalten -> kalt", function() {deepEqual( Stem("kalten"), "kalt");});
test("kaltenkellerschlag -> kaltenkellerschlag", function() {deepEqual( Stem("kaltenkellerschlag"), "kaltenkellerschlag");});
test("kalter -> kalt", function() {deepEqual( Stem("kalter"), "kalt");});
test("kälter -> kalt", function() {deepEqual( Stem("kälter"), "kalt");});
test("kaltes -> kalt", function() {deepEqual( Stem("kaltes"), "kalt");});
test("kam -> kam", function() {deepEqual( Stem("kam"), "kam");});
test("käm -> kam", function() {deepEqual( Stem("käm"), "kam");});
test("kämbel -> kambel", function() {deepEqual( Stem("kämbel"), "kambel");});
test("käme -> kam", function() {deepEqual( Stem("käme"), "kam");});
test("kamel -> kamel", function() {deepEqual( Stem("kamel"), "kamel");});
test("kamele -> kamel", function() {deepEqual( Stem("kamele"), "kamel");});
test("kamelen -> kamel", function() {deepEqual( Stem("kamelen"), "kamel");});
test("kamelhaaren -> kamelhaar", function() {deepEqual( Stem("kamelhaaren"), "kamelhaar");});
test("kamen -> kam", function() {deepEqual( Stem("kamen"), "kam");});
test("kämen -> kam", function() {deepEqual( Stem("kämen"), "kam");});
test("kameraden -> kamerad", function() {deepEqual( Stem("kameraden"), "kamerad");});
test("kameraderie -> kameraderi", function() {deepEqual( Stem("kameraderie"), "kameraderi");});
test("kameradinnen -> kameradinn", function() {deepEqual( Stem("kameradinnen"), "kameradinn");});
test("kamet -> kamet", function() {deepEqual( Stem("kamet"), "kamet");});
test("kaminer -> kamin", function() {deepEqual( Stem("kaminer"), "kamin");});
test("kaminfeger -> kaminfeg", function() {deepEqual( Stem("kaminfeger"), "kaminfeg");});
test("kamins -> kamin", function() {deepEqual( Stem("kamins"), "kamin");});
test("kamm -> kamm", function() {deepEqual( Stem("kamm"), "kamm");});
test("kämma -> kamma", function() {deepEqual( Stem("kämma"), "kamma");});
test("kammacher -> kammach", function() {deepEqual( Stem("kammacher"), "kammach");});
test("kammachergeschäft -> kammachergeschaft", function() {deepEqual( Stem("kammachergeschäft"), "kammachergeschaft");});
test("kammachergeschäfts -> kammachergeschaft", function() {deepEqual( Stem("kammachergeschäfts"), "kammachergeschaft");});
test("kammachermeister -> kammachermeist", function() {deepEqual( Stem("kammachermeister"), "kammachermeist");});
test("kämme -> kamm", function() {deepEqual( Stem("kämme"), "kamm");});
test("kämmen -> kamm", function() {deepEqual( Stem("kämmen"), "kamm");});
test("kammer -> kamm", function() {deepEqual( Stem("kammer"), "kamm");});
test("kammerbodens -> kammerbod", function() {deepEqual( Stem("kammerbodens"), "kammerbod");});
test("kämmerchen -> kammerch", function() {deepEqual( Stem("kämmerchen"), "kammerch");});
test("kammerdiener -> kammerdi", function() {deepEqual( Stem("kammerdiener"), "kammerdi");});
test("kammerfrau -> kammerfrau", function() {deepEqual( Stem("kammerfrau"), "kammerfrau");});
test("kammerjungfer -> kammerjungf", function() {deepEqual( Stem("kammerjungfer"), "kammerjungf");});
test("kammern -> kamm", function() {deepEqual( Stem("kammern"), "kamm");});
test("kämmet -> kammet", function() {deepEqual( Stem("kämmet"), "kammet");});
test("kammfabrikchen -> kammfabrikch", function() {deepEqual( Stem("kammfabrikchen"), "kammfabrikch");});
test("kammgräsern -> kammgras", function() {deepEqual( Stem("kammgräsern"), "kammgras");});
test("kammhöhe -> kammhoh", function() {deepEqual( Stem("kammhöhe"), "kammhoh");});
test("kammmacher -> kammmach", function() {deepEqual( Stem("kammmacher"), "kammmach");});
test("kämmte -> kammt", function() {deepEqual( Stem("kämmte"), "kammt");});
test("kammwaren -> kammwar", function() {deepEqual( Stem("kammwaren"), "kammwar");});
test("kammwiesen -> kammwies", function() {deepEqual( Stem("kammwiesen"), "kammwies");});
test("kampagne -> kampagn", function() {deepEqual( Stem("kampagne"), "kampagn");});
test("kampf -> kampf", function() {deepEqual( Stem("kampf"), "kampf");});
test("kampfe -> kampf", function() {deepEqual( Stem("kampfe"), "kampf");});
test("kämpfe -> kampf", function() {deepEqual( Stem("kämpfe"), "kampf");});
test("kämpfen -> kampf", function() {deepEqual( Stem("kämpfen"), "kampf");});
test("kämpfende -> kampfend", function() {deepEqual( Stem("kämpfende"), "kampfend");});
test("kämpfer -> kampf", function() {deepEqual( Stem("kämpfer"), "kampf");});
test("kampfes -> kampf", function() {deepEqual( Stem("kampfes"), "kampf");});
test("kampflust -> kampflust", function() {deepEqual( Stem("kampflust"), "kampflust");});
test("kampfplatz -> kampfplatz", function() {deepEqual( Stem("kampfplatz"), "kampfplatz");});
test("kampfplatze -> kampfplatz", function() {deepEqual( Stem("kampfplatze"), "kampfplatz");});
test("kämpft -> kampft", function() {deepEqual( Stem("kämpft"), "kampft");});
test("kampftages -> kampftag", function() {deepEqual( Stem("kampftages"), "kampftag");});
test("kämpfte -> kampft", function() {deepEqual( Stem("kämpfte"), "kampft");});
test("kampfwahlen -> kampfwahl", function() {deepEqual( Stem("kampfwahlen"), "kampfwahl");});
test("kampierten -> kampiert", function() {deepEqual( Stem("kampierten"), "kampiert");});
test("kanaan -> kanaan", function() {deepEqual( Stem("kanaan"), "kanaan");});
test("kanaaniter -> kanaanit", function() {deepEqual( Stem("kanaaniter"), "kanaanit");});
test("kanaanitin -> kanaanitin", function() {deepEqual( Stem("kanaanitin"), "kanaanitin");});
test("kanaans -> kanaan", function() {deepEqual( Stem("kanaans"), "kanaan");});
test("kanal -> kanal", function() {deepEqual( Stem("kanal"), "kanal");});
test("kanäle -> kanal", function() {deepEqual( Stem("kanäle"), "kanal");});
test("kanapee -> kanape", function() {deepEqual( Stem("kanapee"), "kanape");});
test("kanarienkäficht -> kanarienkaficht", function() {deepEqual( Stem("kanarienkäficht"), "kanarienkaficht");});
test("kandidat -> kandidat", function() {deepEqual( Stem("kandidat"), "kandidat");});
test("kaninchen -> kaninch", function() {deepEqual( Stem("kaninchen"), "kaninch");});
test("kann -> kann", function() {deepEqual( Stem("kann"), "kann");});
test("kännchen -> kannch", function() {deepEqual( Stem("kännchen"), "kannch");});
test("kanne -> kann", function() {deepEqual( Stem("kanne"), "kann");});
test("kannegiesser -> kannegiess", function() {deepEqual( Stem("kannegiesser"), "kannegiess");});
test("kannegiesserin -> kannegiesserin", function() {deepEqual( Stem("kannegiesserin"), "kannegiesserin");});
test("kannegiessern -> kannegiess", function() {deepEqual( Stem("kannegiessern"), "kannegiess");});
test("kannen -> kann", function() {deepEqual( Stem("kannen"), "kann");});
test("kannst -> kann", function() {deepEqual( Stem("kannst"), "kann");});
test("kannt -> kannt", function() {deepEqual( Stem("kannt"), "kannt");});
test("kannte -> kannt", function() {deepEqual( Stem("kannte"), "kannt");});
test("kannten -> kannt", function() {deepEqual( Stem("kannten"), "kannt");});
test("kanone -> kanon", function() {deepEqual( Stem("kanone"), "kanon");});
test("kanonenkügelchen -> kanonenkugelch", function() {deepEqual( Stem("kanonenkügelchen"), "kanonenkugelch");});
test("kanonenkugeln -> kanonenkugeln", function() {deepEqual( Stem("kanonenkugeln"), "kanonenkugeln");});
test("kanonenlauf -> kanonenlauf", function() {deepEqual( Stem("kanonenlauf"), "kanonenlauf");});
test("kanonenmündung -> kanonenmund", function() {deepEqual( Stem("kanonenmündung"), "kanonenmund");});
test("kanonenrohres -> kanonenrohr", function() {deepEqual( Stem("kanonenrohres"), "kanonenrohr");});
test("kanonenwischer -> kanonenw", function() {deepEqual( Stem("kanonenwischer"), "kanonenw");});
test("kanonik -> kanon", function() {deepEqual( Stem("kanonik"), "kanon");});
test("kant -> kant", function() {deepEqual( Stem("kant"), "kant");});
test("kante -> kant", function() {deepEqual( Stem("kante"), "kant");});
test("kanten -> kant", function() {deepEqual( Stem("kanten"), "kant");});
test("kantine -> kantin", function() {deepEqual( Stem("kantine"), "kantin");});
test("kantinenraumes -> kantinenraum", function() {deepEqual( Stem("kantinenraumes"), "kantinenraum");});
test("kanton -> kanton", function() {deepEqual( Stem("kanton"), "kanton");});
test("kantonalkirche -> kantonalkirch", function() {deepEqual( Stem("kantonalkirche"), "kantonalkirch");});
test("kantonalkirchen -> kantonalkirch", function() {deepEqual( Stem("kantonalkirchen"), "kantonalkirch");});
test("kantonalsouveränetät -> kantonalsouveranetat", function() {deepEqual( Stem("kantonalsouveränetät"), "kantonalsouveranetat");});
test("kantone -> kanton", function() {deepEqual( Stem("kantone"), "kanton");});
test("kantons -> kanton", function() {deepEqual( Stem("kantons"), "kanton");});
test("kantonsrats -> kantonsrat", function() {deepEqual( Stem("kantonsrats"), "kantonsrat");});
test("kanzel -> kanzel", function() {deepEqual( Stem("kanzel"), "kanzel");});
test("kanzlei -> kanzlei", function() {deepEqual( Stem("kanzlei"), "kanzlei");});
test("kanzleidirektor -> kanzleidirektor", function() {deepEqual( Stem("kanzleidirektor"), "kanzleidirektor");});
test("kanzleien -> kanzlei", function() {deepEqual( Stem("kanzleien"), "kanzlei");});
test("kap -> kap", function() {deepEqual( Stem("kap"), "kap");});
test("kapital -> kapital", function() {deepEqual( Stem("kapital"), "kapital");});
test("kapitale -> kapital", function() {deepEqual( Stem("kapitale"), "kapital");});
test("kapitalist -> kapitalist", function() {deepEqual( Stem("kapitalist"), "kapitalist");});
test("kapitaltier -> kapitalti", function() {deepEqual( Stem("kapitaltier"), "kapitalti");});
test("kapitän -> kapitan", function() {deepEqual( Stem("kapitän"), "kapitan");});
test("kapitel -> kapitel", function() {deepEqual( Stem("kapitel"), "kapitel");});
test("kapiteln -> kapiteln", function() {deepEqual( Stem("kapiteln"), "kapiteln");});
test("kapitels -> kapitel", function() {deepEqual( Stem("kapitels"), "kapitel");});
test("kapitelsherren -> kapitelsherr", function() {deepEqual( Stem("kapitelsherren"), "kapitelsherr");});
test("kappe -> kapp", function() {deepEqual( Stem("kappe"), "kapp");});
test("kappenzipfel -> kappenzipfel", function() {deepEqual( Stem("kappenzipfel"), "kappenzipfel");});
test("käpplein -> kapplein", function() {deepEqual( Stem("käpplein"), "kapplein");});
test("kapriolen -> kapriol", function() {deepEqual( Stem("kapriolen"), "kapriol");});
test("kapsel -> kapsel", function() {deepEqual( Stem("kapsel"), "kapsel");});
test("kaputt -> kaputt", function() {deepEqual( Stem("kaputt"), "kaputt");});
test("kaputtgehen -> kaputtgeh", function() {deepEqual( Stem("kaputtgehen"), "kaputtgeh");});
test("karaffe -> karaff", function() {deepEqual( Stem("karaffe"), "karaff");});
test("karaffen -> karaff", function() {deepEqual( Stem("karaffen"), "karaff");});
test("karbonarimantel -> karbonarimantel", function() {deepEqual( Stem("karbonarimantel"), "karbonarimantel");});
test("kardinäle -> kardinal", function() {deepEqual( Stem("kardinäle"), "kardinal");});
test("karfunkelsteinen -> karfunkelstein", function() {deepEqual( Stem("karfunkelsteinen"), "karfunkelstein");});
test("karikiere -> kariki", function() {deepEqual( Stem("karikiere"), "kariki");});
test("karl -> karl", function() {deepEqual( Stem("karl"), "karl");});
test("karmi -> karmi", function() {deepEqual( Stem("karmi"), "karmi");});
test("karneolfarbigen -> karneolfarb", function() {deepEqual( Stem("karneolfarbigen"), "karneolfarb");});
test("karneval -> karneval", function() {deepEqual( Stem("karneval"), "karneval");});
test("karpfen -> karpf", function() {deepEqual( Stem("karpfen"), "karpf");});
test("karpfenururgrosspapa -> karpfenururgrosspapa", function() {deepEqual( Stem("karpfenururgrosspapa"), "karpfenururgrosspapa");});
test("karren -> karr", function() {deepEqual( Stem("karren"), "karr");});
test("karriere -> karri", function() {deepEqual( Stem("karriere"), "karri");});
test("karten -> kart", function() {deepEqual( Stem("karten"), "kart");});
test("kartenschlagen -> kartenschlag", function() {deepEqual( Stem("kartenschlagen"), "kartenschlag");});
test("kartoffel -> kartoffel", function() {deepEqual( Stem("kartoffel"), "kartoffel");});
test("kartoffelacker -> kartoffelack", function() {deepEqual( Stem("kartoffelacker"), "kartoffelack");});
test("kartoffelbrei -> kartoffelbrei", function() {deepEqual( Stem("kartoffelbrei"), "kartoffelbrei");});
test("kartoffelfeld -> kartoffelfeld", function() {deepEqual( Stem("kartoffelfeld"), "kartoffelfeld");});
test("kartoffelgebirge -> kartoffelgebirg", function() {deepEqual( Stem("kartoffelgebirge"), "kartoffelgebirg");});
test("kartoffeln -> kartoffeln", function() {deepEqual( Stem("kartoffeln"), "kartoffeln");});
test("kartoffelsuppe -> kartoffelsupp", function() {deepEqual( Stem("kartoffelsuppe"), "kartoffelsupp");});
test("karton -> karton", function() {deepEqual( Stem("karton"), "karton");});
test("kartons -> karton", function() {deepEqual( Stem("kartons"), "karton");});
test("karussell -> karussell", function() {deepEqual( Stem("karussell"), "karussell");});
test("käse -> kas", function() {deepEqual( Stem("käse"), "kas");});
test("käsen -> kas", function() {deepEqual( Stem("käsen"), "kas");});
test("kasia -> kasia", function() {deepEqual( Stem("kasia"), "kasia");});
test("kaspar -> kaspar", function() {deepEqual( Stem("kaspar"), "kaspar");});
test("kasparn -> kasparn", function() {deepEqual( Stem("kasparn"), "kasparn");});
test("käsrinde -> kasrind", function() {deepEqual( Stem("käsrinde"), "kasrind");});
test("kassberger -> kassberg", function() {deepEqual( Stem("kassberger"), "kassberg");});
test("kasse -> kass", function() {deepEqual( Stem("kasse"), "kass");});
test("kassieren -> kassi", function() {deepEqual( Stem("kassieren"), "kassi");});
test("kassierer -> kassi", function() {deepEqual( Stem("kassierer"), "kassi");});
test("kastanie -> kastani", function() {deepEqual( Stem("kastanie"), "kastani");});
test("kastanien -> kastani", function() {deepEqual( Stem("kastanien"), "kastani");});
test("kastanienbäume -> kastanienbaum", function() {deepEqual( Stem("kastanienbäume"), "kastanienbaum");});
test("kastanienblättern -> kastanienblatt", function() {deepEqual( Stem("kastanienblättern"), "kastanienblatt");});
test("kastanienritter -> kastanienritt", function() {deepEqual( Stem("kastanienritter"), "kastanienritt");});
test("kästchen -> kastch", function() {deepEqual( Stem("kästchen"), "kastch");});
test("kästchens -> kastch", function() {deepEqual( Stem("kästchens"), "kastch");});
test("kasten -> kast", function() {deepEqual( Stem("kasten"), "kast");});
test("kastens -> kast", function() {deepEqual( Stem("kastens"), "kast");});
test("kasuale -> kasual", function() {deepEqual( Stem("kasuale"), "kasual");});
test("kasualverschiebung -> kasualverschieb", function() {deepEqual( Stem("kasualverschiebung"), "kasualverschieb");});
test("kasus -> kasus", function() {deepEqual( Stem("kasus"), "kasus");});
test("kasweiss -> kasweiss", function() {deepEqual( Stem("kasweiss"), "kasweiss");});
test("katalog -> katalog", function() {deepEqual( Stem("katalog"), "katalog");});
test("kataskeuazein -> kataskeuazein", function() {deepEqual( Stem("kataskeuazein"), "kataskeuazein");});
test("kataskeuazomen -> kataskeuazom", function() {deepEqual( Stem("kataskeuazomen"), "kataskeuazom");});
test("katastrophal -> katastrophal", function() {deepEqual( Stem("katastrophal"), "katastrophal");});
test("katastrophe -> katastroph", function() {deepEqual( Stem("katastrophe"), "katastroph");});
test("katastrophen -> katastroph", function() {deepEqual( Stem("katastrophen"), "katastroph");});
test("katastropheneinsatz -> katastropheneinsatz", function() {deepEqual( Stem("katastropheneinsatz"), "katastropheneinsatz");});
test("katechismus -> katechismus", function() {deepEqual( Stem("katechismus"), "katechismus");});
test("kategorie -> kategori", function() {deepEqual( Stem("kategorie"), "kategori");});
test("kategorien -> kategori", function() {deepEqual( Stem("kategorien"), "kategori");});
test("kategorisch -> kategor", function() {deepEqual( Stem("kategorisch"), "kategor");});
test("kategorische -> kategor", function() {deepEqual( Stem("kategorische"), "kategor");});
test("kategorischen -> kategor", function() {deepEqual( Stem("kategorischen"), "kategor");});
test("kategorischer -> kategor", function() {deepEqual( Stem("kategorischer"), "kategor");});
test("kater -> kat", function() {deepEqual( Stem("kater"), "kat");});
test("katerliede -> katerlied", function() {deepEqual( Stem("katerliede"), "katerlied");});
test("katern -> kat", function() {deepEqual( Stem("katern"), "kat");});
test("katers -> kat", function() {deepEqual( Stem("katers"), "kat");});
test("käthchen -> kathch", function() {deepEqual( Stem("käthchen"), "kathch");});
test("kathedrale -> kathedral", function() {deepEqual( Stem("kathedrale"), "kathedral");});
test("kathinka -> kathinka", function() {deepEqual( Stem("kathinka"), "kathinka");});
test("katholik -> kathol", function() {deepEqual( Stem("katholik"), "kathol");});
test("katholische -> kathol", function() {deepEqual( Stem("katholische"), "kathol");});
test("katholischen -> kathol", function() {deepEqual( Stem("katholischen"), "kathol");});
test("katholischer -> kathol", function() {deepEqual( Stem("katholischer"), "kathol");});
test("kattun -> kattun", function() {deepEqual( Stem("kattun"), "kattun");});
test("kattunhalstücher -> kattunhalstuch", function() {deepEqual( Stem("kattunhalstücher"), "kattunhalstuch");});
test("katz -> katz", function() {deepEqual( Stem("katz"), "katz");});
test("kätzchen -> katzch", function() {deepEqual( Stem("kätzchen"), "katzch");});
test("kätzchens -> katzch", function() {deepEqual( Stem("kätzchens"), "katzch");});
test("katze -> katz", function() {deepEqual( Stem("katze"), "katz");});
test("katzen -> katz", function() {deepEqual( Stem("katzen"), "katz");});
test("katzenschmer -> katzenschm", function() {deepEqual( Stem("katzenschmer"), "katzenschm");});
test("katzensprung -> katzenspr", function() {deepEqual( Stem("katzensprung"), "katzenspr");});
test("katzenwürde -> katzenwurd", function() {deepEqual( Stem("katzenwürde"), "katzenwurd");});
test("kätzin -> katzin", function() {deepEqual( Stem("kätzin"), "katzin");});
test("kätzlein -> katzlein", function() {deepEqual( Stem("kätzlein"), "katzlein");});
test("katzmann -> katzmann", function() {deepEqual( Stem("katzmann"), "katzmann");});
test("kauen -> kau", function() {deepEqual( Stem("kauen"), "kau");});
test("kauerte -> kauert", function() {deepEqual( Stem("kauerte"), "kauert");});
test("kauf -> kauf", function() {deepEqual( Stem("kauf"), "kauf");});
test("kaufe -> kauf", function() {deepEqual( Stem("kaufe"), "kauf");});
test("kaufen -> kauf", function() {deepEqual( Stem("kaufen"), "kauf");});
test("käufer -> kauf", function() {deepEqual( Stem("käufer"), "kauf");});
test("kauffahrer -> kauffahr", function() {deepEqual( Stem("kauffahrer"), "kauffahr");});
test("kaufherr -> kaufherr", function() {deepEqual( Stem("kaufherr"), "kaufherr");});
test("kaufleute -> kaufleut", function() {deepEqual( Stem("kaufleute"), "kaufleut");});
test("käuflich -> kauflich", function() {deepEqual( Stem("käuflich"), "kauflich");});
test("kaufmann -> kaufmann", function() {deepEqual( Stem("kaufmann"), "kaufmann");});
test("kaufmanns -> kaufmann", function() {deepEqual( Stem("kaufmanns"), "kaufmann");});
test("kaufmannschaft -> kaufmannschaft", function() {deepEqual( Stem("kaufmannschaft"), "kaufmannschaft");});
test("kaufmannsnamen -> kaufmannsnam", function() {deepEqual( Stem("kaufmannsnamen"), "kaufmannsnam");});
test("kaufpreis -> kaufpreis", function() {deepEqual( Stem("kaufpreis"), "kaufpreis");});
test("kaufpreises -> kaufpreis", function() {deepEqual( Stem("kaufpreises"), "kaufpreis");});
test("kaufst -> kauf", function() {deepEqual( Stem("kaufst"), "kauf");});
test("kauft -> kauft", function() {deepEqual( Stem("kauft"), "kauft");});
test("kaufte -> kauft", function() {deepEqual( Stem("kaufte"), "kauft");});
test("kaum -> kaum", function() {deepEqual( Stem("kaum"), "kaum");});
test("kausalbegriffe -> kausalbegriff", function() {deepEqual( Stem("kausalbegriffe"), "kausalbegriff");});
test("kausalität -> kausalitat", function() {deepEqual( Stem("kausalität"), "kausalitat");});
test("kausalverbindung -> kausalverbind", function() {deepEqual( Stem("kausalverbindung"), "kausalverbind");});
test("kausalverhältnisse -> kausalverhaltnis", function() {deepEqual( Stem("kausalverhältnisse"), "kausalverhaltnis");});
test("kaute -> kaut", function() {deepEqual( Stem("kaute"), "kaut");});
test("kaution -> kaution", function() {deepEqual( Stem("kaution"), "kaution");});
test("käuze -> kauz", function() {deepEqual( Stem("käuze"), "kauz");});
test("käuzen -> kauz", function() {deepEqual( Stem("käuzen"), "kauz");});
test("käuzlein -> kauzlein", function() {deepEqual( Stem("käuzlein"), "kauzlein");});
test("kavalier -> kavali", function() {deepEqual( Stem("kavalier"), "kavali");});
test("kavaliere -> kavali", function() {deepEqual( Stem("kavaliere"), "kavali");});
test("kaweida -> kaweida", function() {deepEqual( Stem("kaweida"), "kaweida");});
test("kdv -> kdv", function() {deepEqual( Stem("kdv"), "kdv");});
test("keck -> keck", function() {deepEqual( Stem("keck"), "keck");});
test("kecken -> keck", function() {deepEqual( Stem("kecken"), "keck");});
test("keckes -> keck", function() {deepEqual( Stem("keckes"), "keck");});
test("kedars -> kedar", function() {deepEqual( Stem("kedars"), "kedar");});
test("kegel -> kegel", function() {deepEqual( Stem("kegel"), "kegel");});
test("kegelbahn -> kegelbahn", function() {deepEqual( Stem("kegelbahn"), "kegelbahn");});
test("kegelbahnen -> kegelbahn", function() {deepEqual( Stem("kegelbahnen"), "kegelbahn");});
test("kegelpartie -> kegelparti", function() {deepEqual( Stem("kegelpartie"), "kegelparti");});
test("kegelspiel -> kegelspiel", function() {deepEqual( Stem("kegelspiel"), "kegelspiel");});
test("kehath -> kehath", function() {deepEqual( Stem("kehath"), "kehath");});
test("kehaths -> kehath", function() {deepEqual( Stem("kehaths"), "kehath");});
test("kehats -> kehat", function() {deepEqual( Stem("kehats"), "kehat");});
test("kehle -> kehl", function() {deepEqual( Stem("kehle"), "kehl");});
test("kehlen -> kehl", function() {deepEqual( Stem("kehlen"), "kehl");});
test("kehr -> kehr", function() {deepEqual( Stem("kehr"), "kehr");});
test("kehre -> kehr", function() {deepEqual( Stem("kehre"), "kehr");});
test("kehren -> kehr", function() {deepEqual( Stem("kehren"), "kehr");});
test("kehret -> kehret", function() {deepEqual( Stem("kehret"), "kehret");});
test("kehricht -> kehricht", function() {deepEqual( Stem("kehricht"), "kehricht");});
test("kehrseite -> kehrseit", function() {deepEqual( Stem("kehrseite"), "kehrseit");});
test("kehrt -> kehrt", function() {deepEqual( Stem("kehrt"), "kehrt");});
test("kehrte -> kehrt", function() {deepEqual( Stem("kehrte"), "kehrt");});
test("kehrten -> kehrt", function() {deepEqual( Stem("kehrten"), "kehrt");});
test("kei -> kei", function() {deepEqual( Stem("kei"), "kei");});
test("keim -> keim", function() {deepEqual( Stem("keim"), "keim");});
test("kein -> kein", function() {deepEqual( Stem("kein"), "kein");});
test("keine -> kein", function() {deepEqual( Stem("keine"), "kein");});
test("keinem -> kein", function() {deepEqual( Stem("keinem"), "kein");});
test("keinen -> kein", function() {deepEqual( Stem("keinen"), "kein");});
test("keiner -> kein", function() {deepEqual( Stem("keiner"), "kein");});
test("keinerlei -> keinerlei", function() {deepEqual( Stem("keinerlei"), "keinerlei");});
test("keines -> kein", function() {deepEqual( Stem("keines"), "kein");});
test("keinesfalls -> keinesfall", function() {deepEqual( Stem("keinesfalls"), "keinesfall");});
test("keineswegs -> keinesweg", function() {deepEqual( Stem("keineswegs"), "keinesweg");});
test("keins -> kein", function() {deepEqual( Stem("keins"), "kein");});
test("keksdose -> keksdos", function() {deepEqual( Stem("keksdose"), "keksdos");});
test("kelch -> kelch", function() {deepEqual( Stem("kelch"), "kelch");});
test("keller -> kell", function() {deepEqual( Stem("keller"), "kell");});
test("kellereien -> kellerei", function() {deepEqual( Stem("kellereien"), "kellerei");});
test("kellerhals -> kellerhal", function() {deepEqual( Stem("kellerhals"), "kellerhal");});
test("kellerpflanzen -> kellerpflanz", function() {deepEqual( Stem("kellerpflanzen"), "kellerpflanz");});
test("kellner -> kelln", function() {deepEqual( Stem("kellner"), "kelln");});
test("kellnerin -> kellnerin", function() {deepEqual( Stem("kellnerin"), "kellnerin");});
test("kellnerinnen -> kellnerinn", function() {deepEqual( Stem("kellnerinnen"), "kellnerinn");});
test("kelter -> kelt", function() {deepEqual( Stem("kelter"), "kelt");});
test("keltern -> kelt", function() {deepEqual( Stem("keltern"), "kelt");});
test("kenan -> kenan", function() {deepEqual( Stem("kenan"), "kenan");});
test("kenans -> kenan", function() {deepEqual( Stem("kenans"), "kenan");});
test("kenn -> kenn", function() {deepEqual( Stem("kenn"), "kenn");});
test("kennbar -> kennbar", function() {deepEqual( Stem("kennbar"), "kennbar");});
test("kenne -> kenn", function() {deepEqual( Stem("kenne"), "kenn");});
test("kennen -> kenn", function() {deepEqual( Stem("kennen"), "kenn");});
test("kennenlernen -> kennenlern", function() {deepEqual( Stem("kennenlernen"), "kennenlern");});
test("kennens -> kenn", function() {deepEqual( Stem("kennens"), "kenn");});
test("kennenzulernen -> kennenzulern", function() {deepEqual( Stem("kennenzulernen"), "kennenzulern");});
test("kenner -> kenn", function() {deepEqual( Stem("kenner"), "kenn");});
test("kennerblicken -> kennerblick", function() {deepEqual( Stem("kennerblicken"), "kennerblick");});
test("kennest -> kenn", function() {deepEqual( Stem("kennest"), "kenn");});
test("kennete -> kennet", function() {deepEqual( Stem("kennete"), "kennet");});
test("kennst -> kenn", function() {deepEqual( Stem("kennst"), "kenn");});
test("kennt -> kennt", function() {deepEqual( Stem("kennt"), "kennt");});
test("kenntlich -> kenntlich", function() {deepEqual( Stem("kenntlich"), "kenntlich");});
test("kenntnis -> kenntnis", function() {deepEqual( Stem("kenntnis"), "kenntnis");});
test("kenntnisse -> kenntnis", function() {deepEqual( Stem("kenntnisse"), "kenntnis");});
test("kenntnissen -> kenntnis", function() {deepEqual( Stem("kenntnissen"), "kenntnis");});
test("kennzeichen -> kennzeich", function() {deepEqual( Stem("kennzeichen"), "kennzeich");});
test("kerbholz -> kerbholz", function() {deepEqual( Stem("kerbholz"), "kerbholz");});
test("kerker -> kerk", function() {deepEqual( Stem("kerker"), "kerk");});
test("kerkern -> kerk", function() {deepEqual( Stem("kerkern"), "kerk");});
test("kerl -> kerl", function() {deepEqual( Stem("kerl"), "kerl");});
test("kerlchen -> kerlch", function() {deepEqual( Stem("kerlchen"), "kerlch");});
test("kerls -> kerl", function() {deepEqual( Stem("kerls"), "kerl");});
test("kern -> kern", function() {deepEqual( Stem("kern"), "kern");});
test("kernpunkt -> kernpunkt", function() {deepEqual( Stem("kernpunkt"), "kernpunkt");});
test("kerstin -> kerstin", function() {deepEqual( Stem("kerstin"), "kerstin");});
test("kerze -> kerz", function() {deepEqual( Stem("kerze"), "kerz");});
test("kerzen -> kerz", function() {deepEqual( Stem("kerzen"), "kerz");});
test("kesselflicken -> kesselflick", function() {deepEqual( Stem("kesselflicken"), "kesselflick");});
test("kesselförmiges -> kesselform", function() {deepEqual( Stem("kesselförmiges"), "kesselform");});
test("kesseltal -> kesseltal", function() {deepEqual( Stem("kesseltal"), "kesseltal");});
test("kesselvolk -> kesselvolk", function() {deepEqual( Stem("kesselvolk"), "kesselvolk");});
test("kette -> kett", function() {deepEqual( Stem("kette"), "kett");});
test("ketten -> kett", function() {deepEqual( Stem("ketten"), "kett");});
test("kettlein -> kettlein", function() {deepEqual( Stem("kettlein"), "kettlein");});
test("ketzer -> ketz", function() {deepEqual( Stem("ketzer"), "ketz");});
test("ketzerei -> ketzerei", function() {deepEqual( Stem("ketzerei"), "ketzerei");});
test("ketzereien -> ketzerei", function() {deepEqual( Stem("ketzereien"), "ketzerei");});
test("ketzerische -> ketzer", function() {deepEqual( Stem("ketzerische"), "ketzer");});
test("ketzerischen -> ketzer", function() {deepEqual( Stem("ketzerischen"), "ketzer");});
test("keuchend -> keuchend", function() {deepEqual( Stem("keuchend"), "keuchend");});
test("keuchenden -> keuchend", function() {deepEqual( Stem("keuchenden"), "keuchend");});
test("keuchte -> keucht", function() {deepEqual( Stem("keuchte"), "keucht");});
test("keulenkörner -> keulenkorn", function() {deepEqual( Stem("keulenkörner"), "keulenkorn");});
test("keuschheit -> keuschheit", function() {deepEqual( Stem("keuschheit"), "keuschheit");});
test("kg -> kg", function() {deepEqual( Stem("kg"), "kg");});
test("kichern -> kich", function() {deepEqual( Stem("kichern"), "kich");});
test("kids -> kid", function() {deepEqual( Stem("kids"), "kid");});
test("kiel -> kiel", function() {deepEqual( Stem("kiel"), "kiel");});
test("kielwasser -> kielwass", function() {deepEqual( Stem("kielwasser"), "kielwass");});
test("kienholzgefüllten -> kienholzgefullt", function() {deepEqual( Stem("kienholzgefüllten"), "kienholzgefullt");});
test("kiepenheuer -> kiepenheu", function() {deepEqual( Stem("kiepenheuer"), "kiepenheu");});
test("kiesel -> kiesel", function() {deepEqual( Stem("kiesel"), "kiesel");});
test("kieseln -> kieseln", function() {deepEqual( Stem("kieseln"), "kieseln");});
test("kieselstein -> kieselstein", function() {deepEqual( Stem("kieselstein"), "kieselstein");});
test("kiesige -> kiesig", function() {deepEqual( Stem("kiesige"), "kiesig");});
test("kieswege -> kiesweg", function() {deepEqual( Stem("kieswege"), "kiesweg");});
test("kikeriki -> kikeriki", function() {deepEqual( Stem("kikeriki"), "kikeriki");});
test("kilo -> kilo", function() {deepEqual( Stem("kilo"), "kilo");});
test("kilometer -> kilomet", function() {deepEqual( Stem("kilometer"), "kilomet");});
test("kind -> kind", function() {deepEqual( Stem("kind"), "kind");});
test("kindchen -> kindch", function() {deepEqual( Stem("kindchen"), "kindch");});
test("kinde -> kind", function() {deepEqual( Stem("kinde"), "kind");});
test("kinder -> kind", function() {deepEqual( Stem("kinder"), "kind");});
test("kinderaugen -> kinderaug", function() {deepEqual( Stem("kinderaugen"), "kinderaug");});
test("kinderchen -> kinderch", function() {deepEqual( Stem("kinderchen"), "kinderch");});
test("kinderfest -> kinderf", function() {deepEqual( Stem("kinderfest"), "kinderf");});
test("kindergärten -> kindergart", function() {deepEqual( Stem("kindergärten"), "kindergart");});
test("kinderjahren -> kinderjahr", function() {deepEqual( Stem("kinderjahren"), "kinderjahr");});
test("kinderkehlen -> kinderkehl", function() {deepEqual( Stem("kinderkehlen"), "kinderkehl");});
test("kinderlein -> kinderlein", function() {deepEqual( Stem("kinderlein"), "kinderlein");});
test("kinderlos -> kinderlos", function() {deepEqual( Stem("kinderlos"), "kinderlos");});
test("kinderlosigkeit -> kinderlos", function() {deepEqual( Stem("kinderlosigkeit"), "kinderlos");});
test("kindern -> kind", function() {deepEqual( Stem("kindern"), "kind");});
test("kinderschar -> kinderschar", function() {deepEqual( Stem("kinderschar"), "kinderschar");});
test("kinderspiel -> kinderspiel", function() {deepEqual( Stem("kinderspiel"), "kinderspiel");});
test("kinderstimmengelächter -> kinderstimmengelacht", function() {deepEqual( Stem("kinderstimmengelächter"), "kinderstimmengelacht");});
test("kinderstube -> kinderstub", function() {deepEqual( Stem("kinderstube"), "kinderstub");});
test("kinderstühlchen -> kinderstuhlch", function() {deepEqual( Stem("kinderstühlchen"), "kinderstuhlch");});
test("kindertaufen -> kindertauf", function() {deepEqual( Stem("kindertaufen"), "kindertauf");});
test("kinderwägelchen -> kinderwagelch", function() {deepEqual( Stem("kinderwägelchen"), "kinderwagelch");});
test("kinderwäsche -> kinderwasch", function() {deepEqual( Stem("kinderwäsche"), "kinderwasch");});
test("kinderzeit -> kinderzeit", function() {deepEqual( Stem("kinderzeit"), "kinderzeit");});
test("kinderzimmerchen -> kinderzimmerch", function() {deepEqual( Stem("kinderzimmerchen"), "kinderzimmerch");});
test("kindes -> kind", function() {deepEqual( Stem("kindes"), "kind");});
test("kindesbeinen -> kindesbein", function() {deepEqual( Stem("kindesbeinen"), "kindesbein");});
test("kindesgedanken -> kindesgedank", function() {deepEqual( Stem("kindesgedanken"), "kindesgedank");});
test("kindesstatt -> kindesstatt", function() {deepEqual( Stem("kindesstatt"), "kindesstatt");});
test("kindestreue -> kindestreu", function() {deepEqual( Stem("kindestreue"), "kindestreu");});
test("kindheit -> kindheit", function() {deepEqual( Stem("kindheit"), "kindheit");});
test("kindisch -> kindisch", function() {deepEqual( Stem("kindisch"), "kindisch");});
test("kindische -> kindisch", function() {deepEqual( Stem("kindische"), "kindisch");});
test("kindischer -> kindisch", function() {deepEqual( Stem("kindischer"), "kindisch");});
test("kindlein -> kindlein", function() {deepEqual( Stem("kindlein"), "kindlein");});
test("kindlich -> kindlich", function() {deepEqual( Stem("kindlich"), "kindlich");});
test("kindliche -> kindlich", function() {deepEqual( Stem("kindliche"), "kindlich");});
test("kindlichen -> kindlich", function() {deepEqual( Stem("kindlichen"), "kindlich");});
test("kindliches -> kindlich", function() {deepEqual( Stem("kindliches"), "kindlich");});
test("kindlichkeit -> kindlich", function() {deepEqual( Stem("kindlichkeit"), "kindlich");});
test("kindskopf -> kindskopf", function() {deepEqual( Stem("kindskopf"), "kindskopf");});
test("kinn -> kinn", function() {deepEqual( Stem("kinn"), "kinn");});
test("kinnbacken -> kinnback", function() {deepEqual( Stem("kinnbacken"), "kinnback");});
test("kinnbart -> kinnbart", function() {deepEqual( Stem("kinnbart"), "kinnbart");});
test("kino -> kino", function() {deepEqual( Stem("kino"), "kino");});
test("kippe -> kipp", function() {deepEqual( Stem("kippe"), "kipp");});
test("kippen -> kipp", function() {deepEqual( Stem("kippen"), "kipp");});
test("kippod -> kippod", function() {deepEqual( Stem("kippod"), "kippod");});
test("kirch -> kirch", function() {deepEqual( Stem("kirch"), "kirch");});
test("kirchbankeck -> kirchbankeck", function() {deepEqual( Stem("kirchbankeck"), "kirchbankeck");});
test("kirchdorf -> kirchdorf", function() {deepEqual( Stem("kirchdorf"), "kirchdorf");});
test("kirche -> kirch", function() {deepEqual( Stem("kirche"), "kirch");});
test("kirchedie -> kirchedi", function() {deepEqual( Stem("kirchedie"), "kirchedi");});
test("kirchemit -> kirchemit", function() {deepEqual( Stem("kirchemit"), "kirchemit");});
test("kirchen -> kirch", function() {deepEqual( Stem("kirchen"), "kirch");});
test("kirchenauftritt -> kirchenauftritt", function() {deepEqual( Stem("kirchenauftritt"), "kirchenauftritt");});
test("kirchenbesuch -> kirchenbesuch", function() {deepEqual( Stem("kirchenbesuch"), "kirchenbesuch");});
test("kirchenbund -> kirchenbund", function() {deepEqual( Stem("kirchenbund"), "kirchenbund");});
test("kirchenbundes -> kirchenbund", function() {deepEqual( Stem("kirchenbundes"), "kirchenbund");});
test("kirchenbundesdie -> kirchenbundesdi", function() {deepEqual( Stem("kirchenbundesdie"), "kirchenbundesdi");});
test("kirchenerhaltdie -> kirchenerhaltdi", function() {deepEqual( Stem("kirchenerhaltdie"), "kirchenerhaltdi");});
test("kirchenführer -> kirchenfuhr", function() {deepEqual( Stem("kirchenführer"), "kirchenfuhr");});
test("kirchenglocken -> kirchenglock", function() {deepEqual( Stem("kirchenglocken"), "kirchenglock");});
test("kirchenkritiker -> kirchenkrit", function() {deepEqual( Stem("kirchenkritiker"), "kirchenkrit");});
test("kirchenlehre -> kirchenlehr", function() {deepEqual( Stem("kirchenlehre"), "kirchenlehr");});
test("kirchenlied -> kirchenlied", function() {deepEqual( Stem("kirchenlied"), "kirchenlied");});
test("kirchenmaus -> kirchenmaus", function() {deepEqual( Stem("kirchenmaus"), "kirchenmaus");});
test("kirchenmitglieder -> kirchenmitglied", function() {deepEqual( Stem("kirchenmitglieder"), "kirchenmitglied");});
test("kirchenmitgliedschaft -> kirchenmitgliedschaft", function() {deepEqual( Stem("kirchenmitgliedschaft"), "kirchenmitgliedschaft");});
test("kirchennahen -> kirchennah", function() {deepEqual( Stem("kirchennahen"), "kirchennah");});
test("kirchenpatronin -> kirchenpatronin", function() {deepEqual( Stem("kirchenpatronin"), "kirchenpatronin");});
test("kirchenpflegemitglieder -> kirchenpflegemitglied", function() {deepEqual( Stem("kirchenpflegemitglieder"), "kirchenpflegemitglied");});
test("kirchenpflegen -> kirchenpfleg", function() {deepEqual( Stem("kirchenpflegen"), "kirchenpfleg");});
test("kirchenpresse -> kirchenpress", function() {deepEqual( Stem("kirchenpresse"), "kirchenpress");});
test("kirchenrates -> kirchenrat", function() {deepEqual( Stem("kirchenrates"), "kirchenrat");});
test("kirchenrechtlich -> kirchenrecht", function() {deepEqual( Stem("kirchenrechtlich"), "kirchenrecht");});
test("kirchenrechtlichen -> kirchenrecht", function() {deepEqual( Stem("kirchenrechtlichen"), "kirchenrecht");});
test("kirchensteuer -> kirchensteu", function() {deepEqual( Stem("kirchensteuer"), "kirchensteu");});
test("kirchensteuerpflicht -> kirchensteuerpflicht", function() {deepEqual( Stem("kirchensteuerpflicht"), "kirchensteuerpflicht");});
test("kirchenstreit -> kirchenstreit", function() {deepEqual( Stem("kirchenstreit"), "kirchenstreit");});
test("kirchensynoden -> kirchensynod", function() {deepEqual( Stem("kirchensynoden"), "kirchensynod");});
test("kirchentag -> kirchentag", function() {deepEqual( Stem("kirchentag"), "kirchentag");});
test("kirchentage -> kirchentag", function() {deepEqual( Stem("kirchentage"), "kirchentag");});
test("kirchentagen -> kirchentag", function() {deepEqual( Stem("kirchentagen"), "kirchentag");});
test("kirchentages -> kirchentag", function() {deepEqual( Stem("kirchentages"), "kirchentag");});
test("kirchenverantwortlichen -> kirchenverantwort", function() {deepEqual( Stem("kirchenverantwortlichen"), "kirchenverantwort");});
test("kirchenwesen -> kirchenwes", function() {deepEqual( Stem("kirchenwesen"), "kirchenwes");});
test("kirchenzeit -> kirchenzeit", function() {deepEqual( Stem("kirchenzeit"), "kirchenzeit");});
test("kirchenzeitung -> kirchenzeit", function() {deepEqual( Stem("kirchenzeitung"), "kirchenzeit");});
test("kirchgang -> kirchgang", function() {deepEqual( Stem("kirchgang"), "kirchgang");});
test("kirchgemeinde -> kirchgemeind", function() {deepEqual( Stem("kirchgemeinde"), "kirchgemeind");});
test("kirchgemeinden -> kirchgemeind", function() {deepEqual( Stem("kirchgemeinden"), "kirchgemeind");});
test("kirchgemeinderäte -> kirchgemeinderat", function() {deepEqual( Stem("kirchgemeinderäte"), "kirchgemeinderat");});
test("kirchgemeinderäten -> kirchgemeinderat", function() {deepEqual( Stem("kirchgemeinderäten"), "kirchgemeinderat");});
test("kirchhof -> kirchhof", function() {deepEqual( Stem("kirchhof"), "kirchhof");});
test("kirchlich -> kirchlich", function() {deepEqual( Stem("kirchlich"), "kirchlich");});
test("kirchliche -> kirchlich", function() {deepEqual( Stem("kirchliche"), "kirchlich");});
test("kirchlichen -> kirchlich", function() {deepEqual( Stem("kirchlichen"), "kirchlich");});
test("kirchliches -> kirchlich", function() {deepEqual( Stem("kirchliches"), "kirchlich");});
test("kirchstühl -> kirchstuhl", function() {deepEqual( Stem("kirchstühl"), "kirchstuhl");});
test("kirchtürme -> kirchturm", function() {deepEqual( Stem("kirchtürme"), "kirchturm");});
test("kirchturmspitz -> kirchturmspitz", function() {deepEqual( Stem("kirchturmspitz"), "kirchturmspitz");});
test("kirchweih -> kirchweih", function() {deepEqual( Stem("kirchweih"), "kirchweih");});
test("kirkgesit -> kirkgesit", function() {deepEqual( Stem("kirkgesit"), "kirkgesit");});
test("kirschen -> kirsch", function() {deepEqual( Stem("kirschen"), "kirsch");});
test("kirschenlippen -> kirschenlipp", function() {deepEqual( Stem("kirschenlippen"), "kirschenlipp");});
test("kirschgeist -> kirschgeist", function() {deepEqual( Stem("kirschgeist"), "kirschgeist");});
test("kirschkern -> kirschk", function() {deepEqual( Stem("kirschkern"), "kirschk");});
test("kirschlorbeerwasser -> kirschlorbeerwass", function() {deepEqual( Stem("kirschlorbeerwasser"), "kirschlorbeerwass");});
test("kirschrot -> kirschrot", function() {deepEqual( Stem("kirschrot"), "kirschrot");});
test("kirschrote -> kirschrot", function() {deepEqual( Stem("kirschrote"), "kirschrot");});
test("kirschrotem -> kirschrot", function() {deepEqual( Stem("kirschrotem"), "kirschrot");});
test("kirschroten -> kirschrot", function() {deepEqual( Stem("kirschroten"), "kirschrot");});
test("kissen -> kiss", function() {deepEqual( Stem("kissen"), "kiss");});
test("kiste -> kist", function() {deepEqual( Stem("kiste"), "kist");});
test("kisten -> kist", function() {deepEqual( Stem("kisten"), "kist");});
test("kitschige -> kitschig", function() {deepEqual( Stem("kitschige"), "kitschig");});
test("kitschiges -> kitschig", function() {deepEqual( Stem("kitschiges"), "kitschig");});
test("kittel -> kittel", function() {deepEqual( Stem("kittel"), "kittel");});
test("kitz -> kitz", function() {deepEqual( Stem("kitz"), "kitz");});
test("kitzelt -> kitzelt", function() {deepEqual( Stem("kitzelt"), "kitzelt");});
test("kitzlein -> kitzlein", function() {deepEqual( Stem("kitzlein"), "kitzlein");});
test("klack -> klack", function() {deepEqual( Stem("klack"), "klack");});
test("kläffer -> klaff", function() {deepEqual( Stem("kläffer"), "klaff");});
test("klage -> klag", function() {deepEqual( Stem("klage"), "klag");});
test("klagel -> klagel", function() {deepEqual( Stem("klagel"), "klagel");});
test("klagen -> klag", function() {deepEqual( Stem("klagen"), "klag");});
test("klagend -> klagend", function() {deepEqual( Stem("klagend"), "klagend");});
test("klagenden -> klagend", function() {deepEqual( Stem("klagenden"), "klagend");});
test("kläger -> klag", function() {deepEqual( Stem("kläger"), "klag");});
test("klagetönen -> klageton", function() {deepEqual( Stem("klagetönen"), "klageton");});
test("kläglich -> klaglich", function() {deepEqual( Stem("kläglich"), "klaglich");});
test("klägliche -> klaglich", function() {deepEqual( Stem("klägliche"), "klaglich");});
test("kläglicher -> klaglich", function() {deepEqual( Stem("kläglicher"), "klaglich");});
test("klaglosen -> klaglos", function() {deepEqual( Stem("klaglosen"), "klaglos");});
test("klagt -> klagt", function() {deepEqual( Stem("klagt"), "klagt");});
test("klagte -> klagt", function() {deepEqual( Stem("klagte"), "klagt");});
test("klagten -> klagt", function() {deepEqual( Stem("klagten"), "klagt");});
test("klammerarmen -> klammerarm", function() {deepEqual( Stem("klammerarmen"), "klammerarm");});
test("klammernd -> klammernd", function() {deepEqual( Stem("klammernd"), "klammernd");});
test("klammerte -> klammert", function() {deepEqual( Stem("klammerte"), "klammert");});
test("klang -> klang", function() {deepEqual( Stem("klang"), "klang");});
test("klange -> klang", function() {deepEqual( Stem("klange"), "klang");});
test("klänge -> klang", function() {deepEqual( Stem("klänge"), "klang");});
test("klangen -> klang", function() {deepEqual( Stem("klangen"), "klang");});
test("klanglos -> klanglos", function() {deepEqual( Stem("klanglos"), "klanglos");});
test("klangvolle -> klangvoll", function() {deepEqual( Stem("klangvolle"), "klangvoll");});
test("klangvoller -> klangvoll", function() {deepEqual( Stem("klangvoller"), "klangvoll");});
test("klapperig -> klapper", function() {deepEqual( Stem("klapperig"), "klapper");});
test("klappern -> klapp", function() {deepEqual( Stem("klappern"), "klapp");});
test("klappernden -> klappernd", function() {deepEqual( Stem("klappernden"), "klappernd");});
test("klapperte -> klappert", function() {deepEqual( Stem("klapperte"), "klappert");});
test("klappte -> klappt", function() {deepEqual( Stem("klappte"), "klappt");});
test("klaps -> klaps", function() {deepEqual( Stem("klaps"), "klaps");});
test("klar -> klar", function() {deepEqual( Stem("klar"), "klar");});
test("klare -> klar", function() {deepEqual( Stem("klare"), "klar");});
test("klaren -> klar", function() {deepEqual( Stem("klaren"), "klar");});
test("klarer -> klar", function() {deepEqual( Stem("klarer"), "klar");});
test("klareren -> klar", function() {deepEqual( Stem("klareren"), "klar");});
test("klares -> klar", function() {deepEqual( Stem("klares"), "klar");});
test("klarheit -> klarheit", function() {deepEqual( Stem("klarheit"), "klarheit");});
test("klarstellung -> klarstell", function() {deepEqual( Stem("klarstellung"), "klarstell");});
test("klarsten -> klarst", function() {deepEqual( Stem("klarsten"), "klarst");});
test("klärt -> klart", function() {deepEqual( Stem("klärt"), "klart");});
test("klass -> klass", function() {deepEqual( Stem("klass"), "klass");});
test("klasse -> klass", function() {deepEqual( Stem("klasse"), "klass");});
test("klassen -> klass", function() {deepEqual( Stem("klassen"), "klass");});
test("klassikers -> klassik", function() {deepEqual( Stem("klassikers"), "klassik");});
test("klassische -> klassisch", function() {deepEqual( Stem("klassische"), "klassisch");});
test("klatschen -> klatsch", function() {deepEqual( Stem("klatschen"), "klatsch");});
test("klatschend -> klatschend", function() {deepEqual( Stem("klatschend"), "klatschend");});
test("klatschereien -> klatscherei", function() {deepEqual( Stem("klatschereien"), "klatscherei");});
test("klatschrose -> klatschros", function() {deepEqual( Stem("klatschrose"), "klatschros");});
test("klatschrosen -> klatschros", function() {deepEqual( Stem("klatschrosen"), "klatschros");});
test("klatschte -> klatscht", function() {deepEqual( Stem("klatschte"), "klatscht");});
test("klatschten -> klatscht", function() {deepEqual( Stem("klatschten"), "klatscht");});
test("klaubte -> klaubt", function() {deepEqual( Stem("klaubte"), "klaubt");});
test("klaue -> klau", function() {deepEqual( Stem("klaue"), "klau");});
test("klauen -> klau", function() {deepEqual( Stem("klauen"), "klau");});
test("klavierstunde -> klavierstund", function() {deepEqual( Stem("klavierstunde"), "klavierstund");});
test("klebe -> kleb", function() {deepEqual( Stem("klebe"), "kleb");});
test("kleben -> kleb", function() {deepEqual( Stem("kleben"), "kleb");});
test("klebet -> klebet", function() {deepEqual( Stem("klebet"), "klebet");});
test("klebt -> klebt", function() {deepEqual( Stem("klebt"), "klebt");});
test("klebte -> klebt", function() {deepEqual( Stem("klebte"), "klebt");});
test("klebten -> klebt", function() {deepEqual( Stem("klebten"), "klebt");});
test("klecks -> kleck", function() {deepEqual( Stem("klecks"), "kleck");});
test("kleckschen -> klecksch", function() {deepEqual( Stem("kleckschen"), "klecksch");});
test("kleckse -> klecks", function() {deepEqual( Stem("kleckse"), "klecks");});
test("klecksigen -> klecksig", function() {deepEqual( Stem("klecksigen"), "klecksig");});
test("klee -> klee", function() {deepEqual( Stem("klee"), "klee");});
test("kleeblatt -> kleeblatt", function() {deepEqual( Stem("kleeblatt"), "kleeblatt");});
test("kleesamen -> kleesam", function() {deepEqual( Stem("kleesamen"), "kleesam");});
test("kleid -> kleid", function() {deepEqual( Stem("kleid"), "kleid");});
test("kleide -> kleid", function() {deepEqual( Stem("kleide"), "kleid");});
test("kleiden -> kleid", function() {deepEqual( Stem("kleiden"), "kleid");});
test("kleider -> kleid", function() {deepEqual( Stem("kleider"), "kleid");});
test("kleiderbedarf -> kleiderbedarf", function() {deepEqual( Stem("kleiderbedarf"), "kleiderbedarf");});
test("kleiderkasten -> kleiderkast", function() {deepEqual( Stem("kleiderkasten"), "kleiderkast");});
test("kleidern -> kleid", function() {deepEqual( Stem("kleidern"), "kleid");});
test("kleiderschrank -> kleiderschrank", function() {deepEqual( Stem("kleiderschrank"), "kleiderschrank");});
test("kleides -> kleid", function() {deepEqual( Stem("kleides"), "kleid");});
test("kleidete -> kleidet", function() {deepEqual( Stem("kleidete"), "kleidet");});
test("kleidung -> kleidung", function() {deepEqual( Stem("kleidung"), "kleidung");});
test("kleidungsstück -> kleidungsstuck", function() {deepEqual( Stem("kleidungsstück"), "kleidungsstuck");});
test("kleie -> kleie", function() {deepEqual( Stem("kleie"), "kleie");});
test("kleiekörner -> kleiekorn", function() {deepEqual( Stem("kleiekörner"), "kleiekorn");});
test("klein -> klein", function() {deepEqual( Stem("klein"), "klein");});
test("kleine -> klein", function() {deepEqual( Stem("kleine"), "klein");});
test("kleinedelmann -> kleinedelmann", function() {deepEqual( Stem("kleinedelmann"), "kleinedelmann");});
test("kleinedelmanne -> kleinedelmann", function() {deepEqual( Stem("kleinedelmanne"), "kleinedelmann");});
test("kleinem -> klein", function() {deepEqual( Stem("kleinem"), "klein");});
test("kleinen -> klein", function() {deepEqual( Stem("kleinen"), "klein");});
test("kleiner -> klein", function() {deepEqual( Stem("kleiner"), "klein");});
test("kleinere -> klein", function() {deepEqual( Stem("kleinere"), "klein");});
test("kleineren -> klein", function() {deepEqual( Stem("kleineren"), "klein");});
test("kleinern -> klein", function() {deepEqual( Stem("kleinern"), "klein");});
test("kleines -> klein", function() {deepEqual( Stem("kleines"), "klein");});
test("kleinheit -> kleinheit", function() {deepEqual( Stem("kleinheit"), "kleinheit");});
test("kleinigkeit -> kleinig", function() {deepEqual( Stem("kleinigkeit"), "kleinig");});
test("kleinigkeiten -> kleinig", function() {deepEqual( Stem("kleinigkeiten"), "kleinig");});
test("kleinlaut -> kleinlaut", function() {deepEqual( Stem("kleinlaut"), "kleinlaut");});
test("kleinlich -> kleinlich", function() {deepEqual( Stem("kleinlich"), "kleinlich");});
test("kleinliche -> kleinlich", function() {deepEqual( Stem("kleinliche"), "kleinlich");});
test("kleinlichen -> kleinlich", function() {deepEqual( Stem("kleinlichen"), "kleinlich");});
test("kleinlicher -> kleinlich", function() {deepEqual( Stem("kleinlicher"), "kleinlich");});
test("kleinlichsten -> kleinlich", function() {deepEqual( Stem("kleinlichsten"), "kleinlich");});
test("kleinmachnow -> kleinmachnow", function() {deepEqual( Stem("kleinmachnow"), "kleinmachnow");});
test("kleinmütig -> kleinmut", function() {deepEqual( Stem("kleinmütig"), "kleinmut");});
test("kleinod -> kleinod", function() {deepEqual( Stem("kleinod"), "kleinod");});
test("kleinstädterinnen -> kleinstadterinn", function() {deepEqual( Stem("kleinstädterinnen"), "kleinstadterinn");});
test("kleinste -> klein", function() {deepEqual( Stem("kleinste"), "klein");});
test("kleinsten -> klein", function() {deepEqual( Stem("kleinsten"), "klein");});
test("kleinster -> klein", function() {deepEqual( Stem("kleinster"), "klein");});
test("kleinstes -> klein", function() {deepEqual( Stem("kleinstes"), "klein");});
test("kleinviehs -> kleinvieh", function() {deepEqual( Stem("kleinviehs"), "kleinvieh");});
test("klemme -> klemm", function() {deepEqual( Stem("klemme"), "klemm");});
test("klemmte -> klemmt", function() {deepEqual( Stem("klemmte"), "klemmt");});
test("kletterns -> klettern", function() {deepEqual( Stem("kletterns"), "klettern");});
test("kletterte -> klettert", function() {deepEqual( Stem("kletterte"), "klettert");});
test("kletterten -> klettert", function() {deepEqual( Stem("kletterten"), "klettert");});
test("klickklackklecks -> klickklackkleck", function() {deepEqual( Stem("klickklackklecks"), "klickklackkleck");});
test("klicks -> klick", function() {deepEqual( Stem("klicks"), "klick");});
test("klient -> klient", function() {deepEqual( Stem("klient"), "klient");});
test("klingel -> klingel", function() {deepEqual( Stem("klingel"), "klingel");});
test("klingelte -> klingelt", function() {deepEqual( Stem("klingelte"), "klingelt");});
test("klingen -> kling", function() {deepEqual( Stem("klingen"), "kling");});
test("klingende -> klingend", function() {deepEqual( Stem("klingende"), "klingend");});
test("klingenden -> klingend", function() {deepEqual( Stem("klingenden"), "klingend");});
test("klingender -> klingend", function() {deepEqual( Stem("klingender"), "klingend");});
test("klingt -> klingt", function() {deepEqual( Stem("klingt"), "klingt");});
test("klinke -> klink", function() {deepEqual( Stem("klinke"), "klink");});
test("klippe -> klipp", function() {deepEqual( Stem("klippe"), "klipp");});
test("klippen -> klipp", function() {deepEqual( Stem("klippen"), "klipp");});
test("klirren -> klirr", function() {deepEqual( Stem("klirren"), "klirr");});
test("klirrenden -> klirrend", function() {deepEqual( Stem("klirrenden"), "klirrend");});
test("klirrrr -> klirrrr", function() {deepEqual( Stem("klirrrr"), "klirrrr");});
test("klirrte -> klirrt", function() {deepEqual( Stem("klirrte"), "klirrt");});
test("klirrten -> klirrt", function() {deepEqual( Stem("klirrten"), "klirrt");});
test("kloan -> kloan", function() {deepEqual( Stem("kloan"), "kloan");});
test("klopfen -> klopf", function() {deepEqual( Stem("klopfen"), "klopf");});
test("klopfendem -> klopfend", function() {deepEqual( Stem("klopfendem"), "klopfend");});
test("klopfenden -> klopfend", function() {deepEqual( Stem("klopfenden"), "klopfend");});
test("klopfte -> klopft", function() {deepEqual( Stem("klopfte"), "klopft");});
test("klösschen -> klossch", function() {deepEqual( Stem("klösschen"), "klossch");});
test("kloster -> klost", function() {deepEqual( Stem("kloster"), "klost");});
test("klöster -> klost", function() {deepEqual( Stem("klöster"), "klost");});
test("klosters -> klost", function() {deepEqual( Stem("klosters"), "klost");});
test("klotziger -> klotzig", function() {deepEqual( Stem("klotziger"), "klotzig");});
test("kluft -> kluft", function() {deepEqual( Stem("kluft"), "kluft");});
test("klüfteten -> kluftet", function() {deepEqual( Stem("klüfteten"), "kluftet");});
test("klug -> klug", function() {deepEqual( Stem("klug"), "klug");});
test("kluge -> klug", function() {deepEqual( Stem("kluge"), "klug");});
test("klugen -> klug", function() {deepEqual( Stem("klugen"), "klug");});
test("kluger -> klug", function() {deepEqual( Stem("kluger"), "klug");});
test("klüger -> klug", function() {deepEqual( Stem("klüger"), "klug");});
test("kluges -> klug", function() {deepEqual( Stem("kluges"), "klug");});
test("klugheit -> klugheit", function() {deepEqual( Stem("klugheit"), "klugheit");});
test("klugheitsregel -> klugheitsregel", function() {deepEqual( Stem("klugheitsregel"), "klugheitsregel");});
test("klüglich -> kluglich", function() {deepEqual( Stem("klüglich"), "kluglich");});
test("klügste -> klug", function() {deepEqual( Stem("klügste"), "klug");});
test("klümpchen -> klumpch", function() {deepEqual( Stem("klümpchen"), "klumpch");});
test("klumpen -> klump", function() {deepEqual( Stem("klumpen"), "klump");});
test("knab -> knab", function() {deepEqual( Stem("knab"), "knab");});
test("knabbern -> knabb", function() {deepEqual( Stem("knabbern"), "knabb");});
test("knäbchen -> knabch", function() {deepEqual( Stem("knäbchen"), "knabch");});
test("knabe -> knab", function() {deepEqual( Stem("knabe"), "knab");});
test("knaben -> knab", function() {deepEqual( Stem("knaben"), "knab");});
test("knabenalter -> knabenalt", function() {deepEqual( Stem("knabenalter"), "knabenalt");});
test("knäblein -> knablein", function() {deepEqual( Stem("knäblein"), "knablein");});
test("knäbleins -> knablein", function() {deepEqual( Stem("knäbleins"), "knablein");});
test("knackende -> knackend", function() {deepEqual( Stem("knackende"), "knackend");});
test("knall -> knall", function() {deepEqual( Stem("knall"), "knall");});
test("knallen -> knall", function() {deepEqual( Stem("knallen"), "knall");});
test("knallgelber -> knallgelb", function() {deepEqual( Stem("knallgelber"), "knallgelb");});
test("knallt -> knallt", function() {deepEqual( Stem("knallt"), "knallt");});
test("knapp -> knapp", function() {deepEqual( Stem("knapp"), "knapp");});
test("knarrte -> knarrt", function() {deepEqual( Stem("knarrte"), "knarrt");});
test("knatter -> knatt", function() {deepEqual( Stem("knatter"), "knatt");});
test("knäuel -> knauel", function() {deepEqual( Stem("knäuel"), "knauel");});
test("knäufen -> knauf", function() {deepEqual( Stem("knäufen"), "knauf");});
test("knauserig -> knauser", function() {deepEqual( Stem("knauserig"), "knauser");});
test("knebel -> knebel", function() {deepEqual( Stem("knebel"), "knebel");});
test("knecht -> knecht", function() {deepEqual( Stem("knecht"), "knecht");});
test("knechtchen -> knechtch", function() {deepEqual( Stem("knechtchen"), "knechtch");});
test("knechte -> knecht", function() {deepEqual( Stem("knechte"), "knecht");});
test("knechten -> knecht", function() {deepEqual( Stem("knechten"), "knecht");});
test("knechtes -> knecht", function() {deepEqual( Stem("knechtes"), "knecht");});
test("knechtisch -> knechtisch", function() {deepEqual( Stem("knechtisch"), "knechtisch");});
test("knechts -> knecht", function() {deepEqual( Stem("knechts"), "knecht");});
test("knechtschaft -> knechtschaft", function() {deepEqual( Stem("knechtschaft"), "knechtschaft");});
test("kneipchen -> kneipch", function() {deepEqual( Stem("kneipchen"), "kneipch");});
test("kneipe -> kneip", function() {deepEqual( Stem("kneipe"), "kneip");});
test("kneipen -> kneip", function() {deepEqual( Stem("kneipen"), "kneip");});
test("kneipentisch -> kneipent", function() {deepEqual( Stem("kneipentisch"), "kneipent");});
test("kneten -> knet", function() {deepEqual( Stem("kneten"), "knet");});
test("knicks -> knick", function() {deepEqual( Stem("knicks"), "knick");});
test("knickse -> knicks", function() {deepEqual( Stem("knickse"), "knicks");});
test("knickste -> knick", function() {deepEqual( Stem("knickste"), "knick");});
test("knickte -> knickt", function() {deepEqual( Stem("knickte"), "knickt");});
test("knickten -> knickt", function() {deepEqual( Stem("knickten"), "knickt");});
test("knie -> knie", function() {deepEqual( Stem("knie"), "knie");});
test("kniee -> kniee", function() {deepEqual( Stem("kniee"), "kniee");});
test("knieen -> knieen", function() {deepEqual( Stem("knieen"), "knieen");});
test("knieholzäste -> knieholzast", function() {deepEqual( Stem("knieholzäste"), "knieholzast");});
test("kniehosen -> kniehos", function() {deepEqual( Stem("kniehosen"), "kniehos");});
test("knien -> knien", function() {deepEqual( Stem("knien"), "knien");});
test("kniete -> kniet", function() {deepEqual( Stem("kniete"), "kniet");});
test("knieten -> kniet", function() {deepEqual( Stem("knieten"), "kniet");});
test("kniff -> kniff", function() {deepEqual( Stem("kniff"), "kniff");});
test("knirschen -> knirsch", function() {deepEqual( Stem("knirschen"), "knirsch");});
test("knirschend -> knirschend", function() {deepEqual( Stem("knirschend"), "knirschend");});
test("knisternd -> knisternd", function() {deepEqual( Stem("knisternd"), "knisternd");});
test("knisternden -> knisternd", function() {deepEqual( Stem("knisternden"), "knisternd");});
test("knisterte -> knistert", function() {deepEqual( Stem("knisterte"), "knistert");});
test("knisterten -> knistert", function() {deepEqual( Stem("knisterten"), "knistert");});
test("knitternden -> knitternd", function() {deepEqual( Stem("knitternden"), "knitternd");});
test("knobeln -> knobeln", function() {deepEqual( Stem("knobeln"), "knobeln");});
test("knobelten -> knobelt", function() {deepEqual( Stem("knobelten"), "knobelt");});
test("knöchel -> knochel", function() {deepEqual( Stem("knöchel"), "knochel");});
test("knochen -> knoch", function() {deepEqual( Stem("knochen"), "knoch");});
test("knochengerippe -> knochengeripp", function() {deepEqual( Stem("knochengerippe"), "knochengeripp");});
test("knochenjobs -> knochenjob", function() {deepEqual( Stem("knochenjobs"), "knochenjob");});
test("knöchern -> knoch", function() {deepEqual( Stem("knöchern"), "knoch");});
test("knöchernes -> knochern", function() {deepEqual( Stem("knöchernes"), "knochern");});
test("knochige -> knochig", function() {deepEqual( Stem("knochige"), "knochig");});
test("knochiges -> knochig", function() {deepEqual( Stem("knochiges"), "knochig");});
test("knopf -> knopf", function() {deepEqual( Stem("knopf"), "knopf");});
test("knöpfe -> knopf", function() {deepEqual( Stem("knöpfe"), "knopf");});
test("knöpfen -> knopf", function() {deepEqual( Stem("knöpfen"), "knopf");});
test("knopfmacher -> knopfmach", function() {deepEqual( Stem("knopfmacher"), "knopfmach");});
test("knopfmacherei -> knopfmacherei", function() {deepEqual( Stem("knopfmacherei"), "knopfmacherei");});
test("knorpel -> knorpel", function() {deepEqual( Stem("knorpel"), "knorpel");});
test("knorrige -> knorrig", function() {deepEqual( Stem("knorrige"), "knorrig");});
test("knospen -> knosp", function() {deepEqual( Stem("knospen"), "knosp");});
test("knospenden -> knospend", function() {deepEqual( Stem("knospenden"), "knospend");});
test("knösperl -> knosperl", function() {deepEqual( Stem("knösperl"), "knosperl");});
test("knoten -> knot", function() {deepEqual( Stem("knoten"), "knot");});
test("knotige -> knotig", function() {deepEqual( Stem("knotige"), "knotig");});
test("knüffe -> knuff", function() {deepEqual( Stem("knüffe"), "knuff");});
test("knüffen -> knuff", function() {deepEqual( Stem("knüffen"), "knuff");});
test("knüllte -> knullt", function() {deepEqual( Stem("knüllte"), "knullt");});
test("knüpfen -> knupf", function() {deepEqual( Stem("knüpfen"), "knupf");});
test("knüpfend -> knupfend", function() {deepEqual( Stem("knüpfend"), "knupfend");});
test("knüpfte -> knupft", function() {deepEqual( Stem("knüpfte"), "knupft");});
test("knüpperte -> knuppert", function() {deepEqual( Stem("knüpperte"), "knuppert");});
test("knusprig -> knusprig", function() {deepEqual( Stem("knusprig"), "knusprig");});
test("knutenpeitsche -> knutenpeitsch", function() {deepEqual( Stem("knutenpeitsche"), "knutenpeitsch");});
test("koalitionskrise -> koalitionskris", function() {deepEqual( Stem("koalitionskrise"), "koalitionskris");});
test("koalitionssystem -> koalitionssyst", function() {deepEqual( Stem("koalitionssystem"), "koalitionssyst");});
test("koalitionsversuche -> koalitionsversuch", function() {deepEqual( Stem("koalitionsversuche"), "koalitionsversuch");});
test("koan -> koan", function() {deepEqual( Stem("koan"), "koan");});
test("kobold -> kobold", function() {deepEqual( Stem("kobold"), "kobold");});
test("koch -> koch", function() {deepEqual( Stem("koch"), "koch");});
test("kochen -> koch", function() {deepEqual( Stem("kochen"), "koch");});
test("kochherd -> kochherd", function() {deepEqual( Stem("kochherd"), "kochherd");});
test("köchin -> kochin", function() {deepEqual( Stem("köchin"), "kochin");});
test("kocht -> kocht", function() {deepEqual( Stem("kocht"), "kocht");});
test("kochte -> kocht", function() {deepEqual( Stem("kochte"), "kocht");});
test("kock -> kock", function() {deepEqual( Stem("kock"), "kock");});
test("koffer -> koff", function() {deepEqual( Stem("koffer"), "koff");});
test("kognak -> kognak", function() {deepEqual( Stem("kognak"), "kognak");});
test("kohl -> kohl", function() {deepEqual( Stem("kohl"), "kohl");});
test("kohle -> kohl", function() {deepEqual( Stem("kohle"), "kohl");});
test("kohlen -> kohl", function() {deepEqual( Stem("kohlen"), "kohl");});
test("kohlenbrennern -> kohlenbrenn", function() {deepEqual( Stem("kohlenbrennern"), "kohlenbrenn");});
test("kohlkräuter -> kohlkraut", function() {deepEqual( Stem("kohlkräuter"), "kohlkraut");});
test("kokette -> kokett", function() {deepEqual( Stem("kokette"), "kokett");});
test("koketterie -> koketteri", function() {deepEqual( Stem("koketterie"), "koketteri");});
test("kolben -> kolb", function() {deepEqual( Stem("kolben"), "kolb");});
test("kollaboration -> kollaboration", function() {deepEqual( Stem("kollaboration"), "kollaboration");});
test("kollaboriert -> kollaboriert", function() {deepEqual( Stem("kollaboriert"), "kollaboriert");});
test("kollakowsky -> kollakowsky", function() {deepEqual( Stem("kollakowsky"), "kollakowsky");});
test("kollakowskys -> kollakowskys", function() {deepEqual( Stem("kollakowskys"), "kollakowskys");});
test("kollege -> kolleg", function() {deepEqual( Stem("kollege"), "kolleg");});
test("kollegen -> kolleg", function() {deepEqual( Stem("kollegen"), "kolleg");});
test("kollegium -> kollegium", function() {deepEqual( Stem("kollegium"), "kollegium");});
test("kollekteur -> kollekteur", function() {deepEqual( Stem("kollekteur"), "kollekteur");});
test("köllen -> koll", function() {deepEqual( Stem("köllen"), "koll");});
test("koller -> koll", function() {deepEqual( Stem("koller"), "koll");});
test("kollerte -> kollert", function() {deepEqual( Stem("kollerte"), "kollert");});
test("kölner -> koln", function() {deepEqual( Stem("kölner"), "koln");});
test("kölnischem -> kolnisch", function() {deepEqual( Stem("kölnischem"), "kolnisch");});
test("kolonne -> kolonn", function() {deepEqual( Stem("kolonne"), "kolonn");});
test("kolorit -> kolorit", function() {deepEqual( Stem("kolorit"), "kolorit");});
test("kolossal -> kolossal", function() {deepEqual( Stem("kolossal"), "kolossal");});
test("kolossale -> kolossal", function() {deepEqual( Stem("kolossale"), "kolossal");});
test("kolossales -> kolossal", function() {deepEqual( Stem("kolossales"), "kolossal");});
test("kolumbus -> kolumbus", function() {deepEqual( Stem("kolumbus"), "kolumbus");});
test("kom -> kom", function() {deepEqual( Stem("kom"), "kom");});
test("kombattant -> kombattant", function() {deepEqual( Stem("kombattant"), "kombattant");});
test("kombinationen -> kombination", function() {deepEqual( Stem("kombinationen"), "kombination");});
test("kombinierten -> kombiniert", function() {deepEqual( Stem("kombinierten"), "kombiniert");});
test("komet -> komet", function() {deepEqual( Stem("komet"), "komet");});
test("kometenkohl -> kometenkohl", function() {deepEqual( Stem("kometenkohl"), "kometenkohl");});
test("komiker -> komik", function() {deepEqual( Stem("komiker"), "komik");});
test("komikergrinsen -> komikergrins", function() {deepEqual( Stem("komikergrinsen"), "komikergrins");});
test("komikers -> komik", function() {deepEqual( Stem("komikers"), "komik");});
test("komisch -> komisch", function() {deepEqual( Stem("komisch"), "komisch");});
test("komische -> komisch", function() {deepEqual( Stem("komische"), "komisch");});
test("komischen -> komisch", function() {deepEqual( Stem("komischen"), "komisch");});
test("komitee -> komite", function() {deepEqual( Stem("komitee"), "komite");});
test("komm -> komm", function() {deepEqual( Stem("komm"), "komm");});
test("kommandeur -> kommandeur", function() {deepEqual( Stem("kommandeur"), "kommandeur");});
test("kommandieren -> kommandi", function() {deepEqual( Stem("kommandieren"), "kommandi");});
test("kommando -> kommando", function() {deepEqual( Stem("kommando"), "kommando");});
test("kommandowort -> kommandowort", function() {deepEqual( Stem("kommandowort"), "kommandowort");});
test("komme -> komm", function() {deepEqual( Stem("komme"), "komm");});
test("kommen -> komm", function() {deepEqual( Stem("kommen"), "komm");});
test("kommend -> kommend", function() {deepEqual( Stem("kommend"), "kommend");});
test("kommende -> kommend", function() {deepEqual( Stem("kommende"), "kommend");});
test("kommenden -> kommend", function() {deepEqual( Stem("kommenden"), "kommend");});
test("kommendes -> kommend", function() {deepEqual( Stem("kommendes"), "kommend");});
test("kommens -> komm", function() {deepEqual( Stem("kommens"), "komm");});
test("kommentar -> kommentar", function() {deepEqual( Stem("kommentar"), "kommentar");});
test("kommet -> kommet", function() {deepEqual( Stem("kommet"), "kommet");});
test("kommission -> kommission", function() {deepEqual( Stem("kommission"), "kommission");});
test("kommissionen -> kommission", function() {deepEqual( Stem("kommissionen"), "kommission");});
test("kommode -> kommod", function() {deepEqual( Stem("kommode"), "kommod");});
test("kommr -> kommr", function() {deepEqual( Stem("kommr"), "kommr");});
test("kommst -> komm", function() {deepEqual( Stem("kommst"), "komm");});
test("kommt -> kommt", function() {deepEqual( Stem("kommt"), "kommt");});
test("kommunalverwaltung -> kommunalverwalt", function() {deepEqual( Stem("kommunalverwaltung"), "kommunalverwalt");});
test("kommunikationshindernis -> kommunikationshindernis", function() {deepEqual( Stem("kommunikationshindernis"), "kommunikationshindernis");});
test("komödie -> komodi", function() {deepEqual( Stem("komödie"), "komodi");});
test("komödien -> komodi", function() {deepEqual( Stem("komödien"), "komodi");});
test("kompagnie -> kompagni", function() {deepEqual( Stem("kompagnie"), "kompagni");});
test("kompagnien -> kompagni", function() {deepEqual( Stem("kompagnien"), "kompagni");});
test("kompagnon -> kompagnon", function() {deepEqual( Stem("kompagnon"), "kompagnon");});
test("kompaniechef -> kompaniechef", function() {deepEqual( Stem("kompaniechef"), "kompaniechef");});
test("kompass -> kompass", function() {deepEqual( Stem("kompass"), "kompass");});
test("kompensation -> kompensation", function() {deepEqual( Stem("kompensation"), "kompensation");});
test("komplikationen -> komplikation", function() {deepEqual( Stem("komplikationen"), "komplikation");});
test("kompliment -> kompliment", function() {deepEqual( Stem("kompliment"), "kompliment");});
test("komplimenten -> kompliment", function() {deepEqual( Stem("komplimenten"), "kompliment");});
test("komplimentierten -> komplimentiert", function() {deepEqual( Stem("komplimentierten"), "komplimentiert");});
test("komponiert -> komponiert", function() {deepEqual( Stem("komponiert"), "komponiert");});
test("komptoirs -> komptoir", function() {deepEqual( Stem("komptoirs"), "komptoir");});
test("kon -> kon", function() {deepEqual( Stem("kon"), "kon");});
test("kön -> kon", function() {deepEqual( Stem("kön"), "kon");});
test("konfekt -> konfekt", function() {deepEqual( Stem("konfekt"), "konfekt");});
test("konfirmationsschein -> konfirmationsschein", function() {deepEqual( Stem("konfirmationsschein"), "konfirmationsschein");});
test("konfirmationsunterrichte -> konfirmationsunterricht", function() {deepEqual( Stem("konfirmationsunterrichte"), "konfirmationsunterricht");});
test("konfirmiert -> konfirmiert", function() {deepEqual( Stem("konfirmiert"), "konfirmiert");});
test("konfisziert -> konfisziert", function() {deepEqual( Stem("konfisziert"), "konfisziert");});
test("konflikt -> konflikt", function() {deepEqual( Stem("konflikt"), "konflikt");});
test("konflikten -> konflikt", function() {deepEqual( Stem("konflikten"), "konflikt");});
test("konfrontiert -> konfrontiert", function() {deepEqual( Stem("konfrontiert"), "konfrontiert");});
test("konfundieren -> konfundi", function() {deepEqual( Stem("konfundieren"), "konfundi");});
test("konfus -> konfus", function() {deepEqual( Stem("konfus"), "konfus");});
test("könig -> konig", function() {deepEqual( Stem("könig"), "konig");});
test("könige -> konig", function() {deepEqual( Stem("könige"), "konig");});
test("königen -> konig", function() {deepEqual( Stem("königen"), "konig");});
test("königin -> konigin", function() {deepEqual( Stem("königin"), "konigin");});
test("königinnen -> koniginn", function() {deepEqual( Stem("königinnen"), "koniginn");});
test("königl -> konigl", function() {deepEqual( Stem("königl"), "konigl");});
test("königlich -> konig", function() {deepEqual( Stem("königlich"), "konig");});
test("königliche -> konig", function() {deepEqual( Stem("königliche"), "konig");});
test("königlichen -> konig", function() {deepEqual( Stem("königlichen"), "konig");});
test("königlichsten -> konig", function() {deepEqual( Stem("königlichsten"), "konig");});
test("königreich -> konigreich", function() {deepEqual( Stem("königreich"), "konigreich");});
test("königreichen -> konigreich", function() {deepEqual( Stem("königreichen"), "konigreich");});
test("königreiches -> konigreich", function() {deepEqual( Stem("königreiches"), "konigreich");});
test("königs -> konig", function() {deepEqual( Stem("königs"), "konig");});
test("königsmantel -> konigsmantel", function() {deepEqual( Stem("königsmantel"), "konigsmantel");});
test("königspaar -> konigspaar", function() {deepEqual( Stem("königspaar"), "konigspaar");});
test("königsschiessen -> konigsschiess", function() {deepEqual( Stem("königsschiessen"), "konigsschiess");});
test("königssee -> konigsse", function() {deepEqual( Stem("königssee"), "konigsse");});
test("königsseer -> konigsse", function() {deepEqual( Stem("königsseer"), "konigsse");});
test("königssohn -> konigssohn", function() {deepEqual( Stem("königssohn"), "konigssohn");});
test("konjunktiv -> konjunktiv", function() {deepEqual( Stem("konjunktiv"), "konjunktiv");});
test("konkreten -> konkret", function() {deepEqual( Stem("konkreten"), "konkret");});
test("konkurse -> konkurs", function() {deepEqual( Stem("konkurse"), "konkurs");});
test("könn -> konn", function() {deepEqual( Stem("könn"), "konn");});
test("könne -> konn", function() {deepEqual( Stem("könne"), "konn");});
test("können -> konn", function() {deepEqual( Stem("können"), "konn");});
test("könnet -> konnet", function() {deepEqual( Stem("könnet"), "konnet");});
test("konnt -> konnt", function() {deepEqual( Stem("konnt"), "konnt");});
test("könnt -> konnt", function() {deepEqual( Stem("könnt"), "konnt");});
test("konnte -> konnt", function() {deepEqual( Stem("konnte"), "konnt");});
test("könnte -> konnt", function() {deepEqual( Stem("könnte"), "konnt");});
test("konnten -> konnt", function() {deepEqual( Stem("konnten"), "konnt");});
test("könnten -> konnt", function() {deepEqual( Stem("könnten"), "konnt");});
test("könntest -> konnt", function() {deepEqual( Stem("könntest"), "konnt");});
test("konsequent -> konsequent", function() {deepEqual( Stem("konsequent"), "konsequent");});
test("konsequente -> konsequent", function() {deepEqual( Stem("konsequente"), "konsequent");});
test("konservatismus -> konservatismus", function() {deepEqual( Stem("konservatismus"), "konservatismus");});
test("konservativ -> konservativ", function() {deepEqual( Stem("konservativ"), "konservativ");});
test("konservativen -> konservativ", function() {deepEqual( Stem("konservativen"), "konservativ");});
test("konservativer -> konservativ", function() {deepEqual( Stem("konservativer"), "konservativ");});
test("konserviert -> konserviert", function() {deepEqual( Stem("konserviert"), "konserviert");});
test("konstantinopel -> konstantinopel", function() {deepEqual( Stem("konstantinopel"), "konstantinopel");});
test("konstellationen -> konstellation", function() {deepEqual( Stem("konstellationen"), "konstellation");});
test("konstitutiv -> konstitutiv", function() {deepEqual( Stem("konstitutiv"), "konstitutiv");});
test("konstruiert -> konstruiert", function() {deepEqual( Stem("konstruiert"), "konstruiert");});
test("konstruktion -> konstruktion", function() {deepEqual( Stem("konstruktion"), "konstruktion");});
test("konsum -> konsum", function() {deepEqual( Stem("konsum"), "konsum");});
test("konsumenten -> konsument", function() {deepEqual( Stem("konsumenten"), "konsument");});
test("konsumieren -> konsumi", function() {deepEqual( Stem("konsumieren"), "konsumi");});
test("konsumiert -> konsumiert", function() {deepEqual( Stem("konsumiert"), "konsumiert");});
test("konsumkredit -> konsumkredit", function() {deepEqual( Stem("konsumkredit"), "konsumkredit");});
test("konsumwelle -> konsumwell", function() {deepEqual( Stem("konsumwelle"), "konsumwell");});
test("kontakt -> kontakt", function() {deepEqual( Stem("kontakt"), "kontakt");});
test("kontakte -> kontakt", function() {deepEqual( Stem("kontakte"), "kontakt");});
test("kontemplative -> kontemplativ", function() {deepEqual( Stem("kontemplative"), "kontemplativ");});
test("kontinent -> kontinent", function() {deepEqual( Stem("kontinent"), "kontinent");});
test("kontinental -> kontinental", function() {deepEqual( Stem("kontinental"), "kontinental");});
test("kontinuierlichen -> kontinui", function() {deepEqual( Stem("kontinuierlichen"), "kontinui");});
test("konto -> konto", function() {deepEqual( Stem("konto"), "konto");});
test("kontorstuhl -> kontorstuhl", function() {deepEqual( Stem("kontorstuhl"), "kontorstuhl");});
test("kontradiktorisch -> kontradiktor", function() {deepEqual( Stem("kontradiktorisch"), "kontradiktor");});
test("kontrakt -> kontrakt", function() {deepEqual( Stem("kontrakt"), "kontrakt");});
test("kontraktwidrigen -> kontraktwidr", function() {deepEqual( Stem("kontraktwidrigen"), "kontraktwidr");});
test("kontrast -> kontrast", function() {deepEqual( Stem("kontrast"), "kontrast");});
test("kontrastierte -> kontrastiert", function() {deepEqual( Stem("kontrastierte"), "kontrastiert");});
test("kontraventionsbusse -> kontraventionsbuss", function() {deepEqual( Stem("kontraventionsbusse"), "kontraventionsbuss");});
test("kontrolliert -> kontrolliert", function() {deepEqual( Stem("kontrolliert"), "kontrolliert");});
test("kontroverse -> kontrovers", function() {deepEqual( Stem("kontroverse"), "kontrovers");});
test("konventikel -> konventikel", function() {deepEqual( Stem("konventikel"), "konventikel");});
test("konvertiert -> konvertiert", function() {deepEqual( Stem("konvertiert"), "konvertiert");});
test("konzentriert -> konzentriert", function() {deepEqual( Stem("konzentriert"), "konzentriert");});
test("konzert -> konzert", function() {deepEqual( Stem("konzert"), "konzert");});
test("kooperation -> kooperation", function() {deepEqual( Stem("kooperation"), "kooperation");});
test("koordiniert -> koordiniert", function() {deepEqual( Stem("koordiniert"), "koordiniert");});
test("kopf -> kopf", function() {deepEqual( Stem("kopf"), "kopf");});
test("köpfchen -> kopfch", function() {deepEqual( Stem("köpfchen"), "kopfch");});
test("kopfe -> kopf", function() {deepEqual( Stem("kopfe"), "kopf");});
test("köpfe -> kopf", function() {deepEqual( Stem("köpfe"), "kopf");});
test("köpfen -> kopf", function() {deepEqual( Stem("köpfen"), "kopf");});
test("kopfes -> kopf", function() {deepEqual( Stem("kopfes"), "kopf");});
test("kopfhängen -> kopfhang", function() {deepEqual( Stem("kopfhängen"), "kopfhang");});
test("kopfkissen -> kopfkiss", function() {deepEqual( Stem("kopfkissen"), "kopfkiss");});
test("köpflings -> kopfling", function() {deepEqual( Stem("köpflings"), "kopfling");});
test("kopfnicken -> kopfnick", function() {deepEqual( Stem("kopfnicken"), "kopfnick");});
test("kopfputz -> kopfputz", function() {deepEqual( Stem("kopfputz"), "kopfputz");});
test("kopfschmerzen -> kopfschmerz", function() {deepEqual( Stem("kopfschmerzen"), "kopfschmerz");});
test("kopfschüttelnd -> kopfschuttelnd", function() {deepEqual( Stem("kopfschüttelnd"), "kopfschuttelnd");});
test("kopftuches -> kopftuch", function() {deepEqual( Stem("kopftuches"), "kopftuch");});
test("kopfüber -> kopfub", function() {deepEqual( Stem("kopfüber"), "kopfub");});
test("kopfweh -> kopfweh", function() {deepEqual( Stem("kopfweh"), "kopfweh");});
test("kopfwendung -> kopfwend", function() {deepEqual( Stem("kopfwendung"), "kopfwend");});
test("kopfzerbrechen -> kopfzerbrech", function() {deepEqual( Stem("kopfzerbrechen"), "kopfzerbrech");});
test("kopien -> kopi", function() {deepEqual( Stem("kopien"), "kopi");});
test("kopiermaschinen -> kopiermaschin", function() {deepEqual( Stem("kopiermaschinen"), "kopiermaschin");});
test("koppe -> kopp", function() {deepEqual( Stem("koppe"), "kopp");});
test("koppelpferde -> koppelpferd", function() {deepEqual( Stem("koppelpferde"), "koppelpferd");});
test("koppenhöhe -> koppenhoh", function() {deepEqual( Stem("koppenhöhe"), "koppenhoh");});
test("koppenluft -> koppenluft", function() {deepEqual( Stem("koppenluft"), "koppenluft");});
test("koppenplan -> koppenplan", function() {deepEqual( Stem("koppenplan"), "koppenplan");});
test("koppenplanes -> koppenplan", function() {deepEqual( Stem("koppenplanes"), "koppenplan");});
test("kopulieren -> kopuli", function() {deepEqual( Stem("kopulieren"), "kopuli");});
test("kor -> kor", function() {deepEqual( Stem("kor"), "kor");});
test("korah -> korah", function() {deepEqual( Stem("korah"), "korah");});
test("korahiten -> korahit", function() {deepEqual( Stem("korahiten"), "korahit");});
test("korahs -> korah", function() {deepEqual( Stem("korahs"), "korah");});
test("korallenschnur -> korallenschnur", function() {deepEqual( Stem("korallenschnur"), "korallenschnur");});
test("korb -> korb", function() {deepEqual( Stem("korb"), "korb");});
test("körbchen -> korbch", function() {deepEqual( Stem("körbchen"), "korbch");});
test("korbe -> korb", function() {deepEqual( Stem("korbe"), "korb");});
test("körbe -> korb", function() {deepEqual( Stem("körbe"), "korb");});
test("körben -> korb", function() {deepEqual( Stem("körben"), "korb");});
test("korbträgern -> korbtrag", function() {deepEqual( Stem("korbträgern"), "korbtrag");});
test("korn -> korn", function() {deepEqual( Stem("korn"), "korn");});
test("kornähre -> kornahr", function() {deepEqual( Stem("kornähre"), "kornahr");});
test("kornblumen -> kornblum", function() {deepEqual( Stem("kornblumen"), "kornblum");});
test("korne -> korn", function() {deepEqual( Stem("korne"), "korn");});
test("kornes -> korn", function() {deepEqual( Stem("kornes"), "korn");});
test("kornfeld -> kornfeld", function() {deepEqual( Stem("kornfeld"), "kornfeld");});
test("kornsäcken -> kornsack", function() {deepEqual( Stem("kornsäcken"), "kornsack");});
test("körper -> korp", function() {deepEqual( Stem("körper"), "korp");});
test("körperbau -> korperbau", function() {deepEqual( Stem("körperbau"), "korperbau");});
test("körperlich -> korp", function() {deepEqual( Stem("körperlich"), "korp");});
test("körperliche -> korp", function() {deepEqual( Stem("körperliche"), "korp");});
test("körperlichen -> korp", function() {deepEqual( Stem("körperlichen"), "korp");});
test("körperlicher -> korp", function() {deepEqual( Stem("körperlicher"), "korp");});
test("körperliches -> korp", function() {deepEqual( Stem("körperliches"), "korp");});
test("körpern -> korp", function() {deepEqual( Stem("körpern"), "korp");});
test("körpers -> korp", function() {deepEqual( Stem("körpers"), "korp");});
test("körpersinne -> korpersinn", function() {deepEqual( Stem("körpersinne"), "korpersinn");});
test("korrekt -> korrekt", function() {deepEqual( Stem("korrekt"), "korrekt");});
test("korrekturen -> korrektur", function() {deepEqual( Stem("korrekturen"), "korrektur");});
test("korrespondenz -> korrespondenz", function() {deepEqual( Stem("korrespondenz"), "korrespondenz");});
test("korrespondiere -> korrespondi", function() {deepEqual( Stem("korrespondiere"), "korrespondi");});
test("korrespondieren -> korrespondi", function() {deepEqual( Stem("korrespondieren"), "korrespondi");});
test("korrespondierend -> korrespondier", function() {deepEqual( Stem("korrespondierend"), "korrespondier");});
test("korrespondierende -> korrespondier", function() {deepEqual( Stem("korrespondierende"), "korrespondier");});
test("korrespondierendes -> korrespondier", function() {deepEqual( Stem("korrespondierendes"), "korrespondier");});
test("korrespondiert -> korrespondiert", function() {deepEqual( Stem("korrespondiert"), "korrespondiert");});
test("korridor -> korridor", function() {deepEqual( Stem("korridor"), "korridor");});
test("korrigieren -> korrigi", function() {deepEqual( Stem("korrigieren"), "korrigi");});
test("korrigiert -> korrigiert", function() {deepEqual( Stem("korrigiert"), "korrigiert");});
test("kosenamen -> kosenam", function() {deepEqual( Stem("kosenamen"), "kosenam");});
test("kosmiseher -> kosmiseh", function() {deepEqual( Stem("kosmiseher"), "kosmiseh");});
test("kosmologische -> kosmolog", function() {deepEqual( Stem("kosmologische"), "kosmolog");});
test("kost -> kost", function() {deepEqual( Stem("kost"), "kost");});
test("kostbar -> kostbar", function() {deepEqual( Stem("kostbar"), "kostbar");});
test("kostbare -> kostbar", function() {deepEqual( Stem("kostbare"), "kostbar");});
test("kostbaren -> kostbar", function() {deepEqual( Stem("kostbaren"), "kostbar");});
test("kostbarer -> kostbar", function() {deepEqual( Stem("kostbarer"), "kostbar");});
test("kostbares -> kostbar", function() {deepEqual( Stem("kostbares"), "kostbar");});
test("kostbarsten -> kostbarst", function() {deepEqual( Stem("kostbarsten"), "kostbarst");});
test("kosten -> kost", function() {deepEqual( Stem("kosten"), "kost");});
test("kostenfreien -> kostenfrei", function() {deepEqual( Stem("kostenfreien"), "kostenfrei");});
test("kostenpunkt -> kostenpunkt", function() {deepEqual( Stem("kostenpunkt"), "kostenpunkt");});
test("kostet -> kostet", function() {deepEqual( Stem("kostet"), "kostet");});
test("kostete -> kostet", function() {deepEqual( Stem("kostete"), "kostet");});
test("kosteten -> kostet", function() {deepEqual( Stem("kosteten"), "kostet");});
test("köstlich -> kostlich", function() {deepEqual( Stem("köstlich"), "kostlich");});
test("köstliche -> kostlich", function() {deepEqual( Stem("köstliche"), "kostlich");});
test("köstlichen -> kostlich", function() {deepEqual( Stem("köstlichen"), "kostlich");});
test("köstliches -> kostlich", function() {deepEqual( Stem("köstliches"), "kostlich");});
test("köstlichkeiten -> kostlich", function() {deepEqual( Stem("köstlichkeiten"), "kostlich");});
test("köstlichste -> kostlich", function() {deepEqual( Stem("köstlichste"), "kostlich");});
test("kostspieliges -> kostspiel", function() {deepEqual( Stem("kostspieliges"), "kostspiel");});
test("kostümierte -> kostumiert", function() {deepEqual( Stem("kostümierte"), "kostumiert");});
test("kot -> kot", function() {deepEqual( Stem("kot"), "kot");});
test("kotelettes -> kotelett", function() {deepEqual( Stem("kotelettes"), "kotelett");});
test("köter -> kot", function() {deepEqual( Stem("köter"), "kot");});
test("kothöllen -> kotholl", function() {deepEqual( Stem("kothöllen"), "kotholl");});
test("krabbelige -> krabbel", function() {deepEqual( Stem("krabbelige"), "krabbel");});
test("krabbelte -> krabbelt", function() {deepEqual( Stem("krabbelte"), "krabbelt");});
test("krach -> krach", function() {deepEqual( Stem("krach"), "krach");});
test("krachen -> krach", function() {deepEqual( Stem("krachen"), "krach");});
test("krachend -> krachend", function() {deepEqual( Stem("krachend"), "krachend");});
test("krachmandel -> krachmandel", function() {deepEqual( Stem("krachmandel"), "krachmandel");});
test("krachmandelkies -> krachmandelki", function() {deepEqual( Stem("krachmandelkies"), "krachmandelki");});
test("kracht -> kracht", function() {deepEqual( Stem("kracht"), "kracht");});
test("krachte -> kracht", function() {deepEqual( Stem("krachte"), "kracht");});
test("krächzen -> krachz", function() {deepEqual( Stem("krächzen"), "krachz");});
test("krächzende -> krachzend", function() {deepEqual( Stem("krächzende"), "krachzend");});
test("krack -> krack", function() {deepEqual( Stem("krack"), "krack");});
test("kraft -> kraft", function() {deepEqual( Stem("kraft"), "kraft");});
test("kraftanwendung -> kraftanwend", function() {deepEqual( Stem("kraftanwendung"), "kraftanwend");});
test("kräfte -> kraft", function() {deepEqual( Stem("kräfte"), "kraft");});
test("kräften -> kraft", function() {deepEqual( Stem("kräften"), "kraft");});
test("kräftig -> kraftig", function() {deepEqual( Stem("kräftig"), "kraftig");});
test("kräftige -> kraftig", function() {deepEqual( Stem("kräftige"), "kraftig");});
test("kräftigem -> kraftig", function() {deepEqual( Stem("kräftigem"), "kraftig");});
test("kräftigen -> kraftig", function() {deepEqual( Stem("kräftigen"), "kraftig");});
test("kräftiger -> kraftig", function() {deepEqual( Stem("kräftiger"), "kraftig");});
test("kräftigere -> kraftig", function() {deepEqual( Stem("kräftigere"), "kraftig");});
test("kräftigst -> kraftig", function() {deepEqual( Stem("kräftigst"), "kraftig");});
test("kraftmänner -> kraftmann", function() {deepEqual( Stem("kraftmänner"), "kraftmann");});
test("kragen -> krag", function() {deepEqual( Stem("kragen"), "krag");});
test("krähe -> krah", function() {deepEqual( Stem("krähe"), "krah");});
test("krähen -> krah", function() {deepEqual( Stem("krähen"), "krah");});
test("kräht -> kraht", function() {deepEqual( Stem("kräht"), "kraht");});
test("krähte -> kraht", function() {deepEqual( Stem("krähte"), "kraht");});
test("krakacks -> krakack", function() {deepEqual( Stem("krakacks"), "krakack");});
test("kram -> kram", function() {deepEqual( Stem("kram"), "kram");});
test("krämer -> kram", function() {deepEqual( Stem("krämer"), "kram");});
test("kramladen -> kramlad", function() {deepEqual( Stem("kramladen"), "kramlad");});
test("krammetsvogel -> krammetsvogel", function() {deepEqual( Stem("krammetsvogel"), "krammetsvogel");});
test("krammetsvögel -> krammetsvogel", function() {deepEqual( Stem("krammetsvögel"), "krammetsvogel");});
test("krammetsvogels -> krammetsvogel", function() {deepEqual( Stem("krammetsvogels"), "krammetsvogel");});
test("krampf -> krampf", function() {deepEqual( Stem("krampf"), "krampf");});
test("krampfhaft -> krampfhaft", function() {deepEqual( Stem("krampfhaft"), "krampfhaft");});
test("krampfhaften -> krampfhaft", function() {deepEqual( Stem("krampfhaften"), "krampfhaft");});
test("krampfhafter -> krampfhaft", function() {deepEqual( Stem("krampfhafter"), "krampfhaft");});
test("krank -> krank", function() {deepEqual( Stem("krank"), "krank");});
test("kranke -> krank", function() {deepEqual( Stem("kranke"), "krank");});
test("kränkelnder -> krankelnd", function() {deepEqual( Stem("kränkelnder"), "krankelnd");});
test("kränkelt -> krankelt", function() {deepEqual( Stem("kränkelt"), "krankelt");});
test("kranken -> krank", function() {deepEqual( Stem("kranken"), "krank");});
test("kränken -> krank", function() {deepEqual( Stem("kränken"), "krank");});
test("krankenbett -> krankenbett", function() {deepEqual( Stem("krankenbett"), "krankenbett");});
test("krankenbette -> krankenbett", function() {deepEqual( Stem("krankenbette"), "krankenbett");});
test("krankenbettes -> krankenbett", function() {deepEqual( Stem("krankenbettes"), "krankenbett");});
test("kränkend -> krankend", function() {deepEqual( Stem("kränkend"), "krankend");});
test("kränkenden -> krankend", function() {deepEqual( Stem("kränkenden"), "krankend");});
test("krankenstand -> krankenstand", function() {deepEqual( Stem("krankenstand"), "krankenstand");});
test("krankenversicherung -> krankenversicher", function() {deepEqual( Stem("krankenversicherung"), "krankenversicher");});
test("krankenwärter -> krankenwart", function() {deepEqual( Stem("krankenwärter"), "krankenwart");});
test("krankhafter -> krankhaft", function() {deepEqual( Stem("krankhafter"), "krankhaft");});
test("krankheit -> krankheit", function() {deepEqual( Stem("krankheit"), "krankheit");});
test("krankheiten -> krankheit", function() {deepEqual( Stem("krankheiten"), "krankheit");});
test("krankheitsbildern -> krankheitsbild", function() {deepEqual( Stem("krankheitsbildern"), "krankheitsbild");});
test("kränkt -> krankt", function() {deepEqual( Stem("kränkt"), "krankt");});
test("kränkte -> krankt", function() {deepEqual( Stem("kränkte"), "krankt");});
test("kränkung -> krankung", function() {deepEqual( Stem("kränkung"), "krankung");});
test("kranz -> kranz", function() {deepEqual( Stem("kranz"), "kranz");});
test("kranze -> kranz", function() {deepEqual( Stem("kranze"), "kranz");});
test("kränzen -> kranz", function() {deepEqual( Stem("kränzen"), "kranz");});
test("kratz -> kratz", function() {deepEqual( Stem("kratz"), "kratz");});
test("krätze -> kratz", function() {deepEqual( Stem("krätze"), "kratz");});
test("kratzen -> kratz", function() {deepEqual( Stem("kratzen"), "kratz");});
test("kratzfuss -> kratzfuss", function() {deepEqual( Stem("kratzfuss"), "kratzfuss");});
test("kratzfüsschen -> kratzfussch", function() {deepEqual( Stem("kratzfüsschen"), "kratzfussch");});
test("kratzte -> kratzt", function() {deepEqual( Stem("kratzte"), "kratzt");});
test("kratzten -> kratzt", function() {deepEqual( Stem("kratzten"), "kratzt");});
test("krault -> krault", function() {deepEqual( Stem("krault"), "krault");});
test("kraus -> kraus", function() {deepEqual( Stem("kraus"), "kraus");});
test("krause -> kraus", function() {deepEqual( Stem("krause"), "kraus");});
test("kräuselhaare -> krauselhaar", function() {deepEqual( Stem("kräuselhaare"), "krauselhaar");});
test("kräuselten -> krauselt", function() {deepEqual( Stem("kräuselten"), "krauselt");});
test("krausen -> kraus", function() {deepEqual( Stem("krausen"), "kraus");});
test("kraut -> kraut", function() {deepEqual( Stem("kraut"), "kraut");});
test("kräutchen -> krautch", function() {deepEqual( Stem("kräutchen"), "krautch");});
test("kräuter -> kraut", function() {deepEqual( Stem("kräuter"), "kraut");});
test("kräutermann -> krautermann", function() {deepEqual( Stem("kräutermann"), "krautermann");});
test("kräutern -> kraut", function() {deepEqual( Stem("kräutern"), "kraut");});
test("kräutersäcke -> krautersack", function() {deepEqual( Stem("kräutersäcke"), "krautersack");});
test("kräuterwuchs -> krauterwuch", function() {deepEqual( Stem("kräuterwuchs"), "krauterwuch");});
test("kräuterwust -> krauterwust", function() {deepEqual( Stem("kräuterwust"), "krauterwust");});
test("krautes -> kraut", function() {deepEqual( Stem("krautes"), "kraut");});
test("krauts -> kraut", function() {deepEqual( Stem("krauts"), "kraut");});
test("kravatte -> kravatt", function() {deepEqual( Stem("kravatte"), "kravatt");});
test("kreatur -> kreatur", function() {deepEqual( Stem("kreatur"), "kreatur");});
test("kreaturen -> kreatur", function() {deepEqual( Stem("kreaturen"), "kreatur");});
test("krebs -> kreb", function() {deepEqual( Stem("krebs"), "kreb");});
test("krebspatienten -> krebspatient", function() {deepEqual( Stem("krebspatienten"), "krebspatient");});
test("krebsscheren -> krebssch", function() {deepEqual( Stem("krebsscheren"), "krebssch");});
test("kredit -> kredit", function() {deepEqual( Stem("kredit"), "kredit");});
test("kredite -> kredit", function() {deepEqual( Stem("kredite"), "kredit");});
test("kredites -> kredit", function() {deepEqual( Stem("kredites"), "kredit");});
test("kreditgetzes -> kreditgetz", function() {deepEqual( Stem("kreditgetzes"), "kreditgetz");});
test("kreideblass -> kreideblass", function() {deepEqual( Stem("kreideblass"), "kreideblass");});
test("kreis -> kreis", function() {deepEqual( Stem("kreis"), "kreis");});
test("kreischen -> kreisch", function() {deepEqual( Stem("kreischen"), "kreisch");});
test("kreischenden -> kreischend", function() {deepEqual( Stem("kreischenden"), "kreischend");});
test("kreischte -> kreischt", function() {deepEqual( Stem("kreischte"), "kreischt");});
test("kreise -> kreis", function() {deepEqual( Stem("kreise"), "kreis");});
test("kreiselndes -> kreiselnd", function() {deepEqual( Stem("kreiselndes"), "kreiselnd");});
test("kreiselte -> kreiselt", function() {deepEqual( Stem("kreiselte"), "kreiselt");});
test("kreisen -> kreis", function() {deepEqual( Stem("kreisen"), "kreis");});
test("kreises -> kreis", function() {deepEqual( Stem("kreises"), "kreis");});
test("kreislauf -> kreislauf", function() {deepEqual( Stem("kreislauf"), "kreislauf");});
test("kreisläufe -> kreislauf", function() {deepEqual( Stem("kreisläufe"), "kreislauf");});
test("kreisrunde -> kreisrund", function() {deepEqual( Stem("kreisrunde"), "kreisrund");});
test("kreissen -> kreiss", function() {deepEqual( Stem("kreissen"), "kreiss");});
test("kreißen -> kreiss", function() {deepEqual( Stem("kreißen"), "kreiss");});
test("kreissenden -> kreissend", function() {deepEqual( Stem("kreissenden"), "kreissend");});
test("kreißenden -> kreissend", function() {deepEqual( Stem("kreißenden"), "kreissend");});
test("kreissest -> kreiss", function() {deepEqual( Stem("kreissest"), "kreiss");});
test("kreißest -> kreiss", function() {deepEqual( Stem("kreißest"), "kreiss");});
test("kreisst -> kreisst", function() {deepEqual( Stem("kreisst"), "kreisst");});
test("kreißt -> kreisst", function() {deepEqual( Stem("kreißt"), "kreisst");});
test("kreiswehrersatzamt -> kreiswehrersatzamt", function() {deepEqual( Stem("kreiswehrersatzamt"), "kreiswehrersatzamt");});
test("kreizer -> kreiz", function() {deepEqual( Stem("kreizer"), "kreiz");});
test("kreizl -> kreizl", function() {deepEqual( Stem("kreizl"), "kreizl");});
test("kresse -> kress", function() {deepEqual( Stem("kresse"), "kress");});
test("kretinismus -> kretinismus", function() {deepEqual( Stem("kretinismus"), "kretinismus");});
test("kreucht -> kreucht", function() {deepEqual( Stem("kreucht"), "kreucht");});
test("kreuz -> kreuz", function() {deepEqual( Stem("kreuz"), "kreuz");});
test("kreuzberger -> kreuzberg", function() {deepEqual( Stem("kreuzberger"), "kreuzberg");});
test("kreuze -> kreuz", function() {deepEqual( Stem("kreuze"), "kreuz");});
test("kreuzen -> kreuz", function() {deepEqual( Stem("kreuzen"), "kreuz");});
test("kreuzenden -> kreuzend", function() {deepEqual( Stem("kreuzenden"), "kreuzend");});
test("kreuzer -> kreuz", function() {deepEqual( Stem("kreuzer"), "kreuz");});
test("kreuzes -> kreuz", function() {deepEqual( Stem("kreuzes"), "kreuz");});
test("kreuzfahrers -> kreuzfahr", function() {deepEqual( Stem("kreuzfahrers"), "kreuzfahr");});
test("kreuzl -> kreuzl", function() {deepEqual( Stem("kreuzl"), "kreuzl");});
test("kreuzritterzuge -> kreuzritterzug", function() {deepEqual( Stem("kreuzritterzuge"), "kreuzritterzug");});
test("kreuzspinnen -> kreuzspinn", function() {deepEqual( Stem("kreuzspinnen"), "kreuzspinn");});
test("kreuzstrasse -> kreuzstrass", function() {deepEqual( Stem("kreuzstrasse"), "kreuzstrass");});
test("kreuzte -> kreuzt", function() {deepEqual( Stem("kreuzte"), "kreuzt");});
test("kreuzten -> kreuzt", function() {deepEqual( Stem("kreuzten"), "kreuzt");});
test("kreuzweg -> kreuzweg", function() {deepEqual( Stem("kreuzweg"), "kreuzweg");});
test("kreuzwegbäu -> kreuzwegbau", function() {deepEqual( Stem("kreuzwegbäu"), "kreuzwegbau");});
test("kreuzwegbauer -> kreuzwegbau", function() {deepEqual( Stem("kreuzwegbauer"), "kreuzwegbau");});
test("kreuzweghof -> kreuzweghof", function() {deepEqual( Stem("kreuzweghof"), "kreuzweghof");});
test("kreuzweghofbauer -> kreuzweghofbau", function() {deepEqual( Stem("kreuzweghofbauer"), "kreuzweghofbau");});
test("kreuzweis -> kreuzweis", function() {deepEqual( Stem("kreuzweis"), "kreuzweis");});
test("kribbeln -> kribbeln", function() {deepEqual( Stem("kribbeln"), "kribbeln");});
test("krick -> krick", function() {deepEqual( Stem("krick"), "krick");});
test("kriechen -> kriech", function() {deepEqual( Stem("kriechen"), "kriech");});
test("kriechend -> kriechend", function() {deepEqual( Stem("kriechend"), "kriechend");});
test("kriechende -> kriechend", function() {deepEqual( Stem("kriechende"), "kriechend");});
test("kriechenden -> kriechend", function() {deepEqual( Stem("kriechenden"), "kriechend");});
test("kriechendes -> kriechend", function() {deepEqual( Stem("kriechendes"), "kriechend");});
test("kriecht -> kriecht", function() {deepEqual( Stem("kriecht"), "kriecht");});
test("kriechtier -> kriechti", function() {deepEqual( Stem("kriechtier"), "kriechti");});
test("kriechtiere -> kriechti", function() {deepEqual( Stem("kriechtiere"), "kriechti");});
test("kriechtieren -> kriechti", function() {deepEqual( Stem("kriechtieren"), "kriechti");});
test("krieg -> krieg", function() {deepEqual( Stem("krieg"), "krieg");});
test("kriege -> krieg", function() {deepEqual( Stem("kriege"), "krieg");});
test("kriegen -> krieg", function() {deepEqual( Stem("kriegen"), "krieg");});
test("krieger -> krieg", function() {deepEqual( Stem("krieger"), "krieg");});
test("kriegerisch -> krieger", function() {deepEqual( Stem("kriegerisch"), "krieger");});
test("kriegerischen -> krieger", function() {deepEqual( Stem("kriegerischen"), "krieger");});
test("krieges -> krieg", function() {deepEqual( Stem("krieges"), "krieg");});
test("krieget -> krieget", function() {deepEqual( Stem("krieget"), "krieget");});
test("kriegsdienst -> kriegsdien", function() {deepEqual( Stem("kriegsdienst"), "kriegsdien");});
test("kriegsdienste -> kriegsdien", function() {deepEqual( Stem("kriegsdienste"), "kriegsdien");});
test("kriegsdienstes -> kriegsdien", function() {deepEqual( Stem("kriegsdienstes"), "kriegsdien");});
test("kriegsdienstverweigerer -> kriegsdienstverweig", function() {deepEqual( Stem("kriegsdienstverweigerer"), "kriegsdienstverweig");});
test("kriegsdienstverweigerung -> kriegsdienstverweiger", function() {deepEqual( Stem("kriegsdienstverweigerung"), "kriegsdienstverweiger");});
test("kriegsführung -> kriegsfuhr", function() {deepEqual( Stem("kriegsführung"), "kriegsfuhr");});
test("kriegsgetümmel -> kriegsgetummel", function() {deepEqual( Stem("kriegsgetümmel"), "kriegsgetummel");});
test("kriegsheeren -> kriegshe", function() {deepEqual( Stem("kriegsheeren"), "kriegshe");});
test("kriegskameraden -> kriegskamerad", function() {deepEqual( Stem("kriegskameraden"), "kriegskamerad");});
test("kriegskasse -> kriegskass", function() {deepEqual( Stem("kriegskasse"), "kriegskass");});
test("kriegskleid -> kriegskleid", function() {deepEqual( Stem("kriegskleid"), "kriegskleid");});
test("kriegsleute -> kriegsleut", function() {deepEqual( Stem("kriegsleute"), "kriegsleut");});
test("kriegslied -> kriegslied", function() {deepEqual( Stem("kriegslied"), "kriegslied");});
test("kriegslist -> kriegslist", function() {deepEqual( Stem("kriegslist"), "kriegslist");});
test("kriegsmann -> kriegsmann", function() {deepEqual( Stem("kriegsmann"), "kriegsmann");});
test("kriegsmänner -> kriegsmann", function() {deepEqual( Stem("kriegsmänner"), "kriegsmann");});
test("kriegsmannes -> kriegsmann", function() {deepEqual( Stem("kriegsmannes"), "kriegsmann");});
test("kriegsmöglichkeiten -> kriegsmog", function() {deepEqual( Stem("kriegsmöglichkeiten"), "kriegsmog");});
test("kriegsoberst -> kriegsoberst", function() {deepEqual( Stem("kriegsoberst"), "kriegsoberst");});
test("kriegsstrapazen -> kriegsstrapaz", function() {deepEqual( Stem("kriegsstrapazen"), "kriegsstrapaz");});
test("kriegsvölker -> kriegsvolk", function() {deepEqual( Stem("kriegsvölker"), "kriegsvolk");});
test("kriegswaffen -> kriegswaff", function() {deepEqual( Stem("kriegswaffen"), "kriegswaff");});
test("kriegswesen -> kriegswes", function() {deepEqual( Stem("kriegswesen"), "kriegswes");});
test("kriegswichtigen -> kriegswicht", function() {deepEqual( Stem("kriegswichtigen"), "kriegswicht");});
test("kriegt -> kriegt", function() {deepEqual( Stem("kriegt"), "kriegt");});
test("kriegte -> kriegt", function() {deepEqual( Stem("kriegte"), "kriegt");});
test("krieje -> kriej", function() {deepEqual( Stem("krieje"), "kriej");});
test("kriminalverbrechen -> kriminalverbrech", function() {deepEqual( Stem("kriminalverbrechen"), "kriminalverbrech");});
test("kriminell -> kriminell", function() {deepEqual( Stem("kriminell"), "kriminell");});
test("kriminelle -> kriminell", function() {deepEqual( Stem("kriminelle"), "kriminell");});
test("kriminelles -> kriminell", function() {deepEqual( Stem("kriminelles"), "kriminell");});
test("krise -> kris", function() {deepEqual( Stem("krise"), "kris");});
test("krisen -> kris", function() {deepEqual( Stem("krisen"), "kris");});
test("kristall -> kristall", function() {deepEqual( Stem("kristall"), "kristall");});
test("kristalle -> kristall", function() {deepEqual( Stem("kristalle"), "kristall");});
test("kritik -> kritik", function() {deepEqual( Stem("kritik"), "kritik");});
test("kritikpunkt -> kritikpunkt", function() {deepEqual( Stem("kritikpunkt"), "kritikpunkt");});
test("kritisch -> kritisch", function() {deepEqual( Stem("kritisch"), "kritisch");});
test("kritische -> kritisch", function() {deepEqual( Stem("kritische"), "kritisch");});
test("kritischen -> kritisch", function() {deepEqual( Stem("kritischen"), "kritisch");});
test("kritischer -> kritisch", function() {deepEqual( Stem("kritischer"), "kritisch");});
test("kritisieren -> kritisi", function() {deepEqual( Stem("kritisieren"), "kritisi");});
test("kritisiert -> kritisiert", function() {deepEqual( Stem("kritisiert"), "kritisiert");});
test("kroch -> kroch", function() {deepEqual( Stem("kroch"), "kroch");});
test("krochen -> kroch", function() {deepEqual( Stem("krochen"), "kroch");});
test("krochy -> krochy", function() {deepEqual( Stem("krochy"), "krochy");});
test("krokodil -> krokodil", function() {deepEqual( Stem("krokodil"), "krokodil");});
test("krönchen -> kronch", function() {deepEqual( Stem("krönchen"), "kronch");});
test("krone -> kron", function() {deepEqual( Stem("krone"), "kron");});
test("kronen -> kron", function() {deepEqual( Stem("kronen"), "kron");});
test("krönen -> kron", function() {deepEqual( Stem("krönen"), "kron");});
test("kronleuchtern -> kronleucht", function() {deepEqual( Stem("kronleuchtern"), "kronleucht");});
test("krönte -> kront", function() {deepEqual( Stem("krönte"), "kront");});
test("kropf -> kropf", function() {deepEqual( Stem("kropf"), "kropf");});
test("kropfige -> kropfig", function() {deepEqual( Stem("kropfige"), "kropfig");});
test("kropfigen -> kropfig", function() {deepEqual( Stem("kropfigen"), "kropfig");});
test("kropfiger -> kropfig", function() {deepEqual( Stem("kropfiger"), "kropfig");});
test("kropfschlinge -> kropfschling", function() {deepEqual( Stem("kropfschlinge"), "kropfschling");});
test("kröten -> krot", function() {deepEqual( Stem("kröten"), "krot");});
test("kruge -> krug", function() {deepEqual( Stem("kruge"), "krug");});
test("krügelchen -> krugelch", function() {deepEqual( Stem("krügelchen"), "krugelch");});
test("krümel -> krumel", function() {deepEqual( Stem("krümel"), "krumel");});
test("krumm -> krumm", function() {deepEqual( Stem("krumm"), "krumm");});
test("krummbeinige -> krummbein", function() {deepEqual( Stem("krummbeinige"), "krummbein");});
test("krumme -> krumm", function() {deepEqual( Stem("krumme"), "krumm");});
test("krummen -> krumm", function() {deepEqual( Stem("krummen"), "krumm");});
test("krümmen -> krumm", function() {deepEqual( Stem("krümmen"), "krumm");});
test("krummholz -> krummholz", function() {deepEqual( Stem("krummholz"), "krummholz");});
test("krummholzbusche -> krummholzbusch", function() {deepEqual( Stem("krummholzbusche"), "krummholzbusch");});
test("krummholzbuschwerk -> krummholzbuschwerk", function() {deepEqual( Stem("krummholzbuschwerk"), "krummholzbuschwerk");});
test("krummholzzweigen -> krummholzzweig", function() {deepEqual( Stem("krummholzzweigen"), "krummholzzweig");});
test("krummrückiger -> krummruck", function() {deepEqual( Stem("krummrückiger"), "krummruck");});
test("krümmte -> krummt", function() {deepEqual( Stem("krümmte"), "krummt");});
test("krümmten -> krummt", function() {deepEqual( Stem("krümmten"), "krummt");});
test("krümmung -> krummung", function() {deepEqual( Stem("krümmung"), "krummung");});
test("krüppel -> kruppel", function() {deepEqual( Stem("krüppel"), "kruppel");});
test("krustengebirge -> krustengebirg", function() {deepEqual( Stem("krustengebirge"), "krustengebirg");});
test("kruzifix -> kruzifix", function() {deepEqual( Stem("kruzifix"), "kruzifix");});
test("kts -> kts", function() {deepEqual( Stem("kts"), "kts");});
test("kuba -> kuba", function() {deepEqual( Stem("kuba"), "kuba");});
test("kübel -> kubel", function() {deepEqual( Stem("kübel"), "kubel");});
test("kübler -> kubl", function() {deepEqual( Stem("kübler"), "kubl");});
test("küche -> kuch", function() {deepEqual( Stem("küche"), "kuch");});
test("kuchen -> kuch", function() {deepEqual( Stem("kuchen"), "kuch");});
test("kuchenappetit -> kuchenappetit", function() {deepEqual( Stem("kuchenappetit"), "kuchenappetit");});
test("kuchenbacken -> kuchenback", function() {deepEqual( Stem("kuchenbacken"), "kuchenback");});
test("küchenchef -> kuchenchef", function() {deepEqual( Stem("küchenchef"), "kuchenchef");});
test("kuchenduft -> kuchenduft", function() {deepEqual( Stem("kuchenduft"), "kuchenduft");});
test("küchenjungen -> kuchenj", function() {deepEqual( Stem("küchenjungen"), "kuchenj");});
test("küchenlampe -> kuchenlamp", function() {deepEqual( Stem("küchenlampe"), "kuchenlamp");});
test("kuchenpäckchen -> kuchenpackch", function() {deepEqual( Stem("kuchenpäckchen"), "kuchenpackch");});
test("kuchenteller -> kuchentell", function() {deepEqual( Stem("kuchenteller"), "kuchentell");});
test("küchentüre -> kuchentur", function() {deepEqual( Stem("küchentüre"), "kuchentur");});
test("kuckuck -> kuckuck", function() {deepEqual( Stem("kuckuck"), "kuckuck");});
test("kugel -> kugel", function() {deepEqual( Stem("kugel"), "kugel");});
test("kugeln -> kugeln", function() {deepEqual( Stem("kugeln"), "kugeln");});
test("kugelrund -> kugelrund", function() {deepEqual( Stem("kugelrund"), "kugelrund");});
test("kugelrunde -> kugelrund", function() {deepEqual( Stem("kugelrunde"), "kugelrund");});
test("kugelrunden -> kugelrund", function() {deepEqual( Stem("kugelrunden"), "kugelrund");});
test("kugelrundes -> kugelrund", function() {deepEqual( Stem("kugelrundes"), "kugelrund");});
test("kugelschreiber -> kugelschreib", function() {deepEqual( Stem("kugelschreiber"), "kugelschreib");});
test("kugelstift -> kugelstift", function() {deepEqual( Stem("kugelstift"), "kugelstift");});
test("kuh -> kuh", function() {deepEqual( Stem("kuh"), "kuh");});
test("küh -> kuh", function() {deepEqual( Stem("küh"), "kuh");});
test("kühe -> kuh", function() {deepEqual( Stem("kühe"), "kuh");});
test("kuhgespann -> kuhgespann", function() {deepEqual( Stem("kuhgespann"), "kuhgespann");});
test("kuhknecht -> kuhknecht", function() {deepEqual( Stem("kuhknecht"), "kuhknecht");});
test("kuhknechte -> kuhknecht", function() {deepEqual( Stem("kuhknechte"), "kuhknecht");});
test("kühl -> kuhl", function() {deepEqual( Stem("kühl"), "kuhl");});
test("kühle -> kuhl", function() {deepEqual( Stem("kühle"), "kuhl");});
test("kühlen -> kuhl", function() {deepEqual( Stem("kühlen"), "kuhl");});
test("kühler -> kuhl", function() {deepEqual( Stem("kühler"), "kuhl");});
test("kühlten -> kuhlt", function() {deepEqual( Stem("kühlten"), "kuhlt");});
test("kuhmagd -> kuhmagd", function() {deepEqual( Stem("kuhmagd"), "kuhmagd");});
test("kühn -> kuhn", function() {deepEqual( Stem("kühn"), "kuhn");});
test("kühne -> kuhn", function() {deepEqual( Stem("kühne"), "kuhn");});
test("kühnen -> kuhn", function() {deepEqual( Stem("kühnen"), "kuhn");});
test("kühnere -> kuhn", function() {deepEqual( Stem("kühnere"), "kuhn");});
test("kühneren -> kuhn", function() {deepEqual( Stem("kühneren"), "kuhn");});
test("kühnheit -> kuhnheit", function() {deepEqual( Stem("kühnheit"), "kuhnheit");});
test("kühnlich -> kuhnlich", function() {deepEqual( Stem("kühnlich"), "kuhnlich");});
test("kühnrich -> kuhnrich", function() {deepEqual( Stem("kühnrich"), "kuhnrich");});
test("kühnsten -> kuhn", function() {deepEqual( Stem("kühnsten"), "kuhn");});
test("kuhpfluge -> kuhpflug", function() {deepEqual( Stem("kuhpfluge"), "kuhpflug");});
test("kulisse -> kuliss", function() {deepEqual( Stem("kulisse"), "kuliss");});
test("kullerbällchen -> kullerballch", function() {deepEqual( Stem("kullerbällchen"), "kullerballch");});
test("kullerten -> kullert", function() {deepEqual( Stem("kullerten"), "kullert");});
test("kullich -> kullich", function() {deepEqual( Stem("kullich"), "kullich");});
test("kultivieren -> kultivi", function() {deepEqual( Stem("kultivieren"), "kultivi");});
test("kultivierte -> kultiviert", function() {deepEqual( Stem("kultivierte"), "kultiviert");});
test("kultur -> kultur", function() {deepEqual( Stem("kultur"), "kultur");});
test("kulturell -> kulturell", function() {deepEqual( Stem("kulturell"), "kulturell");});
test("kulturelle -> kulturell", function() {deepEqual( Stem("kulturelle"), "kulturell");});
test("kulturellen -> kulturell", function() {deepEqual( Stem("kulturellen"), "kulturell");});
test("kulturen -> kultur", function() {deepEqual( Stem("kulturen"), "kultur");});
test("kulturvereine -> kulturverein", function() {deepEqual( Stem("kulturvereine"), "kulturverein");});
test("kulturwort -> kulturwort", function() {deepEqual( Stem("kulturwort"), "kulturwort");});
test("kummen -> kumm", function() {deepEqual( Stem("kummen"), "kumm");});
test("kummer -> kumm", function() {deepEqual( Stem("kummer"), "kumm");});
test("kümmerlich -> kumm", function() {deepEqual( Stem("kümmerlich"), "kumm");});
test("kümmerliche -> kumm", function() {deepEqual( Stem("kümmerliche"), "kumm");});
test("kümmerlichen -> kumm", function() {deepEqual( Stem("kümmerlichen"), "kumm");});
test("kümmerlicher -> kumm", function() {deepEqual( Stem("kümmerlicher"), "kumm");});
test("kümmern -> kumm", function() {deepEqual( Stem("kümmern"), "kumm");});
test("kümmernis -> kummernis", function() {deepEqual( Stem("kümmernis"), "kummernis");});
test("kümmernisse -> kummernis", function() {deepEqual( Stem("kümmernisse"), "kummernis");});
test("kümmerst -> kummerst", function() {deepEqual( Stem("kümmerst"), "kummerst");});
test("kümmert -> kummert", function() {deepEqual( Stem("kümmert"), "kummert");});
test("kümmerte -> kummert", function() {deepEqual( Stem("kümmerte"), "kummert");});
test("kümmerten -> kummert", function() {deepEqual( Stem("kümmerten"), "kummert");});
test("kummervoll -> kummervoll", function() {deepEqual( Stem("kummervoll"), "kummervoll");});
test("kumpan -> kumpan", function() {deepEqual( Stem("kumpan"), "kumpan");});
test("kumpane -> kumpan", function() {deepEqual( Stem("kumpane"), "kumpan");});
test("kund -> kund", function() {deepEqual( Stem("kund"), "kund");});
test("kunde -> kund", function() {deepEqual( Stem("kunde"), "kund");});
test("kunden -> kund", function() {deepEqual( Stem("kunden"), "kund");});
test("kundgab -> kundgab", function() {deepEqual( Stem("kundgab"), "kundgab");});
test("kundgetan -> kundgetan", function() {deepEqual( Stem("kundgetan"), "kundgetan");});
test("kundig -> kundig", function() {deepEqual( Stem("kundig"), "kundig");});
test("kundigen -> kundig", function() {deepEqual( Stem("kundigen"), "kundig");});
test("kündigen -> kundig", function() {deepEqual( Stem("kündigen"), "kundig");});
test("kündigte -> kundigt", function() {deepEqual( Stem("kündigte"), "kundigt");});
test("kündigten -> kundigt", function() {deepEqual( Stem("kündigten"), "kundigt");});
test("kündigung -> kundig", function() {deepEqual( Stem("kündigung"), "kundig");});
test("kundin -> kundin", function() {deepEqual( Stem("kundin"), "kundin");});
test("kundschaft -> kundschaft", function() {deepEqual( Stem("kundschaft"), "kundschaft");});
test("kundschafter -> kundschaft", function() {deepEqual( Stem("kundschafter"), "kundschaft");});
test("künftig -> kunftig", function() {deepEqual( Stem("künftig"), "kunftig");});
test("künftige -> kunftig", function() {deepEqual( Stem("künftige"), "kunftig");});
test("künftigen -> kunftig", function() {deepEqual( Stem("künftigen"), "kunftig");});
test("küng -> kung", function() {deepEqual( Stem("küng"), "kung");});
test("kunnt -> kunnt", function() {deepEqual( Stem("kunnt"), "kunnt");});
test("kunnten -> kunnt", function() {deepEqual( Stem("kunnten"), "kunnt");});
test("kunst -> kunst", function() {deepEqual( Stem("kunst"), "kunst");});
test("kunstdenkmäler -> kunstdenkmal", function() {deepEqual( Stem("kunstdenkmäler"), "kunstdenkmal");});
test("künste -> kunst", function() {deepEqual( Stem("künste"), "kunst");});
test("künsten -> kunst", function() {deepEqual( Stem("künsten"), "kunst");});
test("kunstfertigkeit -> kunstfert", function() {deepEqual( Stem("kunstfertigkeit"), "kunstfert");});
test("kunstgriff -> kunstgriff", function() {deepEqual( Stem("kunstgriff"), "kunstgriff");});
test("kunstgriffe -> kunstgriff", function() {deepEqual( Stem("kunstgriffe"), "kunstgriff");});
test("kunsthistorische -> kunsthistor", function() {deepEqual( Stem("kunsthistorische"), "kunsthistor");});
test("künstler -> kunstl", function() {deepEqual( Stem("künstler"), "kunstl");});
test("künstlerische -> kunstler", function() {deepEqual( Stem("künstlerische"), "kunstler");});
test("künstlerischen -> kunstler", function() {deepEqual( Stem("künstlerischen"), "kunstler");});
test("künstlers -> kunstl", function() {deepEqual( Stem("künstlers"), "kunstl");});
test("künstlich -> kunstlich", function() {deepEqual( Stem("künstlich"), "kunstlich");});
test("künstliche -> kunstlich", function() {deepEqual( Stem("künstliche"), "kunstlich");});
test("künstlichem -> kunstlich", function() {deepEqual( Stem("künstlichem"), "kunstlich");});
test("künstlichen -> kunstlich", function() {deepEqual( Stem("künstlichen"), "kunstlich");});
test("künstlicher -> kunstlich", function() {deepEqual( Stem("künstlicher"), "kunstlich");});
test("kunstliebhaber -> kunstliebhab", function() {deepEqual( Stem("kunstliebhaber"), "kunstliebhab");});
test("kunstlos -> kunstlos", function() {deepEqual( Stem("kunstlos"), "kunstlos");});
test("kunstpfeifer -> kunstpfeif", function() {deepEqual( Stem("kunstpfeifer"), "kunstpfeif");});
test("kunstreichen -> kunstreich", function() {deepEqual( Stem("kunstreichen"), "kunstreich");});
test("kunstreicher -> kunstreich", function() {deepEqual( Stem("kunstreicher"), "kunstreich");});
test("kunstreiches -> kunstreich", function() {deepEqual( Stem("kunstreiches"), "kunstreich");});
test("kunststück -> kunststuck", function() {deepEqual( Stem("kunststück"), "kunststuck");});
test("kunststückchen -> kunststuckch", function() {deepEqual( Stem("kunststückchen"), "kunststuckch");});
test("kunststücke -> kunststuck", function() {deepEqual( Stem("kunststücke"), "kunststuck");});
test("kunstverständigen -> kunstverstand", function() {deepEqual( Stem("kunstverständigen"), "kunstverstand");});
test("kunstvoll -> kunstvoll", function() {deepEqual( Stem("kunstvoll"), "kunstvoll");});
test("kunstvoller -> kunstvoll", function() {deepEqual( Stem("kunstvoller"), "kunstvoll");});
test("kunstwerke -> kunstwerk", function() {deepEqual( Stem("kunstwerke"), "kunstwerk");});
test("kunstwerken -> kunstwerk", function() {deepEqual( Stem("kunstwerken"), "kunstwerk");});
test("kunterbunt -> kunterbunt", function() {deepEqual( Stem("kunterbunt"), "kunterbunt");});
test("küpe -> kup", function() {deepEqual( Stem("küpe"), "kup");});
test("kupfer -> kupf", function() {deepEqual( Stem("kupfer"), "kupf");});
test("kupfern -> kupf", function() {deepEqual( Stem("kupfern"), "kupf");});
test("kupferstiche -> kupferstich", function() {deepEqual( Stem("kupferstiche"), "kupferstich");});
test("kuppel -> kuppel", function() {deepEqual( Stem("kuppel"), "kuppel");});
test("kuppeln -> kuppeln", function() {deepEqual( Stem("kuppeln"), "kuppeln");});
test("kuppen -> kupp", function() {deepEqual( Stem("kuppen"), "kupp");});
test("kuppler -> kuppl", function() {deepEqual( Stem("kuppler"), "kuppl");});
test("kur -> kur", function() {deepEqual( Stem("kur"), "kur");});
test("kurasch -> kurasch", function() {deepEqual( Stem("kurasch"), "kurasch");});
test("kürassiere -> kurassi", function() {deepEqual( Stem("kürassiere"), "kurassi");});
test("kürassiers -> kurassi", function() {deepEqual( Stem("kürassiers"), "kurassi");});
test("kürbisse -> kurbiss", function() {deepEqual( Stem("kürbisse"), "kurbiss");});
test("kurden -> kurd", function() {deepEqual( Stem("kurden"), "kurd");});
test("kurdisch -> kurdisch", function() {deepEqual( Stem("kurdisch"), "kurdisch");});
test("kurdische -> kurdisch", function() {deepEqual( Stem("kurdische"), "kurdisch");});
test("kurdischen -> kurdisch", function() {deepEqual( Stem("kurdischen"), "kurdisch");});
test("kurdistan -> kurdistan", function() {deepEqual( Stem("kurdistan"), "kurdistan");});
test("kurfürsten -> kurfurst", function() {deepEqual( Stem("kurfürsten"), "kurfurst");});
test("kurieren -> kuri", function() {deepEqual( Stem("kurieren"), "kuri");});
test("kurierte -> kuriert", function() {deepEqual( Stem("kurierte"), "kuriert");});
test("kurrenten -> kurrent", function() {deepEqual( Stem("kurrenten"), "kurrent");});
test("kurs -> kur", function() {deepEqual( Stem("kurs"), "kur");});
test("kursus -> kursus", function() {deepEqual( Stem("kursus"), "kursus");});
test("kurt -> kurt", function() {deepEqual( Stem("kurt"), "kurt");});
test("kurubas -> kurubas", function() {deepEqual( Stem("kurubas"), "kurubas");});
test("kurwochen -> kurwoch", function() {deepEqual( Stem("kurwochen"), "kurwoch");});
test("kurz -> kurz", function() {deepEqual( Stem("kurz"), "kurz");});
test("kürz -> kurz", function() {deepEqual( Stem("kürz"), "kurz");});
test("kurzatmiger -> kurzatm", function() {deepEqual( Stem("kurzatmiger"), "kurzatm");});
test("kurzbesuch -> kurzbesuch", function() {deepEqual( Stem("kurzbesuch"), "kurzbesuch");});
test("kurze -> kurz", function() {deepEqual( Stem("kurze"), "kurz");});
test("kürze -> kurz", function() {deepEqual( Stem("kürze"), "kurz");});
test("kurzem -> kurz", function() {deepEqual( Stem("kurzem"), "kurz");});
test("kurzen -> kurz", function() {deepEqual( Stem("kurzen"), "kurz");});
test("kurzer -> kurz", function() {deepEqual( Stem("kurzer"), "kurz");});
test("kürzer -> kurz", function() {deepEqual( Stem("kürzer"), "kurz");});
test("kürzere -> kurz", function() {deepEqual( Stem("kürzere"), "kurz");});
test("kurzerhand -> kurzerhand", function() {deepEqual( Stem("kurzerhand"), "kurzerhand");});
test("kurzes -> kurz", function() {deepEqual( Stem("kurzes"), "kurz");});
test("kurzfristig -> kurzfrist", function() {deepEqual( Stem("kurzfristig"), "kurzfrist");});
test("kurzgeschoren -> kurzgeschor", function() {deepEqual( Stem("kurzgeschoren"), "kurzgeschor");});
test("kurzhörspiel -> kurzhorspiel", function() {deepEqual( Stem("kurzhörspiel"), "kurzhorspiel");});
test("kürzlich -> kurzlich", function() {deepEqual( Stem("kürzlich"), "kurzlich");});
test("kurzsichtig -> kurzsicht", function() {deepEqual( Stem("kurzsichtig"), "kurzsicht");});
test("kurzum -> kurzum", function() {deepEqual( Stem("kurzum"), "kurzum");});
test("kurzweg -> kurzweg", function() {deepEqual( Stem("kurzweg"), "kurzweg");});
test("kurzweil -> kurzweil", function() {deepEqual( Stem("kurzweil"), "kurzweil");});
test("kurzweilig -> kurzweil", function() {deepEqual( Stem("kurzweilig"), "kurzweil");});
test("kurzweiligen -> kurzweil", function() {deepEqual( Stem("kurzweiligen"), "kurzweil");});
test("kurzweiliges -> kurzweil", function() {deepEqual( Stem("kurzweiliges"), "kurzweil");});
test("kurzweiligste -> kurzweil", function() {deepEqual( Stem("kurzweiligste"), "kurzweil");});
test("kusch -> kusch", function() {deepEqual( Stem("kusch"), "kusch");});
test("kuschs -> kusch", function() {deepEqual( Stem("kuschs"), "kusch");});
test("kuss -> kuss", function() {deepEqual( Stem("kuss"), "kuss");});
test("kuß -> kuss", function() {deepEqual( Stem("kuß"), "kuss");});
test("küss -> kuss", function() {deepEqual( Stem("küss"), "kuss");});
test("küsschen -> kussch", function() {deepEqual( Stem("küsschen"), "kussch");});
test("küsse -> kuss", function() {deepEqual( Stem("küsse"), "kuss");});
test("küssen -> kuss", function() {deepEqual( Stem("küssen"), "kuss");});
test("küssend -> kussend", function() {deepEqual( Stem("küssend"), "kussend");});
test("küsserei -> kusserei", function() {deepEqual( Stem("küsserei"), "kusserei");});
test("kusshändchen -> kusshandch", function() {deepEqual( Stem("kusshändchen"), "kusshandch");});
test("küsslein -> kusslein", function() {deepEqual( Stem("küsslein"), "kusslein");});
test("küsst -> kusst", function() {deepEqual( Stem("küsst"), "kusst");});
test("küßt -> kusst", function() {deepEqual( Stem("küßt"), "kusst");});
test("küsste -> kusst", function() {deepEqual( Stem("küsste"), "kusst");});
test("küßte -> kusst", function() {deepEqual( Stem("küßte"), "kusst");});
test("küssten -> kusst", function() {deepEqual( Stem("küssten"), "kusst");});
test("küsten -> kust", function() {deepEqual( Stem("küsten"), "kust");});
test("küstern -> kust", function() {deepEqual( Stem("küstern"), "kust");});
test("kutsche -> kutsch", function() {deepEqual( Stem("kutsche"), "kutsch");});
test("kutscher -> kutsch", function() {deepEqual( Stem("kutscher"), "kutsch");});
test("kutschers -> kutsch", function() {deepEqual( Stem("kutschers"), "kutsch");});
test("kutschieren -> kutschi", function() {deepEqual( Stem("kutschieren"), "kutschi");});
test("kutschierte -> kutschiert", function() {deepEqual( Stem("kutschierte"), "kutschiert");});
test("kutte -> kutt", function() {deepEqual( Stem("kutte"), "kutt");});
test("kuv -> kuv", function() {deepEqual( Stem("kuv"), "kuv");});
test("l -> l", function() {deepEqual( Stem("l"), "l");});
test("la -> la", function() {deepEqual( Stem("la"), "la");});
test("laban -> laban", function() {deepEqual( Stem("laban"), "laban");});
test("labe -> lab", function() {deepEqual( Stem("labe"), "lab");});
test("label -> label", function() {deepEqual( Stem("label"), "label");});
test("laboratorium -> laboratorium", function() {deepEqual( Stem("laboratorium"), "laboratorium");});
test("labyrinth -> labyrinth", function() {deepEqual( Stem("labyrinth"), "labyrinth");});
test("labyrinthe -> labyrinth", function() {deepEqual( Stem("labyrinthe"), "labyrinth");});
test("lachchors -> lachchor", function() {deepEqual( Stem("lachchors"), "lachchor");});
test("lächeln -> lacheln", function() {deepEqual( Stem("lächeln"), "lacheln");});
test("lächelnd -> lachelnd", function() {deepEqual( Stem("lächelnd"), "lachelnd");});
test("lächelnde -> lachelnd", function() {deepEqual( Stem("lächelnde"), "lachelnd");});
test("lächelndem -> lachelnd", function() {deepEqual( Stem("lächelndem"), "lachelnd");});
test("lächelnden -> lachelnd", function() {deepEqual( Stem("lächelnden"), "lachelnd");});
test("lächelnder -> lachelnd", function() {deepEqual( Stem("lächelnder"), "lachelnd");});
test("lächelt -> lachelt", function() {deepEqual( Stem("lächelt"), "lachelt");});
test("lächelte -> lachelt", function() {deepEqual( Stem("lächelte"), "lachelt");});
test("lächelten -> lachelt", function() {deepEqual( Stem("lächelten"), "lachelt");});
test("lachen -> lach", function() {deepEqual( Stem("lachen"), "lach");});
test("lachend -> lachend", function() {deepEqual( Stem("lachend"), "lachend");});
test("lachende -> lachend", function() {deepEqual( Stem("lachende"), "lachend");});
test("lachendem -> lachend", function() {deepEqual( Stem("lachendem"), "lachend");});
test("lachenden -> lachend", function() {deepEqual( Stem("lachenden"), "lachend");});
test("lachendes -> lachend", function() {deepEqual( Stem("lachendes"), "lachend");});
test("lächerlich -> lach", function() {deepEqual( Stem("lächerlich"), "lach");});
test("lächerlichen -> lach", function() {deepEqual( Stem("lächerlichen"), "lach");});
test("lächerliches -> lach", function() {deepEqual( Stem("lächerliches"), "lach");});
test("lächerlichkeit -> lacher", function() {deepEqual( Stem("lächerlichkeit"), "lacher");});
test("lächerlichsten -> lach", function() {deepEqual( Stem("lächerlichsten"), "lach");});
test("lachkrampf -> lachkrampf", function() {deepEqual( Stem("lachkrampf"), "lachkrampf");});
test("lachs -> lach", function() {deepEqual( Stem("lachs"), "lach");});
test("lacht -> lacht", function() {deepEqual( Stem("lacht"), "lacht");});
test("lachte -> lacht", function() {deepEqual( Stem("lachte"), "lacht");});
test("lachten -> lacht", function() {deepEqual( Stem("lachten"), "lacht");});
test("lachtest -> lacht", function() {deepEqual( Stem("lachtest"), "lacht");});
test("lachtöne -> lachton", function() {deepEqual( Stem("lachtöne"), "lachton");});
test("lackieren -> lacki", function() {deepEqual( Stem("lackieren"), "lacki");});
test("lackiert -> lackiert", function() {deepEqual( Stem("lackiert"), "lackiert");});
test("lackierten -> lackiert", function() {deepEqual( Stem("lackierten"), "lackiert");});
test("lackl -> lackl", function() {deepEqual( Stem("lackl"), "lackl");});
test("lädchen -> ladch", function() {deepEqual( Stem("lädchen"), "ladch");});
test("lädchens -> ladch", function() {deepEqual( Stem("lädchens"), "ladch");});
test("lade -> lad", function() {deepEqual( Stem("lade"), "lad");});
test("laden -> lad", function() {deepEqual( Stem("laden"), "lad");});
test("läden -> lad", function() {deepEqual( Stem("läden"), "lad");});
test("ladend -> ladend", function() {deepEqual( Stem("ladend"), "ladend");});
test("ladendiebin -> ladendiebin", function() {deepEqual( Stem("ladendiebin"), "ladendiebin");});
test("ladenkasse -> ladenkass", function() {deepEqual( Stem("ladenkasse"), "ladenkass");});
test("ladentür -> ladentur", function() {deepEqual( Stem("ladentür"), "ladentur");});
test("ladies -> ladi", function() {deepEqual( Stem("ladies"), "ladi");});
test("lädt -> ladt", function() {deepEqual( Stem("lädt"), "ladt");});
test("ladung -> ladung", function() {deepEqual( Stem("ladung"), "ladung");});
test("lady -> lady", function() {deepEqual( Stem("lady"), "lady");});
test("laert -> laert", function() {deepEqual( Stem("laert"), "laert");});
test("laertius -> laertius", function() {deepEqual( Stem("laertius"), "laertius");});
test("lag -> lag", function() {deepEqual( Stem("lag"), "lag");});
test("lage -> lag", function() {deepEqual( Stem("lage"), "lag");});
test("läge -> lag", function() {deepEqual( Stem("läge"), "lag");});
test("lagen -> lag", function() {deepEqual( Stem("lagen"), "lag");});
test("lägen -> lag", function() {deepEqual( Stem("lägen"), "lag");});
test("lager -> lag", function() {deepEqual( Stem("lager"), "lag");});
test("lagern -> lag", function() {deepEqual( Stem("lagern"), "lag");});
test("lagernd -> lagernd", function() {deepEqual( Stem("lagernd"), "lagernd");});
test("lagers -> lag", function() {deepEqual( Stem("lagers"), "lag");});
test("lagerstätte -> lagerstatt", function() {deepEqual( Stem("lagerstätte"), "lagerstatt");});
test("lagert -> lagert", function() {deepEqual( Stem("lagert"), "lagert");});
test("lagerte -> lagert", function() {deepEqual( Stem("lagerte"), "lagert");});
test("lahme -> lahm", function() {deepEqual( Stem("lahme"), "lahm");});
test("lahmen -> lahm", function() {deepEqual( Stem("lahmen"), "lahm");});
test("lahmgewordenen -> lahmgeword", function() {deepEqual( Stem("lahmgewordenen"), "lahmgeword");});
test("lahnstreif -> lahnstreif", function() {deepEqual( Stem("lahnstreif"), "lahnstreif");});
test("laie -> laie", function() {deepEqual( Stem("laie"), "laie");});
test("laien -> laien", function() {deepEqual( Stem("laien"), "laien");});
test("lallt -> lallt", function() {deepEqual( Stem("lallt"), "lallt");});
test("lamech -> lamech", function() {deepEqual( Stem("lamech"), "lamech");});
test("lamechs -> lamech", function() {deepEqual( Stem("lamechs"), "lamech");});
test("lamentieren -> lamenti", function() {deepEqual( Stem("lamentieren"), "lamenti");});
test("lamentierte -> lamentiert", function() {deepEqual( Stem("lamentierte"), "lamentiert");});
test("lamm -> lamm", function() {deepEqual( Stem("lamm"), "lamm");});
test("lämmchen -> lammch", function() {deepEqual( Stem("lämmchen"), "lammch");});
test("lamme -> lamm", function() {deepEqual( Stem("lamme"), "lamm");});
test("lämmer -> lamm", function() {deepEqual( Stem("lämmer"), "lamm");});
test("lämmerwölkchen -> lammerwolkch", function() {deepEqual( Stem("lämmerwölkchen"), "lammerwolkch");});
test("lammes -> lamm", function() {deepEqual( Stem("lammes"), "lamm");});
test("lammgeduld -> lammgeduld", function() {deepEqual( Stem("lammgeduld"), "lammgeduld");});
test("lämmlein -> lammlein", function() {deepEqual( Stem("lämmlein"), "lammlein");});
test("lämpchen -> lampch", function() {deepEqual( Stem("lämpchen"), "lampch");});
test("lampe -> lamp", function() {deepEqual( Stem("lampe"), "lamp");});
test("lamperl -> lamperl", function() {deepEqual( Stem("lamperl"), "lamperl");});
test("lanciert -> lanciert", function() {deepEqual( Stem("lanciert"), "lanciert");});
test("land -> land", function() {deepEqual( Stem("land"), "land");});
test("landarmee -> landarme", function() {deepEqual( Stem("landarmee"), "landarme");});
test("landauer -> landau", function() {deepEqual( Stem("landauer"), "landau");});
test("landbursche -> landbursch", function() {deepEqual( Stem("landbursche"), "landbursch");});
test("ländchen -> landch", function() {deepEqual( Stem("ländchen"), "landch");});
test("ländchens -> landch", function() {deepEqual( Stem("ländchens"), "landch");});
test("lande -> land", function() {deepEqual( Stem("lande"), "land");});
test("landen -> land", function() {deepEqual( Stem("landen"), "land");});
test("länder -> land", function() {deepEqual( Stem("länder"), "land");});
test("länderfernen -> landerfern", function() {deepEqual( Stem("länderfernen"), "landerfern");});
test("ländern -> land", function() {deepEqual( Stem("ländern"), "land");});
test("landes -> land", function() {deepEqual( Stem("landes"), "land");});
test("landesautoritäten -> landesautoritat", function() {deepEqual( Stem("landesautoritäten"), "landesautoritat");});
test("landesfürst -> landesfurst", function() {deepEqual( Stem("landesfürst"), "landesfurst");});
test("landeskirche -> landeskirch", function() {deepEqual( Stem("landeskirche"), "landeskirch");});
test("landeskirchen -> landeskirch", function() {deepEqual( Stem("landeskirchen"), "landeskirch");});
test("landeskirchliche -> landeskirch", function() {deepEqual( Stem("landeskirchliche"), "landeskirch");});
test("landesmehrheit -> landesmehr", function() {deepEqual( Stem("landesmehrheit"), "landesmehr");});
test("landesüblichen -> landesub", function() {deepEqual( Stem("landesüblichen"), "landesub");});
test("landesverteidigung -> landesverteid", function() {deepEqual( Stem("landesverteidigung"), "landesverteid");});
test("landeswohl -> landeswohl", function() {deepEqual( Stem("landeswohl"), "landeswohl");});
test("landete -> landet", function() {deepEqual( Stem("landete"), "landet");});
test("landeten -> landet", function() {deepEqual( Stem("landeten"), "landet");});
test("landflüchtige -> landflucht", function() {deepEqual( Stem("landflüchtige"), "landflucht");});
test("landfrau -> landfrau", function() {deepEqual( Stem("landfrau"), "landfrau");});
test("landfriedenbrecher -> landfriedenbrech", function() {deepEqual( Stem("landfriedenbrecher"), "landfriedenbrech");});
test("landgericht -> landgericht", function() {deepEqual( Stem("landgericht"), "landgericht");});
test("landhaus -> landhaus", function() {deepEqual( Stem("landhaus"), "landhaus");});
test("landläufige -> landlauf", function() {deepEqual( Stem("landläufige"), "landlauf");});
test("landleben -> landleb", function() {deepEqual( Stem("landleben"), "landleb");});
test("landleute -> landleut", function() {deepEqual( Stem("landleute"), "landleut");});
test("landleuten -> landleut", function() {deepEqual( Stem("landleuten"), "landleut");});
test("ländliche -> landlich", function() {deepEqual( Stem("ländliche"), "landlich");});
test("ländlichen -> landlich", function() {deepEqual( Stem("ländlichen"), "landlich");});
test("landmädchen -> landmadch", function() {deepEqual( Stem("landmädchen"), "landmadch");});
test("landmann -> landmann", function() {deepEqual( Stem("landmann"), "landmann");});
test("landmänner -> landmann", function() {deepEqual( Stem("landmänner"), "landmann");});
test("landpartie -> landparti", function() {deepEqual( Stem("landpartie"), "landparti");});
test("landpartien -> landparti", function() {deepEqual( Stem("landpartien"), "landparti");});
test("landrock -> landrock", function() {deepEqual( Stem("landrock"), "landrock");});
test("landschaft -> landschaft", function() {deepEqual( Stem("landschaft"), "landschaft");});
test("landschaften -> landschaft", function() {deepEqual( Stem("landschaften"), "landschaft");});
test("landsitz -> landsitz", function() {deepEqual( Stem("landsitz"), "landsitz");});
test("landsleute -> landsleut", function() {deepEqual( Stem("landsleute"), "landsleut");});
test("landsmann -> landsmann", function() {deepEqual( Stem("landsmann"), "landsmann");});
test("landsmannes -> landsmann", function() {deepEqual( Stem("landsmannes"), "landsmann");});
test("landstrasse -> landstrass", function() {deepEqual( Stem("landstrasse"), "landstrass");});
test("landstrassen -> landstrass", function() {deepEqual( Stem("landstrassen"), "landstrass");});
test("landstraßen -> landstrass", function() {deepEqual( Stem("landstraßen"), "landstrass");});
test("landstreicher -> landstreich", function() {deepEqual( Stem("landstreicher"), "landstreich");});
test("landstrich -> landstrich", function() {deepEqual( Stem("landstrich"), "landstrich");});
test("landstriches -> landstrich", function() {deepEqual( Stem("landstriches"), "landstrich");});
test("landsturm -> landsturm", function() {deepEqual( Stem("landsturm"), "landsturm");});
test("landungsstelle -> landungsstell", function() {deepEqual( Stem("landungsstelle"), "landungsstell");});
test("landvolk -> landvolk", function() {deepEqual( Stem("landvolk"), "landvolk");});
test("landvolkes -> landvolk", function() {deepEqual( Stem("landvolkes"), "landvolk");});
test("landwirtschaft -> landwirtschaft", function() {deepEqual( Stem("landwirtschaft"), "landwirtschaft");});
test("lang -> lang", function() {deepEqual( Stem("lang"), "lang");});
test("langbeinen -> langbein", function() {deepEqual( Stem("langbeinen"), "langbein");});
test("lange -> lang", function() {deepEqual( Stem("lange"), "lang");});
test("länge -> lang", function() {deepEqual( Stem("länge"), "lang");});
test("langem -> lang", function() {deepEqual( Stem("langem"), "lang");});
test("langen -> lang", function() {deepEqual( Stem("langen"), "lang");});
test("langer -> lang", function() {deepEqual( Stem("langer"), "lang");});
test("länger -> lang", function() {deepEqual( Stem("länger"), "lang");});
test("längere -> lang", function() {deepEqual( Stem("längere"), "lang");});
test("längeren -> lang", function() {deepEqual( Stem("längeren"), "lang");});
test("längerer -> lang", function() {deepEqual( Stem("längerer"), "lang");});
test("langes -> lang", function() {deepEqual( Stem("langes"), "lang");});
test("langeweile -> langeweil", function() {deepEqual( Stem("langeweile"), "langeweil");});
test("langgezogenen -> langgezog", function() {deepEqual( Stem("langgezogenen"), "langgezog");});
test("langhingestreckte -> langhingestreckt", function() {deepEqual( Stem("langhingestreckte"), "langhingestreckt");});
test("langjährige -> langjahr", function() {deepEqual( Stem("langjährige"), "langjahr");});
test("langjährigen -> langjahr", function() {deepEqual( Stem("langjährigen"), "langjahr");});
test("längliche -> langlich", function() {deepEqual( Stem("längliche"), "langlich");});
test("länglichen -> langlich", function() {deepEqual( Stem("länglichen"), "langlich");});
test("längliches -> langlich", function() {deepEqual( Stem("längliches"), "langlich");});
test("langmut -> langmut", function() {deepEqual( Stem("langmut"), "langmut");});
test("langmütig -> langmut", function() {deepEqual( Stem("langmütig"), "langmut");});
test("langriemige -> langriem", function() {deepEqual( Stem("langriemige"), "langriem");});
test("langrollende -> langroll", function() {deepEqual( Stem("langrollende"), "langroll");});
test("langsam -> langsam", function() {deepEqual( Stem("langsam"), "langsam");});
test("langsame -> langsam", function() {deepEqual( Stem("langsame"), "langsam");});
test("langsamen -> langsam", function() {deepEqual( Stem("langsamen"), "langsam");});
test("langsamer -> langsam", function() {deepEqual( Stem("langsamer"), "langsam");});
test("langsamkeit -> langsam", function() {deepEqual( Stem("langsamkeit"), "langsam");});
test("längst -> lang", function() {deepEqual( Stem("längst"), "lang");});
test("längste -> lang", function() {deepEqual( Stem("längste"), "lang");});
test("längsten -> lang", function() {deepEqual( Stem("längsten"), "lang");});
test("längstens -> langst", function() {deepEqual( Stem("längstens"), "langst");});
test("langstündige -> langstund", function() {deepEqual( Stem("langstündige"), "langstund");});
test("langte -> langt", function() {deepEqual( Stem("langte"), "langt");});
test("langweilen -> langweil", function() {deepEqual( Stem("langweilen"), "langweil");});
test("langweilig -> langweil", function() {deepEqual( Stem("langweilig"), "langweil");});
test("langweilige -> langweil", function() {deepEqual( Stem("langweilige"), "langweil");});
test("langweiligen -> langweil", function() {deepEqual( Stem("langweiligen"), "langweil");});
test("lanz -> lanz", function() {deepEqual( Stem("lanz"), "lanz");});
test("lanze -> lanz", function() {deepEqual( Stem("lanze"), "lanz");});
test("läppische -> lappisch", function() {deepEqual( Stem("läppische"), "lappisch");});
test("lärchenstämmchen -> larchenstammch", function() {deepEqual( Stem("lärchenstämmchen"), "larchenstammch");});
test("largo -> largo", function() {deepEqual( Stem("largo"), "largo");});
test("larifari -> larifari", function() {deepEqual( Stem("larifari"), "larifari");});
test("lärm -> larm", function() {deepEqual( Stem("lärm"), "larm");});
test("lärmen -> larm", function() {deepEqual( Stem("lärmen"), "larm");});
test("lärmende -> larmend", function() {deepEqual( Stem("lärmende"), "larmend");});
test("lärmendes -> larmend", function() {deepEqual( Stem("lärmendes"), "larmend");});
test("lärmten -> larmt", function() {deepEqual( Stem("lärmten"), "larmt");});
test("las -> las", function() {deepEqual( Stem("las"), "las");});
test("lasen -> las", function() {deepEqual( Stem("lasen"), "las");});
test("lass -> lass", function() {deepEqual( Stem("lass"), "lass");});
test("laß -> lass", function() {deepEqual( Stem("laß"), "lass");});
test("lasse -> lass", function() {deepEqual( Stem("lasse"), "lass");});
test("lassen -> lass", function() {deepEqual( Stem("lassen"), "lass");});
test("lässest -> lass", function() {deepEqual( Stem("lässest"), "lass");});
test("lasset -> lasset", function() {deepEqual( Stem("lasset"), "lasset");});
test("lässig -> lassig", function() {deepEqual( Stem("lässig"), "lassig");});
test("lasst -> lasst", function() {deepEqual( Stem("lasst"), "lasst");});
test("laßt -> lasst", function() {deepEqual( Stem("laßt"), "lasst");});
test("lässt -> lasst", function() {deepEqual( Stem("lässt"), "lasst");});
test("läßt -> lasst", function() {deepEqual( Stem("läßt"), "lasst");});
test("last -> last", function() {deepEqual( Stem("last"), "last");});
test("lasten -> last", function() {deepEqual( Stem("lasten"), "last");});
test("laster -> last", function() {deepEqual( Stem("laster"), "last");});
test("lasterhaften -> lasterhaft", function() {deepEqual( Stem("lasterhaften"), "lasterhaft");});
test("lästerliche -> last", function() {deepEqual( Stem("lästerliche"), "last");});
test("lästerliches -> last", function() {deepEqual( Stem("lästerliches"), "last");});
test("lästerlichstem -> last", function() {deepEqual( Stem("lästerlichstem"), "last");});
test("lastern -> last", function() {deepEqual( Stem("lastern"), "last");});
test("lästern -> last", function() {deepEqual( Stem("lästern"), "last");});
test("lästerns -> lastern", function() {deepEqual( Stem("lästerns"), "lastern");});
test("lästert -> lastert", function() {deepEqual( Stem("lästert"), "lastert");});
test("lästerte -> lastert", function() {deepEqual( Stem("lästerte"), "lastert");});
test("lästerten -> lastert", function() {deepEqual( Stem("lästerten"), "lastert");});
test("lästerung -> laster", function() {deepEqual( Stem("lästerung"), "laster");});
test("lästerungen -> laster", function() {deepEqual( Stem("lästerungen"), "laster");});
test("lastete -> lastet", function() {deepEqual( Stem("lastete"), "lastet");});
test("lastfuhren -> lastfuhr", function() {deepEqual( Stem("lastfuhren"), "lastfuhr");});
test("lästig -> lastig", function() {deepEqual( Stem("lästig"), "lastig");});
test("lästige -> lastig", function() {deepEqual( Stem("lästige"), "lastig");});
test("lastschlitten -> lastschlitt", function() {deepEqual( Stem("lastschlitten"), "lastschlitt");});
test("lat -> lat", function() {deepEqual( Stem("lat"), "lat");});
test("lateiner -> latein", function() {deepEqual( Stem("lateiner"), "latein");});
test("lateinerte -> lateinert", function() {deepEqual( Stem("lateinerte"), "lateinert");});
test("lateinisch -> latein", function() {deepEqual( Stem("lateinisch"), "latein");});
test("lateinische -> latein", function() {deepEqual( Stem("lateinische"), "latein");});
test("lateinischen -> latein", function() {deepEqual( Stem("lateinischen"), "latein");});
test("lateinschuljahr -> lateinschuljahr", function() {deepEqual( Stem("lateinschuljahr"), "lateinschuljahr");});
test("laternchen -> laternch", function() {deepEqual( Stem("laternchen"), "laternch");});
test("laterne -> latern", function() {deepEqual( Stem("laterne"), "latern");});
test("laternen -> latern", function() {deepEqual( Stem("laternen"), "latern");});
test("lattenzaunes -> lattenzaun", function() {deepEqual( Stem("lattenzaunes"), "lattenzaun");});
test("lattichblatt -> lattichblatt", function() {deepEqual( Stem("lattichblatt"), "lattichblatt");});
test("laub -> laub", function() {deepEqual( Stem("laub"), "laub");});
test("laube -> laub", function() {deepEqual( Stem("laube"), "laub");});
test("lauben -> laub", function() {deepEqual( Stem("lauben"), "laub");});
test("laubhütten -> laubhutt", function() {deepEqual( Stem("laubhütten"), "laubhutt");});
test("laubmassen -> laubmass", function() {deepEqual( Stem("laubmassen"), "laubmass");});
test("lauen -> lau", function() {deepEqual( Stem("lauen"), "lau");});
test("lauer -> lau", function() {deepEqual( Stem("lauer"), "lau");});
test("lauerten -> lauert", function() {deepEqual( Stem("lauerten"), "lauert");});
test("lauf -> lauf", function() {deepEqual( Stem("lauf"), "lauf");});
test("laufbahn -> laufbahn", function() {deepEqual( Stem("laufbahn"), "laufbahn");});
test("laufe -> lauf", function() {deepEqual( Stem("laufe"), "lauf");});
test("laufen -> lauf", function() {deepEqual( Stem("laufen"), "lauf");});
test("laufend -> laufend", function() {deepEqual( Stem("laufend"), "laufend");});
test("laufendem -> laufend", function() {deepEqual( Stem("laufendem"), "laufend");});
test("laufenden -> laufend", function() {deepEqual( Stem("laufenden"), "laufend");});
test("läufer -> lauf", function() {deepEqual( Stem("läufer"), "lauf");});
test("laufes -> lauf", function() {deepEqual( Stem("laufes"), "lauf");});
test("laufet -> laufet", function() {deepEqual( Stem("laufet"), "laufet");});
test("laufs -> lauf", function() {deepEqual( Stem("laufs"), "lauf");});
test("lauft -> lauft", function() {deepEqual( Stem("lauft"), "lauft");});
test("läuft -> lauft", function() {deepEqual( Stem("läuft"), "lauft");});
test("laune -> laun", function() {deepEqual( Stem("laune"), "laun");});
test("launen -> laun", function() {deepEqual( Stem("launen"), "laun");});
test("launigen -> launig", function() {deepEqual( Stem("launigen"), "launig");});
test("laurens -> laur", function() {deepEqual( Stem("laurens"), "laur");});
test("lausanne -> lausann", function() {deepEqual( Stem("lausanne"), "lausann");});
test("lauschend -> lauschend", function() {deepEqual( Stem("lauschend"), "lauschend");});
test("lauschens -> lausch", function() {deepEqual( Stem("lauschens"), "lausch");});
test("lauscher -> lausch", function() {deepEqual( Stem("lauscher"), "lausch");});
test("lauschte -> lauscht", function() {deepEqual( Stem("lauschte"), "lauscht");});
test("lauschten -> lauscht", function() {deepEqual( Stem("lauschten"), "lauscht");});
test("läuse -> laus", function() {deepEqual( Stem("läuse"), "laus");});
test("lausekerl -> lausekerl", function() {deepEqual( Stem("lausekerl"), "lausekerl");});
test("läusen -> laus", function() {deepEqual( Stem("läusen"), "laus");});
test("laut -> laut", function() {deepEqual( Stem("laut"), "laut");});
test("laute -> laut", function() {deepEqual( Stem("laute"), "laut");});
test("lautem -> laut", function() {deepEqual( Stem("lautem"), "laut");});
test("lauten -> laut", function() {deepEqual( Stem("lauten"), "laut");});
test("läuten -> laut", function() {deepEqual( Stem("läuten"), "laut");});
test("lauter -> laut", function() {deepEqual( Stem("lauter"), "laut");});
test("lautere -> laut", function() {deepEqual( Stem("lautere"), "laut");});
test("lauterem -> laut", function() {deepEqual( Stem("lauterem"), "laut");});
test("lauteren -> laut", function() {deepEqual( Stem("lauteren"), "laut");});
test("lauterkeit -> lauter", function() {deepEqual( Stem("lauterkeit"), "lauter");});
test("läutern -> laut", function() {deepEqual( Stem("läutern"), "laut");});
test("läuternd -> lauternd", function() {deepEqual( Stem("läuternd"), "lauternd");});
test("lautes -> laut", function() {deepEqual( Stem("lautes"), "laut");});
test("lautet -> lautet", function() {deepEqual( Stem("lautet"), "lautet");});
test("läutet -> lautet", function() {deepEqual( Stem("läutet"), "lautet");});
test("lautete -> lautet", function() {deepEqual( Stem("lautete"), "lautet");});
test("läutete -> lautet", function() {deepEqual( Stem("läutete"), "lautet");});
test("lautlos -> lautlos", function() {deepEqual( Stem("lautlos"), "lautlos");});
test("lautlose -> lautlos", function() {deepEqual( Stem("lautlose"), "lautlos");});
test("lautloser -> lautlos", function() {deepEqual( Stem("lautloser"), "lautlos");});
test("lautsprecher -> lautsprech", function() {deepEqual( Stem("lautsprecher"), "lautsprech");});
test("lautsprechern -> lautsprech", function() {deepEqual( Stem("lautsprechern"), "lautsprech");});
test("lautstarke -> lautstark", function() {deepEqual( Stem("lautstarke"), "lautstark");});
test("lazare -> lazar", function() {deepEqual( Stem("lazare"), "lazar");});
test("lazarus -> lazarus", function() {deepEqual( Stem("lazarus"), "lazarus");});
test("le -> le", function() {deepEqual( Stem("le"), "le");});
test("leah -> leah", function() {deepEqual( Stem("leah"), "leah");});
test("leb -> leb", function() {deepEqual( Stem("leb"), "leb");});
test("lebe -> leb", function() {deepEqual( Stem("lebe"), "leb");});
test("leben -> leb", function() {deepEqual( Stem("leben"), "leb");});
test("lebend -> lebend", function() {deepEqual( Stem("lebend"), "lebend");});
test("lebende -> lebend", function() {deepEqual( Stem("lebende"), "lebend");});
test("lebenden -> lebend", function() {deepEqual( Stem("lebenden"), "lebend");});
test("lebendes -> lebend", function() {deepEqual( Stem("lebendes"), "lebend");});
test("lebendig -> lebend", function() {deepEqual( Stem("lebendig"), "lebend");});
test("lebendige -> lebend", function() {deepEqual( Stem("lebendige"), "lebend");});
test("lebendigem -> lebend", function() {deepEqual( Stem("lebendigem"), "lebend");});
test("lebendigen -> lebend", function() {deepEqual( Stem("lebendigen"), "lebend");});
test("lebendiger -> lebend", function() {deepEqual( Stem("lebendiger"), "lebend");});
test("lebendiges -> lebend", function() {deepEqual( Stem("lebendiges"), "lebend");});
test("lebendigsten -> lebend", function() {deepEqual( Stem("lebendigsten"), "lebend");});
test("lebens -> leb", function() {deepEqual( Stem("lebens"), "leb");});
test("lebensabschnitt -> lebensabschnitt", function() {deepEqual( Stem("lebensabschnitt"), "lebensabschnitt");});
test("lebensähnliches -> lebensahn", function() {deepEqual( Stem("lebensähnliches"), "lebensahn");});
test("lebensalter -> lebensalt", function() {deepEqual( Stem("lebensalter"), "lebensalt");});
test("lebensart -> lebensart", function() {deepEqual( Stem("lebensart"), "lebensart");});
test("lebensbedingungen -> lebensbeding", function() {deepEqual( Stem("lebensbedingungen"), "lebensbeding");});
test("lebensbedürfnis -> lebensbedurfnis", function() {deepEqual( Stem("lebensbedürfnis"), "lebensbedurfnis");});
test("lebensbeschreibung -> lebensbeschreib", function() {deepEqual( Stem("lebensbeschreibung"), "lebensbeschreib");});
test("lebensbuche -> lebensbuch", function() {deepEqual( Stem("lebensbuche"), "lebensbuch");});
test("lebenselixier -> lebenselixi", function() {deepEqual( Stem("lebenselixier"), "lebenselixi");});
test("lebensfahrt -> lebensfahrt", function() {deepEqual( Stem("lebensfahrt"), "lebensfahrt");});
test("lebensfeuer -> lebensfeu", function() {deepEqual( Stem("lebensfeuer"), "lebensfeu");});
test("lebensformen -> lebensform", function() {deepEqual( Stem("lebensformen"), "lebensform");});
test("lebensfreude -> lebensfreud", function() {deepEqual( Stem("lebensfreude"), "lebensfreud");});
test("lebensfroh -> lebensfroh", function() {deepEqual( Stem("lebensfroh"), "lebensfroh");});
test("lebensgefühl -> lebensgefuhl", function() {deepEqual( Stem("lebensgefühl"), "lebensgefuhl");});
test("lebensgeister -> lebensgeist", function() {deepEqual( Stem("lebensgeister"), "lebensgeist");});
test("lebensgeschichte -> lebensgeschicht", function() {deepEqual( Stem("lebensgeschichte"), "lebensgeschicht");});
test("lebensglück -> lebensgluck", function() {deepEqual( Stem("lebensglück"), "lebensgluck");});
test("lebensglücke -> lebensgluck", function() {deepEqual( Stem("lebensglücke"), "lebensgluck");});
test("lebensguten -> lebensgut", function() {deepEqual( Stem("lebensguten"), "lebensgut");});
test("lebenshelfer -> lebenshelf", function() {deepEqual( Stem("lebenshelfer"), "lebenshelf");});
test("lebensjahr -> lebensjahr", function() {deepEqual( Stem("lebensjahr"), "lebensjahr");});
test("lebenskatastrophe -> lebenskatastroph", function() {deepEqual( Stem("lebenskatastrophe"), "lebenskatastroph");});
test("lebenskraft -> lebenskraft", function() {deepEqual( Stem("lebenskraft"), "lebenskraft");});
test("lebenskräftig -> lebenskraft", function() {deepEqual( Stem("lebenskräftig"), "lebenskraft");});
test("lebenslanges -> lebenslang", function() {deepEqual( Stem("lebenslanges"), "lebenslang");});
test("lebenslauf -> lebenslauf", function() {deepEqual( Stem("lebenslauf"), "lebenslauf");});
test("lebensläufen -> lebenslauf", function() {deepEqual( Stem("lebensläufen"), "lebenslauf");});
test("lebenslicht -> lebenslicht", function() {deepEqual( Stem("lebenslicht"), "lebenslicht");});
test("lebenslust -> lebenslust", function() {deepEqual( Stem("lebenslust"), "lebenslust");});
test("lebenslustigen -> lebenslust", function() {deepEqual( Stem("lebenslustigen"), "lebenslust");});
test("lebensmittel -> lebensmittel", function() {deepEqual( Stem("lebensmittel"), "lebensmittel");});
test("lebensmittelembargos -> lebensmittelembargos", function() {deepEqual( Stem("lebensmittelembargos"), "lebensmittelembargos");});
test("lebensmitteln -> lebensmitteln", function() {deepEqual( Stem("lebensmitteln"), "lebensmitteln");});
test("lebensmut -> lebensmut", function() {deepEqual( Stem("lebensmut"), "lebensmut");});
test("lebensordnung -> lebensordn", function() {deepEqual( Stem("lebensordnung"), "lebensordn");});
test("lebensordnungen -> lebensordn", function() {deepEqual( Stem("lebensordnungen"), "lebensordn");});
test("lebensregeln -> lebensregeln", function() {deepEqual( Stem("lebensregeln"), "lebensregeln");});
test("lebensretter -> lebensrett", function() {deepEqual( Stem("lebensretter"), "lebensrett");});
test("lebenssache -> lebenssach", function() {deepEqual( Stem("lebenssache"), "lebenssach");});
test("lebenssachverhalten -> lebenssachverhalt", function() {deepEqual( Stem("lebenssachverhalten"), "lebenssachverhalt");});
test("lebensseligkeit -> lebenssel", function() {deepEqual( Stem("lebensseligkeit"), "lebenssel");});
test("lebenssituation -> lebenssituation", function() {deepEqual( Stem("lebenssituation"), "lebenssituation");});
test("lebensstunde -> lebensstund", function() {deepEqual( Stem("lebensstunde"), "lebensstund");});
test("lebenstagen -> lebenstag", function() {deepEqual( Stem("lebenstagen"), "lebenstag");});
test("lebenstrieb -> lebenstrieb", function() {deepEqual( Stem("lebenstrieb"), "lebenstrieb");});
test("lebenswandel -> lebenswandel", function() {deepEqual( Stem("lebenswandel"), "lebenswandel");});
test("lebenswandels -> lebenswandel", function() {deepEqual( Stem("lebenswandels"), "lebenswandel");});
test("lebenswasser -> lebenswass", function() {deepEqual( Stem("lebenswasser"), "lebenswass");});
test("lebensweg -> lebensweg", function() {deepEqual( Stem("lebensweg"), "lebensweg");});
test("lebensweise -> lebensweis", function() {deepEqual( Stem("lebensweise"), "lebensweis");});
test("lebensweisen -> lebensweis", function() {deepEqual( Stem("lebensweisen"), "lebensweis");});
test("lebensweisheit -> lebensweis", function() {deepEqual( Stem("lebensweisheit"), "lebensweis");});
test("lebenszustand -> lebenszustand", function() {deepEqual( Stem("lebenszustand"), "lebenszustand");});
test("lebenszustände -> lebenszustand", function() {deepEqual( Stem("lebenszustände"), "lebenszustand");});
test("leber -> leb", function() {deepEqual( Stem("leber"), "leb");});
test("leberwurst -> leberwurst", function() {deepEqual( Stem("leberwurst"), "leberwurst");});
test("lebest -> leb", function() {deepEqual( Stem("lebest"), "leb");});
test("lebewohl -> lebewohl", function() {deepEqual( Stem("lebewohl"), "lebewohl");});
test("lebhaft -> lebhaft", function() {deepEqual( Stem("lebhaft"), "lebhaft");});
test("lebhafte -> lebhaft", function() {deepEqual( Stem("lebhafte"), "lebhaft");});
test("lebhaftem -> lebhaft", function() {deepEqual( Stem("lebhaftem"), "lebhaft");});
test("lebhaften -> lebhaft", function() {deepEqual( Stem("lebhaften"), "lebhaft");});
test("lebhafter -> lebhaft", function() {deepEqual( Stem("lebhafter"), "lebhaft");});
test("lebhaftesten -> lebhaft", function() {deepEqual( Stem("lebhaftesten"), "lebhaft");});
test("lebhaftigkeit -> lebhaft", function() {deepEqual( Stem("lebhaftigkeit"), "lebhaft");});
test("lebkuchen -> lebkuch", function() {deepEqual( Stem("lebkuchen"), "lebkuch");});
test("leblos -> leblos", function() {deepEqual( Stem("leblos"), "leblos");});
test("leblose -> leblos", function() {deepEqual( Stem("leblose"), "leblos");});
test("leblosen -> leblos", function() {deepEqual( Stem("leblosen"), "leblos");});
test("lebloses -> leblos", function() {deepEqual( Stem("lebloses"), "leblos");});
test("lebst -> lebst", function() {deepEqual( Stem("lebst"), "lebst");});
test("lebt -> lebt", function() {deepEqual( Stem("lebt"), "lebt");});
test("lebtag -> lebtag", function() {deepEqual( Stem("lebtag"), "lebtag");});
test("lebte -> lebt", function() {deepEqual( Stem("lebte"), "lebt");});
test("lebten -> lebt", function() {deepEqual( Stem("lebten"), "lebt");});
test("lebzeiten -> lebzeit", function() {deepEqual( Stem("lebzeiten"), "lebzeit");});
test("lechleitner -> lechleitn", function() {deepEqual( Stem("lechleitner"), "lechleitn");});
test("lechneitner -> lechneitn", function() {deepEqual( Stem("lechneitner"), "lechneitn");});
test("lechzt -> lechzt", function() {deepEqual( Stem("lechzt"), "lechzt");});
test("lechzte -> lechzt", function() {deepEqual( Stem("lechzte"), "lechzt");});
test("lechzten -> lechzt", function() {deepEqual( Stem("lechzten"), "lechzt");});
test("lecken -> leck", function() {deepEqual( Stem("lecken"), "leck");});
test("lecker -> leck", function() {deepEqual( Stem("lecker"), "leck");});
test("leckerbissen -> leckerbiss", function() {deepEqual( Stem("leckerbissen"), "leckerbiss");});
test("leckere -> leck", function() {deepEqual( Stem("leckere"), "leck");});
test("leckeren -> leck", function() {deepEqual( Stem("leckeren"), "leck");});
test("leckeres -> leck", function() {deepEqual( Stem("leckeres"), "leck");});
test("leckermäuler -> leckermaul", function() {deepEqual( Stem("leckermäuler"), "leckermaul");});
test("leckte -> leckt", function() {deepEqual( Stem("leckte"), "leckt");});
test("leder -> led", function() {deepEqual( Stem("leder"), "led");});
test("lederkäppchen -> lederkappch", function() {deepEqual( Stem("lederkäppchen"), "lederkappch");});
test("lederkleidung -> lederkleid", function() {deepEqual( Stem("lederkleidung"), "lederkleid");});
test("ledernen -> ledern", function() {deepEqual( Stem("ledernen"), "ledern");});
test("lederpantoffeln -> lederpantoffeln", function() {deepEqual( Stem("lederpantoffeln"), "lederpantoffeln");});
test("ledersäckchen -> ledersackch", function() {deepEqual( Stem("ledersäckchen"), "ledersackch");});
test("ledersofa -> ledersofa", function() {deepEqual( Stem("ledersofa"), "ledersofa");});
test("ledertapeten -> ledertapet", function() {deepEqual( Stem("ledertapeten"), "ledertapet");});
test("lederzeug -> lederzeug", function() {deepEqual( Stem("lederzeug"), "lederzeug");});
test("ledig -> ledig", function() {deepEqual( Stem("ledig"), "ledig");});
test("ledige -> ledig", function() {deepEqual( Stem("ledige"), "ledig");});
test("lediglich -> ledig", function() {deepEqual( Stem("lediglich"), "ledig");});
test("leer -> leer", function() {deepEqual( Stem("leer"), "leer");});
test("leere -> leer", function() {deepEqual( Stem("leere"), "leer");});
test("leeren -> leer", function() {deepEqual( Stem("leeren"), "leer");});
test("leerer -> leer", function() {deepEqual( Stem("leerer"), "leer");});
test("leeres -> leer", function() {deepEqual( Stem("leeres"), "leer");});
test("leerheit -> leerheit", function() {deepEqual( Stem("leerheit"), "leerheit");});
test("leerraum -> leerraum", function() {deepEqual( Stem("leerraum"), "leerraum");});
test("leerstehende -> leersteh", function() {deepEqual( Stem("leerstehende"), "leersteh");});
test("leerte -> leert", function() {deepEqual( Stem("leerte"), "leert");});
test("leg -> leg", function() {deepEqual( Stem("leg"), "leg");});
test("legalität -> legalitat", function() {deepEqual( Stem("legalität"), "legalitat");});
test("lege -> leg", function() {deepEqual( Stem("lege"), "leg");});
test("legen -> leg", function() {deepEqual( Stem("legen"), "leg");});
test("legendenbildung -> legendenbild", function() {deepEqual( Stem("legendenbildung"), "legendenbild");});
test("leget -> leget", function() {deepEqual( Stem("leget"), "leget");});
test("legislative -> legislativ", function() {deepEqual( Stem("legislative"), "legislativ");});
test("legitimation -> legitimation", function() {deepEqual( Stem("legitimation"), "legitimation");});
test("legitimationspapier -> legitimationspapi", function() {deepEqual( Stem("legitimationspapier"), "legitimationspapi");});
test("legitimationspapiere -> legitimationspapi", function() {deepEqual( Stem("legitimationspapiere"), "legitimationspapi");});
test("legt -> legt", function() {deepEqual( Stem("legt"), "legt");});
test("legte -> legt", function() {deepEqual( Stem("legte"), "legt");});
test("legten -> legt", function() {deepEqual( Stem("legten"), "legt");});
test("lehmann -> lehmann", function() {deepEqual( Stem("lehmann"), "lehmann");});
test("lehmiger -> lehmig", function() {deepEqual( Stem("lehmiger"), "lehmig");});
test("lehne -> lehn", function() {deepEqual( Stem("lehne"), "lehn");});
test("lehnsessel -> lehnsessel", function() {deepEqual( Stem("lehnsessel"), "lehnsessel");});
test("lehnt -> lehnt", function() {deepEqual( Stem("lehnt"), "lehnt");});
test("lehnte -> lehnt", function() {deepEqual( Stem("lehnte"), "lehnt");});
test("lehnten -> lehnt", function() {deepEqual( Stem("lehnten"), "lehnt");});
test("lehr -> lehr", function() {deepEqual( Stem("lehr"), "lehr");});
test("lehramtes -> lehramt", function() {deepEqual( Stem("lehramtes"), "lehramt");});
test("lehrbegriff -> lehrbegriff", function() {deepEqual( Stem("lehrbegriff"), "lehrbegriff");});
test("lehrbegriffe -> lehrbegriff", function() {deepEqual( Stem("lehrbegriffe"), "lehrbegriff");});
test("lehrbestimmungen -> lehrbestimm", function() {deepEqual( Stem("lehrbestimmungen"), "lehrbestimm");});
test("lehre -> lehr", function() {deepEqual( Stem("lehre"), "lehr");});
test("lehren -> lehr", function() {deepEqual( Stem("lehren"), "lehr");});
test("lehrende -> lehrend", function() {deepEqual( Stem("lehrende"), "lehrend");});
test("lehrenden -> lehrend", function() {deepEqual( Stem("lehrenden"), "lehrend");});
test("lehrens -> lehr", function() {deepEqual( Stem("lehrens"), "lehr");});
test("lehrer -> lehr", function() {deepEqual( Stem("lehrer"), "lehr");});
test("lehrerin -> lehrerin", function() {deepEqual( Stem("lehrerin"), "lehrerin");});
test("lehrern -> lehr", function() {deepEqual( Stem("lehrern"), "lehr");});
test("lehrerpult -> lehrerpult", function() {deepEqual( Stem("lehrerpult"), "lehrerpult");});
test("lehret -> lehret", function() {deepEqual( Stem("lehret"), "lehret");});
test("lehrgegenstände -> lehrgegenstand", function() {deepEqual( Stem("lehrgegenstände"), "lehrgegenstand");});
test("lehrjahren -> lehrjahr", function() {deepEqual( Stem("lehrjahren"), "lehrjahr");});
test("lehrling -> lehrling", function() {deepEqual( Stem("lehrling"), "lehrling");});
test("lehrlinge -> lehrling", function() {deepEqual( Stem("lehrlinge"), "lehrling");});
test("lehrmeinungen -> lehrmein", function() {deepEqual( Stem("lehrmeinungen"), "lehrmein");});
test("lehrpunkte -> lehrpunkt", function() {deepEqual( Stem("lehrpunkte"), "lehrpunkt");});
test("lehrreichen -> lehrreich", function() {deepEqual( Stem("lehrreichen"), "lehrreich");});
test("lehrreicher -> lehrreich", function() {deepEqual( Stem("lehrreicher"), "lehrreich");});
test("lehrreiches -> lehrreich", function() {deepEqual( Stem("lehrreiches"), "lehrreich");});
test("lehrsatz -> lehrsatz", function() {deepEqual( Stem("lehrsatz"), "lehrsatz");});
test("lehrsätze -> lehrsatz", function() {deepEqual( Stem("lehrsätze"), "lehrsatz");});
test("lehrsätzen -> lehrsatz", function() {deepEqual( Stem("lehrsätzen"), "lehrsatz");});
test("lehrstück -> lehrstuck", function() {deepEqual( Stem("lehrstück"), "lehrstuck");});
test("lehrstücke -> lehrstuck", function() {deepEqual( Stem("lehrstücke"), "lehrstuck");});
test("lehrt -> lehrt", function() {deepEqual( Stem("lehrt"), "lehrt");});
test("lehrte -> lehrt", function() {deepEqual( Stem("lehrte"), "lehrt");});
test("lehrten -> lehrt", function() {deepEqual( Stem("lehrten"), "lehrt");});
test("lehrwahrheiten -> lehrwahr", function() {deepEqual( Stem("lehrwahrheiten"), "lehrwahr");});
test("leib -> leib", function() {deepEqual( Stem("leib"), "leib");});
test("leibarzt -> leibarzt", function() {deepEqual( Stem("leibarzt"), "leibarzt");});
test("leibe -> leib", function() {deepEqual( Stem("leibe"), "leib");});
test("leiber -> leib", function() {deepEqual( Stem("leiber"), "leib");});
test("leibes -> leib", function() {deepEqual( Stem("leibes"), "leib");});
test("leibesgestalt -> leibesgestalt", function() {deepEqual( Stem("leibesgestalt"), "leibesgestalt");});
test("leibesleben -> leibesleb", function() {deepEqual( Stem("leibesleben"), "leibesleb");});
test("leibesnahrung -> leibesnahr", function() {deepEqual( Stem("leibesnahrung"), "leibesnahr");});
test("leibesorgane -> leibesorgan", function() {deepEqual( Stem("leibesorgane"), "leibesorgan");});
test("leibesübungen -> leibesub", function() {deepEqual( Stem("leibesübungen"), "leibesub");});
test("leibgericht -> leibgericht", function() {deepEqual( Stem("leibgericht"), "leibgericht");});
test("leibgerichte -> leibgericht", function() {deepEqual( Stem("leibgerichte"), "leibgericht");});
test("leibhafte -> leibhaft", function() {deepEqual( Stem("leibhafte"), "leibhaft");});
test("leibhaftige -> leibhaft", function() {deepEqual( Stem("leibhaftige"), "leibhaft");});
test("leibhornisten -> leibhornist", function() {deepEqual( Stem("leibhornisten"), "leibhornist");});
test("leibjäger -> leibjag", function() {deepEqual( Stem("leibjäger"), "leibjag");});
test("leibjägern -> leibjag", function() {deepEqual( Stem("leibjägern"), "leibjag");});
test("leiblich -> leiblich", function() {deepEqual( Stem("leiblich"), "leiblich");});
test("leibliche -> leiblich", function() {deepEqual( Stem("leibliche"), "leiblich");});
test("leiblichen -> leiblich", function() {deepEqual( Stem("leiblichen"), "leiblich");});
test("leiblicher -> leiblich", function() {deepEqual( Stem("leiblicher"), "leiblich");});
test("leibliches -> leiblich", function() {deepEqual( Stem("leibliches"), "leiblich");});
test("leibpferd -> leibpferd", function() {deepEqual( Stem("leibpferd"), "leibpferd");});
test("leibröcke -> leibrock", function() {deepEqual( Stem("leibröcke"), "leibrock");});
test("leibsessel -> leibsessel", function() {deepEqual( Stem("leibsessel"), "leibsessel");});
test("leibt -> leibt", function() {deepEqual( Stem("leibt"), "leibt");});
test("leibte -> leibt", function() {deepEqual( Stem("leibte"), "leibt");});
test("leibteller -> leibtell", function() {deepEqual( Stem("leibteller"), "leibtell");});
test("leiche -> leich", function() {deepEqual( Stem("leiche"), "leich");});
test("leichen -> leich", function() {deepEqual( Stem("leichen"), "leich");});
test("leichenbegängnis -> leichenbegangnis", function() {deepEqual( Stem("leichenbegängnis"), "leichenbegangnis");});
test("leichengestank -> leichengestank", function() {deepEqual( Stem("leichengestank"), "leichengestank");});
test("leichenschmaus -> leichenschmaus", function() {deepEqual( Stem("leichenschmaus"), "leichenschmaus");});
test("leichnam -> leichnam", function() {deepEqual( Stem("leichnam"), "leichnam");});
test("leichname -> leichnam", function() {deepEqual( Stem("leichname"), "leichnam");});
test("leichnamen -> leichnam", function() {deepEqual( Stem("leichnamen"), "leichnam");});
test("leicht -> leicht", function() {deepEqual( Stem("leicht"), "leicht");});
test("leichtbeschwingte -> leichtbeschwingt", function() {deepEqual( Stem("leichtbeschwingte"), "leichtbeschwingt");});
test("leichte -> leicht", function() {deepEqual( Stem("leichte"), "leicht");});
test("leichten -> leicht", function() {deepEqual( Stem("leichten"), "leicht");});
test("leichter -> leicht", function() {deepEqual( Stem("leichter"), "leicht");});
test("leichtere -> leicht", function() {deepEqual( Stem("leichtere"), "leicht");});
test("leichtes -> leicht", function() {deepEqual( Stem("leichtes"), "leicht");});
test("leichtfertige -> leichtfert", function() {deepEqual( Stem("leichtfertige"), "leichtfert");});
test("leichtfertigem -> leichtfert", function() {deepEqual( Stem("leichtfertigem"), "leichtfert");});
test("leichtfertiges -> leichtfert", function() {deepEqual( Stem("leichtfertiges"), "leichtfert");});
test("leichthin -> leichthin", function() {deepEqual( Stem("leichthin"), "leichthin");});
test("leichtigkeit -> leichtig", function() {deepEqual( Stem("leichtigkeit"), "leichtig");});
test("leichtlich -> leichtlich", function() {deepEqual( Stem("leichtlich"), "leichtlich");});
test("leichtsinn -> leichtsinn", function() {deepEqual( Stem("leichtsinn"), "leichtsinn");});
test("leichtsinnig -> leichtsinn", function() {deepEqual( Stem("leichtsinnig"), "leichtsinn");});
test("leichtsinnige -> leichtsinn", function() {deepEqual( Stem("leichtsinnige"), "leichtsinn");});
test("leichtsinnigen -> leichtsinn", function() {deepEqual( Stem("leichtsinnigen"), "leichtsinn");});
test("leichtsinniger -> leichtsinn", function() {deepEqual( Stem("leichtsinniger"), "leichtsinn");});
test("leichtsinnigkeit -> leichtsinn", function() {deepEqual( Stem("leichtsinnigkeit"), "leichtsinn");});
test("leichtsinns -> leichtsinn", function() {deepEqual( Stem("leichtsinns"), "leichtsinn");});
test("leid -> leid", function() {deepEqual( Stem("leid"), "leid");});
test("leide -> leid", function() {deepEqual( Stem("leide"), "leid");});
test("leiden -> leid", function() {deepEqual( Stem("leiden"), "leid");});
test("leidend -> leidend", function() {deepEqual( Stem("leidend"), "leidend");});
test("leidende -> leidend", function() {deepEqual( Stem("leidende"), "leidend");});
test("leidenden -> leidend", function() {deepEqual( Stem("leidenden"), "leidend");});
test("leidendes -> leidend", function() {deepEqual( Stem("leidendes"), "leidend");});
test("leidens -> leid", function() {deepEqual( Stem("leidens"), "leid");});
test("leidenschaft -> leidenschaft", function() {deepEqual( Stem("leidenschaft"), "leidenschaft");});
test("leidenschaften -> leidenschaft", function() {deepEqual( Stem("leidenschaften"), "leidenschaft");});
test("leidenschaftlich -> leidenschaft", function() {deepEqual( Stem("leidenschaftlich"), "leidenschaft");});
test("leidenschaftliche -> leidenschaft", function() {deepEqual( Stem("leidenschaftliche"), "leidenschaft");});
test("leidenschaftlicher -> leidenschaft", function() {deepEqual( Stem("leidenschaftlicher"), "leidenschaft");});
test("leidenschaftlichkeit -> leidenschaft", function() {deepEqual( Stem("leidenschaftlichkeit"), "leidenschaft");});
test("leidensgenossen -> leidensgenoss", function() {deepEqual( Stem("leidensgenossen"), "leidensgenoss");});
test("leidentlich -> leident", function() {deepEqual( Stem("leidentlich"), "leident");});
test("leider -> leid", function() {deepEqual( Stem("leider"), "leid");});
test("leides -> leid", function() {deepEqual( Stem("leides"), "leid");});
test("leidet -> leidet", function() {deepEqual( Stem("leidet"), "leidet");});
test("leidige -> leidig", function() {deepEqual( Stem("leidige"), "leidig");});
test("leidlich -> leidlich", function() {deepEqual( Stem("leidlich"), "leidlich");});
test("leids -> leid", function() {deepEqual( Stem("leids"), "leid");});
test("leierkasten -> leierkast", function() {deepEqual( Stem("leierkasten"), "leierkast");});
test("leiermann -> leiermann", function() {deepEqual( Stem("leiermann"), "leiermann");});
test("leiermänner -> leiermann", function() {deepEqual( Stem("leiermänner"), "leiermann");});
test("leihen -> leih", function() {deepEqual( Stem("leihen"), "leih");});
test("leim -> leim", function() {deepEqual( Stem("leim"), "leim");});
test("leimrute -> leimrut", function() {deepEqual( Stem("leimrute"), "leimrut");});
test("lein -> lein", function() {deepEqual( Stem("lein"), "lein");});
test("leine -> lein", function() {deepEqual( Stem("leine"), "lein");});
test("leinen -> lein", function() {deepEqual( Stem("leinen"), "lein");});
test("leinene -> lein", function() {deepEqual( Stem("leinene"), "lein");});
test("leinenen -> lein", function() {deepEqual( Stem("leinenen"), "lein");});
test("leinentüchern -> leinentuch", function() {deepEqual( Stem("leinentüchern"), "leinentuch");});
test("leins -> lein", function() {deepEqual( Stem("leins"), "lein");});
test("leinwand -> leinwand", function() {deepEqual( Stem("leinwand"), "leinwand");});
test("leinwandbinde -> leinwandbind", function() {deepEqual( Stem("leinwandbinde"), "leinwandbind");});
test("leinwandgewändern -> leinwandgewand", function() {deepEqual( Stem("leinwandgewändern"), "leinwandgewand");});
test("leinwandne -> leinwandn", function() {deepEqual( Stem("leinwandne"), "leinwandn");});
test("leinwandstreifen -> leinwandstreif", function() {deepEqual( Stem("leinwandstreifen"), "leinwandstreif");});
test("leipzig -> leipzig", function() {deepEqual( Stem("leipzig"), "leipzig");});
test("leis -> leis", function() {deepEqual( Stem("leis"), "leis");});
test("leisbewegte -> leisbewegt", function() {deepEqual( Stem("leisbewegte"), "leisbewegt");});
test("leise -> leis", function() {deepEqual( Stem("leise"), "leis");});
test("leisen -> leis", function() {deepEqual( Stem("leisen"), "leis");});
test("leiser -> leis", function() {deepEqual( Stem("leiser"), "leis");});
test("leises -> leis", function() {deepEqual( Stem("leises"), "leis");});
test("leiseste -> leis", function() {deepEqual( Stem("leiseste"), "leis");});
test("leisten -> leist", function() {deepEqual( Stem("leisten"), "leist");});
test("leistet -> leistet", function() {deepEqual( Stem("leistet"), "leistet");});
test("leistete -> leistet", function() {deepEqual( Stem("leistete"), "leistet");});
test("leisteten -> leistet", function() {deepEqual( Stem("leisteten"), "leistet");});
test("leistung -> leistung", function() {deepEqual( Stem("leistung"), "leistung");});
test("leistungen -> leistung", function() {deepEqual( Stem("leistungen"), "leistung");});
test("leistungsfähigen -> leistungsfah", function() {deepEqual( Stem("leistungsfähigen"), "leistungsfah");});
test("leit -> leit", function() {deepEqual( Stem("leit"), "leit");});
test("leite -> leit", function() {deepEqual( Stem("leite"), "leit");});
test("leiten -> leit", function() {deepEqual( Stem("leiten"), "leit");});
test("leiter -> leit", function() {deepEqual( Stem("leiter"), "leit");});
test("leiterchen -> leiterch", function() {deepEqual( Stem("leiterchen"), "leiterch");});
test("leiterin -> leiterin", function() {deepEqual( Stem("leiterin"), "leiterin");});
test("leiters -> leit", function() {deepEqual( Stem("leiters"), "leit");});
test("leitest -> leit", function() {deepEqual( Stem("leitest"), "leit");});
test("leitet -> leitet", function() {deepEqual( Stem("leitet"), "leitet");});
test("leitete -> leitet", function() {deepEqual( Stem("leitete"), "leitet");});
test("leitner -> leitn", function() {deepEqual( Stem("leitner"), "leitn");});
test("leitnermali -> leitnermali", function() {deepEqual( Stem("leitnermali"), "leitnermali");});
test("leitseil -> leitseil", function() {deepEqual( Stem("leitseil"), "leitseil");});
test("leitstern -> leit", function() {deepEqual( Stem("leitstern"), "leit");});
test("leitung -> leitung", function() {deepEqual( Stem("leitung"), "leitung");});
test("leitwort -> leitwort", function() {deepEqual( Stem("leitwort"), "leitwort");});
test("lenden -> lend", function() {deepEqual( Stem("lenden"), "lend");});
test("leni -> leni", function() {deepEqual( Stem("leni"), "leni");});
test("lenis -> lenis", function() {deepEqual( Stem("lenis"), "lenis");});
test("lenken -> lenk", function() {deepEqual( Stem("lenken"), "lenk");});
test("lenkerin -> lenkerin", function() {deepEqual( Stem("lenkerin"), "lenkerin");});
test("lenkt -> lenkt", function() {deepEqual( Stem("lenkt"), "lenkt");});
test("lenkte -> lenkt", function() {deepEqual( Stem("lenkte"), "lenkt");});
test("lenzlichte -> lenzlicht", function() {deepEqual( Stem("lenzlichte"), "lenzlicht");});
test("lenzwind -> lenzwind", function() {deepEqual( Stem("lenzwind"), "lenzwind");});
test("leopard -> leopard", function() {deepEqual( Stem("leopard"), "leopard");});
test("lerche -> lerch", function() {deepEqual( Stem("lerche"), "lerch");});
test("lerchen -> lerch", function() {deepEqual( Stem("lerchen"), "lerch");});
test("lerne -> lern", function() {deepEqual( Stem("lerne"), "lern");});
test("lernen -> lern", function() {deepEqual( Stem("lernen"), "lern");});
test("lernens -> lern", function() {deepEqual( Stem("lernens"), "lern");});
test("lernt -> lernt", function() {deepEqual( Stem("lernt"), "lernt");});
test("lernte -> lernt", function() {deepEqual( Stem("lernte"), "lernt");});
test("lesebücher -> lesebuch", function() {deepEqual( Stem("lesebücher"), "lesebuch");});
test("lesen -> les", function() {deepEqual( Stem("lesen"), "les");});
test("leser -> les", function() {deepEqual( Stem("leser"), "les");});
test("leserforum -> leserforum", function() {deepEqual( Stem("leserforum"), "leserforum");});
test("lestungen -> lestung", function() {deepEqual( Stem("lestungen"), "lestung");});
test("lettern -> lett", function() {deepEqual( Stem("lettern"), "lett");});
test("letzt -> letzt", function() {deepEqual( Stem("letzt"), "letzt");});
test("letzte -> letzt", function() {deepEqual( Stem("letzte"), "letzt");});
test("letzten -> letzt", function() {deepEqual( Stem("letzten"), "letzt");});
test("letztenmal -> letztenmal", function() {deepEqual( Stem("letztenmal"), "letztenmal");});
test("letzter -> letzt", function() {deepEqual( Stem("letzter"), "letzt");});
test("letztere -> letzt", function() {deepEqual( Stem("letztere"), "letzt");});
test("letzterem -> letzt", function() {deepEqual( Stem("letzterem"), "letzt");});
test("letzteren -> letzt", function() {deepEqual( Stem("letzteren"), "letzt");});
test("letzterer -> letzt", function() {deepEqual( Stem("letzterer"), "letzt");});
test("letzteres -> letzt", function() {deepEqual( Stem("letzteres"), "letzt");});
test("letztern -> letzt", function() {deepEqual( Stem("letztern"), "letzt");});
test("letztes -> letzt", function() {deepEqual( Stem("letztes"), "letzt");});
test("letztesmal -> letztesmal", function() {deepEqual( Stem("letztesmal"), "letztesmal");});
test("letzthin -> letzthin", function() {deepEqual( Stem("letzthin"), "letzthin");});
test("letztlich -> letztlich", function() {deepEqual( Stem("letztlich"), "letztlich");});
test("leuchte -> leucht", function() {deepEqual( Stem("leuchte"), "leucht");});
test("leuchten -> leucht", function() {deepEqual( Stem("leuchten"), "leucht");});
test("leuchtend -> leuchtend", function() {deepEqual( Stem("leuchtend"), "leuchtend");});
test("leuchtende -> leuchtend", function() {deepEqual( Stem("leuchtende"), "leuchtend");});
test("leuchtendem -> leuchtend", function() {deepEqual( Stem("leuchtendem"), "leuchtend");});
test("leuchtenden -> leuchtend", function() {deepEqual( Stem("leuchtenden"), "leuchtend");});
test("leuchtender -> leuchtend", function() {deepEqual( Stem("leuchtender"), "leuchtend");});
test("leuchter -> leucht", function() {deepEqual( Stem("leuchter"), "leucht");});
test("leuchtern -> leucht", function() {deepEqual( Stem("leuchtern"), "leucht");});
test("leuchtet -> leuchtet", function() {deepEqual( Stem("leuchtet"), "leuchtet");});
test("leuchtete -> leuchtet", function() {deepEqual( Stem("leuchtete"), "leuchtet");});
test("leuchteten -> leuchtet", function() {deepEqual( Stem("leuchteten"), "leuchtet");});
test("leuchtkäfer -> leuchtkaf", function() {deepEqual( Stem("leuchtkäfer"), "leuchtkaf");});
test("leugnen -> leugn", function() {deepEqual( Stem("leugnen"), "leugn");});
test("leugnet -> leugnet", function() {deepEqual( Stem("leugnet"), "leugnet");});
test("leugneten -> leugnet", function() {deepEqual( Stem("leugneten"), "leugnet");});
test("leugnung -> leugnung", function() {deepEqual( Stem("leugnung"), "leugnung");});
test("leut -> leut", function() {deepEqual( Stem("leut"), "leut");});
test("leutchen -> leutch", function() {deepEqual( Stem("leutchen"), "leutch");});
test("leute -> leut", function() {deepEqual( Stem("leute"), "leut");});
test("leuten -> leut", function() {deepEqual( Stem("leuten"), "leut");});
test("leutlein -> leutlein", function() {deepEqual( Stem("leutlein"), "leutlein");});
test("leutnants -> leutnant", function() {deepEqual( Stem("leutnants"), "leutnant");});
test("leutselig -> leutsel", function() {deepEqual( Stem("leutselig"), "leutsel");});
test("leutseligkeit -> leutsel", function() {deepEqual( Stem("leutseligkeit"), "leutsel");});
test("levi -> levi", function() {deepEqual( Stem("levi"), "levi");});
test("leviathan -> leviathan", function() {deepEqual( Stem("leviathan"), "leviathan");});
test("leviathans -> leviathan", function() {deepEqual( Stem("leviathans"), "leviathan");});
test("levis -> levis", function() {deepEqual( Stem("levis"), "levis");});
test("levit -> levit", function() {deepEqual( Stem("levit"), "levit");});
test("levite -> levit", function() {deepEqual( Stem("levite"), "levit");});
test("leviten -> levit", function() {deepEqual( Stem("leviten"), "levit");});
test("lex -> lex", function() {deepEqual( Stem("lex"), "lex");});
test("lhrem -> lhrem", function() {deepEqual( Stem("lhrem"), "lhrem");});
test("libanon -> libanon", function() {deepEqual( Stem("libanon"), "libanon");});
test("libanons -> libanon", function() {deepEqual( Stem("libanons"), "libanon");});
test("libellen -> libell", function() {deepEqual( Stem("libellen"), "libell");});
test("liber -> lib", function() {deepEqual( Stem("liber"), "lib");});
test("liberale -> liberal", function() {deepEqual( Stem("liberale"), "liberal");});
test("liberalen -> liberal", function() {deepEqual( Stem("liberalen"), "liberal");});
test("liberaler -> liberal", function() {deepEqual( Stem("liberaler"), "liberal");});
test("libero -> libero", function() {deepEqual( Stem("libero"), "libero");});
test("libni -> libni", function() {deepEqual( Stem("libni"), "libni");});
test("libyer -> liby", function() {deepEqual( Stem("libyer"), "liby");});
test("lich -> lich", function() {deepEqual( Stem("lich"), "lich");});
test("liche -> lich", function() {deepEqual( Stem("liche"), "lich");});
test("licht -> licht", function() {deepEqual( Stem("licht"), "licht");});
test("lichtarten -> lichtart", function() {deepEqual( Stem("lichtarten"), "lichtart");});
test("lichtbahn -> lichtbahn", function() {deepEqual( Stem("lichtbahn"), "lichtbahn");});
test("lichtbraunes -> lichtbraun", function() {deepEqual( Stem("lichtbraunes"), "lichtbraun");});
test("lichte -> licht", function() {deepEqual( Stem("lichte"), "licht");});
test("lichtecke -> lichteck", function() {deepEqual( Stem("lichtecke"), "lichteck");});
test("lichtem -> licht", function() {deepEqual( Stem("lichtem"), "licht");});
test("lichten -> licht", function() {deepEqual( Stem("lichten"), "licht");});
test("lichter -> licht", function() {deepEqual( Stem("lichter"), "licht");});
test("lichterchen -> lichterch", function() {deepEqual( Stem("lichterchen"), "lichterch");});
test("lichteren -> licht", function() {deepEqual( Stem("lichteren"), "licht");});
test("lichterloh -> lichterloh", function() {deepEqual( Stem("lichterloh"), "lichterloh");});
test("lichtern -> licht", function() {deepEqual( Stem("lichtern"), "licht");});
test("lichtes -> licht", function() {deepEqual( Stem("lichtes"), "licht");});
test("lichtete -> lichtet", function() {deepEqual( Stem("lichtete"), "lichtet");});
test("lichtfeld -> lichtfeld", function() {deepEqual( Stem("lichtfeld"), "lichtfeld");});
test("lichtflocken -> lichtflock", function() {deepEqual( Stem("lichtflocken"), "lichtflock");});
test("lichtpünktchen -> lichtpunktch", function() {deepEqual( Stem("lichtpünktchen"), "lichtpunktch");});
test("lichts -> licht", function() {deepEqual( Stem("lichts"), "licht");});
test("lichtstrahlen -> lichtstrahl", function() {deepEqual( Stem("lichtstrahlen"), "lichtstrahl");});
test("lichtstrahlungen -> lichtstrahl", function() {deepEqual( Stem("lichtstrahlungen"), "lichtstrahl");});
test("lichtung -> lichtung", function() {deepEqual( Stem("lichtung"), "lichtung");});
test("lichtungen -> lichtung", function() {deepEqual( Stem("lichtungen"), "lichtung");});
test("lichtvoll -> lichtvoll", function() {deepEqual( Stem("lichtvoll"), "lichtvoll");});
test("lider -> lid", function() {deepEqual( Stem("lider"), "lid");});
test("lieb -> lieb", function() {deepEqual( Stem("lieb"), "lieb");});
test("liebchen -> liebch", function() {deepEqual( Stem("liebchen"), "liebch");});
test("liebe -> lieb", function() {deepEqual( Stem("liebe"), "lieb");});
test("liebegutes -> liebegut", function() {deepEqual( Stem("liebegutes"), "liebegut");});
test("lieben -> lieb", function() {deepEqual( Stem("lieben"), "lieb");});
test("liebende -> liebend", function() {deepEqual( Stem("liebende"), "liebend");});
test("liebenden -> liebend", function() {deepEqual( Stem("liebenden"), "liebend");});
test("liebenswürdig -> liebenswurd", function() {deepEqual( Stem("liebenswürdig"), "liebenswurd");});
test("liebenswürdige -> liebenswurd", function() {deepEqual( Stem("liebenswürdige"), "liebenswurd");});
test("liebenswürdigen -> liebenswurd", function() {deepEqual( Stem("liebenswürdigen"), "liebenswurd");});
test("liebenswürdiger -> liebenswurd", function() {deepEqual( Stem("liebenswürdiger"), "liebenswurd");});
test("liebenswürdigkeit -> liebenswurd", function() {deepEqual( Stem("liebenswürdigkeit"), "liebenswurd");});
test("liebenswürdigste -> liebenswurd", function() {deepEqual( Stem("liebenswürdigste"), "liebenswurd");});
test("lieber -> lieb", function() {deepEqual( Stem("lieber"), "lieb");});
test("lieberasenden -> lieberas", function() {deepEqual( Stem("lieberasenden"), "lieberas");});
test("liebes -> lieb", function() {deepEqual( Stem("liebes"), "lieb");});
test("liebesaffäre -> liebesaffar", function() {deepEqual( Stem("liebesaffäre"), "liebesaffar");});
test("liebesarten -> liebesart", function() {deepEqual( Stem("liebesarten"), "liebesart");});
test("liebesbezeugungen -> liebesbezeug", function() {deepEqual( Stem("liebesbezeugungen"), "liebesbezeug");});
test("liebesbriefe -> liebesbrief", function() {deepEqual( Stem("liebesbriefe"), "liebesbrief");});
test("liebeserklärung -> liebeserklar", function() {deepEqual( Stem("liebeserklärung"), "liebeserklar");});
test("liebeserklärungen -> liebeserklar", function() {deepEqual( Stem("liebeserklärungen"), "liebeserklar");});
test("liebesfeuer -> liebesfeu", function() {deepEqual( Stem("liebesfeuer"), "liebesfeu");});
test("liebesfurcht -> liebesfurcht", function() {deepEqual( Stem("liebesfurcht"), "liebesfurcht");});
test("liebesgedanken -> liebesgedank", function() {deepEqual( Stem("liebesgedanken"), "liebesgedank");});
test("liebesgeschichte -> liebesgeschicht", function() {deepEqual( Stem("liebesgeschichte"), "liebesgeschicht");});
test("liebesgeschwellten -> liebesgeschwellt", function() {deepEqual( Stem("liebesgeschwellten"), "liebesgeschwellt");});
test("liebesgetändel -> liebesgetandel", function() {deepEqual( Stem("liebesgetändel"), "liebesgetandel");});
test("liebesglut -> liebesglut", function() {deepEqual( Stem("liebesglut"), "liebesglut");});
test("liebesgschicht -> liebesgschicht", function() {deepEqual( Stem("liebesgschicht"), "liebesgschicht");});
test("liebeshandel -> liebeshandel", function() {deepEqual( Stem("liebeshandel"), "liebeshandel");});
test("liebeshaus -> liebeshaus", function() {deepEqual( Stem("liebeshaus"), "liebeshaus");});
test("liebeslauten -> liebeslaut", function() {deepEqual( Stem("liebeslauten"), "liebeslaut");});
test("liebesliebe -> liebeslieb", function() {deepEqual( Stem("liebesliebe"), "liebeslieb");});
test("liebesliteratur -> liebesliteratur", function() {deepEqual( Stem("liebesliteratur"), "liebesliteratur");});
test("liebeslocken -> liebeslock", function() {deepEqual( Stem("liebeslocken"), "liebeslock");});
test("liebesneigungen -> liebesneig", function() {deepEqual( Stem("liebesneigungen"), "liebesneig");});
test("liebespflicht -> liebespflicht", function() {deepEqual( Stem("liebespflicht"), "liebespflicht");});
test("liebestolle -> liebestoll", function() {deepEqual( Stem("liebestolle"), "liebestoll");});
test("liebestriebe -> liebestrieb", function() {deepEqual( Stem("liebestriebe"), "liebestrieb");});
test("liebestrieben -> liebestrieb", function() {deepEqual( Stem("liebestrieben"), "liebestrieb");});
test("liebeswerke -> liebeswerk", function() {deepEqual( Stem("liebeswerke"), "liebeswerk");});
test("liebeswerken -> liebeswerk", function() {deepEqual( Stem("liebeswerken"), "liebeswerk");});
test("liebet -> liebet", function() {deepEqual( Stem("liebet"), "liebet");});
test("liebevoll -> liebevoll", function() {deepEqual( Stem("liebevoll"), "liebevoll");});
test("liebevollen -> liebevoll", function() {deepEqual( Stem("liebevollen"), "liebevoll");});
test("liebfrauenkirche -> liebfrauenkirch", function() {deepEqual( Stem("liebfrauenkirche"), "liebfrauenkirch");});
test("liebhaben -> liebhab", function() {deepEqual( Stem("liebhaben"), "liebhab");});
test("liebhaber -> liebhab", function() {deepEqual( Stem("liebhaber"), "liebhab");});
test("liebhabern -> liebhab", function() {deepEqual( Stem("liebhabern"), "liebhab");});
test("liebkosen -> liebkos", function() {deepEqual( Stem("liebkosen"), "liebkos");});
test("liebkosendes -> liebkos", function() {deepEqual( Stem("liebkosendes"), "liebkos");});
test("liebkost -> liebkost", function() {deepEqual( Stem("liebkost"), "liebkost");});
test("liebkoste -> liebkost", function() {deepEqual( Stem("liebkoste"), "liebkost");});
test("liebkosungen -> liebkos", function() {deepEqual( Stem("liebkosungen"), "liebkos");});
test("lieblich -> lieblich", function() {deepEqual( Stem("lieblich"), "lieblich");});
test("liebliche -> lieblich", function() {deepEqual( Stem("liebliche"), "lieblich");});
test("lieblichem -> lieblich", function() {deepEqual( Stem("lieblichem"), "lieblich");});
test("lieblichen -> lieblich", function() {deepEqual( Stem("lieblichen"), "lieblich");});
test("lieblicher -> lieblich", function() {deepEqual( Stem("lieblicher"), "lieblich");});
test("liebliches -> lieblich", function() {deepEqual( Stem("liebliches"), "lieblich");});
test("lieblichkeit -> lieblich", function() {deepEqual( Stem("lieblichkeit"), "lieblich");});
test("lieblichste -> lieblich", function() {deepEqual( Stem("lieblichste"), "lieblich");});
test("lieblichsten -> lieblich", function() {deepEqual( Stem("lieblichsten"), "lieblich");});
test("liebling -> liebling", function() {deepEqual( Stem("liebling"), "liebling");});
test("lieblingsbilder -> lieblingsbild", function() {deepEqual( Stem("lieblingsbilder"), "lieblingsbild");});
test("lieblos -> lieblos", function() {deepEqual( Stem("lieblos"), "lieblos");});
test("liebreich -> liebreich", function() {deepEqual( Stem("liebreich"), "liebreich");});
test("liebreizenden -> liebreiz", function() {deepEqual( Stem("liebreizenden"), "liebreiz");});
test("liebs -> lieb", function() {deepEqual( Stem("liebs"), "lieb");});
test("liebsleut -> liebsleut", function() {deepEqual( Stem("liebsleut"), "liebsleut");});
test("liebst -> lieb", function() {deepEqual( Stem("liebst"), "lieb");});
test("liebste -> lieb", function() {deepEqual( Stem("liebste"), "lieb");});
test("liebsten -> lieb", function() {deepEqual( Stem("liebsten"), "lieb");});
test("liebster -> lieb", function() {deepEqual( Stem("liebster"), "lieb");});
test("liebstes -> lieb", function() {deepEqual( Stem("liebstes"), "lieb");});
test("liebt -> liebt", function() {deepEqual( Stem("liebt"), "liebt");});
test("liebtätigkeit -> liebtat", function() {deepEqual( Stem("liebtätigkeit"), "liebtat");});
test("liebtätigkeitswerke -> liebtatigkeitswerk", function() {deepEqual( Stem("liebtätigkeitswerke"), "liebtatigkeitswerk");});
test("liebte -> liebt", function() {deepEqual( Stem("liebte"), "liebt");});
test("liebten -> liebt", function() {deepEqual( Stem("liebten"), "liebt");});
test("lied -> lied", function() {deepEqual( Stem("lied"), "lied");});
test("liedchen -> liedch", function() {deepEqual( Stem("liedchen"), "liedch");});
test("liede -> lied", function() {deepEqual( Stem("liede"), "lied");});
test("lieder -> lied", function() {deepEqual( Stem("lieder"), "lied");});
test("liederbuch -> liederbuch", function() {deepEqual( Stem("liederbuch"), "liederbuch");});
test("liederchen -> liederch", function() {deepEqual( Stem("liederchen"), "liederch");});
test("liedergäste -> liedergast", function() {deepEqual( Stem("liedergäste"), "liedergast");});
test("liederlich -> lied", function() {deepEqual( Stem("liederlich"), "lied");});
test("liederlichen -> lied", function() {deepEqual( Stem("liederlichen"), "lied");});
test("liederlicher -> lied", function() {deepEqual( Stem("liederlicher"), "lied");});
test("liedern -> lied", function() {deepEqual( Stem("liedern"), "lied");});
test("liedes -> lied", function() {deepEqual( Stem("liedes"), "lied");});
test("liedl -> liedl", function() {deepEqual( Stem("liedl"), "liedl");});
test("liedln -> liedln", function() {deepEqual( Stem("liedln"), "liedln");});
test("lief -> lief", function() {deepEqual( Stem("lief"), "lief");});
test("liefe -> lief", function() {deepEqual( Stem("liefe"), "lief");});
test("liefen -> lief", function() {deepEqual( Stem("liefen"), "lief");});
test("liefern -> lief", function() {deepEqual( Stem("liefern"), "lief");});
test("liefert -> liefert", function() {deepEqual( Stem("liefert"), "liefert");});
test("lieferung -> liefer", function() {deepEqual( Stem("lieferung"), "liefer");});
test("lieg -> lieg", function() {deepEqual( Stem("lieg"), "lieg");});
test("liege -> lieg", function() {deepEqual( Stem("liege"), "lieg");});
test("liegen -> lieg", function() {deepEqual( Stem("liegen"), "lieg");});
test("liegend -> liegend", function() {deepEqual( Stem("liegend"), "liegend");});
test("liegende -> liegend", function() {deepEqual( Stem("liegende"), "liegend");});
test("liegenden -> liegend", function() {deepEqual( Stem("liegenden"), "liegend");});
test("liegendes -> liegend", function() {deepEqual( Stem("liegendes"), "liegend");});
test("liegengeblieben -> liegengeblieb", function() {deepEqual( Stem("liegengeblieben"), "liegengeblieb");});
test("liegengelassen -> liegengelass", function() {deepEqual( Stem("liegengelassen"), "liegengelass");});
test("liegenlassen -> liegenlass", function() {deepEqual( Stem("liegenlassen"), "liegenlass");});
test("liegst -> lieg", function() {deepEqual( Stem("liegst"), "lieg");});
test("liegt -> liegt", function() {deepEqual( Stem("liegt"), "liegt");});
test("lieh -> lieh", function() {deepEqual( Stem("lieh"), "lieh");});
test("lieschen -> liesch", function() {deepEqual( Stem("lieschen"), "liesch");});
test("liese -> lies", function() {deepEqual( Stem("liese"), "lies");});
test("liess -> liess", function() {deepEqual( Stem("liess"), "liess");});
test("ließ -> liess", function() {deepEqual( Stem("ließ"), "liess");});
test("liesse -> liess", function() {deepEqual( Stem("liesse"), "liess");});
test("ließe -> liess", function() {deepEqual( Stem("ließe"), "liess");});
test("liessen -> liess", function() {deepEqual( Stem("liessen"), "liess");});
test("ließen -> liess", function() {deepEqual( Stem("ließen"), "liess");});
test("liest -> liest", function() {deepEqual( Stem("liest"), "liest");});
test("liestal -> liestal", function() {deepEqual( Stem("liestal"), "liestal");});
test("life -> lif", function() {deepEqual( Stem("life"), "lif");});
test("liked -> liked", function() {deepEqual( Stem("liked"), "liked");});
test("limonade -> limonad", function() {deepEqual( Stem("limonade"), "limonad");});
test("limonaden -> limonad", function() {deepEqual( Stem("limonaden"), "limonad");});
test("lind -> lind", function() {deepEqual( Stem("lind"), "lind");});
test("linde -> lind", function() {deepEqual( Stem("linde"), "lind");});
test("linden -> lind", function() {deepEqual( Stem("linden"), "lind");});
test("lindenblättchen -> lindenblattch", function() {deepEqual( Stem("lindenblättchen"), "lindenblattch");});
test("lindenbolz -> lindenbolz", function() {deepEqual( Stem("lindenbolz"), "lindenbolz");});
test("lindengebüsches -> lindengebusch", function() {deepEqual( Stem("lindengebüsches"), "lindengebusch");});
test("lindenkranze -> lindenkranz", function() {deepEqual( Stem("lindenkranze"), "lindenkranz");});
test("lindern -> lind", function() {deepEqual( Stem("lindern"), "lind");});
test("lineal -> lineal", function() {deepEqual( Stem("lineal"), "lineal");});
test("linie -> lini", function() {deepEqual( Stem("linie"), "lini");});
test("linien -> lini", function() {deepEqual( Stem("linien"), "lini");});
test("linienschiffe -> linienschiff", function() {deepEqual( Stem("linienschiffe"), "linienschiff");});
test("linke -> link", function() {deepEqual( Stem("linke"), "link");});
test("linken -> link", function() {deepEqual( Stem("linken"), "link");});
test("linker -> link", function() {deepEqual( Stem("linker"), "link");});
test("linkes -> link", function() {deepEqual( Stem("linkes"), "link");});
test("linkische -> linkisch", function() {deepEqual( Stem("linkische"), "linkisch");});
test("links -> link", function() {deepEqual( Stem("links"), "link");});
test("linnen -> linn", function() {deepEqual( Stem("linnen"), "linn");});
test("linum -> linum", function() {deepEqual( Stem("linum"), "linum");});
test("lipp -> lipp", function() {deepEqual( Stem("lipp"), "lipp");});
test("lippe -> lipp", function() {deepEqual( Stem("lippe"), "lipp");});
test("lippen -> lipp", function() {deepEqual( Stem("lippen"), "lipp");});
test("lippenbeissen -> lippenbeiss", function() {deepEqual( Stem("lippenbeissen"), "lippenbeiss");});
test("lippenbeißen -> lippenbeiss", function() {deepEqual( Stem("lippenbeißen"), "lippenbeiss");});
test("lippenbewegungen -> lippenbeweg", function() {deepEqual( Stem("lippenbewegungen"), "lippenbeweg");});
test("lipps -> lipps", function() {deepEqual( Stem("lipps"), "lipps");});
test("liquidierte -> liquidiert", function() {deepEqual( Stem("liquidierte"), "liquidiert");});
test("lischer -> lisch", function() {deepEqual( Stem("lischer"), "lisch");});
test("lischsprachiges -> lischsprach", function() {deepEqual( Stem("lischsprachiges"), "lischsprach");});
test("lispeln -> lispeln", function() {deepEqual( Stem("lispeln"), "lispeln");});
test("lissabon -> lissabon", function() {deepEqual( Stem("lissabon"), "lissabon");});
test("list -> list", function() {deepEqual( Stem("list"), "list");});
test("liste -> list", function() {deepEqual( Stem("liste"), "list");});
test("listen -> list", function() {deepEqual( Stem("listen"), "list");});
test("listig -> listig", function() {deepEqual( Stem("listig"), "listig");});
test("listige -> listig", function() {deepEqual( Stem("listige"), "listig");});
test("listigen -> listig", function() {deepEqual( Stem("listigen"), "listig");});
test("listiger -> listig", function() {deepEqual( Stem("listiger"), "listig");});
test("listigerweise -> listigerweis", function() {deepEqual( Stem("listigerweise"), "listigerweis");});
test("listiges -> listig", function() {deepEqual( Stem("listiges"), "listig");});
test("liter -> lit", function() {deepEqual( Stem("liter"), "lit");});
test("literatur -> literatur", function() {deepEqual( Stem("literatur"), "literatur");});
test("literaturliste -> literaturlist", function() {deepEqual( Stem("literaturliste"), "literaturlist");});
test("litt -> litt", function() {deepEqual( Stem("litt"), "litt");});
test("litte -> litt", function() {deepEqual( Stem("litte"), "litt");});
test("litten -> litt", function() {deepEqual( Stem("litten"), "litt");});
test("living -> living", function() {deepEqual( Stem("living"), "living");});
test("livius -> livius", function() {deepEqual( Stem("livius"), "livius");});
test("livree -> livre", function() {deepEqual( Stem("livree"), "livre");});
test("ln -> ln", function() {deepEqual( Stem("ln"), "ln");});
test("lndikativ -> lndikativ", function() {deepEqual( Stem("lndikativ"), "lndikativ");});
test("load -> load", function() {deepEqual( Stem("load"), "load");});
test("lob -> lob", function() {deepEqual( Stem("lob"), "lob");});
test("lobe -> lob", function() {deepEqual( Stem("lobe"), "lob");});
test("loben -> lob", function() {deepEqual( Stem("loben"), "lob");});
test("lobenden -> lobend", function() {deepEqual( Stem("lobenden"), "lobend");});
test("lobet -> lobet", function() {deepEqual( Stem("lobet"), "lobet");});
test("lobgesang -> lobgesang", function() {deepEqual( Stem("lobgesang"), "lobgesang");});
test("löblicher -> loblich", function() {deepEqual( Stem("löblicher"), "loblich");});
test("lobpreisen -> lobpreis", function() {deepEqual( Stem("lobpreisen"), "lobpreis");});
test("lobpreisung -> lobpreis", function() {deepEqual( Stem("lobpreisung"), "lobpreis");});
test("lobsingen -> lobsing", function() {deepEqual( Stem("lobsingen"), "lobsing");});
test("lobsinget -> lobsinget", function() {deepEqual( Stem("lobsinget"), "lobsinget");});
test("lobt -> lobt", function() {deepEqual( Stem("lobt"), "lobt");});
test("lobte -> lobt", function() {deepEqual( Stem("lobte"), "lobt");});
test("loch -> loch", function() {deepEqual( Stem("loch"), "loch");});
test("löchelchen -> lochelch", function() {deepEqual( Stem("löchelchen"), "lochelch");});
test("löcher -> loch", function() {deepEqual( Stem("löcher"), "loch");});
test("loci -> loci", function() {deepEqual( Stem("loci"), "loci");});
test("locis -> locis", function() {deepEqual( Stem("locis"), "locis");});
test("löckchen -> lockch", function() {deepEqual( Stem("löckchen"), "lockch");});
test("locken -> lock", function() {deepEqual( Stem("locken"), "lock");});
test("lockend -> lockend", function() {deepEqual( Stem("lockend"), "lockend");});
test("lockenden -> lockend", function() {deepEqual( Stem("lockenden"), "lockend");});
test("lockenhaar -> lockenhaar", function() {deepEqual( Stem("lockenhaar"), "lockenhaar");});
test("lockenkopfe -> lockenkopf", function() {deepEqual( Stem("lockenkopfe"), "lockenkopf");});
test("lockerten -> lockert", function() {deepEqual( Stem("lockerten"), "lockert");});
test("lockort -> lockort", function() {deepEqual( Stem("lockort"), "lockort");});
test("lockruf -> lockruf", function() {deepEqual( Stem("lockruf"), "lockruf");});
test("lockte -> lockt", function() {deepEqual( Stem("lockte"), "lockt");});
test("locus -> locus", function() {deepEqual( Stem("locus"), "locus");});
test("lodenmantel -> lodenmantel", function() {deepEqual( Stem("lodenmantel"), "lodenmantel");});
test("loeb -> loeb", function() {deepEqual( Stem("loeb"), "loeb");});
test("löffel -> loffel", function() {deepEqual( Stem("löffel"), "loffel");});
test("löffeln -> loffeln", function() {deepEqual( Stem("löffeln"), "loffeln");});
test("log -> log", function() {deepEqual( Stem("log"), "log");});
test("loge -> log", function() {deepEqual( Stem("loge"), "log");});
test("logik -> logik", function() {deepEqual( Stem("logik"), "logik");});
test("logisch -> logisch", function() {deepEqual( Stem("logisch"), "logisch");});
test("logische -> logisch", function() {deepEqual( Stem("logische"), "logisch");});
test("logischen -> logisch", function() {deepEqual( Stem("logischen"), "logisch");});
test("logouv -> logouv", function() {deepEqual( Stem("logouv"), "logouv");});
test("logwn -> logwn", function() {deepEqual( Stem("logwn"), "logwn");});
test("lohe -> loh", function() {deepEqual( Stem("lohe"), "loh");});
test("lohender -> lohend", function() {deepEqual( Stem("lohender"), "lohend");});
test("lohengrin -> lohengrin", function() {deepEqual( Stem("lohengrin"), "lohengrin");});
test("lohete -> lohet", function() {deepEqual( Stem("lohete"), "lohet");});
test("lohn -> lohn", function() {deepEqual( Stem("lohn"), "lohn");});
test("lohne -> lohn", function() {deepEqual( Stem("lohne"), "lohn");});
test("lohnes -> lohn", function() {deepEqual( Stem("lohnes"), "lohn");});
test("lohnkutscher -> lohnkutsch", function() {deepEqual( Stem("lohnkutscher"), "lohnkutsch");});
test("lohnt -> lohnt", function() {deepEqual( Stem("lohnt"), "lohnt");});
test("lohnte -> lohnt", function() {deepEqual( Stem("lohnte"), "lohnt");});
test("lohnverhältnis -> lohnverhaltnis", function() {deepEqual( Stem("lohnverhältnis"), "lohnverhaltnis");});
test("lokal -> lokal", function() {deepEqual( Stem("lokal"), "lokal");});
test("lokale -> lokal", function() {deepEqual( Stem("lokale"), "lokal");});
test("lokalen -> lokal", function() {deepEqual( Stem("lokalen"), "lokal");});
test("lokomotive -> lokomotiv", function() {deepEqual( Stem("lokomotive"), "lokomotiv");});
test("london -> london", function() {deepEqual( Stem("london"), "london");});
test("londoner -> london", function() {deepEqual( Stem("londoner"), "london");});
test("lorbeeren -> lorbe", function() {deepEqual( Stem("lorbeeren"), "lorbe");});
test("lorbeerkränze -> lorbeerkranz", function() {deepEqual( Stem("lorbeerkränze"), "lorbeerkranz");});
test("los -> los", function() {deepEqual( Stem("los"), "los");});
test("lösche -> losch", function() {deepEqual( Stem("lösche"), "losch");});
test("löschen -> losch", function() {deepEqual( Stem("löschen"), "losch");});
test("löschpapierne -> loschpapiern", function() {deepEqual( Stem("löschpapierne"), "loschpapiern");});
test("löscht -> loscht", function() {deepEqual( Stem("löscht"), "loscht");});
test("lose -> los", function() {deepEqual( Stem("lose"), "los");});
test("lösegeld -> losegeld", function() {deepEqual( Stem("lösegeld"), "losegeld");});
test("lösen -> los", function() {deepEqual( Stem("lösen"), "los");});
test("lösenden -> losend", function() {deepEqual( Stem("lösenden"), "losend");});
test("losfahren -> losfahr", function() {deepEqual( Stem("losfahren"), "losfahr");});
test("losgebrochen -> losgebroch", function() {deepEqual( Stem("losgebrochen"), "losgebroch");});
test("losgebrochener -> losgebroch", function() {deepEqual( Stem("losgebrochener"), "losgebroch");});
test("losgehen -> losgeh", function() {deepEqual( Stem("losgehen"), "losgeh");});
test("losgerissen -> losgeriss", function() {deepEqual( Stem("losgerissen"), "losgeriss");});
test("losgeschlagen -> losgeschlag", function() {deepEqual( Stem("losgeschlagen"), "losgeschlag");});
test("losgetrennt -> losgetrennt", function() {deepEqual( Stem("losgetrennt"), "losgetrennt");});
test("loskaufen -> loskauf", function() {deepEqual( Stem("loskaufen"), "loskauf");});
test("loskettete -> loskettet", function() {deepEqual( Stem("loskettete"), "loskettet");});
test("loskommen -> loskomm", function() {deepEqual( Stem("loskommen"), "loskomm");});
test("loslassen -> loslass", function() {deepEqual( Stem("loslassen"), "loslass");});
test("losmachen -> losmach", function() {deepEqual( Stem("losmachen"), "losmach");});
test("losreissen -> losreiss", function() {deepEqual( Stem("losreissen"), "losreiss");});
test("losrennen -> losrenn", function() {deepEqual( Stem("losrennen"), "losrenn");});
test("lossagung -> lossag", function() {deepEqual( Stem("lossagung"), "lossag");});
test("losschlug -> losschlug", function() {deepEqual( Stem("losschlug"), "losschlug");});
test("löst -> lost", function() {deepEqual( Stem("löst"), "lost");});
test("löste -> lost", function() {deepEqual( Stem("löste"), "lost");});
test("lösten -> lost", function() {deepEqual( Stem("lösten"), "lost");});
test("losung -> losung", function() {deepEqual( Stem("losung"), "losung");});
test("lösung -> losung", function() {deepEqual( Stem("lösung"), "losung");});
test("loswinden -> loswind", function() {deepEqual( Stem("loswinden"), "loswind");});
test("loszubinden -> loszubind", function() {deepEqual( Stem("loszubinden"), "loszubind");});
test("loszubrennen -> loszubrenn", function() {deepEqual( Stem("loszubrennen"), "loszubrenn");});
test("loszubringen -> loszubring", function() {deepEqual( Stem("loszubringen"), "loszubring");});
test("loszukaufen -> loszukauf", function() {deepEqual( Stem("loszukaufen"), "loszukauf");});
test("loszukommen -> loszukomm", function() {deepEqual( Stem("loszukommen"), "loszukomm");});
test("loszulassen -> loszulass", function() {deepEqual( Stem("loszulassen"), "loszulass");});
test("loszumachen -> loszumach", function() {deepEqual( Stem("loszumachen"), "loszumach");});
test("loszureissen -> loszureiss", function() {deepEqual( Stem("loszureissen"), "loszureiss");});
test("loszuschlagen -> loszuschlag", function() {deepEqual( Stem("loszuschlagen"), "loszuschlag");});
test("loszuschreien -> loszuschrei", function() {deepEqual( Stem("loszuschreien"), "loszuschrei");});
test("loszuspringen -> loszuspring", function() {deepEqual( Stem("loszuspringen"), "loszuspring");});
test("lot -> lot", function() {deepEqual( Stem("lot"), "lot");});
test("lotterie -> lotteri", function() {deepEqual( Stem("lotterie"), "lotteri");});
test("lotteriemann -> lotteriemann", function() {deepEqual( Stem("lotteriemann"), "lotteriemann");});
test("lotterien -> lotteri", function() {deepEqual( Stem("lotterien"), "lotteri");});
test("lotteriespiel -> lotteriespiel", function() {deepEqual( Stem("lotteriespiel"), "lotteriespiel");});
test("lotterieverkehr -> lotterieverkehr", function() {deepEqual( Stem("lotterieverkehr"), "lotterieverkehr");});
test("lotterige -> lotter", function() {deepEqual( Stem("lotterige"), "lotter");});
test("lotterleben -> lotterleb", function() {deepEqual( Stem("lotterleben"), "lotterleb");});
test("lotterneste -> lottern", function() {deepEqual( Stem("lotterneste"), "lottern");});
test("louisdors -> louisdor", function() {deepEqual( Stem("louisdors"), "louisdor");});
test("louison -> louison", function() {deepEqual( Stem("louison"), "louison");});
test("louisons -> louison", function() {deepEqual( Stem("louisons"), "louison");});
test("love -> lov", function() {deepEqual( Stem("love"), "lov");});
test("low -> low", function() {deepEqual( Stem("low"), "low");});
test("löwe -> low", function() {deepEqual( Stem("löwe"), "low");});
test("löwen -> low", function() {deepEqual( Stem("löwen"), "low");});
test("löwenhaut -> lowenhaut", function() {deepEqual( Stem("löwenhaut"), "lowenhaut");});
test("löwenjagd -> lowenjagd", function() {deepEqual( Stem("löwenjagd"), "lowenjagd");});
test("löwin -> lowin", function() {deepEqual( Stem("löwin"), "lowin");});
test("lucelle -> lucell", function() {deepEqual( Stem("lucelle"), "lucell");});
test("lucinde -> lucind", function() {deepEqual( Stem("lucinde"), "lucind");});
test("lücke -> luck", function() {deepEqual( Stem("lücke"), "luck");});
test("lücken -> luck", function() {deepEqual( Stem("lücken"), "luck");});
test("lückenbüsser -> luckenbuss", function() {deepEqual( Stem("lückenbüsser"), "luckenbuss");});
test("lückenhaft -> luckenhaft", function() {deepEqual( Stem("lückenhaft"), "luckenhaft");});
test("lud -> lud", function() {deepEqual( Stem("lud"), "lud");});
test("luden -> lud", function() {deepEqual( Stem("luden"), "lud");});
test("luder -> lud", function() {deepEqual( Stem("luder"), "lud");});
test("ludwig -> ludwig", function() {deepEqual( Stem("ludwig"), "ludwig");});
test("luft -> luft", function() {deepEqual( Stem("luft"), "luft");});
test("luftballon -> luftballon", function() {deepEqual( Stem("luftballon"), "luftballon");});
test("luftballons -> luftballon", function() {deepEqual( Stem("luftballons"), "luftballon");});
test("luftblasen -> luftblas", function() {deepEqual( Stem("luftblasen"), "luftblas");});
test("lüftchen -> luftch", function() {deepEqual( Stem("lüftchen"), "luftch");});
test("luftdrucks -> luftdruck", function() {deepEqual( Stem("luftdrucks"), "luftdruck");});
test("lüfte -> luft", function() {deepEqual( Stem("lüfte"), "luft");});
test("lüften -> luft", function() {deepEqual( Stem("lüften"), "luft");});
test("lufterscheinung -> lufterschein", function() {deepEqual( Stem("lufterscheinung"), "lufterschein");});
test("lüftete -> luftet", function() {deepEqual( Stem("lüftete"), "luftet");});
test("luftgebilde -> luftgebild", function() {deepEqual( Stem("luftgebilde"), "luftgebild");});
test("lufthauch -> lufthauch", function() {deepEqual( Stem("lufthauch"), "lufthauch");});
test("luftig -> luftig", function() {deepEqual( Stem("luftig"), "luftig");});
test("luftige -> luftig", function() {deepEqual( Stem("luftige"), "luftig");});
test("luftigen -> luftig", function() {deepEqual( Stem("luftigen"), "luftig");});
test("luftjagd -> luftjagd", function() {deepEqual( Stem("luftjagd"), "luftjagd");});
test("luftlosen -> luftlos", function() {deepEqual( Stem("luftlosen"), "luftlos");});
test("luftraum -> luftraum", function() {deepEqual( Stem("luftraum"), "luftraum");});
test("luftsänger -> luftsang", function() {deepEqual( Stem("luftsänger"), "luftsang");});
test("luftschloss -> luftschloss", function() {deepEqual( Stem("luftschloss"), "luftschloss");});
test("luftschlösser -> luftschloss", function() {deepEqual( Stem("luftschlösser"), "luftschloss");});
test("luga -> luga", function() {deepEqual( Stem("luga"), "luga");});
test("lüge -> lug", function() {deepEqual( Stem("lüge"), "lug");});
test("lügen -> lug", function() {deepEqual( Stem("lügen"), "lug");});
test("lügenberichten -> lugenbericht", function() {deepEqual( Stem("lügenberichten"), "lugenbericht");});
test("lügenhaft -> lugenhaft", function() {deepEqual( Stem("lügenhaft"), "lugenhaft");});
test("lügenhafte -> lugenhaft", function() {deepEqual( Stem("lügenhafte"), "lugenhaft");});
test("lügner -> lugn", function() {deepEqual( Stem("lügner"), "lugn");});
test("lügnerin -> lugnerin", function() {deepEqual( Stem("lügnerin"), "lugnerin");});
test("lügners -> lugn", function() {deepEqual( Stem("lügners"), "lugn");});
test("lugst -> lugst", function() {deepEqual( Stem("lugst"), "lugst");});
test("lügst -> lugst", function() {deepEqual( Stem("lügst"), "lugst");});
test("lügt -> lugt", function() {deepEqual( Stem("lügt"), "lugt");});
test("luitpold -> luitpold", function() {deepEqual( Stem("luitpold"), "luitpold");});
test("luk -> luk", function() {deepEqual( Stem("luk"), "luk");});
test("lukas -> lukas", function() {deepEqual( Stem("lukas"), "lukas");});
test("lukasevangelium -> lukasevangelium", function() {deepEqual( Stem("lukasevangelium"), "lukasevangelium");});
test("luke -> luk", function() {deepEqual( Stem("luke"), "luk");});
test("lümmel -> lummel", function() {deepEqual( Stem("lümmel"), "lummel");});
test("lümmelte -> lummelt", function() {deepEqual( Stem("lümmelte"), "lummelt");});
test("lumpen -> lump", function() {deepEqual( Stem("lumpen"), "lump");});
test("lumpenhund -> lumpenhund", function() {deepEqual( Stem("lumpenhund"), "lumpenhund");});
test("lumpenhunde -> lumpenhund", function() {deepEqual( Stem("lumpenhunde"), "lumpenhund");});
test("lumpenkleider -> lumpenkleid", function() {deepEqual( Stem("lumpenkleider"), "lumpenkleid");});
test("lumpenkleidung -> lumpenkleid", function() {deepEqual( Stem("lumpenkleidung"), "lumpenkleid");});
test("lunch -> lunch", function() {deepEqual( Stem("lunch"), "lunch");});
test("lunge -> lung", function() {deepEqual( Stem("lunge"), "lung");});
test("lungen -> lung", function() {deepEqual( Stem("lungen"), "lung");});
test("lungenflügel -> lungenflugel", function() {deepEqual( Stem("lungenflügel"), "lungenflugel");});
test("lungenschuss -> lungenschuss", function() {deepEqual( Stem("lungenschuss"), "lungenschuss");});
test("lust -> lust", function() {deepEqual( Stem("lust"), "lust");});
test("lustbarkeit -> lustbar", function() {deepEqual( Stem("lustbarkeit"), "lustbar");});
test("lustbarkeiten -> lustbar", function() {deepEqual( Stem("lustbarkeiten"), "lustbar");});
test("lüste -> lust", function() {deepEqual( Stem("lüste"), "lust");});
test("lüstern -> lust", function() {deepEqual( Stem("lüstern"), "lust");});
test("lüsternem -> lustern", function() {deepEqual( Stem("lüsternem"), "lustern");});
test("lüsternheit -> lustern", function() {deepEqual( Stem("lüsternheit"), "lustern");});
test("lustig -> lustig", function() {deepEqual( Stem("lustig"), "lustig");});
test("lustige -> lustig", function() {deepEqual( Stem("lustige"), "lustig");});
test("lustigen -> lustig", function() {deepEqual( Stem("lustigen"), "lustig");});
test("lustiger -> lustig", function() {deepEqual( Stem("lustiger"), "lustig");});
test("lustiges -> lustig", function() {deepEqual( Stem("lustiges"), "lustig");});
test("lustigkeit -> lustig", function() {deepEqual( Stem("lustigkeit"), "lustig");});
test("lustigsten -> lustig", function() {deepEqual( Stem("lustigsten"), "lustig");});
test("lustreiz -> lustreiz", function() {deepEqual( Stem("lustreiz"), "lustreiz");});
test("lustreize -> lustreiz", function() {deepEqual( Stem("lustreize"), "lustreiz");});
test("lustreizen -> lustreiz", function() {deepEqual( Stem("lustreizen"), "lustreiz");});
test("lustspielen -> lustspiel", function() {deepEqual( Stem("lustspielen"), "lustspiel");});
test("lustwald -> lustwald", function() {deepEqual( Stem("lustwald"), "lustwald");});
test("lustwälder -> lustwald", function() {deepEqual( Stem("lustwälder"), "lustwald");});
test("lustwandelnden -> lustwandelnd", function() {deepEqual( Stem("lustwandelnden"), "lustwandelnd");});
test("lustwandelte -> lustwandelt", function() {deepEqual( Stem("lustwandelte"), "lustwandelt");});
test("lutherisch -> luther", function() {deepEqual( Stem("lutherisch"), "luther");});
test("lutherische -> luther", function() {deepEqual( Stem("lutherische"), "luther");});
test("lutherischem -> luther", function() {deepEqual( Stem("lutherischem"), "luther");});
test("lutherischen -> luther", function() {deepEqual( Stem("lutherischen"), "luther");});
test("lutherischer -> luther", function() {deepEqual( Stem("lutherischer"), "luther");});
test("lutherland -> lutherland", function() {deepEqual( Stem("lutherland"), "lutherland");});
test("lutherstädte -> lutherstadt", function() {deepEqual( Stem("lutherstädte"), "lutherstadt");});
test("lutum -> lutum", function() {deepEqual( Stem("lutum"), "lutum");});
test("lütütü -> lututu", function() {deepEqual( Stem("lütütü"), "lututu");});
test("lux -> lux", function() {deepEqual( Stem("lux"), "lux");});
test("luxerl -> luxerl", function() {deepEqual( Stem("luxerl"), "luxerl");});
test("luxerls -> luxerl", function() {deepEqual( Stem("luxerls"), "luxerl");});
test("luxuriösen -> luxurios", function() {deepEqual( Stem("luxuriösen"), "luxurios");});
test("luzifer -> luzif", function() {deepEqual( Stem("luzifer"), "luzif");});
test("lwb -> lwb", function() {deepEqual( Stem("lwb"), "lwb");});
test("lydia -> lydia", function() {deepEqual( Stem("lydia"), "lydia");});
test("lydias -> lydias", function() {deepEqual( Stem("lydias"), "lydias");});
test("lydier -> lydi", function() {deepEqual( Stem("lydier"), "lydi");});
test("lyon -> lyon", function() {deepEqual( Stem("lyon"), "lyon");});
test("lyra -> lyra", function() {deepEqual( Stem("lyra"), "lyra");});
test("lyrik -> lyrik", function() {deepEqual( Stem("lyrik"), "lyrik");});
test("m -> m", function() {deepEqual( Stem("m"), "m");});
test("ma -> ma", function() {deepEqual( Stem("ma"), "ma");});
test("maastricht -> maastricht", function() {deepEqual( Stem("maastricht"), "maastricht");});
test("maastrichter -> maastricht", function() {deepEqual( Stem("maastrichter"), "maastricht");});
test("macbeth -> macbeth", function() {deepEqual( Stem("macbeth"), "macbeth");});
test("macbeths -> macbeth", function() {deepEqual( Stem("macbeths"), "macbeth");});
test("mach -> mach", function() {deepEqual( Stem("mach"), "mach");});
test("mache -> mach", function() {deepEqual( Stem("mache"), "mach");});
test("machen -> mach", function() {deepEqual( Stem("machen"), "mach");});
test("machend -> machend", function() {deepEqual( Stem("machend"), "machend");});
test("machenden -> machend", function() {deepEqual( Stem("machenden"), "machend");});
test("macher -> mach", function() {deepEqual( Stem("macher"), "mach");});
test("machers -> mach", function() {deepEqual( Stem("machers"), "mach");});
test("machet -> machet", function() {deepEqual( Stem("machet"), "machet");});
test("macheten -> machet", function() {deepEqual( Stem("macheten"), "machet");});
test("machiavelli -> machiavelli", function() {deepEqual( Stem("machiavelli"), "machiavelli");});
test("machli -> machli", function() {deepEqual( Stem("machli"), "machli");});
test("machst -> mach", function() {deepEqual( Stem("machst"), "mach");});
test("macht -> macht", function() {deepEqual( Stem("macht"), "macht");});
test("machte -> macht", function() {deepEqual( Stem("machte"), "macht");});
test("mächte -> macht", function() {deepEqual( Stem("mächte"), "macht");});
test("machten -> macht", function() {deepEqual( Stem("machten"), "macht");});
test("mächten -> macht", function() {deepEqual( Stem("mächten"), "macht");});
test("machtest -> macht", function() {deepEqual( Stem("machtest"), "macht");});
test("machthabenden -> machthab", function() {deepEqual( Stem("machthabenden"), "machthab");});
test("machthaber -> machthab", function() {deepEqual( Stem("machthaber"), "machthab");});
test("mächtig -> machtig", function() {deepEqual( Stem("mächtig"), "machtig");});
test("mächtige -> machtig", function() {deepEqual( Stem("mächtige"), "machtig");});
test("mächtigen -> machtig", function() {deepEqual( Stem("mächtigen"), "machtig");});
test("mächtiger -> machtig", function() {deepEqual( Stem("mächtiger"), "machtig");});
test("mächtiges -> machtig", function() {deepEqual( Stem("mächtiges"), "machtig");});
test("mächtigste -> machtig", function() {deepEqual( Stem("mächtigste"), "machtig");});
test("machtlos -> machtlos", function() {deepEqual( Stem("machtlos"), "machtlos");});
test("machtmittel -> machtmittel", function() {deepEqual( Stem("machtmittel"), "machtmittel");});
test("machtvoll -> machtvoll", function() {deepEqual( Stem("machtvoll"), "machtvoll");});
test("mad -> mad", function() {deepEqual( Stem("mad"), "mad");});
test("mädchen -> madch", function() {deepEqual( Stem("mädchen"), "madch");});
test("mädchenhaft -> madchenhaft", function() {deepEqual( Stem("mädchenhaft"), "madchenhaft");});
test("mädchenhaften -> madchenhaft", function() {deepEqual( Stem("mädchenhaften"), "madchenhaft");});
test("mädchens -> madch", function() {deepEqual( Stem("mädchens"), "madch");});
test("madehen -> madeh", function() {deepEqual( Stem("madehen"), "madeh");});
test("mädel -> madel", function() {deepEqual( Stem("mädel"), "madel");});
test("madeleine -> madelein", function() {deepEqual( Stem("madeleine"), "madelein");});
test("mädels -> madel", function() {deepEqual( Stem("mädels"), "madel");});
test("madl -> madl", function() {deepEqual( Stem("madl"), "madl");});
test("madln -> madln", function() {deepEqual( Stem("madln"), "madln");});
test("mag -> mag", function() {deepEqual( Stem("mag"), "mag");});
test("magazin -> magazin", function() {deepEqual( Stem("magazin"), "magazin");});
test("magd -> magd", function() {deepEqual( Stem("magd"), "magd");});
test("mägde -> magd", function() {deepEqual( Stem("mägde"), "magd");});
test("mägden -> magd", function() {deepEqual( Stem("mägden"), "magd");});
test("magen -> mag", function() {deepEqual( Stem("magen"), "mag");});
test("mager -> mag", function() {deepEqual( Stem("mager"), "mag");});
test("magere -> mag", function() {deepEqual( Stem("magere"), "mag");});
test("mageren -> mag", function() {deepEqual( Stem("mageren"), "mag");});
test("magerer -> mag", function() {deepEqual( Stem("magerer"), "mag");});
test("magerkeit -> mager", function() {deepEqual( Stem("magerkeit"), "mager");});
test("magerten -> magert", function() {deepEqual( Stem("magerten"), "magert");});
test("magi -> magi", function() {deepEqual( Stem("magi"), "magi");});
test("magica -> magica", function() {deepEqual( Stem("magica"), "magica");});
test("magie -> magi", function() {deepEqual( Stem("magie"), "magi");});
test("magier -> magi", function() {deepEqual( Stem("magier"), "magi");});
test("magiern -> magi", function() {deepEqual( Stem("magiern"), "magi");});
test("magisch -> magisch", function() {deepEqual( Stem("magisch"), "magisch");});
test("magische -> magisch", function() {deepEqual( Stem("magische"), "magisch");});
test("magischen -> magisch", function() {deepEqual( Stem("magischen"), "magisch");});
test("mäglein -> maglein", function() {deepEqual( Stem("mäglein"), "maglein");});
test("magnaten -> magnat", function() {deepEqual( Stem("magnaten"), "magnat");});
test("magnet -> magnet", function() {deepEqual( Stem("magnet"), "magnet");});
test("magnetgebirge -> magnetgebirg", function() {deepEqual( Stem("magnetgebirge"), "magnetgebirg");});
test("magst -> magst", function() {deepEqual( Stem("magst"), "magst");});
test("mahal -> mahal", function() {deepEqual( Stem("mahal"), "mahal");});
test("mahalalel -> mahalalel", function() {deepEqual( Stem("mahalalel"), "mahalalel");});
test("mahalalels -> mahalalel", function() {deepEqual( Stem("mahalalels"), "mahalalel");});
test("mahl -> mahl", function() {deepEqual( Stem("mahl"), "mahl");});
test("mahle -> mahl", function() {deepEqual( Stem("mahle"), "mahl");});
test("mahlen -> mahl", function() {deepEqual( Stem("mahlen"), "mahl");});
test("mahles -> mahl", function() {deepEqual( Stem("mahles"), "mahl");});
test("mählich -> mahlich", function() {deepEqual( Stem("mählich"), "mahlich");});
test("mahlzeit -> mahlzeit", function() {deepEqual( Stem("mahlzeit"), "mahlzeit");});
test("mahlzeiten -> mahlzeit", function() {deepEqual( Stem("mahlzeiten"), "mahlzeit");});
test("mahm -> mahm", function() {deepEqual( Stem("mahm"), "mahm");});
test("mähne -> mahn", function() {deepEqual( Stem("mähne"), "mahn");});
test("mahnte -> mahnt", function() {deepEqual( Stem("mahnte"), "mahnt");});
test("mahnung -> mahnung", function() {deepEqual( Stem("mahnung"), "mahnung");});
test("mahomets -> mahomet", function() {deepEqual( Stem("mahomets"), "mahomet");});
test("mai -> mai", function() {deepEqual( Stem("mai"), "mai");});
test("maigesang -> maigesang", function() {deepEqual( Stem("maigesang"), "maigesang");});
test("maiglöckchenblatt -> maiglockchenblatt", function() {deepEqual( Stem("maiglöckchenblatt"), "maiglockchenblatt");});
test("maikäfer -> maikaf", function() {deepEqual( Stem("maikäfer"), "maikaf");});
test("maikäferballade -> maikaferballad", function() {deepEqual( Stem("maikäferballade"), "maikaferballad");});
test("maikäferbein -> maikaferbein", function() {deepEqual( Stem("maikäferbein"), "maikaferbein");});
test("maikäferbeinchen -> maikaferbeinch", function() {deepEqual( Stem("maikäferbeinchen"), "maikaferbeinch");});
test("maikäferhafte -> maikaferhaft", function() {deepEqual( Stem("maikäferhafte"), "maikaferhaft");});
test("maikäferherz -> maikaferherz", function() {deepEqual( Stem("maikäferherz"), "maikaferherz");});
test("maikäferlein -> maikaferlein", function() {deepEqual( Stem("maikäferlein"), "maikaferlein");});
test("maikäfermann -> maikafermann", function() {deepEqual( Stem("maikäfermann"), "maikafermann");});
test("maikäfern -> maikaf", function() {deepEqual( Stem("maikäfern"), "maikaf");});
test("maikäfertänzchen -> maikafertanzch", function() {deepEqual( Stem("maikäfertänzchen"), "maikafertanzch");});
test("maikäfertänze -> maikafertanz", function() {deepEqual( Stem("maikäfertänze"), "maikafertanz");});
test("mail -> mail", function() {deepEqual( Stem("mail"), "mail");});
test("mailand -> mailand", function() {deepEqual( Stem("mailand"), "mailand");});
test("mailänder -> mailand", function() {deepEqual( Stem("mailänder"), "mailand");});
test("mailändischen -> mailand", function() {deepEqual( Stem("mailändischen"), "mailand");});
test("main -> main", function() {deepEqual( Stem("main"), "main");});
test("maison -> maison", function() {deepEqual( Stem("maison"), "maison");});
test("maisonne -> maisonn", function() {deepEqual( Stem("maisonne"), "maisonn");});
test("majestät -> majestat", function() {deepEqual( Stem("majestät"), "majestat");});
test("majestätisch -> majestat", function() {deepEqual( Stem("majestätisch"), "majestat");});
test("majorität -> majoritat", function() {deepEqual( Stem("majorität"), "majoritat");});
test("makaber -> makab", function() {deepEqual( Stem("makaber"), "makab");});
test("makarius -> makarius", function() {deepEqual( Stem("makarius"), "makarius");});
test("mal -> mal", function() {deepEqual( Stem("mal"), "mal");});
test("male -> mal", function() {deepEqual( Stem("male"), "mal");});
test("malen -> mal", function() {deepEqual( Stem("malen"), "mal");});
test("maler -> mal", function() {deepEqual( Stem("maler"), "mal");});
test("malerei -> malerei", function() {deepEqual( Stem("malerei"), "malerei");});
test("malerisch -> maler", function() {deepEqual( Stem("malerisch"), "maler");});
test("malerische -> maler", function() {deepEqual( Stem("malerische"), "maler");});
test("mali -> mali", function() {deepEqual( Stem("mali"), "mali");});
test("malis -> malis", function() {deepEqual( Stem("malis"), "malis");});
test("malottke -> malottk", function() {deepEqual( Stem("malottke"), "malottk");});
test("malottkes -> malottk", function() {deepEqual( Stem("malottkes"), "malottk");});
test("malte -> malt", function() {deepEqual( Stem("malte"), "malt");});
test("malum -> malum", function() {deepEqual( Stem("malum"), "malum");});
test("malzeichen -> malzeich", function() {deepEqual( Stem("malzeichen"), "malzeich");});
test("man -> man", function() {deepEqual( Stem("man"), "man");});
test("manch -> manch", function() {deepEqual( Stem("manch"), "manch");});
test("manche -> manch", function() {deepEqual( Stem("manche"), "manch");});
test("manchem -> manch", function() {deepEqual( Stem("manchem"), "manch");});
test("manchen -> manch", function() {deepEqual( Stem("manchen"), "manch");});
test("mancher -> manch", function() {deepEqual( Stem("mancher"), "manch");});
test("mancherlei -> mancherlei", function() {deepEqual( Stem("mancherlei"), "mancherlei");});
test("manches -> manch", function() {deepEqual( Stem("manches"), "manch");});
test("manchesterjacke -> manchesterjack", function() {deepEqual( Stem("manchesterjacke"), "manchesterjack");});
test("manchmal -> manchmal", function() {deepEqual( Stem("manchmal"), "manchmal");});
test("mandat -> mandat", function() {deepEqual( Stem("mandat"), "mandat");});
test("mandelkern -> mandelk", function() {deepEqual( Stem("mandelkern"), "mandelk");});
test("mandeln -> mandeln", function() {deepEqual( Stem("mandeln"), "mandeln");});
test("mandeltorte -> mandeltort", function() {deepEqual( Stem("mandeltorte"), "mandeltort");});
test("mandieren -> mandi", function() {deepEqual( Stem("mandieren"), "mandi");});
test("manfred -> manfred", function() {deepEqual( Stem("manfred"), "manfred");});
test("mangel -> mangel", function() {deepEqual( Stem("mangel"), "mangel");});
test("mängel -> mangel", function() {deepEqual( Stem("mängel"), "mangel");});
test("mangelhaft -> mangelhaft", function() {deepEqual( Stem("mangelhaft"), "mangelhaft");});
test("mangelhafte -> mangelhaft", function() {deepEqual( Stem("mangelhafte"), "mangelhaft");});
test("mangelhaftem -> mangelhaft", function() {deepEqual( Stem("mangelhaftem"), "mangelhaft");});
test("mangelndes -> mangelnd", function() {deepEqual( Stem("mangelndes"), "mangelnd");});
test("mangelt -> mangelt", function() {deepEqual( Stem("mangelt"), "mangelt");});
test("mangelte -> mangelt", function() {deepEqual( Stem("mangelte"), "mangelt");});
test("manier -> mani", function() {deepEqual( Stem("manier"), "mani");});
test("manieren -> mani", function() {deepEqual( Stem("manieren"), "mani");});
test("manierlich -> mani", function() {deepEqual( Stem("manierlich"), "mani");});
test("mann -> mann", function() {deepEqual( Stem("mann"), "mann");});
test("manna -> manna", function() {deepEqual( Stem("manna"), "manna");});
test("mannbares -> mannbar", function() {deepEqual( Stem("mannbares"), "mannbar");});
test("männchen -> mannch", function() {deepEqual( Stem("männchen"), "mannch");});
test("männchens -> mannch", function() {deepEqual( Stem("männchens"), "mannch");});
test("manndi -> manndi", function() {deepEqual( Stem("manndi"), "manndi");});
test("manne -> mann", function() {deepEqual( Stem("manne"), "mann");});
test("männer -> mann", function() {deepEqual( Stem("männer"), "mann");});
test("männern -> mann", function() {deepEqual( Stem("männern"), "mann");});
test("männerstimme -> mannerstimm", function() {deepEqual( Stem("männerstimme"), "mannerstimm");});
test("mannes -> mann", function() {deepEqual( Stem("mannes"), "mann");});
test("mannesalter -> mannesalt", function() {deepEqual( Stem("mannesalter"), "mannesalt");});
test("mannesbilde -> mannesbild", function() {deepEqual( Stem("mannesbilde"), "mannesbild");});
test("mannestränen -> mannestran", function() {deepEqual( Stem("mannestränen"), "mannestran");});
test("mannestugend -> mannestug", function() {deepEqual( Stem("mannestugend"), "mannestug");});
test("mannhaft -> mannhaft", function() {deepEqual( Stem("mannhaft"), "mannhaft");});
test("mannhaftigkeit -> mannhaft", function() {deepEqual( Stem("mannhaftigkeit"), "mannhaft");});
test("mannichfachen -> mannichfach", function() {deepEqual( Stem("mannichfachen"), "mannichfach");});
test("mannichfaltigkeit -> mannichfalt", function() {deepEqual( Stem("mannichfaltigkeit"), "mannichfalt");});
test("mannigfach -> mannigfach", function() {deepEqual( Stem("mannigfach"), "mannigfach");});
test("mannigfachem -> mannigfach", function() {deepEqual( Stem("mannigfachem"), "mannigfach");});
test("mannigfacher -> mannigfach", function() {deepEqual( Stem("mannigfacher"), "mannigfach");});
test("mannigfaltige -> mannigfalt", function() {deepEqual( Stem("mannigfaltige"), "mannigfalt");});
test("mannigfaltigen -> mannigfalt", function() {deepEqual( Stem("mannigfaltigen"), "mannigfalt");});
test("mannigfaltigkeit -> mannigfalt", function() {deepEqual( Stem("mannigfaltigkeit"), "mannigfalt");});
test("mannigfaltigkeiten -> mannigfalt", function() {deepEqual( Stem("mannigfaltigkeiten"), "mannigfalt");});
test("mannigfaltigsten -> mannigfalt", function() {deepEqual( Stem("mannigfaltigsten"), "mannigfalt");});
test("männin -> mannin", function() {deepEqual( Stem("männin"), "mannin");});
test("männlein -> mannlein", function() {deepEqual( Stem("männlein"), "mannlein");});
test("mannlich -> mannlich", function() {deepEqual( Stem("mannlich"), "mannlich");});
test("männlich -> mannlich", function() {deepEqual( Stem("männlich"), "mannlich");});
test("männliche -> mannlich", function() {deepEqual( Stem("männliche"), "mannlich");});
test("männlichen -> mannlich", function() {deepEqual( Stem("männlichen"), "mannlich");});
test("männlichkeit -> mannlich", function() {deepEqual( Stem("männlichkeit"), "mannlich");});
test("mannschaft -> mannschaft", function() {deepEqual( Stem("mannschaft"), "mannschaft");});
test("mannshohen -> mannshoh", function() {deepEqual( Stem("mannshohen"), "mannshoh");});
test("mannsleute -> mannsleut", function() {deepEqual( Stem("mannsleute"), "mannsleut");});
test("mannstiefen -> mannstief", function() {deepEqual( Stem("mannstiefen"), "mannstief");});
test("manoah -> manoah", function() {deepEqual( Stem("manoah"), "manoah");});
test("manövriert -> manovriert", function() {deepEqual( Stem("manövriert"), "manovriert");});
test("manschetten -> manschett", function() {deepEqual( Stem("manschetten"), "manschett");});
test("mantel -> mantel", function() {deepEqual( Stem("mantel"), "mantel");});
test("mantels -> mantel", function() {deepEqual( Stem("mantels"), "mantel");});
test("mantelsack -> mantelsack", function() {deepEqual( Stem("mantelsack"), "mantelsack");});
test("mantelträger -> manteltrag", function() {deepEqual( Stem("mantelträger"), "manteltrag");});
test("manuskript -> manuskript", function() {deepEqual( Stem("manuskript"), "manuskript");});
test("manuskripte -> manuskript", function() {deepEqual( Stem("manuskripte"), "manuskript");});
test("manuskripten -> manuskript", function() {deepEqual( Stem("manuskripten"), "manuskript");});
test("manz -> manz", function() {deepEqual( Stem("manz"), "manz");});
test("manzen -> manz", function() {deepEqual( Stem("manzen"), "manz");});
test("manzens -> manz", function() {deepEqual( Stem("manzens"), "manz");});
test("manzin -> manzin", function() {deepEqual( Stem("manzin"), "manzin");});
test("mar -> mar", function() {deepEqual( Stem("mar"), "mar");});
test("marah -> marah", function() {deepEqual( Stem("marah"), "marah");});
test("march -> march", function() {deepEqual( Stem("march"), "march");});
test("märchen -> march", function() {deepEqual( Stem("märchen"), "march");});
test("marcs -> marcs", function() {deepEqual( Stem("marcs"), "marcs");});
test("mard -> mard", function() {deepEqual( Stem("mard"), "mard");});
test("marderdreck -> marderdreck", function() {deepEqual( Stem("marderdreck"), "marderdreck");});
test("mardin -> mardin", function() {deepEqual( Stem("mardin"), "mardin");});
test("maria -> maria", function() {deepEqual( Stem("maria"), "maria");});
test("mariand -> mariand", function() {deepEqual( Stem("mariand"), "mariand");});
test("marienbild -> marienbild", function() {deepEqual( Stem("marienbild"), "marienbild");});
test("marienkäferkinderchen -> marienkaferkinderch", function() {deepEqual( Stem("marienkäferkinderchen"), "marienkaferkinderch");});
test("marinelli -> marinelli", function() {deepEqual( Stem("marinelli"), "marinelli");});
test("mario -> mario", function() {deepEqual( Stem("mario"), "mario");});
test("marionettenspiel -> marionettenspiel", function() {deepEqual( Stem("marionettenspiel"), "marionettenspiel");});
test("maritata -> maritata", function() {deepEqual( Stem("maritata"), "maritata");});
test("mark -> mark", function() {deepEqual( Stem("mark"), "mark");});
test("markierte -> markiert", function() {deepEqual( Stem("markierte"), "markiert");});
test("markln -> markln", function() {deepEqual( Stem("markln"), "markln");});
test("marks -> mark", function() {deepEqual( Stem("marks"), "mark");});
test("markstückl -> markstuckl", function() {deepEqual( Stem("markstückl"), "markstuckl");});
test("marksubstanz -> marksubstanz", function() {deepEqual( Stem("marksubstanz"), "marksubstanz");});
test("markt -> markt", function() {deepEqual( Stem("markt"), "markt");});
test("marktplatz -> marktplatz", function() {deepEqual( Stem("marktplatz"), "marktplatz");});
test("marktsegment -> marktsegment", function() {deepEqual( Stem("marktsegment"), "marktsegment");});
test("marktwirtschaft -> marktwirtschaft", function() {deepEqual( Stem("marktwirtschaft"), "marktwirtschaft");});
test("marmor -> marmor", function() {deepEqual( Stem("marmor"), "marmor");});
test("marotte -> marott", function() {deepEqual( Stem("marotte"), "marott");});
test("marquis -> marquis", function() {deepEqual( Stem("marquis"), "marquis");});
test("marsala -> marsala", function() {deepEqual( Stem("marsala"), "marsala");});
test("marsch -> marsch", function() {deepEqual( Stem("marsch"), "marsch");});
test("märsche -> marsch", function() {deepEqual( Stem("märsche"), "marsch");});
test("marschiert -> marschiert", function() {deepEqual( Stem("marschiert"), "marschiert");});
test("marschierte -> marschiert", function() {deepEqual( Stem("marschierte"), "marschiert");});
test("marschierten -> marschiert", function() {deepEqual( Stem("marschierten"), "marschiert");});
test("marschrichtung -> marschricht", function() {deepEqual( Stem("marschrichtung"), "marschricht");});
test("marseilingen -> marseiling", function() {deepEqual( Stem("marseilingen"), "marseiling");});
test("marseille -> marseill", function() {deepEqual( Stem("marseille"), "marseill");});
test("marterl -> marterl", function() {deepEqual( Stem("marterl"), "marterl");});
test("marterleib -> marterleib", function() {deepEqual( Stem("marterleib"), "marterleib");});
test("marterls -> marterl", function() {deepEqual( Stem("marterls"), "marterl");});
test("marti -> marti", function() {deepEqual( Stem("marti"), "marti");});
test("martialischen -> martial", function() {deepEqual( Stem("martialischen"), "martial");});
test("martin -> martin", function() {deepEqual( Stem("martin"), "martin");});
test("martis -> martis", function() {deepEqual( Stem("martis"), "martis");});
test("märtyrer -> martyr", function() {deepEqual( Stem("märtyrer"), "martyr");});
test("marx -> marx", function() {deepEqual( Stem("marx"), "marx");});
test("märz -> marz", function() {deepEqual( Stem("märz"), "marz");});
test("marzipan -> marzipan", function() {deepEqual( Stem("marzipan"), "marzipan");});
test("marzipanschweinezüchterei -> marzipanschweinezuchterei", function() {deepEqual( Stem("marzipanschweinezüchterei"), "marzipanschweinezuchterei");});
test("marzipanstrassen -> marzipanstrass", function() {deepEqual( Stem("marzipanstrassen"), "marzipanstrass");});
test("märzwoche -> marzwoch", function() {deepEqual( Stem("märzwoche"), "marzwoch");});
test("maschen -> masch", function() {deepEqual( Stem("maschen"), "masch");});
test("maschine -> maschin", function() {deepEqual( Stem("maschine"), "maschin");});
test("maschinengewehren -> maschinengewehr", function() {deepEqual( Stem("maschinengewehren"), "maschinengewehr");});
test("maschinenwerk -> maschinenwerk", function() {deepEqual( Stem("maschinenwerk"), "maschinenwerk");});
test("maschinenwesen -> maschinenwes", function() {deepEqual( Stem("maschinenwesen"), "maschinenwes");});
test("masculus -> masculus", function() {deepEqual( Stem("masculus"), "masculus");});
test("maske -> mask", function() {deepEqual( Stem("maske"), "mask");});
test("masken -> mask", function() {deepEqual( Stem("masken"), "mask");});
test("maskenfahrt -> maskenfahrt", function() {deepEqual( Stem("maskenfahrt"), "maskenfahrt");});
test("maskenzuges -> maskenzug", function() {deepEqual( Stem("maskenzuges"), "maskenzug");});
test("maskerade -> maskerad", function() {deepEqual( Stem("maskerade"), "maskerad");});
test("maskiert -> maskiert", function() {deepEqual( Stem("maskiert"), "maskiert");});
test("mass -> mass", function() {deepEqual( Stem("mass"), "mass");});
test("maß -> mass", function() {deepEqual( Stem("maß"), "mass");});
test("masse -> mass", function() {deepEqual( Stem("masse"), "mass");});
test("maße -> mass", function() {deepEqual( Stem("maße"), "mass");});
test("massen -> mass", function() {deepEqual( Stem("massen"), "mass");});
test("maßen -> mass", function() {deepEqual( Stem("maßen"), "mass");});
test("massenhaft -> massenhaft", function() {deepEqual( Stem("massenhaft"), "massenhaft");});
test("masses -> mass", function() {deepEqual( Stem("masses"), "mass");});
test("maßes -> mass", function() {deepEqual( Stem("maßes"), "mass");});
test("massgabe -> massgab", function() {deepEqual( Stem("massgabe"), "massgab");});
test("maßgabe -> massgab", function() {deepEqual( Stem("maßgabe"), "massgab");});
test("massgebenden -> massgeb", function() {deepEqual( Stem("massgebenden"), "massgeb");});
test("maßgebenden -> massgeb", function() {deepEqual( Stem("maßgebenden"), "massgeb");});
test("mässig -> massig", function() {deepEqual( Stem("mässig"), "massig");});
test("mässige -> massig", function() {deepEqual( Stem("mässige"), "massig");});
test("mässigen -> massig", function() {deepEqual( Stem("mässigen"), "massig");});
test("mässiger -> massig", function() {deepEqual( Stem("mässiger"), "massig");});
test("mäßiger -> massig", function() {deepEqual( Stem("mäßiger"), "massig");});
test("mässigkeit -> massig", function() {deepEqual( Stem("mässigkeit"), "massig");});
test("mässigt -> massigt", function() {deepEqual( Stem("mässigt"), "massigt");});
test("mäßigt -> massigt", function() {deepEqual( Stem("mäßigt"), "massigt");});
test("mässigte -> massigt", function() {deepEqual( Stem("mässigte"), "massigt");});
test("mässigung -> massig", function() {deepEqual( Stem("mässigung"), "massig");});
test("mäßigung -> massig", function() {deepEqual( Stem("mäßigung"), "massig");});
test("massiv -> massiv", function() {deepEqual( Stem("massiv"), "massiv");});
test("massive -> massiv", function() {deepEqual( Stem("massive"), "massiv");});
test("massiven -> massiv", function() {deepEqual( Stem("massiven"), "massiv");});
test("massiver -> massiv", function() {deepEqual( Stem("massiver"), "massiv");});
test("maßlos -> masslos", function() {deepEqual( Stem("maßlos"), "masslos");});
test("massnahmen -> massnahm", function() {deepEqual( Stem("massnahmen"), "massnahm");});
test("massnehmen -> massnehm", function() {deepEqual( Stem("massnehmen"), "massnehm");});
test("massregeln -> massregeln", function() {deepEqual( Stem("massregeln"), "massregeln");});
test("massstab -> massstab", function() {deepEqual( Stem("massstab"), "massstab");});
test("maßstab -> massstab", function() {deepEqual( Stem("maßstab"), "massstab");});
test("massstabe -> massstab", function() {deepEqual( Stem("massstabe"), "massstab");});
test("maßstabe -> massstab", function() {deepEqual( Stem("maßstabe"), "massstab");});
test("maßstäbe -> massstab", function() {deepEqual( Stem("maßstäbe"), "massstab");});
test("masste -> masst", function() {deepEqual( Stem("masste"), "masst");});
test("maßte -> masst", function() {deepEqual( Stem("maßte"), "masst");});
test("mastbaum -> mastbaum", function() {deepEqual( Stem("mastbaum"), "mastbaum");});
test("masterminded -> masterminded", function() {deepEqual( Stem("masterminded"), "masterminded");});
test("mästung -> mastung", function() {deepEqual( Stem("mästung"), "mastung");});
test("mastvieh -> mastvieh", function() {deepEqual( Stem("mastvieh"), "mastvieh");});
test("material -> material", function() {deepEqual( Stem("material"), "material");});
test("materiale -> material", function() {deepEqual( Stem("materiale"), "material");});
test("materialen -> material", function() {deepEqual( Stem("materialen"), "material");});
test("materialer -> material", function() {deepEqual( Stem("materialer"), "material");});
test("materie -> materi", function() {deepEqual( Stem("materie"), "materi");});
test("materiell -> materiell", function() {deepEqual( Stem("materiell"), "materiell");});
test("materielle -> materiell", function() {deepEqual( Stem("materielle"), "materiell");});
test("materiellen -> materiell", function() {deepEqual( Stem("materiellen"), "materiell");});
test("materieller -> materiell", function() {deepEqual( Stem("materieller"), "materiell");});
test("materielles -> materiell", function() {deepEqual( Stem("materielles"), "materiell");});
test("mathäus -> mathaus", function() {deepEqual( Stem("mathäus"), "mathaus");});
test("mathematik -> mathemat", function() {deepEqual( Stem("mathematik"), "mathemat");});
test("mathematisch -> mathemat", function() {deepEqual( Stem("mathematisch"), "mathemat");});
test("mathematische -> mathemat", function() {deepEqual( Stem("mathematische"), "mathemat");});
test("mathematischen -> mathemat", function() {deepEqual( Stem("mathematischen"), "mathemat");});
test("matrose -> matros", function() {deepEqual( Stem("matrose"), "matros");});
test("matt -> matt", function() {deepEqual( Stem("matt"), "matt");});
test("matten -> matt", function() {deepEqual( Stem("matten"), "matt");});
test("matth -> matth", function() {deepEqual( Stem("matth"), "matth");});
test("matthias -> matthias", function() {deepEqual( Stem("matthias"), "matthias");});
test("mattigkeit -> mattig", function() {deepEqual( Stem("mattigkeit"), "mattig");});
test("mauer -> mau", function() {deepEqual( Stem("mauer"), "mau");});
test("mauern -> mau", function() {deepEqual( Stem("mauern"), "mau");});
test("mauertür -> mauertur", function() {deepEqual( Stem("mauertür"), "mauertur");});
test("mauerwerk -> mauerwerk", function() {deepEqual( Stem("mauerwerk"), "mauerwerk");});
test("mauerwinkel -> mauerwinkel", function() {deepEqual( Stem("mauerwinkel"), "mauerwinkel");});
test("maul -> maul", function() {deepEqual( Stem("maul"), "maul");});
test("maulaffen -> maulaff", function() {deepEqual( Stem("maulaffen"), "maulaff");});
test("maulbeerbäume -> maulbeerbaum", function() {deepEqual( Stem("maulbeerbäume"), "maulbeerbaum");});
test("mäulchen -> maulch", function() {deepEqual( Stem("mäulchen"), "maulch");});
test("maule -> maul", function() {deepEqual( Stem("maule"), "maul");});
test("mäuler -> maul", function() {deepEqual( Stem("mäuler"), "maul");});
test("mäulern -> maul", function() {deepEqual( Stem("mäulern"), "maul");});
test("maulkorb -> maulkorb", function() {deepEqual( Stem("maulkorb"), "maulkorb");});
test("maultasche -> maultasch", function() {deepEqual( Stem("maultasche"), "maultasch");});
test("maulvoll -> maulvoll", function() {deepEqual( Stem("maulvoll"), "maulvoll");});
test("maulwurf -> maulwurf", function() {deepEqual( Stem("maulwurf"), "maulwurf");});
test("maurienne -> maurienn", function() {deepEqual( Stem("maurienne"), "maurienn");});
test("maus -> maus", function() {deepEqual( Stem("maus"), "maus");});
test("mäuschen -> mausch", function() {deepEqual( Stem("mäuschen"), "mausch");});
test("mäuschenstill -> mauschenstill", function() {deepEqual( Stem("mäuschenstill"), "mauschenstill");});
test("mäuse -> maus", function() {deepEqual( Stem("mäuse"), "maus");});
test("mäusefallen -> mausefall", function() {deepEqual( Stem("mäusefallen"), "mausefall");});
test("mausen -> maus", function() {deepEqual( Stem("mausen"), "maus");});
test("mäuslein -> mauslein", function() {deepEqual( Stem("mäuslein"), "mauslein");});
test("mauslöchern -> mausloch", function() {deepEqual( Stem("mauslöchern"), "mausloch");});
test("maxime -> maxim", function() {deepEqual( Stem("maxime"), "maxim");});
test("maximen -> maxim", function() {deepEqual( Stem("maximen"), "maxim");});
test("mechanisch -> mechan", function() {deepEqual( Stem("mechanisch"), "mechan");});
test("mechanismus -> mechanismus", function() {deepEqual( Stem("mechanismus"), "mechanismus");});
test("mechujael -> mechujael", function() {deepEqual( Stem("mechujael"), "mechujael");});
test("meckern -> meck", function() {deepEqual( Stem("meckern"), "meck");});
test("meckerndes -> meckernd", function() {deepEqual( Stem("meckerndes"), "meckernd");});
test("meckerte -> meckert", function() {deepEqual( Stem("meckerte"), "meckert");});
test("meckerten -> meckert", function() {deepEqual( Stem("meckerten"), "meckert");});
test("mecklenburg -> mecklenburg", function() {deepEqual( Stem("mecklenburg"), "mecklenburg");});
test("medaille -> medaill", function() {deepEqual( Stem("medaille"), "medaill");});
test("medaillon -> medaillon", function() {deepEqual( Stem("medaillon"), "medaillon");});
test("medien -> medi", function() {deepEqual( Stem("medien"), "medi");});
test("medikament -> medikament", function() {deepEqual( Stem("medikament"), "medikament");});
test("meditativen -> meditativ", function() {deepEqual( Stem("meditativen"), "meditativ");});
test("medizin -> medizin", function() {deepEqual( Stem("medizin"), "medizin");});
test("medizinisch -> medizin", function() {deepEqual( Stem("medizinisch"), "medizin");});
test("meer -> meer", function() {deepEqual( Stem("meer"), "meer");});
test("meerblauen -> meerblau", function() {deepEqual( Stem("meerblauen"), "meerblau");});
test("meere -> meer", function() {deepEqual( Stem("meere"), "meer");});
test("meeren -> meer", function() {deepEqual( Stem("meeren"), "meer");});
test("meeres -> meer", function() {deepEqual( Stem("meeres"), "meer");});
test("meeresgewächs -> meeresgewach", function() {deepEqual( Stem("meeresgewächs"), "meeresgewach");});
test("meerestiefen -> meerestief", function() {deepEqual( Stem("meerestiefen"), "meerestief");});
test("meergrünen -> meergrun", function() {deepEqual( Stem("meergrünen"), "meergrun");});
test("meerschiffe -> meerschiff", function() {deepEqual( Stem("meerschiffe"), "meerschiff");});
test("meerwasser -> meerwass", function() {deepEqual( Stem("meerwasser"), "meerwass");});
test("meerwunder -> meerwund", function() {deepEqual( Stem("meerwunder"), "meerwund");});
test("mehr -> mehr", function() {deepEqual( Stem("mehr"), "mehr");});
test("mehre -> mehr", function() {deepEqual( Stem("mehre"), "mehr");});
test("mehren -> mehr", function() {deepEqual( Stem("mehren"), "mehr");});
test("mehrenteils -> mehrenteil", function() {deepEqual( Stem("mehrenteils"), "mehrenteil");});
test("mehrer -> mehr", function() {deepEqual( Stem("mehrer"), "mehr");});
test("mehrere -> mehr", function() {deepEqual( Stem("mehrere"), "mehr");});
test("mehrerem -> mehr", function() {deepEqual( Stem("mehrerem"), "mehr");});
test("mehreren -> mehr", function() {deepEqual( Stem("mehreren"), "mehr");});
test("mehrerer -> mehr", function() {deepEqual( Stem("mehrerer"), "mehr");});
test("mehreres -> mehr", function() {deepEqual( Stem("mehreres"), "mehr");});
test("mehrertrag -> mehrertrag", function() {deepEqual( Stem("mehrertrag"), "mehrertrag");});
test("mehresten -> mehr", function() {deepEqual( Stem("mehresten"), "mehr");});
test("mehret -> mehret", function() {deepEqual( Stem("mehret"), "mehret");});
test("mehrfach -> mehrfach", function() {deepEqual( Stem("mehrfach"), "mehrfach");});
test("mehrfache -> mehrfach", function() {deepEqual( Stem("mehrfache"), "mehrfach");});
test("mehrfachen -> mehrfach", function() {deepEqual( Stem("mehrfachen"), "mehrfach");});
test("mehrheit -> mehrheit", function() {deepEqual( Stem("mehrheit"), "mehrheit");});
test("mehrheitsfähig -> mehrheitsfah", function() {deepEqual( Stem("mehrheitsfähig"), "mehrheitsfah");});
test("mehrjährige -> mehrjahr", function() {deepEqual( Stem("mehrjährige"), "mehrjahr");});
test("mehrmals -> mehrmal", function() {deepEqual( Stem("mehrmals"), "mehrmal");});
test("mehrstimmiges -> mehrstimm", function() {deepEqual( Stem("mehrstimmiges"), "mehrstimm");});
test("mehrte -> mehrt", function() {deepEqual( Stem("mehrte"), "mehrt");});
test("mehrten -> mehrt", function() {deepEqual( Stem("mehrten"), "mehrt");});
test("mehrzahl -> mehrzahl", function() {deepEqual( Stem("mehrzahl"), "mehrzahl");});
test("mei -> mei", function() {deepEqual( Stem("mei"), "mei");});
test("meiden -> meid", function() {deepEqual( Stem("meiden"), "meid");});
test("meilen -> meil", function() {deepEqual( Stem("meilen"), "meil");});
test("meilenstein -> meilenstein", function() {deepEqual( Stem("meilenstein"), "meilenstein");});
test("meilensteine -> meilenstein", function() {deepEqual( Stem("meilensteine"), "meilenstein");});
test("mein -> mein", function() {deepEqual( Stem("mein"), "mein");});
test("meine -> mein", function() {deepEqual( Stem("meine"), "mein");});
test("meineidbauer -> meineidbau", function() {deepEqual( Stem("meineidbauer"), "meineidbau");});
test("meineidiger -> meineid", function() {deepEqual( Stem("meineidiger"), "meineid");});
test("meinem -> mein", function() {deepEqual( Stem("meinem"), "mein");});
test("meinen -> mein", function() {deepEqual( Stem("meinen"), "mein");});
test("meiner -> mein", function() {deepEqual( Stem("meiner"), "mein");});
test("meines -> mein", function() {deepEqual( Stem("meines"), "mein");});
test("meinetwegen -> meinetweg", function() {deepEqual( Stem("meinetwegen"), "meinetweg");});
test("meinetwillen -> meinetwill", function() {deepEqual( Stem("meinetwillen"), "meinetwill");});
test("meinige -> meinig", function() {deepEqual( Stem("meinige"), "meinig");});
test("meinigen -> meinig", function() {deepEqual( Stem("meinigen"), "meinig");});
test("meins -> mein", function() {deepEqual( Stem("meins"), "mein");});
test("meinst -> mein", function() {deepEqual( Stem("meinst"), "mein");});
test("meint -> meint", function() {deepEqual( Stem("meint"), "meint");});
test("meinte -> meint", function() {deepEqual( Stem("meinte"), "meint");});
test("meinten -> meint", function() {deepEqual( Stem("meinten"), "meint");});
test("meinung -> meinung", function() {deepEqual( Stem("meinung"), "meinung");});
test("meinungen -> meinung", function() {deepEqual( Stem("meinungen"), "meinung");});
test("meisen -> meis", function() {deepEqual( Stem("meisen"), "meis");});
test("meisseln -> meisseln", function() {deepEqual( Stem("meisseln"), "meisseln");});
test("meist -> meist", function() {deepEqual( Stem("meist"), "meist");});
test("meistbietenden -> meistbiet", function() {deepEqual( Stem("meistbietenden"), "meistbiet");});
test("meiste -> meist", function() {deepEqual( Stem("meiste"), "meist");});
test("meisten -> meist", function() {deepEqual( Stem("meisten"), "meist");});
test("meistens -> meist", function() {deepEqual( Stem("meistens"), "meist");});
test("meistenteils -> meistenteil", function() {deepEqual( Stem("meistenteils"), "meistenteil");});
test("meister -> meist", function() {deepEqual( Stem("meister"), "meist");});
test("meisterhaft -> meisterhaft", function() {deepEqual( Stem("meisterhaft"), "meisterhaft");});
test("meisterhand -> meisterhand", function() {deepEqual( Stem("meisterhand"), "meisterhand");});
test("meisterin -> meisterin", function() {deepEqual( Stem("meisterin"), "meisterin");});
test("meisterinnen -> meisterinn", function() {deepEqual( Stem("meisterinnen"), "meisterinn");});
test("meisterlich -> meist", function() {deepEqual( Stem("meisterlich"), "meist");});
test("meistern -> meist", function() {deepEqual( Stem("meistern"), "meist");});
test("meisters -> meist", function() {deepEqual( Stem("meisters"), "meist");});
test("meisterschaft -> meisterschaft", function() {deepEqual( Stem("meisterschaft"), "meisterschaft");});
test("meitli -> meitli", function() {deepEqual( Stem("meitli"), "meitli");});
test("melancholisch -> melanchol", function() {deepEqual( Stem("melancholisch"), "melanchol");});
test("melancholische -> melanchol", function() {deepEqual( Stem("melancholische"), "melanchol");});
test("melancholischen -> melanchol", function() {deepEqual( Stem("melancholischen"), "melanchol");});
test("melcher -> melch", function() {deepEqual( Stem("melcher"), "melch");});
test("melchior -> melchior", function() {deepEqual( Stem("melchior"), "melchior");});
test("melde -> meld", function() {deepEqual( Stem("melde"), "meld");});
test("melden -> meld", function() {deepEqual( Stem("melden"), "meld");});
test("meldet -> meldet", function() {deepEqual( Stem("meldet"), "meldet");});
test("meldete -> meldet", function() {deepEqual( Stem("meldete"), "meldet");});
test("meldung -> meldung", function() {deepEqual( Stem("meldung"), "meldung");});
test("melodie -> melodi", function() {deepEqual( Stem("melodie"), "melodi");});
test("melzergrunde -> melzergrund", function() {deepEqual( Stem("melzergrunde"), "melzergrund");});
test("memorandum -> memorandum", function() {deepEqual( Stem("memorandum"), "memorandum");});
test("memorierungen -> memorier", function() {deepEqual( Stem("memorierungen"), "memorier");});
test("menasse -> menass", function() {deepEqual( Stem("menasse"), "menass");});
test("menge -> meng", function() {deepEqual( Stem("menge"), "meng");});
test("mengen -> meng", function() {deepEqual( Stem("mengen"), "meng");});
test("meninges -> mening", function() {deepEqual( Stem("meninges"), "mening");});
test("mensch -> mensch", function() {deepEqual( Stem("mensch"), "mensch");});
test("menschen -> mensch", function() {deepEqual( Stem("menschen"), "mensch");});
test("menschenähnliches -> menschenahn", function() {deepEqual( Stem("menschenähnliches"), "menschenahn");});
test("menschenähnlichkeit -> menschenahn", function() {deepEqual( Stem("menschenähnlichkeit"), "menschenahn");});
test("menschenalter -> menschenalt", function() {deepEqual( Stem("menschenalter"), "menschenalt");});
test("menschenauge -> menschenaug", function() {deepEqual( Stem("menschenauge"), "menschenaug");});
test("menschenfeindlich -> menschenfeind", function() {deepEqual( Stem("menschenfeindlich"), "menschenfeind");});
test("menschenfresser -> menschenfress", function() {deepEqual( Stem("menschenfresser"), "menschenfress");});
test("menschenführung -> menschenfuhr", function() {deepEqual( Stem("menschenführung"), "menschenfuhr");});
test("menschengeistes -> menschengeist", function() {deepEqual( Stem("menschengeistes"), "menschengeist");});
test("menschengeschlecht -> menschengeschlecht", function() {deepEqual( Stem("menschengeschlecht"), "menschengeschlecht");});
test("menschengeschlechte -> menschengeschlecht", function() {deepEqual( Stem("menschengeschlechte"), "menschengeschlecht");});
test("menschengeschlechts -> menschengeschlecht", function() {deepEqual( Stem("menschengeschlechts"), "menschengeschlecht");});
test("menschengesichter -> menschengesicht", function() {deepEqual( Stem("menschengesichter"), "menschengesicht");});
test("menschenhaut -> menschenhaut", function() {deepEqual( Stem("menschenhaut"), "menschenhaut");});
test("menschenherde -> menschenherd", function() {deepEqual( Stem("menschenherde"), "menschenherd");});
test("menschenkenntnis -> menschenkenntnis", function() {deepEqual( Stem("menschenkenntnis"), "menschenkenntnis");});
test("menschenkind -> menschenkind", function() {deepEqual( Stem("menschenkind"), "menschenkind");});
test("menschenleben -> menschenleb", function() {deepEqual( Stem("menschenleben"), "menschenleb");});
test("menschenleeren -> menschenle", function() {deepEqual( Stem("menschenleeren"), "menschenle");});
test("menschenliebe -> menschenlieb", function() {deepEqual( Stem("menschenliebe"), "menschenlieb");});
test("menschenmenge -> menschenmeng", function() {deepEqual( Stem("menschenmenge"), "menschenmeng");});
test("menschenmörder -> menschenmord", function() {deepEqual( Stem("menschenmörder"), "menschenmord");});
test("menschensamen -> menschensam", function() {deepEqual( Stem("menschensamen"), "menschensam");});
test("menschenseele -> menschenseel", function() {deepEqual( Stem("menschenseele"), "menschenseel");});
test("menschensohn -> menschensohn", function() {deepEqual( Stem("menschensohn"), "menschensohn");});
test("menschensöhne -> menschensohn", function() {deepEqual( Stem("menschensöhne"), "menschensohn");});
test("menschenvernunft -> menschenvernunft", function() {deepEqual( Stem("menschenvernunft"), "menschenvernunft");});
test("menschenverstand -> menschenverstand", function() {deepEqual( Stem("menschenverstand"), "menschenverstand");});
test("menschenverstande -> menschenverstand", function() {deepEqual( Stem("menschenverstande"), "menschenverstand");});
test("menschenverstandes -> menschenverstand", function() {deepEqual( Stem("menschenverstandes"), "menschenverstand");});
test("menschenwohnungen -> menschenwohn", function() {deepEqual( Stem("menschenwohnungen"), "menschenwohn");});
test("menschgeschlecht -> menschgeschlecht", function() {deepEqual( Stem("menschgeschlecht"), "menschgeschlecht");});
test("menschheit -> menschheit", function() {deepEqual( Stem("menschheit"), "menschheit");});
test("menschlein -> menschlein", function() {deepEqual( Stem("menschlein"), "menschlein");});
test("menschlich -> menschlich", function() {deepEqual( Stem("menschlich"), "menschlich");});
test("menschliche -> menschlich", function() {deepEqual( Stem("menschliche"), "menschlich");});
test("menschlichen -> menschlich", function() {deepEqual( Stem("menschlichen"), "menschlich");});
test("menschlicher -> menschlich", function() {deepEqual( Stem("menschlicher"), "menschlich");});
test("menschliches -> menschlich", function() {deepEqual( Stem("menschliches"), "menschlich");});
test("menschlichkeit -> menschlich", function() {deepEqual( Stem("menschlichkeit"), "menschlich");});
test("menschlichkeiten -> menschlich", function() {deepEqual( Stem("menschlichkeiten"), "menschlich");});
test("menseh -> menseh", function() {deepEqual( Stem("menseh"), "menseh");});
test("mentale -> mental", function() {deepEqual( Stem("mentale"), "mental");});
test("mentalitat -> mentalitat", function() {deepEqual( Stem("mentalitat"), "mentalitat");});
test("menü -> menu", function() {deepEqual( Stem("menü"), "menu");});
test("mer -> mer", function() {deepEqual( Stem("mer"), "mer");});
test("merari -> merari", function() {deepEqual( Stem("merari"), "merari");});
test("meraris -> meraris", function() {deepEqual( Stem("meraris"), "meraris");});
test("merk -> merk", function() {deepEqual( Stem("merk"), "merk");});
test("merke -> merk", function() {deepEqual( Stem("merke"), "merk");});
test("merken -> merk", function() {deepEqual( Stem("merken"), "merk");});
test("merklich -> merklich", function() {deepEqual( Stem("merklich"), "merklich");});
test("merklichem -> merklich", function() {deepEqual( Stem("merklichem"), "merklich");});
test("merkmal -> merkmal", function() {deepEqual( Stem("merkmal"), "merkmal");});
test("merkmale -> merkmal", function() {deepEqual( Stem("merkmale"), "merkmal");});
test("merkt -> merkt", function() {deepEqual( Stem("merkt"), "merkt");});
test("merkte -> merkt", function() {deepEqual( Stem("merkte"), "merkt");});
test("merkten -> merkt", function() {deepEqual( Stem("merkten"), "merkt");});
test("merkwürdig -> merkwurd", function() {deepEqual( Stem("merkwürdig"), "merkwurd");});
test("merkwürdige -> merkwurd", function() {deepEqual( Stem("merkwürdige"), "merkwurd");});
test("merkwürdigen -> merkwurd", function() {deepEqual( Stem("merkwürdigen"), "merkwurd");});
test("merkwürdiger -> merkwurd", function() {deepEqual( Stem("merkwürdiger"), "merkwurd");});
test("merkwürdigerweise -> merkwurdigerweis", function() {deepEqual( Stem("merkwürdigerweise"), "merkwurdigerweis");});
test("merkwürdiges -> merkwurd", function() {deepEqual( Stem("merkwürdiges"), "merkwurd");});
test("merkwürdigkeit -> merkwurd", function() {deepEqual( Stem("merkwürdigkeit"), "merkwurd");});
test("merkwürdigkeiten -> merkwurd", function() {deepEqual( Stem("merkwürdigkeiten"), "merkwurd");});
test("merkwürdigste -> merkwurd", function() {deepEqual( Stem("merkwürdigste"), "merkwurd");});
test("merkwürdigsten -> merkwurd", function() {deepEqual( Stem("merkwürdigsten"), "merkwurd");});
test("meschech -> meschech", function() {deepEqual( Stem("meschech"), "meschech");});
test("mesmer -> mesm", function() {deepEqual( Stem("mesmer"), "mesm");});
test("mess -> mess", function() {deepEqual( Stem("mess"), "mess");});
test("messe -> mess", function() {deepEqual( Stem("messe"), "mess");});
test("messen -> mess", function() {deepEqual( Stem("messen"), "mess");});
test("messer -> mess", function() {deepEqual( Stem("messer"), "mess");});
test("messias -> messias", function() {deepEqual( Stem("messias"), "messias");});
test("messiaschristlich -> messiaschrist", function() {deepEqual( Stem("messiaschristlich"), "messiaschrist");});
test("messiasfrage -> messiasfrag", function() {deepEqual( Stem("messiasfrage"), "messiasfrag");});
test("messingdrahtes -> messingdraht", function() {deepEqual( Stem("messingdrahtes"), "messingdraht");});
test("messmer -> messm", function() {deepEqual( Stem("messmer"), "messm");});
test("messrohr -> messrohr", function() {deepEqual( Stem("messrohr"), "messrohr");});
test("meßrohr -> messrohr", function() {deepEqual( Stem("meßrohr"), "messrohr");});
test("messung -> messung", function() {deepEqual( Stem("messung"), "messung");});
test("metall -> metall", function() {deepEqual( Stem("metall"), "metall");});
test("metalle -> metall", function() {deepEqual( Stem("metalle"), "metall");});
test("metaphysik -> metaphys", function() {deepEqual( Stem("metaphysik"), "metaphys");});
test("metaphysische -> metaphys", function() {deepEqual( Stem("metaphysische"), "metaphys");});
test("metaphysischen -> metaphys", function() {deepEqual( Stem("metaphysischen"), "metaphys");});
test("meter -> met", function() {deepEqual( Stem("meter"), "met");});
test("meterlang -> meterlang", function() {deepEqual( Stem("meterlang"), "meterlang");});
test("meterlange -> meterlang", function() {deepEqual( Stem("meterlange"), "meterlang");});
test("methode -> method", function() {deepEqual( Stem("methode"), "method");});
test("methoden -> method", function() {deepEqual( Stem("methoden"), "method");});
test("methodenlehre -> methodenlehr", function() {deepEqual( Stem("methodenlehre"), "methodenlehr");});
test("methodisch -> method", function() {deepEqual( Stem("methodisch"), "method");});
test("methodische -> method", function() {deepEqual( Stem("methodische"), "method");});
test("methodischen -> method", function() {deepEqual( Stem("methodischen"), "method");});
test("methuschael -> methuschael", function() {deepEqual( Stem("methuschael"), "methuschael");});
test("methuschelach -> methuschelach", function() {deepEqual( Stem("methuschelach"), "methuschelach");});
test("methuschelachs -> methuschelach", function() {deepEqual( Stem("methuschelachs"), "methuschelach");});
test("metier -> meti", function() {deepEqual( Stem("metier"), "meti");});
test("metropole -> metropol", function() {deepEqual( Stem("metropole"), "metropol");});
test("metropolitane -> metropolitan", function() {deepEqual( Stem("metropolitane"), "metropolitan");});
test("metzger -> metzg", function() {deepEqual( Stem("metzger"), "metzg");});
test("metzgerwägelchen -> metzgerwagelch", function() {deepEqual( Stem("metzgerwägelchen"), "metzgerwagelch");});
test("meuchelmörder -> meuchelmord", function() {deepEqual( Stem("meuchelmörder"), "meuchelmord");});
test("meusal -> meusal", function() {deepEqual( Stem("meusal"), "meusal");});
test("mfs -> mfs", function() {deepEqual( Stem("mfs"), "mfs");});
test("mi -> mi", function() {deepEqual( Stem("mi"), "mi");});
test("miau -> miau", function() {deepEqual( Stem("miau"), "miau");});
test("miauend -> miauend", function() {deepEqual( Stem("miauend"), "miauend");});
test("mich -> mich", function() {deepEqual( Stem("mich"), "mich");});
test("micha -> micha", function() {deepEqual( Stem("micha"), "micha");});
test("microsoftboss -> microsoftboss", function() {deepEqual( Stem("microsoftboss"), "microsoftboss");});
test("midian -> midian", function() {deepEqual( Stem("midian"), "midian");});
test("midianiter -> midianit", function() {deepEqual( Stem("midianiter"), "midianit");});
test("midians -> midian", function() {deepEqual( Stem("midians"), "midian");});
test("mieder -> mied", function() {deepEqual( Stem("mieder"), "mied");});
test("mielke -> mielk", function() {deepEqual( Stem("mielke"), "mielk");});
test("miene -> mien", function() {deepEqual( Stem("miene"), "mien");});
test("mienen -> mien", function() {deepEqual( Stem("mienen"), "mien");});
test("mierte -> miert", function() {deepEqual( Stem("mierte"), "miert");});
test("miesen -> mies", function() {deepEqual( Stem("miesen"), "mies");});
test("miete -> miet", function() {deepEqual( Stem("miete"), "miet");});
test("mieter -> miet", function() {deepEqual( Stem("mieter"), "miet");});
test("mietern -> miet", function() {deepEqual( Stem("mietern"), "miet");});
test("mietete -> mietet", function() {deepEqual( Stem("mietete"), "mietet");});
test("miethäuser -> miethaus", function() {deepEqual( Stem("miethäuser"), "miethaus");});
test("mietsmann -> mietsmann", function() {deepEqual( Stem("mietsmann"), "mietsmann");});
test("migros -> migros", function() {deepEqual( Stem("migros"), "migros");});
test("mikrofon -> mikrofon", function() {deepEqual( Stem("mikrofon"), "mikrofon");});
test("mikrofons -> mikrofon", function() {deepEqual( Stem("mikrofons"), "mikrofon");});
test("milch -> milch", function() {deepEqual( Stem("milch"), "milch");});
test("milchbäume -> milchbaum", function() {deepEqual( Stem("milchbäume"), "milchbaum");});
test("milchgesichtern -> milchgesicht", function() {deepEqual( Stem("milchgesichtern"), "milchgesicht");});
test("milchkannen -> milchkann", function() {deepEqual( Stem("milchkannen"), "milchkann");});
test("milchmachens -> milchmach", function() {deepEqual( Stem("milchmachens"), "milchmach");});
test("milchstrasse -> milchstrass", function() {deepEqual( Stem("milchstrasse"), "milchstrass");});
test("milchstrassen -> milchstrass", function() {deepEqual( Stem("milchstrassen"), "milchstrass");});
test("milchstrassenhonig -> milchstrassenhon", function() {deepEqual( Stem("milchstrassenhonig"), "milchstrassenhon");});
test("milchstrassenmann -> milchstrassenmann", function() {deepEqual( Stem("milchstrassenmann"), "milchstrassenmann");});
test("milchstrassenmannes -> milchstrassenmann", function() {deepEqual( Stem("milchstrassenmannes"), "milchstrassenmann");});
test("milchstrassenschlagsahne -> milchstrassenschlagsahn", function() {deepEqual( Stem("milchstrassenschlagsahne"), "milchstrassenschlagsahn");});
test("milchtöpfe -> milchtopf", function() {deepEqual( Stem("milchtöpfe"), "milchtopf");});
test("milde -> mild", function() {deepEqual( Stem("milde"), "mild");});
test("mildem -> mild", function() {deepEqual( Stem("mildem"), "mild");});
test("milden -> mild", function() {deepEqual( Stem("milden"), "mild");});
test("milder -> mild", function() {deepEqual( Stem("milder"), "mild");});
test("milderen -> mild", function() {deepEqual( Stem("milderen"), "mild");});
test("milderes -> mild", function() {deepEqual( Stem("milderes"), "mild");});
test("mildert -> mildert", function() {deepEqual( Stem("mildert"), "mildert");});
test("mildes -> mild", function() {deepEqual( Stem("mildes"), "mild");});
test("mildesten -> mild", function() {deepEqual( Stem("mildesten"), "mild");});
test("militär -> militar", function() {deepEqual( Stem("militär"), "militar");});
test("militärdienst -> militardien", function() {deepEqual( Stem("militärdienst"), "militardien");});
test("militärgelände -> militargeland", function() {deepEqual( Stem("militärgelände"), "militargeland");});
test("militärhistoriker -> militarhistor", function() {deepEqual( Stem("militärhistoriker"), "militarhistor");});
test("militärisch -> militar", function() {deepEqual( Stem("militärisch"), "militar");});
test("militärische -> militar", function() {deepEqual( Stem("militärische"), "militar");});
test("militärischer -> militar", function() {deepEqual( Stem("militärischer"), "militar");});
test("militärperson -> militarperson", function() {deepEqual( Stem("militärperson"), "militarperson");});
test("militärs -> militar", function() {deepEqual( Stem("militärs"), "militar");});
test("militärzeit -> militarzeit", function() {deepEqual( Stem("militärzeit"), "militarzeit");});
test("milliarden -> milliard", function() {deepEqual( Stem("milliarden"), "milliard");});
test("million -> million", function() {deepEqual( Stem("million"), "million");});
test("millionär -> millionar", function() {deepEqual( Stem("millionär"), "millionar");});
test("millionärin -> millionarin", function() {deepEqual( Stem("millionärin"), "millionarin");});
test("millionen -> million", function() {deepEqual( Stem("millionen"), "million");});
test("mimische -> mimisch", function() {deepEqual( Stem("mimische"), "mimisch");});
test("mincha -> mincha", function() {deepEqual( Stem("mincha"), "mincha");});
test("minder -> mind", function() {deepEqual( Stem("minder"), "mind");});
test("mindere -> mind", function() {deepEqual( Stem("mindere"), "mind");});
test("minderheit -> mind", function() {deepEqual( Stem("minderheit"), "mind");});
test("minderheiten -> mind", function() {deepEqual( Stem("minderheiten"), "mind");});
test("minderheitensituation -> minderheitensituation", function() {deepEqual( Stem("minderheitensituation"), "minderheitensituation");});
test("minderjährige -> minderjahr", function() {deepEqual( Stem("minderjährige"), "minderjahr");});
test("mindern -> mind", function() {deepEqual( Stem("mindern"), "mind");});
test("minderte -> mindert", function() {deepEqual( Stem("minderte"), "mindert");});
test("minderwertigkeit -> minderwert", function() {deepEqual( Stem("minderwertigkeit"), "minderwert");});
test("mindeste -> mind", function() {deepEqual( Stem("mindeste"), "mind");});
test("mindesten -> mind", function() {deepEqual( Stem("mindesten"), "mind");});
test("mindestens -> mindest", function() {deepEqual( Stem("mindestens"), "mindest");});
test("minimum -> minimum", function() {deepEqual( Stem("minimum"), "minimum");});
test("ministerpräsident -> ministerprasident", function() {deepEqual( Stem("ministerpräsident"), "ministerprasident");});
test("ministerpräsidenten -> ministerprasident", function() {deepEqual( Stem("ministerpräsidenten"), "ministerprasident");});
test("minna -> minna", function() {deepEqual( Stem("minna"), "minna");});
test("minnespiel -> minnespiel", function() {deepEqual( Stem("minnespiel"), "minnespiel");});
test("minnig -> minnig", function() {deepEqual( Stem("minnig"), "minnig");});
test("minorität -> minoritat", function() {deepEqual( Stem("minorität"), "minoritat");});
test("minute -> minut", function() {deepEqual( Stem("minute"), "minut");});
test("minuten -> minut", function() {deepEqual( Stem("minuten"), "minut");});
test("minutenlang -> minutenlang", function() {deepEqual( Stem("minutenlang"), "minutenlang");});
test("minutenlangen -> minutenlang", function() {deepEqual( Stem("minutenlangen"), "minutenlang");});
test("minutenzeiger -> minutenzeig", function() {deepEqual( Stem("minutenzeiger"), "minutenzeig");});
test("mir -> mir", function() {deepEqual( Stem("mir"), "mir");});
test("mirakels -> mirakel", function() {deepEqual( Stem("mirakels"), "mirakel");});
test("mirl -> mirl", function() {deepEqual( Stem("mirl"), "mirl");});
test("mischael -> mischael", function() {deepEqual( Stem("mischael"), "mischael");});
test("mischen -> misch", function() {deepEqual( Stem("mischen"), "misch");});
test("mischt -> mischt", function() {deepEqual( Stem("mischt"), "mischt");});
test("mischte -> mischt", function() {deepEqual( Stem("mischte"), "mischt");});
test("mischten -> mischt", function() {deepEqual( Stem("mischten"), "mischt");});
test("mischung -> mischung", function() {deepEqual( Stem("mischung"), "mischung");});
test("miserabligs -> miserabl", function() {deepEqual( Stem("miserabligs"), "miserabl");});
test("miss -> miss", function() {deepEqual( Stem("miss"), "miss");});
test("miß -> miss", function() {deepEqual( Stem("miß"), "miss");});
test("missbrauch -> missbrauch", function() {deepEqual( Stem("missbrauch"), "missbrauch");});
test("mißbrauch -> missbrauch", function() {deepEqual( Stem("mißbrauch"), "missbrauch");});
test("missbräuche -> missbrauch", function() {deepEqual( Stem("missbräuche"), "missbrauch");});
test("mißbräuche -> missbrauch", function() {deepEqual( Stem("mißbräuche"), "missbrauch");});
test("missbrauchen -> missbrauch", function() {deepEqual( Stem("missbrauchen"), "missbrauch");});
test("mißbrauchen -> missbrauch", function() {deepEqual( Stem("mißbrauchen"), "missbrauch");});
test("missbrauchsdebatte -> missbrauchsdebatt", function() {deepEqual( Stem("missbrauchsdebatte"), "missbrauchsdebatt");});
test("missbrauchten -> missbraucht", function() {deepEqual( Stem("missbrauchten"), "missbraucht");});
test("mißbrauchten -> missbraucht", function() {deepEqual( Stem("mißbrauchten"), "missbraucht");});
test("missdeutung -> missdeut", function() {deepEqual( Stem("missdeutung"), "missdeut");});
test("missdeutungen -> missdeut", function() {deepEqual( Stem("missdeutungen"), "missdeut");});
test("missen -> miss", function() {deepEqual( Stem("missen"), "miss");});
test("missetat -> missetat", function() {deepEqual( Stem("missetat"), "missetat");});
test("missetaten -> missetat", function() {deepEqual( Stem("missetaten"), "missetat");});
test("missetäter -> missetat", function() {deepEqual( Stem("missetäter"), "missetat");});
test("mißfallen -> missfall", function() {deepEqual( Stem("mißfallen"), "missfall");});
test("missfällig -> missfall", function() {deepEqual( Stem("missfällig"), "missfall");});
test("mißfällig -> missfall", function() {deepEqual( Stem("mißfällig"), "missfall");});
test("missfiel -> missfiel", function() {deepEqual( Stem("missfiel"), "missfiel");});
test("missfielen -> missfiel", function() {deepEqual( Stem("missfielen"), "missfiel");});
test("missgeschick -> missgeschick", function() {deepEqual( Stem("missgeschick"), "missgeschick");});
test("missgestaltetes -> missgestaltet", function() {deepEqual( Stem("missgestaltetes"), "missgestaltet");});
test("mißgestaltetes -> missgestaltet", function() {deepEqual( Stem("mißgestaltetes"), "missgestaltet");});
test("mißglückte -> missgluckt", function() {deepEqual( Stem("mißglückte"), "missgluckt");});
test("missgriff -> missgriff", function() {deepEqual( Stem("missgriff"), "missgriff");});
test("missgunst -> missgun", function() {deepEqual( Stem("missgunst"), "missgun");});
test("misshandeln -> misshandeln", function() {deepEqual( Stem("misshandeln"), "misshandeln");});
test("misshandelt -> misshandelt", function() {deepEqual( Stem("misshandelt"), "misshandelt");});
test("mißhandelt -> misshandelt", function() {deepEqual( Stem("mißhandelt"), "misshandelt");});
test("misshandelte -> misshandelt", function() {deepEqual( Stem("misshandelte"), "misshandelt");});
test("misshandle -> misshandl", function() {deepEqual( Stem("misshandle"), "misshandl");});
test("misshandlung -> misshandl", function() {deepEqual( Stem("misshandlung"), "misshandl");});
test("mission -> mission", function() {deepEqual( Stem("mission"), "mission");});
test("missionarisch -> missionar", function() {deepEqual( Stem("missionarisch"), "missionar");});
test("missionieren -> missioni", function() {deepEqual( Stem("missionieren"), "missioni");});
test("missioniert -> missioniert", function() {deepEqual( Stem("missioniert"), "missioniert");});
test("missionsfeld -> missionsfeld", function() {deepEqual( Stem("missionsfeld"), "missionsfeld");});
test("missionsgesellschaft -> missionsgesellschaft", function() {deepEqual( Stem("missionsgesellschaft"), "missionsgesellschaft");});
test("missionswille -> missionswill", function() {deepEqual( Stem("missionswille"), "missionswill");});
test("misslang -> misslang", function() {deepEqual( Stem("misslang"), "misslang");});
test("misslich -> misslich", function() {deepEqual( Stem("misslich"), "misslich");});
test("missliebig -> misslieb", function() {deepEqual( Stem("missliebig"), "misslieb");});
test("misslungenen -> misslung", function() {deepEqual( Stem("misslungenen"), "misslung");});
test("missmanagement -> missmanagement", function() {deepEqual( Stem("missmanagement"), "missmanagement");});
test("missmutig -> missmut", function() {deepEqual( Stem("missmutig"), "missmut");});
test("misst -> misst", function() {deepEqual( Stem("misst"), "misst");});
test("mißt -> misst", function() {deepEqual( Stem("mißt"), "misst");});
test("misste -> misst", function() {deepEqual( Stem("misste"), "misst");});
test("misstrauen -> misstrau", function() {deepEqual( Stem("misstrauen"), "misstrau");});
test("misstrauisch -> misstrau", function() {deepEqual( Stem("misstrauisch"), "misstrau");});
test("mißtrauisch -> misstrau", function() {deepEqual( Stem("mißtrauisch"), "misstrau");});
test("misstrauischem -> misstrau", function() {deepEqual( Stem("misstrauischem"), "misstrau");});
test("misstrauischen -> misstrau", function() {deepEqual( Stem("misstrauischen"), "misstrau");});
test("mißtrauischer -> misstrau", function() {deepEqual( Stem("mißtrauischer"), "misstrau");});
test("misstrauten -> misstraut", function() {deepEqual( Stem("misstrauten"), "misstraut");});
test("missvergnügt -> missvergnugt", function() {deepEqual( Stem("missvergnügt"), "missvergnugt");});
test("missverstande -> missverstand", function() {deepEqual( Stem("missverstande"), "missverstand");});
test("missverstanden -> missverstand", function() {deepEqual( Stem("missverstanden"), "missverstand");});
test("mißverstanden -> missverstand", function() {deepEqual( Stem("mißverstanden"), "missverstand");});
test("missverständlich -> missverstand", function() {deepEqual( Stem("missverständlich"), "missverstand");});
test("mißverständlich -> missverstand", function() {deepEqual( Stem("mißverständlich"), "missverstand");});
test("missverständlichen -> missverstand", function() {deepEqual( Stem("missverständlichen"), "missverstand");});
test("mißverständlichen -> missverstand", function() {deepEqual( Stem("mißverständlichen"), "missverstand");});
test("missverständnis -> missverstandnis", function() {deepEqual( Stem("missverständnis"), "missverstandnis");});
test("mißverständnis -> missverstandnis", function() {deepEqual( Stem("mißverständnis"), "missverstandnis");});
test("missverständnisse -> missverstandnis", function() {deepEqual( Stem("missverständnisse"), "missverstandnis");});
test("mißverständnisse -> missverstandnis", function() {deepEqual( Stem("mißverständnisse"), "missverstandnis");});
test("missverstehen -> missversteh", function() {deepEqual( Stem("missverstehen"), "missversteh");});
test("mißverstehen -> missversteh", function() {deepEqual( Stem("mißverstehen"), "missversteh");});
test("missversteht -> missversteht", function() {deepEqual( Stem("missversteht"), "missversteht");});
test("misswachs -> misswach", function() {deepEqual( Stem("misswachs"), "misswach");});
test("mistbauer -> mistbau", function() {deepEqual( Stem("mistbauer"), "mistbau");});
test("mistviech -> mistviech", function() {deepEqual( Stem("mistviech"), "mistviech");});
test("mit -> mit", function() {deepEqual( Stem("mit"), "mit");});
test("mitanand -> mitanand", function() {deepEqual( Stem("mitanand"), "mitanand");});
test("mitarbeit -> mitarbeit", function() {deepEqual( Stem("mitarbeit"), "mitarbeit");});
test("mitarbeitenden -> mitarbeit", function() {deepEqual( Stem("mitarbeitenden"), "mitarbeit");});
test("mitarbeiter -> mitarbeit", function() {deepEqual( Stem("mitarbeiter"), "mitarbeit");});
test("mitarbeiterinnen -> mitarbeiterinn", function() {deepEqual( Stem("mitarbeiterinnen"), "mitarbeiterinn");});
test("mitarbeitern -> mitarbeit", function() {deepEqual( Stem("mitarbeitern"), "mitarbeit");});
test("mitass -> mitass", function() {deepEqual( Stem("mitass"), "mitass");});
test("mitaß -> mitass", function() {deepEqual( Stem("mitaß"), "mitass");});
test("mitbegreifen -> mitbegreif", function() {deepEqual( Stem("mitbegreifen"), "mitbegreif");});
test("mitbesitzer -> mitbesitz", function() {deepEqual( Stem("mitbesitzer"), "mitbesitz");});
test("mitbrachte -> mitbracht", function() {deepEqual( Stem("mitbrachte"), "mitbracht");});
test("mitbrächte -> mitbracht", function() {deepEqual( Stem("mitbrächte"), "mitbracht");});
test("mitbrachten -> mitbracht", function() {deepEqual( Stem("mitbrachten"), "mitbracht");});
test("mitbringen -> mitbring", function() {deepEqual( Stem("mitbringen"), "mitbring");});
test("mitbringt -> mitbringt", function() {deepEqual( Stem("mitbringt"), "mitbringt");});
test("mitbürger -> mitburg", function() {deepEqual( Stem("mitbürger"), "mitburg");});
test("mitbürgern -> mitburg", function() {deepEqual( Stem("mitbürgern"), "mitburg");});
test("miteinand -> miteinand", function() {deepEqual( Stem("miteinand"), "miteinand");});
test("miteinander -> miteinand", function() {deepEqual( Stem("miteinander"), "miteinand");});
test("miteinzubeziehen -> miteinzubezieh", function() {deepEqual( Stem("miteinzubeziehen"), "miteinzubezieh");});
test("miterleben -> miterleb", function() {deepEqual( Stem("miterleben"), "miterleb");});
test("mitfahren -> mitfahr", function() {deepEqual( Stem("mitfahren"), "mitfahr");});
test("mitfahrer -> mitfahr", function() {deepEqual( Stem("mitfahrer"), "mitfahr");});
test("mitführt -> mitfuhrt", function() {deepEqual( Stem("mitführt"), "mitfuhrt");});
test("mitführte -> mitfuhrt", function() {deepEqual( Stem("mitführte"), "mitfuhrt");});
test("mitg -> mitg", function() {deepEqual( Stem("mitg"), "mitg");});
test("mitgeben -> mitgeb", function() {deepEqual( Stem("mitgeben"), "mitgeb");});
test("mitgebracht -> mitgebracht", function() {deepEqual( Stem("mitgebracht"), "mitgebracht");});
test("mitgedachte -> mitgedacht", function() {deepEqual( Stem("mitgedachte"), "mitgedacht");});
test("mitgeführt -> mitgefuhrt", function() {deepEqual( Stem("mitgeführt"), "mitgefuhrt");});
test("mitgegeben -> mitgegeb", function() {deepEqual( Stem("mitgegeben"), "mitgegeb");});
test("mitgehen -> mitgeh", function() {deepEqual( Stem("mitgehen"), "mitgeh");});
test("mitgeht -> mitgeht", function() {deepEqual( Stem("mitgeht"), "mitgeht");});
test("mitgenommen -> mitgenomm", function() {deepEqual( Stem("mitgenommen"), "mitgenomm");});
test("mitgerechnet -> mitgerechnet", function() {deepEqual( Stem("mitgerechnet"), "mitgerechnet");});
test("mitgerissen -> mitgeriss", function() {deepEqual( Stem("mitgerissen"), "mitgeriss");});
test("mitgesandt -> mitgesandt", function() {deepEqual( Stem("mitgesandt"), "mitgesandt");});
test("mitgesellen -> mitgesell", function() {deepEqual( Stem("mitgesellen"), "mitgesell");});
test("mitgestaltet -> mitgestaltet", function() {deepEqual( Stem("mitgestaltet"), "mitgestaltet");});
test("mitgesungen -> mitges", function() {deepEqual( Stem("mitgesungen"), "mitges");});
test("mitgetan -> mitgetan", function() {deepEqual( Stem("mitgetan"), "mitgetan");});
test("mitgeteilt -> mitgeteilt", function() {deepEqual( Stem("mitgeteilt"), "mitgeteilt");});
test("mitgewirkt -> mitgewirkt", function() {deepEqual( Stem("mitgewirkt"), "mitgewirkt");});
test("mitgift -> mitgift", function() {deepEqual( Stem("mitgift"), "mitgift");});
test("mitginge -> mitging", function() {deepEqual( Stem("mitginge"), "mitging");});
test("mitglied -> mitglied", function() {deepEqual( Stem("mitglied"), "mitglied");});
test("mitglieder -> mitglied", function() {deepEqual( Stem("mitglieder"), "mitglied");});
test("mitgliedern -> mitglied", function() {deepEqual( Stem("mitgliedern"), "mitglied");});
test("mitgliederversammlung -> mitgliederversamml", function() {deepEqual( Stem("mitgliederversammlung"), "mitgliederversamml");});
test("mitgliedkirchen -> mitgliedkirch", function() {deepEqual( Stem("mitgliedkirchen"), "mitgliedkirch");});
test("mitgliedskirchen -> mitgliedskirch", function() {deepEqual( Stem("mitgliedskirchen"), "mitgliedskirch");});
test("mithalten -> mithalt", function() {deepEqual( Stem("mithalten"), "mithalt");});
test("mithelfen -> mithelf", function() {deepEqual( Stem("mithelfen"), "mithelf");});
test("mithilfe -> mithilf", function() {deepEqual( Stem("mithilfe"), "mithilf");});
test("mithin -> mithin", function() {deepEqual( Stem("mithin"), "mithin");});
test("mithumpeln -> mithumpeln", function() {deepEqual( Stem("mithumpeln"), "mithumpeln");});
test("mititium -> mititium", function() {deepEqual( Stem("mititium"), "mititium");});
test("mitkommen -> mitkomm", function() {deepEqual( Stem("mitkommen"), "mitkomm");});
test("mitkommt -> mitkommt", function() {deepEqual( Stem("mitkommt"), "mitkommt");});
test("mitlachen -> mitlach", function() {deepEqual( Stem("mitlachen"), "mitlach");});
test("mitleid -> mitleid", function() {deepEqual( Stem("mitleid"), "mitleid");});
test("mitleidenschaft -> mitleidenschaft", function() {deepEqual( Stem("mitleidenschaft"), "mitleidenschaft");});
test("mitleidig -> mitleid", function() {deepEqual( Stem("mitleidig"), "mitleid");});
test("mitleids -> mitleid", function() {deepEqual( Stem("mitleids"), "mitleid");});
test("mitmachte -> mitmacht", function() {deepEqual( Stem("mitmachte"), "mitmacht");});
test("mitmanaged -> mitmanaged", function() {deepEqual( Stem("mitmanaged"), "mitmanaged");});
test("mitmenschen -> mitmensch", function() {deepEqual( Stem("mitmenschen"), "mitmensch");});
test("mitn -> mitn", function() {deepEqual( Stem("mitn"), "mitn");});
test("mitnahm -> mitnahm", function() {deepEqual( Stem("mitnahm"), "mitnahm");});
test("mitnähme -> mitnahm", function() {deepEqual( Stem("mitnähme"), "mitnahm");});
test("mitnahmen -> mitnahm", function() {deepEqual( Stem("mitnahmen"), "mitnahm");});
test("mitnehmen -> mitnehm", function() {deepEqual( Stem("mitnehmen"), "mitnehm");});
test("mitnichten -> mitnicht", function() {deepEqual( Stem("mitnichten"), "mitnicht");});
test("mitschuldig -> mitschuld", function() {deepEqual( Stem("mitschuldig"), "mitschuld");});
test("mitschuldigen -> mitschuld", function() {deepEqual( Stem("mitschuldigen"), "mitschuld");});
test("mitspielen -> mitspiel", function() {deepEqual( Stem("mitspielen"), "mitspiel");});
test("mitstreiten -> mitstreit", function() {deepEqual( Stem("mitstreiten"), "mitstreit");});
test("mitstritten -> mitstritt", function() {deepEqual( Stem("mitstritten"), "mitstritt");});
test("mitt -> mitt", function() {deepEqual( Stem("mitt"), "mitt");});
test("mittag -> mittag", function() {deepEqual( Stem("mittag"), "mittag");});
test("mittagbrot -> mittagbrot", function() {deepEqual( Stem("mittagbrot"), "mittagbrot");});
test("mittagessen -> mittagess", function() {deepEqual( Stem("mittagessen"), "mittagess");});
test("mittags -> mittag", function() {deepEqual( Stem("mittags"), "mittag");});
test("mittagseite -> mittagseit", function() {deepEqual( Stem("mittagseite"), "mittagseit");});
test("mittagshelle -> mittagshell", function() {deepEqual( Stem("mittagshelle"), "mittagshell");});
test("mittagsmahl -> mittagsmahl", function() {deepEqual( Stem("mittagsmahl"), "mittagsmahl");});
test("mittagspausen -> mittagspaus", function() {deepEqual( Stem("mittagspausen"), "mittagspaus");});
test("mittagsschläfchen -> mittagsschlafch", function() {deepEqual( Stem("mittagsschläfchen"), "mittagsschlafch");});
test("mittagssonne -> mittagssonn", function() {deepEqual( Stem("mittagssonne"), "mittagssonn");});
test("mittagsstunde -> mittagsstund", function() {deepEqual( Stem("mittagsstunde"), "mittagsstund");});
test("mittagszeit -> mittagszeit", function() {deepEqual( Stem("mittagszeit"), "mittagszeit");});
test("mitte -> mitt", function() {deepEqual( Stem("mitte"), "mitt");});
test("mitteilen -> mitteil", function() {deepEqual( Stem("mitteilen"), "mitteil");});
test("mitteilsam -> mitteilsam", function() {deepEqual( Stem("mitteilsam"), "mitteilsam");});
test("mitteilsamer -> mitteilsam", function() {deepEqual( Stem("mitteilsamer"), "mitteilsam");});
test("mitteilt -> mitteilt", function() {deepEqual( Stem("mitteilt"), "mitteilt");});
test("mitteilte -> mitteilt", function() {deepEqual( Stem("mitteilte"), "mitteilt");});
test("mitteilten -> mitteilt", function() {deepEqual( Stem("mitteilten"), "mitteilt");});
test("mitteilung -> mitteil", function() {deepEqual( Stem("mitteilung"), "mitteil");});
test("mittel -> mittel", function() {deepEqual( Stem("mittel"), "mittel");});
test("mittelalter -> mittelalt", function() {deepEqual( Stem("mittelalter"), "mittelalt");});
test("mittelbar -> mittelbar", function() {deepEqual( Stem("mittelbar"), "mittelbar");});
test("mittelbare -> mittelbar", function() {deepEqual( Stem("mittelbare"), "mittelbar");});
test("mittelbaren -> mittelbar", function() {deepEqual( Stem("mittelbaren"), "mittelbar");});
test("mittelbarer -> mittelbar", function() {deepEqual( Stem("mittelbarer"), "mittelbar");});
test("mittelchen -> mittelch", function() {deepEqual( Stem("mittelchen"), "mittelch");});
test("mittelding -> mittelding", function() {deepEqual( Stem("mittelding"), "mittelding");});
test("mittelgrosses -> mittelgross", function() {deepEqual( Stem("mittelgrosses"), "mittelgross");});
test("mittelgroßes -> mittelgross", function() {deepEqual( Stem("mittelgroßes"), "mittelgross");});
test("mittelmässigkeit -> mittelmass", function() {deepEqual( Stem("mittelmässigkeit"), "mittelmass");});
test("mitteln -> mitteln", function() {deepEqual( Stem("mitteln"), "mitteln");});
test("mittelpunkt -> mittelpunkt", function() {deepEqual( Stem("mittelpunkt"), "mittelpunkt");});
test("mittelpunkte -> mittelpunkt", function() {deepEqual( Stem("mittelpunkte"), "mittelpunkt");});
test("mittels -> mittel", function() {deepEqual( Stem("mittels"), "mittel");});
test("mittelsmann -> mittelsmann", function() {deepEqual( Stem("mittelsmann"), "mittelsmann");});
test("mittelsperson -> mittelsperson", function() {deepEqual( Stem("mittelsperson"), "mittelsperson");});
test("mittelst -> mittel", function() {deepEqual( Stem("mittelst"), "mittel");});
test("mittelzustande -> mittelzustand", function() {deepEqual( Stem("mittelzustande"), "mittelzustand");});
test("mittelzwecke -> mittelzweck", function() {deepEqual( Stem("mittelzwecke"), "mittelzweck");});
test("mitten -> mitt", function() {deepEqual( Stem("mitten"), "mitt");});
test("mittendrin -> mittendrin", function() {deepEqual( Stem("mittendrin"), "mittendrin");});
test("mittenwald -> mittenwald", function() {deepEqual( Stem("mittenwald"), "mittenwald");});
test("mitternacht -> mitternacht", function() {deepEqual( Stem("mitternacht"), "mitternacht");});
test("mitternachts -> mitternacht", function() {deepEqual( Stem("mitternachts"), "mitternacht");});
test("mitternachtsessen -> mitternachtsess", function() {deepEqual( Stem("mitternachtsessen"), "mitternachtsess");});
test("mitternachtsgottesdiensten -> mitternachtsgottesdien", function() {deepEqual( Stem("mitternachtsgottesdiensten"), "mitternachtsgottesdien");});
test("mittler -> mittl", function() {deepEqual( Stem("mittler"), "mittl");});
test("mittleramt -> mittleramt", function() {deepEqual( Stem("mittleramt"), "mittleramt");});
test("mittlere -> mittl", function() {deepEqual( Stem("mittlere"), "mittl");});
test("mittleren -> mittl", function() {deepEqual( Stem("mittleren"), "mittl");});
test("mittlerer -> mittl", function() {deepEqual( Stem("mittlerer"), "mittl");});
test("mittleres -> mittl", function() {deepEqual( Stem("mittleres"), "mittl");});
test("mittlern -> mittl", function() {deepEqual( Stem("mittlern"), "mittl");});
test("mittlerweile -> mittlerweil", function() {deepEqual( Stem("mittlerweile"), "mittlerweil");});
test("mittun -> mittun", function() {deepEqual( Stem("mittun"), "mittun");});
test("mittwoch -> mittwoch", function() {deepEqual( Stem("mittwoch"), "mittwoch");});
test("mitverursacht -> mitverursacht", function() {deepEqual( Stem("mitverursacht"), "mitverursacht");});
test("mitwandern -> mitwand", function() {deepEqual( Stem("mitwandern"), "mitwand");});
test("mitwirken -> mitwirk", function() {deepEqual( Stem("mitwirken"), "mitwirk");});
test("mitwirkung -> mitwirk", function() {deepEqual( Stem("mitwirkung"), "mitwirk");});
test("mitzubringen -> mitzubring", function() {deepEqual( Stem("mitzubringen"), "mitzubring");});
test("mitzufahren -> mitzufahr", function() {deepEqual( Stem("mitzufahren"), "mitzufahr");});
test("mitzugehen -> mitzugeh", function() {deepEqual( Stem("mitzugehen"), "mitzugeh");});
test("mitzuhelfen -> mitzuhelf", function() {deepEqual( Stem("mitzuhelfen"), "mitzuhelf");});
test("mitzumachen -> mitzumach", function() {deepEqual( Stem("mitzumachen"), "mitzumach");});
test("mitzunehmen -> mitzunehm", function() {deepEqual( Stem("mitzunehmen"), "mitzunehm");});
test("mitzuteilen -> mitzuteil", function() {deepEqual( Stem("mitzuteilen"), "mitzuteil");});
test("mitzuzählen -> mitzuzahl", function() {deepEqual( Stem("mitzuzählen"), "mitzuzahl");});
test("mitzwanzigerin -> mitzwanzigerin", function() {deepEqual( Stem("mitzwanzigerin"), "mitzwanzigerin");});
test("mixer -> mix", function() {deepEqual( Stem("mixer"), "mix");});
test("mo -> mo", function() {deepEqual( Stem("mo"), "mo");});
test("moab -> moab", function() {deepEqual( Stem("moab"), "moab");});
test("moabiter -> moabit", function() {deepEqual( Stem("moabiter"), "moabit");});
test("moabs -> moab", function() {deepEqual( Stem("moabs"), "moab");});
test("möbel -> mobel", function() {deepEqual( Stem("möbel"), "mobel");});
test("möbeln -> mobeln", function() {deepEqual( Stem("möbeln"), "mobeln");});
test("möbelpacker -> mobelpack", function() {deepEqual( Stem("möbelpacker"), "mobelpack");});
test("möbelstück -> mobelstuck", function() {deepEqual( Stem("möbelstück"), "mobelstuck");});
test("mobile -> mobil", function() {deepEqual( Stem("mobile"), "mobil");});
test("mobilisieren -> mobilisi", function() {deepEqual( Stem("mobilisieren"), "mobilisi");});
test("möcht -> mocht", function() {deepEqual( Stem("möcht"), "mocht");});
test("mochte -> mocht", function() {deepEqual( Stem("mochte"), "mocht");});
test("möchte -> mocht", function() {deepEqual( Stem("möchte"), "mocht");});
test("mochten -> mocht", function() {deepEqual( Stem("mochten"), "mocht");});
test("möchten -> mocht", function() {deepEqual( Stem("möchten"), "mocht");});
test("möchtest -> mocht", function() {deepEqual( Stem("möchtest"), "mocht");});
test("möchtet -> mochtet", function() {deepEqual( Stem("möchtet"), "mochtet");});
test("modalitäten -> modalitat", function() {deepEqual( Stem("modalitäten"), "modalitat");});
test("mode -> mod", function() {deepEqual( Stem("mode"), "mod");});
test("modell -> modell", function() {deepEqual( Stem("modell"), "modell");});
test("moder -> mod", function() {deepEqual( Stem("moder"), "mod");});
test("moderdunst -> moderdun", function() {deepEqual( Stem("moderdunst"), "moderdun");});
test("modern -> mod", function() {deepEqual( Stem("modern"), "mod");});
test("moderne -> modern", function() {deepEqual( Stem("moderne"), "modern");});
test("moderner -> modern", function() {deepEqual( Stem("moderner"), "modern");});
test("modified -> modified", function() {deepEqual( Stem("modified"), "modified");});
test("modifikationen -> modifikation", function() {deepEqual( Stem("modifikationen"), "modifikation");});
test("modifiziert -> modifiziert", function() {deepEqual( Stem("modifiziert"), "modifiziert");});
test("mödite -> modit", function() {deepEqual( Stem("mödite"), "modit");});
test("möge -> mog", function() {deepEqual( Stem("möge"), "mog");});
test("mögen -> mog", function() {deepEqual( Stem("mögen"), "mog");});
test("mögest -> mog", function() {deepEqual( Stem("mögest"), "mog");});
test("möget -> moget", function() {deepEqual( Stem("möget"), "moget");});
test("möglich -> moglich", function() {deepEqual( Stem("möglich"), "moglich");});
test("mögliche -> moglich", function() {deepEqual( Stem("mögliche"), "moglich");});
test("möglichen -> moglich", function() {deepEqual( Stem("möglichen"), "moglich");});
test("möglicher -> moglich", function() {deepEqual( Stem("möglicher"), "moglich");});
test("möglicherweise -> moglicherweis", function() {deepEqual( Stem("möglicherweise"), "moglicherweis");});
test("möglichkeit -> moglich", function() {deepEqual( Stem("möglichkeit"), "moglich");});
test("möglichkeiten -> moglich", function() {deepEqual( Stem("möglichkeiten"), "moglich");});
test("möglichst -> moglich", function() {deepEqual( Stem("möglichst"), "moglich");});
test("möglichstem -> moglich", function() {deepEqual( Stem("möglichstem"), "moglich");});
test("möglichster -> moglich", function() {deepEqual( Stem("möglichster"), "moglich");});
test("mögt -> mogt", function() {deepEqual( Stem("mögt"), "mogt");});
test("mohammedaner -> mohammedan", function() {deepEqual( Stem("mohammedaner"), "mohammedan");});
test("mohnblume -> mohnblum", function() {deepEqual( Stem("mohnblume"), "mohnblum");});
test("mohnblumen -> mohnblum", function() {deepEqual( Stem("mohnblumen"), "mohnblum");});
test("mohnrosen -> mohnros", function() {deepEqual( Stem("mohnrosen"), "mohnros");});
test("molche -> molch", function() {deepEqual( Stem("molche"), "molch");});
test("molestierten -> molestiert", function() {deepEqual( Stem("molestierten"), "molestiert");});
test("molliger -> mollig", function() {deepEqual( Stem("molliger"), "mollig");});
test("moment -> moment", function() {deepEqual( Stem("moment"), "moment");});
test("momentan -> momentan", function() {deepEqual( Stem("momentan"), "momentan");});
test("momente -> moment", function() {deepEqual( Stem("momente"), "moment");});
test("momenten -> moment", function() {deepEqual( Stem("momenten"), "moment");});
test("mon -> mon", function() {deepEqual( Stem("mon"), "mon");});
test("monat -> monat", function() {deepEqual( Stem("monat"), "monat");});
test("monate -> monat", function() {deepEqual( Stem("monate"), "monat");});
test("monaten -> monat", function() {deepEqual( Stem("monaten"), "monat");});
test("monatlich -> monat", function() {deepEqual( Stem("monatlich"), "monat");});
test("monatszeitschrift -> monatszeitschrift", function() {deepEqual( Stem("monatszeitschrift"), "monatszeitschrift");});
test("mönch -> monch", function() {deepEqual( Stem("mönch"), "monch");});
test("mönchsgesicht -> monchsgesicht", function() {deepEqual( Stem("mönchsgesicht"), "monchsgesicht");});
test("mond -> mond", function() {deepEqual( Stem("mond"), "mond");});
test("mondbeglänzten -> mondbeglanzt", function() {deepEqual( Stem("mondbeglänzten"), "mondbeglanzt");});
test("mondberg -> mondberg", function() {deepEqual( Stem("mondberg"), "mondberg");});
test("mondberges -> mondberg", function() {deepEqual( Stem("mondberges"), "mondberg");});
test("mondbeschienene -> mondbeschien", function() {deepEqual( Stem("mondbeschienene"), "mondbeschien");});
test("mondblumen -> mondblum", function() {deepEqual( Stem("mondblumen"), "mondblum");});
test("mondbuch -> mondbuch", function() {deepEqual( Stem("mondbuch"), "mondbuch");});
test("mondbutter -> mondbutt", function() {deepEqual( Stem("mondbutter"), "mondbutt");});
test("monde -> mond", function() {deepEqual( Stem("monde"), "mond");});
test("mondes -> mond", function() {deepEqual( Stem("mondes"), "mond");});
test("mondfahrt -> mondfahrt", function() {deepEqual( Stem("mondfahrt"), "mondfahrt");});
test("mondgegend -> mondgeg", function() {deepEqual( Stem("mondgegend"), "mondgeg");});
test("mondhelle -> mondhell", function() {deepEqual( Stem("mondhelle"), "mondhell");});
test("mondhügel -> mondhugel", function() {deepEqual( Stem("mondhügel"), "mondhugel");});
test("mondkälber -> mondkalb", function() {deepEqual( Stem("mondkälber"), "mondkalb");});
test("mondkälbern -> mondkalb", function() {deepEqual( Stem("mondkälbern"), "mondkalb");});
test("mondkanone -> mondkanon", function() {deepEqual( Stem("mondkanone"), "mondkanon");});
test("mondkrone -> mondkron", function() {deepEqual( Stem("mondkrone"), "mondkron");});
test("mondkruste -> mondkrust", function() {deepEqual( Stem("mondkruste"), "mondkrust");});
test("mondland -> mondland", function() {deepEqual( Stem("mondland"), "mondland");});
test("mondlandschaft -> mondlandschaft", function() {deepEqual( Stem("mondlandschaft"), "mondlandschaft");});
test("mondlederstiefel -> mondlederstiefel", function() {deepEqual( Stem("mondlederstiefel"), "mondlederstiefel");});
test("mondlicht -> mondlicht", function() {deepEqual( Stem("mondlicht"), "mondlicht");});
test("mondlichtes -> mondlicht", function() {deepEqual( Stem("mondlichtes"), "mondlicht");});
test("mondmann -> mondmann", function() {deepEqual( Stem("mondmann"), "mondmann");});
test("mondmanns -> mondmann", function() {deepEqual( Stem("mondmanns"), "mondmann");});
test("mondnächte -> mondnacht", function() {deepEqual( Stem("mondnächte"), "mondnacht");});
test("mondschäfchen -> mondschafch", function() {deepEqual( Stem("mondschäfchen"), "mondschafch");});
test("mondschein -> mondschein", function() {deepEqual( Stem("mondschein"), "mondschein");});
test("mondscheinfladen -> mondscheinflad", function() {deepEqual( Stem("mondscheinfladen"), "mondscheinflad");});
test("mondschlitten -> mondschlitt", function() {deepEqual( Stem("mondschlitten"), "mondschlitt");});
test("mondsichel -> mondsichel", function() {deepEqual( Stem("mondsichel"), "mondsichel");});
test("mondspinat -> mondspinat", function() {deepEqual( Stem("mondspinat"), "mondspinat");});
test("mondstaub -> mondstaub", function() {deepEqual( Stem("mondstaub"), "mondstaub");});
test("mondstich -> mondstich", function() {deepEqual( Stem("mondstich"), "mondstich");});
test("mondstrahlen -> mondstrahl", function() {deepEqual( Stem("mondstrahlen"), "mondstrahl");});
test("mondwüste -> mondwust", function() {deepEqual( Stem("mondwüste"), "mondwust");});
test("money -> money", function() {deepEqual( Stem("money"), "money");});
test("monokel -> monokel", function() {deepEqual( Stem("monokel"), "monokel");});
test("monokelherr -> monokelherr", function() {deepEqual( Stem("monokelherr"), "monokelherr");});
test("monsieur -> monsieur", function() {deepEqual( Stem("monsieur"), "monsieur");});
test("monstra -> monstra", function() {deepEqual( Stem("monstra"), "monstra");});
test("mont -> mont", function() {deepEqual( Stem("mont"), "mont");});
test("montag -> montag", function() {deepEqual( Stem("montag"), "montag");});
test("montagnachmittag -> montagnachmittag", function() {deepEqual( Stem("montagnachmittag"), "montagnachmittag");});
test("montarcy -> montarcy", function() {deepEqual( Stem("montarcy"), "montarcy");});
test("montsalvatsch -> montsalvatsch", function() {deepEqual( Stem("montsalvatsch"), "montsalvatsch");});
test("montur -> montur", function() {deepEqual( Stem("montur"), "montur");});
test("monument -> monument", function() {deepEqual( Stem("monument"), "monument");});
test("moorlache -> moorlach", function() {deepEqual( Stem("moorlache"), "moorlach");});
test("moorwiesen -> moorwies", function() {deepEqual( Stem("moorwiesen"), "moorwies");});
test("moorzotteln -> moorzotteln", function() {deepEqual( Stem("moorzotteln"), "moorzotteln");});
test("moos -> moos", function() {deepEqual( Stem("moos"), "moos");});
test("moose -> moos", function() {deepEqual( Stem("moose"), "moos");});
test("moosfasern -> moosfas", function() {deepEqual( Stem("moosfasern"), "moosfas");});
test("moosgraben -> moosgrab", function() {deepEqual( Stem("moosgraben"), "moosgrab");});
test("moosgrund -> moosgrund", function() {deepEqual( Stem("moosgrund"), "moosgrund");});
test("moosigen -> moosig", function() {deepEqual( Stem("moosigen"), "moosig");});
test("moosklee -> mooskle", function() {deepEqual( Stem("moosklee"), "mooskle");});
test("moosplatte -> moosplatt", function() {deepEqual( Stem("moosplatte"), "moosplatt");});
test("moph -> moph", function() {deepEqual( Stem("moph"), "moph");});
test("moral -> moral", function() {deepEqual( Stem("moral"), "moral");});
test("moralisch -> moral", function() {deepEqual( Stem("moralisch"), "moral");});
test("moralischbesseren -> moralischbess", function() {deepEqual( Stem("moralischbesseren"), "moralischbess");});
test("moralische -> moral", function() {deepEqual( Stem("moralische"), "moral");});
test("moralischen -> moral", function() {deepEqual( Stem("moralischen"), "moral");});
test("moralischer -> moral", function() {deepEqual( Stem("moralischer"), "moral");});
test("moralisches -> moral", function() {deepEqual( Stem("moralisches"), "moral");});
test("moralität -> moralitat", function() {deepEqual( Stem("moralität"), "moralitat");});
test("moralphilosoph -> moralphilosoph", function() {deepEqual( Stem("moralphilosoph"), "moralphilosoph");});
test("mord -> mord", function() {deepEqual( Stem("mord"), "mord");});
test("mordbrenner -> mordbrenn", function() {deepEqual( Stem("mordbrenner"), "mordbrenn");});
test("morden -> mord", function() {deepEqual( Stem("morden"), "mord");});
test("mörder -> mord", function() {deepEqual( Stem("mörder"), "mord");});
test("mörderisch -> morder", function() {deepEqual( Stem("mörderisch"), "morder");});
test("mörderischen -> morder", function() {deepEqual( Stem("mörderischen"), "morder");});
test("mörderlich -> mord", function() {deepEqual( Stem("mörderlich"), "mord");});
test("mörders -> mord", function() {deepEqual( Stem("mörders"), "mord");});
test("mordio -> mordio", function() {deepEqual( Stem("mordio"), "mordio");});
test("mordtat -> mordtat", function() {deepEqual( Stem("mordtat"), "mordtat");});
test("mordversuchs -> mordversuch", function() {deepEqual( Stem("mordversuchs"), "mordversuch");});
test("more -> mor", function() {deepEqual( Stem("more"), "mor");});
test("morgen -> morg", function() {deepEqual( Stem("morgen"), "morg");});
test("morgenbrot -> morgenbrot", function() {deepEqual( Stem("morgenbrot"), "morgenbrot");});
test("morgende -> morgend", function() {deepEqual( Stem("morgende"), "morgend");});
test("morgenden -> morgend", function() {deepEqual( Stem("morgenden"), "morgend");});
test("morgenferne -> morgenfern", function() {deepEqual( Stem("morgenferne"), "morgenfern");});
test("morgenlande -> morgenland", function() {deepEqual( Stem("morgenlande"), "morgenland");});
test("morgenlandes -> morgenland", function() {deepEqual( Stem("morgenlandes"), "morgenland");});
test("morgenländischen -> morgenland", function() {deepEqual( Stem("morgenländischen"), "morgenland");});
test("morgenlands -> morgenland", function() {deepEqual( Stem("morgenlands"), "morgenland");});
test("morgenliedchen -> morgenliedch", function() {deepEqual( Stem("morgenliedchen"), "morgenliedch");});
test("morgenluft -> morgenluft", function() {deepEqual( Stem("morgenluft"), "morgenluft");});
test("morgenmantel -> morgenmantel", function() {deepEqual( Stem("morgenmantel"), "morgenmantel");});
test("morgenpirsch -> morgenpirsch", function() {deepEqual( Stem("morgenpirsch"), "morgenpirsch");});
test("morgenrot -> morgenrot", function() {deepEqual( Stem("morgenrot"), "morgenrot");});
test("morgenröte -> morgenrot", function() {deepEqual( Stem("morgenröte"), "morgenrot");});
test("morgens -> morg", function() {deepEqual( Stem("morgens"), "morg");});
test("morgensonne -> morgensonn", function() {deepEqual( Stem("morgensonne"), "morgensonn");});
test("morgenstern -> morgen", function() {deepEqual( Stem("morgenstern"), "morgen");});
test("morgensterne -> morgenstern", function() {deepEqual( Stem("morgensterne"), "morgenstern");});
test("morgental -> morgental", function() {deepEqual( Stem("morgental"), "morgental");});
test("morgenwindchen -> morgenwindch", function() {deepEqual( Stem("morgenwindchen"), "morgenwindch");});
test("morgigen -> morgig", function() {deepEqual( Stem("morgigen"), "morgig");});
test("moring -> moring", function() {deepEqual( Stem("moring"), "moring");});
test("moritz -> moritz", function() {deepEqual( Stem("moritz"), "moritz");});
test("morose -> moros", function() {deepEqual( Stem("morose"), "moros");});
test("morosität -> morositat", function() {deepEqual( Stem("morosität"), "morositat");});
test("morsche -> morsch", function() {deepEqual( Stem("morsche"), "morsch");});
test("morschen -> morsch", function() {deepEqual( Stem("morschen"), "morsch");});
test("morscher -> morsch", function() {deepEqual( Stem("morscher"), "morsch");});
test("mörser -> mors", function() {deepEqual( Stem("mörser"), "mors");});
test("mörserchen -> morserch", function() {deepEqual( Stem("mörserchen"), "morserch");});
test("mörtelbrocken -> mortelbrock", function() {deepEqual( Stem("mörtelbrocken"), "mortelbrock");});
test("moscheh -> moscheh", function() {deepEqual( Stem("moscheh"), "moscheh");});
test("moschus -> moschus", function() {deepEqual( Stem("moschus"), "moschus");});
test("mose -> mos", function() {deepEqual( Stem("mose"), "mos");});
test("moses -> mos", function() {deepEqual( Stem("moses"), "mos");});
test("moskau -> moskau", function() {deepEqual( Stem("moskau"), "moskau");});
test("most -> most", function() {deepEqual( Stem("most"), "most");});
test("mostes -> most", function() {deepEqual( Stem("mostes"), "most");});
test("motion -> motion", function() {deepEqual( Stem("motion"), "motion");});
test("motionen -> motion", function() {deepEqual( Stem("motionen"), "motion");});
test("motitans -> motitan", function() {deepEqual( Stem("motitans"), "motitan");});
test("motiv -> motiv", function() {deepEqual( Stem("motiv"), "motiv");});
test("motive -> motiv", function() {deepEqual( Stem("motive"), "motiv");});
test("motor -> motor", function() {deepEqual( Stem("motor"), "motor");});
test("motorradclub -> motorradclub", function() {deepEqual( Stem("motorradclub"), "motorradclub");});
test("motorräder -> motorrad", function() {deepEqual( Stem("motorräder"), "motorrad");});
test("motto -> motto", function() {deepEqual( Stem("motto"), "motto");});
test("mozartsche -> mozartsch", function() {deepEqual( Stem("mozartsche"), "mozartsch");});
test("mta -> mta", function() {deepEqual( Stem("mta"), "mta");});
test("mücke -> muck", function() {deepEqual( Stem("mücke"), "muck");});
test("mücken -> muck", function() {deepEqual( Stem("mücken"), "muck");});
test("mucksen -> mucks", function() {deepEqual( Stem("mucksen"), "mucks");});
test("muckser -> mucks", function() {deepEqual( Stem("muckser"), "mucks");});
test("muckwitz -> muckwitz", function() {deepEqual( Stem("muckwitz"), "muckwitz");});
test("müde -> mud", function() {deepEqual( Stem("müde"), "mud");});
test("müden -> mud", function() {deepEqual( Stem("müden"), "mud");});
test("müdes -> mud", function() {deepEqual( Stem("müdes"), "mud");});
test("müdigkeit -> mudig", function() {deepEqual( Stem("müdigkeit"), "mudig");});
test("muess -> muess", function() {deepEqual( Stem("muess"), "muess");});
test("müesst -> muesst", function() {deepEqual( Stem("müesst"), "muesst");});
test("mühe -> muh", function() {deepEqual( Stem("mühe"), "muh");});
test("mühelosigkeit -> muhelos", function() {deepEqual( Stem("mühelosigkeit"), "muhelos");});
test("mühen -> muh", function() {deepEqual( Stem("mühen"), "muh");});
test("mühevoll -> muhevoll", function() {deepEqual( Stem("mühevoll"), "muhevoll");});
test("mühevolle -> muhevoll", function() {deepEqual( Stem("mühevolle"), "muhevoll");});
test("mühevoller -> muhevoll", function() {deepEqual( Stem("mühevoller"), "muhevoll");});
test("mühlsteine -> muhlstein", function() {deepEqual( Stem("mühlsteine"), "muhlstein");});
test("muhme -> muhm", function() {deepEqual( Stem("muhme"), "muhm");});
test("mühsal -> muhsal", function() {deepEqual( Stem("mühsal"), "muhsal");});
test("mühsam -> muhsam", function() {deepEqual( Stem("mühsam"), "muhsam");});
test("mühsame -> muhsam", function() {deepEqual( Stem("mühsame"), "muhsam");});
test("mühselig -> muhsel", function() {deepEqual( Stem("mühselig"), "muhsel");});
test("mühseligen -> muhsel", function() {deepEqual( Stem("mühseligen"), "muhsel");});
test("mühseligkeit -> muhsel", function() {deepEqual( Stem("mühseligkeit"), "muhsel");});
test("müht -> muht", function() {deepEqual( Stem("müht"), "muht");});
test("mühten -> muht", function() {deepEqual( Stem("mühten"), "muht");});
test("mul -> mul", function() {deepEqual( Stem("mul"), "mul");});
test("mulack -> mulack", function() {deepEqual( Stem("mulack"), "mulack");});
test("mulde -> muld", function() {deepEqual( Stem("mulde"), "muld");});
test("mullack -> mullack", function() {deepEqual( Stem("mullack"), "mullack");});
test("müllerjungen -> mullerj", function() {deepEqual( Stem("müllerjungen"), "mullerj");});
test("multext -> multext", function() {deepEqual( Stem("multext"), "multext");});
test("multikulturelle -> multikulturell", function() {deepEqual( Stem("multikulturelle"), "multikulturell");});
test("multipliziert -> multipliziert", function() {deepEqual( Stem("multipliziert"), "multipliziert");});
test("multis -> multis", function() {deepEqual( Stem("multis"), "multis");});
test("münchen -> munch", function() {deepEqual( Stem("münchen"), "munch");});
test("münchener -> munch", function() {deepEqual( Stem("münchener"), "munch");});
test("mund -> mund", function() {deepEqual( Stem("mund"), "mund");});
test("mundart -> mundart", function() {deepEqual( Stem("mundart"), "mundart");});
test("mundbärtchen -> mundbartch", function() {deepEqual( Stem("mundbärtchen"), "mundbartch");});
test("mündchen -> mundch", function() {deepEqual( Stem("mündchen"), "mundch");});
test("munde -> mund", function() {deepEqual( Stem("munde"), "mund");});
test("munden -> mund", function() {deepEqual( Stem("munden"), "mund");});
test("mundes -> mund", function() {deepEqual( Stem("mundes"), "mund");});
test("mündet -> mundet", function() {deepEqual( Stem("mündet"), "mundet");});
test("mündete -> mundet", function() {deepEqual( Stem("mündete"), "mundet");});
test("mundeten -> mundet", function() {deepEqual( Stem("mundeten"), "mundet");});
test("mundgefässe -> mundgefass", function() {deepEqual( Stem("mundgefässe"), "mundgefass");});
test("mundgefäße -> mundgefass", function() {deepEqual( Stem("mundgefäße"), "mundgefass");});
test("mundkoch -> mundkoch", function() {deepEqual( Stem("mundkoch"), "mundkoch");});
test("mündlich -> mundlich", function() {deepEqual( Stem("mündlich"), "mundlich");});
test("mündlichkeit -> mundlich", function() {deepEqual( Stem("mündlichkeit"), "mundlich");});
test("mundraub -> mundraub", function() {deepEqual( Stem("mundraub"), "mundraub");});
test("mundtot -> mundtot", function() {deepEqual( Stem("mundtot"), "mundtot");});
test("mündung -> mundung", function() {deepEqual( Stem("mündung"), "mundung");});
test("mundwerk -> mundwerk", function() {deepEqual( Stem("mundwerk"), "mundwerk");});
test("mundwinkel -> mundwinkel", function() {deepEqual( Stem("mundwinkel"), "mundwinkel");});
test("mundwinkeln -> mundwinkeln", function() {deepEqual( Stem("mundwinkeln"), "mundwinkeln");});
test("münsingen -> munsing", function() {deepEqual( Stem("münsingen"), "munsing");});
test("munter -> munt", function() {deepEqual( Stem("munter"), "munt");});
test("muntere -> munt", function() {deepEqual( Stem("muntere"), "munt");});
test("munteren -> munt", function() {deepEqual( Stem("munteren"), "munt");});
test("munterkeit -> munter", function() {deepEqual( Stem("munterkeit"), "munter");});
test("muntern -> munt", function() {deepEqual( Stem("muntern"), "munt");});
test("munterte -> muntert", function() {deepEqual( Stem("munterte"), "muntert");});
test("münze -> munz", function() {deepEqual( Stem("münze"), "munz");});
test("münzen -> munz", function() {deepEqual( Stem("münzen"), "munz");});
test("mürb -> murb", function() {deepEqual( Stem("mürb"), "murb");});
test("mürbe -> murb", function() {deepEqual( Stem("mürbe"), "murb");});
test("murke -> murk", function() {deepEqual( Stem("murke"), "murk");});
test("murkes -> murk", function() {deepEqual( Stem("murkes"), "murk");});
test("murmelkugeln -> murmelkugeln", function() {deepEqual( Stem("murmelkugeln"), "murmelkugeln");});
test("murmeln -> murmeln", function() {deepEqual( Stem("murmeln"), "murmeln");});
test("murmelte -> murmelt", function() {deepEqual( Stem("murmelte"), "murmelt");});
test("murmeltier -> murmelti", function() {deepEqual( Stem("murmeltier"), "murmelti");});
test("murmeltiere -> murmelti", function() {deepEqual( Stem("murmeltiere"), "murmelti");});
test("murren -> murr", function() {deepEqual( Stem("murren"), "murr");});
test("mürrisch -> murrisch", function() {deepEqual( Stem("mürrisch"), "murrisch");});
test("murrkopf -> murrkopf", function() {deepEqual( Stem("murrkopf"), "murrkopf");});
test("murrte -> murrt", function() {deepEqual( Stem("murrte"), "murrt");});
test("murrten -> murrt", function() {deepEqual( Stem("murrten"), "murrt");});
test("mus -> mus", function() {deepEqual( Stem("mus"), "mus");});
test("muschelförmige -> muschelform", function() {deepEqual( Stem("muschelförmige"), "muschelform");});
test("muscheln -> muscheln", function() {deepEqual( Stem("muscheln"), "muscheln");});
test("muschelschiff -> muschelschiff", function() {deepEqual( Stem("muschelschiff"), "muschelschiff");});
test("muschi -> muschi", function() {deepEqual( Stem("muschi"), "muschi");});
test("museum -> museum", function() {deepEqual( Stem("museum"), "museum");});
test("musik -> musik", function() {deepEqual( Stem("musik"), "musik");});
test("musikalisch -> musikal", function() {deepEqual( Stem("musikalisch"), "musikal");});
test("musikalisches -> musikal", function() {deepEqual( Stem("musikalisches"), "musikal");});
test("musikanten -> musikant", function() {deepEqual( Stem("musikanten"), "musikant");});
test("musikbusiness -> musikbusiness", function() {deepEqual( Stem("musikbusiness"), "musikbusiness");});
test("musiker -> musik", function() {deepEqual( Stem("musiker"), "musik");});
test("musikindustrie -> musikindustri", function() {deepEqual( Stem("musikindustrie"), "musikindustri");});
test("musikstück -> musikstuck", function() {deepEqual( Stem("musikstück"), "musikstuck");});
test("musikszene -> musiksz", function() {deepEqual( Stem("musikszene"), "musiksz");});
test("musizierende -> musizier", function() {deepEqual( Stem("musizierende"), "musizier");});
test("musizierte -> musiziert", function() {deepEqual( Stem("musizierte"), "musiziert");});
test("muskelfasern -> muskelfas", function() {deepEqual( Stem("muskelfasern"), "muskelfas");});
test("muskete -> musket", function() {deepEqual( Stem("muskete"), "musket");});
test("muskulatur -> muskulatur", function() {deepEqual( Stem("muskulatur"), "muskulatur");});
test("muss -> muss", function() {deepEqual( Stem("muss"), "muss");});
test("muß -> muss", function() {deepEqual( Stem("muß"), "muss");});
test("musse -> muss", function() {deepEqual( Stem("musse"), "muss");});
test("müsse -> muss", function() {deepEqual( Stem("müsse"), "muss");});
test("musselinhalstuch -> musselinhalstuch", function() {deepEqual( Stem("musselinhalstuch"), "musselinhalstuch");});
test("müssen -> muss", function() {deepEqual( Stem("müssen"), "muss");});
test("mussestunden -> mussestund", function() {deepEqual( Stem("mussestunden"), "mussestund");});
test("müssig -> mussig", function() {deepEqual( Stem("müssig"), "mussig");});
test("müßig -> mussig", function() {deepEqual( Stem("müßig"), "mussig");});
test("müssige -> mussig", function() {deepEqual( Stem("müssige"), "mussig");});
test("müssigen -> mussig", function() {deepEqual( Stem("müssigen"), "mussig");});
test("müßigen -> mussig", function() {deepEqual( Stem("müßigen"), "mussig");});
test("müssiges -> mussig", function() {deepEqual( Stem("müssiges"), "mussig");});
test("müssiggang -> mussiggang", function() {deepEqual( Stem("müssiggang"), "mussiggang");});
test("müssiggange -> mussiggang", function() {deepEqual( Stem("müssiggange"), "mussiggang");});
test("müssiggänger -> mussiggang", function() {deepEqual( Stem("müssiggänger"), "mussiggang");});
test("müssigganges -> mussiggang", function() {deepEqual( Stem("müssigganges"), "mussiggang");});
test("musst -> musst", function() {deepEqual( Stem("musst"), "musst");});
test("mußt -> musst", function() {deepEqual( Stem("mußt"), "musst");});
test("müsst -> musst", function() {deepEqual( Stem("müsst"), "musst");});
test("müßt -> musst", function() {deepEqual( Stem("müßt"), "musst");});
test("musste -> musst", function() {deepEqual( Stem("musste"), "musst");});
test("mußte -> musst", function() {deepEqual( Stem("mußte"), "musst");});
test("müsste -> musst", function() {deepEqual( Stem("müsste"), "musst");});
test("müßte -> musst", function() {deepEqual( Stem("müßte"), "musst");});
test("mussten -> musst", function() {deepEqual( Stem("mussten"), "musst");});
test("mußten -> musst", function() {deepEqual( Stem("mußten"), "musst");});
test("müssten -> musst", function() {deepEqual( Stem("müssten"), "musst");});
test("müßten -> musst", function() {deepEqual( Stem("müßten"), "musst");});
test("müsstest -> musst", function() {deepEqual( Stem("müsstest"), "musst");});
test("muster -> must", function() {deepEqual( Stem("muster"), "must");});
test("mustergültig -> mustergult", function() {deepEqual( Stem("mustergültig"), "mustergult");});
test("musterkarte -> musterkart", function() {deepEqual( Stem("musterkarte"), "musterkart");});
test("musterte -> mustert", function() {deepEqual( Stem("musterte"), "mustert");});
test("musterung -> muster", function() {deepEqual( Stem("musterung"), "muster");});
test("mut -> mut", function() {deepEqual( Stem("mut"), "mut");});
test("mütchen -> mutch", function() {deepEqual( Stem("mütchen"), "mutch");});
test("mute -> mut", function() {deepEqual( Stem("mute"), "mut");});
test("mutes -> mut", function() {deepEqual( Stem("mutes"), "mut");});
test("mutesäusserung -> mutesausser", function() {deepEqual( Stem("mutesäusserung"), "mutesausser");});
test("mutig -> mutig", function() {deepEqual( Stem("mutig"), "mutig");});
test("mutige -> mutig", function() {deepEqual( Stem("mutige"), "mutig");});
test("mutigen -> mutig", function() {deepEqual( Stem("mutigen"), "mutig");});
test("mütlichen -> mutlich", function() {deepEqual( Stem("mütlichen"), "mutlich");});
test("mutlos -> mutlos", function() {deepEqual( Stem("mutlos"), "mutlos");});
test("mutmassen -> mutmass", function() {deepEqual( Stem("mutmassen"), "mutmass");});
test("mutmassliche -> mutmass", function() {deepEqual( Stem("mutmassliche"), "mutmass");});
test("mutoid -> mutoid", function() {deepEqual( Stem("mutoid"), "mutoid");});
test("muttchen -> muttch", function() {deepEqual( Stem("muttchen"), "muttch");});
test("mutter -> mutt", function() {deepEqual( Stem("mutter"), "mutt");});
test("mütterchen -> mutterch", function() {deepEqual( Stem("mütterchen"), "mutterch");});
test("mutterdurchbruch -> mutterdurchbruch", function() {deepEqual( Stem("mutterdurchbruch"), "mutterdurchbruch");});
test("muttergottes -> muttergott", function() {deepEqual( Stem("muttergottes"), "muttergott");});
test("mutterkirche -> mutterkirch", function() {deepEqual( Stem("mutterkirche"), "mutterkirch");});
test("mutterleib -> mutterleib", function() {deepEqual( Stem("mutterleib"), "mutterleib");});
test("mutterleibe -> mutterleib", function() {deepEqual( Stem("mutterleibe"), "mutterleib");});
test("mütterlichen -> mutt", function() {deepEqual( Stem("mütterlichen"), "mutt");});
test("mütterlicher -> mutt", function() {deepEqual( Stem("mütterlicher"), "mutt");});
test("mütterliches -> mutt", function() {deepEqual( Stem("mütterliches"), "mutt");});
test("mutterliebe -> mutterlieb", function() {deepEqual( Stem("mutterliebe"), "mutterlieb");});
test("muttern -> mutt", function() {deepEqual( Stem("muttern"), "mutt");});
test("müttern -> mutt", function() {deepEqual( Stem("müttern"), "mutt");});
test("mutterseelenallein -> mutterseelenallein", function() {deepEqual( Stem("mutterseelenallein"), "mutterseelenallein");});
test("muttersprache -> muttersprach", function() {deepEqual( Stem("muttersprache"), "muttersprach");});
test("muttersprachler -> muttersprachl", function() {deepEqual( Stem("muttersprachler"), "muttersprachl");});
test("mutterwitz -> mutterwitz", function() {deepEqual( Stem("mutterwitz"), "mutterwitz");});
test("mutvoll -> mutvoll", function() {deepEqual( Stem("mutvoll"), "mutvoll");});
test("mutwillen -> mutwill", function() {deepEqual( Stem("mutwillen"), "mutwill");});
test("mutwillens -> mutwill", function() {deepEqual( Stem("mutwillens"), "mutwill");});
test("mutwillig -> mutwill", function() {deepEqual( Stem("mutwillig"), "mutwill");});
test("mutwillige -> mutwill", function() {deepEqual( Stem("mutwillige"), "mutwill");});
test("mutwilligen -> mutwill", function() {deepEqual( Stem("mutwilligen"), "mutwill");});
test("mutwilliges -> mutwill", function() {deepEqual( Stem("mutwilliges"), "mutwill");});
test("mutwilligsten -> mutwill", function() {deepEqual( Stem("mutwilligsten"), "mutwill");});
test("mütze -> mutz", function() {deepEqual( Stem("mütze"), "mutz");});
test("mützen -> mutz", function() {deepEqual( Stem("mützen"), "mutz");});
test("mützenabnehmen -> mutzenabnehm", function() {deepEqual( Stem("mützenabnehmen"), "mutzenabnehm");});
test("myriaden -> myriad", function() {deepEqual( Stem("myriaden"), "myriad");});
test("myrrhen -> myrrh", function() {deepEqual( Stem("myrrhen"), "myrrh");});
test("mysterien -> mysteri", function() {deepEqual( Stem("mysterien"), "mysteri");});
test("mystica -> mystica", function() {deepEqual( Stem("mystica"), "mystica");});
test("mystiker -> mystik", function() {deepEqual( Stem("mystiker"), "mystik");});
test("mystizismus -> mystizismus", function() {deepEqual( Stem("mystizismus"), "mystizismus");});
test("mythen -> myth", function() {deepEqual( Stem("mythen"), "myth");});
test("mythos -> mythos", function() {deepEqual( Stem("mythos"), "mythos");});
test("n -> n", function() {deepEqual( Stem("n"), "n");});
test("na -> na", function() {deepEqual( Stem("na"), "na");});
test("naamah -> naamah", function() {deepEqual( Stem("naamah"), "naamah");});
test("nabel -> nabel", function() {deepEqual( Stem("nabel"), "nabel");});
test("nach -> nach", function() {deepEqual( Stem("nach"), "nach");});
test("nacha -> nacha", function() {deepEqual( Stem("nacha"), "nacha");});
test("nachäffen -> nachaff", function() {deepEqual( Stem("nachäffen"), "nachaff");});
test("nachäffte -> nachafft", function() {deepEqual( Stem("nachäffte"), "nachafft");});
test("nachahmer -> nachahm", function() {deepEqual( Stem("nachahmer"), "nachahm");});
test("nachahmt -> nachahmt", function() {deepEqual( Stem("nachahmt"), "nachahmt");});
test("nachahmung -> nachahm", function() {deepEqual( Stem("nachahmung"), "nachahm");});
test("nachassons -> nachasson", function() {deepEqual( Stem("nachassons"), "nachasson");});
test("nachbar -> nachbar", function() {deepEqual( Stem("nachbar"), "nachbar");});
test("nachbaräckern -> nachbarack", function() {deepEqual( Stem("nachbaräckern"), "nachbarack");});
test("nachbaren -> nachbar", function() {deepEqual( Stem("nachbaren"), "nachbar");});
test("nachbarhäuser -> nachbarhaus", function() {deepEqual( Stem("nachbarhäuser"), "nachbarhaus");});
test("nachbarin -> nachbarin", function() {deepEqual( Stem("nachbarin"), "nachbarin");});
test("nachbarkirche -> nachbarkirch", function() {deepEqual( Stem("nachbarkirche"), "nachbarkirch");});
test("nachbarn -> nachbarn", function() {deepEqual( Stem("nachbarn"), "nachbarn");});
test("nachbarregierung -> nachbarregier", function() {deepEqual( Stem("nachbarregierung"), "nachbarregier");});
test("nachbars -> nachbar", function() {deepEqual( Stem("nachbars"), "nachbar");});
test("nachbarschaft -> nachbarschaft", function() {deepEqual( Stem("nachbarschaft"), "nachbarschaft");});
test("nachbarsleute -> nachbarsleut", function() {deepEqual( Stem("nachbarsleute"), "nachbarsleut");});
test("nachbilden -> nachbild", function() {deepEqual( Stem("nachbilden"), "nachbild");});
test("nachbildeten -> nachbildet", function() {deepEqual( Stem("nachbildeten"), "nachbildet");});
test("nachblickend -> nachblick", function() {deepEqual( Stem("nachblickend"), "nachblick");});
test("nachdachte -> nachdacht", function() {deepEqual( Stem("nachdachte"), "nachdacht");});
test("nachdem -> nachd", function() {deepEqual( Stem("nachdem"), "nachd");});
test("nachdenken -> nachdenk", function() {deepEqual( Stem("nachdenken"), "nachdenk");});
test("nachdenkende -> nachdenk", function() {deepEqual( Stem("nachdenkende"), "nachdenk");});
test("nachdenkens -> nachdenk", function() {deepEqual( Stem("nachdenkens"), "nachdenk");});
test("nachdenklich -> nachdenk", function() {deepEqual( Stem("nachdenklich"), "nachdenk");});
test("nachdenklichkeit -> nachdenk", function() {deepEqual( Stem("nachdenklichkeit"), "nachdenk");});
test("nachdenkt -> nachdenkt", function() {deepEqual( Stem("nachdenkt"), "nachdenkt");});
test("nachdruck -> nachdruck", function() {deepEqual( Stem("nachdruck"), "nachdruck");});
test("nachdrücklichen -> nachdruck", function() {deepEqual( Stem("nachdrücklichen"), "nachdruck");});
test("nacheiferten -> nacheifert", function() {deepEqual( Stem("nacheiferten"), "nacheifert");});
test("nacheiferung -> nacheifer", function() {deepEqual( Stem("nacheiferung"), "nacheifer");});
test("nacheinander -> nacheinand", function() {deepEqual( Stem("nacheinander"), "nacheinand");});
test("nacheinanderfolgende -> nacheinanderfolg", function() {deepEqual( Stem("nacheinanderfolgende"), "nacheinanderfolg");});
test("nachen -> nach", function() {deepEqual( Stem("nachen"), "nach");});
test("nacher -> nach", function() {deepEqual( Stem("nacher"), "nach");});
test("nachernte -> nachernt", function() {deepEqual( Stem("nachernte"), "nachernt");});
test("nachflogen -> nachflog", function() {deepEqual( Stem("nachflogen"), "nachflog");});
test("nachfolgende -> nachfolg", function() {deepEqual( Stem("nachfolgende"), "nachfolg");});
test("nachfolgenden -> nachfolg", function() {deepEqual( Stem("nachfolgenden"), "nachfolg");});
test("nachfolgt -> nachfolgt", function() {deepEqual( Stem("nachfolgt"), "nachfolgt");});
test("nachforschen -> nachforsch", function() {deepEqual( Stem("nachforschen"), "nachforsch");});
test("nachforscht -> nachforscht", function() {deepEqual( Stem("nachforscht"), "nachforscht");});
test("nachforschte -> nachforscht", function() {deepEqual( Stem("nachforschte"), "nachforscht");});
test("nachforschten -> nachforscht", function() {deepEqual( Stem("nachforschten"), "nachforscht");});
test("nachforschung -> nachforsch", function() {deepEqual( Stem("nachforschung"), "nachforsch");});
test("nachforschungen -> nachforsch", function() {deepEqual( Stem("nachforschungen"), "nachforsch");});
test("nachfrage -> nachfrag", function() {deepEqual( Stem("nachfrage"), "nachfrag");});
test("nachfragen -> nachfrag", function() {deepEqual( Stem("nachfragen"), "nachfrag");});
test("nachfühlte -> nachfuhlt", function() {deepEqual( Stem("nachfühlte"), "nachfuhlt");});
test("nachg -> nachg", function() {deepEqual( Stem("nachg"), "nachg");});
test("nachgangen -> nachgang", function() {deepEqual( Stem("nachgangen"), "nachgang");});
test("nachgeahmten -> nachgeahmt", function() {deepEqual( Stem("nachgeahmten"), "nachgeahmt");});
test("nachgeben -> nachgeb", function() {deepEqual( Stem("nachgeben"), "nachgeb");});
test("nachgebildet -> nachgebildet", function() {deepEqual( Stem("nachgebildet"), "nachgebildet");});
test("nachgebildete -> nachgebildet", function() {deepEqual( Stem("nachgebildete"), "nachgebildet");});
test("nachgedacht -> nachgedacht", function() {deepEqual( Stem("nachgedacht"), "nachgedacht");});
test("nachgefolgt -> nachgefolgt", function() {deepEqual( Stem("nachgefolgt"), "nachgefolgt");});
test("nachgehen -> nachgeh", function() {deepEqual( Stem("nachgehen"), "nachgeh");});
test("nachgehn -> nachgehn", function() {deepEqual( Stem("nachgehn"), "nachgehn");});
test("nachgeht -> nachgeht", function() {deepEqual( Stem("nachgeht"), "nachgeht");});
test("nachgekommen -> nachgekomm", function() {deepEqual( Stem("nachgekommen"), "nachgekomm");});
test("nachgeschaut -> nachgeschaut", function() {deepEqual( Stem("nachgeschaut"), "nachgeschaut");});
test("nachgeschickte -> nachgeschickt", function() {deepEqual( Stem("nachgeschickte"), "nachgeschickt");});
test("nachgeschlagen -> nachgeschlag", function() {deepEqual( Stem("nachgeschlagen"), "nachgeschlag");});
test("nachgesehen -> nachgeseh", function() {deepEqual( Stem("nachgesehen"), "nachgeseh");});
test("nachgesetzt -> nachgesetzt", function() {deepEqual( Stem("nachgesetzt"), "nachgesetzt");});
test("nachgestiegen -> nachgestieg", function() {deepEqual( Stem("nachgestiegen"), "nachgestieg");});
test("nachgewiesen -> nachgewies", function() {deepEqual( Stem("nachgewiesen"), "nachgewies");});
test("nachgezählt -> nachgezahlt", function() {deepEqual( Stem("nachgezählt"), "nachgezahlt");});
test("nachgiebigkeit -> nachgieb", function() {deepEqual( Stem("nachgiebigkeit"), "nachgieb");});
test("nachging -> nachging", function() {deepEqual( Stem("nachging"), "nachging");});
test("nachgingen -> nachging", function() {deepEqual( Stem("nachgingen"), "nachging");});
test("nachgrübelte -> nachgrubelt", function() {deepEqual( Stem("nachgrübelte"), "nachgrubelt");});
test("nachhaltig -> nachhalt", function() {deepEqual( Stem("nachhaltig"), "nachhalt");});
test("nachhausefahren -> nachhausefahr", function() {deepEqual( Stem("nachhausefahren"), "nachhausefahr");});
test("nachhausewege -> nachhauseweg", function() {deepEqual( Stem("nachhausewege"), "nachhauseweg");});
test("nachher -> nachh", function() {deepEqual( Stem("nachher"), "nachh");});
test("nachherigen -> nachher", function() {deepEqual( Stem("nachherigen"), "nachher");});
test("nachhinein -> nachhinein", function() {deepEqual( Stem("nachhinein"), "nachhinein");});
test("nachholen -> nachhol", function() {deepEqual( Stem("nachholen"), "nachhol");});
test("nachjagend -> nachjag", function() {deepEqual( Stem("nachjagend"), "nachjag");});
test("nachkam -> nachkam", function() {deepEqual( Stem("nachkam"), "nachkam");});
test("nachkommen -> nachkomm", function() {deepEqual( Stem("nachkommen"), "nachkomm");});
test("nachkommenschaft -> nachkommenschaft", function() {deepEqual( Stem("nachkommenschaft"), "nachkommenschaft");});
test("nachkommenschaften -> nachkommenschaft", function() {deepEqual( Stem("nachkommenschaften"), "nachkommenschaft");});
test("nachlass -> nachlass", function() {deepEqual( Stem("nachlass"), "nachlass");});
test("nachlaß -> nachlass", function() {deepEqual( Stem("nachlaß"), "nachlass");});
test("nachlassen -> nachlass", function() {deepEqual( Stem("nachlassen"), "nachlass");});
test("nachlässig -> nachlass", function() {deepEqual( Stem("nachlässig"), "nachlass");});
test("nachlässigkeit -> nachlass", function() {deepEqual( Stem("nachlässigkeit"), "nachlass");});
test("nachlaufen -> nachlauf", function() {deepEqual( Stem("nachlaufen"), "nachlauf");});
test("nachlese -> nachles", function() {deepEqual( Stem("nachlese"), "nachles");});
test("nachlesen -> nachles", function() {deepEqual( Stem("nachlesen"), "nachles");});
test("nachliefen -> nachlief", function() {deepEqual( Stem("nachliefen"), "nachlief");});
test("nachmachen -> nachmach", function() {deepEqual( Stem("nachmachen"), "nachmach");});
test("nachmalen -> nachmal", function() {deepEqual( Stem("nachmalen"), "nachmal");});
test("nachmals -> nachmal", function() {deepEqual( Stem("nachmals"), "nachmal");});
test("nachmittag -> nachmittag", function() {deepEqual( Stem("nachmittag"), "nachmittag");});
test("nachmittage -> nachmittag", function() {deepEqual( Stem("nachmittage"), "nachmittag");});
test("nachmittags -> nachmittag", function() {deepEqual( Stem("nachmittags"), "nachmittag");});
test("nachmittagsunterhaltung -> nachmittagsunterhalt", function() {deepEqual( Stem("nachmittagsunterhaltung"), "nachmittagsunterhalt");});
test("nachricht -> nachricht", function() {deepEqual( Stem("nachricht"), "nachricht");});
test("nachrichten -> nachricht", function() {deepEqual( Stem("nachrichten"), "nachricht");});
test("nachrichtenagentur -> nachrichtenagentur", function() {deepEqual( Stem("nachrichtenagentur"), "nachrichtenagentur");});
test("nachrichtenlosen -> nachrichtenlos", function() {deepEqual( Stem("nachrichtenlosen"), "nachrichtenlos");});
test("nachrichtenmagazin -> nachrichtenmagazin", function() {deepEqual( Stem("nachrichtenmagazin"), "nachrichtenmagazin");});
test("nachsagen -> nachsag", function() {deepEqual( Stem("nachsagen"), "nachsag");});
test("nachsah -> nachsah", function() {deepEqual( Stem("nachsah"), "nachsah");});
test("nachschau -> nachschau", function() {deepEqual( Stem("nachschau"), "nachschau");});
test("nachschauen -> nachschau", function() {deepEqual( Stem("nachschauen"), "nachschau");});
test("nachschaute -> nachschaut", function() {deepEqual( Stem("nachschaute"), "nachschaut");});
test("nachschicken -> nachschick", function() {deepEqual( Stem("nachschicken"), "nachschick");});
test("nachsehe -> nachseh", function() {deepEqual( Stem("nachsehe"), "nachseh");});
test("nachsehen -> nachseh", function() {deepEqual( Stem("nachsehen"), "nachseh");});
test("nachsicht -> nachsicht", function() {deepEqual( Stem("nachsicht"), "nachsicht");});
test("nachsichtig -> nachsicht", function() {deepEqual( Stem("nachsichtig"), "nachsicht");});
test("nachsinnen -> nachsinn", function() {deepEqual( Stem("nachsinnen"), "nachsinn");});
test("nachspiele -> nachspiel", function() {deepEqual( Stem("nachspiele"), "nachspiel");});
test("nachspringen -> nachspring", function() {deepEqual( Stem("nachspringen"), "nachspring");});
test("nächst -> nach", function() {deepEqual( Stem("nächst"), "nach");});
test("nächstbeste -> nachstb", function() {deepEqual( Stem("nächstbeste"), "nachstb");});
test("nächstbesten -> nachstb", function() {deepEqual( Stem("nächstbesten"), "nachstb");});
test("nächstdem -> nachstd", function() {deepEqual( Stem("nächstdem"), "nachstd");});
test("nächste -> nach", function() {deepEqual( Stem("nächste"), "nach");});
test("nächsten -> nach", function() {deepEqual( Stem("nächsten"), "nach");});
test("nächstenliebe -> nachstenlieb", function() {deepEqual( Stem("nächstenliebe"), "nachstenlieb");});
test("nächstens -> nachst", function() {deepEqual( Stem("nächstens"), "nachst");});
test("nächster -> nach", function() {deepEqual( Stem("nächster"), "nach");});
test("nächstgelegene -> nachstgeleg", function() {deepEqual( Stem("nächstgelegene"), "nachstgeleg");});
test("nächstliegenden -> nachstlieg", function() {deepEqual( Stem("nächstliegenden"), "nachstlieg");});
test("nacht -> nacht", function() {deepEqual( Stem("nacht"), "nacht");});
test("nachtarbeit -> nachtarbeit", function() {deepEqual( Stem("nachtarbeit"), "nachtarbeit");});
test("nachtcafe -> nachtcaf", function() {deepEqual( Stem("nachtcafe"), "nachtcaf");});
test("nachtcafé -> nachtcafé", function() {deepEqual( Stem("nachtcafé"), "nachtcafé");});
test("nachtclub -> nachtclub", function() {deepEqual( Stem("nachtclub"), "nachtclub");});
test("nächte -> nacht", function() {deepEqual( Stem("nächte"), "nacht");});
test("nachteil -> nachteil", function() {deepEqual( Stem("nachteil"), "nachteil");});
test("nachteile -> nachteil", function() {deepEqual( Stem("nachteile"), "nachteil");});
test("nachteiligen -> nachteil", function() {deepEqual( Stem("nachteiligen"), "nachteil");});
test("nächten -> nacht", function() {deepEqual( Stem("nächten"), "nacht");});
test("nachtessen -> nachtess", function() {deepEqual( Stem("nachtessen"), "nachtess");});
test("nachteulen -> nachteul", function() {deepEqual( Stem("nachteulen"), "nachteul");});
test("nachtfahne -> nachtfahn", function() {deepEqual( Stem("nachtfahne"), "nachtfahn");});
test("nachtfalter -> nachtfalt", function() {deepEqual( Stem("nachtfalter"), "nachtfalt");});
test("nachtfaltern -> nachtfalt", function() {deepEqual( Stem("nachtfaltern"), "nachtfalt");});
test("nachtfee -> nachtfe", function() {deepEqual( Stem("nachtfee"), "nachtfe");});
test("nachtgebet -> nachtgebet", function() {deepEqual( Stem("nachtgebet"), "nachtgebet");});
test("nachtgejaide -> nachtgejaid", function() {deepEqual( Stem("nachtgejaide"), "nachtgejaid");});
test("nachthäubchen -> nachthaubch", function() {deepEqual( Stem("nachthäubchen"), "nachthaubch");});
test("nachthemd -> nachthemd", function() {deepEqual( Stem("nachthemd"), "nachthemd");});
test("nachthemdchen -> nachthemdch", function() {deepEqual( Stem("nachthemdchen"), "nachthemdch");});
test("nachthimmel -> nachthimmel", function() {deepEqual( Stem("nachthimmel"), "nachthimmel");});
test("nachtig -> nachtig", function() {deepEqual( Stem("nachtig"), "nachtig");});
test("nachtigall -> nachtigall", function() {deepEqual( Stem("nachtigall"), "nachtigall");});
test("nachtigallen -> nachtigall", function() {deepEqual( Stem("nachtigallen"), "nachtigall");});
test("nachtisch -> nachtisch", function() {deepEqual( Stem("nachtisch"), "nachtisch");});
test("nachtjoppe -> nachtjopp", function() {deepEqual( Stem("nachtjoppe"), "nachtjopp");});
test("nachtklee -> nachtkle", function() {deepEqual( Stem("nachtklee"), "nachtkle");});
test("nächtlich -> nachtlich", function() {deepEqual( Stem("nächtlich"), "nachtlich");});
test("nächtliche -> nachtlich", function() {deepEqual( Stem("nächtliche"), "nachtlich");});
test("nächtlichen -> nachtlich", function() {deepEqual( Stem("nächtlichen"), "nachtlich");});
test("nächtlicher -> nachtlich", function() {deepEqual( Stem("nächtlicher"), "nachtlich");});
test("nachtluft -> nachtluft", function() {deepEqual( Stem("nachtluft"), "nachtluft");});
test("nachtmützen -> nachtmutz", function() {deepEqual( Stem("nachtmützen"), "nachtmutz");});
test("nachtnebel -> nachtnebel", function() {deepEqual( Stem("nachtnebel"), "nachtnebel");});
test("nachtragen -> nachtrag", function() {deepEqual( Stem("nachtragen"), "nachtrag");});
test("nachträglich -> nachtrag", function() {deepEqual( Stem("nachträglich"), "nachtrag");});
test("nachtrauern -> nachtrau", function() {deepEqual( Stem("nachtrauern"), "nachtrau");});
test("nachts -> nacht", function() {deepEqual( Stem("nachts"), "nacht");});
test("nachtschmetterlinge -> nachtschmetterling", function() {deepEqual( Stem("nachtschmetterlinge"), "nachtschmetterling");});
test("nachtschwarzen -> nachtschwarz", function() {deepEqual( Stem("nachtschwarzen"), "nachtschwarz");});
test("nachtstillen -> nachtstill", function() {deepEqual( Stem("nachtstillen"), "nachtstill");});
test("nachttau -> nachttau", function() {deepEqual( Stem("nachttau"), "nachttau");});
test("nachtwächter -> nachtwacht", function() {deepEqual( Stem("nachtwächter"), "nachtwacht");});
test("nachtwächtern -> nachtwacht", function() {deepEqual( Stem("nachtwächtern"), "nachtwacht");});
test("nachtwandel -> nachtwandel", function() {deepEqual( Stem("nachtwandel"), "nachtwandel");});
test("nachtwandler -> nachtwandl", function() {deepEqual( Stem("nachtwandler"), "nachtwandl");});
test("nachvollziehen -> nachvollzieh", function() {deepEqual( Stem("nachvollziehen"), "nachvollzieh");});
test("nachwandelten -> nachwandelt", function() {deepEqual( Stem("nachwandelten"), "nachwandelt");});
test("nachwelt -> nachwelt", function() {deepEqual( Stem("nachwelt"), "nachwelt");});
test("nachwuchs -> nachwuch", function() {deepEqual( Stem("nachwuchs"), "nachwuch");});
test("nachzählte -> nachzahlt", function() {deepEqual( Stem("nachzählte"), "nachzahlt");});
test("nachzottelte -> nachzottelt", function() {deepEqual( Stem("nachzottelte"), "nachzottelt");});
test("nachzuahmen -> nachzuahm", function() {deepEqual( Stem("nachzuahmen"), "nachzuahm");});
test("nachzubilden -> nachzubild", function() {deepEqual( Stem("nachzubilden"), "nachzubild");});
test("nachzublicken -> nachzublick", function() {deepEqual( Stem("nachzublicken"), "nachzublick");});
test("nachzudenken -> nachzudenk", function() {deepEqual( Stem("nachzudenken"), "nachzudenk");});
test("nachzufahren -> nachzufahr", function() {deepEqual( Stem("nachzufahren"), "nachzufahr");});
test("nachzufragen -> nachzufrag", function() {deepEqual( Stem("nachzufragen"), "nachzufrag");});
test("nachzufüllen -> nachzufull", function() {deepEqual( Stem("nachzufüllen"), "nachzufull");});
test("nachzugehen -> nachzugeh", function() {deepEqual( Stem("nachzugehen"), "nachzugeh");});
test("nachzuhängen -> nachzuhang", function() {deepEqual( Stem("nachzuhängen"), "nachzuhang");});
test("nachzuholen -> nachzuhol", function() {deepEqual( Stem("nachzuholen"), "nachzuhol");});
test("nachzurufen -> nachzuruf", function() {deepEqual( Stem("nachzurufen"), "nachzuruf");});
test("nachzuschauen -> nachzuschau", function() {deepEqual( Stem("nachzuschauen"), "nachzuschau");});
test("nachzusehen -> nachzuseh", function() {deepEqual( Stem("nachzusehen"), "nachzuseh");});
test("nachzuspüren -> nachzuspur", function() {deepEqual( Stem("nachzuspüren"), "nachzuspur");});
test("nachzustreben -> nachzustreb", function() {deepEqual( Stem("nachzustreben"), "nachzustreb");});
test("nachzusuchen -> nachzusuch", function() {deepEqual( Stem("nachzusuchen"), "nachzusuch");});
test("nachzuweisen -> nachzuweis", function() {deepEqual( Stem("nachzuweisen"), "nachzuweis");});
test("nacken -> nack", function() {deepEqual( Stem("nacken"), "nack");});
test("nacketes -> nacket", function() {deepEqual( Stem("nacketes"), "nacket");});
test("nackt -> nackt", function() {deepEqual( Stem("nackt"), "nackt");});
test("nackte -> nackt", function() {deepEqual( Stem("nackte"), "nackt");});
test("nackten -> nackt", function() {deepEqual( Stem("nackten"), "nackt");});
test("nacktheit -> nacktheit", function() {deepEqual( Stem("nacktheit"), "nacktheit");});
test("nadab -> nadab", function() {deepEqual( Stem("nadab"), "nadab");});
test("nadel -> nadel", function() {deepEqual( Stem("nadel"), "nadel");});
test("nadelbüchse -> nadelbuchs", function() {deepEqual( Stem("nadelbüchse"), "nadelbuchs");});
test("nadelgras -> nadelgras", function() {deepEqual( Stem("nadelgras"), "nadelgras");});
test("nadelöhr -> nadelohr", function() {deepEqual( Stem("nadelöhr"), "nadelohr");});
test("nadelzunge -> nadelz", function() {deepEqual( Stem("nadelzunge"), "nadelz");});
test("nagel -> nagel", function() {deepEqual( Stem("nagel"), "nagel");});
test("nägelein -> nagelein", function() {deepEqual( Stem("nägelein"), "nagelein");});
test("nägeln -> nageln", function() {deepEqual( Stem("nägeln"), "nageln");});
test("nagelschuhe -> nagelschuh", function() {deepEqual( Stem("nagelschuhe"), "nagelschuh");});
test("nagende -> nagend", function() {deepEqual( Stem("nagende"), "nagend");});
test("nagerln -> nagerln", function() {deepEqual( Stem("nagerln"), "nagerln");});
test("nagerlstock -> nagerlstock", function() {deepEqual( Stem("nagerlstock"), "nagerlstock");});
test("nah -> nah", function() {deepEqual( Stem("nah"), "nah");});
test("nahe -> nah", function() {deepEqual( Stem("nahe"), "nah");});
test("nähe -> nah", function() {deepEqual( Stem("nähe"), "nah");});
test("nahegelegenen -> nahegeleg", function() {deepEqual( Stem("nahegelegenen"), "nahegeleg");});
test("nahegelegt -> nahegelegt", function() {deepEqual( Stem("nahegelegt"), "nahegelegt");});
test("nahekommen -> nahekomm", function() {deepEqual( Stem("nahekommen"), "nahekomm");});
test("naheliegendste -> nahelieg", function() {deepEqual( Stem("naheliegendste"), "nahelieg");});
test("nahen -> nah", function() {deepEqual( Stem("nahen"), "nah");});
test("nahend -> nahend", function() {deepEqual( Stem("nahend"), "nahend");});
test("nahende -> nahend", function() {deepEqual( Stem("nahende"), "nahend");});
test("nahenden -> nahend", function() {deepEqual( Stem("nahenden"), "nahend");});
test("naher -> nah", function() {deepEqual( Stem("naher"), "nah");});
test("näher -> nah", function() {deepEqual( Stem("näher"), "nah");});
test("näheren -> nah", function() {deepEqual( Stem("näheren"), "nah");});
test("näherer -> nah", function() {deepEqual( Stem("näherer"), "nah");});
test("näheres -> nah", function() {deepEqual( Stem("näheres"), "nah");});
test("nähern -> nah", function() {deepEqual( Stem("nähern"), "nah");});
test("nähert -> nahert", function() {deepEqual( Stem("nähert"), "nahert");});
test("näherte -> nahert", function() {deepEqual( Stem("näherte"), "nahert");});
test("näherten -> nahert", function() {deepEqual( Stem("näherten"), "nahert");});
test("nähertreten -> nahertret", function() {deepEqual( Stem("nähertreten"), "nahertret");});
test("nähete -> nahet", function() {deepEqual( Stem("nähete"), "nahet");});
test("näheten -> nahet", function() {deepEqual( Stem("näheten"), "nahet");});
test("nahezu -> nahezu", function() {deepEqual( Stem("nahezu"), "nahezu");});
test("nahm -> nahm", function() {deepEqual( Stem("nahm"), "nahm");});
test("nähme -> nahm", function() {deepEqual( Stem("nähme"), "nahm");});
test("nahmen -> nahm", function() {deepEqual( Stem("nahmen"), "nahm");});
test("nähmen -> nahm", function() {deepEqual( Stem("nähmen"), "nahm");});
test("nähren -> nahr", function() {deepEqual( Stem("nähren"), "nahr");});
test("nahrhaft -> nahrhaft", function() {deepEqual( Stem("nahrhaft"), "nahrhaft");});
test("nährmitteln -> nahrmitteln", function() {deepEqual( Stem("nährmitteln"), "nahrmitteln");});
test("nährte -> nahrt", function() {deepEqual( Stem("nährte"), "nahrt");});
test("nahrung -> nahrung", function() {deepEqual( Stem("nahrung"), "nahrung");});
test("nahrungsmittel -> nahrungsmittel", function() {deepEqual( Stem("nahrungsmittel"), "nahrungsmittel");});
test("naht -> naht", function() {deepEqual( Stem("naht"), "naht");});
test("nahtbeflissenen -> nahtbefliss", function() {deepEqual( Stem("nahtbeflissenen"), "nahtbefliss");});
test("nahte -> naht", function() {deepEqual( Stem("nahte"), "naht");});
test("nähten -> naht", function() {deepEqual( Stem("nähten"), "naht");});
test("nahum -> nahum", function() {deepEqual( Stem("nahum"), "nahum");});
test("nai -> nai", function() {deepEqual( Stem("nai"), "nai");});
test("naiv -> naiv", function() {deepEqual( Stem("naiv"), "naiv");});
test("näm -> nam", function() {deepEqual( Stem("näm"), "nam");});
test("name -> nam", function() {deepEqual( Stem("name"), "nam");});
test("namen -> nam", function() {deepEqual( Stem("namen"), "nam");});
test("namenlose -> namenlos", function() {deepEqual( Stem("namenlose"), "namenlos");});
test("namenlosen -> namenlos", function() {deepEqual( Stem("namenlosen"), "namenlos");});
test("namens -> nam", function() {deepEqual( Stem("namens"), "nam");});
test("namenstag -> namenstag", function() {deepEqual( Stem("namenstag"), "namenstag");});
test("namenstage -> namenstag", function() {deepEqual( Stem("namenstage"), "namenstag");});
test("namentlich -> nament", function() {deepEqual( Stem("namentlich"), "nament");});
test("namevor -> namevor", function() {deepEqual( Stem("namevor"), "namevor");});
test("namhafte -> namhaft", function() {deepEqual( Stem("namhafte"), "namhaft");});
test("nämlich -> namlich", function() {deepEqual( Stem("nämlich"), "namlich");});
test("nämliche -> namlich", function() {deepEqual( Stem("nämliche"), "namlich");});
test("nämlichen -> namlich", function() {deepEqual( Stem("nämlichen"), "namlich");});
test("nannte -> nannt", function() {deepEqual( Stem("nannte"), "nannt");});
test("nannten -> nannt", function() {deepEqual( Stem("nannten"), "nannt");});
test("nanu -> nanu", function() {deepEqual( Stem("nanu"), "nanu");});
test("näpheg -> napheg", function() {deepEqual( Stem("näpheg"), "napheg");});
test("naphthali -> naphthali", function() {deepEqual( Stem("naphthali"), "naphthali");});
test("napoleon -> napoleon", function() {deepEqual( Stem("napoleon"), "napoleon");});
test("napoleonischen -> napoleon", function() {deepEqual( Stem("napoleonischen"), "napoleon");});
test("napoleons -> napoleon", function() {deepEqual( Stem("napoleons"), "napoleon");});
test("napoleonsbild -> napoleonsbild", function() {deepEqual( Stem("napoleonsbild"), "napoleonsbild");});
test("narben -> narb", function() {deepEqual( Stem("narben"), "narb");});
test("narbenbein -> narbenbein", function() {deepEqual( Stem("narbenbein"), "narbenbein");});
test("narr -> narr", function() {deepEqual( Stem("narr"), "narr");});
test("närrchen -> narrch", function() {deepEqual( Stem("närrchen"), "narrch");});
test("narren -> narr", function() {deepEqual( Stem("narren"), "narr");});
test("narrenspossen -> narrensposs", function() {deepEqual( Stem("narrenspossen"), "narrensposs");});
test("narret -> narret", function() {deepEqual( Stem("narret"), "narret");});
test("narretei -> narretei", function() {deepEqual( Stem("narretei"), "narretei");});
test("narrheit -> narrheit", function() {deepEqual( Stem("narrheit"), "narrheit");});
test("närrin -> narrin", function() {deepEqual( Stem("närrin"), "narrin");});
test("närrische -> narrisch", function() {deepEqual( Stem("närrische"), "narrisch");});
test("närrischem -> narrisch", function() {deepEqual( Stem("närrischem"), "narrisch");});
test("närrischen -> narrisch", function() {deepEqual( Stem("närrischen"), "narrisch");});
test("närrischer -> narrisch", function() {deepEqual( Stem("närrischer"), "narrisch");});
test("naschen -> nasch", function() {deepEqual( Stem("naschen"), "nasch");});
test("näschen -> nasch", function() {deepEqual( Stem("näschen"), "nasch");});
test("nascherei -> nascherei", function() {deepEqual( Stem("nascherei"), "nascherei");});
test("naschhaftigkeit -> naschhaft", function() {deepEqual( Stem("naschhaftigkeit"), "naschhaft");});
test("nase -> nas", function() {deepEqual( Stem("nase"), "nas");});
test("nasegrün -> nasegrun", function() {deepEqual( Stem("nasegrün"), "nasegrun");});
test("nasen -> nas", function() {deepEqual( Stem("nasen"), "nas");});
test("nasenringe -> nasenring", function() {deepEqual( Stem("nasenringe"), "nasenring");});
test("nasenspitze -> nasenspitz", function() {deepEqual( Stem("nasenspitze"), "nasenspitz");});
test("nasenstüber -> nasenstub", function() {deepEqual( Stem("nasenstüber"), "nasenstub");});
test("nasenwurzel -> nasenwurzel", function() {deepEqual( Stem("nasenwurzel"), "nasenwurzel");});
test("nashorn -> nashorn", function() {deepEqual( Stem("nashorn"), "nashorn");});
test("nass -> nass", function() {deepEqual( Stem("nass"), "nass");});
test("naß -> nass", function() {deepEqual( Stem("naß"), "nass");});
test("nassauer -> nassau", function() {deepEqual( Stem("nassauer"), "nassau");});
test("nasse -> nass", function() {deepEqual( Stem("nasse"), "nass");});
test("nässe -> nass", function() {deepEqual( Stem("nässe"), "nass");});
test("nassen -> nass", function() {deepEqual( Stem("nassen"), "nass");});
test("nati -> nati", function() {deepEqual( Stem("nati"), "nati");});
test("nation -> nation", function() {deepEqual( Stem("nation"), "nation");});
test("nationalbank -> nationalbank", function() {deepEqual( Stem("nationalbank"), "nationalbank");});
test("nationaldenkmal -> nationaldenkmal", function() {deepEqual( Stem("nationaldenkmal"), "nationaldenkmal");});
test("nationale -> national", function() {deepEqual( Stem("nationale"), "national");});
test("nationalen -> national", function() {deepEqual( Stem("nationalen"), "national");});
test("nationalhelden -> nationalheld", function() {deepEqual( Stem("nationalhelden"), "nationalheld");});
test("nationalrat -> nationalrat", function() {deepEqual( Stem("nationalrat"), "nationalrat");});
test("nationalräte -> nationalrat", function() {deepEqual( Stem("nationalräte"), "nationalrat");});
test("nationalrätliche -> nationalrat", function() {deepEqual( Stem("nationalrätliche"), "nationalrat");});
test("nationen -> nation", function() {deepEqual( Stem("nationen"), "nation");});
test("natur -> natur", function() {deepEqual( Stem("natur"), "natur");});
test("natura -> natura", function() {deepEqual( Stem("natura"), "natura");});
test("naturae -> natura", function() {deepEqual( Stem("naturae"), "natura");});
test("naturanstalt -> naturanstalt", function() {deepEqual( Stem("naturanstalt"), "naturanstalt");});
test("naturbedürfnis -> naturbedurfnis", function() {deepEqual( Stem("naturbedürfnis"), "naturbedurfnis");});
test("naturbegriffe -> naturbegriff", function() {deepEqual( Stem("naturbegriffe"), "naturbegriff");});
test("naturbetrachtung -> naturbetracht", function() {deepEqual( Stem("naturbetrachtung"), "naturbetracht");});
test("natureinfalt -> natureinfalt", function() {deepEqual( Stem("natureinfalt"), "natureinfalt");});
test("natureinrichtungen -> natureinricht", function() {deepEqual( Stem("natureinrichtungen"), "natureinricht");});
test("naturen -> natur", function() {deepEqual( Stem("naturen"), "natur");});
test("naturerkenntnis -> naturerkenntnis", function() {deepEqual( Stem("naturerkenntnis"), "naturerkenntnis");});
test("naturerscheinungen -> naturerschein", function() {deepEqual( Stem("naturerscheinungen"), "naturerschein");});
test("naturfreund -> naturfreund", function() {deepEqual( Stem("naturfreund"), "naturfreund");});
test("naturgabe -> naturgab", function() {deepEqual( Stem("naturgabe"), "naturgab");});
test("naturgange -> naturgang", function() {deepEqual( Stem("naturgange"), "naturgang");});
test("naturganzes -> naturganz", function() {deepEqual( Stem("naturganzes"), "naturganz");});
test("naturgegenstände -> naturgegenstand", function() {deepEqual( Stem("naturgegenstände"), "naturgegenstand");});
test("naturgeheimnisse -> naturgeheimnis", function() {deepEqual( Stem("naturgeheimnisse"), "naturgeheimnis");});
test("naturgeister -> naturgeist", function() {deepEqual( Stem("naturgeister"), "naturgeist");});
test("naturgeistern -> naturgeist", function() {deepEqual( Stem("naturgeistern"), "naturgeist");});
test("naturgesetz -> naturgesetz", function() {deepEqual( Stem("naturgesetz"), "naturgesetz");});
test("naturgesetze -> naturgesetz", function() {deepEqual( Stem("naturgesetze"), "naturgesetz");});
test("naturgesetzen -> naturgesetz", function() {deepEqual( Stem("naturgesetzen"), "naturgesetz");});
test("naturgesetzes -> naturgesetz", function() {deepEqual( Stem("naturgesetzes"), "naturgesetz");});
test("naturgewalten -> naturgewalt", function() {deepEqual( Stem("naturgewalten"), "naturgewalt");});
test("naturkenntnis -> naturkenntnis", function() {deepEqual( Stem("naturkenntnis"), "naturkenntnis");});
test("naturkette -> naturkett", function() {deepEqual( Stem("naturkette"), "naturkett");});
test("naturkräfte -> naturkraft", function() {deepEqual( Stem("naturkräfte"), "naturkraft");});
test("naturlaufe -> naturlauf", function() {deepEqual( Stem("naturlaufe"), "naturlauf");});
test("natürlich -> natur", function() {deepEqual( Stem("natürlich"), "natur");});
test("natürliche -> natur", function() {deepEqual( Stem("natürliche"), "natur");});
test("natürlichem -> natur", function() {deepEqual( Stem("natürlichem"), "natur");});
test("natürlichen -> natur", function() {deepEqual( Stem("natürlichen"), "natur");});
test("natürlicher -> natur", function() {deepEqual( Stem("natürlicher"), "natur");});
test("natürliches -> natur", function() {deepEqual( Stem("natürliches"), "natur");});
test("natürlichkeit -> natur", function() {deepEqual( Stem("natürlichkeit"), "natur");});
test("natürlichste -> natur", function() {deepEqual( Stem("natürlichste"), "natur");});
test("natürlieh -> naturlieh", function() {deepEqual( Stem("natürlieh"), "naturlieh");});
test("naturmechanismus -> naturmechanismus", function() {deepEqual( Stem("naturmechanismus"), "naturmechanismus");});
test("naturnotwendigkeit -> naturnotwend", function() {deepEqual( Stem("naturnotwendigkeit"), "naturnotwend");});
test("naturordnung -> naturordn", function() {deepEqual( Stem("naturordnung"), "naturordn");});
test("naturspiel -> naturspiel", function() {deepEqual( Stem("naturspiel"), "naturspiel");});
test("naturursachen -> naturursach", function() {deepEqual( Stem("naturursachen"), "naturursach");});
test("naturvergötterung -> naturvergotter", function() {deepEqual( Stem("naturvergötterung"), "naturvergotter");});
test("naturverknüpfung -> naturverknupf", function() {deepEqual( Stem("naturverknüpfung"), "naturverknupf");});
test("naturvermögen -> naturvermog", function() {deepEqual( Stem("naturvermögen"), "naturvermog");});
test("naturvollkommenheit -> naturvollkomm", function() {deepEqual( Stem("naturvollkommenheit"), "naturvollkomm");});
test("naturwege -> naturweg", function() {deepEqual( Stem("naturwege"), "naturweg");});
test("naturwissenschaft -> naturwissenschaft", function() {deepEqual( Stem("naturwissenschaft"), "naturwissenschaft");});
test("naturwissenschafter -> naturwissenschaft", function() {deepEqual( Stem("naturwissenschafter"), "naturwissenschaft");});
test("naturwüchsige -> naturwuchs", function() {deepEqual( Stem("naturwüchsige"), "naturwuchs");});
test("naus -> naus", function() {deepEqual( Stem("naus"), "naus");});
test("nauszahlen -> nauszahl", function() {deepEqual( Stem("nauszahlen"), "nauszahl");});
test("nazi -> nazi", function() {deepEqual( Stem("nazi"), "nazi");});
test("nazigold -> nazigold", function() {deepEqual( Stem("nazigold"), "nazigold");});
test("nazimi -> nazimi", function() {deepEqual( Stem("nazimi"), "nazimi");});
test("nazis -> nazis", function() {deepEqual( Stem("nazis"), "nazis");});
test("ne -> ne", function() {deepEqual( Stem("ne"), "ne");});
test("neapel -> neapel", function() {deepEqual( Stem("neapel"), "neapel");});
test("neb -> neb", function() {deepEqual( Stem("neb"), "neb");});
test("nebajoths -> nebajoth", function() {deepEqual( Stem("nebajoths"), "nebajoth");});
test("nebel -> nebel", function() {deepEqual( Stem("nebel"), "nebel");});
test("nebelfahnen -> nebelfahn", function() {deepEqual( Stem("nebelfahnen"), "nebelfahn");});
test("nebelfetzen -> nebelfetz", function() {deepEqual( Stem("nebelfetzen"), "nebelfetz");});
test("nebelfrauen -> nebelfrau", function() {deepEqual( Stem("nebelfrauen"), "nebelfrau");});
test("nebelhafte -> nebelhaft", function() {deepEqual( Stem("nebelhafte"), "nebelhaft");});
test("nebelkrähe -> nebelkrah", function() {deepEqual( Stem("nebelkrähe"), "nebelkrah");});
test("nebelluft -> nebelluft", function() {deepEqual( Stem("nebelluft"), "nebelluft");});
test("nebelmassen -> nebelmass", function() {deepEqual( Stem("nebelmassen"), "nebelmass");});
test("nebeln -> nebeln", function() {deepEqual( Stem("nebeln"), "nebeln");});
test("nebelspalter -> nebelspalt", function() {deepEqual( Stem("nebelspalter"), "nebelspalt");});
test("nebelstreif -> nebelstreif", function() {deepEqual( Stem("nebelstreif"), "nebelstreif");});
test("nebelweg -> nebelweg", function() {deepEqual( Stem("nebelweg"), "nebelweg");});
test("nebelwind -> nebelwind", function() {deepEqual( Stem("nebelwind"), "nebelwind");});
test("nebelzug -> nebelzug", function() {deepEqual( Stem("nebelzug"), "nebelzug");});
test("neben -> neb", function() {deepEqual( Stem("neben"), "neb");});
test("nebenämter -> nebenamt", function() {deepEqual( Stem("nebenämter"), "nebenamt");});
test("nebenan -> nebenan", function() {deepEqual( Stem("nebenan"), "nebenan");});
test("nebenbei -> nebenbei", function() {deepEqual( Stem("nebenbei"), "nebenbei");});
test("nebenbestimmungen -> nebenbestimm", function() {deepEqual( Stem("nebenbestimmungen"), "nebenbestimm");});
test("nebenbuhler -> nebenbuhl", function() {deepEqual( Stem("nebenbuhler"), "nebenbuhl");});
test("nebenbuhlern -> nebenbuhl", function() {deepEqual( Stem("nebenbuhlern"), "nebenbuhl");});
test("nebeneinander -> nebeneinand", function() {deepEqual( Stem("nebeneinander"), "nebeneinand");});
test("nebeneinanderliegende -> nebeneinanderlieg", function() {deepEqual( Stem("nebeneinanderliegende"), "nebeneinanderlieg");});
test("nebengebäuden -> nebengebaud", function() {deepEqual( Stem("nebengebäuden"), "nebengebaud");});
test("nebengesellen -> nebengesell", function() {deepEqual( Stem("nebengesellen"), "nebengesell");});
test("nebenherlaufen -> nebenherlauf", function() {deepEqual( Stem("nebenherlaufen"), "nebenherlauf");});
test("nebenmenschen -> nebenmensch", function() {deepEqual( Stem("nebenmenschen"), "nebenmensch");});
test("nebensache -> nebensach", function() {deepEqual( Stem("nebensache"), "nebensach");});
test("nebenstube -> nebenstub", function() {deepEqual( Stem("nebenstube"), "nebenstub");});
test("nebenzimmer -> nebenzimm", function() {deepEqual( Stem("nebenzimmer"), "nebenzimm");});
test("nebenzimmers -> nebenzimm", function() {deepEqual( Stem("nebenzimmers"), "nebenzimm");});
test("nebst -> nebst", function() {deepEqual( Stem("nebst"), "nebst");});
test("nebukadnezar -> nebukadnezar", function() {deepEqual( Stem("nebukadnezar"), "nebukadnezar");});
test("nebukadnezars -> nebukadnezar", function() {deepEqual( Stem("nebukadnezars"), "nebukadnezar");});
test("necesse -> necess", function() {deepEqual( Stem("necesse"), "necess");});
test("neckt -> neckt", function() {deepEqual( Stem("neckt"), "neckt");});
test("neckte -> neckt", function() {deepEqual( Stem("neckte"), "neckt");});
test("nefas -> nefas", function() {deepEqual( Stem("nefas"), "nefas");});
test("neffe -> neff", function() {deepEqual( Stem("neffe"), "neff");});
test("neffen -> neff", function() {deepEqual( Stem("neffen"), "neff");});
test("negativ -> negativ", function() {deepEqual( Stem("negativ"), "negativ");});
test("negative -> negativ", function() {deepEqual( Stem("negative"), "negativ");});
test("negativen -> negativ", function() {deepEqual( Stem("negativen"), "negativ");});
test("negatives -> negativ", function() {deepEqual( Stem("negatives"), "negativ");});
test("nehme -> nehm", function() {deepEqual( Stem("nehme"), "nehm");});
test("nehmen -> nehm", function() {deepEqual( Stem("nehmen"), "nehm");});
test("nehmend -> nehmend", function() {deepEqual( Stem("nehmend"), "nehmend");});
test("nehmenden -> nehmend", function() {deepEqual( Stem("nehmenden"), "nehmend");});
test("nehmet -> nehmet", function() {deepEqual( Stem("nehmet"), "nehmet");});
test("nehmt -> nehmt", function() {deepEqual( Stem("nehmt"), "nehmt");});
test("neid -> neid", function() {deepEqual( Stem("neid"), "neid");});
test("neides -> neid", function() {deepEqual( Stem("neides"), "neid");});
test("neideswut -> neideswut", function() {deepEqual( Stem("neideswut"), "neideswut");});
test("neidisch -> neidisch", function() {deepEqual( Stem("neidisch"), "neidisch");});
test("neigen -> neig", function() {deepEqual( Stem("neigen"), "neig");});
test("neigend -> neigend", function() {deepEqual( Stem("neigend"), "neigend");});
test("neiget -> neiget", function() {deepEqual( Stem("neiget"), "neiget");});
test("neigt -> neigt", function() {deepEqual( Stem("neigt"), "neigt");});
test("neigte -> neigt", function() {deepEqual( Stem("neigte"), "neigt");});
test("neigten -> neigt", function() {deepEqual( Stem("neigten"), "neigt");});
test("neigung -> neigung", function() {deepEqual( Stem("neigung"), "neigung");});
test("neigungen -> neigung", function() {deepEqual( Stem("neigungen"), "neigung");});
test("nein -> nein", function() {deepEqual( Stem("nein"), "nein");});
test("nelke -> nelk", function() {deepEqual( Stem("nelke"), "nelk");});
test("nem -> nem", function() {deepEqual( Stem("nem"), "nem");});
test("nen -> nen", function() {deepEqual( Stem("nen"), "nen");});
test("nenne -> nenn", function() {deepEqual( Stem("nenne"), "nenn");});
test("nennen -> nenn", function() {deepEqual( Stem("nennen"), "nenn");});
test("nennest -> nenn", function() {deepEqual( Stem("nennest"), "nenn");});
test("nennete -> nennet", function() {deepEqual( Stem("nennete"), "nennet");});
test("nennst -> nenn", function() {deepEqual( Stem("nennst"), "nenn");});
test("nennt -> nennt", function() {deepEqual( Stem("nennt"), "nennt");});
test("nephaim -> nephaim", function() {deepEqual( Stem("nephaim"), "nephaim");});
test("nephalim -> nephalim", function() {deepEqual( Stem("nephalim"), "nephalim");});
test("nephilim -> nephilim", function() {deepEqual( Stem("nephilim"), "nephilim");});
test("ner -> ner", function() {deepEqual( Stem("ner"), "ner");});
test("nervenden -> nervend", function() {deepEqual( Stem("nervenden"), "nervend");});
test("nervenfieber -> nervenfieb", function() {deepEqual( Stem("nervenfieber"), "nervenfieb");});
test("nervös -> nervos", function() {deepEqual( Stem("nervös"), "nervos");});
test("nervöse -> nervos", function() {deepEqual( Stem("nervöse"), "nervos");});
test("nervösem -> nervos", function() {deepEqual( Stem("nervösem"), "nervos");});
test("nervöser -> nervos", function() {deepEqual( Stem("nervöser"), "nervos");});
test("nessel -> nessel", function() {deepEqual( Stem("nessel"), "nessel");});
test("nesseln -> nesseln", function() {deepEqual( Stem("nesseln"), "nesseln");});
test("nest -> nest", function() {deepEqual( Stem("nest"), "nest");});
test("neste -> nest", function() {deepEqual( Stem("neste"), "nest");});
test("nesterchen -> nesterch", function() {deepEqual( Stem("nesterchen"), "nesterch");});
test("nestes -> nest", function() {deepEqual( Stem("nestes"), "nest");});
test("net -> net", function() {deepEqual( Stem("net"), "net");});
test("netscape -> netscap", function() {deepEqual( Stem("netscape"), "netscap");});
test("nett -> nett", function() {deepEqual( Stem("nett"), "nett");});
test("nettchen -> nettch", function() {deepEqual( Stem("nettchen"), "nettch");});
test("nettchens -> nettch", function() {deepEqual( Stem("nettchens"), "nettch");});
test("nette -> nett", function() {deepEqual( Stem("nette"), "nett");});
test("netten -> nett", function() {deepEqual( Stem("netten"), "nett");});
test("netter -> nett", function() {deepEqual( Stem("netter"), "nett");});
test("nettes -> nett", function() {deepEqual( Stem("nettes"), "nett");});
test("netz -> netz", function() {deepEqual( Stem("netz"), "netz");});
test("netze -> netz", function() {deepEqual( Stem("netze"), "netz");});
test("netzwerk -> netzwerk", function() {deepEqual( Stem("netzwerk"), "netzwerk");});
test("neu -> neu", function() {deepEqual( Stem("neu"), "neu");});
test("neuangekommene -> neuangekomm", function() {deepEqual( Stem("neuangekommene"), "neuangekomm");});
test("neuaufbau -> neuaufbau", function() {deepEqual( Stem("neuaufbau"), "neuaufbau");});
test("neubauten -> neubaut", function() {deepEqual( Stem("neubauten"), "neubaut");});
test("neubebaute -> neubebaut", function() {deepEqual( Stem("neubebaute"), "neubebaut");});
test("neubelebung -> neubeleb", function() {deepEqual( Stem("neubelebung"), "neubeleb");});
test("neubesetzung -> neubesetz", function() {deepEqual( Stem("neubesetzung"), "neubesetz");});
test("neue -> neu", function() {deepEqual( Stem("neue"), "neu");});
test("neuem -> neu", function() {deepEqual( Stem("neuem"), "neu");});
test("neuen -> neu", function() {deepEqual( Stem("neuen"), "neu");});
test("neuer -> neu", function() {deepEqual( Stem("neuer"), "neu");});
test("neuerdings -> neuerding", function() {deepEqual( Stem("neuerdings"), "neuerding");});
test("neueren -> neu", function() {deepEqual( Stem("neueren"), "neu");});
test("neuerliche -> neu", function() {deepEqual( Stem("neuerliche"), "neu");});
test("neuern -> neu", function() {deepEqual( Stem("neuern"), "neu");});
test("neues -> neu", function() {deepEqual( Stem("neues"), "neu");});
test("neuesdas -> neuesdas", function() {deepEqual( Stem("neuesdas"), "neuesdas");});
test("neueste -> neu", function() {deepEqual( Stem("neueste"), "neu");});
test("neuesten -> neu", function() {deepEqual( Stem("neuesten"), "neu");});
test("neugeborene -> neugebor", function() {deepEqual( Stem("neugeborene"), "neugebor");});
test("neugeborenen -> neugebor", function() {deepEqual( Stem("neugeborenen"), "neugebor");});
test("neugegründeten -> neugegrundet", function() {deepEqual( Stem("neugegründeten"), "neugegrundet");});
test("neugeschaffen -> neugeschaff", function() {deepEqual( Stem("neugeschaffen"), "neugeschaff");});
test("neugesprochenen -> neugesproch", function() {deepEqual( Stem("neugesprochenen"), "neugesproch");});
test("neugestählter -> neugestahlt", function() {deepEqual( Stem("neugestählter"), "neugestahlt");});
test("neugier -> neugi", function() {deepEqual( Stem("neugier"), "neugi");});
test("neugierde -> neugierd", function() {deepEqual( Stem("neugierde"), "neugierd");});
test("neugierig -> neugier", function() {deepEqual( Stem("neugierig"), "neugier");});
test("neugierigen -> neugier", function() {deepEqual( Stem("neugierigen"), "neugier");});
test("neugieriger -> neugier", function() {deepEqual( Stem("neugieriger"), "neugier");});
test("neugotischem -> neugot", function() {deepEqual( Stem("neugotischem"), "neugot");});
test("neuigkeit -> neuig", function() {deepEqual( Stem("neuigkeit"), "neuig");});
test("neulich -> neulich", function() {deepEqual( Stem("neulich"), "neulich");});
test("neumonde -> neumond", function() {deepEqual( Stem("neumonde"), "neumond");});
test("neun -> neun", function() {deepEqual( Stem("neun"), "neun");});
test("neunhundert -> neunhundert", function() {deepEqual( Stem("neunhundert"), "neunhundert");});
test("neunte -> neunt", function() {deepEqual( Stem("neunte"), "neunt");});
test("neunten -> neunt", function() {deepEqual( Stem("neunten"), "neunt");});
test("neuntes -> neunt", function() {deepEqual( Stem("neuntes"), "neunt");});
test("neunundneunzig -> neunundneunz", function() {deepEqual( Stem("neunundneunzig"), "neunundneunz");});
test("neunundsechzig -> neunundsechz", function() {deepEqual( Stem("neunundsechzig"), "neunundsechz");});
test("neunundsiebzig -> neunundsiebz", function() {deepEqual( Stem("neunundsiebzig"), "neunundsiebz");});
test("neunundvierzigsten -> neunundvierz", function() {deepEqual( Stem("neunundvierzigsten"), "neunundvierz");});
test("neunzehn -> neunzehn", function() {deepEqual( Stem("neunzehn"), "neunzehn");});
test("neunzig -> neunzig", function() {deepEqual( Stem("neunzig"), "neunzig");});
test("neutestamentler -> neutestamentl", function() {deepEqual( Stem("neutestamentler"), "neutestamentl");});
test("neutrale -> neutral", function() {deepEqual( Stem("neutrale"), "neutral");});
test("neuübersetzung -> neuubersetz", function() {deepEqual( Stem("neuübersetzung"), "neuubersetz");});
test("neuwahlen -> neuwahl", function() {deepEqual( Stem("neuwahlen"), "neuwahl");});
test("neuyork -> neuyork", function() {deepEqual( Stem("neuyork"), "neuyork");});
test("new -> new", function() {deepEqual( Stem("new"), "new");});
test("newroz -> newroz", function() {deepEqual( Stem("newroz"), "newroz");});
test("nich -> nich", function() {deepEqual( Stem("nich"), "nich");});
test("nichs -> nich", function() {deepEqual( Stem("nichs"), "nich");});
test("nicht -> nicht", function() {deepEqual( Stem("nicht"), "nicht");});
test("nichtachtung -> nichtacht", function() {deepEqual( Stem("nichtachtung"), "nichtacht");});
test("nichtadligen -> nichtadl", function() {deepEqual( Stem("nichtadligen"), "nichtadl");});
test("nichtanfechtung -> nichtanfecht", function() {deepEqual( Stem("nichtanfechtung"), "nichtanfecht");});
test("nichtannahme -> nichtannahm", function() {deepEqual( Stem("nichtannahme"), "nichtannahm");});
test("nichtanwendung -> nichtanwend", function() {deepEqual( Stem("nichtanwendung"), "nichtanwend");});
test("nichtaussprechen -> nichtaussprech", function() {deepEqual( Stem("nichtaussprechen"), "nichtaussprech");});
test("nichtbefreiung -> nichtbefrei", function() {deepEqual( Stem("nichtbefreiung"), "nichtbefrei");});
test("nichten -> nicht", function() {deepEqual( Stem("nichten"), "nicht");});
test("nichtglauben -> nichtglaub", function() {deepEqual( Stem("nichtglauben"), "nichtglaub");});
test("nichtglaubens -> nichtglaub", function() {deepEqual( Stem("nichtglaubens"), "nichtglaub");});
test("nichtgute -> nichtgut", function() {deepEqual( Stem("nichtgute"), "nichtgut");});
test("nichtig -> nichtig", function() {deepEqual( Stem("nichtig"), "nichtig");});
test("nichtige -> nichtig", function() {deepEqual( Stem("nichtige"), "nichtig");});
test("nichtigen -> nichtig", function() {deepEqual( Stem("nichtigen"), "nichtig");});
test("nichtigkeiten -> nichtig", function() {deepEqual( Stem("nichtigkeiten"), "nichtig");});
test("nichtinnewerden -> nichtinnewerd", function() {deepEqual( Stem("nichtinnewerden"), "nichtinnewerd");});
test("nichtmaterielle -> nichtmateriell", function() {deepEqual( Stem("nichtmaterielle"), "nichtmateriell");});
test("nichtmediziner -> nichtmedizin", function() {deepEqual( Stem("nichtmediziner"), "nichtmedizin");});
test("nichtmerken -> nichtmerk", function() {deepEqual( Stem("nichtmerken"), "nichtmerk");});
test("nichtökonomische -> nichtokonom", function() {deepEqual( Stem("nichtökonomische"), "nichtokonom");});
test("nichtregistrierung -> nichtregistrier", function() {deepEqual( Stem("nichtregistrierung"), "nichtregistrier");});
test("nichts -> nicht", function() {deepEqual( Stem("nichts"), "nicht");});
test("nichtsdestominder -> nichtsdestomind", function() {deepEqual( Stem("nichtsdestominder"), "nichtsdestomind");});
test("nichtsdestoweniger -> nichtsdestowen", function() {deepEqual( Stem("nichtsdestoweniger"), "nichtsdestowen");});
test("nichtsehender -> nichtseh", function() {deepEqual( Stem("nichtsehender"), "nichtseh");});
test("nichtsein -> nichtsein", function() {deepEqual( Stem("nichtsein"), "nichtsein");});
test("nichtsnutzigen -> nichtsnutz", function() {deepEqual( Stem("nichtsnutzigen"), "nichtsnutz");});
test("nichtsnutzigsten -> nichtsnutz", function() {deepEqual( Stem("nichtsnutzigsten"), "nichtsnutz");});
test("nichtssagend -> nichtssag", function() {deepEqual( Stem("nichtssagend"), "nichtssag");});
test("nichtssagende -> nichtssag", function() {deepEqual( Stem("nichtssagende"), "nichtssag");});
test("nichtssagenden -> nichtssag", function() {deepEqual( Stem("nichtssagenden"), "nichtssag");});
test("nichtstun -> nichtstun", function() {deepEqual( Stem("nichtstun"), "nichtstun");});
test("nichtswürdige -> nichtswurd", function() {deepEqual( Stem("nichtswürdige"), "nichtswurd");});
test("nichtswürdigkeit -> nichtswurd", function() {deepEqual( Stem("nichtswürdigkeit"), "nichtswurd");});
test("nichttaten -> nichttat", function() {deepEqual( Stem("nichttaten"), "nichttat");});
test("nichtwähler -> nichtwahl", function() {deepEqual( Stem("nichtwähler"), "nichtwahl");});
test("nichtwahren -> nichtwahr", function() {deepEqual( Stem("nichtwahren"), "nichtwahr");});
test("nichtwahrheiten -> nichtwahr", function() {deepEqual( Stem("nichtwahrheiten"), "nichtwahr");});
test("nichtwahrnehmen -> nichtwahrnehm", function() {deepEqual( Stem("nichtwahrnehmen"), "nichtwahrnehm");});
test("nicken -> nick", function() {deepEqual( Stem("nicken"), "nick");});
test("nickend -> nickend", function() {deepEqual( Stem("nickend"), "nickend");});
test("nickt -> nickt", function() {deepEqual( Stem("nickt"), "nickt");});
test("nickte -> nickt", function() {deepEqual( Stem("nickte"), "nickt");});
test("nickten -> nickt", function() {deepEqual( Stem("nickten"), "nickt");});
test("nidit -> nidit", function() {deepEqual( Stem("nidit"), "nidit");});
test("nie -> nie", function() {deepEqual( Stem("nie"), "nie");});
test("nieder -> nied", function() {deepEqual( Stem("nieder"), "nied");});
test("niederbeugen -> niederbeug", function() {deepEqual( Stem("niederbeugen"), "niederbeug");});
test("niederbeugend -> niederbeug", function() {deepEqual( Stem("niederbeugend"), "niederbeug");});
test("niederblickend -> niederblick", function() {deepEqual( Stem("niederblickend"), "niederblick");});
test("niederdrücken -> niederdruck", function() {deepEqual( Stem("niederdrücken"), "niederdruck");});
test("niederdrückt -> niederdruckt", function() {deepEqual( Stem("niederdrückt"), "niederdruckt");});
test("niedere -> nied", function() {deepEqual( Stem("niedere"), "nied");});
test("niederen -> nied", function() {deepEqual( Stem("niederen"), "nied");});
test("niederfiel -> niederfiel", function() {deepEqual( Stem("niederfiel"), "niederfiel");});
test("niederfielen -> niederfiel", function() {deepEqual( Stem("niederfielen"), "niederfiel");});
test("niederfloss -> niederfloss", function() {deepEqual( Stem("niederfloss"), "niederfloss");});
test("niederfloß -> niederfloss", function() {deepEqual( Stem("niederfloß"), "niederfloss");});
test("niedergang -> niedergang", function() {deepEqual( Stem("niedergang"), "niedergang");});
test("niedergänge -> niedergang", function() {deepEqual( Stem("niedergänge"), "niedergang");});
test("niedergebeugt -> niedergebeugt", function() {deepEqual( Stem("niedergebeugt"), "niedergebeugt");});
test("niedergebrannt -> niedergebrannt", function() {deepEqual( Stem("niedergebrannt"), "niedergebrannt");});
test("niedergefahren -> niedergefahr", function() {deepEqual( Stem("niedergefahren"), "niedergefahr");});
test("niedergefallen -> niedergefall", function() {deepEqual( Stem("niedergefallen"), "niedergefall");});
test("niedergehend -> niedergeh", function() {deepEqual( Stem("niedergehend"), "niedergeh");});
test("niedergelassen -> niedergelass", function() {deepEqual( Stem("niedergelassen"), "niedergelass");});
test("niedergelegt -> niedergelegt", function() {deepEqual( Stem("niedergelegt"), "niedergelegt");});
test("niedergeschlagen -> niedergeschlag", function() {deepEqual( Stem("niedergeschlagen"), "niedergeschlag");});
test("niedergeschlagenen -> niedergeschlag", function() {deepEqual( Stem("niedergeschlagenen"), "niedergeschlag");});
test("niedergestiegen -> niedergestieg", function() {deepEqual( Stem("niedergestiegen"), "niedergestieg");});
test("niedergeworfen -> niedergeworf", function() {deepEqual( Stem("niedergeworfen"), "niedergeworf");});
test("niederging -> niederging", function() {deepEqual( Stem("niederging"), "niederging");});
test("niedergleiten -> niedergleit", function() {deepEqual( Stem("niedergleiten"), "niedergleit");});
test("niedergschlagen -> niedergschlag", function() {deepEqual( Stem("niedergschlagen"), "niedergschlag");});
test("niederhängt -> niederhangt", function() {deepEqual( Stem("niederhängt"), "niederhangt");});
test("niederklatschen -> niederklatsch", function() {deepEqual( Stem("niederklatschen"), "niederklatsch");});
test("niederknien -> niederkni", function() {deepEqual( Stem("niederknien"), "niederkni");});
test("niederkniend -> niederkni", function() {deepEqual( Stem("niederkniend"), "niederkni");});
test("niederknieten -> niederkniet", function() {deepEqual( Stem("niederknieten"), "niederkniet");});
test("niederkommen -> niederkomm", function() {deepEqual( Stem("niederkommen"), "niederkomm");});
test("niederlächelnd -> niederlachelnd", function() {deepEqual( Stem("niederlächelnd"), "niederlachelnd");});
test("niederlage -> niederlag", function() {deepEqual( Stem("niederlage"), "niederlag");});
test("niederlagen -> niederlag", function() {deepEqual( Stem("niederlagen"), "niederlag");});
test("niederlassen -> niederlass", function() {deepEqual( Stem("niederlassen"), "niederlass");});
test("niederliess -> niederliess", function() {deepEqual( Stem("niederliess"), "niederliess");});
test("niederließ -> niederliess", function() {deepEqual( Stem("niederließ"), "niederliess");});
test("niederregneten -> niederregnet", function() {deepEqual( Stem("niederregneten"), "niederregnet");});
test("niederschlagen -> niederschlag", function() {deepEqual( Stem("niederschlagen"), "niederschlag");});
test("niederschlägt -> niederschlagt", function() {deepEqual( Stem("niederschlägt"), "niederschlagt");});
test("niederschlug -> niederschlug", function() {deepEqual( Stem("niederschlug"), "niederschlug");});
test("niederschmetternder -> niederschmetternd", function() {deepEqual( Stem("niederschmetternder"), "niederschmetternd");});
test("niederschoss -> niederschoss", function() {deepEqual( Stem("niederschoss"), "niederschoss");});
test("niedersetzte -> niedersetzt", function() {deepEqual( Stem("niedersetzte"), "niedersetzt");});
test("niederstäubte -> niederstaubt", function() {deepEqual( Stem("niederstäubte"), "niederstaubt");});
test("niederste -> niederst", function() {deepEqual( Stem("niederste"), "niederst");});
test("niedersten -> niederst", function() {deepEqual( Stem("niedersten"), "niederst");});
test("niederstes -> niederst", function() {deepEqual( Stem("niederstes"), "niederst");});
test("niederstrich -> niederstrich", function() {deepEqual( Stem("niederstrich"), "niederstrich");});
test("niederträchtige -> niedertracht", function() {deepEqual( Stem("niederträchtige"), "niedertracht");});
test("niederträchtigen -> niedertracht", function() {deepEqual( Stem("niederträchtigen"), "niedertracht");});
test("niedertritt -> niedertritt", function() {deepEqual( Stem("niedertritt"), "niedertritt");});
test("niedertropften -> niedertropft", function() {deepEqual( Stem("niedertropften"), "niedertropft");});
test("niederwärts -> niederwart", function() {deepEqual( Stem("niederwärts"), "niederwart");});
test("niederwerfen -> niederwerf", function() {deepEqual( Stem("niederwerfen"), "niederwerf");});
test("niederzubeugen -> niederzubeug", function() {deepEqual( Stem("niederzubeugen"), "niederzubeug");});
test("niederzulassen -> niederzulass", function() {deepEqual( Stem("niederzulassen"), "niederzulass");});
test("niedlich -> niedlich", function() {deepEqual( Stem("niedlich"), "niedlich");});
test("niedliche -> niedlich", function() {deepEqual( Stem("niedliche"), "niedlich");});
test("niedlichen -> niedlich", function() {deepEqual( Stem("niedlichen"), "niedlich");});
test("niedlicher -> niedlich", function() {deepEqual( Stem("niedlicher"), "niedlich");});
test("niedrig -> niedrig", function() {deepEqual( Stem("niedrig"), "niedrig");});
test("niedrige -> niedrig", function() {deepEqual( Stem("niedrige"), "niedrig");});
test("niedrigen -> niedrig", function() {deepEqual( Stem("niedrigen"), "niedrig");});
test("niedriger -> niedrig", function() {deepEqual( Stem("niedriger"), "niedrig");});
test("niedrigere -> niedrig", function() {deepEqual( Stem("niedrigere"), "niedrig");});
test("niedrigeren -> niedrig", function() {deepEqual( Stem("niedrigeren"), "niedrig");});
test("niedrigerer -> niedrig", function() {deepEqual( Stem("niedrigerer"), "niedrig");});
test("niedrigkeit -> niedrig", function() {deepEqual( Stem("niedrigkeit"), "niedrig");});
test("niedrigre -> niedrigr", function() {deepEqual( Stem("niedrigre"), "niedrigr");});
test("niedrigste -> niedrig", function() {deepEqual( Stem("niedrigste"), "niedrig");});
test("niedrigsten -> niedrig", function() {deepEqual( Stem("niedrigsten"), "niedrig");});
test("niemals -> niemal", function() {deepEqual( Stem("niemals"), "niemal");});
test("niemand -> niemand", function() {deepEqual( Stem("niemand"), "niemand");});
test("niemandem -> niemand", function() {deepEqual( Stem("niemandem"), "niemand");});
test("niemanden -> niemand", function() {deepEqual( Stem("niemanden"), "niemand");});
test("niemands -> niemand", function() {deepEqual( Stem("niemands"), "niemand");});
test("niemandsland -> niemandsland", function() {deepEqual( Stem("niemandsland"), "niemandsland");});
test("nieren -> nier", function() {deepEqual( Stem("nieren"), "nier");});
test("nierenfett -> nierenfett", function() {deepEqual( Stem("nierenfett"), "nierenfett");});
test("niesen -> nies", function() {deepEqual( Stem("niesen"), "nies");});
test("nieste -> niest", function() {deepEqual( Stem("nieste"), "niest");});
test("nietzsche -> nietzsch", function() {deepEqual( Stem("nietzsche"), "nietzsch");});
test("nievergelt -> nievergelt", function() {deepEqual( Stem("nievergelt"), "nievergelt");});
test("nigen -> nig", function() {deepEqual( Stem("nigen"), "nig");});
test("niggli -> niggli", function() {deepEqual( Stem("niggli"), "niggli");});
test("nihil -> nihil", function() {deepEqual( Stem("nihil"), "nihil");});
test("nikodemus -> nikodemus", function() {deepEqual( Stem("nikodemus"), "nikodemus");});
test("nikolaus -> nikolaus", function() {deepEqual( Stem("nikolaus"), "nikolaus");});
test("nikosia -> nikosia", function() {deepEqual( Stem("nikosia"), "nikosia");});
test("nils -> nil", function() {deepEqual( Stem("nils"), "nil");});
test("nimm -> nimm", function() {deepEqual( Stem("nimm"), "nimm");});
test("nimmer -> nimm", function() {deepEqual( Stem("nimmer"), "nimm");});
test("nimmermehr -> nimmermehr", function() {deepEqual( Stem("nimmermehr"), "nimmermehr");});
test("nimmst -> nimm", function() {deepEqual( Stem("nimmst"), "nimm");});
test("nimmt -> nimmt", function() {deepEqual( Stem("nimmt"), "nimmt");});
test("nimrien -> nimri", function() {deepEqual( Stem("nimrien"), "nimri");});
test("nimriens -> nimri", function() {deepEqual( Stem("nimriens"), "nimri");});
test("ninive -> niniv", function() {deepEqual( Stem("ninive"), "niniv");});
test("ninives -> niniv", function() {deepEqual( Stem("ninives"), "niniv");});
test("nippte -> nippt", function() {deepEqual( Stem("nippte"), "nippt");});
test("nirgend -> nirgend", function() {deepEqual( Stem("nirgend"), "nirgend");});
test("nirgends -> nirgend", function() {deepEqual( Stem("nirgends"), "nirgend");});
test("nirgendwo -> nirgendwo", function() {deepEqual( Stem("nirgendwo"), "nirgendwo");});
test("nische -> nisch", function() {deepEqual( Stem("nische"), "nisch");});
test("nisi -> nisi", function() {deepEqual( Stem("nisi"), "nisi");});
test("nisten -> nist", function() {deepEqual( Stem("nisten"), "nist");});
test("nisteten -> nistet", function() {deepEqual( Stem("nisteten"), "nistet");});
test("nit -> nit", function() {deepEqual( Stem("nit"), "nit");});
test("nitrit -> nitrit", function() {deepEqual( Stem("nitrit"), "nitrit");});
test("nitritkapsel -> nitritkapsel", function() {deepEqual( Stem("nitritkapsel"), "nitritkapsel");});
test("nitroglyzerin -> nitroglyzerin", function() {deepEqual( Stem("nitroglyzerin"), "nitroglyzerin");});
test("nivellierung -> nivellier", function() {deepEqual( Stem("nivellierung"), "nivellier");});
test("nix -> nix", function() {deepEqual( Stem("nix"), "nix");});
test("no -> no", function() {deepEqual( Stem("no"), "no");});
test("noaaaaaa -> noaaaaaa", function() {deepEqual( Stem("noaaaaaa"), "noaaaaaa");});
test("noach -> noach", function() {deepEqual( Stem("noach"), "noach");});
test("noachs -> noach", function() {deepEqual( Stem("noachs"), "noach");});
test("nobel -> nobel", function() {deepEqual( Stem("nobel"), "nobel");});
test("noblen -> nobl", function() {deepEqual( Stem("noblen"), "nobl");});
test("nobler -> nobl", function() {deepEqual( Stem("nobler"), "nobl");});
test("noch -> noch", function() {deepEqual( Stem("noch"), "noch");});
test("nochmal -> nochmal", function() {deepEqual( Stem("nochmal"), "nochmal");});
test("nochmals -> nochmal", function() {deepEqual( Stem("nochmals"), "nochmal");});
test("nod -> nod", function() {deepEqual( Stem("nod"), "nod");});
test("nominationskommission -> nominationskommission", function() {deepEqual( Stem("nominationskommission"), "nominationskommission");});
test("nominative -> nominativ", function() {deepEqual( Stem("nominative"), "nominativ");});
test("nominativen -> nominativ", function() {deepEqual( Stem("nominativen"), "nominativ");});
test("nommen -> nomm", function() {deepEqual( Stem("nommen"), "nomm");});
test("non -> non", function() {deepEqual( Stem("non"), "non");});
test("nonnenartiger -> nonnenart", function() {deepEqual( Stem("nonnenartiger"), "nonnenart");});
test("nord -> nord", function() {deepEqual( Stem("nord"), "nord");});
test("nordamerikanischen -> nordamerikan", function() {deepEqual( Stem("nordamerikanischen"), "nordamerikan");});
test("norddeutschland -> norddeutschland", function() {deepEqual( Stem("norddeutschland"), "norddeutschland");});
test("norden -> nord", function() {deepEqual( Stem("norden"), "nord");});
test("nordengland -> nordengland", function() {deepEqual( Stem("nordengland"), "nordengland");});
test("nordischen -> nordisch", function() {deepEqual( Stem("nordischen"), "nordisch");});
test("nordlondon -> nordlondon", function() {deepEqual( Stem("nordlondon"), "nordlondon");});
test("nordpol -> nordpol", function() {deepEqual( Stem("nordpol"), "nordpol");});
test("nordwärts -> nordwart", function() {deepEqual( Stem("nordwärts"), "nordwart");});
test("nordwestschweiz -> nordwestschweiz", function() {deepEqual( Stem("nordwestschweiz"), "nordwestschweiz");});
test("nordzypern -> nordzyp", function() {deepEqual( Stem("nordzypern"), "nordzyp");});
test("normal -> normal", function() {deepEqual( Stem("normal"), "normal");});
test("normale -> normal", function() {deepEqual( Stem("normale"), "normal");});
test("normalen -> normal", function() {deepEqual( Stem("normalen"), "normal");});
test("normalerweise -> normalerweis", function() {deepEqual( Stem("normalerweise"), "normalerweis");});
test("norwegische -> norweg", function() {deepEqual( Stem("norwegische"), "norweg");});
test("norwegischen -> norweg", function() {deepEqual( Stem("norwegischen"), "norweg");});
test("nostalgie -> nostalgi", function() {deepEqual( Stem("nostalgie"), "nostalgi");});
test("not -> not", function() {deepEqual( Stem("not"), "not");});
test("notar -> notar", function() {deepEqual( Stem("notar"), "notar");});
test("notaufnahme -> notaufnahm", function() {deepEqual( Stem("notaufnahme"), "notaufnahm");});
test("notburga -> notburga", function() {deepEqual( Stem("notburga"), "notburga");});
test("notdürftig -> notdurft", function() {deepEqual( Stem("notdürftig"), "notdurft");});
test("notdürftigsten -> notdurft", function() {deepEqual( Stem("notdürftigsten"), "notdurft");});
test("note -> not", function() {deepEqual( Stem("note"), "not");});
test("nöten -> not", function() {deepEqual( Stem("nöten"), "not");});
test("notenbank -> notenbank", function() {deepEqual( Stem("notenbank"), "notenbank");});
test("notenblätter -> notenblatt", function() {deepEqual( Stem("notenblätter"), "notenblatt");});
test("notenlinien -> notenlini", function() {deepEqual( Stem("notenlinien"), "notenlini");});
test("notfall -> notfall", function() {deepEqual( Stem("notfall"), "notfall");});
test("notfällen -> notfall", function() {deepEqual( Stem("notfällen"), "notfall");});
test("notfalls -> notfall", function() {deepEqual( Stem("notfalls"), "notfall");});
test("notgezwungenen -> notgezw", function() {deepEqual( Stem("notgezwungenen"), "notgezw");});
test("notieren -> noti", function() {deepEqual( Stem("notieren"), "noti");});
test("notiert -> notiert", function() {deepEqual( Stem("notiert"), "notiert");});
test("notierte -> notiert", function() {deepEqual( Stem("notierte"), "notiert");});
test("nötig -> notig", function() {deepEqual( Stem("nötig"), "notig");});
test("nötige -> notig", function() {deepEqual( Stem("nötige"), "notig");});
test("nötigen -> notig", function() {deepEqual( Stem("nötigen"), "notig");});
test("nötiger -> notig", function() {deepEqual( Stem("nötiger"), "notig");});
test("nötigte -> notigt", function() {deepEqual( Stem("nötigte"), "notigt");});
test("nötigung -> notig", function() {deepEqual( Stem("nötigung"), "notig");});
test("notizbuch -> notizbuch", function() {deepEqual( Stem("notizbuch"), "notizbuch");});
test("notizbücher -> notizbuch", function() {deepEqual( Stem("notizbücher"), "notizbuch");});
test("notizen -> notiz", function() {deepEqual( Stem("notizen"), "notiz");});
test("notlüge -> notlug", function() {deepEqual( Stem("notlüge"), "notlug");});
test("notpfennige -> notpfenn", function() {deepEqual( Stem("notpfennige"), "notpfenn");});
test("notrfälle -> notrfall", function() {deepEqual( Stem("notrfälle"), "notrfall");});
test("notstand -> notstand", function() {deepEqual( Stem("notstand"), "notstand");});
test("notwehr -> notwehr", function() {deepEqual( Stem("notwehr"), "notwehr");});
test("notwendig -> notwend", function() {deepEqual( Stem("notwendig"), "notwend");});
test("notwendige -> notwend", function() {deepEqual( Stem("notwendige"), "notwend");});
test("notwendigen -> notwend", function() {deepEqual( Stem("notwendigen"), "notwend");});
test("notwendiger -> notwend", function() {deepEqual( Stem("notwendiger"), "notwend");});
test("notwendigere -> notwend", function() {deepEqual( Stem("notwendigere"), "notwend");});
test("notwendigerweise -> notwendigerweis", function() {deepEqual( Stem("notwendigerweise"), "notwendigerweis");});
test("notwendiges -> notwend", function() {deepEqual( Stem("notwendiges"), "notwend");});
test("notwendigkeit -> notwend", function() {deepEqual( Stem("notwendigkeit"), "notwend");});
test("notwendigkeiten -> notwend", function() {deepEqual( Stem("notwendigkeiten"), "notwend");});
test("notwendigste -> notwend", function() {deepEqual( Stem("notwendigste"), "notwend");});
test("noumen -> noum", function() {deepEqual( Stem("noumen"), "noum");});
test("noumenen -> noum", function() {deepEqual( Stem("noumenen"), "noum");});
test("noumenon -> noumenon", function() {deepEqual( Stem("noumenon"), "noumenon");});
test("novellen -> novell", function() {deepEqual( Stem("novellen"), "novell");});
test("november -> novemb", function() {deepEqual( Stem("november"), "novemb");});
test("novembertage -> novembertag", function() {deepEqual( Stem("novembertage"), "novembertag");});
test("novum -> novum", function() {deepEqual( Stem("novum"), "novum");});
test("nr -> nr", function() {deepEqual( Stem("nr"), "nr");});
test("nu -> nu", function() {deepEqual( Stem("nu"), "nu");});
test("nuance -> nuanc", function() {deepEqual( Stem("nuance"), "nuanc");});
test("nüber -> nub", function() {deepEqual( Stem("nüber"), "nub");});
test("nüchtern -> nucht", function() {deepEqual( Stem("nüchtern"), "nucht");});
test("nüchternen -> nuchtern", function() {deepEqual( Stem("nüchternen"), "nuchtern");});
test("nüchternes -> nuchtern", function() {deepEqual( Stem("nüchternes"), "nuchtern");});
test("nücken -> nuck", function() {deepEqual( Stem("nücken"), "nuck");});
test("null -> null", function() {deepEqual( Stem("null"), "null");});
test("nummer -> numm", function() {deepEqual( Stem("nummer"), "numm");});
test("nun -> nun", function() {deepEqual( Stem("nun"), "nun");});
test("nunmehr -> nunmehr", function() {deepEqual( Stem("nunmehr"), "nunmehr");});
test("nur -> nur", function() {deepEqual( Stem("nur"), "nur");});
test("nürnberg -> nurnberg", function() {deepEqual( Stem("nürnberg"), "nurnberg");});
test("nuss -> nuss", function() {deepEqual( Stem("nuss"), "nuss");});
test("nussbaumholz -> nussbaumholz", function() {deepEqual( Stem("nussbaumholz"), "nussbaumholz");});
test("nussbaumlade -> nussbaumlad", function() {deepEqual( Stem("nussbaumlade"), "nussbaumlad");});
test("nussbaumschrank -> nussbaumschrank", function() {deepEqual( Stem("nussbaumschrank"), "nussbaumschrank");});
test("nüsschen -> nussch", function() {deepEqual( Stem("nüsschen"), "nussch");});
test("nüsse -> nuss", function() {deepEqual( Stem("nüsse"), "nuss");});
test("nüssen -> nuss", function() {deepEqual( Stem("nüssen"), "nuss");});
test("nutz -> nutz", function() {deepEqual( Stem("nutz"), "nutz");});
test("nutzbare -> nutzbar", function() {deepEqual( Stem("nutzbare"), "nutzbar");});
test("nutzbringende -> nutzbring", function() {deepEqual( Stem("nutzbringende"), "nutzbring");});
test("nütze -> nutz", function() {deepEqual( Stem("nütze"), "nutz");});
test("nutzen -> nutz", function() {deepEqual( Stem("nutzen"), "nutz");});
test("nützen -> nutz", function() {deepEqual( Stem("nützen"), "nutz");});
test("nutzens -> nutz", function() {deepEqual( Stem("nutzens"), "nutz");});
test("nutzenschaffen -> nutzenschaff", function() {deepEqual( Stem("nutzenschaffen"), "nutzenschaff");});
test("nutzenschaffens -> nutzenschaff", function() {deepEqual( Stem("nutzenschaffens"), "nutzenschaff");});
test("nutzleistungen -> nutzleist", function() {deepEqual( Stem("nutzleistungen"), "nutzleist");});
test("nützlich -> nutzlich", function() {deepEqual( Stem("nützlich"), "nutzlich");});
test("nützliche -> nutzlich", function() {deepEqual( Stem("nützliche"), "nutzlich");});
test("nützlichen -> nutzlich", function() {deepEqual( Stem("nützlichen"), "nutzlich");});
test("nützlicher -> nutzlich", function() {deepEqual( Stem("nützlicher"), "nutzlich");});
test("nützlichere -> nutzlich", function() {deepEqual( Stem("nützlichere"), "nutzlich");});
test("nützlicheres -> nutzlich", function() {deepEqual( Stem("nützlicheres"), "nutzlich");});
test("nützlichkeit -> nutzlich", function() {deepEqual( Stem("nützlichkeit"), "nutzlich");});
test("nützlichste -> nutzlich", function() {deepEqual( Stem("nützlichste"), "nutzlich");});
test("nutzlos -> nutzlos", function() {deepEqual( Stem("nutzlos"), "nutzlos");});
test("nutzlose -> nutzlos", function() {deepEqual( Stem("nutzlose"), "nutzlos");});
test("nutzloses -> nutzlos", function() {deepEqual( Stem("nutzloses"), "nutzlos");});
test("nutzniessung -> nutzniess", function() {deepEqual( Stem("nutzniessung"), "nutzniess");});
test("nutzt -> nutzt", function() {deepEqual( Stem("nutzt"), "nutzt");});
test("nützt -> nutzt", function() {deepEqual( Stem("nützt"), "nutzt");});
test("nutzwirkungen -> nutzwirk", function() {deepEqual( Stem("nutzwirkungen"), "nutzwirk");});
test("nutzzwecke -> nutzzweck", function() {deepEqual( Stem("nutzzwecke"), "nutzzweck");});
test("nutzzwecken -> nutzzweck", function() {deepEqual( Stem("nutzzwecken"), "nutzzweck");});
test("nutzzwecks -> nutzzweck", function() {deepEqual( Stem("nutzzwecks"), "nutzzweck");});
test("nzz -> nzz", function() {deepEqual( Stem("nzz"), "nzz");});
test("o -> o", function() {deepEqual( Stem("o"), "o");});
test("oam -> oam", function() {deepEqual( Stem("oam"), "oam");});
test("oan -> oan", function() {deepEqual( Stem("oan"), "oan");});
test("ob -> ob", function() {deepEqual( Stem("ob"), "ob");});
test("obacht -> obacht", function() {deepEqual( Stem("obacht"), "obacht");});
test("obdach -> obdach", function() {deepEqual( Stem("obdach"), "obdach");});
test("oben -> oben", function() {deepEqual( Stem("oben"), "oben");});
test("obenauf -> obenauf", function() {deepEqual( Stem("obenauf"), "obenauf");});
test("obendrein -> obendrein", function() {deepEqual( Stem("obendrein"), "obendrein");});
test("obenein -> obenein", function() {deepEqual( Stem("obenein"), "obenein");});
test("obenhin -> obenhin", function() {deepEqual( Stem("obenhin"), "obenhin");});
test("obenhinaus -> obenhinaus", function() {deepEqual( Stem("obenhinaus"), "obenhinaus");});
test("ober -> ober", function() {deepEqual( Stem("ober"), "ober");});
test("oberbayrischer -> oberbayr", function() {deepEqual( Stem("oberbayrischer"), "oberbayr");});
test("oberbehörde -> oberbehord", function() {deepEqual( Stem("oberbehörde"), "oberbehord");});
test("oberduffendorf -> oberduffendorf", function() {deepEqual( Stem("oberduffendorf"), "oberduffendorf");});
test("obere -> ober", function() {deepEqual( Stem("obere"), "ober");});
test("oberen -> ober", function() {deepEqual( Stem("oberen"), "ober");});
test("oberes -> ober", function() {deepEqual( Stem("oberes"), "ober");});
test("oberfläche -> oberflach", function() {deepEqual( Stem("oberfläche"), "oberflach");});
test("oberflächen -> oberflach", function() {deepEqual( Stem("oberflächen"), "oberflach");});
test("oberflächlich -> oberflach", function() {deepEqual( Stem("oberflächlich"), "oberflach");});
test("oberflächlicher -> oberflach", function() {deepEqual( Stem("oberflächlicher"), "oberflach");});
test("oberflächlichkeit -> oberflach", function() {deepEqual( Stem("oberflächlichkeit"), "oberflach");});
test("oberförster -> oberforst", function() {deepEqual( Stem("oberförster"), "oberforst");});
test("oberhalb -> oberhalb", function() {deepEqual( Stem("oberhalb"), "oberhalb");});
test("oberhand -> oberhand", function() {deepEqual( Stem("oberhand"), "oberhand");});
test("oberhaupt -> oberhaupt", function() {deepEqual( Stem("oberhaupt"), "oberhaupt");});
test("oberherrschaft -> oberherrschaft", function() {deepEqual( Stem("oberherrschaft"), "oberherrschaft");});
test("oberkirchenrat -> oberkirchenrat", function() {deepEqual( Stem("oberkirchenrat"), "oberkirchenrat");});
test("oberlippe -> oberlipp", function() {deepEqual( Stem("oberlippe"), "oberlipp");});
test("obern -> obern", function() {deepEqual( Stem("obern"), "obern");});
test("oberpriester -> oberpri", function() {deepEqual( Stem("oberpriester"), "oberpri");});
test("obersatze -> obersatz", function() {deepEqual( Stem("obersatze"), "obersatz");});
test("oberst -> oberst", function() {deepEqual( Stem("oberst"), "oberst");});
test("oberste -> oberst", function() {deepEqual( Stem("oberste"), "oberst");});
test("obersten -> oberst", function() {deepEqual( Stem("obersten"), "oberst");});
test("oberstes -> oberst", function() {deepEqual( Stem("oberstes"), "oberst");});
test("oberstleutnants -> oberstleutnant", function() {deepEqual( Stem("oberstleutnants"), "oberstleutnant");});
test("obgleich -> obgleich", function() {deepEqual( Stem("obgleich"), "obgleich");});
test("obhut -> obhut", function() {deepEqual( Stem("obhut"), "obhut");});
test("obige -> obig", function() {deepEqual( Stem("obige"), "obig");});
test("obigem -> obig", function() {deepEqual( Stem("obigem"), "obig");});
test("obigen -> obig", function() {deepEqual( Stem("obigen"), "obig");});
test("obiger -> obig", function() {deepEqual( Stem("obiger"), "obig");});
test("objective -> objectiv", function() {deepEqual( Stem("objective"), "objectiv");});
test("objekt -> objekt", function() {deepEqual( Stem("objekt"), "objekt");});
test("objekte -> objekt", function() {deepEqual( Stem("objekte"), "objekt");});
test("objekten -> objekt", function() {deepEqual( Stem("objekten"), "objekt");});
test("objektiv -> objektiv", function() {deepEqual( Stem("objektiv"), "objektiv");});
test("objektive -> objektiv", function() {deepEqual( Stem("objektive"), "objektiv");});
test("objektivem -> objektiv", function() {deepEqual( Stem("objektivem"), "objektiv");});
test("objektiven -> objektiv", function() {deepEqual( Stem("objektiven"), "objektiv");});
test("objektiver -> objektiv", function() {deepEqual( Stem("objektiver"), "objektiv");});
test("objekts -> objekt", function() {deepEqual( Stem("objekts"), "objekt");});
test("oblag -> oblag", function() {deepEqual( Stem("oblag"), "oblag");});
test("obliegende -> oblieg", function() {deepEqual( Stem("obliegende"), "oblieg");});
test("obliegenheit -> oblieg", function() {deepEqual( Stem("obliegenheit"), "oblieg");});
test("obligationen -> obligation", function() {deepEqual( Stem("obligationen"), "obligation");});
test("obristen -> obrist", function() {deepEqual( Stem("obristen"), "obrist");});
test("obschon -> obschon", function() {deepEqual( Stem("obschon"), "obschon");});
test("observantione -> observantion", function() {deepEqual( Stem("observantione"), "observantion");});
test("obsiegen -> obsieg", function() {deepEqual( Stem("obsiegen"), "obsieg");});
test("obst -> obst", function() {deepEqual( Stem("obst"), "obst");});
test("obstbäumen -> obstbaum", function() {deepEqual( Stem("obstbäumen"), "obstbaum");});
test("obste -> obst", function() {deepEqual( Stem("obste"), "obst");});
test("obsthändler -> obsthandl", function() {deepEqual( Stem("obsthändler"), "obsthandl");});
test("obstinatio -> obstinatio", function() {deepEqual( Stem("obstinatio"), "obstinatio");});
test("obwohl -> obwohl", function() {deepEqual( Stem("obwohl"), "obwohl");});
test("obzwar -> obzwar", function() {deepEqual( Stem("obzwar"), "obzwar");});
test("ocak -> ocak", function() {deepEqual( Stem("ocak"), "ocak");});
test("ochak -> ochak", function() {deepEqual( Stem("ochak"), "ochak");});
test("ochs -> och", function() {deepEqual( Stem("ochs"), "och");});
test("ochse -> ochs", function() {deepEqual( Stem("ochse"), "ochs");});
test("ochsen -> ochs", function() {deepEqual( Stem("ochsen"), "ochs");});
test("ochsenhorn -> ochsenhorn", function() {deepEqual( Stem("ochsenhorn"), "ochsenhorn");});
test("ochsenkopfe -> ochsenkopf", function() {deepEqual( Stem("ochsenkopfe"), "ochsenkopf");});
test("odd -> odd", function() {deepEqual( Stem("odd"), "odd");});
test("öde -> ode", function() {deepEqual( Stem("öde"), "ode");});
test("odem -> odem", function() {deepEqual( Stem("odem"), "odem");});
test("öden -> oden", function() {deepEqual( Stem("öden"), "oden");});
test("oder -> oder", function() {deepEqual( Stem("oder"), "oder");});
test("ödungen -> odung", function() {deepEqual( Stem("ödungen"), "odung");});
test("of -> of", function() {deepEqual( Stem("of"), "of");});
test("ofen -> ofen", function() {deepEqual( Stem("ofen"), "ofen");});
test("öfen -> ofen", function() {deepEqual( Stem("öfen"), "ofen");});
test("ofenruss -> ofenruss", function() {deepEqual( Stem("ofenruss"), "ofenruss");});
test("ofenruß -> ofenruss", function() {deepEqual( Stem("ofenruß"), "ofenruss");});
test("ofens -> ofen", function() {deepEqual( Stem("ofens"), "ofen");});
test("off -> off", function() {deepEqual( Stem("off"), "off");});
test("offen -> off", function() {deepEqual( Stem("offen"), "off");});
test("offenb -> offenb", function() {deepEqual( Stem("offenb"), "offenb");});
test("offenbach -> offenbach", function() {deepEqual( Stem("offenbach"), "offenbach");});
test("offenbar -> offenbar", function() {deepEqual( Stem("offenbar"), "offenbar");});
test("offenbare -> offenbar", function() {deepEqual( Stem("offenbare"), "offenbar");});
test("offenbaren -> offenbar", function() {deepEqual( Stem("offenbaren"), "offenbar");});
test("offenbarende -> offenbar", function() {deepEqual( Stem("offenbarende"), "offenbar");});
test("offenbarer -> offenbar", function() {deepEqual( Stem("offenbarer"), "offenbar");});
test("offenbarlich -> offenbar", function() {deepEqual( Stem("offenbarlich"), "offenbar");});
test("offenbart -> offenbart", function() {deepEqual( Stem("offenbart"), "offenbart");});
test("offenbarung -> offenbar", function() {deepEqual( Stem("offenbarung"), "offenbar");});
test("offenbarungen -> offenbar", function() {deepEqual( Stem("offenbarungen"), "offenbar");});
test("offene -> off", function() {deepEqual( Stem("offene"), "off");});
test("offenekirche -> offenekirch", function() {deepEqual( Stem("offenekirche"), "offenekirch");});
test("offenem -> off", function() {deepEqual( Stem("offenem"), "off");});
test("offenen -> off", function() {deepEqual( Stem("offenen"), "off");});
test("offener -> off", function() {deepEqual( Stem("offener"), "off");});
test("offenes -> off", function() {deepEqual( Stem("offenes"), "off");});
test("offengebliebene -> offengeblieb", function() {deepEqual( Stem("offengebliebene"), "offengeblieb");});
test("offenheit -> off", function() {deepEqual( Stem("offenheit"), "off");});
test("offenkundigen -> offenkund", function() {deepEqual( Stem("offenkundigen"), "offenkund");});
test("offensichtlich -> offensicht", function() {deepEqual( Stem("offensichtlich"), "offensicht");});
test("offensiv -> offensiv", function() {deepEqual( Stem("offensiv"), "offensiv");});
test("offenstehe -> offensteh", function() {deepEqual( Stem("offenstehe"), "offensteh");});
test("offenstehend -> offensteh", function() {deepEqual( Stem("offenstehend"), "offensteh");});
test("offenstehende -> offensteh", function() {deepEqual( Stem("offenstehende"), "offensteh");});
test("offenstehenden -> offensteh", function() {deepEqual( Stem("offenstehenden"), "offensteh");});
test("öffentlich -> offent", function() {deepEqual( Stem("öffentlich"), "offent");});
test("öffentliche -> offent", function() {deepEqual( Stem("öffentliche"), "offent");});
test("öffentlichen -> offent", function() {deepEqual( Stem("öffentlichen"), "offent");});
test("öffentlicher -> offent", function() {deepEqual( Stem("öffentlicher"), "offent");});
test("öffentliches -> offent", function() {deepEqual( Stem("öffentliches"), "offent");});
test("öffentlichkeit -> offent", function() {deepEqual( Stem("öffentlichkeit"), "offent");});
test("offizielle -> offiziell", function() {deepEqual( Stem("offizielle"), "offiziell");});
test("offiziellen -> offiziell", function() {deepEqual( Stem("offiziellen"), "offiziell");});
test("offizier -> offizi", function() {deepEqual( Stem("offizier"), "offizi");});
test("offiziere -> offizi", function() {deepEqual( Stem("offiziere"), "offizi");});
test("offizieren -> offizi", function() {deepEqual( Stem("offizieren"), "offizi");});
test("offnen -> offn", function() {deepEqual( Stem("offnen"), "offn");});
test("öffnen -> offn", function() {deepEqual( Stem("öffnen"), "offn");});
test("öffnet -> offnet", function() {deepEqual( Stem("öffnet"), "offnet");});
test("öffnete -> offnet", function() {deepEqual( Stem("öffnete"), "offnet");});
test("öffneten -> offnet", function() {deepEqual( Stem("öffneten"), "offnet");});
test("oft -> oft", function() {deepEqual( Stem("oft"), "oft");});
test("öfter -> oft", function() {deepEqual( Stem("öfter"), "oft");});
test("öftere -> oft", function() {deepEqual( Stem("öftere"), "oft");});
test("öfteren -> oft", function() {deepEqual( Stem("öfteren"), "oft");});
test("öftern -> oft", function() {deepEqual( Stem("öftern"), "oft");});
test("öfters -> oft", function() {deepEqual( Stem("öfters"), "oft");});
test("oftmals -> oftmal", function() {deepEqual( Stem("oftmals"), "oftmal");});
test("oh -> oh", function() {deepEqual( Stem("oh"), "oh");});
test("ohad -> ohad", function() {deepEqual( Stem("ohad"), "ohad");});
test("ohn -> ohn", function() {deepEqual( Stem("ohn"), "ohn");});
test("ohne -> ohn", function() {deepEqual( Stem("ohne"), "ohn");});
test("ohnedem -> ohned", function() {deepEqual( Stem("ohnedem"), "ohned");});
test("ohnedies -> ohnedi", function() {deepEqual( Stem("ohnedies"), "ohnedi");});
test("ohnehin -> ohnehin", function() {deepEqual( Stem("ohnehin"), "ohnehin");});
test("ohnmacht -> ohnmacht", function() {deepEqual( Stem("ohnmacht"), "ohnmacht");});
test("ohnmächtig -> ohnmacht", function() {deepEqual( Stem("ohnmächtig"), "ohnmacht");});
test("oho -> oho", function() {deepEqual( Stem("oho"), "oho");});
test("ohr -> ohr", function() {deepEqual( Stem("ohr"), "ohr");});
test("ohre -> ohr", function() {deepEqual( Stem("ohre"), "ohr");});
test("ohren -> ohr", function() {deepEqual( Stem("ohren"), "ohr");});
test("ohrenbetäubener -> ohrenbetaub", function() {deepEqual( Stem("ohrenbetäubener"), "ohrenbetaub");});
test("ohres -> ohr", function() {deepEqual( Stem("ohres"), "ohr");});
test("ohrfeige -> ohrfeig", function() {deepEqual( Stem("ohrfeige"), "ohrfeig");});
test("ohrfeigen -> ohrfeig", function() {deepEqual( Stem("ohrfeigen"), "ohrfeig");});
test("ohrfeigte -> ohrfeigt", function() {deepEqual( Stem("ohrfeigte"), "ohrfeigt");});
test("ohrlappen -> ohrlapp", function() {deepEqual( Stem("ohrlappen"), "ohrlapp");});
test("oke -> oke", function() {deepEqual( Stem("oke"), "oke");});
test("ökono -> okono", function() {deepEqual( Stem("ökono"), "okono");});
test("ökonomisch -> okonom", function() {deepEqual( Stem("ökonomisch"), "okonom");});
test("ökonomischen -> okonom", function() {deepEqual( Stem("ökonomischen"), "okonom");});
test("ökonomisches -> okonom", function() {deepEqual( Stem("ökonomisches"), "okonom");});
test("oktober -> oktob", function() {deepEqual( Stem("oktober"), "oktob");});
test("ökumene -> okum", function() {deepEqual( Stem("ökumene"), "okum");});
test("ökumenische -> okumen", function() {deepEqual( Stem("ökumenische"), "okumen");});
test("ökumenischen -> okumen", function() {deepEqual( Stem("ökumenischen"), "okumen");});
test("öl -> ol", function() {deepEqual( Stem("öl"), "ol");});
test("ölbaumes -> olbaum", function() {deepEqual( Stem("ölbaumes"), "olbaum");});
test("oldenburg -> oldenburg", function() {deepEqual( Stem("oldenburg"), "oldenburg");});
test("oldenburger -> oldenburg", function() {deepEqual( Stem("oldenburger"), "oldenburg");});
test("oleander -> oleand", function() {deepEqual( Stem("oleander"), "oleand");});
test("oleandergebüsch -> oleandergebusch", function() {deepEqual( Stem("oleandergebüsch"), "oleandergebusch");});
test("ölfarbe -> olfarb", function() {deepEqual( Stem("ölfarbe"), "olfarb");});
test("olgemälde -> olgemald", function() {deepEqual( Stem("olgemälde"), "olgemald");});
test("ölig -> olig", function() {deepEqual( Stem("ölig"), "olig");});
test("öls -> ols", function() {deepEqual( Stem("öls"), "ols");});
test("ombudsmann -> ombudsmann", function() {deepEqual( Stem("ombudsmann"), "ombudsmann");});
test("omni -> omni", function() {deepEqual( Stem("omni"), "omni");});
test("omnium -> omnium", function() {deepEqual( Stem("omnium"), "omnium");});
test("on -> on", function() {deepEqual( Stem("on"), "on");});
test("onan -> onan", function() {deepEqual( Stem("onan"), "onan");});
test("onkel -> onkel", function() {deepEqual( Stem("onkel"), "onkel");});
test("onkels -> onkel", function() {deepEqual( Stem("onkels"), "onkel");});
test("ontologia -> ontologia", function() {deepEqual( Stem("ontologia"), "ontologia");});
test("ontologischen -> ontolog", function() {deepEqual( Stem("ontologischen"), "ontolog");});
test("oooh -> oooh", function() {deepEqual( Stem("oooh"), "oooh");});
test("oooooh -> oooooh", function() {deepEqual( Stem("oooooh"), "oooooh");});
test("opera -> opera", function() {deepEqual( Stem("opera"), "opera");});
test("operation -> operation", function() {deepEqual( Stem("operation"), "operation");});
test("opes -> opes", function() {deepEqual( Stem("opes"), "opes");});
test("opfer -> opf", function() {deepEqual( Stem("opfer"), "opf");});
test("opfere -> opf", function() {deepEqual( Stem("opfere"), "opf");});
test("opfergabe -> opfergab", function() {deepEqual( Stem("opfergabe"), "opfergab");});
test("opfergaben -> opfergab", function() {deepEqual( Stem("opfergaben"), "opfergab");});
test("opfern -> opf", function() {deepEqual( Stem("opfern"), "opf");});
test("opfers -> opf", function() {deepEqual( Stem("opfers"), "opf");});
test("opfert -> opfert", function() {deepEqual( Stem("opfert"), "opfert");});
test("opferte -> opfert", function() {deepEqual( Stem("opferte"), "opfert");});
test("ophir -> ophir", function() {deepEqual( Stem("ophir"), "ophir");});
test("ophirs -> ophir", function() {deepEqual( Stem("ophirs"), "ophir");});
test("opposition -> opposition", function() {deepEqual( Stem("opposition"), "opposition");});
test("optimismus -> optimismus", function() {deepEqual( Stem("optimismus"), "optimismus");});
test("optischen -> optisch", function() {deepEqual( Stem("optischen"), "optisch");});
test("orangeblüten -> orangeblut", function() {deepEqual( Stem("orangeblüten"), "orangeblut");});
test("orangefarbenen -> orangefarb", function() {deepEqual( Stem("orangefarbenen"), "orangefarb");});
test("orangen -> orang", function() {deepEqual( Stem("orangen"), "orang");});
test("orangenbäume -> orangenbaum", function() {deepEqual( Stem("orangenbäume"), "orangenbaum");});
test("orangenhaine -> orangenhain", function() {deepEqual( Stem("orangenhaine"), "orangenhain");});
test("orangensaft -> orangensaft", function() {deepEqual( Stem("orangensaft"), "orangensaft");});
test("orbitz -> orbitz", function() {deepEqual( Stem("orbitz"), "orbitz");});
test("ordentlich -> ordent", function() {deepEqual( Stem("ordentlich"), "ordent");});
test("ordentliche -> ordent", function() {deepEqual( Stem("ordentliche"), "ordent");});
test("ordentlichen -> ordent", function() {deepEqual( Stem("ordentlichen"), "ordent");});
test("ordentlicher -> ordent", function() {deepEqual( Stem("ordentlicher"), "ordent");});
test("ordentliches -> ordent", function() {deepEqual( Stem("ordentliches"), "ordent");});
test("ordinäre -> ordinar", function() {deepEqual( Stem("ordinäre"), "ordinar");});
test("ordinärsten -> ordinarst", function() {deepEqual( Stem("ordinärsten"), "ordinarst");});
test("ordiniertdem -> ordiniertd", function() {deepEqual( Stem("ordiniertdem"), "ordiniertd");});
test("ordne -> ordn", function() {deepEqual( Stem("ordne"), "ordn");});
test("ordnen -> ordn", function() {deepEqual( Stem("ordnen"), "ordn");});
test("ordnende -> ordnend", function() {deepEqual( Stem("ordnende"), "ordnend");});
test("ordnet -> ordnet", function() {deepEqual( Stem("ordnet"), "ordnet");});
test("ordnete -> ordnet", function() {deepEqual( Stem("ordnete"), "ordnet");});
test("ordneten -> ordnet", function() {deepEqual( Stem("ordneten"), "ordnet");});
test("ordnung -> ordnung", function() {deepEqual( Stem("ordnung"), "ordnung");});
test("ordnungen -> ordnung", function() {deepEqual( Stem("ordnungen"), "ordnung");});
test("ordnungs -> ordnung", function() {deepEqual( Stem("ordnungs"), "ordnung");});
test("ordnungsgemäss -> ordnungsgemass", function() {deepEqual( Stem("ordnungsgemäss"), "ordnungsgemass");});
test("ordnungsgemässe -> ordnungsgemass", function() {deepEqual( Stem("ordnungsgemässe"), "ordnungsgemass");});
test("ordnungsgesetz -> ordnungsgesetz", function() {deepEqual( Stem("ordnungsgesetz"), "ordnungsgesetz");});
test("ordnungsliebe -> ordnungslieb", function() {deepEqual( Stem("ordnungsliebe"), "ordnungslieb");});
test("ordnungssinn -> ordnungssinn", function() {deepEqual( Stem("ordnungssinn"), "ordnungssinn");});
test("ordonnanzgewehre -> ordonnanzgewehr", function() {deepEqual( Stem("ordonnanzgewehre"), "ordonnanzgewehr");});
test("organ -> organ", function() {deepEqual( Stem("organ"), "organ");});
test("organe -> organ", function() {deepEqual( Stem("organe"), "organ");});
test("organen -> organ", function() {deepEqual( Stem("organen"), "organ");});
test("organisation -> organisation", function() {deepEqual( Stem("organisation"), "organisation");});
test("organisationen -> organisation", function() {deepEqual( Stem("organisationen"), "organisation");});
test("organische -> organ", function() {deepEqual( Stem("organische"), "organ");});
test("organischen -> organ", function() {deepEqual( Stem("organischen"), "organ");});
test("organisieren -> organisi", function() {deepEqual( Stem("organisieren"), "organisi");});
test("organisiert -> organisiert", function() {deepEqual( Stem("organisiert"), "organisiert");});
test("organisierte -> organisiert", function() {deepEqual( Stem("organisierte"), "organisiert");});
test("organismen -> organism", function() {deepEqual( Stem("organismen"), "organism");});
test("organismus -> organismus", function() {deepEqual( Stem("organismus"), "organismus");});
test("orgel -> orgel", function() {deepEqual( Stem("orgel"), "orgel");});
test("orgelkasten -> orgelkast", function() {deepEqual( Stem("orgelkasten"), "orgelkast");});
test("orgelspieler -> orgelspiel", function() {deepEqual( Stem("orgelspieler"), "orgelspiel");});
test("orgelspielers -> orgelspiel", function() {deepEqual( Stem("orgelspielers"), "orgelspiel");});
test("orientieren -> orienti", function() {deepEqual( Stem("orientieren"), "orienti");});
test("orientteppiche -> orientteppich", function() {deepEqual( Stem("orientteppiche"), "orientteppich");});
test("original -> original", function() {deepEqual( Stem("original"), "original");});
test("originalität -> originalitat", function() {deepEqual( Stem("originalität"), "originalitat");});
test("originalkorrespondenz -> originalkorrespondenz", function() {deepEqual( Stem("originalkorrespondenz"), "originalkorrespondenz");});
test("originarium -> originarium", function() {deepEqual( Stem("originarium"), "originarium");});
test("originelles -> originell", function() {deepEqual( Stem("originelles"), "originell");});
test("orione -> orion", function() {deepEqual( Stem("orione"), "orion");});
test("örk -> ork", function() {deepEqual( Stem("örk"), "ork");});
test("orkan -> orkan", function() {deepEqual( Stem("orkan"), "orkan");});
test("ort -> ort", function() {deepEqual( Stem("ort"), "ort");});
test("orte -> ort", function() {deepEqual( Stem("orte"), "ort");});
test("orten -> ort", function() {deepEqual( Stem("orten"), "ort");});
test("örter -> ort", function() {deepEqual( Stem("örter"), "ort");});
test("ortes -> ort", function() {deepEqual( Stem("ortes"), "ort");});
test("orthodoxe -> orthodox", function() {deepEqual( Stem("orthodoxe"), "orthodox");});
test("orthodoxen -> orthodox", function() {deepEqual( Stem("orthodoxen"), "orthodox");});
test("ortlichkeiten -> ortlich", function() {deepEqual( Stem("ortlichkeiten"), "ortlich");});
test("ortsansäs -> ortsansas", function() {deepEqual( Stem("ortsansäs"), "ortsansas");});
test("ortschaft -> ortschaft", function() {deepEqual( Stem("ortschaft"), "ortschaft");});
test("ortschaften -> ortschaft", function() {deepEqual( Stem("ortschaften"), "ortschaft");});
test("ortsvorschlägen -> ortsvorschlag", function() {deepEqual( Stem("ortsvorschlägen"), "ortsvorschlag");});
test("oslo -> oslo", function() {deepEqual( Stem("oslo"), "oslo");});
test("ost -> ost", function() {deepEqual( Stem("ost"), "ost");});
test("ostberlin -> ostberlin", function() {deepEqual( Stem("ostberlin"), "ostberlin");});
test("ostberliner -> ostberlin", function() {deepEqual( Stem("ostberliner"), "ostberlin");});
test("ostdeutschen -> ostdeutsch", function() {deepEqual( Stem("ostdeutschen"), "ostdeutsch");});
test("ostdeutschland -> ostdeutschland", function() {deepEqual( Stem("ostdeutschland"), "ostdeutschland");});
test("osten -> ost", function() {deepEqual( Stem("osten"), "ost");});
test("ostens -> ost", function() {deepEqual( Stem("ostens"), "ost");});
test("osteransprache -> osteransprach", function() {deepEqual( Stem("osteransprache"), "osteransprach");});
test("osterei -> osterei", function() {deepEqual( Stem("osterei"), "osterei");});
test("ostereier -> osterei", function() {deepEqual( Stem("ostereier"), "osterei");});
test("osterfest -> osterf", function() {deepEqual( Stem("osterfest"), "osterf");});
test("osterfestgebete -> osterfestgebet", function() {deepEqual( Stem("osterfestgebete"), "osterfestgebet");});
test("osterhäschen -> osterhasch", function() {deepEqual( Stem("osterhäschen"), "osterhasch");});
test("ostern -> ost", function() {deepEqual( Stem("ostern"), "ost");});
test("osternacht -> osternacht", function() {deepEqual( Stem("osternacht"), "osternacht");});
test("osternest -> ostern", function() {deepEqual( Stem("osternest"), "ostern");});
test("osternestes -> ostern", function() {deepEqual( Stem("osternestes"), "ostern");});
test("österreich -> osterreich", function() {deepEqual( Stem("österreich"), "osterreich");});
test("österreichern -> osterreich", function() {deepEqual( Stem("österreichern"), "osterreich");});
test("osteuropa -> osteuropa", function() {deepEqual( Stem("osteuropa"), "osteuropa");});
test("ostindien -> ostindi", function() {deepEqual( Stem("ostindien"), "ostindi");});
test("ostindischen -> ostind", function() {deepEqual( Stem("ostindischen"), "ostind");});
test("ostländischen -> ostland", function() {deepEqual( Stem("ostländischen"), "ostland");});
test("östlich -> ostlich", function() {deepEqual( Stem("östlich"), "ostlich");});
test("östliche -> ostlich", function() {deepEqual( Stem("östliche"), "ostlich");});
test("östlichen -> ostlich", function() {deepEqual( Stem("östlichen"), "ostlich");});
test("ostrolenka -> ostrolenka", function() {deepEqual( Stem("ostrolenka"), "ostrolenka");});
test("ostschweiz -> ostschweiz", function() {deepEqual( Stem("ostschweiz"), "ostschweiz");});
test("ostschweizer -> ostschweiz", function() {deepEqual( Stem("ostschweizer"), "ostschweiz");});
test("ostwind -> ostwind", function() {deepEqual( Stem("ostwind"), "ostwind");});
test("ostwindes -> ostwind", function() {deepEqual( Stem("ostwindes"), "ostwind");});
test("ottenschlag -> ottenschlag", function() {deepEqual( Stem("ottenschlag"), "ottenschlag");});
test("otter -> ott", function() {deepEqual( Stem("otter"), "ott");});
test("ottern -> ott", function() {deepEqual( Stem("ottern"), "ott");});
test("otterngezüchte -> otterngezucht", function() {deepEqual( Stem("otterngezüchte"), "otterngezucht");});
test("otterngift -> otterngift", function() {deepEqual( Stem("otterngift"), "otterngift");});
test("out -> out", function() {deepEqual( Stem("out"), "out");});
test("overview -> overview", function() {deepEqual( Stem("overview"), "overview");});
test("oxford -> oxford", function() {deepEqual( Stem("oxford"), "oxford");});
test("ozean -> ozean", function() {deepEqual( Stem("ozean"), "ozean");});
test("özgur -> ozgur", function() {deepEqual( Stem("özgur"), "ozgur");});
test("p -> p", function() {deepEqual( Stem("p"), "p");});
test("paar -> paar", function() {deepEqual( Stem("paar"), "paar");});
test("paare -> paar", function() {deepEqual( Stem("paare"), "paar");});
test("paaren -> paar", function() {deepEqual( Stem("paaren"), "paar");});
test("paares -> paar", function() {deepEqual( Stem("paares"), "paar");});
test("paarmal -> paarmal", function() {deepEqual( Stem("paarmal"), "paarmal");});
test("paarung -> paarung", function() {deepEqual( Stem("paarung"), "paarung");});
test("paarweise -> paarweis", function() {deepEqual( Stem("paarweise"), "paarweis");});
test("pacht -> pacht", function() {deepEqual( Stem("pacht"), "pacht");});
test("pachtzins -> pachtzin", function() {deepEqual( Stem("pachtzins"), "pachtzin");});
test("pack -> pack", function() {deepEqual( Stem("pack"), "pack");});
test("päckchen -> packch", function() {deepEqual( Stem("päckchen"), "packch");});
test("packen -> pack", function() {deepEqual( Stem("packen"), "pack");});
test("päcklein -> packlein", function() {deepEqual( Stem("päcklein"), "packlein");});
test("packt -> packt", function() {deepEqual( Stem("packt"), "packt");});
test("packte -> packt", function() {deepEqual( Stem("packte"), "packt");});
test("packten -> packt", function() {deepEqual( Stem("packten"), "packt");});
test("pädagogik -> padagog", function() {deepEqual( Stem("pädagogik"), "padagog");});
test("paddeln -> paddeln", function() {deepEqual( Stem("paddeln"), "paddeln");});
test("paffte -> pafft", function() {deepEqual( Stem("paffte"), "pafft");});
test("pagen -> pag", function() {deepEqual( Stem("pagen"), "pag");});
test("pair -> pair", function() {deepEqual( Stem("pair"), "pair");});
test("paket -> paket", function() {deepEqual( Stem("paket"), "paket");});
test("paketchen -> paketch", function() {deepEqual( Stem("paketchen"), "paketch");});
test("palast -> palast", function() {deepEqual( Stem("palast"), "palast");});
test("paläste -> palast", function() {deepEqual( Stem("paläste"), "palast");});
test("palästen -> palast", function() {deepEqual( Stem("palästen"), "palast");});
test("palea -> palea", function() {deepEqual( Stem("palea"), "palea");});
test("paleae -> palea", function() {deepEqual( Stem("paleae"), "palea");});
test("pallu -> pallu", function() {deepEqual( Stem("pallu"), "pallu");});
test("palme -> palm", function() {deepEqual( Stem("palme"), "palm");});
test("palmen -> palm", function() {deepEqual( Stem("palmen"), "palm");});
test("palmzweige -> palmzweig", function() {deepEqual( Stem("palmzweige"), "palmzweig");});
test("palmzweigen -> palmzweig", function() {deepEqual( Stem("palmzweigen"), "palmzweig");});
test("panamahut -> panamahut", function() {deepEqual( Stem("panamahut"), "panamahut");});
test("panier -> pani", function() {deepEqual( Stem("panier"), "pani");});
test("pankraz -> pankraz", function() {deepEqual( Stem("pankraz"), "pankraz");});
test("pankräzchens -> pankrazch", function() {deepEqual( Stem("pankräzchens"), "pankrazch");});
test("pankrazens -> pankraz", function() {deepEqual( Stem("pankrazens"), "pankraz");});
test("pankrazius -> pankrazius", function() {deepEqual( Stem("pankrazius"), "pankrazius");});
test("pankräzlein -> pankrazlein", function() {deepEqual( Stem("pankräzlein"), "pankrazlein");});
test("panorama -> panorama", function() {deepEqual( Stem("panorama"), "panorama");});
test("panspfeife -> panspfeif", function() {deepEqual( Stem("panspfeife"), "panspfeif");});
test("pantinengänger -> pantinengang", function() {deepEqual( Stem("pantinengänger"), "pantinengang");});
test("pantoffelfüssen -> pantoffelfuss", function() {deepEqual( Stem("pantoffelfüssen"), "pantoffelfuss");});
test("pantoffeln -> pantoffeln", function() {deepEqual( Stem("pantoffeln"), "pantoffeln");});
test("panzer -> panz", function() {deepEqual( Stem("panzer"), "panz");});
test("panzerfahrzeugen -> panzerfahrzeug", function() {deepEqual( Stem("panzerfahrzeugen"), "panzerfahrzeug");});
test("panzerreiter -> panzerreit", function() {deepEqual( Stem("panzerreiter"), "panzerreit");});
test("papa -> papa", function() {deepEqual( Stem("papa"), "papa");});
test("papagei -> papagei", function() {deepEqual( Stem("papagei"), "papagei");});
test("papier -> papi", function() {deepEqual( Stem("papier"), "papi");});
test("papiere -> papi", function() {deepEqual( Stem("papiere"), "papi");});
test("papieren -> papi", function() {deepEqual( Stem("papieren"), "papi");});
test("papierne -> papiern", function() {deepEqual( Stem("papierne"), "papiern");});
test("papierstauden -> papierstaud", function() {deepEqual( Stem("papierstauden"), "papierstaud");});
test("papparbeit -> papparbeit", function() {deepEqual( Stem("papparbeit"), "papparbeit");});
test("pappel -> pappel", function() {deepEqual( Stem("pappel"), "pappel");});
test("pappkartons -> pappkarton", function() {deepEqual( Stem("pappkartons"), "pappkarton");});
test("pappkästchen -> pappkastch", function() {deepEqual( Stem("pappkästchen"), "pappkastch");});
test("papst -> papst", function() {deepEqual( Stem("papst"), "papst");});
test("papstes -> papst", function() {deepEqual( Stem("papstes"), "papst");});
test("paradies -> paradi", function() {deepEqual( Stem("paradies"), "paradi");});
test("paradiese -> paradies", function() {deepEqual( Stem("paradiese"), "paradies");});
test("paradiesgärtchen -> paradiesgartch", function() {deepEqual( Stem("paradiesgärtchen"), "paradiesgartch");});
test("paradiesgärtels -> paradiesgartel", function() {deepEqual( Stem("paradiesgärtels"), "paradiesgartel");});
test("paradiesgärtlein -> paradiesgartlein", function() {deepEqual( Stem("paradiesgärtlein"), "paradiesgartlein");});
test("paradiesische -> paradies", function() {deepEqual( Stem("paradiesische"), "paradies");});
test("paradiesvogel -> paradiesvogel", function() {deepEqual( Stem("paradiesvogel"), "paradiesvogel");});
test("paraklet -> paraklet", function() {deepEqual( Stem("paraklet"), "paraklet");});
test("parallele -> parallel", function() {deepEqual( Stem("parallele"), "parallel");});
test("paralogismen -> paralogism", function() {deepEqual( Stem("paralogismen"), "paralogism");});
test("parapluie -> paraplui", function() {deepEqual( Stem("parapluie"), "paraplui");});
test("parat -> parat", function() {deepEqual( Stem("parat"), "parat");});
test("pärchen -> parch", function() {deepEqual( Stem("pärchen"), "parch");});
test("pardel -> pardel", function() {deepEqual( Stem("pardel"), "pardel");});
test("parfümiert -> parfumiert", function() {deepEqual( Stem("parfümiert"), "parfumiert");});
test("parieren -> pari", function() {deepEqual( Stem("parieren"), "pari");});
test("paris -> paris", function() {deepEqual( Stem("paris"), "paris");});
test("pariser -> paris", function() {deepEqual( Stem("pariser"), "paris");});
test("park -> park", function() {deepEqual( Stem("park"), "park");});
test("parke -> park", function() {deepEqual( Stem("parke"), "park");});
test("parkett -> parkett", function() {deepEqual( Stem("parkett"), "parkett");});
test("parks -> park", function() {deepEqual( Stem("parks"), "park");});
test("parsimoniae -> parsimonia", function() {deepEqual( Stem("parsimoniae"), "parsimonia");});
test("parte -> part", function() {deepEqual( Stem("parte"), "part");});
test("partei -> partei", function() {deepEqual( Stem("partei"), "partei");});
test("parteien -> partei", function() {deepEqual( Stem("parteien"), "partei");});
test("parteigänger -> parteigang", function() {deepEqual( Stem("parteigänger"), "parteigang");});
test("parteigenossen -> parteigenoss", function() {deepEqual( Stem("parteigenossen"), "parteigenoss");});
test("parteiischen -> parteiisch", function() {deepEqual( Stem("parteiischen"), "parteiisch");});
test("parteileute -> parteileut", function() {deepEqual( Stem("parteileute"), "parteileut");});
test("partie -> parti", function() {deepEqual( Stem("partie"), "parti");});
test("partien -> parti", function() {deepEqual( Stem("partien"), "parti");});
test("partners -> partn", function() {deepEqual( Stem("partners"), "partn");});
test("parvulus -> parvulus", function() {deepEqual( Stem("parvulus"), "parvulus");});
test("pascha -> pascha", function() {deepEqual( Stem("pascha"), "pascha");});
test("pascher -> pasch", function() {deepEqual( Stem("pascher"), "pasch");});
test("paspeliert -> paspeliert", function() {deepEqual( Stem("paspeliert"), "paspeliert");});
test("pass -> pass", function() {deepEqual( Stem("pass"), "pass");});
test("passable -> passabl", function() {deepEqual( Stem("passable"), "passabl");});
test("passah -> passah", function() {deepEqual( Stem("passah"), "passah");});
test("passahfest -> passahf", function() {deepEqual( Stem("passahfest"), "passahf");});
test("passahtieres -> passahti", function() {deepEqual( Stem("passahtieres"), "passahti");});
test("passanten -> passant", function() {deepEqual( Stem("passanten"), "passant");});
test("passargument -> passargument", function() {deepEqual( Stem("passargument"), "passargument");});
test("pässe -> pass", function() {deepEqual( Stem("pässe"), "pass");});
test("passen -> pass", function() {deepEqual( Stem("passen"), "pass");});
test("passend -> passend", function() {deepEqual( Stem("passend"), "passend");});
test("passende -> passend", function() {deepEqual( Stem("passende"), "passend");});
test("passenden -> passend", function() {deepEqual( Stem("passenden"), "passend");});
test("passender -> passend", function() {deepEqual( Stem("passender"), "passend");});
test("passendes -> passend", function() {deepEqual( Stem("passendes"), "passend");});
test("passeten -> passet", function() {deepEqual( Stem("passeten"), "passet");});
test("passieren -> passi", function() {deepEqual( Stem("passieren"), "passi");});
test("passiert -> passiert", function() {deepEqual( Stem("passiert"), "passiert");});
test("passierte -> passiert", function() {deepEqual( Stem("passierte"), "passiert");});
test("passiertem -> passiert", function() {deepEqual( Stem("passiertem"), "passiert");});
test("passierten -> passiert", function() {deepEqual( Stem("passierten"), "passiert");});
test("passivem -> passiv", function() {deepEqual( Stem("passivem"), "passiv");});
test("passt -> passt", function() {deepEqual( Stem("passt"), "passt");});
test("paßt -> passt", function() {deepEqual( Stem("paßt"), "passt");});
test("passte -> passt", function() {deepEqual( Stem("passte"), "passt");});
test("passten -> passt", function() {deepEqual( Stem("passten"), "passt");});
test("pastete -> pastet", function() {deepEqual( Stem("pastete"), "pastet");});
test("pasteten -> pastet", function() {deepEqual( Stem("pasteten"), "pastet");});
test("patent -> patent", function() {deepEqual( Stem("patent"), "patent");});
test("patentierung -> patentier", function() {deepEqual( Stem("patentierung"), "patentier");});
test("pater -> pat", function() {deepEqual( Stem("pater"), "pat");});
test("paternoster -> paternost", function() {deepEqual( Stem("paternoster"), "paternost");});
test("paternosteraufzug -> paternosteraufzug", function() {deepEqual( Stem("paternosteraufzug"), "paternosteraufzug");});
test("paternosters -> paternost", function() {deepEqual( Stem("paternosters"), "paternost");});
test("paters -> pat", function() {deepEqual( Stem("paters"), "pat");});
test("pathologisch -> patholog", function() {deepEqual( Stem("pathologisch"), "patholog");});
test("pathologischen -> patholog", function() {deepEqual( Stem("pathologischen"), "patholog");});
test("patieneen -> patiene", function() {deepEqual( Stem("patieneen"), "patiene");});
test("patienten -> patient", function() {deepEqual( Stem("patienten"), "patient");});
test("patriarch -> patriarch", function() {deepEqual( Stem("patriarch"), "patriarch");});
test("patriarchen -> patriarch", function() {deepEqual( Stem("patriarchen"), "patriarch");});
test("patron -> patron", function() {deepEqual( Stem("patron"), "patron");});
test("patronen -> patron", function() {deepEqual( Stem("patronen"), "patron");});
test("patronhilsen -> patronhils", function() {deepEqual( Stem("patronhilsen"), "patronhils");});
test("patrontasche -> patrontasch", function() {deepEqual( Stem("patrontasche"), "patrontasch");});
test("patrouille -> patrouill", function() {deepEqual( Stem("patrouille"), "patrouill");});
test("patrouillen -> patrouill", function() {deepEqual( Stem("patrouillen"), "patrouill");});
test("patsch -> patsch", function() {deepEqual( Stem("patsch"), "patsch");});
test("patsche -> patsch", function() {deepEqual( Stem("patsche"), "patsch");});
test("patschelte -> patschelt", function() {deepEqual( Stem("patschelte"), "patschelt");});
test("patschnass -> patschnass", function() {deepEqual( Stem("patschnass"), "patschnass");});
test("pauke -> pauk", function() {deepEqual( Stem("pauke"), "pauk");});
test("pauken -> pauk", function() {deepEqual( Stem("pauken"), "pauk");});
test("paukenbegleitung -> paukenbegleit", function() {deepEqual( Stem("paukenbegleitung"), "paukenbegleit");});
test("paukenden -> paukend", function() {deepEqual( Stem("paukenden"), "paukend");});
test("paukenklöppel -> paukenkloppel", function() {deepEqual( Stem("paukenklöppel"), "paukenkloppel");});
test("paukenkonzert -> paukenkonzert", function() {deepEqual( Stem("paukenkonzert"), "paukenkonzert");});
test("paukenstock -> paukenstock", function() {deepEqual( Stem("paukenstock"), "paukenstock");});
test("paul -> paul", function() {deepEqual( Stem("paul"), "paul");});
test("pausbäckige -> pausback", function() {deepEqual( Stem("pausbäckige"), "pausback");});
test("pause -> paus", function() {deepEqual( Stem("pause"), "paus");});
test("pausen -> paus", function() {deepEqual( Stem("pausen"), "paus");});
test("pavia -> pavia", function() {deepEqual( Stem("pavia"), "pavia");});
test("pavillon -> pavillon", function() {deepEqual( Stem("pavillon"), "pavillon");});
test("pavillons -> pavillon", function() {deepEqual( Stem("pavillons"), "pavillon");});
test("pech -> pech", function() {deepEqual( Stem("pech"), "pech");});
test("pechdunkeln -> pechdunkeln", function() {deepEqual( Stem("pechdunkeln"), "pechdunkeln");});
test("peche -> pech", function() {deepEqual( Stem("peche"), "pech");});
test("pechfinster -> pechfin", function() {deepEqual( Stem("pechfinster"), "pechfin");});
test("pechnarben -> pechnarb", function() {deepEqual( Stem("pechnarben"), "pechnarb");});
test("pechs -> pech", function() {deepEqual( Stem("pechs"), "pech");});
test("pechschwarz -> pechschwarz", function() {deepEqual( Stem("pechschwarz"), "pechschwarz");});
test("pechschwarzen -> pechschwarz", function() {deepEqual( Stem("pechschwarzen"), "pechschwarz");});
test("pechsiedern -> pechsied", function() {deepEqual( Stem("pechsiedern"), "pechsied");});
test("pechstreif -> pechstreif", function() {deepEqual( Stem("pechstreif"), "pechstreif");});
test("pechverbandes -> pechverband", function() {deepEqual( Stem("pechverbandes"), "pechverband");});
test("pecoris -> pecoris", function() {deepEqual( Stem("pecoris"), "pecoris");});
test("pedanten -> pedant", function() {deepEqual( Stem("pedanten"), "pedant");});
test("pedanterie -> pedanteri", function() {deepEqual( Stem("pedanterie"), "pedanteri");});
test("pegasus -> pegasus", function() {deepEqual( Stem("pegasus"), "pegasus");});
test("pein -> pein", function() {deepEqual( Stem("pein"), "pein");});
test("peinigen -> peinig", function() {deepEqual( Stem("peinigen"), "peinig");});
test("peiniger -> peinig", function() {deepEqual( Stem("peiniger"), "peinig");});
test("peinigt -> peinigt", function() {deepEqual( Stem("peinigt"), "peinigt");});
test("peinigte -> peinigt", function() {deepEqual( Stem("peinigte"), "peinigt");});
test("peinlich -> peinlich", function() {deepEqual( Stem("peinlich"), "peinlich");});
test("peinliche -> peinlich", function() {deepEqual( Stem("peinliche"), "peinlich");});
test("peinlicher -> peinlich", function() {deepEqual( Stem("peinlicher"), "peinlich");});
test("peinlichste -> peinlich", function() {deepEqual( Stem("peinlichste"), "peinlich");});
test("peinlichsten -> peinlich", function() {deepEqual( Stem("peinlichsten"), "peinlich");});
test("peinvoll -> peinvoll", function() {deepEqual( Stem("peinvoll"), "peinvoll");});
test("peirastik -> peirast", function() {deepEqual( Stem("peirastik"), "peirast");});
test("peitsche -> peitsch", function() {deepEqual( Stem("peitsche"), "peitsch");});
test("peitschen -> peitsch", function() {deepEqual( Stem("peitschen"), "peitsch");});
test("peitschenknall -> peitschenknall", function() {deepEqual( Stem("peitschenknall"), "peitschenknall");});
test("peleg -> peleg", function() {deepEqual( Stem("peleg"), "peleg");});
test("pelz -> pelz", function() {deepEqual( Stem("pelz"), "pelz");});
test("pelzen -> pelz", function() {deepEqual( Stem("pelzen"), "pelz");});
test("pelzes -> pelz", function() {deepEqual( Stem("pelzes"), "pelz");});
test("pelzmütze -> pelzmutz", function() {deepEqual( Stem("pelzmütze"), "pelzmutz");});
test("pelzverbrämten -> pelzverbramt", function() {deepEqual( Stem("pelzverbrämten"), "pelzverbramt");});
test("pelzwerk -> pelzwerk", function() {deepEqual( Stem("pelzwerk"), "pelzwerk");});
test("pension -> pension", function() {deepEqual( Stem("pension"), "pension");});
test("pentarchie -> pentarchi", function() {deepEqual( Stem("pentarchie"), "pentarchi");});
test("pepiniere -> pepini", function() {deepEqual( Stem("pepiniere"), "pepini");});
test("per -> per", function() {deepEqual( Stem("per"), "per");});
test("perceptio -> perceptio", function() {deepEqual( Stem("perceptio"), "perceptio");});
test("perceptiones -> perception", function() {deepEqual( Stem("perceptiones"), "perception");});
test("perceptionis -> perceptionis", function() {deepEqual( Stem("perceptionis"), "perceptionis");});
test("perceptivum -> perceptivum", function() {deepEqual( Stem("perceptivum"), "perceptivum");});
test("percipere -> percip", function() {deepEqual( Stem("percipere"), "percip");});
test("perez -> perez", function() {deepEqual( Stem("perez"), "perez");});
test("perfectissimum -> perfectissimum", function() {deepEqual( Stem("perfectissimum"), "perfectissimum");});
test("peri -> peri", function() {deepEqual( Stem("peri"), "peri");});
test("periode -> period", function() {deepEqual( Stem("periode"), "period");});
test("perioden -> period", function() {deepEqual( Stem("perioden"), "period");});
test("periodischen -> period", function() {deepEqual( Stem("periodischen"), "period");});
test("perlen -> perl", function() {deepEqual( Stem("perlen"), "perl");});
test("perlenband -> perlenband", function() {deepEqual( Stem("perlenband"), "perlenband");});
test("perlmutter -> perlmutt", function() {deepEqual( Stem("perlmutter"), "perlmutt");});
test("permanenter -> permanent", function() {deepEqual( Stem("permanenter"), "permanent");});
test("perpetuum -> perpetuum", function() {deepEqual( Stem("perpetuum"), "perpetuum");});
test("persifliert -> persifliert", function() {deepEqual( Stem("persifliert"), "persifliert");});
test("person -> person", function() {deepEqual( Stem("person"), "person");});
test("personen -> person", function() {deepEqual( Stem("personen"), "person");});
test("persönlich -> person", function() {deepEqual( Stem("persönlich"), "person");});
test("persönliche -> person", function() {deepEqual( Stem("persönliche"), "person");});
test("persönlichem -> person", function() {deepEqual( Stem("persönlichem"), "person");});
test("persönlichen -> person", function() {deepEqual( Stem("persönlichen"), "person");});
test("persönlichkeit -> person", function() {deepEqual( Stem("persönlichkeit"), "person");});
test("persönlichkeiten -> person", function() {deepEqual( Stem("persönlichkeiten"), "person");});
test("perspektive -> perspektiv", function() {deepEqual( Stem("perspektive"), "perspektiv");});
test("perspicacia -> perspicacia", function() {deepEqual( Stem("perspicacia"), "perspicacia");});
test("persuasiones -> persuasion", function() {deepEqual( Stem("persuasiones"), "persuasion");});
test("pest -> pest", function() {deepEqual( Stem("pest"), "pest");});
test("pestischer -> pestisch", function() {deepEqual( Stem("pestischer"), "pestisch");});
test("petent -> petent", function() {deepEqual( Stem("petent"), "petent");});
test("peter -> pet", function() {deepEqual( Stem("peter"), "pet");});
test("peterchen -> peterch", function() {deepEqual( Stem("peterchen"), "peterch");});
test("peterchens -> peterch", function() {deepEqual( Stem("peterchens"), "peterch");});
test("petersburg -> petersburg", function() {deepEqual( Stem("petersburg"), "petersburg");});
test("petitpierre -> petitpierr", function() {deepEqual( Stem("petitpierre"), "petitpierr");});
test("petrarum -> petrarum", function() {deepEqual( Stem("petrarum"), "petrarum");});
test("petrus -> petrus", function() {deepEqual( Stem("petrus"), "petrus");});
test("petschiert -> petschiert", function() {deepEqual( Stem("petschiert"), "petschiert");});
test("petz -> petz", function() {deepEqual( Stem("petz"), "petz");});
test("petzbären -> petzbar", function() {deepEqual( Stem("petzbären"), "petzbar");});
test("pfad -> pfad", function() {deepEqual( Stem("pfad"), "pfad");});
test("pfade -> pfad", function() {deepEqual( Stem("pfade"), "pfad");});
test("pfaden -> pfad", function() {deepEqual( Stem("pfaden"), "pfad");});
test("pfades -> pfad", function() {deepEqual( Stem("pfades"), "pfad");});
test("pfaffen -> pfaff", function() {deepEqual( Stem("pfaffen"), "pfaff");});
test("pfäfflein -> pfafflein", function() {deepEqual( Stem("pfäfflein"), "pfafflein");});
test("pfahl -> pfahl", function() {deepEqual( Stem("pfahl"), "pfahl");});
test("pfahles -> pfahl", function() {deepEqual( Stem("pfahles"), "pfahl");});
test("pfännchen -> pfannch", function() {deepEqual( Stem("pfännchen"), "pfannch");});
test("pfanne -> pfann", function() {deepEqual( Stem("pfanne"), "pfann");});
test("pfannen -> pfann", function() {deepEqual( Stem("pfannen"), "pfann");});
test("pfarr -> pfarr", function() {deepEqual( Stem("pfarr"), "pfarr");});
test("pfarrämter -> pfarramt", function() {deepEqual( Stem("pfarrämter"), "pfarramt");});
test("pfarreien -> pfarrei", function() {deepEqual( Stem("pfarreien"), "pfarrei");});
test("pfarrer -> pfarr", function() {deepEqual( Stem("pfarrer"), "pfarr");});
test("pfarrerdie -> pfarrerdi", function() {deepEqual( Stem("pfarrerdie"), "pfarrerdi");});
test("pfarrerstochter -> pfarrerstocht", function() {deepEqual( Stem("pfarrerstochter"), "pfarrerstocht");});
test("pfarrerweiterbildung -> pfarrerweiterbild", function() {deepEqual( Stem("pfarrerweiterbildung"), "pfarrerweiterbild");});
test("pfarrerweiterbildungskommission -> pfarrerweiterbildungskommission", function() {deepEqual( Stem("pfarrerweiterbildungskommission"), "pfarrerweiterbildungskommission");});
test("pfarrpersonen -> pfarrperson", function() {deepEqual( Stem("pfarrpersonen"), "pfarrperson");});
test("pfarrverein -> pfarrverein", function() {deepEqual( Stem("pfarrverein"), "pfarrverein");});
test("pfauenfedern -> pfauenfed", function() {deepEqual( Stem("pfauenfedern"), "pfauenfed");});
test("pfeffer -> pfeff", function() {deepEqual( Stem("pfeffer"), "pfeff");});
test("pfefferkuchen -> pfefferkuch", function() {deepEqual( Stem("pfefferkuchen"), "pfefferkuch");});
test("pfefferkuchenbäume -> pfefferkuchenbaum", function() {deepEqual( Stem("pfefferkuchenbäume"), "pfefferkuchenbaum");});
test("pfefferkuchenmännchen -> pfefferkuchenmannch", function() {deepEqual( Stem("pfefferkuchenmännchen"), "pfefferkuchenmannch");});
test("pfefferkuchenpäckchen -> pfefferkuchenpackch", function() {deepEqual( Stem("pfefferkuchenpäckchen"), "pfefferkuchenpackch");});
test("pfefferkuchensprüche -> pfefferkuchenspruch", function() {deepEqual( Stem("pfefferkuchensprüche"), "pfefferkuchenspruch");});
test("pfefferkuchenzweigen -> pfefferkuchenzweig", function() {deepEqual( Stem("pfefferkuchenzweigen"), "pfefferkuchenzweig");});
test("pfefferminzplätzchen -> pfefferminzplatzch", function() {deepEqual( Stem("pfefferminzplätzchen"), "pfefferminzplatzch");});
test("pfefferminztee -> pfefferminzte", function() {deepEqual( Stem("pfefferminztee"), "pfefferminzte");});
test("pfeifchen -> pfeifch", function() {deepEqual( Stem("pfeifchen"), "pfeifch");});
test("pfeife -> pfeif", function() {deepEqual( Stem("pfeife"), "pfeif");});
test("pfeifen -> pfeif", function() {deepEqual( Stem("pfeifen"), "pfeif");});
test("pfeifend -> pfeifend", function() {deepEqual( Stem("pfeifend"), "pfeifend");});
test("pfeifenden -> pfeifend", function() {deepEqual( Stem("pfeifenden"), "pfeifend");});
test("pfeifenköpfen -> pfeifenkopf", function() {deepEqual( Stem("pfeifenköpfen"), "pfeifenkopf");});
test("pfeifmelodie -> pfeifmelodi", function() {deepEqual( Stem("pfeifmelodie"), "pfeifmelodi");});
test("pfeil -> pfeil", function() {deepEqual( Stem("pfeil"), "pfeil");});
test("pfeile -> pfeil", function() {deepEqual( Stem("pfeile"), "pfeil");});
test("pfennig -> pfennig", function() {deepEqual( Stem("pfennig"), "pfennig");});
test("pfennige -> pfennig", function() {deepEqual( Stem("pfennige"), "pfennig");});
test("pferchen -> pferch", function() {deepEqual( Stem("pferchen"), "pferch");});
test("pferd -> pferd", function() {deepEqual( Stem("pferd"), "pferd");});
test("pferdchen -> pferdch", function() {deepEqual( Stem("pferdchen"), "pferdch");});
test("pferde -> pferd", function() {deepEqual( Stem("pferde"), "pferd");});
test("pferdeäpfel -> pferdeapfel", function() {deepEqual( Stem("pferdeäpfel"), "pferdeapfel");});
test("pferdehufen -> pferdehuf", function() {deepEqual( Stem("pferdehufen"), "pferdehuf");});
test("pferdekräfte -> pferdekraft", function() {deepEqual( Stem("pferdekräfte"), "pferdekraft");});
test("pferden -> pferd", function() {deepEqual( Stem("pferden"), "pferd");});
test("pferdes -> pferd", function() {deepEqual( Stem("pferdes"), "pferd");});
test("pfiff -> pfiff", function() {deepEqual( Stem("pfiff"), "pfiff");});
test("pfiffe -> pfiff", function() {deepEqual( Stem("pfiffe"), "pfiff");});
test("pfiffige -> pfiffig", function() {deepEqual( Stem("pfiffige"), "pfiffig");});
test("pfiffigem -> pfiffig", function() {deepEqual( Stem("pfiffigem"), "pfiffig");});
test("pfingstsonntag -> pfingstsonntag", function() {deepEqual( Stem("pfingstsonntag"), "pfingstsonntag");});
test("pflänzchen -> pflanzch", function() {deepEqual( Stem("pflänzchen"), "pflanzch");});
test("pflanze -> pflanz", function() {deepEqual( Stem("pflanze"), "pflanz");});
test("pflanzen -> pflanz", function() {deepEqual( Stem("pflanzen"), "pflanz");});
test("pflanzensamen -> pflanzensam", function() {deepEqual( Stem("pflanzensamen"), "pflanzensam");});
test("pflanzerzigarre -> pflanzerzigarr", function() {deepEqual( Stem("pflanzerzigarre"), "pflanzerzigarr");});
test("pflanzt -> pflanzt", function() {deepEqual( Stem("pflanzt"), "pflanzt");});
test("pflanzte -> pflanzt", function() {deepEqual( Stem("pflanzte"), "pflanzt");});
test("pflanzung -> pflanzung", function() {deepEqual( Stem("pflanzung"), "pflanzung");});
test("pflanzungen -> pflanzung", function() {deepEqual( Stem("pflanzungen"), "pflanzung");});
test("pflaster -> pflast", function() {deepEqual( Stem("pflaster"), "pflast");});
test("pflaume -> pflaum", function() {deepEqual( Stem("pflaume"), "pflaum");});
test("pflaumen -> pflaum", function() {deepEqual( Stem("pflaumen"), "pflaum");});
test("pflaumenaug -> pflaumenaug", function() {deepEqual( Stem("pflaumenaug"), "pflaumenaug");});
test("pflaumenkern -> pflaumenk", function() {deepEqual( Stem("pflaumenkern"), "pflaumenk");});
test("pflege -> pfleg", function() {deepEqual( Stem("pflege"), "pfleg");});
test("pflegen -> pfleg", function() {deepEqual( Stem("pflegen"), "pfleg");});
test("pflegst -> pfleg", function() {deepEqual( Stem("pflegst"), "pfleg");});
test("pflegt -> pflegt", function() {deepEqual( Stem("pflegt"), "pflegt");});
test("pflegte -> pflegt", function() {deepEqual( Stem("pflegte"), "pflegt");});
test("pflegten -> pflegt", function() {deepEqual( Stem("pflegten"), "pflegt");});
test("pflicht -> pflicht", function() {deepEqual( Stem("pflicht"), "pflicht");});
test("pflichtbewußtsein -> pflichtbewusstsein", function() {deepEqual( Stem("pflichtbewußtsein"), "pflichtbewusstsein");});
test("pflichten -> pflicht", function() {deepEqual( Stem("pflichten"), "pflicht");});
test("pflichterfüllung -> pflichterfull", function() {deepEqual( Stem("pflichterfüllung"), "pflichterfull");});
test("pflichtgemäss -> pflichtgemass", function() {deepEqual( Stem("pflichtgemäss"), "pflichtgemass");});
test("pflichtgemäß -> pflichtgemass", function() {deepEqual( Stem("pflichtgemäß"), "pflichtgemass");});
test("pflichtgemässe -> pflichtgemass", function() {deepEqual( Stem("pflichtgemässe"), "pflichtgemass");});
test("pflichtmässig -> pflichtmass", function() {deepEqual( Stem("pflichtmässig"), "pflichtmass");});
test("pflichtmässigen -> pflichtmass", function() {deepEqual( Stem("pflichtmässigen"), "pflichtmass");});
test("pflichtveranstaltung -> pflichtveranstalt", function() {deepEqual( Stem("pflichtveranstaltung"), "pflichtveranstalt");});
test("pflichtvergessene -> pflichtvergess", function() {deepEqual( Stem("pflichtvergessene"), "pflichtvergess");});
test("pflug -> pflug", function() {deepEqual( Stem("pflug"), "pflug");});
test("pfluge -> pflug", function() {deepEqual( Stem("pfluge"), "pflug");});
test("pflüge -> pflug", function() {deepEqual( Stem("pflüge"), "pflug");});
test("pflügen -> pflug", function() {deepEqual( Stem("pflügen"), "pflug");});
test("pflüger -> pflug", function() {deepEqual( Stem("pflüger"), "pflug");});
test("pflügte -> pflugt", function() {deepEqual( Stem("pflügte"), "pflugt");});
test("pflügten -> pflugt", function() {deepEqual( Stem("pflügten"), "pflugt");});
test("pflugviehs -> pflugvieh", function() {deepEqual( Stem("pflugviehs"), "pflugvieh");});
test("pflugzüge -> pflugzug", function() {deepEqual( Stem("pflugzüge"), "pflugzug");});
test("pforte -> pfort", function() {deepEqual( Stem("pforte"), "pfort");});
test("pforten -> pfort", function() {deepEqual( Stem("pforten"), "pfort");});
test("pförtlein -> pfortlein", function() {deepEqual( Stem("pförtlein"), "pfortlein");});
test("pfötchen -> pfotch", function() {deepEqual( Stem("pfötchen"), "pfotch");});
test("pfote -> pfot", function() {deepEqual( Stem("pfote"), "pfot");});
test("pfoten -> pfot", function() {deepEqual( Stem("pfoten"), "pfot");});
test("pfründe -> pfrund", function() {deepEqual( Stem("pfründe"), "pfrund");});
test("pfüet -> pfuet", function() {deepEqual( Stem("pfüet"), "pfuet");});
test("pfuhl -> pfuhl", function() {deepEqual( Stem("pfuhl"), "pfuhl");});
test("pfühl -> pfuhl", function() {deepEqual( Stem("pfühl"), "pfuhl");});
test("pfui -> pfui", function() {deepEqual( Stem("pfui"), "pfui");});
test("pfülmen -> pfulm", function() {deepEqual( Stem("pfülmen"), "pfulm");});
test("pfund -> pfund", function() {deepEqual( Stem("pfund"), "pfund");});
test("pfuschern -> pfusch", function() {deepEqual( Stem("pfuschern"), "pfusch");});
test("pfuschte -> pfuscht", function() {deepEqual( Stem("pfuschte"), "pfuscht");});
test("pfütze -> pfutz", function() {deepEqual( Stem("pfütze"), "pfutz");});
test("pfützen -> pfutz", function() {deepEqual( Stem("pfützen"), "pfutz");});
test("pfütznassen -> pfutznass", function() {deepEqual( Stem("pfütznassen"), "pfutznass");});
test("phäakenaufschwung -> phaakenaufschw", function() {deepEqual( Stem("phäakenaufschwung"), "phaakenaufschw");});
test("phaethon -> phaethon", function() {deepEqual( Stem("phaethon"), "phaethon");});
test("phänomene -> phanom", function() {deepEqual( Stem("phänomene"), "phanom");});
test("phänomenen -> phanom", function() {deepEqual( Stem("phänomenen"), "phanom");});
test("phantasie -> phantasi", function() {deepEqual( Stem("phantasie"), "phantasi");});
test("phantasielos -> phantasielos", function() {deepEqual( Stem("phantasielos"), "phantasielos");});
test("phantasien -> phantasi", function() {deepEqual( Stem("phantasien"), "phantasi");});
test("phantasierte -> phantasiert", function() {deepEqual( Stem("phantasierte"), "phantasiert");});
test("phantasterei -> phantasterei", function() {deepEqual( Stem("phantasterei"), "phantasterei");});
test("phantastisch -> phantast", function() {deepEqual( Stem("phantastisch"), "phantast");});
test("pharao -> pharao", function() {deepEqual( Stem("pharao"), "pharao");});
test("pharaos -> pharaos", function() {deepEqual( Stem("pharaos"), "pharaos");});
test("pharisäer -> pharisa", function() {deepEqual( Stem("pharisäer"), "pharisa");});
test("pharisäern -> pharisa", function() {deepEqual( Stem("pharisäern"), "pharisa");});
test("pheresiter -> pheresit", function() {deepEqual( Stem("pheresiter"), "pheresit");});
test("pheresiters -> pheresit", function() {deepEqual( Stem("pheresiters"), "pheresit");});
test("philanthropie -> philanthropi", function() {deepEqual( Stem("philanthropie"), "philanthropi");});
test("philautia -> philautia", function() {deepEqual( Stem("philautia"), "philautia");});
test("philipp -> philipp", function() {deepEqual( Stem("philipp"), "philipp");});
test("philippus -> philippus", function() {deepEqual( Stem("philippus"), "philippus");});
test("philistäa -> philistaa", function() {deepEqual( Stem("philistäa"), "philistaa");});
test("philister -> philist", function() {deepEqual( Stem("philister"), "philist");});
test("philisterhafter -> philisterhaft", function() {deepEqual( Stem("philisterhafter"), "philisterhaft");});
test("philisterhaftigkeit -> philisterhaft", function() {deepEqual( Stem("philisterhaftigkeit"), "philisterhaft");});
test("philistern -> philist", function() {deepEqual( Stem("philistern"), "philist");});
test("philisterseelen -> philisterseel", function() {deepEqual( Stem("philisterseelen"), "philisterseel");});
test("philoso -> philoso", function() {deepEqual( Stem("philoso"), "philoso");});
test("philosoph -> philosoph", function() {deepEqual( Stem("philosoph"), "philosoph");});
test("philosophen -> philosoph", function() {deepEqual( Stem("philosophen"), "philosoph");});
test("philosophie -> philosophi", function() {deepEqual( Stem("philosophie"), "philosophi");});
test("philosophiert -> philosophiert", function() {deepEqual( Stem("philosophiert"), "philosophiert");});
test("philosophin -> philosophin", function() {deepEqual( Stem("philosophin"), "philosophin");});
test("philosophisch -> philosoph", function() {deepEqual( Stem("philosophisch"), "philosoph");});
test("philosophischem -> philosoph", function() {deepEqual( Stem("philosophischem"), "philosoph");});
test("philosophischen -> philosoph", function() {deepEqual( Stem("philosophischen"), "philosoph");});
test("philosophischer -> philosoph", function() {deepEqual( Stem("philosophischer"), "philosoph");});
test("philosophisches -> philosoph", function() {deepEqual( Stem("philosophisches"), "philosoph");});
test("phische -> phisch", function() {deepEqual( Stem("phische"), "phisch");});
test("photographien -> photographi", function() {deepEqual( Stem("photographien"), "photographi");});
test("phrasen -> phras", function() {deepEqual( Stem("phrasen"), "phras");});
test("phrath -> phrath", function() {deepEqual( Stem("phrath"), "phrath");});
test("physik -> physik", function() {deepEqual( Stem("physik"), "physik");});
test("physische -> physisch", function() {deepEqual( Stem("physische"), "physisch");});
test("physischen -> physisch", function() {deepEqual( Stem("physischen"), "physisch");});
test("pianisten -> pianist", function() {deepEqual( Stem("pianisten"), "pianist");});
test("pick -> pick", function() {deepEqual( Stem("pick"), "pick");});
test("piepen -> piep", function() {deepEqual( Stem("piepen"), "piep");});
test("pietätlosigkeit -> pietatlos", function() {deepEqual( Stem("pietätlosigkeit"), "pietatlos");});
test("pijanon -> pijanon", function() {deepEqual( Stem("pijanon"), "pijanon");});
test("pikierten -> pikiert", function() {deepEqual( Stem("pikierten"), "pikiert");});
test("pilatus -> pilatus", function() {deepEqual( Stem("pilatus"), "pilatus");});
test("pilgerfahrten -> pilgerfahrt", function() {deepEqual( Stem("pilgerfahrten"), "pilgerfahrt");});
test("pilgerstab -> pilgerstab", function() {deepEqual( Stem("pilgerstab"), "pilgerstab");});
test("pilotprojekt -> pilotprojekt", function() {deepEqual( Stem("pilotprojekt"), "pilotprojekt");});
test("pilze -> pilz", function() {deepEqual( Stem("pilze"), "pilz");});
test("pinehas -> pinehas", function() {deepEqual( Stem("pinehas"), "pinehas");});
test("pineiss -> pineiss", function() {deepEqual( Stem("pineiss"), "pineiss");});
test("pineissens -> pineiss", function() {deepEqual( Stem("pineissens"), "pineiss");});
test("pinsel -> pinsel", function() {deepEqual( Stem("pinsel"), "pinsel");});
test("pipsernden -> pipsernd", function() {deepEqual( Stem("pipsernden"), "pipsernd");});
test("pirsch -> pirsch", function() {deepEqual( Stem("pirsch"), "pirsch");});
test("pirsche -> pirsch", function() {deepEqual( Stem("pirsche"), "pirsch");});
test("pirschgang -> pirschgang", function() {deepEqual( Stem("pirschgang"), "pirschgang");});
test("pirschwetter -> pirschwett", function() {deepEqual( Stem("pirschwetter"), "pirschwett");});
test("pischon -> pischon", function() {deepEqual( Stem("pischon"), "pischon");});
test("pispernd -> pispernd", function() {deepEqual( Stem("pispernd"), "pispernd");});
test("pistole -> pistol", function() {deepEqual( Stem("pistole"), "pistol");});
test("pistolen -> pistol", function() {deepEqual( Stem("pistolen"), "pistol");});
test("pistolengeschütz -> pistolengeschutz", function() {deepEqual( Stem("pistolengeschütz"), "pistolengeschutz");});
test("pithom -> pithom", function() {deepEqual( Stem("pithom"), "pithom");});
test("pitschnassen -> pitschnass", function() {deepEqual( Stem("pitschnassen"), "pitschnass");});
test("plafonds -> plafond", function() {deepEqual( Stem("plafonds"), "plafond");});
test("plage -> plag", function() {deepEqual( Stem("plage"), "plag");});
test("plagen -> plag", function() {deepEqual( Stem("plagen"), "plag");});
test("plagten -> plagt", function() {deepEqual( Stem("plagten"), "plagt");});
test("plakat -> plakat", function() {deepEqual( Stem("plakat"), "plakat");});
test("plakate -> plakat", function() {deepEqual( Stem("plakate"), "plakat");});
test("plakaten -> plakat", function() {deepEqual( Stem("plakaten"), "plakat");});
test("plan -> plan", function() {deepEqual( Stem("plan"), "plan");});
test("plane -> plan", function() {deepEqual( Stem("plane"), "plan");});
test("pläne -> plan", function() {deepEqual( Stem("pläne"), "plan");});
test("planet -> planet", function() {deepEqual( Stem("planet"), "planet");});
test("planeten -> planet", function() {deepEqual( Stem("planeten"), "planet");});
test("plangemäss -> plangemass", function() {deepEqual( Stem("plangemäss"), "plangemass");});
test("plankenzaun -> plankenzaun", function() {deepEqual( Stem("plankenzaun"), "plankenzaun");});
test("plant -> plant", function() {deepEqual( Stem("plant"), "plant");});
test("plappermaul -> plappermaul", function() {deepEqual( Stem("plappermaul"), "plappermaul");});
test("platane -> platan", function() {deepEqual( Stem("platane"), "platan");});
test("platanen -> platan", function() {deepEqual( Stem("platanen"), "platan");});
test("plato -> plato", function() {deepEqual( Stem("plato"), "plato");});
test("platonis -> platonis", function() {deepEqual( Stem("platonis"), "platonis");});
test("platos -> platos", function() {deepEqual( Stem("platos"), "platos");});
test("platschte -> platscht", function() {deepEqual( Stem("platschte"), "platscht");});
test("platte -> platt", function() {deepEqual( Stem("platte"), "platt");});
test("plattenproduzent -> plattenproduzent", function() {deepEqual( Stem("plattenproduzent"), "plattenproduzent");});
test("plättete -> plattet", function() {deepEqual( Stem("plättete"), "plattet");});
test("plattform -> plattform", function() {deepEqual( Stem("plattform"), "plattform");});
test("plattner -> plattn", function() {deepEqual( Stem("plattner"), "plattn");});
test("platz -> platz", function() {deepEqual( Stem("platz"), "platz");});
test("plätzchen -> platzch", function() {deepEqual( Stem("plätzchen"), "platzch");});
test("plätzchens -> platzch", function() {deepEqual( Stem("plätzchens"), "platzch");});
test("platze -> platz", function() {deepEqual( Stem("platze"), "platz");});
test("plätze -> platz", function() {deepEqual( Stem("plätze"), "platz");});
test("platzen -> platz", function() {deepEqual( Stem("platzen"), "platz");});
test("plätzen -> platz", function() {deepEqual( Stem("plätzen"), "platz");});
test("platzes -> platz", function() {deepEqual( Stem("platzes"), "platz");});
test("platzl -> platzl", function() {deepEqual( Stem("platzl"), "platzl");});
test("platzregen -> platzreg", function() {deepEqual( Stem("platzregen"), "platzreg");});
test("platzt -> platzt", function() {deepEqual( Stem("platzt"), "platzt");});
test("platzten -> platzt", function() {deepEqual( Stem("platzten"), "platzt");});
test("plauderei -> plauderei", function() {deepEqual( Stem("plauderei"), "plauderei");});
test("plaudern -> plaud", function() {deepEqual( Stem("plaudern"), "plaud");});
test("plaudernd -> plaudernd", function() {deepEqual( Stem("plaudernd"), "plaudernd");});
test("plaudert -> plaudert", function() {deepEqual( Stem("plaudert"), "plaudert");});
test("plauderte -> plaudert", function() {deepEqual( Stem("plauderte"), "plaudert");});
test("plauderten -> plaudert", function() {deepEqual( Stem("plauderten"), "plaudert");});
test("plausibel -> plausibel", function() {deepEqual( Stem("plausibel"), "plausibel");});
test("plausibilität -> plausibilitat", function() {deepEqual( Stem("plausibilität"), "plausibilitat");});
test("playactors -> playactor", function() {deepEqual( Stem("playactors"), "playactor");});
test("plebejisch -> plebej", function() {deepEqual( Stem("plebejisch"), "plebej");});
test("plötzlich -> plotzlich", function() {deepEqual( Stem("plötzlich"), "plotzlich");});
test("plötzliche -> plotzlich", function() {deepEqual( Stem("plötzliche"), "plotzlich");});
test("plötzlichen -> plotzlich", function() {deepEqual( Stem("plötzlichen"), "plotzlich");});
test("plötzlicher -> plotzlich", function() {deepEqual( Stem("plötzlicher"), "plotzlich");});
test("plötzliches -> plotzlich", function() {deepEqual( Stem("plötzliches"), "plotzlich");});
test("plötzlichkeit -> plotzlich", function() {deepEqual( Stem("plötzlichkeit"), "plotzlich");});
test("plump -> plump", function() {deepEqual( Stem("plump"), "plump");});
test("plumpe -> plump", function() {deepEqual( Stem("plumpe"), "plump");});
test("plumpen -> plump", function() {deepEqual( Stem("plumpen"), "plump");});
test("plumpheit -> plumpheit", function() {deepEqual( Stem("plumpheit"), "plumpheit");});
test("plumsdibums -> plumsdibum", function() {deepEqual( Stem("plumsdibums"), "plumsdibum");});
test("plunder -> plund", function() {deepEqual( Stem("plunder"), "plund");});
test("plündergut -> plundergut", function() {deepEqual( Stem("plündergut"), "plundergut");});
test("plündern -> plund", function() {deepEqual( Stem("plündern"), "plund");});
test("plus -> plus", function() {deepEqual( Stem("plus"), "plus");});
test("plusterröcken -> plusterrock", function() {deepEqual( Stem("plusterröcken"), "plusterrock");});
test("plusterte -> plustert", function() {deepEqual( Stem("plusterte"), "plustert");});
test("pochen -> poch", function() {deepEqual( Stem("pochen"), "poch");});
test("pochenden -> pochend", function() {deepEqual( Stem("pochenden"), "pochend");});
test("pochte -> pocht", function() {deepEqual( Stem("pochte"), "pocht");});
test("podium -> podium", function() {deepEqual( Stem("podium"), "podium");});
test("podiums -> podium", function() {deepEqual( Stem("podiums"), "podium");});
test("podiumsgespräch -> podiumsgesprach", function() {deepEqual( Stem("podiumsgespräch"), "podiumsgesprach");});
test("poesie -> poesi", function() {deepEqual( Stem("poesie"), "poesi");});
test("pokalsieger -> pokalsieg", function() {deepEqual( Stem("pokalsieger"), "pokalsieg");});
test("polacke -> polack", function() {deepEqual( Stem("polacke"), "polack");});
test("polackei -> polackei", function() {deepEqual( Stem("polackei"), "polackei");});
test("polacken -> polack", function() {deepEqual( Stem("polacken"), "polack");});
test("polarkreises -> polarkreis", function() {deepEqual( Stem("polarkreises"), "polarkreis");});
test("polen -> pol", function() {deepEqual( Stem("polen"), "pol");});
test("polenmütze -> polenmutz", function() {deepEqual( Stem("polenmütze"), "polenmutz");});
test("poliert -> poliert", function() {deepEqual( Stem("poliert"), "poliert");});
test("polierten -> poliert", function() {deepEqual( Stem("polierten"), "poliert");});
test("politik -> polit", function() {deepEqual( Stem("politik"), "polit");});
test("politiker -> polit", function() {deepEqual( Stem("politiker"), "polit");});
test("politisch -> polit", function() {deepEqual( Stem("politisch"), "polit");});
test("politische -> polit", function() {deepEqual( Stem("politische"), "polit");});
test("politischen -> polit", function() {deepEqual( Stem("politischen"), "polit");});
test("politischer -> polit", function() {deepEqual( Stem("politischer"), "polit");});
test("politisieren -> politisi", function() {deepEqual( Stem("politisieren"), "politisi");});
test("polizei -> polizei", function() {deepEqual( Stem("polizei"), "polizei");});
test("polizeiakten -> polizeiakt", function() {deepEqual( Stem("polizeiakten"), "polizeiakt");});
test("polizeianstalt -> polizeianstalt", function() {deepEqual( Stem("polizeianstalt"), "polizeianstalt");});
test("polizeiliches -> polizei", function() {deepEqual( Stem("polizeiliches"), "polizei");});
test("polizeimann -> polizeimann", function() {deepEqual( Stem("polizeimann"), "polizeimann");});
test("polizeistation -> polizeistation", function() {deepEqual( Stem("polizeistation"), "polizeistation");});
test("polizeiwagen -> polizeiwag", function() {deepEqual( Stem("polizeiwagen"), "polizeiwag");});
test("polizist -> polizist", function() {deepEqual( Stem("polizist"), "polizist");});
test("polizisten -> polizist", function() {deepEqual( Stem("polizisten"), "polizist");});
test("pollux -> pollux", function() {deepEqual( Stem("pollux"), "pollux");});
test("polnisch -> polnisch", function() {deepEqual( Stem("polnisch"), "polnisch");});
test("polnische -> polnisch", function() {deepEqual( Stem("polnische"), "polnisch");});
test("polnischen -> polnisch", function() {deepEqual( Stem("polnischen"), "polnisch");});
test("polnischer -> polnisch", function() {deepEqual( Stem("polnischer"), "polnisch");});
test("polnisches -> polnisch", function() {deepEqual( Stem("polnisches"), "polnisch");});
test("polster -> polst", function() {deepEqual( Stem("polster"), "polst");});
test("polstersessel -> polstersessel", function() {deepEqual( Stem("polstersessel"), "polstersessel");});
test("polsterstuhle -> polsterstuhl", function() {deepEqual( Stem("polsterstuhle"), "polsterstuhl");});
test("polsterstühle -> polsterstuhl", function() {deepEqual( Stem("polsterstühle"), "polsterstuhl");});
test("polterabend -> polterab", function() {deepEqual( Stem("polterabend"), "polterab");});
test("poltern -> polt", function() {deepEqual( Stem("poltern"), "polt");});
test("polterte -> poltert", function() {deepEqual( Stem("polterte"), "poltert");});
test("pomade -> pomad", function() {deepEqual( Stem("pomade"), "pomad");});
test("pomphafte -> pomphaft", function() {deepEqual( Stem("pomphafte"), "pomphaft");});
test("pönitenz -> ponitenz", function() {deepEqual( Stem("pönitenz"), "ponitenz");});
test("pontius -> pontius", function() {deepEqual( Stem("pontius"), "pontius");});
test("pop -> pop", function() {deepEqual( Stem("pop"), "pop");});
test("popanze -> popanz", function() {deepEqual( Stem("popanze"), "popanz");});
test("populäres -> popular", function() {deepEqual( Stem("populäres"), "popular");});
test("popularitätstief -> popularitatstief", function() {deepEqual( Stem("popularitätstief"), "popularitatstief");});
test("populismus -> populismus", function() {deepEqual( Stem("populismus"), "populismus");});
test("portier -> porti", function() {deepEqual( Stem("portier"), "porti");});
test("portiers -> porti", function() {deepEqual( Stem("portiers"), "porti");});
test("portierte -> portiert", function() {deepEqual( Stem("portierte"), "portiert");});
test("portierten -> portiert", function() {deepEqual( Stem("portierten"), "portiert");});
test("portion -> portion", function() {deepEqual( Stem("portion"), "portion");});
test("portionen -> portion", function() {deepEqual( Stem("portionen"), "portion");});
test("portionenweise -> portionenweis", function() {deepEqual( Stem("portionenweise"), "portionenweis");});
test("porto -> porto", function() {deepEqual( Stem("porto"), "porto");});
test("portokosten -> portokost", function() {deepEqual( Stem("portokosten"), "portokost");});
test("porträt -> portrat", function() {deepEqual( Stem("porträt"), "portrat");});
test("porträts -> portrat", function() {deepEqual( Stem("porträts"), "portrat");});
test("porzellan -> porzellan", function() {deepEqual( Stem("porzellan"), "porzellan");});
test("porzellanköpfchen -> porzellankopfch", function() {deepEqual( Stem("porzellanköpfchen"), "porzellankopfch");});
test("porzellansplitter -> porzellansplitt", function() {deepEqual( Stem("porzellansplitter"), "porzellansplitt");});
test("porzia -> porzia", function() {deepEqual( Stem("porzia"), "porzia");});
test("posaunen -> posaun", function() {deepEqual( Stem("posaunen"), "posaun");});
test("posaunenbläser -> posaunenblas", function() {deepEqual( Stem("posaunenbläser"), "posaunenblas");});
test("posaunenschall -> posaunenschall", function() {deepEqual( Stem("posaunenschall"), "posaunenschall");});
test("posaunensturmstimme -> posaunensturmstimm", function() {deepEqual( Stem("posaunensturmstimme"), "posaunensturmstimm");});
test("posaunt -> posaunt", function() {deepEqual( Stem("posaunt"), "posaunt");});
test("posaunte -> posaunt", function() {deepEqual( Stem("posaunte"), "posaunt");});
test("position -> position", function() {deepEqual( Stem("position"), "position");});
test("positionen -> position", function() {deepEqual( Stem("positionen"), "position");});
test("positiv -> positiv", function() {deepEqual( Stem("positiv"), "positiv");});
test("positive -> positiv", function() {deepEqual( Stem("positive"), "positiv");});
test("positiven -> positiv", function() {deepEqual( Stem("positiven"), "positiv");});
test("positiver -> positiv", function() {deepEqual( Stem("positiver"), "positiv");});
test("positives -> positiv", function() {deepEqual( Stem("positives"), "positiv");});
test("positur -> positur", function() {deepEqual( Stem("positur"), "positur");});
test("possen -> poss", function() {deepEqual( Stem("possen"), "poss");});
test("possierliche -> possi", function() {deepEqual( Stem("possierliche"), "possi");});
test("possierlichen -> possi", function() {deepEqual( Stem("possierlichen"), "possi");});
test("possierlichkeit -> possier", function() {deepEqual( Stem("possierlichkeit"), "possier");});
test("post -> post", function() {deepEqual( Stem("post"), "post");});
test("postabschluss -> postabschluss", function() {deepEqual( Stem("postabschluss"), "postabschluss");});
test("postabschluß -> postabschluss", function() {deepEqual( Stem("postabschluß"), "postabschluss");});
test("posten -> post", function() {deepEqual( Stem("posten"), "post");});
test("postfach -> postfach", function() {deepEqual( Stem("postfach"), "postfach");});
test("posthorntönen -> posthornton", function() {deepEqual( Stem("posthorntönen"), "posthornton");});
test("postieren -> posti", function() {deepEqual( Stem("postieren"), "posti");});
test("postulat -> postulat", function() {deepEqual( Stem("postulat"), "postulat");});
test("postulate -> postulat", function() {deepEqual( Stem("postulate"), "postulat");});
test("postulaten -> postulat", function() {deepEqual( Stem("postulaten"), "postulat");});
test("postulats -> postulat", function() {deepEqual( Stem("postulats"), "postulat");});
test("postulieren -> postuli", function() {deepEqual( Stem("postulieren"), "postuli");});
test("postuliert -> postuliert", function() {deepEqual( Stem("postuliert"), "postuliert");});
test("postwendend -> postwend", function() {deepEqual( Stem("postwendend"), "postwend");});
test("potsdam -> potsdam", function() {deepEqual( Stem("potsdam"), "potsdam");});
test("potz -> potz", function() {deepEqual( Stem("potz"), "potz");});
test("poularde -> poulard", function() {deepEqual( Stem("poularde"), "poulard");});
test("prä -> pra", function() {deepEqual( Stem("prä"), "pra");});
test("pracht -> pracht", function() {deepEqual( Stem("pracht"), "pracht");});
test("prächtig -> prachtig", function() {deepEqual( Stem("prächtig"), "prachtig");});
test("prächtige -> prachtig", function() {deepEqual( Stem("prächtige"), "prachtig");});
test("prächtigen -> prachtig", function() {deepEqual( Stem("prächtigen"), "prachtig");});
test("prächtiger -> prachtig", function() {deepEqual( Stem("prächtiger"), "prachtig");});
test("prächtiges -> prachtig", function() {deepEqual( Stem("prächtiges"), "prachtig");});
test("prächtigste -> prachtig", function() {deepEqual( Stem("prächtigste"), "prachtig");});
test("prachtkleid -> prachtkleid", function() {deepEqual( Stem("prachtkleid"), "prachtkleid");});
test("prachtvoll -> prachtvoll", function() {deepEqual( Stem("prachtvoll"), "prachtvoll");});
test("prachtvolle -> prachtvoll", function() {deepEqual( Stem("prachtvolle"), "prachtvoll");});
test("prädikat -> pradikat", function() {deepEqual( Stem("prädikat"), "pradikat");});
test("prädikate -> pradikat", function() {deepEqual( Stem("prädikate"), "pradikat");});
test("praedestinatione -> praedestination", function() {deepEqual( Stem("praedestinatione"), "praedestination");});
test("praedestinationes -> praedestination", function() {deepEqual( Stem("praedestinationes"), "praedestination");});
test("prag -> prag", function() {deepEqual( Stem("prag"), "prag");});
test("praga -> praga", function() {deepEqual( Stem("praga"), "praga");});
test("pragmateia -> pragmateia", function() {deepEqual( Stem("pragmateia"), "pragmateia");});
test("prägten -> pragt", function() {deepEqual( Stem("prägten"), "pragt");});
test("prahlen -> prahl", function() {deepEqual( Stem("prahlen"), "prahl");});
test("prahler -> prahl", function() {deepEqual( Stem("prahler"), "prahl");});
test("prahlerisch -> prahler", function() {deepEqual( Stem("prahlerisch"), "prahler");});
test("prahlerischen -> prahler", function() {deepEqual( Stem("prahlerischen"), "prahler");});
test("prahlerischer -> prahler", function() {deepEqual( Stem("prahlerischer"), "prahler");});
test("präjudizien -> prajudizi", function() {deepEqual( Stem("präjudizien"), "prajudizi");});
test("praktikum -> praktikum", function() {deepEqual( Stem("praktikum"), "praktikum");});
test("praktisch -> praktisch", function() {deepEqual( Stem("praktisch"), "praktisch");});
test("praktische -> praktisch", function() {deepEqual( Stem("praktische"), "praktisch");});
test("praktischem -> praktisch", function() {deepEqual( Stem("praktischem"), "praktisch");});
test("praktischen -> praktisch", function() {deepEqual( Stem("praktischen"), "praktisch");});
test("praktischer -> praktisch", function() {deepEqual( Stem("praktischer"), "praktisch");});
test("praktisches -> praktisch", function() {deepEqual( Stem("praktisches"), "praktisch");});
test("praktizierende -> praktizier", function() {deepEqual( Stem("praktizierende"), "praktizier");});
test("prälaten -> pralat", function() {deepEqual( Stem("prälaten"), "pralat");});
test("präludium -> praludium", function() {deepEqual( Stem("präludium"), "praludium");});
test("prangt -> prangt", function() {deepEqual( Stem("prangt"), "prangt");});
test("prangte -> prangt", function() {deepEqual( Stem("prangte"), "prangt");});
test("präparaten -> praparat", function() {deepEqual( Stem("präparaten"), "praparat");});
test("präpariere -> prapari", function() {deepEqual( Stem("präpariere"), "prapari");});
test("prarrerschaft -> prarrerschaft", function() {deepEqual( Stem("prarrerschaft"), "prarrerschaft");});
test("prarrkapitel -> prarrkapitel", function() {deepEqual( Stem("prarrkapitel"), "prarrkapitel");});
test("präsent -> prasent", function() {deepEqual( Stem("präsent"), "prasent");});
test("präsentiert -> prasentiert", function() {deepEqual( Stem("präsentiert"), "prasentiert");});
test("präsentierteller -> prasentiertell", function() {deepEqual( Stem("präsentierteller"), "prasentiertell");});
test("präses -> pras", function() {deepEqual( Stem("präses"), "pras");});
test("präsident -> prasident", function() {deepEqual( Stem("präsident"), "prasident");});
test("präsidenten -> prasident", function() {deepEqual( Stem("präsidenten"), "prasident");});
test("präsidentin -> prasidentin", function() {deepEqual( Stem("präsidentin"), "prasidentin");});
test("präsidierte -> prasidiert", function() {deepEqual( Stem("präsidierte"), "prasidiert");});
test("prasselten -> prasselt", function() {deepEqual( Stem("prasselten"), "prasselt");});
test("präventiven -> praventiv", function() {deepEqual( Stem("präventiven"), "praventiv");});
test("predigen -> predig", function() {deepEqual( Stem("predigen"), "predig");});
test("prediger -> predig", function() {deepEqual( Stem("prediger"), "predig");});
test("prediget -> prediget", function() {deepEqual( Stem("prediget"), "prediget");});
test("predigt -> predigt", function() {deepEqual( Stem("predigt"), "predigt");});
test("predigten -> predigt", function() {deepEqual( Stem("predigten"), "predigt");});
test("preis -> preis", function() {deepEqual( Stem("preis"), "preis");});
test("preisausschreiben -> preisausschreib", function() {deepEqual( Stem("preisausschreiben"), "preisausschreib");});
test("preisen -> preis", function() {deepEqual( Stem("preisen"), "preis");});
test("preises -> preis", function() {deepEqual( Stem("preises"), "preis");});
test("preiset -> preiset", function() {deepEqual( Stem("preiset"), "preiset");});
test("preisgegeben -> preisgegeb", function() {deepEqual( Stem("preisgegeben"), "preisgegeb");});
test("preisgibt -> preisgibt", function() {deepEqual( Stem("preisgibt"), "preisgibt");});
test("preisträger -> preistrag", function() {deepEqual( Stem("preisträger"), "preistrag");});
test("preiszugeben -> preiszugeb", function() {deepEqual( Stem("preiszugeben"), "preiszugeb");});
test("prenzlauer -> prenzlau", function() {deepEqual( Stem("prenzlauer"), "prenzlau");});
test("presse -> press", function() {deepEqual( Stem("presse"), "press");});
test("pressedienst -> pressedien", function() {deepEqual( Stem("pressedienst"), "pressedien");});
test("pressedienstes -> pressedien", function() {deepEqual( Stem("pressedienstes"), "pressedien");});
test("pressemiteilung -> pressemiteil", function() {deepEqual( Stem("pressemiteilung"), "pressemiteil");});
test("pressemitteilung -> pressemitteil", function() {deepEqual( Stem("pressemitteilung"), "pressemitteil");});
test("pressemittteilung -> pressemittteil", function() {deepEqual( Stem("pressemittteilung"), "pressemittteil");});
test("pressieren -> pressi", function() {deepEqual( Stem("pressieren"), "pressi");});
test("presste -> presst", function() {deepEqual( Stem("presste"), "presst");});
test("prester -> prest", function() {deepEqual( Stem("prester"), "prest");});
test("prickelte -> prickelt", function() {deepEqual( Stem("prickelte"), "prickelt");});
test("pries -> pries", function() {deepEqual( Stem("pries"), "pries");});
test("priester -> priest", function() {deepEqual( Stem("priester"), "priest");});
test("priestern -> priest", function() {deepEqual( Stem("priestern"), "priest");});
test("priesters -> priest", function() {deepEqual( Stem("priesters"), "priest");});
test("priesterstöchter -> priesterstocht", function() {deepEqual( Stem("priesterstöchter"), "priesterstocht");});
test("priestertalar -> priestertalar", function() {deepEqual( Stem("priestertalar"), "priestertalar");});
test("priestertum -> priestertum", function() {deepEqual( Stem("priestertum"), "priestertum");});
test("priestertume -> priestertum", function() {deepEqual( Stem("priestertume"), "priestertum");});
test("priestertums -> priestertum", function() {deepEqual( Stem("priestertums"), "priestertum");});
test("primat -> primat", function() {deepEqual( Stem("primat"), "primat");});
test("primate -> primat", function() {deepEqual( Stem("primate"), "primat");});
test("principia -> principia", function() {deepEqual( Stem("principia"), "principia");});
test("principiis -> principiis", function() {deepEqual( Stem("principiis"), "principiis");});
test("prinz -> prinz", function() {deepEqual( Stem("prinz"), "prinz");});
test("prinzen -> prinz", function() {deepEqual( Stem("prinzen"), "prinz");});
test("prinzess -> prinzess", function() {deepEqual( Stem("prinzess"), "prinzess");});
test("prinzip -> prinzip", function() {deepEqual( Stem("prinzip"), "prinzip");});
test("prinzipien -> prinzipi", function() {deepEqual( Stem("prinzipien"), "prinzipi");});
test("prinzips -> prinzips", function() {deepEqual( Stem("prinzips"), "prinzips");});
test("priori -> priori", function() {deepEqual( Stem("priori"), "priori");});
test("priorität -> prioritat", function() {deepEqual( Stem("priorität"), "prioritat");});
test("prioritäten -> prioritat", function() {deepEqual( Stem("prioritäten"), "prioritat");});
test("prisen -> pris", function() {deepEqual( Stem("prisen"), "pris");});
test("prius -> prius", function() {deepEqual( Stem("prius"), "prius");});
test("private -> privat", function() {deepEqual( Stem("private"), "privat");});
test("privaten -> privat", function() {deepEqual( Stem("privaten"), "privat");});
test("privates -> privat", function() {deepEqual( Stem("privates"), "privat");});
test("privatgeschäfte -> privatgeschaft", function() {deepEqual( Stem("privatgeschäfte"), "privatgeschaft");});
test("privatleidenschaft -> privatleidenschaft", function() {deepEqual( Stem("privatleidenschaft"), "privatleidenschaft");});
test("privatneigungen -> privatneig", function() {deepEqual( Stem("privatneigungen"), "privatneig");});
test("privatpersonen -> privatperson", function() {deepEqual( Stem("privatpersonen"), "privatperson");});
test("privilegien -> privilegi", function() {deepEqual( Stem("privilegien"), "privilegi");});
test("pro -> pro", function() {deepEqual( Stem("pro"), "pro");});
test("probabilia -> probabilia", function() {deepEqual( Stem("probabilia"), "probabilia");});
test("probe -> prob", function() {deepEqual( Stem("probe"), "prob");});
test("probemetall -> probemetall", function() {deepEqual( Stem("probemetall"), "probemetall");});
test("probesprechen -> probesprech", function() {deepEqual( Stem("probesprechen"), "probesprech");});
test("probieren -> probi", function() {deepEqual( Stem("probieren"), "probi");});
test("probiert -> probiert", function() {deepEqual( Stem("probiert"), "probiert");});
test("probierte -> probiert", function() {deepEqual( Stem("probierte"), "probiert");});
test("probierten -> probiert", function() {deepEqual( Stem("probierten"), "probiert");});
test("problem -> probl", function() {deepEqual( Stem("problem"), "probl");});
test("problematisch -> problemat", function() {deepEqual( Stem("problematisch"), "problemat");});
test("problematischen -> problemat", function() {deepEqual( Stem("problematischen"), "problemat");});
test("problematischer -> problemat", function() {deepEqual( Stem("problematischer"), "problemat");});
test("probleme -> problem", function() {deepEqual( Stem("probleme"), "problem");});
test("problemen -> problem", function() {deepEqual( Stem("problemen"), "problem");});
test("problems -> problem", function() {deepEqual( Stem("problems"), "problem");});
test("problemwelle -> problemwell", function() {deepEqual( Stem("problemwelle"), "problemwell");});
test("produkt -> produkt", function() {deepEqual( Stem("produkt"), "produkt");});
test("produkte -> produkt", function() {deepEqual( Stem("produkte"), "produkt");});
test("produktion -> produktion", function() {deepEqual( Stem("produktion"), "produktion");});
test("produktionsassistentin -> produktionsassistentin", function() {deepEqual( Stem("produktionsassistentin"), "produktionsassistentin");});
test("produktionsverbot -> produktionsverbot", function() {deepEqual( Stem("produktionsverbot"), "produktionsverbot");});
test("produzent -> produzent", function() {deepEqual( Stem("produzent"), "produzent");});
test("produzentin -> produzentin", function() {deepEqual( Stem("produzentin"), "produzentin");});
test("produzieren -> produzi", function() {deepEqual( Stem("produzieren"), "produzi");});
test("profession -> profession", function() {deepEqual( Stem("profession"), "profession");});
test("professionelle -> professionell", function() {deepEqual( Stem("professionelle"), "professionell");});
test("professor -> professor", function() {deepEqual( Stem("professor"), "professor");});
test("profi -> profi", function() {deepEqual( Stem("profi"), "profi");});
test("profil -> profil", function() {deepEqual( Stem("profil"), "profil");});
test("profitieren -> profiti", function() {deepEqual( Stem("profitieren"), "profiti");});
test("programm -> programm", function() {deepEqual( Stem("programm"), "programm");});
test("programmheft -> programmheft", function() {deepEqual( Stem("programmheft"), "programmheft");});
test("progressiv -> progressiv", function() {deepEqual( Stem("progressiv"), "progressiv");});
test("progressus -> progressus", function() {deepEqual( Stem("progressus"), "progressus");});
test("prohibet -> prohibet", function() {deepEqual( Stem("prohibet"), "prohibet");});
test("project -> project", function() {deepEqual( Stem("project"), "project");});
test("projekt -> projekt", function() {deepEqual( Stem("projekt"), "projekt");});
test("projektarbeit -> projektarbeit", function() {deepEqual( Stem("projektarbeit"), "projektarbeit");});
test("projekte -> projekt", function() {deepEqual( Stem("projekte"), "projekt");});
test("projektes -> projekt", function() {deepEqual( Stem("projektes"), "projekt");});
test("prokurist -> prokurist", function() {deepEqual( Stem("prokurist"), "prokurist");});
test("prokuristen -> prokurist", function() {deepEqual( Stem("prokuristen"), "prokurist");});
test("promenaden -> promenad", function() {deepEqual( Stem("promenaden"), "promenad");});
test("promovet -> promovet", function() {deepEqual( Stem("promovet"), "promovet");});
test("promoviert -> promoviert", function() {deepEqual( Stem("promoviert"), "promoviert");});
test("prophet -> prophet", function() {deepEqual( Stem("prophet"), "prophet");});
test("propheten -> prophet", function() {deepEqual( Stem("propheten"), "prophet");});
test("prophetenbildern -> prophetenbild", function() {deepEqual( Stem("prophetenbildern"), "prophetenbild");});
test("prophetische -> prophet", function() {deepEqual( Stem("prophetische"), "prophet");});
test("prophetischen -> prophet", function() {deepEqual( Stem("prophetischen"), "prophet");});
test("prophezeiungen -> prophezei", function() {deepEqual( Stem("prophezeiungen"), "prophezei");});
test("propinquitates -> propinquitat", function() {deepEqual( Stem("propinquitates"), "propinquitat");});
test("proportion -> proportion", function() {deepEqual( Stem("proportion"), "proportion");});
test("proportionierlich -> proportioni", function() {deepEqual( Stem("proportionierlich"), "proportioni");});
test("proportionierte -> proportioniert", function() {deepEqual( Stem("proportionierte"), "proportioniert");});
test("proportionierten -> proportioniert", function() {deepEqual( Stem("proportionierten"), "proportioniert");});
test("proprium -> proprium", function() {deepEqual( Stem("proprium"), "proprium");});
test("prosdialegomenwn -> prosdialegomenwn", function() {deepEqual( Stem("prosdialegomenwn"), "prosdialegomenwn");});
test("prospekte -> prospekt", function() {deepEqual( Stem("prospekte"), "prospekt");});
test("protestant -> protestant", function() {deepEqual( Stem("protestant"), "protestant");});
test("protestantismus -> protestantismus", function() {deepEqual( Stem("protestantismus"), "protestantismus");});
test("protestieren -> protesti", function() {deepEqual( Stem("protestieren"), "protesti");});
test("protestierte -> protestiert", function() {deepEqual( Stem("protestierte"), "protestiert");});
test("protestschreien -> protestschrei", function() {deepEqual( Stem("protestschreien"), "protestschrei");});
test("protokoll -> protokoll", function() {deepEqual( Stem("protokoll"), "protokoll");});
test("provenzalischen -> provenzal", function() {deepEqual( Stem("provenzalischen"), "provenzal");});
test("proviant -> proviant", function() {deepEqual( Stem("proviant"), "proviant");});
test("provinz -> provinz", function() {deepEqual( Stem("provinz"), "provinz");});
test("provinzen -> provinz", function() {deepEqual( Stem("provinzen"), "provinz");});
test("provision -> provision", function() {deepEqual( Stem("provision"), "provision");});
test("provisorischen -> provisor", function() {deepEqual( Stem("provisorischen"), "provisor");});
test("provozieren -> provozi", function() {deepEqual( Stem("provozieren"), "provozi");});
test("provoziert -> provoziert", function() {deepEqual( Stem("provoziert"), "provoziert");});
test("prozent -> prozent", function() {deepEqual( Stem("prozent"), "prozent");});
test("prozentsatz -> prozentsatz", function() {deepEqual( Stem("prozentsatz"), "prozentsatz");});
test("prozess -> prozess", function() {deepEqual( Stem("prozess"), "prozess");});
test("prozeß -> prozess", function() {deepEqual( Stem("prozeß"), "prozess");});
test("prozesse -> prozess", function() {deepEqual( Stem("prozesse"), "prozess");});
test("prozesses -> prozess", function() {deepEqual( Stem("prozesses"), "prozess");});
test("prozessstadien -> prozessstadi", function() {deepEqual( Stem("prozessstadien"), "prozessstadi");});
test("prozeßstadien -> prozessstadi", function() {deepEqual( Stem("prozeßstadien"), "prozessstadi");});
test("prozessstadium -> prozessstadium", function() {deepEqual( Stem("prozessstadium"), "prozessstadium");});
test("prozeßstadium -> prozessstadium", function() {deepEqual( Stem("prozeßstadium"), "prozessstadium");});
test("prüfe -> pruf", function() {deepEqual( Stem("prüfe"), "pruf");});
test("prüfen -> pruf", function() {deepEqual( Stem("prüfen"), "pruf");});
test("prüfend -> prufend", function() {deepEqual( Stem("prüfend"), "prufend");});
test("prüfenden -> prufend", function() {deepEqual( Stem("prüfenden"), "prufend");});
test("prüfte -> pruft", function() {deepEqual( Stem("prüfte"), "pruft");});
test("prüften -> pruft", function() {deepEqual( Stem("prüften"), "pruft");});
test("prüfung -> prufung", function() {deepEqual( Stem("prüfung"), "prufung");});
test("prüfungslauf -> prufungslauf", function() {deepEqual( Stem("prüfungslauf"), "prufungslauf");});
test("prüfungsmerkmal -> prufungsmerkmal", function() {deepEqual( Stem("prüfungsmerkmal"), "prufungsmerkmal");});
test("prüfungsraum -> prufungsraum", function() {deepEqual( Stem("prüfungsraum"), "prufungsraum");});
test("prügel -> prugel", function() {deepEqual( Stem("prügel"), "prugel");});
test("prügelfertig -> prugelfert", function() {deepEqual( Stem("prügelfertig"), "prugelfert");});
test("prügeln -> prugeln", function() {deepEqual( Stem("prügeln"), "prugeln");});
test("prügelstrafe -> prugelstraf", function() {deepEqual( Stem("prügelstrafe"), "prugelstraf");});
test("prügelte -> prugelt", function() {deepEqual( Stem("prügelte"), "prugelt");});
test("prügle -> prugl", function() {deepEqual( Stem("prügle"), "prugl");});
test("prügler -> prugl", function() {deepEqual( Stem("prügler"), "prugl");});
test("prunkbauten -> prunkbaut", function() {deepEqual( Stem("prunkbauten"), "prunkbaut");});
test("prunkenden -> prunkend", function() {deepEqual( Stem("prunkenden"), "prunkend");});
test("prunkendes -> prunkend", function() {deepEqual( Stem("prunkendes"), "prunkend");});
test("prunkwagen -> prunkwag", function() {deepEqual( Stem("prunkwagen"), "prunkwag");});
test("prusten -> prust", function() {deepEqual( Stem("prusten"), "prust");});
test("prustend -> prustend", function() {deepEqual( Stem("prustend"), "prustend");});
test("prustete -> prustet", function() {deepEqual( Stem("prustete"), "prustet");});
test("prutzeln -> prutzeln", function() {deepEqual( Stem("prutzeln"), "prutzeln");});
test("ps -> ps", function() {deepEqual( Stem("ps"), "ps");});
test("psalmen -> psalm", function() {deepEqual( Stem("psalmen"), "psalm");});
test("psyche -> psych", function() {deepEqual( Stem("psyche"), "psych");});
test("psychischen -> psychisch", function() {deepEqual( Stem("psychischen"), "psychisch");});
test("psychologie -> psychologi", function() {deepEqual( Stem("psychologie"), "psychologi");});
test("psychologisch -> psycholog", function() {deepEqual( Stem("psychologisch"), "psycholog");});
test("psychologische -> psycholog", function() {deepEqual( Stem("psychologische"), "psycholog");});
test("psychologischen -> psycholog", function() {deepEqual( Stem("psychologischen"), "psycholog");});
test("psychologischer -> psycholog", function() {deepEqual( Stem("psychologischer"), "psycholog");});
test("puah -> puah", function() {deepEqual( Stem("puah"), "puah");});
test("publikationen -> publikation", function() {deepEqual( Stem("publikationen"), "publikation");});
test("publikum -> publikum", function() {deepEqual( Stem("publikum"), "publikum");});
test("pudel -> pudel", function() {deepEqual( Stem("pudel"), "pudel");});
test("pudelhund -> pudelhund", function() {deepEqual( Stem("pudelhund"), "pudelhund");});
test("pudelmütze -> pudelmutz", function() {deepEqual( Stem("pudelmütze"), "pudelmutz");});
test("puerulus -> puerulus", function() {deepEqual( Stem("puerulus"), "puerulus");});
test("püffe -> puff", function() {deepEqual( Stem("püffe"), "puff");});
test("puffen -> puff", function() {deepEqual( Stem("puffen"), "puff");});
test("püffen -> puff", function() {deepEqual( Stem("püffen"), "puff");});
test("puffte -> pufft", function() {deepEqual( Stem("puffte"), "pufft");});
test("puh -> puh", function() {deepEqual( Stem("puh"), "puh");});
test("puls -> pul", function() {deepEqual( Stem("puls"), "pul");});
test("pult -> pult", function() {deepEqual( Stem("pult"), "pult");});
test("pulver -> pulv", function() {deepEqual( Stem("pulver"), "pulv");});
test("pulverdampf -> pulverdampf", function() {deepEqual( Stem("pulverdampf"), "pulverdampf");});
test("pulverrauch -> pulverrauch", function() {deepEqual( Stem("pulverrauch"), "pulverrauch");});
test("pumpe -> pump", function() {deepEqual( Stem("pumpe"), "pump");});
test("pumpender -> pumpend", function() {deepEqual( Stem("pumpender"), "pumpend");});
test("punkt -> punkt", function() {deepEqual( Stem("punkt"), "punkt");});
test("pünktchen -> punktch", function() {deepEqual( Stem("pünktchen"), "punktch");});
test("punkte -> punkt", function() {deepEqual( Stem("punkte"), "punkt");});
test("punkten -> punkt", function() {deepEqual( Stem("punkten"), "punkt");});
test("punktionen -> punktion", function() {deepEqual( Stem("punktionen"), "punktion");});
test("pünktlich -> punktlich", function() {deepEqual( Stem("pünktlich"), "punktlich");});
test("pünktlichen -> punktlich", function() {deepEqual( Stem("pünktlichen"), "punktlich");});
test("pünktlichkeit -> punktlich", function() {deepEqual( Stem("pünktlichkeit"), "punktlich");});
test("pünktlichste -> punktlich", function() {deepEqual( Stem("pünktlichste"), "punktlich");});
test("punktum -> punktum", function() {deepEqual( Stem("punktum"), "punktum");});
test("punsch -> punsch", function() {deepEqual( Stem("punsch"), "punsch");});
test("pupille -> pupill", function() {deepEqual( Stem("pupille"), "pupill");});
test("püppchen -> puppch", function() {deepEqual( Stem("püppchen"), "puppch");});
test("puppe -> pupp", function() {deepEqual( Stem("puppe"), "pupp");});
test("puppen -> pupp", function() {deepEqual( Stem("puppen"), "pupp");});
test("puppengarten -> puppengart", function() {deepEqual( Stem("puppengarten"), "puppengart");});
test("puppenkind -> puppenkind", function() {deepEqual( Stem("puppenkind"), "puppenkind");});
test("puppenshow -> puppenshow", function() {deepEqual( Stem("puppenshow"), "puppenshow");});
test("puppenstube -> puppenstub", function() {deepEqual( Stem("puppenstube"), "puppenstub");});
test("purpur -> purpur", function() {deepEqual( Stem("purpur"), "purpur");});
test("purpurlippen -> purpurlipp", function() {deepEqual( Stem("purpurlippen"), "purpurlipp");});
test("purpurrose -> purpurros", function() {deepEqual( Stem("purpurrose"), "purpurros");});
test("purpurroten -> purpurrot", function() {deepEqual( Stem("purpurroten"), "purpurrot");});
test("purzelbaum -> purzelbaum", function() {deepEqual( Stem("purzelbaum"), "purzelbaum");});
test("purzelbäumchen -> purzelbaumch", function() {deepEqual( Stem("purzelbäumchen"), "purzelbaumch");});
test("purzelbäume -> purzelbaum", function() {deepEqual( Stem("purzelbäume"), "purzelbaum");});
test("purzeln -> purzeln", function() {deepEqual( Stem("purzeln"), "purzeln");});
test("purzelnd -> purzelnd", function() {deepEqual( Stem("purzelnd"), "purzelnd");});
test("purzelte -> purzelt", function() {deepEqual( Stem("purzelte"), "purzelt");});
test("purzelten -> purzelt", function() {deepEqual( Stem("purzelten"), "purzelt");});
test("pusterohr -> pusterohr", function() {deepEqual( Stem("pusterohr"), "pusterohr");});
test("pustete -> pustet", function() {deepEqual( Stem("pustete"), "pustet");});
test("puteo -> puteo", function() {deepEqual( Stem("puteo"), "puteo");});
test("puterrot -> puterrot", function() {deepEqual( Stem("puterrot"), "puterrot");});
test("puth -> puth", function() {deepEqual( Stem("puth"), "puth");});
test("putiels -> putiel", function() {deepEqual( Stem("putiels"), "putiel");});
test("putsch -> putsch", function() {deepEqual( Stem("putsch"), "putsch");});
test("pütschli -> putschli", function() {deepEqual( Stem("pütschli"), "putschli");});
test("putschpitschpatsch -> putschpitschpatsch", function() {deepEqual( Stem("putschpitschpatsch"), "putschpitschpatsch");});
test("puttperwutt -> puttperwutt", function() {deepEqual( Stem("puttperwutt"), "puttperwutt");});
test("putz -> putz", function() {deepEqual( Stem("putz"), "putz");});
test("putzen -> putz", function() {deepEqual( Stem("putzen"), "putz");});
test("putzer -> putz", function() {deepEqual( Stem("putzer"), "putz");});
test("putzläppchen -> putzlappch", function() {deepEqual( Stem("putzläppchen"), "putzlappch");});
test("putzte -> putzt", function() {deepEqual( Stem("putzte"), "putzt");});
test("pyramide -> pyramid", function() {deepEqual( Stem("pyramide"), "pyramid");});
test("pyrop -> pyrop", function() {deepEqual( Stem("pyrop"), "pyrop");});
test("pyropen -> pyrop", function() {deepEqual( Stem("pyropen"), "pyrop");});
test("qm -> qm", function() {deepEqual( Stem("qm"), "qm");});
test("qua -> qua", function() {deepEqual( Stem("qua"), "qua");});
test("quacken -> quack", function() {deepEqual( Stem("quacken"), "quack");});
test("quae -> quae", function() {deepEqual( Stem("quae"), "quae");});
test("quakend -> quakend", function() {deepEqual( Stem("quakend"), "quakend");});
test("quaksend -> quaksend", function() {deepEqual( Stem("quaksend"), "quaksend");});
test("quakte -> quakt", function() {deepEqual( Stem("quakte"), "quakt");});
test("qual -> qual", function() {deepEqual( Stem("qual"), "qual");});
test("quale -> qual", function() {deepEqual( Stem("quale"), "qual");});
test("quäle -> qual", function() {deepEqual( Stem("quäle"), "qual");});
test("quälen -> qual", function() {deepEqual( Stem("quälen"), "qual");});
test("quälend -> qualend", function() {deepEqual( Stem("quälend"), "qualend");});
test("quälenden -> qualend", function() {deepEqual( Stem("quälenden"), "qualend");});
test("quälerei -> qualerei", function() {deepEqual( Stem("quälerei"), "qualerei");});
test("qualifikation -> qualifikation", function() {deepEqual( Stem("qualifikation"), "qualifikation");});
test("qualität -> qualitat", function() {deepEqual( Stem("qualität"), "qualitat");});
test("qualm -> qualm", function() {deepEqual( Stem("qualm"), "qualm");});
test("quält -> qualt", function() {deepEqual( Stem("quält"), "qualt");});
test("quälte -> qualt", function() {deepEqual( Stem("quälte"), "qualt");});
test("quälten -> qualt", function() {deepEqual( Stem("quälten"), "qualt");});
test("quantität -> quantitat", function() {deepEqual( Stem("quantität"), "quantitat");});
test("quartierbewohnern -> quartierbewohn", function() {deepEqual( Stem("quartierbewohnern"), "quartierbewohn");});
test("quartiere -> quarti", function() {deepEqual( Stem("quartiere"), "quarti");});
test("quasi -> quasi", function() {deepEqual( Stem("quasi"), "quasi");});
test("quax -> quax", function() {deepEqual( Stem("quax"), "quax");});
test("quell -> quell", function() {deepEqual( Stem("quell"), "quell");});
test("quelle -> quell", function() {deepEqual( Stem("quelle"), "quell");});
test("quellen -> quell", function() {deepEqual( Stem("quellen"), "quell");});
test("quellenangabe -> quellenangab", function() {deepEqual( Stem("quellenangabe"), "quellenangab");});
test("quellenden -> quellend", function() {deepEqual( Stem("quellenden"), "quellend");});
test("quentchen -> quentch", function() {deepEqual( Stem("quentchen"), "quentch");});
test("quer -> quer", function() {deepEqual( Stem("quer"), "quer");});
test("querbalken -> querbalk", function() {deepEqual( Stem("querbalken"), "querbalk");});
test("quere -> quer", function() {deepEqual( Stem("quere"), "quer");});
test("querhölzchen -> querholzch", function() {deepEqual( Stem("querhölzchen"), "querholzch");});
test("querköpfigkeiten -> querkopf", function() {deepEqual( Stem("querköpfigkeiten"), "querkopf");});
test("quertäler -> quertal", function() {deepEqual( Stem("quertäler"), "quertal");});
test("quiekend -> quiekend", function() {deepEqual( Stem("quiekend"), "quiekend");});
test("quiekenden -> quiekend", function() {deepEqual( Stem("quiekenden"), "quiekend");});
test("quiekte -> quiekt", function() {deepEqual( Stem("quiekte"), "quiekt");});
test("quietschte -> quietscht", function() {deepEqual( Stem("quietschte"), "quietscht");});
test("quint -> quint", function() {deepEqual( Stem("quint"), "quint");});
test("quintessenz -> quintessenz", function() {deepEqual( Stem("quintessenz"), "quintessenz");});
test("quirlige -> quirlig", function() {deepEqual( Stem("quirlige"), "quirlig");});
test("quirlte -> quirlt", function() {deepEqual( Stem("quirlte"), "quirlt");});
test("quod -> quod", function() {deepEqual( Stem("quod"), "quod");});
test("quoll -> quoll", function() {deepEqual( Stem("quoll"), "quoll");});
test("quollen -> quoll", function() {deepEqual( Stem("quollen"), "quoll");});
test("quoque -> quoqu", function() {deepEqual( Stem("quoque"), "quoqu");});
test("r -> r", function() {deepEqual( Stem("r"), "r");});
test("raamas -> raamas", function() {deepEqual( Stem("raamas"), "raamas");});
test("raamses -> raams", function() {deepEqual( Stem("raamses"), "raams");});
test("rabbi -> rabbi", function() {deepEqual( Stem("rabbi"), "rabbi");});
test("raben -> rab", function() {deepEqual( Stem("raben"), "rab");});
test("rabenschwarzes -> rabenschwarz", function() {deepEqual( Stem("rabenschwarzes"), "rabenschwarz");});
test("rabensteiner -> rabenstein", function() {deepEqual( Stem("rabensteiner"), "rabenstein");});
test("race -> rac", function() {deepEqual( Stem("race"), "rac");});
test("rache -> rach", function() {deepEqual( Stem("rache"), "rach");});
test("rachegefühl -> rachegefuhl", function() {deepEqual( Stem("rachegefühl"), "rachegefuhl");});
test("rachel -> rachel", function() {deepEqual( Stem("rachel"), "rachel");});
test("rachen -> rach", function() {deepEqual( Stem("rachen"), "rach");});
test("rächen -> rach", function() {deepEqual( Stem("rächen"), "rach");});
test("rachgier -> rachgi", function() {deepEqual( Stem("rachgier"), "rachgi");});
test("rachgierigen -> rachgier", function() {deepEqual( Stem("rachgierigen"), "rachgier");});
test("rachsucht -> rachsucht", function() {deepEqual( Stem("rachsucht"), "rachsucht");});
test("rachsüchtigen -> rachsucht", function() {deepEqual( Stem("rachsüchtigen"), "rachsucht");});
test("rächte -> racht", function() {deepEqual( Stem("rächte"), "racht");});
test("rächten -> racht", function() {deepEqual( Stem("rächten"), "racht");});
test("rad -> rad", function() {deepEqual( Stem("rad"), "rad");});
test("rädelsführer -> radelsfuhr", function() {deepEqual( Stem("rädelsführer"), "radelsfuhr");});
test("rademacher -> rademach", function() {deepEqual( Stem("rademacher"), "rademach");});
test("räder -> rad", function() {deepEqual( Stem("räder"), "rad");});
test("räderchen -> raderch", function() {deepEqual( Stem("räderchen"), "raderch");});
test("rädergerassels -> radergerassel", function() {deepEqual( Stem("rädergerassels"), "radergerassel");});
test("rädern -> rad", function() {deepEqual( Stem("rädern"), "rad");});
test("radfahrlegitimation -> radfahrlegitimation", function() {deepEqual( Stem("radfahrlegitimation"), "radfahrlegitimation");});
test("radikales -> radikal", function() {deepEqual( Stem("radikales"), "radikal");});
test("radikalismus -> radikalismus", function() {deepEqual( Stem("radikalismus"), "radikalismus");});
test("radio -> radio", function() {deepEqual( Stem("radio"), "radio");});
test("radiosender -> radios", function() {deepEqual( Stem("radiosender"), "radios");});
test("radmantel -> radmantel", function() {deepEqual( Stem("radmantel"), "radmantel");});
test("radotiert -> radotiert", function() {deepEqual( Stem("radotiert"), "radotiert");});
test("raffiniert -> raffiniert", function() {deepEqual( Stem("raffiniert"), "raffiniert");});
test("rafft -> rafft", function() {deepEqual( Stem("rafft"), "rafft");});
test("raffte -> rafft", function() {deepEqual( Stem("raffte"), "rafft");});
test("rage -> rag", function() {deepEqual( Stem("rage"), "rag");});
test("ragte -> ragt", function() {deepEqual( Stem("ragte"), "ragt");});
test("ragten -> ragt", function() {deepEqual( Stem("ragten"), "ragt");});
test("rahm -> rahm", function() {deepEqual( Stem("rahm"), "rahm");});
test("rahmen -> rahm", function() {deepEqual( Stem("rahmen"), "rahm");});
test("rahmschüsseln -> rahmschusseln", function() {deepEqual( Stem("rahmschüsseln"), "rahmschusseln");});
test("rain -> rain", function() {deepEqual( Stem("rain"), "rain");});
test("raines -> rain", function() {deepEqual( Stem("raines"), "rain");});
test("raka -> raka", function() {deepEqual( Stem("raka"), "raka");});
test("räkelte -> rakelt", function() {deepEqual( Stem("räkelte"), "rakelt");});
test("ramsau -> ramsau", function() {deepEqual( Stem("ramsau"), "ramsau");});
test("ran -> ran", function() {deepEqual( Stem("ran"), "ran");});
test("rand -> rand", function() {deepEqual( Stem("rand"), "rand");});
test("rande -> rand", function() {deepEqual( Stem("rande"), "rand");});
test("rang -> rang", function() {deepEqual( Stem("rang"), "rang");});
test("rangen -> rang", function() {deepEqual( Stem("rangen"), "rang");});
test("rangordnung -> rangordn", function() {deepEqual( Stem("rangordnung"), "rangordn");});
test("ränke -> rank", function() {deepEqual( Stem("ränke"), "rank");});
test("ranken -> rank", function() {deepEqual( Stem("ranken"), "rank");});
test("rankte -> rankt", function() {deepEqual( Stem("rankte"), "rankt");});
test("rankten -> rankt", function() {deepEqual( Stem("rankten"), "rankt");});
test("rann -> rann", function() {deepEqual( Stem("rann"), "rann");});
test("rannte -> rannt", function() {deepEqual( Stem("rannte"), "rannt");});
test("rannten -> rannt", function() {deepEqual( Stem("rannten"), "rannt");});
test("ränzchen -> ranzch", function() {deepEqual( Stem("ränzchen"), "ranzch");});
test("ränzel -> ranzel", function() {deepEqual( Stem("ränzel"), "ranzel");});
test("ranzen -> ranz", function() {deepEqual( Stem("ranzen"), "ranz");});
test("raphael -> raphael", function() {deepEqual( Stem("raphael"), "raphael");});
test("rappeln -> rappeln", function() {deepEqual( Stem("rappeln"), "rappeln");});
test("rappelte -> rappelt", function() {deepEqual( Stem("rappelte"), "rappelt");});
test("rapps -> rapps", function() {deepEqual( Stem("rapps"), "rapps");});
test("rar -> rar", function() {deepEqual( Stem("rar"), "rar");});
test("rasanter -> rasant", function() {deepEqual( Stem("rasanter"), "rasant");});
test("rasch -> rasch", function() {deepEqual( Stem("rasch"), "rasch");});
test("rasche -> rasch", function() {deepEqual( Stem("rasche"), "rasch");});
test("rascheln -> rascheln", function() {deepEqual( Stem("rascheln"), "rascheln");});
test("raschelnden -> raschelnd", function() {deepEqual( Stem("raschelnden"), "raschelnd");});
test("raschelt -> raschelt", function() {deepEqual( Stem("raschelt"), "raschelt");});
test("raschelte -> raschelt", function() {deepEqual( Stem("raschelte"), "raschelt");});
test("raschem -> rasch", function() {deepEqual( Stem("raschem"), "rasch");});
test("raschen -> rasch", function() {deepEqual( Stem("raschen"), "rasch");});
test("rascher -> rasch", function() {deepEqual( Stem("rascher"), "rasch");});
test("rasches -> rasch", function() {deepEqual( Stem("rasches"), "rasch");});
test("rasen -> ras", function() {deepEqual( Stem("rasen"), "ras");});
test("rasenbrocken -> rasenbrock", function() {deepEqual( Stem("rasenbrocken"), "rasenbrock");});
test("rasend -> rasend", function() {deepEqual( Stem("rasend"), "rasend");});
test("rasender -> rasend", function() {deepEqual( Stem("rasender"), "rasend");});
test("rasendes -> rasend", function() {deepEqual( Stem("rasendes"), "rasend");});
test("rasenfelder -> rasenfeld", function() {deepEqual( Stem("rasenfelder"), "rasenfeld");});
test("raset -> raset", function() {deepEqual( Stem("raset"), "raset");});
test("rasierapparat -> rasierapparat", function() {deepEqual( Stem("rasierapparat"), "rasierapparat");});
test("rasieren -> rasi", function() {deepEqual( Stem("rasieren"), "rasi");});
test("räsonnieren -> rasonni", function() {deepEqual( Stem("räsonnieren"), "rasonni");});
test("rasselfritzen -> rasselfritz", function() {deepEqual( Stem("rasselfritzen"), "rasselfritz");});
test("rasseln -> rasseln", function() {deepEqual( Stem("rasseln"), "rasseln");});
test("rasselns -> rasseln", function() {deepEqual( Stem("rasselns"), "rasseln");});
test("rasselte -> rasselt", function() {deepEqual( Stem("rasselte"), "rasselt");});
test("rasselten -> rasselt", function() {deepEqual( Stem("rasselten"), "rasselt");});
test("raste -> rast", function() {deepEqual( Stem("raste"), "rast");});
test("rastlos -> rastlos", function() {deepEqual( Stem("rastlos"), "rastlos");});
test("rastlosen -> rastlos", function() {deepEqual( Stem("rastlosen"), "rastlos");});
test("rastloses -> rastlos", function() {deepEqual( Stem("rastloses"), "rastlos");});
test("rat -> rat", function() {deepEqual( Stem("rat"), "rat");});
test("rate -> rat", function() {deepEqual( Stem("rate"), "rat");});
test("raten -> rat", function() {deepEqual( Stem("raten"), "rat");});
test("rates -> rat", function() {deepEqual( Stem("rates"), "rat");});
test("ratgeber -> ratgeb", function() {deepEqual( Stem("ratgeber"), "ratgeb");});
test("ratgebern -> ratgeb", function() {deepEqual( Stem("ratgebern"), "ratgeb");});
test("rathaus -> rathaus", function() {deepEqual( Stem("rathaus"), "rathaus");});
test("rathause -> rathaus", function() {deepEqual( Stem("rathause"), "rathaus");});
test("ratio -> ratio", function() {deepEqual( Stem("ratio"), "ratio");});
test("ratiocinari -> ratiocinari", function() {deepEqual( Stem("ratiocinari"), "ratiocinari");});
test("ration -> ration", function() {deepEqual( Stem("ration"), "ration");});
test("rationale -> rational", function() {deepEqual( Stem("rationale"), "rational");});
test("rationalen -> rational", function() {deepEqual( Stem("rationalen"), "rational");});
test("rationales -> rational", function() {deepEqual( Stem("rationales"), "rational");});
test("rationalismus -> rationalismus", function() {deepEqual( Stem("rationalismus"), "rationalismus");});
test("ratione -> ration", function() {deepEqual( Stem("ratione"), "ration");});
test("rationelle -> rationell", function() {deepEqual( Stem("rationelle"), "rationell");});
test("rationes -> ration", function() {deepEqual( Stem("rationes"), "ration");});
test("ratlos -> ratlos", function() {deepEqual( Stem("ratlos"), "ratlos");});
test("ratlosen -> ratlos", function() {deepEqual( Stem("ratlosen"), "ratlos");});
test("rats -> rat", function() {deepEqual( Stem("rats"), "rat");});
test("ratsam -> ratsam", function() {deepEqual( Stem("ratsam"), "ratsam");});
test("ratschläge -> ratschlag", function() {deepEqual( Stem("ratschläge"), "ratschlag");});
test("ratschlägen -> ratschlag", function() {deepEqual( Stem("ratschlägen"), "ratschlag");});
test("ratschlagten -> ratschlagt", function() {deepEqual( Stem("ratschlagten"), "ratschlagt");});
test("rätsel -> ratsel", function() {deepEqual( Stem("rätsel"), "ratsel");});
test("rätselhafte -> ratselhaft", function() {deepEqual( Stem("rätselhafte"), "ratselhaft");});
test("ratsherren -> ratsherr", function() {deepEqual( Stem("ratsherren"), "ratsherr");});
test("ratsvorsitzende -> ratsvorsitz", function() {deepEqual( Stem("ratsvorsitzende"), "ratsvorsitz");});
test("ratszimmer -> ratszimm", function() {deepEqual( Stem("ratszimmer"), "ratszimm");});
test("raub -> raub", function() {deepEqual( Stem("raub"), "raub");});
test("rauben -> raub", function() {deepEqual( Stem("rauben"), "raub");});
test("räuber -> raub", function() {deepEqual( Stem("räuber"), "raub");});
test("räubereien -> rauberei", function() {deepEqual( Stem("räubereien"), "rauberei");});
test("räuberhauptmann -> rauberhauptmann", function() {deepEqual( Stem("räuberhauptmann"), "rauberhauptmann");});
test("räuberhöhle -> rauberhohl", function() {deepEqual( Stem("räuberhöhle"), "rauberhohl");});
test("räubern -> raub", function() {deepEqual( Stem("räubern"), "raub");});
test("raubersbestie -> raubersbesti", function() {deepEqual( Stem("raubersbestie"), "raubersbesti");});
test("raubkunst -> raubkun", function() {deepEqual( Stem("raubkunst"), "raubkun");});
test("raubt -> raubt", function() {deepEqual( Stem("raubt"), "raubt");});
test("raubte -> raubt", function() {deepEqual( Stem("raubte"), "raubt");});
test("raubtier -> raubti", function() {deepEqual( Stem("raubtier"), "raubti");});
test("raubtiere -> raubti", function() {deepEqual( Stem("raubtiere"), "raubti");});
test("raubversuch -> raubversuch", function() {deepEqual( Stem("raubversuch"), "raubversuch");});
test("rauch -> rauch", function() {deepEqual( Stem("rauch"), "rauch");});
test("rauche -> rauch", function() {deepEqual( Stem("rauche"), "rauch");});
test("rauchen -> rauch", function() {deepEqual( Stem("rauchen"), "rauch");});
test("rauchend -> rauchend", function() {deepEqual( Stem("rauchend"), "rauchend");});
test("rauchende -> rauchend", function() {deepEqual( Stem("rauchende"), "rauchend");});
test("rauchenden -> rauchend", function() {deepEqual( Stem("rauchenden"), "rauchend");});
test("rauchendes -> rauchend", function() {deepEqual( Stem("rauchendes"), "rauchend");});
test("räucherig -> raucher", function() {deepEqual( Stem("räucherig"), "raucher");});
test("rauchern -> rauch", function() {deepEqual( Stem("rauchern"), "rauch");});
test("rauchfaden -> rauchfad", function() {deepEqual( Stem("rauchfaden"), "rauchfad");});
test("rauchsäulen -> rauchsaul", function() {deepEqual( Stem("rauchsäulen"), "rauchsaul");});
test("rauchtabak -> rauchtabak", function() {deepEqual( Stem("rauchtabak"), "rauchtabak");});
test("rauchte -> raucht", function() {deepEqual( Stem("rauchte"), "raucht");});
test("rauchten -> raucht", function() {deepEqual( Stem("rauchten"), "raucht");});
test("rauchtisch -> rauchtisch", function() {deepEqual( Stem("rauchtisch"), "rauchtisch");});
test("rauchwerk -> rauchwerk", function() {deepEqual( Stem("rauchwerk"), "rauchwerk");});
test("rauchwerks -> rauchwerk", function() {deepEqual( Stem("rauchwerks"), "rauchwerk");});
test("rauchwolken -> rauchwolk", function() {deepEqual( Stem("rauchwolken"), "rauchwolk");});
test("rauchzeug -> rauchzeug", function() {deepEqual( Stem("rauchzeug"), "rauchzeug");});
test("räude -> raud", function() {deepEqual( Stem("räude"), "raud");});
test("raufereien -> rauferei", function() {deepEqual( Stem("raufereien"), "rauferei");});
test("rauheit -> rauheit", function() {deepEqual( Stem("rauheit"), "rauheit");});
test("rauhen -> rauh", function() {deepEqual( Stem("rauhen"), "rauh");});
test("rauhes -> rauh", function() {deepEqual( Stem("rauhes"), "rauh");});
test("raum -> raum", function() {deepEqual( Stem("raum"), "raum");});
test("raume -> raum", function() {deepEqual( Stem("raume"), "raum");});
test("räume -> raum", function() {deepEqual( Stem("räume"), "raum");});
test("räumen -> raum", function() {deepEqual( Stem("räumen"), "raum");});
test("raumes -> raum", function() {deepEqual( Stem("raumes"), "raum");});
test("räumliche -> raumlich", function() {deepEqual( Stem("räumliche"), "raumlich");});
test("räumlichkeiten -> raumlich", function() {deepEqual( Stem("räumlichkeiten"), "raumlich");});
test("räumt -> raumt", function() {deepEqual( Stem("räumt"), "raumt");});
test("raupe -> raup", function() {deepEqual( Stem("raupe"), "raup");});
test("raus -> raus", function() {deepEqual( Stem("raus"), "raus");});
test("rausch -> rausch", function() {deepEqual( Stem("rausch"), "rausch");});
test("rausche -> rausch", function() {deepEqual( Stem("rausche"), "rausch");});
test("rauschen -> rausch", function() {deepEqual( Stem("rauschen"), "rausch");});
test("rauschend -> rauschend", function() {deepEqual( Stem("rauschend"), "rauschend");});
test("rauschende -> rauschend", function() {deepEqual( Stem("rauschende"), "rauschend");});
test("rauschenden -> rauschend", function() {deepEqual( Stem("rauschenden"), "rauschend");});
test("rauscht -> rauscht", function() {deepEqual( Stem("rauscht"), "rauscht");});
test("rauschte -> rauscht", function() {deepEqual( Stem("rauschte"), "rauscht");});
test("rauschten -> rauscht", function() {deepEqual( Stem("rauschten"), "rauscht");});
test("rausg -> rausg", function() {deepEqual( Stem("rausg"), "rausg");});
test("rausgeschmissen -> rausgeschmiss", function() {deepEqual( Stem("rausgeschmissen"), "rausgeschmiss");});
test("rausschneiden -> rausschneid", function() {deepEqual( Stem("rausschneiden"), "rausschneid");});
test("rauszuschneiden -> rauszuschneid", function() {deepEqual( Stem("rauszuschneiden"), "rauszuschneid");});
test("ravensburg -> ravensburg", function() {deepEqual( Stem("ravensburg"), "ravensburg");});
test("re -> re", function() {deepEqual( Stem("re"), "re");});
test("reader -> read", function() {deepEqual( Stem("reader"), "read");});
test("reagieren -> reagi", function() {deepEqual( Stem("reagieren"), "reagi");});
test("real -> real", function() {deepEqual( Stem("real"), "real");});
test("reale -> real", function() {deepEqual( Stem("reale"), "real");});
test("realen -> real", function() {deepEqual( Stem("realen"), "real");});
test("reales -> real", function() {deepEqual( Stem("reales"), "real");});
test("realisier -> realisi", function() {deepEqual( Stem("realisier"), "realisi");});
test("realisieren -> realisi", function() {deepEqual( Stem("realisieren"), "realisi");});
test("realisiert -> realisiert", function() {deepEqual( Stem("realisiert"), "realisiert");});
test("realisierung -> realisier", function() {deepEqual( Stem("realisierung"), "realisier");});
test("realistisch -> realist", function() {deepEqual( Stem("realistisch"), "realist");});
test("realität -> realitat", function() {deepEqual( Stem("realität"), "realitat");});
test("rebecka -> rebecka", function() {deepEqual( Stem("rebecka"), "rebecka");});
test("rebellischen -> rebell", function() {deepEqual( Stem("rebellischen"), "rebell");});
test("rebenlaube -> rebenlaub", function() {deepEqual( Stem("rebenlaube"), "rebenlaub");});
test("rebenschossen -> rebenschoss", function() {deepEqual( Stem("rebenschossen"), "rebenschoss");});
test("rebhühner -> rebhuhn", function() {deepEqual( Stem("rebhühner"), "rebhuhn");});
test("rebhühnern -> rebhuhn", function() {deepEqual( Stem("rebhühnern"), "rebhuhn");});
test("rebhuhnpastete -> rebhuhnpastet", function() {deepEqual( Stem("rebhuhnpastete"), "rebhuhnpastet");});
test("rechen -> rech", function() {deepEqual( Stem("rechen"), "rech");});
test("rechenbuch -> rechenbuch", function() {deepEqual( Stem("rechenbuch"), "rechenbuch");});
test("rechenmeister -> rechenmeist", function() {deepEqual( Stem("rechenmeister"), "rechenmeist");});
test("rechenschaft -> rechenschaft", function() {deepEqual( Stem("rechenschaft"), "rechenschaft");});
test("recherchieren -> recherchi", function() {deepEqual( Stem("recherchieren"), "recherchi");});
test("rechne -> rechn", function() {deepEqual( Stem("rechne"), "rechn");});
test("rechnen -> rechn", function() {deepEqual( Stem("rechnen"), "rechn");});
test("rechnereien -> rechnerei", function() {deepEqual( Stem("rechnereien"), "rechnerei");});
test("rechnet -> rechnet", function() {deepEqual( Stem("rechnet"), "rechnet");});
test("rechnete -> rechnet", function() {deepEqual( Stem("rechnete"), "rechnet");});
test("rechnung -> rechnung", function() {deepEqual( Stem("rechnung"), "rechnung");});
test("rechnungen -> rechnung", function() {deepEqual( Stem("rechnungen"), "rechnung");});
test("rechnungsabschluss -> rechnungsabschluss", function() {deepEqual( Stem("rechnungsabschluss"), "rechnungsabschluss");});
test("rechobs -> rechob", function() {deepEqual( Stem("rechobs"), "rechob");});
test("recht -> recht", function() {deepEqual( Stem("recht"), "recht");});
test("rechtbehalten -> rechtbehalt", function() {deepEqual( Stem("rechtbehalten"), "rechtbehalt");});
test("rechte -> recht", function() {deepEqual( Stem("rechte"), "recht");});
test("rechten -> recht", function() {deepEqual( Stem("rechten"), "recht");});
test("rechter -> recht", function() {deepEqual( Stem("rechter"), "recht");});
test("rechtes -> recht", function() {deepEqual( Stem("rechtes"), "recht");});
test("rechtfertige -> rechtfert", function() {deepEqual( Stem("rechtfertige"), "rechtfert");});
test("rechtfertigen -> rechtfert", function() {deepEqual( Stem("rechtfertigen"), "rechtfert");});
test("rechtfertigende -> rechtfert", function() {deepEqual( Stem("rechtfertigende"), "rechtfert");});
test("rechtfertigt -> rechtfertigt", function() {deepEqual( Stem("rechtfertigt"), "rechtfertigt");});
test("rechtfertigung -> rechtfert", function() {deepEqual( Stem("rechtfertigung"), "rechtfert");});
test("rechtfertigungserklärung -> rechtfertigungserklar", function() {deepEqual( Stem("rechtfertigungserklärung"), "rechtfertigungserklar");});
test("rechtfertigungserklärungder -> rechtfertigungserklarungd", function() {deepEqual( Stem("rechtfertigungserklärungder"), "rechtfertigungserklarungd");});
test("rechtfertigungslehre -> rechtfertigungslehr", function() {deepEqual( Stem("rechtfertigungslehre"), "rechtfertigungslehr");});
test("rechthaben -> rechthab", function() {deepEqual( Stem("rechthaben"), "rechthab");});
test("rechtlich -> rechtlich", function() {deepEqual( Stem("rechtlich"), "rechtlich");});
test("rechtliche -> rechtlich", function() {deepEqual( Stem("rechtliche"), "rechtlich");});
test("rechtlichen -> rechtlich", function() {deepEqual( Stem("rechtlichen"), "rechtlich");});
test("rechtlicher -> rechtlich", function() {deepEqual( Stem("rechtlicher"), "rechtlich");});
test("rechtliches -> rechtlich", function() {deepEqual( Stem("rechtliches"), "rechtlich");});
test("rechtlichkeit -> rechtlich", function() {deepEqual( Stem("rechtlichkeit"), "rechtlich");});
test("rechtmässig -> rechtmass", function() {deepEqual( Stem("rechtmässig"), "rechtmass");});
test("rechtmässige -> rechtmass", function() {deepEqual( Stem("rechtmässige"), "rechtmass");});
test("rechtmässigem -> rechtmass", function() {deepEqual( Stem("rechtmässigem"), "rechtmass");});
test("rechtmässigen -> rechtmass", function() {deepEqual( Stem("rechtmässigen"), "rechtmass");});
test("rechts -> recht", function() {deepEqual( Stem("rechts"), "recht");});
test("rechtsangelegenheit -> rechtsangeleg", function() {deepEqual( Stem("rechtsangelegenheit"), "rechtsangeleg");});
test("rechtsbewusstsein -> rechtsbewusstsein", function() {deepEqual( Stem("rechtsbewusstsein"), "rechtsbewusstsein");});
test("rechtschaffen -> rechtschaff", function() {deepEqual( Stem("rechtschaffen"), "rechtschaff");});
test("rechtschaffene -> rechtschaff", function() {deepEqual( Stem("rechtschaffene"), "rechtschaff");});
test("rechtschaffenen -> rechtschaff", function() {deepEqual( Stem("rechtschaffenen"), "rechtschaff");});
test("rechtschaffener -> rechtschaff", function() {deepEqual( Stem("rechtschaffener"), "rechtschaff");});
test("rechtschaffenheit -> rechtschaff", function() {deepEqual( Stem("rechtschaffenheit"), "rechtschaff");});
test("rechtskräftig -> rechtskraft", function() {deepEqual( Stem("rechtskräftig"), "rechtskraft");});
test("rechtsordnungen -> rechtsordn", function() {deepEqual( Stem("rechtsordnungen"), "rechtsordn");});
test("rechtssinn -> rechtssinn", function() {deepEqual( Stem("rechtssinn"), "rechtssinn");});
test("rechtsstaat -> rechtsstaat", function() {deepEqual( Stem("rechtsstaat"), "rechtsstaat");});
test("rechtswissenschaft -> rechtswissenschaft", function() {deepEqual( Stem("rechtswissenschaft"), "rechtswissenschaft");});
test("rechtzeitig -> rechtzeit", function() {deepEqual( Stem("rechtzeitig"), "rechtzeit");});
test("recke -> reck", function() {deepEqual( Stem("recke"), "reck");});
test("recken -> reck", function() {deepEqual( Stem("recken"), "reck");});
test("reckend -> reckend", function() {deepEqual( Stem("reckend"), "reckend");});
test("reckte -> reckt", function() {deepEqual( Stem("reckte"), "reckt");});
test("red -> red", function() {deepEqual( Stem("red"), "red");});
test("redakteur -> redakteur", function() {deepEqual( Stem("redakteur"), "redakteur");});
test("redaktion -> redaktion", function() {deepEqual( Stem("redaktion"), "redaktion");});
test("redaktorin -> redaktorin", function() {deepEqual( Stem("redaktorin"), "redaktorin");});
test("rede -> red", function() {deepEqual( Stem("rede"), "red");});
test("reden -> red", function() {deepEqual( Stem("reden"), "red");});
test("redend -> redend", function() {deepEqual( Stem("redend"), "redend");});
test("redende -> redend", function() {deepEqual( Stem("redende"), "redend");});
test("redenden -> redend", function() {deepEqual( Stem("redenden"), "redend");});
test("redendes -> redend", function() {deepEqual( Stem("redendes"), "redend");});
test("redens -> red", function() {deepEqual( Stem("redens"), "red");});
test("redensart -> redensart", function() {deepEqual( Stem("redensart"), "redensart");});
test("redensarten -> redensart", function() {deepEqual( Stem("redensarten"), "redensart");});
test("redesätze -> redesatz", function() {deepEqual( Stem("redesätze"), "redesatz");});
test("redest -> red", function() {deepEqual( Stem("redest"), "red");});
test("redet -> redet", function() {deepEqual( Stem("redet"), "redet");});
test("redete -> redet", function() {deepEqual( Stem("redete"), "redet");});
test("redeten -> redet", function() {deepEqual( Stem("redeten"), "redet");});
test("redeweise -> redeweis", function() {deepEqual( Stem("redeweise"), "redeweis");});
test("redewendung -> redewend", function() {deepEqual( Stem("redewendung"), "redewend");});
test("redezeichen -> redezeich", function() {deepEqual( Stem("redezeichen"), "redezeich");});
test("redigiert -> redigiert", function() {deepEqual( Stem("redigiert"), "redigiert");});
test("redigierte -> redigiert", function() {deepEqual( Stem("redigierte"), "redigiert");});
test("redlich -> redlich", function() {deepEqual( Stem("redlich"), "redlich");});
test("redliche -> redlich", function() {deepEqual( Stem("redliche"), "redlich");});
test("redlichen -> redlich", function() {deepEqual( Stem("redlichen"), "redlich");});
test("redlicher -> redlich", function() {deepEqual( Stem("redlicher"), "redlich");});
test("redlichkeit -> redlich", function() {deepEqual( Stem("redlichkeit"), "redlich");});
test("redner -> redn", function() {deepEqual( Stem("redner"), "redn");});
test("rednerische -> redner", function() {deepEqual( Stem("rednerische"), "redner");});
test("redselig -> redsel", function() {deepEqual( Stem("redselig"), "redsel");});
test("redt -> redt", function() {deepEqual( Stem("redt"), "redt");});
test("réduit -> réduit", function() {deepEqual( Stem("réduit"), "réduit");});
test("reduktion -> reduktion", function() {deepEqual( Stem("reduktion"), "reduktion");});
test("reduktionen -> reduktion", function() {deepEqual( Stem("reduktionen"), "reduktion");});
test("reeder -> reed", function() {deepEqual( Stem("reeder"), "reed");});
test("refa -> refa", function() {deepEqual( Stem("refa"), "refa");});
test("refah -> refah", function() {deepEqual( Stem("refah"), "refah");});
test("referent -> referent", function() {deepEqual( Stem("referent"), "referent");});
test("referenz -> referenz", function() {deepEqual( Stem("referenz"), "referenz");});
test("reflektieren -> reflekti", function() {deepEqual( Stem("reflektieren"), "reflekti");});
test("reflektiert -> reflektiert", function() {deepEqual( Stem("reflektiert"), "reflektiert");});
test("reflexion -> reflexion", function() {deepEqual( Stem("reflexion"), "reflexion");});
test("reform -> reform", function() {deepEqual( Stem("reform"), "reform");});
test("reformation -> reformation", function() {deepEqual( Stem("reformation"), "reformation");});
test("reformen -> reform", function() {deepEqual( Stem("reformen"), "reform");});
test("reformierte -> reformiert", function() {deepEqual( Stem("reformierte"), "reformiert");});
test("reformierten -> reformiert", function() {deepEqual( Stem("reformierten"), "reformiert");});
test("refutieren -> refuti", function() {deepEqual( Stem("refutieren"), "refuti");});
test("regal -> regal", function() {deepEqual( Stem("regal"), "regal");});
test("rege -> reg", function() {deepEqual( Stem("rege"), "reg");});
test("regel -> regel", function() {deepEqual( Stem("regel"), "regel");});
test("regelmässig -> regelmass", function() {deepEqual( Stem("regelmässig"), "regelmass");});
test("regelmäßig -> regelmass", function() {deepEqual( Stem("regelmäßig"), "regelmass");});
test("regelmässige -> regelmass", function() {deepEqual( Stem("regelmässige"), "regelmass");});
test("regelmässigen -> regelmass", function() {deepEqual( Stem("regelmässigen"), "regelmass");});
test("regelmässiger -> regelmass", function() {deepEqual( Stem("regelmässiger"), "regelmass");});
test("regelmässigkeit -> regelmass", function() {deepEqual( Stem("regelmässigkeit"), "regelmass");});
test("regeln -> regeln", function() {deepEqual( Stem("regeln"), "regeln");});
test("regelrecht -> regelrecht", function() {deepEqual( Stem("regelrecht"), "regelrecht");});
test("regelrechte -> regelrecht", function() {deepEqual( Stem("regelrechte"), "regelrecht");});
test("regen -> reg", function() {deepEqual( Stem("regen"), "reg");});
test("regenbogen -> regenbog", function() {deepEqual( Stem("regenbogen"), "regenbog");});
test("regende -> regend", function() {deepEqual( Stem("regende"), "regend");});
test("regenden -> regend", function() {deepEqual( Stem("regenden"), "regend");});
test("regenfritz -> regenfritz", function() {deepEqual( Stem("regenfritz"), "regenfritz");});
test("regenfritzen -> regenfritz", function() {deepEqual( Stem("regenfritzen"), "regenfritz");});
test("regengüssen -> regenguss", function() {deepEqual( Stem("regengüssen"), "regenguss");});
test("regenhose -> regenhos", function() {deepEqual( Stem("regenhose"), "regenhos");});
test("regennacht -> regennacht", function() {deepEqual( Stem("regennacht"), "regennacht");});
test("regennassen -> regennass", function() {deepEqual( Stem("regennassen"), "regennass");});
test("regenrauschen -> regenrausch", function() {deepEqual( Stem("regenrauschen"), "regenrausch");});
test("regens -> reg", function() {deepEqual( Stem("regens"), "reg");});
test("regenschirm -> regenschirm", function() {deepEqual( Stem("regenschirm"), "regenschirm");});
test("regentagen -> regentag", function() {deepEqual( Stem("regentagen"), "regentag");});
test("regentropfen -> regentropf", function() {deepEqual( Stem("regentropfen"), "regentropf");});
test("regentschaft -> regentschaft", function() {deepEqual( Stem("regentschaft"), "regentschaft");});
test("regenwasserfass -> regenwasserfass", function() {deepEqual( Stem("regenwasserfass"), "regenwasserfass");});
test("regenwurm -> regenwurm", function() {deepEqual( Stem("regenwurm"), "regenwurm");});
test("regenwürmer -> regenwurm", function() {deepEqual( Stem("regenwürmer"), "regenwurm");});
test("regiere -> regi", function() {deepEqual( Stem("regiere"), "regi");});
test("regieren -> regi", function() {deepEqual( Stem("regieren"), "regi");});
test("regierende -> regier", function() {deepEqual( Stem("regierende"), "regier");});
test("regierenden -> regier", function() {deepEqual( Stem("regierenden"), "regier");});
test("regierer -> regi", function() {deepEqual( Stem("regierer"), "regi");});
test("regierers -> regier", function() {deepEqual( Stem("regierers"), "regier");});
test("regiert -> regiert", function() {deepEqual( Stem("regiert"), "regiert");});
test("regierte -> regiert", function() {deepEqual( Stem("regierte"), "regiert");});
test("regierung -> regier", function() {deepEqual( Stem("regierung"), "regier");});
test("regierungskrisedie -> regierungskrisedi", function() {deepEqual( Stem("regierungskrisedie"), "regierungskrisedi");});
test("regierungsrat -> regierungsrat", function() {deepEqual( Stem("regierungsrat"), "regierungsrat");});
test("regiment -> regiment", function() {deepEqual( Stem("regiment"), "regiment");});
test("regimente -> regiment", function() {deepEqual( Stem("regimente"), "regiment");});
test("regimentes -> regiment", function() {deepEqual( Stem("regimentes"), "regiment");});
test("regimentskommandeurs -> regimentskommandeur", function() {deepEqual( Stem("regimentskommandeurs"), "regimentskommandeur");});
test("region -> region", function() {deepEqual( Stem("region"), "region");});
test("regionalstelle -> regionalstell", function() {deepEqual( Stem("regionalstelle"), "regionalstell");});
test("regionen -> region", function() {deepEqual( Stem("regionen"), "region");});
test("registrieren -> registri", function() {deepEqual( Stem("registrieren"), "registri");});
test("registriert -> registriert", function() {deepEqual( Stem("registriert"), "registriert");});
test("reglos -> reglos", function() {deepEqual( Stem("reglos"), "reglos");});
test("reglosen -> reglos", function() {deepEqual( Stem("reglosen"), "reglos");});
test("regnat -> regnat", function() {deepEqual( Stem("regnat"), "regnat");});
test("regnen -> regn", function() {deepEqual( Stem("regnen"), "regn");});
test("regnerische -> regner", function() {deepEqual( Stem("regnerische"), "regner");});
test("regnerischer -> regner", function() {deepEqual( Stem("regnerischer"), "regner");});
test("regnete -> regnet", function() {deepEqual( Stem("regnete"), "regnet");});
test("regt -> regt", function() {deepEqual( Stem("regt"), "regt");});
test("regte -> regt", function() {deepEqual( Stem("regte"), "regt");});
test("reguel -> reguel", function() {deepEqual( Stem("reguel"), "reguel");});
test("reguels -> reguel", function() {deepEqual( Stem("reguels"), "reguel");});
test("regula -> regula", function() {deepEqual( Stem("regula"), "regula");});
test("regulären -> regular", function() {deepEqual( Stem("regulären"), "regular");});
test("regulative -> regulativ", function() {deepEqual( Stem("regulative"), "regulativ");});
test("regulieren -> reguli", function() {deepEqual( Stem("regulieren"), "reguli");});
test("reguliert -> reguliert", function() {deepEqual( Stem("reguliert"), "reguliert");});
test("regulos -> regulos", function() {deepEqual( Stem("regulos"), "regulos");});
test("regung -> regung", function() {deepEqual( Stem("regung"), "regung");});
test("regungen -> regung", function() {deepEqual( Stem("regungen"), "regung");});
test("regungslos -> regungslos", function() {deepEqual( Stem("regungslos"), "regungslos");});
test("regungslosen -> regungslos", function() {deepEqual( Stem("regungslosen"), "regungslos");});
test("reh -> reh", function() {deepEqual( Stem("reh"), "reh");});
test("rehabilitiert -> rehabilitiert", function() {deepEqual( Stem("rehabilitiert"), "rehabilitiert");});
test("rehbock -> rehbock", function() {deepEqual( Stem("rehbock"), "rehbock");});
test("rehböcken -> rehbock", function() {deepEqual( Stem("rehböcken"), "rehbock");});
test("rehcherl -> rehcherl", function() {deepEqual( Stem("rehcherl"), "rehcherl");});
test("rehe -> reh", function() {deepEqual( Stem("rehe"), "reh");});
test("rehen -> reh", function() {deepEqual( Stem("rehen"), "reh");});
test("rehes -> reh", function() {deepEqual( Stem("rehes"), "reh");});
test("rehfussgriff -> rehfussgriff", function() {deepEqual( Stem("rehfussgriff"), "rehfussgriff");});
test("rehgeiss -> rehgeiss", function() {deepEqual( Stem("rehgeiss"), "rehgeiss");});
test("reiben -> reib", function() {deepEqual( Stem("reiben"), "reib");});
test("reich -> reich", function() {deepEqual( Stem("reich"), "reich");});
test("reiche -> reich", function() {deepEqual( Stem("reiche"), "reich");});
test("reichem -> reich", function() {deepEqual( Stem("reichem"), "reich");});
test("reichen -> reich", function() {deepEqual( Stem("reichen"), "reich");});
test("reichenhall -> reichenhall", function() {deepEqual( Stem("reichenhall"), "reichenhall");});
test("reicher -> reich", function() {deepEqual( Stem("reicher"), "reich");});
test("reichere -> reich", function() {deepEqual( Stem("reichere"), "reich");});
test("reiches -> reich", function() {deepEqual( Stem("reiches"), "reich");});
test("reichgekleidete -> reichgekleidet", function() {deepEqual( Stem("reichgekleidete"), "reichgekleidet");});
test("reichhaltiges -> reichhalt", function() {deepEqual( Stem("reichhaltiges"), "reichhalt");});
test("reichlich -> reichlich", function() {deepEqual( Stem("reichlich"), "reichlich");});
test("reichliche -> reichlich", function() {deepEqual( Stem("reichliche"), "reichlich");});
test("reichlichem -> reichlich", function() {deepEqual( Stem("reichlichem"), "reichlich");});
test("reichlichen -> reichlich", function() {deepEqual( Stem("reichlichen"), "reichlich");});
test("reichlichere -> reichlich", function() {deepEqual( Stem("reichlichere"), "reichlich");});
test("reichlicheres -> reichlich", function() {deepEqual( Stem("reichlicheres"), "reichlich");});
test("reichs -> reich", function() {deepEqual( Stem("reichs"), "reich");});
test("reichsfeind -> reichsfeind", function() {deepEqual( Stem("reichsfeind"), "reichsfeind");});
test("reichskristallnacht -> reichskristallnacht", function() {deepEqual( Stem("reichskristallnacht"), "reichskristallnacht");});
test("reichspogrom -> reichspogrom", function() {deepEqual( Stem("reichspogrom"), "reichspogrom");});
test("reichste -> reich", function() {deepEqual( Stem("reichste"), "reich");});
test("reichsten -> reich", function() {deepEqual( Stem("reichsten"), "reich");});
test("reicht -> reicht", function() {deepEqual( Stem("reicht"), "reicht");});
test("reichte -> reicht", function() {deepEqual( Stem("reichte"), "reicht");});
test("reichten -> reicht", function() {deepEqual( Stem("reichten"), "reicht");});
test("reichtstag -> reichtstag", function() {deepEqual( Stem("reichtstag"), "reichtstag");});
test("reichtum -> reichtum", function() {deepEqual( Stem("reichtum"), "reichtum");});
test("reichtümer -> reichtum", function() {deepEqual( Stem("reichtümer"), "reichtum");});
test("reichtümern -> reichtum", function() {deepEqual( Stem("reichtümern"), "reichtum");});
test("reif -> reif", function() {deepEqual( Stem("reif"), "reif");});
test("reife -> reif", function() {deepEqual( Stem("reife"), "reif");});
test("reifen -> reif", function() {deepEqual( Stem("reifen"), "reif");});
test("reifende -> reifend", function() {deepEqual( Stem("reifende"), "reifend");});
test("reifenden -> reifend", function() {deepEqual( Stem("reifenden"), "reifend");});
test("reiflich -> reiflich", function() {deepEqual( Stem("reiflich"), "reiflich");});
test("reifrocke -> reifrock", function() {deepEqual( Stem("reifrocke"), "reifrock");});
test("reifte -> reift", function() {deepEqual( Stem("reifte"), "reift");});
test("reigen -> reig", function() {deepEqual( Stem("reigen"), "reig");});
test("reihe -> reih", function() {deepEqual( Stem("reihe"), "reih");});
test("reihen -> reih", function() {deepEqual( Stem("reihen"), "reih");});
test("reihenfolge -> reihenfolg", function() {deepEqual( Stem("reihenfolge"), "reihenfolg");});
test("reiher -> reih", function() {deepEqual( Stem("reiher"), "reih");});
test("reihte -> reiht", function() {deepEqual( Stem("reihte"), "reiht");});
test("reime -> reim", function() {deepEqual( Stem("reime"), "reim");});
test("reimt -> reimt", function() {deepEqual( Stem("reimt"), "reimt");});
test("rein -> rein", function() {deepEqual( Stem("rein"), "rein");});
test("reine -> rein", function() {deepEqual( Stem("reine"), "rein");});
test("reinem -> rein", function() {deepEqual( Stem("reinem"), "rein");});
test("reinen -> rein", function() {deepEqual( Stem("reinen"), "rein");});
test("reiner -> rein", function() {deepEqual( Stem("reiner"), "rein");});
test("reinerem -> rein", function() {deepEqual( Stem("reinerem"), "rein");});
test("reineren -> rein", function() {deepEqual( Stem("reineren"), "rein");});
test("reines -> rein", function() {deepEqual( Stem("reines"), "rein");});
test("reinheit -> reinheit", function() {deepEqual( Stem("reinheit"), "reinheit");});
test("reinhold -> reinhold", function() {deepEqual( Stem("reinhold"), "reinhold");});
test("reinigen -> reinig", function() {deepEqual( Stem("reinigen"), "reinig");});
test("reinigend -> reinig", function() {deepEqual( Stem("reinigend"), "reinig");});
test("reinigkeit -> reinig", function() {deepEqual( Stem("reinigkeit"), "reinig");});
test("reinigung -> reinig", function() {deepEqual( Stem("reinigung"), "reinig");});
test("reinigungen -> reinig", function() {deepEqual( Stem("reinigungen"), "reinig");});
test("reinlich -> reinlich", function() {deepEqual( Stem("reinlich"), "reinlich");});
test("reinliche -> reinlich", function() {deepEqual( Stem("reinliche"), "reinlich");});
test("reinlichen -> reinlich", function() {deepEqual( Stem("reinlichen"), "reinlich");});
test("reinliches -> reinlich", function() {deepEqual( Stem("reinliches"), "reinlich");});
test("reinlichkeit -> reinlich", function() {deepEqual( Stem("reinlichkeit"), "reinlich");});
test("reinreichen -> reinreich", function() {deepEqual( Stem("reinreichen"), "reinreich");});
test("reinsten -> rein", function() {deepEqual( Stem("reinsten"), "rein");});
test("reinzukleben -> reinzukleb", function() {deepEqual( Stem("reinzukleben"), "reinzukleb");});
test("reis -> reis", function() {deepEqual( Stem("reis"), "reis");});
test("reise -> reis", function() {deepEqual( Stem("reise"), "reis");});
test("reiseanzügen -> reiseanzug", function() {deepEqual( Stem("reiseanzügen"), "reiseanzug");});
test("reisebegleiter -> reisebegleit", function() {deepEqual( Stem("reisebegleiter"), "reisebegleit");});
test("reisebeschreibung -> reisebeschreib", function() {deepEqual( Stem("reisebeschreibung"), "reisebeschreib");});
test("reisebüro -> reiseburo", function() {deepEqual( Stem("reisebüro"), "reiseburo");});
test("reisebürofrau -> reiseburofrau", function() {deepEqual( Stem("reisebürofrau"), "reiseburofrau");});
test("reisegefährten -> reisegefahrt", function() {deepEqual( Stem("reisegefährten"), "reisegefahrt");});
test("reisegeld -> reisegeld", function() {deepEqual( Stem("reisegeld"), "reisegeld");});
test("reisen -> reis", function() {deepEqual( Stem("reisen"), "reis");});
test("reisenden -> reisend", function() {deepEqual( Stem("reisenden"), "reisend");});
test("reisender -> reisend", function() {deepEqual( Stem("reisender"), "reisend");});
test("reisern -> reis", function() {deepEqual( Stem("reisern"), "reis");});
test("reiset -> reiset", function() {deepEqual( Stem("reiset"), "reiset");});
test("reisetasche -> reisetasch", function() {deepEqual( Stem("reisetasche"), "reisetasch");});
test("reisete -> reiset", function() {deepEqual( Stem("reisete"), "reiset");});
test("reisetruhe -> reisetruh", function() {deepEqual( Stem("reisetruhe"), "reisetruh");});
test("reiseveranstalter -> reiseveranstalt", function() {deepEqual( Stem("reiseveranstalter"), "reiseveranstalt");});
test("reisewagen -> reisewag", function() {deepEqual( Stem("reisewagen"), "reisewag");});
test("reisig -> reisig", function() {deepEqual( Stem("reisig"), "reisig");});
test("reisigbündel -> reisigbundel", function() {deepEqual( Stem("reisigbündel"), "reisigbundel");});
test("reissaus -> reissaus", function() {deepEqual( Stem("reissaus"), "reissaus");});
test("reisse -> reiss", function() {deepEqual( Stem("reisse"), "reiss");});
test("reiße -> reiss", function() {deepEqual( Stem("reiße"), "reiss");});
test("reissen -> reiss", function() {deepEqual( Stem("reissen"), "reiss");});
test("reißen -> reiss", function() {deepEqual( Stem("reißen"), "reiss");});
test("reissende -> reissend", function() {deepEqual( Stem("reissende"), "reissend");});
test("reissenden -> reissend", function() {deepEqual( Stem("reissenden"), "reissend");});
test("reißenden -> reissend", function() {deepEqual( Stem("reißenden"), "reissend");});
test("reissender -> reissend", function() {deepEqual( Stem("reissender"), "reissend");});
test("reißender -> reissend", function() {deepEqual( Stem("reißender"), "reissend");});
test("reisst -> reisst", function() {deepEqual( Stem("reisst"), "reisst");});
test("reist -> reist", function() {deepEqual( Stem("reist"), "reist");});
test("reiste -> reist", function() {deepEqual( Stem("reiste"), "reist");});
test("reiten -> reit", function() {deepEqual( Stem("reiten"), "reit");});
test("reiter -> reit", function() {deepEqual( Stem("reiter"), "reit");});
test("reiterei -> reiterei", function() {deepEqual( Stem("reiterei"), "reiterei");});
test("reitergesellschaft -> reitergesellschaft", function() {deepEqual( Stem("reitergesellschaft"), "reitergesellschaft");});
test("reitern -> reit", function() {deepEqual( Stem("reitern"), "reit");});
test("reitertrupps -> reitertrupps", function() {deepEqual( Stem("reitertrupps"), "reitertrupps");});
test("reitet -> reitet", function() {deepEqual( Stem("reitet"), "reitet");});
test("reitpeitsche -> reitpeitsch", function() {deepEqual( Stem("reitpeitsche"), "reitpeitsch");});
test("reitpeitschen -> reitpeitsch", function() {deepEqual( Stem("reitpeitschen"), "reitpeitsch");});
test("reittier -> reitti", function() {deepEqual( Stem("reittier"), "reitti");});
test("reiz -> reiz", function() {deepEqual( Stem("reiz"), "reiz");});
test("reizbar -> reizbar", function() {deepEqual( Stem("reizbar"), "reizbar");});
test("reize -> reiz", function() {deepEqual( Stem("reize"), "reiz");});
test("reizen -> reiz", function() {deepEqual( Stem("reizen"), "reiz");});
test("reizend -> reizend", function() {deepEqual( Stem("reizend"), "reizend");});
test("reizende -> reizend", function() {deepEqual( Stem("reizende"), "reizend");});
test("reizendem -> reizend", function() {deepEqual( Stem("reizendem"), "reizend");});
test("reizenden -> reizend", function() {deepEqual( Stem("reizenden"), "reizend");});
test("reizender -> reizend", function() {deepEqual( Stem("reizender"), "reizend");});
test("reizendes -> reizend", function() {deepEqual( Stem("reizendes"), "reizend");});
test("reizte -> reizt", function() {deepEqual( Stem("reizte"), "reizt");});
test("reizvolle -> reizvoll", function() {deepEqual( Stem("reizvolle"), "reizvoll");});
test("rekruten -> rekrut", function() {deepEqual( Stem("rekruten"), "rekrut");});
test("rekrutiert -> rekrutiert", function() {deepEqual( Stem("rekrutiert"), "rekrutiert");});
test("relativ -> relativ", function() {deepEqual( Stem("relativ"), "relativ");});
test("relativen -> relativ", function() {deepEqual( Stem("relativen"), "relativ");});
test("relativiert -> relativiert", function() {deepEqual( Stem("relativiert"), "relativiert");});
test("religion -> religion", function() {deepEqual( Stem("religion"), "religion");});
test("religionen -> religion", function() {deepEqual( Stem("religionen"), "religion");});
test("religionreligionsunterricht -> religionreligionsunterricht", function() {deepEqual( Stem("religionreligionsunterricht"), "religionreligionsunterricht");});
test("religions -> religion", function() {deepEqual( Stem("religions"), "religion");});
test("religionsgebräuche -> religionsgebrauch", function() {deepEqual( Stem("religionsgebräuche"), "religionsgebrauch");});
test("religionsgemeinschaft -> religionsgemeinschaft", function() {deepEqual( Stem("religionsgemeinschaft"), "religionsgemeinschaft");});
test("religionslehre -> religionslehr", function() {deepEqual( Stem("religionslehre"), "religionslehr");});
test("religionsleuten -> religionsleut", function() {deepEqual( Stem("religionsleuten"), "religionsleut");});
test("religiös -> religios", function() {deepEqual( Stem("religiös"), "religios");});
test("religiöse -> religios", function() {deepEqual( Stem("religiöse"), "religios");});
test("religiösen -> religios", function() {deepEqual( Stem("religiösen"), "religios");});
test("reliquiae -> reliquia", function() {deepEqual( Stem("reliquiae"), "reliquia");});
test("remalja -> remalja", function() {deepEqual( Stem("remalja"), "remalja");});
test("remaljas -> remaljas", function() {deepEqual( Stem("remaljas"), "remaljas");});
test("reminiszenz -> reminiszenz", function() {deepEqual( Stem("reminiszenz"), "reminiszenz");});
test("rempelte -> rempelt", function() {deepEqual( Stem("rempelte"), "rempelt");});
test("rennen -> renn", function() {deepEqual( Stem("rennen"), "renn");});
test("rennens -> renn", function() {deepEqual( Stem("rennens"), "renn");});
test("renner -> renn", function() {deepEqual( Stem("renner"), "renn");});
test("rennern -> renn", function() {deepEqual( Stem("rennern"), "renn");});
test("rennt -> rennt", function() {deepEqual( Stem("rennt"), "rennt");});
test("renntier -> rennti", function() {deepEqual( Stem("renntier"), "rennti");});
test("renommierten -> renommiert", function() {deepEqual( Stem("renommierten"), "renommiert");});
test("renoviert -> renoviert", function() {deepEqual( Stem("renoviert"), "renoviert");});
test("renovierte -> renoviert", function() {deepEqual( Stem("renovierte"), "renoviert");});
test("renten -> rent", function() {deepEqual( Stem("renten"), "rent");});
test("rephaim -> rephaim", function() {deepEqual( Stem("rephaim"), "rephaim");});
test("reporter -> report", function() {deepEqual( Stem("reporter"), "report");});
test("repräsentanten -> reprasentant", function() {deepEqual( Stem("repräsentanten"), "reprasentant");});
test("repräsentantinnennach -> reprasentantinnennach", function() {deepEqual( Stem("repräsentantinnennach"), "reprasentantinnennach");});
test("republik -> republ", function() {deepEqual( Stem("republik"), "republ");});
test("republikaner -> republikan", function() {deepEqual( Stem("republikaner"), "republikan");});
test("reserve -> reserv", function() {deepEqual( Stem("reserve"), "reserv");});
test("residenz -> residenz", function() {deepEqual( Stem("residenz"), "residenz");});
test("residenzstadt -> residenzstadt", function() {deepEqual( Stem("residenzstadt"), "residenzstadt");});
test("resolut -> resolut", function() {deepEqual( Stem("resolut"), "resolut");});
test("resoluten -> resolut", function() {deepEqual( Stem("resoluten"), "resolut");});
test("respekt -> respekt", function() {deepEqual( Stem("respekt"), "respekt");});
test("respektablen -> respektabl", function() {deepEqual( Stem("respektablen"), "respektabl");});
test("respektieren -> respekti", function() {deepEqual( Stem("respektieren"), "respekti");});
test("respekts -> respekt", function() {deepEqual( Stem("respekts"), "respekt");});
test("ressiert -> ressiert", function() {deepEqual( Stem("ressiert"), "ressiert");});
test("ressort -> ressort", function() {deepEqual( Stem("ressort"), "ressort");});
test("rest -> rest", function() {deepEqual( Stem("rest"), "rest");});
test("restchen -> restch", function() {deepEqual( Stem("restchen"), "restch");});
test("reste -> rest", function() {deepEqual( Stem("reste"), "rest");});
test("resten -> rest", function() {deepEqual( Stem("resten"), "rest");});
test("restitution -> restitution", function() {deepEqual( Stem("restitution"), "restitution");});
test("restlichen -> restlich", function() {deepEqual( Stem("restlichen"), "restlich");});
test("resultat -> resultat", function() {deepEqual( Stem("resultat"), "resultat");});
test("resultate -> resultat", function() {deepEqual( Stem("resultate"), "resultat");});
test("resümiert -> resumiert", function() {deepEqual( Stem("resümiert"), "resumiert");});
test("reto -> reto", function() {deepEqual( Stem("reto"), "reto");});
test("rette -> rett", function() {deepEqual( Stem("rette"), "rett");});
test("retten -> rett", function() {deepEqual( Stem("retten"), "rett");});
test("rettende -> rettend", function() {deepEqual( Stem("rettende"), "rettend");});
test("rettenden -> rettend", function() {deepEqual( Stem("rettenden"), "rettend");});
test("retter -> rett", function() {deepEqual( Stem("retter"), "rett");});
test("retterin -> retterin", function() {deepEqual( Stem("retterin"), "retterin");});
test("rettete -> rettet", function() {deepEqual( Stem("rettete"), "rettet");});
test("rettung -> rettung", function() {deepEqual( Stem("rettung"), "rettung");});
test("rettungsanker -> rettungsank", function() {deepEqual( Stem("rettungsanker"), "rettungsank");});
test("rettungsgedanken -> rettungsgedank", function() {deepEqual( Stem("rettungsgedanken"), "rettungsgedank");});
test("rettungsgesellschaft -> rettungsgesellschaft", function() {deepEqual( Stem("rettungsgesellschaft"), "rettungsgesellschaft");});
test("reue -> reu", function() {deepEqual( Stem("reue"), "reu");});
test("reuen -> reu", function() {deepEqual( Stem("reuen"), "reu");});
test("reuet -> reuet", function() {deepEqual( Stem("reuet"), "reuet");});
test("reuete -> reuet", function() {deepEqual( Stem("reuete"), "reuet");});
test("reulos -> reulos", function() {deepEqual( Stem("reulos"), "reulos");});
test("reuss -> reuss", function() {deepEqual( Stem("reuss"), "reuss");});
test("reut -> reut", function() {deepEqual( Stem("reut"), "reut");});
test("reute -> reut", function() {deepEqual( Stem("reute"), "reut");});
test("revier -> revi", function() {deepEqual( Stem("revier"), "revi");});
test("revolution -> revolution", function() {deepEqual( Stem("revolution"), "revolution");});
test("revolutionäre -> revolutionar", function() {deepEqual( Stem("revolutionäre"), "revolutionar");});
test("rezept -> rezept", function() {deepEqual( Stem("rezept"), "rezept");});
test("rezepten -> rezept", function() {deepEqual( Stem("rezepten"), "rezept");});
test("rezeptivität -> rezeptivitat", function() {deepEqual( Stem("rezeptivität"), "rezeptivitat");});
test("rezin -> rezin", function() {deepEqual( Stem("rezin"), "rezin");});
test("rezins -> rezin", function() {deepEqual( Stem("rezins"), "rezin");});
test("rhauderfehn -> rhauderfehn", function() {deepEqual( Stem("rhauderfehn"), "rhauderfehn");});
test("rhein -> rhein", function() {deepEqual( Stem("rhein"), "rhein");});
test("rheinische -> rheinisch", function() {deepEqual( Stem("rheinische"), "rheinisch");});
test("rheinstrom -> rheinstrom", function() {deepEqual( Stem("rheinstrom"), "rheinstrom");});
test("rhetorik -> rhetor", function() {deepEqual( Stem("rhetorik"), "rhetor");});
test("rhetorischen -> rhetor", function() {deepEqual( Stem("rhetorischen"), "rhetor");});
test("richard -> richard", function() {deepEqual( Stem("richard"), "richard");});
test("richt -> richt", function() {deepEqual( Stem("richt"), "richt");});
test("richte -> richt", function() {deepEqual( Stem("richte"), "richt");});
test("richten -> richt", function() {deepEqual( Stem("richten"), "richt");});
test("richter -> richt", function() {deepEqual( Stem("richter"), "richt");});
test("richteramt -> richteramt", function() {deepEqual( Stem("richteramt"), "richteramt");});
test("richterlichen -> richt", function() {deepEqual( Stem("richterlichen"), "richt");});
test("richtern -> richt", function() {deepEqual( Stem("richtern"), "richt");});
test("richters -> richt", function() {deepEqual( Stem("richters"), "richt");});
test("richterstuhl -> richterstuhl", function() {deepEqual( Stem("richterstuhl"), "richterstuhl");});
test("richtes -> richt", function() {deepEqual( Stem("richtes"), "richt");});
test("richtet -> richtet", function() {deepEqual( Stem("richtet"), "richtet");});
test("richtete -> richtet", function() {deepEqual( Stem("richtete"), "richtet");});
test("richteten -> richtet", function() {deepEqual( Stem("richteten"), "richtet");});
test("richtig -> richtig", function() {deepEqual( Stem("richtig"), "richtig");});
test("richtige -> richtig", function() {deepEqual( Stem("richtige"), "richtig");});
test("richtigem -> richtig", function() {deepEqual( Stem("richtigem"), "richtig");});
test("richtigen -> richtig", function() {deepEqual( Stem("richtigen"), "richtig");});
test("richtiger -> richtig", function() {deepEqual( Stem("richtiger"), "richtig");});
test("richtiges -> richtig", function() {deepEqual( Stem("richtiges"), "richtig");});
test("richtigkeit -> richtig", function() {deepEqual( Stem("richtigkeit"), "richtig");});
test("richtigs -> richtig", function() {deepEqual( Stem("richtigs"), "richtig");});
test("richtigsten -> richtig", function() {deepEqual( Stem("richtigsten"), "richtig");});
test("richtscheit -> richtscheit", function() {deepEqual( Stem("richtscheit"), "richtscheit");});
test("richtschnur -> richtschnur", function() {deepEqual( Stem("richtschnur"), "richtschnur");});
test("richtung -> richtung", function() {deepEqual( Stem("richtung"), "richtung");});
test("richtungen -> richtung", function() {deepEqual( Stem("richtungen"), "richtung");});
test("rieb -> rieb", function() {deepEqual( Stem("rieb"), "rieb");});
test("rieben -> rieb", function() {deepEqual( Stem("rieben"), "rieb");});
test("riechen -> riech", function() {deepEqual( Stem("riechen"), "riech");});
test("riechschwämmchen -> riechschwammch", function() {deepEqual( Stem("riechschwämmchen"), "riechschwammch");});
test("riecht -> riecht", function() {deepEqual( Stem("riecht"), "riecht");});
test("rief -> rief", function() {deepEqual( Stem("rief"), "rief");});
test("riefen -> rief", function() {deepEqual( Stem("riefen"), "rief");});
test("riegel -> riegel", function() {deepEqual( Stem("riegel"), "riegel");});
test("riegelte -> riegelt", function() {deepEqual( Stem("riegelte"), "riegelt");});
test("riemen -> riem", function() {deepEqual( Stem("riemen"), "riem");});
test("riese -> ries", function() {deepEqual( Stem("riese"), "ries");});
test("rieseln -> rieseln", function() {deepEqual( Stem("rieseln"), "rieseln");});
test("rieselt -> rieselt", function() {deepEqual( Stem("rieselt"), "rieselt");});
test("rieselte -> rieselt", function() {deepEqual( Stem("rieselte"), "rieselt");});
test("rieselten -> rieselt", function() {deepEqual( Stem("rieselten"), "rieselt");});
test("riesen -> ries", function() {deepEqual( Stem("riesen"), "ries");});
test("riesenfülle -> riesenfull", function() {deepEqual( Stem("riesenfülle"), "riesenfull");});
test("riesengebirge -> riesengebirg", function() {deepEqual( Stem("riesengebirge"), "riesengebirg");});
test("riesengebirges -> riesengebirg", function() {deepEqual( Stem("riesengebirges"), "riesengebirg");});
test("riesengross -> riesengross", function() {deepEqual( Stem("riesengross"), "riesengross");});
test("riesengrosse -> riesengross", function() {deepEqual( Stem("riesengrosse"), "riesengross");});
test("riesengrosser -> riesengross", function() {deepEqual( Stem("riesengrosser"), "riesengross");});
test("riesengrosses -> riesengross", function() {deepEqual( Stem("riesengrosses"), "riesengross");});
test("riesengrund -> riesengrund", function() {deepEqual( Stem("riesengrund"), "riesengrund");});
test("riesenhafte -> riesenhaft", function() {deepEqual( Stem("riesenhafte"), "riesenhaft");});
test("riesenhafter -> riesenhaft", function() {deepEqual( Stem("riesenhafter"), "riesenhaft");});
test("riesenhund -> riesenhund", function() {deepEqual( Stem("riesenhund"), "riesenhund");});
test("riesenkamme -> riesenkamm", function() {deepEqual( Stem("riesenkamme"), "riesenkamm");});
test("riesenkanone -> riesenkanon", function() {deepEqual( Stem("riesenkanone"), "riesenkanon");});
test("riesenköpfige -> riesenkopf", function() {deepEqual( Stem("riesenköpfige"), "riesenkopf");});
test("riesenkraft -> riesenkraft", function() {deepEqual( Stem("riesenkraft"), "riesenkraft");});
test("riesenlanges -> riesenlang", function() {deepEqual( Stem("riesenlanges"), "riesenlang");});
test("riesenmade -> riesenmad", function() {deepEqual( Stem("riesenmade"), "riesenmad");});
test("riesenmässiger -> riesenmass", function() {deepEqual( Stem("riesenmässiger"), "riesenmass");});
test("riesenpferde -> riesenpferd", function() {deepEqual( Stem("riesenpferde"), "riesenpferd");});
test("riesenzacken -> riesenzack", function() {deepEqual( Stem("riesenzacken"), "riesenzack");});
test("riesige -> riesig", function() {deepEqual( Stem("riesige"), "riesig");});
test("riesigen -> riesig", function() {deepEqual( Stem("riesigen"), "riesig");});
test("riesiger -> riesig", function() {deepEqual( Stem("riesiger"), "riesig");});
test("riet -> riet", function() {deepEqual( Stem("riet"), "riet");});
test("rieten -> riet", function() {deepEqual( Stem("rieten"), "riet");});
test("rin -> rin", function() {deepEqual( Stem("rin"), "rin");});
test("rina -> rina", function() {deepEqual( Stem("rina"), "rina");});
test("rinde -> rind", function() {deepEqual( Stem("rinde"), "rind");});
test("rindenklunsen -> rindenkluns", function() {deepEqual( Stem("rindenklunsen"), "rindenkluns");});
test("rindensubstanz -> rindensubstanz", function() {deepEqual( Stem("rindensubstanz"), "rindensubstanz");});
test("rindensubstanzen -> rindensubstanz", function() {deepEqual( Stem("rindensubstanzen"), "rindensubstanz");});
test("rinder -> rind", function() {deepEqual( Stem("rinder"), "rind");});
test("rindern -> rind", function() {deepEqual( Stem("rindern"), "rind");});
test("rinderwahn -> rinderwahn", function() {deepEqual( Stem("rinderwahn"), "rinderwahn");});
test("rindes -> rind", function() {deepEqual( Stem("rindes"), "rind");});
test("rindfleisch -> rindfleisch", function() {deepEqual( Stem("rindfleisch"), "rindfleisch");});
test("rindvieh -> rindvieh", function() {deepEqual( Stem("rindvieh"), "rindvieh");});
test("rindviehs -> rindvieh", function() {deepEqual( Stem("rindviehs"), "rindvieh");});
test("ring -> ring", function() {deepEqual( Stem("ring"), "ring");});
test("ringe -> ring", function() {deepEqual( Stem("ringe"), "ring");});
test("ringelchen -> ringelch", function() {deepEqual( Stem("ringelchen"), "ringelch");});
test("ringellocken -> ringellock", function() {deepEqual( Stem("ringellocken"), "ringellock");});
test("ringelreih -> ringelreih", function() {deepEqual( Stem("ringelreih"), "ringelreih");});
test("ringelten -> ringelt", function() {deepEqual( Stem("ringelten"), "ringelt");});
test("ringen -> ring", function() {deepEqual( Stem("ringen"), "ring");});
test("ringenden -> ringend", function() {deepEqual( Stem("ringenden"), "ringend");});
test("ringern -> ring", function() {deepEqual( Stem("ringern"), "ring");});
test("ringes -> ring", function() {deepEqual( Stem("ringes"), "ring");});
test("ringetausch -> ringetausch", function() {deepEqual( Stem("ringetausch"), "ringetausch");});
test("ringgeschmückten -> ringgeschmuckt", function() {deepEqual( Stem("ringgeschmückten"), "ringgeschmuckt");});
test("ringier -> ringi", function() {deepEqual( Stem("ringier"), "ringi");});
test("ringlein -> ringlein", function() {deepEqual( Stem("ringlein"), "ringlein");});
test("ringmauer -> ringmau", function() {deepEqual( Stem("ringmauer"), "ringmau");});
test("ringmauern -> ringmau", function() {deepEqual( Stem("ringmauern"), "ringmau");});
test("rings -> ring", function() {deepEqual( Stem("rings"), "ring");});
test("ringsherum -> ringsherum", function() {deepEqual( Stem("ringsherum"), "ringsherum");});
test("ringsum -> ringsum", function() {deepEqual( Stem("ringsum"), "ringsum");});
test("ringsumher -> ringsumh", function() {deepEqual( Stem("ringsumher"), "ringsumh");});
test("ringvorlesung -> ringvorles", function() {deepEqual( Stem("ringvorlesung"), "ringvorles");});
test("rinne -> rinn", function() {deepEqual( Stem("rinne"), "rinn");});
test("rinnen -> rinn", function() {deepEqual( Stem("rinnen"), "rinn");});
test("rinnt -> rinnt", function() {deepEqual( Stem("rinnt"), "rinnt");});
test("rippe -> ripp", function() {deepEqual( Stem("rippe"), "ripp");});
test("rippen -> ripp", function() {deepEqual( Stem("rippen"), "ripp");});
test("rippenbrüche -> rippenbruch", function() {deepEqual( Stem("rippenbrüche"), "rippenbruch");});
test("rippenstösse -> rippenstoss", function() {deepEqual( Stem("rippenstösse"), "rippenstoss");});
test("risiken -> risik", function() {deepEqual( Stem("risiken"), "risik");});
test("risiko -> risiko", function() {deepEqual( Stem("risiko"), "risiko");});
test("riskiert -> riskiert", function() {deepEqual( Stem("riskiert"), "riskiert");});
test("riss -> riss", function() {deepEqual( Stem("riss"), "riss");});
test("riß -> riss", function() {deepEqual( Stem("riß"), "riss");});
test("risse -> riss", function() {deepEqual( Stem("risse"), "riss");});
test("rissen -> riss", function() {deepEqual( Stem("rissen"), "riss");});
test("risses -> riss", function() {deepEqual( Stem("risses"), "riss");});
test("rith -> rith", function() {deepEqual( Stem("rith"), "rith");});
test("ritikül -> ritikul", function() {deepEqual( Stem("ritikül"), "ritikul");});
test("ritt -> ritt", function() {deepEqual( Stem("ritt"), "ritt");});
test("ritten -> ritt", function() {deepEqual( Stem("ritten"), "ritt");});
test("ritter -> ritt", function() {deepEqual( Stem("ritter"), "ritt");});
test("ritterdienst -> ritterdien", function() {deepEqual( Stem("ritterdienst"), "ritterdien");});
test("ritterherr -> ritterherr", function() {deepEqual( Stem("ritterherr"), "ritterherr");});
test("ritterherrlichen -> ritterherr", function() {deepEqual( Stem("ritterherrlichen"), "ritterherr");});
test("ritterlich -> ritt", function() {deepEqual( Stem("ritterlich"), "ritt");});
test("ritterliche -> ritt", function() {deepEqual( Stem("ritterliche"), "ritt");});
test("ritterlichen -> ritt", function() {deepEqual( Stem("ritterlichen"), "ritt");});
test("ritterlichkeit -> ritter", function() {deepEqual( Stem("ritterlichkeit"), "ritter");});
test("rittern -> ritt", function() {deepEqual( Stem("rittern"), "ritt");});
test("ritternase -> ritternas", function() {deepEqual( Stem("ritternase"), "ritternas");});
test("ritterrüstung -> ritterrust", function() {deepEqual( Stem("ritterrüstung"), "ritterrust");});
test("ritters -> ritt", function() {deepEqual( Stem("ritters"), "ritt");});
test("ritterschaft -> ritterschaft", function() {deepEqual( Stem("ritterschaft"), "ritterschaft");});
test("rittersherr -> rittersherr", function() {deepEqual( Stem("rittersherr"), "rittersherr");});
test("rittersherrn -> rittersherrn", function() {deepEqual( Stem("rittersherrn"), "rittersherrn");});
test("rittersmann -> rittersmann", function() {deepEqual( Stem("rittersmann"), "rittersmann");});
test("ritterstab -> ritterstab", function() {deepEqual( Stem("ritterstab"), "ritterstab");});
test("rittes -> ritt", function() {deepEqual( Stem("rittes"), "ritt");});
test("rittlings -> rittling", function() {deepEqual( Stem("rittlings"), "rittling");});
test("rituale -> ritual", function() {deepEqual( Stem("rituale"), "ritual");});
test("ritus -> ritus", function() {deepEqual( Stem("ritus"), "ritus");});
test("ritzen -> ritz", function() {deepEqual( Stem("ritzen"), "ritz");});
test("rivalen -> rival", function() {deepEqual( Stem("rivalen"), "rival");});
test("rnit -> rnit", function() {deepEqual( Stem("rnit"), "rnit");});
test("road -> road", function() {deepEqual( Stem("road"), "road");});
test("robespierre -> robespierr", function() {deepEqual( Stem("robespierre"), "robespierr");});
test("roch -> roch", function() {deepEqual( Stem("roch"), "roch");});
test("röche -> roch", function() {deepEqual( Stem("röche"), "roch");});
test("rock -> rock", function() {deepEqual( Stem("rock"), "rock");});
test("röck -> rock", function() {deepEqual( Stem("röck"), "rock");});
test("rockärmel -> rockarmel", function() {deepEqual( Stem("rockärmel"), "rockarmel");});
test("röckchen -> rockch", function() {deepEqual( Stem("röckchen"), "rockch");});
test("rocke -> rock", function() {deepEqual( Stem("rocke"), "rock");});
test("röcke -> rock", function() {deepEqual( Stem("röcke"), "rock");});
test("röcken -> rock", function() {deepEqual( Stem("röcken"), "rock");});
test("rockes -> rock", function() {deepEqual( Stem("rockes"), "rock");});
test("rockschlippchenende -> rockschlippchen", function() {deepEqual( Stem("rockschlippchenende"), "rockschlippchen");});
test("rockschoss -> rockschoss", function() {deepEqual( Stem("rockschoss"), "rockschoss");});
test("rocktasche -> rocktasch", function() {deepEqual( Stem("rocktasche"), "rocktasch");});
test("rocktaschen -> rocktasch", function() {deepEqual( Stem("rocktaschen"), "rocktasch");});
test("rodeten -> rodet", function() {deepEqual( Stem("rodeten"), "rodet");});
test("roh -> roh", function() {deepEqual( Stem("roh"), "roh");});
test("rohe -> roh", function() {deepEqual( Stem("rohe"), "roh");});
test("roheiten -> roheit", function() {deepEqual( Stem("roheiten"), "roheit");});
test("rohen -> roh", function() {deepEqual( Stem("rohen"), "roh");});
test("roher -> roh", function() {deepEqual( Stem("roher"), "roh");});
test("rohes -> roh", function() {deepEqual( Stem("rohes"), "roh");});
test("rohesten -> roh", function() {deepEqual( Stem("rohesten"), "roh");});
test("rohr -> rohr", function() {deepEqual( Stem("rohr"), "rohr");});
test("rohrdurchwachsenen -> rohrdurchwachs", function() {deepEqual( Stem("rohrdurchwachsenen"), "rohrdurchwachs");});
test("röhre -> rohr", function() {deepEqual( Stem("röhre"), "rohr");});
test("rohrstock -> rohrstock", function() {deepEqual( Stem("rohrstock"), "rohrstock");});
test("rolf -> rolf", function() {deepEqual( Stem("rolf"), "rolf");});
test("rolle -> roll", function() {deepEqual( Stem("rolle"), "roll");});
test("rollen -> roll", function() {deepEqual( Stem("rollen"), "roll");});
test("rollenden -> rollend", function() {deepEqual( Stem("rollenden"), "rollend");});
test("rollendes -> rollend", function() {deepEqual( Stem("rollendes"), "rollend");});
test("rollfeld -> rollfeld", function() {deepEqual( Stem("rollfeld"), "rollfeld");});
test("rollsteine -> rollstein", function() {deepEqual( Stem("rollsteine"), "rollstein");});
test("rollt -> rollt", function() {deepEqual( Stem("rollt"), "rollt");});
test("rollte -> rollt", function() {deepEqual( Stem("rollte"), "rollt");});
test("rollten -> rollt", function() {deepEqual( Stem("rollten"), "rollt");});
test("rollwalze -> rollwalz", function() {deepEqual( Stem("rollwalze"), "rollwalz");});
test("rom -> rom", function() {deepEqual( Stem("rom"), "rom");});
test("roman -> roman", function() {deepEqual( Stem("roman"), "roman");});
test("romane -> roman", function() {deepEqual( Stem("romane"), "roman");});
test("romanes -> roman", function() {deepEqual( Stem("romanes"), "roman");});
test("romanhelden -> romanheld", function() {deepEqual( Stem("romanhelden"), "romanheld");});
test("romanshorn -> romanshorn", function() {deepEqual( Stem("romanshorn"), "romanshorn");});
test("romantische -> romant", function() {deepEqual( Stem("romantische"), "romant");});
test("romantischer -> romant", function() {deepEqual( Stem("romantischer"), "romant");});
test("romantisches -> romant", function() {deepEqual( Stem("romantisches"), "romant");});
test("romeo -> romeo", function() {deepEqual( Stem("romeo"), "romeo");});
test("römisch -> romisch", function() {deepEqual( Stem("römisch"), "romisch");});
test("römischen -> romisch", function() {deepEqual( Stem("römischen"), "romisch");});
test("rosafarbenes -> rosafarb", function() {deepEqual( Stem("rosafarbenes"), "rosafarb");});
test("rosan -> rosan", function() {deepEqual( Stem("rosan"), "rosan");});
test("röschen -> rosch", function() {deepEqual( Stem("röschen"), "rosch");});
test("rose -> ros", function() {deepEqual( Stem("rose"), "ros");});
test("rosen -> ros", function() {deepEqual( Stem("rosen"), "ros");});
test("rosenbäumchen -> rosenbaumch", function() {deepEqual( Stem("rosenbäumchen"), "rosenbaumch");});
test("rosenbüsche -> rosenbusch", function() {deepEqual( Stem("rosenbüsche"), "rosenbusch");});
test("rosengärtchen -> rosengartch", function() {deepEqual( Stem("rosengärtchen"), "rosengartch");});
test("rosenroten -> rosenrot", function() {deepEqual( Stem("rosenroten"), "rosenrot");});
test("rosenroter -> rosenrot", function() {deepEqual( Stem("rosenroter"), "rosenrot");});
test("rosenschimmer -> rosenschimm", function() {deepEqual( Stem("rosenschimmer"), "rosenschimm");});
test("rosental -> rosental", function() {deepEqual( Stem("rosental"), "rosental");});
test("rosenwäldchen -> rosenwaldch", function() {deepEqual( Stem("rosenwäldchen"), "rosenwaldch");});
test("rosiges -> rosig", function() {deepEqual( Stem("rosiges"), "rosig");});
test("rosigster -> rosig", function() {deepEqual( Stem("rosigster"), "rosig");});
test("rosine -> rosin", function() {deepEqual( Stem("rosine"), "rosin");});
test("rosinen -> rosin", function() {deepEqual( Stem("rosinen"), "rosin");});
test("röslein -> roslein", function() {deepEqual( Stem("röslein"), "roslein");});
test("rosmarin -> rosmarin", function() {deepEqual( Stem("rosmarin"), "rosmarin");});
test("rosmaringärtchen -> rosmaringartch", function() {deepEqual( Stem("rosmaringärtchen"), "rosmaringartch");});
test("rosoli -> rosoli", function() {deepEqual( Stem("rosoli"), "rosoli");});
test("ross -> ross", function() {deepEqual( Stem("ross"), "ross");});
test("roß -> ross", function() {deepEqual( Stem("roß"), "ross");});
test("rosse -> ross", function() {deepEqual( Stem("rosse"), "ross");});
test("rosselenker -> rosselenk", function() {deepEqual( Stem("rosselenker"), "rosselenk");});
test("rossen -> ross", function() {deepEqual( Stem("rossen"), "ross");});
test("rosstäuscher -> rosstausch", function() {deepEqual( Stem("rosstäuscher"), "rosstausch");});
test("roßtäuscher -> rosstausch", function() {deepEqual( Stem("roßtäuscher"), "rosstausch");});
test("rost -> rost", function() {deepEqual( Stem("rost"), "rost");});
test("rostige -> rostig", function() {deepEqual( Stem("rostige"), "rostig");});
test("rostigen -> rostig", function() {deepEqual( Stem("rostigen"), "rostig");});
test("rostiger -> rostig", function() {deepEqual( Stem("rostiger"), "rostig");});
test("rostiges -> rostig", function() {deepEqual( Stem("rostiges"), "rostig");});
test("rot -> rot", function() {deepEqual( Stem("rot"), "rot");});
test("rotbäckigen -> rotback", function() {deepEqual( Stem("rotbäckigen"), "rotback");});
test("rotbäckiger -> rotback", function() {deepEqual( Stem("rotbäckiger"), "rotback");});
test("rotbäckiges -> rotback", function() {deepEqual( Stem("rotbäckiges"), "rotback");});
test("rotbekleidete -> rotbekleidet", function() {deepEqual( Stem("rotbekleidete"), "rotbekleidet");});
test("rote -> rot", function() {deepEqual( Stem("rote"), "rot");});
test("röte -> rot", function() {deepEqual( Stem("röte"), "rot");});
test("rotem -> rot", function() {deepEqual( Stem("rotem"), "rot");});
test("roten -> rot", function() {deepEqual( Stem("roten"), "rot");});
test("roter -> rot", function() {deepEqual( Stem("roter"), "rot");});
test("rotes -> rot", function() {deepEqual( Stem("rotes"), "rot");});
test("rotgelbem -> rotgelb", function() {deepEqual( Stem("rotgelbem"), "rotgelb");});
test("rotgelben -> rotgelb", function() {deepEqual( Stem("rotgelben"), "rotgelb");});
test("rothaarig -> rothaar", function() {deepEqual( Stem("rothaarig"), "rothaar");});
test("rothaarige -> rothaar", function() {deepEqual( Stem("rothaarige"), "rothaar");});
test("rothaarigen -> rothaar", function() {deepEqual( Stem("rothaarigen"), "rothaar");});
test("rothäutigen -> rothaut", function() {deepEqual( Stem("rothäutigen"), "rothaut");});
test("rotieren -> roti", function() {deepEqual( Stem("rotieren"), "roti");});
test("rötliche -> rotlich", function() {deepEqual( Stem("rötliche"), "rotlich");});
test("rötlichem -> rotlich", function() {deepEqual( Stem("rötlichem"), "rotlich");});
test("rötlichen -> rotlich", function() {deepEqual( Stem("rötlichen"), "rotlich");});
test("rötlicher -> rotlich", function() {deepEqual( Stem("rötlicher"), "rotlich");});
test("rötliches -> rotlich", function() {deepEqual( Stem("rötliches"), "rotlich");});
test("rotseidenes -> rotseid", function() {deepEqual( Stem("rotseidenes"), "rotseid");});
test("rotte -> rott", function() {deepEqual( Stem("rotte"), "rott");});
test("rottenweise -> rottenweis", function() {deepEqual( Stem("rottenweise"), "rottenweis");});
test("rotwein -> rotwein", function() {deepEqual( Stem("rotwein"), "rotwein");});
test("roulierende -> roulier", function() {deepEqual( Stem("roulierende"), "roulier");});
test("routine -> routin", function() {deepEqual( Stem("routine"), "routin");});
test("routinesendung -> routinesend", function() {deepEqual( Stem("routinesendung"), "routinesend");});
test("rpd -> rpd", function() {deepEqual( Stem("rpd"), "rpd");});
test("ruben -> rub", function() {deepEqual( Stem("ruben"), "rub");});
test("rüben -> rub", function() {deepEqual( Stem("rüben"), "rub");});
test("rubens -> rub", function() {deepEqual( Stem("rubens"), "rub");});
test("rübezahl -> rubezahl", function() {deepEqual( Stem("rübezahl"), "rubezahl");});
test("rübezahls -> rubezahl", function() {deepEqual( Stem("rübezahls"), "rubezahl");});
test("rubin -> rubin", function() {deepEqual( Stem("rubin"), "rubin");});
test("rubinfunken -> rubinfunk", function() {deepEqual( Stem("rubinfunken"), "rubinfunk");});
test("rubrik -> rubrik", function() {deepEqual( Stem("rubrik"), "rubrik");});
test("rubriken -> rubrik", function() {deepEqual( Stem("rubriken"), "rubrik");});
test("rübzählischen -> rubzahl", function() {deepEqual( Stem("rübzählischen"), "rubzahl");});
test("ruchbar -> ruchbar", function() {deepEqual( Stem("ruchbar"), "ruchbar");});
test("ruchlosen -> ruchlos", function() {deepEqual( Stem("ruchlosen"), "ruchlos");});
test("ruchlosigkeit -> ruchlos", function() {deepEqual( Stem("ruchlosigkeit"), "ruchlos");});
test("ruck -> ruck", function() {deepEqual( Stem("ruck"), "ruck");});
test("rückantwortcouverts -> ruckantwortcouvert", function() {deepEqual( Stem("rückantwortcouverts"), "ruckantwortcouvert");});
test("rücke -> ruck", function() {deepEqual( Stem("rücke"), "ruck");});
test("ruckelt -> ruckelt", function() {deepEqual( Stem("ruckelt"), "ruckelt");});
test("rücken -> ruck", function() {deepEqual( Stem("rücken"), "ruck");});
test("rückfall -> ruckfall", function() {deepEqual( Stem("rückfall"), "ruckfall");});
test("rückflug -> ruckflug", function() {deepEqual( Stem("rückflug"), "ruckflug");});
test("rückgängig -> ruckgang", function() {deepEqual( Stem("rückgängig"), "ruckgang");});
test("rückgesetzten -> ruckgesetzt", function() {deepEqual( Stem("rückgesetzten"), "ruckgesetzt");});
test("rückhalt -> ruckhalt", function() {deepEqual( Stem("rückhalt"), "ruckhalt");});
test("rückhaltlos -> ruckhaltlos", function() {deepEqual( Stem("rückhaltlos"), "ruckhaltlos");});
test("rückhaltlose -> ruckhaltlos", function() {deepEqual( Stem("rückhaltlose"), "ruckhaltlos");});
test("rückhaltlosen -> ruckhaltlos", function() {deepEqual( Stem("rückhaltlosen"), "ruckhaltlos");});
test("rückhaltlosigkeit -> ruckhaltlos", function() {deepEqual( Stem("rückhaltlosigkeit"), "ruckhaltlos");});
test("rückkehr -> ruckkehr", function() {deepEqual( Stem("rückkehr"), "ruckkehr");});
test("rucksack -> rucksack", function() {deepEqual( Stem("rucksack"), "rucksack");});
test("rucksäcken -> rucksack", function() {deepEqual( Stem("rucksäcken"), "rucksack");});
test("rückschauen -> ruckschau", function() {deepEqual( Stem("rückschauen"), "ruckschau");});
test("rückschluss -> ruckschluss", function() {deepEqual( Stem("rückschluss"), "ruckschluss");});
test("rückseiten -> ruckseit", function() {deepEqual( Stem("rückseiten"), "ruckseit");});
test("rücksicht -> rucksicht", function() {deepEqual( Stem("rücksicht"), "rucksicht");});
test("rücksichten -> rucksicht", function() {deepEqual( Stem("rücksichten"), "rucksicht");});
test("rücksichtslos -> rucksichtslos", function() {deepEqual( Stem("rücksichtslos"), "rucksichtslos");});
test("rücksichtsloser -> rucksichtslos", function() {deepEqual( Stem("rücksichtsloser"), "rucksichtslos");});
test("rücksichtsloseste -> rucksichtslos", function() {deepEqual( Stem("rücksichtsloseste"), "rucksichtslos");});
test("rücksichtslosigkeit -> rucksichtslos", function() {deepEqual( Stem("rücksichtslosigkeit"), "rucksichtslos");});
test("rücksitze -> rucksitz", function() {deepEqual( Stem("rücksitze"), "rucksitz");});
test("rückspiel -> ruckspiel", function() {deepEqual( Stem("rückspiel"), "ruckspiel");});
test("rückt -> ruckt", function() {deepEqual( Stem("rückt"), "ruckt");});
test("rückte -> ruckt", function() {deepEqual( Stem("rückte"), "ruckt");});
test("rücktritt -> rucktritt", function() {deepEqual( Stem("rücktritt"), "rucktritt");});
test("rücktritten -> rucktritt", function() {deepEqual( Stem("rücktritten"), "rucktritt");});
test("rücktrittszahlen -> rucktrittszahl", function() {deepEqual( Stem("rücktrittszahlen"), "rucktrittszahl");});
test("rückübertragung -> ruckubertrag", function() {deepEqual( Stem("rückübertragung"), "ruckubertrag");});
test("rückwärtigen -> ruckwart", function() {deepEqual( Stem("rückwärtigen"), "ruckwart");});
test("rückwärts -> ruckwart", function() {deepEqual( Stem("rückwärts"), "ruckwart");});
test("rückwechsel -> ruckwechsel", function() {deepEqual( Stem("rückwechsel"), "ruckwechsel");});
test("rückweg -> ruckweg", function() {deepEqual( Stem("rückweg"), "ruckweg");});
test("rückwege -> ruckweg", function() {deepEqual( Stem("rückwege"), "ruckweg");});
test("rückwirkungen -> ruckwirk", function() {deepEqual( Stem("rückwirkungen"), "ruckwirk");});
test("rückzahlungsrate -> ruckzahlungsrat", function() {deepEqual( Stem("rückzahlungsrate"), "ruckzahlungsrat");});
test("rückzug -> ruckzug", function() {deepEqual( Stem("rückzug"), "ruckzug");});
test("rudel -> rudel", function() {deepEqual( Stem("rudel"), "rudel");});
test("rudeln -> rudeln", function() {deepEqual( Stem("rudeln"), "rudeln");});
test("rudels -> rudel", function() {deepEqual( Stem("rudels"), "rudel");});
test("ruder -> rud", function() {deepEqual( Stem("ruder"), "rud");});
test("ruderbank -> ruderbank", function() {deepEqual( Stem("ruderbank"), "ruderbank");});
test("rudern -> rud", function() {deepEqual( Stem("rudern"), "rud");});
test("ruderte -> rudert", function() {deepEqual( Stem("ruderte"), "rudert");});
test("rudi -> rudi", function() {deepEqual( Stem("rudi"), "rudi");});
test("rüdiger -> rudig", function() {deepEqual( Stem("rüdiger"), "rudig");});
test("rue -> rue", function() {deepEqual( Stem("rue"), "rue");});
test("ruedi -> ruedi", function() {deepEqual( Stem("ruedi"), "ruedi");});
test("ruf -> ruf", function() {deepEqual( Stem("ruf"), "ruf");});
test("rufe -> ruf", function() {deepEqual( Stem("rufe"), "ruf");});
test("rufen -> ruf", function() {deepEqual( Stem("rufen"), "ruf");});
test("rufende -> rufend", function() {deepEqual( Stem("rufende"), "rufend");});
test("rufenden -> rufend", function() {deepEqual( Stem("rufenden"), "rufend");});
test("rufens -> ruf", function() {deepEqual( Stem("rufens"), "ruf");});
test("rufes -> ruf", function() {deepEqual( Stem("rufes"), "ruf");});
test("rufet -> rufet", function() {deepEqual( Stem("rufet"), "rufet");});
test("ruft -> ruft", function() {deepEqual( Stem("ruft"), "ruft");});
test("rüge -> rug", function() {deepEqual( Stem("rüge"), "rug");});
test("ruh -> ruh", function() {deepEqual( Stem("ruh"), "ruh");});
test("ruhe -> ruh", function() {deepEqual( Stem("ruhe"), "ruh");});
test("ruhekissen -> ruhekiss", function() {deepEqual( Stem("ruhekissen"), "ruhekiss");});
test("ruhen -> ruh", function() {deepEqual( Stem("ruhen"), "ruh");});
test("ruhende -> ruhend", function() {deepEqual( Stem("ruhende"), "ruhend");});
test("ruhepunkten -> ruhepunkt", function() {deepEqual( Stem("ruhepunkten"), "ruhepunkt");});
test("ruhet -> ruhet", function() {deepEqual( Stem("ruhet"), "ruhet");});
test("ruhete -> ruhet", function() {deepEqual( Stem("ruhete"), "ruhet");});
test("ruhevoll -> ruhevoll", function() {deepEqual( Stem("ruhevoll"), "ruhevoll");});
test("ruhig -> ruhig", function() {deepEqual( Stem("ruhig"), "ruhig");});
test("ruhige -> ruhig", function() {deepEqual( Stem("ruhige"), "ruhig");});
test("ruhigem -> ruhig", function() {deepEqual( Stem("ruhigem"), "ruhig");});
test("ruhigen -> ruhig", function() {deepEqual( Stem("ruhigen"), "ruhig");});
test("ruhiger -> ruhig", function() {deepEqual( Stem("ruhiger"), "ruhig");});
test("ruhigeren -> ruhig", function() {deepEqual( Stem("ruhigeren"), "ruhig");});
test("ruhiges -> ruhig", function() {deepEqual( Stem("ruhiges"), "ruhig");});
test("ruhigste -> ruhig", function() {deepEqual( Stem("ruhigste"), "ruhig");});
test("ruhigsten -> ruhig", function() {deepEqual( Stem("ruhigsten"), "ruhig");});
test("ruhm -> ruhm", function() {deepEqual( Stem("ruhm"), "ruhm");});
test("ruhme -> ruhm", function() {deepEqual( Stem("ruhme"), "ruhm");});
test("rühmen -> ruhm", function() {deepEqual( Stem("rühmen"), "ruhm");});
test("rühmenswerte -> ruhmenswert", function() {deepEqual( Stem("rühmenswerte"), "ruhmenswert");});
test("ruhmes -> ruhm", function() {deepEqual( Stem("ruhmes"), "ruhm");});
test("rühmt -> ruhmt", function() {deepEqual( Stem("rühmt"), "ruhmt");});
test("rühmte -> ruhmt", function() {deepEqual( Stem("rühmte"), "ruhmt");});
test("ruhn -> ruhn", function() {deepEqual( Stem("ruhn"), "ruhn");});
test("rühre -> ruhr", function() {deepEqual( Stem("rühre"), "ruhr");});
test("rühren -> ruhr", function() {deepEqual( Stem("rühren"), "ruhr");});
test("rührend -> ruhrend", function() {deepEqual( Stem("rührend"), "ruhrend");});
test("rührenden -> ruhrend", function() {deepEqual( Stem("rührenden"), "ruhrend");});
test("rührender -> ruhrend", function() {deepEqual( Stem("rührender"), "ruhrend");});
test("rühret -> ruhret", function() {deepEqual( Stem("rühret"), "ruhret");});
test("ruhrgebiet -> ruhrgebiet", function() {deepEqual( Stem("ruhrgebiet"), "ruhrgebiet");});
test("rühriger -> ruhrig", function() {deepEqual( Stem("rühriger"), "ruhrig");});
test("rührigkeit -> ruhrig", function() {deepEqual( Stem("rührigkeit"), "ruhrig");});
test("rührt -> ruhrt", function() {deepEqual( Stem("rührt"), "ruhrt");});
test("rührte -> ruhrt", function() {deepEqual( Stem("rührte"), "ruhrt");});
test("rührten -> ruhrt", function() {deepEqual( Stem("rührten"), "ruhrt");});
test("rührung -> ruhrung", function() {deepEqual( Stem("rührung"), "ruhrung");});
test("ruht -> ruht", function() {deepEqual( Stem("ruht"), "ruht");});
test("ruhte -> ruht", function() {deepEqual( Stem("ruhte"), "ruht");});
test("ruhten -> ruht", function() {deepEqual( Stem("ruhten"), "ruht");});
test("ruine -> ruin", function() {deepEqual( Stem("ruine"), "ruin");});
test("ruiniert -> ruiniert", function() {deepEqual( Stem("ruiniert"), "ruiniert");});
test("ruinierte -> ruiniert", function() {deepEqual( Stem("ruinierte"), "ruiniert");});
test("rum -> rum", function() {deepEqual( Stem("rum"), "rum");});
test("rumgebrumsel -> rumgebrumsel", function() {deepEqual( Stem("rumgebrumsel"), "rumgebrumsel");});
test("rummelplatz -> rummelplatz", function() {deepEqual( Stem("rummelplatz"), "rummelplatz");});
test("rumorte -> rumort", function() {deepEqual( Stem("rumorte"), "rumort");});
test("rumpelkammer -> rumpelkamm", function() {deepEqual( Stem("rumpelkammer"), "rumpelkamm");});
test("rumpfe -> rumpf", function() {deepEqual( Stem("rumpfe"), "rumpf");});
test("rümpfte -> rumpft", function() {deepEqual( Stem("rümpfte"), "rumpft");});
test("rumrennen -> rumrenn", function() {deepEqual( Stem("rumrennen"), "rumrenn");});
test("rund -> rund", function() {deepEqual( Stem("rund"), "rund");});
test("runde -> rund", function() {deepEqual( Stem("runde"), "rund");});
test("runden -> rund", function() {deepEqual( Stem("runden"), "rund");});
test("runder -> rund", function() {deepEqual( Stem("runder"), "rund");});
test("rundes -> rund", function() {deepEqual( Stem("rundes"), "rund");});
test("rundfunk -> rundfunk", function() {deepEqual( Stem("rundfunk"), "rundfunk");});
test("rundfunks -> rundfunk", function() {deepEqual( Stem("rundfunks"), "rundfunk");});
test("rundgang -> rundgang", function() {deepEqual( Stem("rundgang"), "rundgang");});
test("rundheit -> rundheit", function() {deepEqual( Stem("rundheit"), "rundheit");});
test("rundlich -> rundlich", function() {deepEqual( Stem("rundlich"), "rundlich");});
test("rundlichen -> rundlich", function() {deepEqual( Stem("rundlichen"), "rundlich");});
test("rundschrift -> rundschrift", function() {deepEqual( Stem("rundschrift"), "rundschrift");});
test("rundung -> rundung", function() {deepEqual( Stem("rundung"), "rundung");});
test("runge -> rung", function() {deepEqual( Stem("runge"), "rung");});
test("runterbracht -> runterbracht", function() {deepEqual( Stem("runterbracht"), "runterbracht");});
test("runzeln -> runzeln", function() {deepEqual( Stem("runzeln"), "runzeln");});
test("runzelreiche -> runzelreich", function() {deepEqual( Stem("runzelreiche"), "runzelreich");});
test("runzlige -> runzlig", function() {deepEqual( Stem("runzlige"), "runzlig");});
test("runzligen -> runzlig", function() {deepEqual( Stem("runzligen"), "runzlig");});
test("russ -> russ", function() {deepEqual( Stem("russ"), "russ");});
test("ruß -> russ", function() {deepEqual( Stem("ruß"), "russ");});
test("russenpeitsche -> russenpeitsch", function() {deepEqual( Stem("russenpeitsche"), "russenpeitsch");});
test("russes -> russ", function() {deepEqual( Stem("russes"), "russ");});
test("rußes -> russ", function() {deepEqual( Stem("rußes"), "russ");});
test("russgesichtige -> russgesicht", function() {deepEqual( Stem("russgesichtige"), "russgesicht");});
test("russigen -> russig", function() {deepEqual( Stem("russigen"), "russig");});
test("russiger -> russig", function() {deepEqual( Stem("russiger"), "russig");});
test("russisch -> russisch", function() {deepEqual( Stem("russisch"), "russisch");});
test("russland -> russland", function() {deepEqual( Stem("russland"), "russland");});
test("rüstet -> rustet", function() {deepEqual( Stem("rüstet"), "rustet");});
test("rüstig -> rustig", function() {deepEqual( Stem("rüstig"), "rustig");});
test("rüstige -> rustig", function() {deepEqual( Stem("rüstige"), "rustig");});
test("rüstigen -> rustig", function() {deepEqual( Stem("rüstigen"), "rustig");});
test("rüstiger -> rustig", function() {deepEqual( Stem("rüstiger"), "rustig");});
test("rüstigkeit -> rustig", function() {deepEqual( Stem("rüstigkeit"), "rustig");});
test("rüstung -> rustung", function() {deepEqual( Stem("rüstung"), "rustung");});
test("rute -> rut", function() {deepEqual( Stem("rute"), "rut");});
test("ruten -> rut", function() {deepEqual( Stem("ruten"), "rut");});
test("rutenhieb -> rutenhieb", function() {deepEqual( Stem("rutenhieb"), "rutenhieb");});
test("rutenstreiche -> rutenstreich", function() {deepEqual( Stem("rutenstreiche"), "rutenstreich");});
test("rutenwald -> rutenwald", function() {deepEqual( Stem("rutenwald"), "rutenwald");});
test("rutschbahn -> rutschbahn", function() {deepEqual( Stem("rutschbahn"), "rutschbahn");});
test("rutschbahnen -> rutschbahn", function() {deepEqual( Stem("rutschbahnen"), "rutschbahn");});
test("rutschte -> rutscht", function() {deepEqual( Stem("rutschte"), "rutscht");});
test("rütteln -> rutteln", function() {deepEqual( Stem("rütteln"), "rutteln");});
test("rüttelte -> ruttelt", function() {deepEqual( Stem("rüttelte"), "ruttelt");});
test("rüttelten -> ruttelt", function() {deepEqual( Stem("rüttelten"), "ruttelt");});
test("s -> s", function() {deepEqual( Stem("s"), "s");});
test("saal -> saal", function() {deepEqual( Stem("saal"), "saal");});
test("saale -> saal", function() {deepEqual( Stem("saale"), "saal");});
test("saales -> saal", function() {deepEqual( Stem("saales"), "saal");});
test("saalhälfte -> saalhalft", function() {deepEqual( Stem("saalhälfte"), "saalhalft");});
test("saat -> saat", function() {deepEqual( Stem("saat"), "saat");});
test("saaten -> saat", function() {deepEqual( Stem("saaten"), "saat");});
test("saatfeld -> saatfeld", function() {deepEqual( Stem("saatfeld"), "saatfeld");});
test("sabbath -> sabbath", function() {deepEqual( Stem("sabbath"), "sabbath");});
test("sabbathe -> sabbath", function() {deepEqual( Stem("sabbathe"), "sabbath");});
test("sabbaths -> sabbath", function() {deepEqual( Stem("sabbaths"), "sabbath");});
test("sabbattollen -> sabbattoll", function() {deepEqual( Stem("sabbattollen"), "sabbattoll");});
test("säbel -> sabel", function() {deepEqual( Stem("säbel"), "sabel");});
test("säbelhieben -> sabelhieb", function() {deepEqual( Stem("säbelhieben"), "sabelhieb");});
test("säbels -> sabel", function() {deepEqual( Stem("säbels"), "sabel");});
test("sabine -> sabin", function() {deepEqual( Stem("sabine"), "sabin");});
test("sacconex -> sacconex", function() {deepEqual( Stem("sacconex"), "sacconex");});
test("sach -> sach", function() {deepEqual( Stem("sach"), "sach");});
test("sache -> sach", function() {deepEqual( Stem("sache"), "sach");});
test("sachen -> sach", function() {deepEqual( Stem("sachen"), "sach");});
test("sacherklärungen -> sacherklar", function() {deepEqual( Stem("sacherklärungen"), "sacherklar");});
test("sachgemäss -> sachgemass", function() {deepEqual( Stem("sachgemäss"), "sachgemass");});
test("sachgemässen -> sachgemass", function() {deepEqual( Stem("sachgemässen"), "sachgemass");});
test("sachlage -> sachlag", function() {deepEqual( Stem("sachlage"), "sachlag");});
test("sachliche -> sachlich", function() {deepEqual( Stem("sachliche"), "sachlich");});
test("sachs -> sach", function() {deepEqual( Stem("sachs"), "sach");});
test("sachse -> sachs", function() {deepEqual( Stem("sachse"), "sachs");});
test("sachsen -> sachs", function() {deepEqual( Stem("sachsen"), "sachs");});
test("sächsische -> sachsisch", function() {deepEqual( Stem("sächsische"), "sachsisch");});
test("sächsischen -> sachsisch", function() {deepEqual( Stem("sächsischen"), "sachsisch");});
test("sacht -> sacht", function() {deepEqual( Stem("sacht"), "sacht");});
test("sachte -> sacht", function() {deepEqual( Stem("sachte"), "sacht");});
test("sachten -> sacht", function() {deepEqual( Stem("sachten"), "sacht");});
test("sachverständigen -> sachverstand", function() {deepEqual( Stem("sachverständigen"), "sachverstand");});
test("sachzusammenhang -> sachzusammenhang", function() {deepEqual( Stem("sachzusammenhang"), "sachzusammenhang");});
test("sack -> sack", function() {deepEqual( Stem("sack"), "sack");});
test("säckchen -> sackch", function() {deepEqual( Stem("säckchen"), "sackch");});
test("säcke -> sack", function() {deepEqual( Stem("säcke"), "sack");});
test("säcken -> sack", function() {deepEqual( Stem("säcken"), "sack");});
test("sackgasse -> sackgass", function() {deepEqual( Stem("sackgasse"), "sackgass");});
test("sackuhr -> sackuhr", function() {deepEqual( Stem("sackuhr"), "sackuhr");});
test("sacrosanctum -> sacrosanctum", function() {deepEqual( Stem("sacrosanctum"), "sacrosanctum");});
test("saeculi -> saeculi", function() {deepEqual( Stem("saeculi"), "saeculi");});
test("säet -> saet", function() {deepEqual( Stem("säet"), "saet");});
test("saffianschuhe -> saffianschuh", function() {deepEqual( Stem("saffianschuhe"), "saffianschuh");});
test("saft -> saft", function() {deepEqual( Stem("saft"), "saft");});
test("sag -> sag", function() {deepEqual( Stem("sag"), "sag");});
test("sage -> sag", function() {deepEqual( Stem("sage"), "sag");});
test("sagen -> sag", function() {deepEqual( Stem("sagen"), "sag");});
test("sägespäneleib -> sagespaneleib", function() {deepEqual( Stem("sägespäneleib"), "sagespaneleib");});
test("saget -> saget", function() {deepEqual( Stem("saget"), "saget");});
test("sagst -> sagst", function() {deepEqual( Stem("sagst"), "sagst");});
test("sagt -> sagt", function() {deepEqual( Stem("sagt"), "sagt");});
test("sägt -> sagt", function() {deepEqual( Stem("sägt"), "sagt");});
test("sagte -> sagt", function() {deepEqual( Stem("sagte"), "sagt");});
test("sagten -> sagt", function() {deepEqual( Stem("sagten"), "sagt");});
test("sah -> sah", function() {deepEqual( Stem("sah"), "sah");});
test("sähe -> sah", function() {deepEqual( Stem("sähe"), "sah");});
test("sahen -> sah", function() {deepEqual( Stem("sahen"), "sah");});
test("sähen -> sah", function() {deepEqual( Stem("sähen"), "sah");});
test("sahest -> sah", function() {deepEqual( Stem("sahest"), "sah");});
test("sahet -> sahet", function() {deepEqual( Stem("sahet"), "sahet");});
test("sähet -> sahet", function() {deepEqual( Stem("sähet"), "sahet");});
test("saint -> saint", function() {deepEqual( Stem("saint"), "saint");});
test("saiten -> sait", function() {deepEqual( Stem("saiten"), "sait");});
test("saiteninstrument -> saiteninstrument", function() {deepEqual( Stem("saiteninstrument"), "saiteninstrument");});
test("saiteninstrumente -> saiteninstrument", function() {deepEqual( Stem("saiteninstrumente"), "saiteninstrument");});
test("saitenspieler -> saitenspiel", function() {deepEqual( Stem("saitenspieler"), "saitenspiel");});
test("sakra -> sakra", function() {deepEqual( Stem("sakra"), "sakra");});
test("sakramente -> sakrament", function() {deepEqual( Stem("sakramente"), "sakrament");});
test("sakramenten -> sakrament", function() {deepEqual( Stem("sakramenten"), "sakrament");});
test("sakramentsverwaltung -> sakramentsverwalt", function() {deepEqual( Stem("sakramentsverwaltung"), "sakramentsverwalt");});
test("säkular -> sakular", function() {deepEqual( Stem("säkular"), "sakular");});
test("salami -> salami", function() {deepEqual( Stem("salami"), "salami");});
test("salat -> salat", function() {deepEqual( Stem("salat"), "salat");});
test("salatblatt -> salatblatt", function() {deepEqual( Stem("salatblatt"), "salatblatt");});
test("salbte -> salbt", function() {deepEqual( Stem("salbte"), "salbt");});
test("salbung -> salbung", function() {deepEqual( Stem("salbung"), "salbung");});
test("salbungsvoll -> salbungsvoll", function() {deepEqual( Stem("salbungsvoll"), "salbungsvoll");});
test("säle -> sal", function() {deepEqual( Stem("säle"), "sal");});
test("sali -> sali", function() {deepEqual( Stem("sali"), "sali");});
test("salis -> salis", function() {deepEqual( Stem("salis"), "salis");});
test("salomo -> salomo", function() {deepEqual( Stem("salomo"), "salomo");});
test("salomon -> salomon", function() {deepEqual( Stem("salomon"), "salomon");});
test("salomos -> salomos", function() {deepEqual( Stem("salomos"), "salomos");});
test("salutieren -> saluti", function() {deepEqual( Stem("salutieren"), "saluti");});
test("salutierend -> salutier", function() {deepEqual( Stem("salutierend"), "salutier");});
test("salvieren -> salvi", function() {deepEqual( Stem("salvieren"), "salvi");});
test("salz -> salz", function() {deepEqual( Stem("salz"), "salz");});
test("salzbüchsl -> salzbuchsl", function() {deepEqual( Stem("salzbüchsl"), "salzbuchsl");});
test("salzburg -> salzburg", function() {deepEqual( Stem("salzburg"), "salzburg");});
test("salzburger -> salzburg", function() {deepEqual( Stem("salzburger"), "salzburg");});
test("salze -> salz", function() {deepEqual( Stem("salze"), "salz");});
test("salzgeist -> salzgeist", function() {deepEqual( Stem("salzgeist"), "salzgeist");});
test("salzknappe -> salzknapp", function() {deepEqual( Stem("salzknappe"), "salzknapp");});
test("salzknappen -> salzknapp", function() {deepEqual( Stem("salzknappen"), "salzknapp");});
test("sam -> sam", function() {deepEqual( Stem("sam"), "sam");});
test("sämann -> samann", function() {deepEqual( Stem("sämann"), "samann");});
test("samaria -> samaria", function() {deepEqual( Stem("samaria"), "samaria");});
test("same -> sam", function() {deepEqual( Stem("same"), "sam");});
test("samen -> sam", function() {deepEqual( Stem("samen"), "sam");});
test("samenkörner -> samenkorn", function() {deepEqual( Stem("samenkörner"), "samenkorn");});
test("samenkraut -> samenkraut", function() {deepEqual( Stem("samenkraut"), "samenkraut");});
test("samenreste -> samenr", function() {deepEqual( Stem("samenreste"), "samenr");});
test("samens -> sam", function() {deepEqual( Stem("samens"), "sam");});
test("samm -> samm", function() {deepEqual( Stem("samm"), "samm");});
test("sammelaktion -> sammelaktion", function() {deepEqual( Stem("sammelaktion"), "sammelaktion");});
test("sammeln -> sammeln", function() {deepEqual( Stem("sammeln"), "sammeln");});
test("sammelnd -> sammelnd", function() {deepEqual( Stem("sammelnd"), "sammelnd");});
test("sammelt -> sammelt", function() {deepEqual( Stem("sammelt"), "sammelt");});
test("sammelte -> sammelt", function() {deepEqual( Stem("sammelte"), "sammelt");});
test("sammelten -> sammelt", function() {deepEqual( Stem("sammelten"), "sammelt");});
test("sammet -> sammet", function() {deepEqual( Stem("sammet"), "sammet");});
test("sammetfutter -> sammetfutt", function() {deepEqual( Stem("sammetfutter"), "sammetfutt");});
test("sammetkleide -> sammetkleid", function() {deepEqual( Stem("sammetkleide"), "sammetkleid");});
test("sammetrasen -> sammetras", function() {deepEqual( Stem("sammetrasen"), "sammetras");});
test("sammetschärpe -> sammetscharp", function() {deepEqual( Stem("sammetschärpe"), "sammetscharp");});
test("sammetweste -> sammetw", function() {deepEqual( Stem("sammetweste"), "sammetw");});
test("sammle -> samml", function() {deepEqual( Stem("sammle"), "samml");});
test("sammlung -> sammlung", function() {deepEqual( Stem("sammlung"), "sammlung");});
test("sammlungen -> sammlung", function() {deepEqual( Stem("sammlungen"), "sammlung");});
test("sample -> sampl", function() {deepEqual( Stem("sample"), "sampl");});
test("samstag -> samstag", function() {deepEqual( Stem("samstag"), "samstag");});
test("samstagabend -> samstagab", function() {deepEqual( Stem("samstagabend"), "samstagab");});
test("samt -> samt", function() {deepEqual( Stem("samt"), "samt");});
test("sämtlich -> samtlich", function() {deepEqual( Stem("sämtlich"), "samtlich");});
test("sämtliche -> samtlich", function() {deepEqual( Stem("sämtliche"), "samtlich");});
test("sämtlichen -> samtlich", function() {deepEqual( Stem("sämtlichen"), "samtlich");});
test("sämtlicher -> samtlich", function() {deepEqual( Stem("sämtlicher"), "samtlich");});
test("samtwämschen -> samtwamsch", function() {deepEqual( Stem("samtwämschen"), "samtwamsch");});
test("samuel -> samuel", function() {deepEqual( Stem("samuel"), "samuel");});
test("samuels -> samuel", function() {deepEqual( Stem("samuels"), "samuel");});
test("sand -> sand", function() {deepEqual( Stem("sand"), "sand");});
test("sande -> sand", function() {deepEqual( Stem("sande"), "sand");});
test("sandes -> sand", function() {deepEqual( Stem("sandes"), "sand");});
test("sandige -> sandig", function() {deepEqual( Stem("sandige"), "sandig");});
test("sandkörnern -> sandkorn", function() {deepEqual( Stem("sandkörnern"), "sandkorn");});
test("sandmann -> sandmann", function() {deepEqual( Stem("sandmann"), "sandmann");});
test("sandmännchen -> sandmannch", function() {deepEqual( Stem("sandmännchen"), "sandmannch");});
test("sandmännchens -> sandmannch", function() {deepEqual( Stem("sandmännchens"), "sandmannch");});
test("sandmännchenschlitten -> sandmannchenschlitt", function() {deepEqual( Stem("sandmännchenschlitten"), "sandmannchenschlitt");});
test("sandmanns -> sandmann", function() {deepEqual( Stem("sandmanns"), "sandmann");});
test("sandsiegel -> sandsiegel", function() {deepEqual( Stem("sandsiegel"), "sandsiegel");});
test("sandstein -> sandstein", function() {deepEqual( Stem("sandstein"), "sandstein");});
test("sandte -> sandt", function() {deepEqual( Stem("sandte"), "sandt");});
test("sandten -> sandt", function() {deepEqual( Stem("sandten"), "sandt");});
test("sanft -> sanft", function() {deepEqual( Stem("sanft"), "sanft");});
test("sanfte -> sanft", function() {deepEqual( Stem("sanfte"), "sanft");});
test("sänfte -> sanft", function() {deepEqual( Stem("sänfte"), "sanft");});
test("sanftem -> sanft", function() {deepEqual( Stem("sanftem"), "sanft");});
test("sanften -> sanft", function() {deepEqual( Stem("sanften"), "sanft");});
test("sänften -> sanft", function() {deepEqual( Stem("sänften"), "sanft");});
test("sanfter -> sanft", function() {deepEqual( Stem("sanfter"), "sanft");});
test("sanftes -> sanft", function() {deepEqual( Stem("sanftes"), "sanft");});
test("sanftesten -> sanft", function() {deepEqual( Stem("sanftesten"), "sanft");});
test("sanftleuchtenden -> sanftleucht", function() {deepEqual( Stem("sanftleuchtenden"), "sanftleucht");});
test("sanftmut -> sanftmut", function() {deepEqual( Stem("sanftmut"), "sanftmut");});
test("sanftmütige -> sanftmut", function() {deepEqual( Stem("sanftmütige"), "sanftmut");});
test("sanftmütiger -> sanftmut", function() {deepEqual( Stem("sanftmütiger"), "sanftmut");});
test("sanftsäuselndes -> sanftsauselnd", function() {deepEqual( Stem("sanftsäuselndes"), "sanftsauselnd");});
test("sang -> sang", function() {deepEqual( Stem("sang"), "sang");});
test("sänge -> sang", function() {deepEqual( Stem("sänge"), "sang");});
test("sangen -> sang", function() {deepEqual( Stem("sangen"), "sang");});
test("sängen -> sang", function() {deepEqual( Stem("sängen"), "sang");});
test("sänger -> sang", function() {deepEqual( Stem("sänger"), "sang");});
test("sängerin -> sangerin", function() {deepEqual( Stem("sängerin"), "sangerin");});
test("sangesbrüder -> sangesbrud", function() {deepEqual( Stem("sangesbrüder"), "sangesbrud");});
test("sank -> sank", function() {deepEqual( Stem("sank"), "sank");});
test("sänke -> sank", function() {deepEqual( Stem("sänke"), "sank");});
test("sanken -> sank", function() {deepEqual( Stem("sanken"), "sank");});
test("sankt -> sankt", function() {deepEqual( Stem("sankt"), "sankt");});
test("sanktionen -> sanktion", function() {deepEqual( Stem("sanktionen"), "sanktion");});
test("sanktionslos -> sanktionslos", function() {deepEqual( Stem("sanktionslos"), "sanktionslos");});
test("sann -> sann", function() {deepEqual( Stem("sann"), "sann");});
test("saphir -> saphir", function() {deepEqual( Stem("saphir"), "saphir");});
test("saphirstein -> saphirstein", function() {deepEqual( Stem("saphirstein"), "saphirstein");});
test("saphirsteines -> saphirstein", function() {deepEqual( Stem("saphirsteines"), "saphirstein");});
test("saphirsteins -> saphirstein", function() {deepEqual( Stem("saphirsteins"), "saphirstein");});
test("sapperlöter -> sapperlot", function() {deepEqual( Stem("sapperlöter"), "sapperlot");});
test("sappermenter -> sapperment", function() {deepEqual( Stem("sappermenter"), "sapperment");});
test("sarah -> sarah", function() {deepEqual( Stem("sarah"), "sarah");});
test("sardes -> sard", function() {deepEqual( Stem("sardes"), "sard");});
test("sarg -> sarg", function() {deepEqual( Stem("sarg"), "sarg");});
test("sarge -> sarg", function() {deepEqual( Stem("sarge"), "sarg");});
test("särgen -> sarg", function() {deepEqual( Stem("särgen"), "sarg");});
test("sarnen -> sarn", function() {deepEqual( Stem("sarnen"), "sarn");});
test("sass -> sass", function() {deepEqual( Stem("sass"), "sass");});
test("saß -> sass", function() {deepEqual( Stem("saß"), "sass");});
test("sässe -> sass", function() {deepEqual( Stem("sässe"), "sass");});
test("sassen -> sass", function() {deepEqual( Stem("sassen"), "sass");});
test("saßen -> sass", function() {deepEqual( Stem("saßen"), "sass");});
test("sässen -> sass", function() {deepEqual( Stem("sässen"), "sass");});
test("sät -> sat", function() {deepEqual( Stem("sät"), "sat");});
test("satan -> satan", function() {deepEqual( Stem("satan"), "satan");});
test("satanischen -> satan", function() {deepEqual( Stem("satanischen"), "satan");});
test("satansunternehmen -> satansunternehm", function() {deepEqual( Stem("satansunternehmen"), "satansunternehm");});
test("säte -> sat", function() {deepEqual( Stem("säte"), "sat");});
test("satellitenschüssel -> satellitenschussel", function() {deepEqual( Stem("satellitenschüssel"), "satellitenschussel");});
test("satirisch -> satir", function() {deepEqual( Stem("satirisch"), "satir");});
test("satirische -> satir", function() {deepEqual( Stem("satirische"), "satir");});
test("satrap -> satrap", function() {deepEqual( Stem("satrap"), "satrap");});
test("satt -> satt", function() {deepEqual( Stem("satt"), "satt");});
test("sattelbandage -> sattelbandag", function() {deepEqual( Stem("sattelbandage"), "sattelbandag");});
test("satteln -> satteln", function() {deepEqual( Stem("satteln"), "satteln");});
test("sätteln -> satteln", function() {deepEqual( Stem("sätteln"), "satteln");});
test("sattgegessen -> sattgegess", function() {deepEqual( Stem("sattgegessen"), "sattgegess");});
test("sättigen -> sattig", function() {deepEqual( Stem("sättigen"), "sattig");});
test("sättigst -> sattig", function() {deepEqual( Stem("sättigst"), "sattig");});
test("sättigung -> sattig", function() {deepEqual( Stem("sättigung"), "sattig");});
test("sattsam -> sattsam", function() {deepEqual( Stem("sattsam"), "sattsam");});
test("sattzuessen -> sattzuess", function() {deepEqual( Stem("sattzuessen"), "sattzuess");});
test("saturnalien -> saturnali", function() {deepEqual( Stem("saturnalien"), "saturnali");});
test("satz -> satz", function() {deepEqual( Stem("satz"), "satz");});
test("satze -> satz", function() {deepEqual( Stem("satze"), "satz");});
test("sätze -> satz", function() {deepEqual( Stem("sätze"), "satz");});
test("sätzen -> satz", function() {deepEqual( Stem("sätzen"), "satz");});
test("satzes -> satz", function() {deepEqual( Stem("satzes"), "satz");});
test("satzung -> satzung", function() {deepEqual( Stem("satzung"), "satzung");});
test("satzungen -> satzung", function() {deepEqual( Stem("satzungen"), "satzung");});
test("sau -> sau", function() {deepEqual( Stem("sau"), "sau");});
test("sauber -> saub", function() {deepEqual( Stem("sauber"), "saub");});
test("saubere -> saub", function() {deepEqual( Stem("saubere"), "saub");});
test("sauberen -> saub", function() {deepEqual( Stem("sauberen"), "saub");});
test("säuberlich -> saub", function() {deepEqual( Stem("säuberlich"), "saub");});
test("säubernde -> saubernd", function() {deepEqual( Stem("säubernde"), "saubernd");});
test("sauberste -> sauberst", function() {deepEqual( Stem("sauberste"), "sauberst");});
test("säuberte -> saubert", function() {deepEqual( Stem("säuberte"), "saubert");});
test("säubrer -> saubr", function() {deepEqual( Stem("säubrer"), "saubr");});
test("sauer -> sau", function() {deepEqual( Stem("sauer"), "sau");});
test("sauereien -> sauerei", function() {deepEqual( Stem("sauereien"), "sauerei");});
test("sauerkraut -> sauerkraut", function() {deepEqual( Stem("sauerkraut"), "sauerkraut");});
test("sauersüss -> sauersuss", function() {deepEqual( Stem("sauersüss"), "sauersuss");});
test("säugamme -> saugamm", function() {deepEqual( Stem("säugamme"), "saugamm");});
test("säugammen -> saugamm", function() {deepEqual( Stem("säugammen"), "saugamm");});
test("säuge -> saug", function() {deepEqual( Stem("säuge"), "saug");});
test("saugen -> saug", function() {deepEqual( Stem("saugen"), "saug");});
test("säugen -> saug", function() {deepEqual( Stem("säugen"), "saug");});
test("säugende -> saugend", function() {deepEqual( Stem("säugende"), "saugend");});
test("säugenden -> saugend", function() {deepEqual( Stem("säugenden"), "saugend");});
test("säugendes -> saugend", function() {deepEqual( Stem("säugendes"), "saugend");});
test("säugerin -> saugerin", function() {deepEqual( Stem("säugerin"), "saugerin");});
test("saugeröhrchen -> saugerohrch", function() {deepEqual( Stem("saugeröhrchen"), "saugerohrch");});
test("sauget -> sauget", function() {deepEqual( Stem("sauget"), "sauget");});
test("säugling -> saugling", function() {deepEqual( Stem("säugling"), "saugling");});
test("säuglinge -> saugling", function() {deepEqual( Stem("säuglinge"), "saugling");});
test("säuglings -> saugling", function() {deepEqual( Stem("säuglings"), "saugling");});
test("säugt -> saugt", function() {deepEqual( Stem("säugt"), "saugt");});
test("säugte -> saugt", function() {deepEqual( Stem("säugte"), "saugt");});
test("säugung -> saugung", function() {deepEqual( Stem("säugung"), "saugung");});
test("saul -> saul", function() {deepEqual( Stem("saul"), "saul");});
test("säule -> saul", function() {deepEqual( Stem("säule"), "saul");});
test("säulen -> saul", function() {deepEqual( Stem("säulen"), "saul");});
test("säulengängen -> saulengang", function() {deepEqual( Stem("säulengängen"), "saulengang");});
test("saum -> saum", function() {deepEqual( Stem("saum"), "saum");});
test("saume -> saum", function() {deepEqual( Stem("saume"), "saum");});
test("säume -> saum", function() {deepEqual( Stem("säume"), "saum");});
test("säumend -> saumend", function() {deepEqual( Stem("säumend"), "saumend");});
test("saumensch -> saumensch", function() {deepEqual( Stem("saumensch"), "saumensch");});
test("säumet -> saumet", function() {deepEqual( Stem("säumet"), "saumet");});
test("säumnis -> saumnis", function() {deepEqual( Stem("säumnis"), "saumnis");});
test("säumte -> saumt", function() {deepEqual( Stem("säumte"), "saumt");});
test("saus -> saus", function() {deepEqual( Stem("saus"), "saus");});
test("sauschwab -> sauschwab", function() {deepEqual( Stem("sauschwab"), "sauschwab");});
test("säuseln -> sauseln", function() {deepEqual( Stem("säuseln"), "sauseln");});
test("säuselte -> sauselt", function() {deepEqual( Stem("säuselte"), "sauselt");});
test("sausen -> saus", function() {deepEqual( Stem("sausen"), "saus");});
test("sausendem -> sausend", function() {deepEqual( Stem("sausendem"), "sausend");});
test("sauser -> saus", function() {deepEqual( Stem("sauser"), "saus");});
test("sausergelüste -> sausergelust", function() {deepEqual( Stem("sausergelüste"), "sausergelust");});
test("sausers -> saus", function() {deepEqual( Stem("sausers"), "saus");});
test("sauste -> saust", function() {deepEqual( Stem("sauste"), "saust");});
test("sausten -> saust", function() {deepEqual( Stem("sausten"), "saust");});
test("sautopf -> sautopf", function() {deepEqual( Stem("sautopf"), "sautopf");});
test("savoyarde -> savoyard", function() {deepEqual( Stem("savoyarde"), "savoyard");});
test("savoyarden -> savoyard", function() {deepEqual( Stem("savoyarden"), "savoyard");});
test("savoyardenkinder -> savoyardenkind", function() {deepEqual( Stem("savoyardenkinder"), "savoyardenkind");});
test("savoyardenkindern -> savoyardenkind", function() {deepEqual( Stem("savoyardenkindern"), "savoyardenkind");});
test("savoyardin -> savoyardin", function() {deepEqual( Stem("savoyardin"), "savoyardin");});
test("savoyen -> savoy", function() {deepEqual( Stem("savoyen"), "savoy");});
test("savoyens -> savoy", function() {deepEqual( Stem("savoyens"), "savoy");});
test("savoyische -> savoy", function() {deepEqual( Stem("savoyische"), "savoy");});
test("savoyischen -> savoy", function() {deepEqual( Stem("savoyischen"), "savoy");});
test("schabernack -> schabernack", function() {deepEqual( Stem("schabernack"), "schabernack");});
test("schäbig -> schabig", function() {deepEqual( Stem("schäbig"), "schabig");});
test("schäbige -> schabig", function() {deepEqual( Stem("schäbige"), "schabig");});
test("schabracken -> schabrack", function() {deepEqual( Stem("schabracken"), "schabrack");});
test("schach -> schach", function() {deepEqual( Stem("schach"), "schach");});
test("schachtel -> schachtel", function() {deepEqual( Stem("schachtel"), "schachtel");});
test("schächtelchen -> schachtelch", function() {deepEqual( Stem("schächtelchen"), "schachtelch");});
test("schachteln -> schachteln", function() {deepEqual( Stem("schachteln"), "schachteln");});
test("schad -> schad", function() {deepEqual( Stem("schad"), "schad");});
test("schaddai -> schaddai", function() {deepEqual( Stem("schaddai"), "schaddai");});
test("schaddais -> schaddais", function() {deepEqual( Stem("schaddais"), "schaddais");});
test("schade -> schad", function() {deepEqual( Stem("schade"), "schad");});
test("schädel -> schadel", function() {deepEqual( Stem("schädel"), "schadel");});
test("schädelplatte -> schadelplatt", function() {deepEqual( Stem("schädelplatte"), "schadelplatt");});
test("schaden -> schad", function() {deepEqual( Stem("schaden"), "schad");});
test("schäden -> schad", function() {deepEqual( Stem("schäden"), "schad");});
test("schadenfreude -> schadenfreud", function() {deepEqual( Stem("schadenfreude"), "schadenfreud");});
test("schadenfrohem -> schadenfroh", function() {deepEqual( Stem("schadenfrohem"), "schadenfroh");});
test("schadet -> schadet", function() {deepEqual( Stem("schadet"), "schadet");});
test("schadete -> schadet", function() {deepEqual( Stem("schadete"), "schadet");});
test("schadhaft -> schadhaft", function() {deepEqual( Stem("schadhaft"), "schadhaft");});
test("schädlich -> schadlich", function() {deepEqual( Stem("schädlich"), "schadlich");});
test("schadlos -> schadlos", function() {deepEqual( Stem("schadlos"), "schadlos");});
test("schaf -> schaf", function() {deepEqual( Stem("schaf"), "schaf");});
test("schäfchen -> schafch", function() {deepEqual( Stem("schäfchen"), "schafch");});
test("schäfchenhimmel -> schafchenhimmel", function() {deepEqual( Stem("schäfchenhimmel"), "schafchenhimmel");});
test("schäfchenstall -> schafchenstall", function() {deepEqual( Stem("schäfchenstall"), "schafchenstall");});
test("schafe -> schaf", function() {deepEqual( Stem("schafe"), "schaf");});
test("schafen -> schaf", function() {deepEqual( Stem("schafen"), "schaf");});
test("schäfer -> schaf", function() {deepEqual( Stem("schäfer"), "schaf");});
test("schäferhunde -> schaferhund", function() {deepEqual( Stem("schäferhunde"), "schaferhund");});
test("schafes -> schaf", function() {deepEqual( Stem("schafes"), "schaf");});
test("schaff -> schaff", function() {deepEqual( Stem("schaff"), "schaff");});
test("schaffen -> schaff", function() {deepEqual( Stem("schaffen"), "schaff");});
test("schaffl -> schaffl", function() {deepEqual( Stem("schaffl"), "schaffl");});
test("schafft -> schafft", function() {deepEqual( Stem("schafft"), "schafft");});
test("schaffte -> schafft", function() {deepEqual( Stem("schaffte"), "schafft");});
test("schafherde -> schafherd", function() {deepEqual( Stem("schafherde"), "schafherd");});
test("schafhirt -> schafhirt", function() {deepEqual( Stem("schafhirt"), "schafhirt");});
test("schafotte -> schafott", function() {deepEqual( Stem("schafotte"), "schafott");});
test("schafsköpf -> schafskopf", function() {deepEqual( Stem("schafsköpf"), "schafskopf");});
test("schafspelz -> schafspelz", function() {deepEqual( Stem("schafspelz"), "schafspelz");});
test("schaft -> schaft", function() {deepEqual( Stem("schaft"), "schaft");});
test("schakale -> schakal", function() {deepEqual( Stem("schakale"), "schakal");});
test("schäkernd -> schakernd", function() {deepEqual( Stem("schäkernd"), "schakernd");});
test("schäkerte -> schakert", function() {deepEqual( Stem("schäkerte"), "schakert");});
test("schal -> schal", function() {deepEqual( Stem("schal"), "schal");});
test("schale -> schal", function() {deepEqual( Stem("schale"), "schal");});
test("schalen -> schal", function() {deepEqual( Stem("schalen"), "schal");});
test("schälen -> schal", function() {deepEqual( Stem("schälen"), "schal");});
test("schalkhafter -> schalkhaft", function() {deepEqual( Stem("schalkhafter"), "schalkhaft");});
test("schalkheit -> schalkheit", function() {deepEqual( Stem("schalkheit"), "schalkheit");});
test("schalksblick -> schalksblick", function() {deepEqual( Stem("schalksblick"), "schalksblick");});
test("schall -> schall", function() {deepEqual( Stem("schall"), "schall");});
test("schallen -> schall", function() {deepEqual( Stem("schallen"), "schall");});
test("schallenden -> schallend", function() {deepEqual( Stem("schallenden"), "schallend");});
test("schallplatte -> schallplatt", function() {deepEqual( Stem("schallplatte"), "schallplatt");});
test("schalt -> schalt", function() {deepEqual( Stem("schalt"), "schalt");});
test("schalter -> schalt", function() {deepEqual( Stem("schalter"), "schalt");});
test("schalterraum -> schalterraum", function() {deepEqual( Stem("schalterraum"), "schalterraum");});
test("schalterschluß -> schalterschluss", function() {deepEqual( Stem("schalterschluß"), "schalterschluss");});
test("schaltete -> schaltet", function() {deepEqual( Stem("schaltete"), "schaltet");});
test("scham -> scham", function() {deepEqual( Stem("scham"), "scham");});
test("schäme -> scham", function() {deepEqual( Stem("schäme"), "scham");});
test("schämen -> scham", function() {deepEqual( Stem("schämen"), "scham");});
test("schamhaft -> schamhaft", function() {deepEqual( Stem("schamhaft"), "schamhaft");});
test("schamlosigkeit -> schamlos", function() {deepEqual( Stem("schamlosigkeit"), "schamlos");});
test("schämst -> scham", function() {deepEqual( Stem("schämst"), "scham");});
test("schämt -> schamt", function() {deepEqual( Stem("schämt"), "schamt");});
test("schämte -> schamt", function() {deepEqual( Stem("schämte"), "schamt");});
test("schämten -> schamt", function() {deepEqual( Stem("schämten"), "schamt");});
test("schand -> schand", function() {deepEqual( Stem("schand"), "schand");});
test("schande -> schand", function() {deepEqual( Stem("schande"), "schand");});
test("schändlich -> schandlich", function() {deepEqual( Stem("schändlich"), "schandlich");});
test("schändliche -> schandlich", function() {deepEqual( Stem("schändliche"), "schandlich");});
test("schar -> schar", function() {deepEqual( Stem("schar"), "schar");});
test("scharen -> schar", function() {deepEqual( Stem("scharen"), "schar");});
test("scharf -> scharf", function() {deepEqual( Stem("scharf"), "scharf");});
test("scharfe -> scharf", function() {deepEqual( Stem("scharfe"), "scharf");});
test("schärfe -> scharf", function() {deepEqual( Stem("schärfe"), "scharf");});
test("scharfen -> scharf", function() {deepEqual( Stem("scharfen"), "scharf");});
test("schärfen -> scharf", function() {deepEqual( Stem("schärfen"), "scharf");});
test("scharfer -> scharf", function() {deepEqual( Stem("scharfer"), "scharf");});
test("schärfer -> scharf", function() {deepEqual( Stem("schärfer"), "scharf");});
test("scharfes -> scharf", function() {deepEqual( Stem("scharfes"), "scharf");});
test("scharfsichtig -> scharfsicht", function() {deepEqual( Stem("scharfsichtig"), "scharfsicht");});
test("scharfsinn -> scharfsinn", function() {deepEqual( Stem("scharfsinn"), "scharfsinn");});
test("scharfsinnig -> scharfsinn", function() {deepEqual( Stem("scharfsinnig"), "scharfsinn");});
test("scharfsinnige -> scharfsinn", function() {deepEqual( Stem("scharfsinnige"), "scharfsinn");});
test("scharfsinniger -> scharfsinn", function() {deepEqual( Stem("scharfsinniger"), "scharfsinn");});
test("scharfsinnigkeit -> scharfsinn", function() {deepEqual( Stem("scharfsinnigkeit"), "scharfsinn");});
test("scharlach -> scharlach", function() {deepEqual( Stem("scharlach"), "scharlach");});
test("scharlachuniform -> scharlachuniform", function() {deepEqual( Stem("scharlachuniform"), "scharlachuniform");});
test("scharren -> scharr", function() {deepEqual( Stem("scharren"), "scharr");});
test("scharrten -> scharrt", function() {deepEqual( Stem("scharrten"), "scharrt");});
test("scharten -> schart", function() {deepEqual( Stem("scharten"), "schart");});
test("schatten -> schatt", function() {deepEqual( Stem("schatten"), "schatt");});
test("schattenbilder -> schattenbild", function() {deepEqual( Stem("schattenbilder"), "schattenbild");});
test("schattendunklen -> schattendunkl", function() {deepEqual( Stem("schattendunklen"), "schattendunkl");});
test("schattenreichen -> schattenreich", function() {deepEqual( Stem("schattenreichen"), "schattenreich");});
test("schattens -> schatt", function() {deepEqual( Stem("schattens"), "schatt");});
test("schattenseite -> schattenseit", function() {deepEqual( Stem("schattenseite"), "schattenseit");});
test("schattige -> schattig", function() {deepEqual( Stem("schattige"), "schattig");});
test("schattigen -> schattig", function() {deepEqual( Stem("schattigen"), "schattig");});
test("schattiger -> schattig", function() {deepEqual( Stem("schattiger"), "schattig");});
test("schatz -> schatz", function() {deepEqual( Stem("schatz"), "schatz");});
test("schätzbarste -> schatzbarst", function() {deepEqual( Stem("schätzbarste"), "schatzbarst");});
test("schätzchen -> schatzch", function() {deepEqual( Stem("schätzchen"), "schatzch");});
test("schatze -> schatz", function() {deepEqual( Stem("schatze"), "schatz");});
test("schätze -> schatz", function() {deepEqual( Stem("schätze"), "schatz");});
test("schätzen -> schatz", function() {deepEqual( Stem("schätzen"), "schatz");});
test("schatzerl -> schatzerl", function() {deepEqual( Stem("schatzerl"), "schatzerl");});
test("schatzgräber -> schatzgrab", function() {deepEqual( Stem("schatzgräber"), "schatzgrab");});
test("schatzhause -> schatzhaus", function() {deepEqual( Stem("schatzhause"), "schatzhaus");});
test("schatzhäuser -> schatzhaus", function() {deepEqual( Stem("schatzhäuser"), "schatzhaus");});
test("schatzhäusern -> schatzhaus", function() {deepEqual( Stem("schatzhäusern"), "schatzhaus");});
test("schatzkästlein -> schatzkastlein", function() {deepEqual( Stem("schatzkästlein"), "schatzkastlein");});
test("schätzt -> schatzt", function() {deepEqual( Stem("schätzt"), "schatzt");});
test("schätzte -> schatzt", function() {deepEqual( Stem("schätzte"), "schatzt");});
test("schätzten -> schatzt", function() {deepEqual( Stem("schätzten"), "schatzt");});
test("schatzung -> schatzung", function() {deepEqual( Stem("schatzung"), "schatzung");});
test("schau -> schau", function() {deepEqual( Stem("schau"), "schau");});
test("schaubrote -> schaubrot", function() {deepEqual( Stem("schaubrote"), "schaubrot");});
test("schaubroten -> schaubrot", function() {deepEqual( Stem("schaubroten"), "schaubrot");});
test("schaubühne -> schaubuhn", function() {deepEqual( Stem("schaubühne"), "schaubuhn");});
test("schauder -> schaud", function() {deepEqual( Stem("schauder"), "schaud");});
test("schauderhaft -> schauderhaft", function() {deepEqual( Stem("schauderhaft"), "schauderhaft");});
test("schauderhaften -> schauderhaft", function() {deepEqual( Stem("schauderhaften"), "schauderhaft");});
test("schaudern -> schaud", function() {deepEqual( Stem("schaudern"), "schaud");});
test("schaudert -> schaudert", function() {deepEqual( Stem("schaudert"), "schaudert");});
test("schaue -> schau", function() {deepEqual( Stem("schaue"), "schau");});
test("schauen -> schau", function() {deepEqual( Stem("schauen"), "schau");});
test("schauer -> schau", function() {deepEqual( Stem("schauer"), "schau");});
test("schauergeschichten -> schauergeschicht", function() {deepEqual( Stem("schauergeschichten"), "schauergeschicht");});
test("schauerlich -> schau", function() {deepEqual( Stem("schauerlich"), "schau");});
test("schauerlichen -> schau", function() {deepEqual( Stem("schauerlichen"), "schau");});
test("schauerte -> schauert", function() {deepEqual( Stem("schauerte"), "schauert");});
test("schauet -> schauet", function() {deepEqual( Stem("schauet"), "schauet");});
test("schaukelpferd -> schaukelpferd", function() {deepEqual( Stem("schaukelpferd"), "schaukelpferd");});
test("schaukelpferdchen -> schaukelpferdch", function() {deepEqual( Stem("schaukelpferdchen"), "schaukelpferdch");});
test("schaukelte -> schaukelt", function() {deepEqual( Stem("schaukelte"), "schaukelt");});
test("schaukelten -> schaukelt", function() {deepEqual( Stem("schaukelten"), "schaukelt");});
test("schaum -> schaum", function() {deepEqual( Stem("schaum"), "schaum");});
test("schäumend -> schaumend", function() {deepEqual( Stem("schäumend"), "schaumend");});
test("schäumenden -> schaumend", function() {deepEqual( Stem("schäumenden"), "schaumend");});
test("schaumigen -> schaumig", function() {deepEqual( Stem("schaumigen"), "schaumig");});
test("schäumt -> schaumt", function() {deepEqual( Stem("schäumt"), "schaumt");});
test("schauplatz -> schauplatz", function() {deepEqual( Stem("schauplatz"), "schauplatz");});
test("schauplatze -> schauplatz", function() {deepEqual( Stem("schauplatze"), "schauplatz");});
test("schaurig -> schaurig", function() {deepEqual( Stem("schaurig"), "schaurig");});
test("schauspiel -> schauspiel", function() {deepEqual( Stem("schauspiel"), "schauspiel");});
test("schauspiele -> schauspiel", function() {deepEqual( Stem("schauspiele"), "schauspiel");});
test("schauspieler -> schauspiel", function() {deepEqual( Stem("schauspieler"), "schauspiel");});
test("schauspielerin -> schauspielerin", function() {deepEqual( Stem("schauspielerin"), "schauspielerin");});
test("schauspielern -> schauspiel", function() {deepEqual( Stem("schauspielern"), "schauspiel");});
test("schauspielkunst -> schauspielkun", function() {deepEqual( Stem("schauspielkunst"), "schauspielkun");});
test("schauspielschule -> schauspielschul", function() {deepEqual( Stem("schauspielschule"), "schauspielschul");});
test("schaust -> schaust", function() {deepEqual( Stem("schaust"), "schaust");});
test("schaustellung -> schaustell", function() {deepEqual( Stem("schaustellung"), "schaustell");});
test("schaustellungen -> schaustell", function() {deepEqual( Stem("schaustellungen"), "schaustell");});
test("schaut -> schaut", function() {deepEqual( Stem("schaut"), "schaut");});
test("schautanz -> schautanz", function() {deepEqual( Stem("schautanz"), "schautanz");});
test("schaute -> schaut", function() {deepEqual( Stem("schaute"), "schaut");});
test("schauten -> schaut", function() {deepEqual( Stem("schauten"), "schaut");});
test("scheba -> scheba", function() {deepEqual( Stem("scheba"), "scheba");});
test("schebas -> schebas", function() {deepEqual( Stem("schebas"), "schebas");});
test("scheelen -> scheel", function() {deepEqual( Stem("scheelen"), "scheel");});
test("scheht -> scheht", function() {deepEqual( Stem("scheht"), "scheht");});
test("scheibe -> scheib", function() {deepEqual( Stem("scheibe"), "scheib");});
test("scheiben -> scheib", function() {deepEqual( Stem("scheiben"), "scheib");});
test("scheibenberaubten -> scheibenberaubt", function() {deepEqual( Stem("scheibenberaubten"), "scheibenberaubt");});
test("scheibenstand -> scheibenstand", function() {deepEqual( Stem("scheibenstand"), "scheibenstand");});
test("scheide -> scheid", function() {deepEqual( Stem("scheide"), "scheid");});
test("scheidebrief -> scheidebrief", function() {deepEqual( Stem("scheidebrief"), "scheidebrief");});
test("scheidekünstler -> scheidekunstl", function() {deepEqual( Stem("scheidekünstler"), "scheidekunstl");});
test("scheiden -> scheid", function() {deepEqual( Stem("scheiden"), "scheid");});
test("scheidendes -> scheidend", function() {deepEqual( Stem("scheidendes"), "scheidend");});
test("scheidet -> scheidet", function() {deepEqual( Stem("scheidet"), "scheidet");});
test("scheidewege -> scheideweg", function() {deepEqual( Stem("scheidewege"), "scheideweg");});
test("scheidung -> scheidung", function() {deepEqual( Stem("scheidung"), "scheidung");});
test("scheidungsritual -> scheidungsritual", function() {deepEqual( Stem("scheidungsritual"), "scheidungsritual");});
test("schein -> schein", function() {deepEqual( Stem("schein"), "schein");});
test("scheinbar -> scheinbar", function() {deepEqual( Stem("scheinbar"), "scheinbar");});
test("scheinbare -> scheinbar", function() {deepEqual( Stem("scheinbare"), "scheinbar");});
test("scheinbarem -> scheinbar", function() {deepEqual( Stem("scheinbarem"), "scheinbar");});
test("scheinbaren -> scheinbar", function() {deepEqual( Stem("scheinbaren"), "scheinbar");});
test("scheinbarer -> scheinbar", function() {deepEqual( Stem("scheinbarer"), "scheinbar");});
test("scheinbarere -> scheinbar", function() {deepEqual( Stem("scheinbarere"), "scheinbar");});
test("scheinbares -> scheinbar", function() {deepEqual( Stem("scheinbares"), "scheinbar");});
test("scheinbarkeiten -> scheinbar", function() {deepEqual( Stem("scheinbarkeiten"), "scheinbar");});
test("scheine -> schein", function() {deepEqual( Stem("scheine"), "schein");});
test("scheinen -> schein", function() {deepEqual( Stem("scheinen"), "schein");});
test("scheinende -> scheinend", function() {deepEqual( Stem("scheinende"), "scheinend");});
test("scheinendes -> scheinend", function() {deepEqual( Stem("scheinendes"), "scheinend");});
test("scheines -> schein", function() {deepEqual( Stem("scheines"), "schein");});
test("scheinet -> scheinet", function() {deepEqual( Stem("scheinet"), "scheinet");});
test("scheinfürsten -> scheinfurst", function() {deepEqual( Stem("scheinfürsten"), "scheinfurst");});
test("scheingründe -> scheingrund", function() {deepEqual( Stem("scheingründe"), "scheingrund");});
test("scheingutem -> scheingut", function() {deepEqual( Stem("scheingutem"), "scheingut");});
test("scheinheilig -> scheinheil", function() {deepEqual( Stem("scheinheilig"), "scheinheil");});
test("scheins -> schein", function() {deepEqual( Stem("scheins"), "schein");});
test("scheint -> scheint", function() {deepEqual( Stem("scheint"), "scheint");});
test("scheintoten -> scheintot", function() {deepEqual( Stem("scheintoten"), "scheintot");});
test("scheinverkehr -> scheinverkehr", function() {deepEqual( Stem("scheinverkehr"), "scheinverkehr");});
test("scheinwahrem -> scheinwahr", function() {deepEqual( Stem("scheinwahrem"), "scheinwahr");});
test("scheißkasten -> scheisskast", function() {deepEqual( Stem("scheißkasten"), "scheisskast");});
test("scheit -> scheit", function() {deepEqual( Stem("scheit"), "scheit");});
test("scheitel -> scheitel", function() {deepEqual( Stem("scheitel"), "scheitel");});
test("scheiterhaufen -> scheiterhauf", function() {deepEqual( Stem("scheiterhaufen"), "scheiterhauf");});
test("scheiterte -> scheitert", function() {deepEqual( Stem("scheiterte"), "scheitert");});
test("schelach -> schelach", function() {deepEqual( Stem("schelach"), "schelach");});
test("schellenklang -> schellenklang", function() {deepEqual( Stem("schellenklang"), "schellenklang");});
test("schellenspiel -> schellenspiel", function() {deepEqual( Stem("schellenspiel"), "schellenspiel");});
test("schellte -> schellt", function() {deepEqual( Stem("schellte"), "schellt");});
test("schelm -> schelm", function() {deepEqual( Stem("schelm"), "schelm");});
test("schelme -> schelm", function() {deepEqual( Stem("schelme"), "schelm");});
test("schelmenkind -> schelmenkind", function() {deepEqual( Stem("schelmenkind"), "schelmenkind");});
test("schelmische -> schelmisch", function() {deepEqual( Stem("schelmische"), "schelmisch");});
test("scheloniten -> schelonit", function() {deepEqual( Stem("scheloniten"), "schelonit");});
test("schelten -> schelt", function() {deepEqual( Stem("schelten"), "schelt");});
test("scheltende -> scheltend", function() {deepEqual( Stem("scheltende"), "scheltend");});
test("scheltens -> schelt", function() {deepEqual( Stem("scheltens"), "schelt");});
test("schem -> schem", function() {deepEqual( Stem("schem"), "schem");});
test("schema -> schema", function() {deepEqual( Stem("schema"), "schema");});
test("schemata -> schemata", function() {deepEqual( Stem("schemata"), "schemata");});
test("schemate -> schemat", function() {deepEqual( Stem("schemate"), "schemat");});
test("schemel -> schemel", function() {deepEqual( Stem("schemel"), "schemel");});
test("schemelchen -> schemelch", function() {deepEqual( Stem("schemelchen"), "schemelch");});
test("schemen -> schem", function() {deepEqual( Stem("schemen"), "schem");});
test("schenk -> schenk", function() {deepEqual( Stem("schenk"), "schenk");});
test("schenke -> schenk", function() {deepEqual( Stem("schenke"), "schenk");});
test("schenkeläufer -> schenkelauf", function() {deepEqual( Stem("schenkeläufer"), "schenkelauf");});
test("schenkeln -> schenkeln", function() {deepEqual( Stem("schenkeln"), "schenkeln");});
test("schenken -> schenk", function() {deepEqual( Stem("schenken"), "schenk");});
test("schenkst -> schenk", function() {deepEqual( Stem("schenkst"), "schenk");});
test("schenkstuben -> schenkstub", function() {deepEqual( Stem("schenkstuben"), "schenkstub");});
test("schenkte -> schenkt", function() {deepEqual( Stem("schenkte"), "schenkt");});
test("schenkwirtes -> schenkwirt", function() {deepEqual( Stem("schenkwirtes"), "schenkwirt");});
test("schenkwirtschaft -> schenkwirtschaft", function() {deepEqual( Stem("schenkwirtschaft"), "schenkwirtschaft");});
test("scherben -> scherb", function() {deepEqual( Stem("scherben"), "scherb");});
test("schere -> scher", function() {deepEqual( Stem("schere"), "scher");});
test("scherz -> scherz", function() {deepEqual( Stem("scherz"), "scherz");});
test("scherze -> scherz", function() {deepEqual( Stem("scherze"), "scherz");});
test("scherzen -> scherz", function() {deepEqual( Stem("scherzen"), "scherz");});
test("scherzend -> scherzend", function() {deepEqual( Stem("scherzend"), "scherzend");});
test("scherzhafte -> scherzhaft", function() {deepEqual( Stem("scherzhafte"), "scherzhaft");});
test("scherzhafterweise -> scherzhafterweis", function() {deepEqual( Stem("scherzhafterweise"), "scherzhafterweis");});
test("scherzreden -> scherzred", function() {deepEqual( Stem("scherzreden"), "scherzred");});
test("scheth -> scheth", function() {deepEqual( Stem("scheth"), "scheth");});
test("scheths -> scheth", function() {deepEqual( Stem("scheths"), "scheth");});
test("scheu -> scheu", function() {deepEqual( Stem("scheu"), "scheu");});
test("scheuchen -> scheuch", function() {deepEqual( Stem("scheuchen"), "scheuch");});
test("scheuchte -> scheucht", function() {deepEqual( Stem("scheuchte"), "scheucht");});
test("scheue -> scheu", function() {deepEqual( Stem("scheue"), "scheu");});
test("scheuen -> scheu", function() {deepEqual( Stem("scheuen"), "scheu");});
test("scheuer -> scheu", function() {deepEqual( Stem("scheuer"), "scheu");});
test("scheuernden -> scheuernd", function() {deepEqual( Stem("scheuernden"), "scheuernd");});
test("scheuert -> scheuert", function() {deepEqual( Stem("scheuert"), "scheuert");});
test("scheuerte -> scheuert", function() {deepEqual( Stem("scheuerte"), "scheuert");});
test("scheuete -> scheuet", function() {deepEqual( Stem("scheuete"), "scheuet");});
test("scheunchen -> scheunch", function() {deepEqual( Stem("scheunchen"), "scheunch");});
test("scheune -> scheun", function() {deepEqual( Stem("scheune"), "scheun");});
test("scheunenböden -> scheunenbod", function() {deepEqual( Stem("scheunenböden"), "scheunenbod");});
test("scheunentor -> scheunentor", function() {deepEqual( Stem("scheunentor"), "scheunentor");});
test("scheusale -> scheusal", function() {deepEqual( Stem("scheusale"), "scheusal");});
test("scheusslich -> scheusslich", function() {deepEqual( Stem("scheusslich"), "scheusslich");});
test("scheusslichen -> scheusslich", function() {deepEqual( Stem("scheusslichen"), "scheusslich");});
test("scheußlichen -> scheusslich", function() {deepEqual( Stem("scheußlichen"), "scheusslich");});
test("scheut -> scheut", function() {deepEqual( Stem("scheut"), "scheut");});
test("scheuten -> scheut", function() {deepEqual( Stem("scheuten"), "scheut");});
test("schichors -> schichor", function() {deepEqual( Stem("schichors"), "schichor");});
test("schichten -> schicht", function() {deepEqual( Stem("schichten"), "schicht");});
test("schick -> schick", function() {deepEqual( Stem("schick"), "schick");});
test("schicken -> schick", function() {deepEqual( Stem("schicken"), "schick");});
test("schickende -> schickend", function() {deepEqual( Stem("schickende"), "schickend");});
test("schicklich -> schicklich", function() {deepEqual( Stem("schicklich"), "schicklich");});
test("schicklichen -> schicklich", function() {deepEqual( Stem("schicklichen"), "schicklich");});
test("schicklicher -> schicklich", function() {deepEqual( Stem("schicklicher"), "schicklich");});
test("schicksal -> schicksal", function() {deepEqual( Stem("schicksal"), "schicksal");});
test("schicksalhaft -> schicksalhaft", function() {deepEqual( Stem("schicksalhaft"), "schicksalhaft");});
test("schicksals -> schicksal", function() {deepEqual( Stem("schicksals"), "schicksal");});
test("schicksalsrufe -> schicksalsruf", function() {deepEqual( Stem("schicksalsrufe"), "schicksalsruf");});
test("schicksalswendungen -> schicksalswend", function() {deepEqual( Stem("schicksalswendungen"), "schicksalswend");});
test("schickt -> schickt", function() {deepEqual( Stem("schickt"), "schickt");});
test("schickte -> schickt", function() {deepEqual( Stem("schickte"), "schickt");});
test("schickten -> schickt", function() {deepEqual( Stem("schickten"), "schickt");});
test("schiebend -> schiebend", function() {deepEqual( Stem("schiebend"), "schiebend");});
test("schiebt -> schiebt", function() {deepEqual( Stem("schiebt"), "schiebt");});
test("schiechen -> schiech", function() {deepEqual( Stem("schiechen"), "schiech");});
test("schied -> schied", function() {deepEqual( Stem("schied"), "schied");});
test("schieden -> schied", function() {deepEqual( Stem("schieden"), "schied");});
test("schief -> schief", function() {deepEqual( Stem("schief"), "schief");});
test("schiefe -> schief", function() {deepEqual( Stem("schiefe"), "schief");});
test("schiefer -> schief", function() {deepEqual( Stem("schiefer"), "schief");});
test("schiefertafeln -> schiefertafeln", function() {deepEqual( Stem("schiefertafeln"), "schiefertafeln");});
test("schiefes -> schief", function() {deepEqual( Stem("schiefes"), "schief");});
test("schieläugigen -> schielaug", function() {deepEqual( Stem("schieläugigen"), "schielaug");});
test("schielen -> schiel", function() {deepEqual( Stem("schielen"), "schiel");});
test("schielten -> schielt", function() {deepEqual( Stem("schielten"), "schielt");});
test("schien -> schien", function() {deepEqual( Stem("schien"), "schien");});
test("schiene -> schien", function() {deepEqual( Stem("schiene"), "schien");});
test("schienen -> schien", function() {deepEqual( Stem("schienen"), "schien");});
test("schier -> schier", function() {deepEqual( Stem("schier"), "schier");});
test("schiess -> schiess", function() {deepEqual( Stem("schiess"), "schiess");});
test("schiessbaumwolle -> schiessbaumwoll", function() {deepEqual( Stem("schiessbaumwolle"), "schiessbaumwoll");});
test("schiessbaumwollpatrone -> schiessbaumwollpatron", function() {deepEqual( Stem("schiessbaumwollpatrone"), "schiessbaumwollpatron");});
test("schiessen -> schiess", function() {deepEqual( Stem("schiessen"), "schiess");});
test("schießen -> schiess", function() {deepEqual( Stem("schießen"), "schiess");});
test("schiessend -> schiessend", function() {deepEqual( Stem("schiessend"), "schiessend");});
test("schiessenden -> schiessend", function() {deepEqual( Stem("schiessenden"), "schiessend");});
test("schiessn -> schiessn", function() {deepEqual( Stem("schiessn"), "schiessn");});
test("schiessprügel -> schiessprugel", function() {deepEqual( Stem("schiessprügel"), "schiessprugel");});
test("schiesst -> schiesst", function() {deepEqual( Stem("schiesst"), "schiesst");});
test("schiff -> schiff", function() {deepEqual( Stem("schiff"), "schiff");});
test("schiffbaren -> schiffbar", function() {deepEqual( Stem("schiffbaren"), "schiffbar");});
test("schiffe -> schiff", function() {deepEqual( Stem("schiffe"), "schiff");});
test("schiffen -> schiff", function() {deepEqual( Stem("schiffen"), "schiff");});
test("schiffer -> schiff", function() {deepEqual( Stem("schiffer"), "schiff");});
test("schiffern -> schiff", function() {deepEqual( Stem("schiffern"), "schiff");});
test("schiffleute -> schiffleut", function() {deepEqual( Stem("schiffleute"), "schiffleut");});
test("schiffshauptmann -> schiffshauptmann", function() {deepEqual( Stem("schiffshauptmann"), "schiffshauptmann");});
test("schiffslände -> schiffsland", function() {deepEqual( Stem("schiffslände"), "schiffsland");});
test("schiffsleuten -> schiffsleut", function() {deepEqual( Stem("schiffsleuten"), "schiffsleut");});
test("schild -> schild", function() {deepEqual( Stem("schild"), "schild");});
test("schilde -> schild", function() {deepEqual( Stem("schilde"), "schild");});
test("schildern -> schild", function() {deepEqual( Stem("schildern"), "schild");});
test("schildert -> schildert", function() {deepEqual( Stem("schildert"), "schildert");});
test("schilderten -> schildert", function() {deepEqual( Stem("schilderten"), "schildert");});
test("schilderung -> schilder", function() {deepEqual( Stem("schilderung"), "schilder");});
test("schildkröte -> schildkrot", function() {deepEqual( Stem("schildkröte"), "schildkrot");});
test("schildkrötenbouillon -> schildkrotenbouillon", function() {deepEqual( Stem("schildkrötenbouillon"), "schildkrotenbouillon");});
test("schildkrötschalen -> schildkrotschal", function() {deepEqual( Stem("schildkrötschalen"), "schildkrotschal");});
test("schildpattgewölbe -> schildpattgewolb", function() {deepEqual( Stem("schildpattgewölbe"), "schildpattgewolb");});
test("schildpattkämme -> schildpattkamm", function() {deepEqual( Stem("schildpattkämme"), "schildpattkamm");});
test("schilf -> schilf", function() {deepEqual( Stem("schilf"), "schilf");});
test("schilfkeulen -> schilfkeul", function() {deepEqual( Stem("schilfkeulen"), "schilfkeul");});
test("schilfmeer -> schilfme", function() {deepEqual( Stem("schilfmeer"), "schilfme");});
test("schilfmeeres -> schilfme", function() {deepEqual( Stem("schilfmeeres"), "schilfme");});
test("schilfrohr -> schilfrohr", function() {deepEqual( Stem("schilfrohr"), "schilfrohr");});
test("schilfrohrs -> schilfrohr", function() {deepEqual( Stem("schilfrohrs"), "schilfrohr");});
test("schilfs -> schilf", function() {deepEqual( Stem("schilfs"), "schilf");});
test("schilfstöckchen -> schilfstockch", function() {deepEqual( Stem("schilfstöckchen"), "schilfstockch");});
test("schilfwiesen -> schilfwies", function() {deepEqual( Stem("schilfwiesen"), "schilfwies");});
test("schillernden -> schillernd", function() {deepEqual( Stem("schillernden"), "schillernd");});
test("schillers -> schill", function() {deepEqual( Stem("schillers"), "schill");});
test("schimeon -> schimeon", function() {deepEqual( Stem("schimeon"), "schimeon");});
test("schimeons -> schimeon", function() {deepEqual( Stem("schimeons"), "schimeon");});
test("schimmel -> schimmel", function() {deepEqual( Stem("schimmel"), "schimmel");});
test("schimmer -> schimm", function() {deepEqual( Stem("schimmer"), "schimm");});
test("schimmern -> schimm", function() {deepEqual( Stem("schimmern"), "schimm");});
test("schimmernd -> schimmernd", function() {deepEqual( Stem("schimmernd"), "schimmernd");});
test("schimmernde -> schimmernd", function() {deepEqual( Stem("schimmernde"), "schimmernd");});
test("schimmernden -> schimmernd", function() {deepEqual( Stem("schimmernden"), "schimmernd");});
test("schimmernder -> schimmernd", function() {deepEqual( Stem("schimmernder"), "schimmernd");});
test("schimmert -> schimmert", function() {deepEqual( Stem("schimmert"), "schimmert");});
test("schimmerte -> schimmert", function() {deepEqual( Stem("schimmerte"), "schimmert");});
test("schimmerten -> schimmert", function() {deepEqual( Stem("schimmerten"), "schimmert");});
test("schimpf -> schimpf", function() {deepEqual( Stem("schimpf"), "schimpf");});
test("schimpfen -> schimpf", function() {deepEqual( Stem("schimpfen"), "schimpf");});
test("schimpfendes -> schimpfend", function() {deepEqual( Stem("schimpfendes"), "schimpfend");});
test("schimpflichen -> schimpflich", function() {deepEqual( Stem("schimpflichen"), "schimpflich");});
test("schimpfworten -> schimpfwort", function() {deepEqual( Stem("schimpfworten"), "schimpfwort");});
test("schindanger -> schindang", function() {deepEqual( Stem("schindanger"), "schindang");});
test("schinde -> schind", function() {deepEqual( Stem("schinde"), "schind");});
test("schindeldach -> schindeldach", function() {deepEqual( Stem("schindeldach"), "schindeldach");});
test("schinden -> schind", function() {deepEqual( Stem("schinden"), "schind");});
test("schinken -> schink", function() {deepEqual( Stem("schinken"), "schink");});
test("schiphra -> schiphra", function() {deepEqual( Stem("schiphra"), "schiphra");});
test("schirm -> schirm", function() {deepEqual( Stem("schirm"), "schirm");});
test("schirren -> schirr", function() {deepEqual( Stem("schirren"), "schirr");});
test("schirrl -> schirrl", function() {deepEqual( Stem("schirrl"), "schirrl");});
test("schla -> schla", function() {deepEqual( Stem("schla"), "schla");});
test("schlacht -> schlacht", function() {deepEqual( Stem("schlacht"), "schlacht");});
test("schlachte -> schlacht", function() {deepEqual( Stem("schlachte"), "schlacht");});
test("schlachten -> schlacht", function() {deepEqual( Stem("schlachten"), "schlacht");});
test("schlachtheeren -> schlachthe", function() {deepEqual( Stem("schlachtheeren"), "schlachthe");});
test("schlachtopfer -> schlachtopf", function() {deepEqual( Stem("schlachtopfer"), "schlachtopf");});
test("schlachtopfern -> schlachtopf", function() {deepEqual( Stem("schlachtopfern"), "schlachtopf");});
test("schlachtung -> schlachtung", function() {deepEqual( Stem("schlachtung"), "schlachtung");});
test("schlaf -> schlaf", function() {deepEqual( Stem("schlaf"), "schlaf");});
test("schlafe -> schlaf", function() {deepEqual( Stem("schlafe"), "schlaf");});
test("schläfe -> schlaf", function() {deepEqual( Stem("schläfe"), "schlaf");});
test("schlafen -> schlaf", function() {deepEqual( Stem("schlafen"), "schlaf");});
test("schläfen -> schlaf", function() {deepEqual( Stem("schläfen"), "schlaf");});
test("schlafend -> schlafend", function() {deepEqual( Stem("schlafend"), "schlafend");});
test("schlafende -> schlafend", function() {deepEqual( Stem("schlafende"), "schlafend");});
test("schlafenden -> schlafend", function() {deepEqual( Stem("schlafenden"), "schlafend");});
test("schlafender -> schlafend", function() {deepEqual( Stem("schlafender"), "schlafend");});
test("schlafes -> schlaf", function() {deepEqual( Stem("schlafes"), "schlaf");});
test("schlaffen -> schlaff", function() {deepEqual( Stem("schlaffen"), "schlaff");});
test("schlafgefährten -> schlafgefahrt", function() {deepEqual( Stem("schlafgefährten"), "schlafgefahrt");});
test("schlafkammer -> schlafkamm", function() {deepEqual( Stem("schlafkammer"), "schlafkamm");});
test("schlafkammern -> schlafkamm", function() {deepEqual( Stem("schlafkammern"), "schlafkamm");});
test("schlafkappen -> schlafkapp", function() {deepEqual( Stem("schlafkappen"), "schlafkapp");});
test("schlaflied -> schlaflied", function() {deepEqual( Stem("schlaflied"), "schlaflied");});
test("schlaflose -> schlaflos", function() {deepEqual( Stem("schlaflose"), "schlaflos");});
test("schlafloser -> schlaflos", function() {deepEqual( Stem("schlafloser"), "schlaflos");});
test("schlaflust -> schlaflust", function() {deepEqual( Stem("schlaflust"), "schlaflust");});
test("schläfrig -> schlafrig", function() {deepEqual( Stem("schläfrig"), "schlafrig");});
test("schlafrock -> schlafrock", function() {deepEqual( Stem("schlafrock"), "schlafrock");});
test("schlafrockzipfel -> schlafrockzipfel", function() {deepEqual( Stem("schlafrockzipfel"), "schlafrockzipfel");});
test("schläfst -> schlaf", function() {deepEqual( Stem("schläfst"), "schlaf");});
test("schläft -> schlaft", function() {deepEqual( Stem("schläft"), "schlaft");});
test("schlaftrunken -> schlaftrunk", function() {deepEqual( Stem("schlaftrunken"), "schlaftrunk");});
test("schlafwandel -> schlafwandel", function() {deepEqual( Stem("schlafwandel"), "schlafwandel");});
test("schlafzimmer -> schlafzimm", function() {deepEqual( Stem("schlafzimmer"), "schlafzimm");});
test("schlag -> schlag", function() {deepEqual( Stem("schlag"), "schlag");});
test("schläg -> schlag", function() {deepEqual( Stem("schläg"), "schlag");});
test("schlage -> schlag", function() {deepEqual( Stem("schlage"), "schlag");});
test("schläge -> schlag", function() {deepEqual( Stem("schläge"), "schlag");});
test("schlagen -> schlag", function() {deepEqual( Stem("schlagen"), "schlag");});
test("schlägen -> schlag", function() {deepEqual( Stem("schlägen"), "schlag");});
test("schlagend -> schlagend", function() {deepEqual( Stem("schlagend"), "schlagend");});
test("schlager -> schlag", function() {deepEqual( Stem("schlager"), "schlag");});
test("schlages -> schlag", function() {deepEqual( Stem("schlages"), "schlag");});
test("schlaget -> schlaget", function() {deepEqual( Stem("schlaget"), "schlaget");});
test("schlagfertig -> schlagfert", function() {deepEqual( Stem("schlagfertig"), "schlagfert");});
test("schlagn -> schlagn", function() {deepEqual( Stem("schlagn"), "schlagn");});
test("schlagsahne -> schlagsahn", function() {deepEqual( Stem("schlagsahne"), "schlagsahn");});
test("schlagsahnenkegel -> schlagsahnenkegel", function() {deepEqual( Stem("schlagsahnenkegel"), "schlagsahnenkegel");});
test("schlagschatten -> schlagschatt", function() {deepEqual( Stem("schlagschatten"), "schlagschatt");});
test("schlägst -> schlag", function() {deepEqual( Stem("schlägst"), "schlag");});
test("schlägt -> schlagt", function() {deepEqual( Stem("schlägt"), "schlagt");});
test("schlang -> schlang", function() {deepEqual( Stem("schlang"), "schlang");});
test("schlange -> schlang", function() {deepEqual( Stem("schlange"), "schlang");});
test("schlängeln -> schlangeln", function() {deepEqual( Stem("schlängeln"), "schlangeln");});
test("schlängelte -> schlangelt", function() {deepEqual( Stem("schlängelte"), "schlangelt");});
test("schlangen -> schlang", function() {deepEqual( Stem("schlangen"), "schlang");});
test("schlangengifte -> schlangengift", function() {deepEqual( Stem("schlangengifte"), "schlangengift");});
test("schlangenstirn -> schlangenstirn", function() {deepEqual( Stem("schlangenstirn"), "schlangenstirn");});
test("schlänglein -> schlanglein", function() {deepEqual( Stem("schlänglein"), "schlanglein");});
test("schlank -> schlank", function() {deepEqual( Stem("schlank"), "schlank");});
test("schlankaufgerichtet -> schlankaufgerichtet", function() {deepEqual( Stem("schlankaufgerichtet"), "schlankaufgerichtet");});
test("schlanke -> schlank", function() {deepEqual( Stem("schlanke"), "schlank");});
test("schlankem -> schlank", function() {deepEqual( Stem("schlankem"), "schlank");});
test("schlanken -> schlank", function() {deepEqual( Stem("schlanken"), "schlank");});
test("schlanker -> schlank", function() {deepEqual( Stem("schlanker"), "schlank");});
test("schlankere -> schlank", function() {deepEqual( Stem("schlankere"), "schlank");});
test("schlankes -> schlank", function() {deepEqual( Stem("schlankes"), "schlank");});
test("schlankgewachsenes -> schlankgewachs", function() {deepEqual( Stem("schlankgewachsenes"), "schlankgewachs");});
test("schlankheit -> schlankheit", function() {deepEqual( Stem("schlankheit"), "schlankheit");});
test("schlappen -> schlapp", function() {deepEqual( Stem("schlappen"), "schlapp");});
test("schlappschuhen -> schlappschuh", function() {deepEqual( Stem("schlappschuhen"), "schlappschuh");});
test("schlau -> schlau", function() {deepEqual( Stem("schlau"), "schlau");});
test("schlauchboot -> schlauchboot", function() {deepEqual( Stem("schlauchboot"), "schlauchboot");});
test("schlaucherl -> schlaucherl", function() {deepEqual( Stem("schlaucherl"), "schlaucherl");});
test("schlaue -> schlau", function() {deepEqual( Stem("schlaue"), "schlau");});
test("schlauen -> schlau", function() {deepEqual( Stem("schlauen"), "schlau");});
test("schlauer -> schlau", function() {deepEqual( Stem("schlauer"), "schlau");});
test("schlaues -> schlau", function() {deepEqual( Stem("schlaues"), "schlau");});
test("schlauheit -> schlauheit", function() {deepEqual( Stem("schlauheit"), "schlauheit");});
test("schlauheiten -> schlauheit", function() {deepEqual( Stem("schlauheiten"), "schlauheit");});
test("schlecht -> schlecht", function() {deepEqual( Stem("schlecht"), "schlecht");});
test("schlechte -> schlecht", function() {deepEqual( Stem("schlechte"), "schlecht");});
test("schlechtem -> schlecht", function() {deepEqual( Stem("schlechtem"), "schlecht");});
test("schlechten -> schlecht", function() {deepEqual( Stem("schlechten"), "schlecht");});
test("schlechter -> schlecht", function() {deepEqual( Stem("schlechter"), "schlecht");});
test("schlechterdings -> schlechterding", function() {deepEqual( Stem("schlechterdings"), "schlechterding");});
test("schlechteren -> schlecht", function() {deepEqual( Stem("schlechteren"), "schlecht");});
test("schlechteres -> schlecht", function() {deepEqual( Stem("schlechteres"), "schlecht");});
test("schlechtes -> schlecht", function() {deepEqual( Stem("schlechtes"), "schlecht");});
test("schlechteste -> schlecht", function() {deepEqual( Stem("schlechteste"), "schlecht");});
test("schlechtesten -> schlecht", function() {deepEqual( Stem("schlechtesten"), "schlecht");});
test("schlechthin -> schlechthin", function() {deepEqual( Stem("schlechthin"), "schlechthin");});
test("schlechtigkeit -> schlechtig", function() {deepEqual( Stem("schlechtigkeit"), "schlechtig");});
test("schlechtigkeitsmesser -> schlechtigkeitsmess", function() {deepEqual( Stem("schlechtigkeitsmesser"), "schlechtigkeitsmess");});
test("schlechtweg -> schlechtweg", function() {deepEqual( Stem("schlechtweg"), "schlechtweg");});
test("schlecken -> schleck", function() {deepEqual( Stem("schlecken"), "schleck");});
test("schleckerfritze -> schleckerfritz", function() {deepEqual( Stem("schleckerfritze"), "schleckerfritz");});
test("schlegel -> schlegel", function() {deepEqual( Stem("schlegel"), "schlegel");});
test("schlegelschuss -> schlegelschuss", function() {deepEqual( Stem("schlegelschuss"), "schlegelschuss");});
test("schleiche -> schleich", function() {deepEqual( Stem("schleiche"), "schleich");});
test("schleichen -> schleich", function() {deepEqual( Stem("schleichen"), "schleich");});
test("schleichenden -> schleichend", function() {deepEqual( Stem("schleichenden"), "schleichend");});
test("schleicher -> schleich", function() {deepEqual( Stem("schleicher"), "schleich");});
test("schleichst -> schleich", function() {deepEqual( Stem("schleichst"), "schleich");});
test("schleicht -> schleicht", function() {deepEqual( Stem("schleicht"), "schleicht");});
test("schleier -> schleier", function() {deepEqual( Stem("schleier"), "schleier");});
test("schleifen -> schleif", function() {deepEqual( Stem("schleifen"), "schleif");});
test("schleifte -> schleift", function() {deepEqual( Stem("schleifte"), "schleift");});
test("schleiften -> schleift", function() {deepEqual( Stem("schleiften"), "schleift");});
test("schlemmen -> schlemm", function() {deepEqual( Stem("schlemmen"), "schlemm");});
test("schlemmer -> schlemm", function() {deepEqual( Stem("schlemmer"), "schlemm");});
test("schlendernd -> schlendernd", function() {deepEqual( Stem("schlendernd"), "schlendernd");});
test("schlenderte -> schlendert", function() {deepEqual( Stem("schlenderte"), "schlendert");});
test("schlenkerte -> schlenkert", function() {deepEqual( Stem("schlenkerte"), "schlenkert");});
test("schleppe -> schlepp", function() {deepEqual( Stem("schleppe"), "schlepp");});
test("schleppen -> schlepp", function() {deepEqual( Stem("schleppen"), "schlepp");});
test("schleppenden -> schleppend", function() {deepEqual( Stem("schleppenden"), "schleppend");});
test("schlepptau -> schlepptau", function() {deepEqual( Stem("schlepptau"), "schlepptau");});
test("schleppte -> schleppt", function() {deepEqual( Stem("schleppte"), "schleppt");});
test("schleppten -> schleppt", function() {deepEqual( Stem("schleppten"), "schleppt");});
test("schlesier -> schlesi", function() {deepEqual( Stem("schlesier"), "schlesi");});
test("schleswig -> schleswig", function() {deepEqual( Stem("schleswig"), "schleswig");});
test("schleuder -> schleud", function() {deepEqual( Stem("schleuder"), "schleud");});
test("schleudern -> schleud", function() {deepEqual( Stem("schleudern"), "schleud");});
test("schleuderte -> schleudert", function() {deepEqual( Stem("schleuderte"), "schleudert");});
test("schleunig -> schleunig", function() {deepEqual( Stem("schleunig"), "schleunig");});
test("schleunigst -> schleunig", function() {deepEqual( Stem("schleunigst"), "schleunig");});
test("schleuse -> schleus", function() {deepEqual( Stem("schleuse"), "schleus");});
test("schleusen -> schleus", function() {deepEqual( Stem("schleusen"), "schleus");});
test("schlich -> schlich", function() {deepEqual( Stem("schlich"), "schlich");});
test("schlichen -> schlich", function() {deepEqual( Stem("schlichen"), "schlich");});
test("schlicht -> schlicht", function() {deepEqual( Stem("schlicht"), "schlicht");});
test("schlichte -> schlicht", function() {deepEqual( Stem("schlichte"), "schlicht");});
test("schlichten -> schlicht", function() {deepEqual( Stem("schlichten"), "schlicht");});
test("schlichtesten -> schlicht", function() {deepEqual( Stem("schlichtesten"), "schlicht");});
test("schlichtet -> schlichtet", function() {deepEqual( Stem("schlichtet"), "schlichtet");});
test("schlickversteckens -> schlickversteck", function() {deepEqual( Stem("schlickversteckens"), "schlickversteck");});
test("schlief -> schlief", function() {deepEqual( Stem("schlief"), "schlief");});
test("schliefen -> schlief", function() {deepEqual( Stem("schliefen"), "schlief");});
test("schliess -> schliess", function() {deepEqual( Stem("schliess"), "schliess");});
test("schließ -> schliess", function() {deepEqual( Stem("schließ"), "schliess");});
test("schliesse -> schliess", function() {deepEqual( Stem("schliesse"), "schliess");});
test("schliessen -> schliess", function() {deepEqual( Stem("schliessen"), "schliess");});
test("schließen -> schliess", function() {deepEqual( Stem("schließen"), "schliess");});
test("schliessend -> schliessend", function() {deepEqual( Stem("schliessend"), "schliessend");});
test("schliesslich -> schliesslich", function() {deepEqual( Stem("schliesslich"), "schliesslich");});
test("schließlich -> schliesslich", function() {deepEqual( Stem("schließlich"), "schliesslich");});
test("schliesslichen -> schliesslich", function() {deepEqual( Stem("schliesslichen"), "schliesslich");});
test("schließlichen -> schliesslich", function() {deepEqual( Stem("schließlichen"), "schliesslich");});
test("schliesst -> schliesst", function() {deepEqual( Stem("schliesst"), "schliesst");});
test("schließt -> schliesst", function() {deepEqual( Stem("schließt"), "schliesst");});
test("schlimm -> schlimm", function() {deepEqual( Stem("schlimm"), "schlimm");});
test("schlimme -> schlimm", function() {deepEqual( Stem("schlimme"), "schlimm");});
test("schlimmen -> schlimm", function() {deepEqual( Stem("schlimmen"), "schlimm");});
test("schlimmer -> schlimm", function() {deepEqual( Stem("schlimmer"), "schlimm");});
test("schlimmere -> schlimm", function() {deepEqual( Stem("schlimmere"), "schlimm");});
test("schlimmeres -> schlimm", function() {deepEqual( Stem("schlimmeres"), "schlimm");});
test("schlimmern -> schlimm", function() {deepEqual( Stem("schlimmern"), "schlimm");});
test("schlimmes -> schlimm", function() {deepEqual( Stem("schlimmes"), "schlimm");});
test("schlimmste -> schlimm", function() {deepEqual( Stem("schlimmste"), "schlimm");});
test("schlimmsten -> schlimm", function() {deepEqual( Stem("schlimmsten"), "schlimm");});
test("schlinge -> schling", function() {deepEqual( Stem("schlinge"), "schling");});
test("schlingen -> schling", function() {deepEqual( Stem("schlingen"), "schling");});
test("schlingt -> schlingt", function() {deepEqual( Stem("schlingt"), "schlingt");});
test("schlitten -> schlitt", function() {deepEqual( Stem("schlitten"), "schlitt");});
test("schlittenbahn -> schlittenbahn", function() {deepEqual( Stem("schlittenbahn"), "schlittenbahn");});
test("schlittenfahrt -> schlittenfahrt", function() {deepEqual( Stem("schlittenfahrt"), "schlittenfahrt");});
test("schlittens -> schlitt", function() {deepEqual( Stem("schlittens"), "schlitt");});
test("schlittenzierat -> schlittenzierat", function() {deepEqual( Stem("schlittenzierat"), "schlittenzierat");});
test("schlittenzug -> schlittenzug", function() {deepEqual( Stem("schlittenzug"), "schlittenzug");});
test("schlohweissseidenen -> schlohweissseid", function() {deepEqual( Stem("schlohweissseidenen"), "schlohweissseid");});
test("schlohweißseidenen -> schlohweissseid", function() {deepEqual( Stem("schlohweißseidenen"), "schlohweissseid");});
test("schloss -> schloss", function() {deepEqual( Stem("schloss"), "schloss");});
test("schloß -> schloss", function() {deepEqual( Stem("schloß"), "schloss");});
test("schlosse -> schloss", function() {deepEqual( Stem("schlosse"), "schloss");});
test("schlossen -> schloss", function() {deepEqual( Stem("schlossen"), "schloss");});
test("schlösser -> schloss", function() {deepEqual( Stem("schlösser"), "schloss");});
test("schlosses -> schloss", function() {deepEqual( Stem("schlosses"), "schloss");});
test("schlossgesellschaft -> schlossgesellschaft", function() {deepEqual( Stem("schlossgesellschaft"), "schlossgesellschaft");});
test("schloßgesellschaft -> schlossgesellschaft", function() {deepEqual( Stem("schloßgesellschaft"), "schlossgesellschaft");});
test("schlosshof -> schlosshof", function() {deepEqual( Stem("schlosshof"), "schlosshof");});
test("schloßhof -> schlosshof", function() {deepEqual( Stem("schloßhof"), "schlosshof");});
test("schlossstall -> schlossstall", function() {deepEqual( Stem("schlossstall"), "schlossstall");});
test("schloßstall -> schlossstall", function() {deepEqual( Stem("schloßstall"), "schlossstall");});
test("schlossstil -> schlossstil", function() {deepEqual( Stem("schlossstil"), "schlossstil");});
test("schloßstil -> schlossstil", function() {deepEqual( Stem("schloßstil"), "schlossstil");});
test("schlosstor -> schlosstor", function() {deepEqual( Stem("schlosstor"), "schlosstor");});
test("schloßtor -> schlosstor", function() {deepEqual( Stem("schloßtor"), "schlosstor");});
test("schlottrig -> schlottrig", function() {deepEqual( Stem("schlottrig"), "schlottrig");});
test("schlottrige -> schlottrig", function() {deepEqual( Stem("schlottrige"), "schlottrig");});
test("schlucht -> schlucht", function() {deepEqual( Stem("schlucht"), "schlucht");});
test("schluchten -> schlucht", function() {deepEqual( Stem("schluchten"), "schlucht");});
test("schluchzend -> schluchzend", function() {deepEqual( Stem("schluchzend"), "schluchzend");});
test("schluchzte -> schluchzt", function() {deepEqual( Stem("schluchzte"), "schluchzt");});
test("schluchzten -> schluchzt", function() {deepEqual( Stem("schluchzten"), "schluchzt");});
test("schluck -> schluck", function() {deepEqual( Stem("schluck"), "schluck");});
test("schluckend -> schluckend", function() {deepEqual( Stem("schluckend"), "schluckend");});
test("schlücklein -> schlucklein", function() {deepEqual( Stem("schlücklein"), "schlucklein");});
test("schluckte -> schluckt", function() {deepEqual( Stem("schluckte"), "schluckt");});
test("schlug -> schlug", function() {deepEqual( Stem("schlug"), "schlug");});
test("schlugen -> schlug", function() {deepEqual( Stem("schlugen"), "schlug");});
test("schlummerlosen -> schlummerlos", function() {deepEqual( Stem("schlummerlosen"), "schlummerlos");});
test("schlummertrunkenen -> schlummertrunk", function() {deepEqual( Stem("schlummertrunkenen"), "schlummertrunk");});
test("schlund -> schlund", function() {deepEqual( Stem("schlund"), "schlund");});
test("schlüpfen -> schlupf", function() {deepEqual( Stem("schlüpfen"), "schlupf");});
test("schlüpferig -> schlupfer", function() {deepEqual( Stem("schlüpferig"), "schlupfer");});
test("schlüpft -> schlupft", function() {deepEqual( Stem("schlüpft"), "schlupft");});
test("schlüpfte -> schlupft", function() {deepEqual( Stem("schlüpfte"), "schlupft");});
test("schlüpften -> schlupft", function() {deepEqual( Stem("schlüpften"), "schlupft");});
test("schlupfwinkel -> schlupfwinkel", function() {deepEqual( Stem("schlupfwinkel"), "schlupfwinkel");});
test("schlupfwinkeln -> schlupfwinkeln", function() {deepEqual( Stem("schlupfwinkeln"), "schlupfwinkeln");});
test("schlurfen -> schlurf", function() {deepEqual( Stem("schlurfen"), "schlurf");});
test("schlürft -> schlurft", function() {deepEqual( Stem("schlürft"), "schlurft");});
test("schluss -> schluss", function() {deepEqual( Stem("schluss"), "schluss");});
test("schluß -> schluss", function() {deepEqual( Stem("schluß"), "schluss");});
test("schlussabrechnung -> schlussabrechn", function() {deepEqual( Stem("schlussabrechnung"), "schlussabrechn");});
test("schlußabrechnung -> schlussabrechn", function() {deepEqual( Stem("schlußabrechnung"), "schlussabrechn");});
test("schlusse -> schluss", function() {deepEqual( Stem("schlusse"), "schluss");});
test("schlüsse -> schluss", function() {deepEqual( Stem("schlüsse"), "schluss");});
test("schlüssel -> schlussel", function() {deepEqual( Stem("schlüssel"), "schlussel");});
test("schlüsselblumen -> schlusselblum", function() {deepEqual( Stem("schlüsselblumen"), "schlusselblum");});
test("schlüsselloch -> schlusselloch", function() {deepEqual( Stem("schlüsselloch"), "schlusselloch");});
test("schlüssen -> schluss", function() {deepEqual( Stem("schlüssen"), "schluss");});
test("schlusses -> schluss", function() {deepEqual( Stem("schlusses"), "schluss");});
test("schlussfolgerungen -> schlussfolger", function() {deepEqual( Stem("schlussfolgerungen"), "schlussfolger");});
test("schlußfolgerungen -> schlussfolger", function() {deepEqual( Stem("schlußfolgerungen"), "schlussfolger");});
test("schlussform -> schlussform", function() {deepEqual( Stem("schlussform"), "schlussform");});
test("schlußform -> schlussform", function() {deepEqual( Stem("schlußform"), "schlussform");});
test("schlusshandlung -> schlusshandl", function() {deepEqual( Stem("schlusshandlung"), "schlusshandl");});
test("schlüssig -> schlussig", function() {deepEqual( Stem("schlüssig"), "schlussig");});
test("schlusspunkt -> schlusspunkt", function() {deepEqual( Stem("schlusspunkt"), "schlusspunkt");});
test("schlußpunkt -> schlusspunkt", function() {deepEqual( Stem("schlußpunkt"), "schlusspunkt");});
test("schlusspunkte -> schlusspunkt", function() {deepEqual( Stem("schlusspunkte"), "schlusspunkt");});
test("schlußpunkte -> schlusspunkt", function() {deepEqual( Stem("schlußpunkte"), "schlusspunkt");});
test("schlusssatze -> schlusssatz", function() {deepEqual( Stem("schlusssatze"), "schlusssatz");});
test("schmach -> schmach", function() {deepEqual( Stem("schmach"), "schmach");});
test("schmachten -> schmacht", function() {deepEqual( Stem("schmachten"), "schmacht");});
test("schmachtend -> schmachtend", function() {deepEqual( Stem("schmachtend"), "schmachtend");});
test("schmachtet -> schmachtet", function() {deepEqual( Stem("schmachtet"), "schmachtet");});
test("schmachtete -> schmachtet", function() {deepEqual( Stem("schmachtete"), "schmachtet");});
test("schmächtig -> schmachtig", function() {deepEqual( Stem("schmächtig"), "schmachtig");});
test("schmächtige -> schmachtig", function() {deepEqual( Stem("schmächtige"), "schmachtig");});
test("schmäher -> schmah", function() {deepEqual( Stem("schmäher"), "schmah");});
test("schmählich -> schmahlich", function() {deepEqual( Stem("schmählich"), "schmahlich");});
test("schmählichste -> schmahlich", function() {deepEqual( Stem("schmählichste"), "schmahlich");});
test("schmal -> schmal", function() {deepEqual( Stem("schmal"), "schmal");});
test("schmale -> schmal", function() {deepEqual( Stem("schmale"), "schmal");});
test("schmalem -> schmal", function() {deepEqual( Stem("schmalem"), "schmal");});
test("schmalen -> schmal", function() {deepEqual( Stem("schmalen"), "schmal");});
test("schmaler -> schmal", function() {deepEqual( Stem("schmaler"), "schmal");});
test("schmäler -> schmal", function() {deepEqual( Stem("schmäler"), "schmal");});
test("schmales -> schmal", function() {deepEqual( Stem("schmales"), "schmal");});
test("schmatzend -> schmatzend", function() {deepEqual( Stem("schmatzend"), "schmatzend");});
test("schmatzte -> schmatzt", function() {deepEqual( Stem("schmatzte"), "schmatzt");});
test("schmauchend -> schmauchend", function() {deepEqual( Stem("schmauchend"), "schmauchend");});
test("schmaucht -> schmaucht", function() {deepEqual( Stem("schmaucht"), "schmaucht");});
test("schmauchte -> schmaucht", function() {deepEqual( Stem("schmauchte"), "schmaucht");});
test("schmeckt -> schmeckt", function() {deepEqual( Stem("schmeckt"), "schmeckt");});
test("schmeckte -> schmeckt", function() {deepEqual( Stem("schmeckte"), "schmeckt");});
test("schmeckten -> schmeckt", function() {deepEqual( Stem("schmeckten"), "schmeckt");});
test("schmeichel -> schmeichel", function() {deepEqual( Stem("schmeichel"), "schmeichel");});
test("schmeichelei -> schmeichelei", function() {deepEqual( Stem("schmeichelei"), "schmeichelei");});
test("schmeichelhaft -> schmeichelhaft", function() {deepEqual( Stem("schmeichelhaft"), "schmeichelhaft");});
test("schmeichelhafter -> schmeichelhaft", function() {deepEqual( Stem("schmeichelhafter"), "schmeichelhaft");});
test("schmeicheln -> schmeicheln", function() {deepEqual( Stem("schmeicheln"), "schmeicheln");});
test("schmeichelnder -> schmeichelnd", function() {deepEqual( Stem("schmeichelnder"), "schmeichelnd");});
test("schmeichelt -> schmeichelt", function() {deepEqual( Stem("schmeichelt"), "schmeichelt");});
test("schmeichelte -> schmeichelt", function() {deepEqual( Stem("schmeichelte"), "schmeichelt");});
test("schmeichelten -> schmeichelt", function() {deepEqual( Stem("schmeichelten"), "schmeichelt");});
test("schmeißt -> schmeisst", function() {deepEqual( Stem("schmeißt"), "schmeisst");});
test("schmelzend -> schmelzend", function() {deepEqual( Stem("schmelzend"), "schmelzend");});
test("schmelzende -> schmelzend", function() {deepEqual( Stem("schmelzende"), "schmelzend");});
test("schmelzer -> schmelz", function() {deepEqual( Stem("schmelzer"), "schmelz");});
test("schmelzers -> schmelz", function() {deepEqual( Stem("schmelzers"), "schmelz");});
test("schmelzt -> schmelzt", function() {deepEqual( Stem("schmelzt"), "schmelzt");});
test("schmer -> schmer", function() {deepEqual( Stem("schmer"), "schmer");});
test("schmerz -> schmerz", function() {deepEqual( Stem("schmerz"), "schmerz");});
test("schmerze -> schmerz", function() {deepEqual( Stem("schmerze"), "schmerz");});
test("schmerzen -> schmerz", function() {deepEqual( Stem("schmerzen"), "schmerz");});
test("schmerzens -> schmerz", function() {deepEqual( Stem("schmerzens"), "schmerz");});
test("schmerzes -> schmerz", function() {deepEqual( Stem("schmerzes"), "schmerz");});
test("schmerzhaft -> schmerzhaft", function() {deepEqual( Stem("schmerzhaft"), "schmerzhaft");});
test("schmerzhaften -> schmerzhaft", function() {deepEqual( Stem("schmerzhaften"), "schmerzhaft");});
test("schmerzhafter -> schmerzhaft", function() {deepEqual( Stem("schmerzhafter"), "schmerzhaft");});
test("schmerzhaftesten -> schmerzhaft", function() {deepEqual( Stem("schmerzhaftesten"), "schmerzhaft");});
test("schmerzlich -> schmerzlich", function() {deepEqual( Stem("schmerzlich"), "schmerzlich");});
test("schmerzlichen -> schmerzlich", function() {deepEqual( Stem("schmerzlichen"), "schmerzlich");});
test("schmerzlicher -> schmerzlich", function() {deepEqual( Stem("schmerzlicher"), "schmerzlich");});
test("schmerzlos -> schmerzlos", function() {deepEqual( Stem("schmerzlos"), "schmerzlos");});
test("schmerzlose -> schmerzlos", function() {deepEqual( Stem("schmerzlose"), "schmerzlos");});
test("schmerzt -> schmerzt", function() {deepEqual( Stem("schmerzt"), "schmerzt");});
test("schmerzte -> schmerzt", function() {deepEqual( Stem("schmerzte"), "schmerzt");});
test("schmerzten -> schmerzt", function() {deepEqual( Stem("schmerzten"), "schmerzt");});
test("schmerzvollen -> schmerzvoll", function() {deepEqual( Stem("schmerzvollen"), "schmerzvoll");});
test("schmetterlinge -> schmetterling", function() {deepEqual( Stem("schmetterlinge"), "schmetterling");});
test("schmetternde -> schmetternd", function() {deepEqual( Stem("schmetternde"), "schmetternd");});
test("schmetternden -> schmetternd", function() {deepEqual( Stem("schmetternden"), "schmetternd");});
test("schmetterten -> schmettert", function() {deepEqual( Stem("schmetterten"), "schmettert");});
test("schmid -> schmid", function() {deepEqual( Stem("schmid"), "schmid");});
test("schmied -> schmied", function() {deepEqual( Stem("schmied"), "schmied");});
test("schmiedeberg -> schmiedeberg", function() {deepEqual( Stem("schmiedeberg"), "schmiedeberg");});
test("schmiegsam -> schmiegsam", function() {deepEqual( Stem("schmiegsam"), "schmiegsam");});
test("schmiegt -> schmiegt", function() {deepEqual( Stem("schmiegt"), "schmiegt");});
test("schmiegte -> schmiegt", function() {deepEqual( Stem("schmiegte"), "schmiegt");});
test("schmiegten -> schmiegt", function() {deepEqual( Stem("schmiegten"), "schmiegt");});
test("schmierseife -> schmierseif", function() {deepEqual( Stem("schmierseife"), "schmierseif");});
test("schmierte -> schmiert", function() {deepEqual( Stem("schmierte"), "schmiert");});
test("schmirgel -> schmirgel", function() {deepEqual( Stem("schmirgel"), "schmirgel");});
test("schmolle -> schmoll", function() {deepEqual( Stem("schmolle"), "schmoll");});
test("schmollen -> schmoll", function() {deepEqual( Stem("schmollen"), "schmoll");});
test("schmollend -> schmollend", function() {deepEqual( Stem("schmollend"), "schmollend");});
test("schmollende -> schmollend", function() {deepEqual( Stem("schmollende"), "schmollend");});
test("schmollenden -> schmollend", function() {deepEqual( Stem("schmollenden"), "schmollend");});
test("schmollendes -> schmollend", function() {deepEqual( Stem("schmollendes"), "schmollend");});
test("schmollens -> schmoll", function() {deepEqual( Stem("schmollens"), "schmoll");});
test("schmoller -> schmoll", function() {deepEqual( Stem("schmoller"), "schmoll");});
test("schmollerei -> schmollerei", function() {deepEqual( Stem("schmollerei"), "schmollerei");});
test("schmollkunst -> schmollkun", function() {deepEqual( Stem("schmollkunst"), "schmollkun");});
test("schmollte -> schmollt", function() {deepEqual( Stem("schmollte"), "schmollt");});
test("schmollwesen -> schmollwes", function() {deepEqual( Stem("schmollwesen"), "schmollwes");});
test("schmolz -> schmolz", function() {deepEqual( Stem("schmolz"), "schmolz");});
test("schmuck -> schmuck", function() {deepEqual( Stem("schmuck"), "schmuck");});
test("schmucke -> schmuck", function() {deepEqual( Stem("schmucke"), "schmuck");});
test("schmucken -> schmuck", function() {deepEqual( Stem("schmucken"), "schmuck");});
test("schmücken -> schmuck", function() {deepEqual( Stem("schmücken"), "schmuck");});
test("schmucker -> schmuck", function() {deepEqual( Stem("schmucker"), "schmuck");});
test("schmuckes -> schmuck", function() {deepEqual( Stem("schmuckes"), "schmuck");});
test("schmuckkämme -> schmuckkamm", function() {deepEqual( Stem("schmuckkämme"), "schmuckkamm");});
test("schmucks -> schmuck", function() {deepEqual( Stem("schmucks"), "schmuck");});
test("schmückte -> schmuckt", function() {deepEqual( Stem("schmückte"), "schmuckt");});
test("schmunzeln -> schmunzeln", function() {deepEqual( Stem("schmunzeln"), "schmunzeln");});
test("schmunzelnd -> schmunzelnd", function() {deepEqual( Stem("schmunzelnd"), "schmunzelnd");});
test("schmunzelte -> schmunzelt", function() {deepEqual( Stem("schmunzelte"), "schmunzelt");});
test("schmutz -> schmutz", function() {deepEqual( Stem("schmutz"), "schmutz");});
test("schmutzig -> schmutzig", function() {deepEqual( Stem("schmutzig"), "schmutzig");});
test("schmutzige -> schmutzig", function() {deepEqual( Stem("schmutzige"), "schmutzig");});
test("schmutzigem -> schmutzig", function() {deepEqual( Stem("schmutzigem"), "schmutzig");});
test("schmutzigen -> schmutzig", function() {deepEqual( Stem("schmutzigen"), "schmutzig");});
test("schmutziges -> schmutzig", function() {deepEqual( Stem("schmutziges"), "schmutzig");});
test("schnäbel -> schnabel", function() {deepEqual( Stem("schnäbel"), "schnabel");});
test("schnäbelchen -> schnabelch", function() {deepEqual( Stem("schnäbelchen"), "schnabelch");});
test("schnabulieren -> schnabuli", function() {deepEqual( Stem("schnabulieren"), "schnabuli");});
test("schnabulierte -> schnabuliert", function() {deepEqual( Stem("schnabulierte"), "schnabuliert");});
test("schnallen -> schnall", function() {deepEqual( Stem("schnallen"), "schnall");});
test("schnallte -> schnallt", function() {deepEqual( Stem("schnallte"), "schnallt");});
test("schnalzenden -> schnalzend", function() {deepEqual( Stem("schnalzenden"), "schnalzend");});
test("schnalzte -> schnalzt", function() {deepEqual( Stem("schnalzte"), "schnalzt");});
test("schnappen -> schnapp", function() {deepEqual( Stem("schnappen"), "schnapp");});
test("schnappende -> schnappend", function() {deepEqual( Stem("schnappende"), "schnappend");});
test("schnappte -> schnappt", function() {deepEqual( Stem("schnappte"), "schnappt");});
test("schnappten -> schnappt", function() {deepEqual( Stem("schnappten"), "schnappt");});
test("schnaps -> schnaps", function() {deepEqual( Stem("schnaps"), "schnaps");});
test("schnäpschen -> schnapsch", function() {deepEqual( Stem("schnäpschen"), "schnapsch");});
test("schnäpse -> schnaps", function() {deepEqual( Stem("schnäpse"), "schnaps");});
test("schnarrte -> schnarrt", function() {deepEqual( Stem("schnarrte"), "schnarrt");});
test("schnaubte -> schnaubt", function() {deepEqual( Stem("schnaubte"), "schnaubt");});
test("schnaubten -> schnaubt", function() {deepEqual( Stem("schnaubten"), "schnaubt");});
test("schnaufen -> schnauf", function() {deepEqual( Stem("schnaufen"), "schnauf");});
test("schnaufend -> schnaufend", function() {deepEqual( Stem("schnaufend"), "schnaufend");});
test("schnaufender -> schnaufend", function() {deepEqual( Stem("schnaufender"), "schnaufend");});
test("schnaufte -> schnauft", function() {deepEqual( Stem("schnaufte"), "schnauft");});
test("schnauze -> schnauz", function() {deepEqual( Stem("schnauze"), "schnauz");});
test("schnäuzer -> schnauz", function() {deepEqual( Stem("schnäuzer"), "schnauz");});
test("schnauzte -> schnauzt", function() {deepEqual( Stem("schnauzte"), "schnauzt");});
test("schnecken -> schneck", function() {deepEqual( Stem("schnecken"), "schneck");});
test("schnee -> schnee", function() {deepEqual( Stem("schnee"), "schnee");});
test("schneebällchen -> schneeballch", function() {deepEqual( Stem("schneebällchen"), "schneeballch");});
test("schneeberge -> schneeberg", function() {deepEqual( Stem("schneeberge"), "schneeberg");});
test("schneeflocken -> schneeflock", function() {deepEqual( Stem("schneeflocken"), "schneeflock");});
test("schneegeschichten -> schneegeschicht", function() {deepEqual( Stem("schneegeschichten"), "schneegeschicht");});
test("schneegestöber -> schneegestob", function() {deepEqual( Stem("schneegestöber"), "schneegestob");});
test("schneegestöbers -> schneegestob", function() {deepEqual( Stem("schneegestöbers"), "schneegestob");});
test("schneeglanz -> schneeglanz", function() {deepEqual( Stem("schneeglanz"), "schneeglanz");});
test("schneegrube -> schneegrub", function() {deepEqual( Stem("schneegrube"), "schneegrub");});
test("schneegrubenwand -> schneegrubenwand", function() {deepEqual( Stem("schneegrubenwand"), "schneegrubenwand");});
test("schneehaarige -> schneehaar", function() {deepEqual( Stem("schneehaarige"), "schneehaar");});
test("schneeige -> schneeig", function() {deepEqual( Stem("schneeige"), "schneeig");});
test("schneeiges -> schneeig", function() {deepEqual( Stem("schneeiges"), "schneeig");});
test("schneeliedem -> schneelied", function() {deepEqual( Stem("schneeliedem"), "schneelied");});
test("schneelieder -> schneelied", function() {deepEqual( Stem("schneelieder"), "schneelied");});
test("schneemeer -> schneeme", function() {deepEqual( Stem("schneemeer"), "schneeme");});
test("schneesendungen -> schneesend", function() {deepEqual( Stem("schneesendungen"), "schneesend");});
test("schneeweiss -> schneeweiss", function() {deepEqual( Stem("schneeweiss"), "schneeweiss");});
test("schneeweisse -> schneeweiss", function() {deepEqual( Stem("schneeweisse"), "schneeweiss");});
test("schneeweissem -> schneeweiss", function() {deepEqual( Stem("schneeweissem"), "schneeweiss");});
test("schneeweissen -> schneeweiss", function() {deepEqual( Stem("schneeweissen"), "schneeweiss");});
test("schneeweißen -> schneeweiss", function() {deepEqual( Stem("schneeweißen"), "schneeweiss");});
test("schneeweisser -> schneeweiss", function() {deepEqual( Stem("schneeweisser"), "schneeweiss");});
test("schneeweisses -> schneeweiss", function() {deepEqual( Stem("schneeweisses"), "schneeweiss");});
test("schneide -> schneid", function() {deepEqual( Stem("schneide"), "schneid");});
test("schneiden -> schneid", function() {deepEqual( Stem("schneiden"), "schneid");});
test("schneidend -> schneidend", function() {deepEqual( Stem("schneidend"), "schneidend");});
test("schneidenden -> schneidend", function() {deepEqual( Stem("schneidenden"), "schneidend");});
test("schneider -> schneid", function() {deepEqual( Stem("schneider"), "schneid");});
test("schneiderberufe -> schneiderberuf", function() {deepEqual( Stem("schneiderberufe"), "schneiderberuf");});
test("schneiderblütchen -> schneiderblutch", function() {deepEqual( Stem("schneiderblütchen"), "schneiderblutch");});
test("schneiderfestzug -> schneiderfestzug", function() {deepEqual( Stem("schneiderfestzug"), "schneiderfestzug");});
test("schneidergesellen -> schneidergesell", function() {deepEqual( Stem("schneidergesellen"), "schneidergesell");});
test("schneidergruppen -> schneidergrupp", function() {deepEqual( Stem("schneidergruppen"), "schneidergrupp");});
test("schneiderlein -> schneiderlein", function() {deepEqual( Stem("schneiderlein"), "schneiderlein");});
test("schneidermässig -> schneidermass", function() {deepEqual( Stem("schneidermässig"), "schneidermass");});
test("schneidermeister -> schneidermeist", function() {deepEqual( Stem("schneidermeister"), "schneidermeist");});
test("schneidermeisters -> schneidermeist", function() {deepEqual( Stem("schneidermeisters"), "schneidermeist");});
test("schneiders -> schneid", function() {deepEqual( Stem("schneiders"), "schneid");});
test("schneidersleute -> schneidersleut", function() {deepEqual( Stem("schneidersleute"), "schneidersleut");});
test("schneiderwelt -> schneiderwelt", function() {deepEqual( Stem("schneiderwelt"), "schneiderwelt");});
test("schneiderwesen -> schneiderwes", function() {deepEqual( Stem("schneiderwesen"), "schneiderwes");});
test("schneidest -> schneid", function() {deepEqual( Stem("schneidest"), "schneid");});
test("schneidet -> schneidet", function() {deepEqual( Stem("schneidet"), "schneidet");});
test("schneidigste -> schneidig", function() {deepEqual( Stem("schneidigste"), "schneidig");});
test("schneien -> schneien", function() {deepEqual( Stem("schneien"), "schneien");});
test("schneit -> schneit", function() {deepEqual( Stem("schneit"), "schneit");});
test("schneite -> schneit", function() {deepEqual( Stem("schneite"), "schneit");});
test("schnell -> schnell", function() {deepEqual( Stem("schnell"), "schnell");});
test("schnelläufer -> schnellauf", function() {deepEqual( Stem("schnelläufer"), "schnellauf");});
test("schnelle -> schnell", function() {deepEqual( Stem("schnelle"), "schnell");});
test("schnellen -> schnell", function() {deepEqual( Stem("schnellen"), "schnell");});
test("schneller -> schnell", function() {deepEqual( Stem("schneller"), "schnell");});
test("schnelles -> schnell", function() {deepEqual( Stem("schnelles"), "schnell");});
test("schnelligkeit -> schnellig", function() {deepEqual( Stem("schnelligkeit"), "schnellig");});
test("schnellsten -> schnell", function() {deepEqual( Stem("schnellsten"), "schnell");});
test("schnellte -> schnellt", function() {deepEqual( Stem("schnellte"), "schnellt");});
test("schnepfe -> schnepf", function() {deepEqual( Stem("schnepfe"), "schnepf");});
test("schnepfen -> schnepf", function() {deepEqual( Stem("schnepfen"), "schnepf");});
test("schnepfengarn -> schnepfengarn", function() {deepEqual( Stem("schnepfengarn"), "schnepfengarn");});
test("schnepflein -> schnepflein", function() {deepEqual( Stem("schnepflein"), "schnepflein");});
test("schnepper -> schnepp", function() {deepEqual( Stem("schnepper"), "schnepp");});
test("schneppers -> schnepp", function() {deepEqual( Stem("schneppers"), "schnepp");});
test("schneuz -> schneuz", function() {deepEqual( Stem("schneuz"), "schneuz");});
test("schneuzen -> schneuz", function() {deepEqual( Stem("schneuzen"), "schneuz");});
test("schnippchen -> schnippch", function() {deepEqual( Stem("schnippchen"), "schnippch");});
test("schnippel -> schnippel", function() {deepEqual( Stem("schnippel"), "schnippel");});
test("schnippeln -> schnippeln", function() {deepEqual( Stem("schnippeln"), "schnippeln");});
test("schnippisch -> schnippisch", function() {deepEqual( Stem("schnippisch"), "schnippisch");});
test("schnitt -> schnitt", function() {deepEqual( Stem("schnitt"), "schnitt");});
test("schnitthaaren -> schnitthaar", function() {deepEqual( Stem("schnitthaaren"), "schnitthaar");});
test("schnitzarbeit -> schnitzarbeit", function() {deepEqual( Stem("schnitzarbeit"), "schnitzarbeit");});
test("schnitzbild -> schnitzbild", function() {deepEqual( Stem("schnitzbild"), "schnitzbild");});
test("schnitzbildern -> schnitzbild", function() {deepEqual( Stem("schnitzbildern"), "schnitzbild");});
test("schnitzelten -> schnitzelt", function() {deepEqual( Stem("schnitzelten"), "schnitzelt");});
test("schnitzereien -> schnitzerei", function() {deepEqual( Stem("schnitzereien"), "schnitzerei");});
test("schnitzwerk -> schnitzwerk", function() {deepEqual( Stem("schnitzwerk"), "schnitzwerk");});
test("schnöde -> schnod", function() {deepEqual( Stem("schnöde"), "schnod");});
test("schnöden -> schnod", function() {deepEqual( Stem("schnöden"), "schnod");});
test("schnöder -> schnod", function() {deepEqual( Stem("schnöder"), "schnod");});
test("schnödes -> schnod", function() {deepEqual( Stem("schnödes"), "schnod");});
test("schnörkel -> schnorkel", function() {deepEqual( Stem("schnörkel"), "schnorkel");});
test("schnörkels -> schnorkel", function() {deepEqual( Stem("schnörkels"), "schnorkel");});
test("schnüffelnd -> schnuffelnd", function() {deepEqual( Stem("schnüffelnd"), "schnuffelnd");});
test("schnüffelte -> schnuffelt", function() {deepEqual( Stem("schnüffelte"), "schnuffelt");});
test("schnupfen -> schnupf", function() {deepEqual( Stem("schnupfen"), "schnupf");});
test("schnupfennase -> schnupfennas", function() {deepEqual( Stem("schnupfennase"), "schnupfennas");});
test("schnupft -> schnupft", function() {deepEqual( Stem("schnupft"), "schnupft");});
test("schnupftuch -> schnupftuch", function() {deepEqual( Stem("schnupftuch"), "schnupftuch");});
test("schnuppengestöber -> schnuppengestob", function() {deepEqual( Stem("schnuppengestöber"), "schnuppengestob");});
test("schnuppern -> schnupp", function() {deepEqual( Stem("schnuppern"), "schnupp");});
test("schnupperte -> schnuppert", function() {deepEqual( Stem("schnupperte"), "schnuppert");});
test("schnur -> schnur", function() {deepEqual( Stem("schnur"), "schnur");});
test("schnürchen -> schnurch", function() {deepEqual( Stem("schnürchen"), "schnurch");});
test("schnüre -> schnur", function() {deepEqual( Stem("schnüre"), "schnur");});
test("schnüren -> schnur", function() {deepEqual( Stem("schnüren"), "schnur");});
test("schnürlein -> schnurlein", function() {deepEqual( Stem("schnürlein"), "schnurlein");});
test("schnurr -> schnurr", function() {deepEqual( Stem("schnurr"), "schnurr");});
test("schnurrbart -> schnurrbart", function() {deepEqual( Stem("schnurrbart"), "schnurrbart");});
test("schnurrbärtchen -> schnurrbartch", function() {deepEqual( Stem("schnurrbärtchen"), "schnurrbartch");});
test("schnürst -> schnurst", function() {deepEqual( Stem("schnürst"), "schnurst");});
test("schnürte -> schnurt", function() {deepEqual( Stem("schnürte"), "schnurt");});
test("schnürten -> schnurt", function() {deepEqual( Stem("schnürten"), "schnurt");});
test("schob -> schob", function() {deepEqual( Stem("schob"), "schob");});
test("schoben -> schob", function() {deepEqual( Stem("schoben"), "schob");});
test("schoham -> schoham", function() {deepEqual( Stem("schoham"), "schoham");});
test("schokolade -> schokolad", function() {deepEqual( Stem("schokolade"), "schokolad");});
test("schokoladenplätzchen -> schokoladenplatzch", function() {deepEqual( Stem("schokoladenplätzchen"), "schokoladenplatzch");});
test("schokoladenplätzchenkies -> schokoladenplatzchenki", function() {deepEqual( Stem("schokoladenplätzchenkies"), "schokoladenplatzchenki");});
test("schokoladenwege -> schokoladenweg", function() {deepEqual( Stem("schokoladenwege"), "schokoladenweg");});
test("scholl -> scholl", function() {deepEqual( Stem("scholl"), "scholl");});
test("schollen -> scholl", function() {deepEqual( Stem("schollen"), "scholl");});
test("schon -> schon", function() {deepEqual( Stem("schon"), "schon");});
test("schön -> schon", function() {deepEqual( Stem("schön"), "schon");});
test("schöne -> schon", function() {deepEqual( Stem("schöne"), "schon");});
test("schönem -> schon", function() {deepEqual( Stem("schönem"), "schon");});
test("schonen -> schon", function() {deepEqual( Stem("schonen"), "schon");});
test("schönen -> schon", function() {deepEqual( Stem("schönen"), "schon");});
test("schonende -> schonend", function() {deepEqual( Stem("schonende"), "schonend");});
test("schöner -> schon", function() {deepEqual( Stem("schöner"), "schon");});
test("schönere -> schon", function() {deepEqual( Stem("schönere"), "schon");});
test("schöneres -> schon", function() {deepEqual( Stem("schöneres"), "schon");});
test("schönern -> schon", function() {deepEqual( Stem("schönern"), "schon");});
test("schöners -> schon", function() {deepEqual( Stem("schöners"), "schon");});
test("schönes -> schon", function() {deepEqual( Stem("schönes"), "schon");});
test("schöngebautes -> schongebaut", function() {deepEqual( Stem("schöngebautes"), "schongebaut");});
test("schöngelegenes -> schongeleg", function() {deepEqual( Stem("schöngelegenes"), "schongeleg");});
test("schönheit -> schonheit", function() {deepEqual( Stem("schönheit"), "schonheit");});
test("schonn -> schonn", function() {deepEqual( Stem("schonn"), "schonn");});
test("schöns -> schon", function() {deepEqual( Stem("schöns"), "schon");});
test("schönst -> schon", function() {deepEqual( Stem("schönst"), "schon");});
test("schönste -> schon", function() {deepEqual( Stem("schönste"), "schon");});
test("schönsten -> schon", function() {deepEqual( Stem("schönsten"), "schon");});
test("schönstes -> schon", function() {deepEqual( Stem("schönstes"), "schon");});
test("schonung -> schonung", function() {deepEqual( Stem("schonung"), "schonung");});
test("schonungslos -> schonungslos", function() {deepEqual( Stem("schonungslos"), "schonungslos");});
test("school -> school", function() {deepEqual( Stem("school"), "school");});
test("schopenhauer -> schopenhau", function() {deepEqual( Stem("schopenhauer"), "schopenhau");});
test("schopenhauers -> schopenhau", function() {deepEqual( Stem("schopenhauers"), "schopenhau");});
test("schöpfe -> schopf", function() {deepEqual( Stem("schöpfe"), "schopf");});
test("schöpfen -> schopf", function() {deepEqual( Stem("schöpfen"), "schopf");});
test("schöpfer -> schopf", function() {deepEqual( Stem("schöpfer"), "schopf");});
test("schöpft -> schopft", function() {deepEqual( Stem("schöpft"), "schopft");});
test("schöpfte -> schopft", function() {deepEqual( Stem("schöpfte"), "schopft");});
test("schöpften -> schopft", function() {deepEqual( Stem("schöpften"), "schopft");});
test("schöpfung -> schopfung", function() {deepEqual( Stem("schöpfung"), "schopfung");});
test("schöpfungstage -> schopfungstag", function() {deepEqual( Stem("schöpfungstage"), "schopfungstag");});
test("schöppchen -> schoppch", function() {deepEqual( Stem("schöppchen"), "schoppch");});
test("schoppen -> schopp", function() {deepEqual( Stem("schoppen"), "schopp");});
test("schöpsenfleisch -> schopsenfleisch", function() {deepEqual( Stem("schöpsenfleisch"), "schopsenfleisch");});
test("schorf -> schorf", function() {deepEqual( Stem("schorf"), "schorf");});
test("schornstein -> schornstein", function() {deepEqual( Stem("schornstein"), "schornstein");});
test("schornsteinfeger -> schornsteinfeg", function() {deepEqual( Stem("schornsteinfeger"), "schornsteinfeg");});
test("schoss -> schoss", function() {deepEqual( Stem("schoss"), "schoss");});
test("schoß -> schoss", function() {deepEqual( Stem("schoß"), "schoss");});
test("schosse -> schoss", function() {deepEqual( Stem("schosse"), "schoss");});
test("schoße -> schoss", function() {deepEqual( Stem("schoße"), "schoss");});
test("schossen -> schoss", function() {deepEqual( Stem("schossen"), "schoss");});
test("schoten -> schot", function() {deepEqual( Stem("schoten"), "schot");});
test("schottischen -> schottisch", function() {deepEqual( Stem("schottischen"), "schottisch");});
test("schrabenhauser -> schrabenhaus", function() {deepEqual( Stem("schrabenhauser"), "schrabenhaus");});
test("schräg -> schrag", function() {deepEqual( Stem("schräg"), "schrag");});
test("schräger -> schrag", function() {deepEqual( Stem("schräger"), "schrag");});
test("schrak -> schrak", function() {deepEqual( Stem("schrak"), "schrak");});
test("schrammelquartett -> schrammelquartett", function() {deepEqual( Stem("schrammelquartett"), "schrammelquartett");});
test("schrammen -> schramm", function() {deepEqual( Stem("schrammen"), "schramm");});
test("schrank -> schrank", function() {deepEqual( Stem("schrank"), "schrank");});
test("schränke -> schrank", function() {deepEqual( Stem("schränke"), "schrank");});
test("schranken -> schrank", function() {deepEqual( Stem("schranken"), "schrank");});
test("schrankes -> schrank", function() {deepEqual( Stem("schrankes"), "schrank");});
test("schrauben -> schraub", function() {deepEqual( Stem("schrauben"), "schraub");});
test("schraubte -> schraubt", function() {deepEqual( Stem("schraubte"), "schraubt");});
test("schreck -> schreck", function() {deepEqual( Stem("schreck"), "schreck");});
test("schreckbare -> schreckbar", function() {deepEqual( Stem("schreckbare"), "schreckbar");});
test("schreckbarste -> schreckbarst", function() {deepEqual( Stem("schreckbarste"), "schreckbarst");});
test("schrecken -> schreck", function() {deepEqual( Stem("schrecken"), "schreck");});
test("schreckens -> schreck", function() {deepEqual( Stem("schreckens"), "schreck");});
test("schreckensherrschaft -> schreckensherrschaft", function() {deepEqual( Stem("schreckensherrschaft"), "schreckensherrschaft");});
test("schrecket -> schrecket", function() {deepEqual( Stem("schrecket"), "schrecket");});
test("schrecklich -> schrecklich", function() {deepEqual( Stem("schrecklich"), "schrecklich");});
test("schreckliche -> schrecklich", function() {deepEqual( Stem("schreckliche"), "schrecklich");});
test("schrecklichen -> schrecklich", function() {deepEqual( Stem("schrecklichen"), "schrecklich");});
test("schrecklicher -> schrecklich", function() {deepEqual( Stem("schrecklicher"), "schrecklich");});
test("schreckmittel -> schreckmittel", function() {deepEqual( Stem("schreckmittel"), "schreckmittel");});
test("schrei -> schrei", function() {deepEqual( Stem("schrei"), "schrei");});
test("schreibart -> schreibart", function() {deepEqual( Stem("schreibart"), "schreibart");});
test("schreibe -> schreib", function() {deepEqual( Stem("schreibe"), "schreib");});
test("schreiben -> schreib", function() {deepEqual( Stem("schreiben"), "schreib");});
test("schreiber -> schreib", function() {deepEqual( Stem("schreiber"), "schreib");});
test("schreibereien -> schreiberei", function() {deepEqual( Stem("schreibereien"), "schreiberei");});
test("schreibmaschinenfräulein -> schreibmaschinenfraulein", function() {deepEqual( Stem("schreibmaschinenfräulein"), "schreibmaschinenfraulein");});
test("schreibpapier -> schreibpapi", function() {deepEqual( Stem("schreibpapier"), "schreibpapi");});
test("schreibt -> schreibt", function() {deepEqual( Stem("schreibt"), "schreibt");});
test("schreibtafel -> schreibtafel", function() {deepEqual( Stem("schreibtafel"), "schreibtafel");});
test("schreibtisch -> schreibtisch", function() {deepEqual( Stem("schreibtisch"), "schreibtisch");});
test("schreibtischs -> schreibtisch", function() {deepEqual( Stem("schreibtischs"), "schreibtisch");});
test("schreibzeug -> schreibzeug", function() {deepEqual( Stem("schreibzeug"), "schreibzeug");});
test("schreien -> schreien", function() {deepEqual( Stem("schreien"), "schreien");});
test("schreiend -> schreiend", function() {deepEqual( Stem("schreiend"), "schreiend");});
test("schreiende -> schreiend", function() {deepEqual( Stem("schreiende"), "schreiend");});
test("schreit -> schreit", function() {deepEqual( Stem("schreit"), "schreit");});
test("schreiten -> schreit", function() {deepEqual( Stem("schreiten"), "schreit");});
test("schreitendes -> schreitend", function() {deepEqual( Stem("schreitendes"), "schreitend");});
test("schreitet -> schreitet", function() {deepEqual( Stem("schreitet"), "schreitet");});
test("schrie -> schrie", function() {deepEqual( Stem("schrie"), "schrie");});
test("schrieb -> schrieb", function() {deepEqual( Stem("schrieb"), "schrieb");});
test("schrieben -> schrieb", function() {deepEqual( Stem("schrieben"), "schrieb");});
test("schrieen -> schrieen", function() {deepEqual( Stem("schrieen"), "schrieen");});
test("schrift -> schrift", function() {deepEqual( Stem("schrift"), "schrift");});
test("schriften -> schrift", function() {deepEqual( Stem("schriften"), "schrift");});
test("schriftgelehrten -> schriftgelehrt", function() {deepEqual( Stem("schriftgelehrten"), "schriftgelehrt");});
test("schriftgelehrter -> schriftgelehrt", function() {deepEqual( Stem("schriftgelehrter"), "schriftgelehrt");});
test("schriftlich -> schriftlich", function() {deepEqual( Stem("schriftlich"), "schriftlich");});
test("schriftlicher -> schriftlich", function() {deepEqual( Stem("schriftlicher"), "schriftlich");});
test("schriftsteller -> schriftstell", function() {deepEqual( Stem("schriftsteller"), "schriftstell");});
test("schriftstellern -> schriftstell", function() {deepEqual( Stem("schriftstellern"), "schriftstell");});
test("schriftstücke -> schriftstuck", function() {deepEqual( Stem("schriftstücke"), "schriftstuck");});
test("schrill -> schrill", function() {deepEqual( Stem("schrill"), "schrill");});
test("schrille -> schrill", function() {deepEqual( Stem("schrille"), "schrill");});
test("schrillem -> schrill", function() {deepEqual( Stem("schrillem"), "schrill");});
test("schrillend -> schrillend", function() {deepEqual( Stem("schrillend"), "schrillend");});
test("schriller -> schrill", function() {deepEqual( Stem("schriller"), "schrill");});
test("schritt -> schritt", function() {deepEqual( Stem("schritt"), "schritt");});
test("schritte -> schritt", function() {deepEqual( Stem("schritte"), "schritt");});
test("schritten -> schritt", function() {deepEqual( Stem("schritten"), "schritt");});
test("schrittes -> schritt", function() {deepEqual( Stem("schrittes"), "schritt");});
test("schrofen -> schrof", function() {deepEqual( Stem("schrofen"), "schrof");});
test("schroffe -> schroff", function() {deepEqual( Stem("schroffe"), "schroff");});
test("schroffes -> schroff", function() {deepEqual( Stem("schroffes"), "schroff");});
test("schröpfköpfe -> schropfkopf", function() {deepEqual( Stem("schröpfköpfe"), "schropfkopf");});
test("schrörschnauzaschenbecher -> schrorschnauzaschenbech", function() {deepEqual( Stem("schrörschnauzaschenbecher"), "schrorschnauzaschenbech");});
test("schrörschnauzaschenbechern -> schrorschnauzaschenbech", function() {deepEqual( Stem("schrörschnauzaschenbechern"), "schrorschnauzaschenbech");});
test("schrotkörner -> schrotkorn", function() {deepEqual( Stem("schrotkörner"), "schrotkorn");});
test("schrott -> schrott", function() {deepEqual( Stem("schrott"), "schrott");});
test("schubert -> schubert", function() {deepEqual( Stem("schubert"), "schubert");});
test("schuberts -> schubert", function() {deepEqual( Stem("schuberts"), "schubert");});
test("schublade -> schublad", function() {deepEqual( Stem("schublade"), "schublad");});
test("schubladen -> schublad", function() {deepEqual( Stem("schubladen"), "schublad");});
test("schüchtern -> schucht", function() {deepEqual( Stem("schüchtern"), "schucht");});
test("schüchterne -> schuchtern", function() {deepEqual( Stem("schüchterne"), "schuchtern");});
test("schüchternen -> schuchtern", function() {deepEqual( Stem("schüchternen"), "schuchtern");});
test("schüchternheit -> schuchtern", function() {deepEqual( Stem("schüchternheit"), "schuchtern");});
test("schuchzend -> schuchzend", function() {deepEqual( Stem("schuchzend"), "schuchzend");});
test("schuf -> schuf", function() {deepEqual( Stem("schuf"), "schuf");});
test("schuft -> schuft", function() {deepEqual( Stem("schuft"), "schuft");});
test("schufte -> schuft", function() {deepEqual( Stem("schufte"), "schuft");});
test("schuh -> schuh", function() {deepEqual( Stem("schuh"), "schuh");});
test("schuhe -> schuh", function() {deepEqual( Stem("schuhe"), "schuh");});
test("schuhen -> schuh", function() {deepEqual( Stem("schuhen"), "schuh");});
test("schuhläden -> schuhlad", function() {deepEqual( Stem("schuhläden"), "schuhlad");});
test("schuhmacher -> schuhmach", function() {deepEqual( Stem("schuhmacher"), "schuhmach");});
test("schuhnägeln -> schuhnageln", function() {deepEqual( Stem("schuhnägeln"), "schuhnageln");});
test("schuhsohlen -> schuhsohl", function() {deepEqual( Stem("schuhsohlen"), "schuhsohl");});
test("schul -> schul", function() {deepEqual( Stem("schul"), "schul");});
test("schulbücher -> schulbuch", function() {deepEqual( Stem("schulbücher"), "schulbuch");});
test("schuld -> schuld", function() {deepEqual( Stem("schuld"), "schuld");});
test("schulden -> schuld", function() {deepEqual( Stem("schulden"), "schuld");});
test("schuldenschreiber -> schuldenschreib", function() {deepEqual( Stem("schuldenschreiber"), "schuldenschreib");});
test("schuldenverkehrs -> schuldenverkehr", function() {deepEqual( Stem("schuldenverkehrs"), "schuldenverkehr");});
test("schuldenwesen -> schuldenwes", function() {deepEqual( Stem("schuldenwesen"), "schuldenwes");});
test("schuldig -> schuldig", function() {deepEqual( Stem("schuldig"), "schuldig");});
test("schuldige -> schuldig", function() {deepEqual( Stem("schuldige"), "schuldig");});
test("schuldigen -> schuldig", function() {deepEqual( Stem("schuldigen"), "schuldig");});
test("schuldigkeit -> schuldig", function() {deepEqual( Stem("schuldigkeit"), "schuldig");});
test("schuldlos -> schuldlos", function() {deepEqual( Stem("schuldlos"), "schuldlos");});
test("schuldlosen -> schuldlos", function() {deepEqual( Stem("schuldlosen"), "schuldlos");});
test("schuldnern -> schuldn", function() {deepEqual( Stem("schuldnern"), "schuldn");});
test("schuldopfers -> schuldopf", function() {deepEqual( Stem("schuldopfers"), "schuldopf");});
test("schuldscheinen -> schuldschein", function() {deepEqual( Stem("schuldscheinen"), "schuldschein");});
test("schuldverhältnis -> schuldverhaltnis", function() {deepEqual( Stem("schuldverhältnis"), "schuldverhaltnis");});
test("schuldverschreibungen -> schuldverschreib", function() {deepEqual( Stem("schuldverschreibungen"), "schuldverschreib");});
test("schule -> schul", function() {deepEqual( Stem("schule"), "schul");});
test("schulen -> schul", function() {deepEqual( Stem("schulen"), "schul");});
test("schüler -> schul", function() {deepEqual( Stem("schüler"), "schul");});
test("schulgehilfe -> schulgehilf", function() {deepEqual( Stem("schulgehilfe"), "schulgehilf");});
test("schulgehilfen -> schulgehilf", function() {deepEqual( Stem("schulgehilfen"), "schulgehilf");});
test("schulgerecht -> schulgerecht", function() {deepEqual( Stem("schulgerecht"), "schulgerecht");});
test("schulgerechter -> schulgerecht", function() {deepEqual( Stem("schulgerechter"), "schulgerecht");});
test("schulkind -> schulkind", function() {deepEqual( Stem("schulkind"), "schulkind");});
test("schulknaben -> schulknab", function() {deepEqual( Stem("schulknaben"), "schulknab");});
test("schullehrer -> schullehr", function() {deepEqual( Stem("schullehrer"), "schullehr");});
test("schulmässig -> schulmass", function() {deepEqual( Stem("schulmässig"), "schulmass");});
test("schulmäßig -> schulmass", function() {deepEqual( Stem("schulmäßig"), "schulmass");});
test("schulmeister -> schulmeist", function() {deepEqual( Stem("schulmeister"), "schulmeist");});
test("schulpflichtigen -> schulpflicht", function() {deepEqual( Stem("schulpflichtigen"), "schulpflicht");});
test("schulstaub -> schulstaub", function() {deepEqual( Stem("schulstaub"), "schulstaub");});
test("schulten -> schult", function() {deepEqual( Stem("schulten"), "schult");});
test("schulter -> schult", function() {deepEqual( Stem("schulter"), "schult");});
test("schultern -> schult", function() {deepEqual( Stem("schultern"), "schult");});
test("schulterstücken -> schulterstuck", function() {deepEqual( Stem("schulterstücken"), "schulterstuck");});
test("schultheisse -> schultheiss", function() {deepEqual( Stem("schultheisse"), "schultheiss");});
test("schuppen -> schupp", function() {deepEqual( Stem("schuppen"), "schupp");});
test("schur -> schur", function() {deepEqual( Stem("schur"), "schur");});
test("schurke -> schurk", function() {deepEqual( Stem("schurke"), "schurk");});
test("schürze -> schurz", function() {deepEqual( Stem("schürze"), "schurz");});
test("schürzen -> schurz", function() {deepEqual( Stem("schürzen"), "schurz");});
test("schürzenband -> schurzenband", function() {deepEqual( Stem("schürzenband"), "schurzenband");});
test("schürzte -> schurzt", function() {deepEqual( Stem("schürzte"), "schurzt");});
test("schuss -> schuss", function() {deepEqual( Stem("schuss"), "schuss");});
test("schusse -> schuss", function() {deepEqual( Stem("schusse"), "schuss");});
test("schüsse -> schuss", function() {deepEqual( Stem("schüsse"), "schuss");});
test("schüssel -> schussel", function() {deepEqual( Stem("schüssel"), "schussel");});
test("schüsseln -> schusseln", function() {deepEqual( Stem("schüsseln"), "schusseln");});
test("schusses -> schuss", function() {deepEqual( Stem("schusses"), "schuss");});
test("schusslinie -> schusslini", function() {deepEqual( Stem("schusslinie"), "schusslini");});
test("schussplatz -> schussplatz", function() {deepEqual( Stem("schussplatz"), "schussplatz");});
test("schuster -> schust", function() {deepEqual( Stem("schuster"), "schust");});
test("schusterten -> schustert", function() {deepEqual( Stem("schusterten"), "schustert");});
test("schutte -> schutt", function() {deepEqual( Stem("schutte"), "schutt");});
test("schütteln -> schutteln", function() {deepEqual( Stem("schütteln"), "schutteln");});
test("schüttelt -> schuttelt", function() {deepEqual( Stem("schüttelt"), "schuttelt");});
test("schüttelte -> schuttelt", function() {deepEqual( Stem("schüttelte"), "schuttelt");});
test("schüttelten -> schuttelt", function() {deepEqual( Stem("schüttelten"), "schuttelt");});
test("schütteren -> schutt", function() {deepEqual( Stem("schütteren"), "schutt");});
test("schüttet -> schuttet", function() {deepEqual( Stem("schüttet"), "schuttet");});
test("schüttete -> schuttet", function() {deepEqual( Stem("schüttete"), "schuttet");});
test("schütteten -> schuttet", function() {deepEqual( Stem("schütteten"), "schuttet");});
test("schutz -> schutz", function() {deepEqual( Stem("schutz"), "schutz");});
test("schutzdienst -> schutzdien", function() {deepEqual( Stem("schutzdienst"), "schutzdien");});
test("schutze -> schutz", function() {deepEqual( Stem("schutze"), "schutz");});
test("schütze -> schutz", function() {deepEqual( Stem("schütze"), "schutz");});
test("schützen -> schutz", function() {deepEqual( Stem("schützen"), "schutz");});
test("schützend -> schutzend", function() {deepEqual( Stem("schützend"), "schutzend");});
test("schützende -> schutzend", function() {deepEqual( Stem("schützende"), "schutzend");});
test("schützendem -> schutzend", function() {deepEqual( Stem("schützendem"), "schutzend");});
test("schützengraben -> schutzengrab", function() {deepEqual( Stem("schützengraben"), "schutzengrab");});
test("schützenwaffe -> schutzenwaff", function() {deepEqual( Stem("schützenwaffe"), "schutzenwaff");});
test("schützer -> schutz", function() {deepEqual( Stem("schützer"), "schutz");});
test("schutzschürze -> schutzschurz", function() {deepEqual( Stem("schutzschürze"), "schutzschurz");});
test("schützt -> schutzt", function() {deepEqual( Stem("schützt"), "schutzt");});
test("schützte -> schutzt", function() {deepEqual( Stem("schützte"), "schutzt");});
test("schützten -> schutzt", function() {deepEqual( Stem("schützten"), "schutzt");});
test("schutzumschlag -> schutzumschlag", function() {deepEqual( Stem("schutzumschlag"), "schutzumschlag");});
test("schwaar -> schwaar", function() {deepEqual( Stem("schwaar"), "schwaar");});
test("schwabbelgegend -> schwabbelgeg", function() {deepEqual( Stem("schwabbelgegend"), "schwabbelgeg");});
test("schwäbchen -> schwabch", function() {deepEqual( Stem("schwäbchen"), "schwabch");});
test("schwäbchens -> schwabch", function() {deepEqual( Stem("schwäbchens"), "schwabch");});
test("schwabe -> schwab", function() {deepEqual( Stem("schwabe"), "schwab");});
test("schwaben -> schwab", function() {deepEqual( Stem("schwaben"), "schwab");});
test("schwäbische -> schwabisch", function() {deepEqual( Stem("schwäbische"), "schwabisch");});
test("schwäbischen -> schwabisch", function() {deepEqual( Stem("schwäbischen"), "schwabisch");});
test("schwäblein -> schwablein", function() {deepEqual( Stem("schwäblein"), "schwablein");});
test("schwach -> schwach", function() {deepEqual( Stem("schwach"), "schwach");});
test("schwache -> schwach", function() {deepEqual( Stem("schwache"), "schwach");});
test("schwäche -> schwach", function() {deepEqual( Stem("schwäche"), "schwach");});
test("schwachen -> schwach", function() {deepEqual( Stem("schwachen"), "schwach");});
test("schwacher -> schwach", function() {deepEqual( Stem("schwacher"), "schwach");});
test("schwächer -> schwach", function() {deepEqual( Stem("schwächer"), "schwach");});
test("schwächere -> schwach", function() {deepEqual( Stem("schwächere"), "schwach");});
test("schwaches -> schwach", function() {deepEqual( Stem("schwaches"), "schwach");});
test("schwachheit -> schwachheit", function() {deepEqual( Stem("schwachheit"), "schwachheit");});
test("schwachheiten -> schwachheit", function() {deepEqual( Stem("schwachheiten"), "schwachheit");});
test("schwachkopf -> schwachkopf", function() {deepEqual( Stem("schwachkopf"), "schwachkopf");});
test("schwachköpfe -> schwachkopf", function() {deepEqual( Stem("schwachköpfe"), "schwachkopf");});
test("schwächlichsten -> schwachlich", function() {deepEqual( Stem("schwächlichsten"), "schwachlich");});
test("schwachnervigen -> schwachnerv", function() {deepEqual( Stem("schwachnervigen"), "schwachnerv");});
test("schwachsinnig -> schwachsinn", function() {deepEqual( Stem("schwachsinnig"), "schwachsinn");});
test("schwächt -> schwacht", function() {deepEqual( Stem("schwächt"), "schwacht");});
test("schwächte -> schwacht", function() {deepEqual( Stem("schwächte"), "schwacht");});
test("schwaden -> schwad", function() {deepEqual( Stem("schwaden"), "schwad");});
test("schwäher -> schwah", function() {deepEqual( Stem("schwäher"), "schwah");});
test("schwähers -> schwah", function() {deepEqual( Stem("schwähers"), "schwah");});
test("schwalbennest -> schwalbenn", function() {deepEqual( Stem("schwalbennest"), "schwalbenn");});
test("schwamm -> schwamm", function() {deepEqual( Stem("schwamm"), "schwamm");});
test("schwammen -> schwamm", function() {deepEqual( Stem("schwammen"), "schwamm");});
test("schwane -> schwan", function() {deepEqual( Stem("schwane"), "schwan");});
test("schwang -> schwang", function() {deepEqual( Stem("schwang"), "schwang");});
test("schwange -> schwang", function() {deepEqual( Stem("schwange"), "schwang");});
test("schwangeren -> schwang", function() {deepEqual( Stem("schwangeren"), "schwang");});
test("schwänke -> schwank", function() {deepEqual( Stem("schwänke"), "schwank");});
test("schwanken -> schwank", function() {deepEqual( Stem("schwanken"), "schwank");});
test("schwankend -> schwankend", function() {deepEqual( Stem("schwankend"), "schwankend");});
test("schwankende -> schwankend", function() {deepEqual( Stem("schwankende"), "schwankend");});
test("schwankenden -> schwankend", function() {deepEqual( Stem("schwankenden"), "schwankend");});
test("schwankes -> schwank", function() {deepEqual( Stem("schwankes"), "schwank");});
test("schwankhafte -> schwankhaft", function() {deepEqual( Stem("schwankhafte"), "schwankhaft");});
test("schwankt -> schwankt", function() {deepEqual( Stem("schwankt"), "schwankt");});
test("schwankte -> schwankt", function() {deepEqual( Stem("schwankte"), "schwankt");});
test("schwankten -> schwankt", function() {deepEqual( Stem("schwankten"), "schwankt");});
test("schwanz -> schwanz", function() {deepEqual( Stem("schwanz"), "schwanz");});
test("schwänzchen -> schwanzch", function() {deepEqual( Stem("schwänzchen"), "schwanzch");});
test("schwanze -> schwanz", function() {deepEqual( Stem("schwanze"), "schwanz");});
test("schwänze -> schwanz", function() {deepEqual( Stem("schwänze"), "schwanz");});
test("schwänzelnd -> schwanzelnd", function() {deepEqual( Stem("schwänzelnd"), "schwanzelnd");});
test("schwänzelte -> schwanzelt", function() {deepEqual( Stem("schwänzelte"), "schwanzelt");});
test("schwänzen -> schwanz", function() {deepEqual( Stem("schwänzen"), "schwanz");});
test("schwanzes -> schwanz", function() {deepEqual( Stem("schwanzes"), "schwanz");});
test("schwanzflosse -> schwanzfloss", function() {deepEqual( Stem("schwanzflosse"), "schwanzfloss");});
test("schwänzlein -> schwanzlein", function() {deepEqual( Stem("schwänzlein"), "schwanzlein");});
test("schwapp -> schwapp", function() {deepEqual( Stem("schwapp"), "schwapp");});
test("schwärme -> schwarm", function() {deepEqual( Stem("schwärme"), "schwarm");});
test("schwärmen -> schwarm", function() {deepEqual( Stem("schwärmen"), "schwarm");});
test("schwärmende -> schwarmend", function() {deepEqual( Stem("schwärmende"), "schwarmend");});
test("schwärmenden -> schwarmend", function() {deepEqual( Stem("schwärmenden"), "schwarmend");});
test("schwärmer -> schwarm", function() {deepEqual( Stem("schwärmer"), "schwarm");});
test("schwärmerei -> schwarmerei", function() {deepEqual( Stem("schwärmerei"), "schwarmerei");});
test("schwärmerisches -> schwarmer", function() {deepEqual( Stem("schwärmerisches"), "schwarmer");});
test("schwärmern -> schwarm", function() {deepEqual( Stem("schwärmern"), "schwarm");});
test("schwärmte -> schwarmt", function() {deepEqual( Stem("schwärmte"), "schwarmt");});
test("schwärmten -> schwarmt", function() {deepEqual( Stem("schwärmten"), "schwarmt");});
test("schwartenhälse -> schwartenhals", function() {deepEqual( Stem("schwartenhälse"), "schwartenhals");});
test("schwarz -> schwarz", function() {deepEqual( Stem("schwarz"), "schwarz");});
test("schwarzbrot -> schwarzbrot", function() {deepEqual( Stem("schwarzbrot"), "schwarzbrot");});
test("schwarze -> schwarz", function() {deepEqual( Stem("schwarze"), "schwarz");});
test("schwärze -> schwarz", function() {deepEqual( Stem("schwärze"), "schwarz");});
test("schwarzem -> schwarz", function() {deepEqual( Stem("schwarzem"), "schwarz");});
test("schwarzen -> schwarz", function() {deepEqual( Stem("schwarzen"), "schwarz");});
test("schwärzen -> schwarz", function() {deepEqual( Stem("schwärzen"), "schwarz");});
test("schwarzer -> schwarz", function() {deepEqual( Stem("schwarzer"), "schwarz");});
test("schwarzes -> schwarz", function() {deepEqual( Stem("schwarzes"), "schwarz");});
test("schwarzgekleideter -> schwarzgekleidet", function() {deepEqual( Stem("schwarzgekleideter"), "schwarzgekleidet");});
test("schwarzgelbes -> schwarzgelb", function() {deepEqual( Stem("schwarzgelbes"), "schwarzgelb");});
test("schwärzliche -> schwarzlich", function() {deepEqual( Stem("schwärzliche"), "schwarzlich");});
test("schwärzlichen -> schwarzlich", function() {deepEqual( Stem("schwärzlichen"), "schwarzlich");});
test("schwarzmeerküste -> schwarzmeerkust", function() {deepEqual( Stem("schwarzmeerküste"), "schwarzmeerkust");});
test("schwarzseidenes -> schwarzseid", function() {deepEqual( Stem("schwarzseidenes"), "schwarzseid");});
test("schwärzt -> schwarzt", function() {deepEqual( Stem("schwärzt"), "schwarzt");});
test("schwärzte -> schwarzt", function() {deepEqual( Stem("schwärzte"), "schwarzt");});
test("schwarzwollene -> schwarzwoll", function() {deepEqual( Stem("schwarzwollene"), "schwarzwoll");});
test("schwatze -> schwatz", function() {deepEqual( Stem("schwatze"), "schwatz");});
test("schwatzen -> schwatz", function() {deepEqual( Stem("schwatzen"), "schwatz");});
test("schwatzend -> schwatzend", function() {deepEqual( Stem("schwatzend"), "schwatzend");});
test("schwätzer -> schwatz", function() {deepEqual( Stem("schwätzer"), "schwatz");});
test("schwätzerei -> schwatzerei", function() {deepEqual( Stem("schwätzerei"), "schwatzerei");});
test("schwatzt -> schwatzt", function() {deepEqual( Stem("schwatzt"), "schwatzt");});
test("schwatzte -> schwatzt", function() {deepEqual( Stem("schwatzte"), "schwatzt");});
test("schwatzten -> schwatzt", function() {deepEqual( Stem("schwatzten"), "schwatzt");});
test("schwebe -> schweb", function() {deepEqual( Stem("schwebe"), "schweb");});
test("schweben -> schweb", function() {deepEqual( Stem("schweben"), "schweb");});
test("schwebend -> schwebend", function() {deepEqual( Stem("schwebend"), "schwebend");});
test("schwebt -> schwebt", function() {deepEqual( Stem("schwebt"), "schwebt");});
test("schwebte -> schwebt", function() {deepEqual( Stem("schwebte"), "schwebt");});
test("schwebten -> schwebt", function() {deepEqual( Stem("schwebten"), "schwebt");});
test("schweden -> schwed", function() {deepEqual( Stem("schweden"), "schwed");});
test("schwedenkönigs -> schwedenkon", function() {deepEqual( Stem("schwedenkönigs"), "schwedenkon");});
test("schwefel -> schwefel", function() {deepEqual( Stem("schwefel"), "schwefel");});
test("schwefelduft -> schwefelduft", function() {deepEqual( Stem("schwefelduft"), "schwefelduft");});
test("schwefelgelb -> schwefelgelb", function() {deepEqual( Stem("schwefelgelb"), "schwefelgelb");});
test("schwefelgelbe -> schwefelgelb", function() {deepEqual( Stem("schwefelgelbe"), "schwefelgelb");});
test("schwefelgelbem -> schwefelgelb", function() {deepEqual( Stem("schwefelgelbem"), "schwefelgelb");});
test("schwefelgestank -> schwefelgestank", function() {deepEqual( Stem("schwefelgestank"), "schwefelgestank");});
test("schwefelholz -> schwefelholz", function() {deepEqual( Stem("schwefelholz"), "schwefelholz");});
test("schwefelhölzl -> schwefelholzl", function() {deepEqual( Stem("schwefelhölzl"), "schwefelholzl");});
test("schwefelig -> schwefel", function() {deepEqual( Stem("schwefelig"), "schwefel");});
test("schwefels -> schwefel", function() {deepEqual( Stem("schwefels"), "schwefel");});
test("schwefelstoff -> schwefelstoff", function() {deepEqual( Stem("schwefelstoff"), "schwefelstoff");});
test("schweifen -> schweif", function() {deepEqual( Stem("schweifen"), "schweif");});
test("schweifte -> schweift", function() {deepEqual( Stem("schweifte"), "schweift");});
test("schweig -> schweig", function() {deepEqual( Stem("schweig"), "schweig");});
test("schweige -> schweig", function() {deepEqual( Stem("schweige"), "schweig");});
test("schweigen -> schweig", function() {deepEqual( Stem("schweigen"), "schweig");});
test("schweigend -> schweigend", function() {deepEqual( Stem("schweigend"), "schweigend");});
test("schweigende -> schweigend", function() {deepEqual( Stem("schweigende"), "schweigend");});
test("schweigenden -> schweigend", function() {deepEqual( Stem("schweigenden"), "schweigend");});
test("schweigsam -> schweigsam", function() {deepEqual( Stem("schweigsam"), "schweigsam");});
test("schweinchen -> schweinch", function() {deepEqual( Stem("schweinchen"), "schweinch");});
test("schweine -> schwein", function() {deepEqual( Stem("schweine"), "schwein");});
test("schweinerei -> schweinerei", function() {deepEqual( Stem("schweinerei"), "schweinerei");});
test("schweinestall -> schweinestall", function() {deepEqual( Stem("schweinestall"), "schweinestall");});
test("schweinigel -> schweinigel", function() {deepEqual( Stem("schweinigel"), "schweinigel");});
test("schweinsborste -> schweinsborst", function() {deepEqual( Stem("schweinsborste"), "schweinsborst");});
test("schweiss -> schweiss", function() {deepEqual( Stem("schweiss"), "schweiss");});
test("schweiß -> schweiss", function() {deepEqual( Stem("schweiß"), "schweiss");});
test("schweisse -> schweiss", function() {deepEqual( Stem("schweisse"), "schweiss");});
test("schweiße -> schweiss", function() {deepEqual( Stem("schweiße"), "schweiss");});
test("schweisses -> schweiss", function() {deepEqual( Stem("schweisses"), "schweiss");});
test("schweißes -> schweiss", function() {deepEqual( Stem("schweißes"), "schweiss");});
test("schweissfleckigen -> schweissfleck", function() {deepEqual( Stem("schweissfleckigen"), "schweissfleck");});
test("schweisshund -> schweisshund", function() {deepEqual( Stem("schweisshund"), "schweisshund");});
test("schweisstriefend -> schweisstrief", function() {deepEqual( Stem("schweisstriefend"), "schweisstrief");});
test("schweißtröpfchen -> schweisstropfch", function() {deepEqual( Stem("schweißtröpfchen"), "schweisstropfch");});
test("schweißtropfen -> schweisstropf", function() {deepEqual( Stem("schweißtropfen"), "schweisstropf");});
test("schweiz -> schweiz", function() {deepEqual( Stem("schweiz"), "schweiz");});
test("schweizer -> schweiz", function() {deepEqual( Stem("schweizer"), "schweiz");});
test("schweizerdegen -> schweizerdeg", function() {deepEqual( Stem("schweizerdegen"), "schweizerdeg");});
test("schweizerische -> schweizer", function() {deepEqual( Stem("schweizerische"), "schweizer");});
test("schweizerischen -> schweizer", function() {deepEqual( Stem("schweizerischen"), "schweizer");});
test("schweizerlande -> schweizerland", function() {deepEqual( Stem("schweizerlande"), "schweizerland");});
test("schweizerorten -> schweizerort", function() {deepEqual( Stem("schweizerorten"), "schweizerort");});
test("schweizerstadtkirche -> schweizerstadtkirch", function() {deepEqual( Stem("schweizerstadtkirche"), "schweizerstadtkirch");});
test("schweizin -> schweizin", function() {deepEqual( Stem("schweizin"), "schweizin");});
test("schwelle -> schwell", function() {deepEqual( Stem("schwelle"), "schwell");});
test("schwellt -> schwellt", function() {deepEqual( Stem("schwellt"), "schwellt");});
test("schwellte -> schwellt", function() {deepEqual( Stem("schwellte"), "schwellt");});
test("schwendling -> schwendling", function() {deepEqual( Stem("schwendling"), "schwendling");});
test("schwenken -> schwenk", function() {deepEqual( Stem("schwenken"), "schwenk");});
test("schwenkend -> schwenkend", function() {deepEqual( Stem("schwenkend"), "schwenkend");});
test("schwenkte -> schwenkt", function() {deepEqual( Stem("schwenkte"), "schwenkt");});
test("schwenkten -> schwenkt", function() {deepEqual( Stem("schwenkten"), "schwenkt");});
test("schwer -> schwer", function() {deepEqual( Stem("schwer"), "schwer");});
test("schwere -> schwer", function() {deepEqual( Stem("schwere"), "schwer");});
test("schwerem -> schwer", function() {deepEqual( Stem("schwerem"), "schwer");});
test("schweren -> schwer", function() {deepEqual( Stem("schweren"), "schwer");});
test("schwerenöter -> schwerenot", function() {deepEqual( Stem("schwerenöter"), "schwerenot");});
test("schwerer -> schwer", function() {deepEqual( Stem("schwerer"), "schwer");});
test("schweres -> schwer", function() {deepEqual( Stem("schweres"), "schwer");});
test("schwerfällig -> schwerfall", function() {deepEqual( Stem("schwerfällig"), "schwerfall");});
test("schwerfälliges -> schwerfall", function() {deepEqual( Stem("schwerfälliges"), "schwerfall");});
test("schwerfälligkeit -> schwerfall", function() {deepEqual( Stem("schwerfälligkeit"), "schwerfall");});
test("schwergeschmiedeten -> schwergeschmiedet", function() {deepEqual( Stem("schwergeschmiedeten"), "schwergeschmiedet");});
test("schwerhörig -> schwerhor", function() {deepEqual( Stem("schwerhörig"), "schwerhor");});
test("schwerlich -> schwerlich", function() {deepEqual( Stem("schwerlich"), "schwerlich");});
test("schwermut -> schwermut", function() {deepEqual( Stem("schwermut"), "schwermut");});
test("schwermütig -> schwermut", function() {deepEqual( Stem("schwermütig"), "schwermut");});
test("schwermütigen -> schwermut", function() {deepEqual( Stem("schwermütigen"), "schwermut");});
test("schwermütiges -> schwermut", function() {deepEqual( Stem("schwermütiges"), "schwermut");});
test("schwert -> schwert", function() {deepEqual( Stem("schwert"), "schwert");});
test("schwerte -> schwert", function() {deepEqual( Stem("schwerte"), "schwert");});
test("schwerter -> schwert", function() {deepEqual( Stem("schwerter"), "schwert");});
test("schwertern -> schwert", function() {deepEqual( Stem("schwertern"), "schwert");});
test("schwertes -> schwert", function() {deepEqual( Stem("schwertes"), "schwert");});
test("schwertfeger -> schwertfeg", function() {deepEqual( Stem("schwertfeger"), "schwertfeg");});
test("schwerts -> schwert", function() {deepEqual( Stem("schwerts"), "schwert");});
test("schwerwiegende -> schwerwieg", function() {deepEqual( Stem("schwerwiegende"), "schwerwieg");});
test("schwester -> schwest", function() {deepEqual( Stem("schwester"), "schwest");});
test("schwesterchen -> schwesterch", function() {deepEqual( Stem("schwesterchen"), "schwesterch");});
test("schwestern -> schwest", function() {deepEqual( Stem("schwestern"), "schwest");});
test("schwieg -> schwieg", function() {deepEqual( Stem("schwieg"), "schwieg");});
test("schwiegen -> schwieg", function() {deepEqual( Stem("schwiegen"), "schwieg");});
test("schwiegermutter -> schwiegermutt", function() {deepEqual( Stem("schwiegermutter"), "schwiegermutt");});
test("schwiegersohn -> schwiegersohn", function() {deepEqual( Stem("schwiegersohn"), "schwiegersohn");});
test("schwiegersöhne -> schwiegersohn", function() {deepEqual( Stem("schwiegersöhne"), "schwiegersohn");});
test("schwiegertochter -> schwiegertocht", function() {deepEqual( Stem("schwiegertochter"), "schwiegertocht");});
test("schwiegertöchter -> schwiegertocht", function() {deepEqual( Stem("schwiegertöchter"), "schwiegertocht");});
test("schwieligen -> schwielig", function() {deepEqual( Stem("schwieligen"), "schwielig");});
test("schwierig -> schwierig", function() {deepEqual( Stem("schwierig"), "schwierig");});
test("schwierige -> schwierig", function() {deepEqual( Stem("schwierige"), "schwierig");});
test("schwierigen -> schwierig", function() {deepEqual( Stem("schwierigen"), "schwierig");});
test("schwieriger -> schwierig", function() {deepEqual( Stem("schwieriger"), "schwierig");});
test("schwierigkeit -> schwierig", function() {deepEqual( Stem("schwierigkeit"), "schwierig");});
test("schwierigkeiten -> schwierig", function() {deepEqual( Stem("schwierigkeiten"), "schwierig");});
test("schwierigsten -> schwierig", function() {deepEqual( Stem("schwierigsten"), "schwierig");});
test("schwimmen -> schwimm", function() {deepEqual( Stem("schwimmen"), "schwimm");});
test("schwimmende -> schwimmend", function() {deepEqual( Stem("schwimmende"), "schwimmend");});
test("schwimmenden -> schwimmend", function() {deepEqual( Stem("schwimmenden"), "schwimmend");});
test("schwindel -> schwindel", function() {deepEqual( Stem("schwindel"), "schwindel");});
test("schwindelanfall -> schwindelanfall", function() {deepEqual( Stem("schwindelanfall"), "schwindelanfall");});
test("schwindelanfällen -> schwindelanfall", function() {deepEqual( Stem("schwindelanfällen"), "schwindelanfall");});
test("schwinden -> schwind", function() {deepEqual( Stem("schwinden"), "schwind");});
test("schwindet -> schwindet", function() {deepEqual( Stem("schwindet"), "schwindet");});
test("schwindler -> schwindl", function() {deepEqual( Stem("schwindler"), "schwindl");});
test("schwindlig -> schwindlig", function() {deepEqual( Stem("schwindlig"), "schwindlig");});
test("schwingen -> schwing", function() {deepEqual( Stem("schwingen"), "schwing");});
test("schwingend -> schwingend", function() {deepEqual( Stem("schwingend"), "schwingend");});
test("schwippte -> schwippt", function() {deepEqual( Stem("schwippte"), "schwippt");});
test("schwirrte -> schwirrt", function() {deepEqual( Stem("schwirrte"), "schwirrt");});
test("schwitzen -> schwitz", function() {deepEqual( Stem("schwitzen"), "schwitz");});
test("schwitzte -> schwitzt", function() {deepEqual( Stem("schwitzte"), "schwitzt");});
test("schwitzten -> schwitzt", function() {deepEqual( Stem("schwitzten"), "schwitzt");});
test("schwoll -> schwoll", function() {deepEqual( Stem("schwoll"), "schwoll");});
test("schwor -> schwor", function() {deepEqual( Stem("schwor"), "schwor");});
test("schwör -> schwor", function() {deepEqual( Stem("schwör"), "schwor");});
test("schwöre -> schwor", function() {deepEqual( Stem("schwöre"), "schwor");});
test("schwören -> schwor", function() {deepEqual( Stem("schwören"), "schwor");});
test("schwört -> schwort", function() {deepEqual( Stem("schwört"), "schwort");});
test("schwül -> schwul", function() {deepEqual( Stem("schwül"), "schwul");});
test("schwüler -> schwul", function() {deepEqual( Stem("schwüler"), "schwul");});
test("schwules -> schwul", function() {deepEqual( Stem("schwules"), "schwul");});
test("schwüles -> schwul", function() {deepEqual( Stem("schwüles"), "schwul");});
test("schwung -> schwung", function() {deepEqual( Stem("schwung"), "schwung");});
test("schwunge -> schwung", function() {deepEqual( Stem("schwunge"), "schwung");});
test("schwüngen -> schwung", function() {deepEqual( Stem("schwüngen"), "schwung");});
test("schwupp -> schwupp", function() {deepEqual( Stem("schwupp"), "schwupp");});
test("schwur -> schwur", function() {deepEqual( Stem("schwur"), "schwur");});
test("schwuren -> schwur", function() {deepEqual( Stem("schwuren"), "schwur");});
test("scil -> scil", function() {deepEqual( Stem("scil"), "scil");});
test("scotus -> scotus", function() {deepEqual( Stem("scotus"), "scotus");});
test("se -> se", function() {deepEqual( Stem("se"), "se");});
test("sebas -> sebas", function() {deepEqual( Stem("sebas"), "sebas");});
test("sebastian -> sebastian", function() {deepEqual( Stem("sebastian"), "sebastian");});
test("sebulon -> sebulon", function() {deepEqual( Stem("sebulon"), "sebulon");});
test("sechs -> sech", function() {deepEqual( Stem("sechs"), "sech");});
test("sechsfache -> sechsfach", function() {deepEqual( Stem("sechsfache"), "sechsfach");});
test("sechsmal -> sechsmal", function() {deepEqual( Stem("sechsmal"), "sechsmal");});
test("sechste -> sech", function() {deepEqual( Stem("sechste"), "sech");});
test("sechsten -> sech", function() {deepEqual( Stem("sechsten"), "sech");});
test("sechster -> sech", function() {deepEqual( Stem("sechster"), "sech");});
test("sechstes -> sech", function() {deepEqual( Stem("sechstes"), "sech");});
test("sechsunddreissig -> sechsunddreiss", function() {deepEqual( Stem("sechsunddreissig"), "sechsunddreiss");});
test("sechsundsiebenzig -> sechsundsiebenz", function() {deepEqual( Stem("sechsundsiebenzig"), "sechsundsiebenz");});
test("sechszehn -> sechszehn", function() {deepEqual( Stem("sechszehn"), "sechszehn");});
test("sechzehn -> sechzehn", function() {deepEqual( Stem("sechzehn"), "sechzehn");});
test("sechzehnjährigen -> sechzehnjahr", function() {deepEqual( Stem("sechzehnjährigen"), "sechzehnjahr");});
test("sechzehnten -> sechzehnt", function() {deepEqual( Stem("sechzehnten"), "sechzehnt");});
test("sechzig -> sechzig", function() {deepEqual( Stem("sechzig"), "sechzig");});
test("sechzigste -> sechzig", function() {deepEqual( Stem("sechzigste"), "sechzig");});
test("second -> second", function() {deepEqual( Stem("second"), "second");});
test("sed -> sed", function() {deepEqual( Stem("sed"), "sed");});
test("see -> see", function() {deepEqual( Stem("see"), "see");});
test("seegrund -> seegrund", function() {deepEqual( Stem("seegrund"), "seegrund");});
test("seehäfen -> seehaf", function() {deepEqual( Stem("seehäfen"), "seehaf");});
test("seejungfern -> seejungf", function() {deepEqual( Stem("seejungfern"), "seejungf");});
test("seekrank -> seekrank", function() {deepEqual( Stem("seekrank"), "seekrank");});
test("seel -> seel", function() {deepEqual( Stem("seel"), "seel");});
test("seele -> seel", function() {deepEqual( Stem("seele"), "seel");});
test("seeleitner -> seeleitn", function() {deepEqual( Stem("seeleitner"), "seeleitn");});
test("seeleitnerhauses -> seeleitnerhaus", function() {deepEqual( Stem("seeleitnerhauses"), "seeleitnerhaus");});
test("seeleitnersbuben -> seeleitnersbub", function() {deepEqual( Stem("seeleitnersbuben"), "seeleitnersbub");});
test("seeleitnersleut -> seeleitnersleut", function() {deepEqual( Stem("seeleitnersleut"), "seeleitnersleut");});
test("seeleitnersleute -> seeleitnersleut", function() {deepEqual( Stem("seeleitnersleute"), "seeleitnersleut");});
test("seelen -> seel", function() {deepEqual( Stem("seelen"), "seel");});
test("seelenallein -> seelenallein", function() {deepEqual( Stem("seelenallein"), "seelenallein");});
test("seelenerhebung -> seelenerheb", function() {deepEqual( Stem("seelenerhebung"), "seelenerheb");});
test("seelengrösse -> seelengross", function() {deepEqual( Stem("seelengrösse"), "seelengross");});
test("seelenkämpfe -> seelenkampf", function() {deepEqual( Stem("seelenkämpfe"), "seelenkampf");});
test("seelenkräfte -> seelenkraft", function() {deepEqual( Stem("seelenkräfte"), "seelenkraft");});
test("seelenkunde -> seelenkund", function() {deepEqual( Stem("seelenkunde"), "seelenkund");});
test("seelenleiden -> seelenleid", function() {deepEqual( Stem("seelenleiden"), "seelenleid");});
test("seelenruhe -> seelenruh", function() {deepEqual( Stem("seelenruhe"), "seelenruh");});
test("seelenschwäche -> seelenschwach", function() {deepEqual( Stem("seelenschwäche"), "seelenschwach");});
test("seelenstärke -> seelenstark", function() {deepEqual( Stem("seelenstärke"), "seelenstark");});
test("seelenvergnügt -> seelenvergnugt", function() {deepEqual( Stem("seelenvergnügt"), "seelenvergnugt");});
test("seelenvoll -> seelenvoll", function() {deepEqual( Stem("seelenvoll"), "seelenvoll");});
test("seelenvolle -> seelenvoll", function() {deepEqual( Stem("seelenvolle"), "seelenvoll");});
test("seeleute -> seeleut", function() {deepEqual( Stem("seeleute"), "seeleut");});
test("seelon -> seelon", function() {deepEqual( Stem("seelon"), "seelon");});
test("seelsorge -> seelsorg", function() {deepEqual( Stem("seelsorge"), "seelsorg");});
test("seen -> seen", function() {deepEqual( Stem("seen"), "seen");});
test("sees -> sees", function() {deepEqual( Stem("sees"), "sees");});
test("seespiegel -> seespiegel", function() {deepEqual( Stem("seespiegel"), "seespiegel");});
test("seetal -> seetal", function() {deepEqual( Stem("seetal"), "seetal");});
test("seetang -> seetang", function() {deepEqual( Stem("seetang"), "seetang");});
test("seetiere -> seeti", function() {deepEqual( Stem("seetiere"), "seeti");});
test("seeufer -> seeuf", function() {deepEqual( Stem("seeufer"), "seeuf");});
test("seeungeheuer -> seeungeheu", function() {deepEqual( Stem("seeungeheuer"), "seeungeheu");});
test("segel -> segel", function() {deepEqual( Stem("segel"), "segel");});
test("segelboot -> segelboot", function() {deepEqual( Stem("segelboot"), "segelboot");});
test("segelte -> segelt", function() {deepEqual( Stem("segelte"), "segelt");});
test("segen -> seg", function() {deepEqual( Stem("segen"), "seg");});
test("segens -> seg", function() {deepEqual( Stem("segens"), "seg");});
test("segensreiche -> segensreich", function() {deepEqual( Stem("segensreiche"), "segensreich");});
test("segensspruch -> segensspruch", function() {deepEqual( Stem("segensspruch"), "segensspruch");});
test("segn -> segn", function() {deepEqual( Stem("segn"), "segn");});
test("segne -> segn", function() {deepEqual( Stem("segne"), "segn");});
test("segnen -> segn", function() {deepEqual( Stem("segnen"), "segn");});
test("segnender -> segnend", function() {deepEqual( Stem("segnender"), "segnend");});
test("segnet -> segnet", function() {deepEqual( Stem("segnet"), "segnet");});
test("segnete -> segnet", function() {deepEqual( Stem("segnete"), "segnet");});
test("segnungen -> segnung", function() {deepEqual( Stem("segnungen"), "segnung");});
test("seh -> seh", function() {deepEqual( Stem("seh"), "seh");});
test("sehe -> seh", function() {deepEqual( Stem("sehe"), "seh");});
test("sehen -> seh", function() {deepEqual( Stem("sehen"), "seh");});
test("sehend -> sehend", function() {deepEqual( Stem("sehend"), "sehend");});
test("sehende -> sehend", function() {deepEqual( Stem("sehende"), "sehend");});
test("sehenden -> sehend", function() {deepEqual( Stem("sehenden"), "sehend");});
test("sehendie -> sehendi", function() {deepEqual( Stem("sehendie"), "sehendi");});
test("sehenswürdigkeiten -> sehenswurd", function() {deepEqual( Stem("sehenswürdigkeiten"), "sehenswurd");});
test("sehest -> seh", function() {deepEqual( Stem("sehest"), "seh");});
test("sehet -> sehet", function() {deepEqual( Stem("sehet"), "sehet");});
test("sehn -> sehn", function() {deepEqual( Stem("sehn"), "sehn");});
test("sehnen -> sehn", function() {deepEqual( Stem("sehnen"), "sehn");});
test("sehnippel -> sehnippel", function() {deepEqual( Stem("sehnippel"), "sehnippel");});
test("sehnlich -> sehnlich", function() {deepEqual( Stem("sehnlich"), "sehnlich");});
test("sehnsucht -> sehnsucht", function() {deepEqual( Stem("sehnsucht"), "sehnsucht");});
test("sehnsuchten -> sehnsucht", function() {deepEqual( Stem("sehnsuchten"), "sehnsucht");});
test("sehnsüchtig -> sehnsucht", function() {deepEqual( Stem("sehnsüchtig"), "sehnsucht");});
test("sehnsüchtige -> sehnsucht", function() {deepEqual( Stem("sehnsüchtige"), "sehnsucht");});
test("sehnsüchtiger -> sehnsucht", function() {deepEqual( Stem("sehnsüchtiger"), "sehnsucht");});
test("sehnsüchtiges -> sehnsucht", function() {deepEqual( Stem("sehnsüchtiges"), "sehnsucht");});
test("sehnte -> sehnt", function() {deepEqual( Stem("sehnte"), "sehnt");});
test("sehnten -> sehnt", function() {deepEqual( Stem("sehnten"), "sehnt");});
test("sehr -> sehr", function() {deepEqual( Stem("sehr"), "sehr");});
test("seht -> seht", function() {deepEqual( Stem("seht"), "seht");});
test("sehvermögen -> sehvermog", function() {deepEqual( Stem("sehvermögen"), "sehvermog");});
test("sei -> sei", function() {deepEqual( Stem("sei"), "sei");});
test("seicht -> seicht", function() {deepEqual( Stem("seicht"), "seicht");});
test("seichte -> seicht", function() {deepEqual( Stem("seichte"), "seicht");});
test("seichten -> seicht", function() {deepEqual( Stem("seichten"), "seicht");});
test("seichter -> seicht", function() {deepEqual( Stem("seichter"), "seicht");});
test("seichtigkeit -> seichtig", function() {deepEqual( Stem("seichtigkeit"), "seichtig");});
test("seid -> seid", function() {deepEqual( Stem("seid"), "seid");});
test("seide -> seid", function() {deepEqual( Stem("seide"), "seid");});
test("seiden -> seid", function() {deepEqual( Stem("seiden"), "seid");});
test("seidenartig -> seidenart", function() {deepEqual( Stem("seidenartig"), "seidenart");});
test("seidendamast -> seidendamast", function() {deepEqual( Stem("seidendamast"), "seidendamast");});
test("seidene -> seid", function() {deepEqual( Stem("seidene"), "seid");});
test("seidenen -> seid", function() {deepEqual( Stem("seidenen"), "seid");});
test("seidenes -> seid", function() {deepEqual( Stem("seidenes"), "seid");});
test("seidenfäden -> seidenfad", function() {deepEqual( Stem("seidenfäden"), "seidenfad");});
test("seidenfarben -> seidenfarb", function() {deepEqual( Stem("seidenfarben"), "seidenfarb");});
test("seidengewand -> seidengewand", function() {deepEqual( Stem("seidengewand"), "seidengewand");});
test("seidenkleid -> seidenkleid", function() {deepEqual( Stem("seidenkleid"), "seidenkleid");});
test("seidens -> seid", function() {deepEqual( Stem("seidens"), "seid");});
test("seidenzeug -> seidenzeug", function() {deepEqual( Stem("seidenzeug"), "seidenzeug");});
test("seider -> seid", function() {deepEqual( Stem("seider"), "seid");});
test("seien -> seien", function() {deepEqual( Stem("seien"), "seien");});
test("seiest -> seiest", function() {deepEqual( Stem("seiest"), "seiest");});
test("seife -> seif", function() {deepEqual( Stem("seife"), "seif");});
test("seifenblasen -> seifenblas", function() {deepEqual( Stem("seifenblasen"), "seifenblas");});
test("seifengalerie -> seifengaleri", function() {deepEqual( Stem("seifengalerie"), "seifengaleri");});
test("seifenschaum -> seifenschaum", function() {deepEqual( Stem("seifenschaum"), "seifenschaum");});
test("seifensieder -> seifensied", function() {deepEqual( Stem("seifensieder"), "seifensied");});
test("seifenstücken -> seifenstuck", function() {deepEqual( Stem("seifenstücken"), "seifenstuck");});
test("seigneur -> seigneur", function() {deepEqual( Stem("seigneur"), "seigneur");});
test("seile -> seil", function() {deepEqual( Stem("seile"), "seil");});
test("sein -> sein", function() {deepEqual( Stem("sein"), "sein");});
test("seine -> sein", function() {deepEqual( Stem("seine"), "sein");});
test("seinem -> sein", function() {deepEqual( Stem("seinem"), "sein");});
test("seinen -> sein", function() {deepEqual( Stem("seinen"), "sein");});
test("seiner -> sein", function() {deepEqual( Stem("seiner"), "sein");});
test("seinerseits -> seinerseit", function() {deepEqual( Stem("seinerseits"), "seinerseit");});
test("seinerzeit -> seinerzeit", function() {deepEqual( Stem("seinerzeit"), "seinerzeit");});
test("seines -> sein", function() {deepEqual( Stem("seines"), "sein");});
test("seinesgleichen -> seinesgleich", function() {deepEqual( Stem("seinesgleichen"), "seinesgleich");});
test("seinetwegen -> seinetweg", function() {deepEqual( Stem("seinetwegen"), "seinetweg");});
test("seinige -> seinig", function() {deepEqual( Stem("seinige"), "seinig");});
test("seinigen -> seinig", function() {deepEqual( Stem("seinigen"), "seinig");});
test("seins -> sein", function() {deepEqual( Stem("seins"), "sein");});
test("seir -> seir", function() {deepEqual( Stem("seir"), "seir");});
test("seist -> seist", function() {deepEqual( Stem("seist"), "seist");});
test("seit -> seit", function() {deepEqual( Stem("seit"), "seit");});
test("seitdem -> seitd", function() {deepEqual( Stem("seitdem"), "seitd");});
test("seite -> seit", function() {deepEqual( Stem("seite"), "seit");});
test("seiten -> seit", function() {deepEqual( Stem("seiten"), "seit");});
test("seitenblick -> seitenblick", function() {deepEqual( Stem("seitenblick"), "seitenblick");});
test("seiteneingang -> seiteneingang", function() {deepEqual( Stem("seiteneingang"), "seiteneingang");});
test("seitengang -> seitengang", function() {deepEqual( Stem("seitengang"), "seitengang");});
test("seitengasse -> seitengass", function() {deepEqual( Stem("seitengasse"), "seitengass");});
test("seitenplätzchen -> seitenplatzch", function() {deepEqual( Stem("seitenplätzchen"), "seitenplatzch");});
test("seitenschiff -> seitenschiff", function() {deepEqual( Stem("seitenschiff"), "seitenschiff");});
test("seitenschiffe -> seitenschiff", function() {deepEqual( Stem("seitenschiffe"), "seitenschiff");});
test("seitenstrassen -> seitenstrass", function() {deepEqual( Stem("seitenstrassen"), "seitenstrass");});
test("seitenstück -> seitenstuck", function() {deepEqual( Stem("seitenstück"), "seitenstuck");});
test("seitental -> seitental", function() {deepEqual( Stem("seitental"), "seitental");});
test("seitentälern -> seitental", function() {deepEqual( Stem("seitentälern"), "seitental");});
test("seitenwegen -> seitenweg", function() {deepEqual( Stem("seitenwegen"), "seitenweg");});
test("seither -> seith", function() {deepEqual( Stem("seither"), "seith");});
test("seitlich -> seitlich", function() {deepEqual( Stem("seitlich"), "seitlich");});
test("seitwärts -> seitwart", function() {deepEqual( Stem("seitwärts"), "seitwart");});
test("sek -> sek", function() {deepEqual( Stem("sek"), "sek");});
test("sekelbewahrer -> sekelbewahr", function() {deepEqual( Stem("sekelbewahrer"), "sekelbewahr");});
test("sekretariat -> sekretariat", function() {deepEqual( Stem("sekretariat"), "sekretariat");});
test("sekretärin -> sekretarin", function() {deepEqual( Stem("sekretärin"), "sekretarin");});
test("sekten -> sekt", function() {deepEqual( Stem("sekten"), "sekt");});
test("sektierern -> sekti", function() {deepEqual( Stem("sektierern"), "sekti");});
test("sekunde -> sekund", function() {deepEqual( Stem("sekunde"), "sekund");});
test("sekunden -> sekund", function() {deepEqual( Stem("sekunden"), "sekund");});
test("sekundenlange -> sekundenlang", function() {deepEqual( Stem("sekundenlange"), "sekundenlang");});
test("sekundenzeiger -> sekundenzeig", function() {deepEqual( Stem("sekundenzeiger"), "sekundenzeig");});
test("sel -> sel", function() {deepEqual( Stem("sel"), "sel");});
test("selbe -> selb", function() {deepEqual( Stem("selbe"), "selb");});
test("selbem -> selb", function() {deepEqual( Stem("selbem"), "selb");});
test("selben -> selb", function() {deepEqual( Stem("selben"), "selb");});
test("selber -> selb", function() {deepEqual( Stem("selber"), "selb");});
test("selbige -> selbig", function() {deepEqual( Stem("selbige"), "selbig");});
test("selbigen -> selbig", function() {deepEqual( Stem("selbigen"), "selbig");});
test("selbiger -> selbig", function() {deepEqual( Stem("selbiger"), "selbig");});
test("selbiges -> selbig", function() {deepEqual( Stem("selbiges"), "selbig");});
test("selbigsmal -> selbigsmal", function() {deepEqual( Stem("selbigsmal"), "selbigsmal");});
test("selbst -> selb", function() {deepEqual( Stem("selbst"), "selb");});
test("selbständig -> selbstand", function() {deepEqual( Stem("selbständig"), "selbstand");});
test("selbständige -> selbstand", function() {deepEqual( Stem("selbständige"), "selbstand");});
test("selbständigen -> selbstand", function() {deepEqual( Stem("selbständigen"), "selbstand");});
test("selbständigkeit -> selbstand", function() {deepEqual( Stem("selbständigkeit"), "selbstand");});
test("selbstanklagen -> selbstanklag", function() {deepEqual( Stem("selbstanklagen"), "selbstanklag");});
test("selbstbeherrschung -> selbstbeherrsch", function() {deepEqual( Stem("selbstbeherrschung"), "selbstbeherrsch");});
test("selbstberedung -> selbstbered", function() {deepEqual( Stem("selbstberedung"), "selbstbered");});
test("selbstberedungen -> selbstbered", function() {deepEqual( Stem("selbstberedungen"), "selbstbered");});
test("selbstbewussten -> selbstbewusst", function() {deepEqual( Stem("selbstbewussten"), "selbstbewusst");});
test("selbstbewusstsein -> selbstbewusstsein", function() {deepEqual( Stem("selbstbewusstsein"), "selbstbewusstsein");});
test("selbstentäusserung -> selbstentausser", function() {deepEqual( Stem("selbstentäusserung"), "selbstentausser");});
test("selbsterkenntnis -> selbsterkenntnis", function() {deepEqual( Stem("selbsterkenntnis"), "selbsterkenntnis");});
test("selbsterniedrigung -> selbsterniedr", function() {deepEqual( Stem("selbsterniedrigung"), "selbsterniedr");});
test("selbstgefälligkeit -> selbstgefall", function() {deepEqual( Stem("selbstgefälligkeit"), "selbstgefall");});
test("selbstgemacht -> selbstgemacht", function() {deepEqual( Stem("selbstgemacht"), "selbstgemacht");});
test("selbstgenugsamkeit -> selbstgenugsam", function() {deepEqual( Stem("selbstgenugsamkeit"), "selbstgenugsam");});
test("selbstgerechtigkeit -> selbstgerecht", function() {deepEqual( Stem("selbstgerechtigkeit"), "selbstgerecht");});
test("selbstgeschaffenem -> selbstgeschaff", function() {deepEqual( Stem("selbstgeschaffenem"), "selbstgeschaff");});
test("selbstgewählten -> selbstgewahlt", function() {deepEqual( Stem("selbstgewählten"), "selbstgewahlt");});
test("selbstgezogen -> selbstgezog", function() {deepEqual( Stem("selbstgezogen"), "selbstgezog");});
test("selbstherrlichkeit -> selbstherr", function() {deepEqual( Stem("selbstherrlichkeit"), "selbstherr");});
test("selbstigen -> selbstig", function() {deepEqual( Stem("selbstigen"), "selbstig");});
test("selbstliebe -> selbstlieb", function() {deepEqual( Stem("selbstliebe"), "selbstlieb");});
test("selbstmord -> selbstmord", function() {deepEqual( Stem("selbstmord"), "selbstmord");});
test("selbstprüfung -> selbstpruf", function() {deepEqual( Stem("selbstprüfung"), "selbstpruf");});
test("selbstregierung -> selbstregier", function() {deepEqual( Stem("selbstregierung"), "selbstregier");});
test("selbstschätzung -> selbstschatz", function() {deepEqual( Stem("selbstschätzung"), "selbstschatz");});
test("selbstsucht -> selbstsucht", function() {deepEqual( Stem("selbstsucht"), "selbstsucht");});
test("selbstsüchtige -> selbstsucht", function() {deepEqual( Stem("selbstsüchtige"), "selbstsucht");});
test("selbsttätige -> selbsttat", function() {deepEqual( Stem("selbsttätige"), "selbsttat");});
test("selbsttätigen -> selbsttat", function() {deepEqual( Stem("selbsttätigen"), "selbsttat");});
test("selbstverantwortung -> selbstverantwort", function() {deepEqual( Stem("selbstverantwortung"), "selbstverantwort");});
test("selbstverdammung -> selbstverdamm", function() {deepEqual( Stem("selbstverdammung"), "selbstverdamm");});
test("selbstvergessen -> selbstvergess", function() {deepEqual( Stem("selbstvergessen"), "selbstvergess");});
test("selbstvergessenheit -> selbstvergess", function() {deepEqual( Stem("selbstvergessenheit"), "selbstvergess");});
test("selbstvergnügten -> selbstvergnugt", function() {deepEqual( Stem("selbstvergnügten"), "selbstvergnugt");});
test("selbstverherrlichung -> selbstverherrlich", function() {deepEqual( Stem("selbstverherrlichung"), "selbstverherrlich");});
test("selbstverständlich -> selbstverstand", function() {deepEqual( Stem("selbstverständlich"), "selbstverstand");});
test("selbstverständlichen -> selbstverstand", function() {deepEqual( Stem("selbstverständlichen"), "selbstverstand");});
test("selbstvertrauen -> selbstvertrau", function() {deepEqual( Stem("selbstvertrauen"), "selbstvertrau");});
test("selbstverwalteten -> selbstverwaltet", function() {deepEqual( Stem("selbstverwalteten"), "selbstverwaltet");});
test("selbstzufrieden -> selbstzufried", function() {deepEqual( Stem("selbstzufrieden"), "selbstzufried");});
test("selbstzufriedenheit -> selbstzufried", function() {deepEqual( Stem("selbstzufriedenheit"), "selbstzufried");});
test("seldwyl -> seldwyl", function() {deepEqual( Stem("seldwyl"), "seldwyl");});
test("seldwyla -> seldwyla", function() {deepEqual( Stem("seldwyla"), "seldwyla");});
test("seldwyler -> seldwyl", function() {deepEqual( Stem("seldwyler"), "seldwyl");});
test("seldwylerinnen -> seldwylerinn", function() {deepEqual( Stem("seldwylerinnen"), "seldwylerinn");});
test("seldwylern -> seldwyl", function() {deepEqual( Stem("seldwylern"), "seldwyl");});
test("seldwylers -> seldwyl", function() {deepEqual( Stem("seldwylers"), "seldwyl");});
test("seldwylertagen -> seldwylertag", function() {deepEqual( Stem("seldwylertagen"), "seldwylertag");});
test("selig -> selig", function() {deepEqual( Stem("selig"), "selig");});
test("selige -> selig", function() {deepEqual( Stem("selige"), "selig");});
test("seligem -> selig", function() {deepEqual( Stem("seligem"), "selig");});
test("seligen -> selig", function() {deepEqual( Stem("seligen"), "selig");});
test("seliges -> selig", function() {deepEqual( Stem("seliges"), "selig");});
test("seligkeit -> selig", function() {deepEqual( Stem("seligkeit"), "selig");});
test("seligkeiten -> selig", function() {deepEqual( Stem("seligkeiten"), "selig");});
test("seligmachende -> seligmach", function() {deepEqual( Stem("seligmachende"), "seligmach");});
test("seligmachenden -> seligmach", function() {deepEqual( Stem("seligmachenden"), "seligmach");});
test("seligmachung -> seligmach", function() {deepEqual( Stem("seligmachung"), "seligmach");});
test("seligwerden -> seligwerd", function() {deepEqual( Stem("seligwerden"), "seligwerd");});
test("selk -> selk", function() {deepEqual( Stem("selk"), "selk");});
test("selm -> selm", function() {deepEqual( Stem("selm"), "selm");});
test("selten -> selt", function() {deepEqual( Stem("selten"), "selt");});
test("seltene -> selt", function() {deepEqual( Stem("seltene"), "selt");});
test("seltenen -> selt", function() {deepEqual( Stem("seltenen"), "selt");});
test("seltener -> selt", function() {deepEqual( Stem("seltener"), "selt");});
test("seltenheit -> selt", function() {deepEqual( Stem("seltenheit"), "selt");});
test("seltensten -> selten", function() {deepEqual( Stem("seltensten"), "selten");});
test("seltsam -> seltsam", function() {deepEqual( Stem("seltsam"), "seltsam");});
test("seltsame -> seltsam", function() {deepEqual( Stem("seltsame"), "seltsam");});
test("seltsamem -> seltsam", function() {deepEqual( Stem("seltsamem"), "seltsam");});
test("seltsamen -> seltsam", function() {deepEqual( Stem("seltsamen"), "seltsam");});
test("seltsamer -> seltsam", function() {deepEqual( Stem("seltsamer"), "seltsam");});
test("seltsamerweise -> seltsamerweis", function() {deepEqual( Stem("seltsamerweise"), "seltsamerweis");});
test("seltsames -> seltsam", function() {deepEqual( Stem("seltsames"), "seltsam");});
test("seltsamkeit -> seltsam", function() {deepEqual( Stem("seltsamkeit"), "seltsam");});
test("seltsamlich -> seltsam", function() {deepEqual( Stem("seltsamlich"), "seltsam");});
test("sem -> sem", function() {deepEqual( Stem("sem"), "sem");});
test("semen -> sem", function() {deepEqual( Stem("semen"), "sem");});
test("semester -> sem", function() {deepEqual( Stem("semester"), "sem");});
test("semmelbröseln -> semmelbroseln", function() {deepEqual( Stem("semmelbröseln"), "semmelbroseln");});
test("sende -> send", function() {deepEqual( Stem("sende"), "send");});
test("sendeminute -> sendeminut", function() {deepEqual( Stem("sendeminute"), "sendeminut");});
test("senden -> send", function() {deepEqual( Stem("senden"), "send");});
test("sender -> send", function() {deepEqual( Stem("sender"), "send");});
test("sendest -> send", function() {deepEqual( Stem("sendest"), "send");});
test("sendet -> sendet", function() {deepEqual( Stem("sendet"), "sendet");});
test("sendlinge -> sendling", function() {deepEqual( Stem("sendlinge"), "sendling");});
test("sendung -> sendung", function() {deepEqual( Stem("sendung"), "sendung");});
test("sendungen -> sendung", function() {deepEqual( Stem("sendungen"), "sendung");});
test("senf -> senf", function() {deepEqual( Stem("senf"), "senf");});
test("senfkorn -> senfkorn", function() {deepEqual( Stem("senfkorn"), "senfkorn");});
test("senke -> senk", function() {deepEqual( Stem("senke"), "senk");});
test("senken -> senk", function() {deepEqual( Stem("senken"), "senk");});
test("senkend -> senkend", function() {deepEqual( Stem("senkend"), "senkend");});
test("senket -> senket", function() {deepEqual( Stem("senket"), "senket");});
test("senkrecht -> senkrecht", function() {deepEqual( Stem("senkrecht"), "senkrecht");});
test("senkt -> senkt", function() {deepEqual( Stem("senkt"), "senkt");});
test("senkte -> senkt", function() {deepEqual( Stem("senkte"), "senkt");});
test("senkten -> senkt", function() {deepEqual( Stem("senkten"), "senkt");});
test("senkung -> senkung", function() {deepEqual( Stem("senkung"), "senkung");});
test("sennerin -> sennerin", function() {deepEqual( Stem("sennerin"), "sennerin");});
test("sennhütte -> sennhutt", function() {deepEqual( Stem("sennhütte"), "sennhutt");});
test("sensatio -> sensatio", function() {deepEqual( Stem("sensatio"), "sensatio");});
test("sense -> sens", function() {deepEqual( Stem("sense"), "sens");});
test("sentimentale -> sentimental", function() {deepEqual( Stem("sentimentale"), "sentimental");});
test("september -> septemb", function() {deepEqual( Stem("september"), "septemb");});
test("septembergegend -> septembergeg", function() {deepEqual( Stem("septembergegend"), "septembergeg");});
test("septembermorgen -> septembermorg", function() {deepEqual( Stem("septembermorgen"), "septembermorg");});
test("sequentium -> sequentium", function() {deepEqual( Stem("sequentium"), "sequentium");});
test("serach -> serach", function() {deepEqual( Stem("serach"), "serach");});
test("serie -> seri", function() {deepEqual( Stem("serie"), "seri");});
test("serpentum -> serpentum", function() {deepEqual( Stem("serpentum"), "serpentum");});
test("service -> servic", function() {deepEqual( Stem("service"), "servic");});
test("servieren -> servi", function() {deepEqual( Stem("servieren"), "servi");});
test("serviert -> serviert", function() {deepEqual( Stem("serviert"), "serviert");});
test("servierter -> serviert", function() {deepEqual( Stem("servierter"), "serviert");});
test("serviette -> serviett", function() {deepEqual( Stem("serviette"), "serviett");});
test("servietten -> serviett", function() {deepEqual( Stem("servietten"), "serviett");});
test("sessel -> sessel", function() {deepEqual( Stem("sessel"), "sessel");});
test("sesselchen -> sesselch", function() {deepEqual( Stem("sesselchen"), "sesselch");});
test("sesselkleber -> sesselkleb", function() {deepEqual( Stem("sesselkleber"), "sesselkleb");});
test("sessellehne -> sessellehn", function() {deepEqual( Stem("sessellehne"), "sessellehn");});
test("sesshaft -> sesshaft", function() {deepEqual( Stem("sesshaft"), "sesshaft");});
test("sesshaften -> sesshaft", function() {deepEqual( Stem("sesshaften"), "sesshaft");});
test("settember -> settemb", function() {deepEqual( Stem("settember"), "settemb");});
test("setz -> setz", function() {deepEqual( Stem("setz"), "setz");});
test("setze -> setz", function() {deepEqual( Stem("setze"), "setz");});
test("setzen -> setz", function() {deepEqual( Stem("setzen"), "setz");});
test("setzet -> setzet", function() {deepEqual( Stem("setzet"), "setzet");});
test("setzt -> setzt", function() {deepEqual( Stem("setzt"), "setzt");});
test("setzte -> setzt", function() {deepEqual( Stem("setzte"), "setzt");});
test("setzten -> setzt", function() {deepEqual( Stem("setzten"), "setzt");});
test("seu -> seu", function() {deepEqual( Stem("seu"), "seu");});
test("seuchengefahr -> seuchengefahr", function() {deepEqual( Stem("seuchengefahr"), "seuchengefahr");});
test("seufzen -> seufz", function() {deepEqual( Stem("seufzen"), "seufz");});
test("seufzend -> seufzend", function() {deepEqual( Stem("seufzend"), "seufzend");});
test("seufzens -> seufz", function() {deepEqual( Stem("seufzens"), "seufz");});
test("seufzer -> seufz", function() {deepEqual( Stem("seufzer"), "seufz");});
test("seufzern -> seufz", function() {deepEqual( Stem("seufzern"), "seufz");});
test("seufzt -> seufzt", function() {deepEqual( Stem("seufzt"), "seufzt");});
test("seufzte -> seufzt", function() {deepEqual( Stem("seufzte"), "seufzt");});
test("seufzten -> seufzt", function() {deepEqual( Stem("seufzten"), "seufzt");});
test("sexologie -> sexologi", function() {deepEqual( Stem("sexologie"), "sexologi");});
test("sexuelle -> sexuell", function() {deepEqual( Stem("sexuelle"), "sexuell");});
test("shakespeare -> shakespear", function() {deepEqual( Stem("shakespeare"), "shakespear");});
test("shoa -> shoa", function() {deepEqual( Stem("shoa"), "shoa");});
test("shylocks -> shylock", function() {deepEqual( Stem("shylocks"), "shylock");});
test("si -> si", function() {deepEqual( Stem("si"), "si");});
test("sialiquid -> sialiquid", function() {deepEqual( Stem("sialiquid"), "sialiquid");});
test("sich -> sich", function() {deepEqual( Stem("sich"), "sich");});
test("sichbearbeiten -> sichbearbeit", function() {deepEqual( Stem("sichbearbeiten"), "sichbearbeit");});
test("sicheln -> sicheln", function() {deepEqual( Stem("sicheln"), "sicheln");});
test("sicher -> sich", function() {deepEqual( Stem("sicher"), "sich");});
test("sichere -> sich", function() {deepEqual( Stem("sichere"), "sich");});
test("sicheren -> sich", function() {deepEqual( Stem("sicheren"), "sich");});
test("sicherer -> sich", function() {deepEqual( Stem("sicherer"), "sich");});
test("sicheres -> sich", function() {deepEqual( Stem("sicheres"), "sich");});
test("sichergehenden -> sichergeh", function() {deepEqual( Stem("sichergehenden"), "sichergeh");});
test("sicherheit -> sich", function() {deepEqual( Stem("sicherheit"), "sich");});
test("sicherheitsbeamten -> sicherheitsbeamt", function() {deepEqual( Stem("sicherheitsbeamten"), "sicherheitsbeamt");});
test("sicherheitsbehörden -> sicherheitsbehord", function() {deepEqual( Stem("sicherheitsbehörden"), "sicherheitsbehord");});
test("sicherheitshalber -> sicherheitshalb", function() {deepEqual( Stem("sicherheitshalber"), "sicherheitshalb");});
test("sicherheitskontrolle -> sicherheitskontroll", function() {deepEqual( Stem("sicherheitskontrolle"), "sicherheitskontroll");});
test("sicherheitskräfte -> sicherheitskraft", function() {deepEqual( Stem("sicherheitskräfte"), "sicherheitskraft");});
test("sicherheitskräften -> sicherheitskraft", function() {deepEqual( Stem("sicherheitskräften"), "sicherheitskraft");});
test("sicherheitsleute -> sicherheitsleut", function() {deepEqual( Stem("sicherheitsleute"), "sicherheitsleut");});
test("sicherheitspolizei -> sicherheitspolizei", function() {deepEqual( Stem("sicherheitspolizei"), "sicherheitspolizei");});
test("sicherheitsregeln -> sicherheitsregeln", function() {deepEqual( Stem("sicherheitsregeln"), "sicherheitsregeln");});
test("sicherheitsstation -> sicherheitsstation", function() {deepEqual( Stem("sicherheitsstation"), "sicherheitsstation");});
test("sicherlich -> sich", function() {deepEqual( Stem("sicherlich"), "sich");});
test("sichern -> sich", function() {deepEqual( Stem("sichern"), "sich");});
test("sicherste -> sicherst", function() {deepEqual( Stem("sicherste"), "sicherst");});
test("sichersten -> sicherst", function() {deepEqual( Stem("sichersten"), "sicherst");});
test("sicherte -> sichert", function() {deepEqual( Stem("sicherte"), "sichert");});
test("sicherung -> sicher", function() {deepEqual( Stem("sicherung"), "sicher");});
test("sichniederwerfen -> sichniederwerf", function() {deepEqual( Stem("sichniederwerfen"), "sichniederwerf");});
test("sichri -> sichri", function() {deepEqual( Stem("sichri"), "sichri");});
test("sichs -> sich", function() {deepEqual( Stem("sichs"), "sich");});
test("sicht -> sicht", function() {deepEqual( Stem("sicht"), "sicht");});
test("sichtbar -> sichtbar", function() {deepEqual( Stem("sichtbar"), "sichtbar");});
test("sichtbare -> sichtbar", function() {deepEqual( Stem("sichtbare"), "sichtbar");});
test("sichtbaren -> sichtbar", function() {deepEqual( Stem("sichtbaren"), "sichtbar");});
test("sichtende -> sichtend", function() {deepEqual( Stem("sichtende"), "sichtend");});
test("sichtlich -> sichtlich", function() {deepEqual( Stem("sichtlich"), "sichtlich");});
test("sichtlichen -> sichtlich", function() {deepEqual( Stem("sichtlichen"), "sichtlich");});
test("sichtlicher -> sichtlich", function() {deepEqual( Stem("sichtlicher"), "sichtlich");});
test("sichtweite -> sichtweit", function() {deepEqual( Stem("sichtweite"), "sichtweit");});
test("sickert -> sickert", function() {deepEqual( Stem("sickert"), "sickert");});
test("sicut -> sicut", function() {deepEqual( Stem("sicut"), "sicut");});
test("sie -> sie", function() {deepEqual( Stem("sie"), "sie");});
test("sieben -> sieb", function() {deepEqual( Stem("sieben"), "sieb");});
test("siebenfach -> siebenfach", function() {deepEqual( Stem("siebenfach"), "siebenfach");});
test("siebenfältig -> siebenfalt", function() {deepEqual( Stem("siebenfältig"), "siebenfalt");});
test("siebenhundert -> siebenhundert", function() {deepEqual( Stem("siebenhundert"), "siebenhundert");});
test("siebenköpfigen -> siebenkopf", function() {deepEqual( Stem("siebenköpfigen"), "siebenkopf");});
test("siebenmal -> siebenmal", function() {deepEqual( Stem("siebenmal"), "siebenmal");});
test("siebensächelchen -> siebensachelch", function() {deepEqual( Stem("siebensächelchen"), "siebensachelch");});
test("siebensachen -> siebensach", function() {deepEqual( Stem("siebensachen"), "siebensach");});
test("siebente -> siebent", function() {deepEqual( Stem("siebente"), "siebent");});
test("siebenten -> siebent", function() {deepEqual( Stem("siebenten"), "siebent");});
test("siebenter -> siebent", function() {deepEqual( Stem("siebenter"), "siebent");});
test("siebentes -> siebent", function() {deepEqual( Stem("siebentes"), "siebent");});
test("siebenundachtzig -> siebenundachtz", function() {deepEqual( Stem("siebenundachtzig"), "siebenundachtz");});
test("siebenundsiebzig -> siebenundsiebz", function() {deepEqual( Stem("siebenundsiebzig"), "siebenundsiebz");});
test("siebenundwanzig -> siebenundwanz", function() {deepEqual( Stem("siebenundwanzig"), "siebenundwanz");});
test("siebenundzwanzig -> siebenundzwanz", function() {deepEqual( Stem("siebenundzwanzig"), "siebenundzwanz");});
test("siebenundzwanzigmal -> siebenundzwanzigmal", function() {deepEqual( Stem("siebenundzwanzigmal"), "siebenundzwanzigmal");});
test("siebenundzwanzigmalige -> siebenundzwanzigmal", function() {deepEqual( Stem("siebenundzwanzigmalige"), "siebenundzwanzigmal");});
test("siebenzahl -> siebenzahl", function() {deepEqual( Stem("siebenzahl"), "siebenzahl");});
test("siebenzig -> siebenz", function() {deepEqual( Stem("siebenzig"), "siebenz");});
test("siebenzigmal -> siebenzigmal", function() {deepEqual( Stem("siebenzigmal"), "siebenzigmal");});
test("siebsten -> sieb", function() {deepEqual( Stem("siebsten"), "sieb");});
test("siebte -> siebt", function() {deepEqual( Stem("siebte"), "siebt");});
test("siebzehn -> siebzehn", function() {deepEqual( Stem("siebzehn"), "siebzehn");});
test("siebzehnten -> siebzehnt", function() {deepEqual( Stem("siebzehnten"), "siebzehnt");});
test("siebzig -> siebzig", function() {deepEqual( Stem("siebzig"), "siebzig");});
test("siebziger -> siebzig", function() {deepEqual( Stem("siebziger"), "siebzig");});
test("siebzigmal -> siebzigmal", function() {deepEqual( Stem("siebzigmal"), "siebzigmal");});
test("siech -> siech", function() {deepEqual( Stem("siech"), "siech");});
test("siede -> sied", function() {deepEqual( Stem("siede"), "sied");});
test("siedeln -> siedeln", function() {deepEqual( Stem("siedeln"), "siedeln");});
test("siedende -> siedend", function() {deepEqual( Stem("siedende"), "siedend");});
test("siedendheiss -> siedendheiss", function() {deepEqual( Stem("siedendheiss"), "siedendheiss");});
test("sieg -> sieg", function() {deepEqual( Stem("sieg"), "sieg");});
test("siege -> sieg", function() {deepEqual( Stem("siege"), "sieg");});
test("siegel -> siegel", function() {deepEqual( Stem("siegel"), "siegel");});
test("siegellack -> siegellack", function() {deepEqual( Stem("siegellack"), "siegellack");});
test("siegeln -> siegeln", function() {deepEqual( Stem("siegeln"), "siegeln");});
test("siegelring -> siegelring", function() {deepEqual( Stem("siegelring"), "siegelring");});
test("siegen -> sieg", function() {deepEqual( Stem("siegen"), "sieg");});
test("siegende -> siegend", function() {deepEqual( Stem("siegende"), "siegend");});
test("sieger -> sieg", function() {deepEqual( Stem("sieger"), "sieg");});
test("sieges -> sieg", function() {deepEqual( Stem("sieges"), "sieg");});
test("sieghafte -> sieghaft", function() {deepEqual( Stem("sieghafte"), "sieghaft");});
test("sieghaften -> sieghaft", function() {deepEqual( Stem("sieghaften"), "sieghaft");});
test("siegte -> siegt", function() {deepEqual( Stem("siegte"), "siegt");});
test("sieh -> sieh", function() {deepEqual( Stem("sieh"), "sieh");});
test("siehe -> sieh", function() {deepEqual( Stem("siehe"), "sieh");});
test("siehst -> sieh", function() {deepEqual( Stem("siehst"), "sieh");});
test("sieht -> sieht", function() {deepEqual( Stem("sieht"), "sieht");});
test("siena -> siena", function() {deepEqual( Stem("siena"), "siena");});
test("sige -> sig", function() {deepEqual( Stem("sige"), "sig");});
test("signal -> signal", function() {deepEqual( Stem("signal"), "signal");});
test("silbe -> silb", function() {deepEqual( Stem("silbe"), "silb");});
test("silber -> silb", function() {deepEqual( Stem("silber"), "silb");});
test("silberbechern -> silberbech", function() {deepEqual( Stem("silberbechern"), "silberbech");});
test("silberborten -> silberbort", function() {deepEqual( Stem("silberborten"), "silberbort");});
test("silberbschlagene -> silberbschlag", function() {deepEqual( Stem("silberbschlagene"), "silberbschlag");});
test("silberbügel -> silberbugel", function() {deepEqual( Stem("silberbügel"), "silberbugel");});
test("silbergewölk -> silbergewolk", function() {deepEqual( Stem("silbergewölk"), "silbergewolk");});
test("silberglöckchen -> silberglockch", function() {deepEqual( Stem("silberglöckchen"), "silberglockch");});
test("silbergrauen -> silbergrau", function() {deepEqual( Stem("silbergrauen"), "silbergrau");});
test("silberhaarige -> silberhaar", function() {deepEqual( Stem("silberhaarige"), "silberhaar");});
test("silberhelle -> silberhell", function() {deepEqual( Stem("silberhelle"), "silberhell");});
test("silberkleidern -> silberkleid", function() {deepEqual( Stem("silberkleidern"), "silberkleid");});
test("silberlicht -> silberlicht", function() {deepEqual( Stem("silberlicht"), "silberlicht");});
test("silbermesser -> silbermess", function() {deepEqual( Stem("silbermesser"), "silbermess");});
test("silberne -> silbern", function() {deepEqual( Stem("silberne"), "silbern");});
test("silbernem -> silbern", function() {deepEqual( Stem("silbernem"), "silbern");});
test("silbernen -> silbern", function() {deepEqual( Stem("silbernen"), "silbern");});
test("silberner -> silbern", function() {deepEqual( Stem("silberner"), "silbern");});
test("silbernes -> silbern", function() {deepEqual( Stem("silbernes"), "silbern");});
test("silberreinen -> silberrein", function() {deepEqual( Stem("silberreinen"), "silberrein");});
test("silbers -> silb", function() {deepEqual( Stem("silbers"), "silb");});
test("silbersand -> silbersand", function() {deepEqual( Stem("silbersand"), "silbersand");});
test("silberschleiern -> silberschlei", function() {deepEqual( Stem("silberschleiern"), "silberschlei");});
test("silberschüssel -> silberschussel", function() {deepEqual( Stem("silberschüssel"), "silberschussel");});
test("silberseidigsten -> silberseid", function() {deepEqual( Stem("silberseidigsten"), "silberseid");});
test("silberstimmchen -> silberstimmch", function() {deepEqual( Stem("silberstimmchen"), "silberstimmch");});
test("silberwolle -> silberwoll", function() {deepEqual( Stem("silberwolle"), "silberwoll");});
test("silbrige -> silbrig", function() {deepEqual( Stem("silbrige"), "silbrig");});
test("siloam -> siloam", function() {deepEqual( Stem("siloam"), "siloam");});
test("simei -> simei", function() {deepEqual( Stem("simei"), "simei");});
test("similitudo -> similitudo", function() {deepEqual( Stem("similitudo"), "similitudo");});
test("simmsen -> simms", function() {deepEqual( Stem("simmsen"), "simms");});
test("simon -> simon", function() {deepEqual( Stem("simon"), "simon");});
test("simpel -> simpel", function() {deepEqual( Stem("simpel"), "simpel");});
test("simple -> simpl", function() {deepEqual( Stem("simple"), "simpl");});
test("simsen -> sims", function() {deepEqual( Stem("simsen"), "sims");});
test("simson -> simson", function() {deepEqual( Stem("simson"), "simson");});
test("simus -> simus", function() {deepEqual( Stem("simus"), "simus");});
test("sinai -> sinai", function() {deepEqual( Stem("sinai"), "sinai");});
test("sind -> sind", function() {deepEqual( Stem("sind"), "sind");});
test("sine -> sin", function() {deepEqual( Stem("sine"), "sin");});
test("sing -> sing", function() {deepEqual( Stem("sing"), "sing");});
test("singbuch -> singbuch", function() {deepEqual( Stem("singbuch"), "singbuch");});
test("singe -> sing", function() {deepEqual( Stem("singe"), "sing");});
test("singen -> sing", function() {deepEqual( Stem("singen"), "sing");});
test("singend -> singend", function() {deepEqual( Stem("singend"), "singend");});
test("singende -> singend", function() {deepEqual( Stem("singende"), "singend");});
test("singenden -> singend", function() {deepEqual( Stem("singenden"), "singend");});
test("singender -> singend", function() {deepEqual( Stem("singender"), "singend");});
test("singerei -> singerei", function() {deepEqual( Stem("singerei"), "singerei");});
test("singet -> singet", function() {deepEqual( Stem("singet"), "singet");});
test("singst -> sing", function() {deepEqual( Stem("singst"), "sing");});
test("singt -> singt", function() {deepEqual( Stem("singt"), "singt");});
test("sinken -> sink", function() {deepEqual( Stem("sinken"), "sink");});
test("sinkende -> sinkend", function() {deepEqual( Stem("sinkende"), "sinkend");});
test("sinkendem -> sinkend", function() {deepEqual( Stem("sinkendem"), "sinkend");});
test("sinkenden -> sinkend", function() {deepEqual( Stem("sinkenden"), "sinkend");});
test("sinkens -> sink", function() {deepEqual( Stem("sinkens"), "sink");});
test("sinkt -> sinkt", function() {deepEqual( Stem("sinkt"), "sinkt");});
test("sinn -> sinn", function() {deepEqual( Stem("sinn"), "sinn");});
test("sinnbild -> sinnbild", function() {deepEqual( Stem("sinnbild"), "sinnbild");});
test("sinnbilder -> sinnbild", function() {deepEqual( Stem("sinnbilder"), "sinnbild");});
test("sinnbildern -> sinnbild", function() {deepEqual( Stem("sinnbildern"), "sinnbild");});
test("sinne -> sinn", function() {deepEqual( Stem("sinne"), "sinn");});
test("sinnen -> sinn", function() {deepEqual( Stem("sinnen"), "sinn");});
test("sinnend -> sinnend", function() {deepEqual( Stem("sinnend"), "sinnend");});
test("sinnenwelt -> sinnenwelt", function() {deepEqual( Stem("sinnenwelt"), "sinnenwelt");});
test("sinnenwesens -> sinnenwes", function() {deepEqual( Stem("sinnenwesens"), "sinnenwes");});
test("sinnes -> sinn", function() {deepEqual( Stem("sinnes"), "sinn");});
test("sinnesart -> sinnesart", function() {deepEqual( Stem("sinnesart"), "sinnesart");});
test("sinnesarten -> sinnesart", function() {deepEqual( Stem("sinnesarten"), "sinnesart");});
test("sinnestäuschungen -> sinnestausch", function() {deepEqual( Stem("sinnestäuschungen"), "sinnestausch");});
test("sinnesvorstellungen -> sinnesvorstell", function() {deepEqual( Stem("sinnesvorstellungen"), "sinnesvorstell");});
test("sinneswahrnehmung -> sinneswahrnehm", function() {deepEqual( Stem("sinneswahrnehmung"), "sinneswahrnehm");});
test("sinnet -> sinnet", function() {deepEqual( Stem("sinnet"), "sinnet");});
test("sinngebung -> sinngeb", function() {deepEqual( Stem("sinngebung"), "sinngeb");});
test("sinniert -> sinniert", function() {deepEqual( Stem("sinniert"), "sinniert");});
test("sinnig -> sinnig", function() {deepEqual( Stem("sinnig"), "sinnig");});
test("sinnige -> sinnig", function() {deepEqual( Stem("sinnige"), "sinnig");});
test("sinnlich -> sinnlich", function() {deepEqual( Stem("sinnlich"), "sinnlich");});
test("sinnlichbedingten -> sinnlichbedingt", function() {deepEqual( Stem("sinnlichbedingten"), "sinnlichbedingt");});
test("sinnliche -> sinnlich", function() {deepEqual( Stem("sinnliche"), "sinnlich");});
test("sinnlichem -> sinnlich", function() {deepEqual( Stem("sinnlichem"), "sinnlich");});
test("sinnlichen -> sinnlich", function() {deepEqual( Stem("sinnlichen"), "sinnlich");});
test("sinnlicher -> sinnlich", function() {deepEqual( Stem("sinnlicher"), "sinnlich");});
test("sinnliches -> sinnlich", function() {deepEqual( Stem("sinnliches"), "sinnlich");});
test("sinnlichkeit -> sinnlich", function() {deepEqual( Stem("sinnlichkeit"), "sinnlich");});
test("sinnlos -> sinnlos", function() {deepEqual( Stem("sinnlos"), "sinnlos");});
test("sinnlose -> sinnlos", function() {deepEqual( Stem("sinnlose"), "sinnlos");});
test("sinnlosem -> sinnlos", function() {deepEqual( Stem("sinnlosem"), "sinnlos");});
test("sinnloser -> sinnlos", function() {deepEqual( Stem("sinnloser"), "sinnlos");});
test("sinnloses -> sinnlos", function() {deepEqual( Stem("sinnloses"), "sinnlos");});
test("sinnlosigkeit -> sinnlos", function() {deepEqual( Stem("sinnlosigkeit"), "sinnlos");});
test("sinnorganen -> sinnorgan", function() {deepEqual( Stem("sinnorganen"), "sinnorgan");});
test("sinnorganes -> sinnorgan", function() {deepEqual( Stem("sinnorganes"), "sinnorgan");});
test("sinnreich -> sinnreich", function() {deepEqual( Stem("sinnreich"), "sinnreich");});
test("sinnreiche -> sinnreich", function() {deepEqual( Stem("sinnreiche"), "sinnreich");});
test("sinnreichen -> sinnreich", function() {deepEqual( Stem("sinnreichen"), "sinnreich");});
test("sinns -> sinn", function() {deepEqual( Stem("sinns"), "sinn");});
test("sinnstiftung -> sinnstift", function() {deepEqual( Stem("sinnstiftung"), "sinnstift");});
test("sinnt -> sinnt", function() {deepEqual( Stem("sinnt"), "sinnt");});
test("sinnverwirrter -> sinnverwirrt", function() {deepEqual( Stem("sinnverwirrter"), "sinnverwirrt");});
test("sinnvoll -> sinnvoll", function() {deepEqual( Stem("sinnvoll"), "sinnvoll");});
test("sinnvolle -> sinnvoll", function() {deepEqual( Stem("sinnvolle"), "sinnvoll");});
test("sinnvollere -> sinnvoll", function() {deepEqual( Stem("sinnvollere"), "sinnvoll");});
test("sinnwidrigen -> sinnwidr", function() {deepEqual( Stem("sinnwidrigen"), "sinnwidr");});
test("sinnzusammenhang -> sinnzusammenhang", function() {deepEqual( Stem("sinnzusammenhang"), "sinnzusammenhang");});
test("sirnak -> sirnak", function() {deepEqual( Stem("sirnak"), "sirnak");});
test("sirrr -> sirrr", function() {deepEqual( Stem("sirrr"), "sirrr");});
test("sirrrrrrr -> sirrrrrrr", function() {deepEqual( Stem("sirrrrrrr"), "sirrrrrrr");});
test("sithri -> sithri", function() {deepEqual( Stem("sithri"), "sithri");});
test("sitte -> sitt", function() {deepEqual( Stem("sitte"), "sitt");});
test("sitten -> sitt", function() {deepEqual( Stem("sitten"), "sitt");});
test("sittengesetz -> sittengesetz", function() {deepEqual( Stem("sittengesetz"), "sittengesetz");});
test("sittengesetze -> sittengesetz", function() {deepEqual( Stem("sittengesetze"), "sittengesetz");});
test("sittengesetzes -> sittengesetz", function() {deepEqual( Stem("sittengesetzes"), "sittengesetz");});
test("sittenlehre -> sittenlehr", function() {deepEqual( Stem("sittenlehre"), "sittenlehr");});
test("sittig -> sittig", function() {deepEqual( Stem("sittig"), "sittig");});
test("sittlich -> sittlich", function() {deepEqual( Stem("sittlich"), "sittlich");});
test("sittliche -> sittlich", function() {deepEqual( Stem("sittliche"), "sittlich");});
test("sittlichen -> sittlich", function() {deepEqual( Stem("sittlichen"), "sittlich");});
test("sittlicher -> sittlich", function() {deepEqual( Stem("sittlicher"), "sittlich");});
test("sittlichguten -> sittlichgut", function() {deepEqual( Stem("sittlichguten"), "sittlichgut");});
test("sittlichkeit -> sittlich", function() {deepEqual( Stem("sittlichkeit"), "sittlich");});
test("sittsam -> sittsam", function() {deepEqual( Stem("sittsam"), "sittsam");});
test("sittsamkeit -> sittsam", function() {deepEqual( Stem("sittsamkeit"), "sittsam");});
test("situation -> situation", function() {deepEqual( Stem("situation"), "situation");});
test("situationen -> situation", function() {deepEqual( Stem("situationen"), "situation");});
test("sitz -> sitz", function() {deepEqual( Stem("sitz"), "sitz");});
test("sitze -> sitz", function() {deepEqual( Stem("sitze"), "sitz");});
test("sitzen -> sitz", function() {deepEqual( Stem("sitzen"), "sitz");});
test("sitzende -> sitzend", function() {deepEqual( Stem("sitzende"), "sitzend");});
test("sitzerei -> sitzerei", function() {deepEqual( Stem("sitzerei"), "sitzerei");});
test("sitzest -> sitz", function() {deepEqual( Stem("sitzest"), "sitz");});
test("sitzgegend -> sitzgeg", function() {deepEqual( Stem("sitzgegend"), "sitzgeg");});
test("sitzgelegenheit -> sitzgeleg", function() {deepEqual( Stem("sitzgelegenheit"), "sitzgeleg");});
test("sitzplatz -> sitzplatz", function() {deepEqual( Stem("sitzplatz"), "sitzplatz");});
test("sitzt -> sitzt", function() {deepEqual( Stem("sitzt"), "sitzt");});
test("sitzung -> sitzung", function() {deepEqual( Stem("sitzung"), "sitzung");});
test("sitzungssaal -> sitzungssaal", function() {deepEqual( Stem("sitzungssaal"), "sitzungssaal");});
test("sitzungstagen -> sitzungstag", function() {deepEqual( Stem("sitzungstagen"), "sitzungstag");});
test("sitzungszimmer -> sitzungszimm", function() {deepEqual( Stem("sitzungszimmer"), "sitzungszimm");});
test("sitzungszimmers -> sitzungszimm", function() {deepEqual( Stem("sitzungszimmers"), "sitzungszimm");});
test("skeptisch -> skeptisch", function() {deepEqual( Stem("skeptisch"), "skeptisch");});
test("skeptizismus -> skeptizismus", function() {deepEqual( Stem("skeptizismus"), "skeptizismus");});
test("skf -> skf", function() {deepEqual( Stem("skf"), "skf");});
test("skizziert -> skizziert", function() {deepEqual( Stem("skizziert"), "skizziert");});
test("sklave -> sklav", function() {deepEqual( Stem("sklave"), "sklav");});
test("skorpionen -> skorpion", function() {deepEqual( Stem("skorpionen"), "skorpion");});
test("skribenten -> skribent", function() {deepEqual( Stem("skribenten"), "skribent");});
test("skrupel -> skrupel", function() {deepEqual( Stem("skrupel"), "skrupel");});
test("slangs -> slang", function() {deepEqual( Stem("slangs"), "slang");});
test("smaragd -> smaragd", function() {deepEqual( Stem("smaragd"), "smaragd");});
test("smidt -> smidt", function() {deepEqual( Stem("smidt"), "smidt");});
test("smyrna -> smyrna", function() {deepEqual( Stem("smyrna"), "smyrna");});
test("smyrnateppich -> smyrnateppich", function() {deepEqual( Stem("smyrnateppich"), "smyrnateppich");});
test("so -> so", function() {deepEqual( Stem("so"), "so");});
test("sö -> so", function() {deepEqual( Stem("sö"), "so");});
test("sobald -> sobald", function() {deepEqual( Stem("sobald"), "sobald");});
test("social -> social", function() {deepEqual( Stem("social"), "social");});
test("sociantis -> sociantis", function() {deepEqual( Stem("sociantis"), "sociantis");});
test("socinianer -> socinian", function() {deepEqual( Stem("socinianer"), "socinian");});
test("socken -> sock", function() {deepEqual( Stem("socken"), "sock");});
test("sodalitia -> sodalitia", function() {deepEqual( Stem("sodalitia"), "sodalitia");});
test("sodann -> sodann", function() {deepEqual( Stem("sodann"), "sodann");});
test("sodass -> sodass", function() {deepEqual( Stem("sodass"), "sodass");});
test("sodom -> sodom", function() {deepEqual( Stem("sodom"), "sodom");});
test("sodoms -> sodom", function() {deepEqual( Stem("sodoms"), "sodom");});
test("soeben -> soeb", function() {deepEqual( Stem("soeben"), "soeb");});
test("sofa -> sofa", function() {deepEqual( Stem("sofa"), "sofa");});
test("sofern -> sof", function() {deepEqual( Stem("sofern"), "sof");});
test("sofort -> sofort", function() {deepEqual( Stem("sofort"), "sofort");});
test("sofortige -> sofort", function() {deepEqual( Stem("sofortige"), "sofort");});
test("sog -> sog", function() {deepEqual( Stem("sog"), "sog");});
test("sogar -> sogar", function() {deepEqual( Stem("sogar"), "sogar");});
test("sogen -> sog", function() {deepEqual( Stem("sogen"), "sog");});
test("sogenannte -> sogenannt", function() {deepEqual( Stem("sogenannte"), "sogenannt");});
test("sogenannten -> sogenannt", function() {deepEqual( Stem("sogenannten"), "sogenannt");});
test("sogenannter -> sogenannt", function() {deepEqual( Stem("sogenannter"), "sogenannt");});
test("sogenanntes -> sogenannt", function() {deepEqual( Stem("sogenanntes"), "sogenannt");});
test("sogleich -> sogleich", function() {deepEqual( Stem("sogleich"), "sogleich");});
test("sohle -> sohl", function() {deepEqual( Stem("sohle"), "sohl");});
test("sohlen -> sohl", function() {deepEqual( Stem("sohlen"), "sohl");});
test("sohn -> sohn", function() {deepEqual( Stem("sohn"), "sohn");});
test("söhnchen -> sohnch", function() {deepEqual( Stem("söhnchen"), "sohnch");});
test("sohne -> sohn", function() {deepEqual( Stem("sohne"), "sohn");});
test("söhne -> sohn", function() {deepEqual( Stem("söhne"), "sohn");});
test("söhnen -> sohn", function() {deepEqual( Stem("söhnen"), "sohn");});
test("sohnes -> sohn", function() {deepEqual( Stem("sohnes"), "sohn");});
test("sohnessohn -> sohnessohn", function() {deepEqual( Stem("sohnessohn"), "sohnessohn");});
test("söhnlein -> sohnlein", function() {deepEqual( Stem("söhnlein"), "sohnlein");});
test("sokrates -> sokrat", function() {deepEqual( Stem("sokrates"), "sokrat");});
test("solang -> solang", function() {deepEqual( Stem("solang"), "solang");});
test("solange -> solang", function() {deepEqual( Stem("solange"), "solang");});
test("solch -> solch", function() {deepEqual( Stem("solch"), "solch");});
test("solche -> solch", function() {deepEqual( Stem("solche"), "solch");});
test("solchem -> solch", function() {deepEqual( Stem("solchem"), "solch");});
test("solchen -> solch", function() {deepEqual( Stem("solchen"), "solch");});
test("solchenen -> solch", function() {deepEqual( Stem("solchenen"), "solch");});
test("solcher -> solch", function() {deepEqual( Stem("solcher"), "solch");});
test("solcherart -> solcherart", function() {deepEqual( Stem("solcherart"), "solcherart");});
test("solchergestalt -> solchergestalt", function() {deepEqual( Stem("solchergestalt"), "solchergestalt");});
test("solcherlei -> solcherlei", function() {deepEqual( Stem("solcherlei"), "solcherlei");});
test("solcherweise -> solcherweis", function() {deepEqual( Stem("solcherweise"), "solcherweis");});
test("solches -> solch", function() {deepEqual( Stem("solches"), "solch");});
test("sold -> sold", function() {deepEqual( Stem("sold"), "sold");});
test("soldat -> soldat", function() {deepEqual( Stem("soldat"), "soldat");});
test("soldaten -> soldat", function() {deepEqual( Stem("soldaten"), "soldat");});
test("soldatengesicht -> soldatengesicht", function() {deepEqual( Stem("soldatengesicht"), "soldatengesicht");});
test("soldatenhaufen -> soldatenhauf", function() {deepEqual( Stem("soldatenhaufen"), "soldatenhauf");});
test("soldatenlebens -> soldatenleb", function() {deepEqual( Stem("soldatenlebens"), "soldatenleb");});
test("soldatenrock -> soldatenrock", function() {deepEqual( Stem("soldatenrock"), "soldatenrock");});
test("soldatentum -> soldatentum", function() {deepEqual( Stem("soldatentum"), "soldatentum");});
test("soldateska -> soldateska", function() {deepEqual( Stem("soldateska"), "soldateska");});
test("solde -> sold", function() {deepEqual( Stem("solde"), "sold");});
test("soli -> soli", function() {deepEqual( Stem("soli"), "soli");});
test("solid -> solid", function() {deepEqual( Stem("solid"), "solid");});
test("solidarische -> solidar", function() {deepEqual( Stem("solidarische"), "solidar");});
test("solidarisierung -> solidarisier", function() {deepEqual( Stem("solidarisierung"), "solidarisier");});
test("solidaritässtiftung -> solidaritasstift", function() {deepEqual( Stem("solidaritässtiftung"), "solidaritasstift");});
test("solidarität -> solidaritat", function() {deepEqual( Stem("solidarität"), "solidaritat");});
test("solidaritätsbeiträge -> solidaritatsbeitrag", function() {deepEqual( Stem("solidaritätsbeiträge"), "solidaritatsbeitrag");});
test("solidaritätsfonds -> solidaritatsfond", function() {deepEqual( Stem("solidaritätsfonds"), "solidaritatsfond");});
test("solidaritätsstiftung -> solidaritatsstift", function() {deepEqual( Stem("solidaritätsstiftung"), "solidaritatsstift");});
test("soliden -> solid", function() {deepEqual( Stem("soliden"), "solid");});
test("solider -> solid", function() {deepEqual( Stem("solider"), "solid");});
test("solipsismus -> solipsismus", function() {deepEqual( Stem("solipsismus"), "solipsismus");});
test("soll -> soll", function() {deepEqual( Stem("soll"), "soll");});
test("solle -> soll", function() {deepEqual( Stem("solle"), "soll");});
test("sollen -> soll", function() {deepEqual( Stem("sollen"), "soll");});
test("söller -> soll", function() {deepEqual( Stem("söller"), "soll");});
test("sollet -> sollet", function() {deepEqual( Stem("sollet"), "sollet");});
test("sollst -> soll", function() {deepEqual( Stem("sollst"), "soll");});
test("sollt -> sollt", function() {deepEqual( Stem("sollt"), "sollt");});
test("sollte -> sollt", function() {deepEqual( Stem("sollte"), "sollt");});
test("sollten -> sollt", function() {deepEqual( Stem("sollten"), "sollt");});
test("solltest -> sollt", function() {deepEqual( Stem("solltest"), "sollt");});
test("solution -> solution", function() {deepEqual( Stem("solution"), "solution");});
test("somit -> somit", function() {deepEqual( Stem("somit"), "somit");});
test("sommer -> somm", function() {deepEqual( Stem("sommer"), "somm");});
test("sommerabend -> sommerab", function() {deepEqual( Stem("sommerabend"), "sommerab");});
test("sommerbier -> sommerbi", function() {deepEqual( Stem("sommerbier"), "sommerbi");});
test("sommerbieres -> sommerbi", function() {deepEqual( Stem("sommerbieres"), "sommerbi");});
test("sommerferien -> sommerferi", function() {deepEqual( Stem("sommerferien"), "sommerferi");});
test("sommerfrische -> sommerfr", function() {deepEqual( Stem("sommerfrische"), "sommerfr");});
test("sommerhell -> sommerhell", function() {deepEqual( Stem("sommerhell"), "sommerhell");});
test("sommerhirsch -> sommerhirsch", function() {deepEqual( Stem("sommerhirsch"), "sommerhirsch");});
test("sommerhitz -> sommerhitz", function() {deepEqual( Stem("sommerhitz"), "sommerhitz");});
test("sommerkleid -> sommerkleid", function() {deepEqual( Stem("sommerkleid"), "sommerkleid");});
test("sommernachmittag -> sommernachmittag", function() {deepEqual( Stem("sommernachmittag"), "sommernachmittag");});
test("sommernacht -> sommernacht", function() {deepEqual( Stem("sommernacht"), "sommernacht");});
test("sommerrehe -> sommerreh", function() {deepEqual( Stem("sommerrehe"), "sommerreh");});
test("sommerruhe -> sommerruh", function() {deepEqual( Stem("sommerruhe"), "sommerruh");});
test("sommers -> somm", function() {deepEqual( Stem("sommers"), "somm");});
test("sommersaison -> sommersaison", function() {deepEqual( Stem("sommersaison"), "sommersaison");});
test("sommersonne -> sommersonn", function() {deepEqual( Stem("sommersonne"), "sommersonn");});
test("sommerspass -> sommerspass", function() {deepEqual( Stem("sommerspass"), "sommerspass");});
test("sommerspaß -> sommerspass", function() {deepEqual( Stem("sommerspaß"), "sommerspass");});
test("sommerszeit -> sommerszeit", function() {deepEqual( Stem("sommerszeit"), "sommerszeit");});
test("sommertag -> sommertag", function() {deepEqual( Stem("sommertag"), "sommertag");});
test("sommertage -> sommertag", function() {deepEqual( Stem("sommertage"), "sommertag");});
test("sommervergnügen -> sommervergnug", function() {deepEqual( Stem("sommervergnügen"), "sommervergnug");});
test("sonach -> sonach", function() {deepEqual( Stem("sonach"), "sonach");});
test("sonderbar -> sonderbar", function() {deepEqual( Stem("sonderbar"), "sonderbar");});
test("sonderbare -> sonderbar", function() {deepEqual( Stem("sonderbare"), "sonderbar");});
test("sonderbaren -> sonderbar", function() {deepEqual( Stem("sonderbaren"), "sonderbar");});
test("sonderbarer -> sonderbar", function() {deepEqual( Stem("sonderbarer"), "sonderbar");});
test("sonderbarerweise -> sonderbarerweis", function() {deepEqual( Stem("sonderbarerweise"), "sonderbarerweis");});
test("sonderbares -> sonderbar", function() {deepEqual( Stem("sonderbares"), "sonderbar");});
test("sonderbarste -> sonderbarst", function() {deepEqual( Stem("sonderbarste"), "sonderbarst");});
test("sonderbarsten -> sonderbarst", function() {deepEqual( Stem("sonderbarsten"), "sonderbarst");});
test("sonderlich -> sond", function() {deepEqual( Stem("sonderlich"), "sond");});
test("sonderliche -> sond", function() {deepEqual( Stem("sonderliche"), "sond");});
test("sonderlichen -> sond", function() {deepEqual( Stem("sonderlichen"), "sond");});
test("sonderliches -> sond", function() {deepEqual( Stem("sonderliches"), "sond");});
test("sonderling -> sonderling", function() {deepEqual( Stem("sonderling"), "sonderling");});
test("sondern -> sond", function() {deepEqual( Stem("sondern"), "sond");});
test("sonders -> sond", function() {deepEqual( Stem("sonders"), "sond");});
test("sonderschau -> sonderschau", function() {deepEqual( Stem("sonderschau"), "sonderschau");});
test("sonderweg -> sonderweg", function() {deepEqual( Stem("sonderweg"), "sonderweg");});
test("sonn -> sonn", function() {deepEqual( Stem("sonn"), "sonn");});
test("sonnbeschienen -> sonnbeschi", function() {deepEqual( Stem("sonnbeschienen"), "sonnbeschi");});
test("sonne -> sonn", function() {deepEqual( Stem("sonne"), "sonn");});
test("sonnen -> sonn", function() {deepEqual( Stem("sonnen"), "sonn");});
test("sonnenartig -> sonnenart", function() {deepEqual( Stem("sonnenartig"), "sonnenart");});
test("sonnenauf -> sonnenauf", function() {deepEqual( Stem("sonnenauf"), "sonnenauf");});
test("sonnenaufgang -> sonnenaufgang", function() {deepEqual( Stem("sonnenaufgang"), "sonnenaufgang");});
test("sonnenberg -> sonnenberg", function() {deepEqual( Stem("sonnenberg"), "sonnenberg");});
test("sonnenblick -> sonnenblick", function() {deepEqual( Stem("sonnenblick"), "sonnenblick");});
test("sonnenbrand -> sonnenbrand", function() {deepEqual( Stem("sonnenbrand"), "sonnenbrand");});
test("sonnenbraunes -> sonnenbraun", function() {deepEqual( Stem("sonnenbraunes"), "sonnenbraun");});
test("sonnenbrille -> sonnenbrill", function() {deepEqual( Stem("sonnenbrille"), "sonnenbrill");});
test("sonnenfeuer -> sonnenfeu", function() {deepEqual( Stem("sonnenfeuer"), "sonnenfeu");});
test("sonnenglut -> sonnenglut", function() {deepEqual( Stem("sonnenglut"), "sonnenglut");});
test("sonnenhelle -> sonnenhell", function() {deepEqual( Stem("sonnenhelle"), "sonnenhell");});
test("sonnenhöhe -> sonnenhoh", function() {deepEqual( Stem("sonnenhöhe"), "sonnenhoh");});
test("sonnenland -> sonnenland", function() {deepEqual( Stem("sonnenland"), "sonnenland");});
test("sonnenlicht -> sonnenlicht", function() {deepEqual( Stem("sonnenlicht"), "sonnenlicht");});
test("sonnenluft -> sonnenluft", function() {deepEqual( Stem("sonnenluft"), "sonnenluft");});
test("sonnennebel -> sonnennebel", function() {deepEqual( Stem("sonnennebel"), "sonnennebel");});
test("sonnennebeln -> sonnennebeln", function() {deepEqual( Stem("sonnennebeln"), "sonnennebeln");});
test("sonnenringel -> sonnenringel", function() {deepEqual( Stem("sonnenringel"), "sonnenringel");});
test("sonnenschein -> sonnenschein", function() {deepEqual( Stem("sonnenschein"), "sonnenschein");});
test("sonnenscheine -> sonnenschein", function() {deepEqual( Stem("sonnenscheine"), "sonnenschein");});
test("sonnenschirmchen -> sonnenschirmch", function() {deepEqual( Stem("sonnenschirmchen"), "sonnenschirmch");});
test("sonnenstrahl -> sonnenstrahl", function() {deepEqual( Stem("sonnenstrahl"), "sonnenstrahl");});
test("sonnenstrahlen -> sonnenstrahl", function() {deepEqual( Stem("sonnenstrahlen"), "sonnenstrahl");});
test("sonnenuhr -> sonnenuhr", function() {deepEqual( Stem("sonnenuhr"), "sonnenuhr");});
test("sonnenuntergang -> sonnenuntergang", function() {deepEqual( Stem("sonnenuntergang"), "sonnenuntergang");});
test("sonnenwärme -> sonnenwarm", function() {deepEqual( Stem("sonnenwärme"), "sonnenwarm");});
test("sonngebräunten -> sonngebraunt", function() {deepEqual( Stem("sonngebräunten"), "sonngebraunt");});
test("sonnige -> sonnig", function() {deepEqual( Stem("sonnige"), "sonnig");});
test("sonnigen -> sonnig", function() {deepEqual( Stem("sonnigen"), "sonnig");});
test("sonniger -> sonnig", function() {deepEqual( Stem("sonniger"), "sonnig");});
test("sonnigsten -> sonnig", function() {deepEqual( Stem("sonnigsten"), "sonnig");});
test("sonntag -> sonntag", function() {deepEqual( Stem("sonntag"), "sonntag");});
test("sonntagabend -> sonntagab", function() {deepEqual( Stem("sonntagabend"), "sonntagab");});
test("sonntage -> sonntag", function() {deepEqual( Stem("sonntage"), "sonntag");});
test("sonntagen -> sonntag", function() {deepEqual( Stem("sonntagen"), "sonntag");});
test("sonntäglich -> sonntag", function() {deepEqual( Stem("sonntäglich"), "sonntag");});
test("sonntäglichen -> sonntag", function() {deepEqual( Stem("sonntäglichen"), "sonntag");});
test("sonntagmorgen -> sonntagmorg", function() {deepEqual( Stem("sonntagmorgen"), "sonntagmorg");});
test("sonntagnachmittag -> sonntagnachmittag", function() {deepEqual( Stem("sonntagnachmittag"), "sonntagnachmittag");});
test("sonntagnachmittags -> sonntagnachmittag", function() {deepEqual( Stem("sonntagnachmittags"), "sonntagnachmittag");});
test("sonntags -> sonntag", function() {deepEqual( Stem("sonntags"), "sonntag");});
test("sonntagskleid -> sonntagskleid", function() {deepEqual( Stem("sonntagskleid"), "sonntagskleid");});
test("sonntagskleide -> sonntagskleid", function() {deepEqual( Stem("sonntagskleide"), "sonntagskleid");});
test("sonntagsrock -> sonntagsrock", function() {deepEqual( Stem("sonntagsrock"), "sonntagsrock");});
test("sonntagsschlafrock -> sonntagsschlafrock", function() {deepEqual( Stem("sonntagsschlafrock"), "sonntagsschlafrock");});
test("sonntagsschuhe -> sonntagsschuh", function() {deepEqual( Stem("sonntagsschuhe"), "sonntagsschuh");});
test("sonntagsstaat -> sonntagsstaat", function() {deepEqual( Stem("sonntagsstaat"), "sonntagsstaat");});
test("sonntagsstille -> sonntagsstill", function() {deepEqual( Stem("sonntagsstille"), "sonntagsstill");});
test("sonntagvormittag -> sonntagvormittag", function() {deepEqual( Stem("sonntagvormittag"), "sonntagvormittag");});
test("sonnte -> sonnt", function() {deepEqual( Stem("sonnte"), "sonnt");});
test("sono -> sono", function() {deepEqual( Stem("sono"), "sono");});
test("sonst -> sonst", function() {deepEqual( Stem("sonst"), "sonst");});
test("sonstige -> sonstig", function() {deepEqual( Stem("sonstige"), "sonstig");});
test("sonstigen -> sonstig", function() {deepEqual( Stem("sonstigen"), "sonstig");});
test("sonstwie -> sonstwi", function() {deepEqual( Stem("sonstwie"), "sonstwi");});
test("sonstwo -> sonstwo", function() {deepEqual( Stem("sonstwo"), "sonstwo");});
test("sony -> sony", function() {deepEqual( Stem("sony"), "sony");});
test("sooft -> sooft", function() {deepEqual( Stem("sooft"), "sooft");});
test("sopha -> sopha", function() {deepEqual( Stem("sopha"), "sopha");});
test("sophienstrasse -> sophienstrass", function() {deepEqual( Stem("sophienstrasse"), "sophienstrass");});
test("sophismata -> sophismata", function() {deepEqual( Stem("sophismata"), "sophismata");});
test("sophisterei -> sophisterei", function() {deepEqual( Stem("sophisterei"), "sophisterei");});
test("sophisticis -> sophisticis", function() {deepEqual( Stem("sophisticis"), "sophisticis");});
test("sophistik -> sophist", function() {deepEqual( Stem("sophistik"), "sophist");});
test("sophistische -> sophist", function() {deepEqual( Stem("sophistische"), "sophist");});
test("sophistischen -> sophist", function() {deepEqual( Stem("sophistischen"), "sophist");});
test("sorge -> sorg", function() {deepEqual( Stem("sorge"), "sorg");});
test("sorgen -> sorg", function() {deepEqual( Stem("sorgen"), "sorg");});
test("sorgenbefreite -> sorgenbefreit", function() {deepEqual( Stem("sorgenbefreite"), "sorgenbefreit");});
test("sorgende -> sorgend", function() {deepEqual( Stem("sorgende"), "sorgend");});
test("sorgenlos -> sorgenlos", function() {deepEqual( Stem("sorgenlos"), "sorgenlos");});
test("sorgenvolle -> sorgenvoll", function() {deepEqual( Stem("sorgenvolle"), "sorgenvoll");});
test("sorgfalt -> sorgfalt", function() {deepEqual( Stem("sorgfalt"), "sorgfalt");});
test("sorgfältig -> sorgfalt", function() {deepEqual( Stem("sorgfältig"), "sorgfalt");});
test("sorgfältigste -> sorgfalt", function() {deepEqual( Stem("sorgfältigste"), "sorgfalt");});
test("sorgfältigsten -> sorgfalt", function() {deepEqual( Stem("sorgfältigsten"), "sorgfalt");});
test("sorglich -> sorglich", function() {deepEqual( Stem("sorglich"), "sorglich");});
test("sorglicher -> sorglich", function() {deepEqual( Stem("sorglicher"), "sorglich");});
test("sorglos -> sorglos", function() {deepEqual( Stem("sorglos"), "sorglos");});
test("sorglosem -> sorglos", function() {deepEqual( Stem("sorglosem"), "sorglos");});
test("sorgloser -> sorglos", function() {deepEqual( Stem("sorgloser"), "sorglos");});
test("sorglosigkeit -> sorglos", function() {deepEqual( Stem("sorglosigkeit"), "sorglos");});
test("sorgsam -> sorgsam", function() {deepEqual( Stem("sorgsam"), "sorgsam");});
test("sorgte -> sorgt", function() {deepEqual( Stem("sorgte"), "sorgt");});
test("sorry -> sorry", function() {deepEqual( Stem("sorry"), "sorry");});
test("sorte -> sort", function() {deepEqual( Stem("sorte"), "sort");});
test("sosehr -> sosehr", function() {deepEqual( Stem("sosehr"), "sosehr");});
test("soubrette -> soubrett", function() {deepEqual( Stem("soubrette"), "soubrett");});
test("soundso -> soundso", function() {deepEqual( Stem("soundso"), "soundso");});
test("souper -> soup", function() {deepEqual( Stem("souper"), "soup");});
test("sous -> sous", function() {deepEqual( Stem("sous"), "sous");});
test("souterrain -> souterrain", function() {deepEqual( Stem("souterrain"), "souterrain");});
test("souverän -> souveran", function() {deepEqual( Stem("souverän"), "souveran");});
test("soviel -> soviel", function() {deepEqual( Stem("soviel"), "soviel");});
test("sowas -> sowas", function() {deepEqual( Stem("sowas"), "sowas");});
test("soweit -> soweit", function() {deepEqual( Stem("soweit"), "soweit");});
test("sowenig -> sowen", function() {deepEqual( Stem("sowenig"), "sowen");});
test("sowie -> sowi", function() {deepEqual( Stem("sowie"), "sowi");});
test("sowieso -> sowieso", function() {deepEqual( Stem("sowieso"), "sowieso");});
test("sowohl -> sowohl", function() {deepEqual( Stem("sowohl"), "sowohl");});
test("sozialarbeit -> sozialarbeit", function() {deepEqual( Stem("sozialarbeit"), "sozialarbeit");});
test("soziale -> sozial", function() {deepEqual( Stem("soziale"), "sozial");});
test("sozialen -> sozial", function() {deepEqual( Stem("sozialen"), "sozial");});
test("soziales -> sozial", function() {deepEqual( Stem("soziales"), "sozial");});
test("sozialhilfe -> sozialhilf", function() {deepEqual( Stem("sozialhilfe"), "sozialhilf");});
test("sozialisten -> sozialist", function() {deepEqual( Stem("sozialisten"), "sozialist");});
test("sozialsystem -> sozialsyst", function() {deepEqual( Stem("sozialsystem"), "sozialsyst");});
test("sozinianern -> sozinian", function() {deepEqual( Stem("sozinianern"), "sozinian");});
test("sozusagen -> sozusag", function() {deepEqual( Stem("sozusagen"), "sozusag");});
test("spähen -> spah", function() {deepEqual( Stem("spähen"), "spah");});
test("spähend -> spahend", function() {deepEqual( Stem("spähend"), "spahend");});
test("spähete -> spahet", function() {deepEqual( Stem("spähete"), "spahet");});
test("spähte -> spaht", function() {deepEqual( Stem("spähte"), "spaht");});
test("spalt -> spalt", function() {deepEqual( Stem("spalt"), "spalt");});
test("spalten -> spalt", function() {deepEqual( Stem("spalten"), "spalt");});
test("spaltet -> spaltet", function() {deepEqual( Stem("spaltet"), "spaltet");});
test("spaltung -> spaltung", function() {deepEqual( Stem("spaltung"), "spaltung");});
test("späne -> span", function() {deepEqual( Stem("späne"), "span");});
test("spanien -> spani", function() {deepEqual( Stem("spanien"), "spani");});
test("spaniern -> spani", function() {deepEqual( Stem("spaniern"), "spani");});
test("spaniolen -> spaniol", function() {deepEqual( Stem("spaniolen"), "spaniol");});
test("spanische -> spanisch", function() {deepEqual( Stem("spanische"), "spanisch");});
test("spann -> spann", function() {deepEqual( Stem("spann"), "spann");});
test("spanne -> spann", function() {deepEqual( Stem("spanne"), "spann");});
test("spannende -> spannend", function() {deepEqual( Stem("spannende"), "spannend");});
test("spannender -> spannend", function() {deepEqual( Stem("spannender"), "spannend");});
test("spannt -> spannt", function() {deepEqual( Stem("spannt"), "spannt");});
test("spannte -> spannt", function() {deepEqual( Stem("spannte"), "spannt");});
test("spannten -> spannt", function() {deepEqual( Stem("spannten"), "spannt");});
test("spannung -> spannung", function() {deepEqual( Stem("spannung"), "spannung");});
test("spannungen -> spannung", function() {deepEqual( Stem("spannungen"), "spannung");});
test("spannungsgeladen -> spannungsgelad", function() {deepEqual( Stem("spannungsgeladen"), "spannungsgelad");});
test("spannungsvolle -> spannungsvoll", function() {deepEqual( Stem("spannungsvolle"), "spannungsvoll");});
test("sparbüchse -> sparbuchs", function() {deepEqual( Stem("sparbüchse"), "sparbuchs");});
test("spare -> spar", function() {deepEqual( Stem("spare"), "spar");});
test("sparen -> spar", function() {deepEqual( Stem("sparen"), "spar");});
test("spargel -> spargel", function() {deepEqual( Stem("spargel"), "spargel");});
test("sparkasse -> sparkass", function() {deepEqual( Stem("sparkasse"), "sparkass");});
test("spärliche -> sparlich", function() {deepEqual( Stem("spärliche"), "sparlich");});
test("spärlichen -> sparlich", function() {deepEqual( Stem("spärlichen"), "sparlich");});
test("sparpfennig -> sparpfenn", function() {deepEqual( Stem("sparpfennig"), "sparpfenn");});
test("sparsam -> sparsam", function() {deepEqual( Stem("sparsam"), "sparsam");});
test("sparsame -> sparsam", function() {deepEqual( Stem("sparsame"), "sparsam");});
test("sparsamer -> sparsam", function() {deepEqual( Stem("sparsamer"), "sparsam");});
test("sparsamkeit -> sparsam", function() {deepEqual( Stem("sparsamkeit"), "sparsam");});
test("sparte -> spart", function() {deepEqual( Stem("sparte"), "spart");});
test("spass -> spass", function() {deepEqual( Stem("spass"), "spass");});
test("spaß -> spass", function() {deepEqual( Stem("spaß"), "spass");});
test("spasse -> spass", function() {deepEqual( Stem("spasse"), "spass");});
test("spässe -> spass", function() {deepEqual( Stem("spässe"), "spass");});
test("späße -> spass", function() {deepEqual( Stem("späße"), "spass");});
test("spasshaft -> spasshaft", function() {deepEqual( Stem("spasshaft"), "spasshaft");});
test("spasshafte -> spasshaft", function() {deepEqual( Stem("spasshafte"), "spasshaft");});
test("spasshaften -> spasshaft", function() {deepEqual( Stem("spasshaften"), "spasshaft");});
test("spassig -> spassig", function() {deepEqual( Stem("spassig"), "spassig");});
test("spassiges -> spassig", function() {deepEqual( Stem("spassiges"), "spassig");});
test("spät -> spat", function() {deepEqual( Stem("spät"), "spat");});
test("späten -> spat", function() {deepEqual( Stem("späten"), "spat");});
test("später -> spat", function() {deepEqual( Stem("später"), "spat");});
test("spätere -> spat", function() {deepEqual( Stem("spätere"), "spat");});
test("späterhin -> spaterhin", function() {deepEqual( Stem("späterhin"), "spaterhin");});
test("spätesten -> spat", function() {deepEqual( Stem("spätesten"), "spat");});
test("spätestens -> spatest", function() {deepEqual( Stem("spätestens"), "spatest");});
test("spätregen -> spatreg", function() {deepEqual( Stem("spätregen"), "spatreg");});
test("spatzen -> spatz", function() {deepEqual( Stem("spatzen"), "spatz");});
test("spazier -> spazi", function() {deepEqual( Stem("spazier"), "spazi");});
test("spazieren -> spazi", function() {deepEqual( Stem("spazieren"), "spazi");});
test("spazierengeflogen -> spazierengeflog", function() {deepEqual( Stem("spazierengeflogen"), "spazierengeflog");});
test("spazierengehen -> spazierengeh", function() {deepEqual( Stem("spazierengehen"), "spazierengeh");});
test("spazierenzugehen -> spazierenzugeh", function() {deepEqual( Stem("spazierenzugehen"), "spazierenzugeh");});
test("spazierest -> spazier", function() {deepEqual( Stem("spazierest"), "spazier");});
test("spaziergang -> spaziergang", function() {deepEqual( Stem("spaziergang"), "spaziergang");});
test("spaziergange -> spaziergang", function() {deepEqual( Stem("spaziergange"), "spaziergang");});
test("spaziergänger -> spaziergang", function() {deepEqual( Stem("spaziergänger"), "spaziergang");});
test("spazierstock -> spazierstock", function() {deepEqual( Stem("spazierstock"), "spazierstock");});
test("spazierstöckchen -> spazierstockch", function() {deepEqual( Stem("spazierstöckchen"), "spazierstockch");});
test("spazierstöckl -> spazierstockl", function() {deepEqual( Stem("spazierstöckl"), "spazierstockl");});
test("spazierte -> spaziert", function() {deepEqual( Stem("spazierte"), "spaziert");});
test("spe -> spe", function() {deepEqual( Stem("spe"), "spe");});
test("spechtes -> specht", function() {deepEqual( Stem("spechtes"), "specht");});
test("speciem -> speci", function() {deepEqual( Stem("speciem"), "speci");});
test("species -> speci", function() {deepEqual( Stem("species"), "speci");});
test("speck -> speck", function() {deepEqual( Stem("speck"), "speck");});
test("speckriemchen -> speckriemch", function() {deepEqual( Stem("speckriemchen"), "speckriemch");});
test("speckseite -> speckseit", function() {deepEqual( Stem("speckseite"), "speckseit");});
test("spediteure -> spediteur", function() {deepEqual( Stem("spediteure"), "spediteur");});
test("speeres -> speer", function() {deepEqual( Stem("speeres"), "speer");});
test("speichel -> speichel", function() {deepEqual( Stem("speichel"), "speichel");});
test("speichern -> speich", function() {deepEqual( Stem("speichern"), "speich");});
test("speise -> speis", function() {deepEqual( Stem("speise"), "speis");});
test("speisedüfte -> speiseduft", function() {deepEqual( Stem("speisedüfte"), "speiseduft");});
test("speisen -> speis", function() {deepEqual( Stem("speisen"), "speis");});
test("speisesaal -> speisesaal", function() {deepEqual( Stem("speisesaal"), "speisesaal");});
test("speiset -> speiset", function() {deepEqual( Stem("speiset"), "speiset");});
test("speisete -> speiset", function() {deepEqual( Stem("speisete"), "speiset");});
test("speisetisch -> speiset", function() {deepEqual( Stem("speisetisch"), "speiset");});
test("speisewagen -> speisewag", function() {deepEqual( Stem("speisewagen"), "speisewag");});
test("speisezettel -> speisezettel", function() {deepEqual( Stem("speisezettel"), "speisezettel");});
test("speisopfer -> speisopf", function() {deepEqual( Stem("speisopfer"), "speisopf");});
test("speisopfern -> speisopf", function() {deepEqual( Stem("speisopfern"), "speisopf");});
test("speiste -> speist", function() {deepEqual( Stem("speiste"), "speist");});
test("spektakel -> spektakel", function() {deepEqual( Stem("spektakel"), "spektakel");});
test("spektrum -> spektrum", function() {deepEqual( Stem("spektrum"), "spektrum");});
test("spekulant -> spekulant", function() {deepEqual( Stem("spekulant"), "spekulant");});
test("spekulanten -> spekulant", function() {deepEqual( Stem("spekulanten"), "spekulant");});
test("spekulation -> spekulation", function() {deepEqual( Stem("spekulation"), "spekulation");});
test("spekulationsbetätigung -> spekulationsbetat", function() {deepEqual( Stem("spekulationsbetätigung"), "spekulationsbetat");});
test("spekulativ -> spekulativ", function() {deepEqual( Stem("spekulativ"), "spekulativ");});
test("spekulative -> spekulativ", function() {deepEqual( Stem("spekulative"), "spekulativ");});
test("spekulativen -> spekulativ", function() {deepEqual( Stem("spekulativen"), "spekulativ");});
test("spekulativer -> spekulativ", function() {deepEqual( Stem("spekulativer"), "spekulativ");});
test("spekulatives -> spekulativ", function() {deepEqual( Stem("spekulatives"), "spekulativ");});
test("spekulierten -> spekuliert", function() {deepEqual( Stem("spekulierten"), "spekuliert");});
test("spelt -> spelt", function() {deepEqual( Stem("spelt"), "spelt");});
test("spelts -> spelt", function() {deepEqual( Stem("spelts"), "spelt");});
test("spelunke -> spelunk", function() {deepEqual( Stem("spelunke"), "spelunk");});
test("spelunkelein -> spelunkelein", function() {deepEqual( Stem("spelunkelein"), "spelunkelein");});
test("spenden -> spend", function() {deepEqual( Stem("spenden"), "spend");});
test("spendierte -> spendiert", function() {deepEqual( Stem("spendierte"), "spendiert");});
test("spenser -> spens", function() {deepEqual( Stem("spenser"), "spens");});
test("sperling -> sperling", function() {deepEqual( Stem("sperling"), "sperling");});
test("sperlinge -> sperling", function() {deepEqual( Stem("sperlinge"), "sperling");});
test("sperrmäuler -> sperrmaul", function() {deepEqual( Stem("sperrmäuler"), "sperrmaul");});
test("sperrte -> sperrt", function() {deepEqual( Stem("sperrte"), "sperrt");});
test("sperrten -> sperrt", function() {deepEqual( Stem("sperrten"), "sperrt");});
test("spezereien -> spezerei", function() {deepEqual( Stem("spezereien"), "spezerei");});
test("spezialfonds -> spezialfond", function() {deepEqual( Stem("spezialfonds"), "spezialfond");});
test("speziellen -> speziell", function() {deepEqual( Stem("speziellen"), "speziell");});
test("spezielles -> speziell", function() {deepEqual( Stem("spezielles"), "speziell");});
test("spezies -> spezi", function() {deepEqual( Stem("spezies"), "spezi");});
test("spezifisch -> spezif", function() {deepEqual( Stem("spezifisch"), "spezif");});
test("sphäre -> sphar", function() {deepEqual( Stem("sphäre"), "sphar");});
test("sphären -> sphar", function() {deepEqual( Stem("sphären"), "sphar");});
test("spieen -> spieen", function() {deepEqual( Stem("spieen"), "spieen");});
test("spiegel -> spiegel", function() {deepEqual( Stem("spiegel"), "spiegel");});
test("spiegelbild -> spiegelbild", function() {deepEqual( Stem("spiegelbild"), "spiegelbild");});
test("spiegelchen -> spiegelch", function() {deepEqual( Stem("spiegelchen"), "spiegelch");});
test("spiegelein -> spiegelein", function() {deepEqual( Stem("spiegelein"), "spiegelein");});
test("spiegels -> spiegel", function() {deepEqual( Stem("spiegels"), "spiegel");});
test("spiegelt -> spiegelt", function() {deepEqual( Stem("spiegelt"), "spiegelt");});
test("spiegelte -> spiegelt", function() {deepEqual( Stem("spiegelte"), "spiegelt");});
test("spiegelwände -> spiegelwand", function() {deepEqual( Stem("spiegelwände"), "spiegelwand");});
test("spiel -> spiel", function() {deepEqual( Stem("spiel"), "spiel");});
test("spielchen -> spielch", function() {deepEqual( Stem("spielchen"), "spielch");});
test("spiele -> spiel", function() {deepEqual( Stem("spiele"), "spiel");});
test("spielen -> spiel", function() {deepEqual( Stem("spielen"), "spiel");});
test("spielend -> spielend", function() {deepEqual( Stem("spielend"), "spielend");});
test("spielenden -> spielend", function() {deepEqual( Stem("spielenden"), "spielend");});
test("spielerei -> spielerei", function() {deepEqual( Stem("spielerei"), "spielerei");});
test("spielet -> spielet", function() {deepEqual( Stem("spielet"), "spielet");});
test("spielgelde -> spielgeld", function() {deepEqual( Stem("spielgelde"), "spielgeld");});
test("spielgesellen -> spielgesell", function() {deepEqual( Stem("spielgesellen"), "spielgesell");});
test("spielkameraden -> spielkamerad", function() {deepEqual( Stem("spielkameraden"), "spielkamerad");});
test("spielkugel -> spielkugel", function() {deepEqual( Stem("spielkugel"), "spielkugel");});
test("spielraum -> spielraum", function() {deepEqual( Stem("spielraum"), "spielraum");});
test("spielregeln -> spielregeln", function() {deepEqual( Stem("spielregeln"), "spielregeln");});
test("spielschulden -> spielschuld", function() {deepEqual( Stem("spielschulden"), "spielschuld");});
test("spielstätte -> spielstatt", function() {deepEqual( Stem("spielstätte"), "spielstatt");});
test("spielt -> spielt", function() {deepEqual( Stem("spielt"), "spielt");});
test("spielte -> spielt", function() {deepEqual( Stem("spielte"), "spielt");});
test("spielten -> spielt", function() {deepEqual( Stem("spielten"), "spielt");});
test("spieltisch -> spieltisch", function() {deepEqual( Stem("spieltisch"), "spieltisch");});
test("spielwerke -> spielwerk", function() {deepEqual( Stem("spielwerke"), "spielwerk");});
test("spielzeug -> spielzeug", function() {deepEqual( Stem("spielzeug"), "spielzeug");});
test("spielzeuglandschaft -> spielzeuglandschaft", function() {deepEqual( Stem("spielzeuglandschaft"), "spielzeuglandschaft");});
test("spielzeugmaikäfer -> spielzeugmaikaf", function() {deepEqual( Stem("spielzeugmaikäfer"), "spielzeugmaikaf");});
test("spielzeugvögelchen -> spielzeugvogelch", function() {deepEqual( Stem("spielzeugvögelchen"), "spielzeugvogelch");});
test("spielzeugwaffen -> spielzeugwaff", function() {deepEqual( Stem("spielzeugwaffen"), "spielzeugwaff");});
test("spiess -> spiess", function() {deepEqual( Stem("spiess"), "spiess");});
test("spiesse -> spiess", function() {deepEqual( Stem("spiesse"), "spiess");});
test("spiessen -> spiess", function() {deepEqual( Stem("spiessen"), "spiess");});
test("spinne -> spinn", function() {deepEqual( Stem("spinne"), "spinn");});
test("spinnen -> spinn", function() {deepEqual( Stem("spinnen"), "spinn");});
test("spinnenlied -> spinnenlied", function() {deepEqual( Stem("spinnenlied"), "spinnenlied");});
test("spinnerei -> spinnerei", function() {deepEqual( Stem("spinnerei"), "spinnerei");});
test("spinneweben -> spinneweb", function() {deepEqual( Stem("spinneweben"), "spinneweb");});
test("spinnrädchen -> spinnradch", function() {deepEqual( Stem("spinnrädchen"), "spinnradch");});
test("spinnrocken -> spinnrock", function() {deepEqual( Stem("spinnrocken"), "spinnrock");});
test("spinnweben -> spinnweb", function() {deepEqual( Stem("spinnweben"), "spinnweb");});
test("spion -> spion", function() {deepEqual( Stem("spion"), "spion");});
test("spiraculim -> spiraculim", function() {deepEqual( Stem("spiraculim"), "spiraculim");});
test("spirieren -> spiri", function() {deepEqual( Stem("spirieren"), "spiri");});
test("spirituale -> spiritual", function() {deepEqual( Stem("spirituale"), "spiritual");});
test("spiritualis -> spiritualis", function() {deepEqual( Stem("spiritualis"), "spiritualis");});
test("spiritus -> spiritus", function() {deepEqual( Stem("spiritus"), "spiritus");});
test("spiritusfeuer -> spiritusfeu", function() {deepEqual( Stem("spiritusfeuer"), "spiritusfeu");});
test("spitakl -> spitakl", function() {deepEqual( Stem("spitakl"), "spitakl");});
test("spital -> spital", function() {deepEqual( Stem("spital"), "spital");});
test("spittel -> spittel", function() {deepEqual( Stem("spittel"), "spittel");});
test("spitting -> spitting", function() {deepEqual( Stem("spitting"), "spitting");});
test("spitz -> spitz", function() {deepEqual( Stem("spitz"), "spitz");});
test("spitzbart -> spitzbart", function() {deepEqual( Stem("spitzbart"), "spitzbart");});
test("spitzbauch -> spitzbauch", function() {deepEqual( Stem("spitzbauch"), "spitzbauch");});
test("spitzbube -> spitzbub", function() {deepEqual( Stem("spitzbube"), "spitzbub");});
test("spitzbuben -> spitzbub", function() {deepEqual( Stem("spitzbuben"), "spitzbub");});
test("spitze -> spitz", function() {deepEqual( Stem("spitze"), "spitz");});
test("spitzen -> spitz", function() {deepEqual( Stem("spitzen"), "spitz");});
test("spitzenkandidat -> spitzenkandidat", function() {deepEqual( Stem("spitzenkandidat"), "spitzenkandidat");});
test("spitzes -> spitz", function() {deepEqual( Stem("spitzes"), "spitz");});
test("spitzfindigkeiten -> spitzfind", function() {deepEqual( Stem("spitzfindigkeiten"), "spitzfind");});
test("spitzgras -> spitzgras", function() {deepEqual( Stem("spitzgras"), "spitzgras");});
test("spitzig -> spitzig", function() {deepEqual( Stem("spitzig"), "spitzig");});
test("spitzige -> spitzig", function() {deepEqual( Stem("spitzige"), "spitzig");});
test("spitzigen -> spitzig", function() {deepEqual( Stem("spitzigen"), "spitzig");});
test("spitzigsten -> spitzig", function() {deepEqual( Stem("spitzigsten"), "spitzig");});
test("spitzte -> spitzt", function() {deepEqual( Stem("spitzte"), "spitzt");});
test("splitternackt -> splitternackt", function() {deepEqual( Stem("splitternackt"), "splitternackt");});
test("sponton -> sponton", function() {deepEqual( Stem("sponton"), "sponton");});
test("sporen -> spor", function() {deepEqual( Stem("sporen"), "spor");});
test("spornstreichs -> spornstreich", function() {deepEqual( Stem("spornstreichs"), "spornstreich");});
test("spornte -> spornt", function() {deepEqual( Stem("spornte"), "spornt");});
test("sport -> sport", function() {deepEqual( Stem("sport"), "sport");});
test("spott -> spott", function() {deepEqual( Stem("spott"), "spott");});
test("spotten -> spott", function() {deepEqual( Stem("spotten"), "spott");});
test("spötter -> spott", function() {deepEqual( Stem("spötter"), "spott");});
test("spottet -> spottet", function() {deepEqual( Stem("spottet"), "spottet");});
test("spottete -> spottet", function() {deepEqual( Stem("spottete"), "spottet");});
test("spottgeburten -> spottgeburt", function() {deepEqual( Stem("spottgeburten"), "spottgeburt");});
test("spöttisch -> spottisch", function() {deepEqual( Stem("spöttisch"), "spottisch");});
test("spöttische -> spottisch", function() {deepEqual( Stem("spöttische"), "spottisch");});
test("spöttischem -> spottisch", function() {deepEqual( Stem("spöttischem"), "spottisch");});
test("spöttischen -> spottisch", function() {deepEqual( Stem("spöttischen"), "spottisch");});
test("spottlaus -> spottlaus", function() {deepEqual( Stem("spottlaus"), "spottlaus");});
test("spottlust -> spottlust", function() {deepEqual( Stem("spottlust"), "spottlust");});
test("spp -> spp", function() {deepEqual( Stem("spp"), "spp");});
test("sprach -> sprach", function() {deepEqual( Stem("sprach"), "sprach");});
test("sprache -> sprach", function() {deepEqual( Stem("sprache"), "sprach");});
test("spräche -> sprach", function() {deepEqual( Stem("spräche"), "sprach");});
test("sprachen -> sprach", function() {deepEqual( Stem("sprachen"), "sprach");});
test("sprächest -> sprach", function() {deepEqual( Stem("sprächest"), "sprach");});
test("sprachgebrauche -> sprachgebrauch", function() {deepEqual( Stem("sprachgebrauche"), "sprachgebrauch");});
test("sprachigen -> sprachig", function() {deepEqual( Stem("sprachigen"), "sprachig");});
test("sprachlehre -> sprachlehr", function() {deepEqual( Stem("sprachlehre"), "sprachlehr");});
test("sprachrohr -> sprachrohr", function() {deepEqual( Stem("sprachrohr"), "sprachrohr");});
test("sprachst -> sprach", function() {deepEqual( Stem("sprachst"), "sprach");});
test("sprang -> sprang", function() {deepEqual( Stem("sprang"), "sprang");});
test("sprangen -> sprang", function() {deepEqual( Stem("sprangen"), "sprang");});
test("spreche -> sprech", function() {deepEqual( Stem("spreche"), "sprech");});
test("sprechen -> sprech", function() {deepEqual( Stem("sprechen"), "sprech");});
test("sprechend -> sprechend", function() {deepEqual( Stem("sprechend"), "sprechend");});
test("sprechenden -> sprechend", function() {deepEqual( Stem("sprechenden"), "sprechend");});
test("sprechender -> sprechend", function() {deepEqual( Stem("sprechender"), "sprechend");});
test("sprechens -> sprech", function() {deepEqual( Stem("sprechens"), "sprech");});
test("sprecht -> sprecht", function() {deepEqual( Stem("sprecht"), "sprecht");});
test("sprechzeit -> sprechzeit", function() {deepEqual( Stem("sprechzeit"), "sprechzeit");});
test("spree -> spree", function() {deepEqual( Stem("spree"), "spree");});
test("spreemetropole -> spreemetropol", function() {deepEqual( Stem("spreemetropole"), "spreemetropol");});
test("spreizen -> spreiz", function() {deepEqual( Stem("spreizen"), "spreiz");});
test("spreizte -> spreizt", function() {deepEqual( Stem("spreizte"), "spreizt");});
test("sprengen -> spreng", function() {deepEqual( Stem("sprengen"), "spreng");});
test("sprengkapseln -> sprengkapseln", function() {deepEqual( Stem("sprengkapseln"), "sprengkapseln");});
test("sprengt -> sprengt", function() {deepEqual( Stem("sprengt"), "sprengt");});
test("sprengte -> sprengt", function() {deepEqual( Stem("sprengte"), "sprengt");});
test("spreu -> spreu", function() {deepEqual( Stem("spreu"), "spreu");});
test("sprich -> sprich", function() {deepEqual( Stem("sprich"), "sprich");});
test("sprichst -> sprich", function() {deepEqual( Stem("sprichst"), "sprich");});
test("spricht -> spricht", function() {deepEqual( Stem("spricht"), "spricht");});
test("sprichwort -> sprichwort", function() {deepEqual( Stem("sprichwort"), "sprichwort");});
test("sprichwörter -> sprichwort", function() {deepEqual( Stem("sprichwörter"), "sprichwort");});
test("sprichwortes -> sprichwort", function() {deepEqual( Stem("sprichwortes"), "sprichwort");});
test("spring -> spring", function() {deepEqual( Stem("spring"), "spring");});
test("springen -> spring", function() {deepEqual( Stem("springen"), "spring");});
test("springer -> spring", function() {deepEqual( Stem("springer"), "spring");});
test("springt -> springt", function() {deepEqual( Stem("springt"), "springt");});
test("spritze -> spritz", function() {deepEqual( Stem("spritze"), "spritz");});
test("spritzen -> spritz", function() {deepEqual( Stem("spritzen"), "spritz");});
test("spröde -> sprod", function() {deepEqual( Stem("spröde"), "sprod");});
test("sprödeste -> sprod", function() {deepEqual( Stem("sprödeste"), "sprod");});
test("sprödigkeit -> sprodig", function() {deepEqual( Stem("sprödigkeit"), "sprodig");});
test("spross -> spross", function() {deepEqual( Stem("spross"), "spross");});
test("sproß -> spross", function() {deepEqual( Stem("sproß"), "spross");});
test("sprosse -> spross", function() {deepEqual( Stem("sprosse"), "spross");});
test("sprossen -> spross", function() {deepEqual( Stem("sprossen"), "spross");});
test("sprossend -> sprossend", function() {deepEqual( Stem("sprossend"), "sprossend");});
test("sprossenden -> sprossend", function() {deepEqual( Stem("sprossenden"), "sprossend");});
test("sprösslinge -> sprossling", function() {deepEqual( Stem("sprösslinge"), "sprossling");});
test("sprößlinge -> sprossling", function() {deepEqual( Stem("sprößlinge"), "sprossling");});
test("sprosste -> sprosst", function() {deepEqual( Stem("sprosste"), "sprosst");});
test("sproßte -> sprosst", function() {deepEqual( Stem("sproßte"), "sprosst");});
test("spruch -> spruch", function() {deepEqual( Stem("spruch"), "spruch");});
test("sprüche -> spruch", function() {deepEqual( Stem("sprüche"), "spruch");});
test("spruches -> spruch", function() {deepEqual( Stem("spruches"), "spruch");});
test("sprüchlein -> spruchlein", function() {deepEqual( Stem("sprüchlein"), "spruchlein");});
test("spruchversen -> spruchvers", function() {deepEqual( Stem("spruchversen"), "spruchvers");});
test("spruchweise -> spruchweis", function() {deepEqual( Stem("spruchweise"), "spruchweis");});
test("sprudel -> sprudel", function() {deepEqual( Stem("sprudel"), "sprudel");});
test("sprudelflasche -> sprudelflasch", function() {deepEqual( Stem("sprudelflasche"), "sprudelflasch");});
test("sprühende -> spruhend", function() {deepEqual( Stem("sprühende"), "spruhend");});
test("sprung -> sprung", function() {deepEqual( Stem("sprung"), "sprung");});
test("sprungbrett -> sprungbrett", function() {deepEqual( Stem("sprungbrett"), "sprungbrett");});
test("sprunge -> sprung", function() {deepEqual( Stem("sprunge"), "sprung");});
test("sprünge -> sprung", function() {deepEqual( Stem("sprünge"), "sprung");});
test("sprüngen -> sprung", function() {deepEqual( Stem("sprüngen"), "sprung");});
test("spucke -> spuck", function() {deepEqual( Stem("spucke"), "spuck");});
test("spuckte -> spuckt", function() {deepEqual( Stem("spuckte"), "spuckt");});
test("spuk -> spuk", function() {deepEqual( Stem("spuk"), "spuk");});
test("spülte -> spult", function() {deepEqual( Stem("spülte"), "spult");});
test("spur -> spur", function() {deepEqual( Stem("spur"), "spur");});
test("spür -> spur", function() {deepEqual( Stem("spür"), "spur");});
test("spürbar -> spurbar", function() {deepEqual( Stem("spürbar"), "spurbar");});
test("spuren -> spur", function() {deepEqual( Stem("spuren"), "spur");});
test("spüren -> spur", function() {deepEqual( Stem("spüren"), "spur");});
test("spürte -> spurt", function() {deepEqual( Stem("spürte"), "spurt");});
test("sputet -> sputet", function() {deepEqual( Stem("sputet"), "sputet");});
test("sputete -> sputet", function() {deepEqual( Stem("sputete"), "sputet");});
test("squat -> squat", function() {deepEqual( Stem("squat"), "squat");});
test("sr -> sr", function() {deepEqual( Stem("sr"), "sr");});
test("st -> st", function() {deepEqual( Stem("st"), "st");});
test("staat -> staat", function() {deepEqual( Stem("staat"), "staat");});
test("staate -> staat", function() {deepEqual( Stem("staate"), "staat");});
test("staaten -> staat", function() {deepEqual( Stem("staaten"), "staat");});
test("staates -> staat", function() {deepEqual( Stem("staates"), "staat");});
test("staatlich -> staatlich", function() {deepEqual( Stem("staatlich"), "staatlich");});
test("staatliche -> staatlich", function() {deepEqual( Stem("staatliche"), "staatlich");});
test("staatlicher -> staatlich", function() {deepEqual( Stem("staatlicher"), "staatlich");});
test("staatlicherseits -> staatlicherseit", function() {deepEqual( Stem("staatlicherseits"), "staatlicherseit");});
test("staatsanwalt -> staatsanwalt", function() {deepEqual( Stem("staatsanwalt"), "staatsanwalt");});
test("staatsbürgerbewußtsein -> staatsburgerbewusstsein", function() {deepEqual( Stem("staatsbürgerbewußtsein"), "staatsburgerbewusstsein");});
test("staatskirche -> staatskirch", function() {deepEqual( Stem("staatskirche"), "staatskirch");});
test("staatskirchen -> staatskirch", function() {deepEqual( Stem("staatskirchen"), "staatskirch");});
test("staatskleid -> staatskleid", function() {deepEqual( Stem("staatskleid"), "staatskleid");});
test("staatsknete -> staatsknet", function() {deepEqual( Stem("staatsknete"), "staatsknet");});
test("staatsprüfungen -> staatspruf", function() {deepEqual( Stem("staatsprüfungen"), "staatspruf");});
test("staatsschuld -> staatsschuld", function() {deepEqual( Stem("staatsschuld"), "staatsschuld");});
test("staatssicherheits -> staatssich", function() {deepEqual( Stem("staatssicherheits"), "staatssich");});
test("staatsverschuldung -> staatsverschuld", function() {deepEqual( Stem("staatsverschuldung"), "staatsverschuld");});
test("staatswesen -> staatswes", function() {deepEqual( Stem("staatswesen"), "staatswes");});
test("stab -> stab", function() {deepEqual( Stem("stab"), "stab");});
test("stäbchen -> stabch", function() {deepEqual( Stem("stäbchen"), "stabch");});
test("stabe -> stab", function() {deepEqual( Stem("stabe"), "stab");});
test("stäbe -> stab", function() {deepEqual( Stem("stäbe"), "stab");});
test("stäben -> stab", function() {deepEqual( Stem("stäben"), "stab");});
test("stabes -> stab", function() {deepEqual( Stem("stabes"), "stab");});
test("stabil -> stabil", function() {deepEqual( Stem("stabil"), "stabil");});
test("stabilisierend -> stabilisier", function() {deepEqual( Stem("stabilisierend"), "stabilisier");});
test("stabilisierende -> stabilisier", function() {deepEqual( Stem("stabilisierende"), "stabilisier");});
test("stabsoffiziere -> stabsoffizi", function() {deepEqual( Stem("stabsoffiziere"), "stabsoffizi");});
test("stach -> stach", function() {deepEqual( Stem("stach"), "stach");});
test("stachel -> stachel", function() {deepEqual( Stem("stachel"), "stachel");});
test("stachelgesträuch -> stachelgestrauch", function() {deepEqual( Stem("stachelgesträuch"), "stachelgestrauch");});
test("stachelgewächs -> stachelgewach", function() {deepEqual( Stem("stachelgewächs"), "stachelgewach");});
test("stacheln -> stacheln", function() {deepEqual( Stem("stacheln"), "stacheln");});
test("stachelstrauch -> stachelstrauch", function() {deepEqual( Stem("stachelstrauch"), "stachelstrauch");});
test("stachen -> stach", function() {deepEqual( Stem("stachen"), "stach");});
test("stachlige -> stachlig", function() {deepEqual( Stem("stachlige"), "stachlig");});
test("stachligen -> stachlig", function() {deepEqual( Stem("stachligen"), "stachlig");});
test("stad -> stad", function() {deepEqual( Stem("stad"), "stad");});
test("stadien -> stadi", function() {deepEqual( Stem("stadien"), "stadi");});
test("stadium -> stadium", function() {deepEqual( Stem("stadium"), "stadium");});
test("stadt -> stadt", function() {deepEqual( Stem("stadt"), "stadt");});
test("städtchen -> stadtch", function() {deepEqual( Stem("städtchen"), "stadtch");});
test("städtchens -> stadtch", function() {deepEqual( Stem("städtchens"), "stadtch");});
test("städte -> stadt", function() {deepEqual( Stem("städte"), "stadt");});
test("städten -> stadt", function() {deepEqual( Stem("städten"), "stadt");});
test("städter -> stadt", function() {deepEqual( Stem("städter"), "stadt");});
test("stadtfrau -> stadtfrau", function() {deepEqual( Stem("stadtfrau"), "stadtfrau");});
test("stadtgesetze -> stadtgesetz", function() {deepEqual( Stem("stadtgesetze"), "stadtgesetz");});
test("stadthexenmeister -> stadthexenmeist", function() {deepEqual( Stem("stadthexenmeister"), "stadthexenmeist");});
test("städtisch -> stadtisch", function() {deepEqual( Stem("städtisch"), "stadtisch");});
test("städtischen -> stadtisch", function() {deepEqual( Stem("städtischen"), "stadtisch");});
test("städtlein -> stadtlein", function() {deepEqual( Stem("städtlein"), "stadtlein");});
test("stadtmauer -> stadtmau", function() {deepEqual( Stem("stadtmauer"), "stadtmau");});
test("stadtname -> stadtnam", function() {deepEqual( Stem("stadtname"), "stadtnam");});
test("stadtpfarrer -> stadtpfarr", function() {deepEqual( Stem("stadtpfarrer"), "stadtpfarr");});
test("stadtrand -> stadtrand", function() {deepEqual( Stem("stadtrand"), "stadtrand");});
test("stadtschreiber -> stadtschreib", function() {deepEqual( Stem("stadtschreiber"), "stadtschreib");});
test("stadtschule -> stadtschul", function() {deepEqual( Stem("stadtschule"), "stadtschul");});
test("stadtteil -> stadtteil", function() {deepEqual( Stem("stadtteil"), "stadtteil");});
test("stadtviertel -> stadtviertel", function() {deepEqual( Stem("stadtviertel"), "stadtviertel");});
test("stadtvierteln -> stadtvierteln", function() {deepEqual( Stem("stadtvierteln"), "stadtvierteln");});
test("stadtwohnung -> stadtwohn", function() {deepEqual( Stem("stadtwohnung"), "stadtwohn");});
test("stadtzürcher -> stadtzurch", function() {deepEqual( Stem("stadtzürcher"), "stadtzurch");});
test("staffiert -> staffiert", function() {deepEqual( Stem("staffiert"), "staffiert");});
test("stagnation -> stagnation", function() {deepEqual( Stem("stagnation"), "stagnation");});
test("stahl -> stahl", function() {deepEqual( Stem("stahl"), "stahl");});
test("stahlblauen -> stahlblau", function() {deepEqual( Stem("stahlblauen"), "stahlblau");});
test("stählen -> stahl", function() {deepEqual( Stem("stählen"), "stahl");});
test("stak -> stak", function() {deepEqual( Stem("stak"), "stak");});
test("stäken -> stak", function() {deepEqual( Stem("stäken"), "stak");});
test("staketen -> staket", function() {deepEqual( Stem("staketen"), "staket");});
test("stall -> stall", function() {deepEqual( Stem("stall"), "stall");});
test("stalle -> stall", function() {deepEqual( Stem("stalle"), "stall");});
test("ställe -> stall", function() {deepEqual( Stem("ställe"), "stall");});
test("stallkette -> stallkett", function() {deepEqual( Stem("stallkette"), "stallkett");});
test("stallknechte -> stallknecht", function() {deepEqual( Stem("stallknechte"), "stallknecht");});
test("stalltür -> stalltur", function() {deepEqual( Stem("stalltür"), "stalltur");});
test("stalsett -> stalsett", function() {deepEqual( Stem("stalsett"), "stalsett");});
test("stamina -> stamina", function() {deepEqual( Stem("stamina"), "stamina");});
test("stamm -> stamm", function() {deepEqual( Stem("stamm"), "stamm");});
test("stämmchen -> stammch", function() {deepEqual( Stem("stämmchen"), "stammch");});
test("stamme -> stamm", function() {deepEqual( Stem("stamme"), "stamm");});
test("stämme -> stamm", function() {deepEqual( Stem("stämme"), "stamm");});
test("stammelte -> stammelt", function() {deepEqual( Stem("stammelte"), "stammelt");});
test("stammen -> stamm", function() {deepEqual( Stem("stammen"), "stamm");});
test("stämmen -> stamm", function() {deepEqual( Stem("stämmen"), "stamm");});
test("stammende -> stammend", function() {deepEqual( Stem("stammende"), "stammend");});
test("stammenden -> stammend", function() {deepEqual( Stem("stammenden"), "stammend");});
test("stammlokal -> stammlokal", function() {deepEqual( Stem("stammlokal"), "stammlokal");});
test("stammschlosses -> stammschloss", function() {deepEqual( Stem("stammschlosses"), "stammschloss");});
test("stammt -> stammt", function() {deepEqual( Stem("stammt"), "stammt");});
test("stammtafel -> stammtafel", function() {deepEqual( Stem("stammtafel"), "stammtafel");});
test("stammte -> stammt", function() {deepEqual( Stem("stammte"), "stammt");});
test("stammten -> stammt", function() {deepEqual( Stem("stammten"), "stammt");});
test("stammtischfeierlichkeit -> stammtischfeier", function() {deepEqual( Stem("stammtischfeierlichkeit"), "stammtischfeier");});
test("stammväter -> stammvat", function() {deepEqual( Stem("stammväter"), "stammvat");});
test("stammvaters -> stammvat", function() {deepEqual( Stem("stammvaters"), "stammvat");});
test("stampfe -> stampf", function() {deepEqual( Stem("stampfe"), "stampf");});
test("stampfen -> stampf", function() {deepEqual( Stem("stampfen"), "stampf");});
test("stampfens -> stampf", function() {deepEqual( Stem("stampfens"), "stampf");});
test("stand -> stand", function() {deepEqual( Stem("stand"), "stand");});
test("ständchen -> standch", function() {deepEqual( Stem("ständchen"), "standch");});
test("stande -> stand", function() {deepEqual( Stem("stande"), "stand");});
test("stände -> stand", function() {deepEqual( Stem("stände"), "stand");});
test("standen -> stand", function() {deepEqual( Stem("standen"), "stand");});
test("standenes -> stand", function() {deepEqual( Stem("standenes"), "stand");});
test("ständerat -> standerat", function() {deepEqual( Stem("ständerat"), "standerat");});
test("standhalten -> standhalt", function() {deepEqual( Stem("standhalten"), "standhalt");});
test("ständig -> standig", function() {deepEqual( Stem("ständig"), "standig");});
test("ständige -> standig", function() {deepEqual( Stem("ständige"), "standig");});
test("standort -> standort", function() {deepEqual( Stem("standort"), "standort");});
test("standpunkt -> standpunkt", function() {deepEqual( Stem("standpunkt"), "standpunkt");});
test("standpunkte -> standpunkt", function() {deepEqual( Stem("standpunkte"), "standpunkt");});
test("standrecht -> standrecht", function() {deepEqual( Stem("standrecht"), "standrecht");});
test("stange -> stang", function() {deepEqual( Stem("stange"), "stang");});
test("stangen -> stang", function() {deepEqual( Stem("stangen"), "stang");});
test("stank -> stank", function() {deepEqual( Stem("stank"), "stank");});
test("stänker -> stank", function() {deepEqual( Stem("stänker"), "stank");});
test("stapften -> stapft", function() {deepEqual( Stem("stapften"), "stapft");});
test("starb -> starb", function() {deepEqual( Stem("starb"), "starb");});
test("starben -> starb", function() {deepEqual( Stem("starben"), "starb");});
test("stärger -> starg", function() {deepEqual( Stem("stärger"), "starg");});
test("stark -> stark", function() {deepEqual( Stem("stark"), "stark");});
test("starke -> stark", function() {deepEqual( Stem("starke"), "stark");});
test("stärke -> stark", function() {deepEqual( Stem("stärke"), "stark");});
test("starkem -> stark", function() {deepEqual( Stem("starkem"), "stark");});
test("starken -> stark", function() {deepEqual( Stem("starken"), "stark");});
test("stärken -> stark", function() {deepEqual( Stem("stärken"), "stark");});
test("starker -> stark", function() {deepEqual( Stem("starker"), "stark");});
test("stärker -> stark", function() {deepEqual( Stem("stärker"), "stark");});
test("stärkere -> stark", function() {deepEqual( Stem("stärkere"), "stark");});
test("stärkeren -> stark", function() {deepEqual( Stem("stärkeren"), "stark");});
test("stärkern -> stark", function() {deepEqual( Stem("stärkern"), "stark");});
test("starkes -> stark", function() {deepEqual( Stem("starkes"), "stark");});
test("stärkest -> stark", function() {deepEqual( Stem("stärkest"), "stark");});
test("stärkste -> stark", function() {deepEqual( Stem("stärkste"), "stark");});
test("stärksten -> stark", function() {deepEqual( Stem("stärksten"), "stark");});
test("stärkte -> starkt", function() {deepEqual( Stem("stärkte"), "starkt");});
test("stärkung -> starkung", function() {deepEqual( Stem("stärkung"), "starkung");});
test("starnberg -> starnberg", function() {deepEqual( Stem("starnberg"), "starnberg");});
test("starnberger -> starnberg", function() {deepEqual( Stem("starnberger"), "starnberg");});
test("starr -> starr", function() {deepEqual( Stem("starr"), "starr");});
test("starre -> starr", function() {deepEqual( Stem("starre"), "starr");});
test("starren -> starr", function() {deepEqual( Stem("starren"), "starr");});
test("starrkopf -> starrkopf", function() {deepEqual( Stem("starrkopf"), "starrkopf");});
test("starrte -> starrt", function() {deepEqual( Stem("starrte"), "starrt");});
test("starrten -> starrt", function() {deepEqual( Stem("starrten"), "starrt");});
test("starten -> start", function() {deepEqual( Stem("starten"), "start");});
test("statdanzeiger -> statdanzeig", function() {deepEqual( Stem("statdanzeiger"), "statdanzeig");});
test("station -> station", function() {deepEqual( Stem("station"), "station");});
test("statistik -> statist", function() {deepEqual( Stem("statistik"), "statist");});
test("statistisch -> statist", function() {deepEqual( Stem("statistisch"), "statist");});
test("statt -> statt", function() {deepEqual( Stem("statt"), "statt");});
test("stattdessen -> stattdess", function() {deepEqual( Stem("stattdessen"), "stattdess");});
test("stätte -> statt", function() {deepEqual( Stem("stätte"), "statt");});
test("statten -> statt", function() {deepEqual( Stem("statten"), "statt");});
test("stattfand -> stattfand", function() {deepEqual( Stem("stattfand"), "stattfand");});
test("stattfände -> stattfand", function() {deepEqual( Stem("stattfände"), "stattfand");});
test("stattfanden -> stattfand", function() {deepEqual( Stem("stattfanden"), "stattfand");});
test("stattfinde -> stattfind", function() {deepEqual( Stem("stattfinde"), "stattfind");});
test("stattfinden -> stattfind", function() {deepEqual( Stem("stattfinden"), "stattfind");});
test("stattfindenden -> stattfind", function() {deepEqual( Stem("stattfindenden"), "stattfind");});
test("stattfindet -> stattfindet", function() {deepEqual( Stem("stattfindet"), "stattfindet");});
test("stattgefunden -> stattgefund", function() {deepEqual( Stem("stattgefunden"), "stattgefund");});
test("statthatte -> statthatt", function() {deepEqual( Stem("statthatte"), "statthatt");});
test("stattlich -> stattlich", function() {deepEqual( Stem("stattlich"), "stattlich");});
test("stattliche -> stattlich", function() {deepEqual( Stem("stattliche"), "stattlich");});
test("stattlichen -> stattlich", function() {deepEqual( Stem("stattlichen"), "stattlich");});
test("stattliches -> stattlich", function() {deepEqual( Stem("stattliches"), "stattlich");});
test("stattlichkeit -> stattlich", function() {deepEqual( Stem("stattlichkeit"), "stattlich");});
test("statue -> statu", function() {deepEqual( Stem("statue"), "statu");});
test("status -> status", function() {deepEqual( Stem("status"), "status");});
test("statuta -> statuta", function() {deepEqual( Stem("statuta"), "statuta");});
test("statutum -> statutum", function() {deepEqual( Stem("statutum"), "statutum");});
test("staub -> staub", function() {deepEqual( Stem("staub"), "staub");});
test("stäubchen -> staubch", function() {deepEqual( Stem("stäubchen"), "staubch");});
test("staube -> staub", function() {deepEqual( Stem("staube"), "staub");});
test("staubes -> staub", function() {deepEqual( Stem("staubes"), "staub");});
test("staubhemden -> staubhemd", function() {deepEqual( Stem("staubhemden"), "staubhemd");});
test("staubigen -> staubig", function() {deepEqual( Stem("staubigen"), "staubig");});
test("staubte -> staubt", function() {deepEqual( Stem("staubte"), "staubt");});
test("staubwolke -> staubwolk", function() {deepEqual( Stem("staubwolke"), "staubwolk");});
test("staude -> staud", function() {deepEqual( Stem("staude"), "staud");});
test("stauden -> staud", function() {deepEqual( Stem("stauden"), "staud");});
test("staune -> staun", function() {deepEqual( Stem("staune"), "staun");});
test("staunen -> staun", function() {deepEqual( Stem("staunen"), "staun");});
test("staunend -> staunend", function() {deepEqual( Stem("staunend"), "staunend");});
test("staunte -> staunt", function() {deepEqual( Stem("staunte"), "staunt");});
test("stechen -> stech", function() {deepEqual( Stem("stechen"), "stech");});
test("stechend -> stechend", function() {deepEqual( Stem("stechend"), "stechend");});
test("stechender -> stechend", function() {deepEqual( Stem("stechender"), "stechend");});
test("stechpalme -> stechpalm", function() {deepEqual( Stem("stechpalme"), "stechpalm");});
test("stecke -> steck", function() {deepEqual( Stem("stecke"), "steck");});
test("stecken -> steck", function() {deepEqual( Stem("stecken"), "steck");});
test("steckenblieb -> steckenblieb", function() {deepEqual( Stem("steckenblieb"), "steckenblieb");});
test("steckend -> steckend", function() {deepEqual( Stem("steckend"), "steckend");});
test("steckenden -> steckend", function() {deepEqual( Stem("steckenden"), "steckend");});
test("steckengeblieben -> steckengeblieb", function() {deepEqual( Stem("steckengeblieben"), "steckengeblieb");});
test("steckleinspringer -> steckleinspring", function() {deepEqual( Stem("steckleinspringer"), "steckleinspring");});
test("stecknadel -> stecknadel", function() {deepEqual( Stem("stecknadel"), "stecknadel");});
test("stecknadelaugen -> stecknadelaug", function() {deepEqual( Stem("stecknadelaugen"), "stecknadelaug");});
test("steckt -> steckt", function() {deepEqual( Stem("steckt"), "steckt");});
test("steckte -> steckt", function() {deepEqual( Stem("steckte"), "steckt");});
test("steckten -> steckt", function() {deepEqual( Stem("steckten"), "steckt");});
test("steg -> steg", function() {deepEqual( Stem("steg"), "steg");});
test("stege -> steg", function() {deepEqual( Stem("stege"), "steg");});
test("stegemann -> stegemann", function() {deepEqual( Stem("stegemann"), "stegemann");});
test("stegreif -> stegreif", function() {deepEqual( Stem("stegreif"), "stegreif");});
test("steh -> steh", function() {deepEqual( Stem("steh"), "steh");});
test("stehe -> steh", function() {deepEqual( Stem("stehe"), "steh");});
test("stehen -> steh", function() {deepEqual( Stem("stehen"), "steh");});
test("stehenbleiben -> stehenbleib", function() {deepEqual( Stem("stehenbleiben"), "stehenbleib");});
test("stehenbleibend -> stehenbleib", function() {deepEqual( Stem("stehenbleibend"), "stehenbleib");});
test("stehenbleibens -> stehenbleib", function() {deepEqual( Stem("stehenbleibens"), "stehenbleib");});
test("stehenbleibt -> stehenbleibt", function() {deepEqual( Stem("stehenbleibt"), "stehenbleibt");});
test("stehenblieb -> stehenblieb", function() {deepEqual( Stem("stehenblieb"), "stehenblieb");});
test("stehend -> stehend", function() {deepEqual( Stem("stehend"), "stehend");});
test("stehenden -> stehend", function() {deepEqual( Stem("stehenden"), "stehend");});
test("stehender -> stehend", function() {deepEqual( Stem("stehender"), "stehend");});
test("stehengeblieben -> stehengeblieb", function() {deepEqual( Stem("stehengeblieben"), "stehengeblieb");});
test("stehenliess -> stehenliess", function() {deepEqual( Stem("stehenliess"), "stehenliess");});
test("stehens -> steh", function() {deepEqual( Stem("stehens"), "steh");});
test("stehest -> steh", function() {deepEqual( Stem("stehest"), "steh");});
test("stehet -> stehet", function() {deepEqual( Stem("stehet"), "stehet");});
test("stehle -> stehl", function() {deepEqual( Stem("stehle"), "stehl");});
test("stehlen -> stehl", function() {deepEqual( Stem("stehlen"), "stehl");});
test("stehn -> stehn", function() {deepEqual( Stem("stehn"), "stehn");});
test("stehnblieben -> stehnblieb", function() {deepEqual( Stem("stehnblieben"), "stehnblieb");});
test("stehst -> steh", function() {deepEqual( Stem("stehst"), "steh");});
test("steht -> steht", function() {deepEqual( Stem("steht"), "steht");});
test("steif -> steif", function() {deepEqual( Stem("steif"), "steif");});
test("steifbeinig -> steifbein", function() {deepEqual( Stem("steifbeinig"), "steifbein");});
test("steife -> steif", function() {deepEqual( Stem("steife"), "steif");});
test("steifen -> steif", function() {deepEqual( Stem("steifen"), "steif");});
test("steifendem -> steifend", function() {deepEqual( Stem("steifendem"), "steifend");});
test("steifer -> steif", function() {deepEqual( Stem("steifer"), "steif");});
test("steig -> steig", function() {deepEqual( Stem("steig"), "steig");});
test("steigbügel -> steigbugel", function() {deepEqual( Stem("steigbügel"), "steigbugel");});
test("steige -> steig", function() {deepEqual( Stem("steige"), "steig");});
test("steigen -> steig", function() {deepEqual( Stem("steigen"), "steig");});
test("steigend -> steigend", function() {deepEqual( Stem("steigend"), "steigend");});
test("steigende -> steigend", function() {deepEqual( Stem("steigende"), "steigend");});
test("steigern -> steig", function() {deepEqual( Stem("steigern"), "steig");});
test("steigerte -> steigert", function() {deepEqual( Stem("steigerte"), "steigert");});
test("steigerung -> steiger", function() {deepEqual( Stem("steigerung"), "steiger");});
test("steiget -> steiget", function() {deepEqual( Stem("steiget"), "steiget");});
test("steigt -> steigt", function() {deepEqual( Stem("steigt"), "steigt");});
test("steil -> steil", function() {deepEqual( Stem("steil"), "steil");});
test("steile -> steil", function() {deepEqual( Stem("steile"), "steil");});
test("steilen -> steil", function() {deepEqual( Stem("steilen"), "steil");});
test("stein -> stein", function() {deepEqual( Stem("stein"), "stein");});
test("steinbeschwerte -> steinbeschwert", function() {deepEqual( Stem("steinbeschwerte"), "steinbeschwert");});
test("steinblöcke -> steinblock", function() {deepEqual( Stem("steinblöcke"), "steinblock");});
test("steinboden -> steinbod", function() {deepEqual( Stem("steinboden"), "steinbod");});
test("steinbruch -> steinbruch", function() {deepEqual( Stem("steinbruch"), "steinbruch");});
test("steinbrüche -> steinbruch", function() {deepEqual( Stem("steinbrüche"), "steinbruch");});
test("steinbruches -> steinbruch", function() {deepEqual( Stem("steinbruches"), "steinbruch");});
test("steinchen -> steinch", function() {deepEqual( Stem("steinchen"), "steinch");});
test("steindinge -> steinding", function() {deepEqual( Stem("steindinge"), "steinding");});
test("steine -> stein", function() {deepEqual( Stem("steine"), "stein");});
test("steineiche -> steineich", function() {deepEqual( Stem("steineiche"), "steineich");});
test("steinen -> stein", function() {deepEqual( Stem("steinen"), "stein");});
test("steinerne -> steinern", function() {deepEqual( Stem("steinerne"), "steinern");});
test("steinernen -> steinern", function() {deepEqual( Stem("steinernen"), "steinern");});
test("steinernes -> steinern", function() {deepEqual( Stem("steinernes"), "steinern");});
test("steinfleckes -> steinfleck", function() {deepEqual( Stem("steinfleckes"), "steinfleck");});
test("steingeröll -> steingeroll", function() {deepEqual( Stem("steingeröll"), "steingeroll");});
test("steingraue -> steingrau", function() {deepEqual( Stem("steingraue"), "steingrau");});
test("steinhaufen -> steinhauf", function() {deepEqual( Stem("steinhaufen"), "steinhauf");});
test("steinige -> steinig", function() {deepEqual( Stem("steinige"), "steinig");});
test("steinigen -> steinig", function() {deepEqual( Stem("steinigen"), "steinig");});
test("steinigens -> steinig", function() {deepEqual( Stem("steinigens"), "steinig");});
test("steiniges -> steinig", function() {deepEqual( Stem("steiniges"), "steinig");});
test("steinigung -> steinig", function() {deepEqual( Stem("steinigung"), "steinig");});
test("steinkamm -> steinkamm", function() {deepEqual( Stem("steinkamm"), "steinkamm");});
test("steinklotz -> steinklotz", function() {deepEqual( Stem("steinklotz"), "steinklotz");});
test("steinlagern -> steinlag", function() {deepEqual( Stem("steinlagern"), "steinlag");});
test("steinlasten -> steinlast", function() {deepEqual( Stem("steinlasten"), "steinlast");});
test("steinmasse -> steinmass", function() {deepEqual( Stem("steinmasse"), "steinmass");});
test("steinpieper -> steinpiep", function() {deepEqual( Stem("steinpieper"), "steinpiep");});
test("steinpiepers -> steinpiep", function() {deepEqual( Stem("steinpiepers"), "steinpiep");});
test("steinrand -> steinrand", function() {deepEqual( Stem("steinrand"), "steinrand");});
test("steins -> stein", function() {deepEqual( Stem("steins"), "stein");});
test("steinwerk -> steinwerk", function() {deepEqual( Stem("steinwerk"), "steinwerk");});
test("stell -> stell", function() {deepEqual( Stem("stell"), "stell");});
test("stelle -> stell", function() {deepEqual( Stem("stelle"), "stell");});
test("stelledie -> stelledi", function() {deepEqual( Stem("stelledie"), "stelledi");});
test("stellen -> stell", function() {deepEqual( Stem("stellen"), "stell");});
test("stelleninhaber -> stelleninhab", function() {deepEqual( Stem("stelleninhaber"), "stelleninhab");});
test("stellenleiters -> stellenleit", function() {deepEqual( Stem("stellenleiters"), "stellenleit");});
test("stellt -> stellt", function() {deepEqual( Stem("stellt"), "stellt");});
test("stellte -> stellt", function() {deepEqual( Stem("stellte"), "stellt");});
test("stellten -> stellt", function() {deepEqual( Stem("stellten"), "stellt");});
test("stellung -> stellung", function() {deepEqual( Stem("stellung"), "stellung");});
test("stellungen -> stellung", function() {deepEqual( Stem("stellungen"), "stellung");});
test("stellungnahmen -> stellungnahm", function() {deepEqual( Stem("stellungnahmen"), "stellungnahm");});
test("stellvertretende -> stellvertret", function() {deepEqual( Stem("stellvertretende"), "stellvertret");});
test("stellvertreter -> stellvertret", function() {deepEqual( Stem("stellvertreter"), "stellvertret");});
test("stellvertreters -> stellvertret", function() {deepEqual( Stem("stellvertreters"), "stellvertret");});
test("stelzten -> stelzt", function() {deepEqual( Stem("stelzten"), "stelzt");});
test("stemmte -> stemmt", function() {deepEqual( Stem("stemmte"), "stemmt");});
test("stempel -> stempel", function() {deepEqual( Stem("stempel"), "stempel");});
test("stemraketen -> stemraket", function() {deepEqual( Stem("stemraketen"), "stemraket");});
test("sten -> sten", function() {deepEqual( Stem("sten"), "sten");});
test("stengel -> stengel", function() {deepEqual( Stem("stengel"), "stengel");});
test("steppen -> stepp", function() {deepEqual( Stem("steppen"), "stepp");});
test("sterbe -> sterb", function() {deepEqual( Stem("sterbe"), "sterb");});
test("sterbebegleiterdie -> sterbebegleiterdi", function() {deepEqual( Stem("sterbebegleiterdie"), "sterbebegleiterdi");});
test("sterbebegleitungs -> sterbebegleit", function() {deepEqual( Stem("sterbebegleitungs"), "sterbebegleit");});
test("sterbebette -> sterbebett", function() {deepEqual( Stem("sterbebette"), "sterbebett");});
test("sterbeforscherin -> sterbeforscherin", function() {deepEqual( Stem("sterbeforscherin"), "sterbeforscherin");});
test("sterbeforschung -> sterbeforsch", function() {deepEqual( Stem("sterbeforschung"), "sterbeforsch");});
test("sterben -> sterb", function() {deepEqual( Stem("sterben"), "sterb");});
test("sterbend -> sterbend", function() {deepEqual( Stem("sterbend"), "sterbend");});
test("sterbenden -> sterbend", function() {deepEqual( Stem("sterbenden"), "sterbend");});
test("sterbendes -> sterbend", function() {deepEqual( Stem("sterbendes"), "sterbend");});
test("sterbenswörtchen -> sterbenswortch", function() {deepEqual( Stem("sterbenswörtchen"), "sterbenswortch");});
test("sterbet -> sterbet", function() {deepEqual( Stem("sterbet"), "sterbet");});
test("sterblichen -> sterblich", function() {deepEqual( Stem("sterblichen"), "sterblich");});
test("sterblicher -> sterblich", function() {deepEqual( Stem("sterblicher"), "sterblich");});
test("sterbn -> sterbn", function() {deepEqual( Stem("sterbn"), "sterbn");});
test("sterbstund -> sterbstund", function() {deepEqual( Stem("sterbstund"), "sterbstund");});
test("stern -> stern", function() {deepEqual( Stem("stern"), "stern");});
test("sternbild -> sternbild", function() {deepEqual( Stem("sternbild"), "sternbild");});
test("sternbilder -> sternbild", function() {deepEqual( Stem("sternbilder"), "sternbild");});
test("sternblumen -> sternblum", function() {deepEqual( Stem("sternblumen"), "sternblum");});
test("sternblumenklee -> sternblumenkle", function() {deepEqual( Stem("sternblumenklee"), "sternblumenkle");});
test("sternblumenwiese -> sternblumenwies", function() {deepEqual( Stem("sternblumenwiese"), "sternblumenwies");});
test("sternchen -> sternch", function() {deepEqual( Stem("sternchen"), "sternch");});
test("sternchenkuss -> sternchenkuss", function() {deepEqual( Stem("sternchenkuss"), "sternchenkuss");});
test("sterndeutung -> sterndeut", function() {deepEqual( Stem("sterndeutung"), "sterndeut");});
test("sterne -> stern", function() {deepEqual( Stem("sterne"), "stern");});
test("sternen -> stern", function() {deepEqual( Stem("sternen"), "stern");});
test("sternenbilde -> sternenbild", function() {deepEqual( Stem("sternenbilde"), "sternenbild");});
test("sternenhimmel -> sternenhimmel", function() {deepEqual( Stem("sternenhimmel"), "sternenhimmel");});
test("sternenkinder -> sternenkind", function() {deepEqual( Stem("sternenkinder"), "sternenkind");});
test("sternenkindern -> sternenkind", function() {deepEqual( Stem("sternenkindern"), "sternenkind");});
test("sternenmädchen -> sternenmadch", function() {deepEqual( Stem("sternenmädchen"), "sternenmadch");});
test("sternenmädchens -> sternenmadch", function() {deepEqual( Stem("sternenmädchens"), "sternenmadch");});
test("sternenschule -> sternenschul", function() {deepEqual( Stem("sternenschule"), "sternenschul");});
test("sternenstühlchen -> sternenstuhlch", function() {deepEqual( Stem("sternenstühlchen"), "sternenstuhlch");});
test("sternenwiese -> sternenwies", function() {deepEqual( Stem("sternenwiese"), "sternenwies");});
test("sternlein -> sternlein", function() {deepEqual( Stem("sternlein"), "sternlein");});
test("sternpünktchen -> sternpunktch", function() {deepEqual( Stem("sternpünktchen"), "sternpunktch");});
test("sternschnuppen -> sternschnupp", function() {deepEqual( Stem("sternschnuppen"), "sternschnupp");});
test("sternschnuppengemüse -> sternschnuppengemus", function() {deepEqual( Stem("sternschnuppengemüse"), "sternschnuppengemus");});
test("sternschnuppenwolke -> sternschnuppenwolk", function() {deepEqual( Stem("sternschnuppenwolke"), "sternschnuppenwolk");});
test("sterzenbacher -> sterzenbach", function() {deepEqual( Stem("sterzenbacher"), "sterzenbach");});
test("stete -> stet", function() {deepEqual( Stem("stete"), "stet");});
test("steten -> stet", function() {deepEqual( Stem("steten"), "stet");});
test("stetig -> stetig", function() {deepEqual( Stem("stetig"), "stetig");});
test("stetige -> stetig", function() {deepEqual( Stem("stetige"), "stetig");});
test("stets -> stet", function() {deepEqual( Stem("stets"), "stet");});
test("stett -> stett", function() {deepEqual( Stem("stett"), "stett");});
test("steuer -> steu", function() {deepEqual( Stem("steuer"), "steu");});
test("steuerausfalls -> steuerausfall", function() {deepEqual( Stem("steuerausfalls"), "steuerausfall");});
test("steuerbeleg -> steuerbeleg", function() {deepEqual( Stem("steuerbeleg"), "steuerbeleg");});
test("steuerhinterziehung -> steuerhinterzieh", function() {deepEqual( Stem("steuerhinterziehung"), "steuerhinterzieh");});
test("steuern -> steu", function() {deepEqual( Stem("steuern"), "steu");});
test("steuersünder -> steuersund", function() {deepEqual( Stem("steuersünder"), "steuersund");});
test("steuert -> steuert", function() {deepEqual( Stem("steuert"), "steuert");});
test("steuerte -> steuert", function() {deepEqual( Stem("steuerte"), "steuert");});
test("steward -> steward", function() {deepEqual( Stem("steward"), "steward");});
test("steyrerhut -> steyrerhut", function() {deepEqual( Stem("steyrerhut"), "steyrerhut");});
test("steyrerhute -> steyrerhut", function() {deepEqual( Stem("steyrerhute"), "steyrerhut");});
test("stibitzt -> stibitzt", function() {deepEqual( Stem("stibitzt"), "stibitzt");});
test("stich -> stich", function() {deepEqual( Stem("stich"), "stich");});
test("sticheln -> sticheln", function() {deepEqual( Stem("sticheln"), "sticheln");});
test("stickerei -> stickerei", function() {deepEqual( Stem("stickerei"), "stickerei");});
test("stickstoffgehaltes -> stickstoffgehalt", function() {deepEqual( Stem("stickstoffgehaltes"), "stickstoffgehalt");});
test("stickstoffhaltige -> stickstoffhalt", function() {deepEqual( Stem("stickstoffhaltige"), "stickstoffhalt");});
test("stiebten -> stiebt", function() {deepEqual( Stem("stiebten"), "stiebt");});
test("stiefel -> stiefel", function() {deepEqual( Stem("stiefel"), "stiefel");});
test("stiefeln -> stiefeln", function() {deepEqual( Stem("stiefeln"), "stiefeln");});
test("stiefelsohlen -> stiefelsohl", function() {deepEqual( Stem("stiefelsohlen"), "stiefelsohl");});
test("stiefmütterlich -> stiefmutt", function() {deepEqual( Stem("stiefmütterlich"), "stiefmutt");});
test("stieg -> stieg", function() {deepEqual( Stem("stieg"), "stieg");});
test("stiegen -> stieg", function() {deepEqual( Stem("stiegen"), "stieg");});
test("stiehlt -> stiehlt", function() {deepEqual( Stem("stiehlt"), "stiehlt");});
test("stiel -> stiel", function() {deepEqual( Stem("stiel"), "stiel");});
test("stielen -> stiel", function() {deepEqual( Stem("stielen"), "stiel");});
test("stier -> stier", function() {deepEqual( Stem("stier"), "stier");});
test("stiere -> stier", function() {deepEqual( Stem("stiere"), "stier");});
test("stierer -> stier", function() {deepEqual( Stem("stierer"), "stier");});
test("stierte -> stiert", function() {deepEqual( Stem("stierte"), "stiert");});
test("stiess -> stiess", function() {deepEqual( Stem("stiess"), "stiess");});
test("stieß -> stiess", function() {deepEqual( Stem("stieß"), "stiess");});
test("stiessen -> stiess", function() {deepEqual( Stem("stiessen"), "stiess");});
test("stießen -> stiess", function() {deepEqual( Stem("stießen"), "stiess");});
test("stiften -> stift", function() {deepEqual( Stem("stiften"), "stift");});
test("stifter -> stift", function() {deepEqual( Stem("stifter"), "stift");});
test("stiftern -> stift", function() {deepEqual( Stem("stiftern"), "stift");});
test("stiftsdamen -> stiftsdam", function() {deepEqual( Stem("stiftsdamen"), "stiftsdam");});
test("stiftshütte -> stiftshutt", function() {deepEqual( Stem("stiftshütte"), "stiftshutt");});
test("stiftung -> stiftung", function() {deepEqual( Stem("stiftung"), "stiftung");});
test("stiftungen -> stiftung", function() {deepEqual( Stem("stiftungen"), "stiftung");});
test("stigma -> stigma", function() {deepEqual( Stem("stigma"), "stigma");});
test("stil -> stil", function() {deepEqual( Stem("stil"), "stil");});
test("stile -> stil", function() {deepEqual( Stem("stile"), "stil");});
test("stiles -> stil", function() {deepEqual( Stem("stiles"), "stil");});
test("still -> still", function() {deepEqual( Stem("still"), "still");});
test("stillblaue -> stillblau", function() {deepEqual( Stem("stillblaue"), "stillblau");});
test("stille -> still", function() {deepEqual( Stem("stille"), "still");});
test("stillen -> still", function() {deepEqual( Stem("stillen"), "still");});
test("stiller -> still", function() {deepEqual( Stem("stiller"), "still");});
test("stilles -> still", function() {deepEqual( Stem("stilles"), "still");});
test("stillgewordenen -> stillgeword", function() {deepEqual( Stem("stillgewordenen"), "stillgeword");});
test("stillhalten -> stillhalt", function() {deepEqual( Stem("stillhalten"), "stillhalt");});
test("stillhielt -> stillhielt", function() {deepEqual( Stem("stillhielt"), "stillhielt");});
test("stillschweigend -> stillschweig", function() {deepEqual( Stem("stillschweigend"), "stillschweig");});
test("stillschweigende -> stillschweig", function() {deepEqual( Stem("stillschweigende"), "stillschweig");});
test("stillstand -> stillstand", function() {deepEqual( Stem("stillstand"), "stillstand");});
test("stillständer -> stillstand", function() {deepEqual( Stem("stillständer"), "stillstand");});
test("stimmabgabe -> stimmabgab", function() {deepEqual( Stem("stimmabgabe"), "stimmabgab");});
test("stimmberechtigten -> stimmberechtigt", function() {deepEqual( Stem("stimmberechtigten"), "stimmberechtigt");});
test("stimmbezirke -> stimmbezirk", function() {deepEqual( Stem("stimmbezirke"), "stimmbezirk");});
test("stimmchen -> stimmch", function() {deepEqual( Stem("stimmchen"), "stimmch");});
test("stimme -> stimm", function() {deepEqual( Stem("stimme"), "stimm");});
test("stimmen -> stimm", function() {deepEqual( Stem("stimmen"), "stimm");});
test("stimmenzähler -> stimmenzahl", function() {deepEqual( Stem("stimmenzähler"), "stimmenzahl");});
test("stimmenzählern -> stimmenzahl", function() {deepEqual( Stem("stimmenzählern"), "stimmenzahl");});
test("stimmfähig -> stimmfah", function() {deepEqual( Stem("stimmfähig"), "stimmfah");});
test("stimmlisten -> stimmlist", function() {deepEqual( Stem("stimmlisten"), "stimmlist");});
test("stimmt -> stimmt", function() {deepEqual( Stem("stimmt"), "stimmt");});
test("stimmte -> stimmt", function() {deepEqual( Stem("stimmte"), "stimmt");});
test("stimmten -> stimmt", function() {deepEqual( Stem("stimmten"), "stimmt");});
test("stimmung -> stimmung", function() {deepEqual( Stem("stimmung"), "stimmung");});
test("stimmungen -> stimmung", function() {deepEqual( Stem("stimmungen"), "stimmung");});
test("stimmzettel -> stimmzettel", function() {deepEqual( Stem("stimmzettel"), "stimmzettel");});
test("stingel -> stingel", function() {deepEqual( Stem("stingel"), "stingel");});
test("stinke -> stink", function() {deepEqual( Stem("stinke"), "stink");});
test("stinken -> stink", function() {deepEqual( Stem("stinken"), "stink");});
test("stinkend -> stinkend", function() {deepEqual( Stem("stinkend"), "stinkend");});
test("stinkenden -> stinkend", function() {deepEqual( Stem("stinkenden"), "stinkend");});
test("stinkige -> stinkig", function() {deepEqual( Stem("stinkige"), "stinkig");});
test("stinkt -> stinkt", function() {deepEqual( Stem("stinkt"), "stinkt");});
test("stirb -> stirb", function() {deepEqual( Stem("stirb"), "stirb");});
test("stirbt -> stirbt", function() {deepEqual( Stem("stirbt"), "stirbt");});
test("stirn -> stirn", function() {deepEqual( Stem("stirn"), "stirn");});
test("stirnband -> stirnband", function() {deepEqual( Stem("stirnband"), "stirnband");});
test("stirne -> stirn", function() {deepEqual( Stem("stirne"), "stirn");});
test("stirnen -> stirn", function() {deepEqual( Stem("stirnen"), "stirn");});
test("stob -> stob", function() {deepEqual( Stem("stob"), "stob");});
test("stoben -> stob", function() {deepEqual( Stem("stoben"), "stob");});
test("stöberte -> stobert", function() {deepEqual( Stem("stöberte"), "stobert");});
test("stocherte -> stochert", function() {deepEqual( Stem("stocherte"), "stochert");});
test("stock -> stock", function() {deepEqual( Stem("stock"), "stock");});
test("stöckchen -> stockch", function() {deepEqual( Stem("stöckchen"), "stockch");});
test("stocke -> stock", function() {deepEqual( Stem("stocke"), "stock");});
test("stöcke -> stock", function() {deepEqual( Stem("stöcke"), "stock");});
test("stöcken -> stock", function() {deepEqual( Stem("stöcken"), "stock");});
test("stockender -> stockend", function() {deepEqual( Stem("stockender"), "stockend");});
test("stöckerte -> stockert", function() {deepEqual( Stem("stöckerte"), "stockert");});
test("stockfinsteren -> stockfinst", function() {deepEqual( Stem("stockfinsteren"), "stockfinst");});
test("stocksteife -> stocksteif", function() {deepEqual( Stem("stocksteife"), "stocksteif");});
test("stockte -> stockt", function() {deepEqual( Stem("stockte"), "stockt");});
test("stockten -> stockt", function() {deepEqual( Stem("stockten"), "stockt");});
test("stockungeheuer -> stockungeheu", function() {deepEqual( Stem("stockungeheuer"), "stockungeheu");});
test("stockwerk -> stockwerk", function() {deepEqual( Stem("stockwerk"), "stockwerk");});
test("stockwerke -> stockwerk", function() {deepEqual( Stem("stockwerke"), "stockwerk");});
test("stockwerkes -> stockwerk", function() {deepEqual( Stem("stockwerkes"), "stockwerk");});
test("stockwerks -> stockwerk", function() {deepEqual( Stem("stockwerks"), "stockwerk");});
test("stockzähnen -> stockzahn", function() {deepEqual( Stem("stockzähnen"), "stockzahn");});
test("stoff -> stoff", function() {deepEqual( Stem("stoff"), "stoff");});
test("stoffe -> stoff", function() {deepEqual( Stem("stoffe"), "stoff");});
test("stöhnend -> stohnend", function() {deepEqual( Stem("stöhnend"), "stohnend");});
test("stöhnte -> stohnt", function() {deepEqual( Stem("stöhnte"), "stohnt");});
test("stoiker -> stoik", function() {deepEqual( Stem("stoiker"), "stoik");});
test("stoikern -> stoik", function() {deepEqual( Stem("stoikern"), "stoik");});
test("stoische -> stoisch", function() {deepEqual( Stem("stoische"), "stoisch");});
test("stoischer -> stoisch", function() {deepEqual( Stem("stoischer"), "stoisch");});
test("stollen -> stoll", function() {deepEqual( Stem("stollen"), "stoll");});
test("stollenkleider -> stollenkleid", function() {deepEqual( Stem("stollenkleider"), "stollenkleid");});
test("stolperte -> stolpert", function() {deepEqual( Stem("stolperte"), "stolpert");});
test("stolperten -> stolpert", function() {deepEqual( Stem("stolperten"), "stolpert");});
test("stolz -> stolz", function() {deepEqual( Stem("stolz"), "stolz");});
test("stolze -> stolz", function() {deepEqual( Stem("stolze"), "stolz");});
test("stolzen -> stolz", function() {deepEqual( Stem("stolzen"), "stolz");});
test("stolzer -> stolz", function() {deepEqual( Stem("stolzer"), "stolz");});
test("stolzes -> stolz", function() {deepEqual( Stem("stolzes"), "stolz");});
test("stolzieren -> stolzi", function() {deepEqual( Stem("stolzieren"), "stolzi");});
test("stolzierten -> stolziert", function() {deepEqual( Stem("stolzierten"), "stolziert");});
test("stonsdorfer -> stonsdorf", function() {deepEqual( Stem("stonsdorfer"), "stonsdorf");});
test("stopfte -> stopft", function() {deepEqual( Stem("stopfte"), "stopft");});
test("stoppelbart -> stoppelbart", function() {deepEqual( Stem("stoppelbart"), "stoppelbart");});
test("stoppeln -> stoppeln", function() {deepEqual( Stem("stoppeln"), "stoppeln");});
test("storb -> storb", function() {deepEqual( Stem("storb"), "storb");});
test("störche -> storch", function() {deepEqual( Stem("störche"), "storch");});
test("störe -> stor", function() {deepEqual( Stem("störe"), "stor");});
test("stören -> stor", function() {deepEqual( Stem("stören"), "stor");});
test("störend -> storend", function() {deepEqual( Stem("störend"), "storend");});
test("störenden -> storend", function() {deepEqual( Stem("störenden"), "storend");});
test("störenfried -> storenfried", function() {deepEqual( Stem("störenfried"), "storenfried");});
test("störenfriedes -> storenfried", function() {deepEqual( Stem("störenfriedes"), "storenfried");});
test("storren -> storr", function() {deepEqual( Stem("storren"), "storr");});
test("störrig -> storrig", function() {deepEqual( Stem("störrig"), "storrig");});
test("stört -> stort", function() {deepEqual( Stem("stört"), "stort");});
test("störte -> stort", function() {deepEqual( Stem("störte"), "stort");});
test("störung -> storung", function() {deepEqual( Stem("störung"), "storung");});
test("störungen -> storung", function() {deepEqual( Stem("störungen"), "storung");});
test("stoss -> stoss", function() {deepEqual( Stem("stoss"), "stoss");});
test("stoß -> stoss", function() {deepEqual( Stem("stoß"), "stoss");});
test("stössel -> stossel", function() {deepEqual( Stem("stössel"), "stossel");});
test("stossen -> stoss", function() {deepEqual( Stem("stossen"), "stoss");});
test("stoßen -> stoss", function() {deepEqual( Stem("stoßen"), "stoss");});
test("stossend -> stossend", function() {deepEqual( Stem("stossend"), "stossend");});
test("stösst -> stosst", function() {deepEqual( Stem("stösst"), "stosst");});
test("stößt -> stosst", function() {deepEqual( Stem("stößt"), "stosst");});
test("stotternder -> stotternd", function() {deepEqual( Stem("stotternder"), "stotternd");});
test("stotterte -> stottert", function() {deepEqual( Stem("stotterte"), "stottert");});
test("strack -> strack", function() {deepEqual( Stem("strack"), "strack");});
test("stracks -> strack", function() {deepEqual( Stem("stracks"), "strack");});
test("strafe -> straf", function() {deepEqual( Stem("strafe"), "straf");});
test("strafen -> straf", function() {deepEqual( Stem("strafen"), "straf");});
test("straff -> straff", function() {deepEqual( Stem("straff"), "straff");});
test("strafgerichte -> strafgericht", function() {deepEqual( Stem("strafgerichte"), "strafgericht");});
test("strafgerichtes -> strafgericht", function() {deepEqual( Stem("strafgerichtes"), "strafgericht");});
test("strafgesetzes -> strafgesetz", function() {deepEqual( Stem("strafgesetzes"), "strafgesetz");});
test("strafkolonie -> strafkoloni", function() {deepEqual( Stem("strafkolonie"), "strafkoloni");});
test("strafpredigt -> strafpredigt", function() {deepEqual( Stem("strafpredigt"), "strafpredigt");});
test("strafprozess -> strafprozess", function() {deepEqual( Stem("strafprozess"), "strafprozess");});
test("strafprozeß -> strafprozess", function() {deepEqual( Stem("strafprozeß"), "strafprozess");});
test("straft -> straft", function() {deepEqual( Stem("straft"), "straft");});
test("strafte -> straft", function() {deepEqual( Stem("strafte"), "straft");});
test("strafübel -> strafubel", function() {deepEqual( Stem("strafübel"), "strafubel");});
test("strafwürdig -> strafwurd", function() {deepEqual( Stem("strafwürdig"), "strafwurd");});
test("strafwürdigen -> strafwurd", function() {deepEqual( Stem("strafwürdigen"), "strafwurd");});
test("strahl -> strahl", function() {deepEqual( Stem("strahl"), "strahl");});
test("strahle -> strahl", function() {deepEqual( Stem("strahle"), "strahl");});
test("strahlen -> strahl", function() {deepEqual( Stem("strahlen"), "strahl");});
test("strahlend -> strahlend", function() {deepEqual( Stem("strahlend"), "strahlend");});
test("strahlenden -> strahlend", function() {deepEqual( Stem("strahlenden"), "strahlend");});
test("strahlender -> strahlend", function() {deepEqual( Stem("strahlender"), "strahlend");});
test("strahlenkrone -> strahlenkron", function() {deepEqual( Stem("strahlenkrone"), "strahlenkron");});
test("strahlenkronen -> strahlenkron", function() {deepEqual( Stem("strahlenkronen"), "strahlenkron");});
test("strahlt -> strahlt", function() {deepEqual( Stem("strahlt"), "strahlt");});
test("strahlte -> strahlt", function() {deepEqual( Stem("strahlte"), "strahlt");});
test("strahlten -> strahlt", function() {deepEqual( Stem("strahlten"), "strahlt");});
test("strähnig -> strahnig", function() {deepEqual( Stem("strähnig"), "strahnig");});
test("stramen -> stram", function() {deepEqual( Stem("stramen"), "stram");});
test("straminis -> straminis", function() {deepEqual( Stem("straminis"), "straminis");});
test("stramm -> stramm", function() {deepEqual( Stem("stramm"), "stramm");});
test("strampampelt -> strampampelt", function() {deepEqual( Stem("strampampelt"), "strampampelt");});
test("strampelei -> strampelei", function() {deepEqual( Stem("strampelei"), "strampelei");});
test("strampelte -> strampelt", function() {deepEqual( Stem("strampelte"), "strampelt");});
test("strampelten -> strampelt", function() {deepEqual( Stem("strampelten"), "strampelt");});
test("strapazierst -> strapazierst", function() {deepEqual( Stem("strapazierst"), "strapazierst");});
test("strapinski -> strapinski", function() {deepEqual( Stem("strapinski"), "strapinski");});
test("strapinskis -> strapinskis", function() {deepEqual( Stem("strapinskis"), "strapinskis");});
test("strass -> strass", function() {deepEqual( Stem("strass"), "strass");});
test("strassburg -> strassburg", function() {deepEqual( Stem("strassburg"), "strassburg");});
test("strässchen -> strassch", function() {deepEqual( Stem("strässchen"), "strassch");});
test("strasse -> strass", function() {deepEqual( Stem("strasse"), "strass");});
test("straße -> strass", function() {deepEqual( Stem("straße"), "strass");});
test("strassen -> strass", function() {deepEqual( Stem("strassen"), "strass");});
test("straßen -> strass", function() {deepEqual( Stem("straßen"), "strass");});
test("straßenbahn -> strassenbahn", function() {deepEqual( Stem("straßenbahn"), "strassenbahn");});
test("strassenecke -> strasseneck", function() {deepEqual( Stem("strassenecke"), "strasseneck");});
test("straßenecke -> strasseneck", function() {deepEqual( Stem("straßenecke"), "strasseneck");});
test("strassenfestes -> strassenf", function() {deepEqual( Stem("strassenfestes"), "strassenf");});
test("strassengraben -> strassengrab", function() {deepEqual( Stem("strassengraben"), "strassengrab");});
test("strassenkörper -> strassenkorp", function() {deepEqual( Stem("strassenkörper"), "strassenkorp");});
test("strassenmann -> strassenmann", function() {deepEqual( Stem("strassenmann"), "strassenmann");});
test("strassenniveau -> strassenniveau", function() {deepEqual( Stem("strassenniveau"), "strassenniveau");});
test("straßenniveau -> strassenniveau", function() {deepEqual( Stem("straßenniveau"), "strassenniveau");});
test("strassenrand -> strassenrand", function() {deepEqual( Stem("strassenrand"), "strassenrand");});
test("strassenschlachten -> strassenschlacht", function() {deepEqual( Stem("strassenschlachten"), "strassenschlacht");});
test("strassenseite -> strassenseit", function() {deepEqual( Stem("strassenseite"), "strassenseit");});
test("straßenseite -> strassenseit", function() {deepEqual( Stem("straßenseite"), "strassenseit");});
test("strassenverkehr -> strassenverkehr", function() {deepEqual( Stem("strassenverkehr"), "strassenverkehr");});
test("straßenverkehr -> strassenverkehr", function() {deepEqual( Stem("straßenverkehr"), "strassenverkehr");});
test("strassl -> strassl", function() {deepEqual( Stem("strassl"), "strassl");});
test("stratagemata -> stratagemata", function() {deepEqual( Stem("stratagemata"), "stratagemata");});
test("strategischen -> strateg", function() {deepEqual( Stem("strategischen"), "strateg");});
test("sträubte -> straubt", function() {deepEqual( Stem("sträubte"), "straubt");});
test("strauch -> strauch", function() {deepEqual( Stem("strauch"), "strauch");});
test("straucheln -> straucheln", function() {deepEqual( Stem("straucheln"), "straucheln");});
test("strauchelt -> strauchelt", function() {deepEqual( Stem("strauchelt"), "strauchelt");});
test("sträucher -> strauch", function() {deepEqual( Stem("sträucher"), "strauch");});
test("sträuchern -> strauch", function() {deepEqual( Stem("sträuchern"), "strauch");});
test("strauchwitz -> strauchwitz", function() {deepEqual( Stem("strauchwitz"), "strauchwitz");});
test("strauss -> strauss", function() {deepEqual( Stem("strauss"), "strauss");});
test("strausse -> strauss", function() {deepEqual( Stem("strausse"), "strauss");});
test("sträusserl -> strausserl", function() {deepEqual( Stem("sträusserl"), "strausserl");});
test("streben -> streb", function() {deepEqual( Stem("streben"), "streb");});
test("strebens -> streb", function() {deepEqual( Stem("strebens"), "streb");});
test("strebsamer -> strebsam", function() {deepEqual( Stem("strebsamer"), "strebsam");});
test("strebt -> strebt", function() {deepEqual( Stem("strebt"), "strebt");});
test("strebte -> strebt", function() {deepEqual( Stem("strebte"), "strebt");});
test("strebten -> strebt", function() {deepEqual( Stem("strebten"), "strebt");});
test("strecke -> streck", function() {deepEqual( Stem("strecke"), "streck");});
test("strecken -> streck", function() {deepEqual( Stem("strecken"), "streck");});
test("streckt -> streckt", function() {deepEqual( Stem("streckt"), "streckt");});
test("streckte -> streckt", function() {deepEqual( Stem("streckte"), "streckt");});
test("streckten -> streckt", function() {deepEqual( Stem("streckten"), "streckt");});
test("streich -> streich", function() {deepEqual( Stem("streich"), "streich");});
test("streiche -> streich", function() {deepEqual( Stem("streiche"), "streich");});
test("streicheln -> streicheln", function() {deepEqual( Stem("streicheln"), "streicheln");});
test("streichelt -> streichelt", function() {deepEqual( Stem("streichelt"), "streichelt");});
test("streichelte -> streichelt", function() {deepEqual( Stem("streichelte"), "streichelt");});
test("streichelten -> streichelt", function() {deepEqual( Stem("streichelten"), "streichelt");});
test("streichen -> streich", function() {deepEqual( Stem("streichen"), "streich");});
test("streichholz -> streichholz", function() {deepEqual( Stem("streichholz"), "streichholz");});
test("streicht -> streicht", function() {deepEqual( Stem("streicht"), "streicht");});
test("streif -> streif", function() {deepEqual( Stem("streif"), "streif");});
test("streifen -> streif", function() {deepEqual( Stem("streifen"), "streif");});
test("streift -> streift", function() {deepEqual( Stem("streift"), "streift");});
test("streifte -> streift", function() {deepEqual( Stem("streifte"), "streift");});
test("streiften -> streift", function() {deepEqual( Stem("streiften"), "streift");});
test("streifzug -> streifzug", function() {deepEqual( Stem("streifzug"), "streifzug");});
test("streifzügen -> streifzug", function() {deepEqual( Stem("streifzügen"), "streifzug");});
test("streit -> streit", function() {deepEqual( Stem("streit"), "streit");});
test("streiten -> streit", function() {deepEqual( Stem("streiten"), "streit");});
test("streitende -> streitend", function() {deepEqual( Stem("streitende"), "streitend");});
test("streitenden -> streitend", function() {deepEqual( Stem("streitenden"), "streitend");});
test("streiter -> streit", function() {deepEqual( Stem("streiter"), "streit");});
test("streites -> streit", function() {deepEqual( Stem("streites"), "streit");});
test("streitet -> streitet", function() {deepEqual( Stem("streitet"), "streitet");});
test("streitige -> streitig", function() {deepEqual( Stem("streitige"), "streitig");});
test("streitigen -> streitig", function() {deepEqual( Stem("streitigen"), "streitig");});
test("streitigkeiten -> streitig", function() {deepEqual( Stem("streitigkeiten"), "streitig");});
test("streits -> streit", function() {deepEqual( Stem("streits"), "streit");});
test("streng -> streng", function() {deepEqual( Stem("streng"), "streng");});
test("strenge -> streng", function() {deepEqual( Stem("strenge"), "streng");});
test("strengem -> streng", function() {deepEqual( Stem("strengem"), "streng");});
test("strengen -> streng", function() {deepEqual( Stem("strengen"), "streng");});
test("strenger -> streng", function() {deepEqual( Stem("strenger"), "streng");});
test("strenges -> streng", function() {deepEqual( Stem("strenges"), "streng");});
test("strenggenommen -> strenggenomm", function() {deepEqual( Stem("strenggenommen"), "strenggenomm");});
test("strenggeschnittenen -> strenggeschnitt", function() {deepEqual( Stem("strenggeschnittenen"), "strenggeschnitt");});
test("strengste -> streng", function() {deepEqual( Stem("strengste"), "streng");});
test("strengsten -> streng", function() {deepEqual( Stem("strengsten"), "streng");});
test("streßgeplagt -> stressgeplagt", function() {deepEqual( Stem("streßgeplagt"), "stressgeplagt");});
test("streue -> streu", function() {deepEqual( Stem("streue"), "streu");});
test("streuen -> streu", function() {deepEqual( Stem("streuen"), "streu");});
test("streut -> streut", function() {deepEqual( Stem("streut"), "streut");});
test("streute -> streut", function() {deepEqual( Stem("streute"), "streut");});
test("strich -> strich", function() {deepEqual( Stem("strich"), "strich");});
test("strichen -> strich", function() {deepEqual( Stem("strichen"), "strich");});
test("striches -> strich", function() {deepEqual( Stem("striches"), "strich");});
test("strichlein -> strichlein", function() {deepEqual( Stem("strichlein"), "strichlein");});
test("strichweise -> strichweis", function() {deepEqual( Stem("strichweise"), "strichweis");});
test("strick -> strick", function() {deepEqual( Stem("strick"), "strick");});
test("stricke -> strick", function() {deepEqual( Stem("stricke"), "strick");});
test("stricken -> strick", function() {deepEqual( Stem("stricken"), "strick");});
test("stricklein -> stricklein", function() {deepEqual( Stem("stricklein"), "stricklein");});
test("strickmaschine -> strickmaschin", function() {deepEqual( Stem("strickmaschine"), "strickmaschin");});
test("strickschlingen -> strickschling", function() {deepEqual( Stem("strickschlingen"), "strickschling");});
test("strickzeug -> strickzeug", function() {deepEqual( Stem("strickzeug"), "strickzeug");});
test("stritten -> stritt", function() {deepEqual( Stem("stritten"), "stritt");});
test("strittigen -> strittig", function() {deepEqual( Stem("strittigen"), "strittig");});
test("stroh -> stroh", function() {deepEqual( Stem("stroh"), "stroh");});
test("strohhut -> strohhut", function() {deepEqual( Stem("strohhut"), "strohhut");});
test("strohhüte -> strohhut", function() {deepEqual( Stem("strohhüte"), "strohhut");});
test("strohköpfe -> strohkopf", function() {deepEqual( Stem("strohköpfe"), "strohkopf");});
test("strohpuppe -> strohpupp", function() {deepEqual( Stem("strohpuppe"), "strohpupp");});
test("strohs -> stroh", function() {deepEqual( Stem("strohs"), "stroh");});
test("strolche -> strolch", function() {deepEqual( Stem("strolche"), "strolch");});
test("strom -> strom", function() {deepEqual( Stem("strom"), "strom");});
test("stromaufwärts -> stromaufwart", function() {deepEqual( Stem("stromaufwärts"), "stromaufwart");});
test("strome -> strom", function() {deepEqual( Stem("strome"), "strom");});
test("ströme -> strom", function() {deepEqual( Stem("ströme"), "strom");});
test("strömen -> strom", function() {deepEqual( Stem("strömen"), "strom");});
test("stromes -> strom", function() {deepEqual( Stem("stromes"), "strom");});
test("stroms -> strom", function() {deepEqual( Stem("stroms"), "strom");});
test("strömt -> stromt", function() {deepEqual( Stem("strömt"), "stromt");});
test("strömte -> stromt", function() {deepEqual( Stem("strömte"), "stromt");});
test("strömten -> stromt", function() {deepEqual( Stem("strömten"), "stromt");});
test("strömung -> stromung", function() {deepEqual( Stem("strömung"), "stromung");});
test("strophe -> stroph", function() {deepEqual( Stem("strophe"), "stroph");});
test("strotzende -> strotzend", function() {deepEqual( Stem("strotzende"), "strotzend");});
test("strub -> strub", function() {deepEqual( Stem("strub"), "strub");});
test("strudel -> strudel", function() {deepEqual( Stem("strudel"), "strudel");});
test("strukturen -> struktur", function() {deepEqual( Stem("strukturen"), "struktur");});
test("strukturwandlungen -> strukturwandl", function() {deepEqual( Stem("strukturwandlungen"), "strukturwandl");});
test("strumpf -> strumpf", function() {deepEqual( Stem("strumpf"), "strumpf");});
test("strumpfe -> strumpf", function() {deepEqual( Stem("strumpfe"), "strumpf");});
test("strümpfe -> strumpf", function() {deepEqual( Stem("strümpfe"), "strumpf");});
test("strümpfen -> strumpf", function() {deepEqual( Stem("strümpfen"), "strumpf");});
test("strumpfes -> strumpf", function() {deepEqual( Stem("strumpfes"), "strumpf");});
test("strunk -> strunk", function() {deepEqual( Stem("strunk"), "strunk");});
test("strychnin -> strychnin", function() {deepEqual( Stem("strychnin"), "strychnin");});
test("strychninbrocken -> strychninbrock", function() {deepEqual( Stem("strychninbrocken"), "strychninbrock");});
test("stübchen -> stubch", function() {deepEqual( Stem("stübchen"), "stubch");});
test("stübchens -> stubch", function() {deepEqual( Stem("stübchens"), "stubch");});
test("stube -> stub", function() {deepEqual( Stem("stube"), "stub");});
test("stuben -> stub", function() {deepEqual( Stem("stuben"), "stub");});
test("stubenreinheit -> stubenrein", function() {deepEqual( Stem("stubenreinheit"), "stubenrein");});
test("stubenschlüssel -> stubenschlussel", function() {deepEqual( Stem("stubenschlüssel"), "stubenschlussel");});
test("stubentür -> stubentur", function() {deepEqual( Stem("stubentür"), "stubentur");});
test("stubentüre -> stubentur", function() {deepEqual( Stem("stubentüre"), "stubentur");});
test("stück -> stuck", function() {deepEqual( Stem("stück"), "stuck");});
test("stückchen -> stuckch", function() {deepEqual( Stem("stückchen"), "stuckch");});
test("stücke -> stuck", function() {deepEqual( Stem("stücke"), "stuck");});
test("stücken -> stuck", function() {deepEqual( Stem("stücken"), "stuck");});
test("stücklein -> stucklein", function() {deepEqual( Stem("stücklein"), "stucklein");});
test("stücks -> stuck", function() {deepEqual( Stem("stücks"), "stuck");});
test("studen -> stud", function() {deepEqual( Stem("studen"), "stud");});
test("student -> student", function() {deepEqual( Stem("student"), "student");});
test("studenten -> student", function() {deepEqual( Stem("studenten"), "student");});
test("studentenmütze -> studentenmutz", function() {deepEqual( Stem("studentenmütze"), "studentenmutz");});
test("studentin -> studentin", function() {deepEqual( Stem("studentin"), "studentin");});
test("studie -> studi", function() {deepEqual( Stem("studie"), "studi");});
test("studien -> studi", function() {deepEqual( Stem("studien"), "studi");});
test("studieren -> studi", function() {deepEqual( Stem("studieren"), "studi");});
test("studiert -> studiert", function() {deepEqual( Stem("studiert"), "studiert");});
test("studierte -> studiert", function() {deepEqual( Stem("studierte"), "studiert");});
test("studierten -> studiert", function() {deepEqual( Stem("studierten"), "studiert");});
test("studio -> studio", function() {deepEqual( Stem("studio"), "studio");});
test("studios -> studios", function() {deepEqual( Stem("studios"), "studios");});
test("studium -> studium", function() {deepEqual( Stem("studium"), "studium");});
test("stufe -> stuf", function() {deepEqual( Stem("stufe"), "stuf");});
test("stufen -> stuf", function() {deepEqual( Stem("stufen"), "stuf");});
test("stufenweise -> stufenweis", function() {deepEqual( Stem("stufenweise"), "stufenweis");});
test("stuhl -> stuhl", function() {deepEqual( Stem("stuhl"), "stuhl");});
test("stuhlbeine -> stuhlbein", function() {deepEqual( Stem("stuhlbeine"), "stuhlbein");});
test("stühlchen -> stuhlch", function() {deepEqual( Stem("stühlchen"), "stuhlch");});
test("stuhle -> stuhl", function() {deepEqual( Stem("stuhle"), "stuhl");});
test("stühle -> stuhl", function() {deepEqual( Stem("stühle"), "stuhl");});
test("stühlen -> stuhl", function() {deepEqual( Stem("stühlen"), "stuhl");});
test("stuhles -> stuhl", function() {deepEqual( Stem("stuhles"), "stuhl");});
test("stukkaturarbeiten -> stukkaturarbeit", function() {deepEqual( Stem("stukkaturarbeiten"), "stukkaturarbeit");});
test("stumm -> stumm", function() {deepEqual( Stem("stumm"), "stumm");});
test("stumme -> stumm", function() {deepEqual( Stem("stumme"), "stumm");});
test("stummen -> stumm", function() {deepEqual( Stem("stummen"), "stumm");});
test("stummer -> stumm", function() {deepEqual( Stem("stummer"), "stumm");});
test("stümperhaft -> stumperhaft", function() {deepEqual( Stem("stümperhaft"), "stumperhaft");});
test("stumpf -> stumpf", function() {deepEqual( Stem("stumpf"), "stumpf");});
test("stumpfbesen -> stumpfbes", function() {deepEqual( Stem("stumpfbesen"), "stumpfbes");});
test("stumpfheit -> stumpfheit", function() {deepEqual( Stem("stumpfheit"), "stumpfheit");});
test("stumpfnäschen -> stumpfnasch", function() {deepEqual( Stem("stumpfnäschen"), "stumpfnasch");});
test("stumpfsinn -> stumpfsinn", function() {deepEqual( Stem("stumpfsinn"), "stumpfsinn");});
test("stumpfsinnig -> stumpfsinn", function() {deepEqual( Stem("stumpfsinnig"), "stumpfsinn");});
test("stumpfsinniges -> stumpfsinn", function() {deepEqual( Stem("stumpfsinniges"), "stumpfsinn");});
test("stund -> stund", function() {deepEqual( Stem("stund"), "stund");});
test("stündchen -> stundch", function() {deepEqual( Stem("stündchen"), "stundch");});
test("stunde -> stund", function() {deepEqual( Stem("stunde"), "stund");});
test("stünde -> stund", function() {deepEqual( Stem("stünde"), "stund");});
test("stündel -> stundel", function() {deepEqual( Stem("stündel"), "stundel");});
test("stunden -> stund", function() {deepEqual( Stem("stunden"), "stund");});
test("stünden -> stund", function() {deepEqual( Stem("stünden"), "stund");});
test("stundenlang -> stundenlang", function() {deepEqual( Stem("stundenlang"), "stundenlang");});
test("stundenlange -> stundenlang", function() {deepEqual( Stem("stundenlange"), "stundenlang");});
test("stundenlangen -> stundenlang", function() {deepEqual( Stem("stundenlangen"), "stundenlang");});
test("stundenweit -> stundenweit", function() {deepEqual( Stem("stundenweit"), "stundenweit");});
test("stundenzeiger -> stundenzeig", function() {deepEqual( Stem("stundenzeiger"), "stundenzeig");});
test("stündleins -> stundlein", function() {deepEqual( Stem("stündleins"), "stundlein");});
test("stündlich -> stundlich", function() {deepEqual( Stem("stündlich"), "stundlich");});
test("stupender -> stupend", function() {deepEqual( Stem("stupender"), "stupend");});
test("sturm -> sturm", function() {deepEqual( Stem("sturm"), "sturm");});
test("stürme -> sturm", function() {deepEqual( Stem("stürme"), "sturm");});
test("stürmen -> sturm", function() {deepEqual( Stem("stürmen"), "sturm");});
test("sturmflockenwirbel -> sturmflockenwirbel", function() {deepEqual( Stem("sturmflockenwirbel"), "sturmflockenwirbel");});
test("sturmhusche -> sturmhusch", function() {deepEqual( Stem("sturmhusche"), "sturmhusch");});
test("stürmisch -> sturmisch", function() {deepEqual( Stem("stürmisch"), "sturmisch");});
test("stürmischer -> sturmisch", function() {deepEqual( Stem("stürmischer"), "sturmisch");});
test("sturmriese -> sturmries", function() {deepEqual( Stem("sturmriese"), "sturmries");});
test("sturmriesen -> sturmries", function() {deepEqual( Stem("sturmriesen"), "sturmries");});
test("stürmte -> sturmt", function() {deepEqual( Stem("stürmte"), "sturmt");});
test("stürmten -> sturmt", function() {deepEqual( Stem("stürmten"), "sturmt");});
test("sturmwind -> sturmwind", function() {deepEqual( Stem("sturmwind"), "sturmwind");});
test("sturz -> sturz", function() {deepEqual( Stem("sturz"), "sturz");});
test("sturze -> sturz", function() {deepEqual( Stem("sturze"), "sturz");});
test("stürze -> sturz", function() {deepEqual( Stem("stürze"), "sturz");});
test("stürzen -> sturz", function() {deepEqual( Stem("stürzen"), "sturz");});
test("stürzet -> sturzet", function() {deepEqual( Stem("stürzet"), "sturzet");});
test("stürzt -> sturzt", function() {deepEqual( Stem("stürzt"), "sturzt");});
test("stürzte -> sturzt", function() {deepEqual( Stem("stürzte"), "sturzt");});
test("stürzten -> sturzt", function() {deepEqual( Stem("stürzten"), "sturzt");});
test("stuttgart -> stuttgart", function() {deepEqual( Stem("stuttgart"), "stuttgart");});
test("stuttgarter -> stuttgart", function() {deepEqual( Stem("stuttgarter"), "stuttgart");});
test("stütze -> stutz", function() {deepEqual( Stem("stütze"), "stutz");});
test("stutzen -> stutz", function() {deepEqual( Stem("stutzen"), "stutz");});
test("stützen -> stutz", function() {deepEqual( Stem("stützen"), "stutz");});
test("stützend -> stutzend", function() {deepEqual( Stem("stützend"), "stutzend");});
test("stutzerhaft -> stutzerhaft", function() {deepEqual( Stem("stutzerhaft"), "stutzerhaft");});
test("stützt -> stutzt", function() {deepEqual( Stem("stützt"), "stutzt");});
test("stutzte -> stutzt", function() {deepEqual( Stem("stutzte"), "stutzt");});
test("stützte -> stutzt", function() {deepEqual( Stem("stützte"), "stutzt");});
test("stützten -> stutzt", function() {deepEqual( Stem("stützten"), "stutzt");});
test("sub -> sub", function() {deepEqual( Stem("sub"), "sub");});
test("subjectis -> subjectis", function() {deepEqual( Stem("subjectis"), "subjectis");});
test("subjekt -> subjekt", function() {deepEqual( Stem("subjekt"), "subjekt");});
test("subjekte -> subjekt", function() {deepEqual( Stem("subjekte"), "subjekt");});
test("subjekten -> subjekt", function() {deepEqual( Stem("subjekten"), "subjekt");});
test("subjektiv -> subjektiv", function() {deepEqual( Stem("subjektiv"), "subjektiv");});
test("subjektive -> subjektiv", function() {deepEqual( Stem("subjektive"), "subjektiv");});
test("subjektiven -> subjektiv", function() {deepEqual( Stem("subjektiven"), "subjektiv");});
test("subjektiver -> subjektiv", function() {deepEqual( Stem("subjektiver"), "subjektiv");});
test("subjekts -> subjekt", function() {deepEqual( Stem("subjekts"), "subjekt");});
test("subkultur -> subkultur", function() {deepEqual( Stem("subkultur"), "subkultur");});
test("sublimsten -> sublim", function() {deepEqual( Stem("sublimsten"), "sublim");});
test("subreptionis -> subreptionis", function() {deepEqual( Stem("subreptionis"), "subreptionis");});
test("substantielle -> substantiell", function() {deepEqual( Stem("substantielle"), "substantiell");});
test("substantiellen -> substantiell", function() {deepEqual( Stem("substantiellen"), "substantiell");});
test("substanz -> substanz", function() {deepEqual( Stem("substanz"), "substanz");});
test("substanzen -> substanz", function() {deepEqual( Stem("substanzen"), "substanz");});
test("subsumtion -> subsumtion", function() {deepEqual( Stem("subsumtion"), "subsumtion");});
test("subtil -> subtil", function() {deepEqual( Stem("subtil"), "subtil");});
test("subtile -> subtil", function() {deepEqual( Stem("subtile"), "subtil");});
test("subtilen -> subtil", function() {deepEqual( Stem("subtilen"), "subtil");});
test("subtiler -> subtil", function() {deepEqual( Stem("subtiler"), "subtil");});
test("subtilste -> subtil", function() {deepEqual( Stem("subtilste"), "subtil");});
test("success -> success", function() {deepEqual( Stem("success"), "success");});
test("successiva -> successiva", function() {deepEqual( Stem("successiva"), "successiva");});
test("suche -> such", function() {deepEqual( Stem("suche"), "such");});
test("suchen -> such", function() {deepEqual( Stem("suchen"), "such");});
test("suchenden -> suchend", function() {deepEqual( Stem("suchenden"), "suchend");});
test("suchet -> suchet", function() {deepEqual( Stem("suchet"), "suchet");});
test("suchst -> such", function() {deepEqual( Stem("suchst"), "such");});
test("sucht -> sucht", function() {deepEqual( Stem("sucht"), "sucht");});
test("suchtbereitschaft -> suchtbereitschaft", function() {deepEqual( Stem("suchtbereitschaft"), "suchtbereitschaft");});
test("suchte -> sucht", function() {deepEqual( Stem("suchte"), "sucht");});
test("suchten -> sucht", function() {deepEqual( Stem("suchten"), "sucht");});
test("suchtforscher -> suchtforsch", function() {deepEqual( Stem("suchtforscher"), "suchtforsch");});
test("süchtig -> suchtig", function() {deepEqual( Stem("süchtig"), "suchtig");});
test("suchtmittelkonsum -> suchtmittelkonsum", function() {deepEqual( Stem("suchtmittelkonsum"), "suchtmittelkonsum");});
test("süd -> sud", function() {deepEqual( Stem("süd"), "sud");});
test("süditalien -> suditali", function() {deepEqual( Stem("süditalien"), "suditali");});
test("südliches -> sudlich", function() {deepEqual( Stem("südliches"), "sudlich");});
test("südlondon -> sudlondon", function() {deepEqual( Stem("südlondon"), "sudlondon");});
test("südseite -> sudseit", function() {deepEqual( Stem("südseite"), "sudseit");});
test("südwärts -> sudwart", function() {deepEqual( Stem("südwärts"), "sudwart");});
test("südwestfunk -> sudwestfunk", function() {deepEqual( Stem("südwestfunk"), "sudwestfunk");});
test("sühnen -> suhn", function() {deepEqual( Stem("sühnen"), "suhn");});
test("sultan -> sultan", function() {deepEqual( Stem("sultan"), "sultan");});
test("sülzpastete -> sulzpastet", function() {deepEqual( Stem("sülzpastete"), "sulzpastet");});
test("summ -> summ", function() {deepEqual( Stem("summ"), "summ");});
test("summarisch -> summar", function() {deepEqual( Stem("summarisch"), "summar");});
test("sümmchen -> summch", function() {deepEqual( Stem("sümmchen"), "summch");});
test("summe -> summ", function() {deepEqual( Stem("summe"), "summ");});
test("summen -> summ", function() {deepEqual( Stem("summen"), "summ");});
test("summende -> summend", function() {deepEqual( Stem("summende"), "summend");});
test("summte -> summt", function() {deepEqual( Stem("summte"), "summt");});
test("sumpfig -> sumpfig", function() {deepEqual( Stem("sumpfig"), "sumpfig");});
test("sumpfigen -> sumpfig", function() {deepEqual( Stem("sumpfigen"), "sumpfig");});
test("sumpflöcher -> sumpfloch", function() {deepEqual( Stem("sumpflöcher"), "sumpfloch");});
test("sumsemann -> sumsemann", function() {deepEqual( Stem("sumsemann"), "sumsemann");});
test("sumsemännchen -> sumsemannch", function() {deepEqual( Stem("sumsemännchen"), "sumsemannch");});
test("sumsemänner -> sumsemann", function() {deepEqual( Stem("sumsemänner"), "sumsemann");});
test("sumsemännern -> sumsemann", function() {deepEqual( Stem("sumsemännern"), "sumsemann");});
test("sumsemanns -> sumsemann", function() {deepEqual( Stem("sumsemanns"), "sumsemann");});
test("sumsiselsei -> sumsiselsei", function() {deepEqual( Stem("sumsiselsei"), "sumsiselsei");});
test("sünde -> sund", function() {deepEqual( Stem("sünde"), "sund");});
test("sünden -> sund", function() {deepEqual( Stem("sünden"), "sund");});
test("sündenlose -> sundenlos", function() {deepEqual( Stem("sündenlose"), "sundenlos");});
test("sünder -> sund", function() {deepEqual( Stem("sünder"), "sund");});
test("sündflut -> sundflut", function() {deepEqual( Stem("sündflut"), "sundflut");});
test("sündhafte -> sundhaft", function() {deepEqual( Stem("sündhafte"), "sundhaft");});
test("sündigen -> sundig", function() {deepEqual( Stem("sündigen"), "sundig");});
test("sündigt -> sundigt", function() {deepEqual( Stem("sündigt"), "sundigt");});
test("sunntäg -> sunntag", function() {deepEqual( Stem("sunntäg"), "sunntag");});
test("sunt -> sunt", function() {deepEqual( Stem("sunt"), "sunt");});
test("superlativ -> superlativ", function() {deepEqual( Stem("superlativ"), "superlativ");});
test("superstition -> superstition", function() {deepEqual( Stem("superstition"), "superstition");});
test("suph -> suph", function() {deepEqual( Stem("suph"), "suph");});
test("suppe -> supp", function() {deepEqual( Stem("suppe"), "supp");});
test("suppenkelle -> suppenkell", function() {deepEqual( Stem("suppenkelle"), "suppenkell");});
test("suppentopf -> suppentopf", function() {deepEqual( Stem("suppentopf"), "suppentopf");});
test("supremum -> supremum", function() {deepEqual( Stem("supremum"), "supremum");});
test("surfen -> surf", function() {deepEqual( Stem("surfen"), "surf");});
test("surfstation -> surfstation", function() {deepEqual( Stem("surfstation"), "surfstation");});
test("suspendierten -> suspendiert", function() {deepEqual( Stem("suspendierten"), "suspendiert");});
test("süss -> suss", function() {deepEqual( Stem("süss"), "suss");});
test("süß -> suss", function() {deepEqual( Stem("süß"), "suss");});
test("süsse -> suss", function() {deepEqual( Stem("süsse"), "suss");});
test("süße -> suss", function() {deepEqual( Stem("süße"), "suss");});
test("süssem -> suss", function() {deepEqual( Stem("süssem"), "suss");});
test("süssen -> suss", function() {deepEqual( Stem("süssen"), "suss");});
test("süßen -> suss", function() {deepEqual( Stem("süßen"), "suss");});
test("süsser -> suss", function() {deepEqual( Stem("süsser"), "suss");});
test("süsses -> suss", function() {deepEqual( Stem("süsses"), "suss");});
test("süsseste -> suss", function() {deepEqual( Stem("süsseste"), "suss");});
test("süssigkeit -> sussig", function() {deepEqual( Stem("süssigkeit"), "sussig");});
test("süssigkeiten -> sussig", function() {deepEqual( Stem("süssigkeiten"), "sussig");});
test("süsslich -> susslich", function() {deepEqual( Stem("süsslich"), "susslich");});
test("suyu -> suyu", function() {deepEqual( Stem("suyu"), "suyu");});
test("sweetheart -> sweetheart", function() {deepEqual( Stem("sweetheart"), "sweetheart");});
test("swissaid -> swissaid", function() {deepEqual( Stem("swissaid"), "swissaid");});
test("swissair -> swissair", function() {deepEqual( Stem("swissair"), "swissair");});
test("sykomoren -> sykomor", function() {deepEqual( Stem("sykomoren"), "sykomor");});
test("sylvia -> sylvia", function() {deepEqual( Stem("sylvia"), "sylvia");});
test("symbol -> symbol", function() {deepEqual( Stem("symbol"), "symbol");});
test("symbola -> symbola", function() {deepEqual( Stem("symbola"), "symbola");});
test("symbole -> symbol", function() {deepEqual( Stem("symbole"), "symbol");});
test("symmetrie -> symmetri", function() {deepEqual( Stem("symmetrie"), "symmetri");});
test("sympathielage -> sympathielag", function() {deepEqual( Stem("sympathielage"), "sympathielag");});
test("sympathien -> sympathi", function() {deepEqual( Stem("sympathien"), "sympathi");});
test("sympathiestränge -> sympathiestrang", function() {deepEqual( Stem("sympathiestränge"), "sympathiestrang");});
test("sympathische -> sympath", function() {deepEqual( Stem("sympathische"), "sympath");});
test("sympathischen -> sympath", function() {deepEqual( Stem("sympathischen"), "sympath");});
test("sympathischer -> sympath", function() {deepEqual( Stem("sympathischer"), "sympath");});
test("symposium -> symposium", function() {deepEqual( Stem("symposium"), "symposium");});
test("synkretistischen -> synkretist", function() {deepEqual( Stem("synkretistischen"), "synkretist");});
test("synodalrat -> synodalrat", function() {deepEqual( Stem("synodalrat"), "synodalrat");});
test("synodalrätin -> synodalratin", function() {deepEqual( Stem("synodalrätin"), "synodalratin");});
test("synode -> synod", function() {deepEqual( Stem("synode"), "synod");});
test("synonyme -> synonym", function() {deepEqual( Stem("synonyme"), "synonym");});
test("synthesis -> synthesis", function() {deepEqual( Stem("synthesis"), "synthesis");});
test("synthetisch -> synthet", function() {deepEqual( Stem("synthetisch"), "synthet");});
test("synthetische -> synthet", function() {deepEqual( Stem("synthetische"), "synthet");});
test("synthetischen -> synthet", function() {deepEqual( Stem("synthetischen"), "synthet");});
test("synthetischer -> synthet", function() {deepEqual( Stem("synthetischer"), "synthet");});
test("syrien -> syri", function() {deepEqual( Stem("syrien"), "syri");});
test("syriens -> syri", function() {deepEqual( Stem("syriens"), "syri");});
test("system -> syst", function() {deepEqual( Stem("system"), "syst");});
test("systematisch -> systemat", function() {deepEqual( Stem("systematisch"), "systemat");});
test("systematische -> systemat", function() {deepEqual( Stem("systematische"), "systemat");});
test("systematischen -> systemat", function() {deepEqual( Stem("systematischen"), "systemat");});
test("systemen -> system", function() {deepEqual( Stem("systemen"), "system");});
test("sz -> sz", function() {deepEqual( Stem("sz"), "sz");});
test("szene -> szen", function() {deepEqual( Stem("szene"), "szen");});
test("t -> t", function() {deepEqual( Stem("t"), "t");});
test("ta -> ta", function() {deepEqual( Stem("ta"), "ta");});
test("tabak -> tabak", function() {deepEqual( Stem("tabak"), "tabak");});
test("tabaks -> tabak", function() {deepEqual( Stem("tabaks"), "tabak");});
test("tabaksqualme -> tabaksqualm", function() {deepEqual( Stem("tabaksqualme"), "tabaksqualm");});
test("tabaksteig -> tabaksteig", function() {deepEqual( Stem("tabaksteig"), "tabaksteig");});
test("tadel -> tadel", function() {deepEqual( Stem("tadel"), "tadel");});
test("tadelloser -> tadellos", function() {deepEqual( Stem("tadelloser"), "tadellos");});
test("tadeln -> tadeln", function() {deepEqual( Stem("tadeln"), "tadeln");});
test("tadelswürdig -> tadelswurd", function() {deepEqual( Stem("tadelswürdig"), "tadelswurd");});
test("tadelte -> tadelt", function() {deepEqual( Stem("tadelte"), "tadelt");});
test("tafel -> tafel", function() {deepEqual( Stem("tafel"), "tafel");});
test("tafeldecker -> tafeldeck", function() {deepEqual( Stem("tafeldecker"), "tafeldeck");});
test("tafeldeckern -> tafeldeck", function() {deepEqual( Stem("tafeldeckern"), "tafeldeck");});
test("tafelgeschenke -> tafelgeschenk", function() {deepEqual( Stem("tafelgeschenke"), "tafelgeschenk");});
test("tafeln -> tafeln", function() {deepEqual( Stem("tafeln"), "tafeln");});
test("tafelseite -> tafelseit", function() {deepEqual( Stem("tafelseite"), "tafelseit");});
test("tafeltuch -> tafeltuch", function() {deepEqual( Stem("tafeltuch"), "tafeltuch");});
test("taferlklass -> taferlklass", function() {deepEqual( Stem("taferlklass"), "taferlklass");});
test("taft -> taft", function() {deepEqual( Stem("taft"), "taft");});
test("tag -> tag", function() {deepEqual( Stem("tag"), "tag");});
test("täg -> tag", function() {deepEqual( Stem("täg"), "tag");});
test("tage -> tag", function() {deepEqual( Stem("tage"), "tag");});
test("tagelang -> tagelang", function() {deepEqual( Stem("tagelang"), "tagelang");});
test("tagelohn -> tagelohn", function() {deepEqual( Stem("tagelohn"), "tagelohn");});
test("tagelöhner -> tagelohn", function() {deepEqual( Stem("tagelöhner"), "tagelohn");});
test("tagelöhnermädchen -> tagelohnermadch", function() {deepEqual( Stem("tagelöhnermädchen"), "tagelohnermadch");});
test("tagen -> tag", function() {deepEqual( Stem("tagen"), "tag");});
test("tagereisen -> tagereis", function() {deepEqual( Stem("tagereisen"), "tagereis");});
test("tages -> tag", function() {deepEqual( Stem("tages"), "tag");});
test("tagesanbruch -> tagesanbruch", function() {deepEqual( Stem("tagesanbruch"), "tagesanbruch");});
test("tagesanzeiger -> tagesanzeig", function() {deepEqual( Stem("tagesanzeiger"), "tagesanzeig");});
test("tagesgäste -> tagesgast", function() {deepEqual( Stem("tagesgäste"), "tagesgast");});
test("tageshelle -> tageshell", function() {deepEqual( Stem("tageshelle"), "tageshell");});
test("tageskasse -> tageskass", function() {deepEqual( Stem("tageskasse"), "tageskass");});
test("tageslauf -> tageslauf", function() {deepEqual( Stem("tageslauf"), "tageslauf");});
test("tageslicht -> tageslicht", function() {deepEqual( Stem("tageslicht"), "tageslicht");});
test("tagesordnung -> tagesordn", function() {deepEqual( Stem("tagesordnung"), "tagesordn");});
test("tageszeiten -> tageszeit", function() {deepEqual( Stem("tageszeiten"), "tageszeit");});
test("tagewerk -> tagewerk", function() {deepEqual( Stem("tagewerk"), "tagewerk");});
test("tagi -> tagi", function() {deepEqual( Stem("tagi"), "tagi");});
test("täglich -> taglich", function() {deepEqual( Stem("täglich"), "taglich");});
test("tägliche -> taglich", function() {deepEqual( Stem("tägliche"), "taglich");});
test("täglichen -> taglich", function() {deepEqual( Stem("täglichen"), "taglich");});
test("taglicht -> taglicht", function() {deepEqual( Stem("taglicht"), "taglicht");});
test("taglöhners -> taglohn", function() {deepEqual( Stem("taglöhners"), "taglohn");});
test("tagreisen -> tagreis", function() {deepEqual( Stem("tagreisen"), "tagreis");});
test("tags -> tag", function() {deepEqual( Stem("tags"), "tag");});
test("tagtäglich -> tagtag", function() {deepEqual( Stem("tagtäglich"), "tagtag");});
test("tagträumen -> tagtraum", function() {deepEqual( Stem("tagträumen"), "tagtraum");});
test("taiga -> taiga", function() {deepEqual( Stem("taiga"), "taiga");});
test("takt -> takt", function() {deepEqual( Stem("takt"), "takt");});
test("takte -> takt", function() {deepEqual( Stem("takte"), "takt");});
test("taktik -> taktik", function() {deepEqual( Stem("taktik"), "taktik");});
test("taktischen -> taktisch", function() {deepEqual( Stem("taktischen"), "taktisch");});
test("tal -> tal", function() {deepEqual( Stem("tal"), "tal");});
test("talar -> talar", function() {deepEqual( Stem("talar"), "talar");});
test("tale -> tal", function() {deepEqual( Stem("tale"), "tal");});
test("talent -> talent", function() {deepEqual( Stem("talent"), "talent");});
test("taler -> tal", function() {deepEqual( Stem("taler"), "tal");});
test("täler -> tal", function() {deepEqual( Stem("täler"), "tal");});
test("talern -> tal", function() {deepEqual( Stem("talern"), "tal");});
test("talerstücke -> talerstuck", function() {deepEqual( Stem("talerstücke"), "talerstuck");});
test("tales -> tal", function() {deepEqual( Stem("tales"), "tal");});
test("talglichten -> talglicht", function() {deepEqual( Stem("talglichten"), "talglicht");});
test("talgrunde -> talgrund", function() {deepEqual( Stem("talgrunde"), "talgrund");});
test("talhängen -> talhang", function() {deepEqual( Stem("talhängen"), "talhang");});
test("tals -> tal", function() {deepEqual( Stem("tals"), "tal");});
test("talwärts -> talwart", function() {deepEqual( Stem("talwärts"), "talwart");});
test("tambour -> tambour", function() {deepEqual( Stem("tambour"), "tambour");});
test("tamburin -> tamburin", function() {deepEqual( Stem("tamburin"), "tamburin");});
test("tan -> tan", function() {deepEqual( Stem("tan"), "tan");});
test("tändle -> tandl", function() {deepEqual( Stem("tändle"), "tandl");});
test("tanne -> tann", function() {deepEqual( Stem("tanne"), "tann");});
test("tannebaum -> tannebaum", function() {deepEqual( Stem("tannebaum"), "tannebaum");});
test("tannen -> tann", function() {deepEqual( Stem("tannen"), "tann");});
test("tannenbäumchen -> tannenbaumch", function() {deepEqual( Stem("tannenbäumchen"), "tannenbaumch");});
test("tannenbusch -> tannenbusch", function() {deepEqual( Stem("tannenbusch"), "tannenbusch");});
test("tannenen -> tann", function() {deepEqual( Stem("tannenen"), "tann");});
test("tannengestrüpp -> tannengestrupp", function() {deepEqual( Stem("tannengestrüpp"), "tannengestrupp");});
test("tannengetäfels -> tannengetafel", function() {deepEqual( Stem("tannengetäfels"), "tannengetafel");});
test("tannenhähers -> tannenhah", function() {deepEqual( Stem("tannenhähers"), "tannenhah");});
test("tannenwäldchen -> tannenwaldch", function() {deepEqual( Stem("tannenwäldchen"), "tannenwaldch");});
test("tante -> tant", function() {deepEqual( Stem("tante"), "tant");});
test("tanz -> tanz", function() {deepEqual( Stem("tanz"), "tanz");});
test("tanzbein -> tanzbein", function() {deepEqual( Stem("tanzbein"), "tanzbein");});
test("tanze -> tanz", function() {deepEqual( Stem("tanze"), "tanz");});
test("tänze -> tanz", function() {deepEqual( Stem("tänze"), "tanz");});
test("tänzelnden -> tanzelnd", function() {deepEqual( Stem("tänzelnden"), "tanzelnd");});
test("tänzelte -> tanzelt", function() {deepEqual( Stem("tänzelte"), "tanzelt");});
test("tanzen -> tanz", function() {deepEqual( Stem("tanzen"), "tanz");});
test("tanzende -> tanzend", function() {deepEqual( Stem("tanzende"), "tanzend");});
test("tanzenden -> tanzend", function() {deepEqual( Stem("tanzenden"), "tanzend");});
test("tanzendes -> tanzend", function() {deepEqual( Stem("tanzendes"), "tanzend");});
test("tanzmusik -> tanzmus", function() {deepEqual( Stem("tanzmusik"), "tanzmus");});
test("tanzplatz -> tanzplatz", function() {deepEqual( Stem("tanzplatz"), "tanzplatz");});
test("tanzsaal -> tanzsaal", function() {deepEqual( Stem("tanzsaal"), "tanzsaal");});
test("tanzsaales -> tanzsaal", function() {deepEqual( Stem("tanzsaales"), "tanzsaal");});
test("tanzschritten -> tanzschritt", function() {deepEqual( Stem("tanzschritten"), "tanzschritt");});
test("tanzt -> tanzt", function() {deepEqual( Stem("tanzt"), "tanzt");});
test("tanzte -> tanzt", function() {deepEqual( Stem("tanzte"), "tanzt");});
test("tanzten -> tanzt", function() {deepEqual( Stem("tanzten"), "tanzt");});
test("tapet -> tapet", function() {deepEqual( Stem("tapet"), "tapet");});
test("tapete -> tapet", function() {deepEqual( Stem("tapete"), "tapet");});
test("tapfer -> tapf", function() {deepEqual( Stem("tapfer"), "tapf");});
test("tapfere -> tapf", function() {deepEqual( Stem("tapfere"), "tapf");});
test("tapferen -> tapf", function() {deepEqual( Stem("tapferen"), "tapf");});
test("tapferes -> tapf", function() {deepEqual( Stem("tapferes"), "tapf");});
test("tapferkeit -> tapfer", function() {deepEqual( Stem("tapferkeit"), "tapfer");});
test("tapfern -> tapf", function() {deepEqual( Stem("tapfern"), "tapf");});
test("tappen -> tapp", function() {deepEqual( Stem("tappen"), "tapp");});
test("tapper -> tapp", function() {deepEqual( Stem("tapper"), "tapp");});
test("täppet -> tappet", function() {deepEqual( Stem("täppet"), "tappet");});
test("tappte -> tappt", function() {deepEqual( Stem("tappte"), "tappt");});
test("tasche -> tasch", function() {deepEqual( Stem("tasche"), "tasch");});
test("taschen -> tasch", function() {deepEqual( Stem("taschen"), "tasch");});
test("taschengeld -> taschengeld", function() {deepEqual( Stem("taschengeld"), "taschengeld");});
test("taschentuch -> taschentuch", function() {deepEqual( Stem("taschentuch"), "taschentuch");});
test("taschentüchern -> taschentuch", function() {deepEqual( Stem("taschentüchern"), "taschentuch");});
test("taschenuhr -> taschenuhr", function() {deepEqual( Stem("taschenuhr"), "taschenuhr");});
test("task -> task", function() {deepEqual( Stem("task"), "task");});
test("tasse -> tass", function() {deepEqual( Stem("tasse"), "tass");});
test("tassen -> tass", function() {deepEqual( Stem("tassen"), "tass");});
test("tasten -> tast", function() {deepEqual( Stem("tasten"), "tast");});
test("tasteten -> tastet", function() {deepEqual( Stem("tasteten"), "tastet");});
test("tat -> tat", function() {deepEqual( Stem("tat"), "tat");});
test("tät -> tat", function() {deepEqual( Stem("tät"), "tat");});
test("täte -> tat", function() {deepEqual( Stem("täte"), "tat");});
test("taten -> tat", function() {deepEqual( Stem("taten"), "tat");});
test("täten -> tat", function() {deepEqual( Stem("täten"), "tat");});
test("tatendrang -> tatendrang", function() {deepEqual( Stem("tatendrang"), "tatendrang");});
test("tatendranges -> tatendrang", function() {deepEqual( Stem("tatendranges"), "tatendrang");});
test("tatendurst -> tatendurst", function() {deepEqual( Stem("tatendurst"), "tatendurst");});
test("täter -> tat", function() {deepEqual( Stem("täter"), "tat");});
test("tätig -> tatig", function() {deepEqual( Stem("tätig"), "tatig");});
test("tätige -> tatig", function() {deepEqual( Stem("tätige"), "tatig");});
test("tätigen -> tatig", function() {deepEqual( Stem("tätigen"), "tatig");});
test("tätiger -> tatig", function() {deepEqual( Stem("tätiger"), "tatig");});
test("tätiges -> tatig", function() {deepEqual( Stem("tätiges"), "tatig");});
test("tätigkeit -> tatig", function() {deepEqual( Stem("tätigkeit"), "tatig");});
test("tätigkeiten -> tatig", function() {deepEqual( Stem("tätigkeiten"), "tatig");});
test("tätigkeitsbereiche -> tatigkeitsbereich", function() {deepEqual( Stem("tätigkeitsbereiche"), "tatigkeitsbereich");});
test("tätigkeitstriebe -> tatigkeitstrieb", function() {deepEqual( Stem("tätigkeitstriebe"), "tatigkeitstrieb");});
test("tatkraft -> tatkraft", function() {deepEqual( Stem("tatkraft"), "tatkraft");});
test("tatkräftige -> tatkraft", function() {deepEqual( Stem("tatkräftige"), "tatkraft");});
test("tatkräftiges -> tatkraft", function() {deepEqual( Stem("tatkräftiges"), "tatkraft");});
test("tatlust -> tatlust", function() {deepEqual( Stem("tatlust"), "tatlust");});
test("tatsache -> tatsach", function() {deepEqual( Stem("tatsache"), "tatsach");});
test("tatsachen -> tatsach", function() {deepEqual( Stem("tatsachen"), "tatsach");});
test("tatsächlich -> tatsach", function() {deepEqual( Stem("tatsächlich"), "tatsach");});
test("tatsächlichen -> tatsach", function() {deepEqual( Stem("tatsächlichen"), "tatsach");});
test("tätschelten -> tatschelt", function() {deepEqual( Stem("tätschelten"), "tatschelt");});
test("tatwirklichkeiten -> tatwirk", function() {deepEqual( Stem("tatwirklichkeiten"), "tatwirk");});
test("tatzen -> tatz", function() {deepEqual( Stem("tatzen"), "tatz");});
test("tau -> tau", function() {deepEqual( Stem("tau"), "tau");});
test("taub -> taub", function() {deepEqual( Stem("taub"), "taub");});
test("taube -> taub", function() {deepEqual( Stem("taube"), "taub");});
test("tauben -> taub", function() {deepEqual( Stem("tauben"), "taub");});
test("tauchen -> tauch", function() {deepEqual( Stem("tauchen"), "tauch");});
test("taucht -> taucht", function() {deepEqual( Stem("taucht"), "taucht");});
test("tauchte -> taucht", function() {deepEqual( Stem("tauchte"), "taucht");});
test("tauchten -> taucht", function() {deepEqual( Stem("tauchten"), "taucht");});
test("taufe -> tauf", function() {deepEqual( Stem("taufe"), "tauf");});
test("taufen -> tauf", function() {deepEqual( Stem("taufen"), "tauf");});
test("täufer -> tauf", function() {deepEqual( Stem("täufer"), "tauf");});
test("taufnamen -> taufnam", function() {deepEqual( Stem("taufnamen"), "taufnam");});
test("taufschein -> taufschein", function() {deepEqual( Stem("taufschein"), "taufschein");});
test("taufstein -> taufstein", function() {deepEqual( Stem("taufstein"), "taufstein");});
test("taufzettel -> taufzettel", function() {deepEqual( Stem("taufzettel"), "taufzettel");});
test("taugen -> taug", function() {deepEqual( Stem("taugen"), "taug");});
test("taugenichts -> taugenicht", function() {deepEqual( Stem("taugenichts"), "taugenicht");});
test("tauglich -> tauglich", function() {deepEqual( Stem("tauglich"), "tauglich");});
test("taugliche -> tauglich", function() {deepEqual( Stem("taugliche"), "tauglich");});
test("tauglichen -> tauglich", function() {deepEqual( Stem("tauglichen"), "tauglich");});
test("tauglicheres -> tauglich", function() {deepEqual( Stem("tauglicheres"), "tauglich");});
test("tauglichkeit -> tauglich", function() {deepEqual( Stem("tauglichkeit"), "tauglich");});
test("tauglichsten -> tauglich", function() {deepEqual( Stem("tauglichsten"), "tauglich");});
test("taugt -> taugt", function() {deepEqual( Stem("taugt"), "taugt");});
test("tauige -> tauig", function() {deepEqual( Stem("tauige"), "tauig");});
test("tauigen -> tauig", function() {deepEqual( Stem("tauigen"), "tauig");});
test("taumariechen -> taumariech", function() {deepEqual( Stem("taumariechen"), "taumariech");});
test("taumariechens -> taumariech", function() {deepEqual( Stem("taumariechens"), "taumariech");});
test("taumeln -> taumeln", function() {deepEqual( Stem("taumeln"), "taumeln");});
test("taumelnd -> taumelnd", function() {deepEqual( Stem("taumelnd"), "taumelnd");});
test("taumelnder -> taumelnd", function() {deepEqual( Stem("taumelnder"), "taumelnd");});
test("taumelte -> taumelt", function() {deepEqual( Stem("taumelte"), "taumelt");});
test("taunassen -> taunass", function() {deepEqual( Stem("taunassen"), "taunass");});
test("tauschen -> tausch", function() {deepEqual( Stem("tauschen"), "tausch");});
test("täuschen -> tausch", function() {deepEqual( Stem("täuschen"), "tausch");});
test("täuschender -> tauschend", function() {deepEqual( Stem("täuschender"), "tauschend");});
test("täuscht -> tauscht", function() {deepEqual( Stem("täuscht"), "tauscht");});
test("täuschte -> tauscht", function() {deepEqual( Stem("täuschte"), "tauscht");});
test("täuschung -> tauschung", function() {deepEqual( Stem("täuschung"), "tauschung");});
test("täuschungen -> tauschung", function() {deepEqual( Stem("täuschungen"), "tauschung");});
test("tauschwitz -> tauschwitz", function() {deepEqual( Stem("tauschwitz"), "tauschwitz");});
test("tausee -> tause", function() {deepEqual( Stem("tausee"), "tause");});
test("tausees -> tause", function() {deepEqual( Stem("tausees"), "tause");});
test("tausend -> tausend", function() {deepEqual( Stem("tausend"), "tausend");});
test("tausende -> tausend", function() {deepEqual( Stem("tausende"), "tausend");});
test("tausenden -> tausend", function() {deepEqual( Stem("tausenden"), "tausend");});
test("tausendfachem -> tausendfach", function() {deepEqual( Stem("tausendfachem"), "tausendfach");});
test("tausendfältigen -> tausendfalt", function() {deepEqual( Stem("tausendfältigen"), "tausendfalt");});
test("tausendkünstlern -> tausendkunstl", function() {deepEqual( Stem("tausendkünstlern"), "tausendkunstl");});
test("tausendmal -> tausendmal", function() {deepEqual( Stem("tausendmal"), "tausendmal");});
test("tausendsgeschichten -> tausendsgeschicht", function() {deepEqual( Stem("tausendsgeschichten"), "tausendsgeschicht");});
test("tausendskerl -> tausendskerl", function() {deepEqual( Stem("tausendskerl"), "tausendskerl");});
test("tausendskind -> tausendskind", function() {deepEqual( Stem("tausendskind"), "tausendskind");});
test("tausendsmensch -> tausendsmensch", function() {deepEqual( Stem("tausendsmensch"), "tausendsmensch");});
test("tausendste -> tausend", function() {deepEqual( Stem("tausendste"), "tausend");});
test("tausig -> tausig", function() {deepEqual( Stem("tausig"), "tausig");});
test("taverne -> tavern", function() {deepEqual( Stem("taverne"), "tavern");});
test("tax -> tax", function() {deepEqual( Stem("tax"), "tax");});
test("taxen -> tax", function() {deepEqual( Stem("taxen"), "tax");});
test("taxi -> taxi", function() {deepEqual( Stem("taxi"), "taxi");});
test("taxifahrer -> taxifahr", function() {deepEqual( Stem("taxifahrer"), "taxifahr");});
test("technicus -> technicus", function() {deepEqual( Stem("technicus"), "technicus");});
test("techniker -> technik", function() {deepEqual( Stem("techniker"), "technik");});
test("technisch -> technisch", function() {deepEqual( Stem("technisch"), "technisch");});
test("technischen -> technisch", function() {deepEqual( Stem("technischen"), "technisch");});
test("technisches -> technisch", function() {deepEqual( Stem("technisches"), "technisch");});
test("techno -> techno", function() {deepEqual( Stem("techno"), "techno");});
test("teckel -> teckel", function() {deepEqual( Stem("teckel"), "teckel");});
test("tecnh -> tecnh", function() {deepEqual( Stem("tecnh"), "tecnh");});
test("tee -> tee", function() {deepEqual( Stem("tee"), "tee");});
test("teebeutel -> teebeutel", function() {deepEqual( Stem("teebeutel"), "teebeutel");});
test("teekanne -> teekann", function() {deepEqual( Stem("teekanne"), "teekann");});
test("teelöffel -> teeloffel", function() {deepEqual( Stem("teelöffel"), "teeloffel");});
test("tees -> tees", function() {deepEqual( Stem("tees"), "tees");});
test("teich -> teich", function() {deepEqual( Stem("teich"), "teich");});
test("teiche -> teich", function() {deepEqual( Stem("teiche"), "teich");});
test("teifi -> teifi", function() {deepEqual( Stem("teifi"), "teifi");});
test("teig -> teig", function() {deepEqual( Stem("teig"), "teig");});
test("teigs -> teig", function() {deepEqual( Stem("teigs"), "teig");});
test("teil -> teil", function() {deepEqual( Stem("teil"), "teil");});
test("teile -> teil", function() {deepEqual( Stem("teile"), "teil");});
test("teilen -> teil", function() {deepEqual( Stem("teilen"), "teil");});
test("teilete -> teilet", function() {deepEqual( Stem("teilete"), "teilet");});
test("teilhaben -> teilhab", function() {deepEqual( Stem("teilhaben"), "teilhab");});
test("teilhaft -> teilhaft", function() {deepEqual( Stem("teilhaft"), "teilhaft");});
test("teilhaftig -> teilhaft", function() {deepEqual( Stem("teilhaftig"), "teilhaft");});
test("teilnahm -> teilnahm", function() {deepEqual( Stem("teilnahm"), "teilnahm");});
test("teilnahme -> teilnahm", function() {deepEqual( Stem("teilnahme"), "teilnahm");});
test("teilnahmlos -> teilnahmlos", function() {deepEqual( Stem("teilnahmlos"), "teilnahmlos");});
test("teilnehmen -> teilnehm", function() {deepEqual( Stem("teilnehmen"), "teilnehm");});
test("teilnehmende -> teilnehm", function() {deepEqual( Stem("teilnehmende"), "teilnehm");});
test("teilnehmer -> teilnehm", function() {deepEqual( Stem("teilnehmer"), "teilnehm");});
test("teilnehmung -> teilnehm", function() {deepEqual( Stem("teilnehmung"), "teilnehm");});
test("teilnimmt -> teilnimmt", function() {deepEqual( Stem("teilnimmt"), "teilnimmt");});
test("teils -> teil", function() {deepEqual( Stem("teils"), "teil");});
test("teilt -> teilt", function() {deepEqual( Stem("teilt"), "teilt");});
test("teilte -> teilt", function() {deepEqual( Stem("teilte"), "teilt");});
test("teilten -> teilt", function() {deepEqual( Stem("teilten"), "teilt");});
test("teilung -> teilung", function() {deepEqual( Stem("teilung"), "teilung");});
test("teilweise -> teilweis", function() {deepEqual( Stem("teilweise"), "teilweis");});
test("teilzunehmen -> teilzunehm", function() {deepEqual( Stem("teilzunehmen"), "teilzunehm");});
test("tel -> tel", function() {deepEqual( Stem("tel"), "tel");});
test("telefon -> telefon", function() {deepEqual( Stem("telefon"), "telefon");});
test("telefonanrufe -> telefonanruf", function() {deepEqual( Stem("telefonanrufe"), "telefonanruf");});
test("telefone -> telefon", function() {deepEqual( Stem("telefone"), "telefon");});
test("telefonen -> telefon", function() {deepEqual( Stem("telefonen"), "telefon");});
test("telefonhörer -> telefonhor", function() {deepEqual( Stem("telefonhörer"), "telefonhor");});
test("telefoniert -> telefoniert", function() {deepEqual( Stem("telefoniert"), "telefoniert");});
test("telefonierte -> telefoniert", function() {deepEqual( Stem("telefonierte"), "telefoniert");});
test("telefonisch -> telefon", function() {deepEqual( Stem("telefonisch"), "telefon");});
test("telegrafisch -> telegraf", function() {deepEqual( Stem("telegrafisch"), "telegraf");});
test("telegramm -> telegramm", function() {deepEqual( Stem("telegramm"), "telegramm");});
test("telegraphisch -> telegraph", function() {deepEqual( Stem("telegraphisch"), "telegraph");});
test("telepathische -> telepath", function() {deepEqual( Stem("telepathische"), "telepath");});
test("telephonieren -> telephoni", function() {deepEqual( Stem("telephonieren"), "telephoni");});
test("telephonierten -> telephoniert", function() {deepEqual( Stem("telephonierten"), "telephoniert");});
test("telephonisch -> telephon", function() {deepEqual( Stem("telephonisch"), "telephon");});
test("telephonische -> telephon", function() {deepEqual( Stem("telephonische"), "telephon");});
test("telephonischen -> telephon", function() {deepEqual( Stem("telephonischen"), "telephon");});
test("telephonischer -> telephon", function() {deepEqual( Stem("telephonischer"), "telephon");});
test("teller -> tell", function() {deepEqual( Stem("teller"), "tell");});
test("tellerleckerei -> tellerleckerei", function() {deepEqual( Stem("tellerleckerei"), "tellerleckerei");});
test("tellers -> tell", function() {deepEqual( Stem("tellers"), "tell");});
test("tempel -> tempel", function() {deepEqual( Stem("tempel"), "tempel");});
test("tempels -> tempel", function() {deepEqual( Stem("tempels"), "tempel");});
test("temperatur -> temperatur", function() {deepEqual( Stem("temperatur"), "temperatur");});
test("tempora -> tempora", function() {deepEqual( Stem("tempora"), "tempora");});
test("tendenz -> tendenz", function() {deepEqual( Stem("tendenz"), "tendenz");});
test("tendenzen -> tendenz", function() {deepEqual( Stem("tendenzen"), "tendenz");});
test("tennen -> tenn", function() {deepEqual( Stem("tennen"), "tenn");});
test("tenöre -> tenor", function() {deepEqual( Stem("tenöre"), "tenor");});
test("teppich -> teppich", function() {deepEqual( Stem("teppich"), "teppich");});
test("teppichartigen -> teppichart", function() {deepEqual( Stem("teppichartigen"), "teppichart");});
test("teppiche -> teppich", function() {deepEqual( Stem("teppiche"), "teppich");});
test("teppichen -> teppich", function() {deepEqual( Stem("teppichen"), "teppich");});
test("teppichweber -> teppichweb", function() {deepEqual( Stem("teppichweber"), "teppichweb");});
test("termin -> termin", function() {deepEqual( Stem("termin"), "termin");});
test("terminantur -> terminantur", function() {deepEqual( Stem("terminantur"), "terminantur");});
test("terminus -> terminus", function() {deepEqual( Stem("terminus"), "terminus");});
test("terra -> terra", function() {deepEqual( Stem("terra"), "terra");});
test("terrasse -> terrass", function() {deepEqual( Stem("terrasse"), "terrass");});
test("terrassen -> terrass", function() {deepEqual( Stem("terrassen"), "terrass");});
test("territorium -> territorium", function() {deepEqual( Stem("territorium"), "territorium");});
test("terroristisch -> terrorist", function() {deepEqual( Stem("terroristisch"), "terrorist");});
test("terroristischen -> terrorist", function() {deepEqual( Stem("terroristischen"), "terrorist");});
test("terroristischer -> terrorist", function() {deepEqual( Stem("terroristischer"), "terrorist");});
test("tertium -> tertium", function() {deepEqual( Stem("tertium"), "tertium");});
test("tessiner -> tessin", function() {deepEqual( Stem("tessiner"), "tessin");});
test("testament -> testament", function() {deepEqual( Stem("testament"), "testament");});
test("testamentarisch -> testamentar", function() {deepEqual( Stem("testamentarisch"), "testamentar");});
test("testaments -> testament", function() {deepEqual( Stem("testaments"), "testament");});
test("teuer -> teu", function() {deepEqual( Stem("teuer"), "teu");});
test("teueren -> teu", function() {deepEqual( Stem("teueren"), "teu");});
test("teuerste -> teuerst", function() {deepEqual( Stem("teuerste"), "teuerst");});
test("teufel -> teufel", function() {deepEqual( Stem("teufel"), "teufel");});
test("teufels -> teufel", function() {deepEqual( Stem("teufels"), "teufel");});
test("teufelsbrücke -> teufelsbruck", function() {deepEqual( Stem("teufelsbrücke"), "teufelsbruck");});
test("teufelsgeduld -> teufelsgeduld", function() {deepEqual( Stem("teufelsgeduld"), "teufelsgeduld");});
test("teufelshexlein -> teufelshexlein", function() {deepEqual( Stem("teufelshexlein"), "teufelshexlein");});
test("teufelshörner -> teufelshorn", function() {deepEqual( Stem("teufelshörner"), "teufelshorn");});
test("teufelskünste -> teufelskun", function() {deepEqual( Stem("teufelskünste"), "teufelskun");});
test("teufelsreitern -> teufelsreit", function() {deepEqual( Stem("teufelsreitern"), "teufelsreit");});
test("teuflisch -> teuflisch", function() {deepEqual( Stem("teuflisch"), "teuflisch");});
test("teuflische -> teuflisch", function() {deepEqual( Stem("teuflische"), "teuflisch");});
test("teuflischen -> teuflisch", function() {deepEqual( Stem("teuflischen"), "teuflisch");});
test("teure -> teur", function() {deepEqual( Stem("teure"), "teur");});
test("texas -> texas", function() {deepEqual( Stem("texas"), "texas");});
test("text -> text", function() {deepEqual( Stem("text"), "text");});
test("thachpanches -> thachpanch", function() {deepEqual( Stem("thachpanches"), "thachpanch");});
test("thamar -> thamar", function() {deepEqual( Stem("thamar"), "thamar");});
test("tharschisch -> tharschisch", function() {deepEqual( Stem("tharschisch"), "tharschisch");});
test("the -> the", function() {deepEqual( Stem("the"), "the");});
test("theater -> theat", function() {deepEqual( Stem("theater"), "theat");});
test("theaterbillet -> theaterbillet", function() {deepEqual( Stem("theaterbillet"), "theaterbillet");});
test("theatergruppe -> theatergrupp", function() {deepEqual( Stem("theatergruppe"), "theatergrupp");});
test("theaterkarten -> theaterkart", function() {deepEqual( Stem("theaterkarten"), "theaterkart");});
test("theaterprinzessin -> theaterprinzessin", function() {deepEqual( Stem("theaterprinzessin"), "theaterprinzessin");});
test("theaterprospekt -> theaterprospekt", function() {deepEqual( Stem("theaterprospekt"), "theaterprospekt");});
test("theaterszene -> theatersz", function() {deepEqual( Stem("theaterszene"), "theatersz");});
test("theke -> thek", function() {deepEqual( Stem("theke"), "thek");});
test("thema -> thema", function() {deepEqual( Stem("thema"), "thema");});
test("thematisiert -> thematisiert", function() {deepEqual( Stem("thematisiert"), "thematisiert");});
test("themen -> them", function() {deepEqual( Stem("themen"), "them");});
test("themse -> thems", function() {deepEqual( Stem("themse"), "thems");});
test("theodor -> theodor", function() {deepEqual( Stem("theodor"), "theodor");});
test("theologe -> theolog", function() {deepEqual( Stem("theologe"), "theolog");});
test("theologen -> theolog", function() {deepEqual( Stem("theologen"), "theolog");});
test("theologie -> theologi", function() {deepEqual( Stem("theologie"), "theologi");});
test("theologin -> theologin", function() {deepEqual( Stem("theologin"), "theologin");});
test("theologinnen -> theologinn", function() {deepEqual( Stem("theologinnen"), "theologinn");});
test("theologisch -> theolog", function() {deepEqual( Stem("theologisch"), "theolog");});
test("theologische -> theolog", function() {deepEqual( Stem("theologische"), "theolog");});
test("theologischen -> theolog", function() {deepEqual( Stem("theologischen"), "theolog");});
test("theophrastos -> theophrastos", function() {deepEqual( Stem("theophrastos"), "theophrastos");});
test("theoretisch -> theoret", function() {deepEqual( Stem("theoretisch"), "theoret");});
test("theoretische -> theoret", function() {deepEqual( Stem("theoretische"), "theoret");});
test("theoretischen -> theoret", function() {deepEqual( Stem("theoretischen"), "theoret");});
test("theoretischer -> theoret", function() {deepEqual( Stem("theoretischer"), "theoret");});
test("theoretisches -> theoret", function() {deepEqual( Stem("theoretisches"), "theoret");});
test("theorie -> theori", function() {deepEqual( Stem("theorie"), "theori");});
test("theorien -> theori", function() {deepEqual( Stem("theorien"), "theori");});
test("theosophen -> theosoph", function() {deepEqual( Stem("theosophen"), "theosoph");});
test("theosophische -> theosoph", function() {deepEqual( Stem("theosophische"), "theosoph");});
test("theresa -> theresa", function() {deepEqual( Stem("theresa"), "theresa");});
test("thesen -> thes", function() {deepEqual( Stem("thesen"), "thes");});
test("thesis -> thesis", function() {deepEqual( Stem("thesis"), "thesis");});
test("thiel -> thiel", function() {deepEqual( Stem("thiel"), "thiel");});
test("thomas -> thomas", function() {deepEqual( Stem("thomas"), "thomas");});
test("thron -> thron", function() {deepEqual( Stem("thron"), "thron");});
test("throne -> thron", function() {deepEqual( Stem("throne"), "thron");});
test("thronen -> thron", function() {deepEqual( Stem("thronen"), "thron");});
test("thrones -> thron", function() {deepEqual( Stem("thrones"), "thron");});
test("throns -> thron", function() {deepEqual( Stem("throns"), "thron");});
test("thronstufen -> thronstuf", function() {deepEqual( Stem("thronstufen"), "thronstuf");});
test("thront -> thront", function() {deepEqual( Stem("thront"), "thront");});
test("thronte -> thront", function() {deepEqual( Stem("thronte"), "thront");});
test("thubal -> thubal", function() {deepEqual( Stem("thubal"), "thubal");});
test("thubalkain -> thubalkain", function() {deepEqual( Stem("thubalkain"), "thubalkain");});
test("thubalkains -> thubalkain", function() {deepEqual( Stem("thubalkains"), "thubalkain");});
test("thurgau -> thurgau", function() {deepEqual( Stem("thurgau"), "thurgau");});
test("thv -> thv", function() {deepEqual( Stem("thv"), "thv");});
test("ti -> ti", function() {deepEqual( Stem("ti"), "ti");});
test("ticket -> ticket", function() {deepEqual( Stem("ticket"), "ticket");});
test("tief -> tief", function() {deepEqual( Stem("tief"), "tief");});
test("tiefblauem -> tiefblau", function() {deepEqual( Stem("tiefblauem"), "tiefblau");});
test("tiefblauen -> tiefblau", function() {deepEqual( Stem("tiefblauen"), "tiefblau");});
test("tiefe -> tief", function() {deepEqual( Stem("tiefe"), "tief");});
test("tiefem -> tief", function() {deepEqual( Stem("tiefem"), "tief");});
test("tiefen -> tief", function() {deepEqual( Stem("tiefen"), "tief");});
test("tiefer -> tief", function() {deepEqual( Stem("tiefer"), "tief");});
test("tiefere -> tief", function() {deepEqual( Stem("tiefere"), "tief");});
test("tieferen -> tief", function() {deepEqual( Stem("tieferen"), "tief");});
test("tiefern -> tief", function() {deepEqual( Stem("tiefern"), "tief");});
test("tiefes -> tief", function() {deepEqual( Stem("tiefes"), "tief");});
test("tiefpunkt -> tiefpunkt", function() {deepEqual( Stem("tiefpunkt"), "tiefpunkt");});
test("tiefschwarzes -> tiefschwarz", function() {deepEqual( Stem("tiefschwarzes"), "tiefschwarz");});
test("tiefsinnig -> tiefsinn", function() {deepEqual( Stem("tiefsinnig"), "tiefsinn");});
test("tiefsinnigen -> tiefsinn", function() {deepEqual( Stem("tiefsinnigen"), "tiefsinn");});
test("tiefsinniges -> tiefsinn", function() {deepEqual( Stem("tiefsinniges"), "tiefsinn");});
test("tiefste -> tief", function() {deepEqual( Stem("tiefste"), "tief");});
test("tiefsten -> tief", function() {deepEqual( Stem("tiefsten"), "tief");});
test("tiefster -> tief", function() {deepEqual( Stem("tiefster"), "tief");});
test("tieftönenden -> tiefton", function() {deepEqual( Stem("tieftönenden"), "tiefton");});
test("tier -> tier", function() {deepEqual( Stem("tier"), "tier");});
test("tierarzt -> tierarzt", function() {deepEqual( Stem("tierarzt"), "tierarzt");});
test("tierchen -> tierch", function() {deepEqual( Stem("tierchen"), "tierch");});
test("tiere -> tier", function() {deepEqual( Stem("tiere"), "tier");});
test("tieren -> tier", function() {deepEqual( Stem("tieren"), "tier");});
test("tieres -> tier", function() {deepEqual( Stem("tieres"), "tier");});
test("tierfabel -> tierfabel", function() {deepEqual( Stem("tierfabel"), "tierfabel");});
test("tiergattungen -> tiergatt", function() {deepEqual( Stem("tiergattungen"), "tiergatt");});
test("tierheit -> tierheit", function() {deepEqual( Stem("tierheit"), "tierheit");});
test("tierische -> tierisch", function() {deepEqual( Stem("tierische"), "tierisch");});
test("tierischen -> tierisch", function() {deepEqual( Stem("tierischen"), "tierisch");});
test("tierklaue -> tierklau", function() {deepEqual( Stem("tierklaue"), "tierklau");});
test("tierlebens -> tierleb", function() {deepEqual( Stem("tierlebens"), "tierleb");});
test("tierlein -> tierlein", function() {deepEqual( Stem("tierlein"), "tierlein");});
test("tiernatur -> tiernatur", function() {deepEqual( Stem("tiernatur"), "tiernatur");});
test("tiersamen -> tiersam", function() {deepEqual( Stem("tiersamen"), "tiersam");});
test("tierschutzverein -> tierschutzverein", function() {deepEqual( Stem("tierschutzverein"), "tierschutzverein");});
test("tierseele -> tierseel", function() {deepEqual( Stem("tierseele"), "tierseel");});
test("tierwelt -> tierwelt", function() {deepEqual( Stem("tierwelt"), "tierwelt");});
test("tiger -> tig", function() {deepEqual( Stem("tiger"), "tig");});
test("tigern -> tig", function() {deepEqual( Stem("tigern"), "tig");});
test("tiiid -> tiiid", function() {deepEqual( Stem("tiiid"), "tiiid");});
test("tilgen -> tilg", function() {deepEqual( Stem("tilgen"), "tilg");});
test("tinte -> tint", function() {deepEqual( Stem("tinte"), "tint");});
test("tinten -> tint", function() {deepEqual( Stem("tinten"), "tint");});
test("tintenflaschen -> tintenflasch", function() {deepEqual( Stem("tintenflaschen"), "tintenflasch");});
test("tintenstrichen -> tintenstrich", function() {deepEqual( Stem("tintenstrichen"), "tintenstrich");});
test("tippte -> tippt", function() {deepEqual( Stem("tippte"), "tippt");});
test("tirilieren -> tirili", function() {deepEqual( Stem("tirilieren"), "tirili");});
test("tirilierte -> tiriliert", function() {deepEqual( Stem("tirilierte"), "tiriliert");});
test("tisch -> tisch", function() {deepEqual( Stem("tisch"), "tisch");});
test("tischbeins -> tischbein", function() {deepEqual( Stem("tischbeins"), "tischbein");});
test("tischchen -> tischch", function() {deepEqual( Stem("tischchen"), "tischch");});
test("tische -> tisch", function() {deepEqual( Stem("tische"), "tisch");});
test("tischen -> tisch", function() {deepEqual( Stem("tischen"), "tisch");});
test("tisches -> tisch", function() {deepEqual( Stem("tisches"), "tisch");});
test("tischgebet -> tischgebet", function() {deepEqual( Stem("tischgebet"), "tischgebet");});
test("tischlade -> tischlad", function() {deepEqual( Stem("tischlade"), "tischlad");});
test("tischler -> tischl", function() {deepEqual( Stem("tischler"), "tischl");});
test("tischplatte -> tischplatt", function() {deepEqual( Stem("tischplatte"), "tischplatt");});
test("tischtuch -> tischtuch", function() {deepEqual( Stem("tischtuch"), "tischtuch");});
test("tischwein -> tischwein", function() {deepEqual( Stem("tischwein"), "tischwein");});
test("titel -> titel", function() {deepEqual( Stem("titel"), "titel");});
test("titelblatt -> titelblatt", function() {deepEqual( Stem("titelblatt"), "titelblatt");});
test("titeln -> titeln", function() {deepEqual( Stem("titeln"), "titeln");});
test("titelt -> titelt", function() {deepEqual( Stem("titelt"), "titelt");});
test("tl -> tl", function() {deepEqual( Stem("tl"), "tl");});
test("to -> to", function() {deepEqual( Stem("to"), "to");});
test("toaste -> toast", function() {deepEqual( Stem("toaste"), "toast");});
test("toasts -> toast", function() {deepEqual( Stem("toasts"), "toast");});
test("toben -> tob", function() {deepEqual( Stem("toben"), "tob");});
test("tobende -> tobend", function() {deepEqual( Stem("tobende"), "tobend");});
test("tobenden -> tobend", function() {deepEqual( Stem("tobenden"), "tobend");});
test("tobendes -> tobend", function() {deepEqual( Stem("tobendes"), "tobend");});
test("tobias -> tobias", function() {deepEqual( Stem("tobias"), "tobias");});
test("tobt -> tobt", function() {deepEqual( Stem("tobt"), "tobt");});
test("tobte -> tobt", function() {deepEqual( Stem("tobte"), "tobt");});
test("tochter -> tocht", function() {deepEqual( Stem("tochter"), "tocht");});
test("töchter -> tocht", function() {deepEqual( Stem("töchter"), "tocht");});
test("töchtern -> tocht", function() {deepEqual( Stem("töchtern"), "tocht");});
test("tod -> tod", function() {deepEqual( Stem("tod"), "tod");});
test("todbette -> todbett", function() {deepEqual( Stem("todbette"), "todbett");});
test("todbringend -> todbring", function() {deepEqual( Stem("todbringend"), "todbring");});
test("tode -> tod", function() {deepEqual( Stem("tode"), "tod");});
test("todes -> tod", function() {deepEqual( Stem("todes"), "tod");});
test("todesangst -> todesang", function() {deepEqual( Stem("todesangst"), "todesang");});
test("todesaussichten -> todesaussicht", function() {deepEqual( Stem("todesaussichten"), "todesaussicht");});
test("todesfurcht -> todesfurcht", function() {deepEqual( Stem("todesfurcht"), "todesfurcht");});
test("todeskampf -> todeskampf", function() {deepEqual( Stem("todeskampf"), "todeskampf");});
test("todeskandidaten -> todeskandidat", function() {deepEqual( Stem("todeskandidaten"), "todeskandidat");});
test("todesschattens -> todesschatt", function() {deepEqual( Stem("todesschattens"), "todesschatt");});
test("todesschrecken -> todesschreck", function() {deepEqual( Stem("todesschrecken"), "todesschreck");});
test("todesschwadronen -> todesschwadron", function() {deepEqual( Stem("todesschwadronen"), "todesschwadron");});
test("todesstrafe -> todesstraf", function() {deepEqual( Stem("todesstrafe"), "todesstraf");});
test("todesstrafen -> todesstraf", function() {deepEqual( Stem("todesstrafen"), "todesstraf");});
test("todesstunde -> todesstund", function() {deepEqual( Stem("todesstunde"), "todesstund");});
test("todesurteil -> todesurteil", function() {deepEqual( Stem("todesurteil"), "todesurteil");});
test("todeswerkzeuge -> todeswerkzeug", function() {deepEqual( Stem("todeswerkzeuge"), "todeswerkzeug");});
test("tödlich -> todlich", function() {deepEqual( Stem("tödlich"), "todlich");});
test("tödliche -> todlich", function() {deepEqual( Stem("tödliche"), "todlich");});
test("tödlichen -> todlich", function() {deepEqual( Stem("tödlichen"), "todlich");});
test("tödlicher -> todlich", function() {deepEqual( Stem("tödlicher"), "todlich");});
test("todsünd -> todsund", function() {deepEqual( Stem("todsünd"), "todsund");});
test("todsündigen -> todsund", function() {deepEqual( Stem("todsündigen"), "todsund");});
test("todvollste -> todvoll", function() {deepEqual( Stem("todvollste"), "todvoll");});
test("töff -> toff", function() {deepEqual( Stem("töff"), "toff");});
test("töfffahrer -> tofffahr", function() {deepEqual( Stem("töfffahrer"), "tofffahr");});
test("toile -> toil", function() {deepEqual( Stem("toile"), "toil");});
test("toilette -> toilett", function() {deepEqual( Stem("toilette"), "toilett");});
test("toilettenstücke -> toilettenstuck", function() {deepEqual( Stem("toilettenstücke"), "toilettenstuck");});
test("toilettenwerkzeug -> toilettenwerkzeug", function() {deepEqual( Stem("toilettenwerkzeug"), "toilettenwerkzeug");});
test("tokaier -> tokai", function() {deepEqual( Stem("tokaier"), "tokai");});
test("tol -> tol", function() {deepEqual( Stem("tol"), "tol");});
test("toll -> toll", function() {deepEqual( Stem("toll"), "toll");});
test("tolle -> toll", function() {deepEqual( Stem("tolle"), "toll");});
test("tollen -> toll", function() {deepEqual( Stem("tollen"), "toll");});
test("toller -> toll", function() {deepEqual( Stem("toller"), "toll");});
test("tolleren -> toll", function() {deepEqual( Stem("tolleren"), "toll");});
test("tolles -> toll", function() {deepEqual( Stem("tolles"), "toll");});
test("tollhaus -> tollhaus", function() {deepEqual( Stem("tollhaus"), "tollhaus");});
test("tollhäusler -> tollhausl", function() {deepEqual( Stem("tollhäusler"), "tollhausl");});
test("tollheit -> tollheit", function() {deepEqual( Stem("tollheit"), "tollheit");});
test("tollkühnen -> tollkuhn", function() {deepEqual( Stem("tollkühnen"), "tollkuhn");});
test("tollste -> toll", function() {deepEqual( Stem("tollste"), "toll");});
test("tollsten -> toll", function() {deepEqual( Stem("tollsten"), "toll");});
test("tollte -> tollt", function() {deepEqual( Stem("tollte"), "tollt");});
test("tolpatsch -> tolpatsch", function() {deepEqual( Stem("tolpatsch"), "tolpatsch");});
test("tolpatschig -> tolpatsch", function() {deepEqual( Stem("tolpatschig"), "tolpatsch");});
test("tölpel -> tolpel", function() {deepEqual( Stem("tölpel"), "tolpel");});
test("tölpelhafter -> tolpelhaft", function() {deepEqual( Stem("tölpelhafter"), "tolpelhaft");});
test("tölpeln -> tolpeln", function() {deepEqual( Stem("tölpeln"), "tolpeln");});
test("tölz -> tolz", function() {deepEqual( Stem("tölz"), "tolz");});
test("tombakschnalle -> tombakschnall", function() {deepEqual( Stem("tombakschnalle"), "tombakschnall");});
test("ton -> ton", function() {deepEqual( Stem("ton"), "ton");});
test("tonart -> tonart", function() {deepEqual( Stem("tonart"), "tonart");});
test("tonbandschnippel -> tonbandschnippel", function() {deepEqual( Stem("tonbandschnippel"), "tonbandschnippel");});
test("tone -> ton", function() {deepEqual( Stem("tone"), "ton");});
test("töne -> ton", function() {deepEqual( Stem("töne"), "ton");});
test("tönen -> ton", function() {deepEqual( Stem("tönen"), "ton");});
test("tönende -> tonend", function() {deepEqual( Stem("tönende"), "tonend");});
test("tonfall -> tonfall", function() {deepEqual( Stem("tonfall"), "tonfall");});
test("tonfetzen -> tonfetz", function() {deepEqual( Stem("tonfetzen"), "tonfetz");});
test("toni -> toni", function() {deepEqual( Stem("toni"), "toni");});
test("tons -> ton", function() {deepEqual( Stem("tons"), "ton");});
test("tönt -> tont", function() {deepEqual( Stem("tönt"), "tont");});
test("tönte -> tont", function() {deepEqual( Stem("tönte"), "tont");});
test("tönten -> tont", function() {deepEqual( Stem("tönten"), "tont");});
test("top -> top", function() {deepEqual( Stem("top"), "top");});
test("topas -> topas", function() {deepEqual( Stem("topas"), "topas");});
test("topf -> topf", function() {deepEqual( Stem("topf"), "topf");});
test("topfbodens -> topfbod", function() {deepEqual( Stem("topfbodens"), "topfbod");});
test("töpfchen -> topfch", function() {deepEqual( Stem("töpfchen"), "topfch");});
test("töpfe -> topf", function() {deepEqual( Stem("töpfe"), "topf");});
test("töpfen -> topf", function() {deepEqual( Stem("töpfen"), "topf");});
test("töpfer -> topf", function() {deepEqual( Stem("töpfer"), "topf");});
test("töpfergeschirre -> topfergeschirr", function() {deepEqual( Stem("töpfergeschirre"), "topfergeschirr");});
test("töpfers -> topf", function() {deepEqual( Stem("töpfers"), "topf");});
test("topfwagens -> topfwag", function() {deepEqual( Stem("topfwagens"), "topfwag");});
test("topheth -> topheth", function() {deepEqual( Stem("topheth"), "topheth");});
test("topi -> topi", function() {deepEqual( Stem("topi"), "topi");});
test("topica -> topica", function() {deepEqual( Stem("topica"), "topica");});
test("topicis -> topicis", function() {deepEqual( Stem("topicis"), "topicis");});
test("topik -> topik", function() {deepEqual( Stem("topik"), "topik");});
test("topoi -> topoi", function() {deepEqual( Stem("topoi"), "topoi");});
test("topov -> topov", function() {deepEqual( Stem("topov"), "topov");});
test("topus -> topus", function() {deepEqual( Stem("topus"), "topus");});
test("tor -> tor", function() {deepEqual( Stem("tor"), "tor");});
test("torbogen -> torbog", function() {deepEqual( Stem("torbogen"), "torbog");});
test("tore -> tor", function() {deepEqual( Stem("tore"), "tor");});
test("toreinfahrt -> toreinfahrt", function() {deepEqual( Stem("toreinfahrt"), "toreinfahrt");});
test("toren -> tor", function() {deepEqual( Stem("toren"), "tor");});
test("torenwerk -> torenwerk", function() {deepEqual( Stem("torenwerk"), "torenwerk");});
test("tores -> tor", function() {deepEqual( Stem("tores"), "tor");});
test("torgau -> torgau", function() {deepEqual( Stem("torgau"), "torgau");});
test("torheit -> torheit", function() {deepEqual( Stem("torheit"), "torheit");});
test("torheiten -> torheit", function() {deepEqual( Stem("torheiten"), "torheit");});
test("töricht -> toricht", function() {deepEqual( Stem("töricht"), "toricht");});
test("törichte -> toricht", function() {deepEqual( Stem("törichte"), "toricht");});
test("törichten -> toricht", function() {deepEqual( Stem("törichten"), "toricht");});
test("torkelte -> torkelt", function() {deepEqual( Stem("torkelte"), "torkelt");});
test("tornister -> tornist", function() {deepEqual( Stem("tornister"), "tornist");});
test("tort -> tort", function() {deepEqual( Stem("tort"), "tort");});
test("torte -> tort", function() {deepEqual( Stem("torte"), "tort");});
test("tosende -> tosend", function() {deepEqual( Stem("tosende"), "tosend");});
test("tot -> tot", function() {deepEqual( Stem("tot"), "tot");});
test("total -> total", function() {deepEqual( Stem("total"), "total");});
test("totale -> total", function() {deepEqual( Stem("totale"), "total");});
test("totalen -> total", function() {deepEqual( Stem("totalen"), "total");});
test("totalität -> totalitat", function() {deepEqual( Stem("totalität"), "totalitat");});
test("tote -> tot", function() {deepEqual( Stem("tote"), "tot");});
test("töte -> tot", function() {deepEqual( Stem("töte"), "tot");});
test("toten -> tot", function() {deepEqual( Stem("toten"), "tot");});
test("töten -> tot", function() {deepEqual( Stem("töten"), "tot");});
test("totenbahre -> totenbahr", function() {deepEqual( Stem("totenbahre"), "totenbahr");});
test("totenbleich -> totenbleich", function() {deepEqual( Stem("totenbleich"), "totenbleich");});
test("tötendes -> totend", function() {deepEqual( Stem("tötendes"), "totend");});
test("totengebeine -> totengebein", function() {deepEqual( Stem("totengebeine"), "totengebein");});
test("totenmusik -> totenmus", function() {deepEqual( Stem("totenmusik"), "totenmus");});
test("tötens -> tot", function() {deepEqual( Stem("tötens"), "tot");});
test("totenstill -> totenstill", function() {deepEqual( Stem("totenstill"), "totenstill");});
test("toter -> tot", function() {deepEqual( Stem("toter"), "tot");});
test("totes -> tot", function() {deepEqual( Stem("totes"), "tot");});
test("tötet -> totet", function() {deepEqual( Stem("tötet"), "totet");});
test("tötete -> totet", function() {deepEqual( Stem("tötete"), "totet");});
test("töteten -> totet", function() {deepEqual( Stem("töteten"), "totet");});
test("totgemacht -> totgemacht", function() {deepEqual( Stem("totgemacht"), "totgemacht");});
test("totgeprügelt -> totgeprugelt", function() {deepEqual( Stem("totgeprügelt"), "totgeprugelt");});
test("totgeschlagen -> totgeschlag", function() {deepEqual( Stem("totgeschlagen"), "totgeschlag");});
test("totgestellt -> totgestellt", function() {deepEqual( Stem("totgestellt"), "totgestellt");});
test("totlachen -> totlach", function() {deepEqual( Stem("totlachen"), "totlach");});
test("totmachen -> totmach", function() {deepEqual( Stem("totmachen"), "totmach");});
test("totmachte -> totmacht", function() {deepEqual( Stem("totmachte"), "totmacht");});
test("totschlag -> totschlag", function() {deepEqual( Stem("totschlag"), "totschlag");});
test("totschlagen -> totschlag", function() {deepEqual( Stem("totschlagen"), "totschlag");});
test("totstellen -> totstell", function() {deepEqual( Stem("totstellen"), "totstell");});
test("tottrat -> tottrat", function() {deepEqual( Stem("tottrat"), "tottrat");});
test("tötung -> totung", function() {deepEqual( Stem("tötung"), "totung");});
test("touv -> touv", function() {deepEqual( Stem("touv"), "touv");});
test("traam -> traam", function() {deepEqual( Stem("traam"), "traam");});
test("trab -> trab", function() {deepEqual( Stem("trab"), "trab");});
test("trabe -> trab", function() {deepEqual( Stem("trabe"), "trab");});
test("tracht -> tracht", function() {deepEqual( Stem("tracht"), "tracht");});
test("trachten -> tracht", function() {deepEqual( Stem("trachten"), "tracht");});
test("trachtet -> trachtet", function() {deepEqual( Stem("trachtet"), "trachtet");});
test("trachtete -> trachtet", function() {deepEqual( Stem("trachtete"), "trachtet");});
test("trachteten -> trachtet", function() {deepEqual( Stem("trachteten"), "trachtet");});
test("tradition -> tradition", function() {deepEqual( Stem("tradition"), "tradition");});
test("traditionellen -> traditionell", function() {deepEqual( Stem("traditionellen"), "traditionell");});
test("traditionen -> tradition", function() {deepEqual( Stem("traditionen"), "tradition");});
test("traf -> traf", function() {deepEqual( Stem("traf"), "traf");});
test("trafen -> traf", function() {deepEqual( Stem("trafen"), "traf");});
test("trag -> trag", function() {deepEqual( Stem("trag"), "trag");});
test("träg -> trag", function() {deepEqual( Stem("träg"), "trag");});
test("tragbar -> tragbar", function() {deepEqual( Stem("tragbar"), "tragbar");});
test("trage -> trag", function() {deepEqual( Stem("trage"), "trag");});
test("träge -> trag", function() {deepEqual( Stem("träge"), "trag");});
test("tragen -> trag", function() {deepEqual( Stem("tragen"), "trag");});
test("trägen -> trag", function() {deepEqual( Stem("trägen"), "trag");});
test("tragend -> tragend", function() {deepEqual( Stem("tragend"), "tragend");});
test("tragenden -> tragend", function() {deepEqual( Stem("tragenden"), "tragend");});
test("träger -> trag", function() {deepEqual( Stem("träger"), "trag");});
test("trägerschaft -> tragerschaft", function() {deepEqual( Stem("trägerschaft"), "tragerschaft");});
test("trägheit -> tragheit", function() {deepEqual( Stem("trägheit"), "tragheit");});
test("tragik -> tragik", function() {deepEqual( Stem("tragik"), "tragik");});
test("tragisch -> tragisch", function() {deepEqual( Stem("tragisch"), "tragisch");});
test("tragische -> tragisch", function() {deepEqual( Stem("tragische"), "tragisch");});
test("tragischen -> tragisch", function() {deepEqual( Stem("tragischen"), "tragisch");});
test("trägt -> tragt", function() {deepEqual( Stem("trägt"), "tragt");});
test("training -> training", function() {deepEqual( Stem("training"), "training");});
test("traktätchen -> traktatch", function() {deepEqual( Stem("traktätchen"), "traktatch");});
test("traktatus -> traktatus", function() {deepEqual( Stem("traktatus"), "traktatus");});
test("trällern -> trall", function() {deepEqual( Stem("trällern"), "trall");});
test("tranchierens -> tranchier", function() {deepEqual( Stem("tranchierens"), "tranchier");});
test("träne -> tran", function() {deepEqual( Stem("träne"), "tran");});
test("tränen -> tran", function() {deepEqual( Stem("tränen"), "tran");});
test("tränenbrot -> tranenbrot", function() {deepEqual( Stem("tränenbrot"), "tranenbrot");});
test("trank -> trank", function() {deepEqual( Stem("trank"), "trank");});
test("tranken -> trank", function() {deepEqual( Stem("tranken"), "trank");});
test("tränken -> trank", function() {deepEqual( Stem("tränken"), "trank");});
test("tränket -> tranket", function() {deepEqual( Stem("tränket"), "tranket");});
test("trankopfer -> trankopf", function() {deepEqual( Stem("trankopfer"), "trankopf");});
test("trankst -> trank", function() {deepEqual( Stem("trankst"), "trank");});
test("tränkst -> trank", function() {deepEqual( Stem("tränkst"), "trank");});
test("tränkte -> trankt", function() {deepEqual( Stem("tränkte"), "trankt");});
test("tranlämpchen -> tranlampch", function() {deepEqual( Stem("tranlämpchen"), "tranlampch");});
test("transzendent -> transzendent", function() {deepEqual( Stem("transzendent"), "transzendent");});
test("transzendental -> transzendental", function() {deepEqual( Stem("transzendental"), "transzendental");});
test("transzendentale -> transzendental", function() {deepEqual( Stem("transzendentale"), "transzendental");});
test("transzendentalen -> transzendental", function() {deepEqual( Stem("transzendentalen"), "transzendental");});
test("transzendentales -> transzendental", function() {deepEqual( Stem("transzendentales"), "transzendental");});
test("transzendente -> transzendent", function() {deepEqual( Stem("transzendente"), "transzendent");});
test("transzendenten -> transzendent", function() {deepEqual( Stem("transzendenten"), "transzendent");});
test("transzendenz -> transzendenz", function() {deepEqual( Stem("transzendenz"), "transzendenz");});
test("trapfenden -> trapfend", function() {deepEqual( Stem("trapfenden"), "trapfend");});
test("trapfhirsch -> trapfhirsch", function() {deepEqual( Stem("trapfhirsch"), "trapfhirsch");});
test("trat -> trat", function() {deepEqual( Stem("trat"), "trat");});
test("traten -> trat", function() {deepEqual( Stem("traten"), "trat");});
test("trau -> trau", function() {deepEqual( Stem("trau"), "trau");});
test("traube -> traub", function() {deepEqual( Stem("traube"), "traub");});
test("trauben -> traub", function() {deepEqual( Stem("trauben"), "traub");});
test("trauen -> trau", function() {deepEqual( Stem("trauen"), "trau");});
test("trauer -> trau", function() {deepEqual( Stem("trauer"), "trau");});
test("trauere -> trau", function() {deepEqual( Stem("trauere"), "trau");});
test("trauergang -> trauergang", function() {deepEqual( Stem("trauergang"), "trauergang");});
test("trauerkapelle -> trauerkapell", function() {deepEqual( Stem("trauerkapelle"), "trauerkapell");});
test("trauern -> trau", function() {deepEqual( Stem("trauern"), "trau");});
test("trauernd -> trauernd", function() {deepEqual( Stem("trauernd"), "trauernd");});
test("trauernde -> trauernd", function() {deepEqual( Stem("trauernde"), "trauernd");});
test("trauernden -> trauernd", function() {deepEqual( Stem("trauernden"), "trauernd");});
test("trauernder -> trauernd", function() {deepEqual( Stem("trauernder"), "trauernd");});
test("trauerspiel -> trauerspiel", function() {deepEqual( Stem("trauerspiel"), "trauerspiel");});
test("trauerspielen -> trauerspiel", function() {deepEqual( Stem("trauerspielen"), "trauerspiel");});
test("trauert -> trauert", function() {deepEqual( Stem("trauert"), "trauert");});
test("trauerte -> trauert", function() {deepEqual( Stem("trauerte"), "trauert");});
test("trauerzeit -> trauerzeit", function() {deepEqual( Stem("trauerzeit"), "trauerzeit");});
test("trauet -> trauet", function() {deepEqual( Stem("trauet"), "trauet");});
test("traufe -> trauf", function() {deepEqual( Stem("traufe"), "trauf");});
test("träufeln -> traufeln", function() {deepEqual( Stem("träufeln"), "traufeln");});
test("träufelt -> traufelt", function() {deepEqual( Stem("träufelt"), "traufelt");});
test("träufelten -> traufelt", function() {deepEqual( Stem("träufelten"), "traufelt");});
test("traulich -> traulich", function() {deepEqual( Stem("traulich"), "traulich");});
test("traulichen -> traulich", function() {deepEqual( Stem("traulichen"), "traulich");});
test("traum -> traum", function() {deepEqual( Stem("traum"), "traum");});
test("traumberuf -> traumberuf", function() {deepEqual( Stem("traumberuf"), "traumberuf");});
test("traumbüchlein -> traumbuchlein", function() {deepEqual( Stem("traumbüchlein"), "traumbuchlein");});
test("traume -> traum", function() {deepEqual( Stem("traume"), "traum");});
test("träume -> traum", function() {deepEqual( Stem("träume"), "traum");});
test("träumen -> traum", function() {deepEqual( Stem("träumen"), "traum");});
test("träumenden -> traumend", function() {deepEqual( Stem("träumenden"), "traumend");});
test("träumereien -> traumerei", function() {deepEqual( Stem("träumereien"), "traumerei");});
test("träumerisch -> traumer", function() {deepEqual( Stem("träumerisch"), "traumer");});
test("träumerischen -> traumer", function() {deepEqual( Stem("träumerischen"), "traumer");});
test("traumhafter -> traumhaft", function() {deepEqual( Stem("traumhafter"), "traumhaft");});
test("traumlicht -> traumlicht", function() {deepEqual( Stem("traumlicht"), "traumlicht");});
test("traumseligkeit -> traumsel", function() {deepEqual( Stem("traumseligkeit"), "traumsel");});
test("träumst -> traum", function() {deepEqual( Stem("träumst"), "traum");});
test("träumt -> traumt", function() {deepEqual( Stem("träumt"), "traumt");});
test("träumte -> traumt", function() {deepEqual( Stem("träumte"), "traumt");});
test("träumten -> traumt", function() {deepEqual( Stem("träumten"), "traumt");});
test("traurig -> traurig", function() {deepEqual( Stem("traurig"), "traurig");});
test("traurige -> traurig", function() {deepEqual( Stem("traurige"), "traurig");});
test("traurigen -> traurig", function() {deepEqual( Stem("traurigen"), "traurig");});
test("trauriger -> traurig", function() {deepEqual( Stem("trauriger"), "traurig");});
test("trauriges -> traurig", function() {deepEqual( Stem("trauriges"), "traurig");});
test("traurigkeit -> traurig", function() {deepEqual( Stem("traurigkeit"), "traurig");});
test("traurigs -> traurig", function() {deepEqual( Stem("traurigs"), "traurig");});
test("traurigste -> traurig", function() {deepEqual( Stem("traurigste"), "traurig");});
test("traut -> traut", function() {deepEqual( Stem("traut"), "traut");});
test("traute -> traut", function() {deepEqual( Stem("traute"), "traut");});
test("trauten -> traut", function() {deepEqual( Stem("trauten"), "traut");});
test("trautes -> traut", function() {deepEqual( Stem("trautes"), "traut");});
test("trauung -> trauung", function() {deepEqual( Stem("trauung"), "trauung");});
test("treffe -> treff", function() {deepEqual( Stem("treffe"), "treff");});
test("treffen -> treff", function() {deepEqual( Stem("treffen"), "treff");});
test("treffenden -> treffend", function() {deepEqual( Stem("treffenden"), "treffend");});
test("trefflich -> trefflich", function() {deepEqual( Stem("trefflich"), "trefflich");});
test("trefflichen -> trefflich", function() {deepEqual( Stem("trefflichen"), "trefflich");});
test("trefflicher -> trefflich", function() {deepEqual( Stem("trefflicher"), "trefflich");});
test("treffliches -> trefflich", function() {deepEqual( Stem("treffliches"), "trefflich");});
test("treib -> treib", function() {deepEqual( Stem("treib"), "treib");});
test("treiben -> treib", function() {deepEqual( Stem("treiben"), "treib");});
test("treibend -> treibend", function() {deepEqual( Stem("treibend"), "treibend");});
test("treibenden -> treibend", function() {deepEqual( Stem("treibenden"), "treibend");});
test("treiber -> treib", function() {deepEqual( Stem("treiber"), "treib");});
test("treibern -> treib", function() {deepEqual( Stem("treibern"), "treib");});
test("treibst -> treib", function() {deepEqual( Stem("treibst"), "treib");});
test("treibt -> treibt", function() {deepEqual( Stem("treibt"), "treibt");});
test("tremolierte -> tremoliert", function() {deepEqual( Stem("tremolierte"), "tremoliert");});
test("trend -> trend", function() {deepEqual( Stem("trend"), "trend");});
test("trennen -> trenn", function() {deepEqual( Stem("trennen"), "trenn");});
test("trennt -> trennt", function() {deepEqual( Stem("trennt"), "trennt");});
test("trennte -> trennt", function() {deepEqual( Stem("trennte"), "trennt");});
test("trennten -> trennt", function() {deepEqual( Stem("trennten"), "trennt");});
test("trennung -> trennung", function() {deepEqual( Stem("trennung"), "trennung");});
test("trennungen -> trennung", function() {deepEqual( Stem("trennungen"), "trennung");});
test("treppe -> trepp", function() {deepEqual( Stem("treppe"), "trepp");});
test("treppen -> trepp", function() {deepEqual( Stem("treppen"), "trepp");});
test("treppenabsatz -> treppenabsatz", function() {deepEqual( Stem("treppenabsatz"), "treppenabsatz");});
test("treppenaufgänge -> treppenaufgang", function() {deepEqual( Stem("treppenaufgänge"), "treppenaufgang");});
test("treppengeländer -> treppengeland", function() {deepEqual( Stem("treppengeländer"), "treppengeland");});
test("treppenhaus -> treppenhaus", function() {deepEqual( Stem("treppenhaus"), "treppenhaus");});
test("treppenstufen -> treppenstuf", function() {deepEqual( Stem("treppenstufen"), "treppenstuf");});
test("trete -> tret", function() {deepEqual( Stem("trete"), "tret");});
test("treten -> tret", function() {deepEqual( Stem("treten"), "tret");});
test("tretet -> tretet", function() {deepEqual( Stem("tretet"), "tretet");});
test("treu -> treu", function() {deepEqual( Stem("treu"), "treu");});
test("treue -> treu", function() {deepEqual( Stem("treue"), "treu");});
test("treuem -> treu", function() {deepEqual( Stem("treuem"), "treu");});
test("treuen -> treu", function() {deepEqual( Stem("treuen"), "treu");});
test("treuer -> treu", function() {deepEqual( Stem("treuer"), "treu");});
test("treuere -> treu", function() {deepEqual( Stem("treuere"), "treu");});
test("treues -> treu", function() {deepEqual( Stem("treues"), "treu");});
test("treugeliebter -> treugeliebt", function() {deepEqual( Stem("treugeliebter"), "treugeliebt");});
test("treuherzig -> treuherz", function() {deepEqual( Stem("treuherzig"), "treuherz");});
test("treuherzige -> treuherz", function() {deepEqual( Stem("treuherzige"), "treuherz");});
test("treuherzigen -> treuherz", function() {deepEqual( Stem("treuherzigen"), "treuherz");});
test("treuherziges -> treuherz", function() {deepEqual( Stem("treuherziges"), "treuherz");});
test("treulich -> treulich", function() {deepEqual( Stem("treulich"), "treulich");});
test("treulos -> treulos", function() {deepEqual( Stem("treulos"), "treulos");});
test("treulosen -> treulos", function() {deepEqual( Stem("treulosen"), "treulos");});
test("treuloser -> treulos", function() {deepEqual( Stem("treuloser"), "treulos");});
test("treulosigkeit -> treulos", function() {deepEqual( Stem("treulosigkeit"), "treulos");});
test("treuste -> treust", function() {deepEqual( Stem("treuste"), "treust");});
test("triangel -> triangel", function() {deepEqual( Stem("triangel"), "triangel");});
test("tribut -> tribut", function() {deepEqual( Stem("tribut"), "tribut");});
test("trieb -> trieb", function() {deepEqual( Stem("trieb"), "trieb");});
test("triebe -> trieb", function() {deepEqual( Stem("triebe"), "trieb");});
test("trieben -> trieb", function() {deepEqual( Stem("trieben"), "trieb");});
test("triebene -> trieb", function() {deepEqual( Stem("triebene"), "trieb");});
test("triebfeder -> triebfed", function() {deepEqual( Stem("triebfeder"), "triebfed");});
test("triebfedern -> triebfed", function() {deepEqual( Stem("triebfedern"), "triebfed");});
test("triefaugen -> triefaug", function() {deepEqual( Stem("triefaugen"), "triefaug");});
test("triefend -> triefend", function() {deepEqual( Stem("triefend"), "triefend");});
test("triefenden -> triefend", function() {deepEqual( Stem("triefenden"), "triefend");});
test("triefendes -> triefend", function() {deepEqual( Stem("triefendes"), "triefend");});
test("triefigen -> triefig", function() {deepEqual( Stem("triefigen"), "triefig");});
test("trieften -> trieft", function() {deepEqual( Stem("trieften"), "trieft");});
test("trifft -> trifft", function() {deepEqual( Stem("trifft"), "trifft");});
test("triften -> trift", function() {deepEqual( Stem("triften"), "trift");});
test("triller -> trill", function() {deepEqual( Stem("triller"), "trill");});
test("trillernde -> trillernd", function() {deepEqual( Stem("trillernde"), "trillernd");});
test("trinken -> trink", function() {deepEqual( Stem("trinken"), "trink");});
test("trinkenden -> trinkend", function() {deepEqual( Stem("trinkenden"), "trinkend");});
test("trinkest -> trink", function() {deepEqual( Stem("trinkest"), "trink");});
test("trinkgeld -> trinkgeld", function() {deepEqual( Stem("trinkgeld"), "trinkgeld");});
test("trinkhallen -> trinkhall", function() {deepEqual( Stem("trinkhallen"), "trinkhall");});
test("trinkschale -> trinkschal", function() {deepEqual( Stem("trinkschale"), "trinkschal");});
test("trinkt -> trinkt", function() {deepEqual( Stem("trinkt"), "trinkt");});
test("tritt -> tritt", function() {deepEqual( Stem("tritt"), "tritt");});
test("trittbrett -> trittbrett", function() {deepEqual( Stem("trittbrett"), "trittbrett");});
test("tritte -> tritt", function() {deepEqual( Stem("tritte"), "tritt");});
test("tritten -> tritt", function() {deepEqual( Stem("tritten"), "tritt");});
test("trittst -> tritt", function() {deepEqual( Stem("trittst"), "tritt");});
test("triumph -> triumph", function() {deepEqual( Stem("triumph"), "triumph");});
test("triumphe -> triumph", function() {deepEqual( Stem("triumphe"), "triumph");});
test("triumphieren -> triumphi", function() {deepEqual( Stem("triumphieren"), "triumphi");});
test("triumphierend -> triumphier", function() {deepEqual( Stem("triumphierend"), "triumphier");});
test("triviale -> trivial", function() {deepEqual( Stem("triviale"), "trivial");});
test("trivialität -> trivialitat", function() {deepEqual( Stem("trivialität"), "trivialitat");});
test("trivialitäten -> trivialitat", function() {deepEqual( Stem("trivialitäten"), "trivialitat");});
test("trocken -> trock", function() {deepEqual( Stem("trocken"), "trock");});
test("trockene -> trock", function() {deepEqual( Stem("trockene"), "trock");});
test("trockenen -> trock", function() {deepEqual( Stem("trockenen"), "trock");});
test("trockener -> trock", function() {deepEqual( Stem("trockener"), "trock");});
test("trockenes -> trock", function() {deepEqual( Stem("trockenes"), "trock");});
test("trockenstangen -> trockenstang", function() {deepEqual( Stem("trockenstangen"), "trockenstang");});
test("trocknen -> trockn", function() {deepEqual( Stem("trocknen"), "trockn");});
test("trocknend -> trocknend", function() {deepEqual( Stem("trocknend"), "trocknend");});
test("trocknete -> trocknet", function() {deepEqual( Stem("trocknete"), "trocknet");});
test("trockneten -> trocknet", function() {deepEqual( Stem("trockneten"), "trocknet");});
test("troddel -> troddel", function() {deepEqual( Stem("troddel"), "troddel");});
test("troddeln -> troddeln", function() {deepEqual( Stem("troddeln"), "troddeln");});
test("trog -> trog", function() {deepEqual( Stem("trog"), "trog");});
test("troge -> trog", function() {deepEqual( Stem("troge"), "trog");});
test("trollen -> troll", function() {deepEqual( Stem("trollen"), "troll");});
test("trollt -> trollt", function() {deepEqual( Stem("trollt"), "trollt");});
test("trommel -> trommel", function() {deepEqual( Stem("trommel"), "trommel");});
test("trommelfell -> trommelfell", function() {deepEqual( Stem("trommelfell"), "trommelfell");});
test("trommeln -> trommeln", function() {deepEqual( Stem("trommeln"), "trommeln");});
test("trommelte -> trommelt", function() {deepEqual( Stem("trommelte"), "trommelt");});
test("trompeten -> trompet", function() {deepEqual( Stem("trompeten"), "trompet");});
test("trompeter -> trompet", function() {deepEqual( Stem("trompeter"), "trompet");});
test("trompeters -> trompet", function() {deepEqual( Stem("trompeters"), "trompet");});
test("tropf -> tropf", function() {deepEqual( Stem("tropf"), "tropf");});
test("tröpfe -> tropf", function() {deepEqual( Stem("tröpfe"), "tropf");});
test("tropfen -> tropf", function() {deepEqual( Stem("tropfen"), "tropf");});
test("tropfensaum -> tropfensaum", function() {deepEqual( Stem("tropfensaum"), "tropfensaum");});
test("tropfenschweren -> tropfenschw", function() {deepEqual( Stem("tropfenschweren"), "tropfenschw");});
test("tröpflein -> tropflein", function() {deepEqual( Stem("tröpflein"), "tropflein");});
test("tropft -> tropft", function() {deepEqual( Stem("tropft"), "tropft");});
test("tropften -> tropft", function() {deepEqual( Stem("tropften"), "tropft");});
test("trophäe -> tropha", function() {deepEqual( Stem("trophäe"), "tropha");});
test("tross -> tross", function() {deepEqual( Stem("tross"), "tross");});
test("troß -> tross", function() {deepEqual( Stem("troß"), "tross");});
test("trosse -> tross", function() {deepEqual( Stem("trosse"), "tross");});
test("trossknechte -> trossknecht", function() {deepEqual( Stem("trossknechte"), "trossknecht");});
test("troßknechte -> trossknecht", function() {deepEqual( Stem("troßknechte"), "trossknecht");});
test("trost -> trost", function() {deepEqual( Stem("trost"), "trost");});
test("tröst -> trost", function() {deepEqual( Stem("tröst"), "trost");});
test("trösten -> trost", function() {deepEqual( Stem("trösten"), "trost");});
test("tröstende -> trostend", function() {deepEqual( Stem("tröstende"), "trostend");});
test("tröstenden -> trostend", function() {deepEqual( Stem("tröstenden"), "trostend");});
test("tröster -> trost", function() {deepEqual( Stem("tröster"), "trost");});
test("trostes -> trost", function() {deepEqual( Stem("trostes"), "trost");});
test("tröstet -> trostet", function() {deepEqual( Stem("tröstet"), "trostet");});
test("tröstete -> trostet", function() {deepEqual( Stem("tröstete"), "trostet");});
test("trostlos -> trostlos", function() {deepEqual( Stem("trostlos"), "trostlos");});
test("trostlose -> trostlos", function() {deepEqual( Stem("trostlose"), "trostlos");});
test("trostlosen -> trostlos", function() {deepEqual( Stem("trostlosen"), "trostlos");});
test("trostlosesten -> trostlos", function() {deepEqual( Stem("trostlosesten"), "trostlos");});
test("trostlosigkeit -> trostlos", function() {deepEqual( Stem("trostlosigkeit"), "trostlos");});
test("tröstungen -> trostung", function() {deepEqual( Stem("tröstungen"), "trostung");});
test("trottel -> trottel", function() {deepEqual( Stem("trottel"), "trottel");});
test("trottete -> trottet", function() {deepEqual( Stem("trottete"), "trottet");});
test("trotz -> trotz", function() {deepEqual( Stem("trotz"), "trotz");});
test("trotzdem -> trotzd", function() {deepEqual( Stem("trotzdem"), "trotzd");});
test("trotzig -> trotzig", function() {deepEqual( Stem("trotzig"), "trotzig");});
test("trotzige -> trotzig", function() {deepEqual( Stem("trotzige"), "trotzig");});
test("trotzigen -> trotzig", function() {deepEqual( Stem("trotzigen"), "trotzig");});
test("trotziges -> trotzig", function() {deepEqual( Stem("trotziges"), "trotzig");});
test("trotzten -> trotzt", function() {deepEqual( Stem("trotzten"), "trotzt");});
test("trübe -> trub", function() {deepEqual( Stem("trübe"), "trub");});
test("trubel -> trubel", function() {deepEqual( Stem("trubel"), "trubel");});
test("trüben -> trub", function() {deepEqual( Stem("trüben"), "trub");});
test("trüber -> trub", function() {deepEqual( Stem("trüber"), "trub");});
test("trübes -> trub", function() {deepEqual( Stem("trübes"), "trub");});
test("trübsal -> trubsal", function() {deepEqual( Stem("trübsal"), "trubsal");});
test("trübsale -> trubsal", function() {deepEqual( Stem("trübsale"), "trubsal");});
test("trübselig -> trubsel", function() {deepEqual( Stem("trübselig"), "trubsel");});
test("trübselige -> trubsel", function() {deepEqual( Stem("trübselige"), "trubsel");});
test("trübseligen -> trubsel", function() {deepEqual( Stem("trübseligen"), "trubsel");});
test("trübseliger -> trubsel", function() {deepEqual( Stem("trübseliger"), "trubsel");});
test("trübt -> trubt", function() {deepEqual( Stem("trübt"), "trubt");});
test("trübte -> trubt", function() {deepEqual( Stem("trübte"), "trubt");});
test("trüffeln -> truffeln", function() {deepEqual( Stem("trüffeln"), "truffeln");});
test("trug -> trug", function() {deepEqual( Stem("trug"), "trug");});
test("trüge -> trug", function() {deepEqual( Stem("trüge"), "trug");});
test("trugen -> trug", function() {deepEqual( Stem("trugen"), "trug");});
test("trügerische -> truger", function() {deepEqual( Stem("trügerische"), "truger");});
test("trügerischer -> truger", function() {deepEqual( Stem("trügerischer"), "truger");});
test("truggestalten -> truggestalt", function() {deepEqual( Stem("truggestalten"), "truggestalt");});
test("truggründe -> truggrund", function() {deepEqual( Stem("truggründe"), "truggrund");});
test("trüglich -> truglich", function() {deepEqual( Stem("trüglich"), "truglich");});
test("trüglicher -> truglich", function() {deepEqual( Stem("trüglicher"), "truglich");});
test("trüglichkeit -> truglich", function() {deepEqual( Stem("trüglichkeit"), "truglich");});
test("trugvoll -> trugvoll", function() {deepEqual( Stem("trugvoll"), "trugvoll");});
test("trummen -> trumm", function() {deepEqual( Stem("trummen"), "trumm");});
test("trümmer -> trumm", function() {deepEqual( Stem("trümmer"), "trumm");});
test("trümmerhaufen -> trummerhauf", function() {deepEqual( Stem("trümmerhaufen"), "trummerhauf");});
test("trümmern -> trumm", function() {deepEqual( Stem("trümmern"), "trumm");});
test("trunken -> trunk", function() {deepEqual( Stem("trunken"), "trunk");});
test("trunkenen -> trunk", function() {deepEqual( Stem("trunkenen"), "trunk");});
test("trunkener -> trunk", function() {deepEqual( Stem("trunkener"), "trunk");});
test("trupp -> trupp", function() {deepEqual( Stem("trupp"), "trupp");});
test("trüppchen -> truppch", function() {deepEqual( Stem("trüppchen"), "truppch");});
test("truppe -> trupp", function() {deepEqual( Stem("truppe"), "trupp");});
test("truppen -> trupp", function() {deepEqual( Stem("truppen"), "trupp");});
test("trupps -> trupps", function() {deepEqual( Stem("trupps"), "trupps");});
test("trutzig -> trutzig", function() {deepEqual( Stem("trutzig"), "trutzig");});
test("tu -> tu", function() {deepEqual( Stem("tu"), "tu");});
test("tü -> tu", function() {deepEqual( Stem("tü"), "tu");});
test("tubalkain -> tubalkain", function() {deepEqual( Stem("tubalkain"), "tubalkain");});
test("tuch -> tuch", function() {deepEqual( Stem("tuch"), "tuch");});
test("tuche -> tuch", function() {deepEqual( Stem("tuche"), "tuch");});
test("tüchel -> tuchel", function() {deepEqual( Stem("tüchel"), "tuchel");});
test("tücher -> tuch", function() {deepEqual( Stem("tücher"), "tuch");});
test("tuchhose -> tuchhos", function() {deepEqual( Stem("tuchhose"), "tuchhos");});
test("tüchl -> tuchl", function() {deepEqual( Stem("tüchl"), "tuchl");});
test("tüchtig -> tuchtig", function() {deepEqual( Stem("tüchtig"), "tuchtig");});
test("tüchtige -> tuchtig", function() {deepEqual( Stem("tüchtige"), "tuchtig");});
test("tüchtigem -> tuchtig", function() {deepEqual( Stem("tüchtigem"), "tuchtig");});
test("tüchtigen -> tuchtig", function() {deepEqual( Stem("tüchtigen"), "tuchtig");});
test("tüchtiger -> tuchtig", function() {deepEqual( Stem("tüchtiger"), "tuchtig");});
test("tüchtiges -> tuchtig", function() {deepEqual( Stem("tüchtiges"), "tuchtig");});
test("tüchtigkeit -> tuchtig", function() {deepEqual( Stem("tüchtigkeit"), "tuchtig");});
test("tücke -> tuck", function() {deepEqual( Stem("tücke"), "tuck");});
test("tücken -> tuck", function() {deepEqual( Stem("tücken"), "tuck");});
test("tückischer -> tuckisch", function() {deepEqual( Stem("tückischer"), "tuckisch");});
test("tue -> tue", function() {deepEqual( Stem("tue"), "tue");});
test("tuest -> tuest", function() {deepEqual( Stem("tuest"), "tuest");});
test("tüftelte -> tuftelt", function() {deepEqual( Stem("tüftelte"), "tuftelt");});
test("tugend -> tugend", function() {deepEqual( Stem("tugend"), "tugend");});
test("tugenden -> tugend", function() {deepEqual( Stem("tugenden"), "tugend");});
test("tugendgesinnung -> tugendgesinn", function() {deepEqual( Stem("tugendgesinnung"), "tugendgesinn");});
test("tugendhaft -> tugendhaft", function() {deepEqual( Stem("tugendhaft"), "tugendhaft");});
test("tugendhafte -> tugendhaft", function() {deepEqual( Stem("tugendhafte"), "tugendhaft");});
test("tugendhaften -> tugendhaft", function() {deepEqual( Stem("tugendhaften"), "tugendhaft");});
test("tugendhafter -> tugendhaft", function() {deepEqual( Stem("tugendhafter"), "tugendhaft");});
test("tugendhafteste -> tugendhaft", function() {deepEqual( Stem("tugendhafteste"), "tugendhaft");});
test("tugendsame -> tugendsam", function() {deepEqual( Stem("tugendsame"), "tugendsam");});
test("tummel -> tummel", function() {deepEqual( Stem("tummel"), "tummel");});
test("tummelte -> tummelt", function() {deepEqual( Stem("tummelte"), "tummelt");});
test("tümpel -> tumpel", function() {deepEqual( Stem("tümpel"), "tumpel");});
test("tumult -> tumult", function() {deepEqual( Stem("tumult"), "tumult");});
test("tun -> tun", function() {deepEqual( Stem("tun"), "tun");});
test("tünche -> tunch", function() {deepEqual( Stem("tünche"), "tunch");});
test("tünchen -> tunch", function() {deepEqual( Stem("tünchen"), "tunch");});
test("tundra -> tundra", function() {deepEqual( Stem("tundra"), "tundra");});
test("tunika -> tunika", function() {deepEqual( Stem("tunika"), "tunika");});
test("tunlich -> tunlich", function() {deepEqual( Stem("tunlich"), "tunlich");});
test("tunlichkeit -> tunlich", function() {deepEqual( Stem("tunlichkeit"), "tunlich");});
test("tuns -> tun", function() {deepEqual( Stem("tuns"), "tun");});
test("tüp -> tup", function() {deepEqual( Stem("tüp"), "tup");});
test("tür -> tur", function() {deepEqual( Stem("tür"), "tur");});
test("turbane -> turban", function() {deepEqual( Stem("turbane"), "turban");});
test("türe -> tur", function() {deepEqual( Stem("türe"), "tur");});
test("türen -> tur", function() {deepEqual( Stem("türen"), "tur");});
test("türflügel -> turflugel", function() {deepEqual( Stem("türflügel"), "turflugel");});
test("türfüllung -> turfull", function() {deepEqual( Stem("türfüllung"), "turfull");});
test("turin -> turin", function() {deepEqual( Stem("turin"), "turin");});
test("turiner -> turin", function() {deepEqual( Stem("turiner"), "turin");});
test("turkelte -> turkelt", function() {deepEqual( Stem("turkelte"), "turkelt");});
test("türken -> turk", function() {deepEqual( Stem("türken"), "turk");});
test("türkisch -> turkisch", function() {deepEqual( Stem("türkisch"), "turkisch");});
test("türkische -> turkisch", function() {deepEqual( Stem("türkische"), "turkisch");});
test("türkischem -> turkisch", function() {deepEqual( Stem("türkischem"), "turkisch");});
test("türkischen -> turkisch", function() {deepEqual( Stem("türkischen"), "turkisch");});
test("türkischer -> turkisch", function() {deepEqual( Stem("türkischer"), "turkisch");});
test("türklinke -> turklink", function() {deepEqual( Stem("türklinke"), "turklink");});
test("turm -> turm", function() {deepEqual( Stem("turm"), "turm");});
test("turmartigen -> turmart", function() {deepEqual( Stem("turmartigen"), "turmart");});
test("türmchen -> turmch", function() {deepEqual( Stem("türmchen"), "turmch");});
test("turme -> turm", function() {deepEqual( Stem("turme"), "turm");});
test("türme -> turm", function() {deepEqual( Stem("türme"), "turm");});
test("türmen -> turm", function() {deepEqual( Stem("türmen"), "turm");});
test("turmknöpfe -> turmknopf", function() {deepEqual( Stem("turmknöpfe"), "turmknopf");});
test("turmstube -> turmstub", function() {deepEqual( Stem("turmstube"), "turmstub");});
test("türmte -> turmt", function() {deepEqual( Stem("türmte"), "turmt");});
test("turmuhr -> turmuhr", function() {deepEqual( Stem("turmuhr"), "turmuhr");});
test("turnübung -> turnub", function() {deepEqual( Stem("turnübung"), "turnub");});
test("türöffner -> turoffn", function() {deepEqual( Stem("türöffner"), "turoffn");});
test("türöffners -> turoffn", function() {deepEqual( Stem("türöffners"), "turoffn");});
test("türschloss -> turschloss", function() {deepEqual( Stem("türschloss"), "turschloss");});
test("türseite -> turseit", function() {deepEqual( Stem("türseite"), "turseit");});
test("turteltäubchen -> turteltaubch", function() {deepEqual( Stem("turteltäubchen"), "turteltaubch");});
test("turteltauben -> turteltaub", function() {deepEqual( Stem("turteltauben"), "turteltaub");});
test("tuscheln -> tuscheln", function() {deepEqual( Stem("tuscheln"), "tuscheln");});
test("tust -> tust", function() {deepEqual( Stem("tust"), "tust");});
test("tut -> tut", function() {deepEqual( Stem("tut"), "tut");});
test("tvn -> tvn", function() {deepEqual( Stem("tvn"), "tvn");});
test("typen -> typ", function() {deepEqual( Stem("typen"), "typ");});
test("typik -> typik", function() {deepEqual( Stem("typik"), "typik");});
test("typisches -> typisch", function() {deepEqual( Stem("typisches"), "typisch");});
test("typus -> typus", function() {deepEqual( Stem("typus"), "typus");});
test("tyrannei -> tyrannei", function() {deepEqual( Stem("tyrannei"), "tyrannei");});
test("tyrannen -> tyrann", function() {deepEqual( Stem("tyrannen"), "tyrann");});
test("tyrus -> tyrus", function() {deepEqual( Stem("tyrus"), "tyrus");});
test("u -> u", function() {deepEqual( Stem("u"), "u");});
test("uax -> uax", function() {deepEqual( Stem("uax"), "uax");});
test("üb -> ub", function() {deepEqual( Stem("üb"), "ub");});
test("übel -> ubel", function() {deepEqual( Stem("übel"), "ubel");});
test("übelgenommen -> ubelgenomm", function() {deepEqual( Stem("übelgenommen"), "ubelgenomm");});
test("übelgeruch -> ubelgeruch", function() {deepEqual( Stem("übelgeruch"), "ubelgeruch");});
test("übelgerüche -> ubelgeruch", function() {deepEqual( Stem("übelgerüche"), "ubelgeruch");});
test("übelklänge -> ubelklang", function() {deepEqual( Stem("übelklänge"), "ubelklang");});
test("übeln -> ubeln", function() {deepEqual( Stem("übeln"), "ubeln");});
test("übels -> ubel", function() {deepEqual( Stem("übels"), "ubel");});
test("übeltäter -> ubeltat", function() {deepEqual( Stem("übeltäter"), "ubeltat");});
test("übeltun -> ubeltun", function() {deepEqual( Stem("übeltun"), "ubeltun");});
test("übelwollend -> ubelwoll", function() {deepEqual( Stem("übelwollend"), "ubelwoll");});
test("übelzunehmen -> ubelzunehm", function() {deepEqual( Stem("übelzunehmen"), "ubelzunehm");});
test("üben -> uben", function() {deepEqual( Stem("üben"), "uben");});
test("über -> uber", function() {deepEqual( Stem("über"), "uber");});
test("uberall -> uberall", function() {deepEqual( Stem("uberall"), "uberall");});
test("überall -> uberall", function() {deepEqual( Stem("überall"), "uberall");});
test("überallhin -> uberallhin", function() {deepEqual( Stem("überallhin"), "uberallhin");});
test("überaus -> uberaus", function() {deepEqual( Stem("überaus"), "uberaus");});
test("überbelegt -> uberbelegt", function() {deepEqual( Stem("überbelegt"), "uberbelegt");});
test("überbieten -> uberbiet", function() {deepEqual( Stem("überbieten"), "uberbiet");});
test("überbleibsel -> uberbleibsel", function() {deepEqual( Stem("überbleibsel"), "uberbleibsel");});
test("überbleibseln -> uberbleibseln", function() {deepEqual( Stem("überbleibseln"), "uberbleibseln");});
test("überbleibsels -> uberbleibsel", function() {deepEqual( Stem("überbleibsels"), "uberbleibsel");});
test("überblick -> uberblick", function() {deepEqual( Stem("überblick"), "uberblick");});
test("überbot -> uberbot", function() {deepEqual( Stem("überbot"), "uberbot");});
test("überboten -> uberbot", function() {deepEqual( Stem("überboten"), "uberbot");});
test("überbracht -> uberbracht", function() {deepEqual( Stem("überbracht"), "uberbracht");});
test("überbrachte -> uberbracht", function() {deepEqual( Stem("überbrachte"), "uberbracht");});
test("überbringen -> uberbring", function() {deepEqual( Stem("überbringen"), "uberbring");});
test("überbringenden -> uberbring", function() {deepEqual( Stem("überbringenden"), "uberbring");});
test("überbringer -> uberbring", function() {deepEqual( Stem("überbringer"), "uberbring");});
test("überdachte -> uberdacht", function() {deepEqual( Stem("überdachte"), "uberdacht");});
test("überdachten -> uberdacht", function() {deepEqual( Stem("überdachten"), "uberdacht");});
test("überdeckt -> uberdeckt", function() {deepEqual( Stem("überdeckt"), "uberdeckt");});
test("überdem -> uberd", function() {deepEqual( Stem("überdem"), "uberd");});
test("überdies -> uberdi", function() {deepEqual( Stem("überdies"), "uberdi");});
test("überdimensionalen -> uberdimensional", function() {deepEqual( Stem("überdimensionalen"), "uberdimensional");});
test("überdruss -> uberdruss", function() {deepEqual( Stem("überdruss"), "uberdruss");});
test("überdruß -> uberdruss", function() {deepEqual( Stem("überdruß"), "uberdruss");});
test("überdrusses -> uberdruss", function() {deepEqual( Stem("überdrusses"), "uberdruss");});
test("überdrüssig -> uberdruss", function() {deepEqual( Stem("überdrüssig"), "uberdruss");});
test("übereilen -> ubereil", function() {deepEqual( Stem("übereilen"), "ubereil");});
test("übereilung -> ubereil", function() {deepEqual( Stem("übereilung"), "ubereil");});
test("überein -> uberein", function() {deepEqual( Stem("überein"), "uberein");});
test("übereinand -> ubereinand", function() {deepEqual( Stem("übereinand"), "ubereinand");});
test("übereinander -> ubereinand", function() {deepEqual( Stem("übereinander"), "ubereinand");});
test("übereinandergestellten -> ubereinandergestellt", function() {deepEqual( Stem("übereinandergestellten"), "ubereinandergestellt");});
test("übereinstimmen -> ubereinstimm", function() {deepEqual( Stem("übereinstimmen"), "ubereinstimm");});
test("übereinstimmende -> ubereinstimm", function() {deepEqual( Stem("übereinstimmende"), "ubereinstimm");});
test("übereinstimmt -> ubereinstimmt", function() {deepEqual( Stem("übereinstimmt"), "ubereinstimmt");});
test("übereinstimmte -> ubereinstimmt", function() {deepEqual( Stem("übereinstimmte"), "ubereinstimmt");});
test("übereinstimmung -> ubereinstimm", function() {deepEqual( Stem("übereinstimmung"), "ubereinstimm");});
test("übereinstimmungen -> ubereinstimm", function() {deepEqual( Stem("übereinstimmungen"), "ubereinstimm");});
test("übereinwirkten -> ubereinwirkt", function() {deepEqual( Stem("übereinwirkten"), "ubereinwirkt");});
test("übereinzustimmen -> ubereinzustimm", function() {deepEqual( Stem("übereinzustimmen"), "ubereinzustimm");});
test("überempfindlich -> uberempfind", function() {deepEqual( Stem("überempfindlich"), "uberempfind");});
test("überfahren -> uberfahr", function() {deepEqual( Stem("überfahren"), "uberfahr");});
test("überfall -> uberfall", function() {deepEqual( Stem("überfall"), "uberfall");});
test("überfalle -> uberfall", function() {deepEqual( Stem("überfalle"), "uberfall");});
test("überfallen -> uberfall", function() {deepEqual( Stem("überfallen"), "uberfall");});
test("überfein -> uberfein", function() {deepEqual( Stem("überfein"), "uberfein");});
test("überfiel -> uberfiel", function() {deepEqual( Stem("überfiel"), "uberfiel");});
test("überfliessendes -> uberfliess", function() {deepEqual( Stem("überfliessendes"), "uberfliess");});
test("überfließendes -> uberfliess", function() {deepEqual( Stem("überfließendes"), "uberfliess");});
test("überflog -> uberflog", function() {deepEqual( Stem("überflog"), "uberflog");});
test("überfloss -> uberfloss", function() {deepEqual( Stem("überfloss"), "uberfloss");});
test("überflügeln -> uberflugeln", function() {deepEqual( Stem("überflügeln"), "uberflugeln");});
test("überfluss -> uberfluss", function() {deepEqual( Stem("überfluss"), "uberfluss");});
test("überfluß -> uberfluss", function() {deepEqual( Stem("überfluß"), "uberfluss");});
test("überflusse -> uberfluss", function() {deepEqual( Stem("überflusse"), "uberfluss");});
test("überflüssig -> uberfluss", function() {deepEqual( Stem("überflüssig"), "uberfluss");});
test("überflüssige -> uberfluss", function() {deepEqual( Stem("überflüssige"), "uberfluss");});
test("überflüssigkeit -> uberfluss", function() {deepEqual( Stem("überflüssigkeit"), "uberfluss");});
test("überfluten -> uberflut", function() {deepEqual( Stem("überfluten"), "uberflut");});
test("überflutenden -> uberflut", function() {deepEqual( Stem("überflutenden"), "uberflut");});
test("überflutender -> uberflut", function() {deepEqual( Stem("überflutender"), "uberflut");});
test("überflutung -> uberflut", function() {deepEqual( Stem("überflutung"), "uberflut");});
test("überfordern -> uberford", function() {deepEqual( Stem("überfordern"), "uberford");});
test("überfüllten -> uberfullt", function() {deepEqual( Stem("überfüllten"), "uberfullt");});
test("übergab -> ubergab", function() {deepEqual( Stem("übergab"), "ubergab");});
test("übergang -> ubergang", function() {deepEqual( Stem("übergang"), "ubergang");});
test("übergange -> ubergang", function() {deepEqual( Stem("übergange"), "ubergang");});
test("übergänge -> ubergang", function() {deepEqual( Stem("übergänge"), "ubergang");});
test("übergangsdomizil -> ubergangsdomizil", function() {deepEqual( Stem("übergangsdomizil"), "ubergangsdomizil");});
test("übergangsphase -> ubergangsphas", function() {deepEqual( Stem("übergangsphase"), "ubergangsphas");});
test("übergeben -> ubergeb", function() {deepEqual( Stem("übergeben"), "ubergeb");});
test("übergegangen -> ubergegang", function() {deepEqual( Stem("übergegangen"), "ubergegang");});
test("übergehen -> ubergeh", function() {deepEqual( Stem("übergehen"), "ubergeh");});
test("übergeht -> ubergeht", function() {deepEqual( Stem("übergeht"), "ubergeht");});
test("übergeleitet -> ubergeleitet", function() {deepEqual( Stem("übergeleitet"), "ubergeleitet");});
test("übergeordneten -> ubergeordnet", function() {deepEqual( Stem("übergeordneten"), "ubergeordnet");});
test("übergepanscht -> ubergepanscht", function() {deepEqual( Stem("übergepanscht"), "ubergepanscht");});
test("übergepflanzt -> ubergepflanzt", function() {deepEqual( Stem("übergepflanzt"), "ubergepflanzt");});
test("übergeschnappt -> ubergeschnappt", function() {deepEqual( Stem("übergeschnappt"), "ubergeschnappt");});
test("übergewicht -> ubergewicht", function() {deepEqual( Stem("übergewicht"), "ubergewicht");});
test("übergingen -> uberging", function() {deepEqual( Stem("übergingen"), "uberging");});
test("überglücklich -> ubergluck", function() {deepEqual( Stem("überglücklich"), "ubergluck");});
test("übergossen -> ubergoss", function() {deepEqual( Stem("übergossen"), "ubergoss");});
test("übergossenen -> ubergoss", function() {deepEqual( Stem("übergossenen"), "ubergoss");});
test("übergriffe -> ubergriff", function() {deepEqual( Stem("übergriffe"), "ubergriff");});
test("übergrosse -> ubergross", function() {deepEqual( Stem("übergrosse"), "ubergross");});
test("übergrünten -> ubergrunt", function() {deepEqual( Stem("übergrünten"), "ubergrunt");});
test("überhasten -> uberhast", function() {deepEqual( Stem("überhasten"), "uberhast");});
test("überhäuft -> uberhauft", function() {deepEqual( Stem("überhäuft"), "uberhauft");});
test("überhäufte -> uberhauft", function() {deepEqual( Stem("überhäufte"), "uberhauft");});
test("überhaupt -> uberhaupt", function() {deepEqual( Stem("überhaupt"), "uberhaupt");});
test("überheben -> uberheb", function() {deepEqual( Stem("überheben"), "uberheb");});
test("überhebung -> uberheb", function() {deepEqual( Stem("überhebung"), "uberheb");});
test("überholte -> uberholt", function() {deepEqual( Stem("überholte"), "uberholt");});
test("überholten -> uberholt", function() {deepEqual( Stem("überholten"), "uberholt");});
test("überhöre -> uberhor", function() {deepEqual( Stem("überhöre"), "uberhor");});
test("überhören -> uberhor", function() {deepEqual( Stem("überhören"), "uberhor");});
test("überhört -> uberhort", function() {deepEqual( Stem("überhört"), "uberhort");});
test("überhörte -> uberhort", function() {deepEqual( Stem("überhörte"), "uberhort");});
test("überhuschten -> uberhuscht", function() {deepEqual( Stem("überhuschten"), "uberhuscht");});
test("überkam -> uberkam", function() {deepEqual( Stem("überkam"), "uberkam");});
test("überkamen -> uberkam", function() {deepEqual( Stem("überkamen"), "uberkam");});
test("überkollerte -> uberkollert", function() {deepEqual( Stem("überkollerte"), "uberkollert");});
test("überkommen -> uberkomm", function() {deepEqual( Stem("überkommen"), "uberkomm");});
test("überlagerung -> uberlager", function() {deepEqual( Stem("überlagerung"), "uberlager");});
test("überlasse -> uberlass", function() {deepEqual( Stem("überlasse"), "uberlass");});
test("überlassen -> uberlass", function() {deepEqual( Stem("überlassen"), "uberlass");});
test("überlasset -> uberlasset", function() {deepEqual( Stem("überlasset"), "uberlasset");});
test("überlasst -> uberlasst", function() {deepEqual( Stem("überlasst"), "uberlasst");});
test("überlässt -> uberlasst", function() {deepEqual( Stem("überlässt"), "uberlasst");});
test("überläßt -> uberlasst", function() {deepEqual( Stem("überläßt"), "uberlasst");});
test("überlaufenem -> uberlauf", function() {deepEqual( Stem("überlaufenem"), "uberlauf");});
test("überlaufenes -> uberlauf", function() {deepEqual( Stem("überlaufenes"), "uberlauf");});
test("überleben -> uberleb", function() {deepEqual( Stem("überleben"), "uberleb");});
test("überlebenstechnischen -> uberlebenstechn", function() {deepEqual( Stem("überlebenstechnischen"), "uberlebenstechn");});
test("überlebt -> uberlebt", function() {deepEqual( Stem("überlebt"), "uberlebt");});
test("überleg -> uberleg", function() {deepEqual( Stem("überleg"), "uberleg");});
test("überlegen -> uberleg", function() {deepEqual( Stem("überlegen"), "uberleg");});
test("überlegend -> uberleg", function() {deepEqual( Stem("überlegend"), "uberleg");});
test("überlegene -> uberleg", function() {deepEqual( Stem("überlegene"), "uberleg");});
test("überlegenheit -> uberleg", function() {deepEqual( Stem("überlegenheit"), "uberleg");});
test("überlegt -> uberlegt", function() {deepEqual( Stem("überlegt"), "uberlegt");});
test("überlegte -> uberlegt", function() {deepEqual( Stem("überlegte"), "uberlegt");});
test("überlegten -> uberlegt", function() {deepEqual( Stem("überlegten"), "uberlegt");});
test("überlegung -> uberleg", function() {deepEqual( Stem("überlegung"), "uberleg");});
test("überlegungen -> uberleg", function() {deepEqual( Stem("überlegungen"), "uberleg");});
test("überlieferungen -> uberliefer", function() {deepEqual( Stem("überlieferungen"), "uberliefer");});
test("überliess -> uberliess", function() {deepEqual( Stem("überliess"), "uberliess");});
test("überließ -> uberliess", function() {deepEqual( Stem("überließ"), "uberliess");});
test("überliesse -> uberliess", function() {deepEqual( Stem("überliesse"), "uberliess");});
test("überliessen -> uberliess", function() {deepEqual( Stem("überliessen"), "uberliess");});
test("überlistet -> uberlistet", function() {deepEqual( Stem("überlistet"), "uberlistet");});
test("überlud -> uberlud", function() {deepEqual( Stem("überlud"), "uberlud");});
test("überm -> uberm", function() {deepEqual( Stem("überm"), "uberm");});
test("übermacht -> ubermacht", function() {deepEqual( Stem("übermacht"), "ubermacht");});
test("übermächtigen -> ubermacht", function() {deepEqual( Stem("übermächtigen"), "ubermacht");});
test("übermannt -> ubermannt", function() {deepEqual( Stem("übermannt"), "ubermannt");});
test("übermässig -> ubermass", function() {deepEqual( Stem("übermässig"), "ubermass");});
test("übermäßig -> ubermass", function() {deepEqual( Stem("übermäßig"), "ubermass");});
test("übermorgen -> ubermorg", function() {deepEqual( Stem("übermorgen"), "ubermorg");});
test("übermüdet -> ubermudet", function() {deepEqual( Stem("übermüdet"), "ubermudet");});
test("übermüdeten -> ubermudet", function() {deepEqual( Stem("übermüdeten"), "ubermudet");});
test("übermut -> ubermut", function() {deepEqual( Stem("übermut"), "ubermut");});
test("übermütig -> ubermut", function() {deepEqual( Stem("übermütig"), "ubermut");});
test("übermütige -> ubermut", function() {deepEqual( Stem("übermütige"), "ubermut");});
test("übermütigem -> ubermut", function() {deepEqual( Stem("übermütigem"), "ubermut");});
test("übermütigen -> ubermut", function() {deepEqual( Stem("übermütigen"), "ubermut");});
test("übermütiger -> ubermut", function() {deepEqual( Stem("übermütiger"), "ubermut");});
test("übernachten -> ubernacht", function() {deepEqual( Stem("übernachten"), "ubernacht");});
test("übernahm -> ubernahm", function() {deepEqual( Stem("übernahm"), "ubernahm");});
test("übernamen -> ubernam", function() {deepEqual( Stem("übernamen"), "ubernam");});
test("übernehmen -> ubernehm", function() {deepEqual( Stem("übernehmen"), "ubernehm");});
test("übernimmt -> ubernimmt", function() {deepEqual( Stem("übernimmt"), "ubernimmt");});
test("übernommen -> ubernomm", function() {deepEqual( Stem("übernommen"), "ubernomm");});
test("überparteiliche -> uberpartei", function() {deepEqual( Stem("überparteiliche"), "uberpartei");});
test("überprüfe -> uberpruf", function() {deepEqual( Stem("überprüfe"), "uberpruf");});
test("überprüfen -> uberpruf", function() {deepEqual( Stem("überprüfen"), "uberpruf");});
test("überquer -> uberqu", function() {deepEqual( Stem("überquer"), "uberqu");});
test("überquert -> uberquert", function() {deepEqual( Stem("überquert"), "uberquert");});
test("überragte -> uberragt", function() {deepEqual( Stem("überragte"), "uberragt");});
test("überrasche -> uberrasch", function() {deepEqual( Stem("überrasche"), "uberrasch");});
test("überraschen -> uberrasch", function() {deepEqual( Stem("überraschen"), "uberrasch");});
test("überraschend -> uberrasch", function() {deepEqual( Stem("überraschend"), "uberrasch");});
test("überraschenden -> uberrasch", function() {deepEqual( Stem("überraschenden"), "uberrasch");});
test("überraschenderweise -> uberraschenderweis", function() {deepEqual( Stem("überraschenderweise"), "uberraschenderweis");});
test("überrascht -> uberrascht", function() {deepEqual( Stem("überrascht"), "uberrascht");});
test("überraschte -> uberrascht", function() {deepEqual( Stem("überraschte"), "uberrascht");});
test("überraschten -> uberrascht", function() {deepEqual( Stem("überraschten"), "uberrascht");});
test("überraschung -> uberrasch", function() {deepEqual( Stem("überraschung"), "uberrasch");});
test("überreden -> uberred", function() {deepEqual( Stem("überreden"), "uberred");});
test("überredet -> uberredet", function() {deepEqual( Stem("überredet"), "uberredet");});
test("überredung -> uberred", function() {deepEqual( Stem("überredung"), "uberred");});
test("überredungen -> uberred", function() {deepEqual( Stem("überredungen"), "uberred");});
test("überredungsgiften -> uberredungsgift", function() {deepEqual( Stem("überredungsgiften"), "uberredungsgift");});
test("überreichen -> uberreich", function() {deepEqual( Stem("überreichen"), "uberreich");});
test("überreicht -> uberreicht", function() {deepEqual( Stem("überreicht"), "uberreicht");});
test("überreizung -> uberreiz", function() {deepEqual( Stem("überreizung"), "uberreiz");});
test("überrest -> uberr", function() {deepEqual( Stem("überrest"), "uberr");});
test("überreste -> uberr", function() {deepEqual( Stem("überreste"), "uberr");});
test("überresten -> uberr", function() {deepEqual( Stem("überresten"), "uberr");});
test("überrock -> uberrock", function() {deepEqual( Stem("überrock"), "uberrock");});
test("überrocks -> uberrock", function() {deepEqual( Stem("überrocks"), "uberrock");});
test("überrumpeln -> uberrumpeln", function() {deepEqual( Stem("überrumpeln"), "uberrumpeln");});
test("übers -> uber", function() {deepEqual( Stem("übers"), "uber");});
test("übersäete -> ubersaet", function() {deepEqual( Stem("übersäete"), "ubersaet");});
test("übersandt -> ubersandt", function() {deepEqual( Stem("übersandt"), "ubersandt");});
test("übersät -> ubersat", function() {deepEqual( Stem("übersät"), "ubersat");});
test("überschattet -> uberschattet", function() {deepEqual( Stem("überschattet"), "uberschattet");});
test("überschatteten -> uberschattet", function() {deepEqual( Stem("überschatteten"), "uberschattet");});
test("überschätzt -> uberschatzt", function() {deepEqual( Stem("überschätzt"), "uberschatzt");});
test("überschauen -> uberschau", function() {deepEqual( Stem("überschauen"), "uberschau");});
test("überschauend -> uberschau", function() {deepEqual( Stem("überschauend"), "uberschau");});
test("überschaute -> uberschaut", function() {deepEqual( Stem("überschaute"), "uberschaut");});
test("überschigg -> uberschigg", function() {deepEqual( Stem("überschigg"), "uberschigg");});
test("überschlagend -> uberschlag", function() {deepEqual( Stem("überschlagend"), "uberschlag");});
test("überschlug -> uberschlug", function() {deepEqual( Stem("überschlug"), "uberschlug");});
test("überschreiten -> uberschreit", function() {deepEqual( Stem("überschreiten"), "uberschreit");});
test("überschrieben -> uberschrieb", function() {deepEqual( Stem("überschrieben"), "uberschrieb");});
test("überschrift -> uberschrift", function() {deepEqual( Stem("überschrift"), "uberschrift");});
test("überschriften -> uberschrift", function() {deepEqual( Stem("überschriften"), "uberschrift");});
test("überschritten -> uberschritt", function() {deepEqual( Stem("überschritten"), "uberschritt");});
test("überschwemmt -> uberschwemmt", function() {deepEqual( Stem("überschwemmt"), "uberschwemmt");});
test("überschwemmung -> uberschwemm", function() {deepEqual( Stem("überschwemmung"), "uberschwemm");});
test("überschwemmungen -> uberschwemm", function() {deepEqual( Stem("überschwemmungen"), "uberschwemm");});
test("überschwenglich -> uberschweng", function() {deepEqual( Stem("überschwenglich"), "uberschweng");});
test("überschwengliche -> uberschweng", function() {deepEqual( Stem("überschwengliche"), "uberschweng");});
test("überschwenglichen -> uberschweng", function() {deepEqual( Stem("überschwenglichen"), "uberschweng");});
test("überschwengliches -> uberschweng", function() {deepEqual( Stem("überschwengliches"), "uberschweng");});
test("übersee -> uberse", function() {deepEqual( Stem("übersee"), "uberse");});
test("übersehbaren -> ubersehbar", function() {deepEqual( Stem("übersehbaren"), "ubersehbar");});
test("übersehen -> uberseh", function() {deepEqual( Stem("übersehen"), "uberseh");});
test("übersehenden -> uberseh", function() {deepEqual( Stem("übersehenden"), "uberseh");});
test("übersetzen -> ubersetz", function() {deepEqual( Stem("übersetzen"), "ubersetz");});
test("übersetzt -> ubersetzt", function() {deepEqual( Stem("übersetzt"), "ubersetzt");});
test("übersetzte -> ubersetzt", function() {deepEqual( Stem("übersetzte"), "ubersetzt");});
test("übersetzung -> ubersetz", function() {deepEqual( Stem("übersetzung"), "ubersetz");});
test("übersiedeln -> ubersiedeln", function() {deepEqual( Stem("übersiedeln"), "ubersiedeln");});
test("übersiedelt -> ubersiedelt", function() {deepEqual( Stem("übersiedelt"), "ubersiedelt");});
test("übersiedelte -> ubersiedelt", function() {deepEqual( Stem("übersiedelte"), "ubersiedelt");});
test("übersiedelten -> ubersiedelt", function() {deepEqual( Stem("übersiedelten"), "ubersiedelt");});
test("übersiedlung -> ubersiedl", function() {deepEqual( Stem("übersiedlung"), "ubersiedl");});
test("übersinnlich -> ubersinn", function() {deepEqual( Stem("übersinnlich"), "ubersinn");});
test("übersinnliche -> ubersinn", function() {deepEqual( Stem("übersinnliche"), "ubersinn");});
test("übersinnlichen -> ubersinn", function() {deepEqual( Stem("übersinnlichen"), "ubersinn");});
test("übersinnlicher -> ubersinn", function() {deepEqual( Stem("übersinnlicher"), "ubersinn");});
test("übersinnliches -> ubersinn", function() {deepEqual( Stem("übersinnliches"), "ubersinn");});
test("überspannt -> uberspannt", function() {deepEqual( Stem("überspannt"), "uberspannt");});
test("übersponnen -> ubersponn", function() {deepEqual( Stem("übersponnen"), "ubersponn");});
test("übersprang -> ubersprang", function() {deepEqual( Stem("übersprang"), "ubersprang");});
test("überstanden -> uberstand", function() {deepEqual( Stem("überstanden"), "uberstand");});
test("überstehen -> ubersteh", function() {deepEqual( Stem("überstehen"), "ubersteh");});
test("übersteigt -> ubersteigt", function() {deepEqual( Stem("übersteigt"), "ubersteigt");});
test("überstieg -> uberstieg", function() {deepEqual( Stem("überstieg"), "uberstieg");});
test("überstiegen -> uberstieg", function() {deepEqual( Stem("überstiegen"), "uberstieg");});
test("überstrapaziert -> uberstrapaziert", function() {deepEqual( Stem("überstrapaziert"), "uberstrapaziert");});
test("überstrichen -> uberstrich", function() {deepEqual( Stem("überstrichen"), "uberstrich");});
test("überströmendem -> uberstrom", function() {deepEqual( Stem("überströmendem"), "uberstrom");});
test("überströmender -> uberstrom", function() {deepEqual( Stem("überströmender"), "uberstrom");});
test("überstürzend -> ubersturz", function() {deepEqual( Stem("überstürzend"), "ubersturz");});
test("übertönen -> uberton", function() {deepEqual( Stem("übertönen"), "uberton");});
test("übertrage -> ubertrag", function() {deepEqual( Stem("übertrage"), "ubertrag");});
test("übertragen -> ubertrag", function() {deepEqual( Stem("übertragen"), "ubertrag");});
test("übertragenen -> ubertrag", function() {deepEqual( Stem("übertragenen"), "ubertrag");});
test("übertreibe -> ubertreib", function() {deepEqual( Stem("übertreibe"), "ubertreib");});
test("übertreiben -> ubertreib", function() {deepEqual( Stem("übertreiben"), "ubertreib");});
test("übertreibungen -> ubertreib", function() {deepEqual( Stem("übertreibungen"), "ubertreib");});
test("übertreten -> ubertret", function() {deepEqual( Stem("übertreten"), "ubertret");});
test("übertretung -> ubertret", function() {deepEqual( Stem("übertretung"), "ubertret");});
test("übertretungen -> ubertret", function() {deepEqual( Stem("übertretungen"), "ubertret");});
test("übertrieb -> ubertrieb", function() {deepEqual( Stem("übertrieb"), "ubertrieb");});
test("übertrieben -> ubertrieb", function() {deepEqual( Stem("übertrieben"), "ubertrieb");});
test("übertriebener -> ubertrieb", function() {deepEqual( Stem("übertriebener"), "ubertrieb");});
test("übertrifft -> ubertrifft", function() {deepEqual( Stem("übertrifft"), "ubertrifft");});
test("übertroffen -> ubertroff", function() {deepEqual( Stem("übertroffen"), "ubertroff");});
test("überverdienstlicher -> uberverdienst", function() {deepEqual( Stem("überverdienstlicher"), "uberverdienst");});
test("übervölkert -> ubervolkert", function() {deepEqual( Stem("übervölkert"), "ubervolkert");});
test("übervorteilen -> ubervorteil", function() {deepEqual( Stem("übervorteilen"), "ubervorteil");});
test("übervorteilend -> ubervorteil", function() {deepEqual( Stem("übervorteilend"), "ubervorteil");});
test("überwachen -> uberwach", function() {deepEqual( Stem("überwachen"), "uberwach");});
test("überwachsen -> uberwachs", function() {deepEqual( Stem("überwachsen"), "uberwachs");});
test("überwacht -> uberwacht", function() {deepEqual( Stem("überwacht"), "uberwacht");});
test("überwachte -> uberwacht", function() {deepEqual( Stem("überwachte"), "uberwacht");});
test("überwachung -> uberwach", function() {deepEqual( Stem("überwachung"), "uberwach");});
test("überwältigen -> uberwalt", function() {deepEqual( Stem("überwältigen"), "uberwalt");});
test("überwältigt -> uberwaltigt", function() {deepEqual( Stem("überwältigt"), "uberwaltigt");});
test("überwand -> uberwand", function() {deepEqual( Stem("überwand"), "uberwand");});
test("überweisen -> uberweis", function() {deepEqual( Stem("überweisen"), "uberweis");});
test("überwiegend -> uberwieg", function() {deepEqual( Stem("überwiegend"), "uberwieg");});
test("überwiegender -> uberwieg", function() {deepEqual( Stem("überwiegender"), "uberwieg");});
test("überwiegt -> uberwiegt", function() {deepEqual( Stem("überwiegt"), "uberwiegt");});
test("überwies -> uberwi", function() {deepEqual( Stem("überwies"), "uberwi");});
test("überwiesen -> uberwies", function() {deepEqual( Stem("überwiesen"), "uberwies");});
test("überwinden -> uberwind", function() {deepEqual( Stem("überwinden"), "uberwind");});
test("überwinder -> uberwind", function() {deepEqual( Stem("überwinder"), "uberwind");});
test("überwindet -> uberwindet", function() {deepEqual( Stem("überwindet"), "uberwindet");});
test("überwindung -> uberwind", function() {deepEqual( Stem("überwindung"), "uberwind");});
test("überwog -> uberwog", function() {deepEqual( Stem("überwog"), "uberwog");});
test("überworfen -> uberworf", function() {deepEqual( Stem("überworfen"), "uberworf");});
test("überwuchert -> uberwuchert", function() {deepEqual( Stem("überwuchert"), "uberwuchert");});
test("überwucherte -> uberwuchert", function() {deepEqual( Stem("überwucherte"), "uberwuchert");});
test("überwunden -> uberwund", function() {deepEqual( Stem("überwunden"), "uberwund");});
test("überwundener -> uberwund", function() {deepEqual( Stem("überwundener"), "uberwund");});
test("überzeuge -> uberzeug", function() {deepEqual( Stem("überzeuge"), "uberzeug");});
test("überzeugen -> uberzeug", function() {deepEqual( Stem("überzeugen"), "uberzeug");});
test("überzeugend -> uberzeug", function() {deepEqual( Stem("überzeugend"), "uberzeug");});
test("überzeugende -> uberzeug", function() {deepEqual( Stem("überzeugende"), "uberzeug");});
test("überzeugt -> uberzeugt", function() {deepEqual( Stem("überzeugt"), "uberzeugt");});
test("überzeugte -> uberzeugt", function() {deepEqual( Stem("überzeugte"), "uberzeugt");});
test("überzeugten -> uberzeugt", function() {deepEqual( Stem("überzeugten"), "uberzeugt");});
test("überzeugung -> uberzeug", function() {deepEqual( Stem("überzeugung"), "uberzeug");});
test("überzeugungen -> uberzeug", function() {deepEqual( Stem("überzeugungen"), "uberzeug");});
test("überzieht -> uberzieht", function() {deepEqual( Stem("überzieht"), "uberzieht");});
test("überzogen -> uberzog", function() {deepEqual( Stem("überzogen"), "uberzog");});
test("überzogenen -> uberzog", function() {deepEqual( Stem("überzogenen"), "uberzog");});
test("überzuspringen -> uberzuspring", function() {deepEqual( Stem("überzuspringen"), "uberzuspring");});
test("übet -> ubet", function() {deepEqual( Stem("übet"), "ubet");});
test("üble -> ubl", function() {deepEqual( Stem("üble"), "ubl");});
test("üblen -> ubl", function() {deepEqual( Stem("üblen"), "ubl");});
test("übler -> ubl", function() {deepEqual( Stem("übler"), "ubl");});
test("übles -> ubl", function() {deepEqual( Stem("übles"), "ubl");});
test("üblich -> ublich", function() {deepEqual( Stem("üblich"), "ublich");});
test("übliche -> ublich", function() {deepEqual( Stem("übliche"), "ublich");});
test("übrig -> ubrig", function() {deepEqual( Stem("übrig"), "ubrig");});
test("übrigbleiben -> ubrigbleib", function() {deepEqual( Stem("übrigbleiben"), "ubrigbleib");});
test("übrigbleibt -> ubrigbleibt", function() {deepEqual( Stem("übrigbleibt"), "ubrigbleibt");});
test("übrigblieb -> ubrigblieb", function() {deepEqual( Stem("übrigblieb"), "ubrigblieb");});
test("übrigblieben -> ubrigblieb", function() {deepEqual( Stem("übrigblieben"), "ubrigblieb");});
test("übrige -> ubrig", function() {deepEqual( Stem("übrige"), "ubrig");});
test("übrigen -> ubrig", function() {deepEqual( Stem("übrigen"), "ubrig");});
test("übrigens -> ubrig", function() {deepEqual( Stem("übrigens"), "ubrig");});
test("übriger -> ubrig", function() {deepEqual( Stem("übriger"), "ubrig");});
test("übriges -> ubrig", function() {deepEqual( Stem("übriges"), "ubrig");});
test("übriggeblieben -> ubriggeblieb", function() {deepEqual( Stem("übriggeblieben"), "ubriggeblieb");});
test("übriggebliebene -> ubriggeblieb", function() {deepEqual( Stem("übriggebliebene"), "ubriggeblieb");});
test("übriggebliebenen -> ubriggeblieb", function() {deepEqual( Stem("übriggebliebenen"), "ubriggeblieb");});
test("übriggelassen -> ubriggelass", function() {deepEqual( Stem("übriggelassen"), "ubriggelass");});
test("übriglassen -> ubriglass", function() {deepEqual( Stem("übriglassen"), "ubriglass");});
test("übriglasset -> ubriglasset", function() {deepEqual( Stem("übriglasset"), "ubriglasset");});
test("übriglässt -> ubriglasst", function() {deepEqual( Stem("übriglässt"), "ubriglasst");});
test("übt -> ubt", function() {deepEqual( Stem("übt"), "ubt");});
test("übte -> ubt", function() {deepEqual( Stem("übte"), "ubt");});
test("übung -> ubung", function() {deepEqual( Stem("übung"), "ubung");});
test("übungen -> ubung", function() {deepEqual( Stem("übungen"), "ubung");});
test("uchtenhagen -> uchtenhag", function() {deepEqual( Stem("uchtenhagen"), "uchtenhag");});
test("uf -> uf", function() {deepEqual( Stem("uf"), "uf");});
test("ufer -> ufer", function() {deepEqual( Stem("ufer"), "ufer");});
test("uferloche -> uferloch", function() {deepEqual( Stem("uferloche"), "uferloch");});
test("ufern -> ufern", function() {deepEqual( Stem("ufern"), "ufern");});
test("ufers -> ufer", function() {deepEqual( Stem("ufers"), "ufer");});
test("uff -> uff", function() {deepEqual( Stem("uff"), "uff");});
test("ufhangen -> ufhang", function() {deepEqual( Stem("ufhangen"), "ufhang");});
test("ugelassen -> ugelass", function() {deepEqual( Stem("ugelassen"), "ugelass");});
test("uhr -> uhr", function() {deepEqual( Stem("uhr"), "uhr");});
test("uhren -> uhr", function() {deepEqual( Stem("uhren"), "uhr");});
test("uhrenmacher -> uhrenmach", function() {deepEqual( Stem("uhrenmacher"), "uhrenmach");});
test("uhrfeder -> uhrfed", function() {deepEqual( Stem("uhrfeder"), "uhrfed");});
test("uhrgehäuse -> uhrgehaus", function() {deepEqual( Stem("uhrgehäuse"), "uhrgehaus");});
test("uhrkette -> uhrkett", function() {deepEqual( Stem("uhrkette"), "uhrkett");});
test("uhrmacher -> uhrmach", function() {deepEqual( Stem("uhrmacher"), "uhrmach");});
test("uhrwerk -> uhrwerk", function() {deepEqual( Stem("uhrwerk"), "uhrwerk");});
test("ulla -> ulla", function() {deepEqual( Stem("ulla"), "ulla");});
test("ulm -> ulm", function() {deepEqual( Stem("ulm"), "ulm");});
test("ulmen -> ulm", function() {deepEqual( Stem("ulmen"), "ulm");});
test("um -> um", function() {deepEqual( Stem("um"), "um");});
test("umanandhocken -> umanandhock", function() {deepEqual( Stem("umanandhocken"), "umanandhock");});
test("umänderung -> umander", function() {deepEqual( Stem("umänderung"), "umander");});
test("umarmen -> umarm", function() {deepEqual( Stem("umarmen"), "umarm");});
test("umarmt -> umarmt", function() {deepEqual( Stem("umarmt"), "umarmt");});
test("umarmte -> umarmt", function() {deepEqual( Stem("umarmte"), "umarmt");});
test("umarmten -> umarmt", function() {deepEqual( Stem("umarmten"), "umarmt");});
test("umarmung -> umarm", function() {deepEqual( Stem("umarmung"), "umarm");});
test("umarmungen -> umarm", function() {deepEqual( Stem("umarmungen"), "umarm");});
test("umband -> umband", function() {deepEqual( Stem("umband"), "umband");});
test("umbarmherziger -> umbarmherz", function() {deepEqual( Stem("umbarmherziger"), "umbarmherz");});
test("umbildung -> umbild", function() {deepEqual( Stem("umbildung"), "umbild");});
test("umblühet -> umbluhet", function() {deepEqual( Stem("umblühet"), "umbluhet");});
test("umbringen -> umbring", function() {deepEqual( Stem("umbringen"), "umbring");});
test("umbruchgewinnler -> umbruchgewinnl", function() {deepEqual( Stem("umbruchgewinnler"), "umbruchgewinnl");});
test("umdrehen -> umdreh", function() {deepEqual( Stem("umdrehen"), "umdreh");});
test("umdrehte -> umdreht", function() {deepEqual( Stem("umdrehte"), "umdreht");});
test("umdrehungen -> umdreh", function() {deepEqual( Stem("umdrehungen"), "umdreh");});
test("umeinander -> umeinand", function() {deepEqual( Stem("umeinander"), "umeinand");});
test("umfallen -> umfall", function() {deepEqual( Stem("umfallen"), "umfall");});
test("umfang -> umfang", function() {deepEqual( Stem("umfang"), "umfang");});
test("umfange -> umfang", function() {deepEqual( Stem("umfange"), "umfang");});
test("umfangen -> umfang", function() {deepEqual( Stem("umfangen"), "umfang");});
test("umfanges -> umfang", function() {deepEqual( Stem("umfanges"), "umfang");});
test("umfassen -> umfass", function() {deepEqual( Stem("umfassen"), "umfass");});
test("umfassender -> umfass", function() {deepEqual( Stem("umfassender"), "umfass");});
test("umfasst -> umfasst", function() {deepEqual( Stem("umfasst"), "umfasst");});
test("umfaßt -> umfasst", function() {deepEqual( Stem("umfaßt"), "umfasst");});
test("umfasste -> umfasst", function() {deepEqual( Stem("umfasste"), "umfasst");});
test("umfaßte -> umfasst", function() {deepEqual( Stem("umfaßte"), "umfasst");});
test("umfassten -> umfasst", function() {deepEqual( Stem("umfassten"), "umfasst");});
test("umfeld -> umfeld", function() {deepEqual( Stem("umfeld"), "umfeld");});
test("umfing -> umfing", function() {deepEqual( Stem("umfing"), "umfing");});
test("umfingen -> umfing", function() {deepEqual( Stem("umfingen"), "umfing");});
test("umflochten -> umflocht", function() {deepEqual( Stem("umflochten"), "umflocht");});
test("umflossen -> umfloss", function() {deepEqual( Stem("umflossen"), "umfloss");});
test("umfuhr -> umfuhr", function() {deepEqual( Stem("umfuhr"), "umfuhr");});
test("umfunkelt -> umfunkelt", function() {deepEqual( Stem("umfunkelt"), "umfunkelt");});
test("umg -> umg", function() {deepEqual( Stem("umg"), "umg");});
test("umgab -> umgab", function() {deepEqual( Stem("umgab"), "umgab");});
test("umgäbe -> umgab", function() {deepEqual( Stem("umgäbe"), "umgab");});
test("umgaben -> umgab", function() {deepEqual( Stem("umgaben"), "umgab");});
test("umgang -> umgang", function() {deepEqual( Stem("umgang"), "umgang");});
test("umgange -> umgang", function() {deepEqual( Stem("umgange"), "umgang");});
test("umgänglich -> umgang", function() {deepEqual( Stem("umgänglich"), "umgang");});
test("umgarnt -> umgarnt", function() {deepEqual( Stem("umgarnt"), "umgarnt");});
test("umgeändert -> umgeandert", function() {deepEqual( Stem("umgeändert"), "umgeandert");});
test("umgebe -> umgeb", function() {deepEqual( Stem("umgebe"), "umgeb");});
test("umgeben -> umgeb", function() {deepEqual( Stem("umgeben"), "umgeb");});
test("umgebenden -> umgeb", function() {deepEqual( Stem("umgebenden"), "umgeb");});
test("umgebildet -> umgebildet", function() {deepEqual( Stem("umgebildet"), "umgebildet");});
test("umgebracht -> umgebracht", function() {deepEqual( Stem("umgebracht"), "umgebracht");});
test("umgebung -> umgeb", function() {deepEqual( Stem("umgebung"), "umgeb");});
test("umgebungen -> umgeb", function() {deepEqual( Stem("umgebungen"), "umgeb");});
test("umgefallen -> umgefall", function() {deepEqual( Stem("umgefallen"), "umgefall");});
test("umgefallenen -> umgefall", function() {deepEqual( Stem("umgefallenen"), "umgefall");});
test("umgehängt -> umgehangt", function() {deepEqual( Stem("umgehängt"), "umgehangt");});
test("umgehen -> umgeh", function() {deepEqual( Stem("umgehen"), "umgeh");});
test("umgehende -> umgeh", function() {deepEqual( Stem("umgehende"), "umgeh");});
test("umgehendes -> umgeh", function() {deepEqual( Stem("umgehendes"), "umgeh");});
test("umgeht -> umgeht", function() {deepEqual( Stem("umgeht"), "umgeht");});
test("umgekehrt -> umgekehrt", function() {deepEqual( Stem("umgekehrt"), "umgekehrt");});
test("umgekehrte -> umgekehrt", function() {deepEqual( Stem("umgekehrte"), "umgekehrt");});
test("umgekehrten -> umgekehrt", function() {deepEqual( Stem("umgekehrten"), "umgekehrt");});
test("umgekehrter -> umgekehrt", function() {deepEqual( Stem("umgekehrter"), "umgekehrt");});
test("umgekommen -> umgekomm", function() {deepEqual( Stem("umgekommen"), "umgekomm");});
test("umgekommenen -> umgekomm", function() {deepEqual( Stem("umgekommenen"), "umgekomm");});
test("umgepflügt -> umgepflugt", function() {deepEqual( Stem("umgepflügt"), "umgepflugt");});
test("umgeschlagen -> umgeschlag", function() {deepEqual( Stem("umgeschlagen"), "umgeschlag");});
test("umgesehen -> umgeseh", function() {deepEqual( Stem("umgesehen"), "umgeseh");});
test("umgesehn -> umgesehn", function() {deepEqual( Stem("umgesehn"), "umgesehn");});
test("umgespritzt -> umgespritzt", function() {deepEqual( Stem("umgespritzt"), "umgespritzt");});
test("umgespritzten -> umgespritzt", function() {deepEqual( Stem("umgespritzten"), "umgespritzt");});
test("umgestülpt -> umgestulpt", function() {deepEqual( Stem("umgestülpt"), "umgestulpt");});
test("umgestürzten -> umgesturzt", function() {deepEqual( Stem("umgestürzten"), "umgesturzt");});
test("umgetan -> umgetan", function() {deepEqual( Stem("umgetan"), "umgetan");});
test("umgewandelt -> umgewandelt", function() {deepEqual( Stem("umgewandelt"), "umgewandelt");});
test("umgewandte -> umgewandt", function() {deepEqual( Stem("umgewandte"), "umgewandt");});
test("umgeworfene -> umgeworf", function() {deepEqual( Stem("umgeworfene"), "umgeworf");});
test("umgezogen -> umgezog", function() {deepEqual( Stem("umgezogen"), "umgezog");});
test("umgibt -> umgibt", function() {deepEqual( Stem("umgibt"), "umgibt");});
test("umgrenzen -> umgrenz", function() {deepEqual( Stem("umgrenzen"), "umgrenz");});
test("umgriffen -> umgriff", function() {deepEqual( Stem("umgriffen"), "umgriff");});
test("umgsprungen -> umgsprung", function() {deepEqual( Stem("umgsprungen"), "umgsprung");});
test("umgürtet -> umgurtet", function() {deepEqual( Stem("umgürtet"), "umgurtet");});
test("umgürtete -> umgurtet", function() {deepEqual( Stem("umgürtete"), "umgurtet");});
test("umhalste -> umhal", function() {deepEqual( Stem("umhalste"), "umhal");});
test("umhalsten -> umhal", function() {deepEqual( Stem("umhalsten"), "umhal");});
test("umhang -> umhang", function() {deepEqual( Stem("umhang"), "umhang");});
test("umhangen -> umhang", function() {deepEqual( Stem("umhangen"), "umhang");});
test("umhegten -> umhegt", function() {deepEqual( Stem("umhegten"), "umhegt");});
test("umher -> umh", function() {deepEqual( Stem("umher"), "umh");});
test("umherbieten -> umherbiet", function() {deepEqual( Stem("umherbieten"), "umherbiet");});
test("umherblickt -> umherblickt", function() {deepEqual( Stem("umherblickt"), "umherblickt");});
test("umherfloss -> umherfloss", function() {deepEqual( Stem("umherfloss"), "umherfloss");});
test("umhergehen -> umhergeh", function() {deepEqual( Stem("umhergehen"), "umhergeh");});
test("umhergeworfene -> umhergeworf", function() {deepEqual( Stem("umhergeworfene"), "umhergeworf");});
test("umherging -> umherging", function() {deepEqual( Stem("umherging"), "umherging");});
test("umherhupfte -> umherhupft", function() {deepEqual( Stem("umherhupfte"), "umherhupft");});
test("umherirren -> umherirr", function() {deepEqual( Stem("umherirren"), "umherirr");});
test("umherirrenden -> umherirr", function() {deepEqual( Stem("umherirrenden"), "umherirr");});
test("umherlaufen -> umherlauf", function() {deepEqual( Stem("umherlaufen"), "umherlauf");});
test("umherlief -> umherlief", function() {deepEqual( Stem("umherlief"), "umherlief");});
test("umherrollenden -> umherroll", function() {deepEqual( Stem("umherrollenden"), "umherroll");});
test("umherschweifen -> umherschweif", function() {deepEqual( Stem("umherschweifen"), "umherschweif");});
test("umherschweiften -> umherschweift", function() {deepEqual( Stem("umherschweiften"), "umherschweift");});
test("umhersprangen -> umhersprang", function() {deepEqual( Stem("umhersprangen"), "umhersprang");});
test("umherstreute -> umherstreut", function() {deepEqual( Stem("umherstreute"), "umherstreut");});
test("umhertrat -> umhertrat", function() {deepEqual( Stem("umhertrat"), "umhertrat");});
test("umhertrieb -> umhertrieb", function() {deepEqual( Stem("umhertrieb"), "umhertrieb");});
test("umherwatschelte -> umherwatschelt", function() {deepEqual( Stem("umherwatschelte"), "umherwatschelt");});
test("umherzubieten -> umherzubiet", function() {deepEqual( Stem("umherzubieten"), "umherzubiet");});
test("umherzublicken -> umherzublick", function() {deepEqual( Stem("umherzublicken"), "umherzublick");});
test("umhin -> umhin", function() {deepEqual( Stem("umhin"), "umhin");});
test("umhing -> umhing", function() {deepEqual( Stem("umhing"), "umhing");});
test("umkamen -> umkam", function() {deepEqual( Stem("umkamen"), "umkam");});
test("umkehren -> umkehr", function() {deepEqual( Stem("umkehren"), "umkehr");});
test("umkehrt -> umkehrt", function() {deepEqual( Stem("umkehrt"), "umkehrt");});
test("umkehrte -> umkehrt", function() {deepEqual( Stem("umkehrte"), "umkehrt");});
test("umkehrung -> umkehr", function() {deepEqual( Stem("umkehrung"), "umkehr");});
test("umklammert -> umklammert", function() {deepEqual( Stem("umklammert"), "umklammert");});
test("umklammerte -> umklammert", function() {deepEqual( Stem("umklammerte"), "umklammert");});
test("umkleidende -> umkleid", function() {deepEqual( Stem("umkleidende"), "umkleid");});
test("umkleidete -> umkleidet", function() {deepEqual( Stem("umkleidete"), "umkleidet");});
test("umkleideter -> umkleidet", function() {deepEqual( Stem("umkleideter"), "umkleidet");});
test("umkommen -> umkomm", function() {deepEqual( Stem("umkommen"), "umkomm");});
test("umkrallung -> umkrall", function() {deepEqual( Stem("umkrallung"), "umkrall");});
test("umkreis -> umkreis", function() {deepEqual( Stem("umkreis"), "umkreis");});
test("umkreise -> umkreis", function() {deepEqual( Stem("umkreise"), "umkreis");});
test("umlagert -> umlagert", function() {deepEqual( Stem("umlagert"), "umlagert");});
test("umlagerte -> umlagert", function() {deepEqual( Stem("umlagerte"), "umlagert");});
test("umlagerung -> umlager", function() {deepEqual( Stem("umlagerung"), "umlager");});
test("umlauf -> umlauf", function() {deepEqual( Stem("umlauf"), "umlauf");});
test("umlenken -> umlenk", function() {deepEqual( Stem("umlenken"), "umlenk");});
test("umliegenden -> umlieg", function() {deepEqual( Stem("umliegenden"), "umlieg");});
test("umliegender -> umlieg", function() {deepEqual( Stem("umliegender"), "umlieg");});
test("ummi -> ummi", function() {deepEqual( Stem("ummi"), "ummi");});
test("ummifahren -> ummifahr", function() {deepEqual( Stem("ummifahren"), "ummifahr");});
test("ummifahret -> ummifahret", function() {deepEqual( Stem("ummifahret"), "ummifahret");});
test("ummiglacht -> ummiglacht", function() {deepEqual( Stem("ummiglacht"), "ummiglacht");});
test("ummispring -> ummispring", function() {deepEqual( Stem("ummispring"), "ummispring");});
test("umpfiffen -> umpfiff", function() {deepEqual( Stem("umpfiffen"), "umpfiff");});
test("umreissen -> umreiss", function() {deepEqual( Stem("umreissen"), "umreiss");});
test("umreißen -> umreiss", function() {deepEqual( Stem("umreißen"), "umreiss");});
test("umringen -> umring", function() {deepEqual( Stem("umringen"), "umring");});
test("umringt -> umringt", function() {deepEqual( Stem("umringt"), "umringt");});
test("umringten -> umringt", function() {deepEqual( Stem("umringten"), "umringt");});
test("umrisse -> umriss", function() {deepEqual( Stem("umrisse"), "umriss");});
test("umrührten -> umruhrt", function() {deepEqual( Stem("umrührten"), "umruhrt");});
test("ums -> ums", function() {deepEqual( Stem("ums"), "ums");});
test("umsahen -> umsah", function() {deepEqual( Stem("umsahen"), "umsah");});
test("umsatz -> umsatz", function() {deepEqual( Stem("umsatz"), "umsatz");});
test("umschifft -> umschifft", function() {deepEqual( Stem("umschifft"), "umschifft");});
test("umschlag -> umschlag", function() {deepEqual( Stem("umschlag"), "umschlag");});
test("umschläge -> umschlag", function() {deepEqual( Stem("umschläge"), "umschlag");});
test("umschlägt -> umschlagt", function() {deepEqual( Stem("umschlägt"), "umschlagt");});
test("umschlang -> umschlang", function() {deepEqual( Stem("umschlang"), "umschlang");});
test("umschleierte -> umschleiert", function() {deepEqual( Stem("umschleierte"), "umschleiert");});
test("umschliessen -> umschliess", function() {deepEqual( Stem("umschliessen"), "umschliess");});
test("umschließen -> umschliess", function() {deepEqual( Stem("umschließen"), "umschliess");});
test("umschliesst -> umschliesst", function() {deepEqual( Stem("umschliesst"), "umschliesst");});
test("umschliessung -> umschliess", function() {deepEqual( Stem("umschliessung"), "umschliess");});
test("umschließung -> umschliess", function() {deepEqual( Stem("umschließung"), "umschliess");});
test("umschlingen -> umschling", function() {deepEqual( Stem("umschlingen"), "umschling");});
test("umschloss -> umschloss", function() {deepEqual( Stem("umschloss"), "umschloss");});
test("umschlug -> umschlug", function() {deepEqual( Stem("umschlug"), "umschlug");});
test("umschlungen -> umschlung", function() {deepEqual( Stem("umschlungen"), "umschlung");});
test("umschweben -> umschweb", function() {deepEqual( Stem("umschweben"), "umschweb");});
test("umschwebt -> umschwebt", function() {deepEqual( Stem("umschwebt"), "umschwebt");});
test("umschweife -> umschweif", function() {deepEqual( Stem("umschweife"), "umschweif");});
test("umschwunges -> umschwung", function() {deepEqual( Stem("umschwunges"), "umschwung");});
test("umsehen -> umseh", function() {deepEqual( Stem("umsehen"), "umseh");});
test("umsehend -> umseh", function() {deepEqual( Stem("umsehend"), "umseh");});
test("umsetzwohnung -> umsetzwohn", function() {deepEqual( Stem("umsetzwohnung"), "umsetzwohn");});
test("umsicht -> umsicht", function() {deepEqual( Stem("umsicht"), "umsicht");});
test("umsichtige -> umsicht", function() {deepEqual( Stem("umsichtige"), "umsicht");});
test("umsieht -> umsieht", function() {deepEqual( Stem("umsieht"), "umsieht");});
test("umso -> umso", function() {deepEqual( Stem("umso"), "umso");});
test("umsonst -> umson", function() {deepEqual( Stem("umsonst"), "umson");});
test("umsonstdas -> umsonstdas", function() {deepEqual( Stem("umsonstdas"), "umsonstdas");});
test("umspannte -> umspannt", function() {deepEqual( Stem("umspannte"), "umspannt");});
test("umspielten -> umspielt", function() {deepEqual( Stem("umspielten"), "umspielt");});
test("umstand -> umstand", function() {deepEqual( Stem("umstand"), "umstand");});
test("umstände -> umstand", function() {deepEqual( Stem("umstände"), "umstand");});
test("umstanden -> umstand", function() {deepEqual( Stem("umstanden"), "umstand");});
test("umständen -> umstand", function() {deepEqual( Stem("umständen"), "umstand");});
test("umständlich -> umstand", function() {deepEqual( Stem("umständlich"), "umstand");});
test("umständlichen -> umstand", function() {deepEqual( Stem("umständlichen"), "umstand");});
test("umstehenden -> umsteh", function() {deepEqual( Stem("umstehenden"), "umsteh");});
test("umstellung -> umstell", function() {deepEqual( Stem("umstellung"), "umstell");});
test("umstiess -> umstiess", function() {deepEqual( Stem("umstiess"), "umstiess");});
test("umstossen -> umstoss", function() {deepEqual( Stem("umstossen"), "umstoss");});
test("umstoßen -> umstoss", function() {deepEqual( Stem("umstoßen"), "umstoss");});
test("umstossend -> umstoss", function() {deepEqual( Stem("umstossend"), "umstoss");});
test("umstoßend -> umstoss", function() {deepEqual( Stem("umstoßend"), "umstoss");});
test("umstösst -> umstosst", function() {deepEqual( Stem("umstösst"), "umstosst");});
test("umstößt -> umstosst", function() {deepEqual( Stem("umstößt"), "umstosst");});
test("umstrittenen -> umstritt", function() {deepEqual( Stem("umstrittenen"), "umstritt");});
test("umstrittensten -> umstritten", function() {deepEqual( Stem("umstrittensten"), "umstritten");});
test("umsturz -> umsturz", function() {deepEqual( Stem("umsturz"), "umsturz");});
test("umtreiben -> umtreib", function() {deepEqual( Stem("umtreiben"), "umtreib");});
test("umtriebe -> umtrieb", function() {deepEqual( Stem("umtriebe"), "umtrieb");});
test("umtrieben -> umtrieb", function() {deepEqual( Stem("umtrieben"), "umtrieb");});
test("umtun -> umtun", function() {deepEqual( Stem("umtun"), "umtun");});
test("umundum -> umundum", function() {deepEqual( Stem("umundum"), "umundum");});
test("umverteilen -> umverteil", function() {deepEqual( Stem("umverteilen"), "umverteil");});
test("umverteilung -> umverteil", function() {deepEqual( Stem("umverteilung"), "umverteil");});
test("umverteilungssystem -> umverteilungssyst", function() {deepEqual( Stem("umverteilungssystem"), "umverteilungssyst");});
test("umwanden -> umwand", function() {deepEqual( Stem("umwanden"), "umwand");});
test("umwandlung -> umwandl", function() {deepEqual( Stem("umwandlung"), "umwandl");});
test("umwarf -> umwarf", function() {deepEqual( Stem("umwarf"), "umwarf");});
test("umweg -> umweg", function() {deepEqual( Stem("umweg"), "umweg");});
test("umwegen -> umweg", function() {deepEqual( Stem("umwegen"), "umweg");});
test("umweltbewegung -> umweltbeweg", function() {deepEqual( Stem("umweltbewegung"), "umweltbeweg");});
test("umwerfen -> umwerf", function() {deepEqual( Stem("umwerfen"), "umwerf");});
test("umwerfend -> umwerf", function() {deepEqual( Stem("umwerfend"), "umwerf");});
test("umwickelt -> umwickelt", function() {deepEqual( Stem("umwickelt"), "umwickelt");});
test("umwickelte -> umwickelt", function() {deepEqual( Stem("umwickelte"), "umwickelt");});
test("umwogt -> umwogt", function() {deepEqual( Stem("umwogt"), "umwogt");});
test("umwunden -> umwund", function() {deepEqual( Stem("umwunden"), "umwund");});
test("umzingelt -> umzingelt", function() {deepEqual( Stem("umzingelt"), "umzingelt");});
test("umzublasen -> umzublas", function() {deepEqual( Stem("umzublasen"), "umzublas");});
test("umzubringen -> umzubring", function() {deepEqual( Stem("umzubringen"), "umzubring");});
test("umzuckte -> umzuckt", function() {deepEqual( Stem("umzuckte"), "umzuckt");});
test("umzugehen -> umzugeh", function() {deepEqual( Stem("umzugehen"), "umzugeh");});
test("umzugsfirma -> umzugsfirma", function() {deepEqual( Stem("umzugsfirma"), "umzugsfirma");});
test("umzukehren -> umzukehr", function() {deepEqual( Stem("umzukehren"), "umzukehr");});
test("umzusehen -> umzuseh", function() {deepEqual( Stem("umzusehen"), "umzuseh");});
test("umzustossen -> umzustoss", function() {deepEqual( Stem("umzustossen"), "umzustoss");});
test("umzustoßen -> umzustoss", function() {deepEqual( Stem("umzustoßen"), "umzustoss");});
test("un -> un", function() {deepEqual( Stem("un"), "un");});
test("unabänderlich -> unaband", function() {deepEqual( Stem("unabänderlich"), "unaband");});
test("unabänderliche -> unaband", function() {deepEqual( Stem("unabänderliche"), "unaband");});
test("unabhängig -> unabhang", function() {deepEqual( Stem("unabhängig"), "unabhang");});
test("unabhängige -> unabhang", function() {deepEqual( Stem("unabhängige"), "unabhang");});
test("unabhängigen -> unabhang", function() {deepEqual( Stem("unabhängigen"), "unabhang");});
test("unabhängiges -> unabhang", function() {deepEqual( Stem("unabhängiges"), "unabhang");});
test("unabhängigkeit -> unabhang", function() {deepEqual( Stem("unabhängigkeit"), "unabhang");});
test("unablässig -> unablass", function() {deepEqual( Stem("unablässig"), "unablass");});
test("unabsehbare -> unabsehbar", function() {deepEqual( Stem("unabsehbare"), "unabsehbar");});
test("unabsehbaren -> unabsehbar", function() {deepEqual( Stem("unabsehbaren"), "unabsehbar");});
test("unabsehlich -> unabseh", function() {deepEqual( Stem("unabsehlich"), "unabseh");});
test("unabtrennlich -> unabtrenn", function() {deepEqual( Stem("unabtrennlich"), "unabtrenn");});
test("unähnlich -> unahn", function() {deepEqual( Stem("unähnlich"), "unahn");});
test("unähnlichkeit -> unahn", function() {deepEqual( Stem("unähnlichkeit"), "unahn");});
test("unam -> unam", function() {deepEqual( Stem("unam"), "unam");});
test("unangebautes -> unangebaut", function() {deepEqual( Stem("unangebautes"), "unangebaut");});
test("unangemeldet -> unangemeldet", function() {deepEqual( Stem("unangemeldet"), "unangemeldet");});
test("unangenehm -> unangenehm", function() {deepEqual( Stem("unangenehm"), "unangenehm");});
test("unangenehme -> unangenehm", function() {deepEqual( Stem("unangenehme"), "unangenehm");});
test("unangenehmen -> unangenehm", function() {deepEqual( Stem("unangenehmen"), "unangenehm");});
test("unangesehen -> unangeseh", function() {deepEqual( Stem("unangesehen"), "unangeseh");});
test("unangetastet -> unangetastet", function() {deepEqual( Stem("unangetastet"), "unangetastet");});
test("unangezündet -> unangezundet", function() {deepEqual( Stem("unangezündet"), "unangezundet");});
test("unannehmlichkeit -> unannehm", function() {deepEqual( Stem("unannehmlichkeit"), "unannehm");});
test("unannehmlichkeiten -> unannehm", function() {deepEqual( Stem("unannehmlichkeiten"), "unannehm");});
test("unansehnliche -> unansehn", function() {deepEqual( Stem("unansehnliche"), "unansehn");});
test("unansehnlicher -> unansehn", function() {deepEqual( Stem("unansehnlicher"), "unansehn");});
test("unanständig -> unanstand", function() {deepEqual( Stem("unanständig"), "unanstand");});
test("unanständiges -> unanstand", function() {deepEqual( Stem("unanständiges"), "unanstand");});
test("unanständigsten -> unanstand", function() {deepEqual( Stem("unanständigsten"), "unanstand");});
test("unappetitlichen -> unappetit", function() {deepEqual( Stem("unappetitlichen"), "unappetit");});
test("unappetitliches -> unappetit", function() {deepEqual( Stem("unappetitliches"), "unappetit");});
test("unart -> unart", function() {deepEqual( Stem("unart"), "unart");});
test("unartig -> unart", function() {deepEqual( Stem("unartig"), "unart");});
test("unartikuliertes -> unartikuliert", function() {deepEqual( Stem("unartikuliertes"), "unartikuliert");});
test("unästhetischem -> unasthet", function() {deepEqual( Stem("unästhetischem"), "unasthet");});
test("unaufgedeckte -> unaufgedeckt", function() {deepEqual( Stem("unaufgedeckte"), "unaufgedeckt");});
test("unaufgelösete -> unaufgeloset", function() {deepEqual( Stem("unaufgelösete"), "unaufgeloset");});
test("unaufhaltsam -> unaufhaltsam", function() {deepEqual( Stem("unaufhaltsam"), "unaufhaltsam");});
test("unaufhörlich -> unaufhor", function() {deepEqual( Stem("unaufhörlich"), "unaufhor");});
test("unaufhörliche -> unaufhor", function() {deepEqual( Stem("unaufhörliche"), "unaufhor");});
test("unaufhörlichen -> unaufhor", function() {deepEqual( Stem("unaufhörlichen"), "unaufhor");});
test("unauflöslich -> unauflos", function() {deepEqual( Stem("unauflöslich"), "unauflos");});
test("unauflösliches -> unauflos", function() {deepEqual( Stem("unauflösliches"), "unauflos");});
test("unaufmerksam -> unaufmerksam", function() {deepEqual( Stem("unaufmerksam"), "unaufmerksam");});
test("unaufmerksamkeit -> unaufmerksam", function() {deepEqual( Stem("unaufmerksamkeit"), "unaufmerksam");});
test("unausbleiblich -> unausbleib", function() {deepEqual( Stem("unausbleiblich"), "unausbleib");});
test("unausgefüllt -> unausgefullt", function() {deepEqual( Stem("unausgefüllt"), "unausgefullt");});
test("unausgesprochen -> unausgesproch", function() {deepEqual( Stem("unausgesprochen"), "unausgesproch");});
test("unauslöschlicher -> unauslosch", function() {deepEqual( Stem("unauslöschlicher"), "unauslosch");});
test("unaussprechlich -> unaussprech", function() {deepEqual( Stem("unaussprechlich"), "unaussprech");});
test("unaussprechliche -> unaussprech", function() {deepEqual( Stem("unaussprechliche"), "unaussprech");});
test("unaussprechlichen -> unaussprech", function() {deepEqual( Stem("unaussprechlichen"), "unaussprech");});
test("unaussprechlicher -> unaussprech", function() {deepEqual( Stem("unaussprechlicher"), "unaussprech");});
test("unaussprechliches -> unaussprech", function() {deepEqual( Stem("unaussprechliches"), "unaussprech");});
test("unausstehlich -> unaussteh", function() {deepEqual( Stem("unausstehlich"), "unaussteh");});
test("unausstehliche -> unaussteh", function() {deepEqual( Stem("unausstehliche"), "unaussteh");});
test("unbändig -> unband", function() {deepEqual( Stem("unbändig"), "unband");});
test("unbarmherzig -> unbarmherz", function() {deepEqual( Stem("unbarmherzig"), "unbarmherz");});
test("unbarmherziger -> unbarmherz", function() {deepEqual( Stem("unbarmherziger"), "unbarmherz");});
test("unbarmherzigere -> unbarmherz", function() {deepEqual( Stem("unbarmherzigere"), "unbarmherz");});
test("unbarmherzigkeit -> unbarmherz", function() {deepEqual( Stem("unbarmherzigkeit"), "unbarmherz");});
test("unbe -> unb", function() {deepEqual( Stem("unbe"), "unb");});
test("unbeachtete -> unbeachtet", function() {deepEqual( Stem("unbeachtete"), "unbeachtet");});
test("unbebautes -> unbebaut", function() {deepEqual( Stem("unbebautes"), "unbebaut");});
test("unbedacht -> unbedacht", function() {deepEqual( Stem("unbedacht"), "unbedacht");});
test("unbedachten -> unbedacht", function() {deepEqual( Stem("unbedachten"), "unbedacht");});
test("unbedenklich -> unbedenk", function() {deepEqual( Stem("unbedenklich"), "unbedenk");});
test("unbedeutend -> unbedeut", function() {deepEqual( Stem("unbedeutend"), "unbedeut");});
test("unbedeutende -> unbedeut", function() {deepEqual( Stem("unbedeutende"), "unbedeut");});
test("unbedeutenden -> unbedeut", function() {deepEqual( Stem("unbedeutenden"), "unbedeut");});
test("unbedingt -> unbedingt", function() {deepEqual( Stem("unbedingt"), "unbedingt");});
test("unbedingte -> unbedingt", function() {deepEqual( Stem("unbedingte"), "unbedingt");});
test("unbedingten -> unbedingt", function() {deepEqual( Stem("unbedingten"), "unbedingt");});
test("unbedingterweise -> unbedingterweis", function() {deepEqual( Stem("unbedingterweise"), "unbedingterweis");});
test("unbefangen -> unbefang", function() {deepEqual( Stem("unbefangen"), "unbefang");});
test("unbefangene -> unbefang", function() {deepEqual( Stem("unbefangene"), "unbefang");});
test("unbefangenen -> unbefang", function() {deepEqual( Stem("unbefangenen"), "unbefang");});
test("unbefangenes -> unbefang", function() {deepEqual( Stem("unbefangenes"), "unbefang");});
test("unbefangenheit -> unbefang", function() {deepEqual( Stem("unbefangenheit"), "unbefang");});
test("unbegreiflich -> unbegreif", function() {deepEqual( Stem("unbegreiflich"), "unbegreif");});
test("unbegreifliche -> unbegreif", function() {deepEqual( Stem("unbegreifliche"), "unbegreif");});
test("unbegreiflichen -> unbegreif", function() {deepEqual( Stem("unbegreiflichen"), "unbegreif");});
test("unbegreiflicher -> unbegreif", function() {deepEqual( Stem("unbegreiflicher"), "unbegreif");});
test("unbegreifliches -> unbegreif", function() {deepEqual( Stem("unbegreifliches"), "unbegreif");});
test("unbegrenzte -> unbegrenzt", function() {deepEqual( Stem("unbegrenzte"), "unbegrenzt");});
test("unbegrenztes -> unbegrenzt", function() {deepEqual( Stem("unbegrenztes"), "unbegrenzt");});
test("unbegründet -> unbegrundet", function() {deepEqual( Stem("unbegründet"), "unbegrundet");});
test("unbehagen -> unbehag", function() {deepEqual( Stem("unbehagen"), "unbehag");});
test("unbehaglich -> unbehag", function() {deepEqual( Stem("unbehaglich"), "unbehag");});
test("unbehaglicher -> unbehag", function() {deepEqual( Stem("unbehaglicher"), "unbehag");});
test("unbehagliches -> unbehag", function() {deepEqual( Stem("unbehagliches"), "unbehag");});
test("unbeholfen -> unbeholf", function() {deepEqual( Stem("unbeholfen"), "unbeholf");});
test("unbekannnten -> unbekannnt", function() {deepEqual( Stem("unbekannnten"), "unbekannnt");});
test("unbekannt -> unbekannt", function() {deepEqual( Stem("unbekannt"), "unbekannt");});
test("unbekannte -> unbekannt", function() {deepEqual( Stem("unbekannte"), "unbekannt");});
test("unbekannten -> unbekannt", function() {deepEqual( Stem("unbekannten"), "unbekannt");});
test("unbekannter -> unbekannt", function() {deepEqual( Stem("unbekannter"), "unbekannt");});
test("unbekanntes -> unbekannt", function() {deepEqual( Stem("unbekanntes"), "unbekannt");});
test("unbekümmert -> unbekummert", function() {deepEqual( Stem("unbekümmert"), "unbekummert");});
test("unbelebt -> unbelebt", function() {deepEqual( Stem("unbelebt"), "unbelebt");});
test("unbeliebt -> unbeliebt", function() {deepEqual( Stem("unbeliebt"), "unbeliebt");});
test("unbemerkt -> unbemerkt", function() {deepEqual( Stem("unbemerkt"), "unbemerkt");});
test("unbemittelte -> unbemittelt", function() {deepEqual( Stem("unbemittelte"), "unbemittelt");});
test("unbemittelten -> unbemittelt", function() {deepEqual( Stem("unbemittelten"), "unbemittelt");});
test("unbenutzt -> unbenutzt", function() {deepEqual( Stem("unbenutzt"), "unbenutzt");});
test("unbenutzten -> unbenutzt", function() {deepEqual( Stem("unbenutzten"), "unbenutzt");});
test("unbeobachtet -> unbeobachtet", function() {deepEqual( Stem("unbeobachtet"), "unbeobachtet");});
test("unbequem -> unbequ", function() {deepEqual( Stem("unbequem"), "unbequ");});
test("unbequemen -> unbequem", function() {deepEqual( Stem("unbequemen"), "unbequem");});
test("unbequemlichkeit -> unbequem", function() {deepEqual( Stem("unbequemlichkeit"), "unbequem");});
test("unberechenbare -> unberechenbar", function() {deepEqual( Stem("unberechenbare"), "unberechenbar");});
test("unbeschädigt -> unbeschadigt", function() {deepEqual( Stem("unbeschädigt"), "unbeschadigt");});
test("unbeschäftigt -> unbeschaftigt", function() {deepEqual( Stem("unbeschäftigt"), "unbeschaftigt");});
test("unbeschäftigter -> unbeschaftigt", function() {deepEqual( Stem("unbeschäftigter"), "unbeschaftigt");});
test("unbescheidener -> unbescheid", function() {deepEqual( Stem("unbescheidener"), "unbescheid");});
test("unbescheidenheit -> unbescheid", function() {deepEqual( Stem("unbescheidenheit"), "unbescheid");});
test("unbeschnitten -> unbeschnitt", function() {deepEqual( Stem("unbeschnitten"), "unbeschnitt");});
test("unbeschnittene -> unbeschnitt", function() {deepEqual( Stem("unbeschnittene"), "unbeschnitt");});
test("unbeschnittenen -> unbeschnitt", function() {deepEqual( Stem("unbeschnittenen"), "unbeschnitt");});
test("unbeschnittenes -> unbeschnitt", function() {deepEqual( Stem("unbeschnittenes"), "unbeschnitt");});
test("unbescholtenheit -> unbescholt", function() {deepEqual( Stem("unbescholtenheit"), "unbescholt");});
test("unbeschränkt -> unbeschrankt", function() {deepEqual( Stem("unbeschränkt"), "unbeschrankt");});
test("unbeschränkte -> unbeschrankt", function() {deepEqual( Stem("unbeschränkte"), "unbeschrankt");});
test("unbeschreiblich -> unbeschreib", function() {deepEqual( Stem("unbeschreiblich"), "unbeschreib");});
test("unbeschreibliche -> unbeschreib", function() {deepEqual( Stem("unbeschreibliche"), "unbeschreib");});
test("unbeschreiblicher -> unbeschreib", function() {deepEqual( Stem("unbeschreiblicher"), "unbeschreib");});
test("unbeschreibliches -> unbeschreib", function() {deepEqual( Stem("unbeschreibliches"), "unbeschreib");});
test("unbeschwert -> unbeschwert", function() {deepEqual( Stem("unbeschwert"), "unbeschwert");});
test("unbeseelt -> unbeseelt", function() {deepEqual( Stem("unbeseelt"), "unbeseelt");});
test("unbeseeltes -> unbeseelt", function() {deepEqual( Stem("unbeseeltes"), "unbeseelt");});
test("unbesonnenen -> unbesonn", function() {deepEqual( Stem("unbesonnenen"), "unbesonn");});
test("unbesonnenheit -> unbesonn", function() {deepEqual( Stem("unbesonnenheit"), "unbesonn");});
test("unbestimmbar -> unbestimmbar", function() {deepEqual( Stem("unbestimmbar"), "unbestimmbar");});
test("unbestimmt -> unbestimmt", function() {deepEqual( Stem("unbestimmt"), "unbestimmt");});
test("unbestimmte -> unbestimmt", function() {deepEqual( Stem("unbestimmte"), "unbestimmt");});
test("unbestimmter -> unbestimmt", function() {deepEqual( Stem("unbestimmter"), "unbestimmt");});
test("unbeteiligt -> unbeteiligt", function() {deepEqual( Stem("unbeteiligt"), "unbeteiligt");});
test("unbewachten -> unbewacht", function() {deepEqual( Stem("unbewachten"), "unbewacht");});
test("unbeweglich -> unbeweg", function() {deepEqual( Stem("unbeweglich"), "unbeweg");});
test("unbewohnte -> unbewohnt", function() {deepEqual( Stem("unbewohnte"), "unbewohnt");});
test("unbewusst -> unbewusst", function() {deepEqual( Stem("unbewusst"), "unbewusst");});
test("unbewusste -> unbewusst", function() {deepEqual( Stem("unbewusste"), "unbewusst");});
test("unbewussten -> unbewusst", function() {deepEqual( Stem("unbewussten"), "unbewusst");});
test("unbezähmbare -> unbezahmbar", function() {deepEqual( Stem("unbezähmbare"), "unbezahmbar");});
test("unbezweifeltes -> unbezweifelt", function() {deepEqual( Stem("unbezweifeltes"), "unbezweifelt");});
test("unbezwinglicher -> unbezwing", function() {deepEqual( Stem("unbezwinglicher"), "unbezwing");});
test("unbiegsam -> unbiegsam", function() {deepEqual( Stem("unbiegsam"), "unbiegsam");});
test("unbillige -> unbill", function() {deepEqual( Stem("unbillige"), "unbill");});
test("unbrauchbar -> unbrauchbar", function() {deepEqual( Stem("unbrauchbar"), "unbrauchbar");});
test("unbrauchbare -> unbrauchbar", function() {deepEqual( Stem("unbrauchbare"), "unbrauchbar");});
test("unbrauchbarkeit -> unbrauchbar", function() {deepEqual( Stem("unbrauchbarkeit"), "unbrauchbar");});
test("und -> und", function() {deepEqual( Stem("und"), "und");});
test("undank -> undank", function() {deepEqual( Stem("undank"), "undank");});
test("undenklichen -> undenk", function() {deepEqual( Stem("undenklichen"), "undenk");});
test("undenklicher -> undenk", function() {deepEqual( Stem("undenklicher"), "undenk");});
test("undeutlich -> undeut", function() {deepEqual( Stem("undeutlich"), "undeut");});
test("unding -> unding", function() {deepEqual( Stem("unding"), "unding");});
test("undurchsichtige -> undurchsicht", function() {deepEqual( Stem("undurchsichtige"), "undurchsicht");});
test("uneben -> uneb", function() {deepEqual( Stem("uneben"), "uneb");});
test("unebene -> uneb", function() {deepEqual( Stem("unebene"), "uneb");});
test("unebenheiten -> uneb", function() {deepEqual( Stem("unebenheiten"), "uneb");});
test("unecht -> unecht", function() {deepEqual( Stem("unecht"), "unecht");});
test("unechte -> unecht", function() {deepEqual( Stem("unechte"), "unecht");});
test("unechter -> unecht", function() {deepEqual( Stem("unechter"), "unecht");});
test("unedel -> unedel", function() {deepEqual( Stem("unedel"), "unedel");});
test("unedler -> unedl", function() {deepEqual( Stem("unedler"), "unedl");});
test("unehre -> unehr", function() {deepEqual( Stem("unehre"), "unehr");});
test("uneigennützig -> uneigennutz", function() {deepEqual( Stem("uneigennützig"), "uneigennutz");});
test("uneigennützige -> uneigennutz", function() {deepEqual( Stem("uneigennützige"), "uneigennutz");});
test("uneigennützigen -> uneigennutz", function() {deepEqual( Stem("uneigennützigen"), "uneigennutz");});
test("uneigennützigkeit -> uneigennutz", function() {deepEqual( Stem("uneigennützigkeit"), "uneigennutz");});
test("uneigennützigste -> uneigennutz", function() {deepEqual( Stem("uneigennützigste"), "uneigennutz");});
test("uneigentlich -> uneigent", function() {deepEqual( Stem("uneigentlich"), "uneigent");});
test("uneingeschränktheit -> uneingeschrankt", function() {deepEqual( Stem("uneingeschränktheit"), "uneingeschrankt");});
test("uneinigkeit -> unein", function() {deepEqual( Stem("uneinigkeit"), "unein");});
test("unempfindlichen -> unempfind", function() {deepEqual( Stem("unempfindlichen"), "unempfind");});
test("unendlich -> unend", function() {deepEqual( Stem("unendlich"), "unend");});
test("unendliche -> unend", function() {deepEqual( Stem("unendliche"), "unend");});
test("unendlichen -> unend", function() {deepEqual( Stem("unendlichen"), "unend");});
test("unendlichkeit -> unend", function() {deepEqual( Stem("unendlichkeit"), "unend");});
test("unentbehrlich -> unentbehr", function() {deepEqual( Stem("unentbehrlich"), "unentbehr");});
test("unentbehrlichen -> unentbehr", function() {deepEqual( Stem("unentbehrlichen"), "unentbehr");});
test("unentbehrliches -> unentbehr", function() {deepEqual( Stem("unentbehrliches"), "unentbehr");});
test("unentschieden -> unentschied", function() {deepEqual( Stem("unentschieden"), "unentschied");});
test("unentschlossen -> unentschloss", function() {deepEqual( Stem("unentschlossen"), "unentschloss");});
test("unentwegten -> unentwegt", function() {deepEqual( Stem("unentwegten"), "unentwegt");});
test("unerachtet -> unerachtet", function() {deepEqual( Stem("unerachtet"), "unerachtet");});
test("unerbittlich -> unerbitt", function() {deepEqual( Stem("unerbittlich"), "unerbitt");});
test("unerbittliche -> unerbitt", function() {deepEqual( Stem("unerbittliche"), "unerbitt");});
test("unerbittlicher -> unerbitt", function() {deepEqual( Stem("unerbittlicher"), "unerbitt");});
test("unerfahren -> unerfahr", function() {deepEqual( Stem("unerfahren"), "unerfahr");});
test("unerfahrene -> unerfahr", function() {deepEqual( Stem("unerfahrene"), "unerfahr");});
test("unerfahrener -> unerfahr", function() {deepEqual( Stem("unerfahrener"), "unerfahr");});
test("unerfahrenheit -> unerfahr", function() {deepEqual( Stem("unerfahrenheit"), "unerfahr");});
test("unerfindlichen -> unerfind", function() {deepEqual( Stem("unerfindlichen"), "unerfind");});
test("unerfindlicher -> unerfind", function() {deepEqual( Stem("unerfindlicher"), "unerfind");});
test("unerforschliche -> unerforsch", function() {deepEqual( Stem("unerforschliche"), "unerforsch");});
test("unergründliche -> unergrund", function() {deepEqual( Stem("unergründliche"), "unergrund");});
test("unergründlichkeit -> unergrund", function() {deepEqual( Stem("unergründlichkeit"), "unergrund");});
test("unerhört -> unerhort", function() {deepEqual( Stem("unerhört"), "unerhort");});
test("unerhörte -> unerhort", function() {deepEqual( Stem("unerhörte"), "unerhort");});
test("unerhörten -> unerhort", function() {deepEqual( Stem("unerhörten"), "unerhort");});
test("unerhörter -> unerhort", function() {deepEqual( Stem("unerhörter"), "unerhort");});
test("unerhörtes -> unerhort", function() {deepEqual( Stem("unerhörtes"), "unerhort");});
test("unerklärlichen -> unerklar", function() {deepEqual( Stem("unerklärlichen"), "unerklar");});
test("unerklärliches -> unerklar", function() {deepEqual( Stem("unerklärliches"), "unerklar");});
test("unerläßlich -> unerlass", function() {deepEqual( Stem("unerläßlich"), "unerlass");});
test("unerlaubt -> unerlaubt", function() {deepEqual( Stem("unerlaubt"), "unerlaubt");});
test("unerlaubtes -> unerlaubt", function() {deepEqual( Stem("unerlaubtes"), "unerlaubt");});
test("unermesslich -> unermess", function() {deepEqual( Stem("unermesslich"), "unermess");});
test("unermeßlich -> unermess", function() {deepEqual( Stem("unermeßlich"), "unermess");});
test("unermessliche -> unermess", function() {deepEqual( Stem("unermessliche"), "unermess");});
test("unermeßliche -> unermess", function() {deepEqual( Stem("unermeßliche"), "unermess");});
test("unermüdlich -> unermud", function() {deepEqual( Stem("unermüdlich"), "unermud");});
test("unermüdlicher -> unermud", function() {deepEqual( Stem("unermüdlicher"), "unermud");});
test("unerreichbar -> unerreichbar", function() {deepEqual( Stem("unerreichbar"), "unerreichbar");});
test("unerreichbare -> unerreichbar", function() {deepEqual( Stem("unerreichbare"), "unerreichbar");});
test("unerreichbaren -> unerreichbar", function() {deepEqual( Stem("unerreichbaren"), "unerreichbar");});
test("unersättlich -> unersatt", function() {deepEqual( Stem("unersättlich"), "unersatt");});
test("unerschöpfliche -> unerschopf", function() {deepEqual( Stem("unerschöpfliche"), "unerschopf");});
test("unerschöpflicher -> unerschopf", function() {deepEqual( Stem("unerschöpflicher"), "unerschopf");});
test("unerschrocken -> unerschrock", function() {deepEqual( Stem("unerschrocken"), "unerschrock");});
test("unerschrockene -> unerschrock", function() {deepEqual( Stem("unerschrockene"), "unerschrock");});
test("unerschrockenen -> unerschrock", function() {deepEqual( Stem("unerschrockenen"), "unerschrock");});
test("unerschrockenheit -> unerschrock", function() {deepEqual( Stem("unerschrockenheit"), "unerschrock");});
test("unerschütterlich -> unerschutt", function() {deepEqual( Stem("unerschütterlich"), "unerschutt");});
test("unerschütterliche -> unerschutt", function() {deepEqual( Stem("unerschütterliche"), "unerschutt");});
test("unerschüttert -> unerschuttert", function() {deepEqual( Stem("unerschüttert"), "unerschuttert");});
test("unersteiglicher -> unersteig", function() {deepEqual( Stem("unersteiglicher"), "unersteig");});
test("unerträglich -> unertrag", function() {deepEqual( Stem("unerträglich"), "unertrag");});
test("unerträgliche -> unertrag", function() {deepEqual( Stem("unerträgliche"), "unertrag");});
test("unerwachsenen -> unerwachs", function() {deepEqual( Stem("unerwachsenen"), "unerwachs");});
test("unerwartet -> unerwartet", function() {deepEqual( Stem("unerwartet"), "unerwartet");});
test("unerwartete -> unerwartet", function() {deepEqual( Stem("unerwartete"), "unerwartet");});
test("unerwarteter -> unerwartet", function() {deepEqual( Stem("unerwarteter"), "unerwartet");});
test("unerwarteterweise -> unerwarteterweis", function() {deepEqual( Stem("unerwarteterweise"), "unerwarteterweis");});
test("unerwartetes -> unerwartet", function() {deepEqual( Stem("unerwartetes"), "unerwartet");});
test("unfähig -> unfah", function() {deepEqual( Stem("unfähig"), "unfah");});
test("unfähigkeit -> unfah", function() {deepEqual( Stem("unfähigkeit"), "unfah");});
test("unfallopfern -> unfallopf", function() {deepEqual( Stem("unfallopfern"), "unfallopf");});
test("unfallverhütung -> unfallverhut", function() {deepEqual( Stem("unfallverhütung"), "unfallverhut");});
test("unfehlbar -> unfehlbar", function() {deepEqual( Stem("unfehlbar"), "unfehlbar");});
test("unfehlbare -> unfehlbar", function() {deepEqual( Stem("unfehlbare"), "unfehlbar");});
test("unfehlbares -> unfehlbar", function() {deepEqual( Stem("unfehlbares"), "unfehlbar");});
test("unfern -> unf", function() {deepEqual( Stem("unfern"), "unf");});
test("unflat -> unflat", function() {deepEqual( Stem("unflat"), "unflat");});
test("unfreiheit -> unfreiheit", function() {deepEqual( Stem("unfreiheit"), "unfreiheit");});
test("unfreisinn -> unfreisinn", function() {deepEqual( Stem("unfreisinn"), "unfreisinn");});
test("unfreundlich -> unfreund", function() {deepEqual( Stem("unfreundlich"), "unfreund");});
test("unfreundlichen -> unfreund", function() {deepEqual( Stem("unfreundlichen"), "unfreund");});
test("unfreundlichkeit -> unfreund", function() {deepEqual( Stem("unfreundlichkeit"), "unfreund");});
test("unfriede -> unfried", function() {deepEqual( Stem("unfriede"), "unfried");});
test("unfruchtbar -> unfruchtbar", function() {deepEqual( Stem("unfruchtbar"), "unfruchtbar");});
test("unfruchtbare -> unfruchtbar", function() {deepEqual( Stem("unfruchtbare"), "unfruchtbar");});
test("unfug -> unfug", function() {deepEqual( Stem("unfug"), "unfug");});
test("ungangbar -> ungangbar", function() {deepEqual( Stem("ungangbar"), "ungangbar");});
test("ungeachtet -> ungeachtet", function() {deepEqual( Stem("ungeachtet"), "ungeachtet");});
test("ungebahnten -> ungebahnt", function() {deepEqual( Stem("ungebahnten"), "ungebahnt");});
test("ungebärdig -> ungebard", function() {deepEqual( Stem("ungebärdig"), "ungebard");});
test("ungebildet -> ungebildet", function() {deepEqual( Stem("ungebildet"), "ungebildet");});
test("ungebildeter -> ungebildet", function() {deepEqual( Stem("ungebildeter"), "ungebildet");});
test("ungebildetes -> ungebildet", function() {deepEqual( Stem("ungebildetes"), "ungebildet");});
test("ungebraucht -> ungebraucht", function() {deepEqual( Stem("ungebraucht"), "ungebraucht");});
test("ungebrochen -> ungebroch", function() {deepEqual( Stem("ungebrochen"), "ungebroch");});
test("ungebrochener -> ungebroch", function() {deepEqual( Stem("ungebrochener"), "ungebroch");});
test("ungeduld -> ungeduld", function() {deepEqual( Stem("ungeduld"), "ungeduld");});
test("ungeduldig -> ungeduld", function() {deepEqual( Stem("ungeduldig"), "ungeduld");});
test("ungeduldigen -> ungeduld", function() {deepEqual( Stem("ungeduldigen"), "ungeduld");});
test("ungeduldigeren -> ungeduld", function() {deepEqual( Stem("ungeduldigeren"), "ungeduld");});
test("ungeeignete -> ungeeignet", function() {deepEqual( Stem("ungeeignete"), "ungeeignet");});
test("ungefahr -> ungefahr", function() {deepEqual( Stem("ungefahr"), "ungefahr");});
test("ungefähr -> ungefahr", function() {deepEqual( Stem("ungefähr"), "ungefahr");});
test("ungefährdet -> ungefahrdet", function() {deepEqual( Stem("ungefährdet"), "ungefahrdet");});
test("ungefälliger -> ungefall", function() {deepEqual( Stem("ungefälliger"), "ungefall");});
test("ungefärbten -> ungefarbt", function() {deepEqual( Stem("ungefärbten"), "ungefarbt");});
test("ungefügen -> ungefug", function() {deepEqual( Stem("ungefügen"), "ungefug");});
test("ungefüger -> ungefug", function() {deepEqual( Stem("ungefüger"), "ungefug");});
test("ungefügigen -> ungefug", function() {deepEqual( Stem("ungefügigen"), "ungefug");});
test("ungefunden -> ungefund", function() {deepEqual( Stem("ungefunden"), "ungefund");});
test("ungehalten -> ungehalt", function() {deepEqual( Stem("ungehalten"), "ungehalt");});
test("ungeheuer -> ungeheu", function() {deepEqual( Stem("ungeheuer"), "ungeheu");});
test("ungeheure -> ungeheur", function() {deepEqual( Stem("ungeheure"), "ungeheur");});
test("ungeheuren -> ungeheur", function() {deepEqual( Stem("ungeheuren"), "ungeheur");});
test("ungeheures -> ungeheur", function() {deepEqual( Stem("ungeheures"), "ungeheur");});
test("ungehindert -> ungehindert", function() {deepEqual( Stem("ungehindert"), "ungehindert");});
test("ungehörige -> ungehor", function() {deepEqual( Stem("ungehörige"), "ungehor");});
test("ungehöriger -> ungehor", function() {deepEqual( Stem("ungehöriger"), "ungehor");});
test("ungehöriges -> ungehor", function() {deepEqual( Stem("ungehöriges"), "ungehor");});
test("ungehorsam -> ungehorsam", function() {deepEqual( Stem("ungehorsam"), "ungehorsam");});
test("ungeistig -> ungeist", function() {deepEqual( Stem("ungeistig"), "ungeist");});
test("ungeistigen -> ungeist", function() {deepEqual( Stem("ungeistigen"), "ungeist");});
test("ungekämmten -> ungekammt", function() {deepEqual( Stem("ungekämmten"), "ungekammt");});
test("ungelegener -> ungeleg", function() {deepEqual( Stem("ungelegener"), "ungeleg");});
test("ungelegten -> ungelegt", function() {deepEqual( Stem("ungelegten"), "ungelegt");});
test("ungelehrt -> ungelehrt", function() {deepEqual( Stem("ungelehrt"), "ungelehrt");});
test("ungelenk -> ungelenk", function() {deepEqual( Stem("ungelenk"), "ungelenk");});
test("ungelesen -> ungeles", function() {deepEqual( Stem("ungelesen"), "ungeles");});
test("ungelinden -> ungelind", function() {deepEqual( Stem("ungelinden"), "ungelind");});
test("ungemein -> ungemein", function() {deepEqual( Stem("ungemein"), "ungemein");});
test("ungemütlich -> ungemut", function() {deepEqual( Stem("ungemütlich"), "ungemut");});
test("ungenossen -> ungenoss", function() {deepEqual( Stem("ungenossen"), "ungenoss");});
test("ungenügende -> ungenug", function() {deepEqual( Stem("ungenügende"), "ungenug");});
test("ungerächet -> ungerachet", function() {deepEqual( Stem("ungerächet"), "ungerachet");});
test("ungerechnet -> ungerechnet", function() {deepEqual( Stem("ungerechnet"), "ungerechnet");});
test("ungerecht -> ungerecht", function() {deepEqual( Stem("ungerecht"), "ungerecht");});
test("ungerechte -> ungerecht", function() {deepEqual( Stem("ungerechte"), "ungerecht");});
test("ungerechten -> ungerecht", function() {deepEqual( Stem("ungerechten"), "ungerecht");});
test("ungerechterweise -> ungerechterweis", function() {deepEqual( Stem("ungerechterweise"), "ungerechterweis");});
test("ungerechtes -> ungerecht", function() {deepEqual( Stem("ungerechtes"), "ungerecht");});
test("ungerechtigkeit -> ungerecht", function() {deepEqual( Stem("ungerechtigkeit"), "ungerecht");});
test("ungerechtigkeiten -> ungerecht", function() {deepEqual( Stem("ungerechtigkeiten"), "ungerecht");});
test("ungereimt -> ungereimt", function() {deepEqual( Stem("ungereimt"), "ungereimt");});
test("ungern -> ung", function() {deepEqual( Stem("ungern"), "ung");});
test("ungesäuerten -> ungesauert", function() {deepEqual( Stem("ungesäuerten"), "ungesauert");});
test("ungesäumt -> ungesaumt", function() {deepEqual( Stem("ungesäumt"), "ungesaumt");});
test("ungeschehen -> ungescheh", function() {deepEqual( Stem("ungeschehen"), "ungescheh");});
test("ungeschicklichkeit -> ungeschick", function() {deepEqual( Stem("ungeschicklichkeit"), "ungeschick");});
test("ungeschickt -> ungeschickt", function() {deepEqual( Stem("ungeschickt"), "ungeschickt");});
test("ungeschickte -> ungeschickt", function() {deepEqual( Stem("ungeschickte"), "ungeschickt");});
test("ungeschickten -> ungeschickt", function() {deepEqual( Stem("ungeschickten"), "ungeschickt");});
test("ungeschickterweise -> ungeschickterweis", function() {deepEqual( Stem("ungeschickterweise"), "ungeschickterweis");});
test("ungeschicktes -> ungeschickt", function() {deepEqual( Stem("ungeschicktes"), "ungeschickt");});
test("ungeschoren -> ungeschor", function() {deepEqual( Stem("ungeschoren"), "ungeschor");});
test("ungeschorene -> ungeschor", function() {deepEqual( Stem("ungeschorene"), "ungeschor");});
test("ungesehen -> ungeseh", function() {deepEqual( Stem("ungesehen"), "ungeseh");});
test("ungesehene -> ungeseh", function() {deepEqual( Stem("ungesehene"), "ungeseh");});
test("ungesetzliche -> ungesetz", function() {deepEqual( Stem("ungesetzliche"), "ungesetz");});
test("ungestört -> ungestort", function() {deepEqual( Stem("ungestört"), "ungestort");});
test("ungestörter -> ungestort", function() {deepEqual( Stem("ungestörter"), "ungestort");});
test("ungestörtheit -> ungestort", function() {deepEqual( Stem("ungestörtheit"), "ungestort");});
test("ungestraften -> ungestraft", function() {deepEqual( Stem("ungestraften"), "ungestraft");});
test("ungestüm -> ungestum", function() {deepEqual( Stem("ungestüm"), "ungestum");});
test("ungestüme -> ungestum", function() {deepEqual( Stem("ungestüme"), "ungestum");});
test("ungestümes -> ungestum", function() {deepEqual( Stem("ungestümes"), "ungestum");});
test("ungesungenen -> unges", function() {deepEqual( Stem("ungesungenen"), "unges");});
test("ungeteilt -> ungeteilt", function() {deepEqual( Stem("ungeteilt"), "ungeteilt");});
test("ungetrübte -> ungetrubt", function() {deepEqual( Stem("ungetrübte"), "ungetrubt");});
test("ungetüm -> ungetum", function() {deepEqual( Stem("ungetüm"), "ungetum");});
test("ungeübten -> ungeubt", function() {deepEqual( Stem("ungeübten"), "ungeubt");});
test("ungewiss -> ungewiss", function() {deepEqual( Stem("ungewiss"), "ungewiss");});
test("ungewiß -> ungewiss", function() {deepEqual( Stem("ungewiß"), "ungewiss");});
test("ungewisser -> ungewiss", function() {deepEqual( Stem("ungewisser"), "ungewiss");});
test("ungewissheit -> ungewiss", function() {deepEqual( Stem("ungewissheit"), "ungewiss");});
test("ungewöhnlich -> ungewohn", function() {deepEqual( Stem("ungewöhnlich"), "ungewohn");});
test("ungewöhnliche -> ungewohn", function() {deepEqual( Stem("ungewöhnliche"), "ungewohn");});
test("ungewöhnlichem -> ungewohn", function() {deepEqual( Stem("ungewöhnlichem"), "ungewohn");});
test("ungewöhnlichen -> ungewohn", function() {deepEqual( Stem("ungewöhnlichen"), "ungewohn");});
test("ungewöhnliches -> ungewohn", function() {deepEqual( Stem("ungewöhnliches"), "ungewohn");});
test("ungewohnt -> ungewohnt", function() {deepEqual( Stem("ungewohnt"), "ungewohnt");});
test("ungewohnte -> ungewohnt", function() {deepEqual( Stem("ungewohnte"), "ungewohnt");});
test("ungewohnten -> ungewohnt", function() {deepEqual( Stem("ungewohnten"), "ungewohnt");});
test("ungezählten -> ungezahlt", function() {deepEqual( Stem("ungezählten"), "ungezahlt");});
test("ungeziefer -> ungezief", function() {deepEqual( Stem("ungeziefer"), "ungezief");});
test("ungeziefers -> ungezief", function() {deepEqual( Stem("ungeziefers"), "ungezief");});
test("ungezweifelt -> ungezweifelt", function() {deepEqual( Stem("ungezweifelt"), "ungezweifelt");});
test("ungezweifelten -> ungezweifelt", function() {deepEqual( Stem("ungezweifelten"), "ungezweifelt");});
test("unglaube -> unglaub", function() {deepEqual( Stem("unglaube"), "unglaub");});
test("unglauben -> unglaub", function() {deepEqual( Stem("unglauben"), "unglaub");});
test("unglaubens -> unglaub", function() {deepEqual( Stem("unglaubens"), "unglaub");});
test("ungläubig -> unglaub", function() {deepEqual( Stem("ungläubig"), "unglaub");});
test("unglaublich -> unglaub", function() {deepEqual( Stem("unglaublich"), "unglaub");});
test("unglaubliche -> unglaub", function() {deepEqual( Stem("unglaubliche"), "unglaub");});
test("unglaublichen -> unglaub", function() {deepEqual( Stem("unglaublichen"), "unglaub");});
test("unglaubliches -> unglaub", function() {deepEqual( Stem("unglaubliches"), "unglaub");});
test("unglaubwürdige -> unglaubwurd", function() {deepEqual( Stem("unglaubwürdige"), "unglaubwurd");});
test("ungleich -> ungleich", function() {deepEqual( Stem("ungleich"), "ungleich");});
test("ungleichartig -> ungleichart", function() {deepEqual( Stem("ungleichartig"), "ungleichart");});
test("ungleichartigen -> ungleichart", function() {deepEqual( Stem("ungleichartigen"), "ungleichart");});
test("ungleichartiger -> ungleichart", function() {deepEqual( Stem("ungleichartiger"), "ungleichart");});
test("ungleichartigkeit -> ungleichart", function() {deepEqual( Stem("ungleichartigkeit"), "ungleichart");});
test("ungleiche -> ungleich", function() {deepEqual( Stem("ungleiche"), "ungleich");});
test("ungleichen -> ungleich", function() {deepEqual( Stem("ungleichen"), "ungleich");});
test("ungleichheit -> ungleich", function() {deepEqual( Stem("ungleichheit"), "ungleich");});
test("unglück -> ungluck", function() {deepEqual( Stem("unglück"), "ungluck");});
test("unglückes -> ungluck", function() {deepEqual( Stem("unglückes"), "ungluck");});
test("unglücklich -> ungluck", function() {deepEqual( Stem("unglücklich"), "ungluck");});
test("unglückliche -> ungluck", function() {deepEqual( Stem("unglückliche"), "ungluck");});
test("unglücklichen -> ungluck", function() {deepEqual( Stem("unglücklichen"), "ungluck");});
test("unglücklicher -> ungluck", function() {deepEqual( Stem("unglücklicher"), "ungluck");});
test("unglücklicherweise -> unglucklicherweis", function() {deepEqual( Stem("unglücklicherweise"), "unglucklicherweis");});
test("unglücks -> ungluck", function() {deepEqual( Stem("unglücks"), "ungluck");});
test("unglückseligen -> unglucksel", function() {deepEqual( Stem("unglückseligen"), "unglucksel");});
test("unglücksfällen -> unglucksfall", function() {deepEqual( Stem("unglücksfällen"), "unglucksfall");});
test("unglücksfelde -> unglucksfeld", function() {deepEqual( Stem("unglücksfelde"), "unglucksfeld");});
test("unglücksstätte -> unglucksstatt", function() {deepEqual( Stem("unglücksstätte"), "unglucksstatt");});
test("ungünstig -> ungunst", function() {deepEqual( Stem("ungünstig"), "ungunst");});
test("ungünstigen -> ungunst", function() {deepEqual( Stem("ungünstigen"), "ungunst");});
test("ungut -> ungut", function() {deepEqual( Stem("ungut"), "ungut");});
test("unguten -> ungut", function() {deepEqual( Stem("unguten"), "ungut");});
test("ungwohnte -> ungwohnt", function() {deepEqual( Stem("ungwohnte"), "ungwohnt");});
test("unheil -> unheil", function() {deepEqual( Stem("unheil"), "unheil");});
test("unheilbar -> unheilbar", function() {deepEqual( Stem("unheilbar"), "unheilbar");});
test("unheilig -> unheil", function() {deepEqual( Stem("unheilig"), "unheil");});
test("unheilige -> unheil", function() {deepEqual( Stem("unheilige"), "unheil");});
test("unheiligem -> unheil", function() {deepEqual( Stem("unheiligem"), "unheil");});
test("unheiligen -> unheil", function() {deepEqual( Stem("unheiligen"), "unheil");});
test("unheiliges -> unheil", function() {deepEqual( Stem("unheiliges"), "unheil");});
test("unheilvolle -> unheilvoll", function() {deepEqual( Stem("unheilvolle"), "unheilvoll");});
test("unheimlich -> unheim", function() {deepEqual( Stem("unheimlich"), "unheim");});
test("unheimliche -> unheim", function() {deepEqual( Stem("unheimliche"), "unheim");});
test("unheimlichen -> unheim", function() {deepEqual( Stem("unheimlichen"), "unheim");});
test("unheimliches -> unheim", function() {deepEqual( Stem("unheimliches"), "unheim");});
test("unheimlichsten -> unheim", function() {deepEqual( Stem("unheimlichsten"), "unheim");});
test("unhöflich -> unhof", function() {deepEqual( Stem("unhöflich"), "unhof");});
test("unhöflichen -> unhof", function() {deepEqual( Stem("unhöflichen"), "unhof");});
test("unhöfliches -> unhof", function() {deepEqual( Stem("unhöfliches"), "unhof");});
test("unhöflichkeit -> unhof", function() {deepEqual( Stem("unhöflichkeit"), "unhof");});
test("unhold -> unhold", function() {deepEqual( Stem("unhold"), "unhold");});
test("unholdes -> unhold", function() {deepEqual( Stem("unholdes"), "unhold");});
test("unhörbar -> unhorbar", function() {deepEqual( Stem("unhörbar"), "unhorbar");});
test("unifomierter -> unifomiert", function() {deepEqual( Stem("unifomierter"), "unifomiert");});
test("uniform -> uniform", function() {deepEqual( Stem("uniform"), "uniform");});
test("uniformen -> uniform", function() {deepEqual( Stem("uniformen"), "uniform");});
test("uniformierten -> uniformiert", function() {deepEqual( Stem("uniformierten"), "uniformiert");});
test("uninteressiert -> uninteressiert", function() {deepEqual( Stem("uninteressiert"), "uninteressiert");});
test("union -> union", function() {deepEqual( Stem("union"), "union");});
test("uniondie -> uniondi", function() {deepEqual( Stem("uniondie"), "uniondi");});
test("universalis -> universalis", function() {deepEqual( Stem("universalis"), "universalis");});
test("universaliter -> universalit", function() {deepEqual( Stem("universaliter"), "universalit");});
test("universalsprache -> universalsprach", function() {deepEqual( Stem("universalsprache"), "universalsprach");});
test("universelle -> universell", function() {deepEqual( Stem("universelle"), "universell");});
test("universellen -> universell", function() {deepEqual( Stem("universellen"), "universell");});
test("universeller -> universell", function() {deepEqual( Stem("universeller"), "universell");});
test("universelles -> universell", function() {deepEqual( Stem("universelles"), "universell");});
test("universität -> universitat", function() {deepEqual( Stem("universität"), "universitat");});
test("universum -> universum", function() {deepEqual( Stem("universum"), "universum");});
test("unjewöhnliche -> unjewohn", function() {deepEqual( Stem("unjewöhnliche"), "unjewohn");});
test("unken -> unk", function() {deepEqual( Stem("unken"), "unk");});
test("unkenntnis -> unkenntnis", function() {deepEqual( Stem("unkenntnis"), "unkenntnis");});
test("unkindlichkeit -> unkind", function() {deepEqual( Stem("unkindlichkeit"), "unkind");});
test("unklar -> unklar", function() {deepEqual( Stem("unklar"), "unklar");});
test("unklug -> unklug", function() {deepEqual( Stem("unklug"), "unklug");});
test("unkluge -> unklug", function() {deepEqual( Stem("unkluge"), "unklug");});
test("unkonventionell -> unkonventionell", function() {deepEqual( Stem("unkonventionell"), "unkonventionell");});
test("unkonventionellen -> unkonventionell", function() {deepEqual( Stem("unkonventionellen"), "unkonventionell");});
test("unkosten -> unkost", function() {deepEqual( Stem("unkosten"), "unkost");});
test("unkraut -> unkraut", function() {deepEqual( Stem("unkraut"), "unkraut");});
test("unkräutern -> unkraut", function() {deepEqual( Stem("unkräutern"), "unkraut");});
test("unkriegerisches -> unkrieger", function() {deepEqual( Stem("unkriegerisches"), "unkrieger");});
test("unkultivierte -> unkultiviert", function() {deepEqual( Stem("unkultivierte"), "unkultiviert");});
test("unkunde -> unkund", function() {deepEqual( Stem("unkunde"), "unkund");});
test("unlauterkeit -> unlauter", function() {deepEqual( Stem("unlauterkeit"), "unlauter");});
test("unleugbar -> unleugbar", function() {deepEqual( Stem("unleugbar"), "unleugbar");});
test("unleugbare -> unleugbar", function() {deepEqual( Stem("unleugbare"), "unleugbar");});
test("unliebenswürdigen -> unliebenswurd", function() {deepEqual( Stem("unliebenswürdigen"), "unliebenswurd");});
test("unliebliche -> unlieb", function() {deepEqual( Stem("unliebliche"), "unlieb");});
test("unliebsamen -> unliebsam", function() {deepEqual( Stem("unliebsamen"), "unliebsam");});
test("unlust -> unlust", function() {deepEqual( Stem("unlust"), "unlust");});
test("unlustigen -> unlust", function() {deepEqual( Stem("unlustigen"), "unlust");});
test("unmännlich -> unmann", function() {deepEqual( Stem("unmännlich"), "unmann");});
test("unmässig -> unmass", function() {deepEqual( Stem("unmässig"), "unmass");});
test("unmässige -> unmass", function() {deepEqual( Stem("unmässige"), "unmass");});
test("unmenschen -> unmensch", function() {deepEqual( Stem("unmenschen"), "unmensch");});
test("unmenschlich -> unmensch", function() {deepEqual( Stem("unmenschlich"), "unmensch");});
test("unmenschliche -> unmensch", function() {deepEqual( Stem("unmenschliche"), "unmensch");});
test("unmenschlichste -> unmensch", function() {deepEqual( Stem("unmenschlichste"), "unmensch");});
test("unmerklich -> unmerk", function() {deepEqual( Stem("unmerklich"), "unmerk");});
test("unmittelbar -> unmittelbar", function() {deepEqual( Stem("unmittelbar"), "unmittelbar");});
test("unmittelbare -> unmittelbar", function() {deepEqual( Stem("unmittelbare"), "unmittelbar");});
test("unmittelbaren -> unmittelbar", function() {deepEqual( Stem("unmittelbaren"), "unmittelbar");});
test("unmittelbarer -> unmittelbar", function() {deepEqual( Stem("unmittelbarer"), "unmittelbar");});
test("unmittelbares -> unmittelbar", function() {deepEqual( Stem("unmittelbares"), "unmittelbar");});
test("unmittelbarste -> unmittelbarst", function() {deepEqual( Stem("unmittelbarste"), "unmittelbarst");});
test("unmöglich -> unmog", function() {deepEqual( Stem("unmöglich"), "unmog");});
test("unmögliche -> unmog", function() {deepEqual( Stem("unmögliche"), "unmog");});
test("unmöglicher -> unmog", function() {deepEqual( Stem("unmöglicher"), "unmog");});
test("unmögliches -> unmog", function() {deepEqual( Stem("unmögliches"), "unmog");});
test("unmöglichkeit -> unmog", function() {deepEqual( Stem("unmöglichkeit"), "unmog");});
test("unmut -> unmut", function() {deepEqual( Stem("unmut"), "unmut");});
test("unmutig -> unmut", function() {deepEqual( Stem("unmutig"), "unmut");});
test("unmutigen -> unmut", function() {deepEqual( Stem("unmutigen"), "unmut");});
test("unmutiges -> unmut", function() {deepEqual( Stem("unmutiges"), "unmut");});
test("unnachahmlich -> unnachahm", function() {deepEqual( Stem("unnachahmlich"), "unnachahm");});
test("unnachlasslich -> unnachlass", function() {deepEqual( Stem("unnachlasslich"), "unnachlass");});
test("unnachlasslichen -> unnachlass", function() {deepEqual( Stem("unnachlasslichen"), "unnachlass");});
test("unnachsichtlich -> unnachsicht", function() {deepEqual( Stem("unnachsichtlich"), "unnachsicht");});
test("unnachsichtlichen -> unnachsicht", function() {deepEqual( Stem("unnachsichtlichen"), "unnachsicht");});
test("unnahbar -> unnahbar", function() {deepEqual( Stem("unnahbar"), "unnahbar");});
test("unnatürlich -> unnatur", function() {deepEqual( Stem("unnatürlich"), "unnatur");});
test("unnötig -> unnot", function() {deepEqual( Stem("unnötig"), "unnot");});
test("unnötige -> unnot", function() {deepEqual( Stem("unnötige"), "unnot");});
test("unnötigerweise -> unnotigerweis", function() {deepEqual( Stem("unnötigerweise"), "unnotigerweis");});
test("unnütz -> unnutz", function() {deepEqual( Stem("unnütz"), "unnutz");});
test("unnütze -> unnutz", function() {deepEqual( Stem("unnütze"), "unnutz");});
test("unnützen -> unnutz", function() {deepEqual( Stem("unnützen"), "unnutz");});
test("unnützes -> unnutz", function() {deepEqual( Stem("unnützes"), "unnutz");});
test("unordentlich -> unordent", function() {deepEqual( Stem("unordentlich"), "unordent");});
test("unordentliche -> unordent", function() {deepEqual( Stem("unordentliche"), "unordent");});
test("unordnung -> unordn", function() {deepEqual( Stem("unordnung"), "unordn");});
test("unorthodoxe -> unorthodox", function() {deepEqual( Stem("unorthodoxe"), "unorthodox");});
test("unparteiischen -> unpartei", function() {deepEqual( Stem("unparteiischen"), "unpartei");});
test("unparteiischer -> unpartei", function() {deepEqual( Stem("unparteiischer"), "unpartei");});
test("unparteilichkeit -> unpartei", function() {deepEqual( Stem("unparteilichkeit"), "unpartei");});
test("unrasiert -> unrasiert", function() {deepEqual( Stem("unrasiert"), "unrasiert");});
test("unrecht -> unrecht", function() {deepEqual( Stem("unrecht"), "unrecht");});
test("unrechte -> unrecht", function() {deepEqual( Stem("unrechte"), "unrecht");});
test("unrechten -> unrecht", function() {deepEqual( Stem("unrechten"), "unrecht");});
test("unrechtes -> unrecht", function() {deepEqual( Stem("unrechtes"), "unrecht");});
test("unrechtleider -> unrechtleid", function() {deepEqual( Stem("unrechtleider"), "unrechtleid");});
test("unrechtliche -> unrecht", function() {deepEqual( Stem("unrechtliche"), "unrecht");});
test("unrechtliches -> unrecht", function() {deepEqual( Stem("unrechtliches"), "unrecht");});
test("unrechtmässig -> unrechtmass", function() {deepEqual( Stem("unrechtmässig"), "unrechtmass");});
test("unrechtmässige -> unrechtmass", function() {deepEqual( Stem("unrechtmässige"), "unrechtmass");});
test("unrechts -> unrecht", function() {deepEqual( Stem("unrechts"), "unrecht");});
test("unredliche -> unred", function() {deepEqual( Stem("unredliche"), "unred");});
test("unredlichen -> unred", function() {deepEqual( Stem("unredlichen"), "unred");});
test("unredlichkeit -> unred", function() {deepEqual( Stem("unredlichkeit"), "unred");});
test("unregelmässigkeit -> unregelmass", function() {deepEqual( Stem("unregelmässigkeit"), "unregelmass");});
test("unregelmässigkeiten -> unregelmass", function() {deepEqual( Stem("unregelmässigkeiten"), "unregelmass");});
test("unreif -> unreif", function() {deepEqual( Stem("unreif"), "unreif");});
test("unreifen -> unreif", function() {deepEqual( Stem("unreifen"), "unreif");});
test("unrein -> unrein", function() {deepEqual( Stem("unrein"), "unrein");});
test("unreine -> unrein", function() {deepEqual( Stem("unreine"), "unrein");});
test("unreinem -> unrein", function() {deepEqual( Stem("unreinem"), "unrein");});
test("unreinen -> unrein", function() {deepEqual( Stem("unreinen"), "unrein");});
test("unreiner -> unrein", function() {deepEqual( Stem("unreiner"), "unrein");});
test("unreines -> unrein", function() {deepEqual( Stem("unreines"), "unrein");});
test("unreinigkeit -> unrein", function() {deepEqual( Stem("unreinigkeit"), "unrein");});
test("unrichtig -> unricht", function() {deepEqual( Stem("unrichtig"), "unricht");});
test("unruh -> unruh", function() {deepEqual( Stem("unruh"), "unruh");});
test("unruhe -> unruh", function() {deepEqual( Stem("unruhe"), "unruh");});
test("unruhig -> unruh", function() {deepEqual( Stem("unruhig"), "unruh");});
test("unruhige -> unruh", function() {deepEqual( Stem("unruhige"), "unruh");});
test("unruhigen -> unruh", function() {deepEqual( Stem("unruhigen"), "unruh");});
test("uns -> uns", function() {deepEqual( Stem("uns"), "uns");});
test("unsäglich -> unsag", function() {deepEqual( Stem("unsäglich"), "unsag");});
test("unsägliche -> unsag", function() {deepEqual( Stem("unsägliche"), "unsag");});
test("unsäglicher -> unsag", function() {deepEqual( Stem("unsäglicher"), "unsag");});
test("unsaubere -> unsaub", function() {deepEqual( Stem("unsaubere"), "unsaub");});
test("unsauberen -> unsaub", function() {deepEqual( Stem("unsauberen"), "unsaub");});
test("unsauberer -> unsaub", function() {deepEqual( Stem("unsauberer"), "unsaub");});
test("unsauberes -> unsaub", function() {deepEqual( Stem("unsauberes"), "unsaub");});
test("unsauberkeiten -> unsauber", function() {deepEqual( Stem("unsauberkeiten"), "unsauber");});
test("unsaubern -> unsaub", function() {deepEqual( Stem("unsaubern"), "unsaub");});
test("unschädlich -> unschad", function() {deepEqual( Stem("unschädlich"), "unschad");});
test("unschädlichen -> unschad", function() {deepEqual( Stem("unschädlichen"), "unschad");});
test("unscheinbare -> unscheinbar", function() {deepEqual( Stem("unscheinbare"), "unscheinbar");});
test("unscheinbaren -> unscheinbar", function() {deepEqual( Stem("unscheinbaren"), "unscheinbar");});
test("unscheinbares -> unscheinbar", function() {deepEqual( Stem("unscheinbares"), "unscheinbar");});
test("unscheinbarste -> unscheinbarst", function() {deepEqual( Stem("unscheinbarste"), "unscheinbarst");});
test("unschicklich -> unschick", function() {deepEqual( Stem("unschicklich"), "unschick");});
test("unschicklichkeiten -> unschick", function() {deepEqual( Stem("unschicklichkeiten"), "unschick");});
test("unschlüssig -> unschluss", function() {deepEqual( Stem("unschlüssig"), "unschluss");});
test("unschön -> unschon", function() {deepEqual( Stem("unschön"), "unschon");});
test("unschöne -> unschon", function() {deepEqual( Stem("unschöne"), "unschon");});
test("unschönen -> unschon", function() {deepEqual( Stem("unschönen"), "unschon");});
test("unschuld -> unschuld", function() {deepEqual( Stem("unschuld"), "unschuld");});
test("unschuldig -> unschuld", function() {deepEqual( Stem("unschuldig"), "unschuld");});
test("unschuldige -> unschuld", function() {deepEqual( Stem("unschuldige"), "unschuld");});
test("unschuldigen -> unschuld", function() {deepEqual( Stem("unschuldigen"), "unschuld");});
test("unschuldiger -> unschuld", function() {deepEqual( Stem("unschuldiger"), "unschuld");});
test("unschuldigeren -> unschuld", function() {deepEqual( Stem("unschuldigeren"), "unschuld");});
test("unschuldiges -> unschuld", function() {deepEqual( Stem("unschuldiges"), "unschuld");});
test("unselige -> unsel", function() {deepEqual( Stem("unselige"), "unsel");});
test("unseligkeit -> unsel", function() {deepEqual( Stem("unseligkeit"), "unsel");});
test("unser -> uns", function() {deepEqual( Stem("unser"), "uns");});
test("unsere -> uns", function() {deepEqual( Stem("unsere"), "uns");});
test("unsereinen -> unserein", function() {deepEqual( Stem("unsereinen"), "unserein");});
test("unsereiner -> unserein", function() {deepEqual( Stem("unsereiner"), "unserein");});
test("unserem -> uns", function() {deepEqual( Stem("unserem"), "uns");});
test("unseren -> uns", function() {deepEqual( Stem("unseren"), "uns");});
test("unserer -> uns", function() {deepEqual( Stem("unserer"), "uns");});
test("unseres -> uns", function() {deepEqual( Stem("unseres"), "uns");});
test("unseresgleichen -> unseresgleich", function() {deepEqual( Stem("unseresgleichen"), "unseresgleich");});
test("unserm -> unserm", function() {deepEqual( Stem("unserm"), "unserm");});
test("unsern -> uns", function() {deepEqual( Stem("unsern"), "uns");});
test("unsers -> uns", function() {deepEqual( Stem("unsers"), "uns");});
test("unsicher -> unsich", function() {deepEqual( Stem("unsicher"), "unsich");});
test("unsicherer -> unsich", function() {deepEqual( Stem("unsicherer"), "unsich");});
test("unsicherheit -> unsich", function() {deepEqual( Stem("unsicherheit"), "unsich");});
test("unsichern -> unsich", function() {deepEqual( Stem("unsichern"), "unsich");});
test("unsichtbar -> unsichtbar", function() {deepEqual( Stem("unsichtbar"), "unsichtbar");});
test("unsichtbaren -> unsichtbar", function() {deepEqual( Stem("unsichtbaren"), "unsichtbar");});
test("unsichtbarer -> unsichtbar", function() {deepEqual( Stem("unsichtbarer"), "unsichtbar");});
test("unsinn -> unsinn", function() {deepEqual( Stem("unsinn"), "unsinn");});
test("unsinnig -> unsinn", function() {deepEqual( Stem("unsinnig"), "unsinn");});
test("unsinnige -> unsinn", function() {deepEqual( Stem("unsinnige"), "unsinn");});
test("unsinnigen -> unsinn", function() {deepEqual( Stem("unsinnigen"), "unsinn");});
test("unsinniger -> unsinn", function() {deepEqual( Stem("unsinniger"), "unsinn");});
test("unsinniges -> unsinn", function() {deepEqual( Stem("unsinniges"), "unsinn");});
test("unsinnigkeit -> unsinn", function() {deepEqual( Stem("unsinnigkeit"), "unsinn");});
test("unsinnigkeiten -> unsinn", function() {deepEqual( Stem("unsinnigkeiten"), "unsinn");});
test("unsinnigsten -> unsinn", function() {deepEqual( Stem("unsinnigsten"), "unsinn");});
test("unsittlich -> unsitt", function() {deepEqual( Stem("unsittlich"), "unsitt");});
test("unsittliche -> unsitt", function() {deepEqual( Stem("unsittliche"), "unsitt");});
test("unsittlicher -> unsitt", function() {deepEqual( Stem("unsittlicher"), "unsitt");});
test("unsittlichkeit -> unsitt", function() {deepEqual( Stem("unsittlichkeit"), "unsitt");});
test("unsre -> unsr", function() {deepEqual( Stem("unsre"), "unsr");});
test("unsrer -> unsr", function() {deepEqual( Stem("unsrer"), "unsr");});
test("unsres -> unsr", function() {deepEqual( Stem("unsres"), "unsr");});
test("unsrige -> unsrig", function() {deepEqual( Stem("unsrige"), "unsrig");});
test("unstäte -> unstat", function() {deepEqual( Stem("unstäte"), "unstat");});
test("unsterblich -> unsterb", function() {deepEqual( Stem("unsterblich"), "unsterb");});
test("unsterbliche -> unsterb", function() {deepEqual( Stem("unsterbliche"), "unsterb");});
test("unsterblichkeit -> unsterb", function() {deepEqual( Stem("unsterblichkeit"), "unsterb");});
test("unstern -> unst", function() {deepEqual( Stem("unstern"), "unst");});
test("unsterns -> unstern", function() {deepEqual( Stem("unsterns"), "unstern");});
test("unstet -> unstet", function() {deepEqual( Stem("unstet"), "unstet");});
test("unstetes -> unstet", function() {deepEqual( Stem("unstetes"), "unstet");});
test("unsträflich -> unstraf", function() {deepEqual( Stem("unsträflich"), "unstraf");});
test("unstreitig -> unstreit", function() {deepEqual( Stem("unstreitig"), "unstreit");});
test("unsympathisch -> unsympath", function() {deepEqual( Stem("unsympathisch"), "unsympath");});
test("untat -> untat", function() {deepEqual( Stem("untat"), "untat");});
test("untätig -> untat", function() {deepEqual( Stem("untätig"), "untat");});
test("untauglich -> untaug", function() {deepEqual( Stem("untauglich"), "untaug");});
test("untaugliche -> untaug", function() {deepEqual( Stem("untaugliche"), "untaug");});
test("unteilbar -> unteilbar", function() {deepEqual( Stem("unteilbar"), "unteilbar");});
test("unteilbare -> unteilbar", function() {deepEqual( Stem("unteilbare"), "unteilbar");});
test("unteilbares -> unteilbar", function() {deepEqual( Stem("unteilbares"), "unteilbar");});
test("unten -> unt", function() {deepEqual( Stem("unten"), "unt");});
test("unter -> unt", function() {deepEqual( Stem("unter"), "unt");});
test("unterabteilung -> unterabteil", function() {deepEqual( Stem("unterabteilung"), "unterabteil");});
test("unterarten -> unterart", function() {deepEqual( Stem("unterarten"), "unterart");});
test("unterbezahlt -> unterbezahlt", function() {deepEqual( Stem("unterbezahlt"), "unterbezahlt");});
test("unterbrach -> unterbrach", function() {deepEqual( Stem("unterbrach"), "unterbrach");});
test("unterbrachen -> unterbrach", function() {deepEqual( Stem("unterbrachen"), "unterbrach");});
test("unterbreche -> unterbrech", function() {deepEqual( Stem("unterbreche"), "unterbrech");});
test("unterbrechend -> unterbrech", function() {deepEqual( Stem("unterbrechend"), "unterbrech");});
test("unterbreiten -> unterbreit", function() {deepEqual( Stem("unterbreiten"), "unterbreit");});
test("unterbringen -> unterbring", function() {deepEqual( Stem("unterbringen"), "unterbring");});
test("unterbrochen -> unterbroch", function() {deepEqual( Stem("unterbrochen"), "unterbroch");});
test("unterbrochenen -> unterbroch", function() {deepEqual( Stem("unterbrochenen"), "unterbroch");});
test("unterdessen -> unterdess", function() {deepEqual( Stem("unterdessen"), "unterdess");});
test("unterdrücken -> unterdruck", function() {deepEqual( Stem("unterdrücken"), "unterdruck");});
test("unterdrückend -> unterdruck", function() {deepEqual( Stem("unterdrückend"), "unterdruck");});
test("unterdrückt -> unterdruckt", function() {deepEqual( Stem("unterdrückt"), "unterdruckt");});
test("unterdrückte -> unterdruckt", function() {deepEqual( Stem("unterdrückte"), "unterdruckt");});
test("unterdrückten -> unterdruckt", function() {deepEqual( Stem("unterdrückten"), "unterdruckt");});
test("unterdrückter -> unterdruckt", function() {deepEqual( Stem("unterdrückter"), "unterdruckt");});
test("unterdrücktes -> unterdruckt", function() {deepEqual( Stem("unterdrücktes"), "unterdruckt");});
test("unterdrückung -> unterdruck", function() {deepEqual( Stem("unterdrückung"), "unterdruck");});
test("unterdrückungen -> unterdruck", function() {deepEqual( Stem("unterdrückungen"), "unterdruck");});
test("untere -> unt", function() {deepEqual( Stem("untere"), "unt");});
test("untereinander -> untereinand", function() {deepEqual( Stem("untereinander"), "untereinand");});
test("unterem -> unt", function() {deepEqual( Stem("unterem"), "unt");});
test("unteren -> unt", function() {deepEqual( Stem("unteren"), "unt");});
test("unteres -> unt", function() {deepEqual( Stem("unteres"), "unt");});
test("unterfand -> unterfand", function() {deepEqual( Stem("unterfand"), "unterfand");});
test("unterfangen -> unterfang", function() {deepEqual( Stem("unterfangen"), "unterfang");});
test("untergang -> untergang", function() {deepEqual( Stem("untergang"), "untergang");});
test("untergange -> untergang", function() {deepEqual( Stem("untergange"), "untergang");});
test("unterganges -> untergang", function() {deepEqual( Stem("unterganges"), "untergang");});
test("untergangs -> untergang", function() {deepEqual( Stem("untergangs"), "untergang");});
test("untergebene -> untergeb", function() {deepEqual( Stem("untergebene"), "untergeb");});
test("untergebenen -> untergeb", function() {deepEqual( Stem("untergebenen"), "untergeb");});
test("untergebenheit -> untergeb", function() {deepEqual( Stem("untergebenheit"), "untergeb");});
test("untergebracht -> untergebracht", function() {deepEqual( Stem("untergebracht"), "untergebracht");});
test("untergegangen -> untergegang", function() {deepEqual( Stem("untergegangen"), "untergegang");});
test("untergehen -> untergeh", function() {deepEqual( Stem("untergehen"), "untergeh");});
test("untergehende -> untergeh", function() {deepEqual( Stem("untergehende"), "untergeh");});
test("untergeht -> untergeht", function() {deepEqual( Stem("untergeht"), "untergeht");});
test("untergekommen -> untergekomm", function() {deepEqual( Stem("untergekommen"), "untergekomm");});
test("untergelegt -> untergelegt", function() {deepEqual( Stem("untergelegt"), "untergelegt");});
test("untergeordnet -> untergeordnet", function() {deepEqual( Stem("untergeordnet"), "untergeordnet");});
test("untergeordnete -> untergeordnet", function() {deepEqual( Stem("untergeordnete"), "untergeordnet");});
test("untergeordneten -> untergeordnet", function() {deepEqual( Stem("untergeordneten"), "untergeordnet");});
test("untergeordneter -> untergeordnet", function() {deepEqual( Stem("untergeordneter"), "untergeordnet");});
test("untergeordnetere -> untergeordnet", function() {deepEqual( Stem("untergeordnetere"), "untergeordnet");});
test("untergeschoben -> untergeschob", function() {deepEqual( Stem("untergeschoben"), "untergeschob");});
test("unterging -> unterging", function() {deepEqual( Stem("unterging"), "unterging");});
test("unterginge -> unterging", function() {deepEqual( Stem("unterginge"), "unterging");});
test("untergingen -> unterging", function() {deepEqual( Stem("untergingen"), "unterging");});
test("unterhalb -> unterhalb", function() {deepEqual( Stem("unterhalb"), "unterhalb");});
test("unterhält -> unterhalt", function() {deepEqual( Stem("unterhält"), "unterhalt");});
test("unterhalten -> unterhalt", function() {deepEqual( Stem("unterhalten"), "unterhalt");});
test("unterhaltung -> unterhalt", function() {deepEqual( Stem("unterhaltung"), "unterhalt");});
test("unterhaltungen -> unterhalt", function() {deepEqual( Stem("unterhaltungen"), "unterhalt");});
test("unterhaltungsabteilung -> unterhaltungsabteil", function() {deepEqual( Stem("unterhaltungsabteilung"), "unterhaltungsabteil");});
test("unterhaltungsminute -> unterhaltungsminut", function() {deepEqual( Stem("unterhaltungsminute"), "unterhaltungsminut");});
test("unterhaltungsspieles -> unterhaltungsspiel", function() {deepEqual( Stem("unterhaltungsspieles"), "unterhaltungsspiel");});
test("unterhändlern -> unterhandl", function() {deepEqual( Stem("unterhändlern"), "unterhandl");});
test("unterhandlungen -> unterhandl", function() {deepEqual( Stem("unterhandlungen"), "unterhandl");});
test("unterhielt -> unterhielt", function() {deepEqual( Stem("unterhielt"), "unterhielt");});
test("unterhielten -> unterhielt", function() {deepEqual( Stem("unterhielten"), "unterhielt");});
test("unterichtsstunden -> unterichtsstund", function() {deepEqual( Stem("unterichtsstunden"), "unterichtsstund");});
test("unterjochen -> unterjoch", function() {deepEqual( Stem("unterjochen"), "unterjoch");});
test("unterjocht -> unterjocht", function() {deepEqual( Stem("unterjocht"), "unterjocht");});
test("unterjochung -> unterjoch", function() {deepEqual( Stem("unterjochung"), "unterjoch");});
test("unterjochungsbestreben -> unterjochungsbestreb", function() {deepEqual( Stem("unterjochungsbestreben"), "unterjochungsbestreb");});
test("unterkiefer -> unterkief", function() {deepEqual( Stem("unterkiefer"), "unterkief");});
test("unterköchen -> unterkoch", function() {deepEqual( Stem("unterköchen"), "unterkoch");});
test("unterkommen -> unterkomm", function() {deepEqual( Stem("unterkommen"), "unterkomm");});
test("unterkommst -> unterkomm", function() {deepEqual( Stem("unterkommst"), "unterkomm");});
test("unterlage -> unterlag", function() {deepEqual( Stem("unterlage"), "unterlag");});
test("unterlagen -> unterlag", function() {deepEqual( Stem("unterlagen"), "unterlag");});
test("unterlass -> unterlass", function() {deepEqual( Stem("unterlass"), "unterlass");});
test("unterlaß -> unterlass", function() {deepEqual( Stem("unterlaß"), "unterlass");});
test("unterlassen -> unterlass", function() {deepEqual( Stem("unterlassen"), "unterlass");});
test("unterlassest -> unterlass", function() {deepEqual( Stem("unterlassest"), "unterlass");});
test("unterlaufen -> unterlauf", function() {deepEqual( Stem("unterlaufen"), "unterlauf");});
test("unterlegen -> unterleg", function() {deepEqual( Stem("unterlegen"), "unterleg");});
test("unterlegt -> unterlegt", function() {deepEqual( Stem("unterlegt"), "unterlegt");});
test("unterlegten -> unterlegt", function() {deepEqual( Stem("unterlegten"), "unterlegt");});
test("unterlehrer -> unterlehr", function() {deepEqual( Stem("unterlehrer"), "unterlehr");});
test("unterliege -> unterlieg", function() {deepEqual( Stem("unterliege"), "unterlieg");});
test("unterliegen -> unterlieg", function() {deepEqual( Stem("unterliegen"), "unterlieg");});
test("unterliegt -> unterliegt", function() {deepEqual( Stem("unterliegt"), "unterliegt");});
test("unterliessen -> unterliess", function() {deepEqual( Stem("unterliessen"), "unterliess");});
test("unterlippe -> unterlipp", function() {deepEqual( Stem("unterlippe"), "unterlipp");});
test("unterm -> unterm", function() {deepEqual( Stem("unterm"), "unterm");});
test("unterminierte -> unterminiert", function() {deepEqual( Stem("unterminierte"), "unterminiert");});
test("unternahm -> unternahm", function() {deepEqual( Stem("unternahm"), "unternahm");});
test("unternähme -> unternahm", function() {deepEqual( Stem("unternähme"), "unternahm");});
test("unternahmen -> unternahm", function() {deepEqual( Stem("unternahmen"), "unternahm");});
test("unternehmen -> unternehm", function() {deepEqual( Stem("unternehmen"), "unternehm");});
test("unternehmend -> unternehm", function() {deepEqual( Stem("unternehmend"), "unternehm");});
test("unternehmender -> unternehm", function() {deepEqual( Stem("unternehmender"), "unternehm");});
test("unternehmer -> unternehm", function() {deepEqual( Stem("unternehmer"), "unternehm");});
test("unternehmung -> unternehm", function() {deepEqual( Stem("unternehmung"), "unternehm");});
test("unternehmungen -> unternehm", function() {deepEqual( Stem("unternehmungen"), "unternehm");});
test("unternehmungsgeist -> unternehmungsgeist", function() {deepEqual( Stem("unternehmungsgeist"), "unternehmungsgeist");});
test("unternehmungslust -> unternehmungslust", function() {deepEqual( Stem("unternehmungslust"), "unternehmungslust");});
test("unternehmungslustigen -> unternehmungslust", function() {deepEqual( Stem("unternehmungslustigen"), "unternehmungslust");});
test("unternommen -> unternomm", function() {deepEqual( Stem("unternommen"), "unternomm");});
test("unteroffizier -> unteroffizi", function() {deepEqual( Stem("unteroffizier"), "unteroffizi");});
test("unteroffizieren -> unteroffizi", function() {deepEqual( Stem("unteroffizieren"), "unteroffizi");});
test("unteroffiziers -> unteroffizi", function() {deepEqual( Stem("unteroffiziers"), "unteroffizi");});
test("unterordnung -> unterordn", function() {deepEqual( Stem("unterordnung"), "unterordn");});
test("unterpfand -> unterpfand", function() {deepEqual( Stem("unterpfand"), "unterpfand");});
test("unterredung -> unterred", function() {deepEqual( Stem("unterredung"), "unterred");});
test("unterricht -> unterricht", function() {deepEqual( Stem("unterricht"), "unterricht");});
test("unterrichten -> unterricht", function() {deepEqual( Stem("unterrichten"), "unterricht");});
test("unterrichtet -> unterrichtet", function() {deepEqual( Stem("unterrichtet"), "unterrichtet");});
test("unterröcke -> unterrock", function() {deepEqual( Stem("unterröcke"), "unterrock");});
test("untersatze -> untersatz", function() {deepEqual( Stem("untersatze"), "untersatz");});
test("untersberges -> untersberg", function() {deepEqual( Stem("untersberges"), "untersberg");});
test("unterscheiden -> unterscheid", function() {deepEqual( Stem("unterscheiden"), "unterscheid");});
test("unterscheidend -> unterscheid", function() {deepEqual( Stem("unterscheidend"), "unterscheid");});
test("unterscheidet -> unterscheidet", function() {deepEqual( Stem("unterscheidet"), "unterscheidet");});
test("unterscheidung -> unterscheid", function() {deepEqual( Stem("unterscheidung"), "unterscheid");});
test("unterscheidungsgrund -> unterscheidungsgrund", function() {deepEqual( Stem("unterscheidungsgrund"), "unterscheidungsgrund");});
test("unterscheidungszeichen -> unterscheidungszeich", function() {deepEqual( Stem("unterscheidungszeichen"), "unterscheidungszeich");});
test("unterschiebt -> unterschiebt", function() {deepEqual( Stem("unterschiebt"), "unterschiebt");});
test("unterschied -> unterschied", function() {deepEqual( Stem("unterschied"), "unterschied");});
test("unterschiede -> unterschied", function() {deepEqual( Stem("unterschiede"), "unterschied");});
test("unterschieden -> unterschied", function() {deepEqual( Stem("unterschieden"), "unterschied");});
test("unterschiedene -> unterschied", function() {deepEqual( Stem("unterschiedene"), "unterschied");});
test("unterschiedenem -> unterschied", function() {deepEqual( Stem("unterschiedenem"), "unterschied");});
test("unterschiedenen -> unterschied", function() {deepEqual( Stem("unterschiedenen"), "unterschied");});
test("unterschiedenes -> unterschied", function() {deepEqual( Stem("unterschiedenes"), "unterschied");});
test("unterschiedes -> unterschied", function() {deepEqual( Stem("unterschiedes"), "unterschied");});
test("unterschiedlichdie -> unterschiedlichdi", function() {deepEqual( Stem("unterschiedlichdie"), "unterschiedlichdi");});
test("unterschiedliche -> unterschied", function() {deepEqual( Stem("unterschiedliche"), "unterschied");});
test("unterschiedlicher -> unterschied", function() {deepEqual( Stem("unterschiedlicher"), "unterschied");});
test("unterschiedlichkeiten -> unterschied", function() {deepEqual( Stem("unterschiedlichkeiten"), "unterschied");});
test("unterschleif -> unterschleif", function() {deepEqual( Stem("unterschleif"), "unterschleif");});
test("unterschleife -> unterschleif", function() {deepEqual( Stem("unterschleife"), "unterschleif");});
test("unterschreiben -> unterschreib", function() {deepEqual( Stem("unterschreiben"), "unterschreib");});
test("unterschrift -> unterschrift", function() {deepEqual( Stem("unterschrift"), "unterschrift");});
test("unterst -> unterst", function() {deepEqual( Stem("unterst"), "unterst");});
test("unterstand -> unterstand", function() {deepEqual( Stem("unterstand"), "unterstand");});
test("unterste -> unterst", function() {deepEqual( Stem("unterste"), "unterst");});
test("unterstein -> unterstein", function() {deepEqual( Stem("unterstein"), "unterstein");});
test("unterstellen -> unterstell", function() {deepEqual( Stem("unterstellen"), "unterstell");});
test("unterstellt -> unterstellt", function() {deepEqual( Stem("unterstellt"), "unterstellt");});
test("untersten -> unterst", function() {deepEqual( Stem("untersten"), "unterst");});
test("unterstes -> unterst", function() {deepEqual( Stem("unterstes"), "unterst");});
test("unterstützen -> unterstutz", function() {deepEqual( Stem("unterstützen"), "unterstutz");});
test("unterstützt -> unterstutzt", function() {deepEqual( Stem("unterstützt"), "unterstutzt");});
test("unterstützte -> unterstutzt", function() {deepEqual( Stem("unterstützte"), "unterstutzt");});
test("unterstützung -> unterstutz", function() {deepEqual( Stem("unterstützung"), "unterstutz");});
test("untersuchen -> untersuch", function() {deepEqual( Stem("untersuchen"), "untersuch");});
test("untersuchend -> untersuch", function() {deepEqual( Stem("untersuchend"), "untersuch");});
test("untersucht -> untersucht", function() {deepEqual( Stem("untersucht"), "untersucht");});
test("untersuchte -> untersucht", function() {deepEqual( Stem("untersuchte"), "untersucht");});
test("untersuchten -> untersucht", function() {deepEqual( Stem("untersuchten"), "untersucht");});
test("untersuchung -> untersuch", function() {deepEqual( Stem("untersuchung"), "untersuch");});
test("untersuchungen -> untersuch", function() {deepEqual( Stem("untersuchungen"), "untersuch");});
test("untersuchungsansätzen -> untersuchungsansatz", function() {deepEqual( Stem("untersuchungsansätzen"), "untersuchungsansatz");});
test("untersuchungskommission -> untersuchungskommission", function() {deepEqual( Stem("untersuchungskommission"), "untersuchungskommission");});
test("untersuchungsraum -> untersuchungsraum", function() {deepEqual( Stem("untersuchungsraum"), "untersuchungsraum");});
test("untersuchungsrichter -> untersuchungsricht", function() {deepEqual( Stem("untersuchungsrichter"), "untersuchungsricht");});
test("untersuchungsrichtern -> untersuchungsricht", function() {deepEqual( Stem("untersuchungsrichtern"), "untersuchungsricht");});
test("untersuchungsrichters -> untersuchungsricht", function() {deepEqual( Stem("untersuchungsrichters"), "untersuchungsricht");});
test("untersuchungstag -> untersuchungstag", function() {deepEqual( Stem("untersuchungstag"), "untersuchungstag");});
test("untersuchungszimmer -> untersuchungszimm", function() {deepEqual( Stem("untersuchungszimmer"), "untersuchungszimm");});
test("untersuchungszimmers -> untersuchungszimm", function() {deepEqual( Stem("untersuchungszimmers"), "untersuchungszimm");});
test("untertan -> untertan", function() {deepEqual( Stem("untertan"), "untertan");});
test("untertanen -> untertan", function() {deepEqual( Stem("untertanen"), "untertan");});
test("untertänigkeit -> untertan", function() {deepEqual( Stem("untertänigkeit"), "untertan");});
test("untertaucht -> untertaucht", function() {deepEqual( Stem("untertaucht"), "untertaucht");});
test("untertrat -> untertrat", function() {deepEqual( Stem("untertrat"), "untertrat");});
test("untertreten -> untertret", function() {deepEqual( Stem("untertreten"), "untertret");});
test("unterwarf -> unterwarf", function() {deepEqual( Stem("unterwarf"), "unterwarf");});
test("unterwarfen -> unterwarf", function() {deepEqual( Stem("unterwarfen"), "unterwarf");});
test("unterweges -> unterweg", function() {deepEqual( Stem("unterweges"), "unterweg");});
test("unterwegs -> unterweg", function() {deepEqual( Stem("unterwegs"), "unterweg");});
test("unterweisen -> unterweis", function() {deepEqual( Stem("unterweisen"), "unterweis");});
test("unterweisend -> unterweis", function() {deepEqual( Stem("unterweisend"), "unterweis");});
test("unterweisung -> unterweis", function() {deepEqual( Stem("unterweisung"), "unterweis");});
test("unterwelt -> unterwelt", function() {deepEqual( Stem("unterwelt"), "unterwelt");});
test("unterwerfen -> unterwerf", function() {deepEqual( Stem("unterwerfen"), "unterwerf");});
test("unterwerfung -> unterwerf", function() {deepEqual( Stem("unterwerfung"), "unterwerf");});
test("unterwies -> unterwi", function() {deepEqual( Stem("unterwies"), "unterwi");});
test("unterwiesen -> unterwies", function() {deepEqual( Stem("unterwiesen"), "unterwies");});
test("unterworfen -> unterworf", function() {deepEqual( Stem("unterworfen"), "unterworf");});
test("unterwürfigkeit -> unterwurf", function() {deepEqual( Stem("unterwürfigkeit"), "unterwurf");});
test("unterzeichnet -> unterzeichnet", function() {deepEqual( Stem("unterzeichnet"), "unterzeichnet");});
test("unterzeichnete -> unterzeichnet", function() {deepEqual( Stem("unterzeichnete"), "unterzeichnet");});
test("unterziehe -> unterzieh", function() {deepEqual( Stem("unterziehe"), "unterzieh");});
test("unterziehen -> unterzieh", function() {deepEqual( Stem("unterziehen"), "unterzieh");});
test("unterzog -> unterzog", function() {deepEqual( Stem("unterzog"), "unterzog");});
test("unterzogen -> unterzog", function() {deepEqual( Stem("unterzogen"), "unterzog");});
test("unterzubringen -> unterzubring", function() {deepEqual( Stem("unterzubringen"), "unterzubring");});
test("unterzukommen -> unterzukomm", function() {deepEqual( Stem("unterzukommen"), "unterzukomm");});
test("untiefe -> untief", function() {deepEqual( Stem("untiefe"), "untief");});
test("untier -> unti", function() {deepEqual( Stem("untier"), "unti");});
test("untrennbar -> untrennbar", function() {deepEqual( Stem("untrennbar"), "untrennbar");});
test("untreu -> untreu", function() {deepEqual( Stem("untreu"), "untreu");});
test("untreue -> untreu", function() {deepEqual( Stem("untreue"), "untreu");});
test("untreuen -> untreu", function() {deepEqual( Stem("untreuen"), "untreu");});
test("untröstlich -> untrost", function() {deepEqual( Stem("untröstlich"), "untrost");});
test("unübertrefflich -> unubertreff", function() {deepEqual( Stem("unübertrefflich"), "unubertreff");});
test("unüberwindliche -> unuberwind", function() {deepEqual( Stem("unüberwindliche"), "unuberwind");});
test("unum -> unum", function() {deepEqual( Stem("unum"), "unum");});
test("unumgänglich -> unumgang", function() {deepEqual( Stem("unumgänglich"), "unumgang");});
test("ununterbrochen -> ununterbroch", function() {deepEqual( Stem("ununterbrochen"), "ununterbroch");});
test("ununterbrochene -> ununterbroch", function() {deepEqual( Stem("ununterbrochene"), "ununterbroch");});
test("ununterbrochener -> ununterbroch", function() {deepEqual( Stem("ununterbrochener"), "ununterbroch");});
test("unverabredet -> unverabredet", function() {deepEqual( Stem("unverabredet"), "unverabredet");});
test("unveränderlich -> unverand", function() {deepEqual( Stem("unveränderlich"), "unverand");});
test("unveränderliche -> unverand", function() {deepEqual( Stem("unveränderliche"), "unverand");});
test("unveränderlichem -> unverand", function() {deepEqual( Stem("unveränderlichem"), "unverand");});
test("unveränderlichen -> unverand", function() {deepEqual( Stem("unveränderlichen"), "unverand");});
test("unverändert -> unverandert", function() {deepEqual( Stem("unverändert"), "unverandert");});
test("unverbrüchlichen -> unverbruch", function() {deepEqual( Stem("unverbrüchlichen"), "unverbruch");});
test("unverdächtige -> unverdacht", function() {deepEqual( Stem("unverdächtige"), "unverdacht");});
test("unverdaulichkeit -> unverdau", function() {deepEqual( Stem("unverdaulichkeit"), "unverdau");});
test("unverdorbener -> unverdorb", function() {deepEqual( Stem("unverdorbener"), "unverdorb");});
test("unverdrossen -> unverdross", function() {deepEqual( Stem("unverdrossen"), "unverdross");});
test("unvereinbar -> unvereinbar", function() {deepEqual( Stem("unvereinbar"), "unvereinbar");});
test("unverfänglich -> unverfang", function() {deepEqual( Stem("unverfänglich"), "unverfang");});
test("unvergleichlich -> unvergleich", function() {deepEqual( Stem("unvergleichlich"), "unvergleich");});
test("unvergoldete -> unvergoldet", function() {deepEqual( Stem("unvergoldete"), "unvergoldet");});
test("unverhehlt -> unverhehlt", function() {deepEqual( Stem("unverhehlt"), "unverhehlt");});
test("unverhehlter -> unverhehlt", function() {deepEqual( Stem("unverhehlter"), "unverhehlt");});
test("unverheiratet -> unverheiratet", function() {deepEqual( Stem("unverheiratet"), "unverheiratet");});
test("unverhofft -> unverhofft", function() {deepEqual( Stem("unverhofft"), "unverhofft");});
test("unverhoffte -> unverhofft", function() {deepEqual( Stem("unverhoffte"), "unverhofft");});
test("unverhoffter -> unverhofft", function() {deepEqual( Stem("unverhoffter"), "unverhofft");});
test("unverhofftes -> unverhofft", function() {deepEqual( Stem("unverhofftes"), "unverhofft");});
test("unverkennbar -> unverkennbar", function() {deepEqual( Stem("unverkennbar"), "unverkennbar");});
test("unverletzlich -> unverletz", function() {deepEqual( Stem("unverletzlich"), "unverletz");});
test("unverletzliche -> unverletz", function() {deepEqual( Stem("unverletzliche"), "unverletz");});
test("unverletzliches -> unverletz", function() {deepEqual( Stem("unverletzliches"), "unverletz");});
test("unverletzlichkeit -> unverletz", function() {deepEqual( Stem("unverletzlichkeit"), "unverletz");});
test("unvermeidlich -> unvermeid", function() {deepEqual( Stem("unvermeidlich"), "unvermeid");});
test("unvermeidliche -> unvermeid", function() {deepEqual( Stem("unvermeidliche"), "unvermeid");});
test("unvermeidlichen -> unvermeid", function() {deepEqual( Stem("unvermeidlichen"), "unvermeid");});
test("unvermeidlicher -> unvermeid", function() {deepEqual( Stem("unvermeidlicher"), "unvermeid");});
test("unvermengt -> unvermengt", function() {deepEqual( Stem("unvermengt"), "unvermengt");});
test("unvermerkt -> unvermerkt", function() {deepEqual( Stem("unvermerkt"), "unvermerkt");});
test("unvermögend -> unvermog", function() {deepEqual( Stem("unvermögend"), "unvermog");});
test("unvermögens -> unvermog", function() {deepEqual( Stem("unvermögens"), "unvermog");});
test("unvermutet -> unvermutet", function() {deepEqual( Stem("unvermutet"), "unvermutet");});
test("unvernünftig -> unvernunft", function() {deepEqual( Stem("unvernünftig"), "unvernunft");});
test("unvernünftige -> unvernunft", function() {deepEqual( Stem("unvernünftige"), "unvernunft");});
test("unvernünftigen -> unvernunft", function() {deepEqual( Stem("unvernünftigen"), "unvernunft");});
test("unvernünftiger -> unvernunft", function() {deepEqual( Stem("unvernünftiger"), "unvernunft");});
test("unverputzte -> unverputzt", function() {deepEqual( Stem("unverputzte"), "unverputzt");});
test("unverrückbaren -> unverruckbar", function() {deepEqual( Stem("unverrückbaren"), "unverruckbar");});
test("unverschämt -> unverschamt", function() {deepEqual( Stem("unverschämt"), "unverschamt");});
test("unverschämte -> unverschamt", function() {deepEqual( Stem("unverschämte"), "unverschamt");});
test("unverschämtheit -> unverschamt", function() {deepEqual( Stem("unverschämtheit"), "unverschamt");});
test("unverschlossen -> unverschloss", function() {deepEqual( Stem("unverschlossen"), "unverschloss");});
test("unversehens -> unverseh", function() {deepEqual( Stem("unversehens"), "unverseh");});
test("unversehrt -> unversehrt", function() {deepEqual( Stem("unversehrt"), "unversehrt");});
test("unversehrter -> unversehrt", function() {deepEqual( Stem("unversehrter"), "unversehrt");});
test("unversiegbare -> unversiegbar", function() {deepEqual( Stem("unversiegbare"), "unversiegbar");});
test("unversöhnlich -> unversohn", function() {deepEqual( Stem("unversöhnlich"), "unversohn");});
test("unversöhnlicher -> unversohn", function() {deepEqual( Stem("unversöhnlicher"), "unversohn");});
test("unverstande -> unverstand", function() {deepEqual( Stem("unverstande"), "unverstand");});
test("unverständigen -> unverstand", function() {deepEqual( Stem("unverständigen"), "unverstand");});
test("unverständlich -> unverstand", function() {deepEqual( Stem("unverständlich"), "unverstand");});
test("unverständliche -> unverstand", function() {deepEqual( Stem("unverständliche"), "unverstand");});
test("unverständlichen -> unverstand", function() {deepEqual( Stem("unverständlichen"), "unverstand");});
test("unvertilgbaren -> unvertilgbar", function() {deepEqual( Stem("unvertilgbaren"), "unvertilgbar");});
test("unverwahrt -> unverwahrt", function() {deepEqual( Stem("unverwahrt"), "unverwahrt");});
test("unverwandt -> unverwandt", function() {deepEqual( Stem("unverwandt"), "unverwandt");});
test("unverweilt -> unverweilt", function() {deepEqual( Stem("unverweilt"), "unverweilt");});
test("unverwüstliche -> unverwust", function() {deepEqual( Stem("unverwüstliche"), "unverwust");});
test("unverwüstlichen -> unverwust", function() {deepEqual( Stem("unverwüstlichen"), "unverwust");});
test("unverzagt -> unverzagt", function() {deepEqual( Stem("unverzagt"), "unverzagt");});
test("unverzeihliches -> unverzeih", function() {deepEqual( Stem("unverzeihliches"), "unverzeih");});
test("unverzeihlichsten -> unverzeih", function() {deepEqual( Stem("unverzeihlichsten"), "unverzeih");});
test("unverzichtbar -> unverzichtbar", function() {deepEqual( Stem("unverzichtbar"), "unverzichtbar");});
test("unverzichtbare -> unverzichtbar", function() {deepEqual( Stem("unverzichtbare"), "unverzichtbar");});
test("unverzüglich -> unverzug", function() {deepEqual( Stem("unverzüglich"), "unverzug");});
test("unvollkommene -> unvollkomm", function() {deepEqual( Stem("unvollkommene"), "unvollkomm");});
test("unvollkommenen -> unvollkomm", function() {deepEqual( Stem("unvollkommenen"), "unvollkomm");});
test("unvordenklichen -> unvordenk", function() {deepEqual( Stem("unvordenklichen"), "unvordenk");});
test("unvorhergesehene -> unvorhergeseh", function() {deepEqual( Stem("unvorhergesehene"), "unvorhergeseh");});
test("unvorsichtig -> unvorsicht", function() {deepEqual( Stem("unvorsichtig"), "unvorsicht");});
test("unvorsichtigkeit -> unvorsicht", function() {deepEqual( Stem("unvorsichtigkeit"), "unvorsicht");});
test("unwahr -> unwahr", function() {deepEqual( Stem("unwahr"), "unwahr");});
test("unwahrscheinlich -> unwahrschein", function() {deepEqual( Stem("unwahrscheinlich"), "unwahrschein");});
test("unwahrscheinliche -> unwahrschein", function() {deepEqual( Stem("unwahrscheinliche"), "unwahrschein");});
test("unwahrscheinlichen -> unwahrschein", function() {deepEqual( Stem("unwahrscheinlichen"), "unwahrschein");});
test("unwandelbar -> unwandelbar", function() {deepEqual( Stem("unwandelbar"), "unwandelbar");});
test("unwandelbaren -> unwandelbar", function() {deepEqual( Stem("unwandelbaren"), "unwandelbar");});
test("unwandelbarkeit -> unwandelbar", function() {deepEqual( Stem("unwandelbarkeit"), "unwandelbar");});
test("unweidmännischen -> unweidmann", function() {deepEqual( Stem("unweidmännischen"), "unweidmann");});
test("unweise -> unweis", function() {deepEqual( Stem("unweise"), "unweis");});
test("unweiser -> unweis", function() {deepEqual( Stem("unweiser"), "unweis");});
test("unweit -> unweit", function() {deepEqual( Stem("unweit"), "unweit");});
test("unwert -> unwert", function() {deepEqual( Stem("unwert"), "unwert");});
test("unwerter -> unwert", function() {deepEqual( Stem("unwerter"), "unwert");});
test("unwesen -> unwes", function() {deepEqual( Stem("unwesen"), "unwes");});
test("unwetter -> unwett", function() {deepEqual( Stem("unwetter"), "unwett");});
test("unwichtig -> unwicht", function() {deepEqual( Stem("unwichtig"), "unwicht");});
test("unwichtigen -> unwicht", function() {deepEqual( Stem("unwichtigen"), "unwicht");});
test("unwiderleglich -> unwiderleg", function() {deepEqual( Stem("unwiderleglich"), "unwiderleg");});
test("unwiderruflich -> unwiderruf", function() {deepEqual( Stem("unwiderruflich"), "unwiderruf");});
test("unwiderrufliches -> unwiderruf", function() {deepEqual( Stem("unwiderrufliches"), "unwiderruf");});
test("unwidersprechlich -> unwidersprech", function() {deepEqual( Stem("unwidersprechlich"), "unwidersprech");});
test("unwiderstehlich -> unwidersteh", function() {deepEqual( Stem("unwiderstehlich"), "unwidersteh");});
test("unwiderstehliche -> unwidersteh", function() {deepEqual( Stem("unwiderstehliche"), "unwidersteh");});
test("unwiderstehlichen -> unwidersteh", function() {deepEqual( Stem("unwiderstehlichen"), "unwidersteh");});
test("unwiederbringlicher -> unwiederbring", function() {deepEqual( Stem("unwiederbringlicher"), "unwiederbring");});
test("unwillen -> unwill", function() {deepEqual( Stem("unwillen"), "unwill");});
test("unwillig -> unwill", function() {deepEqual( Stem("unwillig"), "unwill");});
test("unwillkommen -> unwillkomm", function() {deepEqual( Stem("unwillkommen"), "unwillkomm");});
test("unwillkürlich -> unwillkur", function() {deepEqual( Stem("unwillkürlich"), "unwillkur");});
test("unwillkürliche -> unwillkur", function() {deepEqual( Stem("unwillkürliche"), "unwillkur");});
test("unwirksam -> unwirksam", function() {deepEqual( Stem("unwirksam"), "unwirksam");});
test("unwirsch -> unwirsch", function() {deepEqual( Stem("unwirsch"), "unwirsch");});
test("unwissend -> unwiss", function() {deepEqual( Stem("unwissend"), "unwiss");});
test("unwissende -> unwiss", function() {deepEqual( Stem("unwissende"), "unwiss");});
test("unwissenden -> unwiss", function() {deepEqual( Stem("unwissenden"), "unwiss");});
test("unwissenheit -> unwiss", function() {deepEqual( Stem("unwissenheit"), "unwiss");});
test("unwohl -> unwohl", function() {deepEqual( Stem("unwohl"), "unwohl");});
test("unwohlsein -> unwohlsein", function() {deepEqual( Stem("unwohlsein"), "unwohlsein");});
test("unwohnlichen -> unwohn", function() {deepEqual( Stem("unwohnlichen"), "unwohn");});
test("unwort -> unwort", function() {deepEqual( Stem("unwort"), "unwort");});
test("unwürdig -> unwurd", function() {deepEqual( Stem("unwürdig"), "unwurd");});
test("unwürdige -> unwurd", function() {deepEqual( Stem("unwürdige"), "unwurd");});
test("unwürdigen -> unwurd", function() {deepEqual( Stem("unwürdigen"), "unwurd");});
test("unwürdiger -> unwurd", function() {deepEqual( Stem("unwürdiger"), "unwurd");});
test("unzählig -> unzahl", function() {deepEqual( Stem("unzählig"), "unzahl");});
test("unzählige -> unzahl", function() {deepEqual( Stem("unzählige"), "unzahl");});
test("unzähligem -> unzahl", function() {deepEqual( Stem("unzähligem"), "unzahl");});
test("unzähligemal -> unzahligemal", function() {deepEqual( Stem("unzähligemal"), "unzahligemal");});
test("unzähligen -> unzahl", function() {deepEqual( Stem("unzähligen"), "unzahl");});
test("unzähliger -> unzahl", function() {deepEqual( Stem("unzähliger"), "unzahl");});
test("unzähligere -> unzahl", function() {deepEqual( Stem("unzähligere"), "unzahl");});
test("unzähliges -> unzahl", function() {deepEqual( Stem("unzähliges"), "unzahl");});
test("unzeit -> unzeit", function() {deepEqual( Stem("unzeit"), "unzeit");});
test("unzersplittertes -> unzersplittert", function() {deepEqual( Stem("unzersplittertes"), "unzersplittert");});
test("unzertrennlich -> unzertrenn", function() {deepEqual( Stem("unzertrennlich"), "unzertrenn");});
test("unzertrennliche -> unzertrenn", function() {deepEqual( Stem("unzertrennliche"), "unzertrenn");});
test("unziemlich -> unziem", function() {deepEqual( Stem("unziemlich"), "unziem");});
test("unziemliche -> unziem", function() {deepEqual( Stem("unziemliche"), "unziem");});
test("unziemliches -> unziem", function() {deepEqual( Stem("unziemliches"), "unziem");});
test("unziemlichsten -> unziem", function() {deepEqual( Stem("unziemlichsten"), "unziem");});
test("unzucht -> unzucht", function() {deepEqual( Stem("unzucht"), "unzucht");});
test("unzufrieden -> unzufried", function() {deepEqual( Stem("unzufrieden"), "unzufried");});
test("unzufriedenheit -> unzufried", function() {deepEqual( Stem("unzufriedenheit"), "unzufried");});
test("unzugänglich -> unzugang", function() {deepEqual( Stem("unzugänglich"), "unzugang");});
test("unzugängliche -> unzugang", function() {deepEqual( Stem("unzugängliche"), "unzugang");});
test("unzukömmlichkeit -> unzukomm", function() {deepEqual( Stem("unzukömmlichkeit"), "unzukomm");});
test("unzukömmlichkeiten -> unzukomm", function() {deepEqual( Stem("unzukömmlichkeiten"), "unzukomm");});
test("unzulänglichkeit -> unzulang", function() {deepEqual( Stem("unzulänglichkeit"), "unzulang");});
test("unzulässig -> unzulass", function() {deepEqual( Stem("unzulässig"), "unzulass");});
test("unzureichend -> unzureich", function() {deepEqual( Stem("unzureichend"), "unzureich");});
test("unzusammenhängend -> unzusammenhang", function() {deepEqual( Stem("unzusammenhängend"), "unzusammenhang");});
test("unzusammenhängendes -> unzusammenhang", function() {deepEqual( Stem("unzusammenhängendes"), "unzusammenhang");});
test("unzweckmässigkeit -> unzweckmass", function() {deepEqual( Stem("unzweckmässigkeit"), "unzweckmass");});
test("unzweifelhaft -> unzweifelhaft", function() {deepEqual( Stem("unzweifelhaft"), "unzweifelhaft");});
test("unzweifelhafte -> unzweifelhaft", function() {deepEqual( Stem("unzweifelhafte"), "unzweifelhaft");});
test("unzweifelhafteste -> unzweifelhaft", function() {deepEqual( Stem("unzweifelhafteste"), "unzweifelhaft");});
test("uphas -> uphas", function() {deepEqual( Stem("uphas"), "uphas");});
test("üppig -> uppig", function() {deepEqual( Stem("üppig"), "uppig");});
test("üppige -> uppig", function() {deepEqual( Stem("üppige"), "uppig");});
test("üppigen -> uppig", function() {deepEqual( Stem("üppigen"), "uppig");});
test("ur -> ur", function() {deepEqual( Stem("ur"), "ur");});
test("urahn -> urahn", function() {deepEqual( Stem("urahn"), "urahn");});
test("uralte -> uralt", function() {deepEqual( Stem("uralte"), "uralt");});
test("uralten -> uralt", function() {deepEqual( Stem("uralten"), "uralt");});
test("uralter -> uralt", function() {deepEqual( Stem("uralter"), "uralt");});
test("urbeginn -> urbeginn", function() {deepEqual( Stem("urbeginn"), "urbeginn");});
test("urbild -> urbild", function() {deepEqual( Stem("urbild"), "urbild");});
test("urbilder -> urbild", function() {deepEqual( Stem("urbilder"), "urbild");});
test("urbildliche -> urbild", function() {deepEqual( Stem("urbildliche"), "urbild");});
test("urenkel -> urenkel", function() {deepEqual( Stem("urenkel"), "urenkel");});
test("urfeld -> urfeld", function() {deepEqual( Stem("urfeld"), "urfeld");});
test("urfelder -> urfeld", function() {deepEqual( Stem("urfelder"), "urfeld");});
test("urgrossvater -> urgrossvat", function() {deepEqual( Stem("urgrossvater"), "urgrossvat");});
test("urgroßvater -> urgrossvat", function() {deepEqual( Stem("urgroßvater"), "urgrossvat");});
test("urgrossvaters -> urgrossvat", function() {deepEqual( Stem("urgrossvaters"), "urgrossvat");});
test("urgroßvaters -> urgrossvat", function() {deepEqual( Stem("urgroßvaters"), "urgrossvat");});
test("urgrunde -> urgrund", function() {deepEqual( Stem("urgrunde"), "urgrund");});
test("urgrundes -> urgrund", function() {deepEqual( Stem("urgrundes"), "urgrund");});
test("urheber -> urheb", function() {deepEqual( Stem("urheber"), "urheb");});
test("urhebers -> urheb", function() {deepEqual( Stem("urhebers"), "urheb");});
test("urkirche -> urkirch", function() {deepEqual( Stem("urkirche"), "urkirch");});
test("urlaub -> urlaub", function() {deepEqual( Stem("urlaub"), "urlaub");});
test("urmensch -> urmensch", function() {deepEqual( Stem("urmensch"), "urmensch");});
test("urmenschen -> urmensch", function() {deepEqual( Stem("urmenschen"), "urmensch");});
test("urne -> urn", function() {deepEqual( Stem("urne"), "urn");});
test("urplötzlich -> urplotz", function() {deepEqual( Stem("urplötzlich"), "urplotz");});
test("ursache -> ursach", function() {deepEqual( Stem("ursache"), "ursach");});
test("ursachen -> ursach", function() {deepEqual( Stem("ursachen"), "ursach");});
test("ursächlich -> ursach", function() {deepEqual( Stem("ursächlich"), "ursach");});
test("ursächlichen -> ursach", function() {deepEqual( Stem("ursächlichen"), "ursach");});
test("ursprung -> ursprung", function() {deepEqual( Stem("ursprung"), "ursprung");});
test("ursprunge -> ursprung", function() {deepEqual( Stem("ursprunge"), "ursprung");});
test("ursprunges -> ursprung", function() {deepEqual( Stem("ursprunges"), "ursprung");});
test("ursprünglich -> ursprung", function() {deepEqual( Stem("ursprünglich"), "ursprung");});
test("ursprüngliche -> ursprung", function() {deepEqual( Stem("ursprüngliche"), "ursprung");});
test("ursprünglichen -> ursprung", function() {deepEqual( Stem("ursprünglichen"), "ursprung");});
test("ursprüngliches -> ursprung", function() {deepEqual( Stem("ursprüngliches"), "ursprung");});
test("ursprungs -> ursprung", function() {deepEqual( Stem("ursprungs"), "ursprung");});
test("ursprungsort -> ursprungsort", function() {deepEqual( Stem("ursprungsort"), "ursprungsort");});
test("urteil -> urteil", function() {deepEqual( Stem("urteil"), "urteil");});
test("urteile -> urteil", function() {deepEqual( Stem("urteile"), "urteil");});
test("urteilen -> urteil", function() {deepEqual( Stem("urteilen"), "urteil");});
test("urteilenden -> urteil", function() {deepEqual( Stem("urteilenden"), "urteil");});
test("urteils -> urteil", function() {deepEqual( Stem("urteils"), "urteil");});
test("urteilskraft -> urteilskraft", function() {deepEqual( Stem("urteilskraft"), "urteilskraft");});
test("urteilt -> urteilt", function() {deepEqual( Stem("urteilt"), "urteilt");});
test("ururgrosspapa -> ururgrosspapa", function() {deepEqual( Stem("ururgrosspapa"), "ururgrosspapa");});
test("ururgrossvater -> ururgrossvat", function() {deepEqual( Stem("ururgrossvater"), "ururgrossvat");});
test("ururgroßvater -> ururgrossvat", function() {deepEqual( Stem("ururgroßvater"), "ururgrossvat");});
test("urvater -> urvat", function() {deepEqual( Stem("urvater"), "urvat");});
test("urväter -> urvat", function() {deepEqual( Stem("urväter"), "urvat");});
test("urwald -> urwald", function() {deepEqual( Stem("urwald"), "urwald");});
test("urwesen -> urwes", function() {deepEqual( Stem("urwesen"), "urwes");});
test("urwesens -> urwes", function() {deepEqual( Stem("urwesens"), "urwes");});
test("urzeit -> urzeit", function() {deepEqual( Stem("urzeit"), "urzeit");});
test("usa -> usa", function() {deepEqual( Stem("usa"), "usa");});
test("usf -> usf", function() {deepEqual( Stem("usf"), "usf");});
test("ussiel -> ussiel", function() {deepEqual( Stem("ussiel"), "ussiel");});
test("ussiels -> ussiel", function() {deepEqual( Stem("ussiels"), "ussiel");});
test("usurpator -> usurpator", function() {deepEqual( Stem("usurpator"), "usurpator");});
test("usw -> usw", function() {deepEqual( Stem("usw"), "usw");});
test("utopien -> utopi", function() {deepEqual( Stem("utopien"), "utopi");});
test("uxor -> uxor", function() {deepEqual( Stem("uxor"), "uxor");});
test("uxores -> uxor", function() {deepEqual( Stem("uxores"), "uxor");});
test("v -> v", function() {deepEqual( Stem("v"), "v");});
test("vagantur -> vagantur", function() {deepEqual( Stem("vagantur"), "vagantur");});
test("vagari -> vagari", function() {deepEqual( Stem("vagari"), "vagari");});
test("vagus -> vagus", function() {deepEqual( Stem("vagus"), "vagus");});
test("vakant -> vakant", function() {deepEqual( Stem("vakant"), "vakant");});
test("vallotton -> vallotton", function() {deepEqual( Stem("vallotton"), "vallotton");});
test("vamp -> vamp", function() {deepEqual( Stem("vamp"), "vamp");});
test("van -> van", function() {deepEqual( Stem("van"), "van");});
test("varia -> varia", function() {deepEqual( Stem("varia"), "varia");});
test("variationen -> variation", function() {deepEqual( Stem("variationen"), "variation");});
test("vasallentreue -> vasallentreu", function() {deepEqual( Stem("vasallentreue"), "vasallentreu");});
test("vaschwör -> vaschwor", function() {deepEqual( Stem("vaschwör"), "vaschwor");});
test("vastatio -> vastatio", function() {deepEqual( Stem("vastatio"), "vastatio");});
test("vastationes -> vastation", function() {deepEqual( Stem("vastationes"), "vastation");});
test("vater -> vat", function() {deepEqual( Stem("vater"), "vat");});
test("väter -> vat", function() {deepEqual( Stem("väter"), "vat");});
test("vaterhaus -> vaterhaus", function() {deepEqual( Stem("vaterhaus"), "vaterhaus");});
test("vaterhause -> vaterhaus", function() {deepEqual( Stem("vaterhause"), "vaterhaus");});
test("vaterhäusern -> vaterhaus", function() {deepEqual( Stem("vaterhäusern"), "vaterhaus");});
test("vaterland -> vaterland", function() {deepEqual( Stem("vaterland"), "vaterland");});
test("vaterlande -> vaterland", function() {deepEqual( Stem("vaterlande"), "vaterland");});
test("vaterlandes -> vaterland", function() {deepEqual( Stem("vaterlandes"), "vaterland");});
test("väterliche -> vat", function() {deepEqual( Stem("väterliche"), "vat");});
test("väterlichen -> vat", function() {deepEqual( Stem("väterlichen"), "vat");});
test("väterliches -> vat", function() {deepEqual( Stem("väterliches"), "vat");});
test("vatermörder -> vatermord", function() {deepEqual( Stem("vatermörder"), "vatermord");});
test("vätern -> vat", function() {deepEqual( Stem("vätern"), "vat");});
test("vaters -> vat", function() {deepEqual( Stem("vaters"), "vat");});
test("vaterunser -> vateruns", function() {deepEqual( Stem("vaterunser"), "vateruns");});
test("vatet -> vatet", function() {deepEqual( Stem("vatet"), "vatet");});
test("vatikan -> vatikan", function() {deepEqual( Stem("vatikan"), "vatikan");});
test("vaudevilletheatern -> vaudevilletheat", function() {deepEqual( Stem("vaudevilletheatern"), "vaudevilletheat");});
test("veb -> veb", function() {deepEqual( Stem("veb"), "veb");});
test("vehikel -> vehikel", function() {deepEqual( Stem("vehikel"), "vehikel");});
test("veigerl -> veigerl", function() {deepEqual( Stem("veigerl"), "veigerl");});
test("veilchen -> veilch", function() {deepEqual( Stem("veilchen"), "veilch");});
test("veilchenblaue -> veilchenblau", function() {deepEqual( Stem("veilchenblaue"), "veilchenblau");});
test("veilchenburg -> veilchenburg", function() {deepEqual( Stem("veilchenburg"), "veilchenburg");});
test("veilchenkoppe -> veilchenkopp", function() {deepEqual( Stem("veilchenkoppe"), "veilchenkopp");});
test("veilchenzeit -> veilchenzeit", function() {deepEqual( Stem("veilchenzeit"), "veilchenzeit");});
test("veit -> veit", function() {deepEqual( Stem("veit"), "veit");});
test("vemünftiger -> vemunft", function() {deepEqual( Stem("vemünftiger"), "vemunft");});
test("ven -> ven", function() {deepEqual( Stem("ven"), "ven");});
test("venedig -> vened", function() {deepEqual( Stem("venedig"), "vened");});
test("venezianischen -> venezian", function() {deepEqual( Stem("venezianischen"), "venezian");});
test("ver -> ver", function() {deepEqual( Stem("ver"), "ver");});
test("vera -> vera", function() {deepEqual( Stem("vera"), "vera");});
test("verab -> verab", function() {deepEqual( Stem("verab"), "verab");});
test("verabredet -> verabredet", function() {deepEqual( Stem("verabredet"), "verabredet");});
test("verabredeten -> verabredet", function() {deepEqual( Stem("verabredeten"), "verabredet");});
test("verabredung -> verabred", function() {deepEqual( Stem("verabredung"), "verabred");});
test("verabreichten -> verabreicht", function() {deepEqual( Stem("verabreichten"), "verabreicht");});
test("verabscheuen -> verabscheu", function() {deepEqual( Stem("verabscheuen"), "verabscheu");});
test("verabscheuungsvermögens -> verabscheuungsvermog", function() {deepEqual( Stem("verabscheuungsvermögens"), "verabscheuungsvermog");});
test("verabschiedet -> verabschiedet", function() {deepEqual( Stem("verabschiedet"), "verabschiedet");});
test("verabschiedete -> verabschiedet", function() {deepEqual( Stem("verabschiedete"), "verabschiedet");});
test("verabschiedeten -> verabschiedet", function() {deepEqual( Stem("verabschiedeten"), "verabschiedet");});
test("verachte -> veracht", function() {deepEqual( Stem("verachte"), "veracht");});
test("verachten -> veracht", function() {deepEqual( Stem("verachten"), "veracht");});
test("verachtet -> verachtet", function() {deepEqual( Stem("verachtet"), "verachtet");});
test("verachtete -> verachtet", function() {deepEqual( Stem("verachtete"), "verachtet");});
test("verachteten -> verachtet", function() {deepEqual( Stem("verachteten"), "verachtet");});
test("verächtlich -> veracht", function() {deepEqual( Stem("verächtlich"), "veracht");});
test("verächtlichen -> veracht", function() {deepEqual( Stem("verächtlichen"), "veracht");});
test("verachtung -> veracht", function() {deepEqual( Stem("verachtung"), "veracht");});
test("verähnlicht -> verahnlicht", function() {deepEqual( Stem("verähnlicht"), "verahnlicht");});
test("verähnlichten -> verahnlicht", function() {deepEqual( Stem("verähnlichten"), "verahnlicht");});
test("veraltet -> veraltet", function() {deepEqual( Stem("veraltet"), "veraltet");});
test("verändere -> verand", function() {deepEqual( Stem("verändere"), "verand");});
test("veränderlichkeit -> verander", function() {deepEqual( Stem("veränderlichkeit"), "verander");});
test("verändern -> verand", function() {deepEqual( Stem("verändern"), "verand");});
test("verändert -> verandert", function() {deepEqual( Stem("verändert"), "verandert");});
test("veränderte -> verandert", function() {deepEqual( Stem("veränderte"), "verandert");});
test("veränderten -> verandert", function() {deepEqual( Stem("veränderten"), "verandert");});
test("verändertes -> verandert", function() {deepEqual( Stem("verändertes"), "verandert");});
test("veränderung -> verander", function() {deepEqual( Stem("veränderung"), "verander");});
test("veränderungen -> verander", function() {deepEqual( Stem("veränderungen"), "verander");});
test("veränderungsleistung -> veranderungsleist", function() {deepEqual( Stem("veränderungsleistung"), "veranderungsleist");});
test("verängstigt -> verangstigt", function() {deepEqual( Stem("verängstigt"), "verangstigt");});
test("veranlassen -> veranlass", function() {deepEqual( Stem("veranlassen"), "veranlass");});
test("veranlasst -> veranlasst", function() {deepEqual( Stem("veranlasst"), "veranlasst");});
test("veranlaßt -> veranlasst", function() {deepEqual( Stem("veranlaßt"), "veranlasst");});
test("veranlasste -> veranlasst", function() {deepEqual( Stem("veranlasste"), "veranlasst");});
test("veranlasster -> veranlasst", function() {deepEqual( Stem("veranlasster"), "veranlasst");});
test("veranlassung -> veranlass", function() {deepEqual( Stem("veranlassung"), "veranlass");});
test("veranschaulichung -> veranschaulich", function() {deepEqual( Stem("veranschaulichung"), "veranschaulich");});
test("veranstalten -> veranstalt", function() {deepEqual( Stem("veranstalten"), "veranstalt");});
test("veranstaltet -> veranstaltet", function() {deepEqual( Stem("veranstaltet"), "veranstaltet");});
test("veranstaltete -> veranstaltet", function() {deepEqual( Stem("veranstaltete"), "veranstaltet");});
test("veranstalteten -> veranstaltet", function() {deepEqual( Stem("veranstalteten"), "veranstaltet");});
test("veranstaltung -> veranstalt", function() {deepEqual( Stem("veranstaltung"), "veranstalt");});
test("veranstaltungen -> veranstalt", function() {deepEqual( Stem("veranstaltungen"), "veranstalt");});
test("verantworten -> verantwort", function() {deepEqual( Stem("verantworten"), "verantwort");});
test("verantwortete -> verantwortet", function() {deepEqual( Stem("verantwortete"), "verantwortet");});
test("verantwortlich -> verantwort", function() {deepEqual( Stem("verantwortlich"), "verantwort");});
test("verantwortlichen -> verantwort", function() {deepEqual( Stem("verantwortlichen"), "verantwort");});
test("verantwortung -> verantwort", function() {deepEqual( Stem("verantwortung"), "verantwort");});
test("verarbeitet -> verarbeitet", function() {deepEqual( Stem("verarbeitet"), "verarbeitet");});
test("verarmten -> verarmt", function() {deepEqual( Stem("verarmten"), "verarmt");});
test("verarmung -> verarm", function() {deepEqual( Stem("verarmung"), "verarm");});
test("verbal -> verbal", function() {deepEqual( Stem("verbal"), "verbal");});
test("verbale -> verbal", function() {deepEqual( Stem("verbale"), "verbal");});
test("verband -> verband", function() {deepEqual( Stem("verband"), "verband");});
test("verbanden -> verband", function() {deepEqual( Stem("verbanden"), "verband");});
test("verbandes -> verband", function() {deepEqual( Stem("verbandes"), "verband");});
test("verbannt -> verbannt", function() {deepEqual( Stem("verbannt"), "verbannt");});
test("verbannung -> verbann", function() {deepEqual( Stem("verbannung"), "verbann");});
test("verbarg -> verbarg", function() {deepEqual( Stem("verbarg"), "verbarg");});
test("verbargen -> verbarg", function() {deepEqual( Stem("verbargen"), "verbarg");});
test("verbat -> verbat", function() {deepEqual( Stem("verbat"), "verbat");});
test("verbereitung -> verbereit", function() {deepEqual( Stem("verbereitung"), "verbereit");});
test("verbergen -> verberg", function() {deepEqual( Stem("verbergen"), "verberg");});
test("verberget -> verberget", function() {deepEqual( Stem("verberget"), "verberget");});
test("verbesserlichkeit -> verbesser", function() {deepEqual( Stem("verbesserlichkeit"), "verbesser");});
test("verbessern -> verbess", function() {deepEqual( Stem("verbessern"), "verbess");});
test("verbesserte -> verbessert", function() {deepEqual( Stem("verbesserte"), "verbessert");});
test("verbesserungen -> verbesser", function() {deepEqual( Stem("verbesserungen"), "verbesser");});
test("verbesserungsbedürftigkeit -> verbesserungsbedurft", function() {deepEqual( Stem("verbesserungsbedürftigkeit"), "verbesserungsbedurft");});
test("verbesserungsvorschläge -> verbesserungsvorschlag", function() {deepEqual( Stem("verbesserungsvorschläge"), "verbesserungsvorschlag");});
test("verbeugend -> verbeug", function() {deepEqual( Stem("verbeugend"), "verbeug");});
test("verbeugte -> verbeugt", function() {deepEqual( Stem("verbeugte"), "verbeugt");});
test("verbeugten -> verbeugt", function() {deepEqual( Stem("verbeugten"), "verbeugt");});
test("verbeugung -> verbeug", function() {deepEqual( Stem("verbeugung"), "verbeug");});
test("verbeugungen -> verbeug", function() {deepEqual( Stem("verbeugungen"), "verbeug");});
test("verbeulten -> verbeult", function() {deepEqual( Stem("verbeulten"), "verbeult");});
test("verbiegt -> verbiegt", function() {deepEqual( Stem("verbiegt"), "verbiegt");});
test("verbiete -> verbiet", function() {deepEqual( Stem("verbiete"), "verbiet");});
test("verbieten -> verbiet", function() {deepEqual( Stem("verbieten"), "verbiet");});
test("verbinde -> verbind", function() {deepEqual( Stem("verbinde"), "verbind");});
test("verbinden -> verbind", function() {deepEqual( Stem("verbinden"), "verbind");});
test("verbindet -> verbindet", function() {deepEqual( Stem("verbindet"), "verbindet");});
test("verbindlichkeit -> verbind", function() {deepEqual( Stem("verbindlichkeit"), "verbind");});
test("verbindlichkeiten -> verbind", function() {deepEqual( Stem("verbindlichkeiten"), "verbind");});
test("verbindung -> verbind", function() {deepEqual( Stem("verbindung"), "verbind");});
test("verbindungen -> verbind", function() {deepEqual( Stem("verbindungen"), "verbind");});
test("verbindungsmittel -> verbindungsmittel", function() {deepEqual( Stem("verbindungsmittel"), "verbindungsmittel");});
test("verbirg -> verbirg", function() {deepEqual( Stem("verbirg"), "verbirg");});
test("verbirgst -> verbirg", function() {deepEqual( Stem("verbirgst"), "verbirg");});
test("verbirgt -> verbirgt", function() {deepEqual( Stem("verbirgt"), "verbirgt");});
test("verbis -> verbis", function() {deepEqual( Stem("verbis"), "verbis");});
test("verbissen -> verbiss", function() {deepEqual( Stem("verbissen"), "verbiss");});
test("verbissenheit -> verbiss", function() {deepEqual( Stem("verbissenheit"), "verbiss");});
test("verbittert -> verbittert", function() {deepEqual( Stem("verbittert"), "verbittert");});
test("verbitterte -> verbittert", function() {deepEqual( Stem("verbitterte"), "verbittert");});
test("verbitterten -> verbittert", function() {deepEqual( Stem("verbitterten"), "verbittert");});
test("verbittertwerden -> verbittertwerd", function() {deepEqual( Stem("verbittertwerden"), "verbittertwerd");});
test("verbleib -> verbleib", function() {deepEqual( Stem("verbleib"), "verbleib");});
test("verbleibe -> verbleib", function() {deepEqual( Stem("verbleibe"), "verbleib");});
test("verbleiben -> verbleib", function() {deepEqual( Stem("verbleiben"), "verbleib");});
test("verbleibt -> verbleibt", function() {deepEqual( Stem("verbleibt"), "verbleibt");});
test("verblenden -> verblend", function() {deepEqual( Stem("verblenden"), "verblend");});
test("verblendet -> verblendet", function() {deepEqual( Stem("verblendet"), "verblendet");});
test("verblendeten -> verblendet", function() {deepEqual( Stem("verblendeten"), "verblendet");});
test("verblendung -> verblend", function() {deepEqual( Stem("verblendung"), "verblend");});
test("verblichen -> verblich", function() {deepEqual( Stem("verblichen"), "verblich");});
test("verblichenen -> verblich", function() {deepEqual( Stem("verblichenen"), "verblich");});
test("verbliebe -> verblieb", function() {deepEqual( Stem("verbliebe"), "verblieb");});
test("verblieben -> verblieb", function() {deepEqual( Stem("verblieben"), "verblieb");});
test("verbliebenen -> verblieb", function() {deepEqual( Stem("verbliebenen"), "verblieb");});
test("verblüffen -> verbluff", function() {deepEqual( Stem("verblüffen"), "verbluff");});
test("verblüfft -> verblufft", function() {deepEqual( Stem("verblüfft"), "verblufft");});
test("verblüfften -> verblufft", function() {deepEqual( Stem("verblüfften"), "verblufft");});
test("verblüfftesten -> verblufft", function() {deepEqual( Stem("verblüfftesten"), "verblufft");});
test("verblüffung -> verbluff", function() {deepEqual( Stem("verblüffung"), "verbluff");});
test("verblüht -> verbluht", function() {deepEqual( Stem("verblüht"), "verbluht");});
test("verblümt -> verblumt", function() {deepEqual( Stem("verblümt"), "verblumt");});
test("verblümtes -> verblumt", function() {deepEqual( Stem("verblümtes"), "verblumt");});
test("verborgen -> verborg", function() {deepEqual( Stem("verborgen"), "verborg");});
test("verborgene -> verborg", function() {deepEqual( Stem("verborgene"), "verborg");});
test("verborgenen -> verborg", function() {deepEqual( Stem("verborgenen"), "verborg");});
test("verborgener -> verborg", function() {deepEqual( Stem("verborgener"), "verborg");});
test("verborgenes -> verborg", function() {deepEqual( Stem("verborgenes"), "verborg");});
test("verborgenheit -> verborg", function() {deepEqual( Stem("verborgenheit"), "verborg");});
test("verborgenheiten -> verborg", function() {deepEqual( Stem("verborgenheiten"), "verborg");});
test("verborgenwerden -> verborgenwerd", function() {deepEqual( Stem("verborgenwerden"), "verborgenwerd");});
test("verbot -> verbot", function() {deepEqual( Stem("verbot"), "verbot");});
test("verboten -> verbot", function() {deepEqual( Stem("verboten"), "verbot");});
test("verbracht -> verbracht", function() {deepEqual( Stem("verbracht"), "verbracht");});
test("verbrachte -> verbracht", function() {deepEqual( Stem("verbrachte"), "verbracht");});
test("verbrachtem -> verbracht", function() {deepEqual( Stem("verbrachtem"), "verbracht");});
test("verbrachten -> verbracht", function() {deepEqual( Stem("verbrachten"), "verbracht");});
test("verbrämt -> verbramt", function() {deepEqual( Stem("verbrämt"), "verbramt");});
test("verbrannt -> verbrannt", function() {deepEqual( Stem("verbrannt"), "verbrannt");});
test("verbrannte -> verbrannt", function() {deepEqual( Stem("verbrannte"), "verbrannt");});
test("verbrannten -> verbrannt", function() {deepEqual( Stem("verbrannten"), "verbrannt");});
test("verbraucht -> verbraucht", function() {deepEqual( Stem("verbraucht"), "verbraucht");});
test("verbrechen -> verbrech", function() {deepEqual( Stem("verbrechen"), "verbrech");});
test("verbrecherischen -> verbrecher", function() {deepEqual( Stem("verbrecherischen"), "verbrecher");});
test("verbreiten -> verbreit", function() {deepEqual( Stem("verbreiten"), "verbreit");});
test("verbreitet -> verbreitet", function() {deepEqual( Stem("verbreitet"), "verbreitet");});
test("verbreitete -> verbreitet", function() {deepEqual( Stem("verbreitete"), "verbreitet");});
test("verbrennen -> verbrenn", function() {deepEqual( Stem("verbrennen"), "verbrenn");});
test("verbrennt -> verbrennt", function() {deepEqual( Stem("verbrennt"), "verbrennt");});
test("verbrennung -> verbrenn", function() {deepEqual( Stem("verbrennung"), "verbrenn");});
test("verbringe -> verbring", function() {deepEqual( Stem("verbringe"), "verbring");});
test("verbringen -> verbring", function() {deepEqual( Stem("verbringen"), "verbring");});
test("verbringt -> verbringt", function() {deepEqual( Stem("verbringt"), "verbringt");});
test("verbrüderung -> verbruder", function() {deepEqual( Stem("verbrüderung"), "verbruder");});
test("verbrühen -> verbruh", function() {deepEqual( Stem("verbrühen"), "verbruh");});
test("verbuhltes -> verbuhlt", function() {deepEqual( Stem("verbuhltes"), "verbuhlt");});
test("verbum -> verbum", function() {deepEqual( Stem("verbum"), "verbum");});
test("verbunden -> verbund", function() {deepEqual( Stem("verbunden"), "verbund");});
test("verbundene -> verbund", function() {deepEqual( Stem("verbundene"), "verbund");});
test("verbundenen -> verbund", function() {deepEqual( Stem("verbundenen"), "verbund");});
test("verbundenes -> verbund", function() {deepEqual( Stem("verbundenes"), "verbund");});
test("verdacht -> verdacht", function() {deepEqual( Stem("verdacht"), "verdacht");});
test("verdachte -> verdacht", function() {deepEqual( Stem("verdachte"), "verdacht");});
test("verdächtig -> verdacht", function() {deepEqual( Stem("verdächtig"), "verdacht");});
test("verdächtiges -> verdacht", function() {deepEqual( Stem("verdächtiges"), "verdacht");});
test("verdächtigt -> verdachtigt", function() {deepEqual( Stem("verdächtigt"), "verdachtigt");});
test("verdamme -> verdamm", function() {deepEqual( Stem("verdamme"), "verdamm");});
test("verdammen -> verdamm", function() {deepEqual( Stem("verdammen"), "verdamm");});
test("verdammlich -> verdamm", function() {deepEqual( Stem("verdammlich"), "verdamm");});
test("verdammnis -> verdammnis", function() {deepEqual( Stem("verdammnis"), "verdammnis");});
test("verdammt -> verdammt", function() {deepEqual( Stem("verdammt"), "verdammt");});
test("verdammte -> verdammt", function() {deepEqual( Stem("verdammte"), "verdammt");});
test("verdammtem -> verdammt", function() {deepEqual( Stem("verdammtem"), "verdammt");});
test("verdammten -> verdammt", function() {deepEqual( Stem("verdammten"), "verdammt");});
test("verdammungen -> verdamm", function() {deepEqual( Stem("verdammungen"), "verdamm");});
test("verdampften -> verdampft", function() {deepEqual( Stem("verdampften"), "verdampft");});
test("verdanke -> verdank", function() {deepEqual( Stem("verdanke"), "verdank");});
test("verdanken -> verdank", function() {deepEqual( Stem("verdanken"), "verdank");});
test("verdankt -> verdankt", function() {deepEqual( Stem("verdankt"), "verdankt");});
test("verdarb -> verdarb", function() {deepEqual( Stem("verdarb"), "verdarb");});
test("verdarben -> verdarb", function() {deepEqual( Stem("verdarben"), "verdarb");});
test("verdauen -> verdau", function() {deepEqual( Stem("verdauen"), "verdau");});
test("verdeckt -> verdeckt", function() {deepEqual( Stem("verdeckt"), "verdeckt");});
test("verdeckte -> verdeckt", function() {deepEqual( Stem("verdeckte"), "verdeckt");});
test("verdenken -> verdenk", function() {deepEqual( Stem("verdenken"), "verdenk");});
test("verderbe -> verderb", function() {deepEqual( Stem("verderbe"), "verderb");});
test("verderben -> verderb", function() {deepEqual( Stem("verderben"), "verderb");});
test("verderbende -> verderb", function() {deepEqual( Stem("verderbende"), "verderb");});
test("verderbenden -> verderb", function() {deepEqual( Stem("verderbenden"), "verderb");});
test("verderber -> verderb", function() {deepEqual( Stem("verderber"), "verderb");});
test("verderblich -> verderb", function() {deepEqual( Stem("verderblich"), "verderb");});
test("verderbliche -> verderb", function() {deepEqual( Stem("verderbliche"), "verderb");});
test("verderblichen -> verderb", function() {deepEqual( Stem("verderblichen"), "verderb");});
test("verderbnis -> verderbnis", function() {deepEqual( Stem("verderbnis"), "verderbnis");});
test("verderbt -> verderbt", function() {deepEqual( Stem("verderbt"), "verderbt");});
test("verderbtheit -> verderbt", function() {deepEqual( Stem("verderbtheit"), "verderbt");});
test("verdichtet -> verdichtet", function() {deepEqual( Stem("verdichtet"), "verdichtet");});
test("verdienen -> verdi", function() {deepEqual( Stem("verdienen"), "verdi");});
test("verdienst -> verdien", function() {deepEqual( Stem("verdienst"), "verdien");});
test("verdienste -> verdien", function() {deepEqual( Stem("verdienste"), "verdien");});
test("verdienstlich -> verdienst", function() {deepEqual( Stem("verdienstlich"), "verdienst");});
test("verdienstlichen -> verdienst", function() {deepEqual( Stem("verdienstlichen"), "verdienst");});
test("verdienstlicher -> verdienst", function() {deepEqual( Stem("verdienstlicher"), "verdienst");});
test("verdient -> verdient", function() {deepEqual( Stem("verdient"), "verdient");});
test("verdiente -> verdient", function() {deepEqual( Stem("verdiente"), "verdient");});
test("verdientermassen -> verdientermass", function() {deepEqual( Stem("verdientermassen"), "verdientermass");});
test("verdientermaßen -> verdientermass", function() {deepEqual( Stem("verdientermaßen"), "verdientermass");});
test("verdingen -> verding", function() {deepEqual( Stem("verdingen"), "verding");});
test("verdirbt -> verdirbt", function() {deepEqual( Stem("verdirbt"), "verdirbt");});
test("verdoppelt -> verdoppelt", function() {deepEqual( Stem("verdoppelt"), "verdoppelt");});
test("verdoppeltem -> verdoppelt", function() {deepEqual( Stem("verdoppeltem"), "verdoppelt");});
test("verdoppelten -> verdoppelt", function() {deepEqual( Stem("verdoppelten"), "verdoppelt");});
test("verdorben -> verdorb", function() {deepEqual( Stem("verdorben"), "verdorb");});
test("verdorbene -> verdorb", function() {deepEqual( Stem("verdorbene"), "verdorb");});
test("verdorbenen -> verdorb", function() {deepEqual( Stem("verdorbenen"), "verdorb");});
test("verdorbenerweise -> verdorbenerweis", function() {deepEqual( Stem("verdorbenerweise"), "verdorbenerweis");});
test("verdorren -> verdorr", function() {deepEqual( Stem("verdorren"), "verdorr");});
test("verdorrt -> verdorrt", function() {deepEqual( Stem("verdorrt"), "verdorrt");});
test("verdorrte -> verdorrt", function() {deepEqual( Stem("verdorrte"), "verdorrt");});
test("verdorrter -> verdorrt", function() {deepEqual( Stem("verdorrter"), "verdorrt");});
test("verdrängen -> verdrang", function() {deepEqual( Stem("verdrängen"), "verdrang");});
test("verdrängt -> verdrangt", function() {deepEqual( Stem("verdrängt"), "verdrangt");});
test("verdrehen -> verdreh", function() {deepEqual( Stem("verdrehen"), "verdreh");});
test("verdrehend -> verdreh", function() {deepEqual( Stem("verdrehend"), "verdreh");});
test("verdreht -> verdreht", function() {deepEqual( Stem("verdreht"), "verdreht");});
test("verdrehte -> verdreht", function() {deepEqual( Stem("verdrehte"), "verdreht");});
test("verdrehten -> verdreht", function() {deepEqual( Stem("verdrehten"), "verdreht");});
test("verdrehter -> verdreht", function() {deepEqual( Stem("verdrehter"), "verdreht");});
test("verdrehtheit -> verdreht", function() {deepEqual( Stem("verdrehtheit"), "verdreht");});
test("verdreifachen -> verdreifach", function() {deepEqual( Stem("verdreifachen"), "verdreifach");});
test("verdriesslich -> verdriess", function() {deepEqual( Stem("verdriesslich"), "verdriess");});
test("verdrießlich -> verdriess", function() {deepEqual( Stem("verdrießlich"), "verdriess");});
test("verdrossen -> verdross", function() {deepEqual( Stem("verdrossen"), "verdross");});
test("verdruss -> verdruss", function() {deepEqual( Stem("verdruss"), "verdruss");});
test("verdruß -> verdruss", function() {deepEqual( Stem("verdruß"), "verdruss");});
test("verdunkeln -> verdunkeln", function() {deepEqual( Stem("verdunkeln"), "verdunkeln");});
test("verdunkelt -> verdunkelt", function() {deepEqual( Stem("verdunkelt"), "verdunkelt");});
test("verdunkelte -> verdunkelt", function() {deepEqual( Stem("verdunkelte"), "verdunkelt");});
test("verdunkelten -> verdunkelt", function() {deepEqual( Stem("verdunkelten"), "verdunkelt");});
test("verdunkelung -> verdunkel", function() {deepEqual( Stem("verdunkelung"), "verdunkel");});
test("verdunklung -> verdunkl", function() {deepEqual( Stem("verdunklung"), "verdunkl");});
test("verdursten -> verdurst", function() {deepEqual( Stem("verdursten"), "verdurst");});
test("verdutzt -> verdutzt", function() {deepEqual( Stem("verdutzt"), "verdutzt");});
test("verdutzte -> verdutzt", function() {deepEqual( Stem("verdutzte"), "verdutzt");});
test("verdutztes -> verdutzt", function() {deepEqual( Stem("verdutztes"), "verdutzt");});
test("veredelt -> veredelt", function() {deepEqual( Stem("veredelt"), "veredelt");});
test("verehelichen -> verehe", function() {deepEqual( Stem("verehelichen"), "verehe");});
test("verehelicht -> verehelicht", function() {deepEqual( Stem("verehelicht"), "verehelicht");});
test("verehren -> verehr", function() {deepEqual( Stem("verehren"), "verehr");});
test("verehrer -> verehr", function() {deepEqual( Stem("verehrer"), "verehr");});
test("verehrt -> verehrt", function() {deepEqual( Stem("verehrt"), "verehrt");});
test("verehrte -> verehrt", function() {deepEqual( Stem("verehrte"), "verehrt");});
test("verehrten -> verehrt", function() {deepEqual( Stem("verehrten"), "verehrt");});
test("verehrung -> verehr", function() {deepEqual( Stem("verehrung"), "verehr");});
test("verehrungswürdig -> verehrungswurd", function() {deepEqual( Stem("verehrungswürdig"), "verehrungswurd");});
test("verein -> verein", function() {deepEqual( Stem("verein"), "verein");});
test("vereinbarung -> vereinbar", function() {deepEqual( Stem("vereinbarung"), "vereinbar");});
test("vereine -> verein", function() {deepEqual( Stem("vereine"), "verein");});
test("vereinicht -> vereinicht", function() {deepEqual( Stem("vereinicht"), "vereinicht");});
test("vereinigen -> verein", function() {deepEqual( Stem("vereinigen"), "verein");});
test("vereinigende -> verein", function() {deepEqual( Stem("vereinigende"), "verein");});
test("vereinigt -> vereinigt", function() {deepEqual( Stem("vereinigt"), "vereinigt");});
test("vereinigte -> vereinigt", function() {deepEqual( Stem("vereinigte"), "vereinigt");});
test("vereinigung -> verein", function() {deepEqual( Stem("vereinigung"), "verein");});
test("vereins -> verein", function() {deepEqual( Stem("vereins"), "verein");});
test("vereinsversammlung -> vereinsversamml", function() {deepEqual( Stem("vereinsversammlung"), "vereinsversamml");});
test("vereint -> vereint", function() {deepEqual( Stem("vereint"), "vereint");});
test("vereinte -> vereint", function() {deepEqual( Stem("vereinte"), "vereint");});
test("vereinten -> vereint", function() {deepEqual( Stem("vereinten"), "vereint");});
test("vereinzelte -> vereinzelt", function() {deepEqual( Stem("vereinzelte"), "vereinzelt");});
test("vereinzelten -> vereinzelt", function() {deepEqual( Stem("vereinzelten"), "vereinzelt");});
test("vereinzeltes -> vereinzelt", function() {deepEqual( Stem("vereinzeltes"), "vereinzelt");});
test("vereiteln -> vereiteln", function() {deepEqual( Stem("vereiteln"), "vereiteln");});
test("vereitelt -> vereitelt", function() {deepEqual( Stem("vereitelt"), "vereitelt");});
test("verena -> verena", function() {deepEqual( Stem("verena"), "verena");});
test("verendet -> verendet", function() {deepEqual( Stem("verendet"), "verendet");});
test("vererbt -> vererbt", function() {deepEqual( Stem("vererbt"), "vererbt");});
test("vererbten -> vererbt", function() {deepEqual( Stem("vererbten"), "vererbt");});
test("vererbung -> vererb", function() {deepEqual( Stem("vererbung"), "vererb");});
test("verfahre -> verfahr", function() {deepEqual( Stem("verfahre"), "verfahr");});
test("verfahren -> verfahr", function() {deepEqual( Stem("verfahren"), "verfahr");});
test("verfahrens -> verfahr", function() {deepEqual( Stem("verfahrens"), "verfahr");});
test("verfahrensweisen -> verfahrensweis", function() {deepEqual( Stem("verfahrensweisen"), "verfahrensweis");});
test("verfährt -> verfahrt", function() {deepEqual( Stem("verfährt"), "verfahrt");});
test("verfall -> verfall", function() {deepEqual( Stem("verfall"), "verfall");});
test("verfalle -> verfall", function() {deepEqual( Stem("verfalle"), "verfall");});
test("verfallen -> verfall", function() {deepEqual( Stem("verfallen"), "verfall");});
test("verfällt -> verfallt", function() {deepEqual( Stem("verfällt"), "verfallt");});
test("verfälschen -> verfalsch", function() {deepEqual( Stem("verfälschen"), "verfalsch");});
test("verfälscher -> verfalsch", function() {deepEqual( Stem("verfälscher"), "verfalsch");});
test("verfälscht -> verfalscht", function() {deepEqual( Stem("verfälscht"), "verfalscht");});
test("verfälschte -> verfalscht", function() {deepEqual( Stem("verfälschte"), "verfalscht");});
test("verfälschtem -> verfalscht", function() {deepEqual( Stem("verfälschtem"), "verfalscht");});
test("verfälschten -> verfalscht", function() {deepEqual( Stem("verfälschten"), "verfalscht");});
test("verfälschtes -> verfalscht", function() {deepEqual( Stem("verfälschtes"), "verfalscht");});
test("verfälschung -> verfalsch", function() {deepEqual( Stem("verfälschung"), "verfalsch");});
test("verfälschungen -> verfalsch", function() {deepEqual( Stem("verfälschungen"), "verfalsch");});
test("verfängliche -> verfang", function() {deepEqual( Stem("verfängliche"), "verfang");});
test("verfänglichen -> verfang", function() {deepEqual( Stem("verfänglichen"), "verfang");});
test("verfasser -> verfass", function() {deepEqual( Stem("verfasser"), "verfass");});
test("verfasst -> verfasst", function() {deepEqual( Stem("verfasst"), "verfasst");});
test("verfaßt -> verfasst", function() {deepEqual( Stem("verfaßt"), "verfasst");});
test("verfassten -> verfasst", function() {deepEqual( Stem("verfassten"), "verfasst");});
test("verfassung -> verfass", function() {deepEqual( Stem("verfassung"), "verfass");});
test("verfassungs -> verfass", function() {deepEqual( Stem("verfassungs"), "verfass");});
test("verfassungsänderung -> verfassungsander", function() {deepEqual( Stem("verfassungsänderung"), "verfassungsander");});
test("verfassungsrevisoren -> verfassungsrevisor", function() {deepEqual( Stem("verfassungsrevisoren"), "verfassungsrevisor");});
test("verfaulen -> verfaul", function() {deepEqual( Stem("verfaulen"), "verfaul");});
test("verfeature -> verfeatur", function() {deepEqual( Stem("verfeature"), "verfeatur");});
test("verfeaturt -> verfeaturt", function() {deepEqual( Stem("verfeaturt"), "verfeaturt");});
test("verfechten -> verfecht", function() {deepEqual( Stem("verfechten"), "verfecht");});
test("verfehlt -> verfehlt", function() {deepEqual( Stem("verfehlt"), "verfehlt");});
test("verfehlter -> verfehlt", function() {deepEqual( Stem("verfehlter"), "verfehlt");});
test("verfeinden -> verfeind", function() {deepEqual( Stem("verfeinden"), "verfeind");});
test("verfeindet -> verfeindet", function() {deepEqual( Stem("verfeindet"), "verfeindet");});
test("verfeindeten -> verfeindet", function() {deepEqual( Stem("verfeindeten"), "verfeindet");});
test("verfertigen -> verfert", function() {deepEqual( Stem("verfertigen"), "verfert");});
test("verfertigt -> verfertigt", function() {deepEqual( Stem("verfertigt"), "verfertigt");});
test("verfertigte -> verfertigt", function() {deepEqual( Stem("verfertigte"), "verfertigt");});
test("verfertigten -> verfertigt", function() {deepEqual( Stem("verfertigten"), "verfertigt");});
test("verfertigung -> verfert", function() {deepEqual( Stem("verfertigung"), "verfert");});
test("verfiel -> verfiel", function() {deepEqual( Stem("verfiel"), "verfiel");});
test("verfielen -> verfiel", function() {deepEqual( Stem("verfielen"), "verfiel");});
test("verfilztes -> verfilzt", function() {deepEqual( Stem("verfilztes"), "verfilzt");});
test("verfing -> verfing", function() {deepEqual( Stem("verfing"), "verfing");});
test("verfinstern -> verfin", function() {deepEqual( Stem("verfinstern"), "verfin");});
test("verfinstert -> verfinstert", function() {deepEqual( Stem("verfinstert"), "verfinstert");});
test("verfinsterte -> verfinstert", function() {deepEqual( Stem("verfinsterte"), "verfinstert");});
test("verfinsterten -> verfinstert", function() {deepEqual( Stem("verfinsterten"), "verfinstert");});
test("verfinstertwerden -> verfinstertwerd", function() {deepEqual( Stem("verfinstertwerden"), "verfinstertwerd");});
test("verflacht -> verflacht", function() {deepEqual( Stem("verflacht"), "verflacht");});
test("verfliegt -> verfliegt", function() {deepEqual( Stem("verfliegt"), "verfliegt");});
test("verflochtenen -> verflocht", function() {deepEqual( Stem("verflochtenen"), "verflocht");});
test("verflogen -> verflog", function() {deepEqual( Stem("verflogen"), "verflog");});
test("verfloss -> verfloss", function() {deepEqual( Stem("verfloss"), "verfloss");});
test("verflossen -> verfloss", function() {deepEqual( Stem("verflossen"), "verfloss");});
test("verfluche -> verfluch", function() {deepEqual( Stem("verfluche"), "verfluch");});
test("verfluchen -> verfluch", function() {deepEqual( Stem("verfluchen"), "verfluch");});
test("verfluchend -> verfluch", function() {deepEqual( Stem("verfluchend"), "verfluch");});
test("verflucht -> verflucht", function() {deepEqual( Stem("verflucht"), "verflucht");});
test("verfluchte -> verflucht", function() {deepEqual( Stem("verfluchte"), "verflucht");});
test("verfluchten -> verflucht", function() {deepEqual( Stem("verfluchten"), "verflucht");});
test("verflüchtigt -> verfluchtigt", function() {deepEqual( Stem("verflüchtigt"), "verfluchtigt");});
test("verfolgen -> verfolg", function() {deepEqual( Stem("verfolgen"), "verfolg");});
test("verfolger -> verfolg", function() {deepEqual( Stem("verfolger"), "verfolg");});
test("verfolgern -> verfolg", function() {deepEqual( Stem("verfolgern"), "verfolg");});
test("verfolgt -> verfolgt", function() {deepEqual( Stem("verfolgt"), "verfolgt");});
test("verfolgte -> verfolgt", function() {deepEqual( Stem("verfolgte"), "verfolgt");});
test("verfolgten -> verfolgt", function() {deepEqual( Stem("verfolgten"), "verfolgt");});
test("verfolgung -> verfolg", function() {deepEqual( Stem("verfolgung"), "verfolg");});
test("verfremdung -> verfremd", function() {deepEqual( Stem("verfremdung"), "verfremd");});
test("verfriere -> verfri", function() {deepEqual( Stem("verfriere"), "verfri");});
test("verfügen -> verfug", function() {deepEqual( Stem("verfügen"), "verfug");});
test("verfügt -> verfugt", function() {deepEqual( Stem("verfügt"), "verfugt");});
test("verfügte -> verfugt", function() {deepEqual( Stem("verfügte"), "verfugt");});
test("verfügung -> verfug", function() {deepEqual( Stem("verfügung"), "verfug");});
test("verfügungsrecht -> verfugungsrecht", function() {deepEqual( Stem("verfügungsrecht"), "verfugungsrecht");});
test("verfuhr -> verfuhr", function() {deepEqual( Stem("verfuhr"), "verfuhr");});
test("verfuhren -> verfuhr", function() {deepEqual( Stem("verfuhren"), "verfuhr");});
test("verführen -> verfuhr", function() {deepEqual( Stem("verführen"), "verfuhr");});
test("verführer -> verfuhr", function() {deepEqual( Stem("verführer"), "verfuhr");});
test("verführerische -> verfuhrer", function() {deepEqual( Stem("verführerische"), "verfuhrer");});
test("verführerischen -> verfuhrer", function() {deepEqual( Stem("verführerischen"), "verfuhrer");});
test("verführt -> verfuhrt", function() {deepEqual( Stem("verführt"), "verfuhrt");});
test("verführte -> verfuhrt", function() {deepEqual( Stem("verführte"), "verfuhrt");});
test("vergabte -> vergabt", function() {deepEqual( Stem("vergabte"), "vergabt");});
test("vergangen -> vergang", function() {deepEqual( Stem("vergangen"), "vergang");});
test("vergangene -> vergang", function() {deepEqual( Stem("vergangene"), "vergang");});
test("vergangenen -> vergang", function() {deepEqual( Stem("vergangenen"), "vergang");});
test("vergangenheit -> vergang", function() {deepEqual( Stem("vergangenheit"), "vergang");});
test("vergänglich -> vergang", function() {deepEqual( Stem("vergänglich"), "vergang");});
test("vergänglichkeit -> vergang", function() {deepEqual( Stem("vergänglichkeit"), "vergang");});
test("vergass -> vergass", function() {deepEqual( Stem("vergass"), "vergass");});
test("vergaß -> vergass", function() {deepEqual( Stem("vergaß"), "vergass");});
test("vergassen -> vergass", function() {deepEqual( Stem("vergassen"), "vergass");});
test("vergaßen -> vergass", function() {deepEqual( Stem("vergaßen"), "vergass");});
test("vergeben -> vergeb", function() {deepEqual( Stem("vergeben"), "vergeb");});
test("vergebens -> vergeb", function() {deepEqual( Stem("vergebens"), "vergeb");});
test("vergeblich -> vergeb", function() {deepEqual( Stem("vergeblich"), "vergeb");});
test("vergebliche -> vergeb", function() {deepEqual( Stem("vergebliche"), "vergeb");});
test("vergeblichen -> vergeb", function() {deepEqual( Stem("vergeblichen"), "vergeb");});
test("vergebliches -> vergeb", function() {deepEqual( Stem("vergebliches"), "vergeb");});
test("vergeblichkeit -> vergeb", function() {deepEqual( Stem("vergeblichkeit"), "vergeb");});
test("vergebung -> vergeb", function() {deepEqual( Stem("vergebung"), "vergeb");});
test("vergegenwärtigte -> vergegenwartigt", function() {deepEqual( Stem("vergegenwärtigte"), "vergegenwartigt");});
test("vergehen -> vergeh", function() {deepEqual( Stem("vergehen"), "vergeh");});
test("vergehet -> vergehet", function() {deepEqual( Stem("vergehet"), "vergehet");});
test("vergehn -> vergehn", function() {deepEqual( Stem("vergehn"), "vergehn");});
test("vergeht -> vergeht", function() {deepEqual( Stem("vergeht"), "vergeht");});
test("vergelten -> vergelt", function() {deepEqual( Stem("vergelten"), "vergelt");});
test("vergelts -> vergelt", function() {deepEqual( Stem("vergelts"), "vergelt");});
test("vergeltung -> vergelt", function() {deepEqual( Stem("vergeltung"), "vergelt");});
test("vergessen -> vergess", function() {deepEqual( Stem("vergessen"), "vergess");});
test("vergessend -> vergess", function() {deepEqual( Stem("vergessend"), "vergess");});
test("vergessene -> vergess", function() {deepEqual( Stem("vergessene"), "vergess");});
test("vergessener -> vergess", function() {deepEqual( Stem("vergessener"), "vergess");});
test("vergessenheit -> vergess", function() {deepEqual( Stem("vergessenheit"), "vergess");});
test("vergesslichkeit -> vergess", function() {deepEqual( Stem("vergesslichkeit"), "vergess");});
test("vergeßlichkeit -> vergess", function() {deepEqual( Stem("vergeßlichkeit"), "vergess");});
test("vergesst -> vergesst", function() {deepEqual( Stem("vergesst"), "vergesst");});
test("vergeuden -> vergeud", function() {deepEqual( Stem("vergeuden"), "vergeud");});
test("vergib -> vergib", function() {deepEqual( Stem("vergib"), "vergib");});
test("vergibst -> vergib", function() {deepEqual( Stem("vergibst"), "vergib");});
test("vergiessen -> vergiess", function() {deepEqual( Stem("vergiessen"), "vergiess");});
test("vergießen -> vergiess", function() {deepEqual( Stem("vergießen"), "vergiess");});
test("vergiessend -> vergiess", function() {deepEqual( Stem("vergiessend"), "vergiess");});
test("vergiesst -> vergiesst", function() {deepEqual( Stem("vergiesst"), "vergiesst");});
test("vergießt -> vergiesst", function() {deepEqual( Stem("vergießt"), "vergiesst");});
test("vergiftet -> vergiftet", function() {deepEqual( Stem("vergiftet"), "vergiftet");});
test("vergilbter -> vergilbt", function() {deepEqual( Stem("vergilbter"), "vergilbt");});
test("vergilt -> vergilt", function() {deepEqual( Stem("vergilt"), "vergilt");});
test("verging -> verging", function() {deepEqual( Stem("verging"), "verging");});
test("vergingen -> verging", function() {deepEqual( Stem("vergingen"), "verging");});
test("vergiss -> vergiss", function() {deepEqual( Stem("vergiss"), "vergiss");});
test("vergissest -> vergiss", function() {deepEqual( Stem("vergissest"), "vergiss");});
test("vergissmeinnicht -> vergissmeinnicht", function() {deepEqual( Stem("vergissmeinnicht"), "vergissmeinnicht");});
test("vergissmeinnichtschnäpschen -> vergissmeinnichtschnapsch", function() {deepEqual( Stem("vergissmeinnichtschnäpschen"), "vergissmeinnichtschnapsch");});
test("vergissmeinnichtschnäpse -> vergissmeinnichtschnaps", function() {deepEqual( Stem("vergissmeinnichtschnäpse"), "vergissmeinnichtschnaps");});
test("vergisst -> vergisst", function() {deepEqual( Stem("vergisst"), "vergisst");});
test("vergleich -> vergleich", function() {deepEqual( Stem("vergleich"), "vergleich");});
test("vergleiche -> vergleich", function() {deepEqual( Stem("vergleiche"), "vergleich");});
test("vergleichen -> vergleich", function() {deepEqual( Stem("vergleichen"), "vergleich");});
test("vergleichsfällen -> vergleichsfall", function() {deepEqual( Stem("vergleichsfällen"), "vergleichsfall");});
test("vergleichskriterium -> vergleichskriterium", function() {deepEqual( Stem("vergleichskriterium"), "vergleichskriterium");});
test("vergleichsweise -> vergleichsweis", function() {deepEqual( Stem("vergleichsweise"), "vergleichsweis");});
test("vergleicht -> vergleicht", function() {deepEqual( Stem("vergleicht"), "vergleicht");});
test("vergleichung -> vergleich", function() {deepEqual( Stem("vergleichung"), "vergleich");});
test("vergleichungen -> vergleich", function() {deepEqual( Stem("vergleichungen"), "vergleich");});
test("verglichen -> verglich", function() {deepEqual( Stem("verglichen"), "verglich");});
test("vergnügen -> vergnug", function() {deepEqual( Stem("vergnügen"), "vergnug");});
test("vergnügenden -> vergnug", function() {deepEqual( Stem("vergnügenden"), "vergnug");});
test("vergnügens -> vergnug", function() {deepEqual( Stem("vergnügens"), "vergnug");});
test("vergnüglich -> vergnug", function() {deepEqual( Stem("vergnüglich"), "vergnug");});
test("vergnüglichen -> vergnug", function() {deepEqual( Stem("vergnüglichen"), "vergnug");});
test("vergnügliches -> vergnug", function() {deepEqual( Stem("vergnügliches"), "vergnug");});
test("vergnügt -> vergnugt", function() {deepEqual( Stem("vergnügt"), "vergnugt");});
test("vergnügte -> vergnugt", function() {deepEqual( Stem("vergnügte"), "vergnugt");});
test("vergnügtem -> vergnugt", function() {deepEqual( Stem("vergnügtem"), "vergnugt");});
test("vergnügten -> vergnugt", function() {deepEqual( Stem("vergnügten"), "vergnugt");});
test("vergnügter -> vergnugt", function() {deepEqual( Stem("vergnügter"), "vergnugt");});
test("vergnügteste -> vergnugt", function() {deepEqual( Stem("vergnügteste"), "vergnugt");});
test("vergnügtheit -> vergnugt", function() {deepEqual( Stem("vergnügtheit"), "vergnugt");});
test("vergnügungen -> vergnug", function() {deepEqual( Stem("vergnügungen"), "vergnug");});
test("vergnügungslokalen -> vergnugungslokal", function() {deepEqual( Stem("vergnügungslokalen"), "vergnugungslokal");});
test("vergnügungssucht -> vergnugungssucht", function() {deepEqual( Stem("vergnügungssucht"), "vergnugungssucht");});
test("vergnügungstagen -> vergnugungstag", function() {deepEqual( Stem("vergnügungstagen"), "vergnugungstag");});
test("vergoldet -> vergoldet", function() {deepEqual( Stem("vergoldet"), "vergoldet");});
test("vergoldete -> vergoldet", function() {deepEqual( Stem("vergoldete"), "vergoldet");});
test("vergoldetem -> vergoldet", function() {deepEqual( Stem("vergoldetem"), "vergoldet");});
test("vergoldeten -> vergoldet", function() {deepEqual( Stem("vergoldeten"), "vergoldet");});
test("vergoldeter -> vergoldet", function() {deepEqual( Stem("vergoldeter"), "vergoldet");});
test("vergoldetes -> vergoldet", function() {deepEqual( Stem("vergoldetes"), "vergoldet");});
test("vergolten -> vergolt", function() {deepEqual( Stem("vergolten"), "vergolt");});
test("vergönnt -> vergonnt", function() {deepEqual( Stem("vergönnt"), "vergonnt");});
test("vergoss -> vergoss", function() {deepEqual( Stem("vergoss"), "vergoss");});
test("vergoß -> vergoss", function() {deepEqual( Stem("vergoß"), "vergoss");});
test("vergossen -> vergoss", function() {deepEqual( Stem("vergossen"), "vergoss");});
test("vergöttert -> vergottert", function() {deepEqual( Stem("vergöttert"), "vergottert");});
test("vergraben -> vergrab", function() {deepEqual( Stem("vergraben"), "vergrab");});
test("vergrämt -> vergramt", function() {deepEqual( Stem("vergrämt"), "vergramt");});
test("vergrössern -> vergross", function() {deepEqual( Stem("vergrössern"), "vergross");});
test("vergrößern -> vergross", function() {deepEqual( Stem("vergrößern"), "vergross");});
test("vergrössert -> vergrossert", function() {deepEqual( Stem("vergrössert"), "vergrossert");});
test("vergrub -> vergrub", function() {deepEqual( Stem("vergrub"), "vergrub");});
test("vergüten -> vergut", function() {deepEqual( Stem("vergüten"), "vergut");});
test("verhaftbefehl -> verhaftbefehl", function() {deepEqual( Stem("verhaftbefehl"), "verhaftbefehl");});
test("verhaften -> verhaft", function() {deepEqual( Stem("verhaften"), "verhaft");});
test("verhaftet -> verhaftet", function() {deepEqual( Stem("verhaftet"), "verhaftet");});
test("verhafteten -> verhaftet", function() {deepEqual( Stem("verhafteten"), "verhaftet");});
test("verhaftung -> verhaft", function() {deepEqual( Stem("verhaftung"), "verhaft");});
test("verhalf -> verhalf", function() {deepEqual( Stem("verhalf"), "verhalf");});
test("verhallende -> verhall", function() {deepEqual( Stem("verhallende"), "verhall");});
test("verhallte -> verhallt", function() {deepEqual( Stem("verhallte"), "verhallt");});
test("verhält -> verhalt", function() {deepEqual( Stem("verhält"), "verhalt");});
test("verhalte -> verhalt", function() {deepEqual( Stem("verhalte"), "verhalt");});
test("verhalten -> verhalt", function() {deepEqual( Stem("verhalten"), "verhalt");});
test("verhaltend -> verhalt", function() {deepEqual( Stem("verhaltend"), "verhalt");});
test("verhaltenen -> verhalt", function() {deepEqual( Stem("verhaltenen"), "verhalt");});
test("verhaltener -> verhalt", function() {deepEqual( Stem("verhaltener"), "verhalt");});
test("verhaltens -> verhalt", function() {deepEqual( Stem("verhaltens"), "verhalt");});
test("verhältnis -> verhaltnis", function() {deepEqual( Stem("verhältnis"), "verhaltnis");});
test("verhältnismässig -> verhaltnismass", function() {deepEqual( Stem("verhältnismässig"), "verhaltnismass");});
test("verhältnismäßig -> verhaltnismass", function() {deepEqual( Stem("verhältnismäßig"), "verhaltnismass");});
test("verhältnisse -> verhaltnis", function() {deepEqual( Stem("verhältnisse"), "verhaltnis");});
test("verhältnissen -> verhaltnis", function() {deepEqual( Stem("verhältnissen"), "verhaltnis");});
test("verhältnisses -> verhaltnis", function() {deepEqual( Stem("verhältnisses"), "verhaltnis");});
test("verhandeln -> verhandeln", function() {deepEqual( Stem("verhandeln"), "verhandeln");});
test("verhandelte -> verhandelt", function() {deepEqual( Stem("verhandelte"), "verhandelt");});
test("verhandlung -> verhandl", function() {deepEqual( Stem("verhandlung"), "verhandl");});
test("verhandlungen -> verhandl", function() {deepEqual( Stem("verhandlungen"), "verhandl");});
test("verhängnis -> verhangnis", function() {deepEqual( Stem("verhängnis"), "verhangnis");});
test("verhängnisvollen -> verhangnisvoll", function() {deepEqual( Stem("verhängnisvollen"), "verhangnisvoll");});
test("verhängnisvollste -> verhangnisvoll", function() {deepEqual( Stem("verhängnisvollste"), "verhangnisvoll");});
test("verhärmten -> verharmt", function() {deepEqual( Stem("verhärmten"), "verharmt");});
test("verharre -> verharr", function() {deepEqual( Stem("verharre"), "verharr");});
test("verharrte -> verharrt", function() {deepEqual( Stem("verharrte"), "verharrt");});
test("verhärten -> verhart", function() {deepEqual( Stem("verhärten"), "verhart");});
test("verhärtet -> verhartet", function() {deepEqual( Stem("verhärtet"), "verhartet");});
test("verhärtete -> verhartet", function() {deepEqual( Stem("verhärtete"), "verhartet");});
test("verhärteten -> verhartet", function() {deepEqual( Stem("verhärteten"), "verhartet");});
test("verhärtung -> verhart", function() {deepEqual( Stem("verhärtung"), "verhart");});
test("verhasst -> verhasst", function() {deepEqual( Stem("verhasst"), "verhasst");});
test("verhassten -> verhasst", function() {deepEqual( Stem("verhassten"), "verhasst");});
test("verhasster -> verhasst", function() {deepEqual( Stem("verhasster"), "verhasst");});
test("verheerenden -> verheer", function() {deepEqual( Stem("verheerenden"), "verheer");});
test("verheert -> verheert", function() {deepEqual( Stem("verheert"), "verheert");});
test("verheerung -> verheer", function() {deepEqual( Stem("verheerung"), "verheer");});
test("verhehlten -> verhehlt", function() {deepEqual( Stem("verhehlten"), "verhehlt");});
test("verheimlichen -> verheim", function() {deepEqual( Stem("verheimlichen"), "verheim");});
test("verheiraten -> verheirat", function() {deepEqual( Stem("verheiraten"), "verheirat");});
test("verheiratet -> verheiratet", function() {deepEqual( Stem("verheiratet"), "verheiratet");});
test("verheiratete -> verheiratet", function() {deepEqual( Stem("verheiratete"), "verheiratet");});
test("verheirateten -> verheiratet", function() {deepEqual( Stem("verheirateten"), "verheiratet");});
test("verheiratetes -> verheiratet", function() {deepEqual( Stem("verheiratetes"), "verheiratet");});
test("verheissen -> verheiss", function() {deepEqual( Stem("verheissen"), "verheiss");});
test("verheißen -> verheiss", function() {deepEqual( Stem("verheißen"), "verheiss");});
test("verheissende -> verheiss", function() {deepEqual( Stem("verheissende"), "verheiss");});
test("verheißende -> verheiss", function() {deepEqual( Stem("verheißende"), "verheiss");});
test("verheisst -> verheisst", function() {deepEqual( Stem("verheisst"), "verheisst");});
test("verheissung -> verheiss", function() {deepEqual( Stem("verheissung"), "verheiss");});
test("verheißung -> verheiss", function() {deepEqual( Stem("verheißung"), "verheiss");});
test("verhelfen -> verhelf", function() {deepEqual( Stem("verhelfen"), "verhelf");});
test("verherrliche -> verherr", function() {deepEqual( Stem("verherrliche"), "verherr");});
test("verherrlichen -> verherr", function() {deepEqual( Stem("verherrlichen"), "verherr");});
test("verherrlichet -> verherrlichet", function() {deepEqual( Stem("verherrlichet"), "verherrlichet");});
test("verherrlicht -> verherrlicht", function() {deepEqual( Stem("verherrlicht"), "verherrlicht");});
test("verherrlichten -> verherrlicht", function() {deepEqual( Stem("verherrlichten"), "verherrlicht");});
test("verherrlichung -> verherrlich", function() {deepEqual( Stem("verherrlichung"), "verherrlich");});
test("verhext -> verhext", function() {deepEqual( Stem("verhext"), "verhext");});
test("verhielt -> verhielt", function() {deepEqual( Stem("verhielt"), "verhielt");});
test("verhielten -> verhielt", function() {deepEqual( Stem("verhielten"), "verhielt");});
test("verhindere -> verhind", function() {deepEqual( Stem("verhindere"), "verhind");});
test("verhindern -> verhind", function() {deepEqual( Stem("verhindern"), "verhind");});
test("verhindert -> verhindert", function() {deepEqual( Stem("verhindert"), "verhindert");});
test("verhinderte -> verhindert", function() {deepEqual( Stem("verhinderte"), "verhindert");});
test("verhinderten -> verhindert", function() {deepEqual( Stem("verhinderten"), "verhindert");});
test("verhofften -> verhofft", function() {deepEqual( Stem("verhofften"), "verhofft");});
test("verhöhnen -> verhohn", function() {deepEqual( Stem("verhöhnen"), "verhohn");});
test("verhöhnt -> verhohnt", function() {deepEqual( Stem("verhöhnt"), "verhohnt");});
test("verhöhnung -> verhohn", function() {deepEqual( Stem("verhöhnung"), "verhohn");});
test("verholfen -> verholf", function() {deepEqual( Stem("verholfen"), "verholf");});
test("verhör -> verhor", function() {deepEqual( Stem("verhör"), "verhor");});
test("verhöre -> verhor", function() {deepEqual( Stem("verhöre"), "verhor");});
test("verhören -> verhor", function() {deepEqual( Stem("verhören"), "verhor");});
test("verhülle -> verhull", function() {deepEqual( Stem("verhülle"), "verhull");});
test("verhüllt -> verhullt", function() {deepEqual( Stem("verhüllt"), "verhullt");});
test("verhüllte -> verhullt", function() {deepEqual( Stem("verhüllte"), "verhullt");});
test("verhüllung -> verhull", function() {deepEqual( Stem("verhüllung"), "verhull");});
test("verhundertfacht -> verhundertfacht", function() {deepEqual( Stem("verhundertfacht"), "verhundertfacht");});
test("verhungert -> verhungert", function() {deepEqual( Stem("verhungert"), "verhungert");});
test("verhungertes -> verhungert", function() {deepEqual( Stem("verhungertes"), "verhungert");});
test("verhüten -> verhut", function() {deepEqual( Stem("verhüten"), "verhut");});
test("verhütet -> verhutet", function() {deepEqual( Stem("verhütet"), "verhutet");});
test("verint -> verint", function() {deepEqual( Stem("verint"), "verint");});
test("verirren -> verirr", function() {deepEqual( Stem("verirren"), "verirr");});
test("verirrt -> verirrt", function() {deepEqual( Stem("verirrt"), "verirrt");});
test("verirrte -> verirrt", function() {deepEqual( Stem("verirrte"), "verirrt");});
test("verirrung -> verirr", function() {deepEqual( Stem("verirrung"), "verirr");});
test("veritas -> veritas", function() {deepEqual( Stem("veritas"), "veritas");});
test("verjährt -> verjahrt", function() {deepEqual( Stem("verjährt"), "verjahrt");});
test("verjährte -> verjahrt", function() {deepEqual( Stem("verjährte"), "verjahrt");});
test("verkauf -> verkauf", function() {deepEqual( Stem("verkauf"), "verkauf");});
test("verkaufen -> verkauf", function() {deepEqual( Stem("verkaufen"), "verkauf");});
test("verkaufssumme -> verkaufssumm", function() {deepEqual( Stem("verkaufssumme"), "verkaufssumm");});
test("verkauft -> verkauft", function() {deepEqual( Stem("verkauft"), "verkauft");});
test("verkauften -> verkauft", function() {deepEqual( Stem("verkauften"), "verkauft");});
test("verkehr -> verkehr", function() {deepEqual( Stem("verkehr"), "verkehr");});
test("verkehren -> verkehr", function() {deepEqual( Stem("verkehren"), "verkehr");});
test("verkehrs -> verkehr", function() {deepEqual( Stem("verkehrs"), "verkehr");});
test("verkehrt -> verkehrt", function() {deepEqual( Stem("verkehrt"), "verkehrt");});
test("verkehrte -> verkehrt", function() {deepEqual( Stem("verkehrte"), "verkehrt");});
test("verkehrten -> verkehrt", function() {deepEqual( Stem("verkehrten"), "verkehrt");});
test("verkehrtes -> verkehrt", function() {deepEqual( Stem("verkehrtes"), "verkehrt");});
test("verkehrtheit -> verkehrt", function() {deepEqual( Stem("verkehrtheit"), "verkehrt");});
test("verkehrtheiten -> verkehrt", function() {deepEqual( Stem("verkehrtheiten"), "verkehrt");});
test("verkehrung -> verkehr", function() {deepEqual( Stem("verkehrung"), "verkehr");});
test("verkehrungen -> verkehr", function() {deepEqual( Stem("verkehrungen"), "verkehr");});
test("verkennen -> verkenn", function() {deepEqual( Stem("verkennen"), "verkenn");});
test("verkennt -> verkennt", function() {deepEqual( Stem("verkennt"), "verkennt");});
test("verklammert -> verklammert", function() {deepEqual( Stem("verklammert"), "verklammert");});
test("verklang -> verklang", function() {deepEqual( Stem("verklang"), "verklang");});
test("verklärt -> verklart", function() {deepEqual( Stem("verklärt"), "verklart");});
test("verklärten -> verklart", function() {deepEqual( Stem("verklärten"), "verklart");});
test("verklärtes -> verklart", function() {deepEqual( Stem("verklärtes"), "verklart");});
test("verklebe -> verkleb", function() {deepEqual( Stem("verklebe"), "verkleb");});
test("verklebt -> verklebt", function() {deepEqual( Stem("verklebt"), "verklebt");});
test("verklebte -> verklebt", function() {deepEqual( Stem("verklebte"), "verklebt");});
test("verkleiden -> verkleid", function() {deepEqual( Stem("verkleiden"), "verkleid");});
test("verkleidet -> verkleidet", function() {deepEqual( Stem("verkleidet"), "verkleidet");});
test("verkleidung -> verkleid", function() {deepEqual( Stem("verkleidung"), "verkleid");});
test("verkleinern -> verklein", function() {deepEqual( Stem("verkleinern"), "verklein");});
test("verklungen -> verklung", function() {deepEqual( Stem("verklungen"), "verklung");});
test("verkneifen -> verkneif", function() {deepEqual( Stem("verkneifen"), "verkneif");});
test("verkniff -> verkniff", function() {deepEqual( Stem("verkniff"), "verkniff");});
test("verkniffen -> verkniff", function() {deepEqual( Stem("verkniffen"), "verkniff");});
test("verkniffenen -> verkniff", function() {deepEqual( Stem("verkniffenen"), "verkniff");});
test("verknüpfe -> verknupf", function() {deepEqual( Stem("verknüpfe"), "verknupf");});
test("verknüpfen -> verknupf", function() {deepEqual( Stem("verknüpfen"), "verknupf");});
test("verknüpft -> verknupft", function() {deepEqual( Stem("verknüpft"), "verknupft");});
test("verknüpfte -> verknupft", function() {deepEqual( Stem("verknüpfte"), "verknupft");});
test("verknüpften -> verknupft", function() {deepEqual( Stem("verknüpften"), "verknupft");});
test("verknüpfung -> verknupf", function() {deepEqual( Stem("verknüpfung"), "verknupf");});
test("verknüpfungen -> verknupf", function() {deepEqual( Stem("verknüpfungen"), "verknupf");});
test("verkommenen -> verkomm", function() {deepEqual( Stem("verkommenen"), "verkomm");});
test("verkommenheit -> verkomm", function() {deepEqual( Stem("verkommenheit"), "verkomm");});
test("verkriecht -> verkriecht", function() {deepEqual( Stem("verkriecht"), "verkriecht");});
test("verkrochen -> verkroch", function() {deepEqual( Stem("verkrochen"), "verkroch");});
test("verkrümmelten -> verkrummelt", function() {deepEqual( Stem("verkrümmelten"), "verkrummelt");});
test("verkrüppelt -> verkruppelt", function() {deepEqual( Stem("verkrüppelt"), "verkruppelt");});
test("verkühlung -> verkuhl", function() {deepEqual( Stem("verkühlung"), "verkuhl");});
test("verkünden -> verkund", function() {deepEqual( Stem("verkünden"), "verkund");});
test("verkündet -> verkundet", function() {deepEqual( Stem("verkündet"), "verkundet");});
test("verkündete -> verkundet", function() {deepEqual( Stem("verkündete"), "verkundet");});
test("verkündeten -> verkundet", function() {deepEqual( Stem("verkündeten"), "verkundet");});
test("verkündige -> verkund", function() {deepEqual( Stem("verkündige"), "verkund");});
test("verkündigen -> verkund", function() {deepEqual( Stem("verkündigen"), "verkund");});
test("verkündigt -> verkundigt", function() {deepEqual( Stem("verkündigt"), "verkundigt");});
test("verkündigte -> verkundigt", function() {deepEqual( Stem("verkündigte"), "verkundigt");});
test("verkündigung -> verkund", function() {deepEqual( Stem("verkündigung"), "verkund");});
test("verkünstelt -> verkunstelt", function() {deepEqual( Stem("verkünstelt"), "verkunstelt");});
test("verkürzen -> verkurz", function() {deepEqual( Stem("verkürzen"), "verkurz");});
test("verlachen -> verlach", function() {deepEqual( Stem("verlachen"), "verlach");});
test("verlacht -> verlacht", function() {deepEqual( Stem("verlacht"), "verlacht");});
test("verlag -> verlag", function() {deepEqual( Stem("verlag"), "verlag");});
test("verlages -> verlag", function() {deepEqual( Stem("verlages"), "verlag");});
test("verlagsmitteilung -> verlagsmitteil", function() {deepEqual( Stem("verlagsmitteilung"), "verlagsmitteil");});
test("verlange -> verlang", function() {deepEqual( Stem("verlange"), "verlang");});
test("verlangen -> verlang", function() {deepEqual( Stem("verlangen"), "verlang");});
test("verlangend -> verlang", function() {deepEqual( Stem("verlangend"), "verlang");});
test("verlängern -> verlang", function() {deepEqual( Stem("verlängern"), "verlang");});
test("verlängert -> verlangert", function() {deepEqual( Stem("verlängert"), "verlangert");});
test("verlängerten -> verlangert", function() {deepEqual( Stem("verlängerten"), "verlangert");});
test("verlangst -> verlang", function() {deepEqual( Stem("verlangst"), "verlang");});
test("verlangt -> verlangt", function() {deepEqual( Stem("verlangt"), "verlangt");});
test("verlangte -> verlangt", function() {deepEqual( Stem("verlangte"), "verlangt");});
test("verlangten -> verlangt", function() {deepEqual( Stem("verlangten"), "verlangt");});
test("verlas -> verlas", function() {deepEqual( Stem("verlas"), "verlas");});
test("verlass -> verlass", function() {deepEqual( Stem("verlass"), "verlass");});
test("verlassen -> verlass", function() {deepEqual( Stem("verlassen"), "verlass");});
test("verlassene -> verlass", function() {deepEqual( Stem("verlassene"), "verlass");});
test("verlassenen -> verlass", function() {deepEqual( Stem("verlassenen"), "verlass");});
test("verlassener -> verlass", function() {deepEqual( Stem("verlassener"), "verlass");});
test("verlassenes -> verlass", function() {deepEqual( Stem("verlassenes"), "verlass");});
test("verlassenheit -> verlass", function() {deepEqual( Stem("verlassenheit"), "verlass");});
test("verlasset -> verlasset", function() {deepEqual( Stem("verlasset"), "verlasset");});
test("verlässet -> verlasset", function() {deepEqual( Stem("verlässet"), "verlasset");});
test("verlässt -> verlasst", function() {deepEqual( Stem("verlässt"), "verlasst");});
test("verläßt -> verlasst", function() {deepEqual( Stem("verläßt"), "verlasst");});
test("verlaub -> verlaub", function() {deepEqual( Stem("verlaub"), "verlaub");});
test("verlauf -> verlauf", function() {deepEqual( Stem("verlauf"), "verlauf");});
test("verlaufe -> verlauf", function() {deepEqual( Stem("verlaufe"), "verlauf");});
test("verlaufen -> verlauf", function() {deepEqual( Stem("verlaufen"), "verlauf");});
test("verlaufende -> verlauf", function() {deepEqual( Stem("verlaufende"), "verlauf");});
test("verlaufs -> verlauf", function() {deepEqual( Stem("verlaufs"), "verlauf");});
test("verläuft -> verlauft", function() {deepEqual( Stem("verläuft"), "verlauft");});
test("verlauten -> verlaut", function() {deepEqual( Stem("verlauten"), "verlaut");});
test("verlebten -> verlebt", function() {deepEqual( Stem("verlebten"), "verlebt");});
test("verlegen -> verleg", function() {deepEqual( Stem("verlegen"), "verleg");});
test("verlegenen -> verleg", function() {deepEqual( Stem("verlegenen"), "verleg");});
test("verlegener -> verleg", function() {deepEqual( Stem("verlegener"), "verleg");});
test("verlegenheit -> verleg", function() {deepEqual( Stem("verlegenheit"), "verleg");});
test("verleger -> verleg", function() {deepEqual( Stem("verleger"), "verleg");});
test("verlegt -> verlegt", function() {deepEqual( Stem("verlegt"), "verlegt");});
test("verlegte -> verlegt", function() {deepEqual( Stem("verlegte"), "verlegt");});
test("verlegten -> verlegt", function() {deepEqual( Stem("verlegten"), "verlegt");});
test("verleihe -> verleih", function() {deepEqual( Stem("verleihe"), "verleih");});
test("verleihen -> verleih", function() {deepEqual( Stem("verleihen"), "verleih");});
test("verleiht -> verleiht", function() {deepEqual( Stem("verleiht"), "verleiht");});
test("verleiten -> verleit", function() {deepEqual( Stem("verleiten"), "verleit");});
test("verleitet -> verleitet", function() {deepEqual( Stem("verleitet"), "verleitet");});
test("verleitete -> verleitet", function() {deepEqual( Stem("verleitete"), "verleitet");});
test("verletze -> verletz", function() {deepEqual( Stem("verletze"), "verletz");});
test("verletzen -> verletz", function() {deepEqual( Stem("verletzen"), "verletz");});
test("verletzt -> verletzt", function() {deepEqual( Stem("verletzt"), "verletzt");});
test("verletzte -> verletzt", function() {deepEqual( Stem("verletzte"), "verletzt");});
test("verletzten -> verletzt", function() {deepEqual( Stem("verletzten"), "verletzt");});
test("verletztheit -> verletzt", function() {deepEqual( Stem("verletztheit"), "verletzt");});
test("verletzung -> verletz", function() {deepEqual( Stem("verletzung"), "verletz");});
test("verleugne -> verleugn", function() {deepEqual( Stem("verleugne"), "verleugn");});
test("verleugnet -> verleugnet", function() {deepEqual( Stem("verleugnet"), "verleugnet");});
test("verleugnete -> verleugnet", function() {deepEqual( Stem("verleugnete"), "verleugnet");});
test("verleumden -> verleumd", function() {deepEqual( Stem("verleumden"), "verleumd");});
test("verleumdern -> verleumd", function() {deepEqual( Stem("verleumdern"), "verleumd");});
test("verleumdet -> verleumdet", function() {deepEqual( Stem("verleumdet"), "verleumdet");});
test("verleumdungswesen -> verleumdungswes", function() {deepEqual( Stem("verleumdungswesen"), "verleumdungswes");});
test("verlieben -> verlieb", function() {deepEqual( Stem("verlieben"), "verlieb");});
test("verliebt -> verliebt", function() {deepEqual( Stem("verliebt"), "verliebt");});
test("verliebte -> verliebt", function() {deepEqual( Stem("verliebte"), "verliebt");});
test("verliebten -> verliebt", function() {deepEqual( Stem("verliebten"), "verliebt");});
test("verliebter -> verliebt", function() {deepEqual( Stem("verliebter"), "verliebt");});
test("verliebtheit -> verliebt", function() {deepEqual( Stem("verliebtheit"), "verliebt");});
test("verlief -> verlief", function() {deepEqual( Stem("verlief"), "verlief");});
test("verlieh -> verlieh", function() {deepEqual( Stem("verlieh"), "verlieh");});
test("verliehen -> verlieh", function() {deepEqual( Stem("verliehen"), "verlieh");});
test("verlieren -> verli", function() {deepEqual( Stem("verlieren"), "verli");});
test("verliert -> verliert", function() {deepEqual( Stem("verliert"), "verliert");});
test("verliess -> verliess", function() {deepEqual( Stem("verliess"), "verliess");});
test("verließ -> verliess", function() {deepEqual( Stem("verließ"), "verliess");});
test("verlobt -> verlobt", function() {deepEqual( Stem("verlobt"), "verlobt");});
test("verlobung -> verlob", function() {deepEqual( Stem("verlobung"), "verlob");});
test("verlocken -> verlock", function() {deepEqual( Stem("verlocken"), "verlock");});
test("verlockend -> verlock", function() {deepEqual( Stem("verlockend"), "verlock");});
test("verlockendes -> verlock", function() {deepEqual( Stem("verlockendes"), "verlock");});
test("verlockt -> verlockt", function() {deepEqual( Stem("verlockt"), "verlockt");});
test("verlockte -> verlockt", function() {deepEqual( Stem("verlockte"), "verlockt");});
test("verlockung -> verlock", function() {deepEqual( Stem("verlockung"), "verlock");});
test("verlockungen -> verlock", function() {deepEqual( Stem("verlockungen"), "verlock");});
test("verlogenen -> verlog", function() {deepEqual( Stem("verlogenen"), "verlog");});
test("verlogenes -> verlog", function() {deepEqual( Stem("verlogenes"), "verlog");});
test("verlor -> verlor", function() {deepEqual( Stem("verlor"), "verlor");});
test("verlöre -> verlor", function() {deepEqual( Stem("verlöre"), "verlor");});
test("verloren -> verlor", function() {deepEqual( Stem("verloren"), "verlor");});
test("verlorene -> verlor", function() {deepEqual( Stem("verlorene"), "verlor");});
test("verlorenen -> verlor", function() {deepEqual( Stem("verlorenen"), "verlor");});
test("verlorener -> verlor", function() {deepEqual( Stem("verlorener"), "verlor");});
test("verlorenes -> verlor", function() {deepEqual( Stem("verlorenes"), "verlor");});
test("verlorengegangen -> verlorengegang", function() {deepEqual( Stem("verlorengegangen"), "verlorengegang");});
test("verlorengehe -> verlorengeh", function() {deepEqual( Stem("verlorengehe"), "verlorengeh");});
test("verlorengehen -> verlorengeh", function() {deepEqual( Stem("verlorengehen"), "verlorengeh");});
test("verlorengeht -> verlorengeht", function() {deepEqual( Stem("verlorengeht"), "verlorengeht");});
test("verlorenging -> verlorenging", function() {deepEqual( Stem("verlorenging"), "verlorenging");});
test("verlorengingen -> verlorenging", function() {deepEqual( Stem("verlorengingen"), "verlorenging");});
test("verlorensein -> verlorensein", function() {deepEqual( Stem("verlorensein"), "verlorensein");});
test("verlöschen -> verlosch", function() {deepEqual( Stem("verlöschen"), "verlosch");});
test("verlotterten -> verlottert", function() {deepEqual( Stem("verlotterten"), "verlottert");});
test("verlumpete -> verlumpet", function() {deepEqual( Stem("verlumpete"), "verlumpet");});
test("verlumpte -> verlumpt", function() {deepEqual( Stem("verlumpte"), "verlumpt");});
test("verlumpungen -> verlump", function() {deepEqual( Stem("verlumpungen"), "verlump");});
test("verlust -> verlust", function() {deepEqual( Stem("verlust"), "verlust");});
test("verlustig -> verlust", function() {deepEqual( Stem("verlustig"), "verlust");});
test("verlusts -> verlust", function() {deepEqual( Stem("verlusts"), "verlust");});
test("vermachte -> vermacht", function() {deepEqual( Stem("vermachte"), "vermacht");});
test("vermag -> vermag", function() {deepEqual( Stem("vermag"), "vermag");});
test("vermählt -> vermahlt", function() {deepEqual( Stem("vermählt"), "vermahlt");});
test("vermählte -> vermahlt", function() {deepEqual( Stem("vermählte"), "vermahlt");});
test("vermählten -> vermahlt", function() {deepEqual( Stem("vermählten"), "vermahlt");});
test("vermähltes -> vermahlt", function() {deepEqual( Stem("vermähltes"), "vermahlt");});
test("vermählung -> vermahl", function() {deepEqual( Stem("vermählung"), "vermahl");});
test("vermählungen -> vermahl", function() {deepEqual( Stem("vermählungen"), "vermahl");});
test("vermahnen -> vermahn", function() {deepEqual( Stem("vermahnen"), "vermahn");});
test("vermauern -> vermau", function() {deepEqual( Stem("vermauern"), "vermau");});
test("vermehren -> vermehr", function() {deepEqual( Stem("vermehren"), "vermehr");});
test("vermehrt -> vermehrt", function() {deepEqual( Stem("vermehrt"), "vermehrt");});
test("vermehrten -> vermehrt", function() {deepEqual( Stem("vermehrten"), "vermehrt");});
test("vermehrter -> vermehrt", function() {deepEqual( Stem("vermehrter"), "vermehrt");});
test("vermehrung -> vermehr", function() {deepEqual( Stem("vermehrung"), "vermehr");});
test("vermehrungen -> vermehr", function() {deepEqual( Stem("vermehrungen"), "vermehr");});
test("vermeiden -> vermeid", function() {deepEqual( Stem("vermeiden"), "vermeid");});
test("vermeidung -> vermeid", function() {deepEqual( Stem("vermeidung"), "vermeid");});
test("vermeinte -> vermeint", function() {deepEqual( Stem("vermeinte"), "vermeint");});
test("vermeinten -> vermeint", function() {deepEqual( Stem("vermeinten"), "vermeint");});
test("vermeinter -> vermeint", function() {deepEqual( Stem("vermeinter"), "vermeint");});
test("vermeintlich -> vermeint", function() {deepEqual( Stem("vermeintlich"), "vermeint");});
test("vermeldete -> vermeldet", function() {deepEqual( Stem("vermeldete"), "vermeldet");});
test("vermengt -> vermengt", function() {deepEqual( Stem("vermengt"), "vermengt");});
test("vermerkt -> vermerkt", function() {deepEqual( Stem("vermerkt"), "vermerkt");});
test("vermied -> vermied", function() {deepEqual( Stem("vermied"), "vermied");});
test("vermieden -> vermied", function() {deepEqual( Stem("vermieden"), "vermied");});
test("vermieter -> vermiet", function() {deepEqual( Stem("vermieter"), "vermiet");});
test("vermindern -> vermind", function() {deepEqual( Stem("vermindern"), "vermind");});
test("vermindernden -> vermindernd", function() {deepEqual( Stem("vermindernden"), "vermindernd");});
test("vermindert -> vermindert", function() {deepEqual( Stem("vermindert"), "vermindert");});
test("verminderung -> verminder", function() {deepEqual( Stem("verminderung"), "verminder");});
test("vermischen -> vermisch", function() {deepEqual( Stem("vermischen"), "vermisch");});
test("vermischt -> vermischt", function() {deepEqual( Stem("vermischt"), "vermischt");});
test("vermischte -> vermischt", function() {deepEqual( Stem("vermischte"), "vermischt");});
test("vermischten -> vermischt", function() {deepEqual( Stem("vermischten"), "vermischt");});
test("vermischung -> vermisch", function() {deepEqual( Stem("vermischung"), "vermisch");});
test("vermischungen -> vermisch", function() {deepEqual( Stem("vermischungen"), "vermisch");});
test("vermissen -> vermiss", function() {deepEqual( Stem("vermissen"), "vermiss");});
test("vermisst -> vermisst", function() {deepEqual( Stem("vermisst"), "vermisst");});
test("vermisste -> vermisst", function() {deepEqual( Stem("vermisste"), "vermisst");});
test("vermißte -> vermisst", function() {deepEqual( Stem("vermißte"), "vermisst");});
test("vermittelnde -> vermittelnd", function() {deepEqual( Stem("vermittelnde"), "vermittelnd");});
test("vermittelndes -> vermittelnd", function() {deepEqual( Stem("vermittelndes"), "vermittelnd");});
test("vermittels -> vermittel", function() {deepEqual( Stem("vermittels"), "vermittel");});
test("vermittelst -> vermittel", function() {deepEqual( Stem("vermittelst"), "vermittel");});
test("vermittlerin -> vermittlerin", function() {deepEqual( Stem("vermittlerin"), "vermittlerin");});
test("vermittlung -> vermittl", function() {deepEqual( Stem("vermittlung"), "vermittl");});
test("vermittlungen -> vermittl", function() {deepEqual( Stem("vermittlungen"), "vermittl");});
test("vermocht -> vermocht", function() {deepEqual( Stem("vermocht"), "vermocht");});
test("vermochte -> vermocht", function() {deepEqual( Stem("vermochte"), "vermocht");});
test("vermöchte -> vermocht", function() {deepEqual( Stem("vermöchte"), "vermocht");});
test("vermochten -> vermocht", function() {deepEqual( Stem("vermochten"), "vermocht");});
test("vermöge -> vermog", function() {deepEqual( Stem("vermöge"), "vermog");});
test("vermögen -> vermog", function() {deepEqual( Stem("vermögen"), "vermog");});
test("vermögend -> vermog", function() {deepEqual( Stem("vermögend"), "vermog");});
test("vermögenden -> vermog", function() {deepEqual( Stem("vermögenden"), "vermog");});
test("vermögens -> vermog", function() {deepEqual( Stem("vermögens"), "vermog");});
test("vermögensstand -> vermogensstand", function() {deepEqual( Stem("vermögensstand"), "vermogensstand");});
test("vermute -> vermut", function() {deepEqual( Stem("vermute"), "vermut");});
test("vermuten -> vermut", function() {deepEqual( Stem("vermuten"), "vermut");});
test("vermutet -> vermutet", function() {deepEqual( Stem("vermutet"), "vermutet");});
test("vermutete -> vermutet", function() {deepEqual( Stem("vermutete"), "vermutet");});
test("vermutlich -> vermut", function() {deepEqual( Stem("vermutlich"), "vermut");});
test("vermutlichen -> vermut", function() {deepEqual( Stem("vermutlichen"), "vermut");});
test("vermutung -> vermut", function() {deepEqual( Stem("vermutung"), "vermut");});
test("vermutungen -> vermut", function() {deepEqual( Stem("vermutungen"), "vermut");});
test("vernachlässige -> vernachlass", function() {deepEqual( Stem("vernachlässige"), "vernachlass");});
test("vernachlässigt -> vernachlassigt", function() {deepEqual( Stem("vernachlässigt"), "vernachlassigt");});
test("vernachlässigte -> vernachlassigt", function() {deepEqual( Stem("vernachlässigte"), "vernachlassigt");});
test("vernachlässigten -> vernachlassigt", function() {deepEqual( Stem("vernachlässigten"), "vernachlassigt");});
test("vernachlässigung -> vernachlass", function() {deepEqual( Stem("vernachlässigung"), "vernachlass");});
test("vernagelt -> vernagelt", function() {deepEqual( Stem("vernagelt"), "vernagelt");});
test("vernagelten -> vernagelt", function() {deepEqual( Stem("vernagelten"), "vernagelt");});
test("vernahm -> vernahm", function() {deepEqual( Stem("vernahm"), "vernahm");});
test("vernähme -> vernahm", function() {deepEqual( Stem("vernähme"), "vernahm");});
test("vernahmen -> vernahm", function() {deepEqual( Stem("vernahmen"), "vernahm");});
test("vernarbendes -> vernarb", function() {deepEqual( Stem("vernarbendes"), "vernarb");});
test("vernarren -> vernarr", function() {deepEqual( Stem("vernarren"), "vernarr");});
test("vernarrt -> vernarrt", function() {deepEqual( Stem("vernarrt"), "vernarrt");});
test("vernehmbar -> vernehmbar", function() {deepEqual( Stem("vernehmbar"), "vernehmbar");});
test("vernehmbare -> vernehmbar", function() {deepEqual( Stem("vernehmbare"), "vernehmbar");});
test("vernehmen -> vernehm", function() {deepEqual( Stem("vernehmen"), "vernehm");});
test("vernehmet -> vernehmet", function() {deepEqual( Stem("vernehmet"), "vernehmet");});
test("vernehmlassungsverfahrens -> vernehmlassungsverfahr", function() {deepEqual( Stem("vernehmlassungsverfahrens"), "vernehmlassungsverfahr");});
test("vernehmlichem -> vernehm", function() {deepEqual( Stem("vernehmlichem"), "vernehm");});
test("vernehmlichen -> vernehm", function() {deepEqual( Stem("vernehmlichen"), "vernehm");});
test("vernehmnisse -> vernehmnis", function() {deepEqual( Stem("vernehmnisse"), "vernehmnis");});
test("verneigen -> verneig", function() {deepEqual( Stem("verneigen"), "verneig");});
test("verneigend -> verneig", function() {deepEqual( Stem("verneigend"), "verneig");});
test("verneigt -> verneigt", function() {deepEqual( Stem("verneigt"), "verneigt");});
test("verneigte -> verneigt", function() {deepEqual( Stem("verneigte"), "verneigt");});
test("verneinen -> vernein", function() {deepEqual( Stem("verneinen"), "vernein");});
test("verneinenden -> vernein", function() {deepEqual( Stem("verneinenden"), "vernein");});
test("verneinung -> vernein", function() {deepEqual( Stem("verneinung"), "vernein");});
test("verneinungen -> vernein", function() {deepEqual( Stem("verneinungen"), "vernein");});
test("verneunfacht -> verneunfacht", function() {deepEqual( Stem("verneunfacht"), "verneunfacht");});
test("vernichte -> vernicht", function() {deepEqual( Stem("vernichte"), "vernicht");});
test("vernichten -> vernicht", function() {deepEqual( Stem("vernichten"), "vernicht");});
test("vernichtet -> vernichtet", function() {deepEqual( Stem("vernichtet"), "vernichtet");});
test("vernichteten -> vernichtet", function() {deepEqual( Stem("vernichteten"), "vernichtet");});
test("vernichtung -> vernicht", function() {deepEqual( Stem("vernichtung"), "vernicht");});
test("vernichtungsgenie -> vernichtungsgeni", function() {deepEqual( Stem("vernichtungsgenie"), "vernichtungsgeni");});
test("vernimmt -> vernimmt", function() {deepEqual( Stem("vernimmt"), "vernimmt");});
test("vernommen -> vernomm", function() {deepEqual( Stem("vernommen"), "vernomm");});
test("vernunft -> vernunft", function() {deepEqual( Stem("vernunft"), "vernunft");});
test("vernunftähnliches -> vernunftahn", function() {deepEqual( Stem("vernunftähnliches"), "vernunftahn");});
test("vernunftanschauungen -> vernunftanschau", function() {deepEqual( Stem("vernunftanschauungen"), "vernunftanschau");});
test("vernunftbedingung -> vernunftbeding", function() {deepEqual( Stem("vernunftbedingung"), "vernunftbeding");});
test("vernunftbedürfnis -> vernunftbedurfnis", function() {deepEqual( Stem("vernunftbedürfnis"), "vernunftbedurfnis");});
test("vernunftbegriffe -> vernunftbegriff", function() {deepEqual( Stem("vernunftbegriffe"), "vernunftbegriff");});
test("vernunftbegriffen -> vernunftbegriff", function() {deepEqual( Stem("vernunftbegriffen"), "vernunftbegriff");});
test("vernunftbestimmung -> vernunftbestimm", function() {deepEqual( Stem("vernunftbestimmung"), "vernunftbestimm");});
test("vernunfteinsicht -> vernunfteinsicht", function() {deepEqual( Stem("vernunfteinsicht"), "vernunfteinsicht");});
test("vernünftelei -> vernunftelei", function() {deepEqual( Stem("vernünftelei"), "vernunftelei");});
test("vernünfteleien -> vernunftelei", function() {deepEqual( Stem("vernünfteleien"), "vernunftelei");});
test("vernünfteln -> vernunfteln", function() {deepEqual( Stem("vernünfteln"), "vernunfteln");});
test("vernünftelnde -> vernunftelnd", function() {deepEqual( Stem("vernünftelnde"), "vernunftelnd");});
test("vernünftelt -> vernunftelt", function() {deepEqual( Stem("vernünftelt"), "vernunftelt");});
test("vernünftelten -> vernunftelt", function() {deepEqual( Stem("vernünftelten"), "vernunftelt");});
test("vernunfterkenntnisse -> vernunfterkenntnis", function() {deepEqual( Stem("vernunfterkenntnisse"), "vernunfterkenntnis");});
test("vernunfterkenntnisses -> vernunfterkenntnis", function() {deepEqual( Stem("vernunfterkenntnisses"), "vernunfterkenntnis");});
test("vernunftgebote -> vernunftgebot", function() {deepEqual( Stem("vernunftgebote"), "vernunftgebot");});
test("vernunftgebots -> vernunftgebot", function() {deepEqual( Stem("vernunftgebots"), "vernunftgebot");});
test("vernunftgebrauch -> vernunftgebrauch", function() {deepEqual( Stem("vernunftgebrauch"), "vernunftgebrauch");});
test("vernunftgebrauche -> vernunftgebrauch", function() {deepEqual( Stem("vernunftgebrauche"), "vernunftgebrauch");});
test("vernunftgebrauchs -> vernunftgebrauch", function() {deepEqual( Stem("vernunftgebrauchs"), "vernunftgebrauch");});
test("vernunftgemässe -> vernunftgemass", function() {deepEqual( Stem("vernunftgemässe"), "vernunftgemass");});
test("vernunftgemässen -> vernunftgemass", function() {deepEqual( Stem("vernunftgemässen"), "vernunftgemass");});
test("vernunftgesetz -> vernunftgesetz", function() {deepEqual( Stem("vernunftgesetz"), "vernunftgesetz");});
test("vernunftgesetze -> vernunftgesetz", function() {deepEqual( Stem("vernunftgesetze"), "vernunftgesetz");});
test("vernunftglaube -> vernunftglaub", function() {deepEqual( Stem("vernunftglaube"), "vernunftglaub");});
test("vernunftglaubens -> vernunftglaub", function() {deepEqual( Stem("vernunftglaubens"), "vernunftglaub");});
test("vernunftgründe -> vernunftgrund", function() {deepEqual( Stem("vernunftgründe"), "vernunftgrund");});
test("vernunftgründen -> vernunftgrund", function() {deepEqual( Stem("vernunftgründen"), "vernunftgrund");});
test("vernunftidee -> vernunftide", function() {deepEqual( Stem("vernunftidee"), "vernunftide");});
test("vernunftideen -> vernunftide", function() {deepEqual( Stem("vernunftideen"), "vernunftide");});
test("vernünftig -> vernunft", function() {deepEqual( Stem("vernünftig"), "vernunft");});
test("vernünftige -> vernunft", function() {deepEqual( Stem("vernünftige"), "vernunft");});
test("vernünftigen -> vernunft", function() {deepEqual( Stem("vernünftigen"), "vernunft");});
test("vernünftiger -> vernunft", function() {deepEqual( Stem("vernünftiger"), "vernunft");});
test("vernünftiges -> vernunft", function() {deepEqual( Stem("vernünftiges"), "vernunft");});
test("vernünftigkeit -> vernunft", function() {deepEqual( Stem("vernünftigkeit"), "vernunft");});
test("vernünftigsein -> vernunftigsein", function() {deepEqual( Stem("vernünftigsein"), "vernunftigsein");});
test("vernunftkraft -> vernunftkraft", function() {deepEqual( Stem("vernunftkraft"), "vernunftkraft");});
test("vernünftler -> vernunftl", function() {deepEqual( Stem("vernünftler"), "vernunftl");});
test("vernünftlern -> vernunftl", function() {deepEqual( Stem("vernünftlern"), "vernunftl");});
test("vernunftlos -> vernunftlos", function() {deepEqual( Stem("vernunftlos"), "vernunftlos");});
test("vernunftmässiges -> vernunftmass", function() {deepEqual( Stem("vernunftmässiges"), "vernunftmass");});
test("vernunftmäßiges -> vernunftmass", function() {deepEqual( Stem("vernunftmäßiges"), "vernunftmass");});
test("vernunftprinzip -> vernunftprinzip", function() {deepEqual( Stem("vernunftprinzip"), "vernunftprinzip");});
test("vernunftschlüsse -> vernunftschluss", function() {deepEqual( Stem("vernunftschlüsse"), "vernunftschluss");});
test("vernunftschlusses -> vernunftschluss", function() {deepEqual( Stem("vernunftschlusses"), "vernunftschluss");});
test("vernunfttheologie -> vernunfttheologi", function() {deepEqual( Stem("vernunfttheologie"), "vernunfttheologi");});
test("vernunftverhältnisse -> vernunftverhaltnis", function() {deepEqual( Stem("vernunftverhältnisse"), "vernunftverhaltnis");});
test("vernunftvermögen -> vernunftvermog", function() {deepEqual( Stem("vernunftvermögen"), "vernunftvermog");});
test("vernunftvermögens -> vernunftvermog", function() {deepEqual( Stem("vernunftvermögens"), "vernunftvermog");});
test("vernunftvorstellungen -> vernunftvorstell", function() {deepEqual( Stem("vernunftvorstellungen"), "vernunftvorstell");});
test("vernunftwahres -> vernunftwahr", function() {deepEqual( Stem("vernunftwahres"), "vernunftwahr");});
test("vernunftwahrheiten -> vernunftwahr", function() {deepEqual( Stem("vernunftwahrheiten"), "vernunftwahr");});
test("vernunftwillens -> vernunftwill", function() {deepEqual( Stem("vernunftwillens"), "vernunftwill");});
test("vernunftwissenschaften -> vernunftwissenschaft", function() {deepEqual( Stem("vernunftwissenschaften"), "vernunftwissenschaft");});
test("verödenden -> verod", function() {deepEqual( Stem("verödenden"), "verod");});
test("verödet -> verodet", function() {deepEqual( Stem("verödet"), "verodet");});
test("verödeten -> verodet", function() {deepEqual( Stem("verödeten"), "verodet");});
test("verödung -> verod", function() {deepEqual( Stem("verödung"), "verod");});
test("verödungen -> verod", function() {deepEqual( Stem("verödungen"), "verod");});
test("veröffentlicht -> veroffentlicht", function() {deepEqual( Stem("veröffentlicht"), "veroffentlicht");});
test("veröffentlichung -> veroffentlich", function() {deepEqual( Stem("veröffentlichung"), "veroffentlich");});
test("verordnung -> verordn", function() {deepEqual( Stem("verordnung"), "verordn");});
test("verordnungen -> verordn", function() {deepEqual( Stem("verordnungen"), "verordn");});
test("verorientieren -> verorienti", function() {deepEqual( Stem("verorientieren"), "verorienti");});
test("verpachteten -> verpachtet", function() {deepEqual( Stem("verpachteten"), "verpachtet");});
test("verpacken -> verpack", function() {deepEqual( Stem("verpacken"), "verpack");});
test("verpackt -> verpackt", function() {deepEqual( Stem("verpackt"), "verpackt");});
test("verpfändet -> verpfandet", function() {deepEqual( Stem("verpfändet"), "verpfandet");});
test("verpfändeten -> verpfandet", function() {deepEqual( Stem("verpfändeten"), "verpfandet");});
test("verpflichten -> verpflicht", function() {deepEqual( Stem("verpflichten"), "verpflicht");});
test("verpflichtet -> verpflichtet", function() {deepEqual( Stem("verpflichtet"), "verpflichtet");});
test("verpflichtung -> verpflicht", function() {deepEqual( Stem("verpflichtung"), "verpflicht");});
test("verpflichtungen -> verpflicht", function() {deepEqual( Stem("verpflichtungen"), "verpflicht");});
test("verpichen -> verpich", function() {deepEqual( Stem("verpichen"), "verpich");});
test("verpicht -> verpicht", function() {deepEqual( Stem("verpicht"), "verpicht");});
test("verpichtwerden -> verpichtwerd", function() {deepEqual( Stem("verpichtwerden"), "verpichtwerd");});
test("verpichung -> verpich", function() {deepEqual( Stem("verpichung"), "verpich");});
test("verplaudern -> verplaud", function() {deepEqual( Stem("verplaudern"), "verplaud");});
test("verpönt -> verpont", function() {deepEqual( Stem("verpönt"), "verpont");});
test("verpustete -> verpustet", function() {deepEqual( Stem("verpustete"), "verpustet");});
test("verrannt -> verrannt", function() {deepEqual( Stem("verrannt"), "verrannt");});
test("verrät -> verrat", function() {deepEqual( Stem("verrät"), "verrat");});
test("verraten -> verrat", function() {deepEqual( Stem("verraten"), "verrat");});
test("verrechnen -> verrechn", function() {deepEqual( Stem("verrechnen"), "verrechn");});
test("verregnet -> verregnet", function() {deepEqual( Stem("verregnet"), "verregnet");});
test("verreisen -> verreis", function() {deepEqual( Stem("verreisen"), "verreis");});
test("verreiste -> verreist", function() {deepEqual( Stem("verreiste"), "verreist");});
test("verrenkungen -> verrenk", function() {deepEqual( Stem("verrenkungen"), "verrenk");});
test("verrichten -> verricht", function() {deepEqual( Stem("verrichten"), "verricht");});
test("verrichtet -> verrichtet", function() {deepEqual( Stem("verrichtet"), "verrichtet");});
test("verrichtete -> verrichtet", function() {deepEqual( Stem("verrichtete"), "verrichtet");});
test("verrichteten -> verrichtet", function() {deepEqual( Stem("verrichteten"), "verrichtet");});
test("verrichtung -> verricht", function() {deepEqual( Stem("verrichtung"), "verricht");});
test("verrichtungen -> verricht", function() {deepEqual( Stem("verrichtungen"), "verricht");});
test("verriet -> verriet", function() {deepEqual( Stem("verriet"), "verriet");});
test("verriete -> verriet", function() {deepEqual( Stem("verriete"), "verriet");});
test("verrieten -> verriet", function() {deepEqual( Stem("verrieten"), "verriet");});
test("verringern -> verring", function() {deepEqual( Stem("verringern"), "verring");});
test("verringert -> verringert", function() {deepEqual( Stem("verringert"), "verringert");});
test("verrollen -> verroll", function() {deepEqual( Stem("verrollen"), "verroll");});
test("verrostetes -> verrostet", function() {deepEqual( Stem("verrostetes"), "verrostet");});
test("verrückt -> verruckt", function() {deepEqual( Stem("verrückt"), "verruckt");});
test("verruckte -> verruckt", function() {deepEqual( Stem("verruckte"), "verruckt");});
test("verrückte -> verruckt", function() {deepEqual( Stem("verrückte"), "verruckt");});
test("verrufen -> verruf", function() {deepEqual( Stem("verrufen"), "verruf");});
test("verrufenen -> verruf", function() {deepEqual( Stem("verrufenen"), "verruf");});
test("vers -> ver", function() {deepEqual( Stem("vers"), "ver");});
test("versagender -> versag", function() {deepEqual( Stem("versagender"), "versag");});
test("versagt -> versagt", function() {deepEqual( Stem("versagt"), "versagt");});
test("versagte -> versagt", function() {deepEqual( Stem("versagte"), "versagt");});
test("versagten -> versagt", function() {deepEqual( Stem("versagten"), "versagt");});
test("versah -> versah", function() {deepEqual( Stem("versah"), "versah");});
test("versammeln -> versammeln", function() {deepEqual( Stem("versammeln"), "versammeln");});
test("versammelt -> versammelt", function() {deepEqual( Stem("versammelt"), "versammelt");});
test("versammelte -> versammelt", function() {deepEqual( Stem("versammelte"), "versammelt");});
test("versammelten -> versammelt", function() {deepEqual( Stem("versammelten"), "versammelt");});
test("versammle -> versamml", function() {deepEqual( Stem("versammle"), "versamml");});
test("versammlung -> versamml", function() {deepEqual( Stem("versammlung"), "versamml");});
test("versammlungszimmer -> versammlungszimm", function() {deepEqual( Stem("versammlungszimmer"), "versammlungszimm");});
test("versandet -> versandet", function() {deepEqual( Stem("versandet"), "versandet");});
test("versandt -> versandt", function() {deepEqual( Stem("versandt"), "versandt");});
test("versank -> versank", function() {deepEqual( Stem("versank"), "versank");});
test("versanken -> versank", function() {deepEqual( Stem("versanken"), "versank");});
test("versäumen -> versaum", function() {deepEqual( Stem("versäumen"), "versaum");});
test("versäumt -> versaumt", function() {deepEqual( Stem("versäumt"), "versaumt");});
test("versäumte -> versaumt", function() {deepEqual( Stem("versäumte"), "versaumt");});
test("verschaffe -> verschaff", function() {deepEqual( Stem("verschaffe"), "verschaff");});
test("verschaffen -> verschaff", function() {deepEqual( Stem("verschaffen"), "verschaff");});
test("verschafft -> verschafft", function() {deepEqual( Stem("verschafft"), "verschafft");});
test("verschaffte -> verschafft", function() {deepEqual( Stem("verschaffte"), "verschafft");});
test("verschämt -> verschamt", function() {deepEqual( Stem("verschämt"), "verschamt");});
test("verschärfung -> verscharf", function() {deepEqual( Stem("verschärfung"), "verscharf");});
test("verschärfungen -> verscharf", function() {deepEqual( Stem("verschärfungen"), "verscharf");});
test("verschattung -> verschatt", function() {deepEqual( Stem("verschattung"), "verschatt");});
test("verschäumte -> verschaumt", function() {deepEqual( Stem("verschäumte"), "verschaumt");});
test("verschen -> versch", function() {deepEqual( Stem("verschen"), "versch");});
test("verschenken -> verschenk", function() {deepEqual( Stem("verschenken"), "verschenk");});
test("verscherzt -> verscherzt", function() {deepEqual( Stem("verscherzt"), "verscherzt");});
test("verscheuchen -> verscheuch", function() {deepEqual( Stem("verscheuchen"), "verscheuch");});
test("verscheuchten -> verscheucht", function() {deepEqual( Stem("verscheuchten"), "verscheucht");});
test("verschiebung -> verschieb", function() {deepEqual( Stem("verschiebung"), "verschieb");});
test("verschieden -> verschied", function() {deepEqual( Stem("verschieden"), "verschied");});
test("verschiedenartig -> verschiedenart", function() {deepEqual( Stem("verschiedenartig"), "verschiedenart");});
test("verschiedenartigen -> verschiedenart", function() {deepEqual( Stem("verschiedenartigen"), "verschiedenart");});
test("verschiedenartiges -> verschiedenart", function() {deepEqual( Stem("verschiedenartiges"), "verschiedenart");});
test("verschiedenartigste -> verschiedenart", function() {deepEqual( Stem("verschiedenartigste"), "verschiedenart");});
test("verschiedene -> verschied", function() {deepEqual( Stem("verschiedene"), "verschied");});
test("verschiedenem -> verschied", function() {deepEqual( Stem("verschiedenem"), "verschied");});
test("verschiedenen -> verschied", function() {deepEqual( Stem("verschiedenen"), "verschied");});
test("verschiedener -> verschied", function() {deepEqual( Stem("verschiedener"), "verschied");});
test("verschiedenes -> verschied", function() {deepEqual( Stem("verschiedenes"), "verschied");});
test("verschiedenheit -> verschied", function() {deepEqual( Stem("verschiedenheit"), "verschied");});
test("verschiedenheiten -> verschied", function() {deepEqual( Stem("verschiedenheiten"), "verschied");});
test("verschiedenste -> verschieden", function() {deepEqual( Stem("verschiedenste"), "verschieden");});
test("verschiedensten -> verschieden", function() {deepEqual( Stem("verschiedensten"), "verschieden");});
test("verschiedentlich -> verschiedent", function() {deepEqual( Stem("verschiedentlich"), "verschiedent");});
test("verschlafen -> verschlaf", function() {deepEqual( Stem("verschlafen"), "verschlaf");});
test("verschlage -> verschlag", function() {deepEqual( Stem("verschlage"), "verschlag");});
test("verschlagen -> verschlag", function() {deepEqual( Stem("verschlagen"), "verschlag");});
test("verschlang -> verschlang", function() {deepEqual( Stem("verschlang"), "verschlang");});
test("verschlangen -> verschlang", function() {deepEqual( Stem("verschlangen"), "verschlang");});
test("verschlechterung -> verschlechter", function() {deepEqual( Stem("verschlechterung"), "verschlechter");});
test("verschleiern -> verschlei", function() {deepEqual( Stem("verschleiern"), "verschlei");});
test("verschleiert -> verschleiert", function() {deepEqual( Stem("verschleiert"), "verschleiert");});
test("verschleudert -> verschleudert", function() {deepEqual( Stem("verschleudert"), "verschleudert");});
test("verschliessen -> verschliess", function() {deepEqual( Stem("verschliessen"), "verschliess");});
test("verschließen -> verschliess", function() {deepEqual( Stem("verschließen"), "verschliess");});
test("verschlimmern -> verschlimm", function() {deepEqual( Stem("verschlimmern"), "verschlimm");});
test("verschlimmert -> verschlimmert", function() {deepEqual( Stem("verschlimmert"), "verschlimmert");});
test("verschlinge -> verschling", function() {deepEqual( Stem("verschlinge"), "verschling");});
test("verschlingen -> verschling", function() {deepEqual( Stem("verschlingen"), "verschling");});
test("verschlingungen -> verschling", function() {deepEqual( Stem("verschlingungen"), "verschling");});
test("verschloss -> verschloss", function() {deepEqual( Stem("verschloss"), "verschloss");});
test("verschlossen -> verschloss", function() {deepEqual( Stem("verschlossen"), "verschloss");});
test("verschlossenen -> verschloss", function() {deepEqual( Stem("verschlossenen"), "verschloss");});
test("verschlossenes -> verschloss", function() {deepEqual( Stem("verschlossenes"), "verschloss");});
test("verschluckt -> verschluckt", function() {deepEqual( Stem("verschluckt"), "verschluckt");});
test("verschlungen -> verschlung", function() {deepEqual( Stem("verschlungen"), "verschlung");});
test("verschlungenen -> verschlung", function() {deepEqual( Stem("verschlungenen"), "verschlung");});
test("verschluss -> verschluss", function() {deepEqual( Stem("verschluss"), "verschluss");});
test("verschlusses -> verschluss", function() {deepEqual( Stem("verschlusses"), "verschluss");});
test("verschmachten -> verschmacht", function() {deepEqual( Stem("verschmachten"), "verschmacht");});
test("verschmähe -> verschmah", function() {deepEqual( Stem("verschmähe"), "verschmah");});
test("verschmähen -> verschmah", function() {deepEqual( Stem("verschmähen"), "verschmah");});
test("verschmähst -> verschmah", function() {deepEqual( Stem("verschmähst"), "verschmah");});
test("verschmäht -> verschmaht", function() {deepEqual( Stem("verschmäht"), "verschmaht");});
test("verschmähte -> verschmaht", function() {deepEqual( Stem("verschmähte"), "verschmaht");});
test("verschmähten -> verschmaht", function() {deepEqual( Stem("verschmähten"), "verschmaht");});
test("verschmelzen -> verschmelz", function() {deepEqual( Stem("verschmelzen"), "verschmelz");});
test("verschmerzen -> verschmerz", function() {deepEqual( Stem("verschmerzen"), "verschmerz");});
test("verschmierten -> verschmiert", function() {deepEqual( Stem("verschmierten"), "verschmiert");});
test("verschmitzt -> verschmitzt", function() {deepEqual( Stem("verschmitzt"), "verschmitzt");});
test("verschmitztheit -> verschmitzt", function() {deepEqual( Stem("verschmitztheit"), "verschmitzt");});
test("verschnaufen -> verschnauf", function() {deepEqual( Stem("verschnaufen"), "verschnauf");});
test("verschnaufte -> verschnauft", function() {deepEqual( Stem("verschnaufte"), "verschnauft");});
test("verschnittene -> verschnitt", function() {deepEqual( Stem("verschnittene"), "verschnitt");});
test("verschnittenen -> verschnitt", function() {deepEqual( Stem("verschnittenen"), "verschnitt");});
test("verschnürte -> verschnurt", function() {deepEqual( Stem("verschnürte"), "verschnurt");});
test("verschob -> verschob", function() {deepEqual( Stem("verschob"), "verschob");});
test("verschollene -> verscholl", function() {deepEqual( Stem("verschollene"), "verscholl");});
test("verschollenen -> verscholl", function() {deepEqual( Stem("verschollenen"), "verscholl");});
test("verschonen -> verschon", function() {deepEqual( Stem("verschonen"), "verschon");});
test("verschönert -> verschonert", function() {deepEqual( Stem("verschönert"), "verschonert");});
test("verschont -> verschont", function() {deepEqual( Stem("verschont"), "verschont");});
test("verschossen -> verschoss", function() {deepEqual( Stem("verschossen"), "verschoss");});
test("verschränkung -> verschrank", function() {deepEqual( Stem("verschränkung"), "verschrank");});
test("verschulden -> verschuld", function() {deepEqual( Stem("verschulden"), "verschuld");});
test("verschuldet -> verschuldet", function() {deepEqual( Stem("verschuldet"), "verschuldet");});
test("verschuldung -> verschuld", function() {deepEqual( Stem("verschuldung"), "verschuld");});
test("verschuldungen -> verschuld", function() {deepEqual( Stem("verschuldungen"), "verschuld");});
test("verschustern -> verschust", function() {deepEqual( Stem("verschustern"), "verschust");});
test("verschüttet -> verschuttet", function() {deepEqual( Stem("verschüttet"), "verschuttet");});
test("verschwammen -> verschwamm", function() {deepEqual( Stem("verschwammen"), "verschwamm");});
test("verschwand -> verschwand", function() {deepEqual( Stem("verschwand"), "verschwand");});
test("verschwanden -> verschwand", function() {deepEqual( Stem("verschwanden"), "verschwand");});
test("verschweigen -> verschweig", function() {deepEqual( Stem("verschweigen"), "verschweig");});
test("verschwenden -> verschwend", function() {deepEqual( Stem("verschwenden"), "verschwend");});
test("verschwenderisch -> verschwender", function() {deepEqual( Stem("verschwenderisch"), "verschwender");});
test("verschwendet -> verschwendet", function() {deepEqual( Stem("verschwendet"), "verschwendet");});
test("verschwendung -> verschwend", function() {deepEqual( Stem("verschwendung"), "verschwend");});
test("verschwieg -> verschwieg", function() {deepEqual( Stem("verschwieg"), "verschwieg");});
test("verschwiegenes -> verschwieg", function() {deepEqual( Stem("verschwiegenes"), "verschwieg");});
test("verschwinde -> verschwind", function() {deepEqual( Stem("verschwinde"), "verschwind");});
test("verschwinden -> verschwind", function() {deepEqual( Stem("verschwinden"), "verschwind");});
test("verschwindet -> verschwindet", function() {deepEqual( Stem("verschwindet"), "verschwindet");});
test("verschworen -> verschwor", function() {deepEqual( Stem("verschworen"), "verschwor");});
test("verschworene -> verschwor", function() {deepEqual( Stem("verschworene"), "verschwor");});
test("verschwunden -> verschwund", function() {deepEqual( Stem("verschwunden"), "verschwund");});
test("verschwundene -> verschwund", function() {deepEqual( Stem("verschwundene"), "verschwund");});
test("verschwundenen -> verschwund", function() {deepEqual( Stem("verschwundenen"), "verschwund");});
test("verse -> vers", function() {deepEqual( Stem("verse"), "vers");});
test("versehen -> verseh", function() {deepEqual( Stem("versehen"), "verseh");});
test("versehn -> versehn", function() {deepEqual( Stem("versehn"), "versehn");});
test("versen -> vers", function() {deepEqual( Stem("versen"), "vers");});
test("versengen -> verseng", function() {deepEqual( Stem("versengen"), "verseng");});
test("versenken -> versenk", function() {deepEqual( Stem("versenken"), "versenk");});
test("versenkt -> versenkt", function() {deepEqual( Stem("versenkt"), "versenkt");});
test("versenkte -> versenkt", function() {deepEqual( Stem("versenkte"), "versenkt");});
test("versenkten -> versenkt", function() {deepEqual( Stem("versenkten"), "versenkt");});
test("versenkung -> versenk", function() {deepEqual( Stem("versenkung"), "versenk");});
test("versenkungen -> versenk", function() {deepEqual( Stem("versenkungen"), "versenk");});
test("versessen -> versess", function() {deepEqual( Stem("versessen"), "versess");});
test("versetze -> versetz", function() {deepEqual( Stem("versetze"), "versetz");});
test("versetzen -> versetz", function() {deepEqual( Stem("versetzen"), "versetz");});
test("versetzt -> versetzt", function() {deepEqual( Stem("versetzt"), "versetzt");});
test("versetzte -> versetzt", function() {deepEqual( Stem("versetzte"), "versetzt");});
test("versetzung -> versetz", function() {deepEqual( Stem("versetzung"), "versetz");});
test("versichern -> versich", function() {deepEqual( Stem("versichern"), "versich");});
test("versichert -> versichert", function() {deepEqual( Stem("versichert"), "versichert");});
test("versicherte -> versichert", function() {deepEqual( Stem("versicherte"), "versichert");});
test("versicherten -> versichert", function() {deepEqual( Stem("versicherten"), "versichert");});
test("versicherung -> versicher", function() {deepEqual( Stem("versicherung"), "versicher");});
test("versiegelt -> versiegelt", function() {deepEqual( Stem("versiegelt"), "versiegelt");});
test("versiegen -> versieg", function() {deepEqual( Stem("versiegen"), "versieg");});
test("versiegle -> versiegl", function() {deepEqual( Stem("versiegle"), "versiegl");});
test("versiegt -> versiegt", function() {deepEqual( Stem("versiegt"), "versiegt");});
test("versiert -> versiert", function() {deepEqual( Stem("versiert"), "versiert");});
test("versilbert -> versilbert", function() {deepEqual( Stem("versilbert"), "versilbert");});
test("versimpelter -> versimpelt", function() {deepEqual( Stem("versimpelter"), "versimpelt");});
test("versinke -> versink", function() {deepEqual( Stem("versinke"), "versink");});
test("versinken -> versink", function() {deepEqual( Stem("versinken"), "versink");});
test("versinkt -> versinkt", function() {deepEqual( Stem("versinkt"), "versinkt");});
test("versinnlichung -> versinnlich", function() {deepEqual( Stem("versinnlichung"), "versinnlich");});
test("version -> version", function() {deepEqual( Stem("version"), "version");});
test("versöhnen -> versohn", function() {deepEqual( Stem("versöhnen"), "versohn");});
test("versöhnlichen -> versohn", function() {deepEqual( Stem("versöhnlichen"), "versohn");});
test("versöhnt -> versohnt", function() {deepEqual( Stem("versöhnt"), "versohnt");});
test("versöhnung -> versohn", function() {deepEqual( Stem("versöhnung"), "versohn");});
test("versöhnungsversuch -> versohnungsversuch", function() {deepEqual( Stem("versöhnungsversuch"), "versohnungsversuch");});
test("versorgen -> versorg", function() {deepEqual( Stem("versorgen"), "versorg");});
test("versorgt -> versorgt", function() {deepEqual( Stem("versorgt"), "versorgt");});
test("versorgten -> versorgt", function() {deepEqual( Stem("versorgten"), "versorgt");});
test("verspart -> verspart", function() {deepEqual( Stem("verspart"), "verspart");});
test("verspätet -> verspatet", function() {deepEqual( Stem("verspätet"), "verspatet");});
test("verspätetes -> verspatet", function() {deepEqual( Stem("verspätetes"), "verspatet");});
test("verspätung -> verspat", function() {deepEqual( Stem("verspätung"), "verspat");});
test("verspeist -> verspeist", function() {deepEqual( Stem("verspeist"), "verspeist");});
test("versperren -> versperr", function() {deepEqual( Stem("versperren"), "versperr");});
test("versperrt -> versperrt", function() {deepEqual( Stem("versperrt"), "versperrt");});
test("versperrte -> versperrt", function() {deepEqual( Stem("versperrte"), "versperrt");});
test("verspotten -> verspott", function() {deepEqual( Stem("verspotten"), "verspott");});
test("versprach -> versprach", function() {deepEqual( Stem("versprach"), "versprach");});
test("versprachen -> versprach", function() {deepEqual( Stem("versprachen"), "versprach");});
test("verspreche -> versprech", function() {deepEqual( Stem("verspreche"), "versprech");});
test("versprechen -> versprech", function() {deepEqual( Stem("versprechen"), "versprech");});
test("verspricht -> verspricht", function() {deepEqual( Stem("verspricht"), "verspricht");});
test("versprochen -> versproch", function() {deepEqual( Stem("versprochen"), "versproch");});
test("versprochene -> versproch", function() {deepEqual( Stem("versprochene"), "versproch");});
test("verspüren -> verspur", function() {deepEqual( Stem("verspüren"), "verspur");});
test("verspürt -> verspurt", function() {deepEqual( Stem("verspürt"), "verspurt");});
test("verspürte -> verspurt", function() {deepEqual( Stem("verspürte"), "verspurt");});
test("verspürten -> verspurt", function() {deepEqual( Stem("verspürten"), "verspurt");});
test("verstand -> verstand", function() {deepEqual( Stem("verstand"), "verstand");});
test("verstande -> verstand", function() {deepEqual( Stem("verstande"), "verstand");});
test("verstanden -> verstand", function() {deepEqual( Stem("verstanden"), "verstand");});
test("verstandes -> verstand", function() {deepEqual( Stem("verstandes"), "verstand");});
test("verstandesbegriff -> verstandesbegriff", function() {deepEqual( Stem("verstandesbegriff"), "verstandesbegriff");});
test("verstandesbegriffe -> verstandesbegriff", function() {deepEqual( Stem("verstandesbegriffe"), "verstandesbegriff");});
test("verstandesbegriffen -> verstandesbegriff", function() {deepEqual( Stem("verstandesbegriffen"), "verstandesbegriff");});
test("verstandesbegriffs -> verstandesbegriff", function() {deepEqual( Stem("verstandesbegriffs"), "verstandesbegriff");});
test("verstandesform -> verstandesform", function() {deepEqual( Stem("verstandesform"), "verstandesform");});
test("verstandesgebiet -> verstandesgebiet", function() {deepEqual( Stem("verstandesgebiet"), "verstandesgebiet");});
test("verstandesgebietes -> verstandesgebiet", function() {deepEqual( Stem("verstandesgebietes"), "verstandesgebiet");});
test("verstandesglauben -> verstandesglaub", function() {deepEqual( Stem("verstandesglauben"), "verstandesglaub");});
test("verstandeskräfte -> verstandeskraft", function() {deepEqual( Stem("verstandeskräfte"), "verstandeskraft");});
test("verstandeslicht -> verstandeslicht", function() {deepEqual( Stem("verstandeslicht"), "verstandeslicht");});
test("verstandesvermögen -> verstandesvermog", function() {deepEqual( Stem("verstandesvermögen"), "verstandesvermog");});
test("verstandesvermögens -> verstandesvermog", function() {deepEqual( Stem("verstandesvermögens"), "verstandesvermog");});
test("verstandeswelt -> verstandeswelt", function() {deepEqual( Stem("verstandeswelt"), "verstandeswelt");});
test("verstandeswesen -> verstandeswes", function() {deepEqual( Stem("verstandeswesen"), "verstandeswes");});
test("verständig -> verstand", function() {deepEqual( Stem("verständig"), "verstand");});
test("verständige -> verstand", function() {deepEqual( Stem("verständige"), "verstand");});
test("verständigen -> verstand", function() {deepEqual( Stem("verständigen"), "verstand");});
test("verständiger -> verstand", function() {deepEqual( Stem("verständiger"), "verstand");});
test("verständiges -> verstand", function() {deepEqual( Stem("verständiges"), "verstand");});
test("verständigkeit -> verstand", function() {deepEqual( Stem("verständigkeit"), "verstand");});
test("verständigste -> verstand", function() {deepEqual( Stem("verständigste"), "verstand");});
test("verständigt -> verstandigt", function() {deepEqual( Stem("verständigt"), "verstandigt");});
test("verständigte -> verstandigt", function() {deepEqual( Stem("verständigte"), "verstandigt");});
test("verständigung -> verstand", function() {deepEqual( Stem("verständigung"), "verstand");});
test("verständlich -> verstand", function() {deepEqual( Stem("verständlich"), "verstand");});
test("verständlicher -> verstand", function() {deepEqual( Stem("verständlicher"), "verstand");});
test("verständlicherweise -> verstandlicherweis", function() {deepEqual( Stem("verständlicherweise"), "verstandlicherweis");});
test("verständlichkeit -> verstand", function() {deepEqual( Stem("verständlichkeit"), "verstand");});
test("verständnis -> verstandnis", function() {deepEqual( Stem("verständnis"), "verstandnis");});
test("verständnisinnig -> verstandnisinn", function() {deepEqual( Stem("verständnisinnig"), "verstandnisinn");});
test("verständnisinnigkeit -> verstandnisinn", function() {deepEqual( Stem("verständnisinnigkeit"), "verstandnisinn");});
test("verständnislosen -> verstandnislos", function() {deepEqual( Stem("verständnislosen"), "verstandnislos");});
test("verständnisse -> verstandnis", function() {deepEqual( Stem("verständnisse"), "verstandnis");});
test("verständnisses -> verstandnis", function() {deepEqual( Stem("verständnisses"), "verstandnis");});
test("verstandnisvoll -> verstandnisvoll", function() {deepEqual( Stem("verstandnisvoll"), "verstandnisvoll");});
test("verständnisvoll -> verstandnisvoll", function() {deepEqual( Stem("verständnisvoll"), "verstandnisvoll");});
test("verständnisvoller -> verstandnisvoll", function() {deepEqual( Stem("verständnisvoller"), "verstandnisvoll");});
test("verstänkert -> verstankert", function() {deepEqual( Stem("verstänkert"), "verstankert");});
test("verstärkt -> verstarkt", function() {deepEqual( Stem("verstärkt"), "verstarkt");});
test("verstärkte -> verstarkt", function() {deepEqual( Stem("verstärkte"), "verstarkt");});
test("verstärkter -> verstarkt", function() {deepEqual( Stem("verstärkter"), "verstarkt");});
test("verstatte -> verstatt", function() {deepEqual( Stem("verstatte"), "verstatt");});
test("verstatten -> verstatt", function() {deepEqual( Stem("verstatten"), "verstatt");});
test("verstattet -> verstattet", function() {deepEqual( Stem("verstattet"), "verstattet");});
test("verstecke -> versteck", function() {deepEqual( Stem("verstecke"), "versteck");});
test("verstecken -> versteck", function() {deepEqual( Stem("verstecken"), "versteck");});
test("versteckspielen -> versteckspiel", function() {deepEqual( Stem("versteckspielen"), "versteckspiel");});
test("versteckt -> versteckt", function() {deepEqual( Stem("versteckt"), "versteckt");});
test("versteckte -> versteckt", function() {deepEqual( Stem("versteckte"), "versteckt");});
test("verstecktes -> versteckt", function() {deepEqual( Stem("verstecktes"), "versteckt");});
test("versteh -> versteh", function() {deepEqual( Stem("versteh"), "versteh");});
test("verstehe -> versteh", function() {deepEqual( Stem("verstehe"), "versteh");});
test("verstehen -> versteh", function() {deepEqual( Stem("verstehen"), "versteh");});
test("verstehens -> versteh", function() {deepEqual( Stem("verstehens"), "versteh");});
test("verstehet -> verstehet", function() {deepEqual( Stem("verstehet"), "verstehet");});
test("verstehn -> verstehn", function() {deepEqual( Stem("verstehn"), "verstehn");});
test("verstehst -> versteh", function() {deepEqual( Stem("verstehst"), "versteh");});
test("versteht -> versteht", function() {deepEqual( Stem("versteht"), "versteht");});
test("versteigerung -> versteiger", function() {deepEqual( Stem("versteigerung"), "versteiger");});
test("versteinert -> versteinert", function() {deepEqual( Stem("versteinert"), "versteinert");});
test("versteinerte -> versteinert", function() {deepEqual( Stem("versteinerte"), "versteinert");});
test("verstellen -> verstell", function() {deepEqual( Stem("verstellen"), "verstell");});
test("verstellte -> verstellt", function() {deepEqual( Stem("verstellte"), "verstellt");});
test("verstellten -> verstellt", function() {deepEqual( Stem("verstellten"), "verstellt");});
test("verstellter -> verstellt", function() {deepEqual( Stem("verstellter"), "verstellt");});
test("verstellung -> verstell", function() {deepEqual( Stem("verstellung"), "verstell");});
test("verstimmt -> verstimmt", function() {deepEqual( Stem("verstimmt"), "verstimmt");});
test("verstimmter -> verstimmt", function() {deepEqual( Stem("verstimmter"), "verstimmt");});
test("verstocke -> verstock", function() {deepEqual( Stem("verstocke"), "verstock");});
test("verstocken -> verstock", function() {deepEqual( Stem("verstocken"), "verstock");});
test("verstockt -> verstockt", function() {deepEqual( Stem("verstockt"), "verstockt");});
test("verstockte -> verstockt", function() {deepEqual( Stem("verstockte"), "verstockt");});
test("verstocktes -> verstockt", function() {deepEqual( Stem("verstocktes"), "verstockt");});
test("verstocktwerdens -> verstocktwerd", function() {deepEqual( Stem("verstocktwerdens"), "verstocktwerd");});
test("verstockung -> verstock", function() {deepEqual( Stem("verstockung"), "verstock");});
test("verstohlen -> verstohl", function() {deepEqual( Stem("verstohlen"), "verstohl");});
test("verstohlener -> verstohl", function() {deepEqual( Stem("verstohlener"), "verstohl");});
test("verstopfe -> verstopf", function() {deepEqual( Stem("verstopfe"), "verstopf");});
test("verstopfen -> verstopf", function() {deepEqual( Stem("verstopfen"), "verstopf");});
test("verstopft -> verstopft", function() {deepEqual( Stem("verstopft"), "verstopft");});
test("verstopfte -> verstopft", function() {deepEqual( Stem("verstopfte"), "verstopft");});
test("verstorben -> verstorb", function() {deepEqual( Stem("verstorben"), "verstorb");});
test("verstorbene -> verstorb", function() {deepEqual( Stem("verstorbene"), "verstorb");});
test("verstorbenen -> verstorb", function() {deepEqual( Stem("verstorbenen"), "verstorb");});
test("verstört -> verstort", function() {deepEqual( Stem("verstört"), "verstort");});
test("verstörten -> verstort", function() {deepEqual( Stem("verstörten"), "verstort");});
test("verstörtes -> verstort", function() {deepEqual( Stem("verstörtes"), "verstort");});
test("verstösse -> verstoss", function() {deepEqual( Stem("verstösse"), "verstoss");});
test("verstossen -> verstoss", function() {deepEqual( Stem("verstossen"), "verstoss");});
test("verstoßen -> verstoss", function() {deepEqual( Stem("verstoßen"), "verstoss");});
test("verstossenen -> verstoss", function() {deepEqual( Stem("verstossenen"), "verstoss");});
test("verstossener -> verstoss", function() {deepEqual( Stem("verstossener"), "verstoss");});
test("verstossung -> verstoss", function() {deepEqual( Stem("verstossung"), "verstoss");});
test("verstoßung -> verstoss", function() {deepEqual( Stem("verstoßung"), "verstoss");});
test("verstreichen -> verstreich", function() {deepEqual( Stem("verstreichen"), "verstreich");});
test("verstummte -> verstummt", function() {deepEqual( Stem("verstummte"), "verstummt");});
test("verstummten -> verstummt", function() {deepEqual( Stem("verstummten"), "verstummt");});
test("verstünde -> verstund", function() {deepEqual( Stem("verstünde"), "verstund");});
test("versuch -> versuch", function() {deepEqual( Stem("versuch"), "versuch");});
test("versuche -> versuch", function() {deepEqual( Stem("versuche"), "versuch");});
test("versuchen -> versuch", function() {deepEqual( Stem("versuchen"), "versuch");});
test("versuchend -> versuch", function() {deepEqual( Stem("versuchend"), "versuch");});
test("versuchsweise -> versuchsweis", function() {deepEqual( Stem("versuchsweise"), "versuchsweis");});
test("versucht -> versucht", function() {deepEqual( Stem("versucht"), "versucht");});
test("versuchte -> versucht", function() {deepEqual( Stem("versuchte"), "versucht");});
test("versuchten -> versucht", function() {deepEqual( Stem("versuchten"), "versucht");});
test("versuchteste -> versucht", function() {deepEqual( Stem("versuchteste"), "versucht");});
test("versuchung -> versuch", function() {deepEqual( Stem("versuchung"), "versuch");});
test("versuchungen -> versuch", function() {deepEqual( Stem("versuchungen"), "versuch");});
test("versuchungsschmerzen -> versuchungsschmerz", function() {deepEqual( Stem("versuchungsschmerzen"), "versuchungsschmerz");});
test("versündigt -> versundigt", function() {deepEqual( Stem("versündigt"), "versundigt");});
test("versunken -> versunk", function() {deepEqual( Stem("versunken"), "versunk");});
test("versunkene -> versunk", function() {deepEqual( Stem("versunkene"), "versunk");});
test("versunkenes -> versunk", function() {deepEqual( Stem("versunkenes"), "versunk");});
test("vertäfelung -> vertafel", function() {deepEqual( Stem("vertäfelung"), "vertafel");});
test("vertauschen -> vertausch", function() {deepEqual( Stem("vertauschen"), "vertausch");});
test("vertauscht -> vertauscht", function() {deepEqual( Stem("vertauscht"), "vertauscht");});
test("vertausendfacht -> vertausendfacht", function() {deepEqual( Stem("vertausendfacht"), "vertausendfacht");});
test("verteidige -> verteid", function() {deepEqual( Stem("verteidige"), "verteid");});
test("verteidigen -> verteid", function() {deepEqual( Stem("verteidigen"), "verteid");});
test("verteidiger -> verteid", function() {deepEqual( Stem("verteidiger"), "verteid");});
test("verteidigern -> verteid", function() {deepEqual( Stem("verteidigern"), "verteid");});
test("verteidigt -> verteidigt", function() {deepEqual( Stem("verteidigt"), "verteidigt");});
test("verteidigte -> verteidigt", function() {deepEqual( Stem("verteidigte"), "verteidigt");});
test("verteidigung -> verteid", function() {deepEqual( Stem("verteidigung"), "verteid");});
test("verteidigungsschrift -> verteidigungsschrift", function() {deepEqual( Stem("verteidigungsschrift"), "verteidigungsschrift");});
test("verteilen -> verteil", function() {deepEqual( Stem("verteilen"), "verteil");});
test("verteilt -> verteilt", function() {deepEqual( Stem("verteilt"), "verteilt");});
test("verteilungsgerechtigkeit -> verteilungsgerecht", function() {deepEqual( Stem("verteilungsgerechtigkeit"), "verteilungsgerecht");});
test("verteuerung -> verteuer", function() {deepEqual( Stem("verteuerung"), "verteuer");});
test("vertiefen -> vertief", function() {deepEqual( Stem("vertiefen"), "vertief");});
test("vertieft -> vertieft", function() {deepEqual( Stem("vertieft"), "vertieft");});
test("vertiefte -> vertieft", function() {deepEqual( Stem("vertiefte"), "vertieft");});
test("vertiefung -> vertief", function() {deepEqual( Stem("vertiefung"), "vertief");});
test("vertilge -> vertilg", function() {deepEqual( Stem("vertilge"), "vertilg");});
test("vertilgen -> vertilg", function() {deepEqual( Stem("vertilgen"), "vertilg");});
test("vertilgt -> vertilgt", function() {deepEqual( Stem("vertilgt"), "vertilgt");});
test("vertilgte -> vertilgt", function() {deepEqual( Stem("vertilgte"), "vertilgt");});
test("vertilgung -> vertilg", function() {deepEqual( Stem("vertilgung"), "vertilg");});
test("vertrackt -> vertrackt", function() {deepEqual( Stem("vertrackt"), "vertrackt");});
test("vertrackten -> vertrackt", function() {deepEqual( Stem("vertrackten"), "vertrackt");});
test("vertrag -> vertrag", function() {deepEqual( Stem("vertrag"), "vertrag");});
test("vertragen -> vertrag", function() {deepEqual( Stem("vertragen"), "vertrag");});
test("vertrages -> vertrag", function() {deepEqual( Stem("vertrages"), "vertrag");});
test("verträglich -> vertrag", function() {deepEqual( Stem("verträglich"), "vertrag");});
test("vertragsbestimmungen -> vertragsbestimm", function() {deepEqual( Stem("vertragsbestimmungen"), "vertragsbestimm");});
test("vertragsmässig -> vertragsmass", function() {deepEqual( Stem("vertragsmässig"), "vertragsmass");});
test("vertragsmässige -> vertragsmass", function() {deepEqual( Stem("vertragsmässige"), "vertragsmass");});
test("verträgt -> vertragt", function() {deepEqual( Stem("verträgt"), "vertragt");});
test("vertraten -> vertrat", function() {deepEqual( Stem("vertraten"), "vertrat");});
test("vertraue -> vertrau", function() {deepEqual( Stem("vertraue"), "vertrau");});
test("vertrauen -> vertrau", function() {deepEqual( Stem("vertrauen"), "vertrau");});
test("vertrauensmann -> vertrauensmann", function() {deepEqual( Stem("vertrauensmann"), "vertrauensmann");});
test("vertraulich -> vertraulich", function() {deepEqual( Stem("vertraulich"), "vertraulich");});
test("verträulich -> vertraulich", function() {deepEqual( Stem("verträulich"), "vertraulich");});
test("vertrauliche -> vertraulich", function() {deepEqual( Stem("vertrauliche"), "vertraulich");});
test("vertrauliches -> vertraulich", function() {deepEqual( Stem("vertrauliches"), "vertraulich");});
test("verträumten -> vertraumt", function() {deepEqual( Stem("verträumten"), "vertraumt");});
test("vertraut -> vertraut", function() {deepEqual( Stem("vertraut"), "vertraut");});
test("vertraute -> vertraut", function() {deepEqual( Stem("vertraute"), "vertraut");});
test("vertrauten -> vertraut", function() {deepEqual( Stem("vertrauten"), "vertraut");});
test("vertrauter -> vertraut", function() {deepEqual( Stem("vertrauter"), "vertraut");});
test("vertrautester -> vertraut", function() {deepEqual( Stem("vertrautester"), "vertraut");});
test("vertreiben -> vertreib", function() {deepEqual( Stem("vertreiben"), "vertreib");});
test("vertreibenden -> vertreib", function() {deepEqual( Stem("vertreibenden"), "vertreib");});
test("vertreibung -> vertreib", function() {deepEqual( Stem("vertreibung"), "vertreib");});
test("vertreter -> vertret", function() {deepEqual( Stem("vertreter"), "vertret");});
test("vertretern -> vertret", function() {deepEqual( Stem("vertretern"), "vertret");});
test("vertretung -> vertret", function() {deepEqual( Stem("vertretung"), "vertret");});
test("vertrieb -> vertrieb", function() {deepEqual( Stem("vertrieb"), "vertrieb");});
test("vertrieben -> vertrieb", function() {deepEqual( Stem("vertrieben"), "vertrieb");});
test("vertriebenen -> vertrieb", function() {deepEqual( Stem("vertriebenen"), "vertrieb");});
test("vertrocknen -> vertrockn", function() {deepEqual( Stem("vertrocknen"), "vertrockn");});
test("vertrocknet -> vertrocknet", function() {deepEqual( Stem("vertrocknet"), "vertrocknet");});
test("vertrockneten -> vertrocknet", function() {deepEqual( Stem("vertrockneten"), "vertrocknet");});
test("vertrödeln -> vertrodeln", function() {deepEqual( Stem("vertrödeln"), "vertrodeln");});
test("vertrösten -> vertrost", function() {deepEqual( Stem("vertrösten"), "vertrost");});
test("vertröstete -> vertrostet", function() {deepEqual( Stem("vertröstete"), "vertrostet");});
test("vertrug -> vertrug", function() {deepEqual( Stem("vertrug"), "vertrug");});
test("vertrunkenen -> vertrunk", function() {deepEqual( Stem("vertrunkenen"), "vertrunk");});
test("vertuschen -> vertusch", function() {deepEqual( Stem("vertuschen"), "vertusch");});
test("verüben -> verub", function() {deepEqual( Stem("verüben"), "verub");});
test("verübt -> verubt", function() {deepEqual( Stem("verübt"), "verubt");});
test("verübte -> verubt", function() {deepEqual( Stem("verübte"), "verubt");});
test("verulamio -> verulamio", function() {deepEqual( Stem("verulamio"), "verulamio");});
test("verunglückt -> verungluckt", function() {deepEqual( Stem("verunglückt"), "verungluckt");});
test("verunglückten -> verungluckt", function() {deepEqual( Stem("verunglückten"), "verungluckt");});
test("verunreinigen -> verunrein", function() {deepEqual( Stem("verunreinigen"), "verunrein");});
test("verunreinigt -> verunreinigt", function() {deepEqual( Stem("verunreinigt"), "verunreinigt");});
test("verunreinigungen -> verunrein", function() {deepEqual( Stem("verunreinigungen"), "verunrein");});
test("verunsichert -> verunsichert", function() {deepEqual( Stem("verunsichert"), "verunsichert");});
test("verunstalten -> verunstalt", function() {deepEqual( Stem("verunstalten"), "verunstalt");});
test("verunstaltet -> verunstaltet", function() {deepEqual( Stem("verunstaltet"), "verunstaltet");});
test("verursache -> verursach", function() {deepEqual( Stem("verursache"), "verursach");});
test("verursachen -> verursach", function() {deepEqual( Stem("verursachen"), "verursach");});
test("verursacht -> verursacht", function() {deepEqual( Stem("verursacht"), "verursacht");});
test("verursachte -> verursacht", function() {deepEqual( Stem("verursachte"), "verursacht");});
test("verurteilt -> verurteilt", function() {deepEqual( Stem("verurteilt"), "verurteilt");});
test("verurteilung -> verurteil", function() {deepEqual( Stem("verurteilung"), "verurteil");});
test("vervielfältigen -> vervielfalt", function() {deepEqual( Stem("vervielfältigen"), "vervielfalt");});
test("vervielfältigend -> vervielfalt", function() {deepEqual( Stem("vervielfältigend"), "vervielfalt");});
test("vervielfältigt -> vervielfaltigt", function() {deepEqual( Stem("vervielfältigt"), "vervielfaltigt");});
test("vervielfältigten -> vervielfaltigt", function() {deepEqual( Stem("vervielfältigten"), "vervielfaltigt");});
test("vervielfältigungen -> vervielfalt", function() {deepEqual( Stem("vervielfältigungen"), "vervielfalt");});
test("vervollkommnen -> vervollkommn", function() {deepEqual( Stem("vervollkommnen"), "vervollkommn");});
test("vervollkommnet -> vervollkommnet", function() {deepEqual( Stem("vervollkommnet"), "vervollkommnet");});
test("vervollständigen -> vervollstand", function() {deepEqual( Stem("vervollständigen"), "vervollstand");});
test("verwahrt -> verwahrt", function() {deepEqual( Stem("verwahrt"), "verwahrt");});
test("verwahrte -> verwahrt", function() {deepEqual( Stem("verwahrte"), "verwahrt");});
test("verwahrung -> verwahr", function() {deepEqual( Stem("verwahrung"), "verwahr");});
test("verwaist -> verwaist", function() {deepEqual( Stem("verwaist"), "verwaist");});
test("verwalten -> verwalt", function() {deepEqual( Stem("verwalten"), "verwalt");});
test("verwaltend -> verwalt", function() {deepEqual( Stem("verwaltend"), "verwalt");});
test("verwaltenden -> verwalt", function() {deepEqual( Stem("verwaltenden"), "verwalt");});
test("verwalter -> verwalt", function() {deepEqual( Stem("verwalter"), "verwalt");});
test("verwaltete -> verwaltet", function() {deepEqual( Stem("verwaltete"), "verwaltet");});
test("verwaltung -> verwalt", function() {deepEqual( Stem("verwaltung"), "verwalt");});
test("verwaltungen -> verwalt", function() {deepEqual( Stem("verwaltungen"), "verwalt");});
test("verwaltungsmann -> verwaltungsmann", function() {deepEqual( Stem("verwaltungsmann"), "verwaltungsmann");});
test("verwaltungsräte -> verwaltungsrat", function() {deepEqual( Stem("verwaltungsräte"), "verwaltungsrat");});
test("verwaltungsrechnung -> verwaltungsrechn", function() {deepEqual( Stem("verwaltungsrechnung"), "verwaltungsrechn");});
test("verwandeln -> verwandeln", function() {deepEqual( Stem("verwandeln"), "verwandeln");});
test("verwandelt -> verwandelt", function() {deepEqual( Stem("verwandelt"), "verwandelt");});
test("verwandelte -> verwandelt", function() {deepEqual( Stem("verwandelte"), "verwandelt");});
test("verwandelten -> verwandelt", function() {deepEqual( Stem("verwandelten"), "verwandelt");});
test("verwandle -> verwandl", function() {deepEqual( Stem("verwandle"), "verwandl");});
test("verwandlung -> verwandl", function() {deepEqual( Stem("verwandlung"), "verwandl");});
test("verwandt -> verwandt", function() {deepEqual( Stem("verwandt"), "verwandt");});
test("verwandte -> verwandt", function() {deepEqual( Stem("verwandte"), "verwandt");});
test("verwandten -> verwandt", function() {deepEqual( Stem("verwandten"), "verwandt");});
test("verwandter -> verwandt", function() {deepEqual( Stem("verwandter"), "verwandt");});
test("verwandtschaft -> verwandtschaft", function() {deepEqual( Stem("verwandtschaft"), "verwandtschaft");});
test("verwandtschaften -> verwandtschaft", function() {deepEqual( Stem("verwandtschaften"), "verwandtschaft");});
test("verwandtschaftsverhältnissen -> verwandtschaftsverhaltnis", function() {deepEqual( Stem("verwandtschaftsverhältnissen"), "verwandtschaftsverhaltnis");});
test("verwarf -> verwarf", function() {deepEqual( Stem("verwarf"), "verwarf");});
test("verwarfen -> verwarf", function() {deepEqual( Stem("verwarfen"), "verwarf");});
test("verwaschen -> verwasch", function() {deepEqual( Stem("verwaschen"), "verwasch");});
test("verwaschenen -> verwasch", function() {deepEqual( Stem("verwaschenen"), "verwasch");});
test("verwaschenes -> verwasch", function() {deepEqual( Stem("verwaschenes"), "verwasch");});
test("verwässert -> verwassert", function() {deepEqual( Stem("verwässert"), "verwassert");});
test("verwebt -> verwebt", function() {deepEqual( Stem("verwebt"), "verwebt");});
test("verwechselt -> verwechselt", function() {deepEqual( Stem("verwechselt"), "verwechselt");});
test("verwechselten -> verwechselt", function() {deepEqual( Stem("verwechselten"), "verwechselt");});
test("verwegen -> verweg", function() {deepEqual( Stem("verwegen"), "verweg");});
test("verwegene -> verweg", function() {deepEqual( Stem("verwegene"), "verweg");});
test("verwegenen -> verweg", function() {deepEqual( Stem("verwegenen"), "verweg");});
test("verwehenden -> verweh", function() {deepEqual( Stem("verwehenden"), "verweh");});
test("verwehrt -> verwehrt", function() {deepEqual( Stem("verwehrt"), "verwehrt");});
test("verweht -> verweht", function() {deepEqual( Stem("verweht"), "verweht");});
test("verwehten -> verweht", function() {deepEqual( Stem("verwehten"), "verweht");});
test("verweichlichen -> verweich", function() {deepEqual( Stem("verweichlichen"), "verweich");});
test("verweigern -> verweig", function() {deepEqual( Stem("verweigern"), "verweig");});
test("verweigert -> verweigert", function() {deepEqual( Stem("verweigert"), "verweigert");});
test("verweigerte -> verweigert", function() {deepEqual( Stem("verweigerte"), "verweigert");});
test("verweigerten -> verweigert", function() {deepEqual( Stem("verweigerten"), "verweigert");});
test("verweigerung -> verweiger", function() {deepEqual( Stem("verweigerung"), "verweiger");});
test("verweilen -> verweil", function() {deepEqual( Stem("verweilen"), "verweil");});
test("verweilt -> verweilt", function() {deepEqual( Stem("verweilt"), "verweilt");});
test("verweilte -> verweilt", function() {deepEqual( Stem("verweilte"), "verweilt");});
test("verweinte -> verweint", function() {deepEqual( Stem("verweinte"), "verweint");});
test("verweis -> verweis", function() {deepEqual( Stem("verweis"), "verweis");});
test("verweise -> verweis", function() {deepEqual( Stem("verweise"), "verweis");});
test("verweisend -> verweis", function() {deepEqual( Stem("verweisend"), "verweis");});
test("verweist -> verweist", function() {deepEqual( Stem("verweist"), "verweist");});
test("verweisung -> verweis", function() {deepEqual( Stem("verweisung"), "verweis");});
test("verwelken -> verwelk", function() {deepEqual( Stem("verwelken"), "verwelk");});
test("verwelkt -> verwelkt", function() {deepEqual( Stem("verwelkt"), "verwelkt");});
test("verwenden -> verwend", function() {deepEqual( Stem("verwenden"), "verwend");});
test("verwendet -> verwendet", function() {deepEqual( Stem("verwendet"), "verwendet");});
test("verwendete -> verwendet", function() {deepEqual( Stem("verwendete"), "verwendet");});
test("verwendeten -> verwendet", function() {deepEqual( Stem("verwendeten"), "verwendet");});
test("verwendung -> verwend", function() {deepEqual( Stem("verwendung"), "verwend");});
test("verwerfen -> verwerf", function() {deepEqual( Stem("verwerfen"), "verwerf");});
test("verwerfung -> verwerf", function() {deepEqual( Stem("verwerfung"), "verwerf");});
test("verwickeln -> verwickeln", function() {deepEqual( Stem("verwickeln"), "verwickeln");});
test("verwickelt -> verwickelt", function() {deepEqual( Stem("verwickelt"), "verwickelt");});
test("verwickelte -> verwickelt", function() {deepEqual( Stem("verwickelte"), "verwickelt");});
test("verwickelten -> verwickelt", function() {deepEqual( Stem("verwickelten"), "verwickelt");});
test("verwickelter -> verwickelt", function() {deepEqual( Stem("verwickelter"), "verwickelt");});
test("verwiesen -> verwies", function() {deepEqual( Stem("verwiesen"), "verwies");});
test("verwilderte -> verwildert", function() {deepEqual( Stem("verwilderte"), "verwildert");});
test("verwildertem -> verwildert", function() {deepEqual( Stem("verwildertem"), "verwildert");});
test("verwilderten -> verwildert", function() {deepEqual( Stem("verwilderten"), "verwildert");});
test("verwildertes -> verwildert", function() {deepEqual( Stem("verwildertes"), "verwildert");});
test("verwilderung -> verwilder", function() {deepEqual( Stem("verwilderung"), "verwilder");});
test("verwinden -> verwind", function() {deepEqual( Stem("verwinden"), "verwind");});
test("verwirft -> verwirft", function() {deepEqual( Stem("verwirft"), "verwirft");});
test("verwirklicht -> verwirklicht", function() {deepEqual( Stem("verwirklicht"), "verwirklicht");});
test("verwirklichung -> verwirklich", function() {deepEqual( Stem("verwirklichung"), "verwirklich");});
test("verwirren -> verwirr", function() {deepEqual( Stem("verwirren"), "verwirr");});
test("verwirrende -> verwirr", function() {deepEqual( Stem("verwirrende"), "verwirr");});
test("verwirret -> verwirret", function() {deepEqual( Stem("verwirret"), "verwirret");});
test("verwirrt -> verwirrt", function() {deepEqual( Stem("verwirrt"), "verwirrt");});
test("verwirrte -> verwirrt", function() {deepEqual( Stem("verwirrte"), "verwirrt");});
test("verwirrtem -> verwirrt", function() {deepEqual( Stem("verwirrtem"), "verwirrt");});
test("verwirrten -> verwirrt", function() {deepEqual( Stem("verwirrten"), "verwirrt");});
test("verwirrung -> verwirr", function() {deepEqual( Stem("verwirrung"), "verwirr");});
test("verwirrungen -> verwirr", function() {deepEqual( Stem("verwirrungen"), "verwirr");});
test("verwirrungsrecht -> verwirrungsrecht", function() {deepEqual( Stem("verwirrungsrecht"), "verwirrungsrecht");});
test("verwischt -> verwischt", function() {deepEqual( Stem("verwischt"), "verwischt");});
test("verwittert -> verwittert", function() {deepEqual( Stem("verwittert"), "verwittert");});
test("verwitterte -> verwittert", function() {deepEqual( Stem("verwitterte"), "verwittert");});
test("verwitterter -> verwittert", function() {deepEqual( Stem("verwitterter"), "verwittert");});
test("verwittertes -> verwittert", function() {deepEqual( Stem("verwittertes"), "verwittert");});
test("verworfen -> verworf", function() {deepEqual( Stem("verworfen"), "verworf");});
test("verworfene -> verworf", function() {deepEqual( Stem("verworfene"), "verworf");});
test("verworfnen -> verworfn", function() {deepEqual( Stem("verworfnen"), "verworfn");});
test("verworrene -> verworr", function() {deepEqual( Stem("verworrene"), "verworr");});
test("verworrenen -> verworr", function() {deepEqual( Stem("verworrenen"), "verworr");});
test("verworrenes -> verworr", function() {deepEqual( Stem("verworrenes"), "verworr");});
test("verwucherten -> verwuchert", function() {deepEqual( Stem("verwucherten"), "verwuchert");});
test("verwunden -> verwund", function() {deepEqual( Stem("verwunden"), "verwund");});
test("verwunderlicher -> verwund", function() {deepEqual( Stem("verwunderlicher"), "verwund");});
test("verwundern -> verwund", function() {deepEqual( Stem("verwundern"), "verwund");});
test("verwundert -> verwundert", function() {deepEqual( Stem("verwundert"), "verwundert");});
test("verwunderten -> verwundert", function() {deepEqual( Stem("verwunderten"), "verwundert");});
test("verwunderung -> verwunder", function() {deepEqual( Stem("verwunderung"), "verwunder");});
test("verwundet -> verwundet", function() {deepEqual( Stem("verwundet"), "verwundet");});
test("verwundr -> verwundr", function() {deepEqual( Stem("verwundr"), "verwundr");});
test("verwunschenen -> verwunsch", function() {deepEqual( Stem("verwunschenen"), "verwunsch");});
test("verwünschte -> verwunscht", function() {deepEqual( Stem("verwünschte"), "verwunscht");});
test("verwünschten -> verwunscht", function() {deepEqual( Stem("verwünschten"), "verwunscht");});
test("verwünschungen -> verwunsch", function() {deepEqual( Stem("verwünschungen"), "verwunsch");});
test("verwüste -> verwust", function() {deepEqual( Stem("verwüste"), "verwust");});
test("verwüsten -> verwust", function() {deepEqual( Stem("verwüsten"), "verwust");});
test("verwüstende -> verwust", function() {deepEqual( Stem("verwüstende"), "verwust");});
test("verwüster -> verwust", function() {deepEqual( Stem("verwüster"), "verwust");});
test("verwüstet -> verwustet", function() {deepEqual( Stem("verwüstet"), "verwustet");});
test("verwüstete -> verwustet", function() {deepEqual( Stem("verwüstete"), "verwustet");});
test("verwüsteten -> verwustet", function() {deepEqual( Stem("verwüsteten"), "verwustet");});
test("verwüstung -> verwust", function() {deepEqual( Stem("verwüstung"), "verwust");});
test("verwüstungen -> verwust", function() {deepEqual( Stem("verwüstungen"), "verwust");});
test("verzagen -> verzag", function() {deepEqual( Stem("verzagen"), "verzag");});
test("verzagt -> verzagt", function() {deepEqual( Stem("verzagt"), "verzagt");});
test("verzagte -> verzagt", function() {deepEqual( Stem("verzagte"), "verzagt");});
test("verzählen -> verzahl", function() {deepEqual( Stem("verzählen"), "verzahl");});
test("verzählt -> verzahlt", function() {deepEqual( Stem("verzählt"), "verzahlt");});
test("verzäuner -> verzaun", function() {deepEqual( Stem("verzäuner"), "verzaun");});
test("verzehren -> verzehr", function() {deepEqual( Stem("verzehren"), "verzehr");});
test("verzehrende -> verzehr", function() {deepEqual( Stem("verzehrende"), "verzehr");});
test("verzehrenden -> verzehr", function() {deepEqual( Stem("verzehrenden"), "verzehr");});
test("verzehrender -> verzehr", function() {deepEqual( Stem("verzehrender"), "verzehr");});
test("verzehrendes -> verzehr", function() {deepEqual( Stem("verzehrendes"), "verzehr");});
test("verzehrer -> verzehr", function() {deepEqual( Stem("verzehrer"), "verzehr");});
test("verzehret -> verzehret", function() {deepEqual( Stem("verzehret"), "verzehret");});
test("verzehrt -> verzehrt", function() {deepEqual( Stem("verzehrt"), "verzehrt");});
test("verzehrte -> verzehrt", function() {deepEqual( Stem("verzehrte"), "verzehrt");});
test("verzehrten -> verzehrt", function() {deepEqual( Stem("verzehrten"), "verzehrt");});
test("verzeichnen -> verzeichn", function() {deepEqual( Stem("verzeichnen"), "verzeichn");});
test("verzeichnet -> verzeichnet", function() {deepEqual( Stem("verzeichnet"), "verzeichnet");});
test("verzeichnete -> verzeichnet", function() {deepEqual( Stem("verzeichnete"), "verzeichnet");});
test("verzeichnis -> verzeichnis", function() {deepEqual( Stem("verzeichnis"), "verzeichnis");});
test("verzeih -> verzeih", function() {deepEqual( Stem("verzeih"), "verzeih");});
test("verzeihen -> verzeih", function() {deepEqual( Stem("verzeihen"), "verzeih");});
test("verzeihliche -> verzeih", function() {deepEqual( Stem("verzeihliche"), "verzeih");});
test("verzeihst -> verzeih", function() {deepEqual( Stem("verzeihst"), "verzeih");});
test("verzeiht -> verzeiht", function() {deepEqual( Stem("verzeiht"), "verzeiht");});
test("verzeihung -> verzeih", function() {deepEqual( Stem("verzeihung"), "verzeih");});
test("verzerrten -> verzerrt", function() {deepEqual( Stem("verzerrten"), "verzerrt");});
test("verzicht -> verzicht", function() {deepEqual( Stem("verzicht"), "verzicht");});
test("verzichten -> verzicht", function() {deepEqual( Stem("verzichten"), "verzicht");});
test("verzichtet -> verzichtet", function() {deepEqual( Stem("verzichtet"), "verzichtet");});
test("verzichtete -> verzichtet", function() {deepEqual( Stem("verzichtete"), "verzichtet");});
test("verzieh -> verzieh", function() {deepEqual( Stem("verzieh"), "verzieh");});
test("verziehen -> verzieh", function() {deepEqual( Stem("verziehen"), "verzieh");});
test("verziert -> verziert", function() {deepEqual( Stem("verziert"), "verziert");});
test("verzierte -> verziert", function() {deepEqual( Stem("verzierte"), "verziert");});
test("verzierungen -> verzier", function() {deepEqual( Stem("verzierungen"), "verzier");});
test("verzog -> verzog", function() {deepEqual( Stem("verzog"), "verzog");});
test("verzogen -> verzog", function() {deepEqual( Stem("verzogen"), "verzog");});
test("verzogene -> verzog", function() {deepEqual( Stem("verzogene"), "verzog");});
test("verzögert -> verzogert", function() {deepEqual( Stem("verzögert"), "verzogert");});
test("verzögerte -> verzogert", function() {deepEqual( Stem("verzögerte"), "verzogert");});
test("verzweifelt -> verzweifelt", function() {deepEqual( Stem("verzweifelt"), "verzweifelt");});
test("verzweifelte -> verzweifelt", function() {deepEqual( Stem("verzweifelte"), "verzweifelt");});
test("verzweifelten -> verzweifelt", function() {deepEqual( Stem("verzweifelten"), "verzweifelt");});
test("verzweifeltsten -> verzweifelt", function() {deepEqual( Stem("verzweifeltsten"), "verzweifelt");});
test("verzweiflung -> verzweifl", function() {deepEqual( Stem("verzweiflung"), "verzweifl");});
test("verzweiflungsvolles -> verzweiflungsvoll", function() {deepEqual( Stem("verzweiflungsvolles"), "verzweiflungsvoll");});
test("verzwickten -> verzwickt", function() {deepEqual( Stem("verzwickten"), "verzwickt");});
test("vesperbrote -> vesperbrot", function() {deepEqual( Stem("vesperbrote"), "vesperbrot");});
test("vesperkaffees -> vesperkaffe", function() {deepEqual( Stem("vesperkaffees"), "vesperkaffe");});
test("vestalinnen -> vestalinn", function() {deepEqual( Stem("vestalinnen"), "vestalinn");});
test("vesuvius -> vesuvius", function() {deepEqual( Stem("vesuvius"), "vesuvius");});
test("veterinärschul -> veterinarschul", function() {deepEqual( Stem("veterinärschul"), "veterinarschul");});
test("veto -> veto", function() {deepEqual( Stem("veto"), "veto");});
test("vetsch -> vetsch", function() {deepEqual( Stem("vetsch"), "vetsch");});
test("vetter -> vett", function() {deepEqual( Stem("vetter"), "vett");});
test("vetters -> vett", function() {deepEqual( Stem("vetters"), "vett");});
test("vexieren -> vexi", function() {deepEqual( Stem("vexieren"), "vexi");});
test("vexiergasse -> vexiergass", function() {deepEqual( Stem("vexiergasse"), "vexiergass");});
test("vfb -> vfb", function() {deepEqual( Stem("vfb"), "vfb");});
test("vi -> vi", function() {deepEqual( Stem("vi"), "vi");});
test("vicomtesse -> vicomtess", function() {deepEqual( Stem("vicomtesse"), "vicomtess");});
test("victory -> victory", function() {deepEqual( Stem("victory"), "victory");});
test("vide -> vid", function() {deepEqual( Stem("vide"), "vid");});
test("videofilmer -> videofilm", function() {deepEqual( Stem("videofilmer"), "videofilm");});
test("videokamera -> videokamera", function() {deepEqual( Stem("videokamera"), "videokamera");});
test("viecherl -> viecherl", function() {deepEqual( Stem("viecherl"), "viecherl");});
test("vieh -> vieh", function() {deepEqual( Stem("vieh"), "vieh");});
test("viehhandel -> viehhandel", function() {deepEqual( Stem("viehhandel"), "viehhandel");});
test("viehherden -> viehherd", function() {deepEqual( Stem("viehherden"), "viehherd");});
test("viehhürdenbewohner -> viehhurdenbewohn", function() {deepEqual( Stem("viehhürdenbewohner"), "viehhurdenbewohn");});
test("viehs -> vieh", function() {deepEqual( Stem("viehs"), "vieh");});
test("viehzucht -> viehzucht", function() {deepEqual( Stem("viehzucht"), "viehzucht");});
test("viel -> viel", function() {deepEqual( Stem("viel"), "viel");});
test("vielbesucht -> vielbesucht", function() {deepEqual( Stem("vielbesucht"), "vielbesucht");});
test("viele -> viel", function() {deepEqual( Stem("viele"), "viel");});
test("vielem -> viel", function() {deepEqual( Stem("vielem"), "viel");});
test("vielen -> viel", function() {deepEqual( Stem("vielen"), "viel");});
test("vieler -> viel", function() {deepEqual( Stem("vieler"), "viel");});
test("vielerlei -> vielerlei", function() {deepEqual( Stem("vielerlei"), "vielerlei");});
test("vieles -> viel", function() {deepEqual( Stem("vieles"), "viel");});
test("vielfach -> vielfach", function() {deepEqual( Stem("vielfach"), "vielfach");});
test("vielfache -> vielfach", function() {deepEqual( Stem("vielfache"), "vielfach");});
test("vielfaches -> vielfach", function() {deepEqual( Stem("vielfaches"), "vielfach");});
test("vielfalt -> vielfalt", function() {deepEqual( Stem("vielfalt"), "vielfalt");});
test("vielfältig -> vielfalt", function() {deepEqual( Stem("vielfältig"), "vielfalt");});
test("vielfältige -> vielfalt", function() {deepEqual( Stem("vielfältige"), "vielfalt");});
test("vielfältiger -> vielfalt", function() {deepEqual( Stem("vielfältiger"), "vielfalt");});
test("vielgestaltige -> vielgestalt", function() {deepEqual( Stem("vielgestaltige"), "vielgestalt");});
test("vielgewordene -> vielgeword", function() {deepEqual( Stem("vielgewordene"), "vielgeword");});
test("vieljährige -> vieljahr", function() {deepEqual( Stem("vieljährige"), "vieljahr");});
test("vielköpfigen -> vielkopf", function() {deepEqual( Stem("vielköpfigen"), "vielkopf");});
test("vielle -> viell", function() {deepEqual( Stem("vielle"), "viell");});
test("vielleicht -> vielleicht", function() {deepEqual( Stem("vielleicht"), "vielleicht");});
test("vielmals -> vielmal", function() {deepEqual( Stem("vielmals"), "vielmal");});
test("vielmehr -> vielmehr", function() {deepEqual( Stem("vielmehr"), "vielmehr");});
test("vielverschlungenen -> vielverschl", function() {deepEqual( Stem("vielverschlungenen"), "vielverschl");});
test("vielweniger -> vielwen", function() {deepEqual( Stem("vielweniger"), "vielwen");});
test("vier -> vier", function() {deepEqual( Stem("vier"), "vier");});
test("viereckig -> viereck", function() {deepEqual( Stem("viereckig"), "viereck");});
test("viereckigen -> viereck", function() {deepEqual( Stem("viereckigen"), "viereck");});
test("viereckiger -> viereck", function() {deepEqual( Stem("viereckiger"), "viereck");});
test("viereinhalb -> viereinhalb", function() {deepEqual( Stem("viereinhalb"), "viereinhalb");});
test("vieren -> vier", function() {deepEqual( Stem("vieren"), "vier");});
test("vierhundertdrei -> vierhundertdrei", function() {deepEqual( Stem("vierhundertdrei"), "vierhundertdrei");});
test("vierhundertdreissig -> vierhundertdreiss", function() {deepEqual( Stem("vierhundertdreissig"), "vierhundertdreiss");});
test("vierhundertdreißig -> vierhundertdreiss", function() {deepEqual( Stem("vierhundertdreißig"), "vierhundertdreiss");});
test("vierhundertertundzweimal -> vierhundertertundzweimal", function() {deepEqual( Stem("vierhundertertundzweimal"), "vierhundertertundzweimal");});
test("vierjährigen -> vierjahr", function() {deepEqual( Stem("vierjährigen"), "vierjahr");});
test("vierköpfige -> vierkopf", function() {deepEqual( Stem("vierköpfige"), "vierkopf");});
test("viermal -> viermal", function() {deepEqual( Stem("viermal"), "viermal");});
test("vierschrötige -> vierschrot", function() {deepEqual( Stem("vierschrötige"), "vierschrot");});
test("vierspännige -> vierspann", function() {deepEqual( Stem("vierspännige"), "vierspann");});
test("vierspännigen -> vierspann", function() {deepEqual( Stem("vierspännigen"), "vierspann");});
test("vierstündige -> vierstund", function() {deepEqual( Stem("vierstündige"), "vierstund");});
test("viertägige -> viertag", function() {deepEqual( Stem("viertägige"), "viertag");});
test("vierte -> viert", function() {deepEqual( Stem("vierte"), "viert");});
test("viertel -> viertel", function() {deepEqual( Stem("viertel"), "viertel");});
test("vierteljahr -> vierteljahr", function() {deepEqual( Stem("vierteljahr"), "vierteljahr");});
test("vierteljährchen -> vierteljahrch", function() {deepEqual( Stem("vierteljährchen"), "vierteljahrch");});
test("vierteljahrhundert -> vierteljahrhundert", function() {deepEqual( Stem("vierteljahrhundert"), "vierteljahrhundert");});
test("viertelstündchen -> viertelstundch", function() {deepEqual( Stem("viertelstündchen"), "viertelstundch");});
test("viertelstunde -> viertelstund", function() {deepEqual( Stem("viertelstunde"), "viertelstund");});
test("viertelstündl -> viertelstundl", function() {deepEqual( Stem("viertelstündl"), "viertelstundl");});
test("viertelswandseite -> viertelswandseit", function() {deepEqual( Stem("viertelswandseite"), "viertelswandseit");});
test("vierten -> viert", function() {deepEqual( Stem("vierten"), "viert");});
test("viertes -> viert", function() {deepEqual( Stem("viertes"), "viert");});
test("vierunddreißig -> vierunddreiss", function() {deepEqual( Stem("vierunddreißig"), "vierunddreiss");});
test("vierundzwanzig -> vierundzwanz", function() {deepEqual( Stem("vierundzwanzig"), "vierundzwanz");});
test("vierundzwanzigstündiger -> vierundzwanzigstund", function() {deepEqual( Stem("vierundzwanzigstündiger"), "vierundzwanzigstund");});
test("vierzehn -> vierzehn", function() {deepEqual( Stem("vierzehn"), "vierzehn");});
test("vierzehnten -> vierzehnt", function() {deepEqual( Stem("vierzehnten"), "vierzehnt");});
test("vierzig -> vierzig", function() {deepEqual( Stem("vierzig"), "vierzig");});
test("vierzigjähriger -> vierzigjahr", function() {deepEqual( Stem("vierzigjähriger"), "vierzigjahr");});
test("vierzigste -> vierzig", function() {deepEqual( Stem("vierzigste"), "vierzig");});
test("vii -> vii", function() {deepEqual( Stem("vii"), "vii");});
test("viii -> viii", function() {deepEqual( Stem("viii"), "viii");});
test("villarson -> villarson", function() {deepEqual( Stem("villarson"), "villarson");});
test("vim -> vim", function() {deepEqual( Stem("vim"), "vim");});
test("violettes -> violett", function() {deepEqual( Stem("violettes"), "violett");});
test("viper -> vip", function() {deepEqual( Stem("viper"), "vip");});
test("vipern -> vip", function() {deepEqual( Stem("vipern"), "vip");});
test("vipernarten -> vipernart", function() {deepEqual( Stem("vipernarten"), "vipernart");});
test("virginien -> virgini", function() {deepEqual( Stem("virginien"), "virgini");});
test("virtuelle -> virtuell", function() {deepEqual( Stem("virtuelle"), "virtuell");});
test("virtuosen -> virtuos", function() {deepEqual( Stem("virtuosen"), "virtuos");});
test("visiers -> visi", function() {deepEqual( Stem("visiers"), "visi");});
test("vision -> vision", function() {deepEqual( Stem("vision"), "vision");});
test("visir -> visir", function() {deepEqual( Stem("visir"), "visir");});
test("visit -> visit", function() {deepEqual( Stem("visit"), "visit");});
test("visitenstuben -> visitenstub", function() {deepEqual( Stem("visitenstuben"), "visitenstub");});
test("vita -> vita", function() {deepEqual( Stem("vita"), "vita");});
test("vital -> vital", function() {deepEqual( Stem("vital"), "vital");});
test("vitale -> vital", function() {deepEqual( Stem("vitale"), "vital");});
test("vitalen -> vital", function() {deepEqual( Stem("vitalen"), "vital");});
test("vitaler -> vital", function() {deepEqual( Stem("vitaler"), "vital");});
test("vitalitat -> vitalitat", function() {deepEqual( Stem("vitalitat"), "vitalitat");});
test("vitalität -> vitalitat", function() {deepEqual( Stem("vitalität"), "vitalitat");});
test("vitaminreiche -> vitaminreich", function() {deepEqual( Stem("vitaminreiche"), "vitaminreich");});
test("vitium -> vitium", function() {deepEqual( Stem("vitium"), "vitium");});
test("vivificandum -> vivificandum", function() {deepEqual( Stem("vivificandum"), "vivificandum");});
test("vogel -> vogel", function() {deepEqual( Stem("vogel"), "vogel");});
test("vögel -> vogel", function() {deepEqual( Stem("vögel"), "vogel");});
test("vogelbeerbüscheln -> vogelbeerbuscheln", function() {deepEqual( Stem("vogelbeerbüscheln"), "vogelbeerbuscheln");});
test("vogelbeeren -> vogelbe", function() {deepEqual( Stem("vogelbeeren"), "vogelbe");});
test("vögelchen -> vogelch", function() {deepEqual( Stem("vögelchen"), "vogelch");});
test("vögeln -> vogeln", function() {deepEqual( Stem("vögeln"), "vogeln");});
test("vogels -> vogel", function() {deepEqual( Stem("vogels"), "vogel");});
test("vogelstellers -> vogelstell", function() {deepEqual( Stem("vogelstellers"), "vogelstell");});
test("vogelstimmen -> vogelstimm", function() {deepEqual( Stem("vogelstimmen"), "vogelstimm");});
test("vöglein -> voglein", function() {deepEqual( Stem("vöglein"), "voglein");});
test("vögte -> vogt", function() {deepEqual( Stem("vögte"), "vogt");});
test("vögten -> vogt", function() {deepEqual( Stem("vögten"), "vogt");});
test("vokabeln -> vokabeln", function() {deepEqual( Stem("vokabeln"), "vokabeln");});
test("vokabular -> vokabular", function() {deepEqual( Stem("vokabular"), "vokabular");});
test("vokativ -> vokativ", function() {deepEqual( Stem("vokativ"), "vokativ");});
test("vokative -> vokativ", function() {deepEqual( Stem("vokative"), "vokativ");});
test("volcker -> volck", function() {deepEqual( Stem("volcker"), "volck");});
test("volk -> volk", function() {deepEqual( Stem("volk"), "volk");});
test("völkchen -> volkch", function() {deepEqual( Stem("völkchen"), "volkch");});
test("volke -> volk", function() {deepEqual( Stem("volke"), "volk");});
test("völker -> volk", function() {deepEqual( Stem("völker"), "volk");});
test("völkern -> volk", function() {deepEqual( Stem("völkern"), "volk");});
test("völkerschaft -> volkerschaft", function() {deepEqual( Stem("völkerschaft"), "volkerschaft");});
test("völkerschaften -> volkerschaft", function() {deepEqual( Stem("völkerschaften"), "volkerschaft");});
test("völkerstrich -> volkerstrich", function() {deepEqual( Stem("völkerstrich"), "volkerstrich");});
test("völkerwanderung -> volkerwander", function() {deepEqual( Stem("völkerwanderung"), "volkerwander");});
test("volkes -> volk", function() {deepEqual( Stem("volkes"), "volk");});
test("völklein -> volklein", function() {deepEqual( Stem("völklein"), "volklein");});
test("volks -> volk", function() {deepEqual( Stem("volks"), "volk");});
test("volksfest -> volksf", function() {deepEqual( Stem("volksfest"), "volksf");});
test("volkskircheflavio -> volkskircheflavio", function() {deepEqual( Stem("volkskircheflavio"), "volkskircheflavio");});
test("volksliedchen -> volksliedch", function() {deepEqual( Stem("volksliedchen"), "volksliedch");});
test("volkslieder -> volkslied", function() {deepEqual( Stem("volkslieder"), "volkslied");});
test("volksliedes -> volkslied", function() {deepEqual( Stem("volksliedes"), "volkslied");});
test("volkssänger -> volkssang", function() {deepEqual( Stem("volkssänger"), "volkssang");});
test("volksversammlung -> volksversamml", function() {deepEqual( Stem("volksversammlung"), "volksversamml");});
test("volksweisen -> volksweis", function() {deepEqual( Stem("volksweisen"), "volksweis");});
test("voll -> voll", function() {deepEqual( Stem("voll"), "voll");});
test("vollauf -> vollauf", function() {deepEqual( Stem("vollauf"), "vollauf");});
test("vollbart -> vollbart", function() {deepEqual( Stem("vollbart"), "vollbart");});
test("vollbesetzt -> vollbesetzt", function() {deepEqual( Stem("vollbesetzt"), "vollbesetzt");});
test("vollbestand -> vollbestand", function() {deepEqual( Stem("vollbestand"), "vollbestand");});
test("vollbracht -> vollbracht", function() {deepEqual( Stem("vollbracht"), "vollbracht");});
test("vollbrachte -> vollbracht", function() {deepEqual( Stem("vollbrachte"), "vollbracht");});
test("vollbrachten -> vollbracht", function() {deepEqual( Stem("vollbrachten"), "vollbracht");});
test("vollbrachter -> vollbracht", function() {deepEqual( Stem("vollbrachter"), "vollbracht");});
test("vollbrachtes -> vollbracht", function() {deepEqual( Stem("vollbrachtes"), "vollbracht");});
test("vollbringen -> vollbring", function() {deepEqual( Stem("vollbringen"), "vollbring");});
test("vollbringung -> vollbring", function() {deepEqual( Stem("vollbringung"), "vollbring");});
test("volle -> voll", function() {deepEqual( Stem("volle"), "voll");});
test("vollem -> voll", function() {deepEqual( Stem("vollem"), "voll");});
test("vollen -> voll", function() {deepEqual( Stem("vollen"), "voll");});
test("vollenden -> vollend", function() {deepEqual( Stem("vollenden"), "vollend");});
test("vollendet -> vollendet", function() {deepEqual( Stem("vollendet"), "vollendet");});
test("vollendete -> vollendet", function() {deepEqual( Stem("vollendete"), "vollendet");});
test("vollendeten -> vollendet", function() {deepEqual( Stem("vollendeten"), "vollendet");});
test("vollends -> vollend", function() {deepEqual( Stem("vollends"), "vollend");});
test("vollendung -> vollend", function() {deepEqual( Stem("vollendung"), "vollend");});
test("voller -> voll", function() {deepEqual( Stem("voller"), "voll");});
test("völlerei -> vollerei", function() {deepEqual( Stem("völlerei"), "vollerei");});
test("vollführt -> vollfuhrt", function() {deepEqual( Stem("vollführt"), "vollfuhrt");});
test("vollführte -> vollfuhrt", function() {deepEqual( Stem("vollführte"), "vollfuhrt");});
test("vollgepfropften -> vollgepfropft", function() {deepEqual( Stem("vollgepfropften"), "vollgepfropft");});
test("vollgestopft -> vollgestopft", function() {deepEqual( Stem("vollgestopft"), "vollgestopft");});
test("völlig -> vollig", function() {deepEqual( Stem("völlig"), "vollig");});
test("völlige -> vollig", function() {deepEqual( Stem("völlige"), "vollig");});
test("völligem -> vollig", function() {deepEqual( Stem("völligem"), "vollig");});
test("völligen -> vollig", function() {deepEqual( Stem("völligen"), "vollig");});
test("völliger -> vollig", function() {deepEqual( Stem("völliger"), "vollig");});
test("vollkommen -> vollkomm", function() {deepEqual( Stem("vollkommen"), "vollkomm");});
test("vollkommene -> vollkomm", function() {deepEqual( Stem("vollkommene"), "vollkomm");});
test("vollkommenen -> vollkomm", function() {deepEqual( Stem("vollkommenen"), "vollkomm");});
test("vollkommener -> vollkomm", function() {deepEqual( Stem("vollkommener"), "vollkomm");});
test("vollkommenere -> vollkommen", function() {deepEqual( Stem("vollkommenere"), "vollkommen");});
test("vollkommeneren -> vollkommen", function() {deepEqual( Stem("vollkommeneren"), "vollkommen");});
test("vollkommenerer -> vollkommen", function() {deepEqual( Stem("vollkommenerer"), "vollkommen");});
test("vollkommeneres -> vollkommen", function() {deepEqual( Stem("vollkommeneres"), "vollkommen");});
test("vollkommenheit -> vollkomm", function() {deepEqual( Stem("vollkommenheit"), "vollkomm");});
test("vollkommenheiten -> vollkomm", function() {deepEqual( Stem("vollkommenheiten"), "vollkomm");});
test("vollkommenste -> vollkommen", function() {deepEqual( Stem("vollkommenste"), "vollkommen");});
test("vollkommensten -> vollkommen", function() {deepEqual( Stem("vollkommensten"), "vollkommen");});
test("vollmacht -> vollmacht", function() {deepEqual( Stem("vollmacht"), "vollmacht");});
test("vollmond -> vollmond", function() {deepEqual( Stem("vollmond"), "vollmond");});
test("vollständig -> vollstand", function() {deepEqual( Stem("vollständig"), "vollstand");});
test("vollständige -> vollstand", function() {deepEqual( Stem("vollständige"), "vollstand");});
test("vollständigen -> vollstand", function() {deepEqual( Stem("vollständigen"), "vollstand");});
test("vollständiger -> vollstand", function() {deepEqual( Stem("vollständiger"), "vollstand");});
test("vollständiges -> vollstand", function() {deepEqual( Stem("vollständiges"), "vollstand");});
test("vollständigkeit -> vollstand", function() {deepEqual( Stem("vollständigkeit"), "vollstand");});
test("vollsten -> voll", function() {deepEqual( Stem("vollsten"), "voll");});
test("vollster -> voll", function() {deepEqual( Stem("vollster"), "voll");});
test("vollstreckung -> vollstreck", function() {deepEqual( Stem("vollstreckung"), "vollstreck");});
test("vollzählig -> vollzahl", function() {deepEqual( Stem("vollzählig"), "vollzahl");});
test("vollziehend -> vollzieh", function() {deepEqual( Stem("vollziehend"), "vollzieh");});
test("vollziehest -> vollzieh", function() {deepEqual( Stem("vollziehest"), "vollzieh");});
test("vollzogen -> vollzog", function() {deepEqual( Stem("vollzogen"), "vollzog");});
test("vollzupacken -> vollzupack", function() {deepEqual( Stem("vollzupacken"), "vollzupack");});
test("voluntaria -> voluntaria", function() {deepEqual( Stem("voluntaria"), "voluntaria");});
test("voluntarium -> voluntarium", function() {deepEqual( Stem("voluntarium"), "voluntarium");});
test("vom -> vom", function() {deepEqual( Stem("vom"), "vom");});
test("von -> von", function() {deepEqual( Stem("von"), "von");});
test("voneinander -> voneinand", function() {deepEqual( Stem("voneinander"), "voneinand");});
test("vonstatten -> vonstatt", function() {deepEqual( Stem("vonstatten"), "vonstatt");});
test("vor -> vor", function() {deepEqual( Stem("vor"), "vor");});
test("vorabend -> vorab", function() {deepEqual( Stem("vorabend"), "vorab");});
test("vorabendan -> vorabendan", function() {deepEqual( Stem("vorabendan"), "vorabendan");});
test("voran -> voran", function() {deepEqual( Stem("voran"), "voran");});
test("vorangehen -> vorangeh", function() {deepEqual( Stem("vorangehen"), "vorangeh");});
test("vorangeht -> vorangeht", function() {deepEqual( Stem("vorangeht"), "vorangeht");});
test("vorangestellt -> vorangestellt", function() {deepEqual( Stem("vorangestellt"), "vorangestellt");});
test("voranging -> voranging", function() {deepEqual( Stem("voranging"), "voranging");});
test("voranschickung -> voranschick", function() {deepEqual( Stem("voranschickung"), "voranschick");});
test("voranstellte -> voranstellt", function() {deepEqual( Stem("voranstellte"), "voranstellt");});
test("vorantrug -> vorantrug", function() {deepEqual( Stem("vorantrug"), "vorantrug");});
test("voranzuschicken -> voranzuschick", function() {deepEqual( Stem("voranzuschicken"), "voranzuschick");});
test("voraus -> voraus", function() {deepEqual( Stem("voraus"), "voraus");});
test("vorausfliegen -> vorausflieg", function() {deepEqual( Stem("vorausfliegen"), "vorausflieg");});
test("vorausgefahrenen -> vorausgefahr", function() {deepEqual( Stem("vorausgefahrenen"), "vorausgefahr");});
test("vorausgehen -> vorausgeh", function() {deepEqual( Stem("vorausgehen"), "vorausgeh");});
test("vorausgehende -> vorausgeh", function() {deepEqual( Stem("vorausgehende"), "vorausgeh");});
test("vorausgeht -> vorausgeht", function() {deepEqual( Stem("vorausgeht"), "vorausgeht");});
test("vorausgeigen -> vorausgeig", function() {deepEqual( Stem("vorausgeigen"), "vorausgeig");});
test("vorausgesagt -> vorausgesagt", function() {deepEqual( Stem("vorausgesagt"), "vorausgesagt");});
test("vorausgeschickt -> vorausgeschickt", function() {deepEqual( Stem("vorausgeschickt"), "vorausgeschickt");});
test("vorausgeschickten -> vorausgeschickt", function() {deepEqual( Stem("vorausgeschickten"), "vorausgeschickt");});
test("vorausgesehen -> vorausgeseh", function() {deepEqual( Stem("vorausgesehen"), "vorausgeseh");});
test("vorausgesetzt -> vorausgesetzt", function() {deepEqual( Stem("vorausgesetzt"), "vorausgesetzt");});
test("vorausnehmen -> vorausnehm", function() {deepEqual( Stem("vorausnehmen"), "vorausnehm");});
test("voraussah -> voraussah", function() {deepEqual( Stem("voraussah"), "voraussah");});
test("voraussahen -> voraussah", function() {deepEqual( Stem("voraussahen"), "voraussah");});
test("voraussehen -> vorausseh", function() {deepEqual( Stem("voraussehen"), "vorausseh");});
test("voraussetze -> voraussetz", function() {deepEqual( Stem("voraussetze"), "voraussetz");});
test("voraussetzen -> voraussetz", function() {deepEqual( Stem("voraussetzen"), "voraussetz");});
test("voraussetzet -> voraussetzet", function() {deepEqual( Stem("voraussetzet"), "voraussetzet");});
test("voraussetzt -> voraussetzt", function() {deepEqual( Stem("voraussetzt"), "voraussetzt");});
test("voraussetzte -> voraussetzt", function() {deepEqual( Stem("voraussetzte"), "voraussetzt");});
test("voraussetzung -> voraussetz", function() {deepEqual( Stem("voraussetzung"), "voraussetz");});
test("voraussetzungen -> voraussetz", function() {deepEqual( Stem("voraussetzungen"), "voraussetz");});
test("voraussicht -> voraussicht", function() {deepEqual( Stem("voraussicht"), "voraussicht");});
test("voraussichtlich -> voraussicht", function() {deepEqual( Stem("voraussichtlich"), "voraussicht");});
test("vorauswissen -> vorauswiss", function() {deepEqual( Stem("vorauswissen"), "vorauswiss");});
test("vorauszufahren -> vorauszufahr", function() {deepEqual( Stem("vorauszufahren"), "vorauszufahr");});
test("vorauszuschickenden -> vorauszuschick", function() {deepEqual( Stem("vorauszuschickenden"), "vorauszuschick");});
test("vorauszusehen -> vorauszuseh", function() {deepEqual( Stem("vorauszusehen"), "vorauszuseh");});
test("vorauszusetzen -> vorauszusetz", function() {deepEqual( Stem("vorauszusetzen"), "vorauszusetz");});
test("vorbedacht -> vorbedacht", function() {deepEqual( Stem("vorbedacht"), "vorbedacht");});
test("vorbedachten -> vorbedacht", function() {deepEqual( Stem("vorbedachten"), "vorbedacht");});
test("vorbei -> vorbei", function() {deepEqual( Stem("vorbei"), "vorbei");});
test("vorbeigehn -> vorbeigehn", function() {deepEqual( Stem("vorbeigehn"), "vorbeigehn");});
test("vorbeikam -> vorbeikam", function() {deepEqual( Stem("vorbeikam"), "vorbeikam");});
test("vorbeireitens -> vorbeireit", function() {deepEqual( Stem("vorbeireitens"), "vorbeireit");});
test("vorbeistob -> vorbeistob", function() {deepEqual( Stem("vorbeistob"), "vorbeistob");});
test("vorbeizogen -> vorbeizog", function() {deepEqual( Stem("vorbeizogen"), "vorbeizog");});
test("vorbemerkungen -> vorbemerk", function() {deepEqual( Stem("vorbemerkungen"), "vorbemerk");});
test("vorbereitender -> vorbereit", function() {deepEqual( Stem("vorbereitender"), "vorbereit");});
test("vorbereitet -> vorbereitet", function() {deepEqual( Stem("vorbereitet"), "vorbereitet");});
test("vorbereitete -> vorbereitet", function() {deepEqual( Stem("vorbereitete"), "vorbereitet");});
test("vorbereitung -> vorbereit", function() {deepEqual( Stem("vorbereitung"), "vorbereit");});
test("vorbereitungen -> vorbereit", function() {deepEqual( Stem("vorbereitungen"), "vorbereit");});
test("vorberg -> vorberg", function() {deepEqual( Stem("vorberg"), "vorberg");});
test("vorbestimmt -> vorbestimmt", function() {deepEqual( Stem("vorbestimmt"), "vorbestimmt");});
test("vorbeugen -> vorbeug", function() {deepEqual( Stem("vorbeugen"), "vorbeug");});
test("vorbild -> vorbild", function() {deepEqual( Stem("vorbild"), "vorbild");});
test("vorbilde -> vorbild", function() {deepEqual( Stem("vorbilde"), "vorbild");});
test("vorbilden -> vorbild", function() {deepEqual( Stem("vorbilden"), "vorbild");});
test("vorbildende -> vorbild", function() {deepEqual( Stem("vorbildende"), "vorbild");});
test("vorbilder -> vorbild", function() {deepEqual( Stem("vorbilder"), "vorbild");});
test("vorbildern -> vorbild", function() {deepEqual( Stem("vorbildern"), "vorbild");});
test("vorbildet -> vorbildet", function() {deepEqual( Stem("vorbildet"), "vorbildet");});
test("vorbildete -> vorbildet", function() {deepEqual( Stem("vorbildete"), "vorbildet");});
test("vorbildeten -> vorbildet", function() {deepEqual( Stem("vorbildeten"), "vorbildet");});
test("vorbildlich -> vorbild", function() {deepEqual( Stem("vorbildlich"), "vorbild");});
test("vorbildliche -> vorbild", function() {deepEqual( Stem("vorbildliche"), "vorbild");});
test("vorbildlichen -> vorbild", function() {deepEqual( Stem("vorbildlichen"), "vorbild");});
test("vorbildliches -> vorbild", function() {deepEqual( Stem("vorbildliches"), "vorbild");});
test("vorbildung -> vorbild", function() {deepEqual( Stem("vorbildung"), "vorbild");});
test("vorbildungen -> vorbild", function() {deepEqual( Stem("vorbildungen"), "vorbild");});
test("vorbrachte -> vorbracht", function() {deepEqual( Stem("vorbrachte"), "vorbracht");});
test("vorbrechenden -> vorbrech", function() {deepEqual( Stem("vorbrechenden"), "vorbrech");});
test("vorbringen -> vorbring", function() {deepEqual( Stem("vorbringen"), "vorbring");});
test("vordem -> vord", function() {deepEqual( Stem("vordem"), "vord");});
test("vordere -> vord", function() {deepEqual( Stem("vordere"), "vord");});
test("vorderen -> vord", function() {deepEqual( Stem("vorderen"), "vord");});
test("vordergrund -> vordergrund", function() {deepEqual( Stem("vordergrund"), "vordergrund");});
test("vorderhand -> vorderhand", function() {deepEqual( Stem("vorderhand"), "vorderhand");});
test("vorderkrällchen -> vorderkrallch", function() {deepEqual( Stem("vorderkrällchen"), "vorderkrallch");});
test("vorderriss -> vorderriss", function() {deepEqual( Stem("vorderriss"), "vorderriss");});
test("vordersten -> vorderst", function() {deepEqual( Stem("vordersten"), "vorderst");});
test("vorderster -> vorderst", function() {deepEqual( Stem("vorderster"), "vorderst");});
test("vordringen -> vordring", function() {deepEqual( Stem("vordringen"), "vordring");});
test("voreilig -> voreil", function() {deepEqual( Stem("voreilig"), "voreil");});
test("voreiligen -> voreil", function() {deepEqual( Stem("voreiligen"), "voreil");});
test("voreinander -> voreinand", function() {deepEqual( Stem("voreinander"), "voreinand");});
test("voreingenommenheit -> voreingenomm", function() {deepEqual( Stem("voreingenommenheit"), "voreingenomm");});
test("voreltern -> vorelt", function() {deepEqual( Stem("voreltern"), "vorelt");});
test("vorenthalten -> vorenthalt", function() {deepEqual( Stem("vorenthalten"), "vorenthalt");});
test("vorenthielt -> vorenthielt", function() {deepEqual( Stem("vorenthielt"), "vorenthielt");});
test("vorerst -> vorerst", function() {deepEqual( Stem("vorerst"), "vorerst");});
test("vorfahren -> vorfahr", function() {deepEqual( Stem("vorfahren"), "vorfahr");});
test("vorfall -> vorfall", function() {deepEqual( Stem("vorfall"), "vorfall");});
test("vorfalle -> vorfall", function() {deepEqual( Stem("vorfalle"), "vorfall");});
test("vorfälle -> vorfall", function() {deepEqual( Stem("vorfälle"), "vorfall");});
test("vorfalles -> vorfall", function() {deepEqual( Stem("vorfalles"), "vorfall");});
test("vorfand -> vorfand", function() {deepEqual( Stem("vorfand"), "vorfand");});
test("vorfiel -> vorfiel", function() {deepEqual( Stem("vorfiel"), "vorfiel");});
test("vorfielen -> vorfiel", function() {deepEqual( Stem("vorfielen"), "vorfiel");});
test("vorfinden -> vorfind", function() {deepEqual( Stem("vorfinden"), "vorfind");});
test("vorfindet -> vorfindet", function() {deepEqual( Stem("vorfindet"), "vorfindet");});
test("vorg -> vorg", function() {deepEqual( Stem("vorg"), "vorg");});
test("vorgab -> vorgab", function() {deepEqual( Stem("vorgab"), "vorgab");});
test("vorgang -> vorgang", function() {deepEqual( Stem("vorgang"), "vorgang");});
test("vorgänger -> vorgang", function() {deepEqual( Stem("vorgänger"), "vorgang");});
test("vorganges -> vorgang", function() {deepEqual( Stem("vorganges"), "vorgang");});
test("vorgeben -> vorgeb", function() {deepEqual( Stem("vorgeben"), "vorgeb");});
test("vorgebeugt -> vorgebeugt", function() {deepEqual( Stem("vorgebeugt"), "vorgebeugt");});
test("vorgebildet -> vorgebildet", function() {deepEqual( Stem("vorgebildet"), "vorgebildet");});
test("vorgebildete -> vorgebildet", function() {deepEqual( Stem("vorgebildete"), "vorgebildet");});
test("vorgebildeten -> vorgebildet", function() {deepEqual( Stem("vorgebildeten"), "vorgebildet");});
test("vorgebogenem -> vorgebog", function() {deepEqual( Stem("vorgebogenem"), "vorgebog");});
test("vorgebracht -> vorgebracht", function() {deepEqual( Stem("vorgebracht"), "vorgebracht");});
test("vorgebrachten -> vorgebracht", function() {deepEqual( Stem("vorgebrachten"), "vorgebracht");});
test("vorgefahren -> vorgefahr", function() {deepEqual( Stem("vorgefahren"), "vorgefahr");});
test("vorgefassten -> vorgefasst", function() {deepEqual( Stem("vorgefassten"), "vorgefasst");});
test("vorgefaßten -> vorgefasst", function() {deepEqual( Stem("vorgefaßten"), "vorgefasst");});
test("vorgefühl -> vorgefuhl", function() {deepEqual( Stem("vorgefühl"), "vorgefuhl");});
test("vorgegangen -> vorgegang", function() {deepEqual( Stem("vorgegangen"), "vorgegang");});
test("vorgehalten -> vorgehalt", function() {deepEqual( Stem("vorgehalten"), "vorgehalt");});
test("vorgehe -> vorgeh", function() {deepEqual( Stem("vorgehe"), "vorgeh");});
test("vorgehen -> vorgeh", function() {deepEqual( Stem("vorgehen"), "vorgeh");});
test("vorgehenden -> vorgeh", function() {deepEqual( Stem("vorgehenden"), "vorgeh");});
test("vorgeht -> vorgeht", function() {deepEqual( Stem("vorgeht"), "vorgeht");});
test("vorgeladen -> vorgelad", function() {deepEqual( Stem("vorgeladen"), "vorgelad");});
test("vorgelassen -> vorgelass", function() {deepEqual( Stem("vorgelassen"), "vorgelass");});
test("vorgelegt -> vorgelegt", function() {deepEqual( Stem("vorgelegt"), "vorgelegt");});
test("vorgelegten -> vorgelegt", function() {deepEqual( Stem("vorgelegten"), "vorgelegt");});
test("vorgemacht -> vorgemacht", function() {deepEqual( Stem("vorgemacht"), "vorgemacht");});
test("vorgenommen -> vorgenomm", function() {deepEqual( Stem("vorgenommen"), "vorgenomm");});
test("vorgenommene -> vorgenomm", function() {deepEqual( Stem("vorgenommene"), "vorgenomm");});
test("vorgerückt -> vorgeruckt", function() {deepEqual( Stem("vorgerückt"), "vorgeruckt");});
test("vorgerückteren -> vorgeruckt", function() {deepEqual( Stem("vorgerückteren"), "vorgeruckt");});
test("vorgesagt -> vorgesagt", function() {deepEqual( Stem("vorgesagt"), "vorgesagt");});
test("vorgeschlagen -> vorgeschlag", function() {deepEqual( Stem("vorgeschlagen"), "vorgeschlag");});
test("vorgeschoben -> vorgeschob", function() {deepEqual( Stem("vorgeschoben"), "vorgeschob");});
test("vorgeschrieben -> vorgeschrieb", function() {deepEqual( Stem("vorgeschrieben"), "vorgeschrieb");});
test("vorgeschriebene -> vorgeschrieb", function() {deepEqual( Stem("vorgeschriebene"), "vorgeschrieb");});
test("vorgesehen -> vorgeseh", function() {deepEqual( Stem("vorgesehen"), "vorgeseh");});
test("vorgesehene -> vorgeseh", function() {deepEqual( Stem("vorgesehene"), "vorgeseh");});
test("vorgesetzt -> vorgesetzt", function() {deepEqual( Stem("vorgesetzt"), "vorgesetzt");});
test("vorgesetzte -> vorgesetzt", function() {deepEqual( Stem("vorgesetzte"), "vorgesetzt");});
test("vorgesetzten -> vorgesetzt", function() {deepEqual( Stem("vorgesetzten"), "vorgesetzt");});
test("vorgesetzter -> vorgesetzt", function() {deepEqual( Stem("vorgesetzter"), "vorgesetzt");});
test("vorgesetztes -> vorgesetzt", function() {deepEqual( Stem("vorgesetztes"), "vorgesetzt");});
test("vorgesteckt -> vorgesteckt", function() {deepEqual( Stem("vorgesteckt"), "vorgesteckt");});
test("vorgestellet -> vorgestellet", function() {deepEqual( Stem("vorgestellet"), "vorgestellet");});
test("vorgestellt -> vorgestellt", function() {deepEqual( Stem("vorgestellt"), "vorgestellt");});
test("vorgestern -> vorg", function() {deepEqual( Stem("vorgestern"), "vorg");});
test("vorgestreckten -> vorgestreckt", function() {deepEqual( Stem("vorgestreckten"), "vorgestreckt");});
test("vorgetragen -> vorgetrag", function() {deepEqual( Stem("vorgetragen"), "vorgetrag");});
test("vorgezogen -> vorgezog", function() {deepEqual( Stem("vorgezogen"), "vorgezog");});
test("vorgezogene -> vorgezog", function() {deepEqual( Stem("vorgezogene"), "vorgezog");});
test("vorging -> vorging", function() {deepEqual( Stem("vorging"), "vorging");});
test("vorhabe -> vorhab", function() {deepEqual( Stem("vorhabe"), "vorhab");});
test("vorhaben -> vorhab", function() {deepEqual( Stem("vorhaben"), "vorhab");});
test("vorhabenden -> vorhab", function() {deepEqual( Stem("vorhabenden"), "vorhab");});
test("vorhalle -> vorhall", function() {deepEqual( Stem("vorhalle"), "vorhall");});
test("vorhält -> vorhalt", function() {deepEqual( Stem("vorhält"), "vorhalt");});
test("vorhalten -> vorhalt", function() {deepEqual( Stem("vorhalten"), "vorhalt");});
test("vorhanden -> vorhand", function() {deepEqual( Stem("vorhanden"), "vorhand");});
test("vorhandenen -> vorhand", function() {deepEqual( Stem("vorhandenen"), "vorhand");});
test("vorhang -> vorhang", function() {deepEqual( Stem("vorhang"), "vorhang");});
test("vorhänge -> vorhang", function() {deepEqual( Stem("vorhänge"), "vorhang");});
test("vorhangs -> vorhang", function() {deepEqual( Stem("vorhangs"), "vorhang");});
test("vorhast -> vorhast", function() {deepEqual( Stem("vorhast"), "vorhast");});
test("vorhat -> vorhat", function() {deepEqual( Stem("vorhat"), "vorhat");});
test("vorhatte -> vorhatt", function() {deepEqual( Stem("vorhatte"), "vorhatt");});
test("vorhatten -> vorhatt", function() {deepEqual( Stem("vorhatten"), "vorhatt");});
test("vorhaut -> vorhaut", function() {deepEqual( Stem("vorhaut"), "vorhaut");});
test("vorhemdchen -> vorhemdch", function() {deepEqual( Stem("vorhemdchen"), "vorhemdch");});
test("vorhemden -> vorhemd", function() {deepEqual( Stem("vorhemden"), "vorhemd");});
test("vorher -> vorh", function() {deepEqual( Stem("vorher"), "vorh");});
test("vorherbestimmt -> vorherbestimmt", function() {deepEqual( Stem("vorherbestimmt"), "vorherbestimmt");});
test("vorherbestimmten -> vorherbestimmt", function() {deepEqual( Stem("vorherbestimmten"), "vorherbestimmt");});
test("vorherbestimmung -> vorherbestimm", function() {deepEqual( Stem("vorherbestimmung"), "vorherbestimm");});
test("vorhergegangen -> vorhergegang", function() {deepEqual( Stem("vorhergegangen"), "vorhergegang");});
test("vorhergehen -> vorhergeh", function() {deepEqual( Stem("vorhergehen"), "vorhergeh");});
test("vorhergehend -> vorhergeh", function() {deepEqual( Stem("vorhergehend"), "vorhergeh");});
test("vorhergehende -> vorhergeh", function() {deepEqual( Stem("vorhergehende"), "vorhergeh");});
test("vorhergehenden -> vorhergeh", function() {deepEqual( Stem("vorhergehenden"), "vorhergeh");});
test("vorhergehendes -> vorhergeh", function() {deepEqual( Stem("vorhergehendes"), "vorhergeh");});
test("vorhergehn -> vorhergehn", function() {deepEqual( Stem("vorhergehn"), "vorhergehn");});
test("vorhergeht -> vorhergeht", function() {deepEqual( Stem("vorhergeht"), "vorhergeht");});
test("vorhergenannten -> vorhergenannt", function() {deepEqual( Stem("vorhergenannten"), "vorhergenannt");});
test("vorhergesagt -> vorhergesagt", function() {deepEqual( Stem("vorhergesagt"), "vorhergesagt");});
test("vorhergesehen -> vorhergeseh", function() {deepEqual( Stem("vorhergesehen"), "vorhergeseh");});
test("vorherging -> vorherging", function() {deepEqual( Stem("vorherging"), "vorherging");});
test("vorherigen -> vorher", function() {deepEqual( Stem("vorherigen"), "vorher");});
test("vorherrschaft -> vorherrschaft", function() {deepEqual( Stem("vorherrschaft"), "vorherrschaft");});
test("vorherrschende -> vorherrsch", function() {deepEqual( Stem("vorherrschende"), "vorherrsch");});
test("vorherrscht -> vorherrscht", function() {deepEqual( Stem("vorherrscht"), "vorherrscht");});
test("vorhersage -> vorhersag", function() {deepEqual( Stem("vorhersage"), "vorhersag");});
test("vorhersah -> vorhersah", function() {deepEqual( Stem("vorhersah"), "vorhersah");});
test("vorhersehe -> vorherseh", function() {deepEqual( Stem("vorhersehe"), "vorherseh");});
test("vorhersehen -> vorherseh", function() {deepEqual( Stem("vorhersehen"), "vorherseh");});
test("vorhersehung -> vorherseh", function() {deepEqual( Stem("vorhersehung"), "vorherseh");});
test("vorhersieht -> vorhersieht", function() {deepEqual( Stem("vorhersieht"), "vorhersieht");});
test("vorherverkündigung -> vorherverkund", function() {deepEqual( Stem("vorherverkündigung"), "vorherverkund");});
test("vorhielte -> vorhielt", function() {deepEqual( Stem("vorhielte"), "vorhielt");});
test("vorhin -> vorhin", function() {deepEqual( Stem("vorhin"), "vorhin");});
test("vorhof -> vorhof", function() {deepEqual( Stem("vorhof"), "vorhof");});
test("vorhöfe -> vorhof", function() {deepEqual( Stem("vorhöfe"), "vorhof");});
test("vorhöfen -> vorhof", function() {deepEqual( Stem("vorhöfen"), "vorhof");});
test("vorhofes -> vorhof", function() {deepEqual( Stem("vorhofes"), "vorhof");});
test("vorhofs -> vorhof", function() {deepEqual( Stem("vorhofs"), "vorhof");});
test("vorige -> vorig", function() {deepEqual( Stem("vorige"), "vorig");});
test("vorigen -> vorig", function() {deepEqual( Stem("vorigen"), "vorig");});
test("voriger -> vorig", function() {deepEqual( Stem("voriger"), "vorig");});
test("vorkam -> vorkam", function() {deepEqual( Stem("vorkam"), "vorkam");});
test("vorkamen -> vorkam", function() {deepEqual( Stem("vorkamen"), "vorkam");});
test("vorkomme -> vorkomm", function() {deepEqual( Stem("vorkomme"), "vorkomm");});
test("vorkommen -> vorkomm", function() {deepEqual( Stem("vorkommen"), "vorkomm");});
test("vorkommenden -> vorkomm", function() {deepEqual( Stem("vorkommenden"), "vorkomm");});
test("vorkommendenfalls -> vorkommendenfall", function() {deepEqual( Stem("vorkommendenfalls"), "vorkommendenfall");});
test("vorkommt -> vorkommt", function() {deepEqual( Stem("vorkommt"), "vorkommt");});
test("vorläßt -> vorlasst", function() {deepEqual( Stem("vorläßt"), "vorlasst");});
test("vorläufer -> vorlauf", function() {deepEqual( Stem("vorläufer"), "vorlauf");});
test("vorläufererfahrungen -> vorlaufererfahr", function() {deepEqual( Stem("vorläufererfahrungen"), "vorlaufererfahr");});
test("vorläufig -> vorlauf", function() {deepEqual( Stem("vorläufig"), "vorlauf");});
test("vorläufigen -> vorlauf", function() {deepEqual( Stem("vorläufigen"), "vorlauf");});
test("vorlaut -> vorlaut", function() {deepEqual( Stem("vorlaut"), "vorlaut");});
test("vorlegen -> vorleg", function() {deepEqual( Stem("vorlegen"), "vorleg");});
test("vorlegung -> vorleg", function() {deepEqual( Stem("vorlegung"), "vorleg");});
test("vorlesen -> vorles", function() {deepEqual( Stem("vorlesen"), "vorles");});
test("vorlesung -> vorles", function() {deepEqual( Stem("vorlesung"), "vorles");});
test("vorlieb -> vorlieb", function() {deepEqual( Stem("vorlieb"), "vorlieb");});
test("vorliebe -> vorlieb", function() {deepEqual( Stem("vorliebe"), "vorlieb");});
test("vorliegenden -> vorlieg", function() {deepEqual( Stem("vorliegenden"), "vorlieg");});
test("vorliegt -> vorliegt", function() {deepEqual( Stem("vorliegt"), "vorliegt");});
test("vormachen -> vormach", function() {deepEqual( Stem("vormachen"), "vormach");});
test("vormachte -> vormacht", function() {deepEqual( Stem("vormachte"), "vormacht");});
test("vormals -> vormal", function() {deepEqual( Stem("vormals"), "vormal");});
test("vormittag -> vormittag", function() {deepEqual( Stem("vormittag"), "vormittag");});
test("vormittags -> vormittag", function() {deepEqual( Stem("vormittags"), "vormittag");});
test("vormittagsarbeit -> vormittagsarbeit", function() {deepEqual( Stem("vormittagsarbeit"), "vormittagsarbeit");});
test("vormittagsimbiss -> vormittagsimbiss", function() {deepEqual( Stem("vormittagsimbiss"), "vormittagsimbiss");});
test("vormittagsstunden -> vormittagsstund", function() {deepEqual( Stem("vormittagsstunden"), "vormittagsstund");});
test("vormöge -> vormog", function() {deepEqual( Stem("vormöge"), "vormog");});
test("vormund -> vormund", function() {deepEqual( Stem("vormund"), "vormund");});
test("vormünder -> vormund", function() {deepEqual( Stem("vormünder"), "vormund");});
test("vormundschaftliche -> vormundschaft", function() {deepEqual( Stem("vormundschaftliche"), "vormundschaft");});
test("vorn -> vorn", function() {deepEqual( Stem("vorn"), "vorn");});
test("vornahm -> vornahm", function() {deepEqual( Stem("vornahm"), "vornahm");});
test("vorne -> vorn", function() {deepEqual( Stem("vorne"), "vorn");});
test("vorneherein -> vorneherein", function() {deepEqual( Stem("vorneherein"), "vorneherein");});
test("vornehm -> vornehm", function() {deepEqual( Stem("vornehm"), "vornehm");});
test("vornehme -> vornehm", function() {deepEqual( Stem("vornehme"), "vornehm");});
test("vornehmen -> vornehm", function() {deepEqual( Stem("vornehmen"), "vornehm");});
test("vornehmer -> vornehm", function() {deepEqual( Stem("vornehmer"), "vornehm");});
test("vornehmes -> vornehm", function() {deepEqual( Stem("vornehmes"), "vornehm");});
test("vornehmheit -> vornehm", function() {deepEqual( Stem("vornehmheit"), "vornehm");});
test("vornehmlich -> vornehm", function() {deepEqual( Stem("vornehmlich"), "vornehm");});
test("vornehmste -> vornehm", function() {deepEqual( Stem("vornehmste"), "vornehm");});
test("vornehmsten -> vornehm", function() {deepEqual( Stem("vornehmsten"), "vornehm");});
test("vornherein -> vornherein", function() {deepEqual( Stem("vornherein"), "vornherein");});
test("vornüber -> vornub", function() {deepEqual( Stem("vornüber"), "vornub");});
test("vorort -> vorort", function() {deepEqual( Stem("vorort"), "vorort");});
test("vorragendste -> vorrag", function() {deepEqual( Stem("vorragendste"), "vorrag");});
test("vorrang -> vorrang", function() {deepEqual( Stem("vorrang"), "vorrang");});
test("vorrat -> vorrat", function() {deepEqual( Stem("vorrat"), "vorrat");});
test("vorräte -> vorrat", function() {deepEqual( Stem("vorräte"), "vorrat");});
test("vorratshause -> vorratshaus", function() {deepEqual( Stem("vorratshause"), "vorratshaus");});
test("vorratshäuser -> vorratshaus", function() {deepEqual( Stem("vorratshäuser"), "vorratshaus");});
test("vorratshäusern -> vorratshaus", function() {deepEqual( Stem("vorratshäusern"), "vorratshaus");});
test("vorratslager -> vorratslag", function() {deepEqual( Stem("vorratslager"), "vorratslag");});
test("vorraum -> vorraum", function() {deepEqual( Stem("vorraum"), "vorraum");});
test("vorrecht -> vorrecht", function() {deepEqual( Stem("vorrecht"), "vorrecht");});
test("vorrechte -> vorrecht", function() {deepEqual( Stem("vorrechte"), "vorrecht");});
test("vorrede -> vorred", function() {deepEqual( Stem("vorrede"), "vorred");});
test("vorrichtungen -> vorricht", function() {deepEqual( Stem("vorrichtungen"), "vorricht");});
test("vors -> vor", function() {deepEqual( Stem("vors"), "vor");});
test("vorsagen -> vorsag", function() {deepEqual( Stem("vorsagen"), "vorsag");});
test("vorsagte -> vorsagt", function() {deepEqual( Stem("vorsagte"), "vorsagt");});
test("vorsatz -> vorsatz", function() {deepEqual( Stem("vorsatz"), "vorsatz");});
test("vorsatze -> vorsatz", function() {deepEqual( Stem("vorsatze"), "vorsatz");});
test("vorsätzlich -> vorsatz", function() {deepEqual( Stem("vorsätzlich"), "vorsatz");});
test("vorsätzliche -> vorsatz", function() {deepEqual( Stem("vorsätzliche"), "vorsatz");});
test("vorschein -> vorschein", function() {deepEqual( Stem("vorschein"), "vorschein");});
test("vorschlag -> vorschlag", function() {deepEqual( Stem("vorschlag"), "vorschlag");});
test("vorschläge -> vorschlag", function() {deepEqual( Stem("vorschläge"), "vorschlag");});
test("vorschlagen -> vorschlag", function() {deepEqual( Stem("vorschlagen"), "vorschlag");});
test("vorschlug -> vorschlug", function() {deepEqual( Stem("vorschlug"), "vorschlug");});
test("vorschneider -> vorschneid", function() {deepEqual( Stem("vorschneider"), "vorschneid");});
test("vorschreibt -> vorschreibt", function() {deepEqual( Stem("vorschreibt"), "vorschreibt");});
test("vorschrift -> vorschrift", function() {deepEqual( Stem("vorschrift"), "vorschrift");});
test("vorschriften -> vorschrift", function() {deepEqual( Stem("vorschriften"), "vorschrift");});
test("vorschub -> vorschub", function() {deepEqual( Stem("vorschub"), "vorschub");});
test("vorschulalter -> vorschulalt", function() {deepEqual( Stem("vorschulalter"), "vorschulalt");});
test("vorschule -> vorschul", function() {deepEqual( Stem("vorschule"), "vorschul");});
test("vorschussmilliarde -> vorschussmilliard", function() {deepEqual( Stem("vorschussmilliarde"), "vorschussmilliard");});
test("vorschützen -> vorschutz", function() {deepEqual( Stem("vorschützen"), "vorschutz");});
test("vorsehen -> vorseh", function() {deepEqual( Stem("vorsehen"), "vorseh");});
test("vorsehung -> vorseh", function() {deepEqual( Stem("vorsehung"), "vorseh");});
test("vorsetzen -> vorsetz", function() {deepEqual( Stem("vorsetzen"), "vorsetz");});
test("vorsetzlich -> vorsetz", function() {deepEqual( Stem("vorsetzlich"), "vorsetz");});
test("vorsetzt -> vorsetzt", function() {deepEqual( Stem("vorsetzt"), "vorsetzt");});
test("vorsetzte -> vorsetzt", function() {deepEqual( Stem("vorsetzte"), "vorsetzt");});
test("vorsicht -> vorsicht", function() {deepEqual( Stem("vorsicht"), "vorsicht");});
test("vorsichtig -> vorsicht", function() {deepEqual( Stem("vorsichtig"), "vorsicht");});
test("vorsichtigem -> vorsicht", function() {deepEqual( Stem("vorsichtigem"), "vorsicht");});
test("vorsichtiger -> vorsicht", function() {deepEqual( Stem("vorsichtiger"), "vorsicht");});
test("vorsieht -> vorsieht", function() {deepEqual( Stem("vorsieht"), "vorsieht");});
test("vorsingen -> vorsing", function() {deepEqual( Stem("vorsingen"), "vorsing");});
test("vorsitz -> vorsitz", function() {deepEqual( Stem("vorsitz"), "vorsitz");});
test("vorsitze -> vorsitz", function() {deepEqual( Stem("vorsitze"), "vorsitz");});
test("vorsitzender -> vorsitz", function() {deepEqual( Stem("vorsitzender"), "vorsitz");});
test("vorsorge -> vorsorg", function() {deepEqual( Stem("vorsorge"), "vorsorg");});
test("vorspannt -> vorspannt", function() {deepEqual( Stem("vorspannt"), "vorspannt");});
test("vorspiegelungen -> vorspiegel", function() {deepEqual( Stem("vorspiegelungen"), "vorspiegel");});
test("vorspiel -> vorspiel", function() {deepEqual( Stem("vorspiel"), "vorspiel");});
test("vorsprung -> vorsprung", function() {deepEqual( Stem("vorsprung"), "vorsprung");});
test("vorstadt -> vorstadt", function() {deepEqual( Stem("vorstadt"), "vorstadt");});
test("vorstadtstrasse -> vorstadtstrass", function() {deepEqual( Stem("vorstadtstrasse"), "vorstadtstrass");});
test("vorstadtstraße -> vorstadtstrass", function() {deepEqual( Stem("vorstadtstraße"), "vorstadtstrass");});
test("vorstand -> vorstand", function() {deepEqual( Stem("vorstand"), "vorstand");});
test("vorstandes -> vorstand", function() {deepEqual( Stem("vorstandes"), "vorstand");});
test("vorstehenden -> vorsteh", function() {deepEqual( Stem("vorstehenden"), "vorsteh");});
test("vorsteherin -> vorsteherin", function() {deepEqual( Stem("vorsteherin"), "vorsteherin");});
test("vorstelle -> vorstell", function() {deepEqual( Stem("vorstelle"), "vorstell");});
test("vorstellen -> vorstell", function() {deepEqual( Stem("vorstellen"), "vorstell");});
test("vorstellend -> vorstell", function() {deepEqual( Stem("vorstellend"), "vorstell");});
test("vorstelleten -> vorstellet", function() {deepEqual( Stem("vorstelleten"), "vorstellet");});
test("vorstellte -> vorstellt", function() {deepEqual( Stem("vorstellte"), "vorstellt");});
test("vorstellten -> vorstellt", function() {deepEqual( Stem("vorstellten"), "vorstellt");});
test("vorstellung -> vorstell", function() {deepEqual( Stem("vorstellung"), "vorstell");});
test("vorstellungen -> vorstell", function() {deepEqual( Stem("vorstellungen"), "vorstell");});
test("vorstellungsart -> vorstellungsart", function() {deepEqual( Stem("vorstellungsart"), "vorstellungsart");});
test("vorstellungsweise -> vorstellungsweis", function() {deepEqual( Stem("vorstellungsweise"), "vorstellungsweis");});
test("vorsündflutlichen -> vorsundflut", function() {deepEqual( Stem("vorsündflutlichen"), "vorsundflut");});
test("vorteil -> vorteil", function() {deepEqual( Stem("vorteil"), "vorteil");});
test("vorteile -> vorteil", function() {deepEqual( Stem("vorteile"), "vorteil");});
test("vorteilen -> vorteil", function() {deepEqual( Stem("vorteilen"), "vorteil");});
test("vorteilhaft -> vorteilhaft", function() {deepEqual( Stem("vorteilhaft"), "vorteilhaft");});
test("vorteilhaften -> vorteilhaft", function() {deepEqual( Stem("vorteilhaften"), "vorteilhaft");});
test("vorteilhaftes -> vorteilhaft", function() {deepEqual( Stem("vorteilhaftes"), "vorteilhaft");});
test("vorteilhaftesten -> vorteilhaft", function() {deepEqual( Stem("vorteilhaftesten"), "vorteilhaft");});
test("vorteils -> vorteil", function() {deepEqual( Stem("vorteils"), "vorteil");});
test("vortrag -> vortrag", function() {deepEqual( Stem("vortrag"), "vortrag");});
test("vortrage -> vortrag", function() {deepEqual( Stem("vortrage"), "vortrag");});
test("vorträge -> vortrag", function() {deepEqual( Stem("vorträge"), "vortrag");});
test("vortragen -> vortrag", function() {deepEqual( Stem("vortragen"), "vortrag");});
test("vorträgen -> vortrag", function() {deepEqual( Stem("vorträgen"), "vortrag");});
test("vorträgt -> vortragt", function() {deepEqual( Stem("vorträgt"), "vortragt");});
test("vortrefflich -> vortreff", function() {deepEqual( Stem("vortrefflich"), "vortreff");});
test("vortreffliche -> vortreff", function() {deepEqual( Stem("vortreffliche"), "vortreff");});
test("vortrefflichen -> vortreff", function() {deepEqual( Stem("vortrefflichen"), "vortreff");});
test("vortrefflicher -> vortreff", function() {deepEqual( Stem("vortrefflicher"), "vortreff");});
test("vortrefflichkeit -> vortreff", function() {deepEqual( Stem("vortrefflichkeit"), "vortreff");});
test("vortrefflichste -> vortreff", function() {deepEqual( Stem("vortrefflichste"), "vortreff");});
test("vortritt -> vortritt", function() {deepEqual( Stem("vortritt"), "vortritt");});
test("vortrug -> vortrug", function() {deepEqual( Stem("vortrug"), "vortrug");});
test("vortuch -> vortuch", function() {deepEqual( Stem("vortuch"), "vortuch");});
test("vortuchbandeln -> vortuchbandeln", function() {deepEqual( Stem("vortuchbandeln"), "vortuchbandeln");});
test("vorüber -> vorub", function() {deepEqual( Stem("vorüber"), "vorub");});
test("vorüberdrehte -> voruberdreht", function() {deepEqual( Stem("vorüberdrehte"), "voruberdreht");});
test("vorübergegangen -> vorubergegang", function() {deepEqual( Stem("vorübergegangen"), "vorubergegang");});
test("vorübergehen -> vorubergeh", function() {deepEqual( Stem("vorübergehen"), "vorubergeh");});
test("vorübergehend -> vorubergeh", function() {deepEqual( Stem("vorübergehend"), "vorubergeh");});
test("vorübergehenden -> vorubergeh", function() {deepEqual( Stem("vorübergehenden"), "vorubergeh");});
test("vorübergehendste -> vorubergeh", function() {deepEqual( Stem("vorübergehendste"), "vorubergeh");});
test("vorübergeht -> vorubergeht", function() {deepEqual( Stem("vorübergeht"), "vorubergeht");});
test("vorüberging -> voruberging", function() {deepEqual( Stem("vorüberging"), "voruberging");});
test("vorübergingen -> voruberging", function() {deepEqual( Stem("vorübergingen"), "voruberging");});
test("vorüberkam -> voruberkam", function() {deepEqual( Stem("vorüberkam"), "voruberkam");});
test("vorüberkamen -> voruberkam", function() {deepEqual( Stem("vorüberkamen"), "voruberkam");});
test("vorüberlässt -> voruberlasst", function() {deepEqual( Stem("vorüberlässt"), "voruberlasst");});
test("vorüberreiten -> voruberreit", function() {deepEqual( Stem("vorüberreiten"), "voruberreit");});
test("vorüberschwebte -> voruberschwebt", function() {deepEqual( Stem("vorüberschwebte"), "voruberschwebt");});
test("vorüberwallte -> voruberwallt", function() {deepEqual( Stem("vorüberwallte"), "voruberwallt");});
test("vorüberwehen -> voruberweh", function() {deepEqual( Stem("vorüberwehen"), "voruberweh");});
test("vorüberzieht -> voruberzieht", function() {deepEqual( Stem("vorüberzieht"), "voruberzieht");});
test("vorurteilen -> vorurteil", function() {deepEqual( Stem("vorurteilen"), "vorurteil");});
test("vorverhandlungen -> vorverhandl", function() {deepEqual( Stem("vorverhandlungen"), "vorverhandl");});
test("vorversammlungen -> vorversamml", function() {deepEqual( Stem("vorversammlungen"), "vorversamml");});
test("vorwalten -> vorwalt", function() {deepEqual( Stem("vorwalten"), "vorwalt");});
test("vorwaltender -> vorwalt", function() {deepEqual( Stem("vorwaltender"), "vorwalt");});
test("vorwaltet -> vorwaltet", function() {deepEqual( Stem("vorwaltet"), "vorwaltet");});
test("vorwand -> vorwand", function() {deepEqual( Stem("vorwand"), "vorwand");});
test("vorwärts -> vorwart", function() {deepEqual( Stem("vorwärts"), "vorwart");});
test("vorwärtsgehen -> vorwartsgeh", function() {deepEqual( Stem("vorwärtsgehen"), "vorwartsgeh");});
test("vorwärtszukommen -> vorwartszukomm", function() {deepEqual( Stem("vorwärtszukommen"), "vorwartszukomm");});
test("vorwegstiehlt -> vorwegstiehlt", function() {deepEqual( Stem("vorwegstiehlt"), "vorwegstiehlt");});
test("vorweihnachtlichen -> vorweihnacht", function() {deepEqual( Stem("vorweihnachtlichen"), "vorweihnacht");});
test("vorweisen -> vorweis", function() {deepEqual( Stem("vorweisen"), "vorweis");});
test("vorwelt -> vorwelt", function() {deepEqual( Stem("vorwelt"), "vorwelt");});
test("vorwerfen -> vorwerf", function() {deepEqual( Stem("vorwerfen"), "vorwerf");});
test("vorwiegend -> vorwieg", function() {deepEqual( Stem("vorwiegend"), "vorwieg");});
test("vorwort -> vorwort", function() {deepEqual( Stem("vorwort"), "vorwort");});
test("vorwurf -> vorwurf", function() {deepEqual( Stem("vorwurf"), "vorwurf");});
test("vorwürfe -> vorwurf", function() {deepEqual( Stem("vorwürfe"), "vorwurf");});
test("vorwürfen -> vorwurf", function() {deepEqual( Stem("vorwürfen"), "vorwurf");});
test("vorzeichen -> vorzeich", function() {deepEqual( Stem("vorzeichen"), "vorzeich");});
test("vorzeichnung -> vorzeichn", function() {deepEqual( Stem("vorzeichnung"), "vorzeichn");});
test("vorzeit -> vorzeit", function() {deepEqual( Stem("vorzeit"), "vorzeit");});
test("vorziehen -> vorzieh", function() {deepEqual( Stem("vorziehen"), "vorzieh");});
test("vorzieht -> vorzieht", function() {deepEqual( Stem("vorzieht"), "vorzieht");});
test("vorzimmer -> vorzimm", function() {deepEqual( Stem("vorzimmer"), "vorzimm");});
test("vorzimmern -> vorzimm", function() {deepEqual( Stem("vorzimmern"), "vorzimm");});
test("vorzimmers -> vorzimm", function() {deepEqual( Stem("vorzimmers"), "vorzimm");});
test("vorzog -> vorzog", function() {deepEqual( Stem("vorzog"), "vorzog");});
test("vorzogen -> vorzog", function() {deepEqual( Stem("vorzogen"), "vorzog");});
test("vorzubereiten -> vorzubereit", function() {deepEqual( Stem("vorzubereiten"), "vorzubereit");});
test("vorzubilden -> vorzubild", function() {deepEqual( Stem("vorzubilden"), "vorzubild");});
test("vorzubringen -> vorzubring", function() {deepEqual( Stem("vorzubringen"), "vorzubring");});
test("vorzufliegen -> vorzuflieg", function() {deepEqual( Stem("vorzufliegen"), "vorzuflieg");});
test("vorzug -> vorzug", function() {deepEqual( Stem("vorzug"), "vorzug");});
test("vorzuge -> vorzug", function() {deepEqual( Stem("vorzuge"), "vorzug");});
test("vorzüge -> vorzug", function() {deepEqual( Stem("vorzüge"), "vorzug");});
test("vorzugeben -> vorzugeb", function() {deepEqual( Stem("vorzugeben"), "vorzugeb");});
test("vorzügen -> vorzug", function() {deepEqual( Stem("vorzügen"), "vorzug");});
test("vorzuges -> vorzug", function() {deepEqual( Stem("vorzuges"), "vorzug");});
test("vorzüglich -> vorzug", function() {deepEqual( Stem("vorzüglich"), "vorzug");});
test("vorzügliche -> vorzug", function() {deepEqual( Stem("vorzügliche"), "vorzug");});
test("vorzüglichen -> vorzug", function() {deepEqual( Stem("vorzüglichen"), "vorzug");});
test("vorzügliches -> vorzug", function() {deepEqual( Stem("vorzügliches"), "vorzug");});
test("vorzüglichste -> vorzug", function() {deepEqual( Stem("vorzüglichste"), "vorzug");});
test("vorzüglichsten -> vorzug", function() {deepEqual( Stem("vorzüglichsten"), "vorzug");});
test("vorzüglichstes -> vorzug", function() {deepEqual( Stem("vorzüglichstes"), "vorzug");});
test("vorzugsweise -> vorzugsweis", function() {deepEqual( Stem("vorzugsweise"), "vorzugsweis");});
test("vorzuhalten -> vorzuhalt", function() {deepEqual( Stem("vorzuhalten"), "vorzuhalt");});
test("vorzumachen -> vorzumach", function() {deepEqual( Stem("vorzumachen"), "vorzumach");});
test("vorzunehmen -> vorzunehm", function() {deepEqual( Stem("vorzunehmen"), "vorzunehm");});
test("vorzurücken -> vorzuruck", function() {deepEqual( Stem("vorzurücken"), "vorzuruck");});
test("vorzuschlagen -> vorzuschlag", function() {deepEqual( Stem("vorzuschlagen"), "vorzuschlag");});
test("vorzuspielen -> vorzuspiel", function() {deepEqual( Stem("vorzuspielen"), "vorzuspiel");});
test("vorzustellen -> vorzustell", function() {deepEqual( Stem("vorzustellen"), "vorzustell");});
test("vorzuwerfen -> vorzuwerf", function() {deepEqual( Stem("vorzuwerfen"), "vorzuwerf");});
test("vorzuziehen -> vorzuzieh", function() {deepEqual( Stem("vorzuziehen"), "vorzuzieh");});
test("vox -> vox", function() {deepEqual( Stem("vox"), "vox");});
test("vreeli -> vreeli", function() {deepEqual( Stem("vreeli"), "vreeli");});
test("vrenchen -> vrench", function() {deepEqual( Stem("vrenchen"), "vrench");});
test("vrenchens -> vrench", function() {deepEqual( Stem("vrenchens"), "vrench");});
test("vrenches -> vrench", function() {deepEqual( Stem("vrenches"), "vrench");});
test("vrenggel -> vrenggel", function() {deepEqual( Stem("vrenggel"), "vrenggel");});
test("vroni -> vroni", function() {deepEqual( Stem("vroni"), "vroni");});
test("vulgo -> vulgo", function() {deepEqual( Stem("vulgo"), "vulgo");});
test("vulkan -> vulkan", function() {deepEqual( Stem("vulkan"), "vulkan");});
test("w -> w", function() {deepEqual( Stem("w"), "w");});
test("waadtländer -> waadtland", function() {deepEqual( Stem("waadtländer"), "waadtland");});
test("waage -> waag", function() {deepEqual( Stem("waage"), "waag");});
test("waagwirt -> waagwirt", function() {deepEqual( Stem("waagwirt"), "waagwirt");});
test("waagwirtes -> waagwirt", function() {deepEqual( Stem("waagwirtes"), "waagwirt");});
test("waar -> waar", function() {deepEqual( Stem("waar"), "waar");});
test("wach -> wach", function() {deepEqual( Stem("wach"), "wach");});
test("wachdienst -> wachdien", function() {deepEqual( Stem("wachdienst"), "wachdien");});
test("wache -> wach", function() {deepEqual( Stem("wache"), "wach");});
test("wachen -> wach", function() {deepEqual( Stem("wachen"), "wach");});
test("wachenden -> wachend", function() {deepEqual( Stem("wachenden"), "wachend");});
test("wachender -> wachend", function() {deepEqual( Stem("wachender"), "wachend");});
test("wacherhalten -> wacherhalt", function() {deepEqual( Stem("wacherhalten"), "wacherhalt");});
test("wachet -> wachet", function() {deepEqual( Stem("wachet"), "wachet");});
test("wacholderkraut -> wacholderkraut", function() {deepEqual( Stem("wacholderkraut"), "wacholderkraut");});
test("wachs -> wach", function() {deepEqual( Stem("wachs"), "wach");});
test("wachsam -> wachsam", function() {deepEqual( Stem("wachsam"), "wachsam");});
test("wachsames -> wachsam", function() {deepEqual( Stem("wachsames"), "wachsam");});
test("wachsen -> wachs", function() {deepEqual( Stem("wachsen"), "wachs");});
test("wachsende -> wachsend", function() {deepEqual( Stem("wachsende"), "wachsend");});
test("wachsenden -> wachsend", function() {deepEqual( Stem("wachsenden"), "wachsend");});
test("wachsender -> wachsend", function() {deepEqual( Stem("wachsender"), "wachsend");});
test("wachskerzen -> wachskerz", function() {deepEqual( Stem("wachskerzen"), "wachskerz");});
test("wachsleinwand -> wachsleinwand", function() {deepEqual( Stem("wachsleinwand"), "wachsleinwand");});
test("wachslichter -> wachslicht", function() {deepEqual( Stem("wachslichter"), "wachslicht");});
test("wächst -> wach", function() {deepEqual( Stem("wächst"), "wach");});
test("wachstum -> wachstum", function() {deepEqual( Stem("wachstum"), "wachstum");});
test("wachsweissem -> wachsweiss", function() {deepEqual( Stem("wachsweissem"), "wachsweiss");});
test("wacht -> wacht", function() {deepEqual( Stem("wacht"), "wacht");});
test("wachte -> wacht", function() {deepEqual( Stem("wachte"), "wacht");});
test("wachtel -> wachtel", function() {deepEqual( Stem("wachtel"), "wachtel");});
test("wachteln -> wachteln", function() {deepEqual( Stem("wachteln"), "wachteln");});
test("wächter -> wacht", function() {deepEqual( Stem("wächter"), "wacht");});
test("wächtern -> wacht", function() {deepEqual( Stem("wächtern"), "wacht");});
test("wächters -> wacht", function() {deepEqual( Stem("wächters"), "wacht");});
test("wachtmeister -> wachtmeist", function() {deepEqual( Stem("wachtmeister"), "wachtmeist");});
test("wackeligen -> wackel", function() {deepEqual( Stem("wackeligen"), "wackel");});
test("wackeln -> wackeln", function() {deepEqual( Stem("wackeln"), "wackeln");});
test("wackelte -> wackelt", function() {deepEqual( Stem("wackelte"), "wackelt");});
test("wacker -> wack", function() {deepEqual( Stem("wacker"), "wack");});
test("wackere -> wack", function() {deepEqual( Stem("wackere"), "wack");});
test("wackeren -> wack", function() {deepEqual( Stem("wackeren"), "wack");});
test("wackeres -> wack", function() {deepEqual( Stem("wackeres"), "wack");});
test("wackern -> wack", function() {deepEqual( Stem("wackern"), "wack");});
test("waden -> wad", function() {deepEqual( Stem("waden"), "wad");});
test("wadenmuskeln -> wadenmuskeln", function() {deepEqual( Stem("wadenmuskeln"), "wadenmuskeln");});
test("wadenstrümpfen -> wadenstrumpf", function() {deepEqual( Stem("wadenstrümpfen"), "wadenstrumpf");});
test("waffe -> waff", function() {deepEqual( Stem("waffe"), "waff");});
test("waffeleisen -> waffeleis", function() {deepEqual( Stem("waffeleisen"), "waffeleis");});
test("waffen -> waff", function() {deepEqual( Stem("waffen"), "waff");});
test("waffenstillstand -> waffenstillstand", function() {deepEqual( Stem("waffenstillstand"), "waffenstillstand");});
test("wägelchen -> wagelch", function() {deepEqual( Stem("wägelchen"), "wagelch");});
test("wagemutes -> wagemut", function() {deepEqual( Stem("wagemutes"), "wagemut");});
test("wagen -> wag", function() {deepEqual( Stem("wagen"), "wag");});
test("wagenpolster -> wagenpol", function() {deepEqual( Stem("wagenpolster"), "wagenpol");});
test("wagens -> wag", function() {deepEqual( Stem("wagens"), "wag");});
test("wagenschmiere -> wagenschmi", function() {deepEqual( Stem("wagenschmiere"), "wagenschmi");});
test("wagenverkehr -> wagenverkehr", function() {deepEqual( Stem("wagenverkehr"), "wagenverkehr");});
test("wagerl -> wagerl", function() {deepEqual( Stem("wagerl"), "wagerl");});
test("wäget -> waget", function() {deepEqual( Stem("wäget"), "waget");});
test("waghalsigen -> waghals", function() {deepEqual( Stem("waghalsigen"), "waghals");});
test("wagner -> wagn", function() {deepEqual( Stem("wagner"), "wagn");});
test("wagt -> wagt", function() {deepEqual( Stem("wagt"), "wagt");});
test("wagte -> wagt", function() {deepEqual( Stem("wagte"), "wagt");});
test("wagten -> wagt", function() {deepEqual( Stem("wagten"), "wagt");});
test("wahl -> wahl", function() {deepEqual( Stem("wahl"), "wahl");});
test("wahlablauf -> wahlablauf", function() {deepEqual( Stem("wahlablauf"), "wahlablauf");});
test("wahlbehinderung -> wahlbehinder", function() {deepEqual( Stem("wahlbehinderung"), "wahlbehinder");});
test("wahlbenachrichtigung -> wahlbenachricht", function() {deepEqual( Stem("wahlbenachrichtigung"), "wahlbenachricht");});
test("wahlbeobachter -> wahlbeobacht", function() {deepEqual( Stem("wahlbeobachter"), "wahlbeobacht");});
test("wahlbeobachterinnen -> wahlbeobachterinn", function() {deepEqual( Stem("wahlbeobachterinnen"), "wahlbeobachterinn");});
test("wahlbeobachtung -> wahlbeobacht", function() {deepEqual( Stem("wahlbeobachtung"), "wahlbeobacht");});
test("wahlberechtigte -> wahlberechtigt", function() {deepEqual( Stem("wahlberechtigte"), "wahlberechtigt");});
test("wahlberechtigten -> wahlberechtigt", function() {deepEqual( Stem("wahlberechtigten"), "wahlberechtigt");});
test("wahlberechtigung -> wahlberecht", function() {deepEqual( Stem("wahlberechtigung"), "wahlberecht");});
test("wahlberliner -> wahlberlin", function() {deepEqual( Stem("wahlberliner"), "wahlberlin");});
test("wahlbezirken -> wahlbezirk", function() {deepEqual( Stem("wahlbezirken"), "wahlbezirk");});
test("wahlbüro -> wahlburo", function() {deepEqual( Stem("wahlbüro"), "wahlburo");});
test("wahlbüros -> wahlburos", function() {deepEqual( Stem("wahlbüros"), "wahlburos");});
test("wähle -> wahl", function() {deepEqual( Stem("wähle"), "wahl");});
test("wahlen -> wahl", function() {deepEqual( Stem("wahlen"), "wahl");});
test("wählen -> wahl", function() {deepEqual( Stem("wählen"), "wahl");});
test("wählenden -> wahlend", function() {deepEqual( Stem("wählenden"), "wahlend");});
test("wähler -> wahl", function() {deepEqual( Stem("wähler"), "wahl");});
test("wahlergebnis -> wahlergebnis", function() {deepEqual( Stem("wahlergebnis"), "wahlergebnis");});
test("wahlergebnisse -> wahlergebnis", function() {deepEqual( Stem("wahlergebnisse"), "wahlergebnis");});
test("wählerinnen -> wahlerinn", function() {deepEqual( Stem("wählerinnen"), "wahlerinn");});
test("wählete -> wahlet", function() {deepEqual( Stem("wählete"), "wahlet");});
test("wahlgeschäft -> wahlgeschaft", function() {deepEqual( Stem("wahlgeschäft"), "wahlgeschaft");});
test("wahlhandlung -> wahlhandl", function() {deepEqual( Stem("wahlhandlung"), "wahlhandl");});
test("wahlhelfer -> wahlhelf", function() {deepEqual( Stem("wahlhelfer"), "wahlhelf");});
test("wählig -> wahlig", function() {deepEqual( Stem("wählig"), "wahlig");});
test("wähligem -> wahlig", function() {deepEqual( Stem("wähligem"), "wahlig");});
test("wahljahr -> wahljahr", function() {deepEqual( Stem("wahljahr"), "wahljahr");});
test("wahlkabine -> wahlkabin", function() {deepEqual( Stem("wahlkabine"), "wahlkabin");});
test("wahlkampagne -> wahlkampagn", function() {deepEqual( Stem("wahlkampagne"), "wahlkampagn");});
test("wahlkampf -> wahlkampf", function() {deepEqual( Stem("wahlkampf"), "wahlkampf");});
test("wahlkampfes -> wahlkampf", function() {deepEqual( Stem("wahlkampfes"), "wahlkampf");});
test("wahlkommission -> wahlkommission", function() {deepEqual( Stem("wahlkommission"), "wahlkommission");});
test("wahlkommissionen -> wahlkommission", function() {deepEqual( Stem("wahlkommissionen"), "wahlkommission");});
test("wahlkreis -> wahlkreis", function() {deepEqual( Stem("wahlkreis"), "wahlkreis");});
test("wahlkundgebung -> wahlkundgeb", function() {deepEqual( Stem("wahlkundgebung"), "wahlkundgeb");});
test("wahlleiter -> wahlleit", function() {deepEqual( Stem("wahlleiter"), "wahlleit");});
test("wahlleiters -> wahlleit", function() {deepEqual( Stem("wahlleiters"), "wahlleit");});
test("wahlliste -> wahllist", function() {deepEqual( Stem("wahlliste"), "wahllist");});
test("wahllisten -> wahllist", function() {deepEqual( Stem("wahllisten"), "wahllist");});
test("wahllokal -> wahllokal", function() {deepEqual( Stem("wahllokal"), "wahllokal");});
test("wahlmorgen -> wahlmorg", function() {deepEqual( Stem("wahlmorgen"), "wahlmorg");});
test("wahlspruch -> wahlspruch", function() {deepEqual( Stem("wahlspruch"), "wahlspruch");});
test("wählt -> wahlt", function() {deepEqual( Stem("wählt"), "wahlt");});
test("wahltag -> wahltag", function() {deepEqual( Stem("wahltag"), "wahltag");});
test("wahltage -> wahltag", function() {deepEqual( Stem("wahltage"), "wahltag");});
test("wählte -> wahlt", function() {deepEqual( Stem("wählte"), "wahlt");});
test("wählten -> wahlt", function() {deepEqual( Stem("wählten"), "wahlt");});
test("wahlumschlag -> wahlumschlag", function() {deepEqual( Stem("wahlumschlag"), "wahlumschlag");});
test("wahlunregelmässigkeiten -> wahlunregelmass", function() {deepEqual( Stem("wahlunregelmässigkeiten"), "wahlunregelmass");});
test("wahlurnen -> wahlurn", function() {deepEqual( Stem("wahlurnen"), "wahlurn");});
test("wahlvorgang -> wahlvorgang", function() {deepEqual( Stem("wahlvorgang"), "wahlvorgang");});
test("wahlvorgängen -> wahlvorgang", function() {deepEqual( Stem("wahlvorgängen"), "wahlvorgang");});
test("wahlzettel -> wahlzettel", function() {deepEqual( Stem("wahlzettel"), "wahlzettel");});
test("wahn -> wahn", function() {deepEqual( Stem("wahn"), "wahn");});
test("wahne -> wahn", function() {deepEqual( Stem("wahne"), "wahn");});
test("wähnen -> wahn", function() {deepEqual( Stem("wähnen"), "wahn");});
test("wähnend -> wahnend", function() {deepEqual( Stem("wähnend"), "wahnend");});
test("wahnsinn -> wahnsinn", function() {deepEqual( Stem("wahnsinn"), "wahnsinn");});
test("wahnsinnig -> wahnsinn", function() {deepEqual( Stem("wahnsinnig"), "wahnsinn");});
test("wahnsinns -> wahnsinn", function() {deepEqual( Stem("wahnsinns"), "wahnsinn");});
test("wähnt -> wahnt", function() {deepEqual( Stem("wähnt"), "wahnt");});
test("wähnte -> wahnt", function() {deepEqual( Stem("wähnte"), "wahnt");});
test("wähnten -> wahnt", function() {deepEqual( Stem("wähnten"), "wahnt");});
test("wahr -> wahr", function() {deepEqual( Stem("wahr"), "wahr");});
test("wahre -> wahr", function() {deepEqual( Stem("wahre"), "wahr");});
test("währe -> wahr", function() {deepEqual( Stem("währe"), "wahr");});
test("wahrem -> wahr", function() {deepEqual( Stem("wahrem"), "wahr");});
test("wahren -> wahr", function() {deepEqual( Stem("wahren"), "wahr");});
test("während -> wahrend", function() {deepEqual( Stem("während"), "wahrend");});
test("währenddessen -> wahrenddess", function() {deepEqual( Stem("währenddessen"), "wahrenddess");});
test("wahrer -> wahr", function() {deepEqual( Stem("wahrer"), "wahr");});
test("wahres -> wahr", function() {deepEqual( Stem("wahres"), "wahr");});
test("währete -> wahret", function() {deepEqual( Stem("währete"), "wahret");});
test("wahrgenommen -> wahrgenomm", function() {deepEqual( Stem("wahrgenommen"), "wahrgenomm");});
test("wahrhaft -> wahrhaft", function() {deepEqual( Stem("wahrhaft"), "wahrhaft");});
test("wahrhafte -> wahrhaft", function() {deepEqual( Stem("wahrhafte"), "wahrhaft");});
test("wahrhaftig -> wahrhaft", function() {deepEqual( Stem("wahrhaftig"), "wahrhaft");});
test("wahrhaftige -> wahrhaft", function() {deepEqual( Stem("wahrhaftige"), "wahrhaft");});
test("wahrhaftiger -> wahrhaft", function() {deepEqual( Stem("wahrhaftiger"), "wahrhaft");});
test("wahrhaftigkeit -> wahrhaft", function() {deepEqual( Stem("wahrhaftigkeit"), "wahrhaft");});
test("wahrhaftigsten -> wahrhaft", function() {deepEqual( Stem("wahrhaftigsten"), "wahrhaft");});
test("wahrheit -> wahrheit", function() {deepEqual( Stem("wahrheit"), "wahrheit");});
test("wahrheiten -> wahrheit", function() {deepEqual( Stem("wahrheiten"), "wahrheit");});
test("wahrlich -> wahrlich", function() {deepEqual( Stem("wahrlich"), "wahrlich");});
test("wahrnahm -> wahrnahm", function() {deepEqual( Stem("wahrnahm"), "wahrnahm");});
test("wahrnehmbar -> wahrnehmbar", function() {deepEqual( Stem("wahrnehmbar"), "wahrnehmbar");});
test("wahrnehmbarer -> wahrnehmbar", function() {deepEqual( Stem("wahrnehmbarer"), "wahrnehmbar");});
test("wahrnehme -> wahrnehm", function() {deepEqual( Stem("wahrnehme"), "wahrnehm");});
test("wahrnehmen -> wahrnehm", function() {deepEqual( Stem("wahrnehmen"), "wahrnehm");});
test("wahrnehmung -> wahrnehm", function() {deepEqual( Stem("wahrnehmung"), "wahrnehm");});
test("wahrnehmungen -> wahrnehm", function() {deepEqual( Stem("wahrnehmungen"), "wahrnehm");});
test("wahrnimmt -> wahrnimmt", function() {deepEqual( Stem("wahrnimmt"), "wahrnimmt");});
test("wahrsagen -> wahrsag", function() {deepEqual( Stem("wahrsagen"), "wahrsag");});
test("wahrsager -> wahrsag", function() {deepEqual( Stem("wahrsager"), "wahrsag");});
test("wahrsagern -> wahrsag", function() {deepEqual( Stem("wahrsagern"), "wahrsag");});
test("wahrschein -> wahrschein", function() {deepEqual( Stem("wahrschein"), "wahrschein");});
test("wahrscheinlich -> wahrschein", function() {deepEqual( Stem("wahrscheinlich"), "wahrschein");});
test("wahrscheinlicherweise -> wahrscheinlicherweis", function() {deepEqual( Stem("wahrscheinlicherweise"), "wahrscheinlicherweis");});
test("wahrscheinlichkeit -> wahrschein", function() {deepEqual( Stem("wahrscheinlichkeit"), "wahrschein");});
test("wahrscheinlichste -> wahrschein", function() {deepEqual( Stem("wahrscheinlichste"), "wahrschein");});
test("währt -> wahrt", function() {deepEqual( Stem("währt"), "wahrt");});
test("wahrte -> wahrt", function() {deepEqual( Stem("wahrte"), "wahrt");});
test("währte -> wahrt", function() {deepEqual( Stem("währte"), "wahrt");});
test("währungsunion -> wahrungsunion", function() {deepEqual( Stem("währungsunion"), "wahrungsunion");});
test("wahrzeichen -> wahrzeich", function() {deepEqual( Stem("wahrzeichen"), "wahrzeich");});
test("wahrzunehmen -> wahrzunehm", function() {deepEqual( Stem("wahrzunehmen"), "wahrzunehm");});
test("waisen -> wais", function() {deepEqual( Stem("waisen"), "wais");});
test("waisenfelde -> waisenfeld", function() {deepEqual( Stem("waisenfelde"), "waisenfeld");});
test("waisenkind -> waisenkind", function() {deepEqual( Stem("waisenkind"), "waisenkind");});
test("waisenvogt -> waisenvogt", function() {deepEqual( Stem("waisenvogt"), "waisenvogt");});
test("walchensee -> walchense", function() {deepEqual( Stem("walchensee"), "walchense");});
test("walchental -> walchental", function() {deepEqual( Stem("walchental"), "walchental");});
test("wald -> wald", function() {deepEqual( Stem("wald"), "wald");});
test("waldboden -> waldbod", function() {deepEqual( Stem("waldboden"), "waldbod");});
test("wäldchen -> waldch", function() {deepEqual( Stem("wäldchen"), "waldch");});
test("walde -> wald", function() {deepEqual( Stem("walde"), "wald");});
test("waldecke -> waldeck", function() {deepEqual( Stem("waldecke"), "waldeck");});
test("wälder -> wald", function() {deepEqual( Stem("wälder"), "wald");});
test("wäldern -> wald", function() {deepEqual( Stem("wäldern"), "wald");});
test("waldes -> wald", function() {deepEqual( Stem("waldes"), "wald");});
test("waldesel -> waldesel", function() {deepEqual( Stem("waldesel"), "waldesel");});
test("waldflächen -> waldflach", function() {deepEqual( Stem("waldflächen"), "waldflach");});
test("waldfrevel -> waldfrevel", function() {deepEqual( Stem("waldfrevel"), "waldfrevel");});
test("waldfrohen -> waldfroh", function() {deepEqual( Stem("waldfrohen"), "waldfroh");});
test("waldgras -> waldgras", function() {deepEqual( Stem("waldgras"), "waldgras");});
test("waldgrund -> waldgrund", function() {deepEqual( Stem("waldgrund"), "waldgrund");});
test("waldhorn -> waldhorn", function() {deepEqual( Stem("waldhorn"), "waldhorn");});
test("waldhornbläser -> waldhornblas", function() {deepEqual( Stem("waldhornbläser"), "waldhornblas");});
test("waldigen -> waldig", function() {deepEqual( Stem("waldigen"), "waldig");});
test("waldmoose -> waldmoos", function() {deepEqual( Stem("waldmoose"), "waldmoos");});
test("waldpfade -> waldpfad", function() {deepEqual( Stem("waldpfade"), "waldpfad");});
test("waldpfades -> waldpfad", function() {deepEqual( Stem("waldpfades"), "waldpfad");});
test("waldrand -> waldrand", function() {deepEqual( Stem("waldrand"), "waldrand");});
test("waldrevier -> waldrevi", function() {deepEqual( Stem("waldrevier"), "waldrevi");});
test("waldrücken -> waldruck", function() {deepEqual( Stem("waldrücken"), "waldruck");});
test("waldsaum -> waldsaum", function() {deepEqual( Stem("waldsaum"), "waldsaum");});
test("waldstämme -> waldstamm", function() {deepEqual( Stem("waldstämme"), "waldstamm");});
test("waldsträsschen -> waldstrassch", function() {deepEqual( Stem("waldsträsschen"), "waldstrassch");});
test("waldstrasse -> waldstrass", function() {deepEqual( Stem("waldstrasse"), "waldstrass");});
test("waldtiere -> waldti", function() {deepEqual( Stem("waldtiere"), "waldti");});
test("waldungen -> waldung", function() {deepEqual( Stem("waldungen"), "waldung");});
test("waldwegen -> waldweg", function() {deepEqual( Stem("waldwegen"), "waldweg");});
test("waldweges -> waldweg", function() {deepEqual( Stem("waldweges"), "waldweg");});
test("walfisch -> walfisch", function() {deepEqual( Stem("walfisch"), "walfisch");});
test("walfische -> walfisch", function() {deepEqual( Stem("walfische"), "walfisch");});
test("wall -> wall", function() {deepEqual( Stem("wall"), "wall");});
test("wallen -> wall", function() {deepEqual( Stem("wallen"), "wall");});
test("wallende -> wallend", function() {deepEqual( Stem("wallende"), "wallend");});
test("wallte -> wallt", function() {deepEqual( Stem("wallte"), "wallt");});
test("walten -> walt", function() {deepEqual( Stem("walten"), "walt");});
test("waltende -> waltend", function() {deepEqual( Stem("waltende"), "waltend");});
test("waltet -> waltet", function() {deepEqual( Stem("waltet"), "waltet");});
test("waltete -> waltet", function() {deepEqual( Stem("waltete"), "waltet");});
test("wälze -> walz", function() {deepEqual( Stem("wälze"), "walz");});
test("wälzen -> walz", function() {deepEqual( Stem("wälzen"), "walz");});
test("walzer -> walz", function() {deepEqual( Stem("walzer"), "walz");});
test("wälzte -> walzt", function() {deepEqual( Stem("wälzte"), "walzt");});
test("wammen -> wamm", function() {deepEqual( Stem("wammen"), "wamm");});
test("wams -> wam", function() {deepEqual( Stem("wams"), "wam");});
test("wämsern -> wams", function() {deepEqual( Stem("wämsern"), "wams");});
test("wand -> wand", function() {deepEqual( Stem("wand"), "wand");});
test("wände -> wand", function() {deepEqual( Stem("wände"), "wand");});
test("wandel -> wandel", function() {deepEqual( Stem("wandel"), "wandel");});
test("wandellose -> wandellos", function() {deepEqual( Stem("wandellose"), "wandellos");});
test("wandeln -> wandeln", function() {deepEqual( Stem("wandeln"), "wandeln");});
test("wandelnd -> wandelnd", function() {deepEqual( Stem("wandelnd"), "wandelnd");});
test("wandelnde -> wandelnd", function() {deepEqual( Stem("wandelnde"), "wandelnd");});
test("wandelnden -> wandelnd", function() {deepEqual( Stem("wandelnden"), "wandelnd");});
test("wandelndes -> wandelnd", function() {deepEqual( Stem("wandelndes"), "wandelnd");});
test("wandels -> wandel", function() {deepEqual( Stem("wandels"), "wandel");});
test("wandelt -> wandelt", function() {deepEqual( Stem("wandelt"), "wandelt");});
test("wandelte -> wandelt", function() {deepEqual( Stem("wandelte"), "wandelt");});
test("wandelten -> wandelt", function() {deepEqual( Stem("wandelten"), "wandelt");});
test("wänden -> wand", function() {deepEqual( Stem("wänden"), "wand");});
test("wanderbuch -> wanderbuch", function() {deepEqual( Stem("wanderbuch"), "wanderbuch");});
test("wanderbücher -> wanderbuch", function() {deepEqual( Stem("wanderbücher"), "wanderbuch");});
test("wanderbum -> wanderbum", function() {deepEqual( Stem("wanderbum"), "wanderbum");});
test("wanderburn -> wanderburn", function() {deepEqual( Stem("wanderburn"), "wanderburn");});
test("wanderer -> wand", function() {deepEqual( Stem("wanderer"), "wand");});
test("wandergeräte -> wandergerat", function() {deepEqual( Stem("wandergeräte"), "wandergerat");});
test("wanderjünglinge -> wanderjungling", function() {deepEqual( Stem("wanderjünglinge"), "wanderjungling");});
test("wandern -> wand", function() {deepEqual( Stem("wandern"), "wand");});
test("wanderschaft -> wanderschaft", function() {deepEqual( Stem("wanderschaft"), "wanderschaft");});
test("wandert -> wandert", function() {deepEqual( Stem("wandert"), "wandert");});
test("wanderte -> wandert", function() {deepEqual( Stem("wanderte"), "wandert");});
test("wanderten -> wandert", function() {deepEqual( Stem("wanderten"), "wandert");});
test("wanderung -> wander", function() {deepEqual( Stem("wanderung"), "wander");});
test("wanderungen -> wander", function() {deepEqual( Stem("wanderungen"), "wander");});
test("wanderzeit -> wanderzeit", function() {deepEqual( Stem("wanderzeit"), "wanderzeit");});
test("wandle -> wandl", function() {deepEqual( Stem("wandle"), "wandl");});
test("wandrer -> wandr", function() {deepEqual( Stem("wandrer"), "wandr");});
test("wandschränkchen -> wandschrankch", function() {deepEqual( Stem("wandschränkchen"), "wandschrankch");});
test("wandte -> wandt", function() {deepEqual( Stem("wandte"), "wandt");});
test("wandten -> wandt", function() {deepEqual( Stem("wandten"), "wandt");});
test("wanduhr -> wanduhr", function() {deepEqual( Stem("wanduhr"), "wanduhr");});
test("wandwinkel -> wandwinkel", function() {deepEqual( Stem("wandwinkel"), "wandwinkel");});
test("wange -> wang", function() {deepEqual( Stem("wange"), "wang");});
test("wangen -> wang", function() {deepEqual( Stem("wangen"), "wang");});
test("wanke -> wank", function() {deepEqual( Stem("wanke"), "wank");});
test("wanken -> wank", function() {deepEqual( Stem("wanken"), "wank");});
test("wann -> wann", function() {deepEqual( Stem("wann"), "wann");});
test("wanne -> wann", function() {deepEqual( Stem("wanne"), "wann");});
test("wannenbreit -> wannenbreit", function() {deepEqual( Stem("wannenbreit"), "wannenbreit");});
test("wanze -> wanz", function() {deepEqual( Stem("wanze"), "wanz");});
test("wanzen -> wanz", function() {deepEqual( Stem("wanzen"), "wanz");});
test("wapp -> wapp", function() {deepEqual( Stem("wapp"), "wapp");});
test("wappen -> wapp", function() {deepEqual( Stem("wappen"), "wapp");});
test("war -> war", function() {deepEqual( Stem("war"), "war");});
test("wär -> war", function() {deepEqual( Stem("wär"), "war");});
test("ward -> ward", function() {deepEqual( Stem("ward"), "ward");});
test("ware -> war", function() {deepEqual( Stem("ware"), "war");});
test("wäre -> war", function() {deepEqual( Stem("wäre"), "war");});
test("waren -> war", function() {deepEqual( Stem("waren"), "war");});
test("wären -> war", function() {deepEqual( Stem("wären"), "war");});
test("warenlager -> warenlag", function() {deepEqual( Stem("warenlager"), "warenlag");});
test("warenmagazinen -> warenmagazin", function() {deepEqual( Stem("warenmagazinen"), "warenmagazin");});
test("wärest -> war", function() {deepEqual( Stem("wärest"), "war");});
test("wäret -> waret", function() {deepEqual( Stem("wäret"), "waret");});
test("warf -> warf", function() {deepEqual( Stem("warf"), "warf");});
test("warfen -> warf", function() {deepEqual( Stem("warfen"), "warf");});
test("warm -> warm", function() {deepEqual( Stem("warm"), "warm");});
test("warme -> warm", function() {deepEqual( Stem("warme"), "warm");});
test("wärme -> warm", function() {deepEqual( Stem("wärme"), "warm");});
test("warmen -> warm", function() {deepEqual( Stem("warmen"), "warm");});
test("wärmen -> warm", function() {deepEqual( Stem("wärmen"), "warm");});
test("warmer -> warm", function() {deepEqual( Stem("warmer"), "warm");});
test("wärmer -> warm", function() {deepEqual( Stem("wärmer"), "warm");});
test("warmes -> warm", function() {deepEqual( Stem("warmes"), "warm");});
test("wärmsten -> warm", function() {deepEqual( Stem("wärmsten"), "warm");});
test("warne -> warn", function() {deepEqual( Stem("warne"), "warn");});
test("warnend -> warnend", function() {deepEqual( Stem("warnend"), "warnend");});
test("warnenden -> warnend", function() {deepEqual( Stem("warnenden"), "warnend");});
test("warnt -> warnt", function() {deepEqual( Stem("warnt"), "warnt");});
test("warnung -> warnung", function() {deepEqual( Stem("warnung"), "warnung");});
test("warnungsruf -> warnungsruf", function() {deepEqual( Stem("warnungsruf"), "warnungsruf");});
test("warst -> warst", function() {deepEqual( Stem("warst"), "warst");});
test("wärst -> warst", function() {deepEqual( Stem("wärst"), "warst");});
test("wart -> wart", function() {deepEqual( Stem("wart"), "wart");});
test("warte -> wart", function() {deepEqual( Stem("warte"), "wart");});
test("wartei -> wartei", function() {deepEqual( Stem("wartei"), "wartei");});
test("warteliste -> wartelist", function() {deepEqual( Stem("warteliste"), "wartelist");});
test("warten -> wart", function() {deepEqual( Stem("warten"), "wart");});
test("wartendes -> wartend", function() {deepEqual( Stem("wartendes"), "wartend");});
test("wartet -> wartet", function() {deepEqual( Stem("wartet"), "wartet");});
test("wartete -> wartet", function() {deepEqual( Stem("wartete"), "wartet");});
test("warteten -> wartet", function() {deepEqual( Stem("warteten"), "wartet");});
test("wartst -> wart", function() {deepEqual( Stem("wartst"), "wart");});
test("warum -> warum", function() {deepEqual( Stem("warum"), "warum");});
test("was -> was", function() {deepEqual( Stem("was"), "was");});
test("waschbottich -> waschbottich", function() {deepEqual( Stem("waschbottich"), "waschbottich");});
test("waschbündel -> waschbundel", function() {deepEqual( Stem("waschbündel"), "waschbundel");});
test("wäsche -> wasch", function() {deepEqual( Stem("wäsche"), "wasch");});
test("waschen -> wasch", function() {deepEqual( Stem("waschen"), "wasch");});
test("wäschepacken -> waschepack", function() {deepEqual( Stem("wäschepacken"), "waschepack");});
test("wäscherei -> wascherei", function() {deepEqual( Stem("wäscherei"), "wascherei");});
test("wäscherin -> wascherin", function() {deepEqual( Stem("wäscherin"), "wascherin");});
test("wäschestück -> waschestuck", function() {deepEqual( Stem("wäschestück"), "waschestuck");});
test("waschtisch -> waschtisch", function() {deepEqual( Stem("waschtisch"), "waschtisch");});
test("waschungen -> waschung", function() {deepEqual( Stem("waschungen"), "waschung");});
test("washingtoner -> washington", function() {deepEqual( Stem("washingtoner"), "washington");});
test("wasser -> wass", function() {deepEqual( Stem("wasser"), "wass");});
test("wasseramsel -> wasseramsel", function() {deepEqual( Stem("wasseramsel"), "wasseramsel");});
test("wasseraugen -> wasseraug", function() {deepEqual( Stem("wasseraugen"), "wasseraug");});
test("wasserblaue -> wasserblau", function() {deepEqual( Stem("wasserblaue"), "wasserblau");});
test("wasserdünste -> wasserdun", function() {deepEqual( Stem("wasserdünste"), "wasserdun");});
test("wassereimer -> wassereim", function() {deepEqual( Stem("wassereimer"), "wassereim");});
test("wasserfläche -> wasserflach", function() {deepEqual( Stem("wasserfläche"), "wasserflach");});
test("wasserflut -> wasserflut", function() {deepEqual( Stem("wasserflut"), "wasserflut");});
test("wasserfluten -> wasserflut", function() {deepEqual( Stem("wasserfluten"), "wasserflut");});
test("wasserfrau -> wasserfrau", function() {deepEqual( Stem("wasserfrau"), "wasserfrau");});
test("wasserfürsten -> wasserfurst", function() {deepEqual( Stem("wasserfürsten"), "wasserfurst");});
test("wassergegend -> wassergeg", function() {deepEqual( Stem("wassergegend"), "wassergeg");});
test("wassergewimmels -> wassergewimmel", function() {deepEqual( Stem("wassergewimmels"), "wassergewimmel");});
test("wasserhose -> wasserhos", function() {deepEqual( Stem("wasserhose"), "wasserhos");});
test("wasserhosen -> wasserhos", function() {deepEqual( Stem("wasserhosen"), "wasserhos");});
test("wässerig -> wasser", function() {deepEqual( Stem("wässerig"), "wasser");});
test("wässeriger -> wasser", function() {deepEqual( Stem("wässeriger"), "wasser");});
test("wässerlein -> wasserlein", function() {deepEqual( Stem("wässerlein"), "wasserlein");});
test("wasserleitung -> wasserleit", function() {deepEqual( Stem("wasserleitung"), "wasserleit");});
test("wasserleitungen -> wasserleit", function() {deepEqual( Stem("wasserleitungen"), "wasserleit");});
test("wassermann -> wassermann", function() {deepEqual( Stem("wassermann"), "wassermann");});
test("wassermanns -> wassermann", function() {deepEqual( Stem("wassermanns"), "wassermann");});
test("wassern -> wass", function() {deepEqual( Stem("wassern"), "wass");});
test("wässern -> wass", function() {deepEqual( Stem("wässern"), "wass");});
test("wässerndem -> wassernd", function() {deepEqual( Stem("wässerndem"), "wassernd");});
test("wassernixen -> wassernix", function() {deepEqual( Stem("wassernixen"), "wassernix");});
test("wasserpfuscherei -> wasserpfuscherei", function() {deepEqual( Stem("wasserpfuscherei"), "wasserpfuscherei");});
test("wasserpolacken -> wasserpolack", function() {deepEqual( Stem("wasserpolacken"), "wasserpolack");});
test("wasserquelle -> wasserquell", function() {deepEqual( Stem("wasserquelle"), "wasserquell");});
test("wasserquellen -> wasserquell", function() {deepEqual( Stem("wasserquellen"), "wasserquell");});
test("wasserrosen -> wasserros", function() {deepEqual( Stem("wasserrosen"), "wasserros");});
test("wassers -> wass", function() {deepEqual( Stem("wassers"), "wass");});
test("wasserscheu -> wasserscheu", function() {deepEqual( Stem("wasserscheu"), "wasserscheu");});
test("wasserschlange -> wasserschlang", function() {deepEqual( Stem("wasserschlange"), "wasserschlang");});
test("wasserschlangen -> wasserschlang", function() {deepEqual( Stem("wasserschlangen"), "wasserschlang");});
test("wassersee -> wasserse", function() {deepEqual( Stem("wassersee"), "wasserse");});
test("wasserseen -> wasserse", function() {deepEqual( Stem("wasserseen"), "wasserse");});
test("wasserspritzen -> wasserspritz", function() {deepEqual( Stem("wasserspritzen"), "wasserspritz");});
test("wasserstar -> wasserstar", function() {deepEqual( Stem("wasserstar"), "wasserstar");});
test("wasserstrahl -> wasserstrahl", function() {deepEqual( Stem("wasserstrahl"), "wasserstrahl");});
test("wasserstreif -> wasserstreif", function() {deepEqual( Stem("wasserstreif"), "wasserstreif");});
test("wassersturz -> wassersturz", function() {deepEqual( Stem("wassersturz"), "wassersturz");});
test("wässert -> wassert", function() {deepEqual( Stem("wässert"), "wassert");});
test("wässerte -> wassert", function() {deepEqual( Stem("wässerte"), "wassert");});
test("wasserträger -> wassertrag", function() {deepEqual( Stem("wasserträger"), "wassertrag");});
test("wassertrog -> wassertrog", function() {deepEqual( Stem("wassertrog"), "wassertrog");});
test("wassertropfen -> wassertropf", function() {deepEqual( Stem("wassertropfen"), "wassertropf");});
test("wassertümpel -> wassertumpel", function() {deepEqual( Stem("wassertümpel"), "wassertumpel");});
test("waste -> wast", function() {deepEqual( Stem("waste"), "wast");});
test("watteweissen -> watteweiss", function() {deepEqual( Stem("watteweissen"), "watteweiss");});
test("wattierten -> wattiert", function() {deepEqual( Stem("wattierten"), "wattiert");});
test("watzmann -> watzmann", function() {deepEqual( Stem("watzmann"), "watzmann");});
test("we -> we", function() {deepEqual( Stem("we"), "we");});
test("web -> web", function() {deepEqual( Stem("web"), "web");});
test("weben -> web", function() {deepEqual( Stem("weben"), "web");});
test("weber -> web", function() {deepEqual( Stem("weber"), "web");});
test("weberschiffchen -> weberschiffch", function() {deepEqual( Stem("weberschiffchen"), "weberschiffch");});
test("website -> websit", function() {deepEqual( Stem("website"), "websit");});
test("webt -> webt", function() {deepEqual( Stem("webt"), "webt");});
test("webte -> webt", function() {deepEqual( Stem("webte"), "webt");});
test("wechsel -> wechsel", function() {deepEqual( Stem("wechsel"), "wechsel");});
test("wechselbalg -> wechselbalg", function() {deepEqual( Stem("wechselbalg"), "wechselbalg");});
test("wechselbriefe -> wechselbrief", function() {deepEqual( Stem("wechselbriefe"), "wechselbrief");});
test("wechselgesang -> wechselgesang", function() {deepEqual( Stem("wechselgesang"), "wechselgesang");});
test("wechseln -> wechseln", function() {deepEqual( Stem("wechseln"), "wechseln");});
test("wechselnden -> wechselnd", function() {deepEqual( Stem("wechselnden"), "wechselnd");});
test("wechselseitig -> wechselseit", function() {deepEqual( Stem("wechselseitig"), "wechselseit");});
test("wechselt -> wechselt", function() {deepEqual( Stem("wechselt"), "wechselt");});
test("wechselte -> wechselt", function() {deepEqual( Stem("wechselte"), "wechselt");});
test("wechselten -> wechselt", function() {deepEqual( Stem("wechselten"), "wechselt");});
test("weck -> weck", function() {deepEqual( Stem("weck"), "weck");});
test("wecken -> weck", function() {deepEqual( Stem("wecken"), "weck");});
test("weckt -> weckt", function() {deepEqual( Stem("weckt"), "weckt");});
test("weckte -> weckt", function() {deepEqual( Stem("weckte"), "weckt");});
test("weckten -> weckt", function() {deepEqual( Stem("weckten"), "weckt");});
test("wedelnden -> wedelnd", function() {deepEqual( Stem("wedelnden"), "wedelnd");});
test("weder -> wed", function() {deepEqual( Stem("weder"), "wed");});
test("weg -> weg", function() {deepEqual( Stem("weg"), "weg");});
test("wegbereit -> wegbereit", function() {deepEqual( Stem("wegbereit"), "wegbereit");});
test("wegbiegung -> wegbieg", function() {deepEqual( Stem("wegbiegung"), "wegbieg");});
test("wegbleiben -> wegbleib", function() {deepEqual( Stem("wegbleiben"), "wegbleib");});
test("wegblendete -> wegblendet", function() {deepEqual( Stem("wegblendete"), "wegblendet");});
test("wegblickt -> wegblickt", function() {deepEqual( Stem("wegblickt"), "wegblickt");});
test("wegbringen -> wegbring", function() {deepEqual( Stem("wegbringen"), "wegbring");});
test("wege -> weg", function() {deepEqual( Stem("wege"), "weg");});
test("wegekrautes -> wegekraut", function() {deepEqual( Stem("wegekrautes"), "wegekraut");});
test("wegen -> weg", function() {deepEqual( Stem("wegen"), "weg");});
test("weges -> weg", function() {deepEqual( Stem("weges"), "weg");});
test("wegfahren -> wegfahr", function() {deepEqual( Stem("wegfahren"), "wegfahr");});
test("wegfliegen -> wegflieg", function() {deepEqual( Stem("wegfliegen"), "wegflieg");});
test("wegführe -> wegfuhr", function() {deepEqual( Stem("wegführe"), "wegfuhr");});
test("wegführen -> wegfuhr", function() {deepEqual( Stem("wegführen"), "wegfuhr");});
test("wegg -> wegg", function() {deepEqual( Stem("wegg"), "wegg");});
test("weggebracht -> weggebracht", function() {deepEqual( Stem("weggebracht"), "weggebracht");});
test("weggefahren -> weggefahr", function() {deepEqual( Stem("weggefahren"), "weggefahr");});
test("weggefallen -> weggefall", function() {deepEqual( Stem("weggefallen"), "weggefall");});
test("weggefegt -> weggefegt", function() {deepEqual( Stem("weggefegt"), "weggefegt");});
test("weggeflogen -> weggeflog", function() {deepEqual( Stem("weggeflogen"), "weggeflog");});
test("weggeführt -> weggefuhrt", function() {deepEqual( Stem("weggeführt"), "weggefuhrt");});
test("weggegangen -> weggegang", function() {deepEqual( Stem("weggegangen"), "weggegang");});
test("weggehen -> weggeh", function() {deepEqual( Stem("weggehen"), "weggeh");});
test("weggehoben -> weggehob", function() {deepEqual( Stem("weggehoben"), "weggehob");});
test("weggeholt -> weggeholt", function() {deepEqual( Stem("weggeholt"), "weggeholt");});
test("weggekommen -> weggekomm", function() {deepEqual( Stem("weggekommen"), "weggekomm");});
test("weggeleugnet -> weggeleugnet", function() {deepEqual( Stem("weggeleugnet"), "weggeleugnet");});
test("weggenommen -> weggenomm", function() {deepEqual( Stem("weggenommen"), "weggenomm");});
test("weggerafft -> weggerafft", function() {deepEqual( Stem("weggerafft"), "weggerafft");});
test("weggerissen -> weggeriss", function() {deepEqual( Stem("weggerissen"), "weggeriss");});
test("weggeschafft -> weggeschafft", function() {deepEqual( Stem("weggeschafft"), "weggeschafft");});
test("weggeschoben -> weggeschob", function() {deepEqual( Stem("weggeschoben"), "weggeschob");});
test("weggespült -> weggespult", function() {deepEqual( Stem("weggespült"), "weggespult");});
test("weggestorben -> weggestorb", function() {deepEqual( Stem("weggestorben"), "weggestorb");});
test("weggetrieben -> weggetrieb", function() {deepEqual( Stem("weggetrieben"), "weggetrieb");});
test("weggewendet -> weggewendet", function() {deepEqual( Stem("weggewendet"), "weggewendet");});
test("weggeworfen -> weggeworf", function() {deepEqual( Stem("weggeworfen"), "weggeworf");});
test("weggezerrt -> weggezerrt", function() {deepEqual( Stem("weggezerrt"), "weggezerrt");});
test("weggezogen -> weggezog", function() {deepEqual( Stem("weggezogen"), "weggezog");});
test("weggingest -> wegging", function() {deepEqual( Stem("weggingest"), "wegging");});
test("weggucht -> weggucht", function() {deepEqual( Stem("weggucht"), "weggucht");});
test("wegkommen -> wegkomm", function() {deepEqual( Stem("wegkommen"), "wegkomm");});
test("wegliessen -> wegliess", function() {deepEqual( Stem("wegliessen"), "wegliess");});
test("wegmachen -> wegmach", function() {deepEqual( Stem("wegmachen"), "wegmach");});
test("wegmarschierte -> wegmarschiert", function() {deepEqual( Stem("wegmarschierte"), "wegmarschiert");});
test("wegnahme -> wegnahm", function() {deepEqual( Stem("wegnahme"), "wegnahm");});
test("wegnehme -> wegnehm", function() {deepEqual( Stem("wegnehme"), "wegnehm");});
test("wegnehmen -> wegnehm", function() {deepEqual( Stem("wegnehmen"), "wegnehm");});
test("wegnimmt -> wegnimmt", function() {deepEqual( Stem("wegnimmt"), "wegnimmt");});
test("wegräumung -> wegraum", function() {deepEqual( Stem("wegräumung"), "wegraum");});
test("wegrichtung -> wegricht", function() {deepEqual( Stem("wegrichtung"), "wegricht");});
test("wegsah -> wegsah", function() {deepEqual( Stem("wegsah"), "wegsah");});
test("wegschaffen -> wegschaff", function() {deepEqual( Stem("wegschaffen"), "wegschaff");});
test("wegschaffung -> wegschaff", function() {deepEqual( Stem("wegschaffung"), "wegschaff");});
test("wegsetzt -> wegsetzt", function() {deepEqual( Stem("wegsetzt"), "wegsetzt");});
test("wegsortiert -> wegsortiert", function() {deepEqual( Stem("wegsortiert"), "wegsortiert");});
test("wegspringen -> wegspring", function() {deepEqual( Stem("wegspringen"), "wegspring");});
test("wegstiesse -> wegstiess", function() {deepEqual( Stem("wegstiesse"), "wegstiess");});
test("wegstrebten -> wegstrebt", function() {deepEqual( Stem("wegstrebten"), "wegstrebt");});
test("wegströmte -> wegstromt", function() {deepEqual( Stem("wegströmte"), "wegstromt");});
test("wegstunde -> wegstund", function() {deepEqual( Stem("wegstunde"), "wegstund");});
test("wegtragen -> wegtrag", function() {deepEqual( Stem("wegtragen"), "wegtrag");});
test("wegtreiben -> wegtreib", function() {deepEqual( Stem("wegtreiben"), "wegtreib");});
test("wegtreibt -> wegtreibt", function() {deepEqual( Stem("wegtreibt"), "wegtreibt");});
test("wegtrieb -> wegtrieb", function() {deepEqual( Stem("wegtrieb"), "wegtrieb");});
test("wegtrieben -> wegtrieb", function() {deepEqual( Stem("wegtrieben"), "wegtrieb");});
test("wegvernünfteln -> wegvernunfteln", function() {deepEqual( Stem("wegvernünfteln"), "wegvernunfteln");});
test("wegwenden -> wegwend", function() {deepEqual( Stem("wegwenden"), "wegwend");});
test("wegwerfen -> wegwerf", function() {deepEqual( Stem("wegwerfen"), "wegwerf");});
test("wegwerfend -> wegwerf", function() {deepEqual( Stem("wegwerfend"), "wegwerf");});
test("wegwischen -> wegwisch", function() {deepEqual( Stem("wegwischen"), "wegwisch");});
test("wegwürfe -> wegwurf", function() {deepEqual( Stem("wegwürfe"), "wegwurf");});
test("wegzogen -> wegzog", function() {deepEqual( Stem("wegzogen"), "wegzog");});
test("wegzubringen -> wegzubring", function() {deepEqual( Stem("wegzubringen"), "wegzubring");});
test("wegzufahren -> wegzufahr", function() {deepEqual( Stem("wegzufahren"), "wegzufahr");});
test("wegzufangen -> wegzufang", function() {deepEqual( Stem("wegzufangen"), "wegzufang");});
test("wegzugehen -> wegzugeh", function() {deepEqual( Stem("wegzugehen"), "wegzugeh");});
test("wegzuheben -> wegzuheb", function() {deepEqual( Stem("wegzuheben"), "wegzuheb");});
test("wegzuholen -> wegzuhol", function() {deepEqual( Stem("wegzuholen"), "wegzuhol");});
test("wegzukommen -> wegzukomm", function() {deepEqual( Stem("wegzukommen"), "wegzukomm");});
test("wegzumachen -> wegzumach", function() {deepEqual( Stem("wegzumachen"), "wegzumach");});
test("wegzunehmen -> wegzunehm", function() {deepEqual( Stem("wegzunehmen"), "wegzunehm");});
test("wegzupraktizieren -> wegzupraktizi", function() {deepEqual( Stem("wegzupraktizieren"), "wegzupraktizi");});
test("wegzuraffen -> wegzuraff", function() {deepEqual( Stem("wegzuraffen"), "wegzuraff");});
test("wegzuschaffen -> wegzuschaff", function() {deepEqual( Stem("wegzuschaffen"), "wegzuschaff");});
test("wegzuschicken -> wegzuschick", function() {deepEqual( Stem("wegzuschicken"), "wegzuschick");});
test("weh -> weh", function() {deepEqual( Stem("weh"), "weh");});
test("wehe -> weh", function() {deepEqual( Stem("wehe"), "weh");});
test("wehen -> weh", function() {deepEqual( Stem("wehen"), "weh");});
test("wehendem -> wehend", function() {deepEqual( Stem("wehendem"), "wehend");});
test("wehenden -> wehend", function() {deepEqual( Stem("wehenden"), "wehend");});
test("wehes -> weh", function() {deepEqual( Stem("wehes"), "weh");});
test("wehet -> wehet", function() {deepEqual( Stem("wehet"), "wehet");});
test("wehetuender -> wehetu", function() {deepEqual( Stem("wehetuender"), "wehetu");});
test("wehklage -> wehklag", function() {deepEqual( Stem("wehklage"), "wehklag");});
test("wehklagen -> wehklag", function() {deepEqual( Stem("wehklagen"), "wehklag");});
test("wehklagenden -> wehklag", function() {deepEqual( Stem("wehklagenden"), "wehklag");});
test("wehmut -> wehmut", function() {deepEqual( Stem("wehmut"), "wehmut");});
test("wehmütig -> wehmut", function() {deepEqual( Stem("wehmütig"), "wehmut");});
test("wehmütige -> wehmut", function() {deepEqual( Stem("wehmütige"), "wehmut");});
test("wehmutsvoll -> wehmutsvoll", function() {deepEqual( Stem("wehmutsvoll"), "wehmutsvoll");});
test("wehmutter -> wehmutt", function() {deepEqual( Stem("wehmutter"), "wehmutt");});
test("wehmütter -> wehmutt", function() {deepEqual( Stem("wehmütter"), "wehmutt");});
test("wehmüttern -> wehmutt", function() {deepEqual( Stem("wehmüttern"), "wehmutt");});
test("weho -> weho", function() {deepEqual( Stem("weho"), "weho");});
test("wehr -> wehr", function() {deepEqual( Stem("wehr"), "wehr");});
test("wehrbaren -> wehrbar", function() {deepEqual( Stem("wehrbaren"), "wehrbar");});
test("wehrbarkeit -> wehrbar", function() {deepEqual( Stem("wehrbarkeit"), "wehrbar");});
test("wehrdienst -> wehrdien", function() {deepEqual( Stem("wehrdienst"), "wehrdien");});
test("wehren -> wehr", function() {deepEqual( Stem("wehren"), "wehr");});
test("wehrend -> wehrend", function() {deepEqual( Stem("wehrend"), "wehrend");});
test("wehret -> wehret", function() {deepEqual( Stem("wehret"), "wehret");});
test("wehrhaft -> wehrhaft", function() {deepEqual( Stem("wehrhaft"), "wehrhaft");});
test("wehrhaften -> wehrhaft", function() {deepEqual( Stem("wehrhaften"), "wehrhaft");});
test("wehrlos -> wehrlos", function() {deepEqual( Stem("wehrlos"), "wehrlos");});
test("wehrlosen -> wehrlos", function() {deepEqual( Stem("wehrlosen"), "wehrlos");});
test("wehrte -> wehrt", function() {deepEqual( Stem("wehrte"), "wehrt");});
test("wehselig -> wehsel", function() {deepEqual( Stem("wehselig"), "wehsel");});
test("weht -> weht", function() {deepEqual( Stem("weht"), "weht");});
test("wehte -> weht", function() {deepEqual( Stem("wehte"), "weht");});
test("wehten -> weht", function() {deepEqual( Stem("wehten"), "weht");});
test("wehtun -> wehtun", function() {deepEqual( Stem("wehtun"), "wehtun");});
test("wehwehchen -> wehwehch", function() {deepEqual( Stem("wehwehchen"), "wehwehch");});
test("weib -> weib", function() {deepEqual( Stem("weib"), "weib");});
test("weibchen -> weibch", function() {deepEqual( Stem("weibchen"), "weibch");});
test("weibe -> weib", function() {deepEqual( Stem("weibe"), "weib");});
test("weibel -> weibel", function() {deepEqual( Stem("weibel"), "weibel");});
test("weiber -> weib", function() {deepEqual( Stem("weiber"), "weib");});
test("weibergut -> weibergut", function() {deepEqual( Stem("weibergut"), "weibergut");});
test("weibergute -> weibergut", function() {deepEqual( Stem("weibergute"), "weibergut");});
test("weibergutes -> weibergut", function() {deepEqual( Stem("weibergutes"), "weibergut");});
test("weiberhaare -> weiberhaar", function() {deepEqual( Stem("weiberhaare"), "weiberhaar");});
test("weiberkleidern -> weiberkleid", function() {deepEqual( Stem("weiberkleidern"), "weiberkleid");});
test("weiberl -> weiberl", function() {deepEqual( Stem("weiberl"), "weiberl");});
test("weiberlaunischen -> weiberlaun", function() {deepEqual( Stem("weiberlaunischen"), "weiberlaun");});
test("weibern -> weib", function() {deepEqual( Stem("weibern"), "weib");});
test("weibernücken -> weibernuck", function() {deepEqual( Stem("weibernücken"), "weibernuck");});
test("weiberschuhe -> weiberschuh", function() {deepEqual( Stem("weiberschuhe"), "weiberschuh");});
test("weibervolk -> weibervolk", function() {deepEqual( Stem("weibervolk"), "weibervolk");});
test("weibes -> weib", function() {deepEqual( Stem("weibes"), "weib");});
test("weiblein -> weiblein", function() {deepEqual( Stem("weiblein"), "weiblein");});
test("weibleins -> weiblein", function() {deepEqual( Stem("weibleins"), "weiblein");});
test("weiblich -> weiblich", function() {deepEqual( Stem("weiblich"), "weiblich");});
test("weibliche -> weiblich", function() {deepEqual( Stem("weibliche"), "weiblich");});
test("weiblichen -> weiblich", function() {deepEqual( Stem("weiblichen"), "weiblich");});
test("weiblicher -> weiblich", function() {deepEqual( Stem("weiblicher"), "weiblich");});
test("weibliches -> weiblich", function() {deepEqual( Stem("weibliches"), "weiblich");});
test("weiblichkeit -> weiblich", function() {deepEqual( Stem("weiblichkeit"), "weiblich");});
test("weibsbild -> weibsbild", function() {deepEqual( Stem("weibsbild"), "weibsbild");});
test("weibsbilder -> weibsbild", function() {deepEqual( Stem("weibsbilder"), "weibsbild");});
test("weibsleut -> weibsleut", function() {deepEqual( Stem("weibsleut"), "weibsleut");});
test("weibsleute -> weibsleut", function() {deepEqual( Stem("weibsleute"), "weibsleut");});
test("weibsperson -> weibsperson", function() {deepEqual( Stem("weibsperson"), "weibsperson");});
test("weibstück -> weibstuck", function() {deepEqual( Stem("weibstück"), "weibstuck");});
test("weich -> weich", function() {deepEqual( Stem("weich"), "weich");});
test("weiche -> weich", function() {deepEqual( Stem("weiche"), "weich");});
test("weichen -> weich", function() {deepEqual( Stem("weichen"), "weich");});
test("weicher -> weich", function() {deepEqual( Stem("weicher"), "weich");});
test("weicheren -> weich", function() {deepEqual( Stem("weicheren"), "weich");});
test("weiches -> weich", function() {deepEqual( Stem("weiches"), "weich");});
test("weichet -> weichet", function() {deepEqual( Stem("weichet"), "weichet");});
test("weichherzigen -> weichherz", function() {deepEqual( Stem("weichherzigen"), "weichherz");});
test("weichlichen -> weichlich", function() {deepEqual( Stem("weichlichen"), "weichlich");});
test("weichquark -> weichquark", function() {deepEqual( Stem("weichquark"), "weichquark");});
test("weichsel -> weichsel", function() {deepEqual( Stem("weichsel"), "weichsel");});
test("weichste -> weich", function() {deepEqual( Stem("weichste"), "weich");});
test("weicht -> weicht", function() {deepEqual( Stem("weicht"), "weicht");});
test("weide -> weid", function() {deepEqual( Stem("weide"), "weid");});
test("weiden -> weid", function() {deepEqual( Stem("weiden"), "weid");});
test("weidenbaum -> weidenbaum", function() {deepEqual( Stem("weidenbaum"), "weidenbaum");});
test("weidenden -> weidend", function() {deepEqual( Stem("weidenden"), "weidend");});
test("weidenringe -> weidenring", function() {deepEqual( Stem("weidenringe"), "weidenring");});
test("weidenröschen -> weidenrosch", function() {deepEqual( Stem("weidenröschen"), "weidenrosch");});
test("weidenrosen -> weidenros", function() {deepEqual( Stem("weidenrosen"), "weidenros");});
test("weidenstauden -> weidenstaud", function() {deepEqual( Stem("weidenstauden"), "weidenstaud");});
test("weidet -> weidet", function() {deepEqual( Stem("weidet"), "weidet");});
test("weidete -> weidet", function() {deepEqual( Stem("weidete"), "weidet");});
test("weidgerechteste -> weidgerecht", function() {deepEqual( Stem("weidgerechteste"), "weidgerecht");});
test("weidlich -> weidlich", function() {deepEqual( Stem("weidlich"), "weidlich");});
test("weidmann -> weidmann", function() {deepEqual( Stem("weidmann"), "weidmann");});
test("weidmannes -> weidmann", function() {deepEqual( Stem("weidmannes"), "weidmann");});
test("weidmannsfreude -> weidmannsfreud", function() {deepEqual( Stem("weidmannsfreude"), "weidmannsfreud");});
test("weidmannspech -> weidmannspech", function() {deepEqual( Stem("weidmannspech"), "weidmannspech");});
test("weidmannstod -> weidmannstod", function() {deepEqual( Stem("weidmannstod"), "weidmannstod");});
test("weidwerk -> weidwerk", function() {deepEqual( Stem("weidwerk"), "weidwerk");});
test("weidwund -> weidwund", function() {deepEqual( Stem("weidwund"), "weidwund");});
test("weigern -> weig", function() {deepEqual( Stem("weigern"), "weig");});
test("weigerst -> weigerst", function() {deepEqual( Stem("weigerst"), "weigerst");});
test("weigert -> weigert", function() {deepEqual( Stem("weigert"), "weigert");});
test("weigerung -> weiger", function() {deepEqual( Stem("weigerung"), "weiger");});
test("weih -> weih", function() {deepEqual( Stem("weih"), "weih");});
test("weihbischof -> weihbischof", function() {deepEqual( Stem("weihbischof"), "weihbischof");});
test("weihe -> weih", function() {deepEqual( Stem("weihe"), "weih");});
test("weihen -> weih", function() {deepEqual( Stem("weihen"), "weih");});
test("weihevollen -> weihevoll", function() {deepEqual( Stem("weihevollen"), "weihevoll");});
test("weihnachten -> weihnacht", function() {deepEqual( Stem("weihnachten"), "weihnacht");});
test("weihnachtsbäumchen -> weihnachtsbaumch", function() {deepEqual( Stem("weihnachtsbäumchen"), "weihnachtsbaumch");});
test("weihnachtsbäumen -> weihnachtsbaum", function() {deepEqual( Stem("weihnachtsbäumen"), "weihnachtsbaum");});
test("weihnachtsengelchen -> weihnachtsengelch", function() {deepEqual( Stem("weihnachtsengelchen"), "weihnachtsengelch");});
test("weihnachtsgarten -> weihnachtsgart", function() {deepEqual( Stem("weihnachtsgarten"), "weihnachtsgart");});
test("weihnachtslied -> weihnachtslied", function() {deepEqual( Stem("weihnachtslied"), "weihnachtslied");});
test("weihnachtsmann -> weihnachtsmann", function() {deepEqual( Stem("weihnachtsmann"), "weihnachtsmann");});
test("weihnachtsnüsse -> weihnachtsnuss", function() {deepEqual( Stem("weihnachtsnüsse"), "weihnachtsnuss");});
test("weihnachtsstube -> weihnachtsstub", function() {deepEqual( Stem("weihnachtsstube"), "weihnachtsstub");});
test("weihnachtssüssigkeiten -> weihnachtssuss", function() {deepEqual( Stem("weihnachtssüssigkeiten"), "weihnachtssuss");});
test("weihnachtstisch -> weihnachtst", function() {deepEqual( Stem("weihnachtstisch"), "weihnachtst");});
test("weihnachtsvesper -> weihnachtsvesp", function() {deepEqual( Stem("weihnachtsvesper"), "weihnachtsvesp");});
test("weihnachtswiese -> weihnachtswies", function() {deepEqual( Stem("weihnachtswiese"), "weihnachtswies");});
test("weihrauch -> weihrauch", function() {deepEqual( Stem("weihrauch"), "weihrauch");});
test("weil -> weil", function() {deepEqual( Stem("weil"), "weil");});
test("weilchen -> weilch", function() {deepEqual( Stem("weilchen"), "weilch");});
test("weile -> weil", function() {deepEqual( Stem("weile"), "weil");});
test("weilen -> weil", function() {deepEqual( Stem("weilen"), "weil");});
test("weilt -> weilt", function() {deepEqual( Stem("weilt"), "weilt");});
test("weilte -> weilt", function() {deepEqual( Stem("weilte"), "weilt");});
test("wein -> wein", function() {deepEqual( Stem("wein"), "wein");});
test("weinbeere -> weinbe", function() {deepEqual( Stem("weinbeere"), "weinbe");});
test("weinberg -> weinberg", function() {deepEqual( Stem("weinberg"), "weinberg");});
test("weinberge -> weinberg", function() {deepEqual( Stem("weinberge"), "weinberg");});
test("weinbergswachteln -> weinbergswachteln", function() {deepEqual( Stem("weinbergswachteln"), "weinbergswachteln");});
test("weine -> wein", function() {deepEqual( Stem("weine"), "wein");});
test("weinen -> wein", function() {deepEqual( Stem("weinen"), "wein");});
test("weinend -> weinend", function() {deepEqual( Stem("weinend"), "weinend");});
test("weinendes -> weinend", function() {deepEqual( Stem("weinendes"), "weinend");});
test("weinerlich -> wein", function() {deepEqual( Stem("weinerlich"), "wein");});
test("weines -> wein", function() {deepEqual( Stem("weines"), "wein");});
test("weinet -> weinet", function() {deepEqual( Stem("weinet"), "weinet");});
test("weinflaschen -> weinflasch", function() {deepEqual( Stem("weinflaschen"), "weinflasch");});
test("weingärtner -> weingartn", function() {deepEqual( Stem("weingärtner"), "weingartn");});
test("weingefässe -> weingefass", function() {deepEqual( Stem("weingefässe"), "weingefass");});
test("weingefäße -> weingefass", function() {deepEqual( Stem("weingefäße"), "weingefass");});
test("weinreben -> weinreb", function() {deepEqual( Stem("weinreben"), "weinreb");});
test("weinrot -> weinrot", function() {deepEqual( Stem("weinrot"), "weinrot");});
test("weins -> wein", function() {deepEqual( Stem("weins"), "wein");});
test("weinsorten -> weinsort", function() {deepEqual( Stem("weinsorten"), "weinsort");});
test("weinstock -> weinstock", function() {deepEqual( Stem("weinstock"), "weinstock");});
test("weint -> weint", function() {deepEqual( Stem("weint"), "weint");});
test("weinte -> weint", function() {deepEqual( Stem("weinte"), "weint");});
test("weinten -> weint", function() {deepEqual( Stem("weinten"), "weint");});
test("weintrinken -> weintrink", function() {deepEqual( Stem("weintrinken"), "weintrink");});
test("weintrinker -> weintrink", function() {deepEqual( Stem("weintrinker"), "weintrink");});
test("weise -> weis", function() {deepEqual( Stem("weise"), "weis");});
test("weisen -> weis", function() {deepEqual( Stem("weisen"), "weis");});
test("weiser -> weis", function() {deepEqual( Stem("weiser"), "weis");});
test("weisesten -> weis", function() {deepEqual( Stem("weisesten"), "weis");});
test("weisheit -> weisheit", function() {deepEqual( Stem("weisheit"), "weisheit");});
test("weisheiten -> weisheit", function() {deepEqual( Stem("weisheiten"), "weisheit");});
test("weisheitslehre -> weisheitslehr", function() {deepEqual( Stem("weisheitslehre"), "weisheitslehr");});
test("weisheitslehrer -> weisheitslehr", function() {deepEqual( Stem("weisheitslehrer"), "weisheitslehr");});
test("weislich -> weislich", function() {deepEqual( Stem("weislich"), "weislich");});
test("weiss -> weiss", function() {deepEqual( Stem("weiss"), "weiss");});
test("weiß -> weiss", function() {deepEqual( Stem("weiß"), "weiss");});
test("weissage -> weissag", function() {deepEqual( Stem("weissage"), "weissag");});
test("weissagen -> weissag", function() {deepEqual( Stem("weissagen"), "weissag");});
test("weissagenden -> weissag", function() {deepEqual( Stem("weissagenden"), "weissag");});
test("weissagt -> weissagt", function() {deepEqual( Stem("weissagt"), "weissagt");});
test("weissagte -> weissagt", function() {deepEqual( Stem("weissagte"), "weissagt");});
test("weissagung -> weissag", function() {deepEqual( Stem("weissagung"), "weissag");});
test("weissbefilzte -> weissbefilzt", function() {deepEqual( Stem("weissbefilzte"), "weissbefilzt");});
test("weißbefilzte -> weissbefilzt", function() {deepEqual( Stem("weißbefilzte"), "weissbefilzt");});
test("weissbrot -> weissbrot", function() {deepEqual( Stem("weissbrot"), "weissbrot");});
test("weisse -> weiss", function() {deepEqual( Stem("weisse"), "weiss");});
test("weiße -> weiss", function() {deepEqual( Stem("weiße"), "weiss");});
test("weissem -> weiss", function() {deepEqual( Stem("weissem"), "weiss");});
test("weißem -> weiss", function() {deepEqual( Stem("weißem"), "weiss");});
test("weissen -> weiss", function() {deepEqual( Stem("weissen"), "weiss");});
test("weißen -> weiss", function() {deepEqual( Stem("weißen"), "weiss");});
test("weisser -> weiss", function() {deepEqual( Stem("weisser"), "weiss");});
test("weißer -> weiss", function() {deepEqual( Stem("weißer"), "weiss");});
test("weisseren -> weiss", function() {deepEqual( Stem("weisseren"), "weiss");});
test("weisses -> weiss", function() {deepEqual( Stem("weisses"), "weiss");});
test("weißes -> weiss", function() {deepEqual( Stem("weißes"), "weiss");});
test("weissgetünchten -> weissgetuncht", function() {deepEqual( Stem("weissgetünchten"), "weissgetuncht");});
test("weißgetünchten -> weissgetuncht", function() {deepEqual( Stem("weißgetünchten"), "weissgetuncht");});
test("weissgetüpfeltem -> weissgetupfelt", function() {deepEqual( Stem("weissgetüpfeltem"), "weissgetupfelt");});
test("weissglasierte -> weissglasiert", function() {deepEqual( Stem("weissglasierte"), "weissglasiert");});
test("weisshaarige -> weisshaar", function() {deepEqual( Stem("weisshaarige"), "weisshaar");});
test("weißhaarige -> weisshaar", function() {deepEqual( Stem("weißhaarige"), "weisshaar");});
test("weisshaupt -> weisshaupt", function() {deepEqual( Stem("weisshaupt"), "weisshaupt");});
test("weisskohl -> weisskohl", function() {deepEqual( Stem("weisskohl"), "weisskohl");});
test("weissleinen -> weisslein", function() {deepEqual( Stem("weissleinen"), "weisslein");});
test("weißleinen -> weisslein", function() {deepEqual( Stem("weißleinen"), "weisslein");});
test("weissseidenen -> weissseid", function() {deepEqual( Stem("weissseidenen"), "weissseid");});
test("weißseidenen -> weissseid", function() {deepEqual( Stem("weißseidenen"), "weissseid");});
test("weisst -> weisst", function() {deepEqual( Stem("weisst"), "weisst");});
test("weißt -> weisst", function() {deepEqual( Stem("weißt"), "weisst");});
test("weist -> weist", function() {deepEqual( Stem("weist"), "weist");});
test("weisung -> weisung", function() {deepEqual( Stem("weisung"), "weisung");});
test("weisungen -> weisung", function() {deepEqual( Stem("weisungen"), "weisung");});
test("weisungsbefugnisse -> weisungsbefugnis", function() {deepEqual( Stem("weisungsbefugnisse"), "weisungsbefugnis");});
test("weit -> weit", function() {deepEqual( Stem("weit"), "weit");});
test("weite -> weit", function() {deepEqual( Stem("weite"), "weit");});
test("weitem -> weit", function() {deepEqual( Stem("weitem"), "weit");});
test("weiten -> weit", function() {deepEqual( Stem("weiten"), "weit");});
test("weitentlegenen -> weitentleg", function() {deepEqual( Stem("weitentlegenen"), "weitentleg");});
test("weiter -> weit", function() {deepEqual( Stem("weiter"), "weit");});
test("weitere -> weit", function() {deepEqual( Stem("weitere"), "weit");});
test("weiterem -> weit", function() {deepEqual( Stem("weiterem"), "weit");});
test("weiteren -> weit", function() {deepEqual( Stem("weiteren"), "weit");});
test("weiterer -> weit", function() {deepEqual( Stem("weiterer"), "weit");});
test("weiteres -> weit", function() {deepEqual( Stem("weiteres"), "weit");});
test("weiterfliehen -> weiterflieh", function() {deepEqual( Stem("weiterfliehen"), "weiterflieh");});
test("weiterführen -> weiterfuhr", function() {deepEqual( Stem("weiterführen"), "weiterfuhr");});
test("weitergang -> weitergang", function() {deepEqual( Stem("weitergang"), "weitergang");});
test("weitergebildet -> weitergebildet", function() {deepEqual( Stem("weitergebildet"), "weitergebildet");});
test("weitergebracht -> weitergebracht", function() {deepEqual( Stem("weitergebracht"), "weitergebracht");});
test("weitergegangen -> weitergegang", function() {deepEqual( Stem("weitergegangen"), "weitergegang");});
test("weitergegeben -> weitergegeb", function() {deepEqual( Stem("weitergegeben"), "weitergegeb");});
test("weitergehen -> weitergeh", function() {deepEqual( Stem("weitergehen"), "weitergeh");});
test("weitergezogen -> weitergezog", function() {deepEqual( Stem("weitergezogen"), "weitergezog");});
test("weiterhin -> weiterhin", function() {deepEqual( Stem("weiterhin"), "weiterhin");});
test("weiterjagte -> weiterjagt", function() {deepEqual( Stem("weiterjagte"), "weiterjagt");});
test("weitern -> weit", function() {deepEqual( Stem("weitern"), "weit");});
test("weiterrutschte -> weiterrutscht", function() {deepEqual( Stem("weiterrutschte"), "weiterrutscht");});
test("weiters -> weit", function() {deepEqual( Stem("weiters"), "weit");});
test("weiterschritten -> weiterschritt", function() {deepEqual( Stem("weiterschritten"), "weiterschritt");});
test("weitersprach -> weitersprach", function() {deepEqual( Stem("weitersprach"), "weitersprach");});
test("weiterverkauft -> weiterverkauft", function() {deepEqual( Stem("weiterverkauft"), "weiterverkauft");});
test("weiterziehen -> weiterzieh", function() {deepEqual( Stem("weiterziehen"), "weiterzieh");});
test("weiterzogen -> weiterzog", function() {deepEqual( Stem("weiterzogen"), "weiterzog");});
test("weiterzuführen -> weiterzufuhr", function() {deepEqual( Stem("weiterzuführen"), "weiterzufuhr");});
test("weiterzureden -> weiterzured", function() {deepEqual( Stem("weiterzureden"), "weiterzured");});
test("weites -> weit", function() {deepEqual( Stem("weites"), "weit");});
test("weitesten -> weit", function() {deepEqual( Stem("weitesten"), "weit");});
test("weitgedehnte -> weitgedehnt", function() {deepEqual( Stem("weitgedehnte"), "weitgedehnt");});
test("weitgehend -> weitgeh", function() {deepEqual( Stem("weitgehend"), "weitgeh");});
test("weitgespannten -> weitgespannt", function() {deepEqual( Stem("weitgespannten"), "weitgespannt");});
test("weitherausstehenden -> weitheraussteh", function() {deepEqual( Stem("weitherausstehenden"), "weitheraussteh");});
test("weithin -> weithin", function() {deepEqual( Stem("weithin"), "weithin");});
test("weithingestreckt -> weithingestreckt", function() {deepEqual( Stem("weithingestreckt"), "weithingestreckt");});
test("weitläufig -> weitlauf", function() {deepEqual( Stem("weitläufig"), "weitlauf");});
test("weitläufige -> weitlauf", function() {deepEqual( Stem("weitläufige"), "weitlauf");});
test("weitläufigen -> weitlauf", function() {deepEqual( Stem("weitläufigen"), "weitlauf");});
test("weitschwingende -> weitschwing", function() {deepEqual( Stem("weitschwingende"), "weitschwing");});
test("weizen -> weiz", function() {deepEqual( Stem("weizen"), "weiz");});
test("weizenbrot -> weizenbrot", function() {deepEqual( Stem("weizenbrot"), "weizenbrot");});
test("weizenmehl -> weizenmehl", function() {deepEqual( Stem("weizenmehl"), "weizenmehl");});
test("weizens -> weiz", function() {deepEqual( Stem("weizens"), "weiz");});
test("welch -> welch", function() {deepEqual( Stem("welch"), "welch");});
test("welche -> welch", function() {deepEqual( Stem("welche"), "welch");});
test("welchem -> welch", function() {deepEqual( Stem("welchem"), "welch");});
test("welchen -> welch", function() {deepEqual( Stem("welchen"), "welch");});
test("welcher -> welch", function() {deepEqual( Stem("welcher"), "welch");});
test("welcherart -> welcherart", function() {deepEqual( Stem("welcherart"), "welcherart");});
test("welcherlei -> welcherlei", function() {deepEqual( Stem("welcherlei"), "welcherlei");});
test("welches -> welch", function() {deepEqual( Stem("welches"), "welch");});
test("welk -> welk", function() {deepEqual( Stem("welk"), "welk");});
test("welken -> welk", function() {deepEqual( Stem("welken"), "welk");});
test("welkenden -> welkend", function() {deepEqual( Stem("welkenden"), "welkend");});
test("well -> well", function() {deepEqual( Stem("well"), "well");});
test("welle -> well", function() {deepEqual( Stem("welle"), "well");});
test("wellen -> well", function() {deepEqual( Stem("wellen"), "well");});
test("wellenfurchen -> wellenfurch", function() {deepEqual( Stem("wellenfurchen"), "wellenfurch");});
test("welt -> welt", function() {deepEqual( Stem("welt"), "welt");});
test("weltall -> weltall", function() {deepEqual( Stem("weltall"), "weltall");});
test("weltalls -> weltall", function() {deepEqual( Stem("weltalls"), "weltall");});
test("weltanschauung -> weltanschau", function() {deepEqual( Stem("weltanschauung"), "weltanschau");});
test("weltanschauungfragen -> weltanschauungfrag", function() {deepEqual( Stem("weltanschauungfragen"), "weltanschauungfrag");});
test("weltbau -> weltbau", function() {deepEqual( Stem("weltbau"), "weltbau");});
test("weltbegebenheiten -> weltbegeb", function() {deepEqual( Stem("weltbegebenheiten"), "weltbegeb");});
test("weltbetrachtung -> weltbetracht", function() {deepEqual( Stem("weltbetrachtung"), "weltbetracht");});
test("weltbewegenden -> weltbeweg", function() {deepEqual( Stem("weltbewegenden"), "weltbeweg");});
test("weltbund -> weltbund", function() {deepEqual( Stem("weltbund"), "weltbund");});
test("weltbundes -> weltbund", function() {deepEqual( Stem("weltbundes"), "weltbund");});
test("welten -> welt", function() {deepEqual( Stem("welten"), "welt");});
test("weltenmenge -> weltenmeng", function() {deepEqual( Stem("weltenmenge"), "weltenmeng");});
test("weltenraum -> weltenraum", function() {deepEqual( Stem("weltenraum"), "weltenraum");});
test("weltgebäudes -> weltgebaud", function() {deepEqual( Stem("weltgebäudes"), "weltgebaud");});
test("weltkongress -> weltkongress", function() {deepEqual( Stem("weltkongress"), "weltkongress");});
test("weltkörper -> weltkorp", function() {deepEqual( Stem("weltkörper"), "weltkorp");});
test("weltkreis -> weltkreis", function() {deepEqual( Stem("weltkreis"), "weltkreis");});
test("weltkreises -> weltkreis", function() {deepEqual( Stem("weltkreises"), "weltkreis");});
test("weltkrieg -> weltkrieg", function() {deepEqual( Stem("weltkrieg"), "weltkrieg");});
test("weltkriegs -> weltkrieg", function() {deepEqual( Stem("weltkriegs"), "weltkrieg");});
test("weltlich -> weltlich", function() {deepEqual( Stem("weltlich"), "weltlich");});
test("weltliche -> weltlich", function() {deepEqual( Stem("weltliche"), "weltlich");});
test("weltlichen -> weltlich", function() {deepEqual( Stem("weltlichen"), "weltlich");});
test("weltlicher -> weltlich", function() {deepEqual( Stem("weltlicher"), "weltlich");});
test("weltliches -> weltlich", function() {deepEqual( Stem("weltliches"), "weltlich");});
test("weltlicht -> weltlicht", function() {deepEqual( Stem("weltlicht"), "weltlicht");});
test("weltliebe -> weltlieb", function() {deepEqual( Stem("weltliebe"), "weltlieb");});
test("weltmann -> weltmann", function() {deepEqual( Stem("weltmann"), "weltmann");});
test("weltmeers -> weltme", function() {deepEqual( Stem("weltmeers"), "weltme");});
test("weltnacht -> weltnacht", function() {deepEqual( Stem("weltnacht"), "weltnacht");});
test("weltordnung -> weltordn", function() {deepEqual( Stem("weltordnung"), "weltordn");});
test("weltregierer -> weltregi", function() {deepEqual( Stem("weltregierer"), "weltregi");});
test("weltschmerzlich -> weltschmerz", function() {deepEqual( Stem("weltschmerzlich"), "weltschmerz");});
test("weltschöpfer -> weltschopf", function() {deepEqual( Stem("weltschöpfer"), "weltschopf");});
test("weltstrome -> weltstrom", function() {deepEqual( Stem("weltstrome"), "weltstrom");});
test("weltteilen -> weltteil", function() {deepEqual( Stem("weltteilen"), "weltteil");});
test("welturheber -> welturheb", function() {deepEqual( Stem("welturheber"), "welturheb");});
test("welturhebers -> welturheb", function() {deepEqual( Stem("welturhebers"), "welturheb");});
test("weltursachen -> weltursach", function() {deepEqual( Stem("weltursachen"), "weltursach");});
test("weltverantwortung -> weltverantwort", function() {deepEqual( Stem("weltverantwortung"), "weltverantwort");});
test("weltweisheit -> weltweis", function() {deepEqual( Stem("weltweisheit"), "weltweis");});
test("weltweit -> weltweit", function() {deepEqual( Stem("weltweit"), "weltweit");});
test("wem -> wem", function() {deepEqual( Stem("wem"), "wem");});
test("wen -> wen", function() {deepEqual( Stem("wen"), "wen");});
test("wende -> wend", function() {deepEqual( Stem("wende"), "wend");});
test("wenden -> wend", function() {deepEqual( Stem("wenden"), "wend");});
test("wendend -> wendend", function() {deepEqual( Stem("wendend"), "wendend");});
test("wendenden -> wendend", function() {deepEqual( Stem("wendenden"), "wendend");});
test("wendet -> wendet", function() {deepEqual( Stem("wendet"), "wendet");});
test("wendete -> wendet", function() {deepEqual( Stem("wendete"), "wendet");});
test("wendeten -> wendet", function() {deepEqual( Stem("wendeten"), "wendet");});
test("wendrich -> wendrich", function() {deepEqual( Stem("wendrich"), "wendrich");});
test("wendung -> wendung", function() {deepEqual( Stem("wendung"), "wendung");});
test("wendungen -> wendung", function() {deepEqual( Stem("wendungen"), "wendung");});
test("wenig -> wenig", function() {deepEqual( Stem("wenig"), "wenig");});
test("wenige -> wenig", function() {deepEqual( Stem("wenige"), "wenig");});
test("wenigem -> wenig", function() {deepEqual( Stem("wenigem"), "wenig");});
test("wenigen -> wenig", function() {deepEqual( Stem("wenigen"), "wenig");});
test("weniger -> wenig", function() {deepEqual( Stem("weniger"), "wenig");});
test("wenigere -> wenig", function() {deepEqual( Stem("wenigere"), "wenig");});
test("weniges -> wenig", function() {deepEqual( Stem("weniges"), "wenig");});
test("wenigsten -> wenig", function() {deepEqual( Stem("wenigsten"), "wenig");});
test("wenigstens -> wenigst", function() {deepEqual( Stem("wenigstens"), "wenigst");});
test("wenn -> wenn", function() {deepEqual( Stem("wenn"), "wenn");});
test("wenngleich -> wenngleich", function() {deepEqual( Stem("wenngleich"), "wenngleich");});
test("wenzel -> wenzel", function() {deepEqual( Stem("wenzel"), "wenzel");});
test("wer -> wer", function() {deepEqual( Stem("wer"), "wer");});
test("werbebeschränkungen -> werbebeschrank", function() {deepEqual( Stem("werbebeschränkungen"), "werbebeschrank");});
test("werben -> werb", function() {deepEqual( Stem("werben"), "werb");});
test("werd -> werd", function() {deepEqual( Stem("werd"), "werd");});
test("werde -> werd", function() {deepEqual( Stem("werde"), "werd");});
test("werden -> werd", function() {deepEqual( Stem("werden"), "werd");});
test("werdend -> werdend", function() {deepEqual( Stem("werdend"), "werdend");});
test("werdende -> werdend", function() {deepEqual( Stem("werdende"), "werdend");});
test("werdenden -> werdend", function() {deepEqual( Stem("werdenden"), "werdend");});
test("werdest -> werd", function() {deepEqual( Stem("werdest"), "werd");});
test("werdet -> werdet", function() {deepEqual( Stem("werdet"), "werdet");});
test("werfe -> werf", function() {deepEqual( Stem("werfe"), "werf");});
test("werfen -> werf", function() {deepEqual( Stem("werfen"), "werf");});
test("werften -> werft", function() {deepEqual( Stem("werften"), "werft");});
test("werg -> werg", function() {deepEqual( Stem("werg"), "werg");});
test("wergg -> wergg", function() {deepEqual( Stem("wergg"), "wergg");});
test("werk -> werk", function() {deepEqual( Stem("werk"), "werk");});
test("werke -> werk", function() {deepEqual( Stem("werke"), "werk");});
test("werkeltagskleider -> werkeltagskleid", function() {deepEqual( Stem("werkeltagskleider"), "werkeltagskleid");});
test("werken -> werk", function() {deepEqual( Stem("werken"), "werk");});
test("werkes -> werk", function() {deepEqual( Stem("werkes"), "werk");});
test("werkführer -> werkfuhr", function() {deepEqual( Stem("werkführer"), "werkfuhr");});
test("werkführers -> werkfuhr", function() {deepEqual( Stem("werkführers"), "werkfuhr");});
test("werkmeister -> werkmeist", function() {deepEqual( Stem("werkmeister"), "werkmeist");});
test("werkstatt -> werkstatt", function() {deepEqual( Stem("werkstatt"), "werkstatt");});
test("werktag -> werktag", function() {deepEqual( Stem("werktag"), "werktag");});
test("werktagen -> werktag", function() {deepEqual( Stem("werktagen"), "werktag");});
test("werktagsmontur -> werktagsmontur", function() {deepEqual( Stem("werktagsmontur"), "werktagsmontur");});
test("werktätigen -> werktat", function() {deepEqual( Stem("werktätigen"), "werktat");});
test("werktätigkeit -> werktat", function() {deepEqual( Stem("werktätigkeit"), "werktat");});
test("werkzeug -> werkzeug", function() {deepEqual( Stem("werkzeug"), "werkzeug");});
test("werkzeuge -> werkzeug", function() {deepEqual( Stem("werkzeuge"), "werkzeug");});
test("werkzeugliches -> werkzeug", function() {deepEqual( Stem("werkzeugliches"), "werkzeug");});
test("wert -> wert", function() {deepEqual( Stem("wert"), "wert");});
test("werte -> wert", function() {deepEqual( Stem("werte"), "wert");});
test("werten -> wert", function() {deepEqual( Stem("werten"), "wert");});
test("werterziehung -> werterzieh", function() {deepEqual( Stem("werterziehung"), "werterzieh");});
test("werteste -> wert", function() {deepEqual( Stem("werteste"), "wert");});
test("werteverfall -> werteverfall", function() {deepEqual( Stem("werteverfall"), "werteverfall");});
test("wertlos -> wertlos", function() {deepEqual( Stem("wertlos"), "wertlos");});
test("wertlose -> wertlos", function() {deepEqual( Stem("wertlose"), "wertlos");});
test("wertlosigkeit -> wertlos", function() {deepEqual( Stem("wertlosigkeit"), "wertlos");});
test("werts -> wert", function() {deepEqual( Stem("werts"), "wert");});
test("wertvoll -> wertvoll", function() {deepEqual( Stem("wertvoll"), "wertvoll");});
test("wertvolle -> wertvoll", function() {deepEqual( Stem("wertvolle"), "wertvoll");});
test("wertvollen -> wertvoll", function() {deepEqual( Stem("wertvollen"), "wertvoll");});
test("wertvollste -> wertvoll", function() {deepEqual( Stem("wertvollste"), "wertvoll");});
test("wes -> wes", function() {deepEqual( Stem("wes"), "wes");});
test("wesen -> wes", function() {deepEqual( Stem("wesen"), "wes");});
test("wesenlosen -> wesenlos", function() {deepEqual( Stem("wesenlosen"), "wesenlos");});
test("wesens -> wes", function() {deepEqual( Stem("wesens"), "wes");});
test("wesentlich -> wesent", function() {deepEqual( Stem("wesentlich"), "wesent");});
test("wesentliche -> wesent", function() {deepEqual( Stem("wesentliche"), "wesent");});
test("wesentlichen -> wesent", function() {deepEqual( Stem("wesentlichen"), "wesent");});
test("wesentlicher -> wesent", function() {deepEqual( Stem("wesentlicher"), "wesent");});
test("wesentliches -> wesent", function() {deepEqual( Stem("wesentliches"), "wesent");});
test("wesentlichste -> wesent", function() {deepEqual( Stem("wesentlichste"), "wesent");});
test("weshalb -> weshalb", function() {deepEqual( Stem("weshalb"), "weshalb");});
test("wespe -> wesp", function() {deepEqual( Stem("wespe"), "wesp");});
test("wessen -> wess", function() {deepEqual( Stem("wessen"), "wess");});
test("west -> west", function() {deepEqual( Stem("west"), "west");});
test("westdeutschen -> westdeutsch", function() {deepEqual( Stem("westdeutschen"), "westdeutsch");});
test("westdeutscher -> westdeutsch", function() {deepEqual( Stem("westdeutscher"), "westdeutsch");});
test("westdeutschland -> westdeutschland", function() {deepEqual( Stem("westdeutschland"), "westdeutschland");});
test("weste -> west", function() {deepEqual( Stem("weste"), "west");});
test("westen -> west", function() {deepEqual( Stem("westen"), "west");});
test("westenstoff -> westenstoff", function() {deepEqual( Stem("westenstoff"), "westenstoff");});
test("westenstreifen -> westenstreif", function() {deepEqual( Stem("westenstreifen"), "westenstreif");});
test("westfalen -> westfal", function() {deepEqual( Stem("westfalen"), "westfal");});
test("westfirmen -> westfirm", function() {deepEqual( Stem("westfirmen"), "westfirm");});
test("westlertum -> westlertum", function() {deepEqual( Stem("westlertum"), "westlertum");});
test("westlichen -> westlich", function() {deepEqual( Stem("westlichen"), "westlich");});
test("westliches -> westlich", function() {deepEqual( Stem("westliches"), "westlich");});
test("westschweizer -> westschweiz", function() {deepEqual( Stem("westschweizer"), "westschweiz");});
test("westtürkischen -> westturk", function() {deepEqual( Stem("westtürkischen"), "westturk");});
test("westwind -> westwind", function() {deepEqual( Stem("westwind"), "westwind");});
test("westwindes -> westwind", function() {deepEqual( Stem("westwindes"), "westwind");});
test("weswegen -> wesweg", function() {deepEqual( Stem("weswegen"), "wesweg");});
test("wette -> wett", function() {deepEqual( Stem("wette"), "wett");});
test("wetteifern -> wetteif", function() {deepEqual( Stem("wetteifern"), "wetteif");});
test("wetteiferten -> wetteifert", function() {deepEqual( Stem("wetteiferten"), "wetteifert");});
test("wetten -> wett", function() {deepEqual( Stem("wetten"), "wett");});
test("wetter -> wett", function() {deepEqual( Stem("wetter"), "wett");});
test("wetterbeschädigten -> wetterbeschadigt", function() {deepEqual( Stem("wetterbeschädigten"), "wetterbeschadigt");});
test("wetternacht -> wetternacht", function() {deepEqual( Stem("wetternacht"), "wetternacht");});
test("wetters -> wett", function() {deepEqual( Stem("wetters"), "wett");});
test("wetterwendisch -> wetterwend", function() {deepEqual( Stem("wetterwendisch"), "wetterwend");});
test("wetterwind -> wetterwind", function() {deepEqual( Stem("wetterwind"), "wetterwind");});
test("wettkampf -> wettkampf", function() {deepEqual( Stem("wettkampf"), "wettkampf");});
test("wettlauf -> wettlauf", function() {deepEqual( Stem("wettlauf"), "wettlauf");});
test("wettlaufens -> wettlauf", function() {deepEqual( Stem("wettlaufens"), "wettlauf");});
test("wettstreit -> wettstreit", function() {deepEqual( Stem("wettstreit"), "wettstreit");});
test("wetzend -> wetzend", function() {deepEqual( Stem("wetzend"), "wetzend");});
test("wetzte -> wetzt", function() {deepEqual( Stem("wetzte"), "wetzt");});
test("wich -> wich", function() {deepEqual( Stem("wich"), "wich");});
test("wichen -> wich", function() {deepEqual( Stem("wichen"), "wich");});
test("wichte -> wicht", function() {deepEqual( Stem("wichte"), "wicht");});
test("wichtig -> wichtig", function() {deepEqual( Stem("wichtig"), "wichtig");});
test("wichtige -> wichtig", function() {deepEqual( Stem("wichtige"), "wichtig");});
test("wichtigem -> wichtig", function() {deepEqual( Stem("wichtigem"), "wichtig");});
test("wichtigen -> wichtig", function() {deepEqual( Stem("wichtigen"), "wichtig");});
test("wichtiger -> wichtig", function() {deepEqual( Stem("wichtiger"), "wichtig");});
test("wichtigere -> wichtig", function() {deepEqual( Stem("wichtigere"), "wichtig");});
test("wichtigeren -> wichtig", function() {deepEqual( Stem("wichtigeren"), "wichtig");});
test("wichtiges -> wichtig", function() {deepEqual( Stem("wichtiges"), "wichtig");});
test("wichtigkeit -> wichtig", function() {deepEqual( Stem("wichtigkeit"), "wichtig");});
test("wichtigste -> wichtig", function() {deepEqual( Stem("wichtigste"), "wichtig");});
test("wichtigsten -> wichtig", function() {deepEqual( Stem("wichtigsten"), "wichtig");});
test("wichtigtuerei -> wichtigtuerei", function() {deepEqual( Stem("wichtigtuerei"), "wichtigtuerei");});
test("wickelkindchen -> wickelkindch", function() {deepEqual( Stem("wickelkindchen"), "wickelkindch");});
test("wickelte -> wickelt", function() {deepEqual( Stem("wickelte"), "wickelt");});
test("widder -> widd", function() {deepEqual( Stem("widder"), "widd");});
test("widderfellen -> widderfell", function() {deepEqual( Stem("widderfellen"), "widderfell");});
test("widdern -> widd", function() {deepEqual( Stem("widdern"), "widd");});
test("widders -> widd", function() {deepEqual( Stem("widders"), "widd");});
test("wide -> wid", function() {deepEqual( Stem("wide"), "wid");});
test("wider -> wid", function() {deepEqual( Stem("wider"), "wid");});
test("widerfahre -> widerfahr", function() {deepEqual( Stem("widerfahre"), "widerfahr");});
test("widerfahren -> widerfahr", function() {deepEqual( Stem("widerfahren"), "widerfahr");});
test("widerfährt -> widerfahrt", function() {deepEqual( Stem("widerfährt"), "widerfahrt");});
test("widerfuhr -> widerfuhr", function() {deepEqual( Stem("widerfuhr"), "widerfuhr");});
test("widergehallt -> widergehallt", function() {deepEqual( Stem("widergehallt"), "widergehallt");});
test("widergöttlich -> widergott", function() {deepEqual( Stem("widergöttlich"), "widergott");});
test("widerhaarig -> widerhaar", function() {deepEqual( Stem("widerhaarig"), "widerhaar");});
test("widerhall -> widerhall", function() {deepEqual( Stem("widerhall"), "widerhall");});
test("widerhallte -> widerhallt", function() {deepEqual( Stem("widerhallte"), "widerhallt");});
test("widerhallten -> widerhallt", function() {deepEqual( Stem("widerhallten"), "widerhallt");});
test("widerlegen -> widerleg", function() {deepEqual( Stem("widerlegen"), "widerleg");});
test("widerlegt -> widerlegt", function() {deepEqual( Stem("widerlegt"), "widerlegt");});
test("widerlegung -> widerleg", function() {deepEqual( Stem("widerlegung"), "widerleg");});
test("widerlegungen -> widerleg", function() {deepEqual( Stem("widerlegungen"), "widerleg");});
test("widerlich -> wid", function() {deepEqual( Stem("widerlich"), "wid");});
test("widerlichen -> wid", function() {deepEqual( Stem("widerlichen"), "wid");});
test("widerred -> widerred", function() {deepEqual( Stem("widerred"), "widerred");});
test("widerrede -> widerred", function() {deepEqual( Stem("widerrede"), "widerred");});
test("widersacher -> widersach", function() {deepEqual( Stem("widersacher"), "widersach");});
test("widerschein -> widerschein", function() {deepEqual( Stem("widerschein"), "widerschein");});
test("widersetzen -> widersetz", function() {deepEqual( Stem("widersetzen"), "widersetz");});
test("widersetzlichkeit -> widersetz", function() {deepEqual( Stem("widersetzlichkeit"), "widersetz");});
test("widersetzt -> widersetzt", function() {deepEqual( Stem("widersetzt"), "widersetzt");});
test("widersetzte -> widersetzt", function() {deepEqual( Stem("widersetzte"), "widersetzt");});
test("widersetzten -> widersetzt", function() {deepEqual( Stem("widersetzten"), "widersetzt");});
test("widersetzung -> widersetz", function() {deepEqual( Stem("widersetzung"), "widersetz");});
test("widersinnig -> widersinn", function() {deepEqual( Stem("widersinnig"), "widersinn");});
test("widersinnisch -> widersinn", function() {deepEqual( Stem("widersinnisch"), "widersinn");});
test("widerspenstig -> widerspenst", function() {deepEqual( Stem("widerspenstig"), "widerspenst");});
test("widerspenstige -> widerspenst", function() {deepEqual( Stem("widerspenstige"), "widerspenst");});
test("widerspenstigsten -> widerspenst", function() {deepEqual( Stem("widerspenstigsten"), "widerspenst");});
test("widerspiele -> widerspiel", function() {deepEqual( Stem("widerspiele"), "widerspiel");});
test("widersprach -> widersprach", function() {deepEqual( Stem("widersprach"), "widersprach");});
test("widerspreche -> widersprech", function() {deepEqual( Stem("widerspreche"), "widersprech");});
test("widersprechen -> widersprech", function() {deepEqual( Stem("widersprechen"), "widersprech");});
test("widersprechend -> widersprech", function() {deepEqual( Stem("widersprechend"), "widersprech");});
test("widersprechende -> widersprech", function() {deepEqual( Stem("widersprechende"), "widersprech");});
test("widersprechenden -> widersprech", function() {deepEqual( Stem("widersprechenden"), "widersprech");});
test("widersprechender -> widersprech", function() {deepEqual( Stem("widersprechender"), "widersprech");});
test("widerspricht -> widerspricht", function() {deepEqual( Stem("widerspricht"), "widerspricht");});
test("widerspruch -> widerspruch", function() {deepEqual( Stem("widerspruch"), "widerspruch");});
test("widersprüche -> widerspruch", function() {deepEqual( Stem("widersprüche"), "widerspruch");});
test("widerspruchs -> widerspruch", function() {deepEqual( Stem("widerspruchs"), "widerspruch");});
test("widerstand -> widerstand", function() {deepEqual( Stem("widerstand"), "widerstand");});
test("widerstande -> widerstand", function() {deepEqual( Stem("widerstande"), "widerstand");});
test("widerstanden -> widerstand", function() {deepEqual( Stem("widerstanden"), "widerstand");});
test("widerstandes -> widerstand", function() {deepEqual( Stem("widerstandes"), "widerstand");});
test("widerstandslos -> widerstandslos", function() {deepEqual( Stem("widerstandslos"), "widerstandslos");});
test("widerstehen -> widersteh", function() {deepEqual( Stem("widerstehen"), "widersteh");});
test("widerstehende -> widersteh", function() {deepEqual( Stem("widerstehende"), "widersteh");});
test("widerstehendes -> widersteh", function() {deepEqual( Stem("widerstehendes"), "widersteh");});
test("widersteht -> widersteht", function() {deepEqual( Stem("widersteht"), "widersteht");});
test("widerstrebe -> widerstreb", function() {deepEqual( Stem("widerstrebe"), "widerstreb");});
test("widerstreben -> widerstreb", function() {deepEqual( Stem("widerstreben"), "widerstreb");});
test("widerstrebend -> widerstreb", function() {deepEqual( Stem("widerstrebend"), "widerstreb");});
test("widerstrebt -> widerstrebt", function() {deepEqual( Stem("widerstrebt"), "widerstrebt");});
test("widerstrebte -> widerstrebt", function() {deepEqual( Stem("widerstrebte"), "widerstrebt");});
test("widerstrebung -> widerstreb", function() {deepEqual( Stem("widerstrebung"), "widerstreb");});
test("widerstreit -> widerstreit", function() {deepEqual( Stem("widerstreit"), "widerstreit");});
test("widerstreiten -> widerstreit", function() {deepEqual( Stem("widerstreiten"), "widerstreit");});
test("widerstreitende -> widerstreit", function() {deepEqual( Stem("widerstreitende"), "widerstreit");});
test("widerstreitet -> widerstreitet", function() {deepEqual( Stem("widerstreitet"), "widerstreitet");});
test("widerstreits -> widerstreit", function() {deepEqual( Stem("widerstreits"), "widerstreit");});
test("widertönen -> widerton", function() {deepEqual( Stem("widertönen"), "widerton");});
test("widerwärtig -> widerwart", function() {deepEqual( Stem("widerwärtig"), "widerwart");});
test("widerwärtige -> widerwart", function() {deepEqual( Stem("widerwärtige"), "widerwart");});
test("widerwärtiger -> widerwart", function() {deepEqual( Stem("widerwärtiger"), "widerwart");});
test("widerwärtigsten -> widerwart", function() {deepEqual( Stem("widerwärtigsten"), "widerwart");});
test("widerwillen -> widerwill", function() {deepEqual( Stem("widerwillen"), "widerwill");});
test("widerwillens -> widerwill", function() {deepEqual( Stem("widerwillens"), "widerwill");});
test("widerwillig -> widerwill", function() {deepEqual( Stem("widerwillig"), "widerwill");});
test("widerwilliges -> widerwill", function() {deepEqual( Stem("widerwilliges"), "widerwill");});
test("widmen -> widm", function() {deepEqual( Stem("widmen"), "widm");});
test("widmet -> widmet", function() {deepEqual( Stem("widmet"), "widmet");});
test("widmete -> widmet", function() {deepEqual( Stem("widmete"), "widmet");});
test("widrig -> widrig", function() {deepEqual( Stem("widrig"), "widrig");});
test("widrige -> widrig", function() {deepEqual( Stem("widrige"), "widrig");});
test("widrigen -> widrig", function() {deepEqual( Stem("widrigen"), "widrig");});
test("widrigenfalls -> widrigenfall", function() {deepEqual( Stem("widrigenfalls"), "widrigenfall");});
test("wie -> wie", function() {deepEqual( Stem("wie"), "wie");});
test("wieder -> wied", function() {deepEqual( Stem("wieder"), "wied");});
test("wiederaufbaus -> wiederaufbaus", function() {deepEqual( Stem("wiederaufbaus"), "wiederaufbaus");});
test("wiederaufleben -> wiederaufleb", function() {deepEqual( Stem("wiederaufleben"), "wiederaufleb");});
test("wiederaufnahmen -> wiederaufnahm", function() {deepEqual( Stem("wiederaufnahmen"), "wiederaufnahm");});
test("wiederaufrichtungen -> wiederaufricht", function() {deepEqual( Stem("wiederaufrichtungen"), "wiederaufricht");});
test("wiederbekam -> wiederbekam", function() {deepEqual( Stem("wiederbekam"), "wiederbekam");});
test("wiederbekomme -> wiederbekomm", function() {deepEqual( Stem("wiederbekomme"), "wiederbekomm");});
test("wiederbelebt -> wiederbelebt", function() {deepEqual( Stem("wiederbelebt"), "wiederbelebt");});
test("wiederbringer -> wiederbring", function() {deepEqual( Stem("wiederbringer"), "wiederbring");});
test("wiederentdeckung -> wiederentdeck", function() {deepEqual( Stem("wiederentdeckung"), "wiederentdeck");});
test("wiedererlangte -> wiedererlangt", function() {deepEqual( Stem("wiedererlangte"), "wiedererlangt");});
test("wiederfanden -> wiederfand", function() {deepEqual( Stem("wiederfanden"), "wiederfand");});
test("wiederfinden -> wiederfind", function() {deepEqual( Stem("wiederfinden"), "wiederfind");});
test("wiederfindens -> wiederfind", function() {deepEqual( Stem("wiederfindens"), "wiederfind");});
test("wiedergabe -> wiedergab", function() {deepEqual( Stem("wiedergabe"), "wiedergab");});
test("wiedergebären -> wiedergebar", function() {deepEqual( Stem("wiedergebären"), "wiedergebar");});
test("wiedergebärer -> wiedergebar", function() {deepEqual( Stem("wiedergebärer"), "wiedergebar");});
test("wiedergebärers -> wiedergebar", function() {deepEqual( Stem("wiedergebärers"), "wiedergebar");});
test("wiedergebiert -> wiedergebiert", function() {deepEqual( Stem("wiedergebiert"), "wiedergebiert");});
test("wiedergeboren -> wiedergebor", function() {deepEqual( Stem("wiedergeboren"), "wiedergebor");});
test("wiedergeborene -> wiedergebor", function() {deepEqual( Stem("wiedergeborene"), "wiedergebor");});
test("wiedergeborenen -> wiedergebor", function() {deepEqual( Stem("wiedergeborenen"), "wiedergebor");});
test("wiedergeburt -> wiedergeburt", function() {deepEqual( Stem("wiedergeburt"), "wiedergeburt");});
test("wiedergefunden -> wiedergefund", function() {deepEqual( Stem("wiedergefunden"), "wiedergefund");});
test("wiedergekehrten -> wiedergekehrt", function() {deepEqual( Stem("wiedergekehrten"), "wiedergekehrt");});
test("wiedergekommen -> wiedergekomm", function() {deepEqual( Stem("wiedergekommen"), "wiedergekomm");});
test("wiedergewann -> wiedergewann", function() {deepEqual( Stem("wiedergewann"), "wiedergewann");});
test("wiedergewinnen -> wiedergewinn", function() {deepEqual( Stem("wiedergewinnen"), "wiedergewinn");});
test("wiedergewonnenen -> wiedergewonn", function() {deepEqual( Stem("wiedergewonnenen"), "wiedergewonn");});
test("wiedergutmachung -> wiedergutmach", function() {deepEqual( Stem("wiedergutmachung"), "wiedergutmach");});
test("wiederhergestellt -> wiederhergestellt", function() {deepEqual( Stem("wiederhergestellt"), "wiederhergestellt");});
test("wiederherstellung -> wiederherstell", function() {deepEqual( Stem("wiederherstellung"), "wiederherstell");});
test("wiederherzustellen -> wiederherzustell", function() {deepEqual( Stem("wiederherzustellen"), "wiederherzustell");});
test("wiederhole -> wiederhol", function() {deepEqual( Stem("wiederhole"), "wiederhol");});
test("wiederholen -> wiederhol", function() {deepEqual( Stem("wiederholen"), "wiederhol");});
test("wiederholt -> wiederholt", function() {deepEqual( Stem("wiederholt"), "wiederholt");});
test("wiederholte -> wiederholt", function() {deepEqual( Stem("wiederholte"), "wiederholt");});
test("wiederholten -> wiederholt", function() {deepEqual( Stem("wiederholten"), "wiederholt");});
test("wiederholung -> wiederhol", function() {deepEqual( Stem("wiederholung"), "wiederhol");});
test("wiederkam -> wiederkam", function() {deepEqual( Stem("wiederkam"), "wiederkam");});
test("wiederkäme -> wiederkam", function() {deepEqual( Stem("wiederkäme"), "wiederkam");});
test("wiederkehr -> wiederkehr", function() {deepEqual( Stem("wiederkehr"), "wiederkehr");});
test("wiederkehren -> wiederkehr", function() {deepEqual( Stem("wiederkehren"), "wiederkehr");});
test("wiederkehrenden -> wiederkehr", function() {deepEqual( Stem("wiederkehrenden"), "wiederkehr");});
test("wiederkehrt -> wiederkehrt", function() {deepEqual( Stem("wiederkehrt"), "wiederkehrt");});
test("wiederklingen -> wiederkling", function() {deepEqual( Stem("wiederklingen"), "wiederkling");});
test("wiederkommen -> wiederkomm", function() {deepEqual( Stem("wiederkommen"), "wiederkomm");});
test("wiederkommt -> wiederkommt", function() {deepEqual( Stem("wiederkommt"), "wiederkommt");});
test("wiedersehen -> wiederseh", function() {deepEqual( Stem("wiedersehen"), "wiederseh");});
test("wiederum -> wiederum", function() {deepEqual( Stem("wiederum"), "wiederum");});
test("wiedervereinigung -> wiederverein", function() {deepEqual( Stem("wiedervereinigung"), "wiederverein");});
test("wiedervergeltung -> wiedervergelt", function() {deepEqual( Stem("wiedervergeltung"), "wiedervergelt");});
test("wiederzufinden -> wiederzufind", function() {deepEqual( Stem("wiederzufinden"), "wiederzufind");});
test("wiederzugebärenden -> wiederzugebar", function() {deepEqual( Stem("wiederzugebärenden"), "wiederzugebar");});
test("wiederzukehren -> wiederzukehr", function() {deepEqual( Stem("wiederzukehren"), "wiederzukehr");});
test("wiege -> wieg", function() {deepEqual( Stem("wiege"), "wieg");});
test("wiegen -> wieg", function() {deepEqual( Stem("wiegen"), "wieg");});
test("wiegt -> wiegt", function() {deepEqual( Stem("wiegt"), "wiegt");});
test("wiegte -> wiegt", function() {deepEqual( Stem("wiegte"), "wiegt");});
test("wiehernde -> wiehernd", function() {deepEqual( Stem("wiehernde"), "wiehernd");});
test("wiehernden -> wiehernd", function() {deepEqual( Stem("wiehernden"), "wiehernd");});
test("wien -> wien", function() {deepEqual( Stem("wien"), "wien");});
test("wiener -> wien", function() {deepEqual( Stem("wiener"), "wien");});
test("wies -> wies", function() {deepEqual( Stem("wies"), "wies");});
test("wiese -> wies", function() {deepEqual( Stem("wiese"), "wies");});
test("wiesen -> wies", function() {deepEqual( Stem("wiesen"), "wies");});
test("wiesenblühenden -> wiesenbluh", function() {deepEqual( Stem("wiesenblühenden"), "wiesenbluh");});
test("wiesenfleck -> wiesenfleck", function() {deepEqual( Stem("wiesenfleck"), "wiesenfleck");});
test("wiesengarten -> wiesengart", function() {deepEqual( Stem("wiesengarten"), "wiesengart");});
test("wiesengrunde -> wiesengrund", function() {deepEqual( Stem("wiesengrunde"), "wiesengrund");});
test("wiesengründe -> wiesengrund", function() {deepEqual( Stem("wiesengründe"), "wiesengrund");});
test("wiesenrande -> wiesenrand", function() {deepEqual( Stem("wiesenrande"), "wiesenrand");});
test("wieserl -> wieserl", function() {deepEqual( Stem("wieserl"), "wieserl");});
test("wieso -> wieso", function() {deepEqual( Stem("wieso"), "wieso");});
test("wieviel -> wieviel", function() {deepEqual( Stem("wieviel"), "wieviel");});
test("wieviele -> wieviel", function() {deepEqual( Stem("wieviele"), "wieviel");});
test("wiewohl -> wiewohl", function() {deepEqual( Stem("wiewohl"), "wiewohl");});
test("wild -> wild", function() {deepEqual( Stem("wild"), "wild");});
test("wildbach -> wildbach", function() {deepEqual( Stem("wildbach"), "wildbach");});
test("wildbäche -> wildbach", function() {deepEqual( Stem("wildbäche"), "wildbach");});
test("wilddieb -> wilddieb", function() {deepEqual( Stem("wilddieb"), "wilddieb");});
test("wilddieben -> wilddieb", function() {deepEqual( Stem("wilddieben"), "wilddieb");});
test("wilde -> wild", function() {deepEqual( Stem("wilde"), "wild");});
test("wilden -> wild", function() {deepEqual( Stem("wilden"), "wild");});
test("wilder -> wild", function() {deepEqual( Stem("wilder"), "wild");});
test("wilderer -> wild", function() {deepEqual( Stem("wilderer"), "wild");});
test("wildes -> wild", function() {deepEqual( Stem("wildes"), "wild");});
test("wildeste -> wild", function() {deepEqual( Stem("wildeste"), "wild");});
test("wildesten -> wild", function() {deepEqual( Stem("wildesten"), "wild");});
test("wildester -> wild", function() {deepEqual( Stem("wildester"), "wild");});
test("wildfänge -> wildfang", function() {deepEqual( Stem("wildfänge"), "wildfang");});
test("wildfremde -> wildfremd", function() {deepEqual( Stem("wildfremde"), "wildfremd");});
test("wildfremden -> wildfremd", function() {deepEqual( Stem("wildfremden"), "wildfremd");});
test("wildgarten -> wildgart", function() {deepEqual( Stem("wildgarten"), "wildgart");});
test("wildheit -> wildheit", function() {deepEqual( Stem("wildheit"), "wildheit");});
test("wildnis -> wildnis", function() {deepEqual( Stem("wildnis"), "wildnis");});
test("wildnisse -> wildnis", function() {deepEqual( Stem("wildnisse"), "wildnis");});
test("wildschütz -> wildschutz", function() {deepEqual( Stem("wildschütz"), "wildschutz");});
test("wildschützen -> wildschutz", function() {deepEqual( Stem("wildschützen"), "wildschutz");});
test("wildschwein -> wildschwein", function() {deepEqual( Stem("wildschwein"), "wildschwein");});
test("wildtauben -> wildtaub", function() {deepEqual( Stem("wildtauben"), "wildtaub");});
test("wildwechseln -> wildwechseln", function() {deepEqual( Stem("wildwechseln"), "wildwechseln");});
test("wildwegen -> wildweg", function() {deepEqual( Stem("wildwegen"), "wildweg");});
test("wilfriede -> wilfried", function() {deepEqual( Stem("wilfriede"), "wilfried");});
test("wilhelmine -> wilhelmin", function() {deepEqual( Stem("wilhelmine"), "wilhelmin");});
test("wilhelminenburg -> wilhelminenburg", function() {deepEqual( Stem("wilhelminenburg"), "wilhelminenburg");});
test("will -> will", function() {deepEqual( Stem("will"), "will");});
test("wille -> will", function() {deepEqual( Stem("wille"), "will");});
test("willem -> will", function() {deepEqual( Stem("willem"), "will");});
test("willen -> will", function() {deepEqual( Stem("willen"), "will");});
test("willenbestimmend -> willenbestimm", function() {deepEqual( Stem("willenbestimmend"), "willenbestimm");});
test("willenlos -> willenlos", function() {deepEqual( Stem("willenlos"), "willenlos");});
test("willens -> will", function() {deepEqual( Stem("willens"), "will");});
test("willensanstrengung -> willensanstreng", function() {deepEqual( Stem("willensanstrengung"), "willensanstreng");});
test("willensbestimmung -> willensbestimm", function() {deepEqual( Stem("willensbestimmung"), "willensbestimm");});
test("willensbestimmungen -> willensbestimm", function() {deepEqual( Stem("willensbestimmungen"), "willensbestimm");});
test("willensgebiet -> willensgebiet", function() {deepEqual( Stem("willensgebiet"), "willensgebiet");});
test("willensgebietes -> willensgebiet", function() {deepEqual( Stem("willensgebietes"), "willensgebiet");});
test("willensleben -> willensleb", function() {deepEqual( Stem("willensleben"), "willensleb");});
test("willensvermögen -> willensvermog", function() {deepEqual( Stem("willensvermögen"), "willensvermog");});
test("willfahren -> willfahr", function() {deepEqual( Stem("willfahren"), "willfahr");});
test("willfährig -> willfahr", function() {deepEqual( Stem("willfährig"), "willfahr");});
test("willfährigkeit -> willfahr", function() {deepEqual( Stem("willfährigkeit"), "willfahr");});
test("willig -> willig", function() {deepEqual( Stem("willig"), "willig");});
test("willige -> willig", function() {deepEqual( Stem("willige"), "willig");});
test("willigen -> willig", function() {deepEqual( Stem("willigen"), "willig");});
test("williges -> willig", function() {deepEqual( Stem("williges"), "willig");});
test("willigte -> willigt", function() {deepEqual( Stem("willigte"), "willigt");});
test("willkommen -> willkomm", function() {deepEqual( Stem("willkommen"), "willkomm");});
test("willkommene -> willkomm", function() {deepEqual( Stem("willkommene"), "willkomm");});
test("willkommenen -> willkomm", function() {deepEqual( Stem("willkommenen"), "willkomm");});
test("willkür -> willkur", function() {deepEqual( Stem("willkür"), "willkur");});
test("willkürlich -> willkur", function() {deepEqual( Stem("willkürlich"), "willkur");});
test("willkürliche -> willkur", function() {deepEqual( Stem("willkürliche"), "willkur");});
test("willst -> will", function() {deepEqual( Stem("willst"), "will");});
test("wimmeln -> wimmeln", function() {deepEqual( Stem("wimmeln"), "wimmeln");});
test("wimmelt -> wimmelt", function() {deepEqual( Stem("wimmelt"), "wimmelt");});
test("wimmelte -> wimmelt", function() {deepEqual( Stem("wimmelte"), "wimmelt");});
test("wimmelten -> wimmelt", function() {deepEqual( Stem("wimmelten"), "wimmelt");});
test("wimpern -> wimp", function() {deepEqual( Stem("wimpern"), "wimp");});
test("wind -> wind", function() {deepEqual( Stem("wind"), "wind");});
test("windbruchfläche -> windbruchflach", function() {deepEqual( Stem("windbruchfläche"), "windbruchflach");});
test("winde -> wind", function() {deepEqual( Stem("winde"), "wind");});
test("winden -> wind", function() {deepEqual( Stem("winden"), "wind");});
test("windend -> windend", function() {deepEqual( Stem("windend"), "windend");});
test("windes -> wind", function() {deepEqual( Stem("windes"), "wind");});
test("windeswehen -> windesweh", function() {deepEqual( Stem("windeswehen"), "windesweh");});
test("windet -> windet", function() {deepEqual( Stem("windet"), "windet");});
test("windfahne -> windfahn", function() {deepEqual( Stem("windfahne"), "windfahn");});
test("windfaust -> windfaust", function() {deepEqual( Stem("windfaust"), "windfaust");});
test("windhauch -> windhauch", function() {deepEqual( Stem("windhauch"), "windhauch");});
test("windliese -> windlies", function() {deepEqual( Stem("windliese"), "windlies");});
test("windlüfte -> windluft", function() {deepEqual( Stem("windlüfte"), "windluft");});
test("windspiele -> windspiel", function() {deepEqual( Stem("windspiele"), "windspiel");});
test("windstillen -> windstill", function() {deepEqual( Stem("windstillen"), "windstill");});
test("windstoss -> windstoss", function() {deepEqual( Stem("windstoss"), "windstoss");});
test("windstoß -> windstoss", function() {deepEqual( Stem("windstoß"), "windstoss");});
test("wink -> wink", function() {deepEqual( Stem("wink"), "wink");});
test("winke -> wink", function() {deepEqual( Stem("winke"), "wink");});
test("winkel -> winkel", function() {deepEqual( Stem("winkel"), "winkel");});
test("winkeladvokaten -> winkeladvokat", function() {deepEqual( Stem("winkeladvokaten"), "winkeladvokat");});
test("winkelei -> winkelei", function() {deepEqual( Stem("winkelei"), "winkelei");});
test("winkeleien -> winkelei", function() {deepEqual( Stem("winkeleien"), "winkelei");});
test("winkelförmig -> winkelform", function() {deepEqual( Stem("winkelförmig"), "winkelform");});
test("winkelmass -> winkelmass", function() {deepEqual( Stem("winkelmass"), "winkelmass");});
test("winkeln -> winkeln", function() {deepEqual( Stem("winkeln"), "winkeln");});
test("winkelschenke -> winkelschenk", function() {deepEqual( Stem("winkelschenke"), "winkelschenk");});
test("winken -> wink", function() {deepEqual( Stem("winken"), "wink");});
test("winkliges -> winklig", function() {deepEqual( Stem("winkliges"), "winklig");});
test("winkt -> winkt", function() {deepEqual( Stem("winkt"), "winkt");});
test("winkte -> winkt", function() {deepEqual( Stem("winkte"), "winkt");});
test("winkten -> winkt", function() {deepEqual( Stem("winkten"), "winkt");});
test("winktest -> winkt", function() {deepEqual( Stem("winktest"), "winkt");});
test("winseln -> winseln", function() {deepEqual( Stem("winseln"), "winseln");});
test("winter -> wint", function() {deepEqual( Stem("winter"), "wint");});
test("winterfelder -> winterfeld", function() {deepEqual( Stem("winterfelder"), "winterfeld");});
test("winterfest -> winterf", function() {deepEqual( Stem("winterfest"), "winterf");});
test("winterkohlköpfe -> winterkohlkopf", function() {deepEqual( Stem("winterkohlköpfe"), "winterkohlkopf");});
test("winterlichen -> wint", function() {deepEqual( Stem("winterlichen"), "wint");});
test("winterlicht -> winterlicht", function() {deepEqual( Stem("winterlicht"), "winterlicht");});
test("winterprogramm -> winterprogramm", function() {deepEqual( Stem("winterprogramm"), "winterprogramm");});
test("winters -> wint", function() {deepEqual( Stem("winters"), "wint");});
test("winterszeit -> winterszeit", function() {deepEqual( Stem("winterszeit"), "winterszeit");});
test("wintervormittag -> wintervormittag", function() {deepEqual( Stem("wintervormittag"), "wintervormittag");});
test("winterwetter -> winterwett", function() {deepEqual( Stem("winterwetter"), "winterwett");});
test("winzig -> winzig", function() {deepEqual( Stem("winzig"), "winzig");});
test("winzige -> winzig", function() {deepEqual( Stem("winzige"), "winzig");});
test("winzigen -> winzig", function() {deepEqual( Stem("winzigen"), "winzig");});
test("winziger -> winzig", function() {deepEqual( Stem("winziger"), "winzig");});
test("winziges -> winzig", function() {deepEqual( Stem("winziges"), "winzig");});
test("winzigsten -> winzig", function() {deepEqual( Stem("winzigsten"), "winzig");});
test("wipfel -> wipfel", function() {deepEqual( Stem("wipfel"), "wipfel");});
test("wipfeln -> wipfeln", function() {deepEqual( Stem("wipfeln"), "wipfeln");});
test("wipp -> wipp", function() {deepEqual( Stem("wipp"), "wipp");});
test("wippespiel -> wippespiel", function() {deepEqual( Stem("wippespiel"), "wippespiel");});
test("wippte -> wippt", function() {deepEqual( Stem("wippte"), "wippt");});
test("wir -> wir", function() {deepEqual( Stem("wir"), "wir");});
test("wirbel -> wirbel", function() {deepEqual( Stem("wirbel"), "wirbel");});
test("wirbelquirlen -> wirbelquirl", function() {deepEqual( Stem("wirbelquirlen"), "wirbelquirl");});
test("wirbelte -> wirbelt", function() {deepEqual( Stem("wirbelte"), "wirbelt");});
test("wirbelwind -> wirbelwind", function() {deepEqual( Stem("wirbelwind"), "wirbelwind");});
test("wirbt -> wirbt", function() {deepEqual( Stem("wirbt"), "wirbt");});
test("wird -> wird", function() {deepEqual( Stem("wird"), "wird");});
test("wirf -> wirf", function() {deepEqual( Stem("wirf"), "wirf");});
test("wirft -> wirft", function() {deepEqual( Stem("wirft"), "wirft");});
test("wirke -> wirk", function() {deepEqual( Stem("wirke"), "wirk");});
test("wirken -> wirk", function() {deepEqual( Stem("wirken"), "wirk");});
test("wirkende -> wirkend", function() {deepEqual( Stem("wirkende"), "wirkend");});
test("wirkenden -> wirkend", function() {deepEqual( Stem("wirkenden"), "wirkend");});
test("wirkender -> wirkend", function() {deepEqual( Stem("wirkender"), "wirkend");});
test("wirkens -> wirk", function() {deepEqual( Stem("wirkens"), "wirk");});
test("wirket -> wirket", function() {deepEqual( Stem("wirket"), "wirket");});
test("wirklich -> wirklich", function() {deepEqual( Stem("wirklich"), "wirklich");});
test("wirkliche -> wirklich", function() {deepEqual( Stem("wirkliche"), "wirklich");});
test("wirklichen -> wirklich", function() {deepEqual( Stem("wirklichen"), "wirklich");});
test("wirklicher -> wirklich", function() {deepEqual( Stem("wirklicher"), "wirklich");});
test("wirkliches -> wirklich", function() {deepEqual( Stem("wirkliches"), "wirklich");});
test("wirklichgemacht -> wirklichgemacht", function() {deepEqual( Stem("wirklichgemacht"), "wirklichgemacht");});
test("wirklichkeit -> wirklich", function() {deepEqual( Stem("wirklichkeit"), "wirklich");});
test("wirklichmachung -> wirklichmach", function() {deepEqual( Stem("wirklichmachung"), "wirklichmach");});
test("wirklichwerden -> wirklichwerd", function() {deepEqual( Stem("wirklichwerden"), "wirklichwerd");});
test("wirklichzumachen -> wirklichzumach", function() {deepEqual( Stem("wirklichzumachen"), "wirklichzumach");});
test("wirksame -> wirksam", function() {deepEqual( Stem("wirksame"), "wirksam");});
test("wirksamen -> wirksam", function() {deepEqual( Stem("wirksamen"), "wirksam");});
test("wirksamkeit -> wirksam", function() {deepEqual( Stem("wirksamkeit"), "wirksam");});
test("wirkt -> wirkt", function() {deepEqual( Stem("wirkt"), "wirkt");});
test("wirkte -> wirkt", function() {deepEqual( Stem("wirkte"), "wirkt");});
test("wirkung -> wirkung", function() {deepEqual( Stem("wirkung"), "wirkung");});
test("wirkungen -> wirkung", function() {deepEqual( Stem("wirkungen"), "wirkung");});
test("wirkungskreis -> wirkungskreis", function() {deepEqual( Stem("wirkungskreis"), "wirkungskreis");});
test("wirkungsstätten -> wirkungsstatt", function() {deepEqual( Stem("wirkungsstätten"), "wirkungsstatt");});
test("wirrbärte -> wirrbart", function() {deepEqual( Stem("wirrbärte"), "wirrbart");});
test("wirrem -> wirr", function() {deepEqual( Stem("wirrem"), "wirr");});
test("wirrsal -> wirrsal", function() {deepEqual( Stem("wirrsal"), "wirrsal");});
test("wirrwarr -> wirrwarr", function() {deepEqual( Stem("wirrwarr"), "wirrwarr");});
test("wirst -> wirst", function() {deepEqual( Stem("wirst"), "wirst");});
test("wirt -> wirt", function() {deepEqual( Stem("wirt"), "wirt");});
test("wirte -> wirt", function() {deepEqual( Stem("wirte"), "wirt");});
test("wirten -> wirt", function() {deepEqual( Stem("wirten"), "wirt");});
test("wirtes -> wirt", function() {deepEqual( Stem("wirtes"), "wirt");});
test("wirtin -> wirtin", function() {deepEqual( Stem("wirtin"), "wirtin");});
test("wirtliche -> wirtlich", function() {deepEqual( Stem("wirtliche"), "wirtlich");});
test("wirtschaft -> wirtschaft", function() {deepEqual( Stem("wirtschaft"), "wirtschaft");});
test("wirtschaftliche -> wirtschaft", function() {deepEqual( Stem("wirtschaftliche"), "wirtschaft");});
test("wirtschaftlichen -> wirtschaft", function() {deepEqual( Stem("wirtschaftlichen"), "wirtschaft");});
test("wirtschaftlicher -> wirtschaft", function() {deepEqual( Stem("wirtschaftlicher"), "wirtschaft");});
test("wirtschafts -> wirtschaft", function() {deepEqual( Stem("wirtschafts"), "wirtschaft");});
test("wirtschaftsmobiliar -> wirtschaftsmobiliar", function() {deepEqual( Stem("wirtschaftsmobiliar"), "wirtschaftsmobiliar");});
test("wirtschaftsplatz -> wirtschaftsplatz", function() {deepEqual( Stem("wirtschaftsplatz"), "wirtschaftsplatz");});
test("wirtschaftspolitische -> wirtschaftspolit", function() {deepEqual( Stem("wirtschaftspolitische"), "wirtschaftspolit");});
test("wirtschaftswachstum -> wirtschaftswachstum", function() {deepEqual( Stem("wirtschaftswachstum"), "wirtschaftswachstum");});
test("wirtshaus -> wirtshaus", function() {deepEqual( Stem("wirtshaus"), "wirtshaus");});
test("wirtshause -> wirtshaus", function() {deepEqual( Stem("wirtshause"), "wirtshaus");});
test("wirtshäuser -> wirtshaus", function() {deepEqual( Stem("wirtshäuser"), "wirtshaus");});
test("wirtshäusern -> wirtshaus", function() {deepEqual( Stem("wirtshäusern"), "wirtshaus");});
test("wirtshauses -> wirtshaus", function() {deepEqual( Stem("wirtshauses"), "wirtshaus");});
test("wirtshausfenstern -> wirtshausfen", function() {deepEqual( Stem("wirtshausfenstern"), "wirtshausfen");});
test("wirtshausrechnungen -> wirtshausrechn", function() {deepEqual( Stem("wirtshausrechnungen"), "wirtshausrechn");});
test("wirtstisch -> wirtstisch", function() {deepEqual( Stem("wirtstisch"), "wirtstisch");});
test("wirtstochter -> wirtstocht", function() {deepEqual( Stem("wirtstochter"), "wirtstocht");});
test("wischen -> wisch", function() {deepEqual( Stem("wischen"), "wisch");});
test("wischer -> wisch", function() {deepEqual( Stem("wischer"), "wisch");});
test("wischt -> wischt", function() {deepEqual( Stem("wischt"), "wischt");});
test("wischte -> wischt", function() {deepEqual( Stem("wischte"), "wischt");});
test("wischten -> wischt", function() {deepEqual( Stem("wischten"), "wischt");});
test("wisperte -> wispert", function() {deepEqual( Stem("wisperte"), "wispert");});
test("wiss -> wiss", function() {deepEqual( Stem("wiss"), "wiss");});
test("wissbegierde -> wissbegierd", function() {deepEqual( Stem("wissbegierde"), "wissbegierd");});
test("wißbegierde -> wissbegierd", function() {deepEqual( Stem("wißbegierde"), "wissbegierd");});
test("wisse -> wiss", function() {deepEqual( Stem("wisse"), "wiss");});
test("wissen -> wiss", function() {deepEqual( Stem("wissen"), "wiss");});
test("wissend -> wissend", function() {deepEqual( Stem("wissend"), "wissend");});
test("wissende -> wissend", function() {deepEqual( Stem("wissende"), "wissend");});
test("wissenden -> wissend", function() {deepEqual( Stem("wissenden"), "wissend");});
test("wissender -> wissend", function() {deepEqual( Stem("wissender"), "wissend");});
test("wissens -> wiss", function() {deepEqual( Stem("wissens"), "wiss");});
test("wissenschaft -> wissenschaft", function() {deepEqual( Stem("wissenschaft"), "wissenschaft");});
test("wissenschaften -> wissenschaft", function() {deepEqual( Stem("wissenschaften"), "wissenschaft");});
test("wissenschaftler -> wissenschaftl", function() {deepEqual( Stem("wissenschaftler"), "wissenschaftl");});
test("wissenschaftlich -> wissenschaft", function() {deepEqual( Stem("wissenschaftlich"), "wissenschaft");});
test("wissenschaftliche -> wissenschaft", function() {deepEqual( Stem("wissenschaftliche"), "wissenschaft");});
test("wissenschaftlichem -> wissenschaft", function() {deepEqual( Stem("wissenschaftlichem"), "wissenschaft");});
test("wissenschaftlichen -> wissenschaft", function() {deepEqual( Stem("wissenschaftlichen"), "wissenschaft");});
test("wissenschaftliches -> wissenschaft", function() {deepEqual( Stem("wissenschaftliches"), "wissenschaft");});
test("wissest -> wiss", function() {deepEqual( Stem("wissest"), "wiss");});
test("wisset -> wisset", function() {deepEqual( Stem("wisset"), "wisset");});
test("wisst -> wisst", function() {deepEqual( Stem("wisst"), "wisst");});
test("wißt -> wisst", function() {deepEqual( Stem("wißt"), "wisst");});
test("wisstümlich -> wisstum", function() {deepEqual( Stem("wisstümlich"), "wisstum");});
test("wißtümlich -> wisstum", function() {deepEqual( Stem("wißtümlich"), "wisstum");});
test("wisstümliche -> wisstum", function() {deepEqual( Stem("wisstümliche"), "wisstum");});
test("wißtümliche -> wisstum", function() {deepEqual( Stem("wißtümliche"), "wisstum");});
test("wisstümlichem -> wisstum", function() {deepEqual( Stem("wisstümlichem"), "wisstum");});
test("wißtümlichem -> wisstum", function() {deepEqual( Stem("wißtümlichem"), "wisstum");});
test("wisstümlichen -> wisstum", function() {deepEqual( Stem("wisstümlichen"), "wisstum");});
test("wißtümlichen -> wisstum", function() {deepEqual( Stem("wißtümlichen"), "wisstum");});
test("wisstümlicher -> wisstum", function() {deepEqual( Stem("wisstümlicher"), "wisstum");});
test("wißtümlicher -> wisstum", function() {deepEqual( Stem("wißtümlicher"), "wisstum");});
test("wisstümliches -> wisstum", function() {deepEqual( Stem("wisstümliches"), "wisstum");});
test("wißtümliches -> wisstum", function() {deepEqual( Stem("wißtümliches"), "wisstum");});
test("witsch -> witsch", function() {deepEqual( Stem("witsch"), "witsch");});
test("wittenberg -> wittenberg", function() {deepEqual( Stem("wittenberg"), "wittenberg");});
test("wittern -> witt", function() {deepEqual( Stem("wittern"), "witt");});
test("witterte -> wittert", function() {deepEqual( Stem("witterte"), "wittert");});
test("witterten -> wittert", function() {deepEqual( Stem("witterten"), "wittert");});
test("witterung -> witter", function() {deepEqual( Stem("witterung"), "witter");});
test("witterungsvermögen -> witterungsvermog", function() {deepEqual( Stem("witterungsvermögen"), "witterungsvermog");});
test("witwe -> witw", function() {deepEqual( Stem("witwe"), "witw");});
test("witwen -> witw", function() {deepEqual( Stem("witwen"), "witw");});
test("witwengehalt -> witwengehalt", function() {deepEqual( Stem("witwengehalt"), "witwengehalt");});
test("witwenschaft -> witwenschaft", function() {deepEqual( Stem("witwenschaft"), "witwenschaft");});
test("witwer -> witw", function() {deepEqual( Stem("witwer"), "witw");});
test("witz -> witz", function() {deepEqual( Stem("witz"), "witz");});
test("witze -> witz", function() {deepEqual( Stem("witze"), "witz");});
test("witzelt -> witzelt", function() {deepEqual( Stem("witzelt"), "witzelt");});
test("witzen -> witz", function() {deepEqual( Stem("witzen"), "witz");});
test("witzig -> witzig", function() {deepEqual( Stem("witzig"), "witzig");});
test("witziger -> witzig", function() {deepEqual( Stem("witziger"), "witzig");});
test("witzigste -> witzig", function() {deepEqual( Stem("witzigste"), "witzig");});
test("witzigsten -> witzig", function() {deepEqual( Stem("witzigsten"), "witzig");});
test("wizenmann -> wizenmann", function() {deepEqual( Stem("wizenmann"), "wizenmann");});
test("wo -> wo", function() {deepEqual( Stem("wo"), "wo");});
test("woanders -> woand", function() {deepEqual( Stem("woanders"), "woand");});
test("woass -> woass", function() {deepEqual( Stem("woass"), "woass");});
test("wobei -> wobei", function() {deepEqual( Stem("wobei"), "wobei");});
test("woch -> woch", function() {deepEqual( Stem("woch"), "woch");});
test("woche -> woch", function() {deepEqual( Stem("woche"), "woch");});
test("wochen -> woch", function() {deepEqual( Stem("wochen"), "woch");});
test("wochenlang -> wochenlang", function() {deepEqual( Stem("wochenlang"), "wochenlang");});
test("wochenzeitschrift -> wochenzeitschrift", function() {deepEqual( Stem("wochenzeitschrift"), "wochenzeitschrift");});
test("wochenzeitung -> wochenzeit", function() {deepEqual( Stem("wochenzeitung"), "wochenzeit");});
test("wodurch -> wodurch", function() {deepEqual( Stem("wodurch"), "wodurch");});
test("wofern -> wof", function() {deepEqual( Stem("wofern"), "wof");});
test("wofür -> wofur", function() {deepEqual( Stem("wofür"), "wofur");});
test("wogegen -> wogeg", function() {deepEqual( Stem("wogegen"), "wogeg");});
test("wogenden -> wogend", function() {deepEqual( Stem("wogenden"), "wogend");});
test("wogt -> wogt", function() {deepEqual( Stem("wogt"), "wogt");});
test("wogte -> wogt", function() {deepEqual( Stem("wogte"), "wogt");});
test("woher -> woh", function() {deepEqual( Stem("woher"), "woh");});
test("wohin -> wohin", function() {deepEqual( Stem("wohin"), "wohin");});
test("wohl -> wohl", function() {deepEqual( Stem("wohl"), "wohl");});
test("wohlakzentuierte -> wohlakzentuiert", function() {deepEqual( Stem("wohlakzentuierte"), "wohlakzentuiert");});
test("wohlan -> wohlan", function() {deepEqual( Stem("wohlan"), "wohlan");});
test("wohlanständigen -> wohlanstand", function() {deepEqual( Stem("wohlanständigen"), "wohlanstand");});
test("wohlauf -> wohlauf", function() {deepEqual( Stem("wohlauf"), "wohlauf");});
test("wohlbebaut -> wohlbebaut", function() {deepEqual( Stem("wohlbebaut"), "wohlbebaut");});
test("wohlbefinden -> wohlbefind", function() {deepEqual( Stem("wohlbefinden"), "wohlbefind");});
test("wohlbegütert -> wohlbegutert", function() {deepEqual( Stem("wohlbegütert"), "wohlbegutert");});
test("wohlbehagen -> wohlbehag", function() {deepEqual( Stem("wohlbehagen"), "wohlbehag");});
test("wohlbekannte -> wohlbekannt", function() {deepEqual( Stem("wohlbekannte"), "wohlbekannt");});
test("wohlbekannten -> wohlbekannt", function() {deepEqual( Stem("wohlbekannten"), "wohlbekannt");});
test("wohlbeschaffenes -> wohlbeschaff", function() {deepEqual( Stem("wohlbeschaffenes"), "wohlbeschaff");});
test("wohlbesorgte -> wohlbesorgt", function() {deepEqual( Stem("wohlbesorgte"), "wohlbesorgt");});
test("wohlbestellte -> wohlbestellt", function() {deepEqual( Stem("wohlbestellte"), "wohlbestellt");});
test("wohlbestellten -> wohlbestellt", function() {deepEqual( Stem("wohlbestellten"), "wohlbestellt");});
test("wohlbewaffnet -> wohlbewaffnet", function() {deepEqual( Stem("wohlbewaffnet"), "wohlbewaffnet");});
test("wohlbewusster -> wohlbewusst", function() {deepEqual( Stem("wohlbewusster"), "wohlbewusst");});
test("wohldenkenden -> wohldenk", function() {deepEqual( Stem("wohldenkenden"), "wohldenk");});
test("wohlduftende -> wohlduft", function() {deepEqual( Stem("wohlduftende"), "wohlduft");});
test("wohldurchgebildeter -> wohldurchgebildet", function() {deepEqual( Stem("wohldurchgebildeter"), "wohldurchgebildet");});
test("wohler -> wohl", function() {deepEqual( Stem("wohler"), "wohl");});
test("wohlergehen -> wohlergeh", function() {deepEqual( Stem("wohlergehen"), "wohlergeh");});
test("wohlergehens -> wohlergeh", function() {deepEqual( Stem("wohlergehens"), "wohlergeh");});
test("wohlerhaltenes -> wohlerhalt", function() {deepEqual( Stem("wohlerhaltenes"), "wohlerhalt");});
test("wohlerworbenes -> wohlerworb", function() {deepEqual( Stem("wohlerworbenes"), "wohlerworb");});
test("wohlerzogenen -> wohlerzog", function() {deepEqual( Stem("wohlerzogenen"), "wohlerzog");});
test("wohlfahrtsbeamten -> wohlfahrtsbeamt", function() {deepEqual( Stem("wohlfahrtsbeamten"), "wohlfahrtsbeamt");});
test("wohlfeil -> wohlfeil", function() {deepEqual( Stem("wohlfeil"), "wohlfeil");});
test("wohlfeiles -> wohlfeil", function() {deepEqual( Stem("wohlfeiles"), "wohlfeil");});
test("wohlgeartet -> wohlgeartet", function() {deepEqual( Stem("wohlgeartet"), "wohlgeartet");});
test("wohlgeartete -> wohlgeartet", function() {deepEqual( Stem("wohlgeartete"), "wohlgeartet");});
test("wohlgeborgen -> wohlgeborg", function() {deepEqual( Stem("wohlgeborgen"), "wohlgeborg");});
test("wohlgefallen -> wohlgefall", function() {deepEqual( Stem("wohlgefallen"), "wohlgefall");});
test("wohlgefallens -> wohlgefall", function() {deepEqual( Stem("wohlgefallens"), "wohlgefall");});
test("wohlgefällig -> wohlgefall", function() {deepEqual( Stem("wohlgefällig"), "wohlgefall");});
test("wohlgefällige -> wohlgefall", function() {deepEqual( Stem("wohlgefällige"), "wohlgefall");});
test("wohlgefälliges -> wohlgefall", function() {deepEqual( Stem("wohlgefälliges"), "wohlgefall");});
test("wohlgefälligsten -> wohlgefall", function() {deepEqual( Stem("wohlgefälligsten"), "wohlgefall");});
test("wohlgefällt -> wohlgefallt", function() {deepEqual( Stem("wohlgefällt"), "wohlgefallt");});
test("wohlgefiel -> wohlgefiel", function() {deepEqual( Stem("wohlgefiel"), "wohlgefiel");});
test("wohlgefüllten -> wohlgefullt", function() {deepEqual( Stem("wohlgefüllten"), "wohlgefullt");});
test("wohlgefütterten -> wohlgefuttert", function() {deepEqual( Stem("wohlgefütterten"), "wohlgefuttert");});
test("wohlgekleideten -> wohlgekleidet", function() {deepEqual( Stem("wohlgekleideten"), "wohlgekleidet");});
test("wohlgelehrt -> wohlgelehrt", function() {deepEqual( Stem("wohlgelehrt"), "wohlgelehrt");});
test("wohlgelungenen -> wohlgel", function() {deepEqual( Stem("wohlgelungenen"), "wohlgel");});
test("wohlgemeinte -> wohlgemeint", function() {deepEqual( Stem("wohlgemeinte"), "wohlgemeint");});
test("wohlgemerkt -> wohlgemerkt", function() {deepEqual( Stem("wohlgemerkt"), "wohlgemerkt");});
test("wohlgemut -> wohlgemut", function() {deepEqual( Stem("wohlgemut"), "wohlgemut");});
test("wohlgemute -> wohlgemut", function() {deepEqual( Stem("wohlgemute"), "wohlgemut");});
test("wohlgenährten -> wohlgenahrt", function() {deepEqual( Stem("wohlgenährten"), "wohlgenahrt");});
test("wohlgeordneten -> wohlgeordnet", function() {deepEqual( Stem("wohlgeordneten"), "wohlgeordnet");});
test("wohlgepflegte -> wohlgepflegt", function() {deepEqual( Stem("wohlgepflegte"), "wohlgepflegt");});
test("wohlgeputzte -> wohlgeputzt", function() {deepEqual( Stem("wohlgeputzte"), "wohlgeputzt");});
test("wohlgeratener -> wohlgerat", function() {deepEqual( Stem("wohlgeratener"), "wohlgerat");});
test("wohlgeratenes -> wohlgerat", function() {deepEqual( Stem("wohlgeratenes"), "wohlgerat");});
test("wohlgeruch -> wohlgeruch", function() {deepEqual( Stem("wohlgeruch"), "wohlgeruch");});
test("wohlgerüche -> wohlgeruch", function() {deepEqual( Stem("wohlgerüche"), "wohlgeruch");});
test("wohlgesalzener -> wohlgesalz", function() {deepEqual( Stem("wohlgesalzener"), "wohlgesalz");});
test("wohlgesicherte -> wohlgesichert", function() {deepEqual( Stem("wohlgesicherte"), "wohlgesichert");});
test("wohlgesinneten -> wohlgesinnet", function() {deepEqual( Stem("wohlgesinneten"), "wohlgesinnet");});
test("wohlgesinnte -> wohlgesinnt", function() {deepEqual( Stem("wohlgesinnte"), "wohlgesinnt");});
test("wohlgestaltete -> wohlgestaltet", function() {deepEqual( Stem("wohlgestaltete"), "wohlgestaltet");});
test("wohlgestaltetes -> wohlgestaltet", function() {deepEqual( Stem("wohlgestaltetes"), "wohlgestaltet");});
test("wohlhabende -> wohlhab", function() {deepEqual( Stem("wohlhabende"), "wohlhab");});
test("wohlhabender -> wohlhab", function() {deepEqual( Stem("wohlhabender"), "wohlhab");});
test("wohlhabenheit -> wohlhab", function() {deepEqual( Stem("wohlhabenheit"), "wohlhab");});
test("wohlhergestellten -> wohlhergestellt", function() {deepEqual( Stem("wohlhergestellten"), "wohlhergestellt");});
test("wohligen -> wohlig", function() {deepEqual( Stem("wohligen"), "wohlig");});
test("wohliger -> wohlig", function() {deepEqual( Stem("wohliger"), "wohlig");});
test("wohliges -> wohlig", function() {deepEqual( Stem("wohliges"), "wohlig");});
test("wohlklang -> wohlklang", function() {deepEqual( Stem("wohlklang"), "wohlklang");});
test("wohlklingenden -> wohlkling", function() {deepEqual( Stem("wohlklingenden"), "wohlkling");});
test("wohllaut -> wohllaut", function() {deepEqual( Stem("wohllaut"), "wohllaut");});
test("wohllautenden -> wohllaut", function() {deepEqual( Stem("wohllautenden"), "wohllaut");});
test("wohlleben -> wohlleb", function() {deepEqual( Stem("wohlleben"), "wohlleb");});
test("wohlmeinenden -> wohlmein", function() {deepEqual( Stem("wohlmeinenden"), "wohlmein");});
test("wohlrasierten -> wohlrasiert", function() {deepEqual( Stem("wohlrasierten"), "wohlrasiert");});
test("wohlriechenden -> wohlriech", function() {deepEqual( Stem("wohlriechenden"), "wohlriech");});
test("wohlschmeckenden -> wohlschmeck", function() {deepEqual( Stem("wohlschmeckenden"), "wohlschmeck");});
test("wohlseins -> wohlsein", function() {deepEqual( Stem("wohlseins"), "wohlsein");});
test("wohlstand -> wohlstand", function() {deepEqual( Stem("wohlstand"), "wohlstand");});
test("wohlständchen -> wohlstandch", function() {deepEqual( Stem("wohlständchen"), "wohlstandch");});
test("wohlstandes -> wohlstand", function() {deepEqual( Stem("wohlstandes"), "wohlstand");});
test("wohltat -> wohltat", function() {deepEqual( Stem("wohltat"), "wohltat");});
test("wohltaten -> wohltat", function() {deepEqual( Stem("wohltaten"), "wohltat");});
test("wohltätigem -> wohltat", function() {deepEqual( Stem("wohltätigem"), "wohltat");});
test("wohltätigen -> wohltat", function() {deepEqual( Stem("wohltätigen"), "wohltat");});
test("wohltätigkeit -> wohltat", function() {deepEqual( Stem("wohltätigkeit"), "wohltat");});
test("wohltätigste -> wohltat", function() {deepEqual( Stem("wohltätigste"), "wohltat");});
test("wohltuend -> wohltuend", function() {deepEqual( Stem("wohltuend"), "wohltuend");});
test("wohltun -> wohltun", function() {deepEqual( Stem("wohltun"), "wohltun");});
test("wohltuns -> wohltun", function() {deepEqual( Stem("wohltuns"), "wohltun");});
test("wohlverdienten -> wohlverdient", function() {deepEqual( Stem("wohlverdienten"), "wohlverdient");});
test("wohlverhalten -> wohlverhalt", function() {deepEqual( Stem("wohlverhalten"), "wohlverhalt");});
test("wohlverhaltens -> wohlverhalt", function() {deepEqual( Stem("wohlverhaltens"), "wohlverhalt");});
test("wohlversehen -> wohlverseh", function() {deepEqual( Stem("wohlversehen"), "wohlverseh");});
test("wohlverstanden -> wohlverstand", function() {deepEqual( Stem("wohlverstanden"), "wohlverstand");});
test("wohlweisen -> wohlweis", function() {deepEqual( Stem("wohlweisen"), "wohlweis");});
test("wohlwillst -> wohlwill", function() {deepEqual( Stem("wohlwillst"), "wohlwill");});
test("wohlwollen -> wohlwoll", function() {deepEqual( Stem("wohlwollen"), "wohlwoll");});
test("wohlwollend -> wohlwoll", function() {deepEqual( Stem("wohlwollend"), "wohlwoll");});
test("wohlwollende -> wohlwoll", function() {deepEqual( Stem("wohlwollende"), "wohlwoll");});
test("wohlwollenden -> wohlwoll", function() {deepEqual( Stem("wohlwollenden"), "wohlwoll");});
test("wohlwollender -> wohlwoll", function() {deepEqual( Stem("wohlwollender"), "wohlwoll");});
test("wohlwollendste -> wohlwoll", function() {deepEqual( Stem("wohlwollendste"), "wohlwoll");});
test("wohlwollens -> wohlwoll", function() {deepEqual( Stem("wohlwollens"), "wohlwoll");});
test("wohlwollte -> wohlwollt", function() {deepEqual( Stem("wohlwollte"), "wohlwollt");});
test("wohlzutun -> wohlzutun", function() {deepEqual( Stem("wohlzutun"), "wohlzutun");});
test("wohne -> wohn", function() {deepEqual( Stem("wohne"), "wohn");});
test("wohnen -> wohn", function() {deepEqual( Stem("wohnen"), "wohn");});
test("wohnend -> wohnend", function() {deepEqual( Stem("wohnend"), "wohnend");});
test("wohnenden -> wohnend", function() {deepEqual( Stem("wohnenden"), "wohnend");});
test("wohnet -> wohnet", function() {deepEqual( Stem("wohnet"), "wohnet");});
test("wohnheim -> wohnheim", function() {deepEqual( Stem("wohnheim"), "wohnheim");});
test("wohnlich -> wohnlich", function() {deepEqual( Stem("wohnlich"), "wohnlich");});
test("wohnlichen -> wohnlich", function() {deepEqual( Stem("wohnlichen"), "wohnlich");});
test("wohnraum -> wohnraum", function() {deepEqual( Stem("wohnraum"), "wohnraum");});
test("wohnstätte -> wohnstatt", function() {deepEqual( Stem("wohnstätte"), "wohnstatt");});
test("wohnstube -> wohnstub", function() {deepEqual( Stem("wohnstube"), "wohnstub");});
test("wohnt -> wohnt", function() {deepEqual( Stem("wohnt"), "wohnt");});
test("wohnte -> wohnt", function() {deepEqual( Stem("wohnte"), "wohnt");});
test("wohnten -> wohnt", function() {deepEqual( Stem("wohnten"), "wohnt");});
test("wohnung -> wohnung", function() {deepEqual( Stem("wohnung"), "wohnung");});
test("wohnungen -> wohnung", function() {deepEqual( Stem("wohnungen"), "wohnung");});
test("wohnungstür -> wohnungstur", function() {deepEqual( Stem("wohnungstür"), "wohnungstur");});
test("wohnzimmer -> wohnzimm", function() {deepEqual( Stem("wohnzimmer"), "wohnzimm");});
test("wölbten -> wolbt", function() {deepEqual( Stem("wölbten"), "wolbt");});
test("wölbung -> wolbung", function() {deepEqual( Stem("wölbung"), "wolbung");});
test("wolf -> wolf", function() {deepEqual( Stem("wolf"), "wolf");});
test("wölfe -> wolf", function() {deepEqual( Stem("wölfe"), "wolf");});
test("wolff -> wolff", function() {deepEqual( Stem("wolff"), "wolff");});
test("wolhyniens -> wolhyni", function() {deepEqual( Stem("wolhyniens"), "wolhyni");});
test("wölkchen -> wolkch", function() {deepEqual( Stem("wölkchen"), "wolkch");});
test("wolke -> wolk", function() {deepEqual( Stem("wolke"), "wolk");});
test("wolken -> wolk", function() {deepEqual( Stem("wolken"), "wolk");});
test("wolkenbase -> wolkenbas", function() {deepEqual( Stem("wolkenbase"), "wolkenbas");});
test("wolkenberge -> wolkenberg", function() {deepEqual( Stem("wolkenberge"), "wolkenberg");});
test("wolkenbruch -> wolkenbruch", function() {deepEqual( Stem("wolkenbruch"), "wolkenbruch");});
test("wolkenfenster -> wolkenfen", function() {deepEqual( Stem("wolkenfenster"), "wolkenfen");});
test("wolkenfrau -> wolkenfrau", function() {deepEqual( Stem("wolkenfrau"), "wolkenfrau");});
test("wolkenhülle -> wolkenhull", function() {deepEqual( Stem("wolkenhülle"), "wolkenhull");});
test("wolkenkuppel -> wolkenkuppel", function() {deepEqual( Stem("wolkenkuppel"), "wolkenkuppel");});
test("wolkenlos -> wolkenlos", function() {deepEqual( Stem("wolkenlos"), "wolkenlos");});
test("wolkenriss -> wolkenriss", function() {deepEqual( Stem("wolkenriss"), "wolkenriss");});
test("wolkensäule -> wolkensaul", function() {deepEqual( Stem("wolkensäule"), "wolkensaul");});
test("wolkenschiff -> wolkenschiff", function() {deepEqual( Stem("wolkenschiff"), "wolkenschiff");});
test("wolkenschneider -> wolkenschneid", function() {deepEqual( Stem("wolkenschneider"), "wolkenschneid");});
test("wolkenwände -> wolkenwand", function() {deepEqual( Stem("wolkenwände"), "wolkenwand");});
test("woll -> woll", function() {deepEqual( Stem("woll"), "woll");});
test("wolle -> woll", function() {deepEqual( Stem("wolle"), "woll");});
test("wollen -> woll", function() {deepEqual( Stem("wollen"), "woll");});
test("wollende -> wollend", function() {deepEqual( Stem("wollende"), "wollend");});
test("wollenden -> wollend", function() {deepEqual( Stem("wollenden"), "wollend");});
test("wollendes -> wollend", function() {deepEqual( Stem("wollendes"), "wollend");});
test("wollenen -> woll", function() {deepEqual( Stem("wollenen"), "woll");});
test("wollens -> woll", function() {deepEqual( Stem("wollens"), "woll");});
test("wollet -> wollet", function() {deepEqual( Stem("wollet"), "wollet");});
test("wollt -> wollt", function() {deepEqual( Stem("wollt"), "wollt");});
test("wollte -> wollt", function() {deepEqual( Stem("wollte"), "wollt");});
test("wollten -> wollt", function() {deepEqual( Stem("wollten"), "wollt");});
test("wolltest -> wollt", function() {deepEqual( Stem("wolltest"), "wollt");});
test("wolltet -> wolltet", function() {deepEqual( Stem("wolltet"), "wolltet");});
test("wollust -> wollust", function() {deepEqual( Stem("wollust"), "wollust");});
test("wollüste -> wollust", function() {deepEqual( Stem("wollüste"), "wollust");});
test("wollüstig -> wollust", function() {deepEqual( Stem("wollüstig"), "wollust");});
test("womit -> womit", function() {deepEqual( Stem("womit"), "womit");});
test("womöglich -> womog", function() {deepEqual( Stem("womöglich"), "womog");});
test("wonach -> wonach", function() {deepEqual( Stem("wonach"), "wonach");});
test("wonne -> wonn", function() {deepEqual( Stem("wonne"), "wonn");});
test("wonnegefühl -> wonnegefuhl", function() {deepEqual( Stem("wonnegefühl"), "wonnegefuhl");});
test("wonnen -> wonn", function() {deepEqual( Stem("wonnen"), "wonn");});
test("wonnevoll -> wonnevoll", function() {deepEqual( Stem("wonnevoll"), "wonnevoll");});
test("wonnevolle -> wonnevoll", function() {deepEqual( Stem("wonnevolle"), "wonnevoll");});
test("wonnigen -> wonnig", function() {deepEqual( Stem("wonnigen"), "wonnig");});
test("woran -> woran", function() {deepEqual( Stem("woran"), "woran");});
test("worauf -> worauf", function() {deepEqual( Stem("worauf"), "worauf");});
test("woraus -> woraus", function() {deepEqual( Stem("woraus"), "woraus");});
test("worbs -> worb", function() {deepEqual( Stem("worbs"), "worb");});
test("word -> word", function() {deepEqual( Stem("word"), "word");});
test("worden -> word", function() {deepEqual( Stem("worden"), "word");});
test("worfen -> worf", function() {deepEqual( Stem("worfen"), "worf");});
test("worin -> worin", function() {deepEqual( Stem("worin"), "worin");});
test("workshops -> workshops", function() {deepEqual( Stem("workshops"), "workshops");});
test("world -> world", function() {deepEqual( Stem("world"), "world");});
test("wort -> wort", function() {deepEqual( Stem("wort"), "wort");});
test("wortbedeutung -> wortbedeut", function() {deepEqual( Stem("wortbedeutung"), "wortbedeut");});
test("wortbeiträge -> wortbeitrag", function() {deepEqual( Stem("wortbeiträge"), "wortbeitrag");});
test("worte -> wort", function() {deepEqual( Stem("worte"), "wort");});
test("worten -> wort", function() {deepEqual( Stem("worten"), "wort");});
test("wörter -> wort", function() {deepEqual( Stem("wörter"), "wort");});
test("wörterbuch -> worterbuch", function() {deepEqual( Stem("wörterbuch"), "worterbuch");});
test("wörtern -> wort", function() {deepEqual( Stem("wörtern"), "wort");});
test("wörtersprache -> wortersprach", function() {deepEqual( Stem("wörtersprache"), "wortersprach");});
test("wortes -> wort", function() {deepEqual( Stem("wortes"), "wort");});
test("wortkarg -> wortkarg", function() {deepEqual( Stem("wortkarg"), "wortkarg");});
test("wortkarge -> wortkarg", function() {deepEqual( Stem("wortkarge"), "wortkarg");});
test("wörtl -> wortl", function() {deepEqual( Stem("wörtl"), "wortl");});
test("wortlaut -> wortlaut", function() {deepEqual( Stem("wortlaut"), "wortlaut");});
test("wörtlein -> wortlein", function() {deepEqual( Stem("wörtlein"), "wortlein");});
test("wörtlich -> wortlich", function() {deepEqual( Stem("wörtlich"), "wortlich");});
test("wortlos -> wortlos", function() {deepEqual( Stem("wortlos"), "wortlos");});
test("wortlosen -> wortlos", function() {deepEqual( Stem("wortlosen"), "wortlos");});
test("wortschatz -> wortschatz", function() {deepEqual( Stem("wortschatz"), "wortschatz");});
test("wortstreit -> wortstreit", function() {deepEqual( Stem("wortstreit"), "wortstreit");});
test("wortwechsel -> wortwechsel", function() {deepEqual( Stem("wortwechsel"), "wortwechsel");});
test("wortwechselte -> wortwechselt", function() {deepEqual( Stem("wortwechselte"), "wortwechselt");});
test("worüber -> worub", function() {deepEqual( Stem("worüber"), "worub");});
test("worum -> worum", function() {deepEqual( Stem("worum"), "worum");});
test("worunter -> worunt", function() {deepEqual( Stem("worunter"), "worunt");});
test("wos -> wos", function() {deepEqual( Stem("wos"), "wos");});
test("wovon -> wovon", function() {deepEqual( Stem("wovon"), "wovon");});
test("wozu -> wozu", function() {deepEqual( Stem("wozu"), "wozu");});
test("wuchernden -> wuchernd", function() {deepEqual( Stem("wuchernden"), "wuchernd");});
test("wucherte -> wuchert", function() {deepEqual( Stem("wucherte"), "wuchert");});
test("wucherten -> wuchert", function() {deepEqual( Stem("wucherten"), "wuchert");});
test("wuchs -> wuch", function() {deepEqual( Stem("wuchs"), "wuch");});
test("wuchsen -> wuchs", function() {deepEqual( Stem("wuchsen"), "wuchs");});
test("wuchses -> wuchs", function() {deepEqual( Stem("wuchses"), "wuchs");});
test("wucht -> wucht", function() {deepEqual( Stem("wucht"), "wucht");});
test("wühlen -> wuhl", function() {deepEqual( Stem("wühlen"), "wuhl");});
test("wühlte -> wuhlt", function() {deepEqual( Stem("wühlte"), "wuhlt");});
test("wulla -> wulla", function() {deepEqual( Stem("wulla"), "wulla");});
test("wunde -> wund", function() {deepEqual( Stem("wunde"), "wund");});
test("wunden -> wund", function() {deepEqual( Stem("wunden"), "wund");});
test("wunder -> wund", function() {deepEqual( Stem("wunder"), "wund");});
test("wunderbar -> wunderbar", function() {deepEqual( Stem("wunderbar"), "wunderbar");});
test("wunderbare -> wunderbar", function() {deepEqual( Stem("wunderbare"), "wunderbar");});
test("wunderbaren -> wunderbar", function() {deepEqual( Stem("wunderbaren"), "wunderbar");});
test("wunderbarer -> wunderbar", function() {deepEqual( Stem("wunderbarer"), "wunderbar");});
test("wunderbares -> wunderbar", function() {deepEqual( Stem("wunderbares"), "wunderbar");});
test("wunderbarste -> wunderbarst", function() {deepEqual( Stem("wunderbarste"), "wunderbarst");});
test("wunderbarsten -> wunderbarst", function() {deepEqual( Stem("wunderbarsten"), "wunderbarst");});
test("wundere -> wund", function() {deepEqual( Stem("wundere"), "wund");});
test("wunderkur -> wunderkur", function() {deepEqual( Stem("wunderkur"), "wunderkur");});
test("wunderlich -> wund", function() {deepEqual( Stem("wunderlich"), "wund");});
test("wunderliche -> wund", function() {deepEqual( Stem("wunderliche"), "wund");});
test("wunderlichen -> wund", function() {deepEqual( Stem("wunderlichen"), "wund");});
test("wunderlicher -> wund", function() {deepEqual( Stem("wunderlicher"), "wund");});
test("wunderlicherweise -> wunderlicherweis", function() {deepEqual( Stem("wunderlicherweise"), "wunderlicherweis");});
test("wunderlichste -> wund", function() {deepEqual( Stem("wunderlichste"), "wund");});
test("wunderlieben -> wunderlieb", function() {deepEqual( Stem("wunderlieben"), "wunderlieb");});
test("wundermächtige -> wundermacht", function() {deepEqual( Stem("wundermächtige"), "wundermacht");});
test("wundern -> wund", function() {deepEqual( Stem("wundern"), "wund");});
test("wunders -> wund", function() {deepEqual( Stem("wunders"), "wund");});
test("wundersam -> wundersam", function() {deepEqual( Stem("wundersam"), "wundersam");});
test("wundersame -> wundersam", function() {deepEqual( Stem("wundersame"), "wundersam");});
test("wundersamen -> wundersam", function() {deepEqual( Stem("wundersamen"), "wundersam");});
test("wundersamer -> wundersam", function() {deepEqual( Stem("wundersamer"), "wundersam");});
test("wundersames -> wundersam", function() {deepEqual( Stem("wundersames"), "wundersam");});
test("wunderschön -> wunderschon", function() {deepEqual( Stem("wunderschön"), "wunderschon");});
test("wunderschöne -> wunderschon", function() {deepEqual( Stem("wunderschöne"), "wunderschon");});
test("wunderschönen -> wunderschon", function() {deepEqual( Stem("wunderschönen"), "wunderschon");});
test("wunderschönes -> wunderschon", function() {deepEqual( Stem("wunderschönes"), "wunderschon");});
test("wundert -> wundert", function() {deepEqual( Stem("wundert"), "wundert");});
test("wunderte -> wundert", function() {deepEqual( Stem("wunderte"), "wundert");});
test("wunderten -> wundert", function() {deepEqual( Stem("wunderten"), "wundert");});
test("wundertiefen -> wundertief", function() {deepEqual( Stem("wundertiefen"), "wundertief");});
test("wundertier -> wunderti", function() {deepEqual( Stem("wundertier"), "wunderti");});
test("wundervoll -> wundervoll", function() {deepEqual( Stem("wundervoll"), "wundervoll");});
test("wundervolle -> wundervoll", function() {deepEqual( Stem("wundervolle"), "wundervoll");});
test("wundervoller -> wundervoll", function() {deepEqual( Stem("wundervoller"), "wundervoll");});
test("wundervolles -> wundervoll", function() {deepEqual( Stem("wundervolles"), "wundervoll");});
test("wunderzeichen -> wunderzeich", function() {deepEqual( Stem("wunderzeichen"), "wunderzeich");});
test("wundre -> wundr", function() {deepEqual( Stem("wundre"), "wundr");});
test("wundzudrücken -> wundzudruck", function() {deepEqual( Stem("wundzudrücken"), "wundzudruck");});
test("wunsch -> wunsch", function() {deepEqual( Stem("wunsch"), "wunsch");});
test("wünsch -> wunsch", function() {deepEqual( Stem("wünsch"), "wunsch");});
test("wünschbare -> wunschbar", function() {deepEqual( Stem("wünschbare"), "wunschbar");});
test("wünschbarsten -> wunschbarst", function() {deepEqual( Stem("wünschbarsten"), "wunschbarst");});
test("wunsche -> wunsch", function() {deepEqual( Stem("wunsche"), "wunsch");});
test("wünsche -> wunsch", function() {deepEqual( Stem("wünsche"), "wunsch");});
test("wünschen -> wunsch", function() {deepEqual( Stem("wünschen"), "wunsch");});
test("wünschenswert -> wunschenswert", function() {deepEqual( Stem("wünschenswert"), "wunschenswert");});
test("wünschenswerten -> wunschenswert", function() {deepEqual( Stem("wünschenswerten"), "wunschenswert");});
test("wunsches -> wunsch", function() {deepEqual( Stem("wunsches"), "wunsch");});
test("wünschet -> wunschet", function() {deepEqual( Stem("wünschet"), "wunschet");});
test("wünscht -> wunscht", function() {deepEqual( Stem("wünscht"), "wunscht");});
test("wünschte -> wunscht", function() {deepEqual( Stem("wünschte"), "wunscht");});
test("wünschten -> wunscht", function() {deepEqual( Stem("wünschten"), "wunscht");});
test("wunsiedel -> wunsiedel", function() {deepEqual( Stem("wunsiedel"), "wunsiedel");});
test("wunsiedels -> wunsiedel", function() {deepEqual( Stem("wunsiedels"), "wunsiedel");});
test("wupp -> wupp", function() {deepEqual( Stem("wupp"), "wupp");});
test("würd -> wurd", function() {deepEqual( Stem("würd"), "wurd");});
test("wurde -> wurd", function() {deepEqual( Stem("wurde"), "wurd");});
test("würde -> wurd", function() {deepEqual( Stem("würde"), "wurd");});
test("wurden -> wurd", function() {deepEqual( Stem("wurden"), "wurd");});
test("würden -> wurd", function() {deepEqual( Stem("würden"), "wurd");});
test("wurdest -> wurd", function() {deepEqual( Stem("wurdest"), "wurd");});
test("würdest -> wurd", function() {deepEqual( Stem("würdest"), "wurd");});
test("würdet -> wurdet", function() {deepEqual( Stem("würdet"), "wurdet");});
test("würdig -> wurdig", function() {deepEqual( Stem("würdig"), "wurdig");});
test("würdige -> wurdig", function() {deepEqual( Stem("würdige"), "wurdig");});
test("würdigen -> wurdig", function() {deepEqual( Stem("würdigen"), "wurdig");});
test("würdiger -> wurdig", function() {deepEqual( Stem("würdiger"), "wurdig");});
test("würdigkeit -> wurdig", function() {deepEqual( Stem("würdigkeit"), "wurdig");});
test("würdigte -> wurdigt", function() {deepEqual( Stem("würdigte"), "wurdigt");});
test("würdst -> wurd", function() {deepEqual( Stem("würdst"), "wurd");});
test("würfeln -> wurfeln", function() {deepEqual( Stem("würfeln"), "wurfeln");});
test("würfen -> wurf", function() {deepEqual( Stem("würfen"), "wurf");});
test("würgen -> wurg", function() {deepEqual( Stem("würgen"), "wurg");});
test("würgte -> wurgt", function() {deepEqual( Stem("würgte"), "wurgt");});
test("wurm -> wurm", function() {deepEqual( Stem("wurm"), "wurm");});
test("würmchen -> wurmch", function() {deepEqual( Stem("würmchen"), "wurmch");});
test("würmer -> wurm", function() {deepEqual( Stem("würmer"), "wurm");});
test("wurmisierte -> wurmisiert", function() {deepEqual( Stem("wurmisierte"), "wurmisiert");});
test("wurst -> wurst", function() {deepEqual( Stem("wurst"), "wurst");});
test("würstchen -> wurstch", function() {deepEqual( Stem("würstchen"), "wurstch");});
test("würtembergischen -> wurtemberg", function() {deepEqual( Stem("würtembergischen"), "wurtemberg");});
test("würze -> wurz", function() {deepEqual( Stem("würze"), "wurz");});
test("wurzel -> wurzel", function() {deepEqual( Stem("wurzel"), "wurzel");});
test("wurzelknorren -> wurzelknorr", function() {deepEqual( Stem("wurzelknorren"), "wurzelknorr");});
test("wurzeln -> wurzeln", function() {deepEqual( Stem("wurzeln"), "wurzeln");});
test("wurzelstock -> wurzelstock", function() {deepEqual( Stem("wurzelstock"), "wurzelstock");});
test("wurzelstöcke -> wurzelstock", function() {deepEqual( Stem("wurzelstöcke"), "wurzelstock");});
test("wurzelt -> wurzelt", function() {deepEqual( Stem("wurzelt"), "wurzelt");});
test("würzigen -> wurzig", function() {deepEqual( Stem("würzigen"), "wurzig");});
test("würzkrämer -> wurzkram", function() {deepEqual( Stem("würzkrämer"), "wurzkram");});
test("würzte -> wurzt", function() {deepEqual( Stem("würzte"), "wurzt");});
test("wurzweg -> wurzweg", function() {deepEqual( Stem("wurzweg"), "wurzweg");});
test("wusch -> wusch", function() {deepEqual( Stem("wusch"), "wusch");});
test("wuschelig -> wuschel", function() {deepEqual( Stem("wuschelig"), "wuschel");});
test("wusst -> wusst", function() {deepEqual( Stem("wusst"), "wusst");});
test("wusste -> wusst", function() {deepEqual( Stem("wusste"), "wusst");});
test("wußte -> wusst", function() {deepEqual( Stem("wußte"), "wusst");});
test("wüsste -> wusst", function() {deepEqual( Stem("wüsste"), "wusst");});
test("wüßte -> wusst", function() {deepEqual( Stem("wüßte"), "wusst");});
test("wussten -> wusst", function() {deepEqual( Stem("wussten"), "wusst");});
test("wußten -> wusst", function() {deepEqual( Stem("wußten"), "wusst");});
test("wüssten -> wusst", function() {deepEqual( Stem("wüssten"), "wusst");});
test("wüßten -> wusst", function() {deepEqual( Stem("wüßten"), "wusst");});
test("wüsstens -> wusst", function() {deepEqual( Stem("wüsstens"), "wusst");});
test("wusstest -> wusst", function() {deepEqual( Stem("wusstest"), "wusst");});
test("wüßtest -> wusst", function() {deepEqual( Stem("wüßtest"), "wusst");});
test("wüsstet -> wusstet", function() {deepEqual( Stem("wüsstet"), "wusstet");});
test("wüßtet -> wusstet", function() {deepEqual( Stem("wüßtet"), "wusstet");});
test("wüst -> wust", function() {deepEqual( Stem("wüst"), "wust");});
test("wüste -> wust", function() {deepEqual( Stem("wüste"), "wust");});
test("wüsten -> wust", function() {deepEqual( Stem("wüsten"), "wust");});
test("wüstenei -> wustenei", function() {deepEqual( Stem("wüstenei"), "wustenei");});
test("wüsteneien -> wustenei", function() {deepEqual( Stem("wüsteneien"), "wustenei");});
test("wüstensand -> wustensand", function() {deepEqual( Stem("wüstensand"), "wustensand");});
test("wüstenwirbelwetterhut -> wustenwirbelwetterhut", function() {deepEqual( Stem("wüstenwirbelwetterhut"), "wustenwirbelwetterhut");});
test("wüster -> wust", function() {deepEqual( Stem("wüster"), "wust");});
test("wut -> wut", function() {deepEqual( Stem("wut"), "wut");});
test("wüten -> wut", function() {deepEqual( Stem("wüten"), "wut");});
test("wütend -> wutend", function() {deepEqual( Stem("wütend"), "wutend");});
test("wütenden -> wutend", function() {deepEqual( Stem("wütenden"), "wutend");});
test("wütender -> wutend", function() {deepEqual( Stem("wütender"), "wutend");});
test("wütendere -> wutend", function() {deepEqual( Stem("wütendere"), "wutend");});
test("wutentbrannt -> wutentbrannt", function() {deepEqual( Stem("wutentbrannt"), "wutentbrannt");});
test("www -> www", function() {deepEqual( Stem("www"), "www");});
test("x -> x", function() {deepEqual( Stem("x"), "x");});
test("yeni -> yeni", function() {deepEqual( Stem("yeni"), "yeni");});
test("yet -> yet", function() {deepEqual( Stem("yet"), "yet");});
test("york -> york", function() {deepEqual( Stem("york"), "york");});
test("z -> z", function() {deepEqual( Stem("z"), "z");});
test("zacken -> zack", function() {deepEqual( Stem("zacken"), "zack");});
test("zackenwasser -> zackenwass", function() {deepEqual( Stem("zackenwasser"), "zackenwass");});
test("zackige -> zackig", function() {deepEqual( Stem("zackige"), "zackig");});
test("zadoks -> zadok", function() {deepEqual( Stem("zadoks"), "zadok");});
test("zagen -> zag", function() {deepEqual( Stem("zagen"), "zag");});
test("zagend -> zagend", function() {deepEqual( Stem("zagend"), "zagend");});
test("zaghaft -> zaghaft", function() {deepEqual( Stem("zaghaft"), "zaghaft");});
test("zaghaftigkeit -> zaghaft", function() {deepEqual( Stem("zaghaftigkeit"), "zaghaft");});
test("zäh -> zah", function() {deepEqual( Stem("zäh"), "zah");});
test("zähe -> zah", function() {deepEqual( Stem("zähe"), "zah");});
test("zahl -> zahl", function() {deepEqual( Stem("zahl"), "zahl");});
test("zähl -> zahl", function() {deepEqual( Stem("zähl"), "zahl");});
test("zahle -> zahl", function() {deepEqual( Stem("zahle"), "zahl");});
test("zähle -> zahl", function() {deepEqual( Stem("zähle"), "zahl");});
test("zahlen -> zahl", function() {deepEqual( Stem("zahlen"), "zahl");});
test("zählen -> zahl", function() {deepEqual( Stem("zählen"), "zahl");});
test("zahlende -> zahlend", function() {deepEqual( Stem("zahlende"), "zahlend");});
test("zähler -> zahl", function() {deepEqual( Stem("zähler"), "zahl");});
test("zahllos -> zahllos", function() {deepEqual( Stem("zahllos"), "zahllos");});
test("zahllose -> zahllos", function() {deepEqual( Stem("zahllose"), "zahllos");});
test("zahllosen -> zahllos", function() {deepEqual( Stem("zahllosen"), "zahllos");});
test("zahlloser -> zahllos", function() {deepEqual( Stem("zahlloser"), "zahllos");});
test("zahlrei -> zahlrei", function() {deepEqual( Stem("zahlrei"), "zahlrei");});
test("zahlreich -> zahlreich", function() {deepEqual( Stem("zahlreich"), "zahlreich");});
test("zahlreiche -> zahlreich", function() {deepEqual( Stem("zahlreiche"), "zahlreich");});
test("zahlreichen -> zahlreich", function() {deepEqual( Stem("zahlreichen"), "zahlreich");});
test("zahlreicher -> zahlreich", function() {deepEqual( Stem("zahlreicher"), "zahlreich");});
test("zahlreichsten -> zahlreich", function() {deepEqual( Stem("zahlreichsten"), "zahlreich");});
test("zahlt -> zahlt", function() {deepEqual( Stem("zahlt"), "zahlt");});
test("zählt -> zahlt", function() {deepEqual( Stem("zählt"), "zahlt");});
test("zahlte -> zahlt", function() {deepEqual( Stem("zahlte"), "zahlt");});
test("zählte -> zahlt", function() {deepEqual( Stem("zählte"), "zahlt");});
test("zahlungen -> zahlung", function() {deepEqual( Stem("zahlungen"), "zahlung");});
test("zahm -> zahm", function() {deepEqual( Stem("zahm"), "zahm");});
test("zahmen -> zahm", function() {deepEqual( Stem("zahmen"), "zahm");});
test("zähmen -> zahm", function() {deepEqual( Stem("zähmen"), "zahm");});
test("zahnbürste -> zahnburst", function() {deepEqual( Stem("zahnbürste"), "zahnburst");});
test("zähnchen -> zahnch", function() {deepEqual( Stem("zähnchen"), "zahnch");});
test("zähne -> zahn", function() {deepEqual( Stem("zähne"), "zahn");});
test("zähnefletschend -> zahnefletsch", function() {deepEqual( Stem("zähnefletschend"), "zahnefletsch");});
test("zähneklappernd -> zahneklappernd", function() {deepEqual( Stem("zähneklappernd"), "zahneklappernd");});
test("zähnen -> zahn", function() {deepEqual( Stem("zähnen"), "zahn");});
test("zahnperlen -> zahnperl", function() {deepEqual( Stem("zahnperlen"), "zahnperl");});
test("zamm -> zamm", function() {deepEqual( Stem("zamm"), "zamm");});
test("zammklauben -> zammklaub", function() {deepEqual( Stem("zammklauben"), "zammklaub");});
test("zammraumen -> zammraum", function() {deepEqual( Stem("zammraumen"), "zammraum");});
test("zammtreffen -> zammtreff", function() {deepEqual( Stem("zammtreffen"), "zammtreff");});
test("zängchen -> zangch", function() {deepEqual( Stem("zängchen"), "zangch");});
test("zank -> zank", function() {deepEqual( Stem("zank"), "zank");});
test("zanken -> zank", function() {deepEqual( Stem("zanken"), "zank");});
test("zänkereien -> zankerei", function() {deepEqual( Stem("zänkereien"), "zankerei");});
test("zankes -> zank", function() {deepEqual( Stem("zankes"), "zank");});
test("zänkischen -> zankisch", function() {deepEqual( Stem("zänkischen"), "zankisch");});
test("zanklaute -> zanklaut", function() {deepEqual( Stem("zanklaute"), "zanklaut");});
test("zankt -> zankt", function() {deepEqual( Stem("zankt"), "zankt");});
test("zankte -> zankt", function() {deepEqual( Stem("zankte"), "zankt");});
test("zankten -> zankt", function() {deepEqual( Stem("zankten"), "zankt");});
test("zapfenbrett -> zapfenbrett", function() {deepEqual( Stem("zapfenbrett"), "zapfenbrett");});
test("zappeln -> zappeln", function() {deepEqual( Stem("zappeln"), "zappeln");});
test("zappelte -> zappelt", function() {deepEqual( Stem("zappelte"), "zappelt");});
test("zarge -> zarg", function() {deepEqual( Stem("zarge"), "zarg");});
test("zargen -> zarg", function() {deepEqual( Stem("zargen"), "zarg");});
test("zart -> zart", function() {deepEqual( Stem("zart"), "zart");});
test("zartem -> zart", function() {deepEqual( Stem("zartem"), "zart");});
test("zarten -> zart", function() {deepEqual( Stem("zarten"), "zart");});
test("zarter -> zart", function() {deepEqual( Stem("zarter"), "zart");});
test("zarteren -> zart", function() {deepEqual( Stem("zarteren"), "zart");});
test("zartes -> zart", function() {deepEqual( Stem("zartes"), "zart");});
test("zarteste -> zart", function() {deepEqual( Stem("zarteste"), "zart");});
test("zartesten -> zart", function() {deepEqual( Stem("zartesten"), "zart");});
test("zartgefühles -> zartgefuhl", function() {deepEqual( Stem("zartgefühles"), "zartgefuhl");});
test("zartheit -> zartheit", function() {deepEqual( Stem("zartheit"), "zartheit");});
test("zärtlich -> zartlich", function() {deepEqual( Stem("zärtlich"), "zartlich");});
test("zärtliche -> zartlich", function() {deepEqual( Stem("zärtliche"), "zartlich");});
test("zärtlichen -> zartlich", function() {deepEqual( Stem("zärtlichen"), "zartlich");});
test("zärtliches -> zartlich", function() {deepEqual( Stem("zärtliches"), "zartlich");});
test("zärtlichkeit -> zartlich", function() {deepEqual( Stem("zärtlichkeit"), "zartlich");});
test("zärtlichkeiten -> zartlich", function() {deepEqual( Stem("zärtlichkeiten"), "zartlich");});
test("zärtlichste -> zartlich", function() {deepEqual( Stem("zärtlichste"), "zartlich");});
test("zaster -> zast", function() {deepEqual( Stem("zaster"), "zast");});
test("zauber -> zaub", function() {deepEqual( Stem("zauber"), "zaub");});
test("zauberei -> zauberei", function() {deepEqual( Stem("zauberei"), "zauberei");});
test("zaubereien -> zauberei", function() {deepEqual( Stem("zaubereien"), "zauberei");});
test("zauberer -> zaub", function() {deepEqual( Stem("zauberer"), "zaub");});
test("zauberern -> zaub", function() {deepEqual( Stem("zauberern"), "zaub");});
test("zauberfrau -> zauberfrau", function() {deepEqual( Stem("zauberfrau"), "zauberfrau");});
test("zauberhaften -> zauberhaft", function() {deepEqual( Stem("zauberhaften"), "zauberhaft");});
test("zauberhafter -> zauberhaft", function() {deepEqual( Stem("zauberhafter"), "zauberhaft");});
test("zauberhaftes -> zauberhaft", function() {deepEqual( Stem("zauberhaftes"), "zauberhaft");});
test("zauberin -> zauberin", function() {deepEqual( Stem("zauberin"), "zauberin");});
test("zauberische -> zauber", function() {deepEqual( Stem("zauberische"), "zauber");});
test("zauberkünste -> zauberkun", function() {deepEqual( Stem("zauberkünste"), "zauberkun");});
test("zauberlaterne -> zauberlatern", function() {deepEqual( Stem("zauberlaterne"), "zauberlatern");});
test("zaubermacht -> zaubermacht", function() {deepEqual( Stem("zaubermacht"), "zaubermacht");});
test("zaubermeister -> zaubermeist", function() {deepEqual( Stem("zaubermeister"), "zaubermeist");});
test("zaubern -> zaub", function() {deepEqual( Stem("zaubern"), "zaub");});
test("zauberschlage -> zauberschlag", function() {deepEqual( Stem("zauberschlage"), "zauberschlag");});
test("zauberstab -> zauberstab", function() {deepEqual( Stem("zauberstab"), "zauberstab");});
test("zauberstabe -> zauberstab", function() {deepEqual( Stem("zauberstabe"), "zauberstab");});
test("zauberstücke -> zauberstuck", function() {deepEqual( Stem("zauberstücke"), "zauberstuck");});
test("zauberwege -> zauberweg", function() {deepEqual( Stem("zauberwege"), "zauberweg");});
test("zauberworte -> zauberwort", function() {deepEqual( Stem("zauberworte"), "zauberwort");});
test("zauberzartes -> zauberzart", function() {deepEqual( Stem("zauberzartes"), "zauberzart");});
test("zaum -> zaum", function() {deepEqual( Stem("zaum"), "zaum");});
test("zaume -> zaum", function() {deepEqual( Stem("zaume"), "zaum");});
test("zaun -> zaun", function() {deepEqual( Stem("zaun"), "zaun");});
test("zäune -> zaun", function() {deepEqual( Stem("zäune"), "zaun");});
test("zaunes -> zaun", function() {deepEqual( Stem("zaunes"), "zaun");});
test("zaunlatten -> zaunlatt", function() {deepEqual( Stem("zaunlatten"), "zaunlatt");});
test("zausen -> zaus", function() {deepEqual( Stem("zausen"), "zaus");});
test("zebaoth -> zebaoth", function() {deepEqual( Stem("zebaoth"), "zebaoth");});
test("zeche -> zech", function() {deepEqual( Stem("zeche"), "zech");});
test("zechen -> zech", function() {deepEqual( Stem("zechen"), "zech");});
test("zechgelage -> zechgelag", function() {deepEqual( Stem("zechgelage"), "zechgelag");});
test("zechten -> zecht", function() {deepEqual( Stem("zechten"), "zecht");});
test("zedekia -> zedekia", function() {deepEqual( Stem("zedekia"), "zedekia");});
test("zeder -> zed", function() {deepEqual( Stem("zeder"), "zed");});
test("zedern -> zed", function() {deepEqual( Stem("zedern"), "zed");});
test("zedernholz -> zedernholz", function() {deepEqual( Stem("zedernholz"), "zedernholz");});
test("zehen -> zeh", function() {deepEqual( Stem("zehen"), "zeh");});
test("zehenspitzen -> zehenspitz", function() {deepEqual( Stem("zehenspitzen"), "zehenspitz");});
test("zehenten -> zehent", function() {deepEqual( Stem("zehenten"), "zehent");});
test("zehn -> zehn", function() {deepEqual( Stem("zehn"), "zehn");});
test("zehnfache -> zehnfach", function() {deepEqual( Stem("zehnfache"), "zehnfach");});
test("zehnjährige -> zehnjahr", function() {deepEqual( Stem("zehnjährige"), "zehnjahr");});
test("zehnjährigen -> zehnjahr", function() {deepEqual( Stem("zehnjährigen"), "zehnjahr");});
test("zehnmal -> zehnmal", function() {deepEqual( Stem("zehnmal"), "zehnmal");});
test("zehnsaitigen -> zehnsait", function() {deepEqual( Stem("zehnsaitigen"), "zehnsait");});
test("zehntausend -> zehntaus", function() {deepEqual( Stem("zehntausend"), "zehntaus");});
test("zehntausende -> zehntaus", function() {deepEqual( Stem("zehntausende"), "zehntaus");});
test("zehnte -> zehnt", function() {deepEqual( Stem("zehnte"), "zehnt");});
test("zehnten -> zehnt", function() {deepEqual( Stem("zehnten"), "zehnt");});
test("zehntes -> zehnt", function() {deepEqual( Stem("zehntes"), "zehnt");});
test("zehnzahl -> zehnzahl", function() {deepEqual( Stem("zehnzahl"), "zehnzahl");});
test("zehren -> zehr", function() {deepEqual( Stem("zehren"), "zehr");});
test("zehrpfennig -> zehrpfenn", function() {deepEqual( Stem("zehrpfennig"), "zehrpfenn");});
test("zehrte -> zehrt", function() {deepEqual( Stem("zehrte"), "zehrt");});
test("zehrung -> zehrung", function() {deepEqual( Stem("zehrung"), "zehrung");});
test("zeichen -> zeich", function() {deepEqual( Stem("zeichen"), "zeich");});
test("zeichens -> zeich", function() {deepEqual( Stem("zeichens"), "zeich");});
test("zeichne -> zeichn", function() {deepEqual( Stem("zeichne"), "zeichn");});
test("zeichners -> zeichn", function() {deepEqual( Stem("zeichners"), "zeichn");});
test("zeichnete -> zeichnet", function() {deepEqual( Stem("zeichnete"), "zeichnet");});
test("zeichnung -> zeichnung", function() {deepEqual( Stem("zeichnung"), "zeichnung");});
test("zeichnungen -> zeichnung", function() {deepEqual( Stem("zeichnungen"), "zeichnung");});
test("zeid -> zeid", function() {deepEqual( Stem("zeid"), "zeid");});
test("zeiding -> zeiding", function() {deepEqual( Stem("zeiding"), "zeiding");});
test("zeig -> zeig", function() {deepEqual( Stem("zeig"), "zeig");});
test("zeige -> zeig", function() {deepEqual( Stem("zeige"), "zeig");});
test("zeigefinger -> zeigefing", function() {deepEqual( Stem("zeigefinger"), "zeigefing");});
test("zeigen -> zeig", function() {deepEqual( Stem("zeigen"), "zeig");});
test("zeiger -> zeig", function() {deepEqual( Stem("zeiger"), "zeig");});
test("zeigst -> zeig", function() {deepEqual( Stem("zeigst"), "zeig");});
test("zeigt -> zeigt", function() {deepEqual( Stem("zeigt"), "zeigt");});
test("zeigte -> zeigt", function() {deepEqual( Stem("zeigte"), "zeigt");});
test("zeigten -> zeigt", function() {deepEqual( Stem("zeigten"), "zeigt");});
test("zeile -> zeil", function() {deepEqual( Stem("zeile"), "zeil");});
test("zeiserl -> zeiserl", function() {deepEqual( Stem("zeiserl"), "zeiserl");});
test("zeisig -> zeisig", function() {deepEqual( Stem("zeisig"), "zeisig");});
test("zeit -> zeit", function() {deepEqual( Stem("zeit"), "zeit");});
test("zeitabläufe -> zeitablauf", function() {deepEqual( Stem("zeitabläufe"), "zeitablauf");});
test("zeitabschnitte -> zeitabschnitt", function() {deepEqual( Stem("zeitabschnitte"), "zeitabschnitt");});
test("zeitalter -> zeitalt", function() {deepEqual( Stem("zeitalter"), "zeitalt");});
test("zeitaltern -> zeitalt", function() {deepEqual( Stem("zeitaltern"), "zeitalt");});
test("zeitangabe -> zeitangab", function() {deepEqual( Stem("zeitangabe"), "zeitangab");});
test("zeitaufwand -> zeitaufwand", function() {deepEqual( Stem("zeitaufwand"), "zeitaufwand");});
test("zeitbedingung -> zeitbeding", function() {deepEqual( Stem("zeitbedingung"), "zeitbeding");});
test("zeitbegriff -> zeitbegriff", function() {deepEqual( Stem("zeitbegriff"), "zeitbegriff");});
test("zeiten -> zeit", function() {deepEqual( Stem("zeiten"), "zeit");});
test("zeitenwechsel -> zeitenwechsel", function() {deepEqual( Stem("zeitenwechsel"), "zeitenwechsel");});
test("zeitgenossen -> zeitgenoss", function() {deepEqual( Stem("zeitgenossen"), "zeitgenoss");});
test("zeitlang -> zeitlang", function() {deepEqual( Stem("zeitlang"), "zeitlang");});
test("zeitlauf -> zeitlauf", function() {deepEqual( Stem("zeitlauf"), "zeitlauf");});
test("zeitläufe -> zeitlauf", function() {deepEqual( Stem("zeitläufe"), "zeitlauf");});
test("zeitlaufes -> zeitlauf", function() {deepEqual( Stem("zeitlaufes"), "zeitlauf");});
test("zeitlaufs -> zeitlauf", function() {deepEqual( Stem("zeitlaufs"), "zeitlauf");});
test("zeitlebens -> zeitleb", function() {deepEqual( Stem("zeitlebens"), "zeitleb");});
test("zeitliche -> zeitlich", function() {deepEqual( Stem("zeitliche"), "zeitlich");});
test("zeitlichen -> zeitlich", function() {deepEqual( Stem("zeitlichen"), "zeitlich");});
test("zeitlicherem -> zeitlich", function() {deepEqual( Stem("zeitlicherem"), "zeitlich");});
test("zeitmangel -> zeitmangel", function() {deepEqual( Stem("zeitmangel"), "zeitmangel");});
test("zeitminute -> zeitminut", function() {deepEqual( Stem("zeitminute"), "zeitminut");});
test("zeitpunkt -> zeitpunkt", function() {deepEqual( Stem("zeitpunkt"), "zeitpunkt");});
test("zeitpunkte -> zeitpunkt", function() {deepEqual( Stem("zeitpunkte"), "zeitpunkt");});
test("zeitpunkten -> zeitpunkt", function() {deepEqual( Stem("zeitpunkten"), "zeitpunkt");});
test("zeitraum -> zeitraum", function() {deepEqual( Stem("zeitraum"), "zeitraum");});
test("zeitraume -> zeitraum", function() {deepEqual( Stem("zeitraume"), "zeitraum");});
test("zeiträume -> zeitraum", function() {deepEqual( Stem("zeiträume"), "zeitraum");});
test("zeiträumen -> zeitraum", function() {deepEqual( Stem("zeiträumen"), "zeitraum");});
test("zeitrechnung -> zeitrechn", function() {deepEqual( Stem("zeitrechnung"), "zeitrechn");});
test("zeitschrift -> zeitschrift", function() {deepEqual( Stem("zeitschrift"), "zeitschrift");});
test("zeitschriften -> zeitschrift", function() {deepEqual( Stem("zeitschriften"), "zeitschrift");});
test("zeitung -> zeitung", function() {deepEqual( Stem("zeitung"), "zeitung");});
test("zeitungen -> zeitung", function() {deepEqual( Stem("zeitungen"), "zeitung");});
test("zeitungsläden -> zeitungslad", function() {deepEqual( Stem("zeitungsläden"), "zeitungslad");});
test("zeitverhältnisse -> zeitverhaltnis", function() {deepEqual( Stem("zeitverhältnisse"), "zeitverhaltnis");});
test("zeitverlauf -> zeitverlauf", function() {deepEqual( Stem("zeitverlauf"), "zeitverlauf");});
test("zeitvertreib -> zeitvertreib", function() {deepEqual( Stem("zeitvertreib"), "zeitvertreib");});
test("zeitvertreiber -> zeitvertreib", function() {deepEqual( Stem("zeitvertreiber"), "zeitvertreib");});
test("zeitverwendung -> zeitverwend", function() {deepEqual( Stem("zeitverwendung"), "zeitverwend");});
test("zeitweilig -> zeitweil", function() {deepEqual( Stem("zeitweilig"), "zeitweil");});
test("zeitweiligen -> zeitweil", function() {deepEqual( Stem("zeitweiligen"), "zeitweil");});
test("zeitweise -> zeitweis", function() {deepEqual( Stem("zeitweise"), "zeitweis");});
test("zelebriert -> zelebriert", function() {deepEqual( Stem("zelebriert"), "zelebriert");});
test("zelt -> zelt", function() {deepEqual( Stem("zelt"), "zelt");});
test("zeltbewohners -> zeltbewohn", function() {deepEqual( Stem("zeltbewohners"), "zeltbewohn");});
test("zelte -> zelt", function() {deepEqual( Stem("zelte"), "zelt");});
test("zelten -> zelt", function() {deepEqual( Stem("zelten"), "zelt");});
test("zeltes -> zelt", function() {deepEqual( Stem("zeltes"), "zelt");});
test("zeltlager -> zeltlag", function() {deepEqual( Stem("zeltlager"), "zeltlag");});
test("zen -> zen", function() {deepEqual( Stem("zen"), "zen");});
test("zentnerlast -> zentnerlast", function() {deepEqual( Stem("zentnerlast"), "zentnerlast");});
test("zentnern -> zentn", function() {deepEqual( Stem("zentnern"), "zentn");});
test("zentnerschwer -> zentnerschw", function() {deepEqual( Stem("zentnerschwer"), "zentnerschw");});
test("zentralbüro -> zentralburo", function() {deepEqual( Stem("zentralbüro"), "zentralburo");});
test("zentraldorf -> zentraldorf", function() {deepEqual( Stem("zentraldorf"), "zentraldorf");});
test("zentralsekretär -> zentralsekretar", function() {deepEqual( Stem("zentralsekretär"), "zentralsekretar");});
test("zentralsekretärs -> zentralsekretar", function() {deepEqual( Stem("zentralsekretärs"), "zentralsekretar");});
test("zentralstelle -> zentralstell", function() {deepEqual( Stem("zentralstelle"), "zentralstell");});
test("zeph -> zeph", function() {deepEqual( Stem("zeph"), "zeph");});
test("zephanja -> zephanja", function() {deepEqual( Stem("zephanja"), "zephanja");});
test("zeppelinballons -> zeppelinballon", function() {deepEqual( Stem("zeppelinballons"), "zeppelinballon");});
test("zepter -> zept", function() {deepEqual( Stem("zepter"), "zept");});
test("zerbläuen -> zerblau", function() {deepEqual( Stem("zerbläuen"), "zerblau");});
test("zerbrach -> zerbrach", function() {deepEqual( Stem("zerbrach"), "zerbrach");});
test("zerbräche -> zerbrach", function() {deepEqual( Stem("zerbräche"), "zerbrach");});
test("zerbreche -> zerbrech", function() {deepEqual( Stem("zerbreche"), "zerbrech");});
test("zerbrechen -> zerbrech", function() {deepEqual( Stem("zerbrechen"), "zerbrech");});
test("zerbrechend -> zerbrech", function() {deepEqual( Stem("zerbrechend"), "zerbrech");});
test("zerbrechlich -> zerbrech", function() {deepEqual( Stem("zerbrechlich"), "zerbrech");});
test("zerbricht -> zerbricht", function() {deepEqual( Stem("zerbricht"), "zerbricht");});
test("zerbrochen -> zerbroch", function() {deepEqual( Stem("zerbrochen"), "zerbroch");});
test("zerbrochene -> zerbroch", function() {deepEqual( Stem("zerbrochene"), "zerbroch");});
test("zerbrochenen -> zerbroch", function() {deepEqual( Stem("zerbrochenen"), "zerbroch");});
test("zerdrückt -> zerdruckt", function() {deepEqual( Stem("zerdrückt"), "zerdruckt");});
test("zerdrückte -> zerdruckt", function() {deepEqual( Stem("zerdrückte"), "zerdruckt");});
test("zerdrückten -> zerdruckt", function() {deepEqual( Stem("zerdrückten"), "zerdruckt");});
test("zeremonie -> zeremoni", function() {deepEqual( Stem("zeremonie"), "zeremoni");});
test("zeremoniell -> zeremoniell", function() {deepEqual( Stem("zeremoniell"), "zeremoniell");});
test("zerfahrenen -> zerfahr", function() {deepEqual( Stem("zerfahrenen"), "zerfahr");});
test("zerfallenden -> zerfall", function() {deepEqual( Stem("zerfallenden"), "zerfall");});
test("zerfallene -> zerfall", function() {deepEqual( Stem("zerfallene"), "zerfall");});
test("zerfallenen -> zerfall", function() {deepEqual( Stem("zerfallenen"), "zerfall");});
test("zerfegte -> zerfegt", function() {deepEqual( Stem("zerfegte"), "zerfegt");});
test("zerfetzt -> zerfetzt", function() {deepEqual( Stem("zerfetzt"), "zerfetzt");});
test("zerfliesse -> zerfliess", function() {deepEqual( Stem("zerfliesse"), "zerfliess");});
test("zerfliessen -> zerfliess", function() {deepEqual( Stem("zerfliessen"), "zerfliess");});
test("zerfließen -> zerfliess", function() {deepEqual( Stem("zerfließen"), "zerfliess");});
test("zerfliesst -> zerfliesst", function() {deepEqual( Stem("zerfliesst"), "zerfliesst");});
test("zerfließt -> zerfliesst", function() {deepEqual( Stem("zerfließt"), "zerfliesst");});
test("zerflog -> zerflog", function() {deepEqual( Stem("zerflog"), "zerflog");});
test("zerfressenen -> zerfress", function() {deepEqual( Stem("zerfressenen"), "zerfress");});
test("zergeht -> zergeht", function() {deepEqual( Stem("zergeht"), "zergeht");});
test("zergliedern -> zerglied", function() {deepEqual( Stem("zergliedern"), "zerglied");});
test("zergliederung -> zerglieder", function() {deepEqual( Stem("zergliederung"), "zerglieder");});
test("zerhaue -> zerhau", function() {deepEqual( Stem("zerhaue"), "zerhau");});
test("zerhauen -> zerhau", function() {deepEqual( Stem("zerhauen"), "zerhau");});
test("zerhauend -> zerhau", function() {deepEqual( Stem("zerhauend"), "zerhau");});
test("zerknicken -> zerknick", function() {deepEqual( Stem("zerknicken"), "zerknick");});
test("zerknickten -> zerknickt", function() {deepEqual( Stem("zerknickten"), "zerknickt");});
test("zerknirscht -> zerknirscht", function() {deepEqual( Stem("zerknirscht"), "zerknirscht");});
test("zerknitterten -> zerknittert", function() {deepEqual( Stem("zerknitterten"), "zerknittert");});
test("zerknittertes -> zerknittert", function() {deepEqual( Stem("zerknittertes"), "zerknittert");});
test("zerkratzten -> zerkratzt", function() {deepEqual( Stem("zerkratzten"), "zerkratzt");});
test("zerlegte -> zerlegt", function() {deepEqual( Stem("zerlegte"), "zerlegt");});
test("zerlegung -> zerleg", function() {deepEqual( Stem("zerlegung"), "zerleg");});
test("zermalme -> zermalm", function() {deepEqual( Stem("zermalme"), "zermalm");});
test("zermalmen -> zermalm", function() {deepEqual( Stem("zermalmen"), "zermalm");});
test("zermalmend -> zermalm", function() {deepEqual( Stem("zermalmend"), "zermalm");});
test("zermalmest -> zermalm", function() {deepEqual( Stem("zermalmest"), "zermalm");});
test("zermalmt -> zermalmt", function() {deepEqual( Stem("zermalmt"), "zermalmt");});
test("zernagte -> zernagt", function() {deepEqual( Stem("zernagte"), "zernagt");});
test("zerraufte -> zerrauft", function() {deepEqual( Stem("zerraufte"), "zerrauft");});
test("zerreibend -> zerreib", function() {deepEqual( Stem("zerreibend"), "zerreib");});
test("zerreissen -> zerreiss", function() {deepEqual( Stem("zerreissen"), "zerreiss");});
test("zerreißen -> zerreiss", function() {deepEqual( Stem("zerreißen"), "zerreiss");});
test("zerreissenden -> zerreiss", function() {deepEqual( Stem("zerreissenden"), "zerreiss");});
test("zerreißenden -> zerreiss", function() {deepEqual( Stem("zerreißenden"), "zerreiss");});
test("zerreisst -> zerreisst", function() {deepEqual( Stem("zerreisst"), "zerreisst");});
test("zerreißt -> zerreisst", function() {deepEqual( Stem("zerreißt"), "zerreisst");});
test("zerren -> zerr", function() {deepEqual( Stem("zerren"), "zerr");});
test("zerrieben -> zerrieb", function() {deepEqual( Stem("zerrieben"), "zerrieb");});
test("zerriss -> zerriss", function() {deepEqual( Stem("zerriss"), "zerriss");});
test("zerriß -> zerriss", function() {deepEqual( Stem("zerriß"), "zerriss");});
test("zerrissen -> zerriss", function() {deepEqual( Stem("zerrissen"), "zerriss");});
test("zerrissene -> zerriss", function() {deepEqual( Stem("zerrissene"), "zerriss");});
test("zerrissenen -> zerriss", function() {deepEqual( Stem("zerrissenen"), "zerriss");});
test("zerrt -> zerrt", function() {deepEqual( Stem("zerrt"), "zerrt");});
test("zerrte -> zerrt", function() {deepEqual( Stem("zerrte"), "zerrt");});
test("zerschellen -> zerschell", function() {deepEqual( Stem("zerschellen"), "zerschell");});
test("zerschellt -> zerschellt", function() {deepEqual( Stem("zerschellt"), "zerschellt");});
test("zerschlagen -> zerschlag", function() {deepEqual( Stem("zerschlagen"), "zerschlag");});
test("zerschlagener -> zerschlag", function() {deepEqual( Stem("zerschlagener"), "zerschlag");});
test("zerschlitzt -> zerschlitzt", function() {deepEqual( Stem("zerschlitzt"), "zerschlitzt");});
test("zerschlug -> zerschlug", function() {deepEqual( Stem("zerschlug"), "zerschlug");});
test("zerschlugen -> zerschlug", function() {deepEqual( Stem("zerschlugen"), "zerschlug");});
test("zerschmettert -> zerschmettert", function() {deepEqual( Stem("zerschmettert"), "zerschmettert");});
test("zerschnitten -> zerschnitt", function() {deepEqual( Stem("zerschnitten"), "zerschnitt");});
test("zerschnittenien -> zerschnitteni", function() {deepEqual( Stem("zerschnittenien"), "zerschnitteni");});
test("zerschossenen -> zerschoss", function() {deepEqual( Stem("zerschossenen"), "zerschoss");});
test("zerspaltet -> zerspaltet", function() {deepEqual( Stem("zerspaltet"), "zerspaltet");});
test("zerspellten -> zerspellt", function() {deepEqual( Stem("zerspellten"), "zerspellt");});
test("zerspringen -> zerspring", function() {deepEqual( Stem("zerspringen"), "zerspring");});
test("zerstampfen -> zerstampf", function() {deepEqual( Stem("zerstampfen"), "zerstampf");});
test("zerstäubung -> zerstaub", function() {deepEqual( Stem("zerstäubung"), "zerstaub");});
test("zerstibten -> zerstibt", function() {deepEqual( Stem("zerstibten"), "zerstibt");});
test("zerstieben -> zerstieb", function() {deepEqual( Stem("zerstieben"), "zerstieb");});
test("zerstoben -> zerstob", function() {deepEqual( Stem("zerstoben"), "zerstob");});
test("zerstochen -> zerstoch", function() {deepEqual( Stem("zerstochen"), "zerstoch");});
test("zerstochene -> zerstoch", function() {deepEqual( Stem("zerstochene"), "zerstoch");});
test("zerstöre -> zerstor", function() {deepEqual( Stem("zerstöre"), "zerstor");});
test("zerstören -> zerstor", function() {deepEqual( Stem("zerstören"), "zerstor");});
test("zerstörend -> zerstor", function() {deepEqual( Stem("zerstörend"), "zerstor");});
test("zerstörende -> zerstor", function() {deepEqual( Stem("zerstörende"), "zerstor");});
test("zerstört -> zerstort", function() {deepEqual( Stem("zerstört"), "zerstort");});
test("zerstörte -> zerstort", function() {deepEqual( Stem("zerstörte"), "zerstort");});
test("zerstörten -> zerstort", function() {deepEqual( Stem("zerstörten"), "zerstort");});
test("zerstörung -> zerstor", function() {deepEqual( Stem("zerstörung"), "zerstor");});
test("zerstossen -> zerstoss", function() {deepEqual( Stem("zerstossen"), "zerstoss");});
test("zerstoßen -> zerstoss", function() {deepEqual( Stem("zerstoßen"), "zerstoss");});
test("zerstossene -> zerstoss", function() {deepEqual( Stem("zerstossene"), "zerstoss");});
test("zerstoßene -> zerstoss", function() {deepEqual( Stem("zerstoßene"), "zerstoss");});
test("zerstreuen -> zerstreu", function() {deepEqual( Stem("zerstreuen"), "zerstreu");});
test("zerstreut -> zerstreut", function() {deepEqual( Stem("zerstreut"), "zerstreut");});
test("zerstreute -> zerstreut", function() {deepEqual( Stem("zerstreute"), "zerstreut");});
test("zerstreuten -> zerstreut", function() {deepEqual( Stem("zerstreuten"), "zerstreut");});
test("zerstreutheit -> zerstreut", function() {deepEqual( Stem("zerstreutheit"), "zerstreut");});
test("zerstreuung -> zerstreu", function() {deepEqual( Stem("zerstreuung"), "zerstreu");});
test("zerteilt -> zerteilt", function() {deepEqual( Stem("zerteilt"), "zerteilt");});
test("zerteilten -> zerteilt", function() {deepEqual( Stem("zerteilten"), "zerteilt");});
test("zertrennt -> zertrennt", function() {deepEqual( Stem("zertrennt"), "zertrennt");});
test("zertreten -> zertret", function() {deepEqual( Stem("zertreten"), "zertret");});
test("zertretenen -> zertret", function() {deepEqual( Stem("zertretenen"), "zertret");});
test("zertrümmert -> zertrummert", function() {deepEqual( Stem("zertrümmert"), "zertrummert");});
test("zertrümmerte -> zertrummert", function() {deepEqual( Stem("zertrümmerte"), "zertrummert");});
test("zertrümmerten -> zertrummert", function() {deepEqual( Stem("zertrümmerten"), "zertrummert");});
test("zertrümmertes -> zertrummert", function() {deepEqual( Stem("zertrümmertes"), "zertrummert");});
test("zerwühlt -> zerwuhlt", function() {deepEqual( Stem("zerwühlt"), "zerwuhlt");});
test("zerzausten -> zerzaust", function() {deepEqual( Stem("zerzausten"), "zerzaust");});
test("zerzauster -> zerzaust", function() {deepEqual( Stem("zerzauster"), "zerzaust");});
test("zerzaustheit -> zerzaust", function() {deepEqual( Stem("zerzaustheit"), "zerzaust");});
test("zeter -> zet", function() {deepEqual( Stem("zeter"), "zet");});
test("zettel -> zettel", function() {deepEqual( Stem("zettel"), "zettel");});
test("zettelchen -> zettelch", function() {deepEqual( Stem("zettelchen"), "zettelch");});
test("zeug -> zeug", function() {deepEqual( Stem("zeug"), "zeug");});
test("zeuge -> zeug", function() {deepEqual( Stem("zeuge"), "zeug");});
test("zeugen -> zeug", function() {deepEqual( Stem("zeugen"), "zeug");});
test("zeugenaussagen -> zeugenaussag", function() {deepEqual( Stem("zeugenaussagen"), "zeugenaussag");});
test("zeughäuser -> zeughaus", function() {deepEqual( Stem("zeughäuser"), "zeughaus");});
test("zeughäusern -> zeughaus", function() {deepEqual( Stem("zeughäusern"), "zeughaus");});
test("zeugin -> zeugin", function() {deepEqual( Stem("zeugin"), "zeugin");});
test("zeugnis -> zeugnis", function() {deepEqual( Stem("zeugnis"), "zeugnis");});
test("zeugnisse -> zeugnis", function() {deepEqual( Stem("zeugnisse"), "zeugnis");});
test("zeugnisses -> zeugnis", function() {deepEqual( Stem("zeugnisses"), "zeugnis");});
test("zeugschmied -> zeugschmied", function() {deepEqual( Stem("zeugschmied"), "zeugschmied");});
test("zeugschmiedgesell -> zeugschmiedgesell", function() {deepEqual( Stem("zeugschmiedgesell"), "zeugschmiedgesell");});
test("zeugte -> zeugt", function() {deepEqual( Stem("zeugte"), "zeugt");});
test("zeugten -> zeugt", function() {deepEqual( Stem("zeugten"), "zeugt");});
test("zeugung -> zeugung", function() {deepEqual( Stem("zeugung"), "zeugung");});
test("zeugungen -> zeugung", function() {deepEqual( Stem("zeugungen"), "zeugung");});
test("zeugungsgliedern -> zeugungsglied", function() {deepEqual( Stem("zeugungsgliedern"), "zeugungsglied");});
test("zh -> zh", function() {deepEqual( Stem("zh"), "zh");});
test("zichorierte -> zichoriert", function() {deepEqual( Stem("zichorierte"), "zichoriert");});
test("zickzack -> zickzack", function() {deepEqual( Stem("zickzack"), "zickzack");});
test("zickzacklinien -> zickzacklini", function() {deepEqual( Stem("zickzacklinien"), "zickzacklini");});
test("zidon -> zidon", function() {deepEqual( Stem("zidon"), "zidon");});
test("zidons -> zidon", function() {deepEqual( Stem("zidons"), "zidon");});
test("ziedern -> zied", function() {deepEqual( Stem("ziedern"), "zied");});
test("ziedert -> ziedert", function() {deepEqual( Stem("ziedert"), "ziedert");});
test("ziegel -> ziegel", function() {deepEqual( Stem("ziegel"), "ziegel");});
test("ziegelmachen -> ziegelmach", function() {deepEqual( Stem("ziegelmachen"), "ziegelmach");});
test("ziegeln -> ziegeln", function() {deepEqual( Stem("ziegeln"), "ziegeln");});
test("ziegelofen -> ziegelof", function() {deepEqual( Stem("ziegelofen"), "ziegelof");});
test("ziegelsteine -> ziegelstein", function() {deepEqual( Stem("ziegelsteine"), "ziegelstein");});
test("ziegelsteinen -> ziegelstein", function() {deepEqual( Stem("ziegelsteinen"), "ziegelstein");});
test("ziegen -> zieg", function() {deepEqual( Stem("ziegen"), "zieg");});
test("ziegenbart -> ziegenbart", function() {deepEqual( Stem("ziegenbart"), "ziegenbart");});
test("ziegenbock -> ziegenbock", function() {deepEqual( Stem("ziegenbock"), "ziegenbock");});
test("ziegenböcken -> ziegenbock", function() {deepEqual( Stem("ziegenböcken"), "ziegenbock");});
test("ziegenkadaver -> ziegenkadav", function() {deepEqual( Stem("ziegenkadaver"), "ziegenkadav");});
test("zieh -> zieh", function() {deepEqual( Stem("zieh"), "zieh");});
test("ziehbrunnen -> ziehbrunn", function() {deepEqual( Stem("ziehbrunnen"), "ziehbrunn");});
test("ziehe -> zieh", function() {deepEqual( Stem("ziehe"), "zieh");});
test("ziehen -> zieh", function() {deepEqual( Stem("ziehen"), "zieh");});
test("ziehenden -> ziehend", function() {deepEqual( Stem("ziehenden"), "ziehend");});
test("ziehet -> ziehet", function() {deepEqual( Stem("ziehet"), "ziehet");});
test("zieht -> zieht", function() {deepEqual( Stem("zieht"), "zieht");});
test("ziel -> ziel", function() {deepEqual( Stem("ziel"), "ziel");});
test("ziele -> ziel", function() {deepEqual( Stem("ziele"), "ziel");});
test("zielen -> ziel", function() {deepEqual( Stem("zielen"), "ziel");});
test("zieles -> ziel", function() {deepEqual( Stem("zieles"), "ziel");});
test("zielgewehren -> zielgewehr", function() {deepEqual( Stem("zielgewehren"), "zielgewehr");});
test("ziell -> ziell", function() {deepEqual( Stem("ziell"), "ziell");});
test("zielort -> zielort", function() {deepEqual( Stem("zielort"), "zielort");});
test("ziels -> ziel", function() {deepEqual( Stem("ziels"), "ziel");});
test("zielsicher -> zielsich", function() {deepEqual( Stem("zielsicher"), "zielsich");});
test("zielte -> zielt", function() {deepEqual( Stem("zielte"), "zielt");});
test("ziemergerichte -> ziemergericht", function() {deepEqual( Stem("ziemergerichte"), "ziemergericht");});
test("ziemern -> ziem", function() {deepEqual( Stem("ziemern"), "ziem");});
test("ziemet -> ziemet", function() {deepEqual( Stem("ziemet"), "ziemet");});
test("ziemlich -> ziemlich", function() {deepEqual( Stem("ziemlich"), "ziemlich");});
test("ziemliche -> ziemlich", function() {deepEqual( Stem("ziemliche"), "ziemlich");});
test("ziemt -> ziemt", function() {deepEqual( Stem("ziemt"), "ziemt");});
test("ziemte -> ziemt", function() {deepEqual( Stem("ziemte"), "ziemt");});
test("ziepziep -> ziepziep", function() {deepEqual( Stem("ziepziep"), "ziepziep");});
test("zier -> zier", function() {deepEqual( Stem("zier"), "zier");});
test("zierde -> zierd", function() {deepEqual( Stem("zierde"), "zierd");});
test("zierden -> zierd", function() {deepEqual( Stem("zierden"), "zierd");});
test("zieren -> zier", function() {deepEqual( Stem("zieren"), "zier");});
test("zierende -> zierend", function() {deepEqual( Stem("zierende"), "zierend");});
test("ziererei -> ziererei", function() {deepEqual( Stem("ziererei"), "ziererei");});
test("ziergewächs -> ziergewach", function() {deepEqual( Stem("ziergewächs"), "ziergewach");});
test("zierlich -> zierlich", function() {deepEqual( Stem("zierlich"), "zierlich");});
test("zierliche -> zierlich", function() {deepEqual( Stem("zierliche"), "zierlich");});
test("zierlichem -> zierlich", function() {deepEqual( Stem("zierlichem"), "zierlich");});
test("zierlichen -> zierlich", function() {deepEqual( Stem("zierlichen"), "zierlich");});
test("zierlicher -> zierlich", function() {deepEqual( Stem("zierlicher"), "zierlich");});
test("zierliches -> zierlich", function() {deepEqual( Stem("zierliches"), "zierlich");});
test("zierlichkeit -> zierlich", function() {deepEqual( Stem("zierlichkeit"), "zierlich");});
test("zierlichste -> zierlich", function() {deepEqual( Stem("zierlichste"), "zierlich");});
test("zierte -> ziert", function() {deepEqual( Stem("zierte"), "ziert");});
test("zierten -> ziert", function() {deepEqual( Stem("zierten"), "ziert");});
test("ziervolles -> ziervoll", function() {deepEqual( Stem("ziervolles"), "ziervoll");});
test("ziffer -> ziff", function() {deepEqual( Stem("ziffer"), "ziff");});
test("zifferblatt -> zifferblatt", function() {deepEqual( Stem("zifferblatt"), "zifferblatt");});
test("ziffern -> ziff", function() {deepEqual( Stem("ziffern"), "ziff");});
test("zigarette -> zigarett", function() {deepEqual( Stem("zigarette"), "zigarett");});
test("zigaretten -> zigarett", function() {deepEqual( Stem("zigaretten"), "zigarett");});
test("zigarettenasche -> zigarettenasch", function() {deepEqual( Stem("zigarettenasche"), "zigarettenasch");});
test("zigarettendose -> zigarettendos", function() {deepEqual( Stem("zigarettendose"), "zigarettendos");});
test("zigarettenschachtel -> zigarettenschachtel", function() {deepEqual( Stem("zigarettenschachtel"), "zigarettenschachtel");});
test("zigarettenschachteln -> zigarettenschachteln", function() {deepEqual( Stem("zigarettenschachteln"), "zigarettenschachteln");});
test("zigarre -> zigarr", function() {deepEqual( Stem("zigarre"), "zigarr");});
test("zigarren -> zigarr", function() {deepEqual( Stem("zigarren"), "zigarr");});
test("zigarrenbengel -> zigarrenbengel", function() {deepEqual( Stem("zigarrenbengel"), "zigarrenbengel");});
test("zige -> zig", function() {deepEqual( Stem("zige"), "zig");});
test("zigeunerbande -> zigeunerband", function() {deepEqual( Stem("zigeunerbande"), "zigeunerband");});
test("zillah -> zillah", function() {deepEqual( Stem("zillah"), "zillah");});
test("zillen -> zill", function() {deepEqual( Stem("zillen"), "zill");});
test("zimbel -> zimbel", function() {deepEqual( Stem("zimbel"), "zimbel");});
test("zimbeln -> zimbeln", function() {deepEqual( Stem("zimbeln"), "zimbeln");});
test("zimmer -> zimm", function() {deepEqual( Stem("zimmer"), "zimm");});
test("zimmerdecke -> zimmerdeck", function() {deepEqual( Stem("zimmerdecke"), "zimmerdeck");});
test("zimmergewehr -> zimmergewehr", function() {deepEqual( Stem("zimmergewehr"), "zimmergewehr");});
test("zimmern -> zimm", function() {deepEqual( Stem("zimmern"), "zimm");});
test("zimmers -> zimm", function() {deepEqual( Stem("zimmers"), "zimm");});
test("zimmervermieterin -> zimmervermieterin", function() {deepEqual( Stem("zimmervermieterin"), "zimmervermieterin");});
test("zimmet -> zimmet", function() {deepEqual( Stem("zimmet"), "zimmet");});
test("zimmetbüchschen -> zimmetbuchsch", function() {deepEqual( Stem("zimmetbüchschen"), "zimmetbuchsch");});
test("zimperlich -> zimp", function() {deepEqual( Stem("zimperlich"), "zimp");});
test("zimperlichen -> zimp", function() {deepEqual( Stem("zimperlichen"), "zimp");});
test("zinn -> zinn", function() {deepEqual( Stem("zinn"), "zinn");});
test("zinne -> zinn", function() {deepEqual( Stem("zinne"), "zinn");});
test("zinnen -> zinn", function() {deepEqual( Stem("zinnen"), "zinn");});
test("zinnernen -> zinnern", function() {deepEqual( Stem("zinnernen"), "zinnern");});
test("zinnoberbergwerk -> zinnoberbergwerk", function() {deepEqual( Stem("zinnoberbergwerk"), "zinnoberbergwerk");});
test("zinnoberroten -> zinnoberrot", function() {deepEqual( Stem("zinnoberroten"), "zinnoberrot");});
test("zinsen -> zins", function() {deepEqual( Stem("zinsen"), "zins");});
test("zion -> zion", function() {deepEqual( Stem("zion"), "zion");});
test("zions -> zion", function() {deepEqual( Stem("zions"), "zion");});
test("zipfel -> zipfel", function() {deepEqual( Stem("zipfel"), "zipfel");});
test("zipfelhaube -> zipfelhaub", function() {deepEqual( Stem("zipfelhaube"), "zipfelhaub");});
test("zipfelkappe -> zipfelkapp", function() {deepEqual( Stem("zipfelkappe"), "zipfelkapp");});
test("zipfelkappen -> zipfelkapp", function() {deepEqual( Stem("zipfelkappen"), "zipfelkapp");});
test("zipfelmütze -> zipfelmutz", function() {deepEqual( Stem("zipfelmütze"), "zipfelmutz");});
test("zipfeln -> zipfeln", function() {deepEqual( Stem("zipfeln"), "zipfeln");});
test("zippora -> zippora", function() {deepEqual( Stem("zippora"), "zippora");});
test("zirka -> zirka", function() {deepEqual( Stem("zirka"), "zirka");});
test("zirkel -> zirkel", function() {deepEqual( Stem("zirkel"), "zirkel");});
test("zirkelte -> zirkelt", function() {deepEqual( Stem("zirkelte"), "zirkelt");});
test("zirkuliert -> zirkuliert", function() {deepEqual( Stem("zirkuliert"), "zirkuliert");});
test("zirkulierten -> zirkuliert", function() {deepEqual( Stem("zirkulierten"), "zirkuliert");});
test("zirpedirp -> zirpedirp", function() {deepEqual( Stem("zirpedirp"), "zirpedirp");});
test("zirpen -> zirp", function() {deepEqual( Stem("zirpen"), "zirp");});
test("zisch -> zisch", function() {deepEqual( Stem("zisch"), "zisch");});
test("zischelndem -> zischelnd", function() {deepEqual( Stem("zischelndem"), "zischelnd");});
test("zischen -> zisch", function() {deepEqual( Stem("zischen"), "zisch");});
test("zischende -> zischend", function() {deepEqual( Stem("zischende"), "zischend");});
test("zischlauten -> zischlaut", function() {deepEqual( Stem("zischlauten"), "zischlaut");});
test("zischte -> zischt", function() {deepEqual( Stem("zischte"), "zischt");});
test("zisterzienserpater -> zisterzienserpat", function() {deepEqual( Stem("zisterzienserpater"), "zisterzienserpat");});
test("zitaten -> zitat", function() {deepEqual( Stem("zitaten"), "zitat");});
test("zither -> zith", function() {deepEqual( Stem("zither"), "zith");});
test("zithern -> zith", function() {deepEqual( Stem("zithern"), "zith");});
test("zitherspiel -> zitherspiel", function() {deepEqual( Stem("zitherspiel"), "zitherspiel");});
test("zitherspieler -> zitherspiel", function() {deepEqual( Stem("zitherspieler"), "zitherspiel");});
test("zitherspielern -> zitherspiel", function() {deepEqual( Stem("zitherspielern"), "zitherspiel");});
test("zitieren -> ziti", function() {deepEqual( Stem("zitieren"), "ziti");});
test("zitiert -> zitiert", function() {deepEqual( Stem("zitiert"), "zitiert");});
test("zitronenschale -> zitronenschal", function() {deepEqual( Stem("zitronenschale"), "zitronenschal");});
test("zittern -> zitt", function() {deepEqual( Stem("zittern"), "zitt");});
test("zitternd -> zitternd", function() {deepEqual( Stem("zitternd"), "zitternd");});
test("zitternde -> zitternd", function() {deepEqual( Stem("zitternde"), "zitternd");});
test("zitternden -> zitternd", function() {deepEqual( Stem("zitternden"), "zitternd");});
test("zittert -> zittert", function() {deepEqual( Stem("zittert"), "zittert");});
test("zitterte -> zittert", function() {deepEqual( Stem("zitterte"), "zittert");});
test("zitterten -> zittert", function() {deepEqual( Stem("zitterten"), "zittert");});
test("zitty -> zitty", function() {deepEqual( Stem("zitty"), "zitty");});
test("zivildienst -> zivildien", function() {deepEqual( Stem("zivildienst"), "zivildien");});
test("zivildienstleistende -> zivildienstleist", function() {deepEqual( Stem("zivildienstleistende"), "zivildienstleist");});
test("zivildienstleistenden -> zivildienstleist", function() {deepEqual( Stem("zivildienstleistenden"), "zivildienstleist");});
test("zivildienstleistender -> zivildienstleist", function() {deepEqual( Stem("zivildienstleistender"), "zivildienstleist");});
test("zivildienststelle -> zivildienststell", function() {deepEqual( Stem("zivildienststelle"), "zivildienststell");});
test("zivildienststellen -> zivildienststell", function() {deepEqual( Stem("zivildienststellen"), "zivildienststell");});
test("zivildiensttreffpunkt -> zivildiensttreffpunkt", function() {deepEqual( Stem("zivildiensttreffpunkt"), "zivildiensttreffpunkt");});
test("zivildienstzeit -> zivildienstzeit", function() {deepEqual( Stem("zivildienstzeit"), "zivildienstzeit");});
test("zivilgesellschaft -> zivilgesellschaft", function() {deepEqual( Stem("zivilgesellschaft"), "zivilgesellschaft");});
test("zivilpolizei -> zivilpolizei", function() {deepEqual( Stem("zivilpolizei"), "zivilpolizei");});
test("zivilpolizist -> zivilpolizist", function() {deepEqual( Stem("zivilpolizist"), "zivilpolizist");});
test("zivilpolizisten -> zivilpolizist", function() {deepEqual( Stem("zivilpolizisten"), "zivilpolizist");});
test("zivis -> zivis", function() {deepEqual( Stem("zivis"), "zivis");});
test("zoba -> zoba", function() {deepEqual( Stem("zoba"), "zoba");});
test("zochar -> zochar", function() {deepEqual( Stem("zochar"), "zochar");});
test("zog -> zog", function() {deepEqual( Stem("zog"), "zog");});
test("zöge -> zog", function() {deepEqual( Stem("zöge"), "zog");});
test("zogen -> zog", function() {deepEqual( Stem("zogen"), "zog");});
test("zögern -> zog", function() {deepEqual( Stem("zögern"), "zog");});
test("zögernd -> zogernd", function() {deepEqual( Stem("zögernd"), "zogernd");});
test("zögerte -> zogert", function() {deepEqual( Stem("zögerte"), "zogert");});
test("zögerten -> zogert", function() {deepEqual( Stem("zögerten"), "zogert");});
test("zöglinge -> zogling", function() {deepEqual( Stem("zöglinge"), "zogling");});
test("zöglingen -> zogling", function() {deepEqual( Stem("zöglingen"), "zogling");});
test("zölibat -> zolibat", function() {deepEqual( Stem("zölibat"), "zolibat");});
test("zollmass -> zollmass", function() {deepEqual( Stem("zollmass"), "zollmass");});
test("zollstock -> zollstock", function() {deepEqual( Stem("zollstock"), "zollstock");});
test("zoni -> zoni", function() {deepEqual( Stem("zoni"), "zoni");});
test("zony -> zony", function() {deepEqual( Stem("zony"), "zony");});
test("zoo -> zoo", function() {deepEqual( Stem("zoo"), "zoo");});
test("zoodirektor -> zoodirektor", function() {deepEqual( Stem("zoodirektor"), "zoodirektor");});
test("zoologen -> zoolog", function() {deepEqual( Stem("zoologen"), "zoolog");});
test("zopf -> zopf", function() {deepEqual( Stem("zopf"), "zopf");});
test("zöpfchen -> zopfch", function() {deepEqual( Stem("zöpfchen"), "zopfch");});
test("zöpfe -> zopf", function() {deepEqual( Stem("zöpfe"), "zopf");});
test("zorn -> zorn", function() {deepEqual( Stem("zorn"), "zorn");});
test("zorne -> zorn", function() {deepEqual( Stem("zorne"), "zorn");});
test("zornerregt -> zornerregt", function() {deepEqual( Stem("zornerregt"), "zornerregt");});
test("zornes -> zorn", function() {deepEqual( Stem("zornes"), "zorn");});
test("zornig -> zornig", function() {deepEqual( Stem("zornig"), "zornig");});
test("zornigen -> zornig", function() {deepEqual( Stem("zornigen"), "zornig");});
test("zorniger -> zornig", function() {deepEqual( Stem("zorniger"), "zornig");});
test("zorns -> zorn", function() {deepEqual( Stem("zorns"), "zorn");});
test("zottelig -> zottel", function() {deepEqual( Stem("zottelig"), "zottel");});
test("zotteln -> zotteln", function() {deepEqual( Stem("zotteln"), "zotteln");});
test("zottelte -> zottelt", function() {deepEqual( Stem("zottelte"), "zottelt");});
test("zruck -> zruck", function() {deepEqual( Stem("zruck"), "zruck");});
test("zruckfahren -> zruckfahr", function() {deepEqual( Stem("zruckfahren"), "zruckfahr");});
test("zu -> zu", function() {deepEqual( Stem("zu"), "zu");});
test("zubereitet -> zubereitet", function() {deepEqual( Stem("zubereitet"), "zubereitet");});
test("zubereitungen -> zubereit", function() {deepEqual( Stem("zubereitungen"), "zubereit");});
test("zubrachte -> zubracht", function() {deepEqual( Stem("zubrachte"), "zubracht");});
test("zubringen -> zubring", function() {deepEqual( Stem("zubringen"), "zubring");});
test("zucht -> zucht", function() {deepEqual( Stem("zucht"), "zucht");});
test("zuchthaus -> zuchthaus", function() {deepEqual( Stem("zuchthaus"), "zuchthaus");});
test("zuchthauskost -> zuchthauskost", function() {deepEqual( Stem("zuchthauskost"), "zuchthauskost");});
test("züchtig -> zuchtig", function() {deepEqual( Stem("züchtig"), "zuchtig");});
test("züchtigen -> zuchtig", function() {deepEqual( Stem("züchtigen"), "zuchtig");});
test("züchtiger -> zuchtig", function() {deepEqual( Stem("züchtiger"), "zuchtig");});
test("zuckbewegungen -> zuckbeweg", function() {deepEqual( Stem("zuckbewegungen"), "zuckbeweg");});
test("zuckenden -> zuckend", function() {deepEqual( Stem("zuckenden"), "zuckend");});
test("zucker -> zuck", function() {deepEqual( Stem("zucker"), "zuck");});
test("zuckerbäcker -> zuckerback", function() {deepEqual( Stem("zuckerbäcker"), "zuckerback");});
test("zuckerbeck -> zuckerbeck", function() {deepEqual( Stem("zuckerbeck"), "zuckerbeck");});
test("zuckerbrot -> zuckerbrot", function() {deepEqual( Stem("zuckerbrot"), "zuckerbrot");});
test("zuckerbrücken -> zuckerbruck", function() {deepEqual( Stem("zuckerbrücken"), "zuckerbruck");});
test("zuckerguss -> zuckerguss", function() {deepEqual( Stem("zuckerguss"), "zuckerguss");});
test("zuckerreste -> zuckerr", function() {deepEqual( Stem("zuckerreste"), "zuckerr");});
test("zuckerwasser -> zuckerwass", function() {deepEqual( Stem("zuckerwasser"), "zuckerwass");});
test("zuckerwerk -> zuckerwerk", function() {deepEqual( Stem("zuckerwerk"), "zuckerwerk");});
test("zuckte -> zuckt", function() {deepEqual( Stem("zuckte"), "zuckt");});
test("zuckten -> zuckt", function() {deepEqual( Stem("zuckten"), "zuckt");});
test("zudem -> zud", function() {deepEqual( Stem("zudem"), "zud");});
test("zudringlich -> zudring", function() {deepEqual( Stem("zudringlich"), "zudring");});
test("zudringlichen -> zudring", function() {deepEqual( Stem("zudringlichen"), "zudring");});
test("zudringlicher -> zudring", function() {deepEqual( Stem("zudringlicher"), "zudring");});
test("zudringlichkeiten -> zudring", function() {deepEqual( Stem("zudringlichkeiten"), "zudring");});
test("zudringlichsten -> zudring", function() {deepEqual( Stem("zudringlichsten"), "zudring");});
test("zueigne -> zueign", function() {deepEqual( Stem("zueigne"), "zueign");});
test("zueignen -> zueign", function() {deepEqual( Stem("zueignen"), "zueign");});
test("zueilte -> zueilt", function() {deepEqual( Stem("zueilte"), "zueilt");});
test("zueilten -> zueilt", function() {deepEqual( Stem("zueilten"), "zueilt");});
test("zueinander -> zueinand", function() {deepEqual( Stem("zueinander"), "zueinand");});
test("zuerkannt -> zuerkannt", function() {deepEqual( Stem("zuerkannt"), "zuerkannt");});
test("zuerst -> zuerst", function() {deepEqual( Stem("zuerst"), "zuerst");});
test("zufall -> zufall", function() {deepEqual( Stem("zufall"), "zufall");});
test("zufalle -> zufall", function() {deepEqual( Stem("zufalle"), "zufall");});
test("zufälle -> zufall", function() {deepEqual( Stem("zufälle"), "zufall");});
test("zufällig -> zufall", function() {deepEqual( Stem("zufällig"), "zufall");});
test("zufällige -> zufall", function() {deepEqual( Stem("zufällige"), "zufall");});
test("zufälligen -> zufall", function() {deepEqual( Stem("zufälligen"), "zufall");});
test("zufälliger -> zufall", function() {deepEqual( Stem("zufälliger"), "zufall");});
test("zufälligerweise -> zufalligerweis", function() {deepEqual( Stem("zufälligerweise"), "zufalligerweis");});
test("zufälliges -> zufall", function() {deepEqual( Stem("zufälliges"), "zufall");});
test("zufälligkeit -> zufall", function() {deepEqual( Stem("zufälligkeit"), "zufall");});
test("zufalls -> zufall", function() {deepEqual( Stem("zufalls"), "zufall");});
test("zufliessen -> zufliess", function() {deepEqual( Stem("zufliessen"), "zufliess");});
test("zufließen -> zufliess", function() {deepEqual( Stem("zufließen"), "zufliess");});
test("zuflucht -> zuflucht", function() {deepEqual( Stem("zuflucht"), "zuflucht");});
test("zufluss -> zufluss", function() {deepEqual( Stem("zufluss"), "zufluss");});
test("zufluß -> zufluss", function() {deepEqual( Stem("zufluß"), "zufluss");});
test("zuflusses -> zufluss", function() {deepEqual( Stem("zuflusses"), "zufluss");});
test("zufolge -> zufolg", function() {deepEqual( Stem("zufolge"), "zufolg");});
test("zufrieden -> zufried", function() {deepEqual( Stem("zufrieden"), "zufried");});
test("zufriedenem -> zufried", function() {deepEqual( Stem("zufriedenem"), "zufried");});
test("zufriedener -> zufried", function() {deepEqual( Stem("zufriedener"), "zufried");});
test("zufriedenheit -> zufried", function() {deepEqual( Stem("zufriedenheit"), "zufried");});
test("zufriedenstellend -> zufriedenstell", function() {deepEqual( Stem("zufriedenstellend"), "zufriedenstell");});
test("zufüge -> zufug", function() {deepEqual( Stem("zufüge"), "zufug");});
test("zufügen -> zufug", function() {deepEqual( Stem("zufügen"), "zufug");});
test("zufügt -> zufugt", function() {deepEqual( Stem("zufügt"), "zufugt");});
test("zuführen -> zufuhr", function() {deepEqual( Stem("zuführen"), "zufuhr");});
test("zuführt -> zufuhrt", function() {deepEqual( Stem("zuführt"), "zufuhrt");});
test("zug -> zug", function() {deepEqual( Stem("zug"), "zug");});
test("zugabe -> zugab", function() {deepEqual( Stem("zugabe"), "zugab");});
test("zugang -> zugang", function() {deepEqual( Stem("zugang"), "zugang");});
test("zugäng -> zugang", function() {deepEqual( Stem("zugäng"), "zugang");});
test("zugangen -> zugang", function() {deepEqual( Stem("zugangen"), "zugang");});
test("zuge -> zug", function() {deepEqual( Stem("zuge"), "zug");});
test("züge -> zug", function() {deepEqual( Stem("züge"), "zug");});
test("zugeben -> zugeb", function() {deepEqual( Stem("zugeben"), "zugeb");});
test("zugebracht -> zugebracht", function() {deepEqual( Stem("zugebracht"), "zugebracht");});
test("zugebundenen -> zugebund", function() {deepEqual( Stem("zugebundenen"), "zugebund");});
test("zugedacht -> zugedacht", function() {deepEqual( Stem("zugedacht"), "zugedacht");});
test("zugedachte -> zugedacht", function() {deepEqual( Stem("zugedachte"), "zugedacht");});
test("zugedeckt -> zugedeckt", function() {deepEqual( Stem("zugedeckt"), "zugedeckt");});
test("zugeeignet -> zugeeignet", function() {deepEqual( Stem("zugeeignet"), "zugeeignet");});
test("zugefügt -> zugefugt", function() {deepEqual( Stem("zugefügt"), "zugefugt");});
test("zugeführt -> zugefuhrt", function() {deepEqual( Stem("zugeführt"), "zugefuhrt");});
test("zugegangen -> zugegang", function() {deepEqual( Stem("zugegangen"), "zugegang");});
test("zugegebenermassen -> zugegebenermass", function() {deepEqual( Stem("zugegebenermassen"), "zugegebenermass");});
test("zugegen -> zugeg", function() {deepEqual( Stem("zugegen"), "zugeg");});
test("zugegriffen -> zugegriff", function() {deepEqual( Stem("zugegriffen"), "zugegriff");});
test("zugehen -> zugeh", function() {deepEqual( Stem("zugehen"), "zugeh");});
test("zugehörige -> zugehor", function() {deepEqual( Stem("zugehörige"), "zugehor");});
test("zugehört -> zugehort", function() {deepEqual( Stem("zugehört"), "zugehort");});
test("zugeklappt -> zugeklappt", function() {deepEqual( Stem("zugeklappt"), "zugeklappt");});
test("zügel -> zugel", function() {deepEqual( Stem("zügel"), "zugel");});
test("zugelassen -> zugelass", function() {deepEqual( Stem("zugelassen"), "zugelass");});
test("zügellosen -> zugellos", function() {deepEqual( Stem("zügellosen"), "zugellos");});
test("zügellosigkeit -> zugellos", function() {deepEqual( Stem("zügellosigkeit"), "zugellos");});
test("zügelt -> zugelt", function() {deepEqual( Stem("zügelt"), "zugelt");});
test("zugemutet -> zugemutet", function() {deepEqual( Stem("zugemutet"), "zugemutet");});
test("zügen -> zug", function() {deepEqual( Stem("zügen"), "zug");});
test("zugeneigt -> zugeneigt", function() {deepEqual( Stem("zugeneigt"), "zugeneigt");});
test("zugereist -> zugereist", function() {deepEqual( Stem("zugereist"), "zugereist");});
test("zugerichtet -> zugerichtet", function() {deepEqual( Stem("zugerichtet"), "zugerichtet");});
test("zugerufen -> zugeruf", function() {deepEqual( Stem("zugerufen"), "zugeruf");});
test("zugesagt -> zugesagt", function() {deepEqual( Stem("zugesagt"), "zugesagt");});
test("zugeschaut -> zugeschaut", function() {deepEqual( Stem("zugeschaut"), "zugeschaut");});
test("zugeschlagen -> zugeschlag", function() {deepEqual( Stem("zugeschlagen"), "zugeschlag");});
test("zugeschneite -> zugeschneit", function() {deepEqual( Stem("zugeschneite"), "zugeschneit");});
test("zugeschoben -> zugeschob", function() {deepEqual( Stem("zugeschoben"), "zugeschob");});
test("zugeschrieben -> zugeschrieb", function() {deepEqual( Stem("zugeschrieben"), "zugeschrieb");});
test("zugeschrieen -> zugeschrie", function() {deepEqual( Stem("zugeschrieen"), "zugeschrie");});
test("zugesehen -> zugeseh", function() {deepEqual( Stem("zugesehen"), "zugeseh");});
test("zugesprochen -> zugesproch", function() {deepEqual( Stem("zugesprochen"), "zugesproch");});
test("zugesprungen -> zugespr", function() {deepEqual( Stem("zugesprungen"), "zugespr");});
test("zugestanden -> zugestand", function() {deepEqual( Stem("zugestanden"), "zugestand");});
test("zugestehen -> zugesteh", function() {deepEqual( Stem("zugestehen"), "zugesteh");});
test("zugestimmt -> zugestimmt", function() {deepEqual( Stem("zugestimmt"), "zugestimmt");});
test("zugestossen -> zugestoss", function() {deepEqual( Stem("zugestossen"), "zugestoss");});
test("zugetan -> zugetan", function() {deepEqual( Stem("zugetan"), "zugetan");});
test("zugetragen -> zugetrag", function() {deepEqual( Stem("zugetragen"), "zugetrag");});
test("zugetraut -> zugetraut", function() {deepEqual( Stem("zugetraut"), "zugetraut");});
test("zugewandt -> zugewandt", function() {deepEqual( Stem("zugewandt"), "zugewandt");});
test("zugewandten -> zugewandt", function() {deepEqual( Stem("zugewandten"), "zugewandt");});
test("zugewendet -> zugewendet", function() {deepEqual( Stem("zugewendet"), "zugewendet");});
test("zugewendetes -> zugewendet", function() {deepEqual( Stem("zugewendetes"), "zugewendet");});
test("zugewiesene -> zugewies", function() {deepEqual( Stem("zugewiesene"), "zugewies");});
test("zugeworfen -> zugeworf", function() {deepEqual( Stem("zugeworfen"), "zugeworf");});
test("zugezogen -> zugezog", function() {deepEqual( Stem("zugezogen"), "zugezog");});
test("zugibt -> zugibt", function() {deepEqual( Stem("zugibt"), "zugibt");});
test("zuging -> zuging", function() {deepEqual( Stem("zuging"), "zuging");});
test("zugingen -> zuging", function() {deepEqual( Stem("zugingen"), "zuging");});
test("zugleich -> zugleich", function() {deepEqual( Stem("zugleich"), "zugleich");});
test("zugnetz -> zugnetz", function() {deepEqual( Stem("zugnetz"), "zugnetz");});
test("zugreifen -> zugreif", function() {deepEqual( Stem("zugreifen"), "zugreif");});
test("zugriff -> zugriff", function() {deepEqual( Stem("zugriff"), "zugriff");});
test("zugrunde -> zugrund", function() {deepEqual( Stem("zugrunde"), "zugrund");});
test("zugrundegehen -> zugrundegeh", function() {deepEqual( Stem("zugrundegehen"), "zugrundegeh");});
test("zugrundeliegende -> zugrundelieg", function() {deepEqual( Stem("zugrundeliegende"), "zugrundelieg");});
test("zugschlagen -> zugschlag", function() {deepEqual( Stem("zugschlagen"), "zugschlag");});
test("zugunsten -> zugun", function() {deepEqual( Stem("zugunsten"), "zugun");});
test("zugut -> zugut", function() {deepEqual( Stem("zugut"), "zugut");});
test("zugute -> zugut", function() {deepEqual( Stem("zugute"), "zugut");});
test("zuhälterin -> zuhalterin", function() {deepEqual( Stem("zuhälterin"), "zuhalterin");});
test("zuhielt -> zuhielt", function() {deepEqual( Stem("zuhielt"), "zuhielt");});
test("zuhilfenahme -> zuhilfenahm", function() {deepEqual( Stem("zuhilfenahme"), "zuhilfenahm");});
test("zuhinterst -> zuhinterst", function() {deepEqual( Stem("zuhinterst"), "zuhinterst");});
test("zuhören -> zuhor", function() {deepEqual( Stem("zuhören"), "zuhor");});
test("zuhörer -> zuhor", function() {deepEqual( Stem("zuhörer"), "zuhor");});
test("zuhörerinnen -> zuhorerinn", function() {deepEqual( Stem("zuhörerinnen"), "zuhorerinn");});
test("zuhörers -> zuhor", function() {deepEqual( Stem("zuhörers"), "zuhor");});
test("zuhörte -> zuhort", function() {deepEqual( Stem("zuhörte"), "zuhort");});
test("zukam -> zukam", function() {deepEqual( Stem("zukam"), "zukam");});
test("zukehrte -> zukehrt", function() {deepEqual( Stem("zukehrte"), "zukehrt");});
test("zuknöpfte -> zuknopft", function() {deepEqual( Stem("zuknöpfte"), "zuknopft");});
test("zukomme -> zukomm", function() {deepEqual( Stem("zukomme"), "zukomm");});
test("zukommen -> zukomm", function() {deepEqual( Stem("zukommen"), "zukomm");});
test("zukommt -> zukommt", function() {deepEqual( Stem("zukommt"), "zukommt");});
test("zukunft -> zukunft", function() {deepEqual( Stem("zukunft"), "zukunft");});
test("zukünftige -> zukunft", function() {deepEqual( Stem("zukünftige"), "zukunft");});
test("zukünftigen -> zukunft", function() {deepEqual( Stem("zukünftigen"), "zukunft");});
test("zulächelt -> zulachelt", function() {deepEqual( Stem("zulächelt"), "zulachelt");});
test("zulange -> zulang", function() {deepEqual( Stem("zulange"), "zulang");});
test("zulangen -> zulang", function() {deepEqual( Stem("zulangen"), "zulang");});
test("zulänglichkeit -> zulang", function() {deepEqual( Stem("zulänglichkeit"), "zulang");});
test("zulangt -> zulangt", function() {deepEqual( Stem("zulangt"), "zulangt");});
test("zulasse -> zulass", function() {deepEqual( Stem("zulasse"), "zulass");});
test("zulassen -> zulass", function() {deepEqual( Stem("zulassen"), "zulass");});
test("zulässigkeit -> zulass", function() {deepEqual( Stem("zulässigkeit"), "zulass");});
test("zulässt -> zulasst", function() {deepEqual( Stem("zulässt"), "zulasst");});
test("zuläßt -> zulasst", function() {deepEqual( Stem("zuläßt"), "zulasst");});
test("zulassung -> zulass", function() {deepEqual( Stem("zulassung"), "zulass");});
test("zulasten -> zulast", function() {deepEqual( Stem("zulasten"), "zulast");});
test("zulauf -> zulauf", function() {deepEqual( Stem("zulauf"), "zulauf");});
test("zulegen -> zuleg", function() {deepEqual( Stem("zulegen"), "zuleg");});
test("zuleid -> zuleid", function() {deepEqual( Stem("zuleid"), "zuleid");});
test("zuleide -> zuleid", function() {deepEqual( Stem("zuleide"), "zuleid");});
test("zuletzt -> zuletzt", function() {deepEqual( Stem("zuletzt"), "zuletzt");});
test("zulief -> zulief", function() {deepEqual( Stem("zulief"), "zulief");});
test("zum -> zum", function() {deepEqual( Stem("zum"), "zum");});
test("zumachen -> zumach", function() {deepEqual( Stem("zumachen"), "zumach");});
test("zumal -> zumal", function() {deepEqual( Stem("zumal"), "zumal");});
test("zumeist -> zumeist", function() {deepEqual( Stem("zumeist"), "zumeist");});
test("zumessen -> zumess", function() {deepEqual( Stem("zumessen"), "zumess");});
test("zumindest -> zumind", function() {deepEqual( Stem("zumindest"), "zumind");});
test("zumut -> zumut", function() {deepEqual( Stem("zumut"), "zumut");});
test("zumute -> zumut", function() {deepEqual( Stem("zumute"), "zumut");});
test("zumuten -> zumut", function() {deepEqual( Stem("zumuten"), "zumut");});
test("zumutung -> zumut", function() {deepEqual( Stem("zumutung"), "zumut");});
test("zumutungen -> zumut", function() {deepEqual( Stem("zumutungen"), "zumut");});
test("zunächst -> zunach", function() {deepEqual( Stem("zunächst"), "zunach");});
test("zunahm -> zunahm", function() {deepEqual( Stem("zunahm"), "zunahm");});
test("zunahme -> zunahm", function() {deepEqual( Stem("zunahme"), "zunahm");});
test("zunahmen -> zunahm", function() {deepEqual( Stem("zunahmen"), "zunahm");});
test("zünden -> zund", function() {deepEqual( Stem("zünden"), "zund");});
test("zündet -> zundet", function() {deepEqual( Stem("zündet"), "zundet");});
test("zündete -> zundet", function() {deepEqual( Stem("zündete"), "zundet");});
test("zündschnur -> zundschnur", function() {deepEqual( Stem("zündschnur"), "zundschnur");});
test("zunehmen -> zunehm", function() {deepEqual( Stem("zunehmen"), "zunehm");});
test("zunehmend -> zunehm", function() {deepEqual( Stem("zunehmend"), "zunehm");});
test("zunehmende -> zunehm", function() {deepEqual( Stem("zunehmende"), "zunehm");});
test("zunehmenden -> zunehm", function() {deepEqual( Stem("zunehmenden"), "zunehm");});
test("zunehmender -> zunehm", function() {deepEqual( Stem("zunehmender"), "zunehm");});
test("zuneigung -> zuneig", function() {deepEqual( Stem("zuneigung"), "zuneig");});
test("zunge -> zung", function() {deepEqual( Stem("zunge"), "zung");});
test("züngelten -> zungelt", function() {deepEqual( Stem("züngelten"), "zungelt");});
test("zungen -> zung", function() {deepEqual( Stem("zungen"), "zung");});
test("zungenfertigkeit -> zungenfert", function() {deepEqual( Stem("zungenfertigkeit"), "zungenfert");});
test("zungenspitze -> zungenspitz", function() {deepEqual( Stem("zungenspitze"), "zungenspitz");});
test("zünglein -> zunglein", function() {deepEqual( Stem("zünglein"), "zunglein");});
test("zunichte -> zunicht", function() {deepEqual( Stem("zunichte"), "zunicht");});
test("zunimmt -> zunimmt", function() {deepEqual( Stem("zunimmt"), "zunimmt");});
test("zuoberst -> zuoberst", function() {deepEqual( Stem("zuoberst"), "zuoberst");});
test("zupfen -> zupf", function() {deepEqual( Stem("zupfen"), "zupf");});
test("zupfte -> zupft", function() {deepEqual( Stem("zupfte"), "zupft");});
test("zur -> zur", function() {deepEqual( Stem("zur"), "zur");});
test("zürcher -> zurch", function() {deepEqual( Stem("zürcher"), "zurch");});
test("zurecht -> zurecht", function() {deepEqual( Stem("zurecht"), "zurecht");});
test("zurechtfinden -> zurechtfind", function() {deepEqual( Stem("zurechtfinden"), "zurechtfind");});
test("zurechtgelegt -> zurechtgelegt", function() {deepEqual( Stem("zurechtgelegt"), "zurechtgelegt");});
test("zurechtgerückt -> zurechtgeruckt", function() {deepEqual( Stem("zurechtgerückt"), "zurechtgeruckt");});
test("zurechtgesetzt -> zurechtgesetzt", function() {deepEqual( Stem("zurechtgesetzt"), "zurechtgesetzt");});
test("zurechtgewiesen -> zurechtgewies", function() {deepEqual( Stem("zurechtgewiesen"), "zurechtgewies");});
test("zurechtschneiderte -> zurechtschneidert", function() {deepEqual( Stem("zurechtschneiderte"), "zurechtschneidert");});
test("zurechtweisen -> zurechtweis", function() {deepEqual( Stem("zurechtweisen"), "zurechtweis");});
test("zurechtweisung -> zurechtweis", function() {deepEqual( Stem("zurechtweisung"), "zurechtweis");});
test("zurechtzufinden -> zurechtzufind", function() {deepEqual( Stem("zurechtzufinden"), "zurechtzufind");});
test("zurechtzulegen -> zurechtzuleg", function() {deepEqual( Stem("zurechtzulegen"), "zurechtzuleg");});
test("zurechtzumachen -> zurechtzumach", function() {deepEqual( Stem("zurechtzumachen"), "zurechtzumach");});
test("zurede -> zured", function() {deepEqual( Stem("zurede"), "zured");});
test("zureden -> zured", function() {deepEqual( Stem("zureden"), "zured");});
test("zureichend -> zureich", function() {deepEqual( Stem("zureichend"), "zureich");});
test("zureichende -> zureich", function() {deepEqual( Stem("zureichende"), "zureich");});
test("zureichenden -> zureich", function() {deepEqual( Stem("zureichenden"), "zureich");});
test("zürich -> zurich", function() {deepEqual( Stem("zürich"), "zurich");});
test("zurichten -> zuricht", function() {deepEqual( Stem("zurichten"), "zuricht");});
test("zurief -> zurief", function() {deepEqual( Stem("zurief"), "zurief");});
test("zürne -> zurn", function() {deepEqual( Stem("zürne"), "zurn");});
test("zürnen -> zurn", function() {deepEqual( Stem("zürnen"), "zurn");});
test("zürnet -> zurnet", function() {deepEqual( Stem("zürnet"), "zurnet");});
test("zürnt -> zurnt", function() {deepEqual( Stem("zürnt"), "zurnt");});
test("zurück -> zuruck", function() {deepEqual( Stem("zurück"), "zuruck");});
test("zurückbeziehen -> zuruckbezieh", function() {deepEqual( Stem("zurückbeziehen"), "zuruckbezieh");});
test("zurückbleiben -> zuruckbleib", function() {deepEqual( Stem("zurückbleiben"), "zuruckbleib");});
test("zurückbleibt -> zuruckbleibt", function() {deepEqual( Stem("zurückbleibt"), "zuruckbleibt");});
test("zurückblicken -> zuruckblick", function() {deepEqual( Stem("zurückblicken"), "zuruckblick");});
test("zurückblieb -> zuruckblieb", function() {deepEqual( Stem("zurückblieb"), "zuruckblieb");});
test("zurückbogen -> zuruckbog", function() {deepEqual( Stem("zurückbogen"), "zuruckbog");});
test("zurückbringe -> zuruckbring", function() {deepEqual( Stem("zurückbringe"), "zuruckbring");});
test("zurückbringen -> zuruckbring", function() {deepEqual( Stem("zurückbringen"), "zuruckbring");});
test("zurückdrängen -> zuruckdrang", function() {deepEqual( Stem("zurückdrängen"), "zuruckdrang");});
test("zurückdrängt -> zuruckdrangt", function() {deepEqual( Stem("zurückdrängt"), "zuruckdrangt");});
test("zurückerhalten -> zuruckerhalt", function() {deepEqual( Stem("zurückerhalten"), "zuruckerhalt");});
test("zurückerstatten -> zuruckerstatt", function() {deepEqual( Stem("zurückerstatten"), "zuruckerstatt");});
test("zurückfällt -> zuruckfallt", function() {deepEqual( Stem("zurückfällt"), "zuruckfallt");});
test("zurückfliehen -> zuruckflieh", function() {deepEqual( Stem("zurückfliehen"), "zuruckflieh");});
test("zurückfragen -> zuruckfrag", function() {deepEqual( Stem("zurückfragen"), "zuruckfrag");});
test("zurückfuhr -> zuruckfuhr", function() {deepEqual( Stem("zurückfuhr"), "zuruckfuhr");});
test("zurückführen -> zuruckfuhr", function() {deepEqual( Stem("zurückführen"), "zuruckfuhr");});
test("zurückführte -> zuruckfuhrt", function() {deepEqual( Stem("zurückführte"), "zuruckfuhrt");});
test("zurückgeben -> zuruckgeb", function() {deepEqual( Stem("zurückgeben"), "zuruckgeb");});
test("zurückgeblieben -> zuruckgeblieb", function() {deepEqual( Stem("zurückgeblieben"), "zuruckgeblieb");});
test("zurückgebliebene -> zuruckgeblieb", function() {deepEqual( Stem("zurückgebliebene"), "zuruckgeblieb");});
test("zurückgebliebenen -> zuruckgeblieb", function() {deepEqual( Stem("zurückgebliebenen"), "zuruckgeblieb");});
test("zurückgebracht -> zuruckgebracht", function() {deepEqual( Stem("zurückgebracht"), "zuruckgebracht");});
test("zurückgedrängt -> zuruckgedrangt", function() {deepEqual( Stem("zurückgedrängt"), "zuruckgedrangt");});
test("zurückgefallen -> zuruckgefall", function() {deepEqual( Stem("zurückgefallen"), "zuruckgefall");});
test("zurückgeführt -> zuruckgefuhrt", function() {deepEqual( Stem("zurückgeführt"), "zuruckgefuhrt");});
test("zurückgeführte -> zuruckgefuhrt", function() {deepEqual( Stem("zurückgeführte"), "zuruckgefuhrt");});
test("zurückgefunden -> zuruckgefund", function() {deepEqual( Stem("zurückgefunden"), "zuruckgefund");});
test("zurückgegangen -> zuruckgegang", function() {deepEqual( Stem("zurückgegangen"), "zuruckgegang");});
test("zurückgegeben -> zuruckgegeb", function() {deepEqual( Stem("zurückgegeben"), "zuruckgegeb");});
test("zurückgehalten -> zuruckgehalt", function() {deepEqual( Stem("zurückgehalten"), "zuruckgehalt");});
test("zurückgehen -> zuruckgeh", function() {deepEqual( Stem("zurückgehen"), "zuruckgeh");});
test("zurückgehn -> zuruckgehn", function() {deepEqual( Stem("zurückgehn"), "zuruckgehn");});
test("zurückgekehrt -> zuruckgekehrt", function() {deepEqual( Stem("zurückgekehrt"), "zuruckgekehrt");});
test("zurückgekehrten -> zuruckgekehrt", function() {deepEqual( Stem("zurückgekehrten"), "zuruckgekehrt");});
test("zurückgekommen -> zuruckgekomm", function() {deepEqual( Stem("zurückgekommen"), "zuruckgekomm");});
test("zurückgelassen -> zuruckgelass", function() {deepEqual( Stem("zurückgelassen"), "zuruckgelass");});
test("zurückgelegt -> zuruckgelegt", function() {deepEqual( Stem("zurückgelegt"), "zuruckgelegt");});
test("zurückgerufen -> zuruckgeruf", function() {deepEqual( Stem("zurückgerufen"), "zuruckgeruf");});
test("zurückgeschlagen -> zuruckgeschlag", function() {deepEqual( Stem("zurückgeschlagen"), "zuruckgeschlag");});
test("zurückgeschlendert -> zuruckgeschlendert", function() {deepEqual( Stem("zurückgeschlendert"), "zuruckgeschlendert");});
test("zurückgeschwunden -> zuruckgeschwund", function() {deepEqual( Stem("zurückgeschwunden"), "zuruckgeschwund");});
test("zurückgesetzt -> zuruckgesetzt", function() {deepEqual( Stem("zurückgesetzt"), "zuruckgesetzt");});
test("zurückgestellt -> zuruckgestellt", function() {deepEqual( Stem("zurückgestellt"), "zuruckgestellt");});
test("zurückgestossen -> zuruckgestoss", function() {deepEqual( Stem("zurückgestossen"), "zuruckgestoss");});
test("zurückgestoßen -> zuruckgestoss", function() {deepEqual( Stem("zurückgestoßen"), "zuruckgestoss");});
test("zurückgetreten -> zuruckgetret", function() {deepEqual( Stem("zurückgetreten"), "zuruckgetret");});
test("zurückgewichen -> zuruckgewich", function() {deepEqual( Stem("zurückgewichen"), "zuruckgewich");});
test("zurückgewiesen -> zuruckgewies", function() {deepEqual( Stem("zurückgewiesen"), "zuruckgewies");});
test("zurückgewinkt -> zuruckgewinkt", function() {deepEqual( Stem("zurückgewinkt"), "zuruckgewinkt");});
test("zurückging -> zuruckging", function() {deepEqual( Stem("zurückging"), "zuruckging");});
test("zurückhalte -> zuruckhalt", function() {deepEqual( Stem("zurückhalte"), "zuruckhalt");});
test("zurückhalten -> zuruckhalt", function() {deepEqual( Stem("zurückhalten"), "zuruckhalt");});
test("zurückhaltend -> zuruckhalt", function() {deepEqual( Stem("zurückhaltend"), "zuruckhalt");});
test("zurückhaltender -> zuruckhalt", function() {deepEqual( Stem("zurückhaltender"), "zuruckhalt");});
test("zurückhältst -> zuruckhalt", function() {deepEqual( Stem("zurückhältst"), "zuruckhalt");});
test("zurückhaltung -> zuruckhalt", function() {deepEqual( Stem("zurückhaltung"), "zuruckhalt");});
test("zurückkam -> zuruckkam", function() {deepEqual( Stem("zurückkam"), "zuruckkam");});
test("zurückkamen -> zuruckkam", function() {deepEqual( Stem("zurückkamen"), "zuruckkam");});
test("zurückkehren -> zuruckkehr", function() {deepEqual( Stem("zurückkehren"), "zuruckkehr");});
test("zurückkehrst -> zuruckkehrst", function() {deepEqual( Stem("zurückkehrst"), "zuruckkehrst");});
test("zurückkehrte -> zuruckkehrt", function() {deepEqual( Stem("zurückkehrte"), "zuruckkehrt");});
test("zurückkehrten -> zuruckkehrt", function() {deepEqual( Stem("zurückkehrten"), "zuruckkehrt");});
test("zurückkommen -> zuruckkomm", function() {deepEqual( Stem("zurückkommen"), "zuruckkomm");});
test("zurücklassen -> zurucklass", function() {deepEqual( Stem("zurücklassen"), "zurucklass");});
test("zurückliessen -> zuruckliess", function() {deepEqual( Stem("zurückliessen"), "zuruckliess");});
test("zurückreichten -> zuruckreicht", function() {deepEqual( Stem("zurückreichten"), "zuruckreicht");});
test("zurückschaudert -> zuruckschaudert", function() {deepEqual( Stem("zurückschaudert"), "zuruckschaudert");});
test("zurückschieben -> zuruckschieb", function() {deepEqual( Stem("zurückschieben"), "zuruckschieb");});
test("zurücksehen -> zuruckseh", function() {deepEqual( Stem("zurücksehen"), "zuruckseh");});
test("zurücksehnte -> zurucksehnt", function() {deepEqual( Stem("zurücksehnte"), "zurucksehnt");});
test("zurücksprang -> zurucksprang", function() {deepEqual( Stem("zurücksprang"), "zurucksprang");});
test("zurückstehende -> zurucksteh", function() {deepEqual( Stem("zurückstehende"), "zurucksteh");});
test("zurücksteht -> zurucksteht", function() {deepEqual( Stem("zurücksteht"), "zurucksteht");});
test("zurückstossen -> zuruckstoss", function() {deepEqual( Stem("zurückstossen"), "zuruckstoss");});
test("zurückstoßen -> zuruckstoss", function() {deepEqual( Stem("zurückstoßen"), "zuruckstoss");});
test("zurückstrahlte -> zuruckstrahlt", function() {deepEqual( Stem("zurückstrahlte"), "zuruckstrahlt");});
test("zurückströmte -> zuruckstromt", function() {deepEqual( Stem("zurückströmte"), "zuruckstromt");});
test("zurücktreten -> zurucktret", function() {deepEqual( Stem("zurücktreten"), "zurucktret");});
test("zurücktritt -> zurucktritt", function() {deepEqual( Stem("zurücktritt"), "zurucktritt");});
test("zurückwandte -> zuruckwandt", function() {deepEqual( Stem("zurückwandte"), "zuruckwandt");});
test("zurückwarf -> zuruckwarf", function() {deepEqual( Stem("zurückwarf"), "zuruckwarf");});
test("zurückweichen -> zuruckweich", function() {deepEqual( Stem("zurückweichen"), "zuruckweich");});
test("zurückweichens -> zuruckweich", function() {deepEqual( Stem("zurückweichens"), "zuruckweich");});
test("zurückwenden -> zuruckw", function() {deepEqual( Stem("zurückwenden"), "zuruckw");});
test("zurückwendend -> zuruckwend", function() {deepEqual( Stem("zurückwendend"), "zuruckwend");});
test("zurückziehen -> zuruckzieh", function() {deepEqual( Stem("zurückziehen"), "zuruckzieh");});
test("zurückzog -> zuruckzog", function() {deepEqual( Stem("zurückzog"), "zuruckzog");});
test("zurückzubringen -> zuruckzubring", function() {deepEqual( Stem("zurückzubringen"), "zuruckzubring");});
test("zurückzuerobern -> zuruckzuerob", function() {deepEqual( Stem("zurückzuerobern"), "zuruckzuerob");});
test("zurückzuführen -> zuruckzufuhr", function() {deepEqual( Stem("zurückzuführen"), "zuruckzufuhr");});
test("zurückzugeben -> zuruckzugeb", function() {deepEqual( Stem("zurückzugeben"), "zuruckzugeb");});
test("zurückzuhalten -> zuruckzuhalt", function() {deepEqual( Stem("zurückzuhalten"), "zuruckzuhalt");});
test("zurückzukehren -> zuruckzukehr", function() {deepEqual( Stem("zurückzukehren"), "zuruckzukehr");});
test("zurückzukommen -> zuruckzukomm", function() {deepEqual( Stem("zurückzukommen"), "zuruckzukomm");});
test("zurückzureisen -> zuruckzureis", function() {deepEqual( Stem("zurückzureisen"), "zuruckzureis");});
test("zurückzuziehen -> zuruckzuzieh", function() {deepEqual( Stem("zurückzuziehen"), "zuruckzuzieh");});
test("zuruf -> zuruf", function() {deepEqual( Stem("zuruf"), "zuruf");});
test("zurufe -> zuruf", function() {deepEqual( Stem("zurufe"), "zuruf");});
test("zurufen -> zuruf", function() {deepEqual( Stem("zurufen"), "zuruf");});
test("züs -> zus", function() {deepEqual( Stem("züs"), "zus");});
test("zusag -> zusag", function() {deepEqual( Stem("zusag"), "zusag");});
test("zusagen -> zusag", function() {deepEqual( Stem("zusagen"), "zusag");});
test("zusagt -> zusagt", function() {deepEqual( Stem("zusagt"), "zusagt");});
test("zusagte -> zusagt", function() {deepEqual( Stem("zusagte"), "zusagt");});
test("zusah -> zusah", function() {deepEqual( Stem("zusah"), "zusah");});
test("zusahen -> zusah", function() {deepEqual( Stem("zusahen"), "zusah");});
test("zusammen -> zusamm", function() {deepEqual( Stem("zusammen"), "zusamm");});
test("zusammenarbeit -> zusammenarbeit", function() {deepEqual( Stem("zusammenarbeit"), "zusammenarbeit");});
test("zusammenbrachte -> zusammenbracht", function() {deepEqual( Stem("zusammenbrachte"), "zusammenbracht");});
test("zusammenbringen -> zusammenbring", function() {deepEqual( Stem("zusammenbringen"), "zusammenbring");});
test("zusammenfassten -> zusammenfasst", function() {deepEqual( Stem("zusammenfassten"), "zusammenfasst");});
test("zusammenfaßten -> zusammenfasst", function() {deepEqual( Stem("zusammenfaßten"), "zusammenfasst");});
test("zusammenfassung -> zusammenfass", function() {deepEqual( Stem("zusammenfassung"), "zusammenfass");});
test("zusammenfiel -> zusammenfiel", function() {deepEqual( Stem("zusammenfiel"), "zusammenfiel");});
test("zusammenfügen -> zusammenfug", function() {deepEqual( Stem("zusammenfügen"), "zusammenfug");});
test("zusammenfügte -> zusammenfugt", function() {deepEqual( Stem("zusammenfügte"), "zusammenfugt");});
test("zusammengeballt -> zusammengeballt", function() {deepEqual( Stem("zusammengeballt"), "zusammengeballt");});
test("zusammengeballtes -> zusammengeballt", function() {deepEqual( Stem("zusammengeballtes"), "zusammengeballt");});
test("zusammengeben -> zusammengeb", function() {deepEqual( Stem("zusammengeben"), "zusammengeb");});
test("zusammengebracht -> zusammengebracht", function() {deepEqual( Stem("zusammengebracht"), "zusammengebracht");});
test("zusammengebunden -> zusammengebund", function() {deepEqual( Stem("zusammengebunden"), "zusammengebund");});
test("zusammengebundene -> zusammengebund", function() {deepEqual( Stem("zusammengebundene"), "zusammengebund");});
test("zusammengedichtete -> zusammengedichtet", function() {deepEqual( Stem("zusammengedichtete"), "zusammengedichtet");});
test("zusammengedrängt -> zusammengedrangt", function() {deepEqual( Stem("zusammengedrängt"), "zusammengedrangt");});
test("zusammengefalteten -> zusammengefaltet", function() {deepEqual( Stem("zusammengefalteten"), "zusammengefaltet");});
test("zusammengefasst -> zusammengefasst", function() {deepEqual( Stem("zusammengefasst"), "zusammengefasst");});
test("zusammengefügt -> zusammengefugt", function() {deepEqual( Stem("zusammengefügt"), "zusammengefugt");});
test("zusammengehalten -> zusammengehalt", function() {deepEqual( Stem("zusammengehalten"), "zusammengehalt");});
test("zusammengekehrt -> zusammengekehrt", function() {deepEqual( Stem("zusammengekehrt"), "zusammengekehrt");});
test("zusammengeknöpften -> zusammengeknopft", function() {deepEqual( Stem("zusammengeknöpften"), "zusammengeknopft");});
test("zusammengelebt -> zusammengelebt", function() {deepEqual( Stem("zusammengelebt"), "zusammengelebt");});
test("zusammengenommen -> zusammengenomm", function() {deepEqual( Stem("zusammengenommen"), "zusammengenomm");});
test("zusammengepasst -> zusammengepasst", function() {deepEqual( Stem("zusammengepasst"), "zusammengepasst");});
test("zusammengepaßt -> zusammengepasst", function() {deepEqual( Stem("zusammengepaßt"), "zusammengepasst");});
test("zusammengerollt -> zusammengerollt", function() {deepEqual( Stem("zusammengerollt"), "zusammengerollt");});
test("zusammengerollter -> zusammengerollt", function() {deepEqual( Stem("zusammengerollter"), "zusammengerollt");});
test("zusammengeschrumpft -> zusammengeschrumpft", function() {deepEqual( Stem("zusammengeschrumpft"), "zusammengeschrumpft");});
test("zusammengesetzt -> zusammengesetzt", function() {deepEqual( Stem("zusammengesetzt"), "zusammengesetzt");});
test("zusammengesetzte -> zusammengesetzt", function() {deepEqual( Stem("zusammengesetzte"), "zusammengesetzt");});
test("zusammengesetzten -> zusammengesetzt", function() {deepEqual( Stem("zusammengesetzten"), "zusammengesetzt");});
test("zusammengestellt -> zusammengestellt", function() {deepEqual( Stem("zusammengestellt"), "zusammengestellt");});
test("zusammengeströmt -> zusammengestromt", function() {deepEqual( Stem("zusammengeströmt"), "zusammengestromt");});
test("zusammengesucht -> zusammengesucht", function() {deepEqual( Stem("zusammengesucht"), "zusammengesucht");});
test("zusammengetan -> zusammengetan", function() {deepEqual( Stem("zusammengetan"), "zusammengetan");});
test("zusammengetragen -> zusammengetrag", function() {deepEqual( Stem("zusammengetragen"), "zusammengetrag");});
test("zusammengewürfelten -> zusammengewurfelt", function() {deepEqual( Stem("zusammengewürfelten"), "zusammengewurfelt");});
test("zusammengezogen -> zusammengezog", function() {deepEqual( Stem("zusammengezogen"), "zusammengezog");});
test("zusammengezogenen -> zusammengezog", function() {deepEqual( Stem("zusammengezogenen"), "zusammengezog");});
test("zusammenhalten -> zusammenhalt", function() {deepEqual( Stem("zusammenhalten"), "zusammenhalt");});
test("zusammenhang -> zusammenhang", function() {deepEqual( Stem("zusammenhang"), "zusammenhang");});
test("zusammenhängend -> zusammenhang", function() {deepEqual( Stem("zusammenhängend"), "zusammenhang");});
test("zusammenhängende -> zusammenhang", function() {deepEqual( Stem("zusammenhängende"), "zusammenhang");});
test("zusammenhängenden -> zusammenhang", function() {deepEqual( Stem("zusammenhängenden"), "zusammenhang");});
test("zusammenhanges -> zusammenhang", function() {deepEqual( Stem("zusammenhanges"), "zusammenhang");});
test("zusammenhangs -> zusammenhang", function() {deepEqual( Stem("zusammenhangs"), "zusammenhang");});
test("zusammenhängt -> zusammenhangt", function() {deepEqual( Stem("zusammenhängt"), "zusammenhangt");});
test("zusammenhielt -> zusammenhielt", function() {deepEqual( Stem("zusammenhielt"), "zusammenhielt");});
test("zusammenhing -> zusammenhing", function() {deepEqual( Stem("zusammenhing"), "zusammenhing");});
test("zusammenhingen -> zusammenhing", function() {deepEqual( Stem("zusammenhingen"), "zusammenhing");});
test("zusammenkaufte -> zusammenkauft", function() {deepEqual( Stem("zusammenkaufte"), "zusammenkauft");});
test("zusammenknüllte -> zusammenknullt", function() {deepEqual( Stem("zusammenknüllte"), "zusammenknullt");});
test("zusammenkommen -> zusammenkomm", function() {deepEqual( Stem("zusammenkommen"), "zusammenkomm");});
test("zusammenkommens -> zusammenkomm", function() {deepEqual( Stem("zusammenkommens"), "zusammenkomm");});
test("zusammenkunft -> zusammenkunft", function() {deepEqual( Stem("zusammenkunft"), "zusammenkunft");});
test("zusammenleben -> zusammenleb", function() {deepEqual( Stem("zusammenleben"), "zusammenleb");});
test("zusammenleimte -> zusammenleimt", function() {deepEqual( Stem("zusammenleimte"), "zusammenleimt");});
test("zusammenliefen -> zusammenlief", function() {deepEqual( Stem("zusammenliefen"), "zusammenlief");});
test("zusammennähen -> zusammennah", function() {deepEqual( Stem("zusammennähen"), "zusammennah");});
test("zusammennahm -> zusammennahm", function() {deepEqual( Stem("zusammennahm"), "zusammennahm");});
test("zusammennähten -> zusammennaht", function() {deepEqual( Stem("zusammennähten"), "zusammennaht");});
test("zusammennehme -> zusammennehm", function() {deepEqual( Stem("zusammennehme"), "zusammennehm");});
test("zusammennehmen -> zusammennehm", function() {deepEqual( Stem("zusammennehmen"), "zusammennehm");});
test("zusammennehmend -> zusammennehm", function() {deepEqual( Stem("zusammennehmend"), "zusammennehm");});
test("zusammenpasse -> zusammenpass", function() {deepEqual( Stem("zusammenpasse"), "zusammenpass");});
test("zusammenreimt -> zusammenreimt", function() {deepEqual( Stem("zusammenreimt"), "zusammenreimt");});
test("zusammenschlagen -> zusammenschlag", function() {deepEqual( Stem("zusammenschlagen"), "zusammenschlag");});
test("zusammenschmelzt -> zusammenschmelzt", function() {deepEqual( Stem("zusammenschmelzt"), "zusammenschmelzt");});
test("zusammenschrumpften -> zusammenschrumpft", function() {deepEqual( Stem("zusammenschrumpften"), "zusammenschrumpft");});
test("zusammensein -> zusammensein", function() {deepEqual( Stem("zusammensein"), "zusammensein");});
test("zusammenseins -> zusammensein", function() {deepEqual( Stem("zusammenseins"), "zusammensein");});
test("zusammensetzen -> zusammensetz", function() {deepEqual( Stem("zusammensetzen"), "zusammensetz");});
test("zusammensetzten -> zusammensetzt", function() {deepEqual( Stem("zusammensetzten"), "zusammensetzt");});
test("zusammensetzung -> zusammensetz", function() {deepEqual( Stem("zusammensetzung"), "zusammensetz");});
test("zusammenspeisen -> zusammenspeis", function() {deepEqual( Stem("zusammenspeisen"), "zusammenspeis");});
test("zusammenspeisungen -> zusammenspeis", function() {deepEqual( Stem("zusammenspeisungen"), "zusammenspeis");});
test("zusammensteckte -> zusammensteckt", function() {deepEqual( Stem("zusammensteckte"), "zusammensteckt");});
test("zusammenstellte -> zusammenstellt", function() {deepEqual( Stem("zusammenstellte"), "zusammenstellt");});
test("zusammenstellung -> zusammenstell", function() {deepEqual( Stem("zusammenstellung"), "zusammenstell");});
test("zusammenstiessen -> zusammenstiess", function() {deepEqual( Stem("zusammenstiessen"), "zusammenstiess");});
test("zusammenstimmen -> zusammenstimm", function() {deepEqual( Stem("zusammenstimmen"), "zusammenstimm");});
test("zusammenstimmt -> zusammenstimmt", function() {deepEqual( Stem("zusammenstimmt"), "zusammenstimmt");});
test("zusammenstimmte -> zusammenstimmt", function() {deepEqual( Stem("zusammenstimmte"), "zusammenstimmt");});
test("zusammenstimmung -> zusammenstimm", function() {deepEqual( Stem("zusammenstimmung"), "zusammenstimm");});
test("zusammenstoppeln -> zusammenstoppeln", function() {deepEqual( Stem("zusammenstoppeln"), "zusammenstoppeln");});
test("zusammenstoppelt -> zusammenstoppelt", function() {deepEqual( Stem("zusammenstoppelt"), "zusammenstoppelt");});
test("zusammenstoss -> zusammenstoss", function() {deepEqual( Stem("zusammenstoss"), "zusammenstoss");});
test("zusammenstoß -> zusammenstoss", function() {deepEqual( Stem("zusammenstoß"), "zusammenstoss");});
test("zusammenstösst -> zusammenstosst", function() {deepEqual( Stem("zusammenstösst"), "zusammenstosst");});
test("zusammenstößt -> zusammenstosst", function() {deepEqual( Stem("zusammenstößt"), "zusammenstosst");});
test("zusammenströmen -> zusammenstrom", function() {deepEqual( Stem("zusammenströmen"), "zusammenstrom");});
test("zusammensuchend -> zusammensuch", function() {deepEqual( Stem("zusammensuchend"), "zusammensuch");});
test("zusammentrafen -> zusammentraf", function() {deepEqual( Stem("zusammentrafen"), "zusammentraf");});
test("zusammentreffen -> zusammentreff", function() {deepEqual( Stem("zusammentreffen"), "zusammentreff");});
test("zusammenwirken -> zusammenwirk", function() {deepEqual( Stem("zusammenwirken"), "zusammenwirk");});
test("zusammenwohnen -> zusammenwohn", function() {deepEqual( Stem("zusammenwohnen"), "zusammenwohn");});
test("zusammenzählte -> zusammenzahlt", function() {deepEqual( Stem("zusammenzählte"), "zusammenzahlt");});
test("zusammenziehen -> zusammenzieh", function() {deepEqual( Stem("zusammenziehen"), "zusammenzieh");});
test("zusammenzieht -> zusammenzieht", function() {deepEqual( Stem("zusammenzieht"), "zusammenzieht");});
test("zusammenzog -> zusammenzog", function() {deepEqual( Stem("zusammenzog"), "zusammenzog");});
test("zusammenzogen -> zusammenzog", function() {deepEqual( Stem("zusammenzogen"), "zusammenzog");});
test("zusammenzu -> zusammenzu", function() {deepEqual( Stem("zusammenzu"), "zusammenzu");});
test("zusammenzubringen -> zusammenzubring", function() {deepEqual( Stem("zusammenzubringen"), "zusammenzubring");});
test("zusammenzuckte -> zusammenzuckt", function() {deepEqual( Stem("zusammenzuckte"), "zusammenzuckt");});
test("zusammenzuhalten -> zusammenzuhalt", function() {deepEqual( Stem("zusammenzuhalten"), "zusammenzuhalt");});
test("zusammenzuraffen -> zusammenzuraff", function() {deepEqual( Stem("zusammenzuraffen"), "zusammenzuraff");});
test("zusammenzustellen -> zusammenzustell", function() {deepEqual( Stem("zusammenzustellen"), "zusammenzustell");});
test("zusammenzutreffen -> zusammenzutreff", function() {deepEqual( Stem("zusammenzutreffen"), "zusammenzutreff");});
test("zuschanden -> zuschand", function() {deepEqual( Stem("zuschanden"), "zuschand");});
test("zuschauer -> zuschau", function() {deepEqual( Stem("zuschauer"), "zuschau");});
test("zuschauern -> zuschau", function() {deepEqual( Stem("zuschauern"), "zuschau");});
test("zuschauers -> zuschau", function() {deepEqual( Stem("zuschauers"), "zuschau");});
test("zuschaute -> zuschaut", function() {deepEqual( Stem("zuschaute"), "zuschaut");});
test("zuschauten -> zuschaut", function() {deepEqual( Stem("zuschauten"), "zuschaut");});
test("zuschlagen -> zuschlag", function() {deepEqual( Stem("zuschlagen"), "zuschlag");});
test("zuschloss -> zuschloss", function() {deepEqual( Stem("zuschloss"), "zuschloss");});
test("zuschnitt -> zuschnitt", function() {deepEqual( Stem("zuschnitt"), "zuschnitt");});
test("zuschnüren -> zuschnur", function() {deepEqual( Stem("zuschnüren"), "zuschnur");});
test("zuschreiben -> zuschreib", function() {deepEqual( Stem("zuschreiben"), "zuschreib");});
test("zuschreibt -> zuschreibt", function() {deepEqual( Stem("zuschreibt"), "zuschreibt");});
test("zuschrieben -> zuschrieb", function() {deepEqual( Stem("zuschrieben"), "zuschrieb");});
test("zuschritt -> zuschritt", function() {deepEqual( Stem("zuschritt"), "zuschritt");});
test("zuschulden -> zuschuld", function() {deepEqual( Stem("zuschulden"), "zuschuld");});
test("zuschüsse -> zuschuss", function() {deepEqual( Stem("zuschüsse"), "zuschuss");});
test("zusehen -> zuseh", function() {deepEqual( Stem("zusehen"), "zuseh");});
test("zusehends -> zuseh", function() {deepEqual( Stem("zusehends"), "zuseh");});
test("zusendung -> zusend", function() {deepEqual( Stem("zusendung"), "zusend");});
test("züsens -> zus", function() {deepEqual( Stem("züsens"), "zus");});
test("zusetzen -> zusetz", function() {deepEqual( Stem("zusetzen"), "zusetz");});
test("zusetzt -> zusetzt", function() {deepEqual( Stem("zusetzt"), "zusetzt");});
test("züsi -> zusi", function() {deepEqual( Stem("züsi"), "zusi");});
test("züsis -> zusis", function() {deepEqual( Stem("züsis"), "zusis");});
test("zuspätkommens -> zuspatkomm", function() {deepEqual( Stem("zuspätkommens"), "zuspatkomm");});
test("zusprangen -> zusprang", function() {deepEqual( Stem("zusprangen"), "zusprang");});
test("zustand -> zustand", function() {deepEqual( Stem("zustand"), "zustand");});
test("zustande -> zustand", function() {deepEqual( Stem("zustande"), "zustand");});
test("zustände -> zustand", function() {deepEqual( Stem("zustände"), "zustand");});
test("zuständen -> zustand", function() {deepEqual( Stem("zuständen"), "zustand");});
test("zustandes -> zustand", function() {deepEqual( Stem("zustandes"), "zustand");});
test("zuständig -> zustand", function() {deepEqual( Stem("zuständig"), "zustand");});
test("zustands -> zustand", function() {deepEqual( Stem("zustands"), "zustand");});
test("zustandsveränderung -> zustandsverander", function() {deepEqual( Stem("zustandsveränderung"), "zustandsverander");});
test("zustandsveränderungen -> zustandsverander", function() {deepEqual( Stem("zustandsveränderungen"), "zustandsverander");});
test("zustandswechsel -> zustandswechsel", function() {deepEqual( Stem("zustandswechsel"), "zustandswechsel");});
test("zustatten -> zustatt", function() {deepEqual( Stem("zustatten"), "zustatt");});
test("zusteht -> zusteht", function() {deepEqual( Stem("zusteht"), "zusteht");});
test("zustimme -> zustimm", function() {deepEqual( Stem("zustimme"), "zustimm");});
test("zustimmt -> zustimmt", function() {deepEqual( Stem("zustimmt"), "zustimmt");});
test("zustimmung -> zustimm", function() {deepEqual( Stem("zustimmung"), "zustimm");});
test("zustürzte -> zusturzt", function() {deepEqual( Stem("zustürzte"), "zusturzt");});
test("zutage -> zutag", function() {deepEqual( Stem("zutage"), "zutag");});
test("zutageförderung -> zutageforder", function() {deepEqual( Stem("zutageförderung"), "zutageforder");});
test("zutat -> zutat", function() {deepEqual( Stem("zutat"), "zutat");});
test("zuteil -> zuteil", function() {deepEqual( Stem("zuteil"), "zuteil");});
test("zutragen -> zutrag", function() {deepEqual( Stem("zutragen"), "zutrag");});
test("zutragend -> zutrag", function() {deepEqual( Stem("zutragend"), "zutrag");});
test("zuträgern -> zutrag", function() {deepEqual( Stem("zuträgern"), "zutrag");});
test("zuträglich -> zutrag", function() {deepEqual( Stem("zuträglich"), "zutrag");});
test("zuträgliche -> zutrag", function() {deepEqual( Stem("zuträgliche"), "zutrag");});
test("zuträglichkeit -> zutrag", function() {deepEqual( Stem("zuträglichkeit"), "zutrag");});
test("zuträgt -> zutragt", function() {deepEqual( Stem("zuträgt"), "zutragt");});
test("zutrat -> zutrat", function() {deepEqual( Stem("zutrat"), "zutrat");});
test("zutrauen -> zutrau", function() {deepEqual( Stem("zutrauen"), "zutrau");});
test("zutraulich -> zutraulich", function() {deepEqual( Stem("zutraulich"), "zutraulich");});
test("zutraulicher -> zutraulich", function() {deepEqual( Stem("zutraulicher"), "zutraulich");});
test("zutreffen -> zutreff", function() {deepEqual( Stem("zutreffen"), "zutreff");});
test("zutreffend -> zutreff", function() {deepEqual( Stem("zutreffend"), "zutreff");});
test("zutreffende -> zutreff", function() {deepEqual( Stem("zutreffende"), "zutreff");});
test("zutrifft -> zutrifft", function() {deepEqual( Stem("zutrifft"), "zutrifft");});
test("zutrug -> zutrug", function() {deepEqual( Stem("zutrug"), "zutrug");});
test("zutulich -> zutulich", function() {deepEqual( Stem("zutulich"), "zutulich");});
test("zutulicher -> zutulich", function() {deepEqual( Stem("zutulicher"), "zutulich");});
test("zutulichkeit -> zutulich", function() {deepEqual( Stem("zutulichkeit"), "zutulich");});
test("zutütchen -> zututch", function() {deepEqual( Stem("zutütchen"), "zututch");});
test("zuunterst -> zuunterst", function() {deepEqual( Stem("zuunterst"), "zuunterst");});
test("zuverlässig -> zuverlass", function() {deepEqual( Stem("zuverlässig"), "zuverlass");});
test("zuverlässigen -> zuverlass", function() {deepEqual( Stem("zuverlässigen"), "zuverlass");});
test("zuverlässiger -> zuverlass", function() {deepEqual( Stem("zuverlässiger"), "zuverlass");});
test("zuversicht -> zuversicht", function() {deepEqual( Stem("zuversicht"), "zuversicht");});
test("zuversichtlich -> zuversicht", function() {deepEqual( Stem("zuversichtlich"), "zuversicht");});
test("zuviel -> zuviel", function() {deepEqual( Stem("zuviel"), "zuviel");});
test("zuvor -> zuvor", function() {deepEqual( Stem("zuvor"), "zuvor");});
test("zuvörderst -> zuvorderst", function() {deepEqual( Stem("zuvörderst"), "zuvorderst");});
test("zuvorkommend -> zuvorkomm", function() {deepEqual( Stem("zuvorkommend"), "zuvorkomm");});
test("zuvorzutun -> zuvorzutun", function() {deepEqual( Stem("zuvorzutun"), "zuvorzutun");});
test("zuwachs -> zuwach", function() {deepEqual( Stem("zuwachs"), "zuwach");});
test("zuwachses -> zuwachs", function() {deepEqual( Stem("zuwachses"), "zuwachs");});
test("zuwandte -> zuwandt", function() {deepEqual( Stem("zuwandte"), "zuwandt");});
test("zuwarf -> zuwarf", function() {deepEqual( Stem("zuwarf"), "zuwarf");});
test("zuweg -> zuweg", function() {deepEqual( Stem("zuweg"), "zuweg");});
test("zuwege -> zuweg", function() {deepEqual( Stem("zuwege"), "zuweg");});
test("zuweilen -> zuweil", function() {deepEqual( Stem("zuweilen"), "zuweil");});
test("zuwenden -> zuwend", function() {deepEqual( Stem("zuwenden"), "zuwend");});
test("zuwendend -> zuwend", function() {deepEqual( Stem("zuwendend"), "zuwend");});
test("zuwendet -> zuwendet", function() {deepEqual( Stem("zuwendet"), "zuwendet");});
test("zuwendeten -> zuwendet", function() {deepEqual( Stem("zuwendeten"), "zuwendet");});
test("zuwider -> zuwid", function() {deepEqual( Stem("zuwider"), "zuwid");});
test("zuwinken -> zuwink", function() {deepEqual( Stem("zuwinken"), "zuwink");});
test("zuwinkte -> zuwinkt", function() {deepEqual( Stem("zuwinkte"), "zuwinkt");});
test("zuwinkten -> zuwinkt", function() {deepEqual( Stem("zuwinkten"), "zuwinkt");});
test("zuzeiten -> zuzeit", function() {deepEqual( Stem("zuzeiten"), "zuzeit");});
test("zuziehen -> zuzieh", function() {deepEqual( Stem("zuziehen"), "zuzieh");});
test("zuzog -> zuzog", function() {deepEqual( Stem("zuzog"), "zuzog");});
test("zuzogen -> zuzog", function() {deepEqual( Stem("zuzogen"), "zuzog");});
test("zuzuflüstern -> zuzuflust", function() {deepEqual( Stem("zuzuflüstern"), "zuzuflust");});
test("zuzufügen -> zuzufug", function() {deepEqual( Stem("zuzufügen"), "zuzufug");});
test("zuzug -> zuzug", function() {deepEqual( Stem("zuzug"), "zuzug");});
test("zuzüge -> zuzug", function() {deepEqual( Stem("zuzüge"), "zuzug");});
test("zuzügerwesen -> zuzugerwes", function() {deepEqual( Stem("zuzügerwesen"), "zuzugerwes");});
test("zuzuhören -> zuzuhor", function() {deepEqual( Stem("zuzuhören"), "zuzuhor");});
test("zuzunehmen -> zuzunehm", function() {deepEqual( Stem("zuzunehmen"), "zuzunehm");});
test("zuzureden -> zuzured", function() {deepEqual( Stem("zuzureden"), "zuzured");});
test("zuzurichten -> zuzuricht", function() {deepEqual( Stem("zuzurichten"), "zuzuricht");});
test("zuzuschauen -> zuzuschau", function() {deepEqual( Stem("zuzuschauen"), "zuzuschau");});
test("zuzuschlagen -> zuzuschlag", function() {deepEqual( Stem("zuzuschlagen"), "zuzuschlag");});
test("zuzusehen -> zuzuseh", function() {deepEqual( Stem("zuzusehen"), "zuzuseh");});
test("zuzustutzen -> zuzustutz", function() {deepEqual( Stem("zuzustutzen"), "zuzustutz");});
test("zuzuwenden -> zuzuw", function() {deepEqual( Stem("zuzuwenden"), "zuzuw");});
test("zwa -> zwa", function() {deepEqual( Stem("zwa"), "zwa");});
test("zwackt -> zwackt", function() {deepEqual( Stem("zwackt"), "zwackt");});
test("zwang -> zwang", function() {deepEqual( Stem("zwang"), "zwang");});
test("zwange -> zwang", function() {deepEqual( Stem("zwange"), "zwang");});
test("zwangen -> zwang", function() {deepEqual( Stem("zwangen"), "zwang");});
test("zwanges -> zwang", function() {deepEqual( Stem("zwanges"), "zwang");});
test("zwangslage -> zwangslag", function() {deepEqual( Stem("zwangslage"), "zwangslag");});
test("zwangsläufig -> zwangslauf", function() {deepEqual( Stem("zwangsläufig"), "zwangslauf");});
test("zwanzig -> zwanzig", function() {deepEqual( Stem("zwanzig"), "zwanzig");});
test("zwanzigjährigen -> zwanzigjahr", function() {deepEqual( Stem("zwanzigjährigen"), "zwanzigjahr");});
test("zwanzigjähriger -> zwanzigjahr", function() {deepEqual( Stem("zwanzigjähriger"), "zwanzigjahr");});
test("zwanzigmal -> zwanzigmal", function() {deepEqual( Stem("zwanzigmal"), "zwanzigmal");});
test("zwar -> zwar", function() {deepEqual( Stem("zwar"), "zwar");});
test("zweck -> zweck", function() {deepEqual( Stem("zweck"), "zweck");});
test("zweckdienliche -> zweckdi", function() {deepEqual( Stem("zweckdienliche"), "zweckdi");});
test("zwecke -> zweck", function() {deepEqual( Stem("zwecke"), "zweck");});
test("zwecken -> zweck", function() {deepEqual( Stem("zwecken"), "zweck");});
test("zweckentfremdete -> zweckentfremdet", function() {deepEqual( Stem("zweckentfremdete"), "zweckentfremdet");});
test("zweckes -> zweck", function() {deepEqual( Stem("zweckes"), "zweck");});
test("zwecklos -> zwecklos", function() {deepEqual( Stem("zwecklos"), "zwecklos");});
test("zwecklose -> zwecklos", function() {deepEqual( Stem("zwecklose"), "zwecklos");});
test("zweckmässig -> zweckmass", function() {deepEqual( Stem("zweckmässig"), "zweckmass");});
test("zweckmäßig -> zweckmass", function() {deepEqual( Stem("zweckmäßig"), "zweckmass");});
test("zweckmässigen -> zweckmass", function() {deepEqual( Stem("zweckmässigen"), "zweckmass");});
test("zweckmässiger -> zweckmass", function() {deepEqual( Stem("zweckmässiger"), "zweckmass");});
test("zweckmäßiger -> zweckmass", function() {deepEqual( Stem("zweckmäßiger"), "zweckmass");});
test("zweckmässiges -> zweckmass", function() {deepEqual( Stem("zweckmässiges"), "zweckmass");});
test("zweckmässigkeit -> zweckmass", function() {deepEqual( Stem("zweckmässigkeit"), "zweckmass");});
test("zwecks -> zweck", function() {deepEqual( Stem("zwecks"), "zweck");});
test("zweckwidrig -> zweckwidr", function() {deepEqual( Stem("zweckwidrig"), "zweckwidr");});
test("zwei -> zwei", function() {deepEqual( Stem("zwei"), "zwei");});
test("zweideutig -> zweideut", function() {deepEqual( Stem("zweideutig"), "zweideut");});
test("zweideutige -> zweideut", function() {deepEqual( Stem("zweideutige"), "zweideut");});
test("zweideutiger -> zweideut", function() {deepEqual( Stem("zweideutiger"), "zweideut");});
test("zweideutigkeit -> zweideut", function() {deepEqual( Stem("zweideutigkeit"), "zweideut");});
test("zweien -> zweien", function() {deepEqual( Stem("zweien"), "zweien");});
test("zweier -> zweier", function() {deepEqual( Stem("zweier"), "zweier");});
test("zweierlei -> zweierlei", function() {deepEqual( Stem("zweierlei"), "zweierlei");});
test("zweifel -> zweifel", function() {deepEqual( Stem("zweifel"), "zweifel");});
test("zweifelhaft -> zweifelhaft", function() {deepEqual( Stem("zweifelhaft"), "zweifelhaft");});
test("zweifelhafter -> zweifelhaft", function() {deepEqual( Stem("zweifelhafter"), "zweifelhaft");});
test("zweifellehre -> zweifellehr", function() {deepEqual( Stem("zweifellehre"), "zweifellehr");});
test("zweifellos -> zweifellos", function() {deepEqual( Stem("zweifellos"), "zweifellos");});
test("zweifeln -> zweifeln", function() {deepEqual( Stem("zweifeln"), "zweifeln");});
test("zweifelsfreien -> zweifelsfrei", function() {deepEqual( Stem("zweifelsfreien"), "zweifelsfrei");});
test("zweifelsohne -> zweifelsohn", function() {deepEqual( Stem("zweifelsohne"), "zweifelsohn");});
test("zweifelten -> zweifelt", function() {deepEqual( Stem("zweifelten"), "zweifelt");});
test("zweifelvollen -> zweifelvoll", function() {deepEqual( Stem("zweifelvollen"), "zweifelvoll");});
test("zweifenstriges -> zweifenstr", function() {deepEqual( Stem("zweifenstriges"), "zweifenstr");});
test("zweifler -> zweifl", function() {deepEqual( Stem("zweifler"), "zweifl");});
test("zweig -> zweig", function() {deepEqual( Stem("zweig"), "zweig");});
test("zweigchen -> zweigch", function() {deepEqual( Stem("zweigchen"), "zweigch");});
test("zweige -> zweig", function() {deepEqual( Stem("zweige"), "zweig");});
test("zweigen -> zweig", function() {deepEqual( Stem("zweigen"), "zweig");});
test("zweiges -> zweig", function() {deepEqual( Stem("zweiges"), "zweig");});
test("zweiglein -> zweiglein", function() {deepEqual( Stem("zweiglein"), "zweiglein");});
test("zweihändigen -> zweihand", function() {deepEqual( Stem("zweihändigen"), "zweihand");});
test("zweihundert -> zweihundert", function() {deepEqual( Stem("zweihundert"), "zweihundert");});
test("zweihundertachtundfünfzig -> zweihundertachtundfunfz", function() {deepEqual( Stem("zweihundertachtundfünfzig"), "zweihundertachtundfunfz");});
test("zweijährigen -> zweijahr", function() {deepEqual( Stem("zweijährigen"), "zweijahr");});
test("zweikampf -> zweikampf", function() {deepEqual( Stem("zweikampf"), "zweikampf");});
test("zweimal -> zweimal", function() {deepEqual( Stem("zweimal"), "zweimal");});
test("zweimonatszeitschrift -> zweimonatszeitschrift", function() {deepEqual( Stem("zweimonatszeitschrift"), "zweimonatszeitschrift");});
test("zweischneidiges -> zweischneid", function() {deepEqual( Stem("zweischneidiges"), "zweischneid");});
test("zweispännigen -> zweispann", function() {deepEqual( Stem("zweispännigen"), "zweispann");});
test("zweispra -> zweispra", function() {deepEqual( Stem("zweispra"), "zweispra");});
test("zweit -> zweit", function() {deepEqual( Stem("zweit"), "zweit");});
test("zweitägige -> zweitag", function() {deepEqual( Stem("zweitägige"), "zweitag");});
test("zweitausend -> zweitaus", function() {deepEqual( Stem("zweitausend"), "zweitaus");});
test("zweite -> zweit", function() {deepEqual( Stem("zweite"), "zweit");});
test("zweitem -> zweit", function() {deepEqual( Stem("zweitem"), "zweit");});
test("zweiten -> zweit", function() {deepEqual( Stem("zweiten"), "zweit");});
test("zweitenmal -> zweitenmal", function() {deepEqual( Stem("zweitenmal"), "zweitenmal");});
test("zweitens -> zweit", function() {deepEqual( Stem("zweitens"), "zweit");});
test("zweiter -> zweit", function() {deepEqual( Stem("zweiter"), "zweit");});
test("zweites -> zweit", function() {deepEqual( Stem("zweites"), "zweit");});
test("zweithöchsten -> zweithoch", function() {deepEqual( Stem("zweithöchsten"), "zweithoch");});
test("zweiundachtzig -> zweiundachtz", function() {deepEqual( Stem("zweiundachtzig"), "zweiundachtz");});
test("zweiunddreissig -> zweiunddreiss", function() {deepEqual( Stem("zweiunddreissig"), "zweiunddreiss");});
test("zweiundfünfzig -> zweiundfunfz", function() {deepEqual( Stem("zweiundfünfzig"), "zweiundfunfz");});
test("zweiundsechzig -> zweiundsechz", function() {deepEqual( Stem("zweiundsechzig"), "zweiundsechz");});
test("zweiundvierzig -> zweiundvierz", function() {deepEqual( Stem("zweiundvierzig"), "zweiundvierz");});
test("zweiundzwanzig -> zweiundzwanz", function() {deepEqual( Stem("zweiundzwanzig"), "zweiundzwanz");});
test("zwerge -> zwerg", function() {deepEqual( Stem("zwerge"), "zwerg");});
test("zwergfinken -> zwergfink", function() {deepEqual( Stem("zwergfinken"), "zwergfink");});
test("zwickten -> zwickt", function() {deepEqual( Stem("zwickten"), "zwickt");});
test("zwieback -> zwieback", function() {deepEqual( Stem("zwieback"), "zwieback");});
test("zwiegespräch -> zwiegesprach", function() {deepEqual( Stem("zwiegespräch"), "zwiegesprach");});
test("zwiegsang -> zwiegsang", function() {deepEqual( Stem("zwiegsang"), "zwiegsang");});
test("zwiespalt -> zwiespalt", function() {deepEqual( Stem("zwiespalt"), "zwiespalt");});
test("zwiespaltes -> zwiespalt", function() {deepEqual( Stem("zwiespaltes"), "zwiespalt");});
test("zwiesprache -> zwiesprach", function() {deepEqual( Stem("zwiesprache"), "zwiesprach");});
test("zwillich -> zwillich", function() {deepEqual( Stem("zwillich"), "zwillich");});
test("zwillingsmilchflasche -> zwillingsmilchflasch", function() {deepEqual( Stem("zwillingsmilchflasche"), "zwillingsmilchflasch");});
test("zwingen -> zwing", function() {deepEqual( Stem("zwingen"), "zwing");});
test("zwingend -> zwingend", function() {deepEqual( Stem("zwingend"), "zwingend");});
test("zwinger -> zwing", function() {deepEqual( Stem("zwinger"), "zwing");});
test("zwingt -> zwingt", function() {deepEqual( Stem("zwingt"), "zwingt");});
test("zwinkert -> zwinkert", function() {deepEqual( Stem("zwinkert"), "zwinkert");});
test("zwinkerte -> zwinkert", function() {deepEqual( Stem("zwinkerte"), "zwinkert");});
test("zwirchkammer -> zwirchkamm", function() {deepEqual( Stem("zwirchkammer"), "zwirchkamm");});
test("zwirn -> zwirn", function() {deepEqual( Stem("zwirn"), "zwirn");});
test("zwirnfabrik -> zwirnfabr", function() {deepEqual( Stem("zwirnfabrik"), "zwirnfabr");});
test("zwischen -> zwisch", function() {deepEqual( Stem("zwischen"), "zwisch");});
test("zwischendurch -> zwischendurch", function() {deepEqual( Stem("zwischendurch"), "zwischendurch");});
test("zwischenräumen -> zwischenraum", function() {deepEqual( Stem("zwischenräumen"), "zwischenraum");});
test("zwischenzeitlich -> zwischenzeit", function() {deepEqual( Stem("zwischenzeitlich"), "zwischenzeit");});
test("zwitschermusik -> zwitschermus", function() {deepEqual( Stem("zwitschermusik"), "zwitschermus");});
test("zwitschern -> zwitsch", function() {deepEqual( Stem("zwitschern"), "zwitsch");});
test("zwitschernd -> zwitschernd", function() {deepEqual( Stem("zwitschernd"), "zwitschernd");});
test("zwitscherte -> zwitschert", function() {deepEqual( Stem("zwitscherte"), "zwitschert");});
test("zwoa -> zwoa", function() {deepEqual( Stem("zwoa"), "zwoa");});
test("zwölf -> zwolf", function() {deepEqual( Stem("zwölf"), "zwolf");});
test("zwölferstangen -> zwolferstang", function() {deepEqual( Stem("zwölferstangen"), "zwolferstang");});
test("zwölfhundert -> zwolfhundert", function() {deepEqual( Stem("zwölfhundert"), "zwolfhundert");});
test("zwölfjährigen -> zwolfjahr", function() {deepEqual( Stem("zwölfjährigen"), "zwolfjahr");});
test("zwölfmal -> zwolfmal", function() {deepEqual( Stem("zwölfmal"), "zwolfmal");});
test("zwölfte -> zwolft", function() {deepEqual( Stem("zwölfte"), "zwolft");});
test("zwungen -> zwung", function() {deepEqual( Stem("zwungen"), "zwung");});
test("zylinder -> zylind", function() {deepEqual( Stem("zylinder"), "zylind");});
test("zylinderhut -> zylinderhut", function() {deepEqual( Stem("zylinderhut"), "zylinderhut");});
test("zylinderhüte -> zylinderhut", function() {deepEqual( Stem("zylinderhüte"), "zylinderhut");});
test("zylinderhüten -> zylinderhut", function() {deepEqual( Stem("zylinderhüten"), "zylinderhut");});
test("zyniker -> zynik", function() {deepEqual( Stem("zyniker"), "zynik");});
test("zynischen -> zynisch", function() {deepEqual( Stem("zynischen"), "zynisch");});
test("zyperns -> zypern", function() {deepEqual( Stem("zyperns"), "zypern");});
test("zypressen -> zypress", function() {deepEqual( Stem("zypressen"), "zypress");});
